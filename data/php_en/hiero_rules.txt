arg_pair	snmp object specified by ||| string $community	count=3
function_name	has ||| ingres	count=1
function_name	an html ||| htmlfile	count=1
function_name	sets the ||| ms set	count=1
function_name	specific row in ||| db2 fetch row	count=1
arg_pair	of text on ||| string $text	count=1
function_name	memcached::prepend() except ||| prepend by	count=1
arg_pair	on the intensity of ||| int $channel	count=1
function	the [function_name_1] [arg_pair_2] initial step size ||| [function_name_1] [arg_pair_2]	count=4
function_name	extended dom class to ||| node class	count=1
function_name	random ||| random range	count=2
arg_pair	training of the ||| int $neurons_between_reports	count=1
function_name	new attribute [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	subsequent transformations ||| string $namespace string $name	count=1
function_name	add required oauth provider ||| add required	count=1
function_name	master nis server ||| yp master	count=1
function_name	for the previous ||| dbplus prev	count=1
function_name	database ||| dba open	count=2
function_name	in the neural network ||| fann	count=1
function_name	bitwise and ||| and	count=1
return	the server ||| mongocursor	count=1
function_name	trace log ||| trace log	count=1
arg_pair	the portion ||| bool $before_needle string $encoding	count=1
arg_pair	between old_file ||| string $old_file	count=1
return	constructs a new ||| mixed	count=1
arg_pair	occurrence ||| string $haystack string $needle	count=1
function_name	postgresql [function_name_2] ||| [function_name_1] unescape [function_name_2]	count=1
function_name	draws an ellipse ||| imagefilledellipse	count=1
function_name	be used to ||| maxdb debug	count=1
arg_pair	by b and ||| gmp $a gmp $b	count=1
function_name	process ||| get	count=1
function_name	file named ||| openssl pkey export to file	count=1
function_name	an ||| images	count=1
function_name	the last ||| last	count=4
function_name	iis is ||| iis get	count=1
function_name	the current ||| current	count=6
function_name	response [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	rectangle given two ||| rectangle	count=1
function_name	deletes ||| delete file	count=2
arg_pair	string input for fields ||| string $input	count=1
function_name	a specific row ||| db2 fetch	count=1
namespace	task ||| gearmanclient	count=11
function_name	width ||| strwidth	count=1
function_name	opened algorithm ||| mcrypt enc	count=2
function_name	of the text number ||| get text	count=1
namespace	existing hash ||| quickhashintstringhash	count=1
function_name	constants ||| constants	count=2
return	gearmanclient::addtaskhighbackground() ||| bool	count=1
return	identifier ||| object	count=1
function_name	weight decay [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	a built-in type in ||| builtin	count=1
function_name	working copy ||| svn	count=2
namespace	this [namespace] ||| [namespace]	count=6
arg_pair	from the service provider ||| string $http_method	count=1
arg_pair	location ||| resource $context string $location	count=1
function_name	read ||| readlock	count=1
function_name	faceting ||| set facet	count=1
return	move ||| bool	count=1
function_name	the user ||| set	count=1
arg_pair	variables ||| string $newvalue	count=1
function_name	node [function_name] a ||| transform [function_name]	count=1
arg_pair	to memcached::add() except ||| mixed $value int $expiration	count=1
function_name	effective ||| get current	count=1
function_name	policy ||| policy	count=1
arg_pair	file from ||| string $filename	count=1
return	whether the ||| bool	count=14
function_name	clear error string ||| dbplus errcode	count=1
function_name	result row into ||| odbc fetch into	count=3
arg_pair	given variable_key in the ||| resource $shm_identifier int $variable_key	count=1
function_name	dismax [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	by [function_name] toning ||| [function_name] tone image	count=1
namespace	serialized representation of the ||| function	count=1
function_name	patch ||| xdiff string patch	count=1
function_name	[function_name_1] length ||| [function_name_2] [function_name_1]	count=8
function_name	synchronously [function_name] ||| [function_name]	count=1
function_name	random number ||| gmp random range	count=1
arg_pair	to ||| float $max	count=1
function_name	timer event ||| event timer set	count=2
function_name	the last absent index ||| last empty	count=1
function_name	determines the maximum number ||| get cascade max cand	count=1
arg_pair	the specified directory ||| string $directory	count=2
function_name	stub written ||| stub	count=1
arg_pair	start ||| int $start	count=1
function_name	default character set ||| charset	count=1
namespace	of the soapfault ||| soapfault	count=1
function	[function_name_1] key ||| [arg_pair_2] [function_name_1]	count=1
namespace	the api [namespace] which threw ||| [namespace]	count=1
return	allows to ||| bool	count=1
arg_pair	string before it is ||| string $source_string	count=1
function_name	current point ||| pdf	count=1
function_name	used ||| usage	count=1
function_name	[function_name_1] not ||| [function_name_1] [function_name_2]	count=1
function_name	name which ||| array by name	count=1
function_name	the lower [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	fetches a batch ||| batch	count=2
function_name	[function_name_1] file name ||| [function_name_2] [function_name_1]	count=1
function_name	current process a ||| posix	count=1
function_name	the bytecodes [function_name] and calls ||| bcompiler parse [function_name]	count=1
function_name	returns the status ||| get status string	count=2
arg_pair	a given method ||| string $method	count=1
function_name	escapes string ||| pg escape	count=1
namespace	name of the ||| yaf_router	count=1
function_name	timestamp [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	previously set by xsltprocessor::setparameter() ||| xsltprocessor	count=1
function_name	specified by ||| gethostbyaddr	count=1
function_name	determines the maximum number ||| fann get cascade max cand	count=1
function	weblink [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	id ||| id	count=8
function_name	in ||| buffer	count=1
function_name	iterator to ||| iterator	count=1
function_name	absent that is less ||| prev empty	count=1
function_name	character ||| character	count=2
arg_pair	with key ||| string $key	count=1
function_name	from a given ||| ibase fetch	count=1
arg_pair	principal and the ||| string $principal	count=1
arg_pair	a ||| string $key	count=1
function_name	dictionary using ||| dict	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] block [function_name_2]	count=4
function_name	sets the image ||| set	count=1
function_name	returns headers for all ||| imap headers	count=1
function_name	server is a hidden ||| hidden	count=1
function_name	but the field ||| field	count=1
function_name	sql aggregate ||| aggregate	count=1
function_name	the version of the ||| version	count=1
function	[function_name_1] handle ||| [function_name_1] [arg_pair_2]	count=2
return	for a ||| string	count=4
function_name	scm ||| win32	count=2
namespace	the formatting string format ||| function	count=1
function_name	the value of ||| offset get	count=1
function_name	used to traverse over ||| snmprealwalk	count=1
function_name	event handler for ||| event handler	count=1
function_name	and writes ||| write	count=1
function_name	[function_name_1] [function_name_2] of ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] weblink ||| [function_name_1] [function_name_2]	count=1
function_name	data from [function_name_2] ||| [function_name_2] [function_name_1]	count=5
return	into the list of ||| int	count=1
return	that is a ||| bool	count=1
arg_pair	the given object ||| mixed $object string $method_name	count=1
return	of ||| bool	count=5
function_name	stream fstream ||| get stream	count=1
function_name	specific row in ||| fetch	count=1
return	with ||| string	count=2
function_name	lint ||| lint	count=2
function_name	in an [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	a query ||| query	count=2
function_name	send while further call ||| call	count=1
function_name	instruction ||| instruction	count=1
function_name	mongocollection::find() this method ||| find one	count=1
namespace	whether the ||| splfileobject	count=1
function_name	specified ||| gethostbyaddr	count=1
arg_pair	and associated ||| resource $connection_id	count=1
function_name	the increase factor used ||| increase factor	count=1
function_name	of sybase_fetch_row() that ||| sybase fetch assoc	count=1
namespace	the running task ||| gearmanclient	count=2
function_name	epochs determines the minimum ||| cascade min	count=1
arg_pair	the ||| string $arg_separator	count=1
arg_pair	prepares the ||| int $events	count=1
function_name	[function_name_1] not to ||| [function_name_2] [function_name_1]	count=1
function_name	training ||| fann get cascade	count=1
function_name	executes one [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	gd2 ||| imagegd2	count=1
namespace	creates a new timestamp ||| mongotimestamp	count=1
function_name	an arc of circle ||| imagearc	count=1
function_name	the option specified ||| option	count=2
arg_pair	if a valid ||| string $fieldname	count=1
arg_pair	operation so that the ||| mixed $value int $expiration	count=1
function_name	as event handler for ||| event handler	count=1
arg_pair	seconds and nanoseconds which ||| int $nanoseconds	count=1
arg_pair	a resource handle ||| string $separator	count=1
arg_pair	or apache derby database ||| string $database	count=1
function_name	xa transaction among mysql ||| mysqlnd ms xa	count=1
function_name	[function_name_1] attribute ||| put [function_name_1] [function_name_2]	count=1
arg_pair	and associates imagickpixel ||| int $cols int $rows	count=1
namespace	if ||| iteratoriterator	count=1
arg_pair	[arg_pair] connection ||| [arg_pair]	count=1
function_name	to the end of ||| buffer	count=1
arg_pair	new mailbox ||| resource $imap_stream string $old_mbox	count=1
function_name	[function_name_1] pdf ||| [function_name_2] [function_name_1]	count=18
function_name	an ellipse ||| imagefilledellipse	count=1
namespace	set of tasks previously ||| gearmanclient	count=1
return	with any options ||| resource	count=1
function_name	of activation steepnesses in ||| fann get cascade activation steepnesses count	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] image [function_name_1]	count=3
namespace	send to ||| mongocursorinterface	count=1
arg_pair	from the given image ||| int $quality int $filters	count=1
function_name	or continuing ||| loop	count=1
function_name	[function_name_1] bound term ||| [function_name_2] [function_name_1]	count=10
function_name	is currently valid ||| valid	count=1
arg_pair	of any pixel that ||| int $channel	count=1
function_name	active ||| active	count=1
function_name	with type stream ||| get stream	count=1
arg_pair	and direction of the ||| int $size int $direction	count=1
arg_pair	given method ||| string $method	count=1
arg_pair	remote_socket ||| string $remote_socket	count=1
arg_pair	the levels of ||| float $whitepoint int $channel	count=1
arg_pair	str with all alphabetic ||| string $str string $encoding	count=1
function_name	name of the ||| get current	count=1
function_name	file with a binary ||| binary	count=1
namespace	doubly linked list ||| spldoublylinkedlist	count=1
arg_pair	a result set listing ||| string $schema string $table-name	count=2
return	file that cannot ||| void	count=1
function_name	calculates [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	image onto ||| imagick	count=1
function_name	csr and ||| csr export	count=2
namespace	if the iterator ||| iteratoriterator	count=1
function_name	[function_name_1] specified ||| [function_name_1] [function_name_2]	count=2
namespace	instance and saves it ||| function	count=1
return	for a set ||| bool	count=1
arg_pair	to html numeric ||| string $encoding bool $is_hex	count=1
namespace	not [namespace] ||| [namespace]	count=1
function	for the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	mongoid is ||| mongoid	count=1
arg_pair	of seconds and nanoseconds ||| int $seconds int $nanoseconds	count=1
function_name	a row ||| ibase	count=1
arg_pair	character code to ||| string $encoding bool $is_hex	count=1
function_name	the number ||| get number	count=1
function_name	flags to be ||| flags	count=1
namespace	attached iterator instances ||| multipleiterator	count=1
function_name	escape the given ||| escape	count=1
function	binds a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	vector subtraction ||| sub	count=1
arg_pair	a bson document ||| string $bson array $typemap	count=1
function_name	server host name ||| host	count=1
arg_pair	fetches ||| array $ctor_args	count=1
function_name	blob for reading ||| blob	count=1
function_name	opened mode outputs blocks ||| mcrypt enc is block mode	count=1
arg_pair	returns str with ||| string $encoding	count=1
function_name	adds a new page ||| pdf begin page	count=1
function_name	stroking color ||| get gray stroke	count=1
arg_pair	if no database ||| string $collection mixed $id	count=1
namespace	any ||| function	count=1
return	route which ||| string	count=1
arg_pair	display a ||| resource $fdf_document	count=1
function_name	function replaces [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] boost ||| [function_name_2] [function_name_1]	count=1
function_name	a single column ||| column	count=1
function_name	first [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	format ||| int $format	count=1
function_name	new iterator from an ||| iterator	count=1
function_name	working copy or repository ||| svn	count=1
function_name	saves the ||| save	count=1
function_name	sets ||| set parameter	count=2
function_name	title visible ||| title	count=1
function_name	line number from a ||| line	count=1
return	to the full available ||| bool	count=1
function_name	next index present ||| next	count=1
namespace	the array of ||| function	count=2
arg_pair	used in subsequent transformations ||| string $namespace string $name	count=1
namespace	off ||| oauth	count=1
arg_pair	derby database ||| string $database	count=1
arg_pair	an ||| int $backlog mixed $target	count=1
function_name	returns the hostname ||| get	count=1
function_name	handle into a mysqlnd ||| uh convert to mysqlnd	count=1
function_name	servers started by mysqlnd_ms_xa_begin() ||| mysqlnd ms xa	count=1
function_name	be called ||| loop	count=1
function_name	requested class glo class ||| glo	count=1
function_name	opens a large object ||| open	count=1
function_name	is similar to msql_fetch_array() ||| msql	count=1
namespace	hash in the ||| quickhashstringinthash	count=1
arg_pair	memcached::getdelayed() except ||| callable $value_cb	count=1
function_name	message reported ||| message	count=1
function_name	the activation steepness ||| activation steepness	count=3
function	[function_name_1] associates imagickpixel ||| [arg_pair_2] [function_name_1]	count=2
function_name	sybase ||| sybase	count=2
return	maxdb resource suitable ||| resource	count=1
function_name	changes phps current ||| chdir	count=1
arg_pair	the given ||| resource $psdoc	count=2
function_name	the spl ||| spl autoload	count=1
function_name	action with parameters ||| action get	count=1
function_name	[function_name_1] name ||| [function_name_2] [function_name_1]	count=36
function_name	unnecessary the phar::startbuffering() method ||| buffering	count=1
arg_pair	with data ||| array $data	count=1
arg_pair	determining the ||| resource $ann	count=1
arg_pair	[arg_pair] bbcode_create() ||| [arg_pair]	count=2
arg_pair	the given ||| int $limit	count=1
function_name	[function_name_1] elements uri ||| [function_name_1] [function_name_2]	count=2
arg_pair	the socket to a ||| string $dsn	count=1
namespace	only used by ||| mongoid	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=6
function_name	[function_name_1] vector iv ||| [function_name_2] [function_name_1]	count=2
function	single column [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	returns a ||| string $number int $frombase	count=1
function_name	given local tag name ||| tag name	count=1
namespace	route which ||| yaf_router	count=1
function_name	from an odbc query ||| odbc fetch array	count=1
function_name	[function_name] value ||| [function_name]	count=3
arg_pair	and ||| resource $connection_id string $qualifier	count=1
function_name	to facet ||| facet date start	count=1
function_name	gets the value ||| get	count=1
arg_pair	or ||| resource $imap_stream mixed $file	count=1
function_name	specified return [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	submit the ||| submit to	count=1
arg_pair	of an external ||| string $alias	count=1
arg_pair	the associative ||| int $enc_type	count=1
function_name	provided ||| ctype cntrl	count=2
function_name	occurrence of case-insensitive ||| grapheme stristr	count=1
arg_pair	an option on the ||| int $option	count=1
function_name	spacing for the ||| space	count=2
arg_pair	replaced with ||| mixed $search	count=1
namespace	the processing of ||| function	count=1
function_name	and region ||| and region	count=2
function_name	[function_name_1] graphics ||| [function_name_2] [function_name_1]	count=1
namespace	file is marked as ||| ktaglib_mpeg_audioproperties	count=1
function_name	user password used ||| fbsql password	count=1
function_name	[function_name_1] query parser ||| [function_name_1] [function_name_2]	count=4
namespace	and returns ||| sqlite3stmt	count=1
function_name	get the column names ||| column names	count=1
function_name	elapsed [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	opposite of htmlentities() ||| string $string	count=1
function_name	to the user ||| user	count=1
function_name	connection type corresponding ||| geoip id by	count=1
function_name	stream or ||| stream	count=2
function	[function_name_1] namespaceuri ||| [function_name_1] [arg_pair_2]	count=3
function_name	font and prepares it ||| pdf load font	count=1
function_name	truncates string ||| strimwidth	count=1
function_name	which ||| get	count=1
return	a persistent ||| bool	count=1
function_name	prints [function_name] inside ||| [function_name] rect	count=1
function_name	the sarprop step error ||| sarprop step error	count=3
function_name	fills a pdf ||| pdf fill pdfblock	count=3
function_name	represented with existing information ||| metadata	count=1
function_name	log ||| log	count=3
function_name	date ||| date string	count=2
function_name	from a file ||| file	count=1
arg_pair	column of the result ||| resource $result int $column	count=1
function_name	the connection ||| database	count=1
function_name	identifier ||| fetch object	count=2
arg_pair	puts a key-value ||| mixed $keys	count=1
arg_pair	given field ||| resource $fdf_document string $fieldname	count=5
arg_pair	array into an ||| int $storage	count=1
return	function [return] call ||| [return]	count=1
function	to creating [arg_pair_2] ||| [function_name_1] string $progid [arg_pair_2]	count=1
arg_pair	two paths path1 ||| int $rev1	count=1
arg_pair	row as a pseudo-object ||| resource $result_id int $fetch_flag	count=1
function_name	parent node of the ||| parent	count=1
function_name	image obtained ||| imagecreatefromxbm	count=1
function_name	to be made permanent ||| cmit	count=1
function_name	the [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	begins after the first ||| begin	count=1
function_name	commits completes all ||| commit	count=1
arg_pair	an exact match ||| imagick $imagick	count=1
return	is not for ||| bool	count=1
arg_pair	the opposite of ||| string $string	count=1
function_name	list of all existing ||| list	count=1
arg_pair	from domain returned by ||| string $domain string $codeset	count=1
function	[function_name_1] namespaceuri named ||| [function_name_1] [arg_pair_2]	count=4
function_name	a random number ||| gmp random range	count=1
function_name	lob object ||| lob2 seek	count=1
arg_pair	on a socket stream ||| eventbase $base mixed $socket	count=1
function_name	any pixel color ||| unique	count=1
function_name	[function_name_1] size ||| [function_name_1] [function_name_2]	count=14
function_name	adds the file ||| add	count=1
function_name	escape ||| escape string	count=4
arg_pair	a directory ||| string $directory resource $context	count=1
arg_pair	up to length - ||| resource $zp int $length	count=1
arg_pair	name0 is a ||| string $name0	count=1
function_name	retrieve ||| get	count=3
return	error ||| int	count=1
function_name	and ||| xdiff	count=1
function_name	sybase_fetch_row() that uses ||| sybase fetch	count=1
arg_pair	given pattern ||| string $pattern	count=1
return	checks ||| bool	count=7
function_name	[function_name_1] id ||| [function_name_2] [function_name_1]	count=3
return	effective in ||| string	count=1
function_name	a running service ||| service	count=1
function_name	structure ||| imap bodystruct	count=2
arg_pair	the size of the ||| int $level	count=1
function_name	[function_name_1] in ||| [function_name_2] [function_name_1]	count=5
function_name	a blob that has ||| blob	count=2
function_name	the current cipher ||| cipher info	count=1
arg_pair	the ||| int $frequency string $field_override	count=1
function_name	passed variables and add ||| add vars	count=1
arg_pair	as fields delimiter ||| string $null_as	count=3
function_name	dns resource ||| dns get record	count=1
arg_pair	b where ||| gmp $a gmp $b	count=1
function_name	sort fields ||| sort fields	count=2
function_name	stride value that will ||| stride for	count=1
arg_pair	acts very ||| string $username	count=1
function_name	arg /cosh ||| tanh	count=1
function_name	with gearmanclient::addtask() ||| run	count=1
function_name	fills ||| ps fill	count=3
return	connection to ||| bool	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] extension [arg_pair_2]	count=3
function	[function_name_1] indexed ||| [arg_pair_2] [function_name_1]	count=1
function_name	external entity loader ||| external entity loader	count=1
return	event from ||| bool	count=1
function_name	last tuple ||| dbplus last	count=1
namespace	set by xsltprocessor::setparameter() ||| xsltprocessor	count=1
arg_pair	and returns the oid ||| resource $connection mixed $object_id	count=1
function_name	only used by ||| state	count=1
function_name	training patterns in the ||| fann	count=1
function_name	supported ||| supported	count=3
arg_pair	or the closest possible ||| int $green	count=1
function_name	when a namespace is ||| namespace	count=1
function_name	[function_name_1] rendering ||| [function_name_1] [function_name_2]	count=3
namespace	a shell function and ||| function	count=1
return	in a ||| int	count=1
arg_pair	color [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=5
function_name	variables defined in the [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	pem ||| array $configargs	count=1
function_name	a row as ||| fetch	count=1
arg_pair	offset ||| int $length	count=1
function_name	set the ||| snmp2 set	count=1
function_name	power ||| pow	count=2
arg_pair	is a stream ||| string $algorithm	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cascadetrain on [function_name_2]	count=1
function_name	field from the ||| field	count=1
namespace	one row of data ||| function	count=5
function_name	event handler for ||| set event handler	count=1
namespace	after a ||| evloop	count=1
function_name	[function_name_1] on phrase ||| [function_name_2] [function_name_1]	count=1
namespace	for maxdb_options() and maxdb_real_connect() ||| function	count=1
function_name	[function_name_1] handler in ||| [function_name_1] [function_name_2]	count=1
function_name	determines the maximum number ||| fann get cascade max	count=1
function_name	constraints [function_name] ||| [function_name] missing	count=1
function	[function_name_1] [arg_pair_2] ||| function int uopz [function_name_1] [arg_pair_2]	count=8
function_name	this call starts ||| run	count=1
arg_pair	correspond ||| array $ctorparams	count=1
function_name	[function_name_1] sqlite ||| [function_name_2] [function_name_1]	count=2
namespace	entry to the hash ||| quickhashstringinthash	count=1
arg_pair	or socket_accept() functions ||| int $length	count=1
function_name	the next event loop ||| event	count=1
function_name	return ||| return	count=4
function_name	a given font ||| imagepsslantfont	count=1
arg_pair	that an ||| imagick $imagick	count=1
function_name	value of word spacing ||| get word space	count=1
namespace	this function determines whether ||| function	count=1
function_name	a row in ||| fetch assoc	count=1
function_name	new ||| content new	count=2
function_name	handler callback ||| handler	count=2
return	to the full ||| bool	count=1
namespace	according to the ||| function	count=2
function_name	any ||| bzerrstr	count=1
function_name	learning rate ||| learning rate	count=3
function_name	lock on ||| lock	count=1
return	to the specified row ||| bool	count=1
function_name	interface names ||| interface names	count=2
return	descriptor of a socket ||| int	count=1
arg_pair	set as the ||| string $error_msg int $error_type	count=1
arg_pair	the key ||| string $key int $timeout	count=1
function_name	[function_name_1] timezone ||| [function_name_1] [function_name_2]	count=2
arg_pair	a prepared statement ||| resource $connection	count=2
function_name	request authenticator is needed ||| request authenticator	count=1
namespace	the iterator ||| iteratoriterator	count=1
function_name	parsers and ||| create from	count=1
arg_pair	clients that ||| mixed $value	count=1
function_name	given record ||| record	count=1
function_name	of encoding the ||| encoding	count=1
return	get the ||| array	count=1
function	check with [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	valid from [return] ||| [return]	count=3
arg_pair	at middle point ||| float $x	count=1
arg_pair	the color defined by ||| float $fuzz int $channel	count=1
function_name	vector [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	reading ||| sqlsrv	count=1
namespace	key in the ||| function	count=1
function_name	received events ||| now	count=1
function_name	step error ||| step error	count=8
function_name	forward current execution process ||| forward	count=1
function_name	non-empty language tag you ||| broker	count=1
arg_pair	maximum length [arg_pair] ||| [arg_pair]	count=1
arg_pair	values of array1 with ||| array $array1 array $array2	count=1
function_name	is a comment ||| comment	count=1
arg_pair	coordinate ||| float $sx	count=1
function_name	set [function_name_2] ||| [function_name_2] [function_name_1]	count=23
return	text position [return] 0 ||| [return]	count=1
arg_pair	and returns a ||| string $separator	count=1
function_name	data in input ||| input	count=2
function	rdd database [arg_pair_2] ||| [function_name_1] create string $filename [arg_pair_2]	count=1
function_name	returns an ||| msg get	count=1
return	will look for a ||| void	count=1
arg_pair	starting from object_id ||| string $object_id	count=2
function_name	backpropagation neural network ||| fann	count=5
arg_pair	parsing location ||| string $location	count=1
function_name	[function_name_1] counts ||| [function_name_1] [function_name_2]	count=1
arg_pair	whitespace or other characters ||| string $character_mask	count=1
function_name	output [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	maximum number ||| cascade max cand	count=1
arg_pair	of the specified mysqlnd ||| bool $silent int $passwd_len	count=1
function_name	sends a request ||| pg send	count=2
namespace	of the hash ||| quickhashintstringhash	count=1
arg_pair	a ||| string $sql_param	count=1
arg_pair	requirements of the ||| int $width	count=1
return	restarts the periodic watcher ||| void	count=1
function_name	border color for ||| border color	count=2
function_name	stopped instance ||| stopped	count=1
function_name	required [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	file ||| pharfileinfo	count=2
function_name	an open slob object ||| slob	count=1
arg_pair	string str with a ||| string $str	count=2
function_name	property [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	creates a ||| int $sec	count=1
function_name	increase or decrease debugging ||| apd set	count=1
function	registry [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	of the [function_name] soapserver ||| get [function_name]	count=1
function_name	new attribute node ||| attribute node	count=1
function_name	function sets ||| set	count=1
function_name	stat call updates ||| stat	count=1
function_name	[function_name_1] message from ||| [function_name_2] [function_name_1]	count=2
namespace	current directoryiterator item ||| directoryiterator	count=7
function_name	maxdb_options() and maxdb_real_connect() ||| maxdb	count=1
function_name	two php-standardized [function_name] ||| [function_name] compare	count=2
function_name	socket resource ||| socket	count=4
function_name	returns the variable ||| get	count=1
function_name	the mode is for ||| mode	count=1
namespace	should not ||| pharfileinfo	count=1
function_name	3 parts: the ||| footer	count=1
arg_pair	the item will be ||| mixed $value int $expiration	count=1
function_name	[function_name_1] the child ||| [function_name_1] [function_name_2]	count=3
arg_pair	a ||| resource $font_index	count=1
arg_pair	that the item will ||| mixed $value int $expiration	count=1
function_name	field to ||| field	count=4
function_name	event loop ||| event	count=1
function_name	closes an image ||| close image	count=1
namespace	event ||| evloop	count=1
arg_pair	a class or function ||| string $class string $function	count=1
arg_pair	during training [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	disk-based [function_name] ||| [function_name]	count=1
function_name	all pending ||| all	count=1
function_name	field ||| add field	count=2
function_name	array from an odbc ||| odbc	count=1
function_name	in the users query ||| query	count=1
arg_pair	the ||| int $blue	count=1
function_name	daemon ||| list	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] set [function_name_1]	count=8
function_name	block ||| block	count=4
function_name	representing the image obtained ||| imagecreatefromxpm	count=1
function_name	sets the cascade output ||| fann set cascade output	count=1
function_name	[function_name_1] write operations ||| [function_name_1] [function_name_2]	count=1
function_name	moves mail ||| mail move	count=2
arg_pair	filtertype ||| resource $image int $filtertype	count=1
function_name	much [function_name] while ||| [function_name]	count=1
function_name	returns the [function_name_2] ||| [function_name_1] frame [function_name_2]	count=2
namespace	the session storage ||| sessionhandlerinterface	count=1
arg_pair	filename into the ||| string $filename	count=1
return	defined ||| bool	count=1
function_name	the last error message ||| error	count=1
return	of ||| void	count=1
namespace	current node as ||| xmlreader	count=1
return	turns off ||| bool	count=1
function_name	the attribute ||| attribute	count=1
arg_pair	is a wrapper for ||| string $note_name string $note_value	count=1
namespace	used to ||| pharfileinfo	count=1
function_name	hostname ||| hostname	count=1
function_name	changes the default external ||| set external	count=1
function_name	it with spelling alternatives ||| quick	count=1
function_name	fetch a request token ||| request token	count=1
function_name	csr ||| csr export	count=3
function_name	the blob length ||| ibase blob	count=1
function_name	the name of ||| current	count=1
function_name	is not for ||| disable	count=1
arg_pair	result ||| resource $result	count=6
function_name	from the buffer provided ||| add	count=1
function_name	entries stored in ||| ldap next entry	count=2
function_name	[function_name_1] shadow ||| [function_name_2] [function_name_1]	count=2
function_name	boost value for the ||| get boost	count=1
function_name	name ||| database	count=1
return	the classname of ||| void	count=1
function_name	haruencoder currently used in ||| current encoder	count=1
function_name	interword spacing ||| interword spacing	count=2
function_name	return the raw characters ||| terms return raw	count=1
function_name	[function_name] filesystem ||| [function_name] sftp lstat	count=1
function_name	filter ||| expand filter	count=1
function_name	data assumed to be ||| utf8	count=1
arg_pair	object and ||| resource $connection	count=1
function_name	step-size is ||| rprop delta	count=1
arg_pair	the result-set ||| int $maxlen	count=1
function_name	a row in a ||| db2 fetch	count=1
function_name	returns client per-process statistics ||| get client stats	count=1
function_name	anonymous oracle ||| oci	count=1
function_name	the buffer provided ||| buffer	count=1
arg_pair	to use mapreduce ||| array $pipeline	count=1
return	this ||| string	count=8
return	added with gearmanclient::addtask() gearmanclient::addtaskhigh() ||| bool	count=1
function_name	[function_name_1] e raised ||| [function_name_2] [function_name_1]	count=1
function_name	use [function_name_2] ||| [function_name_2] [function_name_1] phrase	count=2
function_name	or decrease debugging in ||| apd set	count=1
arg_pair	mask [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	next ||| dbplus next	count=2
arg_pair	a specific ||| string $version	count=1
function_name	filter query determines ||| filter query	count=1
namespace	first point of ||| function	count=1
function_name	query ||| unbuffered query	count=1
arg_pair	level to the value ||| int $level	count=1
function_name	function is ||| set	count=1
namespace	from the ||| function	count=1
namespace	operators ||| sphinxclient	count=1
arg_pair	associate data to ||| mixed $data	count=1
function_name	creates a [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	value for use in ||| string $value	count=1
function_name	array from an odbc ||| odbc fetch	count=1
namespace	to the underlying driver ||| pdo	count=1
function_name	wbmp version ||| imagewbmp	count=1
namespace	for new iteration ||| tokyotyrantiterator	count=1
function_name	motion [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	password for the given ||| fbsql set password	count=1
arg_pair	puts a key-value pair ||| mixed $keys string $value	count=1
arg_pair	the ||| int $columns int $rows	count=1
function_name	an animated image ||| set image ticks per second	count=1
return	on disk i/o ||| resource	count=1
function_name	scales the ||| fann scale output	count=1
return	into smaller ||| string	count=1
arg_pair	a combination of fbsql_fetch_row() ||| int $result_type	count=1
function_name	a ||| id by name	count=1
arg_pair	row of data from ||| resource $result_identifier int $fetch_flag	count=1
function_name	path for ||| dict path	count=2
arg_pair	filename from the ||| string $filename	count=1
arg_pair	distinguished name to be ||| array $configargs array $extraattribs	count=1
function_name	[function_name_1] one of ||| [function_name_1] [function_name_2]	count=1
function_name	default external entity loader ||| external entity loader	count=1
function_name	should only ||| set metadata	count=1
namespace	in the storage ||| splobjectstorage	count=1
function_name	[function_name_1] blocking or ||| [function_name_1] [function_name_2]	count=1
arg_pair	thats associated with the ||| string $database_name resource $link_identifier	count=1
function_name	cipher [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	converts ||| function	count=1
function_name	clears sets ||| gmp clrbit	count=1
return	block on disk i/o ||| resource	count=1
namespace	the function without the ||| reflectionfunctionabstract	count=1
function_name	method ||| method	count=5
function_name	data from a ||| load from	count=1
function	[function_name_1] that an ||| [arg_pair_2] [function_name_1]	count=3
function_name	of the [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	execute [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=8
function_name	or ||| imap	count=1
function_name	determines the maximum ||| max	count=1
function_name	current element ||| get	count=1
arg_pair	[arg_pair_1] mssql_connect() with ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	descale input ||| fann descale	count=1
function_name	for reading ||| sqlsrv fetch	count=1
return	and restarts ||| void	count=1
function_name	opened mode is ||| mcrypt enc is	count=2
arg_pair	populate a ||| string $regex	count=1
arg_pair	old_file and new_file ||| string $new_file	count=1
return	internally [return] ||| [return]	count=2
function	[function_name_1] a stream ||| [arg_pair_2] [function_name_1]	count=1
function_name	truncates string ||| mb strimwidth	count=1
function_name	each virtual server ||| get server by path	count=1
function	reference [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	for some amount of ||| mongocursor	count=1
function_name	main filter query determines ||| filter query	count=1
arg_pair	prepares for an ||| resource $id	count=1
function_name	space character ||| space char	count=1
namespace	to all job servers ||| gearmanclient	count=1
function_name	the number of inputs ||| num	count=1
function_name	name used with ||| fbsql	count=1
function_name	called when the iteration ||| iteration	count=1
arg_pair	from object_id and ||| string $object_id string $timeout	count=1
namespace	the cursor ||| mongocursorinterface	count=1
function_name	computes the difference ||| array udiff assoc	count=1
function_name	[function_name] opcache ||| [function_name]	count=1
function_name	transforms ||| transform to	count=1
function_name	[function_name] oracle ||| [function_name]	count=1
arg_pair	real0 ||| array $real0	count=1
function_name	[function_name_1] border color ||| [function_name_1] [function_name_2]	count=3
function_name	which is effective in ||| get	count=1
function_name	directories optionally ||| ls	count=1
function_name	writes data ||| import	count=1
return	[return] exclusive ||| [return]	count=1
function_name	provided string ||| ctype cntrl	count=1
function_name	[function_name_1] client libraries ||| [function_name_1] [function_name_2]	count=1
arg_pair	contrast of ||| float $beta int $channel	count=1
namespace	stylesheet given by the ||| xsltprocessor	count=3
arg_pair	the color defined ||| float $fuzz int $channel	count=1
function_name	[function_name_1] [function_name_2] in the ||| int [function_name_1] [function_name_2]	count=1
arg_pair	mssql_connect() with ||| bool $new_link	count=1
function_name	[function_name_1] time ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] informix ||| [function_name_2] [function_name_1]	count=2
function_name	image such ||| sub image	count=1
arg_pair	is a ||| string $algorithm	count=1
function_name	sets an arbitrary ||| set	count=1
function_name	frees ||| free	count=6
arg_pair	by assoc_array ||| int $options	count=1
function_name	root ||| root element	count=2
function_name	[function_name_1] local ||| [function_name_1] [function_name_2]	count=1
function_name	page of ||| page	count=1
function_name	[function_name_1] name to ||| [function_name_1] [function_name_2]	count=1
function_name	the ||| get current	count=3
function_name	stored with a file ||| metadata	count=1
arg_pair	the desired dimensions with ||| int $filter float $blur	count=1
function_name	[function_name_1] check with ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] comment of ||| ziparchive bool [function_name_1] [function_name_2] index int $index string	count=1
function_name	a batch ||| write batch	count=1
namespace	an existing hash ||| quickhashinthash	count=1
function_name	new ssl buffer ||| ssl filter	count=1
function	[function_name_1] given entry ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	set the uri containing ||| string $uri	count=1
function_name	tags stripped ||| strip tags	count=1
function_name	runs a [function_name_2] ||| [function_name_1] [function_name_2]	count=11
function_name	valid [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	be represented with existing ||| void	count=1
function_name	drops this ||| drop	count=1
namespace	associative array [namespace] ||| [namespace]	count=2
arg_pair	the oid of the ||| string $oid	count=1
function_name	row ||| db2 fetch row	count=2
function_name	the shared secret is ||| radius server secret	count=1
function_name	computes ||| array udiff assoc	count=2
function_name	sort direction fields ||| sort	count=1
function_name	fetch dns ||| dns	count=1
function_name	open file ||| file	count=1
function_name	returns internal information ||| get internal info	count=9
arg_pair	socket_create() or socket_accept() functions ||| resource $socket int $length	count=1
function_name	first ||| ldap first	count=1
arg_pair	content ||| string $content string $mimetype	count=1
namespace	returns the host name ||| function	count=1
arg_pair	value of var using ||| mixed $var	count=1
function_name	phrase queries explicitly included ||| phrase	count=1
function_name	[function_name_1] iterator that ||| [function_name_2] [function_name_1]	count=2
function_name	queries ||| delete by queries	count=1
namespace	continuing the ||| evloop	count=1
function_name	frees resources associated ||| free	count=1
function_name	header string signature based ||| header	count=1
function_name	dabase header ||| tune	count=1
return	result of the ||| int	count=1
function_name	registered __autoload() [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	tar- or zip-based ||| string $indexfile string $webindexfile	count=1
function_name	stride ||| stride	count=1
function_name	line number of the ||| line	count=1
function_name	into the image ||| image	count=1
function_name	send soap ||| soap	count=1
function_name	reads up to ||| read	count=1
return	[return] the ||| [return]	count=7
namespace	is effective in ||| yaf_router	count=1
arg_pair	a target within the ||| int $page string $dest	count=1
function_name	real path to the ||| real path	count=1
namespace	pdostatement ||| pdostatement	count=1
function_name	retrieves the version ||| get version	count=1
function_name	if ||| memcache	count=1
arg_pair	given [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=5
function_name	socket resource or ||| socket	count=1
function	[function_name_1] variable to ||| [function_name_1] [arg_pair_2]	count=1
function_name	mode for ||| mode	count=3
function_name	file named ||| file	count=2
function_name	of the query syntax ||| query chars	count=1
function_name	raw request ||| raw request	count=4
function_name	the last value ||| last insert	count=2
return	this call starts ||| bool	count=1
function_name	a ||| create function	count=1
arg_pair	recognized as a ||| string $filename bool $executable	count=1
function_name	resets the [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	quoted ||| quoted	count=1
function_name	[function_name_1] required oauth ||| [function_name_2] [function_name_1]	count=1
function_name	only used by php ||| set state	count=1
function_name	iis ||| iis	count=1
function_name	maximum supported key ||| key	count=1
function_name	used by php ||| state	count=1
function_name	selects the default ||| maxdb select db	count=1
arg_pair	serializes the passed ||| resource $packet_id	count=1
function_name	resets ||| firstkey	count=1
function_name	intersection ||| array uintersect assoc	count=2
function_name	the maximum ||| get cascade max cand	count=1
arg_pair	object ||| object $object	count=1
arg_pair	with the given variable_key ||| resource $shm_identifier int $variable_key	count=1
namespace	host name of ||| function	count=1
arg_pair	is identical to htmlspecialchars() ||| bool $double_encode	count=1
function	row from [arg_pair_2] ||| [function_name_1] array [arg_pair_2]	count=1
function_name	database ||| db	count=3
function_name	the [function_name] of characters ||| [function_name] field length	count=1
arg_pair	given number of characters ||| string $str	count=1
namespace	cleanest way ||| mongoclient	count=1
function_name	selects a ||| select	count=1
function_name	the structure ||| imap bodystruct	count=1
function_name	the entries stored ||| ldap next entry	count=2
function_name	during serialization of the ||| serialize	count=1
arg_pair	indexed by ||| int $row_number	count=1
arg_pair	principal and ||| string $password	count=1
function	[function_name_1] specified entry ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] types of ||| [function_name_2] [function_name_1]	count=1
function_name	rows fetched ||| rows	count=1
function_name	route which is ||| get current	count=1
arg_pair	or the closest possible ||| int $blue	count=1
function_name	blocking ||| blocking	count=1
function_name	is an ||| fetch array	count=3
function_name	a custom sort function ||| dbx sort	count=1
function_name	starts a [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function	[function_name_1] the flatness ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	stores them in fd ||| array $fd	count=1
function_name	element [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	to creating a ||| get active	count=1
function_name	configuration ||| config	count=1
function_name	multibyte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	pixel height ||| imagefontheight	count=1
arg_pair	on a socket ||| eventbase $base mixed $socket	count=1
function_name	sybase ||| sybase data	count=1
arg_pair	a prepared ||| string $stmtname	count=2
function_name	information fields ||| info	count=1
function_name	does not complete successfully ||| fail	count=1
arg_pair	pattern ||| string $string	count=1
function_name	query object ||| query	count=1
arg_pair	registers a php ||| string $name mixed $callback	count=1
function_name	of sybase_fetch_row() that uses ||| sybase fetch	count=1
arg_pair	result of left ||| mixed $left	count=1
function_name	closes ||| finalize	count=1
function_name	generates a url-encoded ||| http build	count=1
function_name	the working directory ||| svn	count=1
function_name	pixels from an ||| pixels	count=1
function_name	attribute ||| attribute	count=13
function_name	in the [function_name] query ||| get [function_name] insert id	count=1
return	function for the ||| bool	count=2
function_name	and [function_name] specified distortion ||| [function_name] image channel distortion	count=1
arg_pair	the given host and ||| string $host	count=1
return	is ||| bool	count=11
arg_pair	bson document i ||| array $typemap	count=1
arg_pair	object and ||| resource $connection mixed $object_id	count=1
function_name	iterator to the position ||| iterator	count=1
function_name	width and sets the ||| set	count=1
function_name	method adds ||| add	count=4
function_name	get a query object ||| query	count=1
function_name	image in an ||| image	count=1
namespace	line from the ||| splfileobject	count=1
function_name	the backtick operator ||| shell exec	count=1
arg_pair	hook system if a ||| yaf_request_abstract $request yaf_response_abstract $response	count=1
function_name	time for the previously ||| time	count=1
function_name	true if ||| mcrypt module is	count=1
function_name	[function_name_1] low priority ||| [function_name_1] [function_name_2]	count=1
function_name	version number [function_name_1] [function_name_2] is linked with ||| [function_name_1] [function_name_2] version	count=1
function_name	cannot be ||| set	count=1
function_name	use spanscorer ||| use	count=2
function_name	response for ||| handle response	count=1
function_name	a space character according ||| space char	count=1
arg_pair	[arg_pair_1] a page ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	reads from ||| read	count=1
function_name	rdd database ||| rrd	count=1
function	[function_name_1] files within ||| bool [function_name_1] string $pathto [arg_pair_2] bool $overwrite	count=1
function_name	[function_name_1] factor used ||| [function_name_2] [function_name_1]	count=6
return	by ||| mongocursor	count=1
function_name	be represented with ||| set metadata	count=1
arg_pair	color ||| float $fuzz	count=1
arg_pair	field after the ||| resource $fdf_document	count=1
function_name	activation ||| fann get cascade activation	count=1
arg_pair	from object_id and return ||| string $object_id string $timeout	count=1
function_name	default background color ||| background color	count=2
function_name	the private ||| openssl x509 check private	count=1
arg_pair	with the connection ||| resource $link_identifier	count=1
function_name	[function_name_1] root ||| [function_name_2] device [function_name_1]	count=2
function_name	data from ||| add	count=1
function_name	the sunrise time ||| date sunrise	count=1
return	parameters as an array ||| array	count=1
return	for the document ||| float	count=1
function	[function_name_1] str in ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	if no database ||| mixed $id	count=1
arg_pair	a ||| string $owner	count=2
function_name	deletes [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	object ||| connection	count=1
function_name	point is a ||| isbase	count=1
function_name	the database ||| dba	count=1
function_name	a mysqlnd ||| mysqlnd uh convert to mysqlnd	count=1
function_name	allocates or initializes a ||| init	count=1
function_name	flags ||| preg flags	count=2
function_name	deactivate image alpha channel ||| set image alpha channel	count=1
function_name	draws a line ||| line	count=1
function_name	the user defined class ||| class	count=1
function_name	places ||| fit	count=1
namespace	child ||| evloop	count=1
function_name	maximum supported keysize ||| get algo key size	count=1
function_name	consists of the domains ||| dbplus rsecindex	count=1
function_name	a id3v2 object for ||| id3v2	count=1
function	[function_name_1] of array1 ||| [arg_pair_2] [function_name_1]	count=2
namespace	of the passed ||| function	count=1
function_name	rendering [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	facet queries ||| facet queries	count=2
function_name	scales the inputs ||| fann scale input	count=1
function_name	[function_name_1] [function_name_2] linked with ||| [function_name_1] [function_name_2] version	count=2
function_name	fills current path ||| fill stroke	count=1
function_name	to highlight ||| highlight	count=2
arg_pair	key the first call ||| int $key	count=1
return	its contents directly to ||| bool	count=1
arg_pair	direction by alpha ||| float $alpha	count=1
arg_pair	specified by mask ||| int $mask	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] timezone [function_name_1]	count=2
return	checks if the ||| bool	count=3
function_name	frame to ||| frame	count=1
function_name	query ||| ifx query	count=1
arg_pair	numeric items value ||| int $expiry	count=1
arg_pair	lists tables ||| string $owner	count=1
function_name	strcasecmp() with ||| strncasecmp	count=1
function_name	append a ||| append	count=1
return	not ||| string	count=1
function_name	the column names of ||| cubrid column names	count=1
function_name	feature known as tailable ||| tailable	count=1
function_name	of time cursors by ||| immortal	count=1
return	row as a ||| object	count=1
function_name	in this service ||| gupnp service introspection	count=2
function_name	as event handler for ||| ibase set event handler	count=1
function_name	is delivered whose action ||| pcntl	count=1
function_name	the column [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	returns if the ||| bool	count=1
return	the name of ||| string	count=1
function_name	apc cache ||| apc	count=1
return	creates a new ||| int	count=1
function	deletes the [arg_pair_2] ||| [function_name_1] string $key [arg_pair_2]	count=1
function_name	for suitable [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	haystack starting ||| string $haystack	count=1
return	while it is ||| bool	count=1
arg_pair	size of the ||| int $type	count=1
namespace	from the [namespace] ||| [namespace]	count=2
function_name	offset in the complete ||| start	count=1
function_name	creates an [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	by the object_id ||| string $object_id string $timeout	count=1
function_name	mime type of ||| mime type	count=2
function_name	internal and ||| function	count=1
return	the location of the ||| int	count=1
function_name	open directory entry ||| zip entry	count=2
function	[function_name_1] at ||| [arg_pair_2] [function_name_1]	count=2
namespace	of the internet ||| function	count=1
function_name	computes the ||| array udiff assoc	count=1
function_name	a config ||| config	count=1
arg_pair	and ||| resource $filehandle	count=2
arg_pair	the browser ||| int $expire	count=1
arg_pair	of the detailed ||| int $fieldcode	count=1
arg_pair	a ||| mixed $keys string $value	count=1
function_name	the iv belonging to ||| iv	count=1
return	this is not for ||| bool	count=1
function_name	to split a string ||| split	count=1
function_name	returns a stream context ||| stream context	count=1
function_name	has not yet been ||| ibase	count=1
arg_pair	statements ||| mixed $final_callback int $argument_count	count=1
function_name	default value of the ||| default value	count=1
namespace	from [namespace] including ||| [namespace]	count=1
function_name	days ||| cal days	count=1
function_name	the glyph at position ||| ps symbol	count=1
function_name	type 3 font ||| font	count=1
arg_pair	username and ||| string $username	count=1
function_name	whether the opened ||| mcrypt enc is	count=1
function_name	converts an extended ||| mongo db\bson\from	count=1
function_name	point callback function ||| point callback	count=2
arg_pair	of the ||| int $type	count=2
function_name	[function_name_1] warning message ||| [function_name_1] [function_name_2]	count=2
namespace	returns the sec field ||| mongotimestamp	count=1
return	the information contained ||| void	count=1
arg_pair	from the ||| int $enc_type	count=1
function_name	the sunset ||| sunset	count=1
namespace	bound parameters ||| sqlite3stmt	count=1
function_name	returns ||| get notify	count=2
function_name	fetch a request token ||| get request token	count=1
arg_pair	the first prototype ||| string $data int $mode	count=2
return	number rule ||| bool	count=1
arg_pair	given number of ||| string $str int $width	count=1
return	position [return] 0 ||| [return]	count=1
function_name	method morphs a ||| morph	count=1
function_name	when using mppe ||| radius demangle mppe key	count=1
arg_pair	of the ||| string $key	count=1
function_name	convert numeric string reference ||| decode numericentity	count=1
function_name	returns elements ||| get	count=1
arg_pair	the current connection ||| resource $link_identifier	count=1
return	files header ||| mixed	count=1
return	to hook ||| bool	count=1
arg_pair	a message from ||| string $target	count=1
namespace	of the ||| yaf_router	count=1
arg_pair	[arg_pair] or ||| [arg_pair]	count=1
function_name	data store only ||| apcu add	count=1
function_name	loads [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	given file ||| bzerrstr	count=1
arg_pair	a ||| int $code string $reason	count=1
arg_pair	ann ||| resource $ann	count=1
arg_pair	specifies a ||| string $prefix string $field_override	count=1
function_name	[function_name_1] the lower ||| [function_name_1] [function_name_2]	count=3
function_name	from bson ||| bson unserialize	count=1
arg_pair	a variable in a ||| mixed $expression bool $return	count=1
function	status callback [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	html document ||| htmlfile	count=1
function_name	digest ||| digest	count=1
arg_pair	them in ||| int $protocol	count=1
return	information about ||| ktaglib_id3v1_tag	count=1
function_name	event handler for ||| ibase set event handler	count=1
function_name	to fit the width ||| fit	count=1
function_name	icu error code ||| intl error	count=2
namespace	domxpath object ||| domxpath	count=1
function_name	padded [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	product of ||| array product	count=1
namespace	function that ||| function	count=6
function_name	term to start ||| terms lower bound	count=2
function_name	current stroking color ||| gray stroke	count=1
function_name	sets an arbitrary string ||| set	count=1
function_name	the given password ||| init with password	count=1
function	[function_name_1] specified algorithm ||| [arg_pair_2] [function_name_1]	count=5
function_name	raw request [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	and indexes ||| uassoc	count=1
function_name	curl share handle and ||| curl share	count=1
function_name	is a base ||| isbase	count=1
arg_pair	watcher object and ||| int $priority	count=1
function_name	when using mppe ||| demangle mppe	count=1
function_name	cannot be ||| set metadata	count=1
function_name	debug data for ||| debug	count=1
arg_pair	a scrollable cursor ||| int $row_number	count=1
function_name	[function_name_1] exists ||| [function_name_1] [function_name_2]	count=9
function_name	to preserve their meanings ||| htmlspecialchars	count=1
function_name	add a link ||| add	count=1
arg_pair	register a rpc ||| string $uri	count=1
arg_pair	image of specified size ||| int $width int $height	count=1
arg_pair	submits a command and ||| resource $connection string $query	count=1
arg_pair	stores x509 into a ||| mixed $x509	count=2
function_name	page and applies ||| page	count=1
function_name	extract all ||| extract to	count=1
function_name	range for ||| range	count=1
function_name	of an image ||| image	count=1
function_name	creates ||| create text node	count=1
function_name	is ||| set state	count=2
function_name	tokens to parse ||| tokens	count=2
arg_pair	exist ||| array $options	count=1
namespace	eventbuffer so ||| eventbuffer	count=1
function_name	returns the ||| get	count=83
function_name	[function_name_1] declaring ||| [function_name_2] [function_name_1]	count=2
arg_pair	a new ||| string $target	count=1
function_name	continuing the event ||| loop	count=1
function_name	entering or ||| loop	count=1
namespace	be called ||| evloop	count=1
function_name	stops a ||| win32 stop	count=1
function_name	php internally ||| set	count=1
function_name	inserts a new record ||| px insert record	count=1
function	event specified [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	on disk in ||| quickhashintset	count=1
function_name	escapes string ||| escape	count=1
return	which is effective in ||| string	count=1
function_name	via the service ||| start	count=1
function_name	[function_name_1] field ||| [function_name_2] [function_name_1]	count=16
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $key [arg_pair_2]	count=2
function_name	information stored with ||| set metadata	count=1
function_name	[function_name_1] required ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] in ||| [function_name]	count=1
arg_pair	if a valid boost ||| string $fieldname	count=1
function_name	returns an array ||| array	count=2
function_name	[function_name_1] local class ||| [function_name_2] [function_name_1]	count=1
return	and terminate the ||| bool	count=1
arg_pair	target within the ||| float $upperrighty int $page	count=1
function_name	simulates motion blur ||| motion blur image	count=2
function_name	selects records specified ||| pg select	count=1
namespace	specified character is ||| intlchar	count=2
function_name	the minimum ||| cascade min	count=1
function_name	soap fault ||| soap fault	count=1
arg_pair	the given image ||| int $color	count=1
arg_pair	specified messages ||| resource $imap_stream	count=2
function_name	obscure ||| crack	count=1
function_name	if the [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	the connection ||| connection	count=2
function_name	finds whether to send ||| is	count=1
arg_pair	address port number database ||| int $port	count=1
function_name	the wait function ||| wait	count=1
function_name	result grouping ||| set group	count=1
return	top left [return] 0 ||| [return]	count=2
function_name	with the connection ||| database	count=1
return	in the way a ||| int	count=1
function_name	need ||| state	count=1
function_name	to ||| add from	count=1
arg_pair	a valid boost ||| string $fieldname string $fieldvalue	count=1
function	ahead or returns [function_name_1] [arg_pair_2] ||| [function_name_1] fetch assoc [arg_pair_2]	count=7
function_name	resets ||| reset	count=7
namespace	records in the ||| tokyotyrant	count=1
function_name	[function_name_1] frame ||| [function_name_1] [function_name_2]	count=3
function_name	data from ||| add buffer	count=1
arg_pair	returned instead of an ||| resource $result	count=1
function_name	writes to [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	the associated data ||| resource $pdfdoc int $textflow	count=1
function_name	default external [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	gets column types of ||| column types	count=1
function	table [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	all html ||| html	count=1
function_name	color definitions using ||| color	count=1
return	as second parameter ||| array	count=1
function_name	the apache [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	query ||| query chars	count=2
namespace	reflectionclass object ||| reflectionclass	count=1
arg_pair	[arg_pair_1] within the ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	wsdl ||| soapclient	count=1
namespace	maxdb_options() and ||| function	count=1
function_name	the train ||| input train data	count=1
function_name	of the ||| get current	count=1
function_name	posix ||| posix get	count=1
function_name	query determines ||| query	count=1
arg_pair	given str ||| string $allowable_tags	count=1
function_name	kadm5 library using ||| kadm5 init with	count=1
function_name	other content item ||| pdf begin item	count=1
arg_pair	of working copy files ||| int $flags	count=1
namespace	an nsapi-specific function ||| function	count=1
function_name	affected [function_name] by ||| msql affected [function_name]	count=1
function_name	from utf-8 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the specified status ||| add task status	count=1
function_name	value of the horizontal ||| horizontal	count=1
namespace	current node ||| splheap	count=1
function_name	array of [function_name] this ||| get [function_name]	count=1
namespace	bufferevent ||| eventbufferevent	count=1
function_name	error message [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	sql aggregate ||| create aggregate	count=1
function_name	[function_name_1] signal ||| [function_name_1] [function_name_2]	count=1
function_name	filter [function_name_2] ||| [function_name_2] [function_name_1]	count=9
arg_pair	the bordercolor imagickpixel object ||| mixed $bordercolor int $width	count=1
function_name	appends [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	page of the ||| page	count=1
arg_pair	data and returns it ||| string $data string $mode	count=1
function_name	rate used when ||| rate	count=1
function_name	extension ||| to extension	count=1
function_name	[function_name_1] interword spacing ||| [function_name_1] [function_name_2]	count=6
arg_pair	given set ||| resource $conn_identifier	count=1
arg_pair	gmp number from an ||| int $base	count=1
function_name	end ||| add	count=1
function_name	stream [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	domnodelist ||| domnodelist	count=1
arg_pair	specified directory ||| resource $ftp_stream string $directory	count=2
function_name	the end of current ||| add	count=1
function_name	[function_name_1] record ||| [function_name_1] [function_name_2]	count=3
arg_pair	posted by the ||| string $event_name2	count=1
function_name	csr and saves it ||| csr	count=1
function_name	fetches a row as ||| ibase fetch object	count=1
function_name	interword ||| interword	count=1
function_name	attribute node ||| set attribute node	count=2
function_name	the minimum ||| sybase min	count=3
function	[function_name_1] has been ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	properties that correspond to ||| resource $result string $class_name	count=1
arg_pair	[arg_pair] by key ||| [arg_pair]	count=1
function	stops a [arg_pair_2] ||| [function_name_1] service [arg_pair_2]	count=1
return	one or ||| array	count=1
function_name	view ||| view	count=1
arg_pair	fetches a ||| resource $result_id	count=1
return	returns the ||| int	count=2
function_name	the legendre symbol ||| gmp legendre	count=1
return	current ||| yaf_controller_abstract	count=1
function_name	scm of the current ||| win32 set	count=1
arg_pair	an array or something ||| mixed $array_or_countable	count=1
arg_pair	pseudo-object from a ||| int $fetch_flag	count=1
namespace	by php ||| mongoid	count=1
function_name	current eventbuffer ||| add	count=1
arg_pair	multiset ||| string $attr_name string $set_element	count=1
function_name	numeric ||| get numeric	count=1
arg_pair	variable_key in the ||| int $variable_key	count=1
function_name	[function_name_1] root device ||| [function_name_2] get [function_name_1]	count=1
function_name	multibyte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	phrase bigram ||| bigram phrase	count=2
function_name	output character ||| output	count=1
function_name	term to start ||| set terms lower bound	count=1
return	of time ||| mongocursor	count=1
function_name	the iv belonging ||| mcrypt get iv	count=1
function_name	is used ||| cubrid get	count=1
function_name	information where ||| info	count=3
namespace	returns ||| gmagick	count=5
function_name	read [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	oracle placeholder name which ||| array by name	count=1
function_name	prepares ||| yaz	count=1
arg_pair	with the color defined ||| float $fuzz int $channel	count=1
function_name	returns an ||| memcache get	count=1
function_name	returns false on failure ||| cubrid	count=1
arg_pair	the ||| resource $result int $type	count=1
namespace	a given result ||| function	count=1
arg_pair	or set the database ||| resource $link_identifier string $database	count=1
arg_pair	a ||| string $filename array $fields	count=1
function_name	tasks previously ||| run	count=1
function_name	csr ||| openssl csr	count=1
function_name	of the [function_name] the ||| get called [function_name]	count=1
function	[function_name_1] [arg_pair_2] subject to various options ||| [function_name_1] begin document [arg_pair_2] string $optlist	count=1
function_name	of encoding ||| encoding	count=1
function_name	[function_name_1] socket ||| [function_name_2] clear [function_name_1]	count=3
function	[function_name_1] the end ||| [arg_pair_2] [function_name_1]	count=3
function_name	be used to ||| maxdb	count=1
arg_pair	virtual file and frees ||| string $filename	count=1
function_name	buffered [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	of the [function_name] the ||| mysqli get [function_name] info	count=1
return	in each of the ||| int	count=1
arg_pair	primary key for a ||| string $owner	count=1
function_name	to the end ||| buffer	count=1
function_name	shared secret is ||| server secret	count=1
arg_pair	table table_name using ||| string $table_name	count=1
function_name	queries the current status ||| status	count=1
function_name	raised into power ||| powm	count=1
function_name	csr and saves it ||| csr export to	count=1
function_name	limit for how much ||| limit	count=1
function_name	the specified color+alpha ||| imagecolorexactalpha	count=1
function_name	stored with ||| set metadata	count=1
arg_pair	zip-based ||| string $indexfile string $webindexfile	count=1
function_name	matches color with ||| paint transparent image	count=1
function	[function_name_1] result ||| [function_name_1] field is null [arg_pair_2]	count=2
function_name	property for a code ||| property value	count=1
arg_pair	multiset attribute ||| string $set_element	count=1
return	with existing ||| void	count=1
function_name	sets ||| set facet	count=2
function_name	train one iteration ||| train	count=1
namespace	function can handle ||| function	count=1
namespace	in ||| gearmanclient	count=1
arg_pair	requirements of the ||| int $format	count=1
function_name	an ldap ||| ldap connect	count=1
function_name	suspend key normally ^z) ||| suspend	count=1
function	[function_name_1] a function ||| [arg_pair_2] [function_name_1]	count=1
return	large object to the ||| bool	count=1
function_name	returns the ||| id3 get	count=2
function_name	namespace support and returns ||| ns	count=1
function_name	frequency at which ||| set mlt min doc frequency	count=1
arg_pair	[arg_pair_1] pattern ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	enable ldap pagination by ||| ldap	count=1
return	path [return] the file ||| [return]	count=1
function_name	used ||| maxdb debug	count=2
arg_pair	to memcached::add() ||| mixed $value int $expiration	count=1
arg_pair	from position offset ||| int $offset	count=1
arg_pair	snmp [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	timer ||| timer	count=2
function_name	file_get_contents() returns the file ||| file get contents	count=1
function_name	returns a id3v2 object ||| get id3v2 tag	count=1
function_name	already open stream ||| stream	count=1
function_name	counts all elements in ||| count	count=1
arg_pair	[arg_pair_1] domain ||| [arg_pair_2] string $msgid2 [arg_pair_1]	count=3
function_name	save ||| save	count=2
function_name	gets modifier [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the notation declaration ||| notation decl	count=1
return	a row ||| object	count=1
function_name	stores an ||| file	count=3
function_name	to fit the ||| fit	count=2
arg_pair	timestamp ||| int $format	count=2
namespace	define this function ||| function	count=1
function_name	stored ||| metadata	count=1
function_name	is used to create ||| create	count=1
function_name	image rendering [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	any file or url ||| add file	count=1
namespace	whether the ||| limititerator	count=1
arg_pair	tar- or zip-based ||| string $webindexfile	count=1
function_name	prepares the timer event ||| event timer set	count=1
function_name	the current flags ||| flags	count=1
arg_pair	flags argument ||| int $flags	count=1
namespace	[namespace] escape ||| [namespace]	count=2
function_name	[function_name_1] attributes of ||| [function_name_1] [function_name_2]	count=3
arg_pair	the character c ||| int $color	count=1
arg_pair	from array1 ||| array $array1	count=2
arg_pair	provided by dn which ||| resource $privkey	count=1
namespace	[namespace] access ||| [namespace]	count=1
function_name	[function_name_1] a ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] fail limit ||| [function_name_2] [function_name_1]	count=3
return	rpm [return] ||| [return]	count=1
function_name	cipher initialization [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] a postgresql ||| [function_name_2] [function_name_1] is null	count=2
namespace	constructs ||| reflectionclass	count=1
function_name	opened mode ||| mcrypt enc is	count=2
function_name	similar to sybase_fetch_assoc() with ||| sybase	count=1
arg_pair	the ||| resource $pdfdoc	count=2
function_name	space ||| space	count=3
function_name	discards the contents ||| clean	count=1
namespace	soap requests ||| soapclient	count=1
function_name	short [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	this imagickpixel object and ||| imagickpixel $color float $fuzz	count=1
function_name	launched via ||| start	count=1
return	event ||| bool	count=1
function_name	the decoded quoted printable ||| quoted printable decode	count=1
function_name	the opendir readdir and ||| eio readdir	count=1
function_name	the border color ||| border color	count=2
function_name	a built-in type ||| builtin	count=1
function_name	bit ||| bit	count=2
arg_pair	a ||| string $qmanagername	count=1
function_name	page and scales ||| page	count=1
function_name	a ||| mysqlnd	count=1
arg_pair	a code point ||| mixed $codepoint	count=1
function_name	frees the ||| free result	count=1
function_name	field from the ||| oci field	count=1
function_name	[function_name] could be ||| [function_name]	count=1
function_name	device ||| gupnp device	count=1
function_name	the specified field ||| mysql field	count=1
function_name	as opposed to ||| user defined	count=1
arg_pair	pseudo-object ||| resource $result_id int $fetch_flag	count=1
function_name	changes the user ||| user	count=1
arg_pair	quality of ||| int $service_level_option	count=1
function_name	server ||| server by path	count=2
function_name	the number of inputs ||| num input	count=1
function_name	detailed [function_name] a loaded ||| [function_name] font	count=1
function_name	frees the system ||| free	count=1
function_name	[function_name_1] offset ||| [function_name_2] [function_name_1]	count=1
namespace	imagick object ||| imagick	count=10
function_name	idle on ||| immortal	count=1
function_name	creating a new instance ||| get active	count=1
function_name	described by socket ||| socket	count=1
function_name	control [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	line number of ||| line	count=1
function_name	handle into a mysqlnd ||| to mysqlnd	count=1
arg_pair	large object and returns ||| resource $connection	count=1
function_name	entwerfen von einer mime ||| mime encode	count=1
function_name	identifier [function_name] for ||| [function_name]	count=1
function_name	function for neuron number ||| function	count=2
function_name	end of ||| add	count=1
namespace	used to ||| function	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] int $first_num [arg_pair_2]	count=4
return	send ||| bool	count=1
arg_pair	specified by fd ||| int $pri	count=1
arg_pair	object and starts it ||| mixed $data	count=1
function_name	next element is ||| next element	count=2
arg_pair	from the given ||| int $quality	count=1
function_name	host name of the ||| gethostbyaddr	count=1
arg_pair	to memcached::getmulti() except ||| string $cas_tokens int $flags	count=1
namespace	buffer events file ||| eventbufferevent	count=1
function_name	before entering or ||| loop	count=1
function_name	square root of each ||| sqrt	count=1
return	current time as ||| double	count=1
function_name	textflow ||| pdf info textflow	count=2
return	is the ||| void	count=1
function_name	group ||| group queries	count=1
function_name	sets the value at ||| set	count=2
namespace	this should ||| pharfileinfo	count=1
function_name	to [function_name] to_encoding ||| [function_name] convert variables	count=1
function_name	by means of the ||| get	count=1
function_name	event handler ||| ibase set event handler	count=1
function_name	creates an ||| create	count=1
function_name	the organization that an ||| geoip org by	count=1
function_name	the bounding box of ||| b	count=1
namespace	and ||| sqlite3stmt	count=1
function_name	the specified events is ||| wait event	count=1
function_name	surrounds the image ||| image	count=1
function_name	from ||| from	count=2
function_name	[function_name_1] static ||| [function_name_2] [function_name_1]	count=1
function_name	get the permissions ||| get perms	count=1
arg_pair	as a [arg_pair] ||| [arg_pair]	count=3
function_name	get or set ||| database	count=1
function_name	token ||| token	count=2
namespace	the interior of ||| function	count=1
arg_pair	result set as ||| string $class_name	count=1
function	returns [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	own filter ||| filter register	count=1
function_name	free all memory associated ||| mysql free	count=1
function_name	[function_name_1] environment ||| [function_name_1] [function_name_2]	count=3
function_name	whitespace removed ||| whitespace	count=1
arg_pair	a text ||| string $text	count=1
function_name	quantum depth as a ||| quantum depth	count=1
function	goes until [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	name of ||| get cipher name	count=1
function_name	message severity ||| message severity	count=2
function_name	extension is connected to ||| info	count=1
arg_pair	a target url ||| string $url	count=1
function_name	set ||| fbsql database	count=2
function_name	identifier ||| ibase fetch object	count=2
arg_pair	of servers ||| string $host int $port	count=1
function_name	the specified status ||| status	count=1
function_name	uploads the data ||| fput	count=1
function_name	drop remove a database ||| drop db	count=1
function_name	a user-defined ||| get arg	count=1
function_name	executes one or ||| execute	count=2
function_name	location [function_name_2] ||| [function_name_2] get relative [function_name_1]	count=1
arg_pair	the ||| int $option	count=1
function_name	returns the ||| sqlsrv get	count=1
namespace	whether the ||| mongocursorinterface	count=1
namespace	to true and turns ||| function	count=1
return	watcher ||| void	count=1
arg_pair	of characters using a ||| string $str	count=1
function_name	moves [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	information ||| pharfileinfo	count=1
function_name	stores ||| file	count=5
arg_pair	to the [arg_pair] including ||| [arg_pair]	count=1
namespace	this function closes a ||| function	count=1
return	returns a ||| resource	count=1
function_name	[function_name_1] factor ||| [function_name_2] [function_name_1]	count=9
function_name	[function_name_1] [function_name_2] of the ||| [function_name_1] [function_name_2]	count=3
arg_pair	parses key ||| string $passphrase	count=1
arg_pair	and the associated data ||| resource $pdfdoc	count=1
function_name	given local name ||| by tag name	count=1
function_name	frequency at ||| mlt min doc frequency	count=1
function_name	adds a tag to ||| bbcode add element	count=1
return	and returns ||| sqlite3result	count=1
rest	if the [function_2] ||| [function_2] [return_1]	count=1
function	[function_name_1] a ||| [function_name_1] query field [arg_pair_2]	count=1
arg_pair	thats associated ||| string $database_name resource $link_identifier	count=1
function_name	rotation ||| rotate	count=1
function_name	alter parser options ||| bbcode set flags	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $signature [arg_pair_2]	count=1
function_name	get the current ||| current	count=1
function_name	of any pixel ||| unique image	count=1
arg_pair	be added to ||| string $localname	count=1
function_name	containing pointers ||| into struct	count=1
function_name	invokes ||| invoke	count=1
arg_pair	something in an ||| int $mode	count=1
return	suitable [return] cryptographic use ||| [return]	count=1
namespace	syncsemaphore ||| syncsemaphore	count=1
arg_pair	the given sequence and ||| resource $imap_stream string $sequence	count=1
namespace	phar archive containing compressed ||| phar	count=1
function_name	the [function_name] ||| [function_name] bind	count=1
function_name	this ||| construct	count=1
function_name	to msql_fetch_array() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	a variable ||| mixed $var	count=1
namespace	closure ||| closure	count=1
arg_pair	to a ||| string $dsn boolean $force	count=1
function_name	is an ||| msql fetch array	count=1
function_name	activation steepnesses ||| cascade activation steepnesses	count=1
arg_pair	a ||| string $dir	count=1
arg_pair	query ||| int $param_number	count=1
return	directory to ||| bool	count=1
function_name	a query object ||| query	count=1
arg_pair	variable with a ||| mixed $variable int $type	count=1
function_name	socket is specified ||| socket	count=1
return	given control points to ||| bool	count=1
return	removes an event from ||| bool	count=1
return	name and password ||| resource	count=1
arg_pair	a user ||| string $class	count=1
function_name	the lower ||| lower	count=2
arg_pair	import the php ||| bool $save_indexes	count=1
function_name	postgresql frontend/backend communication ||| pg trace	count=2
namespace	should only be used ||| pharfileinfo	count=1
namespace	the reason the ||| function	count=1
function_name	given shared memory segment ||| shm	count=1
arg_pair	at the position ||| int $left	count=1
arg_pair	argument of [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	opendir readdir and closedir ||| eio readdir	count=1
namespace	object was thrown ||| throwable	count=1
function_name	ends a page ||| ps end	count=1
arg_pair	new ||| int $sec	count=1
function_name	db2_connect() and ||| db2	count=1
function_name	[function_name_1] color ||| [function_name_2] [function_name_1]	count=19
return	results to send ||| bool	count=1
return	gets the string to ||| string	count=1
function_name	get the [function_name_2] ||| [function_name_1] [function_name_2]	count=24
function_name	an array ||| get array copy	count=1
function_name	current font ||| current font	count=1
namespace	retrieves ||| directoryiterator	count=1
function_name	to the [function_name] ||| [function_name] bind	count=1
function_name	slop [function_name_2] ||| [function_name_2] [function_name_1] string $slop	count=3
return	a set of tasks ||| bool	count=1
namespace	in v8js ||| v8js	count=1
function_name	affected rows by ||| affected rows	count=1
function_name	[function_name] a ||| [function_name] launchlink	count=1
function_name	provides a stride value ||| stride	count=1
function_name	number of activation ||| cascade activation	count=1
function_name	the learning rate is ||| learning rate	count=1
function_name	the type ||| filetype	count=1
function_name	executes ||| db2 execute	count=2
function_name	the ||| get delayed	count=1
function_name	a mysqlnd connection ||| convert to mysqlnd	count=1
namespace	/ imaginary [namespace] ||| [namespace]	count=1
arg_pair	integer for a ||| int $property	count=1
arg_pair	[arg_pair_1] given ||| array imap sort [arg_pair_2] [arg_pair_1]	count=1
function_name	neural network from a ||| fann create from file	count=1
function_name	the complete result ||| start	count=1
arg_pair	the levels of ||| int $channel	count=1
function_name	attribute in [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	service monitoring and ||| service	count=1
arg_pair	and write [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	setting of ||| function	count=1
function_name	autocommit ||| autocommit	count=1
function_name	minimum document frequency used ||| facet enum cache min default frequency	count=1
arg_pair	an ||| int $backlog	count=1
function_name	[function_name_1] input buffer ||| [function_name_1] [function_name_2]	count=1
arg_pair	given font ||| resource $font_index	count=1
arg_pair	array1 with values ||| array $array2	count=1
function_name	request has been constructed ||| send request	count=1
function_name	return the time ||| time	count=1
function_name	binds the ||| bind array	count=1
function_name	last error message ||| error	count=1
namespace	this function allows ||| function	count=3
function_name	functions described ||| functions	count=1
function_name	property for a code ||| int property	count=1
return	location of the ||| int	count=1
function_name	path ||| broker get dict path	count=2
function_name	vendor [function_name_2] ||| put [function_name_1] [function_name_2]	count=1
namespace	by the given file ||| function	count=1
function_name	right image of ||| image	count=1
function_name	gets the first ||| first	count=2
function_name	tests if the ||| gmp testbit	count=1
function_name	minimum word length below ||| mlt min word length	count=1
function_name	information about the ||| info	count=1
arg_pair	to a new ||| resource $imap_stream	count=1
function_name	[function_name_1] trigram ||| [function_name_1] [function_name_2]	count=1
function_name	writes data from ||| import	count=1
arg_pair	returns it as ||| string $class_name	count=1
function_name	line number [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	given key ||| int $key	count=1
function_name	node [function_name] ||| transform [function_name] uri	count=1
function_name	filter that ||| filter	count=1
function_name	the file ||| get	count=2
function_name	transformation matrix ||| matrix	count=1
function_name	input ||| readline	count=1
function	blob [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	a message using the ||| string $message integer $mode	count=1
function_name	stored with a file ||| set	count=1
function_name	command one ||| command	count=1
return	table [return] ||| [return]	count=1
function_name	[function_name_1] state ||| [function_name_2] [function_name_1]	count=1
arg_pair	false ||| string $mode string $lib_dir	count=1
function_name	the operation [function_name] see regexiterator::setmode() ||| get [function_name]	count=1
function_name	call the specified status ||| add task status	count=1
namespace	creates soapclient ||| soapclient	count=1
function_name	functions drops a database ||| drop db	count=1
return	provided ||| bool	count=2
arg_pair	to a ||| resource $imap_stream	count=1
arg_pair	that the given ||| bool $autoload	count=1
function_name	[function_name_1] stretch ||| [function_name_1] [function_name_2]	count=1
arg_pair	image from the ||| int $quality	count=1
function_name	style of ||| style	count=1
function_name	[function_name_1] elements name ||| [function_name_2] [function_name_1]	count=2
function_name	and returns the match ||| compare	count=1
arg_pair	of service needed ||| int $service_level_option mixed $option_value	count=1
function_name	[function_name_1] ip ||| [function_name_1] vendor [function_name_2]	count=1
function_name	[function_name_1] threshold ||| [function_name_1] [function_name_2]	count=7
function_name	table_get and table_set ||| apache note	count=1
function_name	built-in internal and ||| function	count=1
function_name	for first ||| first	count=1
arg_pair	to [arg_pair] ||| [arg_pair]	count=5
function_name	stream [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	last absent index that ||| last empty	count=1
function_name	the kadm5 library ||| kadm5 init	count=1
return	value of ||| int	count=1
function_name	get results of next ||| next	count=1
function_name	new pdf file using ||| pdf open	count=1
return	fetches a row ||| object	count=1
function_name	servers [function_name] ||| [function_name]	count=1
function_name	sets the learning rate ||| fann set learning rate	count=1
function	strip [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	domnodelist object ||| domnodelist	count=1
function_name	returns a simplexmliterator object ||| get	count=1
namespace	from ||| function	count=1
function_name	maximum allowable depth ||| max depth	count=2
arg_pair	a resource handle referencing ||| string $encoding	count=1
function_name	stored value with the ||| apc cas	count=1
arg_pair	unicode domain ||| int $options	count=1
function	method updates [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	a config used to ||| config	count=1
function_name	a valid socket ||| socket connect	count=1
function_name	an sql aggregate ||| aggregate	count=1
function_name	original type ||| type	count=1
function_name	query with ||| query	count=1
function_name	get the service ||| get service	count=2
function_name	code ||| code	count=4
namespace	as ||| throwable	count=1
function_name	ldap link ||| ldap	count=1
rest	returns [function_2] ||| [function_2] [return_1]	count=1
namespace	exception was thrown ||| solrexception	count=1
function_name	to strip any nul ||| fgetss	count=1
function_name	http [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	entry named key to ||| string $key	count=1
function_name	this function replaces the ||| replace	count=1
namespace	output buffer ||| eventbufferevent	count=1
namespace	move ||| spldoublylinkedlist	count=2
function_name	dispatch ||| dispatch	count=1
arg_pair	one of the detailed ||| resource $result int $fieldcode	count=1
function_name	entering or continuing ||| loop	count=1
function_name	with the connection ||| fbsql	count=1
namespace	a yar_client ||| yar_client	count=1
function_name	image matte channel ||| image matte	count=2
arg_pair	a new ||| string $target string $data	count=1
arg_pair	up to maxlength bytes ||| resource $handle int $maxlength	count=1
return	between [return] white and ||| [return]	count=1
function_name	place after the current ||| get postfix	count=1
function_name	specified location ||| imagecolorat	count=1
function_name	information ||| header info	count=1
function	a textflow [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	pagination information ||| ldap control paged result response	count=1
namespace	in seconds for searchd ||| sphinxclient	count=1
arg_pair	the result set starting ||| int $type	count=1
arg_pair	a rpc call ||| string $uri	count=1
function_name	other content item ||| item	count=3
return	as defined in the ||| float	count=1
function_name	permissions ||| perms	count=1
arg_pair	pem encoded ||| array $configargs	count=1
arg_pair	execute processing ||| int $pri	count=1
function_name	[function_name_1] key-value pair ||| [function_name_2] [function_name_1]	count=6
function_name	field ||| alternate field length	count=1
function	oracle [arg_pair_2] ||| [function_name_1] set client info [arg_pair_2]	count=1
function	flags [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	opcode ||| ocache	count=1
namespace	after ||| mongocursor	count=1
function_name	exactly as fsockopen() ||| pfsockopen	count=1
arg_pair	lists ||| string $owner	count=1
return	characters within ||| string	count=1
function_name	the timeout value ||| timeout	count=1
function_name	last issued error ||| msql error	count=1
function_name	set query alternate q ||| set query alt	count=1
function_name	type set ||| set	count=1
function_name	persistent [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	a region of the ||| int $x	count=1
namespace	mongodb\driver\server instances to which ||| mongodb\driver\manager	count=1
function_name	empty directory is ||| add empty dir	count=1
arg_pair	non-blocking mode on ||| bool $mode	count=1
function_name	[function_name_1] tag ||| [function_name_2] [function_name_1]	count=3
function_name	gearmanclient::data() ||| data	count=1
arg_pair	such that an ||| imagick $imagick array $offset	count=1
arg_pair	input identified by the ||| array $input	count=1
function_name	context ||| context	count=3
namespace	position internally is still ||| solrdocument	count=1
function_name	associative array containing ||| assoc	count=1
function_name	the length ||| mb strlen	count=1
function_name	types of query ||| types	count=1
function_name	starts [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	header ||| get request header	count=1
function_name	[function_name_1] snippets ||| [function_name_2] [function_name_1]	count=8
function	[function_name_1] metric ||| [function_name_1] [arg_pair_2]	count=3
namespace	image types supported by ||| function	count=1
function_name	backtick operator ||| shell exec	count=1
arg_pair	puts a ||| mixed $keys	count=1
arg_pair	path in ||| string $path	count=1
function_name	the uid ||| uid	count=1
function_name	returns headers ||| headers	count=1
function_name	location of [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] event ||| [function_name_2] [function_name_1]	count=16
function_name	the minimum ||| get cascade min	count=1
return	removes an event ||| bool	count=1
function_name	the target frame to ||| target frame	count=1
function_name	the oid [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	returns the last error ||| error	count=1
return	an array with the ||| array	count=2
arg_pair	the given filter filtertype ||| int $filtertype	count=1
namespace	is ||| yaf_router	count=1
return	value of [return] null-value on ||| [return]	count=1
function_name	called by the user ||| state	count=1
function_name	by csr and saves ||| openssl csr export	count=1
function_name	polyline using ||| polyline	count=1
function_name	return icu error ||| intl error	count=2
function_name	frontbase ||| fbsql	count=3
function_name	convolution filter of the ||| edge	count=1
function_name	sets the notation declaration ||| set notation decl	count=1
arg_pair	a ||| string $optlist	count=1
function_name	stop ||| upper	count=1
arg_pair	portion [arg_pair] ||| [arg_pair]	count=2
function_name	changes the color ||| color	count=1
function_name	the kadm5 library ||| kadm5 init with	count=1
return	numeric ||| int	count=1
namespace	specified parent ||| hw_api	count=1
arg_pair	after the [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	the given key the ||| int $key	count=1
function_name	used by php ||| set	count=1
function_name	[function_name_1] type ||| [function_name_1] [function_name_2]	count=14
arg_pair	for the requested option ||| int $option	count=1
function_name	be used ||| debug	count=1
arg_pair	name used with the ||| resource $link_identifier	count=1
function_name	fit the bounding box ||| fit b	count=1
function_name	[function_name_1] a border ||| [function_name_2] [function_name_1]	count=6
arg_pair	the ||| int $frequency	count=1
function_name	new button ||| newt button	count=1
function_name	translates the origin of ||| translate	count=1
function_name	is recieved ||| gupnp service proxy add notify	count=1
function_name	prefix with which ||| prefix	count=1
function_name	moves ||| seek	count=3
function_name	sets the [function_name_2] ||| [function_name_2] timezone [function_name_1]	count=1
namespace	data to all job ||| gearmanclient	count=1
function_name	if a transaction ||| transaction	count=1
function_name	sets the border color ||| set border color	count=1
function_name	event loop iteration after ||| event	count=1
namespace	to send ||| mongocursorinterface	count=1
arg_pair	handling of ||| int $length	count=1
function_name	messages generated by the ||| message	count=1
function_name	[function_name_1] options set ||| [function_name_1] [function_name_2]	count=1
namespace	in ||| function	count=25
arg_pair	the given ||| mixed $class bool $autoload	count=1
function_name	[function_name_1] dash style ||| [function_name_1] [function_name_2]	count=3
function_name	callback function ||| callback	count=3
arg_pair	new mailbox see imap_open() ||| string $old_mbox	count=1
function_name	[function_name_1] a curl ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] region code ||| [function_name_2] [function_name_1]	count=2
arg_pair	for an enumerated ||| int $property	count=1
function_name	set multiset sequence attribute ||| col	count=2
function_name	an access ||| access	count=1
function_name	provided ||| ctype	count=1
function_name	a digest ||| digest	count=1
function_name	[function_name_1] the current ||| [function_name_1] [function_name_2]	count=3
namespace	the cleanest way ||| mongoclient	count=1
arg_pair	layer [arg_pair] layer counting ||| [arg_pair]	count=2
arg_pair	set the uri ||| string $uri string $encoding	count=1
function_name	[function_name_1] executable ||| [function_name_2] [function_name_1]	count=1
function_name	client library version ||| client	count=1
namespace	string and ||| gmagick	count=1
namespace	the parameter for ||| reflectionparameter	count=1
function_name	removes ||| unset	count=1
rest	the string [function_2] ||| [return_1] newt draw root [function_2]	count=4
function	[function_name_1] result ||| [function_name_1] field prtlen [arg_pair_2]	count=3
function_name	an attribute [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	filename that [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	sets [function_name_2] ||| [function_name_1] [function_name_2] handler	count=2
arg_pair	create or ||| int $key string $flags	count=1
function_name	of the rrd database ||| rrd lastupdate	count=1
arg_pair	field after the given ||| resource $fdf_document string $fieldname	count=1
function_name	the given password to ||| password	count=1
function	executes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function	[function_name_1] stored of ||| [function_name_1] tag [arg_pair_2]	count=1
namespace	values of ||| function	count=1
function_name	[function_name_1] tag ||| [function_name_1] remove [function_name_2]	count=1
function_name	of the path ||| path	count=1
arg_pair	ca both for path ||| string $ca_info	count=1
function_name	specifies the [function_name] of characters ||| [function_name] field length	count=1
arg_pair	stream to a new ||| resource $imap_stream	count=1
function_name	[function_name_1] of the ||| [function_name_2] text [function_name_1]	count=4
function_name	fields associated with ||| field	count=1
arg_pair	row as ||| resource $result_id	count=1
function_name	[function_name_1] runs ||| [function_name_1] [function_name_2]	count=1
function_name	the square root ||| sqrt	count=1
function_name	to map the ||| get	count=1
namespace	callback [namespace] ob_start() to ||| [namespace]	count=1
arg_pair	the uri containing ||| string $uri	count=1
return	database has no more ||| bool	count=1
arg_pair	returns a resource ||| string $encoding	count=1
function_name	retrieve last [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	loader or stub written ||| stub	count=1
return	in the case of ||| int	count=1
function_name	remote server ||| ssh2	count=1
function_name	commits an in-progress transaction ||| db2 commit	count=1
function_name	archives ||| default stub	count=2
arg_pair	from an entry in ||| resource $result_entry_identifier	count=1
return	to move ||| bool	count=2
function_name	[function_name_1] cookie parameters ||| [function_name_1] [function_name_2]	count=1
arg_pair	transparency ||| float $alpha	count=1
arg_pair	from domain returned by ||| string $codeset	count=1
function_name	this service ||| service introspection	count=1
function_name	given ||| a	count=1
function_name	returns ||| pgsql get notify	count=2
arg_pair	the ||| int $green int $blue	count=1
function_name	[function_name_1] declaring class ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] loop immediately ||| [function_name_2] [function_name_1]	count=4
function_name	stroking ||| rgbstroke	count=1
function_name	width ||| fieldwidth	count=1
function_name	sub path ||| sub path	count=2
function_name	fields that will ||| fields	count=1
arg_pair	equivalent to memcached::add() ||| int $expiration	count=1
function_name	document frequency ||| terms	count=2
namespace	representation of an ||| function	count=1
function_name	stop ||| stop	count=2
function_name	encoding the ||| encoding	count=1
function_name	trigram [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function	the length [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	a statement ||| string $sql_param	count=1
arg_pair	the value of ||| string $timeout	count=1
function_name	from ||| fetch	count=1
namespace	a single task ||| gearmanclient	count=1
function_name	the given password to ||| with password	count=1
arg_pair	existing bbcode_container tag_set using ||| resource $bbcode_container string $tag_name	count=1
function_name	inserts the ||| insert	count=1
arg_pair	returns false ||| string $mode string $lib_dir	count=1
function_name	to [function_name] cubrid ||| cubrid [function_name] export	count=1
arg_pair	message sequence ||| int $msg_number	count=1
arg_pair	the given string by ||| int $limit	count=1
function_name	the bit ||| bit	count=2
arg_pair	to ||| bool $use_include_path	count=1
return	entry in the ||| bool	count=1
arg_pair	of htmlentities() in that ||| string $string int $flags	count=1
function	order number [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	type [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function	subtraction [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	sets ||| set object	count=2
arg_pair	pattern ||| string $pattern string $string	count=1
function_name	[function_name_1] inner iterator ||| [function_name_1] [function_name_2]	count=2
function	[function_name_1] gmp number ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	the ||| int $maxlen	count=1
arg_pair	the ||| bool $before_needle	count=1
function_name	with a ||| set	count=1
function_name	has children ||| has children	count=6
function_name	an unified diff containing ||| xdiff string diff	count=1
function_name	sends status information to ||| send status	count=1
function_name	returns the amount ||| get	count=1
function_name	sets the steepness ||| fann set	count=1
arg_pair	acts very ||| string $servername	count=1
function_name	einer mime ||| mime	count=1
function_name	any file ||| add file	count=1
function_name	the timer event ||| event timer	count=1
return	and as ||| array	count=1
function_name	the external [function_name_2] ||| [function_name_1] [function_name_2] index int $index int	count=4
function_name	return information about the ||| info	count=1
function_name	binds the ||| bind array by	count=1
return	the ||| bool	count=126
function_name	to msql_fetch_array() with one ||| msql fetch	count=1
function_name	of any ||| image	count=1
function_name	corresponding to ||| geoip id by name	count=1
function_name	starts a glyph definition ||| pdf begin glyph	count=1
function_name	enable highlighting for ||| highlight highlight	count=1
function_name	[function_name_1] an informix ||| [function_name_2] [function_name_1]	count=2
namespace	an image or image ||| gmagick	count=1
function_name	user ||| set	count=1
function_name	name of the field ||| oci field name	count=1
arg_pair	a change notification ||| resource $proxy	count=1
arg_pair	a variable in a ||| mixed $expression	count=1
function_name	headers for ||| imap headers	count=1
function_name	html ||| htmlfile	count=1
function_name	repository url and ||| svn	count=1
arg_pair	of string str in ||| array $convmap	count=1
function_name	that matches color ||| opaque paint image	count=1
function_name	retrieve [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] root ||| [function_name_2] device get [function_name_1]	count=1
function_name	subscribe method is used ||| subscribe	count=1
arg_pair	the associative ||| string $arg_separator int $enc_type	count=1
arg_pair	code to html ||| bool $is_hex	count=1
function_name	sets ||| fann set cascade	count=3
function_name	set the [function_name_2] ||| [function_name_1] [function_name_2]	count=15
namespace	[namespace] array ||| [namespace]	count=3
return	the pixels color to ||| bool	count=2
function_name	down and cropping ||| crop	count=1
function_name	frees all the ||| base free	count=1
function_name	message queue ||| msg queue	count=1
function_name	frequency at which words ||| doc frequency	count=1
function_name	in an ldap ||| ldap	count=1
function_name	with a file ||| set	count=1
function_name	additional error information for ||| yaz addinfo	count=1
namespace	the ||| eventbuffer	count=2
return	removes the named ||| string	count=1
function_name	fills an ||| fill	count=1
function_name	sets [function_name_2] ||| [function_name_1] [function_name_2]	count=104
arg_pair	to the ||| string $name int $type	count=1
function_name	when the event specified ||| event	count=1
function_name	activates ||| pdf activate	count=1
function_name	new content ||| hwapi content new	count=1
function_name	the server is working ||| cubrid ping	count=1
function_name	[function_name_1] the directory ||| [function_name_2] [function_name_1]	count=1
function_name	already open stream resource ||| stream	count=1
arg_pair	two-dimensional ||| int $skip int $maxrows	count=1
return	a prepared statement and ||| sqlite3result	count=1
function_name	errors ||| internal errors	count=1
function	the [function_name_1] [arg_pair_2] regular expression ||| [function_name_1] [arg_pair_2]	count=1
return	on the server ||| mongocursor	count=1
function_name	[function_name_1] name of ||| ziparchive string [function_name_1] [function_name_2] index int $index int	count=1
function_name	cipher initialization ||| openssl cipher	count=2
function_name	be dismax query parser ||| dis max query parser	count=1
arg_pair	[arg_pair_1] of ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	last [function_name] returned by ||| [function_name] lengths	count=1
function_name	dns ||| dns get record	count=2
arg_pair	sealed_data using ||| string $sealed_data	count=1
function_name	an sql [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	member of the ||| domelement	count=1
function_name	ending line number ||| end line	count=1
function_name	that matches ||| paint transparent image	count=1
arg_pair	a given font ||| resource $font_index	count=1
arg_pair	the admin_server ||| string $admin_server	count=1
function_name	given property ||| property	count=2
function_name	network ||| fann get	count=5
arg_pair	of layer ||| float $connection_rate	count=1
namespace	controllers ||| yaf_controller_abstract	count=1
function_name	adds [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] decrease ||| [function_name_1] rprop [function_name_2]	count=1
function_name	or virtual image ||| pdf load image	count=1
function_name	adds new attribute ||| set attribute	count=1
arg_pair	a callable function ||| string $message	count=1
function_name	a row as ||| ibase	count=1
namespace	custom plugin ||| yaf_plugin_abstract	count=2
arg_pair	by ibase_blob_open() ||| resource $blob_handle	count=1
function	defined class [arg_pair_2] ||| [function_name_1] alias string $original [arg_pair_2]	count=1
arg_pair	slant a given ||| float $slant	count=1
function_name	to the ||| proxy get	count=1
return	host checks this ||| bool	count=1
function_name	[function_name_1] token secret ||| [function_name_1] [function_name_2]	count=6
arg_pair	of the buffer ||| int $type	count=1
function_name	the upper [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function	type [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	call starts ||| gearmanclient	count=1
function_name	[function_name_1] bound term ||| [function_name_1] [function_name_2]	count=10
arg_pair	specified by assoc_array ||| array $assoc_array int $options	count=1
function_name	lob object both blob ||| lob2 new	count=1
arg_pair	a php string value ||| string $value string $type	count=1
arg_pair	and ||| resource $session	count=1
arg_pair	given command ||| string $command	count=1
function_name	private ||| check private	count=1
function	the status [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
return	in parallel ||| bool	count=1
function_name	returns the variable ||| get var	count=1
function	[function_name_1] php variable ||| [arg_pair_2] [function_name_1]	count=1
return	previously added ||| bool	count=1
arg_pair	gets and sorts message [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	encoding ||| mb	count=1
function_name	global gravity property for ||| gravity	count=1
function_name	[function_name_1] into array ||| [function_name_1] [function_name_2]	count=3
function_name	implement your own filter ||| filter	count=1
namespace	is ||| oauth	count=1
function_name	an uri ||| uri	count=1
namespace	phar file format ||| phar	count=1
function_name	a database instance ||| dba open	count=1
function_name	the number ||| num	count=9
arg_pair	at a specified offset ||| int $length	count=1
function_name	all elements with a ||| elements	count=1
function_name	this function sets ||| set	count=1
namespace	large ||| oci-lob	count=1
arg_pair	assoc_array ||| array $assoc_array	count=1
function_name	of configuration files ||| files	count=1
function_name	on training data ||| fann	count=1
function_name	adds a soap ||| add soap	count=2
function_name	[function_name_1] interface ||| [function_name_1] [function_name_2]	count=1
function_name	quantum range for ||| quantum range	count=2
arg_pair	message ||| bool $serialize	count=1
namespace	this function is ||| mongoid	count=1
return	called after the ||| void	count=1
arg_pair	to new mailbox ||| resource $imap_stream string $old_mbox	count=1
function_name	the constants ||| constants	count=1
function_name	frame to display ||| frame	count=1
function_name	transformation matrix of the ||| trans matrix	count=1
arg_pair	the desired ||| int $filter float $blur	count=1
function_name	an xml document from ||| xml	count=1
function_name	[function_name_1] learning ||| [function_name_2] [function_name_1]	count=2
function_name	by csr ||| openssl csr	count=2
namespace	for the [namespace] number ||| [namespace]	count=1
function_name	[function_name_1] individual threshold ||| [function_name_2] [function_name_1]	count=4
namespace	imagickpixel object ||| imagickpixel	count=1
return	of array ||| int	count=1
function_name	sets [function_name_2] ||| [function_name_2] [function_name_1]	count=129
return	a user ||| mixed	count=1
function_name	query object to ||| query	count=1
function	environmental [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	base64 encoded ||| base64	count=1
function_name	step-size is ||| set rprop delta	count=1
function_name	[function_name_1] background color ||| [function_name_1] [function_name_2]	count=2
arg_pair	of a ||| int $ndocs	count=2
namespace	database ||| mongocursorinterface	count=1
arg_pair	colors in ||| float $channel	count=1
function_name	returns the type of ||| type	count=1
function_name	image in ||| image	count=1
arg_pair	of the ||| int $x int $y	count=2
arg_pair	timestamp and ||| int $format	count=2
function_name	lists the databases available ||| list dbs	count=1
function_name	mime kopfzeile in ||| iconv mime	count=1
namespace	function is useful ||| function	count=2
function_name	creates a new ||| open	count=1
function_name	interface [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the server host name ||| mysql get host info	count=1
function_name	closes file specified by ||| close	count=1
function	[function_name_1] the end ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	an sql statement that ||| resource $stmt	count=1
arg_pair	pem encoded string ||| array $configargs	count=1
arg_pair	it for later use ||| int $len	count=1
namespace	returns the current node ||| splheap	count=1
arg_pair	enumerate all assigned ||| callable $callback int $namechoice	count=1
arg_pair	the file ||| int $use_include_path	count=1
arg_pair	a result pdf ||| string $frame_name	count=1
arg_pair	of seconds and ||| int $seconds	count=1
return	a ||| resource	count=4
arg_pair	connects to a ||| string $host	count=1
arg_pair	the given ||| int $num_points	count=1
function_name	affected rows in ||| affected rows	count=2
function_name	suspend ||| suspend	count=1
namespace	this should not ||| pharfileinfo	count=1
function_name	[function_name_1] [function_name_2] the ||| get [function_name_2] [function_name_1]	count=3
function_name	service ||| service	count=11
function_name	returns the stack trace ||| get trace	count=1
function_name	to the power ||| variant pow	count=1
arg_pair	url can be added ||| string $file string $localname	count=1
function_name	ends a page which ||| ps end	count=1
return	statements ||| bool	count=1
function_name	be used ||| maxdb	count=1
function_name	and another ||| sendfile	count=1
function_name	returns a syntax highlighted ||| highlight	count=1
function_name	[function_name_1] loader ||| [function_name_1] [function_name_2]	count=5
function	[function_name_1] false ||| [function_name_1] mode [arg_pair_2]	count=6
function	contents of [arg_pair_2] ||| [function_name_1] phar [arg_pair_2]	count=1
function_name	new ||| begin	count=2
function_name	idle ||| immortal	count=1
namespace	connects to searchd runs ||| sphinxclient	count=1
function_name	large object ||| lo	count=1
arg_pair	changes the size of ||| int $columns	count=1
function	a weblink [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	to on the ||| string	count=1
function_name	closes the ||| close	count=10
return	gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| bool	count=1
arg_pair	unicode domain ||| string $domain	count=1
return	entering or continuing ||| void	count=1
function_name	this ||| state	count=1
function_name	tests if [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	the user [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	single line of ||| textline	count=1
function_name	[function_name_1] interfaces ||| [function_name_2] [function_name_1]	count=2
function_name	truncates ||| mb strimwidth	count=1
return	polls the status of ||| int	count=1
function_name	[function_name_1] interface names ||| [function_name_2] [function_name_1]	count=1
arg_pair	database name used with ||| resource $link_identifier string $database	count=1
arg_pair	desired dimensions with a ||| int $filter float $blur	count=1
namespace	function compresses ||| function	count=1
return	the ||| mongoid	count=1
function_name	bootstrap ||| bootstrap	count=1
arg_pair	str from [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	sets anchor point for ||| set geo anchor	count=1
function_name	[function_name_1] height as ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] control ||| [function_name_2] point [function_name_1]	count=1
function_name	transparent ||| transparent	count=1
function_name	[function_name_1] timeout value ||| [function_name_2] [function_name_1]	count=4
arg_pair	php variable with ||| mixed $variable int $type	count=1
function_name	priority ||| priority set	count=2
arg_pair	specifies the ||| resource $id	count=1
arg_pair	the ||| int $green	count=1
function_name	in the ||| current	count=1
return	causes a ||| string	count=1
arg_pair	returns a ||| string $separator	count=1
function_name	apache environment variable specified ||| apache setenv	count=1
namespace	shell function and ||| function	count=1
arg_pair	query using an ||| string $query	count=1
function_name	selects records specified by ||| select	count=1
function_name	virtual ||| virtual	count=2
arg_pair	a php function or ||| string $name mixed $step_callback	count=1
arg_pair	path in access ||| string $path	count=1
function_name	debugging ||| apd set	count=1
arg_pair	to ||| bool $with_comments array $xpath	count=1
namespace	gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| gearmanclient	count=1
function_name	attempt to ||| db2 conn	count=1
function_name	returns a similarity image ||| sub image	count=1
arg_pair	a phar archive by ||| string $filename	count=1
arg_pair	object and returns ||| resource $connection	count=1
function_name	array with [function_name] a parameter ||| ibase param [function_name]	count=1
function_name	existing ||| set metadata	count=2
function_name	algorithms otherwise ||| algorithm	count=1
namespace	added with gearmanclient::addtask() gearmanclient::addtaskhigh() ||| gearmanclient	count=1
namespace	phar archives ||| phar	count=1
function_name	session cookie [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	tells [function_name] that ||| [function_name] on new	count=1
function_name	result ||| object	count=1
function	tables [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] event base ||| [function_name_2] [function_name_1]	count=1
function_name	host name of ||| gethostbyaddr	count=1
function	repository with [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	that job [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	runs a single ||| do normal	count=1
function	weblink [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	by the [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	the query ||| string $name	count=1
function_name	a signed public key ||| openssl spki new	count=1
return	function checks if the ||| bool	count=1
return	a php variable to ||| bool	count=1
arg_pair	of two gmp numbers ||| gmp $a gmp $b	count=1
namespace	constant exists and ||| function	count=1
function_name	of job servers ||| servers	count=1
function_name	of root device ||| gupnp root device	count=1
function_name	the current [function_name] ||| [function_name] lengths	count=2
function_name	pixel color ||| image	count=1
function_name	event ||| event	count=17
function_name	the current byte index ||| current byte index	count=1
function_name	virtual [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	errors are logged to ||| resource $errdat string $log_file	count=1
function_name	specified jpeg image ||| jpeg	count=1
return	returns the host name ||| string	count=1
namespace	the database has no ||| mongocursorinterface	count=1
function_name	of days ||| cal days	count=1
function_name	fields ||| expand sort fields	count=1
namespace	by a prepared statement ||| pdostatement	count=1
function_name	to mongocollection::find() ||| find one	count=1
function_name	with existing information stored ||| set metadata	count=1
function_name	the inode number for ||| inode	count=1
namespace	name used ||| function	count=1
function_name	deletes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	max_bytes [namespace] ||| [namespace]	count=1
function_name	the external [function_name_2] ||| [function_name_1] [function_name_2] handler	count=1
namespace	len bytes [namespace] ||| [namespace]	count=1
function_name	of the current status ||| status	count=1
function_name	modifies a principal according ||| principal	count=1
function_name	closes the request handle ||| cubrid close prepare	count=1
function_name	maximum step-size may be ||| fann get rprop delta max	count=1
return	this ||| void	count=3
return	table with a ||| mixed	count=1
function	exists [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	phar archives manifest ||| pharfileinfo	count=1
function_name	base character ||| isbase	count=1
function_name	minimum word ||| min word	count=1
function_name	to ||| state	count=1
function_name	printable string created according ||| printable encode	count=1
arg_pair	a string ||| int $shmid	count=1
arg_pair	the desired dimensions ||| float $blur	count=1
arg_pair	parser parser ||| resource $parser callable $handler	count=2
function_name	rendering [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	cookie [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	error message associated with ||| string	count=1
namespace	host ||| function	count=2
function	check [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	php internally ||| mongoid	count=1
function_name	a completion ||| readline completion	count=1
arg_pair	the entry was ||| int $key int $value	count=1
function_name	csr and stores it ||| csr export	count=1
function_name	or redefines the given ||| ncurses init pair	count=1
namespace	archives manifest for this ||| pharfileinfo	count=1
namespace	imagickpixel object using normalized ||| imagickpixel	count=1
arg_pair	current state of ||| resource $pdfdoc int $textflow	count=1
function_name	function closes [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	the idle [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] of haystack ||| [arg_pair_2] [function_name_1]	count=1
function_name	and server version ||| pg version	count=1
return	case of ||| int	count=1
namespace	a callback [namespace] ob_start() to ||| [namespace]	count=1
function_name	as thumbnail for ||| thumbnail	count=1
return	used to get ||| string	count=1
function_name	[function_name_1] initialization ||| [function_name_2] [function_name_1]	count=2
return	have changed to ||| bool	count=1
namespace	for some amount ||| mongocursor	count=1
function_name	resource socket ||| socket	count=1
return	the iterator ||| bool	count=2
function_name	[function_name_1] min parameter ||| [function_name_2] [function_name_1]	count=1
arg_pair	the given ||| resource $conn_identifier string $oid	count=2
arg_pair	multiset attribute of ||| string $attr_name string $set_element	count=1
function_name	name ||| fbsql	count=1
function_name	this function [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	thats associated with ||| resource $link_identifier	count=1
function_name	port on which ||| port	count=1
return	[return] a ||| [return]	count=2
function_name	parent directory ||| cdup	count=1
function_name	url string ||| with url	count=1
function_name	it with spelling alternatives ||| dict quick	count=1
function_name	defined class ||| class	count=1
function	[function_name_1] for a ||| [arg_pair_2] [function_name_1]	count=10
function_name	[function_name_1] index ||| [function_name_2] [function_name_1]	count=5
arg_pair	values ||| array $values	count=1
function_name	function table ||| function	count=1
function_name	character [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	variable ||| mixed $var	count=2
namespace	production ||| oauth	count=1
function_name	method returns true ||| writable	count=1
arg_pair	a ||| string $uri	count=2
function_name	row as a ||| ibase	count=1
function_name	patches a ||| string bpatch	count=1
return	time cursors ||| mongocursor	count=1
arg_pair	an ||| array $options	count=2
function_name	total width [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	each layer in ||| layer array	count=1
function_name	table_set ||| apache note	count=2
function_name	extension which defined ||| extension	count=1
function_name	element ||| element	count=2
arg_pair	whitespace or other ||| string $character_mask	count=1
function_name	returns headers for all ||| headers	count=1
function_name	a postgresql database and ||| pg	count=1
function_name	process [function_name] the ||| [function_name] nice	count=1
function_name	activation function for all ||| activation function	count=1
function_name	mode outputs blocks e ||| is block mode	count=1
function	blob length [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	collection and deletes its ||| array	count=1
function_name	generator ||| generator	count=1
function_name	event specified ||| event	count=1
function_name	path ||| dict path	count=4
return	the ||| int	count=82
function_name	register ||| register	count=4
return	[return] turns ||| [return]	count=1
return	the specified code point ||| bool	count=1
arg_pair	ann ||| resource $ann array $input_vector	count=1
arg_pair	dn which ||| resource $privkey	count=1
function_name	character ||| isbase	count=1
function_name	a blob that ||| blob	count=2
namespace	function is ||| function	count=20
arg_pair	of a ||| int $type	count=1
arg_pair	a key-value ||| string $value	count=1
function_name	this method adds ||| add	count=4
function_name	set [function_name_2] ||| [function_name_1] [function_name_2]	count=18
function_name	header to ||| header	count=1
function_name	set multiset sequence ||| col get	count=1
function_name	route ||| get route	count=1
function_name	specified field ||| msql field	count=1
function_name	returns a syntax highlighted ||| highlight file	count=1
function_name	delivered whose action ||| pcntl	count=1
function_name	a binary [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	delete an entry ||| delete	count=1
function_name	from the current ||| pdf	count=1
function_name	containing a range ||| range	count=1
arg_pair	a php function ||| string $name mixed $callback	count=1
function_name	sending all ||| all	count=1
arg_pair	named column in a ||| mixed $column	count=1
return	the client ||| bool	count=1
namespace	checks if ||| iteratoriterator	count=1
function_name	[function_name_1] normalized ||| [function_name_1] [function_name_2] query	count=1
function_name	request ||| radius request	count=1
function_name	cascade ||| get cascade	count=1
function_name	in an ldap directory ||| ldap	count=1
arg_pair	array1 ||| array $array1 array $array2	count=3
namespace	function will return an ||| function	count=1
function_name	as event ||| set event	count=1
function_name	frees all ||| free	count=1
arg_pair	using the principal ||| string $principal string $password	count=1
function_name	base associated with ||| base	count=1
arg_pair	the page ||| int $imageid	count=1
function_name	array consisting of the ||| preg grep	count=1
function_name	patterns in the train ||| train data	count=1
function_name	[function_name_1] children ||| [function_name_2] [function_name_1]	count=3
namespace	hyperwave server ||| hw_api	count=1
function_name	type set multiset sequence ||| col size	count=1
arg_pair	at path to ||| string $path bool $recursive	count=1
arg_pair	point for ||| float $x	count=1
function_name	resulting array ||| trader	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] set client info [arg_pair_2]	count=1
function_name	the minimum number ||| get cascade min	count=1
namespace	if the current iterator ||| splobjectstorage	count=1
return	the certificate ||| mixed	count=1
function_name	[function_name_1] a record ||| [function_name_2] [function_name_1]	count=1
arg_pair	oid of ||| string $oid	count=1
function	variable data by ||| variable resource $introspection	count=1
function_name	[function_name_1] glo instance ||| [function_name_1] [function_name_2]	count=3
function	[function_name_1] [arg_pair_2] ||| [function_name_1] tag [arg_pair_2]	count=3
function_name	and separate parameters ||| query params	count=1
arg_pair	[arg_pair_1] user ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	removes all [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	defined in ||| void	count=1
function	semaphore [arg_pair_2] ||| [function_name_1] get int $key [arg_pair_2]	count=1
arg_pair	principal and the given ||| string $principal	count=1
arg_pair	message ||| mixed $message bool $serialize	count=1
function_name	least squares problem find ||| least squares	count=2
function_name	maps to facet ||| set facet	count=1
arg_pair	for ||| resource $psdoc	count=1
arg_pair	new mailbox ||| resource $imap_stream	count=1
namespace	[namespace] field is ||| [namespace]	count=1
arg_pair	new mailbox see ||| resource $imap_stream	count=1
function	creating [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	magic_quotes_runtime ||| magic quotes runtime	count=2
function_name	debug data for the ||| debug	count=1
function_name	function replaces [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	stored in data ||| resource $ann resource $data	count=1
arg_pair	of an ||| string $name	count=1
arg_pair	later use ||| int $len	count=1
namespace	job completion ||| gearmanclient	count=1
function_name	of activation steepnesses in ||| get cascade activation steepnesses count	count=1
function_name	vector iv ||| iv	count=2
arg_pair	to transform str1 ||| string $str1	count=1
function_name	column names ||| column names	count=1
function	[function_name_1] [arg_pair_2] is sql null ||| [function_name_1] field is null [arg_pair_2]	count=2
arg_pair	if a valid boost ||| string $fieldvalue	count=1
arg_pair	entry from the cache ||| mixed $key	count=1
function_name	relative [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	using the oid ||| resource $conn_identifier string $oid	count=1
return	from [return] ||| [return]	count=3
function_name	to an [function_name_2] ||| int transform [function_name_1] [function_name_2]	count=1
arg_pair	[arg_pair_1] current domain ||| [arg_pair_2] string $msgid2 [arg_pair_1]	count=4
function_name	[function_name_1] depth as ||| [function_name_2] [function_name_1]	count=1
function_name	add the result ||| add	count=1
arg_pair	the ||| int $num_points	count=1
function_name	bit [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] tell the ||| [function_name_2] [function_name_1]	count=1
function_name	vendor specific string ||| vendor	count=1
function_name	[function_name_1] soap header ||| [function_name_2] [function_name_1]	count=1
function_name	date parsers ||| create from date string	count=1
function_name	scales ||| fann scale	count=3
function_name	imap [function_name_2] ||| [function_name_1] last [function_name_2]	count=4
arg_pair	response to a ||| string $url	count=1
function_name	is an immediate neighbor ||| matte floodfill image	count=1
function	[function_name_1] a ||| [function_name_1] to personal [arg_pair_2]	count=1
namespace	this function toggles if ||| function	count=1
function_name	from a user ||| from callback	count=2
function_name	checks if the ||| exists	count=1
return	and deletes its indices ||| array	count=1
namespace	one with the image ||| gmagick	count=1
function_name	the stream or context ||| stream context get	count=1
function_name	with the key sizes ||| key sizes	count=1
arg_pair	a php variable with ||| mixed $variable int $type	count=1
arg_pair	for a ||| string $attrlat	count=1
function_name	creates a new content ||| new	count=1
function_name	include ||| include	count=4
function_name	row as ||| fetch object	count=1
function_name	[function_name_1] out ||| [function_name_2] [function_name_1]	count=2
function_name	initialization vector iv ||| openssl cipher iv	count=1
function_name	and display ||| display	count=1
namespace	documents should begin ||| solrquery	count=1
rest	to [function_2] ||| [return_1] [function_2]	count=3
function_name	[function_name_1] time for ||| [function_name_2] [function_name_1]	count=2
function_name	default external ||| set external	count=1
function	diff containing [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] handler function ||| [function_name_1] [function_name_2]	count=6
arg_pair	key the ||| int $key	count=1
namespace	tables in the ||| function	count=1
function_name	current value of word ||| get word	count=1
function_name	[function_name_1] provider parameters ||| [function_name_2] [function_name_1]	count=2
arg_pair	register a ||| string $method	count=1
namespace	the [namespace] completed ||| [namespace]	count=1
function_name	the same body and ||| bind to	count=1
arg_pair	the value of an ||| string $value	count=1
arg_pair	color [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=5
function	name of the ||| name resource $result	count=3
function_name	runs [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	tests if [function_name] ||| pg [function_name] is null	count=2
function_name	set [function_name_2] ||| ziparchive bool [function_name_1] [function_name_2] index int $index string	count=2
arg_pair	that the ||| mixed $value int $expiration	count=1
function_name	the query syntax ||| query chars	count=1
arg_pair	replaced with the given ||| mixed $search	count=1
function_name	returns the sunrise ||| sunrise	count=1
namespace	phar will save ||| phar	count=1
arg_pair	up callback to ||| int $type mixed $callback	count=1
function_name	running service ||| set service	count=1
function	[function_name_1] result resource ||| [function_name_1] field is null [arg_pair_2]	count=2
function_name	[function_name_1] graphics ||| [function_name_1] [function_name_2]	count=1
function_name	flags as ||| flags	count=1
function_name	checkbox ||| newt checkbox	count=1
function_name	[function_name_1] imagemagick package ||| [function_name_2] [function_name_1]	count=1
arg_pair	specified index ||| mixed $index	count=2
function_name	as eventbuffer::addbuffer() except ||| prepend buffer	count=1
namespace	with the image ||| gmagick	count=1
function_name	after ||| loop	count=1
arg_pair	tracing ||| string $module_name	count=1
namespace	for maxdb_options() ||| function	count=1
function_name	contains any more ||| valid	count=2
function_name	this function [function_name] ||| opcache [function_name] script cached	count=1
arg_pair	given source string ||| string $source	count=1
return	creates ||| int	count=1
function_name	use ||| use	count=3
return	file containing [return] specified key-value ||| [return]	count=1
function_name	[function_name] applying ||| transform to [function_name]	count=1
function_name	return type of ||| get return type	count=2
function_name	sets the array ||| fann set	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] list [function_name_2]	count=4
function_name	or other content item ||| item	count=3
arg_pair	is identical to ||| string $encoding bool $double_encode	count=1
function_name	with oauthprovider::timestampnoncehandler() ||| nonce	count=1
function_name	get ||| get current	count=1
function_name	memory used by ||| memory usage	count=1
function	is used [function_name_1] [arg_pair_2] ||| function string [function_name_1] [arg_pair_2]	count=4
function_name	field which ||| field	count=1
arg_pair	if a valid ||| string $fieldvalue	count=1
arg_pair	part or the ||| mixed $file	count=1
function_name	a stream ||| stream	count=2
function_name	that matches color with ||| paint transparent	count=1
return	if multiple sql statements ||| bool	count=1
arg_pair	changes file or directory ||| string $path	count=1
function_name	given result ||| ibase fetch object	count=1
function_name	docs ||| mlt min	count=1
return	gets ||| void	count=1
function_name	imported pdf [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	watcher callback with the ||| evwatcher	count=1
arg_pair	namespaceuri and name name ||| string $qualifiedname	count=1
function_name	last tuple for the ||| dbplus last	count=1
function_name	store session data ||| session write close	count=1
function_name	[function_name_1] type of ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] info ||| [function_name_2] [function_name_1]	count=1
namespace	existing information stored with ||| pharfileinfo	count=1
namespace	results to ||| mongocursorinterface	count=1
arg_pair	image of the specified ||| int $height	count=1
function_name	the request [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	adds a link to ||| add	count=1
arg_pair	delete operations ||| mongocollection $collection array $write_options	count=1
function_name	blocks ||| block	count=1
function_name	width ||| filepro fieldwidth	count=1
function_name	event [function_name_2] ||| [function_name_1] base [function_name_2]	count=2
function_name	[function_name_1] the property ||| [function_name_2] [function_name_1]	count=1
function_name	space character according ||| space	count=1
function_name	an attribute with namespace ||| attribute ns	count=1
arg_pair	sealed_data using the private ||| string $sealed_data	count=1
function_name	commits changes ||| commit	count=1
function_name	splits the dn ||| dn	count=1
function_name	returns the term ||| get terms lower bound	count=1
arg_pair	given message ||| resource $imap_stream int $msg_number	count=1
function_name	[function_name_1] high priority ||| [function_name_2] [function_name_1]	count=1
function	set the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	which ||| current	count=1
namespace	snmp object ||| snmp	count=1
namespace	propertys ||| reflectionproperty	count=1
arg_pair	value ||| string $value string $timeout	count=1
namespace	of data from ||| function	count=5
function	ahead or returns [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=7
arg_pair	result set ||| string $class_name	count=1
function_name	copies a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	closes the ||| cubrid close	count=2
function_name	of the memcached::res_* constants ||| code	count=1
return	this function is only ||| mongoid	count=1
function_name	position for text printing ||| text pos	count=1
function_name	[function_name_1] request ||| [function_name_1] [function_name_2]	count=3
namespace	whether ||| intlchar	count=1
function_name	[function_name_1] root ||| [function_name_2] device get relative [function_name_1]	count=1
function_name	get the terms from ||| terms	count=1
return	the current ||| bool	count=2
arg_pair	of the ||| resource $result	count=16
function_name	dns resource records associated ||| dns get record	count=1
arg_pair	a change ||| string $value	count=1
arg_pair	up callback ||| mixed $callback	count=1
arg_pair	in the result-set from ||| int $type	count=1
function_name	returns minimum ||| get	count=1
function_name	[function_name_1] spacing for ||| [function_name_1] [function_name_2]	count=3
arg_pair	the image ||| int $arg3	count=1
function_name	digest hash value for ||| digest	count=1
namespace	error string of ||| function	count=1
function_name	ftp ||| ftp mkdir	count=2
arg_pair	a number of snmp ||| string $community	count=2
namespace	the modulus of the ||| function	count=1
function_name	a [function_name] into ||| [function_name] export	count=1
function_name	contrast of [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	as [return] floating-point number ||| [return]	count=1
function_name	retrieve the entries stored ||| ldap next entry	count=1
function_name	filter that improves ||| filter	count=1
function_name	adjusts the levels ||| level	count=2
arg_pair	the database name used ||| resource $link_identifier string $database	count=1
arg_pair	color or the ||| int $green	count=1
return	and/or [return] ||| [return]	count=1
function_name	need to ||| set	count=1
function_name	filling color ||| cmykfill	count=2
namespace	error returned ||| function	count=1
function_name	by ibase_blob_close() ||| cancel	count=1
function_name	row as a ||| ibase fetch object	count=1
function_name	function replaces ||| replace	count=1
arg_pair	statement ||| resource $connection string $statement	count=1
function_name	from a given ||| ibase	count=1
arg_pair	returns the portion of ||| bool $before_needle	count=1
function_name	sets ||| fann set	count=25
function_name	personal [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	function that has been ||| function	count=1
function_name	you the number ||| num fields	count=1
function_name	set the external attributes ||| external attributes	count=2
namespace	the context ||| zmqcontext	count=1
function_name	affected rows by ||| mysql affected rows	count=1
namespace	and ||| evperiodic	count=1
arg_pair	that the property ||| int $type	count=1
function_name	translates ||| pdf translate	count=2
function_name	device [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	returns the parent ||| get parent	count=2
function_name	valid socket ||| socket connect	count=1
arg_pair	sequence and returns an ||| string $sequence	count=1
function_name	stream fstream or ||| stream	count=1
function_name	depth as a string ||| depth	count=1
function_name	pops ||| array pop	count=1
namespace	using the entry ||| ziparchive	count=2
function_name	epochs the input ||| cand epochs	count=2
function	apache environment [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	parses an response xml ||| xml response	count=1
function_name	an image with a ||| image	count=1
arg_pair	acts very [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	sets the query ||| set	count=1
arg_pair	for the messages in ||| resource $imap_stream	count=1
return	to the end ||| bool	count=1
function_name	specific method ||| has method	count=1
function_name	sets [function_name_2] ||| [function_name_1] facet [function_name_2] count	count=1
function_name	the first attribute ||| first attribute	count=1
function_name	returns the names of ||| get	count=1
arg_pair	the data ||| resource $stmt	count=1
function_name	refer to the primary ||| odbc foreignkeys	count=1
function_name	existing ||| metadata	count=1
function	an [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	and ||| function	count=15
function_name	the nsapi ||| nsapi	count=1
arg_pair	changes file or directory ||| string $path int $uid	count=1
function_name	[function_name_1] static variables ||| [function_name_1] [function_name_2]	count=1
function_name	unique identifier guid ||| guid	count=1
arg_pair	watcher object and starts ||| int $priority	count=1
function_name	reference of ||| mb decode numericentity	count=1
arg_pair	returns a ||| string $encoding string $separator	count=1
arg_pair	given filter filtertype on ||| int $filtertype	count=1
function_name	upper [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	of the ||| int $method array $arguments	count=1
namespace	this function behaves exactly ||| function	count=1
return	periodic watcher ||| void	count=1
arg_pair	mssql_connect() with two major ||| string $password bool $new_link	count=1
function_name	the name ||| current	count=1
return	identity ||| integer	count=1
return	trace ||| void	count=1
function_name	from a ||| ibase fetch	count=1
function_name	specified events is ||| event	count=1
function_name	frees previously created ||| free	count=1
function_name	an ldap link ||| ldap connect	count=1
function_name	an animated image ||| image ticks per second	count=1
function_name	[function_name_1] warnings ||| [function_name_2] [function_name_1]	count=1
arg_pair	result set listing ||| string $table-name	count=2
function_name	frees all resources ||| free	count=1
function_name	semaphore with ||| sem	count=1
function_name	empty ||| empty	count=1
namespace	function closes ||| function	count=1
function_name	[function_name_1] request ||| [function_name_2] [function_name_1]	count=3
arg_pair	of search in subject ||| int $count	count=2
function_name	route which is ||| get	count=1
arg_pair	for the given message ||| resource $imap_stream	count=1
namespace	the specified field s ||| mongocollection	count=1
arg_pair	or ||| int $key string $flags	count=1
arg_pair	scales the ||| int $width	count=1
function_name	[function_name_1] [function_name_2] phrase ||| [function_name_2] [function_name_1] phrase	count=18
namespace	on the server ||| mongocursor	count=1
function_name	backpropagation neural network from ||| fann create from	count=1
return	the end of ||| bool	count=2
function_name	from the french republican ||| frenchtojd	count=1
function_name	pointer ||| bzerrstr	count=1
function_name	to set environmental ||| set environment	count=2
function_name	horizontal ||| get horizontal	count=1
arg_pair	ca both ||| string $ca_info	count=1
function_name	[function_name_1] scaling for ||| [function_name_2] [function_name_1]	count=2
arg_pair	equivalent to memcached::getmulti() ||| int $flags	count=1
function_name	size [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	combining [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] search ||| [function_name_2] [function_name_1]	count=2
arg_pair	of insert operations ||| mongocollection $collection array $write_options	count=1
arg_pair	execute processing ||| callable $execute	count=1
return	attempts to ||| bool	count=1
function_name	specified status ||| status	count=1
function_name	annotation ||| annotation	count=1
function	rolls back [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	rows in ||| rows	count=1
function_name	returns ||| get children	count=3
function_name	internet host ||| gethostbyaddr	count=1
function_name	of [function_name] while ||| reduce noise [function_name]	count=1
function_name	and height as an ||| image geometry	count=1
function_name	the connection ||| pg connection	count=1
function_name	of the topmost ||| end	count=1
function_name	given result ||| fetch	count=1
namespace	as a ||| gmagick	count=1
function_name	fetches multiple ||| oci fetch all	count=1
function_name	[function_name_1] index ||| [function_name_1] [function_name_2]	count=5
function_name	the current stroking color ||| gray stroke	count=1
function_name	[function_name_1] document frequency ||| [function_name_2] [function_name_1]	count=4
function_name	browser after sending all ||| all	count=1
function_name	placeholder name ||| name	count=1
return	starts running the ||| bool	count=1
function_name	be represented with existing ||| set metadata	count=1
arg_pair	can be added ||| string $file string $localname	count=1
namespace	a member of ||| domelement	count=1
function_name	password ||| init with password	count=2
return	end of ||| int	count=1
arg_pair	using specified hashing ||| resource $privkey	count=1
function_name	after ||| immortal	count=1
arg_pair	c ||| string $c	count=1
function_name	file ||| add file	count=2
return	day given in ||| array	count=1
arg_pair	of an snmp ||| string $community	count=1
namespace	is only used ||| mongoid	count=1
function_name	merges three files ||| merge3	count=1
function_name	[function_name_1] trigram phrase ||| [function_name_2] [function_name_1]	count=1
return	not exist ||| mixed	count=1
namespace	measurement ||| hrtime\performancecounter	count=1
namespace	imagick instance ||| imagick	count=1
function_name	returns ||| mysqli	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] text [function_name_1]	count=7
namespace	it ||| function	count=2
function_name	compression method ||| compression	count=1
function_name	[function_name_1] supported by ||| [function_name_2] [function_name_1]	count=4
arg_pair	of ||| int $startpos	count=1
function_name	[function_name_1] request headers ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] entry at runtime ||| [function_name_1] [arg_pair_2]	count=3
function_name	activation steepnesses ||| fann get cascade activation steepnesses count	count=1
function_name	sets the target frame ||| fdf set target frame	count=1
arg_pair	messaging server ||| array $properties	count=1
function_name	in conjunction [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	user specified in name ||| int $base_group_id	count=1
function_name	step-size is a positive ||| rprop delta	count=1
arg_pair	equivalent to memcached::get() ||| callable $cache_cb float $cas_token	count=1
namespace	the current ||| limititerator	count=1
function_name	returns the value for ||| get option	count=1
function_name	kadm5 library ||| kadm5 init	count=1
function_name	gets the extrema for ||| extrema	count=1
function_name	other content item ||| begin item	count=1
function_name	line number ||| line number	count=2
function_name	a given ||| object	count=1
function_name	for the next tuple ||| dbplus next	count=1
function_name	callback [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	an id3 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	similar to creating a ||| get active	count=1
namespace	cursors ||| mongocursor	count=1
return	stored with a ||| void	count=1
function_name	field ||| msql field	count=4
function_name	id for the ||| id	count=2
function	bitwise and [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	data from the buffer ||| eventbuffer	count=1
namespace	use this method ||| splfileinfo	count=1
function_name	used with the ||| fbsql	count=1
function_name	green primary point ||| getimagegreenprimary	count=1
arg_pair	row of data ||| int $fetch_flag	count=1
arg_pair	the field after the ||| resource $fdf_document string $fieldname	count=1
function_name	regular file ||| file	count=2
return	the programmer when ||| boolean	count=2
function_name	creates a standard ||| create	count=4
function_name	word ||| get word	count=1
return	font ||| bool	count=1
function_name	[function_name_1] phrase queries ||| [function_name_2] [function_name_1] string $slop	count=1
namespace	or not [namespace] is ||| [namespace]	count=1
return	gearmanclient::addtask() gearmanclient::addtaskhigh() ||| bool	count=1
function_name	convert ||| strval	count=1
function_name	the two letter country ||| country	count=1
return	previously ||| bool	count=2
function_name	[function_name_1] one of ||| [function_name_1] stats [function_name_2]	count=1
function_name	termscomponent ||| set terms	count=1
function_name	vector subtraction of ||| sub	count=1
function_name	color for all ||| color	count=1
function_name	fetches multiple rows from ||| oci fetch all	count=1
function_name	spl ||| spl autoload	count=1
function_name	of the horizontal ||| get horizontal	count=1
function_name	form [function_name_2] ||| submit [function_name_1] [function_name_2]	count=2
function_name	of the route ||| current	count=1
function_name	[function_name_1] the page ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name] data ||| xml set [function_name] data	count=1
arg_pair	ca both ||| string $ca_path string $ca_info	count=1
function_name	to reduce the ||| array reduce	count=1
function	is [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	background [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] key sizes ||| [function_name_2] [function_name_1]	count=1
function	creates [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	[arg_pair_1] db2_prepare() ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	row of ||| fetch	count=3
function	[function_name_1] an sql ||| [function_name_1] [arg_pair_2]	count=1
function_name	prepare next [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	opcode [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	gets the string ||| recursivetreeiterator	count=1
return	prepared ||| sqlite3result	count=1
namespace	the contents of ||| function	count=2
arg_pair	by execute processing ||| int $pri	count=1
arg_pair	that correspond ||| array $ctorparams	count=1
namespace	callback function ||| function	count=1
function_name	a multibyte ||| mb	count=1
return	or more ||| mixed	count=1
function_name	users query string with ||| query	count=1
function_name	starts a new ||| begin	count=1
function_name	must ||| loop	count=1
function_name	this method returns the ||| get	count=1
function_name	string text ||| text	count=1
function_name	get the activation steepness ||| activation steepness	count=1
function_name	should not be ||| construct	count=1
function_name	rows affected by ||| ifx affected rows	count=2
function_name	the structure of a ||| imap bodystruct	count=1
function_name	code ||| code by	count=1
function_name	tests if ||| gmp testbit	count=1
function_name	has ||| has	count=10
function_name	blob for reading and ||| ibase blob echo	count=1
function_name	[function_name_1] function ||| [function_name_1] [function_name_2]	count=17
arg_pair	a socket ||| mixed $socket	count=1
function_name	values from ingres ||| ingres	count=1
function_name	provided ||| add	count=1
namespace	represented with ||| pharfileinfo	count=1
arg_pair	a user function ||| string $class string $callback	count=1
namespace	of the internet host ||| function	count=1
function_name	wait for a ||| wait	count=1
function	[function_name_1] variables ||| [function_name_1] info [arg_pair_2]	count=1
namespace	given file in bytes ||| function	count=1
function_name	the horizontal scaling ||| horizontal scaling	count=3
function_name	function returns ||| get	count=2
function_name	returned by gettext() and ||| bind textdomain	count=1
function_name	namespace uri ||| namespace uri	count=1
function_name	of the current cipher ||| cipher	count=1
function_name	returns the album string ||| get album	count=1
function_name	host checks ||| disable	count=1
function_name	request represented by csr ||| openssl csr	count=2
function_name	[function_name_1] sarprop step ||| [function_name_2] [function_name_1]	count=3
arg_pair	afterward by the ||| string $baseclass string $extendedclass	count=1
function	extract [arg_pair_2] ||| bool [function_name_1] string $pathto [arg_pair_2] bool $overwrite	count=1
function_name	recent ||| recent	count=1
function_name	primary [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	a directory which match ||| string $path	count=1
arg_pair	for ||| eventdnsbase $dns_base	count=1
function_name	query fields ||| query	count=1
return	was used to prepare ||| bool	count=2
function_name	[function_name_1] mysql ||| [function_name_2] [function_name_1]	count=2
function_name	request has ||| send request	count=1
function_name	json string to ||| json	count=1
return	to trace the ||| void	count=1
arg_pair	table_name ||| resource $connection string $table_name	count=1
arg_pair	communication to a file ||| string $pathname	count=1
arg_pair	statement which can ||| resource $connection string $statement	count=1
function_name	the intersection of ||| array uintersect assoc	count=1
return	a specified ||| bool	count=1
function_name	create and optionally ||| create	count=1
function_name	event ||| set event	count=1
function_name	get the current ||| get current	count=5
namespace	the group of ||| function	count=1
function_name	mime charset string ||| mb preferred mime name	count=1
namespace	yaf_router s route stack ||| yaf_router	count=1
function_name	aggregate function for ||| create aggregate	count=1
namespace	and host ||| oauth	count=1
function_name	minimum document frequency ||| terms min count	count=2
function_name	a non-empty tags ||| enchant broker	count=1
function_name	a namespace is ||| namespace	count=1
function_name	[function_name] query ||| mysqlnd qc get [function_name]	count=1
return	retrieve ||| yaf_controller_abstract	count=1
function_name	stream resource and returns ||| stream get	count=1
arg_pair	the brightness saturation ||| float $brightness float $saturation	count=1
function_name	writes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	phar archive with a ||| phar	count=1
return	to a string ||| string	count=1
function_name	the contrast ||| contrast	count=1
arg_pair	and challenge using ||| string $challenge	count=1
function_name	imap error ||| imap last error	count=1
namespace	entry was deleted ||| quickhashinthash	count=1
function_name	the minimum message ||| sybase min message	count=2
namespace	be used to ||| pharfileinfo	count=1
rest	attempts to [function_2] ||| [function_2] [return_1]	count=3
function_name	labels that ||| labels	count=1
function_name	external entity ||| set external entity	count=1
function_name	mime ||| iconv mime	count=1
function_name	of the miter limit ||| miter limit	count=1
function_name	by gettext() and similar ||| textdomain	count=1
function_name	when end recursing one ||| end children	count=2
return	the end of file ||| bool	count=1
function_name	a ||| text node	count=1
namespace	tasks previously ||| gearmanclient	count=1
function	write [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] activation steepness ||| [function_name_2] [function_name_1]	count=1
function_name	the idle ||| idle	count=1
function_name	current thread [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	agent specified by ||| walk	count=1
return	an error ||| string	count=1
function_name	specified encoding ||| mb check encoding	count=1
namespace	the dom representation ||| domdocument	count=2
function_name	[function_name_1] result ||| [function_name_1] [function_name_2]	count=2
function_name	of the [function_name] without clearing ||| [function_name] get	count=1
function_name	with an url string ||| url	count=1
return	should ||| string	count=1
arg_pair	data by [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	document when the ||| solrdocument	count=1
arg_pair	or part of ||| int $ndocs array $callbacks	count=2
namespace	is only used by ||| mongoid	count=1
function_name	deactivate ||| set	count=1
function_name	gets the text ||| get text	count=2
return	simply ||| void	count=1
namespace	the domnodelist object ||| domnodelist	count=1
arg_pair	registers a ||| string $name mixed $callback	count=1
arg_pair	named virtual file and ||| string $filename	count=1
arg_pair	an option on ||| resource $sh int $option	count=1
return	buffer provided in ||| bool	count=1
namespace	time cursors ||| mongocursor	count=1
arg_pair	virtual file and ||| string $filename	count=1
function_name	php ||| set	count=1
return	any ||| bool	count=2
function_name	the kadm5 library using ||| kadm5 init	count=1
function_name	to execute ||| execute	count=1
namespace	member ||| domelement	count=1
function_name	type set multiset sequence ||| col get	count=1
namespace	and ||| mongocursorinterface	count=1
arg_pair	key and ||| mixed $key string $passphrase	count=1
function_name	a fixed size thumbnail ||| thumbnail	count=1
return	send to ||| bool	count=1
arg_pair	of the output connections ||| int $max_neurons	count=1
function	to execute [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	root elements ||| root element	count=2
function_name	used with ||| database	count=1
function_name	[function_name_1] [function_name_2] objects except for those ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] to ||| [function_name] seq insert	count=1
function_name	[function_name_1] base ||| [function_name_2] [function_name_1]	count=1
function_name	rate is used to ||| rate	count=1
function_name	from a ||| object	count=1
function_name	glyph definition ||| end glyph	count=1
function_name	tests if [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] is null	count=2
function_name	[function_name_1] proxy ||| [function_name_1] [function_name_2]	count=1
function_name	main filter ||| add expand filter	count=1
function_name	two-dimensional ||| extended stats	count=1
function_name	string prefix ||| prefix	count=1
function_name	to the decoded quoted ||| quoted	count=1
arg_pair	override the [arg_pair_2] ||| [arg_pair_2] string $msgid2 [arg_pair_1]	count=1
namespace	stored with a ||| pharfileinfo	count=1
function	[function_name_1] old_data string ||| [arg_pair_2] [function_name_1]	count=1
namespace	statement [namespace] ||| [namespace]	count=6
function_name	[function_name_1] action ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] fields pf2 ||| [function_name_2] [function_name_1]	count=3
function_name	sepia ||| sepia	count=1
function_name	a json ||| json	count=1
function_name	delivered whose action is ||| pcntl	count=1
function_name	with db2_connect() ||| db2	count=1
function_name	this function is only ||| set	count=1
namespace	document from the dom ||| domdocument	count=1
namespace	is not used ||| mongodb	count=1
function_name	next tuple for ||| next	count=1
function_name	einer mime kopfzeile ||| iconv mime encode	count=1
namespace	to searchd runs ||| sphinxclient	count=1
function_name	in each layer in ||| layer array	count=1
function_name	active cursor name ||| ingres cursor	count=1
arg_pair	the coordinate system ||| resource $p	count=1
function_name	avoid specific event ||| avoid method	count=1
arg_pair	a two-dimensional array ||| int $maxrows	count=1
function_name	a sequence type attribute ||| seq	count=1
function_name	for maxdb_options() ||| maxdb	count=1
namespace	information stored ||| pharfileinfo	count=1
function_name	cropping ||| crop	count=1
arg_pair	to ||| bool $exclusive bool $with_comments	count=1
function_name	[function_name] of ||| [function_name] set	count=2
function_name	blue primary point for ||| getimageblueprimary	count=1
arg_pair	the given ||| int $quality int $filters	count=1
return	to directory ||| bool	count=1
arg_pair	sealed_data using the ||| string $sealed_data	count=1
namespace	the [namespace] file ||| [namespace]	count=1
function_name	next ingres ||| ingres next	count=2
function_name	bson ||| bson	count=2
function_name	cookie ||| cookie	count=1
function_name	executing generator object ||| executing generator	count=1
arg_pair	date ||| int $month int $day	count=1
function_name	running ||| do	count=1
function_name	current font [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	the first ||| string $data	count=2
function_name	the structure ||| bodystruct	count=1
function_name	the order number ||| order	count=1
arg_pair	access to ||| int $option resource $hobj	count=1
function_name	escape certain ||| ingres escape string	count=2
arg_pair	from object_id and return ||| string $object_id int $timeout	count=1
arg_pair	registered ||| bool $details	count=1
function_name	[function_name_1] the idle ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] [function_name_2] an entry defined by ||| ziparchive bool [function_name_1] [function_name_2] index int $index string	count=2
function_name	maintain their correlation ||| uasort	count=1
function_name	in the route ||| get current route	count=1
arg_pair	events ||| int $events	count=1
arg_pair	integer for a given ||| int $property	count=1
return	respond to ||| bool	count=1
arg_pair	a gmp number ||| gmp $gmpnumber	count=1
namespace	of the hash in ||| quickhashinthash	count=1
arg_pair	array1 with ||| array $array2	count=2
function_name	name used with ||| fbsql database	count=1
arg_pair	to ann ||| resource $ann array $input_vector	count=1
return	query if multiple sql ||| bool	count=1
function_name	[function_name_1] parameters for ||| [function_name_1] [function_name_2]	count=1
return	the connection to auto-commit ||| bool	count=1
function	[function_name_1] a named ||| [function_name_1] service [arg_pair_2]	count=1
arg_pair	ord in the font ||| int $ord	count=1
return	used in the ||| int	count=1
function_name	iteration begins after ||| begin iteration	count=2
function	[function_name_1] a ||| [function_name_1] code [arg_pair_2]	count=1
arg_pair	how parameter ||| array $set	count=1
function_name	legendre symbol ||| legendre	count=1
function_name	from ||| ibase	count=1
function_name	corresponding ||| geoip id	count=1
namespace	sets ||| function	count=1
function_name	low priority task in ||| low	count=1
function_name	adds a link to ||| pdf add	count=1
function_name	hash of the file ||| file	count=1
function_name	the structure of a ||| bodystruct	count=1
arg_pair	a given result identifier ||| resource $result_id	count=1
function_name	stretch to use when ||| stretch	count=1
function_name	in input vector after ||| input	count=1
return	set if you requested ||| bool	count=1
function_name	frees the memory and ||| free	count=1
arg_pair	added to the tar/zip ||| string $localname	count=1
function_name	server without waiting ||| pg send query	count=1
function_name	consider for ||| fragsize	count=1
function_name	current column [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	highlighted ||| set highlight	count=1
arg_pair	and ||| array $array	count=1
arg_pair	data ||| resource $data	count=1
arg_pair	retrieved with the pdf_open_image() ||| resource $p int $image	count=1
function_name	replaces the given ||| dbase replace	count=1
arg_pair	dn which represents the ||| array $dn	count=1
function_name	[function_name_1] the connection ||| [function_name_2] [function_name_1]	count=2
function_name	minimum document frequency ||| terms min	count=1
namespace	yaf_route_simple will ||| yaf_route_simple	count=1
function_name	[function_name_1] base ||| [function_name_1] [function_name_2]	count=1
function_name	the class method ||| method	count=1
arg_pair	returns the input ||| string $input int $pad_length	count=1
arg_pair	to memcached::getmulti() except that ||| string $cas_tokens int $flags	count=1
function_name	quantum range for the ||| quantum range	count=1
arg_pair	from an ||| string $name	count=1
function_name	set ||| newt set	count=1
function_name	[function_name_1] rendering intent ||| [function_name_2] [function_name_1]	count=1
arg_pair	string input ||| string $delimiter	count=1
arg_pair	a ||| resource $image	count=2
arg_pair	at the position ||| int $left int $top	count=1
return	how to ||| bool	count=1
function_name	size i ||| extent	count=1
return	checks this is not ||| bool	count=1
arg_pair	the number of characters ||| int $offset	count=1
arg_pair	a and b ||| gmp $b	count=1
function_name	field from the current ||| oci field	count=1
function_name	stub so this ||| default stub	count=1
arg_pair	and the ||| int $textflow	count=1
arg_pair	server thats associated ||| string $database_name resource $link_identifier	count=1
function	[function_name_1] of pid ||| [function_name_1] [arg_pair_2]	count=3
function_name	default external entity ||| external entity	count=1
function_name	number ||| num	count=15
function_name	gets the string ||| get	count=1
function_name	svn client libraries ||| svn client	count=2
arg_pair	associates imagickpixel ||| int $rows	count=1
arg_pair	ann based on previously ||| resource $ann	count=1
arg_pair	the ||| int $type	count=4
function_name	compresses ||| gzcompress	count=1
arg_pair	specified by the hostname ||| string $hostname	count=1
arg_pair	in response to a ||| string $url	count=1
namespace	an event ||| event	count=1
function_name	numbering ||| add page label	count=2
arg_pair	assoc_array which has field= ||| array $assoc_array	count=1
namespace	numerically indexed array ||| sqlite3result	count=1
function_name	that matches color ||| paint transparent	count=1
function_name	used with the connection ||| fbsql	count=1
namespace	the stylesheet given by ||| xsltprocessor	count=1
function_name	the neural network ||| fann get	count=2
function_name	md5 ||| md5	count=1
return	be ||| void	count=4
function_name	returns the [function_name_2] ||| [function_name_1] server [function_name_2]	count=5
arg_pair	much like mssql_connect() ||| bool $new_link	count=1
function_name	sets the default timezone ||| default timezone set	count=1
arg_pair	or non-blocking mode on ||| resource $stream bool $mode	count=1
function_name	gets the default ||| get default	count=2
function_name	idle callback ||| idle	count=1
namespace	not for production environments ||| oauth	count=1
function_name	location ||| location	count=1
function_name	slop ps3 parameter ||| slop	count=1
function_name	given password to ||| init with password	count=1
function_name	the id3 ||| id3 get	count=1
function_name	type set multiset sequence ||| col	count=2
arg_pair	functionally equivalent to memcached::add() ||| int $expiration	count=1
return	be a valid ||| bool	count=1
return	an hexadecimal [return] of the ||| [return]	count=1
return	its value ||| mixed	count=1
function_name	the boost ||| boost	count=1
function_name	the multi handle ||| curl multi	count=2
function_name	dbase database as ||| dbase	count=1
function_name	signed public key and ||| openssl spki new	count=1
arg_pair	object_id ||| string $timeout	count=2
function_name	the host name ||| gethostbyaddr	count=1
namespace	function needs ||| function	count=1
function_name	the column [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	tasks previously added ||| gearmanclient	count=1
arg_pair	for the messages ||| resource $imap_stream	count=1
function_name	a row ||| ibase fetch object	count=1
function_name	php internally it ||| set	count=1
namespace	function url encodes the ||| function	count=1
function_name	image used ||| image	count=1
namespace	idle ||| mongocursor	count=1
arg_pair	hash ||| integer $algo	count=1
return	color to ||| bool	count=6
function_name	returns the number of ||| row count	count=1
arg_pair	the requested option ||| int $option	count=1
arg_pair	callback ||| callable $callback mixed $data	count=5
function_name	filter ||| add expand filter	count=1
function_name	descale input ||| descale train	count=1
function_name	[function_name_1] error shift ||| [function_name_1] [function_name_2]	count=8
function_name	creates an ldap link ||| ldap connect	count=1
function_name	title visible in ||| title	count=1
arg_pair	execute processing it just ||| callable $execute	count=1
arg_pair	virtual file ||| string $filename	count=2
function_name	returns an array ||| mysqlnd memcache get	count=1
function_name	bidi_mirrored property ||| mirrored	count=1
function_name	time for the ||| time	count=1
namespace	image ||| imagick	count=10
function_name	the french republican calendar ||| frenchtojd	count=1
function	name [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	is the private ||| check private	count=1
arg_pair	an snmp object specified ||| string $host string $community	count=1
function_name	true if [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	index of the ||| int $green int $blue	count=1
function	[function_name_1] posted ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name] specified ||| [function_name] image channel distortion	count=1
function_name	one containing the diff ||| diff	count=1
function_name	version number [function_name_1] [function_name_2] php is linked with ||| [function_name_1] [function_name_2] version	count=1
function_name	into a mysqlnd ||| mysqlnd	count=1
function_name	session cookie ||| session get cookie	count=1
namespace	must be called ||| evloop	count=1
function_name	[function_name_1] status ||| [function_name_2] [function_name_1]	count=2
function_name	affected by a query ||| affected	count=1
arg_pair	keys from array1 ||| array $array1	count=2
function	the numbering [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function_name	chunks which is ||| chunk	count=1
function_name	transforms the ||| transform to doc	count=1
namespace	this function is useless ||| function	count=1
function_name	ifx_query() or ifx_do() query ||| ifx num	count=1
function_name	priority ||| buffer priority	count=1
return	searches for an ||| int	count=1
arg_pair	direction by alpha ||| resource $p float $alpha	count=1
function_name	of match [function_name] across ||| [function_name]	count=1
function_name	map configuration to use ||| map	count=1
function_name	the shared secret ||| radius server secret	count=1
return	a given result ||| object	count=1
function_name	merges the ||| merge recursive	count=1
function_name	[function_name_1] frame to ||| [function_name_1] [function_name_2]	count=3
function_name	given ||| ibase fetch	count=1
return	of a socket or ||| int	count=1
function	remove [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	or directory ||| string $path	count=1
function_name	sets the value ||| ldap set	count=1
function_name	sets the learning momentum ||| fann set learning momentum	count=1
namespace	prepared statement directly ||| pdostatement	count=1
function_name	host name of ||| host	count=1
function_name	retrieves the number of ||| num	count=1
function_name	a json encoded string ||| json decode	count=1
arg_pair	of working ||| string $path	count=1
function_name	get the query timeout ||| get query timeout	count=1
function_name	[function_name_1] from ||| [function_name_1] copy [function_name_2]	count=1
namespace	exists as a member ||| domelement	count=1
function_name	writes data ||| write	count=1
namespace	extensions ||| reflectionextension	count=1
function_name	adds a tag to ||| add	count=1
arg_pair	connection to an ||| array $options	count=1
function_name	bias in each ||| bias array	count=1
function_name	[function_name_1] key sizes ||| [function_name_1] [function_name_2]	count=1
function_name	on the ||| immortal	count=1
function_name	attaches another parser ||| set arg parser	count=1
function_name	which is effective ||| get	count=1
function_name	function creates ||| create entity	count=1
function_name	filter query determines which ||| expand filter query	count=1
function_name	table that the specified ||| table	count=3
function_name	[function_name_1] bytea ||| [function_name_1] unescape [function_name_2]	count=1
arg_pair	named ||| string $servicename	count=2
arg_pair	key ||| mixed $key	count=2
function_name	for suitable snippets ||| set highlight max analyzed chars	count=1
namespace	the database path ||| function	count=1
arg_pair	a given number of ||| int $width	count=1
namespace	in the specified ||| function	count=1
function_name	installs a [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	total number of ||| total	count=1
arg_pair	str with all ||| string $str	count=1
arg_pair	the callback ||| callable $callback mixed $parameter	count=1
function_name	video-frames ||| num frames	count=1
arg_pair	a function at ||| string $class string $function	count=1
function_name	a blob that has ||| ibase blob	count=2
arg_pair	new mailbox see ||| string $old_mbox	count=1
function_name	name which ||| name	count=1
function_name	modify ||| modify	count=1
function_name	number ||| cascade num	count=2
function_name	from a given result ||| fetch	count=1
function_name	pixel method ||| pixel method	count=2
function_name	multi [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	the socket socket ||| socket	count=1
function_name	[function_name_1] context ||| [function_name_2] [function_name_1]	count=7
arg_pair	a exists content block ||| string $content	count=1
function_name	the minor version number ||| minorversion	count=1
function_name	a failed ||| errnum	count=1
arg_pair	of text on ||| resource $pdfdoc string $text	count=1
arg_pair	cookie value ||| string $name string $value	count=1
arg_pair	feed it to ann ||| resource $ann array $input_vector	count=1
function_name	eventbuffer::addbuffer() except ||| prepend buffer	count=1
function_name	error message that ||| error	count=1
arg_pair	protocol level to ||| int $level	count=1
function	returns [arg_pair_2] ||| [function_name_1] extended stats [arg_pair_2]	count=1
function	replaces [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	returns a ||| get	count=4
arg_pair	no database is given ||| mixed $id	count=1
function	[function_name_1] key to ||| [arg_pair_2] [function_name_1]	count=3
function_name	the current line number ||| current line number	count=1
namespace	and restores terminal settings ||| function	count=1
function_name	on success returns the ||| get	count=1
function_name	a transaction [function_name] was begun ||| [function_name] rollback	count=1
function_name	result identifier produced ||| result	count=1
function	replaces the [arg_pair_2] ||| [function_name_1] recursive array $array1 [arg_pair_2]	count=2
return	allows you to ||| bool	count=2
function_name	training ||| input train	count=1
namespace	image ||| gmagick	count=24
arg_pair	a global transaction among ||| string $gtrid	count=1
function_name	the users query ||| query	count=1
function_name	including the [function_name] ||| [function_name]	count=1
function_name	to [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	a [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	to traverse over ||| snmprealwalk	count=1
arg_pair	fd file descriptor ||| mixed $fd	count=1
return	construct ||| int	count=1
function_name	the minimum ||| min	count=7
arg_pair	the ||| int $port	count=1
function_name	for all matches ||| all	count=1
function_name	text number ||| text	count=1
arg_pair	old parameter ||| int $old	count=1
function_name	acquires stream representing ||| event stream	count=1
function_name	lists all tables ||| odbc tables	count=1
arg_pair	b black ||| float $b	count=1
namespace	defined in yaf ||| yaf_application	count=1
arg_pair	as fields delimiter ||| string $delimiter string $null_as	count=3
arg_pair	[arg_pair_1] its indexes ||| [arg_pair_2] [arg_pair_1]	count=1
return	to a given ||| bool	count=1
function_name	all data from ||| add	count=1
arg_pair	result set listing the ||| string $table-name	count=2
function_name	version as a string ||| version	count=1
namespace	loop correspondingly ||| ev	count=1
function_name	random ||| gmp random	count=2
return	number of elements ||| int	count=1
function_name	identifier for first ||| first	count=1
arg_pair	an exact ||| imagick $imagick array $offset	count=1
function_name	all the constants currently ||| constants	count=1
function_name	it can contact ||| config	count=1
arg_pair	parsing location ||| resource $context string $location	count=1
function_name	string would ||| fnmatch	count=1
arg_pair	for security ||| resource $radius_handle	count=1
return	set of monitored ||| bool	count=1
return	number of ||| int	count=16
function_name	streams [function_name_2] ||| function bool [function_name_2] [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=6
function_name	[function_name_1] uses ||| [function_name_1] [function_name_2]	count=1
arg_pair	desired dimensions ||| float $blur	count=1
arg_pair	watcher object ||| mixed $data int $priority	count=1
function_name	route which is effective ||| current	count=1
function_name	terminals ||| newt clear key	count=1
function_name	into a mysqlnd ||| uh convert to mysqlnd	count=1
function_name	[function_name_1] information ||| [function_name_2] [function_name_1]	count=12
namespace	external name dictionary ||| gender\gender	count=1
arg_pair	for all of the ||| resource $ann int $activation_function	count=1
function_name	a namespace is declared ||| start namespace decl	count=1
function_name	path ||| pathname	count=1
function_name	compression method ||| set compression	count=1
function	[function_name_1] by ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	prepares it for later ||| int $len	count=1
arg_pair	files within a ||| string $pathto string|array $files	count=1
arg_pair	be called whenever a ||| resource $proxy string $value	count=1
function_name	examines a ||| x509 checkpurpose	count=1
function_name	outputs blocks of bytes ||| block	count=1
function_name	used to create ||| create	count=1
function_name	chromaticity white point ||| image white point	count=1
arg_pair	a file that ||| int $dictionary_link string $file	count=2
return	by the ||| string	count=2
function_name	http server [function_name] ||| [function_name]	count=1
function_name	previous node ||| prev	count=1
arg_pair	of the specified ||| resource $result int $field_offset	count=10
arg_pair	a page ||| int $page	count=1
function_name	result of oci_parse() or ||| statement	count=1
function_name	convolution ||| edgeimage	count=1
namespace	specified by ||| domnamednodemap	count=2
function_name	sub ||| sub	count=1
function_name	property for a code ||| get int property	count=1
function_name	set multiset sequence ||| col	count=2
arg_pair	ann ||| array $input_vector	count=2
function_name	odbc query ||| odbc fetch	count=1
return	the log for the ||| bool	count=1
function_name	message queue ||| queue	count=1
return	equivalent to ||| bool	count=1
function_name	[function_name_1] alpha channel ||| [function_name_2] [function_name_1]	count=2
arg_pair	the opposite of htmlentities() ||| string $string int $flags	count=1
function_name	resulting ||| trader	count=4
arg_pair	an snmp ||| string $community	count=2
function_name	last imap ||| imap last	count=2
return	rule ||| bool	count=1
function_name	workload ||| workload	count=1
function_name	the minimum error ||| sybase min error	count=2
namespace	create a yar_client ||| yar_client	count=1
function_name	current table ||| fbsql table	count=1
function	set [arg_pair_2] ||| [function_name_1] path [arg_pair_2]	count=1
function_name	kernel to ||| kernel	count=1
function_name	the stream or context ||| stream context get params	count=1
function_name	[function_name_1] algorithm or ||| [function_name_2] [function_name_1]	count=4
function_name	a convenience ||| fdf header	count=1
function	arbitrary [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	inclusion ||| sqlite3	count=1
arg_pair	in ||| callable $error_handler	count=1
function_name	entity loader ||| entity loader	count=2
function_name	returns an ||| get	count=3
function	this function [function_name_1] [arg_pair_2] instance of class domattr ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	from a ||| resource $result_id	count=1
function_name	persistence state ||| set persistence	count=1
return	to be called if ||| bool	count=2
function_name	property for a ||| int property value	count=1
arg_pair	use as a ||| string $name	count=1
function_name	repository ||| svn log	count=1
function_name	group ||| group sort fields	count=1
function	[function_name_1] by variable ||| [function_name_1] [arg_pair_2]	count=4
function_name	last error ||| error	count=7
arg_pair	of the ||| int $size	count=1
return	no more results to ||| bool	count=1
function	[function_name_1] whitespace ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] write ||| [function_name_1] bulk [function_name_2]	count=2
arg_pair	the replication ||| bool $check_consistency	count=1
function	vector subtraction [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	currently stored value ||| apc cas	count=1
function_name	iteration ends when recursiveiteratoriterator::valid() ||| end iteration	count=1
function_name	[function_name_1] get ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] of characters ||| [function_name] field length	count=1
function_name	pdi document parameter ||| pdf get pdi	count=1
arg_pair	a directory handle to ||| string $path resource $context	count=1
function_name	[function_name] database edition ||| [function_name] edition	count=1
function_name	lob object ||| lob2 size64	count=1
function_name	get statistics about ||| statistics	count=1
namespace	from the set of ||| event	count=1
function_name	starts ||| begin	count=3
function_name	version of sybase_fetch_row() that ||| sybase fetch assoc	count=1
function_name	the glyph at position ||| symbol	count=1
arg_pair	index of the color ||| int $blue	count=1
return	if the current iterator ||| bool	count=1
function_name	the route which ||| get	count=1
function_name	the next ||| dbplus next	count=1
arg_pair	mailbox currently opened ||| string $criteria	count=1
return	to update the content ||| bool	count=1
function_name	anonymous oracle pl/sql block ||| oci	count=1
function_name	page to add more ||| page	count=1
return	of [return] ||| [return]	count=2
function_name	replaces the values ||| replace	count=2
function	properties [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	the array iterator that ||| iterator	count=1
function_name	method any file ||| add file	count=1
arg_pair	later use ||| resource $pdfdoc string $fontname	count=1
function_name	[function_name_1] zone ||| [function_name_2] [function_name_1]	count=4
function_name	the next tuple for ||| next	count=1
function_name	host name ||| host	count=2
function_name	[function_name] for ||| [function_name]	count=2
function_name	cache ||| cache	count=3
arg_pair	with the given hostname ||| string $hostname int $type	count=1
arg_pair	a ||| string $field_override	count=2
namespace	however this function is ||| function	count=1
function_name	the minimum message ||| min message	count=2
function_name	error [function_name_2] ||| [function_name_2] [function_name_1]	count=24
function_name	decimal digit ||| digit	count=1
arg_pair	row ||| resource $result_id	count=1
arg_pair	a file to ||| string $path	count=1
function_name	database identified by ||| pgsql lobunlink	count=1
function_name	route ||| get current route	count=1
arg_pair	to a messaging server ||| string $protocol	count=1
namespace	current ||| solrinputdocument	count=1
function_name	miter [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	the object was thrown ||| throwable	count=1
function_name	feed [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	aggregate function for ||| aggregate	count=1
return	checks if ||| bool	count=2
arg_pair	if a valid boost ||| string $fieldname string $fieldvalue	count=1
function	deletes the [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	before entering ||| loop	count=1
arg_pair	name hostname looking for ||| string $hostname	count=1
function_name	image background ||| image background	count=2
return	[return] affected ||| [return]	count=2
arg_pair	a key-value pair into ||| string $value	count=1
function_name	apcu [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	size specified by ||| function	count=1
function_name	the [function_name] soapserver object ||| get [function_name]	count=1
arg_pair	result ||| resource $result int $row_number	count=1
function_name	[function_name_1] bitrate ||| [function_name_2] [function_name_1]	count=1
function_name	database instance ||| dba open	count=1
function_name	uid ||| imap uid	count=1
function_name	[function_name_1] album ||| [function_name_1] [function_name_2]	count=1
function_name	current solr version ||| solr version	count=2
function_name	pcos ||| pdf pcos get	count=1
function_name	new content object from ||| content new	count=1
namespace	from the ||| arrayiterator	count=1
return	running ||| bool	count=1
function_name	rows to display in ||| rows	count=1
namespace	[namespace] same rules ||| [namespace]	count=2
function_name	into a mysqlnd connection ||| mysqlnd	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] add [function_name_1]	count=3
function_name	type stream fstream or ||| get stream	count=1
namespace	trace the ||| function	count=1
function_name	file named by ||| pkey export to file	count=1
function_name	[function_name_1] a normalized ||| [function_name_2] [function_name_1]	count=1
arg_pair	a ||| mixed $data string $name	count=1
function_name	fetches ||| fetch all	count=2
arg_pair	the ||| int $textflow	count=1
function_name	regular expression given in ||| preg	count=1
function_name	next node ||| next	count=1
function_name	is a regular file ||| file	count=1
function_name	appends raw xml ||| append xml	count=3
function_name	an xml ||| save xml	count=1
function_name	gets the order number ||| yp order	count=1
function_name	ellipse ||| imageellipse	count=1
namespace	and returns ||| function	count=3
function_name	declaring class for ||| declaring class	count=2
arg_pair	to the message ||| mixed $message	count=1
function_name	internal readline ||| readline info	count=2
return	requested as an array ||| array	count=1
return	string ||| void	count=1
function_name	data from [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	the object from bson ||| bson	count=1
function_name	min parameter ||| min	count=1
function_name	look for suitable ||| max analyzed chars	count=1
function	readline [arg_pair_2] ||| [function_name_1] info [arg_pair_2]	count=1
arg_pair	subject [arg_pair_2] ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=1
function_name	property for ||| int property value	count=1
function	the length [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
arg_pair	a new ||| int $port	count=1
arg_pair	iteratively the callback function ||| callable $callback	count=1
function_name	[function_name_1] execute ||| [function_name_2] [function_name_1]	count=1
namespace	move ||| eventbuffer	count=1
return	current eventbuffer ||| bool	count=1
function_name	uploads the data ||| nb fput	count=1
function_name	[function_name_1] parsers ||| [function_name_2] [function_name_1]	count=8
function	[function_name_1] of an ||| [arg_pair_2] [function_name_1]	count=3
function_name	type of ||| get return type	count=1
function_name	establishes a database ||| dba open	count=1
namespace	or gearmanclient::addtasklowbackground() this call ||| gearmanclient	count=1
function_name	type attribute ||| type	count=1
function_name	boost function bf ||| boost function	count=1
arg_pair	program to a ||| string $qmanagername	count=1
function_name	function [function_name] ||| opcache [function_name] script cached	count=1
return	the string to ||| string	count=1
namespace	large object depending ||| oci-lob	count=1
function_name	error threshold factor ||| error threshold factor	count=6
function_name	[function_name] for ||| trader [function_name]	count=15
function_name	a row in ||| fetch	count=3
namespace	computed in ||| function	count=1
function_name	one result ||| odbc	count=1
function_name	facet ||| facet date other	count=2
function_name	the sqlite [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	effective in the ||| get	count=1
arg_pair	looking for ||| eventdnsbase $dns_base	count=1
arg_pair	or zip-based ||| string $webindexfile	count=1
function_name	of activation [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	attaches another [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the size ||| size offset	count=1
arg_pair	it to ann ||| array $input_vector	count=1
function_name	for production environments ||| disable	count=1
function_name	id3v2 object for ||| id3v2 tag	count=1
function_name	as layer ||| layer	count=2
function_name	gets the text interword ||| get text interword	count=1
function_name	the current font ||| current font	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] get [arg_pair_2]	count=6
function_name	[function_name_1] ends ||| [function_name_2] [function_name_1]	count=8
function_name	ids ||| get by ids	count=1
return	continuing the event loop ||| void	count=1
namespace	constructs a new ||| reflectionclass	count=1
arg_pair	the inverse of the ||| int $options	count=1
function	[function_name_1] point for ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	data between one ||| callable $callback string $data	count=1
arg_pair	with the given password ||| resource $dictionary string $password	count=1
function_name	country and region code ||| by country and region	count=1
function	adds [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	is ||| state	count=1
return	a text ||| string	count=1
function_name	event [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	echo ||| echo	count=1
function_name	directory contents ||| directory	count=1
namespace	or multiple ||| tokyotyrant	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] line [function_name_2]	count=1
arg_pair	given filter filtertype ||| int $filtertype	count=1
function_name	checks ||| disable	count=1
function_name	[function_name_1] begins after ||| [function_name_2] [function_name_1]	count=10
arg_pair	using ||| resource $privkey	count=1
function_name	an ftp ||| ftp	count=1
namespace	host name ||| function	count=1
arg_pair	old value of variant ||| mixed $value	count=1
namespace	method is ||| reflectionmethod	count=2
return	to a ms sql ||| bool	count=1
return	return an array ||| array	count=1
return	to the open ||| bool	count=1
arg_pair	of pid ||| int $pid int $process_identifier	count=1
function_name	executes custom function specified ||| custom	count=1
function_name	place in front of ||| get prefix	count=1
arg_pair	used for the specified ||| mixed $x509cert	count=1
function_name	numeric real group id ||| getgid	count=1
arg_pair	a ||| string $arg int $ok_packet	count=1
function_name	stats [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	query multiple queries are ||| mysql query	count=1
function_name	if a class is ||| is	count=1
function_name	frees the system and ||| free	count=1
function_name	sarprop step ||| sarprop step	count=6
function_name	resets the connection ||| connection reset	count=1
return	query if ||| bool	count=1
function_name	with the specified ||| pg fetch row	count=1
function_name	the handling [function_name] in ||| get [function_name]	count=1
arg_pair	a country ||| string $country_code	count=1
namespace	seconds for searchd ||| sphinxclient	count=1
function_name	creates a new ||| create document fragment	count=1
namespace	of the class the ||| reflectionclass	count=1
function_name	set the comment ||| set comment	count=1
arg_pair	executable file consists of ||| resource $filehandle	count=1
namespace	function that can succeed ||| function	count=4
function_name	transformation matrix of the ||| get trans matrix	count=1
function_name	expand query expand ||| expand query	count=1
arg_pair	the value of ||| string $value	count=1
namespace	assigan values ||| yaf_view_interface	count=1
namespace	domprocessinginstruction ||| domprocessinginstruction	count=1
function_name	frequency at ||| min doc frequency	count=1
arg_pair	be used afterward by ||| string $extendedclass	count=1
function_name	fetches a ||| fetch array	count=1
function_name	least [function_name_2] ||| [function_name_1] [function_name_2]	count=8
namespace	c [namespace] ||| [namespace]	count=1
arg_pair	by the given oid ||| resource $conn_identifier string $oid	count=1
function_name	associated with result ||| result	count=1
arg_pair	the information stored of ||| int $version	count=1
function_name	the apache [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	callback function ||| callable $callback string $data	count=1
function_name	path to the ||| path	count=1
function_name	record into a ||| put record	count=2
arg_pair	memcached::get() except that ||| callable $cache_cb float $cas_token	count=1
function_name	one and stores ||| xdiff file	count=2
function_name	would ||| fnmatch	count=1
arg_pair	virtual file and ||| resource $pdfdoc string $filename	count=1
arg_pair	a resource handle ||| string $encoding string $separator	count=1
function_name	a field in a ||| field	count=1
function_name	data [function_name_2] ||| [function_name_1] copy [function_name_2]	count=4
arg_pair	using the principal and ||| string $password	count=1
function_name	class which will ||| info class	count=1
arg_pair	given set type ||| resource $conn_identifier	count=1
function_name	is only used by ||| set state	count=1
namespace	name of the ||| function	count=2
return	while it ||| bool	count=1
arg_pair	the input identified by ||| array $input	count=1
function	[function_name_1] array1 with ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	a [arg_pair] ||| [arg_pair]	count=3
namespace	the specified ||| function	count=10
function_name	key-value pairs ||| put nr	count=1
function_name	used ||| fbsql	count=1
arg_pair	namespaceuri named ||| string $namespaceuri	count=2
function_name	number of activation steepnesses ||| get cascade activation steepnesses	count=1
arg_pair	to the specified filename ||| bool $all_frames	count=1
function_name	need ||| set state	count=2
function_name	to get [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	the current boost value ||| boost	count=1
function	registers passed [arg_pair_2] ||| [function_name_1] extension [arg_pair_2]	count=1
namespace	with an image ||| gmagick	count=1
return	production environments ||| bool	count=1
function_name	or gearmanclient::addtasklowbackground() ||| run	count=1
function_name	place after ||| postfix	count=1
function_name	pixel [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	- exp -arg/2 ||| sinh	count=1
function_name	creates a new ||| create	count=7
function_name	current available spl classes ||| spl classes	count=1
rest	[return_1] [function_2] ||| [return_1] [function_2]	count=64
arg_pair	a ||| string $name mixed $callback	count=1
arg_pair	fields delimiter ||| string $delimiter string $null_as	count=3
function_name	[function_name_1] steepness ||| [function_name_1] [function_name_2]	count=6
arg_pair	result ||| resource $link resource $result	count=1
return	of the appropriate values ||| int	count=1
namespace	opened by ||| function	count=1
function_name	[function_name_1] handler ||| [function_name_1] start namespace decl [function_name_2]	count=1
namespace	[namespace] under the ||| [namespace]	count=1
arg_pair	snmp object ||| string $host string $community	count=3
arg_pair	namespaceuri with ||| string $namespaceuri	count=1
function_name	given property exists in ||| property exists	count=1
return	which points to ||| bool	count=1
function_name	get or ||| database	count=1
function	existing class [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	an array of ||| array	count=2
namespace	given font ||| function	count=1
namespace	tables in the requested ||| function	count=1
arg_pair	does not already exist ||| array $keys array $options	count=1
arg_pair	override the current ||| int $n	count=1
function_name	the pagination information send ||| ldap control paged result response	count=1
namespace	process ||| yaf_router	count=1
function_name	removes a [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the column ||| column	count=1
arg_pair	address and ||| string $address	count=1
function_name	the blocksize ||| mcrypt module get algo block size	count=1
return	method ||| bool	count=1
function_name	[function_name_1] candidate ||| [function_name_2] [function_name_1]	count=4
function_name	query time ||| query time	count=2
arg_pair	prepares a query for ||| string $query	count=1
function	[function_name_1] is a ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	input ||| array $input	count=1
function	[function_name_1] other useful ||| [arg_pair_2] [function_name_1]	count=2
function_name	closes a blob that ||| blob close	count=1
namespace	the server ||| function	count=1
arg_pair	attempts ||| string $database_name resource $link_identifier	count=1
function_name	[function_name_1] call ||| [function_name_2] [function_name_1]	count=1
namespace	this function queries ||| function	count=1
arg_pair	a string [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
namespace	image from a ||| gmagick	count=1
namespace	the judy ||| judy	count=1
function_name	of mbox names) ||| imap renamemailbox	count=1
arg_pair	registers a ||| string $name mixed $step_callback	count=1
arg_pair	a string ||| string $enclosure	count=1
function_name	doc ||| get doc	count=1
function_name	closes file specified by ||| eio close	count=1
function_name	an ldap ||| ldap	count=2
function_name	last ||| last	count=16
function_name	[function_name_1] by reference ||| [function_name_2] [function_name_1]	count=1
arg_pair	mail [arg_pair_1] [arg_pair_2] overview ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	a particular [arg_pair] from the ||| [arg_pair]	count=1
function_name	stagnation epochs ||| stagnation epochs	count=2
function_name	mode is [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	an response xml ||| xml response	count=2
namespace	[namespace] under ||| [namespace]	count=1
function_name	creates an xml document ||| save xml	count=1
namespace	must be ||| evloop	count=1
rest	the [function_2] ||| [return_1] [function_2]	count=3
namespace	of monitored ||| event	count=1
arg_pair	of snmp [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	run a task ||| gearmanclient	count=2
arg_pair	domain ||| string $msgid1	count=1
function_name	error [function_name_2] ||| [function_name_1] [function_name_2]	count=24
function_name	neural network from ||| fann create from file	count=1
function_name	attempt to connect ||| conn	count=1
arg_pair	sorts message [arg_pair] ||| [arg_pair]	count=1
function_name	[function_name] could ||| [function_name]	count=1
function_name	stride value that will ||| stride for width	count=1
function_name	version of sybase_fetch_row() that ||| sybase fetch	count=1
function_name	[function_name_1] current page ||| [function_name_1] [function_name_2]	count=1
function_name	open slob ||| slob	count=1
function_name	performs a multibyte ||| mb	count=1
function_name	the specified field is ||| msql field	count=1
arg_pair	supplied in options preset ||| array $options	count=1
function	status [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function_name	starts running ||| run	count=1
function_name	the array iterator ||| iterator class	count=1
function_name	frequency ||| set mlt min doc frequency	count=1
function_name	normalized [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	pseudo-object ||| int $fetch_flag	count=1
function_name	return icu error code ||| intl error	count=1
function_name	give each connection ||| fann randomize weights	count=1
function_name	separates a [function_name] ||| separate image [function_name]	count=1
function_name	entry ||| entry	count=3
function_name	crossvalidate can ||| crossvalidate	count=1
function_name	error threshold [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	creates a [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	given variable_key in the ||| int $variable_key	count=1
function_name	that cannot be ||| metadata	count=1
arg_pair	a write ||| resource $relation	count=1
function_name	data ||| pgsql	count=2
function_name	sets the ||| pdf set	count=3
return	the what ||| void	count=1
function_name	calendar 4713 b ||| juliantojd	count=1
function	add a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	supported key ||| key	count=1
arg_pair	a message ||| string $target	count=1
function_name	uploads the ||| fput	count=1
arg_pair	mppe-keys is mangled for ||| string $mangled	count=1
arg_pair	str from ||| string $str	count=1
function_name	information stored with a ||| set metadata	count=1
namespace	given variable is ||| function	count=1
function_name	of any pixel ||| unique	count=1
arg_pair	a query ||| string $query	count=1
namespace	the exception was thrown ||| solrillegalargumentexception	count=1
function_name	[function_name_1] postgresql ||| [function_name_2] [function_name_1] is null	count=2
arg_pair	mangled for security ||| string $mangled	count=1
arg_pair	[arg_pair_1] html ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	send soap [function_name_2] ||| [function_name_1] [function_name_2] string $faultcode string $faultstring	count=1
function_name	[function_name_1] method ||| [function_name_2] [function_name_1]	count=5
arg_pair	mode to be used ||| string $mode string $mode_directory	count=1
arg_pair	identical to htmlspecialchars() in ||| string $encoding	count=1
function_name	tasks ||| run tasks	count=1
arg_pair	of the specified ||| int $field_offset	count=10
arg_pair	the fetched ||| resource $result int $result_type	count=1
function	[function_name_1] indexed by ||| [arg_pair_2] [function_name_1]	count=1
function_name	previous [function_name] ||| [function_name]	count=1
function_name	[function_name_1] activation functions ||| [function_name_2] [function_name_1]	count=1
namespace	information stored with a ||| pharfileinfo	count=1
function_name	the shared secret is ||| secret	count=1
arg_pair	and pattern for ||| string $pattern	count=1
function_name	[function_name_1] one and ||| [function_name_2] [function_name_1]	count=1
function_name	the number of activation ||| cascade activation	count=1
function_name	similar to strcasecmp() with ||| strncasecmp	count=1
function_name	the number ||| num input	count=1
function	recode [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	phrase fields pf2 ||| phrase fields	count=2
function_name	frequency at which words ||| mlt min doc frequency	count=1
function_name	[function_name_1] the comment ||| ziparchive bool [function_name_1] [function_name_2] index int $index string	count=1
function_name	any file or ||| add file	count=1
arg_pair	an array in ||| array $array	count=1
function_name	[function_name_1] range for ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] given user ||| [function_name_1] [arg_pair_2]	count=1
namespace	the hash and ||| quickhashintstringhash	count=1
function_name	previous tuple for the ||| prev	count=1
function_name	alternate q ||| alt	count=1
function_name	[function_name] phrase ||| [function_name] use phrase highlighter	count=1
function_name	style of the border ||| border style	count=1
function_name	field ||| field match	count=2
function_name	extended [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	to the server ||| solrupdateresponse	count=1
namespace	whether the ||| norewinditerator	count=1
return	[return] stop incoming ||| [return]	count=2
function_name	is ||| is	count=2
namespace	returns if the current ||| splobjectstorage	count=1
function_name	maps to facet ||| facet date start	count=1
function_name	ssl api function ||| ssl	count=1
function_name	result grouping ||| group	count=1
arg_pair	when the end is ||| resource $result	count=1
return	checks whether the ||| bool	count=5
function_name	process [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	resource is connected to ||| string	count=1
return	returns its value ||| mixed	count=1
arg_pair	data at position offset ||| int $offset string $data	count=1
arg_pair	sql statement ||| resource $conn_identifier string $sql	count=2
function_name	after sending all ||| all	count=1
function_name	not to stagnate ||| get	count=1
function_name	svn [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	should only ||| pharfileinfo	count=1
function_name	with the specified postgresql ||| pg	count=1
function_name	exports [function_name_2] ||| [function_name_1] [function_name_2] pixels int $x int	count=1
function_name	sends a ||| pg send prepare	count=1
namespace	the end ||| splfileobject	count=1
function_name	minimum word [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	xml namespace support ||| ns	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=24
function_name	bytecodes [function_name] and ||| bcompiler parse [function_name]	count=1
function_name	had errors in ||| errors	count=1
function_name	the form passed ||| form	count=1
function_name	type stream ||| get stream	count=1
arg_pair	list of ||| string $host int $port	count=1
function_name	returns the real ||| get real	count=2
function_name	handling [function_name] ||| get [function_name]	count=2
function_name	information stored ||| set metadata	count=1
function_name	[function_name] suffixes ||| [function_name]	count=2
function_name	fills and ||| ps fill	count=1
function_name	image border ||| image border	count=2
arg_pair	listening clients that ||| mixed $value	count=1
arg_pair	so that the ||| mixed $value	count=1
function_name	[function_name_1] module ||| [function_name_1] [function_name_2]	count=1
function	false [arg_pair_2] ||| [function_name_1] fetch assoc [arg_pair_2]	count=3
function_name	individual threshold ||| adaptive threshold	count=1
function_name	extension ||| extension	count=4
function_name	minimum ||| get cascade min	count=1
namespace	data from the session ||| sessionhandlerinterface	count=1
function	method updates [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	current ||| key	count=1
function_name	ingres ||| ingres	count=6
namespace	described in the wsdl ||| soapclient	count=1
function_name	this function closes a ||| close	count=1
namespace	be used ||| function	count=1
namespace	this function ||| mongoid	count=1
function_name	debug data ||| debug	count=1
function_name	escapes string for ||| escape	count=1
arg_pair	one row of ||| int $fetch_flag	count=1
function_name	token secret and ||| token	count=2
function_name	exchange ||| exchange	count=1
function_name	[function_name_1] output stagnation ||| [function_name_2] [function_name_1]	count=1
return	to a url ||| bool	count=1
namespace	signal handling function ||| function	count=1
namespace	and the ||| mongocursorinterface	count=1
arg_pair	by dn which represents ||| array $dn resource $privkey	count=1
function_name	animated ||| ticks per second	count=2
arg_pair	position pointing to ||| float $ury	count=1
function_name	stream fstream or string ||| stream	count=1
return	for [return] given property ||| [return]	count=1
return	to a valid terminal ||| bool	count=1
function_name	that matches color ||| opaque paint	count=1
namespace	the buffer for an ||| eventbuffer	count=1
function_name	normal date parsers and ||| create from date string	count=1
namespace	the string to ||| recursivetreeiterator	count=1
function_name	be ||| debug	count=1
function_name	slob ||| ifxus free slob	count=1
namespace	existing information ||| pharfileinfo	count=1
function_name	the handling [function_name] ||| get [function_name]	count=2
function_name	has autocommit ||| ingres autocommit	count=2
function_name	[function_name_1] lower ||| [function_name_2] [function_name_1]	count=3
arg_pair	callback to be ||| mixed $callback	count=1
function	specified events [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	using ||| harupage	count=1
function_name	record from ||| record with names	count=2
function_name	gets the blocksize ||| mcrypt module get algo block size	count=1
function_name	form passed ||| form	count=1
function_name	fetches multiple rows ||| fetch all	count=1
function_name	by the given file ||| bzerrstr	count=1
function_name	shouldnt ||| set state	count=2
function_name	the column names ||| cubrid fetch	count=1
arg_pair	the specified ||| mixed $x509cert	count=1
function_name	stored ||| set metadata	count=2
namespace	within the domnodelist object ||| domnodelist	count=1
function_name	[function_name_1] range for ||| [function_name_2] [function_name_1]	count=1
arg_pair	if no database is ||| string $collection	count=1
return	day specified ||| mixed	count=2
function_name	prefix with which to ||| prefix	count=1
arg_pair	an imap stream ||| int $n_retries array $params	count=1
function_name	exception details ||| get details	count=1
return	an ||| int	count=6
arg_pair	thats associated with the ||| resource $link_identifier	count=1
namespace	of variables ||| function	count=1
function_name	counts all ||| count	count=1
function_name	pixels match ||| match	count=1
function_name	passed variables and add ||| add	count=1
return	of columns in ||| int	count=2
arg_pair	field after ||| resource $fdf_document string $fieldname	count=1
arg_pair	by the object_id ||| string $object_id	count=3
namespace	which ||| yaf_router	count=1
arg_pair	file specified by fd ||| int $pri	count=1
arg_pair	property value for an ||| mixed $codepoint	count=1
arg_pair	the opposite of htmlentities() ||| int $flags	count=1
function_name	but the field ||| fbsql field	count=1
namespace	entries by key using ||| arrayiterator	count=1
function_name	returns the corresponding geoip ||| geoip	count=1
function_name	described/referred ||| set ordering	count=1
function_name	from a glo instance ||| from glo	count=1
namespace	passed to the class ||| reflectionclass	count=1
arg_pair	by assoc_array which has ||| int $options	count=1
function_name	ftp connection ||| ftp	count=1
function_name	[function_name_1] number for ||| [function_name_1] [function_name_2]	count=4
arg_pair	thats ||| string $database_name resource $link_identifier	count=1
arg_pair	socket stream or ||| eventbase $base mixed $socket	count=1
function_name	connection ||| database	count=1
function_name	enchant providers ||| enchant	count=1
function_name	maximum ||| max count	count=2
function_name	is used to escape ||| escape	count=1
function_name	a hidden [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	option from the ||| resource $ftp_stream int $option	count=1
function_name	colormap ||| colormap image	count=1
function_name	active database on ||| select db	count=1
arg_pair	of any ||| int $y int $channel	count=1
function_name	eventbuffer::addbuffer() except that ||| prepend	count=1
namespace	tar/zip ||| phardata	count=2
namespace	maxdb_connect_error() [namespace] will return ||| [namespace]	count=1
arg_pair	that match the pattern ||| string $pattern bool $only_names	count=1
function_name	for maxdb_options() and ||| maxdb	count=1
function_name	[function_name_1] signal event ||| [function_name_1] [function_name_2]	count=1
function_name	headers ||| imap headers	count=1
function_name	fixed size thumbnail ||| thumbnail	count=1
arg_pair	the given set ||| resource $conn_identifier string $oid	count=1
function	[function_name_1] given message ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] variable_name in ||| [arg_pair_1] [arg_pair_2]	count=1
namespace	the [namespace] value of ||| [namespace]	count=1
arg_pair	the specified index ||| mixed $index	count=2
function_name	returns minimum [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the kadm5 ||| kadm5 init	count=1
function_name	sarprop step [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	or [function_name] object ||| get [function_name]	count=1
arg_pair	database ||| resource $link_identifier string $database	count=1
function_name	id3v2 ||| id3v2	count=1
arg_pair	a new ||| string $height	count=1
arg_pair	the specified entry from ||| string $key	count=1
function_name	file extension ||| get extension	count=2
function_name	learning ||| learning	count=3
function_name	a random number ||| gmp random	count=1
function_name	name to ||| name	count=1
return	descriptor of a ||| int	count=1
return	route which is ||| string	count=1
arg_pair	of ||| int $options resource $compcode	count=1
arg_pair	text in the ||| string $text	count=1
function_name	dot product ||| mult	count=1
function_name	to return ||| terms return	count=1
function_name	the ||| get	count=26
function_name	the working copy ||| svn	count=1
function_name	odbc ||| odbc	count=3
namespace	maxdb_options() and maxdb_real_connect() ||| function	count=1
namespace	non-executable [namespace] cannot ||| [namespace]	count=1
function_name	server host name ||| host info	count=1
arg_pair	that the cookie value ||| string $name string $value	count=1
return	the ||| float	count=11
return	error string for the ||| string	count=1
function_name	service monitoring ||| service	count=1
function_name	a [function_name] ||| [function_name]	count=9
function_name	[function_name_1] stores the ||| [function_name_1] [function_name_2]	count=4
arg_pair	new date ||| int $usec	count=1
function_name	registers a ||| register	count=1
namespace	defined in ||| yaf_application	count=1
function_name	sets the cascade candidate ||| fann set cascade candidate	count=1
namespace	last request on the ||| function	count=1
function	option specified by ||| option resource $socket	count=1
function_name	continuing the ||| loop	count=1
namespace	with the gmagick object ||| gmagick	count=1
function_name	[function_name_1] spacing ||| [function_name_2] [function_name_1]	count=15
function_name	training [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	ldap ||| ldap	count=7
arg_pair	identifier ||| resource $result_id	count=1
arg_pair	image to a palette ||| bool $dither	count=1
function_name	a specific row in ||| db2 fetch row	count=1
function	encryption mode [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	in the database and ||| resource $connection	count=1
function_name	[function_name_1] action for ||| submit [function_name_1] [function_name_2]	count=1
function_name	copies ||| copy to array	count=2
function_name	the numeric ||| numeric	count=1
function_name	in ||| metadata	count=1
function_name	provides a stride value ||| stride for	count=1
namespace	given key ||| function	count=1
namespace	training parameters ||| svm	count=2
function_name	thread [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	or ||| gearmanclient	count=1
function_name	[function_name_1] id3v1 tag ||| [function_name_1] [function_name_2]	count=1
function_name	places a ||| place pdi	count=1
arg_pair	desired resolution ||| float $blur	count=1
function_name	[function_name_1] trace log ||| [function_name_1] [function_name_2]	count=1
function_name	and ||| disable	count=1
function_name	given file and writes ||| write	count=1
function_name	of the pixels match ||| match	count=1
function_name	sets whether or not ||| set	count=1
return	terminate the ||| bool	count=1
function_name	[function_name] value ||| db2 field [function_name]	count=1
function_name	[function_name_1] bytecodes ||| [function_name_2] [function_name_1]	count=6
return	[return] database server ||| [return]	count=3
function_name	new record ||| record	count=1
function_name	path for ||| get dict path	count=1
arg_pair	to the query ||| string $name	count=1
function_name	only ||| set state	count=2
function_name	the mime ||| mime	count=1
function_name	the size and ||| size offset	count=1
arg_pair	array as keys and ||| array $keys	count=1
namespace	assigned unicode ||| intlchar	count=1
arg_pair	a ||| int $code	count=1
return	string of any ||| string	count=1
arg_pair	named column ||| mixed $column	count=1
function_name	returned ||| bzerrstr	count=1
function_name	connection associated ||| connection	count=1
function_name	field ||| alternate field	count=1
function_name	returns the sarprop ||| fann get sarprop	count=3
function_name	to get ||| get	count=1
function_name	row ||| db2 fetch	count=2
namespace	in to norewinditerator ||| norewinditerator	count=1
arg_pair	variable ||| mixed $variable int $type	count=1
function_name	timeout in seconds for ||| timeout	count=1
function_name	[function_name_1] create ||| [function_name_2] [function_name_1]	count=1
function_name	the rot13 encoding on ||| rot13	count=1
arg_pair	of a variable can ||| mixed $var bool $syntax_only	count=1
return	text position [return] 0 0 ||| [return]	count=1
function_name	the compression method of ||| set compression	count=1
arg_pair	parameters seconds and ||| int $seconds	count=1
function_name	the ||| loop	count=2
arg_pair	a php function ||| string $name	count=2
namespace	entering ||| evloop	count=1
function_name	string description ||| stomp	count=1
arg_pair	in dest ||| string $dest	count=1
return	error returned by the ||| string	count=1
function_name	ccl ||| ccl	count=1
function_name	kadm5 library ||| kadm5	count=1
function_name	code point ||| isbase	count=1
arg_pair	protocol level to the ||| int $level	count=1
function_name	url string argument ||| url	count=1
function_name	remaining idle ||| immortal	count=1
function_name	[function_name_1] the page ||| [function_name_1] fit pdi [function_name_2]	count=1
function_name	[function_name_1] log ||| query [function_name_1] [function_name_2]	count=1
function_name	an response xml string ||| xml response	count=1
function_name	mail ||| mail	count=2
arg_pair	given [arg_pair_2] ||| overview [arg_pair_1] [arg_pair_2]	count=5
arg_pair	argument of [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	the specified directory ||| resource $ftp_stream string $directory	count=2
function	creates [function_name_1] [arg_pair_2] subject to various options ||| [function_name_1] [arg_pair_2] string $optlist	count=1
function_name	the file ||| openssl pkey export to file	count=1
namespace	version of ||| function	count=1
arg_pair	or a list of ||| string $fk_table	count=1
function_name	a digest ||| openssl digest	count=1
arg_pair	in charlist ||| string $charlist	count=1
function_name	sets the activation ||| set activation	count=2
arg_pair	the contents of ||| resource $p int $doc	count=1
namespace	the host ||| function	count=1
function_name	[function_name_1] image alpha ||| [function_name_1] [function_name_2]	count=1
function_name	the size [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	need ||| set	count=1
namespace	the database has ||| mongocursorinterface	count=1
function_name	contents ||| load	count=1
namespace	or continuing ||| evloop	count=1
function_name	[function_name_1] databases ||| [function_name_1] [function_name_2]	count=2
function_name	class method [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	overrides ||| override	count=1
namespace	hyperwave ||| hw_api	count=1
function_name	internationalization ||| intl	count=1
arg_pair	value of variant ||| mixed $value	count=1
function_name	[function_name_1] neural network ||| [function_name_2] [function_name_1]	count=8
function	[function_name_1] with ||| [arg_pair_2] [function_name_1]	count=2
function_name	that curl handle ||| curl	count=1
function_name	the field [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	initializes a statement and ||| init	count=1
return	[return] bytecodes ||| [return]	count=3
arg_pair	a specific ||| string $feature string $version	count=1
function_name	[function_name] inside the ||| [function_name] rect	count=1
arg_pair	[arg_pair_1] html ||| [arg_pair_2] [arg_pair_1]	count=1
function	[function_name_1] insert operations ||| [function_name_1] [arg_pair_2]	count=1
function_name	overrides main filter ||| expand filter	count=1
arg_pair	list of servers that ||| string $host int $port	count=1
return	[return] headers ||| [return]	count=1
return	string to ||| void	count=1
function_name	executes a prepared ||| execute	count=1
arg_pair	0 ||| resource $ann int $activation_function	count=1
return	function is only ||| mongoid	count=1
function_name	inserts a new ||| px insert	count=1
function_name	training data ||| fann set	count=1
function_name	chromaticity red primary ||| red primary	count=1
function_name	uri string ||| uri	count=1
function_name	adjusts the levels ||| auto level	count=1
arg_pair	during training ||| resource $ann	count=1
return	the error string of ||| string	count=1
function_name	uses the normal date ||| date string	count=1
arg_pair	the distinguished name to ||| array $configargs array $extraattribs	count=1
namespace	prepared query ||| mysqlnduhpreparedstatement	count=1
function_name	characters ||| alternate	count=1
arg_pair	named by dirname ||| string $dirname resource $context	count=1
arg_pair	on the ||| int $arg4	count=1
arg_pair	the index of the ||| int $green int $blue	count=1
function_name	number of rows in ||| num rows	count=1
function_name	returns group cache ||| get group cache	count=3
namespace	a recursivefilteriterator from ||| recursivefilteriterator	count=1
return	this function is ||| mongoid	count=1
function_name	registers a function ||| register	count=1
function	[function_name_1] and returns ||| [arg_pair_2] [function_name_1]	count=1
function_name	minimum error [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the end of current ||| add buffer	count=1
function_name	running the ||| run	count=1
function	[function_name_1] a ||| [function_name_1] enum [arg_pair_2]	count=4
return	with ||| void	count=2
function_name	event loop immediately ||| event base loopbreak	count=2
function_name	to trace ||| debug	count=1
namespace	soap ||| soapclient	count=3
namespace	the hash in the ||| quickhashinthash	count=1
arg_pair	of ||| string $string int $flags	count=1
function_name	given result identifier ||| object	count=1
return	a node specified ||| domnode	count=1
function	[function_name_1] 0 ||| [function_name_1] [arg_pair_2]	count=8
arg_pair	bordercolor imagickpixel object ||| mixed $bordercolor int $width	count=1
function_name	current ||| buffer	count=1
arg_pair	was ||| int $padding	count=1
namespace	len bytes [namespace] into the ||| [namespace]	count=1
function_name	previously added with gearmanclient::addtask() ||| run	count=1
function_name	mysql ||| mysql connect	count=2
return	is not for production ||| bool	count=1
function_name	number of ||| num input	count=1
function_name	a specific row ||| fetch row	count=1
arg_pair	the ||| int $backlog	count=1
return	belongs to a ||| string	count=1
function_name	[function_name_1] upper ||| [function_name_2] [function_name_1]	count=3
arg_pair	the specified dn ||| string $dn	count=3
function_name	facet fields should ||| facet	count=1
function_name	parses an response ||| response	count=1
arg_pair	all the mailboxes ||| resource $imap_stream string $ref	count=1
arg_pair	transform str1 into str2 ||| string $str1 string $str2	count=1
function_name	base associated ||| base	count=1
function_name	darkroom by [function_name] toning ||| [function_name] tone image	count=1
return	tasks ||| bool	count=1
function_name	aggregation framework provides ||| aggregate	count=1
function_name	to send soap ||| soap	count=1
function_name	[function_name_1] idle callback ||| [function_name_1] [function_name_2]	count=1
arg_pair	object and returns the ||| resource $connection mixed $object_id	count=1
function_name	in a ||| set metadata	count=1
function_name	should only be ||| set metadata	count=1
function_name	stroking color ||| rgbstroke	count=1
function_name	[function_name_1] album string ||| [function_name_2] [function_name_1]	count=1
function_name	current eventbuffer ||| add buffer	count=1
function	exists [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	opened phar archive ||| phar	count=1
function_name	[function_name_1] default value ||| [function_name_1] [function_name_2]	count=1
function_name	soap ||| soap	count=5
function_name	include [function_name] ||| stream resolve include [function_name]	count=2
arg_pair	entry specified by dn ||| resource $link_identifier string $dn	count=1
arg_pair	on the ||| resource $pdfdoc	count=1
arg_pair	drain any data from ||| string $data	count=1
return	class domdocumentfragment ||| domdocumentfragment	count=1
namespace	path ||| harupage	count=1
namespace	internal pointer ||| solrdocument	count=1
function_name	time zone corresponding ||| geoip time zone	count=1
arg_pair	sets the ||| resource $id string $elementset	count=1
function_name	[function_name_1] error ||| [function_name_1] [function_name_2]	count=32
function_name	of time ||| immortal	count=1
function_name	sets ||| setimageiterations	count=1
function_name	blocksize ||| module get algo block size	count=1
arg_pair	for an enumerated or ||| mixed $codepoint int $property	count=1
arg_pair	does not already exist ||| array $options	count=1
function_name	messages generated by ||| message	count=1
function_name	request tokens ||| request token	count=2
arg_pair	desired dimensions with ||| float $blur	count=1
function	parameters [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	connection type corresponding to ||| geoip id	count=1
function_name	function is used to ||| cubrid	count=1
return	the same as ||| object	count=2
arg_pair	enumerate all assigned ||| int $namechoice	count=1
function_name	upon cubrid_execute() ||| result	count=1
function_name	the [function_name] ||| [function_name] nb fput	count=1
function_name	matched part ||| regs	count=1
arg_pair	the cookie value ||| string $name string $value	count=1
arg_pair	a field to the ||| string $fieldname	count=1
arg_pair	of an entry using ||| string $name	count=1
function_name	elapsed time for ||| get last elapsed time	count=1
function_name	handler to ||| handler	count=1
function_name	given result identifier ||| fetch	count=1
arg_pair	that ||| mixed $value	count=1
function_name	icu error [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	a pseudo-object ||| int $fetch_flag	count=1
function_name	retrieves metadata ||| metadata	count=1
function_name	[function_name_1] operation ||| [function_name_2] [function_name_1]	count=4
arg_pair	to htmlspecialchars() in ||| string $encoding	count=1
function_name	with the kadm5 library ||| kadm5	count=1
function_name	[function_name_1] entry contents ||| [function_name_2] [function_name_1]	count=1
namespace	with existing information stored ||| pharfileinfo	count=1
function_name	linear least squares problem ||| least squares	count=2
function_name	vendor specific [function_name_2] ||| put [function_name_1] [function_name_2]	count=1
function	column names [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	to memcached::replace() except that ||| mixed $value int $expiration	count=1
return	the attribute information ||| hw_api_object	count=1
arg_pair	the php array var_array ||| int $max_table_length	count=1
arg_pair	of ||| int $color	count=1
function	sql type [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	by ||| resource	count=1
arg_pair	[arg_pair_1] for ||| [arg_pair_2] [arg_pair_1]	count=9
function_name	[function_name_1] minimum version ||| [function_name_1] [function_name_2]	count=1
function_name	document frequency ||| default frequency	count=1
arg_pair	or a ||| string $fk_owner	count=1
function_name	a new ssl ||| ssl filter	count=1
function_name	[function_name_1] modules list ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] text number ||| [function_name_1] [function_name_2]	count=2
function_name	the external attributes ||| external attributes	count=2
namespace	not ||| oauth	count=1
function_name	in the global function ||| function	count=1
function_name	action with parameters to ||| action	count=1
namespace	server for ||| mongocursor	count=1
return	through to the browser ||| bool	count=1
function_name	attaches an ip ||| put vendor addr	count=2
function	row from [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	added with gearmanclient::addtask() ||| run	count=1
function_name	password ||| with password	count=2
function_name	contrast of a ||| contrast	count=1
arg_pair	[arg_pair_1] string input ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	an offset into the ||| facet offset	count=1
function_name	escape the ||| escape string	count=1
function_name	the time zone corresponding ||| geoip time zone by	count=1
function_name	[function_name_1] id3v2 ||| [function_name_2] [function_name_1]	count=1
function_name	class [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] upper ||| [function_name_1] [function_name_2]	count=3
function_name	mime ||| iconv mime encode	count=2
arg_pair	the word is correctly ||| resource $dict string $word	count=2
function_name	byte index ||| byte index	count=2
function	[function_name_1] to ||| [function_name_1] [arg_pair_2]	count=3
function_name	radius ||| radius send	count=1
function_name	point is a space ||| space char	count=1
function_name	add a ||| add	count=1
function_name	maximum out [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	adds [arg_pair] inside the ||| [arg_pair]	count=1
function_name	gets the number ||| get	count=1
arg_pair	key for a table ||| string $owner string $table	count=1
function_name	property for ||| property value	count=1
function_name	get elapsed time for ||| last elapsed time	count=1
namespace	a function ||| reflectionfunctionabstract	count=1
function_name	printable ||| printable	count=2
function_name	oracle [function_name_2] ||| [function_name_1] [function_name_2] version	count=3
function_name	returns the item ||| get	count=1
return	pixels color to ||| bool	count=2
namespace	when this job is ||| gearmanjob	count=1
function_name	true if ||| module is	count=1
function_name	being number 0 ||| data	count=1
function_name	image by adjusting the ||| image	count=2
arg_pair	for the given sequence ||| resource $imap_stream string $sequence	count=1
arg_pair	str1 into str2 ||| string $str2	count=1
return	or [return] ip address ||| [return]	count=1
function_name	this function ||| newt	count=1
function_name	cannot be represented with ||| set	count=1
function_name	merges ||| merge recursive	count=2
arg_pair	array1 ||| array $array2	count=5
arg_pair	by ||| resource $socket	count=2
function_name	is ||| ingres	count=1
arg_pair	callback ||| int $type mixed $callback	count=1
function	class [arg_pair_2] ||| [function_name_1] alias string $original [arg_pair_2]	count=1
function_name	queries the repository ||| svn	count=1
namespace	the route ||| yaf_router	count=1
function_name	to include the upper ||| include upper	count=1
function_name	dns resource ||| dns get	count=1
function_name	[function_name_1] error message ||| [function_name_1] last [function_name_2]	count=1
arg_pair	name in a ||| string $name	count=1
function_name	to request a ||| request	count=1
function_name	[function_name_1] signature types ||| [function_name_2] [function_name_1]	count=1
function_name	network from a configuration ||| fann	count=1
arg_pair	equivalent to memcached::add() ||| mixed $value int $expiration	count=1
arg_pair	the first prototype ||| int $mode	count=2
function_name	end of current ||| add buffer	count=1
return	for maxdb_options() ||| resource	count=1
namespace	the function ||| function	count=4
function_name	returns ||| id3 get	count=1
return	connection to the ||| bool	count=1
function_name	passed in by reference ||| passed by reference	count=1
function_name	font and its ||| font and	count=2
function_name	[function_name_1] shift ||| [function_name_1] [function_name_2]	count=12
function_name	owner ||| get owner	count=1
namespace	error code of the ||| function	count=1
function_name	of the [function_name] ||| mysqli get [function_name] info	count=1
arg_pair	a prepared statement ||| resource $connection string $stmtname	count=2
arg_pair	[arg_pair_1] callback function ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	an offset into ||| facet offset	count=1
arg_pair	parses the given source ||| int $flags	count=1
function_name	[function_name_1] contents ||| [function_name_1] [function_name_2]	count=1
function_name	a file ||| metadata	count=2
arg_pair	submits a command and ||| string $query	count=1
arg_pair	a ||| string $message int $message_code	count=1
function_name	add a link ||| add locallink	count=1
function_name	specified action ||| gupnp service action	count=1
arg_pair	of ||| float $threshold int $channel	count=1
arg_pair	when the end ||| int $type	count=1
function_name	[function_name_1] of root ||| [function_name_2] device get relative [function_name_1]	count=1
function_name	use for validation ||| relax ngschema source	count=1
function_name	get the modules list ||| get modules	count=1
return	suitable for maxdb_options() and ||| resource	count=1
return	string and as a ||| array	count=1
function_name	gets the number ||| num	count=3
function_name	is a subclass ||| subclass	count=1
function	[function_name_1] of ||| result [function_name_1] [arg_pair_2]	count=3
function_name	sets authentication [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	value from the hash ||| quickhashinthash	count=1
function_name	returns the lower bound ||| get	count=1
function_name	client and specified ||| sqlsrv client	count=1
function_name	of the organization that ||| geoip org by	count=1
function_name	name ||| array by name	count=2
function_name	[function_name_1] callback ||| [function_name_2] [function_name_1]	count=2
function_name	output stagnation epochs ||| output stagnation epochs	count=3
arg_pair	of the ||| resource $result int $field_offset	count=3
function_name	from ||| add buffer	count=2
function_name	return icu [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	key associated with pub_key_id ||| mixed $pub_key_id mixed $signature_alg	count=1
function_name	icu error code name ||| intl error name	count=1
arg_pair	into a two-dimensional ||| int $maxrows	count=1
arg_pair	y ||| float $y float $radius	count=1
return	specified ||| string	count=1
arg_pair	to pattern ||| mixed $pattern	count=1
function_name	sets the value ||| ldap set option	count=1
function_name	delete an instance from ||| drop	count=1
arg_pair	display a result ||| string $frame_name	count=1
namespace	a new timestamp ||| mongotimestamp	count=1
function_name	of the query syntax ||| escape query chars	count=1
return	a set ||| bool	count=1
function_name	flags to ||| flags	count=1
function_name	contrast of an image ||| contrast image	count=1
function_name	the mime [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	or part of ||| int $ndocs	count=2
function_name	sets per-index ||| set	count=1
arg_pair	its indexes ||| int $unique int $accuracy	count=1
function_name	fgetcsv() parses ||| fgetcsv	count=1
function_name	of activation steepnesses ||| fann get cascade activation steepnesses	count=1
function_name	returns an array that ||| array	count=1
arg_pair	of ||| int $width	count=2
arg_pair	as the ||| string $error_msg int $error_type	count=1
arg_pair	data between one ||| string $data	count=1
function_name	an image and ||| image	count=1
function_name	nsapi response [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	returns the number ||| num input	count=1
function_name	[function_name_1] idle ||| [function_name_1] [function_name_2]	count=1
return	if the iterator ||| bool	count=1
function_name	access token secret ||| access token	count=1
function_name	only used ||| set state	count=1
namespace	class ||| reflectionclass	count=15
namespace	function is user-defined ||| reflectionfunctionabstract	count=1
return	cursors ||| mongocursor	count=1
function_name	page and applies ||| end page	count=1
namespace	this function checks ||| function	count=1
function_name	that fgetcsv() parses the ||| fgetcsv	count=1
arg_pair	an snmp object ||| string $community	count=2
return	property have changed to ||| bool	count=1
arg_pair	protocol as ||| string $protocol	count=1
function_name	statistics about ||| statistics	count=1
return	current dash pattern to ||| bool	count=1
function	parameter [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	value for ||| string $value	count=1
function_name	status callback ||| add task status	count=1
arg_pair	returns str with ||| string $str string $encoding	count=1
arg_pair	the ||| int $num_points int $color	count=1
namespace	off the ||| oauth	count=1
function_name	size for ||| size	count=1
function_name	class [function_name] of a ||| is [function_name] of	count=1
function_name	bounding box of ||| b	count=1
function_name	an array ||| array copy	count=1
function_name	returns the length ||| len	count=3
arg_pair	dn which ||| array $dn resource $privkey	count=1
function_name	border ||| border	count=5
arg_pair	a ||| string $name mixed $step_callback	count=1
function_name	country and ||| country and	count=1
function_name	specified cipher ||| cipher	count=1
function_name	network which ||| fann	count=2
function_name	set are delivered ||| pcntl sigwaitinfo	count=1
function_name	quantum [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	from ann ||| resource $ann array $input_vector	count=1
function_name	php tags stripped ||| strip tags	count=1
function_name	sybase_fetch_row() ||| sybase fetch assoc	count=2
function_name	custom sort function ||| dbx sort	count=1
function_name	move all data from ||| add buffer	count=1
namespace	internally ||| mongoid	count=1
function_name	[function_name_1] fields ||| [function_name_1] [function_name_2]	count=6
function_name	sybase result associated with ||| sybase	count=1
return	the case of ||| int	count=1
function_name	given ||| ibase fetch object	count=2
arg_pair	row as a ||| resource $result_id	count=1
return	and/or [return] a ||| [return]	count=1
function_name	the current font ||| get current font	count=2
arg_pair	the given message sequence ||| resource $imap_stream int $msg_number	count=1
function_name	the specified field is ||| fbsql field	count=1
function_name	[function_name_1] node ||| [function_name_1] [function_name_2]	count=3
function_name	number ||| get number	count=3
function_name	oci_parse() or ||| statement	count=1
arg_pair	with ||| resource $id	count=1
function_name	technically unnecessary the phar::startbuffering() ||| buffering	count=1
function_name	[function_name_1] width ||| [function_name_1] [function_name_2]	count=2
function_name	table that [function_name_2] ||| [function_name_2] [function_name_1]	count=18
function_name	for a ||| run	count=1
function_name	move ||| add	count=1
arg_pair	variable_name in ||| string $variable_name	count=1
function_name	the default external ||| libxml set external	count=1
function_name	potential image type ||| image type	count=1
function_name	get the name of ||| current	count=1
function_name	[function_name_1] current mysql ||| [function_name_2] list [function_name_1]	count=1
arg_pair	the name of the ||| resource $result int $field_offset	count=3
function_name	as to reduce the ||| reduce	count=1
function_name	short [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	strip any nul ||| fgetss	count=1
function_name	a space character according ||| space	count=1
function_name	sets the steepness of ||| fann set	count=1
arg_pair	named domain ||| string $domain	count=1
function_name	on debug output if ||| memcache debug	count=1
function_name	parameters ||| parameter	count=2
function_name	returns [function_name_2] ||| [function_name_1] [function_name_2]	count=60
arg_pair	display a ||| string $frame_name	count=1
function_name	type of the image ||| type	count=1
arg_pair	the colors in the ||| bool $gray	count=1
function	whether [arg_pair_2] ||| [function_name_1] nick [arg_pair_2]	count=1
function_name	the activation function ||| activation function	count=9
arg_pair	list of ||| int $port	count=1
arg_pair	of service ||| int $service_level_option	count=1
return	to a valid ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] temp [function_name_2]	count=3
function_name	[function_name_1] tell ||| [function_name_2] [function_name_1]	count=1
arg_pair	data ||| string $data	count=4
arg_pair	clients that ||| int $type mixed $value	count=1
function_name	all elements ||| elements	count=1
function_name	fetches multiple ||| fetch	count=1
function_name	sends a message ||| send	count=1
arg_pair	tracing ||| resource $connection string $client_info	count=1
function_name	hidden ||| hidden	count=1
function_name	an array ||| array	count=3
function_name	returns numeric file descriptor ||| get	count=1
return	characters in the ||| bool	count=8
return	cannot ||| void	count=1
function_name	the group [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	subscribe ||| imap subscribe	count=2
function_name	of activation ||| activation	count=1
function_name	modifies a principal according ||| modify principal	count=1
function_name	virtual pdf ||| pdf	count=1
function_name	uses the normal date ||| date	count=1
arg_pair	the character c ||| string $c int $color	count=1
function_name	phar::startbuffering() method ||| start buffering	count=1
function_name	one and [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	the function ||| reflectionfunctionabstract	count=1
function_name	information ||| pdf info	count=1
return	current ||| double	count=1
function_name	the inverse ||| gmp invert	count=1
function_name	usually preferred to ||| prev error	count=1
arg_pair	str with ||| string $encoding	count=1
arg_pair	a ||| string $country_code	count=2
arg_pair	statement ||| string $statement	count=1
function	[function_name_1] of str ||| [arg_pair_2] [function_name_1]	count=1
function_name	a replica set ||| get hosts	count=1
return	checks whether ||| bool	count=3
arg_pair	the given ||| resource $link string $query	count=2
namespace	an image ||| gmagick	count=2
function_name	returns group [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	an array of the ||| get	count=1
namespace	function retrieves the ||| hw_api	count=1
arg_pair	quoting style appropriate ||| string $string int $parameter_type	count=1
function_name	tests if the specified ||| gmp testbit	count=1
function	specified events [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	slop on ||| slop	count=1
namespace	the event loop ||| evloop	count=1
arg_pair	to a ||| float $upperrighty	count=1
return	whether the current ||| bool	count=1
namespace	repos_url [namespace] ||| [namespace]	count=3
function_name	[function_name_1] the transaction ||| [function_name_1] [function_name_2]	count=1
namespace	function sorts ||| function	count=2
function_name	a record ||| record	count=1
function_name	output stagnation [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	ellipse ||| imagefilledellipse	count=1
namespace	is the cleanest way ||| mongoclient	count=1
arg_pair	list of servers that ||| string $host	count=1
function_name	the database ||| get	count=1
function_name	current line ||| pdf setlinewidth	count=2
arg_pair	supplied hash implements the ||| integer $algo	count=1
function_name	information ||| set metadata	count=2
namespace	internet host specified ||| function	count=1
function_name	data from the buffer ||| add buffer	count=1
return	a table [return] ||| [return]	count=1
function	[function_name_1] indexed ||| [function_name_1] [arg_pair_2]	count=1
function_name	client information ||| client info	count=2
arg_pair	sets an ||| resource $sh	count=1
function_name	register local class ||| register local	count=1
function	if [arg_pair_2] ||| [function_name_1] block algorithm [arg_pair_2]	count=2
function_name	in a file that ||| set	count=1
function_name	fdf document ||| fdf	count=1
arg_pair	has been ||| string $interface_name	count=1
function_name	an image and scales ||| image	count=1
arg_pair	a ||| string $function_name	count=1
namespace	collection and deletes ||| mongocollection	count=1
function_name	from ||| ibase fetch	count=1
function_name	a row as a ||| fetch	count=1
function_name	use for validation ||| set relax ngschema	count=1
namespace	only ||| pharfileinfo	count=1
function_name	the last [function_name_2] ||| [function_name_2] [function_name_1]	count=10
namespace	for ||| oauth	count=1
namespace	column in ||| function	count=1
function_name	number for [function_name_2] ||| [function_name_2] get current line [function_name_1]	count=1
function_name	[function_name_1] request handle ||| [function_name_1] [function_name_2]	count=1
function_name	step [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	by gettext() ||| bind textdomain	count=1
function	[function_name_1] to a ||| [arg_pair_2] [function_name_1]	count=7
function_name	width of the current ||| width	count=1
arg_pair	sets up callback to ||| mixed $callback	count=1
namespace	appearance of the ||| harudestination	count=3
function_name	load ||| load	count=1
function_name	tailable ||| tailable	count=1
function_name	learning [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name] specified distortion ||| [function_name] image channel distortion	count=1
return	retrieve current ||| yaf_controller_abstract	count=1
arg_pair	a ||| string $dirname	count=1
function_name	[function_name] while ||| reduce noise [function_name]	count=1
return	end of file ||| bool	count=1
namespace	the last query ||| function	count=1
function_name	a given ||| fetch	count=1
rest	an array [function_2] ||| [function_2] [return_1]	count=1
namespace	and turns off if ||| function	count=1
function_name	any ||| unique image	count=1
function_name	creating ||| get active object	count=1
namespace	version being [namespace] the maxdb ||| [namespace]	count=1
arg_pair	character code to ||| bool $is_hex	count=1
function	[function_name_1] script as ||| [function_name_1] extension [arg_pair_2]	count=1
function_name	returns [function_name_2] ||| [function_name_2] [function_name_1]	count=68
function	this function [function_name_1] [arg_pair_2] instance of class domattr ||| domdocument domattr [function_name_1] [arg_pair_2]	count=1
namespace	server for some ||| mongocursor	count=1
arg_pair	a timestamp ||| int $timestamp int $format	count=2
function_name	number of activation ||| get cascade activation	count=1
function_name	image size i ||| image extent	count=2
arg_pair	a ||| resource $conn	count=1
function_name	denoting the [function_name] of ||| get [function_name]	count=1
return	the result of the ||| int	count=1
function_name	trigram phrase [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	reply that ||| reply	count=1
arg_pair	a orig_name ||| string $original_name	count=1
namespace	be used in v8js ||| v8js	count=1
function_name	[function_name] enables weighted ||| [function_name] weights	count=1
function	[function_name_1] between old_data ||| [function_name_1] [arg_pair_2]	count=2
namespace	the specified function ||| function	count=1
function_name	fetch dns resource records ||| dns	count=1
function_name	result ||| ibase fetch object	count=2
function_name	diff containing differences ||| string diff	count=1
arg_pair	a ||| resource $sftp	count=2
arg_pair	namespaceuri ||| string $namespaceuri	count=1
return	called if ||| bool	count=2
function_name	rotation ||| ps rotate	count=2
function_name	blob/clob data ||| cubrid lob send	count=1
function_name	or ||| run	count=1
function_name	in a ||| metadata	count=1
namespace	function will accept incoming ||| function	count=1
namespace	whether ||| norewinditerator	count=1
namespace	[namespace] on the ||| [namespace]	count=1
return	path and terminate the ||| bool	count=1
function_name	headers ||| headers	count=6
function_name	field ||| oci field	count=2
namespace	event loop ||| evloop	count=3
function_name	is not ||| disable	count=1
function_name	this function creates ||| create text node	count=1
arg_pair	connection ||| mysqlnd_connection $connection string $user	count=1
function_name	[function_name_1] name to ||| [function_name_2] [function_name_1]	count=1
return	maxdb_real_connect() ||| resource	count=1
arg_pair	recognized as a phar ||| string $filename bool $executable	count=1
namespace	function sets the ||| function	count=1
function_name	aggregate function ||| aggregate	count=1
function_name	row of a ||| fetch	count=2
namespace	function url encodes ||| function	count=1
function_name	copies data from ||| pgsql copy from array	count=1
function_name	record in the ||| record	count=2
namespace	function but the ||| function	count=1
arg_pair	linked against libmcrypt 2 ||| int $cipher	count=2
function_name	sets user ||| set user	count=2
function_name	types of query results ||| types	count=1
function_name	into a mysqlnd ||| to mysqlnd	count=1
function_name	odbc_do() or odbc_exec() ||| odbc	count=1
namespace	added with ||| gearmanclient	count=1
arg_pair	php variable with a ||| mixed $variable	count=1
function_name	iv belonging to ||| get iv	count=1
function_name	users query string with ||| set query	count=1
function_name	icc profile ||| pdf load iccprofile	count=1
function_name	cyrus imap server ||| cyrus	count=2
function_name	drop remove ||| drop	count=1
function_name	in the working copy ||| svn	count=1
function_name	[function_name_1] of ||| [function_name_2] cipher [function_name_1]	count=1
function_name	full country name corresponding ||| geoip country name by name	count=1
function_name	using even-odd rule then ||| eo	count=1
function_name	current ||| add	count=1
return	gearmanclient::addtaskbackground() ||| bool	count=1
function_name	error ||| error	count=31
return	to change the information ||| bool	count=1
arg_pair	given sql ||| string $sql	count=1
arg_pair	at key to value ||| string $key string $value	count=1
arg_pair	a condition [arg_pair] ||| [arg_pair]	count=2
namespace	starting ||| domcharacterdata	count=1
namespace	[namespace] value ||| [namespace]	count=1
function_name	the current active ||| select	count=1
namespace	supports read operations ||| rarentry	count=1
function_name	identifier ||| mssql fetch row	count=1
function_name	resolution as ||| getimageresolution	count=1
function_name	pdi document parameter with ||| pdf get pdi	count=1
arg_pair	as ||| string $filtername	count=1
return	code ||| int	count=1
function_name	rows fetched so ||| rows	count=1
arg_pair	that an ||| imagick $imagick array $offset	count=1
arg_pair	haystack string for a ||| string $haystack	count=1
arg_pair	a php variable with ||| mixed $variable	count=1
function_name	sets [function_name_2] ||| [function_name_1] expand [function_name_2]	count=1
function_name	term ||| upper bound	count=1
function_name	respect ||| setlinecap	count=1
arg_pair	file with a ||| string $dir string $prefix	count=1
function_name	associative array ||| assoc	count=1
function_name	[function_name_1] [function_name_2] for ||| [function_name_1] property [function_name_2]	count=3
function_name	fetches multiple ||| oci fetch	count=1
namespace	it shouldnt ||| mongoid	count=1
namespace	of the function ||| reflectionfunctionabstract	count=1
arg_pair	the ||| int $width	count=1
namespace	time cursors by ||| mongocursor	count=1
function_name	divides a ||| div q	count=1
namespace	objects storage ||| threaded	count=1
function_name	phrase slop ||| phrase slop	count=4
function_name	given file pointer ||| bzerrstr	count=1
function_name	[function_name_1] immediate neighbor ||| [function_name_2] [function_name_1]	count=16
return	an event ||| bool	count=1
function_name	route by ||| route	count=1
namespace	64-bit number with ||| mongoint64	count=1
arg_pair	or the ||| mixed $file	count=1
return	gets the error ||| string	count=1
arg_pair	or a list ||| string $fk_owner string $fk_table	count=1
function_name	first occurrence of case-insensitive ||| grapheme stristr	count=1
arg_pair	the value [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	specified protocol level ||| int $level	count=1
function_name	[function_name_1] bigram ||| [function_name_2] [function_name_1]	count=4
function_name	closes ||| close	count=28
return	to read the ||| bool	count=1
arg_pair	prepares a query ||| string $sql	count=1
function_name	a copy of ||| clone	count=1
function_name	should only be used ||| metadata	count=1
function_name	with ||| fbsql	count=1
function_name	row of the ||| cubrid fetch	count=1
arg_pair	remote address and ||| string $address	count=1
function_name	like radius requests ||| radius	count=1
function_name	element set name for ||| element	count=1
return	points to the current ||| bool	count=1
function_name	sets the [function_name_2] ||| [function_name_1] expand [function_name_2]	count=2
function_name	into file ||| file	count=1
function_name	type corresponding ||| geoip	count=1
function	[function_name_1] handle ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	added ||| string $localname	count=1
function_name	new ssl buffer ||| ssl	count=1
arg_pair	of any pixel ||| int $y	count=1
arg_pair	real1 from real0 ||| array $real0 array $real1	count=1
function_name	entwerfen von einer mime ||| iconv mime encode	count=1
function_name	[function_name_1] byte ||| [function_name_2] [function_name_1]	count=3
function_name	gearmanclient::context() ||| context	count=1
function_name	descriptor and another ||| sendfile	count=1
function_name	opens a large ||| open	count=1
arg_pair	array1 with ||| array $array1	count=1
function_name	fail ||| fail	count=2
arg_pair	in the result-set ||| int $maxlen	count=1
function	similarity image [arg_pair_2] ||| [function_name_1] match [arg_pair_2]	count=2
arg_pair	source ||| string $source	count=1
function_name	[function_name_1] definition ||| [function_name_2] [function_name_1]	count=10
arg_pair	to length - ||| int $length	count=1
function_name	of [function_name] this server ||| get [function_name]	count=1
function	removes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	vendor ||| vendor	count=3
function_name	fetches ||| oci fetch	count=3
function_name	child ||| child	count=2
function_name	gets the numeric ||| numeric	count=1
function_name	computes the difference ||| array udiff	count=1
function_name	moves the internal row ||| data seek	count=1
arg_pair	a ||| int $face	count=1
function_name	into the file named ||| pkey export to file	count=1
function_name	binary dump of the ||| bin dump	count=1
function_name	collating function within ||| collation	count=1
function_name	the text interword ||| text interword	count=1
function_name	imported pdf page ||| pdf fit pdi	count=2
arg_pair	string from the ||| string $arg_separator	count=1
function_name	module name ||| module name	count=3
arg_pair	on the local ||| resource $connection int $oid	count=1
return	to store ||| bool	count=1
arg_pair	in the haystack ||| string $haystack	count=2
function_name	dictionary for en_us de_de ||| dict	count=1
function_name	weblink ||| weblink	count=1
function_name	after applying the ||| map	count=1
function_name	the current ||| pdf	count=5
function_name	frees all ||| base free	count=1
function_name	the current ||| get current	count=1
namespace	file ||| splfileinfo	count=6
arg_pair	messages from domain returned ||| string $codeset	count=1
arg_pair	fields delimiter ||| string $null_as	count=3
function	a postgresql [arg_pair_2] ||| [function_name_1] field prtlen [arg_pair_2]	count=1
arg_pair	from domain returned ||| string $domain	count=1
arg_pair	number of ||| int $cascade_output_stagnation_epochs	count=1
function_name	active ||| select	count=1
function_name	recently executed ||| message	count=1
namespace	evfork ||| evfork	count=1
arg_pair	oid of the instance ||| string $oid	count=1
arg_pair	point for ||| float $x float $y	count=1
arg_pair	supplied x509cert ||| bool $shortnames	count=1
function_name	[function_name] a ||| [function_name] insert	count=1
function_name	the ending ||| get end	count=1
namespace	[namespace] specified dn ||| [namespace]	count=1
function_name	writes the ||| write	count=1
function_name	whether ||| isbase	count=1
function_name	[function_name_1] a ||| [function_name_2] [function_name_1]	count=4
function_name	affected by ||| fbsql affected	count=1
return	[return] version number ||| [return]	count=1
arg_pair	a change notification for ||| resource $proxy string $value	count=1
function_name	is ||| current	count=1
function_name	streams data from ||| mailparse stream	count=1
function_name	image background [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	include the upper ||| set terms include upper	count=1
function_name	cascade candidate activation steepnesses ||| cascade activation steepnesses	count=1
return	whether the iterator ||| bool	count=1
function_name	an array ||| get array	count=1
function_name	taking into account the ||| real	count=1
function_name	current ||| get current	count=1
arg_pair	data from the buffer ||| string $data	count=1
return	as ||| object	count=3
function_name	extracts/decodes ||| msg extract part file	count=2
function_name	with backslashes stripped off ||| stripcslashes	count=1
return	if it does ||| bool	count=1
function_name	generates a new ||| new	count=1
arg_pair	dn which represents ||| resource $privkey	count=1
function_name	[function_name_1] size of ||| [function_name_1] [function_name_2]	count=1
namespace	fragments to ||| solrquery	count=1
function_name	text interword ||| get text interword	count=2
arg_pair	that the property ||| int $type mixed $value	count=1
arg_pair	the flatness ||| resource $pdfdoc float $flatness	count=1
function_name	of any ||| bzerrstr	count=1
arg_pair	and returns the portion ||| bool $before_needle	count=1
function_name	[function_name_1] returns ||| [function_name_1] [function_name_2]	count=2
function_name	linejoin parameter ||| pdf setlinejoin	count=1
function_name	from a given result ||| ibase fetch object	count=1
function_name	the cascade ||| get cascade	count=3
return	returns a result ||| sqlite3result	count=1
arg_pair	the name0 is a ||| string $name0	count=1
function_name	stub so this method ||| default stub	count=1
function_name	[function_name_1] access list ||| [function_name_2] [function_name_1]	count=3
arg_pair	condition [arg_pair] ||| [arg_pair]	count=2
arg_pair	display a result ||| resource $fdf_document string $frame_name	count=1
function	[function_name_1] afterward by ||| [function_name_1] [arg_pair_2]	count=1
namespace	current simplexmliterator element ||| simplexmliterator	count=1
namespace	the ||| norewinditerator	count=1
function_name	the inverse ||| invert	count=1
function_name	can change color definitions ||| can change color	count=1
function_name	collating function ||| collation	count=1
arg_pair	of ||| int $height	count=1
function_name	form passed to it ||| form	count=1
function_name	export a ||| gmp export	count=1
function_name	all elements ||| elements by	count=1
arg_pair	cipher / mode ||| string $cipher string $mode	count=1
namespace	this function compresses the ||| function	count=1
function_name	the default ||| default	count=3
return	amount of time cursors ||| mongocursor	count=1
arg_pair	transform str1 into str2 ||| string $str2	count=1
arg_pair	of the color ||| int $green	count=1
namespace	will determine if ||| function	count=1
function_name	[function_name_1] human readable ||| [function_name_2] [function_name_1]	count=2
arg_pair	a ||| string $name mixed $domlist	count=1
function_name	rate is used ||| rate	count=1
namespace	referenced [namespace] to finish ||| [namespace]	count=1
function_name	[function_name_1] postgresql ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] range/wildcard/fuzzy/prefix queries ||| [function_name_1] [function_name_2]	count=3
arg_pair	memcached::add() ||| int $expiration	count=1
arg_pair	a target ||| string $dest	count=1
function_name	any pixel that matches ||| paint opaque	count=1
arg_pair	file specified by fd ||| mixed $fd	count=1
function_name	this function ||| state	count=1
function_name	creates a standard backpropagation ||| create	count=4
function_name	determines the minimum ||| cascade min cand	count=1
return	nonzero winding number ||| bool	count=1
function_name	in the image ||| image	count=1
function_name	only used by ||| set	count=1
function_name	gets all the nsapi ||| nsapi	count=1
arg_pair	text on ||| string $text	count=1
function_name	signature types ||| signatures	count=1
function_name	error if ||| error	count=1
function	[function_name_1] associative array ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	to ||| bool $silent	count=1
function_name	vertically at the specified ||| imagecharup	count=1
arg_pair	result of ||| resource $result	count=1
function_name	[function_name_1] a color ||| [function_name_2] [function_name_1]	count=2
function_name	slob object ||| ifxus free slob	count=1
function_name	ending ||| end	count=1
namespace	the ||| splobjectstorage	count=1
function_name	and down the image ||| image	count=1
arg_pair	of servers that can ||| int $port	count=1
function_name	a postgresql ||| pg	count=4
function_name	with a convolution filter ||| edgeimage	count=1
function_name	access points [function_name] qualifiers ||| [function_name] conf	count=1
function_name	row in a ||| db2 fetch row	count=1
function_name	public ||| public	count=1
function_name	column of ||| array column	count=1
return	use to ||| bool	count=1
arg_pair	starting from object_id ||| string $object_id int $timeout	count=1
function_name	returns the sqlstate error ||| get sqlstate	count=1
function_name	get the haruencoder instance ||| get encoder	count=1
return	off ||| bool	count=1
function_name	blur ||| blur	count=1
arg_pair	at ||| int $left	count=1
function_name	returns string with ||| get	count=1
function_name	wait function ||| wait	count=1
arg_pair	a two-dimensional array ||| int $skip int $maxrows	count=1
arg_pair	defined by fill ||| mixed $fill	count=2
function_name	gets the ||| bzerrstr	count=1
namespace	not ||| pharfileinfo	count=1
function_name	[function_name_1] attribute in ||| [function_name_2] [function_name_1]	count=3
function_name	same body and ||| bind to	count=1
function_name	[function_name_1] last internationalization ||| [function_name_2] get error [function_name_1]	count=1
namespace	character of ||| function	count=1
function	environment variable [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	like radius ||| radius	count=1
function_name	another name/value pair to ||| var	count=1
namespace	the cache ||| function	count=1
arg_pair	the transparency [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	handle ||| curl	count=1
arg_pair	has been defined ||| string $interface_name	count=1
namespace	unicode characters between ||| intlchar	count=1
function_name	timeout can be set ||| timeout	count=2
function_name	vector iv [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the nsapi response headers ||| nsapi response headers	count=1
function_name	file size [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	mangled for security reasons ||| string $mangled	count=1
function_name	document frequency used for ||| default frequency	count=1
namespace	the dom ||| domdocument	count=1
namespace	instance of [namespace] an ||| [namespace]	count=1
function_name	query string ||| set query	count=1
function_name	to place after ||| postfix	count=1
function_name	underlying output ||| output	count=1
arg_pair	keys from array1 against ||| array $array1	count=2
function_name	request headers ||| request headers	count=2
namespace	size of ||| function	count=1
function_name	sets the ||| set	count=55
function_name	an ||| array	count=3
function_name	tells whether the opened ||| enc is	count=1
function_name	total cache size ||| total size	count=4
function_name	stored bytecodes and ||| bcompiler	count=1
function_name	a low priority ||| low	count=1
function_name	the file named ||| export to file	count=2
function_name	for the socket ||| socket	count=1
function_name	a new pdf file ||| pdf open	count=1
function_name	token being delimited ||| strtok	count=1
function_name	filling ||| filling	count=1
function_name	gettext() and similar ||| textdomain	count=1
arg_pair	[arg_pair] inside ||| [arg_pair]	count=1
namespace	watcher callback with ||| evwatcher	count=1
arg_pair	called whenever a change ||| resource $proxy string $value	count=1
namespace	emptyiterator valid() method ||| emptyiterator	count=1
function_name	[function_name_1] [function_name_2] php is linked with ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] one ||| [function_name_2] [function_name_1]	count=10
function_name	contrast ||| contrast	count=3
function_name	[function_name_1] bound ||| [function_name_1] [function_name_2]	count=4
return	internet host specified by ||| string	count=1
function_name	moves ||| next	count=1
function_name	the namespace [function_name_2] ||| [function_name_1] [function_name_2] string $prefix	count=1
function_name	the file ||| pkey export to file	count=1
namespace	the pdf document ||| harudoc	count=1
function_name	quoted printable ||| quoted printable	count=1
function_name	[function_name_1] into ||| [function_name_2] [function_name_1]	count=5
function_name	defined id ||| id	count=1
function_name	the cascade [function_name_2] ||| [function_name_2] [function_name_1]	count=6
return	to standard output the ||| bool	count=1
arg_pair	ann based ||| resource $ann	count=1
namespace	types supported by ||| function	count=1
function_name	[function_name_1] search query ||| [function_name_2] [function_name_1]	count=1
function_name	the number ||| cascade num	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=2
return	tasks previously added ||| bool	count=1
arg_pair	assign the specified bevent ||| resource $bevent	count=1
namespace	resolves relative references ||| splfileinfo	count=1
function_name	float range ||| range	count=1
function_name	[function_name_1] a textflow ||| [function_name_2] [function_name_1]	count=1
function_name	the set of backends ||| backends	count=2
function_name	return ||| terms return	count=2
function_name	[function_name_1] the default ||| [function_name_2] [function_name_1]	count=2
function_name	range for the ||| range	count=1
return	pointer to the specified ||| bool	count=1
arg_pair	a given number of ||| string $str	count=1
arg_pair	of an snmp object ||| string $community	count=1
function_name	domain of the node ||| domain	count=1
return	dictated by the ||| bool	count=1
function_name	retrieves ||| sqlsrv	count=1
function_name	[function_name_1] the character ||| [function_name_2] [function_name_1]	count=1
function_name	to [function_name_2] ||| int transform [function_name_1] [function_name_2]	count=1
namespace	the last connection attempt ||| solrclient	count=1
function_name	or not to use ||| use	count=3
rest	[return_1] [function_2] ||| function [return_1] [function_2]	count=1
function_name	for a failed ||| errnum	count=1
function_name	can [function_name] used later ||| event base [function_name]	count=1
arg_pair	for security reasons ||| resource $radius_handle	count=1
arg_pair	callback function to ||| array $array callable $callback	count=1
function_name	pdf ||| pdf	count=7
namespace	an image by ||| gmagick	count=1
namespace	the primary key ||| function	count=1
function_name	used with the ||| fbsql database	count=1
namespace	domelement ||| domelement	count=1
arg_pair	the line width for ||| resource $psdoc float $width	count=1
arg_pair	values that correspond ||| array $ctorparams	count=1
arg_pair	result identifier ||| resource $result_id	count=1
function_name	e raised to ||| exp	count=1
function_name	squares problem find ||| squares	count=2
namespace	should begin ||| solrquery	count=1
namespace	by this extension ||| function	count=1
function_name	the compressed size ||| compressedsize	count=1
return	of the signals ||| int	count=1
function_name	trigram phrase slop ps3 ||| trigram phrase slop	count=1
function_name	the border ||| set border	count=1
function_name	the apache environment variable ||| apache setenv	count=1
function_name	the intersection of arrays ||| array uintersect assoc	count=1
arg_pair	options passed to ||| string $options	count=1
namespace	which is effective in ||| yaf_router	count=1
function_name	given password ||| init with password	count=1
return	set of tasks ||| bool	count=1
function_name	the current line ||| current line	count=2
function_name	word spacing for the ||| word space	count=1
namespace	attribute with ||| hw_api_object	count=1
function_name	loop finished ||| loop shutdown	count=1
function_name	font and prepares it ||| load font	count=1
function_name	given search query with ||| query	count=1
arg_pair	field fieldname and stores ||| string $fieldname	count=1
arg_pair	and write ||| resource $bevent	count=1
function_name	has been ||| ibase	count=1
arg_pair	the data and ||| string $data string $mode	count=1
function_name	[function_name_1] [function_name_2] properties from ||| [function_name_1] [function_name_2] properties	count=1
namespace	timeout in [namespace] to ||| [namespace]	count=1
function_name	bigram field ||| bigram phrase field	count=1
arg_pair	a file ||| string $pathname string $mode	count=1
function_name	apache [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function	opens decrypts [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
return	specified as ||| mixed	count=2
arg_pair	from object_id and ||| string $object_id int $timeout	count=1
function_name	problem as an ||| report problem	count=1
arg_pair	requested option from the ||| resource $ftp_stream int $option	count=1
function_name	[function_name] and ||| bcompiler parse [function_name]	count=2
function_name	internally it ||| set	count=1
function_name	share ||| share	count=1
function_name	the base type ||| type	count=2
arg_pair	target color ||| mixed $target float $alpha	count=1
function_name	a new ||| new	count=5
function_name	the first attribute ||| ldap first attribute	count=2
function_name	alter parser options ||| bbcode	count=1
function	[function_name_1] associative ||| [arg_pair_2] [function_name_1]	count=1
function_name	or continuing the event ||| loop	count=1
arg_pair	fields if a valid ||| string $fieldname string $fieldvalue	count=1
function_name	custom encoding ||| encoding set	count=1
function_name	which the [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	yaf_application instance ||| yaf_application	count=1
function	service [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	or gearmanclient::addtasklowbackground() ||| gearmanclient	count=1
function_name	the ||| fbsql	count=2
function_name	that curl handle in ||| curl	count=1
function_name	fit the window ||| set fit v	count=1
function_name	url-encoded [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	returns ||| memcache get	count=1
function_name	page and ||| pdf end page	count=1
arg_pair	into a ||| string $json	count=1
function_name	current active [function_name] within ||| get [function_name]	count=1
namespace	result set ||| sqlite3result	count=1
function_name	the vector subtraction of ||| sub	count=1
function_name	[function_name_1] real path ||| [function_name_2] [function_name_1]	count=1
arg_pair	a ||| string $uri string $method	count=1
function_name	a [function_name] ||| [function_name] export	count=1
function_name	drop remove ||| drop db	count=1
namespace	from the dom representation ||| domdocument	count=2
function	[function_name_1] fd ||| [function_name_1] [arg_pair_2]	count=1
function_name	closes file ||| eio close	count=1
function_name	fetches a ||| fetch	count=2
function_name	access brackets ||| offset set	count=1
function_name	the text interword ||| get text interline	count=2
function_name	switch queryparser to be ||| max	count=1
arg_pair	size of the buffer ||| int $level	count=1
function_name	pspell_save_wordlist() will save ||| save	count=1
function_name	effective in ||| current	count=1
namespace	in the ||| yaf_router	count=1
function_name	value ||| get	count=1
function_name	transforms an image as ||| transform image	count=1
function_name	an exclusive write lock ||| writelock	count=1
function_name	[function_name_1] error threshold ||| [function_name_1] [function_name_2]	count=5
arg_pair	metric ||| magickwand $reference int $metric	count=1
return	a ||| float	count=1
function_name	resolv ||| parse resolv	count=1
function_name	binds a ||| bind	count=3
arg_pair	serializes the passed variables ||| mixed $var_name	count=1
function_name	closes the ||| sqlite close	count=1
return	resource suitable for ||| resource	count=1
function_name	examines a certificate ||| x509 checkpurpose	count=1
namespace	from ||| event	count=1
arg_pair	at offset ||| int $offset int $pri	count=1
arg_pair	r * ||| float $r	count=1
function_name	from a ||| from	count=3
function_name	the memcached::res_* constants that ||| code	count=1
function_name	[function_name] soapserver object ||| get [function_name]	count=1
function_name	the learning momentum ||| learning momentum	count=2
namespace	entries ||| arrayiterator	count=1
function_name	[function_name_1] change fraction ||| [function_name_1] [function_name_2]	count=8
namespace	the entry was update ||| quickhashinthash	count=1
function_name	of activation ||| fann get cascade activation	count=1
arg_pair	memcached::replace() except ||| int $expiration	count=1
function_name	[function_name_1] disposal method ||| [function_name_2] [function_name_1]	count=1
arg_pair	the end ||| resource $result	count=1
function_name	postgresql database ||| pg	count=2
function_name	column ||| column	count=5
function_name	result resource ||| pg result	count=2
function_name	phar ||| phar	count=1
function_name	[function_name_1] fdf document ||| [function_name_2] [function_name_1]	count=2
arg_pair	reading a directory ||| string $directory resource $context	count=1
namespace	the palette version of ||| function	count=1
return	by the ||| mongoid	count=1
arg_pair	a string ||| string $prefix string $field_override	count=1
function_name	the weight ||| weight	count=1
arg_pair	field fieldname and ||| string $fieldname	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] server [function_name_2]	count=6
arg_pair	returns a string containing ||| string $number	count=1
arg_pair	on ||| resource $psdoc float $llx	count=1
function_name	sarprop ||| sarprop	count=4
namespace	content object from the ||| function	count=1
function_name	[function_name] of the ||| workload [function_name]	count=2
function_name	trigram phrase field pf3 ||| trigram phrase field	count=2
function_name	an image or ||| image	count=1
function_name	currently stored value with ||| apc cas	count=1
function_name	block [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	one result row ||| odbc fetch	count=2
arg_pair	domain ||| string $domain int $options	count=1
function_name	the image with ||| image	count=1
namespace	continuing the event loop ||| evloop	count=1
namespace	referenced [namespace] to ||| [namespace]	count=1
namespace	code of the ||| function	count=1
function_name	gets the text interword ||| get text interline	count=1
arg_pair	or a list of ||| string $fk_owner string $fk_table	count=1
function_name	candidate ||| cascade	count=2
arg_pair	iteration with a set ||| resource $ann array $input	count=1
arg_pair	adjusts the contrast of ||| float $beta int $channel	count=1
arg_pair	str with a binary ||| string $str	count=1
function_name	dash style ||| dash	count=1
function_name	boost value for ||| boost	count=2
function_name	binds ||| bind	count=7
arg_pair	called whenever a change ||| resource $proxy	count=1
function_name	the minimum number ||| cascade min cand	count=1
function_name	matches color with the ||| paint transparent	count=1
function_name	the cursorname ||| odbc cursor	count=1
function_name	prepends ||| unshift	count=1
namespace	retrieves ||| hw_api	count=1
function_name	the operation [function_name] see ||| get [function_name]	count=1
function_name	previously created event ||| event	count=1
return	into [return] ||| [return]	count=1
function_name	or information [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	id3v1 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	days [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	an sql ||| db2	count=1
function_name	function for all ||| function	count=1
function_name	the specified socket ||| socket	count=1
arg_pair	size of the ||| int $level int $type	count=1
namespace	callable function used by ||| function	count=3
namespace	row as a ||| function	count=1
namespace	retrieves the current ||| function	count=1
function_name	the memcached::res_* constants ||| code	count=1
function_name	[function_name_1] identifier ||| [function_name_2] [function_name_1]	count=1
arg_pair	it into a php ||| string $json	count=1
namespace	to the ||| mongocursorinterface	count=1
function_name	[function_name_1] a block ||| [function_name_2] [function_name_1]	count=1
function_name	the rotation of the ||| ps rotate	count=1
return	results to ||| bool	count=1
function_name	type of the ||| db2 field type	count=1
arg_pair	fetches one row of ||| resource $result_identifier	count=1
arg_pair	string in a string ||| string $encoding	count=1
function_name	opened mode is a ||| mcrypt enc is	count=1
function_name	place after the current ||| postfix	count=1
arg_pair	with a ||| resource $ann	count=1
function_name	required to display ||| field display	count=1
function_name	exe ||| write exe	count=1
function_name	number or ||| get number	count=1
function_name	the route which ||| get current	count=1
arg_pair	oracles ||| mixed $field	count=1
return	[return] containing the ||| [return]	count=2
function_name	repository with the ||| svn	count=1
function_name	launched via the service ||| win32 start	count=1
function_name	iis is associated with ||| iis get	count=1
return	a text error ||| string	count=1
function_name	gearmanclient::addtasklowbackground() this call starts ||| run	count=1
arg_pair	query into a two-dimensional ||| int $skip int $maxrows	count=1
arg_pair	parses key and ||| mixed $key	count=1
function_name	from ibase_connect() ||| ibase	count=1
function_name	for each query inspected ||| mysqlnd qc	count=1
function_name	xml namespace support and ||| ns	count=1
function_name	minimum [function_name_2] ||| [function_name_2] [function_name_1]	count=21
namespace	sent ||| solrresponse	count=2
function_name	inserts the entry ||| insert	count=1
namespace	of current eventbuffer ||| eventbuffer	count=1
function_name	timeout is ||| timeout	count=1
namespace	cursors creation and iteration ||| mongocursorinterface	count=1
function_name	closed by ibase_blob_close() ||| cancel	count=1
function	replaces [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	selects ||| select	count=2
function_name	query ||| dbx query	count=2
function_name	gets that job ||| job	count=1
arg_pair	returns the input string ||| string $input int $pad_length	count=1
arg_pair	a valid ||| string $fieldname string $fieldvalue	count=1
function_name	soap ||| set soap	count=1
return	and returns a ||| sqlite3result	count=1
function_name	the maximum number ||| get cascade max cand	count=1
function	unified diff [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] information ||| [function_name_1] [function_name_2]	count=12
return	name user name and ||| resource	count=1
namespace	beginning ||| splfixedarray	count=1
function_name	a row as ||| ibase fetch	count=1
arg_pair	each address ||| string $default_host	count=1
arg_pair	the given ||| resource $imap_stream	count=1
arg_pair	an snmp object specified ||| string $community	count=2
return	the end ||| bool	count=2
namespace	or the ||| function	count=1
arg_pair	file and frees its ||| resource $pdfdoc string $filename	count=1
function_name	sets the ||| fann set	count=16
arg_pair	iteration with a set ||| resource $ann	count=1
function_name	returns the status ||| get status	count=1
function_name	[function_name_1] rows to ||| [function_name_1] expand [function_name_2]	count=1
namespace	existing information stored ||| pharfileinfo	count=1
namespace	only be used ||| pharfileinfo	count=1
arg_pair	connection ||| mysqlnd_connection $connection	count=1
function_name	3 font ||| font	count=1
function_name	date parsers ||| create from date	count=1
function_name	local class ||| local namespace	count=1
function_name	authentication ||| ssh2 auth	count=1
function_name	facet ||| set facet date	count=1
function_name	wrapper ||| wrapper unregister	count=2
function_name	or other content item ||| end item	count=1
function_name	method morphs a set ||| morph	count=1
function_name	closes ||| pdf close	count=1
function_name	[function_name_1] internationalization ||| [function_name_2] get error [function_name_1]	count=1
function_name	value integer ||| value	count=1
namespace	creates a new quickhashintstringhash ||| quickhashintstringhash	count=1
function_name	the property value integer ||| property value	count=1
arg_pair	to display a ||| resource $fdf_document	count=1
arg_pair	the closest ||| int $green int $blue	count=1
function_name	into existing ||| put cat	count=1
return	specified code point is ||| bool	count=1
arg_pair	specified by fd ||| int $mode	count=1
function_name	type number or ||| number	count=1
function_name	descale input and output ||| fann descale	count=1
function	[function_name_1] of an ||| [function_name_1] name [arg_pair_2]	count=3
function_name	url-encoded query string from ||| http build query	count=1
namespace	positioned ||| xmlreader	count=1
arg_pair	treats array ||| mixed $value1	count=1
function_name	green ||| green	count=1
function_name	returns the default domain ||| yp get default domain	count=1
function_name	neuron ||| neuron	count=1
function_name	maximum out ||| max out	count=1
arg_pair	the ||| int $columns	count=1
function_name	the last [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	bigram ||| bigram	count=3
function_name	extension to ||| extension	count=1
function_name	current active ||| sybase select	count=1
return	a string containing the ||| string	count=8
function_name	seen ||| expect expectl	count=2
function_name	obscure check with ||| crack check	count=2
function_name	the regular expression ||| preg	count=1
arg_pair	a rpc call ||| string $method	count=1
return	returns the result set ||| array	count=1
arg_pair	delimiter as fields delimiter ||| string $delimiter	count=3
function_name	complete result set ||| start	count=1
arg_pair	been set as the ||| string $error_msg	count=1
function_name	[function_name_1] a plugin ||| [function_name_1] [function_name_2]	count=1
namespace	of any pixel ||| imagick	count=1
arg_pair	given parameters ||| resource $imap_stream	count=1
function_name	[function_name_1] get ||| [function_name_2] [function_name_1]	count=1
arg_pair	a ||| mixed $connection	count=2
function_name	phrase queries explicitly ||| phrase	count=1
function_name	type 3 font definition ||| end font	count=1
arg_pair	or the closest possible ||| int $green int $blue	count=1
function_name	[function_name_1] reference ||| [function_name_1] [function_name_2]	count=2
function_name	extracts/decodes a message section ||| msg extract part file	count=1
function_name	[function_name_1] rendering ||| [function_name_2] [function_name_1]	count=3
function_name	internet connection type corresponding ||| geoip id	count=1
function_name	given local tag name ||| by tag name	count=1
function_name	gets column ||| cubrid column	count=1
namespace	in front ||| function	count=1
function_name	serialization ||| serialize	count=1
function_name	xhprof data from ||| xhprof disable	count=2
return	or self ||| bool	count=1
function_name	size for the ||| size	count=1
function_name	all data from the ||| add	count=1
return	left [return] 0 0 ||| [return]	count=2
function_name	[function_name_1] momentum ||| [function_name_1] [function_name_2]	count=3
arg_pair	associated with the key ||| string $key	count=1
function_name	path ||| path	count=8
function	deletes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
function_name	write ||| write	count=7
namespace	suitable for ||| function	count=1
function_name	[function_name] attribute if ||| move [function_name]	count=3
function_name	is a passive member ||| is passive	count=1
arg_pair	functionally equivalent to memcached::replace() ||| mixed $value int $expiration	count=1
arg_pair	of c in the ||| string $c int $color	count=1
return	day count [return] containing the ||| [return]	count=1
namespace	given file is ||| function	count=1
function_name	convolution filter of the ||| edgeimage	count=1
function_name	an ||| mssql fetch array	count=1
namespace	string and as ||| gmagick	count=1
namespace	an event from the ||| event	count=1
function_name	[function_name] database ||| [function_name] db avail	count=3
function_name	returns a quoted ||| quoted	count=1
return	returns the ||| string	count=2
namespace	will determine if the ||| function	count=1
arg_pair	a user function ||| string $class	count=1
namespace	properties from [namespace] including inherited ||| [namespace]	count=1
function_name	eventbuffer::addbuffer() except that it ||| prepend	count=1
function_name	be used to ||| metadata	count=1
arg_pair	replacement ||| int $dither	count=1
function_name	via ||| win32 start	count=1
arg_pair	given key the ||| int $key	count=1
function_name	property for ||| get int property	count=1
function_name	from an odbc ||| odbc fetch	count=1
namespace	function that has ||| function	count=1
function_name	current font [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	returns status information on ||| ob get status	count=1
namespace	oauth parameters ||| oauth	count=1
function_name	[function_name_1] frame ||| [function_name_2] [function_name_1]	count=3
function_name	all data ||| add buffer	count=1
arg_pair	source file pointer apply ||| resource $destfp	count=1
function_name	matte channel ||| matte	count=1
arg_pair	or save a ||| string $filename	count=1
function_name	hidden layers ||| hidden	count=1
function_name	[function_name_1] pattern ||| [function_name_1] [function_name_2]	count=1
function_name	context ||| context get params	count=2
arg_pair	haystack and returns the ||| bool $before_needle string $encoding	count=1
return	about ||| array	count=2
namespace	exception was thrown ||| solrillegalargumentexception	count=1
function_name	returns the data associated ||| offset get	count=1
namespace	eventbuffer so that it ||| eventbuffer	count=1
function	the type [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	numeric ||| udm	count=1
function_name	of sybase_fetch_row() ||| sybase fetch	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] commit [arg_pair_2]	count=2
function_name	returns [function_name_2] ||| int [function_name_1] facet [function_name_2]	count=1
function_name	[function_name_1] glyph definition ||| [function_name_2] [function_name_1]	count=1
namespace	safe inclusion in ||| sqlite3	count=1
arg_pair	of ||| int $flags	count=2
function_name	filename ||| filename	count=1
arg_pair	to the specified rgb ||| resource $image	count=1
function_name	cubrid gets ||| get	count=1
namespace	function socket_read() ||| function	count=1
function_name	associated namespace ||| ns	count=1
namespace	database by ||| function	count=1
arg_pair	code to html ||| string $encoding	count=1
namespace	running the ||| gearmanclient	count=1
namespace	the class the ||| reflectionclass	count=1
function_name	[function_name_1] affected by ||| [function_name_2] [function_name_1]	count=6
function_name	only used by php ||| state	count=1
function_name	[function_name_1] names of ||| [function_name_1] [function_name_2]	count=4
arg_pair	correspond to the ||| string $class_name	count=1
function_name	in an sql-statement ||| dbx	count=1
arg_pair	containing differences between old_data ||| string $old_data	count=1
function_name	returns an id that ||| msg get	count=1
arg_pair	process to other action ||| string $action	count=1
namespace	used when a task ||| gearmanclient	count=1
return	to the start ||| bool	count=1
function_name	last tuple for ||| dbplus last	count=1
namespace	new ||| mongodate	count=1
function_name	to the [function_name] similar ||| solarize [function_name]	count=1
function_name	message severity level ||| message severity	count=2
function_name	einer mime kopfzeile ||| mime	count=1
function_name	passed in by ||| passed by	count=2
function_name	target [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	input identified ||| array $input	count=1
function_name	a url-encoded [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	retrieves a node specified ||| domnode	count=1
arg_pair	messages from domain ||| string $domain string $codeset	count=1
namespace	called ||| evloop	count=1
function_name	elements with a ||| elements by	count=1
function	[function_name_1] by outfilename ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	of [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	provided by dn which ||| array $dn resource $privkey	count=1
arg_pair	of an ||| int $flags	count=1
function_name	that cannot be represented ||| set metadata	count=1
namespace	the hash in ||| quickhashinthash	count=1
namespace	outline is displayed ||| haruoutline	count=1
function_name	is used ||| cubrid connect	count=2
function_name	the default ||| date default	count=1
function_name	minimum message severity ||| mssql min message severity	count=1
function_name	miter ||| get miter	count=1
arg_pair	value of the specified ||| resource $link_identifier	count=2
function_name	this function replaces ||| replace	count=1
function_name	adds ||| add cond	count=2
function_name	frequency used for determining ||| default frequency	count=1
function_name	shared secret ||| server secret	count=1
function_name	[function_name_1] depth ||| [function_name_1] [function_name_2]	count=1
arg_pair	timestamp and location ||| int $format	count=2
return	gets the [return] of ||| [return]	count=1
function_name	a quoted printable ||| quoted printable	count=1
function_name	of the [function_name] soapserver object ||| get [function_name]	count=1
function_name	message [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	and ||| float	count=1
function_name	[function_name_1] the weight ||| [function_name_1] cascade [function_name_2]	count=1
arg_pair	the opposite of ||| int $flags	count=1
function_name	decrease debugging in ||| apd set	count=1
function_name	scm [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	an hexadecimal [return] of ||| [return]	count=1
function_name	descale input and output ||| fann descale train	count=1
function_name	for a set ||| run	count=1
arg_pair	maxlength bytes and ||| resource $handle int $maxlength	count=1
function_name	size of the ||| size	count=1
function_name	a normalized [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	with the ||| fbsql	count=1
function_name	an ellipse ||| imageellipse	count=1
function_name	the number of rows ||| rows	count=1
return	end of current eventbuffer ||| bool	count=1
function_name	returns string with error ||| get error	count=1
function_name	the current font size ||| current font size	count=1
namespace	change the [namespace] the ||| [namespace]	count=1
function_name	scm of [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	called after a ||| loop	count=1
arg_pair	from real0 and returns ||| array $real0	count=1
function	[function_name_1] input identified ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] signal event ||| [function_name_2] [function_name_1]	count=1
arg_pair	string in a ||| string $encoding	count=1
namespace	fetches one row of ||| function	count=5
function_name	snippets ||| highlight	count=1
function_name	index on the specified ||| index	count=1
namespace	a result set object ||| sqlite3stmt	count=1
function_name	previous [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] error ||| [function_name_1] next [function_name_2]	count=1
arg_pair	is a**r)/gamma r ||| float $r	count=1
arg_pair	a new date ||| int $usec	count=1
function_name	given local name ||| tag name	count=1
arg_pair	render ||| array $tpl_vars	count=1
namespace	evidle watcher object and ||| evidle	count=1
function_name	local class ||| local	count=1
namespace	in the bytecode ||| function	count=1
function_name	of that curl handle ||| curl	count=1
function_name	with spelling alternatives ||| enchant dict quick check	count=1
arg_pair	a string ||| string $number	count=1
function_name	date parsers and ||| create from date	count=1
namespace	to [namespace] specified buffered ||| [namespace]	count=1
function_name	minimum message severity level ||| min message severity	count=1
function_name	return value for ||| return	count=1
function_name	a new ||| begin	count=1
namespace	maxdb_connect_error() [namespace] will ||| [namespace]	count=1
namespace	some amount ||| mongocursor	count=1
function_name	oracle pl/sql block where ||| oci	count=1
function_name	blob that ||| blob	count=2
namespace	with the id3v2 tag ||| ktaglib_id3v2_tag	count=1
function_name	radius requests each ||| radius	count=1
namespace	in the requested range ||| function	count=1
arg_pair	socket_accept() functions ||| resource $socket int $length	count=1
namespace	[namespace] last insert ||| [namespace]	count=1
function_name	remove edges that are ||| trim	count=1
function_name	get the total number ||| total	count=2
function_name	maximum search query time ||| max query time	count=1
function_name	the power ||| variant pow	count=1
function_name	1 (3761 b ||| jewishtojd	count=1
function_name	gd2 image ||| imagegd2	count=1
function_name	type corresponding ||| geoip id	count=1
function_name	algorithm ||| algorithm	count=4
function_name	[function_name_1] as image-mask ||| [function_name_2] [function_name_1]	count=2
function_name	definition ||| pdf end	count=1
function_name	available ||| mysqlnd qc get available	count=1
function_name	the normal date ||| date	count=1
arg_pair	the integer [arg_pair] ||| [arg_pair]	count=2
function_name	generate a random ||| random	count=1
namespace	instance in the ||| function	count=1
return	without performing ||| bool	count=1
function_name	authenticator is ||| authenticator	count=1
namespace	function without the ||| reflectionfunctionabstract	count=1
namespace	returns if the ||| splobjectstorage	count=1
function_name	main filter [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	type id ||| id	count=1
arg_pair	analyses the ||| int $colorspace	count=1
function_name	feature ||| has feature	count=2
function_name	elapsed ||| get last elapsed	count=1
arg_pair	by parameter pos ||| resource $id int $pos	count=1
return	to update the ||| bool	count=1
arg_pair	at path to the ||| string $path	count=1
function_name	[function_name] prepared ||| [function_name] param info	count=1
arg_pair	performs a ||| string $query	count=1
function_name	the route ||| current	count=1
namespace	checks ||| oauth	count=1
function_name	structure ||| bodystruct	count=1
function_name	the country and region ||| region by name	count=1
arg_pair	maxlength bytes and starting ||| int $maxlength	count=1
arg_pair	by the ||| string $cookie	count=1
function_name	last gearman return code ||| return code	count=2
function_name	computes the ||| udiff	count=1
function_name	escapes ||| escape	count=2
namespace	the child ||| evloop	count=1
arg_pair	socket ||| mixed $socket	count=1
function_name	given ||| fetch object	count=2
function_name	[function_name_1] error ||| [function_name_2] [function_name_1]	count=34
function_name	get the activation function ||| activation function	count=1
arg_pair	the specified host ||| int $port	count=1
return	get the name of ||| string	count=1
arg_pair	on a ||| string $namespace mongodb\driver\query $query	count=1
function_name	cipher initialization vector iv ||| openssl cipher iv	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=2
return	be represented ||| void	count=1
function_name	existing information stored ||| metadata	count=1
return	process with the ||| bool	count=1
function_name	specified return ||| return	count=1
function_name	pixel [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	of the ||| int $field_number	count=1
namespace	however this function ||| function	count=1
arg_pair	an sql ||| resource $stmt	count=1
function_name	image used [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	to the server ||| bool	count=1
function_name	a similarity image ||| sub image	count=1
arg_pair	the supplied x509cert ||| bool $shortnames	count=1
function_name	horizontal scaling ||| get horizontal scaling	count=2
arg_pair	the specified dn ||| resource $link_identifier string $dn	count=3
arg_pair	of the ||| int $format int $width	count=1
function_name	with type stream ||| stream	count=1
function	[function_name_1] instance of ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] a character ||| [function_name_2] [function_name_1]	count=1
arg_pair	given sequence and ||| resource $imap_stream string $sequence	count=1
function_name	the [function_name] in ||| get phar [function_name]	count=1
function_name	fetch dns ||| dns get	count=1
function_name	spanscorer to highlight ||| highlight	count=2
namespace	a row as a ||| function	count=1
arg_pair	serializes the ||| resource $packet_id	count=1
function_name	sybase_fetch_row() that ||| sybase fetch	count=1
function_name	process a response for ||| handle response	count=1
return	use for the ||| string	count=1
function_name	representing the image obtained ||| imagecreatefromjpeg	count=1
function_name	interpolate pixel ||| interpolate	count=1
function_name	mime type of the ||| mime type	count=1
function_name	export ||| export	count=1
function_name	maximum ||| mlt max	count=5
function_name	current transformation matrix ||| trans matrix	count=1
arg_pair	a string ||| string $field_override	count=1
function_name	[function_name_1] current ||| [function_name_2] add [function_name_1]	count=1
namespace	all job ||| gearmanclient	count=1
function_name	open directory [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	the size of ||| function	count=1
function_name	border [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	fields delimiter ||| string $delimiter	count=3
function_name	transformation matrix of ||| matrix	count=1
function_name	the property ||| property	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $type [arg_pair_2]	count=4
function_name	file size ||| size	count=1
namespace	this function can be ||| function	count=1
return	if the current ||| bool	count=1
namespace	in yaf ||| yaf_application	count=1
function_name	returns client per-process statistics ||| mysqli get client stats	count=1
function_name	fetches a result ||| fetch array	count=1
namespace	of natsort() ||| function	count=1
return	[return] by ||| [return]	count=1
arg_pair	clients that the property ||| mixed $value	count=1
function_name	returns at most ||| get	count=1
function_name	[function_name_1] epochs ||| [function_name_2] [function_name_1]	count=9
function_name	as thumbnail [function_name_2] ||| [function_name_2] add [function_name_1]	count=1
function_name	socket parameter ||| socket	count=1
return	all data ||| bool	count=1
function	the priority [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	supplied by pkcs12 into ||| string $pkcs12	count=1
function_name	row ||| cubrid fetch	count=1
arg_pair	in data ||| resource $ann resource $data	count=1
namespace	when a task ||| gearmanclient	count=2
function_name	searches ||| preg	count=1
function_name	data from ||| pgsql copy from	count=1
return	implements the ||| void	count=1
function_name	compiler ||| compiler	count=1
namespace	of any ||| function	count=1
function_name	font and ||| font	count=1
namespace	[namespace] the ||| [namespace]	count=7
function_name	the horizontal scaling for ||| horizontal scaling	count=1
function	connect the [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] blur filter ||| [function_name_1] [function_name_2]	count=3
function_name	created event ||| event	count=1
return	in a ||| string	count=1
function_name	escapes string for ||| pg escape	count=1
function_name	the topmost ||| end	count=1
arg_pair	used in subsequent transformations ||| string $namespace	count=1
namespace	create a recursivefilteriterator ||| recursivefilteriterator	count=1
function_name	country [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	number ||| get cascade num	count=1
return	of ||| int	count=44
function_name	new [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	the input buffer ||| eventbufferevent	count=1
arg_pair	set for the messages ||| resource $imap_stream	count=1
function_name	[function_name_1] scaling ||| [function_name_2] [function_name_1]	count=6
function_name	the enchant providers and ||| enchant	count=1
function_name	[function_name] php ||| [function_name]	count=1
arg_pair	array1 with ||| array $array1 array $array2	count=1
function_name	[function_name_1] whitespace removed ||| [function_name_1] [function_name_2]	count=1
function_name	cascade candidate [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	compares ||| compare	count=4
function_name	the type of the ||| filetype	count=1
arg_pair	to the ||| bool $hebrew	count=1
namespace	entry to the hash ||| quickhashintstringhash	count=1
function_name	returns the names of ||| get extension funcs	count=1
namespace	function ||| reflectionfunction	count=1
function_name	the previous ||| dbplus prev	count=1
function_name	echo it back ||| echo	count=1
return	files header and return ||| mixed	count=1
arg_pair	key associated with priv_key_id ||| mixed $priv_key_id mixed $signature_alg	count=1
function_name	set to 0600 ||| tempnam	count=1
function_name	used to ||| debug	count=1
function_name	decoded quoted ||| quoted	count=1
function	another [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] new record ||| [function_name_2] [function_name_1]	count=1
function_name	the file named ||| pkey export to file	count=1
function_name	group ||| group	count=1
function_name	main filter query determines ||| add expand filter query	count=1
function_name	row ||| object	count=1
arg_pair	of subject ||| string $subject	count=1
function_name	label ||| label	count=1
arg_pair	gets and [arg_pair_1] [arg_pair_2] ||| function array imap sort [arg_pair_2] [arg_pair_1]	count=2
arg_pair	string from the ||| string $arg_separator int $enc_type	count=1
function_name	file ||| openssl pkey export to file	count=1
function_name	numeric string reference ||| decode numericentity	count=1
function_name	[function_name_1] the decrease ||| [function_name_1] rprop [function_name_2]	count=1
arg_pair	0 to the message ||| mixed $message	count=1
arg_pair	associate data to ||| object $object mixed $data	count=1
function_name	gets several parameters which ||| ps get	count=1
arg_pair	the colors in the ||| bool $gray int $channel	count=1
namespace	function called ||| function	count=1
arg_pair	ann based on ||| array $input_vector	count=1
arg_pair	outputs or save a ||| string $filename	count=1
function_name	string that represents ||| cubrid	count=1
arg_pair	mssql_connect() with two ||| string $password bool $new_link	count=1
arg_pair	the given source ||| string $source int $flags	count=1
function_name	title string ||| title	count=1
arg_pair	the specified entry from ||| string $key resource $handle	count=1
return	directly to ||| bool	count=1
function_name	identifier [function_name] for a ||| [function_name]	count=1
function_name	sybase_fetch_row() that uses column ||| sybase	count=1
function_name	parameter in ||| param	count=1
function_name	the next event ||| event	count=1
function_name	the host name of ||| gethostbyaddr	count=1
function_name	[function_name_1] tell the ||| [function_name_1] lob2 [function_name_2]	count=1
arg_pair	the oid of ||| resource $conn_identifier string $oid	count=1
function_name	[function_name_1] stack trace ||| [function_name_2] [function_name_1]	count=1
function_name	soap [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	query and ||| dbx query	count=1
return	positions cursor [return] named ||| [return]	count=1
arg_pair	the index of the ||| int $green	count=1
arg_pair	file as array ||| array $options	count=1
function_name	whole image to memory ||| ping image	count=1
arg_pair	given method and ||| string $data string $method	count=1
function_name	from ||| disable	count=1
function_name	rewind operation ||| rewind	count=1
function_name	default timezone used by ||| date default timezone	count=1
function	[function_name_1] tracing ||| [function_name_1] set module name [arg_pair_2]	count=1
function_name	immediate neighbor ||| floodfill	count=2
function_name	posix system ||| posix strerror	count=1
function	[function_name_1] object is ||| [arg_pair_2] [function_name_1]	count=2
function_name	deletes ||| delete pvf	count=2
return	construct a ||| int	count=1
arg_pair	in dest file ||| string $dest	count=1
arg_pair	an html ||| int $code string $reason	count=1
function_name	specified status callback ||| task status	count=1
function_name	initializes a ||| init	count=1
function_name	sets the learning momentum ||| set learning momentum	count=1
function_name	[function_name_1] execute ||| [function_name_1] [function_name_2]	count=1
function_name	the minimum ||| get cascade min cand	count=1
function_name	info ||| info	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_2] device get [function_name_1]	count=2
namespace	database [namespace] ||| [namespace]	count=1
function_name	returns internal information where ||| get internal info	count=3
namespace	create a recursivefilteriterator from ||| recursivefilteriterator	count=1
function_name	[function_name_1] decay shift ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] algorithms otherwise ||| [function_name_1] [function_name_2]	count=4
arg_pair	string from the associative ||| string $arg_separator	count=1
function_name	rows in a ||| rows	count=1
arg_pair	a wrapper for ||| string $note_value	count=1
arg_pair	specifies a string ||| string $prefix string $field_override	count=1
arg_pair	code to html numeric ||| string $encoding	count=1
function_name	error returned by ||| bzerrstr	count=1
function_name	size thumbnail ||| thumbnail	count=1
function_name	a database instance ||| dba	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] base [function_name_2]	count=2
function_name	a ||| set metadata	count=4
function_name	the output of callback ||| callback	count=1
arg_pair	by x and y ||| int $y	count=1
namespace	for querying the ||| function	count=1
function_name	any pixel ||| unique image	count=1
function_name	frees the system and ||| db2 free	count=1
arg_pair	given ||| resource $conn_identifier	count=2
function_name	flags ||| flags	count=9
arg_pair	for reading by ibase_blob_open() ||| resource $blob_handle	count=1
function_name	oci_parse() or obtained from ||| statement	count=1
arg_pair	a given result ||| resource $result_id	count=1
function_name	[function_name_1] an image ||| [function_name_1] [function_name_2]	count=5
arg_pair	listening clients that the ||| mixed $value	count=1
function_name	this call ||| run	count=1
namespace	the parameter ||| reflectionparameter	count=1
function_name	control point [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	transformation matrix of ||| get trans matrix	count=1
function_name	the ||| fbsql database	count=4
function_name	query string with the ||| query	count=1
function_name	reduce the array ||| reduce	count=1
function_name	data store only if ||| apcu	count=1
function_name	row in a ||| fetch assoc	count=1
function_name	next result ||| next	count=1
function_name	[function_name_1] pdf file ||| [function_name_2] [function_name_1]	count=6
arg_pair	a file ||| string $file	count=2
return	the user ||| mongoid	count=1
function_name	the buffer provided in ||| buffer	count=1
function_name	of a subset of ||| fann subset	count=1
namespace	[namespace] the input ||| [namespace]	count=3
function_name	horizontal [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function	[function_name_1] and returns ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	method ||| string $method	count=1
namespace	the [namespace] on ||| [namespace]	count=2
function_name	parameter ||| parameter	count=7
arg_pair	a ||| int $sec	count=1
function_name	version of sybase_fetch_row() ||| sybase fetch assoc	count=1
function_name	the external [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] handle for ||| [function_name_1] [function_name_2]	count=4
arg_pair	instance of a ||| string $progid int $code_page	count=1
function_name	[function_name_1] interpolate pixel ||| [function_name_2] [function_name_1]	count=1
function_name	sets ||| set facet enum cache	count=1
function_name	xml response from the ||| response	count=1
function_name	iterator ||| from iterator	count=1
function_name	move all ||| add	count=1
function_name	returns the actual size ||| filesize	count=1
function_name	bootstrap under application ||| bootstrap	count=1
namespace	target of ||| function	count=1
namespace	creates a new quickhashintset ||| quickhashintset	count=1
function	[function_name_1] a prepared ||| [arg_pair_2] [function_name_1]	count=5
function_name	sybase_fetch_row() that uses ||| sybase fetch assoc	count=1
function_name	regular expression given ||| preg match	count=1
function_name	specified field is ||| fbsql field	count=1
namespace	[namespace] domain ||| [namespace]	count=2
function_name	binary patch ||| patch binary	count=3
arg_pair	the ||| resource $identifier	count=2
function_name	request ||| send request	count=2
return	redirect [return] by sending ||| [return]	count=1
function_name	a user-supplied comparison ||| usort	count=1
function_name	terminals input buffer without ||| newt clear key buffer	count=1
function_name	size [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	an exe ||| write exe	count=1
function_name	of activation steepnesses ||| activation steepnesses	count=1
function_name	renames a ||| rename	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] max out epochs [arg_pair_2]	count=1
namespace	script and ||| function	count=1
namespace	the route which ||| yaf_router	count=1
function_name	[function_name_1] comment ||| ziparchive bool [function_name_1] [function_name_2] index int $index string	count=1
return	the path ||| bool	count=2
return	thread ||| bool	count=1
function_name	files ||| files	count=1
namespace	is a ||| intlchar	count=1
function_name	decay [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	of all the mailboxes ||| string $ref	count=1
function_name	removes objects contained in ||| remove	count=1
function_name	[function_name_1] last internationalization ||| [function_name_2] get [function_name_1]	count=1
function_name	a shutdown ||| shutdown	count=1
function	[function_name_1] an exact ||| [function_name_1] match [arg_pair_2]	count=2
function_name	creates an ||| construct	count=1
function_name	composite operator associated ||| compose	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] file [function_name_1]	count=3
arg_pair	and other useful ||| string $blob_id	count=1
return	[return] file ||| [return]	count=1
function_name	prepend ||| prepend	count=1
function_name	true return ||| return	count=1
function_name	the ||| setthreadtitle	count=1
return	of columns in the ||| int	count=2
namespace	postions ||| fannconnection	count=2
function_name	scales the inputs ||| scale	count=2
namespace	textual ||| rarentry	count=1
arg_pair	key into the ||| mixed $key	count=1
function_name	completion ||| readline completion	count=1
function_name	[function_name_1] streams ||| [function_name_2] [function_name_1]	count=2
function	an image [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	manifest for a ||| pharfileinfo	count=1
function_name	ccl ||| yaz ccl	count=1
namespace	gets the error string ||| function	count=1
function_name	[function_name_1] autocommit ||| [function_name_2] [function_name_1]	count=1
arg_pair	at the server yet ||| int $expire	count=1
function_name	stored in the id3 ||| id3	count=1
namespace	norewinditerator ||| norewinditerator	count=1
function_name	default [function_name_2] ||| [function_name_1] [function_name_2]	count=12
namespace	oid [namespace] ||| [namespace]	count=1
namespace	checks this ||| oauth	count=1
function_name	from the apc cache ||| apc	count=1
function_name	returns the error ||| error	count=1
function_name	returns the blob ||| ibase blob	count=1
function_name	used to trace ||| debug	count=1
function_name	trace ||| trace	count=2
function_name	static [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	sets boost ||| set boost	count=2
function_name	entwerfen von einer mime ||| mime	count=1
function_name	iterators [function_name] contained in ||| get [function_name]	count=1
function_name	background returning ||| background	count=2
function_name	gets an ||| get path	count=1
function_name	calculates [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	input ||| string $input string $delimiter	count=1
function_name	service [function_name] from a ||| es [function_name]	count=1
function	environment variable [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	finds whether to send ||| is select	count=1
function_name	[function_name] task to ||| add task [function_name]	count=1
function_name	[function_name_1] image and ||| [function_name_1] [function_name_2]	count=1
arg_pair	row of ||| resource $result_identifier int $fetch_flag	count=1
namespace	is an nsapi-specific function ||| function	count=1
arg_pair	the end ||| int $type	count=1
namespace	the [namespace] ||| [namespace]	count=25
function_name	specified status callback ||| add task status	count=1
function_name	split a string ||| split	count=1
return	current point [return] new coordinates ||| [return]	count=1
arg_pair	a ||| string $pathname	count=1
function_name	[function_name_1] an attribute ||| [function_name_2] [function_name_1]	count=1
function_name	latest global rrd ||| rrd	count=1
arg_pair	object_id and return ||| int $timeout	count=1
function_name	use based on training ||| fann	count=1
function_name	[function_name_1] virtual pixel ||| [function_name_2] [function_name_1]	count=1
function_name	elapsed [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	an arc of ||| imagearc	count=1
function_name	a principal according ||| modify principal	count=1
function_name	[function_name_1] [function_name_2] suffixes from the dns ||| [function_name_1] [function_name_2]	count=2
function_name	include ||| terms include	count=2
return	sets ||| bool	count=1
function_name	holding ||| session register	count=2
function_name	previous tuple ||| prev	count=1
arg_pair	name of the ||| resource $result int $field_number	count=1
function_name	[function_name] communication facilities ||| [function_name] ctrl dispatcher	count=2
function_name	that ||| set metadata	count=2
function_name	built-in type in ||| builtin	count=1
arg_pair	a ||| string $version	count=1
arg_pair	a query for execution ||| resource $link string $query	count=1
function_name	may ||| fann get	count=1
namespace	node ||| splpriorityqueue	count=1
namespace	phar archive using ||| phar	count=1
arg_pair	or something in ||| mixed $array_or_countable	count=1
arg_pair	to length - 1 ||| int $length	count=1
function_name	row ||| ibase fetch object	count=2
return	one ||| array	count=1
arg_pair	it in dest ||| string $dest int $context	count=1
function_name	creates a standard backpropagation ||| create sparse array	count=1
arg_pair	specified by dn ||| resource $link_identifier string $dn	count=1
function_name	trace ||| debug	count=1
return	has field= > value ||| mixed	count=1
arg_pair	the first prototype is ||| int $mode	count=2
function_name	the decimal digit ||| digit	count=1
function_name	specified postgresql ||| pg	count=1
arg_pair	size of the buffer ||| int $level int $type	count=1
return	given font ||| bool	count=1
function_name	query multiple ||| mysql query	count=1
arg_pair	by fd file ||| int $mode	count=1
arg_pair	afterward by the ||| string $baseclass	count=1
arg_pair	page ||| resource $pdfdoc	count=1
arg_pair	of array1 with ||| array $array2	count=2
arg_pair	a result pdf defined ||| resource $fdf_document	count=1
function_name	bcompiler extension stored bytecodes ||| bcompiler	count=1
function_name	get ||| get	count=15
return	elements ||| bool	count=1
function_name	computes the difference of ||| udiff	count=1
arg_pair	to display a result ||| string $frame_name	count=1
function_name	merges three files into ||| merge3	count=1
function_name	id3v2 object for ||| id3v2	count=1
return	effective in the ||| string	count=1
function_name	function [function_name] ||| ob end [function_name]	count=2
return	with ||| bool	count=1
arg_pair	headers [arg_pair] ||| [arg_pair]	count=1
function_name	to escape ||| escape string	count=1
function_name	by ||| proc	count=1
function_name	cubrid gets blob/clob by ||| lob get	count=1
function_name	merges the ||| array merge	count=2
function	[function_name_1] is a ||| [function_name_1] block algorithm [arg_pair_2]	count=1
function_name	from a user-defined ||| arg	count=1
function	mode for [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	a string representation ||| string	count=1
function_name	sets ||| set cascade	count=3
arg_pair	of ||| int $min int $max	count=1
function_name	[function_name_1] signature types ||| [function_name_1] [function_name_2]	count=1
namespace	code point is ||| intlchar	count=1
function_name	dom class ||| node class	count=1
function_name	inserts string ||| insert data	count=1
arg_pair	in result argument of ||| mixed $fd int $pri	count=1
function_name	current cipher by ||| get cipher info	count=1
function_name	fetches multiple rows ||| oci fetch all	count=1
function_name	connection type corresponding to ||| geoip	count=1
function_name	[function_name_1] output change ||| [function_name_2] [function_name_1]	count=3
function	[function_name_1] named ||| [function_name_1] service [arg_pair_2]	count=1
arg_pair	queries the resulting ||| string $keyword string $optlist	count=1
function_name	[function_name_1] group cache ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] filename associated ||| [function_name_2] [function_name_1]	count=1
function	with namespace [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	function returns ||| function	count=13
namespace	on a syncreaderwriter object ||| syncreaderwriter	count=2
function_name	any messages or information ||| info	count=1
function_name	[function_name_1] data from ||| function bool [function_name_2] [function_name_1]	count=1
function_name	handler to be ||| handler	count=1
function_name	represented by ||| openssl	count=2
namespace	route ||| yaf_router	count=1
function	registers [arg_pair_2] ||| [function_name_1] extension [arg_pair_2]	count=1
return	for a set of ||| bool	count=1
function_name	character spacing for the ||| char space	count=1
function_name	handle into a mysqlnd ||| convert to mysqlnd	count=1
function_name	the data store only ||| apcu add	count=1
function_name	blob length ||| ibase blob	count=1
function_name	activation [function_name_2] ||| [function_name_1] [function_name_2]	count=29
namespace	iterator instances ||| multipleiterator	count=1
namespace	gets the propertys ||| reflectionproperty	count=1
arg_pair	enables handling of ||| int $length	count=1
arg_pair	large object and ||| resource $connection mixed $object_id	count=1
namespace	the [namespace] has ||| [namespace]	count=1
function_name	[function_name_1] variable ||| [function_name_2] [function_name_1]	count=2
arg_pair	up to maxlength ||| int $maxlength	count=1
function	the tables [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	the index of the ||| int $blue	count=1
function_name	contrast of [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	pkcs12 ||| string $pkcs12	count=1
function_name	an associative array ||| assoc	count=1
function_name	namespace [function_name_2] ||| [function_name_1] [function_name_2] string $prefix	count=1
function_name	structure of a specified ||| bodystruct	count=1
arg_pair	the supplied hash implements ||| string $hash	count=1
namespace	new quickhashstringinthash ||| quickhashstringinthash	count=1
return	link to a sybase ||| bool	count=1
function_name	ssl_cipher_description ssl api function ||| ssl get	count=1
arg_pair	wildcard pattern ||| string $string	count=1
namespace	[namespace] a ||| [namespace]	count=7
function_name	effective in the route ||| route	count=1
function_name	child before entering or ||| loop	count=1
function_name	creates an html ||| html	count=1
arg_pair	of the buffer ||| int $level int $type	count=1
function_name	starts running the tasks ||| tasks	count=1
return	string into smaller ||| string	count=1
function_name	the buffer ||| buffer	count=1
function_name	returns root [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	retrieves the current boost ||| boost	count=1
function_name	highlighted snippets ||| highlight	count=1
return	gearmanclient::addtasklowbackground() this ||| bool	count=1
function_name	local ||| local	count=2
function_name	parameter with ||| parameter	count=1
function	the given [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	[function_name_1] properties of ||| [function_name_1] [function_name_2]	count=1
arg_pair	[arg_pair_1] data ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	for needle ||| mixed $needle	count=1
function_name	that cannot be represented ||| set	count=1
return	used [return] see which ||| [return]	count=1
arg_pair	inverse of the ||| int $options	count=1
function_name	return type [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	an ldap link ||| ldap	count=1
function_name	iv belonging to a ||| mcrypt get iv	count=1
arg_pair	a ||| string $complement	count=1
function_name	deactivate image ||| set image	count=2
function_name	the ||| debug	count=1
function_name	clear ||| clear	count=2
function_name	the apache ||| apache	count=1
function	file [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	or other content item ||| pdf begin item	count=1
function_name	[function_name_1] current byte ||| [function_name_2] [function_name_1]	count=1
function_name	uploads ||| fput	count=1
function_name	is executable ||| is executable	count=2
function_name	sets the maximum ||| set mlt max	count=1
function_name	result ||| ibase	count=1
function_name	a backpropagation neural network ||| fann	count=1
function_name	cascade candidate [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] current column ||| [function_name_2] [function_name_1]	count=1
function_name	pcos ||| pdf pcos	count=1
function_name	the [function_name] in the ||| get phar [function_name]	count=1
function_name	get the column ||| cubrid column	count=1
arg_pair	large the ||| resource $ann float $rprop_delta_max	count=1
function_name	on training data ||| fann set	count=1
arg_pair	distinguished name to be ||| array $extraattribs	count=1
function_name	one of ||| result	count=1
function_name	[function_name] from data1 ||| [function_name] train data	count=1
arg_pair	the given user ||| resource $link_identifier string $user	count=1
return	internal array ||| mixed	count=1
function_name	each layer ||| layer array	count=1
function_name	sets the idle ||| set idle	count=3
function_name	gets column types ||| column types	count=1
function_name	[function_name_1] steepnesses ||| [function_name_1] [function_name_2]	count=6
function_name	[function_name_1] root ||| [function_name_1] [function_name_2]	count=2
function_name	objects default compression quality ||| compression quality	count=2
function_name	associative ||| assoc	count=1
function_name	a similarity image such ||| image	count=1
function_name	register a [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	service provider ||| string $verifier_token	count=1
function_name	by the given ||| bzerrstr	count=1
function_name	and turn this ||| flush	count=1
namespace	winding ||| harupage	count=1
function_name	the current flags ||| get flags	count=1
function_name	clone method prevents an ||| clone	count=1
function_name	retrieves the boost ||| boost	count=1
arg_pair	points start ||| mixed $start	count=1
function_name	instantiable ||| instantiable	count=1
function	mode [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	given ||| bool	count=1
function_name	the name of ||| get current	count=1
function_name	service proxy [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	set the ||| function	count=1
namespace	to the tar/zip archive ||| phar	count=1
arg_pair	to ann based ||| resource $ann	count=1
function_name	the first attribute in ||| ldap first attribute	count=1
arg_pair	save a ||| resource $image string $filename	count=1
function_name	mssql_fetch_array() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	one row of data ||| resource $result_identifier int $fetch_flag	count=1
function_name	row as ||| ibase	count=1
function_name	ldap directory entry ||| ldap	count=1
function_name	specified field is ||| field	count=1
function_name	[function_name_1] specified field ||| [function_name_2] [function_name_1]	count=6
function_name	entries [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] [arg_pair_2] ||| [function_name_1] overview [arg_pair_2]	count=1
function_name	a type 3 font ||| font	count=1
function_name	the property value ||| property value	count=2
function_name	[function_name_1] haruencoder instance ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] body ||| imap [function_name]	count=1
arg_pair	and parsing location ||| resource $context string $location	count=1
return	amount of ||| mongocursor	count=1
namespace	file ||| ktaglib_mpeg_audioproperties	count=1
arg_pair	namespaceuri ||| string $namespaceuri string $qualifiedname	count=1
arg_pair	the server ||| string $cookie	count=1
function_name	specified color+alpha in the ||| imagecolorexactalpha	count=1
arg_pair	on the image ||| int $arg3	count=1
arg_pair	determining the ||| resource $ann float $rprop_delta_zero	count=1
function_name	version of sybase_fetch_row() that ||| sybase	count=1
arg_pair	a php variable to ||| mixed $parameter mixed $variable	count=1
function_name	connection ||| fbsql database	count=2
namespace	storage ||| splobjectstorage	count=3
function_name	function creates a new ||| create document fragment	count=1
namespace	if the [namespace] on ||| [namespace]	count=1
function_name	be ||| new	count=1
return	and password ||| resource	count=1
function_name	[function_name_1] stopped instance ||| [function_name_2] [function_name_1]	count=1
function_name	the portion ||| substr	count=1
function_name	[function_name_1] number for ||| [function_name_2] [function_name_1]	count=4
function_name	error severity level ||| error severity	count=2
arg_pair	gmagickpixel object ||| gmagickpixel $color	count=1
function_name	replacement pairs ||| pspell config repl	count=1
return	directory on the ||| bool	count=1
function_name	to get [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	begins after the ||| begin	count=1
function_name	a facet ||| set facet	count=1
function_name	sequence type attribute ||| seq	count=2
arg_pair	stores them in fd ||| int $protocol array $fd	count=1
arg_pair	an option ||| int $option	count=1
function_name	described/referred ||| ordering	count=1
function_name	[function_name_1] process title ||| [function_name_1] [function_name_2]	count=1
arg_pair	use mapreduce ||| array $pipeline array $options	count=1
namespace	current element ||| recursivetreeiterator	count=1
function_name	delete an instance ||| drop	count=1
arg_pair	color defined by fill ||| mixed $fill	count=1
function_name	[function_name_1] a stream ||| [function_name_2] [function_name_1]	count=1
function_name	with an url ||| with url	count=1
return	with [return] entries ||| [return]	count=1
function_name	stretches with saturation ||| linear stretch	count=1
namespace	if the ||| splobjectstorage	count=1
function_name	search ||| search	count=2
function_name	the queries ||| queries	count=1
function_name	hash ||| hash	count=1
namespace	the same preferences ||| function	count=1
arg_pair	of servers ||| int $port	count=1
function_name	[function_name_1] created event ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] input scaling [function_name_1]	count=3
arg_pair	prepares the ||| int $events mixed $callback	count=1
function_name	number of ||| num	count=3
arg_pair	specified by key from ||| string $key	count=1
function_name	file that ||| set	count=1
function_name	postgresql server ||| pg	count=1
arg_pair	subject for [arg_pair_2] ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=1
function_name	given curl share handle ||| curl share setopt	count=1
function_name	next ingres [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	new ||| begin document	count=2
function_name	current fbsql daemon ||| fbsql list	count=2
arg_pair	a new ||| string $width	count=1
function_name	api version number ||| version	count=1
namespace	be used ||| pharfileinfo	count=1
arg_pair	and write events ||| resource $bevent int $events	count=1
arg_pair	hostname looking for ||| string $hostname	count=1
function	[function_name_1] data ||| [function_name_1] decode string $data [arg_pair_2]	count=1
return	gearmanclient::addtask() ||| bool	count=1
namespace	of the [namespace] ||| [namespace]	count=1
function_name	sends status information ||| status	count=1
function_name	down the image ||| image	count=1
function	string reference [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	atx ||| ps arc	count=2
function_name	[function_name_1] squares problem ||| [function_name_2] [function_name_1]	count=8
function_name	intent ||| intent	count=2
namespace	the [namespace] value ||| [namespace]	count=1
arg_pair	query result ||| resource $result	count=3
arg_pair	by the data source ||| resource $connection_id int $data_type	count=1
arg_pair	an existing ||| int $textflow	count=1
namespace	callback [namespace] ob_start() ||| [namespace]	count=1
arg_pair	[arg_pair_1] to html ||| [arg_pair_2] [arg_pair_1]	count=1
return	the classname of the ||| void	count=1
return	to set ||| bool	count=1
function_name	and [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	a file ||| resource $sftp string $filename	count=1
function_name	fgetcsv() ||| fgetcsv	count=1
return	about ||| ktaglib_id3v1_tag	count=1
return	string attribute to ||| bool	count=2
function_name	comment of ||| comment	count=1
function_name	the maximum ||| mlt max	count=2
arg_pair	specified by assoc_array which ||| array $assoc_array int $options	count=1
function_name	new float range filter ||| filter float range	count=1
function_name	and sort direction fields ||| sort	count=1
arg_pair	given filter filtertype on ||| resource $image int $filtertype	count=1
function_name	time zone corresponding to ||| geoip time zone	count=1
arg_pair	a ||| resource $proxy string $value	count=1
function_name	[function_name_1] id3v1 tag ||| [function_name_2] [function_name_1]	count=1
function_name	integer range ||| range	count=1
function_name	weight [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	of [return] null-value on ||| [return]	count=1
function_name	[function_name_1] paradox object ||| [function_name_2] [function_name_1]	count=2
arg_pair	with tar- or zip-based ||| string $webindexfile	count=1
function	[function_name_1] user ||| [function_name_1] password [arg_pair_2]	count=1
function_name	same body and bound ||| to	count=1
function_name	existing cubrid databases ||| cubrid list dbs	count=1
function_name	image by ||| image	count=2
return	and stroke color to ||| bool	count=2
function_name	training algorithmsfann_train_incremental ||| fann	count=1
namespace	restarts the periodic ||| evperiodic	count=1
function_name	will discard a blob ||| blob	count=1
namespace	returned by the ||| function	count=1
arg_pair	given password on the ||| string $password	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=1722
function_name	closes the request ||| cubrid close request	count=3
function_name	amount of channels ||| channels	count=1
return	a reflectionproperty ||| reflectionproperty	count=1
function_name	third parameter ||| previous	count=1
function_name	commits a transaction ||| ibase commit	count=1
function_name	an sql aggregate function ||| create aggregate	count=1
namespace	reason ||| hw_api_reason	count=1
function_name	hint ||| hint	count=1
function_name	received ||| now	count=1
function_name	the sunset time ||| date sunset	count=1
namespace	single task ||| gearmanclient	count=1
function_name	given password ||| with password	count=1
arg_pair	before ||| string $source_string	count=1
function_name	random ||| random	count=2
function_name	be represented ||| set	count=1
function_name	this method stores ||| file	count=3
function_name	the private ||| check private	count=1
namespace	the [namespace] the ||| [namespace]	count=1
function_name	a mysqlnd connection handle ||| mysqlnd	count=1
arg_pair	a string ||| string $haystack	count=1
function_name	type ||| filetype	count=1
function_name	[function_name_1] handler to ||| [function_name_1] start namespace decl [function_name_2]	count=1
arg_pair	maxlength bytes and starting ||| resource $handle int $maxlength	count=1
arg_pair	text ||| resource $font	count=1
function	[function_name_1] value for ||| [arg_pair_2] [function_name_1]	count=1
return	to a ||| string	count=3
function_name	the number of activation ||| fann get cascade activation	count=1
arg_pair	use mapreduce ||| array $pipeline	count=1
function_name	of a java ||| java	count=1
function_name	a callback ||| preg replace callback	count=1
arg_pair	memcached::add() except ||| int $expiration	count=1
arg_pair	corresponds to the fetched ||| resource $result int $result_type	count=1
function_name	term to start from ||| set terms lower bound	count=1
function_name	context-triggered piecewise hashing and ||| ssdeep fuzzy hash filename	count=1
function_name	data store only if ||| apcu add	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] lob2 [function_name_2]	count=4
function_name	pseudo image ||| image	count=1
function_name	submit the ||| submit	count=1
namespace	gearmanclient::addtaskhighbackground() ||| gearmanclient	count=1
namespace	given file ||| function	count=3
return	if it has ||| bool	count=1
namespace	the current element ||| recursivetreeiterator	count=1
arg_pair	the color ||| float $fuzz	count=2
function	otherwise it [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	result of oci_parse() ||| statement	count=1
arg_pair	the entry was added ||| int $key	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $needle [arg_pair_1]	count=9
function_name	command and separate parameters ||| params	count=1
function_name	number ||| num input	count=1
function_name	the previous tuple ||| dbplus prev	count=1
arg_pair	a result pdf defined ||| string $frame_name	count=1
function	quota [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	xmlrpc type ||| xmlrpc set type	count=1
arg_pair	extended version of mssql_fetch_row() ||| resource $result int $result_type	count=1
namespace	existing ||| pharfileinfo	count=1
arg_pair	admin_server ||| string $admin_server	count=1
arg_pair	a specified offset ||| int $offset int $length	count=1
function_name	or odbc_exec() ||| odbc fetch	count=1
function_name	dns resource records associated ||| dns get	count=1
function	function [arg_pair_2] ||| [function_name_1] output [arg_pair_2]	count=1
function_name	retrieve current controller object ||| get controller	count=1
function_name	array of the ||| get	count=1
function_name	[function_name_1] row into ||| [function_name_2] [function_name_1]	count=2
function_name	width ||| width	count=8
namespace	the thread ||| function	count=1
function_name	command ||| command	count=3
function_name	lower bound term ||| lower bound	count=2
arg_pair	sets up callback to ||| int $type mixed $callback	count=1
arg_pair	by variable ||| string $variable	count=1
function_name	otherwise ||| algorithm	count=1
arg_pair	multiset attribute ||| string $attr_name string $set_element	count=1
function_name	for use with block ||| block	count=1
function_name	[function_name_1] domain ||| [function_name_2] [function_name_1]	count=2
arg_pair	to [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	specified by fd file ||| int $mode	count=1
function_name	is [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	interface to getrusage 2 ||| getrusage	count=1
function_name	frees ||| close	count=1
function_name	[function_name_1] term ||| [function_name_2] [function_name_1]	count=1
function_name	error function ||| error function	count=4
function_name	function removes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] textflow and ||| [function_name_1] [function_name_2]	count=1
function_name	product of values in ||| array product	count=1
function	set environmental [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	a file that cannot ||| pharfileinfo	count=1
arg_pair	in the ||| resource $psdoc	count=1
function_name	[function_name_1] given record ||| [function_name_1] [function_name_2]	count=1
function	the user [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	number of rows ||| rows	count=1
return	locks ||| bool	count=1
function_name	the number ||| imap num	count=1
arg_pair	b where gcd ||| gmp $b	count=1
function_name	gets modifier ||| get modifier	count=1
function_name	[function_name_1] encoded ||| [function_name_2] [function_name_1]	count=2
function_name	backpropagation neural network ||| fann create	count=1
function_name	that are present in ||| array intersect	count=1
function_name	the dn ||| dn	count=1
arg_pair	parses key and ||| mixed $key string $passphrase	count=1
function_name	pdi document parameter ||| get pdi value	count=1
return	generates a string ||| string	count=1
namespace	representation of the soapfault ||| soapfault	count=1
return	gets [return] textual description ||| [return]	count=1
function_name	only be used to ||| set	count=1
namespace	result set back ||| sqlite3result	count=1
arg_pair	the specified index to ||| mixed $index	count=2
namespace	tar/zip archives ||| phardata	count=2
function_name	tag ||| set tag	count=2
arg_pair	point for new ||| float $y	count=1
return	the previously closed intervals ||| int	count=1
function	[function_name_1] old_data string ||| [function_name_1] [arg_pair_2]	count=1
function_name	a [function_name] ||| [function_name] connect	count=1
function_name	trace the ||| debug	count=1
namespace	manifest for ||| pharfileinfo	count=2
function_name	[function_name] encapsulates ||| socket import [function_name]	count=1
function_name	utf-8 format to utf-16 ||| pdf utf8 to utf16	count=1
function_name	the ending [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	to escape [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	that the ||| int $expiration	count=1
function_name	adaptive ||| adaptive	count=1
function_name	array with [function_name] ||| ibase param [function_name]	count=1
function_name	form passed to ||| form	count=1
function_name	[function_name_1] sarprop temperature ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] short name ||| [function_name_2] [function_name_1]	count=3
function_name	sets the max number ||| set size	count=1
return	host ||| bool	count=1
function_name	type name ||| field type	count=2
function_name	properties of the mpeg ||| properties	count=1
return	the document ||| float	count=1
function_name	database specified ||| dba	count=1
function_name	that are present ||| array intersect	count=1
arg_pair	a by b and ||| gmp $a gmp $b	count=1
function_name	to this service process ||| win32	count=1
arg_pair	for ||| resource $radius_handle	count=1
return	returned by the given ||| string	count=1
function_name	passed in [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ftp ||| ftp rmdir	count=2
arg_pair	the coordinate ||| resource $p float $sx	count=1
function_name	textflow object or adds ||| pdf add	count=1
function_name	rows affected by the ||| affected rows	count=2
function_name	timezone ||| timezone	count=1
function_name	cipher by ||| get cipher info	count=1
return	[return] write ||| [return]	count=3
function_name	bezier curve ||| curve to2	count=1
arg_pair	filter filtertype on ||| resource $image int $filtertype	count=1
function_name	a request token ||| request token	count=1
function_name	of oci_parse() ||| statement	count=1
function_name	the specified ||| row	count=1
function_name	the order number ||| yp order	count=1
function_name	ldap link identifier ||| ldap connect	count=1
function_name	tag name ||| by tag name	count=2
arg_pair	a resource ||| string $encoding string $separator	count=1
arg_pair	in the specified class ||| mixed $class string $property	count=1
function_name	a comment ||| comment	count=1
function_name	information ||| set	count=1
function_name	whether to send the ||| is	count=1
function_name	rows ||| fbsql rows	count=1
arg_pair	method and key ||| string $data string $method	count=1
function_name	details ||| get details	count=1
function_name	opendir readdir ||| eio readdir	count=1
arg_pair	for a type 3 ||| resource $pdfdoc	count=1
function_name	unnecessary the phar::startbuffering() ||| start buffering	count=1
function_name	ask the multi handle ||| curl multi	count=1
function_name	warnings ||| warning	count=1
function_name	agent ||| walk	count=1
function_name	removes a ||| shm remove	count=1
function_name	cipher by means ||| cipher	count=1
function_name	[function_name_1] content type ||| [function_name_2] [function_name_1]	count=3
function_name	number of activation steepnesses ||| get cascade activation steepnesses count	count=1
return	remaining idle ||| mongocursor	count=1
function_name	minor version number ||| minorversion	count=1
arg_pair	specified by hostname ||| int $port	count=1
return	bitfield of the ||| int	count=1
rest	used to [function_2] ||| [function_2] [return_1]	count=1
function_name	overrides main filter ||| filter	count=1
function_name	prints [function_name] inside the ||| [function_name] rect	count=1
function_name	maps to facet ||| facet date	count=1
function_name	fit [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	a field to use ||| field	count=1
function_name	variables ||| vars	count=1
function_name	maximum [function_name_2] ||| [function_name_2] [function_name_1]	count=15
arg_pair	functionally equivalent to memcached::get() ||| callable $cache_cb	count=1
function_name	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() ||| run	count=1
arg_pair	that the property have ||| int $type mixed $value	count=1
function_name	given stream to ||| stream	count=1
function_name	create and optionally lock ||| create	count=1
return	and multiple values ||| array	count=1
function_name	determines the maximum ||| fann get cascade max	count=1
arg_pair	a link annotation ||| resource $pdfdoc float $lowerleftx	count=1
function_name	[function_name_1] blob ||| [function_name_2] [function_name_1]	count=6
function_name	inode number for ||| inode	count=1
return	a function [return] call when ||| [return]	count=1
function_name	source node [function_name] ||| transform [function_name] uri	count=1
function_name	subset [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	handle into a mysqlnd ||| mysqlnd	count=1
function_name	reads ||| read	count=11
namespace	[namespace] forces ||| [namespace]	count=1
function_name	suitable snippets ||| set highlight max analyzed chars	count=1
function_name	fills the path ||| fill	count=1
namespace	value of the ||| function	count=1
function_name	parameters ||| params	count=7
function_name	class which will be ||| info class	count=1
function_name	mongodb aggregation framework ||| aggregate	count=1
arg_pair	a ||| string $target array $properties	count=1
function_name	default [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	effective ||| get	count=1
namespace	indices ||| mongocollection	count=1
function_name	has ||| has colors	count=1
namespace	internally is still ||| solrdocument	count=1
function_name	will return the region [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	the request authenticator ||| radius request authenticator	count=2
return	from the ||| bool	count=5
arg_pair	treats array as ||| mixed $value1	count=1
arg_pair	command ||| array $output	count=1
function_name	the specified ftp ||| ftp	count=1
function	constructs a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	class the part without ||| reflectionclass	count=1
function_name	inspected by [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] the idle ||| [function_name_2] [function_name_1]	count=1
function_name	iv belonging to a ||| get iv	count=1
arg_pair	of any ||| int $y	count=1
function_name	a frontbase ||| fbsql	count=1
function_name	registered __autoload() [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the specified events ||| event	count=1
function_name	image with a border ||| border image	count=1
function_name	intersection ||| uintersect assoc	count=2
function_name	[function_name_1] short name ||| [function_name_1] [function_name_2]	count=2
function_name	the number of ||| field count	count=1
return	a given day specified ||| mixed	count=2
function_name	returns an associative array ||| assoc	count=1
function_name	[function_name_1] mail ||| [function_name_2] [function_name_1]	count=4
function_name	a transaction [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	provides a stride ||| stride	count=1
function_name	gets a ||| openssl get	count=2
function_name	[function_name_1] dictionary for ||| [function_name_2] [function_name_1]	count=4
function_name	polygon using ||| polygon	count=1
arg_pair	a resource ||| string $separator	count=1
namespace	this function behaves ||| function	count=1
function_name	returns an array ||| fetch array	count=1
function_name	[function_name_1] image background ||| [function_name_1] [function_name_2]	count=1
arg_pair	blocks until there ||| resource $mh float $timeout	count=1
namespace	[namespace] returns ||| [namespace]	count=1
namespace	to all job ||| gearmanclient	count=1
function_name	in a file ||| set	count=1
function_name	submit [function_name_1] [function_name_2] ||| submit [function_name_1] [function_name_2]	count=2
function_name	remove edges ||| trim	count=1
function_name	renames ||| rename	count=3
return	to on ||| string	count=1
function_name	return the total number ||| total space	count=1
return	day specified as ||| mixed	count=2
function_name	element ||| get	count=1
arg_pair	the thickness of the ||| int $thickness	count=1
namespace	used with the connection ||| function	count=1
namespace	measurement was ||| hrtime\performancecounter	count=1
function_name	function creates ||| create entity reference	count=1
function_name	group cache percent value ||| group cache percent	count=1
function_name	to traverse over ||| real walk	count=1
arg_pair	wildcard pattern ||| string $pattern string $string	count=1
namespace	for ||| solrinputdocument	count=1
function_name	region ||| region	count=2
arg_pair	that index ||| mixed $index	count=1
function_name	a 3d model ||| 3ddata	count=1
function_name	the image ||| tint image	count=1
function_name	pattern ||| pattern	count=2
function_name	sets [function_name_2] ||| [function_name_1] rprop [function_name_2]	count=4
function_name	vendor [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] output change ||| fann get [function_name] output	count=1
function_name	passed string would ||| fnmatch	count=1
function_name	scale [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	function is not binary ||| function	count=1
arg_pair	for the ||| resource $ann	count=1
function	a postgresql [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	by the ||| resource $connection_id int $data_type	count=1
function_name	current ||| add buffer	count=2
function_name	allowable depth ||| depth	count=1
function_name	[function_name] instead ||| [function_name]	count=3
arg_pair	a php ||| string $name mixed $callback	count=1
function_name	encoding ||| pdf encoding set char	count=2
return	the coordinate system ||| bool	count=1
function	[function_name_1] the database ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] the request ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] parsers and ||| [function_name_2] [function_name_1]	count=8
namespace	this method tries to ||| quickhashstringinthash	count=1
function_name	specified field is in ||| fbsql field	count=1
function_name	first attribute in ||| first attribute	count=1
function_name	[function_name_1] id3v1 ||| [function_name_2] [function_name_1]	count=1
arg_pair	the path ||| int $flags	count=1
arg_pair	fetch an associative ||| int $rownumber	count=1
function_name	maxdb resource suitable for ||| maxdb	count=1
function	[function_name_1] style for ||| [function_name_1] [arg_pair_2]	count=3
return	some amount of ||| mongocursor	count=1
function_name	the minimum number ||| cascade min	count=1
function_name	of oci_parse() or ||| statement	count=1
return	used to prepare ||| bool	count=2
function_name	on any registered stream ||| stream	count=1
function_name	[function_name_1] class for ||| [function_name_1] [function_name_2]	count=2
function_name	variant and returns the ||| variant	count=1
function_name	an exclusive write ||| writelock	count=1
function_name	type stream fstream ||| get stream	count=1
function_name	[function_name_1] train ||| [function_name_1] [function_name_2]	count=2
function_name	new image ||| new pseudo image	count=1
function_name	[function_name_1] in namespace ||| [function_name_2] [function_name_1]	count=1
function_name	rot13 encoding on ||| str rot13	count=1
function_name	for this field ||| add field	count=1
function_name	the [function_name_2] ||| [function_name_2] [function_name_1] entries resource $link_identifier resource	count=1
function_name	only ||| state	count=1
arg_pair	memcached::replace() except that ||| mixed $value int $expiration	count=1
function_name	the key ||| key	count=2
function_name	patches a ||| xdiff string bpatch	count=1
function_name	new [function_name_2] ||| [function_name_2] point [function_name_1]	count=1
function_name	[function_name_1] pixels from ||| [function_name_2] [function_name_1]	count=1
function_name	newt ||| newt	count=4
function_name	converts an extended ||| db\bson\from	count=1
function_name	a id3v2 object ||| id3v2	count=1
function_name	the language described/referred ||| set ordering	count=1
function	text [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	of ||| string $key	count=2
function_name	numeric ||| udm errno	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] min [function_name_2]	count=1
function_name	field to return ||| alternate field	count=1
namespace	current session ||| sessionhandlerinterface	count=1
return	for ||| resource	count=1
arg_pair	old parameter matches the ||| string $key int $old	count=1
function	the permissions [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	computes the intersection ||| uintersect assoc	count=1
function_name	with ||| fbsql database	count=2
function	requests [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	[function_name_1] entity loader ||| [function_name_2] [function_name_1]	count=4
namespace	or unnamed countable mutex ||| syncmutex	count=1
function_name	moves the internal ||| data seek	count=1
arg_pair	moves a file ||| string $new_path	count=1
function_name	event priority levels ||| event base priority	count=1
namespace	function but ||| function	count=2
function_name	row from the query ||| fetch	count=1
function_name	true if the ||| is	count=1
function	the blob [arg_pair_2] ||| [function_name_1] info [arg_pair_2]	count=1
function_name	returns ||| pgsql get	count=2
arg_pair	the socket socket has ||| int $backlog	count=1
arg_pair	of the color which ||| int $green int $blue	count=1
return	to delete an ||| bool	count=2
function_name	[function_name_1] socket ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] warnings ||| [function_name_1] [function_name_2]	count=1
function_name	gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| run	count=1
function_name	encoding ||| xfer encoding	count=2
function_name	of the ssl_cipher_description ssl ||| ssl get	count=1
namespace	of the passed variables ||| function	count=1
function_name	server version ||| pg version	count=1
arg_pair	object and returns the ||| resource $connection	count=1
function_name	function table ||| function table	count=2
arg_pair	the gray ||| float $gray	count=1
function_name	processing instruction pi handler ||| processing instruction handler	count=1
function_name	of the ||| db2 field	count=1
function_name	this returns ||| get	count=3
function_name	gets the short ||| get short	count=2
return	will return [return] ||| [return]	count=3
arg_pair	a valid boost value ||| string $fieldvalue	count=1
arg_pair	specified index to newval ||| mixed $index mixed $newval	count=2
function_name	[function_name_1] scaling for ||| [function_name_1] [function_name_2]	count=2
function_name	timer ||| timer set	count=2
function_name	node [function_name] applying the ||| transform [function_name]	count=1
arg_pair	function is identical to ||| string $encoding bool $double_encode	count=1
function_name	not for production ||| disable	count=1
function_name	the word spacing for ||| word space	count=1
function_name	[function_name_1] creates ||| [function_name_2] [function_name_1]	count=4
namespace	only be used to ||| pharfileinfo	count=1
function_name	external entity loader ||| set external entity loader	count=1
arg_pair	accepts an array of ||| array $args	count=1
arg_pair	input array and ||| array $input	count=1
function_name	the [function_name] of ||| [function_name] field length	count=1
return	all ||| array	count=9
function_name	need to ||| state	count=1
return	and restarts the periodic ||| void	count=1
function_name	[function_name_1] character ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] query result ||| [function_name_1] array [arg_pair_2]	count=1
arg_pair	to new mailbox ||| string $old_mbox	count=1
function_name	spelling alternatives ||| quick	count=1
arg_pair	format the time ||| int $timestamp	count=1
function_name	restart it again ||| again	count=1
arg_pair	of ||| int $ndocs	count=2
function_name	utf-8 format to utf-16 ||| utf8 to utf16	count=1
arg_pair	a ||| string $filename	count=5
function_name	or nntp server ||| reopen	count=1
function_name	to ||| maxdb debug	count=2
function_name	replaces the child ||| replace child	count=3
function_name	in each layer ||| layer array	count=1
function_name	returns the size ||| get size	count=2
function_name	length ||| mb strlen	count=2
function_name	php configuration ||| get cfg var	count=1
function_name	product of values ||| array product	count=1
function_name	computes a digest hash ||| openssl digest	count=1
return	collection and ||| array	count=1
arg_pair	serializes ||| mixed $var_name	count=1
function_name	[function_name_1] filter ||| [function_name_2] [function_name_1]	count=17
function_name	of activation steepnesses in ||| cascade activation steepnesses count	count=1
function_name	slob object ||| free slob	count=1
function_name	[function_name_1] [function_name_2] send to ||| [function_name_2] [function_name_1]	count=3
arg_pair	other action ||| string $action array $paramters	count=1
namespace	collection ||| mongocollection	count=1
arg_pair	returned instead of ||| resource $result	count=1
function_name	highlighted version of the ||| highlight	count=1
arg_pair	principal and the given ||| string $principal string $password	count=1
function	password for [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	output layer ||| output	count=1
arg_pair	associated with priv_key_id ||| mixed $priv_key_id mixed $signature_alg	count=1
function	image [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=7
function_name	com object except ||| com	count=1
namespace	objects ||| imagick	count=2
function_name	image which is closest ||| imagecolorclosestalpha	count=1
return	values of the ||| array	count=1
function_name	the route which is ||| get current	count=1
function_name	initial [function_name] ||| [function_name]	count=1
function_name	when using mppe ||| mppe key	count=1
arg_pair	a field i ||| int $face	count=1
function_name	pack ||| pack	count=1
arg_pair	directory on ||| string $directory	count=1
function_name	with ||| set metadata	count=4
arg_pair	result ||| resource $result_id	count=1
arg_pair	the mailbox currently opened ||| string $criteria	count=1
function_name	from a glo ||| from glo	count=1
function_name	and ||| pdf	count=3
function_name	that follows ||| snmp2 getnext	count=1
function_name	error handler ||| error handler	count=4
function_name	transparent ||| imagecolortransparent	count=1
function_name	matches color ||| opaque paint image	count=1
arg_pair	correspond to ||| resource $result string $class_name	count=1
function_name	error code as returned ||| strerror	count=1
namespace	determine whether the end ||| splfileobject	count=1
function_name	miter ||| miter	count=2
return	of the input ||| bool	count=1
return	a request to ||| bool	count=2
return	information about ||| array	count=2
return	and ||| bool	count=2
function_name	value integer for ||| value	count=1
function_name	[function_name_1] message ||| [function_name_2] [function_name_1]	count=8
function_name	sets per-index ||| set index	count=1
return	finalizes current ||| bool	count=1
arg_pair	matching the target color ||| mixed $target float $alpha	count=1
return	in yaf ||| void	count=1
function_name	[function_name_1] pattern ||| [function_name_2] [function_name_1]	count=1
function_name	based on training ||| fann	count=1
namespace	collection and ||| mongocollection	count=1
function_name	or the last value ||| last insert	count=1
arg_pair	fetches the ||| array $ctor_args	count=1
function_name	parses [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	the product ||| product	count=1
function_name	a given local name ||| name	count=1
function_name	advances array s internal ||| end	count=1
arg_pair	image of the specified ||| int $width int $height	count=1
arg_pair	to memcached::getmulti() except that ||| string $cas_tokens	count=1
function_name	whole image ||| ping image	count=2
function_name	closes [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function	[function_name_1] the input ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	the coordinate system ||| resource $p float $sx	count=1
function_name	name which points ||| by name	count=1
function_name	function ||| state	count=1
return	in ||| string	count=1
function_name	representing a row ||| fetch assoc	count=1
arg_pair	how large the ||| resource $ann float $rprop_delta_max	count=1
function_name	defined ||| defined	count=2
namespace	callback [namespace] ||| [namespace]	count=1
arg_pair	maxlength ||| int $maxlength	count=1
arg_pair	the given password ||| resource $dictionary string $password	count=1
function_name	resets [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	variable in a ||| mixed $expression bool $return	count=1
function_name	then reading [function_name] ||| [function_name] entries	count=1
arg_pair	a link annotation to ||| resource $pdfdoc float $lowerleftx	count=1
function_name	should specify a callback ||| preg replace callback	count=1
arg_pair	within the ||| int $page	count=1
function_name	[function_name_1] the current ||| [function_name_2] [function_name_1]	count=4
function_name	json encoded ||| json decode	count=2
namespace	model file ready for ||| svmmodel	count=1
function_name	namespace ||| lookup namespace	count=1
function_name	socket_write() [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	timeout is reached ||| timeout	count=1
return	entering or ||| void	count=1
return	continuing the event ||| void	count=1
function_name	writes ||| write	count=10
arg_pair	embed ||| bool $embed	count=1
function_name	input buffer without waiting ||| buffer	count=1
function_name	specified context ||| stream context	count=1
function_name	fields ||| field	count=1
return	as an ||| array	count=1
arg_pair	execute ||| callable $execute	count=1
namespace	sets the ||| function	count=2
function_name	fsockopen() ||| pfsockopen	count=1
namespace	function determines whether run-together ||| function	count=1
function_name	copies data from ||| pgsql copy from	count=3
return	color ||| bool	count=1
function_name	in input vector ||| input	count=1
function_name	gets end [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	a phar archive ||| phar	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cipher [function_name_2]	count=2
function_name	the raw characters ||| raw	count=1
arg_pair	an entry with ||| int $key	count=1
return	a base character ||| bool	count=1
arg_pair	and returns ||| resource $connection	count=1
function_name	returns ||| mysqli stmt	count=1
arg_pair	specified by fd ||| mixed $fd int $pri	count=1
function_name	additional error information ||| yaz addinfo	count=1
arg_pair	mailbox see ||| resource $imap_stream	count=1
function_name	id3 ||| id3 set	count=1
function_name	used to traverse over ||| snmp2 real walk	count=1
namespace	current boost value ||| solrinputdocument	count=1
function_name	data from ||| mailparse	count=1
function_name	[function_name] of ||| bits per [function_name]	count=1
function_name	of a facet ||| facet	count=1
function_name	verifies that the ||| openssl verify	count=1
function_name	namespace is ||| namespace	count=1
arg_pair	memcached::replace() except ||| mixed $value int $expiration	count=1
arg_pair	new mailbox ||| string $old_mbox	count=1
function_name	phrase field ||| phrase field	count=4
return	the beginning of the ||| void	count=1
function_name	translates the ||| pdf translate	count=1
arg_pair	serializes the passed ||| mixed $var_name	count=1
function_name	an index ||| index	count=1
arg_pair	namespaceuri ||| string $qualifiedname	count=1
function_name	sqlsrv_prepare() ||| sqlsrv	count=1
arg_pair	the inverse of ||| int $options	count=1
return	a string representing the ||| string	count=1
return	set ||| string	count=1
function_name	[function_name_1] steepness ||| [function_name_2] [function_name_1]	count=6
namespace	chdb database ||| chdb	count=1
function_name	of the specified events ||| ibase wait event	count=1
arg_pair	for the requested option ||| resource $ftp_stream int $option	count=1
function_name	fetches a ||| ibase fetch object	count=1
function_name	pixel ||| unique	count=1
function_name	frequency at which ||| mlt min doc frequency	count=1
function_name	block [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function	[function_name_1] oldname to ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	to other action ||| string $action	count=1
function_name	own extended dom class ||| node class	count=1
namespace	current entry is a ||| rarentry	count=1
namespace	inserted into the array ||| function	count=1
arg_pair	script ||| boolean $force	count=1
function_name	rows affected by ||| fbsql affected rows	count=2
function_name	iterator ||| iterator	count=7
arg_pair	with type ||| resource $root_device string $type	count=1
function_name	each virtual server ||| server by path	count=1
return	the previously ||| int	count=1
function_name	header string signature ||| get request header	count=1
function_name	epochs determines the minimum ||| cascade min cand	count=1
function_name	specified field is ||| mysql field	count=1
arg_pair	objects starting from object_id ||| string $object_id	count=2
function_name	image ||| image file	count=1
function_name	record into ||| put record	count=2
return	specified ||| mixed	count=4
function_name	the database identified by ||| pgsql lobunlink	count=1
function_name	goes until ||| strrchr	count=1
function_name	the upper bound term ||| upper bound	count=2
namespace	to the ||| function	count=4
function_name	dio_read() reads ||| dio read	count=1
function_name	[function_name_1] timezone used ||| [function_name_1] [function_name_2]	count=2
arg_pair	a exists content ||| string $key	count=1
function_name	expand component ||| set expand	count=1
function_name	main filter query determines ||| expand filter query	count=1
arg_pair	of delete operations ||| array $write_options	count=1
function_name	set a function to ||| set	count=1
function_name	socket_sendto() sends ||| sendto	count=1
return	user name and ||| resource	count=1
arg_pair	sorts [arg_pair] by ||| [arg_pair]	count=1
arg_pair	hook system if a ||| yaf_response_abstract $response	count=1
function_name	maximum supported key size ||| key size	count=1
function_name	writes data from the ||| import	count=1
function_name	the query [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	allocation block that contains ||| block code	count=1
function	traverse over [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	current directoryiterator ||| directoryiterator	count=1
function_name	[function_name_1] all ||| [function_name_1] [function_name_2]	count=1
function	column [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	a ||| string $pngname	count=1
function_name	total width ||| width	count=1
function_name	information stored with ||| set	count=1
function_name	an unified ||| xdiff string	count=1
arg_pair	a target [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	[arg_pair_1] sequence ||| [arg_pair_2] [arg_pair_1]	count=5
namespace	the current ||| splobjectstorage	count=1
function_name	the given interface ||| interface	count=1
function_name	data for the next ||| next	count=1
return	color to the ||| bool	count=1
namespace	this method ||| quickhashstringinthash	count=1
function	training data [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	drawing direction this function ||| function	count=1
function_name	prepares the timer ||| timer	count=1
arg_pair	size ||| string $field_override	count=1
function_name	methods ||| methods	count=4
arg_pair	given ||| resource $fdf_document	count=1
function_name	types of ||| types	count=1
return	[return] result_id ||| [return]	count=3
function_name	[function_name_1] supported by ||| get [function_name_2] [function_name_1]	count=3
arg_pair	fill ||| mixed $target mixed $fill	count=2
function_name	further call to ||| call	count=1
function_name	unicode ||| unicode	count=1
function_name	is delivered whose ||| pcntl	count=1
arg_pair	it returns false ||| string $lib_dir	count=1
function_name	sets ||| set geo	count=1
function_name	the learning rate is ||| get learning rate	count=1
function_name	image ||| function image	count=2
function_name	query [function_name_1] [function_name_2] ||| query [function_name_1] [function_name_2]	count=4
function_name	whether the opened ||| mcrypt enc	count=1
arg_pair	support and returns a ||| string $encoding string $separator	count=1
function_name	[function_name_1] regex ||| [function_name_2] [function_name_1]	count=1
function_name	solrquery::facet_sort_index or solrquery::facet_sort_count) ||| facet sort	count=1
function_name	add ||| add vars	count=2
function_name	the file named ||| openssl pkey export to file	count=1
arg_pair	path to the ||| string $path bool $recursive	count=1
function_name	establish service ||| service	count=1
namespace	method ||| splfileinfo	count=1
function_name	exception ||| get	count=1
arg_pair	using the principal and ||| string $principal string $password	count=1
function_name	[function_name_1] title visible ||| [function_name_2] [function_name_1]	count=3
function_name	icu ||| intl	count=1
function_name	gets the file name ||| get file name	count=1
function_name	the given password to ||| init with password	count=1
function_name	stream or context ||| stream context get	count=1
arg_pair	a new mailbox ||| string $mailbox	count=1
arg_pair	queries the resulting ||| string $keyword	count=1
return	to each pixel ||| bool	count=1
function_name	shutdown ||| shutdown	count=3
function_name	size offset ||| size offset	count=1
function	statistics about [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	get the number ||| fann get num	count=1
namespace	soapheader ||| soapheader	count=1
function_name	whole ||| ping	count=1
function_name	[function_name_1] method ||| [function_name_1] [function_name_2]	count=5
arg_pair	string str with a ||| string $str string $patch	count=1
arg_pair	array into an ||| array $pixels	count=1
function_name	right image ||| image	count=1
function_name	maximum supported keysize ||| module get algo key size	count=1
namespace	special operators by ||| sphinxclient	count=1
arg_pair	by fd ||| int $pri	count=1
arg_pair	for a type ||| resource $pdfdoc	count=1
function_name	signal is delivered whose ||| pcntl	count=1
function_name	the previous tuple for ||| dbplus prev	count=1
namespace	string to ||| recursivetreeiterator	count=1
function_name	structure of ||| bodystruct	count=1
function_name	specify a [function_name] treated ||| add facet date [function_name]	count=1
function_name	scales the outputs ||| scale	count=1
function_name	product of values in ||| product	count=1
function	file named [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	new mutex ||| mutex	count=1
function_name	filter query ||| expand filter query	count=1
arg_pair	indexed by column position ||| int $row_number	count=1
return	name used with ||| string	count=1
function_name	minimum out ||| cascade min out	count=2
function_name	open database files ||| dba	count=1
arg_pair	assoc_array which ||| array $assoc_array int $options	count=1
function_name	of any pixel color ||| image	count=1
function_name	informs the [function_name_1] [function_name_2] of ||| [function_name_1] [function_name_2]	count=4
function	[function_name_1] style ||| [arg_pair_2] [function_name_1]	count=3
function_name	[function_name_1] record ||| [function_name_2] [function_name_1]	count=3
function_name	replacement pairs along with ||| repl	count=1
function_name	both column name and ||| both	count=1
arg_pair	given source string ||| int $flags	count=1
function_name	word ||| word	count=4
function_name	specified status callback set ||| add task status	count=1
function_name	associated ||| yp	count=1
function_name	pixel that matches ||| paint transparent	count=1
function_name	image obtained ||| imagecreatefromxpm	count=1
function_name	creates a new pdf ||| pdf open	count=1
arg_pair	data ||| callable $callback string $data	count=1
function	[function_name_1] file from ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	of ||| string $path	count=1
namespace	the formatting string ||| function	count=1
function_name	fills and draws ||| ps fill	count=1
function_name	a row ||| object	count=1
arg_pair	oldname to newname ||| string $oldname string $newname	count=1
function_name	parameter ||| pg parameter	count=1
function_name	encoding ||| encoding	count=4
arg_pair	the ||| int $data_type	count=1
arg_pair	offset ||| int $offset	count=2
function_name	makes an unified diff ||| xdiff string diff	count=1
namespace	a ||| pharfileinfo	count=2
function_name	the query [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	sets an option ||| int $option	count=1
function_name	corresponding ||| geoip id by name	count=1
arg_pair	mailbox see imap_open() for ||| resource $imap_stream string $old_mbox	count=1
function_name	returned by gettext() ||| textdomain	count=1
arg_pair	a page in the ||| int $page	count=1
function_name	[function_name_1] scene ||| [function_name_2] [function_name_1]	count=1
function	image such [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function	[function_name_1] and associated ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name] if no ||| [function_name]	count=3
namespace	deletes its ||| mongocollection	count=1
function_name	matches ||| paint transparent image	count=2
function_name	[function_name_1] learning momentum ||| [function_name_2] [function_name_1]	count=1
return	to change ||| bool	count=1
arg_pair	direction by alpha and ||| resource $p float $alpha	count=1
arg_pair	parses options passed to ||| string $options array $longopts	count=1
function_name	request has been ||| send request	count=1
function_name	query alternate q ||| query alt	count=2
namespace	of a resource ||| function	count=1
function_name	matches color ||| paint transparent image	count=1
arg_pair	an snmp ||| string $host string $community	count=1
function_name	to request a dictionary ||| request dict	count=1
function_name	last image ||| last	count=1
function_name	resource ||| pg	count=1
arg_pair	mailbox ||| string $quota_root	count=1
namespace	descriptor of lob ||| oci-lob	count=1
function_name	the ||| proxy get	count=1
function_name	scales ||| pdf scale	count=1
return	a string of pseudo-random ||| string	count=1
arg_pair	input for ||| string $input	count=1
function_name	[function_name_1] the border ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] data ||| [function_name_2] [function_name_1]	count=4
namespace	specified in the unicode ||| intlchar	count=1
namespace	last executed memcached method ||| memcached	count=1
function_name	the given stream ||| stream	count=1
arg_pair	a b where ||| gmp $b	count=1
function_name	than the [function_name] write performed ||| [function_name] gtid	count=1
function_name	version number strings ||| version	count=1
function_name	phrase ||| phrase	count=8
function_name	parses an ||| parse	count=1
function_name	activation steepness ||| fann get activation steepness	count=1
function_name	iis is associated with ||| iis	count=1
function_name	calculates the square root ||| sqrt	count=1
function_name	facet fields ||| facet	count=2
namespace	remaining idle on the ||| mongocursor	count=1
return	that cannot be represented ||| void	count=1
function	[function_name_1] file ||| [function_name_1] [arg_pair_2]	count=1
function_name	adds a ||| add	count=8
function_name	the uid for ||| uid	count=1
arg_pair	file from [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	parse the ||| parse	count=1
function_name	specified hash ||| hash	count=1
namespace	the imagick object ||| imagick	count=1
return	a ||| array	count=1
function_name	[function_name_1] get the ||| [function_name_2] [function_name_1]	count=1
namespace	configuration setting of ||| function	count=1
function_name	[function_name_1] printable ||| [function_name_1] [function_name_2]	count=6
function_name	vertically ||| imagecharup	count=1
namespace	string ||| gmagick	count=1
function_name	by ||| by	count=1
function_name	[function_name_1] attempt ||| [function_name_2] [function_name_1]	count=2
function_name	the user ||| state	count=1
function_name	memory allocated ||| udm free	count=1
function_name	current active sub iterator ||| get inner iterator	count=1
function_name	the next tuple ||| dbplus next	count=1
function_name	of time cursors ||| immortal	count=1
function_name	bias ||| bias	count=1
arg_pair	str in ||| array $convmap	count=1
function_name	with existing information stored ||| metadata	count=1
function_name	sets whether or ||| set	count=1
function_name	action name ||| action	count=1
function_name	the default timezone ||| default timezone	count=1
function_name	step-size is a ||| set rprop delta	count=1
function_name	main filter query ||| expand filter query	count=1
function_name	complete result ||| start	count=1
function_name	[function_name_1] size ||| [function_name_2] [function_name_1]	count=14
function	[function_name_1] by ||| [function_name_1] [arg_pair_2]	count=6
function_name	sets the candidate limit ||| fann set cascade candidate limit	count=1
function_name	file extension ||| extension	count=2
function_name	that matches color ||| paint opaque image	count=1
return	retrieves the ||| float	count=1
function_name	imap ||| imap	count=2
arg_pair	the input string ||| string $input int $pad_length	count=1
namespace	the referenced [namespace] to finish ||| [namespace]	count=1
function_name	cannot ||| metadata	count=1
function_name	runs ||| run	count=1
function_name	descriptor for it ||| dio	count=1
function_name	matches color with the ||| paint transparent image	count=1
arg_pair	size of ||| int $width	count=1
function_name	external [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	the same body and ||| to	count=1
function_name	shared secret ||| radius server secret	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] algorithm [function_name_1]	count=8
function_name	the [function_name] ||| get [function_name]	count=9
function_name	pixel that matches color ||| paint transparent image	count=1
return	retrieves the current ||| float	count=1
namespace	gets ||| recursivetreeiterator	count=1
arg_pair	a variable can be ||| mixed $var bool $syntax_only	count=1
function_name	to execute ||| pg execute	count=1
function_name	socket resource created ||| socket	count=1
arg_pair	for a truetype ||| string $fontfile	count=1
function_name	sunset ||| date sunset	count=2
function	subtraction of [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	idle callback timeout value ||| idle timeout	count=1
function_name	user-defined as opposed to ||| user defined	count=1
function_name	of the route which ||| current	count=1
function_name	the blob ||| blob	count=1
arg_pair	of string str in ||| string $str array $convmap	count=1
arg_pair	username and password that ||| string $username string $password	count=1
arg_pair	haystack for needle ||| mixed $needle array $haystack	count=1
function_name	consisting of ||| preg grep	count=1
return	tasks previously ||| bool	count=1
arg_pair	variable ||| mixed $var bool $syntax_only	count=1
function_name	query on ||| query	count=1
function_name	image virtual ||| image virtual	count=2
function_name	the oid of ||| oid	count=1
arg_pair	array1 with values ||| array $array1	count=1
function_name	parameter if ||| parameter	count=2
function_name	returned by the last ||| errno	count=1
return	left [return] 0 ||| [return]	count=2
return	and terminate the path ||| bool	count=1
function_name	data for the previous ||| prev	count=1
namespace	dom representation ||| domdocument	count=2
function_name	unique identifier ||| zend	count=1
namespace	the current node as ||| xmlreader	count=1
function_name	order to ||| order	count=1
function	[function_name_1] options that ||| [arg_pair_2] [function_name_1]	count=5
function_name	returns last ||| get last	count=2
namespace	by php internally ||| mongoid	count=1
arg_pair	the given variable_key ||| int $variable_key	count=1
function_name	corresponding to [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	and host ||| bool	count=1
arg_pair	the oid of ||| string $oid	count=1
function_name	[function_name_1] currently defined ||| [function_name_2] [function_name_1]	count=8
return	to modify the ||| bool	count=1
function_name	a dictionary exists or ||| dict exists	count=1
function_name	bigram phrase fields ||| bigram phrase fields	count=3
return	resources to the ||| bool	count=1
function	image and [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	flags [arg_pair_2] ||| function int uopz [function_name_1] [arg_pair_2]	count=2
function_name	one [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	receiving ||| errno	count=1
function_name	parsers and sets ||| create from	count=1
namespace	whether a [namespace] ||| [namespace]	count=3
function_name	calculates the base-10 logarithm ||| log10	count=1
arg_pair	data between one file ||| callable $callback string $data	count=1
function_name	descriptor for ||| dio	count=1
function_name	gets a [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	quickhashstringinthash ||| quickhashstringinthash	count=1
function_name	wait for a signal ||| wait	count=1
function_name	record into [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	retrieves the ||| sqlsrv	count=1
function_name	position for path painting ||| pos	count=1
function_name	[function_name_1] parameter at ||| [function_name_2] [function_name_1]	count=2
namespace	nonzero ||| harupage	count=1
function_name	replica set ||| get hosts	count=1
function_name	subset of the ||| fann subset	count=1
arg_pair	slant a given ||| resource $font_index float $slant	count=1
arg_pair	associate data ||| object $object mixed $data	count=1
function_name	get elapsed ||| last elapsed	count=1
function_name	encoded string and converts ||| decode	count=1
namespace	of an ||| function	count=2
arg_pair	that the ||| mixed $class	count=1
arg_pair	number of ||| int $width	count=1
function_name	[function_name_1] spacing ||| [function_name_1] [function_name_2]	count=15
function_name	file ||| to file	count=3
arg_pair	of ||| resource $result int $type	count=1
arg_pair	the ||| float $upperrighty int $page	count=1
return	idle on the server ||| mongocursor	count=1
arg_pair	hash implements the ||| string $hash integer $algo	count=1
namespace	to the hash and ||| quickhashintstringhash	count=1
return	black points to the ||| bool	count=1
function_name	[function_name_1] phrase field ||| [function_name_2] [function_name_1]	count=2
function_name	of current ||| buffer	count=1
arg_pair	subject for ||| mixed $subject	count=1
function_name	raw sqlt ||| raw	count=1
function_name	the soap requests ||| soap	count=1
function_name	valid [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	set the compression ||| compression	count=1
function_name	an url string argument ||| with url	count=1
function_name	text interword [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	input buffer ||| eventbufferevent	count=1
function_name	fetches the next row ||| oci fetch	count=1
arg_pair	connects to a ||| string $port	count=1
function_name	formerly loaded image ||| ps place image	count=2
return	given ||| object	count=1
function_name	the numeric ||| get numeric	count=1
function_name	the mysqli [function_name] ||| [function_name]	count=3
function	existing function [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name] the mysqli ||| [function_name] info	count=1
function_name	tokens to ||| tokens	count=2
function_name	return ||| set terms return	count=1
function_name	used ||| maxdb	count=1
function_name	and is an ||| image	count=3
function_name	dns ||| dns	count=1
return	disable an already defined ||| bool	count=1
function	diff [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	a new content object ||| hwapi content new	count=1
function_name	class which ||| class	count=1
arg_pair	pseudo-object from ||| int $fetch_flag	count=1
function_name	route which ||| current	count=1
function_name	sets the thread ||| setthreadtitle	count=1
function	[function_name_1] external ||| [function_name_1] phar [arg_pair_2]	count=1
function_name	pixel ||| unique image	count=1
function_name	move all data ||| buffer	count=1
arg_pair	a php function ||| string $name mixed $step_callback	count=1
function_name	resolve ||| resolve	count=1
function_name	dictionary exists ||| dict exists	count=2
function_name	avoid specific ||| avoid	count=1
namespace	font ||| function	count=1
function_name	the image ||| image	count=13
function_name	specified events ||| ibase wait event	count=1
function_name	used ||| set	count=2
arg_pair	seconds and nanoseconds which ||| int $seconds int $nanoseconds	count=1
namespace	retrieve archive ||| phar	count=1
function_name	used with the ||| database	count=1
function_name	[function_name_1] stopped ||| [function_name_2] [function_name_1]	count=2
arg_pair	sql statement which can ||| resource $connection string $statement	count=1
namespace	client ||| mongocursorinterface	count=1
function_name	by php ||| state	count=1
function_name	built-in type in php ||| builtin	count=1
function_name	first [function_name] ||| first [function_name]	count=3
arg_pair	registers a php function ||| string $name mixed $callback	count=1
function_name	register local ||| register local	count=1
namespace	[namespace] cannot ||| [namespace]	count=1
function_name	all ||| add buffer	count=2
arg_pair	of snmp [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	digest [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	for the specified socket ||| socket get	count=1
arg_pair	from the associative or ||| string $arg_separator int $enc_type	count=1
function_name	slop ps2 ||| slop	count=1
function_name	gettext() ||| bind textdomain	count=1
function_name	query syntax ||| escape query chars	count=1
function_name	a ||| imagepsslantfont	count=1
function_name	returns the term to ||| get terms lower bound	count=1
namespace	of the document ||| harudoc	count=1
function_name	single column of ||| array column	count=1
function_name	by mysqlnd_ms_xa_begin() ||| xa	count=1
function_name	escapes ||| ldap escape	count=2
function_name	request token secret ||| get request token	count=2
function_name	of tasks previously ||| run	count=1
function_name	the character ||| character	count=1
namespace	soapclient ||| soapclient	count=1
function_name	containing the diff ||| diff	count=1
function_name	stream or datagram ||| stream	count=1
function_name	function replaces the child ||| replace child	count=1
arg_pair	the result set ||| resource $result int $field_offset	count=1
return	cannot be ||| void	count=1
function_name	database ||| dbase	count=1
function_name	turns on debug output ||| debug	count=1
namespace	of data from the ||| function	count=5
function_name	in the train ||| train	count=1
function_name	a pdf [function_name_2] ||| [function_name_1] place pdi [function_name_2]	count=4
function	[function_name_1] whitespace or ||| [function_name_1] [arg_pair_2]	count=1
function_name	response headers ||| response headers	count=2
arg_pair	length - 1 bytes ||| int $length	count=1
function_name	counts [function_name] ||| set [function_name] min count	count=3
function_name	deletes ||| imap deletemailbox	count=2
function_name	set options on ||| set	count=1
return	whether the end ||| bool	count=1
function_name	affected by ||| ifx affected	count=1
function_name	file named ||| export to file	count=2
arg_pair	a rpc call ||| string $uri string $method	count=1
arg_pair	functionally equivalent to memcached::getmulti() ||| string $cas_tokens	count=1
namespace	in the image ||| imagick	count=1
function_name	kadm5 library ||| kadm5 init with	count=1
arg_pair	an entry from the ||| mixed $key	count=1
function	contents of [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	of the query ||| query	count=1
return	get information about ||| ktaglib_id3v1_tag	count=1
return	points to the full ||| bool	count=1
function_name	with the phar::startbuffering() ||| buffering	count=1
function_name	that ||| metadata	count=1
function_name	validity as an rpm ||| rpm is valid	count=1
function_name	eventbufferevent::connecthost() or an ||| string	count=1
function_name	finds whether to ||| is select	count=1
arg_pair	a text rectangle ||| string $text resource $font	count=1
function_name	[function_name_1] internationalization ||| [function_name_2] get [function_name_1]	count=1
function_name	to include [function_name_2] ||| [function_name_2] [function_name_1]	count=9
namespace	to ||| eventbuffer	count=1
function_name	returns a id3v2 ||| get id3v2	count=1
function_name	url ||| connect with url	count=2
function_name	tells [function_name] that the ||| [function_name] on new	count=1
arg_pair	one row of ||| resource $result_identifier int $fetch_flag	count=1
namespace	database data ||| mongodb	count=1
arg_pair	given message sequence number ||| resource $imap_stream	count=1
function_name	complete ||| start	count=1
arg_pair	the quality of ||| int $service_level_option mixed $option_value	count=1
function_name	turn this ||| flush	count=1
function_name	the type of the ||| int	count=1
function_name	the current row from ||| fetch row	count=1
function_name	binds the php ||| bind	count=1
function_name	anchor ||| geo anchor	count=2
namespace	the wsdl for ||| soapclient	count=1
namespace	wsdl for the web ||| soapclient	count=1
arg_pair	a pseudo-object from a ||| int $fetch_flag	count=1
namespace	[namespace] character ||| [namespace]	count=1
namespace	used ||| mongoid	count=1
function_name	of the [function_name] ||| [function_name] get	count=1
arg_pair	creates a new date ||| int $usec	count=1
namespace	only used by php ||| mongoid	count=1
function_name	virtual image ||| image	count=1
function_name	the user ||| change user	count=1
return	between [return] white ||| [return]	count=1
return	to point to ||| bool	count=2
arg_pair	so that the item ||| mixed $value	count=1
function_name	a mysqlnd ||| mysqlnd	count=1
function_name	minimum word [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	blob length and ||| blob	count=1
function_name	the comment ||| comment	count=3
function_name	[function_name_1] callback function ||| [function_name_1] action [function_name_2]	count=1
return	path using nonzero ||| bool	count=1
arg_pair	as the ||| int $error_type	count=1
function_name	the previous [function_name] could ||| [function_name]	count=1
function_name	rewind ||| prev	count=1
function_name	as a ||| ibase fetch	count=1
function_name	minimum number ||| fann get cascade min cand	count=1
function_name	returns the thread ||| thread	count=1
namespace	the set of ||| event	count=1
function_name	[function_name_1] module ||| [function_name_2] [function_name_1]	count=1
function_name	compresses the given ||| gzcompress	count=1
function_name	the nsapi [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	fbsql [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	activation steepness ||| activation steepness	count=3
function_name	of ||| db2 field	count=1
function	[function_name_1] sql statement ||| [arg_pair_2] [function_name_1]	count=5
function_name	album string ||| album	count=1
function_name	minimum message severity level ||| sybase min message severity	count=1
function_name	stub ||| set default stub	count=1
arg_pair	width [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	an ||| array	count=8
function_name	ends current path object ||| end path	count=1
function_name	is the default ||| is default	count=1
arg_pair	during ||| resource $ann float $rprop_increase_factor	count=1
arg_pair	to the fetched ||| resource $result int $result_type	count=1
rest	request to [function_2] ||| [function_2] [return_1]	count=4
function_name	using a non-empty tags ||| enchant broker	count=1
function_name	file specified by ||| file	count=2
return	the search and ||| bool	count=2
function	[function_name_1] on a ||| [arg_pair_2] [function_name_1]	count=1
function_name	this function assigns a ||| ibase	count=1
function_name	[function_name_1] page ||| [function_name_1] place pdi [function_name_2]	count=2
function_name	adds [function_name_2] ||| [function_name_1] rewrite [function_name_2]	count=2
arg_pair	a list of ||| string $host	count=1
function_name	elements with ||| elements	count=2
function_name	[function_name_1] group cache ||| [function_name_1] [function_name_2]	count=1
function_name	element set [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	need to ||| mongoid	count=1
function_name	[function_name_1] character ||| [function_name_1] [function_name_2] data handler resource	count=1
arg_pair	of the result resource ||| resource $result	count=1
function_name	opened mode is a ||| mcrypt enc	count=1
function_name	[function_name_1] an iterator ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] [function_name_2] suffixes from the dns ||| eventdnsbase void [function_name_1] [function_name_2]	count=2
arg_pair	specified in object_id using ||| mixed $object_id bool $preserve_keys	count=1
namespace	elements ||| splfixedarray	count=1
function_name	many ||| value	count=1
function_name	new [function_name_2] ||| [function_name_2] device [function_name_1]	count=1
namespace	records in ||| tokyotyrant	count=1
function_name	default ||| default	count=7
function_name	method provides a stride ||| stride for width	count=1
arg_pair	the desired ||| float $blur	count=1
arg_pair	of any pixel that ||| int $y int $channel	count=1
arg_pair	the ||| resource $ann float $rprop_delta_max	count=1
function_name	epochs determines the minimum ||| get cascade min cand	count=1
function_name	set query ||| set query	count=2
function_name	[function_name_1] image ||| [function_name_1] [function_name_2]	count=11
arg_pair	pair ||| int $fg	count=1
function_name	the [function_name] os of ||| get [function_name]	count=1
function_name	all data from ||| buffer	count=1
namespace	an ||| event	count=1
function_name	stored in ||| next entry	count=1
arg_pair	is initialized f ||| string $opened_path	count=1
function_name	[function_name_1] allowable depth ||| [function_name_2] [function_name_1]	count=2
function_name	creates a new ||| create document	count=1
arg_pair	[arg_pair_1] write events ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	the regular expression given ||| preg	count=1
function_name	new record into the ||| record	count=1
function_name	as eventbuffer::addbuffer() except that ||| prepend	count=1
arg_pair	a string containing number ||| string $number	count=1
function_name	[function_name_1] end ||| [function_name_1] [function_name_2]	count=1
function_name	current cipher ||| get cipher	count=1
arg_pair	the key with ||| string $key	count=1
function_name	get the query ||| get query	count=3
function_name	retrieves the specified action ||| gupnp service action	count=1
return	[return] position ||| [return]	count=2
return	with gearmanclient::addtask() gearmanclient::addtaskhigh() ||| bool	count=1
function_name	[function_name_1] printable string ||| [function_name_2] [function_name_1]	count=6
function_name	saves the ||| ps save	count=1
function_name	extended services request using ||| itemorder	count=1
arg_pair	mailbox to new mailbox ||| string $old_mbox	count=1
function_name	row in a result ||| fetch assoc	count=1
function_name	simulates an oil painting ||| oil paint image	count=1
arg_pair	to html ||| string $encoding	count=1
function_name	name of the table ||| table	count=1
arg_pair	to a page ||| int $page string $dest	count=1
function_name	the specified field ||| field	count=2
arg_pair	get the ||| resource $broker	count=1
arg_pair	the message ||| mixed $message bool $serialize	count=1
function_name	after a fork in ||| loop fork	count=1
function_name	image chromaticity green primary ||| image green primary	count=1
function_name	current controller ||| get controller	count=1
arg_pair	of the item by ||| string $key	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] expand [function_name_2]	count=10
arg_pair	the levels of ||| float $whitepoint	count=1
function_name	access token secret and ||| access token	count=1
namespace	of information ||| function	count=1
function_name	iterator to the ||| iterator	count=1
function_name	include the lower bound ||| include lower bound	count=1
function_name	or context ||| context get	count=1
function_name	slob ||| free slob	count=1
return	information stored with a ||| void	count=1
arg_pair	function is identical to ||| bool $double_encode	count=1
arg_pair	a ||| string $number	count=1
function_name	same body and ||| to	count=1
function_name	and [function_name] for the ||| [function_name]	count=1
function_name	in the data store ||| apcu add	count=1
function_name	the base-10 logarithm ||| log10	count=1
function_name	[function_name_1] nonce ||| [function_name_1] [function_name_2]	count=1
function_name	access [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	sets a value ||| set	count=1
namespace	new quickhashintset ||| quickhashintset	count=1
function_name	persistent ||| persistent	count=3
function_name	the file extension ||| get extension	count=2
arg_pair	index of the color ||| int $green	count=1
namespace	and deletes its ||| mongocollection	count=1
arg_pair	the behavior of this ||| int $count	count=1
function_name	stored value with ||| apc	count=1
namespace	number ||| gmagick	count=1
function_name	empty directory is created ||| add empty dir	count=1
arg_pair	on the how ||| int $how	count=1
arg_pair	on a socket stream ||| mixed $socket	count=1
function_name	closes a blob that ||| ibase blob close	count=1
function_name	effective ||| current	count=1
return	if you requested a ||| bool	count=1
function_name	queries detailed [function_name] a ||| [function_name] font	count=1
function_name	cannot ||| set	count=1
function_name	[function_name_1] the mode ||| [function_name_1] lob [function_name_2]	count=1
arg_pair	library using the principal ||| string $principal string $password	count=1
arg_pair	value of an ||| string $timeout	count=1
return	error message [return] ||| [return]	count=1
arg_pair	whenever a change ||| resource $proxy	count=1
namespace	whether the specified ||| intlchar	count=1
return	and deletes ||| array	count=1
arg_pair	of the database ||| int $timestamp	count=1
function	updates [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] postgresql database ||| [function_name_2] [function_name_1]	count=4
arg_pair	to the existing ||| float $max	count=1
arg_pair	the ||| resource $imap_stream	count=2
function_name	a dictionary ||| dict	count=2
arg_pair	the data and returns ||| string $data	count=1
function_name	execute ||| execute	count=4
function_name	[function_name_1] parameters ||| [function_name_2] [function_name_1]	count=7
return	built-in functions ||| bool	count=1
function	[function_name_1] a global ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	row of data ||| resource $result_identifier int $fetch_flag	count=1
function_name	arrays of [function_name] ||| [function_name]	count=1
return	of class domdocumentfragment ||| domdocumentfragment	count=1
arg_pair	by hostname ||| int $port	count=1
function_name	returns ||| ob get	count=1
function_name	pixel that matches ||| opaque paint image	count=1
function_name	row in a result ||| db2 fetch	count=2
function_name	[function_name_1] bound in ||| [function_name_2] [function_name_1]	count=4
arg_pair	given host and ||| string $host	count=1
function	current line [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	the callback function to ||| array $array callable $callback	count=1
namespace	[namespace] prints ||| [namespace]	count=1
function	[function_name_1] options that ||| [function_name_1] [arg_pair_2]	count=5
function_name	not ||| construct	count=1
arg_pair	assoc_array which has ||| int $options	count=1
arg_pair	of ||| string $str	count=1
return	file ||| string	count=3
arg_pair	access to ||| resource $hobj	count=1
function_name	[function_name] that ||| [function_name]	count=1
return	to move the cursor ||| bool	count=2
function	the [function_name_1] [arg_pair_2] expression ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	a rpc call but ||| string $uri	count=1
function_name	the sarprop [function_name_2] ||| [function_name_2] [function_name_1]	count=11
arg_pair	to ||| string $host	count=1
function_name	runs a ||| do	count=3
arg_pair	part or the ||| resource $imap_stream mixed $file	count=1
function_name	of the given dictionary ||| enchant dict	count=1
namespace	model was trained on ||| svmmodel	count=1
arg_pair	the name of the ||| resource $result int $field_number	count=1
function_name	return the name ||| name	count=1
namespace	used in ||| function	count=3
function_name	[function_name_1] the process ||| [function_name_1] [function_name_2]	count=1
function_name	returns an array ||| memcache get	count=1
function_name	row into array ||| fetch into	count=2
function_name	calculates the hyperbolic cosine ||| cosh	count=1
arg_pair	multiset ||| string $set_element	count=1
namespace	the phar archives manifest ||| pharfileinfo	count=1
return	from ||| bool	count=2
function_name	with bind_textdomain_codeset() you can ||| codeset	count=1
function_name	returns the mime content ||| mime content	count=1
return	the specified code ||| bool	count=1
function_name	specific feature ||| feature	count=1
arg_pair	y ||| float $radius	count=1
arg_pair	filename from the image ||| string $filename	count=1
function_name	decoded quoted printable string ||| quoted printable	count=1
arg_pair	the result-set ||| int $type	count=1
arg_pair	value of an ||| string $key string $value	count=2
function_name	a digest hash value ||| openssl digest	count=1
return	maxdb_options() ||| resource	count=1
function_name	sybase_fetch_row() that uses column ||| sybase fetch	count=1
return	in the ||| int	count=1
function_name	merges three ||| merge3	count=1
arg_pair	real0 and ||| array $real0	count=1
return	data from ||| bool	count=1
function_name	a field ||| ingres field	count=2
function_name	result and then reading [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] entries resource $link_identifier resource	count=1
return	an array of the ||| array	count=1
namespace	gets ||| function	count=1
arg_pair	principal and the given ||| string $password	count=1
function	[function_name_1] annotation to ||| [function_name_1] [arg_pair_2]	count=4
function_name	highlighting for ||| highlight highlight	count=1
arg_pair	an enumerated or integer ||| int $property	count=1
function_name	id3v2 frame ||| frame	count=2
function_name	[function_name_1] types of ||| [function_name_1] [function_name_2]	count=1
function_name	sets bigram ||| set bigram	count=4
arg_pair	php variable ||| mixed $variable int $type	count=1
function	[function_name_1] by fd ||| [function_name_1] [arg_pair_2]	count=1
function_name	value of ||| offset get	count=1
function_name	frontbase result associated ||| fbsql data	count=1
function_name	key ||| get key	count=1
function_name	writes to the ||| write	count=1
arg_pair	after ||| resource $fdf_document	count=1
namespace	buffer events file descriptor ||| eventbufferevent	count=1
function_name	process title visible in ||| process title	count=1
namespace	on a syncreaderwriter ||| syncreaderwriter	count=2
arg_pair	is identical to htmlspecialchars() ||| string $encoding bool $double_encode	count=1
namespace	this function allows you ||| function	count=1
function_name	thumbnail by first scaling ||| thumbnail	count=1
function_name	extended json ||| mongo db\bson\from json	count=2
arg_pair	an ||| int $bytes_max	count=1
function_name	a textflow and ||| textflow	count=1
arg_pair	afterward by ||| string $baseclass	count=1
function_name	[function_name] indicated ||| [function_name]	count=1
namespace	fetches a row as ||| function	count=1
function	executes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	fetches a row ||| fetch	count=1
function_name	timeout in seconds ||| timeout	count=1
arg_pair	specified database ||| resource $link_identifier	count=1
function_name	type corresponding to ||| geoip id	count=1
return	sets retval [return] ||| [return]	count=2
function	canonicalize nodes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	scm database ||| win32	count=1
function_name	an html ||| html	count=1
function_name	gets a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	proxy object ||| connection proxy	count=2
function_name	the request ||| request	count=2
function_name	[function_name_1] status information ||| [function_name_2] [function_name_1]	count=3
function_name	zone ||| zone by	count=1
arg_pair	a user function ||| string $callback	count=1
function_name	returns last [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the target ||| target	count=1
function_name	block algorithms ||| block	count=1
function_name	[function_name_1] highlight ||| [function_name_2] [function_name_1]	count=4
function_name	agent specified by the ||| snmpwalk	count=1
function_name	patches ||| bpatch	count=1
arg_pair	an array ||| array $array	count=1
function_name	it shouldnt ||| set	count=1
function_name	the text [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	level to the ||| int $level	count=1
function_name	column names ||| cubrid fetch	count=1
function_name	[function_name_1] data from ||| [function_name_2] [function_name_1]	count=8
function	training data [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	the wrapper [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	field to ||| alternate field	count=1
arg_pair	display a result pdf ||| resource $fdf_document	count=1
function_name	deletes the given files ||| delete	count=1
function_name	bytes required to display ||| field display size	count=1
function_name	[function_name_1] runs ||| [function_name_2] [function_name_1]	count=1
arg_pair	pixels for a truetype ||| string $fontfile	count=1
function_name	stagnation [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	abstract ||| abstract	count=1
function_name	blob that ||| ibase blob	count=2
function_name	version of sybase_fetch_row() ||| sybase fetch	count=1
function_name	scales the outputs in ||| fann scale output	count=1
function_name	[function_name_1] tell ||| [function_name_1] lob2 [function_name_2]	count=1
function_name	a single column of ||| array column	count=1
function_name	convolution ||| edge	count=1
function_name	image of ||| image	count=1
arg_pair	colors in the ||| bool $gray int $channel	count=1
namespace	current ||| splobjectstorage	count=1
function_name	get the current ||| get	count=2
function_name	closes the request handle ||| close prepare	count=1
arg_pair	a statement variable ||| string $sql_param	count=1
function_name	returns client [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	variable is recieved ||| gupnp service proxy add notify	count=1
arg_pair	b ||| array $b	count=3
function_name	pdf document ||| pdf	count=1
return	get the ||| string	count=1
function_name	number for ||| number	count=1
function_name	[function_name_1] value from ||| [function_name_2] [function_name_1]	count=4
namespace	an image ||| imagick	count=1
arg_pair	of working ||| string $path int $flags	count=1
function_name	instance was recently created ||| pristine	count=1
arg_pair	instance of a ||| string $progid	count=1
namespace	[namespace] access brackets ||| [namespace]	count=1
return	pixels into [return] ||| [return]	count=1
function_name	returns the value of ||| get	count=1
arg_pair	the ||| int $arg3 int $arg4	count=1
arg_pair	from the given ||| resource $conn_identifier string $oid	count=2
function_name	inserts a [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	the end ||| add buffer	count=1
arg_pair	specified map ||| string $map	count=1
arg_pair	a string ||| string $data	count=1
function_name	in a pkcs#12 file ||| openssl pkcs12 export	count=1
function	priority [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	callback given ||| callable $callback mixed $parameter	count=1
function_name	add the result ||| add vars	count=1
namespace	the ||| arrayiterator	count=1
function_name	end of current ||| add	count=1
return	delimiter [return] enclosure character ||| [return]	count=1
function_name	first image ||| first	count=1
function	[function_name_1] with type ||| [arg_pair_2] [function_name_1]	count=2
function_name	set the compression method ||| compression	count=1
function_name	affected rows by the ||| affected rows	count=1
function_name	attaches an integer attribute ||| put int	count=1
function_name	and event status callbacks ||| callbacks	count=1
function_name	context-triggered piecewise hashing and ||| ssdeep fuzzy compare	count=1
function_name	epochs determines the maximum ||| cascade max	count=1
function_name	sets the [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=1
function_name	counts the number ||| count	count=1
arg_pair	the ||| int $expire string $path	count=1
namespace	retrieves the ||| directoryiterator	count=1
arg_pair	object_id ||| string $type	count=2
function_name	the md5 ||| md5	count=1
function_name	sends the supplied exception ||| exception	count=1
return	a string into smaller ||| string	count=1
arg_pair	from domain returned by ||| string $domain	count=1
function_name	get current [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	the messages in ||| resource $imap_stream	count=1
function_name	[function_name_1] call ||| [function_name_1] [function_name_2]	count=1
function_name	creates an [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	ca both for ||| string $ca_path string $ca_info	count=1
arg_pair	row of data ||| resource $result_identifier	count=1
function	that matches [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	image in an array ||| image	count=1
function_name	aggregate ||| aggregate	count=1
function_name	an adaptive [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	returns one of ||| get result	count=2
arg_pair	result set listing the ||| string $schema	count=2
function_name	string reference of string ||| mb decode numericentity	count=1
arg_pair	memcached::get() ||| callable $cache_cb	count=1
function_name	returns [function_name_2] ||| [function_name_1] property [function_name_2]	count=1
function	[function_name_1] when the ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	of ||| int $ndocs array $callbacks	count=2
function_name	[function_name_1] more write ||| [function_name_1] bulk [function_name_2]	count=2
function_name	apaches table_get and table_set ||| apache note	count=1
namespace	connects to searchd ||| sphinxclient	count=1
function_name	returns ||| to	count=1
function_name	[function_name_1] soap header ||| [function_name_1] [function_name_2]	count=1
function_name	suitable ||| max analyzed chars	count=1
arg_pair	integer [arg_pair] ||| [arg_pair]	count=2
function_name	squares problem ||| squares	count=2
function_name	next field ||| next	count=1
arg_pair	php variable to ||| mixed $variable	count=1
function_name	fail limit ||| fail limit	count=2
return	[return] identify lightweight ||| [return]	count=3
arg_pair	a new ||| string $namespaceuri string $qualifiedname	count=1
namespace	event from the set ||| event	count=1
function_name	sybase_fetch_row() that ||| sybase fetch assoc	count=1
function_name	closes file specified ||| close	count=1
function_name	the language described/referred ||| ordering	count=1
function	[function_name_1] struct ||| [function_name_1] from callback [arg_pair_2]	count=1
function	glyph definition [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	the idle callback timeout ||| idle timeout	count=1
namespace	all assigned unicode ||| intlchar	count=1
function	[function_name_1] apcs data ||| [function_name_1] cache info [arg_pair_2]	count=1
return	to get the status ||| bool	count=1
arg_pair	buffer event ||| eventbase $base	count=1
function_name	the border color for ||| border color	count=1
return	given day specified ||| mixed	count=2
arg_pair	dn ||| resource $privkey	count=1
function_name	sets ||| oci set	count=2
namespace	new quickhashintstringhash ||| quickhashintstringhash	count=1
function_name	tables ||| list tables	count=2
arg_pair	path in access ||| int $flags	count=1
function_name	add ||| add locallink	count=2
function_name	namespace uri ||| lookup namespace uri	count=1
function_name	the specified field ||| fbsql field	count=1
function_name	default directory ||| directory	count=1
function_name	the ||| mcrypt get key size	count=1
function_name	for the training ||| fann	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] password [arg_pair_2]	count=3
function_name	character encoding ||| mb internal encoding	count=1
function_name	open [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	lists all procedures ||| odbc procedures	count=1
function_name	termination once execution ||| child terminate	count=1
arg_pair	position pointing ||| float $ury	count=1
arg_pair	address ||| int $type string $addr	count=1
function_name	a data from a ||| from	count=1
namespace	secondary currently being used ||| mongo	count=1
function_name	maximum number ||| max	count=3
arg_pair	number of ||| int $offset string $encoding	count=1
namespace	the version of the ||| function	count=1
arg_pair	is a wrapper ||| string $note_value	count=1
arg_pair	a given ||| int $property	count=1
function_name	format ||| format	count=1
function_name	[function_name] fragmenter ||| get [function_name]	count=3
return	same as ||| object	count=2
function_name	returns the genre of ||| get genre	count=1
function_name	[function_name_1] properties of ||| [function_name_2] [function_name_1]	count=1
function_name	the next tuple for ||| dbplus next	count=1
function	[function_name_1] to the ||| [function_name_1] [arg_pair_2]	count=2
function_name	frontend/backend communication to ||| trace	count=1
namespace	boost value ||| solrinputdocument	count=1
arg_pair	within a string before ||| resource $link string $source_string	count=1
arg_pair	values of array1 with ||| array $array1	count=1
function_name	pixel that matches color ||| paint opaque image	count=1
function_name	new pdf ||| pdf begin document	count=1
function_name	array iterator ||| iterator class	count=1
arg_pair	moves a ||| string $new_path	count=1
namespace	class constructor ||| reflectionclass	count=1
arg_pair	result set listing ||| string $schema string $table-name	count=2
function_name	provided string ||| ctype	count=1
function_name	password to ||| init with password	count=1
function_name	to ||| set state	count=2
arg_pair	the ||| resource $id string $schema	count=1
arg_pair	a specific cipher / ||| string $cipher	count=1
return	the thread ||| bool	count=1
function_name	fills current ||| fill	count=2
function_name	[function_name] for ||| get property [function_name]	count=2
function_name	postgresql ||| pg field	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2744
function_name	search query time ||| query time	count=2
function_name	activation function for ||| fann get activation function	count=1
namespace	used later [namespace] event_base_set() event_base_loop() ||| [namespace]	count=1
function_name	used ||| debug	count=1
arg_pair	color pair to ||| int $pair int $fg	count=1
arg_pair	returns str with ||| string $str	count=1
function	[function_name_1] hostname ||| [arg_pair_2] [function_name_1]	count=1
function_name	or odbc_exec() ||| odbc fetch row	count=1
function_name	dismax query [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	block while retaining the ||| mixed	count=1
function_name	non-empty language tag you ||| enchant broker	count=1
arg_pair	limit code points start ||| mixed $start	count=1
arg_pair	set a ||| int $dictionary_link	count=2
function_name	new content object from ||| new	count=1
function_name	[function_name] numerical type ||| [function_name]	count=1
function_name	per-process statistics ||| stats	count=1
arg_pair	is the opposite of ||| int $flags	count=1
function_name	interpolate pixel [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	set using gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
arg_pair	for ||| mysqlnd_connection $connection	count=1
function_name	exists ||| exists	count=7
function	[function_name_1] display a ||| [arg_pair_2] [function_name_1]	count=4
function_name	earliest hook ||| router startup	count=1
function_name	subscribe ||| subscribe	count=2
function_name	client and specified connection ||| client	count=1
function_name	handler function ||| handler	count=2
function_name	activation steepness ||| get activation steepness	count=1
arg_pair	thats ||| resource $link_identifier	count=1
function_name	grouping group parameter ||| set group	count=1
arg_pair	of the ||| int $width	count=1
arg_pair	specified key ||| resource $handle	count=1
function_name	opened mode ||| mcrypt enc	count=1
return	it shouldnt need ||| mongoid	count=1
function_name	the request [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] the query ||| [function_name_1] [function_name_2]	count=2
namespace	or write an image ||| imagick	count=1
function_name	row in a result ||| db2 fetch row	count=1
function_name	[function_name] fragmenter can ||| [function_name] slop	count=3
function_name	when iteration begins after ||| begin iteration	count=2
function_name	[function_name_1] size i ||| [function_name_1] [function_name_2]	count=1
function_name	root of a and ||| root	count=1
function_name	principal according ||| principal	count=1
namespace	point ||| intlchar	count=1
function_name	the terms ||| terms	count=1
function_name	syntax lint [function_name] on ||| [function_name] syntax	count=1
function_name	svn [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	this function is useful ||| function	count=2
function_name	namespace support and ||| ns	count=1
function_name	pdf block with ||| pdf	count=1
return	set of monitored events ||| bool	count=1
namespace	with the ||| function	count=2
function_name	current ||| status	count=1
function_name	mode [function_name_2] ||| [function_name_1] enc [function_name_2]	count=2
function_name	get or set ||| fbsql database	count=1
function_name	blob/clob by executing the ||| lob	count=1
arg_pair	old_data string and ||| string $old_data	count=1
arg_pair	given [arg_pair] ||| [arg_pair]	count=4
function_name	stops ||| win32 stop	count=1
function_name	internally ||| state	count=1
function_name	returns the names ||| get extension funcs	count=1
arg_pair	queries the resulting metrics ||| string $optlist	count=1
arg_pair	replaces colors ||| float $channel	count=1
return	reflectionproperty ||| reflectionproperty	count=1
function_name	algorithm ||| mcrypt enc	count=1
function_name	the query ||| query	count=2
function_name	[function_name_1] result resource ||| [function_name_2] error [function_name_1]	count=1
function_name	sets ||| ldap set option	count=2
function_name	creates a new ||| new	count=4
arg_pair	an ||| array $offset	count=1
arg_pair	of the ||| int $timestamp	count=1
arg_pair	to the ||| int $port	count=1
arg_pair	the coordinate ||| resource $p	count=1
namespace	host specified by ||| function	count=1
function_name	key size ||| get key size	count=2
function_name	the permissions ||| chmod	count=1
function	[function_name_1] oldname to ||| [arg_pair_2] [function_name_1]	count=1
function_name	process ||| current	count=1
arg_pair	and returns the ||| bool $before_needle string $encoding	count=1
function_name	returns the unicode ||| get	count=1
function_name	value ||| option	count=1
function_name	total number ||| total	count=3
return	as a ||| array	count=1
arg_pair	associative array with ||| int $slabid	count=1
function_name	returns ||| get mlt	count=5
function_name	is a constructor ||| constructor	count=1
function_name	data for the next ||| dbplus next	count=1
namespace	from a given result ||| function	count=1
function_name	time cursors ||| immortal	count=1
function_name	[function_name] the ||| [function_name]	count=3
function_name	new content object ||| content new	count=1
arg_pair	with the given key ||| int $max_acquire	count=1
namespace	document should ||| harudoc	count=1
arg_pair	from a given ||| resource $result_id	count=1
arg_pair	assoc_array ||| array $assoc_array int $options	count=1
function_name	[function_name_1] trace ||| [function_name_1] [function_name_2]	count=1
function_name	object ||| get	count=1
function_name	new connection ||| construct	count=1
function_name	activation functions ||| activation functions	count=2
function_name	write operations ||| write	count=1
function_name	removes [function_name_2] ||| [function_name_1] stats [function_name_2]	count=1
function_name	erases a specified ||| erase	count=1
namespace	information stored with ||| pharfileinfo	count=1
namespace	value for the document ||| solrinputdocument	count=1
function_name	the text interword ||| text interline	count=1
arg_pair	a new ||| string $name	count=1
arg_pair	memcached::getmulti() except that the ||| int $flags	count=1
function_name	converts all html ||| html	count=1
return	access time of the ||| int	count=1
function_name	server ||| get server by path	count=2
function_name	next tuple ||| dbplus next	count=1
function_name	training algorithmsfann_train_incremental ||| fann get	count=1
function_name	permissions ||| chmod	count=1
function_name	sunrise ||| sunrise	count=1
return	to a pseudo ||| bool	count=1
function_name	to trace the ||| maxdb	count=1
namespace	whether the iterator ||| norewinditerator	count=1
arg_pair	executing the sql statement ||| resource $conn_identifier string $sql	count=1
arg_pair	a ||| string $fk_owner	count=1
namespace	stylesheet ||| xsltprocessor	count=3
function_name	[function_name_1] parameters ||| [function_name_1] [function_name_2]	count=7
return	from a given ||| object	count=1
function_name	[function_name_1] with result ||| [function_name_2] error [function_name_1]	count=1
function	rename [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	current value of word ||| word	count=1
namespace	syncmutex ||| syncmutex	count=1
arg_pair	the given ||| resource $psdoc float $llx	count=2
namespace	object ||| function	count=1
arg_pair	specified by execute processing ||| callable $execute int $pri	count=1
namespace	syncreaderwriter object ||| syncreaderwriter	count=2
function_name	queue with ||| queue	count=1
return	string for a character ||| string	count=1
return	top left [return] 0 0 ||| [return]	count=2
function_name	default background ||| background	count=1
function_name	sets the border color ||| pdf set border color	count=1
namespace	class the part ||| reflectionclass	count=1
function_name	removes the elements designated ||| array splice	count=1
namespace	be used in subsequent ||| function	count=1
function_name	a dictionary [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	a priority ||| buffer priority set	count=1
function_name	facet fields that ||| facet	count=1
function_name	[function_name_1] content ||| [function_name_2] [function_name_1]	count=3
arg_pair	the ||| int $quality int $filters	count=1
arg_pair	of the input identified ||| array $input	count=1
namespace	database ||| mongodb	count=1
namespace	simply stops and ||| evperiodic	count=1
arg_pair	a ||| string $iptcdata	count=1
function_name	data from ||| from	count=1
function_name	returns ||| get last	count=1
arg_pair	an array into an ||| int $storage array $pixels	count=1
function_name	shared memory allocation ||| sma	count=2
function_name	reply that uses ||| send reply	count=1
return	determine whether the ||| bool	count=1
function_name	[function_name_1] zone ||| [function_name_1] [function_name_2]	count=4
return	image to the ||| bool	count=1
function_name	function returns true if ||| is	count=1
function_name	sarprop step [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	[function_name_1] query ||| [function_name_2] [function_name_1]	count=20
function_name	[function_name_1] [function_name_2] specified in the ||| [function_name_1] [function_name_2]	count=2
function_name	means of the ||| get	count=1
function_name	ldap link identifier ||| ldap	count=1
function_name	similarity image such ||| sub image	count=1
return	string for a ||| string	count=1
function_name	error which occurred ||| error	count=1
function_name	page ||| end page	count=1
function_name	an odbc query ||| odbc fetch array	count=1
function_name	socket is bound ||| socket	count=1
function_name	error number errno ||| errno	count=1
namespace	called by the ||| mongoid	count=1
function_name	selects the default ||| select db	count=1
function_name	levels ||| level	count=2
function_name	returns the version ||| version	count=1
function_name	an image to ||| image	count=1
function_name	removes all current search ||| clear search	count=1
function_name	number or ||| number	count=1
namespace	continuing ||| evloop	count=1
function_name	all rewrite [function_name] ||| rewrite [function_name]	count=3
return	to be read ||| bool	count=1
function_name	created event resource ||| event	count=1
function_name	traverse over a ||| real walk	count=1
function_name	[function_name_1] certain ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] debug ||| [function_name_1] [function_name_2]	count=1
arg_pair	after the ||| resource $fdf_document	count=1
function_name	e raised ||| exp	count=1
return	instance ||| object	count=1
function_name	network ||| fann	count=16
arg_pair	the associated ||| int $textflow	count=1
function_name	retrieve current controller ||| get controller	count=1
arg_pair	to ann based ||| array $input_vector	count=1
return	all ||| bool	count=2
arg_pair	to a page ||| int $page	count=1
function_name	creating a new instance ||| get active object	count=1
arg_pair	into an ||| array $pixels	count=1
return	receiving ||| int	count=1
function_name	returns the precision ||| precision	count=1
function_name	string to ||| get	count=1
namespace	of any ||| imagick	count=1
arg_pair	path ||| int $flags	count=1
function	flags of the ||| flags resource $result	count=2
function_name	hash ||| mhash get hash	count=1
function_name	tell if ||| is	count=1
function_name	returns the details ||| describe	count=1
function_name	haruencoder currently used in ||| get current encoder	count=1
function_name	saves ||| export	count=1
namespace	this call starts ||| gearmanclient	count=1
function_name	base associated with the ||| base	count=1
function_name	[function_name_1] row into ||| [function_name_1] [function_name_2]	count=2
function_name	image matte color ||| image matte color	count=3
function_name	the last tuple ||| last	count=1
function_name	the socket ||| socket	count=3
arg_pair	watcher object and starts ||| mixed $data int $priority	count=1
function_name	returned by the ||| bzerrstr	count=1
return	domtext ||| domtext	count=1
function_name	the error message for ||| mysqli stmt error	count=1
function_name	been closed by ||| ibase	count=1
function_name	socket resource created ||| socket connect	count=1
namespace	the unicode ||| intlchar	count=1
function_name	a file that ||| metadata	count=1
namespace	retreives the ||| eventutil	count=1
function_name	is used ||| cubrid seq put	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=9
return	for a ||| bool	count=1
function_name	root [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	for later use ||| int $len	count=1
function_name	of the [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] range/wildcard/fuzzy/prefix queries ||| [function_name_2] [function_name_1]	count=3
function_name	horizontal [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	sequence and returns ||| string $sequence	count=1
namespace	to ||| function	count=2
function_name	scope not their values ||| symbols	count=1
function_name	group cache ||| group cache	count=2
arg_pair	of the ||| int $neurons_between_reports	count=1
return	position [return] 0 0 ||| [return]	count=1
arg_pair	the entry was ||| int $key	count=1
function_name	an extended ||| mongo db\bson\from	count=1
arg_pair	callback given ||| callable $callback	count=1
function_name	all data ||| add	count=1
function_name	algorithm or ||| algorithm	count=1
function_name	a result ||| odbc	count=1
function	[function_name_1] apcs ||| [function_name_1] cache info [arg_pair_2]	count=1
function_name	simulates motion blur ||| motion blur	count=1
arg_pair	the ||| string $error_msg int $error_type	count=1
function_name	archives ||| stub	count=1
function_name	the file size ||| size	count=1
function_name	the [function_name] similar ||| solarize [function_name]	count=1
function	closes file [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	rprop training ||| fann set rprop	count=2
function_name	specific row ||| fetch row	count=1
function_name	[function_name_1] width for ||| [function_name_1] [function_name_2]	count=1
function_name	executes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	breaker parameter ||| breaker	count=1
function_name	cascade output [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	must be a ||| bool	count=1
function_name	morelikethis ||| mlt	count=1
function_name	matches color with ||| opaque paint	count=1
arg_pair	file or directory ||| string $path	count=1
function_name	xmlrpc [function_name_2] ||| [function_name_1] set [function_name_2]	count=4
function_name	socket socket to ||| socket	count=1
rest	to [function_2] ||| [return_1] pg send [function_2]	count=4
return	the database ||| bool	count=1
arg_pair	[arg_pair_1] and enables ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	generate a random number ||| gmp random	count=1
function_name	the arc sine ||| asin	count=1
function_name	[function_name_1] blocking ||| [function_name_2] [function_name_1]	count=1
function_name	field in ||| field	count=1
function_name	a pdf block with ||| pdf	count=1
function_name	trigram ||| trigram	count=3
namespace	point of a path ||| function	count=1
function_name	sets a specific object ||| set	count=1
return	an ||| mixed	count=1
function_name	[function_name_1] the property ||| [function_name_1] [function_name_2]	count=1
function_name	socket_read() reads from ||| read	count=1
function_name	cached in ||| cached	count=1
function_name	this function [function_name] ||| ob end [function_name]	count=2
function_name	path for a ||| dict path	count=1
function_name	sets the read ||| timeout set	count=1
arg_pair	and the ||| resource $pdfdoc	count=1
arg_pair	from the associative ||| string $arg_separator	count=1
function_name	creates ||| create attribute ns	count=2
function_name	tags used to describe ||| tags	count=1
namespace	returns ||| function	count=11
function_name	a response ||| response	count=1
namespace	the given file ||| function	count=1
function_name	[function_name_1] stream context ||| [function_name_2] [function_name_1]	count=2
function_name	kill ||| kill	count=1
function_name	users query string ||| set query	count=1
function_name	maximum number ||| cascade max	count=1
function_name	sets phrase fields pf ||| set phrase fields	count=1
function_name	increase ||| increase	count=1
function_name	translates the origin of ||| pdf translate	count=1
function_name	changes the default external ||| libxml set external	count=1
function_name	maps to facet ||| facet limit	count=1
function_name	image ||| contrast image	count=1
function_name	a service ||| service	count=1
function_name	[function_name_1] vector iv ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] defined functions ||| [function_name_2] [function_name_1]	count=1
function_name	the query cache ||| mysqlnd qc	count=1
function_name	calculates the width ||| width	count=1
return	also ||| reference	count=1
return	used [return] see ||| [return]	count=1
namespace	memcache servers ||| memcached	count=1
arg_pair	as fields delimiter ||| string $delimiter	count=3
function_name	the increase [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] to a ||| [function_name_1] code [arg_pair_2]	count=1
function_name	specific row in a ||| fetch	count=1
function_name	imports pixels from ||| import image pixels	count=1
arg_pair	method and key ||| string $method	count=1
function_name	[function_name_1] background color ||| [function_name_2] [function_name_1]	count=2
function	train [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	if the [namespace] has ||| [namespace]	count=1
arg_pair	in a result set ||| resource $stmt	count=2
return	killed using the ||| int	count=1
arg_pair	of the buffer ||| int $level	count=1
arg_pair	and returns ||| resource $connection mixed $object_id	count=1
arg_pair	desired dimensions with ||| int $filter float $blur	count=1
namespace	inside of an archive ||| phar	count=1
arg_pair	a new mailbox on ||| string $mailbox	count=1
function_name	gets the declaring class ||| get declaring class	count=2
function_name	connect the socket ||| connect	count=1
function_name	opened or not ||| set opened	count=1
function_name	on a socket ||| socket	count=1
arg_pair	the ||| int $expire	count=1
arg_pair	in the result-set ||| int $type int $maxlen	count=1
arg_pair	copies data between one ||| string $data	count=1
arg_pair	of htmlentities() ||| int $flags	count=1
arg_pair	clients that the ||| int $type	count=1
arg_pair	if a ||| string $fieldname string $fieldvalue	count=1
arg_pair	set a file that ||| string $file	count=2
arg_pair	sends an error message ||| int $message_type	count=1
function_name	digest hash value ||| openssl digest	count=1
function	[function_name_1] text ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	a b where gcd ||| gmp $a gmp $b	count=1
return	to a given ||| void	count=1
arg_pair	a file that ||| string $file	count=2
namespace	of a ||| function	count=4
return	current point to the ||| bool	count=1
function	[function_name_1] the ||| [function_name_1] min default frequency [arg_pair_2]	count=1
arg_pair	desired dimensions with a ||| float $blur	count=1
arg_pair	a table ||| string $owner string $table	count=1
arg_pair	specified offset ||| int $offset int $length	count=1
function_name	[function_name_1] size associated ||| [function_name_1] [function_name_2]	count=1
namespace	given ||| function	count=31
arg_pair	the server yet ||| int $expire	count=1
function_name	service [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	device [function_name_2] ||| [function_name_1] action [function_name_2]	count=1
function_name	returns the name ||| get name	count=1
function_name	difference - an ||| object	count=1
function_name	is valid ||| valid	count=5
function_name	process [function_name] the amount ||| [function_name] nice	count=1
function_name	initializes color ||| color	count=1
return	to a database ||| string	count=1
function_name	album string of ||| album	count=1
namespace	model used ||| svmmodel	count=1
return	method checks whether the ||| bool	count=1
namespace	function allows you to ||| function	count=1
return	sets the file position ||| int	count=1
namespace	connection in ||| function	count=1
function_name	fetches the data specified ||| fetch	count=1
function_name	[function_name_1] the mode ||| [function_name_2] [function_name_1]	count=5
function_name	use based on training ||| fann set	count=1
function_name	the first [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	is user-defined as opposed ||| user defined	count=1
return	to the value ||| bool	count=1
arg_pair	the ||| resource $identifier int $signmode	count=1
function_name	error message from last ||| error message	count=1
function_name	as ||| ibase fetch object	count=2
namespace	by ||| mongocursor	count=1
function_name	raw ||| raw	count=2
return	values of ||| array	count=1
namespace	be represented with existing ||| pharfileinfo	count=1
arg_pair	files within a directory ||| string $mask	count=1
function_name	by [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	respect ||| pdf setlinecap	count=1
arg_pair	a key-value pair into ||| mixed $keys	count=1
arg_pair	it in dest file ||| int $context	count=1
namespace	checks ||| mongocursorinterface	count=1
namespace	the training parameters ||| svm	count=1
function_name	returns an array of ||| mysqlnd memcache get	count=1
return	some amount of time ||| mongocursor	count=1
arg_pair	pointer apply ||| resource $sourcefp resource $destfp	count=1
function_name	sets the learning ||| fann set learning	count=6
function_name	the action name ||| action	count=1
function_name	row in ||| db2 fetch row	count=1
function_name	next event loop ||| event	count=1
arg_pair	specified offset ||| int $offset	count=3
function_name	name of ||| name	count=4
return	end of current ||| bool	count=1
function_name	clone method prevents ||| clone	count=1
function_name	1 (3761 ||| jewishtojd	count=1
function_name	placeholder name which ||| name	count=1
return	of all ||| array	count=1
function_name	mysql protocol version used ||| proto	count=1
function_name	users query ||| query	count=1
function_name	value from a sequence ||| insert	count=1
function_name	scale [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	if a valid ||| string $fieldname string $fieldvalue	count=1
function_name	quoted printable string ||| quoted printable	count=1
function_name	sets where the ||| set error	count=1
arg_pair	serializes ||| resource $packet_id	count=1
function_name	a valid [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	to msql_fetch_array() [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	specified code ||| intlchar	count=4
function_name	the image obtained ||| imagecreatefromjpeg	count=1
function_name	get the current text ||| get text	count=1
arg_pair	the database ||| string $database	count=1
function_name	matte color ||| matte color	count=2
function_name	the contrast [function_name_2] ||| [function_name_1] stretch [function_name_2]	count=1
arg_pair	the ||| int $reverse	count=1
function_name	character encoding ||| encoding	count=1
function	[function_name_1] at the ||| [arg_pair_2] [function_name_1]	count=2
namespace	with servers ||| memcache	count=2
function_name	translates the origin ||| pdf translate	count=1
function_name	retrieves the [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	fields in ||| numfields	count=1
function_name	[function_name_1] code name ||| [function_name_1] [function_name_2]	count=3
function_name	oracle connection ||| oci	count=1
return	object ||| yaf_controller_abstract	count=1
arg_pair	sets the ||| resource $psdoc	count=1
function_name	string if attribute ||| attribute	count=1
function_name	file and writes ||| write	count=1
function_name	returns at ||| get	count=1
arg_pair	index of the ||| int $blue	count=1
function_name	closes the link ||| close	count=3
function_name	[function_name_1] matte channel ||| [function_name_2] [function_name_1]	count=2
arg_pair	by dn ||| array $dn	count=1
arg_pair	a message ||| string $target array $properties	count=1
function_name	single column of ||| column	count=1
arg_pair	memcached::get() except that ||| callable $cache_cb	count=1
function_name	the full country name ||| country name by name	count=1
function_name	properties of the ||| properties	count=1
arg_pair	input identified by ||| array $input	count=1
function_name	draws an arc ||| imagearc	count=1
function_name	width and height as ||| image geometry	count=1
function_name	algorithm ||| mcrypt enc get	count=1
function_name	properties ||| image properties	count=1
return	by php internally it ||| mongoid	count=1
function_name	step-size may ||| set rprop delta	count=1
function_name	[function_name_1] uri ||| [function_name_1] [function_name_2]	count=2
function_name	entity reference ||| entity ref	count=1
arg_pair	memcached::add() except that the ||| mixed $value int $expiration	count=1
function_name	connection created with db2_connect() ||| db2	count=1
function_name	[function_name_1] default ||| [function_name_1] [function_name_2] properties	count=1
namespace	it shouldnt need to ||| mongoid	count=1
function_name	returns [function_name] ||| apc [function_name]	count=2
namespace	without any markup ||| tidynode	count=1
arg_pair	a row of the ||| int $row_number	count=1
arg_pair	exact color or the ||| int $green int $blue	count=1
function_name	[function_name_1] the socket ||| [function_name_2] [function_name_1]	count=2
function_name	continuing ||| loop	count=1
function_name	stream or datagram ||| stream socket client	count=1
function_name	[function_name_1] device ||| [function_name_1] [function_name_2]	count=1
function	variable [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	[function_name_1] code name ||| [function_name_2] [function_name_1]	count=3
namespace	php internally it shouldnt ||| mongoid	count=1
namespace	no ||| mongocursorinterface	count=1
arg_pair	php array var_array ||| int $max_table_length	count=1
function_name	starts event loop ||| loop	count=1
function_name	returns the inner ||| get inner	count=2
function_name	current flags ||| flags	count=1
function_name	arc sine ||| asin	count=1
return	internally ||| mongoid	count=1
function_name	an html ||| save htmlfile	count=1
function_name	[function_name] candidate change ||| fann [function_name] candidate	count=1
function	set [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	a ||| loop	count=1
function_name	registered __autoload() ||| spl autoload	count=1
function_name	parse ||| parse	count=2
function_name	[function_name_1] current column ||| [function_name_1] [function_name_2]	count=1
function_name	cascade candidate ||| cascade	count=2
function_name	node ||| node	count=3
function_name	an eof is seen ||| expect expectl	count=1
function_name	thread id ||| thread id	count=2
function_name	[function_name_1] [function_name_2] ||| put [function_name_1] [function_name_2]	count=3
namespace	or multiple values ||| tokyotyrant	count=1
function_name	the request authenticator ||| request authenticator	count=1
arg_pair	with a unique filename ||| string $prefix	count=1
arg_pair	memcached::getdelayed() except that the ||| callable $value_cb	count=1
arg_pair	the result set starting ||| resource $result int $type	count=1
function_name	[function_name_1] the default ||| [function_name_1] [function_name_2] handler	count=1
function_name	extrema for the image ||| get image extrema	count=1
function_name	a doc [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	connection ||| resource $link_identifier	count=1
function_name	option specified ||| get option	count=1
arg_pair	returns all of haystack ||| string $haystack	count=1
namespace	hash in the ||| quickhashintstringhash	count=1
function_name	time zone ||| time zone	count=1
function_name	both column name ||| both	count=1
function_name	extended service [function_name] from a ||| yaz es [function_name]	count=1
function	two-dimensional [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	attribute ||| hw_api_attribute	count=1
function_name	boost value ||| boost	count=2
function	remove the [arg_pair_2] ||| [function_name_1] tag [arg_pair_2]	count=1
function_name	xml ||| xml	count=14
return	move all data ||| bool	count=1
namespace	to the client ||| mongocursorinterface	count=1
arg_pair	key ||| string $passphrase	count=1
function_name	the tasks ||| run tasks	count=1
arg_pair	row record ||| resource $result int $row	count=1
function_name	returns the ||| get var	count=1
function_name	[function_name_1] content ||| [function_name_1] [function_name_2]	count=3
function_name	queries detailed [function_name] a loaded ||| [function_name] font	count=1
namespace	described in ||| function	count=1
function_name	julian calendar 4713 ||| juliantojd	count=1
function_name	by which the regex ||| highlight regex	count=2
function_name	the [function_name] of the ||| get [function_name]	count=1
function_name	sets the initial ||| set min	count=1
function_name	gets the namespace ||| namespace	count=1
namespace	or the history of ||| function	count=1
function_name	[function_name_1] [function_name_2] pixels into ||| [function_name_1] [function_name_2] pixels int $x int	count=1
function_name	frees all the ||| free	count=1
namespace	given access ||| function	count=1
function_name	message from [function_name_2] ||| [function_name_2] get error [function_name_1]	count=1
arg_pair	and ||| string $name	count=1
function_name	a session leader ||| setsid	count=1
function_name	error ||| errno	count=1
function	[function_name_1] the given ||| [arg_pair_2] [function_name_1]	count=2
function_name	the resulting array ||| trader	count=1
function_name	status ||| status	count=11
function_name	[function_name_1] bigram phrase ||| [function_name_1] [function_name_2]	count=2
function_name	change color definitions ||| change color	count=2
function_name	error handler in the ||| error handler	count=1
function_name	private ||| private	count=2
function_name	the specified field is ||| field	count=1
function_name	the [function_name] ||| set [function_name]	count=3
arg_pair	of an entry using ||| int $flags	count=1
function	[function_name_1] sealed_data using ||| [arg_pair_2] [function_name_1]	count=2
function	[function_name_1] some pdflib ||| [function_name_1] parameter [arg_pair_2]	count=1
function_name	dns resource records ||| dns get	count=1
namespace	this node and ||| domnode	count=1
function_name	factory ||| load from	count=2
arg_pair	later use ||| string $fontname	count=1
function_name	[function_name] the ||| last [function_name]	count=1
arg_pair	from object_id and return ||| string $object_id	count=2
return	[return] the value ||| [return]	count=3
function_name	the time zone ||| time zone	count=1
function_name	pdi document ||| get pdi value	count=1
function_name	to escape ||| escape	count=1
arg_pair	method ||| string $data string $method	count=1
function_name	if [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	directly to standard ||| bool	count=1
function	[function_name_1] left_operand to ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	of the ||| resource $result int $field_number	count=1
namespace	for the reflected method ||| reflectionmethod	count=1
function_name	the external attributes of ||| external attributes	count=2
function_name	[function_name_1] timeout ||| [function_name_1] [function_name_2]	count=9
function_name	get the type ||| type	count=2
function_name	the activation steepness ||| get activation steepness	count=1
function_name	replace ||| replace data	count=2
function_name	rrd dabase header ||| rrd tune	count=2
function	string text [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	get the column names ||| cubrid column names	count=1
function_name	[function_name_1] proxy ||| [function_name_1] connection [function_name_2]	count=1
function_name	activation steepness for all ||| activation steepness	count=1
function_name	deletes the given ||| delete	count=1
namespace	cairoimagesuface ||| cairoimagesurface	count=1
return	an ||| string	count=6
namespace	that cannot be represented ||| pharfileinfo	count=1
function_name	[function_name_1] e raised ||| [function_name_1] [function_name_2]	count=1
function	oracle [arg_pair_2] ||| [function_name_1] set module name [arg_pair_2]	count=1
arg_pair	string from the associative ||| string $arg_separator int $enc_type	count=1
namespace	function causes ||| function	count=1
arg_pair	given xpath expression and ||| domnode $contextnode	count=1
arg_pair	is posted by the ||| string $event_name2	count=1
function_name	associative ||| output	count=1
namespace	row of data from ||| function	count=5
function_name	[function_name_1] last error ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] if ||| [function_name_2] [function_name_1]	count=6
function_name	via the ||| start	count=1
function_name	high priority task in ||| high	count=1
function_name	line on ||| line	count=1
function_name	parser ||| parser	count=2
arg_pair	to the specified ||| resource $image int $red	count=1
namespace	creates ||| mongodate	count=1
function_name	spelling alternatives ||| enchant dict quick check	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] value [arg_pair_2]	count=1
function_name	resource suitable for maxdb_options() ||| maxdb	count=1
return	on [return] given ||| [return]	count=1
function_name	whether the opened ||| enc	count=1
function_name	authenticator is needed ||| authenticator	count=1
function_name	the soap requests ||| set soap	count=1
function_name	of the file ||| file	count=1
arg_pair	a file that contains ||| int $dictionary_link string $file	count=2
arg_pair	object is of this ||| object $object	count=1
function_name	french republican calendar ||| frenchtojd	count=1
function_name	the multi handle if ||| curl multi	count=1
arg_pair	by execute processing it ||| callable $execute	count=1
arg_pair	user and group ||| string $group	count=1
function_name	of any ||| unique	count=1
arg_pair	[arg_pair_1] code to ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	checks whether the iterator ||| norewinditerator	count=1
function_name	stagnation ||| stagnation	count=1
function_name	the [function_name_2] ||| [function_name_2] [function_name_1]	count=11
namespace	the api [namespace] which ||| [namespace]	count=1
namespace	writes data ||| oci-lob	count=1
function_name	numeric string reference of ||| decode numericentity	count=1
function_name	the resulting ||| trader add	count=1
function_name	to creating ||| get active object	count=1
function_name	[function_name_1] percent value ||| [function_name_1] [function_name_2]	count=3
function_name	function ||| set	count=1
function	changes size [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	dispatch loop ||| dispatch loop shutdown	count=2
return	this collection ||| array	count=1
arg_pair	changes the color ||| float $fuzz	count=1
function_name	node [function_name] applying ||| transform [function_name]	count=1
return	for some ||| mongocursor	count=1
function	parameters [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	mysqlnd_ms_xa_begin() ||| ms xa	count=1
arg_pair	whitespace or other ||| string $str string $character_mask	count=1
function_name	relative location [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	entering or continuing the ||| loop	count=1
function_name	stores ||| x509 export to file	count=1
arg_pair	on the page ||| resource $pdfdoc int $layer	count=1
arg_pair	filename ||| string $filename	count=1
arg_pair	on ||| resource $stream_or_context	count=1
function_name	[function_name_1] [function_name_2] is linked with ||| [function_name_1] [function_name_2]	count=2
namespace	thread ||| thread	count=3
function_name	[function_name] of ||| [function_name]	count=11
return	represented by the ||| string	count=1
arg_pair	the given color pair ||| int $fg	count=1
arg_pair	a ||| string $qualifiedname	count=1
namespace	relative references ||| splfileinfo	count=1
return	remaining idle on the ||| mongocursor	count=1
function_name	of case-insensitive ||| grapheme stristr	count=1
arg_pair	of the ||| array $params int $type	count=1
function_name	string ||| get	count=1
function_name	color for all kinds ||| color	count=1
function_name	arc of ||| imagearc	count=1
return	an already defined ||| bool	count=1
function_name	reason for a failed ||| errnum	count=1
namespace	function and ||| function	count=1
function_name	the [function_name] without ||| [function_name] get	count=1
namespace	connection to the ||| function	count=1
function_name	logo using ||| logo	count=1
function_name	new connection and ||| construct	count=1
arg_pair	puts a key-value pair ||| mixed $keys	count=1
function_name	the maximum ||| cascade max	count=1
function_name	pixel ||| pixel	count=1
return	which is not ||| returntype	count=2
function_name	type [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	neural network which is ||| fann	count=2
function_name	on phrase ||| phrase	count=1
function	the initial [function_name_1] [arg_pair_2] initial step size ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	using the oid of ||| resource $conn_identifier string $oid	count=1
function	[function_name_1] point for ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] real ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] recognized as ||| [arg_pair_2] [function_name_1]	count=6
function_name	and add ||| add vars	count=1
return	to composite the ||| bool	count=1
function_name	a [function_name] the ||| [function_name]	count=1
function_name	returns additional error information ||| yaz addinfo	count=1
function_name	the legendre symbol ||| legendre	count=1
function_name	with [function_name] ||| ibase param [function_name]	count=1
arg_pair	value ||| string $timeout	count=1
function_name	check ||| php check	count=1
arg_pair	a text rectangle using ||| string $text	count=1
function_name	server is a primary ||| primary	count=1
return	get the number of ||| int	count=5
function_name	[function_name] client identifier ||| [function_name] client identifier	count=1
function_name	queries detailed [function_name] ||| [function_name] font	count=1
function_name	a batch operation ||| log write batch	count=1
function_name	tag ||| get tag	count=1
arg_pair	specified mailbox ||| int $options	count=1
function_name	creates an html ||| htmlfile	count=1
return	gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| bool	count=1
function_name	and returns an array ||| array	count=1
function	from [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	called by ||| mongoid	count=1
function_name	width of the ||| width	count=1
namespace	watcher ||| evperiodic	count=1
namespace	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| gearmanclient	count=1
arg_pair	a ||| resource $image int $x1	count=1
arg_pair	for use as a ||| string $name callable $callback	count=1
arg_pair	contents ||| string $contents	count=1
return	stops ||| void	count=1
namespace	the maxdb_connect_error() [namespace] will ||| [namespace]	count=1
function_name	a block algorithm ||| block algorithm	count=3
function_name	[function_name_1] cascade output ||| [function_name_2] [function_name_1]	count=1
arg_pair	result argument of ||| string $path int $pri	count=2
arg_pair	old_file ||| string $old_file	count=1
arg_pair	a ||| resource $fdf_document string $frame_name	count=1
function_name	step-size may ||| rprop delta	count=1
function_name	path as clipping path ||| pdf clip	count=1
arg_pair	associated with pub_key_id ||| mixed $signature_alg	count=1
function_name	[function_name_1] config used ||| [function_name_2] [function_name_1]	count=2
function_name	in an ||| escape	count=1
function_name	selects an ||| image	count=1
function_name	neural network from a ||| fann create	count=1
arg_pair	the portion [arg_pair_2] ||| [arg_pair_2] string $needle [arg_pair_1]	count=1
function_name	received events and started ||| now	count=1
function	sets anchor [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	gets the string to ||| recursivetreeiterator	count=1
arg_pair	a gmp number ||| gmp $gmpnumber integer $word_size	count=1
arg_pair	all or part of ||| int $ndocs	count=2
function_name	add required ||| add required	count=2
function_name	raw request [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	examines a certificate to ||| openssl x509 checkpurpose	count=1
function_name	obscure [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] weblink ||| [function_name_2] [function_name_1]	count=1
function_name	wave ||| wave	count=1
function_name	similarity image such ||| image	count=1
arg_pair	prepares for an ||| resource $id array $args	count=1
function_name	[function_name_1] candidate change ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] filter ||| [function_name_1] [function_name_2]	count=1
namespace	session ||| sessionhandlerinterface	count=1
function_name	[function_name_1] debug data ||| [function_name_1] [function_name_2]	count=1
arg_pair	message ||| mixed $message	count=1
namespace	specified code point is ||| intlchar	count=3
arg_pair	text for later ||| string $text	count=1
arg_pair	haystack and returns the ||| bool $before_needle	count=1
arg_pair	keys and the values ||| array $keys	count=1
function_name	server for some amount ||| immortal	count=1
arg_pair	the requested option from ||| resource $ftp_stream int $option	count=1
arg_pair	fetches the ||| int $timeout_type int $timeout	count=1
function_name	a priority ||| priority	count=3
function_name	of the [function_name] ||| get [function_name]	count=3
function_name	id ||| set id	count=1
function_name	get the activation ||| activation	count=2
function_name	new integer range filter ||| filter range	count=1
function_name	the key sizes ||| key sizes	count=2
arg_pair	of an external ||| string $filename string $alias	count=1
arg_pair	a ||| string $method	count=1
function	add [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	of current ||| bool	count=1
function	train one [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	starts a new ||| pdf begin	count=1
arg_pair	the field after the ||| resource $fdf_document	count=1
function_name	data from table ||| pgsql	count=2
namespace	set of ||| gearmanclient	count=1
function_name	an anonymous ||| anonymous	count=1
function_name	rectangle ||| rectangle	count=2
arg_pair	sql statements ||| mixed $final_callback int $argument_count	count=1
namespace	function will return the ||| function	count=4
arg_pair	an ||| int $storage	count=1
function_name	by [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	returns the default domain ||| get default domain	count=1
function_name	tags stripped ||| tags	count=1
function	[function_name_1] recognized as ||| phar [function_name_1] string $filename [arg_pair_2]	count=1
function_name	the learning [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	or set the flags ||| flags	count=1
function_name	this ||| introspection	count=1
function_name	reads to secondaries ||| slave okay	count=3
arg_pair	instance of ||| int $code_page	count=1
function_name	create new connection and ||| construct	count=1
arg_pair	uri containing ||| string $encoding	count=1
function_name	pixel that matches ||| paint opaque image	count=1
function_name	of activation steepnesses in ||| fann get cascade activation steepnesses	count=1
arg_pair	objects starting from object_id ||| string $object_id int $timeout	count=1
function_name	closes the request ||| close request	count=1
arg_pair	the how ||| int $how array $set	count=1
function_name	list ||| enchant broker list	count=1
function_name	[function_name_1] temperature ||| [function_name_2] [function_name_1]	count=3
function_name	affected [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	to memcached::getmulti() ||| string $cas_tokens int $flags	count=1
function_name	reply that ||| reply start	count=1
function_name	size associated with ||| size	count=1
function_name	height as an ||| image geometry	count=1
function_name	encoded ||| decode	count=1
function_name	returns the hostname ||| get hostname	count=2
function_name	active event [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	shouldnt ||| mongoid	count=1
arg_pair	number of characters ||| int $offset string $encoding	count=1
arg_pair	given sequence ||| resource $imap_stream string $sequence	count=1
function_name	the key [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	get the total ||| get total	count=2
function_name	by the user ||| state	count=1
function_name	given ||| add locallink	count=1
namespace	or numerically indexed array ||| sqlite3result	count=1
function_name	route ||| get current	count=1
function_name	the o_nonblock flag ||| set block	count=1
function_name	the current cipher by ||| cipher info	count=1
namespace	session id ||| sessionhandler	count=1
function_name	query ||| msql query	count=1
arg_pair	local or remote ||| bool $want_peer	count=1
namespace	a ||| intlchar	count=1
function	[function_name_1] virtual file ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	from array1 against ||| array $array1	count=2
arg_pair	draws the character c ||| string $c	count=1
function_name	the specified context ||| stream context	count=1
namespace	all job servers to ||| gearmanclient	count=1
function	the [function_name_1] [arg_pair_2] expression ||| mb ereg search [function_name_1] [arg_pair_2]	count=1
namespace	gets the extensions ||| reflectionextension	count=1
function_name	supported [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] header ||| [function_name_1] mime [function_name_2]	count=1
function_name	id3v2 object for the ||| id3v2 tag	count=1
function_name	function [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	represented with existing information ||| void	count=1
function_name	exists in the ||| exists	count=3
function_name	image ||| image	count=89
arg_pair	an html ||| int $error string $reason	count=1
function_name	return the raw characters ||| return raw	count=1
function_name	returns ||| fann get	count=3
namespace	buffer provided in ||| eventbuffer	count=1
arg_pair	if no database ||| string $collection	count=1
function_name	callback timeout value ||| timeout	count=1
return	whether or not ||| bool	count=3
arg_pair	returns a resource handle ||| string $encoding	count=1
function_name	input vector after get ||| input	count=1
arg_pair	a string at the ||| string $string int $color	count=1
namespace	of a path ||| function	count=1
function_name	tasks in ||| tasks	count=1
function_name	it opens an sqlite ||| sqlite	count=1
function_name	alpha channel ||| alpha channel	count=2
return	directory to directory ||| bool	count=1
function_name	[function_name_1] the target ||| [function_name_2] [function_name_1]	count=1
function_name	given stream ||| stream	count=1
namespace	snmp ||| snmp	count=3
function_name	arbitrary ||| add nameddest	count=2
function_name	returns the tty name ||| tty	count=1
function_name	a large object in ||| lo	count=1
function_name	the contrast [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	opposite of htmlentities() in ||| string $string	count=1
function_name	new ||| open	count=2
function_name	the id3v1 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	sends status information ||| send status	count=2
function_name	returns the width of ||| width	count=1
function_name	creates a [function_name_2] ||| [function_name_2] [function_name_1]	count=13
return	created using ||| bool	count=1
function_name	posix system error message ||| posix strerror	count=1
arg_pair	replaced with the ||| mixed $search	count=1
function_name	new record into ||| record	count=1
arg_pair	snmp objects ||| string $community	count=2
function_name	be ||| set metadata	count=4
function_name	to use spanscorer ||| use	count=2
arg_pair	a particular [arg_pair] from ||| [arg_pair]	count=1
arg_pair	messages in the specified ||| resource $imap_stream	count=1
function_name	register ||| register node	count=1
function_name	csr and ||| csr	count=2
arg_pair	annotation ||| float $lowerleftx	count=2
function_name	activation function ||| fann get activation function	count=1
arg_pair	the mailboxes that ||| string $ref	count=1
function_name	that are present in ||| intersect	count=1
function_name	network ||| fann set	count=1
function_name	the blocksize ||| get algo block size	count=1
return	of monitored ||| bool	count=1
arg_pair	position pointing to a ||| float $ury	count=2
function_name	nonce ||| nonce	count=1
function_name	provides a stride ||| stride for	count=1
function_name	finds whether ||| is	count=1
return	string from ||| string	count=1
function_name	single component ||| component	count=1
function_name	encoded string ||| decode	count=1
function_name	persistent connection to ||| pconnect	count=1
arg_pair	the ||| resource $link_identifier	count=2
function_name	[function_name_1] parser ||| function bool bbcode [function_name_1] [function_name_2] resource $bbcode_container resource $bbcode_arg_parser	count=1
namespace	this function causes ||| function	count=1
function_name	virtual pixel ||| virtual pixel	count=2
namespace	phar archives manifest for ||| pharfileinfo	count=1
function_name	xhprof data from the ||| xhprof disable	count=1
function_name	the opened ||| enc is	count=1
arg_pair	the colors in the ||| int $channel	count=1
function_name	examines a certificate to ||| x509 checkpurpose	count=1
namespace	function url ||| function	count=1
arg_pair	a tar or zip ||| string $base_directory	count=1
function_name	cipher by means of ||| cipher info	count=1
function_name	command on this server ||| command	count=1
arg_pair	by dn which ||| array $dn	count=1
function_name	pcos ||| pcos	count=1
function_name	root device ||| gupnp device	count=1
function_name	write operations on the ||| write buffer	count=1
arg_pair	alignment requirements of the ||| int $format	count=1
function_name	file ||| bzerrstr	count=1
arg_pair	and returns the ||| resource $connection mixed $object_id	count=1
function_name	thread id for ||| thread id	count=2
function	[function_name_1] the hostname ||| [function_name_1] [arg_pair_2]	count=1
function_name	steepnesses ||| steepnesses count	count=2
namespace	associated with the gmagick ||| gmagick	count=1
function	pdf [arg_pair_2] ||| [function_name_1] begin document [arg_pair_2] string $optlist	count=1
function_name	it shouldnt need ||| set state	count=1
arg_pair	a ||| resource $fam	count=1
function_name	provided in ||| buffer	count=1
return	an event from ||| bool	count=1
function	[function_name_1] old_data ||| [arg_pair_2] [function_name_1]	count=1
function_name	event ||| ibase set event	count=1
function_name	function is only ||| set state	count=1
function_name	query cache ||| query	count=1
arg_pair	b black and ||| float $b	count=1
return	cannot be represented with ||| void	count=1
function_name	current database profiling ||| set profiling	count=1
namespace	results to send ||| mongocursorinterface	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] function [arg_pair_2]	count=1
arg_pair	principal and the ||| string $password	count=1
function_name	specified field is in ||| mysql field	count=1
return	list of ||| int	count=1
function_name	data from the buffer ||| add	count=1
arg_pair	options ||| resource $link array $options	count=1
arg_pair	of real1 from real0 ||| array $real1	count=1
function_name	response [function_name_2] ||| [function_name_2] [function_name_1]	count=11
function_name	persistent [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	sets ||| pdf setflat	count=1
function_name	connection ||| get connection	count=1
function	[function_name_1] the ||| [function_name_1] max out epochs [arg_pair_2]	count=1
arg_pair	of type ||| int $port	count=1
function_name	[function_name_1] handler for ||| [function_name_2] [function_name_1]	count=4
arg_pair	with the color defined ||| float $fuzz	count=1
function_name	the client ||| client	count=2
function_name	master ||| master	count=1
return	a fetch ||| string	count=1
function_name	of rows to display ||| rows	count=1
function	[function_name_1] recognized as ||| [function_name_1] string $filename [arg_pair_2]	count=5
function_name	maximum line ||| max line	count=2
function_name	[function_name_1] level ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] blocking ||| [function_name_1] [function_name_2]	count=1
function_name	svn ||| svn	count=1
function_name	value of ||| value	count=2
function_name	with one [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	postgresql frontend/backend [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	searches [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] the ||| [function_name_1] [arg_pair_2]	count=8
return	the set of ||| bool	count=1
return	current time ||| double	count=1
function_name	graphics ||| graphics	count=1
arg_pair	principal and ||| string $principal string $password	count=1
arg_pair	the closest ||| int $green	count=1
function_name	fit the window ||| set fit	count=1
function_name	installs ||| uh set statement	count=1
function_name	[function_name_1] number ||| [function_name_2] [function_name_1]	count=12
function	[function_name_1] to the ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	table or a list ||| string $fk_owner string $fk_table	count=1
function_name	version number ||| version	count=2
function_name	and cropping ||| crop	count=1
namespace	function renames on old ||| function	count=1
function_name	the kadm5 ||| kadm5 init with	count=1
arg_pair	the ||| string $cookie	count=1
function_name	stub so this ||| set default stub	count=1
function_name	mysql server ||| mysql connect	count=1
function_name	pdf page [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	selects records ||| pg select	count=1
return	from ||| string	count=4
function_name	fail [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	sets the maximum number ||| set mlt max num	count=1
function_name	[function_name_1] [function_name_2] object ||| imagick int [function_name_1] [function_name_2]	count=1
arg_pair	returns a ||| string $encoding	count=1
function_name	a row ||| fetch	count=4
function_name	[function_name_1] client and ||| [function_name_2] [function_name_1]	count=4
return	similar to ||| string	count=2
function_name	defined constants from ||| constants	count=1
function_name	and returns the resulting ||| trader	count=1
namespace	assigned unicode characters between ||| intlchar	count=1
arg_pair	of files within a ||| int $depth string $mask	count=1
namespace	rar program e ||| rarentry	count=1
namespace	auto ||| mysqlnduhconnection	count=1
arg_pair	from the image ||| resource $image	count=1
function_name	network ||| fann create from	count=1
function_name	sets the target frame ||| set target frame	count=1
function_name	unstable ||| unstable	count=1
function_name	minimum ||| enum cache min default	count=1
return	id real hostname and ||| array	count=1
function_name	number from radian to ||| rad2deg	count=1
arg_pair	field after ||| resource $fdf_document	count=1
function_name	is a space ||| space	count=1
arg_pair	fd file [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	previously added ||| run	count=1
return	on ||| resource	count=2
arg_pair	queries ||| string $optlist	count=1
function_name	executing a get_more operation ||| log getmore	count=1
namespace	character ||| intlchar	count=1
return	for a character ||| string	count=1
function_name	[function_name_1] path to ||| [function_name_1] [function_name_2]	count=2
function_name	decrypts ||| openssl	count=1
arg_pair	request from the given ||| resource $conn_identifier string $oid	count=2
function_name	[function_name_1] fail limit ||| [function_name_1] [function_name_2]	count=3
function_name	shared secret is needed ||| server secret	count=1
function_name	namespace ||| ns	count=5
function_name	[function_name_1] corresponding ||| [function_name_2] region [function_name_1] by	count=1
function_name	[function_name_1] interfaces ||| [function_name_1] [function_name_2]	count=2
return	checks whether the current ||| bool	count=1
namespace	being [namespace] the ||| [namespace]	count=1
function_name	create a [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	sets the value ||| set	count=5
arg_pair	returns the portion ||| bool $before_needle	count=1
function_name	phar::startbuffering() method can provide ||| buffering	count=1
function_name	php internally it shouldnt ||| set	count=1
function_name	parameter ||| param	count=3
function_name	[function_name_1] channel ||| [function_name_2] [function_name_1]	count=3
namespace	results to send to ||| mongocursorinterface	count=1
arg_pair	into table table_name using ||| string $table_name	count=1
function_name	the buffered event ||| event buffer	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] create string $filename [arg_pair_2]	count=1
namespace	condition variable ||| cond	count=1
arg_pair	thats associated ||| resource $link_identifier	count=1
return	be used to trace ||| void	count=1
arg_pair	requested option from ||| int $option	count=1
function_name	returns the default ||| get default	count=1
function_name	traverse over a number ||| real walk	count=1
function_name	or set ||| database	count=1
arg_pair	by fd ||| mixed $fd int $pri	count=1
function_name	is effective in ||| get current	count=1
namespace	object ||| reflectionclass	count=1
arg_pair	on a server ||| string $namespace	count=1
function_name	cache content and ||| wincache	count=1
function_name	retrieve registered routes ||| get routes	count=1
function_name	an iterator ||| iterator	count=1
function_name	the value of ||| get	count=1
function_name	the number [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the bidi_mirrored property ||| mirrored	count=1
arg_pair	it in dest file ||| string $dest int $context	count=1
function_name	linear least [function_name_2] ||| [function_name_1] [function_name_2]	count=8
arg_pair	text rectangle ||| resource $font	count=1
function_name	the entries ||| ldap	count=1
function_name	the current cipher ||| get cipher	count=1
function_name	property for ||| int property	count=1
function_name	authentication ||| auth	count=1
namespace	request ||| eventhttprequest	count=2
function_name	[function_name_1] newt ||| [function_name_2] [function_name_1]	count=2
function_name	given search query ||| query	count=1
arg_pair	the sql statement and ||| string $sql	count=1
function_name	database name from ||| db name	count=1
rest	read the [function_2] ||| [return_1] [function_2]	count=1
function_name	sets the [function_name_2] ||| [function_name_2] [function_name_1]	count=96
namespace	is a base character ||| intlchar	count=1
namespace	first character of ||| function	count=1
function_name	as a ||| fetch object	count=1
function_name	the phar::startbuffering() ||| buffering	count=1
function_name	returns the width and ||| get	count=1
function_name	[function_name_1] size for ||| [function_name_1] [function_name_2]	count=2
function	finishes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	a given font ||| bool	count=1
arg_pair	a code point ||| mixed $codepoint int $property	count=1
arg_pair	file and frees ||| resource $pdfdoc string $filename	count=1
function_name	file that cannot ||| metadata	count=1
function_name	gearman return ||| return	count=2
function_name	starts ||| run	count=1
function_name	[function_name] phrase ||| [function_name] use phrase	count=1
arg_pair	a resource handle referencing ||| string $separator	count=1
function_name	the first [function_name] ||| first [function_name]	count=3
function_name	removes a [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	by dirname ||| string $dirname resource $context	count=1
function_name	rows ||| rows	count=12
arg_pair	on the ||| resource $connection int $oid	count=1
return	or self executable file ||| bool	count=1
function_name	on failure ||| cubrid	count=1
arg_pair	of ||| string $host	count=1
function_name	raised into power ||| gmp powm	count=1
namespace	checks whether ||| limititerator	count=1
function_name	timestamp nonce [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	with the given key ||| int $key	count=1
arg_pair	the word ||| string $word	count=2
function_name	some amount of ||| immortal	count=1
function_name	filter ||| set filter	count=1
arg_pair	the specified entry ||| resource $handle	count=1
function_name	open slob object ||| slob	count=1
function_name	training not to stagnate ||| fann	count=1
function_name	remote file server with ||| ssh2 sftp	count=1
function_name	get the total ||| total	count=2
return	a string representation of ||| string	count=1
arg_pair	specified tcp_server ||| string $tcp_server	count=1
function_name	type map configuration to ||| type map	count=1
function_name	in a ||| set	count=1
function_name	php ||| state	count=1
function_name	[function_name_1] term to ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] and its ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] bit ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] log for ||| [function_name_2] [function_name_1]	count=3
function_name	term to stop at ||| terms upper bound	count=1
function_name	file selection ||| attachment	count=1
function_name	[function_name_1] font ||| [function_name_2] [function_name_1]	count=3
function_name	sybase_fetch_assoc() with [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	scale data in input ||| scale input	count=1
function_name	a line on the ||| line	count=1
function_name	in set are delivered ||| pcntl sigwaitinfo	count=1
arg_pair	distinguished name to ||| array $configargs array $extraattribs	count=1
return	value pointed to ||| bool	count=1
arg_pair	to memcached::add() except that ||| int $expiration	count=1
function_name	[function_name_1] entry ||| [function_name_1] [function_name_2]	count=5
arg_pair	the supplied hash implements ||| integer $algo	count=1
function_name	route which is ||| current	count=1
function_name	vector dot product of ||| mult	count=1
function	an arbitrary [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	the word [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	search query ||| query	count=4
function_name	returns information about the ||| info	count=1
function_name	time zone ||| time zone by	count=2
return	php internally it shouldnt ||| mongoid	count=1
function_name	version as a ||| version	count=1
function	frontend/backend [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	state variable [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
arg_pair	pl/sql array ||| int $type	count=1
function_name	scm [function_name_2] ||| [function_name_1] service [function_name_2] int $status int $checkpoint	count=1
function_name	extended json ||| db\bson\from json	count=1
return	pixel ||| bool	count=1
arg_pair	of the data ||| resource $result_id	count=1
arg_pair	number of characters ||| int $offset	count=1
function_name	a file that ||| set	count=1
function_name	the stream or context ||| stream context	count=1
function_name	of the horizontal scaling ||| get horizontal scaling	count=1
function	[function_name_1] a new ||| domdocument domattr [function_name_1] [arg_pair_2]	count=1
function_name	associates ||| set	count=1
function_name	which ||| newt	count=1
namespace	remote database ||| tokyotyrant	count=1
function_name	asp ||| asp	count=1
arg_pair	value ||| string $value	count=3
function_name	on [function_name] filesystem without ||| [function_name] sftp lstat	count=1
namespace	called after a ||| evloop	count=1
arg_pair	as data from buf ||| string $buf	count=1
function_name	oracle placeholder name which ||| name	count=1
namespace	function sorts an ||| function	count=2
function	registry [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	to get error code ||| get error code	count=1
function_name	the bounding box ||| b	count=1
namespace	result set ||| sqlite3stmt	count=1
function_name	affected by a ||| affected	count=1
return	name of the ||| string	count=2
function_name	row from the ||| fetch	count=1
return	host specified by ||| string	count=1
function_name	this returns the hostname ||| get hostname	count=1
function_name	phrase fields pf ||| phrase fields	count=1
arg_pair	database ||| string $database resource $link_identifier	count=1
arg_pair	the key ||| int $timeout	count=1
function_name	of sybase_fetch_row() that uses ||| sybase	count=1
arg_pair	given ||| resource $psdoc float $llx	count=2
function_name	image ||| get image	count=2
function_name	[function_name_1] [function_name_2] ||| ziparchive string [function_name_1] [function_name_2] index int $index int	count=2
namespace	and restarts ||| evperiodic	count=1
function_name	in a file ||| metadata	count=1
return	a maxdb ||| resource	count=1
namespace	attached picture frame ||| ktaglib_id3v2_attachedpictureframe	count=1
function_name	[function_name_1] elements uri ||| [function_name_2] [function_name_1]	count=2
function_name	is completed ||| complete callback	count=1
namespace	parameter for ||| reflectionparameter	count=1
arg_pair	in a result set ||| resource $stmt string $classname	count=1
function_name	from a binary string ||| readimageblob	count=1
function_name	parameter if previously ||| parameter	count=1
function_name	generate a random number ||| random	count=1
arg_pair	of the column corresponding ||| int $field_offset	count=1
return	returns a ||| sqlite3result	count=1
function_name	client and ||| client	count=1
function_name	output headers from the ||| headers	count=1
namespace	evio watcher ||| evio	count=2
function_name	algorithms otherwise it ||| algorithm	count=1
function_name	internal [function_name_2] ||| [function_name_1] [function_name_2]	count=10
return	from the buffer provided ||| bool	count=1
namespace	is not ||| oauth	count=1
function_name	counts ||| count	count=3
function_name	the list [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	of string str in ||| string $str	count=1
arg_pair	data stored in data ||| resource $data	count=1
return	number for the ||| int	count=1
function_name	returns a [function_name] ||| [function_name]	count=2
function_name	buffered ||| buffer	count=1
function_name	position representing a row ||| fetch	count=2
function_name	closes the connection ||| close	count=1
function_name	doc comment ||| doc comment	count=3
arg_pair	and should fail ||| resource $session string $username	count=1
arg_pair	intensity of ||| float $threshold	count=1
function_name	retrieve the ||| get	count=1
function_name	[function_name_1] image to ||| [function_name_1] [function_name_2]	count=1
function_name	a given result identifier ||| ibase fetch object	count=1
return	is used to modify ||| bool	count=1
arg_pair	of text on the ||| string $text	count=1
function	[function_name_1] an ||| [arg_pair_2] [function_name_1]	count=3
function_name	cannot be represented with ||| metadata	count=1
function_name	route ||| current	count=1
function_name	[function_name_1] priority ||| [function_name_1] base [function_name_2]	count=1
arg_pair	with ||| resource $id array $config	count=1
function_name	matches the currently stored ||| apc cas	count=1
function_name	it shouldnt ||| set state	count=1
function_name	set the activation steepness ||| set activation steepness	count=1
function	[function_name_1] false ||| [arg_pair_2] [function_name_1]	count=12
function_name	but the field type ||| field type	count=1
function_name	file named by ||| to file	count=2
function_name	name used ||| fbsql database	count=1
function_name	header string ||| get request header	count=1
arg_pair	data and returns ||| string $data	count=1
function_name	matches ||| paint opaque	count=1
function_name	image with [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] with result ||| [function_name_2] [function_name_1]	count=3
arg_pair	pkcs12 into ||| string $pkcs12	count=1
arg_pair	specified by the object_id ||| string $timeout	count=1
function_name	[function_name_1] csr ||| [function_name_2] [function_name_1]	count=8
arg_pair	the socket to a ||| string $dsn boolean $force	count=1
return	by the ||| int	count=1
function_name	[function_name_1] a string ||| [function_name_1] [function_name_2]	count=3
function_name	parent ||| parent	count=1
arg_pair	the ||| int $timeout	count=1
function_name	raw request headers ||| raw request headers	count=3
namespace	be used in ||| function	count=1
namespace	the name ||| yaf_router	count=1
function_name	whether the ||| is	count=1
function_name	returns ||| ifx get	count=2
function_name	divides ||| div q	count=1
function_name	[function_name_1] idle callback ||| [function_name_2] [function_name_1]	count=1
function_name	by the last ||| last	count=1
return	to send to ||| bool	count=1
namespace	of the whole ||| function	count=1
namespace	iterator entry ||| splobjectstorage	count=1
function_name	performs an obscure ||| crack	count=1
function_name	this sets a specific ||| set object	count=1
return	named ||| string	count=1
function_name	counts the ||| count	count=1
return	returns [return] representing the ||| [return]	count=1
arg_pair	serializes the ||| mixed $var_name	count=1
arg_pair	given sequence and returns ||| resource $imap_stream string $sequence	count=1
arg_pair	a directory ||| string $directory	count=1
function_name	minimum out ||| min out	count=1
function_name	returns the album ||| get album	count=2
function_name	[function_name_1] the bit ||| [function_name_2] [function_name_1]	count=2
arg_pair	the gray value for ||| float $gray	count=1
function_name	[function_name_1] and sets ||| [function_name_2] [function_name_1]	count=2
function_name	by the ||| bzerrstr	count=1
namespace	the internet host ||| function	count=1
function_name	this function creates ||| create entity reference	count=1
function_name	password to ||| with password	count=1
namespace	method ||| mongocursorinterface	count=1
arg_pair	is posted by the ||| string $event_name1 string $event_name2	count=1
function_name	currently running php parser ||| phpversion	count=1
function_name	returns a quoted printable ||| quoted printable	count=1
arg_pair	sets an option on ||| resource $sh int $option	count=1
function_name	posix system error ||| posix strerror	count=1
function_name	field index ||| msql field	count=2
function_name	sets bigram phrase fields ||| set bigram phrase fields	count=1
arg_pair	containing a reconstructed image ||| int $metric	count=1
namespace	how the [namespace] completed ||| [namespace]	count=1
arg_pair	false ||| string $lib_dir	count=1
function_name	fills the path constructed ||| ps fill	count=1
arg_pair	[arg_pair_1] value ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	get error [function_name_2] ||| [function_name_2] [function_name_1]	count=5
return	without ||| bool	count=1
function_name	update ||| update	count=1
function_name	sets the minimum message ||| sybase min message	count=1
function_name	is set upon cubrid_execute() ||| result	count=1
function_name	end of ||| add buffer	count=1
function_name	enchant providers and ||| enchant	count=1
function_name	date parsers and ||| create from date string	count=1
return	grabs a ||| resource	count=1
function_name	gets default ||| get default	count=1
function_name	[function_name_1] authenticator ||| [function_name_1] [function_name_2]	count=2
function_name	resolve the ||| resolve	count=1
namespace	and ||| gmagick	count=1
function_name	single column of the ||| array column	count=1
namespace	directoryiterator back to the ||| directoryiterator	count=1
arg_pair	is the opposite of ||| string $string int $flags	count=1
arg_pair	pem encoded string and ||| array $configargs	count=1
function_name	ssl_cipher_description ssl api ||| ssl	count=1
return	cannot be represented ||| void	count=1
function	[function_name_1] a orig_name ||| [function_name_1] function [arg_pair_2]	count=1
function_name	earliest hook in yaf ||| router startup	count=1
function_name	error message for ||| mysqli stmt error	count=2
function_name	[function_name_1] information where ||| [function_name_2] [function_name_1]	count=6
function_name	the opendir readdir ||| eio readdir	count=1
namespace	id3v2 tag ||| ktaglib_id3v2_tag	count=2
function_name	white ||| white	count=2
function_name	places an imported ||| fit pdi	count=1
function_name	block algorithm ||| is block algorithm	count=2
namespace	persistent connection ||| sphinxclient	count=1
function_name	by gettext() and ||| bind textdomain	count=1
arg_pair	table databases ||| mixed $increment	count=1
function_name	resource socket created ||| socket	count=1
function_name	access ||| access	count=1
function_name	[function_name_1] [function_name_2] activation steepnesses array ||| [function_name_1] [function_name_2] activation steepnesses resource $ann	count=1
return	server to return multiple ||| bool	count=2
arg_pair	returns a resource ||| string $separator	count=1
function_name	[function_name_1] default domain ||| [function_name_1] [function_name_2]	count=1
function_name	that you have subscribed ||| lsub	count=1
function_name	the shared secret ||| server secret	count=1
function	decrypts [arg_pair_2] ||| [function_name_1] open [arg_pair_2]	count=3
arg_pair	the given string by ||| int $limit int $flags	count=1
arg_pair	of characters ||| int $offset string $encoding	count=2
function_name	cascade output stagnation ||| cascade output stagnation	count=3
function_name	fann ||| fann	count=1
function_name	sets ||| set callback	count=2
arg_pair	named column in a ||| resource $stmt mixed $column	count=1
function_name	stat call updates internal ||| stat	count=1
function_name	field in a ||| field	count=1
function_name	gets the number ||| imap num	count=1
function_name	default timezone ||| default timezone	count=1
arg_pair	the key from the ||| string $key	count=1
arg_pair	callback to [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] vendor [function_name_2]	count=2
function_name	[function_name_1] cache ||| [function_name_1] [function_name_2]	count=2
function_name	expand ||| add expand	count=1
function_name	encoding ||| pdf encoding	count=1
function_name	id3v2 object ||| id3v2 tag	count=1
function	[function_name_1] thats associated ||| [arg_pair_2] [function_name_1]	count=5
function_name	functions argument list ||| func get	count=1
function_name	[function_name_1] the version ||| [function_name_2] [function_name_1]	count=1
arg_pair	connects to a ||| string $host string $port	count=1
namespace	gmagick ||| gmagick	count=1
function_name	[function_name_1] pixel method ||| [function_name_2] [function_name_1]	count=2
function_name	constants currently defined ||| defined constants	count=3
function_name	row and moves the ||| fetch	count=2
function_name	input/output documents ||| tidy	count=1
function_name	to ||| to xml	count=2
function_name	global function ||| function	count=1
arg_pair	to ||| string $encoding bool $is_hex	count=1
function_name	last tuple for ||| last	count=1
function	[function_name_1] result ||| [function_name_1] array [arg_pair_2]	count=1
arg_pair	identical to htmlspecialchars() in ||| bool $double_encode	count=1
namespace	in subsequent closedir() readdir() ||| function	count=1
function_name	the users query ||| set query	count=1
arg_pair	to an ||| resource $pdfdoc	count=1
arg_pair	to other action ||| string $action array $paramters	count=1
namespace	for ||| gearmanclient	count=1
function_name	sends a request ||| send	count=2
arg_pair	enumerate all ||| callable $callback int $namechoice	count=1
function_name	minimum ||| facet enum cache min	count=1
function_name	the horizontal scaling ||| get horizontal scaling	count=2
arg_pair	reflected ||| mixed $argument bool $return	count=1
namespace	construct a ||| spltempfileobject	count=1
function_name	another ||| eio sendfile	count=2
function_name	through the socket socket ||| socket	count=1
function_name	gets the [function_name] for ||| get [function_name]	count=1
function_name	type corresponding to ||| geoip id by	count=1
namespace	type ||| reflectiontype	count=1
namespace	from ||| eventbuffer	count=1
function_name	evaluate ||| fx	count=1
namespace	get exception ||| stompexception	count=1
function_name	a request to execute ||| execute	count=1
arg_pair	of snmp ||| string $host string $community	count=2
arg_pair	text in ||| resource $pdfdoc string $text	count=1
function	[function_name_1] gmp number ||| [arg_pair_2] [function_name_1]	count=1
namespace	suitable for maxdb_options() ||| function	count=1
function_name	a stopped ||| stopped	count=1
function_name	opened ||| mcrypt enc	count=2
function	deletes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
namespace	given file pointer ||| function	count=1
return	engine ||| yaf_view_interface	count=1
function_name	gettext() and ||| textdomain	count=1
function_name	the form passed to ||| form	count=1
arg_pair	the specified ||| int $flags string $address	count=1
namespace	the current ||| recursivetreeiterator	count=1
function_name	sets the quality ||| mysqlnd ms set	count=1
function_name	stack trace as a ||| trace as string	count=2
return	existing ||| void	count=1
function_name	class for the ||| class	count=1
arg_pair	the specified class ||| mixed $class string $property	count=1
function_name	to be dismax ||| use dis max	count=2
arg_pair	at offset ||| int $offset	count=1
function_name	[function_name_1] methods ||| [function_name_1] [function_name_2]	count=2
function	recode [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	placeholder name which points ||| name	count=1
function_name	the page to fit ||| fit	count=1
function_name	the specified encoding ||| mb check encoding	count=1
arg_pair	a phar archive ||| string $filename	count=1
function_name	[function_name] entries ||| ldap [function_name]	count=1
function_name	virtual pixel method ||| virtual pixel method	count=3
function_name	creates a wddx packet ||| wddx serialize	count=1
function_name	specified events ||| wait event	count=1
arg_pair	used with the ||| resource $link_identifier	count=1
function_name	gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() this ||| run	count=1
function_name	printable string created according ||| printable	count=1
function_name	[function_name_1] index on ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] delay ||| [function_name_1] [function_name_2]	count=1
function_name	rows affected by the ||| fbsql affected rows	count=1
function_name	encoding the content ||| xfer encoding	count=1
function_name	[function_name_1] a weblink ||| [function_name_2] [function_name_1]	count=1
function_name	fork in ||| loop fork	count=1
function_name	mime header field ||| iconv mime	count=2
function_name	previous [function_name] could be ||| [function_name]	count=1
function_name	[function_name_1] options set ||| [function_name_2] [function_name_1]	count=1
function_name	has the bidi_mirrored property ||| mirrored	count=1
function_name	a callback ||| replace callback	count=1
arg_pair	with ||| resource $psdoc int $fontid	count=1
return	call starts running ||| bool	count=1
function_name	fills ||| fill stroke	count=2
arg_pair	contexts ||| array $dependencies bool $auto_enable	count=1
function_name	replace ||| replace	count=1
function_name	base type ||| type	count=2
function_name	a given local name ||| by tag name	count=1
function_name	backup or default summary ||| highlight alternate	count=1
function_name	enable highlighted snippets to ||| highlight	count=1
function_name	last connect error ||| connect error	count=1
namespace	for this job ||| gearmanjob	count=3
function_name	whole [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	new instance of a ||| string $progid	count=1
namespace	contents ||| cachingiterator	count=1
function_name	on ||| immortal	count=1
function_name	request [function_name_2] ||| [function_name_1] [function_name_2]	count=13
namespace	wsdl for the ||| soapclient	count=1
function_name	[function_name_1] handler callback ||| [function_name_1] nonce [function_name_2]	count=1
function_name	training not ||| fann	count=1
arg_pair	from the given ||| int $filters	count=1
function_name	an attribute [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	backpropagation neural network from ||| fann	count=1
function_name	methods suspend and resume ||| resume	count=1
function_name	bias in ||| bias array	count=1
function_name	[function_name_1] inner ||| [function_name_2] [function_name_1]	count=3
return	not ||| bool	count=1
function_name	sql aggregate function for ||| aggregate	count=1
function_name	[function_name] rows affected ||| [function_name]	count=3
function_name	[function_name_1] idle ||| [function_name_2] [function_name_1]	count=1
return	[return] version ||| [return]	count=1
function_name	own filter ||| filter	count=1
function_name	error code name ||| error name	count=3
function_name	fit the window ||| fit	count=3
function_name	stream fstream ||| stream	count=1
function_name	[function_name_1] job servers ||| [function_name_1] [function_name_2]	count=1
arg_pair	sets the gray value ||| float $gray	count=1
function_name	epochs determines the maximum ||| max cand	count=1
function_name	row in a result ||| fetch row	count=1
function_name	stored ||| set	count=1
arg_pair	number of characters ||| string $str int $width	count=1
function_name	to the service ||| gupnp service proxy get	count=1
function_name	return the full country ||| country	count=1
function_name	maximum supported keysize ||| mcrypt module get algo key size	count=1
arg_pair	position offset with ||| int $offset	count=1
function_name	[function_name_1] [function_name_2] responses from the php ||| [function_name_1] [function_name_2] string $faultcode string $faultstring	count=4
function_name	be dismax ||| dis max	count=1
function_name	the stream ||| stream	count=1
function_name	initializes the [function_name] and sets ||| [function_name]	count=1
function_name	md5 hash of ||| md5	count=1
function_name	[function_name_1] virtual pixel ||| [function_name_1] [function_name_2]	count=1
function_name	will [function_name] ||| [function_name] result	count=1
return	is only ||| mongoid	count=1
return	with gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| bool	count=1
function_name	with one ||| ingres fetch	count=1
arg_pair	the gray value for ||| resource $psdoc float $gray	count=1
function_name	one epoch with the ||| epoch	count=1
return	deletes its indices ||| array	count=1
function_name	reads [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	clear error string for ||| dbplus errcode	count=1
function_name	transparent ||| transparent paint	count=1
function_name	context ||| context get	count=1
function_name	the current cipher ||| get cipher info	count=1
function_name	behavior flags ||| flags	count=1
function_name	been closed [function_name_2] ||| [function_name_1] blob [function_name_2]	count=1
namespace	the server ||| mongocursor	count=1
function_name	notifies listening clients ||| gupnp service notify	count=1
arg_pair	from array1 against the ||| array $array1	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $progid [arg_pair_2]	count=10
arg_pair	on ||| resource $pdfdoc float $llx	count=1
function_name	[function_name_1] parameter at ||| [function_name_1] set [function_name_2]	count=1
arg_pair	of characters ||| string $str	count=1
function_name	remainder ||| gmp rootrem	count=1
function_name	patches ||| xdiff string bpatch	count=1
arg_pair	the ||| int $options	count=1
namespace	[namespace] a string ||| [namespace]	count=2
function_name	add routes defined ||| add	count=1
arg_pair	added to ||| string $file string $localname	count=1
function_name	minimum number ||| cascade min	count=1
return	server ||| mongocursor	count=1
function	after applying [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	error code ||| errno	count=1
function_name	row of a query ||| fetch	count=2
function_name	iterator that ||| iterator	count=2
function_name	root elements [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	with the ||| resource $shm_identifier	count=1
namespace	retrieves the current ||| solrinputdocument	count=1
arg_pair	data from the ||| string $data int $max_bytes	count=1
function_name	type of the ||| field type	count=1
return	before entering or continuing ||| void	count=1
function_name	prepares the timer event ||| event timer	count=1
function_name	[function_name_1] trace log ||| [function_name_2] [function_name_1]	count=2
function_name	the contrast of a ||| contrast	count=1
function_name	version of sybase_fetch_row() ||| sybase	count=1
arg_pair	specified mailbox ||| string $mailbox	count=1
function	[function_name_1] [arg_pair_2] ||| dba [function_name_1] [arg_pair_2]	count=1
function_name	information stored with a ||| metadata	count=1
arg_pair	by pkcs12 into ||| string $pkcs12	count=1
function_name	client library version ||| client info	count=1
function_name	enable highlighted snippets ||| highlight	count=1
function_name	running service ||| service	count=1
function_name	[function_name_1] error message ||| [function_name_1] [function_name_2]	count=2
function_name	get the ||| get current	count=1
arg_pair	input for fields in ||| string $input	count=1
return	string ||| string	count=1
namespace	converts ||| haruencoder	count=1
arg_pair	a php variable ||| mixed $variable	count=2
function_name	of encoding the content ||| xfer encoding	count=1
namespace	applying the stylesheet given ||| xsltprocessor	count=1
arg_pair	transparency [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
return	returns a ||| string	count=6
return	the name ||| string	count=1
arg_pair	the specified offset ||| int $offset	count=1
function_name	creates a new ||| construct	count=2
function_name	sets ||| set index	count=1
function_name	matches ||| paint	count=1
namespace	the appearance of ||| harudestination	count=3
function_name	nntp server ||| imap reopen	count=1
function_name	the blob length and ||| ibase blob	count=1
return	calculates and returns the ||| array	count=1
function_name	fill ||| fill	count=1
arg_pair	data and returns it ||| string $data	count=1
function_name	[function_name_1] large object ||| [function_name_2] [function_name_1]	count=4
arg_pair	of array1 with the ||| array $array2	count=1
function_name	active sub ||| get inner	count=1
function_name	a handler ||| handler	count=1
function_name	as the [function_name] ||| [function_name]	count=3
namespace	content ||| hw_api_content	count=1
arg_pair	address and port ||| string $address int $port	count=1
arg_pair	clients that the ||| int $type mixed $value	count=1
function_name	[function_name_1] an xml ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] names ||| [function_name_1] [function_name_2]	count=7
arg_pair	fd to ||| mixed $fd	count=1
arg_pair	expression match for a ||| string $option	count=1
arg_pair	or something in ||| mixed $array_or_countable int $mode	count=1
namespace	version being [namespace] the ||| [namespace]	count=1
function	[function_name_1] an ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	opposite of htmlentities() ||| string $string int $flags	count=1
namespace	directoryiterator back to ||| directoryiterator	count=1
function	[function_name_1] result ||| [function_name_1] [arg_pair_2]	count=2
return	called after a ||| void	count=1
function_name	to mongocollection::find() this method ||| find one	count=1
function_name	text number of characters ||| text	count=1
function_name	ldap pagination by ||| ldap	count=1
function_name	with spelling alternatives ||| quick	count=1
function_name	after preparing or ||| ifx	count=1
function_name	creates and [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	[arg_pair_1] events ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	png image from ||| imagepng	count=1
arg_pair	loop iteration after the ||| int $timeout	count=1
function_name	database cubrid gets ||| get	count=1
arg_pair	takes a ||| bool $assoc	count=1
arg_pair	to memcached::getmulti() except ||| string $cas_tokens	count=1
function_name	of [function_name] ||| get [function_name]	count=1
function_name	this field ||| field	count=1
arg_pair	the values of array1 ||| array $array1	count=3
arg_pair	a page ||| string $dest	count=1
function_name	pdi document parameter with ||| pdi value	count=1
return	with the difference that ||| resource	count=1
return	of columns ||| int	count=2
namespace	is effective in the ||| yaf_router	count=1
function_name	the array consisting ||| preg grep	count=1
arg_pair	connection resource ||| bool $value	count=1
function_name	cubic bézier curve described ||| ps curveto	count=1
function_name	[function_name_1] sarprop ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] factor used ||| [function_name_1] [function_name_2]	count=6
return	object ||| resource	count=1
function_name	an ||| image	count=4
function_name	low priority ||| low	count=1
arg_pair	after the socket ||| int $backlog	count=1
namespace	function behaves ||| function	count=1
function_name	and table_set ||| apache note	count=1
function_name	event handler ||| event handler	count=1
function_name	only be used to ||| set metadata	count=1
namespace	syncsemaphore object or waits ||| syncsemaphore	count=1
function_name	all the nsapi response ||| nsapi response	count=1
function_name	given column in ||| column	count=1
function_name	imap timeout ||| imap timeout	count=2
arg_pair	oldname to newname moving ||| string $oldname string $newname	count=1
arg_pair	memcached::getmulti() except that the ||| string $cas_tokens	count=1
return	retrieves ||| string	count=2
namespace	error ||| error	count=3
namespace	and restarts the ||| evperiodic	count=1
function_name	and directories optionally ||| ls	count=1
function_name	data [function_name] ||| [function_name] fetch array	count=1
function_name	convolution filter ||| edge	count=1
function_name	creates a ||| construct	count=1
function_name	this function [function_name] ||| bbcode [function_name]	count=2
function_name	font [function_name_2] ||| [function_name_1] [function_name_2]	count=10
return	from ||| array	count=2
function	directories optionally [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	an extended attribute ||| xattr	count=2
function_name	by csr and ||| openssl csr export to	count=1
function_name	the last ||| errno	count=1
arg_pair	is a**r)/gamma r * ||| float $r	count=1
arg_pair	functions returns the input ||| string $input	count=1
namespace	cursor position of the ||| function	count=1
function_name	string with error ||| error	count=1
return	determine whether a ||| bool	count=1
function_name	list of all servers ||| list	count=1
arg_pair	a pseudo-object from ||| int $fetch_flag	count=1
return	more content to ||| bool	count=1
function_name	connection ||| connection	count=3
function_name	deletes the given ||| delete file	count=1
return	number ||| array	count=1
arg_pair	for reading a directory ||| string $directory resource $context	count=1
arg_pair	data and returns ||| string $data string $mode	count=1
function_name	the number ||| num fields	count=2
arg_pair	watcher automatically ||| mixed $data int $priority	count=1
function_name	generate a random ||| gmp random	count=1
function_name	sets the transaction ||| fbsql set transaction	count=3
function_name	or anonymous oracle ||| oci	count=1
function_name	elements uri ||| uri	count=1
function_name	internet connection type corresponding ||| geoip id by name	count=1
function_name	executable ||| executable	count=3
arg_pair	options that affect the ||| array $options	count=1
arg_pair	records specified by assoc_array ||| int $options	count=1
return	the table specified ||| mixed	count=1
function_name	[function_name] to ||| [function_name]	count=5
function_name	returns root elements name ||| get root element name	count=1
function_name	the country and region ||| region	count=1
function_name	[function_name_1] any ||| [function_name_2] [function_name_1]	count=1
function_name	a result of oci_parse() ||| statement	count=1
namespace	hash in ||| quickhashstringinthash	count=1
function_name	escapes ||| pg escape	count=1
arg_pair	the ||| int $events	count=1
function_name	off the ||| disable	count=1
function_name	the user ||| set state	count=1
function_name	if true return ||| terms return	count=1
function_name	copies data ||| pgsql copy from array	count=1
return	not for ||| bool	count=1
arg_pair	corresponds to the ||| resource $result	count=1
function_name	identifier ||| fbsql fetch row	count=1
return	not block on ||| resource	count=1
arg_pair	format ||| int $width	count=1
function_name	[function_name_1] an xml ||| [function_name_1] [function_name_2]	count=1
function_name	to group results ||| add group	count=2
arg_pair	a rpc ||| string $uri	count=1
function_name	on debug output ||| debug	count=1
function_name	frees the memory associated ||| free	count=1
function_name	for the given ||| set	count=1
function_name	exports ||| openssl pkey export	count=2
function_name	the specified action return ||| gupnp service action	count=1
function_name	time [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	get or ||| function	count=1
function_name	a doc ||| doc	count=1
arg_pair	given number of characters ||| string $str int $width	count=1
function_name	[function_name_1] the default ||| [function_name_2] timezone [function_name_1]	count=1
function_name	sub path and ||| sub pathname	count=1
arg_pair	point ||| float $y	count=1
arg_pair	for the specified ||| mixed $x509cert	count=1
function_name	config ||| config	count=1
function_name	fit the width ||| fit	count=1
arg_pair	zlib data format ||| int $level	count=1
function_name	start ||| start	count=3
function_name	new control point with ||| gupnp control point new	count=1
arg_pair	by fd ||| mixed $fd	count=2
return	if the array ||| bool	count=1
function_name	copies mail ||| mail copy	count=2
function_name	sample bitrate ||| sample bitrate	count=2
function_name	php tags stripped ||| tags	count=1
function_name	gets the size of ||| size	count=1
function_name	the total number of ||| total	count=1
arg_pair	of ||| int $y int $channel	count=1
arg_pair	the callback given ||| callable $callback mixed $parameter	count=1
function_name	frees the key associated ||| free key	count=1
function_name	cookie parameters ||| cookie params	count=2
function_name	removes attribute ||| remove attribute	count=4
function	exists in [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	by the current boost ||| solrinputdocument	count=1
function_name	unnecessary the phar::startbuffering() ||| buffering	count=1
namespace	packets for a task ||| gearmanclient	count=1
function	function creates [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] distinguished name ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	into a mysqlnd connection ||| to mysqlnd	count=1
arg_pair	the server thats associated ||| string $database_name resource $link_identifier	count=1
arg_pair	returns str with all ||| string $encoding	count=1
function_name	closes the request ||| close prepare	count=1
function_name	stream fstream or string ||| get stream	count=1
function_name	xmlrpc ||| xmlrpc	count=1
function_name	named virtual read-only ||| pvf	count=1
arg_pair	mode to be used ||| string $mode_directory	count=1
function_name	[function_name_1] whitespace removed ||| [function_name_2] [function_name_1]	count=1
function_name	directory [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	motion blur ||| motion blur image	count=2
function_name	on ||| cal	count=1
arg_pair	a variable ||| string $key mixed $var	count=1
function_name	key size ||| key size	count=1
return	point is ||| bool	count=1
function_name	ending [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	and should ||| resource $session string $username	count=1
arg_pair	the item will be ||| mixed $value	count=1
return	parameter [return] less ||| [return]	count=1
function	stops [arg_pair_2] ||| [function_name_1] service [arg_pair_2]	count=1
namespace	object ||| hw_api	count=1
function_name	to midnight on easter ||| easter	count=1
namespace	and enable user error ||| function	count=1
function_name	threshold ||| threshold	count=2
return	string into ||| int	count=1
function_name	api version number if ||| version	count=1
function_name	default value ||| default value	count=2
function_name	mime content type ||| mime content type	count=3
function_name	the [function_name] the mysqli ||| get [function_name] info	count=1
function_name	multibyte regex ||| mb regex	count=2
function_name	fetches a row as ||| object	count=1
function_name	variables and add the ||| add	count=1
function_name	the border dash style ||| border dash	count=1
function_name	request has been ||| request	count=1
function_name	effective in the route ||| get current route	count=1
arg_pair	the specified connection resource ||| resource $connection bool $value	count=1
arg_pair	sends the specified ||| int $flags string $address	count=1
namespace	a member ||| domelement	count=1
arg_pair	[arg_pair] by ||| [arg_pair]	count=1
function_name	[function_name_1] tokens ||| [function_name_2] [function_name_1]	count=1
function_name	transforms an image ||| transform image	count=2
function_name	frequency used ||| default frequency	count=1
function_name	attempt to ||| conn	count=1
function_name	its nodename ||| get named item	count=1
arg_pair	by given oid ||| string $oid	count=1
function_name	file or url ||| file	count=1
function_name	deletes ||| pdf delete pvf	count=2
namespace	function is similar ||| function	count=6
arg_pair	a file ||| string $filename int $start	count=1
function_name	of the [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	page and scales it ||| page	count=1
function_name	local name ||| by tag name	count=1
return	environments ||| bool	count=1
function_name	[function_name_1] size associated ||| [function_name_2] [function_name_1]	count=1
arg_pair	from the ||| int $filters	count=1
function_name	ends a page ||| end	count=1
function	anchor [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	binds ||| bind array	count=1
function_name	record in the current ||| yaz record	count=1
namespace	callable function used ||| function	count=3
rest	to [function_2] ||| [return_1] id3 [function_2]	count=1
arg_pair	with ||| resource $result	count=1
function_name	defines or redefines ||| ncurses init pair	count=1
function_name	current line [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	connection to address using ||| string $address	count=1
function_name	write operations [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] an index ||| [function_name_1] [function_name_2]	count=1
arg_pair	[arg_pair_1] given parameters ||| array imap sort [arg_pair_2] [arg_pair_1]	count=1
return	the buffer provided in ||| bool	count=1
function	[function_name_1] of working ||| [arg_pair_2] [function_name_1]	count=3
namespace	database has no ||| mongocursorinterface	count=1
return	digit value of ||| int	count=1
function_name	exchange the ||| exchange	count=1
arg_pair	timestamp ||| int $timestamp int $format	count=2
arg_pair	messages from domain returned ||| string $domain	count=1
function_name	cascade output [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	of the ||| bool	count=1
namespace	libevent ||| eventconfig	count=1
arg_pair	all of the ||| resource $ann int $activation_function	count=1
namespace	this function retrieves the ||| hw_api	count=1
namespace	results ||| mongocursorinterface	count=1
function_name	name ||| get current	count=1
arg_pair	converts it into a ||| string $json	count=1
namespace	of tasks ||| gearmanclient	count=1
arg_pair	the [arg_pair] including the ||| [arg_pair]	count=1
function	if it [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	problem as an oauthexception ||| report problem	count=1
function_name	[function_name_1] matte color ||| [function_name_1] [function_name_2]	count=2
namespace	is still ||| solrdocument	count=1
function_name	last attempt ||| conn error	count=1
arg_pair	options passed to ||| string $options array $longopts	count=1
arg_pair	number of characters using ||| int $width	count=1
function_name	column ||| cubrid column	count=1
function_name	pdi document parameter ||| pdf get pdi value	count=1
function_name	current process [function_name] the amount ||| [function_name] nice	count=1
function_name	include the ||| include	count=4
arg_pair	string input ||| string $input string $delimiter	count=1
function_name	[function_name_1] node ||| [function_name_2] [function_name_1]	count=3
function_name	combining ||| combining	count=1
arg_pair	str ||| string $encoding	count=1
arg_pair	path ||| string $path int $flags	count=1
function_name	mean square error from ||| mse	count=1
arg_pair	specified object_id ||| string $timeout	count=1
return	return a ||| string	count=1
arg_pair	the number of characters ||| int $offset string $encoding	count=1
function_name	sunset time for a ||| date sunset	count=1
arg_pair	filtertype on ||| resource $image int $filtertype	count=1
function_name	cascade output stagnation epochs ||| cascade output stagnation epochs	count=1
function	algorithms otherwise [arg_pair_2] ||| [function_name_1] mode [arg_pair_2]	count=1
arg_pair	the given key ||| int $max_acquire	count=1
function_name	pdf page ||| pdf	count=1
arg_pair	on the ||| resource $stream_or_context array $params	count=1
namespace	tracing of ||| function	count=1
arg_pair	prepares a ||| resource $conn	count=1
function_name	quality ||| quality	count=2
arg_pair	on the ||| int $arg3	count=1
arg_pair	requested option from ||| resource $ftp_stream int $option	count=1
function_name	\n and \r ||| nl2br	count=1
function_name	the external [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	translates the ||| translate	count=1
function_name	or adds ||| add	count=1
function	size and [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	facet ||| facet	count=8
function_name	objects contents ||| load	count=1
function_name	the currently stored value ||| apc	count=1
function_name	adds ||| readline add	count=1
function_name	certain [function_name] ||| ps set [function_name]	count=1
arg_pair	the key to a ||| mixed $value	count=1
function_name	criteria and sort direction ||| sort	count=1
return	a boolean indicating whether ||| bool	count=2
function	given [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	object is of ||| object $object string $class_name	count=1
function_name	the horizontal ||| get horizontal	count=1
function_name	databases available ||| list dbs	count=1
function_name	default namespace ||| default namespace	count=1
function_name	[function_name_1] config ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] result ||| [function_name_2] error [function_name_1]	count=1
function_name	the same ||| to	count=1
function_name	event loop for ||| loop	count=1
function_name	retrieve [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	type base64 or ||| type	count=1
arg_pair	the color [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=5
function_name	the last issued error ||| msql error	count=1
function_name	number for the given ||| number	count=1
function_name	e raised to the ||| exp	count=1
arg_pair	entries of array1 ||| array $array2	count=1
arg_pair	the values of array1 ||| array $array1 array $array2	count=3
function_name	[function_name_1] name of ||| [function_name_2] [function_name_1]	count=5
function_name	[function_name_1] rate is ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] row ||| [function_name_1] [function_name_2]	count=2
function_name	ldap link identifier and ||| ldap	count=1
return	using nonzero winding number ||| bool	count=1
function_name	is delivered ||| pcntl	count=1
arg_pair	pl/sql ||| int $max_item_length	count=1
function_name	oauthprovider::timestampnoncehandler() ||| nonce	count=1
function	status [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
function_name	used to ||| maxdb debug	count=1
function_name	the candidate [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] thats ||| [arg_pair_2] [function_name_1]	count=5
namespace	in [namespace] to ||| [namespace]	count=1
arg_pair	options passed ||| array $longopts	count=1
function_name	gets the size ||| size	count=1
function_name	are delivered ||| pcntl sigwaitinfo	count=1
function_name	ldap link identifier and ||| ldap connect	count=1
function_name	[function_name_1] the train ||| [function_name_2] [function_name_1]	count=4
arg_pair	creates a ||| resource $sftp	count=1
function_name	fdf [function_name] ||| fdf [function_name]	count=2
return	returns a string containing ||| string	count=3
namespace	the reflected method ||| reflectionmethod	count=1
arg_pair	of ||| int $service_level_option	count=1
function_name	image virtual [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	parameter at [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	with ||| resource	count=4
function_name	[function_name] the ||| get last [function_name]	count=1
arg_pair	the callback function ||| callable $callback	count=2
function_name	root of a ||| root	count=1
function_name	for the buffered ||| buffer	count=1
function_name	version number [function_name_1] [function_name_2] is linked with ||| [function_name_1] [function_name_2]	count=1
function_name	sets a specific ||| set object	count=1
function_name	get unpacked [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	sends a ||| function	count=1
function_name	resolve the given ||| resolve	count=1
function_name	[function_name_1] orientation ||| [function_name_1] [function_name_2]	count=1
function_name	index on ||| index	count=1
arg_pair	specified algorithm ||| string $algorithm string $lib_dir	count=1
namespace	with gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| gearmanclient	count=1
arg_pair	b black ||| resource $pdfdoc float $b	count=1
function_name	a [function_name] the current ||| [function_name]	count=1
function_name	creates new ||| construct	count=1
function_name	current text transformation matrix ||| get text matrix	count=1
function_name	file has been reached ||| eof	count=1
function_name	class ||| node class	count=2
arg_pair	of the ||| array $params	count=1
arg_pair	attempts ||| string $database_name	count=1
function_name	each query inspected ||| mysqlnd qc	count=1
function_name	this function removes an ||| remove	count=1
arg_pair	to the ||| int $expire	count=1
function_name	local tag ||| by tag	count=1
function_name	csr and stores ||| csr	count=1
arg_pair	supplied hash ||| string $hash integer $algo	count=1
function_name	returns a list ||| broker list	count=1
function_name	the maximum ||| max	count=4
namespace	32-bit number with the ||| mongoint32	count=1
arg_pair	with table databases ||| mixed $increment	count=1
function_name	static [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] error code ||| [function_name_1] [function_name_2]	count=5
arg_pair	can be added ||| string $localname	count=1
function_name	[function_name] in ||| get [function_name]	count=1
arg_pair	sql statement directly ||| resource $connection string $statement	count=1
return	object ||| mixed	count=2
function_name	size and ||| size offset	count=1
namespace	more ||| mongocursorinterface	count=1
function_name	[function_name_1] image matte ||| [function_name_2] [function_name_1]	count=1
function_name	primary member ||| is primary	count=2
arg_pair	the behavior of ||| int $limit int $count	count=1
function_name	resource suitable for ||| maxdb	count=1
function_name	[function_name] objects ||| [function_name] except	count=1
function_name	[function_name] instead of ||| [function_name]	count=3
arg_pair	hash implements the algorithm ||| integer $algo	count=1
namespace	associative or numerically indexed ||| sqlite3result	count=1
function_name	aggregation framework provides a ||| aggregate	count=1
function_name	places an image and ||| pdf place image	count=1
function_name	host ||| gethostbyaddr	count=2
namespace	reflectionmethod ||| reflectionmethod	count=1
namespace	defaultly yaf_router ||| yaf_router	count=1
function_name	synchronously [function_name] ||| [function_name] service proxy action get	count=1
function_name	[function_name_1] attributes ||| [function_name_2] [function_name_1]	count=7
return	to return the ||| void	count=1
function_name	an associated namespace ||| ns	count=1
function_name	[function_name_1] current status ||| [function_name_2] [function_name_1]	count=1
return	existing information stored with ||| void	count=1
function_name	lob object ||| lob2	count=4
function_name	request token secret and ||| get request token	count=1
function_name	representing the type ||| type	count=1
function_name	an odbc query ||| odbc	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] lob [function_name_2]	count=4
function	creates [arg_pair_2] ||| domdocument domattr [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] list [function_name_1]	count=12
function_name	pixel in the image ||| tint image	count=1
arg_pair	current domain ||| string $msgid1	count=1
return	value for ||| float	count=1
return	the buffer provided ||| bool	count=1
function_name	add required [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	retrieve current controller ||| controller	count=1
arg_pair	a pseudo-object from ||| resource $result_id int $fetch_flag	count=1
function_name	statement parameter ||| param	count=1
namespace	instance of [namespace] ||| [namespace]	count=1
function_name	when launched via ||| win32 start	count=1
arg_pair	or the closest ||| int $blue	count=1
function_name	sets ||| ldap set	count=1
namespace	following [namespace] ||| [namespace]	count=2
arg_pair	number database ||| string $host	count=1
function_name	status callbacks ||| callbacks	count=1
arg_pair	of key ||| mixed $key	count=1
function_name	number of [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	fit the window ||| fit v	count=1
arg_pair	snmp object [arg_pair_2] ||| [arg_pair_1] [arg_pair_2] string $retries	count=1
function_name	[function_name_1] csr and ||| [function_name_1] [function_name_2]	count=8
function_name	function creates ||| create	count=2
function_name	exports ||| export	count=6
function_name	[function_name_1] squares ||| [function_name_1] [function_name_2]	count=8
function_name	the next ||| next	count=5
arg_pair	submits a command ||| string $query	count=1
function_name	the specified field ||| msql field	count=1
arg_pair	the query result ||| resource $result	count=1
function_name	the total ||| total	count=2
function_name	code from ||| code	count=1
function_name	provides a stride value ||| stride for width	count=1
function_name	this method updates ||| update	count=1
function_name	a set of ||| run	count=1
function_name	socket is bound ||| socket name	count=1
arg_pair	by hostname ||| string $hostname	count=2
function_name	ssl ||| ssl get	count=1
function_name	authentication [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] slop ||| [function_name_1] [function_name_2]	count=6
function_name	to reduce the array ||| reduce	count=1
arg_pair	constructs a ||| string $name	count=1
function	statistics about [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	checks this ||| bool	count=1
function_name	[function_name_1] glo ||| [function_name_1] [function_name_2]	count=3
function_name	both built-in internal and ||| function	count=1
function_name	target frame ||| target frame	count=2
function_name	sends a message ||| msg send	count=1
function_name	determines the minimum ||| min	count=1
function_name	length ||| length	count=6
function_name	[function_name_1] depth as ||| [function_name_1] [function_name_2]	count=1
function_name	an object ||| object	count=5
function_name	number of tidy warnings ||| warning	count=1
function_name	sets ||| setimagecolorspace	count=1
arg_pair	options supplied in options ||| array $params	count=1
arg_pair	name of the ||| int $field_number	count=1
arg_pair	[arg_pair] fetched ||| [arg_pair]	count=1
arg_pair	parses key ||| mixed $key	count=1
arg_pair	the ||| int $to_neuron float $weight	count=1
function_name	of encoding ||| xfer encoding	count=1
arg_pair	whitespace or ||| string $character_mask	count=1
function	[function_name_1] with a ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	render a ||| string $tpl array $tpl_vars	count=1
function_name	variables ||| variables	count=2
namespace	which is described in ||| function	count=1
function_name	third parameter to ||| previous	count=1
function_name	to use for validation ||| set relax ngschema source	count=1
function_name	from ingres ||| ingres	count=1
function_name	ingres server ||| ingres	count=2
arg_pair	the object_id ||| string $type	count=2
function	name [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
namespace	[namespace] the maxdb ||| [namespace]	count=1
function_name	in ||| current	count=1
function_name	[function_name_1] activation steepness ||| [function_name_1] [function_name_2]	count=1
function_name	suitable for ||| maxdb	count=1
arg_pair	the sql statement and ||| resource $conn_identifier string $sql	count=1
return	[return] identical ||| [return]	count=1
function_name	that contains replacement pairs ||| pspell config repl	count=1
function_name	if the corresponding geoip ||| geoip	count=1
function_name	containing the imagemagick license ||| image magick license	count=1
function	[function_name_1] php variable ||| [function_name_1] [arg_pair_2]	count=1
namespace	later [namespace] event_base_set() event_base_loop() ||| [namespace]	count=1
function_name	through a cursor ||| cursor	count=1
function_name	the activation function ||| fann get activation function	count=1
arg_pair	start and ||| string $string int $start	count=1
arg_pair	the ||| int $limit int $flags	count=1
function_name	busy ||| busy	count=1
return	identifier to pointer to ||| bool	count=1
function_name	link on [function_name] ||| [function_name] sftp lstat	count=1
function_name	the [function_name] of ||| [function_name]	count=2
function_name	as event handler for ||| set event handler	count=1
function_name	bidirectional algorithm uax #9) ||| char direction	count=1
function_name	the file extension ||| extension	count=2
return	not for production ||| bool	count=1
function_name	[function_name_1] the increase ||| [function_name_1] rprop [function_name_2]	count=1
function_name	the text ||| text	count=3
arg_pair	the principal and the ||| string $principal string $password	count=1
function_name	set the activation steepness ||| fann set activation steepness	count=1
return	[return] end of ||| [return]	count=3
namespace	evstat ||| evstat	count=1
function_name	the ||| buffer	count=2
arg_pair	php variable ||| mixed $variable	count=2
function_name	font and ||| load font	count=1
function_name	[function_name_1] increase ||| [function_name_2] [function_name_1]	count=1
function_name	cursor has been exhausted ||| dead	count=1
function_name	a random ||| random range	count=1
function_name	sets various internal ||| info	count=1
function_name	[function_name_1] signal ||| [function_name_2] [function_name_1]	count=1
function	train [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	memcached::getmulti() except that ||| string $cas_tokens int $flags	count=1
function_name	point [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	represented in base ||| base	count=1
function_name	entry contents ||| from	count=1
namespace	the hash ||| quickhashintstringhash	count=2
function_name	the minimum ||| mssql min	count=1
arg_pair	something ||| int $mode	count=1
function_name	executes one [function_name_2] ||| [function_name_1] bulk [function_name_2]	count=2
function_name	file handler ||| get stream	count=1
function_name	is opened or not ||| opened	count=1
function_name	distributing reads to secondaries ||| slave okay	count=3
return	gearmanclient::addtaskhigh() ||| bool	count=1
function_name	service process ||| win32	count=1
function_name	[function_name_1] fail ||| [function_name_2] [function_name_1]	count=3
arg_pair	the value of an ||| string $timeout	count=1
function	[function_name_1] [arg_pair_2] ||| bool [function_name_1] [arg_pair_2] bool $overwrite	count=2
function_name	request to execute ||| pg execute	count=1
arg_pair	them in fd ||| int $protocol array $fd	count=1
arg_pair	for an ||| mixed $codepoint	count=1
return	a function [return] call ||| [return]	count=1
function_name	can ||| can	count=1
function_name	of the activation ||| activation	count=1
function_name	the apc cache ||| apc	count=1
arg_pair	html ||| string $reason	count=2
function_name	replaces the [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	of any pixel color ||| imagick	count=1
function_name	the query ||| query chars	count=1
function_name	of any pixel color ||| unique image	count=1
arg_pair	the ||| resource $ann	count=7
function	export [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	row in a ||| fetch	count=4
function_name	the group ||| posix	count=1
namespace	attribute ||| hw_api_object	count=1
namespace	to yar_concurrent_client::loop() ||| yar_concurrent_client	count=1
arg_pair	fetches one row of ||| int $fetch_flag	count=1
namespace	determine ||| splfileobject	count=1
namespace	file ||| directoryiterator	count=1
function_name	an exception ||| set exception	count=1
function_name	alphabetic ||| alpha	count=1
return	using to generate unique ||| string	count=1
arg_pair	be used afterward by ||| string $baseclass string $extendedclass	count=1
arg_pair	a ||| string $filename int $flags	count=1
arg_pair	a key-value ||| mixed $keys string $value	count=1
namespace	end ||| splfileobject	count=1
function_name	idle ||| idle	count=1
arg_pair	matching the target color ||| mixed $target	count=1
function_name	the scp protocol ||| scp recv	count=1
arg_pair	up or down ||| int $width	count=1
function_name	the server pool ||| server	count=1
arg_pair	to a ||| string $qmanagername	count=1
function_name	[function_name_1] nonce handler ||| [function_name_1] [function_name_2]	count=1
function_name	name [function_name_2] ||| [function_name_2] cipher [function_name_1]	count=1
function_name	next ||| cubrid next	count=1
namespace	function that can ||| function	count=4
return	without performing filling ||| bool	count=1
arg_pair	requested option from the ||| int $option	count=1
function_name	retrieves ||| get	count=3
function_name	set a [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	when the ||| resource $result int $type	count=1
function_name	compression method of an ||| compression	count=1
function_name	returns internal ||| get internal	count=6
arg_pair	wrapper is initialized f ||| string $opened_path	count=1
arg_pair	on the local ||| resource $connection	count=1
namespace	used to trace ||| function	count=1
function_name	a formerly loaded ||| ps place	count=1
function_name	most ||| last	count=1
function_name	percent value ||| percent	count=1
function_name	root for all pages ||| set pages configuration	count=1
function_name	the training ||| input train	count=1
return	file descriptor to ||| bool	count=1
function_name	an oil painting ||| oil paint image	count=1
arg_pair	a new mailbox ||| resource $imap_stream string $mailbox	count=1
function	divides [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] bulk [function_name_2]	count=8
function_name	any pixel ||| image	count=1
function_name	[function_name_1] query timeout ||| [function_name_2] [function_name_1]	count=2
arg_pair	the end [arg_pair] ||| [arg_pair]	count=1
arg_pair	on ||| resource $psdoc	count=1
function_name	specified status ||| task status	count=1
function_name	fdf ||| fdf	count=1
function_name	this is a convenience ||| fdf header	count=1
function	base64 encoded [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	the given source string ||| string $source int $flags	count=1
function_name	cursorname ||| odbc cursor	count=1
arg_pair	a text rectangle ||| string $text	count=1
arg_pair	imagetype_xxx constant ||| bool $include_dot	count=1
arg_pair	changes the transparency ||| float $fuzz	count=1
function_name	object from bson ||| bson unserialize	count=1
namespace	the ||| evloop	count=2
function	[function_name_1] [arg_pair_2] region ||| [function_name_1] code [arg_pair_2]	count=2
function_name	[function_name_1] with one ||| [function_name_2] [function_name_1]	count=8
function_name	returns the comment ||| get comment	count=4
function_name	terminals input buffer ||| newt clear key buffer	count=1
function_name	consider for ||| highlight fragsize	count=1
function_name	audio properties of the ||| audio properties	count=1
arg_pair	a wrapper for ||| string $note_name	count=1
function_name	on phrase queries ||| phrase	count=1
return	a text error message ||| string	count=1
function_name	to share data between ||| share	count=1
arg_pair	[arg_pair_1] its indexes ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	returns ||| dbase get header	count=1
function_name	the tasks in ||| run tasks	count=1
function_name	converts an extended json ||| db\bson\from json	count=1
function_name	scales ||| scale output	count=1
arg_pair	dn which ||| array $dn	count=1
function_name	color definitions using ncurses_init_color() ||| color	count=1
function_name	the previous [function_name] ||| [function_name]	count=1
return	attribute to ||| bool	count=4
function_name	internally it ||| state	count=1
function_name	syntax highlighted version ||| highlight file	count=1
return	suitable ||| resource	count=1
namespace	function in that ||| function	count=1
function_name	object or adds ||| pdf add	count=1
function_name	the specified color+alpha in ||| imagecolorexactalpha	count=1
function_name	and maxdb_real_connect() ||| maxdb	count=1
function_name	[function_name_1] query with ||| [function_name_2] [function_name_1]	count=1
function_name	facet [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	new ||| int	count=2
function_name	have ||| listscan	count=1
arg_pair	pointer of the ||| resource $result_identifier	count=2
function_name	will return the region [function_name_1] [function_name_2] ||| [function_name_2] region [function_name_1] by	count=2
function_name	line width for the ||| line width	count=1
function_name	is a block algorithm ||| is block algorithm	count=1
namespace	event connect listener object ||| eventlistener	count=1
function_name	connection ||| pg connection	count=1
return	receiving numeric ||| int	count=1
namespace	set object ||| sqlite3stmt	count=1
function_name	fetches a row ||| object	count=1
arg_pair	outputs or save a ||| resource $image	count=1
namespace	of the properties ||| solrobject	count=1
arg_pair	a ||| string $width string $height	count=1
return	get or set ||| string	count=1
namespace	function is not ||| function	count=2
arg_pair	library using the principal ||| string $password	count=1
function_name	[function_name_1] [function_name_2] responses from the php ||| [function_name_1] [function_name_2]	count=4
function_name	to creating ||| get active	count=1
function_name	output buffer if any ||| ob flush	count=1
function_name	[function_name_1] with ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name] provided ||| [function_name] register	count=1
function_name	[function_name_1] the candidate ||| [function_name_1] [function_name_2]	count=1
function_name	the request handle ||| request	count=1
function_name	the array iterator ||| iterator	count=1
function_name	training data ||| train	count=3
function_name	the iv belonging ||| iv	count=1
function_name	encoded string and ||| openssl	count=1
function_name	the oid ||| oid	count=1
function_name	[function_name_1] proxy ||| [function_name_2] [function_name_1]	count=2
function	extract [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	returns one [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] file ||| [function_name_2] [function_name_1]	count=6
function_name	rot13 encoding on ||| rot13	count=1
arg_pair	scales the ||| int $width int $height	count=1
function_name	training data [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	by assoc_array which ||| int $options	count=1
function_name	requests ||| getlock	count=1
function_name	error code from ||| error code	count=2
function_name	4713 b ||| juliantojd	count=1
namespace	entry was update ||| quickhashinthash	count=1
arg_pair	object in the database ||| int $oid	count=1
function_name	environment ||| setenv	count=1
function_name	[function_name_1] album ||| [function_name_2] [function_name_1]	count=1
arg_pair	indexed by column position ||| resource $stmt int $row_number	count=1
function_name	literal for querying ||| literal	count=1
function_name	hidden [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	starting from object_id and ||| string $object_id int $timeout	count=1
return	or gearmanclient::addtasklowbackground() this ||| bool	count=1
function_name	sizes [function_name_2] ||| get [function_name_2] key [function_name_1]	count=1
function_name	database [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] with one ||| [function_name_1] [function_name_2]	count=8
namespace	query was sent too ||| mongocursorexception	count=1
namespace	as a member of ||| domelement	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] fit pdi [function_name_2]	count=4
function_name	the tasks ||| tasks	count=1
function_name	iteration [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	ignoring case ||| ireplace	count=1
arg_pair	of characters ||| int $offset	count=2
arg_pair	for each address ||| string $default_host	count=1
function_name	termination once execution of ||| child terminate	count=1
function	two-dimensional [arg_pair_2] ||| [function_name_1] string $type [arg_pair_2]	count=4
function_name	gets the numeric ||| get numeric	count=1
function_name	field in [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	it as ||| string $class_name	count=1
namespace	using tag the ||| function	count=1
namespace	64-bit number with the ||| mongoint64	count=1
function_name	filename that will be ||| filename	count=1
arg_pair	a ||| resource $p	count=2
function_name	[function_name_1] default timezone ||| [function_name_2] [function_name_1]	count=2
function_name	rrd database ||| rrd lastupdate	count=1
function_name	scm of the current ||| win32	count=1
namespace	the chromaticity ||| gmagick	count=2
namespace	the referenced thread ||| thread	count=1
function_name	creates a fresh copy ||| repair	count=1
function_name	as a ||| ibase fetch object	count=1
function_name	stub so this ||| set stub	count=1
function_name	query multiple queries ||| mysql query	count=1
function_name	weight decay [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	gets the text interword ||| text interword	count=1
arg_pair	maxlength bytes and ||| int $maxlength	count=1
function_name	for julian calendar 4713 ||| juliantojd	count=1
function_name	[function_name_1] page and ||| [function_name_1] [function_name_2]	count=1
return	and for each ||| array	count=1
arg_pair	socket_create() or socket_accept() functions ||| int $length	count=1
function_name	language described/referred ||| enchant broker set ordering	count=1
arg_pair	of up to length ||| int $length	count=1
function_name	splits ||| split	count=1
arg_pair	a string in ||| string $text	count=1
arg_pair	intensity of ||| float $threshold int $channel	count=1
function_name	[function_name] str to ||| [function_name]	count=1
arg_pair	a variable in the ||| string $key mixed $var	count=1
function_name	whole ||| savebody	count=1
function_name	one and [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	uid for the ||| imap uid	count=1
return	returns list ||| array	count=1
arg_pair	the key ||| mixed $value	count=1
function_name	all current ||| clear	count=1
function_name	the image matte channel ||| image matte	count=1
function_name	compute the legendre symbol ||| gmp legendre	count=1
function	phar [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=15
return	point to ||| bool	count=3
function_name	[function_name_1] of ||| [function_name_2] return [function_name_1]	count=1
arg_pair	of htmlentities() ||| string $string	count=1
arg_pair	of snmp ||| string $community	count=2
arg_pair	of ||| float $whitepoint int $channel	count=2
return	last value ||| mixed	count=1
function_name	number of ||| number	count=1
function_name	printable string ||| printable	count=2
function_name	updates ||| update	count=4
function_name	has ||| sqlsrv has	count=1
function_name	the ||| disable	count=1
function_name	bigram field pf2 ||| bigram phrase field	count=1
function_name	this ||| setcolorvalue	count=1
arg_pair	tar or zip ||| string $base_directory	count=1
function_name	defined constant ||| constant	count=1
arg_pair	that match the pattern ||| string $pattern	count=1
return	a ||| object	count=4
function_name	[function_name_1] the transaction ||| [function_name_2] [function_name_1]	count=1
arg_pair	of servers that ||| string $host	count=1
function_name	the key [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	with error ||| error	count=1
function_name	set the external attributes ||| set external attributes	count=2
function_name	local tag name ||| tag name	count=1
function_name	form ||| form	count=1
function_name	queryparser to be ||| max	count=1
function_name	host name ||| mysql get host info	count=1
function_name	the periodic watcher again ||| again	count=1
function_name	iv belonging ||| iv	count=1
function	[function_name_1] a class ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	supplied ||| string $filename	count=1
function_name	deletes a [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	condition with data ||| array $data array $condition	count=1
namespace	monitored ||| event	count=1
arg_pair	up callback to be ||| int $type mixed $callback	count=1
function_name	[function_name_1] glyph definition ||| [function_name_1] [function_name_2]	count=1
namespace	removes an event ||| event	count=1
arg_pair	oldname to ||| string $oldname	count=1
namespace	setting of the ||| function	count=1
function	creates [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
arg_pair	the ||| string $cookie int $estimated	count=1
function_name	[function_name_1] [function_name_2] an entry defined by ||| [function_name_1] [function_name_2]	count=2
function_name	contrast of [function_name_2] ||| [function_name_1] stretch [function_name_2]	count=2
function_name	[function_name_1] imagemagick package ||| [function_name_1] [function_name_2]	count=1
arg_pair	translates filename into ||| string $filename	count=1
function_name	the iv belonging to ||| mcrypt get iv	count=1
function_name	copies a curl ||| curl copy	count=3
arg_pair	given shell wildcard pattern ||| string $string	count=1
function_name	mysql daemon ||| mysql list	count=2
function_name	specifies the [function_name] of ||| [function_name] field length	count=1
function_name	job ||| job	count=2
function_name	maximum document frequency ||| terms max count	count=2
function_name	frees [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	of the ||| gethostbyaddr	count=1
arg_pair	mail [arg_pair_1] [arg_pair_2] ||| overview [arg_pair_1] [arg_pair_2]	count=4
function_name	a ||| add types	count=1
function_name	specified ||| ns	count=1
function_name	the exception original type ||| type	count=1
arg_pair	access ||| int $option resource $hobj	count=1
function_name	finalizes current ||| end	count=1
function_name	lob data from ||| lob	count=1
arg_pair	in response ||| int $format	count=1
namespace	prepared statement ||| sqlite3stmt	count=2
function_name	authenticator is needed for ||| authenticator	count=1
function_name	item at the repository ||| svn log	count=1
function_name	type is returned ||| type	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] stats [function_name_2]	count=2
function_name	returns the names ||| get extension	count=1
arg_pair	in a string ||| string $encoding	count=1
function_name	and its [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	sends ||| resource $link_identifier	count=1
arg_pair	the message ||| mixed $message	count=1
return	current iterator entry ||| bool	count=1
function_name	doc ||| doc	count=2
function_name	text ||| get text	count=3
function_name	returns the property value ||| get property value	count=1
arg_pair	intensity of ||| int $channel	count=1
namespace	of a syncsemaphore ||| syncsemaphore	count=1
arg_pair	[arg_pair_1] by fill ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	and server version ||| version	count=1
function_name	sends a request ||| send prepare	count=1
arg_pair	another buffer event ||| eventbase $base eventbufferevent $underlying	count=1
function_name	been [function_name_2] ||| [function_name_1] blob [function_name_2]	count=1
arg_pair	memcached::add() ||| mixed $value int $expiration	count=1
function_name	exchange the current array ||| exchange array	count=1
function_name	a user-defined ||| arg	count=1
function_name	merges the elements ||| merge recursive	count=1
function_name	[function_name_1] percent value ||| [function_name_2] [function_name_1]	count=3
function_name	copies ||| copy	count=4
namespace	evidle::__construct() ||| evidle	count=1
arg_pair	to display a ||| resource $fdf_document string $frame_name	count=1
namespace	function used ||| function	count=3
arg_pair	that index and all ||| mixed $index	count=1
function_name	[function_name_1] and returns ||| [function_name_2] [function_name_1]	count=4
function_name	data from the ||| add	count=1
namespace	this job is ||| gearmanjob	count=1
function_name	that you have subscribed ||| imap lsub	count=1
function_name	a given result ||| ibase fetch	count=1
function_name	the bit fail ||| bit fail	count=2
arg_pair	a exists content ||| string $content	count=1
arg_pair	other useful ||| resource $link_identifier string $blob_id	count=1
function_name	the kadm5 library using ||| kadm5	count=1
function_name	assign a priority ||| priority set	count=2
function_name	remote file server with ||| ssh2 sftp mkdir	count=1
arg_pair	subject ||| int $limit	count=1
function_name	this function runs the ||| newt run	count=1
function_name	binds the name ||| bind	count=1
function_name	delivered ||| pcntl	count=1
function_name	sets ||| fann set error	count=1
function_name	to ||| buffer	count=1
return	removes an ||| bool	count=1
function_name	[function_name_1] current ||| [function_name_2] [function_name_1]	count=7
function_name	creates ||| fann create	count=2
function_name	deletes a ||| delete	count=2
arg_pair	natural logarithm of arg ||| float $arg	count=1
arg_pair	of files within a ||| int $depth	count=1
function_name	[function_name_1] activation function ||| [function_name_2] [function_name_1]	count=4
arg_pair	the how parameter ||| int $how array $set	count=1
function_name	same ||| bind to	count=2
function_name	[function_name_1] rows in ||| [function_name_2] [function_name_1]	count=1
namespace	referenced objects ||| threaded	count=1
function_name	[function_name_1] for ||| [function_name_2] [function_name_1]	count=20
arg_pair	process to other action ||| string $action array $paramters	count=1
function_name	[function_name_1] response ||| [function_name_1] [function_name_2]	count=5
arg_pair	data by [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	field to use ||| field	count=1
function_name	[function_name_1] several parameters ||| [function_name_2] [function_name_1]	count=2
arg_pair	in the haystack string ||| string $haystack	count=2
namespace	point of ||| function	count=1
namespace	and restarts the periodic ||| evperiodic	count=1
return	called by ||| mongoid	count=1
function_name	returns a list ||| list	count=1
namespace	the formatting ||| function	count=1
function_name	whether to send ||| is	count=1
function_name	chromaticity green primary ||| green primary	count=1
function_name	replaces the ||| array replace	count=2
function	base64 encoded [arg_pair_2] ||| [function_name_1] decode string $data [arg_pair_2]	count=1
namespace	distribution [namespace] ||| [namespace]	count=3
function_name	names ||| property names	count=1
arg_pair	the ||| int $estimated	count=1
namespace	[namespace] to disk ||| [namespace]	count=1
function_name	sets the learning rate ||| set learning rate	count=1
arg_pair	of the item ||| string $key	count=1
function_name	newt interface ||| newt	count=1
namespace	checks whether the ||| norewinditerator	count=1
function_name	the end of ||| buffer	count=1
function_name	[function_name] object pointed ||| get [function_name]	count=1
function	sets [arg_pair_2] ||| [function_name_1] parameter [arg_pair_2]	count=1
return	bound to a given ||| bool	count=1
function_name	is called to set ||| set	count=1
function_name	bias in each ||| bias	count=1
function_name	of the array iterator ||| iterator	count=1
function_name	deletes the ||| delete file	count=1
function_name	of the oracle ||| oci	count=1
function_name	complete result set for ||| start	count=1
function_name	for the specified encoding ||| mb check encoding	count=1
arg_pair	of ||| int $y	count=1
function_name	minimum version ||| version	count=1
function_name	char ||| char	count=2
arg_pair	retrieve get variable ||| string $name string $default	count=1
function_name	[function_name_1] bounding box ||| [function_name_2] [function_name_1]	count=1
function_name	stream resource [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	row of data ||| function	count=5
function_name	textflow into ||| fit textflow	count=1
function_name	minimum document ||| min	count=1
function_name	sets the ||| ldap set option	count=1
return	one of the patterns ||| int	count=1
function_name	opened or not ||| opened	count=1
return	function prepares for ||| bool	count=1
function_name	french republican calendar to ||| frenchtojd	count=1
arg_pair	a wrapper ||| string $note_name string $note_value	count=1
arg_pair	array1 with values having ||| array $array2	count=1
return	on the server for ||| mongocursor	count=1
function_name	[function_name_1] [function_name_2] phrase ||| [function_name_2] [function_name_1]	count=18
function_name	mode is for ||| mode	count=1
function_name	[function_name_1] rows ||| [function_name_1] expand [function_name_2]	count=1
namespace	domcomment ||| domcomment	count=1
function_name	returns true if ||| is	count=1
arg_pair	entry in the result ||| resource $result_entry_identifier	count=1
function_name	minimum document ||| cache min default	count=1
function_name	tasks ||| tasks	count=1
function_name	deletes a named virtual ||| delete pvf	count=1
namespace	number computed in ||| function	count=1
function_name	the process [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	submit the object to ||| submit to	count=1
namespace	by php internally it ||| mongoid	count=1
return	function [return] call when ||| [return]	count=1
arg_pair	add the specified flag ||| int $options	count=1
function_name	an sqlite sql statement ||| sqlite	count=1
namespace	returns the ||| gmagick	count=1
function_name	the activation steepness for ||| fann get activation steepness	count=1
function_name	into a paradox database ||| px put	count=1
function_name	number ||| set start	count=1
function_name	frees previously created event ||| event free	count=1
function_name	determines the minimum number ||| fann get cascade min cand	count=1
function	diff [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	epochs ||| epochs	count=5
function_name	of activation steepnesses ||| activation steepnesses count	count=1
return	which ||| string	count=1
namespace	a prepared ||| sqlite3stmt	count=1
function_name	taking into account ||| mysql real	count=1
namespace	used by php ||| mongoid	count=1
return	the input ||| bool	count=1
function_name	points [function_name] qualifiers ||| [function_name] conf	count=1
function_name	separate parameters ||| query params	count=1
function_name	it again ||| again	count=1
function_name	specified configuration ||| config	count=1
return	hostname and ||| array	count=1
function_name	[function_name_1] response ||| [function_name_2] [function_name_1]	count=5
namespace	lobs internal pointer ||| oci-lob	count=3
arg_pair	with the ||| resource $link_identifier	count=1
function_name	used to ||| set metadata	count=1
namespace	performs a ||| function	count=1
function_name	internet connection type corresponding ||| geoip	count=1
arg_pair	is a ||| string $note_name	count=1
function_name	[function_name_1] namespace ||| [function_name_2] [function_name_1]	count=5
function_name	process ||| process	count=1
function_name	into the file ||| file	count=2
namespace	move all data from ||| eventbuffer	count=1
function_name	stat call ||| stat	count=1
function_name	name of the ||| get	count=1
namespace	characters in ||| function	count=1
function_name	receiving ||| udm errno	count=2
arg_pair	[arg_pair] replaces ||| [arg_pair]	count=1
function_name	to get the column ||| column	count=1
function_name	oid of the base ||| oid	count=1
namespace	retreives the current ||| eventutil	count=1
arg_pair	associates imagickpixel ||| int $cols int $rows	count=1
namespace	assigned unicode characters ||| intlchar	count=1
arg_pair	of the output ||| int $max_neurons	count=1
function_name	random number ||| gmp random	count=1
namespace	evfork watcher object and ||| evfork	count=1
arg_pair	messaging ||| array $properties	count=1
function_name	returns an array containing ||| array	count=1
function_name	strcasecmp() with the ||| strncasecmp	count=1
arg_pair	for [arg_pair] ||| [arg_pair]	count=1
function	[function_name_1] style for ||| [arg_pair_2] [function_name_1]	count=3
function_name	an obscure [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	up to maxlength ||| resource $handle int $maxlength	count=1
arg_pair	to a messaging ||| string $protocol array $properties	count=1
function_name	set of ||| run	count=1
function_name	new integer range filter ||| set filter range	count=1
function_name	image ||| load image	count=2
function_name	a high priority task ||| high	count=1
return	a string for the ||| string	count=1
arg_pair	assoc_array which has ||| array $assoc_array int $options	count=1
function_name	changes size and ||| size	count=1
function_name	extended json string ||| mongo db\bson\from json	count=2
function_name	next tuple for the ||| next	count=1
function_name	a batch operation ||| batch	count=1
function_name	last attempt to ||| db2 conn error	count=2
function_name	handler for the specified ||| handler	count=1
return	checks this is ||| bool	count=1
return	to auto-commit mode ||| bool	count=1
function_name	the activation function for ||| fann get activation function	count=1
function_name	[function_name_1] image matte ||| [function_name_1] [function_name_2]	count=1
namespace	using v8js::registerextension() ||| v8js	count=1
function_name	column names of the ||| cubrid column names	count=1
arg_pair	parses the given source ||| string $source	count=1
function_name	static ||| static	count=3
function_name	[function_name_1] iterator ||| [function_name_1] [function_name_2]	count=4
namespace	palette version of an ||| function	count=1
function_name	form action ||| form action	count=1
function_name	linear least [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	next [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	location [function_name_2] ||| [function_name_2] device get relative [function_name_1]	count=1
arg_pair	or set the database ||| string $database	count=1
namespace	sec field of ||| mongotimestamp	count=1
arg_pair	the associative or ||| string $arg_separator int $enc_type	count=1
function_name	[function_name_1] corresponding to ||| [function_name_2] country [function_name_1]	count=2
function_name	the square root of ||| sqrt	count=1
function_name	remove the information ||| remove	count=1
function_name	bytecodes [function_name] ||| bcompiler parse [function_name]	count=1
function_name	php logo using the ||| php logo	count=1
function_name	surrounds the image with ||| image	count=1
function_name	to the end of ||| add buffer	count=1
function_name	the id3v1 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	country [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	if multiple ||| bool	count=1
return	which match the regular ||| bool	count=1
function_name	field ||| ingres field	count=2
function_name	xml response ||| response	count=1
function_name	frequency used for ||| default frequency	count=1
function_name	affected by ||| affected	count=4
function_name	checks if the given ||| exists	count=1
namespace	get the controllers ||| yaf_controller_abstract	count=1
function_name	entering ||| loop	count=1
function_name	one or more attributes ||| mod	count=2
return	set ||| bool	count=5
function_name	generates cryptographic random integers ||| random	count=1
arg_pair	the result set cursor ||| resource $result	count=1
function_name	specified ||| isbase	count=1
function_name	font and prepares it ||| font	count=1
function_name	profile and returns ||| removeimageprofile	count=1
function_name	active database on the ||| select db	count=1
function_name	a [function_name] ||| separate image [function_name]	count=1
namespace	whether the current element ||| limititerator	count=1
function_name	map configuration ||| map	count=1
function_name	merges the elements ||| array merge	count=2
function_name	sets the cascade ||| set cascade	count=2
function_name	[function_name_1] command ||| [function_name_2] [function_name_1]	count=3
return	table specified ||| mixed	count=1
function_name	busy handler that ||| busy	count=1
return	from the set of ||| bool	count=1
function_name	descale input and ||| descale train	count=1
namespace	sent [namespace] ||| [namespace]	count=3
function_name	value of the miter ||| get miter	count=1
function_name	[function_name_1] last error ||| [function_name_2] [function_name_1]	count=3
namespace	domcomment object ||| domcomment	count=1
function_name	gearmanclient::addtask() gearmanclient::addtaskhigh() ||| run	count=1
function_name	boost [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	type format ||| int $format	count=1
return	stops and ||| void	count=1
function_name	it shouldnt need to ||| set	count=1
function_name	set a function ||| set	count=1
arg_pair	[arg_pair] the ||| [arg_pair]	count=9
function_name	a row as a ||| ibase fetch object	count=1
function_name	functions drops a database ||| drop	count=1
function_name	get the number ||| num	count=1
arg_pair	as a magnitude ||| string $magnitude	count=1
function_name	[function_name_1] runs the ||| [function_name_1] [function_name_2]	count=1
function_name	a row as ||| ibase fetch object	count=1
function_name	syntax highlighted ||| highlight file	count=1
function_name	returns the sarprop ||| get sarprop	count=1
function_name	activation steepnesses in the ||| get cascade activation steepnesses	count=1
function_name	is used ||| cubrid set	count=1
arg_pair	the flatness parameter ||| resource $pdfdoc float $flatness	count=1
arg_pair	or unnamed event object ||| bool $manual	count=1
function_name	frees ||| free result	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] info [arg_pair_2]	count=9
function_name	an ||| offset	count=3
arg_pair	of a variable can ||| mixed $var	count=1
namespace	treated as special operators ||| sphinxclient	count=1
namespace	function queries the ||| function	count=1
function_name	mssql_fetch_array() with one ||| mssql fetch	count=3
namespace	limititerator ||| limititerator	count=1
function_name	xml string from ||| xml	count=1
function_name	error code as ||| strerror	count=1
function_name	[function_name_1] height as ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] log for ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] timeout value ||| [function_name_1] [function_name_2]	count=4
function_name	creates ||| pdf create	count=4
function_name	creates a standard ||| create sparse array	count=1
function_name	by ||| immortal	count=1
function_name	exe ||| exe	count=1
function_name	pencil sketch ||| sketch	count=1
function_name	file_get_contents() returns the ||| file get contents	count=1
function_name	mode outputs blocks of ||| block mode	count=1
arg_pair	for a ||| resource $pdfdoc	count=1
function_name	fills an array with ||| array fill	count=1
function_name	given [function_name] ||| [function_name] get name	count=1
namespace	not [namespace] is ||| [namespace]	count=1
function_name	regular expression given in ||| preg match	count=1
arg_pair	using the oid of ||| string $oid	count=1
function_name	[function_name_1] page ||| [function_name_1] fit pdi [function_name_2]	count=1
function_name	of word ||| get word	count=1
arg_pair	protocol level ||| int $level	count=1
function_name	text [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	html document from ||| save htmlfile	count=1
arg_pair	memcached::get() except ||| callable $cache_cb float $cas_token	count=1
namespace	unicode characters ||| intlchar	count=1
return	and host checks this ||| bool	count=1
arg_pair	memcached::getmulti() except ||| string $cas_tokens	count=1
function_name	next event loop iteration ||| event	count=1
namespace	function p ||| function	count=1
namespace	current ||| tokyotyrantquery	count=1
function_name	determines the minimum ||| get cascade min	count=1
function_name	a given column ||| bind column	count=1
function_name	create a config ||| pspell config create	count=3
function_name	closes ||| eio close	count=2
arg_pair	in the ||| bool $gray	count=1
function	postgresql [arg_pair_2] ||| [function_name_1] field prtlen [arg_pair_2]	count=1
function_name	file handler that ||| stream	count=1
function	size [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	variable data ||| variable resource $introspection	count=1
return	in order for the ||| float	count=2
arg_pair	associate data to an ||| mixed $data	count=1
arg_pair	challenge using specified ||| string $challenge	count=1
arg_pair	a page in the ||| string $dest	count=1
function_name	returns [function_name_2] ||| ziparchive string [function_name_1] [function_name_2] index int $index int	count=2
return	only used ||| mongoid	count=1
namespace	file that ||| pharfileinfo	count=1
function_name	[function_name] result resource ||| [function_name] result	count=1
namespace	loop ||| evloop	count=1
function_name	error ||| udm	count=1
arg_pair	a result set listing ||| string $table-name	count=2
function_name	get or set the ||| fbsql database	count=1
arg_pair	the size of the ||| int $level int $type	count=1
arg_pair	old parameter matches the ||| int $old	count=1
arg_pair	before ||| resource $link string $source_string	count=1
namespace	if the [namespace] on disk ||| [namespace]	count=1
function_name	total cache [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	creates a new ||| int $sec	count=1
namespace	should ||| solrquery	count=1
function_name	socket [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	php language tokens using ||| token get	count=1
arg_pair	send by the ||| string $cookie int $estimated	count=1
function_name	the buffer provided in ||| add	count=1
function_name	starts a new pattern ||| begin pattern	count=1
function_name	a ||| fetch object	count=6
namespace	processing of ||| function	count=1
function_name	[function_name_1] transformation matrix ||| [function_name_2] [function_name_1]	count=4
function_name	frees all the resources ||| event base free	count=1
function_name	closes the request ||| cubrid close	count=1
function_name	sends a ||| send prepare	count=1
function_name	name of the route ||| get	count=1
function_name	relative location ||| relative location	count=2
function_name	create and ||| create	count=1
return	to the ||| int	count=2
function_name	ftp ||| ftp nb put	count=2
arg_pair	with ||| resource $psdoc	count=1
return	to the current path ||| bool	count=2
return	the given file ||| string	count=1
function_name	this ||| run	count=1
namespace	all assigned unicode characters ||| intlchar	count=1
function_name	static variables ||| static variables	count=2
arg_pair	text in the current ||| resource $pdfdoc string $text	count=1
arg_pair	training of the output ||| int $max_neurons int $neurons_between_reports	count=1
arg_pair	associative ||| int $slabid	count=1
function_name	extension is ||| info	count=1
function_name	root device ||| root device	count=1
arg_pair	the given image ||| int $filters	count=1
arg_pair	key ||| bool $isglobal	count=1
namespace	the algorithm of ||| function	count=1
arg_pair	a global transaction among ||| mixed $connection string $gtrid	count=1
arg_pair	training of the ||| int $max_neurons	count=1
function_name	from the buffer ||| add	count=1
arg_pair	the bbcode_container created by ||| resource $bbcode_container	count=1
function_name	sequence type ||| seq	count=2
function_name	pops ||| pop	count=1
function_name	to facet ||| set facet limit	count=1
arg_pair	input for fields ||| string $input	count=1
function_name	[function_name] s of ||| id3 [function_name]	count=2
function_name	scripts current working directory ||| posix getcwd	count=1
function_name	[function_name_1] internationalization ||| [function_name_2] [function_name_1]	count=4
arg_pair	a ||| string $width	count=1
arg_pair	used afterward by the ||| string $extendedclass	count=1
function_name	to trace the ||| debug	count=1
function_name	of video-frames ||| num frames	count=1
function_name	vector graphics ||| vector graphics	count=2
function_name	write operations on ||| write	count=1
arg_pair	the given string ||| int $limit	count=1
function_name	constraints [function_name] field ||| [function_name] missing	count=1
namespace	simply stops ||| evperiodic	count=1
function	type of the ||| type resource $result_id	count=1
function_name	a new content ||| new	count=1
return	page to ||| bool	count=3
function_name	extrema for ||| extrema	count=1
function_name	starts sending output ||| header	count=1
function_name	basic com_* [function_name] send ||| simple [function_name] handle response	count=1
function_name	tells [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	searchd ||| sphinxclient	count=2
arg_pair	of a modulo b ||| gmp $a gmp $b	count=1
function_name	absent index that is ||| empty	count=2
function	[function_name_1] variable ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	and challenge using specified ||| string $challenge	count=1
function_name	should ||| construct	count=1
function_name	this function returns at ||| get	count=1
function_name	part of html document ||| html	count=1
arg_pair	[arg_pair] including the ||| [arg_pair]	count=2
arg_pair	timestamp and location ||| int $timestamp int $format	count=2
arg_pair	from the specified dn ||| resource $link_identifier string $dn	count=2
return	more ||| bool	count=1
function_name	elements with ||| elements by tag	count=1
function_name	ftp server ||| ftp nb	count=1
function	uid for [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	dash style for all ||| dash	count=1
function_name	effective in ||| get current	count=1
function_name	active database on ||| fbsql select db	count=2
namespace	current node ||| spldoublylinkedlist	count=1
function_name	adds a [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	internally it shouldnt need ||| set state	count=1
return	get or set the ||| string	count=1
namespace	underlying driver ||| pdo	count=2
function_name	the [function_name] query ||| [function_name] insert id	count=1
return	has ||| bool	count=1
function_name	of the iv belonging ||| iv	count=1
return	server ||| string	count=1
function_name	the flags ||| flags	count=1
function_name	value ||| h	count=1
arg_pair	the result-set from ||| int $type int $maxlen	count=1
return	time cursors by ||| mongocursor	count=1
function_name	returns the sunrise ||| date sunrise	count=1
function	the blob [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	returns ||| mysqlnd memcache get	count=1
function_name	value of word ||| word	count=1
function_name	csr and stores it ||| csr	count=1
function_name	an adaptive [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	script to a messaging ||| string $protocol	count=1
arg_pair	in the ||| int $maxlen	count=1
function_name	a polyline using ||| polyline	count=1
function_name	resolve the given ||| dbplus resolve	count=1
arg_pair	to maxlength ||| resource $handle int $maxlength	count=1
namespace	array by using the ||| function	count=1
function_name	[function_name_1] intent ||| [function_name_2] [function_name_1]	count=3
function_name	the current cipher by ||| cipher	count=1
arg_pair	in result argument of ||| int $pri	count=3
function_name	the [function_name] ||| get phar [function_name]	count=1
arg_pair	a directory handle to ||| string $path	count=1
function_name	/ imaginary image pair ||| image	count=1
function_name	an http header previously ||| header	count=1
return	a file ||| void	count=2
arg_pair	numeric ||| mixed $search_value	count=1
namespace	data from ||| eventbuffer	count=1
function_name	mongocollection::find() ||| find one	count=2
arg_pair	server yet ||| int $flag int $expire	count=1
function_name	epochs determines the maximum ||| get cascade max cand	count=1
function_name	image depth ||| image depth	count=2
function_name	minimum number ||| get cascade min cand	count=1
return	as [return] ||| [return]	count=2
namespace	gearmanclient::addtask() gearmanclient::addtaskhigh() ||| gearmanclient	count=1
arg_pair	value of var ||| mixed $var	count=1
function_name	von einer mime kopfzeile ||| mime	count=1
function	[function_name_1] for a ||| [function_name_1] [arg_pair_2]	count=6
function_name	[function_name] for an ||| get [function_name]	count=1
function_name	statistics about ||| odbc statistics	count=1
function_name	facet ||| facet date	count=3
function_name	term ||| terms upper bound	count=1
function_name	wraps a ||| wordwrap	count=1
function_name	session [function_name_2] ||| [function_name_1] get [function_name_2]	count=2
function	connect the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	that correspond ||| mqseries strerror	count=1
return	the coordinate system in ||| bool	count=1
function_name	or virtual image ||| load image	count=1
function_name	statistics ||| statistics	count=1
function_name	sets the ||| timeout set	count=1
arg_pair	delete to transform str1 ||| string $str1	count=1
arg_pair	an ibm ||| array $options	count=2
function_name	internal debug output ||| internal debug	count=2
arg_pair	value for an ||| mixed $codepoint	count=1
arg_pair	given oid ||| resource $conn_identifier string $oid	count=2
function_name	external attributes of ||| external attributes	count=2
namespace	a file ||| pharfileinfo	count=2
function_name	based on training ||| fann set	count=1
function_name	record from ||| record with	count=1
function	deletes a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	mssql_connect() ||| bool $new_link	count=1
arg_pair	namespaceuri and name ||| string $namespaceuri string $qualifiedname	count=1
arg_pair	dn ||| resource $link_identifier string $dn	count=4
function_name	epochs ||| cand epochs	count=8
function_name	least ||| least	count=2
function_name	new pdf file ||| pdf open	count=2
arg_pair	specifies the ||| resource $id string $schema	count=1
function_name	request object ||| request	count=1
function_name	the tables ||| tables	count=2
arg_pair	array into an ||| int $storage array $pixels	count=1
function_name	deletes a textflow ||| pdf delete textflow	count=3
function_name	current process ||| posix getgroups	count=1
function_name	iterator that was ||| iterator	count=1
function_name	target frame to display ||| target frame	count=1
arg_pair	[arg_pair] overview ||| [arg_pair]	count=1
function_name	use spanscorer [function_name_2] ||| [function_name_2] [function_name_1] phrase	count=2
function_name	get exception ||| get	count=1
arg_pair	on a per mailbox ||| resource $imap_stream string $quota_root	count=1
return	given file ||| string	count=1
namespace	the ||| iteratoriterator	count=1
function_name	submit the object ||| submit	count=1
return	various database components to ||| bool	count=1
function_name	[function_name_1] pixel ||| [function_name_2] [function_name_1]	count=2
arg_pair	open [arg_pair] ||| [arg_pair]	count=1
function	[function_name_1] an sql ||| [arg_pair_2] [function_name_1]	count=1
function_name	sets the timeout value ||| set timeout	count=1
function_name	type ||| field type	count=1
function_name	returns the ||| gethostbyaddr	count=1
arg_pair	color value [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	specifies the [function_name] ||| [function_name] field length	count=1
function_name	this function is ||| state	count=1
return	the regular expression ||| bool	count=1
namespace	the supplied ||| function	count=1
function_name	based on training data ||| fann	count=1
function_name	hash ||| get hash	count=1
function_name	[function_name_1] steepness for ||| [function_name_1] [function_name_2]	count=6
function	tag [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	a quoted [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	used to send soap ||| soap	count=1
function_name	finds ||| sqlite	count=1
function_name	node with [function_name] ||| create element [function_name]	count=1
function_name	sunset ||| sunset	count=1
arg_pair	a message using the ||| string $message	count=1
function_name	a callback ||| callback	count=1
function	the [function_name_1] [arg_pair_2] regular expression ||| mb ereg search [function_name_1] [arg_pair_2]	count=1
function_name	product ||| array product	count=2
function_name	value for the ||| get	count=1
function_name	gets the scale ||| scale	count=1
function_name	[function_name_1] stretch ||| [function_name_2] [function_name_1]	count=1
function	readline [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	socket error number errno ||| socket errno	count=1
namespace	database has ||| mongocursorinterface	count=1
namespace	and host checks this ||| oauth	count=1
return	parallel ||| bool	count=1
function_name	specified action return ||| gupnp service action	count=1
namespace	non-executable [namespace] ||| [namespace]	count=1
arg_pair	in subsequent transformations ||| string $name	count=1
arg_pair	a resource handle ||| string $encoding	count=1
namespace	version of the hash ||| quickhashstringinthash	count=1
return	time of the ||| int	count=1
function_name	of the database ||| dba	count=1
function_name	[function_name_1] filename associated ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] log for ||| query [function_name_1] [function_name_2]	count=1
function_name	signal [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	use parser inside object ||| resource $parser object $object	count=1
arg_pair	connection to address using ||| resource $socket string $address	count=1
function_name	dash style for ||| dash	count=1
function_name	selects the ||| select db	count=1
return	gets the ||| void	count=1
function_name	sybase_fetch_assoc() with ||| sybase	count=1
namespace	unicode property ||| intlchar	count=2
function_name	term ||| bound	count=1
function_name	not to use the ||| use	count=1
function_name	scales the ||| fann scale	count=3
function_name	table into file specified ||| file	count=1
function_name	[function_name_1] client libraries ||| [function_name_2] [function_name_1]	count=1
namespace	socket_listen() this [namespace] ||| [namespace]	count=3
function_name	the kadm5 ||| kadm5	count=1
arg_pair	the uri ||| string $encoding	count=1
return	fetches a row as ||| object	count=1
arg_pair	except that the time ||| int $timestamp	count=1
function_name	[function_name_1] width ||| [function_name_2] [function_name_1]	count=2
arg_pair	of an entry ||| string $name int $flags	count=1
function_name	sarprop step error threshold ||| sarprop step error threshold	count=1
arg_pair	with ||| resource $link_identifier	count=1
function_name	not yet been ||| ibase	count=1
arg_pair	apcs ||| bool $limited	count=1
function_name	kernel ||| kernel	count=1
function_name	a base ||| isbase	count=1
function_name	sunrise time ||| date sunrise	count=1
function_name	represented by csr and ||| openssl csr export	count=2
arg_pair	by the specified offset ||| int $offset int $initial_value	count=1
return	eventbuffer ||| bool	count=1
function_name	the text interword spacing ||| text interword spacing	count=1
function_name	specified ||| fetch row	count=1
function_name	the buffer provided in ||| add buffer	count=1
function_name	stretch to use ||| stretch	count=1
function_name	[function_name_1] color space ||| [function_name_2] [function_name_1]	count=2
function_name	adds a ||| bbcode add	count=1
function_name	existing ||| set	count=1
function_name	it to establish service ||| service	count=1
function_name	sets the ||| fdf set	count=1
function_name	[function_name_1] databases ||| [function_name_1] list [function_name_2]	count=4
function_name	to traverse over a ||| snmprealwalk	count=1
function_name	of [function_name] ||| reduce noise [function_name]	count=1
function_name	[function_name_1] child ||| [function_name_2] [function_name_1]	count=3
function_name	supplied rgb values ||| pdf setrgbcolor	count=1
arg_pair	the given color pair ||| int $pair	count=1
function_name	gets a record from ||| get record with	count=1
function_name	the decrease [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	request [function_name_2] ||| [function_name_2] [function_name_1]	count=13
namespace	from [namespace] ||| [namespace]	count=1
function_name	class [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	loop ||| void	count=1
function_name	of current eventbuffer ||| add	count=1
arg_pair	a ||| string $target	count=2
function_name	moves ||| move	count=1
function_name	gets ||| get parameter	count=2
arg_pair	to a target url ||| string $url	count=1
function_name	the total number ||| total	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_1] copy [function_name_2]	count=4
arg_pair	given source string into ||| string $source int $flags	count=1
function_name	readable ||| readable	count=2
return	maxdb resource suitable for ||| resource	count=1
namespace	suitable ||| function	count=1
function_name	ends a page which ||| end	count=1
function_name	bind_textdomain_codeset() ||| codeset	count=1
function_name	[function_name_1] attempt to ||| [function_name_2] [function_name_1]	count=2
return	only be used ||| void	count=1
function_name	discards all but one ||| unique image colors	count=1
function_name	[function_name_1] query time ||| [function_name_1] [function_name_2]	count=1
namespace	on the server ||| function	count=1
arg_pair	to length - ||| resource $zp int $length	count=1
function_name	[function_name] entries in ||| ldap [function_name]	count=1
namespace	row ||| function	count=1
function_name	to the ||| buffer	count=1
function_name	[function_name_1] path ||| [function_name_2] [function_name_1]	count=4
arg_pair	mail [arg_pair_1] [arg_pair_2] overview ||| overview [arg_pair_1] [arg_pair_2]	count=1
arg_pair	a magnitude / phase ||| string $magnitude	count=1
function_name	is only ||| set state	count=1
function_name	whether ||| is select	count=1
function_name	[function_name_1] the external ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] to the ||| bbcode [function_name]	count=1
arg_pair	[arg_pair_1] of the ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	subject that contains only ||| string $subject	count=1
function_name	the module ||| module	count=1
function	rename oldname to ||| rename string $oldname	count=1
function_name	each virtual server ||| get server by	count=1
namespace	for the document ||| solrinputdocument	count=1
function_name	get the static variables ||| get static variables	count=1
namespace	phar ||| phar	count=8
namespace	in a string ||| function	count=1
function_name	[function_name] client ||| [function_name] client	count=1
arg_pair	connection to a ||| string $password	count=1
function_name	maximum ||| terms max count	count=1
function_name	ssl_cipher_description ssl ||| ssl get	count=1
arg_pair	b ||| gmp $a gmp $b	count=1
function_name	returns an array that ||| pg fetch array	count=1
function	[function_name_1] array1 ||| [function_name_1] recursive array $array1 [arg_pair_2]	count=1
function_name	sets the minimum message ||| mssql min message	count=1
function_name	currently stored ||| apc	count=1
function_name	value for this field ||| field	count=1
function	the permissions [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	of servers that can ||| string $host	count=1
function_name	cipher by means ||| get cipher	count=1
function_name	modify the existing ||| modify	count=1
namespace	mutex ||| mutex	count=1
function	[function_name_1] has been ||| [function_name_1] exists [arg_pair_2]	count=3
arg_pair	pseudo-object from a ||| resource $result_id int $fetch_flag	count=1
function_name	[function_name_1] [function_name_2] works ||| [function_name_1] [function_name_2]	count=1
function_name	for maxdb_options() and maxdb_real_connect() ||| maxdb	count=1
function_name	and add the ||| add vars	count=1
function_name	scm of the ||| win32	count=1
function_name	of the [function_name_1] [function_name_2] ||| get [function_name_1] [function_name_2] mysqli $link	count=3
arg_pair	table or a list ||| string $fk_table	count=1
arg_pair	aql query using an ||| string $query	count=1
function_name	wish to request a ||| request	count=1
function_name	[function_name_1] ibase_blob_close() ||| [function_name_1] blob [function_name_2]	count=2
function_name	to return the ||| terms return	count=1
function_name	consumer [function_name] ||| callconsumer [function_name]	count=3
function_name	write operations on ||| write buffer	count=1
return	sent [return] this ||| [return]	count=2
function_name	valid socket resource ||| socket	count=1
function	xml [function_name_1] [arg_pair_2] ||| function resource [function_name_1] [arg_pair_2]	count=3
function_name	value from a ||| insert	count=1
function	[function_name_1] str from ||| [arg_pair_2] [function_name_1]	count=1
namespace	is not for production ||| oauth	count=1
function_name	not morelikethis ||| mlt	count=1
function_name	[function_name_1] mode is ||| [function_name_1] block algorithm [function_name_2]	count=3
function_name	or stub written ||| get stub	count=1
function_name	which can [function_name] used ||| event base [function_name]	count=1
function_name	pseudo image ||| function image	count=1
function_name	the host name ||| host	count=1
function_name	as tailable ||| tailable	count=1
arg_pair	puts a ||| mixed $keys string $value	count=1
arg_pair	by dn ||| string $dn	count=1
function_name	name ||| current	count=1
function_name	sets the minimum error ||| min error	count=1
function_name	access list ||| initgroups	count=1
function_name	or context ||| context	count=1
function_name	sets the sarprop temperature ||| set sarprop temperature	count=1
function_name	various internal [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] of the ||| [arg_pair_2] [function_name_1]	count=35
function_name	training algorithmsfann_train_incremental fann_train_batch ||| fann	count=1
function_name	[function_name_1] cache ||| [function_name_2] [function_name_1]	count=12
function_name	error message from ||| error message	count=2
function	uid [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	be demangled ||| radius demangle	count=1
arg_pair	or something in an ||| mixed $array_or_countable int $mode	count=1
function_name	bitwise exclusive or xor ||| gmp xor	count=1
namespace	a signal handling function ||| function	count=1
function_name	statistics ||| stat	count=1
arg_pair	as keys and ||| array $keys	count=1
function_name	stored in the id3 ||| id3 get	count=1
function_name	represented with existing ||| set	count=1
return	terminate the path ||| bool	count=1
namespace	and maxdb_real_connect() ||| function	count=1
function_name	the default ||| is default	count=1
function_name	creates an html document ||| save htmlfile	count=1
return	information ||| void	count=1
function_name	the inode number for ||| get inode	count=1
function_name	record [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	challenge using specified hashing ||| resource $privkey string $challenge	count=1
function_name	file handler ||| stream	count=1
arg_pair	number database name ||| string $host	count=1
function_name	eventbuffer ||| add buffer	count=2
function_name	array consisting ||| preg grep	count=1
function_name	gets end ||| get end	count=2
arg_pair	by the data ||| resource $connection_id int $data_type	count=1
arg_pair	a change notification ||| string $value	count=1
function_name	stride value that ||| stride for width	count=1
function_name	errors in ||| errors	count=1
namespace	recursivefilteriterator from ||| recursivefilteriterator	count=1
function_name	rot13 encoding on the ||| rot13	count=1
function_name	size thumbnail by first ||| thumbnail	count=1
arg_pair	reconstructed ||| int $metric	count=1
function_name	file ||| export to file	count=3
return	particular variable bound to ||| bool	count=1
function_name	the iterator to the ||| iterator	count=1
function_name	field belongs to ||| pg field	count=2
arg_pair	searches for a ||| string $encoding	count=1
function_name	[function_name_1] t61 ||| [function_name_1] [function_name_2]	count=1
function_name	data ||| add buffer	count=2
function_name	key-value pair ||| yp	count=1
return	with the connection ||| string	count=1
arg_pair	get or set the ||| resource $link_identifier	count=1
function_name	extension to be ||| extension	count=1
function_name	constructs a batch ||| construct	count=2
arg_pair	an entry with a ||| int $key	count=2
arg_pair	recognized as [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	represented by csr and ||| openssl csr	count=2
function_name	signal indicated by ||| pcntl signal	count=1
arg_pair	specified data using the ||| string $data	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] open [arg_pair_2]	count=3
arg_pair	[arg_pair] image ||| [arg_pair]	count=3
return	in ||| array	count=3
function_name	type of the ||| type	count=1
function_name	the current mysql ||| mysql	count=1
return	entire contents of the ||| bool	count=1
function_name	sending all pending headers ||| all	count=1
namespace	specified ||| function	count=1
arg_pair	start inclusive ||| mixed $start	count=1
function_name	of activation steepnesses ||| cascade activation steepnesses count	count=1
arg_pair	data [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	returns the real path ||| get real path	count=1
function_name	gets the cursorname ||| odbc cursor	count=1
function_name	sets authentication ||| svn auth set	count=2
arg_pair	messages from domain ||| string $domain	count=1
function_name	current solr [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	executes one or more ||| execute	count=2
function_name	a data from a ||| load from	count=1
function_name	returns the type ||| filetype	count=1
arg_pair	memcached::replace() except that the ||| mixed $value int $expiration	count=1
namespace	nonzero winding number ||| harupage	count=1
arg_pair	definition ||| float $ystep int $painttype	count=1
arg_pair	registers a php ||| string $name	count=2
function_name	single uncompressed character read ||| gzgetc	count=1
namespace	element ||| iteratoriterator	count=2
arg_pair	struct ||| int $num_data int $num_input	count=2
arg_pair	to the path in ||| bool $recursive	count=1
function_name	return ||| service	count=1
arg_pair	specified by the object_id ||| string $object_id	count=3
function_name	maximum number ||| mlt max num	count=6
function_name	to the server pool ||| server	count=1
function_name	file or url can ||| file	count=1
arg_pair	[arg_pair_1] callback ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	the oracle placeholder name ||| by name	count=1
return	beta [return] entirely ||| [return]	count=1
function_name	to the power ||| pow	count=2
function_name	an odbc ||| odbc	count=1
function_name	webp version of the ||| imagewebp	count=1
arg_pair	from the associative ||| int $enc_type	count=1
function_name	phrase slop ps2 parameter ||| phrase slop	count=1
return	to specify the shape ||| bool	count=1
function_name	locks held ||| freerlocks	count=1
function_name	property ||| get int property	count=2
arg_pair	for security reasons and ||| resource $radius_handle	count=1
function_name	shadow ||| shadow	count=1
function_name	steepnesses in ||| steepnesses count	count=1
function_name	maximum number ||| max alternate	count=1
function_name	[function_name_1] trigram ||| [function_name_2] [function_name_1]	count=1
function_name	filename associated ||| filename	count=1
function_name	state ||| state	count=1
namespace	the user ||| mongoid	count=1
function_name	of a color ||| color	count=2
function_name	[function_name_1] callback timeout ||| [function_name_1] [function_name_2]	count=3
return	returns a numerical ||| array	count=1
function_name	imagemagick package name ||| package name	count=2
function_name	true return ||| terms return	count=1
function	[function_name_1] str from ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] type base64 ||| [function_name_1] set [function_name_2]	count=1
arg_pair	[arg_pair_1] value of ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	md5 hash ||| md5	count=1
arg_pair	up ||| int $width	count=1
function_name	frontbase [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the core as opposed ||| internal	count=1
function_name	host name [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	number of ||| row count	count=1
arg_pair	pair ||| int $pair	count=1
arg_pair	subject for matches ||| int $limit	count=1
return	the named ||| string	count=1
namespace	[namespace] either ||| [namespace]	count=3
arg_pair	a exists content ||| string $content string $key	count=1
namespace	memcached server ||| memcache	count=1
function_name	one ||| result	count=1
function_name	retrieves the file extension ||| extension	count=2
function_name	[function_name_1] image ||| [function_name_1] [function_name_2] pixels int $x int	count=1
function_name	the specified return ||| return	count=1
arg_pair	specified uri ||| string $cb	count=1
function_name	exception original type ||| type	count=1
arg_pair	data ||| resource $introspection	count=1
function_name	[function_name_1] [function_name_2] counts ||| [function_name_1] facet [function_name_2] count	count=2
function_name	adds new integer range ||| range	count=1
function_name	returns the state ||| get state	count=2
function_name	replaces [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	the ||| resource $pdfdoc int $textflow	count=1
arg_pair	specified tcp_server eg ||| string $tcp_server int $socket_type	count=1
arg_pair	to htmlspecialchars() ||| string $encoding	count=1
function_name	[function_name] an ||| [function_name] index	count=2
function_name	[function_name_1] [function_name_2] an entry using its ||| [function_name_1] [function_name_2]	count=2
function_name	handling [function_name] in filesystemiterator::__construct() ||| get [function_name]	count=1
namespace	user defined [namespace] ||| [namespace]	count=3
function	quota [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	for the ||| long	count=1
function_name	with type stream fstream ||| get stream	count=1
arg_pair	a messaging ||| string $protocol	count=1
return	function is only used ||| mongoid	count=1
arg_pair	name hostname looking for ||| eventdnsbase $dns_base string $hostname	count=1
function_name	[function_name_1] databases ||| [function_name_2] [function_name_1]	count=6
namespace	swfvideostream ||| swfvideostream	count=1
return	and returns its value ||| mixed	count=1
function_name	characters converted to uppercase ||| mb strtoupper	count=1
function_name	parses ||| mailparse rfc822 parse	count=1
function_name	[function_name_1] transaction ||| [function_name_2] [function_name_1]	count=1
function_name	affected rows ||| affected rows	count=2
function_name	spacing for the page ||| space	count=1
function_name	[function_name_1] glo ||| [function_name_2] [function_name_1]	count=3
arg_pair	can be added to ||| string $localname	count=1
arg_pair	domain ||| string $domain	count=1
function_name	neural network ||| fann get	count=2
function_name	fetches multiple ||| fetch all	count=1
namespace	in the specified directory ||| function	count=1
function_name	status ||| status string	count=1
function_name	metadata ||| field metadata	count=1
function_name	[function_name_1] domain of ||| [function_name_2] [function_name_1]	count=2
function_name	miter [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	referenced thread ||| thread	count=1
function_name	[function_name_1] activation ||| [function_name_1] [function_name_2]	count=7
namespace	construct a new ||| spltempfileobject	count=1
arg_pair	any data from ||| string $data int $max_bytes	count=1
function_name	output [function_name] ||| [function_name]	count=1
return	be called if ||| bool	count=2
function_name	[function_name_1] matte channel ||| [function_name_1] [function_name_2]	count=2
arg_pair	by using the oid ||| string $oid	count=1
arg_pair	is a stream one ||| string $algorithm	count=1
namespace	set ||| event	count=1
function	metaphone key [arg_pair_2] ||| [function_name_1] string $str [arg_pair_2]	count=1
return	each of the ||| int	count=1
arg_pair	contents ||| string $localname string $contents	count=1
function_name	descale input and output ||| descale	count=1
function_name	field in [function_name_2] ||| [function_name_2] [function_name_1] is null	count=1
function_name	using the scp protocol ||| scp recv	count=1
function_name	number of ||| cascade num	count=1
arg_pair	a given method ||| string $data string $method	count=1
function_name	returns the debug ||| get debug	count=2
namespace	in either iso-8859-1 ||| function	count=1
namespace	object ||| yaf_action_abstract	count=1
function_name	key is the private ||| openssl x509 check private	count=1
function_name	returns event [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	of ||| image	count=1
function_name	group expand ||| expand	count=1
function_name	vector ||| vector	count=1
function_name	country ||| country	count=1
arg_pair	function sets the ||| resource $id	count=1
function	[function_name_1] tracing ||| [function_name_1] set action [arg_pair_2]	count=1
return	a result ||| string	count=1
function_name	depending on ||| pathinfo	count=1
function_name	the field [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	the first occurrence ||| string $haystack string $needle	count=1
function_name	the thread id for ||| thread id	count=1
arg_pair	uri ||| string $uri string $encoding	count=1
function_name	error message ||| error message	count=2
function_name	an object containing ||| object	count=1
function	[function_name_1] of ||| [function_name_1] [arg_pair_2]	count=3
function_name	returns the specified distortion ||| get	count=1
function_name	intersection of arrays ||| uintersect assoc	count=1
function_name	terminals [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	sets an ||| set	count=2
function_name	the parent directorys ||| dirname	count=1
function	[function_name_1] the ||| [function_name_1] output [arg_pair_2]	count=4
function_name	dump ||| dump	count=1
function_name	[function_name_1] [function_name_2] image ||| [function_name_1] [function_name_2]	count=1
function_name	request ||| get request	count=1
return	gearmanclient::addtasklow() ||| bool	count=1
function_name	descriptor and another ||| eio sendfile	count=1
return	to each ||| bool	count=1
function_name	if [function_name] ||| pg [function_name] is null	count=2
return	redirect [return] ||| [return]	count=2
arg_pair	ann based on ||| resource $ann array $input_vector	count=1
function_name	server connected ||| server	count=1
namespace	current node ||| splpriorityqueue	count=1
arg_pair	converts [arg_pair] ||| [arg_pair]	count=1
function_name	[function_name] field ||| field [function_name]	count=1
function_name	context [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	subject ||| mixed $subject	count=1
function	scale [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	used by php internally ||| set state	count=1
function_name	mode ||| mode	count=14
rest	[return_1] another point ||| [return_1] pdf [function_2]	count=2
function_name	the given postgresql ||| pg	count=3
function_name	[function_name_1] the learning ||| [function_name_2] [function_name_1]	count=2
function_name	prepares for ||| yaz	count=1
arg_pair	file from ||| resource $pdfdoc string $filename	count=1
function_name	activates a previously ||| pdf activate	count=1
arg_pair	the object_id ||| string $timeout	count=1
function_name	imagemagick package ||| package	count=1
arg_pair	and the associated data ||| resource $pdfdoc int $textflow	count=1
function_name	point with ||| point	count=1
function_name	starting line number ||| get start line	count=1
arg_pair	the ||| resource $ch int $opt	count=1
function_name	last error which ||| error	count=1
arg_pair	a string ||| string $number int $frombase	count=1
function_name	affected by the ||| fbsql affected	count=1
return	internally it shouldnt need ||| mongoid	count=1
namespace	method checks whether the ||| mongocursorinterface	count=1
arg_pair	of the ||| resource $link_identifier	count=2
arg_pair	simulates ||| float $sigma	count=1
function_name	expand [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	glyph at position ||| symbol	count=1
return	child ||| void	count=1
function_name	the sarprop step ||| sarprop step	count=6
function_name	[function_name_1] one and ||| [function_name_2] file [function_name_1]	count=1
function_name	[function_name_1] relative location ||| [function_name_2] [function_name_1]	count=1
function_name	sign redirects automatically which ||| redirects	count=1
arg_pair	a php ||| string $name mixed $step_callback	count=1
arg_pair	supplied hash ||| string $hash	count=1
namespace	the evfork watcher object ||| evfork	count=1
function_name	and host ||| disable	count=1
function_name	optional ||| optional	count=1
function_name	dbms_sql ||| implicit resultset	count=2
namespace	without following [namespace] ||| [namespace]	count=1
arg_pair	the result set starting ||| resource $result	count=1
function	[function_name_1] an initialization ||| [function_name_1] iv [arg_pair_2]	count=1
function_name	all ||| add	count=1
arg_pair	that the property ||| mixed $value	count=1
function_name	specified color+alpha in ||| imagecolorexactalpha	count=1
arg_pair	pattern ||| mixed $pattern	count=1
arg_pair	files within a ||| string $mask	count=1
arg_pair	registers a php function ||| string $name	count=2
function_name	get results of next ||| cubrid next	count=1
return	move all data from ||| bool	count=1
function_name	timeout in ||| timeout	count=1
namespace	a base character ||| intlchar	count=1
function_name	message queue with the ||| queue	count=1
function_name	of ||| gethostbyaddr	count=1
return	correlation with [return] entries they ||| [return]	count=1
function_name	debugging information into ||| debug information	count=1
function_name	sqlite sql statement ||| sqlite	count=1
function_name	method provides a stride ||| stride for	count=1
function_name	an index on ||| index	count=1
function_name	returns event [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	transforms the source node [function_name_1] [function_name_2] applying the ||| int transform [function_name_1] [function_name_2]	count=2
namespace	resource suitable ||| function	count=1
function_name	for the ||| get	count=1
function_name	[function_name_1] of current ||| [function_name_2] [function_name_1]	count=2
function_name	job handle for ||| job handle	count=4
arg_pair	variable can be called ||| mixed $var	count=1
namespace	reason the ||| function	count=1
function_name	in the user cache ||| wincache ucache	count=1
function_name	the priority ||| getpriority	count=1
function_name	the minimum client ||| min client	count=1
namespace	this function allows to ||| function	count=1
function_name	when using mppe ||| radius demangle mppe	count=1
function_name	root elements uri ||| root element uri	count=3
return	activate or ||| bool	count=1
function_name	pagination information send ||| ldap control paged result response	count=1
function_name	notifies ||| gupnp service notify	count=2
return	to modify the resource ||| bool	count=1
namespace	host checks this is ||| oauth	count=1
namespace	persistent ||| sphinxclient	count=1
return	stops and restarts ||| void	count=1
function_name	by ||| bzerrstr	count=1
function_name	adds a tag ||| bbcode add	count=1
function_name	for the given xml ||| xml	count=1
return	and for ||| array	count=1
function_name	[function_name_1] exists or ||| [function_name_2] [function_name_1]	count=4
function_name	translate iso-8859 characters to ||| ldap 8859 to	count=1
arg_pair	set the uri containing ||| string $uri string $encoding	count=1
function_name	for ||| get	count=3
function_name	the [function_name] line ||| [function_name]	count=1
function_name	keys maintain their correlation ||| uasort	count=1
function_name	attaches [function_name_2] ||| [function_name_1] vendor [function_name_2]	count=1
arg_pair	script to a messaging ||| string $protocol array $properties	count=1
arg_pair	a php string value ||| string $value	count=1
arg_pair	prepares a query ||| string $query	count=1
return	after the ||| void	count=1
function_name	by generating ||| openssl sign	count=1
arg_pair	and enables z39 ||| resource $id	count=1
arg_pair	key the first ||| int $key	count=1
function_name	sunset time ||| date sunset	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] connection [function_name_2]	count=1
return	gets the string to ||| void	count=1
function_name	get current page of ||| get current page	count=1
function_name	inserts [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	set of backends ||| backends	count=2
arg_pair	brightness saturation ||| float $brightness float $saturation	count=1
arg_pair	that corresponds to cert ||| mixed $cert	count=1
function_name	or ||| fbsql	count=1
function_name	[function_name_1] handler in ||| [function_name_2] [function_name_1]	count=1
function_name	represented ||| set metadata	count=2
function_name	for the last tuple ||| dbplus last	count=1
function_name	string padded on ||| str pad	count=2
function	uid [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	a ||| resource $proxy	count=1
function_name	type of ||| type	count=2
return	of the last executed ||| int	count=1
return	[return] by sending ||| [return]	count=1
function_name	number ||| start	count=1
function_name	the last performed yaz_scan() ||| yaz scan result	count=1
function_name	failed ||| errnum	count=1
function_name	next query ||| cubrid next	count=1
arg_pair	array1 against ||| array $array1	count=2
function_name	an offset into ||| offset	count=1
function_name	be dismax [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	the file ||| file	count=3
function_name	cipher by ||| cipher	count=1
function_name	specific row in a ||| db2 fetch row	count=1
function	[function_name_1] key ||| [function_name_1] get int $key [arg_pair_2]	count=1
arg_pair	variable to ||| mixed $parameter mixed $variable	count=1
function_name	minimum [function_name_2] ||| [function_name_1] [function_name_2]	count=15
function_name	specified database ||| fbsql db	count=1
arg_pair	up callback to be ||| mixed $callback	count=1
namespace	imagick object and frees ||| imagick	count=1
function_name	false when ||| cubrid	count=1
namespace	name used with the ||| function	count=1
function_name	on phrase queries built ||| phrase	count=1
function_name	digest for [function_name] image pixel ||| [function_name] image	count=1
function_name	oci_parse() or obtained ||| statement	count=1
namespace	with xsltprocessor ||| xsltprocessor	count=1
arg_pair	of the ||| int $format	count=1
function_name	that matches color with ||| paint transparent image	count=1
function_name	control point [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	new quickhashinthash ||| quickhashinthash	count=1
function_name	previous frontbase ||| fbsql	count=1
function_name	or set the ||| fbsql	count=1
function_name	field type is returned ||| field type	count=1
function_name	float range filter ||| filter float range	count=1
namespace	by the unicode code ||| intlchar	count=1
arg_pair	a string ||| resource $psdoc string $text	count=1
arg_pair	how large the ||| resource $ann	count=1
namespace	[namespace] on disk ||| [namespace]	count=1
rest	request to [function_2] ||| [return_1] pg send [function_2]	count=4
function_name	event that the ||| event	count=1
function_name	new ssl ||| ssl filter	count=1
function	exists in [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	msql_fetch_array() [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function	text [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	removes [function_name_2] ||| [function_name_1] mlt query [function_name_2]	count=1
function_name	passed with an url ||| with url	count=1
function_name	specific row in ||| db2 fetch	count=1
function_name	cipher by means ||| get cipher info	count=1
arg_pair	this imagickpixel object ||| imagickpixel $color float $fuzz	count=1
function_name	[function_name] directly ||| [function_name] cascadetrain on file	count=1
arg_pair	equivalent to memcached::getmulti() except ||| string $cas_tokens	count=1
function_name	code of the host ||| host	count=1
return	of any ||| bool	count=1
function_name	to fit the window ||| fit	count=1
arg_pair	information provided by dn ||| array $dn resource $privkey	count=1
function_name	a set ||| run	count=1
arg_pair	the behavior of ||| int $count	count=1
arg_pair	a ||| string $namespace_uri	count=1
function_name	from a given result ||| ibase	count=1
function_name	gettext() and similar functions ||| bind textdomain	count=1
function_name	gets a list ||| get	count=2
arg_pair	file ||| resource $pdfdoc string $filename	count=2
function_name	matches ||| opaque paint	count=1
return	a list ||| array	count=1
arg_pair	of the ||| resource $result_id int $row_number	count=1
function_name	by odbc_do() or odbc_exec() ||| odbc	count=1
function_name	curl [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	first attribute ||| ldap first attribute	count=2
function_name	used to trace the ||| debug	count=1
function_name	by gettext() and ||| textdomain	count=1
namespace	an xml document ||| domdocument	count=1
arg_pair	address port number ||| int $port	count=1
namespace	tokyotyrant object ||| tokyotyrant	count=1
function_name	siwtch on/off exception ||| exception	count=1
function_name	the database specified with ||| dba	count=1
return	[return] you ||| [return]	count=6
function_name	given result identifier ||| ibase fetch	count=1
arg_pair	yet ||| int $expire	count=1
function_name	code ||| message	count=1
arg_pair	the associated ||| resource $pdfdoc	count=1
arg_pair	immediately after the ||| int $options	count=1
namespace	lucene supports escaping special ||| solrutils	count=1
function	creating a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	sets the global ||| set gravity	count=1
arg_pair	point for new drawing ||| float $x	count=1
function_name	running the tasks ||| run tasks	count=1
function_name	[function_name_1] absent index ||| [function_name_1] [function_name_2]	count=4
function_name	compares data and indexes ||| uassoc	count=1
arg_pair	a result set listing ||| string $schema	count=2
arg_pair	mode on ||| resource $stream bool $mode	count=1
function_name	[function_name_1] train ||| [function_name_1] num [function_name_2]	count=1
namespace	pixel ||| imagick	count=1
arg_pair	before it is sent ||| resource $link string $source_string	count=1
function_name	frequency at which words ||| set mlt min doc frequency	count=1
namespace	the type of ||| function	count=1
function_name	[function_name_1] term ||| [function_name_1] [function_name_2]	count=1
function_name	this function returns ||| get	count=2
function_name	ids ||| by ids	count=1
function_name	feed ||| feed	count=1
namespace	element ||| recursivetreeiterator	count=2
arg_pair	[arg_pair_1] write events ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	this function runs ||| newt run	count=2
function_name	that block returns ||| get	count=1
function_name	a postgresql database ||| pg	count=1
function_name	[function_name_1] location of ||| [function_name_1] [function_name_2]	count=2
arg_pair	using specified ||| resource $privkey	count=1
function_name	data assumed ||| utf8	count=1
function_name	all methods accepting socket ||| socket fd	count=1
function_name	the specified status callback ||| task status	count=1
return	more results to ||| bool	count=1
arg_pair	supplied hash implements the ||| string $hash	count=1
namespace	set ||| gearmanclient	count=1
function_name	called by ||| set	count=1
function_name	any pixel that matches ||| paint transparent	count=1
arg_pair	to memcached::replace() ||| int $expiration	count=1
arg_pair	stores them in ||| int $protocol	count=1
function	creates [arg_pair_2] ||| [function_name_1] processing instruction [arg_pair_2]	count=2
arg_pair	a file with a ||| string $dir string $prefix	count=1
arg_pair	between old_data string ||| string $old_data	count=1
namespace	used in v8js ||| v8js	count=1
function_name	[function_name_1] process ||| [function_name_2] [function_name_1]	count=1
arg_pair	of array1 ||| array $array2	count=5
function_name	user ||| user	count=4
function_name	block returns ||| get	count=1
function_name	[function_name_1] handler to ||| [function_name_2] [function_name_1]	count=1
arg_pair	line width for ||| resource $psdoc float $width	count=1
arg_pair	pattern ||| string $pattern	count=3
arg_pair	opposite of htmlentities() ||| int $flags	count=1
function_name	extracts the pid from ||| pid	count=1
arg_pair	set the uri ||| string $encoding	count=1
function_name	global meta-data ||| metadata	count=1
function_name	specified action return values ||| gupnp service action	count=1
namespace	number of [namespace] rows ||| [namespace]	count=1
return	contents of the ||| bool	count=1
function_name	must be called after ||| loop	count=1
function_name	last absent index ||| last empty	count=2
function_name	number ||| imap num	count=1
function	new pdf [arg_pair_2] ||| [function_name_1] [arg_pair_2] string $optlist	count=1
return	loop ||| evloop	count=1
function_name	removes all ||| clear	count=1
arg_pair	particular [arg_pair] from ||| [arg_pair]	count=1
return	removes ||| bool	count=1
function_name	mime charset ||| preferred mime name	count=1
arg_pair	as a timestamp ||| int $timestamp	count=2
function_name	the background returning ||| background	count=2
function_name	had errors ||| errors	count=1
function_name	[function_name_1] the timeout ||| [function_name_2] [function_name_1]	count=1
function_name	a random number ||| random range	count=1
function_name	to facet ||| facet limit	count=1
arg_pair	function sets the ||| resource $id string $elementset	count=1
function_name	use for validation ||| set relax ngschema source	count=1
function_name	of the table ||| table	count=1
function_name	by odbc_do() or odbc_exec() ||| odbc fetch row	count=1
function_name	stream representing ||| stream	count=1
function_name	page on the page ||| page	count=1
function_name	shouldnt need ||| set	count=1
arg_pair	of haystack ||| string $haystack	count=7
function_name	a ||| construct	count=3
namespace	entering or continuing ||| evloop	count=1
function_name	topmost ||| end	count=1
function	[function_name_1] delete operations ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	variable specified by variable ||| string $variable	count=1
function_name	set ||| enchant broker set dict	count=1
function_name	an extended json string ||| db\bson\from json	count=1
function_name	the color ||| color	count=1
arg_pair	the server yet ||| int $flag int $expire	count=1
arg_pair	value ||| string $name string $value	count=1
function_name	patches a string ||| xdiff string bpatch	count=1
function_name	a valid [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	subject ||| string $subject	count=2
arg_pair	much like mssql_connect() with ||| string $password bool $new_link	count=1
arg_pair	subject for matches ||| mixed $subject	count=1
return	already defined ||| bool	count=1
function_name	returns the item that ||| get	count=1
function_name	sets a value for ||| set	count=1
function_name	fork in the ||| fork	count=1
arg_pair	the unescaped_string ||| resource $link_identifier	count=1
function_name	returns ||| mysqli stmt error list	count=1
function_name	[function_name_1] border ||| [function_name_1] [function_name_2]	count=4
function_name	encoding ||| pdf encoding set	count=1
function_name	particular image ||| image	count=2
function	write [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	amount of time ||| immortal	count=1
function_name	notifies ||| notify	count=1
function_name	highlighted version ||| highlight file	count=1
namespace	[namespace] either ibase_connect() ||| [namespace]	count=3
arg_pair	distinguished name to ||| array $extraattribs	count=1
function_name	fields pf2 and ||| fields	count=1
arg_pair	data ||| int $level	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] action [function_name_2]	count=1
function_name	memory ||| memory	count=2
arg_pair	replication ||| bool $check_consistency	count=1
arg_pair	gets the value of ||| resource $p	count=1
function_name	relative location [function_name_2] ||| [function_name_2] device get [function_name_1]	count=1
namespace	job ||| gearmanclient	count=2
function_name	file named by ||| file	count=2
function_name	[function_name_1] momentum ||| [function_name_2] [function_name_1]	count=3
arg_pair	is the opposite of ||| string $string	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] to personal [arg_pair_2]	count=1
function_name	of current ||| add buffer	count=1
arg_pair	during ||| resource $ann resource $data	count=1
arg_pair	mailboxes that ||| string $ref	count=1
function_name	query determines which documents ||| query	count=1
namespace	returns a ||| sqlite3stmt	count=1
function	is used to [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	method is not used ||| mongodb	count=1
function_name	frequency used ||| frequency	count=1
arg_pair	with the given password ||| string $password	count=1
return	whether a ||| bool	count=1
arg_pair	this method scales the ||| int $height	count=1
arg_pair	in the result-set ||| int $type	count=1
function	false [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	stroking color [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	sets whether [function_name_2] ||| [function_name_1] highlight [function_name_2] phrase	count=1
function_name	with the phar::startbuffering() method ||| buffering	count=1
function_name	string reference of ||| mb decode numericentity	count=1
function_name	[function_name] treated ||| facet date [function_name]	count=1
arg_pair	start inclusive limit ||| mixed $start mixed $limit	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] enc [function_name_2]	count=6
function_name	general ||| enum char	count=1
return	for production environments ||| bool	count=1
namespace	the named ||| function	count=1
function_name	bit [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	the data store ||| apcu add	count=1
function_name	sets ||| set mlt min	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] unescape [function_name_2]	count=1
function_name	gets the minimum ||| min	count=1
function_name	[function_name_1] for the ||| [function_name_2] [function_name_1]	count=6
namespace	amount ||| mongocursor	count=1
arg_pair	supplied hash implements the ||| string $hash integer $algo	count=1
function_name	returned by gettext() ||| bind textdomain	count=1
function_name	the specified field is ||| mysql field	count=1
arg_pair	a timestamp and ||| int $timestamp int $format	count=2
function_name	[function_name_1] attribute in ||| [function_name_1] [function_name_2]	count=3
function_name	value for ||| get	count=1
function_name	[function_name] an entry ||| [function_name] index	count=2
function_name	ends ||| endpath	count=1
function_name	cache ||| apc	count=1
function_name	value for the document ||| get	count=1
function_name	the mode is ||| mode	count=1
namespace	pixel color ||| imagick	count=1
function_name	[function_name_1] loader ||| [function_name_2] [function_name_1]	count=5
rest	[return_1] [function_2] ||| [return_1] remove attribute [function_2]	count=3
return	or in at least ||| bool	count=1
arg_pair	apcs data store ||| string $cache_type bool $limited	count=1
arg_pair	match for a ||| string $option	count=1
function	creating a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	given interface [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	field pf2 parameter ||| field	count=1
function_name	vertical descent ||| descent	count=1
function	file or [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	function will accept ||| function	count=1
arg_pair	the given variable_key ||| resource $shm_identifier int $variable_key	count=1
return	current time as returned ||| double	count=1
function_name	blob ||| ibase blob	count=3
arg_pair	the result set ||| resource $result	count=2
function_name	sets [function_name_2] ||| [function_name_1] lob [function_name_2]	count=2
return	to return ||| void	count=1
arg_pair	into an ||| int $storage array $pixels	count=1
return	for the ||| string	count=1
function_name	the column names ||| column names	count=1
namespace	property ||| reflectionproperty	count=4
return	of the page to ||| bool	count=3
function_name	collating function within sql ||| create collation	count=1
function_name	returns the mime ||| mime	count=1
function_name	starts running the ||| run	count=1
function_name	matches color with ||| paint opaque	count=1
arg_pair	seconds and nanoseconds ||| int $nanoseconds	count=1
function_name	iterator is valid ||| valid	count=2
function_name	stored value ||| apc cas	count=1
function_name	json string ||| json	count=1
arg_pair	file in filename from ||| string $filename	count=1
return	of time cursors ||| mongocursor	count=1
arg_pair	jd ||| int $jd	count=1
function_name	creating a new ||| get active	count=1
return	changed to ||| bool	count=1
function_name	printable string ||| printable decode	count=1
arg_pair	from the update log ||| string $log_dir	count=1
namespace	although this function ||| function	count=1
arg_pair	as a timestamp and ||| int $timestamp int $format	count=2
function_name	set the ||| database	count=1
namespace	phar archive using either ||| pharfileinfo	count=1
namespace	function returns the cubrid ||| function	count=1
function_name	of days in ||| days in	count=1
function_name	[function_name] os ||| get [function_name]	count=3
function_name	a result ||| result	count=1
function_name	a row as a ||| object	count=1
arg_pair	[arg_pair_1] haystack ||| [arg_pair_2] string $needle [arg_pair_1]	count=2
function_name	gets ||| get path	count=1
function_name	this call starts running ||| run	count=1
function_name	null policy ||| null policy	count=2
function_name	the sql type ||| type	count=1
arg_pair	sequence ||| string $sequence	count=1
function_name	a paradox database ||| px	count=1
function_name	the iv belonging ||| get iv	count=1
function	[function_name_1] given object ||| [function_name_1] [arg_pair_2]	count=5
return	a string containing ||| string	count=8
arg_pair	identical to htmlspecialchars() in ||| string $encoding bool $double_encode	count=1
function_name	removes all current ||| clear	count=1
function_name	gets the length ||| mb strlen	count=1
function_name	[function_name] described ||| dba [function_name]	count=1
function_name	with block algorithms ||| block	count=1
function_name	[function_name_1] real path ||| [function_name_1] [function_name_2]	count=1
function_name	messages or information from ||| info read	count=1
namespace	of an internal ||| function	count=1
function_name	the last tuple for ||| last	count=1
function_name	php logo using ||| php logo guid	count=2
function_name	alpha ||| alpha	count=1
arg_pair	bordercolor imagickpixel ||| int $width	count=1
function_name	current cpu usage ||| posix times	count=1
arg_pair	[arg_pair_1] from object_id ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	[function_name_1] query with ||| [function_name_1] [function_name_2]	count=1
function_name	sets the increase ||| set rprop increase	count=2
return	servers to see if ||| bool	count=1
function_name	valid socket resource ||| socket connect	count=1
function_name	pdi document ||| get pdi	count=1
function_name	the error string of ||| bzerrstr	count=1
function_name	[function_name_1] or context ||| [function_name_2] [function_name_1]	count=4
arg_pair	variable ||| mixed $parameter mixed $variable	count=1
function_name	time for ||| time	count=2
function_name	a block ||| is block	count=1
arg_pair	changes the transparency ||| float $alpha	count=1
namespace	represented with existing information ||| pharfileinfo	count=1
function_name	posix ||| posix strerror	count=1
namespace	used by php internally ||| mongoid	count=1
namespace	the contents ||| cachingiterator	count=1
function_name	path for ||| path	count=2
function_name	closes ||| sybase close	count=2
namespace	splfileinfo object for ||| splfileinfo	count=1
function_name	gets the ||| pdf get	count=1
namespace	should not be ||| pharfileinfo	count=1
arg_pair	that the ||| mixed $value	count=2
return	from the set ||| bool	count=1
function_name	the width of the ||| width	count=1
function_name	all elements with ||| elements by	count=1
arg_pair	to the ||| float $max	count=1
arg_pair	the ||| string $data int $mode	count=2
arg_pair	or a list of ||| string $fk_owner	count=1
function_name	a id3v2 ||| id3v2	count=1
return	to the start point ||| bool	count=1
function_name	[function_name] of ||| [function_name] field length	count=1
arg_pair	in the given entry ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	sets ||| set facet enum	count=1
return	the ||| mongocursor	count=1
arg_pair	multi-value fields if a ||| string $fieldname	count=1
function_name	[function_name_1] underlying output ||| [function_name_1] [function_name_2]	count=1
function_name	to mssql_fetch_array() with ||| mssql	count=1
function_name	minimum client severity level ||| sybase min client severity	count=1
arg_pair	new mailbox see ||| resource $imap_stream string $old_mbox	count=1
return	to stroking ||| bool	count=1
return	file ||| bool	count=1
function_name	a constructor ||| constructor	count=1
arg_pair	from domain ||| string $codeset	count=1
function_name	iv belonging ||| mcrypt get iv	count=1
arg_pair	the server thats ||| resource $link_identifier	count=1
return	the database has no ||| bool	count=1
function_name	weights by name ||| weights	count=1
function_name	the current active ||| fbsql select	count=1
function_name	symbolic link ||| is link	count=1
function_name	returns the number of ||| count	count=3
function_name	is the private ||| x509 check private	count=1
function_name	returns group ||| get group	count=2
function_name	array with [function_name] a ||| ibase param [function_name]	count=1
arg_pair	parses a string ||| string $enclosure	count=1
function_name	span the ||| stretch	count=1
function_name	set options on ||| set option	count=1
function_name	of [function_name] ||| set [function_name]	count=2
return	winding number ||| bool	count=1
return	pixel color ||| bool	count=1
function_name	sets the current active ||| sybase select	count=1
function_name	doc [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	tells ||| suspend	count=1
arg_pair	prepares sql_text using connection ||| string $sql_text	count=1
return	the current ||| float	count=1
return	of current eventbuffer ||| bool	count=1
function_name	register your own ||| register	count=1
arg_pair	[arg_pair_1] fill ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	set multiset sequence attribute ||| col get	count=1
return	of the archive entry ||| int	count=1
arg_pair	specified result identifier ||| resource $result_id mixed $position	count=1
function_name	trace the ||| maxdb debug	count=1
function_name	[function_name_1] group results ||| [function_name_2] [function_name_1]	count=1
namespace	from the [namespace] field is ||| [namespace]	count=1
function_name	blob/clob data ||| cubrid lob	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] cipher [function_name_1]	count=1
return	entry ||| bool	count=1
function	anchor [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	set the activation ||| fann set activation	count=9
namespace	hash in the ||| quickhashinthash	count=1
arg_pair	add new columns ||| array $columns	count=1
namespace	gearmanclient::addtasklowbackground() this ||| gearmanclient	count=1
function_name	array contains any more ||| valid	count=2
function_name	increase [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	insert ||| insert	count=3
function_name	a ||| metadata	count=2
function_name	stored with ||| metadata	count=1
function_name	[function_name_1] phrase queries ||| [function_name_2] [function_name_1]	count=1
return	call ||| bool	count=1
function_name	external ||| external	count=4
arg_pair	of delete operations ||| mongocollection $collection array $write_options	count=1
function_name	uid for the ||| uid	count=1
function_name	[function_name_1] default ||| [function_name_1] [function_name_2]	count=2
namespace	rpc service ||| yar_server	count=1
function_name	adds a request ||| add	count=1
function_name	image [function_name_2] ||| [function_name_2] [function_name_1]	count=38
arg_pair	the given password on ||| string $password	count=1
function_name	iterators children ||| get children	count=1
return	is ||| mongoid	count=1
function_name	the idle callback ||| idle	count=1
namespace	or continuing the ||| evloop	count=1
function_name	current stroking color ||| get gray stroke	count=1
function_name	the product of ||| product	count=1
return	idle on ||| mongocursor	count=1
function_name	called to set environmental ||| set environment	count=1
return	and the database has ||| bool	count=1
return	nonzero ||| bool	count=1
function_name	mime content [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	of a and ||| int	count=1
function_name	tells newt ||| newt suspend	count=2
function_name	an update ||| update	count=1
function_name	name of ||| get current	count=1
function_name	modules list defined ||| modules	count=1
function_name	runs the ||| run	count=1
function_name	multi ||| curl multi	count=1
function_name	retrieves the file extension ||| get extension	count=2
arg_pair	position pointing [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	filter ||| set filter float	count=1
function_name	main filter query ||| add expand filter query	count=1
function_name	row as ||| object	count=1
arg_pair	before it is ||| resource $link string $source_string	count=1
function_name	field [function_name_2] ||| [function_name_1] [function_name_2]	count=5
return	specified table ||| resource	count=1
function_name	current text object ||| text	count=1
function_name	image alpha channel ||| image alpha channel	count=3
function_name	the [function_name] ||| [function_name] service status	count=3
function_name	minimum ||| fann get cascade min	count=1
function_name	range filter ||| set filter float range	count=1
function_name	variable ||| variable	count=1
function	[function_name_1] a country ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	key ||| int $max_acquire	count=1
return	only be ||| void	count=1
namespace	splobjectstorage object ||| splobjectstorage	count=1
function_name	fetch an access token ||| get access token	count=1
arg_pair	requirements of the ||| int $format int $width	count=1
namespace	function allows ||| function	count=3
arg_pair	javascript script as ||| string $extension_name string $script	count=1
function_name	train ||| train data	count=4
arg_pair	be recognized as a ||| string $filename bool $executable	count=1
namespace	buffer for ||| eventbuffer	count=1
function_name	document frequency to ||| terms	count=1
arg_pair	haystack starting from ||| string $haystack	count=1
function_name	from all the following ||| recursive	count=1
function_name	database and saves its ||| export	count=1
function_name	specified field ||| fbsql field	count=3
function_name	[function_name_1] event base ||| [function_name_1] [function_name_2]	count=1
arg_pair	name used with ||| resource $link_identifier	count=1
function_name	rewinds array s ||| reset	count=1
function_name	initialize ||| init	count=3
arg_pair	in || b ||| array $b	count=2
function_name	descale input and ||| fann descale	count=1
function_name	[function_name_1] printable ||| [function_name_2] [function_name_1]	count=6
arg_pair	to the message ||| bool $serialize	count=1
arg_pair	[arg_pair_1] to pattern ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=1
function_name	network from ||| fann create from	count=1
function_name	removes an ||| remove	count=2
function_name	removes [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	[function_name] this server ||| get [function_name]	count=1
function_name	returns client [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	the socket ||| int $backlog	count=1
function_name	a name to ||| name	count=1
arg_pair	given color pair ||| int $fg	count=1
arg_pair	the named domain ||| string $domain	count=1
function	the inverse [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] environmental ||| [function_name_1] [function_name_2]	count=4
function_name	the timer ||| timer	count=1
function_name	creates and [function_name_2] ||| [function_name_2] context [function_name_1]	count=1
namespace	specified function e ||| function	count=1
function_name	calculates bitwise and ||| and	count=1
function_name	disables ||| disable	count=1
function_name	gets modifier names ||| get modifier names	count=2
namespace	sqlite3 library ||| sqlite3	count=1
arg_pair	file ||| array $options	count=1
function_name	table that the ||| table	count=3
arg_pair	[arg_pair_1] distinguished name ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	an xml document from ||| save xml	count=1
namespace	statement and ||| sqlite3stmt	count=1
function_name	postgresql ||| pg	count=15
function_name	[function_name_1] bitrate ||| [function_name_1] [function_name_2]	count=1
return	added with gearmanclient::addtask() ||| bool	count=1
function_name	with result ||| result	count=1
function_name	returns ||| qc get	count=1
function_name	given result identifier ||| fetch object	count=1
namespace	the current iterator ||| splobjectstorage	count=1
return	previously added with ||| bool	count=1
arg_pair	with the color ||| float $fuzz int $channel	count=1
arg_pair	of the output connections ||| int $neurons_between_reports	count=1
function_name	takes a ||| export	count=1
namespace	amount of time ||| mongocursor	count=1
return	contents of the input ||| bool	count=1
function_name	the last [function_name] during ||| json last [function_name]	count=1
function_name	specified location in ||| imagecolorat	count=1
function_name	compare value of ||| compare	count=1
function_name	value of the miter ||| miter	count=2
function_name	line number where ||| line	count=2
function_name	phar::startbuffering() method can ||| start buffering	count=1
function_name	tidy warnings ||| warning	count=1
function_name	field ||| fbsql field	count=3
function_name	sybase_fetch_row() that ||| sybase	count=1
return	file position ||| int	count=1
arg_pair	table databases ||| string $key mixed $increment	count=1
arg_pair	consists of ||| resource $filehandle int $startpos	count=1
function	to creating [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	schema defined ||| schema	count=1
function_name	the cascade candidate ||| cascade candidate	count=2
function_name	network from a ||| fann create	count=1
function_name	the built in __autoload() ||| spl autoload	count=1
function_name	cipher by means of ||| get cipher info	count=1
function_name	access token secret ||| get access token	count=2
function_name	add [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] check ||| [function_name_2] [function_name_1]	count=3
function_name	row ||| mssql fetch	count=1
function_name	[function_name_1] reference ||| [function_name_2] [function_name_1]	count=2
function_name	sets a specific object ||| set object	count=1
function	image such [arg_pair_2] ||| [function_name_1] match [arg_pair_2]	count=3
arg_pair	filter filtertype ||| int $filtertype	count=1
function_name	image obtained ||| imagecreatefromwebp	count=1
arg_pair	a directory on ||| string $dirname	count=1
function_name	the specified events is ||| event	count=1
function_name	mime content [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	query [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	a ||| string $path	count=1
function_name	and its size for ||| and size	count=1
function_name	sets the [function_name_2] ||| [function_name_1] [function_name_2] data handler resource	count=1
function_name	url ||| url	count=1
function_name	enhances the contrast ||| contrast	count=1
function_name	target ||| target	count=2
namespace	the current boost value ||| solrinputdocument	count=1
function_name	and add ||| add	count=1
function_name	that job handle for ||| job handle	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] min out epochs [arg_pair_2]	count=1
function_name	end ||| end	count=1
namespace	records ||| tokyotyrant	count=1
arg_pair	communication to a file ||| string $pathname string $mode	count=1
function_name	cascade candidate change fraction ||| cascade candidate change fraction	count=1
function_name	used ||| set state	count=2
arg_pair	by execute processing ||| callable $execute int $pri	count=1
function_name	learning rate is used ||| learning rate	count=1
arg_pair	retrieve get variable ||| string $default	count=1
function_name	send [function_name] ||| gupnp service proxy [function_name]	count=4
function_name	by socket ||| socket	count=1
arg_pair	in a script ||| callable $error_handler	count=1
arg_pair	supplied hash implements ||| string $hash integer $algo	count=1
function_name	current pdf file ||| pdf	count=1
function_name	memcached::res_* constants that ||| code	count=1
function_name	the maximum number ||| get cascade max	count=1
function_name	the given stream to ||| stream	count=1
function_name	divides a by ||| gmp div q	count=1
arg_pair	sql statement and returns ||| resource $conn_identifier string $sql	count=1
function_name	fetches multiple rows ||| oci fetch	count=1
function_name	which the socket ||| get socket	count=1
namespace	the connection ||| function	count=1
namespace	safe inclusion ||| sqlite3	count=1
arg_pair	a list of foreign ||| string $fk_owner string $fk_table	count=1
function_name	sets authentication parameter ||| svn auth set parameter	count=1
arg_pair	data by the name ||| resource $introspection	count=1
function_name	return value ||| return	count=1
function	the tables [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	parameters seconds and nanoseconds ||| int $nanoseconds	count=1
arg_pair	shell wildcard pattern ||| string $string	count=1
namespace	oauth ||| oauth	count=3
arg_pair	this method scales the ||| int $width	count=1
function_name	[function_name_1] the cascade ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] relative ||| [function_name_1] [function_name_2]	count=1
function_name	line width for ||| line width	count=2
namespace	string ||| function	count=1
function_name	get error ||| get error	count=4
function_name	format without reading ||| blob	count=1
function_name	is valid to the ||| proxy get	count=1
function_name	to [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	preprocesses text for ||| resource $pdfdoc string $text	count=1
function_name	integer range filter ||| set filter range	count=2
function_name	reads from [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	class [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	description ||| stomp	count=1
function_name	log levels ||| level	count=1
function_name	true if the ||| mcrypt module is	count=1
namespace	creates an array by ||| function	count=1
function_name	divides a ||| gmp div q	count=1
function_name	exports [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	the how parameter ||| int $how	count=1
function_name	a ||| maxdb	count=1
function_name	placeholder name which ||| array by name	count=1
function_name	the blob length ||| blob	count=1
arg_pair	file or directory ||| string $path int $uid	count=1
arg_pair	this function sets the ||| resource $id string $elementset	count=1
arg_pair	uri ||| string $cb	count=1
arg_pair	the character c ||| string $c	count=1
function_name	place after the ||| postfix	count=1
function_name	call the specified status ||| task status	count=1
function	the status [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	path [function_name] ||| pdf pcos [function_name]	count=2
function_name	stores an existing set ||| file	count=1
function_name	gets the priority ||| getpriority	count=1
function_name	path of the directory ||| dir	count=1
function_name	existing cubrid ||| cubrid	count=1
function_name	csr ||| csr sign	count=2
function_name	watcher again ||| again	count=1
function_name	bias in each layer ||| bias array	count=1
namespace	or set ||| function	count=1
function_name	value associated within ||| option	count=1
arg_pair	moves a ||| string $path string $new_path	count=1
function_name	or alter parser options ||| bbcode set	count=1
namespace	name of ||| yaf_router	count=1
function_name	query trace log ||| query trace log	count=1
function_name	config ||| pspell config	count=1
namespace	stylesheet given by ||| xsltprocessor	count=3
function_name	[function_name] image ||| get image [function_name]	count=1
function_name	the repository at ||| svn checkout	count=1
function_name	block algorithms [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	pattern for the page ||| int $phase	count=1
function_name	in conjunction ||| stop	count=1
arg_pair	replaces colors in ||| float $channel	count=1
function_name	[function_name_1] page of ||| [function_name_2] [function_name_1]	count=2
arg_pair	to maxlength ||| int $maxlength	count=1
function_name	border ||| set border	count=1
function_name	line [function_name_2] ||| [function_name_2] [function_name_1]	count=9
namespace	by ||| mongoid	count=2
return	or self executable ||| bool	count=1
function_name	rprop [function_name_2] ||| [function_name_2] set [function_name_1]	count=2
return	to at most ||| bool	count=1
namespace	a reflected extension ||| reflectionextension	count=1
function_name	minimum out [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	and stores the ||| xdiff file	count=2
function_name	ssl ||| ssl	count=4
function_name	described/referred ||| enchant broker set ordering	count=1
function_name	key sizes ||| key sizes	count=4
namespace	parameter ||| reflectionparameter	count=5
return	etc ||| bool	count=1
function_name	to be ||| max	count=1
arg_pair	send by the server ||| string $cookie int $estimated	count=1
arg_pair	filename into ||| string $filename	count=1
arg_pair	but accepts an array ||| array $args	count=1
function	[function_name_1] annotation ||| [arg_pair_2] [function_name_1]	count=4
namespace	simply ||| evperiodic	count=1
arg_pair	a specified offset ||| int $offset	count=1
return	gets a reflectionproperty ||| reflectionproperty	count=1
function_name	last response ||| last response	count=2
return	set of tasks previously ||| bool	count=1
function_name	set by the last ||| get last	count=1
arg_pair	y ||| float $y	count=1
function_name	[function_name] handler ||| xml set external [function_name] handler	count=1
function_name	the product of ||| array product	count=1
arg_pair	returns the ||| bool $before_needle string $encoding	count=1
function_name	the external attributes ||| set external attributes	count=3
function_name	convert numeric string reference ||| mb decode numericentity	count=1
function_name	size for ||| get size	count=2
function_name	connection to ||| db2 connect	count=1
return	user ||| mongoid	count=1
function_name	connection type corresponding ||| geoip	count=1
function_name	specified ||| pg fetch row	count=1
return	classes from the ||| bool	count=2
arg_pair	levels of ||| float $whitepoint int $channel	count=1
function_name	[function_name_1] socket is ||| [function_name_2] clear [function_name_1]	count=3
function_name	to get error ||| get error	count=2
function_name	represented by csr ||| openssl csr export to	count=1
namespace	this function determines ||| function	count=1
namespace	a task ||| gearmanclient	count=5
function_name	frontend/backend ||| trace	count=1
function_name	number of the given ||| number	count=1
function_name	[function_name_1] notation declaration ||| [function_name_1] [function_name_2]	count=1
arg_pair	offset with ||| int $offset	count=1
function_name	html document ||| save htmlfile	count=1
function	add [arg_pair_2] ||| [function_name_1] query field [arg_pair_2]	count=1
function_name	facet fields that should ||| facet	count=1
function_name	ldap link ||| ldap connect	count=1
function_name	required oauth [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	returns the scale ||| scale	count=1
function_name	as the readlink c ||| readlink	count=1
function_name	buffered event ||| event buffer	count=2
function_name	returns the status ||| status	count=2
return	on ||| mongocursor	count=1
namespace	instructs phar ||| phar	count=1
function_name	sets ||| timeout set	count=1
function_name	escape ||| escape	count=2
function_name	indicated ||| db2 field	count=3
function_name	exception original type ||| get type	count=1
function_name	called by ||| state	count=1
return	internet ||| string	count=1
arg_pair	cipher / ||| string $cipher	count=1
return	are sent [return] this ||| [return]	count=2
function_name	[function_name_1] parameter in ||| [function_name_2] [function_name_1]	count=1
arg_pair	it returns the file ||| int $use_include_path	count=1
function_name	in the neural network ||| fann get	count=1
function_name	set with ||| mysqli set	count=1
function_name	extracts ||| cropimage	count=1
namespace	by using ||| function	count=1
function_name	supported key [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	access modifiers for this ||| modifiers	count=2
function_name	result and then reading [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	into a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	set/get ||| mixed	count=1
namespace	the server for ||| mongocursor	count=1
arg_pair	contrast of ||| int $channel	count=1
function_name	in the training ||| train	count=3
function_name	clears sets ||| clrbit	count=1
function_name	currently defined ||| defined	count=1
function_name	the elements designated ||| splice	count=1
function_name	of activation steepnesses ||| get cascade activation steepnesses	count=1
function_name	an associative ||| assoc	count=1
return	the reason for a ||| string	count=1
arg_pair	of service needed from ||| int $service_level_option	count=1
function_name	slop on [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	pdi document ||| pdf get pdi value	count=1
namespace	[namespace] a way ||| [namespace]	count=3
return	[return] database ||| [return]	count=3
function_name	block algorithms [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	image with ||| image	count=2
namespace	although this function can ||| function	count=1
function_name	by php internally ||| state	count=1
function_name	the blob length and ||| blob	count=1
arg_pair	from a specific revision ||| string $repos_url int $revision_no	count=1
arg_pair	db2_prepare() ||| int $parameter-type	count=1
function_name	named [function_name] in ||| move to [function_name] ns	count=1
function_name	as ||| to	count=1
function_name	[function_name_1] type base64 ||| [function_name_2] [function_name_1]	count=1
return	the error ||| string	count=1
function_name	is not for production ||| disable	count=1
function_name	identifier ||| sybase fetch row	count=1
function_name	of the ||| get args	count=1
namespace	unicode character database ||| intlchar	count=1
function_name	specified field ||| field	count=7
function_name	pixels ||| pixels	count=1
function_name	but doesnt start ||| create stopped	count=1
function_name	remove edges that ||| trim	count=1
function_name	the same ||| bind to	count=1
function_name	is an ||| array	count=3
namespace	the referenced [namespace] to ||| [namespace]	count=1
arg_pair	challenge using specified ||| resource $privkey string $challenge	count=1
function_name	to a specific row ||| fetch	count=1
function_name	new ||| hwapi content new	count=2
return	result set ||| sqlite3result	count=1
arg_pair	a php variable ||| mixed $variable int $type	count=1
function_name	[function_name_1] nonce handler ||| [function_name_2] [function_name_1]	count=1
function_name	text interword ||| get text interline	count=2
function_name	organization that ||| geoip org by	count=1
function_name	activation steepnesses in ||| activation steepnesses	count=1
arg_pair	keys array ||| array $keys	count=1
return	not to ||| bool	count=1
arg_pair	supplied hash implements ||| string $hash	count=1
function_name	internally it shouldnt need ||| state	count=1
function_name	on the ||| str	count=1
function_name	for the last ||| last	count=2
function_name	in the sequence ||| layers	count=1
function_name	block ||| get block	count=1
arg_pair	server thats associated with ||| resource $link_identifier	count=1
return	returns an numeric ||| array	count=1
namespace	checks if the ||| splfixedarray	count=1
function_name	queries ||| by queries	count=1
function_name	a similarity image such ||| sub image	count=1
arg_pair	or zip-based ||| string $indexfile string $webindexfile	count=1
function_name	into the file ||| export to file	count=2
function_name	path for a ||| broker get dict path	count=1
function_name	exists content ||| body	count=1
function_name	the name ||| get	count=1
arg_pair	the result-set ||| int $type int $maxlen	count=1
function	[function_name_1] with a ||| [function_name_1] [arg_pair_2]	count=1
function_name	color ||| color	count=17
function_name	[function_name_1] comment ||| [function_name_2] [function_name_1]	count=7
arg_pair	oid ||| string $oid	count=3
arg_pair	jd into ||| int $jd	count=1
function_name	value [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	the training ||| fann	count=1
function_name	number of activation steepnesses ||| fann get cascade activation steepnesses	count=1
function_name	mbox names) ||| imap renamemailbox	count=1
namespace	server ||| mongocursor	count=1
arg_pair	returns a resource handle ||| string $separator	count=1
return	the supplied ||| bool	count=1
function_name	mode outputs blocks e ||| block mode	count=1
function_name	line number for ||| line number	count=2
arg_pair	the item will be ||| int $expiration	count=1
arg_pair	by given oid ||| resource $conn_identifier string $oid	count=1
function_name	[function_name_1] header ||| [function_name_2] [function_name_1]	count=3
arg_pair	fetches a row as ||| resource $result_id	count=1
arg_pair	of characters ||| string $str int $width	count=1
function_name	column of the ||| column	count=1
function_name	minimum word length ||| min word length	count=1
arg_pair	given sql statement ||| string $sql	count=1
function_name	contents of ||| load	count=1
arg_pair	a field ||| int $face	count=1
function_name	children ||| children	count=6
arg_pair	no database is given ||| string $collection mixed $id	count=1
namespace	domdocument object ||| domdocument	count=2
return	internet host specified ||| string	count=1
arg_pair	as a timestamp and ||| int $timestamp	count=2
arg_pair	number ||| string $host	count=1
function	binds a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	method is used to ||| bool	count=1
function_name	the event ||| loop	count=1
arg_pair	message [arg_pair] ||| [arg_pair]	count=1
arg_pair	specified mailbox ||| resource $imap_stream string $mailbox	count=1
function_name	personal wordlist ||| pspell config personal	count=2
arg_pair	specify a ||| string $fragmenter	count=1
function_name	and calls it ||| call	count=1
arg_pair	the object_id ||| string $object_id string $type	count=2
function_name	this service process ||| win32	count=1
function_name	by odbc_do() or odbc_exec() ||| odbc fetch	count=1
arg_pair	memcached::getmulti() except ||| string $cas_tokens int $flags	count=1
rest	[return_1] [function_2] ||| [return_1] newt draw root [function_2]	count=8
function_name	an image by scaling ||| image	count=1
arg_pair	row of ||| resource $result_identifier	count=1
function_name	constructs a new ||| construct	count=4
function_name	only be used ||| metadata	count=1
arg_pair	character code to html ||| bool $is_hex	count=1
arg_pair	associative array with server ||| int $slabid	count=1
return	a result set ||| sqlite3result	count=1
function_name	a plugin ||| plugin	count=1
return	if session ||| bool	count=1
function	[function_name_1] a server ||| [function_name_1] [arg_pair_2]	count=1
function_name	an url string ||| connect with url	count=1
namespace	cursors by ||| mongocursor	count=1
function_name	the activation steepness for ||| get activation steepness	count=1
function_name	the bytecodes [function_name] and ||| bcompiler parse [function_name]	count=1
arg_pair	number of ||| string $str	count=1
arg_pair	iteratively the callback function ||| array $array callable $callback	count=1
arg_pair	in the ||| int $type int $maxlen	count=1
arg_pair	callback ||| mixed $callback	count=1
function_name	a png ||| imagepng	count=1
namespace	path using nonzero ||| harupage	count=1
function_name	used by php internally ||| set	count=1
namespace	was ||| quickhashinthash	count=1
arg_pair	parameters to the ||| string $name int $type	count=1
function_name	[function_name_1] returns the ||| [function_name_2] [function_name_1]	count=2
function_name	determined by ||| openssl random pseudo	count=1
function_name	by php internally ||| set state	count=1
arg_pair	key ||| mixed $value	count=1
return	are suitable [return] cryptographic ||| [return]	count=1
arg_pair	combination of fbsql_fetch_row() and ||| int $result_type	count=1
rest	[return_1] execute a ||| [function_2] [return_1]	count=3
arg_pair	response ||| int $format	count=1
namespace	class is defined ||| reflectionclass	count=1
function_name	case-insensitive ||| grapheme stristr	count=2
function_name	status callback ||| status	count=1
function_name	[function_name] into a ||| [function_name] export	count=3
namespace	to ||| mongocursorinterface	count=2
function_name	[function_name_1] loop finished ||| [function_name_1] [function_name_2]	count=1
arg_pair	databases ||| string $key mixed $increment	count=1
function_name	[function_name_1] [function_name_2] query ||| [function_name_1] [function_name_2] query	count=2
function_name	diff ||| string diff	count=2
namespace	function used by ||| function	count=3
arg_pair	source string ||| int $flags	count=1
namespace	custom plugin implement this ||| yaf_plugin_abstract	count=1
namespace	no more ||| mongocursorinterface	count=1
namespace	get ||| stompexception	count=1
function_name	debug [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	a syncsemaphore object or ||| syncsemaphore	count=1
function_name	the sarprop [function_name_2] ||| [function_name_1] [function_name_2]	count=11
function_name	personal ||| personal	count=1
function_name	component ||| component	count=1
function_name	last return code issued ||| return code	count=1
function_name	internally ||| set state	count=2
function_name	[function_name_1] term to ||| [function_name_2] [function_name_1]	count=1
namespace	of a syncsemaphore object ||| syncsemaphore	count=1
function_name	font and prepares ||| load font	count=1
function_name	streams and ||| stream select	count=1
function_name	calculates ||| trader	count=1
function_name	[function_name_1] given xml ||| [function_name_2] get current column [function_name_1]	count=1
function_name	stream or datagram connection ||| stream	count=1
function_name	sending all pending ||| all	count=1
namespace	fetches a ||| function	count=1
function_name	a curl ||| curl	count=2
arg_pair	specified dn ||| resource $link_identifier string $dn	count=3
function_name	the request ||| radius request	count=1
function_name	stride value that ||| stride for	count=1
function_name	the number of the [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] cookie parameters ||| [function_name_2] [function_name_1]	count=2
function_name	vertically at ||| imagecharup	count=1
function_name	cipher ||| get cipher	count=2
function	or redefines [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	the passed string would ||| fnmatch	count=1
function_name	set with mysqli_set_local_infile_handler() ||| set	count=1
function	column of [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	[function_name_1] statement parameter ||| [function_name_2] [function_name_1]	count=1
function_name	discards all but one ||| image colors	count=1
arg_pair	[arg_pair_1] haystack ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	the name ||| get current	count=1
namespace	dictionary using tag the ||| function	count=1
function_name	is a block algorithm ||| block algorithm	count=2
function_name	the [function_name_1] [function_name_2] associated with the imagick ||| [function_name_1] [function_name_2]	count=2
function_name	prefix with ||| prefix	count=1
namespace	set ||| function	count=1
function_name	gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| run	count=1
function_name	the host name of ||| host	count=1
function_name	[function_name_1] target frame ||| [function_name_2] [function_name_1]	count=1
function_name	a block algorithm or ||| block algorithm	count=1
function	postgresql frontend/backend [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	unicode code ||| intlchar	count=1
return	a fetch of ||| string	count=1
arg_pair	logarithm of arg ||| float $arg	count=1
function	similarity image [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	parameter with string type ||| parameter	count=1
function_name	last performed yaz_scan() ||| yaz scan result	count=1
namespace	of the page ||| harupage	count=2
function_name	activation steepnesses in the ||| get cascade activation steepnesses count	count=1
function_name	[function_name_1] reflectionparameter ||| [function_name_1] [function_name_2]	count=1
function_name	returns ||| get size	count=1
function_name	[function_name_1] given xml ||| [function_name_2] get [function_name_1]	count=4
function_name	returns root elements uri ||| get root element uri	count=1
function_name	point ||| isbase	count=1
arg_pair	at path to the ||| string $path bool $recursive	count=1
function_name	row into ||| fetch into	count=2
function_name	memcached::prepend() except that ||| prepend by	count=1
function_name	creates a new content ||| content new	count=1
function_name	[function_name_1] inner iterator ||| [function_name_2] [function_name_1]	count=2
function_name	in a file that ||| set metadata	count=1
arg_pair	and ||| float $timeout_read float $timeout_write	count=1
function_name	spacing for ||| space	count=2
function_name	can change [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	[arg_pair_1] result set ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	retrieves ||| solrinputdocument	count=1
function_name	for result grouping ||| group	count=1
arg_pair	the end ||| resource $result int $type	count=1
function	[function_name_1] associative ||| [function_name_1] string $type [arg_pair_2]	count=1
arg_pair	specified object_id ||| string $object_id string $timeout	count=1
function_name	implement special event loop ||| eio poll	count=1
arg_pair	in the given object ||| mixed $object string $method_name	count=1
function_name	length ||| len	count=4
function_name	idle callback timeout ||| idle timeout	count=3
function_name	algorithm is a block ||| block	count=1
function_name	is a primary member ||| is primary	count=1
function_name	bootstrap under ||| bootstrap	count=1
function_name	[function_name] phar ||| is [function_name] phar filename	count=3
function_name	[function_name] enables ||| [function_name] weights	count=1
arg_pair	given color pair to ||| int $pair int $fg	count=1
namespace	function behaves exactly ||| function	count=1
namespace	the array ||| function	count=1
arg_pair	to an ibm db2 ||| array $options	count=1
function_name	shared memory allocation information ||| sma info	count=2
function_name	sets where the ||| set error log	count=1
arg_pair	the [arg_pair] ||| [arg_pair]	count=4
function_name	similarity image such that ||| image	count=1
function_name	into ||| into	count=1
return	from a ||| object	count=1
function_name	quoted printable string ||| quoted printable encode	count=2
function_name	sets the ||| ldap set	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| array imap sort [arg_pair_2] [arg_pair_1]	count=2
function_name	interpolate pixel method ||| interpolate method	count=2
function_name	from the ||| add	count=1
arg_pair	on the intensity of ||| float $threshold int $channel	count=1
return	[return] in ||| [return]	count=3
return	return [return] ||| [return]	count=3
function	[function_name_1] [arg_pair_2] ||| [function_name_1] cache info [arg_pair_2]	count=3
namespace	current event loop instance ||| evloop	count=3
function	check with [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	records specified by assoc_array ||| array $assoc_array	count=1
function_name	functions drops ||| drop db	count=1
function	interface [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	sets the value ||| pdf set	count=1
function_name	the [function_name] without clearing ||| [function_name] get	count=1
return	to see if ||| bool	count=1
return	values of the matrix ||| array	count=1
function_name	for use [function_name] other functions ||| [function_name] pkey get public	count=1
function_name	to ||| get	count=1
return	[return] exclusive lock ||| [return]	count=1
return	move all ||| bool	count=1
function_name	computes a digest ||| openssl digest	count=1
function_name	slob object and opens ||| slob	count=1
return	idle ||| mongocursor	count=1
function_name	the paradox file into ||| px	count=1
arg_pair	traits that the given ||| mixed $class bool $autoload	count=1
function_name	value of the ||| value	count=1
function_name	shouldnt ||| state	count=1
namespace	exception which ||| exception	count=1
return	is sent to ||| string	count=1
function_name	remaining idle on ||| immortal	count=1
function_name	a random ||| gmp random	count=1
function_name	not morelikethis results should ||| mlt	count=1
function_name	minimum ||| cascade min cand	count=1
function_name	image type ||| image type	count=2
return	the error string ||| string	count=1
function	[function_name_1] [arg_pair_2] result ||| [function_name_1] [arg_pair_2]	count=3
return	the current iterator ||| bool	count=1
namespace	by the ||| function	count=5
namespace	this ||| mongoid	count=1
function_name	checks if a transaction ||| transaction	count=1
function_name	certain values from ingres ||| ingres	count=1
return	to validate the document ||| bool	count=1
arg_pair	added to the ||| string $localname	count=1
function_name	pixels from ||| pixels	count=1
function_name	readlink c ||| readlink	count=1
function_name	to create ||| mysql create	count=1
function_name	returns a simplexmliterator object ||| get children	count=1
function_name	specified action ||| gupnp service action get	count=1
arg_pair	preprocesses text for later ||| string $text	count=1
function_name	the internet host ||| gethostbyaddr	count=1
function_name	of the text ||| get text	count=2
function_name	imports pixels ||| import image pixels	count=1
function_name	[function_name_1] table ||| [function_name_1] [function_name_2]	count=1
function_name	loads an xml ||| load xml	count=2
function_name	name from ||| name	count=1
return	string of ||| string	count=1
arg_pair	[arg_pair] basis ||| [arg_pair]	count=1
function_name	to secondaries ||| slave okay	count=3
arg_pair	the item will ||| mixed $value int $expiration	count=1
namespace	function compresses the ||| function	count=1
function_name	has rows ||| sqlsrv has rows	count=2
function	for [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	quoted [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	in the ||| bool	count=9
function_name	an immediate neighbor ||| matte floodfill image	count=2
function_name	current active ||| fbsql select	count=1
function_name	uploads the data from ||| nb fput	count=1
namespace	function performs ||| function	count=2
function_name	square root of ||| sqrt	count=1
function_name	stream that ||| stream	count=1
function_name	[function_name_1] xml ||| [function_name_1] [function_name_2]	count=1
rest	point to [function_2] ||| [function_2] [return_1]	count=1
function_name	get the relative location ||| get relative location	count=1
function_name	route which is effective ||| get current	count=1
function_name	sets the process title ||| set process title	count=1
function_name	the specified status callback ||| status	count=1
arg_pair	sequence and ||| string $sequence	count=1
function_name	kadm5 ||| kadm5	count=1
function_name	new content object from ||| hwapi content new	count=1
function_name	a field ||| field	count=3
function_name	creates a ||| create	count=10
function_name	each layer in the ||| layer array	count=1
arg_pair	snmp object [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
return	position ||| int	count=1
arg_pair	for the specified ||| string $prefix	count=1
arg_pair	the fbsql_field_name() ||| resource $result int $field_offset	count=1
function_name	image rendering [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	element is valid ||| valid	count=2
function_name	principal according ||| modify principal	count=1
namespace	function call that can ||| function	count=2
function_name	[function_name_1] mode for ||| [function_name_1] lob [function_name_2]	count=1
function_name	code point is a ||| isbase	count=1
function_name	reply that ||| send reply	count=1
function_name	previously added with ||| run	count=1
namespace	the iterator ||| norewinditerator	count=1
function_name	level ||| level	count=2
namespace	a new quickhashinthash ||| quickhashinthash	count=1
function_name	the enchant providers ||| enchant	count=1
function_name	sets the default timezone ||| date default timezone set	count=1
arg_pair	on the specified ||| resource $stream_or_context	count=1
arg_pair	an sql statement ||| resource $stmt	count=1
namespace	the sec field of ||| mongotimestamp	count=1
return	and ||| resource	count=5
arg_pair	bordercolor imagickpixel object ||| mixed $bordercolor	count=1
function_name	log levels are ||| level	count=1
return	get ||| string	count=3
function_name	sort direction ||| sort	count=1
return	is used to ||| string	count=2
function_name	buffer provided in ||| add	count=1
return	the link to a ||| bool	count=2
arg_pair	action ||| array $paramters	count=1
arg_pair	a string before ||| string $source_string	count=1
function_name	[function_name_1] color for ||| [function_name_1] [function_name_2]	count=3
function_name	the cache ||| apc	count=1
function_name	that are present ||| intersect uassoc	count=1
function_name	network which is ||| fann	count=2
function_name	gets the error ||| bzerrstr	count=1
arg_pair	to memcached::get() except ||| callable $cache_cb float $cas_token	count=1
function_name	the [function_name] for ||| get [function_name]	count=1
function_name	in each layer ||| get layer array	count=1
function_name	for the specified statement ||| stmt	count=1
arg_pair	socket ||| eventbase $base mixed $socket	count=1
return	julian day given in ||| array	count=1
namespace	file ||| splfileobject	count=3
function_name	closes the given link ||| close	count=1
return	is functionally equivalent to ||| bool	count=1
arg_pair	sql statement ||| resource $connection string $statement	count=1
function_name	the event loop ||| loop	count=1
namespace	defines the appearance of ||| harudestination	count=3
function_name	the minimum number ||| fann get cascade min cand	count=1
arg_pair	content ||| string $content	count=1
arg_pair	other useful ||| string $blob_id	count=1
function_name	binary patch ||| xdiff string patch binary	count=1
arg_pair	left ||| array $left	count=1
arg_pair	sets locale information ||| int $category string $locale	count=1
function_name	steepnesses in the fann_get_cascade_activation_functions() ||| steepnesses count	count=1
namespace	in a file ||| pharfileinfo	count=1
arg_pair	specified protocol as ||| string $service string $protocol	count=1
function_name	[function_name_1] default value ||| [function_name_2] [function_name_1]	count=1
function_name	printable ||| print	count=1
function_name	calculate input scaling ||| set input scaling	count=1
function_name	handle for ||| handle	count=2
arg_pair	result set available for ||| resource $stmt	count=1
function_name	class ||| info class	count=1
function_name	copy of a subset ||| fann subset	count=1
function_name	sets anchor point ||| set geo anchor	count=1
function_name	id3v1 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	color or the closest ||| int $green int $blue	count=1
namespace	the internet host specified ||| function	count=1
function_name	gd image ||| imagegd	count=1
function_name	to msql_fetch_array() ||| msql	count=1
function_name	[function_name_1] table ||| [function_name_2] [function_name_1]	count=1
function_name	pixels from an array ||| pixels	count=1
function_name	[function_name_1] code from ||| [function_name_2] [function_name_1]	count=3
function_name	controller object ||| get controller	count=1
arg_pair	used afterward by ||| string $baseclass	count=1
function_name	modules list defined in ||| modules	count=1
function_name	current session [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the specified socket ||| socket get	count=1
function_name	finalizes current text object ||| end text	count=1
arg_pair	a ||| string $pattern string $option	count=1
function_name	that matches ||| paint opaque	count=1
arg_pair	of the ||| int $y	count=2
function_name	the complete ||| start	count=1
function	[function_name_1] thats associated ||| [function_name_1] [arg_pair_2]	count=5
function_name	representing a row ||| db2 fetch	count=1
namespace	new ||| spltempfileobject	count=1
return	get ||| array	count=1
arg_pair	returns the portion of ||| bool $before_needle string $encoding	count=1
function_name	get a mime charset ||| preferred mime name	count=1
arg_pair	string up to maxlength ||| int $maxlength	count=1
function_name	[function_name_1] learning momentum ||| [function_name_1] [function_name_2]	count=1
function_name	names of ||| names	count=2
function_name	determines the minimum number ||| min	count=1
function_name	[function_name_1] file specified ||| [function_name_1] copy to [function_name_2]	count=1
function_name	a string ||| string	count=2
return	[return] constraints to ||| [return]	count=3
function_name	virtual pdf document and ||| pdf	count=1
function_name	number of days ||| cal days	count=1
function	[function_name_1] color pair ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] namespace ||| [function_name_1] [function_name_2]	count=5
function_name	expand [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	imagemagick ||| imagick	count=1
arg_pair	specified offset up ||| resource $context int $offset	count=1
function_name	next element ||| next element	count=2
function_name	data assumed to ||| utf8	count=1
arg_pair	a string in a ||| string $encoding	count=1
arg_pair	save a ||| resource $image	count=1
arg_pair	the item ||| mixed $value int $expiration	count=1
arg_pair	mailbox ||| resource $imap_stream string $old_mbox	count=1
arg_pair	character c ||| string $c int $color	count=1
arg_pair	an exact match ||| imagick $imagick array $offset	count=1
function_name	causes ||| imap setflag full	count=2
function_name	true return ||| set terms return	count=1
function_name	blocking or ||| blocking	count=1
function_name	the current boost ||| get boost	count=1
namespace	no more results to ||| mongocursorinterface	count=1
return	you to ||| bool	count=2
function_name	gets an iterator ||| get iterator	count=2
arg_pair	[arg_pair_1] user ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	get the activation function ||| get activation function	count=1
namespace	response ||| solrquery	count=1
function_name	generate a random ||| gmp random range	count=1
arg_pair	mail headers [arg_pair] ||| [arg_pair]	count=1
function_name	of word [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| run	count=1
function_name	the supplied rgb values ||| pdf setrgbcolor	count=1
function_name	interface ||| interface	count=2
function_name	the vector dot product ||| mult	count=1
function_name	an access token secret ||| get access token	count=1
function_name	von einer mime ||| mime encode	count=1
function_name	memcached::res_* constants ||| code	count=1
function_name	input buffer ||| buffer	count=1
namespace	recursiveiteratoriterator::rewind() call ||| recursiveiteratoriterator	count=1
arg_pair	accepts an array ||| array $args	count=1
function_name	maximum number ||| max cand	count=1
return	used ||| void	count=2
function_name	get exception details ||| get details	count=1
arg_pair	of the output ||| int $neurons_between_reports	count=1
namespace	a new ||| spltempfileobject	count=1
arg_pair	use as a ||| string $name callable $callback	count=1
function_name	callback timeout ||| timeout	count=1
function_name	stream fstream or ||| get stream	count=1
function_name	is a valid ||| valid	count=1
function_name	most recent informix error ||| ifx errormsg	count=1
function_name	return the ||| return	count=1
function_name	a base character ||| isbase	count=1
namespace	imaginary [namespace] ||| [namespace]	count=1
arg_pair	register a rpc ||| string $uri string $method	count=1
arg_pair	usually of the ||| int $method array $arguments	count=1
function_name	white ||| image white	count=1
return	and ||| sqlite3result	count=1
arg_pair	be used afterward by ||| string $baseclass	count=1
function	[function_name_1] a new ||| [function_name_1] processing instruction [arg_pair_2]	count=1
arg_pair	source ||| int $flags	count=1
arg_pair	a list of ||| string $fk_owner string $fk_table	count=1
function	[function_name_1] [arg_pair_2] ||| function int [function_name_1] [arg_pair_2]	count=6
function_name	an obscure ||| crack	count=1
namespace	domentityreference ||| domentityreference	count=1
function_name	[function_name_1] determined by ||| [function_name_2] [function_name_1]	count=2
arg_pair	the given hostname ||| string $hostname	count=1
function_name	returns ||| get facet	count=1
function_name	out epochs ||| out epochs	count=4
namespace	representation [namespace] ||| [namespace]	count=1
namespace	given variable ||| function	count=5
function_name	be retrieved by gearmanclient::context() ||| context	count=1
function_name	slob object ||| slob	count=3
function_name	and stores ||| xdiff file	count=2
function_name	call the specified status ||| status	count=1
function_name	source node [function_name] ||| transform [function_name]	count=1
function_name	a fork in the ||| loop fork	count=1
function_name	with type stream fstream ||| stream	count=1
function_name	executes custom ||| custom	count=1
return	as second ||| array	count=1
function_name	for ||| set	count=3
function_name	function is ||| state	count=1
namespace	represented ||| pharfileinfo	count=1
function_name	training [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	numeric ||| function	count=1
namespace	a reflected extension and ||| reflectionextension	count=1
function_name	the current text ||| text	count=1
arg_pair	result argument of ||| int $pri	count=3
function	[function_name_1] point ||| [arg_pair_2] [function_name_1]	count=11
namespace	this is not for ||| oauth	count=1
function_name	a binary dump of ||| bin dump	count=1
namespace	element inserted into the ||| function	count=1
arg_pair	scrollable cursor ||| int $row_number	count=1
function_name	returns a normalized ||| qc get normalized	count=1
function_name	current active [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function	the flags [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	bound in the ||| bound	count=1
function_name	properties of ||| properties	count=1
function_name	color for ||| color	count=1
function_name	retrieves ||| mysql	count=1
function	[function_name_1] of a ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	field fieldname ||| string $fieldname	count=1
arg_pair	by execute processing it ||| int $pri	count=1
function_name	lower [function_name_2] ||| [function_name_2] [function_name_1]	count=7
return	straight through to the ||| bool	count=1
function_name	[function_name_1] daemon ||| [function_name_2] [function_name_1]	count=8
return	number set ||| int	count=1
arg_pair	of ||| int $options	count=1
function_name	selects records specified ||| select	count=1
function_name	[function_name] handler ||| xml set [function_name] handler	count=1
function_name	single line of ||| pdf fit textline	count=1
return	should only ||| void	count=1
function_name	executes ||| db2 exec	count=2
return	by ||| mixed	count=1
function	[function_name_1] of ||| [function_name_1] string $progid [arg_pair_2]	count=1
rep	tracing of [rest_2] ||| [namespace_1] [rest_2]	count=2
function_name	character [function_name_2] ||| [function_name_1] internal [function_name_2]	count=1
namespace	construct ||| spltempfileobject	count=1
function_name	cipher ||| get cipher info	count=1
function	authentication parameter [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	returns the [namespace] ||| [namespace]	count=1
function_name	msql_fetch_array() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	[namespace] permanently deleting ||| [namespace]	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_1] bind [function_name_2]	count=4
function_name	[function_name_1] id3v2 ||| [function_name_1] [function_name_2]	count=1
function_name	field is in ||| field	count=1
namespace	a maxdb resource ||| function	count=1
namespace	tells libevent ||| eventconfig	count=1
function_name	textflow object ||| textflow	count=1
return	entering ||| void	count=1
namespace	of ||| event	count=1
arg_pair	fill ||| mixed $fill	count=2
arg_pair	identical to htmlspecialchars() ||| string $encoding	count=1
function_name	topmost output buffer ||| ob end	count=1
function_name	attribute in ||| attribute	count=3
function_name	row as ||| fetch	count=1
function_name	name used with the ||| database	count=1
function_name	name ||| tag name	count=1
function_name	[function_name_1] change color ||| [function_name_1] [function_name_2]	count=1
function_name	train one iteration ||| fann train	count=1
namespace	for the ||| solrinputdocument	count=1
function_name	the private ||| x509 check private	count=1
function_name	the soap ||| soap	count=1
function_name	given tag ||| get tag	count=1
namespace	from the set ||| event	count=1
return	event_base_set() event_base_loop() [return] ||| [return]	count=2
function_name	file or ||| add file	count=1
namespace	buffer ||| eventbufferevent	count=2
function_name	table that field ||| field table	count=2
namespace	function retrieves ||| hw_api	count=1
function_name	gets the short name ||| get short name	count=1
rest	to [function_2] ||| [function_2] [return_1]	count=9
namespace	function renames ||| function	count=1
function_name	the given dimensions ||| scaleimage	count=1
function_name	[function_name_1] title visible ||| [function_name_1] [function_name_2]	count=3
namespace	event loop object ||| evloop	count=1
namespace	compiles ||| v8js	count=1
function_name	[function_name_1] static variables ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] highlight [function_name_2] phrase	count=6
function_name	blob/clob by ||| lob	count=1
function_name	[function_name_1] a postgresql ||| [function_name_2] [function_name_1]	count=8
function_name	adds a tag ||| add	count=1
arg_pair	row of the data ||| resource $result_id int $row_number	count=1
namespace	to trace the ||| function	count=1
function_name	sends [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	by csr and saves ||| openssl csr export to	count=1
arg_pair	for an ||| array $args	count=1
function_name	eio ||| eio	count=1
return	a string of ||| string	count=1
function_name	enabled by default ||| enable	count=1
return	specified ||| bool	count=1
function_name	last tuple for the ||| last	count=1
function_name	own filter [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	creates the specified directory ||| resource $ftp_stream string $directory	count=1
function_name	set with ||| set	count=1
return	retval [return] ||| [return]	count=2
arg_pair	inverse of the ||| int $options resource $compcode	count=1
function	closes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	filter query determines ||| add expand filter query	count=1
function_name	warning message ||| warning	count=1
return	data from the ||| bool	count=1
function_name	some ||| immortal	count=1
function_name	the uid for the ||| uid	count=1
function_name	that are present ||| intersect	count=1
arg_pair	a callable ||| string $message int $message_code	count=1
function_name	a config ||| pspell config	count=1
namespace	whether the entry was ||| quickhashinthash	count=1
arg_pair	register a ||| string $uri string $method	count=1
namespace	called for each ||| recursiveiteratoriterator	count=1
arg_pair	a key-value pair ||| string $value	count=1
namespace	periodic ||| evperiodic	count=1
namespace	replica set ||| mongodb\driver\server	count=2
return	given day specified as ||| mixed	count=2
function	execute [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=8
function_name	frequency at which ||| frequency	count=1
namespace	used ||| pharfileinfo	count=1
arg_pair	timestamp and location ||| int $timestamp	count=2
function_name	dn returned by ldap_get_dn() ||| ldap explode dn	count=1
function_name	file or ||| file	count=1
arg_pair	pointed by given oid ||| resource $conn_identifier string $oid	count=1
function_name	text rendering [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] weight ||| [function_name_1] cascade [function_name_2]	count=1
function_name	[function_name_1] sarprop ||| [function_name_2] [function_name_1]	count=4
function_name	extended ||| mongo db\bson\from	count=1
function_name	get the raw response ||| response	count=1
arg_pair	from fd file descriptor ||| mixed $fd	count=1
function_name	minimum step-size may be ||| fann get rprop delta min	count=1
function_name	of an animated image ||| set image ticks per second	count=1
function_name	the word [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	clears sets to 0 ||| clrbit	count=1
function_name	the size ||| size	count=8
arg_pair	[arg_pair_1] for the ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	wait for ||| wait	count=2
function_name	[function_name_1] threshold factor ||| [function_name_1] [function_name_2]	count=7
function_name	specified cipher ||| mcrypt get cipher	count=1
arg_pair	no database ||| string $collection	count=1
return	a process created using ||| bool	count=1
function_name	is a block ||| is block	count=1
function_name	cosine ||| cos	count=1
function_name	minimum error [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	code to ||| string $encoding	count=1
function_name	in a file ||| set metadata	count=1
namespace	the last ||| function	count=1
arg_pair	serializes the passed ||| resource $packet_id mixed $var_name	count=1
function_name	a fresh copy ||| repair	count=1
arg_pair	the ||| resource $ch	count=1
function_name	library may be compiled ||| libencoding	count=1
return	[return] candidates ||| [return]	count=2
function_name	represented with existing ||| set metadata	count=1
function_name	a batch ||| batch	count=3
namespace	in front of ||| function	count=1
function_name	get the width ||| get width	count=1
function_name	be used to trace ||| maxdb debug	count=1
function_name	wraps ||| wordwrap	count=1
function_name	current controller ||| controller	count=1
function_name	[function_name] centered ||| [function_name]	count=6
arg_pair	php variable with ||| mixed $variable	count=1
function	parent classes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	the function without ||| reflectionfunctionabstract	count=1
function_name	[function_name] with the ||| [function_name]	count=2
function_name	minimum ||| mlt min	count=2
return	event ||| eventbase	count=1
function	[function_name_1] a resource ||| [function_name_1] [arg_pair_2]	count=1
function_name	filling color ||| filling color	count=2
function	[function_name_1] to ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	if the ||| resource $dict	count=1
function_name	[function_name_1] change color ||| [function_name_2] [function_name_1]	count=1
function_name	elapsed time for ||| elapsed time	count=1
function_name	fields pf2 and their ||| fields	count=1
function_name	creates an imagick instance ||| construct	count=1
function_name	given result identifier ||| ibase	count=1
arg_pair	of statement is ||| mixed $field	count=1
function_name	socket_read() reads from the ||| read	count=1
arg_pair	message ||| int $msg_number	count=1
function_name	minimum number ||| min cand	count=1
function_name	initializes a statement ||| init	count=1
function_name	returns the [function_name] of elements ||| [function_name]	count=1
function	[function_name_1] value ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	access ||| resource $hobj	count=1
arg_pair	map ||| string $domain string $map	count=1
function_name	checks if the requested ||| exists	count=1
function_name	image in ||| image layers	count=2
function_name	a row in a ||| fetch assoc	count=1
namespace	the current element ||| limititerator	count=1
function_name	represented by [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	started by mysqlnd_ms_xa_begin() ||| ms xa	count=1
function_name	relative [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	source string into ||| string $source int $flags	count=1
function_name	fetches the ||| oci fetch	count=1
function_name	object ||| sqlite open	count=2
function_name	result identifier ||| ibase fetch	count=1
arg_pair	values of array1 ||| array $array2	count=4
arg_pair	given password on ||| string $password	count=1
namespace	contents in ||| function	count=1
function_name	[function_name] str ||| [function_name]	count=1
function_name	the [function_name] of elements ||| [function_name]	count=1
function_name	the border [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	create a new ssl ||| ssl filter	count=1
arg_pair	source string into ||| string $source	count=1
function_name	parameters for ||| params	count=1
arg_pair	array1 with values ||| array $array1 array $array2	count=1
function_name	and the given password ||| password	count=1
function_name	any ||| unique	count=1
function_name	[function_name_1] stack trace ||| [function_name_1] [function_name_2]	count=1
function_name	counts all elements ||| count	count=1
function_name	stretch ||| stretch	count=1
function_name	receiving ||| udm	count=1
arg_pair	on the page ||| resource $psdoc int $imageid	count=1
arg_pair	[arg_pair_1] callback ||| [arg_pair_1] int $pri [arg_pair_2]	count=1
function_name	float range [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	for ||| run	count=1
function_name	broker ||| broker	count=1
function_name	[function_name_1] a dictionary ||| [function_name_2] [function_name_1]	count=5
function_name	get current page ||| get current page	count=3
namespace	syncsemaphore object or ||| syncsemaphore	count=1
function_name	the remote ||| ssh2	count=2
function_name	neural network from a ||| fann create from	count=1
function_name	text rendering [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] external ||| [function_name_2] [function_name_1]	count=1
arg_pair	start inclusive limit ||| mixed $limit	count=1
function_name	moves the ||| seek	count=3
function_name	train [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	the ||| integer	count=1
function_name	method ||| get method	count=1
function_name	[function_name_1] epochs ||| [function_name_1] min [function_name_2]	count=1
function_name	steepnesses in ||| steepnesses	count=1
arg_pair	returns the file ||| int $use_include_path	count=1
function_name	the ||| gethostbyaddr	count=2
function_name	[function_name_1] modules list ||| [function_name_2] [function_name_1]	count=1
arg_pair	the current request indicating ||| string $details	count=1
function_name	the working ||| svn	count=1
namespace	[namespace] on ||| [namespace]	count=2
return	connection to auto-commit mode ||| bool	count=1
namespace	and enable ||| function	count=1
function_name	stream or datagram connection ||| stream socket	count=1
namespace	starts running the ||| gearmanclient	count=1
return	the buffer ||| bool	count=1
function_name	of all existing cubrid ||| cubrid	count=1
arg_pair	initiate a ||| string $reason	count=1
namespace	end of ||| eventbuffer	count=1
return	returns ||| array	count=13
namespace	starting from ||| domcharacterdata	count=1
namespace	retrieves the ||| hw_api	count=1
arg_pair	colors ||| float $channel	count=1
arg_pair	set a file ||| int $dictionary_link string $file	count=2
function_name	user-supplied comparison function ||| usort	count=1
function_name	and goes until the ||| strrchr	count=1
function_name	file that ||| metadata	count=1
function_name	similar to msql_fetch_array() ||| msql	count=1
arg_pair	http ||| eventhttprequest $req	count=1
arg_pair	of the same ||| int $method	count=1
function_name	closes file specified ||| eio close	count=1
function_name	of ||| unique image	count=1
namespace	any pixel color ||| imagick	count=1
function_name	determines the minimum ||| min cand	count=1
function_name	request represented by ||| openssl	count=2
function_name	[function_name_1] [function_name_2] opcache ||| [function_name_1] [function_name_2]	count=2
function_name	returns ||| get current	count=2
return	domdocumentfragment ||| domdocumentfragment	count=1
function_name	returns the remaining ||| get	count=1
function_name	sets the array ||| set	count=2
function_name	key details bits ||| details	count=1
function_name	php internally it shouldnt ||| set state	count=1
function_name	get blob/clob data from ||| lob	count=1
function_name	elements designated ||| array splice	count=1
function_name	ssl buffer event ||| ssl	count=1
return	used by php ||| mongoid	count=1
function_name	gets ||| imap	count=1
function_name	the maximum ||| max cand	count=1
function_name	[function_name_1] steepness for ||| [function_name_2] [function_name_1]	count=6
return	a new ||| int	count=2
arg_pair	sets string and pattern ||| string $pattern	count=1
function_name	to facet ||| set facet	count=2
function_name	bigram phrase slop ||| bigram phrase slop	count=3
arg_pair	length - ||| int $length	count=1
namespace	the class ||| reflectionclass	count=2
arg_pair	sql statement and ||| string $sql	count=1
function_name	fills ||| fill pdfblock	count=2
function_name	border [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	many functions ||| value	count=1
namespace	the current simplexmliterator element ||| simplexmliterator	count=1
namespace	of the [namespace] on the ||| [namespace]	count=1
namespace	previously added ||| gearmanclient	count=1
arg_pair	copies data between one ||| callable $callback string $data	count=1
function_name	closes the given link ||| ftp close	count=1
namespace	be called after a ||| evloop	count=1
function_name	on which to facet ||| set facet	count=1
namespace	arrayobject ||| arrayobject	count=6
function_name	request has ||| request	count=1
function_name	an informix ||| ifx	count=1
function_name	end [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	byte ||| byte	count=1
return	this method checks whether ||| bool	count=1
function_name	[function_name] an ||| set [function_name] index	count=2
return	used by php internally ||| mongoid	count=1
function_name	by php internally ||| set	count=1
arg_pair	the color defined by ||| float $fuzz	count=1
function_name	query string with the ||| set query	count=1
function	[function_name_1] value ||| [arg_pair_2] [function_name_1]	count=1
function_name	style of the border ||| set border style	count=1
function_name	font ||| load font	count=2
return	oid of the ||| int	count=1
arg_pair	a string ||| resource $psdoc	count=1
arg_pair	to html ||| bool $is_hex	count=1
function_name	ldap command ||| ldap	count=1
arg_pair	alpha and ||| float $alpha	count=1
namespace	workers in this pool ||| pool	count=1
function_name	initial [function_name] ||| [function_name] zero	count=2
function_name	a [function_name] treated as ||| add facet date [function_name]	count=1
function_name	the [function_name] associated with ||| get [function_name]	count=1
arg_pair	a ||| resource $fdf_document	count=1
function_name	[function_name_1] trigram phrase ||| [function_name_1] [function_name_2]	count=1
function_name	the hyperbolic cosine ||| cosh	count=1
function_name	specified return [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	a key-value pair ||| mixed $keys string $value	count=1
function_name	maximum word ||| mlt max word	count=2
function_name	number of inputs in ||| num input	count=1
function_name	[function_name_1] block algorithm ||| [function_name_2] [function_name_1]	count=1
namespace	properties from [namespace] ||| [namespace]	count=1
function_name	binary ||| readimageblob	count=1
function_name	fresh copy ||| repair	count=1
function_name	sleep ||| time sleep	count=1
function_name	it shouldnt need to ||| set state	count=1
arg_pair	of the output ||| int $max_neurons int $neurons_between_reports	count=1
function_name	all open connections ||| connections	count=1
function_name	get the ||| get	count=16
arg_pair	by the ||| resource $connection_id	count=1
arg_pair	when the ||| resource $result	count=1
function_name	zone [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	two letter country ||| country	count=1
arg_pair	having to use mapreduce ||| array $options	count=1
function_name	ssl api ||| ssl	count=1
namespace	of the running task ||| gearmanclient	count=2
function_name	eventbuffer ||| add	count=1
function_name	field is in ||| fbsql field	count=1
arg_pair	input string ||| string $input	count=1
function_name	check ||| check	count=2
function_name	returns the image matte ||| get image matte	count=1
function_name	extrema for the ||| get image extrema	count=1
arg_pair	word is correctly spelled ||| resource $dict string $word	count=1
function_name	[function_name_1] stopped instance ||| [function_name_1] [function_name_2]	count=1
function_name	a principal according ||| principal	count=1
namespace	lucene supports escaping ||| solrutils	count=1
function_name	[function_name_1] byte index ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] encoding ||| [function_name_1] internal [function_name_2]	count=1
arg_pair	a valid boost value ||| string $fieldname	count=1
function_name	current byte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	apcs ||| string $cache_type bool $limited	count=1
function	[function_name_1] when the ||| [function_name_1] fetch assoc [arg_pair_2]	count=1
return	hexadecimal [return] ||| [return]	count=1
function_name	[function_name_1] of ||| [function_name_1] mlt query [function_name_2]	count=1
arg_pair	preprocesses text for later ||| resource $pdfdoc string $text	count=1
function_name	returns the array consisting ||| preg grep	count=1
function_name	iteration ||| iteration	count=2
function_name	current ||| end	count=1
function_name	this service ||| gupnp service introspection	count=2
namespace	for the [namespace] ||| [namespace]	count=1
function_name	returns the image data ||| get data	count=1
function_name	terminals [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	and turn this output ||| flush	count=1
arg_pair	returns the input string ||| string $input	count=1
arg_pair	specified entry from ||| string $key resource $handle	count=1
function_name	words inside string ||| str word	count=1
function_name	the boost value ||| boost	count=1
function_name	text interword spacing ||| get text interline spacing	count=1
function_name	file name ||| file	count=1
function_name	next higest integer ||| ceil	count=1
function_name	for ||| maxdb	count=1
function_name	next ingres [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the attributes ||| ldap get	count=1
function_name	formerly loaded [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	function as event handler ||| set event handler	count=1
namespace	v8js::registerextension() ||| v8js	count=1
function_name	[function_name_1] [function_name_2] counts ||| [function_name_1] [function_name_2]	count=2
return	the status of a ||| int	count=1
function_name	gets an ||| get path info	count=1
namespace	string representation of ||| function	count=1
function_name	the php [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] index on ||| [function_name_1] [function_name_2]	count=1
function_name	socket [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] blob/clob by ||| [function_name_2] [function_name_1]	count=8
arg_pair	array var_array to ||| int $max_table_length	count=1
function_name	mysqlnd_ms_xa_begin() ||| xa	count=1
return	after ||| void	count=1
function_name	error code ||| strerror	count=1
function_name	[function_name_1] the request ||| [function_name_1] [function_name_2]	count=1
arg_pair	pos ||| int $pos	count=1
function_name	[function_name_1] size i ||| [function_name_2] [function_name_1]	count=1
function_name	by the ||| state	count=1
function_name	change fraction ||| change fraction	count=4
arg_pair	the intensity of ||| float $threshold	count=1
function_name	paradox database ||| px	count=2
return	query if multiple ||| bool	count=1
arg_pair	[arg_pair_1] a page ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	given source string into ||| int $flags	count=1
return	specifying how to ||| bool	count=1
function_name	[function_name_1] image by ||| [function_name_1] stretch [function_name_2]	count=1
arg_pair	brightness saturation ||| float $saturation	count=1
function_name	local ||| local namespace	count=2
function_name	[function_name_1] bound ||| [function_name_2] [function_name_1]	count=4
arg_pair	queries the ||| string $keyword string $optlist	count=1
function_name	suitable [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sets the current fill ||| fill	count=1
namespace	phar will ||| phar	count=1
namespace	an splobjectstorage ||| splobjectstorage	count=1
function_name	the rotation of ||| ps rotate	count=1
arg_pair	value for use ||| string $value	count=1
function_name	decrease [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	to the existing list ||| float $max	count=1
namespace	send to the client ||| mongocursorinterface	count=1
return	determine ||| bool	count=1
arg_pair	key associated with priv_key_id ||| mixed $signature_alg	count=1
function_name	training ||| fann	count=13
function_name	[function_name_1] status information ||| [function_name_1] [function_name_2]	count=3
function_name	for the language described/referred ||| broker set ordering	count=1
function_name	accessible ||| accessible	count=2
arg_pair	and ||| resource $connection mixed $object_id	count=1
function_name	protocol ||| proto info	count=2
function_name	[function_name_1] query parser ||| [function_name_1] max [function_name_2]	count=1
function_name	fc_nfkc_closure property ||| fc nfkc closure	count=1
function_name	[function_name] output ||| ob [function_name]	count=1
function_name	if the mode ||| mode	count=1
function	phar [function_name_1] [arg_pair_2] ||| phar [function_name_1] [arg_pair_2]	count=12
function_name	word length ||| word length	count=4
function_name	[function_name_1] parameters for ||| [function_name_2] [function_name_1]	count=1
function_name	sets the quality ||| ms set	count=1
function_name	stroking color for the ||| rgbstroke	count=1
function_name	a given result ||| ibase fetch object	count=1
arg_pair	an ||| resource $sh	count=1
function_name	a cursor ||| cursor	count=1
arg_pair	that an exact ||| imagick $imagick array $offset	count=1
function_name	activation steepnesses in the ||| fann get cascade activation steepnesses	count=1
function_name	of ||| compress threshold	count=1
function_name	information about [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function	string text [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	name ||| by tag name	count=1
function_name	list of job servers ||| servers	count=1
function_name	[function_name_1] file ||| [function_name_1] [function_name_2]	count=5
arg_pair	or the ||| int $green int $blue	count=1
function_name	data from ||| buffer	count=1
function_name	current ||| current	count=11
arg_pair	a message using ||| string $message	count=1
function_name	region ||| region by	count=1
function_name	diff containing ||| string diff	count=1
arg_pair	specified by variable ||| string $variable	count=1
function_name	behaves as eventbuffer::addbuffer() except ||| prepend	count=1
arg_pair	sets [arg_pair] ||| [arg_pair]	count=1
function_name	icc profile ||| load iccprofile	count=1
function_name	[function_name_1] fc_nfkc_closure property ||| [function_name_1] [function_name_2]	count=1
namespace	in the dump ||| function	count=1
function_name	callback [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	a unique ||| string $dir	count=1
function_name	running the tasks in ||| run tasks	count=1
function_name	extracts/decodes a message ||| msg extract part file	count=1
arg_pair	read the ||| resource $imap_stream	count=1
function_name	the owner ||| owner	count=1
function_name	the process title visible ||| process title	count=1
function_name	maximum search [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	code ||| udm	count=1
namespace	if the array ||| splfixedarray	count=1
return	the element ||| bool	count=1
arg_pair	and ||| resource $bevent	count=1
arg_pair	such that an ||| array $offset	count=1
return	turns off the ||| bool	count=1
arg_pair	to a ||| string $dest	count=1
arg_pair	a messaging server ||| string $protocol array $properties	count=1
return	name of the route ||| string	count=1
namespace	current path using nonzero ||| harupage	count=1
function_name	supported by ||| supported	count=1
function_name	timestamp [function_name_2] ||| [function_name_1] nonce [function_name_2]	count=4
function_name	rewinds array ||| reset	count=1
function_name	log for ||| log	count=1
arg_pair	of the color which ||| int $green	count=1
arg_pair	differences between old_file ||| string $old_file	count=1
arg_pair	batch of delete operations ||| mongocollection $collection array $write_options	count=1
function	[function_name_1] up or ||| [function_name_1] [arg_pair_2]	count=7
function_name	fetch an access ||| get access	count=1
function_name	function creates a new ||| create	count=1
return	to ||| solrupdateresponse	count=1
arg_pair	no database is given ||| string $collection	count=1
function	id3 tag [arg_pair_2] ||| [function_name_1] string $filename [arg_pair_2]	count=1
arg_pair	that correspond ||| int $row	count=1
function_name	colorspace ||| colorspace	count=1
return	the ||| mixed	count=2
arg_pair	in the ||| int $property	count=1
function_name	pixel method for the ||| pixel method	count=1
function_name	connect method on a ||| connect	count=1
function_name	mode is for use ||| mode	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] decode string $data [arg_pair_2]	count=1
function_name	used to escape ||| escape string	count=1
arg_pair	flag to the flags ||| int $options	count=1
function_name	method provides a stride ||| stride	count=1
function_name	it shouldnt need ||| set	count=1
namespace	some amount of time ||| mongocursor	count=1
arg_pair	variable ||| string $variable	count=1
function_name	a request to execute ||| pg execute	count=1
function_name	be used ||| set metadata	count=1
function_name	for the previous tuple ||| dbplus prev	count=1
function_name	adds [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	this function is ||| set state	count=1
arg_pair	blocks until there ||| float $timeout	count=1
function_name	identical to file_get_contents() except ||| contents	count=1
function_name	profile and ||| removeimageprofile	count=1
function_name	bigram [function_name_2] ||| [function_name_2] [function_name_1]	count=12
arg_pair	the specified connection resource ||| resource $connection	count=1
function_name	new item ||| item	count=1
function_name	into the file named ||| openssl pkey export to file	count=1
function_name	default timezone used by ||| default timezone	count=1
function_name	the ssl_cipher_description ssl ||| ssl get	count=1
arg_pair	enumerate all ||| int $namechoice	count=1
function_name	digital [function_name] ||| median [function_name] image	count=3
function_name	that ||| set	count=1
arg_pair	a string at the ||| string $string	count=1
function_name	inverse [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	an ||| resource $stmt	count=1
namespace	this is ||| function	count=1
function_name	sends ||| pg send prepare	count=2
function	[function_name_1] a new ||| [arg_pair_2] [function_name_1]	count=4
function_name	an imported ||| fit pdi	count=1
function_name	registered consumer [function_name] ||| callconsumer [function_name]	count=3
function_name	property for a ||| get int property value	count=1
function_name	property for ||| get int property value	count=1
function_name	sarprop temperature ||| sarprop temperature	count=2
function_name	syntax highlighted version of ||| highlight file	count=1
arg_pair	[arg_pair_1] a ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	the imagickpixel ||| imagickpixel	count=1
function_name	of the child ||| child	count=1
function_name	a maxdb resource suitable ||| maxdb	count=1
function_name	the thread [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	original type ||| get type	count=1
arg_pair	given shell wildcard pattern ||| string $pattern string $string	count=1
arg_pair	existing bbcode_container tag_set using ||| string $tag_name	count=1
function_name	defines or redefines the ||| ncurses init pair	count=1
function_name	oracle placeholder name ||| array by name	count=1
function_name	the specified ftp connection ||| ftp	count=1
arg_pair	the end is reached ||| resource $result	count=1
function_name	the miter ||| miter	count=2
arg_pair	a ||| string $namespace mongodb\driver\query $query	count=1
function_name	the total width ||| width	count=1
function_name	creates a new content ||| hwapi content new	count=1
return	variable bound to a ||| bool	count=1
arg_pair	new instance of ||| int $code_page	count=1
arg_pair	a list of servers ||| string $host int $port	count=1
arg_pair	within a ||| string $mask	count=1
function_name	request token ||| request token	count=1
function_name	of activation steepnesses ||| cascade activation steepnesses	count=1
return	maxdb_options() and ||| resource	count=1
function_name	[function_name_1] background ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] given stream ||| [function_name_2] [function_name_1]	count=3
function_name	the supplied exception when ||| exception	count=1
function_name	by ||| ldap	count=1
function_name	[function_name_1] otherwise ||| [function_name_1] [function_name_2]	count=3
function_name	sets the ||| oci set	count=2
function_name	current boost value for ||| boost	count=1
function_name	[function_name_1] [function_name_2] query ||| [function_name_1] [function_name_2]	count=2
return	the connection to the ||| bool	count=1
namespace	tar/zip archive using ||| phardata	count=1
function	agent [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	wave filter ||| wave	count=1
namespace	[namespace] moves ||| [namespace]	count=1
function_name	only be ||| set metadata	count=1
function_name	[function_name_1] step error ||| [function_name_1] [function_name_2]	count=9
function_name	returns a ||| qc get	count=1
function_name	the private ||| private	count=1
function_name	gets the name ||| name	count=3
function_name	creates a ||| pdf create	count=1
function_name	more stored procedures ||| db2 procedure columns	count=1
function_name	to mssql_fetch_array() ||| mssql	count=1
function_name	your own filter ||| filter register	count=1
function_name	image border color ||| image border color	count=3
function_name	[function_name_1] color image ||| [function_name_1] stretch [function_name_2]	count=2
namespace	a method ||| reflectionmethod	count=1
function_name	an url string ||| url	count=1
return	an array containing the ||| array	count=1
namespace	filesystem ||| splfileinfo	count=1
function_name	the mode outputs blocks ||| block mode	count=1
function_name	key-value pairs ||| nr	count=1
function_name	[function_name_1] parameter ||| [function_name_1] [function_name_2]	count=1
function_name	an exe ||| exe	count=1
function_name	enable ||| enable	count=1
function_name	replaces the [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	the value of ||| string $value string $timeout	count=1
function_name	current page of the ||| current page	count=1
arg_pair	of working copy files ||| string $path	count=1
namespace	the imagickpixel object ||| imagickpixel	count=1
function_name	fdf [function_name] in ||| fdf [function_name]	count=1
function_name	unified diff containing differences ||| xdiff string diff	count=1
arg_pair	prepares a query for ||| resource $link string $query	count=1
function_name	to include the lower ||| include lower	count=1
namespace	before entering or continuing ||| evloop	count=1
arg_pair	mppe-keys is mangled for ||| resource $radius_handle string $mangled	count=1
arg_pair	to a file ||| string $pathname	count=1
function_name	from utf-8 ||| utf8	count=1
function_name	[function_name_1] function for ||| [function_name_2] [function_name_1]	count=15
function_name	[function_name_1] response headers ||| [function_name_1] [function_name_2]	count=4
function_name	name used with ||| database	count=1
function_name	scales ||| fann scale input	count=1
arg_pair	input for ||| string $delimiter	count=1
function_name	referenced file ||| file	count=1
namespace	that was opened by ||| function	count=1
arg_pair	filename from the image ||| resource $image string $filename	count=1
namespace	driver ||| pdo	count=2
function	rolls back [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	descale input ||| fann descale train	count=1
function_name	previous [function_name] could ||| [function_name]	count=1
arg_pair	the object_id ||| string $object_id	count=3
function_name	[function_name_1] and ||| [function_name_1] [function_name_2]	count=2
return	this should ||| string	count=1
namespace	boost value for this ||| solrinputdocument	count=1
function_name	total ||| get total	count=2
arg_pair	simulates [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	column of ||| column	count=1
function_name	that are present in ||| intersect uassoc	count=1
function_name	from file ||| from file	count=2
function_name	[function_name_1] handler which ||| [function_name_2] [function_name_1]	count=1
function_name	new attribute node ||| set attribute node	count=2
arg_pair	by mask [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	of the apache ||| apache	count=1
function_name	change color ||| change color	count=2
function_name	intersection of arrays with ||| uintersect assoc	count=1
function_name	interword ||| interline	count=1
function_name	minimum document frequency used ||| cache min default frequency	count=1
namespace	the hash ||| quickhashstringinthash	count=2
function_name	code point is ||| isbase	count=1
function_name	positions cursor ||| move to	count=1
arg_pair	quoting style appropriate to ||| int $parameter_type	count=1
function_name	the first key-value pair ||| yp first	count=1
function_name	current active database on ||| fbsql select db	count=1
return	from ||| object	count=1
arg_pair	specified offset ||| resource $context int $offset	count=1
arg_pair	like mssql_connect() ||| bool $new_link	count=1
function_name	width ||| mb strwidth	count=1
arg_pair	an ||| int $x int $y	count=1
arg_pair	given ||| resource $imap_stream	count=2
function_name	a query object to ||| query	count=1
function_name	horizontal ||| horizontal	count=2
function_name	the internet ||| gethostbyaddr	count=1
function	[function_name_1] and ||| [function_name_1] [arg_pair_2]	count=11
arg_pair	source string ||| string $source int $flags	count=1
function_name	returns the product of ||| array product	count=1
function_name	database name from a ||| db name	count=1
arg_pair	queries the resulting metrics ||| string $keyword	count=1
arg_pair	result ||| resource $link_identifier	count=1
namespace	the imagick ||| imagick	count=1
function_name	sends an email ||| mail	count=1
function	patches a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	the parameter for a ||| reflectionparameter	count=1
arg_pair	that the cookie value ||| string $value	count=1
return	set and retrieve a ||| string	count=1
arg_pair	to html numeric character ||| string $encoding	count=1
arg_pair	before it ||| string $source_string	count=1
function_name	a config used ||| pspell config	count=1
function_name	in a file that ||| metadata	count=1
function_name	closes the ||| cubrid close prepare	count=1
function_name	executes custom function specified ||| eio custom	count=1
function_name	[function_name_1] raw characters ||| [function_name_2] [function_name_1]	count=3
function_name	servers that can ||| servers	count=1
function_name	an sqlite sql ||| sqlite	count=1
function_name	pdf document and prepares ||| pdf	count=1
function_name	be made permanent ||| mqseries cmit	count=1
function_name	sets the steepness ||| set	count=1
arg_pair	str with all alphabetic ||| string $encoding	count=1
namespace	creates a new quickhashstringinthash ||| quickhashstringinthash	count=1
function	[function_name_1] input identified ||| [function_name_1] [arg_pair_2]	count=2
namespace	with an imagick object ||| imagick	count=1
function_name	sets the ||| setthreadtitle	count=1
function_name	the language described/referred ||| broker set ordering	count=1
function_name	dns resource records ||| dns	count=1
arg_pair	looks up a ||| string $param_name	count=1
function_name	a rectangle given two ||| rectangle	count=1
function_name	bind_textdomain_codeset() you can set ||| codeset	count=1
function_name	sybase result associated ||| sybase data	count=1
return	day count [return] ||| [return]	count=2
function_name	the minimum message ||| mssql min message	count=2
return	the value pointed to ||| bool	count=1
function_name	of ||| set compress threshold	count=1
function_name	runs a [function_name_2] ||| [function_name_2] [function_name_1]	count=11
arg_pair	either as a magnitude ||| string $magnitude	count=1
function_name	enhances the contrast of ||| contrast	count=1
function_name	sybase result associated with ||| sybase data	count=1
arg_pair	the brightness saturation ||| float $saturation	count=1
namespace	and returns a ||| sqlite3stmt	count=1
function_name	wddx ||| wddx	count=2
function_name	error message to the ||| error	count=1
function_name	repository at ||| svn	count=2
function_name	new content object ||| new	count=1
function_name	whether the ||| isbase	count=1
namespace	this call starts running ||| gearmanclient	count=1
function_name	[function_name_1] bigram phrase ||| [function_name_2] [function_name_1]	count=2
namespace	hash function ||| function	count=1
function_name	a new content ||| hwapi content new	count=1
function_name	[function_name_1] number ||| [function_name_1] [function_name_2] query	count=4
arg_pair	that the given ||| mixed $class bool $autoload	count=1
function_name	unstable ||| trader set unstable	count=1
function_name	[function_name_1] the target ||| [function_name_1] [function_name_2]	count=1
return	the first ||| void	count=1
arg_pair	result ||| resource $result int $row	count=1
function_name	field ||| field length	count=3
arg_pair	script as ||| string $extension_name string $script	count=1
function_name	row and ||| fetch	count=3
arg_pair	memcached::getmulti() except ||| int $flags	count=1
function_name	the process [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	a single component ||| component	count=1
function_name	column [function_name_2] ||| [function_name_1] [function_name_2]	count=7
namespace	the event ||| evloop	count=1
namespace	of the server ||| function	count=1
function_name	anonymous oracle pl/sql ||| oci	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] country [function_name_1]	count=4
arg_pair	fetch ||| int $rownumber	count=1
function_name	[function_name_1] handler which ||| [function_name_1] [function_name_2]	count=1
arg_pair	adds [arg_pair] inside ||| [arg_pair]	count=1
arg_pair	region of the ||| int $y	count=1
function_name	odbc query ||| odbc fetch array	count=1
namespace	new entry to ||| quickhashintset	count=1
arg_pair	[arg_pair_1] given field ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	encoder ||| haruencoder	count=1
function_name	get defined constants from ||| get constants	count=1
arg_pair	identical to htmlspecialchars() ||| string $encoding bool $double_encode	count=1
function_name	remaining idle on the ||| immortal	count=1
return	event ||| void	count=1
function_name	the sunrise time for ||| sunrise	count=1
function_name	minimum error severity level ||| sybase min error severity	count=1
function_name	composite operator associated with ||| getimagecompose	count=1
function_name	connects ||| ps closepath stroke	count=2
function_name	a high priority ||| high	count=1
function_name	by ||| gethostbyaddr	count=1
namespace	by the given ||| function	count=1
function_name	merges three [function_name_2] ||| [function_name_2] file [function_name_1]	count=1
function_name	the global memory utilization ||| win32 ps stat mem	count=1
function_name	a request token secret ||| get request token	count=1
function_name	of the current cipher ||| get cipher	count=1
function	[function_name_1] object ||| [arg_pair_2] [function_name_1]	count=2
function_name	aql ||| dbplus aql	count=2
namespace	by the imagickpixel object ||| imagickpixel	count=1
namespace	this function sets ||| function	count=1
function_name	the type of ||| type	count=1
function_name	type1 font ||| type1	count=1
function_name	merges the elements of ||| merge recursive	count=1
function_name	specified events ||| event	count=1
function_name	the ||| current	count=3
function_name	[function_name_1] exists or ||| [function_name_1] [function_name_2]	count=4
function_name	handler which could ||| handler	count=1
function_name	given local tag ||| tag	count=1
arg_pair	str from character code ||| string $str	count=1
function_name	[function_name_1] [function_name_2] php is linked with ||| [function_name_1] [function_name_2] version	count=2
function_name	the field type ||| field type	count=1
function_name	returns the image ||| get data	count=1
arg_pair	agent specified by hostname ||| string $hostname	count=1
function_name	by gearmanclient::context() ||| context	count=1
return	a ||| void	count=7
function_name	query ||| query trace log	count=1
function_name	[function_name_1] spacing for ||| [function_name_2] [function_name_1]	count=3
function_name	removes an [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	data ||| resource $ann resource $data	count=1
function_name	blob for filling ||| ibase blob	count=1
function_name	rows affected ||| rows	count=1
function_name	block returns query results ||| get	count=1
function_name	[function_name] with ||| fbsql [function_name] result	count=1
function_name	escape the ||| escape	count=1
function	arbitrary [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	placeholder name ||| by name	count=1
function_name	determines the maximum ||| max cand	count=1
arg_pair	to transform str1 into ||| string $str1	count=1
function_name	for some amount of ||| immortal	count=1
arg_pair	xpath expression ||| domnode $contextnode	count=1
arg_pair	object and starts ||| mixed $data	count=1
function_name	is effective ||| get current	count=1
function_name	resource and returns the ||| get	count=1
arg_pair	str from character ||| string $str	count=1
function_name	function creates ||| create text	count=1
function_name	sunrise time for a ||| date sunrise	count=1
function_name	the regular expression ||| preg match	count=1
arg_pair	the bordercolor imagickpixel ||| int $width	count=1
function	[function_name_1] by variable ||| [arg_pair_2] [function_name_1]	count=4
return	path using ||| bool	count=1
function_name	initializes the [function_name] and ||| [function_name]	count=1
function_name	step error threshold ||| step error threshold	count=6
function_name	from the ||| add buffer	count=1
function_name	executes ||| exec	count=2
function_name	mime ||| mime encode	count=2
namespace	and returns the resulting ||| function	count=1
function_name	target frame to ||| target frame	count=2
function_name	[function_name_1] parent ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] of the ||| [function_name_1] [function_name_2] string $prefix	count=3
namespace	buffer for an occurrence ||| eventbuffer	count=1
function_name	training patterns [function_name_2] ||| [function_name_1] num [function_name_2]	count=1
function_name	rows fetched so far ||| rows	count=1
function_name	mongocollection::find() this method will ||| find one	count=1
arg_pair	data ||| array $data	count=1
function	value integer [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	internally it shouldnt ||| set state	count=1
function_name	attribute in the ||| attribute	count=1
return	in ||| void	count=2
function_name	[function_name_1] field belongs ||| [function_name_2] [function_name_1]	count=2
function_name	filename that will ||| filename	count=1
function_name	creates a stopped ||| create stopped	count=3
function_name	internal character [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	prepared statement and ||| sqlite3stmt	count=1
arg_pair	key and ||| mixed $key	count=1
function_name	the field type is ||| fbsql field type	count=1
return	falling between [return] white ||| [return]	count=1
function_name	frequency ||| default frequency	count=1
return	this method checks ||| bool	count=1
function_name	read the structure ||| imap bodystruct	count=1
function_name	[function_name_1] underlying output ||| [function_name_2] [function_name_1]	count=1
function_name	the route which ||| current	count=1
function_name	step error [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	inverse ||| gmp invert	count=1
function_name	event specified ||| event add	count=1
function_name	frees the [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] returns the ||| [function_name_1] [function_name_2]	count=2
function_name	comments and [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	set the ||| fbsql	count=1
function_name	connect ||| connect	count=5
function_name	phrase [function_name_2] ||| [function_name_1] [function_name_2]	count=16
function_name	image virtual [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	in the database and ||| resource $connection int $oid	count=1
arg_pair	used afterward by ||| string $extendedclass	count=1
return	node specified ||| domnode	count=1
namespace	used in subsequent closedir() ||| function	count=1
function_name	[function_name_1] priority ||| [function_name_2] [function_name_1]	count=1
arg_pair	a given value name ||| string $name	count=1
function_name	version number [function_name] ||| [function_name] client	count=1
return	descriptor to ||| bool	count=1
function_name	get the name of ||| get current	count=1
function_name	[function_name_1] rendering mode ||| [function_name_2] [function_name_1]	count=2
namespace	lock a new mutex ||| mutex	count=1
arg_pair	use mapreduce ||| array $options	count=1
function_name	row ||| mysql fetch	count=1
arg_pair	an html ||| int $error	count=1
arg_pair	errors are logged to ||| string $log_file	count=1
arg_pair	extended version of ingres_fetch_row() ||| resource $result int $result_type	count=1
function_name	feed signal event ||| feed signal event	count=3
function_name	the entire network ||| fann get	count=2
arg_pair	challenge using ||| string $challenge	count=1
arg_pair	as a ||| string $name callable $callback	count=1
function_name	prefix ||| prefix	count=1
function_name	point is a base ||| isbase	count=1
function_name	crossvalidate can be used ||| crossvalidate	count=1
return	and as a number ||| array	count=1
function_name	large object ||| pg lo	count=4
arg_pair	creates a new mailbox ||| resource $imap_stream	count=1
arg_pair	opposite of htmlentities() in ||| int $flags	count=1
function_name	[function_name_1] blocking or ||| [function_name_2] [function_name_1]	count=1
arg_pair	memcached::replace() ||| mixed $value int $expiration	count=1
arg_pair	posted by the database ||| string $event_name2	count=1
arg_pair	it is a ||| string $algorithm	count=1
function_name	of the ||| current	count=1
function_name	maxdb_options() ||| maxdb	count=1
function_name	creates an ldap ||| ldap connect	count=1
namespace	model used e ||| svmmodel	count=1
function_name	fetch a request ||| request	count=1
namespace	returned by the given ||| function	count=1
function_name	[function_name_1] change ||| [function_name_2] [function_name_1]	count=9
function_name	sets the value at ||| offset set	count=2
arg_pair	if no ||| string $collection	count=1
function_name	[function_name_1] state ||| [function_name_1] [function_name_2]	count=1
function_name	and its [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	oid of the ||| oid	count=1
function	line [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	cannot be represented ||| pharfileinfo	count=1
function_name	using imagemagick pseudo-formats ||| pseudo	count=1
function_name	[function_name_1] [function_name_2] data handler ||| [function_name_1] [function_name_2] data handler resource	count=2
function_name	[function_name_1] factor ||| [function_name_1] [function_name_2]	count=9
function_name	overrides main filter ||| add expand filter	count=1
arg_pair	can include 0 ||| resource $connection	count=1
function_name	with [function_name] ||| element [function_name]	count=1
return	end of array ||| int	count=1
function_name	facet ||| facet date start	count=2
function_name	and host checks ||| disable	count=1
function_name	the current [function_name_2] ||| [function_name_2] [function_name_1]	count=14
arg_pair	scales the size of ||| int $width	count=1
arg_pair	the ||| bool $silent int $command	count=1
function_name	idle callback [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	the ||| resource $result	count=5
function_name	number ||| num fields	count=4
function_name	html document from the ||| save htmlfile	count=1
function_name	bytecodes [function_name] and calls ||| bcompiler parse [function_name]	count=1
namespace	gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| gearmanclient	count=1
arg_pair	to the ||| resource $image	count=1
arg_pair	part or the ||| resource $imap_stream	count=1
function_name	time zone corresponding ||| geoip time zone by	count=1
function_name	[function_name_1] out ||| [function_name_1] [function_name_2]	count=2
arg_pair	[arg_pair_1] connection ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	request request ||| string $request	count=1
function_name	[function_name_1] by ibase_blob_close() ||| [function_name_2] [function_name_1]	count=3
function_name	gets several ||| ps get	count=1
function_name	is used ||| cubrid	count=16
function_name	by csr and saves ||| openssl csr	count=1
function_name	the [function_name] associated ||| get [function_name]	count=1
function_name	oid of [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	the iteration [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	is used to create ||| cubrid	count=1
function_name	textflow object or adds ||| add	count=1
arg_pair	entry in the ||| resource $result_entry_identifier	count=1
function_name	external ||| set external	count=3
return	the link to ||| bool	count=3
return	function ||| mongoid	count=1
function_name	sets the current ||| pdf	count=2
arg_pair	the ||| resource $id string $elementset	count=1
arg_pair	as ||| string $class	count=1
function_name	value from ||| insert	count=1
function_name	the learning [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	for the option specified ||| option	count=1
function_name	[function_name_1] dictionary ||| [function_name_2] [function_name_1]	count=4
function_name	operation [function_name] see ||| get [function_name]	count=1
return	given ||| string	count=1
function_name	requests ||| dbplus getlock	count=2
arg_pair	entry in ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	called during serialization ||| serialize	count=1
arg_pair	[arg_pair_1] events ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	zone [function_name_2] ||| [function_name_2] time [function_name_1]	count=2
function_name	determines the maximum ||| fann get cascade max cand	count=1
function_name	inode number for ||| get inode	count=1
function_name	for ||| in array	count=1
arg_pair	input ||| string $input	count=2
function_name	[function_name_1] notation declaration ||| [function_name_2] [function_name_1]	count=1
namespace	reflected extension and returns ||| reflectionextension	count=1
function_name	remote file server ||| ssh2 sftp	count=1
function_name	interword [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	inserts string ||| insert	count=1
function_name	vertically at the ||| imagecharup	count=1
function_name	server for some ||| immortal	count=1
function_name	a version of sybase_fetch_row() ||| sybase	count=1
function_name	the maximum [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	was deleted ||| quickhashinthash	count=1
arg_pair	a combination of fbsql_fetch_row() ||| resource $result int $result_type	count=1
function_name	line on the image ||| line	count=1
arg_pair	[arg_pair_1] database ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	stub written in php ||| get stub	count=1
arg_pair	the cookie value ||| string $value	count=1
arg_pair	given ||| resource $image	count=1
function_name	[function_name_1] the lower ||| [function_name_2] [function_name_1]	count=3
function_name	escape the given string ||| escape string	count=1
function_name	creates ||| create entity	count=1
function_name	to reduce the array ||| array reduce	count=1
return	php internally it ||| mongoid	count=1
function_name	number of [function_name_2] ||| [function_name_2] get current column [function_name_1]	count=1
return	all contiguous [return] occupying the ||| [return]	count=1
function_name	current output buffer ||| ob	count=1
function_name	image interpolate pixel method ||| image interpolate method	count=1
arg_pair	a php string value ||| string $type	count=1
function_name	imported pdf [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	an image to the ||| image	count=1
arg_pair	the ||| resource $ann int $cascade_min_out_epochs	count=1
function_name	a java ||| java	count=1
function_name	[function_name_1] and its ||| [function_name_1] [function_name_2]	count=1
function_name	string reference ||| mb decode numericentity	count=1
function_name	set type set ||| set	count=1
function_name	for the option specified ||| get option	count=1
arg_pair	value [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
arg_pair	that ||| int $type	count=1
namespace	to an splobjectstorage object ||| splobjectstorage	count=1
arg_pair	server thats ||| string $database_name resource $link_identifier	count=1
function_name	fit ||| set fit	count=2
namespace	a phar archive using ||| phar	count=1
function_name	removes [function_name_2] ||| [function_name_1] [function_name_2] except splobjectstorage	count=1
return	entering or continuing the ||| void	count=1
function_name	yet been [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	a certain query result ||| resource $result	count=2
arg_pair	whenever a ||| resource $proxy	count=1
function	decrypts [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	real1 from real0 and ||| array $real0 array $real1	count=1
function_name	to be dismax query ||| dis max query	count=1
function_name	[function_name_1] root ||| [function_name_2] [function_name_1]	count=6
arg_pair	opposite of ||| int $flags	count=1
arg_pair	by remote_socket ||| string $remote_socket	count=1
function_name	compresses the ||| gzcompress	count=1
arg_pair	specified by execute ||| callable $execute	count=1
function	new image [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	a subset [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	einer mime kopfzeile ||| mime encode	count=1
function_name	next entry ||| readdir	count=1
function_name	unbind ||| unbind	count=1
function_name	read data [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	should specify a callback ||| callback	count=1
function_name	request authenticator is ||| request authenticator	count=1
function_name	[function_name_1] statement parameter ||| [function_name_1] bind [function_name_2]	count=1
return	modifying a ||| void	count=1
function_name	in ||| in	count=1
function_name	the mongodb aggregation framework ||| aggregate	count=1
function_name	pdi document parameter with ||| get pdi	count=1
function_name	[function_name_1] parent node ||| [function_name_2] [function_name_1]	count=1
function_name	class for the reflected ||| class	count=1
return	to prepare the ||| bool	count=2
function_name	stub written ||| get stub	count=1
function_name	pointer ahead ||| mysql	count=1
return	returns [return] representing ||| [return]	count=1
namespace	this function is similar ||| function	count=5
function_name	without invoking the constructor ||| without constructor	count=1
return	to specify ||| bool	count=1
function_name	current cipher ||| cipher info	count=1
function_name	config used ||| config	count=1
function_name	current page of ||| current page	count=2
arg_pair	by mask ||| int $mask	count=1
function_name	statistics ||| db2 statistics	count=1
namespace	passed in ||| function	count=1
namespace	the internet ||| function	count=1
function_name	an exception ||| exception	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] frame [function_name_2]	count=2
function_name	a lob object ||| lob2	count=2
function_name	retrieve last error ||| get last error	count=3
function_name	the currently stored ||| apc cas	count=1
function_name	[function_name_1] attributes ||| [function_name_2] [function_name_1] entries resource $link_identifier resource	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] query field [arg_pair_2]	count=1
function_name	currently running zend engine ||| zend	count=1
arg_pair	values that correspond to ||| array $ctorparams	count=1
function_name	form ||| newt form	count=2
namespace	representation of an internal ||| function	count=1
namespace	[namespace] maximum ||| [namespace]	count=2
function_name	extended dom class to ||| class	count=1
function_name	check whether subscription ||| subscribed	count=1
namespace	event from the ||| event	count=1
function_name	[function_name_1] lower bound ||| [function_name_2] [function_name_1]	count=2
function_name	socket ||| socket get	count=1
arg_pair	consists of ||| resource $filehandle	count=1
function_name	header string signature based ||| get request header	count=1
function_name	add the result to ||| add vars	count=1
function	[function_name_1] a ||| [function_name_1] block algorithm [arg_pair_2]	count=1
arg_pair	no database ||| string $collection mixed $id	count=1
return	easiest ||| mongocollection	count=1
namespace	poll ||| zmqpoll	count=1
function_name	[function_name_1] header ||| [function_name_1] [function_name_2]	count=2
function_name	control point with ||| gupnp control point	count=2
arg_pair	replaces colors in the ||| float $channel	count=1
function_name	imagemagick package [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	jd into a date ||| int $jd	count=1
function_name	host name ||| get host	count=1
function_name	the maximum supported keysize ||| mcrypt module get algo key size	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] device get relative [function_name_1]	count=2
function_name	the ||| set state	count=2
arg_pair	row of the data ||| resource $result_id	count=1
arg_pair	submits a ||| resource $connection string $query	count=1
arg_pair	parses the given source ||| string $source int $flags	count=1
function_name	sets per-index weights and ||| set index	count=1
function_name	date parsers and sets ||| create from date	count=1
function_name	style [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	used to ||| void	count=3
arg_pair	the ||| int $width int $height	count=1
function_name	[function_name_1] interface ||| [function_name_2] [function_name_1]	count=3
function	otherwise [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	a request [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	the bit [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] plugin ||| [function_name_2] [function_name_1]	count=1
namespace	gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() ||| gearmanclient	count=1
function_name	an empty directory is ||| add empty dir	count=1
function_name	decrease debugging in a ||| apd set	count=1
function_name	provided ||| buffer	count=1
function_name	inner iterator that was ||| inner iterator	count=1
arg_pair	b ||| float $b	count=1
function_name	pixel color ||| unique image	count=1
function_name	image such ||| image	count=1
arg_pair	hash implements ||| integer $algo	count=1
function	export a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	unicode ||| get unicode	count=1
function	[function_name_1] page ||| [arg_pair_2] [function_name_1]	count=4
function_name	bit fail [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	stream representing a variable ||| event stream	count=1
arg_pair	from a given result ||| resource $result_id	count=1
arg_pair	the given ||| mixed $value	count=1
function_name	share ||| share setopt	count=2
function_name	for ||| filter input array	count=1
function_name	[function_name_1] from ||| [function_name_2] [function_name_1]	count=12
arg_pair	with pub_key_id ||| mixed $pub_key_id	count=1
function_name	reading ||| sqlsrv fetch	count=1
function_name	[function_name_1] number ||| [function_name_1] [function_name_2]	count=8
function_name	candidate change [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	root elements uri string ||| root element uri	count=1
function_name	pdf file ||| pdf	count=1
namespace	be ||| pharfileinfo	count=3
namespace	end of current eventbuffer ||| eventbuffer	count=1
function_name	list [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	generate a random ||| random range	count=1
function_name	total ||| total	count=2
function	matched part [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	is mangled for ||| string $mangled	count=1
function_name	phrase bigram [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	a global ||| mixed $connection string $gtrid	count=1
function	single column [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	thrown object was instantiated ||| throwable	count=1
function_name	version number [function_name_1] [function_name_2] linked with ||| [function_name_1] [function_name_2]	count=1
function_name	descale input and ||| descale	count=1
function_name	is only used by ||| state	count=1
arg_pair	of left ||| mixed $left	count=1
function_name	the type of ||| filetype	count=1
function_name	the vertical descent ||| get descent	count=1
function_name	is used to get ||| cubrid get	count=1
function_name	connection to [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	returns the complete history ||| array	count=1
function_name	returns the name of ||| get name	count=1
namespace	len bytes [namespace] into ||| [namespace]	count=1
function_name	the route ||| get current	count=1
function_name	convenience ||| fdf header	count=1
function_name	lists all tables ||| tables	count=1
function	inserts string [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	the [function_name] soapserver ||| get [function_name]	count=1
function_name	or [function_name] ||| get [function_name]	count=3
function_name	copies data from ||| pgsql copy to array	count=1
function	requests [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	given ||| resource $imap_stream int $criteria	count=1
arg_pair	request from the given ||| resource $conn_identifier	count=2
arg_pair	a quoting style appropriate ||| int $parameter_type	count=1
function_name	[function_name_1] fault ||| [function_name_2] [function_name_1]	count=4
function_name	current element ||| current	count=1
arg_pair	specified map ||| string $domain string $map	count=1
return	cursor [return] named ||| [return]	count=1
arg_pair	the ||| int $arg4	count=1
namespace	of monitored events ||| event	count=1
arg_pair	that correspond to the ||| resource $result string $class_name	count=1
function_name	places a formerly loaded ||| ps place	count=1
function_name	sets ||| set mlt	count=4
function_name	current line ||| current line	count=2
namespace	function ||| function	count=133
arg_pair	already exist ||| array $keys	count=1
function_name	a given result identifier ||| ibase	count=1
arg_pair	specified by execute processing ||| int $pri	count=1
function_name	symbolic link ||| link	count=1
namespace	value for the ||| solrinputdocument	count=1
arg_pair	is a ||| string $note_name string $note_value	count=1
function	method exists [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	with a binary ||| binary	count=1
function_name	[function_name_1] channel ||| [function_name_1] [function_name_2]	count=3
namespace	its indices ||| mongocollection	count=1
arg_pair	a region of the ||| int $y	count=1
arg_pair	a field to ||| string $fieldname	count=1
namespace	suitable for maxdb_options() and ||| function	count=1
function_name	internal ||| info	count=1
function_name	[function_name_1] form passed ||| [function_name_2] [function_name_1]	count=2
function_name	range filter ||| filter float range	count=1
function_name	in ||| layers	count=1
function_name	server ||| get server	count=1
function_name	cipher by ||| get cipher	count=1
function_name	affected by the ||| affected	count=3
arg_pair	from the given set ||| resource $conn_identifier	count=1
function_name	[function_name_1] file ||| [function_name_1] copy to [function_name_2]	count=1
namespace	during iteration ||| tokyotyrantiterator	count=1
function_name	removes objects contained ||| remove all	count=1
function_name	trace log for ||| trace log	count=1
function_name	host name of the ||| host	count=1
function_name	encryption [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	row of the ||| resource $result_id	count=1
function_name	by csr and stores ||| openssl csr export	count=1
function_name	trigram phrase ||| trigram phrase	count=6
function_name	the tasks in ||| tasks	count=1
arg_pair	number of characters ||| string $str	count=1
function_name	rows affected by a ||| affected rows	count=1
function_name	by eventbufferevent::connecthost() or an ||| string	count=1
function	[function_name_1] a prepared ||| [function_name_1] [arg_pair_2]	count=5
function_name	returns the size ||| ftp size	count=1
arg_pair	creates a new date ||| int $sec int $usec	count=1
function_name	reply ||| reply start	count=2
return	any pixel color ||| bool	count=1
function_name	connect method ||| connect	count=1
function_name	genre ||| genre	count=1
arg_pair	of characters using ||| string $str int $width	count=1
arg_pair	returns the [arg_pair] ||| [arg_pair]	count=1
function_name	word spacing for ||| word space	count=2
function_name	where that block returns ||| get	count=1
arg_pair	a hard ||| string $target string $link	count=1
function_name	a ||| ibase	count=3
arg_pair	of servers that can ||| string $host int $port	count=1
arg_pair	differences between old_file and ||| string $old_file	count=1
function_name	via the ||| win32 start	count=1
function_name	or virtual image ||| image	count=1
function_name	[function_name_1] a blob ||| [function_name_2] [function_name_1]	count=6
arg_pair	a ||| string $qmanagername resource $hconn	count=1
return	the child ||| void	count=1
function_name	include [function_name_2] ||| [function_name_2] [function_name_1]	count=17
namespace	parameter expects an ||| reflectionparameter	count=1
function_name	stored ||| apc cas	count=2
arg_pair	set the database ||| string $database	count=1
function_name	the specified ||| isbase	count=1
function_name	of the current cipher ||| get cipher info	count=1
function_name	fetches a result row ||| fetch	count=1
arg_pair	link annotation to ||| resource $pdfdoc float $lowerleftx	count=1
function_name	need to ||| set state	count=1
function_name	should ||| metadata	count=1
arg_pair	and parsing location ||| string $location	count=1
function_name	the previous [function_name] could be ||| [function_name]	count=1
function_name	icu error ||| intl error	count=2
function_name	a primary ||| primary	count=1
function_name	and ||| function	count=1
function_name	[function_name_1] field ||| [function_name_1] phrase [function_name_2]	count=1
arg_pair	n by d ||| gmp $d	count=1
return	cursor [return] ||| [return]	count=1
function_name	an iso control ||| isocontrol	count=1
function_name	returns [function_name_2] ||| [function_name_1] [function_name_2] query	count=1
function_name	similarity image ||| image	count=1
return	to point to the ||| bool	count=2
function_name	for the previous tuple ||| prev	count=1
function_name	query field ||| query field	count=2
function_name	controller ||| get controller	count=1
arg_pair	it in dest file ||| string $dest	count=1
arg_pair	fetch an associative array ||| int $rownumber	count=1
function_name	nonce [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	returns str with all ||| string $str	count=1
function	[function_name_1] indexed by ||| [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] [arg_pair_2] regular expression ||| [function_name_1] [arg_pair_2]	count=2
function_name	text object ||| end text	count=1
return	to move the ||| bool	count=2
function_name	started by mysqlnd_ms_xa_begin() ||| xa	count=1
return	a row as ||| object	count=1
function_name	info associated ||| info	count=1
arg_pair	afterward by the php ||| string $baseclass string $extendedclass	count=1
arg_pair	of a ||| resource $result	count=1
function_name	writes data from ||| write	count=1
arg_pair	when the end is ||| resource $result int $type	count=1
namespace	the specified values ||| function	count=1
function_name	the given record in ||| record	count=1
function_name	sets the linejoin parameter ||| setlinejoin	count=1
namespace	obtained via recursivearrayiterator::getchildren() ||| recursivearrayiterator	count=1
namespace	headers sent [namespace] ||| [namespace]	count=3
namespace	given key is the ||| function	count=1
namespace	result ||| sqlite3stmt	count=1
function_name	digest [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	extended service [function_name] from ||| yaz es [function_name]	count=1
arg_pair	handle ||| int $offset	count=1
arg_pair	a global transaction among ||| mixed $connection	count=1
function_name	gets column types ||| cubrid column types	count=2
namespace	and enable user ||| function	count=1
function_name	sets the value of ||| set	count=1
arg_pair	address and port ||| int $port	count=1
function_name	[function_name_1] a query ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] standard ||| [function_name_2] [function_name_1]	count=2
function_name	function creates a new ||| create document	count=1
function	[function_name_1] with key ||| [function_name_1] [arg_pair_2]	count=1
function_name	out [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	or set ||| fbsql database	count=1
arg_pair	a ||| string $prefix string $field_override	count=1
function_name	deactivate image [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	tar/zip archive ||| phar	count=2
function_name	for facet fields that ||| facet	count=1
function_name	user [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] client ||| [function_name_2] [function_name_1]	count=9
function_name	the maximum number ||| max cand	count=1
arg_pair	the desired dimensions with ||| float $blur	count=1
arg_pair	address port number database ||| string $host int $port	count=1
namespace	watcher callback ||| evwatcher	count=1
return	is effective in the ||| string	count=1
function_name	reduce the array ||| array reduce	count=1
arg_pair	object is of this ||| object $object string $class_name	count=1
function_name	export ||| gmp export	count=1
arg_pair	a list of ||| int $port	count=1
function_name	added with gearmanclient::addtask() gearmanclient::addtaskhigh() ||| run	count=1
arg_pair	[arg_pair_1] name variable_name ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	calculate ||| float $font_size float $char_space	count=1
arg_pair	a given method and ||| string $method	count=1
function	[function_name_1] returns a ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	new columns ||| string $key array $columns	count=1
function_name	[function_name_1] field pf3 ||| [function_name_1] [function_name_2]	count=4
function_name	an image as ||| image	count=1
function_name	with existing ||| set	count=1
function	function and ||| function resource $filehandle	count=1
function_name	the processing instruction pi ||| processing instruction	count=1
arg_pair	with a unique ||| string $prefix	count=1
function_name	servers that ||| servers	count=1
namespace	associated with an image ||| gmagick	count=1
function	existing class [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	export [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	kadm5 ||| kadm5 init	count=1
arg_pair	row of ||| int $fetch_flag	count=1
function_name	apcu shared memory allocation ||| apcu sma	count=1
function_name	order for the training ||| fann	count=1
arg_pair	and [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	text transformation matrix ||| text matrix	count=1
function_name	[function_name_1] weight multiplier ||| [function_name_2] [function_name_1]	count=1
function_name	font and prepares ||| font	count=1
function_name	to ||| add buffer	count=2
function_name	variant ||| variant	count=1
function_name	current thread [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] phrase ||| [function_name_2] [function_name_1] string $slop	count=1
arg_pair	point ||| resource $p float $x	count=1
namespace	maxdb resource suitable for ||| function	count=1
function	[function_name_1] insert operations ||| [arg_pair_2] [function_name_1]	count=1
function_name	two letter country code ||| country code by name	count=1
function_name	ssl ||| ssl filter	count=2
function_name	debug [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	to set [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	of the ||| int $blue	count=1
function_name	the buffer ||| add	count=1
function_name	[function_name_1] an integer ||| [function_name_2] [function_name_1]	count=1
return	with the ||| bool	count=2
return	number of the last ||| int	count=1
namespace	server for some amount ||| mongocursor	count=1
function	agent specified [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	the rotation ||| ps rotate	count=1
function_name	a color image by ||| image	count=2
arg_pair	the ||| int $page	count=2
arg_pair	uri containing ||| string $uri	count=1
namespace	exception ||| stompexception	count=1
function	[function_name_1] a given ||| [function_name_1] enum [arg_pair_2]	count=4
function_name	the miter ||| get miter	count=1
return	event from the ||| bool	count=1
arg_pair	a write lock ||| resource $relation	count=1
function_name	gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| run	count=1
function_name	epochs determines the minimum ||| fann get cascade min cand	count=1
function_name	if a dictionary exists ||| dict exists	count=1
arg_pair	position pointing [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	[arg_pair_1] current domain ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	when launched via the ||| start	count=1
function_name	a field in ||| field	count=1
function_name	image scene ||| image scene	count=2
function_name	tag name ||| tag name	count=1
function_name	image virtual pixel method ||| image virtual pixel method	count=1
arg_pair	fd ||| mixed $fd int $pri	count=1
return	send to the ||| bool	count=1
namespace	reflected method ||| reflectionmethod	count=1
function_name	to ||| debug	count=1
arg_pair	[arg_pair_1] variable_name in ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	weight multiplier ||| cascade weight multiplier	count=1
arg_pair	either as a ||| string $complement	count=1
return	to the specified ||| bool	count=6
namespace	in ||| yaf_router	count=1
arg_pair	the given ||| int $type	count=1
namespace	in the unicode ||| intlchar	count=1
function_name	attaches [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	display a result ||| resource $fdf_document	count=1
arg_pair	the given set type ||| resource $conn_identifier	count=1
function_name	when iteration [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	a ||| string $attrlat	count=1
arg_pair	levels of ||| int $channel	count=1
function_name	virtual server ||| get server by	count=1
function	[function_name_1] array1 ||| [arg_pair_2] [function_name_1]	count=2
function_name	a new [function_name_2] ||| [function_name_1] pseudo [function_name_2]	count=1
function	raise left_operand to ||| bcpow string $left_operand	count=1
function_name	the last error message ||| mysqli error	count=1
function_name	decrements ||| decrement	count=1
function_name	represented with existing information ||| set	count=1
function_name	gets the number ||| oci num	count=1
function_name	goes until the end ||| strrchr	count=1
function_name	the raw characters of ||| raw	count=1
function_name	a database instance for ||| dba	count=1
function_name	to establish service ||| service	count=1
function_name	new root device ||| root device new	count=1
function_name	information where the ||| info	count=3
arg_pair	of array1 with values ||| array $array1 array $array2	count=1
arg_pair	the service provider ||| string $verifier_token string $http_method	count=1
arg_pair	been set as the ||| string $error_msg int $error_type	count=1
return	be a ||| bool	count=1
arg_pair	a ||| resource $connection	count=4
function_name	of the [function_name] the mysqli ||| mysqli get [function_name] info	count=1
return	this should not be ||| string	count=1
function_name	fault ||| fault	count=1
arg_pair	transparency ||| float $fuzz	count=1
function_name	request token secret and ||| request token	count=1
function	[function_name_1] of haystack ||| [function_name_1] [arg_pair_2]	count=1
function_name	image virtual pixel ||| image virtual pixel	count=3
return	this method ||| bool	count=1
function_name	[function_name_1] authentication ||| [function_name_2] [function_name_1]	count=2
function_name	internal data [function_name] ||| [function_name] fetch array	count=1
function	[function_name_1] given message ||| [function_name_1] [arg_pair_2]	count=2
namespace	for a set of ||| gearmanclient	count=1
function_name	ms sql result ||| mssql	count=1
namespace	item ||| memcached	count=1
namespace	or directory this function ||| function	count=1
arg_pair	hostname looking for ||| eventdnsbase $dns_base string $hostname	count=1
function_name	year ||| year	count=1
namespace	documents should ||| solrquery	count=1
function_name	handler to be called ||| handler	count=1
function_name	chromaticity blue primary ||| blue primary	count=1
function_name	processing ||| progress monitor	count=1
return	the connection between the ||| void	count=1
function_name	associative array ||| output	count=1
function_name	new integer range ||| range	count=1
arg_pair	value of [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	specified field ||| cubrid field	count=1
namespace	most recent ||| eventutil	count=1
arg_pair	memcached::add() except that ||| mixed $value int $expiration	count=1
function_name	[function_name_1] context ||| [function_name_1] [function_name_2]	count=7
arg_pair	the principal ||| string $principal	count=1
function_name	existing function ||| function	count=1
function_name	set the ||| set	count=7
function_name	returns [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
function_name	function returns true if ||| module is	count=1
function_name	be used to trace ||| debug	count=1
function_name	returns the decimal digit ||| digit	count=1
function_name	deletes a ||| delete pvf	count=1
arg_pair	in the ||| int $type	count=1
namespace	appearance of ||| harudestination	count=3
arg_pair	the ||| resource $ann int $activation_function	count=1
function_name	of days ||| days	count=1
function_name	extrema for [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	this function returns a ||| resource	count=1
function_name	include the lower ||| terms include lower	count=1
return	number ||| int	count=1
arg_pair	puts a ||| string $value	count=1
arg_pair	calculate ||| float $char_space	count=1
arg_pair	the specified ||| int $cursor_type	count=1
function_name	otherwise it returns ||| algorithm	count=1
function_name	[function_name_1] information where ||| [function_name_1] [function_name_2]	count=6
namespace	the ||| splfileobject	count=1
function_name	width for the ||| width	count=1
return	use with ||| resource	count=1
function_name	[function_name_1] stores ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] query ||| [function_name_1] max [function_name_2]	count=1
function_name	the [function_name] of ||| mb ereg search [function_name]	count=1
function_name	value ||| insert	count=1
function_name	[function_name_1] type ||| [function_name_1] set [function_name_2]	count=1
namespace	set of ||| event	count=1
function_name	with ||| set	count=2
function_name	server connected to ||| server	count=1
function_name	client ||| client	count=5
arg_pair	length [arg_pair] ||| [arg_pair]	count=1
function_name	that follows the specified ||| snmp2 getnext	count=1
function_name	contrast [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	frees the system ||| db2 free	count=1
function_name	cascade candidate activation functions ||| cascade activation functions	count=1
function_name	field belongs ||| pg field	count=2
return	and restarts the ||| void	count=1
function_name	load [function_name] second ||| [function_name]	count=1
function_name	next ||| to next	count=1
return	any ||| string	count=1
arg_pair	socket stream or a ||| mixed $socket	count=1
arg_pair	string and pattern for ||| string $pattern	count=1
function_name	an oil painting ||| oil paint	count=1
function_name	decoded quoted printable ||| quoted printable decode	count=2
function_name	transformation matrix ||| trans matrix	count=1
function_name	the user password used ||| fbsql password	count=1
function_name	[function_name_1] queries ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] [arg_pair_2] region ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	get it from ann ||| resource $ann array $input_vector	count=1
function_name	removes a query ||| remove query	count=3
function_name	sunrise time for ||| date sunrise	count=1
function_name	specific constant defined or ||| constant	count=1
arg_pair	index in a ||| int $index	count=1
function_name	[function_name_1] info ||| [function_name_1] [function_name_2]	count=1
return	in a ||| void	count=1
arg_pair	simulates ||| float $opacity float $sigma	count=1
function_name	details bits ||| details	count=1
function_name	frequency at which ||| doc frequency	count=1
function_name	[function_name_1] [function_name_2] the ||| function bool [function_name_2] [function_name_1]	count=1
function_name	usually preferred to this ||| prev error	count=1
arg_pair	named virtual file and ||| resource $pdfdoc string $filename	count=1
function_name	a row in ||| db2 fetch	count=1
function_name	crossvalidate can be ||| crossvalidate	count=1
arg_pair	of working copy ||| string $path	count=1
function_name	[function_name_1] mime type ||| [function_name_1] [function_name_2]	count=1
arg_pair	whitespace or ||| string $str string $character_mask	count=1
function_name	message header ||| imap mime header	count=1
function_name	fields that solr should ||| fields	count=1
function	[function_name_1] b and ||| [function_name_1] [arg_pair_2]	count=1
function_name	and returns the ||| get	count=1
function_name	has been exhausted ||| dead	count=1
function_name	returns the bit ||| get bit	count=3
return	[return] file as ||| [return]	count=1
namespace	function returns the name ||| function	count=1
function_name	country and region ||| region by	count=1
function_name	host name ||| gethostbyaddr	count=1
arg_pair	alignment requirements of the ||| int $format int $width	count=1
function_name	valid for the specified ||| check	count=1
function_name	fit the window height ||| set fit	count=1
arg_pair	at the ||| int $left int $top	count=1
function_name	as thumbnail ||| thumbnail	count=1
function_name	flags ||| get flags	count=1
return	host specified ||| string	count=1
function_name	behaves as eventbuffer::addbuffer() except ||| prepend buffer	count=1
namespace	the file ||| directoryiterator	count=1
arg_pair	ord in the font ||| resource $psdoc int $ord	count=1
namespace	returns ||| splobjectstorage	count=1
function_name	that fgetcsv() parses ||| fgetcsv	count=1
return	from a string ||| mixed	count=1
function	[function_name_1] given key ||| [function_name_1] get int $key [arg_pair_2]	count=1
function_name	logs into ||| identify	count=1
arg_pair	a string ||| string $text	count=1
function_name	schema for ||| schema	count=1
function_name	handler for ||| handler	count=1
function_name	timestamp nonce ||| timestamp nonce	count=2
arg_pair	[arg_pair_1] mssql_connect() with ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	the given ||| int $quality	count=1
function_name	[function_name_1] state variable ||| [function_name_2] [function_name_1]	count=1
function_name	notation declaration handler ||| notation decl handler	count=2
return	passed ||| array	count=1
function	[function_name_1] up or ||| [arg_pair_2] [function_name_1]	count=7
function_name	a result identifier ||| result	count=1
arg_pair	afterward by the ||| string $extendedclass	count=1
function_name	country and [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	beginning ||| arrayiterator	count=1
function_name	the process ||| process	count=1
return	message associated with ||| string	count=1
function_name	[function_name] useful for ||| [function_name] split	count=1
arg_pair	all the mailboxes that ||| string $ref	count=1
arg_pair	the ||| int $type int $maxlen	count=1
arg_pair	equivalent to memcached::replace() ||| mixed $value int $expiration	count=1
function_name	returned by ldap_get_dn() ||| ldap explode	count=1
function_name	associated with the specified ||| fetch row	count=1
function_name	result row [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	blocksize ||| algo block size	count=1
namespace	this is ||| oauth	count=1
arg_pair	input string ||| string $input int $pad_length	count=1
namespace	a tar/zip archive ||| phar	count=1
function_name	is ||| disable	count=1
namespace	idle on ||| mongocursor	count=1
arg_pair	object_id and return not ||| int $timeout	count=1
function_name	represented ||| metadata	count=1
function_name	generate highlighted snippets for ||| highlight	count=1
namespace	archives manifest ||| pharfileinfo	count=1
function_name	information ||| info	count=13
namespace	whether ||| limititerator	count=1
function_name	an sql statement ||| db2	count=1
function_name	given local tag ||| by tag	count=1
arg_pair	of ||| int $code_page	count=1
function_name	field is ||| mysql field	count=1
function_name	fills and draws the ||| fill	count=1
arg_pair	attempts to ||| resource $link_identifier	count=2
namespace	in [namespace] to wait ||| [namespace]	count=1
function	closes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	checks if the array ||| bool	count=1
function_name	phrase queries ||| phrase	count=2
arg_pair	a messaging ||| string $protocol array $properties	count=1
function_name	with existing information ||| metadata	count=1
function_name	frees the ||| free	count=3
arg_pair	of the ||| int $level int $type	count=1
function_name	end of current eventbuffer ||| add buffer	count=1
function_name	epochs determines the minimum ||| fann get cascade min	count=1
arg_pair	parameters seconds ||| int $seconds	count=1
function_name	highlighting for range/wildcard/fuzzy/prefix queries ||| highlight highlight multi term	count=1
function_name	environment variable specified ||| setenv	count=1
function_name	[function_name_1] value of ||| [function_name_2] [function_name_1]	count=2
namespace	contents of [namespace] ||| [namespace]	count=2
function_name	field to return ||| field length	count=2
return	changes the ||| bool	count=1
return	of monitored events ||| bool	count=1
arg_pair	the number of ||| resource $ann	count=1
function_name	[function_name_1] t61 ||| [function_name_2] [function_name_1]	count=1
namespace	should ||| pharfileinfo	count=2
namespace	called for each element ||| recursivetreeiterator	count=1
function_name	[function_name_1] handle for ||| [function_name_2] [function_name_1]	count=4
function_name	pdi document parameter ||| get pdi	count=1
function_name	the text [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	the image [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] boost query ||| [function_name_1] [function_name_2]	count=1
arg_pair	for matches to pattern ||| mixed $pattern	count=1
function_name	frequency at which words ||| frequency	count=1
function_name	the number of ||| cascade num	count=1
function_name	the referenced file ||| file info	count=1
function_name	part of the query ||| escape query chars	count=1
function_name	to send soap fault ||| soap fault	count=1
function_name	ip address ||| geoip	count=1
arg_pair	color defined by fill ||| mixed $target mixed $fill	count=1
arg_pair	str from character ||| string $str array $convmap	count=1
arg_pair	opposite of ||| string $string int $flags	count=1
arg_pair	the values of array1 ||| array $array2	count=4
function_name	fit the window height ||| fit	count=1
function_name	train one epoch with ||| fann train epoch	count=1
function_name	wait for notification from ||| wait	count=1
arg_pair	len bytes of ||| int $len	count=1
arg_pair	new mailbox see imap_open() ||| resource $imap_stream string $old_mbox	count=1
function_name	dom class ||| class	count=1
function_name	specified status callback set ||| status	count=1
function_name	tells whether the opened ||| mcrypt enc is	count=1
function_name	bind_textdomain_codeset() you can ||| codeset	count=1
function_name	filter ||| add filter	count=1
arg_pair	has been defined ||| string $interface_name bool $autoload	count=1
namespace	name ||| yaf_router	count=1
function_name	a [function_name] ||| radius put [function_name] string	count=3
function_name	imports ||| import	count=1
function_name	for ||| input array	count=1
arg_pair	of the given ||| bool $autoload	count=1
function_name	changes the user ||| change user	count=1
function_name	termscomponent ||| terms	count=1
function_name	gets the inner iterator ||| get inner iterator	count=2
function_name	file ||| set	count=2
arg_pair	zlib data ||| string $data int $level	count=1
function_name	item at the repository ||| svn	count=1
function_name	a id3v2 ||| id3v2 tag	count=1
namespace	file on disk in ||| quickhashintset	count=1
function_name	traverse over ||| snmp2 real walk	count=1
function_name	short ||| short	count=3
function_name	dismax [function_name_2] ||| [function_name_1] max [function_name_2]	count=2
function_name	the current fbsql ||| fbsql	count=1
function_name	root elements [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	the event specified ||| event add	count=1
function_name	in a postgresql ||| pg	count=2
namespace	this function closes ||| function	count=1
function_name	containing pointers to the ||| into struct	count=1
return	a prepared ||| sqlite3result	count=1
function_name	and region ||| region	count=1
function_name	the compression method ||| compression	count=1
function_name	existing information ||| metadata	count=1
namespace	maxdb resource suitable ||| function	count=1
function_name	fills an array ||| fill	count=1
function_name	image ||| stegano image	count=1
function_name	to the [function_name] of the ||| [function_name]	count=1
arg_pair	to memcached::add() except that ||| mixed $value int $expiration	count=1
namespace	a prepared statement and ||| sqlite3stmt	count=1
return	link to a ||| bool	count=2
return	set if you ||| bool	count=1
function_name	unnecessary the phar::startbuffering() method ||| start buffering	count=1
function_name	[function_name_1] code ||| [function_name_2] [function_name_1]	count=6
function_name	fetches a result row ||| fetch array	count=1
function_name	each query inspected by ||| mysqlnd qc	count=1
arg_pair	between old_file and new_file ||| string $old_file string $new_file	count=1
function_name	new document instance ||| ps new	count=1
function_name	icc profile and ||| load iccprofile	count=1
arg_pair	the given image ||| resource $image	count=1
function	[function_name_1] given password ||| [arg_pair_2] [function_name_1]	count=4
function_name	server connected to represented ||| server	count=1
function_name	timezone used by ||| timezone	count=1
function_name	version of the ||| version	count=2
function_name	has been reached ||| eof	count=1
arg_pair	query into a two-dimensional ||| int $maxrows	count=1
function_name	buffer provided in ||| add buffer	count=1
function_name	icc profile and prepares ||| pdf load iccprofile	count=1
return	and returns a result ||| sqlite3result	count=1
arg_pair	a variable in ||| string $key mixed $var	count=1
function_name	style of the ||| style	count=1
function_name	divides ||| gmp div q	count=1
function_name	appends raw ||| append	count=1
function_name	gets [function_name_2] ||| [function_name_2] [function_name_1]	count=38
function_name	background [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] cascade ||| [function_name_2] [function_name_1]	count=4
namespace	previously added with gearmanclient::addtask() ||| gearmanclient	count=1
namespace	a new quickhashstringinthash ||| quickhashstringinthash	count=1
namespace	encountered ||| gearmanworker	count=1
function_name	[function_name_1] reads ||| [function_name_2] [function_name_1]	count=1
namespace	in a ||| function	count=1
function_name	url-encoded ||| http build	count=1
function_name	function is only used ||| set	count=1
function_name	bound term in the ||| bound	count=3
return	from a ||| string	count=4
function_name	agent ||| agent	count=1
arg_pair	the ||| resource $dict	count=1
arg_pair	offset ||| int $offset int $length	count=1
function_name	a given ||| ibase fetch object	count=1
arg_pair	of ||| float $beta	count=1
function_name	with xml namespace ||| ns	count=1
function_name	[function_name] os of ||| get [function_name]	count=3
function_name	fit the [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	rprop [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	must ||| void	count=1
namespace	given file in ||| function	count=1
function_name	a mysqlnd connection ||| mysqlnd uh convert to mysqlnd	count=1
function_name	[function_name_1] loop immediately ||| [function_name_1] [function_name_2]	count=4
function_name	or redefines the ||| ncurses init	count=1
function	[function_name_1] struct ||| [arg_pair_2] [function_name_1]	count=2
return	onto the end of ||| int	count=1
function_name	comment ||| comment	count=6
function_name	to create ||| mysql create db	count=1
function_name	[function_name_1] line ||| [function_name_1] [function_name_2]	count=9
arg_pair	any data from ||| string $data	count=1
namespace	archive using its ||| ziparchive	count=1
return	exist ||| mixed	count=1
function_name	merges ||| fann merge	count=1
function_name	last absent ||| last empty	count=2
function_name	sets where the ||| fann set	count=1
function	image [arg_pair_2] ||| [function_name_1] match [arg_pair_2]	count=2
function_name	[function_name_1] properties ||| [function_name_2] [function_name_1]	count=1
arg_pair	a bson document i ||| string $bson array $typemap	count=1
function_name	imported ||| fit pdi	count=1
function_name	string from utf-8 ||| utf8	count=1
function_name	databases available ||| dbs	count=2
namespace	line from ||| splfileobject	count=1
function_name	existing information stored with ||| set	count=1
function_name	the oracle placeholder name ||| array by name	count=1
arg_pair	in the font encoding ||| resource $psdoc	count=1
arg_pair	socket_accept() functions ||| int $length	count=1
return	its indices ||| array	count=1
arg_pair	into a two-dimensional ||| int $skip int $maxrows	count=1
function_name	field to return ||| field	count=2
function_name	the iteration ends ||| end iteration	count=2
function	[function_name_1] point ||| [function_name_1] [arg_pair_2]	count=11
function_name	from the ||| buffer	count=1
function_name	[function_name_1] block algorithm ||| [function_name_1] enc [function_name_2]	count=1
arg_pair	a exists content block ||| string $content string $key	count=1
return	a reflectionclass object ||| reflectionclass	count=1
return	the string to ||| void	count=1
arg_pair	returns the input string ||| int $pad_length	count=1
function_name	function as event ||| event	count=1
function_name	the fdf [function_name] ||| fdf [function_name]	count=2
function_name	sybase result ||| sybase data	count=1
function_name	property for a ||| get int property	count=1
arg_pair	php variable to ||| mixed $parameter mixed $variable	count=1
function_name	[function_name_1] threshold ||| [function_name_2] [function_name_1]	count=7
function_name	feed signal [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	and which ||| function	count=1
arg_pair	[arg_pair_1] and ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	name of the ||| name	count=3
namespace	has no ||| mongocursorinterface	count=1
arg_pair	an [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	array from an odbc ||| odbc fetch array	count=1
arg_pair	given method and key ||| string $method	count=1
function_name	connection associated with the ||| connection	count=2
function_name	into ||| put	count=1
function_name	a config used to ||| pspell config	count=1
function_name	database name ||| db name	count=1
function	[function_name_1] the result ||| [function_name_1] [arg_pair_2]	count=3
function_name	stroke color ||| stroke	count=1
function_name	the specified events ||| ibase wait event	count=1
function_name	gets [function_name_2] ||| [function_name_1] [function_name_2]	count=21
function_name	returns group [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	stores the ||| file	count=1
function_name	attaches a [function_name] ||| radius put [function_name] string	count=3
function_name	xml response from ||| response	count=1
arg_pair	the ||| int $colorspace float $cluster_threshold	count=1
function_name	a url-encoded query ||| http build query	count=2
return	or set ||| string	count=1
arg_pair	by execute processing it ||| callable $execute int $pri	count=1
function_name	set the [function_name_2] ||| [function_name_2] [function_name_1]	count=17
return	[return] given postgresql ||| [return]	count=2
function_name	pdf block with variable ||| pdf	count=1
function_name	[function_name_1] pdf page ||| [function_name_2] [function_name_1]	count=6
namespace	the value of ||| function	count=1
namespace	this function can ||| function	count=2
function_name	[function_name_1] stream ||| [function_name_2] context [function_name_1]	count=1
arg_pair	a new mailbox specified ||| resource $imap_stream	count=1
function_name	short name of ||| short name	count=4
return	returns if the current ||| bool	count=1
arg_pair	pair to ||| int $fg	count=1
function_name	aggregate function ||| create aggregate	count=1
function_name	key is the private ||| check private	count=1
arg_pair	no database is ||| string $collection mixed $id	count=1
function_name	eventbuffer::addbuffer() except that it ||| prepend buffer	count=1
function_name	specified field is in ||| field	count=1
arg_pair	of the data that ||| resource $result_id	count=1
function	check [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	commits changes made ||| commit	count=1
function_name	[function_name_1] csr ||| [function_name_1] [function_name_2]	count=8
function	namespace support [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	database ||| fbsql db	count=1
return	which [return] initialized ||| [return]	count=1
function	[function_name_1] the database ||| [function_name_1] mode [arg_pair_2]	count=1
return	return a string containing ||| string	count=1
namespace	the large object ||| oci-lob	count=1
function_name	subscribe method is ||| subscribe	count=1
return	connects to ||| bool	count=1
namespace	reflected extension ||| reflectionextension	count=1
function_name	representing a row in ||| fetch	count=3
return	name of ||| string	count=2
namespace	the name of ||| yaf_router	count=1
function_name	submit form action ||| submit form action	count=1
function_name	service [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	it ||| set state	count=2
function_name	provides a stride ||| stride for width	count=1
function_name	sets ||| ms set	count=1
rest	returns [function_2] ||| function [return_1] [function_2]	count=1
arg_pair	data ||| string $optlist	count=1
return	image represented by the ||| string	count=1
function_name	[function_name_1] into file ||| [function_name_1] copy to [function_name_2]	count=1
function_name	[function_name_1] properties ||| [function_name_1] [function_name_2]	count=1
namespace	whether the end of ||| splfileobject	count=1
arg_pair	defined by fill ||| mixed $target mixed $fill	count=2
function_name	[function_name_1] [function_name_2] activation functions ||| [function_name_1] [function_name_2] activation functions resource $ann	count=1
function_name	current byte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	textflow into ||| textflow	count=1
arg_pair	specified directory on ||| resource $ftp_stream string $directory	count=1
function_name	adds new attribute node ||| set attribute node	count=1
function_name	scales the outputs ||| fann scale output	count=1
arg_pair	the closest possible alternative ||| int $blue	count=1
function_name	topmost output buffer and ||| ob end	count=1
return	to an array ||| array	count=1
arg_pair	queries ||| string $keyword string $optlist	count=1
namespace	this function will ||| function	count=7
function_name	a formerly loaded image ||| ps place image	count=1
function_name	which is ||| current	count=1
function_name	[function_name_1] image ||| [function_name_1] pseudo [function_name_2]	count=3
arg_pair	statement resource returned by ||| resource $stmt	count=1
function_name	an associative array containing ||| assoc	count=1
function_name	fbsql daemon ||| fbsql list	count=2
namespace	job servers to see ||| gearmanclient	count=1
function_name	must be ||| loop	count=1
function_name	a dictionary for en_us ||| dict	count=1
function_name	blob for reading and ||| blob	count=1
function_name	convolution filter of ||| edgeimage	count=1
function_name	translated into these ||| htmlentities	count=1
function_name	[function_name_1] end ||| [function_name_2] [function_name_1]	count=1
arg_pair	up or ||| int $width	count=1
namespace	out of the ||| function	count=1
function_name	formerly loaded [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	of [namespace] rows ||| [namespace]	count=1
function_name	extension ||| info	count=1
return	resource suitable for maxdb_options() ||| resource	count=1
namespace	the information ||| function	count=1
function_name	the sarprop temperature ||| sarprop temperature	count=2
function_name	pdi document parameter with ||| get pdi value	count=1
namespace	in event_add() ||| function	count=1
function_name	the child before ||| loop	count=1
function	[function_name_1] is posted ||| [function_name_1] [arg_pair_2]	count=3
function_name	the specified action ||| gupnp service action get	count=1
arg_pair	number from an integer ||| mixed $number	count=1
function_name	sybase_fetch_row() that uses column ||| sybase fetch assoc	count=1
function_name	the entry contents ||| from	count=1
arg_pair	non-blocking mode on ||| resource $stream bool $mode	count=1
function_name	previous tuple ||| dbplus prev	count=1
function_name	phrase queries built with ||| phrase	count=1
function_name	of tasks previously added ||| run	count=1
function_name	status information from a ||| status	count=1
function_name	number ||| number	count=3
function_name	adds a list ||| add	count=1
function_name	resets the ||| reset	count=2
namespace	simplexmliterator element ||| simplexmliterator	count=1
namespace	the [namespace] ip2long() ||| [namespace]	count=1
function_name	network from ||| fann create	count=1
function_name	reference ||| mb decode numericentity	count=2
function_name	this function creates ||| create processing	count=1
function_name	[function_name_1] target ||| [function_name_1] [function_name_2]	count=1
function_name	tasks in parallel ||| run tasks	count=1
arg_pair	result resource ||| resource $result int $row	count=1
namespace	session storage ||| sessionhandlerinterface	count=1
function_name	cipher by means of ||| cipher	count=1
function_name	retrieves the current boost ||| get boost	count=1
function_name	to create ||| create	count=3
function_name	names of the ||| names	count=2
arg_pair	with a set ||| resource $ann array $input	count=1
namespace	a row as ||| function	count=1
function_name	its server pool ||| server	count=1
function_name	and set ||| set	count=1
arg_pair	all of haystack starting ||| string $haystack	count=1
function_name	decrease [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] title ||| [function_name_1] [function_name_2]	count=3
function_name	function closes a blob ||| ibase blob close	count=1
return	is ||| mixed	count=2
arg_pair	a new ||| string $qualifiedname	count=1
arg_pair	the associated data ||| int $textflow	count=1
namespace	links resolves relative references ||| splfileinfo	count=1
namespace	the ||| limititerator	count=1
function_name	[function_name_1] matte color ||| [function_name_2] [function_name_1]	count=2
namespace	statement function that ||| function	count=1
namespace	function sends a ||| function	count=1
function_name	an open slob ||| slob	count=1
function_name	number or boolean ||| number	count=1
function_name	set the external ||| external	count=2
function_name	height as an associative ||| image geometry	count=1
function_name	cannot ||| set metadata	count=2
arg_pair	a link annotation ||| float $lowerleftx	count=1
return	turns ||| bool	count=1
function_name	type ||| get type	count=2
function_name	adds ||| output add	count=1
function_name	extracts a ||| cropimage	count=1
function_name	status information from ||| status	count=1
function_name	used to trace the ||| maxdb	count=1
function_name	id3 ||| id3	count=2
function_name	backup or default summary ||| set highlight alternate	count=1
function_name	an id3v2 frame ||| frame	count=2
return	to return ||| bool	count=2
function_name	creates a new instance ||| create	count=1
return	a string representing ||| string	count=1
function_name	[function_name_1] given xml ||| [function_name_2] get current [function_name_1]	count=2
function_name	of callback ||| callback	count=1
function_name	tell ||| tell	count=1
namespace	the image list ||| imagick	count=1
arg_pair	path in ||| int $flags	count=1
arg_pair	a file that contains ||| string $file	count=2
function_name	[function_name_1] uri ||| [function_name_2] [function_name_1]	count=6
namespace	this function implements ||| function	count=1
arg_pair	of the [arg_pair] ||| [arg_pair]	count=1
function_name	executes custom function ||| custom	count=1
arg_pair	between old_file and ||| string $old_file	count=1
namespace	attached ||| ktaglib_id3v2_attachedpictureframe	count=1
function_name	stored value with the ||| apc	count=1
return	that ||| mixed	count=1
function_name	row in ||| db2 fetch	count=2
function_name	maximum number ||| max num	count=4
namespace	buffer events ||| eventbufferevent	count=1
namespace	job server and ||| gearmanjob	count=2
arg_pair	the given password ||| string $password	count=1
function_name	square root ||| sqrt	count=2
function_name	activation steepness for neuron ||| get activation steepness	count=1
function_name	[function_name_1] database on ||| [function_name_1] [function_name_2]	count=8
function_name	imap error message ||| imap last error	count=1
arg_pair	a ||| resource $psdoc string $text	count=1
namespace	splfileobject as ||| splfileobject	count=1
function_name	sets the ||| set size	count=1
function_name	copies data [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	existing information stored ||| set	count=1
function_name	allocated ||| free	count=1
function_name	sample [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	same ||| to	count=1
function	parameter at [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	priority ||| event buffer priority set	count=1
return	pointer to ||| bool	count=1
function	environment [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	up or down and ||| int $width	count=1
function_name	entity ||| entity	count=1
arg_pair	the specified purpose ||| mixed $x509cert int $purpose	count=1
function_name	is the default ||| default	count=1
function_name	stored or anonymous oracle ||| oci	count=1
namespace	string specified by ||| function	count=1
arg_pair	as keys and the ||| array $keys	count=1
namespace	machine name of the ||| function	count=1
arg_pair	with port for ||| int $port	count=1
arg_pair	microsoft sql server ||| array $connectioninfo	count=1
function_name	option specified ||| option	count=2
function_name	required to display ||| db2 field display	count=1
function_name	a version of sybase_fetch_row() ||| sybase fetch	count=1
function_name	specified hash ||| get hash	count=1
function_name	[function_name_1] retrieval ||| [function_name_2] [function_name_1]	count=2
function_name	the image [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	response xml string ||| xml response	count=2
function_name	dash pattern ||| dash	count=1
arg_pair	adjusts the contrast of ||| int $channel	count=1
function_name	to place after the ||| postfix	count=1
function_name	the opcode cache ||| apc	count=1
function_name	which the regex ||| highlight regex	count=2
arg_pair	image to a ||| bool $dither	count=1
function_name	to include the ||| include	count=2
arg_pair	a ||| string $height	count=1
function_name	sets a ||| set object	count=1
function_name	creates an xml ||| save xml	count=1
arg_pair	serializes ||| resource $packet_id mixed $var_name	count=1
namespace	a callable function ||| function	count=3
function	type [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=2
function_name	sets an ||| set option	count=1
function_name	previous ||| dbplus prev	count=2
function_name	[function_name] objects except ||| [function_name] except	count=1
function_name	width ||| unicode width	count=1
function_name	child before ||| loop	count=1
function_name	the horizontal [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	between old_data ||| string $old_data	count=1
function_name	blob that has ||| blob	count=2
function	otherwise [arg_pair_2] ||| [function_name_1] mode [arg_pair_2]	count=1
arg_pair	and enables ||| resource $id	count=1
arg_pair	a ||| string $json	count=1
function_name	mime kopfzeile ||| mime	count=1
return	to delete ||| bool	count=2
arg_pair	using ||| resource $socket	count=1
function_name	service ||| set service	count=1
function_name	is used ||| cubrid seq	count=1
arg_pair	variable to ||| mixed $variable	count=1
function_name	einer mime kopfzeile in ||| mime	count=1
function_name	pattern which was ||| pattern	count=1
function	size [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	a priority ||| set priority	count=1
function_name	a blob ||| ibase blob	count=2
function_name	events ||| event	count=1
function	row from [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	the number of ||| int $offset string $encoding	count=1
arg_pair	specified by execute processing ||| callable $execute	count=1
function_name	mime ||| mime	count=5
arg_pair	index of the ||| int $green	count=1
function_name	set ||| broker set dict	count=1
function_name	normal date ||| date	count=1
namespace	available and ||| function	count=1
function_name	data for the previous ||| dbplus prev	count=1
namespace	archives manifest for ||| pharfileinfo	count=1
arg_pair	hyperlink at the given ||| resource $psdoc float $llx	count=2
function_name	[function_name_1] user ||| [function_name_1] [function_name_2]	count=2
function_name	deletes a textflow and ||| pdf delete textflow	count=1
function_name	path according to ||| path	count=1
function_name	handler which could be ||| handler	count=1
arg_pair	for a table ||| string $owner string $table	count=1
function_name	priority levels ||| priority	count=1
arg_pair	enumerate ||| callable $callback int $namechoice	count=1
arg_pair	to ||| bool $double_encode	count=1
function_name	the file named by ||| to file	count=2
function_name	interfaces ||| interfaces	count=1
arg_pair	been set as the ||| int $error_type	count=1
function_name	via the service ||| win32 start	count=1
function_name	first attribute ||| first attribute	count=3
function_name	block ||| mhash get block	count=1
arg_pair	server with ||| resource $id array $config	count=1
function_name	an arc ||| arc	count=1
function_name	commits changes made in ||| commit	count=1
function_name	database instance for ||| dba open	count=1
function_name	for production ||| disable	count=1
function_name	as thumbnail [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	of the same ||| int $method array $arguments	count=1
arg_pair	[arg_pair] a ||| [arg_pair]	count=3
function_name	sqlite ||| sqlite	count=4
function_name	[function_name_1] short name ||| [function_name_1] frame [function_name_2]	count=1
arg_pair	[arg_pair_1] user and ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	current stroke color ||| stroke	count=1
function_name	be used to determine ||| dir	count=1
namespace	point of a ||| function	count=1
arg_pair	by the server ||| string $cookie int $estimated	count=1
arg_pair	fields if a ||| string $fieldname	count=1
function_name	the lower bound ||| lower bound	count=2
return	host checks ||| bool	count=1
function_name	affected rows by the ||| mysql affected rows	count=1
function	priority [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	get elapsed [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	specify a field to ||| field	count=1
arg_pair	directory handle ||| resource $context	count=1
function_name	variables previously ||| vars	count=1
function_name	identifier ||| id	count=1
function_name	database and saves ||| export	count=1
function_name	a particular image ||| get image	count=1
function_name	[function_name_1] domain ||| [function_name_1] [function_name_2]	count=2
function_name	the iterator ||| iterator	count=1
arg_pair	populate a tar/zip ||| string $regex	count=1
namespace	image intensity ||| imagick	count=1
function_name	string prefix with ||| prefix	count=1
function_name	specified by the queue ||| msg stat queue	count=1
function_name	for the language described/referred ||| enchant broker set ordering	count=1
function_name	compression ||| compression	count=2
namespace	this function queries the ||| function	count=1
arg_pair	with parameters to the ||| string $name	count=1
function_name	dispatch loop finished ||| dispatch loop shutdown	count=2
function_name	the train ||| train	count=2
function_name	gets the quantum ||| quantum	count=1
function_name	the exception original type ||| get type	count=1
function_name	[function_name_1] to highlight ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] csr and ||| [function_name_2] [function_name_1]	count=8
function_name	that fgetcsv() ||| fgetcsv	count=1
return	to set ||| void	count=1
function_name	power ||| variant pow	count=1
arg_pair	a ||| string $number int $frombase	count=1
function_name	last value ||| last insert	count=2
arg_pair	or directory ||| string $path int $uid	count=1
function_name	[function_name_1] header field ||| [function_name_2] [function_name_1]	count=2
function_name	permissible as ||| idstart	count=1
arg_pair	or socket_accept() functions ||| resource $socket int $length	count=1
function	[function_name_1] and the ||| [function_name_1] [arg_pair_2]	count=3
namespace	objects storage for ||| threaded	count=1
function_name	stereo pair ||| stereo	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] set action [arg_pair_2]	count=1
return	between the ||| void	count=1
return	for [return] given ||| [return]	count=1
function_name	[function_name_1] error ||| [function_name_1] last [function_name_2]	count=1
arg_pair	and ||| resource $id	count=1
function_name	set multiset sequence attribute ||| col size	count=1
function_name	returns the path of ||| sys get	count=1
function_name	candidate change fraction ||| candidate change fraction	count=3
function_name	file ||| pkey export to file	count=1
function_name	is a destructor ||| destructor	count=1
return	containing [return] specified key-value ||| [return]	count=1
function_name	sets the minimum ||| min	count=4
function_name	[function_name_1] and ||| [function_name_2] [function_name_1]	count=2
function_name	external entity ||| libxml set external entity	count=1
function_name	[function_name_1] trace ||| [function_name_1] query [function_name_2]	count=1
function_name	a new content object ||| new	count=1
rep	[namespace_1] [rest_2] ||| [namespace_1] [rest_2]	count=6
return	and breaks it up ||| array	count=1
function_name	outputs blocks ||| is block	count=1
function_name	pattern which ||| pattern	count=1
function_name	spacing ||| space	count=3
function_name	returns the ||| get document	count=1
namespace	before entering or ||| evloop	count=1
function_name	restore the database ||| restore	count=1
function	table of the ||| table resource $result	count=1
function_name	to return the ||| return	count=1
function_name	called ||| set	count=1
function_name	[function_name_1] page and ||| [function_name_2] [function_name_1]	count=3
arg_pair	using a given method ||| string $method	count=1
function_name	selects ||| pg select	count=2
namespace	new entry to the ||| quickhashintset	count=1
function_name	[function_name_1] on phrase ||| [function_name_2] [function_name_1] string $slop	count=1
function_name	to ||| db2 escape string	count=1
function_name	[function_name_1] specified distortion ||| [function_name_2] [function_name_1]	count=1
function_name	the route which is ||| current	count=1
function_name	iv belonging to ||| mcrypt get iv	count=1
function_name	\n\r \n and \r ||| nl2br	count=1
function_name	candidate limit ||| cascade candidate limit	count=2
function_name	activation steepnesses ||| cascade activation steepnesses count	count=1
function_name	days in ||| cal days in	count=2
function_name	in ||| add buffer	count=2
return	the resource ||| bool	count=1
function_name	a blob ||| blob	count=3
function_name	block ||| is block	count=1
function_name	the kadm5 library ||| kadm5	count=1
function_name	linejoin parameter ||| setlinejoin	count=1
function_name	you have subscribed ||| imap lsub	count=1
return	to a ||| bool	count=11
namespace	finalizes current ||| harupage	count=1
function	remove [arg_pair_2] ||| [function_name_1] tag [arg_pair_2]	count=1
function_name	record into ||| record	count=1
function_name	gets blob/clob by ||| lob get	count=2
function_name	step-size is ||| fann set rprop delta	count=1
function_name	object that follows ||| snmp2 getnext	count=1
function_name	calculates the arc sine ||| asin	count=1
arg_pair	[arg_pair_1] of any ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	thread ||| setthreadtitle	count=1
function_name	region code ||| region	count=1
function_name	adds a tag ||| add element	count=1
namespace	saves it ||| function	count=1
function_name	if this object is ||| is	count=1
function_name	network from a configuration ||| fann create from file	count=1
function_name	bytecodes and initiates a ||| bcompiler write	count=1
function_name	function for ||| function	count=5
function	[function_name_1] up ||| [arg_pair_2] [function_name_1]	count=7
arg_pair	applies a color vector ||| mixed $tint mixed $opacity	count=1
function_name	given ||| add weblink	count=1
function_name	radius request ||| radius	count=5
function_name	sets whether [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	called by the ||| mongoid	count=1
function_name	of current ||| get	count=1
arg_pair	send by the server ||| string $cookie	count=1
arg_pair	tag ||| string $tag	count=1
function_name	certain ||| ingres	count=1
function_name	diff containing ||| diff	count=1
return	set ||| sqlite3result	count=1
arg_pair	of htmlentities() in ||| int $flags	count=1
function_name	[function_name] during ||| json last [function_name]	count=1
function_name	a backpropagation neural network ||| fann create from file	count=1
function_name	[function_name_1] internal information ||| [function_name_1] [function_name_2]	count=3
arg_pair	to memcached::get() ||| callable $cache_cb float $cas_token	count=1
function_name	[function_name_1] encoded string ||| [function_name_2] [function_name_1]	count=2
arg_pair	the result set ||| int $type	count=1
function_name	[function_name_1] fail ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name] body of ||| imap [function_name]	count=1
function_name	extension is connected ||| info	count=1
namespace	job servers to ||| gearmanclient	count=1
function	target frame [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	a large object ||| lo	count=1
function_name	rewinds ||| reset	count=2
arg_pair	can ||| resource $connection	count=1
function_name	[function_name_1] parameter in ||| [function_name_1] bind [function_name_2]	count=1
function_name	[function_name_1] album string ||| [function_name_1] [function_name_2]	count=1
namespace	pdf document ||| harudoc	count=1
arg_pair	to maxlength bytes and ||| resource $handle int $maxlength	count=1
function_name	wait function suspends execution ||| wait	count=1
arg_pair	the color [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=7
return	content to ||| bool	count=2
arg_pair	populate ||| string $regex	count=1
function_name	to place after ||| get postfix	count=1
function_name	for result grouping ||| set group	count=1
namespace	function queries ||| function	count=1
arg_pair	key with old_value ||| string $key int $old_value	count=1
namespace	causes the [namespace] to wait ||| [namespace]	count=1
function_name	declared [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	reply that uses ||| reply start	count=1
function_name	ftp server ||| ftp nb put	count=1
function_name	message queue with ||| queue	count=1
function_name	returns the remaining contents ||| get	count=1
arg_pair	of the specified mysqlnd ||| int $passwd_len	count=1
function_name	logo using the built-in ||| logo	count=1
function_name	ends a page which ||| end page	count=1
function_name	opcode cache ||| wincache ocache	count=2
arg_pair	it for later use ||| resource $pdfdoc string $fontname	count=1
return	given file pointer ||| string	count=1
function_name	with a ||| set metadata	count=1
arg_pair	the current request indicating ||| string $actor string $details	count=1
function	opens decrypts [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	random number ||| random	count=1
arg_pair	with port for the ||| int $port	count=1
arg_pair	into an ||| int $storage	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get [function_name_1]	count=19
function_name	yet been closed ||| ibase	count=1
arg_pair	[arg_pair_1] the ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	non-linear sigmoidal contrast algorithm ||| sigmoidal contrast	count=1
function_name	with bind_textdomain_codeset() you ||| codeset	count=1
function_name	the miter [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	string padded [function_name_2] ||| [function_name_2] [function_name_1]	count=8
namespace	evcheck ||| evcheck	count=2
function_name	value ||| value	count=6
function_name	ask the multi ||| multi	count=1
function_name	[function_name_1] element ||| [function_name_1] [function_name_2]	count=1
function_name	column in ||| column	count=1
function_name	kernel to the given ||| kernel	count=1
function_name	opposed to mongocollection::find() this ||| find one	count=1
namespace	this function sorts ||| function	count=2
function_name	width and sets ||| set	count=1
function_name	logo using the ||| logo	count=1
arg_pair	to an existing ||| resource $pdfdoc int $textflow	count=1
arg_pair	one row of ||| resource $result_identifier	count=1
arg_pair	a named ||| string $name	count=2
function_name	opened mode is ||| mcrypt enc	count=1
function_name	an odbc ||| odbc fetch array	count=1
arg_pair	old_data string and new_data ||| string $old_data string $new_data	count=1
function_name	or stub written in ||| stub	count=1
return	with a file ||| void	count=1
function_name	provider parameters ||| parameter	count=1
function_name	training algorithmsfann_train_incremental fann_train_batch ||| fann get	count=1
function_name	transforms ||| transform to doc	count=1
function_name	signing request represented by ||| openssl	count=2
arg_pair	outputs a ||| resource $image	count=2
arg_pair	in a file dest ||| string $dest	count=1
function_name	fetches a row as ||| ibase fetch	count=1
function_name	blob that has either ||| blob	count=1
function_name	base type [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	status callbacks ||| set callbacks	count=1
arg_pair	something in an object ||| int $mode	count=1
function_name	without waiting ||| pg send query	count=1
function_name	callback ||| callback	count=4
function_name	row and moves the ||| mysql fetch	count=1
return	must be called after ||| void	count=1
function_name	group fields group ||| group fields	count=1
namespace	and returns a result ||| sqlite3stmt	count=1
return	the server for ||| mongocursor	count=1
function	after applying [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	an entry with a ||| string $key	count=1
function_name	computes ||| udiff	count=1
function_name	binary ||| binary	count=4
arg_pair	application program to a ||| string $qmanagername	count=1
namespace	the host name of ||| function	count=1
return	a string ||| string	count=25
function_name	an extended json ||| db\bson\from json	count=1
function_name	field is in ||| msql field	count=1
function_name	with existing information ||| set metadata	count=1
function_name	of the most ||| last	count=1
return	session mechanism if ||| bool	count=1
function_name	end line number from ||| end line	count=1
function_name	object ||| construct	count=4
function_name	set multiset sequence ||| col size	count=1
arg_pair	point for new drawing ||| float $y	count=1
arg_pair	no ||| string $collection mixed $id	count=1
arg_pair	pl/sql array ||| int $max_item_length	count=1
function_name	inspected by ||| mysqlnd qc	count=1
function_name	training ||| fann get	count=4
function_name	as event handler ||| event handler	count=1
function_name	clear error ||| dbplus errcode	count=1
function	finishes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	an entry in ||| resource $result_entry_identifier	count=1
arg_pair	given ||| resource $conn_identifier string $oid	count=2
function_name	difference - an object ||| object	count=4
arg_pair	http ||| eventhttprequest $req int $type	count=1
arg_pair	oliver isbn 0-131-00413-1 ||| string $second	count=1
function_name	image ||| sub image	count=1
function_name	bounding box ||| b	count=1
function	as layer [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	advances array s ||| end	count=1
function_name	data store ||| apcu	count=2
function_name	error if any ||| error	count=1
return	table with a column ||| mixed	count=1
function_name	transforms the source ||| transform to doc	count=1
arg_pair	mailbox ||| string $old_mbox	count=1
arg_pair	of snmp objects starting ||| string $host string $community	count=2
function_name	candidate [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	name of [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	steepness for neuron ||| steepness	count=1
namespace	checks whether ||| norewinditerator	count=1
arg_pair	display a ||| resource $fdf_document string $frame_name	count=1
function_name	configured fonts ||| query fonts	count=1
function_name	the last absent ||| last empty	count=2
namespace	and saves it ||| function	count=1
namespace	environments ||| oauth	count=1
return	a given result identifier ||| object	count=1
function_name	rendering ||| rendering	count=4
namespace	a [namespace] ||| [namespace]	count=4
function_name	fork in the ||| loop fork	count=1
function_name	file or url can ||| add file	count=1
namespace	function is very ||| function	count=1
arg_pair	if no ||| mixed $id	count=1
function_name	row in a ||| fetch row	count=1
function_name	[function_name_1] output ||| [function_name_2] [function_name_1]	count=5
function_name	to the [function_name] line in ||| [function_name]	count=1
function_name	main filter ||| filter	count=1
arg_pair	text for ||| resource $pdfdoc string $text	count=1
arg_pair	the item will ||| mixed $value	count=1
function_name	request authenticator ||| request authenticator	count=1
function_name	blob ||| blob	count=7
function_name	all pending headers ||| all	count=1
arg_pair	listening clients that the ||| int $type	count=1
arg_pair	levels of ||| float $whitepoint	count=1
arg_pair	the given ||| int $filters	count=1
function_name	set the [function_name_2] ||| ziparchive bool [function_name_1] [function_name_2] index int $index string	count=2
function_name	the starting line number ||| get start line	count=1
function_name	closes a blob ||| blob close	count=1
function_name	the default namespace ||| is default namespace	count=2
return	to trace ||| void	count=1
function_name	binary string ||| readimageblob	count=1
function_name	sets the minimum ||| sybase min	count=3
arg_pair	field after the ||| resource $fdf_document string $fieldname	count=1
namespace	the error string ||| function	count=1
arg_pair	code to html numeric ||| string $encoding bool $is_hex	count=1
return	value for the ||| float	count=1
function_name	error handler which ||| error handler	count=2
function_name	type id ||| set id	count=1
function_name	encryption mode for ||| encryption mode	count=2
arg_pair	specified by assoc_array which ||| int $options	count=1
function_name	by csr ||| openssl csr export	count=3
namespace	node ||| domnode	count=2
function_name	error code given ||| error	count=1
function_name	to return ||| return	count=1
function_name	the field type is ||| field type	count=1
function_name	the language described/referred ||| enchant broker set ordering	count=1
function_name	whether to ||| is	count=1
function_name	be ||| maxdb	count=1
function_name	[function_name_1] sqlstate error ||| [function_name_1] [function_name_2]	count=1
arg_pair	on the page ||| resource $psdoc	count=1
function_name	signal event ||| signal event	count=2
function_name	[function_name_1] handler ||| [function_name_2] [function_name_1]	count=17
namespace	or integer unicode ||| intlchar	count=1
function	subtraction [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	opcode with the user ||| callable $callable	count=1
function	[function_name_1] of snmp ||| [arg_pair_2] [function_name_1]	count=2
function	[function_name_1] user ||| [function_name_1] [arg_pair_2]	count=1
function_name	\r ||| nl2br	count=1
function_name	[function_name_1] authenticator is ||| [function_name_2] [function_name_1]	count=2
function_name	the same body ||| bind to	count=1
function	given [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	candidate [function_name_2] ||| [function_name_1] max [function_name_2]	count=1
function_name	proxy callback ||| proxy callback	count=2
function_name	asynchronously ||| pg send	count=1
return	with existing information stored ||| void	count=1
function_name	host specified by ||| gethostbyaddr	count=1
function_name	candidate change ||| candidate change	count=2
function_name	for highlighted ||| highlight	count=1
function_name	creates a standard ||| create standard	count=4
function_name	is a space character ||| space	count=1
function_name	json [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	initial segment of subject ||| string $subject	count=1
arg_pair	y direction by alpha ||| float $alpha	count=1
function_name	inner [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	returns the [function_name_2] ||| [function_name_2] [function_name_1]	count=99
arg_pair	from ||| resource $fp	count=1
namespace	was opened by ||| function	count=1
return	the current element ||| void	count=1
function_name	[function_name_1] the client ||| [function_name_2] [function_name_1]	count=4
function_name	row of the ||| fetch	count=1
function_name	priority ||| set priority	count=2
function_name	pdi document ||| pdi value	count=1
function_name	sequence ||| seq	count=2
arg_pair	import the php array ||| array $array bool $save_indexes	count=1
namespace	this ||| mongocursorinterface	count=1
function_name	when launched via the ||| win32 start	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| overview [arg_pair_1] [arg_pair_2]	count=12
function_name	all current [function_name_2] ||| eventdnsbase void [function_name_1] [function_name_2]	count=1
function_name	index on the ||| index	count=1
function_name	steepnesses in the fann_get_cascade_activation_functions() ||| steepnesses	count=1
arg_pair	the ||| int $command	count=1
function_name	[function_name_1] width for ||| [function_name_2] [function_name_1]	count=1
arg_pair	the closest possible ||| int $green	count=1
function_name	gets the order number ||| order	count=1
rep	of [rest_2] ||| [namespace_1] [rest_2]	count=2
function_name	the regex ||| highlight regex	count=2
arg_pair	the image ||| int $arg4	count=1
function_name	traverse over ||| real walk	count=1
function_name	current process [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	at middle point ||| resource $psdoc float $x	count=1
function_name	in the train ||| input train	count=1
function_name	definition [function_name] ||| [function_name]	count=3
function_name	creates [function_name_2] ||| [function_name_2] context [function_name_1]	count=1
function_name	line on the ||| line	count=1
namespace	session and ||| function	count=1
function_name	or more stored procedures ||| procedure columns	count=1
function_name	the minimum [function_name] epochs determines ||| fann get cascade min [function_name]	count=1
arg_pair	stored of ||| string $filename int $version	count=1
arg_pair	for an enumerated or ||| int $property	count=1
function_name	[function_name_1] out epochs ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] is posted ||| [arg_pair_2] [function_name_1]	count=3
function	[function_name_1] [arg_pair_2] ||| [function_name_1] min default frequency [arg_pair_2]	count=1
function_name	required to display ||| display	count=1
namespace	mongodb\driver\server instances ||| mongodb\driver\manager	count=1
arg_pair	from object_id ||| string $object_id string $timeout	count=1
function_name	[function_name_1] point ||| [function_name_2] [function_name_1]	count=2
function_name	removes all [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	padded on the ||| str pad	count=2
function_name	train ||| train	count=8
function_name	[function_name_1] [function_name_2] the ||| [function_name_1] [function_name_2]	count=2
arg_pair	socket stream or a ||| eventbase $base mixed $socket	count=1
function_name	row from ||| cubrid fetch row	count=1
return	[return] different ||| [return]	count=1
function_name	odbc_do() or odbc_exec() ||| odbc fetch	count=1
return	returns ||| sqlite3result	count=1
function_name	minimum ||| min cand	count=1
function_name	get the next ||| next	count=1
function_name	sets the value of ||| pdf set	count=1
function	properties [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	return a string ||| string	count=1
function_name	einer mime kopfzeile ||| iconv mime	count=1
arg_pair	to display a result ||| resource $fdf_document string $frame_name	count=1
arg_pair	to mysql ||| bool $silent	count=1
arg_pair	to maxlength bytes ||| int $maxlength	count=1
function_name	location of [function_name_2] ||| [function_name_2] device get relative [function_name_1]	count=1
function_name	the iteration ||| iteration	count=1
arg_pair	at path to ||| string $path	count=1
arg_pair	maxlength bytes ||| int $maxlength	count=1
function_name	days in ||| days in	count=1
function_name	opendir readdir ||| readdir	count=1
namespace	not for production ||| oauth	count=1
function_name	gets the current ||| get current	count=9
arg_pair	gmp number ||| gmp $gmpnumber	count=1
function_name	apache ||| apache	count=1
arg_pair	on a ||| string $namespace	count=1
function_name	for ||| mysqli stmt	count=1
function_name	the specified return type ||| return type	count=1
function_name	running ||| run	count=1
return	be represented with ||| void	count=1
return	number of the ||| int	count=1
namespace	phar archive using array ||| phar	count=1
function_name	obscure [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	string str from ||| string $str	count=1
function	to execute [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	gettext() and ||| bind textdomain	count=1
function_name	timezone used ||| timezone	count=1
arg_pair	the behavior of this ||| int $limit int $count	count=1
namespace	change the group of ||| function	count=1
function_name	[function_name_1] [function_name_2] image ||| [function_name_1] image [function_name_2]	count=1
function_name	style ||| style	count=1
function_name	last ldap command ||| ldap errno	count=2
function_name	[function_name_1] uri ||| [function_name_1] [function_name_2] string $prefix	count=3
function_name	[function_name_1] [function_name_2] a basic com_* ||| [function_name_2] [function_name_1]	count=6
function_name	the total width of ||| width	count=1
namespace	the maxdb_connect_error() [namespace] will return ||| [namespace]	count=1
function_name	the activation ||| get activation	count=2
return	be used ||| void	count=2
function_name	internal character ||| mb internal	count=2
arg_pair	mask ||| int $mask	count=1
function_name	minimum out [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	socket to a ||| string $dsn boolean $force	count=1
function_name	otherwise it ||| algorithm	count=1
return	of [return] given ||| [return]	count=1
arg_pair	for the given message ||| resource $imap_stream int $msg_number	count=1
namespace	statement and returns a ||| sqlite3stmt	count=1
namespace	lock on a syncreaderwriter ||| syncreaderwriter	count=2
function_name	record in the current ||| record	count=1
return	specifying how to composite ||| bool	count=1
function_name	[function_name_1] warning message ||| [function_name_2] [function_name_1]	count=2
function_name	gets the text ||| text	count=2
namespace	an existing hash ||| quickhashintstringhash	count=1
function_name	[function_name_1] readline ||| [function_name_2] [function_name_1]	count=6
function_name	the number of ||| num input	count=1
arg_pair	files within ||| string|array $files	count=1
namespace	function is similar to ||| function	count=6
function_name	restore ||| restore	count=1
namespace	the values of ||| function	count=1
function_name	sunset time ||| sunset	count=1
function_name	[function_name_1] phrase field ||| [function_name_1] [function_name_2]	count=2
function_name	http response status ||| http response	count=1
return	if it has not ||| bool	count=1
function_name	containing the version ||| version	count=1
namespace	properties ||| reflectionproperty	count=1
arg_pair	data using a given ||| string $data	count=1
function_name	the entries [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	path according ||| path	count=1
function_name	a new [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	consists of ||| int $startpos	count=1
function_name	[function_name_1] steepnesses in ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] timezone used ||| [function_name_2] [function_name_1]	count=2
function_name	sends ||| send prepare	count=2
return	link to ||| bool	count=3
function_name	current parameter setting ||| pg parameter status	count=2
function_name	given result ||| fetch object	count=1
function_name	stream representing a ||| stream	count=1
function_name	tasks previously added with ||| run	count=1
function_name	influences unstable period factor ||| trader set unstable period	count=1
arg_pair	for a ||| int $property	count=1
namespace	maxdb resource ||| function	count=1
function_name	consisting ||| preg grep	count=2
function_name	a json [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function	class to [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	frees all resources ||| sqlsrv free	count=1
arg_pair	profile from an ||| string $name string $profile	count=1
function_name	extract ||| extract	count=1
function_name	path for ||| enchant broker get dict path	count=1
function_name	[function_name_1] cascade candidate ||| [function_name_2] [function_name_1]	count=1
function_name	sets an attribute with ||| set attribute	count=1
function_name	mode is ||| mcrypt	count=1
arg_pair	the ||| int $what	count=1
return	to the effect achieved ||| bool	count=1
function_name	access token secret and ||| get access token	count=1
function	[function_name_1] a orig_name ||| [arg_pair_2] [function_name_1]	count=1
function_name	as ||| apcu entry	count=1
function_name	momentum ||| momentum	count=1
function	[function_name_1] data by ||| [arg_pair_2] [function_name_1]	count=3
function_name	entire command line history ||| readline list history	count=1
function_name	[function_name_1] stopped ||| [function_name_1] [function_name_2]	count=2
namespace	configuration ||| eventdnsbase	count=1
function_name	clears ||| clear	count=2
namespace	objects property table ||| threaded	count=2
namespace	production environments ||| oauth	count=1
function	export a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	locale information ||| string $locale	count=1
arg_pair	attempts ||| resource $link_identifier	count=4
function	unserializes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] of root ||| [function_name_2] device get [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] device [function_name_1]	count=3
function_name	class to be ||| node class	count=1
arg_pair	object_id ||| int $timeout	count=2
namespace	given constant exists and ||| function	count=1
function_name	each virtual server ||| server	count=1
arg_pair	database for database ||| mysqlnd_connection $connection string $database	count=1
function_name	of any ||| unique image	count=1
function_name	image with a ||| image	count=1
function_name	draws a [function_name] ||| [function_name]	count=1
function_name	number of days in ||| days in	count=1
function_name	with one ||| fetch	count=3
arg_pair	a timestamp ||| int $timestamp	count=2
function_name	that cannot be represented ||| metadata	count=1
return	gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() this ||| bool	count=1
function_name	header ||| header	count=6
function_name	get elapsed ||| get last elapsed	count=1
function_name	[function_name_1] the learning ||| [function_name_1] [function_name_2]	count=2
function_name	declared [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	a specified area ||| bool	count=1
return	in an array ||| array	count=1
namespace	if ||| splfixedarray	count=1
return	to pointer to the ||| bool	count=1
arg_pair	embed its data ||| bool $embed	count=1
function_name	sets the border ||| set border	count=2
function_name	match to ||| match	count=1
function_name	file named ||| pkey export to file	count=1
function_name	corresponding ||| geoip id by	count=1
return	name used ||| string	count=1
arg_pair	transparency ||| float $alpha float $fuzz	count=1
arg_pair	identical to ||| bool $double_encode	count=1
arg_pair	the value ||| string $value	count=1
arg_pair	specific cipher / ||| string $cipher	count=1
function_name	tie breaker parameter tie ||| tie breaker	count=1
function_name	new ||| construct	count=9
function_name	transaction [function_name] was ||| [function_name] rollback	count=1
function_name	reply that ||| send reply start	count=1
function_name	and ||| maxdb	count=1
function_name	gets several ||| ps get parameter	count=2
function_name	[function_name_1] modified utf-7 ||| [function_name_2] [function_name_1]	count=2
function_name	path for a ||| path	count=1
function_name	row [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	the hash in the ||| quickhashintstringhash	count=1
function	starts [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	socket connection ||| stream socket	count=1
return	the programmer ||| boolean	count=2
function_name	fit the width of ||| set fit	count=1
function	[function_name_1] and ||| [arg_pair_2] [function_name_1]	count=11
function_name	current text ||| get text	count=1
arg_pair	b ||| array $a array $b	count=1
function_name	all current [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	adds query with ||| add query	count=2
arg_pair	table table_name using delimiter ||| string $table_name	count=1
function_name	timestamp of the most ||| last	count=1
function_name	[function_name_1] record from ||| [function_name_1] [function_name_2]	count=1
namespace	mongo id ||| mongoid	count=1
return	will respond to ||| bool	count=1
arg_pair	left and right ||| mixed $left mixed $right	count=1
function_name	any pixel color ||| image	count=1
function_name	streams data from ||| mailparse stream encode	count=1
arg_pair	treats ||| mixed $value1	count=1
function_name	secondary member of ||| is secondary	count=1
function_name	column of the ||| array column	count=1
return	yaf_application ||| yaf_application	count=1
arg_pair	[arg_pair_1] user and ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	the list ||| list	count=1
function	method exists [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] mode ||| [function_name_1] [function_name_2]	count=5
arg_pair	the inverse of ||| int $options resource $compcode	count=1
arg_pair	be called whenever a ||| resource $proxy	count=1
return	suitable for maxdb_options() ||| resource	count=1
namespace	identifier ||| function	count=1
function_name	the thread ||| thread	count=1
arg_pair	a file with a ||| string $prefix	count=1
function_name	default value of ||| default value	count=2
function_name	sunrise time for ||| sunrise	count=1
arg_pair	the quality of service ||| int $service_level_option	count=1
function_name	returns the names and ||| get	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] array $rows [arg_pair_2]	count=2
function_name	next element ||| next	count=1
function_name	will start ||| start	count=1
function	[function_name_1] by fd ||| [arg_pair_2] [function_name_1]	count=1
function_name	get or ||| fbsql database	count=1
return	event_base_loop() [return] ||| [return]	count=2
arg_pair	data between one file ||| string $data	count=1
function_name	the initial size of ||| size	count=1
function_name	for the specified socket ||| socket	count=1
function_name	for the last ||| dbplus last	count=1
function_name	sequence ||| getfilename	count=1
arg_pair	of servers ||| string $host	count=1
function_name	data store ||| apcu store	count=1
namespace	finalizes ||| harupage	count=1
arg_pair	assoc_array which has ||| array $assoc_array	count=1
function_name	get the owner ||| get owner	count=1
arg_pair	thats associated with ||| string $database_name resource $link_identifier	count=1
function_name	gets a ||| get	count=3
arg_pair	callback to be called ||| mixed $callback	count=1
return	shouldnt ||| mongoid	count=1
function_name	modified utf-7 ||| imap utf7	count=1
function_name	include the upper ||| include upper	count=4
function_name	returns the path ||| sys get	count=1
function_name	immediate neighbor ||| matte floodfill	count=1
function_name	message ||| message	count=5
arg_pair	of the ||| resource $result_identifier	count=2
function_name	returns the number ||| num fields	count=1
arg_pair	colors in the ||| float $channel	count=1
function_name	binds ||| bind array by	count=1
function_name	current mysql [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	julian calendar 4713 b ||| juliantojd	count=1
function_name	next tuple ||| next	count=1
arg_pair	field fieldname ||| resource $fdf_document string $fieldname	count=1
arg_pair	passed javascript script as ||| string $extension_name string $script	count=1
function_name	function returns true if ||| mcrypt module is	count=1
namespace	used ||| function	count=2
function_name	a given ||| fetch object	count=1
namespace	function ||| reflectionfunctionabstract	count=8
namespace	the specified code point ||| intlchar	count=1
function_name	active event loop immediately ||| event base loopbreak	count=1
arg_pair	indexed ||| resource $stmt int $row_number	count=1
function_name	or continuing the ||| loop	count=1
function_name	servers started by mysqlnd_ms_xa_begin() ||| xa	count=1
function	[function_name_1] virtual file ||| [arg_pair_2] [function_name_1]	count=1
function_name	given password to ||| with password	count=1
function_name	case ||| case	count=1
arg_pair	is a wrapper ||| string $note_name string $note_value	count=1
function_name	the socket ||| stream socket	count=1
function_name	epochs determines the maximum ||| fann get cascade max	count=1
function_name	get the connection ||| get connection	count=1
return	of the signals given ||| int	count=1
function_name	the current mysql daemon ||| mysql list	count=1
arg_pair	the ||| int $option int $param	count=1
function_name	register [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	of ||| get	count=7
function_name	[function_name_1] on the ||| [function_name_2] [function_name_1]	count=4
function_name	end recursing one ||| end children	count=2
return	0777 ||| int	count=1
function_name	suspend and resume ||| resume	count=1
function_name	attribute in namespace ||| attribute ns	count=3
function_name	a row as ||| fetch object	count=1
function_name	a block ||| get block	count=1
function_name	the best ||| best xfer	count=1
arg_pair	x509cert ||| bool $shortnames	count=1
function_name	path ||| close path	count=1
function_name	current element is valid ||| valid	count=2
arg_pair	given filter filtertype ||| resource $image int $filtertype	count=1
function_name	search query with the ||| query	count=1
function_name	[function_name_1] sqlite sql ||| [function_name_2] [function_name_1]	count=2
function_name	several parameters ||| ps	count=1
function_name	inserts ||| insert	count=4
function	[function_name_1] [arg_pair_2] ||| [function_name_1] output [arg_pair_2]	count=8
arg_pair	service provider ||| string $callback_url	count=1
return	which belongs to a ||| string	count=1
function_name	buffer provided ||| add buffer	count=1
function_name	to the end of ||| add	count=1
function	[function_name_1] [arg_pair_2] result ||| result [function_name_1] [arg_pair_2]	count=3
namespace	beginning ||| spldoublylinkedlist	count=1
namespace	palette version of ||| function	count=1
function_name	contents of the topmost ||| end	count=1
arg_pair	an event ||| int $bytes_transferred	count=1
function_name	the size ||| ftp size	count=1
function	set [arg_pair_2] ||| [function_name_1] string $host [arg_pair_2]	count=1
function_name	the ||| sqlsrv errors	count=1
namespace	request on the server ||| function	count=1
function_name	transforms [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	path ||| get dict path	count=2
function_name	places an image ||| pdf fit image	count=2
arg_pair	what ||| string $what	count=1
arg_pair	result set available ||| resource $stmt	count=1
arg_pair	serializes the ||| resource $packet_id mixed $var_name	count=1
return	falling between [return] white and ||| [return]	count=1
return	containing [return] specified ||| [return]	count=1
function_name	a phar ||| phar	count=1
function_name	bytecodes ||| bcompiler write	count=1
function_name	process ||| posix	count=2
namespace	from the [namespace] field ||| [namespace]	count=1
function_name	declaring [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	current page mode ||| page mode	count=1
arg_pair	callback to ||| int $type mixed $callback	count=1
return	it as [return] turns off ||| [return]	count=1
function_name	a primary member ||| is primary	count=2
function_name	gets the text interword ||| text interline	count=1
namespace	the set ||| event	count=1
arg_pair	all files within a ||| string $pathto string|array $files	count=1
arg_pair	no ||| mixed $id	count=1
function_name	called by the user ||| set	count=1
function_name	checks if ||| is	count=2
arg_pair	fetch an associative array ||| resource $result int $rownumber	count=1
function_name	data being returned ||| data	count=2
function_name	[function_name_1] the upper ||| [function_name_1] [function_name_2]	count=3
function_name	disposal method ||| dispose	count=2
return	creates a ||| int	count=1
function_name	[function_name_1] defined functions ||| [function_name_1] [function_name_2]	count=1
arg_pair	of the same size ||| int $method	count=1
function_name	to creating a new ||| get active object	count=1
namespace	array ||| splfixedarray	count=1
namespace	function implements a ||| function	count=2
function_name	closes an image ||| pdf close image	count=2
function_name	renames a file ||| rename	count=1
function_name	received events and ||| now	count=1
function_name	start of a java ||| java	count=1
function_name	[function_name_1] [function_name_2] to the bbcode_container ||| function bool bbcode [function_name_1] [function_name_2] resource $bbcode_container resource $bbcode_arg_parser	count=1
function_name	by ||| state	count=2
namespace	cairoimagesurface ||| cairoimagesurface	count=1
function_name	[function_name_1] dabase header ||| [function_name_2] [function_name_1]	count=1
function_name	the default [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	[function_name_1] quality ||| [function_name_1] [function_name_2]	count=2
function_name	color ||| unique	count=1
function_name	into a mysqlnd ||| mysqlnd uh convert to mysqlnd	count=1
function	attribute in [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	whether ||| bool	count=10
function_name	the pid from ||| pid	count=1
function_name	line to ||| line	count=1
arg_pair	a prepared statement with ||| resource $connection string $stmtname	count=2
function_name	with [function_name] a ||| ibase param [function_name]	count=1
function	xml namespace [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	which the regex ||| set highlight regex	count=1
function_name	use with block ||| block	count=1
function_name	[function_name_1] one of ||| [function_name_1] mlt query [function_name_2]	count=1
function_name	field type ||| fbsql field type	count=2
function	glyph definition [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	default timezone used ||| date default timezone	count=2
function_name	returns the number of ||| mysqli field count	count=1
function_name	decodes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	information about ||| pdf info	count=1
arg_pair	str1 ||| string $str1	count=1
function_name	specified return type ||| return type	count=2
arg_pair	the ||| int $chunk_size int $type	count=1
function_name	minimum number ||| fann get cascade min	count=1
function_name	of current eventbuffer ||| buffer	count=1
function_name	[function_name_1] sarprop temperature ||| [function_name_1] [function_name_2]	count=1
arg_pair	text rectangle using ||| resource $font	count=1
arg_pair	left to ||| mixed $left	count=1
arg_pair	value of ||| string $value string $timeout	count=1
function_name	for suitable snippets ||| highlight max analyzed chars	count=1
arg_pair	the how ||| int $how	count=1
function_name	a request ||| request	count=1
arg_pair	the associated ||| resource $pdfdoc int $textflow	count=1
function_name	tables ||| odbc tables	count=1
function_name	for all ||| all	count=1
namespace	[namespace] contains ||| [namespace]	count=1
namespace	way of getting a ||| mongodb	count=1
namespace	tidy ||| tidy	count=1
function_name	to map the ||| get delayed	count=1
function_name	timezone used by all ||| timezone	count=1
arg_pair	mangled for security ||| resource $radius_handle string $mangled	count=1
function_name	for ||| immortal	count=1
namespace	in a ||| pharfileinfo	count=1
function_name	available for reading ||| sqlsrv fetch	count=1
function_name	the weight multiplier ||| cascade weight multiplier	count=1
function_name	set the ||| fann set	count=3
function_name	sets the character ||| set character	count=1
function_name	and right image of ||| image	count=1
function	a weblink [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	this function sets the ||| resource $id	count=1
arg_pair	and associates imagickpixel ||| int $cols	count=1
return	sort [return] keys of ||| [return]	count=1
function_name	oracle [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	a row ||| db2 fetch	count=1
function_name	an ellipse on the ||| ellipse	count=1
function_name	[function_name_1] out epochs ||| [function_name_1] [function_name_2]	count=2
namespace	added to an splobjectstorage ||| splobjectstorage	count=1
function_name	used in an sql-statement ||| dbx	count=1
function_name	write operations ||| write buffer	count=1
namespace	this function converts ||| function	count=2
function_name	mode is [function_name_2] ||| [function_name_2] algorithm [function_name_1]	count=1
arg_pair	the passed new node ||| domnode $newnode	count=1
function_name	the host ||| gethostbyaddr	count=1
function_name	phrase field pf3 ||| phrase field	count=4
function_name	is similar to creating ||| get active object	count=1
return	of identical candidates which ||| int	count=1
return	pdostatement ||| pdostatement	count=1
function_name	required oauth provider parameters ||| required parameter	count=1
function_name	gearmanclient::addtask() ||| run	count=1
namespace	the database path on ||| function	count=1
function_name	[function_name_1] frontend/backend ||| [function_name_1] [function_name_2]	count=1
function_name	vector iv length ||| iv length	count=2
arg_pair	associated with port for ||| int $port	count=1
function_name	column number of ||| column number	count=2
return	simply stops and restarts ||| void	count=1
function_name	adds ||| bbcode add	count=1
arg_pair	str from ||| string $str array $convmap	count=1
arg_pair	string input for ||| string $input string $delimiter	count=1
function_name	append a content ||| append	count=1
function_name	stored with a ||| set	count=1
function_name	a given column ||| column	count=1
arg_pair	subject for ||| mixed $subject int $limit	count=1
function_name	deletes the given files ||| delete file	count=1
namespace	string of ||| function	count=1
function_name	sets the steepness of ||| set	count=1
arg_pair	be recognized as ||| bool $executable	count=1
arg_pair	b where gcd is ||| gmp $a gmp $b	count=1
function_name	the specified ||| pg fetch row	count=1
function_name	output buffer ||| ob	count=2
function_name	activation ||| activation	count=11
function_name	either a [function_name] into a ||| [function_name] export	count=1
arg_pair	given parameters ||| resource $imap_stream int $criteria	count=1
function_name	from file specified by ||| from file	count=1
function	[function_name_1] be added ||| [arg_pair_2] [function_name_1]	count=1
function_name	sets the quality ||| set	count=1
function_name	context-triggered piecewise hashing ||| ssdeep fuzzy	count=1
namespace	into the document ||| harudoc	count=1
return	from last ||| string	count=1
function_name	large object in ||| lo	count=1
arg_pair	in options preset ||| array $options	count=1
namespace	function will send ||| function	count=1
arg_pair	iteration with a ||| resource $ann	count=1
arg_pair	a timestamp and location ||| int $timestamp	count=2
arg_pair	to add new columns ||| array $columns	count=1
return	this is ||| bool	count=1
arg_pair	and returns a ||| string $encoding string $separator	count=1
arg_pair	directory ||| resource $context	count=2
function_name	[function_name_1] cascade output ||| [function_name_1] [function_name_2]	count=1
arg_pair	[arg_pair_1] to html ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	function is only ||| set	count=1
function_name	ssl_cipher_description ssl api ||| ssl get	count=1
function_name	return the name of ||| name	count=1
return	the route ||| string	count=1
function_name	outputs in the training ||| train	count=2
function_name	[function_name_1] wrapper ||| [function_name_1] [function_name_2]	count=1
return	server for some ||| mongocursor	count=1
function_name	that had errors in ||| errors	count=1
arg_pair	function specified by execute ||| int $pri	count=1
function_name	threshold [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	simulates [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	sets the current active ||| select	count=1
return	to call this ||| bool	count=1
arg_pair	the callback given ||| callable $callback	count=1
function_name	dom class to be ||| node class	count=1
function_name	textflow ||| fit textflow	count=2
function	function creates [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	image list ||| imagick	count=1
function_name	with an url string ||| connect with url	count=1
function_name	the specified distortion ||| distortion	count=1
namespace	is ||| function	count=1
function_name	is a base character ||| isbase	count=1
return	of the route which ||| string	count=1
function_name	the event specified ||| event	count=1
arg_pair	a class or ||| string $class	count=1
namespace	containing the training parameters ||| svm	count=1
function_name	[function_name] indicated column ||| [function_name] type	count=1
arg_pair	a prepared statement ||| string $stmtname	count=2
function_name	of [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	stats ||| stats	count=1
namespace	the image ||| gmagick	count=1
function_name	content ||| content	count=1
namespace	this function toggles ||| function	count=1
arg_pair	for a ||| resource $pdfdoc string $glyphname	count=1
arg_pair	text on the page ||| resource $pdfdoc string $text	count=1
function_name	gets the specified return ||| return	count=1
function_name	only be used to ||| metadata	count=1
namespace	the image ||| imagick	count=2
namespace	the current ||| function	count=5
arg_pair	an ||| resource $pdfdoc	count=1
arg_pair	fetches ||| resource $result_id	count=1
arg_pair	flags ||| string $path int $flags	count=1
arg_pair	and ||| float $timeout_read	count=1
function	registers [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	connects to the ||| int $port	count=1
function_name	initialization [function_name_2] ||| [function_name_1] cipher [function_name_2]	count=2
function_name	being number ||| data	count=1
return	point is a ||| bool	count=1
namespace	the ||| gmagick	count=1
function_name	the regular expression given ||| preg match	count=1
function_name	nsapi ||| nsapi	count=1
function_name	__autoload() ||| spl autoload	count=2
function_name	tangent ||| tan	count=1
arg_pair	point ||| float $x float $y	count=7
function_name	of the base type ||| type	count=1
function_name	informs the [function_name] ||| [function_name] service status	count=3
arg_pair	for a ||| string $pattern	count=1
arg_pair	[arg_pair] region ||| [arg_pair]	count=2
namespace	entire judy ||| judy	count=1
function_name	the document ||| get	count=1
function_name	[function_name_1] for retrieval ||| [function_name_2] [function_name_1]	count=2
function_name	merges three [function_name_2] ||| [function_name_2] [function_name_1]	count=7
namespace	retrieves the ||| splfileinfo	count=1
function_name	decay [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	alphanumeric ||| alnum	count=1
function_name	text interword ||| text interword	count=1
arg_pair	a ||| string $frame_name	count=1
namespace	checks if the iterator ||| iteratoriterator	count=1
namespace	events ||| event	count=1
arg_pair	a change ||| resource $proxy string $value	count=1
arg_pair	a single fragment ||| string $field_override	count=1
function_name	[function_name_1] image to ||| [function_name_2] [function_name_1]	count=1
function_name	if [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=3
namespace	for a set ||| gearmanclient	count=1
namespace	entering or ||| evloop	count=1
function_name	[function_name_1] byte ||| [function_name_1] [function_name_2]	count=3
arg_pair	match for a ||| string $pattern string $option	count=1
function_name	step ||| step	count=4
function_name	[function_name] indicated ||| [function_name] type	count=1
function_name	active [function_name_2] ||| [function_name_2] [function_name_1]	count=7
namespace	the first character of ||| function	count=1
function_name	dictionary exists or ||| dict exists	count=2
namespace	connection ||| function	count=1
function_name	declaring class for the ||| declaring class	count=1
function_name	[function_name_1] stretch to ||| [function_name_1] [function_name_2]	count=1
function_name	as opposed to mongocollection::find() ||| find one	count=1
arg_pair	using the oid ||| string $oid	count=1
arg_pair	a ||| string $target string $data	count=1
function	anchor point [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	of ||| solrquery	count=1
function_name	number from radian ||| rad2deg	count=1
function_name	in the route process ||| route	count=1
function_name	acquires stream representing ||| stream	count=1
function_name	[function_name_1] debug output ||| [function_name_1] [function_name_2]	count=1
function_name	a quoted ||| quoted	count=1
function_name	ms sql result associated ||| mssql	count=1
arg_pair	socket stream or ||| mixed $socket	count=1
namespace	statement directly ||| pdostatement	count=1
arg_pair	a ||| resource $p string $key	count=1
namespace	version being [namespace] ||| [namespace]	count=1
function_name	binary patch ||| string patch binary	count=1
function_name	cannot be ||| metadata	count=1
function_name	a quoted printable ||| quoted printable encode	count=2
function	[function_name_1] for the ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	uri ||| string $encoding	count=1
arg_pair	tar or zip archive ||| string $base_directory	count=1
function_name	virtual image ||| pdf load image	count=1
function_name	miter limit ||| miter limit	count=1
namespace	their unicode ||| intlchar	count=1
function_name	databases available [function_name_2] ||| [function_name_2] list [function_name_1]	count=2
function_name	for [function_name] image pixel ||| [function_name] image	count=1
function_name	as eventbuffer::addbuffer() except ||| prepend	count=1
function_name	being started when clicked ||| launchlink	count=1
function_name	path for a ||| enchant broker get dict path	count=1
arg_pair	and direction of the ||| int $direction	count=1
namespace	of [namespace] ||| [namespace]	count=6
arg_pair	by fd ||| int $mode	count=1
namespace	yaf_route_simple will get ||| yaf_route_simple	count=1
function	first attribute [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	of sybase_fetch_row() that ||| sybase	count=1
function_name	replaces [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] stored in ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] image ||| [function_name_2] [function_name_1]	count=18
arg_pair	a string before ||| resource $link string $source_string	count=1
arg_pair	disk-based or virtual file ||| string $filename	count=1
function_name	canonicalized absolute pathname ||| realpath	count=1
function_name	[function_name_1] any ||| [function_name_1] [function_name_2]	count=1
arg_pair	specified offset ||| int $length	count=1
function	semaphore with [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] record in ||| [function_name_1] [function_name_2]	count=1
function_name	which is ||| get	count=1
function_name	a new ||| construct	count=3
function_name	[function_name_1] json ||| [function_name_1] [function_name_2]	count=3
arg_pair	fetch an associative ||| resource $result int $rownumber	count=1
function_name	[function_name_1] tokens ||| [function_name_1] [function_name_2]	count=1
arg_pair	b where gcd ||| gmp $a gmp $b	count=1
function_name	term ||| set terms lower bound	count=1
arg_pair	code to html ||| string $encoding bool $is_hex	count=1
arg_pair	that correspond to ||| resource $result string $class_name	count=1
function_name	echo it ||| echo	count=1
arg_pair	port for the ||| int $port	count=1
function_name	syntax [function_name] check on ||| runkit [function_name]	count=2
function_name	stream resource ||| stream	count=1
function_name	[function_name_1] of root ||| [function_name_2] device [function_name_1]	count=1
arg_pair	sends a ||| string $arg int $ok_packet	count=1
function_name	by the queue ||| msg stat queue	count=1
arg_pair	whenever a change notification ||| resource $proxy	count=1
function_name	elapsed time for the ||| last elapsed time	count=1
function_name	record [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	returns the input ||| int $pad_length	count=1
namespace	the specified ||| intlchar	count=1
namespace	gearmanclient::addtaskhigh() ||| gearmanclient	count=1
function_name	set with oauthprovider::timestampnoncehandler() ||| nonce	count=1
function_name	query cache ||| mysqlnd qc	count=1
function_name	outputs blocks of ||| block	count=1
function_name	country and region ||| country and region	count=1
arg_pair	number of characters ||| int $width	count=1
function_name	opens an ftp ||| ftp	count=1
namespace	retrieves ||| splfileinfo	count=1
function_name	the mode ||| mode	count=3
function_name	a mysqlnd connection handle ||| mysqlnd uh convert to mysqlnd	count=1
namespace	available memcache servers ||| memcached	count=1
arg_pair	the socket socket ||| int $backlog	count=1
arg_pair	string and pattern ||| string $pattern	count=1
arg_pair	a ||| mixed $expression bool $return	count=1
function_name	request to execute ||| execute	count=1
arg_pair	length and other useful ||| resource $link_identifier string $blob_id	count=1
arg_pair	pseudo-object from a given ||| int $fetch_flag	count=1
namespace	a maxdb ||| function	count=1
function_name	random ||| gmp random range	count=2
arg_pair	during training ||| resource $ann resource $data	count=1
function_name	the text number of ||| get text	count=1
function_name	[function_name] for ||| get [function_name]	count=1
arg_pair	left and ||| mixed $left	count=1
function_name	[function_name_1] version ||| [function_name_2] [function_name_1]	count=5
function_name	move all ||| add buffer	count=1
function_name	last ||| get last	count=1
function_name	stream or datagram ||| stream socket	count=1
function_name	maximum ||| get cascade max cand	count=1
function_name	stub ||| stub	count=2
function_name	[function_name_1] [function_name_2] for ||| [function_name_1] [function_name_2]	count=3
function	[function_name_1] instance of ||| [function_name_1] string $progid [arg_pair_2]	count=2
arg_pair	of ||| int $offset	count=3
function_name	[function_name_1] pixel method ||| [function_name_1] [function_name_2]	count=2
function_name	closes the request handle ||| close	count=1
arg_pair	the current [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	the periodic watcher ||| evperiodic	count=1
function_name	maps to facet ||| set facet date	count=1
function_name	is used to read ||| cubrid load	count=1
return	defined in the ||| float	count=1
namespace	function can be ||| function	count=1
function_name	debugging in a ||| apd set	count=1
function	whether the [arg_pair_2] ||| [function_name_1] nick [arg_pair_2]	count=1
namespace	a recursivefilteriterator ||| recursivefilteriterator	count=1
return	built-in ||| bool	count=1
function_name	socket resource created with ||| socket connect	count=1
return	with the ||| resource	count=1
arg_pair	given color pair ||| int $pair int $fg	count=1
return	gets information about ||| array	count=1
arg_pair	value for an enumerated ||| mixed $codepoint int $property	count=1
function_name	gamma ||| gamma	count=1
namespace	gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| gearmanclient	count=1
function	[function_name_1] by outfilename ||| [arg_pair_2] [function_name_1]	count=3
return	to prepare the statement ||| bool	count=2
namespace	map ||| weakmap	count=1
function_name	array iterator that ||| iterator class	count=1
function_name	[function_name_1] query determines ||| [function_name_1] [function_name_2]	count=3
function_name	a row in a ||| fetch	count=3
arg_pair	subject for matches to ||| mixed $subject int $limit	count=1
arg_pair	blocks until there ||| resource $mh	count=1
namespace	get ||| harupage	count=2
function_name	train one ||| train	count=1
namespace	name used with ||| function	count=1
function_name	or ||| db2	count=1
function_name	current mysql ||| mysql	count=2
arg_pair	a global transaction ||| string $gtrid	count=1
function_name	priority ||| priority	count=5
function	the uid [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	returns the image background ||| get image background	count=1
return	connected to ||| string	count=1
function_name	decrease factor used ||| decrease factor	count=2
function_name	php internally ||| set state	count=1
function_name	[function_name_1] the activation ||| [function_name_2] [function_name_1]	count=6
function_name	or the last ||| last	count=1
function_name	result ||| result	count=5
function	[function_name_1] file ||| [function_name_1] create string $filename [arg_pair_2]	count=1
function	directories optionally [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	type number or boolean ||| number	count=1
function_name	returns ||| get option	count=2
function_name	sets the ||| set mlt	count=1
function_name	get the activation ||| get activation	count=2
function_name	the minimum [function_name] epochs ||| fann get cascade min [function_name]	count=1
arg_pair	save a ||| string $filename	count=1
function_name	one of ||| field	count=2
namespace	this should not be ||| pharfileinfo	count=1
function	service with ||| service resource $root_device	count=1
arg_pair	the [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=7
function_name	bit fail limit ||| bit fail limit	count=3
arg_pair	the specified object_id ||| string $timeout	count=1
function_name	stack trace as ||| trace as	count=2
function_name	rrd database ||| rrd	count=2
function_name	function creates ||| create text node	count=1
function_name	current line number for ||| current line number	count=1
function	[function_name_1] server thats ||| [function_name_1] [arg_pair_2]	count=5
function_name	the given file ||| bzerrstr	count=1
function_name	authentication ||| svn auth	count=1
function_name	query multiple queries are ||| query	count=2
arg_pair	into a two-dimensional array ||| int $maxrows	count=1
function_name	the wait function suspends ||| wait	count=1
function	the image [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	[function_name_1] wordlist ||| [function_name_2] [function_name_1]	count=6
function_name	feed signal [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	to a sybase database ||| bool	count=1
function_name	return the [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	version ||| get version	count=2
function_name	synchronize ||| eio fsync	count=1
function_name	[function_name_1] per-process statistics ||| [function_name_2] [function_name_1]	count=2
arg_pair	of htmlentities() in ||| string $string int $flags	count=1
arg_pair	calculate ||| float $font_size	count=1
arg_pair	takes ||| bool $assoc	count=1
function_name	[function_name_1] page and ||| [function_name_1] place pdi [function_name_2]	count=2
function_name	number of rows to ||| rows	count=1
function_name	row ||| ibase	count=1
function_name	close ||| close	count=4
arg_pair	name ||| resource $link_identifier	count=1
function_name	parameter if previously set ||| parameter	count=1
function_name	all following drawing operations ||| ps setlinewidth	count=1
function_name	[function_name_1] version ||| [function_name_1] [function_name_2]	count=3
function_name	matte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	properties ||| solrobject	count=1
namespace	this method ||| mongocursorinterface	count=1
namespace	and its associated recursiveiteratoriterator::rewind() ||| recursiveiteratoriterator	count=1
function_name	fills and ||| fill	count=2
arg_pair	the data source ||| int $data_type	count=1
function_name	numeric string reference ||| mb decode numericentity	count=1
namespace	stored with a file ||| pharfileinfo	count=1
function_name	adds a child ||| add	count=1
function_name	response may contain zero ||| get attr	count=1
arg_pair	for a map ||| string $map	count=1
function_name	image alpha ||| image alpha	count=2
function_name	[function_name] fragmenter ||| [function_name] slop	count=3
function_name	the readlink c ||| readlink	count=1
function_name	imagemagick api copyright as ||| copyright	count=1
function_name	oracle placeholder name ||| by name	count=1
function	the name [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function	option specified [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name] a basic ||| simple command [function_name]	count=3
function_name	virtual pixel [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	a timestamp and ||| int $format	count=2
arg_pair	apache derby database ||| string $database	count=1
function_name	adds a weblink ||| pdf add weblink	count=3
return	point to the ||| bool	count=3
arg_pair	username and password ||| string $password	count=1
function_name	prepares the timer ||| timer set	count=1
arg_pair	[arg_pair_1] value of ||| [arg_pair_1] [arg_pair_2]	count=3
function	[function_name_1] associates imagickpixel ||| [function_name_1] [arg_pair_2]	count=2
namespace	the owner [namespace] the ||| [namespace]	count=1
function_name	gets the default value ||| get default value	count=1
arg_pair	of htmlentities() in that ||| int $flags	count=1
function_name	class [function_name] of ||| is [function_name] of	count=1
function_name	the [function_name_2] ||| [function_name_1] [function_name_2] activation functions resource $ann	count=1
function_name	for the document ||| get	count=1
function_name	and separate parameters ||| params	count=1
function_name	of the ||| field	count=1
arg_pair	the input ||| string $input int $pad_length	count=1
namespace	function can be called ||| function	count=1
function	[function_name_1] a string ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	slant ||| float $slant	count=1
function_name	soap requests ||| set soap	count=1
return	to a database failed ||| string	count=1
arg_pair	file with a unique ||| string $prefix	count=1
function_name	to reduce the ||| reduce	count=1
arg_pair	parses options passed ||| array $longopts	count=1
return	to save the ||| bool	count=1
namespace	the exception was thrown ||| solrexception	count=1
arg_pair	zlib data ||| int $level	count=1
function	a textflow [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	that contains personal wordlist ||| pspell config personal	count=1
function_name	[function_name_1] parser ||| [function_name_1] [function_name_2]	count=6
function_name	gets several parameters ||| ps get parameter	count=2
return	day specified as a ||| mixed	count=2
function_name	country and region code ||| country and region	count=1
function_name	and [function_name] ||| [function_name] image channel distortion	count=1
function_name	similar to creating ||| get active object	count=1
function_name	notifies listening ||| gupnp service notify	count=1
arg_pair	multiset attribute of the ||| string $attr_name string $set_element	count=1
function_name	prepare next ||| next	count=1
function_name	number of days in ||| cal days in	count=1
function	[function_name_1] challenge using ||| [function_name_1] [arg_pair_2]	count=1
function_name	reads a large object ||| pg lo read	count=1
function_name	the directory [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	a persistent mysqlnd ||| bool	count=1
function_name	the internet host specified ||| gethostbyaddr	count=1
return	current element ||| bool	count=1
function_name	with spelling alternatives ||| dict quick	count=1
function_name	of activation [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	a pkcs#12 file format ||| openssl pkcs12 export	count=1
arg_pair	aql query using an ||| string $query string $dbpath	count=1
function_name	places ||| pdf fit	count=1
function_name	script ||| getopt	count=1
function_name	sets the [function_name_2] ||| [function_name_1] [function_name_2] handler	count=2
function_name	fills the path ||| ps fill	count=1
function_name	computes ||| udiff assoc	count=2
function_name	[function_name] extension resource ||| [function_name] import stream	count=3
function	[function_name_1] named ||| [arg_pair_2] [function_name_1]	count=1
function_name	revert any local changes ||| revert	count=1
function_name	ldap search returned ||| ldap	count=1
namespace	api [namespace] which ||| [namespace]	count=1
return	current ||| float	count=1
function_name	[function_name_1] process title ||| [function_name_2] [function_name_1]	count=1
arg_pair	hash implements ||| string $hash integer $algo	count=1
function_name	file specified ||| file	count=2
function_name	for the next ||| dbplus next	count=1
function_name	text interword [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	command on this ||| command	count=1
arg_pair	a ||| string $message	count=1
function_name	in ||| add	count=1
return	by ||| string	count=2
function_name	specified [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	any pixel ||| bool	count=1
function_name	minimum ||| cache min default	count=1
function_name	fetches a row ||| ibase fetch	count=1
function_name	current [function_name] ||| [function_name] lengths	count=2
return	the result instantly ||| bool	count=1
function	the image [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	the ||| harupage	count=1
arg_pair	font ||| float $fontsize	count=1
arg_pair	of working copy ||| string $path int $flags	count=1
function_name	socket error ||| error	count=1
function_name	aggregate function for use ||| create aggregate	count=1
function_name	own extended dom class ||| class	count=1
function_name	[function_name_1] with error ||| [function_name_2] [function_name_1]	count=1
arg_pair	memcached::getmulti() ||| int $flags	count=1
function_name	list of ||| list	count=2
function_name	and saves its ||| export	count=1
function_name	[function_name_1] output character ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] value of ||| [function_name_1] [function_name_2]	count=2
function	environmental [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	trace [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	renames a file or ||| rename	count=1
namespace	with gearmanclient::addtask() gearmanclient::addtaskhigh() ||| gearmanclient	count=1
function_name	function [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	in a ||| callable $error_handler	count=1
function_name	from ||| fetch object	count=2
return	was ||| bool	count=1
namespace	domprocessinginstruction object ||| domprocessinginstruction	count=1
function_name	the maximum number ||| max num	count=2
function_name	quoted printable ||| quoted printable encode	count=2
arg_pair	draws the character c ||| string $c int $color	count=1
function_name	the maximum ||| get cascade max	count=1
arg_pair	image from the given ||| int $filters	count=1
function_name	of word spacing ||| get word space	count=2
function_name	size thumbnail by ||| thumbnail	count=1
arg_pair	drain any data ||| int $max_bytes	count=1
function_name	drops ||| drop	count=1
function_name	or saves a png ||| imagepng	count=1
function_name	the current boost ||| boost	count=1
function_name	[function_name_1] memcached::res_* constants ||| [function_name_2] [function_name_1]	count=2
arg_pair	given result identifier ||| resource $result_id	count=1
function_name	sets the read and ||| set	count=1
function_name	create a config used ||| pspell config create	count=1
arg_pair	a ||| string $encoding	count=2
arg_pair	two-dimensional array ||| int $maxrows	count=1
function_name	a url-encoded ||| http build	count=1
namespace	[namespace] that ||| [namespace]	count=1
function_name	image by adjusting ||| image	count=2
function_name	command on ||| command	count=1
function_name	creates an ldap link ||| ldap	count=1
arg_pair	as a pseudo-object from ||| resource $result_id int $fetch_flag	count=1
function	creates [arg_pair_2] ||| [function_name_1] iv [arg_pair_2]	count=1
function_name	represented with ||| set metadata	count=1
function_name	per /etc/services ||| getservbyname	count=1
function_name	current buffer contents ||| clean	count=1
function_name	clears sets to ||| clrbit	count=1
function_name	not to return the ||| return	count=1
arg_pair	seconds and ||| int $seconds	count=1
arg_pair	the time returned ||| int $timestamp	count=1
function_name	size ||| size offset	count=2
return	very beta [return] entirely ||| [return]	count=1
namespace	gets the ||| function	count=2
function_name	to determine ||| dir	count=1
arg_pair	at the ||| int $left	count=1
function_name	gd ||| imagegd	count=1
arg_pair	provided by dn ||| resource $privkey	count=1
function_name	being started when clicked ||| add launchlink	count=1
function_name	to an ||| to	count=1
namespace	associated with the connection ||| eventhttpconnection	count=1
arg_pair	desired ||| float $blur	count=2
return	file ||| void	count=2
function_name	opened mode outputs blocks ||| enc is block mode	count=1
namespace	evfork watcher ||| evfork	count=1
arg_pair	the principal and ||| string $principal string $password	count=1
function_name	output stagnation ||| output stagnation	count=2
function_name	rewind operation on ||| rewind	count=1
arg_pair	to the ||| resource $image int $red	count=1
function_name	step-size is a ||| fann set rprop delta	count=1
function_name	regex ||| highlight regex	count=2
function	the uid [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	variables previously set by ||| vars	count=1
arg_pair	integer values ||| array $values	count=1
function_name	solve the linear least ||| least	count=2
function_name	external attributes of an ||| external attributes	count=2
function_name	a stride ||| stride for width	count=1
arg_pair	the values array ||| array $values	count=1
return	attribute information ||| hw_api_object	count=1
function_name	extension stored bytecodes and ||| bcompiler	count=1
namespace	fdf_save_file() in ||| function	count=1
return	of any ||| string	count=1
function_name	the thread [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] name from ||| [function_name_2] [function_name_1]	count=1
arg_pair	old_file and ||| string $old_file	count=1
function_name	learning ||| get learning	count=1
arg_pair	[arg_pair_1] at offset ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	zlib data format ||| string $data int $level	count=1
function	column of [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	[function_name_1] variables ||| [function_name_2] [function_name_1]	count=2
function_name	fills current path ||| fill	count=2
arg_pair	memcached::getmulti() except that ||| int $flags	count=1
arg_pair	of ||| int $min	count=1
arg_pair	tracing ||| resource $connection string $action_name	count=1
function_name	fills ||| fill	count=6
arg_pair	as a timestamp and ||| int $format	count=2
function_name	all current search ||| clear search	count=1
function_name	data from a glo ||| from glo	count=1
namespace	enables tracing of ||| function	count=1
rest	if the [function_2] ||| [return_1] [function_2]	count=1
function_name	of root ||| root	count=1
function_name	match for ||| match	count=1
function_name	register ||| autoload register	count=1
function_name	free ||| free	count=1
arg_pair	the service provider ||| string $request_token_url string $callback_url	count=1
namespace	[namespace] field ||| [namespace]	count=1
arg_pair	specified offset up ||| int $offset	count=1
function_name	the number of activation ||| get cascade activation	count=1
function_name	[function_name_1] attributes ||| [function_name_1] [function_name_2]	count=3
function_name	fetches a row as ||| fetch object	count=1
arg_pair	a phar ||| string $filename	count=1
arg_pair	equivalent to memcached::getmulti() ||| string $cas_tokens	count=1
namespace	to the arguments ||| function	count=1
function_name	the current cipher by ||| get cipher info	count=1
return	output is sent to ||| string	count=1
return	or gearmanclient::addtasklowbackground() ||| bool	count=1
function_name	[function_name_1] encoding ||| [function_name_2] [function_name_1]	count=2
function	internal readline [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	the gmagick object ||| gmagick	count=1
function_name	method morphs ||| morph	count=1
function	[function_name_1] a message ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	whenever a change notification ||| string $value	count=1
function_name	class to ||| class	count=1
function_name	is a space ||| space char	count=1
function_name	a specific row in ||| db2 fetch	count=1
function_name	the function socket_sendto() sends ||| sendto	count=1
function_name	sybase result ||| sybase	count=1
return	as a number ||| array	count=1
return	winding ||| bool	count=1
arg_pair	the portion of ||| bool $before_needle string $encoding	count=1
arg_pair	from the given ||| resource $conn_identifier	count=2
arg_pair	specified offset [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	value of ||| string $value	count=1
function_name	[function_name_1] exists in ||| [function_name_1] [function_name_2]	count=5
function_name	information and ||| info	count=2
arg_pair	key to ||| mixed $value	count=1
function	will write [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	on the ||| int $arg3 int $arg4	count=1
return	[return] of ||| [return]	count=2
arg_pair	c ||| int $color	count=1
namespace	returns the current node ||| spldoublylinkedlist	count=1
function_name	a database instance for ||| dba open	count=1
function_name	a ||| isbase	count=1
namespace	need ||| mongoid	count=1
function_name	as clipping path and ||| pdf clip	count=1
function_name	separate parameters ||| params	count=1
arg_pair	field fieldname and ||| resource $fdf_document string $fieldname	count=1
arg_pair	a page in ||| string $dest	count=1
function_name	minimum ||| terms min	count=1
arg_pair	of characters using a ||| string $str int $width	count=1
function_name	page and ||| page	count=2
function_name	any pixel that matches ||| opaque paint image	count=1
function_name	horizontal scaling for ||| horizontal scaling	count=2
namespace	imagickpixel object using ||| imagickpixel	count=1
arg_pair	to htmlspecialchars() in all ||| string $encoding	count=1
namespace	large object depending on ||| oci-lob	count=1
function_name	extended dom class ||| class	count=1
function_name	from the current mysql ||| mysql	count=1
namespace	in either ||| function	count=1
function_name	the given [function_name] definition ||| [function_name] content	count=1
return	prepared statement ||| sqlite3result	count=1
function	deletes a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	best ||| best	count=1
function_name	phar::startbuffering() method can provide ||| start buffering	count=1
arg_pair	a query ||| resource $conn string $sql	count=1
arg_pair	register a rpc ||| string $method	count=1
function_name	all data ||| buffer	count=1
function_name	the word spacing ||| word space	count=2
function_name	vendor specific binary ||| vendor	count=1
function_name	siblings ||| siblings	count=1
function_name	attributes of an entry ||| attributes	count=2
function_name	or context ||| context get params	count=1
function_name	[function_name_1] harudestination instance ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] name from ||| [function_name_1] [function_name_2]	count=1
function_name	establish service monitoring ||| service	count=1
arg_pair	specified database ||| string $database	count=1
function_name	path as clipping ||| pdf clip	count=1
function_name	the type ||| type	count=5
return	of the route ||| string	count=1
return	exception ||| string	count=1
function_name	image delay ||| image delay	count=2
function_name	function removes ||| remove	count=1
function_name	stored bytecodes and ||| bcompiler write	count=1
namespace	effective ||| yaf_router	count=1
function_name	minimum client ||| sybase min client	count=2
function_name	clears ||| readline clear	count=1
namespace	true and ||| function	count=1
function_name	[function_name_1] of ||| [function_name_1] stats [function_name_2]	count=1
function_name	sample [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the current font size ||| get current font size	count=1
function_name	gets the session cookie ||| session get cookie	count=1
function_name	slob ||| slob	count=3
function_name	total cache [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	if it ||| bool	count=2
function_name	compare ||| compare	count=1
namespace	a class ||| reflectionclass	count=4
arg_pair	callback function to ||| callable $callback	count=2
function_name	network from a ||| fann create from file	count=1
namespace	for ||| mongocursor	count=1
function_name	term to start at ||| terms lower bound	count=1
function_name	a response for ||| handle response	count=1
return	it shouldnt need to ||| mongoid	count=1
return	character ||| bool	count=1
function_name	custom encoding ||| encoding set char	count=1
function_name	variant and ||| variant	count=1
namespace	frame ||| ktaglib_id3v2_frame	count=2
function_name	type of ||| db2 field type	count=2
function_name	to use ||| use	count=3
return	path ||| bool	count=1
arg_pair	the given set ||| resource $conn_identifier	count=1
function_name	the compression ||| set compression	count=1
function_name	sets authentication [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	the [function_name] ||| [function_name]	count=15
namespace	base character ||| intlchar	count=1
function_name	uid ||| uid	count=1
arg_pair	serializes the passed variables ||| resource $packet_id	count=1
function_name	or ||| fbsql database	count=2
function_name	setting ||| cache expire	count=2
function_name	phrase fields pf and ||| phrase fields	count=1
function_name	an ellipse on ||| ellipse	count=1
arg_pair	given message ||| resource $imap_stream	count=1
namespace	front of the ||| eventbuffer	count=1
function_name	size ||| ftp size	count=2
function_name	some amount ||| immortal	count=1
function_name	neural network ||| fann create from	count=1
function_name	is ||| fann	count=2
function_name	libevent and [function_name] ||| [function_name]	count=1
arg_pair	with the key by ||| string $key	count=1
arg_pair	as data from buf ||| resource $lob_identifier string $buf	count=1
arg_pair	keys and ||| array $keys	count=1
arg_pair	the ||| int $cascade_min_out_epochs	count=1
function_name	gets a record ||| get record	count=3
return	event loop ||| void	count=1
namespace	must ||| evloop	count=1
function_name	the horizontal [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	the array iterator that ||| iterator class	count=1
function_name	the [function_name] os ||| get [function_name]	count=1
function	[function_name_1] link annotation ||| [function_name_1] [arg_pair_2]	count=1
function_name	reads up ||| read	count=1
function_name	scm of the ||| win32 set	count=1
function_name	[function_name_1] word ||| [function_name_2] [function_name_1]	count=2
namespace	first recursiveiteratoriterator::rewind() ||| recursiveiteratoriterator	count=1
arg_pair	response to a ||| string $url int $format	count=1
return	statement and ||| sqlite3result	count=1
function_name	rolls back a transaction ||| ibase rollback	count=1
function_name	block returns query ||| get	count=1
function_name	error string ||| bzerrstr	count=1
arg_pair	by the ||| int $estimated	count=1
function_name	current key ||| key	count=2
return	specified as a ||| mixed	count=2
function_name	minimum document frequency ||| cache min default frequency	count=1
function_name	sets where ||| set	count=1
arg_pair	input for fields in ||| string $input string $delimiter	count=1
function_name	[function_name_1] block ||| [function_name_2] [function_name_1]	count=1
function_name	event [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	point ||| resource $psdoc float $x	count=1
arg_pair	of service needed ||| int $service_level_option	count=1
function_name	common shells ||| glob	count=1
arg_pair	subject for matches ||| mixed $subject int $limit	count=1
namespace	write an image ||| imagick	count=1
arg_pair	performs a ||| string $query resource $conn_identifier	count=1
function_name	given stream to buffer ||| stream	count=1
namespace	the end of ||| eventbuffer	count=1
function_name	[function_name_1] or context ||| [function_name_1] [function_name_2]	count=4
function	[function_name_1] returns false ||| [function_name_1] mode [arg_pair_2]	count=6
function_name	domain ||| domain	count=1
namespace	a callback [namespace] ob_start() ||| [namespace]	count=1
function_name	to an uri ||| to uri	count=1
namespace	manifest ||| pharfileinfo	count=2
arg_pair	in response to a ||| string $url int $format	count=1
function_name	if no [function_name] ||| [function_name] clear error	count=2
return	bound to ||| bool	count=1
function_name	set ||| set	count=22
function_name	returns string describing ||| get	count=1
function_name	like radius requests each ||| radius	count=1
function_name	upper bound term ||| upper bound	count=4
arg_pair	functions returns the input ||| int $pad_length	count=1
arg_pair	preprocesses text for ||| string $text	count=1
return	host name of ||| string	count=1
namespace	maxdb_options() ||| function	count=1
namespace	syncreaderwriter ||| syncreaderwriter	count=2
function_name	ldap pagination ||| ldap	count=1
function_name	an object ||| fetch object	count=1
function_name	the size and ||| size	count=1
namespace	type of connection in ||| function	count=1
return	all contiguous [return] occupying ||| [return]	count=1
arg_pair	a change ||| resource $proxy	count=1
function_name	null [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] without ||| [function_name] get	count=1
namespace	array by ||| function	count=1
arg_pair	pointer apply ||| resource $destfp	count=1
arg_pair	acts very much like ||| string $servername string $username	count=2
function_name	the base type name ||| field type	count=1
namespace	gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| gearmanclient	count=1
function_name	db2_connect() and returns ||| db2	count=1
function_name	resets the connection ||| pg connection reset	count=3
arg_pair	during ||| resource $data	count=1
arg_pair	the specified result identifier ||| resource $result_id	count=1
arg_pair	of characters ||| int $width	count=1
return	file and ||| resource	count=1
function_name	append ||| append body	count=2
function_name	an image with ||| image	count=1
namespace	phar file ||| phar	count=1
arg_pair	specified object_id ||| string $object_id	count=1
function_name	the intersection ||| array uintersect assoc	count=1
arg_pair	variable can be called ||| mixed $var bool $syntax_only	count=1
function_name	supported key ||| get key	count=1
function_name	maps to facet ||| set facet date start	count=1
function_name	motion [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	the ||| resource $psdoc	count=1
namespace	be represented with ||| pharfileinfo	count=1
function_name	the minimum [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	von einer mime kopfzeile ||| iconv mime encode	count=1
function_name	[function_name_1] property value ||| [function_name_1] [function_name_2]	count=1
function_name	server host name ||| mysql get host	count=1
function	the file [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	variable in user cache ||| wincache ucache set	count=1
function_name	data for the last ||| last	count=1
function_name	the nsapi response ||| nsapi response	count=2
function_name	stream ||| stream socket	count=1
arg_pair	as the ||| string $error_msg	count=1
function_name	json string to its ||| json	count=1
arg_pair	correspond ||| int $row	count=1
function_name	audio [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	the md5 hash ||| md5	count=1
function_name	url string ||| url	count=1
function_name	curl handles ||| curl multi	count=1
function_name	returns event ||| get	count=1
namespace	set of tasks ||| gearmanclient	count=1
arg_pair	the mailboxes ||| string $ref	count=1
function_name	any file or url ||| file	count=1
function_name	the diff information ||| diff	count=2
arg_pair	the callback function to ||| callable $callback	count=2
namespace	sec field ||| mongotimestamp	count=1
arg_pair	that an exact ||| imagick $imagick	count=1
function	[function_name_1] of str ||| [function_name_1] string $str [arg_pair_2]	count=1
arg_pair	|| b ||| array $b	count=2
namespace	the error ||| function	count=2
namespace	object referenced still exists ||| weakref	count=1
function_name	query ||| ingres	count=1
function_name	ingres [function_name_2] ||| [function_name_1] next [function_name_2]	count=1
arg_pair	subject for matches to ||| int $limit	count=1
function_name	fit the width ||| set fit	count=1
function_name	csr certificate signing request ||| csr	count=1
function_name	minimum ||| terms min count	count=1
return	the file position ||| int	count=1
function_name	[function_name_1] file specified ||| [function_name_1] [function_name_2]	count=4
namespace	outline is displayed for ||| haruoutline	count=1
function_name	proxy [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] of a ||| result [function_name_1] [arg_pair_2]	count=3
function_name	taking into account ||| real	count=1
function_name	adds a child element ||| add	count=1
arg_pair	sets an option on ||| int $option	count=1
function_name	task [function_name] ||| [function_name] callback	count=1
function_name	number of ||| get cascade num	count=1
function_name	similar to mssql_fetch_array() with ||| mssql	count=1
function_name	validates ||| validate	count=1
function_name	scale data in output ||| scale output	count=1
function_name	error message [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	containing the oid ||| oid	count=1
function_name	order number ||| yp order	count=1
function_name	number of activation steepnesses ||| fann get cascade activation steepnesses count	count=1
function_name	closes the request handle ||| close request	count=1
arg_pair	given number of characters ||| int $width	count=1
arg_pair	quoting style appropriate ||| int $parameter_type	count=1
function_name	type number or boolean ||| get number	count=1
namespace	call ||| gearmanclient	count=1
function_name	as a ||| fetch	count=1
arg_pair	a file ||| string $pathname	count=1
function_name	diff containing differences between ||| diff	count=1
function	[function_name_1] [arg_pair_2] subject to various options ||| [function_name_1] [arg_pair_2] string $optlist	count=1
arg_pair	specified by mask ||| resource $relation int $mask	count=1
function_name	finalizes current text object ||| text	count=1
return	the server to return ||| bool	count=2
function_name	fetches using oci_fetch() ||| oci define by name	count=1
return	returns the host ||| string	count=1
function_name	[function_name_1] value ||| [function_name_2] [function_name_1]	count=10
function_name	main filter [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	comments and [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	gearmanclient::addtaskhighbackground() or ||| gearmanclient	count=1
function_name	name for ||| name	count=1
function_name	[function_name_1] patch ||| [function_name_2] [function_name_1]	count=10
function_name	compression ||| set compression	count=1
arg_pair	to maxlength bytes ||| resource $handle int $maxlength	count=1
function	traverse over [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	be obtained via recursivearrayiterator::getchildren() ||| recursivearrayiterator	count=1
arg_pair	by dn which represents ||| resource $privkey	count=1
function_name	sets the ||| fann set cascade	count=1
function_name	creates a new instance ||| create document	count=1
function_name	given ||| fetch	count=1
return	only used by ||| mongoid	count=1
function_name	oid of ||| oid	count=1
function_name	the increase [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	a database ||| dba	count=1
function_name	subset of [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	checks if the ||| is	count=1
arg_pair	identical to ||| string $encoding	count=1
function_name	rolls back a transaction ||| rollback	count=1
arg_pair	object is ||| object $object string $class_name	count=1
function_name	return icu ||| intl	count=1
namespace	get the size of ||| function	count=1
namespace	the current node ||| splpriorityqueue	count=1
function_name	get a mime ||| mime	count=1
return	array ||| bool	count=1
function_name	the minimum [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	information about the client ||| sqlsrv client info	count=1
function_name	bytes ||| size	count=1
arg_pair	a key-value pair into ||| mixed $keys string $value	count=1
return	the connection to ||| bool	count=1
function_name	image disposal method ||| image dispose	count=2
arg_pair	one row of data ||| resource $result_identifier	count=1
function_name	[function_name_1] control point ||| [function_name_2] [function_name_1]	count=2
function_name	a stride value ||| stride for	count=1
arg_pair	two-dimensional ||| int $maxrows	count=1
namespace	in memory ||| function	count=1
function_name	by ||| openssl	count=4
function_name	[function_name_1] request handle ||| [function_name_2] [function_name_1]	count=1
function_name	current page ||| current page	count=2
function_name	x and y resolution ||| resolution	count=1
arg_pair	specified data using ||| string $data	count=1
function_name	returns ||| get terms	count=1
namespace	exports the arrayobject ||| arrayobject	count=1
function_name	stride value ||| stride for	count=1
function_name	database [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	be used to trace ||| maxdb	count=1
return	string for the ||| string	count=1
function_name	session leader ||| setsid	count=1
function_name	and region ||| region by name	count=1
function_name	com_* [function_name] send ||| simple [function_name] handle response	count=1
function_name	type number ||| get number	count=1
namespace	entry using the entry ||| ziparchive	count=2
arg_pair	sends the specified ||| int $flags	count=1
namespace	the same ||| function	count=1
namespace	phar archives contain ||| phar	count=1
namespace	not be ||| pharfileinfo	count=1
arg_pair	the closest possible ||| int $green int $blue	count=1
function_name	matches ||| opaque paint image	count=2
function_name	only be ||| metadata	count=1
function_name	is opened or not ||| set opened	count=1
function_name	thread [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	custom loop calling eio_poll() ||| eio nreqs	count=1
function	sets blocking [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	from ||| apc	count=1
arg_pair	[arg_pair_1] result ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	except that fgetcsv() parses ||| fgetcsv	count=1
namespace	using nonzero winding ||| harupage	count=1
function_name	[function_name] of ||| mb ereg search [function_name]	count=1
arg_pair	to the ||| resource $result	count=2
return	sqlsrv_begin_transaction() and [return] ||| [return]	count=1
arg_pair	the principal ||| string $principal string $password	count=1
arg_pair	specific cipher / mode ||| string $cipher string $mode	count=1
return	and [return] ||| [return]	count=4
function	[function_name_1] script as ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] function ||| [function_name_2] [function_name_1]	count=17
function_name	field type ||| field type	count=1
return	no more results ||| bool	count=1
function_name	[function_name_1] [function_name_2] activation steepnesses array ||| [function_name_1] [function_name_2]	count=1
function_name	factor used ||| factor	count=2
function_name	each virtual server ||| server by	count=1
arg_pair	a named virtual file ||| resource $pdfdoc string $filename	count=1
arg_pair	up or down ||| int $width int $height	count=1
function_name	the border [function_name_2] ||| [function_name_1] [function_name_2]	count=7
arg_pair	of ||| int $imagetype	count=1
function	[function_name_1] data ||| [arg_pair_2] [function_name_1]	count=4
function_name	to the ||| add	count=1
namespace	code point has the ||| intlchar	count=1
function_name	similar ||| similar	count=1
arg_pair	the ||| resource $id	count=3
function_name	deletes a named ||| delete pvf	count=1
function_name	get unpacked ||| get unpacked	count=1
function_name	the namespace ||| lookup namespace	count=1
function_name	[function_name_1] [function_name_2] ||| ziparchive bool [function_name_1] [function_name_2] index int $index string	count=2
function_name	represented with existing ||| metadata	count=1
return	returns the result ||| array	count=1
function_name	of days [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	blob length ||| blob	count=1
function	[function_name_1] at the ||| [function_name_1] [arg_pair_2]	count=2
function_name	affected [function_name] by the ||| msql affected [function_name]	count=1
function_name	used by ||| set state	count=1
function_name	fetches ||| fetch array	count=2
return	a ||| int	count=3
function_name	a mime ||| mime	count=1
arg_pair	access the system v ||| int $auto_release	count=1
function_name	the page ||| page	count=1
arg_pair	such that an exact ||| imagick $imagick	count=1
function	add [arg_pair_2] ||| [function_name_1] to personal [arg_pair_2]	count=1
function_name	representation ||| serialize	count=1
return	an error message ||| string	count=1
function_name	external entity ||| external entity	count=1
arg_pair	a ||| string $destination	count=1
return	the classname ||| void	count=1
function_name	on training ||| fann set	count=1
arg_pair	the given source string ||| int $flags	count=1
arg_pair	specified by the object_id ||| int $timeout	count=1
function_name	passed in [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	represented with ||| metadata	count=1
function	status [arg_pair_2] ||| result [function_name_1] [arg_pair_2]	count=2
function_name	request token secret ||| request token	count=1
function_name	cursor to the next ||| next	count=1
function_name	a singleton ||| construct	count=1
return	of a socket ||| int	count=1
function_name	font [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	the gray value ||| resource $psdoc float $gray	count=1
function_name	the length ||| len	count=3
function_name	added with ||| run	count=1
function_name	of the iv belonging ||| mcrypt get iv	count=1
arg_pair	mail headers [arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
return	string to ||| string	count=1
namespace	the domnodelist ||| domnodelist	count=1
function_name	that job [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	context-triggered piecewise hashing and ||| ssdeep fuzzy	count=1
function_name	the width ||| get width	count=1
function_name	the ssl_cipher_description ssl api ||| ssl get	count=1
function_name	for the ||| set	count=1
arg_pair	parses key and ||| string $passphrase	count=1
function_name	in the given postgresql ||| pg	count=1
function_name	adds new attribute node ||| attribute node	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| function array imap sort [arg_pair_2] [arg_pair_1]	count=2
function	the numbering [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	connection type corresponding ||| geoip id by name	count=1
function_name	sql aggregate function for ||| create aggregate	count=1
namespace	appearance of the page ||| harudestination	count=3
function_name	active ||| sybase select	count=1
return	used to ||| bool	count=5
function_name	[function_name_1] of the ||| [function_name_2] [function_name_1]	count=6
arg_pair	the [arg_pair] including ||| [arg_pair]	count=1
function_name	the activation ||| fann get activation	count=2
function_name	sets the weight multiplier ||| fann set cascade weight multiplier	count=1
function_name	sets the initial size ||| set	count=1
function_name	[function_name_1] result ||| [function_name_2] [function_name_1]	count=5
function_name	by the last ||| errno	count=1
function_name	new float range ||| range	count=1
function_name	[function_name_1] page ||| [function_name_2] [function_name_1]	count=9
arg_pair	type format ||| int $width	count=1
function_name	query multiple queries ||| cubrid query	count=1
arg_pair	within the ||| float $upperrighty	count=1
namespace	this function returns a ||| function	count=4
return	a node specified by ||| domnode	count=1
function_name	[function_name_1] bytea ||| [function_name_2] [function_name_1]	count=1
function_name	the base type ||| field type	count=1
function_name	[function_name_1] output stagnation ||| [function_name_1] [function_name_2]	count=1
arg_pair	[arg_pair] given timer ||| [arg_pair]	count=3
return	current path ||| bool	count=1
function_name	input/output ||| tidy	count=1
function_name	a string from utf-8 ||| utf8	count=1
function_name	[function_name_1] siblings ||| [function_name_1] [function_name_2]	count=1
arg_pair	sql statements ||| int $argument_count	count=1
function_name	scales the outputs ||| fann scale	count=1
arg_pair	or a list ||| string $fk_owner	count=1
function_name	decompresses ||| decompress	count=1
function_name	epochs the input connections ||| cand epochs	count=2
namespace	result set object ||| sqlite3stmt	count=1
namespace	function converts the ||| function	count=1
function	creating a [arg_pair_2] ||| [function_name_1] string $progid [arg_pair_2]	count=1
function	add [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	control point ||| gupnp control point	count=4
return	add more content to ||| bool	count=1
function_name	error message [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	the specified bevent ||| resource $bevent	count=1
function_name	stub ||| set stub	count=1
namespace	represented with existing ||| pharfileinfo	count=1
namespace	the properties ||| reflectionproperty	count=1
arg_pair	an http ||| eventhttprequest $req int $type	count=1
function_name	recieved ||| gupnp service proxy add notify	count=2
arg_pair	region of the ||| int $x	count=1
arg_pair	the specified key ||| resource $handle	count=1
function_name	returns ||| dbase get	count=1
arg_pair	the ||| mixed $value int $expiration	count=1
function_name	[function_name_1] a pdf ||| [function_name_2] [function_name_1]	count=4
arg_pair	hostname ||| string $hostname	count=3
function_name	problem as ||| problem	count=1
namespace	as a member ||| domelement	count=1
arg_pair	the result ||| resource $result int $type	count=1
return	the current ||| array	count=1
namespace	path using nonzero winding ||| harupage	count=1
arg_pair	direction by alpha and ||| float $alpha	count=1
function_name	array iterator that ||| iterator	count=1
arg_pair	old parameter ||| string $key int $old	count=1
arg_pair	specified by parameter pos ||| resource $id int $pos	count=1
arg_pair	of an ||| int $width int $height	count=1
function	[function_name_1] link annotation ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	the ||| mixed $value int $isname	count=1
function_name	stores ||| to file	count=1
arg_pair	into a two-dimensional array ||| int $skip int $maxrows	count=1
arg_pair	non-blocking mode on a ||| resource $stream bool $mode	count=1
function_name	the maximum supported keysize ||| module get algo key size	count=1
namespace	job servers ||| gearmanclient	count=1
arg_pair	list of servers ||| string $host	count=1
function_name	is ||| isbase	count=1
function_name	glo instance ||| glo	count=1
function_name	printable string ||| printable encode	count=1
arg_pair	part or ||| resource $imap_stream mixed $file	count=1
function_name	reads data from ||| read	count=1
function_name	highlighted version of the ||| highlight file	count=1
namespace	[namespace] await ||| [namespace]	count=1
function_name	give each connection a ||| fann randomize weights	count=1
function_name	the id3 tag ||| id3 get tag	count=1
arg_pair	a b where gcd ||| gmp $b	count=1
function_name	reply ||| send reply	count=1
function_name	only used by ||| set state	count=1
function_name	[function_name_1] point with ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] all ||| [function_name_2] [function_name_1]	count=2
arg_pair	given source ||| int $flags	count=1
arg_pair	format ||| int $format int $width	count=1
function_name	directory [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	be used to ||| function	count=1
function_name	retrieves information about ||| info	count=1
function_name	an id3 ||| id3	count=2
function_name	continuing the event loop ||| loop	count=1
function_name	a valid socket resource ||| socket	count=1
function_name	returns ||| get header	count=1
arg_pair	current state of ||| int $textflow	count=1
function_name	persistent id ||| persistent id	count=2
arg_pair	correspond to ||| array $ctorparams	count=1
function_name	earliest hook in ||| router startup	count=1
function_name	in input ||| input	count=1
arg_pair	str with all ||| string $str string $encoding	count=1
function_name	the [function_name_2] ||| [function_name_1] [function_name_2] activation steepnesses resource $ann	count=1
function_name	to facet ||| facet date	count=1
namespace	[namespace] maximum length ||| [namespace]	count=2
function_name	sarprop [function_name_2] ||| [function_name_1] [function_name_2]	count=11
namespace	fetch an snmp object ||| snmp	count=1
function_name	minimum message severity ||| min message severity	count=1
arg_pair	server thats associated with ||| string $database_name resource $link_identifier	count=1
function_name	multiple curl handles asynchronously ||| curl multi init	count=1
return	to set appropriate ||| void	count=1
function_name	starts a ||| pdf begin	count=2
arg_pair	fields if a valid ||| string $fieldvalue	count=1
function_name	is a convenience ||| fdf header	count=1
arg_pair	protocol as ||| string $service string $protocol	count=1
function_name	blob/clob by executing ||| lob	count=1
function_name	places an image or ||| pdf fit image	count=1
arg_pair	the given ||| mixed $value int $isname	count=1
arg_pair	[arg_pair_1] database connection ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	event ||| event	count=5
arg_pair	or the closest ||| int $green	count=1
function_name	merges the elements of ||| merge	count=2
function_name	extracts a region ||| cropimage	count=1
function_name	of ||| bzerrstr	count=1
function_name	a transaction ||| transaction	count=1
arg_pair	acts very ||| string $servername string $username	count=1
arg_pair	to memcached::replace() ||| mixed $value int $expiration	count=1
function_name	the [function_name] of this ||| get [function_name]	count=1
function_name	from a [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function	oracle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	opened ||| enc	count=3
function_name	stored bytecodes ||| bcompiler	count=1
arg_pair	mailbox ||| resource $imap_stream	count=1
arg_pair	a new mailbox on ||| resource $imap_stream string $mailbox	count=1
function_name	decay ||| decay	count=3
arg_pair	[arg_pair] the right_operand ||| [arg_pair]	count=3
return	code point ||| bool	count=1
function_name	http output character ||| http output	count=2
function_name	imported pdf ||| pdf fit pdi	count=2
function_name	active [function_name] within the ||| get [function_name]	count=1
function_name	the end ||| add	count=1
function_name	delete an ||| drop	count=1
namespace	this function url ||| function	count=1
function_name	range/wildcard/fuzzy/prefix queries ||| multi term	count=1
function_name	train ||| input train data	count=1
function	[function_name_1] for a ||| [function_name_1] enum [arg_pair_2]	count=4
arg_pair	the database ||| resource $link_identifier string $database	count=1
namespace	if ||| splobjectstorage	count=1
function_name	binary [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	scale [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] type of ||| [function_name_2] [function_name_1]	count=2
function_name	activation steepnesses in ||| cascade activation steepnesses count	count=1
arg_pair	assoc_array ||| int $options	count=1
function	[function_name_1] the end ||| [function_name_1] fetch assoc [arg_pair_2]	count=1
arg_pair	by alpha ||| resource $p float $alpha	count=1
function_name	the starting line number ||| start line	count=1
function_name	the activation ||| activation	count=8
function_name	is effective in the ||| current	count=1
function_name	function as event handler ||| ibase set event handler	count=1
namespace	after remaining ||| mongocursor	count=1
function	[function_name_1] the coordinate ||| [arg_pair_2] [function_name_1]	count=1
function_name	underlying input ||| input	count=1
arg_pair	named by outfilename ||| string $outfilename	count=1
function_name	fdf [function_name_2] ||| [function_name_1] set [function_name_2]	count=1
function_name	class to be ||| class	count=1
function_name	the vertical descent ||| descent	count=1
function_name	check with ||| check	count=1
function_name	image shadow ||| shadow image	count=2
function_name	data in input vector ||| input	count=2
arg_pair	a ||| mixed $connection string $gtrid	count=2
arg_pair	the given [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=7
arg_pair	iteration after the ||| int $timeout	count=1
return	of the input buffer ||| bool	count=1
arg_pair	subsequent transformations ||| string $name	count=1
namespace	and host checks ||| oauth	count=1
return	restarts the periodic ||| void	count=1
arg_pair	delimiter ||| string $delimiter string $null_as	count=3
namespace	existing item ||| memcached	count=1
function_name	output [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	ftp server and ||| ftp get	count=1
function_name	reply that uses transfer-encoding ||| reply	count=1
function_name	statistics for each channel ||| channel statistics	count=1
function_name	[function_name_1] session leader ||| [function_name_2] [function_name_1]	count=1
function_name	matches color ||| paint transparent	count=1
function_name	this should ||| construct	count=1
namespace	the exception was thrown ||| solrserverexception	count=1
function_name	the module [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	write operations [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
namespace	each word in ||| function	count=1
function_name	request a [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	a normalized ||| normalized	count=1
arg_pair	given key ||| int $max_acquire	count=1
function_name	glo instance and saves ||| glo	count=1
arg_pair	text ||| resource $pdfdoc string $text	count=2
function_name	set ||| enchant broker set	count=1
return	statement ||| sqlite3result	count=1
arg_pair	specified offset ||| int $offset int $initial_value	count=1
function_name	a string from utf-8 ||| pdf utf8	count=1
arg_pair	and returns a resource ||| string $separator	count=1
function_name	new paradox object ||| px new	count=2
arg_pair	for an enumerated ||| mixed $codepoint int $property	count=1
arg_pair	part or ||| mixed $file	count=1
function_name	returns the entry ||| get	count=1
function_name	the default external entity ||| external entity	count=1
function	escapes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	encoding ||| encoding set	count=1
arg_pair	a socket ||| eventbase $base mixed $socket	count=1
arg_pair	length bytes from fd ||| mixed $fd int $length	count=1
function_name	each color component ||| component	count=1
namespace	function but a ||| function	count=1
function_name	all existing cubrid ||| cubrid	count=1
function_name	any file ||| file	count=1
namespace	xsltprocessor ||| xsltprocessor	count=2
return	end of ||| bool	count=2
arg_pair	given message sequence ||| resource $imap_stream int $msg_number	count=1
function_name	of next ||| cubrid next	count=1
function	[function_name_1] file from ||| [function_name_1] [arg_pair_2]	count=3
function_name	[function_name_1] entity reference ||| [function_name_1] [function_name_2] handler	count=3
function_name	number [function_name_2] ||| [function_name_2] get current line [function_name_1]	count=1
function_name	from radian to degrees ||| rad2deg	count=1
function_name	group results ||| group	count=1
function_name	opens ||| open	count=9
namespace	shouldnt need to ||| mongoid	count=1
function_name	without waiting for the ||| pg send query	count=1
function_name	entity [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	size of the ||| int $level	count=1
function_name	duplicates ||| eio dup2	count=1
return	path [return] the ||| [return]	count=1
function_name	and sets the top ||| set	count=1
function_name	postgresql ||| pg fetch	count=1
function_name	[function_name_1] current fbsql ||| [function_name_2] [function_name_1]	count=1
arg_pair	of servers that ||| string $host int $port	count=1
namespace	a ||| gearmanclient	count=2
function_name	relative location of ||| relative location	count=2
function_name	[function_name_1] access list ||| [function_name_1] [function_name_2]	count=3
return	calculates and returns ||| array	count=1
function_name	determines the maximum number ||| get cascade max	count=1
function	[function_name_1] a ||| [function_name_1] extended stats [arg_pair_2]	count=1
function_name	translated into these entities ||| htmlentities	count=1
function_name	[function_name_1] quality ||| [function_name_2] [function_name_1]	count=2
function_name	breaker ||| breaker	count=1
function_name	screenshot ||| imagegrabscreen	count=1
function	[function_name_1] original ||| [function_name_1] alias string $original [arg_pair_2]	count=4
return	returns an numeric array ||| array	count=1
function_name	file ||| file info	count=2
function_name	reply ||| reply	count=1
function_name	descriptor allocated by oci_new_descriptor() ||| descriptor	count=1
function_name	the opened [function_name_2] ||| [function_name_1] block [function_name_2]	count=1
arg_pair	during training ||| resource $data	count=1
namespace	the ||| splfileinfo	count=1
namespace	set of monitored events ||| event	count=1
function_name	binds a php ||| bind param	count=1
return	gets a reflectionmethod for ||| reflectionmethod	count=1
function_name	last ||| errno	count=2
function_name	activation ||| cascade activation	count=1
function_name	the client and specified ||| client	count=1
function_name	stops a ||| stop	count=1
function_name	gives you the number ||| num fields	count=1
namespace	and as ||| gmagick	count=1
namespace	a ||| mongodate	count=1
function_name	to the next ||| to next	count=1
namespace	the end ||| function	count=1
function_name	protection ||| protection	count=1
arg_pair	index of the color ||| int $green int $blue	count=1
function_name	is a ||| isbase	count=1
function_name	the most ||| last	count=1
function_name	an imported pdf ||| pdf fit pdi	count=2
function_name	last db++ operation ||| dbplus errno	count=1
function_name	[function_name] associated ||| get [function_name]	count=1
arg_pair	input string ||| int $pad_length	count=1
function_name	object ||| open	count=1
namespace	the error string of ||| function	count=1
return	resource suitable ||| resource	count=1
namespace	evstat watcher object ||| evstat	count=1
function_name	activation steepness for neuron ||| fann get activation steepness	count=1
function_name	with the connection ||| fbsql database	count=1
function_name	returns a quoted printable ||| quoted printable encode	count=1
function_name	be called to prepend ||| prepend	count=1
return	an hexadecimal [return] ||| [return]	count=1
function_name	fetch dns resource records ||| dns get record	count=1
function_name	copy or repository ||| svn	count=1
function_name	to the end ||| add buffer	count=1
return	current ||| bool	count=5
namespace	the current boost ||| solrinputdocument	count=1
arg_pair	a ||| string $callback	count=1
function_name	the column names ||| cubrid column names	count=2
arg_pair	to new mailbox ||| resource $imap_stream	count=1
function_name	computes ||| array udiff	count=1
function_name	[function_name_1] real ||| [function_name_2] [function_name_1]	count=1
function_name	to get the terms ||| terms	count=1
function_name	in the [function_name] ||| [function_name]	count=1
function_name	curl version ||| curl version	count=2
function_name	[function_name] extension ||| [function_name] import stream	count=3
function_name	algorithms otherwise it returns ||| algorithm	count=1
function_name	[function_name_1] uri ||| int transform [function_name_1] [function_name_2]	count=1
function_name	of the query ||| escape query	count=1
arg_pair	mailbox see imap_open() for ||| resource $imap_stream	count=1
function_name	current ssl connection ||| ssl	count=2
function_name	an immediate neighbor ||| floodfill image	count=3
function_name	for the referenced file ||| file info	count=1
arg_pair	positive number determining the ||| resource $ann	count=1
return	the end of ||| int	count=1
return	creates classes from the ||| bool	count=2
function	[function_name_1] variable to ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	of a ||| resource $result int $type	count=1
function_name	move all data from ||| buffer	count=1
function_name	non-empty language tag ||| enchant broker	count=1
return	count [return] ||| [return]	count=2
return	returns a result set ||| sqlite3result	count=1
function_name	adds all ||| add all	count=2
function_name	with type number or ||| get number	count=1
function_name	parameter for the socket ||| socket	count=1
arg_pair	in the given image ||| resource $image	count=1
function_name	returns the parent node ||| get parent	count=1
function_name	minimum client [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	query timeout ||| query timeout	count=2
function_name	represents ||| cubrid	count=1
arg_pair	properties that correspond to ||| string $class_name	count=1
function_name	the current fill ||| fill	count=1
namespace	cumulative distribution [namespace] ||| [namespace]	count=3
function_name	[function_name_1] xml ||| [function_name_2] get [function_name_1]	count=4
function_name	[function_name] pixels ||| [function_name] pixels	count=1
arg_pair	preprocesses text ||| string $text	count=1
arg_pair	from the associative or ||| int $enc_type	count=1
function_name	whether the specified code ||| isbase	count=1
function_name	to a specific row ||| db2 fetch	count=1
arg_pair	plaintext with the ||| string $plaintext	count=1
arg_pair	the given color pair ||| int $pair int $fg	count=1
function_name	vendor specific ||| vendor	count=3
function_name	[function_name] responses from ||| [function_name]	count=3
arg_pair	plaintext with the keys ||| string $plaintext	count=1
function_name	required ||| required	count=1
function	upper limit [function_name_1] [arg_pair_2] basis ||| [function_name_1] [arg_pair_2]	count=2
function_name	row and ||| mysql fetch	count=1
arg_pair	to ||| array $params string $types	count=2
namespace	tar/zip archive ||| phardata	count=3
function_name	mime charset string ||| preferred mime name	count=1
arg_pair	quality of service needed ||| int $service_level_option mixed $option_value	count=1
arg_pair	row of statement is ||| mixed $field	count=1
arg_pair	a directory handle ||| string $path resource $context	count=1
function_name	send ||| send	count=1
arg_pair	a rpc ||| string $method	count=1
function_name	user-defined ||| get arg	count=2
namespace	quickhashintset ||| quickhashintset	count=1
function_name	running the tasks ||| tasks	count=1
return	the server to ||| bool	count=2
function_name	a convolution ||| edgeimage	count=1
function	[function_name_1] a result ||| [arg_pair_2] [function_name_1]	count=4
function_name	icc profile and prepares ||| load iccprofile	count=1
namespace	point is a ||| intlchar	count=1
arg_pair	[arg_pair] including ||| [arg_pair]	count=6
arg_pair	a ||| resource $pxdoc	count=1
function_name	line from the current ||| pdf	count=1
arg_pair	part of ||| int $ndocs	count=2
return	and the database ||| bool	count=1
function_name	sends an exception ||| exception	count=1
function_name	left and right image ||| image	count=1
function_name	handling [function_name] in ||| get [function_name]	count=1
function_name	a ||| entity reference	count=1
function_name	text transformation matrix ||| get text matrix	count=2
function_name	phar::startbuffering() ||| buffering	count=1
function_name	url-encoded [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	a result identifier produced ||| result	count=1
function	[function_name_1] [arg_pair_2] ||| tokyotyrantquery mixed [function_name_1] [arg_pair_2]	count=2
function	scale of the ||| scale resource $result_id	count=1
function_name	all ||| match all	count=2
function_name	oracle pl/sql ||| oci	count=1
function_name	[function_name_1] page of ||| [function_name_1] [function_name_2]	count=2
arg_pair	of a variable ||| mixed $var	count=1
function_name	[function_name_1] border ||| [function_name_2] [function_name_1]	count=12
function_name	maximum number ||| fann get cascade max cand	count=1
function_name	line [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	page to ||| page	count=1
function_name	sets the [function_name_2] ||| [function_name_1] [function_name_2]	count=70
namespace	to searchd runs a ||| sphinxclient	count=1
function_name	integer solrquery::facet_sort_index or solrquery::facet_sort_count) ||| facet sort	count=1
function_name	minimum error severity level ||| min error severity	count=1
function_name	layer definition ||| pdf define layer	count=2
function_name	the actual printed length ||| field prtlen	count=1
function_name	lower bound ||| lower bound	count=2
function_name	[function_name_1] byte index ||| [function_name_1] [function_name_2]	count=3
function_name	object to bson ||| bson	count=1
arg_pair	specified entry ||| resource $handle	count=1
arg_pair	a magnitude / phase ||| string $complement string $magnitude	count=1
namespace	returns the current node ||| splpriorityqueue	count=1
function_name	input buffer without ||| buffer	count=1
function_name	opens ||| pdf open	count=1
function_name	cancels ||| eio cancel	count=1
function_name	deletes a textflow and ||| delete textflow	count=1
function_name	set ||| run	count=1
function_name	the specified events is ||| ibase wait event	count=1
function_name	function returns at ||| get	count=1
return	object ||| int	count=1
function_name	of a color image ||| image	count=2
function_name	cyrus imap ||| cyrus	count=1
arg_pair	from real0 and ||| array $real0	count=1
namespace	positioned on an element ||| xmlreader	count=1
function_name	sets the top position ||| set	count=1
function_name	generates a url-encoded query ||| http build query	count=1
function_name	runs [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	the first [function_name_2] ||| [function_name_2] [function_name_1]	count=5
return	in a designated ||| int	count=1
arg_pair	value [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	snippets ||| set highlight	count=1
return	a given ||| bool	count=1
namespace	new entry ||| quickhashintset	count=1
function_name	set a [function_name_2] ||| [function_name_1] start [function_name_2]	count=1
function	frontend/backend communication [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	and event status callbacks ||| set callbacks	count=1
function	[function_name_1] options ||| [arg_pair_2] [function_name_1]	count=5
function	[function_name_1] at ||| [function_name_1] [arg_pair_2]	count=2
return	is connected to ||| string	count=1
arg_pair	point for new ||| float $x	count=1
function_name	specified ftp ||| ftp	count=1
function	[function_name_1] of snmp ||| [function_name_1] [arg_pair_2]	count=2
function	agent [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	current parameter ||| pg parameter status	count=2
return	set of ||| bool	count=2
function_name	3 font [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	this function renames ||| function	count=1
arg_pair	override the [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	from a given ||| object	count=1
function_name	by ||| function	count=1
arg_pair	given data using a ||| string $data	count=1
function_name	frees all the resources ||| base free	count=1
arg_pair	contrast of ||| float $beta	count=1
arg_pair	with the given hostname ||| int $type	count=1
return	to the end of ||| bool	count=1
function_name	reads ||| eio read	count=2
namespace	and the database ||| mongocursorinterface	count=1
function_name	db++ ||| dbplus	count=2
function_name	[function_name_1] parameter ||| [function_name_1] set [function_name_2]	count=1
function_name	digest methods ||| md methods	count=2
function_name	the maximum [function_name_2] ||| [function_name_1] [function_name_2] query	count=1
function_name	[function_name_1] plugin ||| [function_name_1] [function_name_2]	count=1
function_name	boost function bf parameter ||| boost function	count=1
function_name	[function_name] applying ||| transform [function_name]	count=1
return	host ||| string	count=2
rest	[return_1] execute a ||| [return_1] pg send [function_2]	count=3
function_name	version as ||| version	count=1
function_name	socket ||| stream socket	count=3
function_name	reference of string ||| decode numericentity	count=1
function_name	in the ||| get	count=1
arg_pair	[arg_pair_1] sequence ||| overview [arg_pair_1] [arg_pair_2]	count=5
return	for ||| bool	count=3
arg_pair	key to value ||| string $key string $value	count=1
function_name	the diff ||| diff	count=2
function_name	a border ||| border	count=1
arg_pair	fields if a valid ||| string $fieldname	count=1
function_name	fetch dns ||| dns get record	count=1
function_name	fetch an access ||| access	count=1
function_name	opposed to mongocollection::find() ||| find one	count=1
function_name	the value ||| value	count=1
function_name	determines the minimum ||| get cascade min cand	count=1
function_name	be represented ||| set metadata	count=1
function_name	is usually preferred to ||| prev error	count=1
function_name	[function_name_1] regex ||| [function_name_1] [function_name_2]	count=1
function_name	rows affected by a ||| ifx affected rows	count=1
arg_pair	[arg_pair_1] given ||| function array imap sort [arg_pair_2] [arg_pair_1]	count=4
function_name	has been exhausted and ||| dead	count=1
function_name	without waiting for ||| pg send query	count=1
arg_pair	a given number of ||| string $str int $width	count=1
arg_pair	the first ||| int $mode	count=2
arg_pair	assoc_array which has field= ||| array $assoc_array int $options	count=1
function_name	returns the filename associated ||| get filename	count=1
namespace	the [namespace] to wait ||| [namespace]	count=1
function_name	this method animates ||| animate images	count=1
function_name	[function_name_1] a handler ||| [function_name_2] [function_name_1]	count=1
function_name	identifier ||| object	count=1
arg_pair	of [arg_pair] multibyte ||| [arg_pair]	count=1
function_name	sets maximum ||| set max	count=2
namespace	way ||| mongodb	count=1
function_name	the train ||| train data	count=1
function_name	existing class ||| class	count=1
function_name	minimum ||| cascade min	count=2
function_name	determine ||| dir	count=1
function_name	[function_name] indicated column ||| [function_name]	count=1
function_name	result [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	a string in ||| resource $psdoc string $text	count=1
arg_pair	a resource handle referencing ||| string $encoding string $separator	count=1
function_name	specific row in ||| fetch row	count=1
function_name	used to split ||| split	count=1
return	from an ||| array	count=1
arg_pair	or a ||| string $fk_table	count=1
arg_pair	associated with pub_key_id ||| mixed $pub_key_id mixed $signature_alg	count=1
function_name	the activation steepness for ||| activation steepness	count=2
return	existing information stored ||| void	count=1
function_name	false on failure ||| cubrid	count=1
function_name	path and file name ||| pathname	count=1
function_name	[function_name_1] given stream ||| [function_name_2] set [function_name_1]	count=1
function_name	the default timezone ||| date default timezone	count=2
arg_pair	and write [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	file ||| get	count=2
arg_pair	is identical to ||| string $encoding	count=1
function_name	textflow and ||| textflow	count=1
function_name	subset [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	timer [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	you to override the ||| int $n	count=1
function_name	imported pdf page on ||| pdf fit pdi	count=1
function_name	set ||| set dict	count=1
function_name	this is the ||| get	count=1
function_name	a space character ||| space	count=1
function_name	a new [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	ssl api function see ||| ssl get	count=1
function_name	gets a list ||| openssl get	count=2
function_name	save an xbm version ||| imagexbm	count=1
function_name	sets ||| fdf set	count=5
arg_pair	or the ||| resource $imap_stream	count=1
arg_pair	the ||| int $expiration	count=1
arg_pair	an enumerated ||| mixed $codepoint int $property	count=1
function_name	in the data store ||| apcu	count=1
return	to be read from ||| bool	count=1
function_name	ms sql ||| mssql	count=1
arg_pair	0 ||| resource $ann	count=2
function_name	this sets ||| set	count=1
arg_pair	width ||| resource $p float $width	count=1
arg_pair	or virtual file ||| string $filename	count=1
namespace	string representation of an ||| function	count=1
function_name	sets the default ||| set default	count=1
function_name	for the language described/referred ||| ordering	count=1
arg_pair	returns one of the ||| resource $result	count=1
function_name	when using mppe ||| demangle mppe key	count=1
namespace	current entry ||| rarentry	count=1
arg_pair	given ||| resource $link	count=2
arg_pair	string input for ||| string $delimiter	count=1
function_name	the message that correspond ||| mqseries strerror	count=1
function_name	clears sets to 0 ||| gmp clrbit	count=1
function_name	image obtained ||| imagecreatefromwbmp	count=1
function_name	the previous tuple ||| prev	count=1
namespace	the entry ||| ziparchive	count=2
function_name	function [function_name] of ||| ob end [function_name]	count=1
function_name	a space ||| space char	count=1
arg_pair	pair ||| int $pair int $fg	count=1
function_name	get the current flags ||| get flags	count=1
arg_pair	dn which represents the ||| array $dn resource $privkey	count=1
function_name	horizontal scaling for the ||| horizontal scaling	count=1
function_name	in namespace ||| ns	count=1
arg_pair	register a rpc call ||| string $uri	count=1
arg_pair	string str from ||| string $str array $convmap	count=1
arg_pair	the value ||| string $value string $timeout	count=1
function_name	calendar 4713 ||| juliantojd	count=1
arg_pair	the specified flag to ||| int $options	count=1
function_name	supported signature types ||| supported signatures	count=2
arg_pair	quality of service needed ||| int $service_level_option	count=1
namespace	last snmp request ||| snmp	count=1
function_name	a new ssl ||| ssl	count=1
arg_pair	the specified result identifier ||| resource $result_id mixed $position	count=1
function_name	[function_name_1] offset ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] useful ||| [function_name] split	count=1
function_name	gets blob/clob ||| lob get	count=2
function_name	slop [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	for all methods accepting ||| fd	count=1
function_name	executes one ||| execute	count=2
namespace	new ||| reflectionclass	count=1
rest	is [function_2] ||| [return_1] remove attribute [function_2]	count=3
function_name	variable in user ||| ucache set	count=1
arg_pair	on ||| resource $connection int $oid	count=1
arg_pair	old parameter matches ||| string $key int $old	count=1
function_name	takes ||| export	count=1
function_name	the quantum ||| quantum	count=1
function_name	the linear least squares ||| least squares	count=2
function_name	sybase_fetch_row() ||| sybase	count=1
namespace	the socket specified by ||| function	count=1
function_name	the users query string ||| set query	count=1
return	to be ||| bool	count=3
arg_pair	to the [arg_pair] ||| [arg_pair]	count=1
arg_pair	recognized as ||| bool $executable	count=1
function_name	the html ||| load htmlfile	count=1
arg_pair	image usually of the ||| int $method	count=1
function_name	the user ||| user	count=2
function_name	by current ssl connection ||| ssl	count=1
arg_pair	listening clients that ||| int $type	count=1
function_name	current [function_name_2] ||| [function_name_1] [function_name_2]	count=20
arg_pair	service provider ||| string $verifier_token string $http_method	count=1
arg_pair	mail [arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
arg_pair	port for the specified ||| int $port	count=1
function_name	[function_name_1] otherwise it ||| [function_name_1] [function_name_2]	count=3
function_name	get ||| fbsql	count=1
function_name	form including those components ||| form	count=1
function_name	logo using the built-in ||| logo guid	count=1
function_name	given password to ||| password	count=1
function_name	eventbuffer::addbuffer() except that ||| prepend buffer	count=1
function_name	dio_read() [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	starting ||| move to	count=2
function_name	ends a page ||| ps end page	count=1
function_name	file ||| metadata	count=2
namespace	error ||| function	count=3
function_name	as to reduce the ||| array reduce	count=1
arg_pair	after the ||| resource $fdf_document string $fieldname	count=1
function_name	[function_name_1] default ||| [function_name_2] [function_name_1]	count=5
namespace	direction this function ||| function	count=1
namespace	with ||| gearmanclient	count=1
namespace	from the hash ||| quickhashinthash	count=1
function_name	from an odbc query ||| odbc	count=1
return	whether or not the ||| bool	count=1
function_name	an xbm version ||| imagexbm	count=1
namespace	temporary ||| harudoc	count=2
return	is a base character ||| bool	count=1
function_name	determines the minimum number ||| cascade min	count=1
arg_pair	program to a ||| string $qmanagername resource $hconn	count=1
function_name	font stretch to use ||| font stretch	count=1
return	reads ||| void	count=1
arg_pair	input ||| int $pad_length	count=1
function_name	an existing class ||| class	count=1
function_name	a pkcs#12 file ||| openssl pkcs12 export	count=1
function_name	[function_name] output buffer ||| ob [function_name]	count=1
arg_pair	an exact match location ||| imagick $imagick	count=1
function_name	[function_name_1] loop finished ||| [function_name_2] [function_name_1]	count=1
arg_pair	the specified mailbox ||| int $options	count=1
arg_pair	plaintext ||| string $plaintext	count=1
function_name	an response [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	server in response ||| int $format	count=1
namespace	host checks ||| oauth	count=1
function	scales [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	the mailboxes ||| resource $imap_stream string $ref	count=1
namespace	image list specified ||| imagick	count=1
function_name	a pdf [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	merges the ||| merge	count=3
arg_pair	the service provider ||| string $http_method	count=1
function_name	currently valid ||| valid	count=1
function_name	to use for validation ||| relax ngschema source	count=1
arg_pair	a write lock on ||| resource $relation	count=1
function_name	dump [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	generate a random number ||| gmp random range	count=1
function_name	or nntp server ||| imap reopen	count=1
arg_pair	in the result-set from ||| int $maxlen	count=1
function_name	php logo using ||| php logo	count=1
arg_pair	the given message ||| resource $imap_stream int $msg_number	count=1
function_name	is only used by ||| set	count=1
function_name	fetches a row ||| ibase fetch object	count=1
return	which must be a ||| bool	count=1
arg_pair	insert operations ||| mongocollection $collection array $write_options	count=1
function_name	sql aggregate function ||| create aggregate	count=1
function_name	the [function_name] ||| get [function_name] info	count=1
function_name	as a ||| object	count=1
function_name	[function_name_1] [function_name_2] linked with ||| [function_name_1] [function_name_2]	count=2
return	data from the buffer ||| bool	count=1
function_name	of the given postgresql ||| pg	count=1
function_name	of next query ||| next	count=1
function_name	stroking color ||| gray stroke	count=2
arg_pair	the size of the ||| int $type	count=1
arg_pair	the ||| int $what mixed $value	count=1
function_name	the lower [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	[function_name_1] region code ||| [function_name_1] [function_name_2]	count=2
function_name	steepness ||| steepness	count=2
function_name	by shm_attach() ||| shm detach	count=1
function	[function_name_1] annotation ||| [function_name_1] [arg_pair_2]	count=4
function_name	[function_name_1] decay ||| [function_name_2] [function_name_1]	count=1
function_name	extended [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	string str from character ||| string $str array $convmap	count=1
function_name	given property name as ||| property enum	count=1
return	beta [return] entirely useless ||| [return]	count=1
function	[function_name_1] input ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] image border ||| [function_name_1] [function_name_2]	count=1
function_name	uppercase ||| upper	count=1
arg_pair	on the image ||| int $arg3 int $arg4	count=1
function_name	repository at ||| svn checkout	count=1
function	searches [arg_pair_2] ||| [function_name_1] replace [arg_pair_2]	count=1
return	events ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] remove [function_name_2]	count=1
function_name	units ||| setimageunits	count=1
arg_pair	by assoc_array which ||| array $assoc_array int $options	count=1
arg_pair	after the ||| int $options	count=1
arg_pair	string str in ||| string $str array $convmap	count=1
function_name	unique identifier for ||| zend	count=1
function_name	and its ||| and	count=1
function_name	[function_name_1] loop ||| [function_name_1] [function_name_2]	count=1
function_name	fills a [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	radius ||| radius	count=8
function_name	or an ||| string	count=1
function_name	current cipher by means ||| get cipher	count=1
function_name	get the name of ||| get	count=1
function_name	current row from ||| cubrid fetch row	count=1
arg_pair	table or a ||| string $fk_table	count=1
function_name	rendering mode for ||| rendering mode	count=2
return	get the current ||| array	count=1
arg_pair	gets and sorts [arg_pair_1] [arg_pair_2] ||| function array imap sort [arg_pair_2] [arg_pair_1]	count=2
function_name	window width and sets ||| set	count=1
function_name	get the [function_name_2] ||| [function_name_2] [function_name_1]	count=24
function_name	fit the window width ||| fit	count=1
arg_pair	snmp objects starting ||| string $community	count=2
function_name	the global function table ||| function	count=1
function_name	properties ||| properties	count=3
function_name	a binary string ||| readimageblob	count=1
arg_pair	and ||| resource $filehandle string $classname	count=1
return	to update ||| bool	count=1
namespace	if the [namespace] has a ||| [namespace]	count=1
arg_pair	the remote address ||| string $address	count=1
function_name	lower bound term in ||| lower bound	count=1
return	a content to ||| bool	count=1
function_name	name ||| get	count=1
function_name	chromaticity white point ||| white point	count=1
return	for specifying how to ||| bool	count=1
function_name	ancillary data ||| socket cmsg space	count=1
function_name	affected by a query ||| ifx affected	count=1
function_name	gets modifier [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	amount of ||| immortal	count=1
function_name	access points [function_name] qualifiers and ||| [function_name] conf	count=1
function_name	merge ||| merge	count=1
function_name	size ||| size	count=29
arg_pair	of specified size ||| int $width	count=1
function_name	with a ||| metadata	count=1
arg_pair	register a ||| string $uri	count=1
function_name	result ||| fetch object	count=2
function	[function_name_1] returns false ||| [function_name_1] [arg_pair_2]	count=6
function_name	same body ||| bind to	count=1
return	to ||| mongoid	count=1
function	[function_name_1] an initialization ||| [arg_pair_2] [function_name_1]	count=1
function_name	stub so ||| default stub	count=1
function_name	an ldap link identifier ||| ldap	count=1
function_name	[function_name] in filesystemiterator::__construct() ||| get [function_name]	count=1
arg_pair	a query for ||| string $query	count=1
arg_pair	the distinguished name to ||| array $extraattribs	count=1
function_name	name which ||| by name	count=1
function_name	data from the ||| buffer	count=1
namespace	new ||| quickhashintset	count=1
function_name	to use the ||| use	count=1
function_name	execute commit ||| commit	count=1
function_name	valid to the ||| proxy get	count=1
namespace	evfork watcher object ||| evfork	count=1
namespace	internally it shouldnt ||| mongoid	count=1
function_name	tag [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	this ||| array	count=2
function_name	use [function_name] other ||| [function_name] pkey get public	count=1
function_name	registers ||| register	count=4
return	an event from the ||| bool	count=1
function_name	part of the query ||| query chars	count=1
function_name	the connection [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	stored bytecodes and initiates ||| bcompiler write	count=1
namespace	in the ||| function	count=6
function_name	[function_name_1] content type ||| [function_name_1] [function_name_2]	count=3
arg_pair	subject for matches to ||| mixed $subject	count=1
function_name	nonce handler ||| nonce handler	count=2
function_name	number of inputs ||| num input	count=1
function_name	required oauth ||| required	count=1
return	a result set if ||| bool	count=1
function_name	assign a priority ||| set priority	count=1
function_name	active database on the ||| sybase select db	count=1
namespace	only used ||| mongoid	count=1
arg_pair	as a magnitude / ||| string $complement string $magnitude	count=1
function_name	sends a request ||| pg send prepare	count=1
arg_pair	pattern ||| callable $callback	count=1
function	namespace [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=11
arg_pair	principal ||| string $principal	count=1
arg_pair	image to a reconstructed ||| int $metric	count=1
function_name	type is ||| type	count=1
function_name	string reference ||| decode numericentity	count=1
function_name	last warning message ||| last warning	count=2
function_name	error message ||| error	count=5
function_name	reference of ||| decode numericentity	count=1
function_name	connect the ||| connect	count=1
function	[function_name_1] the hostname ||| [arg_pair_2] [function_name_1]	count=1
function_name	register your own ||| register node	count=1
function_name	server ||| get server by	count=1
function_name	sets blocking or non-blocking ||| set blocking	count=1
arg_pair	a ||| resource $result_id	count=3
function_name	[function_name_1] the mode ||| [function_name_1] block algorithm [function_name_2]	count=4
function_name	the route process ||| current route	count=1
namespace	array by using ||| function	count=1
function_name	icc profile and ||| pdf load iccprofile	count=1
namespace	function tries to return ||| function	count=1
namespace	data ||| eventbuffer	count=1
function_name	parameter if set ||| parameter	count=1
function_name	[function_name_1] timeout ||| [function_name_2] [function_name_1]	count=9
function_name	that cannot ||| set	count=1
arg_pair	to an ||| array $options	count=1
function_name	returns last [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	parameter [return] less than ||| [return]	count=1
function_name	textflow ||| pdf fit textflow	count=2
function_name	from ||| add	count=1
function_name	[function_name_1] several ||| [function_name_2] [function_name_1]	count=2
function_name	in the route ||| current route	count=1
function_name	submit the object to ||| submit	count=1
function_name	[function_name_1] cascade ||| [function_name_1] [function_name_2]	count=2
arg_pair	a valid boost ||| string $fieldname	count=1
function_name	node [function_name] ||| transform [function_name]	count=1
function_name	inner iterators children ||| children	count=1
arg_pair	using the principal and ||| string $principal	count=1
return	retaining the ||| mixed	count=1
function_name	[function_name_1] minimum ||| [function_name_2] [function_name_1]	count=1
function_name	get the column ||| column	count=1
function_name	one ||| ingres fetch	count=1
function	[function_name_1] namespaceuri and ||| [arg_pair_2] [function_name_1]	count=3
namespace	function converts a human ||| function	count=1
function_name	border color ||| border color	count=4
arg_pair	the ||| resource $shm_identifier	count=1
function_name	to split a ||| split	count=1
namespace	function determines whether ||| function	count=1
function_name	specified cipher ||| get cipher	count=1
function_name	at the repository ||| svn log	count=1
return	the internet ||| string	count=1
arg_pair	request request ||| string $string	count=1
function_name	function ||| set state	count=2
function_name	the following ||| recursive	count=1
function_name	status callback set ||| status	count=1
function	frontend/backend communication [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	a timestamp and location ||| int $timestamp int $format	count=2
function_name	arc ||| imagearc	count=1
arg_pair	the callback ||| callable $callback	count=1
function_name	by the ||| set state	count=1
namespace	this method tries to ||| quickhashintstringhash	count=1
function_name	this sets a specific ||| set	count=1
function_name	retrieves the ||| get	count=3
function	[function_name_1] on a ||| [function_name_1] [arg_pair_2]	count=1
function_name	get current ||| get current	count=2
function_name	returns the ||| get data	count=1
arg_pair	the wrapper [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	file name ||| file name	count=2
function_name	parameter setting ||| parameter	count=1
function_name	fetch dns resource ||| dns get record	count=1
arg_pair	to a page ||| string $dest	count=1
function_name	sets ||| pdf set	count=4
function_name	cookie [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	a ||| function	count=10
function_name	assign a priority ||| event buffer priority	count=1
return	arguments ||| mixed	count=1
function	the table [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	the given source string ||| string $source	count=1
function_name	specific method is ||| has method	count=1
function_name	location [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	goes until [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	is ||| intlchar	count=1
function_name	return information about ||| info	count=1
namespace	to the end ||| eventbuffer	count=1
function_name	affected [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	activation function for neuron ||| activation function	count=2
function_name	a stream [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	get the current font ||| get current font	count=1
arg_pair	and ||| resource $connection	count=4
arg_pair	functionally equivalent to memcached::getmulti() ||| int $flags	count=1
return	suitable for ||| resource	count=1
namespace	this function will return ||| function	count=5
namespace	to searchd ||| sphinxclient	count=1
return	of ||| scalar	count=1
function	blob [arg_pair_2] ||| [function_name_1] info [arg_pair_2]	count=1
arg_pair	the ||| int $key_len	count=1
function_name	dash pattern ||| get dash	count=1
function_name	read ||| query read	count=1
function_name	known as tailable ||| tailable	count=1
function_name	and \r ||| nl2br	count=1
function_name	case insensitive version ||| natcasesort	count=1
arg_pair	exist ||| array $keys array $options	count=1
namespace	using nonzero ||| harupage	count=1
function_name	handler function for ||| handler	count=2
return	is similar to ||| string	count=2
function	textflow [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	current radius request ||| radius	count=5
function_name	the current column ||| current column	count=2
arg_pair	b ||| gmp $b	count=1
function_name	after a ||| loop	count=1
arg_pair	dn which represents ||| array $dn	count=1
arg_pair	text for ||| string $text	count=1
function_name	to [function_name] ||| cubrid [function_name] insert	count=3
function_name	id3v2 ||| id3v2 tag	count=2
function_name	production ||| disable	count=1
function_name	mode outputs blocks ||| is block mode	count=2
function_name	query syntax ||| escape query	count=1
function_name	ends when ||| end	count=1
function_name	the given ||| a	count=1
function_name	ssl [function_name] ||| [function_name]	count=1
function_name	remove the ||| remove	count=1
arg_pair	given source ||| string $source int $flags	count=1
function_name	tables ||| tables	count=3
function_name	yaml document stream read ||| yaml parse	count=1
arg_pair	to the path ||| bool $recursive	count=1
arg_pair	has been ||| bool $autoload	count=1
function_name	signal ||| signal	count=2
function	namespace [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=11
function_name	representing the image obtained ||| imagecreatefromwebp	count=1
namespace	the evfork watcher ||| evfork	count=1
function_name	servers that can be ||| servers	count=1
function_name	transparent ||| transparent paint image	count=1
arg_pair	for a ||| string $encoding	count=1
function_name	a stride value ||| stride for width	count=1
arg_pair	subject that contains ||| string $subject	count=1
namespace	called when a task ||| gearmanclient	count=1
namespace	an http request ||| eventhttp	count=1
function_name	depth ||| depth	count=1
function_name	the given xml ||| xml	count=2
return	finalizes ||| bool	count=1
function_name	patches ||| string bpatch	count=1
return	the factor by which ||| float	count=1
namespace	the hash in ||| quickhashstringinthash	count=1
function_name	get or set the ||| database	count=1
function_name	fetches ||| ibase fetch	count=1
function_name	the decay ||| decay	count=1
namespace	all data from ||| eventbuffer	count=1
function_name	width of [function_name_2] ||| [function_name_2] text [function_name_1]	count=1
arg_pair	field after the given ||| resource $fdf_document	count=1
function_name	the details ||| describe	count=1
function_name	single low priority ||| low	count=1
arg_pair	the value of the ||| resource $link_identifier	count=2
function_name	first scaling the image ||| image	count=1
namespace	plugin implement this method ||| yaf_plugin_abstract	count=1
function_name	mysql server that ||| server	count=1
function_name	facet ||| set facet date start	count=2
function_name	phrase slop ps3 parameter ||| phrase slop	count=1
function	[function_name_1] [arg_pair_2] ||| function bool [function_name_1] [arg_pair_2]	count=1
arg_pair	the database ||| resource $result	count=1
function_name	frequency at ||| frequency	count=1
function_name	to the ||| get	count=1
function_name	type ||| type	count=28
function_name	data for the last ||| dbplus last	count=1
function_name	the style [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	function as event handler ||| event handler	count=1
function_name	get the value of ||| offset get	count=1
namespace	yaf_route_simple will get route ||| yaf_route_simple	count=1
function_name	connection status bitfield ||| connection status	count=1
function_name	copy of ||| clone	count=1
function_name	mime [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	be used ||| maxdb debug	count=1
arg_pair	specified by fd to ||| mixed $fd	count=1
function_name	set a [function_name_2] ||| [function_name_1] start namespace decl [function_name_2]	count=4
arg_pair	on the ||| resource $stream_or_context	count=1
return	with any options supplied ||| resource	count=1
function_name	returns [function_name_2] ||| [function_name_1] server [function_name_2]	count=1
return	is used to ||| bool	count=3
function_name	width of [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	[function_name_1] required ||| [function_name_2] [function_name_1]	count=1
function	sets the [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	the key with old_value ||| int $old_value	count=1
arg_pair	posted ||| string $event_name1 string $event_name2	count=1
arg_pair	[arg_pair_1] input for ||| [arg_pair_2] [arg_pair_1]	count=4
function	[function_name_1] with ||| [function_name_1] [arg_pair_2]	count=2
function_name	set cookie parameters defined ||| session set cookie params	count=1
function	is an [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	into the file ||| to file	count=2
function_name	an unified diff ||| xdiff string diff	count=1
function_name	custom [function_name] ||| set [function_name]	count=3
function	[function_name_1] [arg_pair_2] ||| result [function_name_1] [arg_pair_2]	count=3
function_name	[function_name_1] human readable ||| [function_name_1] [function_name_2]	count=2
function_name	named [function_name] in specified ||| move to [function_name] ns	count=1
function_name	user-supplied comparison ||| usort	count=1
arg_pair	hash ||| string $hash	count=1
function_name	agent specified by the ||| walk	count=1
namespace	the ||| mongocursor	count=1
function_name	tell ||| tell64	count=1
namespace	solrdocument instance ||| solrdocument	count=1
return	the [return] of ||| [return]	count=1
arg_pair	by the name variable_name ||| string $variable_name	count=1
arg_pair	quality of service ||| int $service_level_option mixed $option_value	count=1
function_name	query ||| fbsql query	count=1
function_name	[function_name] data handler ||| xml set [function_name] data handler	count=1
function_name	returns it as ||| to	count=1
function_name	results of next query ||| cubrid next	count=1
namespace	path using ||| harupage	count=1
function_name	an obscure [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	rows affected by ||| affected rows	count=4
function_name	soap header to ||| soap header	count=2
function_name	commits a transaction ||| commit	count=1
function_name	contains personal wordlist ||| pspell config personal	count=2
function_name	[function_name_1] query time ||| [function_name_2] [function_name_1]	count=1
arg_pair	a socket stream ||| mixed $socket	count=1
function_name	of variables ||| variables	count=1
arg_pair	the principal and ||| string $principal	count=1
function_name	specified code point ||| isbase	count=1
arg_pair	row of data from ||| int $fetch_flag	count=1
function_name	[function_name_1] boost query ||| [function_name_2] [function_name_1]	count=1
function_name	fills the ||| fill	count=1
function_name	returns the [function_name_2] ||| [function_name_1] image [function_name_2]	count=2
return	constructs ||| mixed	count=1
return	is used to change ||| bool	count=1
arg_pair	a ||| resource $relation	count=1
namespace	function is ||| mongoid	count=1
function_name	more write ||| write	count=2
function_name	a space ||| space	count=1
function	string reference [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	url ||| with url	count=2
function_name	adds a tag ||| bbcode add element	count=1
function_name	[function_name_1] [function_name_2] to the bbcode_container ||| [function_name_1] [function_name_2]	count=1
arg_pair	[arg_pair_1] from object_id ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	current path ||| harupage	count=1
function	[function_name_1] array1 with ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	a target within ||| string $dest	count=1
function_name	to use [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] record in ||| [function_name_2] [function_name_1]	count=1
arg_pair	database name used with ||| string $database	count=1
arg_pair	string before it ||| string $source_string	count=1
function_name	set upon cubrid_execute() ||| result	count=1
function_name	calculates the md5 ||| md5	count=1
arg_pair	the supplied hash ||| integer $algo	count=1
namespace	stops and restarts the ||| evperiodic	count=1
arg_pair	a string ||| int $shmid string $data	count=1
arg_pair	a directory ||| string $path	count=2
function_name	is a directory ||| dir	count=1
function_name	by the last ||| get last	count=1
function_name	activation steepnesses in ||| get cascade activation steepnesses	count=1
return	a maxdb resource suitable ||| resource	count=1
function_name	minimum number ||| get cascade min	count=1
function_name	place after the ||| get postfix	count=1
function	sets [arg_pair_2] ||| [function_name_1] min out epochs [arg_pair_2]	count=1
function_name	[function_name_1] the process ||| [function_name_2] [function_name_1]	count=1
function_name	filling [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	equivalent to memcached::getmulti() ||| string $cas_tokens int $flags	count=1
arg_pair	on the how parameter ||| int $how	count=1
namespace	references ||| splfileinfo	count=1
function_name	from [function_name] ||| [function_name] load constants	count=1
function_name	sets the option specified ||| set option	count=1
arg_pair	ann based on previously ||| array $input_vector	count=1
arg_pair	snmp objects ||| string $host string $community	count=2
function_name	the sunrise ||| date sunrise	count=1
function_name	stat ||| stat	count=1
function_name	time zone corresponding to ||| geoip time zone by	count=1
function_name	[function_name_1] daemon ||| [function_name_1] [function_name_2]	count=8
arg_pair	the opposite of htmlentities() ||| string $string	count=1
function_name	file [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	an option on the ||| resource $sh int $option	count=1
arg_pair	called whenever a ||| resource $proxy string $value	count=1
function_name	adds a request to ||| add	count=1
arg_pair	creates a directory on ||| resource $sftp string $dirname	count=1
function_name	statistics [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	of the specified size ||| int $width	count=1
function	[function_name_1] given password ||| [function_name_1] [arg_pair_2]	count=4
function_name	the mode for ||| mode	count=1
function_name	[function_name_1] get the ||| [function_name_1] [function_name_2]	count=1
function_name	comments and whitespace removed ||| strip whitespace	count=1
function	encryption mode [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	parameters for future use ||| params	count=1
return	returns an ||| array	count=1
arg_pair	field ||| string $fieldname	count=3
function_name	image interpolate pixel ||| image interpolate	count=2
function_name	runs a low priority ||| do low	count=1
function_name	gets the image ||| get image	count=2
return	server for ||| mongocursor	count=1
function_name	[function_name_1] decay ||| [function_name_1] [function_name_2]	count=1
rest	[return_1] [function_2] ||| [return_1] pdf [function_2]	count=2
function_name	view engine then the ||| assign	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] object resource $result [arg_pair_2]	count=8
function_name	adds query ||| add query	count=2
function_name	neurons in each layer ||| layer array	count=1
return	link to a ms ||| bool	count=1
function_name	json encoded string ||| json decode	count=2
arg_pair	in subsequent transformations ||| string $namespace string $name	count=1
function_name	include the [function_name_2] ||| [function_name_1] [function_name_2]	count=17
function_name	the cascade [function_name_2] ||| [function_name_1] [function_name_2]	count=6
arg_pair	stored in data ||| resource $data	count=1
namespace	to trace ||| function	count=1
arg_pair	it for later use ||| string $fontname	count=1
function_name	text rendering mode ||| text rendering mode	count=6
arg_pair	executable file consists of ||| resource $filehandle int $startpos	count=1
function_name	imap [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	a callable ||| string $message	count=1
arg_pair	it returns false ||| string $mode string $lib_dir	count=1
function_name	on the server for ||| immortal	count=1
function_name	iterators children ||| children	count=1
arg_pair	the line width ||| float $width	count=1
function_name	it with spelling alternatives ||| enchant dict quick	count=1
function_name	an xml document ||| save xml	count=1
namespace	a prepared statement directly ||| pdostatement	count=1
function_name	the linejoin parameter ||| setlinejoin	count=1
return	buffer provided ||| bool	count=1
return	trace the ||| void	count=1
function_name	[function_name_1] frontend/backend communication ||| [function_name_2] [function_name_1]	count=1
return	to delete an element ||| bool	count=2
function_name	set the activation function ||| fann set activation function	count=2
return	for production ||| bool	count=1
function_name	closes ||| cubrid close	count=2
function_name	by which the regex ||| set highlight regex	count=1
function_name	be ||| construct	count=1
function_name	order ||| order	count=1
function_name	a record [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the linejoin parameter ||| pdf setlinejoin	count=1
function_name	error message for ||| stmt error	count=1
return	with existing information ||| void	count=1
arg_pair	particular [arg_pair] from the ||| [arg_pair]	count=1
arg_pair	len bytes of ||| int $len int $flags	count=1
function_name	object commits completes all ||| commit	count=1
arg_pair	associative array ||| int $slabid	count=1
function_name	backup ||| uopz backup	count=1
arg_pair	within sql statements ||| mixed $final_callback int $argument_count	count=1
function_name	last socket error ||| error	count=1
function_name	rotation of ||| ps rotate	count=1
function_name	subtraction of ||| sub	count=1
function_name	record into the ||| record	count=1
return	forward to the ||| void	count=1
function_name	an offset ||| facet offset	count=1
arg_pair	and associated ||| resource $connection string $qualifier	count=1
function_name	password for ||| fbsql set password	count=1
function_name	globally unique identifier guid ||| com create guid	count=1
function_name	of sybase_fetch_row() that ||| sybase fetch	count=1
function_name	decides whether ||| qc set is select	count=1
function_name	given interface ||| interface	count=1
function_name	examines ||| openssl x509 checkpurpose	count=2
namespace	exports a reflected extension ||| reflectionextension	count=1
arg_pair	of ||| float $threshold	count=1
function_name	[function_name_1] ibase_blob_close() ||| [function_name_2] [function_name_1]	count=2
function_name	data and indexes ||| uassoc	count=1
function_name	sets the minimum client ||| sybase min client	count=1
namespace	this method tries ||| quickhashstringinthash	count=1
arg_pair	memcached::get() except that the ||| callable $cache_cb	count=1
namespace	[namespace] to ||| [namespace]	count=3
function_name	users query string ||| query	count=1
return	retrieve a ||| string	count=1
function_name	current cipher by means ||| get cipher info	count=1
arg_pair	an external ||| string $alias	count=1
arg_pair	[arg_pair] or direcrory ||| [arg_pair]	count=1
function_name	current value ||| value	count=1
namespace	the function socket_read() ||| function	count=1
function	activation function [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	the intensity of ||| float $threshold int $channel	count=1
namespace	job ||| gearmanjob	count=3
function_name	odbc ||| odbc fetch	count=1
function_name	fields names in ||| field names	count=1
function_name	maximum out ||| cascade max out	count=2
function	[function_name_1] returns a ||| [function_name_1] [arg_pair_2]	count=2
function_name	tell the ||| tell64	count=1
function_name	the spl ||| spl	count=1
function_name	source [function_name] unless ||| [function_name]	count=1
arg_pair	bit index in a ||| int $index	count=1
namespace	or the history ||| function	count=1
function_name	a character ||| char	count=1
return	or more attributes ||| mixed	count=1
arg_pair	color ||| mixed $fill float $fuzz	count=1
function_name	[function_name] applying the ||| transform [function_name]	count=1
namespace	bytes [namespace] ||| [namespace]	count=1
function_name	with a convolution ||| edgeimage	count=1
function_name	key is the private ||| x509 check private	count=1
function_name	the compression method of ||| compression	count=1
namespace	this node ||| domnode	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2] string $retries	count=5
arg_pair	str ||| string $allowable_tags	count=1
function_name	odbc query ||| odbc	count=2
function_name	reduce the ||| array reduce	count=1
arg_pair	directory on ||| resource $ftp_stream string $directory	count=1
arg_pair	the first ||| string $data int $mode	count=2
function_name	expand ||| expand	count=2
function_name	socket is returned ||| socket	count=1
namespace	call starts running the ||| gearmanclient	count=1
function_name	replaces them with ||| replace	count=1
function_name	get the activation steepness ||| get activation steepness	count=1
namespace	the tar/zip archive ||| phar	count=1
function_name	by csr and ||| openssl csr	count=2
arg_pair	in a ||| mixed $expression bool $return	count=1
function_name	streams ||| stream	count=3
namespace	child before ||| evloop	count=1
function_name	location of [function_name_2] ||| [function_name_2] get relative [function_name_1]	count=1
function_name	the default amount of [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $slop	count=7
function_name	padded on the left ||| str pad	count=1
namespace	this function sets the ||| function	count=1
function_name	sets trigram [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	msql_fetch_array() with one ||| msql fetch	count=3
function_name	scale data in output ||| fann scale output	count=1
function_name	[function_name_1] cascade ||| [function_name_1] [function_name_2] activation steepnesses resource $ann	count=1
function_name	[function_name_1] name of ||| [function_name_1] [function_name_2]	count=4
function_name	in parallel ||| run	count=1
function_name	selects an [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	add new columns ||| string $key array $columns	count=1
function_name	part of the query ||| escape query	count=1
arg_pair	a ||| string $query resource $conn_identifier	count=1
function_name	scales ||| scale input	count=1
arg_pair	parameters to the ||| string $name	count=1
function_name	affected by the last ||| fbsql affected	count=1
arg_pair	the principal and the ||| string $principal	count=1
arg_pair	the given ||| int $flags	count=1
return	to by ||| bool	count=1
function_name	by the last posix ||| posix get last	count=1
function_name	mbox names) ||| renamemailbox	count=1
namespace	syncsemaphore object ||| syncsemaphore	count=1
arg_pair	to a page in ||| string $dest	count=1
function_name	after a fork in ||| fork	count=1
namespace	function ||| mongoid	count=1
function_name	root ||| gupnp root	count=1
function_name	[function_name_1] bounding box ||| [function_name_1] [function_name_2]	count=1
function_name	has [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	with block algorithms otherwise ||| block algorithm	count=1
function_name	is effective in ||| current	count=1
function_name	adds a [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	or not to return ||| return	count=1
return	or sqlsrv_query() ||| mixed	count=1
namespace	a syncreaderwriter ||| syncreaderwriter	count=2
function_name	cipher [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	row identifier [function_name] for a ||| special [function_name]	count=1
return	pointer ||| string	count=1
arg_pair	an ||| imagick $imagick array $offset	count=1
function_name	specified directory [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	to size specified by ||| function	count=1
function_name	resource and returns ||| get	count=1
return	maxdb resource ||| resource	count=1
function_name	[function_name_1] query string ||| [function_name_2] [function_name_1]	count=3
function_name	shouldnt need to ||| state	count=1
function_name	[function_name_1] pixels from ||| [function_name_1] image [function_name_2]	count=1
function_name	reads up to ||| eio read	count=1
arg_pair	stores x509 into ||| mixed $x509	count=2
function_name	the number of days ||| cal days	count=1
function_name	any file or ||| file	count=1
return	file from the ||| bool	count=1
function_name	[function_name_1] harudestination instance ||| [function_name_1] [function_name_2]	count=1
arg_pair	is a wrapper ||| string $note_name	count=1
function_name	array of [function_name] ||| get [function_name]	count=1
namespace	memory ||| function	count=1
function_name	maximum supported key size ||| get key size	count=1
function_name	gets the declaring ||| get declaring	count=4
arg_pair	sets locale ||| string $locale	count=1
function_name	extended ||| db\bson\from	count=1
function_name	set ||| snmp2 set	count=1
function_name	[function_name_1] [function_name_2] properties from ||| [function_name_1] [function_name_2]	count=1
function_name	the total number ||| total space	count=1
arg_pair	variable with ||| mixed $variable	count=1
arg_pair	of htmlentities() in ||| string $string	count=1
arg_pair	a result set as ||| resource $stmt	count=1
function_name	a given tag ||| tag	count=1
arg_pair	by key from ||| string $key	count=1
arg_pair	options that affect the ||| resource $link array $options	count=1
return	into the table specified ||| mixed	count=1
function_name	adds a ||| add element	count=1
function_name	page to fit the ||| fit	count=1
arg_pair	it to ann based ||| resource $ann	count=1
function_name	specified color+alpha ||| imagecolorexactalpha	count=1
function_name	rows to ||| rows	count=1
function_name	from ||| buffer	count=1
arg_pair	pos ||| resource $id int $pos	count=1
function_name	by means of the ||| fdf get	count=1
function_name	that job ||| job	count=1
namespace	later [namespace] event_base_set() ||| [namespace]	count=1
function_name	[function_name_1] identifier ||| [function_name_1] [function_name_2]	count=1
function_name	local tag ||| tag	count=1
arg_pair	a table ||| string $owner string $table_name	count=1
namespace	scans the buffer for ||| eventbuffer	count=1
return	the browser after ||| int	count=1
function_name	[function_name_1] variable ||| [function_name_1] [function_name_2]	count=2
function_name	internal [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	fetches a ||| fetch object	count=1
function_name	base ||| base	count=4
arg_pair	the color ||| float $fuzz int $channel	count=1
function_name	call ||| run	count=1
function_name	route ||| current route	count=1
function_name	activation function for neuron ||| fann get activation function	count=1
arg_pair	be added ||| string $localname	count=1
function_name	corresponding to [function_name_2] ||| [function_name_1] country code [function_name_2]	count=1
function_name	socket connection ||| socket	count=1
function_name	advances array ||| end	count=1
function_name	the queue ||| msg stat queue	count=1
function_name	[function_name] offset ||| [function_name] seek	count=3
function_name	[function_name_1] handler for ||| [function_name_1] [function_name_2]	count=4
function_name	function registers a completion ||| readline completion	count=1
arg_pair	functionally equivalent to memcached::replace() ||| int $expiration	count=1
function_name	the path ||| close path	count=1
arg_pair	write events ||| int $events	count=1
function_name	[function_name_1] soap ||| [function_name_2] [function_name_1]	count=1
arg_pair	the result-set from a ||| int $type int $maxlen	count=1
return	the specified ||| bool	count=1
function	frame to [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	pixel method for ||| pixel method	count=1
function_name	removes objects contained in ||| remove all	count=1
function_name	obscure check ||| crack check	count=2
function_name	data in output ||| output	count=1
arg_pair	and returns the ||| resource $connection	count=1
function_name	[function_name_1] [function_name_2] and ||| [function_name_1] [function_name_2]	count=1
arg_pair	execute processing it ||| callable $execute int $pri	count=1
return	of any pixel color ||| bool	count=1
function_name	the timer ||| timer set	count=1
function_name	maps to facet ||| set facet limit	count=1
function	[function_name_1] a new ||| [function_name_1] [arg_pair_2]	count=2
function_name	registers ||| register callback	count=2
function_name	name which points ||| array by name	count=1
return	calculates ||| array	count=1
function_name	minimum ||| get cascade min cand	count=1
arg_pair	and the associated ||| resource $pdfdoc int $textflow	count=1
function_name	scales the inputs in ||| scale	count=1
return	sets the ||| bool	count=1
function_name	streams and ||| stream	count=1
function_name	reply that uses ||| reply	count=1
namespace	elements in the judy ||| judy	count=1
function_name	from a ||| fetch object	count=1
arg_pair	mail headers [arg_pair_1] [arg_pair_2] overview ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	full country [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	the first prototype ||| string $data	count=2
arg_pair	server address port number ||| int $port	count=1
return	characters within a ||| string	count=1
function_name	runs a ||| do normal	count=1
function_name	compute the legendre symbol ||| legendre	count=1
function_name	gets the current line ||| get current line	count=1
function_name	be represented with existing ||| metadata	count=1
function_name	disabled via ||| disabled	count=1
function_name	organization that an ip ||| geoip org by	count=1
arg_pair	associates a php variable ||| mixed $variable	count=1
function_name	a mysqlnd connection ||| to mysqlnd	count=1
namespace	to run a task ||| gearmanclient	count=2
namespace	it shouldnt need ||| mongoid	count=1
arg_pair	to a target url ||| float $upperrighty string $url	count=1
function_name	installs a proxy object ||| mysqlnd uh set connection proxy	count=1
function_name	the last error ||| error	count=2
function_name	should ||| set metadata	count=2
function_name	table that field belongs ||| pg field table	count=1
function_name	on which to facet ||| facet	count=1
function_name	fetches a result ||| fetch	count=1
arg_pair	map the key ||| mixed $value	count=1
function_name	standard backpropagation neural network ||| fann	count=4
arg_pair	an event ||| int $bytes_transferred int $bytes_max	count=1
arg_pair	store supplied by pkcs12 ||| string $pkcs12	count=1
function_name	specified events is ||| wait event	count=1
function_name	[function_name_1] of rows ||| [function_name_2] [function_name_1]	count=1
function_name	with db2_connect() and returns ||| db2	count=1
function_name	country ||| by country	count=1
function_name	removes objects ||| remove all	count=1
function_name	examines a certificate ||| openssl x509 checkpurpose	count=1
function_name	destroys ||| destroy	count=1
arg_pair	corresponds to the fetched ||| int $result_type	count=1
function_name	this function [function_name_1] [function_name_2] ||| [function_name_1] rewrite [function_name_2]	count=2
arg_pair	that corresponds to the ||| resource $result	count=1
arg_pair	the distinguished name ||| array $configargs array $extraattribs	count=1
arg_pair	string at the ||| int $color	count=1
function_name	chunks which ||| chunk	count=1
namespace	code returned by ||| function	count=1
function_name	output buffer if ||| ob	count=1
function_name	required [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	high priority task ||| high	count=1
function_name	the enchant ||| enchant	count=1
arg_pair	with parameters to the ||| string $name int $type	count=1
function_name	method any file ||| file	count=1
return	and other ||| resource	count=1
namespace	this node and all ||| domnode	count=1
function_name	training patterns ||| fann	count=1
namespace	specified function ||| function	count=1
function_name	a given result identifier ||| ibase fetch	count=1
function_name	[function_name_1] into array ||| [function_name_2] [function_name_1]	count=3
function_name	beginning ||| rewind	count=3
function_name	returns the last ||| sybase get last	count=2
namespace	with servers statistics ||| memcache	count=1
function_name	[function_name_1] slop ps2 ||| [function_name_2] [function_name_1]	count=3
namespace	a callback [namespace] ||| [namespace]	count=1
namespace	unicode character ||| intlchar	count=1
function_name	or redefines ||| ncurses init pair	count=1
function_name	to strcasecmp() ||| strncasecmp	count=1
arg_pair	send by the ||| string $cookie	count=1
arg_pair	by the object_id ||| string $type	count=2
arg_pair	[arg_pair_1] data ||| [arg_pair_2] [arg_pair_1]	count=5
function_name	alpha channel value ||| alpha channel	count=1
function_name	cache percent value ||| cache percent	count=2
arg_pair	the inverse of the ||| int $options resource $compcode	count=1
function_name	[function_name_1] printable string ||| [function_name_1] [function_name_2]	count=6
function_name	returns true if the ||| mcrypt module is	count=1
function_name	[function_name_1] an attribute ||| [function_name_1] [function_name_2]	count=1
function_name	proxy ||| proxy	count=3
function_name	csr and stores ||| csr export	count=1
arg_pair	clients that the property ||| int $type	count=1
function_name	[function_name_1] the version ||| [function_name_1] server [function_name_2]	count=1
arg_pair	[arg_pair_1] domain ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	into a socket ||| socket	count=1
arg_pair	in filename from the ||| string $filename	count=1
function	if [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	type format ||| int $format int $width	count=1
function_name	sets the [function_name] for ||| set [function_name]	count=1
arg_pair	data object ||| int $type	count=1
function_name	current text [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	a php function or ||| string $name	count=2
function_name	query string with ||| query	count=1
arg_pair	a callable function used ||| string $message int $message_code	count=1
arg_pair	execute processing it just ||| callable $execute int $pri	count=1
function_name	action with ||| action	count=2
function_name	returns the number ||| num	count=2
function_name	registers passed javascript ||| register	count=1
return	using nonzero ||| bool	count=1
function_name	a textflow into ||| fit textflow	count=1
function	that matches [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	operations ||| array $write_options	count=2
arg_pair	user ||| resource $link_identifier string $user	count=1
arg_pair	by fd file descriptor ||| int $mode	count=1
namespace	get ||| function	count=1
arg_pair	listening clients that the ||| int $type mixed $value	count=1
function_name	strcasecmp() with the difference ||| strncasecmp	count=1
function_name	file [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	subsequent transformations with ||| string $name	count=1
function	interface [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=2
function_name	notation declaration ||| notation decl	count=1
function_name	performs ||| find	count=1
return	each pixel [return] moved ||| [return]	count=1
function_name	maximum ||| cascade max	count=2
function_name	current line number ||| current line number	count=3
function_name	is only used ||| state	count=1
function_name	the current ||| get	count=4
function_name	function is only used ||| set state	count=1
namespace	need to ||| mongoid	count=1
function	[function_name_1] and the ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	to the specified rgb ||| resource $image int $red	count=1
function_name	into the file named ||| export to file	count=2
function_name	is only used ||| set	count=1
namespace	deletes ||| mongocollection	count=1
namespace	if a [namespace] ||| [namespace]	count=1
function_name	cursor type used ||| cursor type	count=1
function_name	cipher by means of ||| get cipher	count=1
arg_pair	execute ||| int $pri	count=1
arg_pair	a message from a ||| string $target	count=1
function_name	[function_name_1] lower ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name] a ||| [function_name] font	count=1
namespace	a tar/zip archive using ||| phardata	count=1
namespace	supports read ||| rarentry	count=1
function_name	field type is ||| field type	count=1
arg_pair	memcached::add() except that ||| int $expiration	count=1
function_name	an sql [function_name_2] ||| [function_name_1] bind [function_name_2]	count=2
function_name	set of tasks previously ||| run	count=1
function_name	redefines ||| uopz redefine	count=2
function	in namespace [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	the given image ||| int $quality int $filters	count=1
function_name	a binary dump ||| bin dump	count=1
function	[function_name_1] array1 ||| [function_name_1] [arg_pair_2]	count=1
function_name	internet host specified by ||| gethostbyaddr	count=1
arg_pair	reflected ||| mixed $argument	count=1
function_name	problem ||| problem	count=1
function_name	[function_name_1] [function_name_2] the ||| get [function_name_2] key [function_name_1]	count=1
function_name	get elapsed [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	rendering mode ||| rendering mode	count=4
arg_pair	feed it to ann ||| array $input_vector	count=1
function_name	from the ||| disable	count=1
function_name	which the socket ||| get socket name	count=2
namespace	the message ||| function	count=1
function_name	epochs the input ||| epochs	count=2
function_name	a binary patch ||| patch binary	count=2
function_name	new [function_name_2] ||| [function_name_1] pseudo [function_name_2]	count=1
namespace	the wsdl ||| soapclient	count=1
function_name	without waiting for ||| pg send	count=1
arg_pair	color or the ||| int $blue	count=1
arg_pair	determining how large the ||| resource $ann float $rprop_delta_max	count=1
function_name	the minimum ||| cascade min cand	count=1
function_name	appends raw [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	creates a [function_name_1] [arg_pair_2] subject to various options ||| [function_name_1] [arg_pair_2]	count=1
function_name	initial size of ||| size	count=2
arg_pair	mssql_connect() with ||| string $password bool $new_link	count=1
arg_pair	oid ||| resource $conn_identifier string $oid	count=3
namespace	occurred in ||| function	count=1
function	stops [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	type of ||| field type	count=1
function_name	removes ||| remove	count=24
function_name	the contrast of ||| contrast	count=1
function_name	deactivate [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	a given ||| ibase	count=1
return	to change the ||| bool	count=1
function_name	clob ||| clob	count=1
function_name	the constants currently defined ||| defined constants	count=1
function_name	children ||| get children	count=1
function_name	request has been constructed ||| request	count=1
return	returns if ||| bool	count=1
function_name	from a given ||| ibase fetch object	count=1
arg_pair	much like mssql_connect() with ||| bool $new_link	count=1
function_name	[function_name_1] trace log ||| [function_name_1] query [function_name_2]	count=1
namespace	file ||| function	count=1
function_name	[function_name_1] phrase ||| [function_name_1] [function_name_2]	count=8
function	obscure check [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	of a subset ||| fann subset	count=1
function_name	[function_name_1] not to ||| [function_name_1] [function_name_2]	count=1
function_name	column in ||| bind column	count=1
function_name	[function_name_1] member ||| [function_name_2] [function_name_1]	count=16
function_name	given column ||| column	count=1
function_name	set a ||| set	count=2
function_name	exchange the current ||| exchange array	count=1
arg_pair	the value ||| string $timeout	count=1
function_name	output of callback ||| callback	count=1
return	a reflectionmethod for ||| reflectionmethod	count=1
function_name	criteria and sort ||| sort	count=1
function_name	file that cannot be ||| metadata	count=1
return	to at ||| bool	count=1
namespace	file is a ||| splfileinfo	count=1
function_name	internal character encoding ||| mb internal encoding	count=2
function_name	a subset ||| fann subset	count=1
function_name	filter query ||| filter query	count=2
return	values from an ||| array	count=1
function_name	odbc result ||| odbc	count=1
arg_pair	oid of ||| resource $conn_identifier string $oid	count=1
function_name	oil painting ||| oil paint	count=1
function_name	msql_fetch_array() with [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	the gray value ||| float $gray	count=1
arg_pair	desired ||| int $filter float $blur	count=1
function_name	returns the [function_name_2] ||| [function_name_1] [function_name_2]	count=86
function_name	[function_name_1] glo instance ||| [function_name_2] [function_name_1]	count=3
rest	used to [function_2] ||| [return_1] id3 [function_2]	count=1
arg_pair	ca both for path ||| string $ca_path string $ca_info	count=1
namespace	the [namespace] failed in ||| [namespace]	count=1
function_name	[function_name_1] image ||| [function_name_1] stretch [function_name_2]	count=1
arg_pair	key ||| array $query	count=1
return	starts ||| bool	count=1
function_name	receiving numeric ||| errno	count=1
arg_pair	specified by dn ||| string $dn	count=1
function_name	einer mime ||| mime encode	count=1
function_name	the number of activation ||| activation	count=1
function_name	the uid for ||| imap uid	count=1
function	with namespace [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	after the socket socket ||| int $backlog	count=1
arg_pair	returns str with all ||| string $str string $encoding	count=1
function_name	type of ||| filetype	count=1
function_name	be represented with ||| set	count=1
arg_pair	using gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
function_name	default [function_name] clusters ||| [function_name] extract	count=1
function_name	of days [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	described/referred ||| broker set ordering	count=1
function_name	activation steepnesses in ||| cascade activation steepnesses	count=1
namespace	get the name of ||| yaf_router	count=1
function_name	environmental ||| environment	count=1
arg_pair	of c in the ||| int $color	count=1
function_name	row as a ||| object	count=1
function_name	open directory ||| zip	count=1
namespace	the buffer for ||| eventbuffer	count=1
function_name	response from the server ||| response	count=1
namespace	value of ||| function	count=1
return	[return] result_id query ||| [return]	count=3
return	parameter to ||| bool	count=1
function_name	ends when recursiveiteratoriterator::valid() ||| end	count=1
return	or ||| int	count=1
function_name	execute ||| pg execute	count=2
arg_pair	it to ann based ||| array $input_vector	count=1
function_name	[function_name_1] name ||| [function_name_1] [function_name_2]	count=26
namespace	id is ||| mongoid	count=1
function_name	and its size ||| and size	count=2
function_name	configuration ||| ini	count=1
arg_pair	determining how large the ||| resource $ann	count=1
function_name	[function_name_1] time ||| [function_name_2] [function_name_1]	count=3
arg_pair	create a ||| string $type	count=1
function_name	mysql ||| mysql	count=7
function_name	the server for some ||| immortal	count=1
function_name	to creating a new ||| get active	count=1
function_name	minimum client [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	glo instance in the ||| function	count=1
function_name	issued ||| msql	count=1
function_name	the string ||| get	count=1
function_name	decompresses the given ||| decompress	count=1
function_name	bound term in ||| bound	count=3
function_name	returns the property ||| get property	count=3
function_name	can [function_name] used ||| event base [function_name]	count=1
function_name	specified colormap ||| image colormap	count=1
namespace	get the current ||| arrayiterator	count=1
function_name	corresponding to ||| geoip	count=5
namespace	exception which results ||| exception	count=1
function_name	retrieves the file ||| get	count=2
arg_pair	by the ||| string $cookie int $estimated	count=1
function_name	problem ||| report problem	count=1
function_name	the mime [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	reads a ||| read	count=2
function_name	[function_name_1] depth ||| [function_name_2] [function_name_1]	count=1
function_name	signed public key ||| openssl spki new	count=1
function_name	determines the maximum ||| cascade max	count=1
function_name	structure of a ||| imap bodystruct	count=1
function_name	[function_name_1] header to ||| [function_name_1] [function_name_2]	count=2
arg_pair	array1 against the ||| array $array1	count=2
function_name	bigram [function_name_2] ||| [function_name_1] phrase [function_name_2]	count=3
arg_pair	in the font ||| resource $psdoc	count=1
function_name	in ||| escape	count=1
arg_pair	for the ||| resource $ann int $activation_function	count=1
arg_pair	the given ||| resource $link	count=2
function_name	that contains personal ||| personal	count=1
arg_pair	mail headers [arg_pair_1] [arg_pair_2] ||| overview [arg_pair_1] [arg_pair_2]	count=4
function_name	the ||| run	count=1
namespace	within the domnodelist ||| domnodelist	count=1
namespace	from the buffer provided ||| eventbuffer	count=1
function_name	binary dump of ||| bin dump	count=1
function	unserializes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	and deletes its ||| array	count=1
arg_pair	the fetched ||| int $result_type	count=1
function_name	[function_name_1] an iterator ||| [function_name_2] [function_name_1]	count=1
arg_pair	in filename from the ||| resource $image string $filename	count=1
arg_pair	struct ||| int $num_input	count=2
function_name	factor ||| factor	count=2
namespace	[namespace] await responses ||| [namespace]	count=1
function_name	spelling alternatives ||| quick check	count=1
function_name	current boost value for ||| get boost	count=1
function_name	socket is ||| socket name	count=1
function_name	created with db2_connect() and ||| db2	count=1
return	production ||| bool	count=1
arg_pair	b where gcd is ||| gmp $b	count=1
function_name	gets the ||| pg get	count=1
function_name	[function_name_1] binary attribute ||| put [function_name_1] [function_name_2]	count=1
function_name	truncates ||| strimwidth	count=1
function_name	copies data from ||| pgsql copy to	count=3
function	[function_name_1] a ||| [function_name_1] country and region [arg_pair_2]	count=5
function_name	large object and passes ||| pg lo	count=1
function_name	retrieve the entries ||| ldap	count=1
arg_pair	for ||| string $prefix	count=1
arg_pair	server thats ||| resource $link_identifier	count=1
function_name	previously created event resource ||| event	count=1
function	creates a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	returns the names of ||| get extension	count=1
function_name	current document ||| pdf	count=1
return	to hook mysqlnds connection ||| bool	count=1
namespace	plugin implement ||| yaf_plugin_abstract	count=1
arg_pair	use within sql statements ||| mixed $final_callback int $argument_count	count=1
function_name	ldap directory with specified ||| ldap	count=1
function_name	gets a record from ||| get record with names	count=1
function_name	of the border ||| border	count=1
namespace	of ||| gearmanclient	count=1
function_name	another ||| sendfile	count=1
function_name	runs ||| do normal	count=2
arg_pair	the closest possible ||| int $blue	count=1
function_name	[function_name_1] field ||| [function_name_1] [function_name_2]	count=7
function_name	to ||| maxdb	count=1
arg_pair	a given ||| resource $font_index	count=1
function_name	returns information ||| dbase get header info	count=1
function_name	[function_name_1] blur ||| [function_name_1] [function_name_2]	count=2
function_name	the route ||| get	count=1
function_name	the iterator is valid ||| valid	count=2
arg_pair	from a given str ||| string $str	count=1
namespace	the end of current ||| eventbuffer	count=1
function_name	[function_name_1] flags set ||| [function_name_2] [function_name_1]	count=1
function_name	or an ip address ||| geoip	count=1
namespace	prepared statement ||| pdostatement	count=1
namespace	data into the document ||| harudoc	count=1
return	the private ||| bool	count=1
namespace	the [namespace] field ||| [namespace]	count=1
namespace	group ||| solrquery	count=1
function_name	set the numbering ||| add page label	count=1
function_name	will [function_name] an rpm ||| rpm [function_name]	count=1
function_name	the property [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	buffering ||| buffering	count=1
return	[return] queue ||| [return]	count=3
function_name	socket ||| socket connect	count=2
function_name	file named by ||| export to file	count=2
return	row ||| object	count=1
function_name	frontbase ||| fbsql data	count=1
function_name	[function_name_1] list of ||| [function_name_2] [function_name_1]	count=1
function_name	with [function_name] ||| [function_name]	count=2
function_name	control ||| control	count=1
function_name	containing the diff information ||| diff	count=1
function_name	[function_name_1] log ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] textflow ||| [function_name_1] [function_name_2]	count=1
namespace	the error number ||| function	count=1
function_name	similar to mssql_fetch_array() ||| mssql	count=1
function_name	[function_name_1] underlying input ||| [function_name_2] [function_name_1]	count=1
function_name	internal as opposed to ||| internal	count=1
namespace	eventbuffer ||| eventbuffer	count=3
rest	the [function_2] ||| [return_1] newt draw root [function_2]	count=4
function_name	minimum document ||| facet enum cache min	count=1
function_name	get the ending ||| get end	count=1
namespace	by using the values ||| function	count=1
arg_pair	of the ||| int $max_neurons	count=1
function_name	multi handle ||| curl multi	count=2
arg_pair	number of snmp ||| string $host string $community	count=2
return	to by the ||| bool	count=1
namespace	this task ||| gearmantask	count=1
function_name	a row ||| fetch object	count=1
arg_pair	value of an existing ||| string $key string $value	count=2
arg_pair	a ||| string $type	count=2
namespace	in the [namespace] ||| [namespace]	count=4
arg_pair	specified protocol as ||| string $protocol	count=1
return	cause the server to ||| bool	count=2
function_name	read the structure of ||| bodystruct	count=1
function_name	creates visible output ||| graph	count=1
function_name	type is returned instead ||| type	count=1
function_name	activation steepness for neuron ||| activation steepness	count=1
function_name	if true return ||| return	count=1
function_name	elements with a given ||| elements by tag	count=1
arg_pair	table or a ||| string $fk_owner string $fk_table	count=1
namespace	get or set the ||| function	count=1
function_name	current boost ||| get boost	count=1
arg_pair	to memcached::get() except that ||| callable $cache_cb	count=1
arg_pair	callback set using gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
return	the maximum number of ||| int	count=3
function_name	line number [function_name_2] ||| [function_name_2] get current [function_name_1]	count=1
return	to a sybase ||| bool	count=1
function_name	operation [function_name] see regexiterator::setmode() ||| get [function_name]	count=1
function_name	specified ||| check	count=1
arg_pair	to address using ||| resource $socket string $address	count=1
return	represented with ||| void	count=1
function_name	neural network which ||| fann	count=2
arg_pair	given number of ||| int $width	count=1
function_name	lower bound in ||| lower bound	count=2
function_name	sort direction fields can ||| sort	count=1
function_name	draws a [function_name] the ||| [function_name]	count=1
return	given result identifier ||| object	count=1
function_name	gets the fc_nfkc_closure property ||| get fc nfkc closure	count=1
function_name	if true return ||| set terms return	count=1
function_name	executes ||| execute	count=7
function_name	[function_name_1] text ||| [function_name_1] [function_name_2]	count=2
function_name	from a given result ||| ibase fetch	count=1
function_name	soundex key ||| soundex	count=1
function_name	the route process ||| route	count=1
function_name	list currently authorized publickeys ||| ssh2 publickey list	count=1
function_name	interpolate pixel [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	turns off ||| disable	count=1
function_name	a stride ||| stride	count=1
function_name	retrieves the current ||| get	count=1
function_name	set options ||| set option	count=1
function_name	utf-8 ||| pdf utf8	count=1
function_name	layer as layer ||| layer	count=2
function_name	deletes a named virtual ||| pdf delete pvf	count=1
function_name	[function_name_1] an anonymous ||| [function_name_1] [function_name_2]	count=1
return	with a ||| void	count=1
function_name	fills current path using ||| fill	count=1
function_name	number of inputs in ||| num	count=1
function_name	attaches an [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	up to maxlength bytes ||| int $maxlength	count=1
function_name	wait function suspends ||| wait	count=1
function_name	header string signature ||| header	count=1
function_name	appends [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	of [arg_pair] multibyte regular ||| [arg_pair]	count=1
function_name	other tables that refer ||| odbc foreignkeys	count=1
arg_pair	the given string ||| int $limit int $flags	count=1
function_name	encrypts ||| mcrypt encrypt	count=2
function	variable [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
function_name	soap [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	background returning a ||| background	count=2
function_name	[function_name] attribute ||| move [function_name]	count=3
return	to the ||| bool	count=37
arg_pair	other action ||| string $action	count=1
function_name	and turn ||| flush	count=1
namespace	can define this function ||| function	count=1
namespace	returns the [namespace] value ||| [namespace]	count=1
function_name	deletes a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] activation function ||| [function_name_1] [function_name_2]	count=4
function_name	activation steepness for ||| fann get activation steepness	count=1
arg_pair	sql statement and ||| resource $conn_identifier string $sql	count=1
function_name	info associated with ||| info	count=1
function_name	with spelling alternatives ||| quick check	count=1
function_name	is used to read ||| cubrid	count=1
function_name	the best ||| best	count=1
return	simply stops ||| void	count=1
function_name	queue ||| msg stat queue	count=2
function_name	db2_connect() and returns the ||| db2	count=1
function_name	a mime charset ||| mb preferred mime name	count=1
function_name	id for ||| id	count=3
function_name	virtual image ||| load image	count=1
function_name	creates ||| create text	count=1
function_name	the maximum number ||| cascade max cand	count=1
namespace	of ||| function	count=56
return	directly to standard output ||| bool	count=1
function_name	[function_name_1] log ||| [function_name_1] [function_name_2]	count=3
return	of any pixel ||| bool	count=1
function_name	definition ||| end	count=1
function_name	elements designated ||| splice	count=1
function_name	server host name ||| mysql get host info	count=1
function_name	[function_name_1] candidate limit ||| [function_name_2] [function_name_1]	count=1
function_name	opens [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	row in a result ||| fetch	count=4
function_name	slop ps2 parameter ||| slop	count=1
function_name	row and moves ||| mysql fetch	count=1
function	permissions [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	pixel that matches color ||| paint opaque	count=1
namespace	of the hash ||| quickhashstringinthash	count=1
return	to validate ||| bool	count=1
return	specified code ||| bool	count=1
function_name	returns root [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	unique identifier for ||| uuid	count=1
arg_pair	for the specified purpose ||| int $purpose	count=1
namespace	for solrdocument ||| solrdocument	count=1
function_name	polaroid picture ||| polaroid image	count=1
function_name	ends a page ||| end page	count=1
function_name	external attributes ||| external attributes	count=2
function_name	property for ||| property	count=2
function_name	on the [function_name] ||| [function_name] nb fput	count=1
function_name	be demangled before you ||| radius demangle	count=1
arg_pair	[arg_pair_1] variable_name ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	the gmagick ||| gmagick	count=1
function_name	a collection ||| collection	count=1
arg_pair	whenever a ||| resource $proxy string $value	count=1
function_name	the bytecodes [function_name] ||| bcompiler parse [function_name]	count=1
function	diff containing [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	an array with ||| array	count=2
arg_pair	changes the color ||| mixed $fill float $fuzz	count=1
function_name	url-encoded query ||| http build query	count=2
arg_pair	the intensity of ||| int $channel	count=1
namespace	configures evperiodic watcher ||| evperiodic	count=1
arg_pair	variable can ||| mixed $var	count=1
function_name	reads to secondaries ||| get slave okay	count=3
function_name	to create ||| create db	count=2
arg_pair	a ||| string $new_file2	count=1
function_name	[function_name_1] column ||| [function_name_1] [function_name_2]	count=3
return	continuing the ||| void	count=1
namespace	internal pointer points ||| tokyotyrantiterator	count=1
function_name	this function [function_name_2] ||| [function_name_2] [function_name_1]	count=7
namespace	has no more ||| mongocursorinterface	count=1
arg_pair	a ||| string $pattern	count=2
function_name	ftp ||| ftp nb	count=1
function_name	diff containing differences between ||| string diff	count=1
function_name	interesting term relevance ||| boost	count=1
function_name	number or boolean ||| get number	count=1
arg_pair	added ||| string $file string $localname	count=1
namespace	end ||| eventbuffer	count=1
function_name	[function_name_1] pixels ||| [function_name_1] image [function_name_2]	count=1
function_name	syntax highlighted version ||| highlight	count=1
function_name	returns status information ||| get status	count=1
function_name	of activation steepnesses in ||| cascade activation steepnesses	count=1
return	a [return] of ||| [return]	count=1
function_name	outputs blocks e ||| is block	count=1
function_name	resolve ||| dbplus resolve	count=1
arg_pair	key with ||| string $key	count=1
arg_pair	databases ||| mixed $increment	count=1
arg_pair	returns a ||| string $number	count=1
function_name	elements uri string ||| uri	count=1
function_name	a built-in ||| builtin	count=1
arg_pair	data at position offset ||| string $data	count=1
return	route ||| string	count=1
arg_pair	cache a variable ||| string $key mixed $var	count=1
function_name	a subset of the ||| fann subset	count=1
function_name	subset ||| fann subset	count=1
function_name	specify a callback ||| callback	count=1
function_name	sets blocking ||| set blocking	count=2
function_name	the file ||| to file	count=2
function_name	this function is only ||| set state	count=1
arg_pair	searches haystack for needle ||| mixed $needle array $haystack	count=1
arg_pair	or non-blocking mode on ||| bool $mode	count=1
function_name	an access [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	thumbnail by [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	this constructor creates soapclient ||| soapclient	count=1
function_name	elements with a ||| elements by tag	count=1
function_name	[function_name] specified ||| [function_name]	count=2
arg_pair	by outfilename ||| resource $csr string $outfilename	count=1
function_name	[function_name_1] matte ||| [function_name_1] [function_name_2]	count=2
function_name	the file named by ||| openssl pkey export to file	count=1
function	[function_name_1] the result ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	for later ||| int $len	count=1
arg_pair	of the first occurrence ||| string $needle	count=1
arg_pair	creates the specified directory ||| string $directory	count=1
namespace	new soapparam object ||| soapparam	count=1
arg_pair	a directory ||| string $mask	count=1
namespace	current iterator entry ||| splobjectstorage	count=1
arg_pair	the left_operand to ||| string $left_operand	count=1
function_name	gets column types of ||| cubrid column types	count=1
arg_pair	option from the ||| int $option	count=1
function_name	fields associated [function_name_2] ||| [function_name_2] error [function_name_1]	count=2
arg_pair	a target ||| float $upperrighty	count=1
arg_pair	render a template ||| string $tpl array $tpl_vars	count=1
arg_pair	an exact match location ||| array $offset	count=1
function_name	is similar to creating ||| get active	count=1
function_name	pdi document parameter ||| pdi	count=1
function_name	similar documents to ||| mlt	count=1
function_name	minimum ||| min default	count=1
arg_pair	an object ||| object $object	count=1
arg_pair	the name variable_name in ||| string $variable_name	count=1
function_name	[function_name_1] [function_name_2] is linked with ||| [function_name_1] [function_name_2] version	count=2
function_name	of rows to ||| rows	count=1
rest	[return_1] [function_2] ||| [return_1] mcrypt module [function_2]	count=3
function_name	[function_name] value of ||| [function_name]	count=3
namespace	the document ||| solrinputdocument	count=1
arg_pair	the specified data using ||| string $data	count=1
function_name	error code ||| error	count=3
function_name	request a [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function	sets [arg_pair_2] ||| [function_name_1] min default frequency [arg_pair_2]	count=1
function_name	stride value ||| stride	count=1
function	changes size [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	no ||| mssql	count=2
arg_pair	of ||| float $beta int $channel	count=1
function_name	a subclass ||| subclass	count=1
function	[function_name_1] variables ||| [arg_pair_2] [function_name_1]	count=4
function_name	from [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	array var_array to the ||| int $max_table_length	count=1
function_name	object ||| sqlite	count=1
function_name	set a ||| xml set	count=1
return	to validate the ||| bool	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] replace [arg_pair_2]	count=2
function_name	the php ||| php	count=1
arg_pair	text in the ||| resource $pdfdoc string $text	count=1
function_name	range ||| range	count=4
function_name	by gettext() ||| textdomain	count=1
return	[return] pattern ||| [return]	count=2
function_name	character encoding ||| character	count=1
function	contents [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	objects default compression type ||| compression	count=1
function_name	previous tuple for the ||| dbplus prev	count=1
namespace	the hash in ||| quickhashintstringhash	count=1
function_name	extract ||| extract to	count=3
function_name	from an odbc ||| odbc	count=1
return	stored ||| void	count=1
function_name	supported key sizes ||| supported key sizes	count=3
function_name	raw characters of the ||| raw	count=2
namespace	by the msql ||| function	count=1
function_name	of ||| int	count=1
function_name	be dismax query ||| dis max query	count=1
return	gets the number of ||| int	count=1
function_name	a ||| run	count=1
function_name	optimizes ||| dba optimize	count=2
arg_pair	creates a directory ||| resource $sftp string $dirname	count=1
function_name	places ||| place pdi	count=1
return	current ||| void	count=2
function_name	fetches a row ||| fetch object	count=1
namespace	[namespace] ob_start() to ||| [namespace]	count=1
arg_pair	a timestamp and location ||| int $format	count=2
function_name	total width [function_name_2] ||| [function_name_2] text [function_name_1]	count=1
return	the path [return] the file ||| [return]	count=1
namespace	simulates ||| imagick	count=2
function_name	page geometry associated ||| page	count=2
function_name	text transformation matrix of ||| get text matrix	count=1
arg_pair	variable_name ||| string $variable_name	count=1
function	replaces the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	einer mime kopfzeile in ||| iconv mime	count=1
function_name	create ||| new	count=1
function_name	field number ||| field num	count=1
namespace	called ||| recursiveiteratoriterator	count=1
function_name	by php internally it ||| set	count=1
arg_pair	uri containing ||| string $uri string $encoding	count=1
function_name	field corresponding ||| filepro	count=1
function_name	the specified action ||| gupnp service action	count=1
return	the factor ||| float	count=1
namespace	be called after ||| evloop	count=1
function_name	stride ||| stride for	count=1
arg_pair	method scales the ||| int $height	count=1
function_name	minimum counts ||| min count	count=1
function_name	contours of [function_name] while still ||| reduce noise [function_name]	count=1
arg_pair	by the data ||| resource $connection_id	count=1
function_name	facet ||| set facet	count=3
function_name	returns the width ||| width	count=1
function_name	stores the result ||| file	count=1
function_name	weights ||| weights	count=2
namespace	if the current ||| splobjectstorage	count=1
function_name	input ||| input	count=3
function_name	[function_name_1] [function_name_2] and ||| [function_name_1] [function_name_2] resource $fd	count=1
function_name	[function_name_1] a handler ||| [function_name_1] start namespace decl [function_name_2]	count=1
function_name	id for the current ||| id	count=1
return	process created using ||| bool	count=1
function_name	current line [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] action for ||| [function_name_2] [function_name_1]	count=1
arg_pair	end [arg_pair] ||| [arg_pair]	count=1
function_name	the name of the ||| name	count=1
arg_pair	a ||| int $options int $limit	count=2
function_name	to return [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	result ||| fetch	count=1
function_name	the connection [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	attaches an ||| put int	count=2
return	used to read the ||| bool	count=1
function_name	a particular image ||| image	count=1
return	a result set object ||| sqlite3result	count=1
namespace	appearance ||| harudestination	count=3
function_name	called when iteration ||| iteration	count=2
arg_pair	a ||| string $dsn	count=1
function_name	the sunset time for ||| sunset	count=1
function_name	in the ||| get current	count=1
arg_pair	str with a ||| string $str string $patch	count=1
return	be ||| bool	count=1
function_name	from the current fbsql ||| fbsql	count=1
function_name	a textflow into ||| textflow	count=1
function_name	defines headers ||| headers	count=1
function_name	retrieves the specified action ||| gupnp service action get	count=1
arg_pair	and returns it as ||| string $class_name	count=1
function_name	retrieved by gearmanclient::context() ||| context	count=1
arg_pair	principal and the ||| string $principal string $password	count=1
function_name	bound ||| bound	count=1
function_name	cubrid [function_name_2] ||| [function_name_1] list [function_name_2]	count=1
namespace	simply stops and restarts ||| evperiodic	count=1
function_name	gets the blocksize ||| algo block size	count=1
function_name	frees the memory associated ||| free result	count=1
function_name	minimum error ||| sybase min error	count=2
arg_pair	result set listing the ||| string $schema string $table-name	count=2
function_name	the repository at ||| svn	count=1
function_name	[function_name_1] request headers ||| [function_name_1] [function_name_2]	count=1
arg_pair	in a file dest ||| string $new_file2 string $dest	count=1
function_name	[function_name_1] to bson ||| [function_name_2] [function_name_1]	count=2
return	releases the ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| int [function_name_1] facet [function_name_2]	count=1
namespace	searches the ||| function	count=1
return	which ||| solrquery	count=1
namespace	xml document ||| domdocument	count=1
namespace	to send to ||| mongocursorinterface	count=1
return	to get ||| string	count=1
function_name	padded ||| pad	count=1
function_name	[function_name_1] algorithm ||| [function_name_2] [function_name_1]	count=8
function_name	an ldap link identifier ||| ldap connect	count=1
function_name	text ||| text	count=11
namespace	is not for ||| oauth	count=1
return	code point is a ||| bool	count=1
function_name	flags set ||| flags	count=2
function_name	deletes ||| delete	count=5
function_name	current fill ||| fill	count=1
function_name	[function_name_1] element is ||| [function_name_2] [function_name_1]	count=1
return	an integer representing the ||| int	count=1
return	points to ||| bool	count=3
arg_pair	specified by execute ||| callable $execute int $pri	count=1
function_name	mode is [function_name_2] ||| [function_name_1] enc [function_name_2]	count=2
arg_pair	a query ||| string $sql	count=1
function_name	gets status information ||| imap status	count=2
function_name	attributes of ||| attributes	count=2
function_name	[function_name_1] size for ||| [function_name_2] [function_name_1]	count=2
namespace	a new quickhashintstringhash ||| quickhashintstringhash	count=1
arg_pair	a unique filename with ||| string $dir	count=1
arg_pair	use within sql statements ||| int $argument_count	count=1
return	components to ||| bool	count=1
function_name	encryption [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	all data from the ||| eventbuffer	count=1
arg_pair	row of the ||| resource $result_id int $row_number	count=1
function_name	total cache ||| total	count=2
arg_pair	by the hostname ||| string $hostname	count=1
arg_pair	specified algorithm ||| string $lib_dir	count=1
function_name	[function_name_1] local ||| [function_name_2] [function_name_1]	count=1
arg_pair	annotation ||| resource $pdfdoc float $lowerleftx	count=2
function_name	controller object ||| controller	count=1
arg_pair	whether the specified key ||| resource $handle	count=1
function	this function [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	identifier ||| fetch	count=1
function_name	the terms from ||| terms	count=1
function_name	rprop ||| rprop	count=2
function_name	image such that ||| image	count=1
return	look for a ||| void	count=1
arg_pair	of ||| float $connection_rate	count=1
function_name	the unicode name ||| name	count=1
function_name	a row ||| fetch assoc	count=1
function	[function_name_1] the ||| [function_name_1] min out epochs [arg_pair_2]	count=1
namespace	point is ||| intlchar	count=1
function_name	literal for ||| literal	count=1
function_name	activation steepnesses in ||| fann get cascade activation steepnesses	count=1
function_name	block algorithms otherwise ||| block algorithm	count=3
arg_pair	sends the given ||| resource $link	count=2
function	backup [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	style ||| int $first_page int $style	count=1
function_name	tokens to parse in ||| tokens	count=2
function_name	after remaining ||| immortal	count=1
function_name	absent index that ||| empty	count=2
namespace	file that cannot ||| pharfileinfo	count=1
function_name	[function_name_1] bit ||| [function_name_2] [function_name_1]	count=2
function_name	name [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	its titlecase equivalent ||| totitle	count=1
function_name	given [function_name] file ||| [function_name] validate	count=1
arg_pair	image specified by image ||| resource $image int $x	count=1
function_name	send soap [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	with db2_connect() and ||| db2	count=1
arg_pair	using the principal ||| string $password	count=1
function_name	[function_name] associated with ||| get [function_name]	count=1
function_name	network ||| fann set weight array	count=2
arg_pair	to htmlspecialchars() in ||| string $encoding bool $double_encode	count=1
function_name	specified socket ||| socket get	count=1
function_name	job servers that can ||| servers	count=1
function_name	csr and saves ||| csr export to	count=1
namespace	or continuing the event ||| evloop	count=1
function_name	register a [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	root device ||| gupnp root device	count=3
arg_pair	by fill ||| mixed $target mixed $fill	count=2
function_name	response xml ||| xml response	count=2
function_name	seconds since 1 ||| unixtojd	count=1
arg_pair	inverse of ||| int $options resource $compcode	count=1
function	tables [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	sets the max ||| set	count=1
function_name	virtual server ||| get server	count=1
function_name	a secondary member of ||| is secondary	count=1
function_name	real / imaginary image ||| image	count=1
arg_pair	removes the specified directory ||| resource $ftp_stream string $directory	count=1
function_name	bytecodes and initiates ||| bcompiler	count=1
return	hexadecimal [return] of ||| [return]	count=1
function_name	specified ||| mcrypt	count=1
arg_pair	from the specified dn ||| string $dn	count=2
arg_pair	at runtime ||| bool $status callable $failure_callback	count=1
function_name	number ||| fann get num	count=1
return	set if ||| bool	count=1
function_name	register local ||| register local namespace	count=2
function_name	register [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function	[function_name_1] and associated ||| [arg_pair_2] [function_name_1]	count=2
function_name	available ||| get available	count=1
arg_pair	acts very much like ||| string $username	count=2
function_name	ie makes it non-pending ||| del	count=1
return	the characters in the ||| bool	count=8
return	information stored ||| void	count=1
return	the number of elements ||| int	count=1
function_name	filter query determines ||| expand filter query	count=1
arg_pair	associates imagickpixel ||| int $cols	count=1
function_name	stride ||| stride for width	count=2
function_name	moves the ||| data seek	count=1
function_name	filter queries ||| filter queries	count=4
function_name	the constants currently ||| constants	count=1
arg_pair	source string into ||| int $flags	count=1
arg_pair	with ||| resource $root_device	count=1
function_name	and the given password ||| init with password	count=1
function_name	and another ||| eio sendfile	count=1
function_name	the pagination information ||| ldap control paged result response	count=1
function_name	only be ||| set	count=1
function_name	response from ||| response	count=1
function	filename that [arg_pair_2] ||| phar [function_name_1] [arg_pair_2]	count=4
function_name	multibyte ||| mb	count=2
function_name	time ||| immortal	count=1
function_name	a ||| ibase fetch	count=3
namespace	operators by ||| sphinxclient	count=1
arg_pair	the ||| resource $broker	count=2
function_name	font and its size ||| font and size	count=1
arg_pair	whenever a change ||| string $value	count=1
return	to ||| float	count=1
function_name	replaces ||| array replace	count=3
function_name	an xml string ||| xml	count=1
function_name	get the file size ||| size	count=1
arg_pair	a ||| string $fk_table	count=1
arg_pair	memcached::replace() ||| int $expiration	count=1
namespace	of [namespace] an integer ||| [namespace]	count=1
function_name	returns the data ||| offset get	count=1
function_name	a random ||| random	count=1
arg_pair	the associative or indexed ||| int $enc_type	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] nonce [function_name_2]	count=4
namespace	a given font ||| function	count=1
arg_pair	and challenge using specified ||| resource $privkey string $challenge	count=1
return	for ||| string	count=4
function_name	fit the width of ||| fit	count=1
function_name	the first ||| first	count=2
function_name	returns the number of ||| num	count=1
arg_pair	match for a ||| string $pattern	count=1
arg_pair	code points start ||| mixed $start	count=1
return	while it is running ||| bool	count=1
function_name	with existing information stored ||| set	count=1
arg_pair	by hostname ||| string $hostname int $port	count=1
function_name	declaring [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	parse the string ||| parse	count=1
function	[function_name_1] whitespace ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name] centered at ||| [function_name]	count=6
namespace	the image list specified ||| imagick	count=1
function_name	individual threshold for ||| adaptive threshold	count=1
function_name	get ||| database	count=1
return	for an ||| int	count=1
arg_pair	string what ||| string $what int $start	count=1
arg_pair	array or something ||| mixed $array_or_countable	count=1
function_name	socket ||| socket name	count=2
function_name	to be dismax query ||| use dis max query	count=1
namespace	a domdocument object ||| domdocument	count=1
namespace	in parallel ||| gearmanclient	count=1
namespace	entry was ||| quickhashinthash	count=1
function_name	look for suitable snippets ||| set highlight max analyzed chars	count=1
function_name	the compression method ||| set compression	count=1
namespace	the buffer ||| eventbuffer	count=3
function_name	endpoints where ||| endpoints	count=1
arg_pair	pattern for the ||| int $phase	count=1
function_name	the version ||| get version	count=1
function_name	the time zone corresponding ||| geoip time zone	count=1
function_name	0600 ||| tempnam	count=1
function_name	names of ||| property names	count=1
function_name	highlighted version of ||| highlight	count=1
function_name	creating ||| get active	count=1
return	the end of array ||| int	count=1
function	query [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	the persistence state ||| persistence	count=1
namespace	which occurred in ||| function	count=1
namespace	this call ||| gearmanclient	count=1
arg_pair	fd ||| int $mode	count=1
function_name	printable ||| printable encode	count=2
function_name	returns a ||| mysqlnd qc get	count=1
function_name	failure ||| cubrid	count=1
function_name	the server host name ||| mysql get host	count=1
namespace	for production environments ||| oauth	count=1
function_name	a similarity image ||| image	count=1
function_name	internally it shouldnt ||| state	count=1
function_name	true if [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	posted ||| string $event_name2	count=1
namespace	and the database has ||| mongocursorinterface	count=1
function_name	exists or ||| exists	count=1
function_name	one of [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	to return the terminal ||| void	count=1
function_name	as ||| ibase fetch	count=1
function_name	and right image ||| image	count=1
function_name	user ||| callback	count=2
function_name	output stagnation [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	name of the ||| int $field_offset	count=3
function_name	[function_name_1] the upper ||| [function_name_2] [function_name_1]	count=3
function_name	version number [function_name_1] [function_name_2] linked with ||| [function_name_1] [function_name_2] version	count=1
function_name	error returned ||| bzerrstr	count=1
function	filename that [arg_pair_2] ||| phar [function_name_1] string $filename [arg_pair_2]	count=1
function_name	method [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| run	count=1
function_name	a named virtual read-only ||| pvf	count=1
function_name	next tuple for the ||| dbplus next	count=1
function_name	for suitable ||| max analyzed chars	count=1
arg_pair	a rpc call but ||| string $uri string $method	count=1
function_name	epochs the ||| epochs	count=2
arg_pair	filter to ||| float $radius	count=1
function_name	get unpacked [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	the [namespace] on the ||| [namespace]	count=1
namespace	the ||| gearmanclient	count=1
namespace	the ||| evperiodic	count=1
return	error string of ||| string	count=1
function_name	miter limit ||| get miter limit	count=2
arg_pair	a ||| string $text	count=1
function_name	binds ||| bind param	count=2
namespace	appends ||| harupage	count=3
function_name	server version ||| version	count=1
function_name	matches color ||| paint opaque	count=1
function_name	tokens ||| tokens	count=2
arg_pair	given xpath expression ||| domnode $contextnode	count=1
function_name	remaining ||| immortal	count=1
function_name	controller ||| controller	count=1
arg_pair	the database name ||| string $database	count=1
namespace	the document ||| function	count=1
namespace	the class constructor ||| reflectionclass	count=1
function_name	depth as a ||| depth	count=1
return	that ||| void	count=1
return	whether or ||| bool	count=4
function_name	[function_name_1] class for ||| [function_name_2] [function_name_1]	count=2
return	be called after ||| void	count=1
function_name	[function_name_1] runs the ||| [function_name_2] [function_name_1]	count=1
function_name	query executed using ingres_query() ||| ingres fetch assoc	count=1
function_name	can change color ||| can change color	count=3
arg_pair	state of ||| resource $pdfdoc int $textflow	count=1
namespace	[namespace] is ||| [namespace]	count=3
return	size at the ||| bool	count=1
function_name	call starts running ||| run	count=1
function_name	get the static ||| get static	count=2
arg_pair	opcode with ||| callable $callable	count=1
arg_pair	of the data that ||| int $row_number	count=1
function_name	used to [function_name] ||| cubrid [function_name] export	count=1
function_name	bezier curve ||| curve to3	count=1
function_name	parses an [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	traverse over ||| snmprealwalk	count=1
function_name	the version of ||| version	count=1
function_name	[function_name] this ||| get [function_name]	count=1
return	by ||| mongoid	count=2
arg_pair	at ||| int $left int $top	count=1
arg_pair	if the word is ||| string $word	count=2
function_name	row as ||| ibase fetch object	count=1
function_name	strcasecmp() ||| strncasecmp	count=1
arg_pair	table_name ||| string $table_name	count=1
function_name	libeio ||| eio event	count=1
return	or ||| bool	count=9
namespace	some ||| mongocursor	count=1
arg_pair	has been defined ||| bool $autoload	count=1
function	[function_name_1] key to ||| [function_name_1] [arg_pair_2]	count=3
namespace	evidle ||| evidle	count=1
function_name	[function_name_1] default domain ||| [function_name_2] [function_name_1]	count=1
arg_pair	that the item will ||| mixed $value	count=1
arg_pair	filter filtertype ||| resource $image int $filtertype	count=1
function_name	access ||| get access	count=1
namespace	plugin ||| yaf_plugin_abstract	count=2
return	without performing filling and ||| bool	count=1
arg_pair	returns a string ||| string $number	count=1
function_name	nonce [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the french republican ||| frenchtojd	count=1
return	contents directly to ||| bool	count=1
return	as [return] turns ||| [return]	count=1
namespace	the last query executed ||| function	count=1
function_name	the boost value for ||| boost	count=1
function_name	returns the state variable ||| get state variable	count=1
function_name	[function_name_1] background ||| [function_name_2] [function_name_1]	count=2
arg_pair	array1 with values having ||| array $array1	count=1
function_name	minimum document frequency ||| min default frequency	count=1
arg_pair	a php ||| string $json	count=1
function_name	to escape certain ||| ingres escape	count=1
function_name	the [function_name] write performed ||| [function_name] gtid	count=1
function_name	field which should ||| field	count=1
function_name	current column [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	tag [arg_pair_2] ||| [function_name_1] string $filename [arg_pair_2]	count=1
arg_pair	training of the output ||| int $neurons_between_reports	count=1
function_name	[function_name_1] executable ||| [function_name_1] [function_name_2]	count=1
arg_pair	host and port are ||| string $host int $port	count=1
function_name	merges the elements ||| merge	count=2
function_name	creates an html document ||| htmlfile	count=1
function_name	no [function_name] ||| [function_name] clear error	count=2
function_name	maximum document frequency ||| terms max	count=1
arg_pair	on ||| resource $stream_or_context array $params	count=1
function_name	returns the current ||| current	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] iv [arg_pair_2]	count=1
function_name	a file that cannot ||| set	count=1
function_name	line width ||| line width	count=4
function_name	non-empty language ||| enchant broker	count=1
function_name	a record [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	layer for subsequent output ||| layer	count=1
arg_pair	of the ||| int $green int $blue	count=1
namespace	the sec field ||| mongotimestamp	count=1
arg_pair	oid of the instance ||| resource $conn_identifier string $oid	count=1
arg_pair	of insert operations ||| array $write_options	count=1
function_name	the maximum ||| fann get cascade max cand	count=1
function_name	extrema for [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	[function_name_1] by ibase_blob_close() ||| [function_name_1] blob [function_name_2]	count=3
function_name	t61 ||| t61	count=1
function_name	returns the sunset ||| sunset	count=1
function_name	subset of ||| fann subset	count=1
return	process ||| string	count=1
function_name	the [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	real [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	specified status callback set ||| task status	count=1
function	algorithms otherwise [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	a id3v2 object ||| id3v2 tag	count=1
function_name	[function_name_1] maximum ||| [function_name_2] [function_name_1]	count=2
return	be ||| string	count=1
function	training data [arg_pair_2] ||| [function_name_1] from callback [arg_pair_2]	count=1
function_name	function socket_sendto() sends ||| sendto	count=1
arg_pair	expression match for a ||| string $pattern string $option	count=1
function_name	resets the internal ||| firstkey	count=1
function_name	returns a normalized ||| mysqlnd qc get normalized	count=1
function_name	[function_name_1] functions ||| [function_name_2] [function_name_1]	count=3
arg_pair	list of servers that ||| int $port	count=1
function_name	from a ||| ibase	count=1
function_name	the minimum ||| fann get cascade min cand	count=1
function	[function_name_1] of working ||| [function_name_1] [arg_pair_2]	count=3
function_name	span ||| normalize	count=1
return	or set the ||| string	count=1
function_name	type corresponding to ||| geoip	count=1
function_name	placeholder name ||| array by name	count=1
namespace	in ||| pharfileinfo	count=1
namespace	gearmanclient::addtaskbackground() ||| gearmanclient	count=1
arg_pair	batch of insert operations ||| array $write_options	count=1
function_name	record in ||| yaz record	count=1
arg_pair	a per mailbox ||| string $quota_root	count=1
function_name	linear least squares ||| least squares	count=4
function_name	activation steepnesses in the ||| activation steepnesses count	count=1
function_name	contrast of a color ||| contrast	count=1
arg_pair	database name used ||| string $database	count=1
function_name	ingres [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	that the [namespace] failed in ||| [namespace]	count=1
function_name	cannot be represented ||| metadata	count=1
function_name	virtual server ||| server by	count=1
return	and other functions ||| resource	count=1
function_name	charcoal drawing ||| charcoal	count=1
function_name	point [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	from a user-defined ||| get arg	count=1
function_name	inner iterators [function_name] contained ||| get [function_name]	count=1
function_name	raw characters of ||| raw	count=2
function_name	the maximum [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] alpha channel ||| [function_name_1] [function_name_2]	count=2
function_name	except that file_get_contents() returns ||| file get contents	count=1
function_name	action ||| action	count=6
arg_pair	specified by assoc_array which ||| array $assoc_array	count=1
arg_pair	a given value ||| int $property	count=1
namespace	the ||| mongocursorinterface	count=3
function_name	collating ||| collation	count=1
function_name	set query [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	name yaf_loader search classes ||| yaf_loader	count=1
arg_pair	the watcher automatically ||| int $priority	count=1
return	with a column having ||| mixed	count=1
return	suitable [return] cryptographic ||| [return]	count=1
function_name	sarprop step error shift ||| sarprop step error shift	count=2
namespace	the page ||| harupage	count=3
namespace	user-defined class definition ||| reflectionclass	count=1
function_name	[function_name_1] debug output ||| [function_name_2] [function_name_1]	count=1
arg_pair	memcached::get() except ||| callable $cache_cb	count=1
function_name	the queries ||| delete by queries	count=1
function_name	[function_name_1] one ||| [function_name_1] [function_name_2]	count=10
arg_pair	to maxlength bytes and ||| int $maxlength	count=1
arg_pair	using the principal ||| string $principal	count=1
function_name	directory ||| directory	count=3
arg_pair	display a result pdf ||| string $frame_name	count=1
function_name	from ||| with	count=1
function_name	defined functions in the ||| functions	count=1
function_name	row as a ||| ibase fetch	count=1
namespace	the id3v2 tag ||| ktaglib_id3v2_tag	count=1
namespace	this method ||| splfileinfo	count=1
function_name	cursors ||| immortal	count=1
function_name	is used to ||| cubrid load	count=1
function_name	raw [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	anchor point [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	apcs data ||| bool $limited	count=1
arg_pair	statement resource ||| int $parameter-number	count=1
namespace	retrieves the file ||| splfileinfo	count=1
function_name	encoding the content ||| encoding	count=1
function_name	training not to stagnate ||| fann get	count=2
function_name	from previous frontbase operation ||| fbsql errno	count=1
function_name	internet host specified ||| gethostbyaddr	count=1
function_name	extended attribute ||| xattr	count=2
function_name	[function_name] url repos_url ||| [function_name]	count=3
arg_pair	on the local filesystem ||| resource $connection int $oid	count=1
function_name	use w3c xsd schema ||| schema	count=1
function_name	[function_name_1] into file ||| [function_name_2] [function_name_1]	count=2
arg_pair	a ||| mixed $expression	count=1
function_name	set the flags ||| flags	count=1
function_name	external entity [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	filling color [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	row of the ||| int $row_number	count=1
function	reference of [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] should terminate ||| [function_name_1] [function_name_2]	count=1
function_name	format of mbox names) ||| imap renamemailbox	count=1
namespace	function allows you ||| function	count=1
function_name	the current cipher by ||| get cipher	count=1
function_name	boost value ||| get boost	count=1
arg_pair	of the specified ||| int $width	count=1
function_name	configuration information about ||| configuration	count=1
function_name	next index ||| next	count=1
arg_pair	a ||| string $name	count=6
arg_pair	stored of ||| int $version	count=1
arg_pair	sql statement and returns ||| string $sql	count=1
function_name	by openssl_pkey_new() ||| openssl pkey	count=1
function_name	register your ||| register node	count=1
namespace	the [namespace] number ||| [namespace]	count=1
function_name	slop on [function_name_2] ||| [function_name_2] [function_name_1] string $slop	count=4
function_name	user-defined as opposed ||| user defined	count=1
arg_pair	and returns the oid ||| resource $connection	count=1
arg_pair	mangled for security reasons ||| resource $radius_handle string $mangled	count=1
function_name	maximum step-size may be ||| rprop delta max	count=1
function_name	the sarprop ||| sarprop	count=4
return	to specify the ||| bool	count=1
function_name	libevent and [function_name] for ||| [function_name]	count=1
return	a row as a ||| object	count=1
function_name	on the left ||| str	count=1
arg_pair	fd [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	after sending all pending ||| all	count=1
function_name	with the ||| fbsql database	count=1
arg_pair	a file ||| string $new_file2	count=1
function_name	the route ||| get current route	count=1
function_name	string to place after ||| get postfix	count=1
return	the page to ||| bool	count=3
arg_pair	of the input ||| array $input	count=1
namespace	creates a new ||| mongodate	count=1
function_name	result row ||| odbc fetch	count=2
function_name	returns ||| get iterator	count=1
arg_pair	the input ||| int $pad_length	count=1
function	backup [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	each element ||| recursivetreeiterator	count=1
function_name	config used ||| pspell config	count=1
namespace	restarts ||| evperiodic	count=1
function_name	returns the sunrise time ||| date sunrise	count=1
function_name	socket ||| socket	count=21
function_name	fit [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	base type name ||| field type	count=2
function_name	each layer in the ||| get layer array	count=1
function_name	to ||| set metadata	count=2
function_name	discards all but one ||| colors	count=1
function_name	opened algorithm ||| mcrypt enc get	count=1
function_name	directory ||| dir	count=4
function_name	places ||| pdf place	count=1
function_name	real path ||| real path	count=2
function_name	state [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	usually of the same ||| int $method array $arguments	count=1
function_name	priority ||| pcntl getpriority	count=1
arg_pair	memcached::getdelayed() ||| callable $value_cb	count=1
function_name	the last ||| dbplus last	count=1
function_name	matches color ||| paint opaque image	count=1
function_name	[function_name_1] ldap command ||| [function_name_2] [function_name_1]	count=8
function_name	idle [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	into the ||| function	count=1
function_name	minimum number ||| cascade min cand	count=1
return	with any ||| resource	count=1
arg_pair	object_id and ||| int $timeout	count=1
function_name	cache [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	descriptor at offset ||| int $offset int $pri	count=1
function_name	read the structure of ||| imap bodystruct	count=1
function_name	calculates the vector subtraction ||| sub	count=1
function_name	of next ||| next	count=1
function_name	non-empty language ||| broker	count=1
arg_pair	what ||| int $start	count=1
function_name	this returns the ||| get	count=1
arg_pair	jd into a ||| int $jd	count=1
function_name	the group [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	gets the priority ||| pcntl getpriority	count=1
arg_pair	treats array as a ||| mixed $value1	count=1
function_name	table into file ||| file	count=1
function_name	elapsed time for ||| last elapsed time	count=1
arg_pair	sql statement ||| string $sql	count=2
function_name	the error message ||| error	count=1
function_name	line to be ||| line	count=1
function	given interface [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=2
arg_pair	domain for a ||| string $domain	count=1
function_name	creates an ldap ||| ldap	count=1
arg_pair	given name and country ||| string $name integer $country	count=1
arg_pair	timestamp and ||| int $timestamp	count=2
function_name	internal information ||| internal info	count=6
function_name	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or ||| run	count=1
function_name	structure of a specified ||| imap bodystruct	count=1
return	of the ||| string	count=2
return	to standard output ||| bool	count=1
function_name	an webp version of ||| imagewebp	count=1
return	from the buffer ||| bool	count=1
function_name	[function_name_1] readable ||| [function_name_2] [function_name_1]	count=1
function_name	current text object ||| end text	count=1
function	blocking [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] next [function_name_2]	count=1
function_name	required oauth [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	internet ||| function	count=1
function_name	a stopped instance ||| stopped	count=1
function_name	[function_name_1] outputs blocks ||| [function_name_2] [function_name_1]	count=10
function_name	value of ||| get	count=1
function_name	with field ||| oci field	count=1
function_name	closes ||| bzclose	count=1
function_name	ldap directory ||| ldap	count=4
function_name	lower [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	extracts/decodes a ||| msg extract part file	count=1
function_name	key of the database ||| dba	count=1
function_name	bitwise exclusive or xor ||| xor	count=1
function_name	encoded string and ||| decode	count=1
arg_pair	to a file ||| string $pathname string $mode	count=1
function_name	true if the ||| module is	count=1
return	with a ||| mixed	count=1
function_name	from the buffer ||| add buffer	count=1
function_name	appends ||| append	count=3
namespace	image by ||| gmagick	count=1
namespace	solrdocument ||| solrdocument	count=2
function_name	returns string describing the ||| get	count=2
function_name	o_nonblock flag ||| set block	count=1
function_name	returns a [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	stored in the result ||| next entry	count=1
function_name	a ||| set	count=2
function_name	list of all ||| mcrypt list	count=1
function_name	[function_name_1] dismax ||| [function_name_2] [function_name_1]	count=8
arg_pair	data [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	get the short name ||| get short name	count=1
arg_pair	row record ||| int $row	count=1
arg_pair	is the inverse of ||| int $options	count=1
function_name	imap or nntp server ||| imap reopen	count=1
arg_pair	the ||| int $imageid	count=1
function_name	a file ||| set	count=2
arg_pair	namespaceuri named localname from ||| string $namespaceuri string $localname	count=1
function_name	activation function for neuron ||| get activation function	count=1
function_name	from the specified ftp ||| ftp	count=1
arg_pair	row ||| int $row	count=1
arg_pair	specified opcode with ||| int $opcode	count=1
function_name	determines the maximum ||| get cascade max	count=1
namespace	function closes a db2 ||| function	count=1
function_name	message ||| imap	count=1
function_name	portion ||| substr	count=1
arg_pair	from fd [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=1
function_name	spelling alternatives ||| enchant dict quick	count=1
function_name	writes ||| import	count=1
arg_pair	access the system v ||| int $perm int $auto_release	count=1
function	fetches [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	from [namespace] including inherited ||| [namespace]	count=1
function_name	stream context ||| stream context	count=2
function_name	directory ||| zip	count=2
function_name	handler for the ||| handler	count=1
arg_pair	as a magnitude / ||| string $magnitude	count=1
function_name	html ||| html	count=2
namespace	it ||| mongoid	count=1
function_name	row and moves ||| mssql fetch	count=1
function_name	[function_name_1] delay ||| [function_name_2] [function_name_1]	count=1
arg_pair	a server with ||| resource $id array $config	count=1
function_name	[function_name_1] proxy object ||| [function_name_1] [function_name_2]	count=1
return	gives the number of ||| int	count=1
function_name	of the route ||| get current	count=1
function_name	number of similar documents ||| mlt count	count=1
function_name	path for a ||| get dict path	count=1
arg_pair	a server ||| string $namespace	count=1
function_name	returns the data ||| get	count=1
function_name	get the current text ||| text	count=1
function_name	sets the target ||| fdf set target	count=3
return	> value ||| mixed	count=1
function_name	field ||| field	count=35
function_name	inserts ||| pg insert	count=2
function_name	result ||| odbc	count=2
function_name	should specify a callback ||| replace callback	count=1
function_name	any ||| flush	count=1
namespace	function tries to ||| function	count=1
function_name	restore the ||| restore	count=1
arg_pair	of working ||| int $flags	count=1
function_name	allocates or initializes a ||| maxdb init	count=1
function_name	[function_name_1] color definitions ||| [function_name_1] [function_name_2]	count=2
function_name	objects default compression ||| compression	count=2
function_name	gets the number ||| pdf get	count=1
arg_pair	if no database is ||| mixed $id	count=1
return	added ||| bool	count=1
function_name	of the base type ||| field type	count=1
function_name	row ||| ibase fetch	count=1
arg_pair	path to the ||| string $path	count=1
function	mode for [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	affected by the sql ||| affected	count=1
function_name	creates a new ||| content new	count=1
function_name	main filter ||| expand filter	count=1
function_name	chromaticity white point as ||| white point	count=1
function	[function_name_1] a write ||| [function_name_1] [arg_pair_2]	count=1
function_name	commits the ||| commit	count=1
namespace	this function ||| function	count=75
function_name	[function_name_1] by ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] the ||| [function_name_1] mode [arg_pair_2]	count=1
function_name	minimum word length ||| mlt min word length	count=1
function_name	set the bit ||| set bit	count=3
function_name	file that cannot ||| set	count=1
arg_pair	the specified ||| int $cursor_type mixed $blobidarray	count=1
function_name	of days in ||| cal days in	count=2
return	use for the connection ||| string	count=1
return	through to the ||| bool	count=1
return	in [return] ||| [return]	count=2
arg_pair	at a specified offset ||| int $offset int $length	count=1
function_name	[function_name_1] record into ||| [function_name_1] [function_name_2]	count=1
namespace	the content ||| hw_api_content	count=1
function_name	finds whether ||| is select	count=1
function_name	inode change time for ||| get ctime	count=1
return	called after ||| void	count=1
function_name	image rendering intent ||| image rendering intent	count=3
return	[return] different activation ||| [return]	count=1
arg_pair	using connection and ||| resource $connection	count=1
arg_pair	a socket stream or ||| mixed $socket	count=1
function_name	[function_name_1] children ||| [function_name_1] [function_name_2]	count=3
function_name	ticks for ||| ticks	count=1
function_name	[function_name_1] resource ||| [function_name_2] [function_name_1]	count=10
function_name	the train ||| input train	count=1
function_name	fills the ||| ps fill	count=1
function_name	rolls back ||| rollback	count=2
arg_pair	watcher object and ||| mixed $data int $priority	count=1
function_name	sets ||| offset set	count=4
function_name	stopped ||| stopped	count=4
function_name	erases a ||| erase	count=1
arg_pair	a result ||| string $frame_name	count=1
function_name	sets ||| set	count=150
function_name	returns the sunset ||| date sunset	count=1
arg_pair	an enumerated or integer ||| mixed $codepoint int $property	count=1
function_name	java ||| java	count=2
function_name	whether to ||| is select	count=1
namespace	as a ||| function	count=1
namespace	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or ||| gearmanclient	count=1
function_name	image with the ||| image	count=1
return	monitored events ||| bool	count=1
function_name	maximum ||| max	count=15
function_name	this function creates ||| create entity	count=1
function_name	string containing the options ||| options	count=1
function	vector subtraction [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	fetches a ||| ibase	count=1
function_name	[function_name_1] error shift ||| [function_name_2] [function_name_1]	count=8
function_name	in base ||| base	count=1
arg_pair	flag to the ||| int $options	count=1
function_name	[function_name_1] data from ||| [function_name_1] [function_name_2]	count=1
function_name	maximum number ||| set highlight max	count=1
function_name	the resulting ||| trader	count=4
function	divides a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	the ||| int $to_neuron	count=1
function_name	field which should be ||| field	count=1
return	or ||| string	count=1
arg_pair	specified class ||| mixed $class string $property	count=1
function	factor used [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	much [function_name] while your ||| [function_name]	count=1
function_name	expand filter queries ||| expand filter queries	count=3
arg_pair	given field ||| string $fieldname	count=4
function_name	[function_name] is a ||| fann get quickprop [function_name]	count=1
namespace	a line from ||| splfileobject	count=1
function_name	to request [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	zip archive ||| archive	count=1
function_name	quantum depth as ||| quantum depth	count=2
function_name	removes ||| remove all	count=1
function_name	node [function_name] a string ||| transform [function_name]	count=1
function_name	be used to ||| debug	count=1
function_name	may ||| get	count=1
function_name	error shift ||| error shift	count=4
namespace	entries by ||| arrayiterator	count=1
function_name	stream of the document ||| stream	count=1
return	to prepare ||| bool	count=2
function_name	the number of ||| mysqli field count	count=1
function_name	sets ||| set gravity	count=1
function	[function_name_1] other useful ||| [function_name_1] info [arg_pair_2]	count=2
function_name	shouldnt need to ||| set state	count=1
function_name	specify a [function_name] ||| add facet date [function_name]	count=3
arg_pair	a variable can ||| mixed $var bool $syntax_only	count=1
arg_pair	entry specified by dn ||| string $dn	count=1
namespace	checks ||| iteratoriterator	count=1
arg_pair	the ||| int $filters	count=1
namespace	for safe inclusion in ||| sqlite3	count=1
function_name	traverse over a ||| snmprealwalk	count=1
namespace	this ||| gearmanclient	count=1
function_name	containing the options ||| options	count=1
function_name	returns true if ||| mcrypt module is	count=1
function_name	and [function_name] specified ||| [function_name] image channel distortion	count=1
arg_pair	array or something in ||| mixed $array_or_countable	count=1
function_name	imported [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	png image ||| imagepng	count=1
function_name	text [function_name_2] ||| [function_name_1] [function_name_2]	count=12
function_name	affected rows in a ||| affected rows	count=1
arg_pair	list of servers ||| int $port	count=1
arg_pair	a directory ||| string $dirname	count=1
function_name	a new image ||| new pseudo image	count=1
function_name	server host name ||| get host	count=1
arg_pair	mailbox currently opened in ||| string $criteria	count=1
function_name	candidate ||| cascade candidate	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=4
arg_pair	php variable with a ||| mixed $variable int $type	count=1
function_name	the miter limit ||| miter limit	count=1
function_name	current ||| get	count=6
function_name	affected by the last ||| affected	count=2
function_name	specific feature ||| has feature	count=1
namespace	api [namespace] which threw ||| [namespace]	count=1
function_name	with bind_textdomain_codeset() ||| codeset	count=1
return	[return] position of ||| [return]	count=2
arg_pair	a file ||| string $filename string $name	count=1
function_name	called ||| loop	count=1
function_name	queryparser to be dismax ||| use dis max	count=1
function_name	transforms the ||| transform	count=1
function_name	[function_name_1] standard ||| [function_name_1] [function_name_2]	count=2
function_name	sybase server ||| sybase	count=1
arg_pair	by the object_id ||| string $object_id string $type	count=2
function_name	row and ||| mssql fetch	count=1
arg_pair	by dirname ||| resource $context	count=1
function_name	syntax highlighted version of ||| highlight	count=1
function_name	list ||| list	count=4
function_name	einer mime kopfzeile in ||| mime encode	count=1
arg_pair	the gray ||| resource $psdoc float $gray	count=1
function_name	retrieve ||| libxml	count=1
function	[function_name_1] file and ||| [arg_pair_2] [function_name_1]	count=1
namespace	exists and ||| function	count=3
return	to send to the ||| bool	count=1
function_name	current thread ||| thread id	count=1
function_name	cipher methods ||| cipher methods	count=2
function_name	the type ||| get type	count=1
function_name	for ||| stmt	count=1
function_name	image background color ||| image background color	count=3
arg_pair	the current state of ||| resource $pdfdoc int $textflow	count=1
arg_pair	of service needed from ||| int $service_level_option mixed $option_value	count=1
function_name	text into the file ||| to file	count=1
function_name	saves its ||| export	count=1
function_name	from a given ||| fetch object	count=1
function_name	scaling the image ||| image	count=1
function_name	sets the candidate limit ||| set cascade candidate limit	count=1
arg_pair	[arg_pair_1] the object_id ||| [arg_pair_1] [arg_pair_2] string $retries	count=1
function_name	zone ||| zone	count=1
function_name	sets a function to ||| set	count=1
function_name	existing information stored with ||| set metadata	count=1
namespace	with existing information ||| pharfileinfo	count=1
function_name	sets ||| set location	count=1
function_name	creates an index ||| create index	count=3
function_name	epochs determines the minimum ||| min cand	count=1
return	image to ||| bool	count=1
arg_pair	a target within the ||| int $page	count=1
function	[function_name_1] field fieldname ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	containing a reconstructed ||| int $metric	count=1
return	used to change the ||| bool	count=1
function_name	this sets a ||| set	count=1
return	this ||| bool	count=4
arg_pair	at the position indicated ||| int $left	count=1
function_name	all open connections and ||| connections	count=1
arg_pair	from the ||| resource $image	count=1
arg_pair	after ||| resource $fdf_document string $fieldname	count=1
function_name	passed string would match ||| fnmatch	count=1
function_name	the scale ||| scale	count=2
function_name	subset of [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] mode on ||| [arg_pair_2] [function_name_1]	count=2
return	is used to get ||| string	count=1
return	[return] write operation ||| [return]	count=3
function_name	network from a ||| fann create from	count=1
function_name	fetch dns resource ||| dns get	count=1
arg_pair	queries the ||| string $keyword	count=1
return	returns a [return] of ||| [return]	count=1
function	the priority [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	collating function within sql ||| collation	count=1
arg_pair	the ||| int $color	count=1
function_name	sets the image composite ||| set	count=1
function_name	merges the data ||| merge	count=1
arg_pair	to memcached::getmulti() ||| string $cas_tokens	count=1
function_name	returns the ||| offset get	count=1
function_name	cursors by ||| immortal	count=1
function_name	usual ssl peer certificate ||| disable sslchecks	count=1
arg_pair	for a truetype text ||| string $fontfile string $text	count=1
function_name	scales the inputs and ||| scale	count=1
function_name	sets bigram phrase ||| set bigram phrase	count=6
function_name	background ||| background	count=1
function_name	php ||| set state	count=2
function_name	by generating a cryptographic ||| openssl sign	count=1
function_name	returns the product of ||| product	count=1
namespace	for the ||| function	count=1
function_name	returns the [function_name] ||| [function_name]	count=1
arg_pair	by fd to ||| mixed $fd	count=1
function	the scale [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	memcache server ||| memcached	count=2
namespace	with existing ||| pharfileinfo	count=1
function_name	filter ||| filter	count=8
function_name	attribute [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] pixels ||| [function_name_2] [function_name_1]	count=1
namespace	type is a ||| reflectiontype	count=1
arg_pair	database ||| string $database	count=4
function_name	[function_name_1] [function_name_2] send to ||| mysqlnduhconnection bool simple [function_name_2] [function_name_1]	count=3
function_name	name from a ||| name	count=1
function_name	extended json string to ||| mongo db\bson\from json	count=1
function_name	[function_name_1] stagnation epochs ||| [function_name_2] [function_name_1]	count=2
arg_pair	the word is ||| string $word	count=2
function_name	socket created by ||| socket	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] start [function_name_2]	count=1
return	get or ||| string	count=1
function_name	handle into a mysqlnd ||| mysqlnd uh convert to mysqlnd	count=1
arg_pair	explicit options to an ||| resource $pdfdoc	count=1
function_name	the given record ||| record	count=1
return	control points to ||| bool	count=1
arg_pair	on the local filesystem ||| resource $connection	count=1
function_name	compression method of ||| compression	count=1
function_name	expand filter ||| expand filter	count=2
function_name	for the ||| stmt	count=1
namespace	get the ||| arrayiterator	count=1
namespace	used with the ||| function	count=1
arg_pair	of left to ||| mixed $left	count=1
namespace	provided ||| eventbuffer	count=1
function_name	on [function_name] ||| [function_name] sftp lstat	count=1
namespace	checks ||| splfixedarray	count=1
function_name	candidate ||| candidate	count=1
function_name	suitable for maxdb_options() ||| maxdb	count=1
namespace	in the dump directory ||| function	count=1
function_name	an offset ||| offset	count=2
function_name	saves a png ||| imagepng	count=1
function_name	a normalized [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name] without clearing ||| [function_name] get	count=1
function_name	message [function_name_2] ||| [function_name_1] mime [function_name_2]	count=1
return	used to ||| string	count=2
namespace	new timestamp ||| mongotimestamp	count=1
function_name	timeout ||| timeout	count=10
return	mechanism if session ||| bool	count=1
function_name	starts event loop for ||| loop	count=1
function_name	required oauth provider ||| required	count=1
return	this call starts running ||| bool	count=1
function_name	get the owner ||| owner	count=1
function_name	but the field type ||| fbsql field type	count=1
namespace	string and as a ||| gmagick	count=1
namespace	iterator ||| apciterator	count=1
function_name	creates ||| create entity reference	count=1
function_name	border color for all ||| border color	count=1
function	extract all [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	to the socket ||| socket	count=1
function_name	word [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	closes [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	page definition ||| reset image page	count=2
return	the status of ||| int	count=1
arg_pair	returns the input ||| string $input	count=1
function_name	fetches the ||| fetch	count=2
function_name	[function_name_1] interword ||| [function_name_2] [function_name_1]	count=6
function_name	document frequency to return ||| terms	count=1
arg_pair	a query for execution ||| string $query	count=1
arg_pair	value of an ||| string $value	count=3
function_name	stub written in ||| get stub	count=1
namespace	argument and returns the ||| function	count=1
function_name	or an empty ||| string	count=1
return	database has ||| bool	count=1
function_name	display ||| display	count=1
function_name	next ||| next	count=14
namespace	of ||| yaf_router	count=1
function_name	table databases ||| put nr	count=1
return	a set of ||| bool	count=1
function_name	[function_name_1] logo using ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] outfilename ||| [function_name_1] [arg_pair_2]	count=2
function_name	that follows the ||| snmp2 getnext	count=1
arg_pair	specified tcp_server eg ||| int $socket_type	count=1
function_name	is the default namespace ||| default namespace	count=1
function_name	opens the ||| open	count=1
arg_pair	fields if a ||| string $fieldvalue	count=1
function_name	[function_name_1] text number ||| [function_name_2] [function_name_1]	count=2
namespace	domdocument ||| domdocument	count=2
function	[function_name_1] a ||| [function_name_1] processing instruction [arg_pair_2]	count=1
return	pointed [return] ||| [return]	count=2
function_name	with an url ||| connect with url	count=1
function_name	an sql aggregate function ||| aggregate	count=1
function_name	with gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| run	count=1
arg_pair	a key-value ||| mixed $keys	count=1
function_name	job [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	steepness for all ||| steepness	count=1
function_name	the time zone ||| time zone by	count=2
function_name	file_get_contents() except that stream_get_contents() ||| contents	count=1
function_name	database specified with ||| dba	count=1
function_name	places [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	a ||| string $gtrid	count=2
function_name	private ||| x509 check private	count=1
function_name	text object ||| text	count=1
return	to ||| void	count=15
function_name	into the file ||| pkey export to file	count=1
function_name	[function_name_1] id3v2 object ||| [function_name_2] [function_name_1]	count=1
function_name	in the route ||| route	count=1
function_name	global meta-data set ||| metadata	count=1
return	a maxdb resource ||| resource	count=1
arg_pair	specified database ||| string $database resource $link_identifier	count=1
function	deletes the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	of a class ||| class	count=1
function_name	retrieve a given tag ||| tag	count=1
function_name	a new ||| create	count=1
function_name	anchor point ||| geo anchor	count=1
arg_pair	is mangled for security ||| resource $radius_handle string $mangled	count=1
function_name	decodes ||| decode	count=3
function_name	[function_name_1] squares ||| [function_name_2] [function_name_1]	count=8
function_name	character spacing for ||| char space	count=2
return	for the ||| int	count=3
function_name	construct a new ||| construct	count=2
function_name	sets the read ||| set	count=1
arg_pair	start and ||| int $start	count=1
function_name	frees previously [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	input layer as layer ||| layer	count=2
function_name	connect the socket to ||| connect	count=1
function_name	imagemagick license ||| image magick license	count=1
function_name	a single low priority ||| low	count=1
arg_pair	it to ann ||| resource $ann	count=1
function	file [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	query fetches using oci_fetch() ||| oci define by name	count=1
function_name	parses ||| rfc822 parse	count=1
arg_pair	of the first occurrence ||| string $haystack string $needle	count=1
function_name	iis is associated ||| iis	count=1
function_name	that matches ||| paint transparent	count=1
function_name	returns numeric file ||| get	count=1
arg_pair	from the ||| int $quality int $filters	count=1
return	point to the start ||| bool	count=1
function_name	einer mime ||| iconv mime encode	count=1
function_name	given ||| ps add weblink	count=1
function_name	from a given result ||| fetch object	count=1
function_name	be made permanent ||| cmit	count=1
arg_pair	the given source ||| int $flags	count=1
function_name	into one and stores ||| xdiff file	count=1
function_name	maximum step-size may be ||| fann set rprop delta max	count=1
arg_pair	of servers that ||| int $port	count=1
function_name	is suspended ||| pcntl sigtimedwait	count=1
function_name	[function_name_1] word length ||| [function_name_2] [function_name_1]	count=2
function_name	number of video-frames ||| num frames	count=1
arg_pair	a result pdf ||| resource $fdf_document string $frame_name	count=1
function_name	phar::startbuffering() method ||| buffering	count=1
arg_pair	username and password that ||| string $password	count=1
arg_pair	a ||| string $reason	count=1
function_name	fetch an access token ||| access token	count=1
function_name	[function_name_1] iterator that ||| [function_name_1] [function_name_2]	count=2
function_name	of reflectionparameter ||| get parameters	count=2
function_name	be used to ||| set metadata	count=1
function_name	a large object and ||| pg lo	count=1
function_name	[function_name_1] short ||| [function_name_1] [function_name_2]	count=2
function_name	returns the [function_name_2] ||| [function_name_1] property [function_name_2]	count=1
function_name	composite the image ||| image	count=1
function_name	[function_name_1] name as ||| [function_name_2] [function_name_1]	count=1
function_name	used by common shells ||| glob	count=1
function_name	the next ||| to next	count=1
arg_pair	challenge using specified hashing ||| string $challenge	count=1
function	ahead or [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=8
namespace	returned ||| function	count=1
function_name	removes a variable with ||| shm remove	count=1
function_name	changes the default external ||| external	count=1
function	fetches [arg_pair_2] ||| [function_name_1] overview [arg_pair_2]	count=1
function_name	quoted printable string created ||| quoted printable encode	count=1
function_name	[function_name_1] map configuration ||| [function_name_2] [function_name_1]	count=1
arg_pair	a connection to a ||| string $password	count=1
arg_pair	a php ||| string $name	count=2
function_name	re- initializes ||| init	count=1
arg_pair	sql ||| string $sql	count=1
arg_pair	the word is ||| resource $dict string $word	count=2
return	a base ||| bool	count=1
namespace	the current ||| solrinputdocument	count=1
function_name	or alter parser options ||| bbcode set flags	count=1
function_name	determines the minimum number ||| min cand	count=1
function_name	scales the ||| fann scale input	count=1
function_name	boost value for the ||| boost	count=1
function_name	last imap error message ||| imap last error	count=1
function_name	bias in each layer ||| bias	count=1
function_name	[function_name_1] lower bound ||| [function_name_1] [function_name_2]	count=2
namespace	rule ||| harupage	count=1
namespace	line from the file ||| splfileobject	count=1
function_name	binds the php ||| bind array by	count=1
arg_pair	equivalent to memcached::get() except ||| callable $cache_cb float $cas_token	count=1
function	permissions [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	judy array ||| judy	count=1
arg_pair	data stored in data ||| resource $ann resource $data	count=1
arg_pair	[arg_pair_1] for the ||| [arg_pair_1] int $first_num [arg_pair_2]	count=1
namespace	event from ||| event	count=1
function_name	processing instruction pi ||| processing instruction	count=1
function_name	a signal is delivered ||| pcntl	count=1
function_name	span the ||| normalize	count=1
function	[function_name_1] file ||| [function_name_1] begin document [arg_pair_2] string $optlist	count=1
function_name	order number ||| order	count=1
namespace	[namespace] prints out ||| [namespace]	count=1
function_name	effective real path ||| realpath	count=1
function_name	sets parameters ||| set params	count=2
arg_pair	namespaceuri named localname exists ||| string $namespaceuri string $localname	count=1
namespace	with the gmagick ||| gmagick	count=1
function_name	for some amount ||| immortal	count=1
function_name	currently stored value with ||| apc	count=1
arg_pair	a global ||| mixed $connection	count=1
arg_pair	the size of an ||| int $height	count=1
function_name	the image obtained ||| imagecreatefromxpm	count=1
function_name	current cipher by ||| cipher info	count=1
function_name	a valid ||| valid	count=1
arg_pair	in options ||| array $params	count=1
function_name	path to ||| path	count=1
arg_pair	delimiter ||| string $delimiter	count=3
function_name	trigram phrase slop ||| trigram phrase slop	count=3
return	to the current ||| bool	count=2
arg_pair	remote address and port ||| string $address int $port	count=1
function_name	same body ||| to	count=1
function_name	sub path and filename ||| sub pathname	count=1
function_name	parent classes of ||| parents	count=1
function_name	by the ||| set	count=1
arg_pair	value at that index ||| mixed $index	count=1
function_name	blob/clob data and ||| cubrid lob send	count=1
namespace	resource ||| function	count=1
arg_pair	the specified mailbox ||| string $mailbox	count=1
function_name	padded on ||| str pad	count=2
function_name	iv belonging ||| get iv	count=1
function_name	stream representing ||| event stream	count=1
namespace	connection ||| eventhttpconnection	count=2
function_name	existing cubrid [function_name_2] ||| [function_name_1] list [function_name_2]	count=1
namespace	from the input buffer ||| eventbufferevent	count=1
arg_pair	up callback to ||| mixed $callback	count=1
arg_pair	output a ||| resource $psdoc	count=2
function_name	any ||| image	count=1
function_name	erases ||| erase	count=1
function_name	code ||| udm errno	count=2
function_name	used ||| set metadata	count=2
function_name	field to ||| alternate field length	count=1
function_name	row and moves the ||| mssql fetch	count=1
arg_pair	input for fields ||| string $delimiter	count=1
function_name	frees previously ||| free	count=1
namespace	passed in to norewinditerator ||| norewinditerator	count=1
function_name	the sunrise time ||| sunrise	count=1
arg_pair	traits that the ||| mixed $class	count=1
return	object ||| sqlite3result	count=1
function_name	status ||| task status	count=1
function_name	thumbnail ||| thumbnail	count=1
function_name	stream or [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	unified ||| xdiff string	count=1
function_name	same body and bound ||| bind to	count=1
function_name	removes one [function_name_2] ||| [function_name_1] mlt query [function_name_2]	count=1
arg_pair	outputs or save a ||| resource $image string $filename	count=1
function_name	rate is ||| rate	count=1
function_name	deletes ||| unlink	count=2
arg_pair	the ||| int $table	count=1
arg_pair	differences between old_data string ||| string $old_data	count=1
arg_pair	to html numeric character ||| string $encoding bool $is_hex	count=1
function_name	a sequence type ||| seq	count=1
arg_pair	copies data between ||| callable $callback string $data	count=1
function_name	page to fit ||| fit	count=1
function_name	or more apcu entries ||| apcu	count=1
function	query [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	row ||| resource $result int $row	count=1
function_name	establishes a database ||| dba	count=1
arg_pair	file with a unique ||| string $dir string $prefix	count=1
function_name	fam service ||| fam	count=2
namespace	hash and ||| quickhashstringinthash	count=1
arg_pair	the time ||| int $timestamp	count=1
function_name	fraction ||| fraction	count=2
function_name	free resources allocated ||| free	count=1
function_name	variables and add ||| add vars	count=1
function_name	link ||| link	count=1
function_name	put read lock on ||| lock read	count=1
function_name	given ||| ps add locallink	count=1
function_name	deletes a named ||| delete	count=1
function_name	activation steepness for ||| get activation steepness	count=1
arg_pair	principal and ||| string $principal	count=1
function_name	human readable ||| timestamp2string	count=1
arg_pair	of arg ||| float $arg	count=1
function_name	get the number ||| number	count=1
function_name	password to ||| password	count=1
return	from the ||| string	count=1
return	the session mechanism if ||| bool	count=1
return	called ||| void	count=1
return	error returned ||| string	count=1
function_name	[function_name_1] current fbsql ||| [function_name_2] list [function_name_1]	count=1
namespace	the evfork ||| evfork	count=1
arg_pair	namespaceuri and name ||| string $qualifiedname	count=1
return	result ||| object	count=1
function_name	a ||| by key	count=1
function_name	after preparing or executing ||| ifx	count=1
function_name	default external ||| external	count=1
function_name	status callback set ||| add task status	count=1
function_name	broker ||| enchant broker	count=1
function_name	the ||| set	count=1
function_name	receiving numeric ||| udm	count=1
arg_pair	the item will ||| int $expiration	count=1
function_name	name of the ||| gethostbyaddr	count=1
namespace	of each word in ||| function	count=1
function_name	[function_name] a requested ||| [function_name] insert	count=1
function_name	core as opposed to ||| internal	count=1
function_name	returns root elements ||| get root element	count=4
function_name	set options ||| set	count=1
function_name	removes one [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	of sybase_fetch_row() ||| sybase	count=1
function_name	via the opendir readdir ||| eio readdir	count=1
function_name	specific row ||| db2 fetch	count=1
function_name	a random ||| gmp random range	count=1
function_name	sets the top ||| set	count=1
function_name	determines the maximum ||| cascade max cand	count=1
arg_pair	so that the item ||| int $expiration	count=1
function_name	the default external entity ||| libxml set external entity	count=1
function	is [function_name_1] [arg_pair_2] ||| function string [function_name_1] [arg_pair_2]	count=4
function_name	database instance ||| dba	count=1
function_name	spelling alternatives ||| dict quick check	count=1
function_name	type stream ||| stream	count=1
function_name	the learning ||| get learning	count=1
function_name	to get the column ||| cubrid column	count=1
function_name	image [function_name_2] ||| [function_name_1] [function_name_2]	count=30
return	which also ||| reference	count=1
function_name	on an arbitrary ||| add nameddest	count=1
function_name	is similar to strcasecmp() ||| strncasecmp	count=1
function_name	the given packet ||| wddx	count=1
arg_pair	on the ||| resource $connection	count=1
function_name	an sql aggregate ||| create aggregate	count=1
function_name	the apache environment ||| apache setenv	count=2
arg_pair	option from the specified ||| resource $ftp_stream int $option	count=1
function_name	remote file server ||| ssh2 sftp mkdir	count=1
function_name	event loop ||| loop	count=2
arg_pair	string input ||| string $input	count=1
function_name	should only be used ||| set metadata	count=1
arg_pair	of a modulo ||| gmp $a	count=1
function_name	terms ||| terms	count=2
function_name	is an ||| mssql fetch array	count=1
arg_pair	[arg_pair_1] of ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	vertical descent ||| get descent	count=1
function_name	on the given stream ||| stream	count=1
arg_pair	color or the closest ||| int $green	count=1
return	of a and p ||| int	count=1
function_name	with gearmanclient::addtask() gearmanclient::addtaskhigh() ||| run	count=1
function_name	return values ||| service	count=1
return	with [return] entries they ||| [return]	count=1
function_name	[function_name] into ||| [function_name] export	count=3
namespace	to [namespace] specified ||| [namespace]	count=1
function_name	the option specified ||| get option	count=1
function_name	[function_name_1] declared interfaces ||| [function_name_2] [function_name_1]	count=1
function_name	bytecodes ||| bcompiler	count=3
function_name	[function_name_1] property ||| [function_name_2] [function_name_1]	count=1
function_name	csr ||| csr	count=3
function_name	gettext() and similar ||| bind textdomain	count=1
function_name	[function_name_1] location ||| [function_name_2] [function_name_1]	count=2
namespace	to ||| pharfileinfo	count=1
function_name	authenticate over ||| auth	count=1
function_name	assumed to be ||| utf8	count=1
namespace	whether the ||| intlchar	count=1
function_name	is owned locked by ||| trylock	count=1
function_name	php internally it ||| state	count=1
function_name	route ||| route	count=5
function_name	return type ||| return type	count=2
function_name	an already open stream ||| stream	count=1
function_name	the permissions ||| get perms	count=1
function_name	job servers that ||| servers	count=1
namespace	as special operators ||| sphinxclient	count=1
arg_pair	execute processing it just ||| int $pri	count=1
namespace	of connection in ||| function	count=1
arg_pair	field ||| resource $fdf_document string $fieldname	count=3
arg_pair	something in ||| int $mode	count=1
function_name	nsapi [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	data and ||| string $data	count=1
function_name	individual threshold for each ||| adaptive threshold	count=1
function_name	sets trigram [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	function [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
function_name	minimum ||| cache min	count=1
function_name	image using imagemagick pseudo-formats ||| pseudo image	count=1
function_name	stored bytecodes and initiates ||| bcompiler	count=1
namespace	end of ||| splfileobject	count=1
function_name	the sqlite ||| sqlite	count=1
arg_pair	outfilename ||| string $outfilename	count=1
function_name	drop remove a ||| drop	count=1
arg_pair	sql ||| resource $conn_identifier string $sql	count=1
function_name	von einer mime ||| iconv mime	count=1
namespace	an imagick object ||| imagick	count=1
function_name	[function_name_1] rendering mode ||| [function_name_1] [function_name_2]	count=2
return	user name and password ||| resource	count=1
namespace	phar archives contain a ||| phar	count=1
namespace	only ||| mongoid	count=1
namespace	fetches ||| function	count=1
function_name	result identifier ||| ibase	count=1
arg_pair	after the [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
namespace	worker has been ||| worker	count=1
function_name	log for each ||| log	count=1
return	use ||| string	count=1
function_name	eventbuffer::addbuffer() except ||| prepend	count=1
arg_pair	a function ||| string $class string $function	count=1
arg_pair	given ||| resource $link string $query	count=2
function_name	input vector ||| input	count=1
namespace	the target of ||| function	count=1
function_name	[function_name_1] environment variable ||| [function_name_2] [function_name_1]	count=3
function_name	rrd [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] curl handles ||| [function_name_2] [function_name_1]	count=4
function_name	query ||| query trace	count=1
return	not for production environments ||| bool	count=1
namespace	function p is ||| function	count=1
function_name	writes to the socket ||| socket write	count=1
arg_pair	set a file that ||| int $dictionary_link string $file	count=2
arg_pair	definition ||| int $painttype	count=1
function_name	the oracle ||| oci	count=1
function_name	similar to msql_fetch_array() with ||| msql	count=1
function_name	returns an offset ||| get facet offset	count=1
function_name	returns an array ||| get	count=2
arg_pair	variables ||| string $varname string $newvalue	count=1
return	after the ||| int	count=1
function_name	sequence type attribute in ||| seq drop	count=1
function_name	be used to split ||| split	count=1
arg_pair	filename from ||| resource $image string $filename	count=1
arg_pair	performs a ||| string $charset	count=1
function_name	an image as dictated ||| image	count=1
function_name	given ||| object	count=1
function_name	the number ||| oci num	count=1
arg_pair	charlist ||| string $charlist	count=1
function_name	returns the sunrise time ||| sunrise	count=1
function_name	influences unstable period factor ||| unstable period	count=1
function_name	reads ||| fann read	count=1
arg_pair	string before ||| resource $link string $source_string	count=1
arg_pair	a string containing ||| string $number int $frombase	count=1
namespace	prepared statement and returns ||| sqlite3stmt	count=1
function_name	[function_name_1] element is ||| [function_name_1] [function_name_2]	count=1
function_name	training not to ||| fann get	count=3
arg_pair	the associated data structures ||| resource $pdfdoc	count=1
function_name	highlighting for [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	a transaction [function_name] was ||| [function_name] rollback	count=1
arg_pair	of the buffer that ||| int $level	count=1
arg_pair	or part of a ||| int $ndocs array $callbacks	count=2
function_name	[function_name_1] image and ||| [function_name_2] [function_name_1]	count=1
function_name	delay ||| delay	count=2
function_name	returns ||| get field	count=1
function_name	information stored ||| set	count=1
function_name	size of ||| size	count=3
namespace	the soapfault ||| soapfault	count=1
function_name	handler in the ||| handler	count=1
function_name	attribute ||| set attribute	count=1
function_name	iterator ||| iterator class	count=1
function_name	exchange the ||| exchange array	count=1
arg_pair	the transparency ||| float $alpha	count=1
function_name	2d matrix ||| matrix	count=1
function_name	by php internally it ||| state	count=1
function_name	user input ||| readline callback	count=2
namespace	for searchd ||| sphinxclient	count=1
arg_pair	used to ||| string $host	count=1
function_name	stream to ||| stream	count=1
function_name	error log ||| error log	count=1
function_name	returns the resolution as ||| getimageresolution	count=1
function_name	gets ||| bzerrstr	count=1
function_name	the [function_name] ||| [function_name] tag name	count=1
arg_pair	to new mailbox see ||| string $old_mbox	count=1
function_name	[function_name_1] corresponding ||| [function_name_2] time [function_name_1]	count=1
arg_pair	fd file ||| mixed $fd	count=1
arg_pair	of real1 from real0 ||| array $real0 array $real1	count=1
function_name	read lock on a ||| readlock	count=1
function_name	last [function_name_2] ||| [function_name_2] [function_name_1]	count=25
namespace	function renames on ||| function	count=1
function_name	graphics state object ||| gstate	count=1
arg_pair	seconds and nanoseconds ||| int $seconds int $nanoseconds	count=1
function_name	conjunction ||| stop	count=1
arg_pair	the uri ||| string $uri string $encoding	count=1
return	after a ||| void	count=1
function_name	the specified postgresql ||| pg	count=1
namespace	function behaves exactly as ||| function	count=1
function_name	returns the file in ||| get	count=1
function_name	sets the ||| set min	count=1
function_name	space character ||| space	count=1
arg_pair	date ||| int $day	count=1
arg_pair	a ||| int $options	count=2
function_name	associated with the specified ||| row	count=1
function_name	scales the ||| scale input	count=1
return	status of a ||| int	count=1
return	a string up ||| string	count=1
function_name	[function_name_1] soap ||| [function_name_1] [function_name_2]	count=1
arg_pair	in filename from ||| resource $image string $filename	count=1
function	another [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	code ||| isbase	count=1
function_name	converts number from radian ||| rad2deg	count=1
namespace	more results ||| mongocursorinterface	count=1
function_name	[function_name_1] element ||| [function_name_2] [function_name_1]	count=1
arg_pair	text for later formatting ||| string $text	count=1
function_name	rrd ||| rrd	count=1
function_name	as opposed to internal ||| user defined	count=1
function_name	contains personal [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	diff information ||| diff	count=2
function_name	[function_name_1] mode ||| [function_name_1] block algorithm [function_name_2]	count=4
function_name	extended services request using ||| yaz itemorder	count=1
function_name	[function_name_1] header to ||| [function_name_2] [function_name_1]	count=2
function	textflow and [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	new attribute ||| set attribute	count=1
function_name	current fbsql ||| fbsql	count=1
function_name	set ||| fbsql	count=1
arg_pair	the input identified ||| array $input	count=1
arg_pair	is mangled for security ||| string $mangled	count=1
function_name	timestamp handler callback ||| timestamp nonce handler	count=1
function_name	called during serialization of ||| serialize	count=1
function_name	nsapi response ||| nsapi response	count=2
arg_pair	a valid ||| string $fieldvalue	count=1
function_name	the version ||| version	count=4
arg_pair	of snmp objects starting ||| string $community	count=2
arg_pair	so that the ||| mixed $value int $expiration	count=1
function_name	and ||| and	count=1
function_name	php language tokens using ||| token	count=1
function_name	the repository url and ||| svn	count=1
function_name	is a hidden member ||| is hidden	count=1
arg_pair	and other useful ||| resource $link_identifier string $blob_id	count=1
return	the iterator to the ||| void	count=2
function_name	[function_name_1] path ||| [function_name_1] [function_name_2]	count=4
function_name	to look for suitable ||| max analyzed chars	count=1
arg_pair	a directory ||| resource $sftp string $dirname	count=1
function_name	parses the html ||| load htmlfile	count=1
return	function is ||| mongoid	count=1
function_name	data from a glo ||| load from glo	count=1
function_name	escape certain ||| ingres escape	count=1
return	this should not ||| string	count=1
namespace	code point ||| intlchar	count=4
arg_pair	numeric items ||| int $expiry	count=1
function_name	for facet ||| facet	count=1
function	[function_name_1] text ||| [function_name_1] [arg_pair_2]	count=1
return	creating or modifying a ||| void	count=1
rest	the [function_2] ||| [function_2] [return_1]	count=7
function_name	should only be used ||| set	count=1
function	[function_name_1] a ||| [function_name_1] [arg_pair_2]	count=28
function_name	the uid ||| imap uid	count=1
function_name	route which is effective ||| get	count=1
arg_pair	to memcached::getmulti() except ||| int $flags	count=1
function_name	sends ||| pg send	count=2
namespace	the [namespace] generated ||| [namespace]	count=1
function_name	the module [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	large object resource ||| pg lo	count=1
function_name	effective in the ||| current	count=1
function_name	the opened [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	that the item ||| mixed $value int $expiration	count=1
namespace	count of a syncsemaphore ||| syncsemaphore	count=1
namespace	sec field of this ||| mongotimestamp	count=1
function_name	value of [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	the service provider ||| string $callback_url	count=1
function_name	writes ||| writeimage	count=1
return	cursors by ||| mongocursor	count=1
function_name	name used with the ||| fbsql database	count=1
function_name	functions drops a ||| drop db	count=1
arg_pair	the [arg_pair_2] ||| [arg_pair_2] string $needle [arg_pair_1]	count=1
function_name	from bson ||| bson	count=1
function_name	been closed [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	the number of ||| int $offset	count=1
arg_pair	value of ||| string $timeout	count=1
arg_pair	socket to a ||| string $dsn	count=1
function_name	rectangle given ||| rectangle	count=1
function_name	doc [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	the ||| int $limit	count=1
arg_pair	a b ||| gmp $b	count=1
function_name	a version of sybase_fetch_row() ||| sybase fetch assoc	count=1
function_name	opened algorithm ||| mcrypt enc get block	count=1
arg_pair	the associative or indexed ||| string $arg_separator	count=1
function_name	blocks e ||| is block	count=1
namespace	function implements a sort ||| function	count=1
return	results to send to ||| bool	count=1
function_name	dump debugging information into ||| dump debug information	count=1
function_name	a dictionary using ||| dict	count=1
arg_pair	a result set available ||| resource $stmt	count=1
function_name	commits ||| commit	count=2
function_name	the imagemagick license ||| image magick license	count=1
function_name	opened or not when ||| set opened	count=1
namespace	string ||| recursivetreeiterator	count=1
function_name	to set ||| set	count=1
function_name	specified hash ||| mhash get hash	count=1
function_name	re- initializes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	and the given password ||| with password	count=1
namespace	previously ||| gearmanclient	count=1
function_name	[function_name_1] limit ||| [function_name_2] [function_name_1]	count=11
function_name	grouping group parameter ||| group	count=1
arg_pair	a ||| float $upperrighty	count=1
arg_pair	puts a key-value ||| mixed $keys string $value	count=1
arg_pair	moves a file to ||| string $new_path	count=1
arg_pair	slant a ||| resource $font_index float $slant	count=1
function_name	an offset into the ||| offset	count=1
function_name	remote ||| ssh2	count=3
namespace	entering or continuing the ||| evloop	count=1
function_name	with an url ||| url	count=1
function_name	records in ||| px numrecords	count=1
arg_pair	a ||| int $shmid	count=1
namespace	scans the buffer ||| eventbuffer	count=1
function_name	sets the current active ||| fbsql select	count=1
function_name	given record in ||| record	count=1
function_name	the entire network ||| fann	count=2
function	deletes [arg_pair_2] ||| [function_name_1] string $key [arg_pair_2]	count=1
function_name	record ||| yaz record	count=2
return	request an ||| int	count=1
function_name	slop on phrase queries ||| phrase slop	count=1
namespace	with a ||| pharfileinfo	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=6
function_name	[function_name_1] returns ||| [function_name_2] [function_name_1]	count=2
arg_pair	that the time returned ||| int $timestamp	count=1
function_name	a mysqlnd connection handle ||| convert to mysqlnd	count=1
function_name	the entries stored in ||| ldap next entry	count=1
namespace	a set of tasks ||| gearmanclient	count=1
function_name	with ||| gupnp	count=1
return	or in at ||| bool	count=1
function_name	fetches ||| fetch	count=6
return	points to the ||| bool	count=2
function_name	a destructor ||| destructor	count=1
arg_pair	so that the item ||| mixed $value int $expiration	count=1
function_name	results of next ||| next	count=1
function_name	to send partial ||| partial	count=1
function_name	slop ps3 ||| slop	count=1
function_name	overrides main filter query ||| add expand filter query	count=1
return	should not ||| string	count=1
function_name	move ||| buffer	count=1
return	[return] image ||| [return]	count=1
namespace	values stored in ||| function	count=1
function_name	change [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	on the page ||| page	count=1
function_name	gearmanclient::addtasklowbackground() ||| run	count=1
return	returns a numerical array ||| array	count=1
function_name	more apcu entries ||| apcu	count=1
namespace	connection ||| fannconnection	count=1
function_name	scales the inputs and ||| fann scale	count=1
arg_pair	according to rfc 3986 ||| string $str	count=1
arg_pair	font ||| resource $font_index	count=1
function_name	returns an id ||| msg get	count=1
arg_pair	an [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	set the database name ||| resource $link_identifier string $database	count=1
return	smaller ||| string	count=1
function_name	used ||| metadata	count=1
function_name	headers to ||| headers	count=1
function_name	oracle pl/sql block ||| oci	count=1
arg_pair	a result pdf defined ||| resource $fdf_document string $frame_name	count=1
function_name	[function_name_1] internal ||| [function_name_2] [function_name_1]	count=3
arg_pair	of left to the ||| mixed $left	count=1
function_name	retrieves apcu [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] value from ||| [function_name_1] [function_name_2]	count=4
return	a string and ||| string	count=1
function_name	fdf version ||| fdf set version	count=1
function_name	fetches a row as ||| ibase	count=1
return	prepares for ||| bool	count=1
function_name	and region code ||| and region	count=2
function_name	declaring class ||| declaring class	count=4
function_name	check with the ||| check	count=1
function_name	mysql protocol version used ||| proto info	count=1
namespace	a row ||| function	count=1
arg_pair	an ||| int $bytes_transferred int $bytes_max	count=1
function_name	group functions group ||| group functions	count=1
arg_pair	a ||| string $class string $callback	count=1
function	adds [arg_pair_2] ||| tokyotyrantquery mixed [function_name_1] [arg_pair_2]	count=2
function_name	in output [function_name] ||| [function_name]	count=1
function_name	[function_name] to a ||| [function_name]	count=2
function_name	the child before entering ||| loop	count=1
function_name	value of a color ||| color value	count=1
function_name	[function_name_1] headers ||| [function_name_2] [function_name_1]	count=7
return	issuing any ||| bool	count=1
function_name	timestamp nonce [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	name variable_name ||| string $variable_name	count=1
arg_pair	the ||| int $isname	count=1
function_name	a stream context ||| stream context	count=2
function_name	last attempt ||| db2 conn error	count=2
function_name	function for all the ||| function	count=1
return	buffer ||| bool	count=1
namespace	the current image ||| imagick	count=1
function_name	doc comment ||| get doc comment	count=2
arg_pair	training of the output ||| int $max_neurons	count=1
arg_pair	some pdflib parameter with ||| resource $p string $key	count=1
arg_pair	the color defined ||| float $fuzz	count=1
namespace	which is effective ||| yaf_router	count=1
function_name	determines the minimum number ||| cascade min cand	count=1
function_name	[function_name_1] [function_name_2] an entry using its ||| ziparchive string [function_name_1] [function_name_2] index int $index int	count=2
function_name	[function_name_1] current line ||| [function_name_1] [function_name_2]	count=1
function_name	inputs in the training ||| train	count=1
return	whether or not to ||| bool	count=2
arg_pair	array1 with values having ||| array $array1 array $array2	count=1
function	service [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	active database on ||| sybase select db	count=2
function_name	sets the permissions ||| chmod	count=1
function_name	range filter ||| set filter range	count=2
return	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| bool	count=1
function	[function_name_1] old_data ||| [function_name_1] [arg_pair_2]	count=1
function_name	this function creates ||| create processing instruction	count=2
arg_pair	specified table or a ||| string $fk_owner string $fk_table	count=1
arg_pair	that the item ||| int $expiration	count=1
function_name	route by name ||| get route	count=1
return	to the browser after ||| int	count=1
arg_pair	b and returns ||| gmp $a gmp $b	count=1
namespace	or gearmanclient::addtasklowbackground() this ||| gearmanclient	count=1
arg_pair	lists ||| string $name	count=1
return	to standard ||| bool	count=1
arg_pair	characters ||| string $text	count=1
function_name	function ||| processing instruction	count=2
namespace	representing the reason the ||| function	count=1
function	[function_name_1] for the ||| [function_name_1] [arg_pair_2]	count=2
function_name	dictionary for en_us ||| dict	count=1
function_name	size associated with the ||| size	count=1
function_name	maximum step-size may be ||| set rprop delta max	count=1
arg_pair	to the fetched ||| int $result_type	count=1
namespace	internally it ||| mongoid	count=1
function_name	query ||| mssql query	count=1
function_name	two-dimensional ||| extended	count=1
function_name	[function_name_1] form passed ||| [function_name_1] [function_name_2]	count=2
function_name	a file ||| set metadata	count=2
return	the browser after sending ||| int	count=1
return	lock on [return] given ||| [return]	count=1
return	of tasks ||| bool	count=1
function	[function_name_1] using gearmanclient::setstatuscallback() ||| [function_name_1] [arg_pair_2]	count=2
namespace	evperiodic watcher ||| evperiodic	count=1
arg_pair	method and ||| string $data string $method	count=1
arg_pair	address port number ||| string $host int $port	count=1
function_name	ftp server ||| ftp	count=7
function_name	type [function_name_2] ||| [function_name_2] return [function_name_1]	count=1
function_name	loop for ||| loop	count=1
function_name	this function [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	the value of ||| resource $p	count=1
arg_pair	the given ||| int $limit int $flags	count=1
function_name	an obscure check ||| crack check	count=2
arg_pair	page ||| resource $pdfdoc string $name	count=1
arg_pair	returns a string ||| string $number int $frombase	count=1
function_name	gets the file ||| get file	count=2
function_name	merges the elements of ||| array merge recursive	count=1
function_name	mssql_fetch_array() ||| mssql	count=1
function_name	activation steepness for ||| activation steepness	count=3
function_name	before ||| loop	count=1
arg_pair	[arg_pair_1] an ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	of [function_name] ||| [function_name] status	count=1
function_name	finishes ||| ext	count=1
arg_pair	a result ||| resource $fdf_document	count=1
function_name	[function_name_1] a stopped ||| [function_name_1] [function_name_2]	count=1
arg_pair	password ||| array $options	count=1
function_name	after applying the ||| array map	count=1
function_name	[function_name_1] cookie ||| [function_name_1] [function_name_2]	count=1
function_name	node ||| to doc	count=1
function_name	a handler to be ||| handler	count=1
namespace	representation of the passed ||| function	count=1
function_name	[function_name] java ||| [function_name]	count=1
return	sent to ||| string	count=1
function_name	activation steepnesses in the ||| cascade activation steepnesses	count=1
function_name	create [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the tasks in parallel ||| run tasks	count=1
function_name	the maximum supported key ||| get key	count=1
function_name	return the total number ||| total	count=1
function_name	gets end [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	queue with the ||| queue	count=1
arg_pair	to ||| string $types	count=2
function_name	imap or nntp server ||| reopen	count=1
namespace	object which represents ||| eventhttprequest	count=1
function_name	point ||| point	count=2
return	in an associative array ||| array	count=2
function_name	default namespace ||| is default namespace	count=2
return	the host ||| string	count=1
function_name	be demangled before ||| radius demangle	count=1
function_name	the name of the ||| current	count=1
function_name	[function_name_1] stream ||| [function_name_2] [function_name_1]	count=1
function_name	closes ||| cubrid close prepare	count=1
function_name	notation declaration [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	the path with the ||| bool	count=1
function_name	during the processing ||| progress monitor	count=1
arg_pair	returns the data ||| resource $stmt	count=1
function_name	pixel in the image ||| image	count=1
function_name	gets the first attribute ||| first attribute	count=1
namespace	a syncsemaphore ||| syncsemaphore	count=1
return	to save the contents ||| bool	count=1
function_name	[function_name_1] and region ||| [function_name_2] [function_name_1]	count=1
function_name	sets where ||| set error	count=1
namespace	yaf_router s ||| yaf_router	count=1
arg_pair	this imagickpixel object and ||| imagickpixel $color	count=1
namespace	evstat watcher object and ||| evstat	count=1
arg_pair	given set ||| resource $conn_identifier string $oid	count=1
return	contents directly to standard ||| bool	count=1
namespace	function sets ||| function	count=1
function_name	get the interface names ||| get interface names	count=1
function_name	running the tasks in ||| tasks	count=1
namespace	deletes its indices ||| mongocollection	count=1
namespace	the route which is ||| yaf_router	count=1
function_name	[function_name_1] number of ||| [function_name_1] [function_name_2]	count=4
function_name	a subset [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	elapsed ||| elapsed	count=1
function_name	launched via the service ||| start	count=1
function_name	the normal date parsers ||| create from date string	count=1
function_name	returns file status information ||| stat	count=1
function_name	[function_name_1] query determines ||| [function_name_2] [function_name_1]	count=3
namespace	the stylesheet ||| xsltprocessor	count=1
function_name	closes the link ||| sybase close	count=1
function_name	title ||| title	count=2
namespace	the [namespace] to ||| [namespace]	count=1
function	or redefines [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	buffer provided ||| add	count=1
function	[function_name_1] posted by ||| [arg_pair_2] [function_name_1]	count=2
return	stops and restarts the ||| void	count=1
function_name	used with ||| fbsql database	count=1
namespace	on the ||| function	count=2
arg_pair	queries the ||| string $optlist	count=1
function_name	called by the ||| set	count=1
return	running the ||| bool	count=1
function_name	inner iterators [function_name] contained in ||| get [function_name]	count=1
arg_pair	one of the detailed ||| int $fieldcode	count=1
function_name	the intersection of arrays ||| uintersect assoc	count=1
arg_pair	data between ||| callable $callback string $data	count=1
function_name	at the specified location ||| imagecolorat	count=1
namespace	the specified link identifier ||| function	count=2
function_name	[function_name_1] option specified ||| [function_name_1] [function_name_2]	count=1
arg_pair	creates ||| int $sec	count=1
function_name	[function_name_1] fields associated ||| [function_name_2] [function_name_1]	count=1
function_name	key sizes [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	first attribute in the ||| first attribute	count=1
namespace	a callable function used ||| function	count=3
function	replaces [arg_pair_2] ||| [function_name_1] recursive array $array1 [arg_pair_2]	count=1
function_name	each token being delimited ||| strtok	count=1
function_name	[function_name_1] of rows ||| [function_name_1] expand [function_name_2]	count=1
function_name	number for the ||| number	count=1
arg_pair	outfilename ||| resource $csr string $outfilename	count=1
arg_pair	name and country ||| string $name integer $country	count=1
function_name	computes the inverse ||| gmp invert	count=1
function_name	number for [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	semaphore if ||| sem	count=1
function_name	information about ||| info	count=10
function_name	loop finished ||| loop	count=1
function_name	an unified ||| xdiff	count=2
function_name	place after ||| get postfix	count=1
namespace	object ||| spltempfileobject	count=1
namespace	change the [namespace] ||| [namespace]	count=1
return	route which is effective ||| string	count=1
namespace	of file ||| splfileobject	count=1
function_name	the buffered ||| buffer	count=1
namespace	host checks this ||| oauth	count=1
function_name	returns an object ||| object	count=2
arg_pair	registers a php function ||| string $name mixed $step_callback	count=1
function_name	out [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	is a wrapper for ||| string $note_value	count=1
function_name	returns [function_name] ||| [function_name] fetch assoc	count=1
arg_pair	indexed by column ||| resource $stmt int $row_number	count=1
arg_pair	of array1 ||| array $array1	count=3
function_name	[function_name_1] cascade candidate ||| [function_name_1] [function_name_2]	count=1
function_name	stored bytecodes ||| bcompiler write	count=1
arg_pair	to ann based on ||| resource $ann	count=1
arg_pair	during training [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
arg_pair	alpha ||| float $alpha	count=1
namespace	type is ||| reflectiontype	count=1
namespace	a new ||| mongodate	count=1
arg_pair	whenever a change ||| resource $proxy string $value	count=1
function_name	registers a function that ||| register callback	count=1
namespace	function in ||| function	count=1
arg_pair	like mssql_connect() ||| string $password bool $new_link	count=1
arg_pair	a wrapper for ||| string $note_name string $note_value	count=1
function_name	being started when clicked ||| ps add launchlink	count=1
function_name	all tuple locks held ||| freerlocks	count=1
namespace	function sorts an array ||| function	count=2
function_name	determines the maximum number ||| max cand	count=1
arg_pair	fields if a ||| string $fieldname string $fieldvalue	count=1
function_name	for reading ||| sqlsrv	count=1
arg_pair	be added to the ||| string $file string $localname	count=1
arg_pair	a country and ||| string $country_code	count=1
function_name	so as to reduce ||| array reduce	count=1
arg_pair	date ||| int $sec int $usec	count=1
arg_pair	a list of servers ||| string $host	count=1
function_name	will throw [function_name] in ||| [function_name]	count=1
function_name	whether the specified ||| isbase	count=1
function_name	the current value ||| value	count=1
arg_pair	of seconds ||| int $seconds	count=1
function_name	for an existing function ||| function	count=1
function_name	stub so ||| stub	count=2
function_name	the [function_name] line in ||| [function_name]	count=1
function_name	blur ||| blur image	count=2
function_name	added ||| run	count=1
function_name	channel ||| image channel	count=1
function_name	apache environment ||| apache setenv	count=2
namespace	a given ||| function	count=2
function_name	last [function_name] returned ||| [function_name] lengths	count=1
function_name	frequency at ||| set mlt min doc frequency	count=1
function_name	[function_name_1] underlying input ||| [function_name_1] [function_name_2]	count=1
function_name	information stored with ||| metadata	count=1
function_name	a glyph definition ||| pdf end glyph	count=1
function_name	the next higest integer ||| ceil	count=1
function_name	loader or stub written ||| get stub	count=1
arg_pair	position offset ||| int $offset	count=1
function_name	neural network from ||| fann	count=1
function_name	returns ||| gethostbyaddr	count=1
return	this call ||| bool	count=1
function_name	the decoded quoted ||| quoted	count=1
function_name	use spanscorer to ||| use	count=2
function_name	include the ||| terms include	count=2
namespace	positioned on an ||| xmlreader	count=1
function_name	image matte ||| image matte	count=2
arg_pair	new integer values ||| array $values	count=1
function_name	with an url string ||| with url	count=1
arg_pair	a php function or ||| string $name mixed $callback	count=1
function_name	query cache ||| query trace	count=1
namespace	[namespace] string ||| [namespace]	count=3
function_name	get elapsed time for ||| elapsed time	count=1
function_name	type set ||| set drop	count=1
arg_pair	database for database ||| string $database	count=1
function_name	cascade candidate change ||| cascade candidate change	count=3
function_name	adds the file directory ||| add	count=1
function_name	the given dictionary ||| enchant dict	count=1
function_name	the minimum ||| fann get cascade min	count=1
function_name	any pixel that matches ||| paint transparent image	count=1
arg_pair	color pair to ||| int $pair	count=1
function_name	idle on the ||| immortal	count=1
return	corresponding resources to the ||| bool	count=1
arg_pair	with tar- or zip-based ||| string $indexfile string $webindexfile	count=1
function_name	scales ||| scale	count=4
return	more results to send ||| bool	count=1
function_name	error message fields associated ||| error field	count=1
function_name	blocks ||| is block	count=1
arg_pair	by oliver isbn 0-131-00413-1 ||| string $second	count=1
return	returns an array with ||| array	count=1
arg_pair	b and ||| gmp $a gmp $b	count=1
arg_pair	slant a given font ||| float $slant	count=1
return	the oid of the ||| int	count=1
function_name	and sets ||| set	count=1
return	used to change ||| bool	count=1
arg_pair	a global ||| string $gtrid	count=1
function_name	blocksize ||| mcrypt module get algo block size	count=1
function_name	adds ||| add element	count=2
function_name	construct a ||| construct	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image [function_name_2]	count=6
function_name	word length below ||| word length	count=1
function_name	specific row ||| db2 fetch row	count=1
function_name	sets the cascade ||| fann set cascade	count=6
arg_pair	a region of the ||| int $x int $y	count=1
function_name	simulates an oil painting ||| oil paint	count=1
function_name	access [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	before entering ||| evloop	count=1
namespace	called by the user ||| mongoid	count=1
arg_pair	the ||| float $upperrighty	count=1
namespace	array index ||| splfixedarray	count=1
function_name	memory ||| free result	count=2
function_name	all elements with ||| elements by tag	count=1
function_name	serialization of the ||| serialize	count=1
arg_pair	uri ||| string $uri	count=1
function_name	create ||| mysql create	count=1
function_name	transforms the source ||| transform	count=1
function_name	property for a ||| property	count=1
function	[function_name_1] to a ||| [function_name_1] [arg_pair_2]	count=1
function_name	maximum [function_name_2] ||| [function_name_1] [function_name_2]	count=10
arg_pair	up ||| int $width int $height	count=1
function_name	clears sets to ||| gmp clrbit	count=1
function_name	a color ||| color	count=2
arg_pair	the ||| resource $pdfdoc int $table	count=1
arg_pair	to ||| string $encoding	count=2
namespace	is a base ||| intlchar	count=1
function_name	sarprop [function_name_2] ||| [function_name_2] [function_name_1]	count=11
function_name	exe ||| load exe	count=2
namespace	only be ||| pharfileinfo	count=1
function_name	non-empty language tag ||| broker	count=1
function_name	filter query ||| add expand filter query	count=1
arg_pair	all the mailboxes that ||| resource $imap_stream string $ref	count=1
function	[function_name_1] specified algorithm ||| [function_name_1] [arg_pair_2]	count=5
function_name	retrieve last ||| get last	count=2
function_name	current boost ||| boost	count=1
namespace	turns the ||| function	count=1
function_name	[function_name_1] stored in ||| [function_name_2] [function_name_1]	count=3
return	[return] indexed ||| [return]	count=1
arg_pair	mangled for ||| string $mangled	count=1
namespace	function without the namespace ||| reflectionfunctionabstract	count=1
arg_pair	host and ||| string $host	count=1
arg_pair	messages from domain returned ||| string $domain string $codeset	count=1
function_name	[function_name_1] function for ||| [function_name_1] [function_name_2]	count=15
function_name	dispatch [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	status ||| status message	count=1
function_name	match [function_name] across ||| [function_name]	count=1
function_name	exists in the set ||| exists	count=1
function_name	be ||| set	count=2
function_name	for ||| get private	count=2
function_name	returns the path ||| get	count=1
function_name	memcached::prepend() except that the ||| prepend by	count=1
function_name	distribution ||| rand gen	count=1
function_name	of [function_name] ||| [function_name]	count=2
arg_pair	the current [arg_pair_2] ||| [arg_pair_2] string $msgid2 [arg_pair_1]	count=1
function_name	after applying ||| map	count=1
function_name	anchor point for ||| anchor	count=1
arg_pair	list of servers ||| string $host int $port	count=1
function_name	persistence state ||| persistence	count=1
arg_pair	of service ||| int $service_level_option mixed $option_value	count=1
namespace	prepared statement [namespace] ||| [namespace]	count=6
arg_pair	objects starting from object_id ||| string $object_id string $timeout	count=1
function_name	production environments ||| disable	count=1
function_name	type of the ||| filetype	count=1
function_name	current session ||| session	count=2
return	represented ||| void	count=1
return	host name of the ||| string	count=1
arg_pair	by assoc_array which has ||| array $assoc_array	count=1
arg_pair	the result ||| resource $result	count=2
function_name	divides a by ||| div q	count=1
function_name	the number of days ||| days	count=1
function_name	wddx packet ||| wddx serialize	count=1
arg_pair	supplied in options ||| array $params	count=1
arg_pair	target within the ||| float $upperrighty	count=1
function_name	sequence type ||| seq drop	count=1
return	be used [return] see ||| [return]	count=1
function_name	[function_name_1] bigram ||| [function_name_1] [function_name_2]	count=2
function_name	earliest ||| router startup	count=2
arg_pair	a table ||| string $table_name	count=1
function_name	file status information ||| stat	count=1
arg_pair	socket stream ||| eventbase $base mixed $socket	count=1
arg_pair	to an existing ||| int $textflow	count=1
function_name	a fork in the ||| fork	count=1
arg_pair	mode to ||| string $mode	count=1
namespace	function is very similar ||| function	count=1
function_name	returns the portion ||| substr	count=1
function_name	saves ||| save	count=8
function	ahead [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=8
function_name	adds a link ||| pdf add	count=1
function_name	can [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	register local class ||| register local namespace	count=2
function_name	previous operation ||| yp errno	count=2
function_name	current cipher by ||| cipher	count=1
arg_pair	date ||| int $usec	count=1
function_name	path for ||| broker get dict path	count=1
function_name	will [function_name] an ||| rpm [function_name]	count=1
function_name	a maxdb resource ||| maxdb	count=1
return	as [return] floating-point ||| [return]	count=1
function_name	returns the ||| get extension	count=1
arg_pair	specified entry from ||| string $key	count=1
namespace	imagick object and ||| imagick	count=1
arg_pair	for the provided path ||| int $flags	count=1
function_name	[function_name_1] entity reference ||| [function_name_2] [function_name_1]	count=3
function_name	total number ||| get total	count=2
function_name	a new pdf ||| pdf open	count=2
function_name	[function_name_1] orientation ||| [function_name_2] [function_name_1]	count=1
function_name	album string of an ||| album	count=1
function	[function_name_1] display a ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	the given user ||| string $user	count=1
function_name	channels ||| channels	count=1
arg_pair	transform str1 ||| string $str1	count=1
function_name	the query timeout ||| query timeout	count=2
namespace	resource suitable for ||| function	count=1
function_name	[function_name_1] handle if ||| [function_name_2] [function_name_1]	count=6
namespace	bytes [namespace] into the ||| [namespace]	count=1
function_name	method exists in the ||| method exists	count=1
function_name	stroking color for ||| rgbstroke	count=1
namespace	database has no more ||| mongocursorinterface	count=1
function_name	from ||| read	count=1
function_name	owner ||| owner	count=2
function_name	filter that improves the ||| filter	count=1
function_name	the size of ||| size	count=1
arg_pair	virtual file and frees ||| resource $pdfdoc string $filename	count=1
function_name	patterns ||| length	count=1
namespace	reflected extension and ||| reflectionextension	count=1
function_name	aggregation framework ||| aggregate	count=1
arg_pair	a file ||| string $path	count=1
function	the status [arg_pair_2] ||| result [function_name_1] [arg_pair_2]	count=2
arg_pair	file descriptor at offset ||| int $offset	count=1
function_name	mime-type ||| mime type	count=1
function_name	for ||| disable	count=1
function_name	of encoding the ||| xfer encoding	count=1
function	existing function and ||| function resource $filehandle	count=1
function_name	[function_name] while still ||| reduce noise [function_name]	count=1
namespace	function is useless ||| function	count=1
arg_pair	a page in ||| int $page	count=1
function_name	glyph at position ||| ps symbol	count=1
function_name	available ||| qc get available	count=1
function_name	the sqlite [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	get the current font ||| current font	count=1
function_name	of ||| field	count=4
arg_pair	a ||| string $query	count=1
arg_pair	the given ||| int $chunk_size int $type	count=1
namespace	function returns the portion ||| function	count=1
arg_pair	a change notification for ||| resource $proxy	count=1
function_name	json [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] be added ||| [function_name_1] [arg_pair_2]	count=1
function_name	matches color with ||| paint opaque image	count=1
arg_pair	str1 into ||| string $str1	count=1
function_name	[function_name_1] ingres ||| [function_name_2] [function_name_1]	count=6
arg_pair	as a ||| resource $result_id	count=1
function_name	tests if ||| testbit	count=1
function_name	traverse over a number ||| snmprealwalk	count=1
function_name	graphicsmagick release date as ||| getreleasedate	count=1
function_name	key sizes supported by ||| supported key sizes	count=1
function_name	regular expression ||| preg match	count=1
function_name	minimum word ||| mlt min word	count=2
function_name	stream or datagram connection ||| stream socket client	count=1
function_name	value for this field ||| add field	count=1
arg_pair	dn ||| array $dn resource $privkey	count=1
function_name	returns the product ||| array product	count=1
function_name	utf-8 ||| imap utf8	count=1
function_name	profile and returns it ||| removeimageprofile	count=1
function_name	msql_fetch_array() ||| msql	count=1
function_name	[function_name] result set ||| [function_name] result	count=2
function_name	with existing information ||| set	count=1
arg_pair	specified by assoc_array ||| array $assoc_array	count=1
function_name	transforms the source ||| transform to	count=1
function_name	minimum document ||| enum cache min default	count=1
return	to the client ||| bool	count=1
function_name	deletes ||| deletemailbox	count=1
function_name	several components ||| components	count=1
function_name	squares problem find min ||| squares	count=2
namespace	the specified code ||| intlchar	count=1
function_name	a block [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	loader ||| loader	count=1
namespace	buffer provided ||| eventbuffer	count=1
namespace	first max_bytes [namespace] ||| [namespace]	count=1
arg_pair	or the ||| int $blue	count=1
function_name	a stride value that ||| stride for	count=1
arg_pair	copies data ||| string $data	count=1
function_name	regex ||| regex	count=3
function_name	returned by ||| bzerrstr	count=1
function_name	last imap [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	external ||| libxml set external	count=1
arg_pair	as ||| resource $result_id	count=1
function_name	list of [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	and add the result ||| add vars	count=1
arg_pair	and the associated ||| resource $pdfdoc	count=1
function	database on [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	number database name user ||| string $host	count=1
function_name	the list of ||| list	count=1
function_name	handler callback function which ||| handler	count=2
arg_pair	entry named key ||| string $key	count=1
function_name	the minimum ||| min cand	count=1
function_name	3 font definition ||| end font	count=1
function_name	avoid specific ||| avoid method	count=1
function_name	specify a callback ||| replace callback	count=1
arg_pair	a ||| string $dsn boolean $force	count=1
function_name	get a doc ||| get doc	count=1
function_name	client [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	input ||| string $delimiter	count=1
function_name	sub [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	this function converts a ||| function	count=1
function_name	is [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	document frequency used ||| frequency	count=1
function_name	computes the intersection of ||| array uintersect assoc	count=1
function_name	[function_name_1] new record ||| [function_name_1] [function_name_2]	count=1
arg_pair	given user ||| string $user	count=1
arg_pair	mailboxes that ||| resource $imap_stream string $ref	count=1
arg_pair	specified flag to ||| int $options	count=1
namespace	get ||| directoryiterator	count=1
function_name	function ||| function	count=14
namespace	remaining contents in ||| function	count=1
namespace	a syncreaderwriter object ||| syncreaderwriter	count=2
function_name	decompresses the ||| decompress	count=1
function_name	cannot be represented with ||| set metadata	count=1
arg_pair	memcached::get() ||| callable $cache_cb float $cas_token	count=1
function_name	[function_name_1] garbage ||| [function_name_1] [function_name_2]	count=1
arg_pair	additional parameters seconds ||| int $seconds	count=1
function_name	current active [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	of html document ||| html	count=1
function_name	supported key size ||| key size	count=1
function_name	socket_write() [function_name] ||| socket [function_name]	count=2
function_name	pdi document ||| pdi	count=1
function_name	[function_name_1] command ||| mysqlnduhconnection bool simple [function_name_2] [function_name_1]	count=3
function_name	traverse over a ||| snmp2 real walk	count=1
arg_pair	with a set ||| resource $ann	count=1
function_name	while further call to ||| call	count=1
return	from a given result ||| object	count=1
function_name	the initial [function_name] ||| [function_name]	count=1
function_name	previous [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	horizontal scaling ||| horizontal scaling	count=3
function_name	the [function_name] for ||| job [function_name]	count=1
function_name	reads a character ||| read char	count=3
function_name	the next tuple ||| next	count=1
return	read the ||| bool	count=1
function_name	this is not ||| disable	count=1
function_name	and calls user-defined callback ||| gupnp control point browse	count=2
function_name	the minimum client ||| sybase min client	count=2
arg_pair	external ||| string $alias	count=1
function_name	given postgresql ||| pg	count=4
function_name	mime type ||| mime type	count=2
return	its ||| int	count=1
function_name	[function_name_1] virtual ||| [function_name_1] [function_name_2]	count=1
function_name	decrease ||| decrease	count=1
function_name	to ||| set	count=2
function_name	mode is ||| mode	count=1
arg_pair	variable with a column ||| mixed $variable int $type	count=1
namespace	function and having it ||| function	count=1
namespace	to this function ||| function	count=1
namespace	for some ||| mongocursor	count=1
function_name	as ||| fetch object	count=2
function_name	decoded quoted [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	data from table into ||| pgsql	count=2
return	through to the browser ||| int	count=1
arg_pair	filtertype on ||| int $filtertype	count=1
function_name	in ||| set	count=1
arg_pair	result of left to ||| mixed $left	count=1
namespace	by the server in ||| function	count=1
arg_pair	of array1 with values ||| array $array2	count=1
function_name	the field ||| fbsql field	count=1
function_name	the maximum number ||| mlt max num	count=3
function_name	password for the ||| fbsql set password	count=1
function	defined class [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	imagickpixel ||| imagickpixel	count=2
function_name	an image by ||| image	count=1
namespace	with the connection ||| function	count=1
function_name	color image by ||| image	count=2
arg_pair	queries ||| string $keyword	count=1
arg_pair	to a new mailbox ||| resource $imap_stream string $mailbox	count=1
function_name	a string holding ||| session register	count=1
return	occurrences ||| mixed	count=1
arg_pair	alpha ||| resource $p float $alpha	count=1
function_name	functions ||| functions	count=4
arg_pair	by pkcs12 ||| string $pkcs12	count=1
namespace	the session ||| sessionhandlerinterface	count=1
arg_pair	from ||| resource $image	count=1
function_name	closes connection ||| close	count=1
function_name	sqlstate error ||| sqlstate	count=1
function_name	string reference of string ||| decode numericentity	count=1
function_name	a glyph definition ||| end glyph	count=1
arg_pair	by dn ||| resource $link_identifier string $dn	count=1
function_name	creates ||| fbsql create	count=1
function_name	webp version of ||| imagewebp	count=1
function_name	returns the resulting ||| trader	count=1
function_name	a digest hash ||| openssl digest	count=1
return	a string for ||| string	count=1
return	given result ||| object	count=1
function_name	scaling ||| scaling	count=2
function_name	the last posix ||| posix get last	count=1
arg_pair	from position offset with ||| int $offset	count=1
function_name	client [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	[function_name_1] given key ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	array1 with the same ||| array $array2	count=1
function_name	it ||| state	count=1
arg_pair	that the ||| int $type	count=1
function_name	[function_name_1] into ||| [function_name_1] [function_name_2]	count=3
function_name	open a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] code ||| [function_name_1] [function_name_2]	count=6
arg_pair	[arg_pair_1] like mssql_connect() ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	the quickprop decay factor ||| quickprop decay	count=1
namespace	removes an event from ||| event	count=1
function_name	cipher ||| cipher	count=4
function_name	scales the ||| scale	count=3
function_name	reduce the ||| reduce	count=1
namespace	for the page ||| harupage	count=1
arg_pair	result ||| string $class_name	count=1
namespace	function allows to ||| function	count=1
function_name	dio_read() [function_name_2] ||| [function_name_1] [function_name_2] resource $fd	count=1
function_name	blob/clob data and ||| cubrid lob	count=1
arg_pair	on the ||| resource $psdoc int $imageid	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] rprop [function_name_2]	count=8
namespace	of [namespace] rows that ||| [namespace]	count=1
arg_pair	identical to htmlspecialchars() ||| bool $double_encode	count=1
namespace	collection and deletes its ||| mongocollection	count=1
function	[function_name_1] the associated ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	represents the distinguished name ||| array $extraattribs	count=1
function_name	neural network from ||| fann create	count=1
arg_pair	a ||| string $namespaceuri string $qualifiedname	count=1
namespace	for maxdb_options() and ||| function	count=1
arg_pair	a page in the ||| int $page string $dest	count=1
arg_pair	mailbox see imap_open() ||| string $old_mbox	count=1
function_name	sets a ||| set opt	count=1
function_name	the ending line number ||| get end line	count=1
function	[function_name_1] an snmp ||| [arg_pair_2] [function_name_1]	count=3
function_name	service proxy [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	row in a ||| db2 fetch	count=2
arg_pair	number of ||| int $offset	count=1
return	the set of monitored ||| bool	count=1
function_name	if the [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	constructs a batch of ||| construct	count=2
arg_pair	the closest ||| int $blue	count=1
return	an rpm [return] ||| [return]	count=1
arg_pair	input for fields ||| string $input string $delimiter	count=1
namespace	remaining idle ||| mongocursor	count=1
namespace	integer unicode ||| intlchar	count=1
namespace	[namespace] into the ||| [namespace]	count=2
arg_pair	glue ||| array $pieces	count=1
function	subtraction of [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	semaphore ||| sem	count=2
arg_pair	service provider ||| string $request_token_url string $callback_url	count=1
function	[function_name_1] width ||| [function_name_1] [arg_pair_2]	count=4
function_name	the [function_name] ||| [function_name] get	count=1
function_name	exports image ||| export image	count=1
function_name	drops this collection ||| drop	count=1
function_name	gearmanclient::addtasklowbackground() this ||| run	count=1
function_name	to enable highlighting for ||| highlight highlight	count=1
function_name	existing information stored with ||| metadata	count=1
arg_pair	table or a list ||| string $fk_owner	count=1
function_name	selects records ||| select	count=1
function_name	deletes a ||| pdf delete	count=2
function_name	sybase_fetch_row() that uses ||| sybase	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] error [function_name_1]	count=6
arg_pair	of the ||| int $options resource $compcode	count=1
function_name	the default directory ||| directory	count=1
function_name	you the number ||| num	count=1
function_name	various internal readline ||| readline info	count=2
function_name	enchant ||| enchant	count=1
function_name	returns the size associated ||| get size	count=1
function_name	in the complete ||| start	count=1
function_name	determines the maximum number ||| cascade max cand	count=1
arg_pair	a magnitude / ||| string $magnitude	count=1
function_name	[function_name_1] parameter setting ||| [function_name_2] [function_name_1]	count=2
function_name	acquires stream ||| stream	count=1
arg_pair	batch of delete operations ||| array $write_options	count=1
function_name	sets per-index weights ||| set index	count=1
function_name	the query ||| escape query	count=1
function_name	queries the repository url ||| svn	count=1
return	whether the current element ||| bool	count=1
function	[function_name_1] data by ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	a ||| resource $psdoc	count=4
function_name	stereo ||| stereo	count=1
function_name	image with the next ||| image	count=1
function_name	return value for this ||| return	count=1
function_name	data store only ||| apcu	count=1
arg_pair	given color pair to ||| int $fg	count=1
namespace	a set of ||| gearmanclient	count=1
function_name	with ||| run	count=1
function_name	callback handler ||| callback handler	count=2
return	will not block on ||| resource	count=1
arg_pair	within the ||| float $upperrighty int $page	count=1
function_name	launched via ||| win32 start	count=1
function	reference [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	include the lower ||| include lower	count=4
function	[function_name_1] [arg_pair_2] ||| [function_name_1] from callback [arg_pair_2]	count=1
function_name	field ||| cubrid field	count=2
namespace	current element ||| limititerator	count=1
function_name	error which ||| error	count=1
function_name	number of activation steepnesses ||| cascade activation steepnesses count	count=1
arg_pair	pl/sql array ||| int $max_item_length int $type	count=1
function_name	apcu ||| apcu	count=1
arg_pair	from ||| resource $result_id	count=1
function_name	country and region ||| region by name	count=1
arg_pair	of ||| resource $p	count=1
return	remaining idle on ||| mongocursor	count=1
function_name	returns the names ||| get	count=2
function	[function_name_1] a file ||| [arg_pair_2] [function_name_1]	count=3
function_name	returns the variable with ||| get	count=1
function_name	minimum document ||| facet enum cache min default	count=1
arg_pair	mssql_connect() ||| string $password bool $new_link	count=1
function_name	response ||| response	count=7
arg_pair	color pair to ||| int $fg	count=1
function_name	returns the actual ||| get document	count=1
function_name	used with the connection ||| database	count=1
function_name	intersection of ||| array uintersect assoc	count=1
function_name	used to escape certain ||| ingres escape	count=1
namespace	starts ||| gearmanclient	count=1
function_name	[function_name_1] input buffer ||| [function_name_2] [function_name_1]	count=1
arg_pair	that the ||| int $type mixed $value	count=1
function_name	fields associated ||| field	count=1
function_name	bytes required to display ||| db2 field display size	count=1
function_name	[function_name_1] should terminate ||| [function_name_2] [function_name_1]	count=1
function_name	turns off the ||| disable	count=1
function_name	the number ||| get num	count=1
function_name	opendir readdir and closedir ||| readdir	count=1
return	to connect to a ||| string	count=1
function_name	ini entries for ||| inientries	count=1
function_name	cubrid databases ||| cubrid list dbs	count=1
function_name	group cache [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	and breaks ||| array	count=1
function_name	[function_name] phrase ||| set [function_name] use phrase highlighter	count=1
namespace	stylesheet given ||| xsltprocessor	count=3
function_name	abstract merge ||| merge	count=1
function_name	containing all supported encodings ||| mb list encodings	count=1
namespace	idle on the server ||| mongocursor	count=1
function_name	[function_name_1] external ||| [function_name_1] [function_name_2]	count=1
return	the route which ||| string	count=1
namespace	used by ||| mongoid	count=1
function_name	frequency ||| frequency	count=2
function_name	[function_name_1] rows ||| [function_name_2] [function_name_1]	count=3
namespace	receiving ||| function	count=1
function_name	primary ||| primary	count=1
function_name	corresponding to ||| geoip id by	count=1
function_name	of the query syntax ||| query	count=1
function_name	a passive member ||| is passive	count=1
arg_pair	a server ||| string $namespace mongodb\driver\query $query	count=1
arg_pair	added to ||| string $localname	count=1
return	should only be ||| void	count=1
function_name	sort [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	referenced file ||| file info	count=1
arg_pair	value of ||| resource $p	count=1
arg_pair	the associative or indexed ||| string $arg_separator int $enc_type	count=1
function_name	name used with the ||| fbsql	count=1
function_name	move all data ||| add buffer	count=1
return	how to composite the ||| bool	count=1
function_name	[function_name] with ||| [function_name]	count=2
function_name	to place after the ||| get postfix	count=1
function_name	row ||| fetch object	count=2
function_name	in ||| set metadata	count=2
function_name	to secondaries ||| get slave okay	count=3
function_name	belongs ||| pg	count=1
return	or [return] ip ||| [return]	count=1
namespace	for a ||| gearmanclient	count=1
arg_pair	the specified directory on ||| resource $ftp_stream string $directory	count=1
function_name	the resolution as ||| getimageresolution	count=1
function_name	which glyphs are available ||| ps symbol name	count=1
namespace	with their unicode ||| intlchar	count=1
arg_pair	point for new ||| float $x float $y	count=1
function_name	fit ||| fit v	count=2
function_name	matches color ||| opaque paint	count=1
arg_pair	when the ||| int $type	count=1
function_name	current [function_name_2] ||| [function_name_2] [function_name_1]	count=26
function_name	event handler for the ||| event handler	count=1
function_name	get unpacked size ||| get unpacked size	count=2
arg_pair	key associated with pub_key_id ||| mixed $signature_alg	count=1
function_name	include the [function_name_2] ||| [function_name_2] [function_name_1]	count=17
arg_pair	to memcached::get() except ||| callable $cache_cb	count=1
namespace	to true and ||| function	count=1
function_name	submit ||| submit	count=1
return	base character ||| bool	count=1
function_name	append ||| append	count=1
function_name	[function_name_1] default ||| [function_name_1] [function_name_2] handler	count=1
function_name	default background [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	on a ||| resource $stream	count=1
return	value of [return] null-value ||| [return]	count=1
function	[function_name_1] width ||| [arg_pair_2] [function_name_1]	count=4
function_name	one of [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	the ||| resource $ann int $cascade_max_out_epochs	count=1
function_name	the [function_name] for a ||| job [function_name]	count=1
function_name	dns resource records ||| dns get record	count=1
function_name	an id3 tag ||| id3 set tag	count=1
namespace	fetch an snmp ||| snmp	count=2
function	[function_name_1] style ||| [function_name_1] [arg_pair_2]	count=3
return	used ||| mongoid	count=1
function_name	to the backtick operator ||| shell exec	count=1
function_name	pdi document parameter ||| pdi value	count=1
namespace	error string of any ||| function	count=1
return	as dictated by the ||| bool	count=1
function_name	the [function_name] write ||| [function_name] gtid	count=1
namespace	name of the internet ||| function	count=1
function_name	method [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	supplied hash implements ||| integer $algo	count=1
function_name	printable string created ||| printable	count=1
function_name	gets the inner ||| get inner	count=4
return	constructs a ||| mixed	count=1
arg_pair	given number of ||| string $str	count=1
arg_pair	cipher / mode combination ||| string $cipher string $mode	count=1
function_name	query multiple queries are ||| cubrid query	count=1
function_name	[function_name_1] root device ||| [function_name_2] [function_name_1]	count=6
function_name	to file_get_contents() except ||| contents	count=1
namespace	this function is only ||| mongoid	count=1
function_name	modifiers ||| modifiers	count=1
function_name	output change [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	returns internal [function_name_2] ||| [function_name_1] [function_name_2]	count=9
arg_pair	specified flag ||| int $options	count=1
namespace	[namespace] including ||| [namespace]	count=1
function_name	stores it ||| file	count=1
function_name	[function_name_1] slop ps2 ||| [function_name_1] [function_name_2]	count=3
function_name	phrase queries built ||| phrase	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] copy to [function_name_2]	count=8
function_name	the current transformation matrix ||| get trans matrix	count=1
function_name	checks this ||| disable	count=1
function_name	the shared secret is ||| server secret	count=1
arg_pair	callback ||| callable $callback	count=6
function_name	of all the constants ||| constants	count=1
namespace	this function implements a ||| function	count=1
function_name	inner [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function	attribute in [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	image alpha [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	a primary [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	executes custom function ||| eio custom	count=1
function_name	current stroke ||| stroke	count=1
function_name	encoding ||| encoding set char	count=2
return	checks whether the cursor ||| bool	count=1
arg_pair	to a target ||| string $dest	count=1
function_name	fit the ||| fit	count=5
return	server to ||| bool	count=2
function_name	[function_name_1] rows ||| [function_name_1] [function_name_2]	count=2
function_name	large object [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	inclusion in an ||| sqlite3	count=1
namespace	the c [namespace] ||| [namespace]	count=1
arg_pair	middle point ||| float $x	count=1
arg_pair	what ||| string $what int $start	count=1
function_name	previous frontbase [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	end ||| buffer	count=1
function_name	red ||| red	count=1
function_name	discrete fourier transform dft ||| fourier transform	count=1
function_name	contents ||| from	count=1
function_name	[function_name_1] image border ||| [function_name_2] [function_name_1]	count=1
function_name	called by ||| set state	count=1
function_name	deletes a textflow ||| delete textflow	count=1
function_name	[function_name_1] a dictionary ||| [function_name_1] [function_name_2]	count=5
return	current ||| array	count=1
namespace	or not [namespace] ||| [namespace]	count=1
function_name	server without waiting for ||| pg send	count=1
function_name	current ||| gravity	count=1
function_name	query multiple ||| query	count=2
function_name	upper ||| upper	count=2
function_name	short name of the ||| short name	count=2
function_name	the rot13 encoding on ||| str rot13	count=1
function_name	pdi document parameter with ||| pdf get pdi value	count=1
function_name	[function_name_1] ip ||| [function_name_2] [function_name_1]	count=1
arg_pair	[arg_pair_1] a ||| [arg_pair_2] [arg_pair_1]	count=10
function_name	the field ||| field	count=1
function_name	or returns [function_name] ||| [function_name] fetch assoc	count=1
return	method checks ||| bool	count=1
arg_pair	returns a resource handle ||| string $encoding string $separator	count=1
function_name	return the ||| terms return	count=1
function_name	[function_name] the current ||| [function_name]	count=1
arg_pair	the server in response ||| int $format	count=1
namespace	extension ||| reflectionextension	count=3
arg_pair	after the ||| int $timeout	count=1
function	blocking [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	id3 tag ||| id3 set tag	count=1
namespace	with ||| pharfileinfo	count=2
arg_pair	and stores them in ||| int $protocol	count=1
function_name	an url string argument ||| url	count=1
function_name	blob for reading and ||| ibase blob	count=1
function_name	as event handler ||| ibase set event handler	count=1
function_name	[function_name] the ||| [function_name] phar	count=1
function_name	loop immediately ||| base loopbreak	count=1
function_name	blob that has been ||| ibase blob	count=1
function	[function_name_1] during ||| [function_name_1] [arg_pair_2]	count=8
function_name	sqlsrv_prepare() ||| sqlsrv field	count=1
function_name	sets [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=1
return	specified code point ||| bool	count=1
function_name	iterations ||| iterations	count=1
function_name	dismax ||| use dis	count=1
function_name	text number of ||| text	count=1
function_name	any and turn ||| flush	count=1
arg_pair	combination of fbsql_fetch_row() and ||| resource $result int $result_type	count=1
arg_pair	r * x** r-1 ||| float $r	count=1
arg_pair	the given ||| resource $conn_identifier	count=2
function_name	debugging information into the ||| debug information	count=1
function	[function_name_1] [arg_pair_2] ||| bool [function_name_1] string $pathto [arg_pair_2] bool $overwrite	count=2
namespace	specified character ||| intlchar	count=2
function_name	get line number where ||| get line	count=1
function_name	retrieve the ||| imap get	count=1
function_name	share data between ||| share init	count=1
function_name	namespace [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	word ||| resource $dict string $word	count=1
function_name	train one epoch with ||| train epoch	count=1
namespace	class is defined internally ||| reflectionclass	count=1
return	this function prepares for ||| bool	count=1
function_name	the idle [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	has [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	find the numeric ||| strrpos	count=1
function_name	returns associative array of ||| get output	count=1
return	message [return] ||| [return]	count=1
function_name	maximum out epochs ||| max out epochs	count=1
function_name	gets column ||| column	count=1
function_name	the client and specified ||| sqlsrv client	count=1
return	returns a [return] of the ||| [return]	count=1
function_name	image alpha [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the path ||| path	count=1
function_name	digest ||| md	count=1
function_name	the width ||| width	count=3
function_name	a new ||| open	count=1
function_name	minimum document frequency to ||| terms min count	count=1
arg_pair	a new ||| string $width string $height	count=1
arg_pair	used afterward by the ||| string $baseclass	count=1
arg_pair	x and y ||| int $y	count=1
return	get the current ||| void	count=1
function_name	or set the ||| fbsql database	count=1
arg_pair	the log message log ||| string $log	count=1
function_name	a syntax highlighted version ||| highlight file	count=1
function_name	an imported [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	the string to ||| get	count=1
function_name	proxy [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	and the associated data ||| int $textflow	count=1
function_name	third parameter to exception::__construct() ||| previous	count=1
function_name	[function_name_1] local class ||| [function_name_1] [function_name_2]	count=1
arg_pair	pl/sql ||| int $max_item_length int $type	count=1
function_name	terminating neuron ||| to neuron	count=1
function_name	minimum document frequency ||| enum cache min default frequency	count=1
arg_pair	memcached::getmulti() except that ||| string $cas_tokens	count=1
arg_pair	[arg_pair_1] pattern ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=1
function_name	[function_name_1] increase ||| [function_name_1] rprop [function_name_2]	count=1
function_name	maximum length ||| max line len	count=1
function	[function_name_1] the flatness ||| [function_name_1] [arg_pair_2]	count=1
function_name	database instance for ||| dba	count=1
arg_pair	using connection and returns ||| resource $connection	count=1
function_name	the border ||| border	count=3
function_name	region ||| region by name	count=1
arg_pair	when the end is ||| int $type	count=1
namespace	thread ||| function	count=1
arg_pair	specifies a ||| string $field_override	count=1
function_name	is ||| get current	count=1
function_name	the canonicalized absolute pathname ||| realpath	count=1
function_name	stroking color ||| stroking color	count=2
function_name	writes ||| ifxus write	count=1
namespace	events output buffer ||| eventbufferevent	count=1
function_name	[function_name] their correspondent ||| [function_name] functions from file	count=3
arg_pair	string before ||| string $source_string	count=1
return	should ||| void	count=1
function_name	returns ||| offset get	count=1
function_name	parent classes ||| parents	count=1
function_name	permissible as the first ||| idstart	count=1
arg_pair	size of the buffer ||| int $type	count=1
namespace	member of ||| domelement	count=1
function_name	for the buffered event ||| event buffer	count=1
function_name	generates cryptographic random ||| random	count=1
function_name	gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| run	count=1
namespace	error code returned by ||| function	count=1
function_name	binary dump ||| bin dump	count=1
namespace	the outline is displayed ||| haruoutline	count=1
arg_pair	certain query result ||| resource $result	count=2
namespace	query ||| tokyotyrantquery	count=1
arg_pair	callback to ||| mixed $callback	count=1
function_name	digest hash value ||| digest	count=1
arg_pair	for the ||| int $key_len	count=1
arg_pair	ann based ||| resource $ann array $input_vector	count=1
function_name	identified by ||| pgsql lobunlink	count=1
function_name	a syntax highlighted ||| highlight file	count=1
function_name	provided in ||| add	count=1
function	blob length [arg_pair_2] ||| [function_name_1] info [arg_pair_2]	count=1
function_name	that cannot be ||| set metadata	count=1
arg_pair	gmp number ||| gmp $gmpnumber integer $word_size	count=1
arg_pair	of a ||| int $ndocs array $callbacks	count=2
function_name	[function_name_1] query parser ||| [function_name_2] [function_name_1]	count=5
namespace	memcache ||| memcached	count=1
function_name	into file specified by ||| file	count=1
arg_pair	zlib data format ||| string $data	count=1
function_name	of the specified events ||| event	count=1
function_name	maxdb resource suitable ||| maxdb	count=1
return	call starts ||| bool	count=1
arg_pair	character code to html ||| string $encoding bool $is_hex	count=1
arg_pair	constructs a ||| mixed $data	count=1
function_name	[function_name_1] static ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] a weblink ||| [function_name_1] [function_name_2]	count=1
arg_pair	starting from object_id and ||| string $object_id string $timeout	count=1
namespace	from the ||| event	count=1
function_name	[function_name_1] an ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] the name ||| ziparchive string [function_name_1] [function_name_2] index int $index int	count=1
function_name	target [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] ends when ||| [function_name_2] [function_name_1]	count=8
arg_pair	the ||| int $quality	count=1
arg_pair	the ||| bool $gray int $channel	count=1
function_name	ncurses ||| ncurses	count=1
arg_pair	of [arg_pair_2] ||| [arg_pair_1] int $pri [arg_pair_2]	count=1
function_name	activation steepnesses in ||| fann get cascade activation steepnesses count	count=1
arg_pair	can include 0 or ||| resource $connection	count=1
function_name	connection ||| yaz connect	count=1
function_name	in the train ||| train data	count=1
arg_pair	given password on ||| resource $dictionary string $password	count=1
function_name	the route which is ||| get	count=1
namespace	the properties ||| solrobject	count=1
arg_pair	the given xpath expression ||| domnode $contextnode	count=1
function_name	and php tags stripped ||| strip tags	count=1
function_name	returns a id3v2 ||| get id3v2 tag	count=3
function_name	gets column [function_name_2] ||| [function_name_1] [function_name_2]	count=4
namespace	with a file ||| pharfileinfo	count=1
arg_pair	namespaceuri and name ||| string $namespaceuri	count=1
function_name	creates an index on ||| create index	count=1
function	sets [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	memcached::prepend() except that ||| prepend	count=1
arg_pair	of ||| resource $filehandle	count=1
arg_pair	a ||| string $enclosure	count=1
function_name	the supplied exception ||| exception	count=1
function_name	private ||| openssl x509 check private	count=1
arg_pair	at revision revision ||| int $revision int $flags	count=1
arg_pair	at the specified index ||| mixed $index	count=2
namespace	[namespace] is currently ||| [namespace]	count=1
function_name	[function_name_1] the ||| [function_name_2] image [function_name_1]	count=3
arg_pair	converts unicode domain ||| string $domain	count=1
namespace	yaf_router s route ||| yaf_router	count=1
arg_pair	virtual file ||| resource $pdfdoc string $filename	count=1
function_name	phrase slop ps3 ||| phrase slop	count=2
namespace	retrieve current ||| yaf_action_abstract	count=1
namespace	database ||| sqlite3	count=1
function_name	view engine then ||| assign	count=1
function_name	compression ||| interlace scheme	count=1
function_name	date ||| date	count=1
function_name	a block ||| mhash get block	count=1
function_name	the default namespace ||| default namespace	count=1
return	in the ||| float	count=1
function_name	content [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	map the key to ||| mixed $value	count=1
function_name	dictionary for ||| dict	count=1
arg_pair	gmagickpixel object ||| gmagickpixel $color int $width	count=1
return	name ||| string	count=6
function_name	only used ||| state	count=1
function_name	soundex key of ||| soundex	count=1
function_name	sets the rotation ||| ps rotate	count=1
function_name	[function_name_1] the comment ||| [function_name_1] [function_name_2]	count=2
function_name	mongodb aggregation framework provides ||| aggregate	count=1
namespace	lob ||| oci-lob	count=2
function_name	actual size ||| filesize	count=1
function_name	the namespace ||| namespace	count=1
return	key [return] data ||| [return]	count=2
function_name	minimum document ||| cache min	count=1
function_name	message from last ||| message	count=1
function_name	creates an xml document ||| xml	count=1
arg_pair	is posted by ||| string $event_name1 string $event_name2	count=1
arg_pair	oid of the ||| resource $conn_identifier string $oid	count=1
function_name	represented with ||| set	count=1
namespace	of the hash in ||| quickhashintstringhash	count=1
function_name	parsers ||| create from	count=1
function	[function_name_1] posted ||| [arg_pair_2] [function_name_1]	count=2
function_name	method parses an response ||| response	count=1
arg_pair	memcached::getdelayed() except that ||| callable $value_cb	count=1
function_name	[function_name_1] the timeout ||| [function_name_1] [function_name_2]	count=1
namespace	cairoformat defined ||| cairoimagesurface	count=1
arg_pair	specified protocol level to ||| int $level	count=1
return	only ||| void	count=1
function	[function_name_1] annotation to ||| [arg_pair_2] [function_name_1]	count=4
function_name	cannot be represented ||| set	count=1
function_name	from the opcode cache ||| apc	count=1
function_name	get a doc ||| doc	count=1
function_name	socket ||| last socket	count=1
return	throwable ||| throwable	count=1
function_name	gets ||| get	count=45
arg_pair	function prepares for an ||| resource $id array $args	count=1
function_name	the databases available ||| list dbs	count=1
function_name	sets the cascade candidate ||| set cascade candidate	count=1
function_name	with existing ||| metadata	count=1
function_name	format to utf-16 ||| to utf16	count=1
arg_pair	acts very much like ||| string $servername	count=2
function_name	minimum document frequency used ||| min default frequency	count=1
function_name	an extended [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	returns if ||| splobjectstorage	count=1
function	metaphone key [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	a new ||| hwapi content new	count=1
function_name	and returns the remaining ||| get	count=1
arg_pair	variable_key in the ||| resource $shm_identifier int $variable_key	count=1
arg_pair	in the result-set from ||| int $type int $maxlen	count=1
namespace	id3 tag ||| ktaglib_tag	count=1
function_name	cascade output change fraction ||| cascade output change fraction	count=1
function_name	defines or redefines ||| ncurses init	count=1
function_name	pattern which was started ||| pattern	count=1
function_name	trace the ||| maxdb	count=1
function_name	[function_name_1] step error ||| [function_name_2] [function_name_1]	count=9
arg_pair	the browser ||| int $expire string $path	count=1
return	the regular ||| bool	count=1
function_name	view ||| assign	count=1
function_name	returns the variable with ||| get var	count=1
arg_pair	provided by dn which ||| array $dn	count=1
function_name	[function_name] the ||| [function_name] info	count=1
function_name	text rendering ||| text rendering	count=4
function_name	integer range [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	alpha and ||| resource $p float $alpha	count=1
namespace	the [namespace] field is ||| [namespace]	count=1
arg_pair	paths path1 ||| int $rev1	count=1
arg_pair	namespaceuri named localname ||| string $namespaceuri string $localname	count=2
function_name	of word ||| word	count=1
function_name	[function_name] for the ||| [function_name]	count=1
namespace	called ||| mongoid	count=1
function_name	by ||| set	count=2
return	number ||| number	count=2
function_name	from radian ||| rad2deg	count=1
function_name	draws a polyline using ||| polyline	count=1
return	using to ||| string	count=1
function_name	use for validation ||| relax ngschema	count=1
function_name	at the repository ||| svn	count=1
function_name	glyph definition ||| pdf end glyph	count=1
function_name	attribute node ||| attribute node	count=1
function_name	term to ||| set terms lower bound	count=1
arg_pair	and returns a resource ||| string $encoding	count=1
function_name	gets the current status ||| status	count=1
arg_pair	from fd file ||| mixed $fd	count=1
function	extract [arg_pair_2] ||| bool [function_name_1] [arg_pair_2] bool $overwrite	count=1
function_name	the word ||| word	count=1
return	internal array pointer ||| mixed	count=1
arg_pair	by the server ||| string $cookie	count=1
function_name	the [function_name] ||| mb ereg search [function_name]	count=1
function_name	permissions ||| permission	count=1
function_name	the file named by ||| pkey export to file	count=1
function_name	the text interword ||| get text interword	count=2
rest	is [function_2] ||| [function_2] [return_1]	count=3
function_name	a color ||| get color	count=1
namespace	method is a ||| reflectionmethod	count=2
function_name	[function_name_1] title ||| [function_name_2] [function_name_1]	count=3
function_name	scales the inputs ||| fann scale	count=2
arg_pair	the ||| mixed $value	count=2
arg_pair	in a ||| mixed $expression	count=1
function_name	returns the bit fail ||| get bit fail	count=1
function_name	if attribute ||| attribute	count=1
arg_pair	slant a given font ||| resource $font_index float $slant	count=1
function_name	opendir readdir and ||| eio readdir	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] mime [function_name_2]	count=1
arg_pair	sets the line width ||| float $width	count=1
arg_pair	color with the color ||| float $fuzz	count=1
arg_pair	the end is ||| resource $result	count=1
function_name	search query with ||| query	count=1
arg_pair	a list of ||| string $fk_table	count=1
arg_pair	x in || b ||| array $b	count=2
arg_pair	into a php variable ||| string $json	count=1
function_name	returns ||| get highlight	count=3
function_name	sets the value ||| offset set	count=2
arg_pair	hostname ||| int $port	count=1
function_name	returns the hostname of ||| get	count=1
function_name	the [function_name] and sets ||| [function_name]	count=1
function_name	a [function_name] the regular ||| preg [function_name]	count=1
arg_pair	url can be added ||| string $localname	count=1
function	the inverse [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	part of a ||| int $ndocs	count=2
namespace	this function returns ||| function	count=11
function_name	version ||| pg version	count=1
function_name	sets ||| set size	count=1
namespace	with the connection ||| eventhttpconnection	count=1
function_name	as opposed ||| user defined	count=1
function_name	file ||| save file	count=1
arg_pair	tracing ||| string $action_name	count=1
function	textflow and [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	mime kopfzeile in the ||| mime encode	count=1
function_name	[function_name_1] interword ||| [function_name_1] [function_name_2]	count=6
function_name	sets ||| fann set error log	count=2
function_name	returns the value for ||| get	count=1
function_name	statistics fields ||| stats fields	count=2
function_name	representing a row in ||| db2 fetch	count=1
function_name	minimum out epochs ||| min out epochs	count=1
function_name	specified code ||| isbase	count=1
function	[function_name_1] callback function ||| [function_name_1] [arg_pair_2]	count=1
return	used to prepare the ||| bool	count=2
function_name	[function_name_1] blob that ||| [function_name_2] [function_name_1]	count=6
arg_pair	to memcached::get() ||| callable $cache_cb	count=1
function_name	for retrieval ||| yaz	count=1
arg_pair	indexed by column ||| int $row_number	count=1
function_name	csr ||| csr export to	count=1
function_name	current php installation ||| imagetypes	count=1
function_name	type corresponding ||| geoip id by name	count=1
function_name	[function_name] xml ||| xml parser [function_name] ns	count=1
function_name	[function_name_1] field pf2 ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] recursive array $array1 [arg_pair_2]	count=10
namespace	iterator ||| apcuiterator	count=1
function_name	identifier ||| ibase fetch	count=1
function_name	move all ||| buffer	count=1
namespace	file referenced ||| splfileinfo	count=1
function_name	sets the ||| fbsql set	count=2
function_name	[function_name_1] control ||| [function_name_2] [function_name_1]	count=1
function_name	tells whether the opened ||| enc	count=1
function_name	sets the cascade output ||| set cascade output	count=1
namespace	clients for this job ||| gearmanjob	count=2
function_name	closes the [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| bool	count=1
function_name	removes one of ||| remove	count=1
return	shouldnt need ||| mongoid	count=1
arg_pair	in the keys array ||| array $keys	count=1
arg_pair	code to ||| bool $is_hex	count=1
function_name	[function_name_1] limit ||| [function_name_1] [function_name_2]	count=11
function_name	text interword ||| text interline	count=1
function_name	without invoking ||| without constructor	count=1
return	function returns a ||| resource	count=1
return	gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| bool	count=1
function_name	function as event ||| set event	count=1
arg_pair	of working copy files ||| string $path int $flags	count=1
arg_pair	flag ||| int $options	count=1
function_name	current transformation matrix of ||| get trans matrix	count=1
function_name	retrieves the boost value ||| boost	count=1
arg_pair	microsoft sql ||| array $connectioninfo	count=1
function_name	[function_name] cubrid ||| cubrid [function_name] export	count=2
arg_pair	a named ||| string $servicename string $machine	count=1
function_name	the pixels match ||| match	count=1
function_name	get the activation steepness ||| fann get activation steepness	count=1
return	control points to the ||| bool	count=1
namespace	main ||| solrquery	count=1
function_name	[function_name_1] of root ||| [function_name_2] [function_name_1]	count=3
function_name	starts a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	that matches color with ||| opaque paint	count=1
arg_pair	length and other useful ||| string $blob_id	count=1
function_name	the buffer ||| add buffer	count=1
namespace	the judy array ||| judy	count=1
namespace	directory this function ||| function	count=1
function_name	the repository url ||| svn	count=1
function_name	or ||| database	count=1
function_name	filling color [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] a query ||| [function_name_1] [function_name_2]	count=1
function_name	removes a variable ||| remove	count=1
function_name	the training ||| train	count=3
arg_pair	gets and [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] version ||| [function_name_1] set [function_name_2]	count=1
function_name	neural network ||| fann create	count=1
function_name	http output ||| http output	count=2
function_name	[function_name_1] name as ||| [function_name_1] [function_name_2]	count=1
function_name	returns the image ||| get	count=1
function_name	sets the border ||| pdf set border	count=6
function_name	formed by ||| checkdate	count=1
function_name	provided in ||| add buffer	count=1
namespace	causes the [namespace] to ||| [namespace]	count=1
function_name	closes a [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	number [function_name] ||| [function_name] field size	count=1
function_name	prepare next result ||| next result	count=2
arg_pair	the oid ||| resource $conn_identifier string $oid	count=1
function_name	binds the php ||| bind array	count=1
namespace	whether the current ||| limititerator	count=1
function_name	elements ||| elements by	count=1
return	amount of time ||| mongocursor	count=1
namespace	field s ||| mongocollection	count=1
function_name	sets the process ||| set process	count=3
function_name	[function_name_1] frontend/backend communication ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] of array1 ||| [function_name_1] recursive array $array1 [arg_pair_2]	count=1
function_name	informix server ||| ifx	count=1
function_name	reads from the ||| read	count=1
function_name	copies ||| copy from	count=1
namespace	of an internal zend ||| function	count=1
namespace	first point of a ||| function	count=1
function_name	turn ||| flush	count=1
function_name	an arbitrary ||| add nameddest	count=1
function_name	weight decay shift ||| weight decay shift	count=3
function_name	root [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	function tries ||| function	count=1
function_name	[function_name_1] severity level ||| [function_name_2] [function_name_1]	count=12
function_name	connection to an informix ||| ifx connect	count=1
arg_pair	ord in the ||| resource $psdoc int $ord	count=1
function_name	page ||| page	count=9
function_name	[function_name_1] the external ||| [function_name_1] [function_name_2]	count=1
function_name	training algorithmsfann_train_incremental fann_train_batch fann_train_quickprop ||| fann	count=1
namespace	a character ||| function	count=1
function_name	resolv ||| resolv	count=1
arg_pair	address ||| string $default_host	count=1
function_name	frees all ||| event base free	count=1
function_name	current state ||| missing	count=1
arg_pair	a ||| string $fieldvalue	count=1
arg_pair	to new mailbox see ||| resource $imap_stream string $old_mbox	count=1
function_name	the activation [function_name_2] ||| [function_name_1] [function_name_2]	count=23
function_name	opendir readdir and ||| readdir	count=1
function_name	outputs blocks e ||| block	count=1
function_name	bcompiler file ||| bcompiler	count=1
function_name	with namespace ||| ns	count=1
function_name	fills current ||| fill stroke	count=1
arg_pair	a message using ||| string $message integer $mode	count=1
function_name	creates ||| socket create	count=1
function_name	the activation function for ||| activation function	count=5
function_name	identifier ||| kill	count=1
function_name	digest hash value for ||| openssl digest	count=1
function_name	current active [function_name] within the ||| get [function_name]	count=1
arg_pair	requested a scrollable cursor ||| resource $stmt int $row_number	count=1
function_name	fills ||| closepath fill	count=1
arg_pair	up callback ||| int $type mixed $callback	count=1
arg_pair	the ||| int $colorspace	count=1
function_name	too much [function_name] while ||| [function_name]	count=1
namespace	a result ||| sqlite3stmt	count=1
function_name	normal date parsers and ||| create from date	count=1
function_name	stream resource and ||| stream	count=1
return	the host name of ||| string	count=1
function_name	a mysqlnd connection handle ||| to mysqlnd	count=1
function_name	sets bigram [function_name_2] ||| [function_name_2] [function_name_1]	count=9
arg_pair	by dn ||| resource $privkey	count=1
function_name	set the activation function ||| set activation function	count=2
function_name	database ||| dba	count=5
arg_pair	data format ||| string $data	count=1
function_name	the current byte ||| current byte	count=2
function_name	returns the size ||| size	count=5
namespace	the stylesheet given ||| xsltprocessor	count=1
return	after remaining idle on ||| mongocursor	count=1
function_name	solrquery::facet_sort_count) ||| facet sort	count=2
return	used with the ||| string	count=1
return	php internally ||| mongoid	count=1
function_name	get a mime charset ||| mb preferred mime name	count=1
arg_pair	options that affect ||| resource $link array $options	count=1
function_name	a row as a ||| fetch object	count=1
function_name	two letter country code ||| country code by	count=1
arg_pair	specified by execute ||| int $pri	count=1
function_name	associated with query_identifier ||| msql	count=1
arg_pair	puts a key-value ||| string $value	count=1
function_name	[function_name_1] reads ||| [function_name_1] [function_name_2] resource $fd	count=1
function_name	[function_name_1] xml ||| [function_name_2] get current line [function_name_1]	count=1
function_name	any pixel that matches ||| paint opaque image	count=1
namespace	document ||| harudoc	count=8
arg_pair	colors in the ||| bool $gray	count=1
arg_pair	to ann based on ||| array $input_vector	count=1
function_name	the current fbsql daemon ||| fbsql list	count=1
function_name	[function_name] the regular ||| preg [function_name]	count=1
function_name	is only ||| set	count=1
arg_pair	string from the ||| int $enc_type	count=1
function_name	weight decay ||| weight decay	count=2
function_name	header string signature ||| request header	count=1
arg_pair	supplied hash ||| integer $algo	count=1
function_name	url string argument ||| with url	count=1
function_name	harudestination instance ||| destination	count=1
arg_pair	a connection resource ||| resource $resource	count=1
function_name	external attributes of ||| set external attributes	count=3
function_name	[function_name_1] handler ||| [function_name_1] [function_name_2]	count=15
function	frame [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	all tables ||| odbc tables	count=1
function_name	the activation function for ||| get activation function	count=1
function_name	fbsql ||| fbsql	count=1
namespace	number ||| harupage	count=1
function_name	[function_name_1] with block ||| [function_name_2] algorithm [function_name_1]	count=1
function_name	step-size is a positive ||| set rprop delta	count=1
function_name	the parent classes of ||| parents	count=1
function_name	output change ||| output change	count=2
arg_pair	str with a ||| string $str	count=2
function_name	filename that ||| filename	count=1
function_name	email ||| mail	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] clear [function_name_1]	count=9
function_name	arc ||| arc	count=1
function_name	a given result identifier ||| fetch object	count=1
function_name	[function_name_1] textflow and ||| [function_name_2] [function_name_1]	count=1
arg_pair	a row of the ||| resource $result_id int $row_number	count=1
arg_pair	service provider ||| string $http_method	count=1
arg_pair	be added to ||| string $file string $localname	count=1
function_name	sets ||| set option	count=4
return	the path [return] the ||| [return]	count=1
arg_pair	for reading a directory ||| string $directory	count=1
function_name	is owned locked ||| trylock	count=1
function_name	to ||| metadata	count=1
function_name	gets the [function_name] for ||| job [function_name]	count=1
function_name	[function_name_1] field is ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] status ||| [function_name_1] service [function_name_2] int $status int $checkpoint	count=1
function_name	kadm5 library using the ||| kadm5	count=1
function_name	shared memory block ||| shmop	count=2
function_name	[function_name_1] all ||| [function_name_1] [function_name_2] except splobjectstorage	count=1
function_name	a row as ||| object	count=1
function_name	has shortcut connections using ||| shortcut array	count=1
function_name	which the socket is ||| get socket name	count=1
function	[function_name_1] tracing ||| [function_name_1] set client info [arg_pair_2]	count=1
function_name	cubrid gets [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	exact color or the ||| int $blue	count=1
function_name	point of the path ||| close path	count=1
arg_pair	having to use mapreduce ||| array $pipeline	count=1
function_name	to the [function_name] of ||| [function_name]	count=1
return	the database has ||| bool	count=1
arg_pair	to a page in ||| int $page	count=1
arg_pair	a ||| int $dictionary_link	count=2
arg_pair	level to ||| int $level	count=1
namespace	attributes ||| hw_api_object	count=1
function_name	environment variable specified by ||| setenv	count=1
arg_pair	specified by remote_socket ||| string $remote_socket	count=1
function_name	and must be demangled ||| radius demangle	count=1
namespace	on the server for ||| mongocursor	count=1
arg_pair	a magnitude ||| string $complement string $magnitude	count=1
function	[function_name_1] object and ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name] for each ||| trader [function_name]	count=15
function_name	fetches multiple rows from ||| fetch all	count=1
function_name	contours of [function_name] while ||| reduce noise [function_name]	count=1
function_name	[function_name_1] [function_name_2] the ||| [function_name_2] [function_name_1]	count=5
function_name	[function_name_1] value integer ||| [function_name_1] [function_name_2]	count=3
function_name	term to ||| terms lower bound	count=2
function_name	status ||| stat	count=1
function_name	several ||| ps	count=1
function_name	column with field ||| oci field	count=1
namespace	called for each element ||| recursiveiteratoriterator	count=1
function_name	a dictionary for ||| dict	count=1
return	in the way ||| int	count=1
arg_pair	with the color ||| float $fuzz	count=1
arg_pair	color pair ||| int $pair	count=1
arg_pair	named by dirname ||| resource $context	count=1
arg_pair	the first occurrence ||| string $needle	count=1
return	not be ||| string	count=1
function_name	valid socket resource created ||| socket	count=1
function_name	corresponding ||| geoip	count=5
function_name	stream ||| stream	count=16
function_name	the dn [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	the current active ||| sybase select	count=1
function_name	an ip address ||| geoip	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] field prtlen [arg_pair_2]	count=3
function_name	cubrid [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	internet connection type corresponding ||| geoip id by	count=1
arg_pair	expression and returns a ||| string $expression	count=1
function_name	phrase bigram field ||| bigram phrase field	count=2
function_name	epochs the input connections ||| epochs	count=2
namespace	to norewinditerator ||| norewinditerator	count=1
function_name	used to trace ||| maxdb debug	count=1
function_name	highlighted ||| highlight	count=5
arg_pair	to a messaging ||| string $protocol	count=1
namespace	the message queue meta ||| function	count=1
namespace	the host name ||| function	count=1
function_name	idle callback [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	to new mailbox see ||| resource $imap_stream	count=1
namespace	a new quickhashintset ||| quickhashintset	count=1
return	will return a ||| string	count=1
namespace	from ||| arrayiterator	count=1
function_name	socket resource ||| socket connect	count=1
function_name	is an [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	fills [namespace] ||| [namespace]	count=1
function_name	preserve their meanings ||| htmlspecialchars	count=1
function_name	query determines which ||| query	count=1
return	on the ||| bool	count=4
arg_pair	[arg_pair_1] like mssql_connect() ||| [arg_pair_1] [arg_pair_2]	count=1
return	gearmanclient::addtasklowbackground() this call starts ||| bool	count=1
arg_pair	whitespace ||| string $character_mask	count=1
namespace	function is useful to ||| function	count=1
arg_pair	[arg_pair_1] to ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	all ||| commit	count=1
function_name	currently authorized publickeys ||| ssh2 publickey	count=1
function_name	[function_name_1] required oauth ||| [function_name_1] [function_name_2]	count=1
function	will write [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	[return] end ||| [return]	count=3
function_name	disabled via the disable_functions ||| disabled	count=1
function_name	limit ||| limit	count=4
function_name	[function_name_1] authenticator ||| [function_name_2] [function_name_1]	count=2
function_name	training data [function_name_2] ||| [function_name_1] cascadetrain on [function_name_2]	count=1
function_name	backpropagation neural network ||| fann create from file	count=1
arg_pair	an ||| imagick $imagick	count=1
function_name	next element is available ||| next element	count=1
function_name	not ||| get	count=1
arg_pair	specified by the object_id ||| string $object_id string $timeout	count=1
namespace	returned by microtime() ||| mongodate	count=1
arg_pair	during ||| resource $ann float $rprop_decrease_factor	count=1
arg_pair	the target color ||| mixed $target	count=1
arg_pair	[arg_pair_1] for ||| [arg_pair_1] int $first_num [arg_pair_2]	count=1
arg_pair	values of array1 ||| array $array1 array $array2	count=3
function_name	image format as one ||| get format	count=1
arg_pair	str in ||| string $str	count=1
namespace	function will send the ||| function	count=1
return	call this ||| bool	count=1
function_name	change the default directory ||| directory	count=1
function_name	database ||| mysql db	count=1
function_name	language described/referred ||| broker set ordering	count=1
function_name	color component ||| component	count=1
function	new pdf [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	server process with the ||| bool	count=1
arg_pair	point for new drawing ||| float $x float $y	count=1
function_name	the [function_name] ||| pg [function_name]	count=1
function_name	given ||| bzerrstr	count=1
arg_pair	prepares a ||| resource $link	count=1
function_name	current inner iterator ||| inner iterator	count=1
function_name	row as a ||| fetch object	count=1
function_name	timer event ||| event timer	count=1
function_name	general ||| char	count=1
return	be called after the ||| void	count=1
function_name	[function_name_1] transaction ||| [function_name_1] [function_name_2]	count=1
function_name	which ||| get current	count=1
namespace	id is created ||| mongoid	count=1
function_name	[function_name_1] callback ||| [function_name_1] [function_name_2]	count=2
arg_pair	no database is ||| string $collection	count=1
function	binds [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	current ||| limititerator	count=1
function_name	flags to be used ||| flags	count=1
function_name	minimum [function_name] epochs ||| fann get cascade min [function_name]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=8
function_name	as event [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	new image and ||| new image	count=2
function_name	shared memory segment ||| shm	count=1
function_name	drop remove a ||| drop db	count=1
function_name	the decrease [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	the ||| array	count=3
function_name	frequency ||| mlt min doc frequency	count=1
arg_pair	acts very much ||| string $servername	count=1
function_name	new pdf ||| pdf begin	count=1
arg_pair	by parameter pos ||| int $pos	count=1
function_name	structure of ||| imap bodystruct	count=1
arg_pair	specified opcode with ||| int $opcode callable $callable	count=1
function	[function_name_1] 0 ||| [arg_pair_2] [function_name_1]	count=8
arg_pair	entry in the ||| resource $link_identifier resource $result_entry_identifier	count=1
arg_pair	color pair ||| int $pair int $fg	count=1
function_name	other content item ||| pdf end item	count=1
function_name	[function_name_1] blur filter ||| [function_name_2] [function_name_1]	count=3
function_name	current solr [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	will write ||| write	count=1
return	reason for a ||| string	count=1
function_name	sets ||| mysqlnd ms set	count=1
return	this function ||| mongoid	count=1
namespace	unicode characters between the ||| intlchar	count=1
arg_pair	returns the portion ||| bool $before_needle string $encoding	count=1
arg_pair	data ||| int $max_bytes	count=1
function_name	epochs determines the maximum ||| max	count=1
function_name	current controller object ||| get controller	count=1
arg_pair	enumerate ||| int $namechoice	count=1
function_name	next index present that ||| next	count=1
return	if multiple sql ||| bool	count=1
function_name	from file specified ||| from file	count=2
function_name	read a ||| read	count=1
function_name	[function_name_1] binary attribute ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] hostname ||| [function_name_1] [arg_pair_2]	count=1
function_name	an image or template ||| image	count=1
function_name	frees all the resources ||| free	count=1
function_name	string padded ||| pad	count=1
namespace	get the ||| harupage	count=1
function	[function_name_1] namespaceuri named ||| [arg_pair_2] [function_name_1]	count=4
function_name	connection type corresponding to ||| geoip id by	count=1
arg_pair	used with the connection ||| resource $link_identifier	count=1
function_name	refer to the ||| odbc foreignkeys	count=1
arg_pair	event base ||| callable $cb	count=1
function_name	[function_name_1] an ip ||| [function_name_2] [function_name_1]	count=1
function_name	the opendir readdir ||| readdir	count=1
function_name	of the query syntax ||| escape query	count=1
arg_pair	a text rectangle using ||| string $text resource $font	count=1
function	updates [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	dismax ||| dis	count=1
namespace	being [namespace] the maxdb ||| [namespace]	count=1
function_name	of activation ||| get cascade activation	count=1
return	all associated ||| array	count=1
function_name	xbm version ||| imagexbm	count=1
namespace	from the dom ||| domdocument	count=1
return	resource pointed [return] ||| [return]	count=2
arg_pair	mode on a ||| bool $mode	count=1
function_name	[function_name_1] corresponding ||| [function_name_2] country [function_name_1]	count=2
arg_pair	enables automatic compression ||| float $min_savings	count=1
namespace	the [namespace] on disk ||| [namespace]	count=1
function_name	the minimum number ||| min cand	count=1
arg_pair	whether the entry was ||| int $key	count=1
arg_pair	given method and key ||| string $data string $method	count=1
arg_pair	[arg_pair_1] the object_id ||| [arg_pair_1] [arg_pair_2]	count=2
rest	[return_1] text at ||| [return_1] newt draw root [function_2]	count=1
function_name	activation [function_name_2] ||| [function_name_2] [function_name_1]	count=29
arg_pair	apcs data ||| string $cache_type bool $limited	count=1
function_name	url-encoded query string ||| http build query	count=2
arg_pair	number of characters using ||| string $str int $width	count=1
function_name	fetches ||| object	count=1
function_name	the phar::startbuffering() method ||| buffering	count=1
arg_pair	to the specified ||| resource $image	count=1
function_name	submit [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	used to ||| maxdb	count=1
function	[function_name_1] that an ||| [function_name_1] match [arg_pair_2]	count=3
return	remote file from the ||| bool	count=1
function_name	in the route process ||| get current route	count=1
function_name	technically unnecessary the phar::startbuffering() ||| start buffering	count=1
function_name	the options ||| options	count=1
function_name	the given file pointer ||| bzerrstr	count=1
arg_pair	correspond to ||| int $row	count=1
function_name	group [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] key ||| [function_name_1] [function_name_2]	count=1
arg_pair	a magnitude / ||| string $complement string $magnitude	count=1
function_name	of encoding the content ||| encoding	count=1
arg_pair	stream to a ||| resource $imap_stream	count=1
namespace	by following [namespace] ||| [namespace]	count=1
function_name	[function_name_1] the image ||| [function_name_1] [function_name_2]	count=1
namespace	checks whether ||| mongocursorinterface	count=1
function_name	bytes determined by ||| openssl random pseudo bytes	count=1
function_name	specified directory entry ||| zip entry	count=4
function_name	stores an existing ||| file	count=3
function_name	tag ||| by tag	count=1
function_name	gets the value associated ||| get	count=1
arg_pair	a stream ||| string $algorithm	count=1
function_name	or alter parser options ||| bbcode	count=1
function_name	dump [function_name_2] ||| [function_name_1] [function_name_2] mysqlnd_connection $connection	count=2
function_name	by gettext() and similar ||| bind textdomain	count=1
function_name	a new ||| content new	count=1
function_name	xhprof data [function_name_2] ||| [function_name_2] [function_name_1]	count=3
rest	changes the [function_2] ||| [return_1] [function_2]	count=1
arg_pair	it is a stream ||| string $algorithm	count=1
function_name	an array of the ||| get args	count=1
arg_pair	path1 ||| int $rev1	count=1
arg_pair	a target url on ||| float $upperrighty string $url	count=1
function_name	information field ||| info	count=1
function_name	calls user-defined callback ||| gupnp control point browse	count=2
function_name	of ||| current	count=1
function_name	returns ||| mysqli get	count=5
function_name	row ||| fetch assoc	count=2
function_name	denoting the [function_name] of this ||| get [function_name]	count=1
function_name	representing the image obtained ||| imagecreatefromxbm	count=1
function_name	/ imaginary image ||| image	count=1
function_name	[function_name_1] counts ||| [function_name_2] [function_name_1]	count=1
function	binds [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	returns a bitfield ||| get	count=1
function_name	parses an xml ||| xml parse	count=3
arg_pair	to htmlspecialchars() ||| bool $double_encode	count=1
function_name	page and applies ||| pdf end page	count=1
return	from ||| mixed	count=2
function_name	the sunset time for ||| date sunset	count=1
function_name	adaptive blur filter ||| adaptive blur	count=2
function_name	the lower bound in ||| lower bound	count=1
arg_pair	message sequence number ||| int $msg_number	count=1
function_name	php internally ||| state	count=1
function_name	the bit [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	memory associated with query_identifier ||| msql	count=1
arg_pair	glue string ||| array $pieces	count=1
function_name	for all ||| match all	count=1
function_name	elapsed ||| last elapsed	count=1
function_name	to trace the ||| maxdb debug	count=1
function_name	time zone [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	hash ||| quickhashstringinthash	count=3
function_name	definition ||| pdf define	count=1
function_name	the size of the ||| size	count=1
namespace	returns the current image ||| imagick	count=1
function_name	training patterns [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	a new date ||| int $sec int $usec	count=1
function_name	fetches the next row ||| fetch	count=1
arg_pair	pair to ||| int $pair	count=1
function_name	property [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	returns one [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	the current ||| int $n	count=1
function_name	the oracle [function_name_2] ||| [function_name_1] [function_name_2] version	count=3
namespace	the hash ||| quickhashinthash	count=2
return	an array ||| array	count=24
function_name	short name ||| short name	count=6
function_name	sets blocking or ||| set blocking	count=2
function_name	[function_name_1] given xml ||| [function_name_2] get current line [function_name_1]	count=1
arg_pair	key ||| int $key	count=1
function_name	action with parameters ||| action	count=2
arg_pair	for a ||| string $encoding string $optlist	count=1
function_name	inner ||| inner	count=4
function_name	indicates the current value ||| value	count=1
function_name	identifier ||| ibase	count=1
function_name	[function_name_1] mode for ||| [function_name_2] [function_name_1]	count=4
arg_pair	two-dimensional array ||| int $skip int $maxrows	count=1
arg_pair	of characters using ||| string $str	count=1
function_name	current column number of ||| current column number	count=1
arg_pair	returns oracles ||| mixed $field	count=1
return	variable bound to ||| bool	count=1
function	[function_name_1] left_operand to ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	the given sequence ||| resource $imap_stream string $sequence	count=1
function_name	new train ||| train	count=1
function_name	cascade candidate ||| cascade candidate	count=2
arg_pair	the result-set from ||| int $maxlen	count=1
namespace	object from the ||| function	count=1
function_name	backpropagation neural network from ||| fann create from file	count=1
function_name	the server host name ||| get host info	count=1
function_name	sends a ||| pg send	count=2
function_name	maximum word length ||| mlt max word length	count=1
function_name	textflow into ||| pdf fit textflow	count=1
function_name	stored value with ||| apc cas	count=1
arg_pair	mailboxes ||| resource $imap_stream string $ref	count=1
function_name	[function_name_1] list ||| [function_name_2] [function_name_1]	count=1
arg_pair	the given string by ||| int $flags	count=1
arg_pair	adjusts the contrast of ||| float $beta	count=1
function_name	step error threshold factor ||| step error threshold factor	count=2
function_name	resets the ||| firstkey	count=1
function_name	the referenced file ||| file	count=1
function_name	hidden member ||| is hidden	count=2
function	environment [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	lowercase letters ||| lower	count=1
return	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or ||| bool	count=1
return	by php internally ||| mongoid	count=1
function_name	[function_name_1] otherwise it ||| [function_name_2] [function_name_1]	count=3
function_name	transaction ||| transaction	count=2
namespace	read snmp ||| snmp	count=1
arg_pair	from the admin_server ||| string $admin_server	count=1
arg_pair	and should ||| resource $session	count=1
function_name	active [function_name] within ||| get [function_name]	count=1
function_name	svm ||| svm	count=1
arg_pair	the ||| int $n	count=1
function_name	frees all the ||| event base free	count=1
function_name	[function_name_1] query ||| [function_name_1] [function_name_2]	count=19
function_name	constructs the ||| construct	count=2
function_name	binds a php ||| bind	count=2
function_name	creates and returns ||| create	count=1
function_name	a ||| string	count=2
function_name	the ssl_cipher_description ssl api ||| ssl	count=1
arg_pair	given set type ||| resource $conn_identifier string $oid	count=1
arg_pair	as a pseudo-object ||| resource $result_id int $fetch_flag	count=1
function_name	actual printed length ||| field prtlen	count=1
arg_pair	file specified by fd ||| mixed $fd int $pri	count=1
namespace	event pending ||| event	count=1
function_name	find the numeric position ||| strrpos	count=1
function_name	to escape certain ||| ingres escape string	count=2
arg_pair	a ||| resource $dict	count=1
function_name	returns query results ||| get	count=1
function_name	fields associated [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	compression method of ||| set compression	count=1
namespace	soapserver object between ||| soapserver	count=1
function	for the [arg_pair_2] ||| [function_name_1] password [arg_pair_2]	count=1
function_name	vector iv [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	image [return] ||| [return]	count=2
function_name	[function_name_1] attributes of ||| [function_name_2] [function_name_1]	count=6
function_name	kadm5 library using ||| kadm5	count=1
function_name	the next ingres error ||| ingres next error	count=1
function_name	one result [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	creates a directory ||| string $dirname	count=1
function_name	affected by a ||| ifx affected	count=1
function_name	image and [function_name] specified ||| [function_name] image channel distortion	count=1
function_name	libevent and [function_name] for the ||| [function_name]	count=1
namespace	retrieve the contents ||| cachingiterator	count=1
function_name	only ||| set metadata	count=2
arg_pair	given ||| resource $result_id	count=1
function_name	or gearmanclient::addtasklowbackground() this call ||| run	count=1
arg_pair	file consists of ||| resource $filehandle int $startpos	count=1
function_name	name ||| fbsql database	count=2
function_name	user function as event ||| event	count=1
arg_pair	the specified offset ||| int $offset int $initial_value	count=1
function_name	returns string [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	color image by ||| gmagick	count=1
function_name	replaces ||| dbase replace	count=1
function_name	query_identifier ||| msql	count=1
function_name	all matches ||| match all	count=1
function_name	conjunction with the phar::startbuffering() ||| stop buffering	count=1
function_name	of [function_name] of ||| [function_name] set	count=1
function	apache environment [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	specified connection resource ||| resource $connection	count=1
function_name	in each layer in ||| get layer array	count=1
return	collection ||| array	count=1
function_name	image matte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	specified by ||| string	count=1
function_name	[function_name_1] cascade ||| [function_name_1] [function_name_2] activation functions resource $ann	count=1
function_name	a new ssl buffer ||| ssl	count=1
function_name	absent that is ||| empty	count=1
arg_pair	text rectangle using postscript ||| resource $font	count=1
arg_pair	later ||| int $len	count=1
function_name	scales the inputs in ||| scale input	count=1
function	[function_name_1] by execute ||| [arg_pair_2] [function_name_1]	count=1
return	call starts running the ||| bool	count=1
function_name	[function_name] the ||| [function_name] get query trace	count=3
function_name	of sybase_fetch_row() that uses ||| sybase fetch assoc	count=1
function_name	maxdb resource ||| maxdb	count=1
function_name	the users query string ||| query	count=1
arg_pair	returns the ||| bool $before_needle	count=1
arg_pair	so that the ||| int $expiration	count=1
return	into [return] database ||| [return]	count=1
namespace	statement directly on the ||| pdostatement	count=1
function_name	event loop iteration ||| event	count=1
return	of a ||| bool	count=1
function_name	file ||| file	count=16
function_name	an extended ||| db\bson\from	count=1
arg_pair	messages ||| resource $imap_stream	count=1
arg_pair	and should fail ||| resource $session	count=1
function_name	extension ||| image type to extension	count=1
function_name	to ||| addnoiseimage	count=1
namespace	one row of ||| function	count=5
arg_pair	to ||| resource $result	count=1
return	this collection and ||| array	count=1
function_name	true if [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=3
function	length [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
return	or modifying a ||| void	count=1
namespace	data from the ||| eventbuffer	count=1
function_name	for [function_name] image ||| [function_name] image	count=1
arg_pair	the result ||| int $type	count=1
function_name	get statistics about ||| odbc statistics	count=1
function_name	[function_name] to ||| bbcode [function_name]	count=1
function_name	an aql ||| dbplus aql	count=1
function_name	path ||| closepath	count=1
function_name	the last ||| get last	count=3
function_name	the maximum supported keysize ||| algo key size	count=1
function_name	soap call ||| soap call	count=2
function	send [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	stream representing a variable ||| stream	count=1
function_name	sends a ||| send	count=3
arg_pair	if the word ||| resource $dict string $word	count=2
function_name	places a pdf ||| pdf place pdi	count=3
function_name	in the id3 ||| id3 get	count=1
arg_pair	real0 and returns the ||| array $real0	count=1
function_name	soap [function_name_2] ||| [function_name_1] [function_name_2] string $faultcode string $faultstring	count=1
namespace	used to trace the ||| function	count=1
function_name	an imported pdf page ||| pdf fit pdi	count=1
function_name	called ||| state	count=1
function_name	the [function_name] similar to ||| solarize [function_name]	count=1
return	existing information ||| void	count=1
namespace	of tasks previously ||| gearmanclient	count=1
function_name	with xml namespace support ||| ns	count=1
arg_pair	flags ||| int $flags	count=1
arg_pair	parameters seconds and nanoseconds ||| int $seconds int $nanoseconds	count=1
function_name	sets the initial size ||| set min	count=1
function_name	decrease debugging ||| apd set	count=1
function_name	or information ||| info	count=1
function	divides [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] in ||| [function_name_1] [function_name_2]	count=5
function_name	adds a tag to ||| add element	count=1
function_name	maximum word [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	some ||| mongocursor	count=1
function_name	part of the query ||| query	count=1
function_name	currently stored value ||| apc	count=1
function_name	working directory ||| svn	count=1
function_name	[function_name] activation ||| fann [function_name]	count=2
function_name	the client ||| sqlsrv client	count=1
function_name	parses ||| parse	count=2
function_name	dom class to ||| node class	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] field is null [arg_pair_2]	count=2
function_name	builtin in ||| builtin	count=1
arg_pair	by execute ||| callable $execute	count=1
namespace	that cannot ||| pharfileinfo	count=1
namespace	on the underlying driver ||| pdo	count=1
function_name	and saves ||| export	count=1
function_name	code ||| code by name	count=1
function_name	similar to strcasecmp() ||| strncasecmp	count=1
function	creates a [function_name_1] [arg_pair_2] subject to various options ||| [function_name_1] [arg_pair_2] string $optlist	count=1
return	to store the ||| bool	count=1
function_name	step-size may ||| fann get rprop delta	count=2
arg_pair	the given key ||| int $key	count=1
function_name	last call to maxdb_connect() ||| maxdb connect errno	count=1
return	of the appropriate ||| int	count=1
arg_pair	of snmp objects ||| string $community	count=2
function_name	to the end ||| add	count=1
return	gets the error string ||| string	count=1
function_name	large object and ||| pg lo	count=1
namespace	returns a result ||| sqlite3stmt	count=1
function_name	be used to ||| set	count=1
function_name	html document from ||| htmlfile	count=1
return	for ||| long	count=1
function_name	advances ||| end	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] get [function_name_2]	count=2
function_name	call starts ||| run	count=1
arg_pair	a message from a ||| string $target array $properties	count=1
arg_pair	into a php ||| string $json	count=1
function_name	the maximum ||| fann get cascade max	count=1
return	an integer solrquery::facet_sort_index or ||| int	count=1
arg_pair	set as the ||| string $error_msg	count=1
function_name	function creates ||| create processing	count=1
function_name	an xml string into ||| xml	count=1
function_name	returns an array ||| pg fetch array	count=1
arg_pair	given password on the ||| resource $dictionary string $password	count=1
arg_pair	opcode with the ||| callable $callable	count=1
return	result set object ||| sqlite3result	count=1
return	not block on disk ||| resource	count=1
function_name	sets boost function bf ||| set boost function	count=1
function_name	the status ||| status	count=2
function_name	thread id for the ||| thread id	count=1
arg_pair	a ||| string $iptcdata string $jpeg_file_name	count=1
arg_pair	scales the ||| int $height	count=1
arg_pair	options to an existing ||| int $textflow	count=1
function_name	runs the [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	the [function_name] of ||| get [function_name]	count=2
function_name	all the constants ||| constants	count=1
function_name	to traverse over ||| snmp2 real walk	count=1
arg_pair	from the update log ||| string $log_dir int $timestamp	count=1
function_name	host name ||| host info	count=1
return	count [return] containing ||| [return]	count=1
function_name	scale data in input ||| fann scale input	count=1
function_name	replaces the values ||| array replace	count=2
function_name	connection associated with ||| connection	count=2
return	expression to a pseudo ||| bool	count=1
function_name	[function_name_1] weight multiplier ||| [function_name_1] [function_name_2]	count=1
function_name	of labels that the ||| get labels	count=1
function_name	image with a convolution ||| edgeimage	count=1
function_name	bytes ||| bytes	count=1
function_name	rotation of the coordinate ||| ps rotate	count=1
return	one of the ||| int	count=2
function_name	from a binary ||| readimageblob	count=1
namespace	a prepared statement ||| pdostatement	count=1
function_name	[function_name_1] tag ||| [function_name_1] [function_name_2]	count=2
function_name	the activation function ||| get activation function	count=1
function_name	enable locking on an ||| enable locking	count=1
function_name	[function_name_1] interpolate pixel ||| [function_name_1] [function_name_2]	count=1
function_name	creates a copy of ||| clone	count=1
function_name	the priority ||| pcntl getpriority	count=1
namespace	whether ||| splfileobject	count=1
function_name	to display the php ||| php	count=1
function_name	[function_name_1] siblings ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] mode ||| [function_name_2] [function_name_1]	count=16
function_name	the ending [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the regex ||| set highlight regex	count=1
namespace	for some amount of ||| mongocursor	count=1
namespace	splobjectstorage ||| splobjectstorage	count=1
function_name	is used to execute ||| cubrid execute	count=1
function_name	suitable snippets ||| highlight max analyzed chars	count=1
function_name	the inner iterators children ||| children	count=1
namespace	internally it shouldnt need ||| mongoid	count=1
function	[function_name_1] external ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	specified connection resource ||| resource $connection bool $value	count=1
arg_pair	number from an ||| mixed $number	count=1
return	to get information about ||| ktaglib_id3v1_tag	count=1
function_name	a row as a ||| ibase	count=1
function_name	the client [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	and deletes its indices ||| mongocollection	count=1
arg_pair	correspond to ||| string $class_name	count=1
function_name	copies data [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	function for neuron ||| function	count=2
function_name	iterator entry is valid ||| valid	count=1
namespace	a ||| spltempfileobject	count=1
function_name	an html document from ||| save htmlfile	count=1
function_name	field ||| get field	count=1
arg_pair	of a variable ||| mixed $var bool $syntax_only	count=1
namespace	a given result identifier ||| function	count=1
arg_pair	image from the ||| int $filters	count=1
return	server for some amount ||| mongocursor	count=1
arg_pair	information provided by dn ||| array $dn	count=1
namespace	primary key in the ||| function	count=1
arg_pair	to ||| resource $image int $red	count=1
function_name	user ||| change user	count=2
function_name	steepnesses in the ||| steepnesses	count=1
namespace	base ||| intlchar	count=1
namespace	version of the ||| function	count=1
function_name	get or set the ||| fbsql	count=1
arg_pair	get ||| resource $link_identifier	count=1
function_name	method any file or ||| add file	count=1
function_name	makes an unified ||| xdiff string	count=1
return	whether the end of ||| bool	count=1
function_name	attaches an [function_name_2] ||| [function_name_1] vendor [function_name_2]	count=1
function_name	is used to escape ||| escape string	count=1
function_name	bcompiler extension stored bytecodes ||| bcompiler write	count=1
function_name	pid from ||| pid	count=1
function_name	[function_name_1] learning rate ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] entry contents ||| [function_name_1] [function_name_2]	count=1
function_name	pixel that matches color ||| paint transparent	count=1
function_name	create a config used ||| config create	count=1
namespace	by the user ||| mongoid	count=1
function_name	to be dismax ||| dis max	count=1
function_name	size of [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] id for ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] an ip ||| [function_name_1] vendor [function_name_2]	count=1
arg_pair	register a rpc call ||| string $uri string $method	count=1
namespace	the ||| intlchar	count=1
function_name	phrase bigram [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] candidate limit ||| [function_name_1] [function_name_2]	count=1
function_name	point size property ||| point size	count=1
arg_pair	left_operand to ||| string $left_operand	count=2
namespace	after ||| evloop	count=1
arg_pair	the server thats associated ||| resource $link_identifier	count=1
function_name	consider ||| fragsize	count=1
function_name	read data ||| read	count=1
function_name	a digest hash value ||| digest	count=1
function_name	sets ||| setthreadtitle	count=1
arg_pair	path in access ||| string $path int $flags	count=1
function_name	[function_name_1] key ||| [function_name_2] [function_name_1]	count=1
function_name	ends ||| end	count=3
function_name	is an ||| ingres fetch array	count=1
return	the string ||| void	count=2
function_name	avoid specific event ||| avoid	count=1
function_name	[function_name_1] activation steepnesses ||| [function_name_2] [function_name_1]	count=1
function_name	current element has children ||| has children	count=2
function_name	memory ||| free	count=1
function_name	a new train ||| train	count=1
function_name	digest for [function_name] image ||| [function_name] image	count=1
function_name	symlink ||| lchgrp	count=1
function	first attribute [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	set the [arg_pair_2] ||| [function_name_1] string $host [arg_pair_2]	count=1
function	[function_name_1] namespaceuri ||| [arg_pair_2] [function_name_1]	count=3
function_name	function closes ||| close	count=1
function_name	imaginary image ||| image	count=1
function_name	training ||| fann set	count=1
function_name	repository url ||| svn	count=1
function_name	sort [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	the bordercolor imagickpixel object ||| mixed $bordercolor	count=1
namespace	poll set ||| zmqpoll	count=2
return	in the ||| string	count=1
function_name	network ||| fann create	count=1
function	frontend/backend [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	elapsed time for the ||| elapsed time	count=1
function_name	encryption mode ||| encryption mode	count=2
function_name	the maximum supported keysize ||| get algo key size	count=1
function_name	and sort ||| sort	count=1
function_name	value of the horizontal ||| get horizontal	count=1
arg_pair	given entry ||| resource $link_identifier resource $result_entry_identifier	count=1
arg_pair	no ||| string $collection	count=1
function	[function_name_1] [arg_pair_2] multibyte regular expression ||| [function_name_1] [arg_pair_2]	count=2
function	function for [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
arg_pair	added to the tar/zip ||| string $file string $localname	count=1
function_name	csr and saves ||| csr	count=1
function_name	loads an ||| load	count=1
arg_pair	sends a ||| string $arg	count=1
function_name	one and ||| xdiff	count=1
function_name	returns the sarprop step ||| fann get sarprop step	count=1
function_name	of the route which ||| get	count=1
function_name	request token ||| get request token	count=2
function_name	the module name ||| module name	count=2
function_name	activation steepnesses in ||| activation steepnesses count	count=1
function_name	frees all memory associated ||| free	count=1
function_name	if the [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=4
namespace	when the outline is ||| haruoutline	count=1
function_name	[function_name_1] belongs to ||| [function_name_2] [function_name_1]	count=4
return	of the archive ||| int	count=1
arg_pair	a ||| string $stmtname	count=2
arg_pair	for a ||| string $owner	count=1
function_name	sets the current stroke ||| stroke	count=1
function_name	and sets the ||| set	count=1
function_name	gettext() ||| textdomain	count=1
arg_pair	that the time ||| int $timestamp	count=1
function_name	backup ||| backup	count=1
arg_pair	the uri containing ||| string $uri string $encoding	count=1
arg_pair	is posted by ||| string $event_name2	count=1
arg_pair	namespaceuri and ||| string $namespaceuri	count=1
function_name	the socket socket to ||| socket	count=1
arg_pair	of an entry ||| int $flags	count=1
return	the previously closed ||| int	count=1
function_name	the default [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	front of ||| eventbuffer	count=1
function_name	stops ||| stop	count=1
function_name	an informix server ||| ifx	count=1
function_name	[function_name_1] the train ||| [function_name_1] [function_name_2]	count=3
function_name	a range ||| range	count=1
function_name	[function_name_1] squares problem ||| [function_name_1] [function_name_2]	count=8
function_name	problem as an oauthexception ||| problem	count=1
function_name	php configuration ||| cfg var	count=1
function_name	new content ||| new	count=1
namespace	a property ||| reflectionproperty	count=1
function_name	new content ||| content new	count=1
function_name	acquires stream representing a ||| event stream	count=1
function_name	the client and ||| client	count=1
function_name	stream or context ||| stream context get params	count=1
function	if it [arg_pair_2] ||| [function_name_1] block algorithm [arg_pair_2]	count=3
function_name	[function_name_1] id for ||| [function_name_1] [function_name_2]	count=3
function_name	maximum ||| get cascade max	count=1
function_name	as a ||| ibase	count=1
function_name	changes size ||| size	count=1
function_name	a shared memory block ||| shmop	count=1
function_name	cipher by means ||| cipher info	count=1
return	must be called ||| void	count=1
function_name	creates [function_name_2] ||| [function_name_1] [function_name_2]	count=6
arg_pair	after the wrapper ||| int $options	count=1
function_name	suitable ||| maxdb	count=1
function_name	process title visible ||| process title	count=2
arg_pair	number determining the ||| resource $ann float $rprop_delta_zero	count=1
function_name	soap requests ||| soap	count=1
namespace	the underlying driver ||| pdo	count=2
function_name	external entity reference ||| external entity ref	count=1
namespace	used ||| mongodb	count=1
function_name	in an sqlite ||| sqlite escape	count=3
function_name	thumbnail by ||| thumbnail	count=1
function_name	of activation ||| cascade activation	count=1
function_name	stub written in php ||| stub	count=1
arg_pair	be messages from domain ||| string $domain	count=1
namespace	tag the ||| function	count=1
function_name	create a config ||| config create	count=1
function_name	represented by csr and ||| openssl csr export to	count=1
function_name	interface [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	parameters for future ||| params	count=1
function_name	a mysqlnd ||| to mysqlnd	count=1
function_name	[function_name_1] mime ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] a loaded ||| [function_name] font	count=1
function_name	activation steepnesses ||| fann get cascade activation steepnesses	count=1
return	cursor ||| bool	count=1
namespace	specified code point ||| intlchar	count=4
namespace	a member of the ||| domelement	count=1
namespace	front ||| eventbuffer	count=1
function_name	is the private ||| openssl x509 check private	count=1
arg_pair	text on the ||| string $text	count=1
function_name	internal character [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the thread ||| setthreadtitle	count=1
function_name	patch ||| string patch	count=1
function	matches [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	[arg_pair] replaces them ||| [arg_pair]	count=1
function_name	[function_name_1] a stream ||| [function_name_2] context [function_name_1]	count=1
function_name	training ||| train	count=7
function_name	calculates the group ||| posix	count=1
function_name	determines the maximum ||| get cascade max cand	count=1
function_name	data or [function_name] object ||| get [function_name]	count=1
function	[function_name_1] [arg_pair_2] initial step size ||| [function_name_1] [arg_pair_2]	count=4
function_name	of word [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	the initial [function_name_1] [arg_pair_2] initial step size ||| [function_name_1] zero [arg_pair_2]	count=2
function_name	returns the data associated ||| get	count=1
function_name	current active ||| select	count=1
function_name	registers a function ||| register callback	count=1
function_name	saves ||| ps save	count=1
function_name	the iv belonging to ||| get iv	count=1
return	code point is ||| bool	count=1
function_name	[function_name_1] from the ||| [function_name_1] [function_name_2]	count=1
function_name	text transformation matrix of ||| text matrix	count=1
function_name	the specified status callback ||| add task status	count=1
function_name	of the internet host ||| gethostbyaddr	count=1
function	[function_name_1] the given ||| [function_name_1] mixed $class [arg_pair_2]	count=2
function_name	message from ||| message	count=1
function_name	[function_name_1] handler callback ||| [function_name_2] [function_name_1]	count=1
function_name	a job server ||| server	count=1
function_name	one result row into ||| odbc fetch into	count=1
function_name	bias in ||| bias	count=1
function_name	a backpropagation neural network ||| fann create from	count=1
arg_pair	be called whenever a ||| string $value	count=1
arg_pair	oid of the ||| string $oid	count=1
function_name	the attribute [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	[namespace] instance ||| [namespace]	count=1
function_name	[function_name_1] on ||| [function_name_2] [function_name_1]	count=4
function_name	png ||| imagepng	count=1
function_name	the image obtained ||| imagecreatefromwbmp	count=1
function_name	ends ||| ps end	count=2
function_name	the previous ||| prev	count=1
function_name	replaces the given record ||| dbase replace record	count=1
arg_pair	of ||| string $host int $port	count=1
function	semaphore with [arg_pair_2] ||| [function_name_1] get int $key [arg_pair_2]	count=1
return	string and ||| array	count=1
function_name	starting line number ||| start line	count=1
function_name	ingres error ||| ingres next error	count=1
function_name	url string argument ||| connect with url	count=1
function_name	deletes ||| pdf delete	count=3
function_name	a mime charset string ||| mb preferred mime name	count=1
function_name	get the total width ||| width	count=1
return	returns a ||| array	count=1
arg_pair	query using an ||| string $query string $dbpath	count=1
function_name	current status ||| status	count=3
function	numbering [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	declaring ||| declaring	count=2
namespace	the characters in ||| function	count=1
function_name	of the miter ||| miter	count=2
return	the array ||| bool	count=1
function_name	[function_name_1] client ||| [function_name_1] [function_name_2]	count=5
function_name	the previous tuple for ||| prev	count=1
function	[function_name_1] on the ||| [arg_pair_2] [function_name_1]	count=7
arg_pair	a valid boost ||| string $fieldvalue	count=1
arg_pair	bson document ||| array $typemap	count=1
function_name	queryparser to be dismax ||| dis max	count=1
function_name	of the ||| get	count=3
function_name	get a doc comment ||| doc comment	count=1
namespace	retreives ||| eventutil	count=1
arg_pair	line width [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	the referenced ||| boolean	count=4
return	array ||| array	count=5
function_name	border dash style for ||| border dash	count=1
function	[function_name_1] variable ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	directory handle to ||| resource $context	count=1
arg_pair	the ||| int $rows	count=1
function_name	ssl buffer ||| ssl	count=1
function_name	array iterator ||| iterator	count=1
function_name	unlock ||| unlock	count=1
function_name	the transparent ||| imagecolortransparent	count=1
function_name	sends a ||| msg send	count=1
return	sort [return] keys ||| [return]	count=1
arg_pair	a string in ||| resource $psdoc	count=1
namespace	the entry was deleted ||| quickhashinthash	count=1
function_name	create [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	status callback set ||| task status	count=1
function_name	exception ||| exception	count=4
function_name	new root device ||| gupnp root device new	count=1
arg_pair	delimiter as fields delimiter ||| string $null_as	count=3
arg_pair	having to use mapreduce ||| array $pipeline array $options	count=1
function_name	one difference - an ||| fetch object	count=1
namespace	for each element ||| recursivetreeiterator	count=1
function_name	step [function_name_2] ||| [function_name_1] [function_name_2]	count=10
function_name	erases a specified portion ||| erase	count=1
function_name	adds ||| pdf add	count=3
function_name	[function_name_1] check ||| [function_name_1] [function_name_2]	count=3
function_name	writes to ||| write	count=1
arg_pair	requested option ||| int $option	count=1
namespace	of the hash in ||| quickhashstringinthash	count=1
function_name	transforms the ||| transform to	count=1
function_name	number of activation steepnesses ||| activation steepnesses	count=1
function_name	a given column in ||| bind column	count=1
arg_pair	a result set ||| resource $stmt string $classname	count=1
arg_pair	removes the specified directory ||| string $directory	count=1
function_name	[function_name_1] line number ||| [function_name_2] [function_name_1]	count=6
arg_pair	sorts [arg_pair] ||| [arg_pair]	count=1
function_name	fills and ||| pdf closepath fill	count=1
function_name	path ||| enchant broker get dict path	count=2
function_name	blob/clob ||| lob	count=1
function_name	by reference ||| by reference	count=2
arg_pair	text on ||| resource $pdfdoc string $text	count=1
namespace	querying the ||| function	count=1
function_name	current text transformation matrix ||| text matrix	count=1
arg_pair	moves a file ||| string $path string $new_path	count=1
function_name	property ||| property	count=5
namespace	time ||| mongocursor	count=1
return	the decrypted data ||| bool	count=1
arg_pair	file with a ||| string $prefix	count=1
function_name	the timer [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	of the class ||| reflectionclass	count=1
function_name	imports [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	given source string ||| string $source int $flags	count=1
function_name	[function_name_1] token ||| [function_name_2] [function_name_1]	count=6
function_name	error code [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	snmp ||| string $community	count=6
arg_pair	matches to pattern ||| mixed $pattern	count=1
arg_pair	of an ||| int $height	count=1
namespace	by buffer event ||| eventbufferevent	count=1
namespace	item with ||| memcache	count=1
arg_pair	to memcached::getmulti() except that ||| int $flags	count=1
function_name	apply color ||| color	count=1
function_name	the next line ||| next line	count=2
function_name	with query_identifier ||| msql	count=1
function_name	root elements name ||| root element name	count=3
function_name	enumerates the enchant ||| enchant	count=1
function_name	elements with a given ||| elements	count=1
function_name	consisting of the ||| preg grep	count=1
function_name	attaches [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	blob that has been ||| blob	count=1
function_name	collating ||| create collation	count=1
arg_pair	the given image ||| int $num_points	count=1
function	[function_name_1] of pid ||| [arg_pair_2] [function_name_1]	count=3
function	[function_name_1] of the ||| [function_name_1] [arg_pair_2]	count=35
function_name	off ||| disable	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] service [arg_pair_2]	count=2
function_name	gets ||| get path info	count=2
arg_pair	has been ||| string $interface_name bool $autoload	count=1
namespace	continuing the event ||| evloop	count=1
return	one of the signals ||| int	count=1
function_name	specify a [function_name] treated as ||| add facet date [function_name]	count=1
function	password for [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	overrides main filter query ||| filter query	count=1
function_name	returns the comment ||| get comment index	count=3
arg_pair	file consists of ||| resource $filehandle	count=1
return	number set by ||| int	count=1
rest	[return_1] another point ||| [function_2] [return_1]	count=2
namespace	this ||| pharfileinfo	count=1
arg_pair	memcached::add() except that the ||| int $expiration	count=1
return	logical expression to a ||| bool	count=1
function_name	4713 ||| juliantojd	count=1
function_name	this method stores an ||| file	count=3
function_name	the timeout ||| timeout	count=1
arg_pair	subsequent transformations with ||| string $namespace string $name	count=1
function_name	too much [function_name] while your ||| [function_name]	count=1
namespace	the ||| event	count=1
function_name	is [function_name] ||| is [function_name]	count=3
function_name	[function_name] corresponding ||| geoip [function_name]	count=3
function_name	[function_name_1] corresponding ||| [function_name_2] [function_name_1]	count=22
function_name	com object except that ||| com	count=1
function_name	mode ||| mcrypt	count=1
function_name	[function_name_1] output character ||| [function_name_2] [function_name_1]	count=1
function_name	font ||| imagepsslantfont	count=1
function_name	process identifier ||| posix kill	count=2
function_name	album ||| album	count=1
function_name	com_* [function_name] send to ||| simple [function_name] handle response	count=1
function_name	a pdf ||| pdf	count=2
function_name	global function table ||| function	count=1
function_name	recode ||| recode	count=1
function_name	returns a [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function	[function_name_1] request request ||| [arg_pair_2] [function_name_1]	count=1
function_name	is used to create ||| cubrid new	count=1
namespace	an archive ||| phardata	count=1
function_name	result identifier ||| result	count=1
arg_pair	by outfilename ||| string $outfilename	count=1
function_name	metaphone key ||| metaphone	count=1
function_name	fields that will be ||| fields	count=1
function_name	job server ||| server	count=1
function_name	returns a normalized ||| get normalized	count=1
function_name	name [function_name_2] ||| [function_name_2] region [function_name_1] by	count=2
namespace	model was trained ||| svmmodel	count=1
arg_pair	word is ||| resource $dict string $word	count=1
arg_pair	the callback function ||| array $array callable $callback	count=1
function_name	places an image ||| fit image	count=1
function_name	first key-value pair ||| yp first	count=2
function_name	returns the host ||| gethostbyaddr	count=1
function_name	soap header ||| soap header	count=2
function_name	is ||| get	count=1
function_name	attempt to connect ||| db2 conn	count=1
function_name	open stream resource and ||| stream	count=1
namespace	eventbuffer so that ||| eventbuffer	count=1
function_name	a facet ||| facet	count=1
arg_pair	a ||| string $separator	count=1
arg_pair	of layer sizes ||| float $connection_rate	count=1
function_name	entries ||| ldap	count=1
function_name	adds ||| bbcode add element	count=2
arg_pair	set the uri containing ||| string $encoding	count=1
function_name	set ||| set option	count=2
function_name	delete an entry in ||| delete	count=1
namespace	gearmanclient::addtasklowbackground() ||| gearmanclient	count=1
function_name	multi ||| multi	count=2
function_name	binds the ||| bind	count=2
function_name	the structure of ||| bodystruct	count=1
function_name	this ||| set	count=1
return	will return a string ||| string	count=1
function_name	[function_name_1] and returns ||| [function_name_1] [function_name_2]	count=4
arg_pair	the name variable_name ||| string $variable_name	count=1
function_name	opened [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=1
function_name	split a ||| split	count=1
function_name	return the parent directorys ||| dirname	count=1
function_name	block algorithms otherwise it ||| block algorithm	count=1
arg_pair	dn which represents the ||| resource $privkey	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] int $pri [arg_pair_2]	count=1
function_name	[function_name] their ||| [function_name] functions from file	count=3
function_name	[function_name] for this ||| [function_name]	count=1
function_name	digest hash ||| openssl digest	count=1
function_name	debug output if ||| memcache debug	count=2
arg_pair	string str in ||| string $str	count=1
function_name	servers started by mysqlnd_ms_xa_begin() ||| ms xa	count=1
namespace	point is a base ||| intlchar	count=1
arg_pair	in event_set() occurs ||| int $timeout	count=1
return	passed word ||| array	count=1
function_name	character codes in ||| mb encode numericentity	count=1
arg_pair	and ||| resource $connection string $qualifier	count=3
return	domentityreference ||| domentityreference	count=1
function_name	an access ||| get access	count=1
function_name	user function as event ||| set event	count=1
return	performs ||| string	count=1
function_name	a block algorithm ||| is block algorithm	count=2
function_name	represented by [function_name_2] ||| [function_name_2] [function_name_1]	count=8
namespace	in the bytecode cache ||| function	count=1
arg_pair	to ||| bool $exclusive	count=1
arg_pair	the watcher automatically ||| mixed $data int $priority	count=1
arg_pair	size in ||| string $field_override	count=1
function_name	syntax highlighted ||| highlight	count=1
function_name	pdf [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	entries by key ||| arrayiterator	count=1
function_name	sizes ||| sizes	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] set module name [arg_pair_2]	count=1
arg_pair	by the server ||| int $estimated	count=1
function_name	be [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	returned by gettext() and ||| textdomain	count=1
function_name	to be [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	and restores ||| function	count=1
arg_pair	on ||| resource $stream	count=1
function_name	built-in type ||| builtin	count=1
function_name	creates and ||| create	count=1
arg_pair	within a ||| string $pathto	count=1
function_name	of callback function ||| callback	count=1
function_name	a [function_name] ||| preg [function_name]	count=1
arg_pair	options that ||| resource $link array $options	count=1
function_name	unserializes ||| deserialize	count=1
function_name	pdflib version ||| pdf	count=1
function	[function_name_1] data ||| [function_name_1] [arg_pair_2]	count=3
function_name	connection to an ||| connect	count=1
namespace	soapserver object ||| soapserver	count=1
function_name	the default timezone used ||| date default timezone	count=1
function_name	takes a [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	country and region ||| by country and region	count=1
function	[function_name_1] fd ||| [arg_pair_2] [function_name_1]	count=1
function_name	or decrease debugging ||| apd set	count=1
arg_pair	distinguished name ||| array $extraattribs	count=1
arg_pair	to a target ||| float $upperrighty	count=1
arg_pair	of key into the ||| mixed $key	count=1
return	and ||| void	count=1
function_name	total number of bytes ||| total	count=1
function_name	which the regex ||| regex	count=2
arg_pair	set the ||| resource $link_identifier	count=1
function_name	a file that cannot ||| set metadata	count=1
function_name	used to trace the ||| maxdb debug	count=1
function_name	[function_name_1] group ||| [function_name_2] [function_name_1]	count=1
namespace	the arrayobject ||| arrayobject	count=1
function_name	export a ||| export	count=1
function_name	least squares problem ||| least squares	count=4
function_name	the column ||| cubrid column	count=1
namespace	image pair ||| imagick	count=1
function_name	image background [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	php script has been ||| script	count=1
function_name	serialization of [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	the ||| int $mode int $key_len	count=1
function_name	the opened ||| enc	count=1
function_name	in a postgresql database ||| pg	count=1
function	[function_name_1] with key ||| [arg_pair_2] [function_name_1]	count=1
function_name	arc of circle ||| imagearc	count=1
arg_pair	start inclusive limit exclusive ||| mixed $limit	count=1
function_name	filling [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] return [function_name_1]	count=1
arg_pair	display a result pdf ||| resource $fdf_document string $frame_name	count=1
function_name	for the previous ||| prev	count=1
function_name	[function_name_1] file selection ||| [function_name_2] [function_name_1]	count=2
return	or ||| void	count=1
function_name	unicode name ||| name	count=1
namespace	specified ||| intlchar	count=3
function_name	include [function_name_2] ||| [function_name_1] [function_name_2]	count=17
arg_pair	or the ||| int $green	count=1
function_name	code [function_name_2] ||| [function_name_2] country [function_name_1]	count=2
function	target frame [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	number of elements in ||| int	count=1
arg_pair	that correspond to the ||| string $class_name	count=1
function_name	current boost value ||| boost	count=1
arg_pair	of htmlentities() ||| string $string int $flags	count=1
function_name	[function_name_1] phrase fields ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] an exact ||| [arg_pair_2] [function_name_1]	count=2
function_name	vendor specific string attribute ||| vendor	count=1
function_name	reply that uses transfer-encoding ||| send reply start	count=1
function_name	timestamp nonce handler ||| timestamp nonce handler	count=3
arg_pair	an ibm db2 ||| array $options	count=2
namespace	php ||| mongoid	count=1
function_name	sink events generated by ||| event sink	count=1
function_name	intersection of arrays with ||| array uintersect assoc	count=1
arg_pair	insert operations ||| array $write_options	count=1
arg_pair	[arg_pair_1] callback function ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	sets the buffering for ||| set	count=1
function_name	[function_name] an entry ||| get [function_name] index	count=2
function_name	patches a string ||| string bpatch	count=1
arg_pair	from domain returned ||| string $domain string $codeset	count=1
function_name	format as one ||| get format	count=1
namespace	[namespace] re-initializes ||| [namespace]	count=1
function_name	[function_name_1] file name ||| [function_name_1] [function_name_2]	count=1
function_name	the specified location in ||| imagecolorat	count=1
function_name	sets ||| sybase set	count=1
function_name	loads [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	add a ||| add locallink	count=1
arg_pair	str from character code ||| string $str array $convmap	count=1
function_name	in ||| get current	count=1
function_name	[function_name_1] names of ||| [function_name_2] [function_name_1]	count=4
function_name	gets the [function_name_2] ||| [function_name_1] [function_name_2]	count=50
function_name	the notation declaration handler ||| notation decl handler	count=1
function_name	total number of bytes ||| total space	count=1
arg_pair	an ||| int $code	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] get int $key [arg_pair_2]	count=4
arg_pair	a ||| string $mask	count=1
return	path using nonzero winding ||| bool	count=1
function_name	used to traverse over ||| real walk	count=1
function_name	[function_name_1] environmental ||| [function_name_2] [function_name_1]	count=4
namespace	[namespace] domain to ||| [namespace]	count=2
arg_pair	of any pixel that ||| int $y	count=1
arg_pair	the given ||| int $isname	count=1
arg_pair	a given value name ||| int $property string $name	count=1
namespace	exception which results in ||| exception	count=1
function_name	the candidate limit ||| cascade candidate limit	count=2
function_name	proxy for ||| proxy	count=1
function_name	fetches the data ||| fetch	count=1
function_name	shouldnt need ||| set state	count=1
arg_pair	from domain ||| string $domain	count=1
function_name	stub so this ||| stub	count=2
function_name	for the referenced file ||| file	count=1
function_name	[function_name_1] interface names ||| [function_name_1] [function_name_2]	count=1
function_name	offset ||| offset	count=1
function_name	result identifier ||| fetch	count=1
arg_pair	to map the key ||| mixed $value	count=1
arg_pair	database ||| string $password string $database	count=1
function_name	end ||| add buffer	count=2
arg_pair	adds [arg_pair] ||| [arg_pair]	count=1
function_name	query multiple ||| cubrid query	count=1
return	paints the ||| bool	count=1
function_name	that matches color with ||| opaque paint image	count=1
arg_pair	during ||| resource $ann	count=3
function_name	current text [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	from utf-8 ||| pdf utf8	count=1
arg_pair	a new instance of ||| int $code_page	count=1
function_name	returns event base ||| get base	count=3
return	if ||| bool	count=13
return	a number ||| array	count=1
function_name	cipher ||| cipher info	count=1
function_name	the current [function_name_2] ||| [function_name_1] [function_name_2]	count=14
function_name	tasks in parallel ||| tasks	count=1
function_name	[function_name_1] exists ||| [function_name_2] [function_name_1]	count=9
arg_pair	them ||| string $functionname	count=1
function_name	current ||| pdf	count=9
function_name	flushes the ||| get flush	count=1
function_name	remove ||| remove	count=1
function_name	of the query ||| query chars	count=1
function_name	grouping ||| group	count=1
arg_pair	fetches the next ||| array $ctor_args	count=1
namespace	for safe inclusion ||| sqlite3	count=1
function_name	default ||| date default	count=2
function_name	route ||| get	count=1
arg_pair	usually of the same ||| int $method	count=1
arg_pair	original ||| string $alias	count=1
function_name	a single column ||| array column	count=1
return	the child before ||| void	count=1
function_name	sets ||| set preg	count=1
namespace	soapheader object ||| soapheader	count=1
return	restarts the ||| void	count=1
function_name	of activation steepnesses ||| get cascade activation steepnesses count	count=1
function_name	attribute ||| attr	count=3
namespace	member of the element ||| domelement	count=1
function_name	retrieve the error ||| error	count=1
function_name	that [function_name] ||| [function_name]	count=2
function	strip [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	a specific row ||| fetch	count=1
function_name	gets the declared interfaces ||| get declared interfaces	count=1
return	an ||| bool	count=1
function_name	the ||| bzerrstr	count=2
namespace	the given file pointer ||| function	count=1
arg_pair	with a unique ||| string $dir string $prefix	count=1
function_name	vector [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the total number ||| get total	count=2
function_name	whether ||| set is	count=1
arg_pair	when the end ||| resource $result int $type	count=1
arg_pair	temporarily ||| resource $fam resource $fam_monitor	count=1
arg_pair	immediately after the wrapper ||| int $options	count=1
function_name	user ||| state	count=1
arg_pair	from the service provider ||| string $verifier_token string $http_method	count=1
function_name	[function_name_1] entity ||| [function_name_2] [function_name_1]	count=4
arg_pair	expression ||| domnode $contextnode	count=1
function_name	[function_name_1] from the ||| [function_name_2] [function_name_1]	count=1
function_name	from radian to ||| rad2deg	count=1
function_name	space character according to ||| space	count=1
function_name	or stub written in ||| get stub	count=1
arg_pair	size of an ||| int $height	count=1
namespace	this collection and deletes ||| mongocollection	count=1
arg_pair	connection ||| string $user	count=1
function_name	reads a [function_name_2] ||| [function_name_2] [function_name_1]	count=7
return	point ||| bool	count=1
arg_pair	a large object and ||| resource $connection	count=1
function_name	stagnation [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	one of the ||| result	count=1
function_name	column names of the ||| column names	count=1
function_name	stroking color space ||| stroking color space	count=3
function	property value [arg_pair_2] ||| [function_name_1] enum [arg_pair_2]	count=2
function_name	and height as ||| image geometry	count=1
arg_pair	0 to the message ||| bool $serialize	count=1
return	by the given ||| string	count=1
function_name	returns a list ||| enchant broker list	count=1
function_name	rate ||| rate	count=2
arg_pair	like mssql_connect() with ||| bool $new_link	count=1
function_name	computes the difference ||| udiff	count=1
function_name	register a ||| register	count=1
function_name	started by mysqlnd_ms_xa_begin() ||| mysqlnd ms xa	count=1
function_name	the background returning a ||| background	count=2
arg_pair	text for later ||| resource $pdfdoc string $text	count=1
function_name	low priority task ||| low	count=1
namespace	error reasons ||| hw_api_error	count=1
function	the name [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	pair to ||| int $pair int $fg	count=1
arg_pair	the [arg_pair] replaces ||| [arg_pair]	count=1
function_name	copies data ||| pgsql copy	count=3
function_name	mime kopfzeile in ||| mime	count=1
function_name	[function_name_1] the query ||| [function_name_2] [function_name_1]	count=2
function_name	fields [function_name_2] ||| [function_name_2] error [function_name_1]	count=2
function	blob/clob by [arg_pair_2] ||| [function_name_1] get [arg_pair_2]	count=1
function_name	error message to ||| error	count=1
function_name	ldap search ||| ldap	count=1
namespace	function e ||| function	count=1
arg_pair	specific revision ||| int $revision_no	count=1
function_name	is only used ||| set state	count=1
arg_pair	text on the ||| resource $pdfdoc string $text	count=1
function_name	false ||| cubrid	count=1
arg_pair	compares the left_operand to ||| string $left_operand	count=1
arg_pair	the oid ||| string $oid	count=1
arg_pair	current request indicating ||| string $details	count=1
namespace	equal to true and ||| function	count=1
function_name	ssl api ||| ssl get	count=1
function_name	specific row in a ||| fetch row	count=1
namespace	the connection ||| eventhttpconnection	count=1
function	[function_name_1] an external ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	all files within ||| string|array $files	count=1
function_name	the cascade ||| cascade	count=4
function	[function_name_1] object ||| [function_name_1] [arg_pair_2]	count=2
function_name	input ||| set input	count=1
function_name	inner iterators children ||| get children	count=1
function_name	point is ||| isbase	count=1
function_name	returns ||| mysqli stmt error	count=1
arg_pair	given user ||| resource $link_identifier string $user	count=1
function_name	to mssql_fetch_array() with one ||| mssql fetch	count=1
function_name	[function_name_1] decrypts ||| [function_name_2] [function_name_1]	count=2
namespace	if the [namespace] ||| [namespace]	count=1
function_name	network which is not ||| fann	count=2
function	flags [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	to ||| bool $with_comments	count=2
arg_pair	with priv_key_id ||| mixed $priv_key_id	count=1
function_name	be represented ||| metadata	count=1
function_name	[function_name_1] attributes of ||| [function_name_1] [function_name_2] index int $index int	count=3
function_name	given property exists ||| property exists	count=2
namespace	bitfield ||| reflectionmethod	count=1
arg_pair	shell wildcard pattern ||| string $pattern	count=1
return	before entering ||| void	count=1
namespace	node ||| splheap	count=1
function_name	uri ||| uri	count=4
function_name	deactivate [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] alpha ||| [function_name_1] [function_name_2]	count=2
arg_pair	one iteration with a ||| resource $ann array $input	count=1
function_name	the default timezone used ||| default timezone	count=1
function_name	behaves exactly as fsockopen() ||| pfsockopen	count=1
function_name	selects the default database ||| select db	count=1
function_name	status information on ||| status	count=1
namespace	function converts a ||| function	count=1
function_name	to reduce ||| array reduce	count=1
arg_pair	remote address ||| string $address	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $path [arg_pair_2]	count=2
namespace	this job ||| gearmanjob	count=2
function_name	a given tag ||| get tag	count=1
function_name	tells whether the opened ||| mcrypt enc	count=1
function_name	exception when ||| exception	count=2
function_name	default external entity loader ||| libxml set external entity loader	count=1
arg_pair	lists tables ||| string $name	count=1
namespace	reflection method object ||| reflectionmethod	count=1
function_name	content [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	returns headers ||| imap headers	count=1
arg_pair	the portion of ||| bool $before_needle	count=1
namespace	sets the thread ||| function	count=1
function_name	affine ||| affine	count=1
function_name	virtual server ||| server	count=1
namespace	of the function without ||| reflectionfunctionabstract	count=1
namespace	should only be ||| pharfileinfo	count=1
function_name	host checks this ||| disable	count=1
function_name	copies ||| copy to	count=2
return	pointed to ||| bool	count=1
function_name	[function_name_1] entity ||| [function_name_1] [function_name_2]	count=4
function_name	it converts all html ||| html	count=1
function_name	[function_name_1] token secret ||| [function_name_2] [function_name_1]	count=6
function_name	msql_fetch_array() with [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	associated with ||| resource $connection_id	count=1
function_name	minimum message [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ssl api function see ||| ssl	count=1
arg_pair	with the key with ||| string $key	count=1
arg_pair	flag to ||| int $options	count=1
function_name	sets the activation ||| fann set activation	count=6
function_name	id3v2 object for the ||| id3v2	count=1
function_name	closes ||| mssql close	count=2
function_name	border dash style ||| border dash	count=2
function_name	mime kopfzeile in the ||| iconv mime encode	count=1
arg_pair	object is of ||| object $object	count=1
function_name	shared memory segment ||| shm has	count=1
function_name	memory allocated ||| free	count=1
namespace	mpeg file ||| ktaglib_mpeg_audioproperties	count=4
function_name	end of current eventbuffer ||| add	count=1
function_name	ingres server ||| ingres unbuffered	count=1
function_name	[function_name_1] xml string ||| [function_name_2] [function_name_1]	count=10
function_name	query cache ||| query trace log	count=1
function_name	data ||| buffer	count=1
function_name	a new content object ||| content new	count=1
function_name	the class method exists ||| method exists	count=1
function_name	[function_name_1] name ||| ziparchive string [function_name_1] [function_name_2] index int $index int	count=1
function_name	used by php ||| set state	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] num [function_name_2]	count=4
function_name	either a [function_name] into ||| [function_name] export	count=1
function_name	from a frontbase ||| fbsql	count=1
arg_pair	mssql_connect() with two ||| bool $new_link	count=1
function_name	this is ||| disable	count=1
function_name	lower ||| lower	count=2
function_name	this function removes ||| remove	count=1
function_name	training not to ||| fann	count=1
function_name	activation steepnesses in the ||| cascade activation steepnesses count	count=1
namespace	objects ||| threaded	count=1
arg_pair	in the named domain ||| string $domain	count=1
return	with ||| mixed	count=2
function_name	been closed ||| ibase	count=1
function_name	image to ||| image	count=2
arg_pair	connection to an ibm ||| array $options	count=1
arg_pair	specified dn ||| string $dn	count=3
function_name	with block [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	get or ||| fbsql	count=1
namespace	the class the part ||| reflectionclass	count=1
arg_pair	gmp number from an ||| mixed $number int $base	count=1
function_name	single column ||| array column	count=1
function_name	trace ||| maxdb	count=1
function_name	kadm5 library using the ||| kadm5 init with	count=1
function_name	facet ||| add facet date	count=1
function_name	returns the name ||| name	count=4
arg_pair	class ||| string $property	count=1
namespace	of the whole screen ||| function	count=1
function_name	stroke ||| stroke	count=1
function_name	from a ||| ibase fetch object	count=1
arg_pair	subject for ||| int $limit	count=1
function_name	fdf [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	value ||| mixed $bordercolor int $x	count=3
function_name	mongos to send partial ||| partial	count=1
return	connection between the ||| void	count=1
function_name	returns the image border ||| get image border	count=1
function_name	information about the client ||| client info	count=1
function	an [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	[function_name_1] parameter ||| [function_name_1] bind [function_name_2]	count=1
function_name	[function_name_1] socket is ||| [function_name_2] [function_name_1]	count=4
function_name	returns the path of ||| get	count=1
function_name	of characters ||| alternate	count=1
function_name	messages or information ||| info	count=1
arg_pair	direction of the ||| int $direction	count=1
function_name	cubrid gets blob/clob ||| lob get	count=2
namespace	function converts unicode ||| function	count=1
function_name	stripped ||| rtrim	count=1
namespace	large object ||| oci-lob	count=2
namespace	supported by ||| function	count=1
arg_pair	the size of an ||| int $width int $height	count=1
function_name	[function_name_1] stagnation epochs ||| [function_name_1] [function_name_2]	count=2
arg_pair	file specified by fd ||| int $mode	count=1
function_name	client ||| sqlsrv client	count=1
namespace	specified field s ||| mongocollection	count=1
function_name	registers a completion ||| readline completion	count=1
function	size and [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	parent classes [arg_pair_2] ||| [function_name_1] mixed $class [arg_pair_2]	count=1
function_name	new form ||| newt form	count=1
arg_pair	by alpha and ||| resource $p float $alpha	count=1
function_name	look for suitable snippets ||| highlight max analyzed chars	count=1
arg_pair	the ||| int $error_type	count=1
function_name	current regular ||| regular	count=1
function_name	quickprop decay factor ||| quickprop decay	count=1
function_name	[function_name_1] list ||| [function_name_1] server [function_name_2]	count=1
arg_pair	supplied by pkcs12 ||| string $pkcs12	count=1
function_name	only ||| metadata	count=1
return	added with ||| bool	count=1
function_name	places a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	the table [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	total width of ||| width	count=1
arg_pair	like mssql_connect() with ||| string $password bool $new_link	count=1
arg_pair	temporarily ||| resource $fam_monitor	count=1
return	connect to a ||| string	count=1
arg_pair	from the service provider ||| string $verifier_token	count=1
function_name	[function_name_1] readable ||| [function_name_1] [function_name_2]	count=1
return	domprocessinginstruction ||| domprocessinginstruction	count=1
function	creates [function_name_1] [arg_pair_2] subject to various options ||| [function_name_1] [arg_pair_2]	count=1
function	query on [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	the end of haystack ||| string $haystack	count=1
function_name	text interword spacing ||| text interline spacing	count=1
function_name	runs a high priority ||| do high	count=1
function_name	effective in ||| get	count=1
function_name	field index ||| mysql field	count=1
arg_pair	be messages from domain ||| string $domain string $codeset	count=1
function_name	[function_name_1] bound in ||| [function_name_1] [function_name_2]	count=4
function_name	sets ||| set color	count=1
namespace	this function performs ||| function	count=1
function_name	merges the elements ||| array merge recursive	count=1
function_name	[function_name_1] algorithm or ||| [function_name_1] [function_name_2]	count=4
function_name	resource ||| maxdb	count=1
function_name	end recursing one level ||| end children	count=2
function_name	[function_name_1] xml ||| [function_name_2] [function_name_1]	count=23
function_name	activation function for ||| activation function	count=9
function_name	attribute specified ||| attribute ns	count=2
function_name	block algorithm or ||| block algorithm	count=2
return	internet host ||| string	count=1
function_name	information from the stream ||| stream	count=1
function	[function_name_1] the ||| [arg_pair_2] [function_name_1]	count=18
arg_pair	a change notification for ||| string $value	count=1
arg_pair	the specified directory on ||| string $directory	count=1
namespace	end of file ||| splfileobject	count=1
namespace	this function is very ||| function	count=1
function_name	this method any file ||| add file	count=1
namespace	the file ||| splfileinfo	count=1
function_name	the query syntax ||| escape query	count=1
namespace	send to the ||| mongocursorinterface	count=1
function_name	be ||| loop	count=1
function	[function_name_1] object is ||| [function_name_1] [arg_pair_2]	count=2
function_name	an obscure check with ||| crack check	count=1
function_name	yaz_scan() ||| yaz	count=1
function_name	policy used or ||| policy	count=1
arg_pair	by assoc_array which ||| array $assoc_array	count=1
arg_pair	a string containing ||| string $number	count=1
namespace	text of the ||| function	count=1
namespace	or ||| evloop	count=1
arg_pair	character code to html ||| string $encoding	count=1
function_name	[function_name_1] stores ||| [function_name_2] [function_name_1]	count=4
namespace	database [namespace] can ||| [namespace]	count=1
function_name	to split ||| split	count=1
function_name	sybase_fetch_assoc() with one ||| sybase fetch	count=2
return	specified ||| resource	count=2
function_name	next lowest integer ||| floor	count=1
function_name	one epoch with ||| epoch	count=1
arg_pair	to a country and ||| string $country_code	count=1
return	in an associative ||| array	count=2
function_name	the text interword spacing ||| get text interline spacing	count=1
function_name	[function_name_1] font size ||| [function_name_2] [function_name_1]	count=3
function_name	route process ||| current route	count=1
arg_pair	adds new integer values ||| array $values	count=1
function_name	quoted printable string created ||| quoted printable	count=1
return	effective ||| string	count=1
function_name	that had errors ||| errors	count=1
arg_pair	given command ||| string $command array $output	count=1
function_name	file_get_contents() except that ||| contents	count=1
function_name	for use [function_name] other ||| [function_name] pkey get public	count=1
function_name	a glyph definition ||| glyph	count=2
function	starting [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	from a specific revision ||| string $repos_url	count=1
function_name	frontbase warnings ||| fbsql warnings	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get current line [function_name_1]	count=4
function_name	activates a previously created ||| pdf activate	count=1
return	iterator entry ||| bool	count=1
namespace	from a given ||| function	count=1
function_name	the script is suspended ||| pcntl sigtimedwait	count=1
namespace	manifest for this file ||| pharfileinfo	count=1
namespace	modulus of the ||| function	count=1
function_name	the ||| database	count=2
function_name	character ||| mb	count=1
function_name	deletes a named ||| pdf delete	count=1
arg_pair	database name used ||| resource $link_identifier string $database	count=1
arg_pair	by alpha and ||| float $alpha	count=1
arg_pair	array containing a reconstructed ||| int $metric	count=1
function_name	word length below which ||| word length	count=1
function_name	one line below ||| ps continue	count=1
arg_pair	handle ||| resource $filehandle	count=1
function_name	[function_name] from ||| [function_name] train data	count=1
namespace	data to [namespace] specified ||| [namespace]	count=1
function_name	backpropagation neural network ||| fann create from	count=1
arg_pair	the associative ||| string $arg_separator	count=1
arg_pair	in a ||| gmp $a	count=1
function_name	for a set of ||| run	count=1
function_name	valid to the service ||| gupnp service proxy get	count=1
arg_pair	array1 ||| array $array1	count=5
arg_pair	the ||| int $cascade_max_out_epochs	count=1
function_name	a textflow ||| pdf fit textflow	count=1
function_name	cancels ||| cancel	count=1
arg_pair	the given entry ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	the intersection ||| uintersect assoc	count=1
return	with gearmanclient::addtask() ||| bool	count=1
function_name	resolve the ||| dbplus resolve	count=1
function_name	[function_name_1] the minimum ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] block algorithm [arg_pair_2]	count=8
namespace	a ||| sqlite3stmt	count=2
arg_pair	the number of ||| resource $ann int $cascade_output_stagnation_epochs	count=1
function_name	a png image from ||| imagepng	count=1
namespace	on the ||| mongocursor	count=1
function_name	the active event ||| event	count=1
namespace	of ||| splfileobject	count=1
function_name	new control point ||| gupnp control point new	count=1
arg_pair	the associative or ||| string $arg_separator	count=1
arg_pair	queries the resulting metrics ||| string $keyword string $optlist	count=1
arg_pair	contexts ||| bool $auto_enable	count=1
function_name	[function_name_1] by ||| [function_name_2] [function_name_1]	count=1
function_name	starts [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	default background [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	on training ||| fann	count=1
function_name	returns the host name ||| host	count=1
function_name	parameter setting ||| pg parameter	count=1
arg_pair	sets the gray ||| float $gray	count=1
arg_pair	entry in ||| resource $result_entry_identifier	count=2
function_name	the [function_name] ||| [function_name] put string	count=2
arg_pair	option from ||| resource $ftp_stream int $option	count=1
return	returned by ||| string	count=1
function_name	as to reduce ||| array reduce	count=1
arg_pair	mssql_connect() with two major ||| bool $new_link	count=1
arg_pair	real0 and returns ||| array $real0	count=1
arg_pair	a list ||| string $fk_table	count=1
return	block on disk ||| resource	count=1
function_name	opened [function_name_2] ||| [function_name_1] block [function_name_2]	count=1
function_name	version number [function_name_1] [function_name_2] php is linked with ||| [function_name_1] [function_name_2]	count=1
arg_pair	sets the gray ||| resource $psdoc float $gray	count=1
function_name	minimum number ||| min	count=1
function_name	a priority ||| event buffer priority	count=1
namespace	the remaining contents in ||| function	count=1
arg_pair	a named virtual file ||| string $filename	count=1
function_name	thumbnail by first ||| thumbnail	count=1
function_name	query [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	database name ||| mysql db name	count=2
namespace	fields of ||| function	count=1
function_name	with the kadm5 ||| kadm5 init	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] country and region [arg_pair_2]	count=10
arg_pair	username ||| string $username	count=1
function_name	blocking or non-blocking ||| blocking	count=1
function_name	the miter [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	to ||| string	count=18
function_name	the product ||| array product	count=1
arg_pair	at the position indicated ||| int $left int $top	count=1
function_name	that matches ||| opaque paint image	count=1
arg_pair	maxlength bytes ||| resource $handle int $maxlength	count=1
function_name	[function_name_1] proxy callback ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] fraction ||| [function_name_2] [function_name_1]	count=10
arg_pair	line width ||| float $width	count=1
function_name	modified utf-7 text ||| imap utf7 encode	count=1
arg_pair	a new mailbox ||| resource $imap_stream	count=1
return	if it does not ||| bool	count=1
function_name	width for ||| width	count=1
function_name	template ||| template	count=1
return	the periodic watcher ||| void	count=1
namespace	were passed in ||| function	count=1
function_name	module name ||| get module name	count=2
arg_pair	such that an exact ||| array $offset	count=1
function_name	[function_name_1] informix server ||| [function_name_2] [function_name_1]	count=2
function_name	delivered whose ||| pcntl	count=1
function_name	template and display ||| display	count=1
arg_pair	sets a ||| resource $psdoc	count=1
arg_pair	the specified object_id ||| string $object_id	count=1
arg_pair	file and ||| string $filename	count=1
function_name	has shortcut connections ||| shortcut	count=2
function_name	fetches multiple rows from ||| oci fetch	count=1
function_name	train one ||| fann train	count=1
function_name	to file_get_contents() except that ||| contents	count=1
function_name	magnifying [function_name] ||| [function_name] bh	count=3
arg_pair	to html numeric character ||| bool $is_hex	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $filename [arg_pair_2]	count=19
namespace	new instance of class ||| domdocument	count=3
namespace	the link ||| function	count=1
function_name	gets several parameters which ||| ps get parameter	count=1
function_name	activation steepnesses ||| activation steepnesses count	count=1
return	the internet host ||| string	count=1
function_name	[function_name_1] alternate q ||| [function_name_2] [function_name_1]	count=2
arg_pair	or save a ||| resource $image	count=1
namespace	instance of [namespace] an integer ||| [namespace]	count=1
function_name	attaches an integer ||| put int	count=2
namespace	remaining ||| mongocursor	count=1
namespace	evio watcher object and ||| evio	count=1
arg_pair	to memcached::add() ||| int $expiration	count=1
function_name	previous ||| yp	count=1
namespace	from the provided ||| arrayiterator	count=1
function_name	[function_name_1] column ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] an uri ||| int transform [function_name_1] [function_name_2]	count=1
arg_pair	first occurrence ||| string $needle	count=1
namespace	function and having ||| function	count=1
function_name	for all matches ||| match all	count=1
function	[function_name_1] a string ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	a socket stream or ||| eventbase $base mixed $socket	count=1
return	monitored ||| bool	count=1
function_name	arc tangent ||| atan	count=1
function_name	functions described in ||| functions	count=1
function_name	php stores temporary files ||| temp	count=1
function	[function_name_1] the coordinate ||| [function_name_1] [arg_pair_2]	count=1
function	stops a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	statement resource returned by ||| resource $stmt int $parameter-number	count=1
function_name	adaptive [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] field pf2 ||| [function_name_2] [function_name_1]	count=2
arg_pair	equivalent to memcached::replace() ||| int $expiration	count=1
function_name	network ||| fann create from file	count=2
namespace	the array ||| splfixedarray	count=1
namespace	defined ||| yaf_application	count=1
function_name	descriptor ||| dio	count=1
namespace	pool ||| pool	count=1
function_name	compare value ||| compare	count=1
function_name	in the id3 tag ||| id3 get tag	count=1
return	to the browser ||| int	count=1
function_name	set with mysqli_set_local_infile_handler() ||| mysqli set	count=1
function_name	[function_name_1] methods ||| [function_name_2] [function_name_1]	count=2
function_name	the given ||| bzerrstr	count=1
function	starting [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	amount ||| immortal	count=1
function_name	blob for filling with ||| ibase blob	count=1
return	or continuing the ||| void	count=1
function_name	with type number ||| get number	count=1
function_name	the power ||| pow	count=2
function_name	a shared memory segment ||| shm	count=1
function_name	default external entity ||| set external entity	count=1
function_name	color [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	particular image ||| get image	count=1
arg_pair	the ||| int $chunk_size	count=1
arg_pair	real1 from real0 and ||| array $real1	count=1
arg_pair	of ||| float $whitepoint	count=2
namespace	+ number computed in ||| function	count=1
function_name	attempt ||| db2 conn	count=1
arg_pair	target color ||| mixed $target	count=1
function_name	sets the decrease ||| set rprop decrease	count=2
namespace	function can ||| function	count=2
arg_pair	the principal and the ||| string $password	count=1
namespace	for ||| function	count=1
function_name	[function_name_1] action ||| submit [function_name_1] [function_name_2]	count=1
function_name	a color image ||| image	count=2
function_name	attempt ||| conn	count=1
arg_pair	server yet ||| int $expire	count=1
function_name	existing information stored ||| set metadata	count=1
function_name	argument from a user-defined ||| get arg	count=1
function_name	a random number ||| random	count=1
function_name	given record in the ||| record	count=1
function_name	audio properties ||| audio properties	count=2
function_name	the opened ||| mcrypt enc	count=1
function_name	sets the global ||| set	count=1
arg_pair	location ||| string $location	count=1
function	namespace support [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	sets the candidate ||| fann set cascade candidate	count=1
function_name	sets [function_name_2] ||| [function_name_2] timezone [function_name_1]	count=1
function_name	with spelling alternatives ||| enchant dict quick	count=1
return	a table with a ||| mixed	count=1
namespace	remaining idle on ||| mongocursor	count=1
function_name	with block ||| block	count=1
function_name	variables previously set ||| vars	count=1
function_name	minimum ||| enum cache min	count=1
function_name	wait for notification ||| wait	count=1
function_name	each [function_name] ||| compare [function_name] layers	count=3
namespace	the outline is ||| haruoutline	count=1
arg_pair	value ||| string $name mixed $value	count=1
function_name	type number or ||| get number	count=1
arg_pair	from object_id ||| string $object_id	count=2
function_name	garbage ||| garbage	count=1
function_name	[function_name_1] into a ||| [function_name_2] [function_name_1]	count=2
function_name	further call ||| call	count=1
namespace	number ||| harufont	count=1
function_name	of next query ||| cubrid next	count=1
function_name	postgresql frontend/backend communication to ||| pg trace	count=1
function_name	the target [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	radius request ||| radius send request	count=1
function_name	sets the timeout ||| set timeout	count=3
function_name	ends when recursiveiteratoriterator::valid() first ||| end	count=1
function_name	given dimensions ||| scaleimage	count=1
arg_pair	in the ||| bool $gray int $channel	count=1
function_name	raw response ||| response	count=1
function_name	places an image or ||| fit image	count=1
function_name	open stream [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	device ||| device	count=1
function_name	scales the outputs in ||| fann scale	count=1
arg_pair	an option ||| resource $sh int $option	count=1
function_name	query and ||| query	count=1
function_name	index absent that is ||| empty	count=1
arg_pair	statements ||| int $argument_count	count=1
function_name	retrive environ which was ||| environ	count=1
function_name	current fill color ||| fill	count=1
arg_pair	from a given str ||| string $str string $allowable_tags	count=1
function_name	selects a ||| select server	count=1
arg_pair	[arg_pair_1] sequence and ||| [arg_pair_2] [arg_pair_1]	count=5
return	called by the user ||| mongoid	count=1
return	the connection ||| string	count=1
function_name	fields that solr ||| fields	count=1
function_name	register your ||| register	count=1
namespace	the buffer provided ||| eventbuffer	count=1
return	called ||| mongoid	count=1
function_name	[function_name_1] border color ||| [function_name_2] [function_name_1]	count=3
arg_pair	of the ||| resource $ann	count=1
namespace	row as ||| function	count=1
function_name	gives ||| imagepsbbox	count=1
function_name	fc_nfkc_closure property string ||| fc nfkc closure	count=1
function_name	sets ||| imap set	count=1
function_name	points [function_name] qualifiers and ||| [function_name] conf	count=1
arg_pair	number of snmp ||| string $community	count=2
function_name	contrast of ||| contrast	count=2
function_name	[function_name_1] cached in ||| [function_name_1] [function_name_2]	count=1
arg_pair	file ||| string $filename	count=3
arg_pair	a ||| string $dest	count=1
function_name	sets per-index weights ||| set	count=1
function_name	[function_name_1] in the ||| [function_name_2] [function_name_1]	count=1
arg_pair	message ||| integer $mode	count=1
namespace	gearmanclient::addtasklowbackground() this call ||| gearmanclient	count=1
function_name	on/off exception ||| exception	count=1
namespace	new reflectionmethod ||| reflectionmethod	count=1
arg_pair	a pseudo-object ||| resource $result_id int $fetch_flag	count=1
namespace	a new mutex ||| mutex	count=1
function_name	must be demangled before ||| radius demangle	count=1
arg_pair	the ||| int $arg3	count=1
function_name	table that ||| table	count=4
namespace	the current node ||| spldoublylinkedlist	count=1
arg_pair	a messaging server ||| string $protocol	count=1
function_name	destructor ||| destructor	count=1
arg_pair	of the ||| bool $silent	count=1
function_name	no dns error detected ||| dns error	count=1
arg_pair	part of a ||| int $ndocs array $callbacks	count=2
arg_pair	subject ||| mixed $subject int $limit	count=1
function_name	php ||| php	count=2
function_name	deactivate image alpha ||| set image alpha	count=3
function_name	the object to bson ||| bson	count=1
function_name	a blob that ||| ibase blob	count=2
arg_pair	used with ||| resource $link_identifier	count=1
namespace	error occurred ||| error	count=2
function_name	shouldnt need ||| state	count=1
function_name	[function_name_1] trace ||| [function_name_2] [function_name_1]	count=2
function_name	the decrease ||| decrease	count=1
function_name	fbsql [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	include the upper ||| terms include upper	count=1
arg_pair	number of snmp objects ||| string $host string $community	count=2
arg_pair	the remote address and ||| string $address	count=1
namespace	that ||| pharfileinfo	count=1
arg_pair	the image ||| int $arg3 int $arg4	count=1
arg_pair	a ||| resource $fam string $filename	count=1
function_name	determines the minimum number ||| get cascade min	count=1
arg_pair	the key ||| string $key	count=1
function_name	for ||| handle	count=1
namespace	gearmanclient::addtasklowbackground() this call starts ||| gearmanclient	count=1
function_name	by php ||| set state	count=1
function_name	[function_name_1] callback timeout ||| [function_name_2] [function_name_1]	count=3
arg_pair	a single ||| string $field_override	count=1
function_name	should only ||| metadata	count=1
function_name	fills ||| pdf closepath fill	count=1
arg_pair	by assoc_array ||| array $assoc_array int $options	count=1
function_name	registers a ||| register callback	count=1
return	returns an associative array ||| array	count=1
function_name	network from a ||| fann	count=1
namespace	php internally it ||| mongoid	count=1
return	on disk ||| resource	count=1
function_name	an access token ||| get access token	count=2
function_name	final ||| final	count=1
function_name	maximum word length ||| max word length	count=1
function_name	network from a configuration ||| fann create from	count=1
arg_pair	a two-dimensional ||| int $skip int $maxrows	count=1
function_name	current controller object ||| controller	count=1
function_name	the levels ||| auto level	count=1
namespace	used in event_add() ||| function	count=1
return	connect to a database ||| string	count=1
arg_pair	a**r)/gamma r * ||| float $r	count=1
arg_pair	such that an ||| imagick $imagick	count=1
function_name	an odbc ||| odbc fetch	count=1
function_name	row and then moves ||| fetch	count=1
arg_pair	an initialization ||| int $size	count=1
arg_pair	using connection ||| resource $connection	count=1
return	the ||| boolean	count=5
function_name	a mime charset string ||| preferred mime name	count=1
function_name	column names that comprise ||| odbc primarykeys	count=1
function	false when [arg_pair_2] ||| [function_name_1] fetch assoc [arg_pair_2]	count=4
arg_pair	memcached::add() except ||| mixed $value int $expiration	count=1
function_name	existing information ||| set metadata	count=1
function_name	given password ||| password	count=1
function_name	[function_name_1] the activation ||| [function_name_1] [function_name_2]	count=6
function_name	simulates motion ||| motion	count=1
function_name	[function_name_1] event ||| [function_name_1] [function_name_2]	count=2
arg_pair	memcached::getmulti() ||| string $cas_tokens	count=1
namespace	is available and ||| function	count=1
function_name	uploads the data from ||| fput	count=1
function_name	from a glo ||| load from glo	count=2
function_name	relation ||| dbplus	count=1
arg_pair	that correspond to ||| array $ctorparams	count=1
function_name	line number for the ||| line number	count=1
function_name	adds several components to ||| add components	count=1
return	[return] user ||| [return]	count=3
function_name	default timezone used ||| default timezone	count=1
function_name	returns the ||| fann get	count=1
function_name	field to return ||| alternate field length	count=1
namespace	gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() this ||| gearmanclient	count=1
function_name	custom encoding ||| pdf encoding	count=1
function_name	the complete result set ||| start	count=1
arg_pair	from the given set ||| resource $conn_identifier string $oid	count=1
arg_pair	replaced ||| mixed $search	count=1
return	current iterator ||| bool	count=1
function_name	descale input and ||| fann descale train	count=1
function_name	first attribute in ||| ldap first attribute	count=2
function_name	the socket resource socket ||| socket	count=1
namespace	timestamp ||| mongotimestamp	count=1
function_name	inspected by [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	hexadecimal [return] of the ||| [return]	count=1
arg_pair	caches a variable ||| string $key mixed $var	count=1
arg_pair	or unnamed event ||| bool $manual	count=1
arg_pair	of the result ||| resource $result	count=1
arg_pair	width for ||| resource $psdoc float $width	count=1
function	[function_name_1] files within ||| [arg_pair_2] [function_name_1]	count=1
function_name	a json [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	the ||| recursivetreeiterator	count=2
namespace	specified by ||| function	count=5
function_name	[function_name_1] child ||| [function_name_1] [function_name_2]	count=3
function_name	character encoding of variables ||| variables	count=1
function_name	several parameters which ||| ps	count=1
function_name	maxdb ||| maxdb	count=1
function_name	representing a row ||| fetch	count=3
arg_pair	parameter pos ||| resource $id int $pos	count=1
arg_pair	remote address and port ||| int $port	count=1
function_name	selects the ||| maxdb select db	count=1
arg_pair	the target color ||| mixed $target float $alpha	count=1
namespace	the name of the ||| yaf_router	count=1
arg_pair	mail headers [arg_pair_1] [arg_pair_2] overview ||| overview [arg_pair_1] [arg_pair_2]	count=1
function	[function_name_1] [arg_pair_2] expression ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	a target url ||| float $upperrighty string $url	count=1
namespace	a new ||| reflectionclass	count=1
namespace	parameter for a ||| reflectionparameter	count=1
function_name	[function_name_1] device ||| [function_name_2] [function_name_1]	count=1
function_name	a mime charset ||| preferred mime name	count=1
return	for the ||| bool	count=6
arg_pair	for a ||| string $pattern string $option	count=1
function_name	[function_name_1] nonce ||| [function_name_2] [function_name_1]	count=1
arg_pair	[arg_pair_1] given parameters ||| [arg_pair_2] [arg_pair_1]	count=5
return	redirect [return] by ||| [return]	count=1
function_name	stretch to ||| stretch	count=1
function_name	socket is ||| socket	count=3
function_name	or gearmanclient::addtasklowbackground() this ||| run	count=1
function_name	link on [function_name] filesystem ||| [function_name] sftp lstat	count=1
namespace	user-defined function ||| reflectionfunctionabstract	count=1
return	the set ||| bool	count=1
return	straight through to the ||| int	count=1
return	will sort [return] keys ||| [return]	count=1
function	matches color [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	returns underlying output ||| get output	count=2
arg_pair	get it from ann ||| resource $ann	count=1
namespace	evidle watcher ||| evidle	count=1
function_name	country and region ||| region	count=1
arg_pair	memcached::getmulti() ||| string $cas_tokens int $flags	count=1
namespace	function is ||| reflectionfunctionabstract	count=1
arg_pair	for the specified purpose ||| mixed $x509cert int $purpose	count=1
function_name	sunrise time ||| sunrise	count=1
function_name	background returning a job ||| background	count=2
function_name	connection [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	csr ||| openssl csr sign	count=2
function_name	returns data being returned ||| data	count=1
arg_pair	callback ||| callable $callback mixed $parameter	count=1
arg_pair	memcached::replace() except that the ||| int $expiration	count=1
function_name	matches the currently stored ||| apc	count=1
arg_pair	on [arg_pair] ||| [arg_pair]	count=2
namespace	of the hash ||| quickhashinthash	count=1
function_name	a mysqlnd connection ||| uh convert to mysqlnd	count=1
function_name	dom class to ||| class	count=1
function_name	position ||| ps show	count=2
function_name	xhprof data [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	an array containing ||| array	count=1
function_name	a binary ||| binary	count=2
function_name	end [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	time [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	php array var_array to ||| int $max_table_length	count=1
function	as layer [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	response ||| yaf_response_abstract	count=1
function_name	the soap ||| set soap	count=1
arg_pair	it from ann ||| resource $ann	count=1
function_name	gearmanclient::addtaskhigh() ||| run	count=1
function_name	a mysqlnd ||| uh convert to mysqlnd	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=355
function_name	current object ||| get	count=1
function_name	removes an extended attribute ||| xattr remove	count=1
function_name	elements with a ||| elements	count=1
function_name	sets ||| fbsql set	count=2
function_name	simulates motion [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] a block ||| [function_name_1] enc [function_name_2]	count=1
return	to sqlsrv_rollback() ||| bool	count=1
function_name	[function_name_1] with namespace ||| [function_name_2] [function_name_1]	count=1
function_name	sets the value for ||| fdf set value	count=1
function_name	[function_name_1] interword spacing ||| [function_name_2] [function_name_1]	count=6
function_name	javascript [function_name] ||| fdf set javascript [function_name]	count=1
function	extract all [arg_pair_2] ||| bool [function_name_1] string $pathto [arg_pair_2] bool $overwrite	count=1
function_name	after preparing ||| ifx	count=1
function_name	forward ||| forward	count=1
return	get exception ||| string	count=1
function_name	overrides main filter query ||| expand filter query	count=1
function_name	[function_name_1] write operations ||| [function_name_2] [function_name_1]	count=1
arg_pair	directory ||| resource $ftp_stream string $directory	count=2
function_name	[function_name_1] fault ||| [function_name_1] [function_name_2] string $faultcode string $faultstring	count=4
function_name	current table in the ||| fbsql table	count=1
function_name	iterator ||| build from iterator	count=1
arg_pair	a result pdf ||| resource $fdf_document	count=1
function_name	name of the route ||| current	count=1
function_name	[function_name_1] current mysql ||| [function_name_2] [function_name_1]	count=1
namespace	the evidle ||| evidle	count=1
function_name	lists the tables ||| list tables	count=1
function_name	an attribute ||| attribute	count=3
function_name	extended json string ||| db\bson\from json	count=1
return	gets the string ||| void	count=1
function_name	custom encoding ||| pdf encoding set char	count=1
arg_pair	to length ||| int $length	count=1
function_name	class to be used ||| class	count=1
namespace	interior of ||| function	count=1
function_name	determines the maximum number ||| max	count=1
function	file selection [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	the information ||| void	count=1
function_name	your own filter ||| filter	count=1
arg_pair	an array of ||| array $args	count=1
function	repository with [arg_pair_2] ||| [function_name_1] commit [arg_pair_2]	count=1
return	session mechanism if session ||| bool	count=1
function_name	function creates ||| create processing instruction	count=2
return	construct a new ||| int	count=1
function_name	from a glo instance ||| load from glo	count=1
function_name	the blocksize ||| module get algo block size	count=1
function_name	[function_name_1] output change ||| [function_name_1] [function_name_2]	count=3
function_name	to stop ||| upper	count=1
arg_pair	the key to ||| mixed $value	count=1
function_name	the route process ||| get current route	count=1
namespace	prepared ||| sqlite3stmt	count=1
function_name	returns the ||| mysqli get	count=1
function_name	3 parts: the stub ||| footer	count=1
function_name	method stores ||| file	count=3
arg_pair	the given string ||| int $flags	count=1
function_name	returns string ||| get	count=2
arg_pair	input ||| string $input int $pad_length	count=1
arg_pair	string str in ||| array $convmap	count=1
arg_pair	for the ||| int $mode int $key_len	count=1
function_name	[function_name_1] an uri ||| [function_name_2] [function_name_1]	count=1
function	scales [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	this field ||| add field	count=1
namespace	existing hash ||| quickhashinthash	count=1
function_name	[function_name_1] size of ||| [function_name_2] [function_name_1]	count=1
function_name	socket resource created with ||| socket	count=1
function_name	refer ||| odbc foreignkeys	count=2
function_name	with sqlsrv_prepare() ||| sqlsrv	count=1
function_name	color image by adjusting ||| image	count=2
function_name	parser [function_name] ||| xml parser create [function_name]	count=2
function_name	the php logo using ||| php logo guid	count=1
namespace	class is ||| reflectionclass	count=1
arg_pair	of ||| resource $filehandle int $startpos	count=1
function_name	statement parameter in ||| param	count=1
arg_pair	ann based on previously ||| resource $ann array $input_vector	count=1
function_name	sets the transparent ||| imagecolortransparent	count=1
function_name	real ||| real	count=1
function_name	string of any ||| bzerrstr	count=1
arg_pair	string input for ||| string $input	count=1
function_name	by csr and stores ||| openssl csr	count=1
function_name	indexes ||| uassoc	count=1
arg_pair	image specified by image ||| resource $image	count=1
function_name	fetches a batch ||| batch size	count=2
function_name	when the event specified ||| event add	count=1
function_name	and region ||| region by	count=1
arg_pair	named virtual file ||| string $filename	count=1
function_name	blob that has either ||| ibase blob	count=1
function_name	[function_name_1] memcached::res_* constants ||| [function_name_1] [function_name_2]	count=2
function_name	minimum document ||| min default	count=1
function_name	next result ||| next result	count=2
arg_pair	left to the ||| mixed $left	count=1
arg_pair	string from the associative ||| int $enc_type	count=1
function_name	a single column of ||| column	count=1
arg_pair	of the specified option ||| int $option	count=2
function	layer [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	row ||| fetch row	count=2
return	must be a valid ||| bool	count=1
function_name	get the total number ||| get total	count=2
function_name	the levels ||| level	count=2
function_name	new ssl buffer event ||| ssl filter	count=1
return	to ||| bool	count=146
function_name	[function_name] result ||| [function_name] result	count=3
function_name	[function_name] communication ||| [function_name] ctrl dispatcher	count=2
arg_pair	by oliver isbn 0-131-00413-1 ||| string $first	count=1
namespace	iterator ||| iterator	count=1
function	mode [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	point of the path ||| path	count=1
function_name	of the border ||| set border	count=1
function	sets [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
arg_pair	it into a ||| string $json	count=1
function_name	[function_name] in ||| get phar [function_name]	count=1
function_name	[function_name_1] minimum ||| [function_name_1] facet [function_name_2] count	count=1
function_name	for highlighted ||| set highlight	count=1
return	returns the ||| array	count=5
arg_pair	of the data ||| resource $result_id int $row_number	count=1
function_name	removes ||| shm remove	count=1
namespace	checks if the ||| iteratoriterator	count=1
function_name	maximum number ||| fann get cascade max	count=1
function_name	a directory ||| dir	count=1
namespace	on ||| mongocursor	count=1
function_name	record in the database ||| record	count=1
function_name	name ||| field	count=1
namespace	contents of ||| function	count=2
function_name	of required parameters that ||| of required parameters	count=1
function_name	by the user ||| set state	count=1
namespace	the child before entering ||| evloop	count=1
arg_pair	of the detailed ||| resource $result int $fieldcode	count=1
arg_pair	for later use ||| resource $pdfdoc string $fontname	count=1
function_name	printable string created ||| printable encode	count=1
return	of ||| string	count=3
namespace	readpreference ||| mongodb\driver\readpreference	count=1
arg_pair	contents of a variable ||| mixed $var bool $syntax_only	count=1
return	with the ||| string	count=1
function_name	a doc ||| get doc	count=1
function_name	based on training data ||| fann set	count=1
function_name	fgetcsv() parses the line ||| fgetcsv	count=1
arg_pair	requested a scrollable cursor ||| int $row_number	count=1
function	inserts string [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	associated with priv_key_id ||| mixed $signature_alg	count=1
arg_pair	signature1 and signature2 using ||| string $signature1 string $signature2	count=1
arg_pair	specified stream to a ||| resource $imap_stream	count=1
return	day count [return] containing ||| [return]	count=1
function_name	this [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	current path using ||| bool	count=1
function_name	of ||| buffer	count=1
function_name	options ||| options	count=1
function_name	absent index ||| empty	count=2
arg_pair	initiate a ||| int $code	count=1
function_name	training algorithmsfann_train_incremental fann_train_batch fann_train_quickprop ||| fann get	count=1
function_name	pixel that matches ||| paint opaque	count=1
function_name	file descriptor and another ||| sendfile	count=1
function_name	the minimum error ||| min error	count=1
function_name	the multi ||| multi	count=1
function_name	last attempt to ||| conn error	count=1
function_name	consider ||| highlight fragsize	count=2
function_name	similar documents to return ||| mlt	count=1
function_name	search query [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	snmp request ||| snmp	count=1
function_name	[function_name_1] from file ||| [function_name_1] copy [function_name_2]	count=1
function_name	returns the value ||| get option	count=1
function_name	server pool ||| server	count=1
function_name	terms ||| set terms	count=1
function_name	sub-elements ||| children	count=1
return	gets the [return] of the ||| [return]	count=1
function_name	represented with existing information ||| set metadata	count=1
arg_pair	the given ||| int $color	count=1
namespace	right_operand [namespace] ||| [namespace]	count=3
arg_pair	a page ||| int $page string $dest	count=1
function_name	elapsed time for the ||| get last elapsed time	count=1
function_name	[function_name_1] block ||| [function_name_1] enc [function_name_2]	count=1
function_name	[function_name_1] raw xml ||| [function_name_1] [function_name_2]	count=1
function_name	the linear least ||| least	count=2
arg_pair	the ||| mixed $class	count=1
arg_pair	object ||| string $filename int $mode	count=1
function_name	to fit ||| set fit	count=1
function_name	einer mime ||| iconv mime	count=1
return	in a designated file ||| int	count=1
function_name	all tables ||| tables	count=1
arg_pair	a rpc ||| string $uri string $method	count=1
function_name	the current cipher ||| cipher	count=1
function	specified status [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	in its server pool ||| server	count=1
function_name	uppercase ||| mb strtoupper	count=2
arg_pair	before it is ||| string $source_string	count=1
function_name	[function_name_1] last ||| [function_name_1] [function_name_2]	count=5
function_name	the style ||| style	count=1
function_name	sets where ||| set error log	count=1
function_name	runs the [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	a variant ||| variant	count=1
function_name	returns ||| mysqlnd qc get	count=1
arg_pair	if a ||| string $fieldname	count=1
arg_pair	number ||| resource $ann	count=2
function_name	color definitions ||| color	count=1
function_name	curl handle in ||| curl	count=1
function_name	computes a digest hash ||| digest	count=1
function_name	to ||| to	count=2
function_name	gives you the number ||| num	count=1
function_name	[function_name_1] activation ||| [function_name_2] [function_name_1]	count=7
function_name	collection ||| collection	count=1
function_name	is effective in the ||| get current	count=1
function_name	than the [function_name] write ||| [function_name] gtid	count=1
namespace	associated ||| imagick	count=1
function_name	sets ||| set error log	count=2
arg_pair	of the color which ||| int $blue	count=1
function_name	unserializes ||| db\bson\to php	count=1
arg_pair	haystack starting from and ||| string $haystack	count=1
function_name	new attribute ||| attribute	count=1
function_name	real path to ||| real path	count=2
return	indices ||| array	count=1
return	in ||| bool	count=2
function_name	interword [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	the specified purpose ||| int $purpose	count=1
function_name	of the miter ||| get miter	count=1
arg_pair	returns the [arg_pair_2] ||| [arg_pair_2] string $needle [arg_pair_1]	count=1
function_name	[function_name_1] minimum version ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] current status ||| [function_name_1] service [function_name_2] int $status int $checkpoint	count=1
function_name	an index on the ||| index	count=1
function_name	event handler for the ||| set event handler	count=1
function_name	version of ||| version	count=2
function_name	adds an update ||| update	count=1
function_name	last error ||| last error	count=4
function_name	config used to ||| config	count=1
return	by php ||| mongoid	count=1
function	is used [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	gets ||| udm	count=1
function_name	to strcasecmp() with ||| strncasecmp	count=1
function_name	mode outputs blocks ||| block mode	count=3
function_name	as sinh arg /cosh ||| tanh	count=1
function_name	scales the inputs ||| scale input	count=1
namespace	to the class constructor ||| reflectionclass	count=1
function_name	is a defined id ||| id	count=1
function_name	result grouping group parameter ||| group	count=1
namespace	this function returns the ||| function	count=6
function_name	the current transformation matrix ||| trans matrix	count=1
function_name	opens an sqlite ||| sqlite	count=1
function_name	id3v1 tag ||| id3v1 tag	count=2
namespace	directory this function will ||| function	count=1
arg_pair	to html numeric ||| bool $is_hex	count=1
arg_pair	assoc_array which ||| array $assoc_array	count=1
function_name	domain of ||| domain	count=1
function_name	or odbc_exec() ||| odbc	count=1
namespace	current ||| harupage	count=4
namespace	returns ||| sqlite3stmt	count=1
arg_pair	by key from the ||| string $key	count=1
arg_pair	named virtual file ||| resource $pdfdoc string $filename	count=1
function_name	checks if [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	permissions ||| eio chown	count=1
function_name	it shouldnt need ||| state	count=1
namespace	front of the buffer ||| eventbuffer	count=1
function_name	source node [function_name] applying the ||| transform [function_name]	count=1
namespace	used later [namespace] event_base_set() ||| [namespace]	count=1
return	[return] stop ||| [return]	count=2
function_name	blocksize ||| get algo block size	count=1
function_name	stream or ||| stream socket	count=1
namespace	to the class ||| reflectionclass	count=1
function_name	avoid specific event method ||| avoid	count=1
function_name	rows [function_name_2] ||| [function_name_2] [function_name_1]	count=18
function_name	large object in a ||| lo	count=1
return	and valid ||| array	count=1
function_name	an adaptive blur filter ||| adaptive blur	count=1
function	phar [function_name_1] [arg_pair_2] ||| phar [function_name_1] string $filename [arg_pair_2]	count=3
function_name	stream to buffer bytes ||| stream	count=1
return	gearmanclient::addtaskhighbackground() or ||| bool	count=1
function_name	activation steepnesses in ||| get cascade activation steepnesses count	count=1
function_name	last [function_name_2] ||| [function_name_1] [function_name_2]	count=13
return	has no ||| bool	count=1
function_name	this sets ||| set object	count=1
function_name	cursor ||| cursor	count=1
arg_pair	data and ||| string $data string $mode	count=1
function_name	authentication [function_name_2] ||| [function_name_1] set [function_name_2]	count=2
function	new image [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	mime kopfzeile in ||| mime encode	count=1
return	retrieves ||| float	count=1
function	[function_name_1] apcs data ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	character c ||| int $color	count=1
function_name	used to [function_name] ||| [function_name]	count=1
function	activation function [arg_pair_2] ||| [function_name_1] output [arg_pair_2]	count=1
function_name	connections ||| connections	count=1
function_name	the phar::startbuffering() method can ||| start buffering	count=1
function_name	organization that an ||| geoip org by	count=1
function	[function_name_1] given entry ||| [arg_pair_2] [function_name_1]	count=4
return	with the difference ||| resource	count=1
function	value [arg_pair_2] ||| [function_name_1] enum [arg_pair_2]	count=2
function_name	supported [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	creates a new ||| resource $imap_stream	count=1
function_name	facet ||| set facet limit	count=2
return	[return] in output ||| [return]	count=3
function_name	[function_name_1] code from ||| [function_name_1] [function_name_2]	count=3
return	[return] given address ||| [return]	count=2
function_name	in conjunction [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	the server ||| string $cookie int $estimated	count=1
function_name	the server host name ||| host info	count=1
function_name	binds a php variable ||| bind	count=1
function_name	error string of any ||| bzerrstr	count=1
arg_pair	the result set cursor ||| resource $result int $field_offset	count=1
function_name	the cascade output ||| cascade output	count=2
function_name	[function_name_1] encoded string ||| [function_name_1] [function_name_2]	count=2
function_name	numerical ||| digit	count=1
function_name	during serialization of ||| serialize	count=1
function_name	of the host ||| host	count=1
function	sql type [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	current element ||| void	count=1
function_name	a quoted printable string ||| quoted printable encode	count=1
function_name	full country name ||| country name by name	count=1
function	set environmental [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	send back data prior ||| workload callback	count=1
arg_pair	and pattern ||| string $pattern	count=1
function_name	dispatch [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	a global transaction ||| mixed $connection string $gtrid	count=1
function_name	number of days ||| days	count=1
function	specified distortion [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] a given ||| [arg_pair_2] [function_name_1]	count=4
function	contents [arg_pair_2] ||| [function_name_1] phar [arg_pair_2]	count=1
arg_pair	length - ||| resource $zp int $length	count=1
function_name	sets the value for ||| set value	count=1
function_name	module ||| get module	count=1
function_name	mime kopfzeile ||| iconv mime encode	count=1
arg_pair	of the color ||| int $blue	count=1
function_name	layer [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	pixel [return] moved ||| [return]	count=1
function_name	image chromaticity red primary ||| image red primary	count=1
function_name	field type is returned ||| fbsql field type	count=1
function_name	epochs determines the maximum ||| cascade max cand	count=1
function_name	tell the cursor ||| tell	count=1
function_name	page and ||| end page	count=1
function_name	the [function_name] the ||| get [function_name] info	count=1
function_name	returns ||| get from	count=1
function	[function_name_1] afterward by ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	database for database queries ||| string $database	count=1
function_name	used to escape certain ||| ingres escape string	count=1
arg_pair	before it ||| resource $link string $source_string	count=1
function_name	as event handler ||| set event handler	count=1
function_name	facet fields should be ||| facet	count=1
namespace	evio watcher object ||| evio	count=1
function_name	active event ||| event	count=1
function_name	if the ||| module is	count=1
arg_pair	by assoc_array which has ||| array $assoc_array int $options	count=1
return	reflectionmethod for ||| reflectionmethod	count=1
namespace	the ||| function	count=75
arg_pair	the transparency ||| float $fuzz	count=1
arg_pair	new date ||| int $sec int $usec	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] mlt query [function_name_2]	count=2
arg_pair	a magnitude ||| string $magnitude	count=1
arg_pair	function is identical to ||| string $encoding	count=1
return	child before ||| void	count=1
function_name	the current text ||| get text	count=1
namespace	a number ||| gmagick	count=1
arg_pair	with the key ||| string $key	count=1
arg_pair	sets up callback ||| mixed $callback	count=1
function_name	single column ||| column	count=1
function	agent specified [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	the periodic ||| evperiodic	count=1
function_name	php logo using the ||| php logo guid	count=1
namespace	using nonzero winding number ||| harupage	count=1
function_name	ssl buffer event ||| ssl filter	count=1
namespace	from the session storage ||| sessionhandlerinterface	count=1
function_name	[function_name_1] [function_name_2] works ||| [function_name_1] block algorithm [function_name_2]	count=1
function_name	returns query ||| get	count=1
namespace	array of ||| function	count=2
function_name	maximum ||| fann get cascade max	count=1
function_name	the service ||| gupnp service proxy get	count=1
function_name	the current boost value ||| get boost	count=1
function_name	id3 ||| id3 get	count=1
function_name	bit fail [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	mime kopfzeile in ||| iconv mime encode	count=1
function_name	last value from a ||| last insert	count=1
arg_pair	a string containing number ||| string $number int $frombase	count=1
function	value [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] variable_name ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	for a phar ||| phar	count=1
function_name	modify the ||| modify	count=1
function_name	from ||| object	count=1
arg_pair	can be added to ||| string $file string $localname	count=1
namespace	this function tries ||| function	count=1
function_name	a file that ||| set metadata	count=1
arg_pair	a ||| resource $link	count=1
return	an entry in the ||| bool	count=1
return	result ||| sqlite3result	count=1
arg_pair	a ||| object $link_identifier	count=1
arg_pair	by the specified offset ||| int $offset	count=1
namespace	parallel ||| gearmanclient	count=1
function_name	the corresponding geoip ||| geoip	count=2
function_name	current solr ||| solr	count=1
arg_pair	locale ||| string $locale	count=1
function_name	current process ||| posix	count=6
function_name	frequency used for determining ||| frequency	count=1
function_name	from a given ||| fetch	count=1
function_name	of channels ||| channels	count=1
arg_pair	acts very much ||| string $username	count=1
function_name	priority ||| buffer priority set	count=1
namespace	text without any markup ||| tidynode	count=1
function	[function_name_1] file ||| [function_name_1] [arg_pair_2] string $optlist	count=3
function_name	[function_name_1] the border ||| [function_name_1] [function_name_2]	count=2
function_name	with the key ||| key	count=1
function_name	[function_name_1] the current ||| [function_name_2] add [function_name_1]	count=1
function_name	end of current ||| buffer	count=1
arg_pair	database name ||| string $database	count=1
namespace	determine whether ||| splfileobject	count=1
return	and size at the ||| bool	count=1
function_name	set ||| set info	count=1
function_name	sets ||| set terms	count=3
return	file descriptor of a ||| int	count=1
function_name	add the result to ||| add	count=1
arg_pair	numbers by the ||| int $reverse	count=1
namespace	returned documents should ||| solrquery	count=1
function_name	[function_name_1] write ||| [function_name_1] [function_name_2]	count=1
namespace	session storage and ||| sessionhandlerinterface	count=1
function_name	change [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	provided ||| add buffer	count=2
function_name	key is the private ||| private	count=1
return	remaining ||| mongocursor	count=1
namespace	gets the value of ||| function	count=1
function_name	writable ||| writable	count=1
arg_pair	of ||| resource $pdfdoc	count=1
arg_pair	a prepared statement with ||| string $stmtname	count=2
function_name	jste ||| jste	count=1
arg_pair	result of ||| resource $link resource $result	count=1
function_name	xhprof data ||| xhprof	count=1
function_name	and [function_name] ||| [function_name]	count=1
function_name	error returned by the ||| bzerrstr	count=1
function_name	should ||| set	count=1
function_name	radius requests ||| radius	count=2
function_name	new pdf ||| pdf open	count=2
function_name	exports ||| pkey export	count=2
arg_pair	all of haystack ||| string $haystack	count=1
arg_pair	a ||| string $charset	count=1
function_name	sequence type attribute in ||| seq	count=2
function_name	mime kopfzeile in the ||| mime	count=1
function_name	[function_name_1] dabase header ||| [function_name_1] [function_name_2]	count=1
function	postgresql [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	returns underlying input ||| get input	count=2
function_name	a syntax highlighted ||| highlight	count=1
namespace	function determines ||| function	count=1
function_name	forward current ||| forward	count=1
function	[function_name_1] sealed_data using ||| [function_name_1] open [arg_pair_2]	count=1
function_name	databases ||| dbs	count=1
function_name	connection to ||| connect	count=3
function_name	printable string according to ||| printable decode	count=1
function_name	stream of the ||| stream	count=1
arg_pair	key and ||| string $passphrase	count=1
function_name	new attribute [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	input vector after ||| input	count=1
function_name	in the complete result ||| start	count=1
namespace	the gmagick object as ||| gmagick	count=1
function	[function_name_1] specified class ||| [arg_pair_2] [function_name_1]	count=2
function_name	an access [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	again ||| again	count=2
return	iterator ||| bool	count=3
function_name	minimum document ||| enum cache min	count=1
function_name	launched via the ||| start	count=1
function_name	an access token secret ||| access token	count=1
function_name	moves the internal row ||| seek	count=3
namespace	this function is not ||| function	count=1
function_name	signal is delivered ||| pcntl	count=1
function_name	maximum ||| fann get cascade max cand	count=1
function_name	xml parser [function_name] ||| xml parser create [function_name]	count=2
function_name	the mime content type ||| mime content type	count=1
arg_pair	callback to be ||| int $type mixed $callback	count=1
function_name	most recent request ||| last	count=1
function_name	training [function_name_2] ||| [function_name_1] num [function_name_2]	count=1
return	connection to auto-commit ||| bool	count=1
return	all data from ||| bool	count=1
function_name	[function_name_1] one of ||| [function_name_2] [function_name_1]	count=3
function	[function_name_1] struct ||| [function_name_1] [arg_pair_2]	count=1
namespace	cannot ||| pharfileinfo	count=1
function_name	add ||| add	count=8
function_name	maximum search [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	new ||| new	count=10
return	using a ||| bool	count=1
function_name	command and separate parameters ||| query params	count=1
function_name	reference ||| decode numericentity	count=2
function_name	formed by the arguments ||| checkdate	count=1
function_name	not for production environments ||| disable	count=1
function_name	subset of the train ||| fann subset train	count=1
function_name	a digital [function_name] ||| median [function_name] image	count=3
function_name	[function_name_1] list of ||| [function_name_1] server [function_name_2]	count=1
function_name	function replaces the ||| replace	count=1
function_name	the number of ||| row count	count=1
function_name	of ||| get current	count=1
arg_pair	mailbox see imap_open() for ||| string $old_mbox	count=1
arg_pair	option from ||| int $option	count=1
function_name	[function_name] on ||| uopz [function_name]	count=3
namespace	evstat watcher ||| evstat	count=1
function_name	the default character set ||| charset	count=1
function_name	memcached::prepend() except ||| prepend	count=1
arg_pair	image of specified ||| int $width int $height	count=1
function_name	activation function ||| activation function	count=9
return	matches one of the ||| int	count=1
function_name	the number ||| get cascade num	count=1
function_name	vendor specific [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	result ||| resource	count=2
function_name	the activation steepness ||| fann get activation steepness	count=1
function_name	the file named by ||| export to file	count=2
function_name	with the kadm5 library ||| kadm5 init with	count=1
function_name	value of word ||| get word	count=1
arg_pair	to a ||| string $country_code	count=2
function_name	submit the object ||| submit to	count=1
namespace	defines the appearance ||| harudestination	count=3
function_name	reduce ||| reduce	count=1
return	nonzero winding ||| bool	count=1
function_name	of current eventbuffer ||| add buffer	count=1
arg_pair	object and ||| mixed $data	count=1
arg_pair	the associative or ||| int $enc_type	count=1
function_name	contrast [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	to ||| bool $is_hex	count=1
function_name	the total number of ||| total space	count=1
function_name	if it is ||| is	count=1
function_name	selects the default database ||| maxdb select db	count=1
arg_pair	a hard ||| string $target	count=1
function_name	textflow ||| info textflow	count=2
arg_pair	one row of data ||| int $fetch_flag	count=1
arg_pair	that correspond to ||| int $row	count=1
function_name	result row [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	parses an xml string ||| xml parse	count=1
function_name	[function_name_1] length ||| [function_name_1] [function_name_2]	count=7
namespace	this function compresses ||| function	count=1
arg_pair	variable with a column ||| mixed $variable	count=1
function	[function_name_1] tracing ||| [arg_pair_2] [function_name_1]	count=3
return	[return] mysql ||| [return]	count=3
function_name	[function_name_1] bit fail ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] the ||| [function_name_1] path [arg_pair_2]	count=1
return	the percentage of the ||| int	count=2
function_name	returns the actual response ||| get document	count=1
function_name	upper bound term in ||| upper bound	count=2
function_name	property for a code ||| get int property value	count=1
function_name	[function_name_1] rate ||| [function_name_1] [function_name_2]	count=5
function_name	selects records specified by ||| pg select	count=1
function_name	audio ||| audio	count=1
arg_pair	from the associative ||| string $arg_separator int $enc_type	count=1
function	[function_name_1] color pair ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	values array ||| array $values	count=1
function_name	product of ||| product	count=1
function_name	memcached::prepend() except ||| prepend by key	count=1
function_name	of the horizontal ||| horizontal	count=1
function_name	gets the [function_name] ||| get [function_name]	count=1
function_name	sets whether [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	elapsed time for all ||| elapsed time	count=1
arg_pair	function prepares for an ||| resource $id	count=1
function_name	[function_name_1] wrapper ||| [function_name_2] [function_name_1]	count=1
function_name	legendre symbol ||| gmp legendre	count=1
function_name	slop on phrase ||| phrase slop	count=1
arg_pair	operation so that the ||| mixed $value	count=1
function_name	color ||| unique image	count=1
function	for [arg_pair_2] ||| [function_name_1] password [arg_pair_2]	count=1
function_name	connection ||| fbsql	count=1
function_name	context ||| stream context	count=1
function_name	boost query ||| boost query	count=2
function_name	map the ||| get	count=1
function_name	the currently stored value ||| apc cas	count=1
function_name	[function_name_1] encoded ||| [function_name_1] [function_name_2]	count=2
function_name	which is effective in ||| current	count=1
arg_pair	queries the resulting ||| string $optlist	count=1
function_name	all data from the ||| buffer	count=1
function_name	nntp server ||| reopen	count=1
function_name	fork in the child ||| loop fork	count=1
return	the search ||| bool	count=2
namespace	the hash in the ||| quickhashstringinthash	count=1
function_name	string from utf-8 ||| pdf utf8	count=1
function_name	gives the bounding ||| imagepsbbox	count=1
function_name	from a [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	stores x509 ||| mixed $x509	count=2
return	the given file pointer ||| string	count=1
function_name	of a facet ||| set facet	count=1
namespace	phar archive ||| pharfileinfo	count=1
arg_pair	the field after ||| resource $fdf_document string $fieldname	count=1
namespace	current session ||| sessionhandler	count=1
function_name	last ||| error	count=1
function_name	as fsockopen() ||| pfsockopen	count=1
function_name	socket streams ||| stream socket	count=2
function_name	environments ||| disable	count=1
function_name	supported key size ||| get key size	count=2
arg_pair	points start inclusive limit ||| mixed $limit	count=1
function_name	translates ||| translate	count=1
function_name	of activation steepnesses in ||| get cascade activation steepnesses	count=1
function_name	gets the namespace ||| lookup namespace	count=1
function_name	resource suitable ||| maxdb	count=1
function_name	to reduce ||| reduce	count=1
arg_pair	set ||| resource $link_identifier	count=1
namespace	recursivefilteriterator ||| recursivefilteriterator	count=1
return	error code ||| int	count=1
arg_pair	of text ||| string $text	count=1
arg_pair	the object_id ||| string $object_id string $timeout	count=1
function_name	creates ||| mcrypt create	count=1
namespace	soapfault ||| soapfault	count=1
return	all rows of the ||| int	count=1
arg_pair	path to ||| string $path bool $recursive	count=1
function_name	constructs a ||| construct	count=6
arg_pair	data ||| int $type	count=1
function_name	images ||| images	count=1
return	in a sequence ||| string	count=1
function_name	fit ||| set fit v	count=2
function_name	inclusive for the last ||| last	count=1
function_name	by the user ||| set	count=1
function_name	empty string if attribute ||| attribute	count=1
namespace	function returns a ||| function	count=4
arg_pair	given shell wildcard pattern ||| string $pattern	count=1
function_name	sets the read and ||| timeout set	count=1
return	the list of ||| int	count=1
arg_pair	current request indicating an ||| string $actor	count=1
function	[function_name_1] a named ||| [arg_pair_2] [function_name_1]	count=1
function_name	image to memory ||| image	count=2
arg_pair	path to ||| string $path	count=1
function_name	[function_name_1] message severity ||| [function_name_1] [function_name_2]	count=3
function_name	in __autoload() ||| spl autoload	count=1
function_name	object compression quality ||| compression quality	count=1
arg_pair	a server with ||| resource $id	count=1
function_name	maximum supported keysize ||| algo key size	count=1
arg_pair	specified directory ||| string $directory	count=2
arg_pair	the color ||| mixed $fill float $fuzz	count=1
arg_pair	hash ||| string $hash integer $algo	count=1
function_name	get the name ||| current	count=1
function_name	ends a ||| ps end page	count=1
function_name	specified [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] the input ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	acts very [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	nsapi response headers ||| nsapi response headers	count=3
return	string representation ||| string	count=1
namespace	request the ||| function	count=1
function_name	closes the ||| mssql close	count=1
namespace	the propertys ||| reflectionproperty	count=1
arg_pair	any data ||| int $max_bytes	count=1
arg_pair	converts unicode domain ||| string $domain int $options	count=1
namespace	the appearance of the ||| harudestination	count=3
function_name	as event ||| event	count=1
arg_pair	if the word is ||| resource $dict string $word	count=2
function_name	or redefines the given ||| ncurses init	count=1
arg_pair	statement which can ||| string $statement	count=1
return	count [return] containing the ||| [return]	count=1
function_name	dns resource ||| dns	count=1
function_name	the php logo using ||| php logo	count=1
function_name	session ||| session	count=2
arg_pair	seconds ||| int $seconds	count=1
function_name	sunset time for ||| date sunset	count=1
function_name	get [function_name_2] ||| [function_name_1] [function_name_2]	count=17
function_name	secondaries ||| get slave okay	count=3
function_name	[function_name_1] a name ||| [function_name_2] [function_name_1]	count=1
function_name	specified character codes in ||| mb encode numericentity	count=1
arg_pair	that an exact match ||| imagick $imagick array $offset	count=1
arg_pair	[arg_pair_1] of the ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	queue ||| queue	count=1
return	maintaining key [return] data ||| [return]	count=2
return	current path using nonzero ||| bool	count=1
arg_pair	data using the public ||| string $data	count=1
function_name	[function_name_1] region ||| [function_name_1] [function_name_2]	count=2
function_name	changes phps current directory ||| chdir	count=1
arg_pair	a ||| string $note_name string $note_value	count=1
arg_pair	the specified flag ||| int $options	count=1
function	[function_name_1] using gearmanclient::setstatuscallback() ||| [arg_pair_2] [function_name_1]	count=2
function_name	next event ||| event	count=1
function_name	matches ||| paint transparent	count=1
namespace	directoryiterator back ||| directoryiterator	count=1
function_name	of the train ||| train	count=1
function_name	the owner ||| get owner	count=1
arg_pair	that the property have ||| int $type	count=1
function_name	partial ||| partial	count=1
return	the file ||| string	count=2
namespace	any pixel ||| imagick	count=1
function_name	each virtual server ||| get server	count=1
function_name	of the route ||| get	count=1
function_name	determines the minimum number ||| fann get cascade min	count=1
function_name	the file named ||| file	count=2
function_name	local name ||| name	count=1
arg_pair	send by the ||| int $estimated	count=1
arg_pair	already exist ||| array $options	count=1
function_name	will return the time ||| time	count=1
function_name	feed [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	the [function_name] ||| [function_name] field num	count=1
namespace	session storage and returns ||| sessionhandlerinterface	count=1
function_name	servers pid ||| pid	count=1
arg_pair	of ||| resource $result	count=2
arg_pair	from fd [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	amount of [function_name] ||| set phrase [function_name]	count=1
arg_pair	the database name ||| resource $link_identifier string $database	count=1
return	an integer ||| int	count=2
function_name	be dismax query ||| use dis max query	count=1
function_name	supported algorithms in ||| algorithms	count=1
arg_pair	specified table or a ||| string $fk_table	count=1
arg_pair	[arg_pair] including fields ||| [arg_pair]	count=3
arg_pair	is a ||| string $note_value	count=1
function_name	activation function for ||| get activation function	count=1
arg_pair	on the page ||| resource $pdfdoc	count=1
function_name	query string with ||| set query	count=1
arg_pair	callback function to each ||| callable $callback	count=1
function_name	network ||| fann set weight	count=1
function_name	use [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	and ||| yaz sort	count=1
function_name	disabled via the ||| disabled	count=1
function	sets blocking [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	new instance of a ||| string $progid int $code_page	count=1
return	the end of current ||| bool	count=1
function_name	copies data from table ||| pgsql copy to array	count=1
function	[function_name_1] sealed_data using ||| [function_name_1] [arg_pair_2]	count=1
return	php variable to ||| bool	count=1
function_name	closes the request handle ||| cubrid close	count=1
function_name	a database ||| dba open	count=1
function_name	[function_name_1] variables ||| [function_name_1] [function_name_2]	count=2
function_name	mime [function_name_2] ||| [function_name_1] [function_name_2]	count=6
return	current point [return] new ||| [return]	count=1
arg_pair	a query for ||| resource $link string $query	count=1
function_name	[function_name_1] record from ||| [function_name_2] [function_name_1]	count=1
function_name	facet [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	single line ||| textline	count=1
function_name	word [function_name_2] ||| [function_name_1] [function_name_2]	count=6
arg_pair	descriptor specified by fd ||| mixed $fd	count=1
arg_pair	snmp ||| string $host string $community	count=5
function_name	field pf2 ||| field	count=1
function_name	[function_name_1] callback function ||| [function_name_1] [function_name_2]	count=2
namespace	buffer events output buffer ||| eventbufferevent	count=1
return	the child before entering ||| void	count=1
return	files header and ||| mixed	count=1
namespace	name of ||| function	count=1
arg_pair	messages in ||| resource $imap_stream	count=1
function_name	set type set ||| set drop	count=1
return	tasks previously added with ||| bool	count=1
function_name	stride value ||| stride for width	count=1
function_name	create a new ssl ||| ssl	count=1
function_name	an existing function ||| function	count=1
function_name	user defined class ||| class	count=1
function_name	whether the opened ||| enc is	count=1
arg_pair	key for a table ||| string $table	count=1
function_name	contrast [function_name_2] ||| [function_name_1] stretch [function_name_2]	count=1
namespace	in the pdf document ||| harudoc	count=1
function_name	from the buffer provided ||| add buffer	count=1
function_name	databases ||| put nr	count=2
function_name	the ||| isbase	count=1
function	open file [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	memcached::prepend() except that the ||| prepend	count=1
return	needed to call this ||| bool	count=1
arg_pair	str using the rsa ||| string $str bool $raw_output	count=1
arg_pair	from object_id and ||| string $object_id	count=2
function_name	reply that uses ||| send reply start	count=1
function_name	curl handles ||| curl	count=1
function_name	a get_more operation ||| log getmore	count=1
return	explicitly by [return] ||| [return]	count=3
function_name	placeholder name which points ||| array by name	count=1
function_name	given column in ||| bind column	count=1
function_name	of ||| immortal	count=1
function_name	single plural message lookup ||| dngettext	count=1
arg_pair	name used ||| resource $link_identifier	count=1
function_name	not to return the ||| terms return	count=1
namespace	which is ||| yaf_router	count=1
function_name	the mode [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	subtraction ||| sub	count=1
function_name	an url ||| url	count=1
arg_pair	distinguished name ||| array $configargs array $extraattribs	count=1
return	returned ||| string	count=1
arg_pair	by the given oid ||| string $oid	count=1
function_name	[function_name_1] color space ||| [function_name_1] [function_name_2]	count=2
arg_pair	the key with old_value ||| string $key int $old_value	count=1
function_name	[function_name] task ||| add task [function_name]	count=1
rest	to [function_2] ||| [return_1] pdf [function_2]	count=1
arg_pair	b black and ||| resource $pdfdoc float $b	count=1
function_name	on the server ||| immortal	count=1
function_name	[function_name_1] phrase slop ||| [function_name_1] [function_name_2]	count=4
function_name	the queries ||| by queries	count=1
function_name	more stored procedures ||| procedure columns	count=1
arg_pair	at that index ||| mixed $index	count=1
namespace	string [namespace] ||| [namespace]	count=1
function_name	minimum document frequency used ||| enum cache min default frequency	count=1
arg_pair	a specified offset ||| int $length	count=1
function_name	stream representing a ||| event stream	count=1
arg_pair	php variable ||| mixed $parameter mixed $variable	count=1
function_name	sends an exception ||| set exception	count=1
function_name	tell the cursor position ||| tell	count=1
function_name	file_get_contents() returns ||| file get contents	count=1
arg_pair	occurrence ||| string $needle	count=1
return	identifier to point to ||| bool	count=2
arg_pair	searches for a ||| string $encoding string $optlist	count=1
namespace	of the specified ||| function	count=2
function_name	route which ||| get current	count=1
function_name	raw characters ||| raw	count=2
arg_pair	from the associative or ||| string $arg_separator	count=1
namespace	phar will save changes ||| phar	count=1
arg_pair	equivalent to memcached::getmulti() except ||| int $flags	count=1
function_name	picture ||| picture	count=1
arg_pair	to ann based ||| resource $ann array $input_vector	count=1
arg_pair	options to an ||| resource $pdfdoc	count=1
function_name	file or url ||| add file	count=1
function_name	bigram phrase slop ps2 ||| bigram phrase slop	count=1
function_name	form data ||| fdf	count=1
function_name	[function_name_1] raw characters ||| [function_name_1] [function_name_2]	count=3
arg_pair	up to length ||| resource $zp int $length	count=1
arg_pair	coordinate system ||| float $sx	count=1
function_name	returns ||| get pixel	count=1
arg_pair	create or ||| int $key	count=1
function_name	returns information ||| get header info	count=1
arg_pair	as specified by mask ||| int $mask	count=1
function_name	constructor ||| construct	count=2
arg_pair	fd file descriptor ||| int $mode	count=1
function_name	copies [function_name_2] ||| [function_name_2] [function_name_1]	count=22
arg_pair	given message sequence number ||| resource $imap_stream int $msg_number	count=1
function_name	version ||| version	count=14
function_name	socket into a socket ||| socket	count=1
function_name	appends an arc ||| arc	count=1
function_name	neurons in each layer ||| get layer array	count=1
function_name	[function_name_1] point ||| [function_name_1] [function_name_2]	count=2
function_name	feed signal ||| feed signal	count=2
function_name	[function_name_1] map configuration ||| [function_name_1] [function_name_2]	count=1
function_name	class method exists in ||| method exists	count=1
namespace	given result identifier ||| function	count=1
function_name	with the kadm5 ||| kadm5 init with	count=1
function	[function_name_1] apcs data ||| [arg_pair_2] [function_name_1]	count=2
namespace	request on the ||| function	count=1
arg_pair	functions returns the input ||| string $input int $pad_length	count=1
function_name	radius requests the ||| radius	count=1
namespace	evio ||| evio	count=1
function_name	the currently executing thread ||| get current thread	count=1
namespace	timeout in [namespace] to wait ||| [namespace]	count=1
arg_pair	image from the ||| int $quality int $filters	count=1
function_name	learning momentum ||| learning momentum	count=2
function	authentication parameter [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	segment of [arg_pair] ||| [arg_pair]	count=3
function	function [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	string input for fields ||| string $delimiter	count=1
function_name	that cannot be ||| set	count=1
function_name	[function_name_1] json string ||| [function_name_1] [function_name_2]	count=3
arg_pair	ord in the ||| int $ord	count=1
function_name	if the ||| is	count=1
function_name	transaction [function_name] was begun ||| [function_name] rollback	count=1
function_name	to an [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	iterator ||| splobjectstorage	count=1
function_name	called ||| set state	count=2
arg_pair	up to ||| bool $use_include_path	count=1
function_name	field offset ||| field	count=1
function_name	given result identifier ||| ibase fetch object	count=1
function_name	a [function_name] into a ||| [function_name] export	count=1
function_name	[function_name_1] severity ||| [function_name_1] [function_name_2]	count=4
function_name	in the route process ||| current route	count=1
arg_pair	array or something in ||| mixed $array_or_countable int $mode	count=1
function_name	csr and saves it ||| csr export	count=1
function_name	only be used ||| set	count=1
function_name	page geometry associated with ||| page	count=2
namespace	function in that it ||| function	count=1
function_name	be called after ||| loop	count=1
arg_pair	data ||| bool $strict	count=1
function_name	either a [function_name] ||| [function_name] export	count=1
function_name	maps to facet ||| facet	count=1
function_name	use spanscorer to highlight ||| highlight use	count=2
function_name	assign a priority ||| event buffer priority set	count=1
function_name	an ||| ingres fetch array	count=1
return	this [return] an ||| [return]	count=1
function	connect [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	client options set ||| options	count=1
arg_pair	batch of insert operations ||| mongocollection $collection array $write_options	count=1
namespace	buffer event ||| eventbufferevent	count=1
function_name	[function_name_1] declaring class ||| [function_name_1] [function_name_2]	count=2
arg_pair	method and ||| string $method	count=1
function_name	next [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	sets the number ||| fann set cascade num	count=1
function_name	sets the rotation of ||| ps rotate	count=1
function_name	instructs com ||| com	count=1
namespace	entry ||| ziparchive	count=2
arg_pair	is posted ||| string $event_name2	count=1
function_name	messages generated ||| message	count=1
function_name	last imap [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	the given oid ||| resource $conn_identifier string $oid	count=1
namespace	whether the cursor ||| mongocursorinterface	count=1
function_name	type stream fstream ||| stream	count=1
namespace	failed [namespace] ||| [namespace]	count=1
function_name	filter query determines which ||| filter query	count=1
function_name	the [function_name] of the ||| [function_name]	count=1
function_name	[function_name] delimiter ||| [function_name] csv	count=1
arg_pair	value ||| mixed $value	count=1
function_name	with the kadm5 library ||| kadm5 init	count=1
function_name	a rectangle given ||| rectangle	count=1
function_name	severity level ||| severity	count=3
function_name	this function creates ||| create	count=2
return	the decrypted ||| bool	count=1
function_name	finds whether to ||| is	count=1
arg_pair	a result set as ||| resource $stmt string $classname	count=1
function_name	has rows ||| has rows	count=1
function_name	the current line ||| pdf setlinewidth	count=2
function_name	[function_name_1] declared ||| [function_name_2] [function_name_1]	count=1
function_name	skews ||| pdf skew	count=2
function_name	must be called ||| loop	count=1
return	error string ||| string	count=1
arg_pair	entry in the result ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	[function_name_1] severity level ||| [function_name_1] [function_name_2]	count=12
arg_pair	parser parser ||| resource $parser	count=2
function_name	posix ||| posix	count=1
arg_pair	directory named by dirname ||| resource $context	count=1
return	be called after a ||| void	count=1
arg_pair	to display a ||| string $frame_name	count=1
arg_pair	specified index to ||| mixed $index	count=2
function_name	basic com_* [function_name] send to ||| simple [function_name] handle response	count=1
arg_pair	by dn which ||| array $dn resource $privkey	count=1
function_name	the end ||| buffer	count=1
function_name	real [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	for execution ||| sqlsrv prepare	count=1
namespace	a file that ||| pharfileinfo	count=1
function	whether [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	event status callbacks ||| callbacks	count=1
return	element ||| bool	count=1
namespace	phar file format that ||| phar	count=1
namespace	domelement object ||| domelement	count=1
arg_pair	of ||| int $timeout int $retries	count=1
arg_pair	the result-set from a ||| int $maxlen	count=1
function_name	rot13 encoding on the ||| str rot13	count=1
function_name	current process [function_name] the ||| [function_name] nice	count=1
arg_pair	[arg_pair_1] of any ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	merges ||| array merge	count=3
function_name	is a built-in ||| builtin	count=1
function_name	whether pspell_save_wordlist() will save ||| save	count=1
return	must be ||| void	count=1
arg_pair	get or ||| resource $link_identifier	count=1
arg_pair	apply ||| resource $sourcefp resource $destfp	count=1
function_name	a fork in ||| fork	count=1
arg_pair	can create or ||| int $key string $flags	count=1
arg_pair	send by the server ||| int $estimated	count=1
function_name	[function_name_1] json string ||| [function_name_2] [function_name_1]	count=3
arg_pair	a ||| resource $pxdoc array $record	count=1
arg_pair	an external ||| string $filename string $alias	count=1
function_name	set ||| database	count=1
function_name	and php tags stripped ||| tags	count=1
arg_pair	[arg_pair] more parameter ||| [arg_pair]	count=1
function_name	copies ||| copy from array	count=1
function_name	trace ||| get trace	count=1
return	that was used to ||| bool	count=2
function_name	class method exists ||| method exists	count=2
function_name	end of ||| buffer	count=1
function_name	which is effective ||| get current	count=1
arg_pair	the keys from array1 ||| array $array1	count=2
return	new ||| mixed	count=1
return	with a column ||| mixed	count=1
return	or continuing ||| void	count=1
function_name	send soap fault ||| soap fault	count=1
namespace	nonzero winding number rule ||| harupage	count=1
namespace	an snmp object ||| snmp	count=1
function_name	stroking [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	shouldnt ||| set	count=1
function_name	similar to creating ||| get active	count=1
arg_pair	in dest file ||| string $dest int $context	count=1
arg_pair	given object ||| mixed $object string $method_name	count=1
return	instance of class domdocumentfragment ||| domdocumentfragment	count=1
arg_pair	by execute ||| int $pri	count=1
function_name	raw xml ||| xml	count=1
function_name	of the ssl_cipher_description ssl ||| ssl	count=1
function_name	the miter limit ||| get miter limit	count=2
arg_pair	that an ||| array $offset	count=1
function_name	namespace ||| namespace	count=3
function_name	the number of ||| count	count=3
function_name	the next lowest integer ||| floor	count=1
function_name	the current element ||| get	count=1
function_name	csr certificate signing request ||| openssl csr	count=1
arg_pair	expression and ||| domnode $contextnode	count=1
function_name	sql-statement ||| dbx	count=1
function_name	with the specified ||| fetch row	count=1
function_name	a shared memory segment ||| shm has	count=1
function_name	width for the page ||| width	count=1
arg_pair	the database ||| int $port	count=1
function_name	[function_name_1] root elements ||| [function_name_2] [function_name_1]	count=2
function_name	train ||| fann train	count=2
function_name	and sort direction ||| sort	count=1
function_name	php [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function	starts [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	fetches the ||| int $timeout_type	count=1
function_name	request ||| request	count=13
function_name	the stream [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	combination of fbsql_fetch_row() ||| resource $result int $result_type	count=1
function_name	callback ||| preg replace callback	count=2
function_name	response xml string from ||| xml response	count=1
namespace	starting from position ||| domcharacterdata	count=1
return	the event loop ||| void	count=1
function_name	the oid of the ||| oid	count=1
function_name	in the output ||| output	count=1
function_name	minimum ||| mssql min	count=1
function_name	for facet fields ||| facet	count=1
arg_pair	if a ||| string $fieldvalue	count=1
function_name	a task [function_name] ||| [function_name] callback	count=1
arg_pair	snmp [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	string up to maxlength ||| resource $handle int $maxlength	count=1
function	[function_name_1] has been ||| [arg_pair_2] [function_name_1]	count=4
function_name	an ip ||| addr	count=1
namespace	function toggles ||| function	count=1
arg_pair	assoc_array which ||| int $options	count=1
function_name	returns the sunset time ||| sunset	count=1
function_name	set ||| xml set	count=1
function_name	from ||| with names	count=2
function_name	[function_name_1] the candidate ||| [function_name_2] [function_name_1]	count=1
return	sets the thread ||| bool	count=1
arg_pair	to use mapreduce ||| array $pipeline array $options	count=1
function_name	eventbuffer ||| buffer	count=1
function_name	into a mysqlnd connection ||| convert to mysqlnd	count=1
function_name	ftp ||| ftp get	count=2
namespace	this function renames on ||| function	count=1
function_name	retrieves the version ||| version	count=1
function_name	context with ||| gupnp context	count=2
function_name	imagemagick package [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	number of ||| string $str int $width	count=1
function_name	an aql ||| aql	count=1
arg_pair	from the ||| string $arg_separator	count=1
function_name	the specified status ||| task status	count=1
function_name	[function_name_1] in the ||| [function_name_1] [function_name_2]	count=1
function_name	integer range filter ||| filter range	count=1
function_name	not to return ||| terms return	count=1
function_name	[function_name] of the ||| [function_name]	count=6
function_name	memcached::res_* constants that is ||| code	count=1
function_name	passed with an url ||| url	count=1
function_name	host name ||| mysql get host	count=1
arg_pair	principal ||| string $password	count=1
arg_pair	path in ||| string $path int $flags	count=1
function_name	extension to be used ||| extension	count=1
return	the given ||| string	count=1
namespace	function but a language ||| function	count=1
function_name	to set [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	the primary ||| function	count=1
arg_pair	the given filter filtertype ||| resource $image int $filtertype	count=1
namespace	specified database by ||| function	count=1
function_name	removes objects contained ||| remove	count=1
function_name	to mongocollection::find() this ||| find one	count=1
function_name	seeks ||| seek	count=1
function_name	request represented by csr ||| openssl csr export to	count=1
function_name	that matches color ||| paint opaque	count=1
function_name	an id3 tag ||| id3 remove tag	count=1
arg_pair	data format ||| string $data int $level	count=1
function_name	gets the namespace uri ||| namespace uri	count=1
function_name	the vector subtraction ||| sub	count=1
function_name	a new ssl buffer ||| ssl filter	count=1
arg_pair	used afterward by ||| string $baseclass string $extendedclass	count=1
function_name	size for the page ||| size	count=1
arg_pair	blocks until there is ||| resource $mh	count=1
function_name	buffer ||| add	count=1
function_name	candidate [function_name_2] ||| [function_name_1] min [function_name_2]	count=1
function	parameter [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	value of [return] ||| [return]	count=1
function_name	field from the current ||| field	count=1
function_name	loop ||| loop shutdown	count=1
function_name	rrd [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	curl handle in the ||| curl	count=1
function_name	dismax query [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	sets ||| set error handler	count=2
function_name	an in-progress ||| db2	count=2
arg_pair	str with ||| string $str string $encoding	count=1
arg_pair	that correspond to ||| string $class_name	count=1
function_name	[function_name_1] operation ||| [function_name_1] [function_name_2]	count=4
function_name	buffer provided in ||| buffer	count=1
function_name	return ||| gupnp service action return	count=1
function_name	that file_get_contents() returns the ||| file get contents	count=1
function_name	defined functions in ||| functions	count=1
namespace	true and turns ||| function	count=1
function_name	is seen ||| expect expectl	count=1
function_name	previously ||| run	count=1
function_name	audio properties of ||| audio properties	count=2
function_name	training data ||| fann	count=2
function_name	a png image ||| imagepng	count=1
function_name	specific row ||| fetch	count=1
return	[return] named ||| [return]	count=1
arg_pair	in a ||| string $encoding	count=1
function_name	compressed size ||| compressedsize	count=1
namespace	points with their unicode ||| intlchar	count=1
function_name	string representation ||| serialize	count=1
function_name	if it outputs just ||| is	count=1
arg_pair	the given ||| int $num_points int $color	count=1
function_name	users query ||| set query	count=1
function_name	represented ||| set	count=1
return	the result ||| bool	count=1
return	stored with a file ||| void	count=1
function_name	defines or redefines the ||| ncurses init	count=1
function_name	buffer ||| add buffer	count=2
function_name	suspend monitoring ||| fam suspend monitor	count=1
namespace	callable function ||| function	count=3
function_name	in the users query ||| set query	count=1
namespace	current image ||| imagick	count=1
function_name	given column ||| bind column	count=1
return	statement and returns ||| sqlite3result	count=1
function_name	a [function_name] the ||| preg [function_name]	count=1
arg_pair	parses key ||| mixed $key string $passphrase	count=1
function_name	[function_name_1] corresponding to ||| [function_name_2] [function_name_1]	count=22
arg_pair	length ||| int $length	count=1
function_name	backpropagation neural network which ||| fann	count=2
namespace	tells ||| tidynode	count=1
function_name	http header previously ||| header	count=1
function_name	data or [function_name] ||| get [function_name]	count=3
function_name	extension ||| type to extension	count=1
function	namespace namespaceuri named ||| ns string $namespaceuri	count=2
function_name	for the language described/referred ||| set ordering	count=1
function_name	the repository ||| svn	count=2
function_name	the minimum number ||| min	count=1
namespace	called for ||| recursiveiteratoriterator	count=1
function_name	returns ||| get var	count=2
function_name	function is only ||| state	count=1
function_name	specified ||| row	count=1
function_name	escape [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	looks up a ||| resource $connection string $param_name	count=1
namespace	true and turns off ||| function	count=1
arg_pair	named ||| string $servicename string $machine	count=2
function_name	[function_name_1] socket resource ||| [function_name_2] [function_name_1]	count=6
arg_pair	hash implements the algorithm ||| string $hash	count=1
return	a string that ||| string	count=2
namespace	to the hash ||| quickhashstringinthash	count=1
arg_pair	the time returned is ||| int $timestamp	count=1
arg_pair	be added ||| string $file string $localname	count=1
arg_pair	point for ||| float $y	count=1
function_name	and host checks this ||| disable	count=1
function_name	call to ||| call	count=1
function	[function_name_1] some pdflib ||| [arg_pair_2] [function_name_1]	count=1
function_name	a config used ||| config	count=1
function_name	after remaining idle ||| immortal	count=1
function_name	exception handler which ||| exception handler	count=1
namespace	document ||| domdocument	count=3
function_name	send [function_name] ||| gupnp service proxy [function_name] set	count=1
function_name	stroking color ||| get cmykstroke	count=1
function_name	neural network from a ||| fann	count=1
function_name	[function_name] counts ||| set facet [function_name] count	count=1
function_name	executes custom ||| eio custom	count=1
function_name	expand filter [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	uid for ||| imap uid	count=1
function_name	minimum out epochs ||| cascade min out epochs	count=1
return	expression to a ||| bool	count=1
function_name	the maximum number ||| max	count=1
function_name	[function_name_1] defined ||| [function_name_2] [function_name_1]	count=6
function_name	following ||| recursive	count=1
return	file that cannot be ||| void	count=1
arg_pair	permissions set to mode ||| bool $recursive	count=1
function_name	it ||| set	count=1
function_name	strip ||| ltrim	count=1
function_name	environment variable ||| setenv	count=1
function_name	sets ||| set highlight	count=1
namespace	plugin implement this ||| yaf_plugin_abstract	count=1
function_name	returns the image ||| get image	count=6
namespace	of the [namespace] on ||| [namespace]	count=1
function_name	stored in the ||| next entry	count=1
function_name	is the ||| get	count=1
function_name	replaces the ||| dbase replace	count=1
arg_pair	string before it ||| resource $link string $source_string	count=1
function_name	this function creates ||| create text	count=1
function	[function_name_1] a class ||| function int [function_name_1] [arg_pair_2]	count=3
function_name	all elements ||| elements by tag	count=1
function_name	[function_name_1] given postgresql ||| [function_name_2] [function_name_1]	count=2
namespace	the database ||| mongocursorinterface	count=1
arg_pair	apcs data store ||| bool $limited	count=1
function_name	a line ||| line	count=2
namespace	called after ||| evloop	count=1
arg_pair	a ||| resource $image string $filename	count=1
function_name	[function_name_1] given interface ||| [function_name_2] [function_name_1]	count=2
return	was used to ||| bool	count=2
function_name	stream or [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	transformation matrix of the ||| matrix	count=1
function_name	to fit the ||| set fit	count=1
function_name	into a ||| put	count=1
function_name	current session [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	seek ||| seek	count=1
function	tags stripped [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	attribute ||| int $type	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] enum [arg_pair_2]	count=36
function_name	the php [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	various internal ||| info	count=1
arg_pair	by a ||| resource $connection	count=1
function_name	make ||| taint	count=1
function_name	[function_name_1] an anonymous ||| [function_name_2] [function_name_1]	count=1
function_name	column names of ||| cubrid column names	count=2
function_name	patterns in the train ||| input train data	count=1
arg_pair	a file to new ||| string $path	count=1
function_name	memcached::prepend() except that the ||| prepend by key	count=1
function_name	delete current output buffer ||| ob	count=1
function_name	internally it shouldnt need ||| set	count=1
arg_pair	start ||| mixed $start	count=1
namespace	as a rpc service ||| yar_server	count=1
return	the name of the ||| string	count=1
function_name	last imap error ||| imap last error	count=2
function_name	phrase fields ||| phrase fields	count=2
arg_pair	of the buffer that ||| int $level int $type	count=1
function_name	when iteration ||| iteration	count=2
function_name	method [function_name] ||| [function_name]	count=3
function_name	creates a stopped instance ||| create stopped	count=1
function_name	passive member ||| is passive	count=1
function_name	phrase field pf3 parameter ||| phrase field	count=2
return	only be used to ||| void	count=1
arg_pair	with the given variable_key ||| int $variable_key	count=1
namespace	the buffer provided in ||| eventbuffer	count=1
function_name	route should ||| route	count=1
function_name	send partial ||| partial	count=1
function_name	the [function_name] for an ||| get [function_name]	count=1
function	[function_name_1] sql statement ||| [function_name_1] [arg_pair_2]	count=4
function	[function_name_1] sql statement ||| [function_name_1] get [arg_pair_2]	count=1
function_name	of the directory ||| dir	count=1
function_name	installs a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	parent node of ||| parent	count=1
function_name	adds a tag to ||| bbcode add	count=1
function_name	[function_name_1] contents ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] property value ||| [function_name_2] [function_name_1]	count=1
function_name	inode change time for ||| ctime	count=1
function_name	mssql_fetch_array() with [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] message from ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] context [function_name_1]	count=4
function_name	returns status information ||| ob get status	count=2
function_name	get ||| fbsql database	count=2
namespace	is only ||| mongoid	count=1
function	[function_name_1] result resource ||| [function_name_1] [arg_pair_2]	count=2
return	nonzero winding number rule ||| bool	count=1
function_name	clears all ||| clear	count=2
function_name	returns the [function_name] of ||| [function_name]	count=1
function_name	[function_name_1] a config ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] given user ||| [arg_pair_2] [function_name_1]	count=2
function_name	phar::startbuffering() method can ||| buffering	count=1
arg_pair	object ||| mixed $data	count=1
function_name	[function_name_1] hostname ||| [function_name_1] [function_name_2]	count=2
arg_pair	of the ||| int $options	count=1
arg_pair	specified class ||| mixed $class	count=1
function_name	api version ||| version	count=1
function_name	scaling for ||| scaling	count=1
function_name	country and [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	open stream ||| stream	count=1
function_name	to the specified field ||| cubrid field	count=1
function_name	removes a ||| remove	count=2
arg_pair	at runtime ||| callable $failure_callback	count=1
arg_pair	to a ||| string $password	count=1
function_name	[function_name_1] types ||| [function_name_2] [function_name_1]	count=1
function_name	pcos path [function_name] ||| pdf pcos [function_name]	count=2
function_name	to the ||| add buffer	count=1
function_name	clears all resources ||| clear	count=1
function_name	character [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	a file that cannot ||| metadata	count=1
function_name	id3v1 ||| id3v1	count=1
function_name	[function_name_1] given xml ||| [function_name_2] [function_name_1]	count=12
function_name	style of [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	unserializes ||| mongo db\bson\to php	count=1
function_name	creates an xml ||| xml	count=1
arg_pair	[arg_pair_1] mssql_connect() ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	expand filter [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the text ||| get text	count=4
function_name	receiving the ancillary data ||| socket cmsg space	count=1
function_name	set the ||| fbsql database	count=1
namespace	special operators by the ||| sphinxclient	count=1
arg_pair	a row as a ||| resource $result_id	count=1
function_name	not yet been closed ||| ibase	count=1
function_name	frees the memory ||| free	count=2
function_name	the handling [function_name] in filesystemiterator::__construct() ||| get [function_name]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $host [arg_pair_2]	count=2
arg_pair	data ||| resource $stmt	count=1
function_name	[function_name_1] sizes ||| [function_name_2] [function_name_1]	count=5
function_name	key sizes [function_name_2] ||| get [function_name_2] [function_name_1]	count=1
function_name	string of ||| bzerrstr	count=1
function_name	reads up ||| eio read	count=1
arg_pair	the specified class ||| mixed $class	count=1
namespace	name of the route ||| yaf_router	count=1
arg_pair	expression match for a ||| string $pattern	count=1
function_name	be dismax query parser ||| use dis max query parser	count=1
arg_pair	a result set ||| resource $stmt	count=4
arg_pair	as a magnitude ||| string $complement string $magnitude	count=1
function	property value [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	new [function_name_2] ||| [function_name_2] [function_name_1]	count=24
function_name	internal information where ||| internal info	count=6
arg_pair	str ||| string $delimiters	count=1
function_name	headers for all ||| imap headers	count=1
function_name	current page ||| pdf	count=1
function_name	file on disk ||| file	count=3
function_name	conjunction [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	of characters using a ||| int $width	count=1
function_name	saves its contents ||| export	count=1
function_name	stream or ||| stream socket client	count=1
return	only used by php ||| mongoid	count=1
namespace	searchd host name ||| sphinxclient	count=1
namespace	[namespace] socket_write() ||| [namespace]	count=1
function_name	image rendering ||| image rendering	count=2
function	divides a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	a ||| string $pathname int $mode	count=1
arg_pair	the ||| int $flags	count=1
function_name	log levels are currently ||| level	count=1
arg_pair	width ||| float $width	count=2
arg_pair	the given ||| resource $shm_identifier	count=1
function_name	for the ||| mysqli stmt	count=1
function_name	image border [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	any data from the ||| string $data int $max_bytes	count=1
arg_pair	some pdflib ||| resource $p string $key	count=1
function_name	distribution ||| stats rand gen	count=1
arg_pair	indexed by ||| resource $stmt int $row_number	count=1
function_name	returns the width ||| get	count=1
function_name	for an existing class ||| class	count=1
arg_pair	a query ||| resource $link string $query	count=1
function_name	[function_name] inside ||| [function_name] rect	count=1
arg_pair	maxlength ||| resource $handle int $maxlength	count=1
function_name	dom class to be ||| class	count=1
function_name	used by ||| state	count=1
function_name	by ||| set state	count=4
function_name	ability ||| oci	count=1
namespace	checks whether the current ||| limititerator	count=1
arg_pair	dn ||| string $dn	count=4
function_name	to facet ||| facet	count=2
function_name	returns numeric ||| get	count=1
arg_pair	a result ||| resource $fdf_document string $frame_name	count=1
function_name	object or adds ||| add	count=1
function_name	iis is ||| iis	count=1
namespace	returns the target of ||| function	count=1
function_name	valid ||| valid	count=3
function_name	starts a ||| begin	count=2
function_name	ssl_cipher_description ssl api function ||| ssl	count=1
function_name	returns the sunset time ||| date sunset	count=1
arg_pair	filename from the ||| resource $image string $filename	count=1
function_name	or redefines ||| ncurses init	count=1
arg_pair	of haystack starting ||| string $haystack	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] processing instruction [arg_pair_2]	count=2
function_name	cache ||| wincache	count=7
function_name	active ||| fbsql select	count=1
function_name	internally ||| set	count=1
function_name	training patterns in ||| fann	count=1
function_name	row from ||| fetch	count=1
return	and valid to dates ||| array	count=1
arg_pair	the desired dimensions ||| int $filter float $blur	count=1
function_name	pdf [function_name_2] ||| [function_name_1] place pdi [function_name_2]	count=4
function_name	lock on buffer ||| lock	count=1
function_name	steepnesses in the ||| steepnesses count	count=1
function_name	a disk-based [function_name] ||| [function_name]	count=1
function_name	active [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	virtual [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	color pair ||| int $fg	count=1
function_name	returns information about ||| info	count=1
function_name	decay shift ||| decay shift	count=2
arg_pair	transform str1 into ||| string $str1	count=1
function_name	neural network from ||| fann create from	count=1
function_name	sql type ||| type	count=1
namespace	custom plugin implement ||| yaf_plugin_abstract	count=1
function_name	exports ||| gnupg export	count=1
function_name	get the name ||| get	count=1
function_name	step-size is a positive ||| fann set rprop delta	count=1
function_name	class to be used ||| node class	count=1
function_name	the cascade candidate change ||| cascade candidate change	count=1
arg_pair	a message from ||| string $target array $properties	count=1
function_name	by generating a ||| openssl sign	count=1
function_name	log for each query ||| log	count=1
function_name	sort ||| sort	count=5
namespace	splfileinfo object ||| splfileinfo	count=1
function_name	in the training ||| input train	count=1
arg_pair	with handle and ||| resource $handle string $format	count=1
function_name	receiving numeric ||| udm errno	count=1
arg_pair	already exist ||| array $keys array $options	count=1
function_name	a list ||| enchant broker list	count=1
arg_pair	zlib data ||| string $data	count=1
function_name	is used in conjunction ||| stop	count=1
function_name	process title ||| process title	count=2
function_name	method any file or ||| file	count=1
function_name	current language ||| language	count=1
arg_pair	pointed by given oid ||| string $oid	count=1
arg_pair	file from [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	the rrd database ||| rrd	count=1
namespace	boost ||| solrinputdocument	count=1
arg_pair	haystack string ||| string $haystack	count=1
arg_pair	level ||| int $level	count=1
function_name	sends ||| msg send	count=1
function_name	get the vertical descent ||| descent	count=1
arg_pair	the messages ||| resource $imap_stream	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2] index int $index int	count=12
function_name	icu error [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	function is only used ||| mongoid	count=1
function_name	the connection ||| fbsql	count=1
function_name	conjunction [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	highlighting for [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	minimum ||| min	count=14
function_name	current database profiling level ||| profiling level	count=2
function	database on [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	in ||| get	count=1
function_name	exception ||| set exception	count=1
function_name	base type ||| field type	count=1
function_name	the minimum number ||| get cascade min cand	count=1
function_name	as thumbnail for the ||| thumbnail	count=1
arg_pair	of the output connections ||| int $max_neurons int $neurons_between_reports	count=1
arg_pair	old parameter matches ||| int $old	count=1
arg_pair	flags argument ||| string $path int $flags	count=1
function_name	tables ||| db2 tables	count=1
function_name	elements with a given ||| elements by	count=1
function_name	returns a ||| get children	count=1
arg_pair	word ||| string $word	count=1
function_name	logo using the ||| logo guid	count=1
function_name	query ||| query	count=31
function	[function_name_1] a resource ||| [arg_pair_2] [function_name_1]	count=1
namespace	32-bit number with ||| mongoint32	count=1
function_name	the ||| maxdb	count=1
function_name	mysqlnd_ms_xa_begin() ||| mysqlnd ms xa	count=1
function_name	attribute [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	[arg_pair_1] value ||| [arg_pair_1] [arg_pair_2]	count=6
function_name	turn this output ||| flush	count=1
function_name	field pf3 parameter ||| field	count=2
function_name	first attribute in the ||| ldap first attribute	count=1
return	determine whether the end ||| bool	count=1
namespace	cannot be ||| pharfileinfo	count=1
function_name	inserts a ||| px insert	count=1
function	[function_name_1] metric ||| [arg_pair_2] [function_name_1]	count=3
function	attribute [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	a number of snmp ||| string $host string $community	count=2
arg_pair	a list of foreign ||| string $fk_owner	count=1
function_name	exists content ||| get body	count=1
function_name	polaroid picture ||| polaroid	count=1
function_name	com ||| com	count=2
function_name	vector dot product ||| mult	count=1
return	[return] you are ||| [return]	count=6
function_name	existing cubrid [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	cascade output ||| cascade output	count=4
function_name	faceting ||| facet	count=1
arg_pair	fetches the next row ||| array $ctor_args	count=1
function_name	file_get_contents() except ||| contents	count=1
function_name	bytecodes and ||| bcompiler	count=1
function_name	translates the origin ||| translate	count=1
arg_pair	a ||| resource $p float $g	count=1
function_name	iteration ends ||| end iteration	count=2
arg_pair	and ||| resource $image int $red	count=1
return	to get the ||| bool	count=1
function_name	execution by ingres_execute() ||| ingres prepare	count=1
function_name	and add the ||| add	count=1
function_name	string padded on the ||| str pad	count=1
arg_pair	a large object and ||| resource $connection mixed $object_id	count=1
function_name	the file named by ||| file	count=2
function_name	current stroking color ||| get cmykstroke	count=1
namespace	the statistics of the ||| function	count=1
function_name	should not ||| construct	count=1
function_name	width of the ||| get text width	count=2
return	to the ||| mixed	count=1
function_name	ibase_blob_close() ||| cancel	count=1
arg_pair	oliver isbn 0-131-00413-1 ||| string $first string $second	count=1
namespace	function except ||| function	count=1
function_name	activation steepnesses in the ||| activation steepnesses	count=1
function_name	attributes ||| ldap	count=1
function_name	previous frontbase operation ||| fbsql	count=1
arg_pair	the opposite of ||| string $string int $flags	count=1
arg_pair	data using a ||| string $data	count=1
namespace	in either iso-8859-1 or ||| function	count=1
function_name	creates a large object ||| create	count=1
arg_pair	with a unique filename ||| string $dir string $prefix	count=1
function_name	next tuple for ||| dbplus next	count=1
function_name	default domain ||| default domain	count=2
namespace	allows the processing of ||| function	count=1
function_name	returns the image data ||| get	count=1
return	this collection and deletes ||| array	count=1
namespace	watcher ||| evwatcher	count=2
function_name	in the ||| layers	count=1
function_name	reply that uses transfer-encoding ||| send reply	count=1
function_name	registered __autoload() functions ||| spl autoload functions	count=2
function	false when [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	[arg_pair] given ||| [arg_pair]	count=3
function_name	a stride value ||| stride	count=1
function_name	using a non-empty tags ||| broker	count=1
function_name	the name of the ||| get current	count=1
function_name	an url ||| with url	count=1
function_name	service ||| gupnp service proxy	count=1
function_name	to request ||| request	count=1
function_name	the ||| get key size	count=1
function_name	get the activation function ||| fann get activation function	count=1
return	the route which is ||| string	count=1
function_name	removes objects ||| remove	count=1
function_name	retrieve current controller object ||| controller	count=1
function_name	the last tuple for ||| dbplus last	count=1
function_name	a stride value that ||| stride	count=1
arg_pair	records specified by assoc_array ||| array $assoc_array int $options	count=1
return	which must be ||| bool	count=1
arg_pair	code to ||| string $encoding bool $is_hex	count=1
function_name	data or [function_name] object pointed ||| get [function_name]	count=1
function_name	schema information from ||| schema	count=2
arg_pair	odbc_prepare() ||| array $parameters_array	count=1
namespace	searchd host ||| sphinxclient	count=1
function_name	in the train ||| input train data	count=1
arg_pair	from ann ||| resource $ann	count=1
function	frame [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	given color pair ||| int $pair	count=1
function_name	the shared secret ||| secret	count=1
function_name	printable ||| printable decode	count=2
function_name	[function_name_1] stored ||| [function_name_1] [function_name_2]	count=3
arg_pair	of ||| string $string	count=1
namespace	of the characters in ||| function	count=1
function_name	bytecodes and initiates ||| bcompiler write	count=1
function_name	repository with ||| svn	count=1
function_name	column names ||| cubrid column names	count=2
arg_pair	string input for fields ||| string $input string $delimiter	count=1
function_name	for the last absent ||| last empty	count=1
namespace	imagick image ||| imagick	count=1
function_name	only used ||| set	count=1
function_name	schema ||| schema	count=6
function_name	[function_name_1] connection ||| [function_name_2] [function_name_1]	count=2
namespace	the end of ||| splfileobject	count=1
namespace	2548 however this function ||| function	count=1
function_name	types ||| types	count=1
arg_pair	unescaped_string ||| resource $link_identifier	count=1
arg_pair	equivalent to memcached::add() except ||| int $expiration	count=1
function_name	sets boost [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	append a content ||| append body	count=1
arg_pair	object_id ||| string $object_id string $type	count=2
function	[function_name_1] given object ||| [arg_pair_2] [function_name_1]	count=5
function_name	of a color ||| get color	count=1
function_name	semaphore with the given ||| sem	count=1
return	through to the ||| int	count=1
namespace	and returns the ||| function	count=2
function_name	[function_name] a web ||| [function_name] launchlink	count=1
return	a string that describes ||| string	count=1
return	of the last thrown ||| int	count=1
function_name	match ||| match	count=4
arg_pair	a new ||| int $sec	count=1
function_name	into the file named ||| file	count=2
function_name	[function_name_1] weight ||| [function_name_2] [function_name_1]	count=1
arg_pair	file and frees its ||| string $filename	count=1
namespace	code point has ||| intlchar	count=1
function_name	timeout value ||| timeout	count=2
namespace	used with ||| function	count=1
arg_pair	of array1 with values ||| array $array1	count=1
function_name	timestamp [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	the transparency [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
return	to auto-commit ||| bool	count=1
return	using the ||| int	count=1
return	data ||| bool	count=1
function_name	number [function_name] ||| [function_name] client	count=1
return	[return] given ||| [return]	count=4
function_name	[function_name] an ||| get [function_name] index	count=2
function_name	delete ||| delete	count=3
function_name	[function_name_1] an image ||| [function_name_2] [function_name_1]	count=5
function	sets anchor [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	specific attribute to ||| bool	count=1
function_name	current ssl ||| ssl	count=1
function_name	the route ||| route	count=1
function_name	statistics ||| stats	count=1
arg_pair	of an entry ||| string $name	count=1
function_name	property for a code ||| property	count=1
arg_pair	quality of service ||| int $service_level_option	count=1
function_name	color ||| get color	count=1
function_name	one and stores the ||| xdiff file	count=1
function_name	[function_name_1] rate is ||| [function_name_1] [function_name_2]	count=2
function	comment [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	used in subsequent transformations ||| string $name	count=1
function_name	action with ||| action get	count=1
function_name	[function_name_1] a id3v2 ||| [function_name_2] [function_name_1]	count=1
function_name	retrieval of ||| yaz	count=1
namespace	the current ||| harupage	count=2
arg_pair	opposite of htmlentities() in ||| string $string int $flags	count=1
function_name	returns true ||| writable	count=1
function_name	[function_name_1] mode for ||| [function_name_1] [function_name_2]	count=3
function	renames [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	coordinates ||| imagestring	count=1
function_name	upper [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	this method returns true ||| writable	count=1
return	and valid to ||| array	count=1
function_name	rotation of the ||| ps rotate	count=1
function_name	cubrid [function_name] ||| lob [function_name]	count=2
arg_pair	object ||| object $object string $class_name	count=1
arg_pair	a user ||| string $class string $callback	count=1
function_name	name used ||| fbsql	count=1
arg_pair	or the closest ||| int $green int $blue	count=1
function	textflow [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	current font ||| get current font	count=2
function_name	if curlopt_returntransfer is ||| multi getcontent	count=1
namespace	[namespace] same ||| [namespace]	count=2
arg_pair	length - 1 ||| resource $zp int $length	count=1
function_name	pdflib ||| pdf	count=1
function_name	blob for reading and ||| blob echo	count=1
function_name	connection ||| connect	count=2
arg_pair	sends a unique ||| string $query	count=1
arg_pair	memcached::getmulti() except that the ||| string $cas_tokens int $flags	count=1
function_name	[function_name_1] group results ||| [function_name_1] [function_name_2]	count=1
function_name	type corresponding to ||| geoip id by name	count=1
arg_pair	of all the mailboxes ||| resource $imap_stream string $ref	count=1
arg_pair	word is correctly spelled ||| string $word	count=1
function_name	other content item ||| end item	count=1
function_name	the style of ||| style	count=1
function_name	method stores an existing ||| file	count=3
arg_pair	port for ||| int $port	count=1
namespace	way of ||| mongodb	count=1
function	[function_name_1] mode on ||| [function_name_1] [arg_pair_2]	count=2
function_name	the normal date parsers ||| create from date	count=1
function_name	mysqli [function_name] ||| [function_name]	count=3
return	maintaining key [return] data correlations ||| [return]	count=2
arg_pair	bbcode_container created by ||| resource $bbcode_container	count=1
namespace	hash and ||| quickhashintstringhash	count=1
namespace	gets the ||| recursivetreeiterator	count=1
function_name	busy handler that will ||| busy	count=1
function_name	specified field is in ||| msql field	count=1
function_name	threshold factor ||| threshold factor	count=4
function_name	expression [function_name] ||| mb ereg [function_name]	count=1
function_name	returns minimum [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	key [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	the learning ||| learning	count=3
function_name	dictionary ||| dict	count=2
namespace	used in subsequent ||| function	count=1
return	used with the connection ||| string	count=1
function_name	determines the minimum number ||| get cascade min cand	count=1
function_name	without waiting for the ||| pg send	count=1
function_name	data from [function_name_2] ||| [function_name_1] copy to [function_name_2]	count=2
namespace	move all ||| eventbuffer	count=1
function_name	an html document ||| htmlfile	count=1
arg_pair	snmp object ||| string $community	count=4
function_name	arc cosine ||| acos	count=1
namespace	prepared statement directly on ||| pdostatement	count=1
namespace	number of [namespace] rows that ||| [namespace]	count=1
arg_pair	a file ||| string $filename	count=4
arg_pair	the specified [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	is sent to on ||| string	count=1
arg_pair	a given ||| resource $result_id	count=1
arg_pair	hash implements ||| string $hash	count=1
arg_pair	quality of ||| int $service_level_option mixed $option_value	count=1
function_name	parent directorys ||| dirname	count=1
function_name	if [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	queries ||| queries	count=4
function_name	this ||| set state	count=2
function_name	a valid socket resource ||| socket connect	count=1
namespace	objects storage for the ||| threaded	count=1
namespace	statement directly on ||| pdostatement	count=1
function_name	blob that has ||| ibase blob	count=2
function_name	database file propertyvaluealiases ||| enum	count=1
function_name	sets the current line ||| pdf setlinewidth	count=1
function_name	new initial ||| ps translate	count=1
function_name	get error message from ||| get error message	count=1
function_name	unsubscribe from ||| unsubscribe	count=1
return	does not exist ||| mixed	count=1
namespace	phar archive using ||| pharfileinfo	count=1
function_name	[function_name_1] stores the ||| [function_name_2] [function_name_1]	count=4
namespace	the ||| oauth	count=1
arg_pair	mailbox to new mailbox ||| resource $imap_stream	count=1
return	it shouldnt ||| mongoid	count=1
function_name	array consisting of ||| preg grep	count=1
function_name	the stream or ||| stream	count=1
arg_pair	[arg_pair] more ||| [arg_pair]	count=1
function_name	request a dictionary for ||| request dict	count=1
function_name	current gravity value ||| gravity	count=1
function_name	to [function_name] ||| cubrid [function_name] export	count=1
arg_pair	the word ||| resource $dict string $word	count=2
function_name	the organization that ||| geoip org by	count=1
namespace	resource suitable for maxdb_options() ||| function	count=1
function_name	quota ||| quota	count=1
arg_pair	the contents of ||| int $doc	count=1
function_name	tell the cursor position ||| tell64	count=1
arg_pair	row as a pseudo-object ||| int $fetch_flag	count=1
arg_pair	a table [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	information stored of ||| int $version	count=1
function_name	the learning rate ||| get learning rate	count=2
arg_pair	expression and returns a ||| string $expression domnode $contextnode	count=1
arg_pair	word is correctly ||| resource $dict string $word	count=1
arg_pair	the ||| resource $identifier int $errormode	count=1
namespace	retrieve ||| yaf_action_abstract	count=1
function_name	will return the name ||| name	count=1
namespace	restarts the periodic watcher ||| evperiodic	count=1
namespace	buffer ||| eventbuffer	count=4
function_name	a digest hash ||| digest	count=1
function_name	proc_open() that it ||| proc	count=1
return	a prepared statement ||| sqlite3result	count=1
function_name	space character according ||| space char	count=1
function_name	[function_name_1] a id3v2 ||| [function_name_1] [function_name_2]	count=1
function_name	is a hidden ||| hidden	count=1
function_name	internet ||| gethostbyaddr	count=1
arg_pair	multi-value fields if a ||| string $fieldvalue	count=1
arg_pair	table or a ||| string $fk_owner	count=1
arg_pair	the size of ||| int $width	count=1
function_name	the current resources soft ||| posix getrlimit	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] is null	count=2
arg_pair	transparency [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	an email ||| mail	count=1
function_name	kadm5 ||| kadm5 init with	count=1
function_name	encoding ||| mb encoding	count=1
arg_pair	slant a ||| float $slant	count=1
function_name	maximum out epochs ||| cascade max out epochs	count=1
function_name	add required oauth ||| add required	count=2
namespace	a set ||| gearmanclient	count=1
function_name	the list of all ||| list	count=2
namespace	retrieves ||| solrdocument	count=1
function_name	the server host name ||| get host	count=1
arg_pair	points start inclusive limit ||| mixed $start mixed $limit	count=1
function_name	[function_name_1] given record ||| [function_name_2] [function_name_1]	count=1
function_name	maximum supported key ||| get key	count=1
function_name	expand component ||| expand	count=1
function_name	takes a large object ||| lo export	count=1
function_name	number of activation steepnesses ||| activation steepnesses count	count=1
function_name	[function_name] the ||| [function_name] stream encode	count=1
function_name	a request token secret ||| request token	count=1
arg_pair	descriptor ||| mixed $fd2	count=1
function_name	a variable in user ||| ucache set	count=1
arg_pair	additional parameters seconds and ||| int $seconds	count=1
arg_pair	data format ||| int $level	count=1
function_name	[function_name_1] threshold factor ||| [function_name_2] [function_name_1]	count=7
function_name	file descriptor and another ||| eio sendfile	count=1
namespace	function is only ||| mongoid	count=1
function_name	[function_name_1] step ||| [function_name_1] [function_name_2]	count=9
arg_pair	of [arg_pair] ||| [arg_pair]	count=3
function_name	all methods accepting ||| fd	count=1
namespace	[namespace] is writable ||| [namespace]	count=1
arg_pair	of the specified option ||| resource $link_identifier int $option	count=2
function_name	mysql server ||| mysql	count=1
function_name	for an offset ||| offset	count=1
return	a new ||| mixed	count=1
function_name	[function_name_1] cookie ||| [function_name_2] [function_name_1]	count=2
return	to sqlsrv_rollback() or ||| bool	count=1
namespace	the evidle watcher object ||| evidle	count=1
function_name	returns the lower ||| get	count=1
arg_pair	a b ||| gmp $a gmp $b	count=1
function_name	new page ||| page	count=1
return	field= > value ||| mixed	count=1
arg_pair	namespaceuri and ||| string $namespaceuri string $qualifiedname	count=1
return	of time cursors by ||| mongocursor	count=1
arg_pair	the input string ||| string $input	count=1
function_name	result identifier ||| object	count=1
function	file or [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	assign a priority ||| buffer priority set	count=1
arg_pair	option ||| int $option	count=1
function_name	retrieves apcu ||| apcu	count=1
function_name	descale input and output ||| descale train	count=1
function_name	with the ||| database	count=1
function	from [arg_pair_2] ||| [function_name_1] cache info [arg_pair_2]	count=3
function_name	into the file named ||| to file	count=2
namespace	syncmutex object ||| syncmutex	count=1
function	the type [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=2
arg_pair	whenever a change notification ||| resource $proxy string $value	count=1
function_name	specified distortion ||| distortion	count=1
function_name	currently stored ||| apc cas	count=1
function_name	minimum ||| facet enum cache min default	count=1
arg_pair	specified by hostname ||| string $hostname int $port	count=1
namespace	as ||| function	count=1
function	factor used [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	a list of ||| string $fk_owner	count=1
function_name	opcode ||| ocache fileinfo	count=2
function_name	maximum word [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	row ||| fbsql fetch	count=1
namespace	of the route which ||| yaf_router	count=1
function_name	height as ||| image geometry	count=1
function_name	the style of the ||| style	count=1
function_name	goes until the ||| strrchr	count=1
return	similar [return] ||| [return]	count=3
function_name	a convolution filter ||| edgeimage	count=1
function_name	rectangle given two coordinates ||| rectangle	count=1
function	specified distortion [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	to strcasecmp() with the ||| strncasecmp	count=1
namespace	applying the [namespace] ||| [namespace]	count=6
function_name	timeout can be ||| timeout	count=2
function_name	high priority ||| high	count=2
function_name	or stub written ||| stub	count=1
namespace	[namespace] escape the ||| [namespace]	count=2
function_name	retrieval ||| yaz	count=2
function_name	get error code from ||| get error code	count=1
namespace	of current ||| eventbuffer	count=1
function_name	[function_name_1] rate ||| [function_name_2] [function_name_1]	count=5
arg_pair	sends an error message ||| string $message int $message_type	count=1
function_name	reply that uses transfer-encoding ||| reply start	count=1
function_name	subtracts ||| bcsub	count=1
arg_pair	of ||| mixed $fd	count=1
function_name	into a new train ||| train	count=1
return	the internet host specified ||| string	count=1
arg_pair	string what ||| string $what	count=1
function_name	streams ||| stream select	count=2
function_name	to a replica set ||| get hosts	count=1
namespace	stops ||| evperiodic	count=1
function_name	activation ||| get activation	count=2
function_name	control [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function	blocking or [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	a ||| resource $pdfdoc	count=2
function_name	current flags ||| get flags	count=1
namespace	current entry is ||| rarentry	count=1
function	matched part [arg_pair_2] ||| mb ereg search [function_name_1] [arg_pair_2]	count=2
function_name	socket error number errno ||| last socket errno	count=1
function_name	binds a ||| bind param	count=1
arg_pair	file consists of ||| int $startpos	count=1
function_name	given font ||| imagepsslantfont	count=1
function_name	current table in ||| fbsql table	count=1
arg_pair	tracing ||| string $client_info	count=1
function_name	id3 tag ||| id3 get tag	count=1
function_name	queue manager ||| mqseries conn	count=1
arg_pair	called whenever a ||| string $value	count=1
function_name	dictionary ||| enchant dict	count=1
function_name	should only be ||| metadata	count=1
function_name	[function_name_1] the ||| [function_name_2] text [function_name_1]	count=3
return	send to the client ||| bool	count=1
function_name	current cipher ||| get cipher info	count=1
function_name	element set ||| element	count=1
function_name	[function_name_1] corresponding to ||| [function_name_2] region [function_name_1] by	count=1
namespace	the entry was ||| quickhashinthash	count=1
arg_pair	current request indicating an ||| string $actor string $details	count=1
function_name	icu [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	kadm5 library using the ||| kadm5 init	count=1
function_name	type number ||| number	count=1
function_name	timestamp handler ||| timestamp nonce handler	count=1
namespace	collapse ||| solrcollapsefunction	count=1
arg_pair	not already exist ||| array $options	count=1
function_name	sizes [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	link annotation ||| float $lowerleftx	count=1
function_name	encoding the content read ||| encoding	count=1
function_name	terms ||| set terms sort	count=1
function_name	single line of ||| fit textline	count=1
return	collection and deletes ||| array	count=1
arg_pair	operations ||| mongocollection $collection array $write_options	count=2
function_name	of the array iterator ||| iterator class	count=1
namespace	or image ||| gmagick	count=1
arg_pair	[arg_pair_1] mssql_connect() ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	name ||| function	count=2
function_name	returned by the given ||| bzerrstr	count=1
namespace	has no more results ||| mongocursorinterface	count=1
function_name	an sqlite ||| sqlite	count=2
rest	[return_1] [function_2] ||| [return_1] pg send [function_2]	count=12
function_name	an ||| fetch array	count=3
arg_pair	the result set ||| resource $result int $type	count=1
function_name	returns the file ||| get	count=1
function_name	font size ||| font size	count=2
arg_pair	the sql statement ||| resource $conn_identifier string $sql	count=1
function_name	or other content item ||| pdf end item	count=1
function_name	prepare next [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	spelling alternatives ||| dict quick	count=1
function_name	[function_name_1] steepnesses in ||| [function_name_1] [function_name_2]	count=4
function_name	by mysqlnd_ms_xa_begin() ||| ms xa	count=1
function_name	all elements with a ||| elements by tag	count=1
function_name	mssql_fetch_array() with [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	paradox object ||| px	count=1
namespace	will ||| function	count=1
namespace	node ||| spldoublylinkedlist	count=1
arg_pair	divides n by d ||| gmp $d	count=1
function_name	pixel that matches color ||| opaque paint	count=1
function_name	obscure check with the ||| crack check	count=1
function_name	of [function_name] ||| set phrase [function_name]	count=1
namespace	http server object ||| eventhttp	count=1
function_name	computes the ||| array udiff	count=1
return	if the ||| bool	count=6
function_name	running ||| running	count=1
namespace	of the route ||| yaf_router	count=1
function_name	the [function_name] the ||| get called [function_name]	count=1
function_name	levels ||| auto level	count=1
arg_pair	as specified by mask ||| resource $relation int $mask	count=1
function_name	current database profiling level ||| set profiling level	count=1
function_name	group access list ||| posix initgroups	count=2
function_name	maximum ||| cascade max cand	count=1
namespace	type of ||| function	count=1
function_name	page to add ||| page	count=1
function_name	fields columns ||| fields	count=1
function_name	this function ||| set state	count=1
arg_pair	to add new columns ||| string $key array $columns	count=1
function_name	find the ||| strrpos	count=1
function_name	error code [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	inclusion in ||| sqlite3	count=1
return	at the ||| bool	count=1
function	layer [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	winding number ||| harupage	count=1
function	[function_name_1] whitespace or ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	between old_data string and ||| string $old_data	count=1
arg_pair	values of array1 with ||| array $array2	count=2
function_name	declared ||| declared	count=1
arg_pair	the value of an ||| string $value string $timeout	count=1
return	to send ||| bool	count=1
return	gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or ||| bool	count=1
function_name	built in __autoload() ||| spl autoload	count=1
arg_pair	str with ||| string $str	count=1
namespace	outline is ||| haruoutline	count=1
function_name	[function_name_1] queries ||| [function_name_1] [function_name_2]	count=4
function_name	returns an object containing ||| object	count=1
function_name	to msql_fetch_array() with ||| msql	count=1
arg_pair	that an exact ||| array $offset	count=1
function_name	[function_name_1] [function_name_2] ||| db2 [function_name_2] [function_name_1]	count=1
function_name	http ||| http	count=1
return	before issuing any ||| bool	count=1
function_name	the raw response ||| response	count=1
function_name	of ||| stream get	count=1
function_name	specified directory ||| zip	count=2
namespace	pointer ||| function	count=1
namespace	data to [namespace] specified buffered ||| [namespace]	count=1
function_name	fetches a row ||| ibase	count=1
function_name	local tag name ||| by tag name	count=2
arg_pair	external ||| string $filename string $alias	count=1
namespace	tokyotyrant ||| tokyotyrant	count=1
function_name	decodes modified utf-7 ||| imap utf7 decode	count=2
function_name	pdf block ||| pdf	count=1
function_name	of mbox names) ||| renamemailbox	count=1
function_name	maximum search query ||| max query	count=3
function_name	allocates or initializes ||| init	count=1
function_name	distribution ||| gen	count=1
namespace	the database ||| function	count=2
function_name	set of tasks ||| run	count=1
function_name	informs the [function_name_1] [function_name_2] of ||| [function_name_1] service [function_name_2] int $status int $checkpoint	count=4
function_name	implement your own filter ||| filter register	count=1
function_name	icu [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	the last value ||| mixed	count=1
arg_pair	0 to the message ||| mixed $message bool $serialize	count=1
namespace	a result set ||| sqlite3stmt	count=1
function_name	number of ||| field count	count=2
arg_pair	specified table or a ||| string $fk_owner	count=1
return	document ||| float	count=1
function_name	child ||| loop	count=1
return	rows of the ||| int	count=1
function_name	a ||| ibase fetch object	count=6
function_name	activation ||| get cascade activation	count=1
function_name	sqlite [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	decimal digit value of ||| int	count=1
function_name	result row into array ||| odbc fetch into	count=1
function_name	an id3 [function_name_2] ||| [function_name_1] remove [function_name_2]	count=1
function_name	vendor specific binary attribute ||| vendor attr	count=1
function_name	and saves its contents ||| export	count=1
arg_pair	returns false ||| string $lib_dir	count=1
return	a given ||| object	count=1
arg_pair	statement which can include ||| string $statement	count=1
function_name	[function_name_1] vector iv ||| [function_name_1] cipher [function_name_2]	count=1
function_name	[function_name_1] slop ||| [function_name_2] [function_name_1]	count=6
arg_pair	in charlist parameter ||| string $charlist	count=1
function_name	default external entity ||| libxml set external entity	count=1
return	order for the ||| float	count=2
function_name	regex ||| set highlight regex	count=1
function_name	chromaticity white point as ||| image white point	count=1
function_name	is an ||| image	count=3
namespace	http request ||| eventhttprequest	count=1
function_name	removes the elements designated ||| splice	count=1
arg_pair	a pseudo-object from a ||| resource $result_id int $fetch_flag	count=1
function_name	image and [function_name] ||| [function_name] image channel distortion	count=1
function_name	the iteration ends when ||| end iteration	count=1
arg_pair	or something ||| mixed $array_or_countable int $mode	count=1
function_name	on ||| str	count=1
function_name	any and turn this ||| flush	count=1
function_name	get the name ||| get current	count=1
function_name	trace [function_name_2] ||| query [function_name_1] [function_name_2]	count=4
function	[function_name_1] text on ||| [arg_pair_2] [function_name_1]	count=1
function_name	you have subscribed ||| lsub	count=1
function_name	ldap ||| ldap connect	count=1
function_name	an [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	characters ||| string $pattern string $string	count=1
arg_pair	of characters using ||| int $width	count=1
function_name	an interface ||| interface	count=1
arg_pair	[arg_pair_1] name variable_name ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	of specified ||| int $width	count=1
function_name	which the ||| get	count=1
function_name	check whether subscription is ||| subscribed	count=1
return	information stored with ||| void	count=1
function_name	to creating a ||| get active object	count=1
function_name	ifx_do() query ||| ifx num	count=1
function_name	creates a ||| create sparse	count=2
function_name	imports [function_name_2] ||| [function_name_1] image [function_name_2]	count=4
function_name	replaces the ||| replace	count=3
function_name	groups ||| groups	count=1
function_name	if ||| mcrypt module is	count=1
function_name	removes one of ||| remove stats field	count=2
function_name	url string ||| connect with url	count=1
function_name	to the [function_name] line ||| [function_name]	count=1
arg_pair	string str from character ||| string $str	count=1
arg_pair	this imagickpixel object ||| imagickpixel $color	count=1
namespace	current ||| arrayiterator	count=1
function_name	a line on ||| line	count=1
arg_pair	a unique filename ||| string $dir	count=1
arg_pair	[arg_pair_1] at offset ||| [arg_pair_1] int $length [arg_pair_2]	count=2
namespace	operators by the ||| sphinxclient	count=1
function_name	as eventbuffer::addbuffer() except that ||| prepend buffer	count=1
function_name	form action for ||| form action	count=1
namespace	[namespace] re-initializes all ||| [namespace]	count=1
namespace	value for ||| solrinputdocument	count=1
arg_pair	as a pseudo-object ||| int $fetch_flag	count=1
function_name	current process ||| posix getpgrp	count=1
function_name	group [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	document ||| ps	count=1
function_name	a request [function_name_2] ||| [function_name_1] [function_name_2]	count=4
namespace	checks if the array ||| splfixedarray	count=1
function_name	to the given packet ||| wddx	count=1
function_name	tidy ||| tidy	count=1
function_name	aggregate ||| create aggregate	count=1
namespace	has ||| mongocursorinterface	count=1
return	provided in ||| bool	count=1
function_name	font stretch to ||| font stretch	count=2
function_name	scm ||| win32 set	count=1
arg_pair	specifies a ||| string $prefix	count=1
function_name	word spacing ||| get word space	count=2
arg_pair	the input ||| string $input	count=1
function_name	apache environment variable ||| apache setenv	count=2
arg_pair	start ||| string $string int $start	count=1
function_name	the host ||| host	count=1
function_name	name [function_name_2] ||| [function_name_2] country [function_name_1]	count=2
function_name	[function_name_1] an index ||| [function_name_2] [function_name_1]	count=1
function_name	step error shift ||| step error shift	count=6
function_name	all ||| all	count=6
function_name	the maximum number ||| cascade max	count=1
function_name	defines the style ||| style	count=1
function	[function_name_1] a ||| [arg_pair_2] [function_name_1]	count=44
function	internal readline [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	by csr and ||| openssl csr export	count=3
function_name	request a ||| request	count=1
function_name	a list ||| list	count=1
arg_pair	the connection ||| resource $link_identifier	count=1
function_name	language described/referred ||| ordering	count=1
arg_pair	to a page in ||| int $page string $dest	count=1
arg_pair	from the given ||| int $quality int $filters	count=1
arg_pair	string what ||| int $start	count=1
return	[return] specified ||| [return]	count=1
function_name	selects ||| select db	count=2
function	[function_name_1] for the ||| [function_name_1] output [arg_pair_2]	count=4
function_name	record ||| record	count=6
function_name	code name ||| name	count=1
arg_pair	object ||| string $filename	count=1
return	[return] headers sent ||| [return]	count=1
function	frame to [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	read data [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	the controllers ||| yaf_controller_abstract	count=1
arg_pair	the given source ||| string $source	count=1
return	value ||| mixed	count=7
function_name	transforms the source node [function_name_1] [function_name_2] applying the ||| [function_name_1] [function_name_2]	count=2
function_name	and stores the result ||| xdiff file	count=1
function_name	[function_name_1] the decrease ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] max [function_name_2]	count=3
function_name	merges the elements of ||| array merge	count=2
function_name	next ingres error ||| ingres next error	count=2
function_name	group cache [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	fd ||| int $pri	count=1
namespace	in front of every ||| function	count=1
function_name	the error ||| bzerrstr	count=1
function_name	[function_name_1] search query ||| [function_name_1] [function_name_2]	count=1
return	paints ||| bool	count=1
function_name	dns resource records associated ||| dns	count=1
function_name	exchange ||| exchange array	count=2
function_name	text interword spacing ||| get text interword spacing	count=1
namespace	group of ||| function	count=2
return	should only be used ||| void	count=1
arg_pair	the supplied hash ||| string $hash	count=1
return	file that ||| void	count=1
arg_pair	the distinguished name ||| array $extraattribs	count=1
function_name	factory ||| load from string	count=4
function_name	sets the max number ||| set	count=1
function_name	returns true if the ||| is	count=1
function_name	priority ||| getpriority	count=1
function_name	consists of the domains ||| rsecindex	count=1
arg_pair	of a ||| string $progid int $code_page	count=1
namespace	solrdocument object ||| solrdocument	count=1
function_name	highlighted ||| highlight file	count=1
function_name	calculates the md5 hash ||| md5	count=1
arg_pair	to ||| bool $hebrew	count=1
function_name	all the nsapi ||| nsapi	count=1
namespace	yar_concurrent_client::loop() ||| yar_concurrent_client	count=1
function	[function_name_1] array1 with ||| [function_name_1] recursive array $array1 [arg_pair_2]	count=1
arg_pair	specifies a string ||| string $prefix	count=1
function_name	document frequency used for ||| frequency	count=1
function_name	be used ||| set	count=1
function	constructs a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	specific string attribute to ||| bool	count=1
namespace	returned documents should begin ||| solrquery	count=1
function_name	result ||| ibase fetch	count=1
function_name	read lock ||| readlock	count=1
function_name	active event [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	radius requests the library ||| radius	count=1
function_name	assign a priority ||| priority	count=3
arg_pair	[arg_pair_1] to ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	pixel that matches color ||| opaque paint image	count=1
function_name	postgresql database and ||| pg	count=1
arg_pair	the given set type ||| resource $conn_identifier string $oid	count=1
arg_pair	value ||| mixed $bordercolor	count=3
function_name	calls ||| call	count=1
return	gets ||| string	count=1
namespace	active configuration setting of ||| function	count=1
function_name	get a query ||| query	count=1
arg_pair	a given str ||| string $allowable_tags	count=1
function_name	for the specified ||| check	count=1
namespace	this function tries to ||| function	count=1
function_name	a mysqlnd connection handle ||| uh convert to mysqlnd	count=1
arg_pair	b where ||| gmp $b	count=1
function	[function_name_1] a global ||| [arg_pair_2] [function_name_1]	count=1
function	class [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	image pair ||| image	count=1
arg_pair	that an exact match ||| array $offset	count=1
namespace	[namespace] permanently ||| [namespace]	count=3
function_name	elements ||| elements	count=1
function_name	blob length and ||| ibase blob	count=1
function_name	stream wrapper ||| stream wrapper	count=1
arg_pair	on a server ||| string $namespace mongodb\driver\query $query	count=1
function_name	and [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function	[function_name_1] a server ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	specified flag to the ||| int $options	count=1
function_name	gets the current column ||| get current column	count=1
return	bound to a ||| bool	count=1
function_name	called during the processing ||| progress monitor	count=1
function_name	query multiple queries ||| query	count=2
return	unicode value to ||| bool	count=1
function_name	previous tuple for ||| dbplus prev	count=1
function_name	usually preferred ||| prev error	count=1
function_name	deletes a ||| pdf delete pvf	count=1
function_name	file pointer ||| bzerrstr	count=1
return	vector ||| array	count=3
namespace	gearmanclient::addtask() ||| gearmanclient	count=1
arg_pair	gets and sorts [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	verifies that ||| openssl verify	count=1
function_name	information stored ||| metadata	count=1
arg_pair	converts unicode domain ||| int $options	count=1
function	[function_name_1] returns false ||| [arg_pair_2] [function_name_1]	count=12
function_name	vendor specific attribute ||| vendor	count=1
function_name	decoded quoted printable ||| quoted printable	count=1
arg_pair	creates a ||| resource $imap_stream	count=1
function_name	event that the connection ||| event	count=1
function_name	configuration files ||| files	count=1
arg_pair	hyperlink at the given ||| resource $psdoc	count=2
function_name	query ||| escape query chars	count=2
function_name	[function_name] and calls ||| bcompiler parse [function_name]	count=2
arg_pair	of the ||| int $level	count=1
namespace	yaf ||| yaf_application	count=1
function_name	returns internal [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	steepness of the activation ||| activation	count=1
function_name	memcached::prepend() except that ||| prepend by key	count=1
function_name	to mssql_fetch_array() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	either a string holding ||| session register	count=1
function_name	number of activation steepnesses ||| cascade activation steepnesses	count=1
namespace	returns a result set ||| sqlite3stmt	count=1
function_name	digest ||| openssl digest	count=1
arg_pair	data from the buffer ||| string $data int $max_bytes	count=1
return	and as a ||| array	count=1
function_name	the current stroking color ||| get gray stroke	count=1
function_name	external attributes ||| set external attributes	count=3
function_name	adds a new ||| begin	count=1
function_name	[function_name_1] record into ||| [function_name_2] [function_name_1]	count=1
function_name	outputs blocks ||| block	count=2
function_name	the output ||| output	count=1
return	fetches ||| object	count=1
function_name	that refer to ||| odbc foreignkeys	count=1
arg_pair	and returns a resource ||| string $encoding string $separator	count=1
arg_pair	function sets sorting criteria ||| string $criteria	count=1
function_name	a stride value that ||| stride for width	count=1
function_name	cascade [function_name_2] ||| [function_name_1] [function_name_2]	count=9
arg_pair	is posted ||| string $event_name1 string $event_name2	count=1
function_name	this is not for ||| disable	count=1
function_name	the end of ||| add buffer	count=1
function_name	method exists in ||| method exists	count=2
return	location of the appropriate ||| int	count=1
function_name	rendering intent ||| rendering intent	count=4
function_name	passed with an url ||| connect with url	count=1
function_name	on [function_name] filesystem ||| [function_name] sftp lstat	count=1
arg_pair	of the [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
arg_pair	destination specified by remote_socket ||| string $remote_socket	count=1
function_name	given property [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	event resource ||| event	count=1
function_name	database on ||| db	count=2
function_name	domain of the ||| domain	count=1
arg_pair	named column ||| resource $stmt mixed $column	count=1
function_name	lint [function_name] on ||| [function_name] syntax	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=182
function_name	[function_name_1] of ||| [function_name_2] [function_name_1]	count=16
function_name	fills [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	sql statement directly ||| string $statement	count=1
function_name	search query [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	[namespace] specified ||| [namespace]	count=1
function_name	[function_name_1] blur ||| [function_name_2] [function_name_1]	count=2
function_name	less ||| prev	count=2
function_name	which the [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	the current iterator entry ||| bool	count=1
arg_pair	creates a directory on ||| string $dirname	count=1
function	property for [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	the total ||| get total	count=2
arg_pair	the closest possible alternative ||| int $green	count=1
namespace	this is not ||| oauth	count=1
function_name	fetches ||| oci fetch all	count=2
function_name	neuron ||| from neuron	count=1
return	maxdb_options() and maxdb_real_connect() ||| resource	count=1
arg_pair	a bson document i ||| string $bson	count=1
arg_pair	changes the transparency ||| float $alpha float $fuzz	count=1
return	how to composite ||| bool	count=1
arg_pair	variable in ||| mixed $var	count=1
function_name	classes ||| classes	count=1
function_name	ssl api function ||| ssl get	count=1
function_name	host specified ||| gethostbyaddr	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] array [arg_pair_2]	count=3
return	is ||| string	count=1
return	of the internet ||| string	count=1
function_name	read the value of ||| snmp2 get	count=1
arg_pair	a bson document ||| string $bson	count=1
function_name	blue ||| blue	count=1
function_name	set [function_name_2] ||| [function_name_1] start namespace decl [function_name_2]	count=3
function_name	exceptions ||| exceptions	count=1
arg_pair	database name ||| resource $link_identifier string $database	count=1
function_name	the permissions ||| ftp chmod	count=1
function_name	[function_name_1] service ||| [function_name_1] [function_name_2]	count=1
arg_pair	associate ||| object $object	count=1
arg_pair	translates filename into the ||| string $filename	count=1
function_name	[function_name_1] a name ||| [function_name_1] [function_name_2]	count=1
function_name	get error message ||| get error message	count=3
function_name	of the parent classes ||| parents	count=1
function_name	a convolution filter of ||| edgeimage	count=1
function_name	[function_name_1] region ||| [function_name_2] [function_name_1]	count=2
function_name	a given result ||| ibase	count=1
function_name	[function_name] of ||| win32 set service [function_name]	count=3
namespace	instance of class ||| domdocument	count=3
return	in a file that ||| void	count=1
arg_pair	an existing ||| resource $pdfdoc int $textflow	count=1
function_name	the end of ||| add	count=1
function_name	action ||| action get	count=2
function_name	sybase_fetch_assoc() with [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	challenge using ||| resource $privkey string $challenge	count=1
function	finishes a ||| ext resource $pdfdoc	count=1
return	point is a base ||| bool	count=1
function_name	internally it shouldnt ||| set	count=1
function_name	register a plugin ||| register plugin	count=3
function_name	an webp version ||| imagewebp	count=1
function_name	custom encoding ||| pdf encoding set	count=1
function_name	[function_name_1] filter queries ||| [function_name_2] [function_name_1]	count=1
function_name	sets ||| stream set	count=1
arg_pair	string before it is ||| resource $link string $source_string	count=1
arg_pair	apply ||| resource $destfp	count=1
function_name	fit the ||| fit v	count=1
function_name	glo ||| glo	count=1
function_name	returns an offset into ||| get facet offset	count=1
function_name	odbc_exec() ||| odbc fetch	count=1
namespace	this method checks ||| mongocursorinterface	count=1
namespace	not [namespace] is currently ||| [namespace]	count=1
function_name	current byte ||| current byte	count=2
arg_pair	microsoft sql server database ||| array $connectioninfo	count=1
return	method checks whether ||| bool	count=1
function_name	similar to creating a ||| get active object	count=1
function_name	files into one and ||| xdiff	count=1
function_name	type 3 font definition ||| pdf end font	count=1
function_name	maximum number ||| limit	count=1
return	used with ||| string	count=1
function_name	term ||| terms lower bound	count=2
function_name	the namespace uri ||| lookup namespace uri	count=1
namespace	to an splobjectstorage ||| splobjectstorage	count=1
function_name	phrase fields pf2 and ||| phrase fields	count=1
arg_pair	and ||| resource $image	count=1
function_name	stroking color [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	move ||| add buffer	count=2
function_name	constants currently [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	describe each color component ||| component	count=1
return	a boolean indicating ||| bool	count=2
function_name	gets the [function_name] for a ||| job [function_name]	count=1
function_name	trigram [function_name_2] ||| [function_name_1] [function_name_2]	count=12
function_name	non-empty tags ||| enchant broker	count=1
return	row as ||| object	count=1
arg_pair	in the values array ||| array $values	count=1
arg_pair	the [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
return	for use with ||| resource	count=1
function_name	an empty string if ||| string	count=1
function_name	executes a prepared statement ||| execute	count=1
function_name	stores ||| export to file	count=1
function_name	available for reading ||| sqlsrv	count=1
namespace	function call ||| function	count=5
arg_pair	a variable can be ||| mixed $var	count=1
function_name	the tasks in parallel ||| tasks	count=1
function_name	default domain of ||| default domain	count=2
function_name	gets the first ||| ldap first	count=1
function	matches [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	class uses ||| class uses	count=2
function_name	the given password ||| with password	count=1
function_name	formerly loaded ||| ps place	count=1
function	[function_name_1] of ||| [arg_pair_2] [function_name_1]	count=7
function	function for [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	need ||| mongoid	count=1
function_name	avoid specific event method ||| avoid method	count=1
function_name	inverse ||| inverse	count=1
namespace	for [namespace] ||| [namespace]	count=2
arg_pair	hostname ||| array $mxhosts	count=1
function_name	to use spanscorer to ||| use	count=2
namespace	not used ||| mongodb	count=1
function_name	xmlrpc [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	a callable function used ||| string $message	count=1
function_name	facet ||| facet limit	count=2
function_name	[function_name_1] bit fail ||| [function_name_2] [function_name_1]	count=1
namespace	exception was created ||| exception	count=1
function_name	fork in the child ||| fork	count=1
function_name	acquires stream ||| event stream	count=1
function_name	output headers from ||| headers	count=1
arg_pair	of an entry using ||| string $name int $flags	count=1
function_name	is effective in ||| get	count=1
arg_pair	combination of fbsql_fetch_row() ||| int $result_type	count=1
function_name	name representing a row ||| fetch assoc	count=1
function_name	[function_name_1] sub-elements ||| [function_name_1] [function_name_2]	count=1
return	node specified by ||| domnode	count=1
function_name	receives ||| recv	count=1
function_name	returns the last ||| get last	count=1
function_name	query inspected by ||| mysqlnd qc	count=1
arg_pair	file ||| int $options	count=1
arg_pair	[arg_pair_1] field ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	encrypts the ||| mcrypt encrypt	count=1
function_name	return icu [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	called whenever a change ||| string $value	count=1
return	retrieves the file ||| string	count=2
function_name	[function_name] a ||| simple command [function_name]	count=3
arg_pair	subsequent transformations with ||| string $namespace	count=1
function_name	of tasks ||| run	count=1
arg_pair	parses a [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	color into the image ||| image	count=1
arg_pair	one of the ||| resource $result	count=1
return	by the user ||| mongoid	count=1
arg_pair	of the ||| int $method	count=1
function_name	color ||| image	count=1
arg_pair	filter filtertype on ||| int $filtertype	count=1
function_name	the name [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	nodes in this node ||| domnode	count=1
function_name	calculates e raised ||| trader exp	count=2
function_name	[function_name_1] name ||| [function_name_1] property [function_name_2]	count=1
function_name	steepness for neuron number ||| steepness	count=1
function_name	adds a ||| bbcode add element	count=1
namespace	checks ||| norewinditerator	count=1
function_name	set environmental ||| set environment	count=2
namespace	if the ||| splfixedarray	count=1
function_name	to facet ||| set facet date start	count=1
function_name	a [function_name] ||| add facet date [function_name]	count=3
function_name	consider for highlighting ||| fragsize	count=1
function	function for [arg_pair_2] ||| [function_name_1] output [arg_pair_2]	count=1
function_name	[function_name_1] iterator ||| [function_name_2] [function_name_1]	count=4
function_name	with type number ||| number	count=1
function_name	bitrate ||| bitrate	count=2
function_name	should only ||| set	count=1
function_name	of current element ||| get	count=1
function_name	[function_name_1] low priority ||| [function_name_2] [function_name_1]	count=1
function_name	external [function_name_2] ||| [function_name_1] [function_name_2] handler	count=1
namespace	creates a ||| mongodate	count=1
function_name	returns an array that ||| fetch array	count=1
function_name	ends a ||| end page	count=1
function_name	minimum message ||| mssql min message	count=2
arg_pair	of ||| int $service_level_option mixed $option_value	count=1
function_name	and goes until ||| strrchr	count=1
function_name	tokens ||| token	count=1
function_name	event that ||| event	count=1
return	get ||| void	count=1
arg_pair	after the ||| int $backlog	count=1
namespace	gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| gearmanclient	count=1
arg_pair	the contrast of ||| int $channel	count=1
function_name	iteration ends when ||| end iteration	count=2
arg_pair	the object_id ||| int $timeout	count=1
namespace	all job servers ||| gearmanclient	count=1
function_name	uid for ||| uid	count=1
return	stroke color to the ||| bool	count=1
function_name	convolution filter ||| edgeimage	count=1
function_name	fetches the next ||| oci fetch	count=1
function_name	use spanscorer [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	accept connections ||| accept	count=1
arg_pair	returns the [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	[function_name_1] character ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] image background ||| [function_name_2] [function_name_1]	count=1
function_name	random number ||| random range	count=1
function_name	extension stored bytecodes ||| bcompiler	count=1
return	to set appropriate http ||| void	count=1
function_name	data [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	send ||| mongocursorinterface	count=1
arg_pair	[arg_pair_1] an ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	server thats associated ||| resource $link_identifier	count=1
function_name	an ldap directory ||| ldap	count=1
function_name	[function_name_1] [function_name_2] object ||| [function_name_1] [function_name_2]	count=1
return	result set if ||| bool	count=1
function_name	number [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] token ||| [function_name_1] [function_name_2]	count=6
namespace	function will return ||| function	count=5
function_name	frees the ||| db2 free	count=1
arg_pair	options ||| array $options	count=1
arg_pair	the [arg_pair_2] ||| array imap sort [arg_pair_2] [arg_pair_1]	count=2
namespace	no more results ||| mongocursorinterface	count=1
function_name	closes ||| sqlite close	count=1
arg_pair	key to a ||| mixed $value	count=1
function_name	the specified code point ||| isbase	count=1
function_name	checks ||| valid	count=1
function_name	set ||| mysqli set	count=1
function_name	gets the sql type ||| type	count=1
arg_pair	a ||| int $shmid string $data	count=1
return	pattern to ||| bool	count=1
function_name	stub so this method ||| set stub	count=1
function_name	[function_name_1] message reported ||| [function_name_1] [function_name_2]	count=2
function_name	secondaries ||| slave okay	count=3
function_name	a given ||| ibase fetch	count=1
arg_pair	current request indicating ||| string $actor	count=1
function_name	gearmanclient::addtasklowbackground() this call ||| run	count=1
namespace	object ||| sqlite3stmt	count=1
namespace	current ||| eventbuffer	count=1
function_name	byte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	minimum message ||| min message	count=2
arg_pair	the size of the ||| int $columns int $rows	count=1
arg_pair	constant as ||| string $constant	count=1
arg_pair	yet ||| int $flag int $expire	count=1
function_name	valid socket resource created ||| socket connect	count=1
function_name	activation ||| fann get activation	count=2
arg_pair	method scales the ||| int $width	count=1
function_name	a handler to ||| handler	count=1
function_name	from previous frontbase ||| fbsql	count=1
function_name	with a border ||| border	count=1
function_name	block algorithm ||| block algorithm	count=3
namespace	function returns a string ||| function	count=3
arg_pair	iteration with a ||| resource $ann array $input	count=1
function_name	read [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	result set as properties ||| string $class_name	count=1
function_name	alpha [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	of activation steepnesses in ||| activation steepnesses	count=1
arg_pair	the transparency ||| float $alpha float $fuzz	count=1
function_name	[function_name_1] encoding ||| [function_name_1] [function_name_2]	count=1
namespace	special operators ||| sphinxclient	count=1
arg_pair	scrollable cursor ||| resource $stmt int $row_number	count=1
namespace	this collection ||| mongocollection	count=1
function_name	tell the ||| tell	count=1
function_name	process [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	map ||| string $map	count=1
function_name	must be demangled ||| radius demangle	count=1
function_name	current fbsql [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	stretches with saturation ||| linear stretch image	count=1
function_name	oauth provider parameters ||| parameter	count=1
namespace	word in ||| function	count=1
function_name	odbc_do() or odbc_exec() ||| odbc fetch row	count=1
function_name	called by the ||| state	count=1
function_name	[function_name_1] train ||| [function_name_2] [function_name_1]	count=3
namespace	non-executable [namespace] cannot have ||| [namespace]	count=1
function_name	places [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	raise ||| bcpow	count=1
function_name	actual printed length number ||| field prtlen	count=1
function_name	stored value ||| apc	count=1
function_name	not ||| disable	count=1
function_name	current resources soft ||| posix getrlimit	count=1
function_name	route process ||| route	count=1
function_name	returns ||| get stats	count=3
return	a file that cannot ||| void	count=1
arg_pair	namespaceuri and name name ||| string $namespaceuri string $qualifiedname	count=1
function_name	server without waiting for ||| pg send query	count=1
function_name	dispatch loop ||| dispatch loop	count=1
return	the host name ||| string	count=1
function_name	gets the ||| get	count=26
function_name	connections are made ||| local	count=1
function_name	the number [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] parameter [arg_pair_2]	count=1
arg_pair	data from ||| string $data	count=1
function	specified status [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	field [function_name_2] ||| [function_name_2] [function_name_1]	count=9
arg_pair	ca both for ||| string $ca_info	count=1
function_name	[function_name_1] training ||| [function_name_2] set [function_name_1]	count=2
function_name	in the background returning ||| background	count=2
function_name	of ||| run	count=1
arg_pair	how ||| array $set	count=1
arg_pair	variable in a ||| mixed $expression	count=1
function_name	the maximum ||| cascade max cand	count=1
function_name	stub so this method ||| stub	count=2
function_name	step error [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	columns ||| columns	count=1
function_name	[function_name_1] a normalized ||| [function_name_1] [function_name_2] query	count=1
function_name	count ||| count	count=1
function_name	a new record into ||| record	count=1
arg_pair	the principal and ||| string $password	count=1
namespace	function without ||| reflectionfunctionabstract	count=1
function_name	used to split a ||| split	count=1
function_name	of ||| add	count=1
function_name	the id3 ||| id3	count=1
function_name	[function_name_1] rendering intent ||| [function_name_1] [function_name_2]	count=1
arg_pair	it for later ||| int $len	count=1
function_name	fit the window height ||| set fit v	count=1
function_name	general category value for ||| char type	count=1
function_name	stored with a ||| set metadata	count=1
function_name	gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or ||| run	count=1
function_name	frees the memory ||| free result	count=1
function_name	and executes ||| execute	count=1
namespace	cairoformat ||| cairoimagesurface	count=1
arg_pair	variable can ||| mixed $var bool $syntax_only	count=1
namespace	buffer for an ||| eventbuffer	count=1
arg_pair	optionally connects to the ||| int $port	count=1
arg_pair	text on the page ||| string $text	count=1
function_name	[function_name_1] the directory ||| [function_name_1] temp [function_name_2]	count=1
arg_pair	subject [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	sets the minimum ||| mssql min	count=1
function_name	typically fetches a batch ||| batch size	count=2
arg_pair	a row as ||| resource $result_id	count=1
arg_pair	principal ||| string $principal string $password	count=1
function	[function_name_1] page ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	left and right to ||| mixed $left mixed $right	count=1
arg_pair	memcached::replace() except that ||| int $expiration	count=1
function_name	of current ||| add	count=1
function_name	the databases available ||| dbs	count=2
function_name	fetch a request ||| get request	count=1
arg_pair	submits a ||| string $query	count=1
function_name	severity ||| severity	count=1
function_name	returns string describing the ||| eio get	count=1
function_name	the tables ||| list tables	count=1
function_name	postgresql [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	the last [function_name] ||| json last [function_name]	count=3
namespace	inserted into the ||| function	count=1
function_name	changes ||| ftp	count=1
function_name	document frequency used ||| default frequency	count=1
function_name	access token ||| access token	count=1
function_name	ending line number ||| get end line	count=2
function_name	imap [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	given [function_name] definition ||| [function_name] content	count=1
function_name	bind_textdomain_codeset() you ||| codeset	count=1
arg_pair	socket stream ||| mixed $socket	count=1
function_name	fetches a ||| object	count=1
arg_pair	of the specified ||| resource $link_identifier	count=2
function_name	returns ||| db2	count=2
function_name	ftp ||| ftp	count=11
function_name	registry settings ||| registry	count=1
function_name	[function_name_1] mime ||| [function_name_1] [function_name_2]	count=1
namespace	cursor id ||| mongodb\driver\cursorid	count=1
function	executes custom [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	iv belonging to ||| iv	count=1
namespace	containing ||| function	count=2
arg_pair	key to a specific ||| mixed $value	count=1
function_name	postgresql database and saves ||| pg	count=1
function	[function_name_1] by execute ||| [function_name_1] [arg_pair_2]	count=1
function_name	field pf3 ||| field	count=2
function_name	column number of the ||| column number	count=1
function_name	[function_name_1] decrease ||| [function_name_2] [function_name_1]	count=1
namespace	its ||| mongocollection	count=1
function_name	return error ||| gupnp service action return error	count=1
function_name	current radius ||| radius	count=5
function_name	to [function_name] ||| [function_name]	count=2
return	result of the last ||| int	count=1
function_name	current fbsql [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	include the lower ||| set terms include lower	count=1
function_name	only ||| set	count=2
function_name	to facet ||| set facet date	count=1
function_name	[function_name] treated as ||| facet date [function_name]	count=1
function_name	bound in ||| bound	count=1
return	of ||| mongocursor	count=1
function_name	per /etc/services ||| getservbyport	count=1
function_name	last mysql ||| mysql errno	count=2
function_name	graphicsmagick api copyright as ||| getcopyright	count=1
function_name	[function_name_1] types ||| [function_name_1] [function_name_2]	count=1
arg_pair	not already exist ||| array $keys	count=1
function_name	fixed size thumbnail by ||| thumbnail	count=1
arg_pair	length - 1 ||| int $length	count=1
function_name	should only be ||| set	count=1
function_name	to mssql_fetch_array() [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	the name of ||| name	count=2
return	is effective ||| string	count=1
namespace	disk in ||| quickhashintset	count=1
function_name	shared secret is ||| radius server secret	count=1
function_name	csr and ||| csr export to	count=1
return	for the ||| float	count=3
function	creates a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	sets bigram phrase slop ||| set bigram phrase slop	count=1
arg_pair	[arg_pair_1] input ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	an arc ||| imagearc	count=1
function_name	result [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	headers for ||| headers	count=1
return	all data from the ||| bool	count=1
return	host checks this is ||| bool	count=1
function_name	calculate input scaling ||| input scaling	count=1
function_name	of activation steepnesses ||| fann get cascade activation steepnesses count	count=1
function_name	[function_name] an entry ||| set [function_name] index	count=2
namespace	the extensions ||| reflectionextension	count=1
function_name	cascade [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	ends ||| end page	count=2
arg_pair	pattern for ||| string $pattern	count=1
function_name	an individual threshold for ||| adaptive threshold image	count=1
function_name	non-empty tags ||| broker	count=1
function_name	mssql_fetch_array() with ||| mssql	count=1
function_name	server ||| server	count=4
function_name	directly [function_name] ||| [function_name]	count=1
arg_pair	for the ||| string $prefix	count=1
arg_pair	inverse of ||| int $options	count=1
namespace	mongodb\driver\server instances to ||| mongodb\driver\manager	count=1
arg_pair	key ||| mixed $key string $passphrase	count=1
namespace	given result ||| function	count=1
function_name	[function_name_1] intent ||| [function_name_1] [function_name_2]	count=3
namespace	get ||| yaf_router	count=1
arg_pair	specified messages ||| resource $imap_stream int $msg_number	count=2
return	of the ||| int	count=32
arg_pair	the ||| int $channel	count=1
arg_pair	a ||| string $note_value	count=1
return	and the ||| bool	count=1
function_name	function returns at most ||| get	count=1
namespace	[namespace] can be ||| [namespace]	count=2
function_name	normal date ||| date string	count=1
arg_pair	equivalent to memcached::get() except ||| callable $cache_cb	count=1
function_name	sub [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	server pool ||| memcached	count=1
arg_pair	for a map ||| string $domain string $map	count=2
function_name	[function_name] output ||| fann get [function_name]	count=1
arg_pair	set a file ||| string $file	count=2
function_name	establish service monitoring and ||| service	count=1
arg_pair	the given [arg_pair] ||| [arg_pair]	count=3
arg_pair	and the associated ||| int $textflow	count=1
function_name	highlighted version of ||| highlight file	count=1
function_name	syncpoint ||| mqseries	count=1
function_name	destination on an arbitrary ||| add nameddest	count=1
function_name	config used to ||| pspell config	count=1
arg_pair	delimiter ||| string $null_as	count=3
namespace	user-defined class ||| reflectionclass	count=1
namespace	file that cannot be ||| pharfileinfo	count=1
function_name	client severity level ||| client severity	count=2
arg_pair	given result ||| resource $result_id	count=1
function_name	changing the persistence state ||| set persistence	count=1
namespace	returns error and ||| function	count=1
function_name	event base ||| base	count=1
function_name	adaptive [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	an array by using ||| function	count=1
function_name	patches a ||| bpatch	count=1
function_name	specified field is ||| msql field	count=1
function_name	scm of [function_name_2] ||| [function_name_1] service [function_name_2] int $status int $checkpoint	count=1
function_name	field in a postgresql ||| pg field	count=1
namespace	call starts running ||| gearmanclient	count=1
function_name	name of the route ||| get current	count=1
namespace	gets a line from ||| splfileobject	count=1
function_name	[function_name_1] to use ||| [function_name_1] highlight [function_name_2] phrase	count=1
function_name	decoded quoted printable string ||| quoted printable decode	count=1
function_name	[function_name_1] organization that ||| [function_name_2] [function_name_1]	count=4
function_name	the image obtained ||| imagecreatefromwebp	count=1
arg_pair	traits that the given ||| bool $autoload	count=1
return	from a ||| mixed	count=1
function_name	that ||| sqlsrv	count=2
arg_pair	image from the given ||| int $quality int $filters	count=1
function_name	error ||| bzerrstr	count=2
arg_pair	str with all ||| string $encoding	count=1
arg_pair	to ||| string $encoding bool $double_encode	count=1
namespace	the unicode code ||| intlchar	count=1
function_name	regular expression ||| preg	count=1
function_name	number of ||| count	count=7
function_name	scalar ||| scalar	count=1
function_name	buffer ||| buffer	count=1
function_name	gets the current byte ||| get current byte	count=1
arg_pair	or ||| mixed $file	count=1
return	checks if the iterator ||| bool	count=1
function_name	xml string from the ||| xml	count=1
arg_pair	descriptor at offset ||| int $offset	count=1
function_name	closes the ||| sybase close	count=1
function_name	correspond ||| mqseries strerror	count=1
function_name	when launched via ||| start	count=1
function_name	[function_name_1] uri string ||| [function_name_2] [function_name_1]	count=2
function_name	audio [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	field to ||| field length	count=2
function_name	null ||| null	count=5
function_name	stride value that will ||| stride	count=1
function_name	before entering or continuing ||| loop	count=1
function_name	sets bigram [function_name_2] ||| [function_name_1] [function_name_2]	count=9
arg_pair	by assoc_array ||| array $assoc_array	count=1
function_name	access token ||| get access token	count=2
function_name	descale input ||| descale	count=1
arg_pair	shell wildcard pattern ||| string $pattern string $string	count=1
arg_pair	by oliver isbn 0-131-00413-1 ||| string $first string $second	count=1
function_name	fgets() except that fgetcsv() ||| fgetcsv	count=1
function_name	not be ||| construct	count=1
function_name	sets an attribute ||| set attribute	count=2
function_name	sarprop step error ||| sarprop step error	count=9
arg_pair	or ||| resource $link_identifier	count=1
function_name	rewind operation on the ||| rewind	count=1
function_name	[function_name_1] file specified ||| [function_name_2] [function_name_1]	count=5
function_name	from a single column ||| column	count=1
function_name	handler in ||| handler	count=1
function_name	socket resource or stream ||| socket	count=1
function_name	selects ||| select server	count=1
return	the number of ||| int	count=13
function_name	request handle ||| request	count=1
namespace	quickhashinthash ||| quickhashinthash	count=1
arg_pair	afterward by the php ||| string $extendedclass	count=1
arg_pair	a ||| string $value	count=2
arg_pair	it in dest ||| int $context	count=1
function_name	affected by insert update ||| affected	count=1
function_name	[function_name_1] the character ||| [function_name_1] [function_name_2] data handler resource	count=1
namespace	checks if ||| splfixedarray	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2] query	count=4
arg_pair	with at middle point ||| float $x	count=1
arg_pair	a ||| string $feature	count=1
function_name	bigram phrase [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	use the ||| use	count=1
namespace	returned by ||| function	count=2
function_name	slop ||| slop	count=4
function_name	[function_name_1] fields pf2 ||| [function_name_1] [function_name_2]	count=3
function_name	share data between ||| share	count=1
function_name	get the vertical descent ||| get descent	count=1
function_name	ending [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] temperature ||| [function_name_1] [function_name_2]	count=3
function_name	xml namespace ||| ns	count=1
function_name	anchor ||| anchor	count=1
function_name	external entity [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	get defined functions ||| get functions	count=2
arg_pair	by mask [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	[arg_pair_1] code to ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	handling function ||| function	count=1
function_name	get error [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	the ||| bool $gray	count=1
function_name	[function_name_1] the ||| [function_name_2] [function_name_1]	count=6
arg_pair	starting from object_id ||| string $object_id string $timeout	count=1
arg_pair	fd file ||| int $mode	count=1
function_name	[function_name_1] the name ||| [function_name_2] [function_name_1]	count=1
function_name	get the type ||| get type	count=1
function_name	fetch dns resource ||| dns	count=1
function_name	handler ||| handler	count=11
function_name	view engine ||| assign	count=1
function_name	minimum document frequency ||| facet enum cache min default frequency	count=1
function_name	dn ||| dn	count=1
function_name	that are present ||| array intersect uassoc	count=1
arg_pair	that the property have ||| mixed $value	count=1
function_name	to prepend ||| prepend	count=1
arg_pair	a ||| string $namespace	count=1
namespace	function converts ||| function	count=4
namespace	of data ||| function	count=5
arg_pair	opposite of ||| string $string	count=1
function_name	document frequency ||| frequency	count=1
function_name	instance of ||| instance	count=1
namespace	of an archive ||| phar	count=1
namespace	in the image list ||| imagick	count=1
arg_pair	is mangled for ||| resource $radius_handle string $mangled	count=1
function_name	agent ||| snmpwalk	count=1
function_name	transformation matrix of ||| trans matrix	count=1
namespace	maxdb_real_connect() ||| function	count=1
return	has no more results ||| bool	count=1
function_name	[function_name_1] search ||| eventdnsbase void [function_name_1] [function_name_2]	count=2
return	name of the internet ||| string	count=1
arg_pair	a ||| int $port	count=1
arg_pair	them in fd ||| array $fd	count=1
arg_pair	path ||| string $path	count=1
function_name	closes the ||| close prepare	count=1
namespace	the current ||| arrayiterator	count=1
arg_pair	mailbox see imap_open() ||| resource $imap_stream string $old_mbox	count=1
function_name	rows to display ||| rows	count=1
function_name	influences unstable period factor ||| set unstable period	count=1
function_name	of sybase_fetch_row() ||| sybase fetch assoc	count=1
return	of the font ||| int	count=1
function_name	frequency at which ||| min doc frequency	count=1
function_name	webp version ||| imagewebp	count=1
arg_pair	[arg_pair_1] a phar ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	to trace ||| maxdb	count=1
namespace	version of the hash ||| quickhashinthash	count=1
return	for the caller ||| long	count=2
function_name	for the next ||| next	count=1
function_name	used in conjunction ||| stop	count=1
function_name	stub so ||| set default stub	count=1
function_name	minimum ||| min count	count=2
arg_pair	exist ||| array $keys	count=1
return	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() ||| bool	count=1
arg_pair	specified bevent ||| resource $bevent	count=1
function_name	prepare ||| prepare	count=1
function_name	a record from ||| record with names	count=2
function_name	the same body ||| to	count=1
function_name	[function_name_1] value integer ||| [function_name_2] [function_name_1]	count=3
function	zone corresponding [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	contains any more elements ||| valid	count=1
function_name	path to the file ||| path	count=1
function_name	flags as set ||| flags	count=1
function_name	[function_name_1] from ||| [function_name_1] [function_name_2]	count=9
function_name	of the [function_name] without ||| [function_name] get	count=1
function_name	creates a large ||| create	count=1
arg_pair	given ||| resource $image int $font	count=1
function_name	mysql [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	the ||| string $error_msg	count=1
function_name	canonicalize nodes ||| c14 n	count=1
function	[function_name_1] server thats ||| [arg_pair_2] [function_name_1]	count=5
function_name	a id3v2 object for ||| id3v2 tag	count=1
arg_pair	options to an existing ||| resource $pdfdoc int $textflow	count=1
function_name	places an image ||| pdf place image	count=2
function_name	new ||| ps open	count=1
function_name	escape the given string ||| escape	count=1
arg_pair	application program to a ||| string $qmanagername resource $hconn	count=1
function_name	[function_name] of ||| get svm [function_name]	count=3
function_name	external attributes of an ||| set external attributes	count=2
arg_pair	the given message ||| resource $imap_stream	count=1
arg_pair	a php variable to ||| mixed $variable	count=1
namespace	yaf_router ||| yaf_router	count=2
function_name	curl share handle ||| curl share	count=1
return	to a ms ||| bool	count=1
namespace	a character in ||| function	count=1
namespace	an event from ||| event	count=1
arg_pair	returns a resource ||| string $encoding string $separator	count=1
function_name	fields pf2 ||| fields	count=1
function_name	range [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	pixel that matches ||| paint	count=1
function	annotation [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	line number from ||| line	count=1
function_name	maximum number ||| get cascade max cand	count=1
function_name	class which will ||| class	count=1
arg_pair	the given message sequence ||| resource $imap_stream	count=1
arg_pair	a ||| string $uri bool $exclusive	count=1
arg_pair	set the database name ||| string $database	count=1
function_name	a rectangle ||| rectangle	count=1
function_name	get a doc comment ||| get doc comment	count=1
function_name	shared memory segment ||| shm has var	count=1
arg_pair	the entries of array1 ||| array $array2	count=1
function_name	the full country ||| country	count=1
arg_pair	the data ||| int $data_type	count=1
function_name	[function_name_1] id ||| [function_name_1] [function_name_2]	count=3
namespace	an archive ||| phar	count=1
function_name	means of the ||| fdf get	count=1
function_name	rewind ||| rewind	count=3
function_name	dictionary [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	error string of any ||| string	count=1
function_name	loop ||| loop	count=3
function_name	returns the ||| yp get	count=1
arg_pair	row of the data ||| int $row_number	count=1
namespace	zip archive using its ||| ziparchive	count=1
arg_pair	a socket stream ||| eventbase $base mixed $socket	count=1
arg_pair	the given oid ||| string $oid	count=1
function_name	removes one ||| remove	count=4
function_name	cubrid ||| cubrid	count=1
return	the current element ||| bool	count=1
function_name	byte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	periodic ||| void	count=1
return	or continuing the event ||| void	count=1
namespace	evidle watcher object ||| evidle	count=1
namespace	this function url encodes ||| function	count=1
return	and breaks it ||| array	count=1
function	raise [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	used by php internally ||| state	count=1
arg_pair	mailbox to new mailbox ||| resource $imap_stream string $old_mbox	count=1
function_name	client per-process statistics ||| client stats	count=2
function_name	epochs determines the minimum ||| min	count=1
function_name	plugin ||| plugin	count=1
function_name	interword spacing ||| interline spacing	count=2
arg_pair	equivalent to memcached::replace() except ||| mixed $value int $expiration	count=1
function_name	creates a ||| create sparse array	count=1
arg_pair	the server ||| int $estimated	count=1
function_name	periodic watcher again ||| again	count=1
function_name	http [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	last value from ||| last insert	count=2
function_name	request authenticator ||| radius request authenticator	count=2
arg_pair	annotation to ||| float $lowerleftx	count=2
function_name	sunrise ||| date sunrise	count=2
function_name	returns client ||| mysqli get client	count=4
function_name	corresponding geoip ||| geoip	count=2
function_name	elements with ||| elements by	count=2
arg_pair	on ||| resource $pdfdoc	count=1
arg_pair	the end is ||| int $type	count=1
function_name	[function_name_1] attributes ||| [function_name_1] [function_name_2] index int $index int	count=3
function_name	some amount of time ||| immortal	count=1
function_name	gets blob/clob by executing ||| lob get	count=1
function_name	result identifier ||| ibase fetch object	count=1
namespace	wsdl for ||| soapclient	count=1
return	returns the number of ||| int	count=4
function_name	[function_name_1] mode is ||| [function_name_2] [function_name_1]	count=5
function	property for [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	position of the ||| function	count=1
arg_pair	text in the current ||| string $text	count=1
function_name	this method any file ||| file	count=1
arg_pair	named by outfilename ||| resource $csr string $outfilename	count=1
arg_pair	from domain returned ||| string $codeset	count=1
function_name	pdf page on ||| pdf	count=1
function_name	namespace support ||| ns	count=1
namespace	cursor ||| mongocursorinterface	count=1
function_name	of the current cipher ||| cipher info	count=1
function_name	[function_name_1] blob/clob ||| [function_name_2] [function_name_1]	count=8
function_name	specified criteria and sort ||| sort	count=1
function_name	[function_name_1] the text ||| [function_name_2] [function_name_1]	count=6
function_name	the specified code ||| isbase	count=1
function_name	in this service ||| service introspection	count=1
return	mechanism if ||| bool	count=1
function_name	parent node ||| parent	count=1
namespace	[namespace] a compressed ||| [namespace]	count=2
function_name	which is ||| get current	count=1
function_name	a quoted [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	given in ||| array	count=1
function_name	the namespace uri ||| namespace uri	count=1
arg_pair	within a string before ||| string $source_string	count=1
arg_pair	a wrapper for apaches ||| string $note_name string $note_value	count=1
function_name	given result ||| ibase fetch	count=1
arg_pair	a resource ||| string $encoding	count=1
arg_pair	fd ||| mixed $fd	count=3
function_name	as event ||| ibase set event	count=1
function_name	[function_name_1] mode ||| [function_name_1] block [function_name_2]	count=4
function_name	error if any occurred ||| error	count=1
function_name	[function_name_1] status ||| [function_name_1] [function_name_2]	count=1
function_name	reading [function_name] ||| [function_name] entries	count=1
arg_pair	lists tables ||| string $owner string $name	count=1
function_name	connection type corresponding ||| geoip id	count=1
return	to pointer to ||| bool	count=1
function_name	oracle placeholder name ||| name	count=1
function_name	fields [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] sequence and ||| overview [arg_pair_1] [arg_pair_2]	count=5
function_name	iterators [function_name] contained ||| get [function_name]	count=1
function_name	html document ||| html	count=1
function_name	error code ||| error code	count=4
function_name	examines a ||| openssl x509 checkpurpose	count=1
function_name	from last internationalization ||| intl	count=1
return	whether the specified ||| bool	count=1
arg_pair	the first prototype is ||| string $data int $mode	count=2
namespace	element ||| limititerator	count=1
arg_pair	the associated data ||| resource $pdfdoc	count=1
function_name	the uid for the ||| imap uid	count=1
function_name	row in ||| fetch row	count=1
arg_pair	[arg_pair_1] to pattern ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	formed by the ||| checkdate	count=1
function_name	adds the specified ||| add	count=1
namespace	the specified link ||| function	count=2
function_name	a binary ||| readimageblob	count=1
arg_pair	named column in ||| resource $stmt mixed $column	count=1
arg_pair	real1 from real0 ||| array $real1	count=1
return	point [return] new ||| [return]	count=1
function_name	fetches the next ||| fetch	count=1
arg_pair	the principal ||| string $password	count=1
arg_pair	and returns a ||| string $encoding	count=1
namespace	statement function ||| function	count=1
namespace	a ||| gmagick	count=2
function_name	and returns a stream ||| stream	count=1
function_name	phar [function_name] ||| phar [function_name]	count=3
function_name	creates ||| create attribute	count=2
namespace	by the server ||| function	count=2
arg_pair	color or the closest ||| int $blue	count=1
namespace	an array by ||| function	count=1
function_name	during serialization ||| serialize	count=1
return	sets a ||| bool	count=1
function_name	[function_name_1] type ||| [function_name_2] [function_name_1]	count=17
function	value integer [arg_pair_2] ||| [function_name_1] enum [arg_pair_2]	count=3
function_name	placeholder name which points ||| by name	count=1
function_name	the file ||| export to file	count=2
function_name	[function_name_1] a ||| [function_name_1] country code [function_name_2]	count=1
return	more results ||| bool	count=1
function_name	an url ||| connect with url	count=1
function_name	records ||| pg	count=1
return	file containing [return] specified ||| [return]	count=1
function_name	draws an ellipse ||| imageellipse	count=1
function_name	is a space character ||| space char	count=1
namespace	whether the end ||| splfileobject	count=1
function_name	error ||| udm errno	count=2
namespace	domdocumentfragment ||| domdocumentfragment	count=1
arg_pair	equivalent to memcached::add() except ||| mixed $value int $expiration	count=1
function_name	size and ||| size	count=2
function_name	get elapsed ||| elapsed	count=1
function_name	[function_name_1] error message ||| [function_name_2] [function_name_1]	count=3
namespace	setting of the server ||| function	count=1
function_name	taking into account the ||| mysql real	count=1
return	not to stagnate ||| bool	count=1
return	database ||| bool	count=1
function_name	add routes defined by ||| add	count=1
namespace	the specified database by ||| function	count=1
function_name	the [function_name] ||| [function_name] field length	count=1
function_name	gets the session ||| session get	count=2
function_name	read ||| read	count=3
arg_pair	no database ||| mixed $id	count=1
function_name	route by ||| get route	count=1
function_name	code ||| errno	count=1
arg_pair	posted by the database ||| string $event_name1 string $event_name2	count=1
arg_pair	a string before it ||| resource $link string $source_string	count=1
namespace	function used by the ||| function	count=3
arg_pair	of ||| int $offset string $encoding	count=3
function_name	called by the ||| set state	count=1
function_name	an xml ||| xml	count=4
function_name	get current [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	sets the learning ||| set learning	count=2
function_name	[function_name_1] the sarprop ||| [function_name_1] [function_name_2]	count=4
function_name	deletes a named virtual ||| delete	count=1
function_name	session [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	on table databases ||| put nr	count=1
function_name	creates a new ||| hwapi content new	count=1
function_name	without waiting ||| pg send	count=1
function_name	which is effective ||| current	count=1
function_name	the ssl_cipher_description ssl ||| ssl	count=1
arg_pair	tracing ||| resource $connection string $module_name	count=1
function_name	internal information where the ||| internal info	count=3
return	returns an array ||| array	count=9
function_name	[function_name_1] word ||| [function_name_1] [function_name_2]	count=2
function_name	a weblink ||| weblink	count=1
function_name	saves a png image ||| imagepng	count=1
function_name	map configuration to ||| map	count=1
function_name	control point callback function ||| gupnp control point callback	count=1
function_name	merges the ||| array merge recursive	count=1
function_name	get similar ||| similar	count=1
arg_pair	preprocesses text ||| resource $pdfdoc string $text	count=1
function_name	this should not ||| construct	count=1
arg_pair	assoc_array which has field= ||| int $options	count=1
function_name	utf-8 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	create a ||| create	count=1
function_name	open stream [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	globally [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] cubrid ||| [function_name_2] [function_name_1]	count=2
function_name	for variable is recieved ||| gupnp service proxy add notify	count=1
function_name	truncates ||| ftruncate	count=1
function_name	[function_name_1] in namespace ||| [function_name_1] [function_name_2]	count=1
function_name	or other content item ||| begin item	count=1
function_name	sets the permissions ||| ftp chmod	count=1
arg_pair	callback function to the ||| array $array callable $callback	count=1
function_name	3 parts: ||| footer	count=1
function	[function_name_1] namespaceuri and ||| [function_name_1] [arg_pair_2]	count=3
function_name	gets the blocksize ||| module get algo block size	count=1
function_name	oracle ||| oci	count=7
function_name	executes a ||| execute	count=1
function_name	use with block algorithms ||| block	count=1
arg_pair	from the service provider ||| string $callback_url	count=1
return	representation ||| string	count=1
function_name	virtual pixel [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	can create or ||| int $key	count=1
return	this is the ||| void	count=1
function_name	maximum [function_name_2] ||| [function_name_1] line [function_name_2]	count=1
function_name	field from ||| oci field	count=1
function_name	[function_name_1] value ||| [function_name_1] [function_name_2]	count=10
function_name	returns the ||| get option	count=1
function_name	fields ||| fields	count=9
function_name	to the next ||| next	count=2
arg_pair	for later use ||| string $fontname	count=1
arg_pair	a ||| string $note_name	count=1
function_name	precision ||| precision	count=1
function_name	the extrema for ||| extrema	count=1
arg_pair	code points start inclusive ||| mixed $start	count=1
function	[function_name_1] specified entry ||| [function_name_1] string $key [arg_pair_2]	count=1
function_name	returns the imagemagick package ||| get package	count=1
function_name	a specific row ||| db2 fetch row	count=1
namespace	if the ||| iteratoriterator	count=1
arg_pair	current request indicating ||| string $actor string $details	count=1
arg_pair	address ||| string $address	count=1
function_name	returns the list ||| get server list	count=1
function_name	whole image to ||| ping image	count=2
function_name	a ||| object	count=3
return	to the browser ||| bool	count=1
function_name	assumed to be utf-8 ||| utf8	count=1
function_name	sets where the ||| fann set error log	count=1
namespace	a color image by ||| gmagick	count=1
arg_pair	the service provider ||| string $verifier_token	count=1
function_name	serialization of the object ||| serialize	count=1
return	used to modify the ||| bool	count=1
function_name	set name for retrieval ||| yaz	count=1
function_name	constants currently ||| constants	count=1
function_name	[function_name_1] process ||| [function_name_1] [function_name_2]	count=1
return	php ||| mongoid	count=1
function_name	number of activation ||| activation	count=1
arg_pair	c ||| string $c int $color	count=1
function_name	reduce ||| array reduce	count=2
function	[function_name_1] b and ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] error code ||| [function_name_2] [function_name_1]	count=5
arg_pair	an exact match ||| array $offset	count=1
function_name	database name from a ||| mysql db name	count=1
function_name	a running service ||| set service	count=1
function_name	get the width ||| width	count=1
namespace	current boost ||| solrinputdocument	count=1
function_name	serializes ||| serialize	count=1
namespace	internet host specified by ||| function	count=1
namespace	the [namespace] failed ||| [namespace]	count=1
function_name	current thread id ||| thread id	count=2
arg_pair	a link annotation to ||| float $lowerleftx	count=1
function_name	resolve file path cache ||| wincache rplist	count=1
function_name	the query syntax ||| escape query chars	count=1
function_name	stored ||| apc	count=1
function_name	best ||| best xfer	count=1
namespace	by using the ||| function	count=1
function_name	normal date [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	a specific row in ||| fetch	count=1
function_name	returns an associative ||| assoc	count=1
arg_pair	str1 into str2 ||| string $str1 string $str2	count=1
function_name	wordlist ||| pspell config	count=1
function_name	function [function_name] ||| bbcode [function_name]	count=2
function_name	custom encoding ||| encoding	count=1
function_name	move all data ||| add	count=1
arg_pair	the specified protocol as ||| string $protocol	count=1
arg_pair	desired dimensions ||| int $filter float $blur	count=1
arg_pair	array or something ||| mixed $array_or_countable int $mode	count=1
function_name	into one and ||| xdiff	count=1
function	state variable [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	the error string ||| bzerrstr	count=1
arg_pair	supported with table databases ||| string $key mixed $increment	count=1
function_name	[function_name_1] elements name ||| [function_name_1] [function_name_2]	count=2
function_name	sets ||| set opt	count=2
function_name	the name ||| name	count=9
function_name	[function_name_1] change fraction ||| [function_name_2] [function_name_1]	count=8
function_name	fills an array with ||| fill	count=1
function_name	utf-8 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	error message for the ||| mysqli stmt error	count=1
function_name	json ||| json	count=2
function_name	given packet ||| wddx	count=1
function_name	previous frontbase operation ||| fbsql errno	count=2
function_name	of the [function_name] ||| pg [function_name]	count=1
namespace	eof has been reached ||| splfileobject	count=1
function_name	finalizes ||| end	count=1
function_name	single line ||| pdf fit textline	count=1
arg_pair	a quoting style appropriate ||| string $string int $parameter_type	count=1
function_name	learning rate ||| get learning rate	count=2
function_name	the field type ||| fbsql field type	count=2
arg_pair	end of haystack ||| string $haystack	count=2
arg_pair	position pointing to a ||| float $ury string $url	count=1
function_name	first ||| first	count=4
arg_pair	clients that ||| int $type	count=1
function_name	[function_name_1] training ||| [function_name_2] [function_name_1]	count=2
return	a fetch of the ||| string	count=1
function_name	[function_name_1] last ||| [function_name_2] [function_name_1]	count=7
function_name	current pdf ||| pdf	count=1
arg_pair	specifies a string ||| string $field_override	count=1
namespace	string of any ||| function	count=1
arg_pair	create a ||| resource $context	count=1
function_name	[function_name_1] an ||| [function_name_1] [function_name_2]	count=1
arg_pair	to a [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	haystack ||| string $haystack	count=8
function_name	the object from bson ||| bson unserialize	count=1
function_name	[function_name_1] sqlstate error ||| [function_name_2] [function_name_1]	count=1
arg_pair	any data from the ||| string $data	count=1
function_name	strip any nul bytes ||| fgetss	count=1
return	winding number rule ||| bool	count=1
arg_pair	callback to be called ||| int $type mixed $callback	count=1
function_name	sets the value ||| set option	count=1
namespace	with fdf_save_file() in ||| function	count=1
arg_pair	parameter pos ||| int $pos	count=1
function_name	[function_name_1] relative location ||| [function_name_1] [function_name_2]	count=1
arg_pair	to override the ||| int $n	count=1
function_name	a row as a ||| ibase fetch	count=1
function_name	returns an id ||| get	count=1
function_name	[function_name_1] provider parameters ||| [function_name_1] [function_name_2]	count=2
arg_pair	to a country ||| string $country_code	count=1
function_name	backpropagation neural network from ||| fann create	count=1
function_name	or anonymous oracle pl/sql ||| oci	count=1
function_name	[function_name_1] absent index ||| [function_name_2] [function_name_1]	count=4
function_name	phar archive ||| phar	count=1
function_name	available ||| available	count=1
namespace	in this node ||| domnode	count=1
arg_pair	import the php ||| array $array bool $save_indexes	count=1
function_name	is effective ||| current	count=1
return	to hook mysqlnds ||| bool	count=1
function_name	increase factor used ||| increase factor	count=2
function	single line [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	this should not be ||| construct	count=1
arg_pair	of any pixel ||| int $y int $channel	count=1
function_name	unified diff containing ||| xdiff string diff	count=1
function_name	filling color space ||| filling color space	count=3
function	remove the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	frees ||| oci free	count=1
function_name	this function ||| processing	count=1
function_name	fills a pdf block ||| pdf fill pdfblock	count=1
arg_pair	the mailboxes that ||| resource $imap_stream string $ref	count=1
function_name	learning [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	[function_name_1] a character ||| [function_name_1] [function_name_2]	count=1
function_name	notation declaration [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	the fbsql_field_name() ||| int $field_offset	count=1
function	renames [arg_pair_2] ||| [function_name_1] function [arg_pair_2]	count=1
namespace	statement and returns ||| sqlite3stmt	count=1
function_name	checks this is not ||| disable	count=1
namespace	[namespace] value of ||| [namespace]	count=1
function_name	french republican ||| frenchtojd	count=1
function_name	that matches color with ||| paint opaque image	count=1
function_name	is similar to mssql_fetch_array() ||| mssql	count=1
function_name	prints [function_name] ||| [function_name] rect	count=1
function_name	document ||| get	count=1
return	to the effect ||| bool	count=1
arg_pair	in the database ||| int $oid	count=1
namespace	socket specified by ||| function	count=1
namespace	error returned by ||| function	count=1
function_name	[function_name_1] page ||| [function_name_1] [function_name_2]	count=6
arg_pair	multiset attribute of ||| string $set_element	count=1
namespace	full text of the ||| function	count=1
function_name	length in bytes ||| length	count=1
return	prepared statement and returns ||| sqlite3result	count=1
function_name	registers passed ||| register	count=1
function_name	maximum search ||| max	count=1
arg_pair	a ||| string $function_name array $arguments	count=1
function_name	[function_name_1] color definitions ||| [function_name_2] [function_name_1]	count=2
function_name	current thread ||| thread	count=1
function_name	[function_name_1] resource socket ||| [function_name_2] [function_name_1]	count=2
function_name	databases available from ||| dbs	count=2
function_name	consider for highlighting ||| highlight fragsize	count=1
function_name	checks this is ||| disable	count=1
arg_pair	sets locale information ||| string $locale	count=1
return	while retaining the ||| mixed	count=1
function_name	frontbase [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	string prefix with which ||| prefix	count=1
arg_pair	not already exist ||| array $keys array $options	count=1
function_name	the ||| immortal	count=1
arg_pair	wildcard pattern ||| string $pattern	count=1
arg_pair	the wrapper ||| int $options	count=1
function_name	time ||| time	count=3
function_name	all ||| buffer	count=1
function_name	an response ||| response	count=1
namespace	queue ||| splpriorityqueue	count=1
namespace	what http ||| eventhttp	count=1
function_name	functions described in the ||| functions	count=1
arg_pair	an snmp object ||| string $host string $community	count=1
function_name	returns the compressed size ||| compressedsize	count=1
return	be used [return] see which ||| [return]	count=1
function_name	a regular file ||| file	count=1
function_name	returns the ||| sys get	count=1
function_name	an empty string ||| string	count=1
namespace	this function is stores ||| function	count=1
function_name	or ||| loop	count=1
function_name	tuple locks held ||| freerlocks	count=1
arg_pair	by using the oid ||| resource $conn_identifier string $oid	count=1
function_name	current filling color ||| cmykfill	count=1
function_name	[function_name_1] high priority ||| [function_name_1] [function_name_2]	count=1
function_name	selects an individual threshold ||| adaptive threshold image	count=1
function_name	entries [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	old_data ||| string $old_data	count=1
function_name	closes the request ||| cubrid close prepare	count=1
function_name	the specified field ||| cubrid field	count=1
function_name	minimum error ||| min error	count=1
function_name	page ||| pdf end page	count=1
function_name	containing the databases available ||| dbs	count=2
function_name	xml string into ||| xml	count=1
function_name	msql ||| msql	count=3
namespace	determine whether the ||| splfileobject	count=1
arg_pair	key to ||| string $key	count=1
function	[function_name_1] result ||| [arg_pair_2] [function_name_1]	count=8
function_name	returns one ||| get result	count=2
function_name	a url-encoded query string ||| http build query	count=1
arg_pair	a specific ||| string $feature	count=1
function_name	entries stored in the ||| ldap next entry	count=1
arg_pair	given source string into ||| string $source	count=1
arg_pair	either as a magnitude ||| string $complement string $magnitude	count=1
function_name	tests if the specified ||| testbit	count=1
namespace	the client ||| mongocursorinterface	count=1
arg_pair	posted by ||| string $event_name1 string $event_name2	count=1
function_name	format as one ||| format	count=1
function_name	frame ||| frame	count=1
arg_pair	function specified by execute ||| callable $execute	count=1
function_name	an individual threshold ||| adaptive threshold image	count=2
function_name	the current field ||| current	count=1
function_name	entire command line history ||| list history	count=1
namespace	function except that ||| function	count=1
arg_pair	from the image image ||| resource $image	count=1
return	to return multiple result ||| bool	count=2
function_name	output ||| output	count=6
function_name	yet been [function_name_2] ||| [function_name_1] blob [function_name_2]	count=1
arg_pair	given method and ||| string $method	count=1
arg_pair	by execute ||| callable $execute int $pri	count=1
function_name	image orientation ||| image orientation	count=2
return	of identical candidates ||| int	count=1
namespace	and as a number ||| gmagick	count=1
function_name	a textflow ||| textflow	count=2
function_name	create a new ||| create	count=1
arg_pair	and challenge using ||| resource $privkey string $challenge	count=1
namespace	phar archive ||| phar	count=6
arg_pair	for a server with ||| resource $id	count=1
function_name	[function_name_1] debug ||| [function_name_2] [function_name_1]	count=1
arg_pair	the messages in the ||| resource $imap_stream	count=1
arg_pair	specify a ||| string $fragmenter string $field_override	count=1
arg_pair	open [arg_pair] connection ||| [arg_pair]	count=1
arg_pair	result argument of ||| mixed $fd int $pri	count=1
arg_pair	on the how parameter ||| int $how array $set	count=1
arg_pair	r * x** ||| float $r	count=1
arg_pair	a page in ||| int $page string $dest	count=1
return	dash pattern to ||| bool	count=1
function_name	shouldnt need to ||| set	count=1
arg_pair	locale ||| int $category string $locale	count=1
function_name	for the last tuple ||| last	count=1
function_name	elements ||| size	count=2
function	tags stripped [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	field is ||| field	count=1
function_name	column [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	contact ||| config	count=1
function_name	stored with a ||| metadata	count=1
namespace	of time ||| mongocursor	count=1
function	event specified [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	initiates ||| evstat	count=1
namespace	or not [namespace] is currently ||| [namespace]	count=1
namespace	running task ||| gearmanclient	count=2
function	zone corresponding [arg_pair_2] ||| [function_name_1] country and region [arg_pair_2]	count=1
arg_pair	of htmlentities() in that ||| string $string	count=1
namespace	to send to the ||| mongocursorinterface	count=1
function_name	starts a new pattern ||| pdf begin pattern	count=1
arg_pair	with a connection ||| resource $link_identifier string $password	count=1
function_name	server ||| immortal	count=1
namespace	[namespace] ob_start() ||| [namespace]	count=1
function_name	the client [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the first attribute in ||| first attribute	count=1
function_name	draws a [function_name] the current ||| [function_name]	count=1
arg_pair	associated with ||| resource $connection_id string $qualifier	count=1
function_name	[function_name_1] iv belonging ||| [function_name_2] [function_name_1]	count=4
function_name	the opendir readdir and ||| readdir	count=1
namespace	of time cursors ||| mongocursor	count=1
arg_pair	image from the given ||| int $quality	count=1
function_name	curl [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	record in the ||| yaz record	count=1
arg_pair	fetch an ||| int $rownumber	count=1
arg_pair	the input string ||| int $pad_length	count=1
arg_pair	to a new mailbox ||| string $mailbox	count=1
function_name	mime kopfzeile in the ||| iconv mime	count=1
function	single line [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	in the judy array ||| judy	count=1
function_name	a batch ||| batch size	count=2
function_name	is only ||| state	count=1
arg_pair	to length - 1 ||| resource $zp int $length	count=1
function_name	a file ||| file	count=1
function_name	session cookie [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	the private key ||| bool	count=1
function_name	calculates the cosine ||| cos	count=1
function_name	subclass ||| subclass	count=1
function_name	[function_name_1] fraction ||| [function_name_1] [function_name_2]	count=10
arg_pair	of ||| int $port	count=2
function_name	[function_name_1] decay shift ||| [function_name_2] [function_name_1]	count=1
function_name	busy handler ||| busy	count=1
function_name	closes a blob ||| ibase blob close	count=3
function_name	calculates bitwise and ||| gmp and	count=1
function_name	sets the number ||| set cascade num	count=1
function_name	returns the default ||| yp get default	count=2
function_name	specified return type of ||| get return type	count=1
return	gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() ||| bool	count=1
function_name	scene ||| scene	count=2
arg_pair	specified by parameter pos ||| int $pos	count=1
function_name	frequency at ||| doc frequency	count=1
namespace	imagick ||| imagick	count=6
function_name	is currently active within ||| in	count=1
function_name	[function_name] responses ||| [function_name]	count=3
namespace	[namespace] can ||| [namespace]	count=2
return	node ||| domnode	count=4
function_name	gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() ||| run	count=1
function_name	token secret ||| token	count=2
arg_pair	xpath expression and ||| domnode $contextnode	count=1
namespace	[namespace] last ||| [namespace]	count=1
function_name	results of next query ||| next	count=1
function_name	options set ||| options	count=1
namespace	all ||| eventbuffer	count=1
namespace	retrieves the file ||| directoryiterator	count=1
arg_pair	up or down and ||| int $width int $height	count=1
function_name	returns ||| get mlt min	count=1
function	sets parameters [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	quantum ||| quantum	count=3
function_name	returns minimum version ||| get version	count=3
function_name	parses ||| mailparse msg parse	count=1
function_name	field ||| mysql field	count=3
function_name	returns the actual response ||| get	count=1
namespace	function is not supported ||| function	count=1
arg_pair	image usually of the ||| int $method array $arguments	count=1
arg_pair	delete operations ||| array $write_options	count=1
return	set the ||| string	count=1
function_name	server ||| server by	count=1
arg_pair	subject that ||| string $subject	count=1
arg_pair	multi-value fields if a ||| string $fieldname string $fieldvalue	count=1
function_name	get the connection ||| connection	count=1
arg_pair	in subsequent transformations ||| string $namespace	count=1
function_name	that refer to the ||| odbc foreignkeys	count=1
arg_pair	to htmlspecialchars() in all ||| bool $double_encode	count=1
function_name	sets ||| set min	count=1
return	prepared statement and ||| sqlite3result	count=1
function_name	the decoded quoted printable ||| quoted printable	count=1
function_name	fetches a ||| ibase fetch	count=1
arg_pair	timestamp ||| int $timestamp	count=2
arg_pair	colors in the ||| int $channel	count=1
arg_pair	[arg_pair_1] callback ||| [arg_pair_1] [arg_pair_2]	count=7
function_name	one result [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name] of a ||| is [function_name] of	count=2
return	internal ||| mixed	count=1
arg_pair	to the specified filename ||| string $filename	count=1
arg_pair	a wrapper ||| string $note_value	count=1
return	and ||| array	count=12
function_name	the ||| curl multi strerror	count=1
arg_pair	ann based on ||| resource $ann	count=1
arg_pair	for a table ||| string $table	count=1
namespace	hash in ||| quickhashintstringhash	count=1
function_name	font ||| font	count=5
function_name	repository url and returns ||| svn	count=1
return	of tasks previously ||| bool	count=1
function_name	sql aggregate function ||| aggregate	count=1
function_name	service ||| gupnp service	count=5
function_name	server is working ||| cubrid ping	count=1
return	to save ||| bool	count=1
function_name	specified ftp connection ||| ftp	count=1
arg_pair	mailbox see ||| string $old_mbox	count=1
function_name	[function_name_1] the child ||| [function_name_2] [function_name_1]	count=3
function_name	returns the entry contents ||| get from	count=1
function_name	bias ||| bias array	count=2
function_name	numeric string reference of ||| mb decode numericentity	count=1
namespace	the storage ||| splobjectstorage	count=1
function_name	for the next tuple ||| next	count=1
namespace	v8js ||| v8js	count=1
function_name	sets the number ||| set	count=1
function_name	event handler for the ||| ibase set event handler	count=1
function_name	color space ||| color space	count=4
function_name	current column ||| current column	count=2
arg_pair	whether the entry was ||| int $key int $value	count=1
function_name	frontbase result ||| fbsql data	count=1
function_name	[function_name_1] field pf2 ||| [function_name_1] phrase [function_name_2]	count=1
namespace	receiving numeric ||| function	count=1
namespace	by ||| function	count=23
arg_pair	an option on ||| int $option	count=1
function_name	sets the sarprop ||| fann set sarprop	count=9
arg_pair	the [arg_pair_2] ||| [arg_pair_2] string $msgid2 [arg_pair_1]	count=1
function_name	used with the connection ||| fbsql database	count=1
function	matches color [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	returns an ||| mysqlnd memcache get	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] mode [arg_pair_2]	count=20
function_name	scm of ||| win32 set	count=1
arg_pair	the supplied hash ||| string $hash integer $algo	count=1
namespace	string according to the ||| function	count=1
function_name	name for retrieval ||| yaz	count=1
arg_pair	target within the ||| int $page	count=1
function_name	object from bson ||| bson	count=1
function_name	similar documents ||| mlt	count=1
function_name	output change fraction ||| output change fraction	count=3
function_name	an attribute with ||| attribute	count=2
function_name	an extended json string ||| mongo db\bson\from json	count=1
arg_pair	length bytes from fd ||| int $length	count=1
function_name	current ||| children	count=1
function_name	the [function_name] for ||| set [function_name]	count=1
function_name	training not ||| fann get	count=3
function_name	[function_name_1] autocommit ||| [function_name_1] [function_name_2]	count=1
function_name	the global function ||| function	count=1
function_name	a shared memory segment ||| shm has var	count=1
function_name	[function_name_1] change ||| [function_name_1] [function_name_2]	count=9
function_name	default timezone ||| date default timezone	count=2
namespace	gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| gearmanclient	count=1
namespace	change the values of ||| function	count=1
arg_pair	places ||| float $x float $y	count=1
function_name	returns the hostname of ||| get host	count=1
namespace	the ||| splfixedarray	count=1
arg_pair	posted by ||| string $event_name2	count=1
function_name	[function_name] with ||| oci [function_name] statement	count=1
function	whether the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	can specify a field ||| field	count=1
function_name	get the short ||| get short	count=2
function_name	get_more operation ||| log getmore	count=1
function_name	the mime content ||| mime content	count=2
function_name	removes the o_nonblock flag ||| set block	count=1
namespace	reflection ||| reflection	count=1
arg_pair	fd [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=1
return	stroke color to ||| bool	count=2
function_name	statistics [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] image alpha ||| [function_name_2] [function_name_1]	count=1
namespace	still ||| solrdocument	count=1
arg_pair	of any pixel ||| int $channel	count=1
function_name	whether to send ||| is select	count=1
namespace	with ||| imagick	count=2
namespace	dom ||| domdocument	count=1
arg_pair	sets the gray value ||| resource $psdoc float $gray	count=1
arg_pair	by the bordercolor imagickpixel ||| int $width	count=1
function_name	a valid socket ||| socket	count=1
function_name	[function_name_1] and region ||| [function_name_1] [function_name_2]	count=1
function_name	row identifier [function_name] for ||| special [function_name]	count=1
return	by [return] ||| [return]	count=3
namespace	hash ||| quickhashintstringhash	count=4
arg_pair	address using ||| resource $socket string $address	count=1
arg_pair	in options preset ||| array $options array $params	count=1
function_name	similarity image ||| sub image	count=1
function_name	current cipher by ||| get cipher	count=1
function	an image [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	active database on the ||| fbsql select db	count=1
function_name	numeric ||| numeric	count=2
function_name	[function_name_1] priority levels ||| [function_name_1] base [function_name_2]	count=1
return	as an array ||| array	count=3
function_name	is a built-in type ||| builtin	count=1
arg_pair	object_id ||| string $object_id	count=4
function_name	the list of all ||| mcrypt list	count=1
function_name	sunset time for a ||| sunset	count=1
function_name	von einer mime kopfzeile ||| iconv mime	count=1
return	child before entering ||| void	count=1
arg_pair	given sql statement ||| resource $conn_identifier string $sql	count=1
function_name	debugging in ||| apd set	count=1
function_name	[function_name_1] slop ps3 ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] fc_nfkc_closure property ||| [function_name_2] [function_name_1]	count=1
function_name	single column of the ||| column	count=1
function_name	phar::startbuffering() ||| start buffering	count=1
function_name	stub written in ||| stub	count=1
arg_pair	is the inverse of ||| int $options resource $compcode	count=1
function_name	array of the ||| get args	count=1
function_name	resource socket created by ||| socket	count=1
function_name	or solrquery::facet_sort_count) ||| facet sort	count=1
function_name	a block [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	a row ||| resource $result_id	count=1
function_name	password ||| password	count=2
function_name	effective in the ||| get current	count=1
function	[function_name_1] during ||| [arg_pair_2] [function_name_1]	count=8
function_name	be represented with existing ||| set	count=1
function	[function_name_1] callback function ||| [arg_pair_2] [function_name_1]	count=1
namespace	to the ||| eventbuffer	count=1
function_name	retrieves the [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	given definition ||| function	count=1
function_name	string reference of ||| decode numericentity	count=1
function_name	html ||| load htmlfile	count=1
arg_pair	changes the size of ||| int $columns int $rows	count=1
namespace	defined [namespace] ||| [namespace]	count=3
namespace	exception ||| exception	count=4
function_name	network from a configuration ||| fann create	count=1
function_name	xml string ||| xml	count=2
function_name	if ||| is	count=8
arg_pair	a ||| mixed $keys	count=1
arg_pair	directory handle to be ||| resource $context	count=1
namespace	calculates ||| function	count=1
namespace	in the requested ||| function	count=1
function_name	counts the number of ||| count	count=1
arg_pair	filename ||| mixed $filename	count=1
function_name	full country [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] frame to ||| [function_name_2] [function_name_1]	count=3
arg_pair	supplied in options preset ||| array $options array $params	count=1
function_name	[function_name_1] short ||| [function_name_1] frame [function_name_2]	count=1
arg_pair	on the ||| resource $psdoc	count=1
function_name	create new connection ||| construct	count=1
function_name	total number of ||| total space	count=1
return	this is not ||| bool	count=1
function_name	element is ||| element	count=1
arg_pair	get or set ||| resource $link_identifier	count=1
function_name	float range filter ||| set filter float range	count=1
function_name	[function_name] activation steepnesses ||| fann [function_name] activation	count=1
function_name	register your own extended ||| register node	count=1
return	[return] user defined ||| [return]	count=3
arg_pair	snmp objects starting ||| string $host string $community	count=2
function_name	names ||| names	count=5
namespace	the imagick instance ||| imagick	count=1
function_name	bigram [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	train ||| input train	count=1
return	string ||| array	count=1
return	checks whether the iterator ||| bool	count=1
function_name	discards ||| clean	count=1
function_name	permissions ||| ftp chmod	count=1
function_name	is used to ||| cubrid	count=17
function_name	von einer mime ||| iconv mime encode	count=1
function_name	user-defined functions argument list ||| func get arg	count=1
function_name	the numbering ||| add page label	count=1
function_name	control ||| gupnp control	count=2
return	the factor by ||| float	count=1
function_name	field is ||| fbsql field	count=1
function_name	copy ||| copy	count=2
function_name	current parameter ||| parameter status	count=1
function	removes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	[function_name_1] last internationalization ||| [function_name_2] [function_name_1]	count=4
function_name	image ||| tint image	count=1
function_name	sybase_fetch_row() ||| sybase fetch	count=1
function_name	functions drops a ||| drop	count=1
function_name	removes a variable ||| shm remove	count=1
arg_pair	if no ||| string $collection mixed $id	count=1
arg_pair	caches a variable in ||| string $key mixed $var	count=1
function_name	exchange the current ||| exchange	count=1
return	correlation with [return] entries ||| [return]	count=1
function_name	with a binary patch ||| patch binary	count=1
function_name	bound term ||| bound	count=3
arg_pair	result set listing ||| string $schema	count=2
function_name	the current point ||| pdf	count=1
function_name	bound in the result ||| bound	count=1
function_name	the time [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	socket which must be ||| bool	count=1
arg_pair	linked against libmcrypt 2 ||| string $key	count=2
namespace	function implements ||| function	count=2
arg_pair	character c ||| string $c	count=1
arg_pair	the associated data structures ||| int $textflow	count=1
arg_pair	or set ||| resource $link_identifier	count=1
namespace	checks whether the ||| mongocursorinterface	count=1
function_name	event priority ||| event base priority	count=1
function_name	the ||| state	count=1
return	[return] of the ||| [return]	count=1
function	escapes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	[function_name_1] dictionary ||| [function_name_1] [function_name_2]	count=4
return	file ||| resource	count=1
arg_pair	in dest ||| string $dest int $context	count=1
arg_pair	object and returns ||| resource $connection mixed $object_id	count=1
namespace	to the hash ||| quickhashintstringhash	count=1
arg_pair	object_id ||| string $object_id string $timeout	count=2
function_name	index ||| index	count=3
function_name	the effective real path ||| realpath	count=1
function_name	for this field ||| field	count=1
namespace	positioned on ||| xmlreader	count=1
return	value to ||| bool	count=1
function_name	a sequence ||| seq	count=1
function_name	merges the ||| fann merge	count=1
function_name	the given password ||| password	count=1
function_name	a pdf block ||| pdf	count=1
arg_pair	columns ||| string $key array $columns	count=1
function_name	as event [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	to be made permanent ||| mqseries cmit	count=1
function_name	function closes a ||| close	count=1
function_name	creates a new instance ||| create document fragment	count=1
function_name	commits the outstanding ||| commit	count=1
namespace	document ||| solrinputdocument	count=3
function_name	and [function_name] for ||| [function_name]	count=1
function_name	used ||| database	count=1
namespace	the end of ||| function	count=1
function_name	stroking ||| stroking	count=1
arg_pair	to display a result ||| resource $fdf_document	count=1
function_name	gets the declared ||| get declared	count=2
function_name	were changed ||| mtime	count=1
return	black points to ||| bool	count=1
return	error number for the ||| int	count=1
function	inverse [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	connection ||| string	count=1
function_name	fills and draws ||| fill	count=1
arg_pair	database ||| resource $link_identifier	count=1
return	returns [return] ||| [return]	count=7
function_name	[function_name_1] parameter ||| [function_name_2] [function_name_1]	count=5
return	color to a ||| bool	count=2
arg_pair	locale information ||| int $category string $locale	count=1
return	if you ||| bool	count=1
function_name	of the query ||| escape query chars	count=1
function_name	[function_name_1] stored ||| [function_name_2] [function_name_1]	count=3
function_name	minimum client severity level ||| min client severity	count=1
return	until one of the ||| int	count=1
arg_pair	to the ||| string $name	count=2
function	[function_name_1] specified class ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	database [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	calculates and ||| array	count=1
function_name	the connection ||| get connection	count=1
function_name	last error which occurred ||| error	count=1
function_name	pdf [function_name_2] ||| [function_name_1] fit pdi [function_name_2]	count=1
arg_pair	a prepared statement with ||| resource $connection	count=2
function_name	details ||| details	count=1
function	[function_name_1] on ||| [arg_pair_2] [function_name_1]	count=4
function_name	local tag [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	ssl connection ||| ssl	count=2
function_name	[function_name_1] internal information ||| [function_name_2] [function_name_1]	count=3
function_name	current mysql [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	entry from the ||| mixed $key	count=1
arg_pair	given ||| resource $psdoc	count=2
function_name	[function_name_1] belongs ||| [function_name_2] [function_name_1]	count=4
arg_pair	specified by the object_id ||| string $object_id string $type	count=2
namespace	splfileobject ||| splfileobject	count=1
return	positions cursor [return] ||| [return]	count=1
function_name	yet been ||| ibase	count=1
function_name	fork in ||| fork	count=1
function_name	the specified location ||| imagecolorat	count=1
function_name	node itself ||| outer xml	count=1
namespace	error code ||| function	count=1
function_name	digit ||| digit	count=1
function_name	source node [function_name] applying ||| transform [function_name]	count=1
function	semaphore [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	class method ||| method	count=1
function_name	draws a line on ||| line	count=1
namespace	http ||| eventhttp	count=1
return	end ||| bool	count=2
function_name	stream wrapper ||| stream wrapper unregister	count=2
function_name	font and prepares ||| pdf load font	count=1
return	database components to ||| bool	count=1
function	blocking or [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	the rrd database ||| rrd lastupdate	count=1
function_name	last errstr ||| errstr	count=1
function_name	the current stroke ||| stroke	count=1
function_name	the query syntax ||| query	count=1
arg_pair	is a wrapper for ||| string $note_name	count=1
function	obscure check [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
rest	changes the [function_2] ||| [function_2] [return_1]	count=1
function_name	get the interface ||| get interface	count=2
arg_pair	mask ||| resource $relation int $mask	count=1
namespace	returns the ||| function	count=3
function_name	that represents ||| cubrid	count=1
arg_pair	containing differences between old_file ||| string $old_file	count=1
arg_pair	a directory which ||| string $path	count=1
function_name	transform ||| transform	count=1
function_name	mssql_fetch_array() [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	of the last ||| int	count=2
namespace	function compresses the given ||| function	count=1
function_name	[function_name_1] default ||| [function_name_2] timezone [function_name_1]	count=1
function_name	the time [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	string containing the version ||| version	count=1
arg_pair	the specified mailbox ||| resource $imap_stream string $mailbox	count=1
function_name	any pixel color ||| unique image	count=1
arg_pair	callback for [arg_pair] ||| [arg_pair]	count=1
function	[function_name_1] an snmp ||| function string [function_name_1] [arg_pair_2]	count=3
namespace	asked ||| domnode	count=1
namespace	the string ||| recursivetreeiterator	count=1
namespace	this ||| oauth	count=1
arg_pair	current request indicating an ||| string $details	count=1
arg_pair	in the specified class ||| mixed $class	count=1
function_name	type stream fstream or ||| stream	count=1
namespace	a ||| evloop	count=1
function_name	a large object ||| pg lo	count=2
arg_pair	by the object_id ||| string $timeout	count=1
function_name	when the iteration ||| iteration	count=1
function_name	term to start from ||| terms lower bound	count=1
arg_pair	alignment requirements of the ||| int $width	count=1
function_name	sets per-index weights and ||| set	count=1
function_name	any pixel ||| unique	count=1
arg_pair	of the column ||| int $field_offset	count=1
function_name	and returns it as ||| to	count=1
function_name	resolve file path ||| rplist	count=1
function_name	the maximum supported key ||| key	count=1
namespace	socket ||| zmqsocket	count=2
return	get the ||| void	count=1
function_name	gets several parameters ||| ps get	count=1
function_name	[function_name_1] point with ||| [function_name_1] [function_name_2]	count=1
function_name	to the specified field ||| field	count=1
function_name	[function_name_1] an sqlite ||| [function_name_2] [function_name_1]	count=2
namespace	restarts the ||| evperiodic	count=1
function_name	neurons ||| neurons	count=1
function_name	a dictionary [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] [function_name_2] ||| [function_name_1] blob [function_name_2]	count=9
arg_pair	and associated ||| resource $connection_id string $qualifier	count=1
arg_pair	key with old_value ||| int $old_value	count=1
arg_pair	a ||| string $field	count=1
function_name	the ending line number ||| end line	count=1
function_name	fit the ||| set fit v	count=1
function_name	the specified ||| fetch row	count=1
arg_pair	drain any data from ||| string $data int $max_bytes	count=1
function_name	[function_name_1] phrase ||| [function_name_2] [function_name_1]	count=9
function_name	shared secret is needed ||| radius server secret	count=1
function_name	into array ||| into	count=1
function_name	or virtual pdf document ||| pdf	count=1
function_name	acquires stream representing a ||| stream	count=1
arg_pair	of array1 with ||| array $array1	count=1
arg_pair	option ||| resource $ftp_stream int $option	count=1
function_name	be called after a ||| loop	count=1
function_name	scaling for the page ||| scaling	count=1
namespace	in ||| eventbuffer	count=1
function_name	query [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	does not already exist ||| array $keys	count=1
function_name	radius request has ||| radius send request	count=1
function_name	activation steepnesses ||| get cascade activation steepnesses	count=1
function_name	[function_name] control manager ||| [function_name] service ctrl dispatcher	count=2
namespace	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() ||| gearmanclient	count=1
function_name	a lob object ||| lob2 seek	count=1
arg_pair	statement directly ||| string $statement	count=1
function_name	hyperbolic cosine ||| cosh	count=1
function_name	fetches ||| fetch object	count=2
arg_pair	callback function ||| callable $callback	count=3
return	of the internet host ||| string	count=1
arg_pair	to the browser ||| int $expire	count=1
function_name	[function_name_1] session ||| [function_name_2] [function_name_1]	count=2
arg_pair	mode on a ||| resource $stream bool $mode	count=1
arg_pair	the client ||| bool $silent	count=1
namespace	the server for some ||| mongocursor	count=1
function_name	database on the given ||| db	count=1
arg_pair	multiset attribute of the ||| string $set_element	count=1
arg_pair	a list ||| string $fk_owner string $fk_table	count=1
function_name	[function_name_1] declared interfaces ||| [function_name_1] [function_name_2]	count=1
arg_pair	sets sorting criteria ||| string $criteria	count=1
arg_pair	a command ||| resource $connection	count=1
arg_pair	access the system v ||| int $perm	count=1
return	no ||| bool	count=1
arg_pair	object is ||| object $object	count=1
function_name	collating function within ||| create collation	count=1
function_name	[function_name_1] the increase ||| [function_name_2] [function_name_1]	count=1
function_name	of match [function_name] across different ||| [function_name]	count=1
namespace	file is marked ||| ktaglib_mpeg_audioproperties	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $variable-name [arg_pair_2]	count=1
function_name	constructor ||| constructor	count=1
function	oracle [arg_pair_2] ||| [function_name_1] set action [arg_pair_2]	count=1
function_name	tells if a dictionary ||| dict	count=1
arg_pair	for a type 3 ||| resource $pdfdoc string $glyphname	count=1
function_name	row as ||| ibase fetch	count=1
arg_pair	copies data ||| callable $callback string $data	count=1
arg_pair	to html numeric ||| string $encoding	count=1
arg_pair	as ||| string $extension_name	count=1
namespace	current session and ||| function	count=1
function	inverse [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	success returns the ||| get	count=1
function_name	[function_name_1] file selection ||| [function_name_1] [function_name_2]	count=2
arg_pair	the given [arg_pair_2] ||| overview [arg_pair_1] [arg_pair_2]	count=5
function_name	name of ||| gethostbyaddr	count=1
function_name	has shortcut connections using ||| shortcut	count=1
function_name	sets the [function_name_2] ||| [function_name_1] rprop [function_name_2]	count=4
function	table [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	ftp server and ||| ftp	count=1
function_name	the cascade output change ||| cascade output change	count=1
return	files ||| mixed	count=1
arg_pair	statement which can include ||| resource $connection string $statement	count=1
return	in ||| int	count=1
arg_pair	called immediately after the ||| int $options	count=1
arg_pair	segment of subject ||| string $subject	count=1
function_name	apcu [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	of the specified file ||| int $version	count=1
namespace	yar_client ||| yar_client	count=1
function_name	type base64 or datetime ||| type	count=1
function_name	packet ||| wddx	count=1
function_name	standard ||| standard	count=2
arg_pair	the portion [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	thumbnail by [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	the values of assoc_array ||| array $assoc_array int $options	count=1
return	error ||| string	count=2
function_name	[function_name] of the ||| bits per [function_name]	count=1
function_name	returns query results with ||| get	count=1
function_name	get the permissions ||| perms	count=1
function_name	header string ||| request header	count=1
function_name	problem as ||| report problem	count=1
function_name	to share data between ||| share init	count=1
function_name	method stores an ||| file	count=3
function_name	sets various internal readline ||| readline info	count=1
function_name	the ||| multi strerror	count=1
function_name	dbase database ||| dbase	count=1
function	[function_name_1] user ||| [arg_pair_2] [function_name_1]	count=2
function_name	data from the buffer ||| buffer	count=1
function_name	installs a [function_name_2] ||| [function_name_1] connection [function_name_2]	count=1
namespace	for a task ||| gearmanclient	count=1
arg_pair	embed its data into ||| bool $embed	count=1
function_name	frequency used for ||| frequency	count=1
arg_pair	a rpc call but ||| string $method	count=1
function_name	changing the persistence state ||| persistence	count=1
arg_pair	the first prototype is ||| string $data	count=2
arg_pair	character code to ||| string $encoding	count=1
return	of ||| array	count=1
function_name	[function_name_1] loop ||| [function_name_2] [function_name_1]	count=1
function_name	array containing a range ||| range	count=1
function_name	maximum number ||| highlight max	count=1
function_name	[function_name_1] filter queries ||| [function_name_1] [function_name_2]	count=1
function_name	stroking color ||| cmykstroke	count=2
arg_pair	by a ||| resource $connection int $result_type	count=1
function_name	sets trigram ||| set trigram	count=2
function_name	as clipping ||| pdf clip	count=1
function_name	script is suspended ||| pcntl sigtimedwait	count=1
function_name	socket created ||| socket	count=1
function_name	calculates e raised to ||| trader exp	count=1
function_name	sets the sarprop ||| set sarprop	count=3
namespace	is effective ||| yaf_router	count=1
function_name	of the horizontal scaling ||| horizontal scaling	count=1
namespace	route which is ||| yaf_router	count=1
function	fetches [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	[function_name] rows ||| [function_name]	count=3
function_name	pdf document and ||| pdf	count=1
function_name	scaling for the ||| scaling	count=1
function_name	activation steepnesses ||| get cascade activation steepnesses count	count=1
namespace	image list specified with ||| imagick	count=1
namespace	get the name ||| yaf_router	count=1
arg_pair	of a ||| string $progid	count=1
return	by the given file ||| string	count=1
function_name	sets the transaction ||| set transaction	count=1
function_name	name ||| name	count=38
function_name	time cursors by ||| immortal	count=1
function_name	be ||| maxdb debug	count=2
function_name	property value ||| property value	count=4
arg_pair	given password ||| string $password	count=1
function_name	[function_name_1] parent ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] target frame ||| [function_name_1] [function_name_2]	count=1
function_name	returns ||| get pixel iterator	count=1
function_name	image ||| pdf load image	count=2
function_name	single line ||| fit textline	count=1
namespace	function that failed ||| function	count=1
function_name	if curlopt_returntransfer is an ||| multi getcontent	count=1
function_name	[function_name_1] raw xml ||| [function_name_2] [function_name_1]	count=1
function_name	determines the minimum ||| cascade min	count=1
function_name	new initial ||| translate	count=1
function_name	open a ||| open	count=1
return	a specified area from ||| bool	count=1
function_name	pauses ||| win32 pause	count=1
function_name	establishes a database instance ||| dba open	count=1
function_name	the product of values ||| product	count=1
function_name	new ssl buffer event ||| ssl	count=1
function_name	image matte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	member ||| is	count=2
function_name	previous frontbase [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	the image with a ||| image	count=1
function_name	scm of ||| win32	count=1
function_name	virtual pdf document ||| pdf	count=1
namespace	soapserver object between requests ||| soapserver	count=1
function_name	result identifier ||| fetch object	count=1
arg_pair	[arg_pair_1] the object_id ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	deactivate image [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	callback ||| replace callback	count=2
arg_pair	a ||| string $arg	count=1
function_name	[function_name_1] current ||| [function_name_1] [function_name_2]	count=6
arg_pair	the given image ||| int $num_points int $color	count=1
namespace	of tasks previously added ||| gearmanclient	count=1
function_name	resulting ||| trader add	count=2
namespace	checks this is not ||| oauth	count=1
function_name	set query [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	odbc ||| odbc fetch array	count=2
function_name	fields to ||| fields	count=1
arg_pair	the ||| string $name	count=1
function_name	removes [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	source ||| string $source int $flags	count=1
namespace	stops and ||| evperiodic	count=1
namespace	judy ||| judy	count=1
arg_pair	supplied function ||| callable $user_function	count=1
return	the iterator ||| void	count=2
function_name	decoded quoted [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	style ||| int $style	count=1
function_name	epochs determines the maximum ||| get cascade max	count=1
function_name	name which points ||| name	count=1
function_name	kadm5 library using ||| kadm5 init	count=1
function_name	closes a ||| close	count=1
function_name	from a ||| fetch	count=1
function_name	get the number ||| get num	count=1
function_name	permissible as the ||| idstart	count=1
function_name	text into the file ||| file	count=1
namespace	current iterator ||| splobjectstorage	count=1
function_name	all data from the ||| add buffer	count=1
arg_pair	address ||| string $addr	count=1
function_name	fills the path constructed ||| fill	count=1
namespace	this function retrieves ||| hw_api	count=1
function	[function_name_1] of text ||| [function_name_1] [arg_pair_2]	count=1
function_name	raw [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	the server host name ||| host	count=1
function_name	wait ||| wait	count=3
function_name	that matches color with ||| paint opaque	count=1
function_name	that refer ||| odbc foreignkeys	count=1
return	[return] constraints ||| [return]	count=3
function_name	configuration options ||| ini	count=1
function	[function_name_1] a function ||| [function_name_1] [arg_pair_2]	count=1
function_name	get [function_name_2] ||| [function_name_2] [function_name_1]	count=17
arg_pair	to length bytes ||| int $length	count=1
function_name	return [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function	[function_name_1] [arg_pair_2] ||| [function_name_1] path [arg_pair_2]	count=1
function_name	stub so this method ||| set default stub	count=1
namespace	removes an ||| event	count=1
function_name	split ||| split	count=2
function_name	ends a ||| end	count=1
arg_pair	a new ||| resource $imap_stream	count=2
arg_pair	a two-dimensional ||| int $maxrows	count=1
function_name	inner iterator that ||| inner iterator	count=2
function_name	[function_name_1] color ||| [function_name_1] [function_name_2]	count=17
function_name	image such that ||| sub image	count=1
function_name	the minimum counts ||| min count	count=1
arg_pair	a timestamp and ||| int $timestamp	count=2
function_name	[function_name_1] color image ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] an integer ||| [function_name_1] [function_name_2]	count=1
arg_pair	afterward by ||| string $baseclass string $extendedclass	count=1
function_name	the upper ||| upper	count=2
function_name	base-10 logarithm ||| log10	count=1
return	[return] turns off ||| [return]	count=1
function_name	a socket ||| socket	count=2
function_name	blob for reading ||| blob echo	count=1
function_name	the parent classes ||| parents	count=1
function_name	msql_fetch_array() with ||| msql	count=1
function_name	calls it ||| call	count=1
arg_pair	on a socket ||| mixed $socket	count=1
function_name	add [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	row and then ||| fetch	count=1
arg_pair	the specified protocol as ||| string $service string $protocol	count=1
namespace	gets the error ||| function	count=1
namespace	statement ||| pdostatement	count=4
function_name	current byte index ||| current byte index	count=3
function_name	error code ||| udm errno	count=1
function_name	by csr ||| openssl csr export to	count=1
namespace	original values stored in ||| function	count=1
function_name	creates [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	places an imported pdf ||| pdf fit pdi	count=1
function_name	idle on the server ||| immortal	count=1
function_name	frequency at which words ||| min doc frequency	count=1
arg_pair	the database name used ||| string $database	count=1
function_name	[function_name_1] text ||| [function_name_2] [function_name_1]	count=2
return	values ||| array	count=1
function_name	the last tuple ||| dbplus last	count=1
function_name	iis ||| iis get	count=1
function_name	index ||| iterator index	count=1
function_name	status information to ||| status	count=1
arg_pair	extended version of msql_fetch_row() ||| resource $result int $result_type	count=1
function_name	[function_name_1] highlight ||| [function_name_2] [function_name_1] phrase	count=4
function_name	representing the image obtained ||| imagecreatefromwbmp	count=1
namespace	this function can handle ||| function	count=1
function_name	archives ||| create default stub	count=2
function_name	[function_name] object ||| get [function_name]	count=1
function_name	[function_name_1] declaring ||| [function_name_1] [function_name_2]	count=2
function_name	details ||| describe	count=1
function_name	word spacing ||| word space	count=3
function_name	schema information from database ||| schema	count=2
arg_pair	that the item will ||| int $expiration	count=1
arg_pair	within a directory ||| string $mask	count=1
function_name	open stream resource ||| stream	count=1
function_name	iis is associated ||| iis get	count=1
return	a ||| bool	count=27
arg_pair	ann based ||| array $input_vector	count=1
namespace	and turns ||| function	count=1
function_name	the wait ||| wait	count=1
function_name	return [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	returns a simplexmliterator ||| get children	count=1
function_name	idle [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	non-blocking mode on a ||| bool $mode	count=1
namespace	image from ||| gmagick	count=1
namespace	document when ||| solrdocument	count=1
function_name	the opened ||| mcrypt enc is	count=1
return	gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| bool	count=1
namespace	method checks ||| mongocursorinterface	count=1
function_name	the specified configuration ||| config	count=1
function_name	minimum message [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] haruencoder instance ||| [function_name_2] [function_name_1]	count=1
rest	[return_1] text at ||| [function_2] [return_1]	count=1
function_name	[function_name_1] fields ||| [function_name_2] [function_name_1]	count=6
function_name	oid ||| oid	count=1
function_name	pcos ||| pcos get	count=1
function_name	not to return ||| return	count=1
function_name	token secret and any ||| token	count=2
function_name	rewinds array s internal ||| reset	count=1
function_name	width ||| get unicode width	count=1
arg_pair	pseudo-object from a given ||| resource $result_id int $fetch_flag	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] internal [function_name_2]	count=1
arg_pair	y direction by alpha ||| resource $p float $alpha	count=1
function_name	adds a list of ||| add	count=1
function_name	of ||| offset get	count=1
return	for ||| float	count=1
function_name	argument from a user-defined ||| arg	count=1
function_name	which the socket is ||| get socket	count=1
function_name	size associated ||| size	count=1
function_name	if the class method ||| method	count=1
function_name	a mysqlnd ||| convert to mysqlnd	count=1
function_name	blob for reading ||| ibase blob	count=1
arg_pair	as a pseudo-object from ||| int $fetch_flag	count=1
function_name	the buffer provided ||| add	count=1
arg_pair	str in ||| string $str array $convmap	count=1
function_name	gets the type ||| type	count=1
function_name	epochs determines the maximum ||| fann get cascade max cand	count=1
function_name	in this ||| introspection	count=1
function_name	global last socket error ||| error	count=1
function_name	opened algorithm ||| mcrypt enc get block size	count=1
function	closes file [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	scales the inputs in ||| fann scale	count=1
function_name	row as a ||| fetch	count=1
function_name	extended json string to ||| db\bson\from json	count=1
function_name	field is in ||| mysql field	count=1
function_name	of ||| add buffer	count=2
namespace	set of [namespace] ||| [namespace]	count=2
function_name	end of current eventbuffer ||| buffer	count=1
function_name	launched via the ||| win32 start	count=1
function_name	namespace is declared ||| start namespace decl	count=1
arg_pair	of any ||| int $channel	count=1
function_name	header string ||| header	count=1
function_name	from an odbc query ||| odbc fetch	count=1
function_name	the ||| add buffer	count=4
return	and multiple ||| array	count=1
namespace	stored in ||| function	count=1
function_name	iv belonging to a ||| iv	count=1
return	which is effective ||| string	count=1
function_name	the ||| ldap get	count=1
function_name	the request handle given ||| request	count=1
function_name	append a ||| append body	count=1
function_name	local tag [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	gearmanclient::addtasklowbackground() this call ||| bool	count=1
arg_pair	a ||| string $fieldname	count=1
namespace	stored with ||| pharfileinfo	count=1
namespace	color ||| imagick	count=1
namespace	collection ||| oci-collection	count=3
function_name	tables that refer ||| odbc foreignkeys	count=1
function_name	get the value of ||| get	count=1
function_name	[function_name_1] group ||| [function_name_1] [function_name_2]	count=1
function_name	by ingres_execute() ||| ingres prepare	count=1
function_name	the first ||| ldap first	count=1
function_name	debug ||| debug	count=2
function_name	constants [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	a dictionary exists ||| dict exists	count=2
arg_pair	during [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	stride value that ||| stride	count=1
function_name	dispatch loop finished ||| dispatch loop	count=1
function_name	represented by csr ||| openssl csr export	count=3
function_name	get the current flags ||| flags	count=1
function_name	into a mysqlnd ||| convert to mysqlnd	count=1
function	add a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function	[function_name_1] to a ||| [function_name_1] country and region [arg_pair_2]	count=5
function_name	supported algorithms in the ||| algorithms	count=1
function_name	persistent connection to ||| db2 pconnect	count=1
function_name	from the stream ||| stream	count=1
function_name	an animated image is ||| image ticks per second	count=1
function_name	used ||| fbsql database	count=2
function_name	item ||| item	count=1
arg_pair	content ||| string $mimetype	count=1
function_name	that matches ||| paint	count=1
namespace	xml element ||| simplexmlelement	count=1
function_name	[function_name_1] phrase fields ||| [function_name_1] [function_name_2]	count=2
function_name	attaches another [function_name_2] ||| function bool bbcode [function_name_1] [function_name_2] resource $bbcode_container resource $bbcode_arg_parser	count=1
function_name	get the relative ||| get relative	count=2
function_name	to bson ||| bson	count=1
function_name	adds a link ||| add	count=1
arg_pair	a variable can ||| mixed $var	count=1
namespace	be ||| function	count=1
function_name	[function_name_1] the comment ||| [function_name_2] [function_name_1]	count=3
function	the scale [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	property value integer for ||| property value	count=1
namespace	tasks previously added with ||| gearmanclient	count=1
function_name	returns last warning message ||| get last warning	count=1
arg_pair	registers a php ||| string $name mixed $step_callback	count=1
function_name	[function_name_1] base type ||| [function_name_2] [function_name_1]	count=4
function_name	normalized ||| normalized	count=1
return	is only used by ||| mongoid	count=1
arg_pair	to htmlspecialchars() ||| string $encoding bool $double_encode	count=1
namespace	by any ||| function	count=1
namespace	get the current ||| harupage	count=2
arg_pair	the given image ||| int $quality	count=1
function_name	readline ||| readline	count=3
function_name	layers ||| layers	count=2
function_name	[function_name_1] textflow ||| [function_name_2] [function_name_1]	count=1
function_name	textflow ||| textflow	count=4
arg_pair	sets an option ||| resource $sh int $option	count=1
namespace	gearmanclient::addtasklow() ||| gearmanclient	count=1
arg_pair	memcached::get() except that the ||| callable $cache_cb float $cas_token	count=1
return	of file ||| bool	count=1
function_name	[function_name_1] the weight ||| [function_name_2] [function_name_1]	count=1
arg_pair	color value [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	socket resource socket ||| socket	count=1
return	object to the ||| bool	count=1
function_name	line ||| setlinewidth	count=1
function_name	turns ||| disable	count=1
function_name	by common shells ||| glob	count=1
function_name	[function_name_1] space ||| [function_name_1] [function_name_2]	count=4
function_name	selects ||| maxdb select db	count=2
namespace	registered ||| oauthprovider	count=1
arg_pair	the result ||| resource $result int $field_offset	count=1
function_name	[function_name_1] comment of ||| [function_name_2] [function_name_1]	count=1
function_name	state variable ||| state variable	count=2
function_name	response from the ||| response	count=1
function_name	function is ||| set state	count=1
function_name	defined functions ||| functions	count=2
function_name	returns the type of ||| filetype	count=1
function_name	[function_name] data ||| xml [function_name] data	count=1
return	a node ||| domnode	count=2
function_name	liquid ||| liquid	count=1
function_name	enable ldap pagination ||| ldap	count=1
return	the server for some ||| mongocursor	count=1
function_name	semaphore with the ||| sem	count=1
function_name	read a ||| query read	count=1
return	causes a fetch ||| string	count=1
function_name	from [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	one [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	the current stroking color ||| cmykstroke	count=1
function_name	not morelikethis results ||| mlt	count=1
function_name	debug output ||| debug	count=2
namespace	idle on the ||| mongocursor	count=1
function_name	the horizontal ||| horizontal	count=2
function_name	computes the intersection ||| array uintersect assoc	count=1
function_name	connection rate used when ||| get connection rate	count=1
function_name	[function_name] properties ||| [function_name]	count=1
arg_pair	the ||| bool $silent	count=1
arg_pair	hash implements the ||| string $hash	count=1
return	host name ||| string	count=1
function_name	an odbc query ||| odbc fetch	count=1
function_name	is a primary ||| primary	count=1
function_name	this function ||| set	count=1
function_name	and returns ||| compare	count=1
function_name	stream resource [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	and ||| mongocollection	count=1
arg_pair	a ||| resource $imap_stream	count=2
namespace	nsapi-specific function ||| function	count=1
function_name	[function_name_1] mode ||| [function_name_1] lob [function_name_2]	count=1
function_name	a [function_name] treated ||| add facet date [function_name]	count=1
function_name	activation steepnesses in the ||| fann get cascade activation steepnesses count	count=1
function_name	client and specified connection ||| sqlsrv client	count=1
arg_pair	data from the ||| string $data	count=1
function_name	socket resource socket created ||| socket	count=1
function_name	from a given result ||| object	count=1
namespace	hash ||| quickhashinthash	count=4
function_name	row from ||| fetch row	count=1
arg_pair	associate data ||| mixed $data	count=1
function_name	the current page ||| pdf	count=1
function_name	get the next ingres ||| ingres next	count=1
arg_pair	a ||| resource $connection string $stmtname	count=2
return	is used in the ||| int	count=1
function_name	sets ||| set terms upper	count=1
arg_pair	called whenever a ||| resource $proxy	count=1
function_name	filter query determines which ||| add expand filter query	count=1
return	of identical ||| int	count=1
function_name	method exists ||| method exists	count=2
function_name	the whole ||| savebody	count=1
function_name	returns the value ||| get	count=2
function_name	span the entire ||| normalize	count=1
function_name	an empty ||| string	count=1
function	[function_name_1] a country ||| [function_name_1] code [arg_pair_2]	count=1
function_name	[function_name_1] transformation matrix ||| [function_name_1] [function_name_2]	count=4
function_name	been [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	number [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	gets an ||| get	count=3
arg_pair	the result-set from ||| int $type	count=1
function	[function_name_1] query result ||| [arg_pair_2] [function_name_1]	count=1
function_name	unstable ||| set unstable	count=1
arg_pair	data ||| string $data int $level	count=1
function_name	phrase [function_name_2] ||| [function_name_2] [function_name_1]	count=18
function_name	pkcs#12 file format ||| openssl pkcs12 export	count=1
arg_pair	to override the current ||| int $n	count=1
function_name	comments and ||| strip	count=1
return	while ||| bool	count=1
arg_pair	the message ||| bool $serialize	count=1
arg_pair	the given pattern ||| string $pattern	count=1
function_name	[function_name] fragmenter can ||| get [function_name]	count=3
arg_pair	region of the ||| int $x int $y	count=1
function_name	character ||| char	count=2
function_name	fc_nfkc_closure property string for ||| fc nfkc closure	count=1
namespace	after remaining idle on ||| mongocursor	count=1
function	[function_name_1] challenge using ||| [arg_pair_2] [function_name_1]	count=1
function_name	change ||| change	count=3
function_name	rename ||| rename	count=1
arg_pair	of working copy ||| int $flags	count=1
return	has no more ||| bool	count=1
return	the ||| string	count=21
function_name	[function_name] of ||| per [function_name]	count=1
function_name	opened or not when ||| opened	count=1
function_name	[function_name_1] current byte ||| [function_name_1] [function_name_2]	count=1
function_name	a subset of ||| fann subset	count=1
function_name	stream ||| stream socket client	count=2
function_name	active sub ||| inner	count=1
function_name	oil painting ||| oil paint image	count=1
return	returns the complete ||| array	count=1
function_name	the request authenticator is ||| radius request authenticator	count=1
function_name	[function_name_1] font ||| [function_name_1] [function_name_2]	count=3
arg_pair	a class ||| string $class	count=1
function_name	from an odbc ||| odbc fetch array	count=1
arg_pair	in dest ||| int $context	count=1
arg_pair	a ||| string $encoding string $separator	count=1
arg_pair	[arg_pair_1] up to ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	up or ||| int $width int $height	count=1
function_name	haruencoder instance ||| encoder	count=1
function_name	functions by ||| function	count=1
return	element ||| void	count=1
return	determine whether ||| bool	count=1
function_name	of any pixel color ||| unique	count=1
arg_pair	and returns the ||| bool $before_needle	count=1
function	[function_name_1] between old_data ||| [arg_pair_2] [function_name_1]	count=2
function_name	log() returns log ||| log	count=1
arg_pair	specified by hostname ||| string $hostname	count=2
function_name	query ||| mysql query	count=1
function_name	add the ||| add vars	count=1
function_name	the ||| key size	count=1
function	rdd database [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	messages in the ||| resource $imap_stream	count=1
return	and retrieve a ||| string	count=1
function_name	re- initializes eio ||| eio init	count=2
function_name	specific constant defined ||| constant	count=1
function_name	value of a ||| value	count=1
return	archive from an ||| array	count=1
arg_pair	fetch an ||| resource $result int $rownumber	count=1
namespace	number rule ||| harupage	count=1
function_name	this function is only ||| state	count=1
function_name	gets the error string ||| bzerrstr	count=1
namespace	function for ||| function	count=2
function_name	this function is ||| set	count=1
function_name	query ||| set query	count=1
function_name	[function_name_1] event resource ||| [function_name_2] [function_name_1]	count=2
function_name	specified status ||| add task status	count=1
function_name	[function_name_1] cookie ||| [function_name_1] get [function_name_2]	count=1
arg_pair	with a ||| string $dir string $prefix	count=1
namespace	that the [namespace] failed ||| [namespace]	count=1
namespace	page ||| harupage	count=5
function_name	stream to buffer ||| stream	count=1
function_name	creates a dictionary using ||| dict	count=1
arg_pair	data by the ||| resource $introspection	count=1
namespace	a color image ||| gmagick	count=1
function_name	[function_name_1] inner ||| [function_name_1] [function_name_2]	count=3
function_name	boost value for ||| get boost	count=1
function_name	current parameter setting ||| parameter status	count=1
function_name	a batch ||| log write batch	count=1
function_name	sets the minimum error ||| sybase min error	count=1
function_name	whole [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	for the specified range ||| string $prefix	count=1
function_name	php [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	globally [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	train [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	using nonzero winding ||| bool	count=1
function_name	an html document ||| save htmlfile	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] place pdi [function_name_2]	count=8
namespace	file is a directory ||| splfileinfo	count=1
function_name	merges ||| merge	count=4
arg_pair	the ||| string $field	count=1
namespace	entry ||| splobjectstorage	count=1
function_name	sort ||| uksort	count=1
arg_pair	code to html numeric ||| bool $is_hex	count=1
function_name	data store ||| apcu add	count=1
return	a result set ||| string	count=1
function_name	[function_name_1] job servers ||| [function_name_2] [function_name_1]	count=1
function_name	highlight ||| highlight	count=2
return	characters ||| string	count=5
function_name	[function_name_1] maximum ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] specified distortion ||| [function_name_1] image [function_name_2]	count=1
function_name	database on the server ||| db	count=1
return	sets the ||| void	count=1
arg_pair	to memcached::getmulti() ||| int $flags	count=1
function_name	throw [function_name] in ||| [function_name]	count=1
namespace	parameter expects an array ||| reflectionparameter	count=1
namespace	code ||| function	count=1
arg_pair	color with the color ||| float $fuzz int $channel	count=1
function_name	scales the outputs ||| scale output	count=1
arg_pair	on the specified remote ||| resource $ftp_stream	count=1
arg_pair	of snmp objects ||| string $host string $community	count=2
arg_pair	[arg_pair_1] whenever a ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	a ||| fetch	count=3
function_name	elements ||| elements by tag	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] country code [function_name_2]	count=1
function_name	copies data from file ||| pgsql copy from file	count=1
arg_pair	to ann ||| resource $ann	count=1
function_name	read the structure ||| bodystruct	count=1
function_name	[function_name_1] specified ||| [function_name_2] [function_name_1]	count=2
function_name	mime mail resource ||| mailparse msg	count=1
namespace	compiles and ||| v8js	count=1
function	[function_name_1] text on ||| [function_name_1] [arg_pair_2]	count=1
function_name	is effective ||| get	count=1
arg_pair	a wrapper for apaches ||| string $note_value	count=1
namespace	and returns the result ||| function	count=1
function_name	ending ||| get end	count=1
function	postgresql [arg_pair_2] ||| [function_name_1] field is null [arg_pair_2]	count=2
arg_pair	hash implements the algorithm ||| string $hash integer $algo	count=1
arg_pair	listening clients that ||| int $type mixed $value	count=1
function_name	linear least ||| least	count=2
function_name	the next entry ||| readdir	count=1
namespace	stops and restarts ||| evperiodic	count=1
function_name	attaches ||| put	count=2
return	is only used ||| mongoid	count=1
function_name	any pixel that matches ||| opaque paint	count=1
namespace	user ||| mongoid	count=1
function_name	column ||| bind column	count=2
arg_pair	information provided by dn ||| resource $privkey	count=1
arg_pair	filename ||| resource $mimemail mixed $filename	count=1
arg_pair	left ||| mixed $left	count=3
function_name	wish to request ||| request	count=1
function_name	sets the ||| set cascade	count=1
function_name	not for ||| disable	count=1
arg_pair	differences between old_data ||| string $old_data	count=1
function_name	default external ||| libxml set external	count=1
arg_pair	method scales the ||| int $width int $height	count=1
namespace	tidy object ||| tidy	count=1
function_name	gets a list of ||| get	count=2
function_name	returns the [function_name_2] ||| ziparchive string [function_name_1] [function_name_2] index int $index int	count=2
function_name	a hidden ||| hidden	count=1
arg_pair	up to length ||| int $length	count=1
arg_pair	of the ||| int $max_neurons int $neurons_between_reports	count=1
function_name	event ||| loop	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get error [function_name_1]	count=3
return	real hostname and ||| array	count=1
function_name	from a single column ||| array column	count=1
arg_pair	the ||| resource $id string $syntax	count=1
namespace	for production ||| oauth	count=1
arg_pair	if no database is ||| string $collection mixed $id	count=1
namespace	and ||| oauth	count=1
function_name	inspected ||| mysqlnd qc	count=1
return	used by ||| mongoid	count=1
function_name	span ||| stretch	count=1
function_name	refers ||| posix isatty	count=1
function_name	number of the ||| number	count=1
function_name	target and is an ||| image	count=2
arg_pair	for the ||| int $mode	count=1
function_name	all elements with a ||| elements by	count=1
function_name	[function_name_1] root device ||| [function_name_2] get relative [function_name_1]	count=1
function_name	the normal date ||| date string	count=1
function_name	[function_name] field ||| [function_name] missing	count=2
namespace	color image ||| gmagick	count=1
function_name	deletes a named ||| pdf delete pvf	count=1
namespace	eventutil is ||| eventutil	count=1
arg_pair	resource specified by hostname ||| string $hostname int $port	count=1
function_name	[function_name_1] into file ||| [function_name_1] [function_name_2]	count=1
function_name	sets the ||| set gravity	count=1
arg_pair	filtertype ||| int $filtertype	count=1
function_name	is used ||| cubrid connect with	count=1
arg_pair	word is ||| string $word	count=1
function_name	[function_name_1] to highlight ||| [function_name_2] [function_name_1] phrase	count=6
return	to determine whether a ||| bool	count=1
function_name	of the path ||| close path	count=1
function_name	nth [function_name] ||| gmp [function_name]	count=3
arg_pair	or something in an ||| mixed $array_or_countable	count=1
function_name	whether to send the ||| is select	count=1
function_name	language described/referred ||| set ordering	count=1
function_name	[function_name_1] xml ||| [function_name_2] get current [function_name_1]	count=2
function	raise [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	posted by the ||| string $event_name1 string $event_name2	count=1
function_name	color image ||| image	count=2
function_name	been ||| ibase	count=1
function_name	route by name ||| route	count=1
namespace	for the specified function ||| function	count=1
function_name	can change [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	cursor to the next ||| to next	count=1
function_name	the end of current ||| buffer	count=1
arg_pair	the item ||| int $expiration	count=1
arg_pair	gets the contents of ||| resource $p int $doc	count=1
arg_pair	[arg_pair_1] of haystack ||| [arg_pair_2] string $needle [arg_pair_1]	count=3
function_name	name as ||| enum	count=1
namespace	[namespace] is useful ||| [namespace]	count=1
function_name	the image ||| get image	count=2
function_name	[function_name_1] error threshold ||| [function_name_2] [function_name_1]	count=5
function_name	and add the result ||| add	count=1
arg_pair	whenever a ||| string $value	count=1
function_name	the minimum message severity ||| min message severity	count=1
function_name	used as image-mask ||| mask	count=1
function_name	query syntax ||| query chars	count=1
function_name	deletes the ||| delete	count=2
function_name	[function_name] if ||| [function_name]	count=3
function_name	point is a space ||| space	count=1
arg_pair	[arg_pair_1] given ||| [arg_pair_2] [arg_pair_1]	count=5
function_name	tasks in ||| run tasks	count=1
function_name	function removes an ||| remove	count=1
function_name	http header previously set ||| header	count=1
function_name	nsapi [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	retrieves ||| mongolog	count=1
function_name	value representing the type ||| type	count=1
return	number set by the ||| int	count=1
function	the flags [arg_pair_2] ||| function int uopz [function_name_1] [arg_pair_2]	count=2
namespace	get or set ||| function	count=1
function_name	current eventbuffer ||| buffer	count=1
function_name	returns the client ||| get	count=1
function_name	user ||| set state	count=2
function_name	returns the ||| get host	count=1
arg_pair	hash implements the ||| integer $algo	count=1
function_name	[function_name_1] disposal method ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2] mysqlnd_connection $connection	count=2
function_name	information ||| metadata	count=1
function_name	displays ||| newt draw root	count=1
function_name	character spacing ||| char space	count=2
function_name	the phar::startbuffering() method can ||| buffering	count=1
function_name	creating a ||| get active object	count=1
function_name	converted to uppercase ||| mb strtoupper	count=1
function_name	a field to ||| field	count=1
function_name	given xml ||| xml	count=2
arg_pair	such that an exact ||| imagick $imagick array $offset	count=1
function_name	region [function_name] combo ||| [function_name]	count=1
function_name	determines the maximum number ||| cascade max	count=1
namespace	escaped for safe inclusion ||| sqlite3	count=1
function_name	sets the weight multiplier ||| set cascade weight multiplier	count=1
arg_pair	value for an enumerated ||| int $property	count=1
return	[return] queue manager ||| [return]	count=3
function_name	be used ||| metadata	count=1
function_name	specific binary attribute ||| attr	count=1
function_name	function parses the html ||| load htmlfile	count=1
namespace	the session storage and ||| sessionhandlerinterface	count=1
function_name	[function_name_1] reflectionparameter ||| [function_name_2] [function_name_1]	count=1
arg_pair	statement directly ||| resource $connection string $statement	count=1
function_name	executes [function_name_2] ||| [function_name_1] bulk [function_name_2]	count=2
function_name	last posix ||| posix get last	count=1
function_name	or set ||| fbsql	count=1
namespace	shell function and having ||| function	count=1
function_name	[function_name] numerical ||| [function_name]	count=1
function	status callback [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	call starts running the ||| run	count=1
arg_pair	functionally equivalent to memcached::getmulti() ||| string $cas_tokens int $flags	count=1
function_name	by which the regex ||| regex	count=2
arg_pair	the name of the ||| int $field_number	count=1
function_name	structure of a ||| bodystruct	count=1
function_name	most recent ||| last	count=1
function_name	contains personal ||| personal	count=1
namespace	the ||| directoryiterator	count=1
function	deletes a ||| unlink resource $sftp	count=1
arg_pair	a reconstructed ||| int $metric	count=1
function_name	for some ||| immortal	count=1
function_name	can contact ||| config	count=1
function_name	the external attributes of ||| set external attributes	count=2
function	[function_name_1] str in ||| [arg_pair_2] [function_name_1]	count=2
function_name	retrieves metadata ||| field metadata	count=1
function_name	agent specified ||| snmpwalk	count=1
function	order number [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	php internally it shouldnt ||| state	count=1
function_name	open ||| open	count=2
return	file pointer ||| string	count=1
function_name	or information [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	all the mailboxes ||| string $ref	count=1
namespace	turns off ||| oauth	count=1
function_name	persistent connection ||| pconnect	count=1
return	true if ||| bool	count=1
function	an arbitrary [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	copies data ||| pgsql copy from	count=1
function_name	returns an array of ||| get	count=1
function_name	will save ||| save	count=1
function_name	begins after ||| begin	count=2
namespace	[namespace] an ||| [namespace]	count=1
function_name	collating function ||| create collation	count=1
function_name	current boost value ||| get boost	count=1
function_name	class which will be ||| class	count=1
arg_pair	unicode domain ||| string $domain int $options	count=1
function_name	[function_name] of ||| workload [function_name]	count=2
arg_pair	snmp objects [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
arg_pair	style [arg_pair_2] ||| [arg_pair_1] int $first_num [arg_pair_2]	count=4
function_name	the column names of ||| column names	count=1
function_name	closes ||| ps close	count=1
return	previously added with gearmanclient::addtask() ||| bool	count=1
function_name	[function_name_1] [function_name_2] pixels into ||| [function_name_1] [function_name_2]	count=1
return	shouldnt need to ||| mongoid	count=1
function_name	it shouldnt need to ||| state	count=1
arg_pair	specified index to newval ||| mixed $newval	count=2
namespace	save the contents of ||| function	count=1
function	[function_name_1] [arg_pair_2] subject to various options ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] message reported ||| [function_name_2] [function_name_1]	count=2
function_name	escape the given ||| escape string	count=1
namespace	returns the [namespace] value of ||| [namespace]	count=1
arg_pair	large the ||| resource $ann	count=1
function_name	will throw [function_name] in most ||| [function_name]	count=1
function_name	maximum number ||| set highlight max alternate	count=1
arg_pair	afterward by ||| string $extendedclass	count=1
arg_pair	dn which [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	given method ||| string $data string $method	count=1
arg_pair	on ||| resource $connection	count=1
function_name	cipher initialization [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	constructs a ||| mixed $data string $name	count=1
arg_pair	statement is ||| mixed $field	count=1
function_name	stack trace ||| trace	count=2
function_name	diff ||| diff	count=3
arg_pair	name of the ||| resource $result int $field_offset	count=3
function	attribute [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	file pointer apply ||| resource $sourcefp resource $destfp	count=1
namespace	in subsequent ||| function	count=1
arg_pair	username and password ||| string $username string $password	count=1
function_name	last error message ||| mysqli error	count=1
function_name	paradox file into ||| px	count=1
function_name	3d model ||| 3ddata	count=1
function_name	calculate input scaling parameters ||| set input scaling params	count=1
function_name	[function_name_1] message ||| [function_name_1] [function_name_2]	count=8
function_name	a defined id ||| id	count=1
function_name	used to escape ||| escape	count=1
function_name	property for a ||| int property	count=1
function_name	a wddx packet ||| wddx serialize	count=1
function_name	[function_name_1] time for ||| [function_name_1] [function_name_2]	count=2
function_name	file ||| set metadata	count=4
function_name	cache content ||| wincache	count=1
arg_pair	old_data string and new_data ||| string $new_data	count=1
namespace	the end ||| eventbuffer	count=1
function_name	sybase result associated ||| sybase	count=1
function_name	with one [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	the currently stored ||| apc	count=1
function_name	stub so ||| set stub	count=1
function_name	set ||| set drop	count=1
arg_pair	a ||| mixed $data	count=1
arg_pair	a list ||| string $fk_owner	count=1
arg_pair	as a timestamp ||| int $format	count=2
arg_pair	and [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	the tables ||| db2 tables	count=1
function_name	specified events is ||| ibase wait event	count=1
function_name	only be used ||| set metadata	count=1
function_name	the sunrise time for ||| date sunrise	count=1
arg_pair	data from ||| string $data int $max_bytes	count=1
namespace	class the ||| reflectionclass	count=1
namespace	the error number and ||| function	count=1
function_name	the nth [function_name] ||| gmp [function_name]	count=3
arg_pair	a timestamp ||| int $format	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] phar [arg_pair_2]	count=3
function_name	via ||| start	count=1
function_name	assumed to ||| utf8	count=1
arg_pair	feed it to ann ||| resource $ann	count=1
function_name	null [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	returns min parameter ||| get min	count=2
function_name	[function_name] of the ||| per [function_name]	count=1
arg_pair	an array of arguments ||| array $args	count=1
function_name	[function_name] soapserver ||| get [function_name]	count=1
arg_pair	to a ||| string $dsn	count=1
function_name	returns headers for ||| headers	count=1
function_name	set the activation ||| set activation	count=3
arg_pair	a ||| string $class	count=2
namespace	the statistics of ||| function	count=1
function_name	gets the [function_name_2] ||| [function_name_2] [function_name_1]	count=52
return	for maxdb_options() and ||| resource	count=1
function_name	external entity loader ||| libxml set external entity loader	count=1
function_name	[function_name_1] uses ||| [function_name_2] [function_name_1]	count=1
arg_pair	override the ||| int $n	count=1
function_name	sets the sarprop temperature ||| fann set sarprop temperature	count=1
arg_pair	cookie value ||| string $value	count=1
return	be used to ||| void	count=2
function_name	html ||| save htmlfile	count=2
function_name	would match ||| fnmatch	count=1
function	replaces the [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	at the given ||| resource $psdoc	count=2
arg_pair	if the word ||| string $word	count=2
function_name	handler which ||| handler	count=1
function_name	boost [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	deletes a named virtual ||| pdf delete	count=1
arg_pair	handle ||| resource $filehandle string $filename	count=1
namespace	constructor creates soapclient ||| soapclient	count=1
function_name	[function_name_1] unicode name ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] garbage ||| [function_name_2] [function_name_1]	count=1
function_name	value of word spacing ||| word space	count=1
arg_pair	match the given pattern ||| string $pattern	count=1
function_name	postgresql [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	fit the ||| set fit	count=2
function_name	frequency below which terms ||| min term frequency	count=1
function_name	steepnesses ||| steepnesses	count=2
function_name	set the external ||| set external	count=2
function_name	user function as event ||| ibase set event	count=1
function_name	sets the activation function ||| fann set activation function	count=2
namespace	of the ||| function	count=17
function_name	terminates a glyph definition ||| pdf end glyph	count=1
function	connect [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	entry is valid ||| valid	count=1
function_name	of any pixel ||| image	count=1
function_name	bytea ||| bytea	count=1
function_name	transforms ||| transform	count=2
function_name	the width of ||| width	count=1
namespace	resultset ||| tokyotyrantquery	count=1
function_name	tables that refer to ||| odbc foreignkeys	count=1
function_name	valid to the ||| get	count=1
function_name	the activation [function_name_2] ||| [function_name_2] [function_name_1]	count=23
function_name	simulates motion [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	given source ||| string $source	count=1
function_name	writes data from the ||| write	count=1
return	must be ||| bool	count=1
function_name	[function_name_1] image by ||| [function_name_2] [function_name_1]	count=1
arg_pair	a b where ||| gmp $a gmp $b	count=1
arg_pair	with at middle point ||| resource $psdoc float $x	count=1
arg_pair	from the given image ||| int $quality	count=1
return	of the patterns ||| int	count=1
arg_pair	draws the character c ||| int $color	count=1
arg_pair	a given method and ||| string $data string $method	count=1
arg_pair	it in dest ||| string $dest	count=1
function_name	curl ||| curl	count=3
function_name	gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| run	count=1
namespace	defined with fdf_save_file() in ||| function	count=1
function_name	encoding the content read ||| xfer encoding	count=1
return	for some amount ||| mongocursor	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] query [function_name_2]	count=4
function	reference of [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	values of array1 ||| array $array1	count=3
function_name	completes all ||| commit	count=1
function	function [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	the message queue ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] code [arg_pair_2]	count=6
namespace	set ||| sqlite3stmt	count=1
function_name	has shortcut connections ||| shortcut array	count=1
function_name	pixel that matches ||| opaque paint	count=1
arg_pair	the name of the ||| int $field_offset	count=3
arg_pair	up to length - ||| int $length	count=1
function_name	returns the ||| sybase get	count=1
function_name	candidate [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	by the data source ||| resource $connection_id	count=1
function_name	[function_name_1] the page ||| [function_name_1] [function_name_2]	count=3
namespace	an image by scaling ||| gmagick	count=1
function_name	to a specific row ||| db2 fetch row	count=1
function_name	as ||| object	count=1
function	[function_name_1] posted by ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	columns ||| array $columns	count=1
function_name	[function_name_1] domain of ||| [function_name_1] [function_name_2]	count=2
function	query on [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	ends ||| ps end page	count=2
return	should not be ||| string	count=1
function_name	client libraries ||| client	count=1
function_name	a class ||| class	count=1
arg_pair	to an ibm ||| array $options	count=1
function_name	data from the ||| add buffer	count=1
arg_pair	result set ||| resource $stmt	count=1
function_name	loads an xml ||| load	count=1
return	using to generate ||| string	count=1
namespace	the [namespace] ip2long() generates ||| [namespace]	count=1
function_name	buffer provided ||| buffer	count=1
function_name	connection rate used when ||| connection rate	count=1
function_name	the directory ||| dir	count=1
function_name	is used to get ||| cubrid	count=11
arg_pair	lists ||| string $owner string $name	count=1
arg_pair	part of ||| int $ndocs array $callbacks	count=2
function_name	which can [function_name] used later ||| event base [function_name]	count=1
function_name	host name ||| get host info	count=1
function_name	[function_name] url ||| [function_name]	count=3
function_name	step-size is a ||| rprop delta	count=1
function_name	a hidden member ||| is hidden	count=2
function_name	servers ||| servers	count=2
namespace	current event loop ||| evloop	count=5
function_name	[function_name_1] names ||| [function_name_2] [function_name_1]	count=7
function_name	last tuple ||| last	count=1
function_name	created with db2_connect() ||| db2	count=1
function_name	nsapi response [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	that ||| int $type mixed $value	count=1
arg_pair	a php variable ||| string $json	count=1
namespace	must be called after ||| evloop	count=1
function_name	the target [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	computes the difference of ||| udiff assoc	count=1
function	[function_name_1] delete operations ||| [function_name_1] [arg_pair_2]	count=1
function_name	passed in ||| passed	count=1
function_name	the sunrise ||| sunrise	count=1
function_name	name ||| by name	count=2
arg_pair	of ||| int $height int $imagetype	count=1
function_name	yet been closed by ||| ibase	count=1
function_name	containing the oid of ||| oid	count=1
function_name	sets the linejoin parameter ||| pdf setlinejoin	count=1
arg_pair	embed its ||| bool $embed	count=1
function_name	learning rate is used ||| get learning rate	count=1
arg_pair	the size of ||| int $columns int $rows	count=1
namespace	set of monitored ||| event	count=1
function_name	reduce the array to ||| reduce	count=1
arg_pair	in dest file ||| int $context	count=1
function_name	ingres ||| ingres unbuffered	count=1
arg_pair	constant as ||| string $class string $constant	count=1
arg_pair	the server thats ||| string $database_name resource $link_identifier	count=1
arg_pair	options that affect ||| array $options	count=1
namespace	quickhashintstringhash ||| quickhashintstringhash	count=1
function_name	as ||| ibase	count=1
arg_pair	on the specified ||| resource $stream_or_context array $params	count=1
function_name	returns true if ||| module is	count=1
namespace	route which is effective ||| yaf_router	count=1
arg_pair	a directory handle ||| string $path	count=1
function_name	access to the next ||| next	count=1
function_name	the candidate [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	of the apache environment ||| apache setenv	count=1
arg_pair	a function at runtime ||| string $class string $function	count=1
function_name	in the id3 ||| id3	count=1
namespace	last connection attempt ||| solrclient	count=1
function_name	the default external ||| external	count=1
function_name	message [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	function checks ||| function	count=1
arg_pair	supplied filename ||| mixed $filename	count=1
arg_pair	snmp object [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	the route ||| current route	count=1
function_name	scale ||| fann scale	count=2
function_name	tests if the ||| testbit	count=1
function_name	[function_name_1] line number ||| [function_name_1] [function_name_2]	count=6
function_name	to ||| escape string	count=1
arg_pair	to use mapreduce ||| array $options	count=1
function_name	file that ||| set metadata	count=1
function_name	called to prepend ||| prepend	count=1
arg_pair	number of snmp objects ||| string $community	count=2
function_name	[function_name_1] paradox database ||| [function_name_2] [function_name_1]	count=4
return	that cannot be ||| void	count=1
function_name	have ||| imap listscan	count=2
function_name	signal indicated ||| pcntl signal	count=1
namespace	whether the algorithm of ||| function	count=1
return	the input buffer ||| bool	count=1
function_name	with type number or ||| number	count=1
function_name	inverse [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	[return] representing ||| [return]	count=1
function_name	levenshtein distance ||| levenshtein	count=1
function_name	root of ||| root	count=1
arg_pair	of the ||| int $green	count=1
function_name	containing the error message ||| error	count=1
arg_pair	operation so that the ||| int $expiration	count=1
arg_pair	by alpha ||| float $alpha	count=1
function_name	adds the ||| add	count=3
function_name	repository ||| svn	count=4
function_name	in ||| run	count=1
function_name	the oracle placeholder name ||| name	count=1
function_name	product ||| product	count=1
function_name	the stream [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] more write ||| [function_name_2] [function_name_1]	count=2
arg_pair	of the ||| int $field_offset	count=3
return	[return] identify ||| [return]	count=3
return	a parameter to ||| bool	count=1
function_name	char object ||| char	count=1
return	name and ||| resource	count=1
function_name	eventbufferevent::connecthost() or an empty ||| string	count=1
arg_pair	is identical to ||| bool $double_encode	count=1
function_name	a fork in ||| loop fork	count=1
function_name	multi handle if ||| curl multi	count=2
arg_pair	key with old_value and ||| string $key int $old_value	count=1
function_name	from the run ||| disable	count=1
function_name	the server for ||| immortal	count=1
namespace	yaf_route_simple ||| yaf_route_simple	count=1
namespace	in subsequent closedir() ||| function	count=1
function_name	[function_name_1] [function_name_2] handler ||| [function_name_1] [function_name_2] handler	count=7
function_name	the last value from ||| last insert	count=1
function_name	discard a blob ||| blob	count=1
function_name	out ||| out	count=3
function_name	a textflow into ||| pdf fit textflow	count=1
function_name	is effective in the ||| get	count=1
function_name	debug info ||| debug info	count=2
namespace	function is identical to ||| function	count=3
function_name	this function closes ||| close	count=1
function_name	facets that were set ||| facets	count=1
return	the programmer when they ||| boolean	count=2
arg_pair	the size of ||| int $columns	count=1
function_name	row ||| fetch	count=15
function_name	starts running the tasks ||| run tasks	count=1
arg_pair	a stream one ||| string $algorithm	count=1
arg_pair	current connection ||| resource $link_identifier	count=1
function_name	php modules version ||| version	count=1
function_name	name from a call ||| name	count=1
function_name	stream ||| get stream	count=3
function	open file [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	executed memcached method ||| memcached	count=1
function	type of the ||| type resource $result	count=1
function_name	column ||| array column	count=2
arg_pair	by the [arg_pair_2] ||| function array imap sort [arg_pair_2] [arg_pair_1]	count=2
function_name	image in the ||| image layers	count=2
arg_pair	with table databases ||| string $key mixed $increment	count=1
arg_pair	specified by assoc_array ||| int $options	count=1
function_name	opens ||| imap open	count=1
function_name	thread ||| thread	count=2
function_name	the name of the ||| get	count=1
namespace	callback function for ||| function	count=1
function_name	[function_name_1] current page ||| [function_name_2] [function_name_1]	count=1
function_name	attributes of an ||| attributes	count=2
function_name	[function_name] of ||| ob end [function_name]	count=1
function_name	cache content and its ||| wincache	count=1
function	extract all [arg_pair_2] ||| bool [function_name_1] [arg_pair_2] bool $overwrite	count=1
function_name	an ||| msql fetch array	count=1
function_name	sets ||| setflat	count=1
arg_pair	in data ||| resource $data	count=1
function_name	the text number ||| get text	count=2
function_name	the buffered [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	binary safe ||| binary	count=1
function_name	number of inputs ||| num	count=1
return	server to return ||| bool	count=2
function_name	or adds ||| pdf add	count=1
function_name	[function_name] s ||| id3 [function_name]	count=2
function_name	opcode cache ||| apc	count=1
function_name	eof is seen ||| expect expectl	count=1
function_name	returns the blob length ||| blob	count=1
function_name	the next [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	using ||| from array	count=1
function_name	with result resource ||| pg result	count=2
function_name	split a string into ||| split	count=1
namespace	move all data ||| eventbuffer	count=1
function_name	request a dictionary ||| request dict	count=3
function_name	user-defined ||| arg	count=1
function_name	root ||| root	count=3
function_name	reading ||| blob	count=1
arg_pair	[arg_pair] a pcos ||| [arg_pair]	count=3
function_name	current mysql daemon ||| mysql list	count=2
function_name	[function_name_1] is ||| [function_name_2] [function_name_1]	count=2
arg_pair	the ||| int $mode	count=3
namespace	operators by the query ||| sphinxclient	count=1
function_name	file size for ||| get size	count=2
function_name	status information on either ||| status	count=1
arg_pair	of text ||| resource $pdfdoc string $text	count=1
function_name	matte ||| matte	count=1
function_name	position of [function_name] ||| cubrid [function_name]	count=1
function_name	the namespace [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	returns a [function_name_2] ||| [function_name_1] [function_name_2] query	count=1
function_name	with result [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sets the idle callback ||| set idle	count=1
function	the file [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	the ||| array $array	count=1
arg_pair	quoting style appropriate to ||| string $string int $parameter_type	count=1
function_name	server without waiting ||| pg send	count=1
function_name	[function_name_1] activation functions ||| [function_name_1] [function_name_2]	count=1
function_name	id returned from ibase_connect() ||| ibase	count=1
namespace	result identifier ||| function	count=1
arg_pair	sets the ||| resource $id	count=1
function_name	retrieve a given tag ||| get tag	count=1
function_name	a new content ||| content new	count=1
arg_pair	stores a ||| resource $pxdoc	count=1
return	is effective in ||| string	count=1
function_name	returns ||| get image	count=1
return	a [return] of the ||| [return]	count=1
function_name	einer mime kopfzeile in ||| iconv mime encode	count=1
function_name	syntax [function_name] check ||| runkit [function_name]	count=2
arg_pair	for use as a ||| string $name	count=1
function_name	frontbase result associated with ||| fbsql data	count=1
function_name	odbc_exec() ||| odbc	count=2
namespace	prepared ||| mysqlnduhpreparedstatement	count=1
function_name	the permissions ||| perms	count=1
function_name	sunrise time for a ||| sunrise	count=1
function_name	property ||| int property	count=2
function_name	mysql [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	supported on table databases ||| put nr	count=1
return	are suitable [return] cryptographic use ||| [return]	count=1
function_name	the external ||| set external	count=2
function_name	matte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	an html document from ||| htmlfile	count=1
namespace	by the ||| mongoid	count=1
function_name	makes an unified ||| xdiff	count=2
function_name	this sets a ||| set object	count=1
function_name	serialization of ||| serialize	count=1
function_name	entries stored ||| ldap next entry	count=2
function_name	[function_name_1] environment ||| [function_name_2] [function_name_1]	count=3
namespace	this collection and ||| mongocollection	count=1
function_name	every byte-value (0 ||| chars	count=1
function_name	the default amount of [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	[function_name] candidate ||| fann [function_name]	count=1
namespace	the ||| yaf_router	count=3
function_name	previous tuple for ||| prev	count=1
return	log for the ||| bool	count=1
function	[function_name_1] a write ||| [arg_pair_2] [function_name_1]	count=1
function_name	initializes ||| init	count=1
function_name	registry ||| registry	count=1
arg_pair	a row of the ||| resource $result_id	count=1
function_name	[function_name_1] fields associated ||| [function_name_1] [function_name_2]	count=1
arg_pair	the quality of ||| int $service_level_option	count=1
namespace	code point is a ||| intlchar	count=1
function_name	type base64 ||| type	count=1
function_name	returns the host name ||| gethostbyaddr	count=1
return	one or more ||| array	count=1
function_name	it as ||| to	count=1
arg_pair	a user ||| string $callback	count=1
function_name	mime charset ||| mb preferred mime name	count=1
arg_pair	a list of ||| string $host int $port	count=1
arg_pair	the ||| string $arg_separator int $enc_type	count=1
function_name	renames an ||| rename	count=1
function_name	logo using ||| logo guid	count=1
return	this [return] an implementation ||| [return]	count=1
namespace	measurement was started ||| hrtime\performancecounter	count=1
function_name	[function_name_1] shift ||| [function_name_2] [function_name_1]	count=12
arg_pair	or ||| resource $imap_stream	count=1
function_name	containing the version of ||| version	count=1
function_name	stores ||| openssl x509 export to file	count=1
namespace	function returns the id ||| function	count=1
function_name	constructs ||| construct	count=17
namespace	will determine ||| function	count=1
arg_pair	signature1 and signature2 using ||| string $signature2	count=1
namespace	fetches a row ||| function	count=1
function_name	tag [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	condition with data ||| array $condition	count=1
arg_pair	the ||| int $height	count=1
arg_pair	to a ||| string $qmanagername resource $hconn	count=1
return	and black points to ||| bool	count=1
function_name	name of the internet ||| gethostbyaddr	count=1
arg_pair	this method scales the ||| int $width int $height	count=1
function_name	[function_name_1] scaling ||| [function_name_1] [function_name_2]	count=6
arg_pair	the entry was added ||| int $key int $value	count=1
namespace	input document ||| solrinputdocument	count=1
function_name	a low priority task ||| low	count=1
arg_pair	the requested option ||| resource $ftp_stream int $option	count=1
namespace	bytes [namespace] into ||| [namespace]	count=1
function_name	specific row in a ||| db2 fetch	count=1
function_name	minimum [function_name] epochs determines ||| fann get cascade min [function_name]	count=1
function_name	parsers and sets up ||| create from	count=1
function_name	closes the [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	globally ||| com create	count=1
function_name	[function_name_1] parameter at ||| [function_name_1] [function_name_2]	count=1
arg_pair	an exact match location ||| imagick $imagick array $offset	count=1
function_name	return the [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	given result ||| ibase	count=1
function_name	[function_name] the ||| module get [function_name] key sizes	count=1
function_name	the array consisting of ||| preg grep	count=1
arg_pair	an array into an ||| array $pixels	count=1
arg_pair	brightness ||| float $brightness	count=1
arg_pair	the brightness ||| float $brightness	count=1
arg_pair	or a ||| string $fk_owner string $fk_table	count=1
arg_pair	variable with a ||| mixed $variable	count=1
function	[function_name_1] input ||| [function_name_1] [arg_pair_2]	count=2
function_name	protocol and server version ||| version	count=1
arg_pair	for the given ||| resource $imap_stream	count=1
arg_pair	the client ||| int $command	count=1
arg_pair	associates a php variable ||| mixed $variable int $type	count=1
namespace	of ||| eventbuffer	count=1
function_name	sets where ||| fann set	count=1
function_name	set ||| broker set	count=1
function_name	a json encoded ||| json decode	count=2
namespace	the set of monitored ||| event	count=1
function_name	is an immediate neighbor ||| floodfill image	count=2
function_name	with a file ||| set metadata	count=1
function_name	closes the link ||| mssql close	count=1
function_name	as an sql aggregate ||| create aggregate	count=1
function_name	shared secret ||| secret	count=1
arg_pair	on a per mailbox ||| resource $imap_stream	count=1
namespace	url repos_url [namespace] ||| [namespace]	count=3
function_name	[function_name_1] pdf block ||| [function_name_2] [function_name_1]	count=2
arg_pair	points start inclusive ||| mixed $start	count=1
arg_pair	is returned instead of ||| resource $result	count=1
function_name	dbase database as an ||| dbase	count=1
namespace	hash in ||| quickhashinthash	count=1
function_name	creating a ||| get active	count=1
function_name	or down and cropping ||| crop	count=1
arg_pair	list of ||| string $host	count=1
arg_pair	match the pattern ||| bool $only_names	count=2
function_name	mime content ||| mime content	count=2
function_name	which can be included ||| measure text	count=1
function_name	be represented with ||| metadata	count=1
function_name	activation steepnesses ||| activation steepnesses	count=3
function_name	network from ||| fann create from file	count=1
function_name	request authenticator is needed ||| radius request authenticator	count=1
function_name	true if the mode ||| mode	count=1
arg_pair	the [arg_pair] replaces them ||| [arg_pair]	count=1
arg_pair	function specified by execute ||| callable $execute int $pri	count=1
return	contiguous [return] occupying the ||| [return]	count=1
function_name	to uppercase ||| mb strtoupper	count=1
arg_pair	the portion ||| bool $before_needle	count=1
function_name	errors ||| errors	count=3
arg_pair	row pointer of the ||| resource $result_identifier	count=2
return	defined in yaf ||| void	count=1
namespace	to be used in ||| function	count=1
arg_pair	blocks until there is ||| float $timeout	count=1
arg_pair	text for later formatting ||| resource $pdfdoc string $text	count=1
namespace	a character in the ||| function	count=1
arg_pair	support and returns a ||| string $encoding	count=1
function_name	retrieve last [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	com object ||| com	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get current column [function_name_1]	count=3
function_name	[function_name_1] output ||| [function_name_1] [function_name_2]	count=5
return	stored with ||| void	count=1
arg_pair	the given ||| int $chunk_size	count=1
function_name	the child ||| child	count=2
function_name	returns the ||| get extension funcs	count=1
function_name	each layer in ||| get layer array	count=1
function_name	that block returns query ||| get	count=1
function_name	the structure of ||| imap bodystruct	count=1
namespace	function will ||| function	count=8
function_name	alter parser options ||| bbcode set	count=1
arg_pair	the keys array ||| array $keys	count=1
arg_pair	connects to the database ||| int $port	count=1
arg_pair	directory ||| string $directory	count=2
function_name	shared secret is ||| secret	count=1
function_name	the text interword spacing ||| text interline spacing	count=1
arg_pair	a string ||| string $encoding	count=1
function_name	stream of ||| stream	count=1
function_name	[function_name_1] hostname ||| [function_name_2] [function_name_1]	count=2
arg_pair	variable ||| mixed $variable	count=2
function_name	[function_name_1] step ||| [function_name_2] [function_name_1]	count=9
return	as a ||| object	count=1
function_name	default external entity loader ||| set external entity loader	count=1
namespace	the given ||| function	count=1
return	returns the connection to ||| bool	count=1
function_name	of [function_name] this ||| get [function_name]	count=1
function_name	internal as opposed ||| internal	count=1
function_name	words inside ||| str word	count=1
function_name	ldap directory with ||| ldap	count=1
function_name	mongocollection::find() this ||| find one	count=1
function	train one [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	returns ||| bool	count=1
namespace	from the session ||| sessionhandlerinterface	count=1
function_name	class [function_name] ||| is [function_name] of	count=1
function_name	display the php ||| php	count=1
function_name	data from ||| pgsql	count=3
function_name	gearmanclient::addtaskhighbackground() ||| run	count=1
namespace	checks ||| limititerator	count=1
namespace	amount of ||| mongocursor	count=1
function_name	field from ||| field	count=1
function_name	returns an array of ||| memcache get	count=1
function_name	inserts ||| insert data	count=2
function_name	sets authentication parameter at ||| svn auth set parameter	count=1
arg_pair	[arg_pair] inside the ||| [arg_pair]	count=1
function_name	[function_name_1] timezone ||| [function_name_2] [function_name_1]	count=2
function_name	file named by ||| openssl pkey export to file	count=1
namespace	of the parameter ||| reflectionparameter	count=1
function_name	gearmanclient::addtaskbackground() ||| run	count=1
function_name	generate a random number ||| random range	count=1
namespace	more results to send ||| mongocursorinterface	count=1
function_name	given local name ||| name	count=1
return	internally it ||| mongoid	count=1
return	using ||| bool	count=3
function_name	frequency ||| doc frequency	count=1
namespace	any ||| imagick	count=1
return	or in ||| bool	count=1
function_name	using a user-supplied comparison ||| usort	count=1
function_name	[function_name_1] policy ||| [function_name_2] [function_name_1]	count=1
namespace	as a number ||| gmagick	count=1
function_name	decompresses the given data ||| decompress	count=1
arg_pair	specified in name ||| int $base_group_id	count=1
function_name	an id3 ||| id3 set	count=1
function_name	inserts ||| px insert	count=1
function_name	all data from ||| add buffer	count=1
function_name	the ||| maxdb debug	count=2
function_name	return ||| get	count=1
namespace	image or image ||| gmagick	count=1
arg_pair	the information stored of ||| string $filename int $version	count=1
arg_pair	[arg_pair_1] [arg_pair_2] overview ||| overview [arg_pair_1] [arg_pair_2]	count=3
arg_pair	state of ||| int $textflow	count=1
function_name	calculate input scaling parameters ||| input scaling params	count=1
return	the number of the ||| int	count=1
function_name	route which ||| get	count=1
function_name	be ||| metadata	count=2
function_name	get the number ||| get number	count=1
function_name	words ||| str word	count=1
function_name	[function_name] the ||| xattr [function_name]	count=2
function_name	patch ||| patch	count=2
function_name	to fit the width ||| set fit	count=1
return	used to trace the ||| void	count=1
function_name	replaces the values of ||| array replace	count=2
function_name	total number ||| total space	count=1
function_name	any pixel that matches ||| paint	count=1
function_name	the client and ||| sqlsrv client	count=1
function_name	adds ||| add	count=27
function_name	in [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	has sub-elements ||| has children	count=2
function_name	examines ||| x509 checkpurpose	count=2
function_name	get error code ||| get error code	count=3
function_name	the specified events ||| wait event	count=1
namespace	oauth parameters should be ||| oauth	count=1
arg_pair	specified by the object_id ||| string $type	count=2
function_name	[function_name_1] min parameter ||| [function_name_1] [function_name_2]	count=1
function_name	last attempt to connect ||| conn error	count=1
return	gearmanclient::addtasklowbackground() ||| bool	count=1
function_name	represented by csr ||| openssl csr	count=2
function_name	web servers [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	moves data to the ||| bool	count=1
function_name	include ||| set terms include	count=2
arg_pair	set the uri ||| string $uri	count=1
function_name	returns ||| get	count=172
arg_pair	correspond to the ||| resource $result string $class_name	count=1
arg_pair	that an exact match ||| imagick $imagick	count=1
arg_pair	field fieldname and stores ||| resource $fdf_document string $fieldname	count=1
function_name	one or more write ||| write	count=2
function_name	reads [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	current database profiling ||| profiling	count=2
function_name	motion ||| motion	count=1
function_name	specified directory [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	diff containing differences ||| diff	count=1
function_name	xml string into 2 ||| xml	count=1
return	to the ||| solrupdateresponse	count=1
function	column names [arg_pair_2] ||| [function_name_1] object resource $result [arg_pair_2]	count=4
function_name	[function_name_1] query string ||| [function_name_1] [function_name_2]	count=3
namespace	phar archive containing ||| phar	count=1
arg_pair	[arg_pair_1] of haystack ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	parameter at ||| parameter	count=1
function_name	called to set ||| set	count=1
namespace	cannot be represented with ||| pharfileinfo	count=1
arg_pair	with an ||| int $backlog mixed $target	count=1
namespace	that cannot be ||| pharfileinfo	count=1
function_name	closes the request ||| close	count=1
return	that cannot ||| void	count=1
function_name	tell the cursor ||| tell64	count=1
function_name	error string of ||| bzerrstr	count=1
return	after remaining ||| mongocursor	count=1
function_name	[function_name_1] response headers ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] boost ||| [function_name_1] [function_name_2]	count=1
function_name	anchor point ||| anchor	count=1
function_name	query parser ||| query parser	count=2
namespace	created the referenced thread ||| thread	count=1
return	is not ||| bool	count=1
function_name	computes a digest ||| digest	count=1
function	[function_name_1] a result ||| [function_name_1] [arg_pair_2]	count=4
function	[function_name_1] stored of ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] callback function ||| [function_name_2] [function_name_1]	count=3
function_name	patterns in the train ||| train	count=1
function_name	returns log ||| log	count=1
function_name	to a specific row ||| fetch row	count=1
return	base ||| bool	count=1
function_name	return error code ||| gupnp service action return error	count=1
function_name	reads blob/clob data ||| cubrid lob	count=1
namespace	function closes a ||| function	count=1
function_name	[function_name_1] less ||| [function_name_2] [function_name_1]	count=4
arg_pair	set the database ||| resource $link_identifier string $database	count=1
arg_pair	of array1 with ||| array $array1 array $array2	count=1
function_name	patches a string ||| bpatch	count=1
function_name	sets a ||| set	count=6
function_name	reduce the array to ||| array reduce	count=1
function_name	[function_name_1] version ||| [function_name_1] server [function_name_2]	count=1
arg_pair	a string ||| string $prefix	count=1
namespace	discards the contents of ||| function	count=1
function_name	least squares ||| least squares	count=4
arg_pair	from fd ||| mixed $fd	count=1
function_name	determines the minimum ||| fann get cascade min cand	count=1
function_name	[function_name_1] class ||| [function_name_2] [function_name_1]	count=5
function_name	the actual size ||| filesize	count=1
arg_pair	of the data that ||| resource $result_id int $row_number	count=1
function_name	used to ||| set	count=1
arg_pair	server address port number ||| string $host int $port	count=1
arg_pair	to length ||| resource $zp int $length	count=1
function_name	error message fields ||| error field	count=2
function_name	gets the string to ||| get	count=1
return	used to trace ||| void	count=1
function_name	server for ||| immortal	count=1
arg_pair	sorts an array in ||| array $array int $sort_flags	count=1
function_name	object that follows the ||| snmp2 getnext	count=1
namespace	current ||| recursivetreeiterator	count=1
function_name	returns the debug data ||| get debug	count=1
arg_pair	resource specified by hostname ||| string $hostname	count=1
arg_pair	specified opcode with the ||| int $opcode	count=1
function_name	all the following ||| recursive	count=1
namespace	inclusion in an sql ||| sqlite3	count=1
function_name	returns the last error ||| get error	count=1
arg_pair	as a ||| string $name	count=1
namespace	first recursiveiteratoriterator::rewind() call ||| recursiveiteratoriterator	count=1
function_name	the intersection of ||| uintersect assoc	count=1
function_name	service proxy callback ||| gupnp service proxy callback	count=1
function_name	[function_name_1] with query_identifier ||| [function_name_2] [function_name_1]	count=2
function_name	drops this collection and ||| drop	count=1
arg_pair	by b and returns ||| gmp $a gmp $b	count=1
function_name	postgresql bytea ||| pg unescape bytea	count=1
function_name	job [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	fetches one row of ||| resource $result_identifier int $fetch_flag	count=1
function_name	ends a page which ||| ps end page	count=1
arg_pair	key for a ||| string $owner	count=1
function_name	sqlite sql ||| sqlite	count=1
function_name	the comment ||| comment index	count=1
function_name	subscribe method ||| subscribe	count=1
namespace	representation of the ||| function	count=1
function_name	current active database on ||| select db	count=1
function_name	[function_name_1] exists in ||| [function_name_2] [function_name_1]	count=5
function_name	field to use as ||| field	count=1
function_name	database on the ||| db	count=2
arg_pair	a new ||| string $namespaceuri	count=1
arg_pair	given sql ||| resource $conn_identifier string $sql	count=1
function_name	working ||| svn	count=1
function_name	pixel that matches ||| paint transparent image	count=1
function_name	query string from ||| query	count=1
arg_pair	at a specified offset ||| int $offset	count=1
function_name	string ||| bzerrstr	count=1
function_name	sets the minimum client ||| min client	count=1
arg_pair	the field after ||| resource $fdf_document	count=1
return	[return] representing the ||| [return]	count=1
return	match the ||| bool	count=1
function_name	true if ||| is	count=1
arg_pair	the current state of ||| int $textflow	count=1
function_name	places a pdf page ||| pdf place pdi page	count=1
function_name	scales ||| resize	count=1
function_name	[function_name_1] environment variable ||| [function_name_1] [function_name_2]	count=3
arg_pair	size of an ||| int $width int $height	count=1
return	a bitfield of the ||| int	count=1
function_name	initialization [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	utf-8 ||| utf8	count=3
namespace	version of the hash ||| quickhashintstringhash	count=1
function_name	[function_name_1] a textflow ||| [function_name_1] [function_name_2]	count=1
function_name	string holding ||| session register	count=1
function_name	fit the window height ||| fit v	count=1
function_name	next line ||| next line	count=2
function_name	stub ||| default stub	count=1
function_name	scp protocol ||| scp recv	count=1
namespace	an snmp ||| snmp	count=2
namespace	a user-defined class ||| reflectionclass	count=1
return	gets the ||| string	count=1
function_name	image format as one ||| format	count=1
function	[function_name_1] object and ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	as a timestamp ||| int $timestamp int $format	count=2
function_name	computes the difference ||| udiff assoc	count=1
function_name	specified log() returns log ||| log	count=1
function_name	[function_name_1] [function_name_2] activation functions ||| [function_name_1] [function_name_2]	count=1
arg_pair	of array1 ||| array $array1 array $array2	count=3
function_name	[function_name_1] supported by ||| get [function_name_2] key [function_name_1]	count=1
return	very beta [return] entirely useless ||| [return]	count=1
function_name	ip ||| addr	count=1
function_name	default ||| is default	count=1
arg_pair	that the item ||| mixed $value	count=1
namespace	host ||| oauth	count=1
namespace	http server ||| eventhttp	count=1
function	is used to [function_name_1] [arg_pair_2] ||| function string [function_name_1] [arg_pair_2]	count=4
function_name	cannot be represented ||| set metadata	count=1
namespace	the current session and ||| function	count=1
function	[function_name_1] thats ||| [function_name_1] [arg_pair_2]	count=5
function_name	if a dictionary ||| dict	count=1
arg_pair	a text ||| string $text resource $font	count=1
function_name	range filter ||| filter range	count=1
function_name	file that cannot ||| set metadata	count=1
namespace	retrieves the ||| solrinputdocument	count=1
function_name	[function_name_1] handler function ||| [function_name_2] [function_name_1]	count=6
function_name	filter ||| filter float	count=1
function_name	scale ||| scale	count=4
function	[function_name_1] of array1 ||| [function_name_1] [arg_pair_2]	count=1
function_name	docs ||| min	count=1
function_name	[function_name] that ||| pg [function_name]	count=3
arg_pair	it to ann based ||| resource $ann array $input_vector	count=1
function_name	moves the internal ||| seek	count=3
arg_pair	library using the principal ||| string $principal	count=1
function_name	the fdf [function_name] in ||| fdf [function_name]	count=1
function_name	character is [function_name] ||| is [function_name]	count=3
rest	attempts to [function_2] ||| [return_1] [function_2]	count=3
arg_pair	training of the ||| int $max_neurons int $neurons_between_reports	count=1
arg_pair	first occurrence ||| string $haystack string $needle	count=1
function_name	placeholder name which ||| by name	count=1
function_name	[function_name] specified in ||| [function_name]	count=2
function_name	the minimum message severity ||| mssql min message severity	count=1
function_name	the default external ||| set external	count=1
arg_pair	an array into an ||| int $storage	count=1
function_name	supported key ||| supported key	count=2
namespace	added ||| gearmanclient	count=1
function_name	character codes in string ||| mb encode numericentity	count=1
function_name	[function_name_1] slop ps3 ||| [function_name_2] [function_name_1]	count=3
return	will sort [return] keys of ||| [return]	count=1
function_name	[function_name] a ||| ibase param [function_name]	count=1
arg_pair	given ||| resource $font_index	count=1
function_name	bigram phrase ||| bigram phrase	count=4
function_name	[function_name_1] rows in ||| [function_name_1] [function_name_2]	count=1
function_name	row in ||| fetch assoc	count=1
function_name	phrase slop ps2 ||| phrase slop	count=2
function_name	imagemagick api version as ||| version	count=1
return	a result ||| sqlite3result	count=1
function_name	width ||| get width	count=1
function_name	fetch dns resource records ||| dns get	count=1
function_name	sets the sarprop step ||| fann set sarprop step	count=2
function_name	a given local name ||| tag name	count=1
function_name	lower bound in the ||| lower bound	count=1
function	file selection [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	color or the ||| int $green int $blue	count=1
function_name	a doc comment ||| doc comment	count=1
return	as ||| array	count=2
arg_pair	source string ||| string $source	count=1
function_name	computes the difference of ||| array udiff assoc	count=1
function_name	the property [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	a given result ||| object	count=1
function_name	fills and draws the ||| ps fill	count=1
function_name	[function_name_1] algorithms otherwise ||| [function_name_2] [function_name_1]	count=4
namespace	recursiveiteratoriterator::rewind() ||| recursiveiteratoriterator	count=1
namespace	numerically indexed array or ||| sqlite3result	count=1
function_name	a priority ||| buffer priority	count=1
function_name	the md5 hash of ||| md5	count=1
function_name	one ||| fetch	count=4
function_name	[function_name_1] target ||| [function_name_2] [function_name_1]	count=1
namespace	as ||| gmagick	count=1
function_name	be dismax ||| use dis max	count=2
function_name	[function_name_1] type is ||| [function_name_2] [function_name_1]	count=3
namespace	method ||| reflectionmethod	count=6
function_name	gearman_errno return value ||| get errno	count=1
namespace	class definition ||| reflectionclass	count=1
arg_pair	of ||| int $channel	count=5
arg_pair	a ||| string $index	count=1
namespace	of ||| imagick	count=1
function_name	request authenticator is ||| radius request authenticator	count=2
function	[function_name_1] up ||| [function_name_1] [arg_pair_2]	count=7
namespace	an id3 tag ||| ktaglib_tag	count=1
function	[function_name_1] the ||| [function_name_1] fetch assoc [arg_pair_2]	count=1
return	position of the ||| int	count=1
function_name	name ||| fieldname	count=1
arg_pair	by mask ||| resource $relation int $mask	count=1
function_name	the neural network ||| fann	count=2
arg_pair	a ||| string $prefix	count=1
return	represented with existing ||| void	count=1
function_name	names of the query ||| names	count=1
arg_pair	mangled for ||| resource $radius_handle string $mangled	count=1
function_name	tasks previously added ||| run	count=1
function_name	mysqli_kill() ||| mysqli	count=1
function_name	main filter query ||| filter query	count=1
function_name	table ||| table	count=2
arg_pair	timestamp and ||| int $timestamp int $format	count=2
function_name	pkcs#12 file ||| openssl pkcs12 export	count=1
function_name	days ||| days	count=1
function_name	reference of string ||| mb decode numericentity	count=1
function_name	[function_name_1] entity loader ||| [function_name_1] [function_name_2]	count=4
function_name	turn this output buffer ||| flush	count=1
function_name	pdf data ||| pdf	count=1
function_name	current active database on ||| sybase select db	count=1
function_name	[function_name_1] write ||| [function_name_2] [function_name_1]	count=3
function_name	port on which this ||| port	count=1
function_name	of the rrd database ||| rrd	count=1
function_name	group ||| posix	count=1
function_name	modules list ||| modules	count=1
function_name	mode [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	being delimited ||| strtok	count=1
function_name	current transformation matrix ||| get trans matrix	count=1
namespace	function p is calculated ||| function	count=1
arg_pair	initiate a ||| int $code string $reason	count=1
function_name	into the file ||| openssl pkey export to file	count=1
function_name	[function_name_1] frontend/backend ||| [function_name_2] [function_name_1]	count=1
function_name	get the ending ||| end	count=1
function_name	has siblings ||| has siblings	count=2
arg_pair	or something ||| mixed $array_or_countable	count=1
function_name	string would match ||| fnmatch	count=1
function_name	converts an extended json ||| mongo db\bson\from json	count=1
arg_pair	fetches a row ||| resource $result_id	count=1
function_name	normal date parsers ||| create from date	count=1
function_name	a given result ||| fetch	count=1
function	existing function [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name] php is ||| [function_name]	count=1
function_name	of the field ||| oci field	count=1
function_name	image in the sequence ||| image layers	count=1
function	the comment [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	the file size for ||| get size	count=1
namespace	owner [namespace] the ||| [namespace]	count=1
function_name	copies data from table ||| pgsql copy to	count=2
function_name	given tag ||| tag	count=1
function_name	[function_name_1] cookie parameters ||| [function_name_1] get [function_name_2]	count=1
return	the cursor ||| bool	count=1
function_name	last [function_name] ||| json last [function_name]	count=3
function_name	format of mbox names) ||| renamemailbox	count=1
function_name	names of the ||| property names	count=1
function_name	is ||| set	count=1
function_name	existing information ||| set	count=1
function_name	from the buffer provided ||| buffer	count=1
arg_pair	subject for [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	passed to this function ||| function	count=1
arg_pair	the traits that the ||| mixed $class	count=1
function_name	odbc_exec() ||| odbc fetch row	count=2
arg_pair	executable file consists of ||| int $startpos	count=1
function_name	terminates a glyph definition ||| glyph	count=1
function_name	[function_name] applying the ||| transform to [function_name]	count=1
namespace	be ||| evloop	count=1
function	xml parser [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
function_name	lists the tables ||| tables	count=1
function_name	transforms [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	number of activation ||| fann get cascade activation	count=1
function_name	of word spacing ||| word space	count=1
function_name	the product of values ||| array product	count=1
function_name	returns the hostname ||| get host	count=1
function_name	built-in ||| builtin	count=1
function_name	type map configuration ||| type map	count=2
function_name	creates ||| construct	count=2
function_name	internally it ||| set state	count=1
arg_pair	supported with table databases ||| mixed $increment	count=1
function_name	[function_name_1] message severity ||| [function_name_2] [function_name_1]	count=3
function_name	a doc comment ||| get doc comment	count=2
function_name	string to place after ||| postfix	count=1
function_name	tag ||| tag	count=5
function	executes custom [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	the initial [function_name] ||| [function_name] zero	count=2
function_name	next query ||| next	count=1
function_name	gets a list of ||| openssl get	count=2
function_name	the number ||| fann get num	count=1
function_name	maxdb_options() and ||| maxdb	count=1
namespace	[namespace] cannot have ||| [namespace]	count=1
function_name	class method [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	uploads the ||| nb fput	count=1
function_name	current cipher ||| cipher	count=1
function	sets parameters [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	relative location [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
return	for maxdb_options() and maxdb_real_connect() ||| resource	count=1
function_name	and resume ||| resume	count=1
function_name	[function_name_1] phrase slop ||| [function_name_2] [function_name_1]	count=4
arg_pair	a valid boost value ||| string $fieldname string $fieldvalue	count=1
return	continuing ||| void	count=1
function_name	closes file ||| close	count=1
function_name	contains replacement pairs ||| pspell config repl	count=1
function	[function_name_1] [arg_pair_2] entry at runtime ||| function int [function_name_1] [arg_pair_2]	count=3
function_name	message [function_name_2] ||| [function_name_2] get error [function_name_1]	count=1
function_name	a given result identifier ||| fetch	count=1
arg_pair	bit index in a ||| gmp $a int $index	count=1
function_name	regular expression given ||| preg	count=1
arg_pair	array1 with the ||| array $array2	count=1
namespace	whether the specified code ||| intlchar	count=1
return	file descriptor of ||| int	count=1
function_name	boost ||| boost	count=3
function_name	the sunset time ||| sunset	count=1
function_name	inverse ||| invert	count=1
function_name	encoding the ||| xfer encoding	count=1
function_name	unsets ||| oci close	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] alias string $original [arg_pair_2]	count=4
arg_pair	for a type ||| resource $pdfdoc string $glyphname	count=1
function_name	new connection to ||| db2 connect	count=1
function_name	representing a row in ||| fetch assoc	count=1
arg_pair	a valid ||| string $fieldname	count=1
function_name	given property [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	returns the mime ||| get mime	count=2
function_name	an integer ||| int	count=1
function_name	[function_name] database ||| [function_name] edition	count=1
arg_pair	variable can be ||| mixed $var bool $syntax_only	count=1
function_name	minimum document frequency to ||| terms min	count=1
function	[function_name_1] associative array ||| [function_name_1] string $type [arg_pair_2]	count=1
function_name	the given search query ||| query	count=1
function_name	property for a ||| property value	count=1
return	delimiter [return] enclosure ||| [return]	count=1
function_name	sets a function ||| set	count=1
arg_pair	middle point ||| resource $psdoc float $x	count=1
arg_pair	variable in the ||| mixed $var	count=1
arg_pair	copies data between ||| string $data	count=1
function_name	[function_name] of ||| [function_name] create listen	count=1
arg_pair	str from [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	containing the base type ||| type	count=1
function_name	the name of ||| get	count=1
function_name	[function_name_1] dash style ||| [function_name_2] [function_name_1]	count=3
function_name	activates a ||| pdf activate	count=1
function_name	and ||| compare	count=1
function_name	fill color ||| fill	count=1
function_name	the comment of ||| comment	count=1
function_name	html document from the ||| htmlfile	count=1
arg_pair	b ||| resource $pdfdoc float $b	count=1
function_name	computes the difference of ||| array udiff	count=1
return	result set if you ||| bool	count=1
arg_pair	to memcached::add() except ||| int $expiration	count=1
function_name	get exception details ||| details	count=1
arg_pair	to a reconstructed ||| int $metric	count=1
function_name	hexadecimal digits ||| xdigit	count=1
function_name	stream or context ||| stream context	count=1
arg_pair	on the intensity of ||| float $threshold	count=1
arg_pair	to a target within ||| string $dest	count=1
arg_pair	plaintext with ||| string $plaintext	count=1
function_name	external [function_name_2] ||| [function_name_2] [function_name_1]	count=11
namespace	statement function that can ||| function	count=1
function_name	[function_name_1] current line ||| [function_name_2] [function_name_1]	count=1
function_name	module [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	scales the inputs in ||| fann scale input	count=1
function_name	returns the actual ||| get	count=1
function	the comment [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=3
function	[function_name_1] file ||| [arg_pair_2] [function_name_1]	count=6
function_name	[function_name_1] a plugin ||| [function_name_2] [function_name_1]	count=1
function_name	defines headers to ||| headers	count=1
namespace	version of an ||| function	count=1
arg_pair	r ||| float $r	count=1
function_name	a given result identifier ||| object	count=1
function_name	opened ||| enc is	count=3
arg_pair	contents of a variable ||| mixed $var	count=1
function_name	closes the request handle ||| cubrid close request	count=1
function_name	[function_name_1] location of ||| [function_name_2] [function_name_1]	count=2
return	to be used ||| bool	count=1
function_name	php internally it ||| set state	count=1
return	maxdb ||| resource	count=1
function_name	[function_name_1] with block ||| [function_name_2] [function_name_1]	count=1
function_name	pagination information send by ||| ldap control paged result response	count=1
namespace	iterator ||| norewinditerator	count=1
function_name	with the kadm5 ||| kadm5	count=1
function_name	gets the first attribute ||| ldap first attribute	count=1
arg_pair	indexed ||| int $row_number	count=1
return	associated with ||| string	count=1
namespace	more results to ||| mongocursorinterface	count=1
arg_pair	to the [arg_pair] including the ||| [arg_pair]	count=1
function_name	persistent ||| db2 pconnect	count=1
return	deletes its ||| array	count=1
arg_pair	a named ||| string $servicename	count=1
function_name	socket error ||| socket error	count=2
namespace	file pointer ||| function	count=1
function_name	another ||| lineto	count=1
arg_pair	index in a ||| gmp $a int $index	count=1
arg_pair	from real0 ||| array $real0	count=1
return	point to the specified ||| bool	count=2
arg_pair	or part of a ||| int $ndocs	count=2
function_name	when the iteration ends ||| end iteration	count=1
function_name	opens a ||| open	count=1
function_name	[function_name_1] flags set ||| int [function_name_1] [function_name_2]	count=1
function_name	returned from ibase_connect() ||| ibase	count=1
function_name	valid socket ||| socket	count=1
arg_pair	array1 against the keys ||| array $array1	count=2
function_name	contours of [function_name] ||| reduce noise [function_name]	count=1
arg_pair	and associated ||| resource $connection	count=1
function_name	frequency ||| min doc frequency	count=1
namespace	a prepared statement ||| sqlite3stmt	count=1
function_name	save an webp version ||| imagewebp	count=1
function_name	[function_name_1] parent node ||| [function_name_1] [function_name_2]	count=1
return	contiguous [return] occupying ||| [return]	count=1
return	before entering or ||| void	count=1
function_name	[function_name_1] virtual ||| [function_name_2] [function_name_1]	count=1
function_name	a batch operation ||| write batch	count=1
function_name	location of ||| location	count=1
namespace	milliseconds ||| gearmanclient	count=1
return	fetches a ||| object	count=1
arg_pair	render a template and ||| string $tpl array $tpl_vars	count=1
namespace	the value of the ||| function	count=1
return	child before entering or ||| void	count=1
function_name	get ||| current	count=1
return	list ||| array	count=2
function_name	maxdb_real_connect() ||| maxdb	count=1
arg_pair	a ||| string $jpegname	count=1
function_name	[function_name_1] handle ||| [function_name_2] [function_name_1]	count=6
function_name	quoted [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	executes an aql ||| aql	count=1
function_name	for first entry in ||| ldap first entry	count=1
function_name	dot product of ||| mult	count=1
function_name	text interword spacing ||| text interword spacing	count=1
function_name	[function_name] in the ||| get phar [function_name]	count=1
arg_pair	of the data ||| int $row_number	count=1
function_name	or set the ||| database	count=1
function_name	reads a [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	error which occurred on ||| error	count=1
function_name	trigram phrase field ||| trigram phrase field	count=6
arg_pair	the result of left ||| mixed $left	count=1
function_name	[function_name] of the ||| get svm [function_name]	count=3
namespace	properties from [namespace] including ||| [namespace]	count=1
function_name	which is closest ||| imagecolorclosestalpha	count=1
function_name	network from ||| fann	count=1
return	simply stops and ||| void	count=1
arg_pair	a change notification ||| resource $proxy string $value	count=1
return	to the process ||| bool	count=1
function_name	extension stored bytecodes and ||| bcompiler write	count=1
function_name	row of ||| cubrid fetch	count=1
function	bitwise and [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	proxy synchronously [function_name] ||| action [function_name]	count=1
function_name	to establish service monitoring ||| service	count=1
namespace	domentityreference object ||| domentityreference	count=1
function_name	bytes [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	image and ||| image	count=2
return	causes a fetch of ||| string	count=1
arg_pair	oliver isbn 0-131-00413-1 ||| string $first	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] nick [arg_pair_2]	count=2
function_name	module [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	match [function_name] across different ||| [function_name]	count=1
function_name	depth as ||| depth	count=1
function_name	use [function_name] other functions ||| [function_name] pkey get public	count=1
function_name	stored ||| next entry	count=2
function_name	[function_name_1] uri string ||| [function_name_1] [function_name_2]	count=2
function_name	tasks ||| run	count=1
arg_pair	functionally equivalent to memcached::add() ||| mixed $value int $expiration	count=1
function_name	if it outputs ||| is	count=1
namespace	from the content ||| hw_api_content	count=1
function_name	entire network ||| fann	count=2
arg_pair	prepares a query ||| resource $conn string $sql	count=1
function_name	uses ||| uses	count=1
function_name	gets the [function_name] for an ||| get [function_name]	count=1
function_name	while further call ||| call	count=1
arg_pair	mailboxes ||| string $ref	count=2
function_name	that matches ||| paint opaque image	count=1
function_name	in this [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	scale data in input ||| input	count=1
namespace	a line from the ||| splfileobject	count=1
function_name	supported key [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	the precision ||| precision	count=1
function_name	host checks this is ||| disable	count=1
function_name	limit for how ||| limit	count=1
function_name	frequency below which terms ||| term frequency	count=1
function_name	creating a new ||| get active object	count=1
return	of the patterns a ||| int	count=1
arg_pair	the item ||| mixed $value	count=1
function_name	registers a function that ||| register	count=1
function_name	this function [function_name] of ||| ob end [function_name]	count=1
return	to the specified range ||| bool	count=3
arg_pair	of haystack starting from ||| string $haystack	count=1
return	of elements ||| int	count=1
function_name	from the stream or ||| stream	count=1
function_name	field is ||| msql field	count=1
arg_pair	by execute processing ||| callable $execute	count=1
arg_pair	use parser inside object ||| object $object	count=1
function_name	in an sqlite sql ||| sqlite escape	count=1
function_name	[function_name_1] sarprop step ||| [function_name_1] [function_name_2]	count=3
function_name	files and directories optionally ||| ls	count=1
namespace	within the [namespace] ||| [namespace]	count=2
namespace	not for ||| oauth	count=1
function_name	opens decrypts ||| openssl open	count=2
function_name	[function_name_1] stretch to ||| [function_name_2] [function_name_1]	count=1
namespace	model file ready ||| svmmodel	count=1
function_name	bytes required to display ||| display size	count=1
function_name	query ||| escape query	count=1
arg_pair	snmp object specified ||| string $host string $community	count=2
function_name	extension ||| get extension	count=2
function_name	establishes a database instance ||| dba	count=1
function_name	outputs in the training ||| output train	count=1
function_name	attributes ||| attributes	count=2
function_name	inserts a [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	module ||| module	count=3
function_name	the current fill color ||| fill	count=1
function_name	epochs the ||| cand epochs	count=2
function_name	of activation steepnesses in ||| activation steepnesses count	count=1
arg_pair	the uri containing ||| string $encoding	count=1
namespace	effective in ||| yaf_router	count=1
arg_pair	source file pointer apply ||| resource $sourcefp resource $destfp	count=1
arg_pair	or ||| int $key	count=1
function_name	returns ||| msg get	count=1
namespace	context ||| zmqcontext	count=2
function_name	for execution by ingres_execute() ||| ingres prepare	count=1
arg_pair	to a messaging server ||| string $protocol array $properties	count=1
function_name	maximum ||| max cand	count=1
function_name	record into the database ||| record	count=1
function_name	last attempt to connect ||| db2 conn error	count=1
return	after remaining idle ||| mongocursor	count=1
return	before ||| void	count=1
function_name	and returns ||| get	count=1
function_name	the request authenticator is ||| request authenticator	count=1
function_name	minimum word length below ||| min word length	count=1
function_name	header field ||| iconv	count=1
arg_pair	object ||| int $mode	count=1
arg_pair	equivalent to memcached::get() ||| callable $cache_cb	count=1
function_name	channel ||| get image channel	count=1
return	see if ||| bool	count=1
function_name	fetches multiple rows from ||| fetch	count=1
return	the ||| void	count=52
function_name	to traverse over a ||| snmp2 real walk	count=1
function_name	text rendering mode for ||| text rendering mode	count=1
function_name	sqlite [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	reading by ibase_blob_open() ||| resource $blob_handle	count=1
arg_pair	filename ||| resource $context	count=1
function_name	fetches multiple rows ||| fetch	count=1
function_name	array [function_name] ||| [function_name]	count=1
function_name	this [function_name] ||| ibase [function_name]	count=3
function_name	of rows ||| rows	count=1
function_name	loads ||| load	count=5
namespace	was update ||| quickhashinthash	count=1
function_name	of ||| unique	count=1
function_name	usual ssl peer certificate ||| sslchecks	count=1
function_name	copies data from ||| pgsql copy	count=1
namespace	the ||| mongoid	count=1
function_name	frequency in ||| frequency	count=1
function_name	aql ||| aql	count=1
function_name	a given column in ||| column	count=1
return	method allows you to ||| bool	count=1
function_name	[function_name_1] similar documents ||| [function_name_2] [function_name_1]	count=2
function_name	new ssl ||| ssl	count=1
function_name	row in ||| fetch	count=4
arg_pair	annotation to ||| resource $pdfdoc float $lowerleftx	count=2
function_name	scales the outputs in ||| scale	count=1
function_name	mime kopfzeile ||| iconv mime	count=1
function_name	imaginary image pair ||| image	count=1
function_name	[function_name_1] the train ||| [function_name_1] num [function_name_2]	count=1
function_name	is usually preferred ||| prev error	count=1
function_name	xmlrpc type base64 ||| xmlrpc set type	count=1
function_name	header string signature based ||| request header	count=1
namespace	the right_operand [namespace] ||| [namespace]	count=3
return	client ||| bool	count=1
function_name	client and specified ||| client	count=1
arg_pair	to html ||| string $encoding bool $is_hex	count=1
function_name	schema information ||| schema	count=2
function_name	sets the [function_name_2] ||| [function_name_1] lob [function_name_2]	count=2
function	[function_name_1] file and ||| [function_name_1] [arg_pair_2]	count=1
function_name	a given result ||| fetch object	count=1
function_name	grouping ||| set group	count=1
function_name	[function_name_1] type is ||| [function_name_1] [function_name_2]	count=3
function_name	to sybase_fetch_assoc() with one ||| sybase fetch	count=1
namespace	this function will send ||| function	count=1
function_name	[function_name_1] dictionary for ||| [function_name_1] [function_name_2]	count=4
function_name	file that cannot be ||| set metadata	count=1
return	whether the cursor ||| bool	count=1
arg_pair	of an ||| string $name int $flags	count=1
function_name	scales the outputs in ||| scale output	count=1
function_name	maximum number ||| get cascade max	count=1
function_name	returns root ||| get root element	count=4
arg_pair	key into ||| mixed $key	count=1
arg_pair	to address using ||| string $address	count=1
arg_pair	the uri ||| string $uri	count=1
function_name	rewrite [function_name] ||| [function_name]	count=3
function	canonicalize nodes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	name ||| gethostbyaddr	count=1
function_name	to use [function_name_2] ||| [function_name_2] [function_name_1] phrase	count=2
function_name	closes ||| close prepare	count=1
function_name	step-size may ||| fann set rprop delta	count=1
function_name	json encoded string and ||| json decode	count=1
arg_pair	an array or something ||| mixed $array_or_countable int $mode	count=1
function_name	[function_name] control ||| [function_name] service ctrl dispatcher	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] time [function_name_1]	count=2
function_name	[function_name_1] [function_name_2] data handler ||| [function_name_1] [function_name_2]	count=2
return	variable to ||| bool	count=1
function_name	the nsapi [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	each layer ||| get layer array	count=1
function_name	reflectionparameter ||| parameters	count=1
namespace	function is identical ||| function	count=3
function_name	lint ||| lint file	count=1
function_name	a quoted printable string ||| quoted printable	count=1
function_name	terms from ||| terms	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] last [function_name_2]	count=4
arg_pair	and associates imagickpixel ||| int $rows	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $msgid2 [arg_pair_1]	count=7
function_name	or repository ||| svn	count=1
function_name	[function_name_1] learning rate ||| [function_name_2] [function_name_1]	count=1
arg_pair	page ||| string $name	count=1
arg_pair	on the image ||| int $arg4	count=1
arg_pair	gets the remote address ||| string $address	count=1
function_name	digest hash ||| digest	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] decl [function_name_1]	count=1
function_name	aggregate function for use ||| aggregate	count=1
function_name	bounding box of the ||| b	count=1
function_name	[function_name_1] session leader ||| [function_name_1] [function_name_2]	count=1
arg_pair	file and frees ||| string $filename	count=1
arg_pair	filename from ||| string $filename	count=1
arg_pair	a ||| string $namespaceuri	count=1
namespace	of [namespace] an ||| [namespace]	count=1
namespace	previously added with ||| gearmanclient	count=1
function	class to [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	notation declaration handler function ||| notation decl handler	count=1
return	a ||| string	count=57
function_name	error handler which could ||| error handler	count=1
arg_pair	link annotation ||| resource $pdfdoc float $lowerleftx	count=1
arg_pair	of ||| int $type	count=1
return	integer attribute to ||| bool	count=1
function_name	dictionary [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	maxdb ||| function	count=1
arg_pair	layer [arg_pair] layer ||| [arg_pair]	count=2
function_name	creates a standard backpropagation ||| create sparse	count=2
arg_pair	changes file ||| callable $callback	count=1
function_name	weight [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	in an ||| array	count=3
function_name	the oracle [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	crossvalidate ||| crossvalidate	count=1
function_name	[function_name_1] font size ||| [function_name_1] [function_name_2]	count=3
function_name	resets ||| reset timeout	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get relative [function_name_1]	count=2
namespace	records in the database ||| tokyotyrant	count=1
function_name	the server ||| immortal	count=1
function_name	from ||| ibase fetch object	count=2
function_name	[function_name_1] matte ||| [function_name_2] [function_name_1]	count=2
function_name	font and ||| pdf load font	count=1
arg_pair	data between ||| string $data	count=1
function_name	combining [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	bson ||| bson unserialize	count=2
arg_pair	specified directory on ||| string $directory	count=1
function_name	current font size ||| get current font size	count=1
function_name	returns the mime type ||| get mime type	count=1
function	id3 tag [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
rest	point to [function_2] ||| [return_1] pdf [function_2]	count=1
function	[function_name_1] value for ||| [function_name_1] [arg_pair_2]	count=1
namespace	the imagickpixel object using ||| imagickpixel	count=1
namespace	of a color image ||| gmagick	count=1
arg_pair	another buffer event ||| eventbufferevent $underlying	count=1
function_name	detailed [function_name] ||| [function_name] font	count=1
namespace	code ||| intlchar	count=4
function_name	[function_name_1] allowable depth ||| [function_name_1] [function_name_2]	count=2
arg_pair	a command and ||| resource $connection	count=1
function_name	functions argument list ||| func	count=1
return	of a ||| int	count=3
arg_pair	the ||| int $enc_type	count=1
function_name	set/get character encoding ||| encoding	count=1
namespace	representation of ||| function	count=1
function_name	the action ||| action	count=1
return	gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| bool	count=1
function_name	increase [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	sinh arg /cosh ||| tanh	count=1
function_name	space character according to ||| space char	count=1
function_name	[function_name_1] state variable ||| [function_name_1] [function_name_2]	count=1
function_name	add routes ||| add	count=1
function_name	matches color with ||| paint transparent	count=1
function_name	the id3v1 ||| get id3v1	count=2
arg_pair	option from the specified ||| int $option	count=1
function_name	of an animated image ||| image ticks per second	count=1
function_name	content type ||| content type	count=2
function_name	removes a variable with ||| remove	count=1
return	of the ||| void	count=2
function_name	request represented by csr ||| openssl csr export	count=2
function_name	motion blur ||| motion blur	count=1
function_name	discards the ||| clean	count=1
namespace	with gearmanclient::addtask() ||| gearmanclient	count=1
function_name	a mysqlnd connection ||| mysqlnd	count=1
return	to composite ||| bool	count=1
function_name	number ||| get num	count=1
return	which is ||| string	count=1
return	results ||| bool	count=1
arg_pair	in filename from ||| string $filename	count=1
arg_pair	sends the given ||| resource $link string $query	count=2
function_name	timeout can ||| timeout	count=2
function_name	returns string [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	from the ||| string $arg_separator int $enc_type	count=1
function_name	recode ||| recode string	count=2
function_name	gettext() and similar functions ||| textdomain	count=1
namespace	[namespace] including inherited ||| [namespace]	count=1
function_name	wraps a string ||| wordwrap	count=1
function_name	encryption ||| encryption	count=1
function	[function_name_1] of a ||| [arg_pair_2] [function_name_1]	count=4
function_name	create ||| mysql create db	count=1
function_name	[function_name_1] attribute ||| [function_name_1] [function_name_2]	count=6
return	to modify ||| bool	count=1
function_name	return the time zone ||| time zone by	count=1
function_name	from the current point ||| pdf	count=1
arg_pair	messages from domain ||| string $codeset	count=1
function_name	last [function_name] during ||| json last [function_name]	count=1
function_name	von einer mime ||| mime	count=1
arg_pair	like mssql_connect() with two ||| string $password bool $new_link	count=1
arg_pair	the ||| resource $ann float $rprop_delta_zero	count=1
function_name	sets the ||| offset set	count=2
function_name	proxy synchronously [function_name] ||| [function_name] service proxy action get	count=1
arg_pair	length - 1 bytes ||| resource $zp int $length	count=1
function_name	[function_name] of ||| is [function_name] of	count=2
arg_pair	prepares a query ||| resource $link string $query	count=1
function_name	of the route which ||| get current	count=1
function_name	blob/clob data and passes ||| cubrid lob send	count=1
function_name	merges the data ||| fann merge	count=1
arg_pair	to memcached::replace() except ||| int $expiration	count=1
function	otherwise it [arg_pair_2] ||| [function_name_1] mode [arg_pair_2]	count=1
function	[function_name_1] outfilename ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	callback function ||| array $array callable $callback	count=1
namespace	the [namespace] has a ||| [namespace]	count=1
function_name	is set with oauthprovider::timestampnoncehandler() ||| nonce	count=1
arg_pair	key with old_value and ||| int $old_value	count=1
namespace	in ||| yaf_application	count=1
function_name	state [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] given user ||| [function_name_1] password [arg_pair_2]	count=1
function_name	blob/clob data and passes ||| cubrid lob	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get current [function_name_1]	count=7
return	and maxdb_real_connect() ||| resource	count=1
arg_pair	or save a ||| resource $image string $filename	count=1
function_name	cubrid database cubrid gets ||| get	count=1
function_name	the maximum number ||| fann get cascade max	count=1
function_name	errors ||| use internal errors	count=1
function_name	result grouping group parameter ||| set group	count=1
function_name	entry identifier for first ||| first	count=1
function_name	[function_name_1] declared ||| [function_name_1] [function_name_2]	count=1
function_name	current process [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	specified host ||| int $port	count=1
function_name	the query ||| escape query chars	count=1
namespace	from a ||| function	count=1
namespace	a ||| reflectionclass	count=1
namespace	be used to trace ||| function	count=1
namespace	this function is ||| function	count=16
function_name	results of next ||| cubrid next	count=1
namespace	of time cursors by ||| mongocursor	count=1
arg_pair	to ||| resource $image	count=1
function_name	the id3v1 tag ||| get id3v1 tag	count=3
function_name	given dictionary ||| enchant dict	count=1
function_name	or ifx_do() query ||| ifx num	count=1
function_name	set by the last ||| last	count=1
function_name	create ||| create	count=10
function_name	levenshtein distance is defined ||| levenshtein	count=1
namespace	value ||| solrinputdocument	count=1
return	is used to ||| void	count=1
return	a character ||| string	count=1
return	some amount ||| mongocursor	count=1
function	[function_name_1] apcs ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	and ||| resource $session string $username	count=1
function_name	this function ||| processing instruction	count=1
function_name	causes ||| setflag full	count=2
function_name	installs a ||| mysqlnd uh set	count=1
function_name	unified diff ||| xdiff string diff	count=1
function_name	the type of the ||| float	count=1
arg_pair	the given ||| bool $autoload	count=2
function_name	retrieve the pagination information ||| ldap control paged result response	count=1
function_name	the multi [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	block on ||| resource	count=1
function_name	string with [function_name] ||| [function_name]	count=2
function_name	[function_name_1] parser ||| [function_name_2] [function_name_1]	count=7
function_name	databases available [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] pixel ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] space ||| [function_name_2] [function_name_1]	count=4
function_name	info associated with the ||| info	count=1
function_name	this function assigns ||| ibase	count=1
return	name used with the ||| string	count=1
arg_pair	of the ||| resource $result_id	count=3
arg_pair	to the message ||| mixed $message bool $serialize	count=1
arg_pair	new mailbox see imap_open() ||| resource $imap_stream	count=1
namespace	child before entering or ||| evloop	count=1
arg_pair	stores a ||| resource $pxdoc array $record	count=1
function_name	prints all rows from ||| all	count=1
function_name	[function_name_1] object ||| [function_name_2] [function_name_1]	count=2
function_name	problem as an ||| problem	count=1
function_name	current transformation matrix of ||| trans matrix	count=1
function_name	relative ||| relative	count=1
function_name	blob object ||| blob	count=1
function_name	sets the number of ||| set	count=1
function_name	identifier ||| fetch row	count=3
function_name	executes an aql ||| dbplus aql	count=1
function	this function [function_name_1] [arg_pair_2] ||| domdocument domattr [function_name_1] [arg_pair_2]	count=1
function_name	type [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	creating [arg_pair_2] ||| [function_name_1] string $progid [arg_pair_2]	count=1
namespace	mpeg file header ||| ktaglib_mpeg_audioproperties	count=1
function_name	width of the text ||| get text width	count=1
function_name	the entries [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	blob/clob data from ||| lob	count=1
namespace	the hash and ||| quickhashstringinthash	count=1
arg_pair	of ||| string $str int $width	count=1
namespace	running ||| gearmanclient	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $filename [arg_pair_2]	count=1
function_name	[function_name_1] attribute ||| [function_name_2] [function_name_1]	count=7
namespace	in the judy ||| judy	count=1
function_name	maximum ||| terms max	count=1
function_name	initialization ||| openssl	count=1
arg_pair	from the ||| int $quality	count=1
arg_pair	an enumerated ||| int $property	count=1
function_name	[function_name_1] socket ||| [function_name_2] [function_name_1]	count=10
function_name	stroking [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] field fieldname ||| [arg_pair_2] [function_name_1]	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_2] dict [function_name_1]	count=2
namespace	from the ||| eventbuffer	count=1
function_name	pdi document ||| pdf get pdi	count=1
arg_pair	at revision revision ||| int $revision	count=1
function	[function_name_1] an ||| [function_name_1] match [arg_pair_2]	count=2
namespace	registered using v8js::registerextension() ||| v8js	count=1
function_name	create ||| create db	count=2
function_name	that matches color ||| paint transparent image	count=1
function_name	stored with ||| set	count=1
return	code does not exist ||| mixed	count=1
arg_pair	a ||| string $haystack	count=1
function_name	persistent ||| pconnect	count=1
function_name	the minimum number ||| fann get cascade min	count=1
function_name	place in front ||| prefix	count=1
return	returns a string ||| string	count=6
function_name	a syntax highlighted version ||| highlight	count=1
function_name	ldap search returned by ||| ldap	count=1
function_name	[function_name_1] service ||| [function_name_2] [function_name_1]	count=5
function_name	sends [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	combining class ||| combining class	count=2
arg_pair	by fill ||| mixed $fill	count=2
namespace	removes ||| event	count=1
function_name	in the user ||| ucache	count=1
arg_pair	an ||| int $bytes_transferred	count=1
function_name	[function_name_1] absent ||| [function_name_2] [function_name_1]	count=4
function_name	the ||| add	count=2
function_name	[function_name_1] the cascade ||| [function_name_2] [function_name_1]	count=2
function_name	sequence ||| seq drop	count=1
function_name	put write lock on ||| lock write	count=1
function_name	returns the number of ||| num input	count=1
arg_pair	represents the distinguished name ||| array $configargs array $extraattribs	count=1
function_name	fit ||| fit	count=5
function_name	space ||| space char	count=2
function_name	text into the file ||| export to file	count=1
function_name	[function_name_1] sizes ||| [function_name_1] [function_name_2]	count=5
function_name	printable string according to ||| printable	count=1
function	[function_name_1] on ||| [function_name_1] [arg_pair_2]	count=4
function_name	looks up ||| gettext	count=1
namespace	non url-encoded ||| solrparams	count=1
arg_pair	sorts [arg_pair] by key ||| [arg_pair]	count=1
arg_pair	sql statement ||| string $statement	count=1
arg_pair	to memcached::replace() except that ||| int $expiration	count=1
arg_pair	watcher object ||| int $priority	count=1
function_name	locking ||| locking	count=1
function_name	the number of ||| get cascade num	count=1
function_name	socket socket ||| socket	count=1
namespace	solr ||| solrobject	count=1
arg_pair	execute processing ||| callable $execute int $pri	count=1
function_name	attaches an ||| put	count=1
namespace	stack and ||| function	count=1
function_name	reads blob/clob data ||| cubrid lob send	count=1
arg_pair	point ||| float $x	count=9
function_name	after remaining idle on ||| immortal	count=1
arg_pair	and ||| resource $connection_id	count=1
function_name	effective in the route ||| current route	count=1
function_name	priority ||| event buffer priority	count=1
namespace	unicode database ||| intlchar	count=2
function_name	[function_name_1] color for ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] line ||| [function_name_2] [function_name_1]	count=9
function	[function_name_1] apcs ||| [function_name_1] [arg_pair_2]	count=1
function_name	fgetcsv() parses the ||| fgetcsv	count=1
function_name	apache [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	uploads ||| nb fput	count=2
arg_pair	an ||| int $storage array $pixels	count=1
return	image that is a ||| bool	count=1
arg_pair	like mssql_connect() with two ||| bool $new_link	count=1
return	be killed using the ||| int	count=1
function_name	element set name ||| element	count=1
function	annotation [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	length bytes ||| int $length	count=1
function_name	literal ||| literal	count=1
arg_pair	style [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	to the hash and ||| quickhashstringinthash	count=1
function_name	normalized [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name] is ||| fann get quickprop [function_name]	count=1
function_name	agent specified by ||| snmpwalk	count=1
arg_pair	given oid ||| string $oid	count=2
arg_pair	of the ||| int $x	count=2
function_name	digit ||| for digit	count=1
function	user [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	to ||| int	count=2
function_name	another name/value pair ||| var	count=1
function_name	a response [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	manifest for this ||| pharfileinfo	count=1
function_name	takes [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	puts a key-value pair ||| string $value	count=1
function_name	include the ||| set terms include	count=2
rest	returns [return_1] [function_2] ||| [return_1] [function_2]	count=3
function_name	without reading ||| blob	count=1
return	in a file ||| void	count=1
function_name	call to mysqli_connect() ||| mysqli connect	count=1
arg_pair	with the given ||| resource $shm_identifier	count=1
function_name	from utf-8 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	set as the ||| int $error_type	count=1
function_name	an xml document ||| xml	count=1
function_name	a user-supplied comparison function ||| usort	count=1
function_name	sets ||| set error	count=2
function_name	in the training ||| output train	count=1
namespace	result ||| function	count=1
arg_pair	it to ann ||| resource $ann array $input_vector	count=1
function_name	into [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	several parameters which were ||| ps	count=1
arg_pair	sends an error message ||| string $message	count=1
function_name	oracle placeholder name which ||| by name	count=1
function_name	[function_name_1] a result ||| [function_name_2] [function_name_1]	count=2
function_name	extended dom class ||| node class	count=1
function	column [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	current path ||| path	count=1
function_name	this method [function_name] ||| [function_name]	count=3
function_name	an integer attribute ||| int	count=1
function_name	returns a stream ||| stream	count=1
return	a ||| sqlite3result	count=2
function_name	threshold [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sets [function_name_2] ||| [function_name_1] [function_name_2] data handler resource	count=1
function	[function_name_1] a ||| domdocument domattr [function_name_1] [arg_pair_2]	count=1
function_name	the cosine ||| cos	count=1
function_name	trigram phrase [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	[function_name_1] activation steepnesses ||| [function_name_1] [function_name_2]	count=1
function_name	that are present in ||| array intersect uassoc	count=1
namespace	an image file ||| imagick	count=1
function_name	or not to return ||| terms return	count=1
namespace	archive ||| phar	count=4
function_name	parent element ||| element	count=1
function_name	given ||| imagepsslantfont	count=1
function_name	request handle given ||| request	count=1
function_name	length in ||| length	count=1
function_name	determines the minimum ||| fann get cascade min	count=1
function_name	detailed [function_name] a ||| [function_name] font	count=1
function_name	or [function_name] object pointed ||| get [function_name]	count=1
arg_pair	[arg_pair_1] db2_prepare() ||| [arg_pair_1] string $variable-name [arg_pair_2]	count=1
arg_pair	fetch ||| resource $result int $rownumber	count=1
function_name	with ||| database	count=1
function_name	intersection of ||| uintersect assoc	count=1
function_name	the default external entity ||| set external entity	count=1
function_name	glo instance and ||| glo	count=1
arg_pair	input for ||| string $input string $delimiter	count=1
arg_pair	a field ||| string $fieldname	count=1
function_name	blur filter ||| blur	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] mixed $class [arg_pair_2]	count=5
function	a postgresql [arg_pair_2] ||| [function_name_1] field is null [arg_pair_2]	count=2
function_name	a request ||| get request	count=1
function_name	not to use ||| use	count=3
arg_pair	pseudo-object from ||| resource $result_id int $fetch_flag	count=1
arg_pair	sends a ||| object $link_identifier	count=1
return	point [return] new coordinates ||| [return]	count=1
namespace	to ||| mongoid	count=1
function_name	which is effective in ||| get current	count=1
function_name	with spelling alternatives ||| dict quick check	count=1
function_name	attribute in [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	a specific row in ||| fetch row	count=1
return	sent to on ||| string	count=1
namespace	some amount of ||| mongocursor	count=1
function_name	the connection ||| fbsql database	count=1
function_name	[function_name_1] alpha ||| [function_name_2] [function_name_1]	count=2
function_name	the learning rate ||| learning rate	count=3
arg_pair	before it is sent ||| string $source_string	count=1
function_name	[function_name_1] learning ||| [function_name_1] [function_name_2]	count=2
arg_pair	dn which represents ||| array $dn resource $privkey	count=1
function_name	the external ||| external	count=3
function_name	base ||| isbase	count=1
function	image [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=9
namespace	way of getting ||| mongodb	count=1
arg_pair	the result-set from a ||| int $type	count=1
function_name	id3v2 object ||| id3v2	count=1
function_name	pdf page [function_name_2] ||| [function_name_1] fit pdi [function_name_2]	count=1
arg_pair	the associated data structures ||| resource $pdfdoc int $textflow	count=1
function_name	local name ||| tag name	count=1
arg_pair	to htmlspecialchars() in all ||| string $encoding bool $double_encode	count=1
function_name	the country and region ||| region by	count=1
function_name	type corresponding ||| geoip id by	count=1
function_name	glyphs are available ||| ps symbol name	count=1
function_name	font ||| pdf load font	count=2
function_name	move all data from ||| add	count=1
function_name	which to facet ||| facet	count=1
arg_pair	the word is correctly ||| string $word	count=2
function_name	drop remove a database ||| drop	count=1
function_name	a stream [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	can [function_name_2] ||| [function_name_1] [function_name_2]	count=5
return	gearmanclient::addtaskhighbackground() or gearmanclient::addtasklowbackground() ||| bool	count=1
function_name	the table ||| table	count=1
function	uid for [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	sql statement which can ||| string $statement	count=1
namespace	numerically indexed ||| sqlite3result	count=1
function_name	host ||| host	count=1
arg_pair	information stored of ||| string $filename int $version	count=1
namespace	applying the stylesheet ||| xsltprocessor	count=1
function_name	[function_name_1] id3v1 ||| [function_name_1] [function_name_2]	count=1
function_name	debug output [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	or not ||| bool	count=1
arg_pair	a ||| int $property	count=1
function_name	[function_name_1] word length ||| [function_name_1] [function_name_2]	count=2
function_name	specified code point is ||| isbase	count=1
function_name	in the image ||| tint image	count=1
function_name	[function_name_1] severity ||| [function_name_2] [function_name_1]	count=4
arg_pair	and the ||| resource $pdfdoc int $textflow	count=1
function_name	adds the specified server ||| add	count=1
function_name	default [function_name] clusters from ||| [function_name] extract	count=1
function_name	[function_name_1] short ||| [function_name_2] [function_name_1]	count=3
function	user [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	with a ||| resource $ann array $input	count=1
function_name	persistent connection ||| db2 pconnect	count=1
function_name	[function_name_1] scene ||| [function_name_1] [function_name_2]	count=1
namespace	starts running ||| gearmanclient	count=1
arg_pair	prepares sql_text using connection ||| resource $connection string $sql_text	count=1
function_name	the bit fail limit ||| bit fail limit	count=1
arg_pair	blocks until there is ||| resource $mh float $timeout	count=1
function_name	form [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	the true ||| bool	count=1
function_name	given result ||| object	count=1
namespace	phar archive with ||| phar	count=1
arg_pair	the current request indicating ||| string $actor	count=1
function_name	used to trace ||| maxdb	count=1
function_name	wrapper ||| wrapper	count=1
function_name	not to ||| get	count=1
return	amount ||| mongocursor	count=1
namespace	of attached iterator instances ||| multipleiterator	count=1
function_name	specified ||| fbsql	count=1
function_name	learning rate is ||| learning rate	count=1
function_name	get the size ||| size	count=1
function_name	set the comment of ||| set comment	count=1
function_name	concatenates ||| variant cat	count=1
arg_pair	the sql statement ||| string $sql	count=1
function	[function_name_1] on the ||| [function_name_1] [arg_pair_2]	count=7
function_name	into file specified ||| file	count=1
function_name	so as to reduce ||| reduce	count=1
namespace	error and ||| function	count=1
arg_pair	an exact ||| array $offset	count=1
function_name	the attribute [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	to ||| add	count=3
namespace	model was ||| svmmodel	count=1
return	if you requested ||| bool	count=1
arg_pair	for a ||| string $option	count=1
arg_pair	filename ||| string $filename resource $context	count=1
function_name	[function_name_1] rows to ||| [function_name_2] [function_name_1]	count=1
function_name	page [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	to include [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	layer ||| layer	count=3
arg_pair	of ||| int $timeout	count=1
arg_pair	to the database ||| int $port	count=1
namespace	the large object depending ||| oci-lob	count=1
function_name	dbase database with ||| dbase	count=2
namespace	to the end of ||| eventbuffer	count=1
function_name	a space character ||| space char	count=1
function_name	call ||| call	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_1] pseudo [function_name_2]	count=3
arg_pair	an ||| mixed $codepoint	count=1
function_name	property value integer ||| property value	count=2
function_name	a new page ||| pdf begin page	count=1
return	pointer to the ||| bool	count=1
function_name	normal operations ||| reset error	count=1
arg_pair	about the supplied x509cert ||| bool $shortnames	count=1
function_name	a list ||| broker list	count=1
arg_pair	the specified object_id ||| string $object_id string $timeout	count=1
function_name	[function_name_1] proxy object ||| [function_name_2] [function_name_1]	count=1
function_name	error message for the ||| stmt error	count=1
function_name	gets the maximum ||| get max	count=2
arg_pair	enables automatic compression of ||| int $threshold float $min_savings	count=1
arg_pair	with an ||| int $backlog	count=1
function_name	[function_name_1] database on ||| [function_name_2] [function_name_1]	count=8
namespace	unicode code point ||| intlchar	count=1
function_name	weights ||| index weights	count=1
function_name	gets the maximum ||| max	count=1
namespace	all available memcache servers ||| memcached	count=2
rest	an array [function_2] ||| [return_1] mcrypt module [function_2]	count=1
function_name	shift ||| shift	count=3
function_name	message from [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	specified location in the ||| imagecolorat	count=1
function_name	[function_name_1] stagnation ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] path to ||| [function_name_2] [function_name_1]	count=2
function_name	this ||| disable	count=1
function	comment [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=3
arg_pair	a prepared ||| resource $connection string $stmtname	count=2
function_name	trace ||| maxdb debug	count=2
namespace	names were passed in ||| function	count=1
function_name	the iterator to ||| iterator	count=1
function_name	[function_name_1] mime type ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] steepnesses ||| [function_name_2] [function_name_1]	count=6
function_name	is the private ||| private	count=1
function_name	as ||| fetch	count=1
function_name	bytecodes and initiates a ||| bcompiler	count=1
namespace	given key is ||| function	count=1
namespace	get the ||| yaf_router	count=1
arg_pair	for a server with ||| resource $id array $config	count=1
function_name	timestamp ||| timestamp	count=2
return	is a base ||| bool	count=1
arg_pair	namespaceuri and ||| string $qualifiedname	count=1
function_name	[function_name_1] functions ||| [function_name_1] [function_name_2]	count=3
function_name	entwerfen von einer mime ||| iconv mime	count=1
namespace	row of ||| function	count=5
function_name	the image obtained ||| imagecreatefromxbm	count=1
function_name	the ending ||| end	count=1
function_name	chunks ||| chunk	count=1
function_name	computes the ||| udiff assoc	count=1
function_name	extension stored bytecodes ||| bcompiler write	count=1
return	value for the document ||| float	count=1
function_name	that cannot ||| set metadata	count=1
function_name	ends a ||| ps end	count=1
namespace	in the wsdl ||| soapclient	count=1
arg_pair	variable with ||| mixed $variable int $type	count=1
function_name	fit the [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	epochs determines the minimum ||| get cascade min	count=1
namespace	function returns the ||| function	count=9
arg_pair	according to rfc 3986 ||| resource $ch string $str	count=1
function_name	as clipping path ||| pdf clip	count=1
function_name	adds new attribute ||| attribute	count=1
function_name	[function_name_1] with namespace ||| [function_name_1] [function_name_2]	count=1
function_name	adds a ||| pdf add	count=2
function_name	starts a glyph definition ||| begin glyph	count=1
function_name	not to use spanscorer ||| use	count=2
function_name	used to ||| metadata	count=1
function_name	first [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] proxy callback ||| [function_name_1] [function_name_2]	count=1
function_name	amount of time cursors ||| immortal	count=1
function_name	pencil sketch ||| sketch image	count=1
arg_pair	by dn which ||| resource $privkey	count=1
arg_pair	at key to ||| string $key	count=1
function_name	[function_name_1] field pf3 ||| [function_name_2] [function_name_1]	count=4
arg_pair	of str ||| int $phonemes	count=1
function_name	exists in ||| exists	count=3
function_name	printable string according ||| printable decode	count=1
function_name	reads from the socket ||| read	count=1
function_name	be dismax [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	to the specified filename ||| string $filename bool $all_frames	count=1
function_name	[function_name_1] create ||| [function_name_1] [function_name_2]	count=1
function_name	the ancillary data ||| socket cmsg space	count=1
function_name	list ||| broker list	count=1
namespace	its associated recursiveiteratoriterator::rewind() ||| recursiveiteratoriterator	count=1
function_name	element is available ||| element	count=1
function_name	neural network ||| fann	count=7
function_name	declared interfaces ||| declared interfaces	count=2
arg_pair	old_file and new_file ||| string $old_file string $new_file	count=1
function_name	directory entry ||| zip entry	count=4
function_name	the current status ||| status	count=3
function_name	creates ||| ifx create	count=1
function_name	db2_connect() ||| db2	count=1
function	[function_name_1] with type ||| [function_name_1] [arg_pair_2]	count=2
return	returns number of ||| int	count=1
function_name	server environment ||| putenv	count=1
arg_pair	moves a file to ||| string $path string $new_path	count=1
function_name	reads blob/clob data and ||| cubrid lob send	count=1
arg_pair	a**r)/gamma r ||| float $r	count=1
namespace	[namespace] that might ||| [namespace]	count=1
return	status of ||| int	count=1
arg_pair	given color pair to ||| int $pair	count=1
function_name	gearmanclient::addtaskhighbackground() or ||| run	count=1
return	it as [return] ||| [return]	count=2
function_name	last [function_name] ||| [function_name]	count=1
function_name	after applying ||| array map	count=1
arg_pair	text in ||| string $text	count=1
function_name	lock ||| lock	count=2
return	the input buffer and ||| bool	count=1
function_name	opened [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	reads blob/clob data and ||| cubrid lob	count=1
namespace	creates a new quickhashinthash ||| quickhashinthash	count=1
return	numeric file descriptor of ||| int	count=1
return	after ||| mongocursor	count=1
function_name	the child ||| loop	count=1
return	time ||| mongocursor	count=1
function_name	retrieves apcu [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	in grapheme ||| grapheme	count=1
function_name	current path ||| pdf closepath	count=2
arg_pair	from object_id ||| string $object_id int $timeout	count=1
function_name	span the entire ||| stretch	count=1
function_name	the blob ||| ibase blob	count=1
return	used to modify ||| bool	count=1
function_name	[function_name_1] normalized ||| [function_name_2] [function_name_1]	count=1
function_name	load [function_name] second or ||| [function_name]	count=1
function_name	external [function_name_2] ||| [function_name_1] [function_name_2] index int $index int	count=4
namespace	the representation [namespace] ||| [namespace]	count=1
function_name	sets the external ||| set external	count=3
function_name	[function_name_1] property ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] row ||| [function_name_2] [function_name_1]	count=2
function_name	that file_get_contents() returns ||| file get contents	count=1
function_name	specified socket ||| socket	count=1
arg_pair	acts very much ||| string $servername string $username	count=1
function_name	adds blur filter ||| blur	count=1
arg_pair	associate data to an ||| object $object mixed $data	count=1
function_name	of tidy warnings ||| warning	count=1
function_name	field type is ||| fbsql field type	count=2
function	image and [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	variables and add ||| add	count=1
function_name	a set of tasks ||| run	count=1
arg_pair	submits a command ||| resource $connection string $query	count=1
function_name	returns client ||| get client	count=2
namespace	set the type of ||| function	count=1
return	statement and returns a ||| sqlite3result	count=1
function_name	removes one [function_name_2] ||| [function_name_1] stats [function_name_2]	count=1
function_name	[function_name_1] epochs ||| [function_name_1] max [function_name_2]	count=1
function_name	a name ||| name	count=1
namespace	a rpc service ||| yar_server	count=1
function_name	kernel to the ||| kernel	count=1
arg_pair	the supplied hash implements ||| string $hash integer $algo	count=1
function_name	the sunset ||| date sunset	count=1
arg_pair	a ||| string $algorithm	count=1
rest	returns [return_1] [function_2] ||| [return_1] mcrypt module [function_2]	count=3
function_name	cached information and meta-data ||| cache info	count=2
function_name	php-standardized [function_name] ||| [function_name] compare	count=2
return	idle on the ||| mongocursor	count=1
arg_pair	a wrapper for apaches ||| string $note_name	count=1
arg_pair	that index and ||| mixed $index	count=1
function_name	msql server ||| msql	count=2
function_name	[function_name_1] cached in ||| [function_name_2] [function_name_1]	count=1
return	whether the specified code ||| bool	count=1
namespace	checks whether the ||| limititerator	count=1
function_name	protocol and server version ||| pg version	count=1
return	symbolic name [return] ||| [return]	count=1
namespace	checks whether the cursor ||| mongocursorinterface	count=1
function_name	process ||| get current	count=1
function_name	the last ldap command ||| ldap errno	count=1
function_name	child before entering ||| loop	count=1
arg_pair	within sql statements ||| int $argument_count	count=1
arg_pair	given message sequence ||| resource $imap_stream	count=1
arg_pair	user and ||| string $user	count=1
function_name	the attribute specified ||| attribute ns	count=2
function	file named [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	image either as a ||| string $complement	count=1
function_name	[function_name_1] class ||| [function_name_1] [function_name_2]	count=5
function_name	output of callback function ||| callback	count=1
function_name	last ||| dbplus last	count=2
arg_pair	old_data string ||| string $old_data	count=1
function_name	to fit ||| fit	count=2
return	the coordinate ||| bool	count=1
function_name	scales ||| fann scale output	count=1
function_name	and restart it again ||| again	count=1
function_name	[function_name_1] candidate ||| [function_name_1] [function_name_2]	count=4
function_name	construct ||| construct	count=1
function_name	[function_name_1] sub-elements ||| [function_name_2] [function_name_1]	count=1
namespace	by xsltprocessor::setparameter() ||| xsltprocessor	count=1
function_name	date [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	this ||| mongoid	count=1
return	it ||| mongoid	count=1
function_name	terms ||| terms sort	count=1
arg_pair	variable can be ||| mixed $var	count=1
arg_pair	the hostname ||| string $hostname	count=1
function_name	and format without reading ||| blob	count=1
namespace	current ||| yaf_action_abstract	count=1
function_name	directory ||| is dir	count=1
function_name	or more stored procedures ||| db2 procedure columns	count=1
function_name	[function_name_1] from file ||| [function_name_2] [function_name_1]	count=2
function_name	replaces ||| replace	count=5
function_name	current path as clipping ||| pdf clip	count=1
return	request to ||| bool	count=2
function_name	definition ||| reset image	count=1
function_name	gets column [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	name representing a row ||| fetch	count=1
function	[function_name_1] variables ||| [function_name_1] [arg_pair_2]	count=3
function_name	file that cannot be ||| set	count=1
function_name	the candidate ||| cascade candidate	count=1
namespace	stored ||| pharfileinfo	count=1
arg_pair	by the object_id ||| int $timeout	count=1
arg_pair	memcached::set() but instead of ||| int $expiration	count=1
function_name	map the ||| get delayed	count=1
function_name	of ||| variant int	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] size [arg_pair_2]	count=4
function_name	used to determine ||| dir	count=1
function	numbering [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function_name	add required [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	deletes ||| array	count=1
function_name	exchange the current array ||| exchange	count=1
arg_pair	a callable function ||| string $message int $message_code	count=1
arg_pair	a list of servers ||| int $port	count=1
namespace	to ||| recursivetreeiterator	count=1
function_name	width [function_name_2] ||| [function_name_2] [function_name_1]	count=9
namespace	host name of the ||| function	count=1
function_name	property for a code ||| int property value	count=1
function_name	column names of ||| column names	count=1
arg_pair	the ||| bool $before_needle string $encoding	count=1
namespace	amount of time cursors ||| mongocursor	count=1
arg_pair	the quality of service ||| int $service_level_option mixed $option_value	count=1
return	the current ||| void	count=2
function_name	highlighted version ||| highlight	count=1
arg_pair	the specified ||| int $flags	count=1
arg_pair	request request ||| string $request string $string	count=1
function_name	returns the number of ||| field count	count=1
return	with the ||| int	count=1
arg_pair	or set the ||| resource $link_identifier	count=1
function_name	called after ||| loop	count=1
namespace	in this node and ||| domnode	count=1
arg_pair	dn which [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	assumed ||| utf8	count=1
function_name	agent specified ||| walk	count=1
return	by the ||| bool	count=1
function_name	intersection of arrays ||| array uintersect assoc	count=1
function_name	record in ||| record	count=2
namespace	and as a ||| gmagick	count=1
function_name	the data store ||| apcu	count=1
function_name	sets where ||| fann set error log	count=1
function_name	row and moves ||| fetch	count=2
function_name	adds a soap header ||| add soap header	count=1
function_name	starts ||| pdf begin	count=2
arg_pair	execute processing it ||| int $pri	count=1
function_name	gmbh ||| open memory image	count=1
return	value ||| float	count=1
function_name	[function_name_1] the bit ||| [function_name_1] [function_name_2]	count=2
function_name	activation function ||| get activation function	count=1
function_name	sets boost [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the group access list ||| posix initgroups	count=1
function_name	new page ||| pdf begin page	count=1
function_name	[function_name_1] [function_name_2] in the ||| [function_name_1] [function_name_2]	count=3
namespace	function toggles if ||| function	count=1
return	the event ||| void	count=1
function_name	given ||| ibase	count=1
function_name	name of the ||| current	count=1
function_name	list of all ||| list	count=3
arg_pair	characters ||| string $pattern	count=1
function_name	can change ||| can change	count=2
function_name	retrive the ||| get application	count=1
function_name	file or seek ||| ifxus	count=1
return	database has no ||| bool	count=1
function_name	write operations on the ||| write	count=1
arg_pair	the oid of the ||| resource $conn_identifier string $oid	count=1
function_name	parser options ||| parser property	count=1
return	returned by the ||| string	count=1
function_name	query ||| cubrid query	count=1
arg_pair	as a ||| string $complement	count=1
arg_pair	sets locale ||| int $category string $locale	count=1
function_name	abort the active event ||| event	count=1
arg_pair	between old_file and new_file ||| string $new_file	count=1
function_name	data ||| add	count=1
function_name	key ||| key	count=4
return	number ||| bool	count=1
function_name	new float range filter ||| set filter float range	count=1
function_name	country and ||| by country and	count=2
function_name	file ||| open file	count=1
arg_pair	server with ||| resource $id	count=1
namespace	by this ||| function	count=1
function_name	cascade ||| cascade	count=7
function_name	gets ||| openssl get	count=2
function_name	php language tokens using ||| token get all	count=1
function_name	slob object and ||| slob	count=1
namespace	[namespace] into ||| [namespace]	count=2
arg_pair	a string before it ||| string $source_string	count=1
function_name	number ||| oci num	count=1
function_name	create stopped ||| create stopped	count=2
function_name	channel ||| channel	count=4
function_name	fetches ||| ibase fetch object	count=2
arg_pair	or a connection resource ||| resource $resource	count=1
arg_pair	an ||| int $type	count=1
function_name	the elements designated ||| array splice	count=1
function_name	or redefines the ||| ncurses init pair	count=1
function_name	filter query ||| add filter query	count=2
function_name	frees the key associated ||| openssl free key	count=1
function_name	current row from ||| fetch row	count=1
function_name	cascade output change ||| cascade output change	count=3
function_name	the decrease factor used ||| decrease factor	count=1
function_name	stream ||| event stream	count=1
function_name	consumes any input waiting ||| pg consume input	count=1
function_name	delete an ||| delete	count=1
function_name	connect method on ||| connect	count=1
namespace	error string ||| function	count=1
arg_pair	as ||| string $class_name	count=1
function_name	row or the last ||| last	count=1
function_name	draws an arc of ||| imagearc	count=1
arg_pair	an exact ||| imagick $imagick	count=1
arg_pair	given key the first ||| int $key	count=1
function_name	and returns the ||| compare	count=1
function_name	forward current execution ||| forward	count=1
function_name	similarity image such that ||| sub image	count=1
function_name	returns the specified ||| get	count=1
function_name	or information from ||| info read	count=2
function_name	minimum message ||| sybase min message	count=2
arg_pair	reading a directory ||| string $directory	count=1
arg_pair	identical to ||| string $encoding bool $double_encode	count=1
function_name	it with spelling alternatives ||| enchant dict quick check	count=1
arg_pair	snmp object specified ||| string $community	count=3
function_name	to sybase_fetch_assoc() with ||| sybase	count=1
namespace	with the imagick object ||| imagick	count=1
function_name	creates an html ||| save htmlfile	count=1
arg_pair	file and ||| resource $pdfdoc string $filename	count=1
function_name	name used ||| database	count=1
function_name	key [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	an url string argument ||| connect with url	count=1
function_name	default domain of the ||| default domain	count=1
function_name	replaces the values of ||| replace	count=2
namespace	in a file that ||| pharfileinfo	count=1
arg_pair	of c in the ||| string $c	count=1
arg_pair	be messages from domain ||| string $codeset	count=1
namespace	[namespace] contains any ||| [namespace]	count=1
function_name	[function_name_1] [function_name_2] indicated column in ||| [function_name_2] [function_name_1]	count=2
function_name	levenshtein distance is ||| levenshtein	count=1
function_name	pixel color ||| unique	count=1
function	xml namespace [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] request request ||| [function_name_1] [arg_pair_2]	count=1
rest	[return_1] [function_2] ||| [return_1] id3 [function_2]	count=3
function_name	grapheme ||| grapheme	count=2
function_name	[function_name_1] user ||| [function_name_2] [function_name_1]	count=2
function_name	sunset time for ||| sunset	count=1
function_name	date parsers and sets ||| create from date string	count=1
function_name	stats [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	callback function to the ||| callable $callback	count=1
namespace	file is ||| splfileinfo	count=1
function_name	returns the sarprop step ||| get sarprop step	count=1
arg_pair	on the how ||| int $how array $set	count=1
function_name	[function_name_1] per-process statistics ||| [function_name_1] [function_name_2]	count=2
function_name	a stride ||| stride for	count=1
function_name	to enable highlighted snippets ||| highlight	count=1
namespace	an splobjectstorage object ||| splobjectstorage	count=1
function_name	disable ||| disable	count=2
namespace	trace ||| function	count=1
function_name	function is only used ||| state	count=1
function_name	comment ||| comment index	count=2
function_name	minimum ||| fann get cascade min cand	count=1
function_name	from the buffer ||| buffer	count=1
return	generates a string of ||| string	count=1
arg_pair	a prepared ||| resource $connection	count=2
return	and host checks ||| bool	count=1
function_name	server host name ||| get host info	count=1
namespace	variable ||| yaf_view_simple	count=1
arg_pair	two additional parameters seconds ||| int $seconds	count=1
function_name	submit ||| submit to	count=2
function_name	unsubscribe from ||| imap unsubscribe	count=1
arg_pair	specified by fd ||| mixed $fd	count=2
function_name	handle if ||| curl	count=1
namespace	the specified function e ||| function	count=1
function_name	sets the minimum message ||| min message	count=2
function_name	a request token ||| get request token	count=2
arg_pair	[arg_pair_1] [arg_pair_2] overview ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	the [function_name] and ||| [function_name]	count=1
function_name	[function_name_1] which ||| [function_name_2] [function_name_1]	count=2
function_name	returns an id that ||| get	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] start namespace decl [function_name_2]	count=7
arg_pair	numeric items value by ||| int $expiry	count=1
function_name	current image ||| image gravity	count=2
arg_pair	named column in ||| mixed $column	count=1
arg_pair	gets the contents of ||| int $doc	count=1
function_name	frees ||| db2 free	count=1
function_name	string depending on ||| pathinfo	count=1
function_name	enable ldap ||| ldap	count=1
function_name	query inspected ||| mysqlnd qc	count=1
arg_pair	execute ||| callable $execute int $pri	count=1
return	closes the path ||| bool	count=1
function_name	curl handle ||| curl	count=1
function_name	a doc [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	unicode ||| intlchar	count=14
arg_pair	an array ||| array $args	count=1
namespace	the evidle watcher ||| evidle	count=1
function_name	convolution filter of ||| edge	count=1
function_name	integer containing the oid ||| oid	count=1
namespace	this method tries ||| quickhashintstringhash	count=1
arg_pair	a wrapper ||| string $note_name	count=1
function_name	runs ||| do	count=3
function_name	midnight on easter ||| easter	count=1
function_name	adds a weblink ||| add weblink	count=1
arg_pair	from domain ||| string $domain string $codeset	count=1
return	is a ||| bool	count=3
function_name	when using mppe ||| mppe	count=1
function	current line [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $str [arg_pair_2]	count=1
function_name	class for ||| class	count=1
arg_pair	execute processing it ||| callable $execute	count=1
function_name	global memory utilization ||| win32 ps stat mem	count=1
function_name	metadata ||| metadata	count=1
namespace	or set the ||| function	count=1
namespace	into the array ||| function	count=1
function_name	link on [function_name] filesystem without ||| [function_name] sftp lstat	count=1
function_name	get or set ||| fbsql	count=1
function	[function_name_1] a file ||| [function_name_1] [arg_pair_2]	count=3
function_name	an ||| string	count=1
function_name	the blocksize ||| algo block size	count=1
function_name	patterns in the train ||| input train	count=1
function_name	regular expression [function_name] ||| mb ereg [function_name]	count=1
arg_pair	the name of the ||| resource $result	count=4
arg_pair	given password ||| resource $dictionary string $password	count=1
function_name	returns the type ||| type	count=1
function_name	belongs to ||| pg	count=1
function_name	sets the max ||| set size	count=1
function_name	header ||| request header	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=6094
function_name	of the specified events ||| wait event	count=1
return	of elements in ||| int	count=1
arg_pair	positive number determining the ||| resource $ann float $rprop_delta_zero	count=1
function_name	used to [function_name] cubrid ||| cubrid [function_name] export	count=1
function_name	client disconnected ||| connection aborted	count=1
function	[function_name_1] a stream ||| [function_name_1] block algorithm [arg_pair_2]	count=1
function_name	new content object ||| hwapi content new	count=1
function_name	route process ||| get current route	count=1
namespace	end of current ||| eventbuffer	count=1
arg_pair	data ||| string $data string $optlist	count=1
arg_pair	by dn which represents ||| array $dn	count=1
namespace	parameter for a user-defined ||| reflectionparameter	count=1
function_name	be ||| max	count=2
arg_pair	a ||| string $fk_owner string $fk_table	count=1
arg_pair	user ||| string $user	count=2
function	in namespace [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	is described in ||| function	count=1
function_name	class to ||| node class	count=1
function_name	each group expand ||| expand	count=1
function_name	splits ||| dba key split	count=1
arg_pair	a php variable ||| mixed $parameter mixed $variable	count=1
namespace	out of the specified ||| function	count=1
return	returns ||| string	count=2
function_name	fail [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	pdf file using ||| pdf	count=1
function_name	connection with the kadm5 ||| kadm5	count=1
arg_pair	exact color or the ||| int $green	count=1
return	yaf ||| void	count=1
function_name	cipher ||| mcrypt get cipher	count=1
function_name	the current row from ||| cubrid fetch row	count=1
arg_pair	requested option ||| resource $ftp_stream int $option	count=1
namespace	of the parameter for ||| reflectionparameter	count=1
function_name	class ||| class	count=11
function_name	[function_name_1] by reference ||| [function_name_1] [function_name_2]	count=1
namespace	the current node ||| splheap	count=1
return	[return] containing ||| [return]	count=3
arg_pair	argument of ||| int $pri	count=2
function_name	[function_name] the ||| preg [function_name]	count=1
function_name	or virtual pdf ||| pdf	count=1
function_name	[function_name_1] handler ||| [function_name_1] nonce [function_name_2]	count=1
function_name	image border [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] otherwise ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] with error ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] unicode name ||| [function_name_1] property [function_name_2]	count=1
arg_pair	equivalent to memcached::replace() except ||| int $expiration	count=1
return	into ||| int	count=1
function_name	an sql-statement ||| dbx	count=1
function_name	returns one of the ||| get result	count=1
function_name	the current stroke color ||| stroke	count=1
arg_pair	specified algorithm ||| string $algorithm	count=1
function_name	is the default namespace ||| is default namespace	count=1
return	its ||| array	count=1
function_name	product of values ||| product	count=1
namespace	and deletes ||| mongocollection	count=1
function_name	[function_name_1] check with ||| [function_name_2] [function_name_1]	count=3
namespace	model ||| svmmodel	count=3
function	[function_name_1] the associated ||| [arg_pair_2] [function_name_1]	count=3
function_name	description for ||| description	count=1
arg_pair	for a ||| string $domain	count=1
arg_pair	in event_set() occurs ||| resource $event int $timeout	count=1
function_name	[function_name] a parameter ||| ibase param [function_name]	count=1
function_name	current cipher by means ||| cipher info	count=1
function_name	to the [function_name] similar to ||| solarize [function_name]	count=1
function_name	[function_name_1] socket is ||| [function_name_1] [function_name_2]	count=1
function_name	connection with the kadm5 ||| kadm5 init	count=1
function_name	current font size ||| current font size	count=1
function_name	status information ||| status	count=4
function_name	error threshold [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	at that index and ||| mixed $index	count=1
arg_pair	used ||| resource $link_identifier	count=1
return	[return] copy ||| [return]	count=3
arg_pair	snmp objects [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	ingres_execute() ||| ingres prepare	count=2
namespace	the appearance ||| harudestination	count=3
function_name	event status callbacks ||| set callbacks	count=1
arg_pair	serializes the passed variables ||| resource $packet_id mixed $var_name	count=1
function_name	initialize ||| fann init	count=1
arg_pair	delimiter as fields delimiter ||| string $delimiter string $null_as	count=3
arg_pair	charlist parameter ||| string $charlist	count=1
function_name	3 font definition ||| pdf end font	count=2
function_name	the upper [function_name_2] ||| [function_name_2] [function_name_1]	count=6
return	match the regular expression ||| bool	count=1
return	as [return] turns off ||| [return]	count=1
function_name	frontend/backend communication ||| trace	count=1
function_name	glyph definition ||| glyph	count=2
arg_pair	start inclusive limit exclusive ||| mixed $start mixed $limit	count=1
namespace	directoryiterator ||| directoryiterator	count=2
function_name	returns ||| get preg	count=1
arg_pair	a**r)/gamma r * x** ||| float $r	count=1
function_name	streams ||| stream encode	count=2
namespace	forward ||| parentiterator	count=1
function_name	the regex ||| regex	count=2
namespace	to the arguments given ||| function	count=1
arg_pair	to the browser ||| int $expire string $path	count=1
function_name	steepness for ||| steepness	count=2
function	sets [arg_pair_2] ||| [function_name_1] max out epochs [arg_pair_2]	count=1
arg_pair	the contrast of ||| float $beta	count=1
function_name	the specified ||| check	count=1
function_name	bigram phrase fields pf2 ||| bigram phrase fields	count=1
function_name	highlighted snippets ||| set highlight	count=1
arg_pair	to htmlspecialchars() in ||| bool $double_encode	count=1
function_name	the phar::startbuffering() method ||| start buffering	count=1
function_name	the inner iterators children ||| get children	count=1
function	pdf [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] policy ||| [function_name_1] [function_name_2]	count=1
function_name	fetches a row as ||| fetch	count=1
function_name	php starts sending output ||| header	count=1
namespace	a base ||| intlchar	count=1
return	key [return] data correlations ||| [return]	count=2
function_name	[function_name_1] eio ||| [function_name_2] [function_name_1]	count=2
function_name	reads ||| ifxus read	count=1
function_name	a row ||| ibase fetch	count=1
return	internally it shouldnt ||| mongoid	count=1
function_name	opened ||| mcrypt enc is	count=2
namespace	gearmanclient::addtask() gearmanclient::addtaskhigh() gearmanclient::addtasklow() gearmanclient::addtaskbackground() ||| gearmanclient	count=1
arg_pair	the contrast of ||| float $beta int $channel	count=1
function_name	open directory [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	returns headers for ||| imap headers	count=1
function_name	sets ||| setimagescene	count=1
return	to each pixel in ||| bool	count=1
function_name	server [function_name] ||| [function_name]	count=1
function_name	gearmanclient::addtasklow() ||| run	count=1
function_name	is a block ||| block	count=2
function_name	reply ||| send reply start	count=2
function_name	read lock on ||| readlock	count=1
function_name	the target frame ||| target frame	count=2
function_name	[function_name_1] from file ||| [function_name_1] [function_name_2]	count=1
arg_pair	parser parser ||| callable $handler	count=2
arg_pair	gets and sorts message [arg_pair_1] [arg_pair_2] ||| function array imap sort [arg_pair_2] [arg_pair_1]	count=2
arg_pair	snmp object specified by ||| string $host string $community	count=2
arg_pair	to ||| array $params	count=2
arg_pair	equivalent to memcached::getmulti() except ||| string $cas_tokens int $flags	count=1
function_name	fetches ||| ibase	count=1
namespace	the end of file ||| splfileobject	count=1
function_name	[function_name_1] epochs ||| [function_name_1] [function_name_2]	count=7
namespace	of ||| mongocursor	count=1
function_name	databases available from the ||| dbs	count=2
arg_pair	watcher automatically ||| int $priority	count=1
function_name	[function_name_1] option specified ||| [function_name_2] [function_name_1]	count=1
function_name	a backpropagation neural network ||| fann create	count=1
return	to a ||| void	count=1
namespace	or numerically indexed ||| sqlite3result	count=1
function_name	geoip database ||| geoip setup custom	count=1
function_name	[function_name] elements from ||| [function_name]	count=1
namespace	re- configures evperiodic watcher ||| evperiodic	count=1
function_name	specified field ||| mysql field	count=1
function_name	permissions ||| get perms	count=1
function_name	returns the product ||| product	count=1
function_name	write ||| write buffer	count=2
function_name	[function_name_1] relative ||| [function_name_2] [function_name_1]	count=1
arg_pair	a key-value pair ||| mixed $keys	count=1
arg_pair	a directory ||| string $path resource $context	count=1
function_name	matches color with ||| opaque paint image	count=1
function_name	authenticator ||| authenticator	count=1
arg_pair	some pdflib ||| resource $p	count=1
function_name	database cubrid gets blob/clob ||| lob get	count=1
function_name	method returns the ||| get	count=1
function_name	process a response ||| response	count=1
function_name	is readable ||| is readable	count=2
function_name	image chromaticity blue primary ||| image blue primary	count=1
namespace	current path using ||| harupage	count=1
function_name	an url string ||| with url	count=1
function_name	[function_name_1] xml ||| [function_name_2] get current column [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] match [arg_pair_2]	count=25
return	off the ||| bool	count=1
function_name	parameter with string ||| parameter	count=1
function_name	for the current ||| pdf	count=1
arg_pair	with a ||| string $prefix	count=1
function_name	name of ||| current	count=1
return	the position of the ||| int	count=1
arg_pair	the end is reached ||| resource $result int $type	count=1
function_name	ssl buffer ||| ssl filter	count=1
arg_pair	word is correctly ||| string $word	count=1
function_name	a given ||| imagepsslantfont	count=1
function_name	numeric ||| errno	count=1
namespace	splfileinfo ||| splfileinfo	count=1
function_name	with the specified ||| row	count=1
function_name	variables and add the ||| add vars	count=1
function_name	filename is a valid ||| valid	count=1
function_name	creates and returns a ||| create	count=1
function_name	host ||| disable	count=1
function_name	method updates ||| update	count=1
function_name	the training ||| output train	count=1
function_name	return the time zone ||| time zone	count=1
return	error code for the ||| int	count=1
return	or ||| mixed	count=2
arg_pair	of the same size ||| int $method array $arguments	count=1
function_name	of the [function_name] ||| [function_name]	count=2
function_name	the current stroking color ||| get cmykstroke	count=1
function_name	sets boost query ||| set boost query	count=3
function_name	being ||| data	count=1
return	get the name ||| string	count=1
function_name	query syntax ||| query	count=1
function_name	[function_name_1] [function_name_2] handler ||| [function_name_1] [function_name_2]	count=7
function_name	[function_name_1] debug data ||| [function_name_2] [function_name_1]	count=1
function_name	adds an adaptive ||| adaptive	count=1
return	error returned by ||| string	count=1
namespace	current boost value for ||| solrinputdocument	count=1
arg_pair	will be recognized as ||| bool $executable	count=1
function_name	or an empty string ||| string	count=1
function_name	socket described by socket ||| socket	count=1
arg_pair	supplied filename ||| resource $mimemail mixed $filename	count=1
arg_pair	mask [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	bit fail ||| bit fail	count=2
arg_pair	provided by dn ||| array $dn	count=1
function_name	the increase ||| increase	count=1
return	depending on ||| resource	count=1
function_name	sets where the ||| fann set error	count=1
arg_pair	the input ||| array $input	count=1
return	no more ||| bool	count=1
arg_pair	a list of foreign ||| string $fk_table	count=1
function_name	neural network ||| fann create from file	count=1
function_name	[function_name_1] result resource ||| [function_name_2] [function_name_1]	count=3
function_name	the time ||| time	count=1
arg_pair	a ||| string $option	count=1
arg_pair	of up to length ||| resource $zp int $length	count=1
function_name	returns true if the ||| module is	count=1
function_name	maximum [function_name_2] ||| [function_name_1] [function_name_2] query	count=2
function_name	printable string according ||| printable	count=1
arg_pair	of the buffer that ||| int $type	count=1
function_name	exists or not using ||| exists	count=1
function_name	the persistence state ||| set persistence	count=1
function_name	pdf page on the ||| pdf	count=1
function_name	client and ||| sqlsrv client	count=1
function_name	remote filesystem ||| ssh2 sftp	count=2
return	functionally equivalent to ||| bool	count=1
function_name	if it ||| is	count=2
namespace	array [namespace] ||| [namespace]	count=3
function	registers passed [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	on the left the ||| str	count=1
function_name	closes the socket ||| close	count=1
namespace	added with gearmanclient::addtask() ||| gearmanclient	count=1
function_name	sets the target ||| set target	count=1
namespace	this method checks whether ||| mongocursorinterface	count=1
namespace	gets the properties ||| reflectionproperty	count=1
namespace	the ||| solrinputdocument	count=2
function_name	error code ||| udm	count=1
function_name	sets the activation function ||| set activation function	count=2
arg_pair	returns a string containing ||| string $number int $frombase	count=1
arg_pair	to memcached::get() except that ||| callable $cache_cb float $cas_token	count=1
namespace	nonzero winding ||| harupage	count=1
function	line [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	the data and returns ||| string $data string $mode	count=1
function_name	background color ||| background color	count=2
function_name	computes the inverse ||| invert	count=1
return	characters within a string ||| string	count=1
function_name	the next ingres ||| ingres next	count=2
function_name	that cannot ||| metadata	count=1
function_name	[function_name_1] curl ||| [function_name_2] [function_name_1]	count=2
return	to get ||| bool	count=1
return	an integer solrquery::facet_sort_index ||| int	count=1
function_name	normal date parsers ||| create from date string	count=1
arg_pair	a global transaction ||| mixed $connection	count=1
namespace	file is ||| ktaglib_mpeg_audioproperties	count=1
function	[function_name_1] result resource ||| [arg_pair_2] [function_name_1]	count=4
function_name	transformation matrix ||| get trans matrix	count=1
function_name	the maximum number ||| fann get cascade max cand	count=1
return	event from the set ||| bool	count=1
arg_pair	no database is ||| mixed $id	count=1
namespace	with ||| function	count=1
arg_pair	0 ||| resource $ann float $activation_steepness	count=1
function_name	enables ||| enable	count=1
function_name	moves ||| data seek	count=2
arg_pair	one iteration with a ||| resource $ann	count=1
function_name	supplied exception ||| exception	count=2
namespace	shouldnt need ||| mongoid	count=1
function_name	[function_name] peak ||| memory [function_name] peak	count=1
function_name	operation ||| errno	count=2
namespace	the primary key for ||| function	count=1
function_name	[function_name] of elements ||| [function_name]	count=1
arg_pair	be added to the ||| string $localname	count=1
arg_pair	length ||| resource $zp int $length	count=1
arg_pair	to the ||| int $expire string $path	count=1
function_name	with [function_name] a parameter ||| ibase param [function_name]	count=1
arg_pair	sets sorting criteria and ||| resource $id string $criteria	count=1
function_name	inputs in the training ||| input train	count=1
function_name	dictionary exists or not ||| dict exists	count=1
namespace	memcached method ||| memcached	count=2
arg_pair	large object and ||| resource $connection	count=1
function_name	an ||| int	count=1
namespace	an item with ||| memcache	count=1
function	length [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	of text on the ||| resource $pdfdoc string $text	count=1
return	closes the ||| bool	count=2
arg_pair	when the end ||| resource $result	count=1
return	the browser ||| int	count=1
arg_pair	a variable ||| mixed $var bool $syntax_only	count=1
function_name	connects ||| ps closepath	count=3
namespace	this ||| mongocollection	count=1
function_name	the interesting term relevance ||| boost	count=1
function_name	or more write ||| write	count=2
function_name	spacing ||| spacing	count=2
function_name	image used as image-mask ||| mask image	count=1
function_name	name ||| name by name	count=1
function_name	sets the ||| mysqlnd ms set	count=1
arg_pair	large object and returns ||| resource $connection mixed $object_id	count=1
function_name	[function_name_1] alternate q ||| [function_name_1] [function_name_2]	count=2
arg_pair	hostname ||| string $hostname int $port	count=1
return	be called ||| void	count=1
return	of [return] null-value ||| [return]	count=1
namespace	the child before ||| evloop	count=1
function_name	full country ||| country	count=1
namespace	[namespace] the document ||| [namespace]	count=1
function_name	creates a standard ||| create sparse	count=2
function_name	bitwise and ||| gmp and	count=1
function_name	are translated into these ||| htmlentities	count=1
arg_pair	mailbox see ||| resource $imap_stream string $old_mbox	count=1
namespace	generate oauth ||| oauth	count=1
function_name	variant and returns ||| variant	count=1
return	gets [return] textual ||| [return]	count=1
function	rename [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	candidate change [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	data using the ||| string $data	count=1
arg_pair	in subsequent transformations with ||| string $namespace	count=1
namespace	be represented ||| pharfileinfo	count=1
function_name	charcoal drawing ||| charcoal image	count=1
function_name	add the ||| add	count=1
function_name	extracts a line ||| line	count=1
function_name	one or more attributes ||| ldap mod	count=2
namespace	winding number rule ||| harupage	count=1
function_name	minimum ||| sybase min	count=3
function_name	attaches another ||| set arg	count=1
arg_pair	name of the ||| resource $result	count=4
arg_pair	a exists content block ||| string $key	count=1
function_name	an image ||| image	count=14
function_name	via the opendir readdir ||| readdir	count=1
function_name	bytecodes and ||| bcompiler write	count=1
function_name	if the ||| mcrypt module is	count=1
return	string and as ||| array	count=1
function_name	width of ||| width	count=2
arg_pair	an enumerated or ||| mixed $codepoint int $property	count=1
return	match the regular ||| bool	count=1
function_name	color [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	source node [function_name] a ||| transform [function_name]	count=1
return	maximum number of ||| int	count=1
arg_pair	and returns the portion ||| bool $before_needle string $encoding	count=1
arg_pair	value of an ||| string $value string $timeout	count=1
function_name	a priority ||| event buffer priority set	count=1
namespace	function implements a comparison ||| function	count=1
arg_pair	executing the sql statement ||| string $sql	count=1
function	patches a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	node based ||| domnode	count=1
arg_pair	file pointer apply ||| resource $destfp	count=1
arg_pair	position pointing to a ||| string $url	count=1
function_name	creates a copy ||| clone	count=1
function_name	dns ||| dns get	count=1
function_name	blocks e ||| block	count=1
function_name	inserts [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	called by the user ||| set state	count=1
function_name	all elements with ||| elements	count=1
function_name	associated with result resource ||| pg result	count=1
namespace	effective in the ||| yaf_router	count=1
function_name	image obtained ||| imagecreatefromjpeg	count=1
function_name	results through a cursor ||| cursor	count=1
function_name	new connection to ||| connect	count=1
function_name	an animated image is ||| set image ticks per second	count=1
return	an integer representing ||| int	count=1
function_name	an extended json ||| mongo db\bson\from json	count=2
return	it as [return] turns ||| [return]	count=1
arg_pair	with a set of ||| resource $ann array $input	count=1
function_name	to trace ||| maxdb debug	count=1
function_name	stop function used ||| stop function	count=1
function_name	of [function_name] while still ||| reduce noise [function_name]	count=1
function	[function_name_1] [arg_pair_2] is sql null ||| [function_name_1] [arg_pair_2]	count=6
namespace	is ||| mongoid	count=1
arg_pair	resource specified by hostname ||| int $port	count=1
arg_pair	the ||| string $data	count=2
arg_pair	of the color ||| int $green int $blue	count=1
function_name	removes all ||| remove all	count=1
namespace	of the [namespace] file ||| [namespace]	count=1
function_name	width [function_name_2] ||| [function_name_2] text [function_name_1]	count=1
namespace	statement ||| sqlite3stmt	count=1
namespace	before ||| evloop	count=1
function_name	of the next entry ||| readdir	count=1
namespace	monitored events ||| event	count=1
arg_pair	described [arg_pair] ||| [arg_pair]	count=1
function_name	filter ||| filter register	count=2
function_name	[function_name_1] location ||| [function_name_1] [function_name_2]	count=2
function_name	returns the blob length ||| ibase blob	count=1
function_name	sets trigram phrase slop ||| set trigram phrase slop	count=1
function_name	gets [function_name_2] ||| [function_name_1] [function_name_2] properties	count=1
function	[function_name_1] of text ||| [arg_pair_2] [function_name_1]	count=1
function_name	returns a id3v2 object ||| get id3v2	count=1
function_name	a cyrus imap server ||| cyrus	count=1
function_name	with existing ||| set metadata	count=1
function_name	value for an offset ||| offset	count=1
function	[function_name_1] options ||| [function_name_1] [arg_pair_2]	count=5
function_name	typically fetches a batch ||| batch	count=2
arg_pair	for a given ||| int $property	count=1
function_name	quantum [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	by php internally it ||| set state	count=1
function_name	data from a ||| from	count=1
namespace	whether ||| mongocursorinterface	count=1
function_name	find ||| strrpos	count=1
function_name	parallel ||| run	count=1
namespace	function is used ||| function	count=2
function_name	fills a ||| fill pdfblock	count=1
arg_pair	using a given method ||| string $data string $method	count=1
function_name	returns ||| tidy get	count=1
function_name	splits ||| key split	count=1
function_name	into a mysqlnd connection ||| mysqlnd uh convert to mysqlnd	count=1
namespace	in the wsdl for ||| soapclient	count=1
function_name	[function_name_1] internal ||| [function_name_1] [function_name_2]	count=3
function_name	gives the ||| imagepsbbox	count=1
function_name	class which ||| info class	count=1
arg_pair	linked against libmcrypt 2 ||| int $cipher string $key	count=2
namespace	a syncsemaphore object ||| syncsemaphore	count=1
function_name	compresses the given string ||| gzcompress	count=1
arg_pair	parses options passed to ||| string $options	count=1
namespace	by the msql server ||| function	count=1
function_name	which to facet ||| set facet	count=1
arg_pair	of ||| string $path int $flags	count=1
function_name	weights by ||| weights	count=1
function_name	maximum word ||| max word	count=1
arg_pair	a file ||| int $dictionary_link string $file	count=2
function_name	is valid to the ||| get	count=1
arg_pair	image to ||| bool $dither	count=1
function_name	functions drops ||| drop	count=1
function	[function_name_1] false ||| [function_name_1] [arg_pair_2]	count=6
function_name	postgresql frontend/backend ||| pg trace	count=2
function_name	allocates or initializes ||| maxdb init	count=1
function_name	[function_name] xml parser ||| xml parser [function_name] ns	count=1
function_name	the buffer provided ||| add buffer	count=1
namespace	worker ||| gearmanworker	count=6
function_name	[function_name_1] headers ||| [function_name_1] [function_name_2]	count=7
function_name	request handle given by ||| request	count=1
function_name	creates ||| create	count=30
function_name	event handler ||| set event handler	count=1
function_name	checks if ||| exists	count=1
namespace	turns ||| oauth	count=1
function_name	[function_name_1] a record ||| [function_name_1] [function_name_2]	count=1
arg_pair	an enumerated or ||| int $property	count=1
function_name	a new record ||| record	count=1
function_name	[function_name_1] length ||| [function_name_1] line [function_name_2]	count=1
function_name	iterator that ||| iterator class	count=1
arg_pair	log message log ||| string $log	count=1
function_name	current session module ||| session module	count=2
function_name	job servers ||| servers	count=1
arg_pair	result resource ||| resource $result	count=1
return	retrieves a node ||| domnode	count=2
function_name	appends raw [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	to 0600 ||| tempnam	count=1
function_name	training ||| output train	count=1
function_name	oci_parse() ||| statement	count=1
function_name	temperature ||| temperature	count=1
function_name	the error message for ||| stmt error	count=1
function_name	[function_name_1] input ||| [function_name_2] [function_name_1]	count=2
namespace	the document ||| harudoc	count=2
return	a ||| mixed	count=5
function_name	get the terms ||| terms	count=1
function_name	the repository ||| svn log	count=1
function_name	the text interword spacing ||| get text interword spacing	count=1
return	value [return] ||| [return]	count=1
function_name	least [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	the data store only ||| apcu	count=1
function_name	absent ||| empty	count=2
function_name	the tty name ||| tty	count=1
function_name	copies a ||| copy	count=1
function_name	[function_name_1] candidate change ||| [function_name_1] [function_name_2]	count=3
function_name	a textflow ||| fit textflow	count=1
function_name	gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() ||| run	count=1
function_name	cascade candidate activation ||| cascade activation	count=4
arg_pair	with a set of ||| resource $ann	count=1
rest	the string [function_2] ||| [function_2] [return_1]	count=4
function_name	[function_name_1] imap ||| [function_name_2] [function_name_1]	count=2
arg_pair	the end is reached ||| int $type	count=1
namespace	all data ||| eventbuffer	count=1
function_name	error threshold ||| error threshold	count=4
function_name	error message that occurred ||| error	count=1
function_name	sets the sarprop step ||| set sarprop step	count=2
namespace	the wsdl for the ||| soapclient	count=1
function	activation function [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
arg_pair	is identical to htmlspecialchars() ||| string $encoding	count=1
function_name	phrase bigram field pf2 ||| bigram phrase field	count=1
arg_pair	file descriptor at offset ||| int $offset int $pri	count=1
function_name	stored with a file ||| set metadata	count=1
namespace	document ||| solrdocument	count=5
function_name	inner iterator ||| inner iterator	count=4
return	for a ||| void	count=1
function_name	creates an imagick ||| construct	count=1
namespace	exception was thrown ||| solrserverexception	count=1
arg_pair	used afterward by the ||| string $baseclass string $extendedclass	count=1
function_name	performs an obscure check ||| crack check	count=1
function_name	as an sql aggregate ||| aggregate	count=1
arg_pair	array var_array ||| int $max_table_length	count=1
function_name	assign a priority ||| buffer priority	count=1
arg_pair	clients that the property ||| int $type mixed $value	count=1
arg_pair	subsequent transformations ||| string $namespace	count=1
function_name	the database specified ||| dba	count=1
function_name	to include ||| include	count=2
function_name	sets where the ||| set	count=1
namespace	being [namespace] ||| [namespace]	count=1
function_name	the compression ||| compression	count=1
arg_pair	a ||| string $data	count=2
function_name	dn [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	an ||| array $pixels	count=1
namespace	current directoryiterator item in ||| directoryiterator	count=1
return	starts running ||| bool	count=1
arg_pair	clients that the ||| mixed $value	count=1
arg_pair	a directory on ||| resource $sftp string $dirname	count=1
arg_pair	mode on ||| bool $mode	count=1
arg_pair	from the given image ||| int $filters	count=1
function_name	the kadm5 library using ||| kadm5 init with	count=1
function	the given [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	queries [function_name] ||| pdf [function_name] matchbox	count=1
return	and ||| string	count=3
return	to the process with ||| bool	count=1
function_name	the error ||| error	count=2
function_name	sets the ||| set option	count=1
arg_pair	point for a ||| string $attrlat	count=1
function_name	specified status callback ||| status	count=1
arg_pair	the requested option from ||| int $option	count=1
function_name	service proxy ||| gupnp service proxy	count=2
function_name	maximum out [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	sequence type attribute ||| seq drop	count=1
function_name	sets trigram phrase ||| set trigram phrase	count=3
function_name	throw [function_name] in most ||| [function_name]	count=1
arg_pair	much like mssql_connect() ||| string $password bool $new_link	count=1
function_name	adds new float range ||| range	count=1
function_name	number represented in base ||| base	count=1
function_name	fetches ||| imap fetch	count=1
function_name	the phar::startbuffering() ||| start buffering	count=1
function_name	channel from ||| channel	count=1
namespace	a user-defined class definition ||| reflectionclass	count=1
function_name	the databases available from ||| dbs	count=2
arg_pair	the ||| int $param	count=1
return	one or more images ||| array	count=1
arg_pair	the data and ||| string $data	count=1
function	blob/clob by [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	you wish to request ||| request	count=1
arg_pair	starting from object_id and ||| string $object_id	count=2
function_name	[function_name_1] entry ||| [function_name_2] [function_name_1]	count=5
arg_pair	directory named by dirname ||| string $dirname resource $context	count=1
arg_pair	namespaceuri and name name ||| string $namespaceuri	count=1
arg_pair	sets up callback ||| int $type mixed $callback	count=1
namespace	provided in ||| eventbuffer	count=1
function_name	connection [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	cache [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	exception details ||| details	count=1
function_name	fills and ||| closepath fill	count=1
arg_pair	to memcached::replace() except ||| mixed $value int $expiration	count=1
function_name	sets a specific ||| set	count=1
function_name	oid [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	session ||| sessionhandler	count=1
namespace	tasks ||| gearmanclient	count=1
function_name	ftp server ||| ftp get	count=1
arg_pair	usually of the ||| int $method	count=1
function_name	[function_name] phrase ||| get [function_name] use phrase	count=1
arg_pair	for a given value ||| int $property	count=1
arg_pair	array [arg_pair] ||| [arg_pair]	count=1
return	use for ||| string	count=1
return	on the ||| mongocursor	count=1
function_name	[function_name_1] [function_name_2] objects except for those ||| [function_name_1] [function_name_2] except splobjectstorage	count=1
namespace	recursivedirectoryiterator() ||| recursivedirectoryiterator	count=1
function_name	its nodename ||| named item	count=1
function_name	[function_name_1] the minimum ||| [function_name_1] facet [function_name_2] count	count=1
function_name	bigram phrase [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	get the ||| current	count=1
function_name	an adaptive ||| adaptive	count=1
namespace	algorithm of ||| function	count=1
function_name	suitable for maxdb_options() and ||| maxdb	count=1
arg_pair	memcached::set() but instead of ||| array $items int $expiration	count=1
function_name	connection type corresponding to ||| geoip id by name	count=1
arg_pair	fd file [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=1
function_name	[function_name_1] root elements ||| [function_name_1] [function_name_2]	count=2
function_name	limit for ||| limit	count=1
function_name	as image-mask ||| mask	count=1
function_name	the file named ||| to file	count=2
function_name	get the activation ||| fann get activation	count=2
arg_pair	provided by dn ||| array $dn resource $privkey	count=1
arg_pair	part or ||| resource $imap_stream	count=1
function_name	gets the namespace uri ||| lookup namespace uri	count=1
namespace	periodic watcher ||| evperiodic	count=1
arg_pair	by the ||| int $reverse	count=1
function_name	[function_name_1] the image ||| [function_name_2] [function_name_1]	count=7
function_name	as to reduce ||| reduce	count=1
function_name	use w3c xsd schema ||| set schema	count=1
function_name	[function_name_1] comment ||| [function_name_1] [function_name_2]	count=6
function_name	from a ||| load from	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] stretch [function_name_2]	count=19
arg_pair	a ||| string $name callable $callback	count=1
function_name	a block ||| block	count=3
arg_pair	value of an existing ||| string $value	count=2
function_name	days [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	mode is a ||| mcrypt	count=1
namespace	write an image file ||| imagick	count=1
function_name	current active sub iterator ||| inner iterator	count=1
function_name	[function_name_1] logo using ||| [function_name_1] [function_name_2]	count=4
function_name	checks if ||| valid	count=1
function_name	name of ||| get	count=1
function_name	consisting of the elements ||| preg grep	count=1
arg_pair	options that ||| array $options	count=1
function_name	dio_read() ||| dio	count=1
function_name	von einer mime kopfzeile ||| mime encode	count=1
function_name	it shouldnt ||| state	count=1
return	data to the ||| bool	count=1
function_name	compression method of an ||| set compression	count=1
function_name	source node [function_name] a string ||| transform [function_name]	count=1
function_name	current stroking color ||| cmykstroke	count=1
arg_pair	of key into ||| mixed $key	count=1
namespace	database [namespace] can be ||| [namespace]	count=1
function_name	sets the candidate ||| set cascade candidate	count=1
arg_pair	analyses the ||| int $colorspace float $cluster_threshold	count=1
function_name	an ldap directory entry ||| ldap	count=1
arg_pair	the end is ||| resource $result int $type	count=1
function_name	refer to ||| odbc foreignkeys	count=1
arg_pair	whitespace or other characters ||| string $str string $character_mask	count=1
function_name	containing pointers to ||| into struct	count=1
arg_pair	a ||| string $feature string $version	count=1
function_name	encoding of variables ||| variables	count=1
arg_pair	a ||| resource $context	count=1
arg_pair	portion of haystack ||| string $haystack	count=1
namespace	function can handle dates ||| function	count=1
function_name	servers it can contact ||| config	count=1
function_name	returns status information on ||| get status	count=1
function_name	function as event ||| ibase set event	count=1
function	is an [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	the current iterator entry ||| splobjectstorage	count=1
function_name	enumerates the enchant providers ||| enchant	count=1
function_name	maximum number ||| highlight max alternate	count=1
function_name	ibase_connect() ||| ibase	count=1
function_name	[function_name_1] level ||| [function_name_1] [function_name_2]	count=2
return	the periodic ||| void	count=1
function_name	line number ||| line	count=2
function	sets the [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	create new ||| construct	count=1
function_name	transaction [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	defines the style of ||| style	count=1
function_name	status callback ||| task status	count=1
namespace	safe inclusion in an ||| sqlite3	count=1
function_name	[function_name_1] a string ||| [function_name_2] [function_name_1]	count=3
function_name	returns the blob ||| blob	count=1
function_name	anchor point for ||| geo anchor	count=1
namespace	function is used to ||| function	count=2
function_name	[function_name_1] query timeout ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name] elements ||| [function_name]	count=1
namespace	this function sorts an ||| function	count=2
function_name	a non-empty tags ||| broker	count=1
return	a string up to ||| string	count=1
function_name	service [function_name] from ||| es [function_name]	count=1
function_name	the processing ||| progress monitor	count=1
return	for ||| mongocursor	count=1
function_name	pixel ||| image	count=1
function_name	learning rate is ||| get learning rate	count=2
function_name	[function_name_1] existing cubrid ||| [function_name_2] [function_name_1]	count=4
function_name	matches ||| paint opaque image	count=2
namespace	this regular expression ||| mongoregex	count=1
function_name	into a mysqlnd connection ||| uh convert to mysqlnd	count=1
return	percentage of the ||| int	count=2
function_name	without invoking the ||| without constructor	count=1
function_name	get elapsed time for ||| get last elapsed time	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] point [function_name_1]	count=1
function_name	internal ||| internal	count=5
arg_pair	is used to ||| string $host	count=1
return	the information contained by ||| void	count=1
function_name	filter [function_name_2] ||| [function_name_1] [function_name_2]	count=7
namespace	of arguments ||| function	count=1
function_name	all matches ||| all	count=1
function_name	feature ||| feature	count=1
return	a boolean ||| bool	count=2
function_name	information stored with a ||| set	count=1
function_name	sets the [function_name_2] ||| [function_name_1] facet [function_name_2] count	count=1
function_name	row [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	retrieves the ||| function	count=1
function_name	function closes a blob ||| blob close	count=1
function_name	a ||| by name	count=3
arg_pair	of the ||| int $row_number	count=1
arg_pair	a new ||| string $data	count=1
function_name	set ||| fann set	count=3
arg_pair	slant ||| resource $font_index float $slant	count=1
function_name	sample ||| sample	count=1
return	a file that ||| void	count=1
function_name	with a file ||| metadata	count=1
return	descriptor of ||| int	count=1
function_name	font stretch ||| font stretch	count=2
function_name	the external entity reference ||| external entity ref	count=1
function_name	set the compression ||| set compression	count=1
arg_pair	a file ||| string $filename int $options	count=1
function_name	of job servers that ||| servers	count=1
function_name	new image ||| new image	count=2
function_name	of the iv belonging ||| get iv	count=1
function_name	signal [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	read data from ||| read from	count=3
arg_pair	afterward by the php ||| string $baseclass	count=1
function_name	alpha [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	turns off the ||| oauth	count=1
arg_pair	to ann based on ||| resource $ann array $input_vector	count=1
function_name	squares ||| squares	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] set [function_name_2]	count=7
function_name	function ||| processing	count=1
function_name	in each group expand ||| expand	count=1
function_name	previous ||| prev	count=2
function_name	an extended [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	whether ||| is	count=3
namespace	boost value for ||| solrinputdocument	count=1
function_name	binary attribute ||| attr	count=1
function_name	except that fgetcsv() ||| fgetcsv	count=1
function_name	connection with the kadm5 ||| kadm5 init with	count=1
namespace	error returned by the ||| function	count=1
function_name	returns [function_name_2] ||| imagick int [function_name_1] [function_name_2]	count=1
function_name	output change [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	entity [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	whitespace ||| string $str string $character_mask	count=1
arg_pair	of ||| int $color mixed $value	count=1
arg_pair	domain for a single ||| string $domain	count=1
return	sent to on the ||| string	count=1
function	length of the ||| len resource $result	count=3
function_name	the number ||| number	count=1
function_name	line to be read ||| line	count=1
function	the type [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	parameter expects ||| reflectionparameter	count=1
namespace	a maxdb resource suitable ||| function	count=1
arg_pair	[arg_pair_1] given parameters ||| function array imap sort [arg_pair_2] [arg_pair_1]	count=4
return	only ||| mongoid	count=1
function_name	[function_name_1] number of ||| [function_name_2] [function_name_1]	count=4
return	resource for use with ||| resource	count=1
arg_pair	data using ||| string $data	count=1
function_name	retrieve current ||| get	count=1
function_name	mime kopfzeile ||| mime encode	count=1
function_name	[function_name_1] authenticator is ||| [function_name_1] [function_name_2]	count=2
function_name	message that correspond ||| mqseries strerror	count=1
function_name	[function_name_1] not ||| [function_name_2] [function_name_1]	count=1
function_name	a record from ||| record with	count=1
function_name	specified ||| crack	count=1
namespace	or ||| function	count=2
namespace	position in the image ||| imagick	count=1
rest	read the [function_2] ||| [function_2] [return_1]	count=1
function_name	if ||| module is	count=1
function_name	cipher by ||| cipher info	count=1
function_name	streams [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	last internationalization ||| intl	count=1
function_name	[function_name_1] stagnation ||| [function_name_1] [function_name_2]	count=2
arg_pair	equivalent to [arg_pair] ||| [arg_pair]	count=3
return	set object ||| sqlite3result	count=1
function_name	to request [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	weight ||| weight	count=3
function_name	position representing a row ||| db2 fetch	count=1
arg_pair	register a rpc call ||| string $method	count=1
namespace	unicode database file ||| intlchar	count=2
namespace	model file ||| svmmodel	count=1
arg_pair	a ||| string $fieldname string $fieldvalue	count=1
function_name	of the specified color+alpha ||| imagecolorexactalpha	count=1
arg_pair	link annotation to ||| float $lowerleftx	count=1
function_name	[function_name_1] a stopped ||| [function_name_2] [function_name_1]	count=1
function_name	database name from ||| mysql db name	count=2
arg_pair	it from ann ||| resource $ann array $input_vector	count=1
function_name	[function_name_1] absent ||| [function_name_1] [function_name_2]	count=4
arg_pair	domain ||| int $options	count=1
function_name	new [function_name] handlerset_error_handler() ||| [function_name]	count=1
function_name	specify a field ||| field	count=1
function_name	by mysqlnd_ms_xa_begin() ||| mysqlnd ms xa	count=1
return	which match the ||| bool	count=1
function_name	[function_name] provided __autoload ||| [function_name] register	count=1
namespace	gearmanclient::addtasklow() gearmanclient::addtaskbackground() gearmanclient::addtaskhighbackground() or ||| gearmanclient	count=1
arg_pair	user and group ||| string $user string $group	count=1
function_name	ssl_cipher_description ssl ||| ssl	count=1
function_name	warnings ||| warnings	count=1
function_name	core as opposed ||| internal	count=1
namespace	internet host ||| function	count=1
function_name	file named ||| to file	count=2
arg_pair	an ||| int $x	count=1
function_name	[function_name_1] corresponding to ||| [function_name_2] time [function_name_1]	count=1
return	[return] failed ||| [return]	count=3
function_name	sending output ||| header	count=1
namespace	after remaining idle ||| mongocursor	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] extended stats [arg_pair_2]	count=1
namespace	this function is identical ||| function	count=2
function_name	of the miter limit ||| get miter limit	count=1
function_name	the lower bound term ||| lower bound	count=1
arg_pair	data by ||| resource $introspection	count=1
function_name	amount of [function_name] ||| set [function_name]	count=2
function_name	synchronizes ||| eio fdatasync	count=1
arg_pair	by dn ||| array $dn resource $privkey	count=1
function_name	[function_name] suffixes from ||| [function_name]	count=2
return	an opened ||| string	count=1
function_name	of [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	or a list ||| string $fk_table	count=1
arg_pair	functionally equivalent to memcached::get() ||| callable $cache_cb float $cas_token	count=1
function_name	supplied exception when ||| exception	count=2
arg_pair	the closest possible alternative ||| int $green int $blue	count=1
arg_pair	after the given ||| resource $fdf_document string $fieldname	count=1
function_name	corresponding to ||| geoip id	count=1
return	defined ||| void	count=1
function_name	to return [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function	option specified [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	used by ||| set	count=1
namespace	get ||| arrayiterator	count=1
function_name	last message reported ||| last message	count=2
function_name	a url-encoded [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	c client library that ||| client	count=1
function_name	image ||| frame image	count=2
arg_pair	keys and the ||| array $keys	count=1
namespace	constructs a ||| reflectionclass	count=1
arg_pair	value of the ||| resource $link_identifier	count=2
namespace	and restores terminal ||| function	count=1
namespace	function call that ||| function	count=2
function_name	informix ||| ifx	count=1
function_name	boost ||| get boost	count=1
function_name	[function_name] to occur ||| [function_name]	count=3
function_name	[function_name] filesystem without ||| [function_name] sftp lstat	count=1
namespace	current eventbuffer ||| eventbuffer	count=1
return	element which [return] initialized ||| [return]	count=1
return	retrieves the ||| string	count=2
function_name	should terminate ||| terminate	count=1
return	paints the path ||| bool	count=1
arg_pair	import the php array ||| bool $save_indexes	count=1
function_name	backslashes stripped off ||| stripcslashes	count=1
namespace	host specified ||| function	count=1
function	xml [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	to return multiple ||| bool	count=2
arg_pair	as given [arg_pair] ||| [arg_pair]	count=1
function_name	[function_name_1] algorithm ||| [function_name_1] [function_name_2]	count=8
namespace	this function sends a ||| function	count=1
function_name	sets whether ||| set	count=1
function_name	of the internet ||| gethostbyaddr	count=1
function_name	status ||| add task status	count=1
namespace	from the buffer ||| eventbuffer	count=2
arg_pair	file in filename from ||| resource $image string $filename	count=1
function	unified diff [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] priority levels ||| [function_name_2] [function_name_1]	count=1
function_name	contents of an ||| load	count=1
function_name	virtual server ||| server by path	count=1
namespace	child before entering ||| evloop	count=1
function_name	shared secret is needed ||| secret	count=1
arg_pair	number of characters using ||| string $str	count=1
function_name	of the last error ||| error	count=1
function_name	it with spelling alternatives ||| quick check	count=1
return	restarts ||| void	count=1
function_name	[function_name_1] the sarprop ||| [function_name_2] [function_name_1]	count=4
function_name	error handler in ||| error handler	count=2
namespace	the statistics ||| function	count=1
namespace	model data ||| svmmodel	count=1
function_name	a definition [function_name] ||| [function_name]	count=3
function_name	objects that had errors ||| errors	count=1
function_name	traverse over a number ||| snmp2 real walk	count=1
arg_pair	after the given ||| resource $fdf_document	count=1
function_name	csr and saves ||| csr export	count=1
return	or gearmanclient::addtasklowbackground() this call ||| bool	count=1
function_name	resume ||| resume	count=1
arg_pair	to ann ||| array $input_vector	count=1
function_name	ftp server ||| ftp rmdir	count=1
function_name	an access token ||| access token	count=1
function_name	current cipher by means ||| cipher	count=1
namespace	and turns off ||| function	count=1
function_name	commits the outstanding transaction ||| commit	count=1
namespace	this job is running ||| gearmanjob	count=1
return	of tasks previously added ||| bool	count=1
arg_pair	number determining the ||| resource $ann	count=1
return	result identifier ||| object	count=1
namespace	checks this is ||| oauth	count=1
function_name	register your own extended ||| register	count=1
arg_pair	specified opcode with the ||| int $opcode callable $callable	count=1
function_name	the timer event ||| event timer set	count=2
arg_pair	or the ||| resource $imap_stream mixed $file	count=1
arg_pair	support and returns a ||| string $separator	count=1
function_name	[function_name_1] to use ||| [function_name_2] [function_name_1]	count=1
function_name	sets where ||| fann set error	count=1
function_name	sets the initial ||| set	count=2
arg_pair	an array [arg_pair] ||| [arg_pair]	count=1
return	a color ||| bool	count=1
function_name	the constants [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	with handle and ||| resource $handle	count=1
function_name	given ||| date	count=1
arg_pair	in the ||| int $channel	count=1
arg_pair	enables automatic ||| float $min_savings	count=1
function_name	sets certain [function_name] ||| ps set [function_name]	count=1
function_name	[function_name_1] json ||| [function_name_2] [function_name_1]	count=3
function_name	format of a particular ||| format	count=1
function_name	resets the internal key ||| firstkey	count=1
arg_pair	a target url on ||| string $url	count=1
function_name	distributing reads to secondaries ||| get slave okay	count=3
function_name	returns a simplexmliterator ||| get	count=1
function_name	action for ||| action	count=2
function_name	of oci_parse() or obtained ||| statement	count=1
arg_pair	at the given ||| resource $psdoc float $llx	count=2
return	resource ||| resource	count=1
function_name	affected ||| affected	count=2
function_name	orientation ||| orientation	count=1
function_name	elements name ||| name	count=1
function_name	unified ||| xdiff	count=2
namespace	as special operators by ||| sphinxclient	count=1
function_name	iterator that was passed ||| iterator	count=1
function_name	the number of ||| num	count=3
function	[function_name_1] [arg_pair_2] ||| function resource [function_name_1] [arg_pair_2]	count=3
namespace	method checks whether ||| mongocursorinterface	count=1
function_name	it with spelling alternatives ||| dict quick check	count=1
function_name	line ||| line	count=10
namespace	a domdocument ||| domdocument	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] phrase [function_name_2]	count=3
arg_pair	address using ||| string $address	count=1
function_name	number of ||| mysqli field count	count=1
function_name	with block [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	the given password on ||| resource $dictionary string $password	count=1
function_name	permission set to 0600 ||| tempnam	count=1
arg_pair	added to the ||| string $file string $localname	count=1
arg_pair	in result argument of ||| string $path int $pri	count=2
arg_pair	dn ||| array $dn	count=1
return	name [return] ||| [return]	count=1
function_name	minimum client ||| min client	count=1
return	used ||| string	count=1
arg_pair	parses a ||| string $enclosure	count=1
function_name	radius request has been ||| radius send request	count=1
namespace	cairoimagesuface object ||| cairoimagesurface	count=1
arg_pair	the client ||| bool $silent int $command	count=1
function_name	sets anchor ||| set geo anchor	count=1
arg_pair	specified result identifier ||| resource $result_id	count=1
function_name	pdi document parameter with ||| pdi	count=1
function_name	properties ||| get properties	count=2
arg_pair	row of data from ||| resource $result_identifier	count=1
arg_pair	str with all alphabetic ||| string $str	count=1
return	the [return] of the ||| [return]	count=1
function_name	default external [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	mailbox see imap_open() ||| resource $imap_stream	count=1
function_name	current process ||| posix getpid	count=1
arg_pair	from the service provider ||| string $request_token_url string $callback_url	count=1
function_name	/cosh ||| tanh	count=1
arg_pair	can include ||| resource $connection	count=1
function_name	blob for reading ||| ibase blob echo	count=1
function_name	the process title ||| process title	count=2
namespace	iterator ||| iteratoriterator	count=1
arg_pair	zip-based ||| string $webindexfile	count=1
return	code for the ||| int	count=1
arg_pair	a result from a ||| object $result	count=1
arg_pair	input for fields in ||| string $delimiter	count=1
function_name	by php ||| set	count=1
function_name	gets the blocksize ||| get algo block size	count=1
function_name	scales the ||| scale output	count=1
function_name	headers for all ||| headers	count=1
function_name	message from previous frontbase ||| fbsql	count=1
function_name	change color definitions using ||| change color	count=1
function_name	handler callback function ||| handler	count=2
function_name	returns the ||| get image	count=2
function_name	used ||| state	count=1
arg_pair	retrieve the ||| resource $result	count=1
function_name	virtual server ||| get server by path	count=1
arg_pair	database for database queries ||| mysqlnd_connection $connection string $database	count=1
arg_pair	name variable_name in ||| string $variable_name	count=1
arg_pair	in subsequent transformations with ||| string $namespace string $name	count=1
function_name	dumps ||| debug dump params	count=1
arg_pair	during [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	computes the intersection of ||| uintersect assoc	count=1
function_name	specify a callback ||| preg replace callback	count=1
function_name	spl ||| spl	count=2
arg_pair	on the ||| resource $pdfdoc float $llx	count=1
function_name	that matches ||| opaque paint	count=1
function_name	entire network ||| fann get	count=2
function_name	frequency below which terms ||| mlt min term frequency	count=1
arg_pair	pl/sql ||| int $type	count=1
namespace	oauth parameters should ||| oauth	count=1
function_name	code [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	an http ||| eventhttprequest $req	count=1
arg_pair	text ||| string $text	count=2
function_name	tty name ||| tty	count=1
function_name	with ||| metadata	count=2
arg_pair	new columns ||| array $columns	count=1
arg_pair	the ||| int $events mixed $callback	count=1
function_name	only used by php ||| set	count=1
arg_pair	all or part of ||| int $ndocs array $callbacks	count=2
namespace	job server ||| gearmanjob	count=3
arg_pair	a scrollable cursor ||| resource $stmt int $row_number	count=1
function_name	the next [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] id3v2 object ||| [function_name_1] [function_name_2]	count=1
function_name	a priority ||| priority set	count=2
namespace	[namespace] an integer ||| [namespace]	count=1
arg_pair	an ||| int $length	count=1
function_name	trace log for each ||| trace log	count=1
function_name	used with ||| fbsql	count=1
arg_pair	and values that correspond ||| array $ctorparams	count=1
return	code ||| bool	count=1
function_name	and get ||| gupnp	count=1
arg_pair	direction of the ||| int $size int $direction	count=1
function_name	associated with the specified ||| pg fetch row	count=1
function_name	status information ||| stat	count=1
function_name	sends ||| send	count=7
function_name	terminates a glyph definition ||| end glyph	count=1
function_name	keys ||| keys	count=1
return	generates a ||| string	count=1
arg_pair	registers a ||| string $name	count=2
function_name	exists or not ||| exists	count=1
function_name	the transaction ||| transaction	count=1
function_name	query string ||| query	count=2
function_name	merges ||| array merge recursive	count=2
function_name	runs the form passed ||| run form	count=1
function_name	the client information ||| client info	count=2
function_name	array of [function_name] this server ||| get [function_name]	count=1
function_name	current text ||| text	count=1
function_name	a maxdb ||| maxdb	count=1
function_name	two letter country code ||| country code	count=1
function	[function_name_1] original ||| [arg_pair_2] [function_name_1]	count=4
function_name	to traverse over a ||| real walk	count=1
function_name	signal ||| pcntl signal	count=1
function	[function_name_1] a message ||| [arg_pair_2] [function_name_1]	count=1
function_name	returns the [function_name_2] ||| [function_name_1] temp [function_name_2]	count=1
function_name	reference ||| reference	count=1
function_name	of [function_name] ||| [function_name] set	count=1
function_name	gets ||| pdf get	count=2
function_name	image and [function_name] specified distortion ||| [function_name] image channel distortion	count=1
function_name	3 more control points ||| pdf curveto	count=1
function	[function_name_1] an external ||| [function_name_1] phar [arg_pair_2]	count=1
arg_pair	in subsequent transformations with ||| string $name	count=1
function_name	replaces them ||| replace	count=1
return	column in [return] ||| [return]	count=2
arg_pair	an event ||| int $bytes_max	count=1
arg_pair	a table ||| string $table	count=1
function_name	[function_name_1] extended attribute ||| [function_name_2] [function_name_1]	count=6
function_name	set the compression method ||| set compression	count=1
function	send [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function	the [function_name_1] [arg_pair_2] multibyte regular expression ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	at the server yet ||| int $flag int $expire	count=1
function_name	returns a similarity image ||| image	count=1
namespace	returns the host ||| function	count=1
