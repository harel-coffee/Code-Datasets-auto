function	$f_5$ $f_4$ $f_8$ $f_3$ $f_2$ $f_7$ $f_6$
container	$list$ $tuple_3$ $tuple_2$ $tuple_4$ $tuple_5$ $tuple_7$ $tuple_6$
variable	a b e f i m l dev cat p t e1 e2
type_class	Category Foldable RealFloat ArrowLoop Applicative Generic IsChar TestCoercion IODevice/BufferedIO/Typeable MonadPlus Storable/Eq Fractional Floating FiniteBits Bits Real HasResolution BufferedIO Enum Monoid Ord/Num Integral/Bits Data ArrowApply Exception ArrowChoice MonadFix MonadZip Traversable Coercible Generic1 Arrow RawIO Typeable Eq/Num Ord Storable Ix RealFrac Show Monad Bits/Num IODevice Integral Integral/Show Functor Bifunctor Num IsList Alternative Integral/Bounded Eq ArrowPlus
exception	isDoesNotExistError throwErrnoIfMinus1 throwErrnoPathIfMinus1_ modifyIOError throwErrnoIfMinus1RetryMayBlock_ isAlreadyExistsErrorType throwErrnoIfNullRetry throwErrnoIfRetryMayBlock Error isAlreadyExistsError isFullErrorType throwErrnoIf mapException isPermissionErrorType isUserError errorBadFormat NoMethodError throwErrnoIfRetry error throwErrnoIfMinus1Retry_ perror catchIOError isValidErrno isDoesNotExistErrorType SomeException throwErrnoIfRetry_ mkIOError RecSelError toException Errno isFullError isAlreadyInUseErrorType throwErrnoIfRetryMayBlock_ isEOFError userError Exception throwErrnoPathIfNull errorWithStackTrace isIllegalOperationErrorType RecConError throwErrnoIfMinus1RetryMayBlock SomeAsyncException throwErrnoPathIfMinus1 isEOFErrorType isUserErrorType throwErrnoPath throwErrnoIf_ annotateIOError RecUpdError throwErrnoIfMinus1Retry isPermissionError onException ErrorCall tryIOError throwErrnoIfNullRetryMayBlock displayException throwErrnoPathIf_ throwErrnoPathIf errnoToIOError bracketOnError isAlreadyInUseError ioError throwErrnoIfNull throwErrnoIfMinus1_ throwErrno
log-syms	false (&&) (||) & | (&) (|) (==) == || && not and or any all true bool boolean eq xor
math-syms	(^) ^ (^^) ^^ ($!) (:+) (%) % (/) (+)
appl-stms	(***) (&&&) (^>>) (>>^) (>>>) (<<<) (<<^) (<+>) (+++) (|||) (<*>) (*>) (<*) (<|>) (<$>) (<$) (<**>) (>>=) (>>)
list-stms	(++) (\)