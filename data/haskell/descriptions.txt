show	function functions prepends associated string show readable strings return values output converting existing class shows
text	c associated show printf readable functions class 3 values converting -like formatter strings
dynamic	support object dynamic encapsulated value together provides basic interface type types
stref	lazy containing thread monad type stref value st strict state references re-export variable mutable data
integer	used useful fit invariants jp# value jn# iff resulting s# invariant properties
ptr	code marshalled integral module haskell value array pointer ptr unsigned provides losslessly type function may typed object callable funptr objects data represents pointers signed foreign converted values
cfpos	representing c haskell type fpos_t
d1	synonym meta-information type datatypes encoding
seekmode	hseek hdl determines mode effect
foldable	data folded value summary structures class
ratio	functions ratio integral denominator numerator two arbitrary-precision standard values numbers rational represented integer type
cstring	terminated c string reference nul characters array
fix	fixpoints monadic
argdescr	option whether argument value describes injected type takes
environment	environment information miscellaneous system
internal	function used tycon derived construct instances typerep typeable representations mktycon types
cwstring	wide c string reference terminated nul characters array
int32	integer 32-bit type signed
word16	integer type 16-bit unsigned
handle	operations stream supported api file kinds implemented defines implementation three write line-buffering no-buffering type files handle read descriptors newline effect external characters represented buffering determines block-buffering fds haskell values mode ghc representation hdl hseek
string	operations primitive associated marshalling reference explicit middle nul array information character list terminating instead type string terminated utilities allowing characters wide c cwchars bytes length strings
parsercombinators	koen combinators parser library written claessen originally
read	converting values strings
void	given used uninhabited data term indicate exist logically type
safe	control monad maintained references use deeply please strict instead type state-transformer lazy safe realworld objects represents language default deprecated magical foreign foreignptr
ioerrortype	abstract contains variant value ioerror type
exts	ghc-specific get extensions way ghc approved
unique	generator abstract object interface unique symbol
codingfailuremode	specifies used handle illegal construct sequences textencodings codingfailuremode
identity	monad functor identity
equality	definition propositional equality (:~:)
d	datatype tag m1
env	function associated plain variant argument foreign finalizer finalisation time represented gets pointer
list	operations lists
p	use used longer deprecated p r instead
traversable	right data performing element traversed action structures class left
bufferedio	buffered devices class io
either	operations associated type either
arrow	hughes based programming may science arrows 2000 monads computer generalising 37 arrow basic definitions john pp67-111
double	floating double-precision numbers point
debug	tracing functions execution monitoring
fixed	works 10^-9 resolution 10^-6 10^-1 module 10^-2 1 fixed-precision 10^-3 = integer fixed type arithmetic defines
tycon	representation abstract type constructor
par0	use used longer deprecated par0 instead rec0
sync	status thread current stuff concurrency basic
functor	functors map generalizing function functor parameterized uniform monad lists action type identity
rec0	kind synonym encoding recursion *) type
eq	equality
event	timeout invoked provides state timeouts notification registration scalable module events i/o callback manager cookie file descriptors lifetime descriptor event
iodevicetype	used handle mkfilehandle back also see device type
intptr	integral signed converted losslessly type ptr
stats	statistics garbage module access internal collection provides memory usage
monoid	binary general-purpose instances various associative identity monoids operation class types
cwstringlen	wide string information character cwchars explicit nul middle length terminating allowing characters instead
rational	ratio two arbitrary-precision values numbers rational represented integer
version	representation versions manipulation library general
exit	codes return exiting program exit defines
generics	fields encoding constructors tag par0 rec0 meta-information record recursion k1 without m1 instead type used void constructor use selector *) using datatypes name kind synonym longer datatype deprecated selectors p r ghc
shows	function functions prepends return string existing output shows
cfile	representing c haskell type file
lazy	control identical lazy state-transformer realworld monad deprecated safe please use module st presents default references deeply interface mutable magical
timeout	timeout computations attach io arbitrary event
mem	followed garbage abstract general names lifetime existence collector reference pointer not-quite-exact - system fast 1 way stable supports terms object weak effect objects key hashing comparison equality name performing value memory-related things ),
weak	terms garbage reference collector object weak effect value general - key existence followed pointer lifetime
qsemn	semaphores resource thread may semaphore aqcuired qsemn one released amount arbitrary units quantity wait
word32	integer 32-bit type unsigned
base	operations received exception multiple thread handlers monad except behaviour generated describes asynchronous extensible io exceptions array occur
e9	= 10^-6 resolution
proxy	definition ghc type proxy poly-kinded
constr	representation constructors
lex	cut-down haskell text used lexer
console	command-line standalone library parsing facilities program provides options
ord	orderings
timeoutcallback	callback invoked events timeout
prelude	precise represent int prepends useful computation point monad unicode integral arbitrary-precision existing i/o fixed-precision haskell numbers file http floating size whose functions iso/iec fit character system least 10646 rational s# values type 2010 //www shows function used names string io returning dependent jp# return jn# exceptions meaning operating two characters enumeration represented integer properties char unsigned word resulting invariants list see value equivalently range double-precision iff ratio single-precision directory output invariant [-2^29 performed
e3	= resolution 10^-2
e2	10^-1 = resolution
c	primitive marshalling library haskell ffi codes errno support bundles m1 c-specific functionality corresponding constructor utilities mapping types c handling specific tag error strings
consolehandler	nb
v1	void used constructors datatypes without
modifierparser	function string format parse characters modifier type
foreign	operations via concurrency reference marshalled bundles module maintained haskell references ffi encodings array pointer ptr marshalling use imported garbage support please configurable functionality provides stable instead type function object affected may typed safe collection part library interface datatypes data guaranteed represents c language default deprecated pointers value foreign specific objects values expression ghc usually foreignptr require cstrings
eventmanager	manager event state
s	record tag m1 selector
ioexception	exceptions monad occur io
threadid	handle thread type abstract threadid representing
typeable	function reifies used extent monomorphic concrete type tycon constructor derived construct abstract instances associating typerep representation typeable representations mktycon class types
wordptr	integral unsigned converted losslessly type ptr
typelits	represents kind natural unknown module symbols internal numbers ghc type type-level
storable	module foreign
e12	10^-9 = resolution
encoding	encoding/decoding text fails specifying types
monad	operations launchbury useful monad functional functor instances monads paper pldi simon described module support contains strict state future comprehensions provides john state-transformer lazy used zipping monadic monadplus threads library removed 94 peyton jones deprecated classes fixpoints
float	floating point numbers single-precision
ioref	monad mutable variable references io
instances	deprecated contains module instances future removed
printf	function c modifier string format argument reified parse field 3 characters printf -like formatter type
asyncexception	exceptions asynchronous
array	storing marshalling language retrieving arrays support routines lists foreign haskell represented allocating
fieldformatter	field formatter type argument reified
coercion	representational definition equality coercion
cstringlen	information string explicit bytes nul middle length terminating allowing characters instead
somesymbol	symbols represents type-level type unknown
mvar	mvar pronounced concurrent used synchronising communication contains value variable threads location em-var mutable type empty either
e6	= resolution 10^-3
zip	monad used zipping monadic comprehensions
buffermode	kinds block-buffering supported three line-buffering no-buffering buffering
noselector	without fields used name constructor
e1	1 integer works resolution
threadstatus	current status thread
maskingstate	received exception thread behaviour describes asynchronous
system	characteristics library io event information things system environment attach enough program run miscellaneous cputime lucky host standard computations exiting memory-related timeout arbitrary
strict	control monad st strict references re-export mutable data
types	c corresponding fpos_t representing mapping haskell file type types
ioerror	monad haskell io exceptions type 2010
bits	operations integers module unsigned signed bitwise defines
function	simple combinators solely functions working
tuple	associated functions data types tuple
chan	unbounded abstract chan fifo channels type representing channel
word8	integer 8-bit type unsigned
cputime	library cputime standard
failure	specifies fails used handle encoding/decoding text sequences construct specifying illegal textencodings codingfailuremode types
numeric	integers non-negative natural type number arbitrary-precision representing
c1	synonym meta-information constructors type encoding
int8	integer 8-bit type signed
info	information run characteristics host lucky system enough program
exception	operations monad built-in module catching asynchronous io array occur support except describes provides multiple behaviour generated raising received exception thread handlers user-defined extensible exceptions
word	32-bit word int integral unsigned 64-bit integer 8-bit type 16-bit types size
qsem	semaphores resource qsem simple aqcuired one released semaphore units quantity
readp	koen combinators parser library written claessen originally
type	operations definition equality booleans representational basic propositional coercion (:~:) type-level
iocallback	i/o callback invoked events
lexeme	cut-down haskell text used lexer
r	recursion k1 tag kind *)
error	marshalling monad abstract testing haskell io usererror codes errno support contains state c-specific type 2010 indicating return variant c standard errors ioerror raising case exception handling routines value values error exceptions
exitcode	return program codes exit defines
control	operations useful monad programming built-in functor monads catching concurrency technically 37 based abstractions support describes raising provides basic john pp67-111 may collection monadplus lax module interface intermediate strong structure hughes monoidal science arrows user-defined 2000 classes generalising common arrow exceptions definitions computer
ix	ix used map onto contiguous subrange values integers type class
int	32-bit 64-bit range least 16-bit fixed-precision signed integer 8-bit type [-2^29 types
staticptr	used unsafelookupstaticptr reference serialized symbolic value values key staticptrs references type
utils	primitive marshaling utilities
unsafe	operations marshalling foreignptr support unsafe io type
char	operations represent associated general char see unicode table whose iso/iec character enumeration 2 listed type //www http 10646 standard characters particular categories unicodedata database column equivalently values order
coerce	safe data types coercions
reads	function pairs takes parses parser list possible returns represented type string
conc	status thread current stuff concurrency basic
timeoutkey	cookie timeout registration
io	operations buffered block-buffering another stream providers bytes unicode names unsafe library three i/o api value io sequences kinds hseek buffers defines whose functions errors for line-buffering implementation with specification interfacing system supported write dependent no-buffering scheme type files file used handle string returning read newline effect collection standard directory meaning operating external characters represented computation buffering data class types conversion a and determines language textencoding of programming devices precise classes values mode ghc haskell representation hdl performed
lifetime	lifetime event registration
argorder	following options non-options
funptr	function code type value foreign callable funptr pointer
applicative	monoidal monad describes functor intermediate lax module strong structure technically
stablename	comparison not-quite-exact equality name object abstract performing fast 1 objects names way stable hashing supports ),
fdkey	descriptor cookie file registration
filepath	precise whose string dependent system meaning values names file directory operating type
conindex	index given counting datatype text constructors 1 program unique order
s1	meta-information synonym encoding selectors record type
stableptr	function haskell via imported garbage reference expression guaranteed module foreign usually part collection ffi stable interface affected pointer
complex	algebraic complex type numbers
bool	operations booleans type-level basic
nat	kind natural numbers type-level
getopt	following option command-line standalone whether describes argument library parsing facilities program value provides non-options injected type options takes
somenat	represents natural unknown numbers type type-level
generalcategory	unicodedata database column character general 2 listed unicode particular table standard order categories
int16	integer type 16-bit signed
arrayexception	exceptions operations generated array
trace	tracing functions execution monitoring
buffer	used io buffers system
timermanager	manager event state
symbol	symbols kind type-level
newline	representation stream newline external file
textencoding	conversion characters specification bytes textencoding unicode sequences scheme
concurrent	operations useful concurrency simple unbounded abstract chan fifo one channels variable used ffi mvar pronounced use abstractions contains threadid location channel communication units mutable type empty either synchronising semaphores handle may ghc aqcuired qsemn collection concurrent threads interface datatypes representing wait semaphore resource qsem thread released require value amount common arbitrary em-var quantity
fd	operations handle descriptors fds file implemented
device	used determines providers mkfilehandle effect back i/o also see classes mode device handle hdl type hseek
data	operations represent text dynamic stref unicode whose generator folded unsigned simple program string coercions showing safe integer unique term equality performing summary traversed either fixed associative right uninhabited combinators library fixed-precision signed operation index for scrap uniform state various provides reading //www ends object general-purpose standard proxy extent interface integers generalizing thread algebraic of programming range action definition onto monad character integral encapsulated order instances haskell references logically orderings datatypes size given working indicate together support least strict types basic type contiguous function boilerplate tuple 10646 lists module manipulation --- kind word versions structures subrange value realfloat-like values reifies poly-kinded solely and ix associated int numerator abstract constructors bitwise general char exist numbers io element defines functors binary functions counting iso/iec mostly generic enumeration 1 complex rational mutable arithmetic map used http see symbol denominator containing typeable characters variable representations associating data class identity datatype maybe odds parameterized st equivalently ghc representation [-2^29 monoids left
stack	access call-stack simulation ghc
pool	pooled support contains module management memory pool
a	function pairs associated takes plain argument pointer parses parser list possible variant foreign finalizer returns finalisation time represented gets type string
alloc	module foreign
marshal	storing primitive marshalling testing module haskell allocating marshaling usererror use management retrieving support contains please state pool memory indicating return safe utilities lists represented raising case exception pooled language default deprecated routines foreign arrays values error
natural	integers non-negative natural type number arbitrary-precision representing
realworld	realworld magical deeply
datatype	representation datatypes
maybe	operations maybe associated type
oldlist	operations module access list-specialised legacy provides data
typerep	concrete type monomorphic representation
st	control state-transformer launchbury monad functional module paper pldi use simon described deeply support please presents strict state provides re-export john identical lazy safe realworld threads library interface 94 peyton jones default deprecated magical st
word64	integer type unsigned 64-bit
int64	integer type signed 64-bit
statickey	serialized staticptrs used unsafelookupstaticptr key
foreignptr	operations represents use language default deprecated safe please foreign maintained objects references type foreignptr
