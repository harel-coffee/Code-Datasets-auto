arg	procedure is ||| object	count=1
arg	k elements ||| list k	count=1
function_arg	check for reference-trap objects [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] to output-port ||| [function_1] [arg_2]	count=1
arg	of weak-pair to ||| weak-pair	count=2
arg	start1 to [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	match the [arg_2] ||| [arg_2] [function_1]	count=1
function	be a ||| output to string	count=1
function	car ||| weak car	count=1
function	may ||| signed integer >bit string	count=1
function	returns the name of ||| class name	count=1
function	be ||| with output	count=1
arg	[arg_1] transformer ||| [arg_1] symbol [arg_2]	count=1
function_arg	“and” [arg_2] ||| [arg_2] [function_1]	count=1
function	procedure ||| entity procedure	count=1
function	dispatch tag ||| dispatch tag	count=2
arg	of length k ||| k initialization	count=1
function	that accepts arbitrary objects ||| strong eq	count=1
function	type for hash ||| hash	count=4
function	size of ||| hash table size	count=1
function	argument that is ||| type:bad range argument	count=1
arg	predicate ||| predicate list	count=5
arg	end of procedure ||| procedure	count=1
function	graphics device at the ||| draw subimage	count=1
arg	expression is ||| expression	count=2
function	return the numerator of ||| numerator	count=1
function	character not ||| not syntax char	count=1
arg	symbol must be bound ||| symbol object	count=1
function	invokes the fresh-line on ||| port fresh line	count=1
arg	procedure ||| procedure list	count=1
module	amount of [module] ||| [module]	count=1
module	flushes ||| 17.5	count=1
function_arg	must name [arg_2] ||| [arg_2] [function_1]	count=2
arg	argument and [arg_2] ||| [arg_2] [arg_1]	count=4
function	returns the ||| string	count=1
function	write ||| port write char	count=1
arg	[arg] key-hashing procedure ||| [arg]	count=1
rep	this matches [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	of condition-type ||| condition-type	count=2
function	of no ||| output	count=1
function	return a new ||| make	count=1
function	strongly ||| type:datum	count=1
module	of no ||| 14.3	count=1
function_arg	the classes [arg_2] ||| [arg_2] [function_1]	count=1
arg	by procedure ||| procedure	count=1
function	the ancestor ||| environment	count=1
function	be ||| with	count=1
function	ip addresses for ||| get host by	count=1
module	of [module] is an ||| [module]	count=1
function	return #t if ||| port type?	count=1
function	the [function] ||| string [function]	count=6
function	that names [function] character into ||| [function]	count=1
function	a regular expression ||| regexp group	count=1
arg	output-port ||| output-port char	count=2
function	the access time of ||| access time	count=1
arg	[arg] order applying ||| action [arg]	count=1
function	a list of the ||| list	count=1
arg	character in buffer ||| buffer index	count=2
function	the most common ||| type:system call error	count=1
function	the output terminal ||| set output terminal	count=1
arg	input-port and ||| input-port	count=3
arg	predicate ||| predicate	count=6
function	key ||| key	count=2
function	applicable methods ||| applicable methods	count=2
module	[module] of the ||| [module]	count=3
function	the rehash size ||| rehash size	count=1
arg	source-filename [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] [arg_2] tree is empty ||| [arg_1] [arg_2]	count=1
function	procedure of ||| to string	count=1
module	objects and `#f' otherwise ||| 12.6.1	count=1
function	access [function_2] ||| [function_2] [function_1]	count=2
function	are associated with ||| 2d get	count=2
function	terminal mode of ||| terminal mode	count=6
function	tail ||| tail	count=1
arg	[arg_1] modification-time ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] thunk must ||| [function_1] [arg_2]	count=1
function	the symbol part of ||| xml name	count=1
arg	the expressions ||| expression expression	count=1
arg	converts a time-string argument ||| time-string	count=1
function	block ||| no	count=2
function	returns the input ||| input	count=2
function	output ||| output string	count=1
function	of ||| string ref	count=2
function	prompts [function] an ||| [function] command	count=1
function	extracts the ||| condition accessor	count=1
arg	[arg_1] must ||| [arg_2] [arg_1]	count=2
arg	[arg_1] to output-port ||| [arg_2] [arg_1]	count=6
function	the wrong [function_2] ||| [function_2] [function_1]	count=3
arg	defined by procedure ||| procedure	count=1
function	returns the rehash size ||| table rehash size	count=1
function	the type represented ||| set record type	count=2
arg	free-names must be a ||| free-names	count=1
arg	buffer's contents ||| buffer	count=1
function	string ||| string ref	count=2
function_arg	specializers of [arg_2] ||| [function_1] [arg_2]	count=1
function	output and ||| output	count=1
function	filename1 ||| file eq?	count=1
function	like substring->parser-buffer but buffers ||| string >parser buffer	count=1
arg	[arg_1] identifier2 ||| [arg_1] [arg_2]	count=3
function	file-time format ||| universal time >file	count=1
arg	of a particular field ||| field-name	count=1
arg	port errors ||| port	count=1
function	types ||| no	count=1
module	the block ||| 4.3.3	count=2
arg	[arg] tree is ||| rb-tree [arg]	count=3
arg	arity ||| arity	count=2
function	subprocess-abnormal-termination ||| stopped	count=1
function_arg	loads the option [function_1] [arg_2] if already loaded does ||| [function_1] option [arg_2]	count=1
arg	the [arg] ||| identifier [arg]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] h	count=3
function_arg	name of class ||| class name class	count=2
function	the operation ||| port type operation	count=1
function	bind the ||| graphics bind	count=1
arg	the binary operation procedure ||| procedure initial	count=1
function	bind the drawing ||| graphics bind drawing	count=3
arg	association of datum ||| datum	count=1
function	a method of ||| method	count=1
function	must be a procedure ||| with output to string	count=1
function_arg	arity object [arg_2] ||| [arg_2] [function_1]	count=1
function	that the first “required ||| named	count=1
function_arg	[function_1] of filename ||| [function_1] [arg_2]	count=4
function	applying action [function] each association ||| [function]	count=1
function	file [function] calls ||| [function] temporary file	count=1
function	returns the name ||| restart name	count=1
module	is the ||| 15.5.1	count=1
function	an ||| wide	count=1
function_arg	[function_1] strings substrings ||| [function_1] forward [arg_2]	count=1
function_arg	name of restart ||| restart name restart	count=2
module	flonum ||| 4.7.2	count=1
function	normal value in ||| lookup	count=1
function	the user for ||| prompt for	count=3
arg	xml document consists of ||| attributes contents	count=1
function	new ||| new	count=1
function	[function_1] [function_2] ||| -1 sc [function_1] [function_2]	count=16
function	the write operation ||| write char	count=1
arg	of the first expression ||| expression	count=1
arg	height ||| height	count=1
function	passing it ||| synchronous subprocess	count=1
arg	if-found must ||| if-found	count=2
function	characters of ||| wide input string	count=1
function	procedure ||| to string	count=1
function	record representing a complete [function_1] [function_2] ||| 14.12.4 [function_1] [function_2] declaration misc-1 dtd misc-2	count=1
arg	buffer to the position ||| buffer	count=1
function	if environment has ||| has	count=1
function	returns a list of ||| list	count=1
function	universal-time format ||| decoded time >universal time	count=1
arg	source-x-left source-y-top ||| source-x-left source-y-top	count=2
module	of ||| 6.8.1	count=1
function_arg	substring defined [arg_2] ||| [arg_2] [function_1]	count=3
function	day ||| decoded time day	count=1
function	the inode ||| inode	count=1
function_arg	returns a newly allocated [function_1] [arg_2] an ||| [function_1] [arg_2]	count=4
arg	named name ||| name	count=1
function	parser buffer ||| buffer	count=2
function	rehash threshold of ||| table rehash threshold	count=1
function	same bits otherwise returns ||| string=?	count=1
function	the flush-output operation ||| port flush output	count=1
function	coordinate limits ||| coordinate limits	count=3
arg	is signalled when port ||| port condition	count=1
function	changes the input blocking ||| port set input blocking mode	count=1
function	[function_1] xml ||| [function_1] [function_2]	count=1
function	be a procedure of ||| with output to	count=1
arg	a typical [arg_2] ||| [arg_1] [arg_2]	count=2
arg	#t if the slot [arg_1] [arg_2] initialized otherwise returns #f ||| 3.4 slot initialized? [arg_2] [arg_1]	count=1
module	representation of a ||| 6.8.1	count=1
function	number of days possible ||| max days	count=1
function	inode [function_2] ||| [function_2] [function_1]	count=4
function	to but excluding ||| head	count=1
function	buffered this causes the ||| flush	count=1
module	a buffer everything ||| 14.3	count=1
arg	wt-tree except the ||| wt-tree	count=1
function	type [function] associated ||| record type [function]	count=1
function	sets the internal ||| pointer!	count=1
function_arg	the characters [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	the write [arg_2] ||| [arg_2] [function_1]	count=1
function	a macro [function_2] ||| -1 sc [function_1] [function_2]	count=4
arg	object-hash is like hash ||| object	count=1
function_arg	this low-level [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] to ||| [arg_2] [function_1]	count=1
function	that ||| no	count=1
function_arg	[function_1] command-line arguments ||| [arg_2] [function_1]	count=1
function	the key of some ||| tree subset?	count=1
function	associated with the largest ||| max	count=1
function	a concrete ||| type:derived	count=1
arg	when ||| condition	count=1
arg	end until either the ||| end	count=1
function_arg	sets the [arg_2] ||| [function_1] [arg_2]	count=1
arg	and identifier2 ||| identifier2	count=1
function	like read-char immediately returning [function_1] [function_2] ||| [function_1] [function_2] no hang	count=1
arg	that [arg] run periodically ||| [arg]	count=1
function	state component ||| port state!	count=1
function	the type of record ||| record type	count=1
function	tree that contains the ||| alist >wt tree	count=1
function	by ||| by	count=1
function	the block will ||| no range	count=1
arg	into [arg] starting ||| bit-string-1 start1 end1 [arg]	count=1
function	tree ||| string wt	count=1
function	default generator ||| default	count=1
function	the ||| no type	count=1
arg	returns ||| object	count=1
function	limited to ||| to truncated	count=2
function	string as its ||| string	count=1
arg	symbol must be ||| symbol	count=3
function	[function_1] zero ||| [function_1] [function_2]	count=1
function	but is otherwise ||| condition	count=1
function_arg	classes in specializer ||| specializer classes specializer	count=1
arg	thunk with no ||| thunk	count=2
function_arg	directory [arg_2] ||| [arg_2] [function_1]	count=2
arg	thunk without arguments returning ||| thunk after	count=1
function	for output ||| with output	count=1
arg	symbol is a ||| environment symbol	count=1
module	buffer otherwise returns ||| 14.10	count=1
function	the xml-!entity ||| !entity	count=1
function	integer may be ||| integer >bit string	count=1
function	new copy of pathname ||| pathname new	count=1
function	procedure of no arguments ||| with output	count=1
arg	pathname1 is [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg] well-formed ||| [arg]	count=1
arg	pathname1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] port suitable ||| [function_1] [function_2]	count=3
module	expression always succeeds ||| 14.11.2	count=1
arg	[arg_1] [arg_2] at the ||| [arg_1] [arg_2]	count=6
arg	[arg] that ||| [arg]	count=3
arg	y-key ||| y-key	count=2
function	check ||| no type	count=1
module	is the representation of ||| 15.5.1	count=1
function	be a ||| with output to	count=1
function	must be a ||| output	count=1
module	returns an unspecified result ||| 11.4.2	count=2
function	invokes the fresh-line ||| port fresh line	count=1
function	anywhere that [function_2] ||| [function_2] word [function_1]	count=3
arg	condition-type [arg_2] ||| [arg_2] [arg_1]	count=1
function	the contents ||| ref	count=1
function	[function_1] type of ||| [function_2] [function_1]	count=2
function	character ||| ref	count=1
arg	to generic's ||| generic	count=1
function	[function] table ||| [function]	count=1
function	assigning [function_2] ||| [function_2] [function_1] traps	count=2
module	representation ||| 15.5.1	count=1
function	the ||| xml name >symbol	count=1
module	available from input-port updating ||| 14.4	count=1
function	access ||| access	count=2
arg	[arg] and returns ||| [arg]	count=3
function	the nesting ||| depth	count=1
function	of no ||| to	count=1
arg	[arg_1] to generic-procedure ||| [arg_2] [arg_1]	count=8
function_arg	a keyword bound ||| macro environment	count=1
function	descriptor representing the type ||| record type descriptor	count=1
function	of a word ||| word	count=1
function	is typically a ||| format error	count=1
arg	procedure to zero ||| procedure	count=1
arg	elements of list using ||| list	count=3
function	named [function] ||| [function]	count=1
arg	z2 ||| z2	count=1
function	the list of restarts ||| restarts	count=1
module	check that indices are ||| 4.3.3	count=1
function	graphics device ||| graphics device	count=2
function	changes the extra ||| set entity extra!	count=1
module	this is another ||| 16.7	count=1
arg	port and return ||| port	count=1
function_arg	[function_1] char1 ||| [function_1] [arg_2]	count=1
arg	string start and ||| string start	count=3
function_arg	the elements [arg_2] ||| [arg_2] [function_1]	count=2
arg	unparser-method and returns an ||| unparser-method	count=1
arg	if pathname1 ||| pathname1	count=1
function	length of the ||| file attributes length	count=1
function	graphics device at the ||| draw	count=3
function_arg	prefix [arg_2] ||| [arg_2] [function_1]	count=1
module	is ||| 15.5.1	count=1
function	returns ||| string ref	count=2
function_arg	a newly allocated apply [function_1] [arg_2] an ||| make apply [function_1] [arg_2]	count=1
function	end of the ||| end	count=1
arg	name and slot-name must ||| name	count=1
function_arg	name [arg_2] ||| [function_1] [arg_2]	count=6
function_arg	bitwise-logical “and” [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] truncated string [arg_2]	count=1
arg	element k of ||| k char	count=1
module	that have keys ||| 11.7.3	count=1
function	returns the key ||| emp key	count=1
function	name of ||| class name	count=1
function	working directory in which ||| working directory	count=1
module	january 1 1970 ||| 15.5.1	count=1
arg	datum with [arg_2] ||| [arg_2] [arg_1]	count=1
arg	returns ||| list	count=1
arg	calls [arg] ||| [arg]	count=3
arg	pexp is an ||| pexp	count=1
function	type of operating ||| operating	count=1
function_arg	[function_1] target-filename that ||| [arg_2] [function_1]	count=1
arg	is defined by procedure ||| procedure	count=1
arg	of pair ||| pair	count=1
function	denominator of ||| denominator	count=1
function_arg	[function_1] method ||| [function_1] [arg_2]	count=6
arg	source-filename ||| source-filename	count=2
function	ancestor of ||| environment	count=1
function	contents as ||| string >string	count=1
function	and ending ||| substring move	count=1
arg	the substring specified by [arg_1] [arg_2] and returns an unspecified ||| [arg_2] [arg_1]	count=1
module	returns ||| 14.1	count=2
function	the state component of ||| port state	count=1
function	be ||| hash mod	count=1
function	apply [function] with ||| make apply [function]	count=1
function	the datum associated with ||| 2d get	count=1
function	window on ||| window	count=1
function	about a program's execution ||| trace	count=1
arg	environment2 ||| environment2	count=1
function	the [function] ||| rexp line [function]	count=4
function	may ||| signed integer >bit	count=1
function	last pair in ||| last pair	count=1
function	device [function_2] ||| [function_2] [function_1]	count=3
arg	condition of type ||| type operands	count=1
function	returns the specializers ||| specializers	count=1
arg	[arg_1] and y ||| [arg_1] [arg_2]	count=8
function_arg	[function_1] end ||| [function_1] [arg_2]	count=3
arg	string1 ||| string1	count=1
function	check that indices are ||| range	count=1
function	a new ||| pathname new	count=1
arg	#t if the slot [arg_1] [arg_2] otherwise returns #f ||| [arg_2] [arg_1]	count=1
arg	element k of string ||| string k char	count=1
arg	[arg] must ||| environment1 identifier1 environment2 [arg]	count=1
arg	procedure with ||| filename procedure	count=2
arg	output-port ||| output-port string	count=1
arg	environment1 [arg_2] ||| [arg_2] [arg_1]	count=3
arg	k that is ||| k	count=1
arg	by k that ||| k	count=1
function_arg	[function_1] its arguments ||| [function_1] [arg_2]	count=3
function	returns the ||| name >symbol	count=1
function	then ||| call with	count=1
function_arg	directory named filename ||| directory filename	count=2
function_arg	define [arg_2] ||| [arg_2] [function_1]	count=2
function	procedure for testing ||| record predicate	count=1
arg	argument and ||| hash-table key	count=1
function_arg	[function_1] xml-name as ||| [arg_2] [function_1]	count=3
function	returns the uri of ||| name uri	count=1
function	part of ||| xml	count=1
arg	pattern ||| pattern	count=1
arg	#t if the slot [arg_1] [arg_2] otherwise returns #f ||| 3.4 slot initialized? [arg_2] [arg_1]	count=1
function	match ||| match parser	count=1
function	[function_1] pair from ||| [function_1] [function_2]	count=1
arg	in wt-tree-2 otherwise returns ||| wt-tree-2	count=1
module	must be a ||| 6.8.1	count=1
function	position of [function_2] ||| [function_2] [function_1]	count=3
function_arg	device [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] drawing mode ||| [function_1] [function_2]	count=1
function	of the classes ||| specializer classes	count=1
function_arg	the denominator [arg_2] ||| [arg_2] [function_1]	count=1
function	the nesting of lists ||| depth	count=1
arg	from list ||| list	count=1
arg	from start1 ||| start1	count=1
function	that ||| range	count=2
arg	the record-type ||| record	count=1
arg	when [arg_2] ||| [arg_2] [arg_1]	count=4
function	file for input ||| with input	count=1
arg	environment of environment ||| environment	count=1
arg	and returns a ||| key datum	count=1
arg	first [arg] ||| [arg]	count=3
module	an ||| 11.5	count=1
arg	of object ||| object	count=2
arg	transformer in ||| transformer	count=1
function	inclusive and ending ||| bit substring	count=1
function_arg	point on graphics-device ||| point graphics-device	count=1
function	be a procedure of ||| output to	count=1
function	unparser method ||| unparser method!	count=1
arg	defined by string start ||| string start	count=1
function	and extracts ||| accessor	count=1
function	accepts arbitrary objects ||| strong eq hash table	count=1
function	flush-output ||| output port flush output	count=1
function	the type [function] associated ||| record type [function]	count=1
function	the tree ||| tree	count=3
function	under ||| microcode id	count=2
function	that fall between ||| get parser buffer tail	count=1
function	returns the name ||| name	count=3
function	that accepts arbitrary objects ||| strong eq hash	count=1
function	entry ||| entry	count=1
arg	if output-port ||| output-port	count=1
module	must be a procedure ||| 14.3	count=1
function	the ||| xml name	count=2
function	name of ||| name	count=3
function_arg	the directory [arg_2] ||| [arg_2] [function_1]	count=1
function	returns the name of ||| restart name	count=1
function	wt-tree's ||| delete	count=1
function	by error after ||| error handler	count=1
function	not the start or ||| not	count=1
function	port ||| port	count=6
arg	[arg_1] unparser-method and ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] class ||| [arg_2] [function_1]	count=14
function_arg	[function_1] object ||| [function_1] vector [arg_2]	count=1
function	wt-tree's ordering ||| delete	count=1
arg	k ||| string k	count=3
arg	a procedure ||| procedure list list	count=1
function	compares ||| hash table	count=3
function	the last change ||| file attributes change	count=1
function	file-time [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] [arg_2] and returns an unspecified ||| [arg_2] [arg_1]	count=8
arg	hash-table as an ||| hash-table	count=1
arg	in [arg] initialized ||| [arg]	count=1
arg	required [arg] ||| message [arg]	count=3
module	not check that ||| 4.3.3	count=1
function_arg	[function_1] consisting of ||| [arg_2] [function_1]	count=1
function	arity object ||| arity	count=1
arg	[arg_1] and ||| [arg_2] [arg_1]	count=1
function	not [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] source-y-top ||| [arg_2] [arg_1]	count=4
function	a string representation of ||| group	count=1
function	allocated apply [function] with a ||| make apply [function]	count=1
function_arg	largest [arg_2] ||| [arg_2] [function_1]	count=3
function	cursor for ||| cursor	count=1
function	be a procedure of ||| define	count=1
arg	char1 with char2 ||| string char1 char2	count=3
arg	expression ||| expression	count=1
function_arg	returns the datum [function_1] [arg_2] ||| 11.6 rb tree [function_1] datum [arg_2]	count=1
function	to an external dtd ||| xml external	count=1
arg	procedure is ||| object path	count=1
function	be a procedure of ||| to string	count=1
function	size ||| table size	count=1
function	the deletion ||| delete	count=1
function	[function_1] transformer ||| [function_1] [function_2]	count=4
arg	the exit from procedure ||| procedure	count=1
module	attempts to [module] each mexp ||| [module]	count=1
function	sets ||| set	count=1
function	input terminal mode ||| set input terminal	count=1
function	file type #t if ||| file attributes type	count=1
function	is a concrete ||| type:derived port error	count=1
arg	with index start ||| start	count=1
function_arg	fresh-line on [arg_2] ||| [arg_2] [function_1]	count=1
module	match ||| 14.11.1	count=1
module	and an [module] of ||| [module]	count=1
function	the uri of ||| name uri	count=1
arg	bound to syntactic keywords ||| environment	count=1
function	unicode scalar [function] represented ||| char set >scalar [function]	count=1
function	of ||| to string	count=1
function	a permanent condition ||| default condition	count=1
arg	[arg] tree ||| rb-tree [arg]	count=3
function_arg	[function_1] object ||| [arg_2] [function_1]	count=8
arg	port to be ||| port	count=1
function	[function_1] string as ||| [function_2] [function_1]	count=2
function	returns the rehash threshold ||| table rehash threshold	count=1
function_arg	[function_1] list ||| [function_1] [arg_2]	count=5
function	hash ||| hash	count=1
function	of one of ||| current	count=1
arg	parsing pexp into ||| pexp	count=1
function	end of the ||| string end	count=1
function_arg	returns #t [arg_2] ||| [function_1] [arg_2]	count=1
arg	returns #f ||| char	count=1
function	substring defined ||| substring	count=1
function	deletes the [function_2] ||| [function_1] [function_2]	count=1
function	that sources the characters ||| wide input string	count=1
function	[function] a ||| rexp word [function]	count=3
function	returns the symbol part ||| xml	count=1
function	the device ||| device	count=1
function_arg	[function_1] target-filename ||| [arg_2] [function_1]	count=1
function	a procedure of ||| output to	count=1
function	to the printed ||| >name	count=1
arg	[arg_1] with char2 ||| [arg_1] [arg_2]	count=2
function	the directory component ||| directory	count=1
module	[module] returns ||| [module]	count=2
function	user's “home directory” ||| user homedir	count=1
function_arg	mode of [arg_2] ||| [function_1] [arg_2]	count=3
module	the [module] ||| [module]	count=19
function_arg	terminal [arg_2] ||| [arg_2] [function_1]	count=6
arg	pathname ||| pathname	count=3
function	check that ||| range	count=1
function_arg	[function_1] char1 with ||| [function_1] [arg_2]	count=1
arg	of class ||| class	count=3
arg	copies the [arg_2] ||| [arg_2] start1 end1 vector2 [arg_1]	count=1
function	under the wt-tree's ||| delete	count=1
function	denominator ||| denominator	count=1
arg	in wt-tree an ||| wt-tree	count=1
function	searches ||| search	count=1
function_arg	datum [arg_2] ||| [function_1] [arg_2]	count=1
arg	first pair in alist ||| alist	count=1
function	format to universal-time ||| >universal	count=1
arg	procedure on the ||| procedure	count=1
arg	expression to ||| variable init	count=1
function	buffered this causes its ||| flush	count=1
arg	against buffer's contents ||| buffer string	count=1
function	handler as [function] ||| [function]	count=1
function	arbitrary objects as ||| strong eq hash	count=1
function	output terminal mode ||| output terminal mode	count=2
function	[function_1] directory ||| [function_2] [function_1]	count=2
function	represented as ||| as	count=1
function	#t if ||| port type?	count=1
function	going ||| tail	count=1
arg	identifier1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	action [function] each association ||| [function]	count=1
arg	writes [arg_1] [arg_2] and returns an unspecified ||| [arg_2] [arg_1]	count=2
function	scheme ||| system	count=1
function	[function_1] mode ||| [function_1] [function_2]	count=15
function_arg	copy [arg_2] ||| [arg_2] [function_1]	count=1
function	arbitrary objects ||| strong eq hash	count=1
function	to ||| for	count=1
function	output terminal ||| set output terminal	count=1
function	that is of ||| type:bad range	count=1
arg	thing into ||| thing	count=1
function	this operation sets ||| set	count=1
arg	associations in wt-tree ||| wt-tree	count=3
arg	[arg] key-hashing ||| [arg]	count=1
module	unspecified result ||| 11.4.2	count=2
function	a newly allocated copy ||| copy	count=2
arg	server-socket ||| server-socket block? peer-address	count=1
function	[function_1] the drawing ||| [function_2] [function_1]	count=1
function	[function_1] that is ||| [function_2] [function_1]	count=2
function	a procedure of ||| string	count=1
function	graphics [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] stream ||| [arg_2] [function_1]	count=3
arg	environment [arg_2] ||| closure [arg_1] [arg_2]	count=4
function	a dispatch [function_2] ||| [function_1] [function_2]	count=1
function	size of the ||| size	count=1
function	the symbol part ||| xml	count=1
arg	image are set ||| image	count=1
function_arg	[function_1] code in ||| [function_1] string start end [arg_2]	count=1
function	the ||| no	count=2
function	returns the ||| xml name >symbol	count=1
function	the superclasses ||| precedence	count=1
function	a filled circle ||| circle	count=1
function	name ||| name	count=8
arg	to pathname ||| pathname	count=1
function_arg	one byte per pixel [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	prefix [arg_2] ||| [function_1] [arg_2]	count=1
arg	this procedure [arg] key-hashing procedure ||| [arg]	count=1
arg	[arg_1] end1 ||| [arg_1] [arg_2]	count=3
function	bound outside the current ||| free	count=1
arg	bit-string to ||| bit-string k	count=1
arg	can be converted into ||| directory	count=1
function	an abstract ||| type:warning	count=1
arg	of vector1 ||| vector1	count=1
arg	copies [arg_2] ||| [arg_2] [arg_1]	count=1
arg	graphics-device to the given ||| graphics-device	count=1
function_arg	syntactic [arg_2] ||| [arg_2] [function_1]	count=5
arg	[arg] and ||| [arg]	count=6
function	[function_1] device ||| [function_2] [function_1]	count=1
function	new ||| wt	count=1
arg	and ||| key datum	count=1
module	attempts to [module] each ||| [module]	count=1
arg	source-x-left [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] [arg_2] a ||| [function_1] [arg_2]	count=8
function_arg	[function_1] object ||| [function_1] [arg_2]	count=7
function	is represented as a ||| pathname as	count=1
arg	calls procedure ||| procedure	count=2
function	that ||| no range	count=1
function	xml ||| xml file	count=1
function	[function_1] transformer as ||| [function_1] [function_2]	count=4
function	#f ||| char?	count=1
arg	[arg_1] [arg_2] ||| [arg_1] symbol [arg_2]	count=7
function	hold data [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] [arg_2] one of its ancestor ||| 13.1 environment bound? [arg_2] [arg_1]	count=3
arg	by string ||| string	count=1
function	the inode [function_2] ||| [function_2] [function_1]	count=4
function	a ||| group	count=2
function	universal-time ||| >universal	count=1
function	invokes a restart ||| restart	count=1
function	bindings of ||| bindings	count=1
function	associates ||| table put!	count=1
function	if the condition-type is ||| condition	count=1
function	not the start ||| not	count=1
function	bind the [function_2] ||| [function_1] [function_2]	count=2
function	type based ||| type	count=1
function	output [function_2] ||| [function_1] [function_2]	count=12
function	be a string representation ||| regexp group	count=1
function	a procedure ||| procedure	count=2
function_arg	[function_1] symbol to ||| [function_1] macro environment [arg_2]	count=1
function	[function_1] line ||| [function_2] [function_1]	count=4
function	the output ||| output	count=3
function	allocated [function] ||| generate [function]	count=3
arg	key in [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	returns a new copy ||| pathname new	count=1
function	that ||| of	count=1
function	must be a procedure ||| with output to	count=1
function	searches ||| string search	count=1
function	direct superclasses ||| direct superclasses	count=1
arg	regexp ||| regexp	count=1
arg	#t [arg] well-formed scalar-values ||| [arg]	count=1
function	of no ||| with output to	count=1
arg	bound in the ||| bound	count=2
function	write ||| output port write	count=1
module	with an ||| 11.5	count=1
function	end of [function_2] ||| [function_2] [function_1]	count=2
arg	condition of type ||| datum type	count=1
function	returns an i/o port ||| port	count=1
arg	[arg] if-not-found must ||| 1d-table [arg] if-found	count=3
function	output port ||| output port	count=4
function	tree containing all the ||| tree	count=1
function	of the generalizations ||| generalizations	count=1
function	[function_1] with ||| [function_2] [function_1]	count=8
function	prompts [function] an expression ||| [function] command	count=1
module	current [module] ||| [module]	count=1
function	generalization of car ||| general car	count=3
function	the drawing ||| drawing	count=1
function	represented as a ||| as file	count=1
arg	of port [arg_2] ||| [arg_1] [arg_2]	count=4
function	flush-output operation on ||| flush output	count=1
module	file [module] ||| [module]	count=1
function	of the generalizations ||| type generalizations	count=1
function	valid ||| range	count=1
function	an exact non-negative ||| tree size	count=1
arg	returns a character in ||| index	count=1
function	returns an unspecified result ||| weak set cdr!	count=1
arg	[arg] current ||| [arg]	count=1
arg	to end1 [arg_2] ||| [arg_2] start1 [arg_1]	count=1
function	unparsed [function_2] ||| [function_2] [function_1]	count=1
arg	the fundamental [arg] deconstructor ||| [arg]	count=1
arg	#t [arg] ||| [arg]	count=4
function	nonincreasing ||| >=	count=1
function	of ||| xml name	count=1
function	be ||| output to string	count=1
function	directory component ||| directory	count=1
arg	image is copied into ||| x y image	count=1
function	types ||| no type	count=1
function	generalization [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] output-port ||| [arg_2] [arg_1]	count=5
function	system that scheme is ||| system	count=2
arg	[arg] and ||| [arg] string start	count=1
function	default generator to ||| default	count=1
arg	be unparser-method and ||| unparser-method	count=1
arg	connections to service the ||| service	count=1
function	in-lined primitives within ||| checks	count=2
function	procedure that ||| procedure of	count=1
function	the symbol part ||| xml name >symbol	count=1
function	end ||| end	count=3
arg	[arg] names a ||| [arg]	count=6
function	writes char ||| write char	count=1
function	return the day ||| time day	count=1
module	a random-state object ||| 4.8	count=1
function	return #t if ||| type?	count=3
function_arg	read [arg_2] ||| [function_1] xml [arg_2]	count=2
function	the deletion ||| delete file	count=1
function	[function_1] constructor ||| [function_1] [function_2]	count=4
function	rehash size ||| table rehash size	count=1
function_arg	[function_1] char-set ||| [arg_2] [function_1]	count=2
arg	char1 with char2 in ||| char1 char2	count=1
function	create a new condition ||| make condition	count=1
arg	[arg_1] free-names ||| closure [arg_1] [arg_2]	count=1
function	values [function_2] ||| [function_1] [function_2]	count=1
function	end of a word ||| word	count=1
arg	a procedure ||| procedure	count=3
arg	of the ||| string	count=1
function	the tree is empty ||| rb tree	count=1
arg	of datum ||| datum	count=1
function_arg	[function_1] of vector ||| [arg_2] [function_1]	count=8
arg	by source-x-left ||| source-x-left	count=1
function_arg	contents as [arg_2] ||| [arg_2] [function_1]	count=1
function	the drawing mode ||| drawing mode	count=2
function_arg	host name [arg_2] ||| [function_1] [arg_2]	count=4
arg	registers must ||| registers n	count=1
function	accessor ||| accessor	count=1
function	newly allocated bit string ||| bit string append	count=1
arg	the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=8
function	and max ||| make procedure	count=1
module	least key under the ||| 11.7.4	count=3
function	unicode scalar ||| scalar	count=1
function_arg	[function_1] of list ||| [function_1] [arg_2]	count=1
function	[function_1] document ||| [function_2] [function_1]	count=1
module	block will not ||| 4.3.3	count=2
rep	this [function_arg_2] ||| [module_1] [function_arg_2]	count=6
function	system that scheme ||| system	count=2
function	window on the display ||| window	count=1
function	that contains ||| alist >wt	count=1
arg	when port errors ||| port condition	count=2
function	start of the ||| start	count=1
function	returns the length ||| bit string length	count=2
function	but is ||| condition	count=1
function	return the day ||| decoded time day	count=1
function	the syntax of let*-syntax ||| let* syntax	count=1
function	a pair ||| pair	count=1
arg	source-filename to target-filename ||| source-filename target-filename	count=2
function	[function_1] uri of ||| [function_1] [function_2]	count=2
arg	combines all [arg] ||| procedure [arg]	count=6
function	string representation of a ||| group	count=1
function	returns a pathname ||| pathname	count=2
function	of days possible ||| month max days	count=2
function	the state component of ||| state	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] split< [arg_2]	count=7
function	new output ||| output	count=1
arg	made from min ||| min	count=1
function_arg	[function_1] object in ||| [function_1] vector [arg_2]	count=1
arg	character k ||| k	count=1
function	same ||| string=?	count=1
arg	[arg_1] wide-string ||| [arg_2] [arg_1]	count=6
arg	be any exact integer ||| integer	count=1
function_arg	converted [arg_2] ||| [arg_2] [function_1]	count=4
function	accessor [function_2] ||| [function_2] [function_1]	count=3
function	regular ||| group	count=1
function	type #t ||| attributes type	count=1
function	the class of ||| class	count=2
function	the output terminal mode ||| port output terminal mode	count=1
function	of the properties of ||| properties	count=1
arg	an existing file ||| modes	count=1
function	changes the unparser method ||| unparser method!	count=1
function	[function_1] to ||| [function_2] [function_1] traps	count=1
function	into an exact integer ||| bit string >unsigned integer	count=1
function	for the slot ||| class slot	count=1
function	of no arguments ||| output	count=1
function	[function_1] savings time ||| [function_2] [function_1]	count=1
function_arg	[function_1] expression to ||| [function_1] [arg_2]	count=4
arg	[arg_1] end to ||| [arg_1] [arg_2]	count=3
module	datums ||| 11.4.2	count=1
function	the same bits ||| string=?	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=7
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=671
arg	list of methods to ||| methods	count=1
function	elements ||| >list	count=2
arg	[arg] returning ||| vector key<? unwrap-key [arg]	count=3
function	may be any ||| integer >bit string	count=1
function_arg	blocking mode [arg_2] ||| [arg_2] [function_1]	count=4
function	datum ||| ephemeron datum	count=1
function	any of the ||| alternatives	count=1
function	bind ||| graphics bind	count=1
function	inode number of the ||| attributes inode number	count=1
function	[function] table otherwise ||| [function]	count=1
module	to [module] each ||| [module]	count=1
module	[module] for its ||| [module]	count=1
arg	a ||| name	count=5
function	wrong number ||| type:wrong number	count=1
function	the flush-output operation ||| output port flush output	count=1
function	null namespace uri record ||| null xml namespace uri?	count=1
module	regular-expression ||| 6.8.1	count=1
function	write [function_2] ||| [function_1] [function_2]	count=1
function	returns the ||| bit string	count=1
function_arg	type represented [arg_2] ||| [function_1] unparser method! [arg_2]	count=7
arg	if slot has ||| slot	count=1
function	largest ||| max	count=1
function	must be a ||| string	count=1
function	procedure of ||| output to string	count=1
function	the ancestor of ||| environment	count=1
function	condition type is ||| condition	count=3
arg	[arg_1] free-names ||| [arg_2] [arg_1]	count=1
module	the ||| 15.5.1	count=1
arg	[arg_1] with char2 ||| [arg_2] [arg_1]	count=2
function	last [function_2] ||| [function_1] [function_2]	count=2
arg	name [arg_2] ||| [arg_2] [arg_1]	count=11
function	[function_1] [function_2] ||| [function_1] [function_2]	count=949
arg	the image is ||| x y image	count=1
arg	k and returns the ||| k	count=1
arg	associations in wt-tree an ||| wt-tree	count=1
function	input blocking ||| port set input blocking	count=1
arg	predicate is true ||| predicate	count=1
function	the generalizations of ||| type generalizations	count=1
arg	rb-tree or [arg] tree is ||| rb-tree [arg]	count=1
function	fresh-line on ||| output port fresh line	count=1
function	set the key ||| ephemeron key	count=1
function	otherwise returns #f ||| char?	count=1
function	unparser method ||| unparser	count=1
arg	destructively copies ||| start1 end1 vector2 start2	count=1
function	except [function] ||| [function]	count=3
arg	file while access-time ||| access-time	count=1
function	[function] an expression ||| [function] command	count=2
function_arg	described by items ||| >char set items	count=1
function	car [function_2] ||| [function_2] [function_1]	count=1
function_arg	filled circle [arg_2] ||| [function_1] x y [arg_2]	count=4
function	with no arguments then ||| with	count=1
function_arg	call [arg_2] ||| [arg_2] [function_1]	count=8
module	and [module] unspecified value ||| [module]	count=1
arg	string start and end ||| string start end	count=2
arg	in element k of ||| k char	count=1
arg	source-y-top [arg_2] ||| [arg_2] [arg_1]	count=3
arg	for the given operands ||| operands	count=1
function	of ||| xml name >symbol	count=1
function	represented as a file ||| pathname as file	count=1
arg	makes ||| target-filename	count=1
function	[function_1] simple ||| [function_2] command line [function_1]	count=1
function	into the standard categories ||| condition type:derived file error	count=1
function_arg	[function_1] of class ||| [function_1] [arg_2]	count=11
function_arg	[function_1] port to ||| [function_1] [arg_2]	count=14
arg	symbol ||| environment symbol	count=2
function	a concrete type that ||| condition type:derived port error	count=1
arg	to table ||| table	count=1
function	the fresh-line on ||| fresh line	count=1
function	makes a [function] that ||| make trivial [function]	count=1
arg	z ||| z	count=1
arg	the xml-unparsed-!entity ||| id notation	count=1
function	[function_1] superclasses of ||| [function_2] [function_1]	count=8
arg	which predicate ||| predicate	count=1
function_arg	description [arg_2] ||| [arg_2] [function_1]	count=1
function	a procedure for testing ||| predicate	count=1
function_arg	limits of [arg_2] ||| [function_1] [arg_2]	count=4
function	is a concrete ||| type:derived port	count=1
arg	followed by one or ||| multiple?	count=1
function	output [function] the standard ||| output [function]	count=1
function_arg	but excluding [arg_2] ||| [arg_2] [function_1]	count=1
arg	fundamental [arg] deconstructor ||| [arg]	count=1
arg	[arg_1] generic-procedure ||| [arg_2] [arg_1]	count=6
function	any [function] that ||| rexp not word [function]	count=1
arg	#t if the slot [arg_1] [arg_2] initialized otherwise returns #f ||| [arg_2] [arg_1]	count=1
function	indices are valid ||| no	count=1
arg	copies the ||| start2	count=1
function	characters ||| wide input string	count=1
function	descriptor representing ||| descriptor	count=1
function	accepts arbitrary objects as ||| ephemeral eq hash	count=1
function_arg	environment must be a [function_1] [arg_2] ||| -1 make [function_1] [arg_2]	count=4
function	pathname ||| pathname?	count=1
arg	[arg_1] point x ||| [arg_2] [arg_1]	count=1
function	the name of ||| generic procedure name	count=1
arg	first list ||| list	count=1
function	arbitrary objects as ||| strong eq hash table	count=1
function	standard tree type ||| string wt type	count=2
function	procedure of no ||| string	count=1
arg	in element k of ||| string k	count=2
arg	document consists ||| attributes contents	count=1
arg	of its arguments ||| fixnum fixnum	count=1
function	be a string representation ||| regexp	count=1
function_arg	[function_1] of hash-table ||| [arg_2] [function_1]	count=9
function	[function_1] character ||| [function_2] [function_1]	count=1
function	a procedure ||| string	count=1
function_arg	procedure of [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=3
arg	[arg_1] y ||| [arg_2] [arg_1]	count=18
function_arg	#t if [arg_2] ||| [function_1] [arg_2]	count=7
function	the block will not ||| no type	count=1
function	[function_1] the directory ||| [function_2] [function_1]	count=1
function	accepts arbitrary objects as ||| strong eq hash	count=1
function_arg	[function_1] port ||| [arg_2] [function_1]	count=32
function_arg	entry [arg_2] ||| [function_1] [arg_2]	count=1
function	uppercase equivalent of char ||| char upcase	count=1
arg	[arg_1] bound ||| 13.1 environment bound? [arg_2] [arg_1]	count=3
function	list of restarts ||| restarts	count=1
function	hold ||| entry	count=3
function	set of all ||| all	count=1
arg	the given command-line arguments ||| arguments option	count=1
function_arg	uri of [arg_2] ||| [function_1] [arg_2]	count=1
function	into an ||| bit string >unsigned	count=1
function	an evaluated ||| evaluated	count=1
function	method ||| define method	count=1
function_arg	[function_1] for graphics-device ||| [function_1] [arg_2]	count=6
function	[function_1] type based ||| [function_1] [function_2]	count=3
module	check that indices ||| 4.3.3	count=1
function_arg	returns the [function_1] [arg_2] ||| 11.6 [function_1] [arg_2]	count=2
arg	[arg_1] [arg_2] ||| datum [arg_1] [arg_2]	count=1
function	associated ||| get	count=3
function_arg	[function_1] graphics-device to ||| [function_1] [arg_2]	count=5
function	the direct superclasses of ||| direct superclasses	count=1
function	returns the effector ||| effector	count=1
function	will ||| no range	count=1
function	output [function] the ||| output [function]	count=1
arg	call [arg] current syntactic ||| [arg]	count=1
arg	filename the current ||| filename	count=1
arg	thunk and returns from ||| thunk	count=1
function	properties of ||| properties	count=1
function	last [function_2] ||| [function_2] [function_1]	count=2
function	match ||| match	count=2
function	the bindings ||| environment bindings	count=1
function	type [function] associated with ||| record type [function]	count=1
function_arg	pair from [arg_2] ||| [function_1] [arg_2]	count=1
arg	of methods to ||| methods	count=1
function	generalizations of ||| type generalizations	count=1
arg	and identifier1 [arg_2] ||| [arg_2] [arg_1]	count=1
module	be a procedure of ||| 14.3	count=1
function	an unspecified ||| wide	count=1
arg	datum associated with key ||| key default	count=3
function	specifies the [function_1] [function_2] standard output of the ||| 15.7.3 [function_2] [function_1]	count=1
function	file for input ||| input	count=1
arg	transformed call [arg] current ||| [arg]	count=1
arg	[arg_1] copies ||| [arg_1] [arg_2]	count=1
function	character [function_2] ||| [function_2] [function_1]	count=1
function	must be ||| define	count=1
function	user for [function_2] ||| [function_2] [function_1]	count=2
function	position of [function_2] ||| [function_1] [function_2]	count=3
function	one ||| current	count=2
function	[function_1] directory ||| [function_1] [function_2]	count=2
function	of operating [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] a window ||| [function_2] [function_1]	count=2
function	writes a [function_2] ||| [function_2] [function_1]	count=1
function	is limited ||| truncated	count=1
arg	pexp into a ||| pexp	count=1
function	not check that indices ||| no range	count=1
function	vector1 ||| subvector move left!	count=1
arg	with key in ||| key	count=2
function	of condition-type subprocess-abnormal-termination ||| signalled	count=1
function	represented as a file ||| as	count=1
function	limit on the length ||| length	count=1
function	exact non-negative integer ||| size	count=1
function	check their arguments' ||| no type	count=1
function	normal value ||| lookup	count=1
function_arg	procedure accepting arity ||| procedure arity	count=1
function	of ||| xml	count=1
function	input of the subprocess ||| input	count=1
function_arg	[function_1] first k ||| [function_1] list [arg_2]	count=1
arg	list is terminated by ||| procedure list1 list2	count=1
function	position of a window ||| move window	count=1
function	[function_1] limited ||| [function_1] to [function_2]	count=3
module	a ||| 6.8.1	count=2
module	be a ||| 6.8.1	count=1
function	and returns [function] containing that ||| rb tree min [function]	count=1
arg	[arg_1] string1 ||| [arg_2] [arg_1]	count=10
arg	and end [arg_2] ||| [arg_2] [arg_1]	count=3
module	part of ||| 14.12.3	count=1
arg	procedure ||| procedure list list	count=1
function	associated [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] output file [arg_2]	count=4
arg	[arg_1] end1 of ||| [arg_2] [arg_1]	count=3
function	not check ||| no	count=2
function	that contains the ||| >wt	count=1
arg	of ||| string	count=1
arg	k of string ||| k char	count=1
function	a ||| name	count=4
arg	target-filename that points at ||| target-filename	count=1
function_arg	class of [arg_2] ||| [function_1] [arg_2]	count=2
function	the uri of ||| xml name uri	count=2
function	of arguments ||| of arguments	count=2
function	no arguments ||| to string	count=1
module	has the [module] ||| [module]	count=3
function	concrete ||| type:derived port error	count=1
function	hold keys ||| table entry	count=2
function	to ||| tree for	count=1
function	argument to file-time ||| string >file	count=1
arg	[arg_1] [arg_2] an unspecified value ||| 14.9.4 write substring [arg_2] [arg_1]	count=2
function	[function_1] coordinate ||| [function_1] [function_2]	count=4
arg	decoded-time format to ||| decoded-time	count=1
arg	if symbol is a ||| symbol	count=1
function	[function_1] an abstract ||| [function_2] [function_1]	count=3
function	[function_1] symbol that ||| 10.2 generate [function_1] [function_2]	count=1
function	must be a procedure ||| to string	count=1
function	inclusive and ending ||| substring move	count=1
function	pair ||| pair	count=3
function_arg	superclasses of class ||| superclasses class	count=2
function	the rehash [function_2] ||| [function_2] [function_1]	count=4
function	performs the ||| string	count=3
function	is [function] ||| [function] of	count=1
function	time ||| time	count=1
function	[function_1] methods ||| [function_2] [function_1]	count=1
arg	wt-tree-2 otherwise returns ||| wt-tree-2	count=1
function	the day ||| decoded time day	count=1
arg	[arg_1] transformer in ||| [arg_1] symbol [arg_2]	count=1
arg	of condition-type [arg_2] ||| [arg_1] [arg_2]	count=1
function	returns a new tree ||| make wt tree	count=1
function_arg	[function_1] start and ||| [function_1] string [arg_2]	count=3
arg	[arg_1] pathname2 otherwise ||| [arg_2] [arg_1]	count=1
arg	in element k of ||| k unicode-char	count=1
function	a procedure ||| with	count=1
function	a pathname otherwise ||| pathname?	count=1
arg	k of string and ||| string k char	count=1
arg	to be unparser-method ||| unparser-method	count=1
arg	condition-type [arg_2] ||| [arg_1] [arg_2]	count=1
function	generalization of [function_2] ||| [function_1] [function_2]	count=2
arg	of procedure ||| procedure	count=3
function	the rehash threshold of ||| hash table rehash threshold	count=1
function	the input terminal mode ||| input terminal	count=1
function	returns the class ||| object class	count=1
arg	registers ||| string registers	count=1
arg	by [arg_1] [arg_2] to ||| [arg_1] [arg_2]	count=2
function	condition object ||| condition	count=1
function_arg	[function_1] accepting arity ||| [arg_2] [function_1]	count=2
function	start of ||| string start	count=1
arg	[arg_1] to output-port ||| 14.9.4 write substring [arg_2] string start [arg_1]	count=2
function	evaluated [function_2] ||| [function_2] [function_1]	count=1
function	class ||| class	count=3
function	returns the output terminal ||| port output terminal	count=1
arg	name [arg_2] ||| 3.4 slot initialized? [arg_2] [arg_1]	count=3
function	new output ||| output string	count=1
function	the key of some ||| subset?	count=1
arg	traverses [arg] ||| action [arg]	count=1
function	a normal value in ||| lookup	count=1
function	that is ||| type:bad range	count=1
function_arg	[function_1] classes ||| [arg_2] [function_1]	count=2
function_arg	[function_1] in specializer ||| [arg_2] [function_1]	count=4
function	string ||| ref	count=1
function	is represented as ||| as file	count=1
arg	one argument and ||| key	count=2
function	end of the text ||| end	count=1
function	or del-assq! ||| association procedure	count=1
function	hold keys ||| entry	count=2
function	the bindings of the ||| environment bindings	count=1
function	`#t' if object is [function_1] [function_2] ||| [function_1] [function_2] arity? object	count=1
function	condition [function] ||| make condition [function]	count=3
function	character in buffer ||| char	count=1
function_arg	threshold of hash-table ||| threshold hash-table	count=2
arg	given command-line arguments ||| arguments	count=1
function	invokes the write ||| port write char	count=1
arg	thunk is ||| thunk	count=1
function	of the ||| string	count=1
function	of ||| >symbol	count=1
arg	x and ||| x	count=2
function	the superclasses of ||| class precedence	count=1
function	bad-range-argument ||| error:bad range argument	count=2
function	[function_1] a simple ||| [function_2] [function_1]	count=1
function	namespace uri record otherwise ||| xml namespace	count=1
function	in-lined primitives within the ||| range checks	count=1
arg	returns #t [arg] a list ||| [arg]	count=1
module	procedure of no ||| 14.3	count=1
function_arg	entity [arg_2] ||| [arg_2] [function_1]	count=1
arg	the image ||| x y image	count=1
arg	calls thunk without arguments ||| thunk	count=1
function	input blocking mode ||| port input blocking mode	count=1
arg	bound [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	limits [arg_2] ||| [function_1] [arg_2]	count=4
function	is entered when ||| break entry	count=1
function_arg	[function_1] filename as ||| [function_1] [arg_2]	count=4
function	environment has a ||| has	count=1
function_arg	[function_1] bytes ||| 17.8 image fill [function_1] byte vector image [arg_2]	count=1
function	generalizations ||| generalizations	count=1
arg	returns character k ||| string k	count=1
function_arg	[function_1] by record-type ||| [function_1] [arg_2]	count=3
function_arg	converted to ||| directory pathname	count=1
function_arg	length of [arg_2] ||| [arg_2] [function_1]	count=6
arg	of hash-table as ||| hash-table	count=1
arg	[arg_1] and destination-y-top ||| [arg_2] [arg_1]	count=4
module	string ||| 9.2	count=1
function	and data weakly ||| weak	count=1
arg	indexed by k that ||| k	count=1
function_arg	the tree [arg_2] ||| [function_1] split< [arg_2]	count=1
function	polygon [function_2] ||| [function_2] [function_1]	count=4
arg	is equivalent to pathname2 ||| pathname2	count=1
function	of string ||| ref	count=1
arg	in hash-table ||| hash-table	count=2
function_arg	computation using the restart [function_1] [arg_2] ||| 16.4.2 [function_1] [arg_2]	count=1
function	[function_1] the length ||| [function_1] [function_2]	count=1
arg	modification-time must be valid ||| modification-time	count=1
function	[function_1] window ||| [function_1] [function_2]	count=2
function_arg	[function_1] name ||| [function_1] class [arg_2]	count=2
function	[function] handler ||| [function]	count=1
function	direct [function_2] ||| [function_2] [function_1]	count=2
arg	k elements of ||| list k	count=1
function	has an [function] value and ||| [function]	count=1
function	bindings ||| bindings	count=1
function	arguments' types ||| no type	count=1
arg	record-type must be a ||| record-type	count=1
arg	traverses [arg] order applying ||| action [arg]	count=1
function	[function_1] buffer ||| [function_1] [function_2]	count=1
function	[function_1] compares ||| [function_2] [function_1]	count=3
function_arg	uri of xml-name ||| uri xml-name	count=2
function	[function_1] contains the ||| [function_2] [function_1]	count=2
function	expression ||| regexp group	count=1
function_arg	method [arg_2] ||| [arg_2] [function_1]	count=1
function	the class ||| object class	count=1
module	are analogous [module] integers 0 ||| [module]	count=1
function_arg	the name [arg_2] ||| [function_1] [arg_2]	count=2
function	superclasses ||| class precedence	count=1
function	last change ||| change	count=1
arg	[arg_1] and returns ||| [arg_1] [arg_2]	count=1
function	set the key ||| key	count=1
arg	if output-port is ||| output-port	count=1
function_arg	[function_1] rb-tree ||| [arg_2] [function_1]	count=6
function	of ||| to	count=1
function	scalar [function] represented ||| char set >scalar [function]	count=1
function_arg	[function_1] of wt-tree ||| [function_1] split> [arg_2]	count=3
function	and any subsequent words ||| string capitalized?	count=1
function	are the elements ||| stream >list	count=1
arg	beginning with index start ||| string start	count=1
function_arg	largest [arg_2] ||| 11.6 rb tree [function_1] [arg_2]	count=2
function	wrong [function_2] ||| [function_2] [function_1]	count=3
function	sets the internal pointer ||| buffer pointer!	count=1
arg	[arg_1] [arg_2] or there are no ||| [arg_1] [arg_2]	count=8
function	one argument ||| current	count=1
function_arg	[function_1] by items ||| [function_1] [arg_2]	count=5
function	part ||| name >symbol	count=1
arg	of length k ||| k	count=2
function	this low-level procedure defines ||| line parser!	count=1
arg	text from input-port and ||| input-port	count=1
function	file-time ||| >file	count=1
function	to [function_2] ||| [function_2] command line [function_1]	count=1
arg	and [arg] ||| filename access-time [arg]	count=3
arg	when given a value ||| value	count=1
function	specifies the [function_1] [function_2] output of the subprocess ||| [function_2] [function_1]	count=1
function	input blocking ||| set input blocking	count=1
function	otherwise ||| char?	count=1
arg	thunk and ||| thunk	count=1
arg	registers ||| registers	count=1
arg	[arg_1] x ||| [arg_2] [arg_1]	count=1
arg	[arg_1] [arg_2] one of its ancestor ||| [arg_2] [arg_1]	count=9
function	[function] otherwise ||| xml [function]	count=1
arg	port errors occur ||| port	count=1
arg	pair ||| pair	count=3
function	concrete type that is ||| condition type:derived port error	count=1
arg	an existing ||| modes	count=1
function	the graphics operation ||| graphics operation	count=1
function	input terminal mode of ||| set input terminal mode	count=1
function_arg	[function_1] signalled when ||| [arg_2] [function_1]	count=1
function	the edwin text editor ||| edwin	count=1
arg	of char1 [arg_2] ||| [arg_1] [arg_2]	count=3
function	representation of a regular ||| regexp	count=1
arg	internal pointer past that ||| buffer	count=1
function	uninterned [function_2] ||| 10.2 generate [function_1] [function_2]	count=4
function	output terminal mode ||| port set output terminal	count=1
module	representation of midnight ||| 15.5.1	count=1
function	of the properties of ||| slot properties	count=1
function	predicate procedure for testing ||| predicate	count=1
function_arg	[function_1] of graphics-device ||| [function_1] [arg_2]	count=2
function_arg	the car [arg_2] ||| [function_1] [arg_2]	count=1
function	returns an unspecified ||| wide string	count=2
function	check their ||| type	count=1
arg	x y on graphics-device ||| graphics-device x y	count=1
function_arg	superclasses [arg_2] ||| [function_1] list [arg_2]	count=1
function	representation of a ||| regexp	count=1
arg	of one argument and ||| hash-table key	count=1
arg	operands ||| operator operands	count=1
function_arg	[function_1] restart ||| [function_1] [arg_2]	count=3
function	[function_1] document ||| 14.12.4 [function_1] [function_2] declaration misc-1 dtd misc-2	count=1
function	there [function] no predefined ||| [function]	count=1
function	procedure ||| with output to	count=1
function	the input blocking mode ||| port set input blocking	count=1
function	wrong number of arguments ||| condition type:wrong number of arguments	count=1
function	referring [function] ||| [function] reference	count=1
function	sets generic's [function] ||| set generic procedure [function]	count=2
function	a [function_2] ||| [function_2] [function_1]	count=2
function	standard tree [function_2] ||| [function_1] [function_2]	count=2
function	returns the symbol ||| xml	count=1
module	and an [module] ||| [module]	count=1
function	the output is ||| with output	count=1
function	when referring [function] ||| [function] reference	count=1
function	daylight ||| daylight	count=1
module	to c ||| 18.2.1	count=1
function	the procedure ||| entity procedure	count=1
function	the symbol part ||| >symbol	count=1
function	if any pathname ||| *default pathname	count=1
function	the car ||| weak car	count=1
arg	which predicate is true ||| predicate list	count=1
arg	char-set ||| char-set	count=2
function_arg	[function_1] classes ||| [function_1] generic-procedure [arg_2]	count=2
function	going to the ||| tail	count=1
function	dispatch tag associate with ||| type dispatch tag	count=1
function	is entered [function_2] ||| [function_1] [function_2]	count=3
function_arg	operation [arg_2] ||| [function_1] [arg_2]	count=3
function	datum [function] ||| rb tree [function]	count=1
arg	end to [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the name linked to ||| attributes	count=1
function	that are associated with ||| 2d get alist x	count=1
module	[module] is generated ||| [module]	count=1
function	arguments ||| output	count=1
module	the current drawing mode ||| 17.3	count=1
function	unparser method of the ||| unparser	count=1
function_arg	denominator [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] contains ||| [function_2] [function_1]	count=2
module	named ||| 15.3	count=1
function	[function_1] expression ||| [function_1] [function_2]	count=5
function	out [function_2] ||| [function_2] [function_1]	count=1
function	type or is the ||| type	count=1
function	key under the wt-tree's ||| delete min!	count=1
function	is otherwise out ||| condition type:datum out	count=1
function_arg	write operation [arg_2] ||| [arg_2] [function_1]	count=1
function	a concrete type that ||| type:derived port	count=1
arg	key in [arg_1] [arg_2] tree is empty ||| datum [arg_1] [arg_2]	count=2
arg	the specified [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=8
arg	if [arg] has ||| [arg]	count=1
function	argument [function_2] ||| [function_2] [function_1]	count=8
rep	weight-balanced [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	match the specified ||| match	count=1
function	wt-tree's ordering ||| delete min	count=1
function	sets ||| set parser buffer pointer!	count=1
arg	[arg] socket will ||| [arg]	count=3
arg	of the elements ||| initial list	count=1
function	ephemeron ||| ephemeron	count=1
arg	hash-table ||| hash-table	count=7
function	type #t if the ||| type	count=1
function	length of ||| length	count=7
arg	operands which must ||| operands	count=1
function	the generalizations ||| generalizations	count=1
arg	[arg] record ||| [arg]	count=1
arg	pathname2 ||| pathname2	count=1
function	this procedure ||| x size	count=1
function	must be a procedure ||| output to	count=1
arg	thunk without arguments ||| thunk after	count=1
function	specializations there [function] no ||| [function]	count=1
function	string ||| string prefix?	count=2
function	strong ||| strong	count=1
function_arg	keyword bound ||| macro environment	count=1
arg	code ||| string start end code	count=1
function	in-lined primitives within the ||| type checks	count=1
function_arg	parent [arg_2] ||| [function_1] [arg_2]	count=1
function	returns an [function] ||| [function] current input	count=1
function	type but is ||| condition	count=1
module	[module] as ||| [module]	count=1
function	[function_1] condition-type subprocess-abnormal-termination ||| [function_1] [function_2]	count=8
arg	each alternative ||| alternative	count=1
function	a procedure of ||| with output to	count=1
function_arg	flush-output [arg_2] ||| [function_1] [arg_2]	count=1
module	in wt-tree that have ||| 11.7.3	count=2
function	a string representation ||| regexp	count=1
function	sets the line ||| set	count=1
function	method of ||| define method	count=1
arg	object is ||| object	count=3
arg	[arg_1] [arg_2] returns an unspecified value ||| 14.9.4 write substring [arg_2] [arg_1]	count=2
arg	destructively [arg_2] ||| [arg_1] [arg_2]	count=4
function	ancestor ||| environment	count=1
function	with the smallest key ||| min	count=1
arg	registers must be a ||| registers n	count=1
function	output ||| output file	count=2
arg	object representing the ||| second minute hour day month year	count=1
function_arg	[function_1] a ||| [arg_2] [function_1]	count=1
module	1 1970 ||| 15.5.1	count=1
function	constructor ||| constructor	count=1
function	number of [function_2] ||| [function_1] [function_2]	count=1
function	polygon ||| polygon	count=1
arg	output-port and ||| output-port char	count=1
arg	argument and ||| key	count=2
module	restarts permissible values for ||| 16.4.3	count=1
arg	a condition of type ||| datum type operands	count=1
function	coordinate ||| coordinate	count=2
function_arg	values described [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	the contents [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	block will not check ||| range	count=1
arg	[arg_1] and end ||| string [arg_1] [arg_2]	count=1
arg	if [arg] ||| [arg]	count=4
function	class ||| object class	count=1
arg	methods to [arg_2] ||| [arg_2] [arg_1]	count=2
arg	wide-string ||| wide-string	count=4
function	write operation on ||| output port write char	count=1
function_arg	[function_1] end1 exclusive ||| [function_1] right! bit-string-1 start1 [arg_2]	count=2
arg	input-port and returns ||| input-port	count=3
function	blocking mode of ||| blocking	count=1
function	as ||| string >string	count=1
function_arg	[function_1] output-port and ||| [arg_2] [function_1]	count=1
function	output terminal [function_2] ||| [function_2] [function_1]	count=2
function	#t if ||| type?	count=4
function	arguments then ||| with	count=1
arg	member of char-set see ||| char-set	count=1
function	the input terminal ||| port set input terminal mode	count=1
arg	this procedure creates and ||| wt-tree-type key	count=1
function	output terminal mode of ||| port set output terminal mode	count=1
arg	list of methods ||| methods	count=1
function_arg	elements [arg_2] ||| [function_1] [arg_2]	count=2
function	unspecified value ||| set	count=1
function	the symbol ||| xml	count=1
function	writes ||| write char	count=1
function_arg	[function_1] rb-tree ||| [function_1] [arg_2]	count=1
arg	a [arg_2] ||| [arg_1] [arg_2]	count=1
arg	parse each [arg] operand ||| [arg]	count=1
function_arg	writes the [function_1] [arg_2] ||| [function_1] [arg_2]	count=10
function	arity ||| generic procedure arity	count=2
arg	bytes a string ||| bytes	count=1
arg	if filename is an ||| filename	count=1
function	a ||| output to	count=1
function	returns the rehash threshold ||| hash table rehash threshold	count=1
function	wrong number of ||| type:wrong number of	count=1
function_arg	integer may [arg_2] ||| [arg_2] [function_1]	count=1
function	number of the ||| number	count=1
function	procedure [function_2] ||| [function_1] [function_2] arity? object	count=1
arg	end ||| string end	count=1
arg	name to ||| name	count=1
arg	from port ||| port	count=2
function	block will ||| range	count=1
arg	height in device ||| height	count=1
arg	the elements of ||| initial list	count=3
function	the number of characters ||| chars	count=1
arg	symbol ||| symbol	count=7
function	write operation on ||| write	count=1
arg	list of condition-types ||| condition-types	count=1
function	deletes [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] end1 ||| [function_1] right! bit-string-1 start1 [arg_2]	count=2
function	is an abstract type ||| condition type:illegal datum	count=1
function	a new ||| make	count=5
function_arg	concrete type [arg_2] ||| [arg_2] [function_1]	count=3
arg	in wt-tree except ||| wt-tree	count=1
arg	of thunk and ||| thunk	count=1
function	integer may be ||| >bit string	count=1
arg	object of type condition-type ||| condition-type	count=1
function_arg	[function_1] keyword ||| [function_1] [arg_2]	count=1
function	host name ||| name	count=1
function	number [function_2] ||| [function_1] [function_2]	count=2
arg	k of ||| k unicode-char	count=1
module	january 1 1970 utc ||| 15.5.1	count=1
function	internet host name ||| name	count=1
function	direct superclasses of ||| direct superclasses	count=1
arg	operation on output-port ||| output-port	count=3
arg	component of procedure ||| procedure	count=1
function	the write operation on ||| output port write	count=1
arg	this procedure creates and ||| wt-tree-type key datum	count=1
arg	[arg_1] datum ||| [arg_2] [arg_1]	count=1
arg	formals ||| formals expression	count=2
arg	in element k of ||| k	count=3
function	to universal-time ||| >universal	count=1
function	the output terminal mode ||| set output terminal	count=1
arg	body ||| body	count=1
function	[function_1] of car ||| [function_1] [function_2]	count=2
function	is an abstract ||| condition type:serious condition	count=1
arg	[arg_1] in class ||| [arg_2] [arg_1]	count=8
arg	object object ||| object object	count=1
function	method of ||| method	count=1
function	state component ||| state!	count=1
function_arg	[function_1] by record-type ||| [function_1] unparser method! [arg_2]	count=3
function	arguments ||| with output to	count=1
arg	datum associated ||| default	count=3
arg	pathname1 is equivalent to ||| pathname1	count=1
arg	returns #t [arg] ||| [arg]	count=4
arg	pathname1 is [arg_2] ||| [arg_2] [arg_1]	count=2
module	input-port updating ||| 14.4	count=1
function	the direct superclasses ||| class direct superclasses	count=2
function	find such ||| find	count=1
function	the file type ||| attributes type	count=1
arg	if symbol is ||| environment symbol	count=1
function	drawing [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] type represented ||| [function_2] [function_1]	count=2
function	continuation ||| continuation	count=1
arg	char-set-2 ||| char-set-2	count=1
arg	of [arg] ||| [arg]	count=5
function	and extracts the ||| condition accessor	count=1
function	closes display after calling ||| graphics close	count=1
arg	be ||| symbol	count=1
function	into an exact integer ||| >unsigned integer	count=1
arg	a filename ||| filename	count=2
function	a ||| output	count=1
function	of one argument ||| call with current continuation	count=1
function_arg	loads the option [function_1] [arg_2] if already loaded does ||| [function_1] [arg_2]	count=1
function	[function] of ||| [function]	count=4
function	names symbols that are ||| names	count=1
function	a subtype ||| type:subprocess	count=2
function	[function] the ||| re string [function]	count=1
arg	write-substring operation on output-port ||| output-port string start	count=1
arg	predicate is ||| predicate list	count=1
function_arg	numerator [arg_2] ||| [function_1] [arg_2]	count=1
function	characters are available ||| peek	count=1
arg	the image is ||| y image	count=1
function	strongly and data weakly ||| type:datum weak	count=1
function	a regular ||| regexp group	count=1
arg	type ||| datum type operands	count=1
function	the operating [function_2] ||| [function_2] [function_1]	count=2
arg	compute ||| z	count=1
function_arg	[function_1] compares those ||| [arg_2] [function_1]	count=1
function	output terminal mode ||| set output terminal mode	count=1
function	[function_1] [function_2] ||| 17.7 [function_1] [function_2]	count=3
function	the inode number of ||| attributes inode number	count=1
function	must be ||| group	count=1
function_arg	coordinate limits [arg_2] ||| [arg_2] [function_1]	count=4
arg	prompts the ||| prompt	count=1
arg	new-value ||| new-value	count=2
function	contents as ||| >string	count=1
arg	car and cdr ||| car cdr	count=1
arg	wt-tree-2 otherwise ||| wt-tree-2	count=1
arg	consisting of the first [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=4
function	must be a ||| regexp	count=1
function	the length of ||| length	count=2
module	a list consisting ||| 7.4	count=1
function	keys ephemerally keyed by ||| type:datum ephemeral	count=1
function_arg	denominator of [arg_2] ||| [function_1] [arg_2]	count=1
function	a complete [function] ||| [function]	count=1
function_arg	loads [function_1] [arg_2] if already loaded does ||| [function_1] option [arg_2]	count=1
arg	by string start and ||| string start	count=1
arg	target-bit-string ||| target-bit-string	count=1
function	file for output ||| with output file	count=1
function	tree is ||| tree	count=1
arg	registers must be ||| registers	count=1
function	going to ||| tail	count=1
function	reading the value ||| accessor	count=1
function	for reference-trap objects when [function_1] [function_2] given ||| [function_2] [function_1]	count=1
module	the ||| 4.3.3	count=2
function	returns [function_2] ||| [function_1] [function_2]	count=3
module	be a string ||| 6.8.1	count=1
function	stores ||| set!	count=1
function	not check their arguments' ||| no	count=1
function_arg	[function_1] compares those ||| [function_1] hash table [arg_2]	count=1
arg	if [arg] contains no ||| [arg]	count=1
function	be a procedure ||| output to string	count=1
module	hash [module] hold ||| [module]	count=1
function	a procedure of no ||| to string	count=1
arg	host2 ||| host2	count=1
arg	this procedure is ||| object path	count=1
function	the drawing [function_2] ||| [function_2] [function_1]	count=1
function	of ||| with output to string	count=1
function	to a normal value ||| lookup	count=1
arg	with components key ||| key	count=1
function	signals a condition ||| signals	count=1
function_arg	generalizations of [arg_2] ||| [arg_2] [function_1]	count=1
function	port suitable for generating ||| port	count=1
function	procedure ||| x size	count=2
arg	allocated copy of list ||| list	count=1
arg	rectangle specified by source-x-left ||| source-x-left	count=1
function	a deletion procedure similar ||| delete	count=1
function	input blocking [function_2] ||| [function_2] [function_1]	count=2
arg	thing into a ||| thing	count=1
arg	types (if generalization ||| generalization	count=1
function	standard ||| standard	count=1
function	this low-level ||| command line parser!	count=1
module	of [module] ||| [module]	count=12
arg	association of wt-tree ||| wt-tree	count=1
arg	[arg_1] x ||| [arg_1] [arg_2]	count=1
function	point ||| point	count=1
arg	[arg_1] and datum ||| [arg_2] [arg_1]	count=1
arg	or [arg] tree is ||| rb-tree [arg]	count=1
function	new tree containing all ||| wt tree add	count=1
function	returns the [function_2] ||| [function_2] [function_1]	count=6
function	[function_1] transformer as ||| -1 sc [function_1] [function_2]	count=4
arg	[arg_1] object ||| [arg_2] [arg_1]	count=10
function_arg	ephemeron [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	writes [arg_2] ||| [arg_2] [function_1]	count=2
arg	argument in decoded-time ||| decoded-time	count=1
function	this low-level procedure defines ||| parser!	count=1
function	invokes the write operation ||| output port write	count=1
arg	a character [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] at end1 ||| [function_1] right! bit-string-1 start1 [arg_2]	count=2
function	no arguments ||| output to	count=1
arg	location of pointer in ||| pointer	count=1
arg	mode of port to ||| port	count=3
function	returns a deletion ||| delete	count=1
arg	k of ||| string k char	count=1
function	[function_1] type based ||| [function_2] [function_1]	count=3
function	must be ||| output to string	count=1
function	a new copy of ||| pathname new	count=1
arg	in wt-tree-2 ||| wt-tree-2	count=2
function	the generalizations of ||| generalizations	count=1
arg	procedure traverses [arg] order applying ||| action [arg]	count=1
arg	of bit-string-1 ||| bit-string-1	count=1
function	zero or one instances ||| optional	count=1
arg	obj1 ||| obj1	count=1
function	these set the datum ||| ephemeron datum	count=1
function	returns the operation ||| operation	count=1
function	under the wt-tree's ||| delete min!	count=1
function_arg	time [arg_2] ||| [arg_2] [function_1]	count=3
arg	of type ||| type operands	count=1
arg	alist in ||| alist	count=1
arg	[arg_1] x y ||| [arg_1] [arg_2]	count=1
function	xml document ||| xml document	count=1
function	returns an unspecified result ||| weak set car!	count=1
function	input terminal ||| input terminal	count=2
function_arg	[function_1] generic-procedure ||| [function_1] [arg_2]	count=2
function	number of the file ||| number	count=1
function_arg	[function_1] of bit-string ||| [arg_2] [function_1]	count=3
arg	true if [arg] ||| [arg]	count=1
function	access ||| file attributes access	count=1
function	bound outside the ||| free	count=1
function	the wt-tree's ordering relation ||| delete min	count=1
function	parent ||| parent	count=1
arg	calls thunk without ||| thunk	count=1
arg	decoded-time ||| decoded-time	count=3
function	the noise ||| noise	count=1
function	modifier method for the ||| modifier method	count=1
function	end of ||| end	count=3
arg	condition types (if generalization ||| name generalization	count=1
function	are ||| range	count=1
function	returns ||| xml name	count=1
function_arg	[function_1] of char1 ||| [arg_2] [function_1]	count=1
function	block will ||| no range	count=1
module	of ||| 15.5.1	count=1
arg	procedure [arg] key-hashing ||| [arg]	count=1
arg	object-hash is ||| object	count=1
function	a window on ||| window	count=1
function	a new output ||| output	count=1
function	[function_1] the length ||| [function_2] [function_1]	count=1
function	output terminal mode ||| port output terminal mode	count=1
function_arg	concrete type [arg_2] ||| [function_1] port [arg_2]	count=1
function	is an abstract ||| condition type:illegal	count=1
function	[function] invokes the ||| output port [function]	count=1
function	file-time format ||| >file time	count=1
function	anywhere that [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] [function_2] ||| [function_1] [function_2] open files	count=3
function_arg	elements of stream ||| stream >list stream	count=2
function_arg	the uri [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	properties [arg_2] ||| [function_1] [arg_2]	count=1
function	graphics device window ||| window	count=1
arg	of xml-name ||| xml-name	count=2
function	a ||| with output to	count=1
function	of the generalizations of ||| type generalizations	count=1
function	be a procedure ||| output to	count=1
arg	char in element k ||| string k	count=1
function	method ||| method	count=6
arg	be mode ||| mode	count=3
function	extracts ||| condition accessor	count=1
function	the device ||| graphics device	count=1
arg	the image is ||| image	count=1
function	[function_1] uri of ||| [function_2] [function_1]	count=2
function	an xml [function_2] ||| [function_2] [function_1]	count=1
function	accepts arbitrary objects as ||| ephemeral eq	count=1
function	and integer may ||| signed integer >bit string	count=1
arg	if initialization ||| initialization	count=1
arg	[arg_1] datum in ||| [arg_2] [arg_1]	count=3
function	otherwise they return #f ||| string upper case?	count=1
function	symbol ||| >symbol	count=1
arg	a new weak pair [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
arg	of port to be ||| port	count=1
function_arg	[function_1] graphics-device ||| [function_1] [arg_2]	count=11
function_arg	specializers of method ||| method specializers method	count=2
arg	output-port ||| output-port string start end	count=1
function	[function_1] the superclasses ||| [function_2] [function_1]	count=6
function	stores ||| vector 8b set!	count=2
function	limited ||| truncated	count=1
function	not include the bindings ||| bindings	count=1
arg	slot ||| slot	count=2
function	tree containing all of ||| tree	count=1
function	the arity of generic ||| generic procedure arity	count=1
arg	free-names must be ||| free-names	count=1
function	be a ||| to string	count=1
module	arguments ||| 9.4	count=1
arg	if initialization is ||| initialization	count=1
arg	each [arg] operands in ||| [arg]	count=1
function	elements ||| vector >list	count=1
arg	of type condition-type or ||| condition-type	count=1
arg	[arg] inclusive and ||| bit-string [arg]	count=1
function_arg	define [arg_2] ||| [function_1] windows type [arg_2]	count=1
arg	object ||| graphics-device-type object	count=1
function	elements are the elements ||| >list	count=1
arg	[arg_1] [arg_2] position ||| [arg_1] [arg_2]	count=3
arg	z1 ||| z1	count=1
function	named file for input ||| input file	count=1
function	of string ||| string	count=1
function	bit string ||| bit	count=1
function	the specializers of ||| method specializers	count=1
function_arg	state component [arg_2] ||| [arg_2] [function_1]	count=5
function	a new tree ||| wt tree	count=2
function	and [function_2] ||| [function_2] [function_1]	count=3
function	rehash size of ||| rehash size	count=1
function	characters ||| open wide input string	count=1
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=4
arg	of char1 with ||| char1	count=1
function	string ||| regexp group	count=1
function	changes the input terminal ||| port set input terminal mode	count=1
arg	[arg_1] output-port ||| 14.9.4 write substring [arg_2] string start [arg_1]	count=2
arg	for equality returning #t ||| datum=?	count=1
function	newly allocated copy of ||| copy	count=2
function	the name ||| name	count=3
arg	component of weak-pair ||| weak-pair	count=3
function	a list [function_2] ||| [function_2] [function_1]	count=4
arg	by string [arg] ||| string [arg]	count=2
function	returns ||| pathname?	count=1
arg	is terminated by initial-value ||| initial-value procedure list1 list2	count=1
function	values the device coordinate ||| device coordinate	count=1
arg	entity to be ||| entity	count=2
module	a regular ||| 6.8.1	count=1
function	output terminal mode of ||| port output terminal mode	count=1
function	of a line ||| line	count=2
function	to ||| parser	count=2
function	must be a procedure ||| string	count=1
arg	of type ||| type	count=1
arg	given to make-generic-procedure ||| generic	count=1
function	length of the file ||| length	count=1
function	coordinate [function_2] ||| [function_1] [function_2]	count=4
arg	and [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=6
function	name of ||| procedure name	count=1
arg	followed by one ||| multiple?	count=1
function	[function_1] output ||| [function_1] [function_2]	count=1
arg	character k of ||| k	count=1
function	invokes the flush-output operation ||| flush output	count=1
arg	stream ||| stream	count=1
function	the uri ||| xml name uri	count=2
module	in the [module] ||| [module]	count=5
function	date ||| date	count=1
function_arg	[function_1] code ||| [function_1] string k [arg_2]	count=1
function	device coordinate limits ||| device coordinate limits	count=1
function	scalar [function] represented by ||| char set >scalar [function]	count=1
function	part ||| xml name	count=1
function	the ||| xml	count=1
function	the maximum [function] ||| string maximum [function]	count=2
function	block will ||| no type	count=1
function	erases a single point ||| erase point	count=1
function	device coordinate limits for ||| device coordinate limits	count=1
arg	start and end ||| start end	count=7
arg	pexp is ||| pexp	count=1
arg	the first k ||| k	count=1
function	[function] given ||| [function] assignment	count=1
arg	weak-pair to [arg_2] ||| [arg_1] [arg_2]	count=6
function_arg	[function_1] symbol ||| [function_1] option [arg_2]	count=3
arg	that can be converted ||| directory	count=1
arg	code in the ||| start end code	count=1
function	the name of ||| name	count=3
function	an abstract ||| type:illegal	count=1
arg	if filename is ||| filename	count=1
arg	whose [arg] ||| [arg]	count=1
function	a procedure of ||| output	count=1
arg	record-type ||| record	count=1
function_arg	rehash size [arg_2] ||| [arg_2] [function_1]	count=1
function	a [function] that defines ||| make trivial [function]	count=1
function	accepts arbitrary objects ||| strong eq hash	count=1
function	check ||| no	count=2
function_arg	[function_1] is object ||| [arg_2] [function_1]	count=1
arg	car and [arg_2] ||| 10.7.1 weak cons [arg_1] [arg_2]	count=1
function	datum associated ||| get	count=1
function	daylight [function_2] ||| [function_2] [function_1]	count=2
arg	source-y-top width and ||| source-y-top width	count=2
arg	procedure thus [arg] must ||| [arg]	count=1
function	writes the [function] by string ||| write [function]	count=1
function	nesting of lists ||| depth	count=1
arg	writes the substring [arg_1] [arg_2] ||| 14.9.4 write substring [arg_1] [arg_2]	count=4
arg	each alternative must be ||| alternative	count=1
function	input blocking mode of ||| set input blocking	count=1
arg	method ||| method	count=2
arg	[arg_1] string2 ||| [arg_2] [arg_1]	count=6
function	[function_1] tag ||| [function_1] [function_2]	count=3
function	[function_1] limits ||| [function_1] [function_2]	count=6
function	accepts arbitrary objects ||| ephemeral eq hash	count=1
function	binding of one of ||| current	count=1
arg	symbol is a ||| symbol	count=1
function	generic's [function] generator ||| set generic procedure [function]	count=1
function	the same ||| string=?	count=1
function	unicode scalar [function_2] ||| [function_1] [function_2]	count=2
function	the last access ||| access	count=1
function	otherwise out [function_2] ||| [function_1] [function_2]	count=1
function	daylight savings time ||| daylight savings	count=1
function	file-time ||| string >file	count=1
function	lambda except [function] ||| [function]	count=3
arg	height to the ||| height	count=1
module	this is ||| 16.7	count=2
arg	at destination-x-left and ||| destination-x-left	count=1
function_arg	methods for [arg_2] ||| [arg_2] [function_1]	count=1
function	uppercase equivalent of ||| upcase	count=1
module	symbol part ||| 14.12.3	count=1
arg	character k of ||| string k	count=1
function	device coordinate [function_2] ||| [function_1] [function_2]	count=2
function	ephemerally keyed by the ||| ephemeral	count=1
function	a newly allocated list ||| datum list	count=1
arg	procedure accepting zero ||| caller	count=1
function	with [function_2] ||| [function_1] [function_2] unparser state unparser-state procedure	count=4
arg	end1 of ||| end1	count=1
function	allocated list of the ||| list	count=1
arg	environment2 must be ||| environment2	count=1
function	returns an unspecified result ||| cdr!	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x y [arg_2]	count=16
function	specializers ||| method specializers	count=1
module	drawing mode ||| 17.3	count=1
function_arg	[function_1] to a ||| [arg_2] [function_1]	count=1
function	restart ||| restart	count=1
function	type but is ||| condition type:datum	count=1
arg	expression to the right ||| variable	count=1
function_arg	methods [arg_2] ||| [arg_2] [function_1]	count=1
function	buffer ||| buffer	count=5
arg	char-set see character ||| char-set	count=1
function	slot ||| slot	count=2
function_arg	[function_1] bound ||| [arg_2] [function_1]	count=4
function	starting from the beginning ||| forward	count=1
function	the wrong number of ||| condition type:wrong number of	count=1
module	representation of ||| 6.8.1	count=1
arg	association between [arg] 1d-table ||| 1d-table [arg]	count=1
function	immediately returning [function] ||| [function] no	count=1
function_arg	[function_1] [arg_2] ||| [function_1] class [arg_2]	count=3
arg	bytes a ||| bytes	count=1
function	the input terminal mode ||| set input terminal mode	count=1
function	dispatch tag associate with ||| record type dispatch tag	count=1
arg	[arg_1] end until ||| [arg_2] [arg_1]	count=5
function	rehash size ||| rehash size	count=1
arg	weak-pair [arg_2] ||| [arg_2] [arg_1]	count=6
function	returns the arity of ||| arity	count=2
function	type of ||| type	count=2
function	[function] an ||| [function] command	count=2
function	as ||| >string	count=1
function_arg	[function_1] condition-type ||| [function_1] [arg_2]	count=3
module	association table that ||| 11.3	count=2
function_arg	the datum [arg_2] ||| [arg_2] [function_1]	count=1
arg	and [arg] ||| environment1 identifier1 [arg]	count=3
arg	key [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	not a [function_2] ||| [function_1] [function_2]	count=2
function	is an abstract type ||| condition type:warning	count=1
function	that ||| type:bad range	count=1
module	for hash [module] hold both ||| [module]	count=1
arg	start [arg_2] ||| [arg_1] [arg_2]	count=6
function	coordinate limits of ||| graphics set coordinate limits	count=1
function	the state component of ||| set port state!	count=1
function_arg	is [arg_2] ||| [function_1] type error? [arg_2]	count=1
arg	buffer against char-set ||| buffer char-set	count=2
function_arg	procedure [arg_2] ||| [function_1] [arg_2]	count=2
function	obtained by omitting the ||| tail	count=1
function	for writing the ||| record modifier	count=1
function	procedure closes [function_2] ||| [function_1] [function_2] open files	count=1
arg	the corresponding init the ||| init	count=1
arg	a procedure ||| procedure list	count=1
function	the state component ||| port state	count=1
function	returns the arity of ||| generic procedure arity	count=2
arg	of pexp ||| pexp	count=2
function	[function_1] drawing mode ||| [function_2] [function_1]	count=1
arg	by x [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	size of [arg_2] ||| [arg_2] [function_1]	count=5
function	port suitable for ||| port	count=1
module	specified by ||| 17.10.2	count=3
module	format ||| 15.5.1	count=1
function	sets ||| pointer!	count=1
function_arg	drawing mode [arg_2] ||| [arg_2] [function_1]	count=3
function	maximum number of days ||| days	count=1
function	arbitrary objects ||| weak eq hash table	count=1
function	buffer that fall between ||| parser buffer tail	count=1
function	for [function_2] ||| [function_2] [function_1]	count=2
function_arg	the prefix [arg_2] ||| [arg_2] [function_1]	count=1
function	del-assq! ||| association procedure	count=2
function	are associated with ||| 2d get alist y	count=1
arg	string the name linked ||| attributes	count=1
function	returns the ||| wide string	count=2
function	an identifier and ||| define	count=1
function	a string ||| regexp	count=1
function	drawing [function_2] ||| [function_1] [function_2]	count=1
function	a procedure of no ||| output to string	count=1
function	del-assv or del-assq! ||| association	count=1
function	concrete type that ||| type:derived port error	count=1
function_arg	[function_1] on output-port ||| [arg_2] [function_1]	count=9
function	complete [function] ||| [function]	count=1
function_arg	arity of [arg_2] ||| [function_1] [arg_2]	count=1
function	changes the input blocking ||| input blocking	count=1
function	include the bindings of ||| bindings	count=1
function	objects when [function] ||| [function]	count=2
arg	k elements of list ||| list k	count=1
function	and returns a new ||| make	count=2
function_arg	a newly allocated apply [function_1] [arg_2] and an ||| make apply [function_1] [arg_2]	count=1
function_arg	of [arg_2] ||| byte [function_1] [arg_2]	count=4
arg	[arg] whose ||| object [arg]	count=3
module	a procedure of no ||| 14.3	count=1
arg	component of weak-pair to ||| weak-pair	count=2
function	day ||| day	count=1
arg	[arg_1] x y ||| [arg_2] [arg_1]	count=1
function_arg	the specializers [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] to object ||| [arg_2] [arg_1]	count=8
module	check their ||| 4.3.3	count=1
module	returns ||| 14.12.3	count=1
function	the wt-tree's ordering relation ||| delete	count=1
arg	copies [arg_2] ||| [arg_2] start1 end1 vector2 [arg_1]	count=1
module	returns ||| 6.2	count=2
function	representation of ||| regexp group	count=1
arg	a condition of type ||| datum type	count=1
function_arg	superclasses of [arg_2] ||| [function_1] [arg_2]	count=1
function	is ||| condition	count=12
function	named file for output ||| output file	count=1
function	newly-allocated string ||| rexp >regexp	count=1
function_arg	in universal-time ||| time universal-time	count=1
function_arg	terminal mode [arg_2] ||| [arg_2] [function_1]	count=8
function	represented as ||| as file	count=1
function_arg	loads [function_1] [arg_2] if already loaded does ||| [function_1] [arg_2]	count=1
function	the syntax of ||| let* syntax	count=1
function	the arity ||| procedure arity	count=2
arg	length must be an ||| length	count=1
function	[function_1] limits for ||| [function_2] [function_1]	count=5
function	changes the extra ||| extra!	count=1
arg	thunk without arguments returning ||| thunk	count=1
function	buffer so ||| buffer	count=2
function	new [function_2] ||| [function_2] [function_1]	count=4
function_arg	the slot [arg_2] ||| [function_1] modifier method class [arg_2]	count=1
module	datums in ||| 11.4.2	count=1
function	of the generalizations of ||| condition type generalizations	count=1
function	[function_1] terminal mode ||| [function_1] [function_2]	count=12
module	string representation ||| 6.8.1	count=1
function	of the symbols ||| names	count=1
function_arg	[function_1] of procedure ||| [arg_2] [function_1]	count=1
function	[function_1] keys strongly ||| [function_1] [function_2]	count=1
function	[function_1] method ||| [function_1] [function_2]	count=1
module	representation for objects ||| 14.5	count=1
arg	char1 with [arg_2] ||| [arg_1] [arg_2]	count=4
function	procedure ||| string	count=1
function	procedure of ||| with	count=1
arg	mode of port ||| port	count=3
function	an unspecified result ||| weak set car!	count=1
function	yield a macro ||| macro	count=2
function	the device [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] format ||| [function_1] [function_2]	count=3
function	[function_1] one ||| [function_2] [function_1]	count=1
arg	entity ||| entity	count=1
function	operation sets the ||| set	count=1
function	arbitrary objects ||| weak eq hash	count=1
function	the class ||| class	count=2
function	of no arguments ||| with	count=1
function	modifier method for ||| modifier method	count=1
function	the continuation ||| continuation	count=1
function	variable user-initial-environment [function] ||| user [function]	count=2
arg	returns ||| char	count=1
arg	converted into a pathname ||| directory	count=1
arg	on output-port ||| output-port	count=4
arg	filename as ||| filename	count=1
function	procedure of no arguments ||| with output to	count=1
function	[function_1] time ||| [function_1] [function_2]	count=3
arg	the two strings substrings ||| string1 string2	count=2
function	deletes the [function_2] ||| [function_2] [function_1]	count=1
function	of the superclasses of ||| precedence	count=1
function	classes ||| classes	count=1
function	extracts the contents of ||| condition accessor	count=1
function	string as ||| string	count=1
function_arg	size [arg_2] ||| [function_1] [arg_2]	count=4
module	must ||| 14.3	count=1
arg	compares those ||| initial-size	count=4
function	cursor for ||| move cursor	count=1
function	day ||| time day	count=1
function	a concrete type that ||| condition type:derived	count=1
arg	[arg_1] height ||| [arg_2] [arg_1]	count=3
function	obtained by omitting the ||| list tail	count=1
arg	input-port and returns that ||| input-port	count=1
arg	given operands ||| operands	count=1
function_arg	writes [function_1] [arg_2] ||| [function_1] string [arg_2]	count=2
function	not check their ||| no type	count=1
arg	corresponding init the ||| init	count=1
arg	in elements start ||| string start	count=1
function	a procedure of no ||| to	count=1
arg	this form creates a ||| name	count=1
arg	y ||| y string	count=1
arg	equality returning #t iff ||| datum=?	count=1
function	not ||| no range	count=1
arg	predicate returns ||| predicate list	count=1
function	input blocking ||| input blocking	count=2
function	daylight savings ||| time daylight savings	count=1
function	terminal [function_2] ||| [function_1] [function_2]	count=4
function	[function] port from ||| with [function] unparser	count=1
module	otherwise returns ||| 5.3	count=1
function	that contains the ||| alist >wt	count=1
function	going to ||| string tail	count=1
function_arg	the key [arg_2] ||| [function_1] [arg_2]	count=2
function	arbitrary objects as ||| ephemeral eq	count=1
arg	service ||| service	count=1
arg	this procedure [arg] key-hashing ||| [arg]	count=1
function_arg	[function_1] if filename ||| [arg_2] [function_1]	count=1
function	is buffered this causes ||| flush output	count=1
arg	of one ||| vector	count=1
function	of ||| ref	count=1
module	representation for objects that ||| 14.5	count=1
function	call ||| call with	count=2
function	write operation ||| output port write	count=1
function	the arity of ||| generic procedure arity	count=2
arg	port using the ||| port	count=1
arg	specified [arg] ||| [arg]	count=3
module	[module] integers 0 ||| [module]	count=1
arg	[arg_1] of vector1 ||| [arg_2] start1 end1 vector2 [arg_1]	count=1
function	scheme system ||| system	count=1
function	newly allocated list ||| hash table datum list	count=1
function_arg	the tree [arg_2] ||| [arg_2] [function_1]	count=2
function	flush-output ||| flush output	count=1
function	otherwise out of ||| type:datum out of	count=2
function	stores ||| 8b fill!	count=2
arg	[arg_1] elements start ||| [arg_2] [arg_1]	count=1
arg	element k ||| string k char	count=1
function_arg	syntactic [arg_2] ||| -1 make [function_1] closure [arg_2]	count=1
function	the uppercase equivalent ||| upcase	count=1
function	otherwise returns #f ||| pathname?	count=1
function	a concrete ||| type:derived port	count=1
function	[function_1] description ||| [function_1] [function_2]	count=1
arg	decoded-time format ||| decoded-time	count=1
function	an arity object ||| arity	count=1
function	graphics device at ||| draw image	count=1
function	be executed as a ||| command	count=1
function	returns the uppercase equivalent ||| char upcase	count=1
arg	of type condition-type ||| condition-type	count=1
function	for the slot ||| slot	count=1
arg	[arg_1] and datum ||| [arg_1] [arg_2]	count=1
rep	returns the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=8
function	number of characters ||| chars	count=1
module	#f ||| 15.1.3	count=1
function	and ||| make	count=2
arg	default ||| default	count=1
function	wrong number [function_2] ||| [function_2] [function_1]	count=2
module	weight-balanced ||| 11.7.1	count=1
function	the symbol ||| xml name >symbol	count=1
function_arg	the let* [arg_2] ||| [function_1] [arg_2]	count=3
arg	k elements ||| k	count=1
module	rather than ||| 7.7	count=2
function	exact ||| tree size	count=1
arg	associations as alist ||| alist	count=1
arg	name and ||| name	count=1
arg	in buffer ||| buffer	count=1
arg	character in ||| index	count=1
function	an unspecified result ||| set car!	count=1
function_arg	[function_1] hash-table ||| [arg_2] [function_1]	count=9
arg	code in element k ||| string k code	count=1
function	uri record otherwise ||| xml	count=1
function	specializations there [function] no predefined ||| [function]	count=1
function	compares the two strings ||| match	count=1
function	dispatch ||| dispatch	count=3
function	[function] the ||| output [function]	count=1
function_arg	loads the [function_1] [arg_2] if already loaded does ||| [function_1] option [arg_2]	count=1
function_arg	[function_1] of method ||| [arg_2] [function_1]	count=6
function	fall between ||| buffer tail	count=1
arg	that [arg] run ||| [arg]	count=1
arg	consisting of the ||| unicode-char	count=1
arg	if [arg] has zero ||| [arg]	count=1
arg	service the ||| service	count=1
arg	a value ||| value	count=1
arg	at index start1 inclusive ||| start1	count=1
function	an abstract type ||| type:illegal datum	count=1
module	structure a random-state object ||| 4.8	count=1
function	must ||| with output to	count=1
function	the uppercase equivalent of ||| char upcase	count=1
function	hold data [function_2] ||| [function_2] [function_1]	count=2
function	the properties ||| slot properties	count=1
arg	procedure is a ||| object	count=1
function	procedure of ||| output	count=1
function	is [function] ||| [function]	count=2
function	a concrete type ||| condition type:derived port	count=1
function	the rehash size of ||| table rehash size	count=1
arg	of associations in wt-tree ||| wt-tree	count=1
function	character otherwise returns #f ||| char?	count=1
function	limited [function_2] ||| [function_2] [function_1]	count=2
function	part of ||| xml name	count=1
module	procedure of no arguments ||| 14.3	count=1
function	that is a copy ||| vector copy	count=1
function	closes ||| graphics close	count=1
function	returns the input blocking ||| port input blocking	count=1
function	procedure of no ||| with output	count=1
arg	[arg] run periodically ||| [arg]	count=1
function	must be a ||| with	count=1
function	[function_1] compares ||| [function_1] weak eq [function_2]	count=1
function	returns the parent ||| parent	count=1
function	an exact non-negative ||| wt tree size	count=1
function	position [function_2] ||| [function_2] [function_1]	count=2
arg	applicable methods of generic-procedure ||| generic-procedure	count=1
function	unparsed ||| unparsed	count=1
function_arg	the parent [arg_2] ||| [arg_2] [function_1]	count=1
arg	virtual ||| x-left y-bottom x-right y-top	count=1
function	emp ||| emp?	count=1
arg	the point x y ||| x y string	count=1
function	invokes the fresh-line on ||| fresh line	count=1
function_arg	define [arg_2] ||| [function_1] class [arg_2]	count=1
function_arg	limits for [arg_2] ||| [function_1] [arg_2]	count=1
arg	1 cons* [arg] similar to ||| [arg]	count=1
function_arg	and [arg_2] ||| [function_1] [arg_2]	count=1
function	transformer ||| transformer	count=2
function	the input blocking ||| port input blocking	count=2
function_arg	writes the [function_1] [arg_2] ||| [function_1] string [arg_2]	count=2
arg	which predicate ||| predicate list	count=1
module	an [module] of ||| [module]	count=1
arg	defines keyword ||| keyword thunk	count=1
function	these set the key ||| ephemeron key	count=1
function	[function_1] described ||| [function_1] [function_2]	count=4
function	the procedure ||| method procedure	count=1
function_arg	character [arg_2] ||| [arg_2] [function_1]	count=1
function	the denominator of ||| denominator	count=1
function	an output [function_2] ||| [function_2] [function_1]	count=4
function	device ||| graphics device	count=1
function	returns a new ||| pathname new	count=1
module	file ports ||| 14.2	count=1
function	for writing the value ||| modifier	count=1
function	like read-char immediately returning [function_1] [function_2] ||| [function_1] [function_2]	count=1
function_arg	description [arg_2] ||| [function_1] condition [arg_2]	count=1
function	graphics device at ||| draw	count=3
arg	[arg_1] object and ||| [arg_1] [arg_2]	count=6
arg	rb-tree-2 [arg_2] ||| [arg_2] [arg_1]	count=1
function	tree [function_2] ||| [function_1] [function_2]	count=3
arg	key matching key ||| key	count=1
function	and cdr ||| cdr	count=1
function	character ||| read char	count=1
arg	object whose [arg] ||| [arg]	count=1
function	symbol ||| xml name >symbol	count=1
function	is ||| object hash	count=1
module	check that ||| 4.3.3	count=1
function_arg	[function_1] keyword to ||| [function_1] [arg_2]	count=1
function	is a concrete ||| condition type:derived port	count=1
function	list [function] contains the ||| [function]	count=1
function	the length ||| string length	count=3
function	daylight savings time ||| time daylight savings	count=1
function	start of the text ||| start	count=1
function	directory ||| directory pathname	count=1
arg	k of [arg_2] ||| [arg_2] [arg_1]	count=2
function	as a permanent condition ||| bind default condition	count=1
function	new tree ||| wt tree	count=2
function	rehash [function_2] ||| [function_1] [function_2]	count=4
function	no ||| with output	count=1
function_arg	[function_1] [arg_2] ||| [function_1] right! bit-string-1 start1 [arg_2]	count=4
function	the symbol ||| name >symbol	count=1
function	which the directory ||| directory	count=1
arg	[arg] is ||| [arg] field-names	count=3
arg	time-string ||| time-string	count=1
function	by zero ||| by zero	count=2
arg	type ||| type operands	count=1
function	a concrete ||| condition type:derived port	count=1
arg	start1 [arg_2] ||| [arg_1] [arg_2]	count=2
module	file named ||| 15.3	count=1
function	extracts the contents of ||| accessor	count=1
function	the flush-output ||| output port flush output	count=1
function	a ||| with output to string	count=1
arg	[arg] are the ||| [arg]	count=3
function	hold [function_2] ||| [function_2] [function_1]	count=3
arg	with key in 1d-table ||| 1d-table key	count=1
arg	accepts four arguments and ||| key-hash key=? rehash-after-gc? entry-type	count=1
arg	list with predicate ||| predicate list	count=1
arg	length must be ||| length	count=1
function	searches string for the ||| string search	count=1
arg	of wide-string ||| wide-string	count=3
rep	allocates [function_arg_2] ||| [module_1] [function_arg_2]	count=6
function	a newly allocated uninterned ||| string >uninterned	count=1
module	a [module] ||| [module]	count=4
function_arg	let* [arg_2] ||| [arg_2] [function_1]	count=3
arg	form ||| form	count=1
arg	a [arg_2] ||| [arg_2] [arg_1]	count=1
function	the type [function] associated with ||| record type [function]	count=1
function	terminal mode of ||| terminal	count=2
function	for writing ||| modifier	count=1
function	containing the same name ||| name	count=1
module	[module] a match ||| [module]	count=1
function	the inode number ||| file attributes inode number	count=1
function	the last modification ||| file attributes modification	count=1
arg	copy of alist in ||| alist	count=1
function	[function_1] description ||| [function_2] [function_1]	count=1
function	unicode scalar [function] represented by ||| char set >scalar [function]	count=1
function	symbol that ||| symbol	count=1
function_arg	[function_1] bytes a ||| [arg_2] [function_1]	count=1
arg	[arg_1] end to ||| 14.9.4 write substring [arg_1] [arg_2]	count=2
module	will not ||| 4.3.3	count=2
function	any subsequent words are ||| capitalized?	count=1
function	indices are ||| no	count=1
function	[function_1] superclasses ||| [function_1] [function_2]	count=4
function	program's execution ||| trace	count=1
module	is a [module] ||| [module]	count=1
arg	named symbol in port-type ||| port-type symbol	count=1
function	is the uri ||| uri	count=1
function	are the elements of ||| stream >list	count=1
function	is ||| condition type:datum	count=1
arg	type represented by record-type ||| record-type	count=3
arg	end until either ||| end	count=1
arg	at destination-x-left ||| destination-x-left	count=1
function	assigning to ||| ignore assignment	count=1
function	buffer that fall between ||| tail	count=1
function_arg	loads the [function_1] [arg_2] if already loaded does ||| [function_1] [arg_2]	count=1
function	[function_1] represented ||| [function_2] [function_1]	count=12
function	[function_1] evaluated ||| [function_2] [function_1]	count=3
function_arg	[function_1] host-name ||| [arg_2] [function_1]	count=4
function	hash-table constructor ||| hash table constructor	count=2
function	unparser method [function_2] ||| [function_2] [function_1]	count=4
arg	followed ||| multiple?	count=1
function	closes display ||| close	count=1
function_arg	host name [arg_2] ||| [arg_2] [function_1]	count=4
arg	mexp ||| mexp	count=1
function	specifies the [function] output ||| output buffer [function]	count=1
function	bool ||| set pixels unaligned	count=1
function	the flush-output operation ||| flush output	count=1
function	output [function_2] ||| [function_1] to [function_2]	count=1
function	[function_1] of the ||| [function_2] [function_1]	count=8
function_arg	the properties [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	procedure of [arg_2] ||| [arg_2] [function_1]	count=1
arg	code in the ||| string start end code	count=1
function	number of ||| number	count=1
arg	the fundamental [arg] deconstructor (lambda ||| [arg]	count=1
arg	k [arg_2] ||| [arg_2] [arg_1]	count=6
function	a procedure of ||| to string	count=1
arg	of slot ||| slot	count=2
function	integer may ||| integer >bit	count=1
arg	initialization on the indices ||| initialization	count=1
function	that character ||| buffer char	count=1
arg	bindings ||| bindings	count=1
function	the nesting of lists ||| list depth	count=1
function	a generalization ||| general	count=1
module	the block will ||| 4.3.3	count=2
arg	traverses [arg] order ||| action [arg]	count=1
function	the operation ||| type operation	count=1
function	record [function] descriptor ||| record [function]	count=1
function	output ||| port set output	count=1
arg	between [arg] 1d-table ||| 1d-table [arg]	count=1
function	most common ||| type:system call error	count=1
arg	port ||| port	count=14
function	[function_1] number ||| [function_2] [function_1]	count=6
function	deletion procedure similar ||| delete	count=1
function	this low-level ||| parser!	count=1
arg	key [arg_1] [arg_2] tree is empty ||| datum [arg_1] [arg_2]	count=1
function	descriptors for ||| slots	count=1
arg	in wt-tree except the ||| wt-tree	count=1
function	match the specified substring ||| match parser buffer	count=1
function	compares the ||| string match	count=1
arg	record-type must ||| record-type	count=1
function	if environment has ||| environment has	count=1
function	arity ||| arity	count=4
function	changes the output terminal ||| set output terminal mode	count=1
function	newly allocated bit string ||| bit string	count=2
function_arg	[function_1] environment ||| [arg_2] [function_1]	count=1
function	[function_1] length ||| [function_2] [function_1]	count=4
function_arg	uri of [arg_2] ||| [arg_2] [function_1]	count=1
function	uppercase equivalent ||| upcase	count=1
function	of a ||| regexp	count=1
arg	[arg_1] if-not-found must ||| [arg_2] [arg_1]	count=4
function	unparsed [function_2] ||| [function_1] [function_2]	count=1
function	are the elements ||| >list	count=1
function	the type of ||| type	count=1
arg	[arg] a red-black ||| [arg]	count=1
function_arg	numerator of [arg_2] ||| [arg_2] [function_1]	count=1
function	not the ||| not	count=1
function	the state component of ||| state!	count=1
arg	to output-port ||| output-port	count=3
function	searches string ||| string search	count=1
arg	environments and identifier1 ||| identifier1	count=1
function	the symbol part of ||| >symbol	count=1
function	of a regular ||| regexp group	count=1
function	file type #t ||| attributes type	count=1
function	of ||| with output to	count=1
function	[function_1] method for ||| [function_2] [function_1]	count=1
arg	file specified by pathname ||| pathname	count=1
function	arity of generic ||| procedure arity	count=1
function	hold both ||| table entry type:key datum	count=1
function	subtype of ||| type:subprocess	count=2
function	key of some ||| subset?	count=1
function	the output terminal mode ||| set output terminal mode	count=1
arg	form creates a ||| name	count=1
function_arg	[function_1] an existing ||| [function_1] filename [arg_2]	count=1
arg	association in wt-tree-1 ||| wt-tree-1	count=1
function	last access ||| access	count=1
function	scheme's system ||| system	count=1
arg	car and [arg_2] ||| [arg_2] [arg_1]	count=1
function	not ||| type	count=1
arg	length k ||| k initialization	count=1
function	otherwise returns ||| char?	count=1
function	returns the prefix of ||| prefix	count=1
arg	thunk is to be ||| thunk	count=1
arg	returns character k ||| k	count=1
function	type #t ||| type	count=1
function	output is [function_2] ||| [function_2] [function_1]	count=2
function	start of the text ||| string start	count=1
module	an unspecified result ||| 11.4.2	count=2
arg	[arg] can ||| [arg]	count=1
function	file type #t if ||| attributes type	count=1
function	with ||| apply	count=1
arg	elements of ||| list	count=5
function	current input port ||| current input port	count=1
arg	[arg_1] output-port ||| 14.9.4 write substring [arg_2] string [arg_1]	count=1
function	user for an evaluated ||| prompt for evaluated	count=1
function	applicable [function_2] ||| [function_1] [function_2]	count=4
function	accessor method for ||| accessor method	count=2
arg	if-found must be a ||| if-found	count=2
function	the output ||| set output	count=1
function	signals a condition that ||| signals	count=1
function	there [function] no ||| [function]	count=1
module	in a buffer everything ||| 14.3	count=1
module	procedure ||| 14.3	count=1
arg	mode must be ||| mode	count=1
arg	creates an association between [arg_1] [arg_2] 1d-table ||| 1d table put! 1d-table [arg_1] [arg_2]	count=1
arg	[arg] match-registers ||| [arg]	count=1
function	[function_1] values ||| [function_2] [function_1]	count=3
arg	x y on graphics-device ||| graphics-device x y string	count=1
function	any of ||| alternatives	count=1
module	buffer otherwise returns #f ||| 14.10	count=1
arg	consisting of the specified ||| unicode-char	count=1
module	[module] that are ||| [module]	count=1
arg	against buffer's ||| buffer string	count=1
function	a new [function_2] ||| [function_2] [function_1]	count=8
function	representation of a ||| group	count=1
arg	string [arg] ||| string [arg]	count=2
function	the cursor for ||| cursor	count=1
function	the input terminal ||| set input terminal	count=1
module	associated with an ||| 11.5	count=1
function	the device [function_2] ||| [function_2] [function_1]	count=3
function	the length ||| length	count=2
arg	of char1 ||| string char1	count=1
function	match the specified ||| match parser	count=1
arg	[arg_1] [arg_2] into ||| [arg_2] start1 [arg_1]	count=4
function	a deletion ||| delete	count=1
function	mode ||| file attributes mode	count=1
function	[function_1] a dispatch ||| [function_2] [function_1]	count=1
function	the write ||| port write	count=1
function	list of the elements ||| vector >list	count=1
function	block ||| type	count=1
arg	call [arg] current ||| [arg]	count=1
function	the last pair in ||| last pair	count=1
module	representation of midnight january ||| 15.5.1	count=1
function	returns the output ||| port output	count=1
function	is [function_2] ||| 13.2 user [function_1] [function_2]	count=3
arg	solid at ||| radius	count=1
arg	fundamental [arg] deconstructor (lambda ||| [arg]	count=1
arg	is like hash except ||| object	count=1
function	otherwise ||| host?	count=1
function	list of iso-8859-1 ||| list	count=1
function	invokes the fresh-line ||| fresh line	count=1
function_arg	[function_1] new-value ||| [arg_2] [function_1]	count=3
function_arg	stores object ||| fill! vector object	count=1
arg	than [arg] ||| wt-tree [arg]	count=6
module	check ||| 4.3.3	count=2
function	[function_1] using the ||| [function_2] [function_1]	count=2
module	this type indicates that ||| 16.7	count=2
function_arg	[function_1] host-name using ||| [function_1] [arg_2]	count=4
function	output terminal mode of ||| set output terminal mode	count=1
function_arg	input blocking [arg_2] ||| [arg_2] [function_1]	count=3
arg	wt-tree-2 that has ||| wt-tree-2	count=1
function	block will not check ||| no range	count=1
arg	a condition of type ||| type operands	count=1
arg	the point x y ||| x y	count=2
arg	[arg_1] start and ||| [arg_2] [arg_1]	count=5
function	current output ||| current output	count=1
function	the rehash threshold ||| rehash threshold	count=1
function	[function_1] number of ||| [function_1] [function_2]	count=6
function_arg	[function_1] on graphics-device ||| [function_1] [arg_2]	count=9
arg	name in class ||| class name	count=9
function	direct ||| direct	count=1
arg	binary operation procedure ||| procedure initial	count=1
function	block ||| range	count=1
function	tree that ||| tree	count=1
arg	[arg_1] end exclusive ||| [arg_1] [arg_2]	count=1
arg	given by x ||| x	count=2
function	uninterned symbol that ||| uninterned symbol	count=1
arg	by string [arg_2] ||| [arg_1] [arg_2]	count=6
function	if environment has a ||| environment has	count=1
arg	modulus ||| modulus	count=1
function	second ||| second	count=1
function	[function_1] and ||| [function_2] [function_1]	count=1
arg	filename1 and ||| filename1	count=1
arg	[arg_1] transformer in ||| [arg_2] [arg_1]	count=1
arg	is the ||| object modulus	count=3
arg	at index start and ||| string start	count=1
arg	location of pointer ||| pointer	count=1
arg	[arg] order ||| action [arg]	count=1
function	part ||| name	count=1
function	bindings ||| environment bindings	count=2
arg	[arg_1] modification-time must ||| [arg_2] [arg_1]	count=3
arg	datum in ||| datum	count=1
function	#t if environment has ||| has	count=1
function	that ||| 1d table	count=1
function	the numerator ||| numerator	count=1
function	hold keys strongly ||| entry type:datum	count=1
arg	in wt-tree-2 that has ||| wt-tree-2	count=1
arg	port using ||| port	count=1
function	not check that indices ||| no	count=1
arg	[arg_1] free-names must ||| closure [arg_1] [arg_2]	count=1
function	except that the output ||| output	count=1
arg	rb-tree-2 for ||| rb-tree-2	count=1
function_arg	days possible [arg_2] ||| [arg_2] [function_1]	count=1
module	consisting ||| 5.6	count=1
arg	[arg] match-registers object ||| [arg]	count=1
function	specializers of ||| specializers	count=1
function	changes the output ||| output	count=1
arg	of char-set see character ||| char-set	count=1
module	a pathname by ->pathname ||| 15.4	count=1
function	returns an unspecified value ||| wide string	count=1
arg	returned otherwise default ||| default	count=1
function	must be a procedure ||| with	count=1
module	representation ||| 6.8.1	count=1
function	arbitrary objects as ||| weak eq	count=1
function_arg	[function_1] from list ||| [function_1] [arg_2]	count=3
function_arg	pair from list ||| pair list	count=2
function	returns the length of ||| string length	count=1
function	otherwise out of ||| out of	count=1
function	the variables [function] ||| [function]	count=4
function	new soft link called ||| soft link	count=1
function_arg	slot [arg_2] ||| [function_1] modifier method class [arg_2]	count=1
arg	#t if symbol is ||| symbol	count=3
module	a character set consisting ||| 5.6	count=1
function	into an [function_2] ||| [function_1] [function_2]	count=1
function_arg	call [arg_2] ||| [function_1] input file [arg_2]	count=4
arg	qname of xml-name as ||| xml-name	count=1
function	match the specified substring ||| match parser	count=1
function	[function_1] [function_2] ||| [function_1] weak eq [function_2]	count=1
function	list of the classes ||| classes	count=1
function_arg	[function_1] [arg_2] ||| [function_1] hash table [arg_2]	count=1
arg	which predicate is true ||| predicate	count=1
function	contains ||| alist >wt	count=1
function	input of ||| input	count=1
module	generators ||| 12.6.2	count=2
function	the cursor for ||| graphics move cursor	count=1
function	the device coordinate limits ||| device coordinate limits	count=1
function	the arity of generic ||| arity	count=1
function	the last change ||| attributes change	count=1
function	unparser method of ||| unparser method!	count=1
function	but is otherwise out ||| condition type:datum out	count=1
function	condition ||| condition	count=2
function	valid ||| no	count=1
function	the block will ||| no	count=2
arg	destructively [arg_2] ||| [arg_2] [arg_1]	count=4
function	no ||| with output to string	count=1
arg	or default if ||| default	count=1
arg	[arg] current syntactic ||| [arg]	count=1
arg	of thunk ||| thunk	count=1
function	of some ||| wt tree subset?	count=1
module	in every ||| 8.4	count=1
arg	key in [arg] ||| [arg]	count=1
function	of no arguments ||| to	count=1
function	corresponding to the printed ||| >name	count=1
function_arg	length of bit-string ||| length bit-string	count=2
arg	start1 to [arg_2] ||| [arg_1] [arg_2]	count=2
arg	instance is ||| instance	count=1
module	not check ||| 4.3.3	count=2
function	define ||| define	count=3
function	a normal value ||| assigned?	count=1
function	[function] of ||| condition [function]	count=3
function_arg	elements of [arg_2] ||| [function_1] [arg_2]	count=1
module	of midnight ||| 15.5.1	count=1
arg	procedure [arg] key-hashing procedure ||| [arg]	count=1
arg	same associations as alist ||| alist	count=1
function	the inode number ||| attributes inode number	count=1
function	the superclasses ||| class precedence	count=1
function	named file for input ||| with input file	count=1
arg	and ||| hash-table key	count=1
function	[function_1] zero ||| [function_2] [function_1]	count=1
function	the input terminal mode ||| input terminal mode	count=2
arg	char in element k ||| k unicode-char	count=1
function	define the ||| define	count=1
function	bind the drawing mode ||| bind drawing mode	count=1
arg	[arg_1] and identifier2 ||| [arg_1] [arg_2]	count=3
function	yield a macro transformer ||| macro transformer	count=2
arg	rb-tree-2 ||| rb-tree-2	count=1
function	[function_1] a line ||| [function_2] [function_1]	count=4
function_arg	[function_1] char1 ||| [arg_2] [function_1]	count=1
arg	if object is not ||| object	count=2
function	specializers ||| specializers	count=1
function	be a keyword ||| macro	count=1
function	[function_1] format ||| [function_2] [function_1]	count=3
function	key ||| computed emp key	count=1
module	of objects and `#f' ||| 12.6.1	count=1
module	updating ||| 14.4	count=2
function	changes the input blocking ||| input blocking mode	count=1
function	environment has ||| has	count=1
function	[function] ports ||| set [function] input	count=1
function	component is represented as ||| pathname as file	count=1
function	apply [function] with a ||| make apply [function]	count=1
function	not a port ||| port	count=1
arg	associations as alist ||| tree-type alist	count=1
function	x-key ||| alist x	count=1
function	searches string for the ||| search	count=1
arg	type-name ||| type-name	count=1
function	procedure of no ||| with output to string	count=1
arg	the symbol [arg] is implemented ||| [arg]	count=1
arg	given a value ||| value	count=1
function	returns a new generic ||| make generic	count=1
module	not check their ||| 4.3.3	count=1
function	[function_1] character ||| [function_1] [function_2] no hang	count=1
function	a procedure ||| output to string	count=1
function	input blocking mode ||| port set input blocking	count=1
arg	regexp ||| regexp string	count=1
arg	[arg] whose car ||| object [arg]	count=3
function	a new output ||| output string	count=1
function	ordering relation ||| wt tree	count=1
function	[function] for the ||| init file [function]	count=2
function	a concrete type ||| type:derived port error	count=1
function	the wt-tree's ||| delete min	count=1
function	an exact ||| tree size	count=1
function	an [function] value ||| [function]	count=1
function	the block ||| type	count=1
arg	the fields [arg] ||| [arg]	count=3
function	the wrong number ||| type:wrong number	count=1
module	for trees with ||| 11.7.1	count=1
arg	from input-port and ||| input-port	count=1
function_arg	the procedure [arg_2] ||| [function_1] [arg_2]	count=1
function	of no ||| string	count=1
function_arg	the class [arg_2] ||| [arg_2] [function_1]	count=2
function	returns the class of ||| class	count=2
function_arg	the generalizations [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] window ||| [function_2] [function_1]	count=2
arg	input-port to point to ||| input-port	count=2
function	changes the output terminal ||| output terminal	count=1
function_arg	flush-output operation [arg_2] ||| [function_1] [arg_2]	count=1
function	type or ||| type	count=1
function	if a character ||| char	count=1
arg	if [arg] true on ||| [arg]	count=1
function	[function_1] [function_2] ||| [function_1] strong eq [function_2]	count=1
function	[function_1] the ||| [function_1] [function_2]	count=1
function	a deletion procedure ||| delete	count=1
arg	connections to service ||| service	count=1
arg	keyword to ||| keyword	count=1
function	contains ||| >wt	count=1
function_arg	writes the [function_1] [arg_2] to ||| [function_1] [arg_2]	count=4
function_arg	operation on graphics-device ||| operation graphics-device	count=1
function_arg	a copy [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	possible [arg_2] ||| [function_1] days [arg_2]	count=1
arg	condition-type or ||| condition-type	count=1
function	must be ||| with output	count=1
module	current [module] as ||| [module]	count=1
function	wrong [function_2] ||| [function_1] [function_2]	count=3
function	a weak ||| weak	count=1
function	subclass ||| subclass	count=1
arg	[arg_1] if-not-found ||| [arg_2] [arg_1]	count=4
module	is the representation ||| 15.5.1	count=1
function	must be a ||| with output to string	count=1
function_arg	returns #t [arg_2] ||| [arg_2] [function_1]	count=1
arg	parsing pexp ||| pexp	count=1
arg	bound in ||| environment	count=2
module	`#f' otherwise ||| 12.6.1	count=1
function	a newly allocated copy ||| rb tree copy	count=1
function	[function_1] to ||| [function_2] [function_1]	count=5
function	the elements of ||| stream >list	count=1
function	a new [function_2] ||| [function_1] [function_2]	count=8
module	special printed representation ||| 14.5	count=1
function	block ||| no range	count=1
arg	[arg] one ||| [arg]	count=3
function	is typically a string ||| error	count=1
arg	source-x-left source-y-top [arg_2] ||| [arg_1] [arg_2]	count=3
function	arbitrary objects ||| strong eq	count=1
function	applicable [function_2] ||| [function_2] [function_1]	count=4
function	of ||| output	count=1
function	epoch is the representation ||| epoch	count=1
module	the current [module] as an ||| [module]	count=1
function	file-time format ||| string >file time	count=2
function	tag ||| tag	count=1
arg	of buffer to ||| buffer	count=1
arg	its arguments ||| fixnum fixnum	count=1
function	start ||| start	count=3
function	the [function] ||| [function]	count=7
function	allocated list of ||| list	count=1
function	of no ||| output to	count=1
function	superclasses of ||| class precedence	count=1
function_arg	tree [arg_2] ||| [function_1] split< [arg_2]	count=1
function	character otherwise returns ||| char?	count=1
arg	elements start ||| start	count=1
function	be ||| with output to string	count=1
arg	expression to ||| variable	count=1
function	is an abstract ||| condition type:error	count=2
arg	with predicate ||| predicate list	count=1
arg	one argument and ||| hash-table key	count=1
function	the symbol part of ||| xml	count=1
function	tree ||| wt	count=2
function	to but excluding ||| string head	count=1
arg	and datum ||| datum	count=1
function_arg	[function_1] output-port ||| [arg_2] [function_1]	count=8
function_arg	[function_1] of stream ||| [function_1] [arg_2]	count=4
function	changes the output terminal ||| port set output terminal mode	count=1
function	the file ||| file	count=1
function	file type ||| type	count=1
arg	by string start ||| string start	count=2
function_arg	and on [arg_2] ||| [function_1] generic-procedure [arg_2]	count=1
function	searches string ||| search	count=1
function	returns #f ||| pathname?	count=1
function	type ||| type	count=13
function	a concrete type ||| condition type:derived port error	count=1
arg	is the ||| object	count=4
function	specifies the [function_1] [function_2] standard output of the ||| [function_2] [function_1]	count=1
arg	as alist ||| tree-type alist	count=1
function	input terminal mode of ||| input terminal	count=1
arg	image is copied ||| x y image	count=1
function_arg	[function_1] xml-name ||| [arg_2] [function_1]	count=3
arg	condition-type associated with continuation ||| condition-type continuation restarts field-plist	count=1
function	be a procedure ||| with	count=1
arg	and [arg_2] ||| [arg_2] [arg_1]	count=4
module	return the [module] ||| [module]	count=1
function_arg	mode [arg_2] ||| [arg_2] [function_1]	count=6
function	set ||| set?	count=1
arg	this procedure creates ||| wt-tree-type	count=1
arg	thunk ||| thunk after	count=1
arg	substrings ||| string1 string2	count=3
arg	[arg_1] char2 in ||| [arg_1] [arg_2]	count=2
function	input terminal mode ||| port set input terminal	count=1
arg	of graphics-device ||| graphics-device	count=2
function	procedure closes ||| close	count=1
function	must be a ||| define	count=1
arg	the image is copied ||| y image	count=1
arg	[arg] 1d-table ||| 1d-table key [arg]	count=1
arg	point x y ||| x y	count=3
function	changes the input ||| input	count=2
arg	list with predicate ||| predicate	count=1
function	the key ||| ephemeron key	count=1
module	[module] hold both ||| [module]	count=1
function	store-value after first storing ||| store	count=1
arg	image are set in ||| image	count=1
function	tree type ||| wt type	count=3
function	input ||| with input	count=1
function	[function_1] [function_2] ||| [function_1] to [function_2]	count=7
module	its arguments ||| 7.2	count=1
arg	bits of bit-string-1 ||| bit-string-1	count=1
function	procedure of ||| method procedure	count=1
function_arg	for reference-trap objects when [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	wrong ||| type:wrong	count=1
function_arg	returns the [function_1] [arg_2] ||| 11.6 [function_1] datum [arg_2]	count=6
arg	[arg_1] end1 of ||| [arg_1] [arg_2]	count=3
function	symbol part of ||| name >symbol	count=1
arg	environment2 must be syntactic ||| environment2	count=1
arg	symbol is bound ||| environment symbol	count=3
arg	the first [arg] ||| [arg]	count=3
function	[function_1] subtype of ||| [function_1] [function_2]	count=2
function	that ||| condition type:bad range	count=1
arg	[arg] must be ||| environment1 identifier1 environment2 [arg]	count=1
arg	substring against buffer's ||| buffer	count=1
arg	procedure [arg] ||| [arg]	count=1
arg	wt-tree-2 that ||| wt-tree-2	count=1
function	a concrete ||| condition type:derived port error	count=1
function	closes display after ||| graphics close	count=1
arg	symbol to be ||| symbol	count=1
function	the graphics device at ||| draw subimage	count=1
function	the discard-matched ||| discard matched	count=1
function	unparser method of ||| unparser	count=1
arg	[arg_1] start ||| [arg_2] end [arg_1]	count=1
function	xml-name ||| name >symbol	count=1
function	indices are ||| no range	count=1
function	the output ||| with output	count=1
function	the output ||| port output	count=1
function	type ||| attributes type	count=1
function	the write operation on ||| port write char	count=1
arg	weak-pair to object ||| weak-pair object	count=6
function	[function_1] terminal ||| [function_1] [function_2]	count=12
function	is generated ||| condition	count=1
function	savings time ||| savings	count=1
function	procedure [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] traps [arg_2]	count=1
function	changes the state component ||| port state!	count=1
arg	bound to [arg_2] ||| [arg_1] symbol [arg_2]	count=4
function	extracts the contents ||| condition accessor	count=1
function_arg	stores char [arg_2] ||| [function_1] [arg_2]	count=2
function	compares ||| match	count=2
function	will not check their ||| type	count=1
arg	free-names ||| free-names	count=1
function	state component ||| set port state!	count=1
function	and [function_2] ||| [function_1] ephemeral eq [function_2]	count=1
function	the direct [function_2] ||| [function_2] [function_1]	count=2
arg	char1 with char2 in ||| string char1 char2	count=1
module	be a string representation ||| 6.8.1	count=1
function	zero or more instances ||| rexp*	count=1
function	handler as [function] handler ||| [function]	count=1
arg	y [arg_2] ||| draw text [arg_2] x [arg_1]	count=1
function	an unspecified result ||| weak set cdr!	count=1
arg	by record-type to be ||| record-type	count=1
function	is represented as a ||| pathname as file	count=1
arg	procedure component of procedure ||| procedure	count=1
function_arg	argument in [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] superclasses ||| [function_2] [function_1]	count=8
module	indices are ||| 4.3.3	count=1
function	be ||| regexp group	count=1
function_arg	may be [arg_2] ||| [function_1] length [arg_2]	count=1
function	symbol part ||| xml	count=1
arg	[arg_1] [arg_2] at the ||| [arg_1] [arg_2] start2	count=6
arg	[arg_1] [arg_2] using ||| draw text [arg_2] x [arg_1]	count=1
function	device coordinate ||| device coordinate	count=1
function	to file-time [function_2] ||| [function_2] [function_1]	count=1
function	and ||| make key weak eqv	count=1
function	edwin offering to save ||| save	count=1
arg	expression is evaluated in ||| expression	count=2
function	contains the same associations ||| alist >wt	count=1
arg	of methods to generic-procedure ||| generic-procedure methods	count=1
function	no arguments ||| with output to string	count=1
function	output of the subprocess ||| output	count=1
function	[function_1] methods for ||| [function_2] [function_1]	count=1
module	the representation of midnight ||| 15.5.1	count=1
function	the graphics device types ||| types	count=1
function	[function_1] limits of ||| [function_1] [function_2]	count=1
function	the length ||| bit string length	count=2
arg	must be a form ||| form	count=1
arg	to object ||| object	count=3
arg	end [arg_2] ||| 14.9.4 write substring [arg_2] [arg_1]	count=2
function	rehash threshold ||| table rehash threshold	count=1
module	image ||| 17.8	count=1
arg	[arg_1] be unparser-method ||| [arg_2] [arg_1]	count=1
function	be a procedure ||| define	count=1
function_arg	the numerator [arg_2] ||| [arg_2] [function_1]	count=1
function	represented as a file ||| as file	count=1
arg	to transformer ||| transformer	count=1
arg	followed ||| multiple? procedure	count=1
arg	k and returns ||| k	count=1
arg	[arg_1] in 1d-table ||| [arg_2] [arg_1]	count=8
function_arg	[function_1] end1 ||| [arg_2] [function_1]	count=2
arg	a procedure [arg_2] ||| [arg_2] [arg_1]	count=2
function	this low-level procedure ||| command line parser!	count=1
arg	the execution of thunk ||| thunk	count=1
function	to save [function_2] ||| [function_1] [function_2]	count=1
arg	and returns ||| key datum	count=1
function	buffer so that ||| buffer	count=2
function	returns the procedure ||| apply hook procedure	count=1
function	returns the input terminal ||| input terminal	count=1
function	with one argument ||| with current	count=1
arg	bit-string ||| bit-string	count=5
function	that the output is ||| output	count=1
function_arg	[function_1] rb-tree ||| 11.6 [function_1] datum [arg_2]	count=5
function	arity of generic ||| arity	count=1
module	drawing ||| 17.3	count=1
function	indices are ||| range	count=1
function_arg	writes the [function_1] [arg_2] ||| write [function_1] [arg_2]	count=2
function	as [function] ||| [function]	count=1
function	length ||| attributes length	count=2
function	will not ||| no	count=2
function	argument that is of ||| condition type:bad range argument	count=1
function	may be ||| >bit string	count=1
function_arg	[function_1] as alist ||| [arg_2] [function_1]	count=2
arg	[arg] elements of ||| [arg] stream	count=1
module	interned symbol ||| 10.2	count=1
arg	of restart ||| restart	count=1
arg	server-socket ||| server-socket	count=1
function	returns the name ||| procedure name	count=1
arg	destination-x-left [arg_2] ||| [arg_2] [arg_1]	count=1
function	write operation ||| port write char	count=1
function	returns the rehash ||| hash table rehash	count=2
function_arg	time of [arg_2] ||| [function_1] [arg_2]	count=4
arg	procedure accepts four arguments ||| key-hash key=? rehash-after-gc? entry-type	count=1
arg	if symbol is a ||| environment symbol	count=1
function	no arguments ||| with output	count=1
arg	to transformer in ||| transformer	count=1
function	closes [function_2] ||| [function_1] [function_2] open files	count=1
function	of ||| group	count=1
function	bind the ||| bind	count=1
arg	elements ||| initial list	count=3
function	match ||| match parser buffer string	count=1
function	the symbol part of ||| name	count=1
arg	of alist in ||| alist	count=1
arg	alist all ||| alist	count=1
arg	call thunk with no ||| thunk	count=1
function_arg	to [arg_2] ||| [function_1] truncated string [arg_2]	count=1
function	hash-table ||| hash table	count=1
function_arg	[function_1] name ||| [function_1] modifier method class [arg_2]	count=2
function	representation of ||| regexp	count=1
module	that holds its keys ||| 11.4.1	count=1
arg	symbol must ||| environment symbol object	count=1
function	that ||| table	count=1
arg	operands ||| operands	count=2
arg	be object ||| object	count=1
arg	[arg_1] k ||| [arg_2] [arg_1]	count=2
function	otherwise ||| vector?	count=1
arg	and [arg] are defined ||| formals [arg]	count=1
function	newly allocated copy ||| tree copy	count=1
function	called internally [function_2] ||| [function_1] [function_2]	count=2
arg	at destination-x-left [arg_2] ||| [arg_1] [arg_2]	count=1
function	a string ||| xml name string	count=2
function	last pair in list ||| last pair	count=1
function	[function_1] coordinate limits ||| [function_2] [function_1]	count=4
function	input terminal ||| set input terminal	count=1
arg	returns z1 ||| z1	count=1
function	and return a new ||| make	count=1
function	normal value in environment ||| lookup	count=1
function	changes the input blocking ||| set input blocking mode	count=1
function	size ||| size	count=3
function	[function] containing ||| condition report [function]	count=2
arg	predicate ||| predicate list list	count=1
function	deletion ||| delete	count=2
function	nondecreasing ||| <=	count=1
function	in-lined primitives within ||| no type checks	count=1
function	alters [function_2] ||| [function_2] [function_1]	count=2
arg	signalled when port errors ||| port condition	count=1
arg	[arg_1] point x ||| [arg_1] [arg_2]	count=1
function	a pathname otherwise returns ||| pathname?	count=1
function	a procedure of ||| to	count=1
arg	output-port and returns ||| output-port	count=1
arg	existing file while access-time ||| access-time	count=1
function	[function_1] exact integer ||| [function_1] [function_2]	count=1
function	a macro [function_2] ||| [function_1] [function_2]	count=4
function	is [function_2] ||| [function_1] [function_2]	count=6
arg	#t if ||| object	count=1
function_arg	#t [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] [function_2] ||| [function_2] system [function_1]	count=6
function_arg	type represented [arg_2] ||| [arg_2] [function_1]	count=7
function_arg	the class [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	largest [arg_2] ||| 11.6 rb tree [function_1] datum [arg_2]	count=1
arg	[arg_1] of wide-string ||| [arg_2] [arg_1]	count=8
function	the graphics [function_2] ||| 17.7 [function_1] [function_2]	count=1
arg	be converted ||| directory	count=1
function	[function_1] subprocess-abnormal-termination ||| [function_2] [function_1]	count=8
arg	procedure with one argument ||| procedure	count=3
function	of one of the ||| current	count=1
arg	corresponding init ||| init	count=1
arg	predicate is ||| predicate	count=1
function	[function_1] datums in ||| [function_2] [function_1]	count=4
function	integer may be ||| >bit	count=1
function	contains the same ||| alist >wt	count=1
module	`#f' ||| 12.6.1	count=2
function	include the bindings ||| bindings	count=1
function	length of the file ||| file attributes length	count=1
function	arity of generic as ||| generic procedure arity	count=1
function	the wrong number of ||| type:wrong number of	count=1
function	[function] reserved ||| xmlns [function]	count=3
arg	destructively copies the ||| start1 end1 vector2 start2	count=1
module	alt [module] attempts ||| [module]	count=1
function_arg	create a temporary file [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	check for reference-trap objects [function_1] [arg_2] ||| [function_1] traps [arg_2]	count=2
function	input terminal mode of ||| input terminal mode	count=2
module	otherwise ||| 5.3	count=1
function_arg	[function_1] by record-type ||| [function_1] type unparser method! [arg_2]	count=1
function	returns an arity ||| arity	count=1
arg	by source-x-left [arg_2] ||| [arg_1] [arg_2]	count=4
arg	on output-port ||| output-port char	count=1
function_arg	a newly allocated apply [function_1] [arg_2] an ||| [function_1] [arg_2]	count=1
arg	procedure with one ||| filename procedure	count=2
arg	of their argument ||| q	count=2
arg	[arg] a list ||| [arg]	count=1
function	[function_1] is not ||| [function_2] [function_1]	count=1
function	referring to an existing ||| file	count=1
arg	is value ||| value	count=1
arg	[arg_1] object and ||| [arg_2] [arg_1]	count=6
function	a [function] that ||| make trivial [function]	count=1
function	initial ||| slot initial	count=1
function	message [function] ||| [function]	count=3
function	that the output ||| with output	count=1
function	the nesting of ||| depth	count=1
function	arguments' ||| type	count=1
arg	start and [arg_2] ||| string [arg_1] [arg_2]	count=1
module	set consisting ||| 5.6	count=1
arg	[arg_1] [arg_2] ||| closure [arg_1] [arg_2]	count=4
function_arg	and [arg_2] ||| [function_1] generic-procedure [arg_2]	count=1
arg	substring matching regexp ||| regexp string	count=1
function	[function] port ||| with [function] unparser	count=1
function	[function_1] values described ||| [function_2] [function_1]	count=3
arg	while access-time ||| access-time	count=1
arg	the mexp operand ||| mexp	count=1
function	the arity of ||| procedure arity	count=2
arg	chars which ||| chars	count=1
function_arg	using the restart named [function_1] [arg_2] ||| 16.4.2 [function_1] [arg_2]	count=1
function	objects when [function] given ||| [function]	count=1
function	name ||| class name	count=1
function	of string and ||| vector	count=1
function	operating [function_2] ||| [function_2] [function_1]	count=4
function	be ||| output to	count=1
function	and integer may ||| >bit	count=1
arg	[arg_1] [arg_2] substring has been filled ||| [arg_1] [arg_2]	count=10
arg	code in the ||| code	count=1
arg	transformed call [arg] ||| [arg]	count=2
function_arg	[function_1] of one ||| [function_1] procedure [arg_2]	count=1
arg	of vector ||| vector	count=3
function	of the let* ||| let*	count=1
function	sources the characters ||| input string	count=1
function	the characters ||| open wide input string	count=1
function	operation sets ||| set	count=1
function_arg	properties of slot ||| slot properties slot	count=2
function	simple ||| simple	count=1
module	that have ||| 11.7.3	count=3
function	with the wrong ||| type:wrong	count=1
arg	list is terminated by ||| list1 list2	count=1
arg	filename is an existing ||| filename	count=1
function	generic procedure ||| generic	count=1
module	[module] each ||| [module]	count=1
arg	[arg] to ||| string start [arg]	count=1
function	list of the direct ||| direct	count=1
function	are ||| no range	count=1
function	the datum ||| datum	count=1
function	must ||| output	count=1
arg	allocated copy of alist ||| alist	count=1
function_arg	the fresh-line [arg_2] ||| [arg_2] [function_1]	count=1
arg	returns #t if pathname1 ||| pathname1	count=1
function	not a ||| guarantee	count=1
function	output port suitable for ||| output port	count=1
arg	if-found must be ||| if-found	count=2
function	methods ||| methods	count=1
function	blocking [function_2] ||| [function_1] [function_2]	count=2
function_arg	the largest [arg_2] ||| 11.6 rb tree [function_1] [arg_2]	count=2
arg	[arg_1] to output-port ||| 14.9.4 write substring [arg_2] [arg_1]	count=3
function_arg	[function_1] for computed-emp ||| [function_1] [arg_2]	count=3
function	is entered ||| break	count=1
arg	registers must ||| registers	count=1
module	command-line option that is ||| 2.5	count=1
function	type ||| type class	count=1
function_arg	size of hash-table ||| size hash-table	count=2
function	are valid ||| no	count=1
arg	irritants a ||| irritants	count=1
function	read ||| read	count=1
function	not ||| not syntax	count=1
function	the elements ||| stream >list	count=1
arg	of char1 with ||| string char1	count=1
function	[function_1] coordinate limits ||| [function_1] [function_2]	count=4
function	[function_1] threshold of ||| [function_1] [function_2]	count=3
function	with ||| with	count=1
function	the car ||| car	count=1
function	macro [function_2] ||| -1 sc [function_1] [function_2]	count=4
function_arg	characters [arg_2] ||| [arg_2] [function_1]	count=2
function	the datum [function] key ||| rb tree [function]	count=1
function_arg	[function_1] symbol ||| [arg_2] [function_1]	count=4
arg	x y ||| x y string	count=2
arg	#t if [arg] contains ||| [arg]	count=1
arg	by x [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] savings ||| [function_1] [function_2]	count=1
function	i/o port ||| port	count=1
function	daylight savings ||| daylight savings	count=1
function	must be ||| with output to string	count=1
function	pathname ||| *default pathname	count=1
function	[function_1] methods for ||| [function_1] [function_2]	count=1
function	new tree containing all ||| wt tree	count=1
function	ephemerally keyed by ||| ephemeral	count=1
function	hash-table ||| hash table get	count=1
function_arg	the greatest [arg_2] ||| [function_1] [arg_2]	count=1
module	and [module] unspecified ||| [module]	count=1
arg	file named filename ||| filename	count=2
function	the syntax of let*-syntax ||| syntax	count=1
function	returning a newly-allocated string ||| >regexp	count=1
function	the output terminal ||| output terminal	count=2
function	blocking mode of ||| blocking mode	count=3
function	will not check ||| range	count=1
function	any of the rexp ||| alternatives	count=1
function	to the screen position ||| move	count=1
arg	exit from procedure ||| procedure	count=1
arg	symbol must ||| symbol	count=3
function	check their arguments' types ||| no type	count=1
function	size of a window ||| window	count=1
function_arg	[function_1] k of ||| [arg_2] [function_1]	count=1
module	a random-state object that ||| 4.8	count=1
arg	[arg_1] cdr ||| 10.7.1 weak cons [arg_1] [arg_2]	count=3
function	must be a ||| regexp group	count=1
function	the symbol part of ||| xml name >symbol	count=1
function	blocking ||| blocking mode	count=1
function	not [function_2] ||| [function_1] [function_2]	count=2
function	makes a [function] that defines ||| make trivial [function]	count=1
module	of midnight january 1 ||| 15.5.1	count=1
function	a parser buffer ||| buffer	count=2
function	accepts arbitrary objects as ||| weak eq	count=1
function	in the string ||| string	count=1
module	from bit-string [module] ||| [module]	count=1
module	special printed representation for ||| 14.5	count=1
function	the device coordinate limits ||| graphics device coordinate limits	count=1
arg	[arg_1] unparser-method ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] windows type [arg_2]	count=1
arg	string [arg_2] ||| [arg_2] [arg_1]	count=10
function_arg	[function_1] of xml-name ||| [arg_2] [function_1]	count=3
function	fresh-line on ||| fresh line	count=1
function	has a normal value ||| assigned?	count=1
arg	with components key and ||| key	count=1
function	of string ||| string ref	count=1
function	input blocking mode of ||| port set input blocking mode	count=1
function_arg	tree [arg_2] ||| [function_1] split> [arg_2]	count=1
function	[function_1] limited ||| [function_2] [function_1]	count=3
function	the last access ||| attributes access	count=1
function	matches any [function] that ||| rexp not word [function]	count=1
function	hold both keys ||| entry type:key	count=1
function	wt-tree's ordering relation ||| delete min	count=1
arg	[arg] operands ||| [arg]	count=2
arg	index start1 ||| start1	count=1
function_arg	[function_1] of condition-type ||| [function_1] [arg_2]	count=4
function	must ||| with	count=1
arg	the associations in wt-tree ||| wt-tree	count=2
function	procedure of no ||| with output to	count=1
arg	to pathname2 otherwise ||| pathname2	count=1
arg	condition-types ||| condition-types	count=1
function	is [function] table ||| [function]	count=1
function	creates a new directory ||| make directory	count=1
function	erases a single ||| graphics erase	count=1
function	block will not ||| range	count=1
arg	[arg_1] [arg_2] an unspecified value ||| [arg_2] [arg_1]	count=2
arg	cons* [arg] similar to ||| [arg]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] delete min [arg_2]	count=4
arg	char1 [arg_2] ||| [arg_1] [arg_2]	count=3
arg	must be a procedure ||| procedure list	count=1
arg	pattern specified by mexp ||| mexp	count=1
function	terminal ||| terminal	count=4
function	returns the class of ||| object class	count=1
function	of some ||| tree subset?	count=1
function	xml-name ||| xml name >symbol	count=1
function_arg	[function_1] element k ||| [arg_2] [function_1]	count=1
function	for writing ||| record modifier	count=1
function	following character ||| read char	count=1
function	[function_1] output ||| [function_2] [function_1]	count=1
arg	accepts four arguments ||| key-hash key=? rehash-after-gc? entry-type	count=1
arg	key and [arg_2] ||| [arg_2] [arg_1]	count=1
function	a match group ||| group	count=1
arg	procedure ||| filename procedure	count=2
function	method and on ||| method procedure	count=2
function	a ||| regexp	count=2
function	of the superclasses ||| precedence	count=1
function	using the ||| fill	count=1
arg	the name linked ||| attributes	count=1
function	of no arguments ||| output to string	count=1
function	kth tail ||| stream tail	count=1
module	the file [module] ||| [module]	count=1
function	integer and integer may ||| signed integer >bit	count=1
function	[function_1] and on ||| [function_1] [function_2]	count=1
function	a ||| make	count=2
arg	as given to make-generic-procedure ||| generic	count=1
arg	#t if [arg] has ||| [arg]	count=1
arg	[arg_1] cdr ||| [arg_2] [arg_1]	count=3
arg	was passed [arg_2] ||| [arg_2] [arg_1]	count=2
function	predicate procedure for ||| predicate	count=2
arg	datum with x-key ||| x-key y-key datum	count=2
function	[function] capable ||| open [function]	count=1
function	argument ||| argument	count=1
function	extracts the contents ||| accessor	count=1
arg	condition to port ||| port	count=1
function	names ||| names	count=1
function	a macro ||| macro	count=2
function	the same name ||| name	count=1
function	type #t if the ||| attributes type	count=1
arg	output-port ||| output-port string start	count=1
function_arg	as [arg_2] ||| [arg_2] [function_1]	count=1
function	length of string as ||| length	count=1
function_arg	classes [arg_2] ||| [function_1] [arg_2]	count=1
function	of ||| with output	count=1
function_arg	[function_1] universal-time ||| [function_1] [arg_2]	count=4
arg	char-set see ||| char-set	count=1
arg	symbol ||| symbol object	count=1
function	uninterned symbol that is ||| uninterned symbol	count=1
function	and extracts the ||| accessor	count=1
arg	input-port and returns #f ||| input-port	count=1
function	the tree ||| wt tree	count=2
arg	[arg_1] of one ||| [arg_1] [arg_2]	count=3
function	a word ||| word	count=1
arg	was passed an ||| datum operator operand	count=2
function	is represented as a ||| as	count=1
module	starting at ||| 9.3	count=1
function_arg	point [arg_2] ||| [arg_2] [function_1]	count=3
function	the datums in ||| datum	count=1
arg	port an output port ||| port	count=1
function	integer may be any ||| integer >bit	count=1
arg	#t if the slot [arg_1] [arg_2] returns #f ||| 3.4 slot initialized? [arg_2] [arg_1]	count=1
function	returns the rehash ||| rehash	count=2
function	inclusive and ending at ||| substring	count=1
function	last access ||| attributes access	count=1
function	input terminal ||| set input terminal mode	count=1
arg	[arg_1] [arg_2] using ||| [arg_2] [arg_1]	count=5
arg	clist ||| clist	count=1
function	stores ||| string set!	count=2
function_arg	[function_1] exact integer ||| [arg_2] [function_1]	count=2
arg	(cons* [arg] ||| procedure [arg]	count=1
function_arg	[function_1] condition-type ||| [function_1] type error? [arg_2]	count=4
function	the uri ||| uri	count=1
arg	name in ||| name	count=1
function	shell program to ||| shell file	count=1
function	that [function_2] ||| [function_2] [function_1]	count=1
function	gc ||| gc notification!	count=1
arg	[arg] are ||| [arg]	count=3
arg	methods [arg_2] ||| [arg_2] [arg_1]	count=2
function	for output ||| output	count=1
function	a ||| pathname?	count=1
function	a dispatch [function_2] ||| [function_2] [function_1]	count=1
function	otherwise out ||| type:datum out	count=1
arg	on output-port ||| output-port string start end	count=1
module	arguments' ||| 4.3.3	count=1
arg	name linked to if ||| attributes	count=1
arg	buffer to the ||| buffer	count=1
arg	at destination-x-left [arg_2] ||| [arg_2] [arg_1]	count=1
arg	end1 [arg_2] ||| [arg_2] start1 [arg_1]	count=1
function	arbitrary objects as ||| ephemeral eq hash table	count=1
arg	a procedure was passed ||| operator operand	count=1
function	`#f' otherwise ||| valid?	count=1
module	of [module] is ||| [module]	count=1
arg	the location of pointer ||| pointer	count=1
function	methods for ||| methods	count=1
module	representation ||| 14.5	count=3
function	inode [function_2] ||| [function_1] [function_2]	count=4
function	input terminal ||| port set input terminal	count=1
function	this low-level procedure defines ||| set command line parser!	count=1
function	direct superclasses ||| class direct superclasses	count=2
arg	procedure is a ||| object path	count=1
function	inclusive and ending at ||| bit substring	count=1
function	bound to the ||| environment	count=1
arg	[arg_1] document consists ||| [arg_2] [arg_1]	count=2
module	a ||| 5.3	count=1
arg	key and datum in ||| key datum	count=1
function	some ||| subset?	count=1
arg	and y ||| y	count=3
function	this procedure calls procedure [function_1] [function_2] port from unparser-state ||| [function_1] [function_2]	count=1
arg	name linked to ||| attributes	count=1
arg	[arg_1] height in ||| [arg_1] [arg_2]	count=3
function	generalizations of ||| condition type generalizations	count=1
function	[function_1] bound to ||| [function_2] [function_1]	count=1
function	the write operation on ||| port write	count=1
function	concrete type ||| type:derived port error	count=1
arg	[arg] raised to ||| [arg]	count=1
function	[function_1] slot ||| [function_2] [function_1]	count=2
function	not a [function_2] ||| [function_2] [function_1]	count=2
function	uppercase equivalent of char ||| upcase	count=1
function_arg	let* expression to ||| let* variable init	count=1
function	a new tree ||| make wt tree	count=1
function	that accepts arbitrary objects ||| weak eq hash table	count=1
function_arg	mode of port ||| mode port	count=6
function_arg	contains the [arg_2] ||| [function_1] tree [arg_2]	count=1
function_arg	cursor for [arg_2] ||| [function_1] [arg_2]	count=6
function	type #t ||| file attributes type	count=1
function_arg	the [function_1] [arg_2] ||| [function_1] [arg_2]	count=12
function_arg	[function_1] [arg_2] ||| [function_1] forward [arg_2]	count=4
function	list of ||| list	count=3
function	hold both ||| entry type:key datum	count=1
function	type of ||| port type	count=1
function	the standard [function] ||| [function]	count=6
function	keys strongly [function_2] ||| [function_2] [function_1]	count=1
arg	hash-table is a ||| hash-table	count=1
function	a copy ||| vector copy	count=1
arg	xml [arg] ||| [arg]	count=2
function_arg	returns a newly [function_1] [arg_2] an ||| [function_1] [arg_2]	count=4
function	the syntax of ||| syntax	count=1
function	representation ||| group	count=1
arg	[arg_1] on graphics-device ||| draw text [arg_2] [arg_1]	count=4
function	[function_1] limited to ||| [function_2] [function_1]	count=3
function	any pathname ||| pathname	count=1
function_arg	[function_1] source-filename ||| [arg_2] [function_1]	count=2
function	the rehash size ||| table rehash size	count=1
arg	a time-string argument ||| time-string	count=1
module	the [module] of ||| [module]	count=1
arg	host-name using the dns ||| host-name	count=1
function	characters read ||| input port	count=1
arg	rb-tree or [arg] ||| rb-tree [arg]	count=2
arg	the substring specified by [arg_1] [arg_2] and returns an unspecified ||| 14.9.4 write substring [arg_2] [arg_1]	count=1
function	terminal ||| terminal mode	count=2
module	procedure of ||| 14.3	count=1
function	hold both ||| table entry type:key datum weak	count=1
module	a procedure ||| 14.3	count=1
arg	height in ||| height	count=1
arg	[arg_1] of one ||| [arg_2] [arg_1]	count=3
function	returns the access time ||| access time	count=1
function	flush-output operation ||| output port flush output	count=1
arg	to table call thunk ||| thunk	count=1
function	the name of ||| procedure name	count=1
function	invokes the flush-output operation ||| output port flush output	count=1
function	the output terminal mode ||| output terminal	count=1
function	the generalizations of ||| condition type generalizations	count=1
function	is the condition generated ||| condition	count=1
function	particular variant ||| variant	count=1
function	buffer ||| parser buffer ref	count=1
function	must name ||| set file modes!	count=1
function	input terminal mode ||| input terminal	count=1
function	a hash-table [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] operands ||| [function_1] [arg_2]	count=2
arg	[arg_1] modification-time ||| 15.3 set file times! [arg_1] [arg_2]	count=3
function_arg	[function_1] from port ||| [arg_2] [function_1]	count=1
function	flush-output operation on ||| output port flush output	count=1
function	that sources the characters ||| input string	count=1
function	for output ||| output file	count=1
function	list of the superclasses ||| class precedence list	count=1
module	returns the symbol part ||| 14.12.3	count=1
function	closes ||| close	count=3
function	writes a ||| write	count=1
function	[function_1] symbol ||| 10.2 generate [function_1] [function_2]	count=1
arg	xml-unparsed-!entity ||| id notation	count=1
function	returns the operation ||| type operation	count=1
function	of the classes ||| classes	count=1
function_arg	threshold of [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] blocking mode ||| [function_1] [function_2]	count=6
function	and on ||| procedure	count=1
arg	character ||| string	count=1
module	this type indicates ||| 16.7	count=4
module	of a ||| 6.8.1	count=1
function	reading the value of ||| record accessor	count=1
arg	k ||| k initialization	count=1
function	bit ||| bit	count=1
arg	bound to [arg_2] ||| [arg_2] [arg_1]	count=4
function	must ||| to string	count=1
function_arg	[function_1] against buffer's ||| [arg_2] [function_1]	count=1
arg	wt-tree-1 that ||| wt-tree-1	count=1
module	[module] spec ||| [module]	count=1
function	coordinate ||| set coordinate	count=1
function	compares the ||| match	count=1
module	converts an argument ||| 15.5.4	count=1
function_arg	prefix of [arg_2] ||| [function_1] [arg_2]	count=1
function	unparser method of the ||| unparser method!	count=1
arg	creates an association [arg_1] [arg_2] 1d-table ||| [arg_1] [arg_2]	count=1
arg	returns #f ||| list	count=1
arg	[arg_1] [arg_2] and returns an unspecified ||| 14.9.4 write substring [arg_2] string [arg_1]	count=2
function	and integer may ||| integer >bit	count=1
arg	association between [arg] ||| 1d-table [arg]	count=2
arg	the symbol [arg] is ||| [arg]	count=1
function	the wrong number ||| condition type:wrong number	count=2
function	this condition type is ||| condition	count=3
function	with [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] name ||| [arg_2] [function_1]	count=5
function_arg	and on classes ||| procedure generic-procedure classes	count=2
arg	port and ||| port	count=1
function	is a concrete type ||| condition type:derived	count=1
function	suffix of the second ||| suffix?	count=1
arg	char2 in ||| char2	count=1
function	[function_1] a simple ||| [function_2] command line [function_1]	count=1
arg	time-string argument ||| time-string	count=1
function	the input terminal ||| set input terminal mode	count=1
function	[function_1] is not ||| [function_2] word [function_1]	count=1
function	buffered this causes ||| flush output	count=1
function	arguments ||| argument	count=1
function	the graphics [function] ||| [function]	count=1
function_arg	entity declaration ||| !entity name	count=1
function	the extra ||| set entity extra!	count=1
arg	modulus must ||| modulus	count=1
function	tree containing ||| tree	count=4
arg	to a ||| pathname	count=1
function	list of the superclasses ||| precedence list	count=1
function	generic's ||| generic procedure generator	count=1
function	and integer may ||| >bit string	count=1
function	changes the input ||| port set input	count=2
module	a pathname ||| 15.1.3	count=1
function_arg	specializers [arg_2] ||| [function_1] [arg_2]	count=1
rep	usable [function_arg_2] ||| [module_1] [function_arg_2]	count=8
module	the current [module] ||| [module]	count=1
arg	output-port and returns an ||| output-port char	count=1
function	the [function_2] ||| [function_2] [function_1]	count=6
function_arg	output terminal [arg_2] ||| [arg_2] [function_1]	count=3
function	properties ||| slot properties	count=1
arg	on graphics-device at ||| graphics-device	count=1
function	for input ||| input	count=1
function	are available ||| peek	count=1
function	a symbol ||| name	count=2
function	unicode scalar values described ||| scalar values >char set	count=1
arg	in element k of ||| string k char	count=1
function	the flush-output operation on ||| flush output	count=1
arg	symbol is ||| symbol	count=4
module	a [module] on ||| [module]	count=1
function	contains the same ||| >wt	count=1
function	nesting of ||| depth	count=1
function	changes the output ||| port set output	count=1
arg	code [arg_2] ||| [arg_2] [arg_1]	count=7
arg	operation procedure ||| procedure initial	count=1
arg	of the elements of ||| list	count=1
arg	equivalent to pathname2 otherwise ||| pathname2	count=1
function_arg	slot [arg_2] ||| [arg_2] [function_1]	count=2
arg	returns the datum associated ||| default	count=3
arg	start ||| string start	count=1
arg	graphics-device [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] image ||| [arg_2] [function_1]	count=1
function	the graphics [function_2] ||| [function_2] [function_1]	count=1
function	shell program to use ||| shell file	count=1
function	will not check ||| no type	count=1
arg	output-port is ||| output-port	count=1
function	type of ||| record type	count=1
function	the block ||| no range	count=1
function	returns the ||| >symbol	count=1
function	input terminal mode of ||| port input terminal mode	count=1
arg	procedure to ||| procedure	count=1
function	the current ||| set current	count=1
function	parent ||| environment parent	count=1
arg	output-port ||| output-port	count=8
function	of operating ||| operating	count=1
function	their arguments' types ||| type	count=1
function_arg	[function_1] [arg_2] ||| [function_1] right! [arg_2] start2	count=4
function	[function_1] limited to ||| [function_1] [function_2]	count=3
arg	thunk must be ||| thunk	count=2
function	assigning [function_2] ||| [function_2] [function_1]	count=2
function	to del-assv or del-assq! ||| association	count=1
function	their arguments' types ||| no type	count=1
arg	initial-value ||| initial-value procedure	count=1
module	x ||| 17.9.3	count=1
function	be a ||| with	count=1
function	the [function] by ||| write [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] condition [arg_2]	count=2
arg	methods of generic-procedure ||| generic-procedure	count=1
function	names symbols that are ||| environment macro names	count=1
arg	[arg_1] default if ||| datum [arg_1] [arg_2]	count=3
function	will not check ||| no	count=2
function	condition of type ||| type	count=1
function	into an exact integer ||| string >unsigned integer	count=1
function	blocking ||| blocking	count=2
arg	bound in environment ||| environment	count=2
arg	[arg_1] [arg_2] returns an unspecified value ||| [arg_2] [arg_1]	count=2
function	list of the ||| list	count=2
arg	wide-string as an ||| wide-string	count=1
arg	rb-tree or [arg_2] ||| [arg_1] [arg_2]	count=2
function	the [function] ||| untrace [function]	count=1
function_arg	[function_1] of class ||| [function_1] list [arg_2]	count=3
function_arg	access time [arg_2] ||| [arg_2] [function_1]	count=3
function	daylight savings time ||| decoded time daylight savings	count=1
module	and `#f' otherwise ||| 12.6.1	count=1
function	wrong number of ||| condition type:wrong number of	count=1
function	eq? is similar to ||| eq?	count=1
function	generic ||| generic	count=1
function	and integer may ||| integer >bit string	count=1
function	the day ||| time day	count=1
function	an output ||| output	count=1
function	number of days possible ||| month max days	count=1
function_arg	properties of [arg_2] ||| [arg_2] [function_1]	count=1
arg	alist in which all ||| alist	count=1
arg	type of object ||| object	count=1
function	be ||| group	count=1
function_arg	the flush-output [arg_2] ||| [arg_2] [function_1]	count=1
function	descriptor representing the type ||| type descriptor	count=1
function	end of a line ||| line end	count=1
arg	source-x-left source-y-top width and ||| source-x-left source-y-top width	count=1
function_arg	specified by [arg_2] ||| [arg_2] [function_1]	count=1
function	a procedure of no ||| with output	count=1
arg	the elements ||| list	count=4
arg	at destination-x-left and destination-y-top ||| destination-x-left destination-y-top	count=1
function	the internet host name ||| name	count=1
function	convert [function_2] ||| [function_2] [function_1]	count=2
arg	initial-value ||| initial-value	count=1
function_arg	last pair [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	hook [arg_2] ||| [arg_2] [function_1]	count=3
function	the write ||| write char	count=1
function	keyword ||| macro	count=1
arg	followed by one ||| multiple? procedure	count=1
arg	identifier1 and [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	writes [arg_2] ||| [function_1] [arg_2]	count=2
function	changed to uppercase ||| string upcase	count=1
module	a string representation ||| 6.8.1	count=1
function	specifies the [function_1] [function_2] output of the subprocess ||| 15.7.3 [function_2] [function_1]	count=1
function	last pair from ||| last pair	count=1
function	structure ||| structure	count=1
arg	returns #t if filename ||| filename	count=2
function	this low-level ||| line parser!	count=1
function	of [function_2] ||| [function_2] [function_1]	count=1
function	be ||| set hash table	count=1
arg	time-string argument to ||| time-string	count=1
function	the syntax ||| let* syntax	count=1
function	device coordinate ||| graphics device coordinate	count=2
arg	by x ||| x	count=2
function	random-number generator that ||| *random state*	count=1
function	creates and returns a ||| make	count=1
function	returns the access ||| access	count=1
function	stores char in ||| string set!	count=1
module	format to ||| 15.5.4	count=1
function	sets the ||| set	count=1
function	must be a string ||| regexp group	count=1
function	procedure otherwise ||| procedure?	count=1
arg	of the corresponding init ||| init	count=1
function	[function_1] strongly ||| [function_1] [function_2]	count=1
function	of ||| string	count=2
arg	point x ||| x	count=2
arg	the field field-name ||| field-name	count=1
function	exact non-negative integer ||| tree size	count=1
arg	if [arg] true ||| [arg]	count=1
arg	[arg_1] elements start ||| [arg_2] end [arg_1]	count=1
function	sixth ||| sixth	count=1
arg	table ||| table	count=1
function	variables [function] the ||| [function]	count=1
function	[function_1] terminal ||| [function_2] [function_1]	count=12
arg	of a [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	match the [arg_2] ||| [function_1] [arg_2]	count=1
arg	to transformer in environment ||| transformer	count=1
arg	image is copied into ||| image	count=1
function	must be a procedure ||| define	count=1
function	returns the state component ||| state	count=1
function	no characters are available ||| peek	count=1
arg	char to output-port and ||| output-port char	count=1
module	midnight january 1 ||| 15.5.1	count=1
function_arg	[function_1] bound to ||| [function_1] [arg_2]	count=5
function	not a dispatch tag ||| guarantee dispatch tag	count=1
function	polygon using ||| fill polygon	count=2
function	allocated list ||| hash table datum list	count=1
function	class ||| slot class	count=1
function_arg	[function_1] variables ||| [arg_2] [function_1]	count=8
function	allocated list ||| datum list	count=1
function	argument that is ||| range argument	count=1
module	usable ||| 11.4.3	count=1
function	output terminal ||| set output terminal mode	count=1
function	list ||| list	count=7
module	an ||| 14.1	count=1
arg	x and y ||| x y	count=6
function	calls procedure [function] ||| [function] unparser	count=3
function	relation of the tree ||| wt tree	count=2
function	characters of ||| open wide input string	count=1
arg	a particular field ||| field-name	count=1
arg	modulus must be an ||| symbol modulus	count=1
function	may ||| integer >bit	count=1
function	must be a procedure ||| with output	count=1
function	the characters ||| wide input string	count=1
arg	be [arg] calls ||| cell [arg]	count=1
module	whose name is ||| 10.2	count=1
function	no ||| to string	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] arity? object	count=1
function	of no arguments ||| to string	count=1
function	end of ||| string end	count=1
function_arg	limited to [arg_2] ||| [function_1] string [arg_2]	count=1
arg	of char1 [arg_2] ||| [arg_2] [arg_1]	count=3
arg	index start and ||| start	count=1
function	any subsequent words ||| string capitalized?	count=1
function	symbol part ||| xml name	count=1
function	check ||| type	count=1
arg	which [arg] falls ||| [arg]	count=1
function	part ||| xml name >symbol	count=1
arg	of the mexp operand ||| mexp	count=1
function	the device coordinate ||| graphics device coordinate	count=2
function	of ||| output to	count=1
function	the write operation on ||| write	count=1
function	an [function] ||| [function] current input	count=1
function	must ||| string	count=1
function	output of the ||| output	count=1
function	in binary mode ||| binary	count=1
arg	the first expression ||| expression	count=1
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=1
function	the state component ||| set port state!	count=1
function	[function_1] operating ||| [function_2] [function_1]	count=1
arg	the given operands ||| operands	count=1
arg	weak-pair to ||| weak-pair	count=2
function	extra ||| extra!	count=1
function	arguments ||| to	count=1
arg	and returns a newly ||| key datum	count=1
function	number of ||| number of	count=2
function	a dispatch tag ||| dispatch tag	count=2
function	character ||| syntax char	count=2
function	an argument in ||| time	count=1
function	character in buffer or ||| char	count=1
function	buffer for ||| buffer	count=1
function	is ||| error	count=1
function_arg	[function_1] [arg_2] ||| [function_1] color [arg_2] spec	count=7
module	will not check that ||| 4.3.3	count=1
function	output ||| output	count=10
arg	in 1d-table ||| 1d-table	count=1
module	procedure must be ||| 12.4	count=1
function	be a ||| to	count=1
function	[function] containing ||| rb tree min [function]	count=1
function	invokes the write ||| output port write char	count=1
function	is a concrete type ||| type:derived port	count=1
function	fresh-line ||| fresh line	count=1
function	the name of ||| restart name	count=1
function	the file type ||| file attributes type	count=1
function_arg	[function_1] of slot ||| [arg_2] [function_1]	count=7
arg	[arg_1] end exclusive ||| [arg_2] [arg_1]	count=1
arg	zeroes if initialization is ||| initialization	count=1
function	[function_1] an evaluated ||| [function_2] [function_1]	count=3
arg	with char2 in ||| char2	count=1
function	returns the input blocking ||| input blocking	count=1
function	type ||| port type	count=1
function	contain the same bits ||| string=?	count=1
function	the last access ||| file attributes access	count=1
arg	is ||| object path	count=1
function_arg	[function_1] of rb-tree ||| [function_1] [arg_2]	count=2
function	[function_1] blocking mode ||| [function_2] [function_1]	count=6
function	may be ||| signed integer >bit	count=1
function	the properties of ||| properties	count=1
function	any ||| alternatives	count=1
arg	on [arg] ||| [arg]	count=1
module	[module] the results ||| [module]	count=2
arg	less than [arg] ||| wt-tree [arg]	count=3
arg	input-port ||| input-port	count=5
function_arg	[function_1] [arg_2] ||| [function_1] macro environment [arg_2]	count=4
function	be a procedure of ||| output	count=1
function	window on the ||| window	count=1
function_arg	[function_1] object in ||| [arg_2] [function_1]	count=1
arg	[arg_1] class ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] of one ||| [arg_2] [function_1]	count=1
function	particular variant of ||| variant	count=1
function_arg	the operation [arg_2] ||| [function_1] [arg_2]	count=1
arg	element k of wide-string ||| wide-string k	count=1
arg	named filename ||| filename	count=4
arg	[arg] substring has ||| input-port string start [arg]	count=1
function	no arguments ||| with	count=1
function	the length of the ||| string length	count=1
function	a concrete type that ||| condition type:derived port	count=1
function	the current output ||| current output	count=1
function	output terminal ||| port set output terminal	count=1
function_arg	the largest [arg_2] ||| [arg_2] [function_1]	count=3
module	association table ||| 11.3	count=3
function_arg	[function_1] given operands ||| [arg_2] [function_1]	count=2
function	characters ||| input string	count=1
function	and ending at ||| substring	count=1
arg	input-port to ||| input-port	count=2
function	[function_1] size of ||| [function_1] [function_2]	count=3
function	invokes the write operation ||| write char	count=1
function	link ||| link	count=2
arg	given operands ||| operator operands	count=1
module	valid ||| 4.3.3	count=1
arg	every association in wt-tree-1 ||| wt-tree-1	count=1
function	the variable user-initial-environment [function_1] [function_2] ||| 13.2 user [function_1] [function_2]	count=3
function	the write operation ||| output port write char	count=1
function	the access [function_2] ||| [function_1] [function_2]	count=2
function	device [function_2] ||| [function_1] [function_2]	count=3
function	has an [function] value ||| [function]	count=1
function	[function_1] mode of ||| [function_2] [function_1]	count=12
function	for an evaluated ||| for evaluated	count=1
function	converted ||| directory read	count=1
function_arg	the name [arg_2] ||| [arg_2] [function_1]	count=2
arg	in [arg] initialized otherwise ||| [arg]	count=1
function	arc ||| draw arc	count=1
arg	object and returns ||| object	count=2
function	any unsaved buffers ||| editor files	count=1
function	may ||| >bit string	count=1
module	of a [module] on ||| [module]	count=1
function	for reference-trap objects when [function_1] [function_2] ||| [function_2] [function_1]	count=1
arg	defines keyword to ||| keyword	count=1
function	adds ||| add	count=1
function	in ||| time	count=1
arg	code in ||| code	count=3
arg	[arg_1] width and ||| [arg_1] [arg_2]	count=5
function_arg	[function_1] symbol ||| [function_1] macro environment [arg_2]	count=1
function	must be a symbol ||| make primitive procedure	count=1
function_arg	[function_1] thunk ||| [arg_2] [function_1]	count=1
arg	specified x [arg_2] ||| [arg_1] [arg_2] image im-x im-y w	count=1
arg	defines ||| lambda-list	count=1
arg	character k ||| string k	count=1
function_arg	direct superclasses [arg_2] ||| [arg_2] [function_1]	count=1
module	containing all ||| 11.7.3	count=1
function	an abstract type ||| type:warning	count=1
arg	procedure traverses [arg] ||| action [arg]	count=1
arg	thunk ||| thunk	count=11
function	that character ||| read char	count=1
function	reading ||| record accessor	count=1
module	and `#f' ||| 12.6.1	count=1
function	last access ||| file attributes access	count=1
function	and ending ||| substring	count=1
function	the set of all ||| all	count=1
function	the type ||| record type	count=1
arg	[arg_1] default if ||| [arg_1] [arg_2]	count=1
module	must be a ||| 14.3	count=1
module	this type ||| 16.7	count=7
function	that character ||| char	count=1
arg	modulus must be ||| symbol modulus	count=1
function	going to the end ||| string tail	count=1
function	containing the unicode scalar ||| scalar	count=1
function_arg	condition-type is [arg_2] ||| [function_1] type error? [arg_2]	count=1
arg	registers must be ||| string registers	count=1
function	[function_1] ephemeron ||| [function_1] [function_2]	count=1
function	the output terminal mode ||| port set output terminal	count=1
function	which the directory ||| directory pathname	count=1
arg	from start1 [arg_2] ||| [arg_1] [arg_2]	count=2
function	has a ||| has	count=1
function_arg	circle [arg_2] ||| [arg_2] [function_1]	count=4
arg	expression to the right ||| variable init	count=1
function	returns #f ||| char?	count=1
function	key of some ||| tree subset?	count=1
function	closes display after calling ||| x graphics close	count=1
function	set the datum ||| ephemeron datum	count=1
function	string representation of ||| group	count=1
arg	in decoded-time ||| decoded-time	count=1
module	representation of a regular ||| 6.8.1	count=1
function	of the tree ||| tree	count=2
arg	or line style of ||| drawing-mode thunk	count=1
function	[function_1] point ||| [function_2] [function_1]	count=1
function	compares the two ||| match	count=1
function	the symbol part ||| xml name	count=1
function	datum-out-of-range ||| error:datum out of range	count=2
arg	pathname2 otherwise returns #f ||| pathname2	count=1
arg	document from port ||| port	count=1
arg	default if the ||| default	count=3
arg	be a procedure ||| procedure list list	count=1
function	write [function_2] ||| [function_2] [function_1]	count=1
function	be ||| regexp	count=1
function_arg	whose car [arg_2] ||| [arg_2] [function_1]	count=1
function	end [function_2] ||| [function_2] [function_1]	count=2
function	in-lined primitives within the ||| checks	count=2
function_arg	method of [arg_2] ||| [function_1] [arg_2]	count=1
function	hard link from ||| hard link	count=1
module	for trees ||| 11.7.1	count=1
function	datum associated with ||| 2d get	count=2
function	object that has been ||| object	count=1
arg	[arg_1] [arg_2] and returns an unspecified ||| 14.9.4 write substring [arg_2] string start [arg_1]	count=4
function	the screen position ||| move	count=1
function	may be any ||| signed integer >bit string	count=1
function	the class of ||| slot class	count=1
function	shell program to use ||| shell file name	count=1
function	number ||| number	count=2
function	an xml name ||| xml name	count=2
function_arg	may be [arg_2] ||| [arg_2] [function_1]	count=1
module	document ||| 14.12.1	count=1
function_arg	[function_1] of generic-procedure ||| [arg_2] [function_1]	count=2
function	are the elements of ||| >list	count=1
function	writes a [function_2] ||| [function_1] [function_2]	count=1
arg	given command-line arguments ||| arguments option	count=1
arg	port using the reporter ||| port	count=1
function_arg	entry of [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] entity ||| [function_1] [function_2]	count=1
function	procedure [function] ||| [function] unparser	count=3
arg	to be object ||| object	count=1
arg	arguments ||| arguments	count=1
function	[function_1] condition-type subprocess-abnormal-termination ||| [function_2] [function_1]	count=8
arg	[arg_1] pathname2 ||| [arg_2] [arg_1]	count=1
function	check their arguments' types ||| type	count=1
arg	of hash-table as an ||| hash-table	count=1
function	entry of ||| entry	count=1
module	string otherwise returns ||| 9.2	count=1
function	followed by the ||| append	count=1
function	environment ||| environment	count=2
function	method for the ||| method	count=2
arg	from port and ||| port	count=1
arg	transformer in environment and ||| transformer	count=1
function_arg	name of [arg_2] ||| [arg_2] [function_1]	count=3
function	be a simple ||| simple	count=1
arg	source-filename [arg_2] ||| [arg_1] [arg_2]	count=1
function	the input terminal mode ||| port set input terminal	count=1
arg	and identifier1 ||| identifier1	count=1
arg	procedure initialization on ||| initialization	count=1
function	coordinate limits ||| graphics set coordinate limits	count=1
module	document record ||| 14.12.1	count=1
function	[function_1] mode of ||| [function_1] [function_2]	count=12
arg	execution of thunk and ||| thunk	count=1
arg	procedure on ||| procedure	count=1
function	the file type #t ||| type	count=1
function	reference to an external ||| xml external	count=1
function	returns the class ||| class	count=2
function	thunk ||| with output to string	count=1
arg	code in element ||| code	count=1
arg	the [arg] ||| xml [arg]	count=1
function	and ||| make string hash	count=1
function	unicode character specifically ||| unicode char?	count=1
arg	by parsing pexp ||| pexp	count=1
function_arg	uri [arg_2] ||| [function_1] [arg_2]	count=1
arg	name and slot-name ||| name	count=1
function	that character ||| read parser buffer char	count=1
arg	end1 [arg_2] ||| [arg_2] [arg_1]	count=1
arg	on output-port ||| output-port string	count=1
function	window is ||| window	count=1
function	a procedure of ||| with output	count=1
arg	each [arg] operand in ||| [arg]	count=1
function	returns a deletion procedure ||| delete	count=1
function	invokes the write operation ||| write	count=1
function	[function_1] transformer ||| [function_2] [function_1]	count=8
function	hold both ||| table entry type:key	count=1
function	tree that contains ||| >wt tree	count=1
function	is otherwise out of ||| condition type:datum out of	count=1
arg	thunk with ||| thunk	count=2
arg	to be unparser-method and ||| unparser-method	count=1
function	compares the two ||| string match	count=1
function	entity ||| !entity	count=1
arg	particular field of ||| field-name	count=1
function	anywhere that ||| edge	count=1
module	side effects [module] for its ||| [module]	count=1
arg	buffer's ||| buffer string	count=1
function	the input blocking mode ||| input blocking	count=1
function	position of ||| move	count=1
arg	environment free-names must ||| closure environment free-names	count=1
arg	defines keyword ||| keyword	count=2
function	be executed as ||| command	count=1
module	returns the ||| 14.12.3	count=1
function	a [function_2] ||| [function_1] [function_2]	count=2
function	input ||| set input	count=2
function_arg	a method [arg_2] ||| [function_1] [arg_2]	count=1
function	a procedure ||| output	count=1
function	a bit ||| bit	count=1
function	datum associated [function_2] ||| [function_2] [function_1]	count=2
function	of car and cdr ||| car cdr	count=1
function	[function] given ||| [function]	count=1
function	not check ||| no type	count=1
function	not check their arguments' ||| no type	count=1
function	replace all occurrences of ||| replace	count=1
arg	table to table ||| table	count=1
arg	symbol must be ||| symbol object	count=1
arg	to make-generic-procedure ||| generic	count=1
function	the length of the ||| length	count=1
function	list of [function_2] ||| [function_2] [function_1]	count=6
function	type represented ||| set record type	count=2
function	fresh-line ||| port fresh line	count=1
arg	followed by ||| multiple?	count=1
function	must ||| to	count=1
arg	returns #f if ||| list	count=1
function	restarts ||| restarts	count=1
function	[function_1] of arguments ||| [function_1] [function_2]	count=5
function	represented as a ||| pathname as file	count=1
arg	entity to be object ||| entity object	count=1
function	is the kth tail ||| stream tail	count=1
function_arg	an arity [arg_2] ||| [arg_2] [function_1]	count=1
arg	thing into a pathname ||| thing	count=1
function	new copy of pathname ||| new	count=1
function	arguments ||| string	count=1
function	zero ||| zero	count=1
arg	thunk without arguments ||| thunk	count=1
arg	defines [arg_2] ||| [arg_2] [arg_1]	count=2
arg	to generic-procedure ||| generic-procedure	count=1
arg	the elements of vector1 ||| vector1	count=1
function	character ||| string	count=1
arg	[arg] or ||| [arg]	count=2
function_arg	list that describes the [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	the write ||| output port write	count=1
function	a pathname ||| pathname?	count=1
function	fresh-line ||| output port fresh line	count=1
arg	k that is the ||| stream k	count=1
function	for ||| for	count=3
function_arg	each [arg_2] ||| [function_1] [arg_2]	count=2
function	of a ||| group	count=1
function	[function_1] the operating ||| [function_2] system [function_1]	count=2
arg	[arg_1] to object ||| [arg_1] [arg_2]	count=8
arg	from input-port and returns ||| input-port	count=1
arg	[arg_1] [arg_2] ||| [arg_2] y-key [arg_1]	count=2
arg	host-name using ||| host-name	count=1
function_arg	keyword [arg_2] ||| [arg_2] [function_1]	count=6
function	for ||| prompt for	count=3
arg	predicate is true returns ||| predicate	count=1
module	a ||| 14.3	count=1
function	the fresh-line ||| port fresh line	count=1
function	from ||| from	count=1
function	last modification ||| file attributes modification	count=1
arg	procedure with one ||| procedure	count=3
function	the access time ||| access time	count=2
function	the input ||| input	count=4
arg	invokes [arg] after adding ||| condition-types handler [arg]	count=1
function	[function_1] symbol ||| [function_2] [function_1]	count=3
function	characters read from ||| input	count=1
function	writes char to ||| write	count=1
function	the symbol ||| xml name	count=1
function	characters of ||| input string	count=1
arg	[arg_1] identifier2 ||| [arg_2] [arg_1]	count=4
function	current input [function_2] ||| [function_1] [function_2]	count=1
function_arg	the length [arg_2] ||| [arg_2] [function_1]	count=4
function	buffered this causes the ||| flush output	count=1
function	compares a ||| match	count=1
arg	[arg_1] and identifier2 ||| [arg_2] [arg_1]	count=5
arg	by record-type ||| record-type	count=2
function	and returns a new ||| make wt	count=1
function	no arguments ||| to	count=1
function	to universal-time format ||| decoded time >universal time	count=1
arg	[arg_1] in hash-table ||| [arg_2] [arg_1]	count=8
function	the class ||| slot class	count=1
arg	apply-hook ||| apply-hook	count=1
function	state component of ||| state!	count=1
function	format to universal-time format ||| decoded time >universal time	count=1
function	output terminal mode of ||| output terminal	count=1
function	in-lined primitives within the ||| no range checks	count=1
function_arg	may [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] start and ||| [arg_1] [arg_2]	count=5
function_arg	[function_1] start ||| [arg_2] [function_1]	count=3
function	number of [function_2] ||| [function_2] [function_1]	count=1
arg	the binary operation procedure ||| procedure	count=1
function	the input terminal mode ||| set input terminal	count=1
function	a concrete type ||| type:derived	count=1
arg	type ||| type	count=1
function	file type ||| file attributes type	count=1
function_arg	[function_1] wide-string ||| [function_1] [arg_2]	count=10
function_arg	blocking [arg_2] ||| [arg_2] [function_1]	count=3
function	current [function_2] ||| [function_2] [function_1]	count=4
function	a character [function_2] ||| [function_1] [function_2]	count=1
arg	on classes ||| classes	count=1
function	the direct ||| class direct	count=1
rep	returns [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	and extracts ||| condition accessor	count=1
function_arg	class [arg_2] ||| [function_1] [arg_2]	count=2
module	utc in universal-time format ||| 15.5.1	count=1
function	returns an arity object ||| arity	count=1
function	arguments' types ||| type	count=1
arg	length ||| length	count=1
function	a subtype of condition-type ||| type:subprocess	count=2
module	midnight january 1 1970 ||| 15.5.1	count=1
arg	in wt-tree-1 ||| wt-tree-1	count=1
arg	be an exact positive ||| symbol	count=1
module	block will not check ||| 4.3.3	count=2
function_arg	defines [arg_2] ||| [function_1] macro environment [arg_2]	count=4
function	particular variant of the ||| variant	count=1
function	just prior to leaving ||| exit	count=1
function_arg	[function_1] common divisor ||| [arg_2] [function_1]	count=3
function	called with the wrong ||| condition type:wrong	count=1
arg	as alist ||| alist	count=1
function	filled circle ||| circle	count=1
function_arg	temporary-file-pathname to create a [function_1] [arg_2] ||| [function_1] pathname [arg_2]	count=4
function	generic ||| define generic	count=1
function	arguments ||| with	count=1
arg	pattern specified by pexp ||| pexp	count=1
arg	of a typical ||| name	count=1
arg	arguments (cons* [arg] ||| procedure [arg]	count=1
function	[function_1] string as ||| [function_1] [function_2]	count=2
arg	any exact integer ||| integer	count=1
arg	index start inclusive and ||| start	count=1
arg	[arg_1] [arg_2] ||| 13.1 environment bound? [arg_2] [arg_1]	count=6
function	must be ||| string	count=1
function	is a concrete ||| type:derived	count=1
function	represented ||| set record	count=1
function	the input blocking mode ||| set input blocking	count=1
arg	initialization ||| initialization	count=2
function	[function_1] tree ||| [function_1] [function_2]	count=3
arg	buffer for graphics-device ||| graphics-device	count=1
function	with one argument the ||| with current	count=1
arg	destination-x-left and ||| destination-x-left	count=1
arg	particular field of a ||| field-name	count=1
function	the wrong [function_2] ||| [function_1] [function_2]	count=3
function	character ||| buffer char	count=2
arg	of text from input-port ||| input-port	count=1
arg	in rb-tree ||| rb-tree	count=1
arg	instance of condition-type ||| condition-type	count=1
function_arg	writes [function_1] [arg_2] to ||| [function_1] string [arg_2]	count=1
function	[function_1] name ||| [function_1] [function_2]	count=1
function	graphics [function] ||| [function]	count=1
arg	initialization on the ||| initialization	count=1
function	representation of a regular ||| regexp group	count=1
function	[function_1] dispatch tag ||| [function_2] [function_1]	count=1
function	the user for an ||| prompt for	count=1
arg	symbol is [arg_2] ||| [arg_2] [arg_1]	count=15
arg	with key in hash-table ||| hash-table key	count=1
function_arg	[function_1] list ||| [arg_2] [function_1]	count=5
arg	filename the current working ||| filename	count=1
arg	if-not-found must be a ||| if-not-found	count=1
function	a new condition object ||| make condition	count=1
arg	[arg_1] of string1 ||| [arg_2] [arg_1]	count=10
module	are analogous [module] ||| [module]	count=1
function	referring to an ||| file	count=1
function	on the nesting ||| depth	count=1
function	the standard [function] ||| [function] line	count=3
function_arg	input terminal [arg_2] ||| [arg_2] [function_1]	count=3
function	but is otherwise ||| condition type:datum	count=1
arg	from input-port ||| input-port	count=1
function	the datum [function] key in ||| rb tree [function]	count=1
function_arg	argument in universal-time ||| time universal-time	count=1
module	keys or ||| 11.4.1	count=1
function	name ||| generic procedure name	count=1
function_arg	threshold [arg_2] ||| [arg_2] [function_1]	count=1
rep	matches [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	identifier2 ||| identifier2	count=1
function	returns the dispatch ||| record type dispatch	count=1
function	sets ||| parser buffer pointer!	count=1
function	change the current ||| current	count=1
function	the file type ||| type	count=1
function	generator ||| generator	count=1
arg	char1 with ||| string char1	count=1
function	no arguments then ||| with	count=1
function	can hold ||| size	count=1
function_arg	[function_1] specified x ||| [arg_2] [function_1]	count=1
arg	target-filename that ||| target-filename	count=1
arg	operation on output-port ||| output-port char	count=1
function	the operation ||| operation	count=1
arg	transformed call [arg] current syntactic ||| [arg]	count=1
function	be ||| set hash	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=212
function	the length of ||| file attributes length	count=1
function	[function] the current ||| [function]	count=1
function	write ||| write char	count=1
function_arg	[function_1] in month ||| [function_1] [arg_2]	count=4
function	string ||| regexp	count=1
function	pathname otherwise ||| pathname?	count=1
function	arguments ||| with output	count=1
arg	restart ||| restart	count=1
function	[function] containing a ||| condition report [function]	count=2
function	sources the characters of ||| open wide input string	count=1
function	deletes the directory ||| delete directory	count=3
function	associated ||| get alist x	count=1
function	the denominator ||| denominator	count=1
function	input blocking [function_2] ||| [function_1] [function_2]	count=2
function	of a regular expression ||| regexp	count=1
function	list of the classes ||| specializer classes	count=1
function	[function_1] that contains ||| [function_2] [function_1]	count=2
function	a condition of type ||| type	count=1
arg	[arg] raised ||| [arg]	count=1
arg	in element k ||| string k char	count=1
arg	generic's ||| generic	count=1
arg	this procedure is a ||| object path	count=1
function	just prior to ||| exit	count=1
function	“and” ||| fix:and	count=1
function	the binding of one ||| current	count=1
arg	[arg_1] height in ||| [arg_2] [arg_1]	count=3
arg	name to be a ||| name direct-superclasses direct-slot	count=1
function	the user for ||| for	count=3
module	variables ||| 4.3.2	count=1
module	utc ||| 15.5.1	count=1
arg	condition to port using ||| port	count=1
function_arg	[function_1] k ||| [function_1] [arg_2]	count=1
arg	a [arg] and an ||| [arg]	count=1
arg	to be [arg] calls ||| cell [arg]	count=1
function	shell program ||| shell	count=1
function_arg	the classes [arg_2] ||| [function_1] [arg_2]	count=1
function	abs returns the magnitude ||| abs	count=1
arg	element k ||| k unicode-char	count=1
function	size ||| hash table size	count=1
arg	is object ||| object	count=2
arg	to pathname2 ||| pathname2	count=1
arg	list for which predicate ||| predicate list	count=1
function	graphics operation ||| graphics operation	count=1
function_arg	[function_1] target-filename ||| [function_1] file source-filename [arg_2]	count=1
function	access time ||| access time	count=2
function	accepts arbitrary objects as ||| weak eq hash	count=1
function	names [function] character ||| [function]	count=1
module	effects [module] for ||| [module]	count=1
arg	pointer in terms ||| pointer	count=1
function	a new tree containing ||| wt tree	count=1
module	pathname ||| 15.1.3	count=1
function	closes [function_2] ||| [function_1] [function_2]	count=1
function	an ||| xml	count=1
arg	k elements of ||| k	count=1
function_arg	[function_1] procedure ||| [function_1] pathname [arg_2]	count=2
function_arg	integer may [arg_2] ||| [function_1] length [arg_2]	count=1
function	entry type for hash ||| hash	count=4
function_arg	[function_1] consisting ||| [function_1] [arg_2]	count=1
function	an abstract ||| type:illegal datum	count=1
function	procedure for testing ||| predicate	count=1
function	the effector ||| effector	count=1
module	of ||| 14.12.3	count=1
function	to file-time format ||| string >file time	count=2
function	write operation ||| port write	count=1
module	this procedure signals a ||| 16.7	count=1
arg	of methods [arg_2] ||| [arg_2] [arg_1]	count=2
arg	weak pair with components [arg_1] [arg_2] ||| 10.7.1 weak cons [arg_1] [arg_2]	count=2
function	returns a new output ||| output	count=1
function_arg	[function_1] thunk must ||| [arg_2] [function_1]	count=1
arg	wt-tree in ||| wt-tree	count=1
function	state component of ||| state	count=1
function	the rectangle ||| copy area	count=1
function	invokes the write operation ||| output port write char	count=1
arg	specified by source-x-left source-y-top ||| source-x-left source-y-top	count=1
function	[function_1] length ||| [function_1] [function_2]	count=4
arg	be converted into ||| directory	count=1
function	uri record otherwise returns ||| xml	count=1
arg	start1 to end1 ||| start1 end1	count=3
function	with the wrong number ||| type:wrong number	count=1
arg	[arg_1] end1 ||| [arg_2] [arg_1]	count=3
function	sets the internal pointer ||| parser buffer pointer!	count=1
function	hook ||| hook	count=1
arg	[arg_1] [arg_2] tree is empty ||| datum [arg_1] [arg_2]	count=1
arg	for which predicate is ||| predicate	count=1
function_arg	define the [arg_2] ||| [arg_2] [function_1]	count=3
function	abs returns ||| abs	count=1
arg	[arg_1] with x-key ||| [arg_2] [arg_1]	count=1
function	[function_1] input port ||| [function_1] [function_2]	count=1
function_arg	specializers of [arg_2] ||| [arg_2] [function_1]	count=1
arg	of bit-string ||| bit-string	count=2
arg	writes the substring specified [arg_1] [arg_2] ||| 14.9.4 write substring [arg_1] [arg_2]	count=4
function	windows bitmap file ||| bitmap	count=1
arg	[arg] to ||| string [arg]	count=1
function_arg	[function_1] as alist ||| [function_1] tree [arg_2]	count=1
function_arg	[function_1] procedure ||| [function_1] input file [arg_2]	count=1
arg	specified by [arg] ||| output-port [arg]	count=3
function	hold both keys ||| table entry type:key	count=1
function	that is of ||| condition type:bad range	count=1
arg	by [arg] ||| output-port [arg]	count=3
arg	of condition-types ||| condition-types	count=1
function	bind the drawing mode ||| graphics bind drawing mode	count=1
function	nesting ||| list depth	count=1
function	input ||| with input file	count=2
function	the file type #t ||| attributes type	count=1
function	returns ||| name >symbol	count=1
arg	bound ||| environment	count=3
arg	[arg_1] source-y-top ||| [arg_1] [arg_2]	count=4
arg	if filename ||| filename	count=4
module	expression always succeeds returning ||| 14.11.2	count=1
module	keys or data weakly ||| 11.4.1	count=1
arg	a procedure [arg_2] ||| [arg_1] [arg_2]	count=2
function	must be ||| regexp	count=1
function	erases a single point ||| graphics erase point	count=1
function_arg	arity object [arg_2] ||| [function_1] [arg_2]	count=1
module	symbol part of ||| 14.12.3	count=1
function	[function_1] entity ||| [function_2] [function_1]	count=1
arg	of list with predicate ||| predicate list	count=1
arg	k elements of stream ||| k	count=1
function	evaluated ||| evaluated	count=1
function	the output terminal ||| port set output terminal	count=1
function	exact non-negative ||| tree size	count=1
function	the random-number generator that ||| *random state*	count=1
function	ip addresses for the ||| get host by	count=1
function	device coordinate limits for ||| graphics device coordinate limits	count=1
function	writes char to ||| write char	count=1
function	current output [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] condition object ||| [function_1] [function_2]	count=2
arg	[arg] operands in ||| [arg]	count=2
function_arg	[function_1] input-port ||| [function_1] [arg_2]	count=5
function	the rehash threshold ||| table rehash threshold	count=1
function	regular ||| regexp	count=1
function	the [function] output ||| output buffer [function]	count=1
arg	filename ||| filename	count=12
function	accessor method ||| accessor method	count=2
arg	and returns a ||| key	count=1
function	car [function_2] ||| [function_1] [function_2]	count=1
function	the directory component is ||| directory	count=1
function	[function_1] that ||| [function_2] [function_1]	count=4
function_arg	and ending [arg_2] ||| [function_1] right! [arg_2] start2	count=1
arg	consisting of ||| unicode-char	count=1
function	the type of ||| record type	count=1
arg	name to be a ||| name	count=1
function	no ||| to	count=1
function	a procedure ||| with output to string	count=1
function	list of the direct ||| class direct	count=1
function_arg	car [arg_2] ||| [function_1] [arg_2]	count=1
function	[function] the ||| list [function]	count=3
arg	[arg_1] end until ||| [arg_1] [arg_2]	count=5
arg	code ||| start end code	count=1
function	a newly-allocated string ||| >regexp	count=1
function_arg	contents as [arg_2] ||| [function_1] [arg_2]	count=1
function	input ||| input	count=8
function	graphics [function_2] ||| [function_2] [function_1]	count=2
function	length ||| file attributes length	count=2
arg	value ||| value	count=2
function	the symbols ||| names	count=1
arg	of port [arg_2] ||| [arg_2] [arg_1]	count=4
function	symbol part of ||| xml	count=1
module	a character otherwise returns ||| 5.3	count=1
arg	of wide-string as an ||| wide-string	count=1
function_arg	[function_1] of port ||| [arg_2] [function_1]	count=33
function	will not ||| range	count=1
arg	at the point x ||| x	count=1
arg	creates a ||| name	count=1
arg	procedure initialization on the ||| initialization	count=1
function	start ||| string start	count=1
function	block will not check ||| type	count=1
function_arg	the write [arg_2] ||| [function_1] [arg_2]	count=1
function	is a concrete ||| condition type:derived	count=1
function_arg	this low-level [arg_2] ||| [arg_2] [function_1]	count=2
function	the inode number ||| inode number	count=1
arg	with a [arg] and ||| [arg]	count=1
function	instance ||| write instance	count=1
function	[function_1] method for ||| [function_1] [function_2]	count=1
function	procedure ||| procedure	count=8
function_arg	of [arg_2] ||| [arg_2] [function_1]	count=4
arg	elements of list ||| initial list	count=3
arg	k of string ||| string k char	count=1
arg	characters from start1 to ||| start1	count=1
function	associated ||| get alist	count=2
arg	which predicate is ||| predicate list	count=1
function_arg	[function_1] of slot ||| [function_1] [arg_2]	count=7
arg	[arg_1] and cdr ||| 10.7.1 weak cons [arg_1] [arg_2]	count=1
function	hese procedures return #t ||| file exists?	count=1
arg	[arg] one of ||| [arg]	count=3
function	all of the generalizations ||| type generalizations	count=1
function	arbitrary objects ||| weak eq	count=1
function_arg	call [arg_2] ||| [function_1] output file [arg_2]	count=4
arg	the type of object ||| object	count=1
arg	k of string ||| string k	count=3
arg	symbol to ||| symbol	count=1
function_arg	[function_1] start and ||| [arg_2] [function_1]	count=3
function	standard [function] ||| [function]	count=6
arg	of thunk and returns ||| thunk	count=1
function	a list of ||| list	count=2
function	generalizations ||| condition type generalizations	count=1
function_arg	[function_1] port ||| [function_1] >parser buffer [arg_2]	count=1
function_arg	method and [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	must name [arg_2] ||| [function_1] filename [arg_2]	count=2
function	procedure for writing ||| record modifier	count=1
function	may be any ||| >bit string	count=1
function	the write operation on ||| write char	count=1
function	to save [function_2] ||| [function_2] [function_1]	count=1
arg	condition-type ||| condition-type	count=4
arg	value for [arg] ||| [arg]	count=3
function	description ||| condition report	count=1
function_arg	[function_1] symbol to ||| [arg_2] [function_1]	count=1
function	[function_1] number of ||| [function_2] [function_1]	count=6
function	string ||| string	count=7
arg	in element k ||| string k	count=2
arg	of type ||| datum type operands	count=1
function	inode number ||| attributes inode number	count=1
function_arg	keyword [arg_2] ||| [function_1] [arg_2]	count=6
arg	modulus must [arg_2] ||| [arg_2] [arg_1]	count=6
arg	height in device coordinates ||| height	count=1
arg	at end1 exclusive ||| end1	count=1
module	no arguments ||| 14.3	count=1
function	[function] capable of ||| open [function]	count=1
function	integer may ||| >bit	count=1
arg	must be a procedure ||| procedure list list	count=1
function	method [function_2] ||| [function_2] [function_1]	count=2
module	a string representation of ||| 6.8.1	count=1
function_arg	[function_1] start ||| [function_1] string [arg_2]	count=3
arg	a typical xml ||| name	count=1
function	a window ||| window	count=2
arg	#t if [arg] has zero ||| [arg]	count=1
function	closes display after ||| x graphics close	count=1
function_arg	rehash size [arg_2] ||| [function_1] [arg_2]	count=1
function	change the current ||| set current	count=1
function	a string representation ||| group	count=1
function	record [function] descriptor (in ||| record [function]	count=1
function	return the current ||| current	count=1
arg	symbol must be bound ||| environment symbol object	count=1
function	[function_1] an evaluated ||| [function_1] [function_2]	count=3
arg	of port to ||| port	count=4
module	of ||| 14.3	count=1
function	[function_1] and cdr ||| [function_2] [function_1]	count=4
function	is ready on ||| ready?	count=1
module	current drawing ||| 17.3	count=1
arg	inclusive to end exclusive ||| end	count=1
arg	length must ||| length	count=1
function	[function_1] just prior ||| [function_2] [function_1]	count=1
arg	[arg] a ||| [arg]	count=7
function_arg	[function_1] code in ||| [arg_2] [function_1]	count=2
function	a subtype [function_2] ||| [function_1] [function_2]	count=2
arg	xml document consists ||| attributes contents	count=1
function	[function_1] size ||| [function_2] [function_1]	count=3
function	arguments ||| to string	count=1
arg	new weak pair with [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
arg	alist ||| tree-type alist	count=1
function	input terminal mode of ||| port set input terminal mode	count=1
function_arg	[function_1] of object ||| [function_1] [arg_2]	count=3
arg	[arg_1] and end ||| 14.9.4 write substring [arg_1] [arg_2]	count=2
function	superclasses of ||| precedence	count=1
module	symbol ||| 14.12.3	count=1
arg	source-x-left source-y-top [arg_2] ||| [arg_2] [arg_1]	count=3
function	the output terminal mode ||| output terminal mode	count=2
function	[function_1] output port ||| [function_2] [function_1]	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	symbol ||| symbol	count=2
function	types ||| types	count=1
function_arg	in [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	name [arg_2] ||| [arg_2] [function_1]	count=6
function	that fall between ||| parser buffer tail	count=1
function	values described ||| values >char set	count=2
function	type but is otherwise ||| condition	count=1
function	#f ||| pathname?	count=1
arg	be a procedure ||| procedure	count=3
function_arg	applicable methods [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] and y ||| [arg_2] [arg_1]	count=8
function	[function_1] port suitable ||| [function_2] [function_1]	count=3
function	of no arguments ||| string	count=1
function	to [function_2] ||| [function_2] [function_1]	count=1
function	subtype of [function_2] ||| [function_2] [function_1]	count=2
function	the write operation on ||| output port write char	count=1
arg	arity object ||| object	count=1
function	character otherwise ||| char?	count=1
arg	if pathname1 [arg_2] ||| [arg_1] [arg_2]	count=1
function	the fresh-line ||| output port fresh line	count=1
arg	host-name ||| host-name	count=2
function_arg	string consisting of ||| string unicode-char	count=1
module	interned symbol whose ||| 10.2	count=1
function	returns a newly allocated [function_1] [function_2] ||| 10.2 generate [function_1] [function_2]	count=4
function_arg	[function_1] method ||| [arg_2] [function_1]	count=6
arg	car component of weak-pair ||| weak-pair	count=1
function	returns a new ||| make	count=1
module	least key under ||| 11.7.4	count=3
function	[function_1] limits of ||| [function_2] [function_1]	count=1
arg	wt-tree an ||| wt-tree	count=1
arg	thunk without ||| thunk after	count=1
module	universal-time ||| 15.5.1	count=1
function	all ||| all	count=3
function	file type #t ||| file attributes type	count=1
function_arg	name host-name ||| name host-name	count=1
function	arity of ||| arity	count=2
function	[function_1] tags ||| [function_1] [function_2]	count=1
function	[function] reserved for ||| xmlns [function]	count=3
function	procedure of ||| to	count=1
module	the procedure component ||| 12.5	count=1
arg	solid at on the ||| radius	count=1
arg	image is copied ||| image	count=1
arg	calls thunk ||| thunk after	count=1
function	returns the ||| name	count=2
function	whose car ||| member	count=1
arg	be an improper list ||| list	count=1
function	operation ||| port type operation	count=1
function_arg	greatest [arg_2] ||| [arg_2] [function_1]	count=1
arg	the image is copied ||| image	count=1
arg	matching regexp ||| regexp	count=1
function	type but is otherwise ||| condition type:datum	count=1
arg	[arg_1] be mode ||| [arg_2] [arg_1]	count=9
function	may be any ||| integer >bit	count=1
arg	list ||| list	count=8
arg	[arg_1] output-port ||| 14.9.4 write substring [arg_2] [arg_1]	count=2
function	output of ||| output	count=1
arg	image ||| image	count=2
arg	alist in which ||| alist	count=1
function	length of ||| file attributes length	count=1
function	fall between ||| parser buffer tail	count=1
function	procedure of no arguments ||| with output to string	count=1
function	allocated list ||| table datum list	count=1
function	a line ||| line	count=2
function_arg	[function_1] procedure ||| [arg_2] [function_1]	count=6
function	returning [function] ||| [function] no	count=1
function_arg	length [arg_2] ||| [arg_2] [function_1]	count=5
arg	association in wt-tree-2 that ||| wt-tree-2	count=1
module	buffer everything ||| 14.3	count=1
rep	[module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=50
function	the wt-tree's ||| delete min!	count=1
module	iso-8859-1 ||| 5.5	count=1
arg	the operand [arg] ||| [arg]	count=3
function	if the file ||| file	count=1
arg	symbol is a keyword ||| symbol	count=1
function	be a ||| string	count=1
function	anywhere [function_2] ||| [function_2] word [function_1]	count=2
function_arg	the denominator [arg_2] ||| [function_1] [arg_2]	count=1
arg	specified x y ||| x y	count=1
function	of a regular expression ||| group	count=1
arg	followed by ||| multiple? procedure	count=1
function	arity of generic ||| generic procedure arity	count=1
function	[function_1] a subtype ||| [function_2] [function_1]	count=4
arg	modification-time ||| modification-time	count=1
arg	and end until ||| end	count=1
function	must be a ||| with output to	count=1
function	an abstract type ||| type:illegal	count=1
function	returns a new ||| new	count=1
function	reading the value of ||| accessor	count=1
function	applicable methods for the ||| applicable methods	count=1
module	every ||| 8.4	count=1
function	[function_1] using ||| [function_2] [function_1]	count=2
arg	condition types (if generalization ||| generalization	count=1
function	to a normal ||| lookup	count=1
function	the rehash threshold ||| hash table rehash threshold	count=1
function	this low-level ||| set command line parser!	count=1
function	operating system that scheme ||| operating system	count=2
function	for input ||| input file	count=1
arg	[arg_1] unparser-method and ||| [arg_1] [arg_2]	count=1
arg	substring against buffer's ||| buffer string	count=1
function	returns the ||| xml name	count=2
function	the block will ||| type	count=1
function	returns the procedure ||| entity procedure	count=1
function	syntactic ||| syntactic	count=1
arg	document consists of ||| attributes contents	count=1
arg	to be mode ||| mode	count=3
arg	associated with continuation ||| continuation restarts field-plist	count=1
function	a pathname ||| pathname	count=2
module	has the [module] tree's ||| [module]	count=1
arg	the pexp ||| pexp	count=1
function_arg	[function_1] of wide-string ||| [function_1] [arg_2]	count=7
rep	sets a [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	symbol is bound in ||| environment symbol	count=2
function	return the denominator of ||| denominator	count=1
function	hold both keys ||| table entry type:key datum weak	count=1
function	the symbol ||| name	count=1
function	not ||| guarantee	count=1
function	condition-type subprocess-abnormal-termination ||| signalled	count=1
arg	name to be ||| name	count=1
function	no ||| string	count=1
function	unicode scalar [function_2] ||| [function_2] [function_1]	count=2
function	regular expression ||| group	count=1
function	list [function_2] ||| [function_2] [function_1]	count=6
arg	for [arg] ||| [arg]	count=3
function	a hard link from ||| hard link file	count=1
arg	by pointer ||| pointer	count=1
function	newly allocated list ||| datum list	count=1
function	be a ||| output to	count=1
function	the input blocking ||| set input blocking	count=1
function	write ||| output port write char	count=1
arg	#t if filename ||| filename	count=2
arg	in wt-tree-2 otherwise ||| wt-tree-2	count=1
function	newly-allocated string ||| >regexp	count=1
function	to the following character ||| read char	count=1
arg	[arg] passing ||| runtime? [arg]	count=1
function	a keyword ||| macro	count=1
arg	k ||| k	count=12
function	environment has ||| environment has	count=1
module	a regular expression ||| 6.8.1	count=1
function	of some ||| subset?	count=1
function	graphics ||| graphics	count=2
arg	[arg_1] procedure ||| [arg_2] [arg_1]	count=2
arg	rb-tree or [arg] tree ||| rb-tree [arg]	count=1
function	be a ||| output	count=1
arg	[arg_1] transformer ||| [arg_2] [arg_1]	count=1
arg	environment free-names ||| closure environment free-names	count=1
module	are valid ||| 4.3.3	count=1
arg	end1 exclusive ||| end1	count=1
function	invokes the fresh-line on ||| output port fresh line	count=1
arg	indexed by k that ||| stream k	count=1
arg	width and ||| width	count=2
arg	to target-filename ||| target-filename	count=1
function	expression ||| regexp	count=1
function	namespace [function_2] ||| [function_2] [function_1]	count=6
arg	writes the substring [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	the output [function_2] ||| [function_1] to [function_2]	count=1
function	tree ||| rb tree	count=1
function	maximum [function] ||| string maximum [function]	count=2
function_arg	[function_1] their argument ||| [arg_2] [function_1]	count=6
arg	dimensions at destination-x-left and ||| destination-x-left	count=1
function	[function] key ||| rb tree [function]	count=3
arg	defines a ||| lambda-list body	count=1
module	are ||| 4.3.3	count=1
function	match the ||| match parser buffer string	count=1
function_arg	fresh-line on [arg_2] ||| [function_1] [arg_2]	count=1
function	returns the uri ||| name uri	count=1
function_arg	pair [arg_2] ||| [arg_2] [function_1]	count=1
function	of type ||| type	count=1
function	the kth tail ||| tail	count=1
function	for input ||| with input	count=1
function	input ||| port set input	count=2
arg	character [arg_2] ||| [arg_2] [arg_1]	count=2
function	the uppercase equivalent ||| char upcase	count=1
function	not ||| no	count=2
arg	and [arg_2] ||| [arg_1] if-found [arg_2]	count=4
function	no ||| output to	count=1
module	consisting ||| 7.4	count=1
function	limit on the nesting ||| list depth	count=1
arg	the procedure initialization on ||| initialization	count=1
function	input blocking ||| port set input blocking mode	count=1
function	input blocking mode of ||| set input blocking mode	count=1
function	returns the uppercase equivalent ||| upcase	count=1
function	number of days ||| days	count=1
function	output [function_2] ||| [function_2] [function_1]	count=13
function	reading ||| accessor	count=1
arg	if pathname1 is equivalent ||| pathname1	count=1
function	[function_1] [function_2] ||| [function_2] command line [function_1]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] port [arg_2]	count=6
function	has ||| has	count=1
function	indices ||| no range	count=1
function	standard tree ||| string wt	count=1
arg	[arg_1] port errors ||| [arg_2] [arg_1]	count=8
function	and integer may be ||| >bit	count=1
function	tree containing all and ||| tree	count=2
function	days possible ||| max days	count=1
function	is typically a ||| error	count=1
function_arg	environment must be a [function_1] [arg_2] ||| -1 make [function_1] closure [arg_2]	count=1
arg	[arg_1] free-names must ||| [arg_2] [arg_1]	count=1
function	to be [function_2] ||| [function_2] command line [function_1]	count=1
function	the graphics device at ||| draw image	count=1
function	kth tail ||| tail	count=1
arg	car and ||| car	count=1
module	running ||| 15.9	count=2
arg	of stream ||| stream	count=1
function	nesting of lists ||| list depth	count=1
function	the dispatch [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] object is ||| [arg_2] [function_1]	count=6
function	newly allocated uninterned ||| string >uninterned	count=1
function_arg	fresh-line [arg_2] ||| [function_1] [arg_2]	count=1
function	temporary file [function] calls ||| [function] temporary file	count=1
arg	filename the ||| filename	count=1
function	is typically ||| error	count=1
function_arg	datum [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] to pathname2 ||| [arg_2] [arg_1]	count=2
module	arguments and returns #t ||| 9.4	count=1
function_arg	[function_1] signalled when ||| [function_1] port [arg_2]	count=1
function	sets ||| buffer pointer!	count=1
module	character otherwise returns ||| 5.3	count=1
arg	[arg_1] datum in ||| 1d table put! 1d-table [arg_1] [arg_2]	count=1
function_arg	string [arg_2] ||| [arg_2] [function_1]	count=4
arg	a [arg] and ||| [arg]	count=1
function	[function_1] input ||| [function_2] [function_1]	count=1
function	the uppercase equivalent of ||| upcase	count=1
function	same contents as ||| >string	count=1
function	following character ||| char	count=1
function	inode number ||| file attributes inode number	count=1
function	not of ||| not	count=1
function	changes the output terminal ||| set output terminal	count=1
module	a special printed representation ||| 14.5	count=1
module	arguments' types ||| 4.3.3	count=1
function	output ||| port output	count=1
function	buffer that fall between ||| buffer tail	count=1
arg	rb-tree [arg_2] ||| datum [arg_1] [arg_2]	count=2
module	analogous [module] integers ||| [module]	count=1
function	the two bit string ||| bit	count=1
function	arbitrary objects as ||| ephemeral eq hash	count=1
function	the [function] ||| resize [function]	count=1
module	utc in ||| 15.5.1	count=1
arg	input-port to point ||| input-port	count=2
arg	image is ||| x y image	count=1
arg	elements of ||| initial list	count=3
function_arg	superclasses [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] variables ||| [function_1] traps [arg_2]	count=7
function	of [function_2] ||| [function_1] [function_2]	count=1
module	[module] unassigned values ||| [module]	count=2
function	[function_1] evaluated expression ||| [function_1] [function_2]	count=3
arg	defines keyword to be ||| keyword	count=1
function	[function_1] xml ||| [function_2] [function_1]	count=1
function	integer may be ||| signed integer >bit	count=1
arg	the association of datum ||| datum	count=1
arg	in wt-tree-2 that ||| wt-tree-2	count=1
function	input ||| input file	count=2
arg	equal to object ||| object	count=1
function	insensitive to character case ||| case fold	count=1
function	number of arguments ||| number of arguments	count=3
function	is bound to ||| initial environment	count=1
function	of a window on ||| window	count=1
function	the drawing [function_2] ||| [function_1] [function_2]	count=1
arg	types (if generalization ||| name generalization	count=1
function	hash-table ||| table get	count=1
arg	end to [arg_2] ||| 14.9.4 write substring [arg_2] string start [arg_1]	count=1
function_arg	limits of graphics-device ||| limits graphics-device	count=2
arg	[arg_1] [arg_2] position ||| [arg_1] [arg_2] image im-x im-y w	count=3
function	the output terminal mode ||| port set output terminal mode	count=1
arg	returns a character ||| index	count=1
function	a generalization of car ||| general car	count=1
arg	copies [arg] ||| string1 [arg] end1 string2	count=1
function	returns the procedure ||| method procedure	count=1
function	generalization of [function_2] ||| [function_2] [function_1]	count=2
function	as [function] handler ||| [function]	count=1
arg	end1 of [arg_2] ||| [arg_2] [arg_1]	count=1
function	invokes the flush-output ||| port flush output	count=1
function	values the device coordinate ||| graphics device coordinate	count=1
module	representation of ||| 15.5.1	count=1
arg	point x [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg_1] with key ||| [arg_2] [arg_1]	count=18
function	the greatest ||| gcd	count=1
function	inode number of the ||| inode number	count=1
arg	weak pair with components [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
arg	be an exact ||| symbol	count=1
function	access [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] of buffer ||| [function_1] [arg_2]	count=1
arg	parse each [arg] operand in ||| [arg]	count=1
arg	destructively ||| start1 end1 vector2	count=1
function	shell program to use ||| shell	count=1
arg	elements of list ||| list	count=6
module	the symbol part ||| 14.12.3	count=1
function	hese procedures return #t ||| exists?	count=1
arg	char in element k ||| k char	count=1
arg	and [arg] are ||| formals [arg]	count=1
function_arg	rehash threshold [arg_2] ||| [function_1] [arg_2]	count=1
function	same name ||| name	count=1
function_arg	[function_1] defines keyword ||| [arg_2] [function_1]	count=1
function	newly allocated copy ||| copy	count=2
function	deletion ||| delete file	count=1
module	will not check their ||| 4.3.3	count=1
function	converts an argument in ||| time	count=1
function	condition object as an ||| condition	count=1
function	a procedure ||| output to	count=1
arg	car [arg_2] ||| 10.7.1 weak cons [arg_1] [arg_2]	count=1
function	a string ||| string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] days [arg_2]	count=1
arg	from start1 to end1 ||| start1 end1	count=1
arg	returns #t [arg] well-formed ||| [arg]	count=1
arg	char1 with char2 ||| char1 char2	count=1
module	no ||| 14.3	count=1
function	elements ||| list head	count=1
function	to ||| wt tree for	count=1
function_arg	[function_1] record-type ||| [arg_2] [function_1]	count=4
function_arg	temporary-file-pathname to create a [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	#t if [arg] contains no ||| [arg]	count=1
function	directory component is ||| directory	count=1
function	to file-time format ||| >file time	count=1
function_arg	[function_1] named filename ||| [function_1] [arg_2]	count=5
function_arg	from [arg_2] ||| 17.8 image fill [function_1] byte vector image [arg_2]	count=3
arg	[arg] using ||| [arg] x y	count=1
function_arg	returns the datum [function_1] [arg_2] ||| 11.6 [function_1] datum [arg_2]	count=5
function_arg	method of generic-procedure ||| define method generic-procedure	count=2
function	called internally [function_2] ||| [function_2] [function_1]	count=2
arg	a typical ||| name	count=1
function	sets the internal ||| parser buffer pointer!	count=1
function	the length of the ||| attributes length	count=1
function_arg	[function_1] procedure ||| [function_1] output file [arg_2]	count=1
function	record-type descriptor ||| record	count=1
function	match the specified substring ||| match parser buffer string	count=1
arg	modification-time must be ||| modification-time	count=1
function	[function_1] a subtype ||| [function_1] [function_2]	count=4
arg	start1 to ||| start1	count=1
function	generalization of ||| general	count=1
function	set ||| set	count=1
function	procedure for [function] ||| [function]	count=3
function	procedure ||| method procedure	count=1
function	the rehash threshold of ||| rehash threshold	count=1
function	dispatch tag associate with ||| dispatch tag	count=1
function	normal value ||| assigned?	count=1
arg	[arg] or one ||| [arg]	count=2
function	inode number ||| inode number	count=1
function	changes the input terminal ||| port set input terminal	count=1
function	[function] does not ||| [function]	count=3
arg	characters from [arg] into ||| [arg] string start	count=1
arg	document from port and ||| port	count=1
arg	[arg] and returns ||| [arg] string start	count=1
arg	[arg] into ||| bit-string-1 start1 [arg] bit-string-2	count=2
function	wrong-number-of-arguments ||| number of arguments	count=2
function	[function_1] generator ||| [function_1] [function_2]	count=1
function	[function_1] [function_2] ||| [function_2] word [function_1]	count=9
function	changes the state component ||| set port state!	count=1
function	a procedure ||| with output to	count=1
function	is a concrete ||| condition type:derived port error	count=1
arg	specified x [arg_2] ||| [arg_2] [arg_1]	count=1
function	this procedure ||| x	count=1
module	the [module] tree's ||| [module]	count=1
arg	default is ||| default	count=1
arg	is a ||| object	count=2
function	any pathname ||| *default pathname	count=1
function	of operating [function_2] ||| [function_1] [function_2]	count=2
function	the nesting ||| list depth	count=1
function	the direct ||| direct	count=1
function_arg	[function_1] hash-table as ||| [function_1] [arg_2]	count=1
function	returns the rehash threshold ||| rehash threshold	count=1
arg	be a procedure of ||| procedure	count=1
function_arg	arity [arg_2] ||| [arg_2] [function_1]	count=1
function	returns character ||| ref	count=1
function	[function_1] size ||| [function_1] [function_2]	count=3
module	seq [module] ||| [module]	count=1
function	character ||| char?	count=2
function_arg	[function_1] [arg_2] ||| [function_1] modifier method [arg_2]	count=2
arg	value is value ||| value	count=1
function	vector1 ||| move left!	count=1
function	suffix ||| suffix?	count=1
function	the flush-output ||| flush output	count=1
function	and extracts the contents ||| accessor	count=1
function	and ||| make string hash table	count=1
arg	of char1 with char2 ||| string char1 char2	count=1
function	the arity of generic ||| procedure arity	count=1
arg	rb-tree-1 ||| rb-tree-1	count=1
function	create a new ||| make	count=1
function	of no arguments ||| with output to string	count=1
function	unparsed entity ||| unparsed !entity	count=2
arg	by string [arg_1] [arg_2] to ||| string [arg_1] [arg_2]	count=2
function_arg	[function_1] of vector ||| [function_1] [arg_2]	count=8
function	state component of ||| port state	count=1
arg	#t if pathname1 ||| pathname1	count=1
function	to yield a macro ||| macro	count=2
function	input terminal mode ||| input terminal mode	count=2
function_arg	a newly allocated apply [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	that accepts arbitrary objects ||| weak eq	count=1
function_arg	one byte per pixel [function_1] [arg_2] ||| 17.8 image fill [function_1] byte vector image [arg_2]	count=3
function	that contains the same ||| >wt	count=1
function	the graphics device at ||| draw	count=3
function	elements of ||| stream >list	count=1
function_arg	[function_1] of list ||| [arg_2] [function_1]	count=1
function	returns the specializers ||| method specializers	count=1
arg	exact non-negative integer ||| attributes	count=3
function	symbol ||| name >symbol	count=1
function	is the kth tail ||| tail	count=1
arg	equivalent to pathname ||| pathname	count=1
arg	and end until either ||| end	count=1
function	concrete type ||| type:derived	count=1
function_arg	[function_1] substrings ||| [arg_2] [function_1]	count=1
function	uppercase equivalent ||| char upcase	count=1
function	a standard tree ||| wt	count=2
arg	string start [arg_2] ||| [arg_2] [arg_1]	count=5
function_arg	returns a newly allocated [function_1] [arg_2] and an ||| [function_1] [arg_2]	count=4
arg	by record-type to ||| record-type	count=1
arg	elements of list using ||| initial list	count=3
function	returns a [function_2] ||| [function_2] [function_1]	count=1
function	binding ||| lookup macro	count=2
function	[function_1] procedure ||| [function_2] [function_1]	count=1
function	check their arguments' ||| type	count=1
arg	environments and identifier1 and ||| identifier1	count=1
function_arg	graphics device [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] solid ||| [function_1] x y [arg_2]	count=4
function	length of ||| attributes length	count=1
function_arg	[function_1] image are ||| byte [function_1] [arg_2]	count=1
arg	an ||| datum	count=1
function	a concrete ||| condition type:derived	count=1
function	the input terminal mode ||| port input terminal mode	count=1
function_arg	for reference-trap objects when [function_1] [arg_2] ||| [function_1] traps [arg_2]	count=2
function	a unicode character specifically ||| unicode char?	count=1
arg	matching regexp ||| regexp string	count=1
function	evaluated [function_2] ||| [function_1] [function_2]	count=1
arg	this procedure [arg] ||| [arg]	count=1
function	anywhere ||| edge	count=1
module	character strings as keys ||| 11.4.1	count=1
function	output terminal ||| port set output terminal mode	count=1
function	be a string ||| regexp group	count=1
function	number [function_2] ||| [function_2] [function_1]	count=2
function	returns the symbol ||| xml name	count=1
function	xml [function_2] ||| 14.12.4 [function_1] [function_2] declaration misc-1 dtd misc-2	count=1
function	[function_1] of ||| [function_1] [function_2]	count=9
function	unicode scalar values ||| scalar values	count=2
arg	[arg_1] and destination-y-top ||| [arg_1] [arg_2]	count=4
function	when referring [function] given ||| [function] reference	count=1
function	blocking mode ||| blocking mode	count=3
function	obtained by omitting ||| tail	count=1
function	zero or one occurrences ||| ?	count=1
function	and returns a hash-table ||| hash table	count=1
function	make-equal-hash-table ||| equal	count=1
function	returns the name of ||| name	count=3
module	[module] of ||| [module]	count=11
function	sets generic's [function] generator ||| set generic procedure [function]	count=1
function	terminal mode ||| terminal	count=2
function	#t ||| buffer?	count=1
arg	to pathname2 otherwise returns ||| pathname2	count=1
arg	datum ||| datum	count=3
module	cdr ||| 7.1	count=1
function	this procedure closes ||| close	count=1
function	noise ||| noise	count=1
function_arg	represented [arg_2] ||| [arg_2] [function_1]	count=7
function	will not check their ||| no	count=1
arg	declaration ||| name	count=3
function	returns the input terminal ||| port input terminal	count=1
function	be a string representation ||| group	count=1
module	[module] that ||| [module]	count=1
arg	methods ||| methods	count=1
function	class of ||| object class	count=1
arg	symbol must ||| symbol object	count=1
function	an evaluated expression ||| evaluated expression	count=2
function	passing it the ||| synchronous subprocess	count=1
arg	k of wide-string ||| wide-string k	count=1
function	datum [function] key in ||| rb tree [function]	count=1
arg	condition of type ||| datum type operands	count=1
arg	elements of vector1 ||| vector1	count=1
function_arg	to create a temporary [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	to a directory component ||| pathname	count=1
function	otherwise returns ||| pathname?	count=1
function	a concrete type that ||| type:derived port error	count=1
function	the input ||| port set input	count=2
function	for an [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] substrings ||| [function_1] forward [arg_2]	count=1
function	some ||| tree subset?	count=1
rep	as keys [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	this procedure calls procedure [function_1] [function_2] port from unparser-state ||| [function_1] [function_2] unparser state unparser-state procedure	count=1
function	associated with ||| 2d get	count=2
function	classes ||| specializer classes	count=1
function	be a ||| set	count=1
arg	symbol is ||| environment symbol	count=1
function	for an evaluated expression ||| prompt for evaluated expression	count=1
function	inclusive and ending at ||| bit substring move	count=1
function	per-element transform ||| map	count=1
function	which the directory component ||| directory pathname	count=1
arg	character that [arg] a member ||| [arg]	count=1
function	the flush-output operation on ||| port flush output	count=1
arg	xml-name as ||| xml-name	count=2
function	and returns [function] ||| rb tree min [function]	count=1
arg	matching key ||| key	count=1
arg	given by x and ||| x	count=2
function	the current ||| current	count=3
function	their arguments' ||| type	count=1
arg	[arg] inclusive ||| bit-string [arg]	count=1
function	the length ||| file attributes length	count=1
function	this operation sets the ||| set	count=1
function	are changed to uppercase ||| string upcase	count=1
function_arg	[function_1] solid at ||| [arg_2] [function_1]	count=4
function	graphics-device ||| graphics flush	count=1
function	the elements ||| >list	count=2
function	identifies the particular variant ||| variant	count=1
arg	consisting ||| unicode-char	count=1
function	[function_1] threshold ||| [function_1] [function_2]	count=3
function	character [function] ||| [function]	count=1
module	regular expression ||| 6.8.1	count=1
function	normal ||| assigned?	count=1
function	input terminal mode ||| port input terminal mode	count=1
arg	the association of wt-tree ||| wt-tree	count=1
function	buffer that fall between ||| get parser buffer tail	count=1
function_arg	limits of [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] [arg_2] or one of its ||| [arg_2] [arg_1]	count=9
arg	the specified field-name ||| field-name	count=1
function	[function_1] an abstract ||| [function_1] [function_2]	count=3
arg	output-port and ||| output-port	count=1
function	may ||| >bit	count=1
arg	environment1 [arg_2] ||| -1 identifier=? [arg_1] [arg_2]	count=3
function_arg	but excluding [arg_2] ||| [function_1] [arg_2]	count=1
function	document ||| document	count=1
module	not ||| 4.3.3	count=2
arg	in decoded-time format ||| decoded-time	count=1
module	#f ||| 5.3	count=1
function_arg	generalizations [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] procedure with ||| [function_1] output file [arg_2]	count=1
arg	pattern ||| pattern string	count=1
function_arg	writes char [arg_2] ||| [arg_2] [function_1]	count=3
function	association list [function] contains the ||| [function]	count=1
arg	procedure with the corresponding ||| procedure	count=1
function	substring ||| substring	count=2
function_arg	[function_1] of hash-table ||| [function_1] [arg_2]	count=9
module	arguments ||| 14.3	count=1
function	syntax of let*-syntax is ||| let* syntax	count=1
function	be a procedure of ||| string	count=1
arg	of char1 ||| char1	count=1
function_arg	#t if [arg_2] ||| [arg_2] [function_1]	count=7
module	1 1970 utc in ||| 15.5.1	count=1
function	the dispatch ||| type dispatch	count=1
function	length of the printed ||| *unparser string length limit*	count=1
arg	source-x-left ||| source-x-left	count=1
arg	image are ||| image	count=1
module	printed representation for objects ||| 14.5	count=1
arg	[arg_1] bound in ||| [arg_2] [arg_1]	count=9
function	[function_1] condition ||| [function_1] [function_2]	count=2
arg	point x [arg_2] ||| [arg_1] [arg_2]	count=2
function	xml ||| xml	count=1
function_arg	[function_1] [arg_2] ||| [function_1] list [arg_2]	count=8
function	writing characters to the ||| input line	count=1
arg	expression to the ||| variable	count=1
arg	returned otherwise default is ||| default	count=1
function	representation of ||| group	count=1
function_arg	characters of [arg_2] ||| [function_1] [arg_2]	count=1
function	the bitwise-logical “and” of ||| fix:and	count=1
function	output terminal ||| output terminal mode	count=1
arg	association in wt-tree-2 ||| wt-tree-2	count=1
arg	name to be the ||| name	count=1
function	the wt-tree's ordering ||| delete	count=1
function	stores char in element ||| string set!	count=1
function	drawing ||| drawing	count=1
function	position [function_2] ||| [function_1] [function_2]	count=2
module	this matches ||| 14.11.1	count=1
module	breakpoint ||| 5.4	count=4
arg	thunk with no arguments ||| thunk	count=2
function	a normal ||| assigned?	count=1
arg	expressions ||| expression expression	count=1
function_arg	pair from [arg_2] ||| [arg_2] [function_1]	count=1
function	check their arguments' ||| no	count=1
function	permanent condition ||| default condition	count=1
function	the xml-!notation ||| !notation	count=1
function	variables [function] ||| [function]	count=4
function	output terminal mode ||| set output terminal	count=1
arg	image ||| y image	count=1
rep	this is [function_arg_2] ||| [module_1] [function_arg_2]	count=8
function	returns #t ||| port?	count=1
function	returns the symbol ||| xml name >symbol	count=1
function	[function_1] uri ||| [function_2] [function_1]	count=2
arg	width and height to ||| width height	count=1
function	as ||| wide string >string	count=1
function	[function_1] the directory ||| [function_1] [function_2]	count=1
arg	[arg_1] y ||| [arg_1] [arg_2] image im-x im-y w	count=3
function	file for output ||| with output	count=1
function_arg	[function_1] slot ||| [function_1] [arg_2]	count=6
function_arg	stores [arg_2] ||| [function_1] [arg_2]	count=7
function	to the ||| ignore	count=2
function	returns the rehash size ||| hash table rehash size	count=1
function	last ||| last	count=1
function	the class of ||| object class	count=1
function	[function_1] symbol ||| [function_1] [function_2]	count=2
function	returns a new copy ||| new	count=1
arg	element k ||| k	count=3
module	changes the procedure component ||| 12.5	count=1
function_arg	[function_1] end1 exclusive ||| [arg_2] [function_1]	count=2
function	an output port suitable ||| output port	count=1
module	generators and returns ||| 12.6.2	count=2
arg	expanded expression is evaluated ||| expression	count=2
function	newly allocated list of ||| list	count=1
arg	be ||| direct-superclasses direct-slot	count=1
function	[function_1] is limited ||| [function_1] to [function_2]	count=4
function	procedure of no arguments ||| output to	count=1
module	buffer otherwise ||| 14.10	count=1
function	epoch is ||| epoch	count=1
arg	pathname2 otherwise ||| pathname2	count=1
arg	pexp ||| pexp	count=7
function	condition type is a ||| condition	count=3
function	of the type represented ||| record type	count=1
function	last change ||| file attributes change	count=1
function	the characters ||| input string	count=1
function	associated ||| get alist y	count=1
function	#t ||| string?	count=2
function	output terminal mode of ||| output terminal mode	count=2
function	a procedure ||| to	count=1
function	object that ||| object	count=1
function_arg	[function_1] [arg_2] into ||| [function_1] [arg_2]	count=4
function	argument that ||| condition type:bad range argument	count=1
function	represented as ||| pathname as	count=1
arg	is terminated by ||| procedure list1 list2	count=1
module	seq [module] each ||| [module]	count=1
function	procedure and ||| procedure	count=1
function	anywhere [function_2] ||| [function_2] [function_1]	count=2
arg	k of ||| k char	count=1
arg	[arg_1] bound ||| [arg_2] [arg_1]	count=9
function	syntax of ||| let* syntax	count=1
module	1 1970 utc ||| 15.5.1	count=1
function	[function] for ||| init file [function]	count=2
function	the procedure ||| hook procedure	count=1
function	subtype [function_2] ||| [function_2] [function_1]	count=2
function	will ||| type	count=1
function	[function_1] blocking ||| [function_1] [function_2]	count=6
function	of days ||| days	count=1
function	returns the operation ||| port type operation	count=1
function	writes char ||| write	count=1
function	going to the end ||| tail	count=1
function	a regular ||| regexp	count=1
arg	[arg_1] char2 ||| [arg_1] [arg_2]	count=2
arg	[arg] can deliver ||| [arg]	count=1
arg	bound to ||| environment	count=2
function	be a ||| regexp group	count=1
arg	procedure returns #t if ||| object	count=1
function	the current input ||| current input	count=1
module	indices ||| 4.3.3	count=1
function	named file for output ||| with output	count=1
function	procedure ||| hook procedure	count=1
function	returns a new ||| make wt	count=1
function	evaluated expression ||| evaluated expression	count=2
arg	#t [arg] a ||| [arg]	count=2
function	returns a ||| make	count=1
function	changes the unparser method ||| unparser	count=1
arg	x-key ||| x-key	count=2
function	procedure of no arguments ||| string	count=1
function	hold keys strongly ||| table entry type:datum	count=3
function	be a procedure ||| with output	count=1
arg	procedure with the ||| procedure	count=1
arg	for graphics-device ||| graphics-device	count=2
function	not include the bindings ||| environment bindings	count=1
function	returns a new ||| wt	count=1
function_arg	keyword bound to ||| macro environment	count=1
arg	[arg_1] [arg_2] and returns an unspecified ||| 14.9.4 write substring [arg_2] [arg_1]	count=2
arg	call [arg] ||| [arg]	count=2
function	the output ||| port set output	count=1
function	elements are ||| >stream	count=1
function	changed to uppercase ||| upcase	count=1
function	arbitrary objects ||| ephemeral eq hash	count=1
function	values the device ||| graphics device	count=1
module	from input-port updating ||| 14.4	count=1
arg	state ||| state	count=1
rep	keys [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	namespace ||| namespace	count=1
function	is a concrete type ||| condition type:derived port error	count=1
function	methods for the given ||| methods	count=1
module	arguments and ||| 9.4	count=1
function_arg	[function_1] accepting arity ||| [function_1] [arg_2]	count=2
function	a string ||| group	count=1
function_arg	described [arg_2] ||| [arg_2] [function_1]	count=1
function	`#t' if object is [function_1] [function_2] ||| [function_1] [function_2]	count=1
arg	and identifier1 [arg_2] ||| [arg_1] environment2 [arg_2]	count=1
arg	returns #t [arg] well-formed scalar-values ||| [arg]	count=1
arg	to object and returns ||| object	count=2
function	of ||| regexp	count=1
function_arg	create a temporary file [function_1] [arg_2] ||| [function_1] temporary file pathname [arg_2]	count=3
function	[function_1] the type ||| [function_2] [function_1]	count=6
function_arg	[function_1] in specializer ||| [function_1] [arg_2]	count=4
arg	to service the ||| service	count=1
arg	char1 with [arg_2] ||| [arg_2] [arg_1]	count=4
arg	of alist ||| alist	count=1
function	the ||| bit string	count=2
arg	to ||| pathname	count=1
function	not check ||| no range	count=1
function	the direct superclasses of ||| class direct superclasses	count=1
function	changes the output terminal ||| output terminal mode	count=1
function_arg	[function_1] first k ||| [arg_2] [function_1]	count=1
function_arg	using the restart named [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	check their arguments' types ||| no	count=1
function_arg	[function_1] declaration ||| [function_1] [arg_2]	count=2
function	an i/o port ||| port	count=1
function	pathname if any pathname ||| pathname	count=1
function	returns the [function_2] ||| [function_1] [function_2]	count=6
function_arg	unparsed entity [arg_2] ||| [function_1] [arg_2]	count=1
arg	operation on output-port ||| output-port string start	count=1
arg	returned ||| expression	count=1
arg	to be [arg] calls thunk ||| cell [arg]	count=1
function	mode ||| attributes mode	count=1
function	output is [function_2] ||| [function_1] to [function_2]	count=1
function	argument that ||| range argument	count=1
function	coordinate limits ||| set coordinate limits	count=1
module	[module] unassigned ||| [module]	count=2
function	the particular variant of ||| variant	count=1
function	normal ||| lookup	count=1
arg	object in environment ||| object	count=1
function	[function_1] tree containing ||| [function_2] [function_1]	count=3
arg	writes [arg_1] [arg_2] and returns an unspecified ||| 14.9.4 write substring [arg_2] [arg_1]	count=2
arg	rb-tree-2 for [arg_2] ||| [arg_2] [arg_1]	count=2
function	and integer may be ||| integer >bit	count=1
function	returns the prefix ||| prefix	count=1
function_arg	length of [arg_2] ||| [function_1] [arg_2]	count=6
module	must be ||| 12.4	count=1
function	string representation ||| regexp	count=1
arg	with key [arg_2] ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] to output-port ||| [arg_2] [function_1]	count=1
arg	represented by record-type ||| record-type	count=3
function	bind [function_2] ||| [function_2] [function_1]	count=2
function	up to but excluding ||| string head	count=1
function	hold both ||| entry type:key datum weak	count=1
function	returns ||| ref	count=1
arg	[arg_1] height ||| [arg_1] [arg_2]	count=3
function	for writing the value ||| record modifier	count=1
arg	host1 ||| host1	count=1
function	type ||| record type	count=1
arg	in [arg] ||| [arg]	count=3
function	indices are valid ||| no range	count=1
function	returns character ||| string ref	count=1
function	for an ||| for	count=1
arg	a character in ||| index	count=1
function	standard categories ||| condition type:derived file error	count=1
function	input terminal mode of ||| port set input terminal	count=1
function	specializers of ||| method specializers	count=1
function	may be ||| integer >bit string	count=1
arg	of graphics-device to ||| graphics-device	count=1
arg	and cdr ||| cdr	count=1
function	position ||| move	count=2
function	user for ||| prompt for	count=3
function	contains the ||| alist >wt	count=1
function	assigning to the ||| ignore assignment	count=1
function	random-number generator that random ||| *random state*	count=1
function	an exact non-negative ||| size	count=1
function	a newly allocated copy ||| tree copy	count=1
arg	[arg] and ||| filename [arg]	count=3
function	which must satisfy parser-macros? ||| macros!	count=1
arg	[arg_1] document consists ||| [arg_1] [arg_2]	count=2
function	wt-tree's ||| delete min!	count=1
function_arg	[function_1] [arg_2] ||| [function_1] input file [arg_2]	count=4
module	that have keys that ||| 11.7.3	count=1
function	last change ||| attributes change	count=1
arg	procedure of ||| procedure	count=2
arg	slot if it has ||| slot	count=1
arg	new weak pair with [arg_1] [arg_2] ||| 10.7.1 weak cons [arg_1] [arg_2]	count=1
function_arg	the superclasses [arg_2] ||| [function_1] list [arg_2]	count=1
module	be ||| 6.8.1	count=1
function	the generalizations ||| condition type generalizations	count=1
function	drawing mode ||| drawing mode	count=2
function_arg	[function_1] by items ||| [arg_2] [function_1]	count=5
function	procedure of no ||| output to	count=1
arg	[arg] if it ||| [arg]	count=3
arg	irritants a list ||| irritants	count=1
arg	port [arg_2] ||| [arg_1] [arg_2]	count=4
function	fourth ||| fourth	count=1
arg	code [arg_2] ||| [arg_2] end [arg_1]	count=1
function	block ||| no type	count=1
function	and [function_2] ||| [function_1] strong eq [function_2]	count=1
function	bindings of the parent ||| environment bindings	count=1
arg	#t [arg] a red-black ||| [arg]	count=1
arg	returns ||| string	count=1
arg	[arg_1] in buffer ||| [arg_2] [arg_1]	count=6
function	tree is ||| rb tree	count=1
function	procedure of no ||| to	count=1
function	that accepts arbitrary objects ||| ephemeral eq	count=1
function	length of the file ||| attributes length	count=1
arg	calls thunk ||| thunk	count=1
function_arg	[function_1] on classes ||| [function_1] generic-procedure [arg_2]	count=2
function	flush-output operation on ||| port flush output	count=1
arg	[arg] true ||| [arg]	count=1
arg	predicate returns ||| predicate	count=1
function_arg	[function_1] of graphics-device ||| [arg_2] [function_1]	count=2
arg	code in the given ||| end code	count=1
function_arg	a keyword [arg_2] ||| [function_1] [arg_2]	count=6
function	current output port ||| current output port	count=1
function	rehash ||| rehash	count=2
function	start or end of ||| edge	count=1
function_arg	the car [arg_2] ||| [arg_2] [function_1]	count=1
function	in which the directory ||| directory pathname	count=1
function	[function_1] compares ||| [function_1] strong eq [function_2]	count=1
function	procedure closes [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] restart ||| [arg_2] [function_1]	count=3
function	stores char ||| string set!	count=1
arg	invokes [arg] after ||| condition-types handler [arg]	count=1
function	is typically a string ||| format error	count=1
function	when [function] ||| [function]	count=2
function_arg	a newly allocated apply [function_1] [arg_2] and an ||| [function_1] [arg_2]	count=1
arg	thunk must be a ||| thunk	count=2
function	is of ||| condition	count=1
function	of no ||| with output to string	count=1
function	[function_1] transformer as ||| [function_2] [function_1]	count=8
function	predicate procedure for the ||| predicate	count=1
function	must be a ||| output to string	count=1
arg	creates an [arg_1] [arg_2] 1d-table ||| 11.2 1d table put! [arg_1] [arg_2]	count=1
function	dispatch [function_2] ||| [function_1] [function_2]	count=3
function	that indices are valid ||| no	count=1
function	dispatch ||| type dispatch	count=1
module	side effects [module] for ||| [module]	count=1
function	the key of some ||| wt tree subset?	count=1
function	changes the input terminal ||| set input terminal mode	count=1
function	the user for an ||| for	count=1
function	and integer may ||| signed integer >bit	count=1
arg	code in [arg_2] ||| [arg_2] [arg_1]	count=9
function	ancestor of most other ||| environment	count=1
arg	fifth element [arg] ||| [arg]	count=1
arg	char-set-1 ||| char-set-1	count=1
function	symbol that is ||| symbol	count=1
function	an xml ||| xml	count=1
function	a procedure of no ||| with	count=1
function	[function_1] expression ||| [function_2] [function_1]	count=5
function_arg	time of filename ||| time filename	count=2
function	output is [function_2] ||| [function_1] [function_2]	count=1
function_arg	operation [arg_2] ||| [arg_2] [function_1]	count=3
function	write ||| write	count=3
function	returns the symbol part ||| xml name	count=1
arg	for which predicate is ||| predicate list	count=1
function	the largest ||| max	count=1
arg	[arg_1] char-set ||| [arg_1] [arg_2]	count=1
function	[function_1] the operating ||| [function_2] [function_1]	count=2
function	output and standard ||| output	count=1
function	arguments' types ||| no	count=1
function_arg	denominator [arg_2] ||| [arg_2] [function_1]	count=1
function	method for ||| method	count=2
function	symbols ||| names	count=1
function	of a window ||| window	count=2
function	strong ||| strong hash	count=1
module	specifies ||| 15.7.3	count=5
arg	this procedure is a ||| object	count=1
function	the input blocking mode ||| port input blocking mode	count=1
function_arg	class of slot ||| slot class slot	count=2
module	that ||| 4.3.3	count=1
function	size of ||| table size	count=1
function	character ||| string ref	count=2
function_arg	write operation [arg_2] ||| [function_1] [arg_2]	count=1
function	out [function_2] ||| [function_1] [function_2]	count=1
function	the arity of ||| arity	count=2
arg	char2 ||| char2	count=1
arg	registers must be ||| registers n	count=1
arg	code in ||| end code	count=1
module	indices are valid ||| 4.3.3	count=1
function	[function_1] subtype ||| [function_1] [function_2]	count=2
arg	bit-string ||| bit-string k	count=1
function_arg	[function_1] of filename ||| [arg_2] [function_1]	count=4
function	named file for output ||| with output file	count=1
arg	call thunk with ||| thunk	count=1
function	transformer as ||| transformer	count=2
arg	transformer ||| transformer	count=1
function	and any subsequent words ||| capitalized?	count=1
function	[function_1] arguments ||| [function_2] [function_1]	count=6
function	coordinate limits for ||| coordinate limits	count=2
function	as a match group ||| rexp group	count=1
arg	buffer ||| buffer	count=2
function	[function_1] dispatch ||| [function_2] [function_1]	count=1
function	of no arguments ||| with output to	count=1
function_arg	[function_1] k ||| [function_1] string [arg_2]	count=6
arg	[arg_1] on graphics-device ||| [arg_2] [arg_1]	count=5
function	are associated with ||| 2d get alist x	count=1
function	moves the cursor for ||| move cursor	count=1
function	just prior ||| exit	count=1
arg	to output-port and ||| output-port char	count=1
function	prefix ||| prefix	count=1
arg	this procedure is ||| object	count=1
arg	index start ||| start	count=2
function	returns the length ||| string length	count=1
function	[function] generator and ||| set generic procedure [function]	count=1
function_arg	length of wide-string ||| length wide-string	count=2
function	the kth tail ||| stream tail	count=1
function	the input terminal ||| port set input terminal	count=1
arg	object in ||| object	count=2
arg	[arg_1] string1 ||| [arg_2] start1 [arg_1]	count=2
function	writes the [function] by ||| write [function]	count=1
function	[function_1] threshold of ||| [function_2] [function_1]	count=3
function_arg	the specializers [arg_2] ||| [function_1] [arg_2]	count=1
function	accepts arbitrary objects as ||| strong eq	count=1
function	screen position ||| move	count=1
function	a character ||| char	count=1
arg	code in the ||| end code	count=1
arg	[arg_1] be object ||| [arg_2] [arg_1]	count=2
function	the datum [function] ||| rb tree [function]	count=1
function	may be ||| >bit	count=1
function	is the condition ||| condition	count=1
arg	prompts ||| prompt	count=1
module	the ||| 8.1	count=1
function	indices ||| range	count=1
arg	code in the given ||| start end code	count=1
function	procedure of no ||| output to string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] tree [arg_2]	count=5
function	a port ||| port	count=2
function	[function_1] methods ||| [function_1] [function_2]	count=1
arg	[arg_1] [arg_2] ||| [arg_2] start1 end1 vector2 [arg_1]	count=3
module	alt [module] attempts to ||| [module]	count=1
function	closes display ||| x graphics close	count=1
function	a hash-table constructor ||| hash table constructor	count=2
function	to an external ||| xml external	count=1
arg	x and [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg_1] x-key ||| [arg_2] y-key [arg_1]	count=1
arg	datum associated [arg_2] ||| [arg_2] [arg_1]	count=16
function_arg	values described [arg_2] ||| [function_1] [arg_2]	count=1
arg	rb-tree or [arg_2] ||| datum [arg_1] [arg_2]	count=2
function	weak ||| weak	count=1
function_arg	drawing mode [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] of vector1 ||| [arg_2] [arg_1]	count=3
function_arg	the characters [arg_2] ||| [function_1] [arg_2]	count=1
function	of the direct superclasses ||| class direct superclasses	count=1
function_arg	[function_1] output-port and ||| [function_1] [arg_2]	count=1
function_arg	[function_1] to ||| [function_1] [arg_2]	count=1
function	symbol part ||| xml name >symbol	count=1
arg	of list ||| list	count=4
arg	[arg] 1d-table ||| 1d-table [arg]	count=1
arg	char to output-port ||| output-port char	count=1
arg	start and [arg_2] ||| [arg_1] [arg_2]	count=6
function	must be a ||| output to	count=1
function	rehash threshold of ||| hash table rehash threshold	count=1
function	file for output ||| output	count=1
function	and ||| make key weak	count=1
function	the particular variant ||| variant	count=1
arg	input-port and returns it ||| input-port	count=1
function	that are associated with ||| 2d get	count=2
function	of no arguments ||| output to	count=1
function	argument that is of ||| range argument	count=1
function	must ||| with output	count=1
function_arg	sets the [arg_2] ||| [arg_2] [function_1]	count=1
function	copy ||| vector copy	count=1
function	hold both keys and ||| entry type:key datum weak	count=1
function	[function] the standard ||| output [function]	count=1
function_arg	elements [arg_2] ||| [arg_2] [function_1]	count=2
arg	k of string and ||| string k	count=2
function	invokes the write operation ||| port write char	count=1
function	[function_1] time ||| [function_2] [function_1]	count=3
module	pathname otherwise ||| 15.1.3	count=1
arg	makes [arg] ||| [arg]	count=3
arg	[arg] passing it ||| runtime? [arg]	count=1
function	write operation on ||| port write	count=1
function	superclasses ||| precedence	count=1
function	returns the key ||| key	count=1
function	block will not ||| type	count=1
function	name ||| procedure name	count=1
function	procedure for writing the ||| record modifier	count=1
function	limits of ||| limits	count=1
function_arg	directory [arg_2] ||| [function_1] [arg_2]	count=2
arg	keyword to be ||| keyword	count=1
function	current input ||| current input	count=1
function	code representation for ||| >integer	count=1
function	must be ||| output	count=1
function	for a value ||| value	count=1
function	global ||| global	count=1
function	input blocking mode of ||| port set input blocking	count=1
function_arg	concrete type [arg_2] ||| [function_1] [arg_2]	count=2
function	type #t if ||| attributes type	count=1
function	a newly allocated list ||| hash table datum list	count=1
function_arg	[function_1] keyword ||| [arg_2] [function_1]	count=1
module	and [module] ||| [module]	count=1
function	returns ||| xml name >symbol	count=1
function	returns the procedure of ||| method procedure	count=1
function	[function] parser-macro ||| with [function] parser	count=2
function	user for [function_2] ||| [function_1] [function_2]	count=2
function_arg	and ending [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] port ||| [function_2] [function_1]	count=9
arg	of [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] procedure with ||| [arg_2] [function_1]	count=4
function	a condition ||| bind condition	count=1
function	emp ||| emp	count=1
function	the wt-tree's ||| delete	count=1
arg	generic-procedure as specified in ||| generic-procedure	count=2
function	are valid ||| no range	count=1
function	the last modification ||| modification	count=1
function	make-strong-eqv-hash-table ||| eqv	count=1
arg	destination-x-left and [arg_2] ||| [arg_2] [arg_1]	count=1
arg	of graphics-device to the ||| graphics-device	count=1
function	the output [function_2] ||| [function_2] [function_1]	count=8
function	the key ||| emp key	count=1
module	midnight ||| 15.5.1	count=1
function	the bindings of the ||| bindings	count=1
function	not ||| no type	count=1
arg	the virtual ||| x-left y-bottom x-right y-top	count=1
function	characters read ||| input	count=1
function	that names [function] character ||| [function]	count=1
function	current ||| current	count=5
function	writes a description ||| write condition report	count=1
function_arg	a copy [arg_2] ||| [arg_2] [function_1]	count=1
function	must be a procedure ||| output	count=1
arg	starting [arg] ||| bit-string-1 [arg] end1 bit-string-2	count=2
function	open ||| open	count=1
function	extracts ||| accessor	count=1
function	must ||| with output to string	count=1
function	check ||| range	count=1
arg	object otherwise returns #f ||| object	count=1
module	accepts ||| 12.2	count=1
arg	pointer of buffer ||| buffer	count=1
function	[function_1] length of ||| [function_2] [function_1]	count=4
function	field names for a ||| field names	count=1
arg	host-name using the ||| host-name	count=1
function	expression ||| expression	count=2
function	like substring->parser-buffer but buffers ||| >parser buffer	count=1
function	to the following character ||| char	count=1
module	its keys ||| 11.4.1	count=1
module	bit-string [module] ||| [module]	count=1
function	a condition ||| condition	count=1
function	an [function] value and ||| [function]	count=1
function	all of the generalizations ||| generalizations	count=1
function	the [function] ||| output buffer [function]	count=2
function	and invokes a restart ||| restart	count=1
function_arg	[function_1] [arg_2] into ||| [function_1] right! bit-string-1 start1 [arg_2]	count=4
function	the rehash ||| hash table rehash	count=2
function	file-time [function_2] ||| [function_1] [function_2]	count=1
function	nesting of lists and ||| list depth	count=1
function	symbol part of ||| name	count=1
function	a character [function_2] ||| [function_2] [function_1]	count=1
function_arg	coordinate limits [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	bitwise-logical “and” [arg_2] ||| [arg_2] [function_1]	count=1
module	whose name is string ||| 10.2	count=1
function	output terminal [function_2] ||| [function_1] [function_2]	count=2
function	[function] by ||| write [function]	count=1
function	[function_1] values described ||| [function_1] [function_2]	count=3
function	a condition [function] ||| make condition [function]	count=3
arg	slot [arg] in ||| class [arg]	count=1
function	must be ||| with output to	count=1
function	coordinate limits of ||| set coordinate limits	count=1
function_arg	denominator of [arg_2] ||| [arg_2] [function_1]	count=1
function	new [function_2] ||| [function_1] [function_2]	count=4
arg	internal pointer past ||| buffer	count=1
arg	key in [arg_1] [arg_2] tree is empty ||| [arg_1] [arg_2]	count=2
function	input terminal mode of ||| set input terminal	count=1
function	the variables [function] the current ||| [function]	count=1
module	a character otherwise ||| 5.3	count=1
arg	transformer in environment ||| transformer	count=1
function	[function_1] input port ||| [function_2] [function_1]	count=1
arg	[arg_1] destination-y-top ||| [arg_2] [arg_1]	count=3
function	effector ||| effector	count=1
function	the input blocking ||| port set input blocking mode	count=1
arg	in month ||| month	count=1
module	for hash [module] ||| [module]	count=1
function	the length of ||| attributes length	count=1
function	bound to the default ||| environment	count=1
module	as keys ||| 11.4.1	count=1
function	names symbols that are ||| macro names	count=1
function	for hash ||| hash	count=4
function	check that ||| no	count=1
module	otherwise returns #f ||| 15.1.3	count=1
arg	is an arity object ||| object	count=1
function	match ||| re match	count=1
function	superclasses ||| superclasses	count=1
function	not check that ||| no	count=1
function_arg	[function_1] [arg_2] ||| [function_1] source-filename [arg_2]	count=1
arg	[arg_1] pathname2 ||| [arg_1] [arg_2]	count=1
function	accepts arbitrary objects ||| ephemeral eq	count=1
function	the output terminal ||| output terminal mode	count=1
function	hold both keys ||| entry type:key datum	count=1
function	match ||| match parser buffer	count=1
function	a procedure ||| to string	count=1
function	shell program to ||| shell file name	count=1
function	character of ||| char	count=1
function	a program's execution ||| trace	count=1
function	start of a ||| start	count=1
function_arg	[function_1] end ||| [arg_2] [function_1]	count=3
function	thunk ||| output to string	count=1
function	allocated apply [function] with ||| make apply [function]	count=1
module	using [module] ||| [module]	count=2
arg	is ||| expression	count=2
function	signals ||| signals	count=1
arg	[arg] socket ||| [arg]	count=3
function	not ||| not	count=2
module	is running ||| 15.9	count=2
function	end ||| string end	count=1
arg	[arg_1] and identifier2 ||| [arg_1] environment2 [arg_2]	count=4
function	is limited to ||| to truncated	count=2
arg	alist ||| alist	count=3
arg	for the given operands ||| operator operands	count=1
function	be a procedure ||| with output to	count=1
function	procedure of ||| output to	count=1
function	to file-time ||| string >file	count=1
module	january 1 ||| 15.5.1	count=1
function_arg	[function_1] xml-name as ||| [function_1] [arg_2]	count=3
arg	in the field field-name ||| field-name	count=1
function	the last pair ||| last pair	count=1
function	[function_1] bound to ||| 13.2 user [function_1] [function_2]	count=1
function_arg	that describes the unicode [function_1] [arg_2] ||| 5.6 [function_1] [arg_2]	count=1
function	bind the [function_2] ||| [function_2] [function_1]	count=2
function	the name ||| class name	count=1
function_arg	it need not check [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	generic procedure ||| define generic	count=1
arg	to output-port and returns ||| output-port char	count=1
function_arg	circle [arg_2] ||| [function_1] x y [arg_2]	count=4
arg	procedure with one argument ||| filename procedure	count=2
function	subtype of condition-type subprocess-abnormal-termination ||| type:subprocess stopped	count=1
function_arg	device [arg_2] ||| [function_1] [arg_2]	count=1
function	direct superclasses of ||| class direct superclasses	count=2
arg	generic-procedure ||| generic-procedure	count=3
function	closes ||| x graphics close	count=1
function	the input blocking ||| input blocking	count=2
function	wrong number of arguments ||| type:wrong number of arguments	count=1
function_arg	[function_1] environment ||| -1 make [function_1] closure [arg_2]	count=1
arg	registers must be a ||| string registers	count=1
function	be a ||| define	count=1
function	directory component is ||| directory pathname	count=1
function	these set the datum ||| datum	count=1
arg	a time-string ||| time-string	count=1
function_arg	[function_1] generic-procedure ||| [arg_2] [function_1]	count=2
function_arg	[function_1] of bit-string ||| [function_1] [arg_2]	count=3
function_arg	writes char [arg_2] ||| [function_1] [arg_2]	count=3
module	arguments and returns ||| 9.4	count=1
function	represented as a ||| pathname as	count=1
arg	the elements ||| initial list	count=3
function	the state component ||| port state!	count=1
arg	start and ||| start	count=3
module	least ||| 11.7.4	count=3
arg	to end1 of ||| end1	count=1
arg	return type ||| dib	count=1
function	possible ||| max	count=1
function	uri of ||| uri	count=1
arg	k of ||| k	count=4
function_arg	defines [arg_2] ||| [arg_2] [function_1]	count=4
arg	initialization on ||| initialization	count=1
function	procedure of ||| string	count=1
function	input blocking mode of ||| port input blocking mode	count=1
function	[function] of the ||| [function] of	count=2
module	[module] hold ||| [module]	count=1
arg	initialization is ||| initialization	count=1
function	no ||| with	count=1
function	length [function_2] ||| [function_2] [function_1]	count=2
arg	element k of ||| k unicode-char	count=1
arg	element k of wide-string ||| wide-string k unicode-char	count=1
module	expression performs ||| 14.11.2	count=1
arg	true if [arg] true on ||| [arg]	count=1
function_arg	the uri [arg_2] ||| [function_1] [arg_2]	count=1
function	time of ||| time	count=1
function_arg	properties [arg_2] ||| [arg_2] [function_1]	count=1
function	procedure ||| with output	count=1
function	will not check their ||| no type	count=1
function_arg	[function_1] class ||| [function_1] [arg_2]	count=11
function	option [function] ||| [function]	count=1
function	is a copy ||| vector copy	count=1
arg	if object is a ||| object	count=4
function	pathname if any pathname ||| *default pathname	count=1
function	a procedure that ||| procedure of	count=1
arg	if object is ||| object	count=14
function	that's the ancestor of ||| environment	count=1
function	closes display after ||| close	count=1
function	returns the name of ||| generic procedure name	count=1
module	this ||| 16.7	count=12
function	that are associated with ||| 2d get alist	count=2
arg	from start1 to ||| start1	count=1
function	the block will not ||| no	count=2
function_arg	the superclasses [arg_2] ||| [arg_2] [function_1]	count=1
arg	x y [arg_2] ||| draw text [arg_2] [arg_1]	count=1
function_arg	read [arg_2] ||| [arg_2] [function_1]	count=2
function	returns a newly allocated [function_1] [function_2] ||| [function_1] [function_2]	count=4
function	and ||| make procedure	count=1
function	transformer as described below ||| transformer	count=2
function	greatest ||| gcd	count=1
function	characters ||| chars	count=1
arg	init the ||| init	count=1
arg	height to ||| height	count=1
function	parser ||| parser	count=1
module	newly allocated weight-balanced ||| 11.7.1	count=1
function	types ||| type	count=1
function	not a procedure ||| procedure	count=1
function	the field names for ||| field names	count=1
function	this procedure calls procedure [function_1] [function_2] ||| [function_1] [function_2] unparser state unparser-state procedure	count=3
function	called internally ||| standard	count=2
function	[function_1] car ||| [function_1] [function_2]	count=2
arg	character ||| index	count=1
function	input blocking mode of ||| input blocking mode	count=2
arg	specified substring against buffer's ||| buffer	count=1
function	concrete type that is ||| condition type:derived port	count=1
function_arg	access time [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] terminal mode ||| [function_2] [function_1]	count=12
function_arg	hook [arg_2] ||| make apply [function_1] [arg_2]	count=3
function	operating [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] wide-string as ||| [function_1] [arg_2]	count=3
arg	beginning with index start ||| start	count=1
arg	name ||| name	count=10
function	concrete type ||| condition type:derived	count=1
function	block will ||| type	count=1
function	output terminal mode of ||| port set output terminal	count=1
function	must name ||| modes!	count=1
arg	expression is evaluated ||| expression	count=2
function	the wrong ||| type:wrong	count=1
function	a concrete type that ||| type:derived	count=1
function	invokes the write ||| write char	count=1
function_arg	[function_1] filename ||| [function_1] [arg_2]	count=4
function	of ||| regexp group	count=1
function	fall between ||| get parser buffer tail	count=1
module	string representation of a ||| 6.8.1	count=1
module	the symbol ||| 14.12.3	count=1
arg	the elements of list ||| list	count=4
arg	point x y ||| x y string	count=2
arg	key and ||| key	count=1
function	mode bits ||| attributes mode	count=1
function	obtained by omitting ||| list tail	count=1
arg	port to be object ||| port object	count=1
function	deletes [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] of graphics-device ||| [arg_2] [arg_1]	count=2
function	car ||| car	count=2
function	is represented as ||| pathname as	count=1
function	wt-tree's ordering relation ||| delete	count=1
arg	when port ||| port condition	count=1
function	is buffered this causes ||| flush	count=1
function	string representation ||| group	count=1
function	return the global ||| global	count=1
function	for a ||| value	count=1
arg	string [arg] ||| [arg]	count=3
arg	the elements of ||| list	count=4
arg	wide-string as an exact ||| wide-string	count=1
function	string as its ||| string append	count=1
module	string representation of ||| 6.8.1	count=1
function_arg	terminal [arg_2] ||| [function_1] [arg_2]	count=6
function	eq? is similar ||| eq?	count=1
arg	pathname1 [arg_2] ||| [arg_1] [arg_2]	count=1
function	directory ||| directory	count=4
function_arg	[function_1] char1 with ||| [arg_2] [function_1]	count=1
module	[module] x ||| [module]	count=1
function_arg	current computation using the [function_1] [arg_2] ||| 16.4.2 [function_1] [arg_2]	count=1
arg	character that [arg] a ||| [arg]	count=1
module	parses ||| 14.11.2	count=1
function	integer may be any ||| signed integer >bit	count=1
arg	specified by source-x-left ||| source-x-left	count=1
function	be the color ||| color	count=1
function	character ||| read parser buffer char	count=1
module	universal-time format ||| 15.5.1	count=1
function	contains the ||| >wt	count=1
function	for [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] buffer ||| [function_2] [function_1]	count=1
function	rehash [function_2] ||| [function_2] [function_1]	count=4
function	extra ||| entity extra!	count=1
function_arg	[function_1] its arguments ||| [arg_2] [function_1]	count=3
function	procedure of no ||| to string	count=1
module	component ||| 12.5	count=4
function_arg	[function_1] is object ||| [function_1] [arg_2]	count=1
function	has a normal ||| assigned?	count=1
function	a string ||| name string	count=1
module	converts ||| 15.5.4	count=2
function	new copy of ||| pathname new	count=1
function	symbol that is guaranteed ||| symbol	count=1
function_arg	“and” [arg_2] ||| [function_1] [arg_2]	count=1
function	all of the generalizations ||| condition type generalizations	count=1
function	returns the arity ||| generic procedure arity	count=2
arg	environment free-names ||| environment free-names	count=1
function	character ||| parser buffer char	count=2
function	regular ||| regexp group	count=1
module	first pair ||| 7.6	count=1
arg	of port ||| port	count=8
function	standard [function] ||| [function] line	count=3
function	subtype [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] stream ||| [function_1] [arg_2]	count=3
function	and ||| make key	count=3
function	call ||| call	count=2
function	generic's [function] ||| set generic procedure [function]	count=2
arg	changes the virtual ||| x-left y-bottom x-right y-top	count=1
function	link ||| link file	count=1
module	the file named ||| 15.3	count=1
function	reading the value ||| record accessor	count=1
function	wrong number [function_2] ||| [function_1] [function_2]	count=2
function	input blocking mode ||| input blocking mode	count=2
arg	can be converted ||| directory	count=1
function	the rehash [function_2] ||| [function_1] [function_2]	count=4
function	exact integer ||| integer	count=1
arg	of alist in which ||| alist	count=1
function	that is of the ||| condition type:bad range	count=1
arg	and end [arg_2] ||| 14.9.4 write substring [arg_2] [arg_1]	count=2
module	the [module] language ||| [module]	count=1
function	direct ||| class direct	count=1
function	whose ||| xcons	count=1
function	returns the procedure ||| hook procedure	count=1
function_arg	returns [function_1] [arg_2] ||| [function_1] [arg_2]	count=10
function	applicable methods for ||| applicable methods	count=2
arg	to output-port and returns ||| output-port	count=1
function_arg	methods [arg_2] ||| [function_1] [arg_2]	count=1
arg	otherwise default is ||| default	count=1
function	changes the input blocking ||| set input blocking	count=1
function	hash number for ||| hash	count=2
function	[function_1] that ||| [function_1] [function_2] arity? object	count=2
function_arg	slot [arg_2] ||| [function_1] modifier method [arg_2]	count=1
function_arg	[function_1] bound ||| [function_1] [arg_2]	count=4
function	xml [function_2] ||| [function_2] [function_1]	count=1
function	returns the uri ||| xml name uri	count=2
function	syntax of ||| syntax	count=1
function	xml-!notation ||| !notation	count=1
function	the direct superclasses ||| direct superclasses	count=1
arg	registers must be a ||| string registers n	count=1
arg	substring matching regexp ||| regexp	count=1
arg	converted into ||| directory	count=1
arg	of type ||| datum type	count=1
function	procedure is ||| condition	count=1
function	sets the internal pointer ||| pointer!	count=1
arg	symbol must be ||| environment symbol object	count=1
function	integer may ||| >bit string	count=1
arg	pexp into ||| pexp	count=1
function	inode ||| file attributes inode	count=1
arg	[arg_1] [arg_2] of its ancestor environments ||| [arg_2] [arg_1]	count=9
function	an unspecified result ||| cdr!	count=1
function	of ip addresses for ||| get host by	count=1
function_arg	[function_1] [arg_2] ||| [function_1] file source-filename [arg_2]	count=4
arg	slot if it ||| slot	count=1
arg	a [arg] ||| [arg]	count=2
function	characters ||| string	count=1
arg	bulk of a typical ||| name	count=1
function	the write operation ||| port write	count=1
arg	a condition of type ||| type	count=1
function	generic procedure is ||| condition	count=1
arg	buffer's ||| buffer	count=1
function	going ||| string tail	count=2
arg	character k of string ||| k	count=1
arg	rb-tree or default if ||| rb-tree default	count=2
function	[function_1] pair from ||| [function_2] [function_1]	count=1
module	must ||| 6.8.1	count=1
function	contains the same associations ||| >wt	count=1
function	reads a ||| read	count=1
function	output-port ||| write substring	count=1
arg	solid ||| radius	count=1
function_arg	class of object ||| object class object	count=2
arg	default if ||| default	count=3
arg	chars which must ||| chars	count=1
arg	cdr ||| cdr	count=1
module	restart ||| 16.4.4	count=1
function	rehash size of ||| table rehash size	count=1
function	are ||| >stream	count=1
function_arg	method and [arg_2] ||| [function_1] generic-procedure [arg_2]	count=1
function	convert an ||| time >string	count=2
function_arg	[function_1] of wt-tree ||| [arg_2] [function_1]	count=6
function	[function_1] one argument ||| [function_2] [function_1]	count=1
function	start or end ||| edge	count=1
function	hold both ||| entry type:key	count=1
module	returns the symbol ||| 14.12.3	count=1
function	store-value after first storing ||| store value	count=1
function	characters ||| input port	count=1
function	flush-output operation ||| flush output	count=1
module	procedure component ||| 12.5	count=1
function	graphics device at the ||| draw image	count=1
function	device coordinate limits ||| graphics device coordinate limits	count=1
function	in-lined primitives within ||| no range checks	count=1
function	a regular expression ||| group	count=1
function_arg	unparsed entity declaration ||| unparsed !entity name	count=1
arg	wt-tree-2 ||| wt-tree-2	count=2
function_arg	the key [arg_2] ||| [arg_2] [function_1]	count=2
function	a ||| regexp group	count=2
function_arg	[function_1] rb-tree or ||| 11.6 [function_1] datum [arg_2]	count=5
function	returns the bitwise-logical “and” ||| fix:and	count=1
function	be a procedure ||| output	count=1
function	[function] of ||| generic procedure generator [function]	count=2
function	superclasses of ||| superclasses	count=1
function	[function_1] to the ||| [function_2] [function_1] traps	count=1
function_arg	[function_1] on output-port ||| [function_1] [arg_2]	count=9
function_arg	arity of [arg_2] ||| [arg_2] [function_1]	count=1
function	of ||| output to string	count=1
function	type #t if ||| type	count=1
function	component is represented as ||| pathname as	count=1
arg	fields [arg] ||| [arg]	count=3
function	procedure ||| with	count=1
function	rehash ||| table rehash	count=2
function	entry type for hash ||| hash table	count=3
function	current output [function_2] ||| [function_2] [function_1]	count=1
function	and [function] ||| environment [function]	count=3
function_arg	mode [arg_2] ||| [function_1] graphics-device [arg_2]	count=2
function	for an evaluated expression ||| for evaluated expression	count=1
function	returns the length ||| wide string length	count=3
function_arg	returns the datum [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
arg	arguments ||| arguments option	count=1
function	replace all occurrences ||| replace	count=1
function	may ||| integer >bit string	count=1
function_arg	superclasses of [arg_2] ||| [arg_2] [function_1]	count=2
arg	operand [arg] ||| [arg]	count=3
function	in ||| length	count=1
rep	breakpoint [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	record-type ||| record-type	count=2
arg	k of ||| string k	count=3
function	[function] string ||| [function]	count=1
function	the ancestor of most ||| environment	count=1
function	as a match group ||| group	count=1
function	a normal ||| lookup	count=1
function	that accepts arbitrary objects ||| weak eq hash	count=1
function	returns a parser buffer ||| buffer	count=2
arg	[arg_1] and end ||| [arg_2] [arg_1]	count=11
arg	thunk must ||| thunk	count=3
arg	name linked ||| attributes	count=1
function	the color ||| color	count=1
function	called with the wrong ||| type:wrong	count=1
module	must be ||| 6.8.1	count=1
function	returns ||| >symbol	count=1
arg	[arg_1] if-not-found ||| [arg_1] if-found [arg_2]	count=4
function	accepts arbitrary objects as ||| ephemeral eq hash table	count=1
function_arg	[function_1] from port ||| [function_1] >parser buffer [arg_2]	count=1
function	except that the output ||| with output	count=1
arg	from [arg] into ||| [arg] string start	count=1
function_arg	[function_1] of procedure ||| [function_1] [arg_2]	count=1
function	object is [function] table otherwise ||| [function]	count=1
function	at the beginning and ||| break	count=1
function	the length of the ||| file attributes length	count=1
function	[function] invokes ||| output port [function]	count=1
function	length of the ||| length	count=1
module	a newly allocated weight-balanced ||| 11.7.1	count=1
arg	#t if the slot [arg_1] [arg_2] returns #f ||| [arg_2] [arg_1]	count=1
function	must ||| output to string	count=1
function	[function] the ||| [function]	count=1
function_arg	converted [arg_2] ||| [function_1] [arg_2]	count=4
arg	symbol [arg] is implemented ||| [arg]	count=1
function	check that ||| no range	count=1
function	the graphics operation ||| 17.7 graphics operation	count=1
arg	k of string and ||| k	count=2
function	file for output ||| output file	count=1
module	otherwise ||| 15.1.3	count=1
arg	image is ||| y image	count=1
arg	a time-string argument to ||| time-string	count=1
function	be a procedure ||| to	count=1
module	returns #f ||| 15.1.3	count=1
arg	registers ||| string registers n	count=1
function	[function_1] a dispatch ||| [function_1] [function_2]	count=1
function_arg	[function_1] expression to ||| [arg_2] [function_1]	count=4
function	possible ||| month max	count=1
module	regular ||| 6.8.1	count=1
function	[function_1] all ||| [function_1] [function_2] open files	count=3
arg	[arg_1] on graphics-device ||| draw text [arg_2] x [arg_1]	count=1
module	[module] a key ||| [module]	count=6
function	[function_1] and ||| [function_1] [function_2]	count=1
arg	procedure ||| procedure	count=28
function	not check ||| range	count=1
function	a new copy ||| pathname new	count=1
module	of the [module] ||| [module]	count=1
function	graphics [function_2] ||| 17.7 [function_1] [function_2]	count=1
function	for an evaluated ||| prompt for evaluated	count=3
function	two bit string ||| bit	count=1
arg	thus [arg] must ||| [arg]	count=1
function	field names for ||| field names	count=1
function_arg	blocking mode [arg_2] ||| [function_1] [arg_2]	count=4
function	dispatch [function_2] ||| [function_2] [function_1]	count=3
arg	on output-port ||| output-port string start	count=1
function	operation sets the line ||| set	count=1
function	the dispatch [function_2] ||| [function_2] [function_1]	count=1
arg	the image ||| y image	count=1
function	input blocking mode of ||| input blocking	count=1
arg	[arg_1] default if ||| [arg_2] [arg_1]	count=4
arg	procedure of one ||| procedure vector	count=1
function	be a procedure of ||| with	count=1
function	deletion procedure similar to ||| delete	count=2
function	[function_1] port ||| [function_1] [function_2]	count=9
function	match group ||| group	count=1
function	access time of ||| access time	count=2
function	represented as ||| pathname as file	count=1
function	[function_1] and on ||| [function_2] [function_1]	count=1
arg	[arg_1] procedure ||| [arg_1] [arg_2]	count=2
function	string representation of a ||| regexp	count=1
arg	wt-tree-2 otherwise returns #f ||| wt-tree-2	count=1
function	the write operation ||| output port write	count=1
function	[function_1] described ||| [function_2] [function_1]	count=4
function	referring ||| file	count=1
arg	graphics-device to the point ||| graphics-device	count=1
module	this procedure ||| 16.7	count=1
function	the elements of ||| >list	count=1
function	the cursor for ||| move cursor	count=1
function	a hash-table [function_2] ||| [function_2] [function_1]	count=1
module	will ||| 4.3.3	count=2
function_arg	superclasses of [arg_2] ||| [function_1] list [arg_2]	count=1
arg	k ||| k char	count=1
function	[function] key in ||| rb tree [function]	count=3
function	output is ||| with output	count=1
function	out of ||| out of	count=1
function	operation ||| type operation	count=1
arg	[arg_1] an ||| [arg_2] [arg_1]	count=6
arg	with a [arg] ||| [arg]	count=1
function_arg	procedure of method ||| method procedure method	count=2
module	be a ||| 14.3	count=1
arg	symbol ||| environment symbol object	count=1
function	[function_1] length of ||| [function_1] [function_2]	count=4
arg	is ||| object	count=8
function	syntax of let*-syntax ||| let* syntax	count=1
arg	if pathname1 [arg_2] ||| [arg_2] [arg_1]	count=1
arg	of condition to port ||| port	count=1
arg	[arg_1] start ||| [arg_1] [arg_2]	count=5
function	macro transformer ||| macro transformer	count=3
function	using ||| fill	count=1
function	is not the ||| not	count=1
arg	by record-type [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] [arg_2] ||| 11.6 [function_1] datum [arg_2]	count=10
function	that character ||| parser buffer char	count=1
function	the output terminal ||| port output terminal	count=2
function	tree is empty ||| rb tree	count=1
module	returns ||| 15.1.3	count=1
function_arg	[function_1] of class ||| [arg_2] [function_1]	count=14
function_arg	[function_1] port to ||| [arg_2] [function_1]	count=14
function	smallest key ||| min	count=1
arg	pathname1 is ||| pathname1	count=1
function	their ||| no type	count=1
arg	a key matching key ||| key	count=1
arg	operation procedure ||| procedure	count=1
function	must be a ||| to string	count=1
function	device coordinate [function_2] ||| [function_2] [function_1]	count=2
function	that accepts arbitrary objects ||| ephemeral eq hash table	count=1
function	of no ||| with	count=1
function	the specializers of ||| specializers	count=1
function	that ||| named	count=1
function_arg	the let* [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	environment must be a [function_1] [arg_2] ||| [function_1] [arg_2]	count=5
arg	weak-pair to object and ||| weak-pair object	count=2
arg	start and end to ||| start end	count=1
arg	list for which predicate ||| predicate	count=1
function	inclusive and ending ||| bit substring move	count=1
function_arg	list that describes the [function_1] [arg_2] ||| 5.6 [function_1] [arg_2]	count=1
function	an ||| time	count=1
arg	be an ||| symbol	count=1
module	analogous [module] integers 0 ||| [module]	count=1
arg	char to output-port and ||| output-port	count=1
arg	of weak-pair [arg_2] ||| [arg_1] [arg_2]	count=6
function	arity of ||| generic procedure arity	count=2
function_arg	[function_1] of method ||| [function_1] [arg_2]	count=6
function	must be a procedure ||| output to string	count=1
function	that is ||| range	count=1
function	a standard tree ||| string wt	count=1
module	of the file named ||| 15.3	count=1
module	check their arguments' ||| 4.3.3	count=1
function_arg	[function_1] port ||| [function_1] [arg_2]	count=31
function_arg	entry [arg_2] ||| [arg_2] [function_1]	count=1
arg	by items ||| items	count=1
function	of days [function_2] ||| [function_2] [function_1]	count=2
function	is generated when ||| condition	count=1
module	the alt [module] attempts to ||| [module]	count=1
function	and integer may be ||| integer >bit string	count=1
function	[function_1] not the ||| [function_2] word [function_1]	count=1
module	[module] tree's ||| [module]	count=1
function	of the properties ||| properties	count=1
function	the fresh-line on ||| port fresh line	count=1
function_arg	[function_1] for graphics-device ||| [arg_2] [function_1]	count=6
module	have ||| 11.7.3	count=2
arg	converted into a ||| directory	count=1
function	x ||| x	count=1
function_arg	[function_1] graphics-device to ||| [arg_2] [function_1]	count=5
arg	[arg_1] datum in ||| 11.2 1d table put! [arg_1] [arg_2]	count=2
arg	target-filename ||| target-filename	count=1
function_arg	the parent [arg_2] ||| [function_1] [arg_2]	count=1
function	the write operation ||| write	count=1
module	allocated weight-balanced ||| 11.7.1	count=1
arg	by source-x-left [arg_2] ||| [arg_2] [arg_1]	count=4
function	a method of ||| define method	count=1
arg	to pathname but in ||| pathname	count=1
function	keys strongly ||| type:datum	count=1
arg	car field [arg] ||| [arg]	count=1
function	hold both keys and ||| table entry type:key	count=1
module	that indices ||| 4.3.3	count=1
module	the representation of ||| 15.5.1	count=1
function	name ||| define structure	count=1
arg	on which [arg] falls encoded ||| [arg]	count=1
function	is represented as a ||| as file	count=1
function	arguments' ||| no type	count=1
function_arg	[function_1] [arg_2] ||| [function_1] program [arg_2]	count=3
function	the fresh-line on ||| output port fresh line	count=1
function	the directory component ||| directory pathname	count=1
function_arg	[function_1] given operands ||| [function_1] [arg_2]	count=2
arg	and returns a newly ||| key	count=1
arg	#t [arg] well-formed ||| [arg]	count=1
function	uninterned [function_2] ||| [function_2] [function_1]	count=4
arg	specified field-name ||| field-name	count=1
function	check that indices ||| range	count=1
arg	component of ephemeron to ||| ephemeron	count=2
function_arg	[function_1] [arg_2] ||| [function_1] type unparser method! [arg_2]	count=7
function	the let* ||| let*	count=1
arg	same dimensions at destination-x-left ||| destination-x-left	count=1
function	device window ||| window	count=1
function	the key ||| computed emp key	count=1
function	or del-assq! ||| association	count=1
module	returns ||| 10.4	count=1
function_arg	[function_1] keyword to ||| [arg_2] [function_1]	count=1
function	of ||| name >symbol	count=1
function	buffer's ||| parser buffer string	count=1
function	a new copy of ||| new	count=1
function	printed ||| >name	count=1
function	the type [function_2] ||| [function_2] [function_1]	count=2
arg	of the elements ||| list	count=1
function	a symbol ||| xml name	count=2
function_arg	[function_1] [arg_2] position ||| [function_1] [arg_2]	count=3
function	same contents as ||| wide string >string	count=1
arg	elements ||| list	count=5
function_arg	[function_1] [arg_2] ||| [function_1] modifier method class [arg_2]	count=2
function	mode bits ||| file attributes mode	count=1
function	expression ||| group	count=1
function	stream whose elements are ||| >stream	count=1
arg	pointer ||| pointer	count=2
function	the characters of ||| input string	count=1
function	prompts [function] ||| [function] command	count=1
function	a subtype [function_2] ||| [function_2] [function_1]	count=2
function	ancestor of most ||| environment	count=1
function	the parent ||| parent	count=1
function	the access ||| access	count=1
arg	is a ||| object path	count=1
function	elements are the elements ||| stream >list	count=1
arg	in specializer ||| specializer	count=1
function_arg	name host-name using ||| name host-name	count=1
function	concrete type that ||| condition type:derived port error	count=1
function	no arguments ||| string	count=1
module	representation for ||| 14.5	count=1
arg	element k of string ||| k	count=2
function_arg	let* [arg_2] ||| [function_1] [arg_2]	count=3
arg	an improper list ||| list	count=1
function	a modifier method for ||| modifier method	count=1
module	expression parses ||| 14.11.2	count=3
function	the condition type ||| type	count=1
function	the windows bitmap file ||| bitmap	count=1
function	that fall between ||| tail	count=1
function_arg	class of [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] evaluated expression ||| [function_2] [function_1]	count=3
function	of car [function_2] ||| [function_1] [function_2]	count=1
arg	[arg] true on ||| [arg]	count=1
function	the unicode scalar ||| scalar	count=1
arg	equivalent to pathname2 ||| pathname2	count=1
function	“and” of ||| fix:and	count=1
function	returns an output ||| output	count=1
function	[function_1] method ||| [function_2] [function_1]	count=1
function	returns the ||| xml	count=1
function	alist of the properties ||| properties	count=1
function	first character [function] ||| [function]	count=1
function	set the datum ||| datum	count=1
arg	with index start ||| string start	count=1
arg	environment2 must ||| environment2	count=1
function	universal-time format ||| time >universal time	count=1
arg	copy of list ||| list	count=1
function	be a ||| regexp	count=1
function	be a ||| with output to string	count=1
function_arg	[function_1] code in ||| [function_1] string k [arg_2]	count=1
arg	#f) ||| field-names reporter	count=1
arg	to object and ||| object	count=2
arg	[arg_1] [arg_2] must be identifiers ||| [arg_1] [arg_2]	count=15
function	going to the ||| string tail	count=1
function	[function_1] exact integer ||| [function_2] [function_1]	count=1
function_arg	[function_1] host-name ||| [function_1] [arg_2]	count=4
function	must ||| group	count=1
function	a parser ||| parser	count=1
function	the smallest key ||| min	count=1
function	subtype of condition-type subprocess-abnormal-termination ||| type:subprocess signalled	count=1
arg	write-substring operation on output-port ||| output-port	count=1
function	may be ||| signed integer >bit string	count=1
arg	with components [arg] ||| [arg]	count=2
module	are analogous [module] integers ||| [module]	count=1
function	this procedure closes all ||| close all	count=1
arg	[arg_1] end ||| [arg_2] [arg_1]	count=14
function	flush-output ||| port flush output	count=1
function	del-assv or del-assq! ||| association procedure	count=1
arg	condition of type ||| type	count=1
function	a per-element transform ||| map	count=1
arg	signals an ||| caller	count=1
function	anywhere that is ||| edge	count=1
function	a procedure [function_2] ||| [function_2] [function_1]	count=1
arg	field-name ||| field-name	count=1
arg	seventh element [arg] ||| [arg]	count=1
function_arg	[function_1] variables ||| [function_1] [arg_2]	count=1
function	cannot be recognized by ||| *unparse with maximum readability?*	count=1
function	the numerator of ||| numerator	count=1
function	argument the pathname ||| pathname	count=1
function	variables [function] the current ||| [function]	count=1
function	returns the symbol part ||| name	count=1
function	procedure of no arguments ||| output	count=1
arg	the given operands ||| operator operands	count=1
function	is an abstract type ||| condition type:illegal	count=1
function	be a procedure ||| string	count=1
function	for ||| value	count=1
function	of a regular ||| group	count=1
function	time in ||| time	count=2
arg	object and ||| object	count=2
function	be a procedure of ||| with output	count=1
function	is a copy ||| copy	count=1
arg	be a procedure ||| procedure list	count=1
function	fall between ||| tail	count=1
function	the input blocking mode ||| port set input blocking mode	count=1
arg	must be a procedure ||| procedure	count=3
function	string as its result ||| string	count=1
arg	dimensions at destination-x-left ||| destination-x-left	count=1
arg	[arg] starting ||| [arg] start1 end1 bit-string-2	count=3
function	symbol part ||| name >symbol	count=1
function	adds ||| add generic	count=1
module	pathname otherwise returns #f ||| 15.1.3	count=1
arg	returns character ||| string	count=1
module	that indices are valid ||| 4.3.3	count=1
function_arg	to create a temporary [function_1] [arg_2] ||| [function_1] pathname [arg_2]	count=4
function	[function_1] savings time ||| [function_1] [function_2]	count=1
function	abs returns the ||| abs	count=1
arg	image is ||| image	count=1
function	integer may be any ||| >bit	count=1
function	a procedure of no ||| string	count=1
module	to fresh locations holding ||| 2.2	count=2
module	objects and `#f' ||| 12.6.1	count=1
function	the bindings ||| bindings	count=1
function	arguments ||| arguments	count=1
arg	table call thunk ||| thunk	count=1
function_arg	entity [arg_2] ||| [function_1] [arg_2]	count=1
function	a regular expression ||| regexp	count=1
arg	wide-string as ||| wide-string	count=1
function	is an abstract ||| condition type:warning	count=2
function	object is [function] ||| [function] of	count=1
function_arg	limits [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] end to ||| [arg_2] [arg_1]	count=5
function	the procedure of ||| procedure	count=1
function_arg	[function_1] filename as ||| [arg_2] [function_1]	count=4
function	start of ||| start	count=3
module	keys ||| 11.4.1	count=2
function	the procedure of ||| method procedure	count=1
arg	wt-tree except the association ||| wt-tree	count=1
function_arg	[function_1] by record-type ||| [arg_2] [function_1]	count=7
function	access ||| attributes access	count=1
function	returns the symbol part ||| xml name >symbol	count=1
function	type #t if the ||| file attributes type	count=1
arg	on which [arg] falls ||| [arg]	count=1
function	the characters of ||| open wide input string	count=1
function_arg	source-filename [arg_2] ||| [arg_2] [function_1]	count=1
function	at the beginning ||| break	count=1
arg	pointer in ||| pointer	count=1
function	slot ||| class slot	count=1
function	key of some ||| wt tree subset?	count=1
function	out of ||| type:datum out of	count=2
arg	by string [arg_1] [arg_2] to ||| [arg_1] [arg_2]	count=2
function	part ||| >symbol	count=1
function	any subsequent words are ||| string capitalized?	count=1
function	each ||| load option	count=2
arg	components [arg] ||| [arg]	count=2
function	macro [function_2] ||| [function_1] [function_2]	count=4
arg	rb-tree-2 for [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] threshold ||| [function_2] [function_1]	count=3
function	exact non-negative ||| size	count=1
function	coordinate ||| graphics set coordinate	count=1
function	the properties of ||| slot properties	count=1
function	the ||| no range	count=1
arg	string2 ||| string2	count=1
function_arg	[function_1] consisting of ||| [function_1] [arg_2]	count=1
function_arg	method [arg_2] ||| [function_1] [arg_2]	count=1
function	match the specified ||| match parser buffer	count=1
function	the datum ||| ephemeron datum	count=1
function	closes display after calling ||| close	count=1
function	user for ||| for	count=3
function	the name ||| procedure name	count=1
module	[module] for ||| [module]	count=1
function	the uri ||| name uri	count=1
function	a procedure of no ||| output to	count=1
function	an exact non-negative integer ||| size	count=1
function	the procedure ||| procedure	count=3
function	contain the same ||| string=?	count=1
function	sources the characters of ||| wide input string	count=1
module	be a procedure ||| 14.3	count=1
arg	a particular field of ||| field-name	count=1
function	newly allocated copy ||| rb tree copy	count=1
function	but excluding ||| head	count=1
arg	slot has ||| slot	count=1
function_arg	point [arg_2] ||| [function_1] [arg_2]	count=3
arg	associations in wt-tree except ||| wt-tree	count=1
function	is an abstract ||| condition type:illegal datum	count=2
arg	with key in rb-tree ||| rb-tree key	count=1
function	alist of the properties ||| slot properties	count=1
function	to be [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] coordinate ||| [function_2] [function_1]	count=4
arg	a form ||| form	count=1
function	copy ||| copy	count=1
function	the following character ||| char	count=1
function	[function_1] not the ||| [function_2] [function_1]	count=1
function	symbol ||| name	count=1
arg	the first list ||| list	count=1
function	graphics device at ||| draw subimage	count=1
function	when [function] given ||| [function]	count=1
function	input ||| port input	count=2
arg	[arg_1] be mode ||| [arg_1] [arg_2]	count=9
function	for reference-trap objects when [function_1] [function_2] given ||| [function_2] [function_1] traps	count=1
function	followed by the elements ||| append	count=1
arg	access-time ||| access-time	count=1
function_arg	[function_1] new-value ||| 16.4.2 [function_1] [arg_2]	count=3
function	an output port ||| output port	count=2
arg	of filename ||| filename	count=1
function	regular expression ||| regexp	count=1
arg	writes [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=8
function	their arguments' ||| no	count=1
function	returns the symbol ||| name >symbol	count=1
function	the same contents as ||| >string	count=1
function	sets generic's [function] generator and ||| set generic procedure [function]	count=1
arg	code ||| end code	count=1
arg	port [arg_2] ||| [arg_2] [arg_1]	count=4
function	name and #f ||| name?	count=1
function	and ending ||| bit substring move	count=1
arg	elements start [arg_2] ||| [arg_1] [arg_2]	count=1
function	in-lined primitives within ||| range checks	count=1
function_arg	compares the [arg_2] ||| [arg_2] [function_1]	count=1
arg	at index start and ||| start	count=1
function_arg	[function_1] [arg_2] ||| [function_1] length [arg_2]	count=9
arg	filename is ||| filename	count=1
arg	typical xml document consists ||| attributes contents	count=1
arg	a ||| name procedure	count=1
arg	start ||| start	count=5
function_arg	[function_1] host-name using ||| [arg_2] [function_1]	count=4
function_arg	input blocking [arg_2] ||| [function_1] [arg_2]	count=3
function	write operation ||| write char	count=1
function_arg	[function_1] on graphics-device ||| [arg_2] [function_1]	count=3
function	the output terminal ||| set output terminal mode	count=1
function	the length of ||| string length	count=3
arg	an instance of condition-type ||| condition-type	count=1
function_arg	[function_1] strings substrings ||| [arg_2] [function_1]	count=1
function	argument that is ||| condition type:bad range argument	count=1
function_arg	source-filename [arg_2] ||| [function_1] source-filename [arg_2]	count=1
function	third ||| third	count=1
function	numerator of ||| numerator	count=1
function_arg	a keyword [arg_2] ||| [arg_2] [function_1]	count=6
function	matches any [function] that isn't ||| rexp not word [function]	count=1
function	into an ||| string >unsigned	count=1
arg	registers must ||| string registers n	count=1
function	into an [function_2] ||| [function_2] [function_1]	count=1
function_arg	elements of vector ||| vector >list vector	count=1
module	these procedures ||| 8.2	count=6
arg	of condition-type [arg_2] ||| [arg_2] [arg_1]	count=1
arg	type [arg] ||| [arg]	count=2
function	procedure of ||| procedure	count=1
arg	the specified x ||| x	count=1
function_arg	[function_1] [arg_2] ||| [function_1] line [arg_2]	count=1
function	arbitrary objects as ||| weak eq hash table	count=1
function	representation ||| regexp group	count=1
function	output is ||| output	count=1
arg	is terminated by ||| list1 list2	count=1
arg	mexp operand ||| mexp	count=1
function_arg	characters read [arg_2] ||| [arg_2] [function_1]	count=1
module	procedure ||| 12.1	count=1
function	[function_1] keys strongly ||| [function_2] [function_1]	count=1
function	limits ||| limits	count=2
function	newly allocated list ||| list	count=2
arg	k that is ||| stream k	count=1
arg	element k of ||| k	count=3
arg	k ||| k thunk	count=1
function	ordering ||| wt tree	count=1
function	a restart ||| restart	count=1
function	output [function] ||| output [function]	count=1
arg	procedure with ||| procedure	count=4
arg	by pathname ||| pathname	count=1
module	[module] the empty ||| [module]	count=1
arg	code in the given ||| code	count=1
function	[function] is ||| move [function]	count=3
function	be a procedure ||| to string	count=1
function	shell program ||| shell file name	count=1
function	and ending at ||| substring move	count=1
function	the [function] by string ||| write [function]	count=1
arg	arity and ||| arity	count=1
function	[function_1] subtype of ||| [function_2] [function_1]	count=2
function_arg	reference-trap objects when referring [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	generalization ||| general	count=1
function	procedure ||| output to	count=1
function	return the denominator ||| denominator	count=1
function	block will not check ||| no type	count=1
function	[function_1] drawing ||| [function_1] [function_2]	count=1
function	concrete ||| condition type:derived port	count=1
function_arg	parent [arg_2] ||| [arg_2] [function_1]	count=1
function	tree that [function_2] ||| [function_2] [function_1]	count=8
module	[module] is ||| [module]	count=2
function	is otherwise ||| condition	count=1
arg	index start1 inclusive ||| start1	count=1
function	is not a port ||| port	count=1
function_arg	[function_1] from list ||| [arg_2] [function_1]	count=3
function_arg	flush-output [arg_2] ||| [arg_2] [function_1]	count=1
arg	code in element k ||| k code	count=1
module	to ||| 14.12.2	count=2
function	that is not ||| not	count=1
function	savings ||| savings	count=1
arg	[arg_1] [arg_2] ||| -1 identifier=? [arg_1] [arg_2]	count=3
function	performs a per-element transform ||| map	count=1
function_arg	“and” of [arg_2] ||| [arg_2] [function_1]	count=1
arg	#t if pathname1 is ||| pathname1	count=1
function	type for hash ||| hash table	count=3
function	returns a new output ||| output string	count=1
function	bindings of the parent ||| bindings	count=1
function	[function_1] pair ||| [function_2] [function_1]	count=1
module	this type indicates the ||| 16.7	count=2
function	the user's “home directory” ||| user homedir	count=1
function	returns the rehash size ||| rehash size	count=1
function	specifies the [function_1] [function_2] the standard output of ||| [function_2] [function_1]	count=1
function	returns a new tree ||| wt tree	count=1
arg	argument in decoded-time format ||| decoded-time	count=1
function	the [function_1] [function_2] ||| [function_2] [function_1]	count=12
function	names [function] character into ||| [function]	count=1
arg	code in ||| start end code	count=1
module	result ||| 11.4.2	count=2
module	hash [module] ||| [module]	count=1
function	argument in ||| time	count=1
function	suffix of ||| suffix?	count=1
arg	by k that is ||| k	count=1
arg	x ||| x	count=9
function_arg	syntactic [arg_2] ||| -1 make [function_1] [arg_2]	count=4
function	end of the text ||| string end	count=1
function	[function_1] superclasses of ||| [function_1] [function_2]	count=4
function	of the operating ||| operating	count=1
module	of ||| 6.2	count=1
function	the printed ||| >name	count=1
arg	against buffer's ||| buffer	count=1
function	ephemerally keyed by ||| type:datum ephemeral	count=1
function	the block will not ||| no range	count=1
module	1970 utc in universal-time ||| 15.5.1	count=1
function	invokes the write ||| port write	count=1
arg	terminated by ||| procedure list1 list2	count=1
function	[function_1] car ||| [function_2] [function_1]	count=2
function_arg	[function_1] image ||| byte [function_1] [arg_2]	count=1
arg	the list of condition-types ||| condition-types	count=1
arg	[arg_1] be object ||| [arg_1] [arg_2]	count=2
function	tree that contains ||| alist >wt tree	count=3
function	out ||| type:datum out	count=1
function	and ending at ||| bit substring	count=1
function	start of [function_2] ||| [function_2] [function_1]	count=2
function	to file-time [function_2] ||| [function_1] [function_2]	count=1
function	are ||| no	count=1
function	the block ||| no type	count=1
function	a list of iso-8859-1 ||| list	count=1
module	expression always ||| 14.11.2	count=1
function	list of the symbols ||| names	count=1
function	macro transformer as ||| macro transformer	count=3
function	bitwise-logical “and” of ||| fix:and	count=1
function	returns the uri of ||| xml name uri	count=1
function	default ||| default	count=2
arg	[arg_1] char2 ||| [arg_2] [arg_1]	count=2
rep	allocated weight-balanced [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	the superclasses of ||| precedence	count=1
function	argument to file-time format ||| string >file time	count=1
function	an xml [function_2] ||| [function_1] [function_2]	count=1
function	graphics operation ||| 17.7 graphics operation	count=1
function	wt-tree's ||| delete min	count=1
function_arg	described [arg_2] ||| [function_1] [arg_2]	count=1
function	string representation ||| regexp group	count=1
function	write xml ||| write xml file	count=1
arg	creates an association between [arg_1] [arg_2] 1d-table ||| [arg_1] [arg_2]	count=1
arg	the image ||| image	count=1
function	multiple values the device ||| graphics device	count=1
function	stores char ||| set!	count=1
function	macro ||| macro	count=2
function	stores ||| fill!	count=1
arg	object made from min ||| min	count=1
function	an unspecified value ||| wide	count=1
arg	string [arg_2] ||| [arg_1] [arg_2]	count=10
module	printed representation ||| 14.5	count=1
function	procedure ||| apply hook procedure	count=1
function_arg	[function_1] [arg_2] ||| [function_1] string [arg_2]	count=8
arg	from procedure ||| procedure	count=1
function	uninterned symbol ||| uninterned symbol	count=1
arg	x [arg_2] ||| [arg_1] [arg_2] image im-x im-y w	count=1
arg	by record-type [arg_2] ||| [arg_1] [arg_2]	count=2
function	block will not ||| no type	count=1
function_arg	substring defined [arg_2] ||| write [function_1] [arg_2]	count=3
function	the same contents as ||| wide string >string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] xml [arg_2]	count=2
arg	generalization ||| name generalization	count=1
module	[module] unspecified value ||| [module]	count=1
arg	returns character k of ||| string k	count=1
arg	#t if object is ||| object	count=4
arg	by mexp ||| mexp	count=1
function	that fall between ||| buffer tail	count=1
function	this variable controls the ||| create editor args	count=1
arg	default is returned ||| default	count=1
function	[function_1] a window ||| [function_1] [function_2]	count=2
arg	in elements start ||| start	count=1
arg	port to [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] on classes ||| [arg_2] [function_1]	count=2
function_arg	the procedure [arg_2] ||| [arg_2] [function_1]	count=1
arg	condition-type and ||| condition-type	count=1
arg	code ||| code	count=4
function	methods for the ||| methods	count=1
function_arg	the generalizations [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	returns [function_1] [arg_2] ||| 6.2 [function_1] [arg_2]	count=2
function	then ||| with	count=4
arg	x must ||| hash-table x	count=2
function	followed by ||| append	count=1
arg	procedure initialization ||| initialization	count=1
arg	[arg_1] datum ||| [arg_1] [arg_2]	count=1
function	subtype of condition-type ||| type:subprocess	count=2
arg	methods to ||| methods	count=1
function	be a procedure ||| with output to string	count=1
function	generic's ||| procedure generator	count=1
function	current input [function_2] ||| [function_2] [function_1]	count=1
function	the slot descriptors for ||| slots	count=1
function	input terminal ||| port input terminal	count=2
function	generalization [function_2] ||| [function_1] [function_2]	count=2
function	permanent condition ||| bind default condition	count=1
function_arg	numerator [arg_2] ||| [arg_2] [function_1]	count=1
module	the alt [module] attempts ||| [module]	count=1
function	procedure of no ||| with	count=1
arg	k of string and ||| k char	count=1
function	[function_1] not ||| [function_2] [function_1]	count=1
module	string otherwise returns #f ||| 9.2	count=1
arg	pathname2 otherwise returns ||| pathname2	count=1
function	the extra ||| entity extra!	count=1
function	start [function_2] ||| [function_2] [function_1]	count=2
function	tree ||| tree	count=14
function	the [function] ||| rexp [function]	count=6
function	the output is ||| output	count=1
function	under the wt-tree's ||| delete min	count=1
function	to ||| to	count=1
arg	irritants a list of ||| irritants	count=1
module	the representation ||| 15.5.1	count=1
arg	substring against buffer's contents ||| buffer string	count=1
arg	a procedure of one ||| procedure vector	count=1
function	the type of record ||| type	count=1
function	the input blocking mode ||| input blocking mode	count=2
arg	k that is the ||| k	count=1
arg	of weak-pair to object ||| weak-pair object	count=2
function	a macro transformer ||| macro transformer	count=3
function	reading the ||| accessor	count=1
function	real time in ticks ||| real time	count=1
arg	[arg_1] height to ||| [arg_2] [arg_1]	count=6
arg	bit-string-2 ||| bit-string-2	count=1
function	in-lined primitives within ||| type checks	count=1
function	a hash ||| hash	count=1
arg	image is copied into ||| y image	count=1
arg	for connections to service ||| service	count=1
arg	symbol to be a ||| symbol	count=1
arg	from code and bucky-bits ||| code bucky-bits	count=1
function	returns the parent ||| environment parent	count=1
function	represented ||| record	count=1
function	transformer as described ||| transformer	count=2
function	for hash ||| hash table	count=3
arg	to the point x ||| x	count=1
function	invokes the graphics operation ||| graphics operation	count=1
arg	the bits of bit-string-1 ||| bit-string-1	count=1
function	changes the input terminal ||| set input terminal	count=1
function	format to universal-time format ||| time >universal time	count=1
function	the wt-tree's ordering ||| delete min	count=1
function	a procedure of no ||| output	count=1
arg	the bulk of a ||| name	count=1
function	inode number of ||| file attributes inode number	count=1
arg	otherwise default is returned ||| default	count=1
function	will ||| range	count=1
module	of string ||| 6.2	count=1
function	the input blocking mode ||| set input blocking mode	count=1
function	returns the specializers of ||| method specializers	count=1
function	the state component of ||| port state!	count=1
function_arg	generalizations of [arg_2] ||| [function_1] [arg_2]	count=1
function	under the wt-tree's ordering ||| delete min	count=1
function	valid ||| no range	count=1
function	replace all occurrences of ||| string replace	count=1
function	for input ||| with input file	count=1
function	reads ||| read	count=1
arg	[arg_1] char2 in ||| [arg_2] [arg_1]	count=2
function	write ||| port write	count=1
function_arg	[function_1] output-port ||| [function_1] [arg_2]	count=8
function_arg	[function_1] of stream ||| [arg_2] [function_1]	count=4
arg	command-line arguments ||| arguments option	count=1
arg	mode must be an ||| mode	count=1
function	accepts arbitrary objects ||| weak eq hash table	count=1
function	new copy ||| pathname new	count=1
function	is ||| format error	count=1
module	[module] integers ||| [module]	count=1
module	the seq [module] ||| [module]	count=1
arg	start [arg_2] ||| string [arg_1] [arg_2]	count=1
arg	the substring specified by [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=16
function_arg	ephemeron [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] hash-table ||| [function_1] [arg_2]	count=9
function	not check their ||| type	count=1
function_arg	[function_1] xml-name ||| [function_1] [arg_2]	count=3
function	window ||| window	count=4
function	that is of the ||| range	count=1
function	source-filename ||| rename file	count=1
function	type ||| file attributes type	count=1
function_arg	mode [arg_2] ||| [function_1] [arg_2]	count=4
function	procedure ||| output to string	count=1
function	daylight ||| decoded time daylight	count=1
function	hold both keys and ||| table entry type:key datum weak	count=1
arg	name in [arg_2] ||| [arg_2] [arg_1]	count=2
function	returns the symbol ||| name	count=1
module	the seq [module] each ||| [module]	count=1
function_arg	copy of vector ||| vector copy vector	count=1
arg	hash-table is ||| hash-table	count=1
function	is an abstract type ||| condition type:error	count=1
module	with the [module] ||| [module]	count=3
function	daylight savings ||| decoded time daylight savings	count=1
arg	[arg_1] [arg_2] ||| [arg_1] if-found [arg_2]	count=16
function	and contain the same ||| string=?	count=1
arg	pathname1 is equivalent ||| pathname1	count=1
arg	end exclusive ||| end	count=1
arg	call thunk ||| thunk	count=1
arg	is equivalent to pathname ||| pathname	count=1
arg	for computed-emp ||| computed-emp	count=1
function_arg	time [arg_2] ||| [function_1] [arg_2]	count=3
function	dispatch ||| record type dispatch	count=1
function	and ending ||| bit substring	count=1
module	will not check ||| 4.3.3	count=2
arg	[arg_1] [arg_2] or one of its ||| 13.1 environment bound? [arg_2] [arg_1]	count=3
function	[function_1] of arguments ||| [function_2] [function_1]	count=5
function	tree that contains the ||| >wt tree	count=1
arg	write-substring operation on output-port ||| output-port string start end	count=1
arg	creates an association [arg_1] [arg_2] 1d-table ||| 11.2 1d table put! [arg_1] [arg_2]	count=1
function	concrete type that is ||| condition type:derived	count=1
function	the day ||| day	count=1
function	assigning ||| assignment	count=1
function	the classes ||| classes	count=1
function	fresh-line on ||| port fresh line	count=1
function	applying action [function] each ||| [function]	count=1
function	will not check that ||| no range	count=1
function	character ||| char	count=12
function	concrete type ||| condition type:derived port	count=1
function	the block will not ||| range	count=1
module	command-line option that ||| 2.5	count=1
function	on the length of ||| length	count=1
function	one argument the output ||| current	count=1
function	check that indices are ||| no	count=1
function	sets the ||| pointer!	count=1
function_arg	[function_1] of char1 ||| [function_1] [arg_2]	count=1
function	returns the length of ||| bit string length	count=1
arg	object-hash is like ||| object	count=1
module	returns #f ||| 5.3	count=1
function	be a string ||| regexp	count=1
module	effects [module] for its ||| [module]	count=1
function	with numeric ||| number	count=1
function	the option [function] ||| [function]	count=1
arg	width and [arg_2] ||| [arg_1] [arg_2]	count=6
function	but excluding ||| string head	count=1
function	new ||| pathname new	count=1
function	integer and integer may ||| integer >bit	count=1
function	condition type ||| type	count=1
function	associates ||| hash table put!	count=1
function	a new ||| new	count=1
function	procedure of no arguments ||| with	count=1
function	to be ||| parser	count=2
function	or a filled circle ||| circle	count=1
function	the unparser method of ||| unparser	count=1
function	match the ||| match parser	count=1
function	particular variant [function_2] ||| [function_2] [function_1]	count=5
arg	bound in the ordering ||| bound	count=2
function	block will not ||| no range	count=1
function	uninterned ||| uninterned	count=1
arg	start and end until ||| start end	count=1
function_arg	compares [arg_2] ||| [function_1] forward [arg_2]	count=1
function_arg	stores char [arg_2] ||| [arg_2] [function_1]	count=2
function	last modification ||| attributes modification	count=1
function_arg	[function_1] [arg_2] ||| [function_1] generic-procedure [arg_2]	count=4
function	block will ||| no	count=2
arg	(if generalization ||| generalization	count=1
arg	if input-port ||| input-port	count=1
function	the specializers ||| specializers	count=1
arg	on graphics-device ||| graphics-device	count=3
arg	returns the record-type ||| record	count=1
arg	[arg_1] be unparser-method ||| [arg_1] [arg_2]	count=1
function	the ||| name >symbol	count=1
function	days ||| days	count=1
arg	to output-port ||| output-port char	count=1
function_arg	[function_1] graphics-device ||| [arg_2] [function_1]	count=11
function	output is limited to ||| output to truncated	count=1
function	file for input ||| input file	count=1
arg	index start ||| string start	count=1
arg	on graphics-device at the ||| graphics-device	count=1
module	holds its keys ||| 11.4.1	count=1
arg	by pexp ||| pexp	count=1
arg	binary operation procedure ||| procedure	count=1
function	edwin text editor ||| edwin	count=1
function	by [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] generator ||| [function_2] [function_1]	count=1
function	must be assignable ||| assign!	count=1
function	returning a newly-allocated string ||| rexp >regexp	count=1
arg	wt-tree except ||| wt-tree	count=1
function	input terminal mode ||| port set input terminal mode	count=1
function	last pair ||| last pair	count=1
function	is to [function] ||| prompt for [function]	count=3
function	are valid ||| range	count=1
arg	code and ||| code	count=1
function	to [function] ||| prompt for [function]	count=3
arg	strings substrings ||| string1 string2	count=3
function_arg	state component [arg_2] ||| [function_1] [arg_2]	count=5
function_arg	and ending [arg_2] ||| [function_1] right! bit-string-1 start1 [arg_2]	count=2
function	specifies the [function_1] [function_2] the standard output of ||| 15.7.3 [function_2] [function_1]	count=1
function_arg	not check for reference-trap [function_1] [arg_2] ||| [function_1] traps [arg_2]	count=1
function	user for an evaluated ||| for evaluated	count=1
function	tags ||| tags	count=1
arg	length k ||| k	count=2
function	of one ||| current	count=1
function	is entered [function_2] ||| [function_2] [function_1]	count=3
arg	free-names must ||| free-names	count=1
arg	[arg] well-formed scalar-values ||| [arg]	count=1
arg	buffer's contents ||| buffer string	count=1
arg	thunk ||| symbol thunk	count=1
arg	and end to ||| end	count=1
module	the block will not ||| 4.3.3	count=2
module	[module] unspecified ||| [module]	count=1
function	the slot ||| class slot	count=1
function	a string representation of ||| regexp	count=1
function	sets the internal pointer ||| set parser buffer pointer!	count=1
arg	destination-x-left and destination-y-top ||| destination-x-left destination-y-top	count=3
arg	of buffer ||| buffer	count=1
function	allocated list [function_2] ||| [function_2] [function_1]	count=2
function	subtype ||| type:subprocess	count=2
arg	for which predicate ||| predicate	count=1
module	[module] returns an ||| [module]	count=2
function	be a string ||| group	count=1
function	accepts arbitrary objects as ||| strong eq hash table	count=1
arg	and end ||| end	count=3
function	a character otherwise ||| char?	count=1
arg	[arg_1] start ||| [arg_2] [arg_1]	count=6
function	compares ||| string match	count=1
arg	each [arg] operands ||| [arg]	count=1
function	rectangle ||| copy area	count=1
arg	unparser-method and ||| unparser-method	count=1
arg	symbol must ||| environment symbol	count=2
function	the ||| string	count=7
arg	end [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	returns a newly allocated [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	writing characters to ||| input line	count=1
function	represented as a file ||| pathname as	count=1
function	the block will not ||| type	count=1
function	check their ||| no type	count=1
function_arg	time of [arg_2] ||| [arg_2] [function_1]	count=4
arg	output port ||| port	count=1
function	inode ||| attributes inode	count=1
arg	[arg_1] end ||| 14.9.4 write substring [arg_1] [arg_2]	count=2
arg	the ||| string	count=2
function_arg	the directory [arg_2] ||| [function_1] [arg_2]	count=1
arg	modification-time must ||| modification-time	count=1
function	input terminal ||| port set input terminal mode	count=1
arg	from start1 [arg_2] ||| [arg_2] [arg_1]	count=2
function	that accepts arbitrary objects ||| strong eq hash table	count=1
function	[function_1] subtype ||| [function_2] [function_1]	count=2
arg	symbol must be bound ||| environment symbol	count=2
function	pathname otherwise returns ||| pathname?	count=1
function	file type #t ||| type	count=1
arg	[arg_1] and returns ||| [arg_2] [arg_1]	count=1
function	procedure of no arguments ||| to string	count=1
function	length of the ||| string length	count=3
arg	[arg_1] to end1 ||| [arg_1] [arg_2]	count=4
arg	y ||| y	count=6
function	convert ||| >string	count=1
function	that contains ||| >wt	count=1
arg	calls thunk without ||| thunk after	count=1
function_arg	that describes the unicode [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	exact positive integer that ||| y size	count=1
function_arg	greatest common divisor ||| gcd n1	count=1
function	not ||| range	count=1
arg	symbol must be bound ||| symbol	count=3
function	a character otherwise returns ||| char?	count=1
function	a standard tree type ||| string wt type	count=1
arg	init the expressions ||| init	count=1
function	pair from ||| pair	count=1
function_arg	computation using the restart [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
arg	object is a ||| object	count=2
arg	a procedure accepting zero ||| caller	count=1
function	of all ||| all	count=1
function	del-assq! ||| association	count=1
module	their arguments' ||| 4.3.3	count=1
arg	buffer against [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	copy [arg_2] ||| [function_1] [arg_2]	count=1
function	new copy ||| new	count=1
function	flush-output operation ||| port flush output	count=1
function	will ||| no type	count=1
function	the input terminal mode ||| port set input terminal mode	count=1
function	procedure for writing ||| modifier	count=1
arg	equivalent to pathname but ||| pathname	count=1
function	which the directory component ||| directory	count=1
function	the unicode scalar values ||| scalar values	count=1
module	[module] a ||| [module]	count=9
function	part of ||| >symbol	count=1
function	a generalization [function_2] ||| [function_1] [function_2]	count=2
function_arg	methods for [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	#t [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] window on ||| [function_2] [function_1]	count=2
function	the unparser method ||| unparser	count=1
function	output terminal mode ||| port set output terminal mode	count=1
function	default [function_2] ||| [function_2] [function_1]	count=1
arg	copies the elements of ||| start2	count=1
function	particular variant [function_2] ||| [function_2] system [function_1]	count=1
function	reading the ||| record accessor	count=1
function_arg	then [arg_2] ||| [arg_2] [function_1]	count=3
function	file type #t if ||| type	count=1
function_arg	[function_1] to a ||| [function_1] [arg_2]	count=1
arg	with char2 ||| char2	count=1
function_arg	[function_1] [arg_2] ||| 11.6 rb tree [function_1] datum [arg_2]	count=3
function	of the type ||| type	count=2
function	bound outside ||| free	count=1
function	one of the standard ||| current	count=1
arg	end1 of [arg_2] ||| [arg_2] start1 [arg_1]	count=1
arg	[arg] into ||| [arg] start1 end1 string2	count=1
function	of the superclasses ||| class precedence	count=1
arg	is like ||| object	count=1
arg	car [arg_2] ||| [arg_2] [arg_1]	count=1
arg	execution of thunk ||| thunk	count=1
arg	position specified by pointer ||| pointer	count=1
arg	xml-name ||| xml-name	count=2
function	that indices ||| no range	count=1
function	a character ||| char?	count=1
function	otherwise they return #f ||| upper case?	count=1
function	returns the length of ||| wide string length	count=1
arg	element k of ||| string k char	count=1
function	that sources the characters ||| open wide input string	count=1
function	the extra ||| extra!	count=1
function_arg	#t [arg_2] ||| 6.2 [function_1] [arg_2]	count=2
function	of the properties ||| slot properties	count=1
function	[function] containing that ||| rb tree min [function]	count=1
arg	the procedure initialization ||| initialization	count=1
function	[function_1] to the ||| [function_2] [function_1]	count=1
function	an abstract type ||| type:error	count=1
function	[function_1] condition ||| [function_2] [function_1]	count=2
function	with the wrong number ||| condition type:wrong number	count=1
function_arg	the datum [arg_2] ||| [function_1] [arg_2]	count=1
arg	code in [arg_2] ||| [arg_2] end [arg_1]	count=1
function_arg	[function_1] target-filename that ||| [function_1] file source-filename [arg_2]	count=1
function	string representation of ||| regexp group	count=1
function	procedure ||| output	count=1
function	[function] referring ||| with temporary file [function]	count=3
function	is a concrete type ||| condition type:derived port	count=1
function_arg	[function_1] condition-type ||| [arg_2] [function_1]	count=7
function	input terminal [function_2] ||| [function_2] [function_1]	count=2
function	be recognized by ||| *unparse with maximum readability?*	count=1
function	standard tree ||| wt	count=2
function	may be any ||| >bit	count=1
arg	signalled when ||| condition	count=1
arg	[arg_1] to transformer ||| [arg_2] [arg_1]	count=1
arg	prompts the user ||| prompt	count=1
function	discard-matched ||| discard matched	count=1
arg	[arg] run ||| [arg]	count=1
function_arg	size of [arg_2] ||| [function_1] [arg_2]	count=5
function	the unparser method of ||| unparser method!	count=1
function	[function_1] savings ||| [function_2] [function_1]	count=1
function	bound to ||| environment	count=1
arg	if [arg] contains ||| [arg]	count=1
function	an output [function_2] ||| [function_1] [function_2]	count=4
function	extra ||| set entity extra!	count=1
function_arg	the prefix [arg_2] ||| [function_1] [arg_2]	count=1
arg	element k of string ||| string k	count=2
function	like substring->parser-buffer but buffers ||| string >parser	count=1
arg	creates an [arg_1] [arg_2] 1d-table ||| [arg_1] [arg_2]	count=1
function	procedure ||| to	count=1
function_arg	specified by [arg_2] ||| [function_1] option [arg_2]	count=1
function	integer may ||| integer >bit string	count=1
module	interned symbol whose name ||| 10.2	count=1
arg	operands which must be ||| operands	count=1
function	tree is empty ||| tree	count=1
function	returns an [function] ||| [function]	count=1
arg	[arg_1] of string1 ||| [arg_2] start1 [arg_1]	count=2
function	new tree containing ||| wt tree	count=2
function	is entered when ||| break	count=1
function_arg	[function_1] an existing ||| [arg_2] [function_1]	count=1
function	are changed to uppercase ||| upcase	count=1
arg	equality returning #t ||| datum=?	count=1
function	returns the name of ||| procedure name	count=1
function	hard link from ||| hard link file	count=1
function_arg	[function_1] input-port and ||| [arg_2] [function_1]	count=5
function	a new ||| wt	count=1
function_arg	characters [arg_2] ||| [function_1] >parser buffer [arg_2]	count=1
function	subprocess-abnormal-termination ||| signalled	count=1
arg	returns #t [arg] a red-black ||| [arg]	count=1
function	arbitrary objects ||| ephemeral eq hash table	count=1
function	output port suitable ||| output port	count=2
function_arg	limits for [arg_2] ||| [arg_2] [function_1]	count=1
function	inode number of the ||| file attributes inode number	count=1
arg	registers ||| registers n	count=1
function_arg	characters [arg_2] ||| [function_1] [arg_2]	count=1
function	the name ||| generic procedure name	count=1
arg	wt-tree ||| wt-tree	count=8
arg	[arg] as ||| [arg]	count=3
function	procedure of ||| with output to string	count=1
arg	environment1 ||| environment1	count=1
function	the direct [function_2] ||| [function_1] [function_2]	count=2
function	a generalization [function_2] ||| [function_2] [function_1]	count=2
function	the last change ||| change	count=1
arg	is ||| object object	count=1
module	the ||| 14.12.3	count=1
function	their arguments' types ||| no	count=1
function	returns the key ||| computed emp key	count=1
function	characters ||| input	count=2
function	in-lined primitives within the ||| no type checks	count=1
function_arg	terminal mode [arg_2] ||| [function_1] [arg_2]	count=8
function	associates ||| put!	count=1
function	m are non-negative integers ||| reduce operator	count=1
function	returns [function] containing ||| rb tree min [function]	count=1
arg	characters from start1 ||| start1	count=1
function_arg	stores [arg_2] ||| [function_1] string k [arg_2]	count=3
function	wrong number ||| condition type:wrong number	count=2
function	the prefix ||| prefix	count=1
arg	specified by mexp ||| mexp	count=1
function	returns the state component ||| port state	count=1
module	[module] the ||| [module]	count=10
function	line ||| line	count=2
arg	identifier1 and [arg_2] ||| [arg_1] environment2 [arg_2]	count=1
function	not a dispatch ||| guarantee dispatch	count=3
arg	first k ||| k	count=1
function	and ending at ||| bit substring move	count=1
function	a ||| xml name	count=3
arg	irritants ||| irritants	count=1
function	the ||| name	count=2
arg	graphics-device to [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	returns the datum [function_1] [arg_2] ||| 11.6 rb tree [function_1] [arg_2]	count=2
function	environment has a ||| environment has	count=1
function	output ||| set output	count=1
arg	writes the substring specified [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
arg	returns #t if ||| object	count=1
function	of a regular expression ||| regexp group	count=1
function	changes the output terminal ||| port set output terminal	count=1
function	output terminal ||| output terminal	count=2
arg	if symbol is bound ||| environment symbol	count=2
function	rb-tree ||| rb tree lookup	count=1
function	newly allocated bit ||| bit	count=1
function	returns the car ||| car	count=1
function	like substring->parser-buffer but buffers ||| >parser	count=1
function_arg	[function_1] of condition-type ||| [arg_2] [function_1]	count=4
function	input blocking mode ||| input blocking	count=1
function	a procedure for writing ||| record modifier	count=1
arg	copies ||| start2	count=1
function	first ||| find	count=1
function	[function_1] time of ||| [function_2] [function_1]	count=3
arg	x and [arg_2] ||| [arg_2] [arg_1]	count=2
function	arguments ||| thunk	count=1
arg	expression to the ||| variable init	count=1
function	this low-level procedure defines ||| command line parser!	count=1
function_arg	[function_1] name to ||| [arg_2] [function_1]	count=1
module	string ||| 6.8.1	count=1
function	inclusive and ending ||| substring	count=1
module	their arguments' types ||| 4.3.3	count=1
arg	defined by string ||| string	count=1
arg	their argument ||| q	count=2
arg	text from input-port ||| input-port	count=1
function	that [function_2] ||| [function_1] [function_2] no hang	count=1
function	by [function_2] ||| [function_1] [function_2]	count=1
function	concrete ||| type:derived port	count=1
arg	of methods ||| methods	count=1
arg	rb-tree or [arg_2] ||| [arg_2] [arg_1]	count=4
function	returns a hash-table ||| hash table	count=1
function_arg	size [arg_2] ||| [arg_2] [function_1]	count=4
arg	the expanded expression is ||| expression	count=2
function	[function_1] ephemeron ||| [function_2] [function_1]	count=1
function	is limited [function_2] ||| [function_2] [function_1]	count=2
function	bitwise-logical “and” ||| fix:and	count=1
module	converts an argument in ||| 15.5.4	count=1
function	the rehash size of ||| rehash size	count=1
function	a generalization of ||| general	count=1
function	the graphics ||| graphics	count=1
function_arg	compares the [arg_2] ||| [function_1] forward [arg_2]	count=1
function_arg	device object ||| device graphics-device-type object	count=1
module	buffer ||| 14.10	count=1
arg	accepting zero ||| caller	count=1
module	its keys or ||| 11.4.1	count=1
function	input port ||| input port	count=2
function	concrete type that ||| type:derived port	count=1
function	type [function_2] ||| [function_2] [function_1]	count=2
function	returns the continuation ||| continuation	count=1
function	the directory ||| directory pathname	count=1
arg	if-not-found must ||| if-not-found	count=1
function	the ||| type	count=1
arg	at end1 ||| end1	count=1
arg	[arg_1] graphics-device ||| [arg_2] [arg_1]	count=2
arg	copies the elements ||| start2	count=1
function_arg	as [arg_2] ||| [function_1] [arg_2]	count=1
arg	of wide-string as ||| wide-string	count=1
arg	the given command-line arguments ||| arguments	count=1
function	[function] of ||| [function] of	count=2
function_arg	[function_1] universal-time ||| [arg_2] [function_1]	count=4
function	the elements ||| vector >list	count=1
function_arg	passing it [arg_2] ||| [arg_2] [function_1]	count=1
function	changes the input blocking ||| port set input blocking	count=1
module	holds its keys or ||| 11.4.1	count=1
function_arg	[function_1] if filename ||| [function_1] [arg_2]	count=1
function	[function_1] of car ||| [function_2] [function_1]	count=2
function_arg	current computation using the [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	input blocking ||| set input blocking mode	count=1
function	a newly allocated list ||| table datum list	count=1
arg	string start ||| string start	count=3
arg	specified substring against buffer's ||| buffer string	count=1
arg	returns a ||| object	count=1
function_arg	[function_1] rb-tree or ||| [arg_2] [function_1]	count=5
arg	type condition-type ||| condition-type	count=1
arg	a character ||| index	count=1
arg	specified by pathname ||| pathname	count=1
function	will not ||| no type	count=1
function	invokes the write ||| write	count=1
arg	[arg] if ||| [arg]	count=3
arg	graphics-device to ||| graphics-device	count=2
arg	of a [arg_2] ||| [arg_1] [arg_2]	count=1
arg	(if generalization ||| name generalization	count=1
function	input [function_2] ||| [function_2] [function_1]	count=13
arg	for which predicate ||| predicate list	count=1
function	tree type ||| string wt type	count=2
function	that ||| 2d	count=1
arg	terminated by initial-value ||| initial-value procedure list1 list2	count=1
arg	[arg_1] to end1 ||| [arg_2] [arg_1]	count=4
function	a normal value ||| lookup	count=1
function_arg	limits for graphics-device ||| limits graphics-device	count=2
function_arg	stores [arg_2] ||| [function_1] vector [arg_2]	count=2
function_arg	the slot [arg_2] ||| [arg_2] [function_1]	count=2
function	is typically ||| format error	count=1
arg	pointer in terms of ||| pointer	count=1
function	the graphics device window ||| window	count=1
function	accessor [function_2] ||| [function_1] [function_2]	count=3
function	input blocking ||| input blocking mode	count=1
function	a procedure for testing ||| record predicate	count=1
function	will not check ||| no range	count=1
function	be ||| with output to	count=1
function	current ||| set current	count=1
arg	cdr component of weak-pair ||| weak-pair	count=1
arg	bulk of a ||| name	count=1
arg	error if object is ||| object	count=3
function	and extracts the contents ||| condition accessor	count=1
function	daylight [function_2] ||| [function_1] [function_2]	count=2
arg	in element k ||| k char	count=1
function	component is represented as ||| as	count=1
function	[function_1] values ||| [function_1] [function_2]	count=3
function_arg	converted to a ||| directory pathname	count=1
function	environment that's the ancestor ||| environment	count=1
arg	char1 with ||| char1	count=1
function	[function_1] an ||| [function_2] [function_1]	count=4
arg	[arg_1] [arg_2] ||| 15.3 set file times! [arg_1] [arg_2]	count=12
arg	that [arg] ||| [arg]	count=3
arg	returns #t [arg] a ||| [arg]	count=2
function_arg	[function_1] bytes ||| [arg_2] [function_1]	count=1
function	the bitwise-logical “and” ||| fix:and	count=1
function	pathname ||| pathname	count=4
function	generic's [function] generator and ||| set generic procedure [function]	count=1
function	numeric ||| number	count=1
function	list ||| table datum list	count=1
arg	and ||| key	count=3
function	the properties ||| properties	count=1
function	[function] by string ||| write [function]	count=1
function	be a procedure of ||| to	count=1
function	must be ||| output to	count=1
function_arg	limited to [arg_2] ||| [arg_2] [function_1]	count=1
arg	exact integer ||| integer	count=1
function	argument that ||| type:bad range argument	count=1
arg	hash-table as ||| hash-table	count=1
function	a new copy ||| new	count=1
function_arg	cursor for [arg_2] ||| [arg_2] [function_1]	count=6
arg	with zeroes if initialization ||| initialization	count=1
function	the type ||| type	count=3
function	for an ||| prompt for	count=1
function	and ||| procedure	count=1
arg	key in [arg_1] [arg_2] ||| datum [arg_1] [arg_2]	count=2
module	expression ||| 6.8.1	count=1
arg	[arg_1] bound in ||| 13.1 environment bound? [arg_2] [arg_1]	count=3
module	returns a list consisting ||| 7.4	count=1
module	in universal-time ||| 15.5.1	count=1
arg	1 cons* [arg] similar ||| [arg]	count=1
arg	is the symbol ||| object	count=1
module	list consisting ||| 7.4	count=1
function	for a value that ||| value	count=1
function_arg	[function_1] source-filename ||| [function_1] [arg_2]	count=2
function	hold data ||| table entry type:key	count=1
function	arbitrary objects ||| strong eq hash table	count=1
function	the tree is ||| rb tree	count=1
arg	k of string ||| k	count=3
function_arg	and [arg_2] ||| [arg_2] [function_1]	count=3
arg	or [arg] tree ||| rb-tree [arg]	count=1
arg	expanded expression is ||| expression	count=2
function_arg	tree [arg_2] ||| [arg_2] [function_1]	count=2
function	type represented ||| record type	count=1
function	may be ||| integer >bit	count=1
arg	car ||| car	count=1
function	nesting of lists and ||| depth	count=1
function	to save ||| save	count=1
arg	[arg_1] k of ||| [arg_2] [arg_1]	count=2
function	must be a string ||| group	count=1
function_arg	the contents [function_1] [arg_2] ||| byte [function_1] [arg_2]	count=4
function	a method ||| method	count=1
function	representation of a regular ||| group	count=1
function	bind the drawing ||| bind drawing	count=1
function	the directory ||| directory	count=2
function_arg	[function_1] command-line arguments ||| [function_1] program [arg_2]	count=1
function_arg	character [arg_2] ||| [function_1] [arg_2]	count=1
arg	of one argument ||| vector	count=1
arg	calls thunk without arguments ||| thunk after	count=1
arg	rb-tree [arg_2] ||| [arg_2] [arg_1]	count=2
function	that is of the ||| type:bad range	count=1
arg	command-line arguments ||| arguments	count=1
module	its keys or data ||| 11.4.1	count=1
function	is the ||| condition	count=1
module	in ||| 15.5.1	count=1
arg	to output-port and ||| output-port	count=1
arg	with a [arg] and an ||| [arg]	count=1
function_arg	[function_1] char-set ||| 5.6 [function_1] [arg_2]	count=2
function	this procedure calls procedure [function_1] [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] operands ||| [arg_2] [function_1]	count=2
module	fresh locations holding ||| 2.2	count=2
arg	of generic-procedure ||| generic-procedure	count=2
arg	buffer against ||| buffer	count=1
function	of the direct superclasses ||| direct superclasses	count=1
function	that contains the same ||| alist >wt	count=1
arg	from port and return ||| port	count=1
arg	bit-string-1 ||| bit-string-1	count=1
module	output flushing and ||| 14.5	count=2
arg	rb-tree-2 [arg_2] ||| [arg_1] [arg_2]	count=1
function	concrete type ||| type:derived port	count=1
function	subset ||| file namestring	count=1
arg	procedure thus [arg] must have ||| [arg]	count=1
function	scalar ||| scalar	count=1
function	is [function_2] ||| [function_2] [function_1]	count=9
function	the write ||| write	count=1
function	same bits otherwise ||| string=?	count=1
function	this variable controls ||| create editor args	count=1
function	multiple values the device ||| device	count=1
arg	char2 in the original ||| char2	count=1
function_arg	prefix of [arg_2] ||| [arg_2] [function_1]	count=1
function	of no ||| output to string	count=1
function	default generator ||| default generator	count=2
function	threshold ||| threshold	count=1
function	closes [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1785
arg	thunk and returns ||| thunk	count=1
function	integer may ||| signed integer >bit	count=1
function	list of iso-8859-1 characters ||| list	count=1
module	of no arguments ||| 14.3	count=1
arg	the specified x y ||| x y	count=1
function_arg	writes the [function_1] [arg_2] to ||| [function_1] string [arg_2]	count=1
function	be a procedure of ||| output to string	count=1
arg	char to output-port ||| output-port	count=1
arg	must ||| hash-table	count=1
function	state component of ||| port state!	count=1
function	object that has ||| object	count=1
function	the access [function_2] ||| [function_2] [function_1]	count=2
function	of condition-type subprocess-abnormal-termination ||| stopped	count=1
function	[function_1] possible ||| [function_2] [function_1]	count=8
function	a [function] ||| eq [function]	count=1
function_arg	[function_1] k ||| [arg_2] [function_1]	count=8
function	the variables [function] the ||| [function]	count=1
arg	two strings substrings ||| string1 string2	count=2
function	syntax ||| let* syntax	count=2
function	integer and integer may ||| signed integer >bit string	count=1
function	a newly allocated list ||| list	count=2
function	[function_1] string ||| [function_1] [function_2]	count=3
function	procedure of no arguments ||| to	count=1
function	may be any ||| signed integer >bit	count=1
arg	of clist ||| clist	count=1
function	sources the characters of ||| input string	count=1
function	prefix of ||| prefix	count=1
function	type of record ||| type	count=1
function	a procedure of ||| output to string	count=1
function_arg	specializers [arg_2] ||| [arg_2] [function_1]	count=1
function	the block will ||| range	count=1
function_arg	output terminal [arg_2] ||| [function_1] [arg_2]	count=3
function	the input blocking ||| input blocking mode	count=1
function	port suitable ||| port	count=1
function	not check that indices ||| range	count=1
function_arg	[function_1] [arg_2] ||| [function_1] unparser method! [arg_2]	count=21
function	state component ||| state	count=1
arg	of list with predicate ||| predicate	count=1
arg	[arg_1] copies the ||| [arg_1] [arg_2]	count=1
function	extracts the ||| accessor	count=1
function	deletes ||| delete	count=1
function	output ||| with output	count=2
function	an exact non-negative integer ||| tree size	count=1
function_arg	[function_1] code ||| [function_1] string start end [arg_2]	count=1
arg	each [arg] operand ||| [arg]	count=1
function	threshold of ||| threshold	count=1
function	#t ||| port?	count=1
function_arg	the properties [arg_2] ||| [function_1] [arg_2]	count=1
function	thunk ||| to string	count=1
function	name of ||| generic procedure name	count=1
arg	filename is an ||| filename	count=1
function	file for input ||| with input file	count=1
arg	an xml [arg] ||| [arg]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] procedure [arg_2]	count=2
function	rectangle of the ||| copy area	count=1
arg	[arg_1] copies the ||| [arg_2] [arg_1]	count=1
function	returns the symbol part ||| >symbol	count=1
function	returns the rehash ||| table rehash	count=2
function	a generic procedure is ||| condition	count=1
function	an exact ||| wt tree size	count=1
function	an evaluated [function_2] ||| [function_2] [function_1]	count=1
function	one of ||| current	count=1
function	closes display ||| graphics close	count=1
arg	end [arg_2] ||| 14.9.4 write substring [arg_2] string start [arg_1]	count=1
function	be ||| symbol hash mod	count=1
function	concrete type that is ||| type:derived port	count=1
function	for output ||| with output file	count=1
module	wt-tree that have ||| 11.7.3	count=2
function	tree [function_2] ||| [function_2] [function_1]	count=9
function	any [function] that isn't ||| rexp not word [function]	count=1
module	converts an ||| 15.5.4	count=1
function	a macro transformer as ||| macro transformer	count=2
function	condition object as ||| condition	count=1
function	this low-level procedure ||| parser!	count=1
function	the fresh-line ||| fresh line	count=1
function	newly allocated uninterned symbol ||| string >uninterned symbol	count=1
function	underflow ||| underflow	count=1
function	character is ready on ||| char ready?	count=1
function_arg	and on [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] and cdr ||| [function_1] [function_2]	count=4
function	part of ||| xml name >symbol	count=1
function	the rehash size of ||| hash table rehash size	count=1
arg	of string1 ||| string1	count=1
arg	advice ||| advice	count=2
module	of midnight january ||| 15.5.1	count=1
function	replace all occurrences ||| string replace	count=1
function	changes the input terminal ||| input terminal mode	count=1
function	check ||| no range	count=1
arg	improper list ||| list	count=1
function	blocking [function_2] ||| [function_2] [function_1]	count=2
function_arg	numerator of [arg_2] ||| [function_1] [arg_2]	count=1
arg	and end [arg_2] ||| 14.9.4 write substring [arg_2] string start [arg_1]	count=1
function_arg	the flush-output [arg_2] ||| [function_1] [arg_2]	count=1
function	position of a ||| move	count=1
arg	thunk is to ||| thunk	count=1
function	of the datums in ||| datum	count=1
function	defines ||| environment define	count=1
function	symbol part of ||| xml name	count=1
function_arg	[function_1] solid at ||| [function_1] x y [arg_2]	count=4
arg	[arg_1] height to ||| [arg_1] [arg_2]	count=6
function_arg	define the [arg_2] ||| [function_1] color [arg_2] spec	count=3
arg	element k [arg_2] ||| [arg_2] [arg_1]	count=2
function	key under the wt-tree's ||| delete	count=1
function	removes all associations in ||| clear!	count=1
function	buffer ||| output	count=1
function	input [function_2] ||| [function_1] [function_2]	count=13
arg	pexp is an expression ||| pexp	count=1
arg	with x-key ||| x-key	count=1
function_arg	last pair [arg_2] ||| [arg_2] [function_1]	count=1
arg	filename as an exact ||| filename	count=1
function	a procedure of ||| with	count=1
function	will not check that ||| range	count=1
function	arbitrary objects as ||| strong eq	count=1
arg	an output port ||| port	count=1
function	returns the procedure of ||| procedure	count=1
function	hold [function_2] ||| [function_1] [function_2]	count=3
function	last modification ||| modification	count=1
function	[function] given ||| [function] reference	count=1
function	do not appear as ||| difference	count=1
function	[function_1] strongly ||| [function_2] [function_1]	count=1
arg	hash-table is a type ||| hash-table	count=1
function	of the direct ||| class direct	count=1
function	rehash threshold ||| rehash threshold	count=1
function	error or a specialization ||| type error?	count=1
function	[function_1] the drawing ||| [function_1] [function_2]	count=1
arg	[arg] initialized ||| [arg]	count=1
function	this low-level procedure ||| line parser!	count=1
arg	was passed ||| operator operand	count=1
function	under the wt-tree's ordering ||| delete	count=1
function	datum ||| datum	count=1
function	generic's ||| remove generic procedure generator	count=1
function	be ||| string	count=1
arg	substring defined by string ||| string	count=1
function	the datum associated ||| get	count=1
function_arg	the slot [arg_2] ||| [function_1] modifier method [arg_2]	count=1
function	part of the let* ||| let*	count=1
function	must be ||| regexp group	count=1
function	hold both keys and ||| entry type:key	count=1
function	the following character ||| read char	count=1
arg	output-port and returns ||| output-port char	count=1
function	on the nesting ||| list depth	count=1
arg	internal pointer of buffer ||| buffer	count=1
function	the rehash ||| rehash	count=2
function	the input terminal ||| port input terminal	count=2
function	the name of ||| class name	count=1
arg	[arg_1] object ||| [arg_1] [arg_2]	count=10
function	syntax of let*-syntax ||| syntax	count=1
function_arg	entry of [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] bound to ||| [arg_2] [function_1]	count=5
function	properties ||| properties	count=1
function	the block will ||| no type	count=1
arg	the corresponding init ||| init	count=1
arg	slot [arg] in ||| instance [arg]	count=1
arg	into [arg] starting at ||| bit-string-1 start1 end1 [arg]	count=1
arg	environment ||| environment	count=2
function	same bits ||| string=?	count=1
function	values the device ||| device	count=1
arg	on graphics-device whose ||| graphics-device	count=1
function	hold keys [function_2] ||| [function_2] [function_1]	count=4
function	a procedure for writing ||| modifier	count=1
function	closes all ||| close all	count=3
function_arg	[function_1] [arg_2] position ||| [function_1] [arg_2] image im-x im-y w	count=3
function	to del-assv or del-assq! ||| association procedure	count=1
function	bindings of the ||| environment bindings	count=1
arg	x [arg] ||| x [arg]	count=1
module	appends ||| 9.3	count=1
function	state component ||| port state	count=1
arg	converts a time-string ||| time-string	count=1
function	[function_1] tree ||| [function_2] [function_1]	count=3
arg	first expression ||| expression	count=1
arg	of weak-pair ||| weak-pair	count=3
function	format ||| time	count=2
function	return the numerator ||| numerator	count=1
arg	width and [arg_2] ||| [arg_2] [arg_1]	count=6
function	returns the class ||| slot class	count=1
arg	type condition-type or ||| condition-type	count=1
arg	vector ||| vector	count=1
arg	to port ||| port	count=1
function	unspecified ||| set	count=1
function_arg	drawing mode [arg_2] ||| [function_1] graphics-device [arg_2]	count=2
module	of a regular expression ||| 6.8.1	count=1
arg	k ||| string k char	count=1
function	procedure ||| x	count=1
function_arg	procedure [arg_2] ||| [arg_2] [function_1]	count=4
arg	of xml-name as ||| xml-name	count=2
arg	of the pexp ||| pexp	count=1
function	arity of ||| procedure arity	count=2
function	an unspecified result ||| car!	count=1
arg	the elements of list ||| initial list	count=3
function	[function_1] number ||| [function_1] [function_2]	count=6
function	integer may be any ||| integer >bit string	count=1
function	[function_1] [function_2] ||| [function_1] ephemeral eq [function_2]	count=1
arg	of weak-pair [arg_2] ||| [arg_2] [arg_1]	count=6
function	descriptor representing [function_2] ||| [function_2] [function_1]	count=6
arg	in decoded-time format to ||| decoded-time	count=1
function	not check ||| type	count=1
function	action [function] each ||| [function]	count=1
function	a procedure of no ||| with output to	count=1
arg	in element k ||| k	count=3
arg	predicate returns ||| predicate list list	count=1
module	a pathname otherwise ||| 15.1.3	count=1
module	their ||| 4.3.3	count=1
function	strongly [function_2] ||| [function_2] [function_1]	count=1
arg	of the specified field-name ||| field-name	count=1
function_arg	the elements [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	characters read [arg_2] ||| [function_1] >parser buffer [arg_2]	count=1
function_arg	not check for reference-trap [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	xmlns-uri is the uri ||| uri	count=1
arg	if ||| object	count=1
function	the inode number of ||| file attributes inode number	count=1
module	changes ||| 17.9.3	count=1
module	effects [module] ||| [module]	count=1
function_arg	[function_1] a ||| [function_1] windows type [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| 11.6 rb tree [function_1] [arg_2]	count=6
function	arguments' ||| no	count=1
arg	[arg] substring ||| input-port string start [arg]	count=1
function	procedure of ||| with output to	count=1
function	a ||| char?	count=1
arg	symbol must be ||| environment symbol	count=2
function_arg	days possible [arg_2] ||| [function_1] [arg_2]	count=1
function	be a ||| with output	count=1
arg	read from port ||| port	count=1
arg	and y-key ||| y-key	count=1
arg	by x and ||| x	count=2
module	a string ||| 6.8.1	count=1
function	device types ||| types	count=1
function	the standard categories ||| condition type:derived file error	count=1
function	defines ||| define	count=1
function	write operation ||| write	count=1
arg	to port using ||| port	count=1
module	not check their arguments' ||| 4.3.3	count=1
function	concrete type that is ||| type:derived	count=1
function	write operation on ||| port write char	count=1
function	[function] output ||| output buffer [function]	count=1
function	regular expression ||| regexp group	count=1
function	that indices are ||| no	count=1
function	buffer so that it ||| buffer	count=2
module	[module] as an ||| [module]	count=1
arg	start1 inclusive ||| start1	count=1
function	descriptor representing the ||| descriptor	count=1
function_arg	the operation [arg_2] ||| [arg_2] [function_1]	count=1
function	accepts arbitrary objects as ||| weak eq hash table	count=1
arg	copies [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	a method ||| define method	count=1
function	otherwise out [function_2] ||| [function_2] [function_1]	count=1
arg	compare strings substrings ||| string1 string2	count=1
arg	datum [arg_2] ||| [arg_2] [arg_1]	count=1
function	reads a single line ||| read	count=1
function_arg	[function_1] environment free-names ||| [arg_2] [function_1]	count=1
arg	an association in wt-tree-2 ||| wt-tree-2	count=1
arg	port to ||| port	count=4
function	[function_1] not ||| [function_2] word [function_1]	count=1
function	with ||| 2d	count=1
arg	bound in ||| bound	count=2
function	[function_1] tag ||| [function_2] [function_1]	count=3
function	[function_1] just prior ||| [function_1] [function_2]	count=1
arg	[arg_1] elements of ||| [arg_2] [arg_1]	count=2
function	length ||| length	count=7
function	returns the input ||| port input	count=2
function	returns the car ||| weak car	count=1
function	rehash ||| hash table rehash	count=2
function	the same bits otherwise ||| string=?	count=1
function	[function_1] limits for ||| [function_1] [function_2]	count=5
module	returns the [module] ||| [module]	count=3
function	invokes the flush-output ||| flush output	count=1
function	that indices ||| no	count=1
arg	cons* [arg] similar ||| [arg]	count=1
arg	signalled when port ||| port condition	count=1
function	epoch ||| epoch	count=1
function	numerator ||| numerator	count=1
arg	signals an error ||| caller	count=1
function	have keys appearing as ||| intersection	count=1
arg	predicate is true returns ||| predicate list	count=1
function	the first ||| find	count=1
function_arg	stores [arg_2] ||| [function_1] string start end [arg_2]	count=3
function	an exact non-negative integer ||| wt tree size	count=1
function_arg	[function_1] environment free-names ||| -1 make [function_1] [arg_2]	count=1
function_arg	[function_1] thunk ||| [function_1] [arg_2]	count=1
function_arg	elements of [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	direct superclasses [arg_2] ||| [function_1] [arg_2]	count=1
module	must be a string ||| 6.8.1	count=1
function	a concrete type ||| type:derived port	count=1
function	integer may be ||| signed integer >bit string	count=1
arg	of type condition-type and ||| condition-type	count=1
function	the dispatch ||| dispatch	count=1
arg	server-socket ||| server-socket block?	count=1
function	buffer's ||| buffer string	count=1
function	string ||| string append	count=2
function	return #t if ||| input port type?	count=1
arg	key [arg_1] [arg_2] tree is empty ||| [arg_1] [arg_2]	count=1
arg	object representing the given ||| second minute hour day month year	count=1
arg	registers must be ||| string registers n	count=1
function_arg	[function_1] procedure with ||| [function_1] input file [arg_2]	count=1
function	referring [function] given ||| [function] reference	count=1
module	1 ||| 15.5.1	count=1
arg	takes a filename ||| filename	count=2
function	list of the elements ||| >list	count=1
arg	weak-pair to [arg_2] ||| [arg_2] [arg_1]	count=6
arg	the length of clist ||| clist	count=1
function	[function] ports and ||| set [function] input	count=1
function	nesting of ||| list depth	count=1
arg	end to ||| end	count=1
function	a ||| to string	count=1
function_arg	[function_1] name to ||| [function_1] color [arg_2] spec	count=1
arg	bit-string to ||| bit-string	count=1
module	[module] is an ||| [module]	count=1
function	returns ||| name	count=1
function	to ||| ignore	count=2
function	on the nesting of ||| depth	count=1
arg	named font-name ||| font-name	count=1
function	return the day ||| day	count=1
function	[function_1] uri ||| [function_1] [function_2]	count=2
function	must be a ||| to	count=1
module	this is a ||| 16.7	count=1
function_arg	contains the [arg_2] ||| [arg_2] [function_1]	count=1
function	the type of operating ||| operating	count=1
function	indices are valid ||| range	count=1
function	output and standard error ||| output	count=1
arg	specified by pointer ||| pointer	count=1
function	not check that ||| range	count=1
function	a procedure [function_2] ||| [function_1] [function_2] arity? object	count=1
function_arg	[function_1] of generic-procedure ||| [function_1] [arg_2]	count=2
module	[module] the associations ||| [module]	count=1
function	operating ||| operating	count=2
function	but is ||| condition type:datum	count=1
arg	a list of methods ||| methods	count=1
function	is not the start ||| not	count=1
arg	the car of weak-pair ||| weak-pair	count=1
function	has been garbage-collected otherwise ||| pair car?	count=1
function	environments and [function] ||| environment [function]	count=3
function_arg	flush-output operation [arg_2] ||| [arg_2] [function_1]	count=1
arg	procedure ||| procedure initial	count=3
function	gc ||| gc	count=1
arg	variables ||| variables	count=2
function	[function_1] condition object ||| [function_2] [function_1]	count=2
function	record?) ||| record class	count=1
arg	in wt-tree ||| wt-tree	count=3
function	referring to ||| file	count=1
function	restart named [function] ||| [function]	count=1
function	[function] generator ||| set generic procedure [function]	count=1
function	invokes the flush-output operation ||| port flush output	count=1
function	has a ||| environment has	count=1
arg	by string [arg_2] ||| [arg_2] [arg_1]	count=6
function	match the specified ||| match parser buffer string	count=1
function_arg	may [arg_2] ||| [function_1] length [arg_2]	count=1
function	elements of ||| >list	count=1
arg	target-filename that points ||| target-filename	count=1
function	procedure of no ||| output	count=1
arg	[arg_1] to transformer ||| [arg_1] symbol [arg_2]	count=1
function	match the specified substring ||| match	count=1
function	that the output is ||| with output	count=1
function	include the bindings ||| environment bindings	count=1
function	of string ||| vector	count=1
function	output-port ||| port write substring	count=1
arg	[arg_1] x-key ||| [arg_2] [arg_1]	count=1
function	character in ||| char	count=1
function	returns the symbol ||| >symbol	count=1
arg	element [arg] ||| [arg]	count=2
function	type of record ||| record type	count=1
function	in which the directory ||| directory	count=1
function	procedure of ||| with output	count=1
function	operation ||| operation	count=2
function	returns the arity ||| arity	count=3
function	one or more instances ||| rexp+	count=1
module	a character ||| 5.3	count=1
function	accepts arbitrary objects ||| weak eq hash	count=1
function	be ||| to	count=1
function_arg	applicable methods [arg_2] ||| [arg_2] [function_1]	count=1
function	standard tree type ||| wt type	count=3
arg	weak-pair [arg_2] ||| [arg_1] [arg_2]	count=6
function	[function_1] string ||| [function_2] [function_1]	count=3
function	the length ||| attributes length	count=1
function_arg	condition-type is [arg_2] ||| [arg_2] [function_1]	count=1
function	returns [function] ||| rb tree min [function]	count=1
function	returns the contents ||| ref	count=1
function	is a concrete type ||| type:derived	count=1
function_arg	[function_1] [arg_2] ||| [function_1] graphics-device [arg_2]	count=8
function	moves the cursor for ||| cursor	count=1
function_arg	[function_1] bytes a ||| 17.8 image fill [function_1] byte vector image [arg_2]	count=1
arg	that is signalled when ||| condition	count=1
arg	if-not-found must be ||| if-not-found	count=1
function	must be a string ||| regexp	count=1
arg	if-not-found ||| if-not-found	count=1
function	sources the characters ||| open wide input string	count=1
module	allocates ||| 10.7.2	count=1
function	returns ||| xml	count=1
arg	x y ||| x y	count=4
function	pathname otherwise returns #f ||| pathname?	count=1
function	the input blocking ||| port set input blocking	count=1
function	hash-table [function_2] ||| [function_2] [function_1]	count=1
module	block ||| 4.3.3	count=2
function	hold both keys and ||| table entry type:key datum	count=1
arg	from alist all ||| alist	count=1
arg	start1 ||| start1	count=2
function	character of ||| syntax char	count=1
function_arg	and [arg_2] ||| [function_1] hash table [arg_2]	count=1
function	accepts arbitrary objects ||| strong eq	count=1
function	object is [function] ||| [function]	count=2
function	of string and returns ||| vector	count=1
arg	compares ||| initial-size	count=3
arg	universal-time ||| universal-time	count=1
function	returns the symbol part ||| name >symbol	count=1
arg	char in element k ||| string k char	count=1
arg	filename as an ||| filename	count=1
function	[function_1] the slot ||| [function_2] [function_1]	count=4
function	syntax ||| syntax	count=1
function	the file type #t ||| file attributes type	count=1
arg	thus [arg] must have ||| [arg]	count=1
arg	k that ||| stream k	count=1
function	arbitrary objects ||| ephemeral eq	count=1
module	a procedure of ||| 14.3	count=1
function	bind the current ||| current	count=1
function_arg	string consisting ||| string unicode-char	count=1
function	of restarts ||| restarts	count=1
arg	hash-table as an exact ||| hash-table	count=1
function	list [function] contains ||| [function]	count=1
function	must be ||| with	count=1
arg	at index start1 ||| start1	count=1
function	abs ||| abs	count=1
function	that indices are ||| no range	count=1
function	writes ||| write	count=2
function	tail ||| stream tail	count=2
function_arg	[function_1] code ||| [arg_2] [function_1]	count=2
function_arg	[function_1] input-port and ||| [function_1] [arg_2]	count=5
arg	[arg_1] with x-key ||| [arg_2] y-key [arg_1]	count=1
arg	the specified [arg] ||| [arg]	count=1
module	block will ||| 4.3.3	count=2
arg	end1 ||| end1	count=2
function	the rehash size ||| hash table rehash size	count=1
function	record representing a complete [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	match the ||| match parser buffer	count=1
arg	element k of ||| string k	count=2
function	bindings of ||| environment bindings	count=1
arg	[arg_1] [arg_2] of its ancestor environments ||| 13.1 environment bound? [arg_2] [arg_1]	count=3
function	the specializers ||| method specializers	count=1
function	is otherwise ||| condition type:datum	count=1
arg	be unparser-method ||| unparser-method	count=1
module	signalling ||| 16.1	count=1
function	[function_1] input ||| [function_1] [function_2]	count=1
arg	which predicate is ||| predicate	count=1
function	output terminal mode of ||| set output terminal	count=1
arg	a typical [arg_2] ||| [arg_2] [arg_1]	count=2
function	symbol part ||| >symbol	count=1
arg	chars which must be ||| chars	count=1
arg	each alternative must ||| alternative	count=1
function	newly allocated list ||| table datum list	count=1
function	is bound to the ||| initial environment	count=1
arg	in element k ||| k unicode-char	count=1
module	midnight january ||| 15.5.1	count=1
function	a ||| string	count=1
module	otherwise returns ||| 15.1.3	count=1
function_arg	the length [arg_2] ||| [function_1] [arg_2]	count=4
function	symbol ||| xml	count=1
function	direct [function_2] ||| [function_1] [function_2]	count=2
function	macro [function_2] ||| [function_2] [function_1]	count=8
function	integer may be any ||| signed integer >bit string	count=1
function	must ||| regexp	count=1
arg	terminated by ||| list1 list2	count=1
function	is represented as ||| pathname as file	count=1
function	searches string for ||| search forward	count=1
function	invokes the fresh-line ||| output port fresh line	count=1
function	argument to file-time ||| >file	count=1
arg	of wt-tree ||| wt-tree	count=3
arg	field field-name ||| field-name	count=1
function	to ||| display	count=1
function	[function_1] pair ||| [function_1] [function_2]	count=1
function	sets the internal ||| set parser buffer pointer!	count=1
module	everything ||| 14.3	count=1
function	[function_1] blocking ||| [function_2] [function_1]	count=6
arg	of pointer ||| pointer	count=1
function	file type ||| attributes type	count=1
function	[function] of the ||| [function]	count=3
function	of days possible ||| max days	count=1
arg	datum [arg_2] ||| [arg_2] y-key [arg_1]	count=1
function_arg	is [arg_2] ||| [arg_2] [function_1]	count=1
function	that ||| read	count=1
function_arg	[function_1] procedure with ||| [function_1] pathname [arg_2]	count=2
function	returns a [function_2] ||| [function_1] [function_2]	count=1
function	returns ||| char?	count=1
function	arity ||| procedure arity	count=2
function	method and ||| method procedure	count=2
function_arg	argument in [arg_2] ||| [function_1] [arg_2]	count=1
function	user for an ||| for	count=1
function_arg	[function_1] bit-string ||| [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] condition-type [arg_2]	count=3
function	for reference-trap objects when [function_1] [function_2] ||| [function_2] [function_1] traps	count=1
function	concrete type that is ||| type:derived port error	count=1
function	[function_1] compares ||| [function_1] ephemeral eq [function_2]	count=1
arg	pathname1 ||| pathname1	count=1
function	tree's [function] ||| [function]	count=1
arg	[arg_1] in rb-tree ||| [arg_2] [arg_1]	count=8
arg	[arg_1] if-not-found must ||| [arg_1] if-found [arg_2]	count=4
arg	all [arg] ||| procedure [arg]	count=6
function	arguments ||| guarantee thunk	count=1
function	with one ||| with current	count=1
function	returns the procedure ||| procedure	count=3
arg	[arg_1] [arg_2] ||| [arg_2] end [arg_1]	count=3
arg	[arg_1] and ||| [arg_1] [arg_2]	count=1
arg	to end1 ||| end1	count=1
function	[function_1] operating ||| [function_2] system [function_1]	count=1
module	generators and returns an ||| 12.6.2	count=2
function	the unparser method ||| unparser method!	count=1
function_arg	returns the [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
function	changes the output ||| set output	count=1
function	the global ||| global	count=1
function_arg	the numerator [arg_2] ||| [function_1] [arg_2]	count=1
module	an [module] ||| [module]	count=1
arg	by k that is ||| stream k	count=1
function	deletion procedure ||| delete	count=1
arg	the characters from start1 ||| start1	count=1
arg	[arg_1] and cdr ||| [arg_2] [arg_1]	count=1
function	mit/gnu scheme system library ||| system library	count=1
arg	symbol [arg] is ||| [arg]	count=1
arg	character k of string ||| string k	count=1
function	`#f' otherwise ||| arity valid?	count=1
function	returns the first ||| find	count=1
function	and integer may be ||| signed integer >bit string	count=1
arg	copies the [arg_2] ||| [arg_2] [arg_1]	count=1
arg	string start [arg_2] ||| [arg_1] [arg_2]	count=5
function	the classes ||| specializer classes	count=1
arg	bound to transformer ||| environment symbol transformer	count=2
function_arg	properties of [arg_2] ||| [function_1] [arg_2]	count=1
function	a newly allocated bit ||| bit	count=1
function	epoch is the ||| epoch	count=1
function	returns ||| string	count=2
arg	record-type must be ||| record-type	count=1
function_arg	input terminal [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] class ||| [function_1] list [arg_2]	count=3
module	utc in universal-time ||| 15.5.1	count=1
function	stores char in element ||| set!	count=1
function_arg	threshold [arg_2] ||| [function_1] [arg_2]	count=1
function	changes the input terminal ||| input terminal	count=1
arg	of the elements of ||| initial list	count=1
arg	the internal pointer past ||| buffer	count=1
function	a subtype of ||| type:subprocess	count=2
arg	element k ||| string k	count=2
function_arg	[function_1] as alist ||| [function_1] [arg_2]	count=1
function	argument that is of ||| type:bad range argument	count=1
function	character ||| match parser buffer char	count=1
function_arg	[function_1] bit-string ||| [arg_2] [function_1]	count=3
function	that indices are ||| range	count=1
function	the write ||| port write char	count=1
function_arg	[function_1] [arg_2] ||| [function_1] type error? [arg_2]	count=4
function	by error after it ||| error handler	count=1
function_arg	[function_1] specified x ||| [function_1] [arg_2]	count=1
module	interned ||| 10.2	count=1
function	contents as ||| wide string >string	count=1
arg	destructively copies the elements ||| start1 end1 vector2 start2	count=1
module	side effects [module] ||| [module]	count=1
function	returns the specializers of ||| specializers	count=1
function	a string representation of ||| regexp group	count=1
function	values ||| values	count=3
function	rehash threshold of ||| rehash threshold	count=1
function_arg	[function_1] in month ||| [arg_2] [function_1]	count=5
module	in universal-time format ||| 15.5.1	count=1
function	representation of a ||| regexp group	count=1
arg	[arg] if-not-found ||| 1d-table [arg] if-found	count=3
function	size of ||| size	count=3
function	is entered when procedure ||| break	count=1
function	sources the characters ||| wide input string	count=1
function	a procedure of ||| with output to string	count=1
function	the input [function_2] ||| [function_2] [function_1]	count=12
function	with the largest ||| max	count=1
module	which condition ||| 16.5.2	count=1
arg	rb-tree or ||| rb-tree	count=2
function	newly allocated copy of ||| tree copy	count=1
function	returns the name ||| class name	count=1
arg	end ||| end	count=5
function	[function_1] all ||| [function_1] [function_2]	count=1
arg	bytes ||| bytes	count=1
arg	operation on output-port ||| output-port string start end	count=1
arg	graphics-device-type ||| graphics-device-type	count=1
arg	in alist ||| alist	count=1
module	hash [module] hold both ||| [module]	count=1
function	a list ||| list	count=4
arg	be converted into a ||| directory	count=1
arg	[arg] initialized otherwise ||| [arg]	count=1
arg	greater than [arg] ||| wt-tree [arg]	count=3
arg	common divisor ||| n1	count=1
function	tag associate with ||| tag	count=1
function	is not ||| not	count=1
function	argument to file-time format ||| >file time	count=1
arg	image ||| x y image	count=1
function	“any host” ||| any	count=1
arg	element k ||| k char	count=1
function_arg	passing it [arg_2] ||| [function_1] program [arg_2]	count=1
function	[function] type ||| [function]	count=6
function	a new condition ||| make condition	count=2
function	the inode ||| attributes inode	count=1
function_arg	a newly allocated apply [function_1] [arg_2] ||| make apply [function_1] [arg_2]	count=1
function	elements ||| stream >list	count=1
module	1970 ||| 15.5.1	count=1
module	equivalence ||| 3	count=1
function	erases a single ||| erase	count=1
function	a newly-allocated string ||| rexp >regexp	count=1
arg	slot if ||| slot	count=1
function	mode bits ||| mode	count=1
function	the slot ||| slot	count=2
arg	width and height in ||| width height	count=1
function	graphics device types ||| types	count=1
arg	registers must be a ||| registers	count=1
function	string as ||| string append	count=1
function	a ||| output to string	count=1
function	procedure for writing the ||| modifier	count=1
function	terminal mode ||| terminal mode	count=6
arg	same associations as alist ||| tree-type alist	count=1
arg	destination-y-top ||| destination-y-top	count=1
function	bound to a normal ||| lookup	count=1
module	1970 utc ||| 15.5.1	count=1
function_arg	[function_1] consisting ||| [arg_2] [function_1]	count=1
function	[function_1] evaluated ||| [function_1] [function_2]	count=3
function	[function_1] transformer ||| -1 sc [function_1] [function_2]	count=4
arg	particular field ||| field-name	count=1
arg	if pathname1 is ||| pathname1	count=1
arg	buffer against [arg_2] ||| [arg_1] [arg_2]	count=1
function	a standard tree type ||| wt type	count=2
function	returns a hash-table constructor ||| hash table constructor	count=1
function	a regular ||| group	count=1
function	no arguments ||| output	count=1
function	stores char in ||| set!	count=1
arg	against buffer's contents ||| buffer	count=1
module	pathname by ->pathname ||| 15.4	count=1
function	not of ||| not syntax	count=1
function	to be a ||| parser	count=2
arg	to a directory ||| pathname	count=1
arg	of hash-table ||| hash-table	count=3
arg	by x and y ||| x y	count=2
arg	[arg] names an ||| [arg]	count=1
function	procedure ||| vector map	count=1
function_arg	[function_1] [arg_2] to ||| [function_1] [arg_2]	count=5
arg	of output-port ||| output-port	count=1
function	these set the key ||| key	count=1
arg	between [arg] ||| 1d-table [arg]	count=2
function	tree containing all ||| tree	count=4
function	match the ||| match	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=15
function	described ||| >char set	count=1
module	extra component ||| 12.5	count=1
function	coordinate [function_2] ||| [function_2] [function_1]	count=4
arg	filename1 ||| filename1	count=1
arg	start1 [arg_2] ||| [arg_2] [arg_1]	count=2
function	the type represented ||| record type	count=1
module	matches ||| 14.11.1	count=2
function	is a concrete type ||| type:derived port error	count=1
function	the same contents as ||| string >string	count=1
function	be recognized by read ||| *unparse with maximum readability?*	count=1
module	string otherwise ||| 9.2	count=1
arg	keys equal to object ||| object	count=1
arg	element k of string ||| k char	count=1
function	returns ||| wide	count=1
function_arg	“and” of [arg_2] ||| [function_1] [arg_2]	count=1
function	that is a copy ||| copy	count=1
function	of car ||| car	count=1
function	invokes the write operation ||| port write	count=1
arg	[arg_1] identifier2 ||| [arg_1] environment2 [arg_2]	count=3
function	the tree is ||| tree	count=1
function	the ||| range	count=1
function	abort ||| abort	count=1
module	procedure ||| 5.3	count=1
arg	[arg] as an ||| [arg]	count=3
function_arg	the fresh-line [arg_2] ||| [function_1] [arg_2]	count=1
function	string representation of ||| regexp	count=1
function	named file for input ||| input	count=1
function_arg	[function_1] [arg_2] ||| [function_1] string start end [arg_2]	count=3
function	be executed ||| command	count=1
module	part ||| 14.12.3	count=1
arg	k of wide-string ||| wide-string k unicode-char	count=3
function_arg	[function_1] for computed-emp ||| [arg_2] [function_1]	count=3
function	rehash size of ||| hash table rehash size	count=1
function	converted ||| directory	count=1
function	stores ||| 8b set!	count=2
arg	index start and ||| string start	count=1
function	sets the internal ||| buffer pointer!	count=1
function_arg	[function_1] input-port ||| [arg_2] [function_1]	count=5
function_arg	returns [function_1] [arg_2] ||| 11.6 [function_1] [arg_2]	count=2
function	contents ||| ref	count=1
function	a dispatch ||| dispatch	count=1
function	character not of ||| not syntax char	count=1
function	[function_1] drawing ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] >parser buffer [arg_2]	count=3
function	the prefix of ||| prefix	count=1
function	the key ||| key	count=2
function	must ||| output to	count=1
function	a ||| to	count=1
function_arg	car [arg_2] ||| [arg_2] [function_1]	count=1
arg	code in ||| string start end code	count=1
arg	bound to syntactic ||| environment	count=1
function	must be a ||| with output	count=1
function	and `#f' otherwise ||| arity valid?	count=1
function	must be a ||| group	count=1
arg	bound [arg_2] ||| [arg_1] symbol [arg_2]	count=3
function_arg	the greatest [arg_2] ||| [arg_2] [function_1]	count=1
arg	and returns ||| key	count=1
function	procedure ||| with output to string	count=1
function	a hash-table ||| hash table	count=1
arg	output buffer for graphics-device ||| graphics-device	count=1
function_arg	[function_1] of port ||| [function_1] [arg_2]	count=33
function	rectangle of the same ||| copy area	count=1
function	tree type based ||| tree type	count=1
arg	that [arg] a ||| [arg]	count=1
function	of ||| name	count=1
function	has been garbage-collected otherwise ||| weak pair car?	count=1
function_arg	[function_1] k of ||| [function_1] [arg_2]	count=1
arg	symbol is a keyword ||| environment symbol	count=1
function	procedure of no arguments ||| output to string	count=1
function	and ||| make string	count=1
arg	thing ||| thing	count=1
arg	returns character k of ||| k	count=1
function	specifies the [function] ||| output buffer [function]	count=2
arg	of method ||| method	count=2
function	[function_1] symbol that ||| [function_2] [function_1]	count=1
function	component is represented as ||| as file	count=1
function	the device coordinate ||| device coordinate	count=1
function	tree type based ||| wt tree type	count=2
function	default [function_2] ||| [function_1] [function_2]	count=1
function	procedure closes all ||| close all	count=1
function	this returns a deletion ||| delete	count=1
function_arg	[function_1] of xml-name ||| [function_1] [arg_2]	count=3
function	input blocking mode ||| set input blocking mode	count=1
function	otherwise ||| procedure?	count=1
function	draw ||| draw	count=1
function	one argument the ||| current	count=1
function	must be ||| to	count=1
function	of the type represented ||| set record type	count=1
function	object ||| object	count=1
function	arity of generic as ||| arity	count=1
function	the directory component is ||| directory pathname	count=1
function	hash-table [function_2] ||| [function_1] [function_2]	count=1
arg	elements start [arg_2] ||| [arg_2] [arg_1]	count=1
module	tables that ||| 11.4.1	count=5
function	datum [function] key ||| rb tree [function]	count=1
arg	field [arg] ||| [arg]	count=1
module	a ||| 15.1.3	count=1
function	arguments ||| output to string	count=1
arg	[arg_1] pathname2 otherwise ||| [arg_1] [arg_2]	count=1
function_arg	possible [arg_2] ||| [arg_2] [function_1]	count=1
function	writes the [function] ||| write [function]	count=1
function_arg	[function_1] element k ||| [function_1] [arg_2]	count=1
function	the rectangle of ||| copy area	count=1
arg	copy of alist ||| alist	count=1
function	symbol part of ||| >symbol	count=1
function	applicable ||| applicable	count=1
function	new copy of ||| new	count=1
function	discard-matched expression always successfully ||| discard matched	count=1
function	specified by ||| load	count=1
function	a string ||| regexp group	count=1
arg	and end of procedure ||| procedure	count=1
arg	registers must ||| string registers	count=1
function	represented as a ||| as	count=1
arg	port and return the ||| port	count=1
function	input blocking mode ||| port set input blocking mode	count=1
function	slot descriptors for ||| slots	count=1
function	arbitrary objects as ||| weak eq hash	count=1
function	output terminal mode ||| output terminal	count=1
arg	char1 [arg_2] ||| [arg_2] [arg_1]	count=3
arg	port to [arg_2] ||| [arg_2] [arg_1]	count=4
module	character set consisting ||| 5.6	count=1
function	association list [function] contains ||| [function]	count=1
function	the bindings of ||| bindings	count=1
function	returns an unspecified result ||| set car!	count=1
function	[function_1] point ||| [function_1] [function_2]	count=1
arg	be unparser-method and returns ||| unparser-method	count=1
function	moves the cursor for ||| graphics move cursor	count=1
function	that indices ||| range	count=1
function	property named ||| property	count=1
function	be ||| to string	count=1
function	of the tree ||| wt tree	count=2
function	for an [function_2] ||| [function_1] [function_2]	count=2
function	limits for ||| limits	count=1
function	output ||| with output file	count=2
function	that the first ||| named	count=1
function	an unspecified result ||| set cdr!	count=1
arg	by parsing pexp into ||| pexp	count=1
function	check their ||| no	count=1
function_arg	classes [arg_2] ||| [arg_2] [function_1]	count=1
function	returns a string ||| string	count=1
function	in ||| find	count=1
function	bind [function_2] ||| [function_1] [function_2]	count=2
arg	of char-set see ||| char-set	count=1
function	initial ||| initial	count=1
function	let* ||| let*	count=1
function	rehash size ||| hash table rehash size	count=1
arg	converts bit-string ||| bit-string	count=1
function	the tree is empty ||| tree	count=1
function	device ||| device	count=2
module	for hash [module] hold ||| [module]	count=1
function	[function_1] procedure ||| [function_1] [function_2]	count=1
arg	part of xml-name ||| xml-name	count=2
module	elements ||| 10.6	count=1
function	an arity ||| arity	count=1
arg	of pointer in terms ||| pointer	count=1
function	bind ||| bind	count=1
function	[function_1] constructor ||| [function_2] [function_1]	count=4
function	concrete type that ||| condition type:derived port	count=1
arg	object representing ||| second minute hour day month year	count=1
arg	graphics-device ||| graphics-device	count=5
arg	code in the given ||| string start end code	count=1
function	the arity ||| generic procedure arity	count=2
function	the input terminal ||| input terminal mode	count=1
function	string as its result ||| string append	count=1
function	the name ||| restart name	count=1
function_arg	[function_1] of object ||| [arg_2] [function_1]	count=3
arg	a procedure of ||| procedure	count=1
function	bindings of the ||| bindings	count=1
arg	pair in alist ||| alist	count=1
function	of the elements ||| vector >list	count=1
function	the [function] a word ||| rexp word [function]	count=3
function	symbol ||| xml name	count=1
function	for writing the ||| modifier	count=1
function	the input terminal ||| input terminal	count=2
function	end of a ||| end	count=1
arg	to be ||| direct-superclasses direct-slot	count=1
function	will not check ||| type	count=1
function	[function_1] operation ||| 17.7 [function_1] [function_2]	count=3
function	buffer ||| buffer ref	count=1
function_arg	in [arg_2] ||| [function_1] [arg_2]	count=1
arg	length of clist ||| clist	count=1
function	the write operation ||| port write char	count=1
function	an abstract ||| type:error	count=1
function	type #t if ||| file attributes type	count=1
function	the wrong ||| condition type:wrong	count=1
arg	pointer of buffer to ||| buffer	count=1
module	the current [module] as ||| [module]	count=1
function_arg	the largest [arg_2] ||| 11.6 rb tree [function_1] datum [arg_2]	count=1
arg	that [arg] a member ||| [arg]	count=1
function	[function_1] size of ||| [function_2] [function_1]	count=3
function	accepts arbitrary objects ||| ephemeral eq hash table	count=1
function	the rehash ||| table rehash	count=2
arg	body ||| expression body	count=1
function	be ||| output	count=1
function	arguments ||| output to	count=1
arg	procedure defines keyword to ||| keyword	count=1
function	output is limited to ||| with output to truncated	count=1
arg	vector1 ||| vector1	count=1
function	a procedure of no ||| with output to string	count=1
function	color ||| color	count=1
function	the flush-output ||| port flush output	count=1
function	accessor method for the ||| accessor method	count=1
function	of car [function_2] ||| [function_2] [function_1]	count=1
function	inode number of ||| attributes inode number	count=1
function	changes the extra ||| entity extra!	count=1
module	returns ||| 7.3	count=1
function	some ||| wt tree subset?	count=1
arg	an argument in decoded-time ||| decoded-time	count=1
arg	methods to generic-procedure ||| generic-procedure methods	count=3
module	otherwise returns #f ||| 5.3	count=1
arg	syntactic environments and identifier1 ||| identifier1	count=1
function	same contents as ||| string >string	count=1
function	[function_1] of ||| [function_2] [function_1]	count=9
function	must name ||| file modes!	count=1
function_arg	greatest [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] uri record ||| [function_2] [function_1]	count=2
arg	solid at on ||| radius	count=1
function	returns the arity of ||| procedure arity	count=2
arg	graphics-device to the ||| graphics-device	count=2
function	is ||| initial	count=1
function	the inode [function_2] ||| [function_1] [function_2]	count=4
function	name of ||| restart name	count=1
function	[function_1] one ||| [function_1] [function_2] unparser state unparser-state procedure	count=1
function	an evaluated [function_2] ||| [function_1] [function_2]	count=1
module	restarts permissible values ||| 16.4.3	count=1
arg	corresponding init the expressions ||| init	count=1
function	with the wrong ||| condition type:wrong	count=1
arg	[arg_1] element k ||| [arg_2] [arg_1]	count=2
function	input terminal [function_2] ||| [function_1] [function_2]	count=2
arg	start [arg_2] ||| [arg_2] [arg_1]	count=7
module	parser ||| 14.11.2	count=1
function	[function_1] operation ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] filename [arg_2]	count=2
function	a hard link from ||| hard link	count=1
function	returns character ||| string	count=1
function	exact ||| wt tree size	count=1
function_arg	[function_1] procedure ||| [function_1] [arg_2]	count=2
arg	formals ||| formals expression expression	count=1
function	allocated list ||| list	count=2
function	input of the ||| input	count=1
function	[function_1] one argument ||| [function_1] [function_2] unparser state unparser-state procedure	count=1
function	representation ||| regexp	count=1
function	and `#f' otherwise ||| valid?	count=1
arg	write-substring operation on output-port ||| output-port string	count=1
function	integer may be ||| integer >bit	count=1
function	port ||| port error	count=1
function	changes the input ||| set input	count=2
function	uppercase equivalent of ||| char upcase	count=1
function	one of the ||| current	count=1
function	string representation of a ||| regexp group	count=1
function	the input ||| port input	count=2
function	the input blocking ||| set input blocking mode	count=1
arg	identifier1 ||| identifier1	count=1
arg	returned by parsing pexp ||| pexp	count=1
function	that is of ||| range	count=1
function	be ||| set	count=2
function	and integer may be ||| >bit string	count=1
module	command-line option ||| 2.5	count=1
arg	the datum associated ||| default	count=3
function	the symbol part ||| name >symbol	count=1
function	input blocking mode ||| set input blocking	count=1
function	invokes the write ||| output port write	count=1
function	on the nesting of ||| list depth	count=1
module	expression ||| 14.11.2	count=2
arg	remove from alist all ||| alist	count=1
function	passing it the given ||| synchronous subprocess	count=1
function	to be the color ||| color	count=1
function	invokes the flush-output ||| output port flush output	count=1
function	the dispatch ||| record type dispatch	count=1
function	the inode ||| file attributes inode	count=1
function	write operation ||| output port write char	count=1
module	vector ||| 8.2	count=1
function	#t if environment has ||| environment has	count=1
function	the input ||| set input	count=2
arg	class ||| class	count=5
function	[function_1] [function_2] ||| [function_2] [function_1]	count=230
function	[function_1] all ||| [function_2] [function_1]	count=4
arg	datum with ||| datum	count=1
arg	char-set see character sets ||| char-set	count=1
arg	width and height ||| width height	count=1
arg	accepting arity ||| arity	count=1
function	no ||| with output to	count=1
module	returns an ||| 14.1	count=1
function_arg	threshold of [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] copies ||| [arg_2] [arg_1]	count=1
function	eq? ||| eq?	count=1
function	[function_1] mode ||| [function_2] [function_1]	count=15
function	a ||| with	count=1
function	named file for output ||| output	count=1
function	#t if ||| input port type?	count=1
arg	to end1 [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] against buffer's ||| [function_1] [arg_2]	count=1
arg	symbol part of xml-name ||| xml-name	count=1
function	mode ||| mode	count=5
function_arg	[function_1] exact integer ||| [function_1] length [arg_2]	count=2
function	that indices are valid ||| range	count=1
arg	document consists of these ||| attributes contents	count=1
function_arg	writes [function_1] [arg_2] ||| [function_1] [arg_2]	count=12
arg	[arg] returning the ||| vector key<? unwrap-key [arg]	count=3
function	of ||| vector	count=3
module	1970 utc in ||| 15.5.1	count=1
function	[function_1] limits ||| [function_2] [function_1]	count=6
function	not check their ||| no	count=1
function	nesting ||| depth	count=1
module	pathname host ||| 15.1.4	count=1
arg	procedure to zero arguments ||| procedure	count=1
function_arg	key [arg_2] ||| [function_1] [arg_2]	count=2
function	is generated when the ||| condition	count=1
arg	environment free-names must be ||| environment free-names	count=1
function_arg	[function_1] in month ||| [function_1] days [arg_2]	count=1
function	a concrete ||| type:derived port error	count=1
function	procedure and could be ||| procedure	count=1
arg	program ||| program	count=1
function	returns the output ||| output	count=1
function	that is ||| condition type:bad range	count=1
function	has ||| environment has	count=1
module	character ||| 5.3	count=1
function	a macro [function_2] ||| [function_2] [function_1]	count=8
function	error ||| error	count=1
function	of a ||| regexp group	count=1
function	current [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] vector [arg_2]	count=2
function	the inode number of ||| inode number	count=1
function	list ||| hash table datum list	count=1
function	if any pathname ||| pathname	count=1
module	this is another kind ||| 16.7	count=1
module	condition of [module] ||| [module]	count=1
function	as a permanent condition ||| default condition	count=1
function	not check that ||| no range	count=1
function	an [function] ||| [function]	count=1
function	user-initial-environment [function] ||| user [function]	count=2
arg	with key ||| key	count=3
arg	of one argument and ||| key	count=2
function	days [function_2] ||| [function_2] [function_1]	count=2
function	uri record ||| xml	count=1
function	part of ||| name >symbol	count=1
function	inode ||| inode	count=1
function	concrete ||| condition type:derived	count=1
function_arg	[function_1] their argument ||| [function_1] [arg_2]	count=6
function_arg	[function_1] of restart ||| [function_1] [arg_2]	count=3
arg	object ||| object	count=20
function	returns the condition type ||| type	count=1
function	whose elements are ||| >stream	count=1
function_arg	writes the [function_1] [arg_2] to ||| write [function_1] [arg_2]	count=1
function	a permanent condition ||| bind default condition	count=1
arg	destination-x-left [arg_2] ||| [arg_1] [arg_2]	count=1
arg	true if [arg] true ||| [arg]	count=1
function_arg	pair [arg_2] ||| [function_1] [arg_2]	count=1
function	a match group ||| rexp group	count=1
function	#t if a character ||| char	count=1
function	length of [function_2] ||| [function_2] [function_1]	count=2
module	for trees with string ||| 11.7.1	count=1
function	condition-type is ||| condition	count=1
function	the procedure ||| apply hook procedure	count=1
module	a positive ||| 4.8	count=1
arg	and destination-y-top ||| destination-y-top	count=1
arg	procedure of one argument ||| procedure vector	count=1
function	to universal-time format ||| time >universal time	count=1
function	the characters of ||| wide input string	count=1
function	returns [function] containing that ||| rb tree min [function]	count=1
function	time-string ||| >decoded time	count=1
arg	[arg_1] end ||| [arg_1] [arg_2]	count=11
module	xml [module] ||| [module]	count=1
function	output-port ||| output port write substring	count=1
arg	buffer to ||| buffer	count=1
function	start of the ||| string start	count=1
function	be a procedure of ||| with output to string	count=1
function	changes the state component ||| state!	count=1
function	that is not the ||| not	count=1
function	must be a procedure ||| to	count=1
function	indices ||| no	count=1
function	returns an output port ||| output port	count=1
function	of no ||| with output	count=1
function	a predicate procedure for ||| predicate	count=1
arg	a character in buffer ||| buffer index	count=1
function	match group ||| rexp group	count=1
arg	[arg_1] unparser-method ||| [arg_2] [arg_1]	count=1
arg	of filename as an ||| filename	count=1
function	will not ||| no range	count=1
function	that the ||| named	count=1
function	hold both keys ||| entry type:key datum weak	count=1
function	the pathname ||| pathname	count=1
arg	source-y-top ||| source-y-top	count=1
arg	source-y-top [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] of wt-tree ||| [function_1] split< [arg_2]	count=3
function	character [function_2] ||| [function_1] [function_2]	count=1
arg	code in elements ||| code	count=1
function_arg	key [arg_2] ||| [arg_2] [function_1]	count=2
arg	specified x ||| x	count=1
module	generators and ||| 12.6.2	count=2
arg	key ||| key	count=1
module	analogous [module] ||| [module]	count=1
function	mode of ||| mode	count=3
module	string ||| 6.2	count=1
function	returns the datum associated ||| get	count=1
arg	object in environment and ||| object	count=1
arg	init ||| init	count=1
arg	procedure defines keyword ||| keyword	count=1
function	property named ||| slot property	count=1
function_arg	host name host-name ||| name host-name	count=1
function	a window on the ||| window	count=1
function	binding of one ||| current	count=1
function	be ||| define	count=1
function_arg	[function_1] object is ||| [function_1] [arg_2]	count=6
function_arg	the tree [arg_2] ||| [function_1] split> [arg_2]	count=1
function_arg	fresh-line [arg_2] ||| [arg_2] [function_1]	count=1
function	no arguments ||| output to string	count=1
function	returns [function_2] ||| [function_2] [function_1]	count=9
function	rb-tree ||| tree lookup	count=1
function	adds ||| add generic procedure	count=1
function	on the length ||| length	count=1
function	[function_1] arguments ||| [function_1] [function_2]	count=6
function	the state component ||| state	count=1
module	the symbol part of ||| 14.12.3	count=1
function_arg	string [arg_2] ||| [function_1] [arg_2]	count=4
arg	to port using the ||| port	count=1
function	key ||| ephemeron key	count=1
function	device window is resized ||| resize window	count=1
function	invokes the graphics ||| graphics	count=1
arg	an arity object ||| object	count=1
arg	x y [arg_2] ||| [arg_2] [arg_1]	count=1
arg	wt-tree-2 that has the ||| wt-tree-2	count=1
function	of ||| with	count=1
module	of a regular ||| 6.8.1	count=1
arg	or [arg] ||| rb-tree [arg]	count=2
arg	destination-x-left and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	generalization ||| generalization	count=1
arg	otherwise default ||| default	count=1
function	dispatch tags ||| dispatch tags	count=2
function	process time in ticks ||| process time	count=1
function	a concrete type ||| condition type:derived	count=1
arg	rb-tree ||| rb-tree	count=3
function	subtype of [function_2] ||| [function_1] [function_2]	count=2
arg	of string ||| string	count=1
arg	a new weak pair [arg_1] [arg_2] ||| 10.7.1 weak cons [arg_1] [arg_2]	count=1
function_arg	superclasses [arg_2] ||| [function_1] [arg_2]	count=1
function	the tree ||| rb tree	count=1
function	a copy ||| copy	count=1
arg	or default if the ||| default	count=1
arg	source-x-left [arg_2] ||| [arg_2] [arg_1]	count=4
function	hold both keys ||| table entry type:key datum	count=1
function	a procedure ||| with output	count=1
function	values [function_2] ||| [function_2] [function_1]	count=1
function	the block ||| no	count=2
function	thunk ||| with values	count=1
module	current [module] as an ||| [module]	count=1
function	limit on the nesting ||| depth	count=1
arg	weak-pair ||| weak-pair	count=3
function	rehash threshold ||| hash table rehash threshold	count=1
function	is of the ||| condition	count=1
function	bound in ||| bound	count=1
arg	port to be mode ||| port mode	count=3
function	syntax of let*-syntax is ||| syntax	count=1
function	any subsequent words ||| capitalized?	count=1
function	[function] does ||| [function]	count=3
function	[function_1] window on ||| [function_1] [function_2]	count=2
function	a ||| with output	count=1
arg	compares them with string=? ||| initial-size	count=1
module	character ||| 6.2	count=1
function	out ||| out	count=1
function	returns an unspecified result ||| set cdr!	count=1
function	to be a command-line ||| parser	count=1
function	blocking mode ||| blocking	count=1
function_arg	[function_1] of wide-string ||| [arg_2] [function_1]	count=7
function	concrete ||| type:derived	count=1
function	[function_1] device ||| [function_1] [function_2]	count=1
function	file ||| file	count=1
function	sets the line width ||| set	count=1
arg	identifier1 and ||| identifier1	count=1
function	exact non-negative integer ||| wt tree size	count=1
function	is represented as ||| as	count=1
function_arg	[function_1] of buffer ||| [arg_2] [function_1]	count=1
arg	[arg_1] destination-y-top ||| [arg_1] [arg_2]	count=3
arg	is returned otherwise default ||| default	count=1
function_arg	rehash threshold [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] time of ||| [function_1] [function_2]	count=3
function	[function_1] is limited ||| [function_2] [function_1]	count=4
function_arg	[function_1] defines keyword ||| [function_1] [arg_2]	count=1
arg	[arg_1] to target-filename ||| [arg_2] [arg_1]	count=1
arg	operation on output-port ||| output-port string	count=1
arg	[arg] that has ||| [arg]	count=3
arg	object is a input-port ||| object	count=1
function	hold both keys and ||| entry type:key datum	count=1
arg	of the first list ||| list	count=1
arg	car of weak-pair ||| weak-pair	count=1
function	the symbol part of ||| name >symbol	count=1
function	[function_1] type ||| [function_2] [function_1]	count=10
function	otherwise ||| pathname?	count=1
arg	that inherits from parent-table ||| parent-table	count=1
arg	argument and [arg_2] ||| [arg_1] if-found [arg_2]	count=4
function	key ||| emp key	count=1
arg	converted ||| directory	count=1
function_arg	[function_1] record-type ||| [function_1] [arg_2]	count=4
function	that's the ancestor ||| environment	count=1
function	of a regular ||| regexp	count=1
function	returns the class of ||| slot class	count=1
arg	#t [arg] a list ||| [arg]	count=1
function	properties of ||| slot properties	count=1
function	will ||| no	count=2
function	integer may ||| signed integer >bit string	count=1
function	a new ||| make wt	count=1
arg	[arg] and an ||| [arg]	count=3
function_arg	[function_1] named filename ||| [arg_2] [function_1]	count=5
function	the symbol ||| >symbol	count=1
function_arg	write [arg_2] ||| [function_1] [arg_2]	count=1
arg	elements start ||| string start	count=1
function	tree ||| wt tree	count=3
function	characters read from ||| input port	count=1
function	the output [function_2] ||| [function_1] [function_2]	count=7
function	is entered just prior ||| break exit	count=1
arg	and identifier1 and ||| identifier1	count=1
arg	to pathname but ||| pathname	count=1
module	current drawing mode ||| 17.3	count=1
function	ephemerally keyed by the ||| type:datum ephemeral	count=1
function	the rectangle of the ||| copy area	count=1
function_arg	[function_1] at end1 ||| [arg_2] [function_1]	count=2
function	block will not check ||| no	count=2
function	and returns [function] containing ||| rb tree min [function]	count=1
arg	char in element k ||| k	count=2
function_arg	[function_1] name ||| [function_1] color [arg_2] spec	count=1
function	the write ||| output port write char	count=1
function_arg	writes [function_1] [arg_2] to ||| [function_1] [arg_2]	count=5
function	must be ||| to string	count=1
arg	followed by one or ||| multiple? procedure	count=1
function	and integer may be ||| signed integer >bit	count=1
arg	symbol is [arg_2] ||| 13.1 environment bound? [arg_2] [arg_1]	count=5
function	list ||| datum list	count=1
arg	from [arg] ||| [arg]	count=1
arg	in class ||| class	count=4
function	be a ||| group	count=1
arg	of pointer in ||| pointer	count=1
function	[function_1] simple ||| [function_2] [function_1]	count=1
arg	char1 ||| char1	count=1
function	generalizations ||| type generalizations	count=1
arg	formals ||| formals	count=2
arg	string ||| string	count=4
module	keys or data ||| 11.4.1	count=1
function	one argument ||| call with current continuation	count=1
function	terminal [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] hash-table as ||| [arg_2] [function_1]	count=1
function	the nesting of ||| list depth	count=1
function	that are associated with ||| 2d get alist y	count=1
function_arg	[function_1] of rb-tree ||| [arg_2] [function_1]	count=2
module	character otherwise ||| 5.3	count=1
function_arg	arity [arg_2] ||| [function_1] [arg_2]	count=1
function	of characters ||| chars	count=1
arg	datum with [arg_2] ||| [arg_2] y-key [arg_1]	count=1
function	exact ||| size	count=1
arg	with char2 in the ||| char2	count=1
arg	signalled when [arg_2] ||| [arg_2] [arg_1]	count=4
arg	[arg_1] [arg_2] to ||| [arg_1] [arg_2]	count=2
function	input terminal mode ||| set input terminal mode	count=1
function_arg	procedure [arg_2] ||| [function_1] procedure [arg_2]	count=2
function	no arguments ||| with output to	count=1
function	the last modification ||| attributes modification	count=1
function	integer may be any ||| >bit string	count=1
function	named file for input ||| with input	count=1
function	offering to save ||| save	count=1
function	integer and integer may ||| >bit	count=1
function	accepts arbitrary objects ||| weak eq	count=1
arg	into [arg] at the ||| string1 start1 end1 [arg]	count=1
function	inode number of ||| inode number	count=1
module	return the [module] of ||| [module]	count=1
arg	coordinates given by x ||| x	count=2
function	return the greatest ||| gcd	count=1
function	newly allocated copy of ||| rb tree copy	count=1
function	searches string for ||| string search	count=1
function	the [function] a ||| rexp word [function]	count=3
function	strongly [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] of restart ||| [arg_2] [function_1]	count=3
function	symbol part of ||| xml name >symbol	count=1
function	their arguments' ||| no type	count=1
arg	be [arg] calls thunk ||| cell [arg]	count=1
function	length of string ||| length	count=2
function	will not ||| type	count=1
function	alters ||| input port!	count=1
function	a simple ||| simple	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=4
arg	by source-x-left source-y-top ||| source-x-left source-y-top	count=2
arg	[arg_1] string2 ||| [arg_1] [arg_2] start2	count=6
function	write operation on ||| write char	count=1
arg	if symbol is ||| symbol	count=4
function	arguments ||| with output to string	count=1
function	input port ||| input	count=1
function	the state component ||| state!	count=1
module	enter the ||| 8.1	count=1
function	no ||| output	count=1
function_arg	graphics device [arg_2] ||| [function_1] [arg_2]	count=1
function	returns the dispatch ||| dispatch	count=1
function	hold keys [function_2] ||| [function_1] [function_2]	count=4
arg	predicate is true ||| predicate list	count=1
arg	thunk without ||| thunk	count=1
function	the syntax ||| syntax	count=1
function	[function_1] type ||| [function_1] [function_2]	count=6
arg	or line style ||| drawing-mode thunk	count=1
function	signals a ||| signals	count=1
function_arg	filled circle [arg_2] ||| [arg_2] [function_1]	count=4
function	object is [function] table ||| [function]	count=1
function	returns the name ||| generic procedure name	count=1
function	bool ||| dib set pixels unaligned	count=1
function	newly allocated [function] ||| generate [function]	count=3
function	buffered this causes ||| flush	count=1
function	standard tree [function_2] ||| [function_2] [function_1]	count=2
function	a string representation ||| regexp group	count=1
arg	unparser-method and returns ||| unparser-method	count=1
function	will not check that ||| no	count=1
function	the [function] ||| write [function]	count=1
arg	k ||| k unicode-char	count=1
module	returns ||| 5.3	count=1
arg	the slot [arg] in ||| instance [arg]	count=1
arg	[arg_1] to pathname2 ||| [arg_1] [arg_2]	count=2
arg	start and [arg_2] ||| [arg_2] [arg_1]	count=7
function	the symbol part ||| name	count=1
function	string ||| group	count=1
arg	[arg_1] [arg_2] into ||| [arg_2] [arg_1]	count=20
function	of the elements ||| >list	count=1
function	part of ||| name	count=1
function	keys strongly [function_2] ||| [function_1] [function_2]	count=1
function	to file-time ||| >file	count=1
function	suffix of the ||| suffix?	count=1
function	coordinate limits of ||| coordinate limits	count=1
arg	[arg_1] to target-filename ||| [arg_1] [arg_2]	count=1
arg	identifier1 [arg_2] ||| [arg_1] environment2 [arg_2]	count=1
function	datums in ||| datum	count=1
function	check that indices ||| no range	count=1
function	the block ||| range	count=1
function	are associated with ||| 2d get alist	count=2
function	the length of ||| bit string length	count=2
function	not check their arguments' ||| type	count=1
arg	zeroes if initialization ||| initialization	count=1
arg	each [arg] ||| [arg]	count=1
arg	`#t' if object is ||| object	count=1
function	the parent ||| environment parent	count=1
module	check their arguments' types ||| 4.3.3	count=1
function	the output terminal ||| port set output terminal mode	count=1
function	cursor for ||| graphics move cursor	count=1
arg	thunk must ||| symbol thunk	count=1
function_arg	whose car [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] to output-port ||| 14.9.4 write substring [arg_2] string [arg_1]	count=1
function	class of ||| slot class	count=1
arg	specified by pexp ||| pexp	count=1
arg	of a typical xml ||| name	count=1
function_arg	method of [arg_2] ||| [arg_2] [function_1]	count=1
function	of the direct ||| direct	count=1
function	check that indices ||| no	count=1
function	method [function_2] ||| [function_1] [function_2]	count=2
arg	char2 in the ||| char2	count=1
arg	the point x ||| x	count=2
function	the condition-type is ||| condition	count=1
function	days possible ||| month max days	count=2
function	no ||| output to string	count=1
module	on ||| 14.11.2	count=1
function	arc ||| arc	count=1
function	up to but excluding ||| head	count=1
function	the generalizations ||| type generalizations	count=1
module	that indices are ||| 4.3.3	count=1
function	sets the ||| parser buffer pointer!	count=1
arg	[arg] names ||| [arg]	count=7
module	a pathname otherwise returns ||| 15.1.3	count=1
function	[function_1] output port ||| [function_1] [function_2]	count=1
function	and [function_2] ||| [function_1] weak eq [function_2]	count=1
function	compares the two strings ||| string match	count=1
function	the length [function_2] ||| [function_2] [function_1]	count=2
function	one argument the pathname ||| pathname	count=1
function	integer and integer may ||| >bit string	count=1
function	into an ||| >unsigned	count=1
function	circle ||| circle	count=1
function	must ||| regexp group	count=1
function	returns an unspecified result ||| car!	count=1
function	the variable user-initial-environment [function_1] [function_2] ||| [function_1] [function_2]	count=3
function	write operation on ||| output port write	count=1
function	concrete ||| condition type:derived port error	count=1
function	returns the dispatch ||| type dispatch	count=1
arg	environment [arg_2] ||| [arg_2] [arg_1]	count=4
function	input terminal ||| input terminal mode	count=1
arg	is ||| object modulus	count=3
function_arg	[function_1] solid ||| [arg_2] [function_1]	count=4
function	the input [function_2] ||| [function_1] [function_2]	count=12
function_arg	name of [arg_2] ||| [function_1] [arg_2]	count=3
arg	classes ||| classes	count=1
function	their ||| type	count=1
function	the operating ||| operating	count=1
function	input blocking ||| port input blocking	count=2
arg	if-found ||| if-found	count=2
arg	wt-tree-1 ||| wt-tree-1	count=3
function	start of a line ||| line start	count=1
function	integer and integer may ||| integer >bit string	count=1
arg	type condition-type and ||| condition-type	count=1
function	the rehash threshold of ||| table rehash threshold	count=1
function	class of ||| class	count=2
function	[function_1] the ||| [function_2] [function_1]	count=7
module	returns character ||| 6.2	count=1
module	must be ||| 14.3	count=1
arg	destination-x-left ||| destination-x-left	count=1
arg	output-port and returns an ||| output-port	count=1
function	concrete type ||| condition type:derived port error	count=1
function	to be a keyword ||| macro	count=1
function	of no ||| to string	count=1
function	so if the file ||| file	count=1
function	[function] referring to ||| with temporary file [function]	count=3
arg	which [arg] falls encoded ||| [arg]	count=1
arg	type ||| datum type	count=1
function	if environment has a ||| has	count=1
function_arg	uri [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	represented [arg_2] ||| [function_1] type unparser method! [arg_2]	count=7
function_arg	generalizations [arg_2] ||| [function_1] [arg_2]	count=1
module	type ||| 14.9.1	count=1
arg	of char1 with char2 ||| char1 char2	count=1
function_arg	[function_1] [arg_2] ||| [function_1] split> [arg_2]	count=7
function	output terminal ||| port output terminal	count=2
function	daylight ||| time daylight	count=1
function_arg	length [arg_2] ||| [function_1] [arg_2]	count=5
function	wrong ||| condition type:wrong	count=1
function	uri ||| uri	count=2
function	part ||| xml	count=1
function	the flush-output operation on ||| output port flush output	count=1
module	previously associated with an ||| 11.5	count=1
arg	is signalled when ||| condition	count=1
arg	[arg_1] end ||| string [arg_1] [arg_2]	count=1
module	enter ||| 8.1	count=1
function	returns the output terminal ||| output terminal	count=1
function	this low-level procedure ||| set command line parser!	count=1
function	generalizations of ||| generalizations	count=1
arg	start1 to end1 of ||| start1 end1	count=1
arg	[arg] elements ||| [arg] stream	count=1
function	the ||| >symbol	count=1
arg	char1 ||| string char1	count=1
function_arg	[function_1] [arg_2] ||| [function_1] record-type [arg_2]	count=1
function	eq? is ||| eq?	count=1
module	pathname otherwise returns ||| 15.1.3	count=1
arg	into [arg] at ||| string1 start1 end1 [arg]	count=1
function_arg	a method [arg_2] ||| [arg_2] [function_1]	count=1
function	rectangle of ||| copy area	count=1
arg	makes a ||| target-filename	count=1
arg	[arg_1] char-set ||| [arg_2] [arg_1]	count=1
arg	key and [arg_2] ||| 1d table put! 1d-table [arg_1] [arg_2]	count=1
function	of the generalizations ||| condition type generalizations	count=1
function_arg	characters of [arg_2] ||| [arg_2] [function_1]	count=1
function	of ||| of	count=2
function_arg	[function_1] image are ||| [arg_2] [function_1]	count=1
arg	be a form ||| form	count=1
arg	of rb-tree ||| rb-tree	count=1
function	exact non-negative ||| wt tree size	count=1
function	length of the ||| attributes length	count=1
arg	[arg_1] [arg_2] must be identifiers ||| [arg_1] environment2 [arg_2]	count=7
function	sets the ||| set parser buffer pointer!	count=1
function	xml-!entity ||| !entity	count=1
module	process time in seconds ||| 15.6	count=2
function	that indices are valid ||| no range	count=1
module	the current drawing ||| 17.3	count=1
arg	k that ||| k	count=1
arg	string [arg] to ||| string [arg]	count=1
function_arg	an arity [arg_2] ||| [function_1] [arg_2]	count=1
module	printed representation for ||| 14.5	count=1
arg	when port errors occur ||| port condition	count=1
module	strings as keys ||| 11.4.1	count=1
function	[function_1] dispatch tag ||| [function_1] [function_2]	count=1
arg	the image is copied ||| x y image	count=1
function	[function_1] name ||| [function_2] [function_1]	count=1
function	[function_1] dispatch ||| [function_1] [function_2]	count=1
function	[function_1] tree containing ||| [function_1] [function_2]	count=3
arg	end until ||| end	count=1
arg	parsing pexp into a ||| pexp	count=1
arg	to be target-filename ||| target-filename	count=1
function	the arity ||| arity	count=3
arg	y [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] slot ||| [arg_2] [function_1]	count=6
function_arg	stores [arg_2] ||| [arg_2] [function_1]	count=15
function	inclusive and ending at ||| substring move	count=1
function	concrete type that ||| condition type:derived	count=1
module	association ||| 11.1	count=1
arg	the slot [arg] in ||| class [arg]	count=1
function	check that indices are ||| no range	count=1
function_arg	each [arg_2] ||| [arg_2] [function_1]	count=2
arg	image is copied ||| y image	count=1
function_arg	returns a newly [function_1] [arg_2] and an ||| [function_1] [arg_2]	count=4
function	hold ||| table entry	count=2
arg	defines ||| lambda-list body	count=1
arg	procedure was passed ||| operator operand	count=1
arg	keyword ||| keyword thunk	count=1
function	of the superclasses of ||| class precedence	count=1
function	the operating [function_2] ||| [function_1] [function_2]	count=2
arg	to service ||| service	count=1
arg	is like hash ||| object	count=1
function	shell program to ||| shell	count=1
arg	destructively copies [arg_2] ||| [arg_2] [arg_1]	count=2
arg	init the expressions are ||| init	count=1
module	not check that indices ||| 4.3.3	count=1
function	local loopback network interface ||| loopback	count=1
arg	environment free-names must ||| environment free-names	count=1
function	polygon using the ||| fill polygon	count=2
function	y-key ||| alist y	count=1
arg	procedure was passed an ||| datum operator operand	count=1
function	block will not ||| no	count=2
function	deletes the ||| delete	count=1
function	[function] a word ||| rexp word [function]	count=3
function_arg	mode of [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] k ||| [function_1] truncated string [arg_2]	count=1
function	condition-type subprocess-abnormal-termination ||| stopped	count=1
function	is entered when procedure ||| break entry	count=1
module	be ||| 14.3	count=1
module	to [module] each mexp ||| [module]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] string k [arg_2]	count=3
function	that accepts arbitrary objects ||| ephemeral eq hash	count=1
function	car and cdr ||| car cdr	count=2
arg	pexp into a single ||| pexp	count=1
function	of no arguments ||| with output	count=1
module	january ||| 15.5.1	count=1
arg	substring against buffer's contents ||| buffer	count=1
function	returns a list ||| list	count=2
arg	unparser-method ||| unparser-method	count=1
function_arg	[function_1] wide-string ||| [arg_2] [function_1]	count=10
function_arg	blocking [arg_2] ||| [function_1] [arg_2]	count=3
arg	[arg] there ||| [arg]	count=3
arg	procedure traverses [arg] order ||| action [arg]	count=1
function	condition ||| bind condition	count=1
function_arg	[function_1] [arg_2] to ||| [function_1] string [arg_2]	count=1
module	this procedure signals ||| 16.7	count=1
function	include the bindings of ||| environment bindings	count=1
arg	keyword ||| keyword	count=2
arg	the file named filename ||| filename	count=2
arg	by k that ||| stream k	count=1
function_arg	class [arg_2] ||| [arg_2] [function_1]	count=2
function	reads a single ||| read	count=1
arg	with predicate ||| predicate	count=1
function	otherwise out ||| out	count=1
function	namespace uri record ||| xml namespace	count=2
function	an exact ||| size	count=1
function	shell program ||| shell file	count=1
function_arg	returns a newly [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	graphics-device [arg_2] ||| [arg_2] [arg_1]	count=2
function	relation of the tree ||| tree	count=2
function_arg	reference-trap objects when referring [function_1] [arg_2] ||| [function_1] traps [arg_2]	count=1
function	sets the ||| buffer pointer!	count=1
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=34
function	creates a new ||| make	count=1
function_arg	[function_1] common divisor ||| [function_1] [arg_2]	count=3
function	user for an ||| prompt for	count=1
function_arg	then [arg_2] ||| [function_1] temporary file pathname [arg_2]	count=3
function	[function_1] tags ||| [function_2] [function_1]	count=1
arg	table call thunk with ||| thunk	count=1
function_arg	returns [function_1] [arg_2] ||| 11.6 [function_1] datum [arg_2]	count=6
module	by ->pathname ||| 15.4	count=1
arg	[arg_1] and end ||| [arg_1] [arg_2]	count=8
function	type or is ||| type	count=1
arg	of a ||| name	count=1
function	the [function_2] ||| [function_1] [function_2]	count=6
function	their ||| no	count=1
arg	string of length k ||| k	count=1
arg	[arg_1] be an ||| [arg_2] [arg_1]	count=2
function	directory component ||| directory pathname	count=1
arg	signals an [arg_2] ||| [arg_2] [arg_1]	count=2
arg	operands which ||| operands	count=1
arg	of filename as ||| filename	count=1
arg	object named name ||| name	count=1
arg	[arg_1] modification-time must ||| 15.3 set file times! [arg_1] [arg_2]	count=3
function	a hash number for ||| hash	count=1
arg	of buffer to the ||| buffer	count=1
function	[function_1] subprocess-abnormal-termination ||| [function_1] [function_2]	count=8
function	procedure and could ||| procedure	count=1
arg	entity to be procedure ||| entity procedure	count=1
function	concrete type that ||| type:derived	count=1
arg	key [arg_1] [arg_2] ||| datum [arg_1] [arg_2]	count=1
function_arg	stores object in ||| fill! vector object	count=1
function	name ||| restart name	count=1
function	the bindings of ||| environment bindings	count=1
module	character otherwise returns #f ||| 5.3	count=1
function	[function_1] an unspecified ||| [function_2] [function_1]	count=2
function	arity of generic as ||| procedure arity	count=1
function_arg	[function_1] declaration ||| [arg_2] [function_1]	count=2
function_arg	graphics operation [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	unparsed entity [arg_2] ||| [arg_2] [function_1]	count=1
function	key under the wt-tree's ||| delete min	count=1
function	is [function] table otherwise ||| [function]	count=1
function	that the output ||| output	count=1
function	state component of ||| set port state!	count=1
arg	[arg_1] [arg_2] using ||| draw text [arg_2] [arg_1]	count=4
function_arg	compares [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] width and ||| [arg_2] [arg_1]	count=5
function	returns the arity ||| procedure arity	count=2
function	searches string for ||| search	count=2
function	of the generalizations of ||| generalizations	count=1
arg	graphics-device to [arg_2] ||| [arg_2] [arg_1]	count=2
function	returns an ||| wide string	count=2
function_arg	[function_1] wide-string as ||| [arg_2] [function_1]	count=3
module	least key ||| 11.7.4	count=3
function	the [function] ||| rexp word [function]	count=4
function	for [function] ||| [function]	count=3
module	types ||| 4.3.3	count=1
function	macro transformer as described ||| macro transformer	count=2
function	symbol part ||| name	count=1
