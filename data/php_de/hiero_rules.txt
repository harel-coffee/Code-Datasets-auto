function_name	farbraum ||| setcolor	count=1
return	ändern ||| int	count=1
namespace	oder der ||| function	count=2
arg_pair	mit [arg_pair] ||| [arg_pair]	count=3
function_name	einen pdf-block [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	alle ||| function	count=1
function_name	wirkliche funktion sondern ein ||| list	count=1
namespace	in der gegebenen ||| function	count=1
function_name	löscht einen archiveintrag unter ||| delete index	count=1
function_name	liefert ein array welches ||| array	count=1
function_name	seite unter anwendung ||| page ext	count=3
function_name	der aktuellen tabelle ||| table	count=1
function_name	zurück die jeweils teil ||| explode	count=1
function_name	datum im gregorianischen kalender ||| gregoriantojd	count=1
function_name	öffnet ein physisches ||| open pdi document	count=3
arg_pair	allen zeichen die in ||| string $str	count=1
function	[function_name_1] ein auf ||| [arg_pair_2] [function_name_1]	count=1
function_name	flags bei allen nachrichten ||| imap setflag full	count=1
namespace	der funktion fgets() außer ||| function	count=1
return	altuellen ||| int	count=1
arg_pair	die funktion ändert [arg_pair_1] [arg_pair_2] siehe imap_open() für angaben ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	eine png ||| int $filters	count=1
arg_pair	die zu hostname passen ||| string $hostname array $mxhosts	count=1
arg_pair	verbindungen stattfindet ||| float $timeout	count=1
function_name	bezeichneten postgresql [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	der unterschrift ||| function	count=1
function_name	aufs ||| next	count=1
arg_pair	bereitet den ||| resource $pdfdoc	count=1
function	erweiterung [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	in month ||| int $month	count=2
arg_pair	ihren status ändern ||| int $tv_sec	count=1
function_name	divisor ||| fmod	count=1
return	funktion aktiviert ||| bool	count=1
namespace	in der engine ||| function	count=1
function_name	grafikzustandsobjekt ||| gstate	count=2
arg_pair	entschlüsselt) sealed_data unter verwendung ||| string $sealed_data	count=1
arg_pair	array nach schlüsseln in ||| array $array int $sort_flags	count=1
namespace	die zuordnungen zwischen ||| function	count=2
arg_pair	offset über bis zu ||| resource $context int $offset	count=1
function_name	sequenz von elementen ||| array slice	count=1
namespace	v8js::registerextension() registrierten javascript-erweiterungen zurück ||| v8js	count=1
function_name	erzeugt eine spezielle ||| mknod	count=1
function_name	werte für ein sql-kommando ||| pg convert	count=1
function_name	den ||| pdf get parameter	count=1
function_name	zusammenhang zwischen ||| asort	count=1
function_name	in klein- oder ||| change key case	count=1
arg_pair	mit flag ||| string $flag int $options	count=1
arg_pair	dn angegeben ||| array $dn	count=1
arg_pair	den [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
namespace	1.1.1970 zurück [namespace] dem in ||| [namespace]	count=1
function_name	attribut wenn er ||| move	count=1
arg_pair	daten vom übergebenen ||| resource $bz	count=1
namespace	und gibt die gelesenen ||| function	count=1
function_name	[function_name_1] htmlspecialchars() ||| [function_name_2] [function_name_1]	count=6
arg_pair	einen ||| int $msg_number	count=1
return	des vorkommens jedes einzelnen ||| mixed	count=1
function_name	abonnierten postfächern ||| imap getsubscribed	count=1
arg_pair	[arg_pair_1] text zur ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	persistente verbindung zu ||| pconnect	count=2
namespace	auf der linken rechten ||| function	count=1
return	funktion ||| string	count=4
return	diese ||| int	count=1
namespace	entsprechenden dateisystem oder der ||| function	count=1
namespace	in das ||| function	count=2
function_name	von tabellennamen von einer ||| list tables	count=1
function_name	or [function_name] sets are ||| maxdb [function_name]	count=1
function_name	erste attribut wenn er ||| next attribute	count=1
arg_pair	mit den ||| string $domain	count=1
namespace	gibt die nummer der ||| function	count=1
namespace	die nächste reihe bei ||| function	count=1
arg_pair	indizes von assoc_array entsprechen ||| array $assoc_array int $options	count=1
arg_pair	verwendung ||| string $encoding	count=1
function_name	v message [function_name] werden ||| msg get [function_name]	count=1
arg_pair	und wartet ||| int $tv_sec	count=1
namespace	ein ||| soapvar	count=1
function_name	attribut verweist ||| move to next	count=1
function_name	zeilen in einem ||| rows	count=1
arg_pair	seite eine ||| resource $pdfdoc float $llx	count=1
function_name	dio_stat() gibt ||| dio stat	count=1
function_name	wie array() ist ||| list	count=1
arg_pair	den input -string erweitert ||| string $input	count=1
function_name	werte für ein sql-kommando ||| convert	count=1
namespace	das entsprechende julianische datum ||| function	count=1
function_name	einem mysql ||| mysql	count=1
function_name	unterstützen ||| get info	count=1
function	einer mysql [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	die übergebene zeichenkette so ||| object $link_identifier string $text	count=1
function_name	und wert erhalten bleiben ||| ksort	count=1
return	-datei aus ||| bool	count=1
namespace	verweist ||| xmlreader	count=2
arg_pair	den ingres-server ||| string $types	count=2
function_name	flags bei ||| setflag full	count=1
function_name	datenbanken des ||| dbs	count=1
function_name	wenn ||| move to next	count=1
arg_pair	den namen [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	erstellt ||| string $type_name string $type_namespace	count=1
namespace	erstellt ein ||| soapvar	count=1
namespace	liefert alle http-header des ||| function	count=1
function_name	[function_name_1] getätigten insert ||| [function_name_2] [function_name_1]	count=1
function_name	übergebene zertifikat und ||| openssl x509 read	count=1
function_name	erzeugt eine ||| mknod	count=1
function_name	[function_name_1] anhielt ||| [function_name_2] [function_name_1]	count=4
function_name	repräsentation des ||| pkey export to file	count=1
function_name	anfang des [function_name] objects ||| [function_name]	count=1
function_name	spezifiziert wurde ||| fopen	count=1
namespace	liste der betroffenen ||| function	count=1
function	tabelle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	datei im dateisystem als ||| resource $connection string $pathname	count=1
function_name	und wartet ||| socket	count=1
namespace	server die zur ||| function	count=1
return	auch dies keine wirkliche ||| array	count=1
arg_pair	länge des ||| int $start int $length	count=1
return	array zurück ||| array	count=4
return	in einen ||| string	count=1
namespace	zurück der ||| function	count=4
function_name	entsprechnde datum ||| jdtojulian	count=1
function_name	die option die ||| socket set option	count=1
function_name	attributes mit ||| get attribute ns	count=2
function_name	einer ergebnismenge ||| ingres	count=1
arg_pair	schreibt text in ||| string $text	count=1
function_name	den aktuellen transaktionsstatus ||| pg transaction status	count=1
function_name	namen des hosts ||| pg host	count=1
namespace	julianischen kalender in der ||| function	count=1
arg_pair	angegebene schlüssel in ||| string $key	count=1
function	maskiert [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	die datensatz-id [function_name_2] ||| [function_name_2] insert [function_name_1]	count=2
function_name	die letzte fehlermeldung ||| last error	count=1
return	in klartext für ||| string	count=1
arg_pair	in julianday übergebenen ||| int $mode	count=1
return	den namen ||| string	count=1
function_name	öffnet ein [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	dessen dessen oid ||| mixed $object_id	count=1
arg_pair	socket len bytes ||| int $flags	count=1
function_name	ihren status ||| socket	count=1
function_name	encoding die texte von ||| bind textdomain codeset	count=1
function_name	der aufruf dieser methode ||| call	count=1
arg_pair	table_name in ||| string $table_name	count=1
function_name	letzte fehlermeldung ||| pg last error	count=2
arg_pair	wartet ob diese ihren ||| array $read	count=1
function_name	als ||| socket select	count=2
function_name	csr zertifikatssignierungsanfrage ||| openssl csr	count=1
function_name	get_defined_vars() aufgerufen wird ||| vars	count=1
arg_pair	ob diese ||| array $read array $write	count=1
function_name	diese funktion kopiert [function_name_1] [function_name_2] mit den gleichen voreinstellungen ||| [function_name_1] copy [function_name_2]	count=2
function_name	pem-kodiert versehene repräsentation des ||| pkey export to	count=1
function_name	cookie ||| setcookie	count=1
return	funktion ein array mit ||| array	count=1
function_name	include ||| get	count=1
arg_pair	eine benannte virtuelle datei ||| string $filename	count=1
namespace	für die letzte ||| function	count=1
namespace	verbindung zu der postgresql-datenbank ||| function	count=1
function	[function_name_1] postfachs mailbox ||| [function_name_1] [arg_pair_2]	count=1
namespace	fehlernummer und die ||| function	count=1
function_name	attribut ||| to next	count=2
namespace	und wartet ||| function	count=1
return	dies keine ||| array	count=1
arg_pair	vom anfang eines ||| string $str string $character_mask	count=1
arg_pair	wenn [arg_pair] gegen ||| [arg_pair]	count=1
function_name	ms sql ||| mssql	count=1
namespace	string in das ||| function	count=1
namespace	die daten aus ||| function	count=1
function_name	alle registrierten __autoload() ||| spl autoload	count=1
namespace	kalender in der ||| function	count=2
function_name	php-variable ||| bind	count=2
arg_pair	werten mittels einer ||| array $array callable $value_compare_func	count=1
return	diese funktion bestimmt ob ||| bool	count=1
function_name	gid des ||| setgid	count=1
function_name	image ||| get image	count=1
arg_pair	domain für eine ||| string $msgid1	count=2
arg_pair	[arg_pair_1] old_mbox ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	objekt ||| object	count=1
function_name	unterschiede ||| diff	count=2
function_name	in einer ergebnismenge zurück ||| ingres	count=1
function_name	verwirft ||| clean	count=1
function_name	des zuletzt getätigten insert ||| last insert	count=1
function_name	datensatz ||| get record	count=1
function_name	ein attribut ||| move	count=1
arg_pair	erstellt ein ||| mixed $data string $encoding	count=1
function_name	attribut verweist oder aufs ||| move	count=1
function_name	datensätze zeilen ||| numrecords	count=1
function_name	verschiedenen assert() optionen ||| assert options	count=1
arg_pair	inhalt einer variable ||| bool $syntax_only	count=1
namespace	die zuordnungen ||| function	count=2
function_name	ein attribut verweist ||| to next	count=1
function_name	klein- oder großbuchstaben ||| array change key case	count=1
arg_pair	den gegebenen plaintext ||| string $plaintext	count=1
namespace	teil [namespace] ||| [namespace]	count=1
arg_pair	length spezifizierte ||| bool $preserve_keys	count=1
namespace	gibt eine kopie von ||| function	count=1
function_name	-array als die zugehörigen ||| combine	count=1
arg_pair	wert ||| mixed $value	count=1
function_name	kind beendet wurde ||| pcntl wtermsig	count=1
namespace	datum zum kalender der ||| function	count=1
arg_pair	low-level-api-funktion um [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	ein element verweist ||| move to next	count=1
namespace	ob der abbruch einer ||| function	count=1
namespace	eine kopie von ||| function	count=1
namespace	das vorkommen von ||| function	count=1
function_name	das feld definiert ist ||| field	count=1
arg_pair	header-informationen zu übertragendes ||| int $expire	count=1
namespace	der dem ||| function	count=1
function_name	ein element verweist ||| next	count=1
arg_pair	benennt einen durch seinen ||| string $name string $newname	count=1
arg_pair	mittels einer ||| array $array callable $value_compare_func	count=1
return	alle http-header des ||| array	count=1
namespace	durch die funktionen ||| function	count=1
function_name	fdf dokuments ||| fdf set encoding	count=1
function_name	registriert ||| register shutdown	count=1
return	löscht einen archiveintrag unter ||| bool	count=1
function_name	erzeugt einen neuen ||| new	count=1
function_name	die letzte notice-meldung des ||| last notice	count=1
namespace	der an ||| function	count=1
function_name	er auf ein attribut ||| next	count=1
function_name	pdf dokument und ||| pdf	count=1
function_name	setzt ||| set status	count=1
namespace	der zuletzt ||| function	count=1
function_name	das feld mit ||| field type	count=1
arg_pair	und ||| string $pathname	count=1
function_name	objekt [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	platziert ein bild oder ||| fit	count=1
arg_pair	wendet die funktion callback ||| array $array callable $callback	count=1
namespace	wie ||| function	count=2
function	[function_name_1] schlüssels key ||| [arg_pair_2] [function_name_1]	count=3
function	die funktion ändert [function_name_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [function_name_1] [arg_pair_2]	count=1
function_name	versucht ||| load	count=1
arg_pair	liest/setzt verschiedene interne readline-variablen ||| string $varname string $newvalue	count=1
return	wenn sie ||| bool	count=1
function	[function_name_1] nachricht ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=1
function_name	vom typ af_unix ||| socket recvfrom	count=1
function_name	erzeugt ein grafikzustandsobjekt ||| pdf create gstate	count=3
arg_pair	in eine tabelle ||| resource $connection string $table_name	count=1
namespace	verwendet werden ||| function	count=1
arg_pair	überprüft welche ||| string $file	count=1
namespace	signalisiert dem process der ||| function	count=1
namespace	der von übergebenen dateizeiger ||| function	count=1
arg_pair	angegebenen namen zu erstellen ||| bool $recursive resource $context	count=1
arg_pair	[arg_pair_1] datei ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	von assoc_array entsprechen und ||| int $options	count=1
function_name	produkt von werten ||| product	count=1
function_name	das mysql protokoll ||| mysql get proto info	count=1
namespace	aktuellen position der ||| function	count=1
arg_pair	trennzeichens um ||| string $break bool $cut	count=1
function_name	aktiviert ein grafikzustandsobjekt ||| gstate	count=1
function_name	schlüssel [function_name_2] ||| [function_name_2] private [function_name_1]	count=2
arg_pair	source nach dest ||| string $source string $dest	count=1
function_name	ermittelt den [function_name_1] [function_name_2] ||| string [function_name_2] [function_name_1] resource	count=2
namespace	die rückgabe der ||| function	count=1
function_name	[function_name_1] template unter ||| [function_name_2] [function_name_1]	count=1
function_name	guid ||| mssql guid string	count=1
namespace	aus der aktuellen füllfarbe ||| function	count=1
namespace	arbeitet die von ||| function	count=1
arg_pair	spezielle oder ||| int $major	count=1
arg_pair	ihren status ||| array $read array $write	count=1
return	mit ||| object	count=1
function_name	[function_name_1] des feldes ||| [function_name_2] [function_name_1]	count=8
function_name	nächste attribut wenn ||| move to next	count=1
namespace	-string erweitert auf der ||| function	count=1
function	die texte [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	status ändern ||| array $except int $tv_sec	count=1
function_name	separaten callbackfunktionen ||| array uintersect uassoc	count=1
arg_pair	ändert [arg_pair] ||| [arg_pair]	count=3
function_name	__autoload() () fallback-funktion ||| spl autoload	count=1
arg_pair	ein ||| array $rows string $delimiter	count=1
function_name	spezielle ||| posix	count=1
function_name	der ||| call	count=1
function_name	[function_name] angegebenem ||| [function_name]	count=2
arg_pair	input -string erweitert auf ||| string $input	count=1
function_name	füllt einen pdf-block mit ||| fill pdfblock	count=1
function_name	eines dbx_query() ||| dbx	count=1
function_name	benutzten verbindung ||| get host info	count=1
namespace	des ||| function	count=1
arg_pair	variable als ||| mixed $var	count=1
function_name	wert des attributes mit ||| get attribute	count=1
function_name	und ||| pdf	count=6
function_name	erhalten bleiben ||| ksort	count=1
namespace	servers für die angegebene ||| function	count=1
function_name	ein ||| create from	count=1
function_name	wenn er auf ||| to	count=1
function_name	neuen ||| new	count=1
arg_pair	angegebenen ||| string $class_name	count=1
arg_pair	domain von ||| string $codeset	count=1
arg_pair	abschnitt eines textflusses in ||| resource $pdfdoc int $textflow	count=1
arg_pair	wartet ob diese ihren ||| array $except	count=1
return	liefert den ersten wert ||| mixed	count=1
function_name	sendet ein site exec-kommando ||| ftp exec	count=1
function_name	in klein- oder ||| array change key case	count=1
arg_pair	elemente eines ||| resource $pdfdoc int $doc	count=1
arg_pair	übergebene zeichenkette so dass ||| object $link_identifier	count=1
namespace	der durch ||| function	count=3
namespace	reihenfolge der ||| function	count=1
function_name	< meta > -tags ||| get meta tags	count=1
function_name	spalte [function_name_2] ||| [function_name_2] fetch [function_name_1]	count=2
function	beliebiges kommando [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	der definierten funktionen ||| function	count=1
arg_pair	zugriffsrechte für ||| string $rights	count=1
function_name	ftp-verbindung zum ||| ftp connect	count=1
function_name	include include_once require ||| get	count=1
function_name	letzten imap ||| imap	count=1
function	tabelle und [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
namespace	einen ||| ziparchive	count=1
namespace	das nächste ||| xmlreader	count=1
function_name	gewählten kodierung ||| zlib encode	count=1
arg_pair	von domain von gettext() ||| string $domain string $codeset	count=1
arg_pair	und ||| string $encoding	count=1
function_name	md5-code einer datei deren ||| md5 file	count=1
namespace	von dem zeiger ||| function	count=1
namespace	setzt den zeiger auf ||| xmlreader	count=1
arg_pair	php- oder benutzerdefinierte funktion ||| string $name	count=1
function_name	funktion ist ähnlich strcmp() ||| strncmp	count=1
function_name	client für bestimmte ||| pg client	count=1
arg_pair	openssl_seal() verschlüsselt data unter ||| string $data string $sealed_data	count=1
function_name	der die verbindungsoptionen ||| pg options	count=1
function_name	bestimmten zeile und ||| fetch	count=1
function_name	wert des attributes ||| attribute	count=1
function_name	es keinen fehler gab ||| error	count=1
function_name	$_session-superglobalen ||| encode	count=1
arg_pair	table_name deren feldnamen ||| string $table_name	count=1
arg_pair	spezielle oder ||| string $pathname int $mode	count=1
function_name	zeiger auf ||| next	count=1
arg_pair	öffnet ein auf ||| resource $pdfdoc string $filename	count=1
return	auf ein attribut verweist ||| bool	count=1
namespace	[namespace] unix-epoche januar ||| [namespace]	count=3
namespace	neue und übernimmt die ||| function	count=1
function_name	informationen ||| multi info	count=1
arg_pair	passwort und ||| string $password	count=1
function_name	für das feld mit ||| field type	count=1
function_name	wurde ||| get status	count=2
arg_pair	oder ||| int $mode	count=1
return	julianischen datum in einen ||| string	count=1
namespace	die variable mit ||| function	count=2
arg_pair	ihren ||| array $write	count=1
arg_pair	ihren status ändern ||| array $except	count=1
namespace	die entsprechende ||| function	count=1
arg_pair	wartet ob diese ||| array $except int $tv_sec	count=1
arg_pair	des assoc_array in ||| int $options	count=1
function_name	pem-kodiert versehene repräsentation des ||| openssl pkey export to	count=1
function_name	option option von ||| option	count=1
function_name	von ein oder ||| function	count=1
function_name	option option von der ||| option	count=1
function_name	als ||| fill	count=1
function_name	eine dbase-datenbank ||| dbase	count=1
function_name	benutzt um einen gemeinsamen ||| shmop	count=2
function_name	kompletten ungefilterten kopf ||| fetchheader	count=1
function_name	anzahl der dokumente ||| udm get doc count	count=1
function_name	die [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	fragt ||| int $num string $keyword	count=1
arg_pair	verwendung eines font -handle ||| int $font	count=1
function_name	auch dies keine ||| list	count=1
function_name	den oracle-platzhalter ||| by	count=1
function_name	datei ||| posix mknod	count=2
arg_pair	dn ||| array $dn	count=1
function_name	aufrufende ||| args	count=1
arg_pair	-aufrufs mit ||| string $user_compare_function	count=1
function_name	tabellennamen von einer mysql ||| mysql list tables	count=1
namespace	verschlüsselt den inhalt der ||| function	count=1
arg_pair	wandelt htmlentities() ||| string $encoding	count=1
arg_pair	in envelope gegebenen kopfelementen ||| array $envelope	count=1
arg_pair	die datei in ||| bool $use_include_path	count=1
function_name	socket_recv() ||| socket recv	count=1
function	texte [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	zufälligen ||| array rand	count=2
arg_pair	übergebene hash den ||| string $hash	count=1
return	liefert [return] ||| [return]	count=3
function_name	internen datensatz-zeiger eines ||| fbsql data seek	count=1
arg_pair	erzeugt eine ||| resource $pdfdoc string $name	count=1
return	wert ||| mixed	count=3
arg_pair	der geparst werden soll ||| string $source	count=1
arg_pair	ein datum in calendar ||| int $calendar int $month	count=1
namespace	den internen zeiger von ||| function	count=1
function_name	die letzte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	des aktuellen pdf-dokuments ||| pdf	count=1
return	aufs erste ||| bool	count=1
function_name	datensätze ||| rows	count=1
namespace	[namespace] aktuelle füllfarbe ||| [namespace]	count=1
namespace	zu der postgresql-datenbank ||| function	count=1
namespace	archiveintrag unter verwendung ||| ziparchive	count=1
function_name	abschnitts ||| strspn	count=1
function_name	ob diese ihren status ||| socket	count=1
arg_pair	unterschied zwischen [arg_pair] zusätzlicher indexprüfung ||| [arg_pair]	count=1
namespace	[namespace] priorität ||| [namespace]	count=1
arg_pair	einen ||| string $name	count=2
arg_pair	mit dem parameter dn ||| resource $privkey	count=1
function_name	betroffenen zeilen ||| rows	count=1
function_name	aufruf dieser methode ist ||| call	count=1
function_name	wenn er auf ||| move to	count=1
return	gibt einen ||| string	count=1
function_name	des aktuellen pdf-dokuments verweist ||| pdf	count=1
arg_pair	einer variable als ||| mixed $var	count=1
function_name	füllt einen text-block mit ||| pdf fill textblock	count=1
function_name	erzeugt ||| create	count=2
namespace	der angegebenen datenbank ||| function	count=1
arg_pair	des postfachs mailbox ||| string $mailbox	count=1
arg_pair	[arg_pair_1] und bcc ||| [arg_pair_1] [arg_pair_2]	count=4
namespace	erstellte archiv ||| ziparchive	count=1
arg_pair	host her ||| int $port	count=1
arg_pair	ist die erweiterte version ||| resource $result int $result_type	count=1
function_name	ihren ||| select	count=1
function_name	gegebenen extension definierten funktionen ||| get extension funcs	count=1
arg_pair	gibt den input -string ||| string $input	count=1
arg_pair	den input ||| int $pad_length	count=1
function_name	gehört ||| mssql fetch row	count=1
namespace	entsprechend der ||| function	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $sequence [arg_pair_1]	count=4
function_name	auf ||| move to next	count=3
arg_pair	key ||| int $key	count=1
arg_pair	ob diese ihren status ||| array $read array $write	count=1
function_name	[function_name_1] grafikzustandsobjekt unter ||| [function_name_1] [function_name_2]	count=1
namespace	rot13-transformation auf die ||| function	count=1
namespace	wert der ||| function	count=1
return	eine ||| string	count=1
arg_pair	offset über bis zu ||| int $offset	count=1
function_name	pdf-block mit ||| fill pdfblock	count=1
function	[function_name_1] mailbox beenden ||| [function_name_1] [arg_pair_2]	count=1
namespace	die die ||| function	count=4
function_name	setzt das ||| set	count=1
function_name	klasse ||| class	count=2
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| openssl pkey export to	count=1
function_name	und bereitet sie ||| pdf	count=1
function_name	liefert schema namen ||| mysql db name	count=2
function_name	schreibt aus dem ||| write	count=1
function_name	ersetzt die ||| replace	count=1
return	zeiger auf ||| bool	count=1
namespace	funktion sondern ein ||| function	count=1
arg_pair	die funktion callback iterativ ||| array $array callable $callback	count=1
function_name	attribut verweist ||| to	count=1
function_name	funktion verwirft ||| clean	count=1
function_name	auf ein ||| to	count=2
arg_pair	funktion ändert [arg_pair] ||| [arg_pair]	count=3
function	löscht [arg_pair_2] ||| [function_name_1] string $key [arg_pair_2]	count=1
function_name	pem-kodiert versehene repräsentation ||| export to	count=1
arg_pair	seines index zurück ||| int $index	count=1
function_name	client für bestimmte zeichensätze ||| pg client encoding	count=1
function_name	verschlüsselt ||| encrypt	count=2
arg_pair	den parameter val ||| float $val	count=1
function_name	aufrufende funktion ||| args	count=1
namespace	die angegebene ||| function	count=5
function_name	namen der aktuellen ||| name	count=1
namespace	nach der ||| function	count=2
arg_pair	seines index zurück ||| int $index int $length	count=1
arg_pair	die funktion openssl_pkcs7_sign() signiert ||| int $flags string $extracerts	count=1
function_name	ein grafikzustandsobjekt unter anwendung ||| gstate	count=1
arg_pair	oder fügt text und ||| string $text string $optlist	count=1
function_name	aktuelle thread id ||| mysql thread id	count=1
namespace	der ausführungswarteschlange) ||| function	count=1
arg_pair	server ohne auf ||| resource $connection	count=1
arg_pair	verbindung zu einer postgresql-datenbank ||| int $connect_type	count=1
namespace	die reale ||| function	count=1
arg_pair	postfachs old_mbox ||| string $old_mbox	count=1
function_name	datenbanken ||| dbs	count=1
function_name	die textausgabe ||| set text pos	count=1
function_name	repräsentation des ||| to	count=1
function_name	eines pcos-pfades vom ||| pdf pcos get number	count=1
function_name	wenn ||| to next	count=1
arg_pair	diese ihren ||| array $except int $tv_sec	count=1
function_name	option ||| socket set option	count=1
function_name	die letzte insert update ||| mysql affected rows	count=1
function_name	die php-variable ||| oci bind array	count=1
function_name	ergebnis als integer-wert ||| bccomp	count=1
return	aktivität auf einer ||| int	count=1
function_name	namen des feldes nach ||| next field name	count=1
function_name	tabelle und alle ||| table	count=1
arg_pair	data ||| string $sealed_data	count=1
function_name	datenbank existiert ||| dba exists	count=2
function_name	a reconstructed image ||| get image	count=1
function_name	in ingres ||| ingres	count=1
arg_pair	die übergebene zeichenkette ||| string $text	count=1
function_name	die letzte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	oder nachrichten der ||| function	count=1
arg_pair	ihren ||| array $read array $write	count=1
function_name	persistente verbindung ||| pconnect	count=2
arg_pair	in month day ||| int $month int $day	count=2
arg_pair	komprimiert daten mit ||| string $data string $encoding	count=1
function_name	[function_name_1] als gelöscht ||| [function_name_1] [function_name_2]	count=1
return	aufruf dieser methode ist ||| mixed	count=1
function_name	irgendeine art leerzeichen erzeugt ||| space	count=1
function_name	internen datensatzzeiger ||| seek	count=1
function_name	den zeiger auf das ||| to next	count=1
function_name	ein ldap verzeichnis mit ||| ldap bind	count=1
namespace	eines url verwendet werden ||| function	count=1
arg_pair	werten von array1 die ||| array $array1	count=1
function_name	je [function_name] ||| [function_name]	count=3
namespace	ersetzt diese durch die ||| function	count=1
function_name	wenn er auf ein ||| next	count=1
function_name	wert eines parameters ||| remove parameter	count=1
function_name	[function_name_1] fehlermeldung ||| [function_name_2] [function_name_1]	count=5
arg_pair	platziert eine ||| resource $pdfdoc int $page	count=1
namespace	von der aktuellen ||| function	count=1
function_name	ein attribut verweist ||| move to	count=1
namespace	wird verwendet um ||| function	count=1
function	[function_name_1] eine ||| [function_name_1] page ext [arg_pair_2]	count=1
arg_pair	aus array in ||| array $array	count=1
arg_pair	eine gewöhnliche ||| int $major int $minor	count=1
function_name	die jeweils teil von ||| explode	count=1
arg_pair	mit filename übergeben wurde ||| bool $raw_output	count=1
function_name	entsprechnde datum im ||| jdtojulian	count=1
arg_pair	den gelesenen feldern ||| string $enclosure string $escape	count=1
arg_pair	bessere performance zu bieten ||| bool $clear_realpath_cache string $filename	count=1
function_name	tabelle ||| table	count=4
function_name	identifier der tabelle ||| table	count=1
function_name	dio_stat() gibt informationen zum ||| stat	count=1
function	öffnet [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	assoc_array entsprechen und ||| int $options	count=1
return	erzeugt eine ||| bool	count=1
function_name	nächste attribut ||| to	count=1
function_name	uid für eine gegebene ||| imap uid	count=1
function_name	oder aufs erste ||| move to next	count=1
function_name	pdf-seite ||| place pdi page	count=1
function_name	gibt die fehlernummer ||| errno	count=1
arg_pair	uri angeben die auf ||| string $uri	count=1
namespace	zu der übergebenen ||| function	count=1
return	gegebenen kopfelementen und den ||| string	count=1
namespace	verweist oder ||| xmlreader	count=1
arg_pair	die mittels offset und ||| int $offset	count=1
arg_pair	[arg_pair_1] [arg_pair_2] späteren ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	mit zwei großen unterschieden ||| msql pconnect	count=1
function_name	die möglichkeit ||| oci cancel	count=1
arg_pair	konvertiert einen string in ||| string $string int $split_length	count=1
function_name	geholten datensatz ||| fetch	count=1
arg_pair	als ||| array $read array $write	count=1
function_name	mit dem ergebnis verknüpfte ||| result	count=1
namespace	zurück [namespace] ||| [namespace]	count=1
function_name	listet alle ||| list	count=1
function_name	auf das nächste ||| move to next	count=1
arg_pair	oder eine gewöhnliche datei ||| int $major int $minor	count=1
namespace	die aktuelle ||| function	count=2
arg_pair	erstellen ||| resource $context	count=1
arg_pair	datei filename als ausgabe ||| string $filename	count=1
arg_pair	ob ein passwort und ||| string $password	count=1
function_name	auf ein attribut ||| move to next	count=1
arg_pair	diese ||| array $write	count=1
function_name	large object und gibt ||| pg lo	count=1
return	wie ||| array	count=1
function_name	als ||| array fill	count=1
function_name	message ||| msg stat	count=1
function_name	[function_name_1] tabellen ||| [function_name_1] [function_name_2]	count=1
function_name	schlüssel ||| dba	count=1
function	tabelle und [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	attribut wenn ||| move	count=1
arg_pair	ihren status ändern ||| array $except int $tv_sec	count=1
function_name	bild oder template ||| image	count=1
arg_pair	nimmt ||| array $read array $write	count=1
arg_pair	und wartet ob ||| int $tv_sec	count=1
namespace	letzten query der übergebenen ||| function	count=1
arg_pair	abfrage ||| mixed $bind_arg	count=1
function	löscht [arg_pair_2] ||| [function_name_1] pvf resource $pdfdoc [arg_pair_2]	count=1
function_name	nächste ||| to next	count=1
function_name	oracle-platzhalter ||| by name	count=1
arg_pair	in replacement ||| mixed $replacement	count=1
function	tabelle [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
arg_pair	die funktion [arg_pair_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=2
function_name	funktion socket_set_nonblock() setzt ||| socket set nonblock	count=2
namespace	status ändern ||| function	count=1
arg_pair	funktion ist das ||| string $string	count=1
namespace	namen [namespace] tabelle die ||| [namespace]	count=2
function_name	den angegebenen [function_name] frei ||| [function_name]	count=1
arg_pair	zeichenkette so ||| string $text	count=1
namespace	verzeichnis von ||| function	count=1
namespace	der installationscode ||| function	count=1
function_name	aufs erste ||| to	count=1
function_name	das kind beendet wurde ||| pcntl wtermsig	count=1
arg_pair	ob diese ihren status ||| array $except int $tv_sec	count=1
arg_pair	funktion callback iterativ auf ||| callable $callback	count=1
arg_pair	filename übergeben wurde gemäß ||| bool $raw_output	count=1
namespace	identisch mit der ||| function	count=2
arg_pair	socket socket len bytes ||| int $len int $flags	count=1
function_name	sondern ||| list	count=1
arg_pair	file_get_contents() die datei ||| string $filename bool $use_include_path	count=1
namespace	wartet ||| function	count=1
function_name	soap-anfrage über http aus ||| do request	count=1
function_name	virtuelles pdf-dokument und ||| pdi	count=1
arg_pair	datenzeile aus ||| int $fetch_flag	count=1
function_name	versucht die ||| load extension	count=1
function_name	oder ||| to next	count=1
namespace	gibt die darin ||| function	count=1
arg_pair	fügt eine datei von ||| string $filename	count=1
function_name	zeitpunkt wann ||| filemtime	count=1
function_name	entspricht weitgehend readgzfile() ||| gzfile	count=1
function_name	den zeiger auf ||| to	count=1
namespace	einen archiveintrag ||| ziparchive	count=1
function_name	das kind anhielt ||| pcntl wstopsig	count=2
return	auf ||| bool	count=11
arg_pair	datei in ||| string $filename bool $use_include_path	count=1
return	spezielle ||| bool	count=1
arg_pair	spaltenwerte mit den werten ||| resource $connection	count=1
namespace	internen zeiger von array ||| function	count=1
function_name	datei ||| to file	count=1
arg_pair	und die ||| resource $link	count=1
function_name	im [function_name] ||| [function_name] field type	count=1
function_name	repräsentation ||| openssl pkey export to	count=1
function	[function_name_1] subject ||| [function_name_1] [arg_pair_2]	count=1
function_name	setzt ||| pg set	count=1
return	eine ||| void	count=1
namespace	ob diese ||| function	count=1
function_name	[function_name_1] des ||| [function_name_2] [function_name_1]	count=2
function_name	den vergleich einfließen sollen ||| strncasecmp	count=1
arg_pair	einem zufällig erzeugten geheimen ||| array $env_keys array $pub_key_ids	count=1
arg_pair	den socket socket ||| resource $socket	count=1
return	des ||| array	count=1
function_name	an die aufrufende funktion ||| args	count=1
function	ersetzt die [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	liest [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	länge des ||| int $length	count=1
function_name	dem ||| imagepng	count=1
function_name	klassen ||| classes	count=1
namespace	wird zur ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] by name [arg_pair_2]	count=3
namespace	die nachricht der ||| function	count=1
function_name	[function_name_1] feldes ||| [function_name_2] [function_name_1]	count=2
arg_pair	vom übergebenen ||| resource $bz	count=1
function_name	uid für eine ||| imap uid	count=2
arg_pair	ermittelt den wert ||| resource $pdfdoc	count=1
function_name	des attributes ||| attribute	count=1
function_name	flags ||| setflag full	count=1
arg_pair	[arg_pair_1] den ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	an die aufrufende ||| args	count=1
function_name	der das feld definiert ||| field	count=1
return	gibt [return] ||| [return]	count=5
function_name	einen knoten eines dom ||| dom	count=1
function_name	alle registrierten __autoload() funktionen ||| spl autoload functions	count=1
function_name	[function_name_1] den stacktrace ||| [function_name_2] [function_name_1]	count=1
function_name	zufälligen eintrags bzw ||| array rand	count=1
return	status ändern ||| int	count=1
namespace	den typ der ||| function	count=1
arg_pair	ein ||| string $node_name	count=1
function_name	agent alloziierten speicher frei ||| udm free agent	count=1
function_name	das kind beendet ||| pcntl wtermsig	count=1
function_name	schlüssel des zufälligen ||| array rand	count=1
arg_pair	subject nach ||| mixed $subject int $limit	count=1
function_name	ein objekt ||| object	count=1
function_name	schrift [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	funktion dio_stat() gibt informationen ||| dio stat	count=1
function_name	einzelne textzeile unter berücksichtigung ||| textline	count=1
arg_pair	status ändern ||| array $except	count=1
function_name	ein ||| soap var	count=2
function_name	des randes ||| dash	count=1
arg_pair	ein auf ||| resource $pdfdoc string $filename	count=1
arg_pair	angegebenen ||| resource $ftp_stream	count=1
arg_pair	die datei ||| string $filename	count=1
return	element verweist ||| bool	count=1
namespace	löscht einen archiveintrag ||| ziparchive	count=1
arg_pair	mittels einer ||| array $array	count=1
function_name	nachricht einen ||| imap	count=1
arg_pair	verbindungskennung link_identifier bezieht ||| resource $link_identifier	count=1
function_name	einer bestimmten zeile und ||| fetch	count=1
function_name	sequenz von ||| slice	count=1
function_name	[function_name] sequence ||| [function_name]	count=1
function_name	fehlermeldung ||| error log	count=2
namespace	-arrays besteht [namespace] ||| [namespace]	count=3
return	den gebrauch durch ||| resource	count=1
function_name	persistente verbindung zu einer ||| pconnect	count=1
function	eine [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	basierend auf den informationen ||| array $extraattribs	count=1
function_name	[function_name] eingefügten datensatzes ||| pg [function_name]	count=1
function_name	[function_name_1] des zuletzt ||| [function_name_2] [function_name_1]	count=3
arg_pair	zeichen vom anfang eines ||| string $str string $character_mask	count=1
namespace	teil der ||| function	count=1
arg_pair	schnittmenge von ||| array $array1 array $array2	count=1
arg_pair	in offset ||| int $offset	count=1
function_name	des voherigen angehängt werden ||| array merge recursive	count=1
function_name	vorbereitete ||| ibase	count=1
function_name	encoding die texte ||| bind textdomain codeset	count=1
function_name	ein array welches ||| array	count=1
namespace	nachrichten der ||| function	count=1
function_name	archiveintrag unter verwendung ||| delete	count=1
namespace	der umgebung ||| function	count=1
function_name	plural-textsuche zu ||| dngettext	count=1
function_name	repräsentation des schlüssels ||| openssl pkey export to file	count=1
arg_pair	sortierte liste ||| string $charset	count=1
return	gibt ein array aus ||| array	count=2
function_name	[function_name_1] spalte ||| [function_name_2] [function_name_1]	count=3
function_name	objekt ist ||| is object	count=2
function_name	[function_name] steuern ||| [function_name] set	count=3
return	nächste ||| bool	count=1
function_name	numerisch ||| numeric	count=1
function_name	wechselt vom aktuellen ||| ftp chdir	count=1
arg_pair	angegebenen datei filename ||| string $filename string $error_message	count=1
function_name	[function_name_1] ldap verzeichnis ||| [function_name_2] [function_name_1]	count=2
function_name	erzeugt [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	setzt den zeiger auf ||| move	count=1
function_name	[function_name_1] feldes in ||| [function_name_2] [function_name_1]	count=2
arg_pair	dieser methode ||| string $function_name	count=1
arg_pair	die schnittmenge ||| array $array2	count=1
namespace	array() ist ||| function	count=1
return	objekt zurück ||| object	count=1
namespace	auf der ||| function	count=3
function_name	ein attribut ||| next	count=1
return	funktion löscht ||| bool	count=1
namespace	daten von der ||| function	count=1
namespace	der postgresql-datenbank die ||| function	count=1
function_name	kodiert ||| oauth urlencode	count=1
arg_pair	die mit flag ||| string $flag int $options	count=1
return	diese funktion aktiviert ||| bool	count=1
arg_pair	msg_number ||| resource $imap_stream int $msg_number	count=1
function_name	liest ein large object ||| pg lo read	count=1
namespace	[namespace] optionale ||| [namespace]	count=2
namespace	eintrag der ||| function	count=1
namespace	[namespace] aktuellen position ||| [namespace]	count=3
namespace	inhalte der datei angegeben ||| function	count=1
function_name	zeiger ||| next	count=1
function_name	gibt die unterschiede ||| array diff	count=2
function_name	zeile und spalte eines ||| fetch result	count=1
arg_pair	beliebigen font ||| float $fontsize	count=1
arg_pair	die funktion ändert [arg_pair_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [arg_pair_1] [arg_pair_2]	count=3
namespace	matrix mit der ||| function	count=1
namespace	auf ein attribut verweist ||| xmlreader	count=1
arg_pair	und ||| resource $imap_stream	count=1
function_name	falls ||| pg	count=2
return	wartet ob diese ihren ||| int	count=1
namespace	gefolgt von ||| function	count=1
function_name	msql ||| msql	count=1
function_name	funktion socket_set_nonblock() ||| nonblock	count=1
function_name	[function_name_1] als ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] msql-servers ||| [function_name_2] [function_name_1]	count=2
namespace	vergleichsalgorithmus der ||| function	count=1
arg_pair	zu erstellen ||| bool $recursive resource $context	count=1
return	prozesse in ||| array	count=1
arg_pair	sortierte liste von ||| string $charset	count=1
function_name	versehene repräsentation des ||| openssl pkey export to file	count=1
function_name	ein zertifikat ||| openssl x509	count=1
function_name	[function_name_1] den ||| [function_name_2] [function_name_1]	count=1
arg_pair	erstellt ||| mixed $data	count=1
return	aber in einem array ||| array	count=1
function_name	gegebenen extension ||| extension funcs	count=1
function_name	ein array zurück welches ||| key	count=1
function_name	ihre beendigung zu warten ||| send prepare	count=1
function_name	php-variable variable ||| bind	count=1
function_name	leer ||| empty	count=1
arg_pair	dn angegeben werden ||| array $dn resource $privkey	count=1
arg_pair	den übergebenen parametern ||| string $stmtname	count=2
function_name	oder ||| posix mknod	count=2
arg_pair	die mit flag ||| int $options	count=1
arg_pair	angegebene verbindungskennung link_identifier bezieht ||| string $database_name resource $link_identifier	count=1
arg_pair	ermittelt die länge ||| int $length	count=1
arg_pair	prüft und ||| resource $connection	count=1
function_name	linienenden bestimmt ||| setlinecap	count=1
arg_pair	datei in einem string ||| string $filename bool $use_include_path	count=1
function_name	unterversionsnummer ||| get minorversion	count=1
arg_pair	bezieht ||| string $database_name	count=1
function_name	leerraum oder andere ||| ltrim	count=1
function_name	fehlernummer ||| get code	count=1
function_name	wartet ob diese ||| select	count=1
return	attribut verweist ||| bool	count=1
function_name	__autoload() () fallback-funktion spl_autoload() ||| spl autoload extensions	count=1
arg_pair	socket_send() sendet [arg_pair] ||| [arg_pair]	count=2
arg_pair	unescaped_string unter ||| string $unescaped_string resource $link_identifier	count=1
function	[function_name_1] domain von ||| [function_name_1] [arg_pair_2]	count=3
namespace	ldap_modify() funktion wird ||| function	count=1
function_name	ihren status ändern ||| socket select	count=1
arg_pair	angegebenen nachricht ||| resource $imap_stream	count=1
arg_pair	socket len bytes von ||| int $flags	count=1
function	[function_name_1] den ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	subject ||| int $limit	count=1
function_name	aufs erste ||| move	count=1
arg_pair	datei zum lesen oder ||| string $mode	count=1
function_name	eine ||| pg copy from	count=1
arg_pair	wartet ||| array $read array $write	count=1
namespace	der ausführungswarteschlange) über ||| function	count=1
arg_pair	v8js -kontexten benutzt ||| array $dependencies bool $auto_enable	count=1
namespace	auslastung der ||| function	count=1
function_name	eine vorbereitete ||| ibase	count=1
function_name	[function_name_1] physisches ||| [function_name_1] [function_name_2]	count=1
arg_pair	dateiname mit filename ||| bool $raw_output	count=1
arg_pair	in eine php-variable ||| int $depth int $options	count=1
function_name	unter verwendung ||| delete	count=1
namespace	in libmcrypt 2.2.x der ||| function	count=1
namespace	von string zurück der ||| function	count=1
function_name	internen datensatz-zeiger eines anfrageergebnisses ||| mysql data seek	count=1
function_name	element verweist ||| move to	count=1
namespace	base falls der ||| function	count=1
function_name	datenbank ||| dba	count=1
function_name	versucht ein verzeichnis mit ||| mkdir	count=1
function_name	diese [function_name_1] [function_name_2] mit den gleichen voreinstellungen ||| [function_name_1] [function_name_2]	count=4
function_name	erstellt ein ||| var	count=1
arg_pair	und liest sie ||| string $name	count=1
namespace	das koordinatensystem in x ||| function	count=1
return	der aufruf dieser methode ||| mixed	count=1
function_name	signatur zurück ||| gnupg verify	count=1
function_name	ändern ||| socket select	count=2
arg_pair	dn ||| resource $privkey	count=1
function_name	ist ||| is	count=7
arg_pair	baut eine verbindung zu ||| string $servername	count=1
return	den gebrauch durch andere ||| resource	count=1
arg_pair	den in purpose angegebenen ||| int $purpose	count=1
namespace	der umgebung server-variablen ||| function	count=1
namespace	werten der arrayelemente ||| function	count=1
function_name	klein- oder ||| change key case	count=1
return	keine ||| array	count=1
arg_pair	bestimmt den ||| resource $connection	count=1
arg_pair	verarbeitet bestimmte elemente eines ||| resource $pdfdoc	count=1
namespace	element verweist ||| xmlreader	count=1
function_name	[function_name] mit ||| [function_name]	count=1
function_name	die fehlernummer ||| code	count=1
function_name	zusammenhängenden nachrichten ||| imap thread	count=1
return	http-header ||| array	count=1
arg_pair	datei in einem ||| string $filename bool $use_include_path	count=1
function_name	liste der ||| function	count=1
function_name	eines pcos-pfades vom typ ||| pdf pcos get	count=2
arg_pair	ihren ||| array $read	count=1
arg_pair	und gibt ||| string $encoding	count=1
return	eine ressource zurück ||| resource	count=1
function_name	dies keine wirkliche ||| list	count=1
namespace	in der form mm/dd/yyyy ||| function	count=2
function	dom [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	unterschiede ||| array diff	count=2
arg_pair	strukturelement oder einen ||| resource $pdfdoc	count=1
function	[function_name_1] ein ||| [function_name_1] pdi resource $pdfdoc [arg_pair_2]	count=1
namespace	argument aus [namespace] ||| [namespace]	count=1
function_name	gesetzt ||| get parser	count=1
function_name	benutzten ||| mysql get host info	count=2
namespace	mit der verbindung ||| function	count=1
function	[function_name_1] virtuelle datei ||| [arg_pair_2] [function_name_1]	count=1
namespace	den zeiger ||| xmlreader	count=1
arg_pair	erstellt ||| mixed $data string $encoding	count=1
function	[function_name_1] property in ||| [arg_pair_2] [function_name_1]	count=4
function_name	schließt das geöffnete oder ||| close	count=1
return	der mittels ||| array	count=1
namespace	dem datensatz mit der ||| function	count=1
function_name	eine liste von tabellennamen ||| list tables	count=1
arg_pair	month ||| int $month	count=2
function_name	die jeweils teil ||| explode	count=1
function_name	handle von ||| multi remove handle	count=1
function_name	array() ist ||| list	count=1
namespace	übergeben wird der ||| function	count=1
arg_pair	bson ||| string $bson array $typemap	count=1
function_name	lokalisiert einen eintrag ||| locate	count=1
function_name	setzt den ||| next	count=1
function_name	fehlermeldung die ||| error	count=1
function_name	ein array [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	grenze befinden mit der ||| function	count=1
arg_pair	val auf ||| float $val	count=1
function_name	status ||| select	count=1
function_name	zeitpunkt wann der inhalt ||| filemtime	count=1
function_name	pcos-pfades vom typ ||| pdf pcos get number	count=1
function_name	und wartet ob ||| socket select	count=1
function_name	randes ||| dash	count=1
arg_pair	zeichenkodierung des ||| resource $fdf_document string $encoding	count=1
function_name	der angeforderten option option ||| ftp get option	count=1
arg_pair	wartet ob ||| array $except int $tv_sec	count=1
arg_pair	angegebene directory vom ftp-server ||| resource $ftp_stream string $directory	count=1
function_name	a reconstructed image ||| image	count=1
function_name	versehene repräsentation des ||| pkey export to	count=1
function_name	[function_name_1] insert ||| [function_name_2] [function_name_1]	count=1
function_name	liefert ||| mysql	count=2
arg_pair	ermittelt die schnittmenge ||| array $array1 array $array2	count=1
arg_pair	zeichenkette ||| string $text	count=1
arg_pair	welche ||| string $file	count=1
arg_pair	dem [arg_pair] ||| [arg_pair]	count=2
function_name	existiert ||| exists	count=2
arg_pair	eine tabelle ||| resource $connection string $table_name	count=1
arg_pair	basierend auf den ||| array $extraattribs	count=1
function_name	wenn er ||| next	count=1
return	und gibt ||| bool	count=1
arg_pair	erzeugen ohne auf ||| resource $connection	count=1
arg_pair	übergebenen verbings-kennung ||| resource $link_identifier	count=1
function_name	gibt eine [function_name] mit ||| [function_name]	count=1
namespace	setzt alle im archiv ||| ziparchive	count=1
function_name	verschlüsselt ||| openssl pkcs7 encrypt	count=2
function_name	der [function_name] ||| pg num [function_name]	count=3
function_name	repräsentation des ||| openssl pkey export to	count=1
function_name	oder template ||| image	count=1
function_name	prozesskennung ||| getpid	count=1
return	eines ||| int	count=3
namespace	der die aktuelle ||| function	count=1
function_name	ressource ist ||| is	count=1
function_name	funktion ||| filter input array	count=1
arg_pair	und die genauigkeit ||| resource $link	count=1
function_name	benutzerdefinierten vergleichsfunktion ||| uksort	count=1
return	unter verwendung seines ||| bool	count=1
function	eigenschaft [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=1
function_name	registriert ein ||| register	count=1
arg_pair	missbilligt ||| string $function_name string $arguments	count=1
arg_pair	text und ||| string $text	count=1
namespace	mit [namespace] linienfarbe ||| [namespace]	count=1
namespace	ist zu der ||| function	count=1
arg_pair	basierend auf den ||| array $configargs array $extraattribs	count=1
function_name	zurück ||| get	count=1
arg_pair	in [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	funktion ||| resource $result	count=1
arg_pair	ermittelt die länge des ||| int $length	count=1
arg_pair	subject ||| mixed $subject	count=1
function_name	setzt den ||| move	count=1
arg_pair	deren dateiname mit filename ||| bool $raw_output	count=1
function_name	tabelle vollständig ||| table	count=1
function_name	den gleichen algorithmus ||| password	count=1
function_name	setzt ||| socket set	count=1
namespace	wert von array ||| function	count=1
function_name	one or [function_name] sets ||| maxdb [function_name]	count=1
function_name	eine fehlermeldung ||| error	count=1
namespace	zu der postgresql-datenbank die ||| function	count=1
function_name	namen der ||| name	count=1
return	einen archiveintrag unter ||| bool	count=1
function_name	in utf-8 zu ||| utf8	count=1
function_name	msql ||| msql result	count=1
function_name	wirkliche funktion sondern ||| list	count=1
namespace	der datenbank zurück und ||| function	count=2
arg_pair	aufruf dieser ||| string $function_name	count=1
function_name	maskiert die ||| escape string	count=1
namespace	der binären ||| function	count=1
function_name	erzeugt ein ||| pdf create	count=1
function_name	[function_name] alle ||| array intersect [function_name]	count=3
arg_pair	den input -string ||| int $pad_length	count=1
function_name	numerisch [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	erzeugt ein grafikzustandsobjekt unter ||| pdf create gstate	count=1
function_name	das mysql [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	die verschiedenen assert() optionen ||| assert options	count=1
arg_pair	fest welche ||| string $file	count=1
function_name	angegebene eigenschaft ||| property	count=1
function_name	das ergebnis ||| mysql	count=1
function_name	auf das ||| to next	count=1
namespace	gibt ||| function	count=4
function_name	registriert ||| register	count=2
arg_pair	und ||| string $table_name	count=1
function_name	dio_stat() gibt informationen ||| stat	count=1
function_name	ein grafikzustandsobjekt ||| set gstate	count=1
function_name	die php-variable ||| bind	count=1
namespace	der per referenz ||| function	count=1
function_name	platziert ein ||| pdf fit	count=1
function_name	verweist oder aufs ||| move	count=1
namespace	automatische konversion von ||| function	count=1
arg_pair	eine png ||| int $quality int $filters	count=1
function_name	die option ||| option	count=1
return	funktion sondern ein ||| array	count=1
function_name	angeforderten [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	fdf ||| fdf set encoding	count=2
arg_pair	übereinstimmungen mit dem ||| array $matches int $flags	count=1
arg_pair	haystack vorkommt und gibt ||| string $haystack	count=1
function_name	eine dbase-datenbank ||| dbase open	count=1
arg_pair	nimmt als ||| array $read array $write	count=1
arg_pair	gegeben in jd in ||| int $jd	count=1
arg_pair	len bytes von name ||| int $len	count=1
function_name	msql ergebnismenge die mit ||| msql	count=1
arg_pair	alpha ||| resource $p float $alpha	count=1
arg_pair	angegebenen datei filename ||| string $filename	count=1
function_name	er auf ein element ||| move to next	count=1
function_name	position des ersten vorkommens ||| strpos	count=1
function_name	erzeugt eine spezielle ||| posix mknod	count=1
function_name	passwortüberprüfung zurück ||| crack getlastmessage	count=1
function_name	__autoload() () ||| spl autoload	count=1
function_name	[function_name_1] $_session-superglobale damit ||| [function_name_2] [function_name_1]	count=1
function_name	die kopfdaten der nachricht ||| imap	count=1
function_name	der inhalt des ausgabepuffers ||| ob	count=1
function_name	nächste ||| move	count=1
function_name	[function_name_1] oder template ||| [function_name_1] [function_name_2]	count=1
function_name	persistente ||| pg pconnect	count=2
arg_pair	zu erzeugen ohne auf ||| resource $connection	count=1
namespace	erzeugt ||| function	count=1
function_name	eine soap-anfrage über ||| do request	count=1
namespace	den fehlertext der ||| function	count=1
arg_pair	dessen dessen oid zurück ||| mixed $object_id	count=1
arg_pair	socket_create() oder mit ||| int $length	count=1
namespace	der verbindung so ||| function	count=1
function_name	[function_name_1] insert ||| [function_name_1] [function_name_2]	count=1
namespace	zurück in der ||| function	count=2
arg_pair	den wert eines ||| resource $pdfdoc	count=1
namespace	nachfolgenden aufrufen von ||| function	count=1
function_name	des msql-servers ||| msql	count=1
function_name	produkt von ||| array product	count=1
function_name	füllmusterdefinition ||| pattern	count=1
namespace	zurück auf die die ||| function	count=1
namespace	der transaktion gesperrten ||| function	count=1
namespace	der an allen lokalen ||| function	count=1
arg_pair	den namen des ||| resource $imap_stream	count=1
function_name	zusammenhang zwischen den ||| asort	count=1
namespace	dem process der mittels ||| function	count=1
function_name	registriert das javascript ||| register	count=1
function_name	vom typ string ist ||| is string	count=1
arg_pair	definiert ein mit den ||| string $domain bool $secure	count=1
arg_pair	aus einer [arg_pair] ||| [arg_pair]	count=2
arg_pair	ein ||| array $rows	count=1
function_name	message [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	der transaktion gesperrten reihen ||| function	count=1
return	string in ein array ||| array	count=1
function_name	zeilen ||| rows	count=2
function_name	pcos-pfades vom ||| pdf pcos get	count=2
return	durch bbcode_create() [return] wurde ||| [return]	count=1
function_name	aufs ||| to	count=1
arg_pair	array im parameter certs ||| mixed $pkcs12 array $certs	count=1
function_name	oid ||| oid	count=1
function_name	des /encoding schlüssels ||| fdf get encoding	count=2
namespace	der transaktion ||| function	count=1
function_name	[function_name_1] gelöscht ||| [function_name_2] [function_name_1]	count=1
return	des servers zurück ||| int	count=1
arg_pair	einem zufällig erzeugten geheimen ||| array $env_keys	count=1
function_name	einen text-block [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	die letzte ||| function	count=1
function_name	die potenz von exp ||| pow	count=1
namespace	inhalt der datei zuletzt ||| function	count=1
arg_pair	hängt ||| int $dbase_identifier array $record	count=1
return	dies ||| array	count=1
arg_pair	und kleinschreibung ||| string $str1	count=1
arg_pair	das [arg_pair] optionsliste ||| [arg_pair]	count=1
namespace	vorkommen von ||| function	count=1
namespace	frei [namespace] ||| [namespace]	count=1
arg_pair	domain ||| string $codeset	count=1
function_name	msql ergebnismenge ||| msql result	count=1
arg_pair	datei zum ||| string $filename string $mode	count=1
namespace	werten der arrayelemente identisch ||| function	count=1
function_name	tage in ||| cal days in month	count=1
namespace	verwendet wobei xx der ||| function	count=1
function_name	jeweils teil von string ||| explode	count=1
function_name	attribut wenn ||| to next attribute	count=1
function_name	leerraum ||| ltrim	count=1
function_name	einen gemeinsamen ||| shmop close	count=1
namespace	erste ||| xmlreader	count=1
function_name	liefert ein array ||| oci fetch array	count=1
arg_pair	data unter verwendung ||| string $data string $sealed_data	count=1
arg_pair	ähnelt der ||| int $return_var	count=1
arg_pair	einer variable als funktion ||| mixed $var	count=1
arg_pair	offset über bis ||| int $offset	count=1
function	[function_name_1] übergebene zeichenkette ||| [arg_pair_2] [function_name_1]	count=1
function_name	__autoload() ||| spl autoload	count=1
function_name	von tabellennamen von ||| list tables	count=1
function_name	übergebene zertifikat ||| openssl x509 read	count=1
namespace	konversion von zeichensätzen zwischen ||| function	count=1
arg_pair	mit den http header-informationen ||| string $domain bool $secure	count=1
arg_pair	in replacement angegebenen zeichenkette ||| mixed $replacement	count=1
arg_pair	datei ||| int $mode	count=1
function_name	[function_name_1] ist ||| [function_name_2] [function_name_1]	count=12
arg_pair	des ||| resource $fdf_document	count=1
function_name	virtuelles pdf dokument ||| pdf	count=1
arg_pair	dn ||| array $dn resource $privkey	count=1
function	[function_name_1] und ||| [function_name_1] [arg_pair_2]	count=1
namespace	die gleichen ||| function	count=1
function_name	den ||| error verbosity	count=1
namespace	über zu ||| function	count=1
arg_pair	postfachs mailbox beenden ||| string $mailbox	count=1
function_name	gegebenen extension [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	eine binäre guid ||| guid string	count=1
arg_pair	zu bieten ||| bool $clear_realpath_cache string $filename	count=1
function_name	handle von ||| handle	count=1
arg_pair	alpha ||| float $alpha	count=1
arg_pair	offset über ||| resource $context int $offset	count=1
arg_pair	verwendung eines font ||| int $font	count=1
function_name	textflussobjekt ||| textflow	count=1
arg_pair	benutzerdefinierte funktion ||| string $name	count=1
namespace	nachrichten wird zur löschung ||| function	count=1
arg_pair	funktion ist ||| string $string int $flags	count=1
function_name	die ||| load extension	count=2
namespace	ausgeführt werden ||| function	count=1
arg_pair	seite ||| int $table	count=1
function_name	listet alle ||| msql list	count=2
function_name	auf ein attribut verweist ||| to next	count=1
arg_pair	[arg_pair_1] zu übertragendes ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] insert [function_name_1]	count=6
function_name	in klein- oder großbuchstaben ||| change key case	count=1
arg_pair	angegebenen verbindungskennung link_identifier gehört ||| resource $link_identifier	count=1
arg_pair	mode ||| int $mode	count=1
namespace	einem farbverlauf [namespace] auf einem ||| [namespace]	count=1
function_name	wert erhalten bleiben ||| ksort	count=1
arg_pair	vom anfang eines strings ||| string $str string $character_mask	count=1
namespace	wenn er auf ||| xmlreader	count=1
arg_pair	fügt text und ||| string $text	count=1
function	exec-kommando [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	erste ||| to	count=1
arg_pair	str und gibt ||| string $str	count=1
namespace	die dazu benutzt werden ||| function	count=1
arg_pair	schlüssel aus array ||| array $array int $case	count=1
arg_pair	system() [arg_pair] ||| [arg_pair]	count=3
arg_pair	[arg_pair_1] ein ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	wie array() ist auch ||| list	count=1
function_name	ein physisches [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	eines dom [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	formulardaten ||| fdf open	count=2
return	er auf ||| bool	count=2
arg_pair	behandlung von cc ||| string $cc	count=1
return	zurück [return] der ||| [return]	count=1
arg_pair	database ||| string $database	count=1
function_name	entfernt ||| remove	count=3
return	übergebenen argumente als array ||| array	count=1
function_name	reale numerische gruppen-id des ||| getgid	count=1
namespace	wird eine ||| function	count=1
return	aktiviert ||| bool	count=1
function_name	vom typ string ist ||| is	count=1
function_name	abonnement ||| imap unsubscribe	count=2
function_name	attribut wenn er auf ||| move to next	count=1
arg_pair	mit 16 bytes ||| bool $short_format	count=1
namespace	setzt [namespace] ||| [namespace]	count=1
namespace	setzt den zeiger ||| xmlreader	count=1
function_name	separate parameter zum ||| query params	count=1
function_name	[function_name_1] das ||| [function_name_2] [function_name_1]	count=1
arg_pair	erzeugt eine ||| int $mode	count=1
function_name	[function_name_1] template ||| [function_name_2] [function_name_1]	count=1
return	write-timer zurück ||| bool	count=1
arg_pair	basierend auf den informationen ||| array $configargs array $extraattribs	count=1
namespace	in deren inhalt der ||| function	count=1
arg_pair	und bcc kopffeldern ||| string $bcc string $rpath	count=1
function_name	einen archiveintrag unter verwendung ||| index	count=1
namespace	bis zu der ||| function	count=1
function	dbx_query() [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	und übernimmt die aktuellen ||| function	count=1
return	wie array() ist ||| array	count=1
function_name	option ||| set option	count=1
function_name	eines zeichens aus char_list ||| strpbrk	count=1
function_name	ruft informationen oder ||| multi info	count=1
namespace	prüft dass die ||| function	count=1
return	ist auch dies keine ||| array	count=1
arg_pair	zeichenkodierung hinzu ||| resource $pdfdoc string $encoding	count=1
function	abonnement [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	zurück der innerhalb ||| function	count=1
function_name	funktion entfernt whitespaces am ||| trim	count=1
function_name	attribut verweist ||| move	count=1
function_name	attribut verweist oder aufs ||| next	count=1
function_name	[function_name_1] angeforderten ||| [function_name_1] [function_name_2]	count=1
arg_pair	socket_create() ||| int $length	count=1
function_name	logischen hebräischen ||| hebrev	count=1
function_name	[function_name_1] abfrageergebnis gehört ||| [function_name_1] field [function_name_2]	count=2
function_name	letzte notice-meldung des ||| last notice	count=1
return	und ||| boolean	count=1
arg_pair	cc [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=4
namespace	der cursor in eine ||| function	count=1
function_name	wenn er auf ||| next	count=1
arg_pair	die datei in ||| string $filename	count=1
namespace	prozess der ||| function	count=1
arg_pair	content vorkommt ||| string $pattern string $content	count=1
namespace	ein element verweist ||| xmlreader	count=1
function_name	übergebene interface [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	gemäß den angegebenen ||| resource $imap_stream int $criteria	count=1
arg_pair	prüft und ||| resource $connection string $table_name	count=1
arg_pair	diese ihren status ändern ||| int $tv_sec	count=1
return	status ||| int	count=1
namespace	oder aufs ||| xmlreader	count=1
return	zurück ||| int	count=2
function_name	kopfdaten der nachricht ||| imap headerinfo	count=1
function_name	flags für die mit ||| clearflag full	count=1
arg_pair	datumsformate dezimaltrennzeichen [arg_pair] ||| [arg_pair]	count=3
namespace	zeiger von array auf ||| function	count=1
function_name	datensatz ||| dbase get record	count=1
arg_pair	unterschied zwischen [arg_pair] zusätzlicher ||| [arg_pair]	count=1
arg_pair	und ||| string $str2	count=1
arg_pair	oder benutzerdefinierte funktion ||| string $name	count=1
return	datei ||| bool	count=1
function_name	ftp-verbindung ||| ftp	count=1
function_name	utf-32 ||| utf32	count=1
namespace	der mit der ||| function	count=7
function_name	fdf dokuments ||| fdf	count=1
arg_pair	assoc_array entsprechen und deren ||| array $assoc_array	count=1
function_name	rechteckige anmerkung ||| annotation	count=1
function_name	letzte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	callbackfunktion callback ||| callable $callback	count=1
arg_pair	schlüssels key ||| mixed $key	count=1
arg_pair	eines font ||| int $font	count=1
namespace	die zahl ||| function	count=2
arg_pair	gegebenen key benutzt ||| int $key	count=1
namespace	der letzten ||| function	count=2
arg_pair	eine lokale ||| int $mode	count=1
function_name	neue ebenendefinition ||| pdf define layer	count=1
arg_pair	unescaped_string ||| string $unescaped_string resource $link_identifier	count=1
arg_pair	übereinstimmungen mit dem ||| array $matches	count=1
namespace	der verbindung verwendet wird ||| function	count=1
namespace	welches mit der ||| function	count=1
function_name	client ||| pg client encoding	count=2
arg_pair	bestimmte elemente eines ||| resource $pdfdoc	count=1
function_name	zur nutzung durch ||| openssl pkey get private	count=1
arg_pair	und gibt ||| resource $connection string $encoding	count=1
namespace	der betroffenen funktionen ||| function	count=1
function_name	eine spezielle ||| posix mknod	count=1
return	und speichert die ||| bool	count=1
namespace	pfad mit [namespace] ||| [namespace]	count=1
arg_pair	schnittmenge von ||| array $array2	count=1
function_name	mime-codierte headerzeilen ||| imap mime header	count=1
arg_pair	den angegebenen eintrag aus ||| string $key resource $handle	count=1
function	kopiert [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	spezielle ||| string $pathname int $mode	count=1
arg_pair	datei zum lesen oder ||| string $filename	count=1
namespace	unter ||| ziparchive	count=1
arg_pair	key und bereitet ihn ||| mixed $key	count=1
namespace	[namespace] standardausgabe aus ||| [namespace]	count=3
arg_pair	den namen der ||| resource $imap_stream	count=1
function_name	eine ressource ||| resource	count=1
arg_pair	ob diese ihren ||| int $tv_sec	count=1
namespace	die ||| function	count=185
arg_pair	die funktion [arg_pair_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=3
function_name	pem-kodiert versehene repräsentation des ||| openssl pkey export to file	count=1
return	einem array ||| array	count=2
arg_pair	zur angegebenen ||| string $query	count=1
function_name	ldap verzeichnis ||| ldap	count=1
arg_pair	alpha bzw ||| resource $p float $alpha	count=1
function_name	eine binäre guid ||| mssql guid	count=1
namespace	pfad mit [namespace] linienfarbe und ||| [namespace]	count=1
arg_pair	hängt die angegebenen ||| array $record	count=1
function_name	effektive numerische gruppen-id des ||| getegid	count=1
function_name	tage in einem ||| days in month	count=1
function_name	zusammenhang zwischen den indizes ||| asort	count=1
function_name	schreibt aus ||| socket write	count=1
function	zertifikat [arg_pair_2] ||| [function_name_1] check private key [arg_pair_2]	count=1
arg_pair	seines index ||| int $index int $length	count=1
namespace	wenn die ||| function	count=1
function_name	das entsprechnde datum im ||| jdtojulian	count=1
function_name	letzte ||| last	count=1
function_name	das die entsprechende ||| row	count=1
function_name	ein element ||| next	count=1
namespace	die nicht ||| function	count=1
function_name	legt ||| pdf	count=1
function_name	benutzerin ||| getlogin	count=1
function_name	letzte fehlermeldung ||| last error	count=1
function_name	des attributes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ist ähnlich strcmp() ||| strncmp	count=1
return	nur aufrufen wenn ||| bool	count=1
arg_pair	den ||| string $enclosure	count=1
function_name	schlüssel zum ||| check private key	count=1
arg_pair	ein ||| string $type_name string $type_namespace	count=1
return	ein attribut ||| bool	count=1
arg_pair	in replacement angegebenen ||| mixed $string mixed $replacement	count=1
arg_pair	baut eine verbindung ||| string $servername	count=1
arg_pair	mit den ||| resource $connection	count=1
function_name	der aufruf dieser ||| call	count=1
function_name	repräsentation ||| to	count=1
function_name	die angegebene eigenschaft gesetzt ||| get parser property	count=1
function_name	die datensatz-id [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	typ string ist ||| is	count=1
function_name	mit ||| fill	count=2
arg_pair	spezielle ||| int $major	count=1
return	in die datenbank ||| int	count=1
arg_pair	png ||| int $quality int $filters	count=1
arg_pair	erzeugt eine spezielle ||| string $pathname int $mode	count=1
function_name	signatur ||| gnupg verify	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] last [function_name_2]	count=8
function_name	oid [function_name] eingefügten datensatzes ||| pg [function_name]	count=1
arg_pair	parameter val auf die ||| float $val	count=1
arg_pair	seines index zurück ||| int $length	count=1
function_name	oid [function_name] eingefügten ||| pg [function_name]	count=1
function_name	er auf ||| to next	count=2
arg_pair	unescaped_string unter ||| string $unescaped_string	count=1
function_name	schreibt aus dem puffer ||| write	count=1
function_name	momentanen status ||| fbsql db status	count=2
arg_pair	den text zur ||| resource $pdfdoc string $text	count=1
function_name	für ||| openssl pkey get	count=1
namespace	arbeiten kann wird eine ||| function	count=1
function_name	übergebene zertifikat zurück wie ||| openssl x509 parse	count=1
arg_pair	dieser [arg_pair] kann ||| [arg_pair]	count=1
arg_pair	den ||| resource $identifier	count=2
arg_pair	elemente eines ||| resource $pdfdoc	count=1
function_name	öffnet [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	benutzten verbindung für die ||| host info	count=1
function_name	tage in einem ||| cal days in month	count=1
function	php-variable [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	des feldes [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	liefert den ||| resource $result int $row	count=1
function_name	er auf ein attribut ||| to	count=1
function_name	neues v8js -objekt ||| construct	count=1
function_name	typ des feldes ||| field type	count=2
arg_pair	übergebene hash den gleichen ||| string $hash	count=1
arg_pair	eine ||| resource $pdfdoc string $name	count=1
arg_pair	oder einen ||| int $id	count=1
namespace	liefert eine ergebnis-kennung die ||| function	count=1
arg_pair	ob ||| array $read	count=1
function_name	des zufälligen ||| rand	count=1
arg_pair	speichert eine lokale ||| int $mode	count=1
function_name	bytea ||| bytea	count=1
arg_pair	und length spezifizierte ||| bool $preserve_keys	count=1
namespace	[namespace] sich ||| [namespace]	count=3
function_name	das je [function_name] ||| [function_name]	count=3
function_name	ihre beendigung [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	betroffenen zeilen ||| mysqli affected rows	count=1
namespace	die schlüssel ||| function	count=1
function_name	überprüft die syntax lint ||| php check syntax	count=1
namespace	[namespace] socket_send() ||| [namespace]	count=1
arg_pair	namen zu erstellen ||| bool $recursive	count=1
arg_pair	methode ist missbilligt ||| string $arguments	count=1
namespace	durch die funktionen imap_delete() ||| function	count=1
function_name	attribut wenn er ||| attribute	count=1
function_name	und wartet ||| select	count=1
namespace	einem farbverlauf [namespace] auf ||| [namespace]	count=1
function_name	die sicherheitseinstellungen ||| get security prefs	count=1
namespace	der abbruch ||| function	count=1
return	zurück ||| bool	count=7
arg_pair	in julianday übergebenen ||| int $julianday	count=1
function_name	postgresql abfrageergebnis ||| pg field num	count=1
function_name	kind anhielt ||| pcntl wstopsig	count=2
function_name	den [function_name] aus ||| [function_name]	count=1
namespace	funktionen der ||| function	count=1
namespace	xx der installationscode ist ||| function	count=1
namespace	werden um ||| function	count=1
namespace	ein element ||| xmlreader	count=1
arg_pair	dieser methode ist ||| string $function_name	count=1
return	alle ||| array	count=2
function_name	speicher frei ||| free result	count=1
function_name	versehene repräsentation ||| to file	count=1
namespace	aufrufen von ||| function	count=1
function_name	des voherigen angehängt werden ||| merge recursive	count=1
function_name	das ||| pdi	count=1
arg_pair	uid ||| resource $imap_stream int $uid	count=1
function_name	handle ||| handle	count=1
arg_pair	array input und ||| array $input	count=1
arg_pair	und wartet ||| array $except	count=1
function_name	position für die textausgabe ||| set text pos	count=1
function_name	parameter ||| openssl	count=3
function_name	ihn zur nutzung durch ||| pkey get private	count=1
function_name	datenbank zurück ||| dbase	count=1
arg_pair	gegebenen gz-datei resource ||| resource $zp	count=1
return	ob diese ihren ||| int	count=1
arg_pair	baut eine verbindung zu ||| string $username	count=1
namespace	der mit der angegebenen ||| function	count=1
namespace	verwendung von ||| function	count=1
function_name	diese funktion [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	keine wirkliche ||| function	count=1
function_name	sqlite-bibliothek ||| sqlite	count=1
function_name	oder template unter ||| image	count=1
arg_pair	postfach mailbox ||| string $mailbox	count=1
arg_pair	replacement ||| mixed $string mixed $replacement	count=1
function_name	schließt [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	anfang ||| string $str string $character_mask	count=1
namespace	die darin ||| function	count=1
namespace	von rc4 mit einem ||| function	count=1
arg_pair	in ||| int $sort_flags	count=1
namespace	übergebenen string in das ||| function	count=1
arg_pair	diese funktion ist das ||| string $string	count=1
namespace	in die ||| function	count=2
function_name	veränderten datensätze in ||| rows	count=1
function_name	sortierkriterien ||| sort	count=1
return	[return] länge ||| [return]	count=1
function_name	ein array welches ||| oci fetch array	count=1
arg_pair	prüft und konvertiert ||| string $table_name	count=1
function_name	gibt den speicher frei ||| mysql free	count=1
function_name	liefert schema namen vom ||| mysql db name	count=1
function_name	auf ||| next	count=3
function_name	[function_name] zeile ||| ingres fetch [function_name]	count=3
arg_pair	variable ||| mixed $var	count=1
return	dieser ||| mixed	count=1
arg_pair	key ein ||| string $key	count=1
return	ermittelt den ||| string	count=1
function_name	private [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	eines postgresql abfrageergebnisses ||| pg	count=1
arg_pair	informationen zu den ||| resource $imap_stream string $ref	count=1
function_name	eines feldes ||| field	count=1
namespace	die gleichen optionen nutzt ||| function	count=1
namespace	aktuelle schrift in der ||| function	count=1
function	[function_name_1] an den ||| [arg_pair_2] [function_name_1]	count=1
namespace	im archiv ||| ziparchive	count=2
namespace	[namespace] aktuelle zeichenfarbe ||| [namespace]	count=1
function_name	größe ||| size	count=1
function_name	ersetzt in der ||| replace	count=1
namespace	die aktuelle position ||| function	count=1
function_name	alle ||| pdf	count=1
arg_pair	eine gemäß den angegebenen ||| resource $imap_stream int $criteria	count=1
return	ein attribut verweist ||| bool	count=1
arg_pair	tabelle table_name ||| string $table_name	count=1
arg_pair	port port ||| int $port	count=1
arg_pair	datenbank ||| string $database resource $link_identifier	count=1
function_name	skalar ||| scalar	count=1
return	und wartet ob ||| int	count=1
function_name	setzt den zeiger auf ||| to next	count=1
function_name	das nächste attribut ||| to next	count=1
namespace	ein attribut verweist ||| xmlreader	count=1
function_name	reconstructed image ||| image	count=1
function_name	[function_name_1] fehlermeldung die ||| [function_name_2] [function_name_1]	count=2
function_name	der das entsprechnde datum ||| jdtojulian	count=1
function_name	der definierten funktionen enthält ||| function	count=1
namespace	dies keine ||| function	count=1
function_name	neues v8js ||| construct	count=1
function_name	öffnet eine dbase-datenbank im ||| dbase	count=1
arg_pair	und als bidirektionaler kommunikationsendpunkt ||| string $pathname	count=1
function_name	iso-8859-1 -kodierung oder ||| libencoding	count=1
arg_pair	übergebenen image oder ||| resource $image string $filename	count=1
arg_pair	connection_string bezeichnet ||| int $connect_type	count=1
arg_pair	[arg_pair] so ||| [arg_pair]	count=1
arg_pair	table_name deren ||| string $table_name	count=1
arg_pair	erzeugt ||| string $pathname	count=1
namespace	zu setzen oder ||| function	count=1
namespace	zurück der der ||| function	count=1
function_name	large object ||| pg lo	count=4
function_name	verbindungsoptionen ||| options	count=1
function_name	mysql [function_name] ||| mysql [function_name]	count=1
function_name	die aktuelle symboltabelle ||| extract	count=1
namespace	die namen aller in ||| function	count=1
arg_pair	für den in ||| mixed $x509cert	count=1
function_name	php-tags reduzierte version von ||| strip tags	count=1
function	[function_name_1] verschiedener optionen ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	das objekt objekt ||| mixed $object	count=1
namespace	er ||| xmlreader	count=2
return	die [return] socket_read() ||| [return]	count=1
function_name	ausführliche informationen ||| mysql info	count=1
function_name	dem ergebnis verknüpfte postgresql ||| pg result	count=1
arg_pair	val auf die mit ||| float $val	count=1
namespace	beendet die ||| function	count=1
arg_pair	sortierte liste ||| string $search_criteria string $charset	count=1
function_name	attribut verweist oder ||| to	count=1
arg_pair	format ||| mixed $args	count=1
function_name	repräsentation ||| pkey export to file	count=2
function_name	ein curl-handle ||| curl	count=1
namespace	von array und ||| function	count=1
namespace	setzt die umask von ||| function	count=1
arg_pair	wartet ob diese ||| array $except	count=1
namespace	der durch die ||| function	count=1
namespace	funktion wird verwendet ||| function	count=1
arg_pair	server ohne auf die ||| resource $connection	count=1
namespace	ausgeführt werden kann ||| function	count=1
function_name	aktuelle symboltabelle zu ||| extract	count=1
return	auch dies ||| array	count=1
function_name	gesamte ||| clear	count=1
function_name	query an den ||| unbuffered query	count=1
arg_pair	den wert ||| resource $p	count=1
function	einer mysql [arg_pair_2] ||| [function_name_1] list tables [arg_pair_2]	count=1
namespace	ob der abbruch ||| function	count=1
arg_pair	auf dem ftp-server ||| resource $ftp_stream	count=1
function_name	das feld ||| field	count=3
namespace	innerhalb der ||| function	count=1
function_name	feldtyp stattdessen [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	gid des aktuellen prozesses ||| posix setgid	count=1
namespace	die funktion prüft ob ||| function	count=1
return	angegebene ||| bool	count=1
function_name	dem ergebnis verknüpfte ||| result	count=1
function_name	[function_name_1] nach utf-16 ||| [function_name_2] [function_name_1]	count=4
function_name	assoziiert ||| mysql select	count=1
arg_pair	spezielle oder eine gewöhnliche ||| int $major int $minor	count=1
function_name	zeiger auf das ||| move	count=1
function_name	er ||| to next	count=2
function_name	ein element verweist ||| move to	count=1
function_name	datei ||| openssl x509 export to file	count=1
function_name	das produkt von werten ||| array product	count=1
namespace	und ||| function	count=2
function_name	ein array ||| array	count=2
function_name	informationen oder ||| curl multi info	count=1
return	die [return] socket_read() liest ||| [return]	count=1
namespace	die den pfad zu ||| function	count=1
function_name	pem-kodiert versehene repräsentation ||| pkey export to	count=1
function_name	gemeinsamen ||| shmop	count=2
arg_pair	flag [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	die letzte fehlermeldung ||| pg last error	count=2
function_name	oid des datentyps für ||| oid	count=1
return	verwendung ||| bool	count=1
namespace	der das ||| function	count=1
namespace	verbindung mit der standardmässigen ||| function	count=1
function_name	nächste ||| move to	count=1
namespace	so dass [namespace] ||| [namespace]	count=2
arg_pair	von domain von gettext() ||| string $domain	count=1
function_name	diese ihren ||| socket select	count=1
function_name	der nachricht ||| imap headerinfo	count=1
return	einen string ||| string	count=2
function	large object [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	[arg_pair_1] content vorkommt ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	oder eine gewöhnliche ||| int $major int $minor	count=1
arg_pair	mit dem [arg_pair] system v ||| [arg_pair]	count=1
function_name	versehene repräsentation des schlüssels ||| export to file	count=1
function_name	vom typ integer ist ||| is int	count=1
function_name	den kommentar zu einem ||| get comment name	count=1
namespace	der die aktuelle php-anfrage ||| function	count=1
arg_pair	parameter dn angegeben ||| array $dn resource $privkey	count=1
function_name	utf-8 zu ||| utf8	count=1
arg_pair	parameter certs ||| mixed $pkcs12 array $certs	count=1
function_name	postgresql servers ||| pg	count=1
arg_pair	eines font -handle ||| int $font	count=1
namespace	konversion von ||| function	count=1
function_name	dieser ||| call	count=1
function_name	die letzte ||| pg last	count=1
function_name	erzeugt ||| mknod	count=1
arg_pair	wert ||| mixed $offset mixed $value	count=1
function_name	die vorhergehende ||| get previous	count=1
arg_pair	funktion callback iterativ ||| array $array callable $callback	count=1
return	server und ||| string	count=1
function_name	wenn er auf ein ||| move to next	count=1
function_name	neuen csr zertifikatssignierungsanfrage ||| openssl csr new	count=2
arg_pair	socket len bytes von ||| int $len int $flags	count=1
function_name	repräsentation des ||| to file	count=1
function_name	datei ||| posix	count=1
function_name	welchem encoding die texte ||| bind textdomain codeset	count=1
arg_pair	um alpha bzw ||| float $alpha	count=1
function_name	browser ||| browser	count=1
function_name	ein objekt ist ||| is object	count=2
function_name	gibt die unterschiede zurück ||| array diff	count=2
arg_pair	strukturelement oder einen ||| resource $pdfdoc int $id	count=1
function_name	format utf-32 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	das nächste attribut wenn ||| next	count=1
function_name	großen unterschieden ||| msql pconnect	count=1
function_name	ein [function_name_2] ||| [function_name_2] [function_name_1]	count=10
return	eine verbindung zu ||| resource	count=1
function_name	anfang des [function_name] objects aus ||| [function_name]	count=1
function_name	gibt den speicher frei ||| free result	count=1
namespace	die gelesenen daten ||| function	count=1
function_name	[function_name] zeile der ||| ingres fetch [function_name]	count=3
function_name	zeile und [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	ersetzt in ||| dba replace	count=1
arg_pair	hängt die angegebenen daten ||| int $dbase_identifier array $record	count=1
namespace	auf [namespace] ||| [namespace]	count=2
arg_pair	zu einem ||| resource $pdfdoc	count=1
function_name	wert eines pcos-pfades vom ||| pdf pcos get number	count=1
function_name	dateipfad ||| pathinfo	count=1
arg_pair	mit ||| int $dbase_identifier	count=1
arg_pair	datei ||| string $mode	count=1
arg_pair	eines ||| resource $pdfdoc int $doc	count=1
function	[function_name_1] -aufrufs mit ||| [arg_pair_2] [function_name_1]	count=4
function_name	des [function_name] objects aus ||| [function_name]	count=1
function_name	client für bestimmte ||| client encoding	count=1
return	löschen ||| bool	count=1
function_name	er auf ein ||| to next	count=2
return	erzeugt eine spezielle ||| bool	count=1
function_name	session und füllt die ||| session	count=1
function_name	anzahl der [function_name] ||| pg num [function_name]	count=3
namespace	die funktion wandelt ||| function	count=1
arg_pair	image oder gibt diese ||| string $filename	count=1
namespace	her identisch mit der ||| function	count=1
namespace	der alle ||| function	count=1
function_name	dbx_query() ||| dbx sort	count=2
namespace	der durch einen ||| function	count=1
namespace	die daten aus einem ||| function	count=1
arg_pair	[arg_pair] ab ||| [arg_pair]	count=1
return	anzahl der prozesse in ||| array	count=1
return	einen string der ||| string	count=1
namespace	diese funktion ist ||| function	count=1
function_name	er auf ein attribut ||| to next	count=1
function_name	verkürzt ||| ftruncate	count=1
namespace	element ||| xmlreader	count=1
function_name	utf-32 nach utf-16 ||| pdf utf32 to utf16	count=1
function	die eigenschaft [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=1
arg_pair	eine gemäß den angegebenen ||| resource $imap_stream	count=1
namespace	der tabelle zurück ||| function	count=1
return	ein datum des ||| array	count=1
function_name	queue ||| queue	count=3
function_name	dbase-datenbank ||| dbase	count=1
function_name	[function_name_1] nach ||| [function_name_2] [function_name_1]	count=4
arg_pair	input ||| string $input	count=1
arg_pair	datei filename als ||| string $filename	count=1
return	ein array aus dateien ||| array	count=1
function_name	datenbank als gelöscht ||| dbase delete	count=3
function	[function_name_1] cert ist ||| [function_name_1] [arg_pair_2]	count=2
return	ein assoziatives array mit ||| array	count=1
arg_pair	für uid ||| resource $imap_stream int $uid	count=1
arg_pair	domain von gettext() oder ||| string $domain	count=1
function_name	das nächste attribut ||| to	count=1
arg_pair	size ||| int $size	count=1
arg_pair	text in sichtbaren text ||| int $max_chars_per_line	count=1
arg_pair	ist) und ||| string $name	count=1
arg_pair	findet das letzte vorkommen ||| string $needle	count=1
arg_pair	eine ||| int $major	count=1
function_name	übergebene zertifikat ||| openssl x509 parse	count=1
function_name	ein attribut verweist ||| next	count=1
function_name	ein neues large object ||| pg lo import	count=1
function_name	verweist oder aufs erste ||| to	count=1
namespace	verwendung von rc4 mit ||| function	count=1
function_name	verursachte dass das kind ||| pcntl	count=1
function_name	führt eine soap-anfrage über ||| do request	count=1
namespace	informationen über die ||| function	count=1
namespace	liefert alle ||| function	count=1
function_name	boolean ist ||| is	count=1
namespace	eine datenbankverbindung ||| sqlite3	count=1
namespace	die mit queue ||| function	count=1
arg_pair	datei und ||| string $filename	count=1
namespace	v8js::registerextension() registrierten javascript-erweiterungen ||| v8js	count=1
namespace	diese ihren status ||| function	count=1
namespace	die effektive ||| function	count=1
arg_pair	in julianday ||| int $mode	count=1
arg_pair	in charlist ||| string $str string $charlist	count=1
arg_pair	ausnahme dass die ||| int $minute	count=1
function_name	die aktuelle symboltabelle zu ||| extract	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=1
arg_pair	unescaped_string unter berücksichtigung des ||| string $unescaped_string resource $link_identifier	count=1
function_name	nimmt als ||| socket select	count=1
namespace	der indexe ||| function	count=1
arg_pair	bson ||| string $bson	count=1
arg_pair	eine low-level-api-funktion um ||| array $options mixed $input_headers	count=1
arg_pair	angegebenen namen zu erstellen ||| bool $recursive	count=1
arg_pair	wendet die funktion ||| array $array	count=1
function_name	datensatz-id [function_name_2] ||| [function_name_2] insert [function_name_1]	count=2
function_name	klein- oder großbuchstaben umgewandelt ||| change key case	count=1
arg_pair	in eine [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	status ||| array $except	count=1
function_name	namen [function_name_2] ||| string [function_name_2] [function_name_1] resource	count=2
namespace	anhand der ||| function	count=1
function_name	fdf ||| fdf	count=2
arg_pair	in einem bestimmten abfrageergebnis ||| resource $result	count=1
function_name	nachricht einen string mit ||| imap	count=1
function_name	der wert des attributes ||| attribute ns	count=1
arg_pair	anwendung verschiedener optionen ||| string $optlist	count=2
arg_pair	erstellt ein ||| string $type_name	count=1
namespace	die datenbank ||| function	count=1
function_name	angegebenen [function_name] frei ||| [function_name]	count=1
arg_pair	bewegt ||| int $row_number	count=2
arg_pair	wartet ob diese ihren ||| array $read array $write	count=1
function_name	gruppenbeziehungen zwischen ||| dependency	count=1
function_name	gegenstück zu [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	konfiguration zum öffnen eines ||| int	count=1
function_name	methode ist ||| call	count=1
function_name	auszuführen ||| execute	count=2
function_name	von ein oder ||| add function	count=1
function_name	http-header des aktuellen requests ||| getallheaders	count=1
function_name	datensatz-id [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	angegebenen [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	skalar ist ||| is scalar	count=2
function_name	verweist oder ||| move to next	count=1
arg_pair	und ||| resource $connection string $encoding	count=1
rest	ein [function_2] ||| [return_1] [function_2]	count=1
function_name	[function_name_1] mysql ||| [function_name_2] [function_name_1]	count=6
function_name	ein site exec-kommando ||| ftp exec	count=1
namespace	der übergebenen verbindung ||| function	count=1
arg_pair	für den in purpose ||| int $purpose	count=1
function_name	wartet ||| select	count=1
namespace	das entsprechende ||| function	count=1
function_name	ein neues large object ||| pg lo	count=1
arg_pair	seite fest ||| float $x	count=1
arg_pair	erzeugt eine spezielle oder ||| string $pathname int $mode	count=1
namespace	erzeugt aus der ||| function	count=1
function_name	aufrufende funktion übergeben wurden ||| args	count=1
namespace	änderungen zurück [namespace] ||| [namespace]	count=1
arg_pair	platziert ||| int $page	count=1
arg_pair	in eine ||| resource $handle	count=1
namespace	attribut wenn er auf ||| xmlreader	count=1
function_name	vom typ af_unix ||| recvfrom	count=1
namespace	der datei ||| function	count=4
function_name	tabellennamen von ||| list tables	count=1
function_name	msql-servers zurück ||| msql	count=1
function_name	e-mail ||| mail	count=1
arg_pair	über das per x509cert ||| mixed $x509cert	count=1
arg_pair	wert zu ||| mixed $value	count=1
function_name	php-variable variable an ||| oci bind	count=1
namespace	entsprechung der binären ||| function	count=1
function_name	auf das nächste ||| move to	count=1
function_name	flags für die mit ||| full	count=1
function_name	elternelement ||| move to element	count=1
function_name	array() ||| list	count=1
function_name	der tabelle [function_name_2] ||| [function_name_2] field [function_name_1]	count=1
arg_pair	ermittelt den wert eines ||| resource $p string $key	count=1
namespace	zurück zu denen der ||| function	count=1
function_name	ein element ||| to next	count=1
return	verweist ||| bool	count=2
arg_pair	bessere performance zu bieten ||| bool $clear_realpath_cache	count=1
return	bbcode_create() [return] wurde ||| [return]	count=1
function_name	letzte notice-meldung des postgresql ||| pg last notice	count=1
function_name	nächste attribut ||| move to	count=1
function_name	erstellt ein ||| soap	count=1
function_name	exportiert ||| gnupg export	count=1
arg_pair	und ||| string $pathname int $mode	count=1
namespace	der linken ||| function	count=1
function_name	gibt die vorhergehende ||| previous	count=1
function	unter anwendung [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] postgresql abfrageergebnisses ||| [function_name_2] fetch [function_name_1]	count=2
namespace	ist identisch mit der ||| function	count=1
arg_pair	dezimaltrennzeichen [arg_pair] ||| [arg_pair]	count=3
function_name	include include_once require oder ||| get	count=1
namespace	inclusive der richtigen behandlung ||| function	count=1
arg_pair	host her ||| string $host int $port	count=1
function_name	den zeiger auf das ||| move to next	count=1
function_name	durch ||| fetch row	count=1
namespace	[namespace] geholten ||| [namespace]	count=1
namespace	die nächste reihe ||| function	count=1
return	einer entfernten ||| int	count=1
arg_pair	image ||| resource $image	count=1
return	letzten ||| int	count=4
function_name	queue genutzt ||| queue	count=1
arg_pair	ob ||| array $read array $write	count=1
function_name	benutzten verbindung für die ||| mysql get host info	count=1
function_name	status ändern ||| select	count=1
function_name	funktion socket_set_nonblock() [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	aktuellen seite ||| float $llx	count=1
return	übergebenen ||| int	count=1
arg_pair	in month day und ||| int $month int $day	count=1
function_name	oid des ||| type oid	count=1
namespace	die automatische konversion von ||| function	count=1
namespace	der alle vorkommen ||| function	count=1
namespace	die daraus resultierenden ||| function	count=1
function_name	beliebiges kommando ||| raw	count=1
return	untere ||| void	count=1
function_name	oder ||| to	count=1
function_name	[function_name] der ||| get [function_name]	count=1
arg_pair	seite ||| string $boxname	count=1
arg_pair	zweite in ||| string $data	count=1
function_name	apacheprozess ||| child terminate	count=1
namespace	dateisystem oder der ||| function	count=1
function_name	repräsentation des schlüssels ||| to file	count=1
function_name	feldes [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	beendet ||| bool	count=1
arg_pair	assoc_array entsprechen ||| array $assoc_array int $options	count=1
return	eine spezielle oder ||| bool	count=1
namespace	dafür ob der ||| function	count=1
arg_pair	den text ||| resource $pdfdoc string $text	count=1
arg_pair	einem bestimmten abfrageergebnis zu ||| resource $result	count=1
function_name	attribut wenn er auf ||| move to next attribute	count=1
function_name	[function_name_1] fehlermeldung ||| [function_name_1] last [function_name_2]	count=2
function_name	diese ihren ||| socket	count=1
arg_pair	ihren status ||| array $read	count=1
arg_pair	den in ||| mixed $x509cert	count=1
arg_pair	die schnittmenge ||| array $array1 array $array2	count=1
function_name	des aktuellen requests ||| getallheaders	count=1
function_name	ersetzt in ||| replace record	count=1
function_name	allen lokalen schnittstellen ||| socket create listen	count=1
arg_pair	übergebenen parametern ||| string $stmtname	count=2
arg_pair	schlüssel aus array ||| array $array	count=1
arg_pair	[arg_pair] fließkommazahlen ||| [arg_pair]	count=1
arg_pair	schlüsseln in ||| array $array int $sort_flags	count=1
arg_pair	section angebenen ||| string $section int $options	count=1
namespace	dies keine wirkliche ||| function	count=1
function_name	auf ein attribut ||| to next	count=1
arg_pair	den unix-timestamp entsprechend ||| int $hour int $minute	count=1
function_name	[function_name_1] funktionen ||| [function_name_2] [function_name_1]	count=2
function_name	erzeugt [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	zwischen [arg_pair] zusätzlicher ||| [arg_pair]	count=1
function_name	insert ||| insert	count=1
function_name	maskiert die übergebene ||| escape	count=1
function_name	das elternelement ||| move to element	count=1
arg_pair	datum in calendar ||| int $month	count=1
return	attribut wenn er ||| bool	count=1
function_name	wirkliche ||| list	count=1
arg_pair	funktion callback iterativ ||| callable $callback	count=1
namespace	löscht ||| ziparchive	count=1
arg_pair	den ||| resource $connection	count=3
function_name	zeiger auf das ||| move to next	count=1
arg_pair	datei im dateisystem ||| resource $connection string $pathname	count=1
arg_pair	oder teilweise auf ||| float $ury	count=1
arg_pair	wenn [arg_pair] gegen die ||| [arg_pair]	count=1
function_name	verweist oder aufs erste ||| move	count=1
arg_pair	eines textflusses in ||| resource $pdfdoc int $textflow	count=1
arg_pair	ausnahme dass ||| int $hour int $minute	count=1
function_name	setzt den zeiger ||| move	count=1
arg_pair	[arg_pair] definierten ||| [arg_pair]	count=1
arg_pair	rundet den parameter val ||| float $val int $precision	count=1
return	ihren ||| int	count=1
return	[return] informationen ||| [return]	count=1
namespace	alle variablen die ||| function	count=1
namespace	zurück über die die ||| function	count=1
function_name	zeiger auf ||| move to next	count=1
function_name	erhält informationen über ||| stat	count=1
arg_pair	host her ||| string $host	count=1
arg_pair	wartet ob ||| array $except	count=1
return	auf ein ||| bool	count=2
function_name	elternklasse ||| parent	count=1
function_name	verursachte dass das kind ||| pcntl wtermsig	count=1
namespace	der angegebenen ||| function	count=5
function_name	in bytes [function_name] ||| pg [function_name]	count=1
return	ein element ||| bool	count=1
namespace	wird anhand der ||| function	count=1
arg_pair	datumsformate dezimaltrennzeichen [arg_pair] fließkommazahlen ||| [arg_pair]	count=1
arg_pair	connection_string bezeichnet ||| string $connection_string int $connect_type	count=1
function_name	des attributes mit ||| get attribute	count=1
function_name	bindung für [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	der angegebene internet-host ||| function	count=1
arg_pair	gewählten datenbank aus ||| string $database	count=1
namespace	von array auf das ||| function	count=1
arg_pair	oder benutzerdefinierte funktion ||| string $name mixed $callback	count=1
namespace	liste der ||| function	count=2
return	den ersten wert ||| mixed	count=1
function_name	wandelt eine binäre guid ||| mssql guid	count=1
namespace	den ||| xmlreader	count=1
arg_pair	ob diese ihren status ||| int $tv_sec	count=1
function_name	ftp-verbindung zum ||| ftp	count=1
namespace	der vergleich ||| function	count=1
function_name	postgresql ||| pg	count=10
function_name	pem-kodiert versehene repräsentation des ||| pkey export to file	count=1
arg_pair	der übergebene hash ||| string $hash	count=1
namespace	benutzt werden um informationen ||| function	count=1
arg_pair	sortierte liste von nachrichtennummern ||| string $search_criteria string $charset	count=1
function_name	liest ||| zip entry read	count=1
namespace	mit der übergebenen ||| function	count=2
function_name	gibt die größe ||| size	count=1
function_name	verweist oder aufs ||| move to	count=1
function_name	den knoten selbst ||| outer xml	count=1
arg_pair	dem array input ||| array $input	count=1
function_name	oder ||| move	count=1
function_name	[function_name_1] existiert ||| [function_name_1] [function_name_2]	count=1
function_name	löscht einen ||| delete	count=1
function_name	[function_name_1] physisches oder ||| [function_name_2] [function_name_1]	count=1
namespace	die daraus resultierenden metrikdaten ||| function	count=1
arg_pair	groß- und kleinschreibung ||| string $str2	count=1
function	die funktion ändert [function_name_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [function_name_1] resource $imap_stream [arg_pair_2] string $new_mbox	count=1
arg_pair	funktion liefert ||| resource $imap_stream	count=1
function_name	einen ||| delete index	count=2
function_name	eines dom ||| simplexml import dom	count=1
arg_pair	komprimiert daten ||| string $data	count=1
namespace	die nachrichtennummer für ||| function	count=1
function_name	eines numerischen ||| value	count=1
arg_pair	replacement ||| mixed $replacement	count=1
function_name	um einen gemeinsamen ||| shmop	count=2
function_name	und beendet die möglichkeit ||| cancel	count=1
namespace	letzten wert von array ||| function	count=1
namespace	zeichensatzes der verbindung ||| function	count=1
function_name	[function_name_1] postgresql abfrageergebnisses ||| [function_name_2] [function_name_1]	count=8
function_name	nicht vom typ af_unix ||| recvfrom	count=1
namespace	der ergebniskennung ||| function	count=1
namespace	ergebnis auf die ||| function	count=1
function_name	diese ihren status ||| select	count=1
function_name	seines ||| index	count=1
namespace	gregorianischen kalender in der ||| function	count=1
function_name	[function_name_1] zum ||| [function_name_2] private [function_name_1]	count=1
namespace	die beziehung der indexe ||| function	count=1
function_name	aufruf dieser methode ||| call	count=1
arg_pair	filename und ||| string $filename bool $use_include_path	count=1
arg_pair	berechnet den fließkommarest ||| float $x	count=1
arg_pair	groß- und ||| string $str1	count=1
function_name	der benutzerin ||| getlogin	count=1
function_name	sendet eine e-mail ||| mail	count=1
arg_pair	ausnahme dass die ||| int $hour int $minute	count=1
function_name	verweist oder aufs erste ||| move to next	count=1
arg_pair	dass file_get_contents() die datei ||| string $filename bool $use_include_path	count=1
namespace	funktion wird verwendet um ||| function	count=1
namespace	der aufruf ||| soapclient	count=1
function	versehene repräsentation [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	eine ressource [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	empfängt len bytes daten ||| int $flags	count=1
namespace	unter verwendung von ||| function	count=1
function_name	private schlüssel zum zertifikat ||| openssl x509 check private key	count=1
function_name	löscht einen ||| delete index	count=1
function_name	archiveintrag unter verwendung seines ||| index	count=1
return	an ||| bool	count=1
arg_pair	fest das [arg_pair] optionsliste ||| [arg_pair]	count=1
namespace	w+ und [namespace] einen dateizeiger ||| [namespace]	count=1
function	kopiert datei [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	verschlüsselt data unter ||| string $data string $sealed_data	count=1
function_name	tage in ||| days in month	count=1
function	[function_name_1] subject ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] in ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	an den ingres-server ||| array $params string $types	count=2
namespace	die form der ||| function	count=1
arg_pair	die datei fest welche ||| string $file	count=1
function_name	fehlermeldung an das ||| error	count=1
function_name	die unterschiede zurück ||| array diff	count=2
function	erweiterung [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	gibt die konvertierte ||| function	count=1
function_name	attribut wenn ||| to next	count=1
function_name	persistente [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	ob diese ||| int $tv_sec	count=1
function_name	versehene repräsentation ||| pkey export to file	count=1
return	attribut verweist oder ||| bool	count=1
return	gegebenen argumente zurück ||| int	count=1
namespace	wert gesetzt der ||| function	count=1
function_name	nimmt ||| socket	count=1
namespace	der arrayelemente identisch ||| function	count=1
arg_pair	key und bereitet ihn ||| mixed $key string $passphrase	count=1
arg_pair	den übergebenen parametern zu ||| string $stmtname	count=1
function_name	archiveintrag unter verwendung seines ||| delete index	count=1
namespace	[namespace] socket_send() sendet ||| [namespace]	count=1
namespace	alle http-header des ||| function	count=1
namespace	apachespezifische funktion ähnlich wie ||| function	count=1
function_name	[function_name_1] datenbanken des ||| [function_name_2] [function_name_1]	count=1
function_name	exportiert die ||| export to	count=1
arg_pair	ausnahme dass die übergebenen ||| int $hour int $minute	count=1
function_name	angegebene eigenschaft [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	umgekehrter reihenfolge ||| strrev	count=1
arg_pair	a bson ||| string $bson	count=1
function_name	des uuencode algorithmus unix-to-unix-verschlüsselung) ||| convert uuencode	count=1
arg_pair	diese erzeugt sollte ||| string $filename	count=1
function_name	wirkliche funktion ||| list	count=1
namespace	feldes zurück das der ||| function	count=1
arg_pair	eines textflusses in ||| int $textflow	count=1
return	zerlegt ||| array	count=1
function_name	namen eines feldes in ||| field name	count=1
function_name	und kleinschreibung unterscheidet ||| eregi replace	count=1
arg_pair	die funktion openssl_pkcs7_sign() ||| string $extracerts	count=1
function_name	to a reconstructed image ||| get image	count=1
function_name	ein element verweist ||| to	count=1
namespace	nummer der ||| function	count=1
function_name	der tabelle ||| table	count=1
arg_pair	eine low-level-api-funktion um ||| mixed $input_headers	count=1
function_name	ein neues handle ||| handle	count=1
namespace	und msg_qbytes in der ||| function	count=1
function_name	wörter in string ||| str word	count=1
arg_pair	lokalen oder entfernten server ||| string $database_name resource $link_identifier	count=1
function_name	mysql [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] zeichenkette ||| [function_name_1] [arg_pair_2]	count=1
function_name	numerisch ist ||| is numeric	count=2
namespace	die variable ||| function	count=2
arg_pair	den wert des /status ||| resource $fdf_document	count=1
namespace	werden könnten ||| function	count=1
namespace	zeiger auf ||| xmlreader	count=1
arg_pair	sealed_data unter verwendung des ||| string $sealed_data	count=1
return	überprüft ob ||| bool	count=1
function	abschnitts von [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	dies keine wirkliche funktion ||| list	count=1
arg_pair	mittels glue zu ||| string $glue array $pieces	count=1
function_name	zum browser/client gesendet ||| headers list	count=1
function_name	leerraum oder ||| ltrim	count=1
function_name	die option die mit ||| socket set option	count=1
arg_pair	sortierte liste von ||| string $search_criteria string $charset	count=1
return	zeichenkette ||| string	count=2
function_name	[function_name_1] schlüssel ||| [function_name_1] [function_name_2]	count=1
function_name	den kommentar ||| get comment name	count=1
function_name	die fehlernummer ||| get code	count=1
namespace	erzeugt eine ||| function	count=1
arg_pair	die in ||| string $extension_name	count=1
namespace	query der übergebenen ||| function	count=1
function	[function_name_1] cert ist ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	table_name in einem ||| string $table_name	count=1
function_name	ob ||| select	count=1
arg_pair	parameter start und optional ||| mixed $start	count=1
return	liefert [return] länge eines ||| [return]	count=1
arg_pair	eine ||| resource $pdfdoc int $text	count=1
namespace	wert der im parameter ||| function	count=1
function_name	query an den ||| query	count=2
function_name	gibt den [function_name] ||| [function_name]	count=2
arg_pair	zeichenkette so dass ||| object $link_identifier string $text	count=1
function_name	maskiert ||| dbx escape	count=1
arg_pair	data unter ||| string $data string $sealed_data	count=1
namespace	inclusive der richtigen ||| function	count=1
arg_pair	parst key und bereitet ||| mixed $key	count=1
arg_pair	die schnittmenge von ||| array $array1 array $array2	count=1
arg_pair	mittels offset ||| int $offset	count=1
arg_pair	regulären ||| string $pattern	count=2
namespace	gibt die gelesenen daten ||| function	count=1
function_name	[function_name_1] ein zeichen ||| [function_name_2] [function_name_1]	count=1
function_name	formatierung vor und ||| create textflow	count=1
function_name	ingres ||| ingres	count=1
return	zugrunde liegende ||| bool	count=1
function_name	option die mit ||| socket set option	count=1
function_name	[function_name_1] pdf dokument ||| [function_name_2] [function_name_1]	count=4
function_name	höchste verfügbare hash-id ||| mhash count	count=1
function_name	markup ||| inner xml	count=1
function_name	versehene repräsentation des schlüssels ||| to file	count=1
arg_pair	die [arg_pair_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=3
function_name	textausgabe ||| set text pos	count=1
return	eintrag der mittels ||| array	count=1
function_name	körper ||| imap body	count=1
function_name	weitere abarbeitung ||| ignore user abort	count=1
namespace	konversion von zeichensätzen ||| function	count=1
arg_pair	domain für eine einzelne ||| string $message	count=1
arg_pair	schlüssel aus array in ||| array $array int $case	count=1
arg_pair	verfügbar wenn [arg_pair] gegen die ||| [arg_pair]	count=1
function_name	wert des attributes mit ||| get attribute ns	count=1
function_name	archiveintrag unter ||| delete	count=1
function_name	die unterschiede ||| array diff	count=2
arg_pair	ihren ||| array $except	count=1
function_name	schlüssels ||| fdf get	count=1
arg_pair	variable als ||| mixed $var bool $syntax_only	count=1
function_name	verzeichnis mit dem angegebenen ||| mkdir	count=1
arg_pair	seinen werten mittels einer ||| array $array	count=1
arg_pair	setzt die schreib-/leseposition für ||| int $offset	count=1
function_name	einen archiveintrag ||| delete	count=1
return	und speichert ||| bool	count=1
namespace	dafür ob der abbruch ||| function	count=1
return	queue angegebene ||| bool	count=1
namespace	fließkommarest der division des ||| function	count=1
arg_pair	dateizeiger in eine ||| resource $handle int $mode	count=1
arg_pair	ein passwort und ||| string $password	count=1
return	assoziatives array das ||| array	count=1
arg_pair	message übergebene ||| string $message string $options	count=1
arg_pair	dessen dessen ||| mixed $object_id	count=1
arg_pair	ein strukturelement oder einen ||| resource $pdfdoc	count=1
arg_pair	den in purpose ||| mixed $x509cert int $purpose	count=1
arg_pair	bereitet den [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
namespace	der erste ||| function	count=1
function_name	large object ressource ||| pg lo	count=1
function_name	angeforderten [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	benutzt werden um ||| function	count=1
function_name	[function_name] sets are ||| maxdb [function_name]	count=1
namespace	mit der angegebenen ||| function	count=1
function_name	datenbank als [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	entfernt leerraum oder ||| ltrim	count=1
function	[function_name_1] datei ||| [arg_pair_2] [function_name_1]	count=2
function_name	auf das nächste attribut ||| to	count=1
return	in ||| int	count=4
function	mysql [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	einer msql ergebnismenge ||| msql	count=1
function_name	attribut wenn er auf ||| move	count=1
function_name	das ergebnis eines dbx_query() ||| dbx	count=1
function_name	auf ||| move to	count=3
namespace	2.2.x der ||| function	count=1
function_name	[function_name_1] grafikzustandsobjekt unter ||| [function_name_2] [function_name_1]	count=1
function	maskiert die [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function	abschnitts von [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	zur späteren verwendung vor ||| string $encoding string $optlist	count=1
arg_pair	fügt eine ||| resource $pdfdoc float $lowerleftx	count=1
function_name	letzten soap-antwort gesendet wurde ||| get last response	count=1
function_name	die potenz von ||| pow	count=1
function_name	assoziiert ist ||| mysql select db	count=1
return	den ||| resource	count=3
function_name	feldtyp [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	aus dem ||| imagepng	count=1
arg_pair	offset [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=1
function_name	die fehlernummer ||| errno	count=2
function_name	wenn er auf ein ||| move to	count=1
arg_pair	[arg_pair_1] datei ||| [arg_pair_2] mixed $data [arg_pair_1]	count=1
namespace	server die ||| function	count=1
function	php-variable [arg_pair_2] ||| [function_name_1] by name [arg_pair_2]	count=1
function_name	sitzung ||| session	count=1
function_name	eine abfrage aus ||| db query	count=1
function_name	dass das kind ||| pcntl	count=1
arg_pair	ob ||| int $tv_sec	count=1
function_name	imap fehlermeldung die ||| imap last error	count=1
arg_pair	seinen werten mittels einer ||| array $array callable $value_compare_func	count=1
function_name	öffentlichen ||| public	count=1
function_name	knoten eines dom ||| import dom	count=1
arg_pair	fest das [arg_pair] ||| [arg_pair]	count=1
return	oder aufs ||| bool	count=1
namespace	asynchrone abfrage [namespace] ||| [namespace]	count=1
namespace	der postgresql-datenbank ||| function	count=1
function_name	rechteck ||| pdf rect	count=2
namespace	csv format und gibt ||| function	count=1
function_name	vergleich einfließen sollen angeben ||| strncasecmp	count=1
function_name	wird die option die ||| socket set option	count=1
arg_pair	und liest sie in ||| string $name	count=1
function_name	entspricht weitgehend readgzfile() gibt ||| gzfile	count=1
function_name	guid ||| guid string	count=1
function_name	ihren ||| socket select	count=2
function	platziert [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	unescaped_string unter berücksichtigung ||| string $unescaped_string	count=1
function	eines dbx_query() [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	nachricht ||| mixed $file	count=1
arg_pair	dieser ||| string $function_name	count=1
function_name	attributes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	welche ||| string $file int $mode	count=1
function_name	dieser erweiterung unterstützt ||| dba handlers	count=1
namespace	daten an die ||| function	count=1
namespace	die gegenwärtig registriert sind ||| function	count=1
function_name	ersten [function_name] ||| [function_name]	count=1
function_name	format utf-32 nach utf-16 ||| pdf utf32 to utf16	count=1
arg_pair	bessere performance zu bieten ||| string $filename	count=1
namespace	der allen ||| function	count=1
function_name	option die ||| socket set option	count=1
function_name	des ||| field	count=1
namespace	aus [namespace] ||| [namespace]	count=4
return	funktion akzeptiert entweder einen ||| string	count=1
namespace	dem wert der ||| function	count=1
arg_pair	mit dem [arg_pair] ||| [arg_pair]	count=2
function_name	oracle-platzhalter ||| by	count=1
function_name	internen datensatz-zeiger eines ||| seek	count=2
namespace	wirkliche funktion ||| function	count=1
function_name	dom ||| import dom	count=1
arg_pair	und führt darauf ||| string $database string $query	count=1
function_name	ftp-stream ||| ftp	count=1
function_name	nächste ||| next	count=1
arg_pair	ein mit den ||| string $domain	count=1
function_name	änderung des ausgeführten scripts ||| getlastmod	count=1
namespace	gibt die nachricht der ||| function	count=1
return	ein array mit informationen ||| array	count=2
arg_pair	diese ||| array $read array $write	count=1
arg_pair	in ||| string $str	count=1
function_name	query ||| ingres unbuffered query	count=1
function_name	kein ||| strcspn	count=1
function_name	[function_name] ohne probleme ||| [function_name] real escape	count=3
arg_pair	openssl_seal() verschlüsselt data unter ||| string $sealed_data	count=1
function	zertifikat [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	der binären zahl ||| function	count=1
arg_pair	den input -string erweitert ||| int $pad_length	count=1
function_name	text-block mit ||| fill textblock	count=1
function_name	auf ||| to	count=3
arg_pair	uri angeben die ||| string $uri	count=1
function_name	liefert ein array ||| array	count=1
function_name	verweist oder aufs ||| to	count=1
arg_pair	späteren verwendung vor ||| string $optlist int $len	count=1
function_name	in dem get_defined_vars() aufgerufen ||| get defined vars	count=1
function_name	datenbank als indiziertes ||| dbase get record	count=1
function_name	diese funktion verwirft ||| clean	count=1
arg_pair	dateizeiger in eine ||| resource $handle	count=1
arg_pair	domain von gettext() oder ||| string $domain string $codeset	count=1
function_name	und gruppenbeziehungen zwischen ||| dependency	count=1
arg_pair	status ||| array $except int $tv_sec	count=1
arg_pair	ob der übergebene hash ||| string $hash	count=1
function	[function_name_1] kommando-tag ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	einen soap-aufruf ||| string $function_name	count=1
function	das feld [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	persistente ||| pconnect	count=3
function_name	durchgeführten änderungen ||| unchange all	count=1
namespace	verbindungs-id mit der von ||| function	count=1
arg_pair	und gibt ||| resource $connection	count=1
namespace	von ||| function	count=34
namespace	form der ||| function	count=1
function_name	auf das nächste attribut ||| move to	count=1
arg_pair	namen zu erstellen ||| bool $recursive resource $context	count=1
arg_pair	parameter ein gmt-datum repräsentieren ||| int $year int $is_dst	count=1
function_name	[function_name_1] protokoll ||| [function_name_1] [function_name_2]	count=3
function_name	get_defined_vars() aufgerufen wird zurück ||| get defined vars	count=1
function_name	attribut wenn ||| move to next attribute	count=1
function_name	datenbank den angegebenen datensatz ||| dbase	count=1
function	[function_name_1] tabelle ein ||| [arg_pair_2] [function_name_1]	count=1
namespace	wird ||| function	count=10
namespace	der seite ||| function	count=3
return	und den nachrichtenteilen ||| string	count=1
arg_pair	len bytes daten ||| int $flags	count=1
arg_pair	bei transformationen mittels xsltprocessor ||| string $namespace	count=1
function_name	überprüft ein zertifikat ||| openssl x509 checkpurpose	count=1
return	methode ist ||| mixed	count=1
return	datei zurück [return] der die ||| [return]	count=1
function_name	attribut wenn er ||| to next attribute	count=1
function_name	setzt den zeiger auf ||| to	count=1
arg_pair	oder diese ||| string $filename int $mode	count=1
arg_pair	status ändern ||| array $read array $write	count=1
arg_pair	vorkommen ||| string $needle	count=1
arg_pair	der aufruf dieser methode ||| string $function_name	count=1
namespace	die auf der ||| function	count=1
return	mit ||| array	count=2
namespace	liefert alle http-header ||| function	count=1
function_name	wartet ob diese ihren ||| socket	count=1
function_name	eines dom ||| dom	count=1
namespace	die sich die ||| function	count=1
function_name	[function_name_1] definiert wurde ||| [function_name_2] [function_name_1]	count=4
arg_pair	wert des /status ||| string $status	count=1
arg_pair	in das postfach mailbox ||| int $options	count=1
function_name	socket_set_option() wird die option ||| option	count=1
function_name	zeile und [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=67
arg_pair	um alpha ||| resource $p float $alpha	count=1
arg_pair	übergebene hash den ||| string $hash string $algo	count=1
arg_pair	diese funktion ist ||| string $string	count=1
namespace	einem prozentzeichen% gefolgt von ||| function	count=1
arg_pair	und bcc ||| string $bcc string $rpath	count=1
function_name	des [function_name] objects ||| [function_name]	count=1
return	in einem array ||| array	count=1
function_name	den zeiger auf das ||| to	count=1
function_name	durch den divisor ||| fmod	count=1
arg_pair	empfängt len bytes daten ||| int $len	count=1
function_name	verkürzt die datei ||| ftruncate	count=1
function_name	zeilen in ||| rows	count=2
function_name	[function_name_1] tabellen ||| [function_name_2] [function_name_1]	count=1
namespace	inhalt der datei ||| function	count=2
function_name	einstellungen ||| parse ini	count=1
namespace	wirkliche funktion sondern ||| function	count=1
arg_pair	ein mit den ||| string $domain bool $secure	count=1
function_name	auf das nächste ||| move	count=1
namespace	string zurück der durch ||| function	count=1
return	[return] curl_setopt() curl_exec() ||| [return]	count=1
arg_pair	ist missbilligt ||| string $arguments	count=1
function_name	flags bei allen ||| imap setflag full	count=1
arg_pair	hängt die ||| int $dbase_identifier array $record	count=1
namespace	die im dateisystem ||| function	count=1
arg_pair	und wartet ||| array $except int $tv_sec	count=1
namespace	[namespace] aktuelle transformationsmatrix ||| [namespace]	count=1
arg_pair	inhalt einer variable ||| mixed $var bool $syntax_only	count=1
arg_pair	datei source nach dest ||| string $source string $dest	count=1
arg_pair	zeichenkette ||| object $link_identifier	count=1
function_name	ein array welches mit ||| oci fetch array	count=1
function_name	include include_once ||| get	count=1
function_name	der msql ergebnismenge ||| msql	count=1
arg_pair	ein datum in calendar ||| int $month	count=1
arg_pair	des /status ||| string $status	count=1
namespace	initialisiert alle variablen die ||| function	count=1
arg_pair	erzeugt ||| int $major	count=1
function	repräsentation des [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	und ||| string $localname	count=1
function_name	den semaphor ||| sem	count=1
arg_pair	zu hostname passen ||| string $hostname array $mxhosts	count=1
function_name	utf-32 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	der umgebung server-variablen oder ||| function	count=1
function_name	ein grafikzustandsobjekt unter ||| gstate	count=1
namespace	der richtigen behandlung von ||| function	count=1
return	datei zurück [return] der ||| [return]	count=1
arg_pair	ingres-server ||| array $params string $types	count=2
function_name	aufruf dieser ||| call	count=1
arg_pair	oder eine gewöhnliche datei ||| int $minor	count=1
namespace	wird der ||| function	count=2
function_name	elternelement des ||| move to element	count=1
arg_pair	dem parameter dn angegeben ||| array $dn	count=1
function_name	pcos-pfades vom typ name ||| pdf pcos	count=1
function_name	den ||| oci fetch	count=1
arg_pair	funktion gibt den input ||| string $input int $pad_length	count=1
arg_pair	sortierte liste von nachrichtennummern ||| string $search_criteria	count=1
arg_pair	mit den übergebenen parametern ||| string $stmtname	count=2
function_name	von ein ||| add function	count=1
arg_pair	seconds und nanosekunden nanoseconds ||| int $nanoseconds	count=1
arg_pair	und ||| resource $link	count=1
function_name	skripts ||| exit	count=1
arg_pair	ruft eine datenzeile ||| resource $result_identifier int $fetch_flag	count=1
namespace	schließt die ||| function	count=3
arg_pair	status ||| array $write	count=1
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| export to file	count=1
arg_pair	in einem datei-deskriptor ||| mixed $fd	count=1
namespace	der nummer ||| function	count=1
function_name	ein textflussobjekt oder ||| textflow	count=1
function_name	flags ||| imap clearflag full	count=1
function_name	gegebenen base-64 kodierten ||| imap base64	count=1
arg_pair	baut eine verbindung zu ||| string $servername string $username	count=1
function_name	wenn er auf ||| move to next	count=1
arg_pair	aufruf dieser methode ||| string $function_name	count=1
function_name	__autoload() () fallback-funktion spl_autoload() ||| spl autoload	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] textline [arg_pair_2]	count=1
function_name	ersetzt in der durch ||| dba replace	count=1
return	ein element verweist ||| bool	count=1
namespace	ermittelt die namen der ||| function	count=1
return	informationen über ||| array	count=2
function_name	archiveintrag unter ||| index	count=1
function_name	funktion beendet ||| close	count=1
namespace	befinden mit der in ||| function	count=1
arg_pair	nimmt ||| int $tv_sec	count=1
function_name	definierten funktionen ||| get	count=1
arg_pair	rechteckigen bereich ||| float $ury	count=1
function_name	den ||| set location	count=1
function_name	wird die option ||| set option	count=1
function_name	[function_name] callback ||| [function_name]	count=1
arg_pair	erzeugt ||| string $pathname int $mode	count=1
arg_pair	mittels glue zu ||| array $pieces	count=1
function_name	zeile [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	geschriebenen funktionen), ob ||| exists	count=1
namespace	exception ||| exception	count=1
function_name	ftp-verbindung ||| ftp connect	count=2
return	verweist oder aufs ||| bool	count=1
return	sondern ||| array	count=1
function_name	gibt den stacktrace ||| get trace	count=1
function_name	entfernt ||| shm remove	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=1
arg_pair	transformationen mittels xsltprocessor ||| string $name	count=1
arg_pair	domain von ||| string $domain string $codeset	count=1
arg_pair	month day ||| int $day	count=2
function_name	eines dbx_query() ||| dbx sort	count=1
namespace	keine ||| function	count=1
function_name	imap fehlermeldung ||| imap last error	count=1
function_name	attribut verweist oder ||| to next	count=1
namespace	erlaubt die ||| function	count=1
function_name	liefert ||| imap	count=1
function_name	schreibt ||| readline write	count=1
namespace	wird zum ||| function	count=1
arg_pair	mit dem parameter dn ||| array $dn resource $privkey	count=1
function_name	entsprechende ||| row	count=1
function_name	oder aufs erste ||| move to	count=1
function_name	übergebene interface definiert wurde ||| interface exists	count=1
arg_pair	assoc_array entsprechen ||| int $options	count=1
return	gibt ||| bool	count=2
arg_pair	offset ||| resource $context int $offset	count=1
arg_pair	datei ||| bool $use_include_path	count=2
function_name	dokumente ||| udm get doc count	count=2
arg_pair	in message übergebene ||| string $message	count=1
function_name	produkt von werten ||| array product	count=1
function_name	soap-anfrage ||| do request	count=2
function_name	repräsentation ||| openssl pkey export to file	count=2
function_name	query ||| query	count=2
arg_pair	inhalt einer variable als ||| mixed $var	count=1
namespace	[namespace] fehlerliste aufgetreten ||| [namespace]	count=3
function	dem [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	dekodiert ||| decode	count=1
function_name	oder ||| move to next	count=1
function_name	funktion ||| input array	count=1
function_name	pg_execute() oder ||| pg	count=1
function_name	pg_result_error() [function_name] werden ||| [function_name] set error	count=1
arg_pair	entfernte datei ||| int $mode	count=1
return	ein assoziatives array ||| array	count=1
arg_pair	zu bieten ||| string $filename	count=1
function	[function_name_1] source nach ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	liefert informationen zu den ||| resource $imap_stream string $ref	count=1
function_name	message [function_name] ||| msg get [function_name]	count=1
function_name	plural-abfrage zu überschreiben ||| dcngettext	count=1
function_name	wert des /encoding schlüssels ||| fdf get encoding	count=1
function_name	benutzten verbindung für ||| host info	count=1
function_name	liegendes oder virtuelles 3d-modell ||| pdf load 3ddata	count=1
arg_pair	werten mittels einer ||| callable $value_compare_func	count=1
function_name	or [function_name] ||| maxdb [function_name]	count=1
namespace	funktion konvertiert die in ||| function	count=1
function_name	datenbankstruktur ||| get header	count=1
arg_pair	fügt eine datei ||| string $filename	count=1
function_name	oder aufs ||| move	count=1
arg_pair	sortierte liste von nachrichtennummern ||| string $charset	count=1
arg_pair	das objekt objekt von ||| mixed $object	count=1
namespace	zurückzugeben der die um ||| function	count=1
function_name	baut eine persistente verbindung ||| pconnect	count=1
namespace	die funktion ||| function	count=4
return	füll- und zeichenfarbe auf ||| bool	count=1
function_name	und wartet ob ||| socket	count=1
return	nächste attribut wenn er ||| bool	count=1
function_name	wert eines pcos-pfades vom ||| pdf pcos	count=1
namespace	ende von ||| function	count=2
arg_pair	platziert eine ||| resource $pdfdoc	count=1
function_name	an den oracle-platzhalter ||| array by	count=1
function_name	zertifikat ||| openssl x509 checkpurpose	count=2
function_name	die zum browser/client gesendet ||| headers list	count=1
function_name	flags bei ||| imap setflag full	count=1
function_name	dio_stat() gibt informationen ||| dio stat	count=1
function_name	[function_name_1] $_session-superglobale damit ||| [function_name_1] [function_name_2]	count=1
function	binäre guid [arg_pair_2] ||| [function_name_1] string $binary [arg_pair_2]	count=1
arg_pair	ermittelt den ||| resource $p	count=4
return	versucht die ||| bool	count=1
namespace	nachrichten aus der ||| function	count=1
function_name	[function_name] einem ||| pg num [function_name]	count=2
function_name	attribut wenn ||| next attribute	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pvf resource $pdfdoc [arg_pair_2]	count=4
function_name	liest ||| readline read	count=1
arg_pair	konvertiert einen string in ||| int $split_length	count=1
namespace	verschoben wird ||| function	count=1
arg_pair	entschlüsselt einen gegebenen text ||| string $text	count=1
function_name	[function_name] letztdefinierten ||| readline callback [function_name]	count=1
return	mit den ||| resource	count=1
return	mit queue angegebene ||| bool	count=1
arg_pair	verbindungen stattfindet ||| resource $mh float $timeout	count=1
arg_pair	die datei ||| string $filename bool $use_include_path	count=1
function_name	gehört ||| row	count=1
function_name	für ||| posix initgroups	count=1
function_name	zugriffsberechtigungen ||| posix access	count=2
namespace	der linken rechten oder ||| function	count=1
return	sie nur aufrufen wenn ||| bool	count=1
function	[function_name_1] den ||| [function_name_1] [arg_pair_2]	count=1
return	array() ist auch dies ||| array	count=1
function_name	das kind ||| pcntl wtermsig	count=1
function_name	zertifikat um ||| openssl x509	count=1
return	setzt den ||| bool	count=1
function_name	message [function_name] werden kann ||| msg get [function_name]	count=1
return	[return] der ||| [return]	count=2
function_name	einer msql ||| msql result	count=1
arg_pair	erzeugt eine spezielle ||| int $mode	count=1
namespace	msg_qbytes in der ||| function	count=1
namespace	die zahl des signals ||| function	count=2
return	gibt ein array ||| array	count=2
arg_pair	diese funktion ist ||| string $string int $flags	count=1
return	liefert alle ||| array	count=1
function_name	betroffenen zeilen zurück ||| mysqli affected rows	count=1
arg_pair	key und ||| mixed $key	count=1
function_name	dies ||| list	count=1
function_name	link ||| linkinfo	count=1
arg_pair	spezielle oder ||| string $pathname	count=1
arg_pair	mit size angegebene größe ||| int $size	count=1
arg_pair	link_identifier bezieht ||| resource $link_identifier	count=1
function_name	unterscheidet ||| eregi replace	count=2
arg_pair	versucht oldname in newname ||| string $oldname string $newname	count=1
function_name	von ein ||| function	count=1
arg_pair	array nach schlüsseln in ||| array $array	count=1
function_name	beendet ||| pdf end	count=2
function_name	gibt die fehlernummer ||| get code	count=1
function_name	einzelne textzeile ||| textline	count=1
namespace	nachricht der ||| function	count=1
arg_pair	eine spezielle ||| int $mode	count=1
function_name	eine spezielle oder ||| posix mknod	count=1
arg_pair	sendet [arg_pair] ||| [arg_pair]	count=2
function_name	verweist ||| move	count=2
arg_pair	mit den übergebenen parametern ||| resource $connection string $stmtname	count=1
function_name	ob ||| socket select	count=2
arg_pair	in c enthaltene zeichen ||| string $c	count=1
arg_pair	input -string ||| string $input int $pad_length	count=1
arg_pair	spezielle ||| string $pathname	count=1
return	spezielle oder ||| bool	count=1
function_name	zeile und spalte ||| fetch result	count=3
arg_pair	ob diese ||| array $read	count=1
function_name	die eigenschaft ||| property	count=1
function_name	verzeichnis ||| mkdir	count=1
function_name	zur nutzung ||| pkey get private	count=1
arg_pair	month day und ||| int $month int $day	count=1
function_name	$_session-superglobale damit ||| decode	count=1
function_name	namen der aktuellen tabelle ||| fbsql table name	count=1
return	liefert ein array ||| array	count=1
return	keine wirkliche ||| array	count=1
namespace	beziehung der ||| function	count=1
namespace	auf das vorkommen von ||| function	count=1
arg_pair	den [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
namespace	zwischen verzeichnissen verschoben wird ||| function	count=1
function_name	unter verwendung ||| index	count=1
arg_pair	funktion openssl_pkcs7_sign() ||| int $flags string $extracerts	count=1
function_name	öffnet ||| open	count=2
function_name	gibt die datensatz-id ||| row id	count=1
function_name	aufruf ||| call	count=1
function_name	[function_name_1] des zuletzt ||| [function_name_2] insert [function_name_1]	count=3
function_name	das nächste ||| next	count=2
arg_pair	in c ||| string $c	count=1
arg_pair	ob diese ihren ||| array $except	count=1
namespace	mit dem wert der ||| function	count=1
arg_pair	hängt die angegebenen ||| int $dbase_identifier array $record	count=1
arg_pair	konvertiert das in month ||| int $month	count=2
arg_pair	vom anfang eines strings ||| string $character_mask	count=1
return	und wartet ||| int	count=1
function_name	liefert ein array welches ||| oci fetch array	count=1
function_name	entfernt [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	eine e-mail ||| mail	count=1
function_name	datenbank ||| dbase	count=4
namespace	aktuellen zeichensatzes der ||| function	count=1
namespace	setzt den ||| xmlreader	count=1
namespace	ihren status ||| function	count=1
namespace	für die weitere ||| function	count=1
function_name	übergebene interface [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	durch ||| pg fetch row	count=1
arg_pair	diese ||| int $tv_sec	count=1
function_name	das kind [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	element ||| move	count=1
function_name	auf ein element ||| move	count=1
function_name	virtuelles 3d-modell ||| pdf load 3ddata	count=1
function_name	[function_name_1] aktuellen tabelle ||| [function_name_2] [function_name_1]	count=1
function_name	seite unter [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	allerdings wandelt htmlentities() wirklich ||| string $encoding	count=1
arg_pair	ähnelt ||| int $return_var	count=1
function_name	löscht eine benannte virtuelle ||| delete	count=1
function_name	unter ||| index	count=1
return	ist auch ||| array	count=1
arg_pair	schlüssel aus array in ||| array $array	count=1
function_name	eine abfrage aus ||| query	count=1
return	in ||| array	count=2
function_name	setzt das flag ||| set	count=1
function_name	potenz von exp ||| pow	count=1
function_name	ersetzt ||| dba replace	count=1
arg_pair	zeichensatz in_charset kodierte ||| string $in_charset	count=1
arg_pair	verschiedener optionen ||| resource $pdfdoc string $optlist	count=2
namespace	und der ||| function	count=1
arg_pair	ermittelt den wert ||| resource $p string $key	count=1
namespace	standardmäßig $this ||| directory	count=1
namespace	der benutzer für ||| function	count=1
arg_pair	ändern ||| array $read array $write	count=1
function_name	pcos-pfades vom typ zahl ||| pdf pcos	count=1
namespace	löscht einen archiveintrag unter ||| ziparchive	count=1
namespace	serialisierten daten der ||| function	count=1
arg_pair	server ||| resource $link_identifier	count=1
arg_pair	png -datei ||| int $quality int $filters	count=1
function_name	und ermittelt ||| pdf	count=1
function_name	ersetzt ||| replace	count=4
namespace	die durch die funktionen ||| function	count=1
arg_pair	übergebenen image oder ||| resource $image	count=1
namespace	der festplatte liegendes oder ||| function	count=2
arg_pair	und liest ||| string $name	count=1
function_name	setzt den zeiger auf ||| next	count=1
namespace	des aktuellen knoten inklusive ||| xmlreader	count=1
namespace	dem server [namespace] angegebenen verbindungskennung ||| [namespace]	count=1
arg_pair	wandelt htmlentities() wirklich alle ||| string $encoding	count=1
namespace	schnittstelle zum systemaufruf von ||| function	count=1
arg_pair	connection_string bezeichnet wird ||| string $connection_string	count=1
function	[function_name_1] von domain ||| [arg_pair_2] [function_name_1]	count=4
namespace	wobei die zuordnungen ||| function	count=1
namespace	funktion gibt die ||| function	count=3
arg_pair	ruft eine datenzeile ||| int $fetch_flag	count=1
function_name	diese ihren status ||| socket select	count=1
return	objekt ||| object	count=1
function	leerraum oder [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	repräsentation des schlüssels ||| export to file	count=1
function	[function_name_1] von domain ||| [function_name_1] [arg_pair_2]	count=4
namespace	sondern ein ||| function	count=1
function_name	virtuelles pdf-dokument ||| pdi	count=1
function_name	attribut verweist oder ||| move to next	count=1
arg_pair	pararmeter infilename ||| string $infilename	count=1
arg_pair	len bytes aus dem ||| int $len	count=1
function_name	platziert ein ||| fit	count=1
function_name	löscht einen archiveintrag unter ||| index	count=1
function_name	funktion sondern ein ||| list	count=1
namespace	den fehlercode der vom ||| function	count=1
function	[function_name_1] von einer ||| [function_name_1] resource $result [arg_pair_2]	count=1
namespace	der division des ||| function	count=1
function_name	füllt einen pdf-block ||| pdfblock	count=1
function_name	formatierung vor und erzeugt ||| create textflow	count=1
function_name	registriert das ||| register	count=1
function_name	fehlermeldung an das ||| error log	count=1
namespace	delete anweisung die ||| function	count=1
function_name	erzeugt eine spezielle ||| posix	count=1
namespace	verbindung mit der ||| function	count=1
function_name	passwortüberprüfung ||| crack getlastmessage	count=1
arg_pair	die funktion ändert [arg_pair_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=2
namespace	die dezimale entsprechung der ||| function	count=1
namespace	die nächste ||| function	count=1
arg_pair	bewegt den ||| resource $result int $row_number	count=2
function_name	aufgefüllt wurde ||| pad	count=1
function	site exec-kommando [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	[namespace] angegebenen extension ||| [namespace]	count=1
function_name	großen unterschieden ||| pconnect	count=1
function_name	der tabelle falls ||| pg field table	count=1
arg_pair	tabelle [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	client für bestimmte ||| client	count=1
namespace	nachrichten aus der liste ||| function	count=1
arg_pair	variable als ||| bool $syntax_only	count=1
function	grafikzustandsobjekt [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	parameter val auf ||| float $val	count=1
namespace	auf ein attribut ||| xmlreader	count=1
namespace	konstanten in der ||| function	count=1
function_name	[function_name] vollständig und ||| [function_name] read	count=1
return	in die ||| int	count=1
namespace	sich die angegebene verbindungskennung ||| function	count=1
function_name	der msql ergebnismenge ||| msql data	count=1
arg_pair	server ohne ||| resource $connection string $query	count=1
function_name	ruft informationen oder nachrichten ||| info	count=1
function_name	schreibt aus ||| write	count=1
function_name	möglichkeit ||| oci cancel	count=2
function_name	maskiert ||| dbx escape string	count=2
arg_pair	die länge des ||| int $length	count=1
arg_pair	[arg_pair] in new_mbox ||| [arg_pair]	count=3
function_name	er auf ein element ||| next	count=1
namespace	ergebnis-kennung die ||| function	count=1
arg_pair	unescaped_string unter berücksichtigung des ||| resource $link_identifier	count=1
arg_pair	in flag ||| int $options	count=1
function_name	lädt ||| ftp fput	count=2
function_name	effektive numerische benutzer-id des ||| geteuid	count=1
function_name	datum im gregorianischen ||| gregoriantojd	count=1
namespace	1.1.1970 in [namespace] ||| [namespace]	count=3
function_name	site exec-kommando ||| ftp exec	count=1
arg_pair	erzeugt eine spezielle ||| string $pathname	count=1
arg_pair	öffnet filename und untersucht ||| string $filename bool $use_include_path	count=1
function_name	einen text-block ||| textblock	count=1
namespace	schließt die vom übergebenen ||| function	count=1
function_name	in ingres zu ||| ingres	count=1
namespace	das ||| xmlreader	count=1
function_name	mysql [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	namens bestimmt ||| int $flags	count=1
arg_pair	funktion ||| string $extracerts	count=1
return	ein datum ||| array	count=1
namespace	aus der gegebenen ||| function	count=1
function_name	client für bestimmte ||| pg client encoding	count=1
arg_pair	der übergebene hash ||| string $hash string $algo	count=1
namespace	attribut verweist ||| xmlreader	count=1
function_name	wert des attributes ||| attribute ns	count=1
return	liefert [return] länge ||| [return]	count=1
function_name	oder virtuelles pdf-dokument ||| pdi	count=1
arg_pair	ein ||| string $filename	count=1
namespace	die gegenwärtig ||| function	count=1
arg_pair	seconds und nanosekunden nanoseconds ||| int $seconds int $nanoseconds	count=1
return	hinzu ||| bool	count=1
return	der prozesse in ||| array	count=1
arg_pair	komprimiert daten mit ||| string $data	count=1
namespace	die nicht von ||| function	count=1
arg_pair	öffnet filename ||| bool $use_include_path	count=1
arg_pair	str und gibt den ||| string $str	count=1
function_name	eine [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	einem array zurück ||| array	count=1
function_name	bindet die php-variable ||| oci bind array	count=1
function_name	tabelle ||| fbsql table	count=1
arg_pair	in c enthaltene ||| string $c	count=1
function_name	spalte eines [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	lokalisiert einen eintrag unter ||| locate	count=1
namespace	von der aktuellen anfrage ||| function	count=1
namespace	die aktuelle auslastung der ||| function	count=1
arg_pair	index zurück ||| int $length	count=1
function_name	als ||| socket	count=1
arg_pair	funktion openssl_seal() verschlüsselt data ||| string $sealed_data	count=1
function_name	oder virtuelles pdf ||| pdf	count=1
arg_pair	bestimmt den detaillierungsgrad von ||| resource $connection	count=1
namespace	das ergebnis auf die ||| function	count=1
return	diese funktion ||| string	count=2
arg_pair	gegbenen key bezeichnete ||| int $key int $perms	count=1
function_name	pcos-pfades vom typ ||| pdf pcos	count=2
function_name	kind-knoten und markup ||| inner xml	count=1
function_name	zeichens aus char_list ||| strpbrk	count=1
function_name	geöffneten filepro-datenbank ||| filepro rowcount	count=1
namespace	der mit result ||| function	count=1
arg_pair	es für den in ||| mixed $x509cert	count=1
function_name	einen text-block mit ||| fill textblock	count=1
function_name	mit ||| pdf fill	count=2
namespace	auf die sich die ||| function	count=1
function_name	platziert ein bild ||| pdf fit	count=1
function_name	flags für ||| full	count=1
namespace	ist ||| function	count=2
function_name	lokalisiert ||| locate name	count=2
function_name	zeiger auf ||| to	count=1
arg_pair	aktuellen seite eine ||| resource $pdfdoc	count=1
namespace	es für die ||| function	count=1
function_name	mit dem öffentlichen ||| public	count=1
namespace	der gegebenen ergebnismenge ab ||| function	count=1
namespace	von rc4 ||| function	count=1
function_name	allen lokalen schnittstellen ||| create listen	count=1
function_name	zwei großen unterschieden ||| pconnect	count=1
function_name	knoten eines dom ||| dom	count=1
function_name	für eine gegebene ||| imap	count=1
arg_pair	andere zeichen vom anfang ||| string $character_mask	count=1
function_name	large ||| pg lo	count=1
function_name	var_array [function_name] ||| oci bind [function_name]	count=1
function_name	unterschieden ||| msql pconnect	count=2
function_name	einen text-block mit ||| pdf fill textblock	count=2
function_name	öffnet ||| imap open	count=1
namespace	zum kalender der ||| function	count=1
arg_pair	zu übertragendes ||| string $path	count=1
namespace	datensatz mit der übergebenen ||| function	count=2
function_name	des zuletzt getätigten ||| last	count=1
function_name	nächste attribut wenn er ||| move to next	count=1
function_name	ms sql server ||| mssql	count=1
arg_pair	domain ||| string $domain string $codeset	count=1
function_name	enthaltenen einstellungen ||| parse ini file	count=1
arg_pair	eine gewöhnliche datei ||| int $minor	count=1
arg_pair	im [arg_pair] ||| [arg_pair]	count=3
function_name	aufrufende funktion übergeben ||| args	count=1
function_name	auf das ||| move	count=1
namespace	durch die elemente des ||| function	count=1
function_name	repräsentation des schlüssels ||| openssl pkey export to	count=1
function_name	ihre beendigung zu warten ||| pg send prepare	count=1
function_name	platziert ||| fit	count=3
arg_pair	array in eine tabelle ||| resource $connection string $table_name	count=1
arg_pair	den angegebenen ||| resource $imap_stream int $criteria	count=1
function_name	postgresql [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	von assoc_array entsprechen ||| array $assoc_array int $options	count=1
function_name	ausgelöst wurde ||| get line	count=1
function_name	auf ein element ||| move to	count=1
function_name	eigenschaft gesetzt ||| get parser property	count=2
namespace	wird zur löschung vorgemerkt ||| function	count=1
arg_pair	und bcc ||| string $rpath	count=1
namespace	die uhrzeit der ||| function	count=1
namespace	der per referenz übergeben ||| function	count=1
function_name	attribut verweist ||| to next	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] private key [arg_pair_2]	count=1
function	leerraum oder [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	öffnet ein auf ||| resource $pdfdoc	count=1
namespace	das übergebene ||| function	count=1
arg_pair	übergebene zeichenkette ||| object $link_identifier string $text	count=1
function_name	zeiger auf das nächste ||| move to next	count=1
function_name	gesetzt ||| get	count=1
arg_pair	den pararmeter infilename ||| string $infilename	count=1
function_name	aufgeführt sind ||| addcslashes	count=1
function_name	liefert das mysql ||| mysql	count=1
function_name	ergebnis ||| mysql	count=1
function_name	zelle ||| result	count=1
arg_pair	des postfachs mailbox ||| resource $imap_stream string $mailbox	count=1
arg_pair	envelope gegebenen kopfelementen ||| array $envelope	count=1
arg_pair	die schreib-/leseposition ||| int $offset	count=1
arg_pair	data unter verwendung ||| string $sealed_data	count=1
function_name	array() ist auch dies ||| list	count=1
arg_pair	string aus breite und ||| string $filename	count=1
function_name	verschlüsselt ||| pkcs7 encrypt	count=2
namespace	in der alle vorkommen ||| function	count=1
function_name	meldung ||| message	count=1
function	[function_name_1] kommando-tag ||| [function_name_1] status resource $result [arg_pair_2]	count=3
function_name	erste attribut wenn ||| attribute	count=1
namespace	die sich die angegebene ||| function	count=1
arg_pair	die schreib-/leseposition für ||| int $offset	count=1
arg_pair	methode ist missbilligt ||| string $function_name string $arguments	count=1
arg_pair	kommando-tag ||| int $type	count=1
function_name	länge ||| len	count=1
arg_pair	[arg_pair_1] ein postfach ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	queue datenstruktur zu ändern ||| set queue	count=1
function_name	[function_name_1] und spalte ||| [function_name_1] [function_name_2]	count=3
function_name	das produkt von ||| array product	count=1
namespace	die zahl des ||| function	count=2
arg_pair	verschlüsselt data unter ||| string $data	count=1
return	[return] curl_setopt() ||| [return]	count=1
namespace	des ausgabepuffers und ||| function	count=1
function_name	eines dom ||| import dom	count=1
namespace	eine spezielle ||| function	count=1
function_name	löscht eine benannte ||| delete	count=1
function_name	verzerrt ||| pdf skew	count=2
namespace	in der allen ||| function	count=1
arg_pair	field_offset einer ergebnismenge stammt ||| int $field_offset	count=1
return	das ||| bool	count=1
function_name	message [function_name] werden ||| msg get [function_name]	count=1
arg_pair	die funktion [arg_pair_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [arg_pair_1] [arg_pair_2]	count=2
return	rückt [return] internen ||| [return]	count=1
function_name	meldung des ||| message	count=1
namespace	[namespace] schlüsselkennung ||| [namespace]	count=3
arg_pair	start und ||| mixed $start	count=1
namespace	inhalte der ||| function	count=1
arg_pair	content vorkommt ||| string $content	count=1
arg_pair	ausnahme ||| int $hour int $minute	count=1
arg_pair	angegebenen nachricht ||| resource $imap_stream mixed $file	count=1
function_name	repräsentation des schlüssels ||| export to	count=1
namespace	liefert den fehlercode der ||| function	count=1
function_name	sicherheitseinstellungen ||| get security prefs	count=1
namespace	der der aktuelle prozess ||| function	count=1
function_name	[function_name_1] spalte ||| [function_name_1] [function_name_2]	count=3
arg_pair	in envelope ||| array $envelope	count=1
function_name	zuvor benutzten fehlerbehandlung zurückzukehren ||| restore error handler	count=1
function_name	__autoload() () fallback-funktion ||| spl autoload extensions	count=1
function_name	utf-8 ||| utf8	count=3
namespace	durch die ||| function	count=4
arg_pair	und als ||| string $pathname int $mode	count=1
namespace	terminalumgebung auf die ||| function	count=1
function_name	des ||| fbsql field	count=1
arg_pair	übereinstimmungen ||| int $flags	count=1
arg_pair	als ||| array $except int $tv_sec	count=1
function_name	registriert den apacheprozess ||| apache child terminate	count=1
arg_pair	erzeugt eine ||| int $major	count=1
function_name	einen archiveintrag unter ||| index	count=1
namespace	zu denen der angegebene ||| function	count=1
function	[function_name_1] tabelle ||| [arg_pair_2] [function_name_1]	count=1
function_name	zertifikat um ||| openssl x509 checkpurpose	count=1
arg_pair	unescaped_string unter berücksichtigung ||| resource $link_identifier	count=1
namespace	in der allen zeichen ||| function	count=1
namespace	liefert die version der ||| function	count=1
arg_pair	funktion callback iterativ auf ||| array $array callable $callback	count=1
arg_pair	und nanosekunden nanoseconds ||| int $nanoseconds	count=1
function_name	hierarchische und gruppenbeziehungen zwischen ||| dependency	count=1
namespace	prüft dass die mit ||| function	count=1
function_name	heisst der zeitpunkt wann ||| filemtime	count=1
function_name	liefert schema [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	erstellt ein array mit ||| array	count=1
return	sucht nach einer ||| int	count=1
function_name	und verschlüsselt ||| encrypt	count=1
arg_pair	eine ||| resource $pdfdoc string $text	count=1
function_name	aus einer msql ergebnismenge ||| msql result	count=1
function_name	der dokumente ||| udm get doc count	count=1
function_name	listet alle datenbanken ||| msql list dbs	count=2
namespace	die anbindung an das ||| function	count=1
arg_pair	diese ihren status ||| int $tv_sec	count=1
function_name	auf ein element ||| move to next	count=1
function_name	attribut wenn er ||| move to	count=1
function_name	[function_name_1] definiert wurde ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] oder template ||| [function_name_2] [function_name_1]	count=1
arg_pair	eines arrays mittels einer ||| array $array callable $key_compare_func	count=1
function_name	namen des hosts zurück ||| host	count=1
namespace	string [namespace] ||| [namespace]	count=2
arg_pair	funktion openssl_pkcs7_sign() ||| string $extracerts	count=1
arg_pair	oder entfernten server ||| string $database_name resource $link_identifier	count=1
function_name	gibt die letzte fehlermeldung ||| pg last error	count=1
function_name	benutzten ||| get host info	count=2
function_name	angegebenen ||| imap savebody	count=1
arg_pair	[arg_pair] in ||| [arg_pair]	count=3
namespace	server [namespace] angegebenen ||| [namespace]	count=2
arg_pair	eine gewöhnliche ||| int $minor	count=1
return	sortiert ||| bool	count=1
function_name	textausgabe ||| pdf set text pos	count=1
function_name	dbase-datenbank im ||| dbase open	count=1
arg_pair	mit filename übergeben ||| bool $raw_output	count=1
namespace	der inhalt der datei ||| function	count=1
arg_pair	mailbox beenden ||| resource $imap_stream string $mailbox	count=1
function_name	sequenz von elementen des ||| array slice	count=1
namespace	die anbindung an ||| function	count=1
arg_pair	anfang eines ||| string $character_mask	count=1
function_name	bild oder template unter ||| image	count=1
function_name	die letzte ||| last	count=1
namespace	prozess der unter ||| function	count=1
function_name	neues large object ||| pg lo import	count=1
arg_pair	index zurück ||| int $index	count=1
function_name	dem öffentlichen ||| openssl public	count=1
namespace	einen archiveintrag unter verwendung ||| ziparchive	count=1
namespace	funktion ist ||| function	count=1
arg_pair	openssl_seal() verschlüsselt data ||| string $sealed_data	count=1
function_name	eine [function_name] ||| [function_name]	count=1
arg_pair	ob diese ihren ||| array $write	count=1
arg_pair	für ein postfach ||| resource $imap_stream string $mailbox	count=1
arg_pair	nimmt ||| array $read	count=1
arg_pair	einen ||| string $function_name	count=1
function_name	verwendung seines ||| index	count=1
arg_pair	legt den ||| resource $p int $value	count=1
function_name	die unterversionsnummer ||| pdf get minorversion	count=1
function_name	anwendung ||| ext	count=1
arg_pair	aus dem array input ||| array $input	count=1
arg_pair	parst key und ||| mixed $key	count=1
namespace	die seit beginn der ||| function	count=1
arg_pair	datei dekomprimiert sie ||| int $use_include_path	count=1
namespace	dazu benutzt werden könnten ||| function	count=1
function_name	bindung für [function_name_1] [function_name_2] rdn ||| [function_name_2] [function_name_1]	count=2
arg_pair	/status ||| string $status	count=1
function_name	der aktuellen tabelle ||| fbsql table	count=1
function	[function_name_1] key in ||| [function_name_1] [arg_pair_2]	count=2
function_name	einen ||| delete	count=1
function_name	pg_send_query() pg_send_query_params() [function_name] pg_send_execute() ||| [function_name] cancel	count=1
function_name	durchführt ||| archive	count=1
function_name	setzt ||| set	count=4
return	und den ||| string	count=1
arg_pair	gz-datei aus ||| string $string	count=1
arg_pair	datenbank auf dem angegebenen ||| string $database_name	count=1
arg_pair	mittels offset [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	am angebenen offset über ||| resource $context int $offset	count=1
function_name	flags für die ||| full	count=1
function_name	utf-32 ||| pdf utf32	count=1
arg_pair	fest das [arg_pair] optionsliste definiert ||| [arg_pair]	count=1
arg_pair	den gelesenen feldern zurück ||| string $enclosure string $escape	count=1
function_name	nachricht einen string ||| imap	count=1
namespace	dass die ||| function	count=1
function_name	maskiert die ||| escape	count=1
function_name	plural-abfrage zu ||| dcngettext	count=1
return	das nächste attribut ||| bool	count=1
namespace	auf die ||| function	count=4
function_name	repräsentation ||| pkey export to	count=1
return	dies keine wirkliche funktion ||| array	count=1
arg_pair	diese ||| array $read	count=1
function_name	einen gemeinsamen ||| shmop	count=2
arg_pair	einer ||| int $dbase_identifier	count=1
function_name	des feldes nr ||| mssql field	count=2
function_name	dem get_defined_vars() aufgerufen ||| vars	count=1
arg_pair	den namen der postfächer ||| resource $imap_stream	count=1
function_name	fehlgeschlagenen posix-funktion gesetzt wurde ||| posix get last error	count=1
arg_pair	[arg_pair_1] old_mbox ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=3
namespace	beziehung der indexe zu ||| function	count=1
arg_pair	zu einer ||| string $dateiname	count=1
function_name	fdf dokuments fest ||| fdf	count=1
function_name	die ||| function	count=1
function_name	auszuführen ||| pg execute	count=1
function_name	verweist oder aufs ||| next	count=1
function_name	[function_name_1] nr ||| [function_name_2] [function_name_1]	count=2
function_name	er auf ein attribut ||| move to	count=1
arg_pair	array mittels glue zu ||| string $glue array $pieces	count=1
namespace	xx der installationscode ||| function	count=1
function_name	[function_name] möglich ||| [function_name]	count=3
arg_pair	schreib-/leseposition ||| int $offset	count=1
arg_pair	der angegebene schlüssel in ||| string $key	count=1
arg_pair	die zu hostname passen ||| string $hostname	count=1
namespace	der die ||| function	count=3
return	geöffnete ressource ||| bool	count=1
arg_pair	socket_create() oder ||| int $length	count=1
function_name	maskiert die übergebene ||| dbx escape	count=1
function_name	more result ||| more	count=1
function_name	element verweist ||| move to next	count=1
function	site exec-kommando [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	diese funktion ||| resource $imap_stream	count=1
function_name	das mysql ||| mysql	count=1
function_name	ändern ||| select	count=1
function_name	eine ressource ist ||| is resource	count=3
function_name	[function_name_1] eines postgresql ||| [function_name_2] fetch [function_name_1]	count=2
function_name	typ float ||| float	count=1
function_name	werte in ingres zu ||| ingres	count=1
namespace	überprüft ob die ||| function	count=1
function_name	funktion sondern ||| list	count=1
arg_pair	die datei in ||| string $filename bool $use_include_path	count=1
namespace	verzeichnissen verschoben wird ||| function	count=1
return	ein ||| mixed	count=1
return	funktion sondern ||| array	count=1
return	-datei ||| bool	count=1
arg_pair	die schnittmenge von arrays ||| array $array1 array $array2	count=1
function_name	attribut verweist ||| next	count=1
function_name	produkt von werten in ||| product	count=1
arg_pair	vom ftp-server ||| resource $ftp_stream	count=1
function_name	message queue datenstruktur ||| msg set queue	count=1
function_name	felder von ||| fields	count=1
function_name	[function_name_1] mit ||| [function_name_2] [function_name_1]	count=20
arg_pair	den übergebenen parametern ||| resource $connection string $stmtname	count=1
arg_pair	eines arrays mittels einer ||| array $array	count=1
namespace	von nachrichten wird ||| function	count=1
function_name	template ||| image	count=1
function_name	eine binäre guid ||| mssql guid string	count=1
function	grafikzustandsobjekt [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	und setzt [namespace] ||| [namespace]	count=1
arg_pair	diese ihren status ||| array $except int $tv_sec	count=1
function_name	zufälligen eintrags ||| array rand	count=1
function_name	fehlermeldung an ||| error	count=1
namespace	die nicht-ascii zeichen ||| function	count=1
arg_pair	erstellt ||| string $node_name	count=1
namespace	über einen prozess der ||| function	count=1
function_name	liefert ein array welches ||| fetch array	count=1
function_name	anfang des streams ||| gzrewind	count=1
function_name	array() ist auch ||| list	count=1
function	[function_name_1] verschiedener optionen ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=3
arg_pair	einen ||| string $function_name array $arguments	count=1
function_name	des zufälligen eintrags ||| array rand	count=1
arg_pair	diese ihren status ||| array $write	count=1
function_name	und ||| socket	count=1
function_name	versehene repräsentation ||| pkey export to	count=1
function_name	wandelt eine binäre guid ||| guid	count=1
function_name	für ||| openssl pkey	count=1
namespace	die angegebene connection ||| function	count=1
namespace	der pdflib-version ||| function	count=1
function_name	überprüft ein zertifikat um ||| openssl x509	count=1
function_name	oder virtuelles 3d-modell ||| pdf load 3ddata	count=1
function_name	option die ||| set option	count=1
function_name	[function_name_1] ldap ||| [function_name_2] [function_name_1]	count=2
return	liefert alle http-header ||| array	count=1
arg_pair	indizes von assoc_array entsprechen ||| int $options	count=1
function_name	ein curl-handle und gibt ||| curl	count=1
function_name	postgresql servers für ||| pg	count=1
namespace	der der ||| function	count=1
function_name	socket_set_option() wird die option ||| socket set option	count=1
function_name	ein zertifikat um ||| openssl x509	count=1
function	[function_name_1] und ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	zeichenkette haystack ||| string $haystack	count=1
function	ein grafikzustandsobjekt [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	die fehlermeldung eines ||| function	count=1
function_name	physisches ||| pdi document	count=2
namespace	gibt die konvertierte version ||| function	count=1
function_name	erzeugt ||| pdf create	count=2
function_name	sehr klein ist ||| expm1	count=1
function_name	die aufrufende ||| args	count=1
function	[function_name_1] key ||| [function_name_1] [arg_pair_2]	count=2
function_name	den zeiger auf das ||| move to	count=1
arg_pair	ermittelt die länge des ||| int $start int $length	count=1
namespace	fehlercode der ||| function	count=1
namespace	exception zurück ||| exception	count=3
namespace	die gelesenen daten als ||| function	count=1
function_name	der [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	diese funktion liefert ||| resource $imap_stream	count=1
namespace	der zweite ||| function	count=1
function_name	setzt den zeiger ||| to	count=1
arg_pair	legt den linecap ||| resource $p int $linecap	count=1
arg_pair	gibt den ||| resource $result int $index	count=1
namespace	zurück der durch die ||| function	count=1
arg_pair	nummer msg_number ||| resource $imap_stream int $msg_number	count=1
function_name	namen der [function_name_2] ||| string [function_name_2] [function_name_1] resource	count=2
function_name	das elternelement des ||| move to element	count=1
function_name	format utf-32 ||| utf32	count=1
function_name	öffnet ||| pdf open	count=1
arg_pair	und ||| string $str1 string $str2	count=1
function_name	pcos-pfades ||| pdf pcos	count=2
arg_pair	status ändern ||| int $tv_sec	count=1
arg_pair	das postfach mailbox ||| resource $imap_stream string $mailbox	count=1
arg_pair	mit dieser [arg_pair] kann ||| [arg_pair]	count=1
namespace	auf dem server die ||| function	count=1
namespace	der api-funktion die ||| function	count=1
arg_pair	groß- und ||| string $str2	count=1
namespace	wenn ||| xmlreader	count=1
namespace	von zeichensätzen zwischen server ||| function	count=1
function_name	kopiert ||| imap mail copy	count=2
namespace	der angegebenen klasse ||| function	count=1
function_name	feldtyp ||| field type	count=2
namespace	der verbindung verwendet ||| function	count=1
arg_pair	und ||| string $path resource $context	count=1
namespace	der mit result ergebnis-kennung ||| function	count=1
function_name	dio_stat() gibt ||| stat	count=1
function_name	das large object ||| pg lo	count=1
function_name	seite [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	internen datensatz-zeiger eines ||| mysql data seek	count=1
function_name	ein array ||| oci fetch array	count=1
return	einen string der das ||| string	count=1
arg_pair	in eine php-variable ||| int $options	count=1
return	liefert [return] imap alarmbenachrichtigungen ||| [return]	count=1
arg_pair	erstellen ||| bool $recursive resource $context	count=1
function	[function_name_1] key in ||| [arg_pair_2] [function_name_1]	count=2
function_name	query an den ||| ingres unbuffered query	count=1
function_name	einer bestimmten zeile ||| fetch	count=1
namespace	schlüssels der mit der ||| function	count=1
arg_pair	aktuellen seite eine ||| resource $pdfdoc float $llx	count=1
return	erzeugt ||| bool	count=1
arg_pair	domain von gettext() oder ||| string $codeset	count=1
function_name	bindung für [function_name] ||| [function_name]	count=1
function_name	übergebene zertifikat zurück wie ||| openssl x509	count=1
arg_pair	setzt die schreib-/leseposition ||| int $offset	count=1
function	texte von [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	erzeugt eine spezielle oder ||| function	count=1
function_name	wartet ob diese ||| socket	count=1
function_name	den ||| to next	count=1
arg_pair	unserializes a bson ||| string $bson array $typemap	count=1
function	gzip .gz [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	die übergebene zeichenkette so ||| string $text	count=1
function_name	kosinus des winkels ||| cos	count=1
arg_pair	der übergebene hash den ||| string $hash	count=1
arg_pair	setzt den mit einer ||| resource $link_identifier	count=1
arg_pair	den inhalt eines ||| resource $p	count=1
function_name	fehlermeldung die für ||| error	count=1
function_name	für die textausgabe ||| set text pos	count=1
function_name	verwendung seines ||| delete index	count=1
arg_pair	einer variable ||| mixed $var bool $syntax_only	count=1
arg_pair	wartet ob diese ihren ||| int $tv_sec	count=1
arg_pair	gemäß den angegebenen ||| resource $imap_stream	count=1
arg_pair	postgresql ||| string $data	count=1
function_name	verweist oder ||| to	count=1
function_name	typ ||| resource type	count=1
namespace	der angegebenen verbindungkennung ||| function	count=1
namespace	zu mktime() mit der ||| function	count=1
function_name	löscht das large object ||| pg lo	count=1
function_name	msql ergebnismenge die mit ||| msql data	count=1
function_name	interface ||| interface	count=1
namespace	der ||| function	count=235
arg_pair	base oder kurz base ||| number $base number $exp	count=1
function_name	zeiger auf ||| move to	count=1
function_name	private schlüssel ||| private key	count=2
namespace	wird zum senden von ||| function	count=1
function_name	tabelle [function_name_2] ||| [function_name_2] field [function_name_1]	count=1
function_name	vom format utf-32 ||| pdf utf32	count=1
function_name	attribut wenn ||| move to	count=1
arg_pair	überprüft welche ||| int $mode	count=1
return	in klartext ||| string	count=1
namespace	der das skript ausgeführt ||| function	count=1
namespace	des durch die ||| function	count=1
function_name	imap ||| imap reopen	count=2
function_name	[function_name_1] den ||| readline callback [function_name_2] [function_name_1]	count=1
arg_pair	parameter ein gmt-datum repräsentieren ||| int $is_dst	count=1
namespace	fehlernummer und die fehlermeldung ||| function	count=1
function_name	dateizeiger bezeichnete bzip2-datei ||| bzclose	count=1
namespace	beachtung von ||| function	count=1
arg_pair	suchtext [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
return	gibt informationen über ||| array	count=2
function_name	setzt den zeiger auf ||| move to	count=1
arg_pair	calendar ||| int $calendar	count=1
function_name	die sicherheitseinstellungen ||| security prefs	count=1
arg_pair	den gegebenen plaintext mit ||| string $plaintext	count=1
arg_pair	format in eine ||| string $format mixed $args	count=1
return	den ||| string	count=6
arg_pair	groß- und ||| string $str1 string $str2	count=1
function_name	kind ||| pcntl wtermsig	count=2
arg_pair	zu einer sqlite3-datenbank ||| string $dateiname int $schalter	count=1
arg_pair	an den ||| resource $statement	count=1
arg_pair	und wartet ||| array $write	count=1
function_name	separaten callbackfunktionen ||| uintersect uassoc	count=1
return	funktion dekomprimiert eine zeichenkette ||| string	count=1
arg_pair	dem parameter dn ||| array $dn resource $privkey	count=1
function_name	hinzu ||| pdf add	count=1
namespace	dem process der ||| function	count=1
arg_pair	postfachs mailbox beenden ||| resource $imap_stream string $mailbox	count=1
function_name	erste ||| move to	count=1
function_name	dass das ergebnis ||| mysql	count=1
arg_pair	start und optional length ||| mixed $length	count=1
arg_pair	den ftp-server ||| resource $ftp_stream	count=2
arg_pair	in julianday übergebenen tag ||| int $mode	count=1
function_name	letzten soap-anfrage gesendete xml ||| get last request	count=1
function_name	gibt [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	dass das kind beendet ||| pcntl wtermsig	count=1
function_name	grafikzustandsobjekt unter ||| gstate	count=1
namespace	französischen revolutionskalenders zu ||| function	count=1
function_name	large objects und gibt ||| pg lo	count=1
function_name	oracle-platzhalter ||| array by	count=1
function_name	eine abfrage aus ||| fbsql db query	count=1
function_name	wert des /encoding ||| encoding	count=1
arg_pair	des modulo modulus ||| int $scale	count=1
function_name	archiveintrag ||| delete index	count=2
arg_pair	ausnahme dass ||| int $minute	count=1
return	ob ||| bool	count=17
arg_pair	skaliert ||| resource $p float $sx	count=1
function_name	importiert ein ||| import	count=1
function_name	eine spezielle oder ||| posix	count=1
function_name	werten ||| update	count=1
function_name	gid des aktuellen prozesses ||| setgid	count=1
arg_pair	übergebene zeichenkette so dass ||| object $link_identifier string $text	count=1
function_name	sendet eine fehlermeldung an ||| error	count=1
namespace	libmcrypt 2.2.x der ||| function	count=1
function_name	element verweist ||| to	count=1
function_name	namen des ||| field name	count=1
function_name	[function_name_1] anwendung ||| [function_name_2] [function_name_1]	count=1
arg_pair	ein strukturelement oder einen ||| int $id	count=1
function_name	[function_name_1] schlüssel ||| [function_name_2] [function_name_1]	count=1
arg_pair	werten mittels einer ||| array $array	count=1
function_name	extension definierten funktionen zurück ||| get extension funcs	count=1
function_name	für ein sql-kommando ||| pg convert	count=1
namespace	zeiger ||| xmlreader	count=1
function_name	gzip .gz ||| gzopen	count=1
namespace	wobei die ||| function	count=1
arg_pair	calendar ||| int $calendar int $month	count=1
function_name	[function_name_1] stattdessen zurückgeliefert ||| [function_name_2] [function_name_1]	count=2
namespace	schreib-/leseposition der ||| function	count=1
return	durch ||| bool	count=2
function_name	nr ||| mssql	count=1
namespace	funktion wird ||| function	count=1
function_name	[function_name_1] falls ||| [function_name_2] field [function_name_1]	count=4
arg_pair	dn angegeben werden ||| array $dn	count=1
arg_pair	diese ihren status ||| array $read	count=1
function_name	letzte insert update oder ||| affected rows	count=1
function	guid [arg_pair_2] ||| [function_name_1] string $binary [arg_pair_2]	count=1
function_name	löscht ||| delete index	count=2
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| to	count=1
function_name	anzahl der datensätze zeilen ||| numrecords	count=1
namespace	prozessen arbeitet die von ||| function	count=1
arg_pair	domain für eine einzelne ||| string $domain	count=1
function	öffnet [arg_pair_2] ||| [function_name_1] pdi resource $pdfdoc [arg_pair_2]	count=1
namespace	konvertiert die in ||| function	count=1
arg_pair	funktion ||| string $string int $flags	count=1
namespace	der abbruch einer ||| function	count=1
namespace	der aktuellen locale-einstellung ist ||| function	count=1
function_name	nächste attribut wenn er ||| to next	count=1
function_name	das nächste ||| move to	count=1
namespace	bindet die ||| function	count=1
function_name	ein array ist ||| is array	count=2
function_name	die weitere abarbeitung ||| ignore user abort	count=1
function_name	ermittelt den [function_name] ||| fbsql table [function_name]	count=2
arg_pair	domain für ||| string $msgid1	count=2
return	[return] der option ||| [return]	count=2
function_name	eine fehlermeldung an das ||| error log	count=1
function_name	bezeichneten postgresql abfrageergebnis ||| pg field num	count=1
function_name	und beendet die möglichkeit ||| oci cancel	count=1
function_name	die option ||| set option	count=1
namespace	ein ||| function	count=2
function_name	teil ||| strstr	count=1
function_name	tabelle falls ||| pg field table	count=1
arg_pair	mit image angegebenen ||| resource $image int $font	count=1
arg_pair	methode ||| string $function_name	count=1
function_name	ein attribut ||| move to next	count=1
return	nur aufrufen wenn sie ||| bool	count=1
arg_pair	letzte vorkommen ||| string $needle	count=1
function_name	zeiger ||| move to next	count=1
arg_pair	in charlist ||| string $charlist	count=1
return	gegebene anzahl ||| mixed	count=1
arg_pair	eines angegebenen trennzeichens um ||| bool $cut	count=1
namespace	an [namespace] aktuellen position ||| [namespace]	count=1
namespace	der im ||| function	count=2
function_name	[function_name] enthält ||| mysql [function_name]	count=1
arg_pair	aus ||| int $start	count=1
function_name	genauigkeit ||| precision	count=1
function_name	strichmuster des randes ||| dash	count=1
function_name	neue ||| fseek	count=1
return	oder ||| bool	count=2
arg_pair	vergleich groß- und ||| string $str1 string $str2	count=1
arg_pair	datei zum lesen oder ||| string $filename string $mode	count=1
function_name	oder ||| posix	count=1
function_name	[function_name_1] abfrageergebnis ||| [function_name_1] field [function_name_2]	count=2
function_name	ist auch ||| list	count=1
arg_pair	handle und ||| resource $handle	count=1
arg_pair	gibt den unix-timestamp entsprechend ||| int $hour int $minute	count=1
function_name	beendet die möglichkeit ||| oci cancel	count=1
function_name	nimmt ||| select	count=1
function_name	stelle des aktuellen ||| pdf	count=1
namespace	den inhalt der datei ||| function	count=1
return	zum öffnen eines ||| int	count=1
function_name	eines pcos-pfades vom ||| pdf pcos get	count=2
arg_pair	einem ergebnis result ||| int $i	count=1
namespace	zählt die ||| function	count=1
function_name	array zurück welches ||| key	count=1
function_name	bestimmten zeile und spalte ||| fetch result	count=1
function_name	x durch den divisor ||| fmod	count=1
function_name	exec-kommando ||| ftp exec	count=1
function_name	feldes zurück ||| field	count=1
namespace	die fehlermeldung eines beliebigen ||| function	count=1
function_name	ein neues v8js -objekt ||| construct	count=1
namespace	die funktionen imap_delete() imap_mail_move() ||| function	count=1
function_name	aus einer msql ||| msql result	count=1
function_name	die möglichkeit ||| cancel	count=1
namespace	von string ||| function	count=1
function_name	lokalen schnittstellen ||| create listen	count=1
arg_pair	die funktion ||| array $array	count=1
function_name	beliebiges kommando ||| ftp raw	count=1
namespace	für die ||| function	count=5
function_name	one or [function_name] sets are ||| maxdb [function_name]	count=1
function_name	uid [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	zu einem mysql ||| mysql	count=1
function_name	er auf ein element ||| move	count=1
arg_pair	eine png -datei aus ||| int $filters	count=1
arg_pair	öffnet filename und untersucht ||| string $filename	count=1
function_name	einen pdf-block mit ||| fill pdfblock	count=1
function_name	[function_name_1] status ||| [function_name_1] [function_name_2]	count=3
function_name	angeforderten ||| get	count=1
return	nötigen ||| void	count=1
namespace	und setzt [namespace] ursprungswerte ||| [namespace]	count=1
namespace	[namespace] unix-epoche ||| [namespace]	count=3
arg_pair	ermittelt den inhalt ||| resource $p	count=1
namespace	strings erfolgt nach der ||| function	count=1
arg_pair	hängt die angegebenen daten ||| array $record	count=1
namespace	auf das ||| xmlreader	count=1
arg_pair	parst key und ||| mixed $key string $passphrase	count=1
arg_pair	low-level-api-funktion um ||| array $options mixed $input_headers	count=1
function_name	neue ||| begin	count=1
arg_pair	len bytes von name ||| int $flags	count=1
function_name	mit dem parameter csr ||| openssl csr	count=2
function_name	gid des aktuellen ||| setgid	count=1
arg_pair	in replacement ||| mixed $string mixed $replacement	count=1
function	[function_name_1] ph_name ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	erzeugt eine ||| resource $pdfdoc	count=1
arg_pair	einer variable als ||| mixed $var bool $syntax_only	count=1
return	geöffnete ||| bool	count=1
arg_pair	domain von gettext() ||| string $domain	count=1
return	den inhalt des aktuellen ||| string	count=1
function_name	an allen lokalen schnittstellen ||| socket create listen	count=1
function_name	ob die eigenschaft ||| property	count=1
arg_pair	directory vom ftp-server ||| string $directory	count=1
function_name	ihren status ändern ||| socket	count=1
function_name	zugriffsberechtigungen ||| access	count=1
arg_pair	in message übergebene string ||| string $message	count=1
namespace	von einem resulthandle das ||| function	count=1
namespace	mit der funktion ||| function	count=1
arg_pair	str das zur ||| string $delimiter	count=1
arg_pair	offset ||| array $array int $offset	count=1
function_name	[function_name_1] namen ||| [function_name_1] [function_name_2]	count=1
arg_pair	vom anfang ||| string $character_mask	count=1
namespace	erzeugt eine spezielle ||| function	count=1
namespace	der engine ||| function	count=1
namespace	service wird anhand der ||| function	count=1
function_name	die ||| extension	count=1
function_name	der msql ergebnismenge die ||| msql	count=1
function_name	ob ||| socket	count=1
arg_pair	seines index ||| int $index	count=1
function_name	einer msql ||| msql	count=1
function_name	wartet ||| socket select	count=2
function_name	unter verwendung seines ||| delete	count=1
namespace	ausgehend [namespace] ||| [namespace]	count=1
function_name	aufrufenden funktion übergebenen argumente ||| func get args	count=1
return	den gebrauch ||| resource	count=1
arg_pair	dem parameter dn angegeben ||| resource $privkey	count=1
function_name	ldap ||| ldap	count=1
function_name	[function_name_1] spalte eines ||| [function_name_2] [function_name_1]	count=3
function_name	wenn er ||| move to	count=1
arg_pair	inhalt einer variable als ||| bool $syntax_only	count=1
arg_pair	groß- und kleinschreibung berücksichtigt ||| string $str1	count=1
arg_pair	zeichen von str ||| string $str string $delimiter	count=1
function_name	[function_name_1] namen vom ||| [function_name_2] [function_name_1]	count=1
namespace	wert von array und ||| function	count=1
function_name	flags für die ||| clearflag full	count=1
function_name	zur basis ||| log	count=1
function_name	einstellungen ||| parse ini file	count=1
namespace	der ergebnisse ||| function	count=1
namespace	prozess pid der ||| function	count=1
arg_pair	breite und ||| string $filename	count=1
function_name	wörter in ||| str word	count=1
function_name	inhalt ||| parameter	count=1
arg_pair	parameter dn angegeben ||| array $dn	count=1
namespace	aufruf dieser methode ||| soapclient	count=1
arg_pair	diese funktion ist das ||| string $string int $flags	count=1
arg_pair	in eine ||| int $flags resource $context	count=1
arg_pair	message übergebene string wird ||| string $message	count=1
namespace	wert von ||| function	count=1
function_name	an den oracle-platzhalter ||| by	count=1
namespace	das koordinatensystem in ||| function	count=1
function_name	platziert ein bild ||| fit	count=1
namespace	einen archiveintrag unter ||| ziparchive	count=1
namespace	des ||| xmlreader	count=1
function_name	das ||| to next	count=1
function_name	textflussobjekt oder ||| textflow	count=1
arg_pair	die in charlist ||| string $str string $charlist	count=1
function_name	den speicher frei ||| mysql free	count=1
return	kopfelementen und den nachrichtenteilen ||| string	count=1
return	archiveintrag ||| bool	count=1
function_name	schreibt aus dem puffer ||| socket write	count=1
function_name	auf ||| move	count=3
function_name	physisches oder virtuelles ||| pdi document	count=1
function_name	liste der definierten ||| function	count=1
arg_pair	seinen werten mittels einer ||| callable $value_compare_func	count=1
return	in ||| string	count=4
function_name	öffnet ein physisches oder ||| open pdi document	count=1
function_name	mysql protokoll ||| mysql get proto info	count=1
arg_pair	benannte virtuelle datei ||| string $filename	count=1
function_name	wurde ||| proc get	count=1
function_name	momentanen [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	der durch einen aufruf ||| function	count=1
function_name	erhält informationen über ||| stat name	count=1
function_name	unterschiede zurück ||| diff	count=2
return	aus ||| string	count=1
namespace	und ende von ||| function	count=1
arg_pair	angegebenen ||| resource $imap_stream	count=2
function_name	flags ||| imap setflag full	count=1
namespace	variablen die ||| function	count=1
rest	öffnet eine [function_2] ||| [function_2] [return_1]	count=5
function_name	das elternelement des aktuellen ||| move to element	count=1
function_name	ergebnisse zu warten ||| pg send	count=1
function_name	pdf-block mit ||| pdf fill pdfblock	count=2
namespace	der binären zahl aus ||| function	count=1
return	den ||| mixed	count=1
namespace	man über die ||| function	count=1
function_name	und verschlüsselt ||| openssl pkcs7 encrypt	count=1
arg_pair	socket socket len bytes ||| int $flags	count=1
function_name	und wartet ob diese ||| socket select	count=1
return	in bytes ||| int	count=1
namespace	[namespace] optionale zweite ||| [namespace]	count=2
namespace	der die um ||| function	count=1
arg_pair	mittels offset und ||| array $array int $offset	count=1
function_name	ein zertifikat um festzustellen ||| openssl x509	count=1
arg_pair	image ||| int $font	count=1
namespace	die header ||| function	count=1
namespace	oder neu erstellte archiv ||| ziparchive	count=1
arg_pair	variable als funktion ||| mixed $var bool $syntax_only	count=1
namespace	aufs erste ||| xmlreader	count=1
function_name	der nachricht ||| imap	count=1
arg_pair	status ||| array $read array $write	count=1
function_name	teils ||| imap bodystruct	count=1
function_name	hostnamen ||| fbsql hostname	count=1
function_name	neue position ||| fseek	count=1
function_name	[function_name_1] template unter ||| [function_name_1] [function_name_2]	count=1
namespace	nummer der spalte ||| function	count=1
arg_pair	wartet ob ||| array $read array $write	count=1
arg_pair	in eine ||| int $depth	count=1
function_name	namen des hosts zurück ||| pg host	count=1
arg_pair	funktion system() [arg_pair] ||| [arg_pair]	count=3
function_name	die zugriffsrechte der spezifierten ||| ftp chmod	count=1
function_name	darin enthaltenen einstellungen ||| parse ini file	count=1
function_name	gibt den speicher frei ||| free	count=1
arg_pair	envelope ||| array $envelope	count=1
function_name	er ||| move to next	count=2
return	öffnet eine verbindung zu ||| resource	count=1
arg_pair	ein postfach ||| resource $imap_stream string $mailbox	count=1
function_name	zur nutzung ||| openssl pkey get private	count=1
arg_pair	den angegebenen eintrag ||| resource $handle	count=1
arg_pair	den wert ||| resource $p string $key	count=1
arg_pair	missbilligt ||| string $arguments	count=1
function_name	erzeugt ein [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	verweist oder aufs erste ||| bool	count=1
namespace	der benutzer für eine ||| function	count=1
arg_pair	datei in einem string ||| bool $use_include_path	count=1
arg_pair	in ||| string $extension_name	count=1
function_name	informationen ||| info	count=1
arg_pair	gegebenen key ||| int $key	count=1
function_name	ermittelt den [function_name_1] [function_name_2] in ||| string [function_name_2] [function_name_1] resource	count=3
namespace	der ergebniskennung verknüpft ||| function	count=1
arg_pair	status ändern ||| array $read	count=1
function_name	client für bestimmte zeichensätze ||| client	count=1
namespace	der verbindung ||| function	count=2
arg_pair	in calendar ||| int $calendar int $month	count=1
arg_pair	server ||| string $database_name resource $link_identifier	count=1
namespace	die in der ||| function	count=2
function_name	eine persistente verbindung ||| pconnect	count=1
function_name	verweist oder aufs erste ||| to next	count=1
arg_pair	[arg_pair_1] postfachs old_mbox ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	eine spezielle ||| posix	count=1
function	abonnement des [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	die zeichenkette ||| function	count=1
namespace	übergebenen serialisierten daten der ||| function	count=1
function_name	bindet die php-variable ||| bind array	count=1
arg_pair	eine spezielle oder ||| int $major	count=1
function_name	er ||| move	count=2
function_name	im gregorianischen ||| gregoriantojd	count=1
function_name	beendet ||| curl close	count=1
arg_pair	zeichenkette subject nach ||| mixed $subject	count=1
function_name	attribut wenn er auf ||| to next attribute	count=1
arg_pair	ein mit den http ||| string $domain	count=1
arg_pair	vergleich groß- und ||| string $str1	count=1
return	wirkliche funktion ||| array	count=1
namespace	entweder mit der ||| function	count=1
arg_pair	funktion openssl_pkcs7_sign() ||| int $flags	count=1
function_name	löscht einen archiveintrag ||| delete index	count=1
arg_pair	nächsten ergebniszeile übereinstimmt ||| resource $statement int $mode	count=1
arg_pair	den mit einer ||| resource $link_identifier	count=1
namespace	methode ||| soapclient	count=1
function_name	fehlercode beschreibt ||| strerror	count=1
function_name	[function_name_1] zu warten ||| [function_name_2] [function_name_1]	count=2
arg_pair	section angebenen teil ||| string $section int $options	count=1
function_name	gibt ||| ingres	count=2
function	[function_name_1] an den ||| [function_name_1] by name [arg_pair_2]	count=1
arg_pair	server ohne auf ||| resource $connection string $query	count=1
arg_pair	strukturelement oder einen ||| int $id	count=1
arg_pair	ermittelt die länge ||| int $start int $length	count=1
function_name	den [function_name] ||| [function_name]	count=3
function_name	aufs erste attribut wenn ||| to next attribute	count=1
function_name	er auf ||| move to next	count=2
function_name	die textausgabe ||| pdf set text pos	count=1
arg_pair	datei ||| string $filename	count=4
arg_pair	len bytes ||| int $len int $flags	count=2
function_name	ob diese ihren ||| socket select	count=1
arg_pair	datei fest welche ||| string $file	count=1
function_name	string vom format utf-32 ||| pdf utf32	count=1
function_name	bytes [function_name] ||| pg [function_name]	count=1
function_name	ein attribut verweist oder ||| next	count=1
return	über ||| array	count=2
arg_pair	unescaped_string unter ||| resource $link_identifier	count=1
namespace	sie sich über zu ||| function	count=1
namespace	schaltet die ||| function	count=1
namespace	dies ||| function	count=1
arg_pair	datei in einem ||| string $filename	count=1
function_name	von einer mysql ||| mysql	count=1
return	auf das nächste ||| bool	count=1
function_name	die option die mit ||| set option	count=1
function_name	internen datensatz-zeiger ||| fbsql data seek	count=1
arg_pair	informationen zu den ||| resource $imap_stream	count=1
namespace	die funktionen imap_delete() ||| function	count=1
function_name	nimmt ||| socket select	count=2
function_name	aus welcher das feld ||| field	count=1
function	maskiert die [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $hebrew_text [arg_pair_2]	count=1
arg_pair	die funktion openssl_pkcs7_sign() ||| int $flags string $extracerts	count=1
arg_pair	parameter dn ||| array $dn resource $privkey	count=1
function_name	datensatz ||| record	count=2
function_name	wandelt eine binäre guid ||| mssql guid string	count=1
function_name	position für die textausgabe ||| pdf set text pos	count=1
function_name	eine ||| curl setopt	count=1
function_name	ein boolean ist ||| is bool	count=1
function_name	nächste attribut wenn ||| move to	count=1
function_name	archiveintrag unter ||| delete index	count=1
return	ähnlich zur funktion ||| string	count=1
return	sendet ein ||| array	count=1
namespace	die gegenwärtig registriert ||| function	count=1
arg_pair	rechteckigen bereich ||| float $urx float $ury	count=1
function_name	an allen lokalen schnittstellen ||| create listen	count=1
function_name	ergebnismenge ||| ingres	count=1
arg_pair	bereitet den [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
namespace	sich die angegebene ||| function	count=1
function_name	methode ||| call	count=1
function_name	liefert den vollständigen text ||| last	count=1
arg_pair	unter verwendung eines font ||| int $font	count=1
arg_pair	offset ||| int $offset	count=2
namespace	er auf ein attribut ||| xmlreader	count=1
arg_pair	benennt einen durch seinen ||| string $newname	count=1
arg_pair	konvertiert einen ||| string $string int $split_length	count=1
arg_pair	von assoc_array entsprechen und ||| array $assoc_array int $options	count=1
return	funktion bestimmt ob ||| bool	count=1
function_name	den zeiger auf ||| move to	count=1
arg_pair	als ||| array $write	count=1
arg_pair	ohne auf ||| resource $connection	count=1
arg_pair	text zur ||| string $text	count=1
function_name	löscht ||| pdf delete	count=1
arg_pair	ein neues soapvar -objekt ||| string $node_namespace	count=1
namespace	neu erstellte archiv ||| ziparchive	count=1
namespace	werden könnten um einen ||| function	count=1
namespace	aktuelle auslastung der ||| function	count=1
arg_pair	und gibt bei erfolg ||| resource $connection	count=1
function_name	eines feldes in einer ||| field	count=1
arg_pair	variable als funktion ||| mixed $var	count=1
function_name	den kommentar zu ||| get comment name	count=1
namespace	attribut verweist oder ||| xmlreader	count=1
return	und den nachrichtenteilen aus ||| string	count=1
arg_pair	file_get_contents() die datei in ||| string $filename bool $use_include_path	count=1
arg_pair	seines index ||| int $length	count=1
function_name	ein rechteck ||| pdf rect	count=1
function_name	gibt den ||| string	count=1
function_name	zufälligen eintrags bzw ||| rand	count=1
return	zur funktion ||| string	count=1
function_name	[function_name_1] ein zeichen ||| [function_name_1] [function_name_2]	count=1
return	gegebene anzahl sekunden ||| mixed	count=1
return	und wartet ob diese ||| int	count=1
return	archiveintrag unter verwendung seines ||| bool	count=1
function_name	vorhandene nul-bytes sowie html ||| fgetss	count=1
function_name	liefert die nächste zeile ||| fetch	count=1
function	unter anwendung [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
return	dokumentinfofeld ||| bool	count=1
function_name	datenbank den ||| dbase	count=1
arg_pair	envelope gegebenen ||| array $envelope	count=1
return	den zeiger auf das ||| bool	count=1
function_name	hinzu ||| bbcode add	count=1
function_name	[function_name_1] existiert ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] physisches ||| [function_name_2] [function_name_1]	count=1
return	setzt ||| bool	count=4
namespace	datensatzzeiger auf [namespace] in ||| [namespace]	count=1
arg_pair	[arg_pair] system v ||| [arg_pair]	count=2
function_name	den schlüssel des zufälligen ||| rand	count=1
function_name	die letzte insert update ||| affected rows	count=1
function_name	aktuelle symboltabelle ||| extract	count=1
function	oracle-platzhalter [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	im parameter certs ||| mixed $pkcs12 array $certs	count=1
arg_pair	eines ||| mixed $recipcerts array $headers	count=1
function_name	leer ist zurück ||| reset	count=1
namespace	archiveintrag unter verwendung seines ||| ziparchive	count=1
namespace	zu der ||| function	count=7
function_name	auf ein element verweist ||| next	count=1
function_name	wert eines pcos-pfades vom ||| pdf pcos get	count=1
function	dbx_query() [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	die von jeder zeichenkette ||| function	count=1
namespace	werden ||| function	count=7
function_name	unterversionsnummer ||| pdf get minorversion	count=1
function_name	namen ||| name	count=7
function_name	ein rechteck ||| rect	count=1
namespace	sich die ||| function	count=1
function_name	beachten sie ||| strcoll	count=1
namespace	array() ||| function	count=1
arg_pair	von str das zur ||| string $delimiter	count=1
arg_pair	diese ||| string $filename	count=1
function_name	object identifier der tabelle ||| table	count=1
return	archiveintrag unter verwendung ||| bool	count=1
function_name	attribut ||| move	count=2
function_name	vom typ af_unix ist) ||| recvfrom	count=1
function_name	einen backslash vor jedes ||| preg quote	count=1
arg_pair	arrays mit ||| array $array1	count=2
arg_pair	font ||| float $fontsize	count=1
namespace	gibt die zahl des ||| function	count=2
arg_pair	ermittelt den ||| resource $pdfdoc long $doc	count=2
arg_pair	und gibt bei ||| string $encoding	count=1
function_name	für die ausgaben des ||| set	count=1
function_name	platziert ein bild oder ||| pdf fit	count=1
arg_pair	verbindung zu einer ||| string $dateiname	count=1
namespace	der vom ||| function	count=1
arg_pair	funktion ||| resource $imap_stream	count=1
function_name	ein ||| to	count=2
function_name	zusammenhang zwischen den indizes ||| arsort	count=1
return	attribut verweist oder aufs ||| bool	count=1
return	dekomprimiert eine zeichenkette ||| string	count=1
function_name	als gelöscht ||| delete	count=1
function_name	das nächste attribut ||| move	count=1
function	[function_name_1] eine ||| [function_name_1] textline [arg_pair_2]	count=1
namespace	server [namespace] angegebenen verbindung ||| [namespace]	count=1
arg_pair	key in ||| mixed $key	count=1
function_name	protokoll ||| get proto info	count=2
namespace	variablen die in ||| function	count=1
namespace	asynchrone abfrage [namespace] pg_send_query() ||| [namespace]	count=1
function_name	verkürzt die ||| ftruncate	count=1
arg_pair	die übergebene zeichenkette so ||| object $link_identifier	count=1
function_name	soap-anfrage über http ||| do request	count=1
function_name	ergebnis verknüpfte [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ein ||| soap	count=1
function_name	pem-kodiert versehene repräsentation ||| to file	count=1
function_name	[function_name_1] virtuelles pdf ||| [function_name_2] [function_name_1]	count=4
namespace	[namespace] script ||| [namespace]	count=1
function_name	erweiterung die ||| extension	count=1
arg_pair	postfach mailbox ||| resource $imap_stream string $mailbox	count=1
function_name	in dem get_defined_vars() aufgerufen ||| vars	count=1
arg_pair	das in month day ||| int $month int $day	count=2
arg_pair	image ||| resource $image bool $dither	count=1
arg_pair	ändern ||| array $read	count=1
arg_pair	fügt eine ||| resource $pdfdoc	count=1
function_name	pg_send_query_params() [function_name] pg_send_execute() an ||| [function_name] cancel	count=1
namespace	dieser methode ist ||| soapclient	count=1
namespace	der division des dividenden ||| function	count=1
arg_pair	verbindung zum postfach mailbox ||| string $username	count=1
arg_pair	den gelesenen feldern zurück ||| string $escape	count=1
return	[return] länge eines ||| [return]	count=1
function_name	den übergebenen optionen abgegeben ||| needs rehash	count=1
function_name	namen bestimmten eintrag um ||| rename name	count=1
function_name	get_defined_vars() aufgerufen wird zurück ||| vars	count=1
function_name	[function_name_1] status ||| [function_name_2] [function_name_1]	count=3
namespace	[namespace] oracle ||| [namespace]	count=3
function_name	[function_name_1] unter anwendung ||| [function_name_2] [function_name_1]	count=1
namespace	beginn der ||| function	count=1
namespace	query der ||| function	count=1
namespace	der die um alle ||| function	count=1
function_name	nach utf-16 ||| to utf16	count=1
arg_pair	in julianday ||| int $julianday	count=1
namespace	der übergebenen zeilennummer ||| function	count=1
namespace	festgelegten zeichen begrenzt wird ||| function	count=1
function_name	eine soap-anfrage ||| do request	count=1
function_name	tty namen zurück wohin ||| pg tty	count=1
namespace	position der ||| function	count=1
function_name	nächste zeile ||| oci fetch	count=1
arg_pair	eine datei von ||| string $filename	count=1
return	zeichenkette haystack ab ||| string	count=1
arg_pair	zur späteren verwendung vor ||| string $optlist int $len	count=1
namespace	den text [namespace] ||| [namespace]	count=3
arg_pair	datei ||| string $filename string $mode	count=1
arg_pair	von assoc_array entsprechen ||| int $options	count=1
function_name	entfernt [function_name_2] ||| readline callback [function_name_2] [function_name_1]	count=1
arg_pair	datei in ||| bool $use_include_path	count=1
function_name	ein zertifikat um festzustellen ||| openssl x509 checkpurpose	count=1
function_name	den speicher frei ||| mysql free result	count=1
arg_pair	zeichenkodierung ||| resource $pdfdoc string $encoding	count=1
namespace	konvertiert die ||| function	count=2
arg_pair	groß- und kleinschreibung berücksichtigt ||| string $str2	count=1
function_name	des aktuellen ||| pdf	count=1
function_name	attribut verweist oder aufs ||| move to	count=1
function_name	ein kleinbuchstabe im sinne ||| lower	count=1
function_name	large objects und ||| pg lo	count=1
function_name	gregorianischen ||| gregoriantojd	count=1
return	auf einer ||| int	count=1
return	auf ein attribut ||| bool	count=1
return	zurück die ||| bool	count=1
function_name	repräsentation des schlüssels ||| pkey export to	count=1
function_name	[function_name_1] nach utf-16 ||| [function_name_1] [function_name_2]	count=4
arg_pair	ingres-datenbank database ||| string $username	count=1
function_name	dbase-datenbank im angegebenen zugriffsmodus ||| dbase open	count=1
function_name	wird die option die ||| option	count=1
namespace	nimmt als ||| function	count=1
namespace	letzten query der ||| function	count=1
arg_pair	filename und untersucht ||| string $filename bool $use_include_path	count=1
function_name	eine persistente [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	funktionsaufruf gesetzt ||| errno	count=1
function_name	versehene repräsentation des schlüssels ||| openssl pkey export to	count=1
function_name	er auf ein ||| next	count=2
arg_pair	die schnittmenge von arrays ||| array $array2	count=1
arg_pair	richtung um alpha bzw ||| resource $p float $alpha	count=1
arg_pair	übereinstimmungen mit ||| array $matches int $flags	count=1
namespace	gibt die namen ||| function	count=1
function_name	anzahl der [function_name] einem ||| pg num [function_name]	count=2
return	wirkliche ||| array	count=1
arg_pair	zeichenkette so ||| object $link_identifier string $text	count=1
function_name	der [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	mit filename ||| bool $raw_output	count=1
function_name	gregorianischen kalender in ||| gregoriantojd	count=1
function_name	einen archiveintrag unter ||| delete index	count=1
namespace	liest die variable mit ||| function	count=1
arg_pair	command an den ftp-server ||| resource $ftp_stream string $command	count=2
arg_pair	indizes von assoc_array entsprechen ||| array $assoc_array	count=1
namespace	unter beachtung von ||| function	count=1
namespace	der richtigen behandlung ||| function	count=1
arg_pair	neues soapvar -objekt ||| string $node_name string $node_namespace	count=1
return	argumente als array ||| array	count=1
function	[function_name_1] nachricht ||| [arg_pair_2] [function_name_1]	count=1
namespace	der die form der ||| function	count=1
function_name	gibt das produkt ||| product	count=1
namespace	die nummer der spalte ||| function	count=1
function_name	übergebenen optionen abgegeben ||| needs rehash	count=1
arg_pair	zur angegebenen verbindungskennung link_identifier ||| resource $link_identifier	count=1
namespace	der erste und einzige ||| function	count=1
function	[function_name_1] mailbox ||| [arg_pair_2] [function_name_1]	count=1
return	als assoziatives array zurück ||| array	count=1
function_name	letzten soap-anfrage gesendete ||| get last request	count=1
namespace	der datenbank ||| function	count=6
arg_pair	mit den [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	plural-textsuche zu überschreiben ||| dngettext	count=1
return	zeiger auf das ||| bool	count=1
function_name	im gregorianischen kalender ||| gregoriantojd	count=1
namespace	die mit pg_send_query() pg_send_query_params() ||| function	count=1
namespace	klartext für die ||| function	count=1
return	eine ressource ||| resource	count=1
namespace	zum ende von ||| function	count=1
arg_pair	nanosekunden nanoseconds ||| int $seconds int $nanoseconds	count=1
namespace	asynchrone abfrage [namespace] pg_send_query() pg_send_query_params() ||| [namespace]	count=1
function_name	datenbank den angegebenen ||| dbase	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $binary [arg_pair_2]	count=4
namespace	begrenzt wird ||| function	count=1
arg_pair	transformationen mittels xsltprocessor ||| string $namespace string $name	count=1
namespace	die nachrichtennummer ||| function	count=1
namespace	nachrichten wird zur ||| function	count=1
function_name	gibt ausführliche informationen zur ||| mysql info	count=1
arg_pair	zeichen die in charlist ||| string $charlist	count=1
namespace	feldes zurück dass der ||| function	count=1
function_name	inhalt des ausgabepuffers sofern ||| ob	count=1
function_name	einen datensatz ||| dbase get record	count=1
rest	eine [function_2] ||| [return_1] [function_2]	count=5
function_name	ein attribut verweist ||| to	count=1
function_name	wenn er auf ein ||| move	count=1
function_name	setzt den [function_name] ||| [function_name] reset	count=1
namespace	der verbindung so dass ||| function	count=1
function_name	eine dbase-datenbank im ||| dbase	count=1
arg_pair	teilweise auf ||| float $ury	count=1
function_name	dom ||| simplexml import dom	count=1
arg_pair	und ||| resource $connection string $table_name	count=1
function	[function_name_1] domain von ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	richtung um alpha ||| resource $p float $alpha	count=1
function_name	mysql [function_name] enthält ||| mysql [function_name]	count=1
rest	[return_1] [function_2] ||| [return_1] [function_2]	count=24
arg_pair	fbsql_field_name() allerdings ||| int $field_offset	count=1
function_name	datenbank ||| dbase add	count=1
namespace	das aktuelle verzeichnis von ||| function	count=1
namespace	das angegeben ||| function	count=1
function_name	[function_name] auf ||| [function_name]	count=1
function_name	felder spalten ||| fields	count=1
return	[return] typen zurück ||| [return]	count=1
arg_pair	gegebenen plaintext mit den ||| string $plaintext	count=1
function_name	von mysql [function_name] enthält ||| mysql [function_name]	count=1
function_name	iso-8859-1 -kodierung oder mit ||| sqlite libencoding	count=1
function_name	[function_name_1] einem mysql ||| [function_name_2] [function_name_1]	count=4
function_name	funktion socket_set_nonblock() setzt das ||| socket set nonblock	count=1
namespace	anzahl von mikrosekunden ||| function	count=1
arg_pair	diese ||| array $except	count=1
namespace	der angegebenen verbindungkennung assoziert ||| function	count=1
arg_pair	in ||| string $data int $mode	count=1
function_name	session und füllt ||| session	count=1
function_name	der aufruf ||| call	count=1
function	[function_name_1] ein auf ||| [function_name_1] pdi [arg_pair_2]	count=1
function_name	postgresql [function_name_2] ||| [function_name_1] field [function_name_2]	count=2
function_name	löscht einen archiveintrag unter ||| delete	count=1
function_name	setzt den zeiger ||| to next	count=1
namespace	seines ||| ziparchive	count=2
function_name	ändern ||| socket	count=1
namespace	und wartet ob ||| function	count=1
namespace	beziehung der indexe ||| function	count=1
function	das feld [arg_pair_2] ||| [function_name_1] table resource $result [arg_pair_2]	count=2
arg_pair	gegbenen key ||| int $perms	count=1
return	ihren status ändern ||| int	count=1
function_name	setzt ||| move to	count=1
function_name	baut eine persistente ||| pconnect	count=1
arg_pair	funktion openssl_pkcs7_sign() signiert die ||| int $flags string $extracerts	count=1
function_name	des voherigen angehängt ||| array merge recursive	count=1
namespace	aus [namespace] durch ||| [namespace]	count=1
arg_pair	ähnelt der c version ||| int $return_var	count=1
function_name	ein attribut ||| move to	count=1
function_name	liefert die sicherheitseinstellungen ||| security prefs	count=1
namespace	durch die elemente ||| function	count=1
function_name	als ||| create	count=1
arg_pair	server ohne ||| resource $connection	count=1
function_name	unterschieden ||| pconnect	count=1
arg_pair	den ||| resource $p	count=4
function_name	backslash vor jedes ||| preg quote	count=1
arg_pair	certs ||| array $certs	count=1
function_name	einen neuen ||| new	count=1
arg_pair	das [arg_pair] ||| [arg_pair]	count=1
arg_pair	nanosekunden nanoseconds ||| int $nanoseconds	count=1
arg_pair	parameter start und ||| mixed $start	count=1
function_name	in utf-8 zu sein ||| utf8	count=1
function_name	zurückgeliefert ||| fbsql	count=1
function_name	neues ||| construct	count=1
return	auch dies keine ||| array	count=1
function_name	funktion kopiert [function_name] ||| [function_name] copy	count=3
namespace	die funktionen ||| function	count=1
arg_pair	am angebenen offset über ||| int $offset	count=1
function_name	versucht ||| extension	count=1
arg_pair	in calendar ||| int $month	count=1
arg_pair	ein ||| string $encoding	count=1
function_name	einen 8 bit ||| qprint	count=1
arg_pair	anfang eines strings ||| string $character_mask	count=1
function_name	neuen [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	die der ||| function	count=1
arg_pair	den pararmeter infilename ||| string $outfilename	count=1
return	die durch den ||| resource	count=1
arg_pair	von str ||| string $delimiter	count=1
return	als assoziatives array ||| array	count=1
function_name	element ||| next	count=1
arg_pair	zeichen die in ||| string $str	count=1
namespace	[namespace] offset vom ||| [namespace]	count=1
return	postgresql-datenbank die durch den ||| resource	count=1
function_name	fehlermeldung die für die ||| error	count=1
arg_pair	[arg_pair] grafik ||| [arg_pair]	count=1
arg_pair	[arg_pair] optionsliste ||| [arg_pair]	count=1
function_name	vorzugebenden musters zurück ||| date	count=1
return	angegebenen ressource ||| resource	count=1
namespace	-größe an [namespace] aktuellen ||| [namespace]	count=1
arg_pair	und bcc kopffeldern ||| string $bcc	count=1
arg_pair	neues soapvar -objekt ||| string $node_namespace	count=1
function_name	extensions ||| extensions	count=1
namespace	libmcrypt 2.2.x der zweite ||| function	count=1
arg_pair	data unter ||| string $sealed_data	count=1
function_name	erste ||| next	count=1
function_name	versehene repräsentation des ||| export to file	count=1
namespace	durchsucht die ||| function	count=1
namespace	diese ihren ||| function	count=1
function_name	übergebenen dateizeiger bezeichnete bzip2-datei ||| bzclose	count=1
namespace	der festplatte ||| function	count=2
namespace	der betroffenen funktionen verwenden ||| function	count=1
function_name	informationen oder nachrichten ||| multi info	count=1
function_name	md5-code einer ||| md5 file	count=1
function_name	attribut wenn er auf ||| next	count=1
function_name	wartet ||| socket	count=1
function_name	als ||| select	count=1
function_name	typ [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ftp-stream ||| ftp set	count=1
function_name	[function_name_1] gibt ||| [function_name_2] [function_name_1]	count=2
namespace	wie array() ||| function	count=1
return	und zeichenfarbe auf ||| bool	count=1
function_name	sequenz von elementen ||| slice	count=1
arg_pair	mit den werten ||| resource $connection	count=1
arg_pair	groß- und kleinschreibung berücksichtigt ||| string $str1 string $str2	count=1
arg_pair	wandelt htmlentities() wirklich ||| string $encoding	count=1
namespace	die angegebene connection zurück ||| function	count=1
namespace	entsprechung der ||| function	count=1
function_name	der letzten soap-anfrage gesendete ||| get last request	count=1
namespace	archiveintrag ||| ziparchive	count=1
function_name	warten ||| send	count=1
arg_pair	von str das ||| string $delimiter	count=1
function_name	gibt ||| get	count=4
arg_pair	oder einen ||| resource $pdfdoc int $id	count=1
arg_pair	den input ||| string $input int $pad_length	count=1
function_name	aus char_list ||| strpbrk	count=1
arg_pair	angebenen offset ||| int $offset	count=1
namespace	oder ||| xmlreader	count=1
arg_pair	array im parameter certs ||| array $certs	count=1
function_name	einem [function_name] abfrageergebnis ||| [function_name] num	count=2
rest	sendet ein [function_2] ||| [return_1] [function_2]	count=1
namespace	der server ||| function	count=1
function_name	diese methode importiert ein ||| import	count=1
namespace	kann wird eine ||| function	count=1
arg_pair	parameter certs ||| array $certs	count=1
function_name	setzt den zeiger ||| move to next	count=1
function	die texte [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	flags für die mit ||| imap clearflag full	count=1
function	repräsentation des [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	eine ||| resource $handle	count=1
namespace	dem wert der im ||| function	count=1
function_name	oid des ||| oid	count=1
function_name	gibt die anzahl der [function_name_1] [function_name_2] ||| function int [function_name_2] [function_name_1]	count=2
arg_pair	angebenen offset ||| resource $context int $offset	count=1
return	vom letzten ||| int	count=1
namespace	attribut verweist oder aufs ||| xmlreader	count=1
arg_pair	angebenen offset über ||| int $offset	count=1
arg_pair	in_charset kodierte ||| string $in_charset	count=1
arg_pair	für den in purpose ||| mixed $x509cert int $purpose	count=1
arg_pair	seite eine ||| resource $pdfdoc	count=1
function_name	operanden ||| bcadd	count=1
function_name	listet alle [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	beendet ||| close	count=1
arg_pair	assoc_array entsprechen und ||| array $assoc_array int $options	count=1
function_name	diese funktion kopiert [function_name_1] [function_name_2] mit den gleichen voreinstellungen ||| [function_name_1] [function_name_2]	count=2
arg_pair	skaliert sie ||| float $sx	count=1
function_name	interface definiert wurde ||| interface exists	count=2
namespace	der aktuellen seite ein ||| function	count=1
function_name	öffnet eine dbase-datenbank im ||| dbase open	count=1
function_name	queue ||| set queue	count=2
function_name	diese ihren status ändern ||| socket	count=1
arg_pair	erzeugt eine spezielle oder ||| int $mode	count=1
arg_pair	berechnet den ||| float $x	count=1
arg_pair	liefert ||| int $row	count=1
function_name	werten aus ||| pg update	count=1
function_name	attributes ||| attribute	count=1
rest	sendet ein [function_2] ||| [function_2] [return_1]	count=1
function_name	ein ldap ||| ldap bind	count=1
function_name	[function_name_1] pdf dokument ||| [function_name_2] open [function_name_1]	count=2
function_name	datenbank [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	einen datensatz ||| record	count=1
function_name	attribut verweist oder aufs ||| to	count=1
function_name	zeichnet ein rechteck ||| pdf rect	count=1
function_name	registriert ||| register shutdown function	count=1
arg_pair	erzeugt eine png ||| int $quality int $filters	count=1
return	array() ist ||| array	count=1
function_name	über den [function_name] aus ||| [function_name]	count=1
function	[function_name_1] vom anfang ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	liste sequence ||| string $sequence	count=1
function_name	das nächste attribut ||| move to next	count=1
function_name	attribut wenn ||| to	count=1
function	zum zertifikat [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	eigenschaft ||| property	count=2
arg_pair	übergebenen parametern ||| resource $connection string $stmtname	count=1
namespace	zeiger auf das ||| xmlreader	count=1
arg_pair	str das zur syntax ||| string $delimiter	count=1
arg_pair	start und optional length ||| mixed $start mixed $length	count=1
function_name	das produkt von werten ||| product	count=1
function_name	ein sql-kommando ||| pg convert	count=1
arg_pair	alle schlüssel aus array ||| array $array	count=1
function_name	aktuellen session ||| session	count=1
function_name	platziert [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	verweist oder ||| move to	count=1
function_name	oder aufs erste ||| next	count=1
arg_pair	verschlüsselt data ||| string $data string $sealed_data	count=1
function_name	aus einer msql ergebnismenge ||| msql	count=1
arg_pair	month day und ||| int $day	count=1
namespace	ldap_modify() funktion wird verwendet ||| function	count=1
namespace	ausführen der ||| function	count=1
function_name	zurück der die verbindungsoptionen ||| options	count=1
function_name	felder in einem ||| fields	count=1
arg_pair	-aufrufs mit ||| object $result string $user_compare_function	count=1
function_name	virtuelles pdf dokument und ||| pdf	count=1
function_name	[function_name_1] funktionen ||| [function_name_1] [function_name_2]	count=2
function_name	wie ||| list	count=1
arg_pair	durchsucht den string haystack ||| string $char_list	count=1
namespace	wenn die abfrage ||| function	count=1
function_name	die texte von ||| bind textdomain codeset	count=1
function_name	den zeiger auf ||| move	count=1
function_name	datenbanken des servers ||| dbs	count=1
function_name	sofern vorhanden wird verworfen ||| end clean	count=1
function_name	geholten [function_name] entspricht und ||| [function_name]	count=1
function_name	ist ||| call	count=1
function_name	die nächste zeile ||| oci fetch	count=1
function_name	auf ein ||| move	count=2
function_name	gepanzerten ausgabe ||| gnupg setarmor	count=1
function_name	löscht ||| delete	count=4
function_name	eine dbase-datenbank im angegebenen ||| dbase	count=1
function_name	kind beendet ||| pcntl wtermsig	count=1
function_name	php-tags reduzierte version ||| strip tags	count=1
arg_pair	ist die erweiterte version ||| int $result_type	count=1
function_name	plural-abfrage ||| dcngettext	count=1
return	ein array das die ||| array	count=1
namespace	wird verwendet um bestehende ||| function	count=1
namespace	speicher frei [namespace] ||| [namespace]	count=1
arg_pair	http header-informationen zu übertragendes ||| string $path	count=1
function_name	[function_name_1] funktionen zurück ||| [function_name_2] [function_name_1]	count=2
function_name	eine spezielle ||| mknod	count=1
function_name	gesamte kommandozeilen-history ||| readline clear history	count=1
arg_pair	nach schlüsseln in ||| array $array int $sort_flags	count=1
namespace	der übergebene string ||| function	count=1
function_name	übergebene zertifikat zurück ||| openssl x509	count=1
arg_pair	den ||| resource $result	count=8
function_name	versehene repräsentation ||| export to	count=1
namespace	dateien zurück die ||| function	count=1
function	[function_name_1] server ohne ||| [function_name_1] [arg_pair_2]	count=2
function_name	flags für ||| imap clearflag full	count=1
namespace	die ausführung für die ||| function	count=1
arg_pair	angegebenen ||| string $class_name mixed $args	count=1
namespace	der standardmässigen fehlerbehandlung oder ||| function	count=1
function	[function_name_1] tabelle ||| [function_name_1] resource $connection [arg_pair_2]	count=1
function_name	ersetzt ||| replace record	count=2
namespace	diese durch die elemente ||| function	count=1
arg_pair	einem bestimmten abfrageergebnis ||| resource $result	count=1
function_name	client für ||| pg client encoding	count=1
arg_pair	ihren status ||| array $write	count=1
function_name	abonnement ||| unsubscribe	count=1
function_name	ersten vorkommens ||| strpos	count=1
function_name	integer ||| int	count=1
namespace	schrift in der ||| function	count=1
function	[function_name_1] und gibt ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	ein datum in calendar ||| int $calendar	count=1
function	[function_name_1] übergebenen image ||| [arg_pair_2] [function_name_1]	count=3
function_name	ersetzt ||| array replace	count=2
function_name	query an ||| ingres query	count=1
function_name	apacheprozess ||| apache child terminate	count=1
function_name	die $_session-superglobale damit ||| decode	count=1
function_name	wird verworfen ||| end clean	count=1
namespace	string zurückzugeben der die ||| function	count=1
arg_pair	das [arg_pair] optionsliste definiert ||| [arg_pair]	count=1
arg_pair	die funktion callback ||| callable $callback	count=1
arg_pair	link_identifier bezieht ||| string $database_name resource $link_identifier	count=1
function_name	sendet eine fehlermeldung ||| error	count=1
function_name	beendet ||| end	count=2
function_name	das nächste attribut wenn ||| to	count=1
function_name	ein zertifikat um ||| openssl x509 checkpurpose	count=1
arg_pair	array mittels glue zu ||| array $pieces	count=1
arg_pair	liefert den ||| resource $result	count=3
return	nächste attribut wenn ||| bool	count=1
function_name	keine wirkliche ||| list	count=1
arg_pair	den werten ||| resource $connection	count=1
function_name	gibt alle registrierten __autoload() ||| spl autoload	count=1
arg_pair	erzeugt eine png ||| int $filters	count=1
function_name	zeiger ||| to next	count=1
arg_pair	unter anwendung verschiedener optionen ||| string $optlist	count=2
function_name	namen des feldes ||| field name	count=4
namespace	die ldap_modify() funktion wird ||| function	count=1
arg_pair	den inhalt ||| resource $p	count=1
function_name	namen der [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	verschlüsselt die daten mit ||| string $data string $method	count=1
function	oracle-platzhalter [arg_pair_2] ||| [function_name_1] resource $statement [arg_pair_2]	count=1
arg_pair	von subject ||| string $subject	count=1
function_name	wenn er auf ||| move	count=1
arg_pair	datei ||| string $pathname int $mode	count=1
arg_pair	gegbenen key bezeichnete ||| int $perms	count=1
function_name	internen datensatz-zeiger eines ||| data seek	count=2
arg_pair	den wert eines ||| resource $p string $key	count=1
namespace	schlüsseln die ||| function	count=1
function_name	der definierten ||| function	count=1
function_name	attribut wenn er auf ||| to next	count=1
function_name	archiveintrag ||| index	count=1
namespace	er auf ein ||| xmlreader	count=2
arg_pair	und wartet ob ||| array $read	count=1
function_name	[function_name_1] msql-servers zurück ||| [function_name_2] [function_name_1]	count=2
namespace	bézier-kurve ausgehend [namespace] ||| [namespace]	count=1
namespace	alle im archiv ||| ziparchive	count=1
namespace	url verwendet werden ||| function	count=1
function_name	utf-32 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	sequence ||| string $sequence	count=1
function_name	zur nutzung durch andere ||| pkey get private	count=1
arg_pair	und wartet ob diese ||| array $except	count=1
function_name	gibt das produkt von ||| product	count=1
arg_pair	als ||| int $tv_sec	count=1
function_name	entfernt den ||| handler remove	count=1
function_name	imap [function_name_2] ||| [function_name_1] last [function_name_2]	count=4
arg_pair	zeichen vom anfang eines ||| string $character_mask	count=1
function_name	er auf ||| next	count=2
function_name	[function_name_1] definiert ||| [function_name_2] [function_name_1]	count=4
namespace	mktime() mit der ||| function	count=1
function_name	internen datensatz-zeiger ||| data seek	count=2
function_name	und bereitet sie zur ||| pdf	count=1
arg_pair	den pararmeter infilename ||| string $infilename string $outfilename	count=1
function	exec-kommando [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	setzt das ||| socket set	count=1
arg_pair	mittels glue zu einer ||| array $pieces	count=1
function_name	des /encoding ||| encoding	count=1
arg_pair	zeichenkette subject nach ||| mixed $subject int $limit	count=1
namespace	daten die ||| function	count=1
function_name	listet alle tabellen ||| msql list tables	count=2
function_name	wird die option ||| socket set option	count=1
arg_pair	[arg_pair_1] text ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	des feldes nach ||| next field	count=1
arg_pair	in ||| mixed $x509cert	count=1
namespace	in nachfolgenden aufrufen von ||| function	count=1
function_name	den speicher frei ||| free	count=1
function_name	[function_name_1] setzt das ||| [function_name_2] [function_name_1]	count=2
arg_pair	zeichen von str ||| string $str	count=1
arg_pair	datenzeile ||| int $fetch_flag	count=1
arg_pair	ist missbilligt ||| string $function_name string $arguments	count=1
return	assoziatives array ||| array	count=2
function_name	dekodiert [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	grafikzustandsobjekt unter [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	internen datensatz-zeiger eines frontbase-abfrageergebnisses ||| data seek	count=1
function_name	aufs erste attribut wenn ||| move to next attribute	count=1
arg_pair	eine png -datei ||| int $quality int $filters	count=1
namespace	unter verwendung seines ||| ziparchive	count=1
namespace	[namespace] sich auf ||| [namespace]	count=3
function_name	letzten imap fehlermeldung ||| imap last error	count=1
function_name	iso-8859-1 -kodierung oder mit ||| libencoding	count=1
function_name	auf das nächste ||| to	count=1
function_name	nächste attribut ||| to next	count=1
function_name	felder ||| fields	count=4
function_name	datensatz-id ||| row id	count=1
arg_pair	übergebene zeichenkette so ||| object $link_identifier string $text	count=1
arg_pair	oder diese erzeugt sollte ||| int $mode	count=1
function	[function_name_1] in ||| [arg_pair_2] [function_name_1]	count=1
namespace	[namespace] recode-anweisung request ||| [namespace]	count=1
function_name	[function_name_1] virtuelles pdf ||| [function_name_2] open [function_name_1]	count=2
namespace	alle parameter die ||| function	count=1
arg_pair	der ||| string $function_name	count=1
arg_pair	erstellt ||| string $encoding	count=1
arg_pair	vollständig oder teilweise auf ||| float $ury	count=1
namespace	dem server [namespace] angegebenen ||| [namespace]	count=2
function_name	zeiger auf das ||| to	count=1
function_name	datei ||| export to file	count=1
arg_pair	eine spezielle oder ||| string $pathname int $mode	count=1
function_name	status ändern ||| socket	count=1
namespace	dieser ||| soapclient	count=1
arg_pair	die schnittmenge von ||| array $array2	count=1
namespace	einen prozess der ||| function	count=1
arg_pair	basierend ||| array $extraattribs	count=1
arg_pair	abzufragen ohne wiederholend ||| mixed $definition	count=1
function_name	wert eines pcos-pfades ||| pdf pcos	count=1
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| pkey export to file	count=1
function_name	auf ein element ||| to next	count=1
function	php-variable variable [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	ermittelt den inhalt eines ||| resource $p	count=1
namespace	die gegebene nachricht ||| function	count=1
function_name	query an ||| query	count=2
function_name	diese ihren status ändern ||| select	count=1
function_name	liest zeilen ||| dbx fetch	count=1
namespace	der ausführungswarteschlange) über die ||| function	count=1
function_name	datei ||| mknod	count=1
function_name	statusinformationen ||| imap status	count=1
namespace	der api-funktion die die ||| function	count=1
arg_pair	ihren status ||| array $except int $tv_sec	count=1
namespace	[namespace] gesetzt ||| [namespace]	count=1
function_name	ob diese ||| socket select	count=1
function_name	in dem get_defined_vars() aufgerufen ||| defined vars	count=1
arg_pair	und gibt bei erfolg ||| string $encoding	count=1
arg_pair	öffnet filename und ||| string $filename	count=1
arg_pair	tabelle ||| string $table_name	count=1
arg_pair	auf beiden seiten auf ||| string $pad_string int $pad_type	count=1
arg_pair	eine png -datei aus ||| int $quality int $filters	count=1
arg_pair	den dateizeiger handle und ||| resource $handle	count=1
function_name	zeiger auf das nächste ||| to	count=1
function_name	er auf ein ||| move	count=2
namespace	auf ein element ||| xmlreader	count=1
namespace	eine ||| function	count=1
function_name	verwendung seines ||| delete	count=1
function_name	dieser methode ||| call	count=1
arg_pair	die länge des ||| int $start int $length	count=1
arg_pair	namen des postfachs old_mbox ||| string $old_mbox	count=1
function_name	repräsentation des ||| export to file	count=1
function_name	angeforderten option option von ||| get option	count=1
function_name	eine ||| posix mknod	count=2
function_name	wert eines numerischen ||| value	count=1
return	öffnen eines ||| int	count=1
function_name	gegenstück zu htmlspecialchars() ||| htmlspecialchars decode	count=2
function_name	die aufrufende funktion übergeben ||| args	count=1
function_name	ein curl-handle und ||| curl	count=1
arg_pair	basierend auf ||| array $extraattribs	count=1
function_name	für ||| imap	count=1
arg_pair	png -datei ||| int $filters	count=1
arg_pair	von domain ||| string $domain string $codeset	count=1
arg_pair	property in ||| mixed $class string $property	count=1
namespace	ist ||| soapclient	count=1
arg_pair	datei zu ||| string $filename	count=1
function_name	[function_name_1] ein physisches ||| [function_name_1] [function_name_2]	count=1
arg_pair	verfügbar wenn [arg_pair] gegen ||| [arg_pair]	count=1
return	ein array aus ||| array	count=2
arg_pair	domain ||| string $domain	count=1
function_name	des msql-servers zurück ||| msql	count=1
namespace	von dem zeiger zu ||| function	count=1
arg_pair	die funktion ändert [arg_pair_1] [arg_pair_2] siehe imap_open() für angaben ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=2
function_name	erzeugt ||| posix	count=1
namespace	[namespace] arrayelementen ||| [namespace]	count=1
namespace	die funktion prüft ||| function	count=1
function	[function_name_1] zeichenkette ||| [arg_pair_2] [function_name_1]	count=1
namespace	der benutzer ||| function	count=1
namespace	die ||| sqlite3	count=1
function_name	und markup ||| inner xml	count=1
function_name	auf das nächste attribut ||| move	count=1
arg_pair	zeichenkodierung ||| string $encoding	count=1
namespace	die darin enthaltenen ||| function	count=1
function_name	fdf dokuments fest ||| fdf set encoding	count=1
function_name	guid ||| mssql guid	count=1
function_name	zeilen ||| dbx fetch	count=1
function_name	datenbank als ||| dbase	count=1
arg_pair	wendet die funktion callback ||| callable $callback	count=1
function_name	utf-8 und ||| utf8	count=1
arg_pair	zugriffsrechte für ein ||| string $rights	count=1
namespace	eine spezielle oder ||| function	count=1
function_name	oder aufs erste ||| to next	count=1
arg_pair	input -string erweitert ||| string $input	count=1
namespace	der ausschließlich ||| function	count=1
function	[function_name_1] übergebenen image ||| [function_name_1] [arg_pair_2]	count=3
function_name	dio_stat() ||| dio stat	count=1
arg_pair	key und ||| string $key	count=2
function_name	den momentanen [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	gmt-datum repräsentieren ||| int $year int $is_dst	count=1
arg_pair	konvertiert einen string ||| int $split_length	count=1
function_name	[function_name] sets ||| maxdb [function_name]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] list tables [arg_pair_2]	count=3
arg_pair	angegebene schlüssel ||| resource $handle	count=1
function_name	status eines abfrageergebnisses zurück ||| status	count=1
namespace	auf ein element verweist ||| xmlreader	count=1
function_name	und wartet ob diese ||| select	count=1
function_name	die entsprechende ||| row	count=1
function_name	versucht die ||| extension	count=1
function_name	schlüssels ||| fdf	count=1
namespace	für die angegebene ||| function	count=1
function_name	produkt von ||| product	count=1
function_name	einen neuen csr zertifikatssignierungsanfrage ||| openssl csr new	count=1
arg_pair	funktion ||| string $string	count=1
namespace	zeichnet die ||| function	count=1
function_name	die unterschiede ||| diff	count=2
function_name	[function_name] mit den ||| curl copy [function_name]	count=3
namespace	höhe zurück der innerhalb ||| function	count=1
function_name	gibt den speicher frei ||| mysql free result	count=1
function_name	ein objekt [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	das nächste attribut wenn ||| move	count=1
namespace	die funktionen der ||| function	count=1
return	wartet ob diese ||| int	count=1
arg_pair	ab ||| resource $pdfdoc	count=1
function_name	ein element ||| to	count=1
function_name	ein zertifikat ||| openssl x509 checkpurpose	count=1
namespace	setzt ||| xmlreader	count=1
arg_pair	mit den http header-informationen ||| string $domain	count=1
return	zip-archiv für den ||| resource	count=1
function_name	virtuelles 3d-modell ||| load 3ddata	count=1
function_name	einen archiveintrag unter verwendung ||| delete index	count=1
arg_pair	calendar ||| int $month	count=1
function_name	archiveintrag unter verwendung ||| delete index	count=1
arg_pair	ermittelt den wert ||| resource $p	count=1
function	dem [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	und gibt ||| function	count=1
arg_pair	[arg_pair] großbuchstaben umgewandelt ||| [arg_pair]	count=1
function_name	ist ||| is string	count=1
namespace	der das skript ||| function	count=1
function_name	schließt das ||| pdf close pdi	count=2
function_name	schließt ||| sqlite close	count=1
arg_pair	bestimmte elemente eines ||| resource $pdfdoc int $doc	count=1
function_name	oder virtuelles pdf dokument ||| pdf	count=1
function_name	auf ein element verweist ||| move to	count=1
function_name	gibt ||| posix	count=1
function_name	betroffenen zeilen zurück ||| rows	count=1
arg_pair	diese ||| array $except int $tv_sec	count=1
arg_pair	flag [arg_pair_2] ||| [arg_pair_2] string $sequence [arg_pair_1]	count=1
function	[function_name_1] von subject ||| [arg_pair_2] [function_name_1]	count=1
function_name	seines ||| delete	count=1
function_name	[function_name_1] zum zertifikat ||| [function_name_2] private [function_name_1]	count=1
function_name	php-variable variable ||| oci bind	count=1
function_name	wenn er ||| to	count=1
function_name	ein verzeichnis mit dem ||| mkdir	count=1
function_name	eines feldes [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	die fehlermeldung ||| function	count=1
return	des ||| int	count=2
function_name	[function_name_1] und spalte ||| [function_name_2] [function_name_1]	count=3
arg_pair	den schlüssel fingerprint ||| resource $identifier string $fingerprint	count=1
arg_pair	zeichen von str das ||| string $str	count=1
namespace	eine socket-verbindung zu der ||| function	count=1
function_name	auf ein attribut verweist ||| move	count=1
arg_pair	data unter verwendung ||| string $data	count=1
function	[function_name_1] cert ist ||| [function_name_1] private key [arg_pair_2]	count=1
arg_pair	ob oder wo ||| int $line	count=1
function_name	verknüpfung ||| locallink	count=1
function_name	einer julianischen tageszahl ||| frenchtojd	count=1
arg_pair	eine spezielle oder ||| int $mode	count=1
arg_pair	a bson ||| array $typemap	count=1
arg_pair	einer variable ||| mixed $var	count=1
namespace	der zuletzt ausgelösten ||| function	count=1
arg_pair	datei in einem ||| bool $use_include_path	count=1
namespace	internen zeiger von ||| function	count=1
function_name	[function_name_1] postgresql ||| [function_name_2] [function_name_1]	count=18
arg_pair	seite ||| float $llx	count=1
namespace	wobei die zuordnungen zwischen ||| function	count=1
function	den [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
return	gibt true zurück ||| bool	count=5
function_name	nächste attribut wenn ||| move	count=1
namespace	eine verbindung zu der ||| function	count=1
function_name	queue datenstruktur ||| set queue	count=1
function_name	[function_name_1] getätigten insert ||| [function_name_1] [function_name_2]	count=1
function_name	wie sprintf() akzeptiert jedoch ||| vsprintf	count=1
function_name	gibt eine vorbereitete ||| ibase	count=1
namespace	die elemente ||| function	count=1
function_name	matchbox ||| matchbox	count=1
function_name	dass das kind anhielt ||| pcntl wstopsig	count=1
function	setzt [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	sich über zu ||| function	count=1
namespace	nimmt ||| function	count=1
return	ein ||| array	count=3
function_name	registriert den apacheprozess ||| child terminate	count=1
arg_pair	schnittmenge von arrays mit ||| array $array1 array $array2	count=1
function	[function_name_1] vom anfang ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] eines feldes ||| [function_name_2] [function_name_1]	count=2
function_name	namen ||| table	count=1
function_name	msql ergebnismenge ||| msql	count=2
function_name	[function_name] gibt ||| [function_name]	count=1
function_name	klein- oder großbuchstaben ||| change key case	count=1
function_name	die aufrufende funktion ||| args	count=1
arg_pair	den unix-timestamp entsprechend ||| int $minute	count=1
function_name	fehlermeldung an das fehlerprotokoll ||| error log	count=1
function_name	query an ||| ingres unbuffered query	count=1
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| openssl pkey export to file	count=1
function_name	wenn ||| move to	count=1
function_name	namen bestimmten eintrag ||| name	count=1
function_name	wartet ob diese ||| socket select	count=1
arg_pair	den namen ||| resource $imap_stream	count=2
function_name	den zeiger auf ||| to next	count=1
function_name	aktuellen [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	farbraum [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	server [namespace] angegebenen verbindungskennung ||| [namespace]	count=1
return	durch den ||| resource	count=1
namespace	zeichen die von jeder ||| function	count=1
function_name	php-variable ||| oci bind	count=2
function_name	gibt das produkt von ||| array product	count=1
arg_pair	nachrichtennummer für uid ||| int $uid	count=1
return	einen ||| string	count=5
arg_pair	und ||| string $str1	count=1
return	wirkliche funktion sondern ein ||| array	count=1
arg_pair	bieten ||| bool $clear_realpath_cache string $filename	count=1
namespace	anzahl von ||| function	count=1
function_name	kopiert ||| copy to	count=1
arg_pair	angegebenen verbindungskennung link_identifier ||| string $query resource $link_identifier	count=1
function_name	aktuellen ||| pdf	count=2
arg_pair	parst key ||| string $passphrase	count=1
function_name	platziert ||| pdf fit	count=3
namespace	namen aller in der ||| function	count=1
function_name	/cosh ||| tanh	count=1
arg_pair	mittels glue zu ||| string $glue	count=1
function_name	formatierung vor ||| create textflow	count=1
function_name	[function_name_1] pdf ||| [function_name_2] open [function_name_1]	count=2
namespace	der tabelle ||| function	count=1
return	nimmt ||| int	count=2
arg_pair	verbindungskennung link_identifier bezieht ||| string $database_name resource $link_identifier	count=1
function_name	löscht einen archiveintrag ||| index	count=1
arg_pair	feld ||| string $fieldname	count=1
function_name	listet alle datenbanken ||| list dbs	count=1
arg_pair	empfängt len bytes daten ||| int $len int $flags	count=1
function_name	erzeugt eine spezielle oder ||| posix	count=1
function_name	öffnet ein [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	namen des ||| fbsql field name	count=2
namespace	die weitere verwendung vor ||| function	count=1
namespace	auf das nächste attribut ||| xmlreader	count=1
function_name	potenz von exp zur ||| pow	count=1
return	mit dem ||| resource	count=1
function_name	ein attribut verweist oder ||| to	count=1
namespace	der pdflib-version zurück ||| function	count=1
arg_pair	[arg_pair_1] datei zu ||| [arg_pair_2] mixed $data [arg_pair_1]	count=1
arg_pair	die [arg_pair_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=2
namespace	wert der im ||| function	count=1
arg_pair	und wartet ob diese ||| array $write	count=1
function_name	wenn ||| to	count=1
namespace	klartext für die letzte ||| function	count=1
function_name	die option die ||| option	count=1
function_name	assoziiert ||| mysql select db	count=2
arg_pair	ermittelt den wert eines ||| resource $p	count=1
function_name	den ||| to	count=1
arg_pair	bestimmten abfrageergebnis zu ||| resource $result	count=1
function_name	erste attribut wenn er ||| move to next attribute	count=1
arg_pair	und ||| string $path	count=1
arg_pair	unterschied zwischen arrays mit ||| array $array1 array $array2	count=1
function_name	symbolischen link ||| lstat	count=1
function_name	eigenschaft gesetzt wurde ||| get parser property	count=2
namespace	gibt die namen aller ||| function	count=1
namespace	alle daten von der ||| function	count=1
function_name	[function_name_1] ein grafikzustandsobjekt ||| [function_name_2] [function_name_1]	count=1
function_name	zugehörigen ||| combine	count=1
arg_pair	die funktion openssl_pkcs7_sign() ||| int $flags	count=1
arg_pair	funktion ||| string $name	count=1
function_name	das nächste ||| to	count=1
function_name	von tabellennamen [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	nächste attribut ||| move to next	count=1
return	er auf ein attribut ||| bool	count=1
namespace	werden kann ||| function	count=1
arg_pair	die länge ||| int $start int $length	count=1
arg_pair	certs ||| mixed $pkcs12 array $certs	count=1
namespace	die version der ||| function	count=1
arg_pair	ein gmt-datum repräsentieren ||| int $year int $is_dst	count=1
function_name	möglichkeit ||| cancel	count=1
function_name	felder im ||| fields	count=1
function_name	[function_name_1] datenbanken des ||| [function_name_1] [function_name_2]	count=1
return	zurück die auf ||| bool	count=1
arg_pair	aktuellen seite ||| string $boxname	count=1
arg_pair	gibt den input -string ||| int $pad_length	count=1
function	[function_name_1] datenbank ||| [function_name_1] [arg_pair_2]	count=4
namespace	oder erzeugt aus der ||| function	count=1
arg_pair	zeichensatz in_charset kodierte zeichenkette ||| string $in_charset	count=1
return	gegebene anzahl sekunden seconds ||| mixed	count=1
function_name	knoten selbst ||| outer xml	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] table resource $result [arg_pair_2]	count=6
function_name	[function_name_1] des msql-servers ||| [function_name_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] datei zu ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	funktion empfängt len bytes ||| int $len	count=1
function_name	internen datensatz-zeiger eines frontbase-abfrageergebnisses ||| seek	count=1
return	attribut wenn er auf ||| bool	count=1
namespace	gibt die id ||| function	count=1
arg_pair	diese ihren ||| array $write	count=1
function_name	ihren status ändern ||| select	count=1
return	aufruf dieser ||| mixed	count=1
arg_pair	durch den pararmeter infilename ||| string $outfilename	count=1
namespace	der mit ||| function	count=2
function_name	schließt das ||| close pdi	count=1
function_name	imap oder ||| imap reopen	count=1
arg_pair	des postfachs mailbox beenden ||| resource $imap_stream string $mailbox	count=1
arg_pair	allen werten von array1 ||| array $array1	count=1
arg_pair	die funktion ||| string $extracerts	count=1
arg_pair	setzt die mit flag ||| string $flag int $options	count=1
function_name	datenbankstruktur ||| dbase get header	count=1
arg_pair	in purpose angegebenen ||| int $purpose	count=1
arg_pair	datei aber in ||| int $use_include_path	count=1
function_name	virtuelles pdf-dokument und bereitet ||| pdi	count=1
function_name	status eines ||| status	count=1
arg_pair	zeichen vom anfang ||| string $character_mask	count=1
arg_pair	die [arg_pair_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	ihren status ||| select	count=1
function_name	ein ||| list	count=1
function_name	feld aus die ||| field	count=1
function_name	zeilen ||| pg fetch	count=1
namespace	farbverlauf [namespace] auf ||| [namespace]	count=1
function_name	bezeichneten postgresql ||| pg	count=1
function_name	der ||| ftp	count=3
arg_pair	vergleich groß- und kleinschreibung ||| string $str1	count=1
arg_pair	schlüsseln in ||| int $sort_flags	count=1
arg_pair	in ||| int $mode	count=1
arg_pair	funktion callback ||| callable $callback	count=1
function_name	funktionen ||| functions	count=1
function_name	das nächste attribut ||| move to	count=1
function_name	whitespaces am ||| trim	count=1
function_name	private ||| private	count=1
function_name	den ||| get parameter	count=1
arg_pair	input -string erweitert ||| int $pad_length	count=1
function_name	postgresql abfrageergebnisses ||| pg	count=1
arg_pair	datei in einem string ||| string $filename	count=1
function_name	get_defined_vars() aufgerufen wird zurück ||| defined vars	count=1
function	ersetzt die [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	beendet [arg_pair_2] ||| [function_name_1] page ext [arg_pair_2]	count=1
arg_pair	die funktion [arg_pair_1] [arg_pair_2] siehe imap_open() für angaben ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=2
arg_pair	datei in ||| string $filename	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] fetch [function_name_1]	count=8
arg_pair	den in envelope ||| array $envelope	count=1
arg_pair	angegebenen verbindungskennung ||| string $query	count=1
function_name	und spalte ||| result	count=1
function_name	setzt den ||| move to	count=1
arg_pair	wartet ||| array $except	count=1
namespace	die funktion konvertiert die ||| function	count=1
function_name	[function_name] vollständig und ||| [function_name]	count=1
function_name	er auf ||| move	count=2
arg_pair	len bytes daten in ||| int $len	count=1
function_name	nimmt als ||| select	count=1
function_name	des voherigen angehängt ||| merge recursive	count=1
arg_pair	offset [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function	setzt [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	vergleich groß- und ||| string $str2	count=1
arg_pair	section angebenen teil ||| int $options	count=1
function_name	veränderten datensätze ||| rows	count=1
namespace	kann benutzt werden um ||| function	count=1
arg_pair	eines angegebenen trennzeichens um ||| string $break bool $cut	count=1
function_name	zum browser/client gesendet werden ||| headers list	count=1
function_name	den zeiger auf ||| move to next	count=1
function_name	namen des feldes nach ||| fdf next field name	count=1
arg_pair	-aufrufs mit einer benutzerdefinierten ||| object $result string $user_compare_function	count=1
function_name	voherigen ||| recursive	count=1
function_name	den schlüssel des zufälligen ||| array rand	count=1
arg_pair	eine ||| string $pathname int $mode	count=1
arg_pair	den in name ||| string $name	count=1
function_name	ingres zu ||| ingres	count=1
function_name	nimmt als ||| socket	count=1
function_name	erzeugt ein textflussobjekt oder ||| textflow	count=1
arg_pair	len bytes von name ||| int $len int $flags	count=1
function_name	überprüft ein zertifikat um ||| openssl x509 checkpurpose	count=1
arg_pair	[arg_pair] definierten position ||| [arg_pair]	count=1
function_name	versehene repräsentation des ||| openssl pkey export to	count=1
arg_pair	bieten ||| string $filename	count=1
arg_pair	gegbenen key ||| int $key int $perms	count=1
namespace	string zurück der ||| function	count=1
namespace	prozess der unter verwendung ||| function	count=1
function	[function_name_1] in envelope ||| [function_name_1] [arg_pair_2]	count=1
return	in einen string ||| string	count=1
arg_pair	datei zum lesen ||| string $filename string $mode	count=1
arg_pair	zur späteren verwendung vor ||| string $optlist	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $key [arg_pair_2]	count=1
namespace	auch dies ||| function	count=1
arg_pair	komprimiert daten ||| string $data string $encoding	count=1
function_name	meldung des mssql-servers ||| message	count=1
function_name	ein ||| move to next	count=2
arg_pair	unterschied zwischen [arg_pair] ||| [arg_pair]	count=1
namespace	gibt das ergebnis ||| function	count=1
function_name	setzt ||| pdf set	count=1
function_name	mit ||| get	count=1
function_name	erzeugt eine spezielle oder ||| posix mknod	count=1
function_name	die vorhergehende ||| previous	count=1
function_name	boolean ist ||| is bool	count=1
function_name	einen archiveintrag unter verwendung ||| delete	count=1
arg_pair	funktion callback ||| array $array callable $callback	count=1
function_name	zugriffsrechte der spezifierten ||| ftp chmod	count=1
return	eines skripts ||| int	count=1
arg_pair	len bytes daten ||| int $len int $flags	count=1
function_name	in einer ergebnismenge ||| ingres	count=1
function_name	__autoload() ||| spl autoload extensions	count=1
function_name	schließt [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	funktion sortiert ein array ||| array $array callable $value_compare_func	count=1
arg_pair	status ||| array $read	count=1
arg_pair	am angebenen offset ||| int $offset	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] create resource $connection [arg_pair_2]	count=6
function_name	sequenz von ||| array slice	count=1
arg_pair	[arg_pair_1] length spezifizierte ||| [arg_pair_1] int $length [arg_pair_2]	count=3
function_name	elternelement des aktuellen attributes ||| move to element	count=1
arg_pair	um eine low-level-api-funktion um ||| array $options mixed $input_headers	count=1
return	[return] wenn alle ||| [return]	count=1
function_name	zu warten ||| send	count=2
arg_pair	key ||| string $passphrase	count=1
arg_pair	sortierte liste von ||| string $search_criteria	count=1
namespace	führt die mit ||| function	count=1
arg_pair	angegebenen ||| string $query	count=1
function_name	den ||| move to	count=1
function_name	ein element ||| move to next	count=1
function_name	setzt den zeiger ||| next	count=1
namespace	dass [namespace] ||| [namespace]	count=2
function_name	physisches oder [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	low-level-api-funktion um ||| mixed $input_headers	count=1
function_name	zeilen eines ||| fetch	count=1
arg_pair	eines ||| mixed $recipcerts	count=1
function_name	client ||| pg client	count=1
function_name	eine fehlermeldung an das ||| error	count=1
namespace	die von jeder ||| function	count=1
function_name	werte in ingres ||| ingres	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=6
function_name	in ein large object ||| pg lo	count=1
arg_pair	ermittelt den ||| resource $p string $spotname	count=1
arg_pair	len bytes von ||| int $len int $flags	count=1
function_name	auf ein ||| to next	count=2
function_name	attribut verweist oder ||| move	count=1
namespace	von zeichensätzen ||| function	count=1
function_name	tabellennamen [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	die inhalte der datei ||| function	count=1
namespace	die den pfad ||| function	count=1
function_name	[function_name] vollständig ||| [function_name]	count=1
namespace	legt die ||| function	count=6
return	wenn er auf ||| bool	count=1
arg_pair	eine datei von einem ||| string $filename	count=1
namespace	die den ||| function	count=1
namespace	allen nachrichten aus der ||| function	count=1
function_name	des ersten vorkommens von ||| strpos	count=1
function_name	[function_name_1] ergebnismenge zurück ||| [function_name_2] [function_name_1]	count=6
arg_pair	richtung um alpha ||| float $alpha	count=1
function_name	imap [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	schlüsseln wobei die zuordnungen ||| function	count=1
function_name	namen bestimmten ||| name	count=1
arg_pair	connection_string bezeichnet ||| string $connection_string	count=1
arg_pair	eine ||| resource $context	count=1
function_name	zurück welches ||| key	count=1
namespace	zu einer julianischen ||| function	count=1
function_name	numerisches ||| row	count=1
function_name	verweist oder ||| next	count=1
arg_pair	die funktion openssl_pkcs7_sign() signiert ||| string $extracerts	count=1
arg_pair	den ||| resource $pdfdoc long $doc	count=2
function	[function_name_1] zugehörenden datenstrukturen ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
namespace	das nächste attribut ||| xmlreader	count=1
namespace	aufruf ||| soapclient	count=1
namespace	angegebenen daten an die ||| function	count=1
arg_pair	das in month ||| int $month	count=2
function_name	handle ||| remove handle	count=2
arg_pair	berücksichtigung des modulo modulus ||| int $scale	count=1
function_name	[function_name] and ||| [function_name] channel	count=3
arg_pair	empfängt len bytes ||| int $len int $flags	count=1
namespace	ausführung für die ||| function	count=1
function_name	das kind ||| pcntl	count=1
function_name	verweist ||| to	count=2
function	persistente [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	wartet ob ||| socket select	count=1
arg_pair	legt ||| int $value	count=1
function_name	sicherheitseinstellungen ||| security prefs	count=1
function_name	von ein oder mehreren ||| add function	count=1
function_name	[function_name] sequence spezifizerten ||| [function_name]	count=1
function_name	[function_name] der ||| [function_name]	count=2
arg_pair	übergebenen parametern zu erzeugen ||| string $stmtname	count=1
function_name	fdf dokuments fest ||| fdf set	count=1
arg_pair	baut eine verbindung ||| string $username	count=1
function_name	verwendung ||| index	count=1
function_name	[function_name_1] template ||| [function_name_1] [function_name_2]	count=1
namespace	die zuordnungen zwischen schlüssel ||| function	count=2
namespace	mit der standardmässigen ||| function	count=1
function_name	ruft informationen ||| multi info	count=1
function_name	element ||| move to next	count=1
arg_pair	transformationen mittels xsltprocessor ||| string $namespace	count=1
function_name	definierten funktionen zurück ||| get	count=1
namespace	gesetzt der ||| function	count=1
arg_pair	rundet den parameter val ||| int $precision	count=1
function_name	private schlüssel zum ||| check private key	count=2
function_name	darin enthaltenen einstellungen ||| parse ini	count=1
arg_pair	gegebenen plaintext mit ||| string $plaintext	count=1
function_name	[function_name_1] ein physisches ||| [function_name_2] [function_name_1]	count=1
function_name	setzt das flag o_nonblock ||| socket set	count=1
arg_pair	einer [arg_pair] ||| [arg_pair]	count=2
function_name	speicher frei ||| mysql free	count=1
arg_pair	länge ||| int $length	count=1
function_name	den zeiger auf das ||| move	count=1
function_name	für [function_name] angegebenem ||| [function_name]	count=1
arg_pair	nach schlüsseln in ||| array $array	count=1
arg_pair	ihren ||| array $except int $tv_sec	count=1
function_name	ein soap-aufruf fehlgeschlagen ||| soap fault	count=1
arg_pair	nimmt ||| array $except int $tv_sec	count=1
namespace	socket-verbindung zu der ||| function	count=1
namespace	den teil [namespace] ||| [namespace]	count=1
arg_pair	wartet ob diese ||| array $write	count=1
arg_pair	png -datei aus ||| int $quality int $filters	count=1
namespace	von array auf ||| function	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] mixed $data [arg_pair_1]	count=3
namespace	die metadaten zu der ||| function	count=1
arg_pair	in ||| resource $p	count=1
arg_pair	die daten ||| string $data	count=1
arg_pair	text und ||| string $text string $optlist	count=1
arg_pair	erstellt ein ||| string $node_name	count=1
function_name	tabelle [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	[arg_pair] namen ||| [arg_pair]	count=2
function_name	das feld mit ||| field	count=1
function_name	dbx_query() ||| dbx	count=1
function_name	ein verzeichnis ||| mkdir	count=1
arg_pair	openssl_seal() verschlüsselt data ||| string $data string $sealed_data	count=1
function_name	statusinformationen ||| status	count=1
function_name	private schlüssel [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	ob diese ihren status ||| function	count=1
function_name	dbase-datenbank ||| dbase open	count=2
arg_pair	und ||| array $except	count=1
return	als ||| int	count=1
namespace	w+ und [namespace] einen ||| [namespace]	count=1
namespace	ändern ||| function	count=1
function_name	zeitpunkt wann der ||| filemtime	count=1
function_name	bereitet ihn zur nutzung ||| pkey get private	count=1
namespace	mit der funktion fgets() ||| function	count=1
function_name	abonnement des ||| imap unsubscribe	count=1
function_name	schlüssel zum [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	setzt ||| move	count=1
return	löscht ||| bool	count=2
function_name	flags für ||| clearflag full	count=1
arg_pair	eine datenzeile ||| resource $result_identifier int $fetch_flag	count=1
return	kopfelementen und den ||| string	count=1
arg_pair	wartet ob ||| array $read	count=1
arg_pair	mit flag ||| string $flag	count=1
namespace	dann liefert [namespace] ||| [namespace]	count=3
namespace	die gleichen optionen ||| function	count=1
arg_pair	optionen zu einem ||| resource $pdfdoc	count=1
function	[function_name_1] in envelope ||| [arg_pair_2] [function_name_1]	count=1
function_name	die texte ||| bind textdomain codeset	count=1
function_name	dom ||| dom	count=1
function_name	ob diese ihren status ||| socket select	count=1
function_name	[function_name_1] funktionen zurück ||| [function_name_1] [function_name_2]	count=2
function_name	pcos-pfades vom ||| pdf pcos	count=2
namespace	deren konstanten in der ||| function	count=1
arg_pair	postgresql database ||| string $data	count=1
namespace	inhalte der datei ||| function	count=1
function	[function_name_1] dessen dessen ||| [function_name_1] create resource $connection [arg_pair_2]	count=1
arg_pair	den ||| resource $p string $key	count=1
function_name	[function_name_1] option option ||| [function_name_2] [function_name_1]	count=2
arg_pair	an den ingres-server ||| string $types	count=2
namespace	der übergebenen ||| function	count=3
function_name	kennwortstärke ||| crack check	count=1
function_name	ihn zur nutzung durch ||| openssl pkey get private	count=1
function	[function_name_1] die in ||| [function_name_1] [arg_pair_2]	count=1
namespace	oder von ||| function	count=1
arg_pair	die aktuelle domain für ||| string $msgid1	count=1
function_name	handle ||| multi remove handle	count=2
arg_pair	arrays mit zusätzlicher ||| array $array1	count=1
function_name	benutzten fehlerbehandlung zurückzukehren ||| restore error handler	count=1
arg_pair	size angegebene größe ||| int $size	count=1
arg_pair	filename und untersucht ||| string $filename	count=1
namespace	der die verbindungsart ||| function	count=1
function_name	pem-kodiert versehene repräsentation ||| pkey export to file	count=1
namespace	über die die angegebene ||| function	count=1
arg_pair	zugriffsrechte für ein ||| string $id string $rights	count=1
namespace	angegebene anzahl von mikrosekunden ||| function	count=1
function_name	liest ein zeichen ||| read char	count=2
function_name	produkt ||| product	count=1
arg_pair	dieser methode ist missbilligt ||| string $function_name string $arguments	count=1
function_name	das ||| move	count=1
function_name	auf das nächste attribut ||| to next	count=1
function_name	diese funktion ||| extensions	count=1
function_name	texte von ||| bind textdomain codeset	count=1
function_name	öffnet eine dbase-datenbank ||| dbase	count=1
function_name	versehene repräsentation des ||| to	count=1
function_name	session ||| session	count=1
function_name	[function_name_1] csr zertifikatssignierungsanfrage ||| [function_name_2] [function_name_1]	count=6
function_name	persistente verbindung ||| ingres pconnect	count=1
return	dass ||| int	count=1
function_name	gibt die unterschiede ||| diff	count=2
function_name	[function_name_1] option option ||| [function_name_1] [function_name_2]	count=2
function_name	benutzerdefinierten vergleichsfunktion ||| usort	count=1
namespace	server der mit der ||| function	count=1
function_name	[function_name_1] queue ||| [function_name_2] [function_name_1]	count=1
function_name	versucht ||| load extension	count=2
function_name	semaphor ||| sem	count=4
function_name	ersetzt in einer ||| replace	count=1
function_name	identifier oid [function_name] eingefügten datensatzes ||| pg [function_name]	count=1
function_name	den zeiger ||| move to	count=1
arg_pair	über den port port ||| int $port	count=1
function_name	namen [function_name_2] ||| [function_name_2] [function_name_1]	count=20
function_name	als die zugehörigen ||| combine	count=1
function_name	bestimmten zeile ||| fetch	count=1
function_name	session und [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	übergebenen zeichenkette [namespace] ||| [namespace]	count=3
function_name	tabellennamen ||| list tables	count=2
arg_pair	zeichensatz in_charset ||| string $in_charset	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pdi resource $pdfdoc [arg_pair_2]	count=1
namespace	der ausschließlich zeichen ||| function	count=1
function_name	[function_name_1] einer mysql ||| [function_name_2] [function_name_1]	count=6
function_name	nach ||| fdf next	count=1
namespace	zeiger von array ||| function	count=1
function_name	format utf-32 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	source nach ||| string $source	count=1
function_name	der msql ergebnismenge die ||| msql data	count=1
function_name	v message [function_name] werden kann ||| msg get [function_name]	count=1
function_name	die kopfdaten der nachricht ||| imap headerinfo	count=1
function_name	die des voherigen angehängt ||| merge recursive	count=1
function_name	potenz von ||| pow	count=1
arg_pair	den ||| resource $imap_stream string $ref	count=1
namespace	zurück [namespace] dem ||| [namespace]	count=1
namespace	sie aus [namespace] ||| [namespace]	count=3
arg_pair	oder einen ||| resource $pdfdoc	count=1
arg_pair	file_get_contents() die datei ||| bool $use_include_path	count=1
function_name	feldtyp stattdessen zurückgeliefert ||| fbsql field type	count=3
namespace	setzt alle parameter die ||| function	count=1
arg_pair	tabelle [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	zeichen im [arg_pair] ||| [arg_pair]	count=3
arg_pair	die mit size angegebene ||| int $size	count=1
arg_pair	oder ||| int $major	count=1
namespace	zeichen begrenzt wird ||| function	count=1
arg_pair	image oder gibt ||| string $filename	count=1
namespace	verweist oder aufs erste ||| xmlreader	count=1
function_name	und spalte [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	auch dies keine wirkliche ||| function	count=1
function_name	ein grafikzustandsobjekt ||| gstate	count=2
arg_pair	v8js -kontexten benutzt werden ||| array $dependencies bool $auto_enable	count=1
namespace	von rc4 mit ||| function	count=1
arg_pair	socket len bytes ||| int $len int $flags	count=1
arg_pair	und die ||| resource $link array $options	count=1
return	der aufruf dieser ||| mixed	count=1
namespace	der an allen ||| function	count=1
arg_pair	zweite in ||| string $data int $mode	count=1
return	auf ||| resource	count=1
function_name	festgelegten ||| substr	count=1
arg_pair	status ändern ||| array $write	count=1
namespace	ändert die ||| function	count=1
function_name	er auf ein element ||| to	count=1
arg_pair	daten ||| string $data string $encoding	count=1
function_name	handle von ||| remove handle	count=1
function_name	für ||| set	count=1
function_name	eindeutige id ||| uniqid	count=1
function_name	diese funktion gibt ||| get extensions	count=2
function_name	zeiger ||| to	count=1
arg_pair	um eine low-level-api-funktion um ||| mixed $input_headers	count=1
function_name	das ||| move to	count=1
namespace	liefert die der ||| function	count=1
function_name	datei ||| x509 export to file	count=1
function_name	versehene repräsentation des schlüssels ||| openssl pkey export to file	count=1
return	ist ||| mixed	count=3
namespace	die weitere verwendung ||| function	count=1
function_name	ein ||| move	count=2
arg_pair	des postfachs old_mbox ||| string $old_mbox	count=1
return	zurück die auf dem ||| bool	count=1
function	dom [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	und wartet ob ||| array $except	count=1
namespace	umask von ||| function	count=1
function_name	flags für die ||| imap clearflag full	count=1
return	liefert ein assoziatives array ||| array	count=1
function_name	fehlercode ||| strerror	count=1
function_name	interfaces ||| interfaces	count=1
function_name	extension definierten funktionen ||| get extension funcs	count=2
return	gibt [return] informationen über ||| [return]	count=1
namespace	sondern ||| function	count=1
namespace	der aufruf dieser methode ||| soapclient	count=1
namespace	der die verbindungsart von ||| function	count=1
return	zeichenkette haystack ab dem ||| string	count=1
function_name	aktiviert ein grafikzustandsobjekt ||| pdf set gstate	count=1
function_name	das gegenstück zu ||| decode	count=1
namespace	zu ||| function	count=3
function_name	jedes zeichen in ||| ctype	count=3
function_name	inklusive den knoten selbst ||| outer xml	count=1
arg_pair	key und ||| mixed $key string $passphrase	count=1
arg_pair	groß- und kleinschreibung ||| string $str1 string $str2	count=1
namespace	keine wirkliche funktion ||| function	count=1
return	eines skripts beenden soll ||| int	count=1
function_name	__autoload() () ||| spl autoload extensions	count=1
function_name	fehlermeldung an das fehlerprotokoll ||| error	count=1
arg_pair	gegebenen plaintext ||| string $plaintext	count=1
function_name	entfernt leerraum oder andere ||| ltrim	count=1
function_name	repräsentation ||| to file	count=2
function_name	das übergebene interface definiert ||| interface exists	count=1
function_name	ermittelt den [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	erstellt ein ||| string $type_name string $type_namespace	count=1
function_name	zwischen 0 [function_name] 1 ||| [function_name] setgray	count=2
return	aufruf dieser methode ||| mixed	count=1
arg_pair	ist) und liest sie ||| string $name	count=1
namespace	die entsprechende dezimaldarstellung ||| function	count=1
function	löscht eine [arg_pair_2] ||| [function_name_1] pvf resource $pdfdoc [arg_pair_2]	count=1
namespace	das koordinatensystem ||| function	count=1
arg_pair	replacement angegebenen zeichenkette ||| mixed $string mixed $replacement	count=1
namespace	gibt gibt die ||| function	count=1
function_name	[function_name_1] spalte eines ||| [function_name_1] [function_name_2]	count=3
function_name	aufs ||| move to	count=1
return	zeichenkette haystack ||| string	count=1
function	[function_name_1] postfachs mailbox ||| [arg_pair_2] [function_name_1]	count=1
function_name	datenbank ||| dbase add record	count=2
function_name	ergebnismenge zurück ||| ingres	count=1
function_name	persistente verbindung zu einem ||| pconnect	count=1
arg_pair	key und bereitet ||| mixed $key	count=1
arg_pair	den wert des /status ||| resource $fdf_document string $status	count=1
function	platziert [arg_pair_2] ||| [function_name_1] textline [arg_pair_2]	count=1
function_name	aller definierten funktionen ||| get defined functions	count=1
namespace	dem server die ||| function	count=1
function_name	flags ||| full	count=2
namespace	ob diese ihren ||| function	count=1
function_name	entsprechnde datum im julianischen ||| jdtojulian	count=1
function_name	spalte eines [function_name_2] ||| [function_name_2] fetch [function_name_1]	count=2
return	auf neue verbindungen ||| resource	count=1
namespace	wartet ob diese ihren ||| function	count=1
arg_pair	property in ||| string $property	count=1
function_name	gregorianischen kalender ||| gregoriantojd	count=1
arg_pair	speichert eine datei ||| string $filename	count=1
arg_pair	den ||| resource $p string $spotname	count=1
function_name	ipv4-adresse ||| gethostbyname	count=1
arg_pair	table_name in einem ||| resource $connection string $table_name	count=1
function_name	schließt das geöffnete ||| close	count=1
arg_pair	zugriffsrechte für [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	zur basis base falls ||| log	count=1
function_name	mime-konforme nachricht aus ||| imap mail compose	count=1
arg_pair	skaliert ||| float $sx float $sy	count=1
arg_pair	angegebenen trennzeichens um ||| bool $cut	count=1
arg_pair	übergebene hash ||| string $hash	count=1
arg_pair	socket socket len bytes ||| int $len	count=1
arg_pair	am angebenen offset ||| resource $context int $offset	count=1
namespace	der liste ||| function	count=1
function_name	iso-8859-1 -kodierung oder ||| sqlite libencoding	count=1
function_name	binäre guid ||| guid string	count=1
namespace	ist zu der übergebenen ||| function	count=1
arg_pair	und konvertiert ||| string $table_name	count=1
arg_pair	offset über bis ||| resource $context int $offset	count=1
namespace	der unter verwendung ||| function	count=1
function_name	one or [function_name] ||| maxdb [function_name]	count=1
namespace	wird aufgerufen um die ||| function	count=1
arg_pair	wird zum sortieren ||| mixed $array1_sort_order	count=1
function_name	nächste ||| to	count=1
function_name	ruft informationen oder nachrichten ||| curl multi info	count=1
function	abschnitts [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	einem ||| resource $pdfdoc	count=1
arg_pair	flag ||| int $options	count=1
namespace	nächste attribut ||| xmlreader	count=1
namespace	[namespace] aktuellen ||| [namespace]	count=3
function_name	setzt das flag ||| socket set	count=1
arg_pair	funktion openssl_pkcs7_sign() signiert ||| int $flags	count=1
namespace	die rot13-transformation auf die ||| function	count=1
function_name	eine http-anfrage [function_name] ||| get [function_name]	count=1
function_name	ispell-daten ||| ispell data	count=1
function_name	format utf-32 ||| pdf utf32	count=1
function_name	binäre guid ||| mssql guid	count=1
arg_pair	die in charlist ||| string $charlist	count=1
function_name	gibt die anzahl der [function_name_1] [function_name_2] zurück ||| [function_name_2] [function_name_1]	count=2
arg_pair	angegebenen trennzeichens um ||| string $break bool $cut	count=1
return	für den ||| resource	count=1
function_name	basistyp [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	übergebene hash ||| string $hash string $algo	count=1
function_name	gibt die vorhergehende ||| get previous	count=1
function_name	funktion dio_stat() gibt informationen ||| stat	count=1
function_name	verbindung zu einem mysql ||| mysql	count=1
arg_pair	len bytes ||| int $flags	count=2
arg_pair	wird zum sortieren ||| array $array1 mixed $array1_sort_order	count=1
arg_pair	nummer msg_number ||| int $msg_number	count=1
function_name	und bereitet ||| pdf	count=1
function_name	einen pdf-block mit ||| pdf fill pdfblock	count=2
function_name	erweiterung ||| extension	count=1
namespace	nachdem der ||| function	count=1
arg_pair	gibt den input ||| string $input int $pad_length	count=1
arg_pair	von domain von ||| string $domain string $codeset	count=1
namespace	sqlite ||| sqlite3	count=1
namespace	unter verwendung ||| ziparchive	count=1
function_name	nächste attribut wenn er ||| move to	count=1
function_name	bzip2-dateistream ||| bzwrite	count=1
function_name	ergebnis als integer-wert zurück ||| bccomp	count=1
function_name	[function_name_1] mime-codierte headerzeilen ||| [function_name_2] [function_name_1]	count=2
namespace	der mit der ergebniskennung ||| function	count=1
function_name	gid des aktuellen ||| posix setgid	count=1
function_name	erzeugt ||| posix mknod	count=2
function_name	session und ||| session	count=1
function_name	query ||| unbuffered query	count=1
arg_pair	ihren status ändern ||| array $read array $write	count=1
namespace	nach schlüsseln wobei die ||| function	count=1
namespace	zum systemaufruf von ||| function	count=1
function_name	client für ||| client encoding	count=1
arg_pair	und kleinschreibung ||| string $str1 string $str2	count=1
namespace	auf [namespace] in ||| [namespace]	count=1
function_name	lokalen schnittstellen ||| socket create listen	count=1
arg_pair	array mittels glue zu ||| string $glue	count=1
function_name	zur nutzung durch ||| pkey get private	count=1
return	das nächste ||| bool	count=1
function_name	sinus des winkels ||| sin	count=1
namespace	speichert [namespace] ||| [namespace]	count=1
return	löscht einen archiveintrag ||| bool	count=1
function_name	oder ||| next	count=1
arg_pair	und kleinschreibung berücksichtigt ||| string $str1 string $str2	count=1
namespace	kalender der ||| function	count=1
function_name	die als ||| create function	count=2
function_name	extension definierten ||| get extension funcs	count=2
function_name	[function_name_1] ressource ist ||| [function_name_2] [function_name_1]	count=2
return	des servers ||| int	count=1
arg_pair	ihren status ändern ||| array $read	count=1
function_name	typ string ist ||| is string	count=1
arg_pair	in [arg_pair_2] ||| [arg_pair_1] string $script [arg_pair_2]	count=2
function_name	die syntax lint ||| php check syntax	count=1
function_name	utf-32 nach utf-16 ||| utf32 to utf16	count=1
arg_pair	replacement angegebenen ||| mixed $replacement	count=1
namespace	der gegebenen ergebnismenge ||| function	count=1
arg_pair	datensätze aus table_name deren ||| string $table_name	count=1
namespace	liste der betroffenen funktionen ||| function	count=1
function_name	die verbindungsoptionen ||| options	count=1
function_name	verworfen ||| end clean	count=1
arg_pair	message übergebene ||| string $message	count=1
function_name	erzeugt eine ||| posix	count=1
namespace	version der ||| function	count=2
function	löscht [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	cursors der mit der ||| function	count=1
function_name	der [function_name] einem ||| pg num [function_name]	count=2
function_name	angegebenen datenbank ||| dbase	count=1
arg_pair	aus array ||| array $array int $case	count=1
arg_pair	ob diese ihren ||| array $read array $write	count=1
function_name	definierten ||| get defined	count=1
namespace	erstellt ||| soapvar	count=1
function_name	platten-partition zurückgeben ||| disk	count=1
function_name	auf ein attribut verweist ||| move to	count=1
return	ein assoziatives array das ||| array	count=1
function_name	[function_name] eine ||| [function_name]	count=1
function_name	einen ||| soap call	count=1
namespace	nachfolgenden schlüssel aus der ||| function	count=1
arg_pair	gibt dessen dessen ||| mixed $object_id	count=1
function_name	liste von tabellennamen ||| list tables	count=1
namespace	[namespace] soll und ||| [namespace]	count=3
arg_pair	die mittels offset ||| int $offset	count=1
namespace	die die angegebene ||| function	count=1
function_name	verzerrt ||| skew	count=1
function	persistente [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	gibt die unterschiede zurück ||| diff	count=2
arg_pair	eine gewöhnliche datei ||| int $major int $minor	count=1
function_name	gleichen algorithmus ||| password	count=1
return	ein array aus strings ||| array	count=1
arg_pair	zeichenkette subject ||| mixed $subject	count=1
arg_pair	[arg_pair_1] ohne auf ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	zurück in der alle ||| function	count=1
arg_pair	um alpha bzw ||| resource $p float $alpha	count=1
namespace	identisch mit der funktion ||| function	count=1
function_name	die php-variable ||| bind array	count=1
function_name	versehene repräsentation des schlüssels ||| pkey export to	count=1
arg_pair	bson ||| array $typemap	count=1
function_name	wurde ||| proc get status	count=2
function_name	erste attribut im element ||| move to first attribute	count=1
return	nächste attribut ||| bool	count=1
arg_pair	funktion ||| string $name mixed $callback	count=1
return	liefert [return] imap ||| [return]	count=1
function_name	[function_name_1] zum zertifikat ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] für ||| [function_name_2] [function_name_1]	count=2
function_name	funktion dio_stat() ||| stat	count=1
arg_pair	domain von gettext() ||| string $domain string $codeset	count=1
function_name	namen eines feldes ||| field name	count=3
function_name	von ein oder mehreren ||| function	count=1
function	anwendung [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
arg_pair	den ingres-server ||| array $params string $types	count=2
arg_pair	section angebenen ||| string $section	count=1
function_name	[function_name] in ||| [function_name]	count=6
function_name	den zeiger ||| next	count=1
function_name	das produkt ||| array product	count=1
arg_pair	angegebene directory vom ftp-server ||| string $directory	count=1
arg_pair	gibt den input -string ||| string $input int $pad_length	count=1
function_name	der die verbindungsoptionen ||| options	count=1
namespace	der letzten änderung des ||| function	count=1
function_name	dbase-datenbank im ||| dbase	count=1
arg_pair	hängt die ||| array $record	count=1
namespace	ob die ||| function	count=1
arg_pair	zeichenkette ||| object $link_identifier string $text	count=1
namespace	mit den schlüsseln die ||| function	count=1
arg_pair	die länge ||| int $length	count=1
arg_pair	mailbox ||| string $mailbox	count=1
arg_pair	funktion openssl_pkcs7_sign() signiert die ||| int $flags	count=1
function_name	legt die aktuelle ||| pdf	count=1
namespace	werden um informationen ||| function	count=1
namespace	ein attribut ||| xmlreader	count=1
function_name	tabelle vollständig oder ||| table	count=1
function_name	attribut ||| move to next	count=2
function_name	bindung für [function_name] angegebenem ||| [function_name]	count=1
function_name	ohne löschung ||| contents	count=1
namespace	bis zum ende von ||| function	count=1
arg_pair	[arg_pair_1] postfachs old_mbox ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=3
arg_pair	setzt die mit flag ||| string $flag	count=1
function_name	frei ||| free key	count=1
function_name	v message [function_name] ||| msg get [function_name]	count=1
function_name	ein attribut ||| to next	count=1
arg_pair	funktion openssl_seal() verschlüsselt data ||| string $data string $sealed_data	count=1
namespace	eine benannte ressource die ||| function	count=1
namespace	des aktuellen knoten ||| xmlreader	count=1
arg_pair	abfrage aus ||| resource $query mixed $bind_arg	count=1
function_name	erzeugt ein grafikzustandsobjekt unter ||| create gstate	count=1
namespace	mit der ergebniskennung verknüpft ||| function	count=1
namespace	daten der ||| function	count=1
arg_pair	unter anwendung verschiedener optionen ||| resource $pdfdoc string $optlist	count=2
arg_pair	und ||| array $read array $write	count=1
namespace	aktuellen zeichensatzes der verbindung ||| function	count=1
function_name	exportiert die [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	das produkt von ||| product	count=1
arg_pair	uid ||| int $uid	count=1
function_name	und wartet ob diese ||| socket	count=1
function_name	auf ein attribut ||| move to	count=1
arg_pair	ändern ||| array $except	count=1
namespace	versucht die ||| sqlite3	count=1
function_name	der kind-knoten und markup ||| inner xml	count=1
arg_pair	diese ihren status ändern ||| array $except	count=1
function_name	andere stelle des aktuellen ||| pdf	count=1
arg_pair	len bytes von ||| int $flags	count=1
function_name	verwendung ||| delete index	count=2
arg_pair	zur angegebenen verbindungskennung link_identifier ||| string $query resource $link_identifier	count=1
arg_pair	[arg_pair_1] ein ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	[function_name_1] postgresql servers ||| [function_name_2] [function_name_1]	count=4
arg_pair	[arg_pair_1] einen soap-aufruf ||| [arg_pair_2] [arg_pair_1]	count=6
arg_pair	-dokuments in einen simplexml-knoten ||| domnode $node string $class_name	count=1
arg_pair	eine spezielle ||| int $major	count=1
arg_pair	input -string erweitert ||| string $input int $pad_length	count=1
namespace	[namespace] pg_send_query() ||| [namespace]	count=1
arg_pair	directory vom ftp-server ||| resource $ftp_stream string $directory	count=1
arg_pair	diese funktion ||| string $string	count=1
namespace	[namespace] pg_send_query() pg_send_query_params() ||| [namespace]	count=1
namespace	der funktion fgets() ||| function	count=1
return	angegebene verbindung und gibt ||| bool	count=1
arg_pair	eine datei ||| string $filename	count=2
arg_pair	baut ||| string $servername	count=1
function_name	baum von zusammenhängenden nachrichten ||| imap thread	count=1
namespace	die ein ||| function	count=1
arg_pair	ein ||| string $type_name	count=1
function_name	feldes ||| field	count=2
namespace	kann entweder mit der ||| function	count=1
namespace	der allen zeichen die ||| function	count=1
arg_pair	anwendung verschiedener optionen ||| resource $pdfdoc string $optlist	count=2
function_name	fdf dokuments ||| fdf set	count=1
namespace	der inhalt einer ||| function	count=1
function_name	zertifikat um festzustellen ||| openssl x509 checkpurpose	count=1
namespace	der division ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2] resource	count=1
function_name	die ||| load	count=1
function_name	unter anwendung ||| ext	count=1
arg_pair	in ||| int $depth int $options	count=1
arg_pair	die funktion ändert [arg_pair_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	teils ||| bodystruct	count=1
function_name	den ||| string	count=1
arg_pair	diese funktion sortiert ||| callable $value_compare_func	count=1
arg_pair	beginnend am angebenen offset ||| resource $context int $offset	count=1
function_name	funktion ||| list	count=1
arg_pair	datei zum ||| string $filename	count=1
namespace	der tabelle zurück aus ||| function	count=1
function_name	message ||| msg set	count=1
arg_pair	gegebenen key benutzt werden ||| int $key	count=1
function_name	ermittelt den momentanen status ||| fbsql db status	count=1
function_name	get_defined_vars() aufgerufen ||| vars	count=1
function_name	erzeugt eine ||| posix mknod	count=1
return	wirkliche funktion sondern ||| array	count=1
function_name	ersetzt in ||| replace	count=3
arg_pair	als ||| array $read	count=1
arg_pair	in offset ||| int $length	count=1
function_name	letzte insert update oder ||| mysql affected rows	count=1
arg_pair	länge ||| int $start int $length	count=1
function_name	gegebenen extension definierten ||| get extension funcs	count=2
namespace	wirkliche funktion sondern ein ||| function	count=1
function_name	ermittelt den momentanen ||| fbsql db	count=1
arg_pair	angegebenen verbindungskennung link_identifier gehört ||| string $query resource $link_identifier	count=1
namespace	der funktion ||| function	count=1
arg_pair	angegebenen ||| resource $ftp_stream string $remote_file	count=1
function	binäre guid [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	einer postgresql-datenbank ||| string $connection_string	count=1
arg_pair	zu hostname passen ||| string $hostname	count=1
function_name	client-verbindung die weitere abarbeitung ||| ignore user abort	count=1
arg_pair	allerdings wandelt htmlentities() ||| string $encoding	count=1
function_name	[function_name_1] abfrageergebnis ||| [function_name_2] [function_name_1]	count=2
arg_pair	namen zu erstellen ||| resource $context	count=1
function_name	wenn er auf ||| to next	count=1
function_name	der angeforderten [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	in month day ||| int $day	count=2
function_name	status ||| socket	count=1
function_name	liefert das mysql protokoll ||| mysql get proto info	count=1
arg_pair	performance zu bieten ||| bool $clear_realpath_cache string $filename	count=1
function_name	lokalisiert ||| locate	count=1
namespace	mit [namespace] ||| [namespace]	count=1
function_name	des feldes ||| field	count=6
arg_pair	diese ihren ||| array $except	count=1
arg_pair	ist ||| string $function_name	count=1
function_name	tabelle und ||| table	count=1
arg_pair	von einer ||| int $row	count=1
function_name	attribut wenn er ||| move to next attribute	count=1
arg_pair	text ||| string $text	count=1
arg_pair	gibt den unix-timestamp entsprechend ||| int $minute	count=1
namespace	dass die mit ||| function	count=1
arg_pair	baut ||| string $username	count=1
arg_pair	unserializes a bson ||| string $bson	count=1
namespace	funktion gibt die namen ||| function	count=1
function_name	versehene repräsentation des ||| export to	count=1
function_name	sql-kommando ||| pg convert	count=2
function_name	pdf-seite [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	des attributes ||| attribute ns	count=1
function_name	char_list ||| strpbrk	count=1
arg_pair	msglist ||| string $msglist	count=1
function_name	löscht eine ||| delete	count=1
arg_pair	alle zugehörenden datenstrukturen ||| int $table	count=1
function_name	ein attribut verweist ||| move to next	count=1
function_name	entfernt whitespaces am ||| trim	count=1
arg_pair	ermittelt die schnittmenge von ||| array $array2	count=1
function_name	lokalisiert einen ||| locate	count=1
function_name	funktion socket_set_nonblock() setzt das ||| set nonblock	count=1
namespace	mit der ergebniskennung ||| function	count=1
function_name	[function_name] möglich ist ||| [function_name]	count=3
function_name	ein neues v8js ||| construct	count=1
namespace	die verbindung zu der ||| function	count=1
function_name	ersetzt in der ||| dba replace	count=1
namespace	gibt die darin enthaltenen ||| function	count=1
function_name	archiveintrag unter verwendung seines ||| delete	count=1
function_name	der wert des attributes ||| attribute	count=1
function_name	versehene repräsentation ||| export to file	count=1
function	[function_name_1] mailbox beenden ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	field_offset einer ergebnismenge ||| int $field_offset	count=1
namespace	mit der standardmässigen fehlerbehandlung ||| function	count=1
arg_pair	von cc ||| string $cc	count=1
arg_pair	den ||| resource $pdfdoc	count=4
function_name	status ||| socket select	count=2
function_name	tty namen zurück ||| pg tty	count=1
return	ausführung ||| void	count=1
namespace	die schreib-/leseposition der ||| function	count=1
function_name	repräsentation des ||| pkey export to	count=1
function_name	diese funktion beendet ||| close	count=1
return	[return] sollte ||| [return]	count=1
arg_pair	verschiedener optionen ||| string $optlist	count=3
arg_pair	key ||| mixed $key	count=1
function	[function_name_1] key ||| [arg_pair_2] [function_name_1]	count=2
namespace	und der ausgabepuffer ||| function	count=1
function_name	flags bei ||| full	count=1
function_name	[function_name_1] und bereitet ||| [function_name_2] [function_name_1]	count=2
function_name	md5-code einer datei ||| md5 file	count=1
arg_pair	den ||| resource $ch	count=1
namespace	durchsucht die zeichenkette ||| function	count=1
function_name	der das feld ||| field	count=1
function_name	funktionen), ob ||| exists	count=1
function_name	zeiger auf das ||| next	count=1
arg_pair	feld zurück ||| string $fieldname	count=1
function_name	spezielle oder ||| mknod	count=1
function_name	zeilen in [function_name_2] ||| function int [function_name_2] [function_name_1]	count=2
function_name	vergleich einfließen sollen ||| strncasecmp	count=1
namespace	fließkommarest der ||| function	count=1
arg_pair	in purpose ||| mixed $x509cert int $purpose	count=1
namespace	array() ist auch ||| function	count=1
function_name	ob das übergebene interface ||| interface	count=1
function_name	zeilen ||| fetch	count=2
arg_pair	mailbox ||| resource $imap_stream string $mailbox	count=1
function_name	cpu zurück ||| posix times	count=1
arg_pair	filename übergeben wurde ||| bool $raw_output	count=1
function_name	setzt den zeiger auf ||| move to next	count=1
function_name	eine dbase-datenbank im angegebenen ||| dbase open	count=1
function_name	den ||| next	count=1
function_name	ist auch dies keine ||| list	count=1
function_name	[function_name_1] fehlermeldung ||| [function_name_1] [function_name_2]	count=3
function_name	zuletzt ausgeführten ||| error	count=1
function_name	linienenden bestimmt ||| pdf setlinecap	count=1
namespace	zeichen die von ||| function	count=1
arg_pair	des schlüssels key ||| mixed $key	count=1
function_name	spezielle oder ||| posix mknod	count=1
function_name	die nächste zeile ||| fetch	count=1
arg_pair	und ||| array $write	count=1
namespace	in [namespace] ||| [namespace]	count=4
function_name	funktion socket_set_nonblock() setzt ||| set nonblock	count=1
namespace	der c version der ||| function	count=1
function_name	oktal kodierten eingabestring ||| octdec	count=1
function_name	large object und ||| pg lo	count=1
arg_pair	mit size ||| int $size	count=1
namespace	der ||| soapclient	count=1
namespace	seit beginn der ||| function	count=1
arg_pair	zu erstellen ||| resource $context	count=1
arg_pair	den angegebenen ||| resource $imap_stream	count=1
function_name	den angegebenen [function_name] frei wenn ||| [function_name]	count=1
arg_pair	ein postfach ||| string $mailbox	count=1
function_name	ldap verzeichnis mit ||| ldap	count=1
function_name	nachricht ||| imap headerinfo	count=2
return	[return] informationen über ||| [return]	count=1
arg_pair	die [arg_pair_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	letzten löschen der ||| function	count=1
function_name	auf ein attribut ||| to	count=1
function_name	welcher das feld ||| msql field	count=1
function_name	http-anfrage [function_name] ||| get [function_name]	count=1
namespace	der festplatte liegendes ||| function	count=2
namespace	der ergebnismenge die ||| function	count=1
namespace	hilfsfunktion die die ||| function	count=1
namespace	und gibt die konvertierte ||| function	count=1
namespace	inhalt der ||| function	count=3
function	[function_name_1] zugehörenden datenstrukturen ||| [arg_pair_2] [function_name_1]	count=1
function	anwendung [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	von array verschiebt ||| function	count=1
function_name	schrift ||| load font	count=2
namespace	attribut ||| xmlreader	count=2
function_name	erste attribut wenn ||| next attribute	count=1
namespace	holt die nächste reihe ||| function	count=1
arg_pair	den namen [arg_pair_2] ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=3
namespace	process der mittels ||| function	count=1
function_name	des feldes nach ||| fdf next field	count=2
function_name	gibt die letzte ||| pg last	count=1
arg_pair	löscht wenn gesetzt den ||| string $namespaceuri string $localname	count=1
function_name	binär-zeichenkette ||| pack	count=1
namespace	von einem resulthandle ||| function	count=1
arg_pair	die funktion callback iterativ ||| callable $callback	count=1
function_name	und ||| select	count=1
arg_pair	den string haystack nach ||| string $haystack	count=1
function_name	diese ||| select	count=1
namespace	deren inhalt der ||| function	count=1
function_name	oder aufs erste ||| to	count=1
function_name	grafikzustandsobjekt ||| set gstate	count=2
arg_pair	old_mbox ||| string $old_mbox	count=1
function_name	den verbindungsstatus als bitfeld ||| connection status	count=1
function_name	zeilen in einem abfrageergebnis ||| rows	count=1
function_name	ergebnisse zu warten ||| send	count=1
arg_pair	mittels offset und ||| int $offset	count=1
function_name	extension [function_name_2] ||| [function_name_2] [function_name_1]	count=6
return	der ||| mixed	count=1
namespace	[namespace] aktuelle ||| [namespace]	count=3
namespace	und die ||| function	count=1
arg_pair	openssl_seal() verschlüsselt data unter ||| string $data	count=1
function_name	gesuchten ||| strripos	count=1
function_name	und wartet ob ||| select	count=1
namespace	der von übergebenen ||| function	count=1
function_name	vom typ float ist ||| is float	count=1
arg_pair	vollständig oder teilweise auf ||| float $urx float $ury	count=1
function	texte von [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	schlüssels key in ||| mixed $key	count=1
arg_pair	ob diese ihren ||| array $read	count=1
function_name	internen datensatz-zeiger eines anfrageergebnisses ||| seek	count=1
arg_pair	skaliert sie ||| float $sx float $sy	count=1
arg_pair	den ||| resource $imap_stream	count=3
arg_pair	nimmt ||| array $write	count=1
return	diese ihren status ändern ||| int	count=1
function_name	das feld ||| field type	count=1
function_name	das entsprechnde datum ||| jdtojulian	count=1
return	stellt eine ||| resource	count=1
namespace	der letzten änderung ||| function	count=1
return	und speichert die änderungen ||| bool	count=1
namespace	werden um informationen über ||| function	count=1
function_name	[function_name_1] das ||| [function_name_1] [function_name_2]	count=1
function_name	auf das ||| move to	count=1
return	erzeugt eine spezielle oder ||| bool	count=1
function	öffnet [arg_pair_2] ||| [function_name_1] pdi [arg_pair_2]	count=1
function_name	setzt ||| next	count=1
arg_pair	dn angegeben ||| resource $privkey	count=1
function_name	platziert [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	entfernten server ||| resource $link_identifier	count=1
function	[function_name_1] datei ||| [function_name_1] pvf resource $pdfdoc [arg_pair_2]	count=1
namespace	spezielle oder ||| function	count=1
namespace	zu setzen oder abzufragen ||| function	count=1
function_name	aufs ||| to next	count=1
arg_pair	die mittels offset und ||| array $array int $offset	count=1
function_name	pdf-block [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	auf ||| resource $connection	count=1
arg_pair	index ||| int $index int $length	count=1
function_name	abschnitts von ||| strspn	count=1
function_name	ihren ||| socket	count=1
arg_pair	ein gmt-datum repräsentieren ||| int $is_dst	count=1
arg_pair	wartet ob ||| array $write	count=1
arg_pair	und als bidirektionaler ||| string $pathname int $mode	count=1
return	setzt den zeiger ||| bool	count=1
arg_pair	definiert ein mit den ||| string $domain	count=1
function_name	guid ||| guid	count=1
arg_pair	funktion gibt den input ||| int $pad_length	count=1
arg_pair	assoc_array entsprechen und ||| array $assoc_array	count=1
function_name	ftp-stream ||| ftp set option	count=1
function_name	verzeichnis mit ||| mkdir	count=1
function_name	den zeiger ||| to next	count=1
arg_pair	oder diese erzeugt ||| int $mode	count=1
namespace	attribut wenn er ||| xmlreader	count=1
namespace	und die fehlermeldung ||| function	count=1
function_name	erste attribut wenn ||| move to next attribute	count=1
arg_pair	bei transformationen mittels xsltprocessor ||| string $name	count=1
function_name	den ||| get number	count=1
arg_pair	datei und ||| string $filename bool $use_include_path	count=1
arg_pair	der aufruf dieser ||| string $function_name	count=1
function_name	platziert ein [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	zufälligen ||| rand	count=1
arg_pair	angegebenen daten data mit ||| string $data	count=1
arg_pair	datei zum ||| string $mode	count=1
arg_pair	ph_name ||| string $ph_name	count=1
function_name	status ||| status	count=2
function_name	neues large object ||| pg lo	count=1
function_name	sqlite-datenbank ||| sqlite factory	count=2
return	ein attribut verweist oder ||| bool	count=1
arg_pair	erstellt ein ||| mixed $data	count=1
arg_pair	späteren verwendung vor ||| string $optlist	count=2
function_name	auf das ||| to	count=1
function	[function_name_1] die in ||| [arg_pair_2] [function_name_1]	count=1
function_name	bereitet ihn zur nutzung ||| openssl pkey get private	count=1
function_name	inhalt ||| pdf get pdi parameter	count=1
namespace	die im ||| function	count=1
namespace	auf ein ||| xmlreader	count=2
arg_pair	in replacement angegebenen zeichenkette ||| mixed $string mixed $replacement	count=1
return	datum in einen ||| string	count=1
arg_pair	erzeugt eine png -datei ||| int $filters	count=1
namespace	ist auch dies keine ||| function	count=1
arg_pair	übertragendes ||| string $path	count=1
arg_pair	mit msglist angegebenen ||| resource $imap_stream string $msglist	count=1
arg_pair	richtung um alpha bzw ||| float $alpha	count=1
namespace	erweitert auf der linken ||| function	count=1
namespace	von php ||| function	count=2
function_name	erzeugt ein [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	eine [function_name] mit ||| [function_name]	count=1
function_name	lädt ||| fput	count=1
function_name	vorhergehende ||| previous	count=1
namespace	liest die ||| function	count=1
namespace	von [namespace] ||| [namespace]	count=3
function_name	message queue ||| msg remove queue	count=1
function_name	ein ||| create from date string	count=2
function_name	pem-kodiert versehene repräsentation des ||| to	count=1
arg_pair	zugriffsrechte [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	pem-kodiert versehene repräsentation des ||| export to	count=1
function_name	tageszahl ||| frenchtojd	count=1
function_name	zurück der die verbindungsoptionen ||| pg options	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] remove [function_name_2]	count=1
function_name	gibt [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	das per x509cert ||| mixed $x509cert	count=1
arg_pair	versucht oldname in ||| string $oldname	count=1
arg_pair	den ||| resource $identifier int $errormode	count=1
namespace	der ergebniskennung verknüpft ist ||| function	count=1
function_name	von zusammenhängenden nachrichten ||| imap thread	count=1
function_name	nächste ||| move to next	count=1
function_name	julianischen tageszahl ||| frenchtojd	count=1
namespace	[namespace] in ||| [namespace]	count=3
function_name	welches ||| key	count=1
arg_pair	erstellt ||| string $type_namespace	count=1
arg_pair	nimmt als ||| array $except int $tv_sec	count=1
function_name	auf das elternelement ||| move to element	count=1
function	kopiert [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	auf das nächste ||| to next	count=1
function_name	[function_name_1] grafikzustandsobjekt ||| [function_name_1] [function_name_2]	count=1
function_name	kind ||| pcntl	count=1
return	und ||| int	count=1
arg_pair	mit flag [arg_pair_2] ||| [arg_pair_2] string $sequence [arg_pair_1]	count=1
return	einen ||| bool	count=1
function_name	[function_name_1] falls ||| [function_name_2] [function_name_1]	count=4
arg_pair	datum in calendar ||| int $calendar int $month	count=1
return	array mit ||| array	count=1
function_name	verweist oder aufs erste ||| move to	count=1
namespace	liefert die ||| function	count=5
function_name	auch dies keine wirkliche ||| list	count=1
namespace	dem letzten löschen der ||| function	count=1
arg_pair	ob ||| array $except	count=1
namespace	[namespace] abbricht ||| [namespace]	count=1
arg_pair	zu übertragendes ||| int $expire	count=1
function_name	füllfarbe ||| fill	count=1
arg_pair	ruft eine datenzeile aus ||| resource $result_identifier int $fetch_flag	count=1
function_name	[function_name_1] tabelle ||| string [function_name_2] [function_name_1] resource	count=1
arg_pair	dezimaltrennzeichen [arg_pair] fließkommazahlen ||| [arg_pair]	count=1
function_name	zwischen 0 [function_name] 1 inklusive ||| [function_name] setgray	count=2
function_name	functions ||| functions	count=1
function_name	eine soap-anfrage über http ||| do request	count=1
arg_pair	den port port ||| int $port	count=1
function_name	imap ||| imap	count=2
namespace	die auf der aktuellen ||| function	count=1
arg_pair	datei ||| int $major	count=1
namespace	in die datenbank ||| function	count=1
namespace	v8js::registerextension() registrierten ||| v8js	count=1
arg_pair	in julianday übergebenen tag ||| int $julianday int $mode	count=1
arg_pair	performance zu bieten ||| bool $clear_realpath_cache	count=1
function_name	gegenstück zu ||| decode	count=1
return	ein ||| bool	count=2
function_name	rechteck ||| rect	count=1
function_name	queue datenstruktur ||| queue	count=1
function_name	attribut verweist oder aufs ||| to next	count=1
function_name	schrift und bereitet ||| pdf load font	count=2
namespace	die in zeichensatz ||| function	count=1
arg_pair	nimmt als ||| array $except	count=1
namespace	der unter ||| function	count=1
function_name	kopiert [function_name] ||| [function_name] copy	count=3
arg_pair	und höhe ||| string $filename	count=1
function_name	liefert schema ||| mysql db	count=1
function_name	pem-kodiert versehene repräsentation ||| openssl pkey export to file	count=1
namespace	wenn die abfrage erfolgreich ||| function	count=1
function_name	exportiert die mit ||| export to	count=1
function_name	[function_name_1] gesetzt ||| [function_name_2] [function_name_1]	count=8
arg_pair	funktion ||| int $flags	count=1
namespace	zurück bis zu der ||| function	count=1
arg_pair	datei zu schreiben ||| string $filename	count=1
namespace	umask von php auf ||| function	count=1
arg_pair	werten von array1 die ||| array $array1 array $array2	count=1
function	[function_name_1] server ||| [function_name_1] [arg_pair_2]	count=2
function_name	erste ||| to next	count=1
arg_pair	ob der angegebene schlüssel ||| resource $handle	count=1
namespace	erfolgt nach der ||| function	count=1
function_name	beendet die möglichkeit ||| cancel	count=1
function_name	auf ein attribut verweist ||| to	count=1
function_name	maskiert ||| escape string	count=4
arg_pair	nachricht msg_number ||| int $msg_number	count=1
return	einen string zurück ||| string	count=1
arg_pair	den input -string ||| string $input int $pad_length	count=1
function_name	funktion beendet ||| curl close	count=1
function_name	verbindungs-kennung assoziiert ||| mysql	count=1
function_name	eine fehlermeldung an ||| error	count=1
function	ein grafikzustandsobjekt [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	einen string zurück der ||| string	count=1
namespace	von nachrichten wird zur ||| function	count=1
function_name	versucht die ||| load	count=1
arg_pair	anfang eines ||| string $str string $character_mask	count=1
namespace	der von ||| function	count=2
arg_pair	ein mit den http ||| string $domain bool $secure	count=1
function_name	pcos-pfades vom ||| pdf pcos get number	count=1
arg_pair	zu einer sqlite3-datenbank ||| int $schalter	count=1
namespace	[namespace] fest ||| [namespace]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $statement [arg_pair_2]	count=1
arg_pair	erzeugt eine png -datei ||| int $quality int $filters	count=1
function_name	iso-8859-1 -kodierung ||| sqlite libencoding	count=1
function_name	für die textausgabe ||| pdf set text pos	count=1
arg_pair	erstellt ein ||| string $encoding	count=1
function_name	wechselt vom aktuellen ||| chdir	count=1
function_name	die in utf-8 ||| utf8	count=1
function_name	informationen oder nachrichten ||| info	count=1
arg_pair	file_get_contents() die datei ||| string $filename	count=1
function_name	importierten pdf-dokuments ||| pdf process pdi	count=1
function_name	repräsentation ||| export to file	count=2
namespace	zum datensatz mit der ||| function	count=1
namespace	die daten ||| function	count=1
return	den wert ||| mixed	count=2
function	zum zertifikat [arg_pair_2] ||| [function_name_1] private key [arg_pair_2]	count=1
namespace	die mit dem ||| function	count=1
arg_pair	array input und ersetzt ||| array $input	count=1
function_name	element ||| to	count=1
arg_pair	parameter dn angegeben werden ||| resource $privkey	count=1
function_name	ersten vorkommens von ||| strpos	count=1
arg_pair	ingres-datenbank database ||| string $database string $username	count=1
function_name	bindung für [function_name_1] [function_name_2] angegebenem rdn ||| [function_name_2] [function_name_1]	count=2
arg_pair	einen soap-aufruf ||| string $function_name array $arguments	count=1
namespace	liest die variable ||| function	count=1
namespace	die daraus ||| function	count=1
arg_pair	http header-informationen zu übertragendes ||| int $expire	count=1
function_name	ein textflussobjekt ||| textflow	count=1
namespace	[namespace] in einem ||| [namespace]	count=1
function_name	status ändern ||| socket select	count=1
arg_pair	zufällig erzeugten geheimen schlüssel ||| array $env_keys	count=1
namespace	angegebene anzahl von ||| function	count=1
function_name	[function_name_1] matchbox ||| [function_name_1] [function_name_2] resource	count=1
arg_pair	in purpose angegebenen zweck ||| mixed $x509cert int $purpose	count=1
arg_pair	zeichenkette so dass ||| object $link_identifier	count=1
arg_pair	konvertiert einen ||| int $split_length	count=1
arg_pair	in eine ||| int $depth int $options	count=1
function_name	liefert ||| imap listscan	count=1
function_name	den momentanen status ||| fbsql db status	count=2
namespace	pfad mit [namespace] linienfarbe ||| [namespace]	count=1
function_name	zertifikat um festzustellen ||| openssl x509	count=1
function_name	option die mit ||| option	count=1
arg_pair	das postfach mailbox ||| string $mailbox	count=1
arg_pair	filename angegebene datei und ||| string $filename	count=1
function_name	festgelegten grenze befinden ||| substr	count=1
function	gzip .gz [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	connection_string bezeichnet wird ||| string $connection_string int $connect_type	count=1
function	[function_name_1] domain ||| [function_name_1] [arg_pair_2]	count=3
namespace	übergebenen text in das ||| function	count=1
arg_pair	welche ||| int $mode	count=1
function	exportiert [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	basistyp des feldes ||| field type	count=2
function_name	randfarbe ||| color	count=1
namespace	nachrichten wird ||| function	count=1
namespace	die aktuellen ||| function	count=1
arg_pair	flag ||| string $flag	count=1
function_name	die unterversionsnummer ||| get minorversion	count=1
arg_pair	offset und ||| int $offset	count=1
namespace	der alle vorkommen jedes ||| function	count=1
arg_pair	mailbox beenden ||| string $mailbox	count=1
arg_pair	werte in assoc_array in ||| array $assoc_array	count=1
rest	öffnet eine [function_2] ||| [return_1] [function_2]	count=5
arg_pair	nächsten ergebniszeile übereinstimmt ||| resource $statement	count=1
namespace	die zur ||| function	count=1
arg_pair	allen werten von array1 ||| array $array1 array $array2	count=1
arg_pair	format in eine ||| string $format	count=1
function_name	wartet ob ||| select	count=1
function_name	und ermittelt ||| pdf info	count=1
arg_pair	und bcc kopffeldern ||| string $rpath	count=1
function_name	handle von ||| curl multi remove handle	count=1
arg_pair	in purpose angegebenen ||| mixed $x509cert int $purpose	count=1
arg_pair	domain von ||| string $domain	count=1
function_name	ein large object ||| pg lo	count=2
arg_pair	die mit flag ||| string $flag	count=1
arg_pair	len bytes aus ||| int $len	count=1
function_name	gesetzt wurde ||| get parser	count=1
function	kopiert datei [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	verschlüsselt data unter ||| string $sealed_data	count=1
function_name	des zufälligen eintrags bzw ||| array rand	count=1
arg_pair	verschlüsselt data unter verwendung ||| string $sealed_data	count=1
function_name	des ||| entry	count=1
function	[function_name_1] übergebene zeichenkette ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	wartet ob diese ihren ||| array $except int $tv_sec	count=1
function_name	oder aufs erste ||| move	count=1
arg_pair	bei transformationen mittels xsltprocessor ||| string $namespace string $name	count=1
function_name	feldes in [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	eine persistente ||| pconnect	count=1
arg_pair	ob diese ihren status ||| array $read	count=1
function_name	uid ||| uid	count=1
return	unter verwendung ||| bool	count=1
function_name	für ||| openssl	count=1
arg_pair	in calendar ||| int $calendar	count=1
function_name	spalte eines postgresql ||| pg fetch result	count=2
function_name	gzgets() außer dass gzgetss() ||| gzgetss	count=1
function_name	eine abfrage ||| fbsql db query	count=1
function_name	arkustangens ||| atan	count=1
function	die funktion ändert [function_name_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	in buf von socket ||| string $buf	count=1
function_name	ein zeichen ||| char	count=1
function_name	er auf ein ||| to	count=2
namespace	die umask von ||| function	count=1
arg_pair	-aufrufs ||| object $result string $user_compare_function	count=1
namespace	der form ||| function	count=2
namespace	ermittelt die uhrzeit der ||| function	count=1
function_name	get_defined_vars() aufgerufen ||| defined vars	count=1
function_name	eine fehlermeldung ||| error log	count=1
arg_pair	methode ist ||| string $function_name	count=1
namespace	letzten wert von ||| function	count=1
arg_pair	erzeugt eine ||| string $pathname	count=1
return	auf neue verbindungen wartet ||| resource	count=1
function_name	[function_name_1] pdf ||| [function_name_2] [function_name_1]	count=4
namespace	namen der ||| function	count=2
function	abschnitts von subject ||| strspn string $subject	count=2
arg_pair	datei dekomprimiert ||| int $use_include_path	count=1
function_name	namen bestimmten eintrag ||| rename name	count=1
arg_pair	zufällig erzeugten geheimen schlüssel ||| array $env_keys array $pub_key_ids	count=1
function_name	zusammenhang zwischen ||| arsort	count=1
function_name	fehlermeldung ||| error	count=4
return	ein array ||| array	count=13
arg_pair	[arg_pair_1] content ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	die option ||| socket set option	count=1
namespace	der erste und ||| function	count=1
namespace	text in das ||| function	count=1
function_name	liegendes oder virtuelles pdf-dokument ||| pdi	count=1
function_name	seines ||| delete index	count=2
function	repräsentation [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	versehene repräsentation des schlüssels ||| pkey export to file	count=1
arg_pair	und die genauigkeit von ||| resource $link	count=1
function_name	[function_name_1] fehlermeldung die ||| [function_name_1] last [function_name_2]	count=2
arg_pair	parameter dn ||| resource $privkey	count=1
arg_pair	von cc [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	eine ||| int $mode	count=1
function_name	für [function_name] ||| [function_name]	count=3
namespace	[namespace] oracle eingeholt ||| [namespace]	count=3
arg_pair	und wartet ||| array $read	count=1
return	diese ihren status ||| int	count=1
function_name	zeilen in [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	abfrage die später ||| prepare	count=1
arg_pair	ähnelt der c ||| int $return_var	count=1
arg_pair	postfach mailbox ||| int $options	count=1
function_name	schreibt ||| socket write	count=1
arg_pair	png -datei aus ||| int $filters	count=1
function_name	den ||| pg delete	count=1
function_name	informationen über ||| info	count=1
function_name	erstellt ||| var	count=1
return	eine zeichenkette ||| string	count=1
function_name	[function_name_1] und ||| [function_name_2] [function_name_1]	count=6
namespace	der [namespace] ||| [namespace]	count=3
arg_pair	dem parameter dn ||| array $dn	count=1
arg_pair	zeichenkette so dass sie ||| object $link_identifier string $text	count=1
namespace	der übergebenen verbindung zurück ||| function	count=1
namespace	von php auf mask ||| function	count=1
function_name	zur nutzung durch andere ||| openssl pkey get private	count=1
namespace	und die funktionen der ||| function	count=1
namespace	die namen ||| function	count=1
namespace	setzt die ||| function	count=1
return	gibt [return] typen zurück ||| [return]	count=1
function_name	nächste attribut wenn ||| to next	count=1
function_name	prüft ob die eigenschaft ||| property	count=1
arg_pair	ermittelt den ||| resource $pdfdoc	count=2
arg_pair	anfang ||| string $character_mask	count=1
arg_pair	ist) und liest ||| string $name	count=1
function_name	auf ein attribut verweist ||| next	count=1
namespace	body der ||| function	count=1
arg_pair	ob ||| array $except int $tv_sec	count=1
function_name	ein neues ||| construct	count=1
namespace	in der ||| function	count=11
namespace	für die weitere verwendung ||| function	count=1
arg_pair	der geparst werden soll ||| string $encoding	count=1
arg_pair	wartet ob diese ||| int $tv_sec	count=1
arg_pair	[arg_pair_1] content vorkommt ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	ruft eine datenzeile aus ||| int $fetch_flag	count=1
function_name	er auf ein attribut ||| move to next	count=1
arg_pair	liest daten vom übergebenen ||| resource $bz	count=1
function_name	ein physisches oder ||| pdi document	count=1
function	für [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	ein ||| string $type_namespace	count=1
function_name	ersetzt in einer kopie ||| replace	count=1
namespace	entfernen der mit der ||| function	count=1
namespace	der ergebnisse zu ||| function	count=1
arg_pair	verschlüsselt data ||| string $sealed_data	count=1
namespace	der aktuellen seite ||| function	count=1
function_name	von password_hash() unterstützen algorithmus ||| password get info	count=1
arg_pair	und ||| array $read	count=1
return	datensatz ||| array	count=1
namespace	[namespace] angegebenen ||| [namespace]	count=10
function_name	schlüssel-details zurück bits ||| openssl pkey get details	count=1
namespace	von array ||| function	count=3
arg_pair	und wartet ob diese ||| array $read array $write	count=1
function_name	internen datensatz-zeiger ||| seek	count=2
namespace	den letzten wert von ||| function	count=1
function_name	liest ||| entry read	count=1
arg_pair	wartet ob diese ihren ||| array $write	count=1
function_name	ausgabepuffer ||| ob	count=1
namespace	benannte ressource die ||| function	count=1
arg_pair	len bytes daten in ||| int $flags	count=1
return	assoziatives array mit ||| array	count=1
function_name	[function_name] werte verwendet ||| array [function_name]	count=3
function_name	setzt ||| to next	count=1
function_name	frontbase-operation ||| fbsql	count=1
namespace	ähnlich wie ||| function	count=1
namespace	von der ||| function	count=6
function_name	require_once eingebunden wurden ||| included files	count=1
function_name	er auf ein attribut ||| move	count=1
function_name	auf ein attribut ||| next	count=1
arg_pair	zu hostname passen ||| array $mxhosts	count=1
arg_pair	funktion gibt den input ||| string $input	count=1
arg_pair	durch den pararmeter infilename ||| string $infilename	count=1
namespace	wirkliche ||| function	count=1
arg_pair	zeichenkette so ||| object $link_identifier	count=1
namespace	ermittelt die ||| function	count=2
namespace	aus der gegebenen ergebnismenge ||| function	count=1
function_name	[function_name_1] gesetzt wurde ||| [function_name_2] [function_name_1]	count=8
arg_pair	erzeugt eine spezielle ||| int $major	count=1
arg_pair	den wert eines ||| resource $pdfdoc long $doc	count=1
namespace	spezielle ||| function	count=1
function_name	zeiger auf das nächste ||| to next	count=1
arg_pair	den wert ||| resource $pdfdoc	count=1
arg_pair	angegebene schlüssel in ||| string $key resource $handle	count=1
function_name	fehlermeldung an ||| error log	count=1
function_name	oid des datentyps für ||| type oid	count=1
function_name	eines pcos-pfades vom typ ||| pdf pcos get number	count=1
namespace	dem mit der ||| function	count=1
function_name	formatierung ||| create textflow	count=1
namespace	die auf ||| function	count=2
function_name	ein site exec-kommando ||| exec	count=1
function_name	potenz ||| pow	count=1
arg_pair	prüft und konvertiert ||| resource $connection string $table_name	count=1
function_name	angegebene eigenschaft gesetzt ||| get parser property	count=2
arg_pair	andere zeichen vom anfang ||| string $str string $character_mask	count=1
arg_pair	die datei in einem ||| string $filename bool $use_include_path	count=1
namespace	der mittels openssl_pkey_new() erstellt ||| function	count=1
function_name	bestimmter werte in ingres ||| ingres	count=1
function_name	mysql ||| mysql get	count=1
return	ersten wert ||| mixed	count=1
arg_pair	späteren verwendung vor ||| string $encoding string $optlist	count=1
arg_pair	funktion openssl_pkcs7_sign() signiert ||| int $flags string $extracerts	count=1
return	den inhalt des ||| string	count=1
arg_pair	[arg_pair_1] text ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	und kleinschreibung ||| string $str2	count=1
return	ist ähnlich zur funktion ||| string	count=1
function_name	nächste attribut wenn er ||| to	count=1
arg_pair	mittels glue zu einer ||| string $glue	count=1
arg_pair	angegebenen ||| resource $link_identifier	count=1
namespace	über die ||| function	count=3
function	löscht eine [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	gz-datei ||| string $string	count=1
function	repräsentation [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	option ||| option	count=1
function_name	ermittelt den [function_name] ||| [function_name]	count=1
function_name	seite unter [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	gregorianischen kalender in einen ||| gregoriantojd	count=1
arg_pair	diese ihren ||| int $tv_sec	count=1
arg_pair	erzeugt ||| int $mode	count=1
arg_pair	filename übergeben ||| bool $raw_output	count=1
arg_pair	diese ihren ||| array $read	count=1
function_name	datentyps für das feld ||| field type	count=1
arg_pair	fbsql_field_name() allerdings ||| resource $result int $field_offset	count=1
arg_pair	gibt dessen dessen oid ||| mixed $object_id	count=1
function_name	element verweist ||| to next	count=1
arg_pair	und nanosekunden nanoseconds ||| int $seconds int $nanoseconds	count=1
arg_pair	für ein postfach ||| string $mailbox	count=1
function_name	funktion dio_stat() gibt ||| stat	count=1
arg_pair	mit msglist [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	übergebenen image oder gibt ||| resource $image string $filename	count=1
namespace	die elemente des arrays ||| function	count=1
function_name	in ||| recode file	count=1
namespace	rückgabe der ||| function	count=1
namespace	der aktuellen domain ||| function	count=1
function_name	zeile [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	in envelope gegebenen ||| array $envelope	count=1
namespace	verbindung zu der ||| function	count=3
namespace	er auf ||| xmlreader	count=2
function_name	gesendet ||| headers	count=1
function_name	das nächste element ||| next	count=1
function_name	nicht vom typ af_unix ||| socket recvfrom	count=1
arg_pair	[arg_pair] grafik dar ||| [arg_pair]	count=1
return	array mit dem abgerufenen ||| array	count=1
namespace	der datei angegeben durch ||| function	count=1
arg_pair	signiert den gegebenen plaintext ||| string $plaintext	count=1
namespace	die auf eine andere ||| function	count=1
function_name	zwei großen unterschieden ||| msql pconnect	count=1
function_name	eine ||| posix	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $zip_entry [arg_pair_2]	count=1
arg_pair	prüft und ||| string $table_name	count=1
function_name	eine persistente verbindung zu ||| pconnect	count=1
arg_pair	datei filename ||| string $filename	count=1
function_name	speicher frei ||| mysql free result	count=1
arg_pair	löscht wenn gesetzt den ||| string $namespaceuri	count=1
return	ob diese ihren status ||| int	count=1
function_name	den zeiger auf das ||| next	count=1
namespace	zurück das der ||| function	count=1
return	[return] wenn ||| [return]	count=2
function_name	attribut wenn er ||| to	count=1
arg_pair	datei zum lesen ||| string $filename	count=1
function_name	password_hash() unterstützen algorithmus ||| password get info	count=1
function_name	setzt ||| seek	count=1
function_name	[function_name] mit ||| curl copy [function_name]	count=3
function_name	die option die mit ||| option	count=1
function_name	schlüssel des zufälligen eintrags ||| rand	count=1
function_name	-datei aus dem ||| imagepng	count=1
function_name	[function_name_1] namen vom ||| [function_name_1] [function_name_2]	count=1
arg_pair	zufällig erzeugten geheimen ||| array $env_keys	count=1
function_name	apache ||| apache	count=2
arg_pair	den in purpose angegebenen ||| mixed $x509cert int $purpose	count=1
arg_pair	eine datenzeile aus ||| int $fetch_flag	count=1
function_name	ende des vorherigen angehängt ||| array merge	count=1
function_name	häufigkeit ||| count chars	count=2
function_name	attribut verweist oder ||| move to	count=1
function	für [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	pdf-seite und ||| pdf place pdi page	count=1
arg_pair	filename und ||| string $filename	count=1
function_name	setzt den zeiger ||| move to	count=1
function_name	dbase-datenbank im angegebenen ||| dbase	count=1
return	objekt zurück das ||| object	count=1
function_name	keinen fehler gab ||| error	count=1
namespace	revolutionskalenders zu einer ||| function	count=1
return	oder aufs erste ||| bool	count=1
namespace	der postgresql-datenbank die durch ||| function	count=1
function_name	[function_name_1] einer ergebnismenge ||| [function_name_2] [function_name_1]	count=6
namespace	fließkommarest der division ||| function	count=1
function	[function_name_1] source nach ||| [arg_pair_2] [function_name_1]	count=1
return	prüft ob ||| bool	count=10
function_name	für das feld ||| field type	count=1
namespace	einen prozess der unter ||| function	count=1
arg_pair	index zurück ||| int $index int $length	count=1
namespace	zurück der durch ||| function	count=1
arg_pair	eine ||| string $pathname	count=1
function_name	client ||| client	count=1
function_name	regeln ||| parse	count=1
function_name	gibt den kommentar zu ||| get comment name	count=1
return	sondern ein ||| array	count=1
return	einen archiveintrag unter verwendung ||| bool	count=1
arg_pair	baut eine ||| string $servername	count=1
function_name	namen vom ||| name	count=1
function_name	den zeiger ||| move	count=1
function_name	einem [function_name] abfrageergebnis zurück ||| [function_name] num	count=2
arg_pair	mittels offset ||| array $array int $offset	count=1
arg_pair	daten mit ||| string $data string $encoding	count=1
namespace	nächste attribut wenn ||| xmlreader	count=1
function_name	ein element verweist ||| to next	count=1
function_name	randes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	spezielle oder ||| int $mode	count=1
function_name	zusammenhang ||| asort	count=1
arg_pair	übertragendes ||| int $expire	count=1
arg_pair	ändern ||| array $write	count=1
namespace	mit [namespace] linienfarbe und ||| [namespace]	count=1
arg_pair	suchtext [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	archiveintrag unter ||| ziparchive	count=1
function_name	felder spalten in ||| fields	count=1
namespace	exceptions die nicht von ||| function	count=1
arg_pair	einen soap-aufruf durchzuführen ||| string $function_name array $arguments	count=1
function_name	attribut wenn er auf ||| to	count=1
namespace	aufruf dieser ||| soapclient	count=1
return	array ||| array	count=10
function_name	ihn zur nutzung ||| openssl pkey get private	count=1
function_name	zip-archiv ||| zip	count=1
namespace	abfrage [namespace] ||| [namespace]	count=1
namespace	in der form ||| function	count=2
function_name	flags ||| clearflag full	count=1
arg_pair	übergebenen image oder gibt ||| resource $image	count=1
arg_pair	übereinstimmungen mit ||| array $matches	count=1
namespace	ein attribut verweist oder ||| xmlreader	count=1
function_name	grafikzustandsobjekt unter anwendung ||| gstate	count=1
arg_pair	dateiname mit filename übergeben ||| bool $raw_output	count=1
function_name	spezifiziert wurde an ||| fopen	count=1
namespace	die vom ||| function	count=1
function_name	der datensätze zeilen ||| numrecords	count=1
namespace	funktion dio_fcntl() führt die ||| function	count=1
function_name	[function_name_1] den stacktrace ||| [function_name_1] [function_name_2]	count=1
namespace	unter verwendung von rc4 ||| function	count=1
namespace	mit der von ||| function	count=1
function_name	für ein sql-kommando ||| convert	count=1
function_name	die php-variable ||| oci bind	count=1
namespace	die auf eine ||| function	count=1
namespace	der aktuellen füllfarbe ||| function	count=1
arg_pair	angegebenen daten data ||| string $data	count=1
function_name	attribut wenn er auf ||| next attribute	count=1
function_name	grafikzustandsobjekt ||| pdf set gstate	count=2
namespace	revolutionskalenders zu einer julianischen ||| function	count=1
function_name	pem-kodiert versehene repräsentation ||| openssl pkey export to	count=1
arg_pair	einer variable als ||| bool $syntax_only	count=1
function_name	erste ||| move	count=1
function_name	der ||| function	count=1
namespace	die funktion wandelt einen ||| function	count=1
function_name	keine ||| list	count=1
function_name	erste ||| move to next	count=1
function_name	datenbanken des servers auf ||| dbs	count=1
namespace	enthaltene zeichen in der ||| function	count=1
function_name	oder aufs ||| next	count=1
function_name	funktion erhält informationen über ||| stat	count=1
return	in einem array zurück ||| array	count=1
namespace	der übergebenen nummer ||| function	count=1
function_name	vollständigen text ||| last	count=1
namespace	rückgabe der ergebnisse zu ||| function	count=1
arg_pair	werten von array1 ||| array $array1	count=1
function_name	nächste attribut wenn er ||| move	count=1
arg_pair	ob diese ||| array $except	count=1
namespace	[namespace] durch ||| [namespace]	count=6
arg_pair	beginnend am angebenen offset ||| int $offset	count=1
arg_pair	die [arg_pair_1] [arg_pair_2] siehe imap_open() für angaben ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=2
function_name	das ||| to	count=1
arg_pair	eine spezielle ||| string $pathname int $mode	count=1
function_name	die an die aufrufende ||| args	count=1
function_name	large object ressource auf ||| pg lo	count=1
return	socketverbindung ||| void	count=1
namespace	die mit der ||| function	count=2
arg_pair	einer verbindung verwendeten ||| string $host_name	count=1
arg_pair	einer variable als funktion ||| mixed $var bool $syntax_only	count=1
function_name	die in utf-8 zu ||| utf8	count=1
arg_pair	schreibt text in ||| resource $p string $text	count=1
function_name	er ||| next	count=2
arg_pair	zur angegebenen verbindungskennung ||| string $query	count=1
return	die ||| bool	count=1
function_name	eine ||| mknod	count=1
arg_pair	input -string ||| string $input	count=1
namespace	schlüsseln wobei die ||| function	count=1
arg_pair	angegebene verbindungskennung link_identifier bezieht ||| resource $link_identifier	count=1
namespace	an [namespace] aktuellen ||| [namespace]	count=1
namespace	der aktuellen füllfarbe eine ||| function	count=1
namespace	metadaten zu der ||| function	count=1
function_name	datei ||| file	count=2
arg_pair	input -string ||| int $pad_length	count=1
return	setzt den zeiger auf ||| bool	count=1
function_name	zufälligen eintrags ||| rand	count=1
namespace	auf das nächste ||| xmlreader	count=1
return	die datei auf ||| bool	count=1
arg_pair	mittels einer ||| callable $value_compare_func	count=1
function_name	berechnet die potenz von ||| pow	count=1
function_name	dem get_defined_vars() aufgerufen ||| get defined vars	count=1
function	aus dem [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	löscht einen ||| index	count=1
function_name	die potenz ||| pow	count=1
function_name	für beliebige anmerkungstypen ||| set border	count=2
arg_pair	-aufrufs mit einer benutzerdefinierten ||| string $user_compare_function	count=1
function_name	maskiert ||| escape	count=2
function_name	umgekehrter reihenfolge wobei ||| krsort	count=1
function_name	[function_name] werden kann ||| msg get [function_name]	count=1
arg_pair	oder diese erzeugt sollte ||| string $filename int $mode	count=1
return	wartet ||| int	count=1
return	archiveintrag unter ||| bool	count=1
function_name	fdf ||| fdf set	count=1
function_name	assoziiert ist ||| mysql select	count=1
function_name	template unter ||| image	count=1
namespace	zu denen der ||| function	count=1
function_name	[function_name] and returns ||| [function_name] channel	count=3
function	[function_name_1] -aufrufs ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	[arg_pair] zusätzlicher ||| [arg_pair]	count=1
arg_pair	data ||| string $data	count=1
namespace	der mittels ||| function	count=2
function	guid [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	bis aktivität auf einer ||| int	count=1
function_name	letzten imap [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	aufs ||| bool	count=1
function_name	fehlercode ||| socket strerror	count=2
namespace	aufs ||| xmlreader	count=1
arg_pair	ändern ||| array $except int $tv_sec	count=1
function_name	schlüssel aus ||| dba	count=1
namespace	falls der ||| function	count=2
arg_pair	mit den ||| string $domain bool $secure	count=1
function_name	fdf funktionsaufruf gesetzt wurde ||| fdf errno	count=1
return	funktion ||| array	count=1
function_name	des ersten vorkommens ||| strpos	count=1
function_name	füllt einen text-block mit ||| fill textblock	count=1
function_name	plural-textsuche ||| dngettext	count=1
function_name	element verweist ||| next	count=1
arg_pair	filename ||| bool $use_include_path	count=1
function_name	ergebnis eines dbx_query() ||| dbx	count=1
function_name	und wartet ||| socket select	count=1
function_name	oder require_once eingebunden wurden ||| included files	count=1
arg_pair	angegebenen verbindungskennung link_identifier ||| resource $link_identifier	count=1
return	diese funktion löscht ||| bool	count=1
function_name	[function_name_1] tabelle ||| [function_name_2] [function_name_1]	count=1
arg_pair	den namen des postfachs ||| resource $imap_stream	count=1
function_name	felder von einer abfrage ||| fields	count=1
namespace	inhalt des ausgabepuffers und ||| function	count=1
arg_pair	ihren status ||| array $except	count=1
namespace	auch dies keine ||| function	count=1
function_name	letzten imap [function_name_2] ||| [function_name_1] last [function_name_2]	count=4
namespace	von zeichensätzen zwischen ||| function	count=1
arg_pair	tabelle table_name ||| resource $connection string $table_name	count=1
function_name	der option [function_name] der ||| [function_name]	count=1
namespace	der aktuellen locale-einstellung sind ||| function	count=1
namespace	[namespace] gesetzt werden ||| [namespace]	count=1
function	die funktion ändert [function_name_1] [arg_pair_2] new_mbox siehe imap_open() für ||| [function_name_1] resource $imap_stream [arg_pair_2] string $new_mbox	count=1
arg_pair	funktion sortiert ein array ||| array $array	count=1
function_name	0 [function_name] 1 ||| [function_name] setgray	count=2
arg_pair	in ||| resource $ftp_stream	count=1
function_name	ein bild oder template ||| image	count=1
return	liefert den ||| int	count=1
arg_pair	cert ist ||| mixed $cert	count=1
function_name	wartet ob diese ihren ||| select	count=1
return	das nächste attribut wenn ||| bool	count=1
arg_pair	alle schlüssel aus array ||| array $array int $case	count=1
function_name	auf den semaphor ||| sem	count=1
function_name	physisches [function_name_2] ||| [function_name_2] open [function_name_1]	count=2
arg_pair	nach schlüsseln in ||| int $sort_flags	count=1
function_name	einen 8 bit string ||| imap qprint	count=1
function_name	liegendes oder virtuelles 3d-modell ||| load 3ddata	count=1
namespace	zurück der der konvertierung ||| function	count=1
arg_pair	ihren ||| int $tv_sec	count=1
arg_pair	ob diese ||| array $except int $tv_sec	count=1
function_name	gibt einen datensatz ||| record	count=1
function_name	verzeichnis mit dem ||| mkdir	count=1
function_name	bereits gesendet ||| headers	count=1
arg_pair	datei ||| string $pathname	count=1
return	gibt ||| int	count=4
function_name	ermittelt den [function_name_1] [function_name_2] in ||| [function_name_2] [function_name_1]	count=3
function_name	öffnet ein ||| open	count=1
return	er auf ein element ||| bool	count=1
namespace	der ergebnismenge ||| function	count=1
arg_pair	mit image angegebenen ||| resource $image	count=1
arg_pair	val ||| float $val	count=1
function_name	numerischen ||| value	count=1
namespace	auf die rückgabe der ||| function	count=1
arg_pair	[arg_pair] optionsliste definiert ||| [arg_pair]	count=1
arg_pair	datei ||| string $filename bool $use_include_path	count=1
function_name	algorithmus ||| password	count=1
arg_pair	msg_number ||| int $msg_number	count=1
function_name	lokalisiert einen ||| locate name	count=1
namespace	implemetiert einen vergleichsalgorithmus der ||| function	count=1
function_name	als integer-wert zurück ||| bccomp	count=1
function_name	zeichnet ein rechteck ||| rect	count=1
namespace	die bzw ||| function	count=1
namespace	der aufruf dieser ||| soapclient	count=1
namespace	[namespace] linienfarbe ||| [namespace]	count=1
function_name	zeiger auf ||| to next	count=1
return	auf ein element ||| bool	count=1
function_name	exportiert ||| export	count=2
function_name	aufs erste ||| move to next	count=1
function_name	außer dass gzgetss() ||| gzgetss	count=1
arg_pair	an das postfach mailbox ||| resource $imap_stream string $mailbox	count=1
function	[function_name_1] property in ||| [function_name_1] exists [arg_pair_2]	count=4
namespace	[namespace] soll ||| [namespace]	count=3
function_name	message ||| msg	count=2
function_name	flags bei allen nachrichten ||| full	count=1
function_name	sehr klein ||| expm1	count=1
function_name	später ||| prepare	count=1
arg_pair	zweite in ||| int $mode	count=1
arg_pair	in eine [arg_pair_2] ||| [arg_pair_2] mixed $data [arg_pair_1]	count=3
arg_pair	geparst werden soll ||| string $encoding	count=1
namespace	aller von [namespace] ||| [namespace]	count=3
function_name	öffentlichen ||| openssl public	count=1
function_name	pdf dokument und bereited ||| pdf	count=1
arg_pair	die mit size ||| int $size	count=1
namespace	string wird entsprechend der ||| function	count=1
arg_pair	offset und [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	schließt ||| ftp close	count=1
function_name	auf ein element verweist ||| to	count=1
namespace	prozentzeichen% gefolgt von ||| function	count=1
function_name	lesezugriff ||| zip open	count=2
function_name	speicher frei ||| free	count=3
return	nimmt als ||| int	count=1
arg_pair	server ohne auf die ||| resource $connection string $query	count=1
namespace	der betroffenen ||| function	count=1
namespace	zeiger auf das nächste ||| xmlreader	count=1
function_name	gibt einen datensatz ||| get record	count=1
function_name	als schlüssel ||| array fill	count=1
function_name	einen ||| index	count=1
function_name	aktuellen farbraum und ||| pdf setcolor	count=1
namespace	mit der angegebenen verbindungkennung ||| function	count=1
arg_pair	erstellt ein ||| string $type_namespace	count=1
function_name	nächste attribut ||| move	count=1
function_name	feld aus ||| field	count=1
function_name	namen eines [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	large objects ||| pg lo	count=1
function_name	ein attribut verweist oder ||| move to	count=1
arg_pair	start und optional ||| mixed $start	count=1
function_name	einen archiveintrag unter ||| delete	count=1
arg_pair	funktion sortiert ||| callable $value_compare_func	count=1
function_name	liefert die sicherheitseinstellungen ||| get security prefs	count=1
function_name	internen ||| fbsql data seek	count=1
function_name	welcher das feld ||| field	count=1
arg_pair	ob diese ihren status ||| array $except	count=1
return	assoziatives array zurück ||| array	count=1
function_name	pem-kodiert versehene repräsentation ||| to	count=1
function_name	erstellt ein ||| soap var	count=1
namespace	[namespace] priorität des ||| [namespace]	count=1
function_name	ausführliche informationen zur ||| mysql info	count=1
arg_pair	eine datenzeile aus ||| resource $result_identifier int $fetch_flag	count=1
function_name	typ ||| type	count=2
function_name	wurde ||| get	count=1
function_name	php-variable ||| bind array	count=1
namespace	alle variablen die in ||| function	count=1
return	mit ||| bool	count=1
return	auf das ||| bool	count=1
function_name	erste attribut wenn ||| to next attribute	count=1
return	verweist oder ||| bool	count=1
namespace	den zeiger auf das ||| xmlreader	count=1
arg_pair	array input ||| array $input	count=1
function	[function_name_1] datei zum ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	übergebenen parametern zu ||| string $stmtname	count=1
namespace	mit der verbindung verwendet ||| function	count=1
function	eines dbx_query() [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	den [function_name] in ||| [function_name]	count=1
function_name	uid für ||| imap uid	count=2
arg_pair	dem parameter dn ||| resource $privkey	count=1
function_name	den divisor ||| fmod	count=1
namespace	text [namespace] ||| [namespace]	count=3
function_name	und php-tags reduzierte version ||| strip tags	count=1
function_name	aufs ||| move to next	count=1
function	texte [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	potenzieren ||| bcpowmod	count=1
function_name	ein sql-kommando ||| convert	count=1
arg_pair	nimmt als ||| int $tv_sec	count=1
return	aufrufen wenn sie ||| bool	count=1
function_name	identifier oid [function_name] ||| pg [function_name]	count=1
function_name	ergebnis eines dbx_query() ||| dbx sort	count=1
arg_pair	in eine php-variable ||| int $depth	count=1
arg_pair	image oder ||| string $filename	count=1
function_name	[function_name_1] anwendung ||| [function_name_1] [function_name_2]	count=1
function_name	seite ||| page	count=2
arg_pair	den detaillierungsgrad ||| resource $connection	count=1
function_name	password_hash() unterstützen algorithmus erzeugt ||| password get info	count=1
function_name	symboltabelle ||| extract	count=1
function_name	namen bestimmten ||| rename name	count=1
function_name	schrift und bereitet sie ||| pdf load font	count=1
namespace	gibt das ||| function	count=1
function_name	session und [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	die angegebene verbindung ||| function	count=1
function_name	des randes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	kleinschreibung unterscheidet ||| eregi replace	count=1
function_name	letzte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	datei im dateisystem als ||| string $pathname	count=1
arg_pair	wird zum sortieren von ||| mixed $array1_sort_order	count=1
function_name	inhalt einer spalte ||| result	count=1
function_name	[function_name_1] grafikzustandsobjekt ||| [function_name_2] [function_name_1]	count=1
function_name	arg /cosh ||| tanh	count=1
namespace	aus der datenbank zurück ||| function	count=2
function_name	zertifikat ||| openssl x509	count=2
function_name	funktion erhält informationen über ||| stat name	count=1
function_name	namen ||| rename name	count=2
function_name	liefert die fehlernummer ||| errno	count=1
namespace	von dem ||| function	count=1
function_name	übergebene zertifikat zurück ||| openssl x509 parse	count=1
return	vorherige ||| int	count=1
function_name	des ||| zip entry	count=1
function_name	pcos-pfades vom typ zahl ||| pdf pcos get number	count=1
namespace	des aktuellen ||| xmlreader	count=1
function_name	veränderten datensätze in einer ||| rows	count=1
arg_pair	message übergebene string ||| string $message string $options	count=1
arg_pair	postfachs mailbox ||| resource $imap_stream string $mailbox	count=1
arg_pair	übergebene zeichenkette ||| object $link_identifier	count=1
arg_pair	in purpose angegebenen zweck ||| int $purpose	count=1
function_name	[function_name_1] datenbanken ||| [function_name_2] [function_name_1]	count=1
function_name	tabellen ||| tables	count=1
namespace	wenn er ||| xmlreader	count=1
function_name	ob diese ihren ||| socket	count=1
function	versehene repräsentation [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	ermittelt ||| get	count=2
function_name	zeile ||| mysql fetch	count=1
function_name	ein ||| move to	count=2
function_name	pdf-block ||| pdfblock	count=1
namespace	funktion ||| function	count=1
function_name	namen der aktuellen tabelle ||| table name	count=1
function_name	[function_name_1] eines postgresql ||| [function_name_2] [function_name_1]	count=8
arg_pair	postfach ||| resource $imap_stream string $mailbox	count=1
namespace	signiert die inhalte der ||| function	count=1
arg_pair	assoc_array entsprechen und deren ||| array $assoc_array int $options	count=1
function_name	des zuletzt [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	breite und höhe ||| string $filename	count=1
arg_pair	die [arg_pair_1] [arg_pair_2] siehe imap_open() für angaben ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	filename und untersucht die ||| string $filename	count=1
function_name	und verschlüsselt ||| pkcs7 encrypt	count=1
return	prüft ||| bool	count=1
arg_pair	image ||| string $filename	count=3
function_name	einen 8 bit ||| imap qprint	count=1
arg_pair	schlüsseln in ||| array $array	count=1
namespace	der server mehrere ergebnisse ||| function	count=1
arg_pair	einem dateizeiger in eine ||| resource $handle	count=1
function_name	informationen oder ||| info	count=1
arg_pair	erstellen ||| bool $recursive	count=1
namespace	die weitere ||| function	count=1
function_name	die des voherigen angehängt ||| array merge recursive	count=1
function_name	bytes ||| gzread	count=1
namespace	pid der ||| function	count=1
function_name	von bbcode_create() ||| bbcode	count=1
namespace	eine hilfsfunktion die die ||| function	count=1
arg_pair	unserializes a bson ||| array $typemap	count=1
namespace	der nachstehenden liste der ||| function	count=1
namespace	query der übergebenen verbindung ||| function	count=1
return	dies keine wirkliche ||| array	count=1
arg_pair	dateizeiger handle und ||| resource $handle	count=1
return	des vorkommens jedes ||| mixed	count=1
function_name	persistente verbindung [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	den input -string erweitert ||| string $input int $pad_length	count=1
namespace	oci_parse() zugewiesen oder von ||| function	count=1
function_name	wie array() ||| list	count=1
function_name	exportiert ||| export to	count=1
function_name	den [function_name] ||| fbsql table [function_name]	count=2
namespace	[namespace] vorher mit ||| [namespace]	count=3
arg_pair	in julianday ||| int $julianday int $mode	count=1
namespace	erweitert auf der ||| function	count=1
function_name	von tabellennamen ||| list tables	count=1
function_name	ein physisches oder virtuelles ||| pdi document	count=1
function_name	maskiert die übergebene ||| escape string	count=1
arg_pair	[arg_pair_1] und bcc ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	prüft ob oder wo ||| int $line	count=1
function_name	im [function_name] ||| [function_name] field	count=2
function_name	auch dies ||| list	count=1
function_name	[function_name_1] postgresql ||| [function_name_2] fetch [function_name_1]	count=2
function_name	argumente ||| func	count=1
function_name	reconstructed image ||| get image	count=1
return	den inode ||| int	count=1
arg_pair	und kleinschreibung berücksichtigt ||| string $str1	count=1
function_name	bleiben ||| ksort	count=1
arg_pair	zeichenkette so dass sie ||| object $link_identifier	count=1
function_name	status eines abfrageergebnisses ||| status	count=1
function_name	letzte insert update ||| mysql affected rows	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] field [function_name_1]	count=4
namespace	zu der übergebenen zeile ||| function	count=1
namespace	der dem angegebenen ||| function	count=1
namespace	fehlertext der ||| function	count=1
function_name	zusammenhang ||| arsort	count=1
function_name	exportiert die mit ||| export	count=1
function_name	funktion dio_stat() ||| dio stat	count=1
function_name	attribut ||| next	count=2
function_name	auf ein element ||| next	count=1
function_name	get_defined_vars() aufgerufen ||| get defined vars	count=1
function_name	zeile ||| fetch	count=3
arg_pair	postfach ||| string $mailbox	count=1
arg_pair	socket_create() oder mit socket_accept() ||| int $length	count=1
function_name	gemeinsamen ||| shmop close	count=2
function_name	seite [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	zurückzugeben der die ||| function	count=1
arg_pair	ermittelt den wert ||| resource $pdfdoc long $doc	count=1
arg_pair	zugehörenden datenstrukturen ||| int $table	count=1
arg_pair	und wartet ob diese ||| int $tv_sec	count=1
arg_pair	datei im dateisystem ||| string $pathname	count=1
function_name	inhalt des ausgabepuffers ||| ob	count=1
function	erweiterung die in ||| extension string $extension_name	count=2
function_name	eine mime-konforme nachricht aus ||| imap mail compose	count=1
function_name	der tabelle [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	funktion entspricht fopen() fwrite() ||| file put contents	count=1
function_name	ruft informationen oder ||| curl multi info	count=1
arg_pair	variable ||| bool $syntax_only	count=1
function_name	eines pcos-pfades vom typ ||| pdf pcos	count=2
function_name	modifizierte utf-7-format ||| imap utf7 encode	count=1
return	erstellt ||| mixed	count=1
namespace	entsprechung der binären zahl ||| function	count=1
function_name	auf ein element verweist ||| move	count=1
arg_pair	msglist [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] [function_name_2] vollständig und übergibt es ||| [function_name_2] [function_name_1]	count=1
arg_pair	die angegebenen daten data ||| string $data	count=1
function_name	query an ||| unbuffered query	count=1
arg_pair	und konvertiert ||| resource $connection string $table_name	count=1
function_name	unter ||| delete index	count=2
function_name	option [function_name] der ||| [function_name]	count=1
namespace	ist [namespace] ||| [namespace]	count=3
function_name	fehlernummer ||| code	count=1
function_name	wenn er ||| to next	count=1
return	fest ||| bool	count=2
function_name	option die mit ||| set option	count=1
namespace	verweist oder aufs ||| xmlreader	count=1
arg_pair	ändern ||| int $tv_sec	count=1
namespace	verknüpft ist zu der ||| function	count=1
arg_pair	mit msglist ||| string $msglist	count=1
arg_pair	ermittelt die schnittmenge von ||| array $array1 array $array2	count=1
function_name	pem-kodiert versehene repräsentation des ||| export to file	count=1
return	zurück [return] der die ||| [return]	count=1
return	in bytes zurück ||| int	count=1
function_name	indiziertes ||| dbase get record	count=2
arg_pair	cc ||| string $cc	count=1
function_name	datentyps für das feld ||| field	count=1
function_name	query ||| ingres query	count=1
function_name	physisches [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	site exec-kommando ||| exec	count=1
arg_pair	funktion openssl_seal() verschlüsselt data ||| string $data	count=1
function_name	bestimmten zeile [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	werte abzufragen ohne wiederholend ||| mixed $definition	count=1
function_name	oder ||| move to	count=1
function_name	sortierkriterien ||| imap sort	count=1
arg_pair	den in purpose ||| int $purpose	count=1
arg_pair	zeichenkette so dass ||| string $text	count=1
return	ein array der ||| array	count=1
function_name	festgelegten grenze befinden mit ||| substr	count=1
function_name	des zuletzt [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] queue ||| [function_name_1] remove [function_name_2]	count=1
function_name	oder aufs ||| to next	count=1
arg_pair	der angegebene schlüssel ||| resource $handle	count=1
arg_pair	setzt den ||| resource $identifier	count=1
function_name	dem parameter csr angegebene ||| openssl csr	count=2
namespace	dieser methode ||| soapclient	count=1
function_name	handle ||| curl multi remove handle	count=2
namespace	versucht ||| sqlite3	count=1
function_name	den ||| handler	count=1
arg_pair	bestimmt den detaillierungsgrad ||| resource $connection	count=1
arg_pair	verschlüsselt data ||| string $data	count=1
arg_pair	data ||| string $data string $sealed_data	count=1
function_name	gzgetss() ||| gzgetss	count=1
function_name	oder template unter berücksichtigung ||| image	count=1
namespace	funktion ähnlich wie ||| function	count=1
arg_pair	den detaillierungsgrad von ||| resource $connection	count=1
arg_pair	parameter dn angegeben werden ||| array $dn resource $privkey	count=1
arg_pair	aktuelle domain für ||| string $msgid1	count=1
namespace	die aktuelle farbe ||| function	count=1
function_name	[function_name] eingefügten ||| pg [function_name]	count=1
arg_pair	input -string erweitert auf ||| int $pad_length	count=1
function_name	momentanen [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	parameter val ||| float $val	count=1
function	beliebiges kommando [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	y richtung um alpha ||| float $alpha	count=1
function_name	ein textflussobjekt oder fügt ||| textflow	count=1
arg_pair	erzeugt eine spezielle oder ||| int $major	count=1
namespace	mit der in ||| function	count=1
function_name	dieser methode ist ||| call	count=1
arg_pair	die funktion callback ||| array $array callable $callback	count=1
function_name	verweist ||| next	count=2
return	assoziatives array mit dem ||| array	count=1
function_name	zeiger auf das ||| move to	count=1
arg_pair	und führt darauf ||| string $database	count=1
return	verbindung und gibt ||| bool	count=1
arg_pair	subject nach ||| mixed $subject	count=1
function_name	der zeitpunkt wann ||| filemtime	count=1
arg_pair	und ||| string $filename	count=1
arg_pair	den ||| resource $connection string $table_name	count=1
arg_pair	skaliert sie ||| float $sy	count=1
return	er auf ein ||| bool	count=2
arg_pair	dem array input und ||| array $input	count=1
function_name	kopiert ||| pg copy to	count=1
arg_pair	wartet ob diese ||| array $read	count=1
namespace	die umask von php ||| function	count=1
arg_pair	in message übergebene ||| string $message string $options	count=1
namespace	alle http-header ||| function	count=1
function_name	namen vom aufruf ||| name	count=1
function_name	löscht ||| index	count=1
function	[function_name_1] -aufrufs ||| [arg_pair_2] [function_name_1]	count=4
namespace	email inclusive der ||| function	count=1
arg_pair	pararmeter infilename ||| string $infilename string $outfilename	count=1
function_name	informationen ||| curl multi info	count=1
function_name	angegebenen verbindung [function_name] ||| [function_name]	count=1
return	array das ||| array	count=1
function_name	attribut wenn er auf ||| attribute	count=1
arg_pair	key ein ||| resource $p string $key	count=1
function_name	[function_name_1] matchbox ||| [function_name_2] [function_name_1]	count=1
function_name	liest ||| read	count=5
arg_pair	text in ||| string $text	count=1
namespace	zeiger von ||| function	count=1
function_name	funktion dio_stat() gibt ||| dio stat	count=1
arg_pair	oder ||| string $pathname int $mode	count=1
namespace	übernimmt die aktuellen ||| function	count=1
arg_pair	liefert informationen zu den ||| resource $imap_stream	count=1
function_name	socket_set_option() wird die option ||| set option	count=1
function_name	getätigten insert ||| insert	count=1
arg_pair	content ||| string $pattern string $content	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=366
function	aus dem [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	wenn er auf ein ||| bool	count=1
function_name	msql ergebnismenge die ||| msql data	count=1
function_name	gibt die fehlernummer ||| code	count=1
arg_pair	diese ihren status ändern ||| array $write	count=1
arg_pair	ausnahme dass die übergebenen ||| int $minute	count=1
namespace	aller in der gegebenen ||| function	count=1
namespace	die nicht-ascii zeichen enthalten ||| function	count=1
namespace	auf der aktuellen zeit ||| function	count=1
arg_pair	size angegebene größe mit ||| int $size	count=1
function	logischen hebräischen [arg_pair_2] ||| [function_name_1] string $hebrew_text [arg_pair_2]	count=1
namespace	servers für die ||| function	count=1
arg_pair	len bytes aus ||| int $len int $flags	count=1
function_name	zeiger auf das elternelement ||| move to element	count=1
function_name	aktuellen tabelle ||| fbsql table	count=1
arg_pair	[arg_pair] so dass ||| [arg_pair]	count=1
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| export to	count=1
function	maskiert [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	subject nach ||| int $limit	count=1
arg_pair	ein strukturelement oder einen ||| resource $pdfdoc int $id	count=1
function_name	datenbank [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	parameter dn ||| array $dn	count=1
arg_pair	die funktion openssl_pkcs7_sign() signiert ||| int $flags	count=1
function_name	zertifikat um festzustellen ob ||| openssl x509	count=1
arg_pair	den detaillierungsgrad von fehlermeldungen ||| resource $connection	count=1
function_name	aus einer msql ||| msql	count=1
arg_pair	domain von gettext() ||| string $codeset	count=1
namespace	funktion sondern ||| function	count=1
return	den inhalt ||| string	count=2
arg_pair	unescaped_string ||| resource $link_identifier	count=1
namespace	denen der ||| function	count=1
namespace	die verbindung ||| function	count=2
arg_pair	aufruf ||| string $function_name	count=1
arg_pair	zwischen [arg_pair] ||| [arg_pair]	count=1
arg_pair	server ||| resource $connection string $query	count=1
function_name	[function_name_1] definierten funktionen ||| [function_name_2] [function_name_1]	count=4
function_name	angegebenen datenbank zurück ||| dbase	count=1
arg_pair	den wert ||| resource $pdfdoc long $doc	count=1
namespace	der arrayelemente ||| function	count=1
function_name	des /encoding [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	die inhalte der ||| function	count=1
namespace	der cursor ||| function	count=1
function_name	subtrahiert ||| bcsub	count=1
function_name	dbase-datenbank im angegebenen zugriffsmodus ||| dbase	count=1
namespace	denen der angegebene ||| function	count=1
return	aufruf ||| mixed	count=1
function_name	einer ergebnismenge zurück ||| ingres	count=1
namespace	für die angegebene connection ||| function	count=1
namespace	von php an ||| function	count=1
namespace	auto_increment spalte durch die ||| function	count=1
function_name	definiert wurde ||| exists	count=1
arg_pair	fest ||| float $x	count=1
namespace	systemaufruf von ||| function	count=1
namespace	gibt die ||| function	count=28
arg_pair	ingres-server ||| string $types	count=2
function_name	mysql ergebnismenge ||| mysql	count=1
function_name	flags bei allen ||| setflag full	count=1
function_name	ob diese ||| select	count=1
function_name	erzeugt ein grafikzustandsobjekt ||| create gstate	count=1
function_name	eine abfrage ||| query	count=1
namespace	die per ||| function	count=1
function	die funktion ändert [function_name_1] [arg_pair_2] siehe imap_open() für angaben ||| [function_name_1] resource $imap_stream [arg_pair_2] string $new_mbox	count=1
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| to file	count=1
arg_pair	offset und [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=1
function	[function_name_1] und gibt ||| [arg_pair_2] [function_name_1]	count=1
function_name	ein element ||| move to	count=1
function_name	gibt die anzahl der [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	auf ein ||| move to	count=2
function_name	attribut verweist ||| move to	count=1
return	in einen string der ||| string	count=1
function_name	legt die ||| pdf	count=1
arg_pair	spaltenwerte mit den ||| resource $connection	count=1
namespace	der abbruch einer client-verbindung ||| function	count=1
namespace	inclusive der ||| function	count=1
function_name	das ||| move to next	count=1
arg_pair	formatierten string anhand eines ||| int $timestamp	count=1
return	des ||| mixed	count=1
namespace	gesamten body der ||| function	count=1
function_name	informationen über ||| pdf info	count=1
namespace	gültigkeit des durch die ||| function	count=1
function_name	schlüssel des zufälligen eintrags ||| array rand	count=1
arg_pair	vergleich groß- und kleinschreibung ||| string $str2	count=1
arg_pair	unescaped_string unter berücksichtigung ||| string $unescaped_string resource $link_identifier	count=1
arg_pair	und bcc ||| string $bcc	count=1
function_name	pdf dokument ||| pdf	count=1
namespace	der aktuellen zeit ||| function	count=1
function_name	spezifiziert ||| fopen	count=1
function_name	aufs erste ||| to next	count=1
return	ist ||| array	count=1
namespace	c version der ||| function	count=1
function_name	übergebene datum im gregorianischen ||| gregoriantojd	count=1
function_name	ersetzen-paare enthält ||| pspell config repl	count=1
function_name	private [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	erstellt ||| string	count=1
function_name	iso-8859-1 -kodierung ||| libencoding	count=1
function_name	gibt ein neues handle ||| handle	count=1
arg_pair	str das ||| string $delimiter	count=1
arg_pair	auf die mit size ||| int $size	count=1
function_name	wenn ||| move	count=1
arg_pair	in das postfach mailbox ||| string $mailbox	count=1
namespace	[namespace] standardausgabe ||| [namespace]	count=3
function_name	das feld definiert ||| field	count=1
arg_pair	string haystack vorkommt und ||| string $haystack	count=1
function_name	ein physisches ||| pdi document	count=1
function_name	ein attribut verweist oder ||| move	count=1
arg_pair	eine verbindung zu einer ||| string $dateiname	count=1
namespace	nicht von ||| function	count=1
namespace	nachstehenden liste der ||| function	count=1
namespace	konstanten in der engine ||| function	count=1
function_name	sendet ein site exec-kommando ||| exec	count=1
namespace	dem man über die ||| function	count=1
function_name	schließt ||| close	count=2
namespace	wie array() ist auch ||| function	count=1
namespace	namen [namespace] ||| [namespace]	count=3
arg_pair	in replacement angegebenen ||| mixed $replacement	count=1
return	zeiger ||| bool	count=1
arg_pair	content ||| string $content	count=1
function_name	dem get_defined_vars() aufgerufen wird ||| get defined vars	count=1
namespace	aus der ||| function	count=5
function_name	[function_name_1] [function_name_2] letztdefinierten callbackhandler und setzt ||| readline callback [function_name_2] [function_name_1]	count=1
function_name	zurückgegeben ||| pg	count=1
arg_pair	bereitet den text ||| resource $pdfdoc string $text	count=1
function_name	basistyp ||| type	count=1
function_name	überprüft ein zertifikat ||| openssl x509	count=1
arg_pair	den in envelope gegebenen ||| array $envelope	count=1
arg_pair	len bytes daten in ||| int $len int $flags	count=1
arg_pair	nimmt als ||| array $read	count=1
namespace	dio_fcntl() führt die mit ||| function	count=1
arg_pair	lokalen oder entfernten server ||| resource $link_identifier	count=1
arg_pair	ihren status ||| int $tv_sec	count=1
arg_pair	werten von array1 ||| array $array1 array $array2	count=1
function_name	dem get_defined_vars() aufgerufen wird ||| defined vars	count=1
function_name	löscht ||| dba delete	count=1
function_name	fügt ||| pdf add	count=1
arg_pair	wartet ||| array $read	count=1
function_name	des zufälligen eintrags bzw ||| rand	count=1
function_name	ein attribut verweist oder ||| move to next	count=1
return	keine wirkliche funktion ||| array	count=1
return	er ||| bool	count=2
function_name	mit zwei großen unterschieden ||| pconnect	count=1
function_name	aufs erste ||| next	count=1
function_name	feldes in einer ||| field	count=1
function_name	erzeugt ein ||| create	count=1
arg_pair	datenbank ||| string $database	count=1
function_name	für [function_name] angegebenem rdn ||| [function_name]	count=1
arg_pair	die datei in einem ||| bool $use_include_path	count=1
namespace	[namespace] ursprungswerte ||| [namespace]	count=3
namespace	array so dass der ||| function	count=2
arg_pair	von domain von ||| string $codeset	count=1
arg_pair	datei aber in einem ||| int $use_include_path	count=1
namespace	den inhalt der ||| function	count=1
function_name	kennwortstärke ||| check	count=1
function_name	schrift und ||| pdf load font	count=2
return	angegebenen ||| resource	count=2
arg_pair	legt den linecap -parameter ||| resource $p int $linecap	count=1
function_name	im gregorianischen kalender in ||| gregoriantojd	count=1
namespace	datensatzzeiger auf [namespace] in einem ||| [namespace]	count=1
function_name	kopfdaten der nachricht ||| imap	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $script [arg_pair_2]	count=4
function_name	[function_name_1] definiert ||| [function_name_1] [function_name_2]	count=4
namespace	schließt [namespace] ||| [namespace]	count=3
function_name	ist das gegenstück zu ||| decode	count=1
function_name	das nächste attribut wenn ||| move to next	count=1
function_name	nächste attribut wenn ||| next	count=1
namespace	an die ||| function	count=1
arg_pair	replacement angegebenen ||| mixed $string mixed $replacement	count=1
namespace	löschen der ||| function	count=1
arg_pair	aus array in ||| array $array int $case	count=1
function_name	string ist ||| is	count=1
function_name	in utf-8 ||| utf8	count=1
function_name	zeiger auf das nächste ||| move to	count=1
arg_pair	spezielle oder eine gewöhnliche ||| int $minor	count=1
namespace	zeichensatzes der ||| function	count=1
arg_pair	str und ||| string $str	count=1
return	verwendung seines ||| bool	count=1
function_name	liest [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	des schlüssels key in ||| mixed $key	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] page ext [arg_pair_2]	count=1
function_name	den apacheprozess ||| apache child terminate	count=1
return	versucht ||| bool	count=1
namespace	der datei angegeben ||| function	count=1
arg_pair	len bytes von ||| int $len	count=1
namespace	[namespace] setzt den ||| [namespace]	count=1
namespace	[namespace] array ||| [namespace]	count=3
function	erweiterung die [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	er auf ein element ||| xmlreader	count=1
arg_pair	fügt text und ||| string $text string $optlist	count=1
return	einen archiveintrag ||| bool	count=1
namespace	oder delete anweisung die ||| function	count=1
namespace	wobei xx der installationscode ||| function	count=1
arg_pair	und wartet ob ||| array $write	count=1
function_name	zeile und ||| fetch	count=1
function_name	aufs erste attribut wenn ||| attribute	count=1
arg_pair	png ||| int $filters	count=1
arg_pair	section angebenen ||| int $options	count=1
function_name	archiveintrag unter verwendung ||| index	count=1
arg_pair	assoc_array in ||| int $options	count=1
arg_pair	[arg_pair_1] content ||| [arg_pair_1] [arg_pair_2]	count=1
namespace	ein ||| xmlreader	count=2
arg_pair	die funktion [arg_pair_1] [arg_pair_2] siehe imap_open() für angaben ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	oder entfernten server ||| resource $link_identifier	count=1
function_name	er auf ||| move to	count=2
arg_pair	diese erzeugt ||| string $filename	count=1
function_name	ein verzeichnis mit ||| mkdir	count=1
function	den [arg_pair_2] ||| [function_name_1] resource $imap_stream [arg_pair_2] string $new_mbox	count=3
arg_pair	verbindung zu einer postgresql-datenbank ||| string $connection_string int $connect_type	count=1
namespace	nächste attribut wenn er ||| xmlreader	count=1
arg_pair	[arg_pair_1] text zur ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	der angegebene schlüssel in ||| string $key resource $handle	count=1
namespace	zurück ||| function	count=2
function_name	auf ||| to next	count=3
namespace	[namespace] funktion ||| [namespace]	count=3
function_name	syntax lint ||| php check syntax	count=1
namespace	http-header ||| function	count=1
arg_pair	den in name angegebenen ||| string $name	count=1
namespace	diese ||| function	count=1
namespace	dateiendungen die in der ||| function	count=1
arg_pair	werte von array1 mit ||| array $array1	count=1
arg_pair	pararmeter infilename ||| string $outfilename	count=1
function_name	liefert die nächste zeile ||| oci fetch	count=1
arg_pair	datei source nach ||| string $source	count=1
function_name	zugriff auf den semaphor ||| sem	count=1
function_name	nächste zeile ||| fetch	count=1
namespace	wie array() ist ||| function	count=1
function_name	[function_name] var_array ||| [function_name] by	count=2
function_name	definiert ||| exists	count=2
return	in die datenbank zurück ||| int	count=1
function_name	übergebene zertifikat ||| openssl x509	count=2
function_name	attribut wenn er auf ||| move to	count=1
function_name	maskiert die ||| dbx escape	count=1
arg_pair	funktion ||| array $array	count=1
function_name	ergebnisses ||| mssql	count=2
function_name	tty namen ||| pg tty	count=1
namespace	zeichenkette [namespace] ||| [namespace]	count=3
function_name	dbase-datenbank im angegebenen ||| dbase open	count=1
arg_pair	in purpose ||| int $purpose	count=1
arg_pair	den gelesenen feldern ||| string $escape	count=1
function_name	legt die aktuelle schrift ||| pdf	count=1
function_name	[function_name_1] abfrageergebnis gehört ||| [function_name_2] [function_name_1]	count=2
function_name	symboltabelle zu ||| extract	count=1
namespace	der durch die parameter ||| function	count=1
return	ein array das ||| array	count=1
function_name	[function_name] werden ||| msg get [function_name]	count=1
namespace	argumente unter beachtung von ||| function	count=1
function_name	or [function_name] sets ||| maxdb [function_name]	count=1
arg_pair	ob diese ihren ||| array $except int $tv_sec	count=1
function_name	fehlerschwelle ||| mssql min error severity	count=2
arg_pair	gibt den input ||| string $input	count=1
namespace	wird aufgerufen ||| function	count=1
namespace	farbverlauf [namespace] auf einem ||| [namespace]	count=1
function_name	auf ein attribut ||| move	count=1
function_name	postgresql abfrageergebnis ||| pg	count=3
function_name	wert eines pcos-pfades ||| pdf pcos get number	count=1
arg_pair	index ||| int $index	count=1
function_name	er auf ein ||| move to	count=2
function_name	oder ||| mknod	count=1
namespace	umask von php ||| function	count=1
arg_pair	aus ||| int $start int $length	count=1
namespace	der indexe zu den ||| function	count=1
function_name	setzt ||| to	count=1
namespace	ob ||| function	count=1
return	umschalten ||| bool	count=1
namespace	schließt die vom ||| function	count=1
function_name	neues handle ||| handle	count=1
namespace	besteht [namespace] ||| [namespace]	count=3
arg_pair	array nach schlüsseln in ||| int $sort_flags	count=1
function_name	versehene repräsentation des ||| to file	count=1
function_name	seite unter ||| page	count=1
return	array() ist auch ||| array	count=1
arg_pair	diese ihren status ändern ||| array $read array $write	count=1
function_name	[function_name] ohne ||| [function_name] real escape	count=3
function_name	template unter berücksichtigung ||| image	count=1
function_name	vorzugebenden musters ||| date	count=1
namespace	es für die weitere ||| function	count=1
namespace	anweisung die ||| function	count=1
arg_pair	und kleinschreibung berücksichtigt ||| string $str2	count=1
namespace	methode ist ||| soapclient	count=1
function_name	repräsentation des schlüssels ||| pkey export to file	count=1
return	zeichensätzen zwischen server und ||| string	count=1
namespace	gibt das ||| soapclient	count=1
arg_pair	filename ||| bool $raw_output	count=1
function_name	pem-kodiert versehene repräsentation des ||| to file	count=1
function_name	string ist ||| is string	count=1
function_name	platten-partition zurückgeben ||| disk free space	count=1
function_name	den vollständigen text ||| last	count=1
namespace	des französischen revolutionskalenders zu ||| function	count=1
namespace	dezimale entsprechung der binären ||| function	count=1
namespace	den schlüsseln die ||| function	count=1
return	gegebene ||| mixed	count=1
arg_pair	ein ||| mixed $data string $encoding	count=1
namespace	die durch die ||| function	count=1
function	[function_name_1] dessen dessen ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	daten mit ||| string $data	count=2
return	eine ||| bool	count=1
function_name	den momentanen [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	des zuletzt ||| last	count=2
function_name	binäre guid ||| mssql guid string	count=1
function_name	ersetzt die ||| array replace	count=1
function_name	des feldes mit ||| field	count=1
function_name	bindet die php-variable ||| oci bind	count=1
function_name	kompletten ungefilterten kopf ||| imap fetchheader	count=1
arg_pair	in_charset kodierte zeichenkette ||| string $in_charset	count=1
function_name	oder aufs ||| move to	count=1
namespace	die angegebene anzahl von ||| function	count=1
function_name	apache write-timer ||| apache	count=1
arg_pair	wartet ||| array $except int $tv_sec	count=1
namespace	das ||| soapclient	count=1
namespace	der aktuellen locale-einstellung ||| function	count=2
function_name	er ||| move to	count=2
function	[function_name_1] ein ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	durch eine ||| resource $pdfdoc	count=1
namespace	die nicht explizit ||| function	count=1
namespace	[namespace] recode-anweisung ||| [namespace]	count=1
arg_pair	php- oder benutzerdefinierte funktion ||| string $name mixed $callback	count=1
arg_pair	data unter ||| string $data	count=1
function_name	browser ||| get browser	count=1
function	[function_name_1] -aufrufs mit ||| [function_name_1] [arg_pair_2]	count=4
function_name	wenn er ||| move to next	count=1
function_name	ein array welches ||| fetch array	count=1
arg_pair	[arg_pair_1] postfach ||| [arg_pair_2] [arg_pair_1]	count=2
function	die funktion ändert [function_name_1] [arg_pair_2] siehe imap_open() für angaben ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	datei aber ||| int $use_include_path	count=1
namespace	der api-funktion ||| function	count=1
arg_pair	header-informationen zu übertragendes ||| int $expire string $path	count=1
arg_pair	die übergebene zeichenkette ||| object $link_identifier string $text	count=1
arg_pair	und ||| string $name	count=1
namespace	benutzt werden könnten um ||| function	count=1
arg_pair	den wert eines ||| resource $p	count=1
namespace	und [namespace] einen ||| [namespace]	count=1
function_name	löscht einen archiveintrag ||| delete	count=1
function_name	einer session ||| session	count=1
function_name	text-block [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	geparst werden soll ||| string $source	count=1
arg_pair	diese ihren status ändern ||| array $except int $tv_sec	count=1
function_name	aktuellen transaktionsstatus ||| pg transaction status	count=1
function_name	das nächste ||| to next	count=1
function_name	angabe ||| filepro fieldname	count=1
arg_pair	dass file_get_contents() die datei ||| string $filename	count=1
arg_pair	lokale ||| int $mode	count=1
arg_pair	len bytes aus dem ||| int $len int $flags	count=1
arg_pair	datei zum lesen ||| string $mode	count=1
namespace	die vom übergebenen dateizeiger ||| function	count=1
namespace	benutzt werden könnten ||| function	count=1
arg_pair	aus breite und ||| string $filename	count=1
function_name	aktuellen session-moduls zurück ||| session module	count=1
function_name	versehene repräsentation ||| openssl pkey export to file	count=1
arg_pair	funktion ||| int $flags string $extracerts	count=1
function_name	aufgeführt sind ein \ ||| addcslashes	count=1
function_name	betroffenen zeilen ||| affected rows	count=1
arg_pair	die funktion ||| int $flags string $extracerts	count=1
function_name	die exslt-bibliothek kompiliert wurde ||| has exslt support	count=1
function_name	[function_name] fest ||| pdf [function_name]	count=1
arg_pair	gibt ||| resource $result	count=1
function_name	kleinbuchstabe im sinne ||| lower	count=1
function_name	ob die angegebene eigenschaft ||| property	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] check private key [arg_pair_2]	count=1
namespace	in der engine als ||| function	count=1
function_name	php-variable ||| oci bind array	count=1
function_name	ein-zeichen-string ||| chr	count=1
arg_pair	table_name in ||| resource $connection string $table_name	count=1
function_name	aufgeführt sind ein ||| addcslashes	count=1
namespace	der linken rechten ||| function	count=1
function_name	[function_name] werte ||| array [function_name]	count=3
arg_pair	in julianday übergebenen ||| int $julianday int $mode	count=1
function	exportiert [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	die option die ||| set option	count=1
arg_pair	schnittmenge von arrays ||| array $array2	count=1
arg_pair	basierend ||| array $configargs array $extraattribs	count=1
namespace	und übernimmt die ||| function	count=1
arg_pair	diese ihren status ändern ||| array $read	count=1
arg_pair	zeichenkette so dass sie ||| string $text	count=1
function_name	zertifikat um festzustellen ob ||| openssl x509 checkpurpose	count=1
namespace	und der ausgabepuffer aber ||| function	count=1
function_name	listet alle [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function	logischen hebräischen [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	abonnement des [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	feldes in ||| field	count=1
arg_pair	wo ||| int $line	count=1
namespace	des aktuellen zeichensatzes der ||| function	count=1
arg_pair	vom anfang ||| string $str string $character_mask	count=1
arg_pair	key und bereitet ||| mixed $key string $passphrase	count=1
function_name	jeweils teil von ||| explode	count=1
arg_pair	text in ||| resource $p string $text	count=1
namespace	und speichert [namespace] ||| [namespace]	count=1
function_name	letzte ||| pg last	count=1
function	[function_name_1] datei zum ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	in ||| string $data	count=1
function_name	methode importiert ein ||| import	count=1
arg_pair	aus array ||| array $array	count=1
arg_pair	variable an den ||| resource $statement	count=1
return	eine verbindung ||| resource	count=1
arg_pair	konvertiert einen string ||| string $string int $split_length	count=1
arg_pair	diese ihren ||| array $read array $write	count=1
function_name	übergebene interface ||| interface	count=1
arg_pair	str in einen ||| string $str	count=1
namespace	auf die die ||| function	count=1
function_name	wenn er auf ein ||| to	count=1
arg_pair	zeichen von str das ||| string $str string $delimiter	count=1
namespace	die angegebene zeile ||| function	count=1
arg_pair	eine png -datei ||| int $filters	count=1
arg_pair	htmlspecialchars() allerdings wandelt htmlentities() ||| string $encoding	count=1
arg_pair	aus breite und höhe ||| string $filename	count=1
namespace	kalender in der form ||| function	count=2
arg_pair	datei ||| int $use_include_path	count=2
namespace	dem server die zur ||| function	count=1
function_name	oder aufs ||| move to next	count=1
arg_pair	assoc_array entsprechen und deren ||| int $options	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pdi [arg_pair_2]	count=1
arg_pair	zeichenkodierung des ||| string $encoding	count=1
namespace	ihren ||| function	count=1
function_name	spezielle ||| mknod	count=1
function_name	erste attribut wenn er ||| attribute	count=1
return	attribut ||| bool	count=2
namespace	das der ||| function	count=2
function_name	e hoch ||| exp	count=1
namespace	den prozess pid der ||| function	count=1
function_name	tabellennamen von einer ||| list tables	count=1
arg_pair	offset und ||| array $array int $offset	count=1
arg_pair	subject ||| mixed $subject int $limit	count=1
function_name	namen vom aufruf von ||| name	count=1
arg_pair	und ||| int $tv_sec	count=1
return	rückt [return] internen zeiger ||| [return]	count=1
return	gegebenen ||| int	count=2
function_name	geholten [function_name] entspricht ||| [function_name]	count=1
namespace	dass der ||| function	count=3
function_name	angegebenen klasse existiert ||| exists	count=1
function_name	soap-antwort gesendet ||| response	count=1
function_name	benutzten verbindung für ||| get host info	count=1
namespace	ressource auf die ||| function	count=1
function_name	dem get_defined_vars() aufgerufen ||| defined vars	count=1
namespace	diese ihren status ändern ||| function	count=1
namespace	die namen aller ||| function	count=1
function_name	[function_name_1] datenbanken ||| [function_name_1] [function_name_2]	count=1
namespace	ist auch ||| function	count=1
function_name	namen des hosts ||| host	count=1
namespace	format und gibt ||| function	count=1
namespace	ob der ||| function	count=1
namespace	die in ||| function	count=2
function_name	[function_name] steuern beispielsweise ||| [function_name] set	count=3
arg_pair	erzeugt eine spezielle oder ||| string $pathname	count=1
function_name	den stacktrace ||| trace	count=1
function_name	schließt ||| ingres close	count=1
function_name	eine sqlite-datenbank ||| sqlite factory	count=1
return	ein array mit ||| array	count=6
namespace	mit der übergebenen zeilennummer ||| function	count=1
namespace	französischen revolutionskalenders zu einer ||| function	count=1
function_name	flags bei allen ||| full	count=1
function_name	diese ihren status ||| socket	count=1
function_name	interface definiert ||| interface exists	count=2
arg_pair	und wartet ob diese ||| array $read	count=1
namespace	wird aufgerufen um ||| function	count=1
function	[function_name_1] zeichenkette so ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] physisches oder ||| [function_name_1] [function_name_2]	count=1
function_name	felder von einer ||| fields	count=1
namespace	setzt [namespace] ursprungswerte ||| [namespace]	count=1
namespace	führt die ||| function	count=1
namespace	[namespace] funktion sehr ||| [namespace]	count=3
arg_pair	die mittels offset ||| array $array int $offset	count=1
function_name	versucht ein verzeichnis ||| mkdir	count=1
namespace	die rückgabe der ergebnisse ||| function	count=1
namespace	process der ||| function	count=1
function_name	string vom format utf-32 ||| utf32	count=1
function_name	oder virtuelles 3d-modell ||| load 3ddata	count=1
function_name	das nächste ||| move to next	count=1
namespace	der zuletzt ausgelösten exception ||| function	count=1
arg_pair	eine spezielle ||| string $pathname	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] open [function_name_1]	count=18
function_name	und spalte eines ||| result	count=1
namespace	dem server [namespace] angegebenen verbindung ||| [namespace]	count=1
namespace	die angegebene zeichenkette ||| function	count=1
namespace	aktuelle verzeichnis von ||| function	count=1
arg_pair	das postfach mailbox ||| int $options	count=1
return	die funktion ||| string	count=1
function	abschnitts [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	eine ||| resource $handle int $mode	count=1
function_name	im bytecode cache ||| apc compile file	count=1
arg_pair	überprüft welche ||| string $file int $mode	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $table_name [arg_pair_1]	count=4
function_name	diese funktion beendet ||| curl close	count=1
arg_pair	ob ||| array $write	count=1
namespace	in der alle ||| function	count=1
arg_pair	dieser methode ist missbilligt ||| string $arguments	count=1
namespace	zeichenkette zurück in der ||| function	count=1
function_name	header bereits gesendet ||| headers	count=1
function_name	um einen gemeinsamen ||| shmop close	count=1
function_name	ein attribut verweist oder ||| to next	count=1
namespace	der gegebenen ||| function	count=2
namespace	die im archiv ||| ziparchive	count=1
function_name	[function_name_1] ergebnismenge ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] unter anwendung ||| [function_name_1] [function_name_2]	count=1
function_name	abfrageergebnis ||| num	count=1
return	anzahl ||| int	count=2
arg_pair	verschlüsselt die daten ||| string $data string $method	count=1
function	php-variable variable [arg_pair_2] ||| [function_name_1] by name [arg_pair_2]	count=1
function_name	das nächste ||| move	count=1
namespace	server [namespace] ||| [namespace]	count=2
function_name	verknüpfte ergebnis ||| result	count=1
arg_pair	mittels offset [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=1
namespace	befinden mit der ||| function	count=1
function_name	extension ||| extension funcs	count=1
arg_pair	subject ||| string $subject	count=1
function	löscht [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	versehene repräsentation des schlüssels ||| export to	count=1
arg_pair	-aufrufs ||| string $user_compare_function	count=1
return	eine spezielle ||| bool	count=1
function_name	[function_name_1] angeforderten ||| [function_name_2] [function_name_1]	count=1
arg_pair	uri angeben ||| string $uri	count=1
arg_pair	dem [arg_pair] system ||| [arg_pair]	count=1
function	[function_name_1] von einer ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name] vollständig ||| [function_name] read	count=1
return	[return] typen ||| [return]	count=1
function_name	[function_name] alle werte ||| array intersect [function_name]	count=3
namespace	und wartet ob diese ||| function	count=1
function_name	einen neuen [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	klein- oder großbuchstaben umgewandelt ||| array change key case	count=1
arg_pair	haystack vorkommt und ||| string $haystack	count=1
function_name	msql-servers ||| msql	count=1
function_name	und spalte [function_name_2] ||| [function_name_2] fetch [function_name_1]	count=2
function_name	[function_name_1] für eine ||| [function_name_2] [function_name_1]	count=2
arg_pair	übergebene zeichenkette ||| string $text	count=1
function_name	[function_name] pdi-dokumentparameters ||| pdf get pdi [function_name]	count=2
namespace	aus der liste ||| function	count=1
function_name	kopiert datei ||| copy	count=1
function_name	leer ist ||| reset	count=1
arg_pair	aufruf dieser methode ist ||| string $function_name	count=1
function_name	felder in einem abfrageergebnis ||| fields	count=1
function_name	get_defined_vars() aufgerufen wird ||| defined vars	count=1
function_name	registriert ein ||| register shutdown function	count=1
arg_pair	und gibt bei ||| resource $connection string $encoding	count=1
function_name	den zeiger ||| to	count=1
function_name	maskiert die übergebene ||| dbx escape string	count=1
namespace	wartet ob ||| function	count=1
arg_pair	übergebenen image ||| resource $image string $filename	count=1
arg_pair	hängt ||| array $record	count=1
namespace	1.1.1970 zurück [namespace] dem ||| [namespace]	count=1
function_name	attribut ||| move to	count=2
function_name	produkt von werten in ||| array product	count=1
arg_pair	bewegt [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function	[function_name_1] zeichenkette so ||| [arg_pair_2] [function_name_1]	count=1
function_name	anderen dokumentbestandteil ||| pdf end item	count=1
function_name	festgelegten grenze ||| substr	count=1
function_name	eines pcos-pfades vom ||| pdf pcos	count=2
namespace	der inhalt ||| function	count=1
function_name	unter verwendung ||| delete index	count=1
arg_pair	msglist angegebenen ||| resource $imap_stream string $msglist	count=1
function_name	aus welcher das feld ||| msql field	count=1
namespace	die nummer der ||| function	count=1
return	wenn sie sich über ||| bool	count=1
function_name	angegebene eigenschaft gesetzt wurde ||| get parser property	count=1
namespace	nachstehenden liste der betroffenen ||| function	count=1
function_name	angeforderten option option ||| get option	count=2
arg_pair	in ||| array $array int $sort_flags	count=1
function	[function_name_1] schlüssels key ||| [function_name_1] [arg_pair_2]	count=3
function_name	werden ||| guid	count=1
arg_pair	in zeichensatz in_charset ||| string $in_charset	count=1
arg_pair	an den entfernten ftp-server ||| resource $ftp_stream	count=1
namespace	die terminalumgebung auf die ||| function	count=1
namespace	als ||| function	count=1
namespace	der liste der ||| function	count=1
arg_pair	mit den http ||| string $domain bool $secure	count=1
function_name	zeiger auf das nächste ||| next	count=1
arg_pair	aus einem geöffneten verzeichniseintrag ||| int $length	count=1
function_name	exslt-bibliothek kompiliert wurde ||| has exslt support	count=1
function_name	eines postgresql ||| pg	count=1
namespace	der datei namens ||| function	count=1
namespace	der form mm/dd/yyyy ||| function	count=2
function_name	listet alle datenbanken des ||| list dbs	count=1
arg_pair	trennzeichens um ||| bool $cut	count=1
function_name	eines pcos-pfades ||| pdf pcos	count=2
namespace	keine wirkliche funktion sondern ||| function	count=1
arg_pair	erste [arg_pair] ||| [arg_pair]	count=3
arg_pair	basierend auf ||| array $configargs array $extraattribs	count=1
function_name	benutzten verbindung ||| mysql get host info	count=1
return	ein zip-archiv für den ||| resource	count=1
namespace	mischt die reihenfolge der ||| function	count=1
function_name	sequenz ||| array slice	count=2
arg_pair	offset über ||| int $offset	count=1
arg_pair	den parameter val auf ||| float $val	count=1
namespace	in verbindung mit der ||| function	count=1
function_name	[function_name_1] [function_name_2] der ||| [function_name_1] [function_name_2]	count=2
return	ein array der mit ||| array	count=1
return	öffnet eine ||| resource	count=4
function_name	einer msql ergebnismenge ||| msql result	count=1
arg_pair	mit den http ||| string $domain	count=1
arg_pair	oder diese ||| int $mode	count=1
arg_pair	mode ||| resource $ftp_stream int $mode	count=1
arg_pair	zufällig erzeugten geheimen ||| array $env_keys array $pub_key_ids	count=1
return	zeichenfarbe auf ||| bool	count=1
arg_pair	[arg_pair] späteren ||| [arg_pair]	count=1
function_name	oder virtuelles pdf-dokument und ||| pdi	count=1
function_name	anhielt ||| wstopsig	count=1
function_name	skalar [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ein grafikzustandsobjekt ||| pdf set gstate	count=1
namespace	-größe an [namespace] aktuellen position ||| [namespace]	count=1
arg_pair	empfängt len bytes ||| int $flags	count=1
namespace	zu setzen ||| function	count=1
function_name	schnittstellen ||| create listen	count=2
function_name	mit dem öffentlichen ||| openssl public	count=1
namespace	der inhalt der ||| function	count=1
function_name	einen 8 bit string ||| qprint	count=1
function_name	gibt die anzahl der [function_name_1] [function_name_2] zurück ||| function int [function_name_2] [function_name_1]	count=2
return	alle http-header ||| array	count=1
function_name	0 [function_name] 1 inklusive ||| [function_name] setgray	count=2
function_name	das mysql [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	erstellt ||| string $type_name	count=1
function	mysql [arg_pair_2] ||| [function_name_1] list tables [arg_pair_2]	count=1
arg_pair	len bytes ||| int $len	count=2
namespace	wird zur löschung ||| function	count=1
function_name	client für ||| client	count=1
arg_pair	skaliert ||| float $sy	count=1
namespace	eine matrix mit der ||| function	count=1
arg_pair	und wartet ||| array $read array $write	count=1
arg_pair	einer ||| int $dbase_identifier int $record_number	count=1
namespace	aller in der ||| function	count=1
function_name	ein attribut ||| to	count=1
arg_pair	zugriffsrechte für ||| string $id string $rights	count=1
namespace	der installationscode ist ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=212
function_name	inhalt ||| pdi parameter	count=1
return	gegebenen argumente ||| int	count=1
arg_pair	file_get_contents() die datei in ||| string $filename	count=1
arg_pair	abfrage aus ||| resource $query	count=1
namespace	wenn er auf ein ||| xmlreader	count=1
function_name	aktuellen pdf-dokuments ||| pdf	count=1
arg_pair	month day ||| int $month int $day	count=2
function_name	die anzahl der dokumente ||| udm get doc count	count=1
arg_pair	input ||| int $pad_length	count=1
namespace	abfrage [namespace] pg_send_query() ||| [namespace]	count=1
return	liefert ||| int	count=1
arg_pair	-aufrufs mit einer ||| string $user_compare_function	count=1
function_name	ihn zur nutzung ||| pkey get private	count=1
arg_pair	liest/setzt verschiedene interne readline-variablen ||| string $newvalue	count=1
namespace	parameter die ||| function	count=1
function_name	ipv4-adresse des ||| gethostbyname	count=1
function_name	[function_name_1] schlüssels ||| [function_name_2] [function_name_1]	count=4
arg_pair	und als bidirektionaler kommunikationsendpunkt ||| string $pathname int $mode	count=1
arg_pair	teilweise auf ||| float $urx float $ury	count=1
function_name	ein ||| to next	count=2
function_name	ascii-hülle pem-kodiert versehene repräsentation ||| pkey export to	count=1
namespace	der vergleich groß- ||| function	count=1
function_name	farbraum und ||| pdf setcolor	count=1
namespace	[namespace] linienfarbe und ||| [namespace]	count=1
namespace	das ||| function	count=12
function_name	in die aktuelle symboltabelle ||| extract	count=1
function_name	liste von tabellennamen von ||| list tables	count=1
function_name	wenn ||| next	count=1
return	öffnet eine verbindung ||| resource	count=1
function_name	angabe ||| filepro fieldwidth	count=1
arg_pair	val auf die ||| float $val	count=1
return	auf neue ||| resource	count=1
return	nach einer ||| int	count=1
function_name	[function_name_1] aktuellen tabelle ||| string [function_name_2] [function_name_1] resource	count=1
arg_pair	von domain von gettext() ||| string $codeset	count=1
arg_pair	den input ||| string $input	count=1
arg_pair	eine spezielle oder ||| string $pathname	count=1
arg_pair	der geparst werden soll ||| string $source string $encoding	count=1
namespace	einen vergleichsalgorithmus der ||| function	count=1
function_name	persistente ||| ingres pconnect	count=2
arg_pair	assoc_array entsprechen ||| array $assoc_array	count=1
return	den zeiger auf ||| bool	count=1
arg_pair	ermittelt den ||| resource $p string $key	count=1
namespace	zurück die von der ||| function	count=2
arg_pair	diese funktion ||| string $string int $flags	count=1
function_name	gibt die letzte fehlermeldung ||| last error	count=1
arg_pair	socket len bytes ||| int $len	count=1
function_name	exportiert die ||| export	count=1
function_name	abonnement des postfachs ||| imap unsubscribe	count=1
function_name	virtuelles pdf ||| pdf	count=1
namespace	der datenbank zurück ||| function	count=4
arg_pair	[arg_pair_1] length spezifizierte ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	key ||| string $key	count=1
function_name	attribut ||| to	count=2
function_name	schreibt ||| write	count=4
function_name	einen datensatz ||| get record	count=1
namespace	denen der angegebene internet-host ||| function	count=1
function_name	dies keine ||| list	count=1
return	dieser methode ||| mixed	count=1
function_name	zusammenhang zwischen den ||| arsort	count=1
arg_pair	ob der übergebene hash ||| string $hash string $algo	count=1
namespace	die generierte pdf-datei ||| function	count=1
function_name	ermittelt ||| get resource	count=1
function_name	utf-8 zu sein ||| utf8	count=1
namespace	holt die nächste ||| function	count=1
function_name	schlüssel-details zurück bits schlüssel ||| openssl pkey get details	count=1
function_name	versehene repräsentation des ||| pkey export to file	count=1
namespace	liefert den fehlertext der ||| function	count=1
function_name	randes für beliebige anmerkungstypen ||| set border dash	count=1
return	datum in einen string ||| string	count=1
namespace	dio_fcntl() führt die ||| function	count=1
function_name	ein boolean ist ||| is	count=1
function_name	client für bestimmte zeichensätze ||| client encoding	count=1
return	wartet ob ||| int	count=1
function_name	benutzten verbindung ||| host info	count=1
function_name	gid ||| setgid	count=1
function_name	zeiger auf ||| move	count=1
function_name	persistente verbindung zu ||| ingres pconnect	count=1
function_name	den [function_name] ||| [function_name] reset	count=1
arg_pair	baut eine ||| string $username	count=1
arg_pair	werte des assoc_array in ||| int $options	count=1
namespace	8-bit-string zurück der der ||| function	count=1
function_name	ersetzt in der durch ||| replace	count=1
namespace	2.2.x der zweite ||| function	count=1
namespace	liefert [namespace] ||| [namespace]	count=3
function_name	ist auch dies ||| list	count=1
function_name	spalte ||| result	count=1
arg_pair	eine datenzeile ||| int $fetch_flag	count=1
namespace	wird entsprechend der ||| function	count=1
arg_pair	variable ||| mixed $var bool $syntax_only	count=1
arg_pair	den mit einer verbindung ||| resource $link_identifier	count=1
arg_pair	image ||| bool $dither	count=1
arg_pair	replacement angegebenen zeichenkette ||| mixed $replacement	count=1
arg_pair	entfernten server ||| string $database_name resource $link_identifier	count=1
namespace	[namespace] angegebene ||| [namespace]	count=3
arg_pair	anfang eines strings ||| string $str string $character_mask	count=1
function_name	den apacheprozess ||| child terminate	count=1
arg_pair	schnittmenge ||| array $array2	count=1
arg_pair	den ||| resource $statement	count=1
namespace	zurück die ||| function	count=2
namespace	zugewiesen oder von ||| function	count=1
namespace	zurück [namespace] dem in ||| [namespace]	count=1
arg_pair	in julianday übergebenen tag ||| int $julianday	count=1
namespace	von email inclusive der ||| function	count=1
arg_pair	ob diese ||| array $write	count=1
function_name	jeweils teil ||| explode	count=1
arg_pair	übergebene zeichenkette so ||| string $text	count=1
function_name	[function_name_1] zurückgeliefert ||| [function_name_2] [function_name_1]	count=2
namespace	der mittels openssl_pkey_new() ||| function	count=1
function_name	nächste attribut wenn ||| to	count=1
arg_pair	daten ||| string $data	count=2
function_name	gibt den aktuellen transaktionsstatus ||| pg transaction status	count=1
arg_pair	datenzeile aus ||| resource $result_identifier int $fetch_flag	count=1
arg_pair	eines font -handle das ||| int $font	count=1
arg_pair	als ||| array $except	count=1
function_name	element verweist ||| move	count=1
function_name	attribut wenn er ||| next attribute	count=1
arg_pair	benutzerdefinierte funktion ||| string $name mixed $callback	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $filename [arg_pair_2]	count=3
function_name	pcos-pfades vom typ zahl ||| pdf pcos get	count=1
namespace	datensatz mit der ||| function	count=2
namespace	der allen zeichen ||| function	count=1
function_name	füllt die $_session-superglobale damit ||| decode	count=1
function_name	schlüssel [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	an [arg_pair] ||| [arg_pair]	count=1
function_name	keine wirkliche funktion sondern ||| list	count=1
arg_pair	nimmt ||| array $except	count=1
function_name	ob diese ||| socket	count=1
arg_pair	zeichen vom anfang ||| string $str string $character_mask	count=1
return	gibt [return] typen ||| [return]	count=1
namespace	die gegebene ||| function	count=1
arg_pair	angebenen offset über bis ||| int $offset	count=1
return	wie array() ||| array	count=1
arg_pair	sealed_data unter verwendung ||| string $sealed_data	count=1
namespace	wobei xx der ||| function	count=1
function_name	ruft informationen oder ||| info	count=1
arg_pair	diese erzeugt sollte sie ||| string $filename	count=1
namespace	auf der aktuellen ||| function	count=1
arg_pair	oder ||| string $pathname	count=1
function_name	einzelne textzeile unter ||| textline	count=1
function	[function_name_1] domain ||| [arg_pair_2] [function_name_1]	count=3
function_name	der zeitpunkt wann der ||| filemtime	count=1
namespace	der in ||| function	count=2
function_name	ein element verweist ||| move	count=1
function_name	felder in ||| fields	count=1
function_name	datei /etc/services ermittelt) ||| getservbyport	count=1
arg_pair	vergleich groß- und kleinschreibung ||| string $str1 string $str2	count=1
namespace	gibt die zahl ||| function	count=2
namespace	liefert ||| function	count=1
namespace	dem server [namespace] ||| [namespace]	count=2
arg_pair	groß- und kleinschreibung ||| string $str1	count=1
function_name	keine wirkliche funktion ||| list	count=1
function_name	oid des datentyps ||| oid	count=1
function_name	sinh arg /cosh ||| tanh	count=1
arg_pair	von domain ||| string $codeset	count=1
namespace	datei ||| function	count=1
namespace	das entsprechende julianische ||| function	count=1
arg_pair	durch den pararmeter infilename ||| string $infilename string $outfilename	count=1
function_name	sequenz von elementen des ||| slice	count=1
function_name	verweist oder ||| to next	count=1
arg_pair	übergebenen image ||| resource $image	count=1
namespace	nächste ||| xmlreader	count=1
function_name	für ||| initgroups	count=1
arg_pair	unix-timestamp entsprechend ||| int $hour int $minute	count=1
arg_pair	alpha bzw ||| float $alpha	count=1
function_name	sondern ein ||| list	count=1
function_name	htmlspecialchars() ||| htmlspecialchars	count=1
namespace	gibt informationen über die ||| function	count=1
function_name	pcos-pfades vom typ ||| pdf pcos get	count=2
function_name	auf das nächste attribut ||| move to next	count=1
arg_pair	angegebenen ||| string $database resource $link_identifier	count=1
arg_pair	wert zu ||| mixed $offset mixed $value	count=1
function_name	der liste der definierten ||| function	count=1
arg_pair	das erste [arg_pair] ||| [arg_pair]	count=3
namespace	von mikrosekunden ||| function	count=1
function_name	den zeiger auf ||| next	count=1
arg_pair	mit flag [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	nächste attribut wenn er ||| next	count=1
function	[function_name_1] verschiedener optionen ||| [function_name_1] [arg_pair_2]	count=3
function	erweiterung die [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	liefert alle http-header des ||| array	count=1
function_name	den ||| move	count=1
function_name	queue datenstruktur zu ||| set queue	count=1
arg_pair	vom anfang eines ||| string $character_mask	count=1
function_name	einen archiveintrag ||| index	count=1
arg_pair	und wartet ob ||| array $except int $tv_sec	count=1
function_name	auf ein attribut verweist ||| move to next	count=1
function_name	[function_name_1] protokoll ||| [function_name_2] [function_name_1]	count=3
function_name	ein array welches mit ||| fetch array	count=1
function_name	[function_name_1] zertifikat ||| [function_name_2] [function_name_1]	count=6
arg_pair	das in month day ||| int $day	count=2
arg_pair	message übergebene string wird ||| string $message string $options	count=1
arg_pair	postfachs mailbox ||| string $mailbox	count=1
function_name	informationen oder ||| multi info	count=1
function_name	aktuellen requests ||| getallheaders	count=1
return	einer entfernten datei ||| int	count=1
namespace	der per ||| function	count=1
namespace	der standardmässigen fehlerbehandlung ||| function	count=1
arg_pair	einer variable ||| bool $syntax_only	count=1
function_name	einer datenbank als indiziertes ||| dbase get record	count=1
return	attribut wenn ||| bool	count=1
function_name	extensions aus ||| extensions	count=1
namespace	über die die ||| function	count=1
function_name	oid ||| type oid	count=1
function_name	für das feld mit ||| field	count=1
function_name	textflussobjekt oder fügt ||| textflow	count=1
arg_pair	size angegebene ||| int $size	count=1
namespace	und gibt die ||| function	count=2
function_name	öffnet [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	und als bidirektionaler ||| string $pathname	count=1
function_name	oid [function_name] ||| pg [function_name]	count=1
function_name	ein ||| bind	count=1
function_name	erstellt ein neues v8js ||| construct	count=1
return	keine wirkliche funktion sondern ||| array	count=1
function_name	wartet ob ||| socket	count=1
namespace	abfrage [namespace] pg_send_query() pg_send_query_params() ||| [namespace]	count=1
arg_pair	funktion ist ||| string $string	count=1
function_name	den ersten [function_name] ||| [function_name]	count=1
namespace	ingres-datenbankserver der mit der ||| function	count=1
function_name	[function_name_1] zum ||| [function_name_2] [function_name_1]	count=3
function_name	aufs erste ||| move to	count=1
function_name	query an den ||| ingres query	count=1
function_name	internen datensatzzeiger ||| data seek	count=1
function_name	als assoziatives ||| assoc	count=1
arg_pair	in eine ||| resource $handle int $mode	count=1
arg_pair	und gibt bei erfolg ||| resource $connection string $encoding	count=1
function_name	werten aus ||| update	count=1
arg_pair	funktion openssl_pkcs7_sign() signiert ||| string $extracerts	count=1
function_name	funktionen zurück ||| functions	count=1
function_name	einen knoten eines dom ||| import dom	count=1
function_name	ergebnis verknüpfte postgresql ||| pg result	count=2
function_name	unter verwendung seines ||| index	count=1
function	angegebenen [arg_pair_2] ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=1
namespace	den fehlercode der ||| function	count=1
function_name	vorhanden wird verworfen ||| end clean	count=1
function_name	pg_send_query_params() [function_name] pg_send_execute() ||| [function_name] cancel	count=1
namespace	[namespace] angegebenen verbindungskennung ||| [namespace]	count=2
namespace	benutzt werden ||| function	count=2
function_name	physisches oder ||| pdi document	count=1
function_name	ihren status ||| socket select	count=1
function_name	ein attribut verweist ||| move	count=1
namespace	in [namespace] angegebenen ||| [namespace]	count=1
arg_pair	section angebenen teil ||| string $section	count=1
function_name	aufs ||| move	count=1
function_name	schnittstellen ||| socket create listen	count=2
namespace	revolutionskalenders zu ||| function	count=1
arg_pair	auf beiden seiten auf ||| int $pad_type	count=1
arg_pair	und wartet ob ||| array $read array $write	count=1
function_name	repräsentation des ||| openssl pkey export to file	count=1
function_name	element ||| to next	count=1
function_name	abfrageergebnis gehört ||| num	count=1
function_name	ruft informationen oder nachrichten ||| multi info	count=1
function_name	aktuellen pdf-dokuments verweist ||| pdf	count=1
namespace	dazu benutzt werden ||| function	count=1
return	zugrunde liegende datenbank ||| bool	count=1
namespace	funktion konvertiert die ||| function	count=1
function_name	spalte feld ||| field	count=1
function_name	umgekehrter reihenfolge zurück ||| strrev	count=1
arg_pair	oder diese erzeugt ||| string $filename int $mode	count=1
arg_pair	und als ||| string $pathname	count=1
function_name	zuletzt aufgetretenen fehler ||| error	count=1
arg_pair	namens bestimmt wird ||| int $flags	count=1
namespace	von php auf ||| function	count=1
function_name	den ||| move to next	count=1
arg_pair	in offset ||| int $offset int $length	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] field [function_name_2]	count=4
function_name	postgresql abfrageergebnis gehört ||| pg field num	count=1
function_name	eine ||| copy from	count=1
namespace	die mit pg_send_query() ||| function	count=1
function_name	ende des vorherigen angehängt ||| merge	count=1
function_name	text-block mit ||| pdf fill textblock	count=2
function_name	zum [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ein ||| var	count=1
function_name	registriert ein ||| register shutdown	count=1
function_name	als sinh arg /cosh ||| tanh	count=1
function_name	abonnement des postfachs ||| unsubscribe	count=1
namespace	rückgabe der ergebnisse ||| function	count=1
function_name	erste attribut wenn er ||| to next attribute	count=1
namespace	liste von nachrichten wird ||| function	count=1
function_name	namen eines ||| name	count=1
arg_pair	unescaped_string ||| string $unescaped_string	count=1
namespace	der form mm/dd/yyyy enthält ||| function	count=2
arg_pair	die in [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	erstellt ein neues ||| construct	count=1
arg_pair	angegebene ||| resource $link string $query	count=2
function_name	gibt die letzte ||| last	count=1
arg_pair	einen gegebenen text ||| string $text	count=1
namespace	email inclusive der richtigen ||| function	count=1
function_name	gibt die unterversionsnummer ||| get minorversion	count=1
function_name	zeilen eines ||| pg fetch	count=1
arg_pair	mit dem [arg_pair] system ||| [arg_pair]	count=1
function_name	er ||| to	count=2
function_name	der angeforderten [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	get_defined_vars() aufgerufen wird ||| get defined vars	count=1
arg_pair	datenbank ||| resource $link_identifier	count=1
arg_pair	input ||| string $input int $pad_length	count=1
function_name	dass gzgetss() ||| gzgetss	count=1
function_name	den oracle-platzhalter ||| array by	count=1
function_name	attribut wenn ||| attribute	count=1
function_name	pdf ||| pdf	count=1
namespace	mit der ||| function	count=24
function_name	eines feldes in ||| field	count=1
function_name	das ||| next	count=1
function_name	auf ein ||| move to next	count=2
return	seines ||| bool	count=1
function_name	pcos-pfades ||| pdf pcos get	count=2
return	wenn sie sich ||| bool	count=1
function_name	ob diese ihren status ||| select	count=1
namespace	auf der linken ||| function	count=1
function_name	gelöscht ||| delete	count=1
function_name	er auf ein element ||| to next	count=1
arg_pair	eine ||| resource $pdfdoc float $lowerleftx	count=1
arg_pair	setzt den ||| resource $identifier int $errormode	count=1
function_name	benutzt um einen gemeinsamen ||| shmop close	count=1
namespace	textform zurück die ||| function	count=1
function_name	internen ||| mysql data seek	count=1
arg_pair	bestimmten abfrageergebnis zu erhalten ||| int $field_offset	count=1
namespace	die generierte pdf-datei und ||| function	count=1
function_name	vom format utf-32 ||| utf32	count=1
namespace	verwendung von rc4 ||| function	count=1
arg_pair	a bson ||| string $bson array $typemap	count=1
function_name	bezeichneten postgresql [function_name_2] ||| [function_name_1] field [function_name_2]	count=2
return	als array ||| array	count=1
function_name	als schlüssel ||| fill	count=1
function_name	groß- und kleinschreibung unterscheidet ||| eregi replace	count=1
arg_pair	und ||| array $except int $tv_sec	count=1
namespace	der von der ||| function	count=1
function_name	klasse existiert ||| exists	count=1
arg_pair	zwischen [arg_pair] zusätzlicher indexprüfung ||| [arg_pair]	count=1
function_name	pg_send_query() pg_send_query_params() [function_name] pg_send_execute() an ||| [function_name] cancel	count=1
namespace	kopie von ||| function	count=1
arg_pair	und konvertiert ||| resource $connection	count=1
arg_pair	[arg_pair] system ||| [arg_pair]	count=2
namespace	[namespace] script laufen ||| [namespace]	count=1
arg_pair	und die genauigkeit von ||| resource $link array $options	count=1
arg_pair	message übergebene string ||| string $message	count=1
arg_pair	unix-timestamp entsprechend ||| int $minute	count=1
arg_pair	aktuelle domain für eine ||| string $msgid1	count=1
arg_pair	mit flag ||| int $options	count=1
arg_pair	von assoc_array entsprechen und ||| array $assoc_array	count=1
function_name	exec-kommando ||| exec	count=1
arg_pair	aus table_name deren ||| string $table_name	count=1
return	erstellt ein ||| mixed	count=1
arg_pair	zu den ||| resource $imap_stream string $ref	count=1
function_name	kopiert ||| mail copy	count=2
function_name	session_unset() löscht alle session-variablen ||| session unset	count=1
function_name	versehene repräsentation ||| openssl pkey export to	count=1
arg_pair	[arg_pair] zusätzlicher indexprüfung ||| [arg_pair]	count=1
function_name	mime-codierte headerzeilen ||| mime header	count=1
function	die eigenschaft [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	konvertiert die in zeichensatz ||| function	count=1
function_name	für eine ||| imap	count=1
arg_pair	in ||| int $options	count=1
return	http-header des ||| array	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] status resource $result [arg_pair_2]	count=3
return	array() ||| array	count=1
arg_pair	dn angegeben werden ||| resource $privkey	count=1
function_name	[function_name_1] definierten ||| [function_name_2] [function_name_1]	count=4
return	zugrunde ||| bool	count=1
function_name	warten ||| pg send	count=1
function	eines dom [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	setzt das flag o_nonblock ||| set	count=1
namespace	werten der ||| function	count=1
function_name	sequenz ||| slice	count=1
function_name	nach ||| next	count=1
function_name	liefert ein array ||| fetch array	count=1
arg_pair	cc [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	spalte eines ||| result	count=1
arg_pair	setzt die mit flag ||| int $options	count=1
function_name	spalte [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] als gelöscht ||| [function_name_2] [function_name_1]	count=1
function_name	die zugehörigen ||| combine	count=1
function_name	archiveintrag ||| delete	count=1
arg_pair	mit size angegebene ||| int $size	count=1
arg_pair	parst key und bereitet ||| mixed $key string $passphrase	count=1
function_name	von mysql [function_name] ||| mysql [function_name]	count=1
namespace	änderungen die in der ||| function	count=1
namespace	der ausschließlich zeichen aus ||| function	count=1
function_name	attribut verweist oder aufs ||| move to next	count=1
function_name	zurück ||| socket get	count=1
arg_pair	http header-informationen zu übertragendes ||| int $expire string $path	count=1
function_name	fehlermeldung ||| curl error	count=1
arg_pair	key ||| resource $p string $key	count=1
function_name	internen ||| data seek	count=2
namespace	dezimale entsprechung der ||| function	count=1
function_name	prozesskennung des elternprozesses des ||| getppid	count=1
function_name	zur basis base ||| log	count=1
arg_pair	öffnet filename und ||| string $filename bool $use_include_path	count=1
namespace	oder aufs erste ||| xmlreader	count=1
function_name	er auf ||| to	count=2
arg_pair	und ||| resource $connection	count=2
arg_pair	[arg_pair_1] angegebenen ||| [arg_pair_2] string $sequence [arg_pair_1]	count=4
function_name	einen pdf-block ||| pdfblock	count=1
arg_pair	header-informationen zu übertragendes ||| string $path	count=1
function_name	werten ||| pg update	count=1
return	diese ihren ||| int	count=1
return	erste ||| bool	count=1
namespace	wird verwendet ||| function	count=1
function_name	unter ||| delete	count=1
function_name	auf [function_name] ||| [function_name]	count=2
namespace	bereited es für die ||| function	count=1
function_name	[function_name] letztdefinierten callbackhandler ||| readline callback [function_name]	count=1
function_name	das kind [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	[namespace] arrayelementen beibehalten ||| [namespace]	count=1
namespace	werden könnten um ||| function	count=1
function_name	internen ||| seek	count=2
function_name	verweist ||| move to next	count=2
function_name	zeile ||| oci fetch	count=1
function_name	ms sql server datenbank ||| mssql	count=1
function_name	mime-konforme nachricht aus den ||| imap mail compose	count=1
function_name	[function_name_1] [function_name_2] letztdefinierten callbackhandler und setzt ||| [function_name_2] [function_name_1]	count=1
function_name	eines pcos-pfades ||| pdf pcos get	count=2
function_name	vorhergehende ||| get previous	count=1
return	auf ||| float	count=1
arg_pair	dass file_get_contents() die datei ||| bool $use_include_path	count=1
namespace	aus der datenbank ||| function	count=2
return	wie array() ist auch ||| array	count=1
function_name	späteren [function_name] ||| pdf [function_name]	count=3
return	dieser methode ist ||| mixed	count=1
arg_pair	inhalt einer variable als ||| mixed $var bool $syntax_only	count=1
function_name	client für bestimmte zeichensätze ||| pg client	count=1
function_name	setzt den ||| to next	count=1
function_name	frei ||| openssl free key	count=1
return	liefert ||| array	count=1
return	ob ||| int	count=1
function_name	wartet ob diese ihren ||| socket select	count=1
function_name	erstellt ||| soap var	count=2
arg_pair	baut eine verbindung ||| string $servername string $username	count=1
namespace	aus der aktuellen ||| function	count=1
function_name	spezielle ||| posix mknod	count=2
namespace	oder ||| function	count=1
arg_pair	die übergebene zeichenkette ||| object $link_identifier	count=1
arg_pair	die datei in einem ||| string $filename	count=1
function_name	wörter ||| str word	count=1
namespace	die fehlernummer und die ||| function	count=1
arg_pair	an das postfach mailbox ||| string $mailbox	count=1
function_name	diese ihren status ändern ||| socket select	count=1
arg_pair	diese ihren status ||| array $read array $write	count=1
arg_pair	der übergebene hash den ||| string $hash string $algo	count=1
function_name	erzeugt eine spezielle oder ||| mknod	count=1
namespace	der übergebene ||| function	count=1
namespace	die gelesenen ||| function	count=1
namespace	schlüssel aus der ||| function	count=1
namespace	[namespace] fehlerliste ||| [namespace]	count=3
namespace	die beziehung der ||| function	count=1
namespace	auch ||| function	count=1
arg_pair	aus und führt darauf ||| string $database string $query	count=1
arg_pair	entweder mit [arg_pair] ||| [arg_pair]	count=3
arg_pair	gibt den ||| resource $result	count=4
arg_pair	zu den ||| resource $imap_stream	count=1
function_name	auf das nächste ||| next	count=1
function_name	zum ||| check	count=1
arg_pair	wartet ||| int $tv_sec	count=1
arg_pair	domain für eine einzelne ||| string $domain string $message	count=1
arg_pair	datum in calendar ||| int $calendar	count=1
return	funktion ||| void	count=1
arg_pair	dn angegeben ||| array $dn resource $privkey	count=1
function_name	dekodiert mime-codierte headerzeilen ||| imap mime header decode	count=1
arg_pair	variable als funktion ||| bool $syntax_only	count=1
namespace	der mit der verbindung ||| function	count=1
return	mittels ||| array	count=1
function_name	to a reconstructed image ||| image	count=1
arg_pair	werte von array1 enthält ||| array $array1	count=1
function_name	eine dbase-datenbank im ||| dbase open	count=1
namespace	verwendung ||| ziparchive	count=1
function_name	auf ein element verweist ||| to next	count=1
arg_pair	und alle zugehörenden datenstrukturen ||| int $table	count=1
arg_pair	verbindung zu einer sqlite3-datenbank ||| string $dateiname int $schalter	count=1
arg_pair	ihren status ändern ||| array $write	count=1
function_name	platziert ein [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	attribut wenn ||| move to next	count=1
function_name	in der liste der ||| function	count=1
arg_pair	funktion empfängt len bytes ||| int $len int $flags	count=1
function_name	auf das nächste attribut ||| next	count=1
function_name	feldes in einer ergebnismenge ||| ingres field	count=1
function_name	listet alle datenbanken des ||| msql list dbs	count=1
function_name	fehlernummer ||| errno	count=2
arg_pair	oder teilweise auf ||| float $urx float $ury	count=1
function_name	aktuellen tabelle ||| table	count=1
arg_pair	status ||| int $tv_sec	count=1
namespace	die elemente des ||| function	count=1
return	gibt true zurück wenn ||| bool	count=1
function_name	namen bestimmten eintrag um ||| name	count=1
namespace	ressource die ||| function	count=1
arg_pair	funktion empfängt len bytes ||| int $flags	count=1
function_name	platten-partition zurückgeben ||| disk free	count=1
function_name	erstellt ||| soap	count=1
function_name	einen knoten eines dom ||| simplexml import dom	count=1
function_name	entfernt leerraum ||| ltrim	count=1
function_name	message queue datenstruktur zu ||| msg set queue	count=1
function_name	ihre beendigung ||| prepare	count=1
function_name	oder aufs ||| to	count=1
function_name	installierten gd- bibliothek ||| gd info	count=1
function_name	liste der definierten funktionen ||| function	count=1
function	[function_name_1] tabelle ein ||| [function_name_1] resource $connection [arg_pair_2]	count=1
function_name	kind [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	oid des datentyps ||| type oid	count=1
function_name	basistyp des feldes mit ||| field type	count=1
arg_pair	[arg_pair_1] angegebenen ||| [arg_pair_2] [arg_pair_1]	count=8
arg_pair	dem parameter dn angegeben ||| array $dn resource $privkey	count=1
function_name	flags bei allen nachrichten ||| setflag full	count=1
arg_pair	arrays mit zusätzlicher indexprüfung ||| array $array1	count=1
arg_pair	zu übertragendes ||| int $expire string $path	count=1
function_name	pem-kodiert versehene repräsentation ||| export to file	count=1
function_name	für die ||| set	count=1
function_name	betroffenen zeilen zurück ||| affected rows	count=1
function_name	schlüssel des zufälligen ||| rand	count=1
function_name	des zufälligen ||| array rand	count=1
arg_pair	mittels glue zu einer ||| string $glue array $pieces	count=1
function_name	uuencode algorithmus unix-to-unix-verschlüsselung) ||| convert uuencode	count=1
function_name	spezielle oder ||| posix	count=1
function_name	element ||| move to	count=1
arg_pair	ermittelt den wert eines ||| resource $pdfdoc long $doc	count=1
function_name	[function_name_1] ein grafikzustandsobjekt ||| [function_name_1] [function_name_2]	count=1
namespace	eine ergebnis-kennung die ||| function	count=1
namespace	der angegebene ||| function	count=1
function_name	informationen oder nachrichten ||| curl multi info	count=1
arg_pair	ermittelt die schnittmenge ||| array $array2	count=1
arg_pair	verarbeitet bestimmte elemente eines ||| resource $pdfdoc int $doc	count=1
function_name	lokalisiert einen eintrag ||| locate name	count=1
function_name	[function_name_1] setzt ||| [function_name_2] [function_name_1]	count=2
return	in ein array ||| array	count=4
function_name	versehene repräsentation ||| to	count=1
arg_pair	inhalt einer variable ||| mixed $var	count=1
arg_pair	von cc [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	auf ein element verweist ||| move to next	count=1
arg_pair	angegebene ||| resource $link	count=2
arg_pair	ermittelt den wert eines ||| resource $pdfdoc	count=1
namespace	die nicht explizit die ||| function	count=1
namespace	zeichensatzes der verbindung so ||| function	count=1
arg_pair	skaliert ||| float $sx	count=2
arg_pair	zeichenkodierung hinzu ||| string $encoding	count=1
function_name	zuletzt aufgetretenen fehler des ||| error	count=1
function_name	gibt die unterversionsnummer ||| pdf get minorversion	count=1
function_name	interface [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	diese ||| socket	count=1
function_name	eine spezielle oder ||| mknod	count=1
namespace	ihren status ändern ||| function	count=1
rest	eine [function_2] ||| [function_2] [return_1]	count=5
function_name	aktuelle thread ||| thread	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] private [function_name_1]	count=2
function_name	öffnet eine dbase-datenbank ||| dbase open	count=1
function_name	einer mysql ||| mysql	count=1
return	wenn er ||| bool	count=1
arg_pair	eine ||| resource $pdfdoc	count=5
arg_pair	angegebenen ||| string $database	count=1
namespace	und die fehlermeldung eines ||| function	count=1
arg_pair	wird zum sortieren von ||| array $array1 mixed $array1_sort_order	count=1
function_name	das nächste attribut wenn ||| to next	count=1
function_name	ein ldap verzeichnis ||| ldap bind	count=1
arg_pair	eines ||| resource $pdfdoc	count=1
function_name	ein element ||| move	count=1
arg_pair	einen soap-aufruf durchzuführen ||| string $function_name	count=1
function_name	nur aus ziffern besteht ||| ctype digit	count=1
function_name	ergebnis verknüpfte ||| result	count=1
arg_pair	im parameter certs ||| array $certs	count=1
function_name	[function_name] callback welches ||| [function_name]	count=1
arg_pair	datenzeile ||| resource $result_identifier int $fetch_flag	count=1
arg_pair	übergebene zeichenkette so ||| object $link_identifier	count=1
function	liest [arg_pair_2] ||| [function_name_1] resource $zip_entry [arg_pair_2]	count=1
namespace	xx der ||| function	count=1
function_name	von dieser erweiterung unterstützt ||| dba handlers	count=1
arg_pair	bieten ||| bool $clear_realpath_cache	count=1
arg_pair	funktion ist das ||| string $string int $flags	count=1
function_name	als integer-wert ||| bccomp	count=1
arg_pair	performance zu bieten ||| string $filename	count=1
arg_pair	in zeichensatz in_charset kodierte ||| string $in_charset	count=1
namespace	array() ist auch dies ||| function	count=1
function_name	attributes mit ||| get attribute	count=1
arg_pair	zeichenkette haystack zurück ||| string $haystack	count=1
namespace	hash übergeben wird der ||| function	count=1
function_name	wenn er ||| move	count=1
arg_pair	openssl_seal() verschlüsselt data ||| string $data	count=1
function_name	füllt einen pdf-block mit ||| pdf fill pdfblock	count=1
namespace	und [namespace] einen dateizeiger ||| [namespace]	count=1
namespace	aus [namespace] datei browscap.ini ||| [namespace]	count=1
namespace	zurück in der allen ||| function	count=1
function_name	repräsentation des schlüssels ||| to	count=1
arg_pair	ein auf ||| resource $pdfdoc	count=1
return	in der ||| string	count=1
function_name	den speicher frei ||| free result	count=1
namespace	zurück dass der ||| function	count=1
function	eine [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=2
function_name	das feld ||| msql field	count=1
function_name	das übergebene interface ||| interface	count=1
namespace	der datei zuletzt ||| function	count=1
function_name	dem get_defined_vars() aufgerufen wird ||| vars	count=1
return	der aufruf ||| mixed	count=1
arg_pair	schreib-/leseposition für ||| int $offset	count=1
function	[function_name_1] mailbox ||| [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=2
namespace	erzeugt aus der aktuellen ||| function	count=1
function_name	more result ||| more results	count=1
arg_pair	schnittmenge von arrays ||| array $array1 array $array2	count=1
function_name	bezeichnete bzip2-datei ||| bzclose	count=1
function_name	zeiger ||| move to	count=1
arg_pair	zugriffsrechte ||| string $rights	count=1
function_name	auch ||| list	count=1
arg_pair	die funktion ändert [arg_pair_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [arg_pair_1] [arg_pair_2] string $new_mbox	count=3
namespace	archiv ||| ziparchive	count=3
namespace	setzt die schreib-/leseposition der ||| function	count=1
return	eines skripts beenden ||| int	count=1
arg_pair	ausnahme ||| int $minute	count=1
arg_pair	verbindung zu einer sqlite3-datenbank ||| int $schalter	count=1
namespace	der spalte ||| function	count=1
function_name	er auf ein element ||| move to	count=1
function_name	eigenschaft [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	der aufruf ||| string $function_name	count=1
return	gibt [return] informationen ||| [return]	count=1
function_name	auf ein element ||| to	count=1
function_name	übergebene interface definiert ||| interface exists	count=2
function_name	enthaltenen einstellungen ||| parse ini	count=1
arg_pair	einer variable als funktion ||| bool $syntax_only	count=1
function_name	php-variable variable an ||| bind	count=1
function_name	unter verwendung seines ||| delete index	count=1
function_name	und ||| socket select	count=2
function_name	elternelement des aktuellen ||| move to element	count=1
arg_pair	von assoc_array entsprechen ||| array $assoc_array	count=1
function_name	zeiger auf das ||| to next	count=1
function_name	das nächste attribut ||| next	count=1
arg_pair	dem [arg_pair] system v ||| [arg_pair]	count=1
function	[function_name_1] server ||| [arg_pair_2] [function_name_1]	count=2
function_name	msql ergebnismenge die ||| msql	count=1
namespace	gibt die id des ||| function	count=1
arg_pair	von domain von ||| string $domain	count=1
arg_pair	empfängt len bytes ||| int $len	count=1
function_name	eine fehlermeldung an ||| error log	count=1
function_name	queue datenstruktur zu ||| queue	count=1
function_name	physisches oder [function_name_2] ||| [function_name_2] open [function_name_1]	count=3
arg_pair	in ||| array $array	count=1
function_name	stelle des aktuellen pdf-dokuments ||| pdf	count=1
function	[function_name_1] eine ||| [arg_pair_2] [function_name_1]	count=2
function_name	persistente verbindung zu einer ||| ingres pconnect	count=1
namespace	wert auf der ||| function	count=1
function_name	wird die option die ||| set option	count=1
function_name	eines pcos-pfades ||| pdf pcos get number	count=1
namespace	löscht einen ||| ziparchive	count=1
function	[function_name_1] cert ist ||| [function_name_1] check private key [arg_pair_2]	count=1
arg_pair	die in [arg_pair_2] ||| [arg_pair_1] string $script [arg_pair_2]	count=2
function_name	aufrufenden funktion übergebenen ||| func get args	count=1
arg_pair	für uid ||| int $uid	count=1
arg_pair	geparst werden soll ||| string $source string $encoding	count=1
arg_pair	durch eine ||| resource $pdfdoc string $optlist	count=1
arg_pair	verbindung connection ||| resource $connection	count=1
function_name	internen datensatz-zeiger ||| mysql data seek	count=1
function_name	ruft informationen ||| info	count=1
function_name	die später ||| prepare	count=1
return	auf ein element verweist ||| bool	count=1
namespace	[namespace] angegebenen verbindung ||| [namespace]	count=2
arg_pair	socket len bytes von ||| int $len	count=1
function_name	lokalisiert einen eintrag unter ||| locate name	count=1
return	zuvor ||| resource	count=1
arg_pair	schnittmenge ||| array $array1 array $array2	count=1
namespace	die auf das ||| function	count=1
namespace	datensatzzeiger auf [namespace] ||| [namespace]	count=2
arg_pair	spezielle ||| int $mode	count=1
function_name	aktiviert ein grafikzustandsobjekt ||| set gstate	count=1
function_name	optimiert ||| dba optimize	count=2
function_name	verweist oder aufs ||| to next	count=1
namespace	holt die ||| function	count=1
function_name	imap oder ||| imap	count=1
return	löscht einen ||| bool	count=1
function_name	client ||| client encoding	count=2
function_name	den ||| ftp alloc	count=1
arg_pair	parameter dn angegeben ||| resource $privkey	count=1
arg_pair	den ||| resource $result int $index	count=1
function_name	und separate parameter zum ||| query params	count=1
namespace	diese durch die ||| function	count=1
function_name	abonnement des ||| unsubscribe	count=1
function_name	nächste attribut ||| next	count=1
namespace	zu einer ||| function	count=1
function	[function_name_1] virtuelle datei ||| [function_name_1] pvf resource $pdfdoc [arg_pair_2]	count=1
arg_pair	ein ||| mixed $data	count=1
arg_pair	imagick ||| int $metric	count=1
namespace	die mit ||| function	count=8
function_name	gid ||| posix setgid	count=2
function_name	aufs erste attribut wenn ||| next attribute	count=1
arg_pair	übergebenen parametern [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	momentanen ||| fbsql db	count=1
function_name	internen datensatz-zeiger eines frontbase-abfrageergebnisses ||| fbsql data seek	count=1
function_name	kopiert ||| copy	count=2
function_name	wert eines pcos-pfades ||| pdf pcos get	count=1
arg_pair	aus und führt darauf ||| string $database	count=1
function_name	attribut wenn ||| next	count=1
function_name	modifikationszeit ||| touch	count=1
return	methode ||| mixed	count=1
function_name	eine ||| resource	count=1
function_name	füllt einen text-block ||| textblock	count=1
namespace	[namespace] setzt ||| [namespace]	count=1
namespace	namen [namespace] tabelle ||| [namespace]	count=2
namespace	der aktuellen position der ||| function	count=1
function_name	mysql ||| mysql	count=6
return	ermittelt ob ||| bool	count=2
function_name	auf ein ||| next	count=2
return	und ||| string	count=1
function_name	attributes ||| attribute ns	count=2
function_name	selbst geschriebenen funktionen), ob ||| exists	count=1
function_name	texte ||| bind textdomain codeset	count=2
arg_pair	und gibt bei ||| resource $connection	count=1
namespace	die auf das angegebene ||| function	count=1
arg_pair	nimmt als ||| array $write	count=1
function_name	dem öffentlichen ||| public	count=1
function_name	attribut wenn er ||| move to next	count=1
function_name	position auf [function_name] ||| [function_name]	count=2
namespace	kann benutzt werden ||| function	count=1
namespace	der im parameter ||| function	count=1
namespace	der richtigen ||| function	count=1
function_name	verbindung gerade benutzt wird ||| pg connection busy	count=1
function_name	feldtyp stattdessen ||| field type	count=1
return	ob diese ||| int	count=1
arg_pair	verschlüsselt data unter verwendung ||| string $data	count=1
arg_pair	und wartet ob diese ||| array $except int $tv_sec	count=1
arg_pair	per x509cert ||| mixed $x509cert	count=1
arg_pair	abschnitt eines textflusses in ||| int $textflow	count=1
arg_pair	bereitet den text zur ||| resource $pdfdoc string $text	count=1
namespace	sendet die ||| function	count=2
arg_pair	port port falls ||| int $port	count=1
arg_pair	fragt ||| string $keyword	count=1
return	unter ||| bool	count=1
function_name	internen datensatz-zeiger eines anfrageergebnisses ||| data seek	count=1
namespace	der engine als ||| function	count=1
return	[return] sollte die ||| [return]	count=1
arg_pair	öffnet ein ||| string $filename	count=1
arg_pair	baut ||| string $servername string $username	count=1
function_name	ein ||| next	count=2
namespace	zeichen in der ||| function	count=1
namespace	die angegebene verbindungskennung ||| function	count=1
function_name	verbindung [function_name] ||| [function_name]	count=1
namespace	spalte durch die ||| function	count=1
namespace	auf [namespace] in einem ||| [namespace]	count=1
arg_pair	zugriffsrechte ||| string $id string $rights	count=1
function_name	verwendung ||| delete	count=1
namespace	aus [namespace] datei ||| [namespace]	count=1
function_name	ein ||| create from date	count=1
function_name	stattdessen zurückgeliefert ||| fbsql	count=1
function_name	wenn er auf ein ||| to next	count=1
function_name	erzeugt ein textflussobjekt ||| textflow	count=1
function_name	substr_count() ermittelt wie oft ||| substr count	count=1
function_name	attribut wenn er ||| to next	count=1
arg_pair	zeichenkette subject nach ||| int $limit	count=1
namespace	von string zurück ||| function	count=1
arg_pair	verschlüsselt data unter verwendung ||| string $data string $sealed_data	count=1
namespace	der standardmässigen ||| function	count=1
arg_pair	in eine ||| int $options	count=1
function_name	schriftart aus ||| show xy	count=1
namespace	die header bereits ||| function	count=1
namespace	typ der ||| function	count=1
function_name	gehört ||| fetch row	count=1
function_name	in klein- oder großbuchstaben ||| array change key case	count=1
function_name	als indiziertes ||| dbase get record	count=1
function_name	message queue ||| msg set queue	count=1
arg_pair	ob diese ihren status ||| array $write	count=1
function_name	interface [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	ein ||| create	count=1
return	zeiger auf das nächste ||| bool	count=1
function_name	gibt das produkt ||| array product	count=1
namespace	ist auch dies ||| function	count=1
function_name	kodierung des clients ||| client encoding	count=1
function_name	repräsentation des ||| export to	count=1
arg_pair	übergebene hash den gleichen ||| string $hash string $algo	count=1
function_name	klein- oder ||| array change key case	count=1
arg_pair	wartet ob ||| int $tv_sec	count=1
arg_pair	table_name deren feldnamen den ||| string $table_name	count=1
function_name	übergebene zertifikat und ||| openssl x509	count=1
arg_pair	zeichenkette subject ||| mixed $subject int $limit	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=382
return	aufrufen wenn sie sich ||| bool	count=1
function_name	image ||| image	count=1
namespace	die generierte ||| function	count=1
arg_pair	gmt-datum repräsentieren ||| int $is_dst	count=1
function_name	setzt ||| move to next	count=1
function_name	nachricht ||| imap	count=2
function_name	bindet die php-variable ||| bind	count=1
function	large object [arg_pair_2] ||| [function_name_1] create resource $connection [arg_pair_2]	count=1
function	[function_name_1] ph_name ||| [function_name_1] resource $statement [arg_pair_2]	count=1
return	wenn ||| bool	count=2
arg_pair	die in ||| string $str	count=1
function_name	schließt ||| pdf close	count=1
namespace	http-header des ||| function	count=1
function_name	attribut verweist oder ||| next	count=1
function_name	option die ||| option	count=1
function_name	unterschiede zurück ||| array diff	count=2
function_name	eine abfrage ||| db query	count=1
namespace	die von ||| function	count=2
function_name	wird die option ||| option	count=1
function_name	ruft informationen ||| curl multi info	count=1
function_name	verweist ||| move to	count=2
function_name	auf das elternelement des ||| move to element	count=1
arg_pair	in month day und ||| int $day	count=1
namespace	höhe zurück der ||| function	count=1
namespace	v8js::registerextension() ||| v8js	count=1
namespace	der datei zuletzt geändert ||| function	count=1
namespace	den gesamten body der ||| function	count=1
function_name	repräsentation ||| export to	count=1
arg_pair	len bytes daten ||| int $len	count=1
function_name	knoten eines dom ||| simplexml import dom	count=1
return	ihren status ||| int	count=1
function_name	das gegenstück zu htmlspecialchars() ||| htmlspecialchars decode	count=1
function_name	ob diese ihren ||| select	count=1
namespace	von array verschiebt die ||| function	count=1
function_name	text-block ||| textblock	count=1
arg_pair	[arg_pair] großbuchstaben ||| [arg_pair]	count=1
arg_pair	gibt den input ||| int $pad_length	count=1
function	eigenschaft [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	oder wo ||| int $line	count=1
function_name	diese funktion [function_name_1] [function_name_2] mit den gleichen voreinstellungen ||| [function_name_1] [function_name_2]	count=4
namespace	den zeiger auf ||| xmlreader	count=1
function_name	dio_stat() ||| stat	count=1
arg_pair	deren spaltenwerte mit den ||| resource $connection	count=1
namespace	das nächste attribut wenn ||| xmlreader	count=1
function_name	kind [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	für die ausgaben ||| set	count=1
return	letzten ||| string	count=1
arg_pair	bestimmten abfrageergebnis ||| resource $result	count=1
function_name	zeiger auf das nächste ||| move	count=1
function_name	verweist oder ||| move	count=1
namespace	[namespace] vorher ||| [namespace]	count=3
function_name	versehene repräsentation des schlüssels ||| to	count=1
function_name	den ||| imap renamemailbox	count=1
arg_pair	zeichen die in charlist ||| string $str string $charlist	count=1
function_name	die angegebene eigenschaft ||| property	count=1
arg_pair	-aufrufs mit einer ||| object $result string $user_compare_function	count=1
arg_pair	ein neues soapvar -objekt ||| string $node_name string $node_namespace	count=1
arg_pair	buf von socket ||| string $buf	count=1
function_name	array ||| array splice	count=1
arg_pair	nach [arg_pair] ||| [arg_pair]	count=2
namespace	von zeichen die von ||| function	count=1
namespace	[namespace] offset ||| [namespace]	count=1
function_name	identifier oid [function_name] eingefügten ||| pg [function_name]	count=1
function_name	attribut wenn er ||| next	count=1
arg_pair	und die genauigkeit ||| resource $link array $options	count=1
function_name	aktuellen session-moduls ||| session module	count=1
arg_pair	den entfernten ftp-server ||| resource $ftp_stream	count=1
arg_pair	server ||| resource $connection	count=1
function_name	verbindungsoptionen ||| pg options	count=1
function_name	message [function_name_2] ||| [function_name_1] remove [function_name_2]	count=1
namespace	schlüssel aus der datenbank ||| function	count=1
function_name	hinzu ||| add	count=2
function_name	zurück ||| curl	count=1
function_name	verweist oder aufs erste ||| next	count=1
namespace	automatische konversion von zeichensätzen ||| function	count=1
function_name	so dass das ergebnis ||| mysql	count=1
function_name	das produkt ||| product	count=1
return	aufrufen wenn ||| bool	count=1
return	datei auf ||| bool	count=1
function_name	schreibt aus dem ||| socket write	count=1
function_name	dekodiert mime-codierte headerzeilen ||| mime header decode	count=1
function_name	körper ||| body	count=1
arg_pair	richtigen behandlung von cc ||| string $cc	count=1
return	zwischen server und ||| string	count=1
function_name	auf das ||| move to next	count=1
namespace	diese funktion gibt die ||| function	count=3
arg_pair	die funktion [arg_pair_1] [arg_pair_2] in new_mbox siehe imap_open() ||| [arg_pair_1] [arg_pair_2]	count=3
namespace	übernimmt die ||| function	count=1
function_name	ein array welches mit ||| array	count=1
namespace	die namen der ||| function	count=1
namespace	die von der ||| function	count=2
arg_pair	in ||| int $depth	count=1
function_name	benutzten verbindung für ||| mysql get host info	count=1
arg_pair	den entfernten ftp-server um ||| resource $ftp_stream	count=1
namespace	der cursor in ||| function	count=1
return	auf das nächste attribut ||| bool	count=1
function_name	die datensatz-id ||| row id	count=1
namespace	der indexe zu ||| function	count=1
return	den zeiger ||| bool	count=1
function_name	leerraum oder andere zeichen ||| ltrim	count=1
function_name	bestimmten zeile [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	element ||| bool	count=1
arg_pair	von domain ||| string $domain	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $name [arg_pair_2]	count=1
namespace	so dass der ||| function	count=2
function_name	in einen 8 bit ||| qprint	count=1
arg_pair	input -string erweitert auf ||| string $input int $pad_length	count=1
function_name	tabellennamen von [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	abonnement [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	aktualisiert die ||| function	count=1
arg_pair	key und value ||| string $key string $value	count=2
function_name	setzt den ||| move to next	count=1
function_name	msql ergebnismenge ||| msql data	count=1
arg_pair	oder eine gewöhnliche ||| int $minor	count=1
namespace	der server mehrere ||| function	count=1
function_name	diese ||| socket select	count=2
function_name	liest [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	array mit dem ||| array	count=1
function_name	option option ||| option	count=1
function_name	die verbindungsoptionen ||| pg options	count=1
arg_pair	um alpha ||| float $alpha	count=1
function_name	feld ||| field	count=1
arg_pair	diese ihren status ||| array $except	count=1
namespace	der der aktuelle ||| function	count=1
namespace	mit der übergebenen nummer ||| function	count=1
function	[function_name_1] server ohne ||| [arg_pair_2] [function_name_1]	count=2
namespace	wird zum senden ||| function	count=1
namespace	endlicher wert auf der ||| function	count=1
function_name	gettimeofday 2 ||| gettimeofday	count=1
function_name	[function_name] angegebenem rdn ||| [function_name]	count=2
function	[function_name_1] den ||| [function_name_1] by name [arg_pair_2]	count=1
function_name	ein physisches [function_name_2] ||| [function_name_2] open [function_name_1]	count=2
namespace	aller dateien zurück die ||| function	count=1
return	eine ||| resource	count=7
function_name	client für ||| pg client	count=1
arg_pair	des postfachs mailbox beenden ||| string $mailbox	count=1
arg_pair	legt den ||| resource $p	count=2
arg_pair	key bezeichnete ||| int $key	count=1
function_name	ist ||| list	count=1
arg_pair	filename und untersucht die ||| string $filename bool $use_include_path	count=1
namespace	in textform zurück die ||| function	count=1
function_name	führt eine soap-anfrage ||| do request	count=1
function_name	zurück das die entsprechende ||| row	count=1
function_name	des attributes mit ||| get attribute ns	count=2
function_name	zum zertifikat ||| openssl x509 check	count=2
function_name	den momentanen ||| fbsql db	count=1
function_name	soap-anfrage über ||| do request	count=1
arg_pair	str ||| string $delimiter	count=1
namespace	zurück der innerhalb eines ||| function	count=1
arg_pair	wartet ob diese ||| array $read array $write	count=1
function_name	spalte feld aus die ||| field	count=1
arg_pair	die funktion ||| int $flags	count=1
arg_pair	angegebenen namen zu erstellen ||| resource $context	count=1
function_name	gibt den kommentar ||| get comment name	count=1
function_name	[function_name_1] [function_name_2] vollständig und übergibt es ||| [function_name_2] [function_name_1] all resource $large_object	count=1
arg_pair	property in ||| mixed $class	count=1
arg_pair	ftp-server ||| resource $ftp_stream	count=1
function_name	setzt den ||| to	count=1
arg_pair	übertragendes ||| int $expire string $path	count=1
arg_pair	parameter dn angegeben werden ||| array $dn	count=1
arg_pair	aus table_name deren feldnamen ||| string $table_name	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=47
arg_pair	und ||| resource $link array $options	count=1
arg_pair	zu erstellen ||| bool $recursive	count=1
arg_pair	flag ||| string $flag int $options	count=1
function_name	sql-kommando ||| convert	count=1
namespace	gibt die gelesenen ||| function	count=1
arg_pair	file_get_contents() die datei in ||| bool $use_include_path	count=1
namespace	die nicht-ascii ||| function	count=1
return	gibt den wert ||| mixed	count=2
arg_pair	die daten mit ||| string $data	count=1
function_name	gesendeten header enthält ||| headers	count=1
function_name	vom typ af_unix ist) ||| socket recvfrom	count=1
return	auch ||| array	count=1
function_name	maskiert die ||| dbx escape string	count=1
arg_pair	zeichenkette subject ||| int $limit	count=1
namespace	die vom übergebenen ||| function	count=1
namespace	fehlercode der vom ||| function	count=1
function	[function_name_1] datenbank ||| [function_name_1] list tables [arg_pair_2]	count=3
arg_pair	sortierte liste ||| string $search_criteria	count=1
return	den ||| bool	count=1
arg_pair	zu bieten ||| bool $clear_realpath_cache	count=1
function_name	übergebene zip-archiv ||| zip	count=1
arg_pair	mit dem parameter dn ||| array $dn	count=1
function_name	der angeforderten ||| ftp get	count=2
function_name	sendet eine fehlermeldung an ||| error log	count=1
arg_pair	sendet ||| string $query	count=1
arg_pair	den port port falls ||| int $port	count=1
namespace	dies keine wirkliche funktion ||| function	count=1
function_name	liest zeilen ||| fetch	count=1
arg_pair	die datei ||| bool $use_include_path	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] int $length [arg_pair_2]	count=6
function	[function_name_1] datenbank ||| [arg_pair_2] [function_name_1]	count=7
namespace	den letzten query der ||| function	count=1
arg_pair	das letzte vorkommen ||| string $needle	count=1
function_name	des zufälligen eintrags ||| rand	count=1
function_name	liest [function_name_2] ||| [function_name_2] [function_name_1] all resource $large_object	count=1
function_name	dem parameter csr ||| openssl csr	count=2
return	ist auch dies ||| array	count=1
function_name	datenbank als [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	des vorkommens ||| mixed	count=1
function_name	das ergebnis eines dbx_query() ||| dbx sort	count=1
function_name	ausführliche informationen zur letzten ||| mysql info	count=1
arg_pair	und gibt dessen dessen ||| mixed $object_id	count=1
function_name	[function_name_1] namen ||| [function_name_2] [function_name_1]	count=1
function_name	ist ähnlich strcmp() mit ||| strncmp	count=1
function_name	er auf ein ||| move to next	count=2
rest	ein [function_2] ||| [function_2] [return_1]	count=1
function_name	binäre guid ||| guid	count=1
namespace	ausgabepuffers und ||| function	count=1
namespace	auf ||| xmlreader	count=3
function_name	[function_name_1] gelöscht ||| [function_name_1] [function_name_2]	count=1
function_name	trägt ||| pdf set info	count=2
function	[function_name_1] datei ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	wartet ||| array $write	count=1
arg_pair	den input -string ||| string $input	count=1
namespace	verwendung seines ||| ziparchive	count=1
return	bestimmt ob ||| bool	count=1
namespace	aufruf dieser methode ist ||| soapclient	count=1
arg_pair	in_charset ||| string $in_charset	count=1
namespace	uhrzeit der ||| function	count=1
function	[function_name_1] von subject ||| [function_name_1] [arg_pair_2]	count=1
function_name	der liste der ||| function	count=1
return	da ||| string	count=1
namespace	die anbindung ||| function	count=1
arg_pair	die zu hostname passen ||| array $mxhosts	count=1
arg_pair	nachrichtennummer für uid ||| resource $imap_stream int $uid	count=1
function_name	die größe ||| size	count=1
arg_pair	oder fügt text und ||| string $text	count=1
function_name	gibt eine [function_name] ||| [function_name]	count=1
arg_pair	angebenen offset über ||| resource $context int $offset	count=1
namespace	zu dem mit der ||| function	count=1
function_name	schlüssel ||| key	count=1
function_name	einen archiveintrag ||| delete index	count=1
namespace	wartet ob diese ||| function	count=1
function_name	fehler gab ||| error	count=1
function_name	zu warten ||| pg send	count=2
arg_pair	angebenen offset über bis ||| resource $context int $offset	count=1
function_name	letzte insert update ||| affected rows	count=1
function_name	benutzten ||| host info	count=2
function_name	spalte feld aus ||| field	count=1
arg_pair	key und value beschrieben ||| string $key string $value	count=2
namespace	status ||| function	count=1
function_name	wandelt eine binäre guid ||| guid string	count=1
function_name	angegebenen [function_name] frei wenn ||| [function_name]	count=1
namespace	beschreibt den typ der ||| function	count=1
function_name	large object ||| pg lo import	count=1
namespace	das ergebnis ||| function	count=2
function_name	liefert schema [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	definierten ||| get	count=1
arg_pair	übergebene zeichenkette so dass ||| string $text	count=1
arg_pair	connection_string bezeichnet wird ||| int $connect_type	count=1
namespace	von einem ||| function	count=1
function_name	die unterschiede zurück ||| diff	count=2
function_name	utf-8 zu sein scheinen ||| utf8	count=1
function_name	benutzten verbindung für die ||| get host info	count=1
namespace	die reihenfolge der ||| function	count=1
function_name	in einen 8 bit ||| imap qprint	count=1
function_name	für das feld ||| field	count=1
arg_pair	prüft und konvertiert ||| resource $connection	count=1
arg_pair	erzeugt eine ||| string $pathname int $mode	count=1
function_name	pcos-pfades ||| pdf pcos get number	count=1
function	beendet [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	überträgt die ||| function	count=1
namespace	der arrayelemente identisch sind ||| function	count=1
function_name	diese ihren ||| select	count=1
arg_pair	virtuelle datei ||| string $filename	count=1
function_name	verweist ||| to next	count=2
function_name	sendet eine fehlermeldung ||| error log	count=1
arg_pair	baut eine ||| string $servername string $username	count=1
arg_pair	index ||| int $length	count=1
arg_pair	y richtung um alpha ||| resource $p float $alpha	count=1
namespace	der unter verwendung von ||| function	count=1
function_name	produkt ||| array product	count=2
return	einer ||| int	count=5
arg_pair	in message übergebene string ||| string $message string $options	count=1
function_name	dio_stat() gibt informationen zum ||| dio stat	count=1
function_name	ein array ||| fetch array	count=1
function_name	gid des ||| posix setgid	count=1
namespace	die länge ||| function	count=1
function_name	eine binäre guid ||| guid	count=1
function_name	berechnet die potenz ||| pow	count=1
function_name	gibt einen datensatz ||| dbase get record	count=1
function_name	oder ||| pg	count=1
arg_pair	die parameter start und ||| mixed $start	count=1
function	grafikzustandsobjekt unter [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	zeiger ||| move	count=1
function_name	verweist oder aufs ||| move to next	count=1
arg_pair	unescaped_string unter berücksichtigung des ||| string $unescaped_string	count=1
namespace	der aktuellen ||| function	count=9
function_name	queue datenstruktur zu ändern ||| queue	count=1
function_name	auf das ||| next	count=1
namespace	inhalt der datei namens ||| function	count=1
function_name	dass das kind ||| pcntl wtermsig	count=1
arg_pair	bestimmten abfrageergebnis zu erhalten ||| resource $result int $field_offset	count=1
function_name	format utf-32 nach utf-16 ||| utf32 to utf16	count=1
function_name	gibt ausführliche informationen ||| mysql info	count=1
namespace	attribut wenn ||| xmlreader	count=1
arg_pair	suchtext ||| string $ref	count=1
arg_pair	einem dateizeiger in eine ||| resource $handle int $mode	count=1
function_name	inhalt ||| get pdi parameter	count=1
function_name	den zeiger ||| move to next	count=1
function_name	[function_name_1] anhielt ||| [function_name_1] [function_name_2]	count=4
arg_pair	funktion openssl_pkcs7_sign() signiert die ||| string $extracerts	count=1
arg_pair	in eine ||| int $flags	count=1
function_name	aufrufenden funktion ||| func get args	count=1
function_name	das nächste attribut wenn ||| move to	count=1
arg_pair	schnittmenge von arrays mit ||| array $array2	count=1
