<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(asanyarray)</tt>	 convert the input to an ndarray but pass ndarray subclasses through
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(fabs)</tt>	 return the absolute value of the float x
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(resolve)</tt>	 given an object or a path to an object get the object and its name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tensordot)</tt>	 compute tensor dot product along specified axes for arrays >= 1-d
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(cast)</tt>	 convert series to series of this class
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(warning)</tt>	 log a message with severity warning on the root logger
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(next_minus)</tt>	 returns the largest representable number smaller than a
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(irepeat)</tt>	 same as a *= b where a is a sequence and b is an integer
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(getsignal)</tt>	 return the current action for the given signal
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(extend)</tt>	 append items to the end of the array
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(zfill)</tt>	 pad a numeric string s with zeros on the left to fill a field of the specified width
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(tostring)</tt>	 construct python bytes containing the raw data bytes in the array
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g...T.h.r.e.a.d</a>(isAlive)</tt>	 return whether the thread is alive
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isscalar)</tt>	 returns true if the type of num is a scalar type
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e</a>(find_lines)</tt>	 return lineno dict for all code objects reachable from code
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(norm)</tt>	 matrix or vector norm
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s</a>(list2cmdline)</tt>	 translate a sequence of arguments into a command line string
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(release)</tt>	 returns the system 's release
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p.o.r.t.l.i.b</a>(import_module)</tt>	 import a module
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ravel)</tt>	 return a contiguous flattened array
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(debug)</tt>	 debug a single doctest docstring
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e</a>(find_strings)</tt>	 return a dict of possible docstring positions
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WIFEXITED)</tt>	 return true if the process returning status exited using the exit system call
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(safeimport)</tt>	 import a module
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(pd)</tt>	 pull the pen down -- drawing when moving
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(require)</tt>	 return an ndarray of the provided type that satisfies requirements
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.p.y</a>(copy)</tt>	 shallow copy operation on arbitrary python objects
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(Timer)</tt>	 factory function to create a timer object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(cross)</tt>	 return the cross product of two arrays of vectors
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebcompanion)</tt>	 return the scaled companion matrix of c
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(run_docstring_examples)</tt>	 test examples in the given object 's docstring f, using globs as globals
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(asinh)</tt>	 return the hyperbolic arc sine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(extractfile)</tt>	 extract a member from the archive as a file object
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(getChild)</tt>	 get a logger which is a descendant to this one
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_infinite)</tt>	 return true if self is infinite
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(heading)</tt>	 return the turtle 's current heading
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(writelines)</tt>	 write the sequence of strings to the file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(interp)</tt>	 one-dimensional linear interpolation
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(rand)</tt>	 random values in a given shape
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(a2b_base64)</tt>	 decode a line of base64 data
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(gethostbyname_ex)</tt>	 return the true host name a list of aliases and a list of ip addresses for a host
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(geometric)</tt>	 draw samples from the geometric distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebvander2d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setreuid)</tt>	 set the current process 's real and effective user ids
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(removeHandler)</tt>	 remove the specified handler from this logger
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(getencoder)</tt>	 lookup up the codec for the given encoding and return its encoder function
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(rsplit)</tt>	 return a list of the words in the string s using sep as the delimiter string starting at the end of the string and working to the front
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.n.g</a>(conjugate)</tt>	 returns self the complex conjugate of any long
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(access)</tt>	 true if granted false otherwise use the real uid/gid to test for access to a path
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(isfile)</tt>	 test whether a path is a regular file
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(asin)</tt>	 return the arc sine of x
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(isexpr)</tt>	 determines if an st object was created from an expression
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(mapparms)</tt>	 return the mapping parameters
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(hamming)</tt>	 return the hamming window
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(findall)</tt>	 return a list of all non-overlapping matches in the string
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.p.i.l.e.r</a>(compile)</tt>	 replacement for builtin compile function
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WIFSIGNALED)</tt>	 return true if the process returning status was terminated by a signal
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(abspath)</tt>	 return an absolute path
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r...s.t</a>(compile)</tt>	 compile this st object into a code object
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...B.a.s.e.S.e.t</a>(union)</tt>	 return the union of two sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t</a>(inet_pton)</tt>	 ip address string convert an ip address from string format to a packed string suitable for use with low-level network functions
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatyearpage)</tt>	 return a formatted year as a complete html page
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fchown)</tt>	 change the owner and group id of the file given by file descriptor fd to the numeric uid and gid
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(seed)</tt>	 seed the generator
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermder)</tt>	 differentiate a hermite series
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(pos)</tt>	 return the turtle 's current location xy, as a vec2d-vector
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(element_create)</tt>	 create a new element in the current theme of given etype
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(random_sample)</tt>	 return random floats in the half-open interval [0
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(encode)</tt>	 encode a file
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(popleft)</tt>	 remove and return the leftmost element
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_finite)</tt>	 return true if self is finite
<tt style='background-color:#E8E8E8;'> <a href=''>f.n.m.a.t.c.h</a>(fnmatch)</tt>	 test whether filename matches pattern
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.s.k.e.d.A.r.r.a.y</a>(unshare_mask)</tt>	 copy the mask and set the sharedmask flag to false
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(copy)</tt>	 a shallow copy of od
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(copy_decimal)</tt>	 returns a copy of the decimal object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g...d.e.c.o.r.a.t.o.r.s</a>(setastest)</tt>	 signals to nose that this function is or is not a test
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(digitize)</tt>	 return the indices of the bins to which each value in input array belongs
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nancumprod)</tt>	 return the cumulative product of array elements over a given axis treating not a numbers nans as one
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(cosh)</tt>	 return the hyperbolic cosine of x
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t...s.o.c.k.e.t</a>(recv_into)</tt>	 a version of recv that stores its data into a buffer rather than creating a new string
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(signal)</tt>	 set the action for the given signal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(isdecimal)</tt>	 for each element return true if there are only decimal characters in the element
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(addressof)</tt>	 return the address of the c instance internal buffer
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(normalvariate)</tt>	 normal distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(floor)</tt>	 return the floor of the input element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(script_from_examples)</tt>	 extract script from text with examples
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(repeat)</tt>	 return a * b where a is a sequence and b is an integer
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(formatday)</tt>	 returns a formatted day
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(count_nonzero)</tt>	 counts the number of non-zero values in the array a
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(sin)</tt>	 return the sine of x
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(configure)</tt>	 query or sets the default value of the specified option s in style
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(isfile)</tt>	 test whether a path is a regular file
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.p.a.c.k</a>(pack)</tt>	 pack a python object into an ae descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>h.a.s.h.l.i.b</a>(sha384)</tt>	 returns a sha384 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(cbrt)</tt>	 return the cube-root of an array element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(unhex)</tt>	 get the integer value of a hexadecimal number
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(rand)</tt>	 random values in a given shape
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(removeduppaths)</tt>	 remove duplicate entries from sys
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.n.e.r.i.c.p.a.t.h</a>(isdir)</tt>	 return true if the pathname refers to an existing directory
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(rjust)</tt>	 return b right justified in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(irshift)</tt>	 same as a >>= b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(size)</tt>	 return the number of elements along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(tounicode)</tt>	 convert the array to a unicode string
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(emit)</tt>	 do whatever it takes to actually log the specified logging record
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(test)</tt>	 small test program
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(herm2poly)</tt>	 convert a hermite series to a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(isnumeric)</tt>	 return true if there are only numeric characters in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(iscomplexobj)</tt>	 check for a complex type or an array of complex numbers
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(unhexlify)</tt>	 binary data of hexadecimal representation
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(erf)</tt>	 error function at x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(logistic)</tt>	 draw samples from a logistic distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(toflex)</tt>	 transforms a masked array into a flexible-type array
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(extract_stack)</tt>	 extract the raw traceback from the current stack frame
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(shapesize)</tt>	 set/return turtle 's stretchfactors/outline
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(gamma)</tt>	 draw samples from a gamma distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_array_almost_equal)</tt>	 raises an assertionerror if two objects are not equal up to desired precision
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(copystat)</tt>	 copy all stat info mode bits atime mtime flags from src to dst
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(setdefault)</tt>	 d.get kd, also set d[k]=d if k not in d
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.m.p.f.i.l.e</a>(mktemp)</tt>	 user-callable function to return a unique temporary file name
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(clear_flags)</tt>	 reset all flags to zero
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(min)</tt>	 returns the smaller value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(svd)</tt>	 singular value decomposition
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(get_magic)</tt>	 return the magic number for
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s...I.n.c.r.e.m.e.n.t.a.l.E.n.c.o.d.e.r</a>(reset)</tt>	 resets the encoder to the initial state
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(values)</tt>	 list of values in od
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.z.i.n.f.o</a>(tzname)</tt>	 string name of time zone
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.m.p.f.i.l.e</a>(mkdtemp)</tt>	 user-callable function to create and return a unique temporary directory
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(gethostname)</tt>	 return the current host name
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WTERMSIG)</tt>	 return the signal that terminated the process that provided the status value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(fill)</tt>	 fill the array with a scalar value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(setbufsize)</tt>	 set the size of the buffer used in ufuncs
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(items)</tt>	 d 's key value pairs as 2-tuples
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(insert)</tt>	 insert values along the given axis before the given indices
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(write)</tt>	 put the bytes from filename into the archive under the name arcname
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.n.e.c.a.c.h.e</a>(getlines)</tt>	 get the lines for a file from the cache
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(rjust)</tt>	 return s right-justified in a unicode string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(matrix_rank)</tt>	 return matrix rank of array using svd method
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(chown)</tt>	 change the owner and group id of path to the numeric uid and gid
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(unique)</tt>	 find the unique elements of an array
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(readinto)</tt>	 don't use this
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(major)</tt>	 extracts a device major number from a raw device number
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(compare_total_mag)</tt>	 compares self to other using abstract repr
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fromregex)</tt>	 construct an array from a text file using regular expression parsing
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(screensize)</tt>	 resize the canvas the turtles are drawing on
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(cram)</tt>	 omit part of a string if needed to make it fit in a maximum length
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(htons)</tt>	 convert a 16-bit integer from host to network byte order
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e...S.h.a.p.e</a>(addcomponent)</tt>	 add component to a shape of type compound
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(has_sametype)</tt>	 check if types match
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(setslice)</tt>	 same as a[b:c] = d
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(read)</tt>	 if the size argument is negative or omitted read until eof is reached
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.i.l.c.a.p</a>(parseline)</tt>	 parse one entry in a mailcap file and return a dictionary
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.b.e.r.s...C.o.m.p.l.e.x</a>(conjugate)</tt>	 conjugate returns x-y*i
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(inv)</tt>	 compute the multiplicative inverse of a matrix
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(exit_thread)</tt>	 this is synonymous to raise systemexit''
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(ior)</tt>	 same as a |= b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ix_)</tt>	 construct an open mesh from multiple sequences
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(scaleb)</tt>	 returns the first operand after adding the second value its exp
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(tb_lineno)</tt>	 calculate correct line number of traceback given in tb
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.p.e.n.2</a>(popen4)</tt>	 execute the shell command cmd in a sub-process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tril_indices)</tt>	 return the indices for the lower-triangle of an n m array
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(iteritems)</tt>	 an iterator over the key value items of d
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(dirichlet)</tt>	 draw samples from the dirichlet distribution
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(isfile)</tt>	 test whether a path is a regular file
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(update)</tt>	 perform a turtlescreen update
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(erf)</tt>	 error function at x
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(create_function)</tt>	 creates a new function
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.r.c.a.c.h.e</a>(annotate)</tt>	 add '/' suffixes to directories
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(matmul)</tt>	 matrix product of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(tmpfile)</tt>	 create a temporary file with no directory entries
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(getpager)</tt>	 decide what method to use for paging through text
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(onrelease)</tt>	 bind fun to mouse-button-release event on this turtle on canvas
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(copy)</tt>	 returns a deep copy from self
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(urlopen)</tt>	 create a file-like object for the specified url to read from
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(formatmonth)</tt>	 return a month 's calendar string multi-line
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_canonical)</tt>	 return true if self is canonical
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.s.e.c.t</a>(insort_left)</tt>	 insert item x in list a and keep it sorted assuming a is sorted
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legweight)</tt>	 weight function of the legendre polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(mktime_tz)</tt>	 turn a 10-tuple as returned by parsedate_tz into a utc timestamp
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.o.s.t.o.o.l.s</a>(touched_ae)</tt>	 tell the finder a file has changed
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r</a>(formatstring)</tt>	 returns a string formatted from n strings centered within n columns
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(system)</tt>	 execute the command a string in a subshell
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(copyfileobj)</tt>	 copy data from file-like object fsrc to file-like object fdst
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.b</a>(NumpyVersion)</tt>	 parse and compare numpy version strings
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(histogram)</tt>	 compute the histogram of a set of data
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(write)</tt>	 write text at the current turtle position
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(istraceback)</tt>	 return true if the object is a traceback
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arange)</tt>	 return evenly spaced values within a given interval
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(einsum)</tt>	 evaluates the einstein summation convention on the operands
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.i.m.p.o.r.t...z.i.p.i.m.p.o.r.t.e.r</a>(get_filename)</tt>	 return the filename for the specified module
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.I</a>(readline)</tt>	 read one line
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(next_minus)</tt>	 returns the largest representable number smaller than itself
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(trace)</tt>	 return the sum along diagonals of the array
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(stack)</tt>	 return a list of records for the stack above the caller 's frame
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(finditer)</tt>	 return an iterator over all non-overlapping matches in the string
<tt style='background-color:#E8E8E8;'> <a href=''>h.a.s.h.l.i.b</a>(md5)</tt>	 returns a md5 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>i.t.e.r.t.o.o.l.s</a>(tee)</tt>	 > tuple of n independent iterators
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(cert_time_to_seconds)</tt>	 takes a date-time string in standard asn1_print form
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getloadavg)</tt>	 return the number of processes in the system run queue averaged over the last 1 5 and 15 minutes or raises oserror if the load average was unobtainable
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Lock)</tt>	 returns a non-recursive lock object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(beta)</tt>	 draw samples from a beta distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(mapparms)</tt>	 return the mapping parameters
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.h.e.x</a>(binhex)</tt>	 infilename outfilename - create binhex-encoded copy of a file
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(utime)</tt>	 set modification time of targetpath according to tarinfo
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(getsize)</tt>	 return the size of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(setcheckinterval)</tt>	 tell the python interpreter to check for asynchronous events every n instructions
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(busday_offset)</tt>	 first adjusts the date to fall on a valid day according to the roll rule then applies offsets to the given dates counted in valid days
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(xmlcharrefreplace_errors)</tt>	 implements the xmlcharrefreplace error handling which replaces an unencodable character with the appropriate xml character reference
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(broadcast_to)</tt>	 broadcast an array to a new shape
<tt style='background-color:#E8E8E8;'> <a href=''>b.d.b</a>(effective)</tt>	 determine which breakpoint for this file:line is to be acted upon
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(infolist)</tt>	 return a list of class zipinfo instances for files in the archive
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(fromkeys)</tt>	 new dict with keys from s and values equal to v
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.x.t.w.r.a.p</a>(dedent)</tt>	 remove any common leading whitespace from every line in text
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(escape)</tt>	 replace special characters "&", "< and >" to html-safe sequences
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isreal)</tt>	 returns a bool array where true if input element is real
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(isdigit)</tt>	 returns true for each element if all characters in the string are digits and there is at least one character false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(layout)</tt>	 define the widget layout for given style
<tt style='background-color:#E8E8E8;'> <a href=''>p.y._.c.o.m.p.i.l.e</a>(compile)</tt>	 byte-compile one python source file to python bytecode
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(mintypecode)</tt>	 return the character for the minimum-size type to which given types can be safely cast
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(savetxt)</tt>	 save an array to a text file
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(popen4)</tt>	 execute the shell command cmd in a sub-process
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(xor)</tt>	 same as a ^ b
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(shape)</tt>	 set turtle shape to shape with given name / return current shapename
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(canonical)</tt>	 returns the same decimal object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(pmt)</tt>	 compute the payment against loan principal plus interest
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(round)</tt>	 return a copy of a rounded to ‘decimals’ places
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...b.r.o.a.d.c.a.s.t</a>(reset)</tt>	 reset the broadcasted result’s iterator s
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getdoc)</tt>	 get the documentation string for an object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(trim)</tt>	 remove trailing coefficients
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(RawValue)</tt>	 returns a shared object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyvander)</tt>	 vandermonde matrix of given degree
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(pareto)</tt>	 draw samples from a pareto ii or lomax distribution with specified shape
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(sequenceIncludes)</tt>	 same as b in a note reversed operands
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...C.o.u.n.t.e.r</a>(subtract)</tt>	 like dict
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(dir)</tt>	 if called without an argument return the names in the current scope
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(parse_ns_headers)</tt>	 ad-hoc parser for netscape protocol cookie-attributes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(newbyteorder)</tt>	 return the array with the same data viewed with a different byte order
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r</a>(timegm)</tt>	 unrelated but handy function to calculate unix timestamp from gmt
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(ispackage)</tt>	 guess whether a path refers to a package directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(poly2herme)</tt>	 convert a polynomial to a hermite series
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(urljoin)</tt>	 join a base url and a possibly relative url to form an absolute interpretation of the latter
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(popitem)</tt>	 keyerror if d is empty
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(unmimify_part)</tt>	 convert a quoted-printable part of a mime mail message to 8bit
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(islink)</tt>	 test whether a path is a symbolic link
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.r.s.h.a.l</a>(loads)</tt>	 convert the string to a value
<tt style='background-color:#E8E8E8;'> <a href=''>h.a.s.h.l.i.b</a>(sha512)</tt>	 returns a sha512 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(paretovariate)</tt>	 pareto distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(goto)</tt>	 move turtle to an absolute position
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(minus)</tt>	 minus corresponds to unary prefix minus in python
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s...I.n.c.r.e.m.e.n.t.a.l.E.n.c.o.d.e.r</a>(getstate)</tt>	 return the current state of the encoder
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.u.c.t</a>(unpack_from)</tt>	 unpack the buffer containing packed c structure data according to fmt starting at offset
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(choice)</tt>	 generates a random sample from a given 1-d array
<tt style='background-color:#E8E8E8;'> <a href=''>_.h.a.s.h.l.i.b</a>(openssl_sha512)</tt>	 returns a sha512 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2</a>(compress)</tt>	 compress data in one shot
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(utcoffset)</tt>	 return self
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(min)</tt>	 min compares two values numerically and returns the minimum
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(settrace)</tt>	 set a trace function for all threads started from the threading module
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.o.s.t.o.o.l.s</a>(copytree)</tt>	 copy a complete file tree to a new destination
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyvander3d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(all)</tt>	 test whether all array elements along a given axis evaluate to true
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(zip)</tt>	 [ seq1[0], seq2[0]
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(rjust)</tt>	 return a right-justified version of s in a field of the specified width padded with spaces as needed
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(hypergeometric)</tt>	 draw samples from a hypergeometric distribution
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r</a>(weekday)</tt>	 return weekday 0-6 ~ mon-sun for year
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(random_sample)</tt>	 return random floats in the half-open interval [0
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e</a>(encode_long)</tt>	 encode a long to a two 's complement little-endian binary string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(absolute)</tt>	 calculate the absolute value element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(set_history_length)</tt>	 set the maximal number of items which will be written to the history file
<tt style='background-color:#E8E8E8;'> <a href=''>f.t.p.l.i.b</a>(parse150)</tt>	 parse the '150' response for a retr request
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(ondrag)</tt>	 bind fun to mouse-move event on this turtle on canvas
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.l.i.b</a>(randn)</tt>	 return a random matrix with data from the “standard normal” distribution
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(get)</tt>	 d defaults to none
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_completion_type)</tt>	 get the type of completion being attempted
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermpow)</tt>	 raise a hermite series to a power
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(tan)</tt>	 return the tangent of x measured in radians
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(isatty)</tt>	 true if the file is connected to a tty device
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(istitle)</tt>	 return true if s is a titlecased string and there is at least one character in s i
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(iscontiguous)</tt>	 return a boolean indicating whether the data is contiguous
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(normpath)</tt>	 normalize a pathname
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(binomial)</tt>	 draw samples from a binomial distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...E.x.F.i.l.e.O.b.j.e.c.t</a>(close)</tt>	 close the file object
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(setup)</tt>	 set the size and position of the main window
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(rpartition)</tt>	 search for the separator sep in s starting at the end of s and return the part before it the separator itself and the part after it
<tt style='background-color:#E8E8E8;'> <a href=''>p.t.y</a>(fork)</tt>	 fork and make the child a session leader with a controlling terminal
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(quote_plus)</tt>	 quote the query fragment of a url
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(get_printoptions)</tt>	 return the current print options
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(reach)</tt>	 return reach of host h as defined by rfc 2965 section 1
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(min_mag)</tt>	 compares the values numerically with their sign ignored
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(array2string)</tt>	 return a string representation of an array
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(walk)</tt>	 directory tree walk with callback function
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(parse)</tt>	 parse a query in the environment or from a file
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(sum)</tt>	 returns the sum of a sequence of numbers not strings plus the value of parameter start
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(socketpair)</tt>	 create a pair of socket objects from the sockets returned by the platform socketpair function
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.s.l</a>(RAND_egd)</tt>	 queries the entropy gather daemon egd on the socket named by path
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(list_dialects)</tt>	 return a list of all know dialect names
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(addsitedir)</tt>	 add sitedir argument to sys
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(lexists)</tt>	 test whether a path exists
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(log)</tt>	 natural logarithm element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(encode)</tt>	 encodes s using the codec registered for encoding
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isbuiltin)</tt>	 return true if the object is a built-in function or method
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(inet_ntop)</tt>	 ip address convert a packed ip address of the given family to string format
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(pipepager)</tt>	 page through text by feeding it to another program
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.m.t.a.b.l.e...S.y.m.b.o.l.T.a.b.l.e</a>(has_import_star)</tt>	 return true if the scope uses import *
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(iscode)</tt>	 return true if the object is a code object
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.g.p.a.r.s.e...A.r.g.u.m.e.n.t.P.a.r.s.e.r</a>(error)</tt>	 prints a usage message incorporating the message to stderr and exits
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(loads)</tt>	 load a pickle from the current string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(cumsum)</tt>	 return the cumulative sum of the elements along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnl)</tt>	 execute file with arguments from args in a subprocess
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3</a>(complete_statement)</tt>	 checks if a string contains a complete sql statement
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(fftshift)</tt>	 shift the zero-frequency component to the center of the spectrum
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(setraw)</tt>	 put terminal into a raw mode
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_equal)</tt>	 raises an assertionerror if two objects are not equal
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(splitdrive)</tt>	 split a pathname into a drive specification and the rest of the path
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(ln)</tt>	 returns the natural base e logarithm of self
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e</a>(decode_long)</tt>	 decode a long from a two 's complement little-endian binary string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(poly2lag)</tt>	 convert a polynomial to a laguerre series
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(setcopyright)</tt>	 set copyright and credits in __builtin__
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g...d.e.c.o.r.a.t.o.r.s</a>(knownfailureif)</tt>	 make function raise knownfailureexception exception if given condition is true
<tt style='background-color:#E8E8E8;'> <a href=''>f.l.o.a.t</a>(is_integer)</tt>	 returns true if the float is an integer
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(request_path)</tt>	 path component of request-uri as defined by rfc 2965
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(urlparse)</tt>	 parse a url into 6 components
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(shrink_mask)</tt>	 reduce a mask to nomask when possible
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(filled)</tt>	 return a copy of self with masked values filled with a given value
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnvp)</tt>	 execute file which is looked for along $path with arguments from args in a subprocess
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legvander)</tt>	 pseudo-vandermonde matrix of given degree
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermdiv)</tt>	 divide one hermite series by another
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(format_exc)</tt>	 like print_exc but return a string
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.c.m.p</a>(cmp)</tt>	 compare two files
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(addusersitepackages)</tt>	 add a per user site-package to sys
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(split)</tt>	 return a list of the sections in b using sep as the delimiter
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(seterrobj)</tt>	 set the object that defines floating-point error handling
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanmax)</tt>	 return the maximum of an array or maximum along an axis ignoring any nans
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.o.o.l.s</a>(keysubst)</tt>	 replace long name keys by their 4-char counterparts and check
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_begidx)</tt>	 int get the beginning index of the readline tab-completion scope
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tri)</tt>	 an array with ones at and below the given diagonal and zeros elsewhere
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebval)</tt>	 evaluate a chebyshev series at points x
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(subtract)</tt>	 return the difference between the two operands
<tt style='background-color:#E8E8E8;'> <a href=''>a.n.y.d.b.m</a>(open)</tt>	 open or create database at path given by *file*
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(plain)</tt>	 remove boldface formatting from text
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(any)</tt>	 test whether any array element along a given axis evaluates to true
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(localtime)</tt>	 convert seconds since the epoch to a time tuple expressing local time
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(write_history_file)</tt>	 save a readline history file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legvander3d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(decorate_methods)</tt>	 apply a decorator to all methods in a class matching a regular expression
<tt style='background-color:#E8E8E8;'> <a href=''>p.w.d</a>(getpwnam)</tt>	 return the password database entry for the given user name
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(chmod)</tt>	 change the access permissions of a file
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(setFormatter)</tt>	 set the formatter for this handler
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(geterrobj)</tt>	 return the current object that defines floating-point error handling
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(seterrcall)</tt>	 set the floating-point error callback function or log object
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(wait)</tt>	 wait for completion of a child process
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(reset)</tt>	 reset the file position to the beginning
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(open)</tt>	 open an encoded file using the given mode and return a wrapped version providing transparent encoding/decoding
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(set_conversion_mode)</tt>	 set the encoding and error handling ctypes uses when converting between unicode and strings
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(shape)</tt>	 return the shape of an array
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(get_data)</tt>	 get a resource from a package
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(namelist)</tt>	 return a list of file names in the archive
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.s</a>(findlabels)</tt>	 detect all offsets in a byte code which are jump targets
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(logaddexp)</tt>	 logarithm of the sum of exponentiations of the inputs
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r...s.t</a>(tolist)</tt>	 creates a list-tree representation of this st
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(tmpnam)</tt>	 return a unique name for a temporary file
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.o.z.e.n.s.e.t</a>(symmetric_difference)</tt>	 return the symmetric difference of two sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(delay)</tt>	 return or set the drawing delay in milliseconds
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermevander3d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i.t.b</a>(enable)</tt>	 install an exception handler that formats tracebacks as html
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermvander)</tt>	 pseudo-vandermonde matrix of given degree
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(hypot)</tt>	 return the euclidean distance sqrt x*x + y*y
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(pathdirs)</tt>	 convert sys
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(dump)</tt>	 dump a pickle of the array to the specified file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(eigvalsh)</tt>	 compute the eigenvalues of a hermitian or real symmetric matrix
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(logical_xor)</tt>	 compute the truth value of x1 xor x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(binomial)</tt>	 draw samples from a binomial distribution
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(raw_input)</tt>	 read a string from standard input
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermmul)</tt>	 multiply one hermite series by another
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(multivariate_normal)</tt>	 draw random samples from a multivariate normal distribution
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(realpath)</tt>	 return the canonical path of the specified filename eliminating any symbolic links encountered in the path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagcompanion)</tt>	 return the companion matrix of c
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(unified_diff)</tt>	 compare two sequences of lines
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(proxy_bypass_environment)</tt>	 test if proxies should not be used for a particular host
<tt style='background-color:#E8E8E8;'> <a href=''>s.n.d.h.d.r</a>(what)</tt>	 guess the type of a sound file
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getargs)</tt>	 get information about the arguments accepted by a code object
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(shift)</tt>	 returns a shifted copy of self value-of-other times
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatday)</tt>	 return a day as a table cell
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagmul)</tt>	 multiply one laguerre series by another
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...E.x.F.i.l.e.O.b.j.e.c.t</a>(readlines)</tt>	 return a list with all remaining lines
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(pendown)</tt>	 pull the pen down -- drawing when moving
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.t.p.a.s.s</a>(getuser)</tt>	 get the username from the environment or password database
<tt style='background-color:#E8E8E8;'> <a href=''>_.h.a.s.h.l.i.b</a>(openssl_md5)</tt>	 returns a md5 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.e.t.o.o.l.s</a>(choose_boundary)</tt>	 return a string usable as a multipart boundary
<tt style='background-color:#E8E8E8;'> <a href=''>h.a.s.h.l.i.b</a>(sha1)</tt>	 returns a sha1 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(Polynomial)</tt>	 a power series class
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(clearscreen)</tt>	 delete all drawings and all turtles from the turtlescreen
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(multiply)</tt>	 multiply arguments element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(getatime)</tt>	 return the last access time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...B.u.f.f.e.r.i.n.g.F.o.r.m.a.t.t.e.r</a>(format)</tt>	 format the specified records and return the result as a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(poly1d)</tt>	 a one-dimensional polynomial class
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(itermonthdates)</tt>	 return an iterator for one month
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(read)</tt>	 return file bytes as a string for name
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(ctime)</tt>	 return ctime style string
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...C.o.u.n.t.e.r</a>(most_common)</tt>	 list the n most common elements and their counts from the most common to the least
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatmonth)</tt>	 return a formatted month as a table
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(test)</tt>	 robust test cgi script usable as main program
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sctype2char)</tt>	 return the string representation of a scalar dtype
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_nan)</tt>	 return true if self is a qnan or snan
<tt style='background-color:#E8E8E8;'> <a href=''>h.a.s.h.l.i.b</a>(sha256)</tt>	 returns a sha256 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(zipf)</tt>	 draw samples from a zipf distribution
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(logical_xor)</tt>	 applies the logical operation xor between each operand 's digits
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanargmax)</tt>	 return the indices of the maximum values in the specified axis ignoring nans
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.s.e.c.t</a>(insort_right)</tt>	 insert item x in list a and keep it sorted assuming a is sorted
<tt style='background-color:#E8E8E8;'> <a href=''>f.u.n.c.t.o.o.l.s</a>(total_ordering)</tt>	 class decorator that fills in missing ordering methods
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(partition)</tt>	 return a partitioned copy of an array
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(decode)</tt>	 decodes obj using the codec registered for encoding
<tt style='background-color:#E8E8E8;'> <a href=''>c.P.i.c.k.l.e</a>(dump)</tt>	 write an object in pickle format to the given file
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(atanh)</tt>	 return the hyperbolic arc tangent measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(b64encode)</tt>	 encode a string using base64
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(getmtime)</tt>	 return the last modification time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(begin_poly)</tt>	 start recording the vertices of a polygon
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getmodule)</tt>	 return the module an object was defined in or none if not found
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyfromroots)</tt>	 generate a monic polynomial with given roots
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermval2d)</tt>	 evaluate a 2-d hermite series at points x y
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(compile)</tt>	 compile the source string into a code object that can be executed by the exec statement or eval
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.E.x.t.F.i.l.e</a>(readline)</tt>	 read and return a line from the stream
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(shares_memory)</tt>	 determine if two arrays share memory
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(range)</tt>	 return a list containing an arithmetic progression of integers
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(replace)</tt>	 return a copy of b with all occurrences of subsection old replaced by new
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(floordiv)</tt>	 same as a // b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(fit)</tt>	 least squares fit to data
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(any)</tt>	 return true if bool x is true for any x in the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(replace)</tt>	 return a copy of string str with all occurrences of substring old replaced by new
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(fromlist)</tt>	 append items to array from list
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.n.a.u.d.i.o</a>(get_long_be)</tt>	 convert a 4-char value to integer
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(get_fill_value)</tt>	 return the filling value of the masked array
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.o.s.t.o.o.l.s</a>(copy)</tt>	 copy a file including finder info resource fork etc
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(lookup)</tt>	 codecinfo looks up a codec tuple in the python codec registry and returns a codecinfo object
<tt style='background-color:#E8E8E8;'> <a href=''>f.l.o.a.t</a>(hex)</tt>	 return a hexadecimal representation of a floating-point number
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(irr)</tt>	 return the internal rate of return irr
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fpathconf)</tt>	 return the configuration limit name for the file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(acosh)</tt>	 return the hyperbolic arccosine of x
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnve)</tt>	 execute file with arguments from args in a subprocess with the specified environment
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(combining)</tt>	 returns the canonical combining class assigned to the unicode character unichr as integer
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_ppm)</tt>	 ppm portable pixmap
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(element_options)</tt>	 return the list of elementname 's options
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(get_loader)</tt>	 get a pep 302 loader object for module_or_name
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isclass)</tt>	 return true if the object is a class
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(timetuple)</tt>	 return time tuple compatible with time
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(pathname2url)</tt>	 os-specific conversion from a file system path to a relative url of the file scheme
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(xreadlines)</tt>	 for backward compatibility
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.i.m.p.o.r.t...z.i.p.i.m.p.o.r.t.e.r</a>(is_package)</tt>	 return true if the module specified by fullname is a package
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(packbits)</tt>	 packs the elements of a binary-valued array into bits in a uint8 array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(hypot)</tt>	 given the “legs” of a right triangle return its hypotenuse
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(fix_missing_locations)</tt>	 when you compile a node tree with compile , the compiler expects lineno and col_offset attributes for every node that supports them
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(getuserbase)</tt>	 returns the user base directory path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(seed)</tt>	 seed the generator
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s...P.o.p.e.n</a>(pipe_cloexec)</tt>	 create a pipe with fds set cloexec
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(swapcase)</tt>	 return a copy of b with uppercase ascii characters converted to lowercase ascii and vice versa
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legval3d)</tt>	 evaluate a 3-d legendre series at points x y z
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyline)</tt>	 returns an array representing a linear polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>w.e.b.b.r.o.w.s.e.r</a>(register)</tt>	 register a browser connector and optionally connection
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(setheading)</tt>	 set the orientation of the turtle to to_angle
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(asarray)</tt>	 convert the input to an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagadd)</tt>	 add one laguerre series to another
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(format)</tt>	 returns value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(chisquare)</tt>	 draw samples from a chi-square distribution
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(acquire_lock)</tt>	 acquires the interpreter 's import lock for the current thread
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(rstrip)</tt>	 for each element in a return a copy with the trailing characters removed
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_infinite)</tt>	 return true if the operand is infinite
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polytrim)</tt>	 remove “small” “trailing” coefficients from a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(multivariate_normal)</tt>	 draw random samples from a multivariate normal distribution
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(tcgetpgrp)</tt>	 return the process group associated with the terminal given by a fd
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(sslwrap_simple)</tt>	 a replacement for the old socket
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(weibull)</tt>	 draw samples from a weibull distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(prod)</tt>	 return the product of array elements over a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(pop)</tt>	 remove and return a single item from b
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(concat)</tt>	 same as a + b for a and b sequences
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isposinf)</tt>	 test element-wise for positive infinity return result as bool array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(max)</tt>	 return the maximum along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermvander2d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(pop)</tt>	 if key is not found d is returned if given otherwise keyerror is raised
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(backward)</tt>	 move the turtle backward by distance
<tt style='background-color:#E8E8E8;'> <a href=''>f.u.n.c.t.o.o.l.s</a>(update_wrapper)</tt>	 update a wrapper function to look like the wrapped function
<tt style='background-color:#E8E8E8;'> <a href=''>z.l.i.b</a>(decompressobj)</tt>	 return a decompressor object
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(lookup_error)</tt>	 return the error handler for the specified error handling name or raise a lookuperror if no handler exists under this name
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(decimal)</tt>	 returns the decimal value assigned to the unicode character unichr as integer
<tt style='background-color:#E8E8E8;'> <a href=''>f.c.n.t.l</a>(fcntl)</tt>	 perform the requested operation on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3</a>(register_converter)</tt>	 registers a converter with pysqlite
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(cutdeg)</tt>	 truncate series to the given degree
<tt style='background-color:#E8E8E8;'> <a href=''>p.r.o.f.i.l.e</a>(runctx)</tt>	 run statement under profiler supplying your own globals and locals optionally saving results in filename
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(python_branch)</tt>	 returns a string identifying the python implementation branch
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanpercentile)</tt>	 compute the qth percentile of the data along the specified axis while ignoring nan values
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_snan)</tt>	 return true if self is a signaling nan
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(nti)</tt>	 convert a number field to a python number
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ptp)</tt>	 range of values maximum - minimum along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...M.a.n.a.g.e.r</a>(setLoggerClass)</tt>	 set the class to be used when instantiating a logger with this manager
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(multinomial)</tt>	 draw samples from a multinomial distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(issubclass_)</tt>	 determine if a class is a subclass of a second class
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.e.t.y.p.e.s</a>(add_type)</tt>	 add a mapping between a type and an extension
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(iter_modules)</tt>	 yields module_loader name ispkg for all submodules on path or if path is none all top-level modules on sys
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(iinfo)</tt>	 machine limits for integer types
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(randombytes)</tt>	 return n random bytes
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(parsedate_tz)</tt>	 convert a date string to a time tuple
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fromstring)</tt>	 a new 1-d array initialized from raw binary or text data in a string
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(walk)</tt>	 directory tree generator
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execlpe)</tt>	 execute the executable file which is searched for along $path with argument list args and environment env replacing the current process
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.m.t.a.b.l.e...S.y.m.b.o.l</a>(get_namespaces)</tt>	 return a list of namespaces bound to this name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(random_integers)</tt>	 random integers of type np
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(frexp)</tt>	 decompose the elements of x into mantissa and twos exponent
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arcsin)</tt>	 inverse sine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeweight)</tt>	 weight function of the hermite_e polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(zfill)</tt>	 pad a numeric string b with zeros on the left to fill a field of the specified width
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(lower)</tt>	 return a copy of the string s converted to lowercase
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(gradient)</tt>	 return the gradient of an n-dimensional array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(anomalies)</tt>	 compute the anomalies deviations from the arithmetic mean along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(geteuid)</tt>	 return the current process 's effective user id
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arctan)</tt>	 trigonometric inverse tangent element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(logb)</tt>	 returns the exponent of the magnitude of the operand 's msd
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(symlink)</tt>	 create a symbolic link pointing to src named dst
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3</a>(register_adapter)</tt>	 registers an adapter with pysqlite 's adapter registry
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(onscreenclick)</tt>	 bind fun to mouse-click event on canvas
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(getH)</tt>	 returns the complex conjugate transpose of self
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(translate)</tt>	 return a copy of b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nonzero)</tt>	 return the indices of the elements that are non-zero
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(isupper)</tt>	 return true if all cased characters in b are uppercase and there is at least one cased character in b false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(update)</tt>	 update d from dict/iterable e and f
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fmax)</tt>	 element-wise maximum of array elements
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e</a>(mloads)</tt>	 loads string convert the string to a value
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b...H.t.m.l.D.i.f.f</a>(make_table)</tt>	 returns html table of side by side comparison with change highlights
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(print_exception)</tt>	 print exception up to limit stack trace entries from tb to file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(shrink_mask)</tt>	 reduce a mask to nomask when possible
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.i.m.e</a>(isoformat)</tt>	 return string in iso 8601 format hh:mm:ss[
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(isdir)</tt>	 return true if the pathname refers to an existing directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polydiv)</tt>	 returns the quotient and remainder of polynomial division
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(negative_binomial)</tt>	 draw samples from a negative binomial distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(undobufferentries)</tt>	 return count of entries in the undobuffer
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setgid)</tt>	 set the current process 's group id
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(next_plus)</tt>	 returns the smallest representable number larger than a
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s</a>(check_call)</tt>	 run command with arguments
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(isdecimal)</tt>	 return true if there are only decimal characters in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(logical_or)</tt>	 applies the logical operation or between each operand 's digits
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(unichr)</tt>	 unicode character return a unicode string of one character with ordinal i
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...P.l.a.c.e.H.o.l.d.e.r</a>(append)</tt>	 add the specified logger as a child of this placeholder
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.r.e</a>(spacing)</tt>	 return the distance between x and the nearest adjacent number
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(active_children)</tt>	 return list of process objects corresponding to live child processes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebweight)</tt>	 the weight function of the chebyshev polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(purge)</tt>	 clear the regular expression cache
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(rundocs)</tt>	 run doctests found in the given file
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(writedocs)</tt>	 write out html documentation for all modules in a directory tree
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(remainder)</tt>	 return element-wise remainder of division
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(asarray_chkfinite)</tt>	 convert the input to an array checking for nans or infs
<tt style='background-color:#E8E8E8;'> <a href=''>u.f.u.n.c</a>(ntypes)</tt>	 the number of types
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(rotate)</tt>	 rotate the deque n steps to the right
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(format_exception_only)</tt>	 format the exception part of a traceback
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(dolog)</tt>	 write a log message to the log file
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(cos)</tt>	 return the cosine of x measured in radians
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(new_module)</tt>	 create a new module
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(leggauss)</tt>	 gauss-legendre quadrature
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ascontiguousarray)</tt>	 return a contiguous array in memory c order
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(timegm)</tt>	 unrelated but handy function to calculate unix timestamp from gmt
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getblock)</tt>	 extract the block of code at the top of the given list of lines
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(dist)</tt>	 tries to determine the name of the linux os distribution name
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(prweek)</tt>	 print a single week no newline
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.n.t.e.x.t.l.i.b</a>(warn)</tt>	 issue a warning or maybe ignore it or raise an exception
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_array_less)</tt>	 raises an assertionerror if two array_like objects are not ordered by less than
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(atof)</tt>	 return the floating point number represented by the string s
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.s.k.e.d.A.r.r.a.y</a>(harden_mask)</tt>	 force the mask to hard
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(array_str)</tt>	 return a string representation of the data in an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(laggauss)</tt>	 gauss-laguerre quadrature
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(cast)</tt>	 convert series to series of this class
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(atan)</tt>	 return the arc tangent measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(isNumberType)</tt>	 return true if a has a numeric type false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(eigh)</tt>	 return the eigenvalues and eigenvectors of a hermitian or symmetric matrix
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g...T.h.r.e.a.d</a>(start)</tt>	 start the thread 's activity
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(may_share_memory)</tt>	 determine if two arrays might share memory
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(iadd)</tt>	 same as a += b
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(difference)</tt>	 return the difference of two or more sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(invert)</tt>	 compute bit-wise inversion or bit-wise not element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(identity)</tt>	 return the identity array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(diag)</tt>	 extract a diagonal or construct a diagonal array
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(localhost)</tt>	 return the ip address of the magic hostname localhost
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(tofile)</tt>	 save a masked array to a file in binary format
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.n.e.r.i.c.p.a.t.h</a>(getsize)</tt>	 return the size of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(iter_child_nodes)</tt>	 yield all direct child nodes of *node*, that is all fields that are nodes and all items of fields that are lists of nodes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(view)</tt>	 new view of array with the same data
<tt style='background-color:#E8E8E8;'> <a href=''>p.t.y</a>(master_open)</tt>	 open a pty master and return the fd and the filename of the slave end
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(call_tracing)</tt>	 call func *args, while tracing is enabled
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(degree)</tt>	 the degree of the series
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.C.o.m.p.r.e.s.s.o.r</a>(flush)</tt>	 finish the compression process and return what is left in internal buffers
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(compress_rowcols)</tt>	 suppress the rows and/or columns of a 2-d array that contain masked values
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(masked_all_like)</tt>	 empty masked array with the properties of an existing array
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.a.c.h.e</a>(display)</tt>	 for debugging only
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(apropos)</tt>	 print all the one-line module summaries that contain a substring
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(cursor)</tt>	 return a cursor for the connection
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(locate)</tt>	 locate an object by name or dotted path importing as necessary
<tt style='background-color:#E8E8E8;'> <a href=''>u.f.u.n.c</a>(nout)</tt>	 the number of outputs
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(iterdump)</tt>	 returns iterator to the dump of the database in an sql text format
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(gettarinfo)</tt>	 create a tarinfo object for either the file name or the file object fileobj using os
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.R.e.c.o.r.d</a>(getMessage)</tt>	 return the message for this logrecord
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(itermonthdays)</tt>	 like itermonthdates , but will yield day numbers
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.a.p.l.i.b</a>(Time2Internaldate)</tt>	 convert date_time to imap4 internaldate representation
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(unwrap)</tt>	 unwrap by changing deltas between values to 2*pi complement
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fmin)</tt>	 element-wise minimum of array elements
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(expandvars)</tt>	 expand shell variables of form $var and ${var}
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polymulx)</tt>	 multiply a polynomial by x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(has_samecoef)</tt>	 check if coefficients match
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(logical_and)</tt>	 applies the logical operation and between each operand 's digits
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...E.x.F.i.l.e.O.b.j.e.c.t</a>(tell)</tt>	 return the current file position
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(gauss)</tt>	 gaussian distribution
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b</a>(StringIO)</tt>	 return a stringio-like stream for reading or writing
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_subnormal)</tt>	 return true if self is subnormal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(itemset)</tt>	 insert scalar into an array scalar is cast to array’s dtype if possible
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(append)</tt>	 append new value x to the end of the array
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(get_ident)</tt>	 return a non-zero integer that uniquely identifies the current thread amongst other threads that exist simultaneously
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(confstr)</tt>	 return a string-valued system configuration variable
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(splitlines)</tt>	 return a list of the lines in b breaking at line boundaries
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.o.s.t.o.o.l.s</a>(mkalias)</tt>	 create a finder alias
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(read)</tt>	 read a file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(convert)</tt>	 convert series to a different kind and/or domain and/or window
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.I.n.f.o</a>(create_pax_header)</tt>	 return the object as a ustar header block
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(histogramdd)</tt>	 compute the multidimensional histogram of some data
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(cli)</tt>	 command-line interface looks at sys
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(random)</tt>	 return random floats in the half-open interval [0
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(split)</tt>	 return a list of the words in s using sep as the delimiter string
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(clear)</tt>	 delete the turtle 's drawings from the screen
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(tensorinv)</tt>	 compute the ‘inverse’ of an n-dimensional array
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(extendleft)</tt>	 extend the left side of the deque with elements from the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(parse_keqv_list)</tt>	 parse list of key=value strings where keys are not duplicated
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagvander)</tt>	 pseudo-vandermonde matrix of given degree
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(python_version)</tt>	 returns the python version as string 'major
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(mat)</tt>	 interpret the input as a matrix
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(degree)</tt>	 the degree of the series
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(get_suffixes)</tt>	 [ suffix mode type,
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(min)</tt>	 return the minimum along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(reverse)</tt>	 reverse the order of the items in the array
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_scheme_names)</tt>	 returns a tuple containing the schemes names
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(splitnport)</tt>	 split host and port returning numeric port
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(today)</tt>	 current date or datetime: same as self
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(isatty)</tt>	 always returns 0
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(filled)</tt>	 return a copy of self with masked values filled with a given value
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(fromfd)</tt>	 create a socket object from a duplicate of the given file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s...P.o.p.e.n</a>(communicate)</tt>	 interact with process: send data to stdin
<tt style='background-color:#E8E8E8;'> <a href=''>r.u.n.p.y</a>(run_path)</tt>	 execute code located at the specified filesystem location
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(setflags)</tt>	 set array flags writeable aligned and updateifcopy respectively
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r</a>(leapdays)</tt>	 return number of leap years in range [y1 y2
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(parse_and_bind)</tt>	 parse and execute single line of a readline init file
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(rect)</tt>	 convert from polar coordinates to rectangular coordinates
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getcallargs)</tt>	 get the mapping of arguments to values
<tt style='background-color:#E8E8E8;'> <a href=''>u.u.i.d</a>(getnode)</tt>	 get the hardware address as a 48-bit positive integer
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(min_mag)</tt>	 compares the values numerically with their sign ignored
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(close)</tt>	 none or perhaps an integer close the file
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(executescript)</tt>	 executes a multiple sql statements at once
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(itermonthdays2)</tt>	 like itermonthdates , but will yield day number weekday number tuples
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(isnan)</tt>	 checks if the real or imaginary part of z not a number nan
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(abort)</tt>	 abort the interpreter immediately
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(unravel_index)</tt>	 converts a flat index or array of flat indices into a tuple of coordinate arrays
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g...T.h.r.e.a.d</a>(run)</tt>	 method representing the thread 's activity
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(upper)</tt>	 return a copy of the string s converted to uppercase
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_jpeg)</tt>	 jpeg data in jfif format
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(imag)</tt>	 return the imaginary part of the elements of the array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fmod)</tt>	 return the element-wise remainder of division
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(mktime)</tt>	 convert a time tuple in local time to seconds since the epoch
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(mknod)</tt>	 create a filesystem node file device special file or named pipe named filename
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(accept)</tt>	 accepts a new connection from a remote client
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(gt)</tt>	 same as a>b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sort_complex)</tt>	 sort a complex array using the real part first then the imaginary part
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getsizeof)</tt>	 return the size of object in bytes
<tt style='background-color:#E8E8E8;'> <a href=''>_.m.u.l.t.i.p.r.o.c.e.s.s.i.n.g...C.o.n.n.e.c.t.i.o.n</a>(recv_bytes_into)</tt>	 receive byte data into a writeable buffer-like object returns the number of bytes read
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getcwdu)</tt>	 return a unicode string representing the current working directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(permutation)</tt>	 randomly permute a sequence or return a permuted range
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(tzset)</tt>	 initialize or reinitialize the local timezone to the value stored in os
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(utime)</tt>	 none set the access and modified time of the file to the given values
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(Lock)</tt>	 create a new lock object
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getcomments)</tt>	 get lines of comments immediately preceding an object 's source code
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(standard_normal)</tt>	 draw samples from a standard normal distribution mean=0 stdev=1
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(isupper)</tt>	 return true if all cased characters in s are uppercase and there is at least one cased character in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(ctime)</tt>	 convert a time in seconds since the epoch to a string in local time
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(register_error)</tt>	 register the specified error handler under the name errors
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(min)</tt>	 with a single iterable argument return its smallest item
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(end_poly)</tt>	 stop recording the vertices of a polygon
<tt style='background-color:#E8E8E8;'> <a href=''>C.a.r.b.o.n</a>(warnpy3k)</tt>	 issue a deprecation warning for python 3
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(standard_t)</tt>	 draw samples from a standard student’s t distribution with df degrees of freedom
<tt style='background-color:#E8E8E8;'> <a href=''>d.b.m</a>(open)</tt>	 return a database object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(asscalar)</tt>	 convert an array of size 1 to its scalar equivalent
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(create_unicode_buffer)</tt>	 character array
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(getlocale)</tt>	 returns the current setting for the given locale category as tuple language code encoding
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(setBEGINLIBPATH)</tt>	 the os/2 emx port has optional extension modules that do double duty as dlls and must use the
<tt style='background-color:#E8E8E8;'> <a href=''>n.i.s</a>(cat)</tt>	 returns the entire map as a dictionary
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sign)</tt>	 returns an element-wise indication of the sign of a number
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(register_archive_format)</tt>	 registers an archive format
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(flatten)</tt>	 return a flattened copy of the matrix
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(pow)</tt>	 with two arguments equivalent to x**y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(dirichlet)</tt>	 draw samples from the dirichlet distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(hanning)</tt>	 return the hanning window
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(viewvalues)</tt>	 an object providing a view on od 's values
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(describe)</tt>	 produce a short description of the given thing
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(isnumeric)</tt>	 for each element return true if there are only numeric characters in the element
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(rfind)</tt>	 return the highest index in s where substring sub is found such that sub is contained within s[startend]
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(poly2leg)</tt>	 convert a polynomial to a legendre series
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(waitpid)</tt>	 wait for completion of a given child process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(Chebyshev)</tt>	 a chebyshev series class
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(atoi)</tt>	 return the integer represented by the string s in the given base
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(redisplay)</tt>	 change what 's displayed on the screen to reflect the current contents of the line buffer
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(minimum)</tt>	 element-wise minimum of array elements
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getsourcefile)</tt>	 return the filename that can be used to locate an object 's source
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(iterkeys)</tt>	 an iterator over the keys of d
<tt style='background-color:#E8E8E8;'> <a href=''>g.z.i.p...G.z.i.p.F.i.l.e</a>(fileno)</tt>	 invoke the underlying file object 's fileno method
<tt style='background-color:#E8E8E8;'> <a href=''>f.l.o.a.t</a>(fromhex)</tt>	 create a floating-point number from a hexadecimal string
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(intern)</tt>	 intern'' the given string
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(monthdatescalendar)</tt>	 return a matrix list of lists representing a month 's calendar
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(testfile)</tt>	 test examples in the given file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermtrim)</tt>	 remove “small” “trailing” coefficients from a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.p.y._.r.e.g</a>(remove_extension)</tt>	 unregister an extension code
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(get_dialect)</tt>	 return the dialect instance associated with name
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(addfile)</tt>	 add the tarinfo object tarinfo' to the archive
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(mod)</tt>	 return element-wise remainder of division
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(flatten)</tt>	 return a copy of the array collapsed into one dimension
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(insert)</tt>	 insert a new item x into the array before position i
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(expr)</tt>	 creates an st object from an expression
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(cpu_count)</tt>	 returns the number of cpus in the system
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(isCallable)</tt>	 same as callable a
<tt style='background-color:#E8E8E8;'> <a href=''>z.l.i.b</a>(compress)</tt>	 returned compressed string
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(copy)</tt>	 a shallow copy of d
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(make_archive)</tt>	 create an archive file
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.c.O.S</a>(GetCreatorAndType)</tt>	 get macos 4-char creator and type for a file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(convert)</tt>	 convert series to a different kind and/or domain and/or window
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(formatargvalues)</tt>	 format an argument spec from the 4 values returned by getargvalues
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(tomaxint)</tt>	 random integers between 0 and sys
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(has_samewindow)</tt>	 check if windows match
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(discard)</tt>	 remove an element from a set if it is a member
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(trace)</tt>	 return a list of records for the stack below the current exception
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(pop)</tt>	 return the i-th element and delete it from the array
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(gamma)</tt>	 gamma function at x
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(remove_history_item)</tt>	 remove history item given by its position
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.o.r.m.a.t.t.e.r</a>(formatException)</tt>	 format and return the specified exception information as a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(filled)</tt>	 return input as an array with masked data replaced by a fill value
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(isEnabledFor)</tt>	 is this logger enabled for level level
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(right_shift)</tt>	 shift the bits of an integer to the right
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebder)</tt>	 differentiate a chebyshev series
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(center)</tt>	 return s centered in a unicode string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>g.r.p</a>(getgrnam)</tt>	 return the group database entry for the given group name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(ihfft)</tt>	 compute the inverse fft of a signal that has hermitian symmetry
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isclose)</tt>	 returns a boolean array where two arrays are element-wise equal within a tolerance
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(handle)</tt>	 call the handlers for the specified record
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(clear_cache)</tt>	 clear the parse cache
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(cleandoc)</tt>	 clean up indentation from docstrings
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polycompanion)</tt>	 return the companion matrix of c
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.i.m.e</a>(utcoffset)</tt>	 return self
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t...N.o.d.e.V.i.s.i.t.o.r</a>(visit)</tt>	 visit a node
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(rjust)</tt>	 return an array with the elements of a right-justified in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.p.i.l.e.a.l.l</a>(expand_args)</tt>	 read names in flist and append to args
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(info)</tt>	 log a message with severity info on the root logger
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(newbyteorder)</tt>	 return the array with the same data viewed with a different byte order
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polyder)</tt>	 return the derivative of the specified order of a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(argmax)</tt>	 returns the indices of the maximum values along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(to_integral_exact)</tt>	 rounds to a nearby integer
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(upper)</tt>	 return a copy of s converted to uppercase
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(rfft)</tt>	 compute the one-dimensional discrete fourier transform for real input
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(angle)</tt>	 return the angle of the complex argument
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.i.l.t.e.r.e.r</a>(addFilter)</tt>	 add the specified filter to this handler
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(ceil)</tt>	 return the ceiling of x as a float
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(fit)</tt>	 least squares fit to data
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(startswith)</tt>	 return true if s starts with the specified prefix false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(toflex)</tt>	 transforms a masked array into a flexible-type array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(setflags)</tt>	 set array flags writeable aligned and updateifcopy respectively
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(split)</tt>	 split a pathname into two parts: the directory leading up to the final bit and the basename
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getabsfile)</tt>	 return an absolute path to the source or compiled file for an object
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(to_integral_value)</tt>	 rounds to the nearest integer without raising inexact rounded
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setgroups)</tt>	 set the groups of the current process to list
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fromiter)</tt>	 create a new 1-dimensional array from an iterable object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(apply_along_axis)</tt>	 apply a function to 1-d slices along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fstat)</tt>	 like stat , but for an open file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(bincount)</tt>	 count number of occurrences of each value in array of non-negative ints
<tt style='background-color:#E8E8E8;'> <a href=''>f.p.f.o.r.m.a.t</a>(fix)</tt>	 format x as [-]ddd
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arctanh)</tt>	 inverse hyperbolic tangent element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nditer)</tt>	 efficient multi-dimensional iterator object to iterate over arrays
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(formatdate)</tt>	 returns time format preferred for internet standards
<tt style='background-color:#E8E8E8;'> <a href=''>p.t.y</a>(slave_open)</tt>	 open the pty slave and acquire the controlling terminal returning opened filedescriptor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermgrid3d)</tt>	 evaluate a 3-d hermite series on the cartesian product of x y and z
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(beta)</tt>	 draw samples from a beta distribution
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(write)</tt>	 write string str to file
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(b2a_base64)</tt>	 base64-code line of data
<tt style='background-color:#E8E8E8;'> <a href=''>w.a.r.n.i.n.g.s</a>(filterwarnings)</tt>	 insert an entry into the list of warnings filters at the front
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(getcanvas)</tt>	 return the canvas of this turtlescreen
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(decode)</tt>	 calls str
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...D.a.t.a.S.o.u.r.c.e</a>(open)</tt>	 open and return file-like object
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(copy_negate)</tt>	 returns a copy of the operand with the sign inverted
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(rindex)</tt>	 like b.rfind but raise valueerror when the subsection is not found
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(truediv)</tt>	 same as a / b when __future__.division is in effect
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(atan2)</tt>	 return the arc tangent measured in radians of y/x
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(position)</tt>	 return the turtle 's current location xy, as a vec2d-vector
<tt style='background-color:#E8E8E8;'> <a href=''>i.o</a>(OpenWrapper)</tt>	 open file and return a stream
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(write)</tt>	 write the data string to file
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(readline)</tt>	 retain newline
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_platform)</tt>	 return a string that identifies the current platform
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.e.t.o.o.l.s</a>(decode)</tt>	 decode common content-transfer-encodings base64 quopri uuencode
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(isinstance)</tt>	 return whether an object is an instance of a class or of a subclass thereof
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arccosh)</tt>	 inverse hyperbolic cosine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getrecursionlimit)</tt>	 return the current value of the recursion limit the maximum depth of the python interpreter stack
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t</a>(gethostbyname_ex)</tt>	 return the true host name a list of aliases and a list of ip addresses for a host
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanmean)</tt>	 compute the arithmetic mean along the specified axis ignoring nans
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e...V.e.c.2.D</a>(rotate)</tt>	 rotate self counterclockwise by angle
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(isdigit)</tt>	 return true if all characters in b are digits and there is at least one character in b false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WSTOPSIG)</tt>	 return the signal that stopped the process that provided the status value
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(addLevelName)</tt>	 associate levelname with level
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(heappop)</tt>	 pop the smallest item off the heap maintaining the heap invariant
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(setencoding)</tt>	 set the string encoding used by the unicode implementation
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s...P.o.p.e.n</a>(send_signal)</tt>	 send a signal to the process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sin)</tt>	 trigonometric sine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(get_poly)</tt>	 return the lastly recorded polygon
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(copy_abs)</tt>	 returns a copy with the sign set to 0
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...W.i.c.h.m.a.n.n.H.i.l.l</a>(whseed)</tt>	 seed from hashable object 's hash code
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(byteswap)</tt>	 byteswap all items of the array
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...E.x.F.i.l.e.O.b.j.e.c.t</a>(readline)</tt>	 read one entire line from the file
<tt style='background-color:#E8E8E8;'> <a href=''>x.m.l.r.p.c.l.i.b</a>(getparser)</tt>	 create an instance of the fastest available parser and attach it to an unmarshalling object
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(commonprefix)</tt>	 given a list of pathnames returns the longest common leading component
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(info)</tt>	 get help information for a function class or module
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(DocTestSuite)</tt>	 convert doctest tests for a module to a unittest test suite
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...S.t.r.e.a.m.H.a.n.d.l.e.r</a>(flush)</tt>	 flushes the stream
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(writestr)</tt>	 write a file into the archive
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execvp)</tt>	 execute the executable file which is searched for along $path with argument list args replacing the current process
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.p.a.c.k</a>(coerce)</tt>	 coerce a python object to another type using the ae coercers
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(lgamma)</tt>	 natural logarithm of absolute value of gamma function at x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(greater)</tt>	 return the truth value of x1 > x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(ismethoddescriptor)</tt>	 return true if the object is a method descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(is_not)</tt>	 same as a is not b
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(read)</tt>	 read at most size uncompressed bytes returned as a string
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(unmimify)</tt>	 convert quoted-printable parts of a mime mail message to 8bit
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getuid)</tt>	 return the current process 's user id
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(rad2deg)</tt>	 convert angles from radians to degrees
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fromfile)</tt>	 construct an array from data in a text or binary file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(masked_all)</tt>	 empty masked array with all elements masked
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(min)</tt>	 return the minimum along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getprofile)</tt>	 return the profiling function set with sys
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(weibullvariate)</tt>	 weibull distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(tensorsolve)</tt>	 solve the tensor equation a x = b for x
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(captureWarnings)</tt>	 if capture is true redirect all warnings to the logging package
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...B.u.f.f.e.r.i.n.g.F.o.r.m.a.t.t.e.r</a>(formatHeader)</tt>	 return the header string for the specified records
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(maketrans)</tt>	 return a translation table a string of 256 bytes long suitable for use in string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(less)</tt>	 return the truth value of x1 < x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(RawArray)</tt>	 returns a shared array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(amax)</tt>	 return the maximum of an array or maximum along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legint)</tt>	 integrate a legendre series
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getargspec)</tt>	 get the names and default values of a function 's arguments
<tt style='background-color:#E8E8E8;'> <a href=''>h.t.t.p.l.i.b</a>(urlsplit)</tt>	 parse a url into 5 components
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(endswith)</tt>	 return true if s ends with the specified suffix false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(dumps)</tt>	 return a string corresponding to the pickling of a masked array
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(lstat)</tt>	 like stat path, but do not follow symbolic links
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sinh)</tt>	 hyperbolic sine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(newbuffer)</tt>	 return a new uninitialized buffer object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(maximum_fill_value)</tt>	 return the minimum value that can be represented by the dtype of an object
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(formatyear)</tt>	 returns a year 's calendar as a multi-line string
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(iterkeys)</tt>	 an iterator over the keys in od
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(JoinableQueue)</tt>	 returns a queue object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(save)</tt>	 save an array to a binary file in numpy
<tt style='background-color:#E8E8E8;'> <a href=''>p.p.r.i.n.t</a>(saferepr)</tt>	 version of repr which can handle recursive data structures
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(has_key)</tt>	 true if d has a key k else false
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getsourcelines)</tt>	 return a list of source lines and starting line number for an object
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.i.l.c.a.p</a>(getcaps)</tt>	 return a dictionary containing the mailcap database
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.i.l.c.a.p</a>(parsefield)</tt>	 separate one key-value pair in a mailcap entry
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s...I.n.c.r.e.m.e.n.t.a.l.D.e.c.o.d.e.r</a>(reset)</tt>	 resets the decoder to the initial state
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execvpe)</tt>	 execute the executable file which is searched for along $path with argument list args and environment env , replacing the current process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(conjugate)</tt>	 return the complex conjugate element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(setattr)</tt>	 set a named attribute on an object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(extract)</tt>	 return the elements of an array that satisfy some condition
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...B.a.s.e.S.e.t</a>(issuperset)</tt>	 report whether this set contains another set
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getinnerframes)</tt>	 get a list of records for a traceback 's frame and all lower frames
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legvander2d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeint)</tt>	 integrate a hermite_e series
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(mask_rowcols)</tt>	 mask rows and/or columns of a 2d array that contain masked values
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(isspace)</tt>	 return true if all characters in s are whitespace and there is at least one character in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(dump)</tt>	 return a formatted dump of the tree in *node*
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(popen)</tt>	 open a pipe to/from a command returning a file object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(count)</tt>	 returns an array with the number of non-overlapping occurrences of substring sub in the range [start end]
<tt style='background-color:#E8E8E8;'> <a href=''>p.r.o.p.e.r.t.y</a>(setter)</tt>	 descriptor to change the setter on a property
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(time)</tt>	 return the current time in seconds since the epoch
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(correlate)</tt>	 cross-correlation of two 1-dimensional sequences
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(randint)</tt>	 return random integers from low inclusive to high exclusive
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(dup)</tt>	 return a duplicate of a file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(split_header_words)</tt>	 parse header values into a list of lists containing keyvalue pairs
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(namedtuple)</tt>	 returns a new subclass of tuple with named fields
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(power)</tt>	 raises a to the power of b to modulo if given
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(ifftn)</tt>	 compute the n-dimensional inverse discrete fourier transform
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_rgb)</tt>	 sgi image library
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(fill)</tt>	 call before drawing a shape to fill when done
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(sample)</tt>	 return random floats in the half-open interval [0
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tan)</tt>	 compute tangent element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(pop)</tt>	 remove and return an arbitrary set element
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebsub)</tt>	 subtract one chebyshev series from another
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(next_toward)</tt>	 returns the number closest to self in the direction towards other
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.y.p.e.s</a>(warnpy3k)</tt>	 issue a deprecation warning for python 3
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(fromtimestamp)</tt>	 tz 's local time from posix timestamp
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(center)</tt>	 return a copy of a with its elements centered in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(has_samewindow)</tt>	 check if windows match
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(popen2)</tt>	 execute the shell command cmd in a sub-process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeval)</tt>	 evaluate an hermitee series at points x
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(sleep)</tt>	 delay execution for a given number of seconds
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(log2)</tt>	 base-2 logarithm of x
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(log_to_stderr)</tt>	 turn on logging and add a handler which prints to stderr
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(max)</tt>	 return the maximum along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>r.u.n.p.y</a>(run_module)</tt>	 execute a module 's code without importing it returns the resulting top level namespace dictionary
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(RLock)</tt>	 returns a recursive lock object
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t</a>(inet_ntop)</tt>	 ip address convert a packed ip address of the given family to string format
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(indentsize)</tt>	 return the indent size in spaces at the start of a line of text
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getlineno)</tt>	 get the line number from a frame object allowing for optimization
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(interrupt_main)</tt>	 raise a keyboardinterrupt in the main thread
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagmulx)</tt>	 multiply a laguerre series by x
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e</a>(interact)</tt>	 closely emulate the interactive python interpreter
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(excepthook)</tt>	 handle an exception by displaying it with a traceback on sys
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nper)</tt>	 compute the number of periodic payments
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(swapcase)</tt>	 return a copy of the string s with upper case characters converted to lowercase and vice versa
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setpgid)</tt>	 call the system call setpgid
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(compare_total_mag)</tt>	 compares two operands using their abstract representation ignoring sign
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fdopen)</tt>	 return an open file object connected to a file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(imul)</tt>	 same as a *= b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(rate)</tt>	 compute the rate of interest per period
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.i.l.t.e.r.e.r</a>(filter)</tt>	 determine if a record is loggable by consulting all the filters
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(dstack)</tt>	 stack arrays in sequence depth wise along third axis
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(Etiny)</tt>	 returns etiny = emin - prec + 1
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(getproxies_environment)</tt>	 scan the environment for variables named <scheme>_proxy
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(column_stack)</tt>	 stack 1-d arrays as columns into a 2-d array
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.z.i.n.f.o</a>(utcoffset)</tt>	 utc negative for west of utc
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(backslashreplace_errors)</tt>	 implements the backslashreplace error handling which replaces an unencodable character with a backslashed escape sequence
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(namedtuple)</tt>	 returns a new subclass of tuple with named fields
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.o.z.e.n.s.e.t</a>(union)</tt>	 return the union of sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(isoweekday)</tt>	 return the day of the week represented by the date
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(get_state)</tt>	 return a tuple representing the internal state of the generator
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.i.l.e.H.a.n.d.l.e.r</a>(emit)</tt>	 emit a record
<tt style='background-color:#E8E8E8;'> <a href=''>_._.m.a.i.n._._</a>(bf)</tt>	 issue a warning or maybe ignore it or raise an exception
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setregid)</tt>	 set the current process 's real and effective group ids
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(rayleigh)</tt>	 draw samples from a rayleigh distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(ontimer)</tt>	 install a timer which calls fun after t milliseconds
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(copy_negate)</tt>	 returns a copy with the sign inverted
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ogrid)</tt>	 nd_grid instance which returns an open multi-dimensional “meshgrid”
<tt style='background-color:#E8E8E8;'> <a href=''>g.r.p</a>(getgrgid)</tt>	 return the group database entry for the given numeric group id
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.i.m.e.d.e.l.t.a</a>(total_seconds)</tt>	 total seconds in the duration
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(uniform)</tt>	 get a random number in the range [a b or [a b] depending on rounding
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(fileno)</tt>	 return the file number of the current file
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(imod)</tt>	 same as a %= b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(argpartition)</tt>	 perform an indirect partition along the given axis using the algorithm specified by the kind keyword
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(reduce)</tt>	 apply a function of two arguments cumulatively to the items of a sequence from left to right so as to reduce the sequence to a single value
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(resize)</tt>	 resize the memory buffer of a ctypes instance
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(alignment)</tt>	 return the alignment requirements of a c instance
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(addshape)</tt>	 adds a turtle shape to turtlescreen 's shapelist
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(strptime)</tt>	 new datetime parsed from a string like time
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(forward)</tt>	 move the turtle forward by the specified distance
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(mime_encode)</tt>	 code a single line as quoted-printable
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(getctime)</tt>	 return the metadata change time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(makefifo)</tt>	 make a fifo called targetpath
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(fd)</tt>	 move the turtle forward by the specified distance
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.I.n.f.o</a>(FileHeader)</tt>	 return the per-file header as a string
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.o.o.l.s</a>(enumsubst)</tt>	 substitute a single enum keyword argument if it occurs
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.I</a>(isatty)</tt>	 always returns 0
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(fromfile)</tt>	 read n objects from the file object f and append them to the end of the array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(clip)</tt>	 clip limit the values in an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(dtype)</tt>	 create a data type object
<tt style='background-color:#E8E8E8;'> <a href=''>w.e.a.k.r.e.f</a>(proxy)</tt>	 create a proxy object that weakly
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.s.l</a>(RAND_status)</tt>	 returns 1 if the openssl prng has been seeded with enough data and 0 if not
<tt style='background-color:#E8E8E8;'> <a href=''>t.y.p.e</a>(mro)</tt>	 list return a type 's method resolution order
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(mirrored)</tt>	 returns the mirrored property assigned to the unicode character unichr as integer
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(writer)</tt>	 csv_writer = csv
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(callable)</tt>	 return whether the object is callable i
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...C.o.u.n.t.e.r</a>(copy)</tt>	 return a shallow copy
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(visiblename)</tt>	 decide whether to show documentation on a variable
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(extend)</tt>	 extend the right side of the deque with elements from the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...D.a.t.a.S.o.u.r.c.e</a>(abspath)</tt>	 return absolute path of file in the datasource directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(leggrid3d)</tt>	 evaluate a 3-d legendre series on the cartesian product of x y and z
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(compressed)</tt>	 return all the non-masked data as a 1-d array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(logseries)</tt>	 draw samples from a logarithmic series distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(isinf)</tt>	 check if float x is infinite positive or negative
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g...d.e.c.o.r.a.t.o.r.s</a>(slow)</tt>	 label a test as ‘slow’
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_almost_equal)</tt>	 raises an assertionerror if two items are not equal up to desired precision
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(lognormvariate)</tt>	 log normal distribution
<tt style='background-color:#E8E8E8;'> <a href=''>a.t.e.x.i.t</a>(register)</tt>	 register a function to be executed upon normal program termination func
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(itemset)</tt>	 insert scalar into an array scalar is cast to array’s dtype if possible
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(iand)</tt>	 same as a &= b
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s</a>(call)</tt>	 run command with arguments
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.c.l.b.r</a>(readmodule)</tt>	 backwards compatible interface
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(pu)</tt>	 pull the pen up -- no drawing when moving
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(samefile)</tt>	 test whether two pathnames reference the same actual file
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.s</a>(dis)</tt>	 disassemble classes methods functions or code
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(a2b_hqx)</tt>	 bin done. decode .hqx coding
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(busdaycalendar)</tt>	 a business day calendar object that efficiently stores information defining valid days for the busday family of functions
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(place)</tt>	 change elements of an array based on conditional and input values
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(seek)</tt>	 move to new file position
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(thishost)</tt>	 return the ip address of the current host
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(enumerate)</tt>	 return a list of all thread objects currently alive
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatweekday)</tt>	 return a weekday name as a table header
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(acos)</tt>	 return the arc cosine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(make_mask)</tt>	 create a boolean mask from an array
<tt style='background-color:#E8E8E8;'> <a href=''>f.u.n.c.t.o.o.l.s</a>(cmp_to_key)</tt>	 convert a cmp= function into a key= function
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(times)</tt>	 return a tuple of floating point numbers indicating process times
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(unquote)</tt>	 remove quotes from a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(masked_values)</tt>	 mask using floating point equality
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d...l.o.c.k</a>(acquire)</tt>	 lock the lock
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(split)</tt>	 return a list of the words in the string s using sep as the delimiter string
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(read_docstrings)</tt>	 read in docstrings from lang-specific docstring dictionary
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(atan)</tt>	 return the arc tangent of x
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(degrees)</tt>	 set angle measurement units to degrees
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(is_tarfile)</tt>	 return true if name points to a tar archive that we are able to handle else return false
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(ranf)</tt>	 return random floats in the half-open interval [0
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(getfield)</tt>	 returns a field of the given array as a certain type
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(add)</tt>	 same as a + b
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(ceil)</tt>	 return the ceiling of x as a float
<tt style='background-color:#E8E8E8;'> <a href=''>r.u.n.p.y</a>(get_loader)</tt>	 get a pep 302 loader object for module_or_name
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(itervalues)</tt>	 an iterator over the values in od
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(join)</tt>	 concatenates any number of bytearray objects with b in between each pair
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(ctermid)</tt>	 return the name of the controlling terminal for this process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(cov)</tt>	 estimate a covariance matrix given data and weights
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(unsetenv)</tt>	 delete an environment variable
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(betavariate)</tt>	 beta distribution
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(isinf)</tt>	 checks if the real or imaginary part of z is infinite
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(list)</tt>	 print a table of contents to sys
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(down)</tt>	 pull the pen down -- drawing when moving
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(locals)</tt>	 update and return a dictionary containing the current scope 's local variables
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(astype)</tt>	 copy of the array cast to a specified type
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(isdisjoint)</tt>	 return true if two sets have a null intersection
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(acosh)</tt>	 return the hyperbolic arc cosine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(sizeof)</tt>	 return the size in bytes of a c instance
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(replace)</tt>	 return a copy of s with all occurrences of substring old replaced by new
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(div)</tt>	 same as a / b when __future__.division is not in effect
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Queue)</tt>	 returns a queue object
<tt style='background-color:#E8E8E8;'> <a href=''>f.t.p.l.i.b</a>(parse229)</tt>	 parse the '229' response for a epsv request
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(pop)</tt>	 remove and return the rightmost element
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(det)</tt>	 compute the determinant of an array
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(setquit)</tt>	 define new builtins quit and exit
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(standard_gamma)</tt>	 draw samples from a standard gamma distribution
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.s</a>(distb)</tt>	 disassemble a traceback
<tt style='background-color:#E8E8E8;'> <a href=''>e.m.a.i.l</a>(message_from_file)</tt>	 read a file and parse its contents into a message object model
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(asinh)</tt>	 return the hyperbolic arc sine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(anom)</tt>	 compute the anomalies deviations from the arithmetic mean along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(allocate)</tt>	 create a new lock object
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(get_debug)</tt>	 get the garbage collection debugging flags
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isneginf)</tt>	 test element-wise for negative infinity return result as bool array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermweight)</tt>	 weight function of the hermite polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fchmod)</tt>	 change the access permissions of the file given by file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.i.l.t.e.r.e.r</a>(removeFilter)</tt>	 remove the specified filter from this handler
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagsub)</tt>	 subtract one laguerre series from another
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getfilesystemencoding)</tt>	 return the encoding used to convert unicode filenames in operating system filenames
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(fftfreq)</tt>	 return the discrete fourier transform sample frequencies
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s...P.o.p.e.n</a>(wait)</tt>	 wait for child process to terminate
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.r.e</a>(round_)</tt>	 round an array to the given number of decimals
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(find)</tt>	 for each element return the lowest index in the string where substring sub is found
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.e.m.m.a.p</a>(flush)</tt>	 write any changes in the array to the file on disk
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(reshape)</tt>	 gives a new shape to an array without changing its data
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e</a>(whichmodule)</tt>	 figure out the module in which a function occurs
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(getLogger)</tt>	 return a logger with the specified name creating it if necessary
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.r.m.i.o.s</a>(tcdrain)</tt>	 wait until all output written to file descriptor fd has been transmitted
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(execusercustomize)</tt>	 run custom user specific code if available
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(items)</tt>	 list of key value pairs in od
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(istitle)</tt>	 returns true for each element if the element is a titlecased string and there is at least one character false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanmedian)</tt>	 compute the median along the specified axis while ignoring nans
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(chisquare)</tt>	 draw samples from a chi-square distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g...T.e.s.t.e.r</a>(bench)</tt>	 run benchmarks for module using nose
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_zero)</tt>	 return true if self is a zero
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(setfield)</tt>	 put a value into a specified place in a field defined by a data-type
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(setx)</tt>	 set the turtle 's first coordinate to x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermadd)</tt>	 add one hermite series to another
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(tolist)</tt>	 return the data portion of the masked array as a hierarchical python list
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(load_module)</tt>	 load a module given information returned by find_module
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(classify_class_attrs)</tt>	 return list of attribute-descriptor tuples
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ones_like)</tt>	 return an array of ones with the same shape and type as a given array
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r</a>(monthrange)</tt>	 return weekday 0-6 ~ mon-sun and number of days 28-31 for year month
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagvander3d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fromfunction)</tt>	 construct an array by executing a function over each coordinate
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(coerce)</tt>	 return a tuple consisting of the two numeric arguments converted to a common type using the same rules as used by arithmetic operations
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(has_samecoef)</tt>	 check if coefficients match
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(copymode)</tt>	 copy mode bits from src to dst
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(sub)</tt>	 same as a - b
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(floor)</tt>	 return the floor of x as a float
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(atanh)</tt>	 return the hyperbolic arc tangent of x
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(compilest)</tt>	 compiles an st object into a code object
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(BoundedSemaphore)</tt>	 a factory function that returns a new bounded semaphore
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(savez)</tt>	 save several arrays into a single file in uncompressed
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(index)</tt>	 return index of first occurrence of x in the array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(rollaxis)</tt>	 roll the specified axis backwards until it lies in a given position
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_endidx)</tt>	 int get the ending index of the readline tab-completion scope
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(HermiteE)</tt>	 an hermitee series class
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(rfind)</tt>	 return the highest index in b where subsection sub is found such that sub is contained within b[startend]
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermecompanion)</tt>	 return the scaled companion matrix of c
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(allclose)</tt>	 returns true if two arrays are element-wise equal within a tolerance
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(setprofile)</tt>	 set the profiling function
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(link)</tt>	 create a hard link to a file
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(right)</tt>	 turn turtle right by angle units
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d...l.o.c.k</a>(locked_lock)</tt>	 return whether the lock is in the locked state
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(pow)</tt>	 same as a ** b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(argmin)</tt>	 returns the indices of the minimum values along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e</a>(modname)</tt>	 return a plausible module name for the patch
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(islower)</tt>	 return true if all cased characters in s are lowercase and there is at least one cased character in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(getA)</tt>	 return self as an ndarray object
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(tan)</tt>	 return the tangent of x
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.o.z.e.n.s.e.t</a>(intersection)</tt>	 return the intersection of two or more sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(setitimer)</tt>	 sets given itimer to fire after value seconds and after that every interval seconds
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(lexists)</tt>	 test whether a path exists
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(stack)</tt>	 join a sequence of arrays along a new axis
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(byref)</tt>	 return a pointer lookalike to a c instance only usable as function argument
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(getpeercert)</tt>	 returns a formatted version of the data in the certificate provided by the other end of the ssl channel
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(architecture)</tt>	 queries the given executable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(logical_not)</tt>	 compute the truth value of not x element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g...d.e.c.o.r.a.t.o.r.s</a>(skipif)</tt>	 make function raise skiptest exception if a given condition is true
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(b2a_hex)</tt>	 hexadecimal representation of binary data
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(inet_pton)</tt>	 ip address string convert an ip address from string format to a packed string suitable for use with low-level network functions
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(MachAr)</tt>	 diagnosing machine parameters
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(noncentral_f)</tt>	 draw samples from the noncentral f distribution
<tt style='background-color:#E8E8E8;'> <a href=''>u.u.i.d</a>(uuid3)</tt>	 generate a uuid from the md5 hash of a namespace uuid and a name
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(rlecode_hqx)</tt>	 binhex rle-code binary data
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(title)</tt>	 return element-wise title cased version of string or unicode
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.a.p.l.i.b</a>(Internaldate2tuple)</tt>	 parse an imap4 internaldate string
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(getsitepackages)</tt>	 returns a list containing all global site-packages directories and possibly site-python
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(index)</tt>	 return first index of value
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(isnan)</tt>	 check if float x is not a number nan
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(sin)</tt>	 return the sine of x measured in radians
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(url2pathname)</tt>	 os-specific conversion from a relative url of the file scheme to a file system path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(rfftn)</tt>	 compute the n-dimensional discrete fourier transform for real input
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(issubsctype)</tt>	 determine if the first argument is a subclass of the second argument
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(get_archive_formats)</tt>	 returns a list of supported formats for archiving and unarchiving
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(cast)</tt>	 convert series to series of this class
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(count)</tt>	 count the non-masked elements of the array along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(fill)</tt>	 fill the array with a scalar value
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(RAND_add)</tt>	 rand_add string entropy mix string into the openssl prng state
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(count)</tt>	 return the number of non-overlapping occurrences of subsection sub in bytes b[start:end]
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(apply)</tt>	 call a callable object with positional arguments taken from the tuple args and keyword arguments taken from the optional dictionary kwargs
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebline)</tt>	 chebyshev series whose graph is a straight line
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(getfqdn)</tt>	 get fully qualified domain name from name
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(close)</tt>	 close the tarfile
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(set_completer_delims)</tt>	 set the readline word delimiters for tab-completion
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(poisson)</tt>	 draw samples from a poisson distribution
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(extract)</tt>	 extract a member from the archive to the current working directory using its full name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(standard_cauchy)</tt>	 draw samples from a standard cauchy distribution with mode = 0
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(subtract)</tt>	 subtract arguments element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(trunc)</tt>	 integral truncates x to the nearest integral toward 0
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(Legendre)</tt>	 a legendre series class
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(union1d)</tt>	 find the union of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(left)</tt>	 turn turtle left by angle units
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(tolist)</tt>	 return the array as a possibly nested list
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(greater_equal)</tt>	 return the truth value of x1 >= x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(b64decode)</tt>	 decode a base64 encoded string
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(ignore_errors)</tt>	 implements the ignore error handling which ignores malformed data and continues
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(ge)</tt>	 same as a>=b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(common_fill_value)</tt>	 return the common filling value of two masked arrays if any
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...R.o.w</a>(keys)</tt>	 returns the keys of the row
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(union_update)</tt>	 update a set with the union of itself and another
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(user_domain_match)</tt>	 for blocking/accepting domains
<tt style='background-color:#E8E8E8;'> <a href=''>_.m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(address_of_buffer)</tt>	 return address of obj assuming obj supports buffer inteface
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(name)</tt>	 returns the name assigned to the unicode character unichr as a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(translate)</tt>	 for each element in a return a copy of the string where all characters occurring in the optional argument deletechars are removed and the remaining characters have been mapped through the given translation table
<tt style='background-color:#E8E8E8;'> <a href=''>c.P.i.c.k.l.e</a>(Pickler)</tt>	 create a pickler
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(is_masked)</tt>	 determine whether input has masked values
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(ttypager)</tt>	 page through text on a text terminal
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(register)</tt>	 register a codec search function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(unpackbits)</tt>	 unpacks elements of a uint8 array into a binary-valued output array
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...W.i.c.h.m.a.n.n.H.i.l.l</a>(seed)</tt>	 initialize internal state from hashable object
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(rpartition)</tt>	 searches for the separator sep in b starting at the end of b and returns the part before it the separator itself and the part after it
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e</a>(crc32)</tt>	 compute a crc-32 checksum of string
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(countOf)</tt>	 return the number of times b occurs in a
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(decodestring)</tt>	 decode a string
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(bk)</tt>	 move the turtle backward by distance
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(capitalize)</tt>	 return a copy of the string s with only its first character capitalized
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_pbm)</tt>	 pbm portable bitmap
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(ne)</tt>	 same as a != b
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(vars)</tt>	 without arguments equivalent to locals
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getdefaultencoding)</tt>	 return the current default string encoding used by the unicode implementation
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(write)</tt>	 write a string to the file
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(strip)</tt>	 return a copy of the string s with leading and trailing whitespace removed
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t</a>(inet_ntoa)</tt>	 convert an ip address from 32-bit packed binary format to string format
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(permutation)</tt>	 randomly permute a sequence or return a permuted range
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(logical_or)</tt>	 applies an or operation between self and other 's digits
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermegrid3d)</tt>	 evaluate a 3-d hermitee series on the cartesian product of x y and z
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(lstrip)</tt>	 return a copy of the string s with leading whitespace removed
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(choice)</tt>	 generates a random sample from a given 1-d array
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(hasattr)</tt>	 return whether the object has an attribute with the given name
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(aliasmbcs)</tt>	 on windows some default encodings are not provided by python while they are always available as mbcs in each locale
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(getmethparlist)</tt>	 get strings describing the arguments for the given object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermfromroots)</tt>	 generate a hermite series with given roots
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(get_importer)</tt>	 retrieve a pep 302 importer for the given path item the returned importer is cached in sys
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(monthdays2calendar)</tt>	 return a matrix representing a month 's calendar
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.b.n.a.n.n.y</a>(check)</tt>	 if file_or_dir is a directory and not a symbolic link then recursively descend the directory tree named by file_or_dir checking all
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(wait3)</tt>	 wait for completion of a child process
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(fma)</tt>	 returns a multiplied by b plus c
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(bgcolor)</tt>	 set or return backgroundcolor of the turtlescreen
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nancumsum)</tt>	 return the cumulative sum of array elements over a given axis treating not a numbers nans as zero
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(title)</tt>	 set title of turtle-window
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(log1p)</tt>	 return the natural logarithm of 1+x base e
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyval2d)</tt>	 evaluate a 2-d polynomial at points x y
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(intersection_update)</tt>	 update a set with the intersection of itself and another
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(uname)</tt>	 return a tuple identifying the current operating system
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(classname)</tt>	 get a class name and qualify it with a module name if necessary
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(getgrnam)</tt>	 return the group database entry for the given group name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(getmask)</tt>	 return the mask of a masked array or nomask
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(fileno)</tt>	 this is needed for lower-level file interfaces such os
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(write_docstringdict)</tt>	 create and write docstring-dictionary to file
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(rindex)</tt>	 like s.rfind but raise valueerror when the substring is not found
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(stripid)</tt>	 remove the hexadecimal id from a python object representation
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b</a>(writePlistToString)</tt>	 return rootobject as a plist-formatted string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(apply_over_axes)</tt>	 apply a function repeatedly over multiple axes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.b.e.r.s</a>(abstractmethod)</tt>	 a decorator indicating abstract methods
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(qr)</tt>	 compute the qr factorization of a matrix
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.n.a.u.d.i.o</a>(gethdr)</tt>	 read a sound header from an open file
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(log)</tt>	 if the base not specified returns the natural logarithm base e of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(source)</tt>	 print or write to a file the source code for a numpy object
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(up)</tt>	 pull the pen up -- no drawing when moving
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(istitle)</tt>	 return true if b is a titlecased string and there is at least one character in b i
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(squeeze)</tt>	 remove single-dimensional entries from the shape of an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(mgrid)</tt>	 nd_grid instance which returns a dense multi-dimensional “meshgrid”
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(gmtime)</tt>	 convert seconds since the epoch to a time tuple expressing utc a
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(copysign)</tt>	 return x with the sign of y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ravel_multi_index)</tt>	 converts a tuple of index arrays into an array of flat indices applying boundary modes to the multi-index
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(normal)</tt>	 draw random samples from a normal gaussian distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.m.p.f.i.l.e</a>(mkstemp)</tt>	 user-callable function to create and return a unique temporary file
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e.i.t</a>(repeat)</tt>	 convenience function to create timer object and call repeat method
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(set_startup_hook)</tt>	 set or remove the startup_hook function
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(activeCount)</tt>	 return the number of thread objects currently alive
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(create_aggregate)</tt>	 creates a new aggregate
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(critical)</tt>	 log a message with severity critical on the root logger
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(simplegeneric)</tt>	 make a trivial single-dispatch generic function
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(turtlesize)</tt>	 set/return turtle 's stretchfactors/outline
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(trapz)</tt>	 integrate along the given axis using the composite trapezoidal rule
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(ljust)</tt>	 return b left justified in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(roll)</tt>	 roll array elements along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(xreadlines)</tt>	 for backward compatibility
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(normpath)</tt>	 normalize path eliminating double slashes etc
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_path_names)</tt>	 returns a tuple containing the paths names
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(issctype)</tt>	 determines whether the given object represents a scalar data-type
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(rpartition)</tt>	 partition split each element around the right-most separator
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3</a>(connect)</tt>	 opens a connection to the sqlite database file *database*
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...B.a.s.e.S.e.t</a>(difference)</tt>	 return the difference of two sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.t.t.e.x.t</a>(c2py)</tt>	 gets a c expression as used in po files for plural forms and returns a python lambda function that implements an equivalent expression
<tt style='background-color:#E8E8E8;'> <a href=''>w.e.a.k.r.e.f</a>(getweakrefcount)</tt>	 return the number of weak references
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(to_eng_string)</tt>	 converts a number to a string using scientific notation
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(fsum)</tt>	 return an accurate floating point sum of values in the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermediv)</tt>	 divide one hermite series by another
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(atof)</tt>	 parses a string as a float according to the locale settings
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(make_encoding_map)</tt>	 creates an encoding map from a decoding map
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...D.a.t.a.S.o.u.r.c.e</a>(exists)</tt>	 test if path exists
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(basis)</tt>	 series basis polynomial of degree deg
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(ismodule)</tt>	 return true if the object is a module
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.n.e.r.i.c.p.a.t.h</a>(getctime)</tt>	 return the metadata change time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...u.f.u.n.c</a>(reduceat)</tt>	 performs a local reduce with specified slices over a single axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(lookfor)</tt>	 do a keyword search on docstrings
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.f.i.l.e</a>(fileopen)</tt>	 public routine to get a posixfile object from a python file object
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(RAND_egd)</tt>	 queries the entropy gather daemon egd on the socket named by path
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(getincrementaldecoder)</tt>	 lookup up the codec for the given encoding and return its incrementaldecoder class or factory function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(laplace)</tt>	 draw samples from the laplace or double exponential distribution with specified location or mean and scale decay
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(geterr)</tt>	 get the current way of handling floating-point errors
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(setworldcoordinates)</tt>	 set up a user defined coordinate-system
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(poly2cheb)</tt>	 convert a polynomial to a chebyshev series
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.a.p.l.i.b</a>(Int2AP)</tt>	 convert integer to a-p string representation
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e</a>(fullmodname)</tt>	 return a plausible module name for the path
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(system)</tt>	 returns the system/os name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(lstrip)</tt>	 for each element in a return a copy with the leading characters removed
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(fmod)</tt>	 return fmod x y, according to platform c
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(RAND_status)</tt>	 returns 1 if the openssl prng has been seeded with enough data and 0 if not
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getppid)</tt>	 return the parent 's process id
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(compare_total)</tt>	 compares two operands using their abstract representation
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(chflags)</tt>	 set file flags
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(testsource)</tt>	 extract the test sources from a doctest docstring as a script
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.i.m.p.o.r.t...z.i.p.i.m.p.o.r.t.e.r</a>(get_data)</tt>	 return the data associated with pathname
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(triu_indices_from)</tt>	 return the indices for the upper-triangle of arr
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(parse_qs)</tt>	 parse a query given as a string argument
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(find)</tt>	 return the lowest index in s where substring sub is found such that sub is contained within s[start:end]
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(invert)</tt>	 same as ~ a
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(insert_text)</tt>	 insert text into the command line
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagweight)</tt>	 weight function of the laguerre polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(Screen)</tt>	 return the singleton screen object
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(libc_ver)</tt>	 tries to determine the libc version that the file executable
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.l.e.c.t...k.q.u.e.u.e</a>(fromfd)</tt>	 create a kqueue object from a given control fd
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(viewkeys)</tt>	 a set-like object providing a view on d 's keys
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(print_environ)</tt>	 dump the shell environment as html
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(cosh)</tt>	 hyperbolic cosine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(eigvals)</tt>	 compute the eigenvalues of a general matrix
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(concatenate)</tt>	 join a sequence of arrays along an existing axis
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(bidirectional)</tt>	 returns the bidirectional class assigned to the unicode character unichr as string
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(displayhook)</tt>	 print an object to sys
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(compile)</tt>	 compile a regular expression pattern returning a pattern object
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(tuple2st)</tt>	 creates an st object from a tree representation
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legdiv)</tt>	 divide one legendre series by another
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.t</a>(conjugate)</tt>	 returns self the complex conjugate of any int
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(stn)</tt>	 convert a python string to a null-terminated string buffer
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(tostring)</tt>	 construct python bytes containing the raw data bytes in the array
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(extend)</tt>	 extend list by appending elements from the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(common_type)</tt>	 return a scalar type which is common to the input arrays
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(center)</tt>	 return b centered in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(has_sametype)</tt>	 check if types match
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.r.s.h.a.l</a>(load)</tt>	 read one value from the open file and return it
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.o.p</a>(compile_command)</tt>	 compile a command and determine whether it is incomplete
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(extract_tb)</tt>	 return list of up to limit pre-processed entries from traceback
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polysub)</tt>	 difference subtraction of two polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.u.c.t</a>(pack_into)</tt>	 pack the values v1 v2
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(blackman)</tt>	 return the blackman window
<tt style='background-color:#E8E8E8;'> <a href=''>h.a.s.h.l.i.b</a>(sha224)</tt>	 returns a sha224 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(full_like)</tt>	 return a full array with the same shape and type as a given array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(irfftn)</tt>	 compute the inverse of the n-dimensional fft of real input
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_canonical)</tt>	 return true if the operand is canonical
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(machine)</tt>	 returns the machine type
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.n.e.r.i.c.p.a.t.h</a>(commonprefix)</tt>	 given a list of pathnames returns the longest common leading component
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(check_enableusersite)</tt>	 check if user site directory is safe for inclusion
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(seth)</tt>	 set the orientation of the turtle to to_angle
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(color)</tt>	 return or set the pencolor and fillcolor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(innerproduct)</tt>	 inner product of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.r.m.i.o.s</a>(tcgetattr)</tt>	 get the tty attributes for file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.l.e.c.t...k.q.u.e.u.e</a>(fileno)</tt>	 return the kqueue control file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(encode)</tt>	 calls str
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(mask_or)</tt>	 combine two masks with the logical_or operator
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebmul)</tt>	 multiply one chebyshev series by another
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(executescript)</tt>	 executes a multiple sql statements at once
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(settrace)</tt>	 set the global debug tracing function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(atleast_3d)</tt>	 view inputs as arrays with at least three dimensions
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...u.f.u.n.c</a>(reduce)</tt>	 reduces a‘s dimension by one by applying ufunc along one axis
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(normalize)</tt>	 normalize reduces an operand to its simplest form
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(get_docstring)</tt>	 return the docstring for the given node or none if no docstring can be found
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(leg2poly)</tt>	 convert a legendre series to a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(isdown)</tt>	 return true if pen is down false if it 's up
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(shift)</tt>	 returns a shifted copy of a b times
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(cos)</tt>	 return the cosine of x
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(onclick)</tt>	 bind fun to mouse-click event on this turtle on canvas
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(setLevel)</tt>	 set the logging level of this logger
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(rotate)</tt>	 returns a rotated copy of a b times
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(ismemberdescriptor)</tt>	 return true if the object is a member descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.i.m.p.o.r.t...z.i.p.i.m.p.o.r.t.e.r</a>(load_module)</tt>	 load the module specified by fullname
<tt style='background-color:#E8E8E8;'> <a href=''>g.l.o.b</a>(iglob)</tt>	 return an iterator which yields the paths matching a pathname pattern
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(asfarray)</tt>	 return an array converted to a float type
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(poisson)</tt>	 draw samples from a poisson distribution
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(quote)</tt>	 add quotes around a string
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isgetsetdescriptor)</tt>	 return true if the object is a getset descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e.t.o.o.l.s</a>(decode_long)</tt>	 decode a long from a two 's complement little-endian binary string
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(flush)</tt>	 ensure all logging output has been flushed
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_line_buffer)</tt>	 string return the current contents of the line buffer
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(clearstamps)</tt>	 delete all or first/last n of turtle 's stamps
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(pv)</tt>	 compute the present value
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(localhost)</tt>	 return the ip address of the magic hostname localhost
<tt style='background-color:#E8E8E8;'> <a href=''>c.r.y.p.t</a>(crypt)</tt>	 string word will usually be a user 's password
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(expandtabs)</tt>	 return a copy of s where all tab characters are expanded using spaces
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.I</a>(seek)</tt>	 set the current position
<tt style='background-color:#E8E8E8;'> <a href=''>w.e.b.b.r.o.w.s.e.r</a>(get)</tt>	 return a browser launcher instance appropriate for the environment
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(logical_and)</tt>	 applies an and operation between self and other 's digits
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(radians)</tt>	 set the angle measurement units to radians
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(reader)</tt>	 csv_reader = reader iterable [, dialect=excel] [optional keyword args] for row in csv_reader: process row the iterable argument can be any object that returns a line of input for each iteration such as a file object or a list
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagdiv)</tt>	 divide one laguerre series by another
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.t.p.a.s.s</a>(unix_getpass)</tt>	 prompt for a password with echo turned off
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(quantize)</tt>	 returns a value equal to a rounded, having the exponent of b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(has_samedomain)</tt>	 check if domains match
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.y.p.e.s</a>(nice)</tt>	 nice representation of an object
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.l.e.c.t</a>(select)</tt>	 wait until one or more file descriptors are ready for some kind of i/o
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(make_mask_descr)</tt>	 construct a dtype description list from a given dtype
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(calc_chksums)</tt>	 calculate the checksum for a member 's header by summing up all characters except for the chksum field which is treated as if it was filled with spaces
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(lt)</tt>	 turn turtle left by angle units
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(rshift)</tt>	 same as a >> b
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_config_h_filename)</tt>	 returns the path of pyconfig
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.l.i.b</a>(repmat)</tt>	 repeat a 0-d to 2-d array or matrix mxn times
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(count)</tt>	 return number of occurrences of x in the array
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(getturtle)</tt>	 return the turtleobject itself
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(b2a_uu)</tt>	 uuencode line of data
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getdlopenflags)</tt>	 return the current value of the flags that are used for dlopen calls
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setegid)</tt>	 set the current process 's effective group id
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legmul)</tt>	 multiply one legendre series by another
<tt style='background-color:#E8E8E8;'> <a href=''>f.t.p.l.i.b</a>(parse227)</tt>	 parse the '227' response for a pasv request
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.i.l.c.a.p</a>(findmatch)</tt>	 find a match for a mailcap entry
<tt style='background-color:#E8E8E8;'> <a href=''>f.u.n.c.t.o.o.l.s</a>(wraps)</tt>	 decorator factory to apply update_wrapper to a wrapper function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(tofile)</tt>	 write array to a file as text or binary default
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.t</a>(bit_length)</tt>	 number of bits necessary to represent self in binary
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(isfirstline)</tt>	 returns true the line just read is the first line of its file otherwise returns false
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b</a>(writePlistToResource)</tt>	 write rootobject as a plst resource to the resource fork of path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(percentile)</tt>	 compute the qth percentile of the data along the specified axis
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(begin_fill)</tt>	 called just before drawing a shape to be filled
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(set_wakeup_fd)</tt>	 sets the fd to be written to with '\0' when a signal comes in
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(center)</tt>	 return s centered in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(next_toward)</tt>	 returns the number closest to a in direction towards b
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(yeardatescalendar)</tt>	 return the data for the specified year ready for formatting
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(viewvalues)</tt>	 an object providing a view on d 's values
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(popen)</tt>	 portable popen interface
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(divide)</tt>	 decimal division in a specified context
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(nice)</tt>	 decrease the priority of process by inc and return the new priority
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(create_decimal_from_float)</tt>	 creates a new decimal instance from a float but rounding using self as the context
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(walktree)</tt>	 recursive helper function for getclasstree
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(update)</tt>	 update a set with the union of itself and others
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(yeardayscalendar)</tt>	 return the data for the specified year ready for formatting
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getpid)</tt>	 return the current process id
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(execsitecustomize)</tt>	 run custom site specific code if available
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isfunction)</tt>	 return true if the object is a user-defined function
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s...P.o.p.e.n</a>(terminate)</tt>	 terminate the process with sigterm
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(splitlines)</tt>	 return a list of the lines in s breaking at line boundaries
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.t.t.e.s.t</a>(skip)</tt>	 unconditionally skip a test
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(insert)</tt>	 insert object before index
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(sorted)</tt>	 > new sorted list
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(viewitems)</tt>	 a set-like object providing a view on d 's items
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebtrim)</tt>	 remove “small” “trailing” coefficients from a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_warns)</tt>	 fail unless the given callable throws the specified warning
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(seteuid)</tt>	 set the current process 's effective user id
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e.t.o.o.l.s</a>(genops)</tt>	 generate all the opcodes in a pickle
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(laggrid3d)</tt>	 evaluate a 3-d laguerre series on the cartesian product of x y and z
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getegid)</tt>	 return the current process 's effective group id
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(create_connection)</tt>	 connect to *address* and return the socket object
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(fma)</tt>	 fused multiply-add
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3</a>(enable_shared_cache)</tt>	 enable or disable shared cache mode for the calling thread
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebroots)</tt>	 compute the roots of a chebyshev series
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r</a>(isleap)</tt>	 return true for leap years false for non-leap years
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(idiv)</tt>	 same as a /= b when __future__.division is not in effect
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(to_integral_exact)</tt>	 rounds to an integer
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(killpg)</tt>	 kill a process group with a signal
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(stat_float_times)</tt>	 determine whether os
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(undo)</tt>	 undo repeatedly the last turtle action
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(unlink)</tt>	 remove a file same as remove path
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(urljoin)</tt>	 join a base url and a possibly relative url to form an absolute interpretation of the latter
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(printdir)</tt>	 print a table of contents for the zip file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(setfield)</tt>	 put a value into a specified place in a field defined by a data-type
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(replace)</tt>	 for each element in a return a copy of the string with all occurrences of substring old replaced by new
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(encode)</tt>	 encodes obj using the codec registered for encoding
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(rstrip)</tt>	 return a copy of the string s with trailing whitespace removed
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(copysign)</tt>	 change the sign of x1 to that of x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(close)</tt>	 tidy up any resources used by the handler
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(isalpha)</tt>	 return true if all characters in s are alphabetic and there is at least one character in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(number_class)</tt>	 returns an indication of the class of self
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i.t.b</a>(html)</tt>	 return a nice html document describing a given traceback
<tt style='background-color:#E8E8E8;'> <a href=''>f.p.f.o.r.m.a.t</a>(roundfrac)</tt>	 round or extend the fraction to size digs
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e.t.o.o.l.s</a>(dis)</tt>	 produce a symbolic disassembly of a pickle
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(rint)</tt>	 round elements of the array to the nearest integer
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(reload)</tt>	 reload the module
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(noncentral_f)</tt>	 draw samples from the noncentral f distribution
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(quantize)</tt>	 quantize self so its exponent is the same as that of exp
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(execute)</tt>	 executes a sql statement
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(truncate)</tt>	 truncate series to length size
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(isMappingType)</tt>	 return true if a has a mapping type false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(sinh)</tt>	 return the hyperbolic sine of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebint)</tt>	 integrate a chebyshev series
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(a2b_qp)</tt>	 decode a string of qp-encoded data
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e</a>(is_zipfile)</tt>	 quickly see if a file is a zip file by checking the magic number
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(nts)</tt>	 convert a null-terminated string field to a python string
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.o.z.e.n.s.e.t</a>(issubset)</tt>	 report whether another set contains this set
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(speed)</tt>	 return or set the turtle 's speed
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...B.u.f.f.e.r.i.n.g.F.o.r.m.a.t.t.e.r</a>(formatFooter)</tt>	 return the footer string for the specified records
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(exponential)</tt>	 draw samples from an exponential distribution
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(pow)</tt>	 return x**y x to the power of y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(noncentral_chisquare)</tt>	 draw samples from a noncentral chi-square distribution
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(makedev)</tt>	 composes a raw device number from the major and minor device numbers
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(getLoggerClass)</tt>	 return the class to be used when instantiating a logger
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(delete)</tt>	 return a new array with sub-arrays along an axis deleted
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(trunc)</tt>	 return the truncated value of the input element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(inner)</tt>	 inner product of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...L.a.b.e.l.e.d.S.c.a.l.e</a>(destroy)</tt>	 destroy this widget and possibly its associated variable
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(start_new_thread)</tt>	 start a new thread and return its identifier
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.o.r.m.a.t.t.e.r</a>(converter)</tt>	 convert seconds since the epoch to a time tuple expressing local time
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(b2a_qp)</tt>	 encode a string using quoted-printable encoding
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_normal)</tt>	 return true if self is a normal number
<tt style='background-color:#E8E8E8;'> <a href=''>f.n.m.a.t.c.h</a>(translate)</tt>	 translate a shell pattern to a regular expression
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(clone)</tt>	 create and return a clone of the no argument
<tt style='background-color:#E8E8E8;'> <a href=''>c.u.r.s.e.s</a>(wrapper)</tt>	 wrapper function that initializes curses and calls another function restoring normal keyboard/screen behavior on error
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(set_string_function)</tt>	 set a python function to be used when pretty printing arrays
<tt style='background-color:#E8E8E8;'> <a href=''>p.p.r.i.n.t</a>(pformat)</tt>	 format a python object into a pretty-printed representation
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(deepcopy)</tt>	 deep copy operation on arbitrary python objects
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(rindex)</tt>	 like rfind but raises valueerror when the substring is not found
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(set_authorizer)</tt>	 sets authorizer callback
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(anom)</tt>	 compute the anomalies deviations from the arithmetic mean along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(truncate)</tt>	 truncate series to length size
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanprod)</tt>	 return the product of array elements over a given axis treating not a numbers nans as ones
<tt style='background-color:#E8E8E8;'> <a href=''>p.p.r.i.n.t</a>(pprint)</tt>	 pretty-print a python object to a stream
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(asinh)</tt>	 return the hyperbolic arc sine of x
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(ctime)</tt>	 return ctime style string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebval3d)</tt>	 evaluate a 3-d chebyshev series at points x y z
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(flatten)</tt>	 return a copy of the array collapsed into one dimension
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g...T.e.s.t.e.r</a>(test)</tt>	 run tests for module using nose
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeval2d)</tt>	 evaluate a 2-d hermitee series at points x y
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.m.p.f.i.l.e</a>(NamedTemporaryFile)</tt>	 create and return a temporary file
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(tracer)</tt>	 turns turtle animation on/off and set delay for update drawings
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legval2d)</tt>	 evaluate a 2-d legendre series at points x y
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(partition)</tt>	 searches for the separator sep in b and returns the part before it the separator itself and the part after it
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(expandvars)</tt>	 dummy to retain interface-compatibility with other operating systems
<tt style='background-color:#E8E8E8;'> <a href=''>e.m.a.i.l</a>(message_from_string)</tt>	 parse a string into a message object model
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getargvalues)</tt>	 get information about arguments passed into a particular frame
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebmulx)</tt>	 multiply a chebyshev series by x
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(str)</tt>	 convert float to integer taking the locale into account
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(http2time)</tt>	 returns time in seconds since epoch of time represented by a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(savez_compressed)</tt>	 save several arrays into a single file in compressed
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(heappushpop)</tt>	 push item on the heap then pop and return the smallest item
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(intersect1d)</tt>	 find the intersection of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.a.c.t.i.o.n.s...F.r.a.c.t.i.o.n</a>(limit_denominator)</tt>	 closest fraction to self with denominator at most max_denominator
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getmoduleinfo)</tt>	 get the module name suffix mode and module type for a given file
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_signed)</tt>	 return true if the operand is negative
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r</a>(format)</tt>	 prints multi-column formatting for year calendars
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(lgamma)</tt>	 natural logarithm of absolute value of gamma function at x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(pad)</tt>	 pads an array
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(globals)</tt>	 return the dictionary containing the current scope 's global variables
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...M.a.n.a.g.e.r</a>(getLogger)</tt>	 get a logger with the specified name channel name, creating it if it doesn't yet exist
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(truncate)</tt>	 truncate series to length size
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(walk_packages)</tt>	 yields module_loader name ispkg for all modules recursively on path or if path is none all accessible modules
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(fromtimestamp)</tt>	 posix timestamp like time
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(tolist)</tt>	 return the array as a possibly nested list
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(sinh)</tt>	 return the hyperbolic sine of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(format_parser)</tt>	 class to convert formats names titles description to a dtype
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(bltn_open)</tt>	 open a file using the file type returns a file object
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(acquire)</tt>	 acquire the i/o thread lock
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(exception)</tt>	 log a message with severity error on the root logger with exception information
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(ids)</tt>	 return the addresses of the data and mask areas
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...d.t.y.p.e</a>(newbyteorder)</tt>	 return a new dtype with a different byte order
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(masked_object)</tt>	 mask the array x where the data are exactly equal to value
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(rstrip)</tt>	 return a copy of the string s with trailing whitespace removed
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(mkfifo)</tt>	 create a fifo a posix named pipe
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(indices)</tt>	 return an array representing the indices of a grid
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(reverse)</tt>	 reverse *in place*
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(std)</tt>	 compute the standard deviation along the specified axis
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(python_implementation)</tt>	 returns a string identifying the python implementation
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(astype)</tt>	 returns a copy of the maskedarray cast to given newtype
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(number_class)</tt>	 returns an indication of the class of the operand
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.n.t.e.x.t.l.i.b</a>(nested)</tt>	 combine multiple context managers into a single nested context manager
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(lookup)</tt>	 returns the value specified for option in style
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(power)</tt>	 first array elements raised to powers from second array element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.n.e.r.i.c.p.a.t.h</a>(getatime)</tt>	 return the last access time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(frexp)</tt>	 return the mantissa and exponent of x as pair m e
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(basicConfig)</tt>	 do basic configuration for the logging system
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(remove)</tt>	 remove a file same as unlink path
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(putenv)</tt>	 change or add an environment variable
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(ifloordiv)</tt>	 same as a // = b
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(hideturtle)</tt>	 makes the turtle invisible
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.m.a.n.d.s</a>(getstatusoutput)</tt>	 return status output of executing cmd in a shell
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(lstsq)</tt>	 return the least-squares solution to a linear matrix equation
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_array_max_ulp)</tt>	 check that all items of arrays differ in at most n units in the last place
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatweek)</tt>	 return a complete week as a table row
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getsid)</tt>	 call the system call getsid
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(crc_hqx)</tt>	 compute hqx crc incrementally
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(vdot)</tt>	 return the dot product of two vectors
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(time2netscape)</tt>	 return a string representing time in seconds since epoch t
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(string_at)</tt>	 return the string at addr
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(normalize)</tt>	 returns a normalized locale code for the given locale name
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(add_history)</tt>	 add a line to the history buffer
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(copy_sign)</tt>	 copies the second operand 's sign to the first one
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(pos)</tt>	 same as +a
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.c.k.l.e.t.o.o.l.s</a>(optimize)</tt>	 optimize a pickle string by removing unused put opcodes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.l.i.b</a>(rand)</tt>	 return a matrix of random values with given shape
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_zero)</tt>	 return true if the operand is a zero
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(copyto)</tt>	 copies values from one array to another broadcasting as necessary
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(asin)</tt>	 return the arc sine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(where)</tt>	 return elements either from x or y depending on condition
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(add)</tt>	 add arguments element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(getdoc)</tt>	 get the doc string or comments for an object
<tt style='background-color:#E8E8E8;'> <a href=''>f.c.n.t.l</a>(lockf)</tt>	 this is essentially a wrapper around the fcntl locking calls
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(A1)</tt>	 return self as a flattened ndarray
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(iterdecode)</tt>	 decoding iterator
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(urandom)</tt>	 return n random bytes suitable for cryptographic use
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.p.y</a>(deepcopy)</tt>	 deep copy operation on arbitrary python objects
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isfortran)</tt>	 returns true if the array is fortran contiguous but not c contiguous
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(pen)</tt>	 return or set the pen 's attributes
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(readlines)</tt>	 call readline repeatedly and return a list of the lines so read
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(splitext)</tt>	 split the extension from a pathname
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(suite)</tt>	 creates an st object from a suite
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ones)</tt>	 return a new array of given shape and type filled with ones
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(ast2list)</tt>	 creates a list-tree representation of an st
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(erfc)</tt>	 complementary error function at x
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(open)</tt>	 open a file for low level io
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagder)</tt>	 differentiate a laguerre series
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(add)</tt>	 return the sum of the two operands
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(dot)</tt>	 draw a dot with diameter size using color
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legval)</tt>	 evaluate a legendre series at points x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(issubdtype)</tt>	 returns true if first argument is a typecode lower/equal in type hierarchy
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(CFUNCTYPE)</tt>	 function prototype
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(hexlify)</tt>	 hexadecimal representation of binary data
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(next)</tt>	 return the next item from the iterator
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(DataSource)</tt>	 a generic data source file file http ftp
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(getmember)</tt>	 return a tarinfo object for member name'
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(decode)</tt>	 read input, apply quoted-printable decoding and write to output
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.b.e.r.s...R.e.a.l</a>(conjugate)</tt>	 conjugate is a no-op for reals
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(set_state)</tt>	 set the internal state of the generator from a tuple
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(tuple2ast)</tt>	 creates an st object from a tree representation
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(issubclass)</tt>	 return whether class c is a subclass i
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(gethostbyname)</tt>	 return the ip address a string of the form '255
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatweekheader)</tt>	 return a header for a week as a table row
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(base_repr)</tt>	 return a string representation of a number in the given base system
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(setrecursionlimit)</tt>	 set the maximum depth of the python interpreter stack to n
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_qnan)</tt>	 return true if self is a quiet nan
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.e.l.v.e</a>(open)</tt>	 open a persistent dictionary for reading and writing
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(tempnam)</tt>	 return a unique name for a temporary file
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(add)</tt>	 add the file name' to the archive
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(timetuple)</tt>	 return time tuple compatible with time
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.r.m.i.o.s</a>(tcflow)</tt>	 suspend or resume input or output on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(print_tb)</tt>	 print up to limit stack trace entries from the traceback tb
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(log1p)</tt>	 return the natural logarithm of 1+x base e
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(standard_b64encode)</tt>	 encode a string using the standard base64 alphabet
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(join)</tt>	 join two or more pathname components inserting '/' as needed
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(currentThread)</tt>	 return the current thread object corresponding to the caller 's thread of control
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(copy)</tt>	 copy data and mode bits cp src dst
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(start_new)</tt>	 start a new thread and return its identifier
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(getshapes)</tt>	 return a list of names of all currently available turtle shapes
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_xbm)</tt>	 x bitmap x10 or x11
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(bitwise_xor)</tt>	 compute the bit-wise xor of two arrays element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.s.e.c.t</a>(bisect_left)</tt>	 return the index where to insert item x in list a assuming a is sorted
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(dot)</tt>	 dot product of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(get_referrers)</tt>	 return the list of objects that directly refer to any of objs
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(fromroots)</tt>	 return series instance that has the specified roots
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.s.e.c.t</a>(bisect)</tt>	 return the index where to insert item x in list a assuming a is sorted
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(dirname)</tt>	 returns the directory component of a pathname
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(matrix_power)</tt>	 raise a square matrix to the integer power n
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(create_collation)</tt>	 creates a collation function
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(nolog)</tt>	 dummy function assigned to log when logging is disabled
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ndindex)</tt>	 an n-dimensional iterator object to index arrays
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setuid)</tt>	 set the current process 's user id
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(diagflat)</tt>	 create a two-dimensional array with the flattened input as a diagonal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_array_equal)</tt>	 raises an assertionerror if two array_like objects are not equal
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(theme_use)</tt>	 if themename is none returns the theme in use otherwise set the current theme to themename refreshes all widgets and emits a <<themechanged>> event
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(zeros_like)</tt>	 return an array of zeros with the same shape and type as a given array
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(getitimer)</tt>	 returns current value of given itimer
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(sety)</tt>	 set the turtle 's second coordinate to y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tanh)</tt>	 compute hyperbolic tangent element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b...H.t.m.l.D.i.f.f</a>(make_file)</tt>	 returns html file of side by side comparison with change highlights
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(exit)</tt>	 this is synonymous to raise systemexit''
<tt style='background-color:#E8E8E8;'> <a href=''>f.l.o.a.t</a>(as_integer_ratio)</tt>	 returns a pair of integers whose ratio is exactly equal to the original float and with a positive denominator
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(makelink)</tt>	 make a symbolic link called targetpath
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(read)</tt>	 read up to len bytes and return them
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(dump)</tt>	 pickle a masked array to a file
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(window_height)</tt>	 return the height of the turtle window
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(tostring)</tt>	 convert the array to an array of machine values and return the string representation
<tt style='background-color:#E8E8E8;'> <a href=''>u.f.u.n.c</a>(nargs)</tt>	 the number of arguments
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.i.m.p.o.r.t...z.i.p.i.m.p.o.r.t.e.r</a>(get_source)</tt>	 return the source code for the specified module
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(ntohl)</tt>	 convert a 32-bit integer from network to host byte order
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.a.c.t.i.o.n.s</a>(gcd)</tt>	 calculate the greatest common divisor of a and b
<tt style='background-color:#E8E8E8;'> <a href=''>f.p.f.o.r.m.a.t</a>(unexpo)</tt>	 remove the exponent by changing intpart and fraction
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(decode)</tt>	 decodes b using the codec registered for encoding
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(expanduser)</tt>	 dummy to retain interface-compatibility with other operating systems
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getpgid)</tt>	 call the system call getpgid
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(st)</tt>	 makes the turtle visible
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(strftime)</tt>	 strftime style string
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(DER_cert_to_PEM_cert)</tt>	 takes a certificate in binary der format and returns the pem version of it as a string
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(isspace)</tt>	 return true if all characters in b are whitespace and there is at least one character in b false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(format_exc)</tt>	 like print_exc but return a string
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...S.y.s.t.e.m.R.a.n.d.o.m</a>(random)</tt>	 get the next random number in the range [0
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d...l.o.c.k</a>(locked)</tt>	 return whether the lock is in the locked state
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(is_busday)</tt>	 calculates which of the given dates are valid days and which are not
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.I</a>(truncate)</tt>	 truncate the file at the current position
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(set_completer)</tt>	 set or remove the completer function
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(input)</tt>	 equivalent to eval raw_input prompt
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(f)</tt>	 draw samples from an f distribution
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(getLevelName)</tt>	 return the textual representation of logging level level
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(gumbel)</tt>	 draw samples from a gumbel distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(has_samewindow)</tt>	 check if windows match
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(choice)</tt>	 choose a random element from a non-empty sequence
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(set_unittest_reportflags)</tt>	 sets the unittest option flags
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(lower)</tt>	 return a copy of the string s converted to lowercase
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(getincrementalencoder)</tt>	 lookup up the codec for the given encoding and return its incrementalencoder class or factory function
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(tcsetpgrp)</tt>	 set the process group associated with the terminal given by a fd
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(create_decimal)</tt>	 creates a new decimal instance but using self as context
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(register_shape)</tt>	 adds a turtle shape to turtlescreen 's shapelist
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(uname)</tt>	 fairly portable uname interface
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(read_history_file)</tt>	 load a readline history file
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.z.i.n.f.o</a>(dst)</tt>	 dst offset in minutes east of utc
<tt style='background-color:#E8E8E8;'> <a href=''>_.h.a.s.h.l.i.b</a>(openssl_sha224)</tt>	 returns a sha224 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(repr)</tt>	 return the canonical string representation of the object
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(formatweek)</tt>	 returns a single week in a string no newline
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(commit)</tt>	 commit the current transaction
<tt style='background-color:#E8E8E8;'> <a href=''>n.i.s</a>(maps)</tt>	 returns an array of all available nis maps within a domain
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(issuite)</tt>	 determines if an st object was created from a suite
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(reverse)</tt>	 reverse the order of the values in b in place
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagval3d)</tt>	 evaluate a 3-d laguerre series at points x y z
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(stat)</tt>	 perform a stat system call on the given path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legder)</tt>	 differentiate a legendre series
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(ctypes)</tt>	 an object to simplify the interaction of the array with the ctypes module
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fsync)</tt>	 fsync fildes force write of file with filedescriptor to disk
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(RAND_egd)</tt>	 queries the entropy gather daemon egd on the socket named by path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(randint)</tt>	 return random integers from low inclusive to high exclusive
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(RAND_status)</tt>	 returns 1 if the openssl prng has been seeded with enough data and 0 if not
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(wald)</tt>	 draw samples from a wald or inverse gaussian distribution
<tt style='background-color:#E8E8E8;'> <a href=''>u.u.i.d</a>(uuid1)</tt>	 generate a uuid from a host id sequence number and the current time
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(isabs)</tt>	 test whether a path is absolute
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.E.x.t.F.i.l.e</a>(read1)</tt>	 read up to n bytes with at most one read system call
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legline)</tt>	 legendre series whose graph is a straight line
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(laggrid2d)</tt>	 evaluate a 2-d laguerre series on the cartesian product of x and y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(tofile)</tt>	 write array to a file as text or binary default
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(lstrip)</tt>	 return a copy of the string s with leading whitespace removed
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(swapaxes)</tt>	 interchange two axes of an array
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(count)</tt>	 return the number of non-overlapping occurrences of substring sub in unicode string s[start:end]
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(ldexp)</tt>	 return x * 2**i
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(diag_indices)</tt>	 return the indices to access the main diagonal of an array
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(tell)</tt>	 current file position an integer may be a long integer
<tt style='background-color:#E8E8E8;'> <a href=''>z.l.i.b</a>(decompress)</tt>	 return decompressed string
<tt style='background-color:#E8E8E8;'> <a href=''>t.o.k.e.n.i.z.e</a>(tokenize)</tt>	 the tokenize function accepts two parameters: one representing the input stream and one providing an output mechanism for tokenize
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(EncodedFile)</tt>	 return a wrapped version of file which provides transparent encoding translation
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(tcsendbreak)</tt>	 send a break on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.e.x.p.a.t</a>(ParserCreate)</tt>	 return a new xml parser object
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(trunc)</tt>	 integral truncates x to the nearest integral toward 0
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(stack_size)</tt>	 return the thread stack size used when creating new threads
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(error)</tt>	 log a message with severity error on the root logger
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(inet_ntoa)</tt>	 convert an ip address from 32-bit packed binary format to string format
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(sameopenfile)</tt>	 test whether two open file objects reference the same file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(array_equiv)</tt>	 returns true if input arrays are shape consistent and all elements equal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(allequal)</tt>	 return true if all entries of a and b are equal using fill_value as a truth value where either or both are masked
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fix)</tt>	 round to nearest integer towards zero
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.o.o.l.s</a>(decodeerror)</tt>	 create the best argument for a raise macos
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(read_init_file)</tt>	 parse a readline initialization file
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(tell)</tt>	 get the current position
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(hstack)</tt>	 stack arrays in sequence horizontally column wise
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(frexp)</tt>	 return the mantissa and exponent of x as pair m e
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(Event)</tt>	 a factory function that returns a new event
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(logb)</tt>	 returns the exponent of the magnitude of self 's msd
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(handleError)</tt>	 handle errors which occur during an emit call
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(showturtle)</tt>	 makes the turtle visible
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(close)</tt>	 close a file descriptor for low level io
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(vonmises)</tt>	 draw samples from a von mises distribution
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(rfind)</tt>	 return the highest index in s where substring sub is found such that sub is contained within s[start:end]
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(parsedate)</tt>	 convert a time string to a time tuple
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(setdefaulttimeout)</tt>	 set the default timeout in seconds float for new socket objects
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(circle)</tt>	 draw a circle with given radius
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...P.y.Z.i.p.F.i.l.e</a>(writepy)</tt>	 add all files from pathname to the zip archive
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(strftime)</tt>	 convert a time tuple to a string according to a format specification
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(decode)</tt>	 decodes s using the codec registered for encoding
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebgrid2d)</tt>	 evaluate a 2-d chebyshev series on the cartesian product of x and y
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(setLevel)</tt>	 set the logging level of this handler
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(mod)</tt>	 same as a % b
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(xcor)</tt>	 return the turtle 's x coordinate
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(set_completion_display_matches_hook)</tt>	 set or remove the completion display function
<tt style='background-color:#E8E8E8;'> <a href=''>p.p.r.i.n.t</a>(isrecursive)</tt>	 determine if object requires a recursive representation
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(log10)</tt>	 return the base 10 logarithm of x
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(nlargest)</tt>	 find the n largest elements in a dataset
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(importfile)</tt>	 import a python source file or compiled file given its path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(setflags)</tt>	 set array flags writeable aligned and updateifcopy respectively
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(factorial)</tt>	 integral find x !
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i.t.b</a>(text)</tt>	 return a plain text document describing a given traceback
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(getservbyname)</tt>	 return a port number from a service name and protocol name
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(theme_create)</tt>	 creates a new theme
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(s_)</tt>	 a nicer way to build up index tuples for arrays
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(finfo)</tt>	 machine limits for floating point types
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nansum)</tt>	 return the sum of array elements over a given axis treating not a numbers nans as zero
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(isub)</tt>	 same as a -= b
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(appendleft)</tt>	 add an element to the left side of the deque
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(ntohs)</tt>	 convert a 16-bit integer from network to host byte order
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(all)</tt>	 return true if bool x is true for all values x in the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(exp2)</tt>	 calculate 2**p for all p in the input array
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.o.o.l.s</a>(coerce)</tt>	 coerce a python object to another type using the ae coercers
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(flatnonzero)</tt>	 return indices that are non-zero in the flattened version of a
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermmulx)</tt>	 multiply a hermite series by x
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(ln)</tt>	 returns the natural base e logarithm of the operand
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(array)</tt>	 create an array
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d...l.o.c.k</a>(release_lock)</tt>	 release the lock allowing another thread that is blocked waiting for the lock to acquire the lock
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(isenabled)</tt>	 returns true if automatic garbage collection is enabled
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.r.s.h.a.l</a>(dumps)</tt>	 return the string that would be written to a file by dump value file
<tt style='background-color:#E8E8E8;'> <a href=''>i.t.e.r.t.o.o.l.s...c.h.a.i.n</a>(from_iterable)</tt>	 > chain object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(obj2sctype)</tt>	 return the scalar dtype or numpy equivalent of python type of an object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legsub)</tt>	 subtract one legendre series from another
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(filter)</tt>	 return those items of sequence for which function item is true
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(settiltangle)</tt>	 rotate the turtleshape to point in the specified direction
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(walk)</tt>	 recursively yield all descendant nodes in the tree starting at *node* including *node* itself, in no specified order
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(capitalize)</tt>	 return a capitalized version of s i
<tt style='background-color:#E8E8E8;'> <a href=''>s.m.t.p.l.i.b</a>(quoteaddr)</tt>	 quote a subset of the email addresses defined by rfc 821
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(bitwise_and)</tt>	 compute the bit-wise and of two arrays element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...u.f.u.n.c</a>(accumulate)</tt>	 accumulate the result of applying the operator to all elements
<tt style='background-color:#E8E8E8;'> <a href=''>x.m.l.r.p.c.l.i.b</a>(gzip_encode)</tt>	 encode data using the gzip content encoding as described in rfc 1952
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t...s.o.c.k.e.t</a>(connect_ex)</tt>	 this is like connect address, but returns an error code the errno value instead of raising an exception when an error occurs
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(putmask)</tt>	 changes elements of an array based on conditional and input values
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(kaiser)</tt>	 return the kaiser window
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(swapcase)</tt>	 return a copy of s with uppercase characters converted to lowercase and vice versa
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WEXITSTATUS)</tt>	 return the process return code from status
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3</a>(adapt)</tt>	 adapt obj to given protocol
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.s.e.c.t</a>(insort)</tt>	 insert item x in list a and keep it sorted assuming a is sorted
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(eff_request_host)</tt>	 return a tuple request-host effective request-host name
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(polar)</tt>	 convert a complex from rectangular coordinates to polar coordinates
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_exif)</tt>	 jpeg data in exif format
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(geometric)</tt>	 draw samples from the geometric distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fv)</tt>	 compute the future value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(startswith)</tt>	 returns a boolean array which is true where the string element in a starts with prefix otherwise false
<tt style='background-color:#E8E8E8;'> <a href=''>s.l.i.c.e</a>(indices)</tt>	 assuming a sequence of length len calculate the start and stop indices and the stride length of the extended slice described by s
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r...s.t</a>(totuple)</tt>	 creates a tuple-tree representation of this st
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(parse_qsl)</tt>	 parse a query given as a string argument
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(setLoggerClass)</tt>	 set the class to be used when instantiating a logger
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(exc_clear)</tt>	 clear global information on the current exception
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(mimify)</tt>	 convert 8bit parts of a mime mail message to quoted-printable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(dumps)</tt>	 returns the pickle of the array as a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermgauss)</tt>	 gauss-hermite quadrature
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(formatmonthname)</tt>	 return a formatted month name
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(remainder)</tt>	 returns the remainder from integer division
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(translate)</tt>	 return a copy of the string s where all characters have been mapped through the given translation table which must be a mapping of unicode ordinals to unicode ordinals unicode strings or none
<tt style='background-color:#E8E8E8;'> <a href=''>m.d.5</a>(md5)</tt>	 returns a md5 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(a2b_uu)</tt>	 decode a line of uuencoded data
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.n.t.e.x.t.l.i.b</a>(wraps)</tt>	 decorator factory to apply update_wrapper to a wrapper function
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(fillcolor)</tt>	 return or set the fillcolor
<tt style='background-color:#E8E8E8;'> <a href=''>c.P.i.c.k.l.e</a>(Unpickler)</tt>	 create an unpickler
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legroots)</tt>	 compute the roots of a legendre series
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(convolve)</tt>	 returns the discrete linear convolution of two one-dimensional sequences
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(put)</tt>	 replaces specified elements of an array with given values
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(less_equal)</tt>	 return the truth value of x1 =< x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(islower)</tt>	 returns true for each element if all cased characters in the string are lowercase and there is at least one cased character false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(shuffle)</tt>	 modify a sequence in-place by shuffling its contents
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l</a>(setcontext)</tt>	 set this thread 's context to context
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.x.t.w.r.a.p</a>(fill)</tt>	 fill a single paragraph of text returning a new string
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(round)</tt>	 round a number to a given precision in decimal digits
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(timetz)</tt>	 return time object with same time and tzinfo
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getsource)</tt>	 return the text of the source code for an object
<tt style='background-color:#E8E8E8;'> <a href=''>T.k.i.n.t.e.r</a>(mainloop)</tt>	 run the main loop of tcl
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s...I.n.c.r.e.m.e.n.t.a.l.D.e.c.o.d.e.r</a>(getstate)</tt>	 return the current state of the decoder
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tril_indices_from)</tt>	 return the indices for the lower-triangle of arr
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2</a>(decompress)</tt>	 decompress data in one shot
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(addsitepackages)</tt>	 add site-packages and possibly site-python to sys
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(kill)</tt>	 kill a process with a signal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(H)</tt>	 returns the complex conjugate transpose of self
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(capwords)</tt>	 split the argument into words using split capitalize each word using capitalize and join the capitalized words using join
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(can_cast)</tt>	 returns true if cast between data types can occur according to the casting rule
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(rsplit)</tt>	 return a list of the words in s using sep as the delimiter string starting at the end of the string and working to the front
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ndenumerate)</tt>	 multidimensional index iterator
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(setfield)</tt>	 put a value into a specified place in a field defined by a data-type
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(home)</tt>	 move turtle to the origin - coordinates 00
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(parse_header)</tt>	 parse a content-type like header
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebval2d)</tt>	 evaluate a 2-d chebyshev series at points x y
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(setcbreak)</tt>	 put terminal into a cbreak mode
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(print_environ_usage)</tt>	 dump a list of environment variables used by cgi as html
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.h.e.x</a>(hexbin)</tt>	 infilename outfilename - decode binhexed file
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...W.i.c.h.m.a.n.n.H.i.l.l</a>(random)</tt>	 get the next random number in the range [0
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(degree)</tt>	 the degree of the series
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(geomspace)</tt>	 return numbers spaced evenly on a log scale a geometric progression
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(filelineno)</tt>	 return the line number in the current file
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(dump_address_pair)</tt>	 dump a name address pair in a canonicalized form
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(isnan)</tt>	 check if float x is not a number nan
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(tcdrain)</tt>	 wait until all output written to file descriptor fd has been transmitted
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(divide_int)</tt>	 divides two numbers and returns the integer part of the result
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polygrid2d)</tt>	 evaluate a 2-d polynomial on the cartesian product of x and y
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(append)</tt>	 append object to end
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(cumprod)</tt>	 return the cumulative product of elements along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s...P.o.p.e.n</a>(kill)</tt>	 kill the process with sigkill
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(ifft2)</tt>	 compute the 2-dimensional inverse discrete fourier transform
<tt style='background-color:#E8E8E8;'> <a href=''>u.u</a>(decode)</tt>	 decode uuencoded file
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(replace_history_item)</tt>	 replaces history item given by its position with contents of line
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isframe)</tt>	 return true if the object is a frame object
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(print_stack)</tt>	 print a stack trace from its invocation point
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(setundobuffer)</tt>	 set or disable undobuffer
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.l.n.e.t.l.i.b</a>(test)</tt>	 test program for telnetlib
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(floor_divide)</tt>	 return the largest integer smaller or equal to the division of the inputs
<tt style='background-color:#E8E8E8;'> <a href=''>p.w.d</a>(getpwuid)</tt>	 return the password database entry for the given numeric user id
<tt style='background-color:#E8E8E8;'> <a href=''>p.t.y</a>(spawn)</tt>	 create a spawned process
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(expanduser)</tt>	 expand ~ and ~ user constructions
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WCOREDUMP)</tt>	 return true if the process returning status was dumped to a core file
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(setinputsizes)</tt>	 required by db-api
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(get_logger)</tt>	 return package logger -- if it does not already exist then it is created
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(rt)</tt>	 turn turtle right by angle units
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(allow_connection_pickling)</tt>	 install support for sending connections and sockets between processes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(reciprocal)</tt>	 return the reciprocal of the argument element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(itemset)</tt>	 insert scalar into an array scalar is cast to array’s dtype if possible
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(truncate)</tt>	 truncate the file to at most size bytes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(promote_types)</tt>	 returns the data type with the smallest size and smallest scalar kind to which both type1 and type2 may be safely cast
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(getfield)</tt>	 returns a field of the given array as a certain type
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(bye)</tt>	 shut the turtlegraphics window
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.n.a.u.d.i.o</a>(printhdr)</tt>	 read and print the sound header of a named file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(vonmises)</tt>	 draw samples from a von mises distribution
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(fetchmany)</tt>	 fetches several rows from the resultset
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b</a>(writePlist)</tt>	 write rootobject to a
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(join_header_words)</tt>	 do the inverse almost of the conversion done by split_header_words
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(indexOf)</tt>	 return the first index of b in a
<tt style='background-color:#E8E8E8;'> <a href=''>e.n.c.o.d.i.n.g.s</a>(normalize_encoding)</tt>	 normalize an encoding name
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t</a>(inet_aton)</tt>	 ip representation convert an ip address in string format 123
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(equal)</tt>	 return x1 == x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...n.d.e.n.u.m.e.r.a.t.e</a>(next)</tt>	 standard iterator method returns the index tuple and array value
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(get_referents)</tt>	 return the list of objects that are directly referred to by objs
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.o.z.e.n.s.e.t</a>(difference)</tt>	 return the difference of two or more sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(formatweekday)</tt>	 returns a formatted week day name
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(isatty)</tt>	 return true if the file descriptor fd is an open file descriptor connected to the slave end of a terminal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(trim)</tt>	 remove trailing coefficients
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(get_threshold)</tt>	 return the current collection thresholds
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.p.i.l.e.a.l.l</a>(compile_path)</tt>	 byte-compile all module on sys
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(parse_http_list)</tt>	 parse lists as described by rfc 2068 section 2
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(forkpty)</tt>	 fork a new process with a new pseudo-terminal as controlling tty
<tt style='background-color:#E8E8E8;'> <a href=''>b.d.b</a>(checkfuncname)</tt>	 check whether we should break here because of b
<tt style='background-color:#E8E8E8;'> <a href=''>p.i.p.e.s</a>(quote)</tt>	 return a shell-escaped version of the file string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(logaddexp2)</tt>	 logarithm of the sum of exponentiations of the inputs in base-2
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(pencolor)</tt>	 return or set the pencolor
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(filterwarnings)</tt>	 insert an entry into the list of warnings filters
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(isalnum)</tt>	 return true if all characters in s are alphanumeric and there is at least one character in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_qnan)</tt>	 return true if the operand is a quiet nan
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Condition)</tt>	 returns a condition object
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(chown)</tt>	 set owner of targetpath according to tarinfo
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(Semaphore)</tt>	 a factory function that returns a new semaphore
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(field_size_limit)</tt>	 sets an upper limit on parsed fields
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(msort)</tt>	 return a copy of an array sorted along the first axis
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(urldefrag)</tt>	 removes any existing fragment from url
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(triangular)</tt>	 triangular distribution
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(freeze_support)</tt>	 check whether this is a fake forked process in a frozen executable
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(minor)</tt>	 extracts a device minor number from a raw device number
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(findsource)</tt>	 return the entire source file and starting line number for an object
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(strseq)</tt>	 recursively walk a sequence stringifying each element
<tt style='background-color:#E8E8E8;'> <a href=''>f.l.o.a.t</a>(conjugate)</tt>	 returns self the complex conjugate of any float
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(logical_and)</tt>	 compute the truth value of x1 and x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(rledecode_hqx)</tt>	 decode hexbin rle-coded string
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(next)</tt>	 return the next member of the archive as a tarinfo object when tarfile is opened for reading
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(iteritems)</tt>	 an iterator over the key value pairs in od
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(getpwnam)</tt>	 return the password database entry for the given user name
<tt style='background-color:#E8E8E8;'> <a href=''>s.u.b.p.r.o.c.e.s.s</a>(check_output)</tt>	 run command with arguments and return its output as a byte string
<tt style='background-color:#E8E8E8;'> <a href=''>w.h.i.c.h.d.b</a>(whichdb)</tt>	 guess which db package to use to open a db file
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.y.n.c.h.a.t</a>(filterwarnings)</tt>	 insert an entry into the list of warnings filters
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(execute)</tt>	 executes a sql statement
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(result_type)</tt>	 returns the type that results from applying the numpy type promotion rules to the arguments
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.p.y._.r.e.g</a>(add_extension)</tt>	 register an extension code
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(get_close_matches)</tt>	 use sequencematcher to return list of the best good enough matches
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(log10)</tt>	 returns the base 10 logarithm of self
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(unregister_dialect)</tt>	 delete the name/dialect mapping associated with a string name
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getrefcount)</tt>	 return the reference count of object
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(canonical)</tt>	 returns the same decimal object
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getgroups)</tt>	 ids return list of supplemental group ids for the process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(ctypes)</tt>	 an object to simplify the interaction of the array with the ctypes module
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(eig)</tt>	 compute the eigenvalues and right eigenvectors of a square array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagfromroots)</tt>	 generate a laguerre series with given roots
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b...P.l.i.s.t</a>(write)</tt>	 use the writeplist function instead
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(plus)</tt>	 plus corresponds to unary prefix plus in python
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(symmetric_difference_update)</tt>	 update a set with the symmetric difference of itself and another
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(endswith)</tt>	 return true if b ends with the specified suffix false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyvander2d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(isdigit)</tt>	 return true if all characters in s are digits and there is at least one character in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(strip)</tt>	 return a copy of the string s with leading and trailing whitespace removed
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(atan2)</tt>	 return the arc tangent measured in radians of y/x
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(makeunknown)</tt>	 make a file from a tarinfo object with an unknown type at targetpath
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(getaddrinfo)</tt>	 resolve host and port into addrinfo struct
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(f)</tt>	 draw samples from an f distribution
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(iterencode)</tt>	 encoding iterator
<tt style='background-color:#E8E8E8;'> <a href=''>t.o.k.e.n.i.z.e</a>(untokenize)</tt>	 transform tokens back into python source code
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeder)</tt>	 differentiate a hermite_e series
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.t.t.e.x.t</a>(test)</tt>	 implements the c expression: condition ? true : false required to correctly interpret plural forms
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ipmt)</tt>	 compute the interest portion of a payment
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(compress)</tt>	 return selected slices of an array along given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legtrim)</tt>	 remove “small” “trailing” coefficients from a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(uniform)</tt>	 draw samples from a uniform distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_approx_equal)</tt>	 raises an assertionerror if two items are not equal up to significant digits
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ceil)</tt>	 return the ceiling of the input element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.x.t.w.r.a.p</a>(wrap)</tt>	 wrap a single paragraph of text returning a list of wrapped lines
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(read)</tt>	 fromfile f n read n objects from the file object f and append them to the end of the array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(has_samecoef)</tt>	 check if coefficients match
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...B.a.s.e.S.e.t</a>(issubset)</tt>	 report whether another set contains this set
<tt style='background-color:#E8E8E8;'> <a href=''>x.m.l.r.p.c.l.i.b</a>(gzip_decode)</tt>	 decode data using the gzip content encoding as described in rfc 1952
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(sqrt)</tt>	 return the square root of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(argsort)</tt>	 returns the indices that would sort an array
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(cosh)</tt>	 return the hyperbolic cosine of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(select)</tt>	 return an array drawn from elements in choicelist depending on conditions
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(rayleigh)</tt>	 draw samples from a rayleigh distribution
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(multiply)</tt>	 multiply multiplies two operands
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnlpe)</tt>	 execute file which is looked for along $path with arguments from args in a subprocess with the supplied environment
<tt style='background-color:#E8E8E8;'> <a href=''>T.k.i.n.t.e.r</a>(getboolean)</tt>	 convert true and false to integer values 1 and 0
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(logical_invert)</tt>	 invert all the digits in the operand
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(update)</tt>	 add all values from an iterable such as a list or file
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execl)</tt>	 execute the executable file with argument list args replacing the current process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(cond)</tt>	 compute the condition number of a matrix
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(noncentral_chisquare)</tt>	 draw samples from a noncentral chi-square distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagroots)</tt>	 compute the roots of a laguerre series
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(close)</tt>	 closes the connection
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_path)</tt>	 returns a path corresponding to the scheme
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isdatadescriptor)</tt>	 return true if the object is a data descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g...T.h.r.e.a.d</a>(join)</tt>	 wait until the thread terminates
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(mini)</tt>	 return the array minimum along the specified axis
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(radix)</tt>	 just returns 10 as this is decimal :
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(urlsplit)</tt>	 parse a url into 5 components
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(tcsetattr)</tt>	 set the tty attributes for file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_paths)</tt>	 returns a mapping containing an install scheme
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(radians)</tt>	 convert angle x from degrees to radians
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(do_handshake)</tt>	 perform a tls/ssl handshake
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isnan)</tt>	 test element-wise for nan and return result as a boolean array
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(search)</tt>	 scan through string looking for a match to the pattern returning a match object or none if no match was found
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeval3d)</tt>	 evaluate a 3-d hermite_e series at points x y z
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(iconcat)</tt>	 same as a += b for a and b sequences
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(upper)</tt>	 return a copy of b with all ascii characters converted to uppercase
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanargmin)</tt>	 return the indices of the minimum values in the specified axis ignoring nans
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(irfft2)</tt>	 compute the 2-dimensional inverse fft of a real array
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(nextfile)</tt>	 close the current file so that the next iteration will read the first line from the next file if any
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(bitwise_or)</tt>	 compute the bit-wise or of two arrays element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>j.s.o.n</a>(loads)</tt>	 deserialize s to a python object
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(tcgetattr)</tt>	 get the tty attributes for file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>p.r.o.f.i.l.e</a>(run)</tt>	 run statement under profiler optionally saving results in filename
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(to_eng_string)</tt>	 convert to engineering-type string
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(window_width)</tt>	 returns the width of the turtle window
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(lchflags)</tt>	 set file flags
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setpgrp)</tt>	 make this process the process group leader
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(wait4)</tt>	 wait for completion of a given child process
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(issuperset)</tt>	 report whether this set contains another set
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(triu_indices)</tt>	 return the indices for the upper-triangle of an n m array
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(ixor)</tt>	 same as a ^= b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(tobytes)</tt>	 return the array data as a string containing the raw bytes in the array
<tt style='background-color:#E8E8E8;'> <a href=''>f.p.f.o.r.m.a.t</a>(test)</tt>	 interactive test run
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(listdir)</tt>	 return a list containing the names of the entries in the directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polyadd)</tt>	 find the sum of two polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>s.c.h.e.d</a>(namedtuple)</tt>	 returns a new subclass of tuple with named fields
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(copy_abs)</tt>	 returns a copy of the operand with the sign set to 0
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_current_history_length)</tt>	 integer return the current not the maximum length of history
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(remainder_near)</tt>	 returns to be "a - b * n", where n is the integer nearest the exact value of "x / b"
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(extract)</tt>	 extract a member from the archive to the current working directory using its full name
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(b16decode)</tt>	 decode a base16 encoded string
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(ishex)</tt>	 return true if the character c is a hexadecimal digit
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(debug_src)</tt>	 debug a single doctest docstring in argument src'
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e.i.t</a>(reindent)</tt>	 helper to reindent a multi-line statement
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(category)</tt>	 returns the general category assigned to the unicode character unichr as string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(zfill)</tt>	 return the numeric string left-filled with zeros
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(translate)</tt>	 return a copy of the string s where all characters occurring in the optional argument deletechars are removed
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(rstrip)</tt>	 strip trailing bytes contained in the argument
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(mimify_part)</tt>	 convert an 8bit part of a mime mail message to quoted-printable
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.e.l.v.e</a>(Pickler)</tt>	 create a pickler
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execlp)</tt>	 execute the executable file which is searched for along $path with argument list args replacing the current process
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(islower)</tt>	 return true if all cased characters in b are lowercase and there is at least one cased character in b false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(chr)</tt>	 return a string of one character with ordinal i
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(bin)</tt>	 return the binary representation of an integer or long integer
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(onkey)</tt>	 bind fun to key-release event of key
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(to_integral_value)</tt>	 rounds to an integer
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(StringIO)</tt>	 return a stringio-like stream for reading or writing
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(expandtabs)</tt>	 return a copy of the string s with all tab characters replaced by the appropriate number of spaces depending on the current column and the tabsize
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(strptime)</tt>	 parse a string to a time tuple according to a format specification
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(modf)</tt>	 return the fractional and integral parts of an array element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(python_compiler)</tt>	 returns a string identifying the compiler used for compiling python
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(weibull)</tt>	 draw samples from a weibull distribution
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(iter_importers)</tt>	 yield pep 302 importers for the given module name if fullname contains a '
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d...l.o.c.k</a>(acquire_lock)</tt>	 lock the lock
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(abspath)</tt>	 return an absolute path
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(utcnow)</tt>	 return a new datetime representing utc day and time
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.t.p.a.s.s</a>(win_getpass)</tt>	 prompt for password with echo off using windows getch
<tt style='background-color:#E8E8E8;'> <a href=''>s.n.d.h.d.r</a>(whathdr)</tt>	 recognize sound headers
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(isstdin)</tt>	 returns true if the last line was read from sys
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(b2a_qp)</tt>	 encode a string using quoted-printable encoding
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(islink)</tt>	 return true if the pathname refers to a symbolic link
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(tofile)</tt>	 write all items as machine values to the file object f
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getenv)</tt>	 get an environment variable return none if it doesn't exist
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(makefile)</tt>	 make and return a file-like object that works with the ssl connection
<tt style='background-color:#E8E8E8;'> <a href=''>n.i.s</a>(get_default_domain)</tt>	 corresponds to the c library yp_get_default_domain call returning the default nis domain
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(testzip)</tt>	 read all the files and check the crc
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(commonprefix)</tt>	 given a list of pathnames returns the longest common leading component
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ldexp)</tt>	 returns x1 * 2**x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(urlsafe_b64encode)</tt>	 encode a string using a url-safe base64 alphabet
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(flush)</tt>	 does nothing
<tt style='background-color:#E8E8E8;'> <a href=''>a.b.c...A.B.C.M.e.t.a</a>(register)</tt>	 register a virtual subclass of an abc
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(swapcase)</tt>	 return a copy of the string s with uppercase characters converted to lowercase and vice versa
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(array_repr)</tt>	 return the string representation of an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(atleast_2d)</tt>	 view inputs as arrays with at least two dimensions
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(python_version_tuple)</tt>	 returns the python version as tuple major minor patchlevel of strings
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.c.O.S</a>(openrf)</tt>	 open resource fork of a file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(real_if_close)</tt>	 if complex input returns a real array if complex parts are close to zero
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(open)</tt>	 return file-like object for name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(expand_dims)</tt>	 expand the shape of an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(cholesky)</tt>	 cholesky decomposition
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(ifftshift)</tt>	 the inverse of fftshift
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(a2b_hex)</tt>	 binary data of hexadecimal representation
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.n.e.c.a.c.h.e</a>(updatecache)</tt>	 update a cache entry and return its list of lines
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(buffer_info)</tt>	 return a tuple address length giving the current memory address and the length in items of the buffer used to hold array 's contents the length should be multiplied by the itemsize attribute to calculate the buffer length in bytes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(set_printoptions)</tt>	 set printing options
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(memmap)</tt>	 create a memory-map to an array stored in a binary file on disk
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(solve)</tt>	 solve a linear matrix equation or system of linear scalar equations
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(basename)</tt>	 returns the final component of a pathname
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(radix)</tt>	 just returns 10 as this is decimal
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(tzname)</tt>	 return self
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(lineno)</tt>	 return the cumulative line number of the line that has just been read
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatmonthname)</tt>	 return a month name as a table row
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(setdefault)</tt>	 get kd, also set od[k]=d if k not in od
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(tcflow)</tt>	 suspend or resume input or output on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(enable)</tt>	 enable automatic garbage collection
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermroots)</tt>	 compute the roots of a hermite series
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(upper)</tt>	 return an array with the elements converted to uppercase
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(sqrt)</tt>	 return the square root of self
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...n.d.i.n.d.e.x</a>(next)</tt>	 standard iterator method updates the index and returns the index tuple
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(zeros)</tt>	 return a new array of given shape and type filled with zeros
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(asmatrix)</tt>	 interpret the input as a matrix
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(dump)</tt>	 dump a pickle of the array to the specified file
<tt style='background-color:#E8E8E8;'> <a href=''>a.b.c</a>(abstractmethod)</tt>	 a decorator indicating abstract methods
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(standard_exponential)</tt>	 draw samples from the standard exponential distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(linspace)</tt>	 return evenly spaced numbers over a specified interval
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(anom)</tt>	 compute the anomalies deviations from the arithmetic mean along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(combine)</tt>	 datetime with same date and time fields
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b</a>(readPlistFromString)</tt>	 read a plist data from a string
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.c.O.S</a>(GetErrorString)</tt>	 convert oserr number to string
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(shuffle)</tt>	 shuffle the sequence x in place
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(compare)</tt>	 compares values numerically
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(errstate)</tt>	 context manager for floating-point error handling
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(true_divide)</tt>	 returns a true division of the inputs element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(random_integers)</tt>	 random integers of type np
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(copysign)</tt>	 return x with the sign of y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(bytes)</tt>	 return random bytes
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(isalnum)</tt>	 return true if all characters in s are alphanumeric and there is at least one character in s false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(oct)</tt>	 return the octal representation of an integer or long integer
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(map)</tt>	 return a list of the results of applying the function to the items of the argument sequence s
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(mirr)</tt>	 modified internal rate of return
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(getatime)</tt>	 return the last access time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.i.m.e</a>(strftime)</tt>	 strftime style string
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(tell)</tt>	 return the current file position an integer may be a long integer
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(chmod)</tt>	 set file permissions of targetpath according to tarinfo
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_completer)</tt>	 returns current completer function
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(getslice)</tt>	 same as a[b:c]
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(is_third_party)</tt>	 rfc 2965 section 3
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...C.o.u.n.t.e.r</a>(elements)</tt>	 iterator over elements repeating each as many times as its count
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebgrid3d)</tt>	 evaluate a 3-d chebyshev series on the cartesian product of x y and z
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(format_exception)</tt>	 format a stack trace and the exception information
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(noheaders)</tt>	 return an empty mimetools
<tt style='background-color:#E8E8E8;'> <a href=''>f.c.n.t.l</a>(flock)</tt>	 perform the lock operation op on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>f.t.p.l.i.b</a>(parse257)</tt>	 parse the '257' response for a mkd or pwd request
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(rfind)</tt>	 for each element in a return the highest index in the string where substring sub is found such that sub is contained within [start end]
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(node)</tt>	 returns the computer 's network name which may not be fully qualified
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(not_equal)</tt>	 return x1 != x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_subnormal)</tt>	 return true if the operand is subnormal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nan_to_num)</tt>	 replace nan with zero and inf with finite numbers
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(is_signed)</tt>	 return true if self is negative
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermline)</tt>	 hermite series whose graph is a straight line
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.o.s.t.o.o.l.s</a>(mkdirs)</tt>	 make directories leading to dst if they don't exist yet
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(join)</tt>	 return a string composed of the words in list with intervening occurrences of sep
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(item)</tt>	 copy an element of an array to a standard python scalar and return it
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tril)</tt>	 lower triangle of an array
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(hash)</tt>	 return a hash value for the object
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(makeLogRecord)</tt>	 make a logrecord whose attributes are defined by the specified dictionary
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(mainloop)</tt>	 run the main loop of tcl
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(resetscreen)</tt>	 reset all turtles on the screen to their initial state
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(torecords)</tt>	 transforms a masked array into a flexible-type array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(geterrcall)</tt>	 return the current callback function used on floating-point errors
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(byteswap)</tt>	 swap the bytes of the array elements
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(index)</tt>	 like b.find but raise valueerror when the subsection is not found
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(getpreferredencoding)</tt>	 return the charset that the user is likely using according to the system configuration
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_allclose)</tt>	 raises an assertionerror if two objects are not equal up to desired tolerance
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(replace_errors)</tt>	 implements the replace error handling which replaces malformed data with a replacement marker
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(LinAlgError)</tt>	 generic python-exception-derived object raised by linalg functions
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(byteswap)</tt>	 swap the bytes of the array elements
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_completer_delims)</tt>	 string get the readline word delimiters for tab-completion
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(Laguerre)</tt>	 a laguerre series class
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(disable)</tt>	 disable all logging calls of severity level and below
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(urlsafe_b64decode)</tt>	 decode a string encoded with the standard base64 alphabet
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(fromordinal)</tt>	 date corresponding to a proleptic gregorian ordinal
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(pareto)</tt>	 draw samples from a pareto ii or lomax distribution with specified shape
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(uts)</tt>	 convert a unicode object to a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legcompanion)</tt>	 return the scaled companion matrix of c
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(add)</tt>	 add an element to a set
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(run_module_suite)</tt>	 run a test module
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(rsplit)</tt>	 return a list of the sections in b using sep as the delimiter starting at the end of b and working to the front
<tt style='background-color:#E8E8E8;'> <a href=''>w.a.r.n.i.n.g.s</a>(simplefilter)</tt>	 insert a simple entry into the list of warnings filters at the front
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(fromroots)</tt>	 return series instance that has the specified roots
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(neg)</tt>	 same as -a
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(bartlett)</tt>	 return the bartlett window
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(rmdir)</tt>	 remove a directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(irfft)</tt>	 compute the inverse of the n-point dft for real input
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(replace)</tt>	 return a copy of string s with all occurrences of substring old replaced by new
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeroots)</tt>	 compute the roots of a hermitee series
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.o.c.k.e.t...s.o.c.k.e.t</a>(recvfrom_into)</tt>	 like recv_into buffer[, nbytes[, flags]] but also return the sender 's address info
<tt style='background-color:#E8E8E8;'> <a href=''>p.y._.c.o.m.p.i.l.e</a>(main)</tt>	 compile several source files
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arcsinh)</tt>	 inverse hyperbolic sine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnlp)</tt>	 execute file which is looked for along $path with arguments from args in a subprocess with the supplied environment
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(average)</tt>	 compute the weighted average along the specified axis
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(getctime)</tt>	 return the metadata change time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermevander)</tt>	 pseudo-vandermonde matrix of given degree
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(negative)</tt>	 numerical negative element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(extend_path)</tt>	 extend a package 's path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(argwhere)</tt>	 find the indices of array elements that are non-zero grouped by element
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(listen)</tt>	 set focus on turtlescreen in order to collect key-events no arguments
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(wstring_at)</tt>	 return the string at addr
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(setsid)</tt>	 call the system call setsid
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(left_shift)</tt>	 shift the bits of an integer to the left
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(rfind)</tt>	 return the highest index in s where substring sub is found such that sub is contained within s[startend]
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(rmtree)</tt>	 recursively delete a directory tree
<tt style='background-color:#E8E8E8;'> <a href=''>p.k.g.u.t.i.l</a>(find_loader)</tt>	 find a pep 302 loader object for fullname if fullname contains dots path must be the containing package 's __path__
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legfit)</tt>	 least squares fit of legendre series to data
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(connect_ex)</tt>	 connects to remote addr and then wraps the connection in an ssl channel
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(map)</tt>	 query or sets dynamic values of the specified option s in style
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebadd)</tt>	 add one chebyshev series to another
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(liberal_is_HDN)</tt>	 return true if text is a sort-of-like a host domain name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermevander2d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(mkdir)</tt>	 create a directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polyfit)</tt>	 least squares polynomial fit
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(normcase)</tt>	 normalize case of pathname
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getmembers)</tt>	 return all members of an object as name value pairs sorted by name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(vander)</tt>	 generate a vandermonde matrix
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(tanh)</tt>	 return the hyperbolic tangent of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(frombuffer)</tt>	 interpret a buffer as a 1-dimensional array
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(parse_config_h)</tt>	 parse a config
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(getbuffer)</tt>	 create a buffer object from the given object referencing a slice of length size starting at offset
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(I)</tt>	 returns the multiplicative inverse of invertible self
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(sort)</tt>	 stable sort *in place*
<tt style='background-color:#E8E8E8;'> <a href=''>f.n.m.a.t.c.h</a>(fnmatchcase)</tt>	 test whether filename matches pattern including case
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.t.t.e.s.t</a>(skipUnless)</tt>	 skip a test unless the condition is true
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.c.O.S</a>(WMAvailable)</tt>	 true if this process can interact with the display
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.p.i.l.e.a.l.l</a>(compile_file)</tt>	 byte-compile one file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(laplace)</tt>	 draw samples from the laplace or double exponential distribution with specified location or mean and scale decay
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(as_tuple)</tt>	 represents the number as a triple tuple
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.r.m.i.o.s</a>(tcsendbreak)</tt>	 send a break on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>p.w.d</a>(getpwall)</tt>	 return a list of all available password database entries in arbitrary order
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(theme_settings)</tt>	 temporarily sets the current theme to themename apply specified settings and then restore the previous theme
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(proxy_bypass_macosx_sysconf)</tt>	 return true iff this host shouldn't be accessed using a proxy
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(time2isoz)</tt>	 return a string representing time in seconds since epoch t
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(heappush)</tt>	 push item onto heap maintaining the heap invariant
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(getnames)</tt>	 return the members of the archive as a list of their names
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanvar)</tt>	 compute the variance along the specified axis while ignoring nans
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(exit)</tt>	 exit the interpreter by raising systemexit status
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.r.c.a.c.h.e</a>(listdir)</tt>	 list directory contents using cache
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(clearstamp)</tt>	 delete stamp with given stampid
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(utcfromtimestamp)</tt>	 utc datetime from a posix timestamp like time
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(connect)</tt>	 connects to remote addr and then wraps the connection in an ssl channel
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(tostring)</tt>	 construct python bytes containing the raw data bytes in the array
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(tee)</tt>	 > tuple of n independent iterators
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(clear)</tt>	 remove all elements from this set
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.f.i.l.e</a>(open)</tt>	 public routine to open a file as a posixfile object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(lower)</tt>	 return an array with the elements converted to lowercase
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.E.x.t.F.i.l.e</a>(peek)</tt>	 returns buffered bytes without advancing the position
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(fit)</tt>	 least squares fit to data
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(remove)</tt>	 remove an element from a set
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(st2list)</tt>	 creates a list-tree representation of an st
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(ljust)</tt>	 return s left-justified in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(format)</tt>	 return a formatted version of s using substitutions from args and kwargs
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(pinv)</tt>	 compute the moore-penrose pseudo-inverse of a matrix
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(tolist)</tt>	 convert array to an ordinary list with the same items
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...H.T.M.L.C.a.l.e.n.d.a.r</a>(formatyear)</tt>	 return a formatted year as a table of tables
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(title)</tt>	 return a titlecased version of b i
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(config_dict)</tt>	 convert content of config-file into dictionary
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(lchown)</tt>	 change the owner and group id of path to the numeric uid and gid
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermvander3d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(pause)</tt>	 wait until a signal arrives
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...B.a.s.e.S.e.t</a>(intersection)</tt>	 return the intersection of two sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(join)</tt>	 return a string which is the concatenation of the strings in the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(ljust)</tt>	 return s left-justified in a unicode string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(closerange)</tt>	 closes all file descriptors in [fd_low fd_high, ignoring errors
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(keys)</tt>	 list of d 's keys
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(ast2tuple)</tt>	 creates a tuple-tree representation of an st
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(row_stack)</tt>	 stack arrays in sequence vertically row wise
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(exists)</tt>	 test whether a path exists
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(phase)</tt>	 return argument also known as the phase angle of a complex
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(split)</tt>	 split an array into multiple sub-arrays
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(T)</tt>	 returns the transpose of the matrix
<tt style='background-color:#E8E8E8;'> <a href=''>T.k.i.n.t.e.r</a>(NoDefaultRoot)</tt>	 inhibit setting of default root window
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermefromroots)</tt>	 generate a hermitee series with given roots
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.e.l.v.e</a>(Unpickler)</tt>	 create an unpickler
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebvander3d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>f.t.p.l.i.b</a>(ftpcp)</tt>	 copy file from one ftp-instance to another
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(vonmisesvariate)</tt>	 circular data distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_string_equal)</tt>	 test if two strings are equal
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isgenerator)</tt>	 return true if the object is a generator
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polygrid3d)</tt>	 evaluate a 3-d polynomial on the cartesian product of x y and z
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(getpen)</tt>	 return the turtleobject itself
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...u.f.u.n.c</a>(at)</tt>	 performs unbuffered in place operation on operand ‘a’ for elements specified by ‘indices’
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(viewitems)</tt>	 a set-like object providing a view on od 's items
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.o.z.e.n.s.e.t</a>(issuperset)</tt>	 report whether this set contains another set
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(penup)</tt>	 pull the pen up -- no drawing when moving
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polyval)</tt>	 evaluate a polynomial at specific values
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(mime_decode)</tt>	 decode a single line of quoted-printable text to 8bit
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(mul)</tt>	 same as a * b
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_tiff)</tt>	 tiff can be in motorola or intel byte order
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(byteswap)</tt>	 swap the bytes of the array elements
<tt style='background-color:#E8E8E8;'> <a href=''>_.h.a.s.h.l.i.b</a>(openssl_sha1)</tt>	 returns a sha1 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.t.t.e.s.t</a>(skipIf)</tt>	 skip a test if the condition is true
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(writedoc)</tt>	 write html documentation to a file in the current directory
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(copy_sign)</tt>	 returns self with the sign of other
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(factorial)</tt>	 integral find x !
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(asctime)</tt>	 convert a time tuple to a string eg 'sat jun 06 16:26:11 1998'
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(uniform)</tt>	 draw samples from a uniform distribution
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WIFSTOPPED)</tt>	 return true if the process returning status was stopped
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(decode)</tt>	 decode a file
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(find)</tt>	 return the lowest index in s where substring sub is found such that sub is contained within s[startend]
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(ycor)</tt>	 return the turtle 's y coordinate --- no arguments
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.r.s.h.a.l</a>(dump)</tt>	 write the value on the open file
<tt style='background-color:#E8E8E8;'> <a href=''>w.e.a.k.r.e.f</a>(getweakrefs)</tt>	 return a list of all weak reference objects
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(remove)</tt>	 remove first occurrence of value
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getclasstree)</tt>	 arrange the given list of classes into a hierarchy of nested lists
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(theme_names)</tt>	 returns a list of all known themes
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(index)</tt>	 like find but raises valueerror when the substring is not found
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(radians)</tt>	 convert angles from degrees to radians
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(close)</tt>	 closes the cursor
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(expovariate)</tt>	 exponential distribution
<tt style='background-color:#E8E8E8;'> <a href=''>w.a.r.n.i.n.g.s</a>(warn)</tt>	 issue a warning or maybe ignore it or raise an exception
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(ilshift)</tt>	 same as a <<= b
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(lstrip)</tt>	 strip leading bytes contained in the argument
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e.i.t</a>(default_timer)</tt>	 return the current time in seconds since the epoch
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legfromroots)</tt>	 generate a legendre series with given roots
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(fftn)</tt>	 compute the n-dimensional discrete fourier transform
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.r.e</a>(nextafter)</tt>	 return the next floating-point value after x1 towards x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>p.t.y</a>(openpty)</tt>	 open a pty master/slave pair using os
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getcwd)</tt>	 return a string representing the current working directory
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(append)</tt>	 add an element to the right side of the deque
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polyint)</tt>	 return an antiderivative indefinite integral of a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(findCaller)</tt>	 find the stack frame of the caller so that we can note the source file name line number and function name
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.e.t.o.o.l.s</a>(encode)</tt>	 encode common content-transfer-encodings base64 quopri uuencode
<tt style='background-color:#E8E8E8;'> <a href=''>g.l.o.b</a>(glob)</tt>	 return a list of paths matching a pathname pattern
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(write)</tt>	 tofile f write all items as machine values to the file object f
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(max_mag)</tt>	 compares the values numerically with their sign ignored
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(bgpic)</tt>	 set background image or return name of current backgroundimage
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isroutine)</tt>	 return true if the object is any kind of function or method
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.I.n.f.o</a>(tobuf)</tt>	 return a tar header as a string of 512 byte blocks
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(mean)</tt>	 compute the arithmetic mean along the specified axis
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(find)</tt>	 return the lowest index in s where substring sub is found such that sub is contained within s[startend]
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_config_vars)</tt>	 with no arguments return a dictionary of all configuration variables relevant for the current platform
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(setprofile)</tt>	 set a profile function for all threads started from the threading module
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(exp)</tt>	 return the exponential value e**x
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(set_progress_handler)</tt>	 sets progress handler callback
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(hex)</tt>	 return the hexadecimal representation of an integer or long integer
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeline)</tt>	 hermite series whose graph is a straight line
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermepow)</tt>	 raise a hermite series to a power
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(localeconv)</tt>	 returns numeric and monetary locale-specific parameters
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(signbit)</tt>	 returns element-wise true where signbit is set less than zero
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(WIFCONTINUED)</tt>	 return true if the process returning status was continued from a job control stop
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(ctypes)</tt>	 an object to simplify the interaction of the array with the ctypes module
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(utctimetuple)</tt>	 return utc time tuple compatible with time
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.m.t.a.b.l.e...S.y.m.b.o.l</a>(get_namespace)</tt>	 returns the single namespace bound to this name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(shuffle)</tt>	 modify a sequence in-place by shuffling its contents
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(ljust)</tt>	 return an array with the elements of a left-justified in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_snan)</tt>	 return true if the operand is a signaling nan
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.o.o.l.s</a>(nice)</tt>	 nice representation of an object
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.I.n.f.o</a>(create_gnu_header)</tt>	 return the object as a gnu header block sequence
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(write)</tt>	 write a string to a file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(meshgrid)</tt>	 return coordinate matrices from coordinate vectors
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(isspace)</tt>	 returns true for each element if there are only whitespace characters in the string and there is at least one character false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(mime_encode_header)</tt>	 code a single header line as quoted-printable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(standard_gamma)</tt>	 draw samples from a standard gamma distribution
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(inv)</tt>	 same as ~ a
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polypow)</tt>	 raise a polynomial to a power
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.i.l.e.H.a.n.d.l.e.r</a>(close)</tt>	 closes the stream
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(request_host)</tt>	 return request-host as defined by rfc 2965
<tt style='background-color:#E8E8E8;'> <a href=''>_.s.s.l</a>(RAND_add)</tt>	 rand_add string entropy mix string into the openssl prng state
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(set_fill_value)</tt>	 set the filling value of a if a is a masked array
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(max)</tt>	 with a single iterable argument return its largest item
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lag2poly)</tt>	 convert a laguerre series to a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g...d.e.c.o.r.a.t.o.r.s</a>(deprecated)</tt>	 filter deprecation warnings while running the test suite
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(addpackage)</tt>	 process a pth file within the site-packages directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermefit)</tt>	 least squares fit of hermite series to data
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(makeRecord)</tt>	 a factory method which can be overridden in subclasses to create specialized logrecords
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(vstack)</tt>	 stack arrays in sequence vertically row wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagpow)</tt>	 raise a laguerre series to a power
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(view)</tt>	 new view of array with the same data
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(trim)</tt>	 remove trailing coefficients
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(addHandler)</tt>	 add the specified handler to this logger
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(hfft)</tt>	 compute the fft of a signal that has hermitian symmetry i
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Event)</tt>	 returns an event object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(count)</tt>	 count the non-masked elements of the array along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(prmonth)</tt>	 print a month 's calendar
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(isdata)</tt>	 check if an object is of a type that probably means it 's data
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(getproxies_macosx_sysconf)</tt>	 this function uses the macosx framework systemconfiguration to fetch the proxy information
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(cos)</tt>	 cosine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(request_host)</tt>	 return request-host as defined by rfc 2965
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(popitem)</tt>	 k v, return and remove a key value pair
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e</a>(find_lines_from_code)</tt>	 return dict where keys are lines in the line number table
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...t.e.s.t.i.n.g</a>(assert_array_almost_equal_nulp)</tt>	 compare two arrays relatively to their spacing
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(chroot)</tt>	 change root directory to path
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(make_identity_dict)</tt>	 return a dictionary where elements of the rng sequence are mapped to themselves
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(fetchone)</tt>	 fetches one row from the resultset
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(log1p)</tt>	 return the natural logarithm of one plus the input array element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_pgm)</tt>	 pgm portable graymap
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(get_count)</tt>	 return the current collection counts
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(cheb2poly)</tt>	 convert a chebyshev series to a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>i.h.o.o.k.s</a>(warn)</tt>	 issue a warning or maybe ignore it or raise an exception
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebgauss)</tt>	 gauss-chebyshev quadrature
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(fromunicode)</tt>	 extends this array with data from the unicode string ustr
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.m.t.a.b.l.e...S.y.m.b.o.l</a>(is_namespace)</tt>	 returns true if name binding introduces new namespace
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(cutdeg)</tt>	 truncate series to the given degree
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(getdecoder)</tt>	 lookup up the codec for the given encoding and return its decoder function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(logspace)</tt>	 return numbers spaced evenly on a log scale
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3</a>(enable_callback_tracebacks)</tt>	 enable or disable callback functions throwing errors to stderr
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(readline)</tt>	 return the next line from the file as a string retaining newline
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(executemany)</tt>	 repeatedly executes a sql statement
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(initgroups)</tt>	 call the system initgroups to initialize the group access list with all of the groups of which the specified username is a member plus the specified group id
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagtrim)</tt>	 remove “small” “trailing” coefficients from a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(exponential)</tt>	 draw samples from an exponential distribution
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(copytree)</tt>	 recursively copy a directory tree using copy2
<tt style='background-color:#E8E8E8;'> <a href=''>z.l.i.b</a>(compressobj)</tt>	 return a compressor object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermgrid2d)</tt>	 evaluate a 2-d hermite series on the cartesian product of x and y
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(count)</tt>	 return the number of occurrences of substring sub in string s[start:end]
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(compileast)</tt>	 compiles an st object into a code object
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(processor)</tt>	 returns the true processor name
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(gettrace)</tt>	 return the global debug tracing function set with sys
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(min)</tt>	 return the minimum value along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(copyfile)</tt>	 copy data from src to dst
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(chararray)</tt>	 provides a convenient view on arrays of string and unicode values
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(flush)</tt>	 flush the internal i/o buffer
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.n.e.r.i.c.p.a.t.h</a>(getmtime)</tt>	 return the last modification time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(b32encode)</tt>	 encode a string using base32
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(sub)</tt>	 return the string obtained by replacing the leftmost non-overlapping occurrences of the pattern in string by the replacement repl
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(formatargspec)</tt>	 format an argument spec from the 4 values returned by getargspec
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(herme2poly)</tt>	 convert a hermite series to a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.r.m.i.o.s</a>(tcflush)</tt>	 discard queued data on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(poly)</tt>	 find the coefficients of a polynomial with the given sequence of roots
<tt style='background-color:#E8E8E8;'> <a href=''>m.d.5</a>(new)</tt>	 returns a md5 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(compare_signal)</tt>	 compares the values of the two operands numerically
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.c.m.p</a>(cmpfiles)</tt>	 compare common files in two directories
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(copy_location)</tt>	 copy source location lineno and col_offset attributes from *old_node* to *new_node* if possible and return *new_node*
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(exc_info)</tt>	 return information about the most recent exception caught by an except clause in the current stack frame or in an older stack frame
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(diagonal)</tt>	 return specified diagonals
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(fft2)</tt>	 compute the 2-dimensional discrete fourier transform
<tt style='background-color:#E8E8E8;'> <a href=''>g.z.i.p...G.z.i.p.F.i.l.e</a>(rewind)</tt>	 return the uncompressed stream file position indicator to the beginning of the file
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(delitem)</tt>	 same as del a[b]
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnvpe)</tt>	 execute file which is looked for along $path with arguments from args in a subprocess with the supplied environment
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(get_objects)</tt>	 return a list of objects tracked by the collector excluding the list returned
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(npv)</tt>	 returns the npv net present value of a cash flow series
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(width)</tt>	 set or return the line thickness
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(getprotobyname)</tt>	 return the protocol number for the named protocol
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebvander)</tt>	 pseudo-vandermonde matrix of given degree
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnv)</tt>	 execute file with arguments from args in a subprocess
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(urlunparse)</tt>	 put a parsed url back together again
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(genfromtxt)</tt>	 load data from a text file with missing values handled as specified
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(astimezone)</tt>	 convert to local time in new timezone tz
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(disable)</tt>	 disable automatic garbage collection
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Array)</tt>	 returns a synchronized shared array
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(gammavariate)</tt>	 gamma distribution
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(copy2)</tt>	 copy data and all stat info cp -p src dst
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(ftperrors)</tt>	 return the set of errors raised by the ftp class
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(getitem)</tt>	 same as a[b]
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e...H.e.r.m.i.t.e.E</a>(basis)</tt>	 series basis polynomial of degree deg
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(urlencode)</tt>	 encode a sequence of two-element tuples or dictionary into a url query string
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(getreader)</tt>	 lookup up the codec for the given encoding and return its streamreader class or factory function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermegrid2d)</tt>	 evaluate a 2-d hermitee series on the cartesian product of x and y
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(encodestring)</tt>	 encode a string into multiple lines of base-64 data
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fstatvfs)</tt>	 perform an fstatvfs system call on the given fd
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(randrange)</tt>	 choose a random item from range start stop step
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(compare_signal)</tt>	 compares self to the other operand numerically
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(gamma)</tt>	 draw samples from a gamma distribution
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isgeneratorfunction)</tt>	 return true if the object is a user-defined generator function
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(getvalue)</tt>	 get the string value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(array_equal)</tt>	 true if two arrays have the same shape and elements false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(atan)</tt>	 return the arc tangent measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(ord)</tt>	 return the integer ordinal of a one-character string
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(print_form)</tt>	 dump the contents of a form as html
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.a.p.l.i.b</a>(ParseFlags)</tt>	 convert imap4 flags response to python tuple
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(itruediv)</tt>	 same as a /= b when __future__.division is in effect
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagval2d)</tt>	 evaluate a 2-d laguerre series at points x y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermcompanion)</tt>	 return the scaled companion matrix of c
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(abs)</tt>	 returns the absolute value of the operand
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...E.x.F.i.l.e.O.b.j.e.c.t</a>(seek)</tt>	 seek to a position in the file
<tt style='background-color:#E8E8E8;'> <a href=''>f.r.o.z.e.n.s.e.t</a>(isdisjoint)</tt>	 return true if two sets have a null intersection
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(dumps)</tt>	 returns the pickle of the array as a string
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r.A.d.a.p.t.e.r</a>(isEnabledFor)</tt>	 see if the underlying logger is enabled for the specified level
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Value)</tt>	 returns a synchronized shared object
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(discard)</tt>	 remove an element from a set if it is a member
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(rjust)</tt>	 return s right-justified in a string of length width
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.r.c.a.c.h.e</a>(reset)</tt>	 reset the cache completely
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Manager)</tt>	 returns a manager associated with a running server process
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(tanh)</tt>	 return the hyperbolic tangent of x
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(literal_eval)</tt>	 safely evaluate an expression node or a string containing a python expression
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(RandomState)</tt>	 container for the mersenne twister pseudo-random number generator
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.m.a.n.d.s</a>(getoutput)</tt>	 return output stdout or stderr of executing cmd in a shell
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(count)</tt>	 return number of occurrences of value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(view)</tt>	 new view of array with the same data
<tt style='background-color:#E8E8E8;'> <a href=''>c.P.i.c.k.l.e</a>(dumps)</tt>	 return a string containing an object in pickle format
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(eq)</tt>	 same as a == b
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(shutdown)</tt>	 perform any cleanup actions in the logging system
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(outer)</tt>	 compute the outer product of two vectors
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.s.k.e.d.A.r.r.a.y</a>(soften_mask)</tt>	 force the mask to soft
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(deepvalues)</tt>	 iterates over nested mapping depth-first in sorted order by key
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(spawnle)</tt>	 execute file with arguments from args in a subprocess with the supplied environment
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(itervalues)</tt>	 an iterator over the values of d
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(getI)</tt>	 returns the multiplicative inverse of invertible self
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(matrix)</tt>	 returns a matrix from an array-like object or from a string of data
<tt style='background-color:#E8E8E8;'> <a href=''>u.u.i.d</a>(uuid5)</tt>	 generate a uuid from the sha-1 hash of a namespace uuid and a name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arccos)</tt>	 trigonometric inverse cosine element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagline)</tt>	 laguerre series whose graph is a straight line
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...B.a.s.e.S.e.t</a>(copy)</tt>	 return a shallow copy of a set
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(acosh)</tt>	 return the hyperbolic arc cosine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(now)</tt>	 new datetime with tz 's local day and time
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(print_directory)</tt>	 dump the current directory as html
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(move)</tt>	 recursively move a file or directory to another location
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(find)</tt>	 return the lowest index in b where subsection sub is found such that sub is contained within b[startend]
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(getA1)</tt>	 return self as a flattened ndarray
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(pop)</tt>	 item -- remove and return item at index
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(title)</tt>	 return a titlecased version of s i
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(format)</tt>	 format the specified record
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legpow)</tt>	 raise a legendre series to a power
<tt style='background-color:#E8E8E8;'> <a href=''>f.t.p.l.i.b</a>(print_line)</tt>	 default retrlines callback to print a line
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(center)</tt>	 return a center version of s in a field of the specified width
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(statvfs)</tt>	 perform a statvfs system call on the given path
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(quote)</tt>	 each part of a url
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(render_doc)</tt>	 render text documentation given an object or a path to an object
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(close)</tt>	 explicitly release resources held
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebfromroots)</tt>	 generate a chebyshev series with given roots
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(delattr)</tt>	 delete a named attribute on an object
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(relpath)</tt>	 return a relative version of a path
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(extend)</tt>	 append all the elements from the iterator or sequence to the end of b
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(towards)</tt>	 return the angle of the line from the turtle 's position to x y
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(siginterrupt)</tt>	 change system call restart behaviour: if flag is false system calls will be restarted when interrupted by signal sig else system calls will be interrupted
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_normal)</tt>	 return true if the operand is a normal number
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(ttyname)</tt>	 return the name of the terminal device connected to fd
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(tempfilepager)</tt>	 page through text by invoking a program on a temporary file
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(isabstract)</tt>	 return true if the object is an abstract base class abc
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e</a>(partition)</tt>	 search for the separator sep in s and return the part before it the separator itself and the part after it
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(east_asian_width)</tt>	 returns the east asian width assigned to the unicode character unichr as string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(empty)</tt>	 return a new array of given shape and type without initializing entries
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(initlog)</tt>	 write a log message if there is a log file
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(compare)</tt>	 compares one to another
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(modf)</tt>	 return the fractional and integer parts of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(recarray)</tt>	 construct an ndarray that allows field access using attributes
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(strcoll)</tt>	 compares two strings according to the locale
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...n.d.i.t.e.r</a>(iternext)</tt>	 check whether iterations are left and perform a single internal iteration without returning the result
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(match)</tt>	 try to apply the pattern at the start of the string returning a match object or none if no match was found
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(PEM_cert_to_DER_cert)</tt>	 takes a certificate in ascii pem format and returns the der-encoded version of it as a byte sequence
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.c.l.b.r</a>(readmodule_ex)</tt>	 read a module file and return a dictionary of classes
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(viewkeys)</tt>	 a set-like object providing a view on od 's keys
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l</a>(get_server_certificate)</tt>	 retrieve the certificate from the server at the specified address and return it as a pem-encoded string
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(le)</tt>	 same as a <= b
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(copyfileobj)</tt>	 copy length bytes from fileobj src to fileobj dst
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s...I.n.c.r.e.m.e.n.t.a.l.D.e.c.o.d.e.r</a>(setstate)</tt>	 set the current state of the decoder
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.n.e.r.i.c.p.a.t.h</a>(exists)</tt>	 test whether a path exists
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Pool)</tt>	 returns a process pool object
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(isoformat)</tt>	 iso 8601 format yyyy-mm-ddthh:mm:ss[
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(cmp)</tt>	 return negative if x<y zero if x == y positive if x>y
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagfit)</tt>	 least squares fit of laguerre series to data
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(seterr)</tt>	 set how floating-point errors are handled
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(atoi)</tt>	 converts a string to an integer according to the locale settings
<tt style='background-color:#E8E8E8;'> <a href=''>w.a.r.n.i.n.g.s</a>(warn_explicit)</tt>	 low-level inferface to warnings functionality
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(formatweekheader)</tt>	 return a header for a week
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...T.e.x.t.C.a.l.e.n.d.a.r</a>(pryear)</tt>	 print a year 's calendar
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(isabs)</tt>	 return true if a path is absolute
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e</a>(clock)</tt>	 return the cpu time or real time since the start of the process or since the first call to clock
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(compressed)</tt>	 return all the non-masked data as a 1-d array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(iscomplex)</tt>	 returns a bool array where true if input element is complex
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t...N.o.d.e.V.i.s.i.t.o.r</a>(generic_visit)</tt>	 called if no explicit visitor function exists for a node
<tt style='background-color:#E8E8E8;'> <a href=''>p.r.o.p.e.r.t.y</a>(deleter)</tt>	 descriptor to change the deleter on a property
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(setpos)</tt>	 move turtle to an absolute position
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(is_tracked)</tt>	 returns true if the object is tracked by the garbage collector
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(iscontiguous)</tt>	 return a boolean indicating whether the data is contiguous
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.c.O.S</a>(GetTicks)</tt>	 return number of ticks since bootup
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isrealobj)</tt>	 return true if x is a not complex type or an array of complex numbers
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(notmasked_contiguous)</tt>	 find contiguous unmasked data in a masked array along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(flatten)</tt>	 return a copy of the array collapsed into one dimension
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(choose)</tt>	 construct an array from an index array and a set of arrays to choose from
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(BoundedSemaphore)</tt>	 returns a bounded semaphore object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(bmat)</tt>	 build a matrix object from a string nested sequence or array
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getlogin)</tt>	 return the actual login name
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(rfftfreq)</tt>	 return the discrete fourier transform sample frequencies for usage with rfft irfft
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_finite)</tt>	 return true if the operand is finite
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(pensize)</tt>	 set or return the line thickness
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(rename)</tt>	 rename a file or directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanstd)</tt>	 compute the standard deviation along the specified axis while ignoring nans
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(set_debug)</tt>	 set the garbage collection debugging flags
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(fabs)</tt>	 return the absolute value of the float x
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(ismount)</tt>	 test whether a path is a mount point
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(splitlines)</tt>	 for each element in a return a list of the lines in the element breaking at line boundaries
<tt style='background-color:#E8E8E8;'> <a href=''>i.o</a>(open)</tt>	 open file and return a stream
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(has_samedomain)</tt>	 check if domains match
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermfit)</tt>	 least squares fit of hermite series to data
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(getsize)</tt>	 return the size of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(rollback)</tt>	 roll back the current transaction
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(writelines)</tt>	 write the strings to the file
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(jumpahead)</tt>	 change the internal state to one that is likely far away from the current state
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...W.i.c.h.m.a.n.n.H.i.l.l</a>(getstate)</tt>	 return internal state
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(degrees)</tt>	 convert angle x from radians to degrees
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(flatnotmasked_edges)</tt>	 find the indices of the first and last unmasked values
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.s.e.c.t</a>(bisect_right)</tt>	 return the index where to insert item x in list a assuming a is sorted
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.p.e.n.2</a>(popen2)</tt>	 execute the shell command cmd in a sub-process
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(lchmod)</tt>	 change the access permissions of a file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(broadcast)</tt>	 produce an object that mimics broadcasting
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(moveaxis)</tt>	 move axes of an array to new positions
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legadd)</tt>	 add one legendre series to another
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(DocFileSuite)</tt>	 a unittest suite for one or more doctest files
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermint)</tt>	 integrate a hermite series
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(isdir)</tt>	 return true if the pathname refers to an existing directory
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(piecewise)</tt>	 evaluate a piecewise-defined function
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(lt)</tt>	 same as a < b
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(stack_size)</tt>	 return the thread stack size used when creating new threads
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(keys)</tt>	 list of keys in od
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(median)</tt>	 compute the median along the specified axis
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(setlocale)</tt>	 set the locale for the given category
<tt style='background-color:#E8E8E8;'> <a href=''>w.a.r.n.i.n.g.s</a>(warnpy3k)</tt>	 issue a deprecation warning for python 3
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.f.a.u.l.t.d.i.c.t</a>(copy)</tt>	 a shallow copy of d
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(openpty)</tt>	 open a pseudo-terminal returning open fd 's for both master and slave end
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(win32_ver)</tt>	 get additional version information from the windows registry
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(ipow)</tt>	 same as a ** = b
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(ftruncate)</tt>	 truncate a file to a specified length
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(roots)</tt>	 return the roots of a polynomial with coefficients given in p
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(tobytes)</tt>	 construct python bytes containing the raw data bytes in the array
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b</a>(readPlist)</tt>	 read a plist file
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(max_mag)</tt>	 compares the values numerically with their sign ignored
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(in1d)</tt>	 test whether each element of a 1-d array is also present in a second array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(getT)</tt>	 returns the transpose of the matrix
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e</a>(compile_command)</tt>	 compile a command and determine whether it is incomplete
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(empty_like)</tt>	 return a new array with the same shape and type as a given array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(logseries)</tt>	 draw samples from a logarithmic series distribution
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(getwriter)</tt>	 lookup up the codec for the given encoding and return its streamwriter class or factory function
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(parse)</tt>	 parse the source into an ast node
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(ljust)</tt>	 return a left-justified version of s in a field of the specified width padded with spaces as needed
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.e.t.y.p.e.s</a>(guess_type)</tt>	 guess the type of a file based on its url
<tt style='background-color:#E8E8E8;'> <a href=''>c.P.i.c.k.l.e</a>(loads)</tt>	 load a pickle from the given string
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(splitext)</tt>	 split the extension from a pathname
<tt style='background-color:#E8E8E8;'> <a href=''>d.u.m.b.d.b.m</a>(open)</tt>	 open the database file filename and return corresponding object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(get_real)</tt>	 return the real part of the masked array
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(same_quantum)</tt>	 return true if self and other have the same exponent
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(is_HDN)</tt>	 return true if text is a host domain name
<tt style='background-color:#E8E8E8;'> <a href=''>p.p.r.i.n.t</a>(isreadable)</tt>	 determine if saferepr object is readable by eval
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(randn)</tt>	 return a sample or samples from the “standard normal” distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(around)</tt>	 evenly round to the given number of decimals
<tt style='background-color:#E8E8E8;'> <a href=''>s.m.t.p.l.i.b</a>(encode)</tt>	 encode a string with base64
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(current_process)</tt>	 return process object representing the current process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(min)</tt>	 return the minimum along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(close)</tt>	 close the sequence
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(to_sci_string)</tt>	 converts a number to a string using scientific notation
<tt style='background-color:#E8E8E8;'> <a href=''>M.a.c.O.S</a>(SetCreatorAndType)</tt>	 set macos 4-char creator and type for a file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(logical_or)</tt>	 compute the truth value of x1 or x2 element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>f.n.m.a.t.c.h</a>(filter)</tt>	 return the subset of the list names that match pat
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(index)</tt>	 same as a
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.l.e.c.t...k.q.u.e.u.e</a>(control)</tt>	 calls the kernel kevent function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isfinite)</tt>	 test element-wise for finiteness not infinity or not not a number
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s.c.o.n.f.i.g</a>(get_config_var)</tt>	 return the value of a single variable using the dictionary returned by 'get_config_vars '
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(print_list)</tt>	 print the list of tuples as returned by extract_tb or extract_stack as a formatted stack trace to the given file
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.I</a>(readlines)</tt>	 read all lines
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(torecords)</tt>	 transforms a masked array into a flexible-type array
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(IS_CHARACTER_JUNK)</tt>	 return 1 for ignorable character: iff ch is a space or tab
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d...l.o.c.k</a>(release)</tt>	 release the lock allowing another thread that is blocked waiting for the lock to acquire the lock
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(append)</tt>	 append values to the end of an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(set_state)</tt>	 set the internal state of the generator from a tuple
<tt style='background-color:#E8E8E8;'> <a href=''>f.p.f.o.r.m.a.t</a>(sci)</tt>	 format x as [-]d
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(setposition)</tt>	 move turtle to an absolute position
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(filemode)</tt>	 convert a file 's mode to a string of the form -rwxrwxrwx
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(ldexp)</tt>	 return x * 2 ** i
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(flip)</tt>	 reverse the order of elements in an array along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.m.p.f.i.l.e</a>(gettempdir)</tt>	 accessor for tempfile
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(clear)</tt>	 remove all items from od
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(pop)</tt>	 remove and return an arbitrary set element
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.u.t.i.l</a>(ignore_patterns)</tt>	 function that can be used as copytree ignore parameter
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(masked_where)</tt>	 mask an array where a condition is met
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s...I.n.c.r.e.m.e.n.t.a.l.E.n.c.o.d.e.r</a>(setstate)</tt>	 set the current state of the encoder
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(histogram2d)</tt>	 compute the bi-dimensional histogram of two data samples
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(fromstring)</tt>	 appends items from the string interpreting it as an array of machine valuesas if it had been read from a file using the fromfile method
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.p.l.e.x</a>(conjugate)</tt>	 returns the complex conjugate of its argument
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(realpath)</tt>	 return the canonical path of the specified filename eliminating any symbolic links encountered in the path
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k</a>(tclobjs_to_py)</tt>	 returns adict with its values converted from tcl objects to python objects
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.n.e.c.a.c.h.e</a>(clearcache)</tt>	 clear the cache entirely
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getmro)</tt>	 return tuple of base classes including cls in method resolution order
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(set_fill_value)</tt>	 set the filling value of the masked array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.n.a.l.g</a>(slogdet)</tt>	 compute the sign and natural logarithm of the determinant of an array
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(currency)</tt>	 formats val according to the currency settings in the current locale
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(poly2herm)</tt>	 convert a polynomial to a hermite series
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(expandtabs)</tt>	 return a copy of b where all tab characters are expanded using spaces
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.s</a>(findlinestarts)</tt>	 find the offsets in a byte code which are start of lines in the source
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(turtles)</tt>	 return the list of turtles
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(normalize)</tt>	 return the normal form form for the unicode string unistr
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(splitdoc)</tt>	 split a doc string into a synopsis line if any and the rest
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(iterweekdays)</tt>	 return a iterator for one week of weekday numbers starting with the configured first one
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...l.i.b</a>(Arrayterator)</tt>	 buffered iterator for big arrays
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(format_list)</tt>	 format a list of traceback entry tuples for printing
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e</a>(itn)</tt>	 convert a python number to a number field
<tt style='background-color:#E8E8E8;'> <a href=''>r.f.c.8.2.2</a>(parseaddr)</tt>	 parse an address into a realname mailaddr tuple
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...B.a.s.e.S.e.t</a>(symmetric_difference)</tt>	 return the symmetric difference of two sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(expandtabs)</tt>	 return a copy of the string s with all tab characters replaced by the appropriate number of spaces
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(format)</tt>	 returns the locale-aware substitution of a %? specifier percent
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(parse_multipart)</tt>	 parse multipart input
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_history_item)</tt>	 string return the current contents of history item at index
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(context_diff)</tt>	 compare two sequences of lines
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i</a>(parse_qsl)</tt>	 parse a query given as a string argument
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(end_fill)</tt>	 fill the shape drawn after the call
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(acos)</tt>	 return the arc cosine of x
<tt style='background-color:#E8E8E8;'> <a href=''>d.o.c.t.e.s.t</a>(debug_script)</tt>	 debug a test script
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(remove)</tt>	 remove the first occurance of a value in b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(lognormal)</tt>	 draw samples from a log-normal distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(floor)</tt>	 return the floor of x as a float
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.l.e.x</a>(StringIO)</tt>	 return a stringio-like stream for reading or writing
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(multinomial)</tt>	 draw samples from a multinomial distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(repeat)</tt>	 repeat elements of an array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(getdata)</tt>	 return the data of a masked array as an ndarray
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermesub)</tt>	 subtract one hermite series from another
<tt style='background-color:#E8E8E8;'> <a href=''>u.f.u.n.c</a>(types)</tt>	 returns a list with types grouped input->output
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sum)</tt>	 sum of array elements over a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(extractall)</tt>	 extract all members from the archive to the current working directory
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(needsquoting)</tt>	 decide whether a particular character needs to be quoted
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(python_revision)</tt>	 returns a string identifying the python implementation revision
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(back)</tt>	 move the turtle backward by distance
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(python_build)</tt>	 returns a tuple buildno builddate stating the python build number and date as strings
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.t.e</a>(getusersitepackages)</tt>	 returns the user-specific site-packages directory path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sort)</tt>	 return a sorted copy of an array
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(executemany)</tt>	 repeatedly executes a sql statement
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(zfill)</tt>	 pad a numeric string x with zeros on the left to fill a field of the specified width
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.i.f.y</a>(mime_decode_header)</tt>	 decode a header line to 8bit
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i.t.b</a>(scanvars)</tt>	 scan one logical line of python and look up values of variables used
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(divide)</tt>	 divide arguments element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>c.m.a.t.h</a>(log10)</tt>	 return the base-10 logarithm of x
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execv)</tt>	 execute an executable path with arguments replacing current process
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(version)</tt>	 returns the system 's release version
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(mask_indices)</tt>	 return the indices to access n n arrays given a masking function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(standard_cauchy)</tt>	 draw samples from a standard cauchy distribution with mode = 0
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(getEffectiveLevel)</tt>	 get the effective level for this logger
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(delslice)</tt>	 same as del a[b:c]
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(popen3)</tt>	 execute the shell command cmd in a sub-process
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(ifft)</tt>	 compute the one-dimensional inverse discrete fourier transform
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(colormode)</tt>	 return the colormode or set it to 1
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.o.r.m.a.t.t.e.r</a>(format)</tt>	 format the specified record as text
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(binary_repr)</tt>	 return the binary representation of the input number as a string
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(sample)</tt>	 chooses k unique random elements from a population sequence
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.s</a>(disassemble)</tt>	 disassemble a code object
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(count)</tt>	 return the number of non-overlapping occurrences of substring sub in string s[start:end]
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(release_lock)</tt>	 release the interpreter 's import lock
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(set_pre_input_hook)</tt>	 set or remove the pre_input_hook function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(max)</tt>	 return the maximum along a given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(kron)</tt>	 kronecker product of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.a</a>(sha)</tt>	 returns a sha1 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.m.p.f.i.l.e</a>(gettempprefix)</tt>	 accessor for tempdir
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(mapparms)</tt>	 return the mapping parameters
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(b16encode)</tt>	 encode a string using base16
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.o.s.t.o.o.l.s</a>(touched)</tt>	 tell the finder a file has changed
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(getattr)</tt>	 get a named attribute from an object
<tt style='background-color:#E8E8E8;'> <a href=''>c.P.i.c.k.l.e</a>(load)</tt>	 load a pickle from the given file
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(pathconf)</tt>	 return the configuration limit name for the file or directory path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(getbufsize)</tt>	 return the size of the buffer used in ufuncs
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(eye)</tt>	 return a 2-d array with ones on the diagonal and zeros elsewhere
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(tiltangle)</tt>	 return the current tilt-angle
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(arctan2)</tt>	 element-wise arc tangent of x1/x2 choosing the quadrant correctly
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.n.e.c.a.c.h.e</a>(checkcache)</tt>	 discard cache entries that are out of date
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(polymul)</tt>	 find the product of two polynomials
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(same_quantum)</tt>	 returns true if the two operands have the same exponent
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(degrees)</tt>	 convert angles from radians to degrees
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(ismethod)</tt>	 return true if the object is an instance method
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fill_diagonal)</tt>	 fill the main diagonal of the given array of any dimensionality
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.E.x.t.F.i.l.e</a>(read)</tt>	 read and return up to n bytes
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...E.x.F.i.l.e.O.b.j.e.c.t</a>(read)</tt>	 read at most size bytes from the file
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(dst)</tt>	 return self
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(numeric)</tt>	 returns the numeric value assigned to the unicode character unichr as float
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(isvisible)</tt>	 return true if the turtle is shown false if it 's hidden
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(b32decode)</tt>	 decode a base32 encoded string
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(exp)</tt>	 returns e ** self
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(samestat)</tt>	 test whether two stat buffers reference the same file
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.p.i.l.e.a.l.l</a>(main)</tt>	 script main program
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(log)</tt>	 log 'msg % args with the integer severity level' on the root logger
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.p.i.l.e.a.l.l</a>(compile_dir)</tt>	 byte-compile all modules in the given directory tree
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e.i.t</a>(main)</tt>	 main program used when run as a script
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.i.m.e</a>(dst)</tt>	 return self
<tt style='background-color:#E8E8E8;'> <a href=''>_.m.u.l.t.i.p.r.o.c.e.s.s.i.n.g...C.o.n.n.e.c.t.i.o.n</a>(send_bytes)</tt>	 send the byte data from a readable buffer-like object
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(getmembers)</tt>	 return the members of the archive as a list of tarinfo objects
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(makefile)</tt>	 make a file called targetpath
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(count_masked)</tt>	 count the number of masked elements along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(diag_indices_from)</tt>	 return the indices to access the main diagonal of an n-dimensional array
<tt style='background-color:#E8E8E8;'> <a href=''>f.c.n.t.l</a>(ioctl)</tt>	 perform the requested operation on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(leggrid2d)</tt>	 evaluate a 2-d legendre series on the cartesian product of x and y
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(restore)</tt>	 generate one of the two sequences that generated a delta
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermeadd)</tt>	 add one hermite series to another
<tt style='background-color:#E8E8E8;'> <a href=''>z.l.i.b</a>(crc32)</tt>	 compute a crc-32 checksum of string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(exp)</tt>	 calculate the exponential of all elements in the input array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermetrim)</tt>	 remove “small” “trailing” coefficients from a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(tilt)</tt>	 rotate the turtleshape by angle
<tt style='background-color:#E8E8E8;'> <a href=''>h.m.a.c</a>(new)</tt>	 create a new hashing object and return it
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(lock_held)</tt>	 return true if the import lock is currently held else false
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(max)</tt>	 returns the larger value
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(collect)</tt>	 with no arguments run a full collection
<tt style='background-color:#E8E8E8;'> <a href=''>_.m.u.l.t.i.p.r.o.c.e.s.s.i.n.g...C.o.n.n.e.c.t.i.o.n</a>(recv_bytes)</tt>	 receive byte data as a string
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(remainder_near)</tt>	 remainder nearest to 0- abs remainder-near <= other/2
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyval3d)</tt>	 evaluate a 3-d polynomial at points x y z
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(normal)</tt>	 draw random samples from a normal gaussian distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(exp)</tt>	 return e raised to the power of x
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(scaleb)</tt>	 returns self operand after adding the second value to its exp
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(rfft2)</tt>	 compute the 2-dimensional fft of a real array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(get_state)</tt>	 return a tuple representing the internal state of the generator
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r.A.d.a.p.t.e.r</a>(process)</tt>	 process the logging message and keyword arguments passed in to a logging call to insert contextual information
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.z.i.n.f.o</a>(fromutc)</tt>	 utc -> datetime in local time
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execve)</tt>	 execute a path with arguments and environment replacing current process
<tt style='background-color:#E8E8E8;'> <a href=''>w.a.r.n.i.n.g.s</a>(resetwarnings)</tt>	 clear the list of warning filters so that no filters are active
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(intersection)</tt>	 return the intersection of two or more sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(load)</tt>	 load arrays or pickled objects from file
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(eval)</tt>	 evaluate the source in the context of globals and locals
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermemul)</tt>	 multiply one hermite series by another
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i.t.b</a>(lookup)</tt>	 find the value for a given name in the given environment
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(nsmallest)</tt>	 find the n smallest elements in a dataset
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(escape_path)</tt>	 escape any invalid characters in http url and uppercase all escapes
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(lshift)</tt>	 same as a << b
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l</a>(localcontext)</tt>	 return a context manager for a copy of the supplied context
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.i.m.e</a>(replace)</tt>	 return time with new specified fields
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(setpassword)</tt>	 set default password for encrypted files
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(replace)</tt>	 return datetime with new specified fields
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(ht)</tt>	 makes the turtle invisible
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b.2</a>(build_opener)</tt>	 create an opener object from a list of handlers
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(clear)</tt>	 remove all items from d
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagvander2d)</tt>	 pseudo-vandermonde matrix of given degrees
<tt style='background-color:#E8E8E8;'> <a href=''>b.a.s.e.6.4</a>(standard_b64decode)</tt>	 decode a string encoded with the standard base64 alphabet
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(split)</tt>	 split the source string by the occurrences of the pattern returning a list containing the resulting substrings
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(makedev)</tt>	 make a character or block device called targetpath
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(capitalize)</tt>	 return a copy of the string s with only its first character capitalized
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(time)</tt>	 return time object with same time but with tzinfo=none
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d</a>(allocate_lock)</tt>	 create a new lock object
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(quote)</tt>	 quote a single character
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(synopsis)</tt>	 get the one-line summary out of a module file
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(umask)</tt>	 set the current numeric umask and return the previous umask
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(default_fill_value)</tt>	 return the default fill value for the argument object
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fchdir)</tt>	 change to the directory of the given file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>p.t.y</a>(select)</tt>	 wait until one or more file descriptors are ready for some kind of i/o
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...d.e.q.u.e</a>(clear)</tt>	 remove all elements from the deque
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(maximum)</tt>	 element-wise maximum of array elements
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(difference_update)</tt>	 remove all elements of another set from this set
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(endswith)</tt>	 return true if s ends with the specified suffix false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getmodulename)</tt>	 return the module name for a given file or none
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(lseek)</tt>	 set the current position of a file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(take)</tt>	 take elements from an array along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(unmatched)</tt>	 return unmatched part of re
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(RAND_add)</tt>	 rand_add string entropy mix string into the openssl prng state
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(amin)</tt>	 return the minimum of an array or minimum along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(cutdeg)</tt>	 truncate series to the given degree
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebfit)</tt>	 least squares fit of chebyshev series to data
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(truth)</tt>	 return true if a is true false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(outerproduct)</tt>	 compute the outer product of two vectors
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(capitalize)</tt>	 return a copy of a with only the first character of each element capitalized
<tt style='background-color:#E8E8E8;'> <a href=''>u.f.u.n.c</a>(nin)</tt>	 the number of inputs
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(standard_exponential)</tt>	 draw samples from the standard exponential distribution
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(startswith)</tt>	 return true if b starts with the specified prefix false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(execle)</tt>	 execute the executable file with argument list args and environment env replacing the current process
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(symmetric_difference)</tt>	 return the symmetric difference of two sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>p.r.o.p.e.r.t.y</a>(getter)</tt>	 descriptor to change the getter on a property
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(randint)</tt>	 return random integer in range [a b], including both end points
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(url2pathname)</tt>	 os-specific conversion from a relative url of the file scheme to a file system path
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(zipf)</tt>	 draw samples from a zipf distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(log)</tt>	 return the logarithm of x to the given base
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(split)</tt>	 split a pathname
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(divmod)</tt>	 return a // b a % b
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(insert)</tt>	 insert a single item into the bytearray before the given index
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(digit)</tt>	 returns the digit value assigned to the unicode character unichr as integer
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(abs)</tt>	 return the absolute value of the argument
<tt style='background-color:#E8E8E8;'> <a href=''>x.m.l.r.p.c.l.i.b</a>(dumps)</tt>	 convert an argument tuple or a fault instance to an xml-rpc request
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.I</a>(getvalue)</tt>	 get the string value
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.p.a.c.k</a>(unpack)</tt>	 unpack an ae descriptor to a python object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(setdiff1d)</tt>	 find the set difference of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(real)</tt>	 return the real part of the elements of the array
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.o.n.n.e.c.t.i.o.n</a>(interrupt)</tt>	 abort any pending database operation
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t.s...S.e.t</a>(difference_update)</tt>	 remove all elements of another set from this set
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(max)</tt>	 max compares two values numerically and returns the maximum
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(tile)</tt>	 construct an array by repeating a the number of times given by reps
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.m.t.a.b.l.e...S.y.m.b.o.l.T.a.b.l.e</a>(has_exec)</tt>	 return true if the scope uses exec
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(pipe)</tt>	 create a pipe
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(logical_invert)</tt>	 invert all its digits
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(expm1)</tt>	 calculate exp x - 1 for all elements in the array
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.m.m.a.n.d.s</a>(getstatus)</tt>	 return output of "ls -ld <file>" in a string
<tt style='background-color:#E8E8E8;'> <a href=''>c.t.y.p.e.s</a>(create_string_buffer)</tt>	 character array
<tt style='background-color:#E8E8E8;'> <a href=''>w.a.r.n.i.n.g.s</a>(formatwarning)</tt>	 function to format a warning the standard way
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(intersection_update)</tt>	 update a set with the intersection of itself and another
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(sequence2ast)</tt>	 creates an st object from a tree representation
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(sqrt)</tt>	 square root of a non-negative number to context precision
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(isocalendar)</tt>	 return a 3-tuple containing iso year week number and weekday
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(fill)</tt>	 fill the array with a scalar value
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(Condition)</tt>	 factory function that returns a new condition variable object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagval)</tt>	 evaluate a laguerre series at points x
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.r.m.i.o.s</a>(tcsetattr)</tt>	 set the tty attributes for file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(set_fill_value)</tt>	 set the filling value of the masked array
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(erfc)</tt>	 complementary error function at x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(hypergeometric)</tt>	 draw samples from a hypergeometric distribution
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(escape)</tt>	 escape all non-alphanumeric characters in pattern
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(isalpha)</tt>	 return true if all characters in b are alphabetic and there is at least one character in b false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.p.a.t.h</a>(getmtime)</tt>	 return the last modification time of a file reported by os
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(busday_count)</tt>	 counts the number of valid days between begindates and enddates not including the day of enddates
<tt style='background-color:#E8E8E8;'> <a href=''>s.i.g.n.a.l</a>(alarm)</tt>	 arrange for sigalrm to arrive after the given number of seconds
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(flatnotmasked_contiguous)</tt>	 find contiguous unmasked data in a masked array along the given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(broadcast_arrays)</tt>	 broadcast any number of arrays against each other
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(distance)</tt>	 return the distance from the turtle to xy in turtle step units
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(chdir)</tt>	 change the current working directory to the specified path
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.s.i.x.p.a.t.h</a>(splitdrive)</tt>	 split a pathname into drive and path
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(callstats)</tt>	 return a tuple of function call statistics if call_profile was defined when python was built
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(getcheckinterval)</tt>	 current check interval
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(rpartition)</tt>	 search for the separator sep in s starting at the end of s and return the part before it the separator itself and the part after it
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(register_dialect)</tt>	 create a mapping from a string name to a dialect class
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(iter)</tt>	 get an iterator from an object
<tt style='background-color:#E8E8E8;'> <a href=''>_._.b.u.i.l.t.i.n._._</a>(execfile)</tt>	 read and execute a python script from a file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sqrt)</tt>	 return the positive square-root of an array element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(st2tuple)</tt>	 creates a tuple-tree representation of an st
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(getfield)</tt>	 returns a field of the given array as a certain type
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(system_alias)</tt>	 returns systemreleaseversion aliased to common marketing names used for some systems
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.i.l.c.a.p</a>(readmailcapfile)</tt>	 read a mailcap file and return a dictionary keyed by mime type
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(acos)</tt>	 return the arc cosine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermemulx)</tt>	 multiply a hermite series by x
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(symmetric_difference_update)</tt>	 update a set with the symmetric difference of itself and another
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(A)</tt>	 return self as an ndarray object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(full)</tt>	 return a new array of given shape and type filled with fill_value
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...R.a.n.d.o.m</a>(setstate)</tt>	 restore internal state from object returned by getstate
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(find_common_type)</tt>	 determine common type following standard coercion rules
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(platform)</tt>	 returns a single string identifying the underlying platform with as much useful information as possible
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.o.o.l.s</a>(pack)</tt>	 pack a python object into an ae descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(merge)</tt>	 merge multiple sorted inputs into a single sorted output
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.l.l.e.c.t.i.o.n.s...O.r.d.e.r.e.d.D.i.c.t</a>(pop)</tt>	 v remove specified key and return the corresponding value
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(asfortranarray)</tt>	 return an array laid out in fortran order in memory
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.u.c.t</a>(calcsize)</tt>	 return size of c struct described by format string fmt
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(has_sametype)</tt>	 check if types match
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.o.r.m.a.t.t.e.r</a>(formatTime)</tt>	 return the creation time of the specified logrecord as formatted text
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...f.f.t</a>(fft)</tt>	 compute the one-dimensional discrete fourier transform
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(diff)</tt>	 calculate the n-th discrete difference along given axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(Hermite)</tt>	 an hermite series class
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(wald)</tt>	 draw samples from a wald or inverse gaussian distribution
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(close)</tt>	 close the file and for mode w and a write the ending records
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(ids)</tt>	 return the addresses of the data and mask areas
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.i.s.t.l.i.b</a>(readPlistFromResource)</tt>	 read plst resource from the resource fork of path
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(heapreplace)</tt>	 pop and return the current smallest value and add the new item
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(i0)</tt>	 modified bessel function of the first kind order 0
<tt style='background-color:#E8E8E8;'> <a href=''>u.u</a>(test)</tt>	 uuencode/uudecode main program
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(doc)</tt>	 display text documentation given an object or a path to an object
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(adjusted)</tt>	 return the adjusted exponent of self
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(gui)</tt>	 graphical interface starts web server and pops up a control window
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(conj)</tt>	 return the complex conjugate element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(fsum)</tt>	 return an accurate floating point sum of values in the iterable
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...m.a.s.k.e.d._.a.r.r.a.y</a>(get_imag)</tt>	 return the imaginary part of the masked array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(atleast_1d)</tt>	 convert inputs to arrays with at least one dimension
<tt style='background-color:#E8E8E8;'> <a href=''>f.t.p.l.i.b</a>(test)</tt>	 test program
<tt style='background-color:#E8E8E8;'> <a href=''>_.h.a.s.h.l.i.b</a>(openssl_sha384)</tt>	 returns a sha384 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>s.y.s</a>(setdlopenflags)</tt>	 set the flags used by the interpreter for dlopen calls such as when the interpreter loads extension modules
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(clump_unmasked)</tt>	 return list of slices corresponding to the unmasked clumps of a 1-d array
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(fix_invalid)</tt>	 return input with invalid data masked and replaced by a fill value
<tt style='background-color:#E8E8E8;'> <a href=''>b.z.2...B.Z.2.F.i.l.e</a>(readlines)</tt>	 call readline repeatedly and return a list of lines read
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(isinf)</tt>	 test element-wise for positive or negative infinity
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(fetchall)</tt>	 fetches all rows from the resultset
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(item)</tt>	 copy an element of an array to a standard python scalar and return it
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(fmod)</tt>	 return fmod x y, according to platform c
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(append)</tt>	 append a single item to the end of b
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(frompyfunc)</tt>	 takes an arbitrary python function and returns a numpy ufunc
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(fork)</tt>	 fork a child process
<tt style='background-color:#E8E8E8;'> <a href=''>x.m.l.r.p.c.l.i.b</a>(loads)</tt>	 convert an xml-rpc packet to unmarshalled data plus a method name
<tt style='background-color:#E8E8E8;'> <a href=''>s.s.l...S.S.L.S.o.c.k.e.t</a>(write)</tt>	 write data to the underlying ssl channel
<tt style='background-color:#E8E8E8;'> <a href=''>t.h.r.e.a.d.i.n.g</a>(RLock)</tt>	 factory function that returns a new reentrant lock
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.O</a>(writelines)</tt>	 write the strings to the file
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(contains)</tt>	 same as b in a note reversed operands
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(loadtxt)</tt>	 load data from a text file
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(next_plus)</tt>	 returns the smallest representable number larger than itself
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(strip)</tt>	 for each element in a return a copy with the leading and trailing characters removed
<tt style='background-color:#E8E8E8;'> <a href=''>c.S.t.r.i.n.g.I.O...S.t.r.i.n.g.I</a>(read)</tt>	 read s characters or the rest of the string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(join)</tt>	 return a string which is the concatenation of the strings in the sequence seq
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(input)</tt>	 create an instance of the fileinput class
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k</a>(setup_master)</tt>	 if master is not none itself is returned
<tt style='background-color:#E8E8E8;'> <a href=''>t.i.m.e.i.t</a>(timeit)</tt>	 convenience function to create timer object and call timeit method
<tt style='background-color:#E8E8E8;'> <a href=''>_._.m.a.i.n._._</a>(return_fixer)</tt>	 a little hack to normalize some of the return values
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.t.o.p.t</a>(gnu_getopt)</tt>	 this function works like getopt , except that gnu style scanning mode is used by default
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(make_mask_none)</tt>	 return a boolean mask of the given shape filled with false
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getpgrp)</tt>	 return the current process group id
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(abs)</tt>	 same as abs a
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(encode)</tt>	 read input, apply quoted-printable encoding and write to output
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e.b.a.c.k</a>(extract_tb)</tt>	 return list of up to limit pre-processed entries from traceback
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(atanh)</tt>	 return the hyperbolic arc tangent measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(dup2)</tt>	 duplicate file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(triangular)</tt>	 draw samples from the triangular distribution over the interval [left right]
<tt style='background-color:#E8E8E8;'> <a href=''>n.i.s</a>(match)</tt>	 corresponds to the c library yp_match call returning the value of key in the given map
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(stamp)</tt>	 stamp a copy of the turtleshape onto the canvas and return its id
<tt style='background-color:#E8E8E8;'> <a href=''>c.g.i.t.b</a>(reset)</tt>	 return a string that resets the cgi and browser to a known state
<tt style='background-color:#E8E8E8;'> <a href=''>g.c</a>(set_threshold)</tt>	 sets the collection thresholds
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(normalize)</tt>	 normalize- strip trailing 0s change anything equal to 0 to 0e0
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(lexsort)</tt>	 perform an indirect sort using a sequence of keys
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(log10)</tt>	 return the base 10 logarithm of the input array element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(nl_langinfo)</tt>	 return the value for the locale information associated with key
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.g.h.d.r</a>(test_rast)</tt>	 sun raster file
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(increment_lineno)</tt>	 increment the line number of each node in the tree starting at *node* by *n*
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(inet_aton)</tt>	 ip representation convert an ip address in string format 123
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(release)</tt>	 release the i/o thread lock
<tt style='background-color:#E8E8E8;'> <a href=''>a.e.t.o.o.l.s</a>(unpack)</tt>	 unpack an ae descriptor to a python object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(square)</tt>	 return the element-wise square of the input
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getouterframes)</tt>	 get a list of records for a frame and all higher calling frames
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(isSequenceType)</tt>	 return true if a has a sequence type false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(gumbel)</tt>	 draw samples from a gumbel distribution
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(notmasked_edges)</tt>	 find the indices of the first and last unmasked values along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(readconfig)</tt>	 read config-files change configuration-dict accordingly
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(searchsorted)</tt>	 find indices where elements should be inserted to maintain order
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.e.x.p.a.t</a>(ErrorString)</tt>	 returns string error for given number
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(lwp_cookie_str)</tt>	 return string representation of cookie in an the lwp cookie file format
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebpow)</tt>	 raise a chebyshev series to a power
<tt style='background-color:#E8E8E8;'> <a href=''>c.s.v</a>(reduce)</tt>	 apply a function of two arguments cumulatively to the items of a sequence from left to right so as to reduce the sequence to a single value
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.f.i.l.e...Z.i.p.F.i.l.e</a>(getinfo)</tt>	 return the instance of zipinfo given name
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(gethostbyaddr)</tt>	 return the true host name a list of aliases and a list of ip addresses for a host
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(extractall)</tt>	 extract all members from the archive to the current working directory and set owner modification time and permissions on directories afterwards
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(java_ver)</tt>	 version interface for jython
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(parse_qs)</tt>	 parse a query given as a string argument
<tt style='background-color:#E8E8E8;'> <a href=''>p.a.r.s.e.r</a>(sequence2st)</tt>	 creates an st object from a tree representation
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyvalfromroots)</tt>	 evaluate a polynomial specified by its roots at points x
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(splitlines)</tt>	 return a list of the lines in s breaking at line boundaries
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(rsplit)</tt>	 for each element in a return a list of the words in the string using sep as the delimiter string
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(resizemode)</tt>	 set resizemode to one of the values: auto, user, noresize
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(isoformat)</tt>	 return string in iso 8601 format yyyy-mm-dd
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l</a>(getcontext)</tt>	 returns this thread 's context
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ppmt)</tt>	 compute the payment against loan principal
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.o.k.i.e.l.i.b</a>(domain_match)</tt>	 return true if domain a domain-matches domain b according to rfc 2965
<tt style='background-color:#E8E8E8;'> <a href=''>s.m.t.p.l.i.b</a>(quotedata)</tt>	 quote data for email
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(issubset)</tt>	 report whether another set contains this set
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(atol)</tt>	 return the long integer represented by the string s in the given base
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.a.c.h.e</a>(get)</tt>	 gets an entry from the cache or calls the factory function to produce one
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(tobytes)</tt>	 construct python bytes containing the raw data bytes in the array
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(handle)</tt>	 conditionally emit the specified logging record
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...H.a.n.d.l.e.r</a>(createLock)</tt>	 acquire a thread lock for serializing access to the underlying i/o
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermval)</tt>	 evaluate an hermite series at points x
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(sysconf)</tt>	 return an integer-valued system configuration variable
<tt style='background-color:#E8E8E8;'> <a href=''>a.r.r.a.y...a.r.r.a.y</a>(remove)</tt>	 remove the first occurrence of x in the array
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...W.i.c.h.m.a.n.n.H.i.l.l</a>(setstate)</tt>	 restore internal state from object returned by getstate
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.t.h</a>(asin)</tt>	 return the arc sine measured in radians of x
<tt style='background-color:#E8E8E8;'> <a href=''>m.h.l.i.b</a>(bisect)</tt>	 return the index where to insert item x in list a assuming a is sorted
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getfile)</tt>	 work out which source or compiled file an object was defined in
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(bytes)</tt>	 return random bytes
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Semaphore)</tt>	 returns a semaphore object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a...M.a.s.k.e.d.A.r.r.a.y</a>(get_fill_value)</tt>	 return the filling value of the masked array
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.e.t.y.p.e.s</a>(guess_extension)</tt>	 guess the extension for a file based on its mime type
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(nanmin)</tt>	 return minimum of an array or minimum along an axis ignoring any nans
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(classify_class_attrs)</tt>	 wrap inspect
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(template)</tt>	 compile a template pattern returning a pattern object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(has_samedomain)</tt>	 check if domains match
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(isalnum)</tt>	 return true if all characters in b are alphanumeric and there is at least one character in b false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>_.h.a.s.h.l.i.b</a>(openssl_sha256)</tt>	 returns a sha256 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(isupper)</tt>	 returns true for each element if all cased characters in the string are uppercase and there is at least one character false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>q.u.o.p.r.i</a>(a2b_qp)</tt>	 decode a string of qp-encoded data
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(exitonclick)</tt>	 go into mainloop until the mouse is clicked
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(linux_distribution)</tt>	 tries to determine the name of the linux os distribution name
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.d.e.c.s</a>(strict_errors)</tt>	 implements the strict error handling which raises a unicodeerror on coding errors
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(hypot)</tt>	 return the euclidean distance sqrt x*x + y*y
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(strxfrm)</tt>	 returns a string that behaves for cmp locale-aware
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(flipud)</tt>	 flip array in the up/down direction
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(getgid)</tt>	 return the current process 's group id
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e.t.i.m.e</a>(date)</tt>	 return date object with same year month and day
<tt style='background-color:#E8E8E8;'> <a href=''>u.u</a>(encode)</tt>	 uuencode file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e...H.e.r.m.i.t.e</a>(convert)</tt>	 convert series to a different kind and/or domain and/or window
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(ndiff)</tt>	 compare a and b lists of strings
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(lognormal)</tt>	 draw samples from a log-normal distribution
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.p.a.r.s.e</a>(urlunsplit)</tt>	 combine the elements of a tuple as returned by urlsplit into a complete url as a string
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(exp)</tt>	 returns e ** a
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(yeardays2calendar)</tt>	 return the data for the specified year ready for formatting
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(corrcoef)</tt>	 return pearson product-moment correlation coefficients
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(setxor1d)</tt>	 find the set exclusive-or of two arrays
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(getframeinfo)</tt>	 get information about a frame or traceback object
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.f.f.l.i.b</a>(IS_LINE_JUNK)</tt>	 return 1 for ignorable line: iff line is blank or contains a single '#'
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(rotate)</tt>	 returns a rotated copy of self value-of-other times
<tt style='background-color:#E8E8E8;'> <a href=''>h.e.a.p.q</a>(heapify)</tt>	 transform list into a heap in-place in o len heap time
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v</a>(chebdiv)</tt>	 divide one chebyshev series by another
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(rindex)</tt>	 like rfind but raises valueerror when the substring sub is not found
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(negative_binomial)</tt>	 draw samples from a negative binomial distribution
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.k...S.t.y.l.e</a>(element_names)</tt>	 returns the list of elements defined in the current theme
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(deg2rad)</tt>	 convert angles from degrees to radians
<tt style='background-color:#E8E8E8;'> <a href=''>r.a.n.d.o.m...S.y.s.t.e.m.R.a.n.d.o.m</a>(getrandbits)</tt>	 generates a long int with k random bits
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(ediff1d)</tt>	 the differences between consecutive elements of an array
<tt style='background-color:#E8E8E8;'> <a href=''>i.m.p</a>(find_module)</tt>	 search for a module
<tt style='background-color:#E8E8E8;'> <a href=''>m.i.m.e.t.y.p.e.s</a>(guess_all_extensions)</tt>	 guess the extensions for a file based on its mime type
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.c.o.s.t.o.o.l.s</a>(openrf)</tt>	 open resource fork of a file
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.u.c.t</a>(unpack)</tt>	 unpack the string containing packed c structure data according to fmt
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(getservbyport)</tt>	 return the service name from a port number and protocol name
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(is_nan)</tt>	 return true if the operand is a qnan or snan
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.F.i.l.e</a>(makedir)</tt>	 make a directory called targetpath
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(strerror)</tt>	 translate an error code to a message string
<tt style='background-color:#E8E8E8;'> <a href=''>c.a.l.e.n.d.a.r...C.a.l.e.n.d.a.r</a>(monthdayscalendar)</tt>	 return a matrix representing a month 's calendar
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(weekday)</tt>	 return the day of the week represented by the date
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.t</a>(union)</tt>	 return the union of sets as a new set
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermval3d)</tt>	 evaluate a 3-d hermite series at points x y z
<tt style='background-color:#E8E8E8;'> <a href=''>c.o.n.t.e.x.t.l.i.b</a>(contextmanager)</tt>	 contextmanager decorator
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(clear_history)</tt>	 clear the current readline history
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(getnameinfo)</tt>	 get host and port for a sockaddr
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.e.g.e.n.d.r.e</a>(legmulx)</tt>	 multiply a legendre series by x
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(mode)</tt>	 set turtle-mode standard, logo or world and perform reset
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(resetlocale)</tt>	 sets the locale for category to the default setting
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a.t.r.i.x</a>(max)</tt>	 return the maximum value along an axis
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(standard_normal)</tt>	 draw samples from a standard normal distribution mean=0 stdev=1
<tt style='background-color:#E8E8E8;'> <a href=''>p.l.a.t.f.o.r.m</a>(mac_ver)</tt>	 get macos version information and return it as tuple release versioninfo machine with versioninfo being a tuple version dev_stage non_release_version
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(pager)</tt>	 the first time this is called determine what kind of pager to use
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.n.g</a>(bit_length)</tt>	 number of bits necessary to represent self in binary
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(swapcase)</tt>	 return element-wise a copy of the string with uppercase characters converted to lowercase and vice versa
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(index)</tt>	 like find but raises valueerror when the substring is not found
<tt style='background-color:#E8E8E8;'> <a href=''>t.r.a.c.e</a>(find_executable_linenos)</tt>	 return dict where keys are line numbers in the line number table
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y...c.h.a.r.a.r.r.a.y</a>(item)</tt>	 copy an element of an array to a standard python scalar and return it
<tt style='background-color:#E8E8E8;'> <a href=''>p.o.p.e.n.2</a>(popen3)</tt>	 execute the shell command cmd in a sub-process
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(getdefaultlocale)</tt>	 tries to determine the default locale settings and returns them as tuple
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(sinc)</tt>	 return the sinc function
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e</a>(hermsub)</tt>	 subtract one hermite series from another
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...l.a.g.u.e.r.r.e</a>(lagint)</tt>	 integrate a laguerre series
<tt style='background-color:#E8E8E8;'> <a href=''>a.s.t</a>(iter_fields)</tt>	 yield a tuple of fieldname value for each field in node
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g</a>(debug)</tt>	 log a message with severity debug on the root logger
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.o.r.m.a.t.t.e.r</a>(usesTime)</tt>	 check if the format uses the creation time of the record
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.I.n.f.o</a>(create_ustar_header)</tt>	 return the object as a ustar header block
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.o.r.e...d.e.f.c.h.a.r.a.r.r.a.y</a>(isalpha)</tt>	 returns true for each element if all characters in the string are alphabetic and there is at least one character false otherwise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(getmaskarray)</tt>	 return the mask of a masked array or full boolean array of false
<tt style='background-color:#E8E8E8;'> <a href=''>m.a.i.l.c.a.p</a>(listmailcapfiles)</tt>	 return a list of all mailcap files found on the system
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(randn)</tt>	 return a sample or samples from the “standard normal” distribution
<tt style='background-color:#E8E8E8;'> <a href=''>r.e.a.d.l.i.n.e</a>(get_history_length)</tt>	 int return the maximum number of items that will be written to the history file
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m...R.a.n.d.o.m.S.t.a.t.e</a>(logistic)</tt>	 draw samples from a logistic distribution
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...t.i.m.e</a>(tzname)</tt>	 return self
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fliplr)</tt>	 flip array in the left/right direction
<tt style='background-color:#E8E8E8;'> <a href=''>d.i.c.t</a>(values)</tt>	 list of d 's values
<tt style='background-color:#E8E8E8;'> <a href=''>t.e.m.p.f.i.l.e</a>(TemporaryFile)</tt>	 create and return a temporary file
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(getscreen)</tt>	 return the turtlescreen object the turtle is drawing on
<tt style='background-color:#E8E8E8;'> <a href=''>z.l.i.b</a>(adler32)</tt>	 compute an adler-32 checksum of string
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.i.m.p.o.r.t...z.i.p.i.m.p.o.r.t.e.r</a>(find_module)</tt>	 search for a module specified by fullname
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(Etop)</tt>	 returns maximum exponent = emax - prec + 1
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(basis)</tt>	 series basis polynomial of degree deg
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...F.i.l.t.e.r</a>(filter)</tt>	 determine if the specified record is to be logged
<tt style='background-color:#E8E8E8;'> <a href=''>g.r.p</a>(getgrall)</tt>	 return a list of all available group entries in arbitrary order
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(replace)</tt>	 do a series of global replacements on a string
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(copy)</tt>	 return an array copy of the given object
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(vectorize)</tt>	 generalized function class
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...p.o.l.y.n.o.m.i.a.l</a>(polyroots)</tt>	 compute the roots of a polynomial
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(toordinal)</tt>	 return proleptic gregorian ordinal
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(getdefaulttimeout)</tt>	 returns the default timeout in seconds float for new socket objects
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(resize)</tt>	 return a new array with the specified shape
<tt style='background-color:#E8E8E8;'> <a href=''>s.o.c.k.e.t</a>(htonl)</tt>	 convert a 32-bit integer from host to network byte order
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(clump_masked)</tt>	 returns a list of slices corresponding to the masked clumps of a 1-d array
<tt style='background-color:#E8E8E8;'> <a href=''>z.i.p.i.m.p.o.r.t...z.i.p.i.m.p.o.r.t.e.r</a>(get_code)</tt>	 return the code object for the specified module
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...h.e.r.m.i.t.e._.e</a>(hermegauss)</tt>	 gauss-hermitee quadrature
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...m.a</a>(is_mask)</tt>	 return true if m is a valid standard mask
<tt style='background-color:#E8E8E8;'> <a href=''>s.q.l.i.t.e.3...C.u.r.s.o.r</a>(setoutputsize)</tt>	 required by db-api
<tt style='background-color:#E8E8E8;'> <a href=''>o.p.e.r.a.t.o.r</a>(setitem)</tt>	 same as a[b] = c
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e.i.n.p.u.t</a>(filename)</tt>	 return the name of the file currently being read
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(typename)</tt>	 return a description for the given data type code
<tt style='background-color:#E8E8E8;'> <a href=''>i.n.s.p.e.c.t</a>(currentframe)</tt>	 return a frame object from the call stack
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.u.c.t</a>(pack)</tt>	 return string containing values v1 v2
<tt style='background-color:#E8E8E8;'> <a href=''>f.i.l.e</a>(close)</tt>	 close the file
<tt style='background-color:#E8E8E8;'> <a href=''>u.u.i.d</a>(uuid4)</tt>	 generate a random uuid
<tt style='background-color:#E8E8E8;'> <a href=''>u.n.i.c.o.d.e.d.a.t.a</a>(decomposition)</tt>	 returns the character decomposition mapping assigned to the unicode character unichr as string
<tt style='background-color:#E8E8E8;'> <a href=''>b.i.n.a.s.c.i.i</a>(crc32)</tt>	 compute crc-32 incrementally
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(fabs)</tt>	 compute the absolute values element-wise
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(min_scalar_type)</tt>	 for scalar a returns the data type with the smallest size and smallest scalar kind which can hold its value
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...C.o.n.t.e.x.t</a>(log10)</tt>	 returns the base 10 logarithm of the operand
<tt style='background-color:#E8E8E8;'> <a href=''>u.r.l.l.i.b</a>(quote)</tt>	 each part of a url eg the path info the query etc
<tt style='background-color:#E8E8E8;'> <a href=''>r.e</a>(subn)</tt>	 return a 2-tuple containing new_string number
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(compare_total)</tt>	 compares self to other using the abstract representations
<tt style='background-color:#E8E8E8;'> <a href=''>g.e.t.o.p.t</a>(getopt)</tt>	 parses command line options and parameter list
<tt style='background-color:#E8E8E8;'> <a href=''>s.e.l.e.c.t...k.q.u.e.u.e</a>(close)</tt>	 close the kqueue control file descriptor
<tt style='background-color:#E8E8E8;'> <a href=''>t.t.y</a>(tcflush)</tt>	 discard queued data on file descriptor fd
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(triangular)</tt>	 draw samples from the triangular distribution over the interval [left right]
<tt style='background-color:#E8E8E8;'> <a href=''>o.s</a>(readlink)</tt>	 return a string representing the path to which the symbolic link points
<tt style='background-color:#E8E8E8;'> <a href=''>t.u.r.t.l.e</a>(modf)</tt>	 return the fractional and integer parts of x
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.c.a.l.e</a>(format_string)</tt>	 formats a string in the same way that the % formatting would use but takes the current locale into account
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...L.o.g.g.e.r</a>(callHandlers)</tt>	 pass a record to all relevant handlers
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(capitalize)</tt>	 return a copy of b with only its first character capitalized ascii and the rest lower-cased
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(transpose)</tt>	 permute the dimensions of an array
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(strip)</tt>	 strip leading and trailing bytes contained in the argument
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...c.h.a.r.a.r.r.a.y</a>(astype)</tt>	 copy of the array cast to a specified type
<tt style='background-color:#E8E8E8;'> <a href=''>l.o.g.g.i.n.g...S.t.r.e.a.m.H.a.n.d.l.e.r</a>(emit)</tt>	 emit a record
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...r.a.n.d.o.m</a>(standard_t)</tt>	 draw samples from a standard student’s t distribution with df degrees of freedom
<tt style='background-color:#E8E8E8;'> <a href=''>s.h.a</a>(new)</tt>	 returns a sha1 hash object
<tt style='background-color:#E8E8E8;'> <a href=''>l.i.s.t</a>(reverse)</tt>	 reverse *in place*
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y...p.o.l.y.n.o.m.i.a.l...c.h.e.b.y.s.h.e.v...C.h.e.b.y.s.h.e.v</a>(fromroots)</tt>	 return series instance that has the specified roots
<tt style='background-color:#E8E8E8;'> <a href=''>n.u.m.p.y</a>(trim_zeros)</tt>	 trim the leading and/or trailing zeros from a 1-d array or sequence
<tt style='background-color:#E8E8E8;'> <a href=''>p.y.d.o.c</a>(plainpager)</tt>	 simply print unformatted text
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r</a>(index)</tt>	 like s.find but raise valueerror when the substring is not found
<tt style='background-color:#E8E8E8;'> <a href=''>d.a.t.e.t.i.m.e...d.a.t.e</a>(replace)</tt>	 return date with new specified fields
<tt style='background-color:#E8E8E8;'> <a href=''>m.u.l.t.i.p.r.o.c.e.s.s.i.n.g</a>(Pipe)</tt>	 returns two connection object connected by a pipe
<tt style='background-color:#E8E8E8;'> <a href=''>b.y.t.e.a.r.r.a.y</a>(lower)</tt>	 return a copy of b with all ascii characters converted to lowercase
<tt style='background-color:#E8E8E8;'> <a href=''>d.e.c.i.m.a.l...D.e.c.i.m.a.l</a>(logical_xor)</tt>	 applies an xor operation between self and other 's digits
<tt style='background-color:#E8E8E8;'> <a href=''>s.t.r.i.n.g</a>(translate)</tt>	 return a copy of the string s
<tt style='background-color:#E8E8E8;'> <a href=''>t.a.r.f.i.l.e...T.a.r.I.n.f.o</a>(get_info)</tt>	 return the tarinfo 's attributes as a dictionary
