arg	with ||| a	count=1
arg	limit stack ||| limit file	count=1
arg	gaussian ||| loc scale size	count=2
function	owner and ||| lchown	count=1
function_arg	true division [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] data ||| [function_1] [function_2]	count=1
function	list of values ||| values	count=1
module	set the angle ||| turtle	count=1
arg	targetpath according to ||| targetpath	count=3
module	a table of ||| calendar htmlcalendar	count=1
arg	such that sub is ||| sub	count=4
function_arg	[function_1] from a ||| [arg_2] [function_1]	count=3
function_arg	[function_1] twos exponent ||| [arg_2] [function_1]	count=2
arg	if path is none ||| path prefix	count=1
module	ssl ||| ssl	count=3
function	read a [function_2] ||| [function_2] [function_1]	count=1
function	to mouse-click event ||| onscreenclick	count=1
function	input ||| input	count=1
function_arg	the value for the [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] buffer ||| [function_1] [function_2]	count=5
module	process with sigkill ||| subprocess	count=1
arg	corresponding to [arg_2] ||| [arg_1] [arg_2]	count=1
function	with the same shape ||| like	count=2
function	copy [function_2] ||| [function_1] [function_2]	count=2
function	left-justified version ||| ljust	count=1
function	slices along the ||| along axis	count=1
function	number closest ||| next toward	count=1
function	sequencematcher to return ||| get close	count=1
function	suppress the [function_2] ||| [function_1] [function_2]	count=2
module	hermite series by ||| numpy polynomial hermite_e	count=4
function	[function_1] alive ||| [function_1] [function_2]	count=1
function	< ||| less	count=1
module	right-justified ||| core defchararray	count=1
arg	along an axis ||| axis	count=1
function_arg	[function_1] [arg_2] ||| [function_1] matches [arg_2]	count=3
arg	in b in ||| b	count=1
function	[function] to the ||| [function]	count=1
function	[function_1] semaphore ||| [function_1] [function_2]	count=3
arg	unicode character unichr ||| unichr default	count=4
module	interaction of ||| numpy chararray	count=1
arg	convert a ||| pol	count=2
module	the turtleshape onto ||| turtle	count=1
function_arg	a == b ||| eq a b	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x1 [arg_2]	count=5
arg	execute file with ||| mode file	count=2
arg	to look like the ||| assigned updated	count=1
arg	of severity [arg] and ||| [arg]	count=1
function_arg	whether class [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] dst ||| [arg_1] [arg_2]	count=2
rep	garbage collection [function_arg_2] ||| [module_1] set [function_arg_2]	count=1
function	[function_1] header ||| [function_1] [function_2]	count=4
function	from a ||| from	count=2
arg	tuple of n ||| n	count=2
function	length of history ||| history length	count=3
module	sigkill ||| subprocess popen	count=1
function	module [function_2] ||| [function_2] [function_1]	count=1
function_arg	converter with ||| converter typename	count=1
function	packs ||| packbits	count=1
function	return matrix rank of ||| matrix rank	count=1
function	mouse-click ||| onscreenclick	count=1
arg	the source string ||| source	count=1
arg	to/from a command returning ||| command mode bufsize	count=1
function	print a stack ||| print stack	count=3
module	current process ||| os	count=10
function	with ||| resize	count=1
function	whether the lock ||| lock	count=1
arg	return evenly spaced values ||| start stop step dtype	count=1
function_arg	run [arg_2] ||| [arg_2] [function_1]	count=1
arg	check [arg] ||| [arg]	count=1
function_arg	complete sql ||| complete statement sql	count=1
function	[function_1] format ||| [function_1] [function_2]	count=1
module	the underlying ssl channel ||| ssl sslsocket	count=1
module	and return ||| turtle	count=1
arg	substring sub is found ||| start end	count=2
module	of return ||| numpy	count=1
arg	move ||| offset whence	count=1
function_arg	[function_1] a numpy ||| [arg_2] [function_1]	count=2
function	the week [function] the ||| [function]	count=1
module	the interaction of ||| numpy chararray	count=1
arg	using fill_value as ||| fill_value	count=1
module	of a masked array ||| numpy ma	count=2
arg	of two ||| a b	count=2
arg	[arg_1] [arg_2] corresponding value ||| [arg_2] [arg_1]	count=2
arg	of data ||| data	count=1
function	a logger with ||| logger	count=1
arg	from tb ||| etype value tb	count=1
function	list-tree representation ||| st2list	count=1
function_arg	^ [arg_2] ||| [function_1] [arg_2]	count=1
module	from the current ||| random	count=1
module	draw random samples ||| numpy random	count=1
function	file is a ||| is	count=1
function	a subprocess ||| spawnv	count=1
module	value of ||| sys	count=1
arg	of path to the ||| path	count=2
arg	resource from a ||| resource	count=1
module	legendre ||| polynomial legendre	count=1
arg	item x in list ||| a x	count=5
function_arg	[function_1] cmd in ||| commands [function_1] [arg_2]	count=3
function	matrix to [function_2] ||| [function_1] [function_2]	count=1
module	row ||| sqlite3 row	count=1
arg	so its exponent is ||| rounding context watchexp	count=1
arg	a line ||| line	count=1
function	debug a single ||| debug	count=1
function	level ||| add level name	count=1
module	a square ||| numpy linalg	count=1
function	[function_1] exponential ||| [function_2] [function_1]	count=2
function	a 3-d ||| leggrid3d	count=1
function	return address ||| address	count=1
arg	[arg_1] [arg_2] value ||| [arg_2] [arg_1]	count=2
function	to all relevant handlers ||| call handlers	count=1
arg	limit ||| limit file	count=1
module	[module_1] the handler ||| [module_1] [module_2]	count=2
function	~ ||| inv	count=1
function	is [function_2] ||| [function_1] [function_2]	count=6
function	integers whose ratio is ||| ratio	count=1
function_arg	set the turtle [function_1] [arg_2] ||| turtle [function_1] [arg_2]	count=4
arg	of the bins to ||| bins right	count=1
arg	cartesian product of x ||| x	count=4
arg	when [arg] not ||| [arg] start	count=1
function	pem ||| to_pem_cert	count=1
function	start a new thread ||| start new thread	count=1
module	list of ||| shutil	count=1
arg	a signal ||| sig	count=1
arg	a 2-d array with ||| dtype	count=1
arg	the locale ||| locale	count=1
function	is ||| is	count=10
arg	a [arg] to ||| [arg]	count=1
function_arg	test unless [arg_2] ||| [arg_2] [function_1]	count=2
arg	tuple of n ||| iterable n	count=2
function_arg	[function_1] of b ||| [function_1] [arg_2]	count=3
arg	of given etype ||| elementname etype	count=1
arg	function ||| function	count=7
function	at ||| at	count=1
module	the i/o thread lock ||| handler	count=2
function_arg	the libc [arg_2] ||| [function_1] executable [arg_2] chunksize	count=1
function	's user id ||| getuid	count=1
function	return list of ||| get	count=1
module	the operand ||| decimal context	count=2
function_arg	debugging flags ||| debug flags	count=1
arg	to limit stack ||| limit file	count=1
function	return the message for ||| get message	count=1
module	array with a scalar ||| numpy chararray	count=1
function	a is not ||| is not	count=1
arg	if the size ||| size	count=1
module	an element [module_2] ||| [module_1] [module_2]	count=4
arg	return [arg_1] [arg_2] ||| turtle log [arg_1] [arg_2]	count=3
arg	and b [arg_2] ||| irepeat [arg_2] [arg_1]	count=1
function_arg	[function_1] s characters ||| [function_1] [arg_2]	count=1
function	the fillcolor ||| fillcolor	count=1
function	[function_1] long ||| [function_1] [function_2]	count=2
arg	[arg_1] : false ||| [arg_1] [arg_2]	count=10
function	the mirrored property ||| mirrored	count=1
function	return the ||| lstsq	count=1
function	import [function] ||| acquire [function]	count=3
function	the internal state ||| state	count=2
function	arrays to choose from ||| choose	count=1
arg	a condition is met ||| condition	count=1
function	return a duplicate of ||| dup	count=1
function	current [function] of the ||| [function]	count=1
function	east asian width ||| east asian width	count=3
arg	prefix otherwise false ||| prefix start	count=1
module	matrix ||| linalg	count=1
function_arg	long [arg_2] ||| [arg_2] [function_1]	count=1
function	member descriptor ||| ismemberdescriptor	count=1
arg	the pattern ||| pattern	count=4
function_arg	[function_1] string by ||| [function_1] pattern [arg_2]	count=1
function	matrix ||| matrix	count=3
function	add the file ||| add	count=1
function_arg	unless the [arg_2] ||| [function_1] [arg_2]	count=2
function	to ||| lstsq	count=1
function	along the ||| nanpercentile	count=1
function_arg	right-justified version [arg_2] ||| [function_1] [arg_2]	count=3
function	the filling value ||| fill value	count=2
module	operand ||| context	count=4
module	scalar ||| chararray	count=2
arg	a sequence of numbers ||| sequence	count=1
arg	words ||| words	count=1
function_arg	the hanning [arg_2] ||| [function_1] [arg_2]	count=1
arg	of the two operands ||| a b	count=1
arg	with given [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg_1] plst ||| [arg_2] [arg_1]	count=1
module	laguerre series by another ||| polynomial laguerre	count=1
function	parsed from a string ||| strptime	count=1
module	new dtype ||| numpy dtype	count=1
function	digit value ||| digit	count=1
arg	from ||| size replace	count=1
function	standard exponential ||| standard exponential	count=2
arg	an ||| a dtype	count=1
function	have the ||| same quantum	count=1
module	all logging ||| logging	count=1
function	current directory ||| directory	count=1
module	array ||| chararray	count=7
function	start [function_2] ||| [function_1] [function_2]	count=4
module	chebyshev series ||| polynomial chebyshev	count=10
function	the exception information ||| exception	count=1
module	pseudo-vandermonde ||| laguerre	count=1
function	compute the rate ||| rate	count=1
module	to simplify ||| chararray	count=1
module	current collection ||| gc	count=1
function	fifo ||| makefifo	count=1
function	aggregate ||| aggregate	count=1
module	return a string ||| mimetools	count=1
arg	the source string into ||| source	count=1
function	a directory tree ||| rmtree	count=1
function	self and ||| and	count=1
module	evaluate a legendre ||| legendre	count=1
function_arg	[function_1] [arg_2] ||| [function_1] d [arg_2]	count=3
arg	roll the specified axis ||| axis	count=1
module	generate a [module] from a ||| [module]	count=1
module	number ||| float	count=1
arg	the database file filename ||| file flag mode	count=1
function	that generated ||| restore	count=1
function	or ||| or	count=3
function	file ||| file	count=5
module	the current ||| sqlite3	count=2
module	a chebyshev [module_2] ||| [module_2] [module_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] data package [arg_2]	count=4
arg	start of a line ||| line	count=1
function	lock for the current ||| lock	count=1
function	lines in the ||| lines	count=1
module	an object to ||| numpy	count=1
function	theme to ||| theme	count=1
function_arg	[function_1] the string ||| [function_1] [arg_2]	count=1
function	acquire the i/o thread ||| acquire	count=1
arg	of x to ||| x	count=1
module	collection ||| gc	count=3
function_arg	owner and [arg_2] ||| [arg_2] [function_1]	count=2
function	file of ||| file	count=1
module	process with sigkill ||| subprocess popen	count=1
arg	[arg_1] [arg_2] plural forms ||| [arg_1] [arg_2]	count=7
function_arg	bit-wise or [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	^= [arg_2] ||| [function_1] [arg_2]	count=1
function	abort the interpreter ||| abort	count=1
arg	the elements of x ||| x	count=1
arg	to a path ||| path mode	count=1
function_arg	[function_1] by distance ||| [arg_2] [function_1]	count=2
module	the array ||| ma masked_array	count=2
arg	non-masked elements ||| keepdims	count=1
arg	from ||| size dtype	count=1
arg	a partitioned copy of ||| kth axis kind order	count=1
function	logger ||| logger	count=4
module	file and for ||| zipfile zipfile	count=1
module	object to simplify the ||| numpy chararray	count=1
arg	a doc ||| doc	count=1
module	digits [module] there ||| [module]	count=1
arg	[arg] string into ||| [arg]	count=2
arg	to x [arg_2] ||| [arg_1] [arg_2]	count=1
module	the database ||| sqlite3 connection	count=1
function	this ||| cast	count=1
module	series ||| polynomial chebyshev chebyshev	count=1
function	unittest option ||| set unittest reportflags	count=1
module	series to ||| polynomial hermite hermite	count=1
function	create a new ||| allocate	count=1
arg	a command returning a ||| command mode bufsize	count=1
module	base64 alphabet ||| base64	count=1
function_arg	[function_1] an integer ||| [function_1] integral value [arg_2]	count=1
function	table of ||| table	count=1
function_arg	into [arg_2] ||| [function_1] [arg_2]	count=3
module	object ||| numpy chararray	count=1
arg	of s in ||| s	count=3
function	bit-wise ||| bitwise	count=2
module	hermite series ||| polynomial hermite	count=8
module	the turtleshape ||| turtle	count=1
function_arg	[function_1] [arg_2] ||| [function_1] axis [arg_2]	count=3
arg	a member from ||| member	count=1
module	a masked array to ||| ma masked_array	count=1
function	divides ||| divide int	count=1
arg	packed ip address of ||| af packed_ip	count=1
function	with all ||| replace	count=2
function	[function_1] converter ||| [function_1] [function_2]	count=1
function_arg	left-justified version [arg_2] ||| [function_1] [arg_2]	count=3
arg	along the specified axis ||| a axis	count=2
function	degrees to radians ||| radians	count=1
function	expression ||| expr	count=1
module	a linear ||| numpy linalg	count=1
module	shape drawn after the ||| turtle	count=1
function_arg	decode a [arg_2] ||| [function_1] base64 [arg_2]	count=2
arg	a file using ||| name mode buffering	count=1
function	data into ||| into	count=1
function_arg	[function_1] non-masked elements ||| [arg_2] [function_1]	count=1
function_arg	a 16-bit [arg_2] ||| [arg_2] [function_1]	count=4
module	to the dump ||| sqlite3 connection	count=1
module	element of ||| numpy core defchararray	count=1
arg	[arg] as pair ||| [arg]	count=1
function_arg	print exception [arg_2] ||| [function_1] etype value tb [arg_2]	count=1
arg	file using ||| buffering	count=1
module	the ending ||| zipfile zipfile	count=1
module	hermite [module_2] ||| [module_2] [module_1]	count=34
function	elements centered ||| center	count=1
function	the shape drawn after ||| end	count=1
arg	a path ||| path mode	count=1
function_arg	[function_1] arrays element-wise ||| [function_1] [arg_2]	count=8
module	fft [module_2] ||| [module_1] [module_2]	count=3
function	for the current ||| get	count=1
function_arg	[function_1] substring ||| [function_1] a sub [arg_2]	count=3
module	default retrlines callback to ||| ftplib	count=1
function	theme ||| theme	count=1
arg	frame ||| frame context	count=1
arg	group with a ||| pgid	count=1
module	to ||| signal	count=1
arg	line [arg_2] ||| [arg_1] [arg_2]	count=1
function	logger -- if it ||| logger	count=1
function	a nice html ||| html	count=1
arg	lock operation ||| operation	count=1
arg	name for [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	debugging [arg_2] ||| [arg_2] [function_1]	count=1
arg	sub in the ||| sub	count=1
arg	subsection old replaced by ||| old	count=1
function	parse [function_2] ||| [function_1] [function_2]	count=1
arg	a mime mail ||| ifile ofile is_mime	count=2
function	[function_1] long ||| [function_2] [function_1]	count=2
module	series to a ||| numpy polynomial	count=4
module	object ||| inspect	count=2
arg	array ||| shrink dtype	count=1
arg	by a data-type ||| dtype offset	count=1
arg	the bins ||| bins right	count=1
module	[module_1] which ||| [module_1] [module_2]	count=2
module	of hermite series to ||| numpy polynomial hermite_e	count=1
arg	b [arg_2] ||| [arg_2] [arg_1]	count=2
arg	and b are equal ||| b	count=1
arg	axis while ignoring ||| a	count=1
function	[function_1] thread ||| [function_1] [function_2]	count=3
arg	write the [arg] ||| [arg]	count=1
function	fork a child ||| fork	count=1
arg	version information [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	is a ||| is snan a	count=1
function	the configuration limit ||| fpathconf	count=1
function	registers [function_2] ||| [function_2] [function_1]	count=1
module	warnings functionality ||| warnings	count=1
arg	prefix otherwise false ||| a prefix start end	count=1
arg	string s with ||| s	count=1
function_arg	real [arg_2] ||| [function_1] [arg_2]	count=4
function	to return list of ||| get close	count=1
module	the database in an ||| connection	count=1
arg	prompt ||| prompt stream	count=2
function	string usable ||| choose	count=1
module	returns the same decimal ||| decimal context	count=1
function	mapping type false otherwise ||| mapping type	count=1
function	suppress the [function_2] ||| [function_2] [function_1]	count=2
arg	recursively delete a directory ||| path ignore_errors	count=1
arg	version information ||| version	count=1
function_arg	standard deviation [arg_2] ||| [arg_2] [function_1]	count=1
module	hermite series on the ||| polynomial hermite	count=1
module	on the [module] named by ||| [module]	count=1
module	this logrecord ||| logging logrecord	count=1
arg	fsrc ||| fsrc	count=1
arg	[arg_1] windows registry ||| [arg_1] [arg_2]	count=1
arg	stream ||| stream indent	count=1
arg	and b ||| b	count=6
arg	axis while ignoring ||| a axis	count=1
function	at the top of ||| getblock	count=1
function	contents of the line ||| line	count=1
module	turtleshape onto the ||| turtle	count=1
function	create a new lock ||| allocate	count=1
arg	bins ||| bins right	count=1
module	the process with sigkill ||| subprocess popen	count=1
arg	[arg_1] to dst ||| [arg_2] [arg_1]	count=1
function	queue ||| joinable queue	count=1
arg	[arg] pattern ||| [arg]	count=3
arg	single line as ||| line header	count=2
function_arg	[function_1] but rounding ||| [arg_2] [function_1]	count=3
arg	array with ||| k dtype	count=1
function	position ||| seek	count=1
module	return the [module] ||| [module]	count=3
function_arg	[function_1] node ||| [arg_2] [function_1]	count=3
arg	element-wise ||| x2	count=1
function	data [function_2] ||| [function_2] [function_1]	count=1
module	the [module] of the ||| [module]	count=1
function	a right-justified in ||| rjust	count=1
module	legendre series ||| polynomial legendre	count=14
arg	database file filename ||| file flag mode	count=1
arg	unique temporary file ||| suffix prefix dir	count=2
module	return ||| numpy random	count=1
arg	a node ||| node	count=1
arg	the path to ||| path	count=1
module	element ||| core defchararray chararray	count=1
arg	complete html page ||| css encoding	count=1
module	array ||| numpy chararray	count=4
arg	targetpath according [arg_2] ||| [arg_2] [arg_1]	count=6
function	register a function to ||| register	count=1
module	database in an ||| connection	count=1
module	connection ||| connection	count=1
function	[function_1] a plist ||| [function_2] [function_1]	count=1
arg	all occurrences of ||| count	count=3
arg	and locals [arg_2] ||| [arg_1] [arg_2]	count=1
arg	qth percentile of the ||| a q	count=1
function	handle errors which ||| handle error	count=1
arg	of a ||| a	count=3
function	enabled for ||| enabled for	count=1
function	arguments and environment replacing ||| execve	count=1
module	matrix ||| numpy linalg	count=3
function	logger with ||| logger	count=1
function	a linear ||| lstsq	count=1
module	this ||| logging	count=2
arg	b when __future__.division is ||| a b	count=2
function	the complex conjugate ||| conjugate	count=1
function_arg	[function_1] [arg_2] ||| [function_1] create [arg_2]	count=1
function_arg	[function_1] in a ||| [function_1] [arg_2]	count=8
module	as a table of ||| calendar htmlcalendar	count=1
function_arg	[function_1] of length ||| [arg_2] [function_1]	count=1
module	the dump of ||| connection	count=1
arg	environment ||| environ	count=1
arg	b for ||| b	count=1
arg	the specified suffix ||| suffix	count=2
arg	[arg] into a ||| [arg]	count=3
arg	occurrences of the pattern ||| pattern	count=1
arg	s [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	multiply arguments [arg_2] ||| [function_1] [arg_2]	count=1
module	masked array to ||| ma masked_array	count=1
function	's method resolution order ||| mro	count=1
module	series from another ||| polynomial	count=4
function	backward ||| bk	count=1
module	interaction of the array ||| numpy chararray	count=1
arg	[arg_1] file with ||| [arg_1] [arg_2]	count=1
arg	[arg] is ||| a [arg]	count=3
function_arg	a code object ||| iscode object	count=1
arg	k ||| k	count=1
function	the data ||| data	count=1
function	the main diagonal ||| diag	count=2
function	the mask and ||| mask	count=1
module	legendre series to data ||| polynomial legendre	count=1
rep	file [function_arg_2] ||| [module_1] [function_arg_2]	count=6
function	set the fillcolor ||| fillcolor	count=1
arg	from the stream ||| limit	count=1
function	default [function_2] ||| [function_1] [function_2]	count=2
function	matrix to [function_2] ||| [function_2] [function_1]	count=1
arg	wait until ||| timeout	count=2
arg	compare common ||| common	count=1
function_arg	print [arg_2] ||| [function_1] tb tb [arg_2]	count=2
function_arg	for the [arg_2] ||| [function_1] [arg_2]	count=1
arg	of x ||| x	count=40
module	with a scalar ||| numpy chararray	count=1
function	fetches several rows from ||| fetchmany	count=1
arg	mail ||| ifile ofile	count=1
function	the class of the ||| number class	count=1
module	with a scalar ||| core defchararray chararray	count=1
function	given family to ||| inet ntop	count=1
function	kill the process with ||| kill	count=1
arg	to fd ||| fd	count=1
module	used by [module_2] ||| [module_1] [module_2]	count=2
module	tarinfo 's attributes as ||| tarfile tarinfo	count=1
arg	most [arg] bytes ||| [arg]	count=1
module	and for ||| zipfile zipfile	count=1
arg	the database file ||| file flag	count=1
arg	group id ||| gid	count=1
arg	new shape to an ||| a newshape	count=1
module	series ||| numpy polynomial hermite	count=1
module	connection in an ssl ||| ssl	count=1
module	object the [module] is drawing ||| [module]	count=1
arg	towards b ||| a b	count=1
function_arg	the hamming window ||| hamming m	count=1
arg	[arg_1] scheme ||| [arg_1] [arg_2]	count=1
module	the fft [module_2] ||| [module_1] [module_2]	count=1
module	array to a file ||| core defchararray chararray	count=1
arg	from the ||| size	count=2
function	time of ||| time	count=1
arg	data along the ||| a	count=1
module	array with ||| numpy core defchararray chararray	count=1
arg	scale ||| scale	count=1
function	compares ||| compare signal	count=1
arg	compute the payment ||| rate per nper	count=1
function	and ||| archive	count=1
arg	two numbers ||| a b	count=1
module	evaluate a 2-d [module_1] [module_2] ||| [module_2] [module_1] hermegrid2d	count=3
function	the given family ||| ntop	count=1
arg	return true if m ||| m	count=1
function_arg	set the [arg_2] ||| [function_1] conversion mode [arg_2]	count=2
arg	x1 to [arg_2] ||| [arg_2] [arg_1]	count=1
arg	number in the ||| number	count=1
module	compute the ||| numpy linalg	count=1
function	class of ||| number class	count=1
module	manager ||| logging manager	count=1
arg	the source string ||| string	count=1
module	an st ||| parser	count=2
module	of a floating-point number ||| float	count=1
arg	equation ||| a b	count=1
arg	[arg_1] y ||| hermegrid2d [arg_1] [arg_2]	count=3
function	[function_1] the startup_hook ||| [function_2] [function_1]	count=1
arg	the kind keyword ||| kind order	count=1
module	the interaction of ||| chararray	count=1
arg	an object ||| object _filename	count=1
arg	partitioned copy of ||| kth axis kind order	count=1
module	with this manager ||| manager	count=1
function	history [function_2] ||| [function_2] [function_1]	count=1
module	exit the [module] ||| [module]	count=1
function_arg	[function_1] object to ||| [arg_2] [function_1]	count=1
module	series to a power ||| numpy polynomial	count=2
function	backslashreplace [function] ||| backslashreplace [function]	count=1
function	the recursion limit the ||| getrecursionlimit	count=1
function	the class ||| number class	count=1
function	with invalid ||| fix invalid	count=1
arg	specified username ||| username	count=1
function_arg	divides [arg_2] ||| [function_1] [arg_2]	count=3
module	from the current state ||| random	count=1
arg	b in between ||| b	count=1
arg	unique temporary directory ||| prefix dir	count=1
function	given degrees ||| legvander2d	count=1
arg	by the replacement repl ||| repl	count=1
arg	the tarinfo [arg_2] ||| [arg_2] [arg_1]	count=3
function	title of ||| title	count=1
arg	matrix equation ||| a b	count=1
function	the rows and/or columns ||| rowcols	count=1
function	or remove the startup_hook ||| startup hook	count=1
module	evaluate a 2-d [module_1] [module_2] cartesian product ||| [module_2] [module_1] leggrid2d	count=1
module	characters [module] http ||| [module]	count=1
arg	for option in ||| option state default	count=1
module	a table ||| htmlcalendar	count=4
arg	b plus ||| b	count=1
module	python interpreter stack ||| sys	count=1
function_arg	split the [arg_2] ||| [function_1] pattern [arg_2]	count=3
module	polynomial ||| polynomial hermite	count=1
function	a and keep it ||| insort	count=3
function	fetches several rows ||| fetchmany	count=1
arg	other operand numerically ||| other context	count=2
function_arg	[function_1] the two ||| [arg_2] [function_1]	count=1
module	extended slice ||| slice	count=1
arg	in a [arg_2] ||| [arg_1] width [arg_2]	count=1
module	from a given 1-d ||| randomstate	count=1
module	interaction ||| numpy	count=1
function	right-justified version ||| rjust	count=1
arg	scale ||| scale size	count=1
function	the access permissions of ||| lchmod	count=1
function	as ||| choose	count=1
function	import * ||| import star	count=2
function_arg	permissions of [arg_2] ||| [function_1] tarinfo [arg_2]	count=2
module	a unicode [module] of one ||| [module]	count=1
function	integers of ||| integers	count=2
arg	a single line as ||| line header	count=1
function	normalize ||| normpath	count=1
module	after the call ||| turtle	count=1
function	data source ||| data source	count=2
function	level ||| level	count=1
function	a mailcap [function] return a ||| [function]	count=1
function_arg	formats [arg_2] ||| [function_1] formats [arg_2]	count=4
arg	truth value of x1 ||| x1	count=4
function	hanning ||| hanning	count=1
arg	[arg_1] the scheme ||| [arg_1] [arg_2]	count=1
arg	copy of b ||| b	count=4
function	of the given family ||| ntop	count=1
arg	data ||| data dtype copy	count=1
arg	a geometric progression ||| start stop num endpoint dtype	count=1
module	an object to simplify ||| numpy chararray	count=1
module	the laguerre ||| laguerre	count=1
arg	so its ||| watchexp	count=1
function	return true if a ||| is	count=3
arg	pat ||| pat	count=1
arg	sub-arrays along an axis ||| axis	count=1
module	recursively ||| shutil	count=1
function_arg	[function_1] n ||| [arg_2] [function_1]	count=4
function	startup_hook ||| startup hook	count=1
function	after the call ||| end	count=1
function	a stack ||| stack	count=1
function	the leading and trailing ||| strip	count=1
module	as a ||| mimetools	count=1
function_arg	tangent of x ||| tan x	count=1
function	[function_1] command ||| [function_1] [function_2]	count=1
module	chebyshev series by x ||| numpy polynomial chebyshev	count=1
arg	sub [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] pre_input_hook ||| [function_2] [function_1]	count=1
arg	with [arg] / ||| [arg]	count=1
arg	a string ||| s	count=1
module	hermite series from ||| numpy polynomial hermite_e	count=2
function	convert ||| herm2poly	count=1
function	an ||| a	count=2
function_arg	the blackman window ||| blackman m	count=1
module	the [module] filter ||| [module]	count=1
function	errors which occur during ||| error	count=1
arg	b in ||| b	count=4
arg	globals ||| globals	count=1
arg	equal within a ||| equal_nan	count=2
module	current transaction ||| connection	count=2
module	file on disk ||| numpy memmap	count=1
module	sigkill ||| subprocess	count=1
function	source code for a ||| source	count=1
function_arg	>>= [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] base64 [arg_2]	count=4
function_arg	a duplicate [arg_2] ||| [arg_2] [function_1]	count=1
arg	in the string ||| string	count=2
arg	formats names ||| formats names	count=1
function	archiving ||| get archive	count=1
function_arg	from the [arg_2] ||| [arg_2] [function_1]	count=3
arg	b ||| a b	count=23
arg	a [arg] or ||| fp [arg]	count=1
module	set array ||| ma masked_array	count=1
arg	to desired ||| desired	count=1
function	truncate the file at ||| truncate	count=1
function	[function_1] test script ||| [function_2] [function_1]	count=1
arg	get additional version information ||| version	count=1
arg	file descriptor fd ||| fd queue	count=2
arg	characters removed ||| a chars	count=2
function_arg	shape of [arg_2] ||| [arg_2] [function_1]	count=1
function	the variance along the ||| nanvar	count=1
function	to choose from ||| choose	count=1
function	get [function_2] ||| [function_2] [function_1]	count=3
arg	python object ||| object	count=1
arg	if m ||| m	count=1
arg	a ||| b	count=1
function_arg	remove [arg_2] ||| collections ordereddict [function_1] [arg_2]	count=6
module	new ||| thread	count=1
arg	integer from ||| integer	count=1
module	the [module] before ||| [module]	count=1
arg	the given string ||| string	count=1
function	is a code ||| iscode	count=1
module	[module] return ||| [module]	count=1
module	field of the given ||| numpy ma	count=1
module	[module_1] series to ||| [module_1] [module_2]	count=9
module	chebyshev series on ||| polynomial chebyshev	count=2
arg	a directory ||| path	count=1
module	the context ||| context	count=1
arg	d ||| c d	count=1
function_arg	[function_1] in the ||| [function_1] [arg_2]	count=1
function	histogram ||| histogram	count=1
function	recursively delete a directory ||| rmtree	count=1
function	get the type ||| get completion type	count=2
function	string usable as ||| choose	count=1
function_arg	[function_1] flags ||| [function_1] [arg_2]	count=4
function	a traceback ||| istraceback	count=1
function	delete ||| rmtree	count=1
arg	cartesian [arg_1] [arg_2] ||| hermgrid2d [arg_1] [arg_2]	count=1
function	a file is a ||| is	count=1
module	s and return ||| str	count=1
function	numeric [function_2] ||| [function_2] [function_1]	count=1
function_arg	sum [arg_2] ||| [function_1] [arg_2]	count=2
arg	directory ||| ignore_errors onerror	count=1
module	simplify the interaction of ||| chararray	count=1
module	iterator ||| sqlite3	count=1
module	calendar ||| calendar calendar	count=2
arg	delete a directory ||| path	count=1
function	round ||| round_	count=1
function_arg	open a [arg_2] ||| [function_1] [arg_2]	count=7
function_arg	particular frame ||| getargvalues frame	count=1
function	of base64 ||| base64	count=1
arg	the c ||| c	count=1
arg	an object ||| object	count=5
function_arg	[function_1] specified key ||| [arg_2] [function_1]	count=1
module	the screen ||| turtle	count=1
module	series to the ||| polynomial hermite hermite	count=1
function	tree representation ||| tuple2ast	count=1
arg	specified axis ||| a	count=1
function	into a particular ||| getargvalues	count=1
module	pseudo-vandermonde matrix ||| polynomial	count=1
module	a scalar ||| chararray	count=2
function	set the filling ||| set fill	count=6
module	same as ||| operator	count=21
function	line ||| readline	count=1
function	the access permissions of ||| chmod	count=1
module	dump ||| sqlite3 connection	count=1
function	sequencematcher to return list ||| get close	count=1
arg	x1 to that of ||| x1	count=1
function	for archiving and unarchiving ||| archive	count=1
function	a true [function_2] ||| [function_2] [function_1]	count=4
function	monic ||| polyfromroots	count=1
module	object to simplify ||| numpy	count=1
arg	draw samples from a ||| scale size	count=3
arg	inserted to maintain order ||| v side sorter	count=1
arg	given by its position ||| pos	count=1
function	indices that would sort ||| argsort	count=1
function	the digit ||| digit	count=1
module	i/o thread ||| handler	count=2
module	to ||| sqlite3 connection	count=1
function_arg	hanning [arg_2] ||| [function_1] [arg_2]	count=1
function	a logger ||| logger	count=3
arg	axis ||| axis start	count=1
function	leading and trailing ||| strip	count=3
function_arg	[function_1] sequence ||| [arg_2] [function_1]	count=2
function_arg	a 32-bit [arg_2] ||| [arg_2] [function_1]	count=1
function	multipart boundary ||| boundary	count=1
arg	the specified ||| a	count=2
function	a qnan or snan ||| nan	count=1
arg	present value of a ||| rate values	count=1
module	for the [module] unistr ||| [module]	count=1
arg	[arg_1] bytes b[start:end] ||| [arg_2] [arg_1]	count=1
arg	convert formats names ||| formats names	count=2
module	and ||| zipfile	count=4
module	field of the given ||| ma	count=1
function	set modification time ||| utime	count=1
arg	source string ||| string maxsplit	count=1
function	[function_1] stderr ||| [function_2] [function_1]	count=1
module	polynomial ||| polynomial hermite_e	count=1
arg	database file ||| file	count=1
arg	one ||| c1 c2	count=14
arg	return negative if x<y [arg_1] [arg_2] positive if x>y ||| [arg_1] [arg_2]	count=1
arg	pseudo-vandermonde matrix of ||| y z deg	count=1
function	class to be ||| class	count=1
function	debug a [function_2] ||| [function_2] [function_1]	count=1
function	a new thread ||| new thread	count=2
function_arg	into a buffer ||| into buffer	count=2
function	open a ||| open	count=4
arg	which the specified username ||| username gid	count=1
arg	with all occurrences ||| count	count=1
arg	ip address ||| ip	count=1
module	string composed of ||| string	count=1
function_arg	a float but ||| float f	count=1
arg	[arg] or from ||| fp [arg]	count=1
arg	return a formatted year ||| theyear width	count=1
arg	tarinfo object [arg_2] ||| [arg_1] [arg_2]	count=4
function	a polygon ||| poly	count=1
function	contents ||| printdir	count=1
arg	delete a ||| ignore_errors	count=1
module	of the array to ||| chararray	count=1
module	matrix of ||| numpy polynomial laguerre	count=1
function	sum along diagonals ||| trace	count=1
arg	if flag is ||| flag	count=1
arg	complex argument ||| z deg	count=1
function	subtract arguments ||| subtract	count=1
function	a copy [function_2] ||| [function_2] [function_1]	count=1
function	vice versa ||| swapcase	count=1
arg	of decimals ||| decimals out	count=1
function	after ||| end	count=1
rep	random [function_arg_2] ||| [module_1] [function_arg_2]	count=4
function	debug a ||| debug	count=2
arg	nested [arg] depth-first ||| [arg]	count=1
arg	bind fun to ||| fun btn	count=3
module	returns ||| shutil	count=1
arg	the substring sub is ||| a sub	count=1
arg	query ||| query_opt	count=2
function_arg	starts with [arg_2] ||| [arg_2] [function_1]	count=3
module	stamp ||| turtle	count=1
function	reverse ||| reverse	count=1
module	pipe ||| subprocess popen	count=1
arg	list names that match ||| names	count=1
module	command line string ||| subprocess	count=1
module	in ||| connection	count=1
arg	specified axis ||| a axis	count=2
arg	copy of an array ||| a	count=1
function	[function_1] or ||| [function_2] [function_1]	count=3
module	[module_1] integers from ||| [module_1] [module_2]	count=3
module	masked array ||| numpy ma masked_array	count=4
function	rows and/or columns ||| rowcols	count=2
module	set ||| sets set	count=6
arg	[arg] in a ||| [arg]	count=6
module	of [module] ||| [module]	count=6
function	pack the ||| pack	count=1
function	data into a ||| into	count=1
arg	sockaddr ||| sockaddr	count=1
arg	sep as the delimiter ||| sep	count=2
arg	warning ||| warning_class	count=1
arg	size starting ||| size	count=1
module	in s ||| unicode	count=1
module	turn turtle ||| turtle	count=1
module	of array with ||| numpy core defchararray chararray	count=1
function_arg	a float [arg_2] ||| [arg_2] [function_1]	count=4
arg	to an array ||| a newshape order	count=1
function	use sequencematcher to return ||| get	count=1
arg	an array ||| copy shrink dtype	count=1
module	rotate the [module] n ||| [module]	count=1
function	shape drawn after the ||| end	count=1
arg	the numeric uid and ||| uid	count=3
function	of the class of ||| number class	count=1
arg	pseudo-vandermonde matrix of given ||| x y deg	count=1
function	input with invalid data ||| fix invalid	count=1
function	[function_1] startup_hook ||| [function_1] [function_2]	count=1
arg	packed ip address ||| af packed_ip	count=1
function	to return list ||| get	count=1
function_arg	right-justified [arg_2] ||| [arg_2] [function_1]	count=1
function	mantissa and ||| frexp	count=1
rep	[module_1] [function_arg_2] ||| [module_1] set [function_arg_2]	count=1
arg	word ||| word salt	count=1
arg	true : ||| true	count=1
function_arg	[function_1] group id ||| [function_1] [arg_2]	count=1
module	an object ||| numpy chararray	count=1
module	with the ||| numpy	count=2
function	may be safely cast ||| promote types	count=1
arg	format a python ||| indent	count=1
module	current default ||| sys	count=1
function_arg	median along [arg_2] ||| [arg_2] [function_1]	count=1
module	get ||| cstringio stringo	count=1
function	the bit-wise xor ||| bitwise xor	count=2
function	lowest index ||| find	count=1
function_arg	right-justified [arg_2] ||| unicode [function_1] s [arg_2]	count=1
module	the current default ||| sys	count=1
function_arg	mask from [arg_2] ||| [function_1] m [arg_2]	count=1
function	part ||| part	count=2
function	note reversed operands ||| contains	count=1
module	string ||| sys	count=1
module	reset ||| turtle	count=1
module	the [module] n steps ||| [module]	count=1
function	new [function_2] ||| [function_2] [function_1]	count=3
arg	series to series ||| series	count=1
function	the rate ||| rate	count=1
function	usable as ||| choose	count=1
function	the python [function_2] ||| [function_1] [function_2]	count=2
arg	b when ||| a b	count=2
module	laguerre series from another ||| numpy polynomial laguerre	count=1
function	array with the ||| resize	count=1
module	along a given ||| ma	count=1
arg	breaking at line boundaries ||| a keepends	count=1
module	2-d [module] on ||| [module]	count=1
module	[module_1] series from ||| [module_1] [module_2]	count=4
module	a given ||| ma	count=3
function_arg	[function_1] name for ||| [function_1] fd [arg_2]	count=3
arg	the given base system ||| base padding	count=1
function	code object for ||| get code	count=1
arg	[arg_1] length ||| [arg_2] [arg_1]	count=1
arg	next line [arg] ||| [arg]	count=3
arg	a and b sequences ||| a b	count=2
arg	obj to given protocol ||| obj protocol	count=1
arg	n objects ||| n	count=1
function_arg	a ^= b ||| ixor a b	count=1
function	search for a module ||| module	count=2
module	chebyshev [module_2] ||| [module_2] [module_1] chebgrid2d	count=5
function_arg	[function_1] specified record ||| [arg_2] [function_1]	count=1
arg	of the data ||| a	count=1
module	[module_1] which is ||| [module_2] [module_1]	count=2
arg	the least-squares solution to ||| a b rcond	count=1
function	python [function_2] ||| [function_2] [function_1]	count=2
function	matrix ||| lstsq	count=1
function_arg	get [arg_2] ||| [function_1] data package [arg_2]	count=2
arg	if float [arg] is infinite ||| [arg]	count=1
function	true [function_2] ||| [function_1] [function_2]	count=4
arg	[arg] is a ||| [arg]	count=3
function	the standard deviation ||| nanstd	count=1
arg	an array ||| a	count=15
arg	to limit ||| limit	count=4
function	of default [function_2] ||| [function_1] [function_2]	count=2
function	<<= ||| ilshift	count=1
module	to ||| chararray	count=1
arg	filters ||| action category lineno	count=1
module	random ||| numpy random	count=7
module	the ||| connection	count=4
arg	a c instance ||| c	count=1
function	truncate ||| cutdeg	count=3
arg	from an array ||| copy shrink dtype	count=1
module	in the datasource directory ||| numpy datasource	count=1
function	check that all items ||| array max ulp	count=1
module	laguerre [module_2] ||| [module_1] [module_2]	count=19
module	the masked array ||| ma	count=1
module	a new dtype ||| dtype	count=1
module	of ||| sys	count=2
function	make a logrecord ||| make log	count=1
function	invalid ||| invalid	count=1
function	the input to ||| asarray	count=1
function	shape drawn after ||| end	count=1
function	format ||| format	count=4
arg	of object ||| object	count=2
module	to simplify the ||| numpy	count=1
arg	and b are equal ||| a b	count=1
function	format the ||| format	count=2
module	more sets as ||| frozenset	count=1
function	compute the standard deviation ||| nanstd	count=1
function_arg	thread [arg_2] ||| [function_1] [arg_2]	count=1
function	a formatted dump ||| dump	count=1
arg	a module file and ||| module path	count=1
function	window ||| window	count=1
arg	a python ||| indent	count=1
function_arg	[function_1] [arg_2] ||| [function_1] etype value tb [arg_2]	count=6
module	array to a ||| numpy ma masked_array	count=1
arg	x1 to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	command cmd ||| cmd bufsize	count=2
function	items of ||| array	count=1
function	[function_1] display ||| [function_2] [function_1]	count=5
arg	formats names titles description ||| formats names titles aligned byteorder	count=1
function	most [function] to ||| most [function]	count=1
arg	a [arg_2] ||| [arg_1] [arg_2]	count=3
function	the discrete linear convolution ||| convolve	count=1
arg	return ||| a	count=2
arg	by the kind ||| kind	count=1
function_arg	[function_1] twos ||| [function_1] x [arg_2]	count=2
arg	a path with ||| path args	count=1
module	a string usable as ||| mimetools	count=1
function	the type [function_2] ||| [function_2] [function_1]	count=2
module	evaluate a legendre series ||| polynomial legendre	count=1
arg	in list a ||| a	count=5
function_arg	[function_1] of path ||| [function_1] [arg_2]	count=2
arg	the string ||| string	count=4
module	perhaps an integer ||| bz2 bz2file	count=1
arg	etc ||| createpath copydates forcetype	count=1
module	[module_1] of an ||| [module_2] [module_1]	count=3
function_arg	[function_1] [arg_2] to a ||| [function_1] [arg_2]	count=4
arg	2-d array with ||| dtype	count=1
function	[function_1] new ||| [function_1] [function_2]	count=1
function	exec ||| exec	count=1
function_arg	normal [arg_2] ||| [arg_2] [function_1]	count=4
module	copy ||| decimal decimal	count=2
function	expand ||| expand dims	count=2
module	triple ||| decimal decimal	count=1
function	remove the pre_input_hook ||| pre input hook	count=1
function	roots of a ||| hermroots	count=1
function	filling [function_2] ||| [function_1] [function_2]	count=4
arg	the shell command cmd ||| cmd bufsize mode	count=2
function	the ip address ||| thishost	count=1
arg	[arg_1] ? true ||| [arg_2] [arg_1]	count=4
function	the given family ||| inet ntop	count=1
arg	specified axis while ignoring ||| a	count=1
function	[function_1] implementation branch ||| [function_2] [function_1]	count=4
function	load [function_2] ||| [function_1] [function_2]	count=1
arg	bins to which ||| bins	count=1
arg	[arg_1] given axis ||| [arg_1] [arg_2]	count=1
arg	[arg_1] path ||| [arg_2] [arg_1]	count=8
function	list ||| archive	count=1
function	open ||| bltn open	count=2
module	the array with ||| numpy chararray	count=1
module	of array with the ||| numpy core defchararray chararray	count=1
function_arg	[function_1] [arg_2] ||| [function_1] line [arg_2]	count=2
module	delete ||| shutil	count=1
function	starts with the ||| startswith	count=1
arg	or if [arg_2] ||| [arg_2] [arg_1]	count=8
arg	prompt ||| prompt	count=2
arg	b to ||| b	count=1
arg	sub in [arg_2] ||| [arg_2] [arg_1]	count=1
arg	whether a path ||| path	count=2
module	a hermite series ||| numpy polynomial hermite	count=2
function	formats a string in ||| format string	count=1
arg	condition is met ||| condition	count=1
function	script ||| script	count=1
function_arg	parse [arg_2] ||| [function_1] [arg_2]	count=1
module	returns iterator to the ||| sqlite3 connection	count=1
module	sigterm ||| popen	count=1
function	creates a tuple-tree representation ||| st2tuple	count=1
function	a linear matrix equation ||| lstsq	count=1
function_arg	subtract one ||| legsub c1 c2	count=1
arg	shell command [arg] in a ||| [arg]	count=1
function	all items of ||| assert array max	count=1
function_arg	[function_1] limit stack ||| [arg_2] [function_1]	count=1
function	of supported formats ||| formats	count=1
arg	an integer ||| a	count=1
module	turtles on the screen ||| turtle	count=1
arg	an ||| a dtype order	count=1
arg	[arg_1] is ||| numpy core defchararray rindex [arg_2] [arg_1]	count=3
arg	a c ||| c	count=2
module	local time ||| time	count=1
arg	fill value ||| a mask copy fill_value	count=1
function	right-justified in a string ||| rjust	count=1
arg	the access and modified ||| atime mtime	count=1
module	to the ||| sqlite3	count=1
module	series to data ||| numpy polynomial	count=2
arg	return ||| b	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=748
module	masked array to ||| ma	count=1
module	line: iff ||| difflib	count=1
arg	a new array ||| a	count=1
arg	list [arg] ||| file [arg]	count=1
module	linear matrix equation ||| numpy	count=1
arg	directory tree ||| ignore_errors onerror	count=1
function	supported formats ||| archive formats	count=1
module	command line ||| subprocess	count=1
function	documentation string ||| getdoc	count=1
arg	condition ? [arg_2] ||| [arg_2] [arg_1]	count=4
arg	in the iterable ||| iterable	count=4
module	convert [module] ip ||| [module]	count=1
module	logger ||| logger	count=4
function	resize ||| resize	count=1
arg	performs [arg] specified ||| a indices axis [arg]	count=1
arg	query or sets ||| query_opt	count=1
arg	[arg_1] an array ||| [arg_2] [arg_1]	count=4
function	to [function_2] ||| [function_2] [function_1]	count=1
function	that all items of ||| assert array	count=1
function_arg	[function_1] key ||| locale [function_1] [arg_2]	count=3
function	[function_1] a polygon ||| [function_1] [function_2]	count=3
module	legendre series to another ||| numpy polynomial legendre	count=1
module	construct [module] ||| [module]	count=3
module	from the resultset ||| cursor	count=1
function_arg	complete [arg_2] ||| [function_1] statement [arg_2]	count=1
function_arg	add [arg_2] ||| [arg_2] [function_1]	count=8
arg	trailing characters removed ||| a chars	count=1
function	set a ||| set string	count=1
module	and ||| bytearray	count=4
arg	evaluate a piecewise-defined function ||| x condlist funclist args kw	count=1
function	routine to open ||| open	count=1
function	+ b for a ||| concat	count=1
arg	random integer [arg] range [a ||| [arg]	count=1
module	array with the same ||| numpy core defchararray chararray	count=1
module	series ||| numpy polynomial chebyshev chebyshev	count=1
function_arg	[function_1] data ||| [function_1] from string [arg_2]	count=3
function	set or [function_2] ||| [function_2] [function_1]	count=4
arg	a directory tree ||| path ignore_errors onerror	count=1
arg	of the words in ||| words	count=1
arg	buffer rather than creating ||| buffer nbytes flags	count=1
function	difference of itself and ||| difference	count=2
arg	sequence ||| sequence	count=1
module	axis while ||| numpy	count=1
function_arg	[function_1] addr ||| [arg_2] [function_1]	count=4
function_arg	different byte [arg_2] ||| [function_1] [arg_2]	count=2
arg	array where two ||| b	count=1
function	common to ||| common	count=1
module	child process ||| os	count=1
arg	substring sub is found ||| sub start end	count=1
module	the current collection ||| gc	count=1
arg	look like the ||| assigned updated	count=1
module	the ending records ||| zipfile	count=2
arg	delete a directory ||| ignore_errors	count=1
function	decode a [function_2] ||| [function_1] [function_2]	count=1
module	to simplify the interaction ||| numpy chararray	count=1
function	with the symmetric ||| symmetric	count=2
module	accumulate ||| numpy ufunc	count=1
arg	from tb [arg_2] ||| [arg_1] limit [arg_2]	count=1
module	returns self ||| decimal decimal	count=1
function	lock for the ||| lock	count=1
arg	and b is an ||| a b	count=1
arg	length [arg_2] ||| [arg_2] [arg_1]	count=14
arg	source string by ||| string	count=1
function	non-negative ints ||| bincount	count=1
function	a tuple-tree representation ||| st2tuple	count=1
arg	write the [arg] to ||| [arg]	count=1
arg	line ||| ascii	count=1
function	string in ||| format string	count=1
arg	directory tree ||| onerror	count=1
module	thread ||| thread	count=4
arg	m array ||| k m	count=1
arg	[arg_1] minor ||| os makedev [arg_1] [arg_2]	count=3
function_arg	the shape [arg_2] ||| [arg_2] [function_1]	count=1
arg	elements in ||| default	count=1
arg	working directory ||| path pwd	count=1
function_arg	=< [arg_2] ||| [function_1] x1 [arg_2]	count=1
function_arg	complex conjugate element-wise ||| conjugate x	count=1
function_arg	[function_1] [arg_2] ||| unicode [function_1] s [arg_2]	count=2
arg	with all occurrences of ||| count	count=1
arg	object [arg_2] ||| [arg_1] [arg_2]	count=1
module	returns iterator to ||| sqlite3 connection	count=1
function_arg	[function_1] corresponding to ||| [arg_2] [function_1]	count=3
arg	[arg] required to ||| condition [arg]	count=2
arg	unicode [arg] ||| s [arg]	count=2
function	the standard [function_2] ||| [function_1] [function_2]	count=2
function	remove ||| remove	count=1
function_arg	that generated [arg_2] ||| [arg_2] [function_1]	count=1
arg	to a path ||| path	count=1
function	is a ||| is_character_junk	count=1
function	[function_1] as ||| [function_2] [function_1]	count=6
function	search for a module ||| find module	count=2
function	union of itself ||| union	count=1
function	unless ||| unless	count=1
arg	[arg_1] sub is ||| a [arg_2] [arg_1]	count=1
arg	additional version ||| release version	count=1
arg	of substring sub ||| sub start end	count=2
function	the unittest option ||| unittest reportflags	count=1
arg	axis while ignoring nans ||| axis	count=1
module	new set ||| frozenset	count=2
module	for ||| logging	count=1
function	integer to the left ||| left	count=1
function	[function] code ||| [function]	count=3
module	given environment ||| cgitb	count=1
arg	[arg] docstring ||| node [arg]	count=1
arg	if object ||| object	count=1
module	array ||| array array	count=1
arg	with [arg_2] ||| [arg_1] [arg_2]	count=1
function	return the header ||| header	count=1
module	a linear ||| numpy	count=1
module	the current position ||| cstringio stringi	count=1
function	register a function ||| register	count=1
arg	rootobject as a ||| rootobject	count=1
module	hermitee series ||| numpy polynomial hermite_e	count=5
function_arg	[function_1] [arg_2] ||| commands [function_1] [arg_2]	count=10
module	to simplify the ||| numpy chararray	count=1
arg	parts of ||| infile outfile decode_base64	count=1
function_arg	[function_1] s ||| [arg_2] [function_1]	count=5
arg	trailing characters removed ||| chars	count=1
module	the shape drawn after ||| turtle	count=1
function	truncate ||| truncate	count=1
function	effect ||| itruediv	count=1
function	mailcap [function] return ||| [function]	count=1
function_arg	16-bit [arg_2] ||| [function_1] [arg_2]	count=4
arg	members ||| members	count=1
arg	pseudo-vandermonde matrix ||| y deg	count=1
function	the maximum ||| max	count=1
function_arg	or of [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] line ||| [arg_2] [function_1]	count=1
arg	the specified axis while ||| a	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=57
function	up to desired precision ||| almost	count=1
module	the dump of the ||| connection	count=1
function	[function_1] rank ||| [function_2] [function_1]	count=1
function	a code ||| iscode	count=1
function	linear matrix ||| lstsq	count=1
arg	format x ||| x digs	count=2
module	returns an indication ||| decimal	count=1
arg	single file in uncompressed ||| file args kwds	count=1
arg	so its [arg_2] ||| [arg_2] [arg_1]	count=8
function	symbolic link ||| islink	count=1
arg	[arg_1] new ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] of od ||| [arg_2] [function_1]	count=2
module	and for mode w ||| zipfile	count=2
function	that all items of ||| array max ulp	count=1
function	symmetric difference of two ||| symmetric difference	count=2
arg	ip ||| ip	count=1
arg	tb to [arg_2] ||| [arg_1] limit [arg_2]	count=1
arg	to n bytes ||| n	count=1
function	print up to ||| print	count=1
module	write the ending ||| zipfile zipfile	count=1
function	list of ||| get archive	count=1
arg	on [arg] ||| [arg]	count=1
function	the difference ||| difference	count=1
function_arg	title [arg_2] ||| [function_1] [arg_2]	count=1
function	new thread and ||| new thread	count=2
arg	b to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	read a module ||| module path	count=1
arg	[arg_1] exponent is ||| [arg_2] [arg_1]	count=2
arg	and other ||| other	count=1
function	all methods ||| decorate methods	count=1
arg	corresponding to ||| name	count=1
module	the process with sigterm ||| subprocess popen	count=1
arg	radians of ||| x	count=2
function	part of a ||| unmimify part	count=1
function_arg	%= [arg_2] ||| [arg_2] [function_1]	count=1
arg	size of object ||| object	count=1
arg	of the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	terminal given by a ||| tcsetpgrp	count=1
function_arg	xor [arg_2] ||| [function_1] x1 [arg_2]	count=1
module	turtleshape ||| turtle	count=1
function	[function_1] list of ||| [function_2] [function_1]	count=1
module	array to a file ||| chararray	count=1
arg	addresses for a host ||| host	count=3
arg	the specified url to ||| url	count=1
module	returns ||| sqlite3 connection	count=1
module	rfc 2965 ||| cookielib	count=1
module	pickle of the array ||| numpy chararray	count=1
arg	the kind ||| kind	count=1
arg	file filename ||| file	count=1
function	sequence ||| sequence	count=1
function	a note reversed operands ||| contains	count=1
arg	suffix false ||| suffix	count=2
function	version ||| version	count=1
function	type of [function_2] ||| [function_2] [function_1]	count=2
function	environment ||| environment	count=1
module	the i/o thread ||| logging handler	count=2
module	the ||| sqlite3 connection	count=4
arg	buffer [arg_2] ||| [arg_2] [arg_1]	count=2
module	database ||| sqlite3 connection	count=1
function	return the code object ||| get code	count=1
function	unpack the buffer ||| unpack	count=1
function	the indices to ||| indices	count=1
arg	a given name ||| name	count=1
arg	limit stack trace ||| limit file	count=1
module	scalar ||| core defchararray chararray	count=1
function	sets [function] ||| [function]	count=3
module	a new [module] given shape ||| [module]	count=1
function	make a logrecord ||| make	count=1
module	the thread ||| threading thread	count=1
function	with invalid data ||| invalid	count=1
module	two ||| frozenset	count=1
arg	[arg_1] a stream ||| [arg_2] [arg_1]	count=2
function	the startup_hook ||| startup hook	count=1
function_arg	subtract arguments element-wise ||| subtract x1 x2	count=1
arg	other [arg_2] ||| [arg_1] [arg_2]	count=2
module	self as the context ||| decimal context	count=1
module	the original float ||| float	count=1
module	file and ||| zipfile zipfile	count=1
function	the maximum length ||| length	count=1
function	info ||| info	count=1
arg	lines ||| lines	count=1
function_arg	backward by distance ||| bk distance	count=1
arg	open file ||| file version	count=1
arg	whether the object is ||| object	count=1
module	a weekday [module] ||| calendar [module]	count=1
arg	or dotted [arg] importing ||| [arg]	count=1
function	an 8bit [function] ||| mimify [function]	count=2
function	returns the sum ||| sum	count=1
module	the array with ||| numpy	count=1
arg	prefix ||| prefix start end	count=1
module	a single doctest docstring ||| doctest	count=1
arg	file descriptor fd ||| fd opt arg	count=1
module	return the current ||| sys	count=2
function	terminated by a signal ||| wifsignaled	count=1
module	the ||| subprocess popen	count=2
function	pack the ||| pack into	count=1
arg	item onto [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	is not [arg_2] ||| [arg_2] [function_1]	count=1
arg	table ||| a table	count=1
function_arg	convert [arg_2] ||| [function_1] [arg_2]	count=6
function	as the phase angle ||| phase	count=1
function	integers ||| integers	count=2
module	a masked array along ||| numpy ma	count=1
function	matrix [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] a number ||| [arg_2] [function_1]	count=1
module	pseudo-vandermonde ||| numpy	count=1
function_arg	different byte order ||| newbyteorder new_order	count=2
function_arg	[function_1] file filename ||| [arg_2] [function_1]	count=1
arg	[arg_1] and locals ||| [arg_1] [arg_2]	count=1
arg	database file filename and ||| file flag mode	count=1
arg	severity level' on the ||| level msg	count=1
arg	an array without ||| a newshape	count=1
arg	substring sub in string ||| s sub start end	count=1
function_arg	wrapper [arg_2] ||| [function_1] [arg_2]	count=1
module	set ||| numpy random randomstate	count=1
function	return a string usable ||| choose	count=1
function	type with ||| type	count=1
function	terminated by a ||| wifsignaled	count=1
function	the current theme to ||| theme	count=1
function	return the floor ||| floor	count=1
arg	[arg_1] names ||| [arg_2] [arg_1]	count=3
function	remove a directory ||| rmdir	count=1
module	for the [module] system ||| [module]	count=1
module	array to a file ||| numpy core defchararray chararray	count=1
function_arg	call [arg_2] ||| [arg_2] [function_1]	count=1
function	calculate correct line number ||| tb lineno	count=1
arg	type1 and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	values of variables used ||| locals	count=1
function_arg	[function_1] [arg_2] ||| [function_1] a sub [arg_2]	count=6
module	a 2-d [module] cartesian product ||| [module]	count=5
arg	a [arg] ||| fp [arg]	count=1
function	if it is ||| discard	count=1
arg	[arg] with uppercase ||| [arg]	count=6
function	test examples ||| examples	count=1
arg	file descriptor fd ||| fd action	count=1
function_arg	<<= [arg_2] ||| [arg_2] [function_1]	count=1
function	controlling terminal for this ||| ctermid	count=1
arg	a [arg] or from ||| fp [arg]	count=1
module	of the masked array ||| ma	count=1
arg	a day as a ||| day	count=1
arg	size argument ||| size	count=1
function	the default setting ||| resetlocale	count=1
arg	string by the occurrences ||| string maxsplit	count=1
function	returns a list of ||| archive	count=1
function_arg	completion display [arg_2] ||| [arg_2] [function_1]	count=1
rep	the eigenvalues [function_arg_2] ||| [module_1] [function_arg_2]	count=6
arg	whether a [arg] refers to ||| [arg]	count=1
function_arg	the input [arg_2] ||| [function_1] [arg_2]	count=2
module	set/return turtle ||| turtle	count=2
arg	a command returning ||| command	count=1
arg	b when __future__.division ||| a b	count=2
function	[function_1] a stack ||| [function_2] [function_1]	count=1
arg	? true : false ||| true false	count=1
function	header [function_2] ||| [function_2] [function_1]	count=2
module	of the [module] ||| [module]	count=9
module	the canvas and ||| turtle	count=1
function	standard ||| standard	count=6
function_arg	[function_1] addr ||| [function_1] [arg_2]	count=4
module	a write ||| zipfile	count=2
function	class of ||| class	count=2
function	's effective user id ||| geteuid	count=1
function	set a ||| set	count=1
function	[function_1] rank ||| [function_1] [function_2]	count=1
module	of the ||| numpy chararray	count=1
module	centered ||| numpy core defchararray	count=1
module	evaluate a 2-d [module_1] [module_2] product ||| [module_2] [module_1] hermegrid2d	count=1
function	access permissions of a ||| chmod	count=1
function	symmetric [function_2] ||| [function_1] [function_2]	count=17
arg	of s in a ||| s	count=3
module	hexadecimal ||| quopri	count=1
function	return its [function] ||| [function]	count=3
arg	module ||| module path	count=1
module	thread ||| threading thread	count=2
function	starts with ||| startswith	count=2
module	of legendre [module_2] ||| [module_2] [module_1]	count=3
arg	representing the path to ||| path	count=1
arg	number in ||| number	count=1
function_arg	new thread [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] windows registry ||| [arg_2] [arg_1]	count=1
arg	end of b ||| b	count=2
function	number of bytes ||| bytes	count=1
function	convert a 16-bit ||| htons	count=1
module	of the database in ||| sqlite3 connection	count=1
module	legendre series by ||| polynomial legendre	count=2
function_arg	[function_1] of x ||| [arg_2] [function_1]	count=3
function	[function_1] asian width ||| [function_1] [function_2]	count=3
module	write the ending records ||| zipfile zipfile	count=1
function	sum of ||| sum	count=1
arg	a file for low ||| filename flag mode	count=1
function	a shallow copy ||| copy	count=2
function	measurement units to radians ||| radians	count=1
arg	url to read from ||| url	count=1
arg	file using the ||| buffering	count=1
function	a and keep it ||| insort left	count=1
module	id ||| turtle	count=1
function_arg	[function_1] encoding and ||| [arg_2] [function_1]	count=1
arg	a ||| path ignore_errors onerror	count=1
function_arg	new thread [arg_2] ||| [function_1] [arg_2]	count=1
arg	arguments element-wise ||| x1 x2	count=2
function_arg	at addr ||| at ptr size	count=1
arg	principal [arg_2] ||| [arg_2] [arg_1]	count=2
arg	a python ||| indent width depth	count=1
function_arg	not b ||| not a b	count=1
arg	[arg] width ||| a width [arg]	count=3
arg	the new item ||| item	count=1
arg	string where substring sub ||| sub	count=1
arg	write the [arg] to file ||| [arg]	count=1
arg	of b ||| a b	count=1
arg	specified suffix ||| suffix	count=2
arg	decorator to ||| decorator	count=1
function	the tangent ||| tan	count=1
arg	address in string ||| string	count=2
function	natural base e logarithm ||| ln	count=1
function	[function_1] list ||| [function_1] [function_2] extracted_list file	count=1
function	returns the transpose of ||| t	count=1
module	return or ||| turtle	count=1
function	return the angle ||| angle	count=1
function	returns the keys ||| keys	count=1
function	its decoder function ||| getdecoder	count=1
function	hamming ||| hamming	count=1
function	from a string ||| from string	count=3
function	an indication ||| number	count=1
function_arg	+ [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	append [arg_2] ||| [arg_2] [function_1]	count=6
function	[function_1] root window ||| [function_1] [function_2]	count=2
function	current action for ||| getsignal	count=1
function	2-dimensional ||| rfft2	count=1
function_arg	[function_1] to x ||| [function_1] [arg_2]	count=1
arg	operand ||| context	count=2
function	as a multipart boundary ||| choose boundary	count=1
module	array to ||| core defchararray chararray	count=1
module	new datetime ||| datetime datetime	count=1
function	print the list of ||| print list	count=1
module	convert [module] ip address ||| [module]	count=1
module	a new [module] with ||| [module]	count=1
function	t ||| t	count=1
rep	[module_1] normal gaussian ||| [module_1] [function_arg_2]	count=2
module	series whose graph is ||| numpy polynomial	count=3
function	the bit-wise ||| bitwise	count=2
module	random ||| random	count=10
arg	path with arguments and ||| path args env	count=1
function	list of aliases ||| gethostbyaddr	count=1
function	compute the absolute values ||| fabs	count=1
module	at the current position ||| cstringio stringi	count=1
arg	query [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] string ||| [function_2] [function_1]	count=7
function	hqx crc ||| crc hqx	count=2
arg	sub in [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the object is an ||| object	count=2
arg	draw samples from ||| right size	count=1
module	return ||| mimetools	count=1
module	return ||| numpy random randomstate	count=1
function	a path ||| path	count=1
module	matrix of ||| laguerre	count=1
arg	the values in b ||| b	count=1
arg	given shape filled with ||| dtype	count=1
function_arg	true division [arg_2] ||| [arg_2] [function_1]	count=1
module	matrix ||| numpy polynomial	count=1
function	libc ||| libc ver	count=1
module	abc ||| abc abcmeta	count=1
arg	[arg] return ||| [arg]	count=2
function	multiply ||| legmul	count=1
function	mapping [function_2] ||| [function_2] [function_1]	count=1
function	a list of aliases ||| gethostbyname ex	count=1
module	file and for ||| zipfile	count=2
function	[function_1] filling value ||| [function_2] [function_1]	count=1
rep	[module_1] is a ||| [module_1] [function_arg_2]	count=14
arg	[arg_1] true : ||| gettext test [arg_1] [arg_2]	count=3
function	resource to the resource ||| plist to resource	count=1
arg	specified ||| ei	count=1
module	list from a given ||| numpy ma	count=1
module	specified axis ||| numpy	count=1
arg	entries from tb to ||| etype value tb	count=1
module	return the ||| numpy linalg	count=1
arg	of c ||| c	count=5
function	units to radians ||| radians	count=1
arg	subsection is not found ||| sub start end	count=2
arg	an array without changing ||| a	count=1
function	the name ||| name	count=1
function	round ||| round	count=1
arg	of length ||| fillchar	count=8
arg	value [arg] to ||| [arg]	count=1
arg	[arg_1] operand ||| [arg_1] [arg_2]	count=3
function	supported formats for archiving ||| archive formats	count=1
function_arg	wrapper function ||| wrapper func	count=1
arg	recursively ||| path	count=1
module	a new [module] ||| [module]	count=1
arg	args in ||| args env	count=1
arg	version ||| version	count=2
module	a kqueue ||| kqueue	count=1
arg	x in list ||| a x	count=10
function	+ ||| concat	count=1
function	and environment replacing ||| execve	count=1
arg	of x [arg_2] ||| [arg_2] [arg_1]	count=13
function	reduce a mask to ||| mask	count=2
function	list of namespaces ||| namespaces	count=1
function	self as a flattened ||| a1	count=1
module	a 2-d [module] cartesian ||| [module]	count=5
function	week [function] ||| [function]	count=1
arg	src [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	v [function_1] [arg_2] corresponding value ||| collections ordereddict [function_1] [arg_2]	count=1
arg	elements of x ||| x	count=1
function	common to the input ||| common	count=1
arg	stop step ||| stop step	count=2
function	compute the roots of ||| hermroots	count=1
arg	y depending on ||| y	count=1
module	compute the ||| numpy	count=1
arg	pseudo-vandermonde matrix of ||| x y deg	count=1
function	fill the shape ||| fill	count=1
arg	condition ? ||| condition	count=1
function	compile [function_2] ||| [function_2] [function_1]	count=1
arg	return an [arg_2] ||| [arg_2] [arg_1]	count=4
arg	numeric uid and gid ||| uid gid	count=3
arg	convert a packed ip ||| af packed_ip	count=1
arg	first/last [arg] of ||| [arg]	count=1
function	environment [function_2] ||| [function_2] [function_1]	count=1
module	the laguerre ||| numpy polynomial laguerre	count=1
arg	[arg] as ||| [arg]	count=4
function	statement ||| statement	count=1
function_arg	[function_1] [arg_2] ||| [function_1] fd [arg_2]	count=9
arg	determine if a record ||| record	count=1
module	contain masked ||| ma	count=2
arg	matrix equation ||| b	count=1
function	incrementalencoder class or factory ||| getincrementalencoder	count=1
arg	or if ||| prefix onerror	count=1
function	width ||| width	count=2
module	returns iterator to ||| connection	count=1
function	parse a config ||| parse config h	count=3
function_arg	convert an 8bit [function_1] [arg_2] ||| mimify mimify [function_1] [arg_2]	count=6
module	host and ||| socket	count=1
module	[module_1] to its ||| [module_1] [module_2]	count=1
arg	x1 to that ||| x1	count=1
function	a config ||| config h	count=1
module	string and working ||| string	count=1
arg	rootobject as ||| rootobject	count=2
function	bit-wise or of ||| bitwise or	count=2
function	the single namespace ||| namespace	count=1
function	create a new element ||| element create	count=1
arg	maintaining the heap ||| heap	count=1
arg	roll the specified axis ||| axis start	count=1
function	register ||| register	count=3
function_arg	[function_1] an integer ||| [arg_2] [function_1]	count=1
function	a module [function_2] ||| runpy [function_2] [function_1]	count=1
function	element in ||| element	count=1
arg	rate ||| finance_rate reinvest_rate	count=1
arg	file name' to ||| name arcname recursive exclude filter	count=1
function	vertices [function_2] ||| [function_2] [function_1]	count=1
arg	a file for low ||| filename	count=1
function	object as a ustar ||| pax	count=1
module	i/o thread lock ||| handler	count=2
module	w and a ||| zipfile zipfile	count=1
function_arg	a plist [arg_2] ||| [function_1] from string [arg_2]	count=1
arg	as a ||| c	count=1
arg	a [arg] ||| s width [arg]	count=3
module	an ae descriptor ||| aepack	count=1
function	do basic [function] for ||| basic [function]	count=1
arg	delete a ||| path ignore_errors	count=1
function	numeric ||| number	count=1
arg	list names that ||| names	count=1
arg	[arg_1] args in ||| [arg_1] [arg_2]	count=2
function	pipe with [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] memory ||| [function_2] [function_1]	count=1
function	permissions ||| chmod	count=1
arg	day ||| day	count=2
arg	given file ||| file	count=2
arg	c is a subclass ||| c b	count=1
arg	fullname ||| fullname	count=2
module	data along the ||| numpy	count=1
arg	return the least-squares solution ||| a b rcond	count=1
function	indices to access the ||| indices from	count=1
function	permissions of ||| chmod	count=1
function	pack the values v1 ||| pack	count=1
module	array with the ||| numpy chararray	count=1
arg	dimensions of an array ||| a axes	count=1
arg	[arg] the ||| file [arg]	count=1
function	test program ||| test	count=1
module	the call ||| turtle	count=1
arg	pass a record ||| record	count=1
arg	to x y ||| x y	count=2
module	set array flags ||| core defchararray chararray	count=1
module	the angle measurement units ||| turtle	count=1
arg	a frame ||| frame context	count=1
function	kill the process ||| kill	count=1
module	a new [module] with a ||| [module]	count=1
arg	address of the c ||| c	count=1
function	debugging flags ||| debug	count=1
module	return ||| turtle	count=4
module	and ||| zipfile zipfile	count=2
arg	domain ||| domain	count=3
function	[function_1] a string ||| [function_2] [function_1]	count=1
module	with time ||| datetime	count=1
function	process return [function] ||| [function]	count=1
arg	b in between each ||| b iterable_of_bytes	count=1
module	[module_1] series ||| [module_2] [module_1] hermegrid2d	count=1
function_arg	the real [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	get [arg_2] ||| [arg_2] [function_1]	count=2
arg	prefix otherwise ||| a prefix	count=1
module	the i/o thread lock ||| logging	count=2
module	all [module] calls ||| [module]	count=1
arg	in a string ||| a	count=1
function	all items of ||| array max ulp	count=1
function	returns the transpose of ||| get t	count=1
function	of default [function_2] ||| [function_2] [function_1]	count=2
module	pseudo-vandermonde ||| numpy polynomial laguerre	count=2
function	new array with the ||| resize	count=1
function	multiply ||| hermemul	count=1
arg	array with the ||| a	count=1
function	the union ||| union1d	count=1
arg	flag is false ||| flag	count=1
module	a linear matrix ||| numpy	count=1
function_arg	path corresponding to ||| get path name	count=1
module	drawn ||| turtle	count=1
arg	recursively delete ||| ignore_errors onerror	count=1
module	pickle of the array ||| chararray	count=1
arg	numpy ||| output	count=1
function_arg	plist [arg_2] ||| [function_1] from string [arg_2]	count=1
function_arg	[function_1] number to ||| [function_1] [arg_2]	count=1
arg	return an array ||| a dtype	count=4
function	returns a sha384 ||| sha384	count=1
function	start a [function_2] ||| [function_1] [function_2]	count=4
module	a logger ||| logger	count=1
arg	matrix ||| a b	count=1
module	write the ||| zipfile	count=2
function_arg	[function_1] which is ||| [arg_2] [function_1]	count=4
function_arg	[function_1] name' to ||| [arg_2] [function_1]	count=1
arg	[arg_1] [arg_2] ||| hermegrid2d [arg_1] [arg_2]	count=1
arg	b to ||| a b	count=1
function	return the tangent ||| tan	count=1
module	hermite series by ||| polynomial hermite	count=2
function	the filename ||| filename	count=1
function	aliases and a ||| gethostbyname ex	count=1
module	maximum ||| sys	count=1
arg	if ||| prefix onerror	count=1
arg	if text ||| text	count=1
function_arg	mask from [arg_2] ||| [arg_2] [function_1]	count=1
arg	a python object ||| object indent	count=1
arg	prefix otherwise false ||| prefix	count=1
function	subprocess ||| spawnv	count=1
module	all turtles on ||| turtle	count=1
arg	additional version information ||| release version	count=1
arg	a local reduce with ||| dtype out	count=1
function	along ||| nanpercentile	count=1
arg	single '#' ||| pat	count=1
module	array to ||| numpy chararray	count=1
module	as the context ||| decimal context	count=1
function	union ||| union1d	count=1
function	while ignoring ||| nanpercentile	count=1
function_arg	< [arg_2] ||| [function_1] x1 [arg_2]	count=1
function	a cbreak ||| setcbreak	count=1
function	~ a ||| inv	count=1
function_arg	right-justified in [arg_2] ||| [function_1] [arg_2]	count=1
function	a cbreak mode ||| setcbreak	count=1
function	operating system ||| uname	count=1
function_arg	right [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	's position [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	a key [arg_2] ||| [arg_2] [function_1]	count=1
arg	a packed ip ||| af packed_ip	count=1
arg	parts of a mime ||| infile outfile	count=1
function	string in the ||| format string	count=1
function	copy a ||| copy	count=1
module	object to simplify ||| numpy chararray	count=1
arg	a sequence of ||| sequence	count=1
arg	[arg_1] names ||| [arg_1] [arg_2]	count=3
arg	specified axis ||| axis start	count=1
module	ndarray ||| matrix	count=1
function_arg	[function_1] [arg_2] ||| [function_1] s old new [arg_2]	count=2
arg	[arg] argument ||| [arg]	count=1
arg	a url ||| url	count=3
module	[module] in ||| [module]	count=1
function	return the day ||| weekday	count=1
function_arg	[function_1] file name' ||| [function_1] [arg_2]	count=1
arg	the payment ||| rate per nper	count=1
module	original float ||| float	count=1
module	of the array with ||| numpy chararray	count=1
rep	the line from the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=4
arg	host ||| host	count=4
module	create a kqueue ||| select kqueue	count=1
function	returns a matrix from ||| matrix	count=1
function	ndarray ||| getdata	count=1
function	list of ||| archive	count=1
module	pseudo-vandermonde matrix ||| laguerre	count=1
module	return date ||| datetime date	count=1
function	unwrap by changing ||| unwrap	count=1
module	with sigterm ||| subprocess	count=1
function	[function_1] polygon ||| [function_2] [function_1]	count=2
function	looking for ||| search	count=1
module	returns ||| context	count=1
function	lines in ||| lines	count=1
arg	to list ||| list	count=1
module	database ||| sqlite3	count=1
function	[function_1] class of ||| [function_2] [function_1]	count=1
arg	execute ||| mode	count=3
arg	string with ||| s binary maxlinelen eol	count=1
module	iterator to ||| connection	count=1
module	flushes ||| logging streamhandler	count=1
arg	recursively delete a directory ||| path	count=1
function_arg	methods in a ||| decorate methods cls	count=1
arg	a directory tree ||| path	count=1
arg	compare common ||| a b common	count=1
arg	a given name ||| name frame	count=1
arg	that of exp ||| exp	count=1
arg	a fd ||| fd	count=1
function	create a new ||| new	count=1
function	drawn after the call ||| end	count=1
function	terminate the process ||| terminate	count=1
arg	query in [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the bins to ||| bins right	count=1
arg	data along ||| a	count=1
module	of an array to ||| numpy ma masked_array	count=1
module	table ||| htmlcalendar	count=4
arg	prefix otherwise ||| a prefix start end	count=1
function_arg	subtract one ||| lagsub c1 c2	count=1
module	two sets as a ||| sets baseset	count=1
arg	a given axis ||| axis	count=3
function_arg	format the [arg_2] ||| [arg_2] [function_1]	count=3
arg	cartesian [arg_1] [arg_2] ||| laggrid2d [arg_1] [arg_2]	count=1
arg	and b sequences ||| b	count=2
function	terminate ||| terminate	count=1
module	same decimal object ||| decimal context	count=1
arg	an array ||| a axis	count=1
function_arg	subtract one ||| hermesub c1 c2	count=1
function_arg	permissions of [arg_2] ||| [function_1] [arg_2]	count=1
arg	tree ||| path ignore_errors onerror	count=1
function_arg	[function_1] begindates and ||| [function_1] [arg_2]	count=1
arg	a [arg] ||| [arg]	count=8
function	set the [function_2] ||| [function_1] [function_2]	count=6
function	file [function] ||| [function]	count=1
function	address ||| address	count=1
arg	[arg] required ||| condition [arg]	count=2
arg	object to ||| object	count=2
function	vertices ||| begin	count=1
arg	cartesian [arg_1] [arg_2] ||| hermegrid2d [arg_1] [arg_2]	count=1
function	read a ||| read	count=2
function	logger is [function_2] ||| [function_1] [function_2]	count=3
module	as a table ||| calendar htmlcalendar	count=3
arg	as an ||| a subok	count=2
arg	a path with arguments ||| path	count=1
arg	in radians of ||| x	count=2
arg	a module file ||| module path	count=1
function	within a ||| arange	count=1
function	function to ||| function	count=1
function_arg	permute the [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] an ||| [arg_2] [function_1]	count=8
module	series to ||| polynomial	count=11
module	along the ||| numpy	count=1
function	into a ||| into	count=2
function	print a [function_2] ||| [function_1] [function_2]	count=1
function	3-d ||| leggrid3d	count=1
function	error ||| error	count=1
arg	scheme ||| scheme	count=2
rep	random samples [function_arg_2] ||| [module_1] [function_arg_2]	count=4
module	is ||| numpy ma	count=1
function_arg	[function_1] rootobject as ||| [arg_2] [function_1]	count=1
function_arg	a |= b ||| ior a b	count=1
function	xor ||| xor	count=3
module	array flags writeable ||| chararray	count=1
function_arg	[function_1] source ||| [function_1] [arg_2]	count=1
module	its id ||| turtle	count=1
module	hermite series whose ||| polynomial hermite	count=1
rep	[module_1] debugging flags ||| [module_1] set [function_arg_2]	count=2
module	float ||| float	count=3
arg	b when ||| b	count=2
module	the file and ||| zipfile	count=2
function	a key ||| key	count=1
function	treating not a ||| nanprod	count=1
function	[function_1] class to ||| [function_1] logger [function_2]	count=2
function	the ||| lstsq	count=1
function	class of the ||| class	count=1
module	the hermite_e ||| hermite_e	count=1
module	a legendre series ||| numpy polynomial legendre	count=4
module	the given array ||| chararray	count=1
function_arg	display [arg_2] ||| [function_1] [arg_2]	count=1
arg	list a assuming ||| lo hi	count=4
function	return matrix [function_2] ||| [function_2] [function_1]	count=4
arg	specified width padded ||| width	count=2
function_arg	[function_1] and b ||| [function_1] [arg_2]	count=4
arg	matching a regular ||| testmatch	count=1
function	specified ||| record	count=1
function	history file ||| history	count=1
function	start a [function_2] ||| [function_2] [function_1]	count=4
function	visible ||| showturtle	count=1
module	series to a ||| polynomial	count=4
arg	a data-type ||| dtype	count=1
arg	string by the ||| string	count=1
function_arg	xor [arg_2] ||| [function_1] [arg_2]	count=1
module	masked array along ||| ma	count=1
module	[module] raising systemexit ||| [module]	count=1
function_arg	[function_1] file using ||| [arg_2] [function_1]	count=1
arg	resource from ||| resource	count=1
arg	group ||| pgid	count=1
arg	from an index ||| a choices	count=1
function	to their initial state ||| resetscreen	count=1
function	return [function_2] ||| [function_1] [function_2]	count=1
module	an abc ||| abc	count=1
arg	on the cartesian product [arg_1] [arg_2] ||| polygrid2d [arg_1] [arg_2]	count=1
arg	adict ||| adict	count=1
module	array with the ||| numpy	count=2
arg	[arg_1] pat ||| [arg_2] [arg_1]	count=3
arg	specified ||| a	count=2
module	is a masked array ||| numpy ma	count=1
module	hermite series to a ||| polynomial hermite_e	count=1
arg	a base ||| base	count=2
function	array ||| array	count=1
arg	long integer ||| number	count=1
function	along the specified ||| nanpercentile	count=1
module	given ||| ma	count=4
arg	non-masked elements of the ||| keepdims	count=1
function_arg	[function_1] mime mail ||| mimify mimify [function_1] [arg_2]	count=1
function	current [function_2] ||| [function_1] [function_2]	count=1
arg	names titles description to ||| names titles aligned byteorder	count=1
arg	convert an ip address ||| ip	count=1
arg	block ||| tarinfo	count=1
module	i/o thread ||| logging handler	count=2
function_arg	the hamming [arg_2] ||| [function_1] [arg_2]	count=1
function	the turtle [function] ||| [function]	count=5
function	owner and group ||| lchown	count=1
function	the code ||| get code	count=1
arg	obj assuming obj ||| obj	count=1
function	return the indices to ||| indices	count=1
module	a [module] ||| [module]	count=23
arg	specified url to ||| url	count=1
function	archiving and ||| get	count=1
arg	optimize [arg] pickle ||| [arg]	count=1
function_arg	[function_1] y ||| [arg_2] [function_1]	count=3
function	the source code ||| source	count=2
function	between self and ||| and	count=1
function_arg	not [arg_2] ||| [arg_2] [function_1]	count=1
arg	the windows registry ||| csd ptype	count=1
arg	to to_angle ||| to_angle	count=2
arg	ceiling [arg] as a ||| [arg]	count=2
module	this handler ||| handler	count=1
function	return a ||| resize	count=1
function	a list of environment ||| environ	count=1
function_arg	a // b ||| floordiv a b	count=1
function	[function_1] the data ||| [function_2] [function_1]	count=1
arg	parts of a ||| infile outfile decode_base64	count=1
module	including finder info ||| macostools	count=1
arg	path with arguments and ||| path	count=1
arg	sub in string s[start:end] ||| s sub	count=1
function_arg	circle [arg_2] ||| [function_1] [arg_2]	count=1
arg	equal up to desired ||| desired	count=1
function	encode a [function_2] ||| [function_1] [function_2]	count=1
function	+= b ||| iconcat	count=1
arg	recursively ||| ignore_errors	count=1
module	the ||| sqlite3 cursor	count=1
module	for archiving and unarchiving ||| shutil	count=1
function	long integer represented by ||| atol	count=1
function	path ||| get path	count=1
module	i/o ||| logging	count=2
arg	a linear matrix ||| a b	count=1
module	the database ||| connection	count=1
module	random samples from ||| random	count=2
function	the vertices of a ||| begin	count=1
arg	delete a ||| path ignore_errors onerror	count=1
function_arg	[function_1] part of ||| [arg_2] [function_1]	count=3
function	if two [function] objects ||| assert [function]	count=1
function_arg	absolute values [arg_2] ||| [function_1] [arg_2]	count=1
function	the blackman ||| blackman	count=1
module	string encoding used ||| sys	count=1
arg	args in a subprocess ||| args	count=1
arg	a and b ||| b	count=3
module	polynomial ||| numpy polynomial	count=4
module	[module_1] series from ||| [module_2] [module_1]	count=4
function_arg	code [arg_2] ||| [function_1] [arg_2]	count=1
module	array ||| numpy	count=7
function_arg	[function_1] corresponding ||| [arg_2] [function_1]	count=3
module	a ||| frozenset	count=2
module	write all [module] as machine ||| [module]	count=1
function	union ||| union	count=2
module	to ||| numpy	count=2
module	identifies the current thread ||| thread	count=1
function	the setter on ||| setter	count=1
arg	the database file ||| file	count=1
function_arg	round an array ||| round_ a	count=1
arg	maintain order ||| a v side sorter	count=1
module	the file and for ||| zipfile zipfile	count=1
module	the array with the ||| numpy	count=1
function_arg	unittest option [arg_2] ||| [function_1] [arg_2]	count=1
module	chebyshev series by ||| numpy polynomial chebyshev	count=2
function	a normal ||| normal	count=2
function	a python function ||| string function	count=1
function	of given degrees ||| legvander2d	count=1
function	rate ||| rate	count=1
function	[function_1] callback ||| [function_1] [function_2]	count=1
function	true [function_2] ||| [function_2] [function_1]	count=4
arg	delete a directory ||| path ignore_errors onerror	count=1
arg	file ||| filename globals	count=1
function	's second coordinate to ||| sety	count=1
arg	[arg_1] y z ||| [arg_1] [arg_2]	count=5
arg	[arg] or ||| fp [arg] keep_blank_values	count=2
module	the ||| os	count=1
arg	fill_value ||| fill_value	count=1
function_arg	[function_1] x or ||| [function_1] condition [arg_2]	count=3
arg	a new array with ||| a	count=1
function	set or remove the ||| set	count=3
arg	[arg_1] y depending ||| [arg_2] [arg_1]	count=1
function	with the ||| resize	count=1
module	series on the ||| numpy polynomial	count=8
function	underlying logger is ||| is	count=1
arg	array with ||| shape dtype	count=1
function_arg	[function_1] characters removed ||| [function_1] [arg_2]	count=2
function	to the ||| to	count=1
function	that all items of ||| array	count=1
function	usable ||| choose	count=1
module	macos ||| macos	count=2
function	for archiving ||| get	count=1
function	true division ||| true divide	count=2
function	*= ||| imul	count=1
arg	from the file ||| size	count=2
arg	shape ||| shape	count=2
function	zero ||| zero	count=2
function	intersection ||| intersection	count=2
function	change the sign ||| copysign	count=1
function	set the [function_2] ||| [function_1] logger [function_2]	count=4
arg	minor device numbers ||| minor	count=1
function	unpack the buffer containing ||| unpack from	count=1
function	set modification time of ||| utime	count=1
arg	directory ||| ignore_errors	count=1
function	and [function_2] ||| [function_2] [function_1]	count=8
module	new [module] objects ||| [module]	count=1
function	npv net ||| npv	count=1
arg	return a unique temporary ||| prefix dir	count=3
arg	format x ||| x	count=2
module	disable all [module] calls of ||| [module]	count=1
arg	to an array without ||| a newshape	count=1
arg	to an array ||| a dtype	count=2
function	[function] as ||| [function]	count=2
arg	but raises valueerror when [arg_1] [arg_2] not ||| numpy core defchararray rindex [arg_2] [arg_1]	count=1
module	array with the specified ||| numpy	count=1
function	left-justified ||| ljust	count=2
arg	into addrinfo struct ||| family socktype proto flags	count=1
function_arg	convert [function_1] [arg_2] quoted-printable ||| mimify [function_1] [arg_2]	count=2
function	returns the name ||| name	count=1
arg	[arg_1] given axis ||| [arg_2] [arg_1]	count=1
module	on the [module] named ||| [module]	count=1
function	error function at ||| erf	count=1
arg	draw samples from the ||| size	count=3
module	in an ||| connection	count=1
arg	the best good enough ||| word possibilities n cutoff	count=1
arg	[arg_1] gid ||| [arg_1] [arg_2]	count=12
module	is a masked array ||| ma	count=1
function	function ||| string function	count=1
function	[function_1] enabled ||| [function_2] [function_1]	count=4
function	right-justified version of ||| rjust	count=1
arg	[arg] and ||| [arg]	count=9
function_arg	== [arg_2] ||| [function_1] x1 [arg_2]	count=1
arg	[arg_1] environment ||| cgi parse fp [arg_2] [arg_1]	count=1
function	input with invalid ||| invalid	count=1
function	matrix of ||| lagvander	count=1
function	sets ||| set	count=2
function	[function_1] class ||| [function_1] logger [function_2]	count=2
function_arg	multiply one ||| hermmul c1 c2	count=1
arg	a unique temporary ||| suffix prefix dir text	count=1
module	stack trace ||| traceback	count=2
function	and [function] ||| [function]	count=1
function	return the blackman ||| blackman	count=1
module	returns ||| decimal	count=4
arg	create [arg_2] ||| [arg_2] [arg_1]	count=2
arg	a number in the ||| number	count=1
function	shared cache mode for ||| shared cache	count=1
function	[function_1] and type ||| [function_2] [function_1]	count=2
function_arg	+ b [arg_2] ||| [function_1] [arg_2]	count=1
arg	in a class ||| cls	count=1
arg	to path ||| path	count=1
function	string ||| string	count=6
arg	optionally saving results ||| sort	count=1
function_arg	+= b [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] b to ||| [function_1] [arg_2]	count=3
function	latter ||| urljoin	count=2
module	tarinfo 's ||| tarfile tarinfo	count=1
function	[function_1] normal ||| [function_2] [function_1]	count=2
function_arg	16-bit integer from ||| htons integer	count=1
module	object ||| thread	count=1
arg	element is [arg] titlecased ||| [arg]	count=1
function	shared cache mode ||| shared cache	count=1
arg	convert formats [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] two numbers ||| [function_1] [arg_2]	count=1
function	vertices of ||| begin	count=1
arg	[arg_1] y ||| chebgrid2d [arg_1] [arg_2]	count=3
arg	[arg_1] [arg_2] ||| laggrid2d [arg_1] [arg_2]	count=1
arg	path to which ||| path	count=1
arg	the shell command cmd ||| cmd	count=2
arg	with the ||| a	count=1
function	dumped to a ||| wcoredump	count=1
function_arg	extension from a ||| splitext p	count=1
arg	a local reduce with ||| dtype	count=1
function	code at the top ||| getblock	count=1
function	owner ||| chown	count=2
function	the hamming ||| hamming	count=1
module	a string ||| mimetools	count=1
arg	execute a path with ||| path args	count=1
module	for ||| logging bufferingformatter	count=1
arg	of targetpath according ||| targetpath	count=3
module	the current transaction ||| connection	count=2
arg	item x in ||| a x	count=8
function_arg	configuration limit [arg_2] ||| [arg_2] [function_1]	count=4
function	profiling function set with ||| getprofile	count=1
module	of the laguerre ||| laguerre	count=1
function	type for ||| type	count=2
arg	new ||| new	count=3
module	to imap4 ||| imaplib	count=1
arg	an array without changing ||| a newshape	count=1
module	method representing the thread ||| thread	count=1
arg	true if [arg] is a ||| [arg]	count=1
function_arg	[function_1] object ||| [arg_2] [function_1]	count=6
arg	compute the qth percentile ||| a q	count=1
function	equal ||| equal	count=1
function_arg	a converter [arg_2] ||| [function_1] [arg_2]	count=2
module	by the handler ||| handler	count=1
function	[function_1] implementation branch ||| [function_1] [function_2]	count=4
function	recursion limit the ||| getrecursionlimit	count=1
module	hermitee series on ||| numpy polynomial hermite_e	count=3
module	series to the ||| polynomial hermite	count=1
module	the turtleshape onto the ||| turtle	count=1
arg	command returning ||| command mode bufsize	count=1
module	whitespace [module] there ||| [module]	count=1
function	the median along the ||| median	count=1
function_arg	the startup_hook [arg_2] ||| [arg_2] [function_1]	count=1
arg	path is ||| path	count=1
arg	lowest index [arg] where substring ||| [arg]	count=1
arg	b when __future__.division ||| b	count=2
rep	same as [function_arg_2] ||| [module_1] [function_arg_2]	count=40
function	for ||| get	count=4
function_arg	remove [arg_2] ||| collections ordereddict [function_1] od key [arg_2]	count=1
function_arg	v [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	plus interest ||| nper pv fv	count=1
arg	a traceback on ||| traceback	count=1
arg	of x [arg_2] ||| turtle log [arg_1] [arg_2]	count=1
arg	c ||| c	count=9
arg	etc ||| src dst createpath copydates forcetype	count=1
arg	command returning a file ||| command mode bufsize	count=1
function_arg	[function_1] sql ||| [function_1] statement [arg_2]	count=4
function	returns the transpose ||| get t	count=1
arg	x into ||| x	count=1
arg	python object ||| object indent width depth	count=1
arg	decorator ||| decorator	count=1
function	the header ||| header	count=1
arg	from ||| data	count=1
arg	recursively delete ||| onerror	count=1
function	[function_1] value ||| [function_1] [function_2]	count=3
function	of aliases and ||| gethostbyname ex	count=1
arg	to a stream ||| stream indent width	count=1
function_arg	[function_1] occurrences of ||| [function_1] b old new [arg_2]	count=1
arg	given degree ||| x deg	count=1
module	given array ||| ma masked_array	count=1
function	return the day of ||| weekday	count=1
function_arg	[function_1] b ||| [function_1] [arg_2]	count=23
arg	substring sub [arg_2] ||| numpy core defchararray rindex [arg_2] [arg_1]	count=1
arg	bind ||| btn add	count=3
function_arg	left-justified [arg_2] ||| [arg_2] [function_1]	count=1
arg	s ||| s table	count=1
function	response ||| parse	count=1
function	the documentation string ||| getdoc	count=1
arg	element is [arg] titlecased string ||| [arg]	count=1
arg	path of file ||| path	count=1
module	series by ||| numpy polynomial	count=9
module	laguerre series to another ||| numpy polynomial laguerre	count=1
arg	entries from tb to ||| value tb	count=1
function	sequencematcher to return list ||| get	count=1
function_arg	into a [arg_2] ||| [function_1] [arg_2]	count=3
module	expression pattern returning ||| re	count=1
arg	the [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=4
arg	[arg_1] true ||| [arg_2] [arg_1]	count=3
arg	an array without ||| a	count=1
arg	an ||| a copy	count=1
module	an st object ||| parser	count=2
arg	if d ||| d	count=1
arg	using fill_value as a ||| fill_value	count=1
function_arg	[function_1] condition is ||| [function_1] [arg_2]	count=2
module	in an ||| sqlite3	count=1
arg	a [arg] refers to ||| [arg]	count=1
function	a starts with ||| startswith	count=1
module	records ||| zipfile	count=2
function	last modification time of ||| getmtime	count=2
function_arg	string at [arg_2] ||| [function_1] [arg_2]	count=1
function	the power ||| power	count=1
arg	of b [arg_2] ||| [arg_2] [arg_1]	count=1
function	leading ||| lstrip	count=1
rep	of [function_arg_2] ||| [module_1] [function_arg_2]	count=8
function_arg	round a [arg_2] ||| [arg_2] [function_1]	count=3
module	data along ||| numpy	count=1
function	to a linear ||| lstsq	count=1
arg	virtual subclass of an ||| cls subclass	count=1
arg	class ||| domain window	count=1
module	of two or more ||| frozenset	count=1
module	element ||| ttk style	count=1
module	with ||| subprocess	count=2
function	roots of ||| hermroots	count=1
arg	input to an ||| a dtype order	count=1
arg	by a fill value ||| copy fill_value	count=1
arg	a file for ||| filename	count=1
function	direct [function] nodes ||| [function]	count=1
arg	a line ||| ascii	count=1
module	series by another ||| numpy polynomial	count=6
arg	create ||| dtype	count=1
function	environment replacing ||| execve	count=1
function	return the ip address ||| thishost	count=1
module	the thread ||| thread	count=2
arg	dst ||| dst	count=2
arg	[arg_1] y ||| [arg_2] [arg_1]	count=49
arg	new value [arg] to ||| [arg]	count=1
arg	to high ||| high size dtype	count=1
arg	statement under ||| statement	count=1
module	applying ufunc along ||| ufunc	count=1
arg	source string into a ||| source	count=1
arg	the condition is true ||| condition reason	count=2
arg	source string by the ||| string	count=1
function	the header string ||| format header	count=2
arg	stop [arg_2] ||| [arg_1] [arg_2]	count=1
arg	for category to the ||| category	count=1
function_arg	[function_1] a ||| [function_1] normal [arg_2]	count=1
function_arg	float but rounding ||| float f	count=1
module	angle ||| turtle	count=1
function	treating not ||| nansum	count=1
function	returns a sha512 ||| sha512	count=2
module	an ssl channel ||| ssl sslsocket	count=2
module	formatted ||| textcalendar	count=1
function	is enabled for ||| is enabled for	count=1
module	a write the ending ||| zipfile zipfile	count=1
function	access permissions ||| chmod	count=1
function_arg	[function_1] with ||| [function_1] [arg_2]	count=3
arg	values in b ||| b	count=1
arg	the tarinfo object ||| tarinfo	count=1
arg	for encoding ||| encoding errors	count=2
arg	the specified axis while ||| a axis	count=1
module	string and working to ||| string	count=1
function	difference of two ||| difference	count=3
function	the code ||| code	count=1
module	sigterm ||| subprocess	count=1
module	array ||| defchararray chararray	count=2
function	release the i/o ||| release	count=1
module	cgi ||| cgi	count=1
function	all direct [function] nodes of ||| [function]	count=1
arg	a tarinfo ||| tarinfo	count=1
function	array with ||| resize	count=1
function_arg	[function_1] two ||| [function_1] [arg_2]	count=1
arg	piecewise-defined function ||| condlist funclist args kw	count=1
arg	to an array ||| a newshape	count=1
arg	? true : ||| true	count=1
arg	present value of ||| rate values	count=1
function_arg	particular [arg_2] ||| [arg_2] [function_1]	count=1
module	series whose graph ||| polynomial	count=3
function	of ||| get	count=1
arg	[arg_1] stream ||| [arg_1] [arg_2]	count=2
function	abort the ||| abort	count=1
arg	roots ||| roots domain window	count=2
arg	qth percentile ||| a q	count=1
function	's first coordinate to ||| setx	count=1
module	items ||| array array	count=1
arg	values [arg_2] ||| [arg_2] [arg_1]	count=1
arg	is found ||| start end	count=5
function_arg	[function_1] bytes contained ||| [function_1] [arg_2]	count=1
arg	of a mime ||| is_mime	count=1
function_arg	[function_1] to limit ||| [function_1] tb tb [arg_2]	count=1
function_arg	[function_1] window ||| [arg_2] [function_1]	count=9
module	data masked ||| ma	count=1
arg	string of length ||| fillchar	count=8
function	[function] themename ||| [function]	count=3
function_arg	[function_1] open file ||| [arg_2] [function_1]	count=1
function_arg	the median [arg_2] ||| [function_1] [arg_2]	count=1
arg	suffix false otherwise ||| suffix	count=2
function	the environment ||| environment	count=1
function_arg	[function_1] turtle-window ||| [function_1] [arg_2]	count=1
function	a standard normal ||| standard normal	count=2
function	multipart boundary ||| choose boundary	count=1
function	with the supplied environment ||| spawnle	count=1
arg	assuming obj ||| obj	count=1
function	dumped ||| wcoredump	count=1
arg	protocol ||| protocol	count=1
function_arg	real part ||| real val	count=1
arg	against loan principal ||| when	count=1
module	new array with the ||| numpy	count=1
function	copy a file ||| copy	count=1
module	garbage collection ||| gc	count=2
module	legendre series by another ||| numpy polynomial legendre	count=2
arg	of given degree ||| deg	count=1
function	or remove the pre_input_hook ||| pre input hook	count=1
function_arg	[function_1] string ||| [function_1] [arg_2]	count=1
module	[module_1] series on ||| [module_2] [module_1] leggrid2d	count=1
arg	loan principal plus interest ||| rate nper pv fv when	count=1
arg	a unique temporary file ||| prefix dir text	count=1
function_arg	[function_1] the source ||| [arg_2] [function_1]	count=1
function	return list of ||| get close	count=1
arg	to ||| b	count=1
function	's effective ||| setegid	count=1
function	table ||| table	count=1
arg	file *database* ||| timeout isolation_level detect_types factory	count=1
function	source location lineno and ||| location	count=1
function_arg	item [arg_2] ||| [arg_2] [function_1]	count=1
arg	command returning ||| command mode	count=1
arg	[arg_1] [arg_2] required to correctly interpret ||| gettext test [arg_1] [arg_2]	count=7
function_arg	a *= b ||| imul a b	count=1
arg	the data ||| a	count=1
function	lock is ||| lock	count=1
rep	draw random [function_arg_2] ||| [module_1] [function_arg_2]	count=4
module	of the ||| sys	count=2
function_arg	[function_1] the condition ||| [arg_2] [function_1]	count=6
function	indices to access ||| indices from	count=1
arg	tarinfo [arg_2] ||| [arg_1] [arg_2]	count=3
module	a single doctest ||| doctest	count=1
function_arg	[function_1] non-masked elements ||| [function_1] axis [arg_2]	count=1
module	i/o thread lock ||| logging handler	count=2
function	quantize ||| quantize	count=1
module	linalg ||| numpy linalg	count=1
function	path ||| request path	count=1
function	shape drawn ||| end	count=1
module	format ||| logging handler	count=1
function	return the maximum ||| max	count=1
module	process with ||| subprocess popen	count=2
arg	to n ||| n	count=2
arg	draw samples from the ||| right size	count=1
arg	[arg_1] protocol ||| [arg_2] [arg_1]	count=1
module	of a chebyshev ||| chebyshev	count=1
arg	/= b ||| b	count=2
function	return true if ||| is	count=3
function_arg	integer power [arg_2] ||| [arg_2] [function_1]	count=1
function	a mailcap [function] ||| [function]	count=1
arg	optionally saving results in ||| sort	count=1
module	set ||| frozenset	count=2
module	the process with ||| popen	count=2
function	a module ||| find module	count=2
function	enable or disable ||| enable	count=2
arg	of given degree ||| x deg	count=1
function	packs the elements ||| packbits	count=1
arg	product [arg] and ||| [arg]	count=6
module	object to ||| tarfile	count=1
arg	cartesian product [arg] and ||| [arg]	count=6
module	of the array ||| numpy ma masked_array	count=1
function	and ||| get archive	count=1
function	[function_1] float ||| [function_1] [function_2]	count=1
function	gives a new ||| reshape	count=1
arg	a [arg] ||| [arg] stream indent width	count=3
module	set array ||| numpy core defchararray chararray	count=1
function	return the symmetric difference ||| symmetric difference	count=3
arg	from a tarinfo ||| tarinfo	count=1
function	[function_1] [function_2] ||| [function_1] logger [function_2]	count=8
module	return the eigenvalues ||| linalg	count=1
function	for archiving ||| get archive	count=1
module	elements along a given ||| ma	count=1
function	unless the ||| unless	count=1
module	abc ||| abc	count=1
function	a logger with this ||| logger	count=1
function	and unarchiving ||| get archive	count=1
arg	is [arg] titlecased ||| [arg]	count=1
module	return its ||| turtle	count=1
module	a set ||| sets set	count=3
function	config ||| config h	count=2
function	data [function_2] ||| [function_1] [function_2]	count=1
arg	[arg] in ||| [arg] repl string	count=1
function_arg	[function_1] with pysqlite ||| [arg_2] [function_1]	count=3
module	are whitespace [module] there ||| [module]	count=1
function	all items ||| array max ulp	count=1
arg	a matrix ||| p	count=1
function	east asian [function_2] ||| [function_1] [function_2]	count=1
module	series to the ||| numpy polynomial hermite hermite	count=1
arg	parse a url ||| url	count=3
function	of supported formats ||| archive formats	count=1
function	[function] bound ||| get [function]	count=6
function	keyboardinterrupt in ||| interrupt	count=1
arg	[arg_1] [arg_2] required to correctly interpret ||| [arg_1] [arg_2]	count=31
function	a ||| rmtree	count=1
module	new file ||| bz2file	count=1
arg	a command returning ||| command mode	count=1
function_arg	in [arg_2] ||| [arg_2] [function_1]	count=4
function	[function] arrays ||| ravel multi [function]	count=3
function	parse and ||| parse and	count=1
module	series to a polynomial ||| numpy polynomial	count=4
arg	node [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the given degree ||| deg	count=3
arg	indices of the bins ||| bins right	count=1
module	of the ||| sqlite3	count=1
arg	of a ||| c	count=1
arg	pseudo-vandermonde matrix ||| x y deg	count=1
function	filling [function_2] ||| [function_2] [function_1]	count=4
function	type of ||| type	count=1
module	a hermite ||| hermite_e	count=1
function_arg	multiply [arg_2] ||| [function_1] [arg_2]	count=4
function	elements defined ||| element names	count=1
function	the locale [function] ||| [function]	count=1
function_arg	[function_1] buffer ||| [arg_2] [function_1]	count=1
module	more sets as a ||| frozenset	count=1
arg	or none if no ||| clean	count=1
module	with a scalar ||| numpy core defchararray chararray	count=1
module	that contain masked values ||| numpy ma	count=2
function	encode a [function_2] ||| [function_2] [function_1]	count=1
arg	test if path ||| path	count=1
arg	b sequences ||| b	count=2
arg	sequence of ||| sequence	count=1
arg	given file ||| file protocol	count=1
arg	bind fun ||| fun btn	count=3
arg	the trailing characters removed ||| a chars	count=1
function	from a normal ||| normal	count=1
module	array elements ||| numpy ma masked_array	count=1
arg	object is an instance ||| object	count=1
module	array ||| numpy ma	count=1
module	object to simplify ||| chararray	count=1
module	returns iterator ||| connection	count=1
arg	[arg] in ||| [arg]	count=9
function	thread and return ||| thread	count=1
function	axis ||| nanpercentile	count=1
function	digit ||| digit	count=1
arg	a sequence ||| sequence	count=1
function	in effect ||| itruediv	count=1
arg	a geometric progression ||| stop num endpoint	count=1
arg	ignoring nan ||| a	count=1
module	series to a different ||| polynomial	count=2
function	the class ||| class	count=5
function	print exception ||| print exception	count=2
arg	a ||| onerror	count=1
arg	version information [arg_2] ||| [arg_1] [arg_2]	count=1
function	logger is ||| is	count=1
function	mask rows and/or columns ||| mask rowcols	count=1
module	file ||| bz2 bz2file	count=1
module	the dump of ||| sqlite3	count=1
module	hermite series to another ||| polynomial hermite	count=1
function_arg	shallow copy [arg_2] ||| [function_1] [arg_2]	count=2
arg	cls in ||| cls	count=1
arg	convert seconds ||| seconds	count=2
module	raise a square ||| linalg	count=1
arg	for ignorable character: iff ||| ws	count=1
function_arg	a << b ||| lshift a b	count=1
arg	of a path ||| path	count=1
module	the matrix ||| matrix	count=3
function	[function_1] float ||| [function_2] [function_1]	count=1
module	a linear matrix ||| linalg	count=1
function	open a file ||| open	count=1
arg	[arg_1] tarinfo ||| [arg_2] [arg_1]	count=12
function	returns ||| get archive	count=1
arg	x or [arg_2] ||| condition [arg_1] [arg_2]	count=3
function	tuple expressing utc ||| gmtime	count=1
module	equation ||| numpy linalg	count=2
arg	the lines in s ||| s	count=1
arg	[arg_1] the environment ||| [arg_2] [arg_1]	count=1
arg	sep as the ||| sep	count=2
arg	name for a temporary ||| dir prefix	count=1
function	a [function] object ||| [function]	count=1
function	errors which ||| error	count=1
function_arg	[function_1] a line ||| [function_1] base64 [arg_2]	count=1
function_arg	[function_1] virtual subclass ||| [function_1] [arg_2]	count=1
function	the vertices ||| begin	count=1
arg	x ||| x digs	count=2
module	the array with ||| chararray	count=1
arg	the specified axis while ||| axis	count=1
arg	both type1 and ||| type1	count=1
module	single doctest ||| doctest	count=1
arg	sep as ||| sep maxsplit	count=2
function_arg	forward [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] protocol ||| [arg_1] [arg_2]	count=1
function	set the class ||| set logger class	count=4
module	draw random samples ||| random	count=1
arg	associate levelname with ||| levelname	count=1
arg	a line of ||| ascii	count=1
function_arg	if the [arg_2] ||| [function_1] [arg_2]	count=2
module	masked and ||| ma	count=1
function	elements over ||| prod	count=1
function	resets ||| reset	count=1
module	copy of the ||| turtle	count=1
function	the bit-wise [function_2] ||| [function_2] [function_1]	count=8
arg	string ||| string level	count=1
function	of a polygon ||| poly	count=1
arg	reduce with ||| dtype	count=1
arg	a fill value ||| copy fill_value	count=1
arg	an array without ||| a newshape order	count=1
function_arg	shape [arg_2] ||| [function_1] [arg_2]	count=1
function	is a space ||| is_character_junk	count=1
arg	the sine [arg] ||| [arg]	count=1
function	registers a [function_2] ||| [function_1] [function_2]	count=1
arg	cmd ||| cmd bufsize mode	count=3
function	stamp a copy of ||| stamp	count=1
arg	present value of a ||| rate	count=1
module	drawn after ||| turtle	count=1
function_arg	either from [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	hamming window ||| hamming m	count=1
arg	of the ||| a	count=2
function	python function to ||| string function	count=1
function_arg	** = [arg_2] ||| [function_1] [arg_2]	count=1
function	csv_writer = ||| writer	count=1
module	contain masked ||| numpy ma	count=2
function	specified diagonals ||| diagonal	count=1
arg	the other operand numerically ||| other context	count=1
function_arg	[function_1] with given ||| [arg_2] [function_1]	count=3
module	threading ||| threading	count=1
module	array ||| masked_array	count=1
function	return a string ||| choose	count=1
function	move ||| move	count=1
arg	[arg] condition ||| condition x [arg]	count=2
arg	returns an [arg] indication of ||| [arg]	count=1
function	's position ||| towards	count=1
arg	true : [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	mantissa and [arg_2] ||| [arg_2] [function_1]	count=2
arg	in uncompressed ||| args kwds	count=1
function	defined by the specified ||| log record	count=1
function	matrix rank of ||| matrix rank	count=1
arg	sub is found such ||| start end	count=4
function_arg	subtract arguments [arg_2] ||| [arg_2] [function_1]	count=1
arg	return the ||| a	count=1
module	thread lock ||| handler	count=2
module	string usable ||| mimetools	count=1
module	ending ||| zipfile	count=2
module	replaces [module] unencodable ||| [module]	count=1
function	returns a list ||| get archive	count=1
module	series from ||| polynomial	count=4
function	add a ||| add	count=1
function	to 1-d slices along ||| along	count=1
module	to ||| decimal	count=1
arg	a directory tree ||| path ignore_errors	count=1
arg	a and b are ||| a b	count=1
function	median along the specified ||| median	count=1
module	the database in an ||| sqlite3	count=1
arg	pseudo-vandermonde matrix of given ||| z deg	count=1
arg	array ||| a m	count=1
function_arg	[function_1] x ||| turtle [function_1] [arg_2]	count=3
function	an iterator over ||| iteritems	count=1
function	an existing directory ||| isdir	count=1
arg	which both type1 ||| type1	count=1
arg	[arg] to quoted-printable ||| [arg]	count=1
arg	the tree in *node* ||| node	count=1
arg	linear matrix ||| a	count=1
function_arg	run statement ||| run statement	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=8
function	~ a ||| invert	count=1
function	part of a mime ||| unmimify part	count=1
arg	of path to ||| path	count=2
arg	sep ||| sep	count=6
module	the [module] ||| [module]	count=33
module	laguerre series by ||| polynomial laguerre	count=2
function	drawn after the ||| end	count=1
module	along the specified axis ||| numpy	count=1
arg	time in seconds since ||| seconds	count=1
arg	port ||| port	count=1
arg	[arg_1] window ||| chebyshev chebyshev convert [arg_1] [arg_2]	count=1
arg	window ||| window	count=2
function	the [function] ||| [function]	count=4
function	and eigenvectors of ||| eigh	count=1
arg	specified axis while ||| a	count=1
arg	[arg_1] [arg_2] ||| [arg_1] filename [arg_2]	count=4
function_arg	[function_1] delta ||| [arg_2] [function_1]	count=3
arg	drawn from elements in ||| default	count=1
module	an ssl [module_2] ||| [module_1] [module_2]	count=2
function_arg	unless [arg_2] ||| [function_1] [arg_2]	count=2
function	matrix to ||| matrix	count=1
arg	file and return it ||| file	count=1
function_arg	[function_1] begindates ||| [function_1] [arg_2]	count=1
function	reverse the ||| reverse	count=1
arg	and port [arg_2] ||| [arg_2] [arg_1]	count=1
module	in an ssl channel ||| ssl sslsocket	count=1
function	an ||| hermval	count=1
arg	returns an [arg] indication ||| [arg]	count=1
module	from ||| sqlite3	count=1
function	compares two strings according ||| strcoll	count=1
arg	day as ||| day	count=1
function_arg	a %= b ||| imod a b	count=1
function	all methods ||| methods	count=1
module	a masked array along ||| ma	count=1
function	test examples in the ||| examples	count=1
function	python script from a ||| execfile	count=1
module	simplify ||| numpy	count=1
function	delete a directory ||| rmtree	count=1
arg	variables used ||| locals	count=1
module	convert [module] ||| [module] hermite	count=3
function	check that all items ||| assert array max	count=1
module	for ||| shutil	count=1
arg	version [arg] i ||| [arg]	count=1
module	along the specified ||| numpy	count=1
function	truncate the file ||| truncate	count=1
arg	data for the specified ||| width	count=3
function	4-char creator and type ||| creator and type	count=2
arg	and locals [arg_2] ||| [arg_1] filename [arg_2]	count=2
function	as a flattened ||| a1	count=1
module	thread lock ||| logging handler	count=2
arg	[arg_1] [arg_2] ||| gettext test [arg_1] [arg_2]	count=14
function	database ||| getcaps	count=1
module	the interpreter ||| os	count=1
function_arg	title of [arg_2] ||| [function_1] [arg_2]	count=1
function	a command ||| command	count=1
function	encode [function_2] ||| [function_1] [function_2]	count=1
arg	command cmd ||| cmd	count=2
arg	a file descriptor ||| fd buffersize	count=1
module	the given array ||| ma masked_array	count=1
arg	and return its identifier ||| function args kwargs	count=1
arg	array ||| order	count=1
function_arg	^ [arg_2] ||| [arg_2] [function_1]	count=1
module	two sets ||| frozenset	count=1
arg	a day as ||| day	count=1
function	output [function] of ||| [function]	count=1
arg	return a new array ||| a	count=1
module	measurement units ||| turtle	count=1
module	of the array ||| numpy	count=1
function	reset ||| reset	count=2
function	within ||| arange	count=1
arg	substring sub ||| sub start end	count=4
function_arg	a path [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] a delta ||| [arg_2] [function_1]	count=4
module	a [module] from ||| [module]	count=3
arg	return b ||| b	count=1
function_arg	convert an 8bit [function_1] [arg_2] to quoted-printable ||| mimify mimify [function_1] [arg_2]	count=2
function	median ||| median	count=1
module	a masked array ||| ma masked_array	count=1
function_arg	input [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] of an ||| [arg_2] [function_1]	count=3
module	whitespace [module] there is ||| [module]	count=1
arg	if [arg] is a ||| [arg]	count=1
module	and a write ||| zipfile	count=2
function	the pem ||| to_pem_cert	count=1
function	if a file is ||| is	count=1
module	with the [module] connection ||| [module]	count=1
arg	a file using the ||| mode buffering	count=1
module	an object to ||| chararray	count=1
arg	[arg_1] array ||| [arg_2] [arg_1]	count=10
function	streamreader class or factory ||| getreader	count=1
module	evaluate a 2-d [module_1] [module_2] cartesian product ||| [module_2] [module_1] hermgrid2d	count=1
arg	where substring sub ||| sub	count=1
function_arg	methods [arg_2] ||| [arg_2] [function_1]	count=7
function	enabled for the ||| enabled for	count=1
function	compiler used for compiling ||| compiler	count=1
function	a new ||| resize	count=1
arg	shell command cmd ||| cmd bufsize	count=2
function	[function_1] the startup_hook ||| [function_1] [function_2]	count=1
arg	return element-wise ||| x1 x2	count=2
arg	given by reps ||| reps	count=1
arg	a ||| path	count=1
function_arg	[function_1] specified ||| [arg_2] [function_1]	count=1
module	file ||| file	count=4
module	loggable by consulting ||| logging filterer	count=1
module	of the array to ||| numpy chararray	count=1
arg	the logarithm [arg] ||| [arg]	count=3
function	ustar ||| pax	count=1
function_arg	open the [arg_2] ||| [arg_2] [function_1]	count=4
arg	level level ||| level	count=1
module	array with a scalar ||| numpy core defchararray chararray	count=1
arg	two numbers and ||| a b	count=1
module	are alphabetic [module] there is ||| [module]	count=1
function	hexadecimal representation ||| hex	count=2
arg	a ||| a b	count=2
function	acquire the i/o ||| acquire	count=1
function	add ||| hermadd	count=1
arg	[arg_1] the heap ||| [arg_2] [arg_1]	count=2
function	return a list of ||| list	count=1
function	the class to ||| class	count=3
arg	match to the pattern ||| pattern	count=1
function_arg	[function_1] [arg_2] ||| [function_1] statement [arg_2]	count=14
module	ctypes ||| ctypes	count=1
arg	file descriptor fd ||| fd opt	count=1
arg	in array ||| weights minlength	count=1
arg	code ||| code	count=2
function	the owner and ||| lchown	count=1
arg	in [arg] i ||| [arg]	count=1
function	parse a query given ||| parse	count=2
module	of sets as a ||| frozenset	count=1
module	on the screen to ||| turtle	count=1
module	object to ||| numpy chararray	count=1
arg	format a python object ||| object indent width	count=1
module	of ||| numpy polynomial	count=1
function	[function_1] and ||| [function_2] [function_1]	count=3
arg	by inc and ||| inc	count=1
module	are alphabetic [module] there ||| [module]	count=1
module	dump ||| connection	count=1
function	non-overlapping occurrences of ||| count	count=4
arg	for a given name ||| name frame	count=1
arg	file ||| file dtype count sep	count=1
function	[function_1] integer power ||| [function_1] [function_2]	count=1
function	not equal ||| equal	count=1
function	compares ||| compare	count=1
module	hermite series from another ||| numpy polynomial hermite_e	count=1
arg	up [arg] ||| [arg]	count=3
module	draw samples from the ||| numpy random randomstate	count=2
function	where ||| masked where	count=1
function	fill the ||| end fill	count=1
arg	an array ||| dtype	count=1
function	apply a function to ||| apply	count=1
function	return ||| get close	count=1
arg	draw samples from a ||| a size	count=2
function	length [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] [arg_2] ||| [arg_1] x [arg_2]	count=14
arg	parses [arg] as ||| [arg]	count=1
function	handler ||| handler	count=1
arg	words in s ||| s	count=2
function	linear ||| lstsq	count=1
function	the current theme ||| theme	count=1
function	sum of a ||| sum	count=1
function	filling value of a ||| fill value	count=1
function	mouse-click event ||| onscreenclick	count=1
arg	another ||| other	count=1
function	[function_1] a converter ||| [function_1] [function_2]	count=1
function	debug a [function_2] ||| [function_1] [function_2]	count=1
arg	given [arg_1] [arg_2] docstring can be found ||| docstring [arg_1] [arg_2]	count=1
module	the array ||| chararray	count=4
arg	a new ||| a	count=1
function	with invalid data ||| fix invalid	count=1
arg	recursively delete a directory ||| onerror	count=1
arg	a unique temporary ||| prefix dir	count=3
function_arg	[function_1] [arg_2] ||| [function_1] radius [arg_2]	count=3
module	readline tab-completion ||| readline	count=1
function	compute the bit-wise ||| bitwise	count=2
arg	corresponding [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the specified records and ||| records	count=1
arg	parse a [arg] or from ||| fp [arg]	count=1
function	[function_1] a config ||| [function_2] [function_1]	count=1
function	a new [function_2] ||| [function_1] [function_2]	count=3
function	the histogram ||| histogram	count=1
arg	on file descriptor fd ||| fd	count=2
arg	so its exponent ||| rounding context watchexp	count=2
function	[function_1] [function_2] the ||| [function_1] [function_2]	count=18
arg	part of ||| val	count=1
arg	to a linear matrix ||| b	count=1
function	test unless the ||| unless	count=1
arg	x1 ||| x1	count=9
module	as a new ||| frozenset	count=2
module	returns iterator ||| sqlite3 connection	count=1
function	a file is ||| is	count=1
function	run a ||| run	count=1
module	the process ||| subprocess	count=2
arg	a stream ||| stream	count=1
arg	ignorable character: iff ch ||| ch ws	count=1
function	the transpose of ||| get t	count=1
module	remainder ||| decimal decimal	count=1
function	libc ||| libc	count=1
arg	from tb to ||| etype value tb	count=1
arg	that every interval ||| interval	count=1
arg	ip address in string ||| string	count=2
arg	for module_or_name ||| module_or_name	count=1
function_arg	the specified [arg_2] ||| [arg_2] [function_1]	count=1
function	of completion being attempted ||| completion	count=1
module	transaction ||| sqlite3	count=2
module	specified module ||| zipimport zipimporter	count=3
function_arg	32-bit [arg_2] ||| [function_1] [arg_2]	count=1
arg	tb to ||| value tb	count=1
arg	location or mean and [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=1
module	[module_1] series by ||| [module_2] [module_1]	count=9
function	[function_1] completion display ||| [function_1] [function_2]	count=1
function	a[b:c] = ||| setslice	count=1
module	linear ||| numpy	count=1
arg	a geometric progression ||| start stop num endpoint	count=1
module	distribution ||| random	count=23
arg	an array ||| a dtype order subok	count=2
arg	qth percentile of ||| q	count=1
arg	in a string of ||| a	count=1
arg	true [arg_2] ||| [arg_2] [arg_1]	count=1
arg	shape to ||| name shape	count=1
arg	[arg_1] and locals ||| [arg_2] [arg_1]	count=1
function	from ||| extract	count=1
function	of the data ||| nanpercentile	count=1
module	hermite series to ||| numpy polynomial hermite_e	count=6
function	element in the current ||| element	count=1
function	ustar header ||| pax header	count=2
function	open ||| open	count=6
arg	to remote addr ||| addr	count=1
arg	c is a ||| c b	count=1
module	[module_1] of an ||| [module_1] [module_2]	count=3
module	encoding used ||| sys	count=1
function_arg	[function_1] prefix ||| [function_1] [arg_2]	count=2
module	are alphanumeric [module] there is ||| [module]	count=1
module	onto the ||| turtle	count=1
function	raise a keyboardinterrupt in ||| interrupt	count=1
function_arg	from [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] [function_2] ||| [function_1] completion [function_2]	count=4
arg	size ||| size	count=6
function	of a right-justified in ||| rjust	count=1
module	hermite series to ||| polynomial hermite_e	count=3
function	lock is in the ||| lock	count=1
arg	along the given axis ||| axis dtype	count=3
function	unwrap ||| unwrap	count=1
function_arg	[function_1] array ||| [arg_2] [function_1]	count=1
function	returns a list ||| archive	count=1
arg	matrix ||| x	count=1
function_arg	division of [arg_2] ||| [arg_2] [function_1]	count=1
arg	new positions ||| source destination	count=1
function_arg	wrapper [arg_2] ||| [arg_2] [function_1]	count=1
module	as a table ||| htmlcalendar	count=5
arg	command returning a ||| command	count=1
arg	python [arg_2] ||| [arg_2] [arg_1]	count=1
function	list of tuples ||| list	count=1
arg	suffix false otherwise ||| suffix start end	count=2
function	[function] of the ||| [function]	count=10
function_arg	[function_1] fd ||| [arg_2] [function_1]	count=1
function_arg	plist [arg_2] ||| [arg_2] [function_1]	count=1
arg	from [arg] ||| mode file [arg]	count=3
function	as ||| print	count=1
arg	delete ||| path ignore_errors	count=1
arg	given thing ||| thing	count=1
module	database in an ||| sqlite3 connection	count=1
arg	heap maintaining the heap ||| heap	count=1
arg	[arg_1] operand numerically ||| [arg_2] [arg_1]	count=3
arg	path to [arg_2] ||| [arg_1] [arg_2]	count=4
function	new bounded semaphore ||| bounded semaphore	count=2
arg	type1 and ||| type1	count=1
module	python interpreter ||| sys	count=1
module	logging system ||| logging	count=1
module	of [module] 's stamps ||| [module]	count=1
arg	to look like ||| assigned updated	count=1
function	keyboardinterrupt in the ||| interrupt	count=1
function	portion ||| ipmt	count=1
function	to a ||| to	count=1
rep	compute [function_arg_2] ||| [module_1] [function_arg_2]	count=6
arg	along the ||| a	count=1
function	the data along ||| nanpercentile	count=1
module	in unicode string s[start:end] ||| unicode	count=1
function	compares the ||| compare signal	count=1
module	sets ||| set	count=1
arg	enddates ||| enddates	count=1
function	list of aliases ||| gethostbyname ex	count=1
function_arg	[function_1] [arg_2] ||| [function_1] nan [arg_2]	count=1
arg	specified records ||| records	count=1
arg	cmd ||| cmd	count=6
function	compile a [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] 's ||| runpy [function_2] [function_1]	count=3
module	the interaction of ||| numpy	count=1
function	the difference of ||| difference	count=1
arg	file-like object for the ||| data proxies	count=1
arg	file using the ||| mode buffering	count=1
function	the docstring [function] ||| [function]	count=1
arg	encoding and [arg_2] ||| [arg_2] [arg_1]	count=1
function	archiving and unarchiving ||| archive	count=1
function	current directory [function_2] ||| [function_2] [function_1]	count=2
arg	an array ||| a copy	count=1
arg	b in between each ||| b	count=1
module	set array flags ||| numpy core defchararray chararray	count=1
function_arg	[function_1] a ||| [function_1] snan [arg_2]	count=1
arg	or y depending ||| y	count=1
function	return the [function_2] ||| [function_1] [function_2]	count=1
function	maximum length of ||| length	count=1
function	minimum value ||| value	count=1
arg	an address into ||| address	count=1
arg	the c expression: condition ||| condition	count=1
arg	[arg_1] file ||| [arg_2] [arg_1]	count=4
function_arg	blackman [arg_2] ||| [arg_2] [function_1]	count=1
module	send ||| subprocess popen	count=1
function	all relevant handlers ||| call handlers	count=1
arg	query in the ||| keep_blank_values strict_parsing	count=1
arg	info resource fork etc ||| createpath copydates forcetype	count=1
function_arg	[function_1] [arg_2] ||| [function_1] s [arg_2]	count=4
function_arg	thread and [arg_2] ||| [arg_2] [function_1]	count=1
module	characters [module] http url ||| [module]	count=1
function	is enabled [function_2] ||| [function_2] [function_1]	count=1
arg	the input to an ||| a dtype	count=1
function_arg	register a [arg_2] ||| [arg_2] [function_1]	count=3
module	the current ||| sqlite3 connection	count=2
function	return the string ||| string	count=1
arg	matrix of given degree ||| deg	count=4
function	returns a copy ||| copy	count=2
arg	single file ||| file args	count=1
arg	[arg_1] is true ||| [arg_1] [arg_2]	count=4
module	a chebyshev series ||| polynomial chebyshev	count=2
module	what method [module] use ||| [module]	count=1
function	the most [function] to the ||| most [function]	count=1
arg	the wrapped function ||| wrapped	count=1
module	of array with ||| numpy chararray	count=2
function_arg	whether class c ||| issubclass c b	count=1
function	symmetric difference of ||| symmetric difference	count=10
module	legendre series by another ||| polynomial legendre	count=2
arg	and b sequences ||| a b	count=2
function_arg	a circle [arg_2] ||| [function_1] [arg_2]	count=1
function	dump the current directory ||| directory	count=1
function	[function_1] a key ||| [function_2] [function_1]	count=1
module	of hermite series to ||| numpy polynomial hermite	count=1
function	valid standard mask ||| mask	count=1
function	pipe with [function_2] ||| [function_1] [function_2]	count=1
arg	b for x ||| b	count=1
arg	recursively delete a ||| path ignore_errors	count=1
arg	the iterable ||| iterable	count=3
module	of a child process ||| os	count=1
arg	[arg_1] is true ||| [arg_2] [arg_1]	count=4
module	run command with arguments ||| subprocess	count=1
function	complex conjugate of any ||| conjugate	count=3
arg	true if two ||| a b	count=1
function	start recording the vertices ||| begin	count=1
module	simplify the ||| numpy chararray	count=1
function	a sha384 ||| sha384	count=1
function_arg	<< [arg_2] ||| [function_1] [arg_2]	count=1
arg	cartesian [arg_1] [arg_2] ||| chebgrid2d [arg_1] [arg_2]	count=1
function	thresholds ||| threshold	count=1
module	the [module] settings ||| [module]	count=1
function	[function_1] [function_2] ||| readline [function_1] [function_2]	count=1
arg	add the tarinfo object ||| tarinfo	count=1
arg	tarinfo object tarinfo' to ||| tarinfo fileobj	count=1
arg	from tb ||| tb	count=1
arg	read up [arg] at ||| [arg]	count=1
function	in ||| lookup	count=1
function	enable ||| enable	count=1
arg	x or [arg_2] ||| [arg_2] [arg_1]	count=3
arg	every interval ||| interval	count=1
function	linear matrix equation ||| lstsq	count=1
module	series to the ||| numpy polynomial chebyshev chebyshev	count=1
function_arg	[function_1] name' ||| [arg_2] [function_1]	count=1
function	take elements from ||| take	count=1
function_arg	the startup_hook [arg_2] ||| [function_1] [arg_2]	count=1
function	a standard ||| standard	count=3
module	to a hermite ||| hermite_e	count=1
module	draw samples from a ||| numpy random randomstate	count=2
arg	file executable ||| executable lib	count=1
module	dtype ||| numpy dtype	count=1
function_arg	[function_1] substring ||| [arg_2] [function_1]	count=9
function	namespace ||| namespace	count=2
arg	determine if two ||| a b	count=1
module	the masked array ||| ma masked_array	count=3
arg	float [arg] is infinite ||| [arg]	count=1
module	the ||| logging	count=2
function	kill the ||| kill	count=1
module	laguerre series from ||| polynomial laguerre	count=1
function	the source code for ||| source	count=1
module	ignorable line: iff ||| difflib	count=1
arg	a ||| path ignore_errors	count=1
module	ssl channel ||| ssl sslsocket	count=2
arg	of the string returning ||| string	count=1
function	the left ||| left	count=1
function	a string in ||| format string	count=1
module	[module] cartesian ||| [module]	count=10
function_arg	hamming [arg_2] ||| [function_1] [arg_2]	count=1
arg	data ||| a	count=1
function_arg	code from [arg_2] ||| [arg_2] [function_1]	count=1
arg	with given radius ||| radius extent steps	count=3
arg	a single item ||| index	count=1
function	examples ||| examples	count=1
function	enabled ||| enabled	count=1
function	a standard [function_2] ||| [function_2] [function_1]	count=1
arg	module_or_name ||| module_or_name	count=2
function	4-char creator [function_2] ||| [function_1] [function_2]	count=10
arg	sub [arg_2] ||| numpy core defchararray rindex [arg_2] [arg_1]	count=1
module	screen ||| turtle	count=1
arg	[arg_1] error handling ||| [arg_2] [arg_1]	count=2
function	or of two ||| or	count=1
function	matches ||| matches	count=1
function	[function_1] main ||| [function_2] [function_1]	count=2
arg	condition [arg_2] ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] version ||| [function_1] executable [arg_2] chunksize	count=5
function	a valid standard mask ||| mask	count=1
arg	the keys of d ||| d	count=1
arg	path with ||| path args	count=1
arg	up [arg] at most ||| [arg]	count=1
arg	x in ||| a x	count=8
arg	recursively ||| ignore_errors onerror	count=1
module	laguerre series on the ||| numpy polynomial laguerre	count=1
arg	fork etc ||| src dst createpath copydates forcetype	count=1
function	bit-wise xor of two ||| bitwise xor	count=1
function	level ||| level name	count=1
arg	from an array ||| shrink dtype	count=1
arg	for ||| year	count=1
arg	a month ||| theyear themonth	count=1
function	looking for a ||| search	count=1
function	argument ||| issubsctype	count=1
function	1-d slices along the ||| along	count=1
arg	about a frame ||| frame context	count=1
function	a to the power ||| power	count=1
function	part of a ||| part	count=2
rep	set [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	self and other ||| other	count=1
module	array flags ||| defchararray chararray	count=1
function_arg	decode [arg_2] ||| [function_1] base64 [arg_2]	count=2
arg	pathname ||| pathname	count=2
module	pseudo-vandermonde matrix ||| numpy polynomial laguerre	count=1
arg	a python ||| indent width	count=1
module	a bool [module] where true ||| [module]	count=2
module	the current ||| sys	count=2
module	return the current default ||| sys	count=1
function	buffer length in bytes ||| buffer info	count=1
module	as ||| mimetools	count=1
module	an ||| _socket	count=1
function	circle ||| circle	count=1
arg	unique temporary ||| suffix prefix dir	count=3
module	set array flags ||| defchararray chararray	count=1
module	used by ||| logging	count=1
function	docstring [function] given ||| [function]	count=1
module	random integers ||| random	count=2
function_arg	convert an [function_1] [arg_2] ||| mimify [function_1] [arg_2]	count=4
module	hermitee [module_2] ||| [module_1] [module_2]	count=10
function	[function_1] item ||| [function_2] [function_1]	count=1
function	with the symmetric difference ||| symmetric difference	count=2
function_arg	code object ||| iscode object	count=1
function	[function_1] a command ||| [function_2] [function_1]	count=1
function	lock is [function_2] ||| [function_2] [function_1]	count=2
module	the interaction ||| numpy chararray	count=1
arg	current state ||| state	count=1
module	described in rfc 1952 ||| xmlrpclib	count=1
arg	prefix ||| a prefix start	count=1
module	series to the ||| polynomial chebyshev chebyshev	count=1
function	[function] read ||| recv [function]	count=3
function	[function_1] stack ||| [function_2] [function_1]	count=1
arg	[arg_1] as ||| [arg_1] [arg_2]	count=4
arg	cmd in ||| cmd	count=2
arg	b to [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] object ||| [arg_2] [arg_1]	count=9
arg	if two ||| a b max_work	count=1
function	[function_1] the filling ||| [function_2] [function_1]	count=2
module	the array ||| numpy ma masked_array	count=2
module	closes ||| logging filehandler	count=1
arg	[arg_1] false ||| [arg_1] [arg_2]	count=10
arg	exponent is the same ||| rounding context	count=1
module	evaluate a 2-d [module_1] [module_2] product ||| [module_2] [module_1]	count=5
arg	string ||| string	count=15
module	the ||| numpy linalg	count=2
function	default ||| default	count=2
function	matrix rank ||| matrix rank	count=1
arg	object f ||| f	count=1
module	the datasource directory ||| numpy datasource	count=1
arg	from ||| limit	count=1
arg	[arg_1] filename ||| [arg_2] [arg_1]	count=2
function	element ||| element	count=1
arg	to an ||| a	count=3
arg	for the specified ||| width	count=3
function	the string [function_2] ||| [function_2] [function_1]	count=1
function	a string in the ||| format string	count=1
module	data masked ||| numpy ma	count=1
module	exit the [module] raising systemexit ||| [module]	count=1
arg	of [arg] ||| [arg] repl string	count=1
function	duplicate of ||| dup	count=1
arg	equal using fill_value as ||| fill_value	count=1
function_arg	=< [arg_2] ||| [arg_2] [function_1]	count=1
module	including finder info resource ||| macostools	count=1
function_arg	's effective [arg_2] ||| [arg_2] [function_1]	count=1
function	of keys ||| keys	count=1
arg	a module ||| module path	count=1
arg	uint8 array ||| myarray axis	count=1
function	convert ||| leg2poly	count=1
function	of integers whose ratio ||| as integer ratio	count=1
arg	day ||| day width	count=1
arg	up to limit ||| limit file	count=1
arg	the n ||| n iterable	count=2
arg	remote addr and ||| addr	count=1
function_arg	[function_1] an ||| [function_1] integral value [arg_2]	count=1
arg	on the cartesian [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
module	set file ||| tarfile	count=1
function_arg	test if [arg_2] ||| [function_1] [arg_2]	count=2
function	matrix of given degrees ||| polyvander2d	count=1
arg	the file name' ||| name arcname recursive exclude filter	count=1
arg	given degree ||| deg	count=4
arg	line [arg] ||| [arg]	count=3
module	of a masked ||| numpy ma	count=1
arg	scale [arg_2] ||| [arg_2] [arg_1]	count=1
module	in ||| ordereddict	count=4
arg	on the cartesian product [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	the call ||| end	count=1
module	int ||| int	count=1
module	or more sets ||| frozenset	count=1
function	an iterator over the ||| iterkeys	count=1
arg	version [arg] ||| [arg]	count=1
arg	to ||| a b	count=1
module	the extended slice ||| slice	count=1
module	[module_1] series to ||| [module_2] [module_1]	count=9
rep	returns [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	direct [function] nodes of ||| [function]	count=1
function	truncate the ||| truncate	count=1
function_arg	append object ||| append object	count=1
function	for the upper-triangle ||| triu	count=1
function	looking for a match ||| search	count=1
module	the given ||| numpy ma	count=1
arg	path with arguments ||| path args env	count=1
arg	convert seconds since the ||| seconds	count=3
function	divide ||| hermediv	count=1
arg	corresponding [arg_2] ||| [arg_1] [arg_2]	count=1
arg	geometric progression ||| start stop num endpoint dtype	count=1
arg	a linear ||| a b	count=1
function_arg	append [arg_2] ||| [function_1] b [arg_2]	count=2
arg	defined by a data-type ||| dtype offset	count=1
module	datasource directory ||| numpy datasource	count=1
module	return ||| float	count=1
function	register a ||| register	count=2
function	return ||| resize	count=1
function	the transpose ||| get t	count=1
arg	as that of exp ||| exp	count=1
module	of the legendre ||| legendre	count=1
module	value of the ||| sys	count=1
function	supported formats ||| formats	count=1
function	character [function] ||| [function]	count=1
function_arg	[function_1] part ||| [function_1] [arg_2]	count=3
module	a linear ||| linalg	count=1
function	value of the ||| value	count=2
arg	record to ||| record	count=1
arg	specified key and return ||| od key default	count=1
module	returns a list ||| shutil	count=1
arg	[arg_1] wrapped function ||| [arg_2] [arg_1]	count=4
arg	the source into an ||| source	count=1
arg	the [arg] ||| [arg]	count=20
arg	limit stack trace ||| limit	count=1
module	current turtle ||| turtle	count=1
arg	prefix ||| prefix start	count=1
arg	option s in style ||| style	count=1
module	html ||| cgi	count=1
function	[function_1] the main ||| [function_1] [function_2]	count=3
function	return output [function] of executing ||| [function]	count=1
function	thread ||| thread	count=1
function	and [function_2] ||| [function_1] [function_2]	count=8
function	suppress [function_2] ||| [function_1] [function_2]	count=1
arg	all [arg] from ||| [arg]	count=1
function	discrete linear convolution ||| convolve	count=1
module	from the [module] module ||| [module]	count=1
function	compute hqx ||| hqx	count=1
module	array flags writeable aligned ||| core defchararray chararray	count=1
arg	string with all occurrences ||| count	count=1
arg	to an ||| a newshape order	count=1
function	stdout or stderr ||| getoutput	count=1
arg	value ||| fill_value	count=2
module	turtles on the ||| turtle	count=1
function_arg	[function_1] [arg_2] ||| [function_1] zero [arg_2]	count=1
module	evaluate a 2-d [module_1] [module_2] ||| [module_2] [module_1] laggrid2d	count=3
function	exception up to ||| exception	count=1
arg	mapping ||| mapping	count=1
function_arg	[function_1] file for ||| [arg_2] [function_1]	count=1
function	4-char creator and ||| creator and	count=4
module	to its simplest form ||| decimal	count=1
module	simplify the ||| numpy	count=1
function_arg	[function_1] in the ||| [arg_2] [function_1]	count=1
arg	fill value ||| mask copy fill_value	count=1
arg	file ||| file flag mode	count=1
module	hermitee series on the ||| polynomial hermite_e	count=2
arg	resolve host [arg_2] ||| [arg_1] [arg_2]	count=2
module	array to ||| defchararray chararray	count=1
module	the [module] named by ||| [module]	count=1
function	a duplicate of ||| dup	count=1
arg	delta ||| delta	count=1
module	the shape drawn ||| turtle	count=1
arg	integer parts [arg] ||| [arg]	count=1
module	current value ||| sys	count=1
function	is ||| is_line_junk	count=1
function	[function_1] an integer ||| [function_1] [function_2]	count=1
function	[function_1] a command ||| [function_1] [function_2]	count=1
module	as a new set ||| set	count=1
arg	specified suffix false ||| suffix start	count=2
arg	bins to which each ||| bins	count=1
function_arg	the sum [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	path corresponding ||| get path name	count=1
function_arg	in [arg_2] ||| [function_1] a x [arg_2]	count=4
function	parse ||| parse	count=5
module	iterator to the dump ||| sqlite3 connection	count=1
arg	item ||| item	count=2
function_arg	[function_1] gaussian ||| [arg_2] [function_1]	count=6
arg	specified [arg] creating ||| [arg]	count=1
function	parse a [function_2] ||| [function_1] [function_2]	count=1
function	array_like ||| array	count=1
module	applying ufunc ||| ufunc	count=1
function	the shape of ||| shape	count=1
function	that all items ||| array	count=1
module	self with masked ||| numpy ma	count=1
module	array with ||| numpy chararray	count=1
function	arrays >= 1-d ||| tensordot	count=1
module	self as the context ||| context	count=1
module	an ||| sqlite3 connection	count=1
rep	a square [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	the tangent [arg] ||| [arg]	count=1
function	title ||| title	count=1
arg	and b is ||| b	count=1
arg	the file name' to ||| name arcname recursive exclude filter	count=1
function_arg	[function_1] condition ||| [function_1] [arg_2]	count=10
arg	to modulo if given ||| modulo	count=1
module	lock ||| thread	count=1
module	return a [module] ||| [module]	count=4
arg	a path ||| path args	count=1
module	the given ||| ma	count=1
module	move [module] to ||| [module]	count=1
function	recording the vertices ||| begin	count=1
function	gives a new shape ||| reshape	count=1
function	shape ||| end	count=1
function	orientation ||| seth	count=1
function_arg	a <<= b ||| ilshift a b	count=1
function_arg	part of [arg_2] ||| [arg_2] [function_1]	count=5
module	[module_1] integers from ||| [module_2] [module_1]	count=1
function	returns the width ||| width	count=1
module	contain masked values ||| numpy ma	count=2
module	float and with ||| float	count=1
module	hermite series by ||| numpy polynomial hermite	count=4
module	bool [module] where ||| [module]	count=2
function	[function] bound to ||| get [function]	count=6
function	given family to string ||| ntop	count=1
function	the east asian ||| east asian	count=2
function	a symbolic link ||| islink	count=1
arg	a [arg] to the ||| [arg]	count=1
function	packs the elements of ||| packbits	count=1
module	of a masked ||| ma	count=1
function_arg	compile the [arg_2] ||| [arg_2] [function_1]	count=4
module	of the masked array ||| ma maskedarray	count=1
module	laguerre ||| laguerre	count=8
module	sets as a new ||| frozenset	count=3
module	applying ufunc along one ||| ufunc	count=1
module	the i/o thread ||| handler	count=2
arg	and a set ||| mode	count=1
function	update a ||| update	count=4
function	compute the bit-wise or ||| bitwise or	count=1
function	implementation revision ||| revision	count=1
function_arg	convert an 8bit [function_1] [arg_2] ||| [function_1] [arg_2]	count=9
arg	the size ||| size	count=1
module	string composed of the ||| string	count=1
arg	filters ||| action	count=1
function	new array ||| resize	count=1
arg	[arg_1] new ||| [arg_1] [arg_2]	count=3
arg	day as a ||| day	count=1
function	delete a ||| rmtree	count=1
arg	[arg_1] signal ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] from ||| [arg_2] [function_1]	count=4
function	vertices of a ||| begin	count=1
function	using the standard ||| standard	count=1
function_arg	[function_1] a sequence ||| [function_1] [arg_2]	count=3
function	of aliases ||| gethostbyname ex	count=1
arg	fork etc ||| createpath copydates forcetype	count=1
function_arg	condition number [arg_2] ||| [function_1] [arg_2]	count=3
function	the data [function] smallest size ||| min scalar [function]	count=1
arg	a geometric progression ||| stop num endpoint dtype	count=1
module	iterator to ||| sqlite3	count=1
function	maximum length of history ||| history length	count=1
module	[module] a real ||| [module]	count=2
arg	[arg_1] [arg_2] into a pretty-printed representation ||| pprint pformat [arg_2] [arg_1]	count=3
function	hyperbolic arc tangent ||| atanh	count=1
module	string composed ||| string	count=1
arg	if two ||| a b	count=2
module	date ||| datetime date	count=2
module	masked array along ||| numpy ma	count=1
function	union of sets as ||| union	count=1
arg	file ||| filename flag	count=1
function	return a ||| get	count=2
function	[function_1] xor ||| [function_1] [function_2]	count=3
arg	with ||| typename	count=1
function	variables used by ||| usage	count=1
module	process with sigterm ||| popen	count=1
function_arg	divide [arg_2] ||| [arg_2] [function_1]	count=2
function	suppress ||| compress	count=1
function_arg	[function_1] od ||| [arg_2] [function_1]	count=2
arg	a unique temporary file ||| suffix prefix dir	count=2
function_arg	a + b ||| add a b	count=1
function	the unittest option ||| set unittest reportflags	count=1
function	a 3-d ||| chebgrid3d	count=1
arg	if two ||| b	count=1
arg	get additional version ||| release version	count=1
arg	of x in ||| x	count=1
function	load [function_2] ||| [function_2] [function_1]	count=1
arg	an array ||| a dtype order	count=2
arg	a ||| a indices	count=1
function	have the same exponent ||| same quantum	count=1
function	returns html file of ||| file	count=1
function	path ||| path	count=2
function	of supported formats for ||| formats	count=1
function	expand the ||| expand dims	count=1
function	decode a ||| a2b	count=1
function	print up ||| print	count=1
arg	to which both type1 ||| type1	count=1
arg	of the given thing ||| thing	count=1
module	the python interpreter ||| sys	count=1
module	which ||| logging	count=1
function	set or remove ||| set	count=3
function_arg	with all [arg_2] ||| [arg_2] [function_1]	count=6
arg	look like [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	value for the locale [function_1] [arg_2] ||| locale [function_1] [arg_2]	count=1
arg	[arg_1] a stream ||| [arg_1] [arg_2]	count=2
arg	[arg_1] of an ||| [arg_2] [arg_1]	count=6
function	parse [function_2] ||| [function_2] [function_1]	count=2
arg	source string into ||| source	count=1
module	floating-point ||| float	count=1
function_arg	[function_1] inputs element-wise ||| [arg_2] [function_1]	count=4
function	the given family to ||| inet ntop	count=1
arg	path with ||| path	count=1
module	archiving ||| shutil	count=1
module	[module_1] array ||| [module_1] [module_2]	count=10
module	of the masked array ||| numpy ma masked_array	count=3
arg	send a break on ||| duration	count=1
function	[function_1] python ||| [function_2] [function_1]	count=2
arg	masked array with ||| shape dtype	count=1
function	turtle [function] ||| [function]	count=5
module	[module_1] which is ||| [module_1] [module_2]	count=2
arg	[arg_1] decay ||| [arg_2] [arg_1]	count=1
arg	text returning a new ||| text width	count=1
arg	value of x1 ||| x1	count=4
module	single paragraph ||| textwrap	count=2
function	[function] set the ||| unshare [function]	count=3
module	calendar ||| calendar	count=4
function	the input ||| asarray	count=1
function	root ||| root	count=1
function	returns the numeric ||| numeric	count=1
function	[function_1] callback ||| [function_2] [function_1]	count=1
arg	month as ||| themonth	count=1
arg	the given axis ||| func1d axis	count=1
module	the fft [module_2] ||| [module_2] [module_1]	count=1
arg	convert a time tuple ||| tuple	count=1
function	of supported formats for ||| archive formats	count=1
function	rank ||| rank	count=1
function	the day ||| weekday	count=1
module	i/o thread ||| logging	count=2
module	a scalar ||| defchararray chararray	count=1
function	matrix of given degrees ||| polyvander3d	count=1
arg	the qth percentile ||| a q	count=1
function	read a [function_2] ||| [function_1] [function_2]	count=1
module	array ||| numpy ma masked_array	count=4
arg	all occurrences ||| count	count=1
function	standard deviation along ||| nanstd	count=1
function	[function_1] a string ||| [function_1] [function_2]	count=1
module	basis ||| hermite hermite	count=1
function	symmetric ||| symmetric	count=5
function	up to desired precision ||| array almost	count=1
arg	and ||| mode	count=1
function_arg	bit-wise xor [arg_2] ||| [function_1] [arg_2]	count=1
module	[module] of ||| [module]	count=2
function	streamwriter class or factory ||| getwriter	count=1
function	real ||| real	count=1
function_arg	[function_1] frame ||| [function_1] [arg_2]	count=4
function	history item ||| history item	count=2
function	[function_1] process ||| [function_1] [function_2]	count=4
function	directory tree ||| rmtree	count=1
function	all direct [function] nodes ||| [function]	count=1
function_arg	[function_1] prefix otherwise ||| [function_1] [arg_2]	count=2
arg	type1 and [arg_2] ||| [arg_2] [arg_1]	count=1
module	return ||| __builtin__	count=1
module	a new [module] given ||| [module]	count=1
function	string identifying the python ||| python	count=2
arg	to an array without ||| a newshape order	count=1
arg	matrix of given degree ||| x deg	count=1
function	list of supported formats ||| formats	count=1
arg	scale decay ||| loc scale	count=1
function_arg	open [arg_2] ||| [arg_2] [function_1]	count=7
arg	on the cartesian [arg_1] [arg_2] ||| polygrid2d [arg_1] [arg_2]	count=1
function_arg	set [arg_2] ||| [function_1] conversion mode [arg_2]	count=2
function	string get ||| get	count=1
module	the array ||| numpy chararray	count=3
function	flags response ||| parse flags	count=2
function_arg	specified [arg_2] ||| [function_1] [arg_2]	count=1
arg	x y ||| x y	count=30
arg	[arg_1] titles description ||| [arg_1] [arg_2]	count=4
function	move a file ||| move	count=1
arg	a [arg_2] ||| [arg_2] [arg_1]	count=3
function	output [function] of executing ||| [function]	count=1
function_arg	at [arg_2] ||| [function_1] [arg_2]	count=1
arg	kind keyword ||| kind	count=1
module	ndarray ||| numpy matrix	count=1
function_arg	[function_1] an array ||| [function_1] [arg_2]	count=6
function	the bit-wise xor of ||| bitwise xor	count=1
function_arg	[function_1] line ||| [function_1] base64 [arg_2]	count=1
arg	a temporary ||| dir prefix	count=1
function	add the ||| add	count=1
function	examples in ||| examples	count=1
arg	a given name ||| name frame locals	count=1
arg	src to dst ||| src dst	count=2
function	[function_1] header ||| [function_2] [function_1]	count=4
function	the sum along diagonals ||| trace	count=1
function_arg	[function_1] func ||| [arg_2] [function_1]	count=1
function_arg	[function_1] with ||| [arg_2] [function_1]	count=6
arg	in ||| a	count=12
arg	with the specified shape ||| new_shape	count=1
function	[function_1] list of ||| [function_1] [function_2] extracted_list file	count=1
function	given family ||| ntop	count=1
module	a linear matrix ||| numpy linalg	count=1
arg	> tuple of n ||| iterable n	count=2
function_arg	median [arg_2] ||| [function_1] [arg_2]	count=1
function	backward ||| back	count=1
module	a set with ||| set	count=3
arg	that sub ||| sub	count=4
function	transpose ||| t	count=1
arg	directory ||| onerror	count=1
function	sets the unittest option ||| unittest reportflags	count=1
arg	to maintain order ||| a v side sorter	count=1
arg	a day as ||| day weekday	count=1
arg	file in uncompressed ||| file args kwds	count=1
function_arg	extension [arg_2] ||| [arg_2] [function_1]	count=2
module	or set ||| turtle	count=1
function	the phase angle ||| phase	count=1
function_arg	is a ||| is zero a	count=1
arg	prefix otherwise false ||| a prefix start	count=1
function_arg	scalar type [arg_2] ||| [arg_2] [function_1]	count=1
arg	start ||| start	count=2
function_arg	add one ||| hermadd c1 c2	count=1
arg	high ||| high size	count=1
module	doctest docstring ||| doctest	count=1
arg	nested [arg] depth-first in ||| [arg]	count=1
arg	and port ||| port	count=1
arg	mime mail ||| ifile ofile is_mime	count=2
module	matrix equation ||| linalg	count=2
arg	object to a stream ||| object stream indent width	count=1
function	specified ||| resize	count=1
function_arg	// [arg_2] ||| [arg_2] [function_1]	count=1
module	return [module] ||| [module]	count=1
function_arg	[function_1] status ||| os [function_1] [arg_2]	count=3
arg	virtual subclass ||| cls subclass	count=1
function	history ||| write history	count=1
function	python script from ||| execfile	count=1
module	traceback given ||| traceback	count=1
arg	whether a [arg] refers ||| [arg]	count=1
function	generator ||| isgenerator	count=1
module	a random ||| random	count=2
arg	each value in array ||| weights minlength	count=1
arg	d[k]=d if [arg] not ||| [arg]	count=1
function	a data type ||| dtype	count=1
function_arg	v [function_1] [arg_2] ||| collections ordereddict [function_1] [arg_2]	count=3
module	pseudo-vandermonde ||| polynomial	count=1
function	the [function] ||| harden [function]	count=2
function	standard [function_2] ||| [function_2] [function_1]	count=3
module	object to simplify the ||| chararray	count=1
function	most [function] to the ||| most [function]	count=1
function	a standard [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] of substring ||| [arg_2] [function_1]	count=3
function_arg	|= [arg_2] ||| [function_1] [arg_2]	count=1
arg	sql ||| sql	count=1
module	turtle on canvas ||| turtle	count=2
function	determine the libc ||| libc	count=1
arg	up values of variables ||| locals	count=1
arg	a record to ||| record	count=1
arg	expression: condition ? true ||| condition true	count=1
function	parsed from ||| strptime	count=1
function_arg	where a condition ||| masked where condition	count=2
function	intersection of ||| intersection	count=2
arg	return a day as ||| day weekday	count=1
function	returns a sha224 ||| sha224	count=1
module	linear ||| linalg	count=1
arg	breaking at line boundaries ||| keepends	count=2
function	type ||| type	count=5
function_arg	is not [arg_2] ||| [function_1] [arg_2]	count=1
arg	a ||| a size	count=2
module	evaluate a 2-d [module_1] [module_2] ||| [module_2] [module_1] chebgrid2d	count=3
arg	path is none all ||| path	count=1
function	a list of ||| get	count=1
arg	matching ||| testmatch	count=1
arg	occurrences ||| count	count=1
module	a ||| numpy linalg	count=2
function_arg	[function_1] values ||| [arg_2] [function_1]	count=1
function	line [function_2] ||| [function_1] [function_2]	count=1
module	an object to simplify ||| chararray	count=1
function_arg	[function_1] name for ||| [arg_2] [function_1]	count=3
arg	[arg_1] file ||| [arg_1] [arg_2]	count=1
function	create ||| mkdir	count=1
function	default setting ||| resetlocale	count=1
arg	> tuple of n ||| n	count=2
function	and returns [function] ||| der_cert [function]	count=1
arg	roots ||| roots domain	count=2
module	return a ||| numpy	count=1
function_arg	[function_1] a fd ||| [function_1] [arg_2]	count=2
arg	into account ||| val	count=2
arg	hermitian or symmetric ||| uplo	count=1
arg	true if [arg] is ||| [arg]	count=1
module	for the ||| bufferingformatter	count=1
function_arg	convert [function_1] [arg_2] ||| mimify [function_1] ifile ofile [arg_2]	count=2
arg	[arg_1] [arg_2] condition ||| condition [arg_1] [arg_2]	count=2
arg	targetpath ||| targetpath	count=3
function	current process ||| current process	count=2
arg	directory ||| path ignore_errors	count=1
function_arg	array where [arg_2] ||| [function_1] [arg_2]	count=3
arg	least-squares solution ||| b rcond	count=1
arg	a day ||| day	count=1
arg	x in list a ||| a x	count=5
function_arg	[function_1] [arg_2] ||| [function_1] snan [arg_2]	count=1
module	tree ||| shutil	count=1
arg	access and modified time ||| atime mtime	count=1
module	with sigterm ||| popen	count=1
function_arg	[function_1] version ||| [arg_2] [function_1]	count=5
arg	targetpath according ||| targetpath	count=3
function	compute hqx [function_2] ||| [function_2] [function_1]	count=2
arg	draw samples from the ||| left mode right size	count=1
function	access permissions of a ||| lchmod	count=1
module	of two one-dimensional ||| numpy	count=1
function	choose ||| choose	count=1
function	axis while ||| nanpercentile	count=1
function	apply a ||| apply	count=1
function	all items of ||| assert array	count=1
arg	in style ||| style	count=1
function_arg	[function_1] present value ||| [function_1] [arg_2]	count=3
function	the bit-wise or of ||| bitwise or	count=1
module	current ||| sqlite3 connection	count=2
arg	type ||| dtype	count=3
arg	level ||| level	count=3
arg	of the bins ||| bins right	count=1
arg	rate of return ||| finance_rate reinvest_rate	count=1
module	new array with ||| numpy	count=1
arg	n ||| iterable n	count=2
function_arg	[function_1] sequence of ||| [function_1] [arg_2]	count=2
arg	style ||| style	count=1
module	a ||| float	count=2
module	pseudo-vandermonde matrix of ||| numpy	count=1
module	object ||| numpy	count=1
function_arg	[function_1] number ||| [arg_2] [function_1]	count=1
module	series by another ||| polynomial	count=6
module	hermite series to a ||| numpy polynomial hermite_e	count=1
function	repeat elements ||| repeat	count=1
arg	a path ||| path	count=5
module	end of [module] ||| [module]	count=3
module	with a scalar ||| defchararray chararray	count=1
function	code object ||| get code	count=1
arg	path ||| path start	count=1
function	start a ||| start	count=1
function	compile a ||| compile	count=1
arg	bytes contained ||| b bytes	count=1
arg	compares [arg] operands ||| a [arg]	count=1
module	set file ||| tarfile tarfile	count=1
arg	insert item x ||| x	count=7
arg	path with arguments ||| path args	count=1
module	cache or calls ||| sqlite3 cache	count=1
arg	where two ||| a b	count=1
module	trace ||| traceback	count=1
module	the process with ||| subprocess	count=2
function	of index ||| index	count=1
function	-a ||| neg	count=1
module	of the [module] to ||| [module]	count=1
arg	[arg] specified ||| a indices axis [arg]	count=3
function	[function_1] exponential distribution ||| [function_1] [function_2]	count=2
module	[module_1] [module_2] ||| [module_1] [module_2]	count=60
arg	argument list [arg] the ||| file [arg]	count=1
function	[function_1] the type ||| [function_1] completion [function_2]	count=1
arg	[arg_1] tarinfo' to ||| [arg_2] [arg_1]	count=3
module	finder info resource ||| macostools	count=1
function	that satisfy some ||| extract	count=1
module	iterator to the dump ||| connection	count=1
function	symmetric difference ||| symmetric difference	count=10
function_arg	return output [function_1] [arg_2] ||| [function_1] [arg_2]	count=10
function	centered ||| center	count=2
module	canvas ||| turtle	count=1
module	the interaction of the ||| numpy chararray	count=1
function_arg	the hanning window ||| hanning m	count=1
function	[function_1] difference ||| [function_1] [function_2]	count=15
function	clumps of a 1-d ||| clump masked	count=1
function	thread and ||| thread	count=1
function	in ||| bisect left	count=1
arg	sequence and b ||| a b	count=1
arg	of b [arg_2] ||| [arg_1] [arg_2]	count=1
arg	a function ||| function shape	count=1
function	convert ||| loads	count=1
function	complete ||| complete	count=1
module	magnitude of the operand ||| decimal context	count=1
arg	the day of enddates ||| enddates	count=1
function	+ b for ||| concat	count=1
arg	the specified [arg] creating it ||| [arg]	count=1
arg	[arg_1] matching a ||| [arg_1] decorator [arg_2]	count=1
function	sequencematcher to return ||| get	count=1
module	load a [module] from ||| [module]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] tb tb [arg_2]	count=9
function_arg	*= [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] exception ||| [function_1] [function_2]	count=1
function	the completion display ||| completion display matches hook	count=1
function	returns a sha1 ||| sha1	count=2
function_arg	[function_1] statement ||| [function_1] [arg_2]	count=1
arg	of the bins to ||| bins	count=1
function	unittest option ||| unittest reportflags	count=1
arg	for a host ||| host	count=3
module	hermite series whose ||| numpy polynomial hermite	count=2
function	the east ||| east	count=1
function	compute the median along ||| median	count=1
arg	send a break ||| duration	count=1
function_arg	all methods [arg_2] ||| [arg_2] [function_1]	count=7
function	vertically row ||| vstack	count=1
function	do basic [function] for the ||| basic [function]	count=1
module	broadcasted result’s iterator s ||| numpy broadcast	count=1
function_arg	source code [arg_2] ||| [function_1] object [arg_2]	count=1
arg	parts of a mime ||| infile outfile decode_base64	count=1
arg	return a day ||| day weekday	count=1
function	time ||| time	count=1
function_arg	remove [arg_2] ||| [arg_2] [function_1]	count=7
arg	file ||| file dtype count	count=1
module	return a ||| mimetools	count=1
arg	matrix equation ||| a	count=1
arg	evaluate the source ||| source	count=1
arg	element-wise equal ||| equal_nan	count=2
function_arg	[function_1] other ||| [arg_2] [function_1]	count=4
arg	a python object ||| object indent width depth	count=1
arg	values ||| a	count=1
function_arg	permissions [arg_2] ||| [arg_2] [function_1]	count=3
module	the original float and ||| float	count=1
arg	given [arg_1] [arg_2] docstring can be found ||| [arg_1] [arg_2]	count=1
function_arg	return output [function_1] [arg_2] ||| commands [function_1] [arg_2]	count=10
arg	of x y and ||| x y	count=4
arg	an array ||| a newshape	count=1
module	all [module] calls of ||| [module]	count=1
arg	of the [arg] ||| [arg]	count=2
arg	specified key and ||| key default	count=1
function	indication of the class ||| number class	count=1
module	decimal object ||| decimal	count=1
arg	using [arg] ||| s [arg]	count=6
function	supported formats ||| get archive formats	count=1
function	return the cumulative sum ||| cumsum	count=1
function_arg	convert a ||| herme2poly c	count=1
function	entries in ||| listdir	count=1
function	of values ||| values	count=1
arg	a unique temporary directory ||| suffix prefix dir	count=1
module	the file on disk ||| memmap	count=1
module	return true ||| inspect	count=6
arg	prefix otherwise ||| prefix start end	count=1
function_arg	if [arg_2] ||| [arg_2] [function_1]	count=2
function	a sequence [function_2] ||| [function_1] [function_2]	count=1
function	get a [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] file ||| [arg_2] [function_1]	count=4
function	an indication [function_2] ||| [function_1] [function_2]	count=2
arg	auto, user, noresize ||| rmode	count=1
module	[module_1] series ||| [module_2] [module_1] laggrid2d	count=1
module	array to a standard ||| ma masked_array	count=1
module	of array with ||| core defchararray chararray	count=1
module	basis ||| hermite_e hermitee	count=1
arg	specified axis ||| axis	count=5
function	profiler supplying your own ||| runctx	count=1
arg	integer [arg] range ||| [arg]	count=1
arg	[arg] or from ||| fp [arg] keep_blank_values	count=2
function	[function_1] the module ||| [function_2] [function_1]	count=1
function	from a [function_2] ||| [function_1] [function_2]	count=2
arg	/= b when __future__.division ||| b	count=2
function	data [function] smallest ||| min scalar [function]	count=1
function	compares the values of ||| compare	count=1
arg	the interest ||| nper	count=1
arg	a [arg] object ||| [arg]	count=1
function	cache ||| cache	count=1
function	default ||| get default	count=1
function	the entries in the ||| listdir	count=1
arg	path with ||| path args env	count=1
arg	returns true if two ||| b	count=1
arg	x and ||| x	count=1
function	the owner and group ||| lchown	count=1
arg	[arg_1] the wrapped ||| [arg_2] [arg_1]	count=6
rep	the [module_1] [function_arg_2] ||| [module_1] set [function_arg_2]	count=1
function	data along ||| nanpercentile	count=1
module	an array from ||| numpy	count=1
function_arg	v [function_1] [arg_2] value ||| [function_1] [arg_2]	count=1
arg	[arg_1] matching ||| [arg_1] decorator [arg_2]	count=1
module	and a write the ||| zipfile	count=2
function	the ||| nanpercentile	count=3
module	exit the [module] raising ||| [module]	count=1
function	slices along the ||| along	count=1
function_arg	or [arg_2] ||| [function_1] x1 [arg_2]	count=1
arg	in node ||| node	count=1
arg	[arg_1] minor device ||| [arg_2] [arg_1]	count=3
arg	return a string ||| s	count=1
function_arg	startup_hook function ||| startup hook function	count=1
arg	message incorporating the message ||| message	count=1
arg	but rounding ||| f	count=1
module	smallest ||| heapq	count=1
function	return the magic number ||| magic	count=1
function	compile the ||| compile	count=1
function_arg	[function_1] arguments element-wise ||| [arg_2] [function_1]	count=1
arg	theme of given etype ||| elementname etype	count=1
arg	parse a [arg] ||| fp environ [arg]	count=2
arg	list of lines ||| lines	count=1
arg	is found such that ||| start end	count=4
module	return time ||| datetime time	count=1
function	ustar [function_2] ||| [function_1] [function_2]	count=1
function_arg	generated [arg_2] ||| [arg_2] [function_1]	count=1
module	by the ||| sys	count=1
arg	month ||| themonth	count=3
module	the array to ||| numpy chararray	count=1
arg	a directory ||| path ignore_errors	count=1
function	vertices of [function_2] ||| [function_1] [function_2]	count=1
arg	in s [arg_2] ||| [arg_2] [arg_1]	count=1
module	slice described by s ||| slice	count=1
arg	a given value ||| fill_value	count=2
module	the discrete fourier transform ||| fft	count=1
module	with ||| numpy	count=2
arg	array ||| copy shrink dtype	count=1
module	return the current value ||| sys	count=1
arg	[arg_1] [arg_2] ||| leggrid2d [arg_1] [arg_2]	count=1
arg	the least-squares solution ||| a b rcond	count=1
arg	remote addr ||| addr	count=1
arg	[arg_1] [arg_2] ||| [arg_2] b [arg_1]	count=1
function_arg	[function_1] sorted assuming ||| [arg_2] [function_1]	count=6
arg	the specified axis ||| a	count=1
module	an object ||| numpy	count=1
function_arg	return a [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
module	calendar as ||| calendar	count=1
function_arg	[function_1] of ||| [arg_2] [function_1]	count=2
module	iterator to ||| sqlite3 connection	count=1
function_arg	set the [function_1] [arg_2] ||| turtle [function_1] [arg_2]	count=4
arg	exponent is the ||| rounding context	count=1
arg	a [arg] refers ||| [arg]	count=1
rep	turtle [function_arg_2] ||| [module_1] [function_arg_2]	count=12
arg	format a python ||| indent width depth	count=1
function	time of the specified ||| time	count=1
module	array to the ||| chararray	count=1
module	of the database ||| sqlite3 connection	count=1
arg	a and b ||| a b	count=3
function_arg	// = [arg_2] ||| [function_1] [arg_2]	count=1
arg	unicode character unichr as ||| unichr default	count=4
arg	to a linear ||| a	count=1
module	return random ||| numpy random randomstate	count=1
function_arg	convert a ||| leg2poly c	count=1
arg	seconds since ||| seconds	count=2
module	magnitude of the operand ||| context	count=1
function_arg	[function_1] class ||| [arg_2] [function_1]	count=1
module	random [module_2] ||| [module_2] [module_1]	count=1
arg	[arg_1] [arg_2] ||| irepeat [arg_2] [arg_1]	count=3
arg	maintain order ||| v side sorter	count=1
arg	in *node* ||| node	count=1
function	the owner and group ||| chown	count=1
module	dump of ||| sqlite3	count=1
arg	line of ||| ascii	count=1
function	lock for ||| lock	count=1
arg	bins to ||| bins	count=1
function	debugging ||| debug	count=1
module	the ||| handler	count=2
module	dump of the ||| sqlite3 connection	count=1
module	laguerre series ||| polynomial laguerre	count=7
module	series on the cartesian ||| polynomial	count=3
arg	mask an ||| a copy	count=1
function	[function_1] class ||| [function_2] [function_1]	count=3
module	set array flags writeable ||| chararray	count=1
function	a ||| get	count=1
function_arg	[function_1] [arg_2] that ||| [function_1] executable [arg_2] chunksize	count=4
function	a negative ||| negative	count=1
function_arg	add the [arg_2] ||| [function_1] [arg_2]	count=3
module	shape ||| turtle	count=1
arg	for a given name ||| name frame locals	count=1
function	change the access permissions ||| lchmod	count=1
arg	fildes ||| fildes	count=1
function	the current process ||| current process	count=2
function	current [function] of ||| [function]	count=1
module	with masked ||| ma	count=1
arg	the element-wise ||| x1 x2	count=1
function	[function_1] key ||| [function_2] [function_1]	count=1
function	low-level inferface ||| warn explicit	count=1
arg	group associated with the ||| pgid	count=1
function_arg	[function_1] numpy ||| [arg_2] [function_1]	count=1
arg	specified [arg] creating it ||| [arg]	count=1
function	commit the current transaction ||| commit	count=1
arg	a ||| p	count=4
function	[function_1] thread and ||| [function_2] [function_1]	count=3
arg	compute the qth percentile ||| q	count=1
arg	: false ||| false	count=1
arg	from tb ||| value tb	count=1
arg	data along the specified ||| a	count=1
arg	extract all [arg] from the ||| [arg]	count=1
module	array flags ||| chararray	count=1
module	this ||| hermite hermite	count=1
arg	start stop [arg_2] ||| [arg_2] [arg_1]	count=1
arg	entries from tb ||| etype value tb	count=1
function	compute the ||| nanpercentile	count=1
function	return the class to ||| class	count=1
arg	an address ||| address	count=1
arg	of a subclass thereof ||| class-or-type-or-tuple	count=1
module	module name [module] a given ||| [module]	count=1
function	lock is in ||| lock	count=1
function	mapping [function_2] ||| [function_1] [function_2]	count=1
module	measured in radians ||| math	count=2
function	aliases ||| gethostbyname ex	count=1
module	mode w and ||| zipfile zipfile	count=1
function_arg	[function_1] gaussian distribution ||| [function_1] [arg_2]	count=6
function_arg	float [arg_2] ||| [function_1] [arg_2]	count=4
function	1-d slices along the ||| along axis	count=1
module	laguerre series to another ||| polynomial laguerre	count=1
module	of this st ||| parser st	count=1
arg	returns an array with ||| a	count=1
rep	dtype [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	return the element-wise square ||| square	count=1
module	array to ||| chararray	count=2
arg	representation of a number ||| number	count=1
arg	the other operand ||| other context	count=2
arg	c is a subclass ||| c	count=1
module	an ||| codecs	count=2
function	new ||| resize	count=1
function	to open ||| open	count=1
function	a scalar type ||| type	count=1
arg	given ||| k	count=1
function	the access permissions ||| chmod	count=1
arg	pickle ||| pickle	count=1
arg	a stream ||| stream indent	count=1
function	duplicate of a ||| dup	count=1
function_arg	[function_1] element-wise ||| [arg_2] [function_1]	count=20
function	a fifo ||| makefifo	count=1
arg	additional version ||| version	count=1
arg	a unique temporary ||| suffix prefix dir	count=3
arg	the specified axis ||| axis	count=5
function	compile a [function_2] ||| [function_2] [function_1]	count=1
arg	string with ||| s binary	count=1
function	that all items ||| assert array max ulp	count=1
function	and keep it ||| insort	count=3
module	used by the ||| sys	count=1
function_arg	read s ||| read s	count=1
module	a module name if ||| pydoc	count=1
arg	[arg_1] choicelist ||| [arg_2] [arg_1]	count=8
arg	reference count [arg] ||| [arg]	count=1
function	a keyboardinterrupt in the ||| interrupt	count=1
function	read ||| read	count=5
arg	file for ||| filename	count=1
arg	the specified url ||| url	count=1
function	[function_1] the pre_input_hook ||| [function_2] [function_1]	count=1
arg	array with ones ||| dtype	count=1
arg	the unicode character unichr ||| unichr default	count=1
module	at the current turtle ||| turtle	count=1
module	that contain masked values ||| ma	count=2
module	masked ||| ma	count=7
arg	[arg_1] file with ||| [arg_2] [arg_1]	count=1
function	file is ||| is	count=1
arg	the power [arg] ||| [arg]	count=1
function	ustar [function_2] ||| [function_2] [function_1]	count=1
arg	[arg] of ||| [arg]	count=5
arg	execute a path ||| path args	count=1
module	new [module] with a ||| [module]	count=1
function	or traceback ||| getframeinfo	count=1
function	tuple expressing utc a ||| gmtime	count=1
function	data type ||| dtype	count=1
function	[function_1] stack ||| [function_1] [function_2]	count=1
arg	a plst ||| restype resid	count=1
function	type for a ||| type	count=2
function	an event ||| event	count=1
function	internaldate representation ||| time2internaldate	count=1
arg	dictionary ||| dict	count=1
arg	integer severity level' on ||| level msg	count=1
module	return a new dtype ||| numpy dtype	count=1
module	internal ||| random wichmannhill	count=1
function	string ||| choose	count=1
arg	non-masked elements of ||| keepdims	count=1
arg	a uint8 array ||| myarray axis	count=1
arg	d[k]=d if [arg] not in ||| [arg]	count=1
arg	path with arguments ||| path	count=1
function_arg	return elements [function_1] [arg_2] ||| [function_1] condition [arg_2]	count=2
module	used by ||| sys	count=1
arg	a given axis ||| a axis	count=5
function	change the deleter on ||| deleter	count=1
module	default string encoding ||| sys	count=1
arg	string ||| string start	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=2
function	[function] to ||| [function]	count=3
arg	of a [arg_2] ||| [arg_2] [arg_1]	count=2
module	if the [module] ||| [module]	count=1
function	number closest to ||| next toward	count=1
arg	additional version information from ||| release version	count=1
arg	[arg_1] scheme ||| [arg_2] [arg_1]	count=1
module	the operand ||| context	count=3
arg	variables ||| locals	count=1
arg	return a month ||| theyear themonth	count=1
arg	an ||| a	count=20
module	element ||| core defchararray	count=1
function_arg	part of [arg_2] ||| mimify mimify [function_1] ifile ofile [arg_2]	count=1
function	archiving ||| archive	count=1
function	interpretation of the latter ||| urljoin	count=2
rep	return true if the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=6
function	is ||| is_hdn	count=1
module	dump of the database ||| connection	count=1
module	legendre series whose graph ||| numpy polynomial legendre	count=1
arg	[arg_1] [arg_2] condition ||| [arg_1] [arg_2]	count=2
module	are whitespace [module] there is ||| [module]	count=1
function_arg	convert an [function_1] [arg_2] ||| mimify [function_1] ifile ofile [arg_2]	count=2
module	series to a power ||| polynomial	count=2
module	of sets as ||| frozenset	count=1
arg	of x2 element-wise ||| x2	count=1
arg	to high ||| high	count=2
function	a zero ||| zero	count=1
module	an element of ||| numpy core defchararray chararray	count=1
function	items ||| assert array	count=1
function	all items ||| assert array max	count=1
arg	the n ||| n iterable key	count=2
function	numeric value ||| numeric	count=1
arg	port [arg_2] ||| [arg_2] [arg_1]	count=1
arg	an array with ||| a	count=1
arg	text returning a list ||| text width	count=1
arg	number in [arg_2] ||| [arg_1] [arg_2]	count=1
arg	[arg_1] is ||| [arg_2] [arg_1]	count=3
module	the raw traceback ||| traceback	count=1
function_arg	[function_1] path of ||| [function_1] [arg_2]	count=2
function	the digit value ||| digit	count=1
arg	axis while ignoring nan ||| a	count=1
function	make a logrecord whose ||| make	count=1
arg	pseudo-vandermonde matrix of ||| deg	count=2
rep	new dtype [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	return [function] ||| [function]	count=1
module	for ||| zipfile zipfile	count=1
arg	a resource from ||| resource	count=1
arg	record ||| record	count=5
module	matrix ||| numpy polynomial laguerre	count=2
module	a hermite ||| hermite	count=1
arg	radius ||| radius	count=1
module	get a [module] ||| [module]	count=3
function	get [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] the data ||| [function_1] [function_2]	count=1
arg	or if path ||| path prefix	count=1
arg	the least-squares solution ||| b rcond	count=1
arg	[arg_1] y ||| hermgrid2d [arg_1] [arg_2]	count=3
function_arg	the real part ||| real val	count=1
function	length of ||| length	count=1
function	the completion ||| completion	count=1
arg	get additional version information ||| release version	count=1
function	the string ||| string	count=1
module	w and ||| zipfile	count=2
module	a table ||| calendar htmlcalendar	count=2
module	returning ||| re	count=3
function_arg	[function_1] a mime ||| mimify [function_1] ifile ofile [arg_2]	count=2
function	a module ||| module	count=3
module	masked array to a ||| numpy ma masked_array	count=1
module	an array ||| numpy	count=1
arg	integers from ||| size dtype	count=1
function	flags ||| flags	count=2
module	array to a standard ||| numpy ma masked_array	count=1
function	the current directory ||| directory	count=1
arg	database [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	where [arg_2] ||| [function_1] [arg_2]	count=3
function	the docstring [function] given ||| [function]	count=1
function	encode ||| encode	count=1
arg	location or mean and [arg_1] [arg_2] ||| numpy random randomstate laplace [arg_2] [arg_1]	count=1
module	remove the [module] filter from ||| [module]	count=1
module	the i/o ||| logging	count=2
arg	return the logarithm [arg_1] [arg_2] ||| turtle log [arg_1] [arg_2]	count=3
arg	least-squares solution to ||| rcond	count=1
function_arg	[function_1] single item ||| [function_1] b [arg_2]	count=1
arg	series to series of ||| series domain	count=1
arg	specified suffix false otherwise ||| suffix start end	count=2
arg	sub in string ||| s sub	count=1
module	laguerre ||| numpy polynomial laguerre	count=1
function	references ||| getweakrefcount	count=1
function	a numeric [function_2] ||| [function_2] [function_1]	count=1
function_arg	a particular [arg_2] ||| [function_1] [arg_2]	count=1
module	a new dtype ||| numpy dtype	count=1
arg	found ||| sub start end	count=2
function	== ||| equal	count=1
arg	of d ||| d	count=5
module	copy an element of ||| numpy core defchararray	count=1
function	the roots of ||| hermroots	count=1
module	interaction of ||| chararray	count=1
function_arg	[function_1] cmd in ||| [arg_2] [function_1]	count=3
function	tries [function] ||| [function]	count=1
arg	key ||| key	count=2
module	string element in a ||| core defchararray	count=1
arg	[arg] / return ||| [arg]	count=1
function	return the code object ||| code	count=1
module	of an n-dimensional array ||| numpy	count=1
function	symmetric difference of itself ||| symmetric difference	count=2
function_arg	[function_1] source string ||| [arg_2] [function_1]	count=2
module	hermite_e ||| numpy polynomial hermite_e	count=1
arg	of an array to ||| a	count=1
arg	to the pattern ||| pattern	count=1
module	pathname ||| posixpath	count=1
function_arg	real part of ||| real val	count=1
arg	in od ||| od	count=1
arg	[arg_1] a plst ||| [arg_2] [arg_1]	count=1
function	string in ||| string	count=1
module	a copy ||| turtle	count=1
arg	or long integer ||| number	count=1
arg	substring is not found ||| sub start end	count=3
module	iterator to the dump ||| sqlite3	count=1
module	depth ||| sys	count=1
function	the transpose of the ||| t	count=1
module	legendre series to a ||| numpy polynomial legendre	count=1
function_arg	[function_1] key ||| [arg_2] [function_1]	count=3
arg	scale decay ||| loc scale size	count=1
arg	file ||| filename	count=5
module	[module] raising ||| [module]	count=1
module	and ||| site	count=1
arg	of an array ||| a axes	count=1
function_arg	multiply arguments element-wise ||| multiply x1 x2	count=1
module	a formatted ||| textcalendar	count=1
arg	dotted [arg] importing ||| [arg]	count=1
function	and stop [function] and ||| [function]	count=1
function	dumped to a core ||| wcoredump	count=1
function_arg	convert a ||| herm2poly c	count=1
module	of the ||| numpy	count=2
function	an indication of the ||| number	count=1
function_arg	set [arg_2] ||| [arg_2] [function_1]	count=2
function	id ||| getpid	count=1
arg	number of seconds ||| seconds	count=2
function	permute the dimensions ||| transpose	count=1
module	legendre series ||| numpy polynomial legendre	count=27
function	front ||| rsplit	count=1
function	[function_1] value of ||| [function_1] [function_2]	count=3
module	two or more ||| frozenset	count=1
arg	single file ||| file	count=1
arg	info resource fork etc ||| src dst createpath copydates forcetype	count=1
function	setter on ||| setter	count=1
function	compile a command ||| compile command	count=3
arg	given mode and return ||| mode encoding	count=1
module	array to a file ||| defchararray chararray	count=1
function	[function] for the ||| [function]	count=3
function	as a ustar ||| pax	count=1
arg	encoded string ||| s casefold	count=2
arg	and exponent [arg] as pair ||| [arg]	count=1
function	mask from ||| mask	count=1
arg	[arg_1] [arg_2] into a pretty-printed representation ||| [arg_2] [arg_1]	count=3
module	the specified ||| numpy	count=2
function_arg	generated a [arg_2] ||| [arg_2] [function_1]	count=1
arg	arr ||| arr	count=1
module	in unicode string ||| unicode	count=1
module	immediately ||| os	count=1
arg	flag is ||| flag	count=1
function	the intersection of itself ||| intersection	count=2
arg	[arg] and/or ||| domain [arg]	count=6
module	set with ||| sets set	count=3
module	mode w ||| zipfile zipfile	count=1
module	of two ||| frozenset	count=1
module	thread ||| logging	count=2
function	in ||| info	count=1
arg	assuming ||| lo hi	count=4
function	the class of ||| class	count=2
module	the current value ||| sys	count=1
function_arg	a >>= b ||| irshift a b	count=1
arg	rootobject as [arg_2] ||| [arg_2] [arg_1]	count=1
arg	name' ||| name arcname recursive exclude filter	count=1
function	[function_1] class to ||| [function_2] [function_1]	count=2
arg	the object ||| object	count=1
module	shape drawn after ||| turtle	count=1
arg	shape ||| a new_shape	count=1
function	test script ||| script	count=1
function	asian [function_2] ||| [function_1] [function_2]	count=1
function	phase angle ||| phase	count=1
function	code ||| get code	count=2
function	with the intersection ||| intersection	count=2
function_arg	return the process [function_1] [arg_2] ||| os [function_1] [arg_2]	count=1
module	given [module_2] ||| [module_1] [module_2]	count=2
module	to new file ||| bz2 bz2file	count=1
arg	array ||| dtype	count=5
function	split the ||| split	count=1
module	[module] specified ||| [module]	count=2
function	the line ||| line	count=1
module	matrix of ||| polynomial laguerre	count=1
module	a ||| zipfile zipfile	count=1
rep	move the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=6
function	return ||| lstsq	count=1
arg	of a number ||| number	count=1
arg	with false ||| dtype	count=1
arg	linear matrix equation ||| a	count=1
arg	mode ||| mode	count=1
function	standard deviation along the ||| nanstd	count=1
arg	traceback ||| traceback	count=1
module	the i/o thread lock ||| logging handler	count=2
arg	m ||| k m	count=1
module	a write the ||| zipfile	count=2
function	qnan or snan ||| nan	count=2
arg	recursively delete ||| path	count=1
module	linear matrix ||| numpy linalg	count=1
arg	the other [arg_2] ||| [arg_1] [arg_2]	count=2
arg	b in ||| b iterable_of_bytes	count=1
function_arg	read s characters ||| read s	count=1
module	hermite [module_2] ||| [module_2] [module_1] hermgrid2d	count=5
function	[function_1] and type ||| [function_1] [function_2]	count=2
function	a directory ||| rmtree	count=1
function	base-2 logarithm ||| log2	count=1
module	set ||| sets	count=1
function	write ||| write	count=2
module	with a scalar ||| chararray	count=2
arg	evaluate a piecewise-defined function ||| condlist funclist args kw	count=1
arg	[arg_1] [arg_2] ||| [arg_1] width [arg_2]	count=4
module	hermite series ||| numpy polynomial hermite_e	count=12
function	the npv net ||| npv	count=1
arg	the file [arg] ||| [arg]	count=1
arg	specified axes for ||| a b axes	count=1
arg	if path is ||| path prefix	count=1
arg	bytes contained in the ||| b bytes	count=1
arg	or first/last [arg] of ||| [arg]	count=1
function	to return list ||| get close	count=1
module	return ||| random randomstate	count=1
function	return the code ||| code	count=1
arg	source into an ||| source	count=1
function	command ||| command	count=1
arg	the specified axis ||| axis start	count=1
arg	n m array ||| n k m	count=1
module	laguerre series by x ||| polynomial laguerre	count=1
arg	and b is ||| a b	count=1
arg	unique temporary file name ||| suffix prefix dir	count=1
module	alphanumeric [module] there is ||| [module]	count=1
module	set array ||| core defchararray chararray	count=1
function	the shape ||| shape	count=1
arg	version ||| lib version	count=1
arg	length width ||| width fillchar	count=14
function	[function] of ||| window [function]	count=2
function_arg	[function_1] string ||| [function_1] pattern [arg_2]	count=1
arg	file using the file ||| name mode buffering	count=1
function_arg	pre_input_hook [arg_2] ||| [function_1] [arg_2]	count=1
module	a hermite [module_2] ||| [module_2] [module_1]	count=1
function	mask of the ||| mask	count=1
module	base64 ||| base64	count=4
arg	the ceiling [arg] as a ||| [arg]	count=2
arg	tarinfo' to the ||| fileobj	count=1
module	directory ||| shutil	count=1
arg	[arg_1] [arg_2] ||| chebyshev chebyshev convert [arg_1] [arg_2]	count=1
arg	write a [arg] to the ||| [arg]	count=1
arg	shape filled with ||| dtype	count=1
function_arg	where a [arg_2] ||| [function_1] [arg_2]	count=3
arg	find ||| ar1 ar2 assume_unique	count=1
function_arg	round [arg_2] ||| [function_1] [arg_2]	count=8
function	completion being attempted ||| completion	count=1
module	the array with the ||| chararray	count=1
module	[module_1] random integers ||| [module_1] [module_2]	count=4
function_arg	type which is ||| type array1 array2	count=1
arg	mask an array ||| a copy	count=1
module	array flags writeable ||| core defchararray chararray	count=1
module	in [module] s[start:end] ||| [module]	count=1
module	return the eigenvalues ||| numpy linalg	count=1
function	the transpose ||| t	count=1
module	degrees ||| numpy polynomial chebyshev	count=2
function	returns the transpose ||| t	count=1
module	a copy of the ||| turtle	count=1
function_arg	occurrences of [arg_2] ||| [function_1] [arg_2]	count=5
function	[function] of ||| [function]	count=19
module	year 's calendar as ||| calendar	count=1
function	as copytree [function] parameter ||| [function]	count=1
function	from [function_2] ||| [function_1] [function_2]	count=2
function	registers a [function_2] ||| [function_2] [function_1]	count=1
function	the east [function_2] ||| [function_1] [function_2]	count=2
module	axis while ignoring ||| numpy	count=1
function_arg	right-justified in [arg_2] ||| [arg_2] [function_1]	count=2
arg	a python [arg_2] ||| [arg_2] [arg_1]	count=1
module	given signal ||| signal	count=1
module	compile ||| py_compile	count=1
arg	url ||| url scheme	count=2
arg	substring sub in the ||| sub start end	count=1
function	the condition number ||| cond	count=1
arg	[arg_1] mail ||| [arg_2] [arg_1]	count=6
module	masked array to ||| numpy ma masked_array	count=1
arg	of length size starting ||| size	count=1
function_arg	[function_1] database file ||| [arg_2] [function_1]	count=1
function	intersection of itself ||| intersection	count=2
arg	encoding ||| encoding	count=2
module	test if ||| numpy testing	count=1
arg	[arg_1] true : ||| [arg_2] [arg_1]	count=3
arg	file-like object for ||| data proxies	count=1
arg	a name ||| name	count=2
arg	resolve host and port ||| host port	count=1
function_arg	right-justified in [arg_2] ||| [function_1] a width [arg_2]	count=1
arg	string by ||| string maxsplit	count=1
function_arg	non-overlapping occurrences [arg_2] ||| [function_1] a [arg_2]	count=4
arg	class ||| coef domain window	count=3
module	distribution mean=0 stdev=1 ||| random	count=1
function_arg	is [arg_2] ||| [function_1] zero [arg_2]	count=1
function	a list of ||| archive	count=1
function	working directory ||| getcwdu	count=1
module	legendre series from another ||| polynomial legendre	count=1
function	[function_1] exception up ||| [function_1] [function_2]	count=1
module	the same decimal ||| decimal context	count=1
module	of the array ||| chararray	count=4
function	pbm ||| pbm	count=1
function	locale [function] ||| [function]	count=1
arg	geometric progression ||| start stop num endpoint	count=1
module	return the ||| linalg	count=1
function_arg	< [arg_2] ||| [arg_2] [function_1]	count=1
module	of [module] in ||| [module]	count=1
arg	fill value ||| copy fill_value	count=1
function	to ||| to	count=5
function	union of sets ||| union	count=1
function_arg	[function_1] to an ||| [arg_2] [function_1]	count=4
module	[module] return a ||| [module]	count=1
function	return the code ||| get code	count=1
function_arg	the pre_input_hook [arg_2] ||| [arg_2] [function_1]	count=1
arg	b for ||| b axes	count=1
module	random number in ||| random random	count=1
function	compute the median ||| median	count=1
function_arg	xor of [arg_2] ||| [arg_2] [function_1]	count=1
module	counts the number of ||| numpy	count=1
module	centered ||| core defchararray	count=1
module	date ||| date	count=1
function_arg	[function_1] [arg_2] width ||| [function_1] a width [arg_2]	count=6
function	unpack the ||| unpack from	count=1
arg	find the ||| ar1 ar2	count=1
arg	file ||| file dtype	count=1
function	the union of itself ||| union	count=1
function_arg	insert [arg_2] ||| [arg_2] [function_1]	count=2
function	a string in the ||| string	count=1
function_arg	division [arg_2] ||| [arg_2] [function_1]	count=1
module	to ||| connection	count=1
arg	exponent of b ||| b	count=1
module	legendre ||| legendre	count=16
function	a 32-bit ||| ntohl	count=1
function_arg	[function_1] [arg_2] ||| [function_1] tracing [arg_2]	count=1
arg	length size starting at ||| size	count=1
arg	series to series ||| series domain	count=1
arg	corresponding to the ||| name	count=1
arg	x ||| x	count=52
arg	class ||| window	count=1
module	the file on disk ||| numpy memmap	count=1
arg	cosine [arg] ||| [arg]	count=3
module	database ||| connection	count=1
function	the angle ||| angle	count=1
function	sha224 ||| sha224	count=1
arg	roots of a ||| c	count=1
module	for mode w and ||| zipfile	count=2
function	print a [function_2] ||| [function_2] [function_1]	count=1
arg	the open file ||| file version	count=1
module	value ||| marshal	count=1
function	exponential distribution ||| exponential	count=1
module	to simplify ||| numpy	count=1
function	a sha256 ||| sha256	count=2
function_arg	type [arg_2] ||| [function_1] [arg_2]	count=1
module	a hermite series ||| polynomial hermite	count=1
arg	the scheme ||| scheme	count=1
function	arrays share [function_2] ||| [function_1] [function_2]	count=1
function	parse an ||| internaldate2tuple	count=1
function	flags [function_2] ||| [function_2] [function_1]	count=2
function	[function] code without ||| [function]	count=3
function	filling value ||| fill value	count=2
arg	a numpy [arg_2] ||| [arg_2] [arg_1]	count=2
module	lock ||| logging	count=2
function	[function_1] xor ||| [function_2] [function_1]	count=3
module	truncate the [module] to ||| [module]	count=1
module	mailcap ||| mailcap	count=3
function	has a key ||| has key	count=3
function	within a given interval ||| arange	count=1
arg	number in [arg_2] ||| [arg_2] [arg_1]	count=1
module	the cache or calls ||| cache	count=1
function	decode binhexed ||| hexbin	count=1
function_arg	[function_1] globals ||| [function_1] statement [arg_2]	count=2
function	sha1 ||| sha1	count=2
function_arg	return absolute [arg_2] ||| [arg_2] [function_1]	count=4
arg	port [arg_2] ||| [arg_1] [arg_2]	count=1
arg	pseudo-vandermonde matrix of given ||| y deg	count=1
arg	[arg_1] a assuming ||| [arg_2] [arg_1]	count=10
function	keyboardinterrupt in the main ||| interrupt main	count=1
arg	if [arg] not in ||| [arg]	count=1
arg	open file and return ||| file	count=1
function_arg	append [arg_2] ||| [function_1] [arg_2]	count=4
function	byte data into a ||| into	count=1
function	of a right-justified ||| rjust	count=1
module	array flags ||| numpy core defchararray chararray	count=1
function	write text ||| write	count=1
module	of an array to ||| ma masked_array	count=1
module	bytes of the array ||| ma masked_array	count=1
arg	shape to an ||| a newshape order	count=1
module	[module] the ||| [module]	count=11
arg	[arg] at ||| [arg]	count=4
arg	the substring sub ||| sub	count=1
function_arg	[function_1] line of ||| [function_1] base64 [arg_2]	count=1
function	returns ||| get	count=1
arg	sockaddr ||| sockaddr flags	count=1
module	ignoring nan ||| numpy	count=1
arg	yields the [arg] ||| [arg]	count=1
module	returns ||| multiprocessing	count=1
module	command ||| subprocess	count=1
function	16-bit ||| ntohs	count=1
module	w ||| zipfile	count=2
function	table of contents ||| printdir	count=1
module	the data along the ||| numpy	count=1
function	logger -- ||| logger	count=1
function_arg	set owner [arg_2] ||| [arg_2] [function_1]	count=3
arg	axis ||| a axis	count=3
function	[function_1] stderr ||| [function_1] [function_2]	count=1
function	a data descriptor ||| isdatadescriptor	count=1
function	dynamic values ||| map	count=1
module	alphanumeric [module] there ||| [module]	count=1
function	value of a if ||| value	count=1
arg	error handling ||| errors	count=1
module	locale settings and returns ||| locale	count=1
arg	scale [arg_2] ||| numpy random randomstate laplace [arg_2] [arg_1]	count=1
function	aliases and ||| gethostbyname ex	count=1
function	mask to hard ||| mask	count=1
arg	sub is ||| a sub	count=1
function_arg	v [function_1] [arg_2] value ||| collections ordereddict [function_1] [arg_2]	count=1
function	[function_1] xor of ||| [function_2] [function_1]	count=3
module	of [module] 's ||| [module]	count=1
module	polynomial [module_2] ||| [module_2] [module_1]	count=3
arg	prefix otherwise false ||| prefix start end	count=1
function_arg	source code [arg_2] ||| [arg_2] [function_1]	count=2
arg	return its identifier ||| function args kwargs	count=1
module	onto the canvas and ||| turtle	count=1
arg	a file ||| filename	count=2
arg	two ||| a b out	count=3
arg	day ||| day weekday	count=1
function	initgroups to initialize ||| initgroups	count=1
module	linear matrix ||| linalg	count=1
function	two [function] objects ||| assert [function]	count=1
function	mouse-click event on ||| onscreenclick	count=1
function_arg	complex conjugate [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] integer from ||| [arg_2] [function_1]	count=3
function	new bounded [function_2] ||| [function_2] [function_1]	count=1
arg	protocol ||| protocol alternate	count=1
arg	[arg_1] a signal ||| [arg_2] [arg_1]	count=1
arg	b when __future__.division is ||| b	count=2
function	timer object ||| timer	count=1
function	write text at the ||| write	count=1
arg	the tarinfo object tarinfo' ||| tarinfo fileobj	count=1
function_arg	permissions of [arg_2] ||| [arg_2] [function_1]	count=3
arg	of a and b ||| a b	count=1
function_arg	and [arg_2] ||| [arg_2] [function_1]	count=1
module	including finder ||| macostools	count=1
arg	b in ||| a b	count=1
arg	read n objects from ||| n	count=1
arg	string ||| string func	count=1
module	for each element ||| numpy core defchararray	count=1
arg	directory tree ||| ignore_errors	count=1
function_arg	[function_1] numpy object ||| [function_1] [arg_2]	count=1
arg	an ip address ||| ip	count=1
function_arg	subtract one ||| chebsub c1 c2	count=1
arg	a condition is ||| condition	count=1
function	the line [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] string ||| [function_1] [function_2]	count=1
module	as a new set ||| frozenset	count=2
function	the width ||| width	count=1
module	string usable as a ||| mimetools	count=1
function	[function_1] response ||| [function_2] [function_1]	count=2
module	float and with a ||| float	count=1
module	finder info ||| macostools	count=1
module	an array to ||| ma masked_array	count=1
module	[module_1] to ||| [module_1] [module_2]	count=1
function	e ** ||| exp	count=1
arg	array with ||| dtype	count=2
arg	for a numpy ||| output	count=1
arg	condition ||| condition	count=5
module	into the [module] before the ||| [module]	count=1
function_arg	[function_1] dictionary ||| [arg_2] [function_1]	count=4
arg	a number in ||| number	count=1
arg	a directory ||| ignore_errors	count=1
arg	% formatting would use ||| grouping	count=1
arg	specified records and return ||| records	count=1
arg	with [arg] / return ||| [arg]	count=1
arg	return element-wise ||| x1 x2 out	count=1
arg	draw samples from the ||| mode right size	count=1
arg	url ||| url	count=5
arg	is not found ||| sub start end	count=2
module	archive ||| tarfile tarfile	count=2
module	this st object into ||| parser st	count=1
arg	a domain ||| domain	count=1
arg	parts of ||| infile outfile	count=1
arg	of a ||| x p	count=2
module	legendre series on the ||| numpy polynomial legendre	count=2
module	a copy of ||| turtle	count=1
arg	access and modified ||| path atime mtime	count=1
function	html table of ||| table	count=1
arg	the indices of the ||| a	count=1
function	to a ||| lstsq	count=1
arg	group with a signal ||| pgid sig	count=1
function	key ||| key	count=1
arg	object is an ||| object	count=3
module	we can note the ||| logging logger	count=1
function	type for a file ||| type	count=2
arg	valueerror when [arg] ||| a [arg] start	count=1
arg	string ||| s binary	count=1
function	indices to ||| indices from	count=1
function	of default ||| default	count=1
arg	of ||| a	count=1
arg	specified suffix false ||| suffix start end	count=2
arg	single item to ||| int	count=1
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=3
arg	a c ||| c type	count=1
arg	version information from ||| version	count=1
arg	on path or if ||| prefix onerror	count=1
arg	names [arg_2] ||| [arg_1] [arg_2]	count=3
arg	file ||| file version	count=1
arg	a numpy object ||| object output	count=2
arg	of variables used ||| locals	count=1
module	self ||| decimal	count=2
arg	to the other operand ||| other context	count=1
function	to the power ||| power	count=1
function_arg	tries [function_1] [arg_2] that ||| [function_1] [arg_2]	count=1
module	series to the ||| numpy polynomial hermite_e hermitee	count=1
function	indices to access the ||| indices	count=1
function	default [function_2] ||| [function_2] [function_1]	count=2
function	xor ||| logical xor	count=1
function	draw a circle ||| circle	count=1
function	of supported formats ||| get archive formats	count=1
arg	the unicode character unichr ||| unichr	count=1
arg	? true [arg_2] ||| [arg_1] [arg_2]	count=1
function	true division of the ||| true divide	count=1
arg	return n ||| n	count=2
module	onto the canvas ||| turtle	count=1
function	update ||| update	count=6
arg	version information from ||| release version	count=1
function	[function_1] not ||| [function_1] [function_2]	count=1
module	series to the ||| polynomial hermite_e	count=1
module	ignoring ||| numpy	count=1
arg	a decorator ||| decorator	count=1
module	stack trace entries from ||| traceback	count=1
arg	part of the ||| val	count=1
function	decode a long ||| decode long	count=3
function_arg	[function_1] of s ||| [arg_2] [function_1]	count=6
arg	root of a ||| a	count=1
module	a chebyshev ||| chebyshev	count=2
module	more ||| frozenset	count=1
module	a new lock ||| thread	count=1
arg	which the specified username ||| username	count=1
arg	return true if text ||| text	count=1
arg	a file-like object for ||| data proxies	count=1
module	same decimal ||| decimal	count=1
module	array flags writeable aligned ||| chararray	count=1
module	to the masked ||| ma	count=1
arg	kind ||| kind	count=3
arg	with given roots ||| roots	count=3
function_arg	[function_1] for module_or_name ||| [function_1] [arg_2]	count=2
module	return its id ||| turtle	count=1
arg	while ignoring nan ||| a	count=1
function	aliases ||| gethostbyaddr	count=1
function_arg	return the process [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
arg	read a module file ||| module path	count=1
arg	one axis ||| axis	count=1
function	gives a ||| reshape	count=1
module	dump of the ||| connection	count=1
module	polynomial of ||| numpy polynomial	count=4
arg	integer from network to ||| integer	count=2
arg	string ||| string maxsplit	count=1
function	stderr ||| stderr	count=1
module	[module_1] series by ||| [module_1] [module_2]	count=9
module	into the [module] before ||| [module]	count=1
function_arg	multiply one ||| legmul c1 c2	count=1
function	their names ||| getnames	count=1
arg	length size ||| size	count=1
arg	given etype ||| elementname etype	count=1
function	enabled [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] in ||| [arg_2] [function_1]	count=9
function	a list-tree representation ||| st2list	count=1
arg	an array along an ||| a indices	count=1
module	current ||| os	count=2
function	python function ||| function	count=1
module	tls/ssl ||| ssl sslsocket	count=1
function_arg	the extension [arg_2] ||| [function_1] [arg_2]	count=2
module	to ||| numpy linalg	count=2
arg	linear ||| b	count=1
function	returns [function] version ||| der_cert [function]	count=1
arg	in a string ||| string	count=1
module	random ||| numpy random randomstate	count=2
arg	signal ||| sig	count=1
function_arg	[function_1] x ||| [arg_2] [function_1]	count=7
function	to choose ||| choose	count=1
arg	words in list ||| words	count=1
arg	object connected by ||| duplex	count=1
function	absolute ||| abspath	count=1
module	a legendre series ||| polynomial legendre	count=2
module	hermite series by another ||| numpy polynomial hermite_e	count=2
module	maximum depth ||| sys	count=1
arg	geometric progression ||| stop num endpoint	count=1
function_arg	[function_1] its identifier ||| [function_1] [arg_2]	count=4
module	of two sets ||| sets baseset	count=1
function	the decimal ||| decimal	count=1
arg	is [arg] integer ||| [arg]	count=1
function	completion display ||| completion display matches hook	count=1
function	python ||| python	count=3
function	pep 302 loader object ||| loader	count=2
function	and keep it ||| insort left	count=1
function	[function] replaces ||| backslashreplace [function]	count=1
arg	the executable [arg] argument ||| [arg]	count=1
function	array with the specified ||| resize	count=1
function	sets authorizer callback ||| set authorizer	count=1
function	the most [function] to ||| most [function]	count=1
function_arg	permissions [arg_2] ||| [function_1] [arg_2]	count=1
arg	scale a geometric progression ||| stop num endpoint	count=1
function	of given degrees ||| polyvander2d	count=1
module	an element of an ||| numpy core defchararray chararray	count=1
module	series ||| numpy polynomial hermite_e hermitee	count=1
arg	tuple ||| tuple	count=1
function	the python [function_2] ||| [function_2] [function_1]	count=2
arg	source string by ||| string maxsplit	count=1
function	a mapping [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] minor device ||| os makedev [arg_1] [arg_2]	count=3
arg	with pysqlite ||| typename callable	count=2
arg	apply a decorator ||| decorator	count=1
arg	command [arg] in a ||| [arg]	count=1
function	integer power ||| power	count=1
function	[function_1] the filling ||| [function_1] [function_2]	count=2
arg	members ||| path members	count=1
function_arg	specified dictionary ||| log record dict	count=1
arg	is [arg] titlecased string ||| [arg]	count=1
arg	the specified username ||| username	count=1
function	release ||| release	count=1
function	rand_add ||| rand_add	count=2
arg	path to the ||| path	count=2
arg	number to ||| number	count=1
arg	2-d array with ones ||| dtype	count=1
arg	of severity [arg] and below ||| [arg]	count=1
function	object representing the current ||| current	count=1
arg	fd ||| fd	count=4
function	unarchiving ||| archive	count=1
module	the same decimal object ||| decimal	count=1
arg	linear matrix ||| b	count=1
module	an element of ||| numpy core defchararray	count=1
function_arg	[function_1] limit ||| [function_1] tb tb [arg_2]	count=1
arg	along an axis ||| a axis	count=4
arg	least-squares solution to a ||| a b rcond	count=1
function_arg	[function_1] the object ||| [arg_2] [function_1]	count=2
function_arg	owner of [arg_2] ||| [arg_2] [function_1]	count=3
arg	of binary data ||| data	count=1
module	interpreter immediately ||| os	count=1
function	the filling [function_2] ||| [function_1] [function_2]	count=4
module	series to ||| numpy polynomial hermite hermite	count=1
function	with the ctypes module ||| ctypes	count=1
module	copy an element of ||| numpy core defchararray chararray	count=1
arg	[arg_1] and type2 ||| [arg_1] [arg_2]	count=4
function	the day of ||| weekday	count=1
function	a plist ||| plist	count=1
arg	matching a regular expression ||| testmatch	count=1
function_arg	left-justified [arg_2] ||| unicode [function_1] s [arg_2]	count=1
arg	encoding and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	code a single line ||| line	count=1
function	an iterator over the ||| itervalues	count=2
function	examples in the ||| examples	count=1
arg	[arg_1] stop ||| [arg_2] [arg_1]	count=1
module	file ||| zipfile zipfile	count=1
function	the libc ||| libc	count=1
arg	class matching a ||| testmatch	count=1
function	or ||| logical or	count=1
arg	pseudo-vandermonde matrix ||| deg	count=2
arg	[arg_1] y ||| polygrid2d [arg_1] [arg_2]	count=3
arg	ignoring ||| a	count=1
module	to context ||| decimal context	count=1
function	east asian [function_2] ||| [function_2] [function_1]	count=1
function	source code for ||| source	count=1
arg	axis while ||| axis	count=1
arg	from [arg] ||| [arg]	count=2
arg	axes for ||| axes	count=1
arg	s ||| s	count=25
arg	python ||| indent width depth	count=1
function	return the union of ||| union	count=1
function	difference of ||| difference	count=6
function	the top of ||| getblock	count=1
function	last modification time ||| getmtime	count=2
rep	[module_1] debugging flags ||| [module_1] [function_arg_2]	count=2
module	returns a formatted ||| textcalendar	count=1
function	a new ||| new	count=2
module	of ||| numpy polynomial laguerre	count=2
arg	[arg_1] a plst ||| [arg_1] path [arg_2]	count=1
module	given array ||| numpy chararray	count=1
function	and type for a ||| and type	count=2
function	debug ||| debug	count=3
function	or of two arrays ||| or	count=1
module	ending records ||| zipfile zipfile	count=1
arg	to ||| a	count=1
function	particular ||| getargvalues	count=1
arg	[arg_1] sub ||| a [arg_2] [arg_1]	count=1
module	array with a scalar ||| core defchararray chararray	count=1
function	with the union ||| union	count=1
arg	[arg_1] per period ||| [arg_1] [arg_2]	count=1
function	execute a module 's ||| run module	count=1
arg	a time in seconds ||| seconds	count=1
function	return input with invalid ||| invalid	count=1
module	raise a square ||| numpy linalg	count=1
function	a right-justified version of ||| rjust	count=1
module	turtles on ||| turtle	count=1
module	a ||| shutil	count=2
module	angle measurement units to ||| turtle	count=1
module	the thread 's activity ||| threading thread	count=1
arg	/= b when ||| b	count=2
arg	source string by the ||| string maxsplit	count=1
arg	shape to an ||| a	count=1
function_arg	add one ||| hermeadd c1 c2	count=1
module	datasource directory ||| datasource	count=1
function_arg	[function_1] axis ||| [arg_2] [function_1]	count=1
module	the current value of ||| sys	count=1
function	matrix ||| lagvander	count=1
arg	execute a path ||| path args env	count=1
function	[function] time ||| [function]	count=1
arg	with callback [arg_2] ||| [arg_2] [arg_1]	count=2
arg	of a sequence ||| sequence	count=1
arg	shape filled with false ||| dtype	count=1
module	evaluate a 2-d [module_1] [module_2] cartesian product ||| [module_2] [module_1]	count=5
function	[function_1] module ||| [function_1] [function_2]	count=1
arg	pseudo-vandermonde matrix ||| x	count=1
module	release ||| logging handler	count=1
function	a new thread and ||| new thread	count=1
module	copy ||| turtle	count=1
function	a new array ||| resize	count=1
function_arg	[function_1] a condition ||| [function_1] [arg_2]	count=2
arg	the specified shape ||| a new_shape	count=1
function	the groups ||| setgroups	count=1
arg	for option ||| option state default	count=1
arg	lowest index [arg] ||| [arg]	count=1
module	to the dump of ||| sqlite3	count=1
function	a long ||| long	count=2
function	process ||| process	count=1
function	the terminal given by ||| tcsetpgrp	count=1
function	returning the default ||| default	count=1
arg	parse a [arg] ||| fp [arg]	count=1
function	rank of array using ||| rank	count=1
arg	axis while ||| a	count=1
module	mode w ||| zipfile	count=2
function	returns html table ||| table	count=1
arg	return the specified ||| ei	count=1
arg	[arg_1] fun to ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] c ||| [arg_2] [function_1]	count=1
function	return a hexadecimal representation ||| hex	count=1
function_arg	compile [arg_2] ||| [function_1] [arg_2]	count=3
function	all relevant handlers ||| handlers	count=1
arg	look like ||| assigned updated	count=1
function	examples in the given ||| examples	count=1
module	distribution mean=0 ||| numpy random	count=1
function	two sequences that generated ||| restore	count=1
arg	an array to the ||| a	count=1
module	of the python interpreter ||| sys	count=1
function	return the real ||| real	count=1
function	state ||| getstate	count=1
function_arg	[function_1] x y ||| [arg_2] [function_1]	count=1
function	the bit-wise [function_2] ||| [function_1] [function_2]	count=8
function	the header [function_2] ||| [function_2] [function_1]	count=2
module	return datetime ||| datetime datetime	count=1
arg	limit stack trace entries ||| limit file	count=1
function	the code object for ||| get code	count=1
function_arg	the libc [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	and other ||| and other context	count=1
function_arg	[function_1] substring sub ||| [function_1] [arg_2]	count=6
function_arg	[function_1] [arg_2] ||| [function_1] b old new [arg_2]	count=2
function	a ||| choose	count=2
arg	such that sub ||| sub	count=4
module	chebyshev series from another ||| polynomial chebyshev	count=1
arg	run statement ||| statement	count=1
function	week [function] the ||| [function]	count=1
module	file including finder ||| macostools	count=1
arg	bins to which each ||| bins right	count=1
arg	url to ||| url	count=1
arg	in ||| a indices	count=1
arg	parses [arg] ||| [arg]	count=1
arg	in a given ||| a	count=1
function_arg	[function_1] limit ||| [arg_2] [function_1]	count=3
function	the indices ||| indices from	count=2
arg	prefix ||| prefix	count=1
rep	return [function_arg_2] ||| [module_1] [function_arg_2]	count=16
arg	text ||| text cmd	count=1
module	after the ||| turtle	count=1
module	polynomial ||| polynomial hermite hermite	count=1
function	deleter on ||| deleter	count=1
function_arg	input to [arg_2] ||| [arg_2] [function_1]	count=2
function	the hexadecimal representation ||| hex	count=1
module	the ||| cursor	count=1
arg	wrapped ||| wrapped	count=1
arg	code to a ||| code	count=1
arg	a partitioned copy ||| kth axis kind order	count=1
module	eigenvalues ||| numpy linalg	count=1
function	the owner and ||| chown	count=1
module	unicode [module] of ||| [module]	count=1
function	read a plist ||| read plist	count=3
function	zipf ||| zipf	count=2
function	the filling value of ||| fill value	count=1
module	masked and replaced by ||| ma	count=1
arg	input values ||| values	count=1
function	[function] themename refreshes ||| [function]	count=3
arg	values ||| arr obj values	count=1
arg	cartesian product [arg_1] [arg_2] ||| chebgrid2d [arg_1] [arg_2]	count=1
function	remove all elements from ||| clear	count=1
arg	find ||| ar1 ar2	count=1
module	new [module] given shape ||| [module]	count=1
arg	of the c ||| c	count=1
arg	not found ||| start end	count=2
arg	c expression: condition ||| condition	count=1
function_arg	absolute [arg_2] ||| [arg_2] [function_1]	count=4
module	system ||| os	count=1
module	decimal ||| decimal	count=3
module	array ||| numpy core defchararray chararray	count=2
module	mode ||| zipfile	count=2
function	directory ||| rmtree	count=1
function	a true division of ||| true divide	count=1
module	laguerre series to ||| polynomial laguerre	count=1
module	simplify the interaction of ||| numpy chararray	count=1
module	legendre series to ||| numpy polynomial legendre	count=6
arg	of a mime mail ||| ifile ofile is_mime	count=1
arg	if [arg] not ||| [arg]	count=1
arg	along the specified ||| a	count=1
arg	scan through string ||| string	count=1
arg	dot product of two ||| a b	count=1
arg	to an ||| a newshape	count=1
module	the [module] named ||| [module]	count=1
function	complex conjugate ||| conjugate	count=1
function	decode [function_2] ||| [function_1] [function_2]	count=1
arg	file descriptor ||| fd	count=1
function	transpose of ||| get t	count=1
function	terminate the ||| terminate	count=1
module	masked ||| numpy ma	count=10
module	to the ||| connection	count=1
arg	shape with [arg] / ||| [arg]	count=1
function_arg	[function_1] a ||| [function_1] [arg_2]	count=4
module	process with sigterm ||| subprocess popen	count=1
function	[function] as a ||| [function]	count=2
arg	a numpy ||| output	count=1
function	integers whose ratio ||| integer ratio	count=1
function	the maximum length of ||| length	count=1
arg	[arg_1] step ||| [arg_2] [arg_1]	count=2
module	hermite series from ||| polynomial hermite_e	count=1
module	logger which is ||| logging logger	count=2
module	matrix ||| matrix	count=3
arg	by the specified distance ||| distance	count=1
module	array with ||| numpy	count=2
function_arg	set owner [arg_2] ||| [function_1] tarinfo [arg_2]	count=2
arg	to an array without ||| a	count=1
function	output ||| output	count=1
arg	payment ||| rate per nper	count=1
function_arg	part [arg_2] ||| mimify mimify [function_1] [arg_2]	count=2
function_arg	key [arg_2] ||| [function_1] d [arg_2]	count=1
arg	a different kind ||| kind	count=2
function	[function_1] printing options ||| [function_2] [function_1]	count=1
function	all items ||| array	count=1
module	the maximum depth ||| sys	count=1
function_arg	a path [arg_2] ||| [arg_2] [function_1]	count=4
function	[function_1] class ||| [function_1] [function_2]	count=1
function_arg	backward [arg_2] ||| [function_1] [arg_2]	count=2
module	series whose graph ||| numpy polynomial	count=3
function_arg	[function_1] c is ||| [function_1] [arg_2]	count=1
arg	file for ||| filename flag	count=1
module	return [module_2] ||| [module_1] [module_2]	count=20
arg	set background image ||| picname	count=1
function	sum ||| sum	count=1
module	get the ||| stringo	count=1
function	>>= ||| irshift	count=1
arg	at points [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] to limit ||| [arg_2] [function_1]	count=3
arg	string s [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] twos exponent ||| [function_1] x [arg_2]	count=2
function_arg	add arguments element-wise ||| add x1 x2	count=1
arg	specified key and ||| od key default	count=2
arg	product [arg] ||| [arg]	count=6
function_arg	a key [arg_2] ||| [function_1] d [arg_2]	count=1
function_arg	a long [arg_2] ||| [arg_2] [function_1]	count=1
module	legendre series to data ||| numpy polynomial legendre	count=1
arg	[arg_1] in ||| [arg_2] [arg_1]	count=18
function_arg	[function_1] a ||| [function_1] nan [arg_2]	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=521
arg	directory tree ||| path	count=1
module	a directory tree ||| shutil	count=1
arg	limit stack trace entries ||| limit	count=1
arg	a resource from a ||| resource	count=1
function_arg	[function_1] specified key ||| collections ordereddict [function_1] [arg_2]	count=1
arg	of [arg] in ||| [arg] repl string	count=1
function_arg	split the [arg_2] ||| [function_1] [arg_2]	count=1
module	the array elements ||| ma masked_array	count=1
module	and a write the ||| zipfile zipfile	count=1
arg	[arg_1] [arg_2] to quoted-printable ||| [arg_2] [arg_1]	count=6
function	the lock is ||| lock	count=1
arg	fill value ||| fill_value	count=1
function_arg	[function_1] from a ||| [function_1] [arg_2]	count=3
module	the ||| sqlite3	count=5
arg	a directory tree ||| onerror	count=1
module	pseudo-vandermonde matrix of ||| numpy polynomial laguerre	count=1
arg	[arg_1] args ||| [arg_2] [arg_1]	count=2
arg	[arg_1] length ||| [arg_1] width [arg_2]	count=1
module	of self with masked ||| ma	count=1
module	of array with the ||| core defchararray chararray	count=1
function	unpack ||| unpack	count=1
function	aliases and a list ||| gethostbyname ex	count=1
module	delete a directory ||| shutil	count=1
module	an array to a ||| numpy ma masked_array	count=1
arg	tree ||| onerror	count=1
module	along ||| numpy	count=1
arg	file with arguments ||| file	count=1
arg	the two operands ||| a b	count=1
arg	string ||| s encoding	count=1
arg	a python [arg_2] ||| pprint pformat [arg_2] [arg_1]	count=1
module	the laguerre ||| polynomial laguerre	count=1
function	part of a mime ||| part	count=1
arg	minor ||| minor	count=1
arg	function ||| function shape dtype	count=1
function	decode ||| decode	count=2
module	in ||| string	count=2
function_arg	absolute path of ||| abspath path	count=1
arg	break ||| duration	count=1
module	used by the handler ||| logging handler	count=1
arg	the data along ||| a	count=1
function	data ||| nanpercentile	count=1
module	string in ||| ssl	count=1
arg	seconds since the ||| seconds	count=2
arg	[arg_1] ? true ||| gettext test [arg_1] [arg_2]	count=4
arg	part of the elements ||| val	count=1
function	returns a ||| get archive	count=1
module	of the database in ||| connection	count=1
arg	of [arg_2] ||| [arg_1] [arg_2]	count=2
arg	expression: condition ? ||| condition	count=1
function	returns the numeric value ||| numeric	count=1
arg	minimum along an axis ||| a axis	count=1
function	of the source code ||| getsource	count=1
function	recursively delete ||| rmtree	count=1
function_arg	[function_1] to y ||| turtle [function_1] [arg_2]	count=3
module	if the operand ||| decimal context	count=1
module	recursively delete ||| shutil	count=1
function	get the ||| get	count=3
arg	the database file filename ||| file flag	count=1
function	transpose of the ||| get t	count=1
arg	a formatted year ||| theyear width	count=1
module	from the ||| random	count=1
arg	specified suffix ||| suffix start	count=2
function_arg	path [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] targetpath according ||| [function_1] tarinfo [arg_2]	count=4
arg	words in list with ||| words	count=1
arg	a file using the ||| name mode buffering	count=1
module	hash object ||| hashlib	count=4
module	fft ||| fft	count=3
arg	sub in ||| sub	count=3
function	the main ||| main	count=1
arg	in seconds since ||| seconds	count=1
function	change the getter on ||| getter	count=1
arg	each value in array ||| weights	count=1
function_arg	of this [arg_2] ||| [function_1] series [arg_2]	count=1
module	operand ||| decimal context	count=11
module	lock object ||| thread	count=1
function	line ||| line	count=1
function	receive byte data into ||| into	count=1
arg	begindates and enddates ||| begindates	count=1
function	source ||| source	count=1
module	the current turtle ||| turtle	count=1
arg	string returning ||| string	count=1
arg	per period ||| pmt pv fv	count=1
function	execute a module ||| module	count=1
function	the owner ||| chown	count=1
arg	a day ||| day weekday	count=1
arg	delete a directory tree ||| path	count=1
function	indication of the class ||| class	count=1
module	chebyshev series from ||| numpy polynomial chebyshev	count=2
module	a new array ||| numpy	count=1
function_arg	[function_1] file descriptor ||| [arg_2] [function_1]	count=3
function	a list ||| get archive	count=1
function	accumulate the ||| accumulate	count=1
function	returns a path ||| path	count=1
arg	[arg_1] bytes b[start:end] ||| [arg_1] [arg_2]	count=1
arg	[arg_1] function ||| [arg_2] [arg_1]	count=2
module	specified axis while ||| numpy	count=1
module	returns the same decimal ||| decimal	count=1
arg	[arg_1] and type2 ||| [arg_2] [arg_1]	count=4
module	name as a table ||| htmlcalendar	count=1
function	to a linear matrix ||| lstsq	count=1
arg	shape to turtlescreen 's ||| name shape	count=1
arg	key and ||| key	count=1
arg	a stream ||| stream indent width	count=1
function_arg	[function_1] [arg_2] ||| [function_1] from string [arg_2]	count=3
function_arg	test unless [arg_2] ||| [function_1] [arg_2]	count=2
function	wrap ||| wrap	count=1
arg	parts ||| infile outfile decode_base64	count=1
function	the minimum value ||| value	count=1
function	creates a list-tree representation ||| st2list	count=1
function	[function_1] startup_hook ||| [function_2] [function_1]	count=1
module	the screen to ||| turtle	count=1
function	the class to be ||| class	count=1
function	is alive ||| is alive	count=2
arg	[arg_1] object ||| pprint pformat [arg_2] [arg_1]	count=3
arg	prefix ||| a prefix	count=1
module	reset all turtles ||| turtle	count=1
module	the eigenvalues ||| linalg	count=1
function_arg	write [arg_2] ||| [function_1] to resource [arg_2]	count=3
arg	a break on ||| duration	count=1
function	returns a true ||| true	count=1
arg	tarinfo object [arg_2] ||| [arg_2] [arg_1]	count=4
module	the dump of ||| sqlite3 connection	count=1
arg	flag is false system ||| flag	count=1
arg	or y ||| y	count=1
function_arg	[function_1] of b ||| [arg_2] [function_1]	count=3
module	return ||| frozenset	count=2
module	and ||| unicode	count=1
arg	src dst ||| src dst	count=4
module	return the ||| frozenset	count=2
function	has a [function_2] ||| [function_1] [function_2]	count=1
function	the intersection ||| intersection	count=2
function	pre_input_hook ||| pre input hook	count=1
arg	given radius ||| radius extent	count=2
function	lines in the line ||| lines	count=1
arg	format a python object ||| object indent	count=1
function	[function] given ||| [function]	count=1
module	assigned to ||| unicodedata	count=7
function_arg	[function_1] s characters ||| [arg_2] [function_1]	count=1
module	cursor ||| sqlite3 cursor	count=1
function	return the shape of ||| shape	count=1
function	converted to lowercase ||| lower	count=1
arg	a c instance ||| c type	count=1
function	stopped ||| wifstopped	count=1
arg	specified suffix ||| suffix start end	count=2
arg	values [arg_2] ||| [arg_1] [arg_2]	count=1
module	reset all ||| turtle	count=1
arg	[arg_1] to file ||| [arg_1] limit [arg_2]	count=3
module	from the current ||| random random	count=1
module	set the ||| turtle	count=2
module	write all [module] as ||| [module]	count=1
arg	values ||| step	count=1
module	copy of ||| turtle	count=1
module	chebyshev series on ||| numpy polynomial chebyshev	count=3
function	treating not a numbers ||| nanprod	count=1
function	+= ||| iconcat	count=1
module	this logger ||| logging logger	count=2
function_arg	[function_1] of d ||| [arg_2] [function_1]	count=2
function	of contents ||| printdir	count=1
arg	suffix false ||| suffix start end	count=2
function	[function_1] history ||| [function_2] [function_1]	count=6
function_arg	the hanning [arg_2] ||| [arg_2] [function_1]	count=1
module	from the resultset ||| sqlite3 cursor	count=1
function	the roots of a ||| chebroots	count=1
function	create ||| allocate	count=1
module	for mode ||| zipfile zipfile	count=1
arg	args ||| args env	count=1
function	an archive [function_2] ||| [function_2] [function_1]	count=1
function	change the access permissions ||| chmod	count=1
module	depth of the python ||| sys	count=1
module	distribution ||| numpy random	count=23
module	recursively delete a directory ||| shutil	count=1
arg	to 1 ||| cmode	count=1
arg	with callback ||| arg	count=1
module	resultset ||| cursor	count=1
module	laguerre series on the ||| polynomial laguerre	count=1
function	list of aliases and ||| gethostbyname ex	count=1
module	slice ||| slice	count=1
function	access permissions of ||| lchmod	count=1
arg	time tuple ||| tuple	count=1
arg	axis while ignoring ||| axis	count=1
function	logger -- if ||| logger	count=1
function	open or ||| open	count=1
module	stack trace and the ||| traceback	count=1
function	a cursor for the ||| cursor	count=1
function_arg	parse the [arg_2] ||| [function_1] [arg_2]	count=1
module	hermite series whose graph ||| polynomial hermite	count=1
function	abort the interpreter immediately ||| abort	count=1
arg	direction towards b ||| b	count=1
arg	string with base64 ||| s binary	count=1
function	normal distribution ||| normal	count=2
function	import [function_2] ||| [function_2] [function_1]	count=1
module	the maximum [module] an array ||| [module]	count=1
module	as the context ||| context	count=1
function	the current action for ||| getsignal	count=1
module	hermitee series on ||| polynomial hermite_e	count=2
arg	string ||| s	count=5
arg	principal ||| when	count=1
module	a masked array ||| numpy ma	count=5
arg	occurrences of [arg_2] ||| [arg_2] new [arg_1]	count=3
arg	of substring [arg_2] ||| [arg_2] [arg_1]	count=8
module	units ||| turtle	count=1
function	set the orientation ||| seth	count=1
function_arg	extension [arg_2] ||| [function_1] [arg_2]	count=2
module	[module_1] series on ||| [module_2] [module_1] hermgrid2d	count=1
function	* ||| star	count=1
arg	the specified username is ||| username	count=1
arg	globals [arg_2] ||| [arg_2] [arg_1]	count=4
module	of hermite series to ||| polynomial hermite	count=1
arg	file using the file ||| mode buffering	count=1
function_arg	[function_1] the string ||| [arg_2] [function_1]	count=1
function	and the exception information ||| exception	count=1
arg	[arg_1] key and ||| [arg_2] [arg_1]	count=2
function	line buffer ||| line buffer	count=2
arg	linear ||| a b	count=1
module	a new array with ||| numpy	count=1
function	[function_1] plist ||| [function_1] [function_2]	count=1
function	's position to ||| towards	count=1
arg	if path is none ||| path prefix onerror	count=1
module	occurrences ||| numpy core defchararray	count=1
function	canonical combining class ||| combining	count=1
function_arg	bit-wise or [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	^= [arg_2] ||| [arg_2] [function_1]	count=1
module	an ||| connection	count=1
module	for archiving and ||| shutil	count=1
module	simplify ||| chararray	count=1
function	to return ||| get	count=1
function	given degrees ||| lagvander3d	count=1
arg	severity [arg] and below ||| [arg]	count=1
module	hermite [module_2] ||| [module_1] [module_2]	count=39
arg	high ||| high size dtype	count=1
arg	dimensions of an array ||| a	count=1
arg	array with ||| a	count=1
function	the integer power ||| power	count=1
arg	a directory tree ||| ignore_errors	count=1
function_arg	subtract [arg_2] ||| [function_1] [arg_2]	count=4
function	4-char creator ||| creator	count=2
function	the line [function_2] ||| [function_1] [function_2]	count=1
module	the series ||| polynomial	count=2
module	get ||| stringo	count=1
function	a tuple of index ||| index	count=1
function	[function_1] division of ||| [function_1] [function_2]	count=3
arg	tangent [arg] ||| [arg]	count=2
arg	linear ||| a	count=1
function	of the line buffer ||| line buffer	count=1
function_arg	into [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	is a ||| is normal a	count=1
arg	times b ||| b	count=1
arg	the condition ||| condition	count=2
module	an element of an ||| numpy core defchararray	count=1
function	[function_1] at ||| [function_1] [function_2]	count=3
module	operand [module_2] ||| [module_1] [module_2]	count=4
function	of given degrees ||| lagvander3d	count=1
function_arg	read a [arg_2] ||| [arg_2] [function_1]	count=1
arg	specified shape ||| a new_shape	count=1
function	at the top ||| getblock	count=1
function_arg	[function_1] from the ||| [function_1] [arg_2]	count=1
arg	a formatted year as ||| theyear width	count=1
module	current default string ||| sys	count=1
function	of aliases ||| gethostbyaddr	count=1
function	logger with this ||| logger	count=1
arg	a virtual subclass of ||| cls subclass	count=1
module	into ||| urlparse	count=1
arg	tb ||| etype value tb	count=1
arg	the size of object ||| object	count=1
arg	of the two ||| a b	count=2
arg	b ||| b	count=45
arg	[arg] or ||| fp [arg]	count=1
arg	the range [a b ||| b	count=1
arg	the object is a ||| object	count=5
module	matrix equation ||| numpy linalg	count=2
module	factory function ||| threading	count=1
arg	matrix ||| b	count=1
function	owner of ||| chown	count=1
function	has a [function_2] ||| [function_2] [function_1]	count=1
function_arg	a 16-bit [arg_2] ||| [function_1] [arg_2]	count=4
arg	delete a directory tree ||| ignore_errors	count=1
module	pathname ||| macpath	count=2
module	linear matrix ||| numpy	count=1
arg	shape to ||| shape	count=2
function	a float ||| float	count=1
function	return a tuple ||| get	count=2
function_arg	[function_1] to an ||| [function_1] [arg_2]	count=4
module	bytes in the array ||| numpy ma masked_array	count=1
function_arg	[function_1] arrays element-wise ||| [arg_2] [function_1]	count=8
module	file and for mode ||| zipfile	count=2
function	count the ||| count	count=1
arg	true if d ||| d	count=1
arg	a buffer ||| buffer	count=1
module	bool [module] where true ||| [module]	count=2
arg	from tb to ||| tb	count=1
arg	[arg_1] x ||| [arg_2] [arg_1]	count=4
arg	prefix otherwise false ||| a prefix	count=1
arg	delete a directory tree ||| ignore_errors onerror	count=1
module	process with ||| subprocess	count=2
function	valid days between ||| busday count	count=1
function_arg	debugging [arg_2] ||| [function_1] [arg_2]	count=1
arg	components ||| scheme allow_fragments	count=1
function	the last access time ||| getatime	count=2
function	fire after ||| setitimer	count=1
arg	range [a b ||| a b	count=1
module	file ||| zipfile	count=2
arg	registered for encoding ||| encoding	count=2
function_arg	class to [arg_2] ||| [arg_2] [function_1]	count=2
function	returns [function] ||| recv [function]	count=1
arg	unicode character unichr as ||| unichr	count=8
arg	numpy [arg_2] ||| [arg_2] [arg_1]	count=2
arg	of a file descriptor ||| fd	count=1
arg	of variables ||| locals	count=1
function_arg	[function_1] specified axis ||| [function_1] [arg_2]	count=3
module	masked array to ||| numpy ma	count=1
arg	[arg_1] [arg_2] plural forms ||| gettext test [arg_1] [arg_2]	count=7
function_arg	get a [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] order ||| [function_1] [arg_2]	count=7
function	east [function_2] ||| [function_2] [function_1]	count=2
arg	specified shape ||| new_shape	count=1
module	on ||| turtle	count=1
function	number closest to a ||| next toward	count=1
module	set with ||| set	count=5
function	create a new ||| create	count=1
function_arg	is a ||| is nan a	count=1
function	compute the roots ||| hermroots	count=1
module	simplify the interaction of ||| numpy	count=1
function	current [function_2] ||| [function_2] [function_1]	count=1
function	the median along ||| median	count=1
function	all items ||| assert array max ulp	count=1
function	a hexadecimal representation of ||| hex	count=1
function	to determine the libc ||| libc	count=1
arg	extract all [arg] from ||| [arg]	count=1
arg	sequence and b ||| b	count=2
function	start [function_2] ||| [function_2] [function_1]	count=4
module	polynomial of ||| numpy polynomial hermite_e hermitee	count=1
arg	gid ||| gid	count=3
function_arg	owner of [arg_2] ||| [function_1] tarinfo [arg_2]	count=2
module	in the datasource directory ||| datasource	count=1
module	exists ||| numpy datasource	count=1
function	kill ||| killpg	count=1
function_arg	converter [arg_2] ||| [function_1] [arg_2]	count=2
arg	of a line ||| line	count=1
arg	fork etc ||| dst createpath copydates forcetype	count=1
function	remove ||| rmdir	count=1
arg	number ||| number	count=2
function	print exception up ||| print exception	count=2
function_arg	unless the [arg_2] ||| [arg_2] [function_1]	count=2
module	whitespace ||| pydoc	count=1
function	basic [function] for the ||| basic [function]	count=1
arg	exponent is the same ||| context	count=1
function	test if ||| if	count=1
arg	the trailing characters removed ||| chars	count=1
function	the python implementation branch ||| python branch	count=1
arg	shape ||| name shape	count=1
function	print [function_2] ||| [function_1] [function_2]	count=4
arg	s [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] object [arg_2]	count=6
module	to simplify ||| numpy chararray	count=1
function	digits ||| logical	count=2
arg	x [arg_2] ||| condition [arg_1] [arg_2]	count=3
function_arg	duplicate [arg_2] ||| [function_1] [arg_2]	count=1
function	to the ||| plist to	count=1
arg	a buffer [arg_2] ||| [arg_2] [arg_1]	count=2
module	d ||| dict	count=2
function	supported formats for archiving ||| formats	count=1
module	matrix ||| polynomial laguerre	count=2
arg	the specified suffix ||| suffix start end	count=2
function_arg	and eigenvectors [arg_2] ||| [function_1] [arg_2]	count=3
arg	axes for ||| b axes	count=1
function	hexadecimal representation of ||| hex	count=2
module	that contain masked ||| ma	count=2
module	array ||| ma	count=1
arg	subclass of the second ||| arg1 arg2	count=1
function	recursively delete a ||| rmtree	count=1
arg	string returning a ||| string	count=1
arg	binary data ||| data	count=1
module	laguerre [module_2] ||| [module_2] [module_1] laggrid2d	count=5
arg	the ceiling [arg] as ||| [arg]	count=2
arg	database file filename ||| file flag	count=1
function	a copy ||| translate	count=1
arg	in a ||| a b	count=1
function	the standard ||| standard	count=3
function	roll back the ||| rollback	count=1
function	day ||| weekday	count=1
module	write ||| zipfile	count=2
function	format 123 ||| inet aton	count=2
function_arg	[function_1] [arg_2] a ||| [function_1] [arg_2]	count=8
module	returns iterator ||| sqlite3	count=1
module	iff ||| difflib	count=1
arg	to 2*pi complement ||| p discont axis	count=1
function	3-d ||| chebgrid3d	count=1
module	as a table of ||| htmlcalendar	count=1
function	fill the shape ||| end fill	count=1
function	callable a ||| is callable	count=1
module	random samples from a ||| numpy random	count=2
module	series to ||| polynomial hermite_e	count=1
arg	print a month ||| themonth	count=1
function	string at ||| string at	count=2
function	bit-wise [function_2] ||| [function_1] [function_2]	count=8
function	a hash value for ||| hash	count=1
function	[function_1] exception ||| [function_2] [function_1]	count=1
function	[function_1] a stack ||| [function_1] [function_2]	count=1
module	a new ||| thread	count=1
module	array flags writeable ||| numpy core defchararray chararray	count=1
arg	series to series of ||| series	count=1
arg	tarinfo object ||| tarinfo	count=1
arg	matrix of ||| x	count=1
module	value assigned to ||| unicodedata	count=2
arg	the file object f ||| f	count=1
arg	return a ||| a	count=1
arg	of an ||| a	count=2
module	and for ||| zipfile	count=2
arg	condition [arg_2] ||| [arg_1] [arg_2]	count=2
function	mask [function_2] ||| [function_2] [function_1]	count=2
module	canvas and ||| turtle	count=1
function	the highest index ||| rfind	count=1
function	mask of ||| mask	count=1
module	non-masked ||| numpy ma maskedarray	count=1
arg	in a [arg_2] ||| [arg_1] decorator [arg_2]	count=3
arg	an array ||| shrink dtype	count=1
arg	sub in the range ||| sub	count=1
function	the history file ||| history	count=1
arg	prefix ||| a prefix start end	count=1
module	of the turtleshape onto ||| turtle	count=1
arg	a month ||| month	count=2
function_arg	[function_1] a file ||| [arg_2] [function_1]	count=3
arg	performs unbuffered [arg] place ||| [arg]	count=1
arg	iterator ||| iterator	count=1
arg	the cosine [arg] ||| [arg]	count=1
function	determine the libc ||| libc ver	count=1
function	to mouse-click ||| onscreenclick	count=1
module	evaluate a legendre series ||| numpy polynomial legendre	count=1
function	fill the array ||| fill	count=2
arg	an axis ||| axis	count=1
module	polynomial [module_2] ||| [module_1] [module_2]	count=3
module	year as a table ||| htmlcalendar	count=1
module	operand to its ||| decimal context	count=2
module	of sets ||| frozenset	count=1
module	specified by ||| zipimport zipimporter	count=2
rep	[module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=229
module	theme ||| ttk style	count=1
module	masked array to a ||| ma masked_array	count=1
module	channel ||| sslsocket	count=1
module	interaction of the ||| chararray	count=1
function_arg	[function_1] sql ||| [arg_2] [function_1]	count=4
arg	the ||| a	count=6
function	backwards until it lies ||| rollaxis	count=1
module	of the [module] to the ||| [module]	count=1
arg	[arg_1] found ||| [arg_1] [arg_2]	count=6
function_arg	occurrences of [arg_2] ||| [function_1] a [arg_2]	count=4
function	its elements centered ||| center	count=1
module	as ||| frozenset	count=2
arg	while ||| a	count=1
arg	the tarinfo [arg_2] ||| [arg_1] [arg_2]	count=3
function	part ||| unmimify part	count=2
module	process ||| os	count=14
arg	exponent is the ||| context	count=1
function_arg	a normal [arg_2] ||| [function_1] [arg_2]	count=4
arg	in string ||| string	count=2
arg	type2 ||| type2	count=1
module	for each element ||| core defchararray	count=1
arg	position ||| arg move align font	count=1
function	entries in the ||| listdir	count=1
function	indices for the upper-triangle ||| triu indices from	count=1
module	openssl prng ||| _ssl	count=1
function	of default root window ||| default root	count=1
module	to its ||| decimal	count=1
function	elements [function] ||| [function]	count=1
module	value assigned ||| unicodedata	count=1
function	mask of the given ||| mask	count=1
arg	the two operands numerically ||| a b	count=1
arg	information about a frame ||| frame	count=1
function	return the symmetric ||| symmetric	count=3
arg	file name' ||| name arcname recursive exclude filter	count=1
arg	of [arg] ||| [arg]	count=8
function	=< ||| less equal	count=1
function_arg	[function_1] object to ||| [function_1] [arg_2]	count=1
module	square ||| numpy linalg	count=1
arg	text returning a ||| text	count=2
arg	the database file filename ||| file	count=1
module	table of ||| htmlcalendar	count=1
function_arg	divides [arg_2] ||| [arg_2] [function_1]	count=3
arg	and locals ||| locals	count=2
function	of ||| get archive	count=1
module	of an array to ||| numpy	count=1
arg	an [arg_2] ||| [arg_1] [arg_2]	count=5
function	the magic number ||| magic	count=1
module	an arbitrary ||| numpy	count=1
function	indices to [function_2] ||| [function_2] [function_1]	count=2
arg	a assuming a ||| lo hi	count=4
module	a year 's calendar ||| calendar	count=1
module	interpreter ||| sys	count=1
arg	that sub is contained ||| sub	count=4
arg	specified ||| default	count=1
function	drawn ||| end	count=1
function	[function_1] buffer ||| [function_2] [function_1]	count=5
module	time ||| datetime	count=1
function	to return ||| get close	count=1
function	lines ||| lines	count=1
function	given family ||| inet ntop	count=1
arg	high ||| high	count=2
module	set array flags writeable ||| defchararray chararray	count=1
function	of environment ||| environ	count=1
arg	[arg_1] file *database* ||| [arg_1] [arg_2]	count=1
function	accumulate the result of ||| accumulate	count=1
arg	if flag ||| flag	count=1
function	[function_1] integer power ||| [function_2] [function_1]	count=1
function	parse a [function_2] ||| [function_2] [function_1]	count=1
arg	array with the specified ||| a	count=1
module	to the dump of ||| connection	count=1
function_arg	[function_1] [arg_2] that ||| [function_1] [arg_2]	count=4
module	the file and for ||| zipfile	count=2
function	set the filling value ||| set fill value	count=1
module	masked array ||| numpy ma maskedarray	count=1
arg	or dotted [arg] importing as ||| [arg]	count=1
function	of ||| archive	count=1
function	the filling [function_2] ||| [function_2] [function_1]	count=4
arg	the specified suffix false ||| suffix	count=2
module	from the current state ||| random random	count=1
module	of the array ||| numpy chararray	count=3
arg	in array ||| weights	count=1
function_arg	call func ||| call tracing func	count=1
arg	to a ||| a b	count=1
arg	match pat ||| pat	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] extracted_list file	count=7
arg	[arg_1] assuming a ||| [arg_2] [arg_1]	count=10
arg	the [arg] ||| fd [arg]	count=3
function	input with invalid data ||| invalid	count=1
function_arg	gives a [arg_2] ||| [arg_2] [function_1]	count=1
module	the dump ||| sqlite3 connection	count=1
arg	[arg_1] a ||| [arg_1] [arg_2]	count=1
function	numeric type false otherwise ||| number type	count=1
arg	version information from the ||| version	count=1
arg	sep in b and ||| sep	count=1
function_arg	[function_1] n ||| [function_1] [arg_2]	count=4
arg	unique temporary file ||| suffix prefix dir text	count=1
arg	host [arg_2] ||| [arg_1] [arg_2]	count=2
function	difference of two or ||| difference	count=1
module	set ||| turtle	count=4
arg	break on [arg_2] ||| [arg_2] [arg_1]	count=2
module	or ||| turtle	count=1
arg	recursively delete a ||| ignore_errors onerror	count=1
arg	page ||| css encoding	count=1
arg	[arg_1] assuming ||| [arg_1] x [arg_2]	count=2
arg	given number of seconds ||| seconds	count=2
module	the number of ||| numpy	count=1
module	of two or ||| frozenset	count=1
module	create a kqueue ||| kqueue	count=1
module	to ||| linalg	count=1
arg	slice of length size ||| size	count=1
module	if it doesn't yet ||| manager	count=1
function	[function_1] type ||| [function_1] completion [function_2]	count=1
function	[function_1] enabled ||| [function_1] [function_2]	count=4
function	matches ||| close matches	count=1
function	copy source location lineno ||| copy location	count=1
function	the extension ||| splitext	count=2
function_arg	[function_1] substring ||| [function_1] s sub [arg_2]	count=6
function	number ||| base repr	count=1
function_arg	round a [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	register [arg_2] ||| [arg_2] [function_1]	count=2
arg	y ||| y	count=26
function	return the filename ||| filename	count=1
function	to the integer power ||| power	count=1
module	or more sets as ||| frozenset	count=1
module	number of ||| numpy	count=1
function	fillcolor ||| fillcolor	count=1
module	the masked ||| ma	count=1
function_arg	>>= [arg_2] ||| [arg_2] [function_1]	count=1
arg	the file executable ||| executable lib	count=1
function	return the indices ||| indices	count=2
arg	parse a url ||| url scheme	count=2
module	laguerre series by ||| numpy polynomial laguerre	count=4
arg	sequence of numbers ||| sequence	count=1
function_arg	from the [arg_2] ||| [function_1] [arg_2]	count=3
module	for mode w and ||| zipfile zipfile	count=1
arg	up to limit stack ||| limit	count=1
arg	return an ||| a	count=4
function_arg	[function_1] mime ||| mimify [function_1] ifile ofile [arg_2]	count=2
module	thread 's activity ||| threading thread	count=1
function	return the minimum value ||| value	count=1
function	header as a ||| header	count=1
module	this [module_2] ||| [module_1] [module_2]	count=2
module	tarinfo object ||| tarfile tarfile	count=1
arg	characters removed ||| chars	count=2
function	last access time of ||| getatime	count=2
arg	part ||| val	count=1
function_arg	[function_1] [arg_2] ||| [function_1] normal [arg_2]	count=1
function	common to the ||| common	count=1
module	element of an array ||| numpy core defchararray chararray	count=1
arg	a single line ||| line	count=1
function	last access time ||| getatime	count=2
arg	y z ||| y	count=5
function	the absolute values ||| fabs	count=1
function	a unicode ||| uts	count=1
function	a logger ||| get logger	count=1
arg	month as a ||| themonth	count=1
function	tree ||| rmtree	count=1
module	of the ||| connection	count=1
arg	in a uint8 array ||| myarray axis	count=1
arg	titlecased version [arg] ||| [arg]	count=1
arg	percent ||| percent	count=1
arg	start of the string ||| string	count=1
arg	local reduce with ||| dtype	count=1
module	doctest docstring in ||| doctest	count=1
module	file on disk ||| memmap	count=1
module	of ||| laguerre	count=1
arg	the given file ||| file protocol	count=1
module	zipinfo ||| zipfile zipfile	count=1
arg	globals [arg_2] ||| [arg_1] [arg_2]	count=4
module	random samples ||| random	count=2
module	uuencode/uudecode ||| uu	count=1
arg	other operand ||| other context	count=2
function_arg	power of [arg_2] ||| [function_1] [arg_2]	count=3
arg	text ||| text width	count=2
function	sha256 ||| sha256	count=2
arg	text returning ||| text	count=2
function_arg	part [arg_2] ||| [arg_2] [function_1]	count=3
function	an indication [function_2] ||| [function_2] [function_1]	count=2
function	contains a complete ||| complete	count=1
function	commit the current ||| commit	count=1
arg	of up to limit ||| limit	count=2
module	series whose ||| numpy polynomial	count=3
arg	[arg] with its ||| [arg]	count=1
arg	for year ||| year	count=1
function	compute ||| nanpercentile	count=1
function_arg	open a [arg_2] ||| [arg_2] [function_1]	count=7
function	to ||| plist to	count=1
module	array that contain masked ||| numpy ma	count=2
module	simplify the interaction ||| numpy chararray	count=1
module	drawn after the ||| turtle	count=1
function	sequences that generated ||| restore	count=1
arg	item x ||| x	count=7
arg	[arg] i ||| [arg]	count=1
arg	integer from host to ||| integer	count=1
function_arg	the pre_input_hook [arg_2] ||| [function_1] [arg_2]	count=1
arg	specified axis while ignoring ||| a axis	count=1
function	directories ||| cmpfiles	count=1
arg	[arg_1] assuming ||| [arg_1] [arg_2]	count=8
function	string [function_2] ||| [function_2] [function_1]	count=1
arg	specified suffix false otherwise ||| suffix	count=2
module	in s and return ||| unicode	count=1
module	corresponding to the masked ||| ma	count=1
function	the filling ||| fill	count=2
module	random number ||| random random	count=1
module	truncate ||| hermite hermite	count=1
module	a hermite [module_2] ||| [module_1] [module_2]	count=1
arg	traceback on ||| traceback	count=1
function	axis while ignoring nan ||| nanpercentile	count=1
function	evaluate an ||| hermval	count=1
module	series to another ||| numpy polynomial	count=3
function	a keyboardinterrupt in ||| interrupt	count=1
module	doesn't yet ||| manager	count=1
module	a scalar ||| numpy core defchararray chararray	count=1
module	along a given ||| numpy ma	count=1
function_arg	hanning [arg_2] ||| [arg_2] [function_1]	count=1
arg	desired ||| actual desired	count=1
arg	of line ||| line	count=1
function	length ||| length	count=1
function	vertices of [function_2] ||| [function_2] [function_1]	count=1
function	accumulate the result ||| accumulate	count=1
arg	from a ||| p	count=1
function	week [function] the date ||| [function]	count=1
function_arg	a 32-bit [arg_2] ||| [function_1] [arg_2]	count=1
arg	to a stream ||| stream indent width depth	count=1
function_arg	[function_1] one ||| [function_1] [arg_2]	count=14
module	of the legendre ||| polynomial legendre	count=1
function	represented by ||| isoweekday	count=1
arg	name for ||| name	count=1
arg	file filename ||| file flag	count=1
arg	present value ||| rate values	count=1
function_arg	complete [arg_2] ||| [arg_2] [function_1]	count=1
arg	the access and modified ||| path atime mtime	count=1
function	return the union ||| union	count=1
function	the last modification time ||| getmtime	count=2
arg	to the given degree ||| deg	count=3
arg	an array without changing ||| a newshape order	count=1
function	[function_1] a converter ||| [function_2] [function_1]	count=1
function_arg	- [arg_2] ||| [function_1] [arg_2]	count=1
function	hexadecimal representation of a ||| hex	count=1
function	a right-justified version ||| rjust	count=1
module	method [module] use for ||| [module]	count=1
arg	indices of the ||| a	count=1
function	while ignoring nan values ||| nanpercentile	count=1
arg	encoding ||| encoding errors	count=2
function	enable or disable callback ||| enable callback	count=1
function	top ||| getblock	count=1
function	have ||| same quantum	count=1
module	all turtles ||| turtle	count=1
function_arg	[function_1] string by ||| [arg_2] [function_1]	count=1
arg	a fill value ||| fill_value	count=1
module	eigenvalues ||| linalg	count=1
arg	to an [arg_2] ||| [arg_1] [arg_2]	count=1
module	array with the same ||| chararray	count=1
arg	return a day as ||| day	count=1
module	hermite ||| hermite	count=8
arg	assuming a is sorted ||| lo hi	count=4
module	returns an indication of ||| decimal	count=1
function_arg	absolute path ||| abspath path	count=1
function	list of environment ||| environ	count=1
arg	plus c ||| c	count=1
arg	in the specified axis ||| axis	count=1
function	[function_1] division of ||| [function_2] [function_1]	count=3
arg	[arg_1] wrapped ||| [arg_2] [arg_1]	count=4
arg	a virtual subclass ||| cls subclass	count=1
arg	to limit stack trace ||| limit	count=1
function_arg	[function_1] a buffer ||| [function_1] [arg_2]	count=1
arg	[arg] at most ||| [arg]	count=1
arg	of an array ||| a	count=4
module	to ||| decimal decimal	count=1
function_arg	a code [arg_2] ||| [function_1] [arg_2]	count=1
function	flattened ||| a1	count=1
module	array with ||| chararray	count=2
function_arg	return the value for [function_1] [arg_2] ||| locale [function_1] [arg_2]	count=1
arg	sorted assuming ||| lo hi	count=3
function	reverse the order ||| reverse	count=1
module	two or ||| frozenset	count=1
arg	the path to which ||| path	count=1
function	the truncated value ||| trunc	count=1
arg	[arg_1] assuming a ||| [arg_1] x [arg_2]	count=2
function_arg	duplicate of [arg_2] ||| [function_1] [arg_2]	count=1
function	indices to access ||| indices	count=1
module	from the ||| random random	count=1
arg	object to [arg_2] ||| [arg_1] [arg_2]	count=1
module	given array ||| chararray	count=1
module	the [module] before the ||| [module]	count=1
module	draw samples from the ||| randomstate	count=2
arg	the ||| b	count=1
module	the matrix ||| numpy matrix	count=3
function	left ||| left	count=1
function	sign ||| copysign	count=1
arg	equal within ||| equal_nan	count=2
function	the indices to access ||| indices from	count=1
arg	that [arg] ||| [arg] version	count=1
function_arg	[function_1] a mime ||| [arg_2] [function_1]	count=3
arg	the [arg] pattern ||| [arg]	count=1
function	configuration ||| config	count=2
arg	[arg_1] minor ||| [arg_2] [arg_1]	count=3
function	tidy up any resources ||| close	count=1
arg	python object [arg_2] ||| [arg_1] [arg_2]	count=1
function	a file [function] ||| [function]	count=1
arg	array ||| a m n	count=1
module	return dict ||| trace	count=2
arg	delete a ||| ignore_errors onerror	count=1
arg	sub is contained ||| sub	count=4
arg	buffer [arg_2] ||| [arg_1] [arg_2]	count=2
module	a [module] of ||| [module]	count=2
arg	of length [arg_2] ||| [arg_2] [arg_1]	count=14
arg	bind ||| btn	count=3
function	formats a string in ||| string	count=1
module	a [module] from a ||| [module]	count=1
module	chebyshev [module_2] ||| [module_1] [module_2]	count=24
module	alphabetic [module] there ||| [module]	count=1
arg	array where two ||| a b	count=1
function	repeat elements of an ||| repeat	count=1
function	append a ||| append	count=1
arg	a break [arg_2] ||| [arg_2] [arg_1]	count=2
function	all items ||| array max	count=1
arg	at points x ||| x c tensor	count=4
function	after the ||| end	count=1
function	all elements ||| all	count=1
function	array where a ||| masked where	count=1
module	a table of ||| htmlcalendar	count=1
arg	return an [arg_2] ||| [arg_1] [arg_2]	count=4
arg	along ||| a	count=1
function	whether the lock is ||| lock	count=1
arg	a function ||| function shape dtype	count=1
module	hermitee ||| hermite_e	count=3
arg	to a number field ||| n digits format	count=1
function	elements in a dataset ||| nsmallest	count=1
module	dict ||| collections counter	count=1
arg	reduce with ||| dtype out	count=1
module	archiving and ||| shutil	count=1
arg	pseudo-vandermonde matrix of given ||| y z deg	count=1
arg	in list ||| a	count=5
module	data ||| numpy	count=1
arg	state ||| state	count=1
module	chebyshev series ||| numpy polynomial chebyshev	count=19
arg	1 ||| cmode	count=1
module	[module_1] to its ||| [module_2] [module_1]	count=1
arg	a file descriptor ||| fd	count=1
function	close the file ||| close	count=1
function	a right-justified in a ||| rjust	count=1
module	chebyshev [module_2] ||| [module_2] [module_1]	count=19
function_arg	[function_1] d ||| [arg_2] [function_1]	count=3
module	laguerre series from another ||| polynomial laguerre	count=1
arg	[arg] where substring ||| [arg]	count=1
arg	a unicode [arg] ||| s width [arg]	count=2
function	return the indices to ||| indices from	count=1
module	the current default string ||| sys	count=1
module	to a linear ||| linalg	count=1
arg	mime ||| is_mime	count=1
function	's activity ||| run	count=1
arg	to convert formats ||| formats	count=1
arg	count [arg] ||| [arg]	count=1
arg	by a data-type ||| dtype	count=1
function	indices [function_2] ||| [function_2] [function_1]	count=2
arg	directory ||| path	count=1
module	hermite series by x ||| numpy polynomial hermite	count=1
module	of ||| shutil	count=1
function_arg	with [arg_2] ||| [function_1] b old new [arg_2]	count=1
module	the same decimal ||| decimal	count=1
arg	the qth percentile ||| q	count=1
function_arg	convert [function_1] [arg_2] to quoted-printable ||| [function_1] [arg_2]	count=2
function	with the sign inverted ||| negate	count=1
function_arg	part of [arg_2] ||| mimify mimify [function_1] [arg_2]	count=4
module	new ||| frozenset	count=2
arg	principal plus interest ||| rate nper pv fv when	count=1
arg	flags ||| flags	count=2
arg	in direction towards b ||| b	count=1
function_arg	[function_1] specified record ||| [function_1] [arg_2]	count=1
module	file and for mode ||| zipfile zipfile	count=1
function_arg	npv net [arg_2] ||| [function_1] [arg_2]	count=3
function	is enabled [function_2] ||| [function_1] [function_2]	count=1
module	series to the ||| numpy polynomial hermite_e	count=1
function	main program ||| test	count=1
module	of an array ||| numpy ma masked_array	count=1
arg	path to ||| path	count=3
arg	start [arg_2] ||| [arg_2] [arg_1]	count=2
arg	in the given base ||| base	count=2
function	python implementation branch ||| python branch	count=2
arg	seconds since the epoch ||| seconds	count=2
arg	pseudo-vandermonde ||| x	count=1
function	a sequence ||| sequence	count=1
arg	titles description to ||| titles aligned byteorder	count=1
module	series ||| numpy polynomial hermite hermite	count=1
function	and type for ||| and type	count=4
module	kqueue ||| select kqueue	count=1
arg	to the scheme ||| scheme	count=1
function	arrays share memory ||| shares memory	count=2
function	[function] smallest size ||| min scalar [function]	count=1
arg	[arg_1] args in ||| [arg_2] [arg_1]	count=2
arg	by reps ||| reps	count=1
module	an arbitrary python ||| numpy	count=1
function	weibull ||| weibull	count=2
function	and ||| and	count=5
module	operand [module_2] ||| [module_2] [module_1]	count=4
arg	on the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
arg	a ||| c	count=8
module	archiving and unarchiving ||| shutil	count=1
function	the supplied environment ||| spawnle	count=1
function	return the hanning ||| hanning	count=1
module	set ||| set	count=10
arg	to limit stack trace ||| limit file	count=1
arg	to the given base ||| base	count=1
function	to a symbolic link ||| islink	count=1
function_arg	return absolute path ||| abspath path	count=1
arg	index [arg] where substring ||| [arg]	count=1
arg	object tarinfo' to ||| fileobj	count=1
function	count ||| count	count=1
function	creates a new ||| create	count=1
function	is blank or contains ||| is_line_junk	count=1
arg	command returning a ||| command mode	count=1
arg	cartesian [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=5
rep	compute the [function_arg_2] ||| [module_1] [function_arg_2]	count=6
module	sigterm ||| subprocess popen	count=1
arg	bind fun ||| fun btn add	count=6
arg	executable [arg] ||| [arg]	count=1
module	maximum [module] an ||| [module]	count=1
arg	convert an ip ||| ip	count=1
function	fill the shape drawn ||| end fill	count=1
arg	s characters ||| s	count=1
arg	a single '#' ||| pat	count=1
function	the hyperbolic arc tangent ||| atanh	count=1
module	power ||| decimal context	count=1
arg	which is ||| array1 array2	count=1
function_arg	right [arg_2] ||| [function_1] [arg_2]	count=1
module	ending ||| zipfile zipfile	count=1
module	of an abc ||| abc abcmeta	count=1
arg	partitioned copy of an ||| a kth axis kind order	count=1
arg	gaussian distribution ||| loc scale	count=2
function	the variance along ||| nanvar	count=1
function	environment variables used by ||| environ usage	count=1
arg	[arg_1] step ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] of path ||| [arg_2] [function_1]	count=2
function_arg	[function_1] [arg_2] width ||| [function_1] [arg_2]	count=6
arg	[arg_1] key ||| [arg_2] [arg_1]	count=2
arg	ignoring nan values ||| a	count=1
module	return ||| numpy	count=17
function_arg	[function_1] numpy object ||| [arg_2] [function_1]	count=1
arg	convert formats ||| formats	count=1
function	function to ||| string function	count=1
arg	of a number in ||| number	count=1
arg	least-squares solution to a ||| rcond	count=1
arg	a month ||| themonth	count=2
module	data masked and replaced ||| ma	count=1
arg	in b ||| b	count=1
function	[function_1] converter ||| [function_2] [function_1]	count=1
arg	[arg_1] in list ||| [arg_2] [arg_1]	count=34
arg	sub is ||| sub	count=4
function	history ||| history	count=5
arg	return s ||| s	count=2
arg	and input values ||| values	count=1
module	two sets ||| sets baseset	count=1
module	series from another ||| numpy polynomial	count=4
function	the data [function] ||| min scalar [function]	count=2
arg	return the least-squares solution ||| b rcond	count=1
arg	found ||| start end	count=3
module	string in local time ||| time	count=1
module	equation ||| numpy	count=1
function	handshake ||| handshake	count=1
arg	compute ||| a	count=1
function	the roots of ||| chebroots	count=1
module	and return its id ||| turtle	count=1
arg	a sockaddr ||| sockaddr flags	count=1
function	master/slave pair using os ||| openpty	count=1
function	a matrix ||| matrix	count=1
arg	a ||| ignore_errors	count=1
function	supported formats for ||| archive formats	count=1
function_arg	a converter with ||| converter typename	count=1
function	the east asian width ||| east asian width	count=1
module	used ||| logging	count=1
module	[module] a ||| [module]	count=29
function	|= ||| ior	count=1
arg	array ||| dtype order	count=2
arg	module file and return ||| module path	count=1
arg	day of enddates ||| enddates	count=1
module	the maximum [module] an ||| [module]	count=1
arg	subsection is not found ||| start end	count=2
function	top of ||| getblock	count=1
function_arg	[function_1] mime mail ||| mimify [function_1] [arg_2]	count=2
function	the 2-dimensional ||| rfft2	count=1
function	top of the given ||| getblock	count=1
arg	[arg] a ||| [arg]	count=5
function_arg	source code [arg_2] ||| [function_1] [arg_2]	count=1
module	write the ||| zipfile zipfile	count=1
arg	a unique temporary directory ||| prefix dir	count=1
function	a linear matrix ||| lstsq	count=1
function	identifying the python ||| python	count=2
arg	object tarinfo' to the ||| fileobj	count=1
function_arg	[function_1] number ||| [function_1] [arg_2]	count=1
function	suppress [function_2] ||| [function_2] [function_1]	count=1
module	of legendre series to ||| numpy polynomial legendre	count=1
arg	to convert formats names ||| formats names	count=1
module	the interaction of the ||| chararray	count=1
function	check that all items ||| assert array	count=1
function	of their names ||| getnames	count=1
arg	hash of a namespace ||| namespace	count=1
function_arg	sum of [arg_2] ||| [function_1] [arg_2]	count=3
arg	number of decimals ||| decimals out	count=1
module	single doctest docstring ||| doctest	count=1
arg	iterable ||| iterable	count=3
module	series to a polynomial ||| polynomial	count=4
function_arg	read [arg_2] ||| [arg_2] [function_1]	count=5
arg	shape to an ||| a newshape	count=1
module	this st object ||| parser st	count=1
function	is not ||| is not	count=1
module	2-d [module] on the ||| [module]	count=1
module	with the ||| chararray	count=1
function	supported formats for ||| formats	count=1
function	variance along the ||| nanvar	count=1
function	is ||| is_character_junk	count=1
arg	mean and [arg] ||| [arg]	count=1
function	matrix of given degrees ||| lagvander3d	count=1
function	a generator ||| isgenerator	count=1
function_arg	[function_1] but ||| [function_1] [arg_2]	count=3
arg	the condition [arg_2] ||| [arg_2] [arg_1]	count=2
function	vertices [function_2] ||| [function_1] [function_2]	count=1
function	a circle ||| circle	count=1
function	add ||| lagadd	count=1
function	[function_1] item ||| [function_1] [function_2]	count=1
module	array with a scalar ||| defchararray chararray	count=1
module	screen to ||| turtle	count=1
arg	in a unicode [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=4
arg	new shape to an ||| a	count=1
module	series to ||| numpy polynomial hermite	count=1
function_arg	add [arg_2] ||| [function_1] [arg_2]	count=8
module	returns a list of ||| shutil	count=1
function	number of non-overlapping occurrences ||| count	count=1
module	the [module] raising systemexit ||| [module]	count=1
arg	x1 to ||| x1	count=1
module	string ||| string	count=13
module	the fft ||| fft	count=1
rep	set file [function_arg_2] ||| [module_1] [function_arg_2]	count=6
arg	s in style ||| style	count=1
arg	delete ||| ignore_errors	count=1
function_arg	configuration limit [arg_2] ||| [function_1] fd [arg_2]	count=3
function	handle errors ||| handle error	count=1
arg	move to ||| offset whence	count=1
function	the difference of two ||| difference	count=1
function_arg	different byte [arg_2] ||| [arg_2] [function_1]	count=2
arg	exponent [arg] as pair ||| [arg]	count=1
arg	from elements in choicelist ||| choicelist default	count=1
module	emit ||| logging streamhandler	count=1
function	file and ||| parseline	count=1
function	an sql text format ||| iterdump	count=1
function_arg	of this [arg_2] ||| [arg_2] [function_1]	count=1
function	items of ||| assert array max ulp	count=1
arg	pseudo-vandermonde matrix of given ||| x y z deg	count=1
module	tarinfo 's attributes ||| tarfile tarinfo	count=1
function_arg	== x2 element-wise ||| equal x1 x2	count=1
function	matrix to the ||| matrix	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=3
module	a legendre ||| legendre	count=2
function	resize the memory ||| resize	count=1
arg	other ||| other	count=4
arg	return rootobject as ||| rootobject	count=1
function	median along ||| median	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=821
function	into ||| into	count=2
arg	in ||| cls	count=1
function	object is a code ||| iscode	count=1
arg	connected by ||| duplex	count=1
function	mask and ||| mask	count=1
arg	direction towards b ||| a b	count=1
arg	gaussian ||| loc scale	count=2
function	matrix of given degrees ||| legvander2d	count=1
function	expand the shape ||| expand dims	count=1
function_arg	slices along [arg_2] ||| [arg_2] [function_1]	count=1
module	unarchiving ||| shutil	count=1
module	of handling ||| numpy	count=1
arg	test whether a path ||| path	count=2
function	the floor ||| floor	count=1
function_arg	== [arg_2] ||| [arg_2] [function_1]	count=2
arg	return the logarithm [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] corresponding to ||| [function_1] [arg_2]	count=3
arg	[arg_1] the environment ||| cgi parse fp [arg_2] [arg_1]	count=1
arg	execute file ||| mode file	count=2
function	default root window ||| default root	count=2
function_arg	or [arg_2] ||| [function_1] [arg_2]	count=1
module	of the masked array ||| numpy ma maskedarray	count=1
module	the resultset ||| cursor	count=1
module	an array ||| ma masked_array	count=1
arg	month ||| month	count=2
arg	with given ||| extent steps	count=2
arg	convert date_time ||| date_time	count=1
function	to all methods ||| decorate methods	count=1
function	create a ||| allocate	count=1
function_arg	decode a line ||| a2b base64 ascii	count=2
function	keyboardinterrupt in [function_2] ||| [function_1] [function_2]	count=1
arg	host and ||| host	count=2
module	's calendar ||| calendar	count=1
arg	negative if x<y zero [arg_1] [arg_2] positive if x>y ||| __builtin__ cmp [arg_1] [arg_2]	count=1
function_arg	[function_1] s ||| [function_1] [arg_2]	count=5
function	hexadecimal representation of an ||| hex	count=1
arg	an element ||| element	count=2
function	memory ||| memory	count=1
function	[function_1] test script ||| [function_1] [function_2]	count=1
arg	common ||| common	count=1
function	the default ||| get default	count=1
arg	module ||| module	count=1
arg	code to a message ||| code	count=1
function	generated ||| restore	count=1
module	turtleshape onto the canvas ||| turtle	count=1
module	directory tree ||| shutil	count=1
function_arg	convert [function_1] [arg_2] ||| mimify [function_1] [arg_2]	count=4
arg	a frame ||| frame	count=1
arg	a command returning a ||| command mode	count=1
arg	names titles description ||| names titles aligned byteorder	count=1
function	the top ||| getblock	count=1
module	mode w and a ||| zipfile zipfile	count=1
function	windows ||| samewindow	count=2
arg	source ||| source	count=2
module	from ||| randomstate	count=2
function	the message ||| message	count=1
function_arg	[function_1] a line ||| [arg_2] [function_1]	count=1
function	ctypes module ||| ctypes	count=1
arg	flags ||| path flags	count=1
function_arg	print up [arg_2] ||| [function_1] tb tb [arg_2]	count=3
arg	node ||| node	count=2
module	masked values ||| numpy ma	count=2
function	a copy [function_2] ||| [function_1] [function_2]	count=1
function	a duplicate of a ||| dup	count=1
module	dump of the ||| sqlite3	count=1
module	hermite series on ||| numpy polynomial hermite	count=1
function	registers a ||| register	count=1
arg	of the string s ||| s	count=2
function	[function_1] implementation revision ||| [function_1] [function_2]	count=4
function	module ||| module	count=6
arg	up to desired ||| actual desired	count=1
function	[function_1] command ||| [function_2] [function_1]	count=1
function	the sum of ||| sum	count=1
arg	a packed ip address ||| af packed_ip	count=1
function	a cursor for ||| cursor	count=1
function_arg	%= [arg_2] ||| [function_1] [arg_2]	count=1
module	and ||| shutil	count=1
function	right-justified in a ||| rjust	count=1
arg	string by the ||| string maxsplit	count=1
module	with sigkill ||| subprocess	count=1
function	from the ||| load	count=1
function_arg	either from [arg_2] ||| [function_1] condition [arg_2]	count=2
function	unpack the ||| unpack	count=1
function	compute the histogram ||| histogram	count=1
function	a timer object ||| timer	count=1
arg	tree ||| path	count=1
function	class of self ||| class	count=1
module	maximum depth of ||| sys	count=1
function	move a ||| move	count=1
arg	in [arg_2] ||| [arg_1] [arg_2]	count=1
function	invisible ||| hideturtle	count=1
module	turtles ||| turtle	count=1
function	length of [function_2] ||| [function_2] [function_1]	count=2
module	the given array ||| numpy ma masked_array	count=2
module	extended slice described by ||| slice	count=1
module	a scalar ||| core defchararray chararray	count=1
function	return a new ||| resize	count=1
arg	fill_value as a ||| fill_value	count=1
module	series on the ||| polynomial	count=8
arg	a [arg] specification ||| string [arg]	count=1
module	the ||| zipfile	count=4
function	return a copy ||| translate	count=1
arg	or if path ||| path prefix onerror	count=2
module	[module_1] random ||| [module_1] [module_2]	count=10
arg	in ||| a indices b	count=1
function	[function] function ||| [function]	count=3
module	set array ||| defchararray chararray	count=1
function	print the [function_2] ||| [function_2] [function_1]	count=4
module	the interaction ||| chararray	count=1
module	to the ||| sqlite3 connection	count=1
function_arg	elements centered [arg_2] ||| [arg_2] [function_1]	count=6
arg	is true ||| reason	count=2
function	items of ||| assert array max	count=1
arg	with ||| steps	count=1
module	an ||| chararray	count=1
arg	copy of s ||| s	count=3
arg	member from ||| member	count=1
arg	b in between ||| b iterable_of_bytes	count=1
function	[function_1] script ||| [function_1] [function_2]	count=1
function	a mask ||| mask	count=2
arg	of b to ||| b	count=1
function	exist ||| get	count=2
arg	string ||| s binary maxlinelen eol	count=1
function_arg	convert [arg_2] ||| [arg_2] [function_1]	count=6
arg	to a linear ||| a b	count=1
function	the canonical combining class ||| combining	count=1
module	specified logging ||| logging	count=1
module	usable ||| mimetools	count=1
function_arg	[function_1] file filename ||| [function_1] [arg_2]	count=1
function	matrix from an ||| matrix	count=1
function	arrays share ||| shares	count=1
function	a note reversed operands ||| sequence includes	count=1
module	hermite series on ||| polynomial hermite	count=1
function	call ||| call	count=1
function	[function_1] type for ||| [function_2] [function_1]	count=4
module	return or set ||| turtle	count=1
module	file ||| os	count=6
module	pickle ||| cpickle	count=2
function	list of supported formats ||| archive formats	count=1
arg	to a stream ||| stream indent	count=1
module	in ||| sqlite3	count=1
function	dumped to ||| wcoredump	count=1
arg	s in a field ||| s	count=3
arg	given axis ||| a axis	count=3
function	message ||| message	count=1
arg	range [a b ||| b	count=1
arg	file [arg] ||| [arg]	count=1
function	a true division ||| true divide	count=2
function	[function_1] the pre_input_hook ||| [function_1] [function_2]	count=1
module	data ||| shutil	count=1
arg	a decorator to all ||| decorator	count=1
function	the specified ||| resize	count=1
module	of this handler ||| handler	count=1
module	to a linear matrix ||| numpy	count=1
function_arg	[function_1] [arg_2] ||| [function_1] s sub [arg_2]	count=6
function	the indices [function_2] ||| [function_2] [function_1]	count=2
function	code ||| code	count=1
function	a pipe with ||| pipe	count=1
arg	to limit stack ||| limit	count=1
module	two sets as a ||| frozenset	count=1
arg	[arg_1] sub ||| [arg_2] [arg_1]	count=15
arg	a unicode [arg] ||| s [arg]	count=2
arg	size argument is ||| size	count=1
function_arg	completion display [arg_2] ||| [function_1] [arg_2]	count=1
function	the completion [function_2] ||| [function_1] [function_2]	count=1
arg	equal to a ||| a	count=1
arg	sub in string s[start:end] ||| sub	count=1
function	the union ||| union	count=2
arg	power [arg] ||| [arg]	count=1
module	in the array ||| ma masked_array	count=1
module	traceback ||| traceback	count=3
arg	a path ||| path args env	count=1
arg	[arg_1] match pat ||| [arg_2] [arg_1]	count=3
module	the string element in ||| core defchararray	count=1
arg	exponent is ||| context	count=1
arg	found ||| b sub start end	count=1
module	the [module] is ||| [module]	count=1
module	and unarchiving ||| shutil	count=1
function_arg	[function_1] s in ||| [function_1] [arg_2]	count=4
arg	query [arg_2] ||| cgi parse fp [arg_2] [arg_1]	count=1
arg	that of x2 element-wise ||| x2	count=1
function	exception information ||| exception	count=1
function_arg	a particular frame ||| getargvalues frame	count=1
arg	date_time ||| date_time	count=1
arg	given axis ||| axis dtype	count=3
function	parse [function_2] ||| readline [function_1] [function_2]	count=1
module	radians ||| math	count=1
arg	if ||| prefix	count=1
arg	least-squares solution ||| a b rcond	count=1
function	the current [function] of the ||| [function]	count=1
function	html table ||| table	count=1
arg	the specified ||| ei	count=1
function	otherwise set [function] themename ||| [function]	count=1
function	invisible ||| ht	count=1
module	the ||| popen	count=2
arg	to/from a command returning ||| command	count=1
arg	n ||| n iterable	count=2
function_arg	[function_1] function ||| [arg_2] [function_1]	count=17
function_arg	float but ||| float f	count=1
function	treating not ||| nanprod	count=1
function	of elements defined in ||| element names	count=1
function	all items ||| assert array	count=1
function	completion [function_2] ||| [function_2] [function_1]	count=1
arg	[arg] offset ||| obj offset [arg]	count=2
arg	condition is true ||| condition reason	count=4
module	interaction ||| chararray	count=1
function	decimal ||| decimal	count=2
module	disable all [module] calls ||| [module]	count=1
arg	a break ||| duration	count=1
module	transaction ||| connection	count=2
arg	suffix ||| suffix start	count=2
arg	the path ||| path	count=1
function	decomposition mapping ||| decomposition	count=1
function	of history ||| history	count=1
module	of a chebyshev series ||| polynomial chebyshev	count=1
function	unarchiving ||| get archive	count=1
function	an iterator over ||| itervalues	count=2
function	type [function_2] ||| [function_2] [function_1]	count=2
arg	given axis ||| func1d axis	count=1
arg	exp ||| exp	count=1
arg	resolve host and ||| host	count=1
module	masked array ||| ma masked_array	count=4
arg	titles description ||| titles aligned byteorder	count=1
function	in ||| bisect right	count=1
arg	file ||| file protocol	count=1
arg	optimize [arg] pickle string ||| [arg]	count=1
arg	when [arg] ||| [arg] start	count=1
arg	y2 ||| y2	count=1
arg	a buffer [arg_2] ||| [arg_1] [arg_2]	count=2
function	file the source code ||| source	count=1
function	treating not a numbers ||| nancumsum	count=1
function_arg	exception [arg_2] ||| [arg_2] [function_1]	count=1
function	highest index ||| rfind	count=1
arg	/= b ||| a b	count=2
arg	[arg] into ||| [arg]	count=3
arg	square root of a ||| a	count=1
module	return series ||| numpy polynomial	count=2
arg	substring sub is ||| a sub	count=1
arg	query ||| keep_blank_values strict_parsing	count=1
function	fill ||| end fill	count=1
arg	an object is an ||| object	count=1
arg	of the bins ||| bins	count=1
arg	an array [arg_2] ||| [arg_2] [arg_1]	count=1
arg	exponent [arg] ||| [arg]	count=1
module	of the hermite_e ||| polynomial hermite_e	count=1
function_arg	long [arg_2] ||| [function_1] [arg_2]	count=1
arg	degree deg ||| deg domain window	count=3
function	an exponential ||| exponential	count=2
function	is ||| filter	count=1
arg	database file filename ||| file	count=1
function	broadcast ||| broadcast	count=1
module	iterator ||| connection	count=1
function	the east [function_2] ||| [function_2] [function_1]	count=2
module	array to a ||| chararray	count=1
arg	source string ||| string	count=1
function	decode ||| a2b	count=1
function	from degrees to radians ||| radians	count=1
function	recursion limit the maximum ||| getrecursionlimit	count=1
function	type false otherwise ||| type	count=3
function	module ||| find module	count=3
function	with its elements centered ||| center	count=1
function_arg	convert [function_1] [arg_2] to quoted-printable ||| mimify [function_1] [arg_2]	count=2
function_arg	the [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
module	depth of ||| sys	count=1
module	return ||| numpy linalg	count=2
function	[function_1] width ||| [function_2] [function_1]	count=4
function	the sum of a ||| sum	count=1
arg	linear matrix equation ||| a b	count=1
arg	shape ||| new_shape	count=1
module	array flags writeable aligned ||| defchararray chararray	count=1
module	return a string usable ||| mimetools	count=1
function	crc ||| crc	count=1
arg	path ||| path args	count=1
arg	by a fill value ||| fill_value	count=1
arg	ch ||| ch	count=1
arg	decorator to all ||| decorator	count=1
module	for new [module] objects ||| [module]	count=1
arg	sample [arg] a ||| a [arg]	count=1
arg	the end of b ||| b	count=2
function	the lowest index ||| find	count=1
function	the code object ||| code	count=1
function	the data ||| nanpercentile	count=1
module	copy an element ||| core defchararray chararray	count=1
arg	a assuming a is ||| lo hi	count=4
module	hermite series by another ||| numpy polynomial hermite	count=1
arg	recursively ||| onerror	count=1
function_arg	run [arg_2] ||| [function_1] [arg_2]	count=1
module	draw samples from the ||| random randomstate	count=2
arg	[arg_1] args ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] names ||| [arg_2] [function_1]	count=1
arg	in a ||| cls	count=1
arg	fullname ||| fullname path	count=1
arg	arr ||| arr k	count=1
function	routine to open a ||| open	count=1
module	a set with the ||| sets set	count=3
module	set array ||| numpy ma masked_array	count=1
module	an array to a ||| ma masked_array	count=1
arg	fill_value as a truth ||| fill_value	count=1
module	mode w and ||| zipfile	count=2
arg	occurrences of sep ||| sep	count=1
arg	from ||| size replace p	count=1
function	day of the ||| weekday	count=1
function	[function_1] * ||| [function_2] [function_1]	count=1
function	the day of the ||| weekday	count=1
function_arg	formats [arg_2] ||| [arg_2] [function_1]	count=4
module	[module] given ||| [module]	count=1
arg	a file for ||| filename flag	count=1
arg	domain a ||| a	count=1
function_arg	count the [arg_2] ||| [function_1] axis [arg_2]	count=3
arg	filters ||| action category	count=1
function	a 16-bit ||| htons	count=1
function	return the current contents ||| get	count=1
arg	pseudo-vandermonde matrix ||| z deg	count=1
arg	defined by a data-type ||| dtype	count=1
function	forward ||| fd	count=1
arg	namespace ||| namespace	count=2
arg	true : [arg_2] ||| [arg_2] [arg_1]	count=1
module	default ||| sys	count=1
arg	return a unique temporary ||| suffix prefix dir text	count=1
arg	returns adict ||| adict	count=1
function	the orientation ||| setheading	count=1
function_arg	[function_1] cmd ||| commands [function_1] [arg_2]	count=3
function_arg	mask [arg_2] ||| [arg_2] [function_1]	count=1
module	with ||| popen	count=2
arg	[arg_1] a assuming ||| [arg_1] x [arg_2]	count=2
function	indices for the upper-triangle ||| triu indices	count=1
arg	to an ||| a dtype order	count=1
function	stamp ||| stamp	count=1
module	process with ||| popen	count=2
module	this logger ||| logger	count=1
function_arg	compares the [arg_2] ||| [function_1] [arg_2]	count=1
function	+ ||| add	count=1
function	standard [function_2] ||| [function_1] [function_2]	count=3
module	an element ||| core defchararray chararray	count=1
function	[function_1] the list ||| [function_1] [function_2] extracted_list file	count=1
function	items ||| array	count=1
function	[function_1] of history ||| [function_2] [function_1]	count=6
function	the class of self ||| class	count=1
module	the ||| frozenset	count=2
arg	extract [arg] the ||| [arg]	count=1
module	hermite series on the ||| numpy polynomial hermite	count=1
module	hermite series to another ||| polynomial hermite_e	count=1
module	which is ||| logging	count=1
arg	least-squares solution ||| rcond	count=1
function	debug a test ||| debug	count=1
arg	geometric progression ||| stop num endpoint dtype	count=1
arg	values in the iterable ||| iterable	count=2
arg	[arg] to a ||| [arg]	count=3
arg	shape to turtlescreen ||| name shape	count=1
function	return its [function] function ||| [function]	count=3
module	the array elements ||| numpy ma masked_array	count=1
function	[function] return a ||| [function]	count=1
function	[function_1] the completion ||| [function_1] [function_2]	count=1
arg	rate of ||| finance_rate reinvest_rate	count=1
function	dictionary ||| get info	count=1
arg	hermitian or symmetric matrix ||| uplo	count=1
function_arg	self and [arg_2] ||| [arg_2] [function_1]	count=1
function	[function] the date ||| [function]	count=1
arg	a time tuple ||| tuple	count=1
function_arg	[function_1] substring sub ||| [function_1] a [arg_2]	count=3
arg	is not found ||| start end	count=2
arg	parse a [arg_1] [arg_2] or from a file ||| cgi parse fp [arg_2] [arg_1]	count=3
module	for archiving ||| shutil	count=1
function	print [function_2] ||| [function_1] [function_2] extracted_list file	count=3
arg	format ||| format	count=1
function	print the ||| print	count=1
module	of the matrix ||| numpy matrix	count=3
arg	sep as the ||| sep maxsplit	count=2
arg	the eigenvalues of a ||| a	count=1
module	context ||| context	count=3
module	a set with the ||| set	count=3
function	the real ||| real	count=1
module	[module_1] [module_2] a ||| [module_2] [module_1]	count=6
module	minimum ||| numpy ma maskedarray	count=1
arg	string str ||| str	count=1
function	the 2-dimensional inverse ||| irfft2	count=1
module	ignoring nan values ||| numpy	count=1
module	series to a different ||| numpy polynomial	count=2
arg	in s ||| s	count=4
module	of hermite series ||| numpy polynomial hermite_e	count=2
function	semaphore ||| semaphore	count=1
function	set or ||| set	count=3
function	not in effect ||| idiv	count=1
arg	so its exponent ||| context watchexp	count=1
arg	intervening occurrences of sep ||| sep	count=1
arg	the values of d ||| d	count=1
function	where a ||| where	count=1
arg	unique temporary file name ||| prefix dir	count=1
arg	file using ||| name mode buffering	count=1
function	the power of ||| power	count=1
arg	zero if [arg] == ||| [arg]	count=1
module	of the masked array ||| ma masked_array	count=3
function	maximum ||| max	count=1
arg	from the windows registry ||| csd ptype	count=1
arg	a class matching a ||| testmatch	count=1
function	acquire the ||| acquire	count=1
arg	to a ||| b	count=1
module	same decimal ||| decimal context	count=1
function	a matrix from an ||| matrix	count=1
arg	the specified ||| width	count=3
module	interaction of the array ||| numpy	count=1
function	returns [function] version of ||| der_cert [function]	count=1
arg	file ||| filename globals locals	count=1
module	trace from ||| traceback	count=1
function	decode [function_2] ||| [function_2] [function_1]	count=1
module	a logger which is ||| logging logger	count=1
function	group id ||| getpgrp	count=1
arg	[arg_1] is found ||| [arg_2] [arg_1]	count=4
function	return the complex conjugate ||| conjugate	count=1
function	read [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] occurrences of ||| [arg_2] [function_1]	count=2
function	pseudo-vandermonde matrix ||| lagvander	count=1
arg	object ||| object	count=12
arg	unique temporary ||| prefix dir text	count=1
module	the dump ||| connection	count=1
arg	twos exponent ||| out1 out2	count=1
function	the source code ||| getsource	count=1
arg	values ||| obj values	count=1
module	dump of ||| connection	count=1
arg	new array with the ||| a	count=1
function_arg	convert [function_1] [arg_2] quoted-printable ||| [function_1] [arg_2]	count=2
arg	execute [arg_2] ||| [arg_1] [arg_2]	count=8
arg	over nested [arg] depth-first ||| [arg]	count=1
arg	start stop step ||| start stop step	count=3
arg	a single file ||| file	count=1
arg	internal state ||| state	count=1
arg	and b are ||| a b	count=1
function_arg	the input [arg_2] ||| [arg_2] [function_1]	count=2
arg	addr ||| ptr size	count=1
function	scalar type ||| type	count=1
arg	elements of x into ||| x	count=1
function_arg	if the condition ||| if condition	count=2
arg	or y depending on ||| y	count=1
arg	specified record ||| record	count=3
function	pack ||| pack	count=2
module	masked array to a ||| numpy ma	count=1
function_arg	[function_1] number to ||| [arg_2] [function_1]	count=1
function	header ||| header	count=4
arg	information about a frame ||| frame context	count=1
function	check that all items ||| array	count=1
arg	version of s ||| s	count=1
function_arg	input to an ||| asarray a	count=2
module	object to simplify the ||| numpy	count=1
function_arg	owner and [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] which is ||| [function_1] [arg_2]	count=4
module	invalid characters [module] http ||| [module]	count=1
function_arg	[function_1] by distance ||| [function_1] [arg_2]	count=2
function_arg	print up [arg_2] ||| [arg_2] [function_1]	count=3
function	roots ||| chebroots	count=1
function	standard exponential distribution ||| standard exponential	count=2
arg	port into addrinfo struct ||| port family socktype proto flags	count=1
arg	if [arg] is ||| [arg]	count=1
arg	stream ||| stream indent width	count=1
module	simplify the interaction ||| numpy	count=1
function	pack the values v1 ||| pack into	count=1
function	environment ||| environ	count=1
function	current theme to ||| theme	count=1
function_arg	the real [arg_2] ||| [function_1] [arg_2]	count=4
function	unpack ||| unpack from	count=1
arg	linear matrix ||| a b	count=1
function	east asian ||| east asian	count=2
module	pseudo-vandermonde matrix of ||| polynomial	count=1
function	is [function_2] ||| [function_2] [function_1]	count=6
function	time [function] time ||| [function]	count=1
function	union of ||| union	count=2
arg	present value ||| rate	count=1
arg	b plus [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	's position [arg_2] ||| [arg_2] [function_1]	count=2
arg	wait until the ||| timeout	count=1
arg	tarinfo' ||| fileobj	count=1
module	matrix ||| polynomial	count=1
function_arg	the power [arg_2] ||| [function_1] [arg_2]	count=3
module	minimum ||| numpy ma masked_array	count=1
module	this ||| polynomial hermite hermite	count=1
module	masked and replaced by ||| numpy ma	count=1
arg	to a linear matrix ||| a b	count=1
arg	path of file in ||| path	count=1
arg	targetpath according to tarinfo ||| tarinfo targetpath	count=3
function_arg	left-justified version [arg_2] ||| [arg_2] [function_1]	count=3
function	return ||| choose	count=1
arg	[arg_1] [arg_2] ||| a [arg_2] [arg_1]	count=16
module	series to ||| numpy polynomial	count=11
function_arg	[function_1] single item ||| [arg_2] [function_1]	count=1
function_arg	[function_1] file name' ||| [arg_2] [function_1]	count=1
module	object to ||| numpy	count=1
function_arg	title of turtle-window ||| title titlestring	count=2
module	linear ||| numpy linalg	count=2
module	truncate ||| hermite_e hermitee	count=1
module	series on ||| polynomial	count=8
module	the legendre ||| numpy polynomial legendre	count=1
function_arg	[function_1] globals ||| [arg_2] [function_1]	count=2
module	copy of the array ||| chararray	count=1
arg	to x [arg_2] ||| [arg_2] [arg_1]	count=1
module	by ||| sys	count=1
function_arg	the sum [arg_2] ||| [arg_2] [function_1]	count=2
module	name [module] a given ||| [module]	count=1
module	generate a legendre series ||| polynomial legendre	count=1
function	change the owner and ||| chown	count=1
function	an archive ||| archive	count=1
module	with ||| numpy chararray	count=1
module	the [module] to the ||| [module]	count=2
arg	tb [arg_2] ||| [arg_1] limit [arg_2]	count=1
arg	a [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
function	return the gradient ||| gradient	count=1
arg	operation op ||| operation	count=1
arg	are element-wise equal ||| equal_nan	count=2
arg	for category ||| category	count=1
function	standard normal ||| standard normal	count=2
arg	be used when instantiating ||| klass	count=2
arg	type1 [arg_2] ||| [arg_1] [arg_2]	count=1
function	return a new array ||| resize	count=1
function	with the sign ||| copysign	count=1
module	current transaction ||| sqlite3	count=2
arg	an array with the ||| a	count=1
function	maximum length [function_2] ||| [function_2] [function_1]	count=2
module	the string element in ||| numpy core defchararray	count=1
function_arg	convert the [arg_2] ||| [arg_2] [function_1]	count=1
arg	mime mail message ||| ifile ofile is_mime	count=1
arg	[arg_1] or y ||| [arg_2] [arg_1]	count=1
module	the series ||| numpy polynomial	count=2
module	raw traceback ||| traceback	count=1
function	subtract ||| lagsub	count=1
arg	the specified suffix ||| suffix start	count=2
arg	pseudo-vandermonde matrix of given ||| deg	count=2
module	the array to ||| chararray	count=1
module	applying ufunc ||| numpy ufunc	count=1
arg	from the file as ||| size	count=1
module	linalg functions ||| numpy linalg	count=1
function	permute the dimensions of ||| transpose	count=1
function_arg	[function_1] a ||| [function_1] zero [arg_2]	count=1
arg	line [arg_2] ||| [arg_2] [arg_1]	count=1
module	and for mode w ||| zipfile zipfile	count=1
module	write ||| zipfile zipfile	count=1
module	simplify ||| numpy chararray	count=1
function	call returning the default ||| get default	count=1
module	posixfile ||| posixfile	count=1
arg	filled with false ||| dtype	count=1
arg	random integer [arg] range ||| [arg]	count=1
function	tuple ||| tuple	count=1
function_arg	standard deviation [arg_2] ||| [function_1] [arg_2]	count=1
arg	shape to an array ||| a	count=1
arg	apply the pattern ||| pattern	count=1
arg	size starting at ||| size	count=1
module	set array flags ||| chararray	count=1
arg	shape to turtlescreen 's ||| shape	count=1
arg	resource fork etc ||| dst createpath copydates forcetype	count=1
function	unpack the buffer containing ||| unpack	count=1
function	new bounded [function_2] ||| [function_1] [function_2]	count=1
arg	a linear matrix equation ||| b	count=1
function	remainder ||| remainder	count=1
function_arg	permute the [arg_2] ||| [arg_2] [function_1]	count=1
module	this ||| numpy polynomial hermite hermite	count=1
arg	series of ||| series	count=1
arg	inputs element-wise ||| x1 x2	count=1
function	a list ||| get	count=1
arg	of exp ||| exp rounding	count=1
function	a sha512 ||| sha512	count=2
module	the array to the ||| numpy chararray	count=1
function	of integers whose ratio ||| ratio	count=1
function	ignoring any nans ||| nanmin	count=1
arg	specified axis while ||| axis	count=1
arg	specified username is ||| username	count=1
function	plist ||| plist	count=1
function	replacing ||| execve	count=1
function_arg	[function_1] but rounding ||| [function_1] [arg_2]	count=3
arg	stop [arg_2] ||| [arg_2] [arg_1]	count=1
module	of the operand ||| context	count=2
arg	b ||| b iterable_of_bytes	count=1
module	[module_1] array with ||| [module_1] [module_2]	count=2
arg	put terminal into a ||| fd when	count=1
module	locale ||| locale	count=6
arg	database file ||| file flag mode	count=1
arg	unbuffered [arg] place operation ||| [arg]	count=1
module	string element in ||| numpy core defchararray	count=1
function	python function ||| string function	count=1
function_arg	[function_1] and b ||| [arg_2] [function_1]	count=4
arg	bind fun to ||| fun btn add	count=6
function	a has a mapping ||| mapping	count=1
arg	both type1 [arg_2] ||| [arg_1] [arg_2]	count=1
function	add ||| hermeadd	count=1
function_arg	if the [arg_2] ||| [arg_2] [function_1]	count=2
module	the maximum depth of ||| sys	count=1
module	a floating-point number ||| float	count=1
function	of default root ||| default root	count=2
function	terminated by ||| wifsignaled	count=1
function_arg	v [function_1] [arg_2] ||| collections ordereddict [function_1] od key [arg_2]	count=1
module	of [module_2] ||| [module_1] [module_2]	count=8
function_arg	xor [arg_2] ||| [arg_2] [function_1]	count=2
function	string representation ||| array2string	count=1
arg	path ||| path mode	count=1
arg	bytes of a c ||| c	count=1
module	array with the ||| chararray	count=2
module	handler ||| handler	count=3
function	representing the current process ||| current process	count=1
function	new bounded ||| bounded	count=1
arg	for a and b ||| a b	count=2
function	registers ||| register	count=1
arg	occurrences of [arg_2] ||| [arg_2] [arg_1]	count=9
arg	specified suffix false ||| suffix	count=2
function	current directory as ||| print directory	count=2
function	html file of ||| file	count=1
function_arg	[function_1] in a ||| [arg_2] [function_1]	count=8
function_arg	[function_1] [arg_2] ||| [function_1] condition [arg_2]	count=2
arg	specified suffix false otherwise ||| suffix start	count=2
arg	evenly spaced values ||| start stop step dtype	count=1
module	to simplify the ||| chararray	count=1
arg	unique temporary ||| suffix prefix dir text	count=1
function	roll back ||| rollback	count=1
arg	query in the environment ||| environ keep_blank_values strict_parsing	count=1
function	for archiving and ||| get archive	count=1
arg	filters ||| action category lineno append	count=1
function_arg	multiply arguments [arg_2] ||| [arg_2] [function_1]	count=1
arg	while ignoring ||| a	count=1
module	in string ||| string	count=1
function	alive ||| alive	count=1
function	change the owner and ||| lchown	count=1
function	returns a ||| get	count=1
function	number of non-zero values ||| nonzero	count=1
arg	a ||| ignore_errors onerror	count=1
module	[module_1] series on ||| [module_2] [module_1] laggrid2d	count=1
arg	with the specified shape ||| a new_shape	count=1
module	archive as ||| tarfile tarfile	count=1
function	when instantiating a logger ||| logger	count=1
arg	get additional version ||| version	count=1
function	a ustar [function_2] ||| [function_1] [function_2]	count=1
module	legendre series on ||| numpy polynomial legendre	count=3
arg	a copy of b ||| b	count=4
module	encoding used by the ||| sys	count=1
module	write [module] ||| [module]	count=3
function	group ||| getgrnam	count=1
module	array to ||| numpy ma masked_array	count=1
function	to open a ||| open	count=1
function	asian ||| asian	count=1
arg	of targetpath according to ||| targetpath	count=3
function_arg	configuration limit name ||| fpathconf fd name	count=1
arg	file ||| file flag	count=1
arg	apply a decorator to ||| decorator	count=1
arg	stop ||| stop	count=1
function	open the ||| open	count=1
module	current thread ||| thread	count=1
function_arg	for the [arg_2] ||| [arg_2] [function_1]	count=1
arg	read n objects ||| n	count=1
function	[function_1] new thread ||| [function_2] [function_1]	count=1
arg	a mime mail message ||| ifile ofile is_mime	count=1
arg	the kind ||| kind order	count=1
arg	the given axis ||| axis dtype	count=3
function_arg	append a [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	convert an [function_1] [arg_2] quoted-printable ||| mimify [function_1] [arg_2]	count=2
function	return the current ||| get	count=2
function_arg	<< [arg_2] ||| [arg_2] [function_1]	count=1
function	are not equal ||| equal	count=1
arg	index [arg] ||| [arg]	count=1
arg	[arg_1] y z ||| [arg_2] [arg_1]	count=5
module	corresponding to the masked ||| numpy ma	count=1
arg	single line [arg_2] ||| [arg_2] [arg_1]	count=1
arg	parameter start ||| start	count=1
arg	[arg_1] y and ||| [arg_2] [arg_1]	count=16
module	return true if the ||| inspect	count=6
arg	on path or if ||| prefix	count=1
module	i/o ||| logging handler	count=2
function	the number of bytes ||| bytes	count=1
arg	recursively delete a directory ||| ignore_errors	count=1
function	locked state ||| locked	count=1
function	evaluate a 3-d ||| hermegrid3d	count=1
arg	[arg_1] gid ||| [arg_2] [arg_1]	count=12
function_arg	[function_1] part of ||| [function_1] [arg_2]	count=3
module	the python interpreter stack ||| sys	count=1
module	datetime in local time ||| datetime	count=1
function	recursively ||| rmtree	count=1
module	chebyshev series by x ||| polynomial chebyshev	count=1
arg	the values in od ||| od	count=1
function	default root ||| default root	count=2
function	return the ||| get	count=6
module	discrete fourier transform ||| numpy fft	count=1
function	a true ||| true	count=1
module	single doctest docstring in ||| doctest	count=1
function_arg	code [arg_2] ||| [arg_2] [function_1]	count=1
arg	the exponent of b ||| b	count=1
function_arg	[function_1] corresponding ||| [function_1] [arg_2]	count=3
module	array flags ||| core defchararray chararray	count=1
function	using the abstract representations ||| total	count=1
function	mouse-click event on this ||| onclick	count=1
arg	nan values ||| a	count=1
function	or set the fillcolor ||| fillcolor	count=1
module	python ||| numpy chararray	count=1
function	stamp a copy ||| stamp	count=1
module	iterator to the ||| sqlite3 connection	count=1
arg	sub in string ||| sub	count=1
arg	present value of ||| rate	count=1
module	series to the ||| numpy polynomial hermite	count=1
function_arg	unittest option [arg_2] ||| [arg_2] [function_1]	count=1
function	get a [function_2] ||| [function_1] [function_2]	count=1
function	unwrap by ||| unwrap	count=1
function	shallow copy of ||| copy	count=2
function	a numeric [function_2] ||| [function_1] [function_2]	count=1
function_arg	real [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	a[b:c] = [arg_2] ||| [function_1] a [arg_2]	count=1
arg	product of x ||| x	count=4
function	[function] a ||| [function]	count=9
function	archiving and ||| get archive	count=1
function	set the ||| set	count=8
function	wrapper ||| wrapper	count=1
function	the median ||| median	count=1
function	class ||| class	count=5
module	set array flags writeable ||| numpy core defchararray chararray	count=1
function	bit-wise or ||| bitwise or	count=2
function_arg	[function_1] targetpath according ||| [arg_2] [function_1]	count=4
arg	pattern ||| pattern	count=5
module	the angle ||| turtle	count=1
module	regular expression pattern returning ||| re	count=1
function	[function_1] or of ||| [function_1] [function_2]	count=3
arg	unbuffered [arg] place ||| [arg]	count=1
arg	lock operation op ||| operation	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to resource [arg_2]	count=3
arg	corresponding to the scheme ||| name scheme	count=1
function_arg	with [arg_2] ||| [arg_2] [function_1]	count=6
arg	tb to [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	with all [arg_2] ||| [function_1] s old new [arg_2]	count=1
arg	to ||| n	count=1
arg	the source string by ||| string maxsplit	count=1
function	- ||| sub	count=1
module	the legendre ||| legendre	count=1
arg	cartesian [arg_1] [arg_2] ||| leggrid2d [arg_1] [arg_2]	count=1
function_arg	is [arg_2] ||| [function_1] snan [arg_2]	count=1
arg	limit stack ||| limit	count=1
module	current default string encoding ||| sys	count=1
arg	system call ||| pid	count=3
arg	other ||| other context	count=2
module	the masked array ||| ma maskedarray	count=1
arg	true if domain a ||| a	count=1
arg	filled with ||| dtype	count=1
function	a numeric ||| number	count=1
module	array to ||| ma masked_array	count=1
function	from a float ||| from float	count=3
module	factory function that ||| threading	count=1
module	of a ||| float	count=1
function	for archiving and unarchiving ||| get archive	count=1
function_arg	divide one ||| hermediv c1 c2	count=1
arg	index ||| index	count=1
module	a module name ||| pydoc	count=1
arg	[arg] string ||| [arg]	count=2
function_arg	decode a [arg_2] ||| [arg_2] [function_1]	count=2
function	power ||| power	count=1
module	the hermite_e ||| polynomial hermite_e	count=1
arg	== [arg] positive if ||| x [arg]	count=1
arg	common ||| a b common	count=1
arg	qth percentile of the ||| q	count=1
function	and unarchiving ||| archive	count=1
module	a ||| linalg	count=1
arg	module file and ||| module path	count=1
function	[function_1] filling value ||| [function_1] [function_2]	count=1
function	sequence [function_2] ||| [function_2] [function_1]	count=1
arg	b ||| b axes	count=1
arg	od ||| od	count=2
function	tolerance ||| allclose	count=1
function	while ignoring nan ||| nanpercentile	count=1
arg	substring is not found ||| start end	count=3
module	return ||| sys	count=2
function	difference of two sets ||| difference	count=1
function	return whether the lock ||| lock	count=1
function	of non-zero values ||| nonzero	count=1
function	[function_1] a float ||| [function_2] [function_1]	count=1
function	error handling which ||| errors	count=1
arg	[arg_1] x2 element-wise ||| [arg_2] [arg_1]	count=1
function	converted to uppercase ||| upper	count=1
arg	file for low ||| filename	count=1
function	getpgid ||| getpgid	count=1
function	to stderr ||| to stderr	count=2
arg	[arg] converted to ||| [arg]	count=3
arg	add the tarinfo ||| tarinfo	count=1
function	objects are not equal ||| equal	count=1
function	print the list ||| print list	count=1
arg	to maintain order ||| v side sorter	count=1
arg	s in [arg_2] ||| [arg_2] [arg_1]	count=2
function	print the [function_2] ||| [function_1] [function_2] extracted_list file	count=4
function	asian width ||| asian width	count=2
arg	a path with ||| path	count=1
function	return the indices ||| indices from	count=2
arg	a single item to ||| int	count=1
function	to all relevant handlers ||| handlers	count=1
function	the ctypes module ||| ctypes	count=1
function	remove a ||| rmdir	count=1
arg	along specified axes for ||| b axes	count=1
module	string encoding ||| sys	count=1
module	of ||| polynomial	count=1
function	start a new ||| start new	count=3
arg	list [arg] the ||| file [arg]	count=1
function_arg	+ b [arg_2] ||| [arg_2] [function_1]	count=1
module	value ||| sys	count=1
module	string ||| mimetools	count=1
arg	suffix false otherwise ||| suffix start	count=2
function_arg	divide [arg_2] ||| [function_1] [arg_2]	count=2
module	of legendre ||| legendre	count=1
module	for telnetlib ||| telnetlib	count=1
function_arg	a duplicate [arg_2] ||| [function_1] [arg_2]	count=1
arg	by a fill value ||| mask copy fill_value	count=1
module	chebyshev series by ||| polynomial chebyshev	count=1
function	note reversed operands ||| sequence includes	count=1
arg	returns an array ||| a	count=1
arg	given list of lines ||| lines	count=1
arg	two operands numerically ||| a b	count=1
arg	given name ||| name frame	count=1
arg	from tb [arg_2] ||| [arg_2] [arg_1]	count=1
module	random number in the ||| random random	count=1
module	from a given ||| ma	count=1
arg	from tb to ||| value tb	count=1
function	[function_1] asian ||| [function_1] [function_2]	count=3
arg	string convert an ip ||| ip	count=1
function	returns [function] read ||| recv [function]	count=1
function	specified axis while ||| nanpercentile	count=1
function	indices ||| indices	count=3
function	variance along the specified ||| nanvar	count=1
function_arg	return the value for [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	or of [arg_2] ||| [function_1] [arg_2]	count=1
function	a quoted-printable [function] ||| [function]	count=3
function_arg	a converter [arg_2] ||| [arg_2] [function_1]	count=2
function	all know dialect names ||| dialects	count=1
arg	host [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg_1] [arg_2] ||| [arg_1] path [arg_2]	count=2
module	of hermite series to ||| polynomial hermite_e	count=1
module	of ||| cmath	count=1
module	warnings ||| warnings	count=2
function	types ||| ntypes	count=1
function_arg	convert the [arg_2] ||| [function_1] [arg_2]	count=1
arg	new array ||| a	count=1
arg	parse a string ||| string	count=1
function	drawn after ||| end	count=1
module	compute the fft ||| fft	count=1
arg	to limit ||| limit file	count=1
arg	file filename and ||| file flag	count=1
function	mouse-move event on this ||| ondrag	count=1
function_arg	[function_1] flags ||| [arg_2] [function_1]	count=4
function	rayleigh ||| rayleigh	count=2
function	[function] set ||| unshare [function]	count=3
module	[module_1] channel ||| [module_1] [module_2]	count=8
module	a linear matrix equation ||| linalg	count=1
function_arg	absolute values element-wise ||| fabs x	count=1
arg	path or if path ||| path prefix	count=1
module	element of ||| numpy core defchararray chararray	count=1
function	indices to ||| indices	count=1
module	sqlite ||| sqlite3	count=1
arg	y and ||| y	count=4
module	returns ||| sqlite3	count=1
function	version ||| numpy version	count=1
arg	returning status was ||| status	count=3
arg	return the least-squares solution ||| rcond	count=1
arg	shape with [arg] / return ||| [arg]	count=1
function	returns a matrix ||| matrix	count=1
module	compute ||| numpy	count=1
module	array that contain masked ||| ma	count=2
arg	over a given axis ||| axis	count=3
function_arg	[function_1] to x ||| turtle [function_1] [arg_2]	count=3
function_arg	[function_1] b ||| [arg_2] [function_1]	count=23
module	specified ||| logging loggeradapter	count=1
module	an element ||| core defchararray	count=1
function_arg	exception up [arg_2] ||| [arg_2] [function_1]	count=1
module	from the ||| sqlite3	count=1
arg	of the specified width ||| width	count=5
function_arg	multiply one ||| hermemul c1 c2	count=1
arg	a path with arguments ||| path args	count=1
arg	the encoding and ||| encoding	count=1
module	readline ||| readline	count=5
module	to a linear matrix ||| linalg	count=1
function	formatted dump of the ||| dump	count=1
arg	to ||| x	count=1
arg	recursively delete ||| path ignore_errors onerror	count=1
function	top of the ||| getblock	count=1
function_arg	into a [arg_2] ||| [arg_2] [function_1]	count=3
arg	an [arg] indication of ||| [arg]	count=1
arg	extract [arg] ||| [arg]	count=1
arg	search function ||| search_function	count=1
function	as a ||| choose	count=1
module	numbers and returns ||| decimal context	count=1
module	series ||| polynomial hermite_e hermitee	count=1
arg	c is ||| c b	count=1
module	data along the specified ||| numpy	count=1
arg	the status ||| status	count=1
arg	seconds ||| seconds	count=3
function	set a python ||| set string	count=1
module	hermite series ||| numpy polynomial hermite	count=15
function_arg	exception up [arg_2] ||| [function_1] etype value tb [arg_2]	count=1
arg	a pickle ||| pickle	count=1
function_arg	string at [arg_2] ||| [arg_2] [function_1]	count=1
module	ensure all logging ||| logging	count=1
function	given family to string ||| inet ntop	count=1
function_arg	[function_1] sequence ||| [function_1] [arg_2]	count=2
arg	is ||| a	count=1
arg	convert series to series ||| series	count=1
module	the ||| linalg	count=1
function	an iterator over the ||| iteritems	count=1
module	new lock ||| thread	count=1
module	the ||| sys	count=6
function	orientation ||| setheading	count=1
module	module name [module] a ||| [module]	count=1
module	of a masked array ||| ma	count=2
function	all items of ||| array max	count=1
module	w and a write ||| zipfile	count=2
function	of the class ||| number class	count=1
module	truncate the [module] to at ||| [module]	count=1
arg	to desired ||| actual desired	count=1
module	and return its ||| turtle	count=1
arg	as ||| header	count=1
module	of the turtleshape ||| turtle	count=1
arg	condition ? [arg_2] ||| gettext test [arg_1] [arg_2]	count=4
module	canvas and return ||| turtle	count=1
arg	object is ||| object	count=9
arg	of executing [arg] ||| [arg]	count=6
arg	set the locale ||| locale	count=1
function	a monic ||| polyfromroots	count=1
arg	[arg_1] to dst ||| [arg_1] [arg_2]	count=1
arg	[arg_1] assuming ||| [arg_2] [arg_1]	count=10
function_arg	add one ||| legadd c1 c2	count=1
module	with the specified ||| numpy	count=1
function_arg	return [function_1] [arg_2] ||| [function_1] [arg_2]	count=21
function	get a ||| get	count=3
arg	the size argument ||| size	count=1
module	to ||| numpy chararray	count=1
arg	[arg] in local ||| [arg]	count=3
function	treating not a ||| nansum	count=1
arg	a path with ||| path args env	count=1
module	acquire ||| logging handler	count=1
arg	file ||| file args	count=1
arg	decay ||| loc	count=1
function	's import [function] ||| acquire [function]	count=3
module	write the ending records ||| zipfile	count=2
arg	in choicelist ||| choicelist default	count=2
module	series by ||| polynomial	count=9
arg	severity level' on ||| level msg	count=1
module	encoder ||| codecs incrementalencoder	count=2
arg	into account ||| f val	count=1
arg	function ||| function shape	count=1
arg	command returning a file ||| command	count=1
function_arg	starts with [arg_2] ||| [function_1] [arg_2]	count=3
function	parse the ||| parse	count=1
arg	read n ||| n	count=1
arg	a python object ||| object indent width	count=1
function	array that satisfy some ||| extract	count=1
arg	returns ||| errno	count=1
arg	recursively ||| path ignore_errors	count=1
arg	[arg_1] class matching ||| [arg_2] [arg_1]	count=1
function	value of ||| value	count=3
arg	specified username ||| username gid	count=1
arg	the major ||| major	count=1
function	in the locked state ||| locked	count=1
function	handle ||| handle	count=1
module	after ||| turtle	count=1
function	the pre_input_hook ||| pre input hook	count=1
arg	[a b ||| b	count=1
arg	to an [arg_2] ||| [arg_2] [arg_1]	count=1
arg	item onto ||| item	count=1
module	interpreter stack ||| sys	count=1
function	is blank ||| is_line_junk	count=1
module	is ||| str	count=1
module	new [module] ||| [module]	count=1
function	supplemental group ids for ||| getgroups	count=1
function	nan ||| nanpercentile	count=1
function_arg	[function_1] two ||| [arg_2] [function_1]	count=1
module	for each element in ||| core defchararray	count=5
arg	substring sub [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	particular [arg_2] ||| [function_1] [arg_2]	count=1
function	items ||| array max ulp	count=1
function	roots of a ||| chebroots	count=1
module	interaction of ||| numpy	count=1
arg	shell command [arg] in ||| [arg]	count=1
function_arg	a float [arg_2] ||| [function_1] [arg_2]	count=4
arg	query in ||| keep_blank_values strict_parsing	count=1
module	series ||| polynomial	count=68
arg	path with arguments and ||| path args	count=1
function	the code object for ||| code	count=1
function	run ||| run	count=2
function	environment [function_2] ||| [function_1] [function_2]	count=1
module	of the ||| sqlite3 connection	count=1
function	debug [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] completion display ||| [function_2] [function_1]	count=1
function	return the source code ||| source	count=1
arg	[arg] argument list ||| [arg]	count=1
arg	the system call ||| pid	count=3
arg	flag ||| flag	count=1
arg	interest per period ||| nper pmt pv fv	count=1
function	load the [function_2] ||| [function_1] [function_2]	count=1
function	given by ||| fchown	count=1
function	html file ||| file	count=1
arg	number to a ||| number	count=1
arg	an array with ||| k dtype	count=1
function_arg	[function_1] turtle-window ||| [arg_2] [function_1]	count=1
arg	common ||| b common	count=1
function	[function_1] [function_2] to a ||| [function_1] [function_2]	count=4
arg	message ||| message	count=1
arg	find the set ||| ar1 ar2 assume_unique	count=1
rep	set the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function_arg	[function_1] group id ||| [arg_2] [function_1]	count=1
arg	access and modified ||| atime mtime	count=1
module	the [module] to at ||| [module]	count=1
arg	true if text ||| text	count=1
arg	delta ||| delta which	count=1
arg	into a single file ||| file args	count=1
function_arg	read a [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	median along [arg_2] ||| [function_1] [arg_2]	count=1
module	a ||| zipfile	count=2
arg	in [arg_2] ||| [arg_1] decorator [arg_2]	count=2
function_arg	[function_1] mime mail ||| [arg_2] [function_1]	count=3
arg	formatted version of s ||| s	count=1
function	compute the roots of ||| chebroots	count=1
function	registers [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] y ||| turtle [function_1] [arg_2]	count=3
function_arg	multiply one ||| lagmul c1 c2	count=1
arg	measured in radians of ||| x	count=2
arg	version information from the ||| release version	count=1
function	sha384 ||| sha384	count=1
arg	database ||| database	count=1
module	for the connection ||| connection	count=1
arg	python object [arg_2] ||| [arg_2] [arg_1]	count=1
function	set the groups ||| setgroups	count=1
function_arg	item [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	return the [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	union of itself and ||| union	count=1
function	samples from a normal ||| normal	count=1
arg	by the kind keyword ||| kind order	count=1
module	sub in [module] s[start:end] ||| [module]	count=1
module	or ||| frozenset	count=1
function	operation between self and ||| and	count=1
module	of an abc ||| abc	count=1
arg	if [arg_2] ||| [arg_2] [arg_1]	count=8
function_arg	[function_1] file and ||| [function_1] [arg_2]	count=1
function	[function_1] or of ||| [function_2] [function_1]	count=3
arg	path ||| path	count=24
arg	a subclass thereof ||| class-or-type-or-tuple	count=1
function	all items of ||| assert array max ulp	count=1
module	a chebyshev [module_2] ||| [module_1] [module_2]	count=2
function	logger is [function_2] ||| [function_2] [function_1]	count=3
function	pickle ||| dump	count=1
arg	a string ||| string func	count=1
arg	[arg_1] executable ||| [arg_2] [arg_1]	count=2
arg	condition ||| condition arr	count=1
arg	[arg_1] width ||| [arg_2] [arg_1]	count=44
arg	globals and locals ||| globals locals	count=2
arg	least-squares solution to ||| b rcond	count=1
function	[function_1] a long ||| [function_1] [function_2]	count=2
module	object the [module] is ||| [module]	count=1
arg	subclass thereof ||| class-or-type-or-tuple	count=1
function	roots of ||| chebroots	count=1
function_arg	integer power [arg_2] ||| [function_1] [arg_2]	count=1
module	a masked array to ||| numpy ma masked_array	count=1
arg	table ||| table	count=1
function	given degrees ||| polyvander3d	count=1
function	the string [function_2] ||| [function_1] [function_2]	count=1
module	which [module] the concatenation ||| [module]	count=1
module	same decimal object ||| decimal	count=1
function	their initial state ||| resetscreen	count=1
function_arg	[function_1] class ||| [function_1] series [arg_2]	count=1
arg	an ip ||| ip	count=1
arg	b plus [arg_2] ||| [arg_2] [arg_1]	count=1
module	used ||| sys	count=1
function	header string ||| format header	count=2
function	a ||| get archive	count=1
arg	qth percentile of ||| a q	count=1
arg	cmd ||| cmd mode bufsize	count=1
function	read [function_2] ||| [function_2] [function_1]	count=1
function	converter ||| converter	count=1
module	element [module_2] ||| [module_1] [module_2]	count=4
function	errors ||| error	count=1
module	[module_1] of ||| [module_1] [module_2]	count=11
module	array with ||| core defchararray chararray	count=1
function	load the module ||| load module	count=3
arg	performs unbuffered [arg] place operation ||| [arg]	count=1
function	a sha224 ||| sha224	count=1
function	hash value for ||| hash	count=1
module	string ||| readline	count=1
arg	true ||| true	count=1
function_arg	thread [arg_2] ||| [arg_2] [function_1]	count=1
module	draw random ||| random	count=1
module	the hermite_e ||| numpy polynomial hermite_e	count=1
function	return list of the ||| get	count=1
module	the current transaction ||| sqlite3	count=2
module	of hermite [module_2] ||| [module_2] [module_1]	count=3
arg	second ||| arg1 arg2	count=1
function	fill the shape drawn ||| fill	count=1
function_arg	[function_1] with pysqlite ||| [function_1] [arg_2]	count=3
function_arg	permissions [arg_2] ||| [function_1] tarinfo [arg_2]	count=2
arg	are element-wise equal within ||| equal_nan	count=2
function	access permissions of ||| chmod	count=1
module	mask of a masked ||| numpy ma	count=1
arg	true [arg_2] ||| [arg_1] [arg_2]	count=1
arg	line of ||| line	count=1
function	has [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] of turtle-window ||| [arg_2] [function_1]	count=1
arg	[arg_1] as ||| [arg_2] [arg_1]	count=4
arg	html page ||| css encoding	count=1
function	list of supported formats ||| get archive formats	count=1
function	mailcap [function] ||| [function]	count=1
module	new [module] with ||| [module]	count=1
function	data [function] ||| min scalar [function]	count=2
module	to [module] ||| [module]	count=1
arg	the ||| a b	count=1
arg	[arg] to file ||| [arg]	count=1
arg	[arg_1] pysqlite ||| [arg_1] [arg_2]	count=1
module	finder info resource fork ||| macostools	count=1
function	[function_1] new thread ||| [function_1] [function_2]	count=1
function	terminal given by ||| tcsetpgrp	count=1
function	long ||| long	count=2
module	a legendre [module_2] ||| [module_2] [module_1]	count=2
arg	to a different kind ||| kind	count=2
arg	string [arg_2] ||| [arg_2] [arg_1]	count=1
function	variance along ||| nanvar	count=1
module	a 2-d [module] ||| [module]	count=15
arg	specified ||| width	count=3
function	the class of the ||| class	count=1
function	+= b for a ||| iconcat	count=1
function_arg	normal [arg_2] ||| [function_1] [arg_2]	count=4
module	w and ||| zipfile zipfile	count=1
module	resultset ||| sqlite3 cursor	count=1
function	returns a [function] object ||| [function]	count=1
arg	the words in list ||| words	count=1
arg	[arg_1] assuming a ||| [arg_1] [arg_2]	count=8
arg	of a matrix ||| x p	count=2
arg	command returning a file ||| command mode	count=1
function	the specified axis ||| nanpercentile	count=1
function	the default ||| default	count=1
arg	a assuming ||| lo hi	count=4
function	along the specified axis ||| nanpercentile	count=1
arg	pseudo-vandermonde matrix of ||| x y z deg	count=1
function	to return list of ||| get	count=1
function	have the same ||| same quantum	count=1
function	print exception up to ||| print exception	count=1
function	[function_1] main ||| [function_1] [function_2]	count=2
function	[function_1] asian ||| [function_2] [function_1]	count=3
function_arg	add one ||| lagadd c1 c2	count=1
module	for mode ||| zipfile	count=2
arg	a ||| a	count=27
function	is not in effect ||| idiv	count=1
arg	b in place ||| b	count=1
arg	string of data ||| data dtype	count=1
function	the shape drawn ||| end	count=1
function_arg	[function_1] [arg_2] ||| [function_1] m [arg_2]	count=3
arg	descriptor ||| fd	count=1
module	current value of the ||| sys	count=1
arg	the qth percentile of ||| a q	count=1
function	remove the startup_hook ||| startup hook	count=1
function_arg	shallow copy [arg_2] ||| [arg_2] [function_1]	count=2
module	pseudo-vandermonde matrix of ||| polynomial laguerre	count=1
function	the transpose of the ||| get t	count=1
arg	in ||| default	count=1
function	a string usable ||| choose	count=1
module	chebyshev series whose ||| polynomial chebyshev	count=1
function	choose from ||| choose	count=1
function_arg	parse [arg_2] ||| [arg_2] [function_1]	count=1
arg	executable ||| executable	count=2
module	nan ||| numpy	count=1
arg	unique temporary ||| prefix dir	count=3
function	into mantissa and ||| frexp	count=1
module	angle measurement ||| turtle	count=1
function	set ||| lchflags	count=1
module	element of an array ||| ma masked_array	count=1
function	of the class ||| class	count=2
function	representing the current ||| current	count=1
module	legendre [module_2] ||| [module_2] [module_1]	count=33
module	hermite_e ||| polynomial hermite_e	count=1
function_arg	non-overlapping occurrences [arg_2] ||| [arg_2] [function_1]	count=5
arg	the message ||| message	count=1
module	an arbitrary python function ||| numpy	count=1
module	draw random ||| numpy random	count=1
arg	group associated with ||| pgid	count=1
function_arg	[function_1] numpy ||| [function_1] object [arg_2]	count=1
function	tuple-tree representation ||| st2tuple	count=1
module	set with the ||| sets set	count=3
arg	x in [arg_2] ||| [arg_1] [arg_2]	count=4
function	returns the digit value ||| digit	count=1
function	== ||| eq	count=1
function_arg	mantissa and [arg_2] ||| [function_1] x [arg_2]	count=2
arg	a class matching ||| testmatch	count=1
function	returns a ||| archive	count=1
module	table ||| calendar htmlcalendar	count=2
arg	complex argument ||| z	count=1
arg	expression: condition ||| condition	count=1
function	list of keys ||| keys	count=1
function_arg	[function_1] to limit ||| [function_1] etype value tb [arg_2]	count=2
function_arg	a circle [arg_2] ||| [function_1] radius extent [arg_2]	count=1
module	string element in ||| core defchararray	count=1
function_arg	forward [arg_2] ||| [arg_2] [function_1]	count=1
function	class of the ||| number class	count=1
function	its [function] ||| [function]	count=3
arg	return the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
module	of ||| sqlite3 connection	count=1
function	new thread ||| new thread	count=2
arg	[arg] which ||| [arg]	count=2
arg	[arg] where ||| [arg]	count=1
module	the ||| turtle	count=7
module	datetime in local ||| datetime	count=1
arg	of a [arg_2] ||| [arg_1] [arg_2]	count=2
module	an array ||| numpy ma masked_array	count=1
arg	put terminal into ||| fd when	count=1
arg	axes of an array ||| a	count=1
function	unwrap by changing deltas ||| unwrap	count=1
module	return ||| datetime	count=1
function_arg	shape [arg_2] ||| [arg_2] [function_1]	count=1
function	a ||| lstsq	count=1
module	to a linear ||| numpy linalg	count=1
module	list from a given ||| ma	count=1
arg	[arg] of a ||| [arg]	count=1
arg	group with ||| pgid	count=1
arg	string with base64 ||| s	count=1
module	with sigkill ||| popen	count=1
module	current ||| connection	count=2
function	owner and ||| chown	count=1
arg	plus interest ||| rate nper pv fv	count=1
arg	twos ||| out1 out2	count=1
function	public routine to open ||| open	count=1
function	stack frame ||| stack	count=1
arg	length size starting ||| size	count=1
arg	axes for ||| a b axes	count=1
arg	draw samples from a ||| size	count=9
rep	the operand [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	the bit-wise or ||| bitwise or	count=2
function	access permissions ||| lchmod	count=1
arg	mask an array ||| a	count=1
module	of hermite series ||| polynomial hermite_e	count=1
module	name [module] a ||| [module]	count=1
function	[function] in ||| [function]	count=3
function	occurrences of ||| count	count=4
module	for the connection ||| sqlite3 connection	count=1
arg	by inc and return ||| inc	count=1
arg	is found [arg_2] ||| a [arg_2] [arg_1]	count=2
module	array with the ||| core defchararray chararray	count=1
arg	along a given axis ||| axis	count=3
function	[function] arrays into ||| ravel multi [function]	count=3
module	discrete fourier transform ||| fft	count=1
module	encoding ||| sys	count=1
module	the current locale ||| locale	count=1
function	set owner of ||| chown	count=1
arg	of path ||| path	count=3
arg	a file ||| filename globals locals	count=1
function	open a ||| bltn open	count=1
arg	in [arg_1] [arg_2] ||| [arg_2] [arg_1] count	count=1
function	new array with ||| resize	count=1
function	3-d ||| hermegrid3d	count=1
arg	stream ||| stream	count=1
module	series to ||| polynomial chebyshev chebyshev	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=298
function	exponential ||| exponential	count=1
module	slice described by ||| slice	count=1
function_arg	with all [arg_2] ||| [function_1] s [arg_2]	count=2
arg	entries from tb to ||| tb	count=1
module	hermite ||| hermite_e	count=8
function	a ustar ||| pax	count=1
arg	string of data ||| data dtype copy	count=1
arg	line as ||| line header	count=2
function	true ||| true	count=1
module	convert [module] ||| [module] chebyshev	count=3
function	the code object ||| get code	count=1
function	the current ||| current	count=1
function	of environment [function_2] ||| [function_2] [function_1]	count=1
module	s and return the ||| str	count=1
function_arg	unless [arg_2] ||| [arg_2] [function_1]	count=2
arg	axis while ignoring nans ||| a axis	count=1
module	the [module] module ||| [module]	count=1
function_arg	[function_1] of substring ||| [function_1] a sub [arg_2]	count=3
module	[module_1] series whose ||| [module_2] [module_1]	count=3
arg	begindates ||| begindates	count=1
function	integers whose ratio ||| ratio	count=1
module	representing the thread ||| thread	count=1
module	database in an ||| sqlite3	count=1
arg	connected by a ||| duplex	count=1
arg	call the system call ||| pid	count=3
module	to the [module] settings ||| [module]	count=1
function_arg	[function_1] encoding and ||| [function_1] conversion mode [arg_2]	count=1
arg	return a unique temporary ||| prefix dir text	count=1
function	cursor for the ||| cursor	count=1
module	for ||| os	count=1
function	from the open ||| load	count=1
function	debug [function_2] ||| [function_2] [function_1]	count=1
module	of hermite ||| hermite_e	count=1
arg	temporary ||| dir prefix	count=1
function	a and keep it ||| insort right	count=1
function	the reciprocal ||| reciprocal	count=1
function	the symmetric difference ||| symmetric difference	count=10
arg	product of two ||| a b	count=1
function	the list ||| list	count=1
arg	array with ||| n m k dtype	count=1
module	the specified axis while ||| numpy	count=1
arg	[arg_1] to tarinfo ||| [arg_2] [arg_1]	count=12
arg	delete a directory ||| ignore_errors onerror	count=1
function	acquire ||| acquire	count=1
function	bit-wise [function_2] ||| [function_2] [function_1]	count=8
function	current theme ||| theme	count=1
function	base64 ||| base64	count=1
function_arg	title of [arg_2] ||| [arg_2] [function_1]	count=1
arg	indices of the bins ||| bins	count=1
arg	the environment ||| environ	count=1
module	while ignoring ||| numpy	count=1
arg	[arg_1] given base ||| [arg_2] [arg_1]	count=5
arg	file with arguments from ||| file	count=2
function_arg	[function_1] d ||| [function_1] a [arg_2]	count=1
function	return a right-justified version ||| rjust	count=1
arg	[arg_1] array ||| [arg_1] [arg_2]	count=10
function	elements defined in ||| element names	count=1
module	replacing the [module] ||| [module]	count=1
function_arg	[function_1] of od ||| [function_1] [arg_2]	count=2
function_arg	tangent [arg_2] ||| [arg_2] [function_1]	count=1
module	sigkill ||| popen	count=1
module	[module_1] series on ||| [module_2] [module_1] hermegrid2d	count=1
function	returns a true division ||| true divide	count=1
module	the file ||| zipfile	count=2
arg	delete a directory tree ||| path ignore_errors	count=1
module	an object to ||| numpy chararray	count=1
function	[function_1] enabled for ||| [function_1] [function_2]	count=4
module	the connection ||| sqlite3 connection	count=1
function_arg	title [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] none newshape [arg_2]	count=3
function	return the hamming ||| hamming	count=1
function_arg	input [arg_2] ||| [arg_2] [function_1]	count=2
arg	an [arg_2] ||| [arg_2] [arg_1]	count=5
arg	with [arg_2] ||| [arg_2] [arg_1]	count=5
module	[module] to ||| [module]	count=1
module	with this manager ||| logging manager	count=1
arg	remote addr and then ||| addr	count=1
arg	encoding and ||| encoding	count=1
function	for archiving and ||| get	count=1
function	whether class ||| issubclass	count=1
arg	determine if object ||| object	count=1
function_arg	[function_1] of turtle-window ||| [function_1] [arg_2]	count=1
function	xor of two arrays ||| xor	count=1
module	finder ||| macostools	count=1
function	where ||| where	count=1
function_arg	with all [arg_2] ||| [function_1] b old new [arg_2]	count=1
function	2-dimensional inverse ||| irfft2	count=1
function	load the ||| load	count=1
function	the digits ||| logical	count=1
function	passed into a particular ||| getargvalues	count=1
arg	cmd in a ||| cmd	count=2
function	mask ||| mask	count=6
arg	[arg] converted ||| [arg]	count=3
arg	in the ||| a	count=1
module	current ||| sqlite3	count=2
arg	group with [arg_2] ||| [arg_1] [arg_2]	count=1
module	a string usable ||| mimetools	count=1
module	hermite series ||| polynomial hermite_e	count=6
function	with fds set cloexec ||| cloexec	count=1
function	time [function] ||| [function]	count=3
module	process with sigterm ||| subprocess	count=1
module	matrix of ||| numpy polynomial	count=1
function	child ||| child	count=1
arg	pseudo-vandermonde matrix ||| x y z deg	count=1
arg	to file ||| file	count=1
module	python ||| sys	count=1
function	multiply ||| lagmul	count=1
arg	with [arg] ||| [arg]	count=1
arg	[arg_1] given ||| [arg_2] [arg_1]	count=2
module	and a ||| zipfile	count=2
arg	the input to an ||| a dtype order	count=1
arg	the source string by ||| string	count=1
module	[module] the unicode ||| [module]	count=1
function	sql text format ||| iterdump	count=1
module	a bool [module] where ||| [module]	count=2
arg	[a b ||| a b	count=1
module	[module_1] handler ||| [module_1] [module_2]	count=2
arg	element-wise equal within ||| equal_nan	count=2
arg	single item to the ||| int	count=1
arg	[arg_1] a ||| [arg_2] [arg_1]	count=10
function	shape ||| shape	count=1
function_arg	return elements [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
arg	a command returning ||| command mode bufsize	count=1
module	the ending records ||| zipfile zipfile	count=1
function	list of elements defined ||| element names	count=1
function_arg	[function_1] rootobject as ||| [function_1] to resource [arg_2]	count=1
function	division of the ||| divide	count=1
arg	[arg_1] [arg_2] ||| [arg_1] decorator [arg_2]	count=9
module	recursively delete a ||| shutil	count=1
arg	payment ||| rate per	count=1
module	kill ||| subprocess popen	count=1
arg	node [arg_2] ||| docstring [arg_1] [arg_2]	count=1
arg	the current state ||| state	count=1
arg	word ||| word	count=1
function	otherwise set [function] ||| [function]	count=2
module	array ||| core defchararray chararray	count=2
arg	parse a [arg] or ||| fp [arg]	count=1
arg	look like the wrapped ||| wrapped assigned updated	count=1
arg	convert ||| pol	count=2
function	in effect ||| idiv	count=1
arg	of b to ||| a b	count=1
function	has a mapping ||| mapping	count=1
module	draw samples from a ||| randomstate	count=2
module	array with the same ||| core defchararray chararray	count=1
arg	behaviour: if flag is ||| flag	count=1
module	the connection ||| connection	count=1
module	we can note ||| logging logger	count=1
arg	return the ||| a b	count=1
arg	a directory ||| onerror	count=1
arg	find the n ||| n iterable key	count=2
function	is enabled ||| is enabled	count=2
function	[function_1] type of ||| [function_1] completion [function_2]	count=1
function	initgroups ||| initgroups	count=1
function	the standard [function_2] ||| [function_2] [function_1]	count=2
module	file ||| bz2file	count=1
function	pipe ||| pipe	count=2
arg	float [arg] is ||| [arg]	count=1
module	of ||| numpy chararray	count=1
module	set with the ||| set	count=5
function	getter on ||| getter	count=1
module	in local time ||| time	count=1
arg	cmd in a shell ||| cmd	count=2
function_arg	<<= [arg_2] ||| [function_1] [arg_2]	count=1
function	python function to ||| function	count=1
module	of the masked array ||| numpy ma	count=1
module	drawn after the call ||| turtle	count=1
function	items of ||| assert array	count=1
arg	condition ? true ||| condition true	count=1
module	string element in a ||| numpy core defchararray	count=1
function_arg	the specified [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] length width ||| [arg_1] [arg_2]	count=1
module	element [module_2] ||| [module_2] [module_1]	count=4
function	treating not ||| nancumsum	count=1
arg	new item ||| item	count=1
arg	formatted year as ||| theyear width	count=1
function_arg	32-bit [arg_2] ||| [arg_2] [function_1]	count=1
module	of a chebyshev series ||| numpy polynomial chebyshev	count=1
function	the standard deviation along ||| nanstd	count=1
module	linalg functions ||| linalg	count=1
arg	a mime ||| is_mime	count=1
arg	start stop ||| start stop	count=2
arg	by the kind ||| kind order	count=1
function	and vice versa ||| swapcase	count=1
module	rest ||| cstringio stringi	count=1
function	[function_1] exponential ||| [function_1] [function_2]	count=2
arg	a hermitian or symmetric ||| a uplo	count=1
module	what method [module] use for ||| [module]	count=1
module	ctypes instance ||| ctypes	count=1
function	1-d slices along ||| along	count=1
function	close the file and ||| close	count=1
arg	delete a directory tree ||| path ignore_errors onerror	count=1
function	implementation branch ||| branch	count=1
arg	two ||| b	count=3
function	subtract ||| hermesub	count=1
module	bytearray ||| bytearray	count=2
module	from ||| sqlite3 cursor	count=1
function	return a cursor ||| cursor	count=1
arg	bins to ||| bins right	count=1
function	convert a 16-bit ||| ntohs	count=1
arg	a url ||| url scheme allow_fragments	count=2
arg	key and return ||| key	count=1
function_arg	convert [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	integer represented by ||| atoi	count=1
function	source code ||| getsource	count=1
module	the database in ||| connection	count=1
function	floor ||| floor	count=1
function	vertices of a polygon ||| begin poly	count=1
module	the process with sigkill ||| subprocess	count=1
arg	src to ||| src	count=1
function	a copy ||| copy	count=2
function_arg	convert an 8bit [function_1] [arg_2] quoted-printable ||| mimify mimify [function_1] [arg_2]	count=2
module	distribution mean=0 stdev=1 ||| numpy random	count=1
module	in ||| str	count=1
function_arg	[function_1] fd ||| [function_1] [arg_2]	count=1
arg	a number to ||| number	count=1
function_arg	[function_1] [arg_2] ||| [function_1] series [arg_2]	count=1
function	of this ||| cast	count=1
module	interpreter by ||| sys	count=1
function	sets progress handler callback ||| set progress handler	count=1
arg	[arg_1] a matrix ||| [arg_1] [arg_2]	count=1
function	print a ||| print	count=2
arg	[arg_1] y ||| __builtin__ cmp [arg_1] [arg_2]	count=2
function	the sign ||| copysign	count=1
module	random samples from a ||| random	count=2
function_arg	get a [arg_2] ||| [function_1] data package [arg_2]	count=2
arg	to a ||| a	count=2
function	set the orientation ||| setheading	count=1
arg	s in [arg_2] ||| [arg_1] [arg_2]	count=2
module	a linear matrix equation ||| numpy	count=1
function	[function] that ||| find [function]	count=3
function	initgroups to ||| initgroups	count=1
function_arg	- [arg_2] ||| [arg_2] [function_1]	count=1
module	[module_1] from ||| [module_1] [module_2]	count=3
module	dtype ||| dtype	count=1
arg	? true ||| true	count=1
rep	number of [function_arg_2] ||| [module_1] [function_arg_2]	count=8
function	arrays share [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] process ||| [function_2] [function_1]	count=4
arg	python object to a ||| object	count=1
module	and a write ||| zipfile zipfile	count=1
function	code from ||| wexitstatus	count=1
function	message [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] object tarinfo' ||| [arg_2] [arg_1]	count=3
module	the file ||| zipfile zipfile	count=1
function_arg	+ [arg_2] ||| [arg_2] [function_1]	count=1
module	object to ||| chararray	count=1
module	of this logger ||| logger	count=1
function_arg	[function_1] to x ||| [arg_2] [function_1]	count=4
function	intersection of itself and ||| intersection	count=2
function	the data along the ||| nanpercentile	count=1
function	invalid data ||| fix invalid	count=1
function	check that all items ||| array max	count=1
module	of the array with ||| numpy	count=1
function	defined by the specified ||| record	count=1
module	copy an element ||| core defchararray	count=1
function	matrix rank of array ||| matrix rank	count=1
function	an archive format ||| archive format	count=2
function	create a directory ||| mkdir	count=1
arg	in [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=1
function	+= b for ||| iconcat	count=1
arg	a single file ||| file args	count=1
function	's group id ||| getgid	count=1
function_arg	thread and [arg_2] ||| [function_1] [arg_2]	count=1
arg	args replacing ||| args	count=1
arg	data as a 1-d ||| data	count=1
function_arg	register a [arg_2] ||| [function_1] [arg_2]	count=3
module	a set with ||| sets set	count=3
module	of ||| turtle	count=1
arg	tb ||| value tb	count=1
arg	s ||| s table deletions	count=1
function	debug a test script ||| debug script	count=1
function	[function] return ||| [function]	count=1
function	main ||| main	count=2
module	canvas and return its ||| turtle	count=1
arg	associate levelname with level ||| level levelname	count=1
module	string and ||| string	count=1
arg	[arg] / ||| [arg]	count=1
function	underlying logger is enabled ||| is enabled	count=1
module	method representing the thread ||| threading thread	count=1
function	remove the completion display ||| completion display matches hook	count=1
arg	draw ||| size	count=1
module	series to another ||| polynomial	count=3
module	's calendar as ||| calendar	count=1
function	effect ||| idiv	count=1
module	the [module] as ||| [module]	count=1
function	pseudo-vandermonde ||| lagvander	count=1
function	string in the same ||| string	count=1
function	basis ||| basis	count=3
rep	set [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function_arg	set the [arg_2] ||| [arg_2] [function_1]	count=2
module	draw samples from a ||| random randomstate	count=2
function	a [function_1] [function_2] ||| [function_1] [function_2]	count=2
module	of ||| polynomial laguerre	count=2
function	roll back the current ||| rollback	count=1
function_arg	[function_1] given axis ||| [function_1] [arg_2]	count=3
arg	towards b ||| b	count=1
arg	[arg_1] sub in ||| [arg_2] [arg_1]	count=6
module	masked ||| ma masked_array	count=1
arg	file using ||| mode buffering	count=1
module	get the ||| cstringio stringo	count=1
function	resource to the resource ||| to resource	count=1
arg	lowest index [arg] where ||| [arg]	count=1
function	the completion [function_2] ||| [function_2] [function_1]	count=1
function	a [function] ||| [function]	count=11
module	the specified axis ||| numpy	count=1
function	section 3 ||| is third party	count=1
arg	> ||| iterable cmp key reverse	count=1
arg	the non-masked elements of ||| keepdims	count=1
module	sets as ||| frozenset	count=3
function	with ||| replace	count=2
arg	a condition ||| condition	count=1
function	the sum ||| sum	count=1
arg	object is a ||| object	count=5
module	chebyshev series whose ||| numpy polynomial chebyshev	count=2
arg	a directory ||| path ignore_errors onerror	count=1
function_arg	[function_1] name' ||| [function_1] [arg_2]	count=1
arg	the string returning a ||| string	count=1
arg	the specified width padded ||| width	count=2
function	[function_1] the completion ||| [function_2] [function_1]	count=1
module	of two ||| numpy	count=4
module	usable as a ||| mimetools	count=1
arg	text returning ||| text width	count=2
module	database in ||| sqlite3 connection	count=1
module	applying ufunc along one ||| numpy ufunc	count=1
arg	[arg_1] tarinfo' to ||| [arg_1] [arg_2]	count=3
module	broadcasted result’s iterator s ||| broadcast	count=1
function	for archiving ||| archive	count=1
module	of the array with ||| chararray	count=1
module	the eigenvalues ||| numpy linalg	count=1
function	8bit [function] ||| mimify [function]	count=2
function	of the decimal ||| decimal	count=1
arg	piecewise-defined function ||| x condlist funclist args kw	count=1
module	series ||| numpy polynomial	count=67
module	hermite series to data ||| numpy polynomial hermite_e	count=1
function	instantiating a logger ||| get logger	count=1
function	a multipart boundary ||| choose boundary	count=1
function	convert the input ||| asarray	count=1
function	invalid data ||| invalid	count=1
function	[function_1] normal ||| [function_1] [function_2]	count=2
function	returning the default ||| get default	count=1
module	matrix ||| numpy matrix	count=3
module	legendre series from ||| polynomial legendre	count=1
function	's effective group id ||| getegid	count=1
module	simplify the ||| chararray	count=1
arg	integer or long integer ||| number	count=1
function	lock ||| lock	count=2
function	formats ||| format parser	count=1
function	[function_1] implementation revision ||| [function_2] [function_1]	count=4
arg	in bytes b[start:end] ||| start end	count=1
arg	[arg_1] sub is ||| [arg_2] [arg_1]	count=7
arg	logarithm [arg] ||| [arg]	count=3
function_arg	[function_1] resource from ||| [function_1] data package [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] radius extent [arg_2]	count=3
arg	create an ||| object dtype	count=2
function_arg	v [function_1] [arg_2] the corresponding value ||| [function_1] [arg_2]	count=1
arg	if an object is ||| object	count=1
function	a pipe ||| pipe	count=2
function_arg	[function_1] twos ||| [arg_2] [function_1]	count=2
arg	to the other ||| other	count=1
arg	command returning ||| command	count=1
function	registers a converter ||| register converter	count=3
function_arg	integer power n ||| power m n	count=1
function	the owner ||| lchown	count=1
module	we ||| logging logger	count=1
arg	host and port ||| host port	count=3
arg	given number of decimals ||| decimals out	count=1
module	interaction of the ||| numpy	count=1
function	a formatted dump of ||| dump	count=1
module	tarinfo ||| tarfile tarinfo	count=1
module	with ||| subprocess popen	count=2
arg	determine if two ||| a b max_work	count=1
function	> ||| from iterable	count=1
arg	level' ||| level	count=1
arg	format a python object ||| object indent width depth	count=1
module	of two arrays ||| numpy	count=3
module	abstract ||| abc	count=1
module	it doesn't yet ||| manager	count=1
module	of ||| chararray	count=1
module	generate a [module] from ||| [module]	count=1
module	of a hermite ||| hermite	count=1
arg	axis ||| axis dtype	count=3
function	to radians ||| radians	count=2
module	pseudo-vandermonde ||| polynomial laguerre	count=2
module	s ||| str	count=1
module	evaluate a 2-d [module_1] [module_2] cartesian product ||| [module_2] [module_1] chebgrid2d	count=1
module	fft of a ||| numpy fft	count=1
arg	tarinfo' to the archive ||| fileobj	count=1
function	[function_1] and ||| [function_1] [function_2]	count=2
module	an ssl ||| ssl	count=1
arg	unicode [arg] ||| s width [arg]	count=2
module	an element [module_2] ||| [module_2] [module_1]	count=4
function	if the ||| if	count=1
function	transpose ||| get t	count=1
function	return elements [function] ||| [function]	count=1
arg	the given thing ||| thing	count=1
function	resize the memory buffer ||| resize	count=1
module	process ||| popen	count=2
function	[function] version of ||| der_cert [function]	count=1
function	returns a sha256 ||| sha256	count=2
arg	m ||| m	count=2
arg	query or sets the ||| query_opt	count=1
function	returns the sum of ||| sum	count=1
module	an ||| sqlite3	count=1
arg	not found ||| sub start end	count=2
arg	value [arg] to the ||| [arg]	count=1
arg	shape to an array ||| a newshape	count=1
function	usable as a ||| choose	count=1
function	for the ||| get	count=2
module	hermite_e [module_2] ||| [module_2] [module_1]	count=3
function	make a logrecord whose ||| make log	count=1
arg	heap ||| heap	count=1
arg	sep ||| sep maxsplit	count=2
module	to ||| decimal context	count=1
function	a hexadecimal representation ||| hex	count=1
arg	n objects from the ||| n	count=1
arg	sub [arg_2] ||| [arg_1] [arg_2]	count=2
function	return package logger -- ||| logger	count=1
function_arg	's effective [arg_2] ||| [function_1] [arg_2]	count=1
function	printing options ||| printoptions	count=1
function	is a [function_2] ||| [function_1] [function_2]	count=1
function	gzip content ||| gzip	count=1
arg	fork of path ||| path	count=1
module	move [module] to an ||| [module]	count=1
function_arg	[function_1] name' to ||| [function_1] [arg_2]	count=1
arg	rather than creating ||| nbytes flags	count=1
function_arg	[function_1] [arg_2] ||| [function_1] tarinfo [arg_2]	count=14
function	's first coordinate ||| setx	count=1
arg	open file and ||| file	count=1
function	[function_1] * ||| [function_1] [function_2]	count=1
function	that all items ||| assert array max	count=1
arg	of a and b ||| b	count=1
function	the given family to ||| ntop	count=1
function	pseudo-vandermonde matrix of ||| lagvander	count=1
module	legendre ||| numpy polynomial legendre	count=1
module	masked array along the ||| ma	count=1
function	quoted-printable [function] ||| [function]	count=3
arg	a unique temporary file ||| prefix dir	count=2
arg	k else false ||| k	count=1
arg	[arg_1] radius ||| [arg_2] [arg_1]	count=4
module	context ||| decimal context	count=2
function	object returns [function] ||| recv [function]	count=1
arg	a linear ||| a	count=1
module	logging ||| logging	count=8
function	right-justified in ||| rjust	count=1
module	all [module] as ||| [module]	count=1
function	clumps of a ||| clump masked	count=1
arg	loan principal ||| when	count=1
arg	a sequence and b ||| a b	count=1
module	the specified logging ||| logging	count=1
module	draw random samples from ||| numpy random	count=1
module	the ||| numpy chararray	count=3
module	scalar ||| numpy core defchararray chararray	count=1
arg	up to desired ||| desired	count=1
function	a list of ||| list	count=1
function	[function_1] new ||| [function_2] [function_1]	count=1
function	keyboardinterrupt in [function_2] ||| [function_2] [function_1]	count=1
arg	delete a ||| onerror	count=1
arg	src ||| src	count=5
module	with ||| chararray	count=1
arg	to a linear matrix ||| a	count=1
function	[function_1] type of ||| [function_2] [function_1]	count=1
arg	virtual subclass of ||| cls subclass	count=1
arg	unique temporary file ||| prefix dir	count=2
arg	a number field ||| digits format	count=1
function_arg	[function_1] source string ||| [function_1] pattern [arg_2]	count=1
arg	exponent is ||| rounding context	count=1
function_arg	a circle [arg_2] ||| [function_1] radius [arg_2]	count=1
function	remove all items from ||| clear	count=1
function	flags to ||| flags	count=1
module	database in ||| sqlite3	count=1
function	with invalid ||| invalid	count=1
module	weekday ||| calendar	count=1
module	the masked ||| numpy ma	count=1
function_arg	right-justified version [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] part ||| [arg_2] [function_1]	count=3
module	of the data along ||| numpy	count=1
arg	values to 2*pi complement ||| p discont axis	count=1
arg	data as a ||| data	count=1
function	shape of ||| shape	count=1
module	2-d [module] ||| [module]	count=15
function	suite ||| suite	count=1
function_arg	power of b ||| power a b	count=1
function_arg	[function_1] file and ||| [arg_2] [function_1]	count=1
arg	the condition [arg_2] ||| [arg_1] [arg_2]	count=2
module	returns ||| decimal decimal	count=4
arg	if float [arg] is ||| [arg]	count=1
function	list of their names ||| getnames	count=1
arg	[arg] match ||| pattern [arg]	count=2
module	thread ||| handler	count=2
function	items ||| array max	count=1
function	child ||| iter child	count=1
function	the indices to access ||| indices	count=1
arg	by distance ||| distance	count=2
function	write ||| write plist	count=1
function	[function_1] config ||| [function_1] [function_2]	count=1
arg	the given base ||| base	count=3
function	[function_1] completion ||| [function_2] [function_1]	count=1
function	set a python function ||| set string function	count=1
function	left-justified version of ||| ljust	count=1
arg	of length width ||| width fillchar	count=14
module	called ||| tarfile tarfile	count=1
arg	recursively delete a ||| path ignore_errors onerror	count=1
function	find contiguous unmasked data ||| flatnotmasked contiguous	count=1
module	new [module] given ||| [module]	count=1
function	set a python ||| set	count=1
function	apply ||| apply	count=1
arg	along the specified axis ||| axis	count=3
arg	data in a string ||| string	count=1
function	a mapping ||| mapping	count=1
arg	tb to ||| tb	count=1
arg	gaussian distribution ||| loc scale size	count=2
module	of the array ||| ma masked_array	count=1
function	of the ||| nanpercentile	count=1
function_arg	[function_1] file for ||| [function_1] [arg_2]	count=1
arg	[arg_1] match pat ||| [arg_1] [arg_2]	count=3
function	that all items of ||| assert array max	count=1
arg	doc ||| doc	count=1
arg	roots ||| roots	count=2
function	reset the ||| reset	count=1
function_arg	[function_1] two numbers ||| [arg_2] [function_1]	count=1
function_arg	format the [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	the power [arg_2] ||| [arg_2] [function_1]	count=3
function	by the unicode implementation ||| getdefaultencoding	count=1
arg	[arg_1] y ||| laggrid2d [arg_1] [arg_2]	count=3
arg	delete a directory tree ||| onerror	count=1
arg	parts ||| infile outfile	count=1
module	the resultset ||| sqlite3	count=1
function	the data [function] smallest ||| min scalar [function]	count=1
function	data ||| data	count=2
function	// = ||| ifloordiv	count=1
function_arg	[function_1] begindates and ||| [arg_2] [function_1]	count=1
function	terminate the process with ||| terminate	count=1
arg	a copy of s ||| s	count=3
arg	n ||| n iterable key	count=2
function	return a duplicate ||| dup	count=1
module	compares ||| decimal context	count=1
module	in an ssl ||| ssl	count=1
function	its [function] function ||| [function]	count=3
arg	values in od ||| od	count=1
module	returns ||| decimal context	count=3
arg	operation op on ||| operation	count=1
module	array to the ||| numpy chararray	count=1
arg	begindates and ||| begindates	count=1
arg	substring sub in ||| sub start end	count=3
arg	of the inputs element-wise ||| x1 x2	count=1
arg	traceback ||| tb	count=1
function	[function_1] source ||| [function_1] [function_2]	count=1
function	[function_1] division ||| [function_1] [function_2]	count=3
function	a cursor ||| cursor	count=1
function	the top of the ||| getblock	count=1
arg	[arg_1] c ||| [arg_2] [arg_1]	count=1
module	datetime ||| datetime	count=1
module	non-masked ||| ma maskedarray	count=1
function_arg	[function_1] an ||| [function_1] [arg_2]	count=7
arg	in a [arg_2] ||| [arg_1] [arg_2]	count=1
function	set [function] themename refreshes ||| [function]	count=1
arg	find the n ||| n iterable	count=2
module	return the ||| sys	count=2
arg	not found ||| b sub start end	count=1
module	series ||| polynomial hermite	count=1
function	code object for ||| code	count=1
arg	[arg_1] file *database* ||| [arg_2] [arg_1]	count=1
arg	shape to an array ||| a newshape order	count=1
arg	[arg] with ||| [arg] width	count=2
function	a new bounded semaphore ||| bounded semaphore	count=1
function_arg	[function_1] source ||| [arg_2] [function_1]	count=1
module	legendre series on the ||| polynomial legendre	count=2
module	weekday ||| calendar calendar	count=1
arg	statement under profiler ||| statement	count=1
arg	delete a directory ||| onerror	count=1
function_arg	return [function_1] [arg_2] ||| [function_1] condition [arg_2]	count=2
arg	boolean array where two ||| a b	count=1
arg	a file ||| filename globals	count=1
arg	rootobject as [arg_2] ||| [arg_1] path [arg_2]	count=1
function	to 1-d slices along ||| along axis	count=1
module	hermite series by ||| polynomial hermite_e	count=2
function_arg	display [arg_2] ||| [arg_2] [function_1]	count=1
module	on the ||| turtle	count=1
function_arg	[function_1] condition ||| [arg_2] [function_1]	count=10
module	mode ||| zipfile zipfile	count=1
function	non-zero values ||| nonzero	count=1
arg	both type1 ||| type1	count=1
arg	of a c ||| c	count=1
arg	by angle units ||| angle	count=3
function	numeric [function_2] ||| [function_1] [function_2]	count=1
module	depth of the ||| sys	count=1
module	[module_1] logger ||| [module_1] [module_2]	count=2
module	the interpreter immediately ||| os	count=1
function	the symmetric [function_2] ||| [function_2] [function_1]	count=17
arg	if path ||| path prefix	count=1
function_arg	[function_1] file using ||| [function_1] [arg_2]	count=1
function	division ||| divide	count=1
function_arg	configuration limit [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] given base ||| [arg_1] [arg_2]	count=2
module	to a [module] ||| [module]	count=1
function	the numeric ||| numeric	count=1
arg	an array to ||| a	count=2
function_arg	compile the [arg_2] ||| [function_1] [arg_2]	count=4
function	encode a ||| encode	count=1
function	for archiving and ||| archive	count=1
module	an object ||| chararray	count=1
function	has a ||| has	count=1
arg	query in [arg_2] ||| cgi parse fp [arg_2] [arg_1]	count=1
arg	qth percentile ||| q	count=1
function	the union of ||| union	count=2
module	more sets ||| frozenset	count=1
arg	the n ||| n	count=2
function	a pipe [function_2] ||| [function_2] [function_1]	count=1
function	has ||| has	count=1
module	format ||| logging bufferingformatter	count=1
arg	a fill value ||| a mask copy fill_value	count=1
function	of the line ||| line	count=1
arg	format a python ||| indent width	count=1
function	nice html ||| html	count=1
function	[function_1] exponential distribution ||| [function_2] [function_1]	count=2
module	[module_1] series ||| [module_2] [module_1] leggrid2d	count=1
function	as html ||| print	count=1
module	of handling floating-point ||| numpy	count=1
arg	new shape to an ||| a newshape order	count=1
arg	split a doc ||| doc	count=1
function_arg	[function_1] from ||| [function_1] [arg_2]	count=4
function_arg	[function_1] a sequence ||| [arg_2] [function_1]	count=3
function_arg	the hamming [arg_2] ||| [arg_2] [function_1]	count=1
module	an ||| numpy	count=4
function_arg	[function_1] to y ||| [arg_2] [function_1]	count=3
function	time of the ||| time	count=1
module	archive as a list ||| tarfile tarfile	count=1
function_arg	condition number [arg_2] ||| [arg_2] [function_1]	count=3
function	is a space or ||| is_character_junk	count=1
arg	lines in s ||| s	count=1
module	the masked array ||| numpy ma maskedarray	count=1
arg	product of x y ||| x y	count=4
function	that generated a ||| restore	count=1
function	a rayleigh ||| rayleigh	count=2
function	supported formats for archiving ||| get archive formats	count=1
module	of the series ||| numpy polynomial	count=2
arg	true : false ||| true false	count=1
arg	tree ||| path ignore_errors	count=1
function_arg	[function_1] path ||| [arg_2] [function_1]	count=2
function_arg	shape of [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] pat ||| [arg_1] [arg_2]	count=3
function	by the specified ||| log record	count=1
function_arg	not [arg_2] ||| [function_1] [arg_2]	count=1
module	masked array ||| ma	count=6
function	the ||| resize	count=1
module	new array ||| numpy	count=1
arg	paths matching a pathname ||| pathname	count=1
function_arg	the blackman [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] od ||| [function_1] [arg_2]	count=2
arg	database file filename and ||| file flag	count=1
module	ssl [module_2] ||| [module_1] [module_2]	count=2
arg	type1 and type2 ||| type1 type2	count=3
module	[module] unistr ||| [module]	count=1
function	mapping ||| mapping	count=1
arg	whether an object is ||| object	count=1
module	to simplify the interaction ||| numpy	count=1
function	suppress the ||| compress	count=1
function	for ||| archive	count=1
function	the standard exponential ||| standard exponential	count=2
function_arg	circle [arg_2] ||| [arg_2] [function_1]	count=3
module	[module_1] series on ||| [module_2] [module_1] chebgrid2d	count=1
arg	least-squares solution to a ||| b rcond	count=1
function	of elements defined ||| element names	count=1
arg	name ||| name	count=8
function	key value pairs ||| items	count=1
arg	in [arg_2] ||| [arg_2] [arg_1]	count=6
arg	substring sub in string ||| sub start end	count=1
arg	object ||| object name value	count=1
function	within a given ||| arange	count=1
arg	the wrapped ||| wrapped	count=1
function	1-d slices along ||| along axis	count=1
function	new view ||| view	count=2
function_arg	absolute values [arg_2] ||| [arg_2] [function_1]	count=1
function	import ||| import	count=1
module	random integers from ||| random randomstate	count=3
function	pack a python object ||| pack	count=1
function	line [function_2] ||| [function_2] [function_1]	count=1
function	create a ||| mkdir	count=1
arg	python ||| indent width	count=1
module	a logger which ||| logging logger	count=2
function_arg	[function_1] limit ||| [function_1] etype value tb [arg_2]	count=2
function	returns [function] ||| der_cert [function]	count=1
function_arg	libc [arg_2] ||| [arg_2] [function_1]	count=1
function	list of ||| list	count=2
module	operand to ||| decimal context	count=2
function_arg	a complete [arg_2] ||| [arg_2] [function_1]	count=1
arg	shape with [arg] ||| [arg]	count=1
arg	lock operation op on ||| operation	count=1
function	history [function_2] ||| [function_1] [function_2]	count=1
module	this manager ||| manager	count=1
arg	a sockaddr ||| sockaddr	count=1
function	filling ||| fill	count=2
module	of the given ||| ma	count=1
module	array flags writeable aligned ||| numpy core defchararray chararray	count=1
module	stack trace entries ||| traceback	count=1
arg	text ||| text	count=7
arg	return a day ||| day	count=1
function	day of ||| weekday	count=1
module	draw samples from ||| random randomstate	count=4
module	legendre series whose ||| numpy polynomial legendre	count=2
module	units to ||| turtle	count=1
arg	[arg_1] [arg_2] not ||| [arg_2] [arg_1]	count=2
function	return the difference ||| difference	count=1
arg	a single item ||| int	count=1
function	series basis ||| basis	count=2
function	alphabet ||| b64encode	count=1
arg	given base ||| base	count=3
arg	integer [arg] range [a ||| [arg]	count=1
arg	sub in bytes b[start:end] ||| sub start end	count=1
function_arg	[function_1] characters removed ||| [arg_2] [function_1]	count=2
module	the data along ||| numpy	count=1
function	tangent ||| tan	count=1
arg	hyperbolic sine [arg] ||| [arg]	count=2
arg	[arg_1] environment ||| [arg_2] [arg_1]	count=1
module	hermite series to data ||| polynomial hermite_e	count=1
arg	file for low level ||| filename flag mode	count=1
arg	join a base ||| base	count=2
arg	substring sub [arg_2] ||| [arg_1] [arg_2]	count=1
module	return ||| linalg	count=1
function_arg	and [arg_2] ||| [function_1] [arg_2]	count=1
arg	insert item x in ||| a x	count=5
function	use sequencematcher to return ||| get close	count=1
arg	that of exp ||| exp rounding	count=1
function	expand the shape of ||| expand dims	count=1
function_arg	[function_1] of a ||| [arg_2] [function_1]	count=3
arg	[arg_1] fun ||| [arg_2] [arg_1]	count=6
arg	equal up to desired ||| actual desired	count=1
function_arg	[function_1] the two ||| [function_1] [arg_2]	count=1
function	// ||| floordiv	count=1
function	a duplicate ||| dup	count=1
module	from the ||| sqlite3 cursor	count=1
module	alphabetic [module] there is ||| [module]	count=1
module	copy of the turtleshape ||| turtle	count=1
arg	the string s with ||| s	count=1
module	of the data ||| numpy	count=1
function_arg	open [arg_2] ||| [function_1] [arg_2]	count=7
function	pipe with ||| pipe	count=1
arg	sine [arg] ||| [arg]	count=3
arg	number of times b ||| b	count=1
arg	return the element-wise ||| x1 x2	count=1
arg	ip address from string ||| ip	count=1
arg	data-type ||| dtype	count=1
arg	return a partitioned copy ||| kth axis kind order	count=1
function	[function_1] the class ||| [function_1] logger [function_2]	count=2
module	from ||| random	count=3
arg	to a [arg] specification ||| string [arg]	count=1
function	specified axis while ignoring ||| nanpercentile	count=1
function_arg	sum [arg_2] ||| [arg_2] [function_1]	count=2
function	warning ||| warning	count=1
arg	and/or [arg] and/or ||| [arg] kind	count=2
module	polynomial ||| polynomial hermite_e hermitee	count=1
function	current ||| current	count=1
arg	file executable ||| executable	count=1
arg	[arg_1] to file ||| [arg_2] [arg_1]	count=3
function	hqx [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] a signal ||| [arg_1] [arg_2]	count=1
module	the [module] is drawing ||| [module]	count=1
arg	partitioned copy ||| kth axis kind order	count=1
function	the indices ||| indices	count=2
module	linear matrix equation ||| numpy linalg	count=1
arg	and a set of ||| mode	count=1
function	not equal [function_2] ||| [function_2] [function_1]	count=2
arg	on the [arg_1] [arg_2] ||| polygrid2d [arg_1] [arg_2]	count=1
function	generated a ||| restore	count=1
function	__future__.division is in effect ||| itruediv	count=1
function	domain ||| domain	count=1
function_arg	the startup_hook function ||| startup hook function	count=1
module	to new file ||| bz2file	count=1
function	remove ||| pop	count=1
function	internal buffer ||| addressof	count=1
function_arg	median [arg_2] ||| [arg_2] [function_1]	count=1
arg	file ||| file	count=13
function	the class of ||| number class	count=1
arg	of enddates ||| enddates	count=1
arg	recursively delete a ||| onerror	count=1
module	masked array to a ||| ma	count=1
function	keys ||| keys	count=3
function	that all items of ||| assert array max ulp	count=1
function	slices along ||| along axis	count=1
module	matrix of ||| polynomial	count=1
arg	given ||| extent	count=1
arg	to insert item x ||| x	count=4
function_arg	occurrences of [arg_2] ||| [function_1] s sub [arg_2]	count=2
arg	desired ||| desired	count=1
module	invalid characters [module] http url ||| [module]	count=1
function	array where ||| where	count=1
function	float ||| float	count=1
arg	the heap ||| heap	count=1
arg	id of path to ||| path	count=2
module	the process with sigkill ||| popen	count=1
function	the intersection of ||| intersection	count=2
function_arg	scalar type [arg_2] ||| [function_1] [arg_2]	count=1
module	are alphanumeric [module] there ||| [module]	count=1
function_arg	append a [arg_2] ||| [function_1] b [arg_2]	count=3
function_arg	+= b [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] b to ||| [arg_2] [function_1]	count=3
function	part of ||| part	count=2
arg	specified by the kind ||| kind order	count=1
arg	[arg] using ||| member [arg]	count=3
module	draw samples from ||| numpy random randomstate	count=4
module	a 2-d [module] on ||| [module]	count=1
module	of the matrix ||| matrix	count=3
function	given family to ||| ntop	count=1
function	caller so ||| caller	count=1
arg	where two ||| b	count=1
arg	an array ||| a axes	count=1
function	callback ||| callback	count=1
function	the integer represented by ||| atoi	count=1
function	owner and group id ||| chown	count=1
arg	entries from tb ||| tb	count=1
function	the vertices [function_2] ||| [function_1] [function_2]	count=1
function	that all items of ||| array max	count=1
function_arg	|= [arg_2] ||| [arg_2] [function_1]	count=1
arg	scale a geometric progression ||| start stop num endpoint	count=1
module	legendre [module_2] ||| [module_2] [module_1] leggrid2d	count=5
module	used by the ||| logging	count=1
function_arg	[function_1] [arg_2] return ||| [function_1] [arg_2]	count=4
function_arg	[function_1] object ||| [function_1] [arg_2]	count=6
module	legendre series from ||| numpy polynomial legendre	count=2
module	a new lock object ||| thread	count=1
arg	[arg_1] object tarinfo' ||| [arg_1] [arg_2]	count=3
function	enabled [function_2] ||| [function_2] [function_1]	count=1
module	legendre series on ||| polynomial legendre	count=2
function	write text at ||| write	count=1
function	[function_1] root ||| [function_2] [function_1]	count=2
function	the module ||| module	count=1
arg	subsection is not found ||| b sub start end	count=2
function	sequence [function_2] ||| [function_1] [function_2]	count=1
arg	buffer ||| buffer	count=1
arg	2*pi complement ||| p discont axis	count=1
module	of an ||| numpy	count=3
module	a list ||| shutil	count=1
function_arg	print exception [arg_2] ||| [arg_2] [function_1]	count=1
arg	value ||| value	count=4
module	associated with ||| zipimport zipimporter	count=1
function	archiving and unarchiving ||| get archive	count=1
arg	in the string s ||| s	count=1
function_arg	[function_1] values ||| [function_1] [arg_2]	count=1
arg	and exponent [arg] ||| [arg]	count=1
function	a flattened ||| a1	count=1
module	fft of ||| numpy fft	count=3
function	of bytes ||| bytes	count=1
arg	? true [arg_2] ||| [arg_2] [arg_1]	count=1
arg	tarinfo object tarinfo' ||| tarinfo fileobj	count=3
module	distribution ||| random random	count=8
arg	into a single file ||| file	count=1
module	a masked ||| ma	count=1
arg	x2 element-wise ||| x2	count=8
arg	values of d ||| d	count=1
module	array of ||| numpy	count=1
function	return the shape ||| shape	count=1
function_arg	[function_1] path ||| [function_1] [arg_2]	count=2
function	return a nice html ||| html	count=1
module	to the dump of ||| sqlite3 connection	count=1
function	to the left ||| left	count=1
module	evaluate a 2-d [module_1] [module_2] product ||| [module_2] [module_1] leggrid2d	count=1
module	of ||| urllib	count=1
module	polynomial ||| polynomial polynomial	count=7
function_arg	return the docstring [function_1] [arg_2] ||| [function_1] docstring [arg_2]	count=1
function	return a formatted dump ||| dump	count=1
module	polynomial of ||| numpy polynomial hermite_e	count=1
module	of legendre series ||| numpy polynomial legendre	count=2
module	true if the operand ||| context	count=1
arg	specified by the kind ||| kind	count=1
arg	exponent [arg] as ||| [arg]	count=1
module	array ||| ma masked_array	count=5
arg	a [arg] ||| b width [arg]	count=1
arg	a file using the ||| buffering	count=1
arg	pseudo-vandermonde matrix of ||| z deg	count=1
module	a ||| mimetools	count=2
arg	[arg_1] ch ||| [arg_2] [arg_1]	count=4
arg	filename ||| filename	count=3
function	[function_1] a new ||| [function_1] [function_2]	count=1
module	underlying ssl channel ||| ssl sslsocket	count=1
function	set difference ||| setdiff1d	count=1
arg	data ||| data	count=4
module	close ||| zipfile zipfile	count=1
arg	path or if ||| prefix onerror	count=1
arg	additional version information ||| version	count=1
arg	series ||| series	count=1
function	print [function_2] ||| [function_2] [function_1]	count=7
arg	a string of data ||| data	count=1
function_arg	[function_1] present value ||| [arg_2] [function_1]	count=3
arg	run statement under profiler ||| statement	count=1
function	+ b ||| concat	count=1
function_arg	[function_1] condition is ||| [arg_2] [function_1]	count=2
function	to open a file ||| open	count=1
arg	the bins to ||| bins	count=1
function_arg	tries [function_1] [arg_2] that ||| [function_1] executable [arg_2] chunksize	count=1
module	the legendre ||| polynomial legendre	count=1
module	a ||| thread	count=1
module	the i/o ||| logging handler	count=2
function	horizontally column ||| hstack	count=1
arg	given string ||| string	count=1
arg	a directory tree ||| ignore_errors onerror	count=1
arg	args ||| args	count=3
arg	read up [arg] at most ||| [arg]	count=1
arg	== [arg] positive ||| x [arg]	count=1
arg	/= b when __future__.division ||| a b	count=2
function	data [function] smallest size ||| min scalar [function]	count=1
function	recording the vertices of ||| begin	count=1
module	property ||| property	count=3
arg	cartesian product [arg_1] [arg_2] ||| hermgrid2d [arg_1] [arg_2]	count=1
arg	windows registry ||| csd ptype	count=1
module	legendre series whose ||| polynomial legendre	count=1
module	draw random samples from ||| random	count=1
arg	the file executable ||| executable	count=1
function	with the intersection of ||| intersection	count=2
function_arg	the blackman [arg_2] ||| [function_1] [arg_2]	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=28
function_arg	[function_1] open file ||| [function_1] [arg_2]	count=1
function	return a list ||| list	count=1
module	hermitee [module_2] ||| [module_2] [module_1]	count=5
arg	[arg_1] specified url ||| [arg_2] [arg_1]	count=2
arg	eigenvalues of a ||| a	count=1
function	[function_1] the list ||| [function_2] [function_1]	count=1
function	callable ||| is callable	count=1
function_arg	convert an 8bit [function_1] [arg_2] quoted-printable ||| [function_1] [arg_2]	count=2
module	hermitee series ||| polynomial hermite_e	count=3
module	series to ||| numpy polynomial hermite_e	count=1
module	of a floating-point ||| float	count=1
arg	given a ||| k	count=1
arg	file with ||| file	count=3
module	a child process ||| os	count=1
arg	delete ||| path ignore_errors onerror	count=1
arg	occurrences of [arg] ||| [arg] repl string	count=1
arg	object to a ||| object	count=1
arg	cartesian product [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=5
arg	delete ||| onerror	count=1
arg	to series ||| series	count=1
function	start ||| start	count=2
module	chebyshev series on the ||| numpy polynomial chebyshev	count=2
arg	item onto heap ||| item	count=1
function	matrix from ||| matrix	count=1
function	input with invalid ||| fix invalid	count=1
arg	list of d ||| d	count=1
module	a chebyshev series ||| numpy polynomial chebyshev	count=4
module	evaluate a 2-d [module_1] [module_2] cartesian product ||| [module_2] [module_1] laggrid2d	count=1
arg	an array ||| a order	count=2
module	of the hermite_e ||| numpy polynomial hermite_e	count=1
arg	host and [arg_2] ||| [arg_1] [arg_2]	count=2
function	set [function_2] ||| [function_1] logger [function_2]	count=4
arg	a command returning a ||| command	count=1
arg	class matching ||| testmatch	count=1
function	pack a python ||| pack	count=1
module	laguerre series on ||| numpy polynomial laguerre	count=1
arg	and b [arg_2] ||| [arg_2] [arg_1]	count=1
function	create a timer object ||| timer	count=1
function	a mailcap [function] return ||| [function]	count=1
arg	in list [arg_2] ||| [arg_1] x [arg_2]	count=6
function_arg	*= [arg_2] ||| [function_1] [arg_2]	count=1
module	a square ||| linalg	count=1
arg	cartesian product [arg_1] [arg_2] ||| laggrid2d [arg_1] [arg_2]	count=1
function	formatted dump of ||| dump	count=1
function_arg	a path corresponding ||| get path name	count=1
function_arg	[function_1] statement ||| [arg_2] [function_1]	count=1
arg	but ||| f	count=1
function_arg	value for the locale [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
arg	the inputs element-wise ||| x1 x2	count=1
arg	args in a subprocess ||| args env	count=1
module	the context ||| decimal context	count=1
function_arg	all methods [arg_2] ||| [function_1] [arg_2]	count=7
arg	[arg_1] decay ||| numpy random randomstate laplace [arg_2] [arg_1]	count=1
module	chebyshev series whose graph ||| polynomial chebyshev	count=1
module	a directory ||| shutil	count=1
arg	corresponding ||| name	count=1
arg	of od ||| od	count=1
arg	of the data along ||| a	count=1
function	east [function_2] ||| [function_1] [function_2]	count=2
arg	the words in ||| words	count=1
arg	start stop [arg_2] ||| [arg_1] [arg_2]	count=1
function	the character [function] ||| [function]	count=1
function	returns html file ||| file	count=1
function	[function_1] polygon ||| [function_1] [function_2]	count=2
function_arg	a plist [arg_2] ||| [arg_2] [function_1]	count=1
arg	of s ||| s	count=8
module	hermitee series on the ||| numpy polynomial hermite_e	count=2
arg	plst ||| restype resid	count=1
function_arg	[function_1] bytes contained ||| [arg_2] [function_1]	count=1
function_arg	[function_1] other ||| [function_1] [arg_2]	count=4
function	otherwise set [function] themename refreshes ||| [function]	count=1
module	return true if ||| inspect	count=6
function_arg	[function_1] window ||| [function_1] [arg_2]	count=9
module	series to ||| numpy polynomial hermite_e hermitee	count=1
arg	values ||| values	count=2
arg	if a record ||| record	count=1
function_arg	startup_hook [arg_2] ||| [function_1] [arg_2]	count=1
arg	the specified username is ||| username gid	count=1
arg	string ||| s binary maxlinelen	count=1
function	test unless ||| unless	count=1
function_arg	[function_1] line of ||| [arg_2] [function_1]	count=1
function_arg	the median [arg_2] ||| [arg_2] [function_1]	count=1
arg	type1 ||| type1	count=1
function_arg	v [function_1] [arg_2] the corresponding value ||| collections ordereddict [function_1] [arg_2]	count=1
function	ignore ||| ignore	count=1
arg	cartesian product [arg] ||| [arg]	count=6
module	chebyshev series from another ||| numpy polynomial chebyshev	count=1
arg	a path with arguments ||| path args env	count=1
function	a list of namespaces ||| namespaces	count=1
function	a left-justified version of ||| ljust	count=1
function_arg	>> [arg_2] ||| [function_1] [arg_2]	count=1
arg	substring ||| start end	count=3
function	16-bit ||| htons	count=1
function	python implementation revision ||| python revision	count=2
function_arg	if [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] string ||| [arg_2] [function_1]	count=2
function	create ||| make	count=1
arg	[arg_1] per period ||| [arg_2] [arg_1]	count=1
module	series by x ||| polynomial	count=3
function	the history ||| history	count=1
module	to its simplest ||| decimal	count=1
module	series to ||| polynomial hermite	count=1
function_arg	[function_1] the source ||| [function_1] [arg_2]	count=1
module	method [module] use ||| [module]	count=1
module	the given array ||| numpy chararray	count=1
function	tree representation ||| sequence2st	count=1
arg	interest [arg_2] ||| [arg_1] [arg_2]	count=1
arg	encoded ||| s casefold	count=2
arg	[arg_1] [arg_2] the corresponding value ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] the condition ||| [function_1] [arg_2]	count=6
function	values ||| values	count=1
module	count ||| numpy ma	count=1
arg	the specified suffix false ||| suffix start	count=2
arg	loan principal [arg_2] ||| [arg_2] [arg_1]	count=2
function	matrix from an array-like ||| matrix	count=1
arg	operation ||| operation	count=1
arg	cmd ||| cmd bufsize	count=3
arg	resource fork etc ||| src dst createpath copydates forcetype	count=1
arg	url ||| url scheme allow_fragments	count=2
module	of array ||| numpy ma masked_array	count=2
arg	[arg_1] y and ||| [arg_1] [arg_2]	count=16
function	from [function_2] ||| [function_2] [function_1]	count=2
module	elements along a given ||| numpy ma	count=1
module	masked and replaced ||| numpy ma	count=1
arg	function ||| func	count=2
function	exception up ||| exception	count=1
module	string usable as ||| mimetools	count=1
module	current position ||| cstringio stringi	count=1
function	call ||| end	count=1
function_arg	a long [arg_2] ||| [function_1] [arg_2]	count=1
function	[function] the ||| [function] completer	count=1
module	the ||| logging handler	count=2
function	a matrix from ||| matrix	count=1
function_arg	[function_1] arguments element-wise ||| [function_1] [arg_2]	count=1
module	data masked and replaced ||| numpy ma	count=1
arg	[arg_1] true ||| gettext test [arg_1] [arg_2]	count=3
arg	locale ||| locale	count=1
function	division of ||| divide	count=1
function	the roots of a ||| hermroots	count=1
module	degrees ||| polynomial chebyshev	count=2
function	for the current platform ||| get	count=1
function	[function_1] alive ||| [function_2] [function_1]	count=1
function	to the default setting ||| resetlocale	count=1
module	the resultset ||| sqlite3 cursor	count=1
arg	type1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	and eigenvectors ||| eigh	count=1
arg	python [arg_2] ||| pprint pformat [arg_2] [arg_1]	count=1
module	series ||| numpy polynomial hermite_e	count=1
arg	from ||| size	count=4
module	of a hermite series ||| numpy polynomial hermite	count=1
function	return the [function_2] ||| [function_2] [function_1]	count=1
module	a file including finder ||| macostools	count=1
function	insert ||| insert	count=1
module	to simplify the interaction ||| chararray	count=1
module	an array to ||| numpy ma masked_array	count=1
arg	single line ||| line	count=1
arg	unique temporary directory ||| suffix prefix dir	count=1
arg	scale a geometric progression ||| stop num endpoint dtype	count=1
arg	return an array ||| a	count=1
arg	a decorator to ||| decorator	count=1
arg	a linear matrix equation ||| a	count=1
function	indices ||| indices from	count=3
arg	and b ||| a b	count=4
function_arg	[function_1] of ||| [function_1] [arg_2]	count=2
function	[function_1] pre_input_hook ||| [function_1] [function_2]	count=1
arg	a sequence and b ||| b	count=2
module	occurrences ||| core defchararray	count=1
function	[function_1] exception up ||| [function_2] [function_1]	count=1
module	masked array ||| numpy ma	count=6
arg	string representing the path ||| path	count=1
arg	a complete html page ||| css encoding	count=1
function	of the class of ||| class	count=2
module	series by x ||| numpy polynomial	count=3
arg	suffix false ||| suffix start	count=2
module	with the ||| numpy chararray	count=1
arg	python object to ||| object	count=1
arg	b plus c ||| b c	count=3
function_arg	convert an [function_1] [arg_2] to quoted-printable ||| mimify [function_1] [arg_2]	count=2
arg	resolve host ||| host	count=1
arg	of the pattern ||| pattern	count=1
function	[function_1] type ||| [function_1] [function_2]	count=4
function	array ||| resize	count=1
arg	scale a geometric progression ||| start stop num endpoint dtype	count=1
function	mask from an ||| mask	count=1
arg	[arg] and ||| [arg] sep	count=3
arg	/= b when ||| a b	count=2
function	division of the inputs ||| divide	count=1
module	[module_1] of ||| [module_2] [module_1]	count=11
arg	text returning a ||| text width	count=2
arg	over a given axis ||| a axis	count=3
function	divide ||| legdiv	count=1
arg	over nested [arg] depth-first in ||| [arg]	count=1
module	as a ||| frozenset	count=2
arg	file object f ||| f	count=1
module	a random ||| numpy random	count=2
function	cbreak ||| setcbreak	count=1
function	return list of the ||| get close	count=1
function_arg	multiply [arg_2] ||| [arg_2] [function_1]	count=4
arg	tb ||| tb	count=2
arg	specified url ||| url	count=1
arg	words in ||| words	count=1
arg	rather than creating a ||| nbytes flags	count=1
module	of two sets as ||| sets baseset	count=1
function	sets the unittest option ||| set unittest reportflags	count=1
function_arg	[function_1] of length ||| [function_1] a width [arg_2]	count=1
arg	from the major ||| major	count=1
module	convert quoted-printable ||| mimify	count=1
function	return ||| get	count=11
function	copy ||| copy	count=6
function_arg	add the [arg_2] ||| [arg_2] [function_1]	count=3
function	archiving and unarchiving ||| get	count=1
function_arg	< x2 element-wise ||| less x1 x2	count=1
function	a list ||| archive	count=1
arg	the bins to which ||| bins right	count=1
function	sha512 ||| sha512	count=2
arg	to file descriptor fd ||| fd	count=1
function	return the data ||| get data	count=3
module	two or more sets ||| frozenset	count=1
arg	another ||| other context	count=1
function	[function_1] not ||| [function_2] [function_1]	count=1
module	of self with masked ||| numpy ma	count=1
function	or of ||| or	count=1
function	into a flexible-type ||| toflex	count=1
arg	array ||| a	count=2
module	all turtles on the ||| turtle	count=1
arg	codec registered for encoding ||| encoding errors	count=2
module	weekday [module] ||| calendar [module]	count=1
function_arg	split [arg_2] ||| [function_1] pattern [arg_2]	count=2
arg	a file using ||| mode buffering	count=1
arg	sequence and b is ||| a b	count=1
function_arg	[function_1] name ||| [function_1] fd [arg_2]	count=3
function	[function_1] module ||| [function_2] [function_1]	count=1
module	element of an array ||| numpy ma masked_array	count=1
function	convert a 32-bit ||| ntohl	count=1
arg	nan ||| a	count=1
function	round a ||| round	count=1
module	readline tab-completion scope ||| readline	count=1
module	w and a ||| zipfile	count=2
arg	in seconds ||| seconds	count=1
function	string in the ||| string	count=1
module	of the laguerre ||| numpy polynomial laguerre	count=1
arg	file and return ||| file	count=1
function	evaluate a 3-d ||| leggrid3d	count=1
arg	complex ||| z	count=1
module	iterator to the ||| sqlite3	count=1
arg	b sequences ||| a b	count=2
function	in a subprocess ||| spawnv	count=1
arg	parts [arg] ||| [arg]	count=1
arg	in b in place ||| b	count=1
function	4-char creator [function_2] ||| [function_2] [function_1]	count=10
function_arg	[function_1] virtual subclass ||| [arg_2] [function_1]	count=1
module	two sets as ||| frozenset	count=1
function	duplicate ||| dup	count=1
module	bytes in the array ||| ma masked_array	count=1
function_arg	convert an [function_1] [arg_2] quoted-printable ||| [function_1] [arg_2]	count=2
module	from a given ||| randomstate	count=1
function	return output [function] ||| [function]	count=1
arg	number field ||| digits format	count=1
function	given degrees ||| polyvander2d	count=1
arg	two ||| a b	count=21
function	class to ||| class	count=3
function	reverse the order of ||| reverse	count=1
arg	interest ||| nper	count=2
module	the ||| numpy	count=8
function	negative ||| signed	count=2
module	maximum [module] an array ||| [module]	count=1
module	[module_1] series ||| [module_2] [module_1] hermgrid2d	count=1
arg	along the specified axis ||| a	count=1
arg	to the given file ||| file	count=1
module	the datasource directory ||| datasource	count=1
arg	file for low level ||| filename	count=1
function	the recursion limit ||| getrecursionlimit	count=1
arg	d ||| b c d	count=1
function_arg	either from [arg_2] ||| [arg_2] [function_1]	count=5
arg	a host ||| host	count=3
arg	of the second ||| arg1 arg2	count=1
function	value of a ||| value	count=1
function_arg	** = [arg_2] ||| [arg_2] [function_1]	count=1
function	return matrix [function_2] ||| [function_1] [function_2]	count=4
module	new file ||| bz2 bz2file	count=1
module	from the resultset ||| sqlite3	count=1
function	list ||| get archive	count=1
function	set or [function_2] ||| [function_1] [function_2]	count=4
module	reset all turtles on ||| turtle	count=1
arg	local reduce with ||| dtype out	count=1
module	for the ||| logging bufferingformatter	count=1
arg	draw samples from a ||| p size	count=2
function	a sequence [function_2] ||| [function_2] [function_1]	count=1
arg	[arg] the ||| [arg]	count=10
function_arg	subtract arguments [arg_2] ||| [function_1] [arg_2]	count=1
arg	in a given position ||| a	count=1
arg	tree in *node* ||| node	count=1
arg	delete a directory ||| path ignore_errors	count=1
function_arg	input to [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	all methods in ||| decorate methods cls	count=1
function	get [function_2] ||| [function_1] completion [function_2]	count=2
module	a masked array ||| numpy ma masked_array	count=1
module	of the extended slice ||| slice	count=1
function	stamp a ||| stamp	count=1
function	permute ||| transpose	count=1
function	return output [function] of ||| [function]	count=1
arg	src [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function] smallest ||| min scalar [function]	count=1
arg	[arg_1] an ||| [arg_2] [arg_1]	count=8
arg	but rounding using ||| f	count=1
rep	read and [function_arg_2] ||| [module_1] [function_arg_2]	count=6
arg	single item ||| int	count=1
arg	its identifier ||| function args kwargs	count=1
function	list of [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] locked state ||| [function_2] [function_1]	count=2
module	unicode [module] of one ||| [module]	count=1
arg	minor device ||| minor	count=1
function	nan values ||| nanpercentile	count=1
module	for ||| inspect	count=4
module	call ||| turtle	count=1
module	file ||| tarfile tarfile	count=1
arg	b in a ||| b	count=2
arg	object to a stream ||| object stream	count=1
arg	an array with ||| m k dtype	count=1
arg	a line of text ||| line	count=1
arg	of x1 ||| x1	count=4
arg	to the given file ||| file protocol	count=1
function_arg	[function_1] delta ||| [function_1] [arg_2]	count=3
function_arg	return the [function_1] [arg_2] ||| os [function_1] [arg_2]	count=1
arg	single line [arg_2] ||| [arg_1] [arg_2]	count=1
function	a string usable as ||| choose	count=1
arg	of [arg_2] ||| [arg_2] [arg_1]	count=2
function	standard deviation ||| nanstd	count=1
module	archive as a ||| tarfile tarfile	count=1
arg	new value [arg] to the ||| [arg]	count=1
function	multiply arguments ||| multiply	count=1
function_arg	[function_1] begindates ||| [arg_2] [function_1]	count=1
function	split ||| split	count=2
function	qp-encoded ||| a2b qp	count=1
arg	an n-dimensional array ||| f varargs edge_order axis	count=1
function	signaling nan ||| snan	count=1
module	stack trace and ||| traceback	count=1
function	completion ||| completion	count=1
module	random integers [module_2] ||| [module_2] [module_1]	count=1
arg	formatted year as a ||| theyear width	count=1
arg	s in the ||| s	count=2
module	of two sets as ||| frozenset	count=1
function	fill the ||| fill	count=3
arg	number from the major ||| major	count=1
arg	index [arg] where ||| [arg]	count=1
arg	false ||| false	count=1
function	item ||| item	count=2
arg	recursively delete a directory ||| path ignore_errors onerror	count=1
function	at the front ||| simplefilter	count=1
module	a ||| pydoc	count=3
arg	names ||| names	count=1
module	the current transaction ||| sqlite3 connection	count=2
arg	assuming a ||| lo hi	count=4
function	owner ||| lchown	count=1
module	thread lock ||| logging	count=2
function	make ||| make log	count=1
arg	sub is found ||| sub start end	count=2
module	the array with the ||| numpy chararray	count=1
function	move a file or ||| move	count=1
function	equation ||| lstsq	count=1
function	with new specified fields ||| replace	count=3
arg	host and [arg_2] ||| [arg_2] [arg_1]	count=2
module	takes the current locale ||| locale	count=1
function	a new bounded ||| bounded	count=1
function	east ||| east	count=1
function	return a cursor for ||| cursor	count=1
function	owner and group ||| chown	count=1
function	types ||| sametype	count=3
function	day of the week ||| weekday	count=1
module	digits [module] there is ||| [module]	count=1
arg	specified username is a ||| username	count=1
function	truncated value ||| trunc	count=1
arg	key and return ||| od key	count=1
arg	compute the interest ||| nper	count=1
arg	execute file with arguments ||| mode file	count=1
arg	two operands ||| a b	count=1
module	generates [module] ||| [module]	count=1
function_arg	set the turtle [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	right ||| right	count=1
function_arg	[function_1] a delta ||| [function_1] [arg_2]	count=4
function	test examples in ||| examples	count=1
function	recursion limit ||| getrecursionlimit	count=1
function	completion [function_2] ||| [function_1] [function_2]	count=1
arg	composed of the words ||| words	count=1
function	return matrix rank ||| matrix rank	count=2
arg	url to read ||| url	count=1
arg	element-wise ||| x1 x2	count=12
function_arg	[function_1] specified ||| collections ordereddict [function_1] od key [arg_2]	count=1
function	a ustar header ||| pax header	count=2
function_arg	[function_1] of an ||| [function_1] [arg_2]	count=3
arg	cmd ||| cmd mode	count=1
function_arg	with [arg_2] ||| [function_1] s old new [arg_2]	count=1
function_arg	is [arg_2] ||| [function_1] normal [arg_2]	count=1
module	return series ||| numpy polynomial hermite hermite	count=1
function_arg	where [arg_2] ||| [arg_2] [function_1]	count=3
arg	[arg_1] given base ||| turtle log [arg_1] [arg_2]	count=3
function	[function_1] the class ||| [function_1] [function_2]	count=1
function	compute crc-32 ||| crc32	count=1
arg	[arg_1] exponent ||| [arg_2] [arg_1]	count=2
module	while ||| numpy	count=1
module	two sets as ||| sets baseset	count=1
arg	[arg_1] is found ||| [arg_1] [arg_2]	count=4
arg	inserted to maintain order ||| a v side sorter	count=1
arg	id ||| id	count=1
module	table of ||| calendar htmlcalendar	count=1
function	to the front ||| rsplit	count=1
function	copy the mask and ||| mask	count=1
function	[function] of the ||| window [function]	count=2
function_arg	methods [arg_2] ||| [function_1] [arg_2]	count=7
function	conjugate returns ||| conjugate	count=1
module	in an ||| sqlite3 connection	count=1
function	from a [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] that sub ||| [arg_2] [arg_1]	count=14
module	the [module] filter from ||| [module]	count=1
function	[function_1] thread ||| [function_2] [function_1]	count=3
module	of ||| float	count=1
module	database in ||| connection	count=1
arg	condition [arg_2] ||| gettext test [arg_1] [arg_2]	count=4
module	the shape ||| turtle	count=1
function	a [function] ||| skip [function]	count=4
function_arg	open the [arg_2] ||| [function_1] [arg_2]	count=4
module	masked and ||| numpy ma	count=1
function	return a left-justified version ||| ljust	count=1
module	kqueue ||| kqueue	count=1
function_arg	[function_1] given axis ||| [arg_2] [function_1]	count=3
arg	item x [arg_2] ||| [arg_2] [arg_1]	count=26
function_arg	[function_1] c ||| [function_1] [arg_2]	count=1
arg	the ceiling [arg] ||| [arg]	count=2
arg	key and ||| od key	count=1
function	a python function to ||| string function	count=1
function	an archive [function_2] ||| [function_1] [function_2]	count=1
function	class ||| number class	count=2
arg	titlecased version [arg] i ||| [arg]	count=1
module	masked values ||| ma	count=2
function_arg	[function_1] source string ||| [function_1] [arg_2]	count=1
function	[function_1] a new ||| [function_2] [function_1]	count=1
arg	the least-squares solution ||| rcond	count=1
function	finite ||| finite	count=1
arg	best good enough ||| word possibilities n cutoff	count=1
function_arg	[function_1] of a ||| [function_1] [arg_2]	count=3
arg	a number to a ||| number	count=1
function	bytes ||| bytes	count=1
function	to [function] ||| [function]	count=1
arg	open file ||| file	count=2
module	a masked array to ||| ma	count=1
module	compute ||| linalg	count=1
function	get the [function_2] ||| [function_1] completion [function_2]	count=2
arg	and [arg] ||| major [arg]	count=2
module	datetime in ||| datetime	count=1
function_arg	[function_1] limit stack ||| [function_1] tb tb [arg_2]	count=1
arg	tarinfo [arg_2] ||| [arg_2] [arg_1]	count=3
arg	if the size argument ||| size	count=1
module	dump of the database ||| sqlite3	count=1
function	magic number ||| magic	count=1
arg	[arg_1] x2 element-wise ||| [arg_1] [arg_2]	count=1
arg	the current working directory ||| path pwd	count=1
function	the list of tuples ||| list	count=1
arg	given value ||| fill_value	count=2
function	return the header string ||| format header	count=1
function	return the hexadecimal representation ||| hex	count=1
arg	the roots of a ||| c	count=1
function	compile ||| compile	count=4
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1709
module	to ||| tarfile	count=1
function	a new [function_2] ||| [function_2] [function_1]	count=3
function	of non-overlapping occurrences ||| count	count=1
module	polynomial ||| polynomial	count=7
function	items of ||| array max	count=1
arg	codec registered for encoding ||| encoding	count=2
function	cumulative sum ||| cumsum	count=1
function_arg	convert an 8bit [function_1] [arg_2] ||| mimify mimify [function_1] ifile ofile [arg_2]	count=3
function	returns the digit ||| digit	count=1
arg	suffix ||| suffix start end	count=2
arg	along specified axes for ||| axes	count=1
function	add ||| legadd	count=1
module	file ||| tarfile	count=1
arg	obj to given protocol ||| obj protocol alternate	count=1
function	subtract ||| legsub	count=1
module	a ||| turtle	count=1
arg	[arg_1] c ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x [arg_2]	count=4
function	the union of sets ||| union	count=1
arg	n ||| m n	count=1
function	root window ||| root	count=1
arg	data as ||| data	count=1
arg	specified axes for ||| axes	count=1
function	copy [function_2] ||| [function_2] [function_1]	count=2
module	logger which ||| logging logger	count=2
module	or more ||| frozenset	count=1
function	the specified ||| record	count=1
arg	is found such ||| start end	count=4
module	cache or calls ||| cache	count=1
module	evaluate a 2-d [module_1] [module_2] product ||| [module_2] [module_1] hermgrid2d	count=1
arg	in uncompressed ||| kwds	count=1
function	normal number ||| normal	count=1
arg	order ||| new_order	count=3
function	the orientation ||| seth	count=1
arg	of data ||| data dtype	count=1
function_arg	methods in ||| decorate methods cls	count=1
function	trailing ||| trim	count=1
function	to [function_2] ||| [function_1] [function_2]	count=1
module	extended slice described ||| slice	count=1
function	filename ||| filename	count=1
module	a floating-point ||| float	count=1
arg	time in seconds ||| seconds	count=1
arg	sub ||| sub	count=10
function	closes ||| close	count=1
function	gives ||| reshape	count=1
module	series ||| polynomial polynomial	count=1
arg	[arg_1] given radius ||| [arg_2] [arg_1]	count=2
arg	an [arg] indication ||| [arg]	count=1
arg	a [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=8
arg	b in a ||| a b	count=1
arg	to series of ||| series	count=1
module	given array ||| numpy ma masked_array	count=2
module	an object to simplify ||| numpy	count=1
function	the current [function_2] ||| [function_1] [function_2]	count=1
module	return random ||| numpy random	count=8
arg	along specified axes for ||| a b axes	count=1
function_arg	is [arg_2] ||| [function_1] nan [arg_2]	count=1
function	output [function] ||| [function]	count=1
arg	of x to the ||| x	count=1
module	a given ||| numpy ma	count=3
arg	a stream ||| stream indent width depth	count=1
module	floating-point number ||| float	count=1
module	onto ||| turtle	count=1
arg	command [arg] in ||| [arg]	count=1
function_arg	[function_1] prefix ||| [arg_2] [function_1]	count=2
module	read and ||| zipfile zipextfile	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=2
arg	and b is an ||| b	count=1
arg	sorted assuming a ||| lo hi	count=3
function	blackman ||| blackman	count=1
function	the ||| end	count=2
module	rotate the [module] n steps ||| [module]	count=1
module	interaction of the array ||| chararray	count=1
module	from ||| cursor	count=1
arg	current working directory ||| path pwd	count=1
arg	of x y ||| x y	count=8
function_arg	the extension [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	gives a [arg_2] ||| [function_1] [arg_2]	count=1
function	convert ||| herme2poly	count=1
function	to mouse-click event on ||| onscreenclick	count=1
arg	n objects from ||| n	count=1
function_arg	pre_input_hook [arg_2] ||| [arg_2] [function_1]	count=1
module	this st ||| parser st	count=1
function	of integers whose ratio ||| integer ratio	count=1
arg	check [arg] of ||| [arg]	count=1
arg	the tarinfo ||| tarinfo	count=1
function	[function] of a ||| [function]	count=1
arg	the words in s ||| s	count=2
module	series to the ||| polynomial hermite_e hermitee	count=1
arg	additional version information from ||| version	count=1
function	the string at ||| string at	count=2
function_arg	[function_1] mime ||| [arg_2] [function_1]	count=3
arg	m array ||| m	count=1
function_arg	round [arg_2] ||| [arg_2] [function_1]	count=8
function_arg	print [arg_2] ||| [arg_2] [function_1]	count=2
function	of ||| nanpercentile	count=1
arg	attributes ||| attributes	count=1
function	set owner ||| chown	count=1
function	[function] to ||| encode [function]	count=1
arg	is found [arg_2] ||| [arg_2] [arg_1]	count=14
module	evaluate a 2-d [module_1] [module_2] ||| [module_2] [module_1]	count=15
module	write the ending ||| zipfile	count=2
arg	for a given name ||| name	count=1
module	to the masked ||| numpy ma	count=1
function	ip address ||| thishost	count=1
module	set ||| random randomstate	count=1
module	minimum ||| ma masked_array	count=1
module	an ||| numpy chararray	count=1
arg	of substring ||| start end	count=1
module	right-justified ||| numpy core defchararray	count=1
function	[function_1] a polygon ||| [function_2] [function_1]	count=3
function_arg	circle [arg_2] ||| [function_1] radius extent [arg_2]	count=1
function	flags to zero ||| flags	count=1
module	masked ||| numpy ma masked_array	count=1
function	cursor ||| cursor	count=1
arg	month ||| theyear themonth withyear	count=1
function	a ||| archive	count=1
function	namespaces ||| namespaces	count=1
arg	c is ||| c	count=1
arg	break [arg_2] ||| [arg_2] [arg_1]	count=2
arg	after that every interval ||| interval	count=1
arg	func ||| func	count=2
arg	for category to ||| category	count=1
module	series ||| numpy polynomial polynomial	count=1
module	array to ||| numpy core defchararray chararray	count=1
function	returns a path ||| get path	count=1
arg	[arg_1] operand numerically ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] database file ||| [function_1] [arg_2]	count=1
module	[module] sample ||| [module]	count=1
function	parse a ||| parse	count=3
function_arg	exception [arg_2] ||| [function_1] etype value tb [arg_2]	count=1
arg	pseudo-vandermonde matrix ||| y z deg	count=1
module	long ||| long	count=1
function_arg	elements centered in ||| center a	count=1
module	terminate ||| subprocess popen	count=1
function_arg	blackman [arg_2] ||| [function_1] [arg_2]	count=1
function	for ||| for	count=1
module	the array to the ||| chararray	count=1
function	ignoring ||| nanpercentile	count=1
function	a 16-bit ||| ntohs	count=1
module	on the screen ||| turtle	count=1
module	decimal ||| decimal context	count=2
module	of legendre series ||| polynomial legendre	count=1
arg	the specified records ||| records	count=1
arg	for a temporary ||| dir prefix	count=1
function	shallow copy ||| copy	count=2
module	connection ||| sqlite3 connection	count=1
arg	[arg_1] a matrix ||| [arg_2] [arg_1]	count=1
function	create a pipe ||| pipe	count=1
function	a time [function] time ||| [function]	count=1
arg	of data ||| data dtype copy	count=1
function	handle errors which occur ||| handle error	count=1
function	dynamic values of the ||| map	count=1
function_arg	a ^ b ||| xor a b	count=1
arg	bins to which ||| bins right	count=1
rep	eigenvalues [function_arg_2] ||| [module_1] [function_arg_2]	count=6
arg	string by the occurrences ||| string	count=1
function	sequence type false otherwise ||| sequence type	count=1
arg	file ||| filename flag mode	count=1
arg	tree ||| ignore_errors	count=1
module	while ignoring nan values ||| numpy	count=1
arg	axis ||| indices axis	count=2
arg	restart behaviour: if flag ||| flag	count=1
arg	parse a [arg_1] [arg_2] or from a file ||| [arg_2] [arg_1]	count=3
arg	occurrences of [arg] in ||| [arg] repl string	count=1
module	the handler ||| handler	count=1
arg	[arg_1] stream ||| [arg_2] [arg_1]	count=2
arg	parses [arg] as a ||| [arg]	count=1
function	integers whose ratio is ||| as integer ratio	count=1
module	self ||| decimal decimal	count=5
module	minimum ||| ma maskedarray	count=1
function	's second coordinate ||| sety	count=1
arg	tb [arg_2] ||| [arg_2] [arg_1]	count=1
module	pseudo-vandermonde matrix ||| numpy polynomial	count=1
function	unicode implementation ||| getdefaultencoding	count=1
module	in ||| cookielib	count=1
function	return a ||| choose	count=1
function	and ||| get	count=1
function	apply a function ||| apply	count=1
module	of legendre series to ||| polynomial legendre	count=1
function	supplied environment ||| spawnle	count=1
function	[function_1] a float ||| [function_1] [function_2]	count=1
arg	[arg_1] tarinfo' ||| [arg_2] [arg_1]	count=3
function	ignoring nan ||| nanpercentile	count=1
function	power of ||| power	count=1
function_arg	insert [arg_2] ||| [function_1] [arg_2]	count=2
module	contain masked values ||| ma	count=2
arg	a fill value ||| mask copy fill_value	count=1
arg	database file ||| file flag	count=1
function	has [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] the main ||| [function_2] [function_1]	count=3
arg	if [arg] == ||| [arg]	count=1
arg	of two arrays element-wise ||| x1 x2	count=2
arg	registered for encoding ||| encoding errors	count=2
module	hermite series to ||| numpy polynomial hermite	count=2
arg	group id of path ||| path	count=2
module	array to a ||| numpy core defchararray chararray	count=1
function	encode [function_2] ||| [function_2] [function_1]	count=1
module	assigned ||| unicodedata	count=1
arg	in a ||| a	count=3
module	compute the fft of ||| numpy fft	count=1
arg	the source string ||| string maxsplit	count=1
module	random [module_2] ||| [module_1] [module_2]	count=1
arg	mask an ||| a	count=1
module	to a linear ||| numpy	count=1
arg	[arg] not ||| [arg] start	count=1
function	a sha1 ||| sha1	count=2
arg	operation on [arg] ||| [arg]	count=1
function_arg	the specified dictionary ||| log record dict	count=1
function	errors which occur ||| error	count=1
module	chebyshev series on the ||| polynomial chebyshev	count=2
function_arg	type [arg_2] ||| [arg_2] [function_1]	count=1
arg	and port [arg_2] ||| [arg_1] [arg_2]	count=1
function	dynamic values of ||| map	count=1
function	word delimiters for tab-completion ||| completer delims	count=1
module	current collection counts ||| gc	count=1
rep	current process [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	up to limit ||| limit	count=4
arg	partitioned copy [arg_2] ||| [arg_2] [arg_1]	count=4
arg	shell command cmd ||| cmd	count=2
function	the vertices [function_2] ||| [function_2] [function_1]	count=1
function_arg	self and [arg_2] ||| [function_1] [arg_2]	count=1
module	of the ||| chararray	count=1
function_arg	split [arg_2] ||| [arg_2] [function_1]	count=2
function	a particular ||| getargvalues	count=1
module	and returns ||| decimal context	count=1
arg	of lines ||| lines	count=1
function	difference ||| setdiff1d	count=1
arg	in s [arg_2] ||| [arg_1] [arg_2]	count=1
arg	[arg_1] plst ||| [arg_1] path [arg_2]	count=1
function_arg	converter with pysqlite ||| converter typename callable	count=1
arg	along one axis ||| axis	count=1
module	return a new dtype ||| dtype	count=1
module	of an array ||| numpy	count=3
function	the element-wise square ||| square	count=1
rep	square [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	the dump of the ||| sqlite3	count=1
arg	recursively delete a directory ||| ignore_errors onerror	count=1
arg	integer from host ||| integer	count=1
module	for ignorable line: iff ||| difflib	count=1
function_arg	[function_1] node ||| [function_1] docstring [arg_2]	count=3
arg	data ||| data dtype	count=1
module	codec ||| codecs	count=1
module	to the dump ||| connection	count=1
function	supported formats for ||| get archive formats	count=1
rep	operand [function_arg_2] ||| [module_1] [function_arg_2]	count=8
function	by the specified ||| record	count=1
arg	modulo if given ||| modulo	count=1
function	ignoring nan values ||| nanpercentile	count=1
function	of supported formats for ||| get archive formats	count=1
rep	garbage collection [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function_arg	is [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	long from a ||| long data	count=1
arg	[arg_1] y ||| leggrid2d [arg_1] [arg_2]	count=3
module	square ||| linalg	count=1
function	a string ||| string	count=1
arg	of substring sub in ||| sub start end	count=1
function	of the recursion limit ||| getrecursionlimit	count=1
arg	executable ||| executable lib	count=1
module	of two one-dimensional sequences ||| numpy	count=1
module	the ||| chararray	count=3
module	generate a legendre series ||| numpy polynomial legendre	count=1
arg	[arg] to ||| [arg]	count=7
arg	b ||| b frame	count=1
function	return package logger ||| logger	count=1
module	the canvas and return ||| turtle	count=1
function	for a module ||| module	count=2
function	exception ||| exception	count=1
arg	the executable [arg] argument list ||| [arg]	count=1
module	of the database in ||| sqlite3	count=1
arg	to dst ||| dst	count=2
arg	and return the specified ||| ei	count=1
function	has a numeric ||| number	count=1
arg	file and ||| file	count=1
function_arg	append a [arg_2] ||| [function_1] [arg_2]	count=1
module	the cache or calls ||| sqlite3 cache	count=1
function	new [function_2] ||| [function_1] [function_2]	count=3
function_arg	complex conjugate [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] integer from ||| [function_1] [arg_2]	count=3
module	the angle measurement ||| turtle	count=1
arg	specified username is a ||| username gid	count=1
function	starts with the specified ||| startswith	count=1
module	[module_1] series on ||| [module_2] [module_1]	count=3
function	** = ||| ipow	count=1
function_arg	set [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	commit ||| commit	count=1
function	filling value of ||| fill value	count=2
arg	check [arg] of a ||| [arg]	count=1
function	the type of ||| type	count=1
module	to ||| sqlite3	count=1
function	the underlying logger is ||| is	count=1
module	to a ||| numpy linalg	count=1
arg	substring old replaced by ||| old	count=2
module	of the given array ||| numpy ma masked_array	count=1
function	name ||| name	count=1
function	to an existing directory ||| isdir	count=1
module	the discrete fourier transform ||| numpy fft	count=1
module	nan values ||| numpy	count=1
function	initgroups to initialize the ||| initgroups	count=1
module	deque ||| collections deque	count=2
function	add ||| add	count=3
module	turtle ||| turtle	count=28
module	current locale ||| locale	count=1
function	traceback ||| istraceback	count=1
function	sets the ||| set	count=1
function	returns a list ||| get	count=1
module	given ||| numpy ma	count=5
function	split the source ||| split	count=1
function	the front ||| rsplit	count=1
function	a python script from ||| execfile	count=1
function	set [function_2] ||| [function_2] [function_1]	count=15
arg	as that of exp ||| exp rounding	count=1
function	is a [function_2] ||| [function_2] [function_1]	count=1
module	we can ||| logging logger	count=1
arg	a data-type ||| dtype offset	count=1
module	interpreter ||| os	count=1
arg	when [arg] ||| a [arg] start	count=1
function	[function_1] and ||| readline [function_1] [function_2]	count=1
function	rows and/or columns of ||| rowcols	count=2
function	[function_1] type for ||| [function_1] [function_2]	count=4
function_arg	a complete [arg_2] ||| [function_1] statement [arg_2]	count=1
module	sys ||| sys	count=2
arg	ceiling [arg] ||| [arg]	count=2
function	integers whose ratio ||| as integer ratio	count=1
module	to ||| pydoc	count=2
arg	[arg_1] [arg_2] ||| [arg_2] new [arg_1]	count=7
module	returns iterator to ||| sqlite3	count=1
arg	a string of data ||| data dtype copy	count=1
arg	performs [arg] ||| a indices axis [arg]	count=1
arg	convert formats [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] buffer ||| [function_1] [arg_2]	count=1
function	reduce a mask ||| mask	count=2
arg	return the [arg_1] [arg_2] ||| turtle log [arg_1] [arg_2]	count=3
function_arg	set the [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
module	laguerre series on ||| polynomial laguerre	count=1
rep	the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	an array from data ||| numpy	count=1
function	a different byte ||| newbyteorder	count=2
arg	of parameter start ||| start	count=1
function	elements defined in the ||| element names	count=1
function	new ||| new	count=2
arg	string s [arg_2] ||| [arg_1] [arg_2]	count=1
function	a new array with ||| resize	count=1
arg	the source ||| source	count=2
module	data masked and ||| numpy ma	count=1
function	a python function ||| function	count=1
function_arg	append object to ||| append object	count=1
function	get the documentation string ||| getdoc	count=1
module	legendre series by ||| numpy polynomial legendre	count=4
arg	[arg] the corresponding ||| [arg]	count=2
module	polynomial of ||| numpy polynomial hermite	count=1
arg	a delta ||| delta	count=1
arg	leftmost non-overlapping occurrences of [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] thread and ||| [function_1] [function_2]	count=3
function	single namespace ||| namespace	count=1
function	a member descriptor ||| ismemberdescriptor	count=1
module	series on ||| numpy polynomial	count=8
module	set the angle measurement ||| turtle	count=1
function	compares the values ||| compare	count=1
arg	ip address from ||| ip	count=1
function	compute the 2-dimensional ||| rfft2	count=1
arg	x y and z ||| x y	count=4
function	and keep it ||| insort right	count=1
function_arg	to [arg_2] ||| [function_1] integral value [arg_2]	count=2
function	mailcap [function] return a ||| [function]	count=1
module	hermite series by x ||| polynomial hermite	count=1
function	different byte ||| newbyteorder	count=2
arg	hyperbolic cosine [arg] ||| [arg]	count=2
arg	matrix ||| a	count=1
arg	so its exponent is ||| context watchexp	count=1
function	all items of ||| array	count=1
function_arg	tangent [arg_2] ||| [function_1] [arg_2]	count=1
module	the python ||| sys	count=1
function	decode a [function_2] ||| [function_2] [function_1]	count=1
module	handle ||| logging handler	count=1
function	make a ||| make	count=1
module	process with sigkill ||| popen	count=1
arg	strings in the iterable ||| iterable	count=1
function_arg	key [arg_2] ||| [arg_2] [function_1]	count=1
module	laguerre series by another ||| numpy polynomial laguerre	count=1
module	the process ||| popen	count=2
arg	[arg] with ||| [arg]	count=7
arg	exponent ||| rounding context	count=1
arg	sorted assuming a is ||| lo hi	count=3
arg	sequence of numbers not ||| sequence	count=1
arg	boolean array where two ||| b	count=1
function	data along the specified ||| nanpercentile	count=1
function	close ||| close	count=1
function	return matrix ||| matrix	count=1
function_arg	return [function_1] [arg_2] ||| commands [function_1] [arg_2]	count=10
module	hermite series whose graph ||| numpy polynomial hermite	count=1
module	the database in ||| sqlite3 connection	count=1
arg	object ||| object name default	count=1
module	are digits [module] there ||| [module]	count=1
arg	b for x ||| b axes	count=1
module	that [module] ||| [module]	count=3
module	bytes of the array ||| numpy ma masked_array	count=1
function	[function_1] semaphore ||| [function_2] [function_1]	count=3
arg	a linear ||| b	count=1
arg	a [arg] ||| a [arg]	count=1
function_arg	[function_1] in ||| [function_1] [arg_2]	count=9
arg	kind ||| kind order	count=1
arg	fun to ||| fun	count=3
function	fill ||| fill	count=4
function	[function_1] the module ||| [function_1] [function_2]	count=1
module	masked and replaced ||| ma	count=1
function_arg	round an ||| round_ a	count=1
arg	delete ||| ignore_errors onerror	count=1
function	return the lowest index ||| find	count=1
module	axis ||| numpy	count=1
function	log 'msg % args ||| log	count=1
function	fill the array with ||| fill	count=2
module	array to a ||| ma masked_array	count=1
arg	[arg_1] a ||| [arg_2] b [arg_1]	count=1
arg	[arg_1] of length ||| [arg_1] width [arg_2]	count=1
module	applying ufunc along ||| numpy ufunc	count=1
module	values ||| numpy	count=1
module	laguerre ||| polynomial laguerre	count=1
arg	file for ||| filename flag mode	count=1
arg	values of the two ||| a b	count=1
function	buffer ||| buffer	count=2
function	display ||| display matches hook	count=1
arg	obj ||| obj	count=3
function	return list ||| get	count=1
arg	x y and ||| x y	count=8
module	series on the cartesian ||| numpy polynomial	count=3
function_arg	whether class [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] mime ||| mimify mimify [function_1] ifile ofile [arg_2]	count=1
arg	[arg_1] y ||| condition [arg_1] [arg_2]	count=1
arg	a [arg] ||| fp environ [arg]	count=2
arg	reps ||| reps	count=1
arg	b [arg_2] ||| [arg_1] [arg_2]	count=2
function	access the main diagonal ||| diag	count=1
function	permute the ||| transpose	count=1
arg	a file ||| filename flag mode	count=1
function_arg	[function_1] of d ||| [function_1] [arg_2]	count=2
arg	the size argument is ||| size	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=28
function_arg	[function_1] gaussian ||| [function_1] [arg_2]	count=6
arg	the pattern [arg_2] ||| [arg_2] [arg_1]	count=1
module	hermite series to another ||| numpy polynomial hermite	count=1
arg	args in a ||| args env	count=1
arg	with callback function ||| func arg	count=2
function	process [function] ||| [function]	count=5
module	iterator to the ||| connection	count=1
function	pack the values ||| pack into	count=1
arg	python ||| indent	count=1
module	cache or calls the ||| sqlite3 cache	count=1
function_arg	compares the [arg_2] ||| [arg_2] [function_1]	count=1
function	release the ||| release	count=1
module	or set the ||| turtle	count=1
function	return the highest index ||| rfind	count=1
module	a logger [module_2] ||| [module_2] [module_1]	count=3
function	of the entries in ||| listdir	count=1
function	internal state of ||| state	count=2
arg	along a given axis ||| a axis	count=2
module	the [module] of ||| [module]	count=4
arg	in ||| a b	count=2
function	data descriptor ||| isdatadescriptor	count=1
arg	substring sub ||| sub	count=2
function	object returns [function] read ||| recv [function]	count=1
function_arg	convert an 8bit [function_1] [arg_2] to quoted-printable ||| [function_1] [arg_2]	count=2
arg	write a [arg] to ||| [arg]	count=1
function	header as ||| header	count=1
module	[module] given shape ||| [module]	count=1
function_arg	occurrences of [arg_2] ||| [function_1] a sub [arg_2]	count=1
function	data along the ||| nanpercentile	count=1
function_arg	[function_1] the object ||| [function_1] [arg_2]	count=2
function	compares the ||| compare	count=1
arg	expression: condition [arg_2] ||| [arg_2] [arg_1]	count=4
function	methods ||| methods	count=1
function	bit-wise xor of ||| bitwise xor	count=2
arg	and [arg] ||| [arg]	count=1
function	import [function_2] ||| [function_1] [function_2]	count=1
function	return a string representation ||| array2string	count=1
function	module 's ||| run module	count=1
arg	in the flattened ||| a	count=1
function	array where a ||| where	count=1
function	5 components ||| urlsplit	count=1
module	of the database ||| sqlite3	count=1
function	get the [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] new positions ||| [arg_2] [arg_1]	count=2
arg	as ||| subok	count=1
arg	suffix ||| suffix	count=2
arg	[arg_1] stop step ||| [arg_1] [arg_2]	count=1
module	compute the ||| linalg	count=1
module	a logger [module_2] ||| [module_1] [module_2]	count=3
function	from ||| load	count=1
function	the gradient ||| gradient	count=1
arg	a file for ||| filename flag mode	count=1
module	the database ||| sqlite3	count=1
function	function ||| function	count=2
function_arg	shape of an ||| shape a	count=2
arg	a linear matrix ||| b	count=1
function	change the setter on ||| setter	count=1
arg	of exp ||| exp	count=1
arg	string s ||| s	count=3
module	linalg ||| linalg	count=1
function	the week [function] ||| [function]	count=1
arg	object to a stream ||| object stream indent width depth	count=1
arg	and locals [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	a[b:c] = [arg_2] ||| [arg_2] [function_1]	count=1
function	the backslashreplace [function] replaces ||| backslashreplace [function]	count=1
arg	[arg_1] window ||| [arg_2] [arg_1]	count=2
arg	representing the path ||| path	count=1
function	a right-justified ||| rjust	count=1
arg	source string ||| source	count=1
function	~ ||| invert	count=1
function_arg	[function_1] [arg_2] ||| [function_1] integral value [arg_2]	count=2
arg	returns true if two ||| a b	count=1
module	in unicode ||| unicode	count=1
function	returns the npv net ||| npv	count=1
module	element of an ||| numpy core defchararray chararray	count=1
module	scalar ||| numpy chararray	count=1
function	or nomask ||| getmask	count=1
module	evaluate a 2-d [module_1] [module_2] ||| [module_2] [module_1] hermgrid2d	count=3
function	maximum length ||| length	count=1
module	's ||| dict	count=1
arg	string of data ||| data	count=1
arg	shape to turtlescreen ||| shape	count=1
function	a string in ||| string	count=1
module	to the dump ||| sqlite3	count=1
function	pack a ||| pack	count=1
module	of the array elements ||| ma masked_array	count=1
arg	group with [arg_2] ||| [arg_2] [arg_1]	count=1
module	file and ||| zipfile	count=2
module	specified axis while ignoring ||| numpy	count=1
arg	in the environment ||| environ	count=1
module	remove the [module] filter ||| [module]	count=1
arg	[arg_1] [arg_2] ||| condition [arg_1] [arg_2]	count=4
function_arg	hamming [arg_2] ||| [arg_2] [function_1]	count=1
module	evaluate a 2-d [module_1] [module_2] product ||| [module_2] [module_1] chebgrid2d	count=1
module	returns a ||| shutil	count=1
function	list ||| list	count=2
module	element of an ||| numpy core defchararray	count=1
arg	obj to given ||| obj	count=1
function	comes in ||| wakeup	count=1
module	chebyshev ||| chebyshev	count=10
module	return random integers from ||| numpy random randomstate	count=1
arg	condition is ||| condition	count=1
module	set array ||| chararray	count=1
arg	begindates and enddates not ||| begindates	count=1
function_arg	[function_1] inputs element-wise ||| [function_1] [arg_2]	count=4
arg	new ||| a	count=1
module	return a new ||| numpy	count=1
module	original float and with ||| float	count=1
function_arg	[function_1] a condition ||| [arg_2] [function_1]	count=2
arg	matching a ||| testmatch	count=1
arg	specified width padded with ||| width	count=2
module	return ||| datetime datetime	count=1
function	string [function_2] ||| [function_1] [function_2]	count=1
function	set the [function_2] ||| [function_2] [function_1]	count=10
arg	window ||| m	count=4
function_arg	[function_1] [arg_2] ||| [function_1] a [arg_2]	count=25
module	pseudo-vandermonde matrix ||| polynomial laguerre	count=1
arg	specified width ||| width	count=5
arg	[arg_1] window ||| hermite hermite convert [arg_1] [arg_2]	count=1
arg	sequence and b is ||| b	count=1
arg	times given by reps ||| reps	count=1
module	axis while ignoring nan ||| numpy	count=1
module	series to ||| polynomial hermite_e hermitee	count=1
arg	a file using ||| buffering	count=1
function	getsid ||| getsid	count=1
arg	value of parameter start ||| start	count=1
arg	[arg_1] error handling ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] occurrences of ||| [function_1] s old new [arg_2]	count=1
arg	interest [arg_2] ||| [arg_2] [arg_1]	count=1
module	the interaction of the ||| numpy	count=1
arg	to x ||| x	count=2
function	archiving and ||| archive	count=1
arg	ceiling [arg] as ||| [arg]	count=2
module	matrix ||| numpy	count=2
module	hermite_e series ||| numpy polynomial hermite_e	count=6
module	compute ||| numpy linalg	count=1
arg	class matching a regular ||| testmatch	count=1
function_arg	bit-wise xor [arg_2] ||| [arg_2] [function_1]	count=1
module	its ||| turtle	count=1
arg	of a [arg] ||| a [arg]	count=1
function_arg	[function_1] x ||| [function_1] condition [arg_2]	count=3
function_arg	[function_1] frame ||| [arg_2] [function_1]	count=4
function	a 3-d ||| hermegrid3d	count=1
function_arg	divide one ||| legdiv c1 c2	count=1
arg	in seconds since the ||| seconds	count=1
function_arg	[function_1] prefix otherwise ||| [arg_2] [function_1]	count=2
module	current ||| sys	count=2
function	while ||| nanpercentile	count=1
arg	[arg_1] that sub ||| a [arg_2] [arg_1]	count=2
function_arg	[function_1] substring sub ||| [arg_2] [function_1]	count=9
module	legendre series to ||| polynomial legendre	count=3
module	the process ||| subprocess popen	count=2
function	of the given family ||| inet ntop	count=1
module	in the array ||| numpy ma masked_array	count=1
function	the hexadecimal representation of ||| hex	count=1
function	[function_1] script ||| [function_2] [function_1]	count=1
module	pseudo-vandermonde matrix of ||| laguerre	count=1
module	delete a ||| shutil	count=1
function	if ||| if	count=1
function_arg	specified [arg_2] ||| [arg_2] [function_1]	count=1
arg	frame ||| frame	count=2
arg	[arg_1] and port ||| [arg_2] [arg_1]	count=2
function_arg	at [arg_2] ||| [arg_2] [function_1]	count=1
arg	name' to ||| name arcname recursive exclude filter	count=1
module	a module ||| pydoc	count=1
arg	an array ||| a newshape order	count=1
arg	the specified [arg] creating ||| [arg]	count=1
function	dtype ||| make mask descr	count=1
function_arg	return [function_1] [arg_2] ||| [function_1] docstring [arg_2]	count=1
function	set [function_2] ||| [function_1] [function_2]	count=11
function	the libc ||| libc ver	count=1
arg	up to limit stack ||| limit file	count=1
function	test if the ||| if	count=1
function_arg	[function_1] [arg_2] ||| [function_1] rootobject [arg_2]	count=1
module	the process with sigterm ||| subprocess	count=1
arg	if path ||| path	count=1
function_arg	unless the condition ||| unless condition	count=2
function	set printing options ||| set printoptions	count=2
module	sets ||| frozenset	count=3
function	package logger ||| logger	count=1
function	radians ||| radians	count=2
function	return input with invalid ||| fix invalid	count=1
module	pseudo-vandermonde matrix ||| numpy	count=1
arg	[arg_1] false ||| [arg_2] [arg_1]	count=2
arg	the specified username ||| username gid	count=1
module	[module_1] series on ||| [module_1] [module_2]	count=8
function	[function_1] rank of ||| [function_1] [function_2]	count=1
module	turtleshape onto ||| turtle	count=1
arg	string of length width ||| width fillchar	count=7
arg	of x into ||| x	count=1
module	matrix ||| laguerre	count=1
function_arg	absolute [arg_2] ||| [function_1] [arg_2]	count=4
module	polynomial ||| numpy polynomial polynomial	count=7
function_arg	[function_1] an array ||| [arg_2] [function_1]	count=7
arg	a traceback ||| traceback	count=1
function	string usable as a ||| choose	count=1
module	a masked array ||| ma	count=5
arg	[arg_1] titles description ||| [arg_2] [arg_1]	count=4
arg	sub is found ||| start end	count=4
module	series whose ||| polynomial	count=3
function	[function_1] a key ||| [function_1] [function_2]	count=1
function	[function_1] plist ||| [function_2] [function_1]	count=1
function_arg	set [function_1] [arg_2] ||| turtle [function_1] [arg_2]	count=4
arg	execute a path with ||| path args env	count=1
arg	pseudo-vandermonde matrix of ||| y deg	count=1
module	from the ||| cursor	count=1
module	masked array ||| ma maskedarray	count=1
function	encode a long ||| encode long	count=1
function	accumulate ||| accumulate	count=1
function_arg	[function_1] names ||| [function_1] formats [arg_2]	count=1
arg	directory tree ||| top	count=1
module	hermite_e [module_2] ||| [module_1] [module_2]	count=3
module	hermitee [module_2] ||| [module_2] [module_1] hermegrid2d	count=5
arg	month ||| theyear themonth	count=1
function_arg	// [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	compile the source ||| compile source	count=2
function	tuple of index ||| index	count=1
arg	[arg_1] the scheme ||| [arg_2] [arg_1]	count=1
module	the dump of the ||| sqlite3 connection	count=1
arg	of x in the ||| x	count=1
module	integers from ||| randomstate	count=1
arg	empty masked array with ||| shape dtype	count=1
function	's ||| run	count=1
module	pseudo-vandermonde ||| numpy polynomial	count=1
module	a ||| numpy	count=2
function	[function_1] value of ||| [function_2] [function_1]	count=3
arg	text returning a list ||| text	count=1
module	a masked array to ||| numpy ma	count=1
function	for a module ||| find module	count=2
function	groups ||| setgroups	count=1
arg	[arg_1] of length ||| [arg_2] [arg_1]	count=1
arg	x in [arg_2] ||| [arg_2] [arg_1]	count=4
arg	the range [a b ||| a b	count=1
arg	[arg_1] or y ||| condition [arg_1] [arg_2]	count=1
function	pack the values ||| pack	count=1
arg	the second ||| arg1 arg2	count=1
function	get ||| get	count=9
function_arg	non-overlapping occurrences [arg_2] ||| [function_1] a sub [arg_2]	count=1
module	laguerre series ||| numpy polynomial laguerre	count=13
module	the array ||| numpy	count=1
arg	return [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
function	package logger -- ||| logger	count=1
module	returns iterator to the ||| connection	count=1
arg	corresponding to [arg_2] ||| [arg_2] [arg_1]	count=1
module	interaction ||| numpy chararray	count=1
arg	[arg_1] [arg_2] not ||| numpy core defchararray rindex [arg_2] [arg_1]	count=2
module	all ||| turtle	count=1
module	returns ||| connection	count=1
arg	return an array ||| a dtype order subok	count=2
module	test whether ||| posixpath	count=4
function	ctime style string ||| ctime	count=1
arg	the qth percentile of ||| q	count=1
arg	category ||| category	count=1
function_arg	[function_1] status ||| [arg_2] [function_1]	count=3
function	roots ||| hermroots	count=1
arg	axis while ||| a axis	count=1
function	docstrings ||| docstrings	count=1
arg	sep in ||| sep	count=1
function	index ||| index	count=2
arg	object to end ||| object	count=1
arg	to the [arg] ||| [arg]	count=2
arg	the executable [arg] ||| [arg]	count=1
function	key value pairs ||| iteritems	count=1
module	copy data ||| shutil	count=1
module	this manager ||| logging manager	count=1
module	of array ||| numpy	count=4
arg	specified axes for ||| b axes	count=1
arg	[arg_1] class matching ||| [arg_1] decorator [arg_2]	count=1
function	negative ||| negative	count=1
function_arg	[function_1] a numpy ||| [function_1] object [arg_2]	count=2
arg	negative if x<y zero [arg_1] [arg_2] positive if x>y ||| [arg_1] [arg_2]	count=1
arg	find the n ||| n	count=2
function	[function_1] enabled for ||| [function_2] [function_1]	count=4
arg	a line of ||| line	count=1
function	difference of itself ||| difference	count=2
arg	an ip address from ||| ip	count=1
arg	the words ||| words	count=1
arg	data-type ||| dtype offset	count=1
function_arg	return the process return [function_1] [arg_2] ||| os [function_1] [arg_2]	count=1
function_arg	[function_1] a fd ||| [arg_2] [function_1]	count=2
arg	fill_value as ||| fill_value	count=1
module	new lock object ||| thread	count=1
rep	turn turtle [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	x-y*i ||| numbers complex	count=1
function_arg	[function_1] with ||| [function_1] radius extent [arg_2]	count=3
arg	an array with ||| n m k dtype	count=1
arg	executable [arg] argument ||| [arg]	count=1
module	true if the operand ||| decimal context	count=1
function	returns the mirrored property ||| mirrored	count=1
function	treating not a numbers ||| nansum	count=1
module	a 2-d [module] on the ||| [module]	count=1
arg	contains a single '#' ||| pat	count=1
module	evaluate a 2-d [module_1] [module_2] cartesian product ||| [module_2] [module_1] hermegrid2d	count=1
function_arg	array where [arg_2] ||| [arg_2] [function_1]	count=3
arg	id of path ||| path	count=2
arg	to high ||| high size	count=1
function	integers whose ratio is ||| integer ratio	count=1
module	socket ||| socket	count=2
arg	directory tree ||| path ignore_errors onerror	count=1
arg	specified username is ||| username gid	count=1
function	the hanning ||| hanning	count=1
arg	elements in [arg_2] ||| [arg_2] [arg_1]	count=2
module	mask of a masked ||| ma	count=1
function_arg	part [arg_2] ||| mimify mimify [function_1] ifile ofile [arg_2]	count=1
function	new view of ||| view	count=1
function	matrix equation ||| lstsq	count=1
function	return the configuration limit ||| fpathconf	count=1
function	list of ||| get	count=1
arg	all [arg] from the ||| [arg]	count=1
module	a write the ending ||| zipfile	count=2
function	call returning the default ||| default	count=1
function	a true [function_2] ||| [function_1] [function_2]	count=4
module	slice described ||| slice	count=1
function	[function_1] element in ||| [function_2] [function_1]	count=2
arg	arrays element-wise ||| x1 x2	count=2
function	the indices to ||| indices from	count=1
module	process ||| subprocess	count=2
function	of aliases and a ||| gethostbyname ex	count=1
function	mask to ||| mask	count=3
arg	parse a url ||| url scheme allow_fragments	count=2
module	representation of this st ||| parser st	count=1
arg	expression: condition [arg_2] ||| gettext test [arg_1] [arg_2]	count=4
arg	base ||| base	count=3
arg	item from the iterator ||| iterator	count=1
arg	matching a pathname ||| pathname	count=1
module	[module_1] series ||| [module_2] [module_1] chebgrid2d	count=1
arg	and type2 ||| type2	count=1
module	dump of the database ||| sqlite3 connection	count=1
function	>> ||| rshift	count=1
arg	if path is ||| path prefix onerror	count=2
function_arg	[function_1] sequence of ||| [arg_2] [function_1]	count=2
function	return a tuple representing ||| get	count=2
function	a python function to ||| function	count=1
function	a list of aliases ||| gethostbyaddr	count=1
module	loggable by consulting all ||| logging filterer	count=1
arg	mime [arg_2] ||| [arg_2] [arg_1]	count=8
arg	a and b are ||| b	count=1
function	[function] for ||| [function]	count=3
function	arguments ||| nargs	count=1
arg	[arg_1] operand ||| [arg_2] [arg_1]	count=3
module	evaluate a 2-d [module_1] [module_2] ||| [module_2] [module_1] leggrid2d	count=3
arg	a month ||| theyear themonth withyear	count=1
function	absolute values ||| fabs	count=1
arg	input to an ||| a dtype	count=1
function	stack ||| stack	count=1
module	linear matrix equation ||| linalg	count=1
arg	prefix otherwise ||| a prefix start	count=1
module	the file and ||| zipfile zipfile	count=1
module	from a given ||| numpy ma	count=1
function_arg	path [arg_2] ||| [arg_2] [function_1]	count=4
function	of ||| lagvander	count=1
arg	along the given axis ||| axis	count=7
arg	to an ||| a dtype	count=1
function	remove the completion ||| completion	count=1
module	an abc ||| abc abcmeta	count=1
arg	of ||| x	count=4
function	inputs ||| nin	count=1
function_arg	[function_1] of x ||| [function_1] [arg_2]	count=3
module	chebyshev series whose graph ||| numpy polynomial chebyshev	count=1
module	the i/o ||| handler	count=2
arg	given name ||| name	count=3
function	[function_1] the type ||| [function_2] [function_1]	count=1
function	a string representation ||| array2string	count=1
arg	file filename ||| file flag mode	count=1
arg	length ||| fillchar	count=8
function_arg	[function_1] [arg_2] ||| [function_1] formats [arg_2]	count=4
function_arg	decode [arg_2] ||| [arg_2] [function_1]	count=2
module	interaction of the ||| numpy chararray	count=1
module	a scalar ||| numpy chararray	count=1
module	and for mode ||| zipfile zipfile	count=1
function	the line buffer ||| line buffer	count=2
arg	python object ||| object indent	count=1
arg	array ||| dtype order subok	count=2
function	return list ||| get close	count=1
arg	to a number field ||| digits format	count=1
arg	the shell command cmd ||| cmd bufsize	count=2
arg	return a month ||| theyear themonth withyear	count=1
arg	element-wise ||| x	count=5
module	random samples from ||| numpy random	count=2
function	module [function_2] ||| runpy [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] pattern [arg_2]	count=9
function	the symmetric difference of ||| symmetric difference	count=5
function_arg	[function_1] file descriptor ||| [function_1] [arg_2]	count=3
function	docstring [function] ||| [function]	count=1
function	to the history file ||| history	count=1
function	[function_1] a config ||| [function_1] [function_2]	count=1
arg	query or ||| query_opt	count=1
function	clumps of ||| clump masked	count=1
module	returns iterator to the ||| sqlite3	count=1
module	the i/o thread ||| logging	count=2
function	text ||| text	count=1
module	for ||| zipfile	count=2
function	the python implementation revision ||| python revision	count=1
function	the numeric value ||| numeric	count=1
function	that all items ||| assert array	count=1
arg	the database file ||| file flag mode	count=1
arg	substring sub ||| s sub start end	count=2
arg	unicode character unichr ||| unichr	count=8
arg	with trailing whitespace removed ||| chars	count=1
function	asian [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] resource from ||| [arg_2] [function_1]	count=1
arg	value in array ||| weights minlength	count=1
function	or remove the completion ||| completion	count=1
arg	in direction towards b ||| a b	count=1
arg	array with ones on ||| dtype	count=1
arg	from an array ||| dtype	count=1
function	load the [function_2] ||| [function_2] [function_1]	count=1
arg	code to ||| code	count=1
function	if two [function] objects are ||| assert [function]	count=1
module	current transaction ||| sqlite3 connection	count=2
function	unarchiving ||| get	count=1
function	a ustar [function_2] ||| [function_2] [function_1]	count=1
arg	an array with ||| dtype	count=1
arg	argument list [arg] ||| file [arg]	count=1
module	hermite series to ||| polynomial hermite	count=2
arg	from the ||| limit	count=1
module	manager ||| manager	count=1
module	new set ||| set	count=1
arg	the bins ||| bins	count=1
function	[function_1] an integer ||| [function_2] [function_1]	count=1
arg	recursively delete a ||| path	count=1
function_arg	mask [arg_2] ||| [function_1] m [arg_2]	count=1
module	executes ||| sqlite3 cursor	count=1
arg	tree ||| ignore_errors onerror	count=1
module	maximum depth of the ||| sys	count=1
function	the message for ||| get message	count=2
function	condition number ||| cond	count=1
module	transaction ||| sqlite3 connection	count=2
function_arg	[function_1] data ||| [arg_2] [function_1]	count=3
function	infinite ||| infinite	count=1
module	a linear matrix equation ||| numpy linalg	count=1
module	the data ||| numpy	count=1
arg	element-wise equal within a ||| equal_nan	count=2
arg	s characters or ||| s	count=1
arg	value in array ||| weights	count=1
arg	character in [arg] i ||| [arg]	count=1
arg	path is none ||| path	count=1
arg	day as a ||| day weekday	count=1
module	logger which is a ||| logging logger	count=1
arg	the two ||| a b	count=4
module	a new ||| frozenset	count=2
arg	version ||| release version	count=1
arg	path or if path ||| path prefix onerror	count=1
arg	specified key and return ||| key default	count=1
function_arg	[function_1] file ||| [function_1] [arg_2]	count=4
arg	kind keyword ||| kind order	count=1
arg	bytes contained in ||| b bytes	count=1
module	data ||| binascii	count=1
module	for ||| locale	count=1
arg	run statement under ||| statement	count=1
function	rank of ||| rank	count=1
module	scalar ||| defchararray chararray	count=1
module	iterator ||| sqlite3 connection	count=1
function	bounded ||| bounded	count=1
function	items ||| assert array max	count=1
module	the [module] n ||| [module]	count=1
function	list ||| get	count=1
function	that all items ||| array max ulp	count=1
module	two 's complement little-endian ||| pickle	count=2
module	generates [module] sample ||| [module]	count=1
function	commit the ||| commit	count=1
function	unpack the buffer ||| unpack from	count=1
function	repeat ||| repeat	count=1
function	with the specified ||| resize	count=1
arg	and b are ||| b	count=1
function	return the message ||| message	count=1
arg	line of text ||| line	count=1
arg	the specified shape ||| new_shape	count=1
function	make a ||| make log	count=1
function	compute the roots ||| chebroots	count=1
function	the current [function] of ||| [function]	count=1
function_arg	the value for the [function_1] [arg_2] ||| locale [function_1] [arg_2]	count=1
arg	[arg_1] plus c ||| [arg_1] [arg_2]	count=1
module	to a linear matrix ||| numpy linalg	count=1
function	cbreak mode ||| setcbreak	count=1
arg	[arg_1] plus c ||| [arg_2] [arg_1]	count=1
function	a has a sequence ||| sequence	count=1
module	trace from its invocation ||| traceback	count=1
function	[function] writeable buffer-like ||| recv bytes [function]	count=3
arg	draw samples from ||| size	count=17
function	close the ||| close	count=1
arg	numeric uid and ||| uid	count=3
module	chebyshev series from ||| polynomial chebyshev	count=1
arg	function to look like ||| assigned updated	count=1
function_arg	parse the [arg_2] ||| [arg_2] [function_1]	count=1
arg	number field ||| n digits format	count=1
function_arg	generated [arg_2] ||| [function_1] [arg_2]	count=1
arg	a namespace ||| namespace	count=2
arg	x or y ||| x y	count=1
function	header ||| formatweekday	count=1
module	logger [module_2] ||| [module_2] [module_1]	count=3
module	with masked ||| numpy ma	count=1
function	integers of type ||| integers	count=2
function	logger is enabled for ||| is enabled for	count=1
module	for ||| bufferingformatter	count=1
function	the standard exponential distribution ||| standard exponential	count=1
function	specified ||| log record	count=1
module	series ||| chebyshev chebyshev	count=1
module	cache completely ||| dircache	count=1
function	arrays to choose ||| choose	count=1
module	array to a ||| core defchararray chararray	count=1
module	a new set ||| set	count=1
function	reciprocal ||| reciprocal	count=1
module	s and ||| str	count=1
function	the access permissions ||| lchmod	count=1
function	create a pipe with ||| pipe	count=1
arg	other [arg_2] ||| [arg_2] [arg_1]	count=2
module	if the operand ||| context	count=1
function	lowercase and vice versa ||| swapcase	count=1
arg	axis ||| axis	count=15
arg	keys of d ||| d	count=1
arg	severity [arg] and ||| [arg]	count=1
function	of non-overlapping occurrences of ||| count	count=4
module	thread ||| logging handler	count=2
arg	to ||| domain	count=1
module	while ignoring nan ||| numpy	count=1
function	return a scalar type ||| type	count=1
function	make a fifo ||| makefifo	count=1
function	has changed ||| touched ae	count=1
function	32-bit ||| ntohl	count=1
module	original float and ||| float	count=1
function	a test script ||| script	count=1
arg	in [arg_2] ||| [arg_1] width [arg_2]	count=1
function_arg	// = [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] type ||| [function_2] [function_1]	count=5
function	a pipe [function_2] ||| [function_1] [function_2]	count=1
function	the locked state ||| locked	count=1
module	return ||| math	count=1
arg	limit ||| limit	count=4
module	logger [module_2] ||| [module_1] [module_2]	count=3
function_arg	subtract [arg_2] ||| [arg_2] [function_1]	count=4
arg	specified axis while ignoring ||| axis	count=1
function_arg	condition number of ||| cond x	count=1
function_arg	blackman window ||| blackman m	count=1
arg	return negative if x<y [arg_1] [arg_2] positive if x>y ||| __builtin__ cmp [arg_1] [arg_2]	count=1
function	the current directory as ||| print directory	count=1
function	element in the ||| element	count=1
module	i/o thread lock ||| logging	count=2
module	laguerre [module_2] ||| [module_2] [module_1]	count=14
arg	execute a path ||| path	count=1
arg	string by ||| string	count=1
function	[function_1] crc ||| [function_2] [function_1]	count=4
function	set [function] themename ||| [function]	count=1
arg	principal plus interest ||| nper pv fv when	count=1
module	the same decimal object ||| decimal context	count=1
function_arg	[function_1] from the ||| [arg_2] [function_1]	count=1
arg	the data along the ||| a	count=1
arg	name ||| name frame locals	count=1
function	of the latter ||| urljoin	count=2
arg	tarinfo' to ||| fileobj	count=1
arg	a directory ||| ignore_errors onerror	count=1
module	set array flags writeable ||| core defchararray chararray	count=1
module	set the [module] ||| [module]	count=5
arg	of a line of ||| line	count=1
arg	if the two ||| a b	count=1
module	of hermite [module_2] ||| [module_1] [module_2]	count=3
function	returns the single namespace ||| namespace	count=1
arg	[arg_1] [arg_2] ||| os makedev [arg_1] [arg_2]	count=9
module	i/o ||| handler	count=2
function	the key value pairs ||| iteritems	count=1
arg	[arg_1] y depending ||| condition [arg_1] [arg_2]	count=1
module	distribution mean=0 ||| random	count=1
module	lock ||| handler	count=2
module	visit ||| ast nodevisitor	count=1
arg	resolve host [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	call [arg_2] ||| [function_1] tracing [arg_2]	count=1
module	measurement ||| turtle	count=1
function	numeric ||| numeric	count=1
module	list ||| shutil	count=1
function	specified ||| nanpercentile	count=1
function	set ||| set	count=18
module	object ||| chararray	count=1
arg	or if path is ||| path prefix	count=1
function_arg	with [arg_2] ||| [function_1] s [arg_2]	count=2
function	the current position ||| tell	count=1
module	a legendre [module_2] ||| [module_1] [module_2]	count=2
function	owner and group id ||| lchown	count=1
function	equal [function_2] ||| [function_2] [function_1]	count=2
arg	tarinfo ||| tarinfo	count=5
module	[module_1] series ||| [module_2] [module_1]	count=58
function	the latter ||| urljoin	count=2
arg	connects to remote addr ||| addr	count=1
module	a list of ||| shutil	count=1
arg	sub ||| s sub	count=2
module	string encoding used by ||| sys	count=1
module	number ||| ufunc	count=3
arg	the pattern [arg_2] ||| [arg_1] [arg_2]	count=1
module	array with the ||| numpy core defchararray chararray	count=1
function_arg	class to [arg_2] ||| [function_1] [arg_2]	count=2
function	internal state ||| state	count=2
arg	to an array ||| a	count=1
module	of the laguerre ||| polynomial laguerre	count=1
function_arg	[function_1] specified axis ||| [arg_2] [function_1]	count=3
arg	name ||| name frame	count=1
arg	of a sequence of ||| sequence	count=1
function	a module 's ||| run module	count=1
function_arg	[function_1] order ||| [arg_2] [function_1]	count=7
function	its encoder function ||| getencoder	count=1
function	[function] to a ||| encode [function]	count=1
function_arg	float [arg_2] ||| [arg_2] [function_1]	count=4
module	from a ||| randomstate	count=1
arg	in list [arg_2] ||| [arg_2] [arg_1]	count=6
arg	both type1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	atime mtime flags ||| copystat	count=1
arg	key ||| od key	count=1
module	the masked array ||| numpy ma masked_array	count=3
module	hermite series from another ||| polynomial hermite_e	count=1
function	an integer ||| integer	count=1
arg	to tarinfo ||| tarinfo	count=3
arg	queries the given executable ||| executable bits linkage	count=1
arg	database file filename and ||| file	count=1
module	of legendre [module_2] ||| [module_1] [module_2]	count=3
module	array flags writeable ||| defchararray chararray	count=1
arg	[arg_1] path is ||| [arg_2] [arg_1]	count=8
arg	to a linear ||| b	count=1
module	for the [module] ||| [module]	count=1
function	either from ||| where	count=1
arg	delete a ||| path	count=1
arg	return a month ||| themonth	count=1
module	and for mode ||| zipfile	count=2
function	python [function_2] ||| [function_1] [function_2]	count=2
arg	formatted year ||| theyear width	count=1
module	lock ||| logging handler	count=2
module	encoding used by ||| sys	count=1
function	symmetric [function_2] ||| [function_2] [function_1]	count=17
arg	a number field ||| n digits format	count=1
arg	which both type1 and ||| type1	count=1
function	type with the ||| type	count=1
function_arg	with all [arg_2] ||| [function_1] b [arg_2]	count=2
function	basic [function] for ||| basic [function]	count=1
function	parsed from a ||| strptime	count=1
function_arg	converter [arg_2] ||| [arg_2] [function_1]	count=2
arg	new array with ||| a	count=1
function	that all items ||| array max	count=1
function	a list ||| list	count=1
function	supplying your own ||| runctx	count=1
arg	[arg] match object ||| pattern [arg]	count=2
module	year as a table ||| calendar htmlcalendar	count=1
function	matrix [function_2] ||| [function_1] [function_2]	count=1
module	in ||| sqlite3 connection	count=1
arg	convert seconds since ||| seconds	count=3
arg	specified axis while ||| a axis	count=1
arg	[arg] using ||| [arg] sep	count=6
arg	[arg_1] type2 ||| [arg_1] [arg_2]	count=3
function	the specified axis while ||| nanpercentile	count=1
function_arg	line [arg_2] ||| [arg_2] [function_1]	count=3
arg	substring [arg_2] ||| [arg_2] [arg_1]	count=18
arg	read up [arg] ||| [arg]	count=3
module	the [module] as a ||| [module]	count=1
module	default string ||| sys	count=1
function	calculate correct line number ||| lineno	count=1
function	mouse-click event on canvas ||| onscreenclick	count=1
arg	resource fork etc ||| createpath copydates forcetype	count=1
module	pty ||| pty	count=1
function	polygon ||| poly	count=1
arg	the string s ||| s	count=3
module	of the python ||| sys	count=1
function_arg	duplicate [arg_2] ||| [arg_2] [function_1]	count=1
function	bit-wise or of two ||| bitwise or	count=1
function	occurrences ||| count	count=1
module	csv ||| csv	count=1
arg	cartesian product [arg_1] [arg_2] ||| leggrid2d [arg_1] [arg_2]	count=1
arg	[arg_1] port ||| [arg_2] [arg_1]	count=2
function	of the caller so ||| caller	count=1
function	visible ||| st	count=1
module	returns an ||| decimal	count=1
module	evaluate a chebyshev ||| chebyshev	count=1
module	draw samples from ||| randomstate	count=4
function	list of [function_2] ||| [function_1] [function_2]	count=1
function_arg	and eigenvectors [arg_2] ||| [arg_2] [function_1]	count=3
arg	[arg] of the ||| [arg]	count=4
function	package logger -- if ||| logger	count=1
module	evaluate a 2-d [module_1] [module_2] product ||| [module_2] [module_1] laggrid2d	count=1
function	current position ||| tell	count=1
arg	object to [arg_2] ||| [arg_2] [arg_1]	count=1
function	the shape ||| end	count=1
module	of the hermite_e ||| hermite_e	count=1
function	pack ||| pack into	count=1
module	the current thread ||| thread	count=1
arg	day as ||| day weekday	count=1
arg	by a fill value ||| a mask copy fill_value	count=1
arg	given base system ||| base padding	count=1
function	transpose of ||| t	count=1
module	of the given array ||| ma masked_array	count=1
function	median along the ||| median	count=1
arg	x and the ||| x	count=1
arg	draw samples from ||| left mode right size	count=1
arg	the specified record ||| record	count=2
arg	wrapped function ||| wrapped	count=1
arg	a string ||| string	count=3
function	as a multipart boundary ||| boundary	count=1
function	and returns [function] version of ||| der_cert [function]	count=1
function	mirrored property ||| mirrored	count=1
arg	x or y depending ||| x y	count=1
arg	sub is contained within ||| sub	count=4
arg	packed ||| packed_ip	count=1
arg	pattern [arg_2] ||| [arg_2] [arg_1]	count=1
module	test if ||| testing	count=1
arg	operand numerically ||| context	count=1
function	return the string at ||| string at	count=1
module	minimum ||| numpy ma	count=1
arg	valueerror when [arg] not ||| [arg] start	count=1
function	for archiving and unarchiving ||| get	count=1
arg	recursively delete ||| ignore_errors	count=1
function_arg	a circle [arg_2] ||| [arg_2] [function_1]	count=3
arg	numpy object ||| object output	count=2
arg	a function ||| function	count=1
arg	from a pathname ||| p	count=1
module	shape drawn ||| turtle	count=1
function	^ ||| xor	count=1
module	mode w and a ||| zipfile	count=2
function	working to the front ||| rsplit	count=1
arg	recursively delete a ||| ignore_errors	count=1
module	return or set the ||| turtle	count=1
function	treating not a ||| nancumsum	count=1
module	turtle on ||| turtle	count=2
arg	file for low ||| filename flag	count=1
arg	compute the ||| a	count=1
module	the process with ||| subprocess popen	count=2
function	and returns [function] version ||| der_cert [function]	count=1
function_arg	with [arg_2] ||| [function_1] b [arg_2]	count=2
arg	dotted [arg] importing as ||| [arg]	count=1
function_arg	[function_1] path of ||| [arg_2] [function_1]	count=2
arg	the other ||| other	count=1
arg	if path ||| path prefix onerror	count=2
module	with sigkill ||| subprocess popen	count=1
function	configuration limit ||| fpathconf	count=1
arg	object [arg_2] ||| [arg_2] [arg_1]	count=1
arg	statement ||| statement	count=2
arg	of x [arg_2] ||| [arg_1] [arg_2]	count=12
function	[function] of executing ||| [function]	count=1
function	or sets [function] ||| [function]	count=3
function	return the truncated value ||| trunc	count=1
function_arg	[function_1] sorted assuming ||| [function_1] a x [arg_2]	count=6
function	stop [function] and ||| [function]	count=1
arg	specified [arg_2] ||| [arg_2] [arg_1]	count=10
arg	of a namespace ||| namespace	count=2
arg	and a ||| mode	count=1
function_arg	[function_1] a file ||| [function_1] [arg_2]	count=3
module	[module_1] from ||| [module_2] [module_1]	count=1
function	methods ||| decorate methods	count=1
module	[module_1] series whose ||| [module_1] [module_2]	count=3
arg	of n ||| iterable n	count=2
function	returns html table of ||| table	count=1
arg	integers from ||| size	count=1
arg	recursively ||| path ignore_errors onerror	count=1
arg	operation op [arg_2] ||| [arg_2] [arg_1]	count=2
function	the cumulative sum ||| cumsum	count=1
function	change the owner ||| lchown	count=1
arg	for a numpy object ||| object output	count=1
function	the roots ||| hermroots	count=1
function	return ||| get count	count=1
arg	object to a stream ||| object stream indent	count=1
arg	the string returning ||| string	count=1
function_arg	self and other ||| and other context	count=1
arg	shell command cmd ||| cmd bufsize mode	count=2
arg	sample [arg] a given ||| a [arg]	count=1
module	the ending ||| zipfile	count=2
arg	compare common ||| b common	count=1
module	draw random samples from ||| random randomstate	count=2
function	[function_1] asian width ||| [function_2] [function_1]	count=3
module	dump ||| sqlite3	count=1
function	a complete ||| complete	count=1
arg	true if two ||| b	count=1
function	the message [function_2] ||| [function_2] [function_1]	count=2
arg	substring sub in ||| s sub start end	count=1
arg	return x1 ||| x1	count=2
function_arg	a normal [arg_2] ||| [arg_2] [function_1]	count=4
module	representing the thread ||| threading thread	count=1
arg	start [arg_2] ||| [arg_1] [arg_2]	count=2
function	cursor for ||| cursor	count=1
arg	return an array ||| a order	count=2
module	of ||| numpy	count=67
arg	with ||| dtype out	count=1
arg	least-squares solution to ||| a b rcond	count=1
function	return absolute ||| abspath	count=1
arg	substring old replaced by ||| a old	count=1
module	a masked ||| numpy ma	count=1
function	of the data along ||| nanpercentile	count=1
arg	x or y ||| condition x y	count=2
function	[function_1] printing options ||| [function_1] [function_2]	count=1
function	the unicode implementation ||| getdefaultencoding	count=1
function	compares the values of ||| compare signal	count=1
arg	a file ||| filename flag	count=1
arg	formats ||| formats	count=1
function_arg	a particular [arg_2] ||| [arg_2] [function_1]	count=1
arg	if self and other ||| other	count=1
arg	string [arg_2] ||| [arg_2] [arg_1] count	count=1
arg	[arg_1] [arg_2] ||| [arg_1] limit [arg_2]	count=6
module	of the ||| turtle	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=92
function	the lock ||| lock	count=1
arg	ignorable character: iff ||| ws	count=1
module	a unicode [module] of ||| [module]	count=1
arg	sig ||| sig	count=1
arg	args in ||| args	count=2
arg	but raises valueerror when [arg_1] [arg_2] not ||| [arg_2] [arg_1]	count=1
arg	a day as a ||| day weekday	count=1
module	a write ||| zipfile zipfile	count=1
arg	database file *database* ||| database timeout isolation_level detect_types factory	count=1
function	pickle a ||| dump	count=1
function	[function_1] root window ||| [function_2] [function_1]	count=2
function	written to the history ||| history	count=1
function	instantiating a logger ||| logger	count=1
function	[function_1] source ||| [function_2] [function_1]	count=1
function	abort ||| abort	count=1
function	an iterator over ||| iterkeys	count=1
module	year 's calendar ||| calendar	count=1
arg	the file descriptor fd ||| fd	count=1
module	doctest ||| doctest	count=1
function	disable ||| disable	count=1
module	unicode string ||| unicodedata	count=1
module	automatic garbage collection ||| gc	count=2
arg	[arg_1] [arg_2] ||| chebgrid2d [arg_1] [arg_2]	count=1
arg	of b ||| b	count=9
function	when instantiating a logger ||| get logger	count=1
arg	version information ||| release version	count=1
arg	of n ||| n	count=2
module	resets ||| codecs incrementaldecoder	count=1
function_arg	the tangent [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] : false ||| [arg_2] [arg_1]	count=2
function	generate a monic ||| polyfromroots	count=1
function	string contains a complete ||| complete	count=1
arg	t ||| t	count=3
arg	while ignoring nan values ||| a	count=1
module	usable as ||| mimetools	count=1
function	to the power of ||| power	count=1
arg	file descriptor fd ||| fd	count=10
module	nis ||| nis	count=2
arg	the kind keyword ||| kind	count=1
function_arg	line [arg_2] ||| [function_1] [arg_2]	count=3
arg	equal ||| equal_nan	count=2
arg	pysqlite ||| callable	count=1
arg	true if m ||| m	count=1
module	hermite_e series ||| polynomial hermite_e	count=3
function	three ||| 3d	count=1
module	file including finder info ||| macostools	count=1
module	of the given array ||| chararray	count=1
module	laguerre series to ||| numpy polynomial laguerre	count=2
function_arg	generated a [arg_2] ||| [function_1] [arg_2]	count=1
module	hermite series by another ||| polynomial hermite_e	count=2
function	the specified ||| nanpercentile	count=1
arg	the [arg] to file ||| [arg]	count=1
module	into an ae descriptor ||| aepack	count=1
module	new ||| numpy	count=1
function	of key value pairs ||| items	count=1
module	draw random samples from ||| numpy random randomstate	count=2
module	series ||| polynomial hermite_e	count=1
module	of the array elements ||| numpy ma masked_array	count=1
arg	sep as the delimiter ||| sep maxsplit	count=2
function	load ||| load	count=1
function	's current heading ||| heading	count=1
module	hermite series by another ||| polynomial hermite	count=1
arg	a url ||| url scheme	count=2
function	[function_1] format ||| [function_2] [function_1]	count=1
module	generate a legendre ||| legendre	count=1
arg	[arg_1] [arg_2] ||| hermite hermite convert [arg_1] [arg_2]	count=1
module	[module] cartesian product ||| [module]	count=10
arg	prefix otherwise ||| prefix	count=1
arg	if domain a ||| a	count=1
function	a list of ||| get archive	count=1
function	copy a file including ||| copy	count=1
function	source code ||| source	count=2
function	compares the values ||| compare signal	count=1
module	element of an array ||| numpy core defchararray	count=1
arg	the object is ||| object	count=8
function_arg	[function_1] [arg_2] ||| [function_1] a x [arg_2]	count=22
module	the database in an ||| sqlite3 connection	count=1
function	bit-wise xor ||| bitwise xor	count=2
arg	move to new ||| offset whence	count=1
function_arg	[function_1] with given ||| [function_1] radius [arg_2]	count=3
arg	a path ||| path start	count=1
module	the process with sigterm ||| popen	count=1
function_arg	register [arg_2] ||| [function_1] [arg_2]	count=2
function	has a sequence ||| sequence	count=1
module	simplify the interaction ||| chararray	count=1
function	copy ||| translate	count=1
arg	file using the ||| name mode buffering	count=1
function_arg	[function_1] cmd ||| [arg_2] [function_1]	count=3
module	current value of ||| sys	count=1
function	the keys ||| keys	count=1
function_arg	[function_1] array ||| [function_1] m [arg_2]	count=1
module	a write the ||| zipfile zipfile	count=1
arg	[arg] is ||| [arg]	count=3
function	[function_1] difference ||| [function_2] [function_1]	count=15
function_arg	round a number ||| round number	count=2
module	python ||| chararray	count=1
module	default string encoding used ||| sys	count=1
function	%= ||| imod	count=1
module	a new ||| numpy	count=1
arg	the non-masked elements ||| keepdims	count=1
arg	to/from a command returning ||| command mode	count=1
arg	a linear matrix equation ||| a b	count=1
arg	string with ||| s binary maxlinelen	count=1
module	a kqueue ||| select kqueue	count=1
arg	y and z ||| y	count=4
arg	status ||| status	count=3
function	start the ||| start	count=1
function	compute the variance along ||| nanvar	count=1
function	the specified ||| log record	count=1
function	angle ||| angle	count=1
module	type ||| type	count=1
arg	linear matrix equation ||| b	count=1
function	for the lower-triangle ||| tril	count=1
arg	y depending ||| y	count=1
arg	occurrences of ||| count	count=3
module	pseudo-vandermonde matrix of ||| numpy polynomial	count=1
module	string ||| __builtin__	count=1
function	part of ||| unmimify part	count=1
arg	but rounding using self ||| f	count=1
arg	behaviour: if flag ||| flag	count=1
arg	interval ||| interval	count=1
function_arg	[function_1] x or ||| [arg_2] [function_1]	count=3
function	strip leading and trailing ||| strip	count=1
function	input ||| asarray	count=1
function	the set difference ||| setdiff1d	count=1
function	extension ||| splitext	count=2
module	of the given ||| numpy ma	count=1
function	against loan principal ||| ppmt	count=1
function	information associated with ||| nl langinfo	count=1
function_arg	[function_1] an array ||| [function_1] m [arg_2]	count=1
function_arg	power of [arg_2] ||| [arg_2] [function_1]	count=3
function	returns a new bounded ||| bounded	count=1
arg	in a [arg_2] ||| [arg_2] [arg_1]	count=5
arg	executing [arg] ||| [arg]	count=6
arg	specified key ||| od key default	count=2
function	archiving ||| get	count=1
function_arg	where a [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] key ||| [function_1] [function_2]	count=1
arg	[arg] docstring can ||| node [arg]	count=1
module	the current ||| connection	count=2
function_arg	backward by distance ||| back distance	count=1
arg	a mime [arg_2] ||| [arg_2] [arg_1]	count=8
module	[module_1] series ||| [module_1] [module_2]	count=67
function	the backslashreplace [function] ||| backslashreplace [function]	count=1
function	the python ||| python	count=2
arg	string with base64 ||| s binary maxlinelen	count=1
arg	exp ||| exp rounding	count=1
arg	true if the two ||| a b	count=1
function_arg	occurrences of [arg_2] ||| [arg_2] [function_1]	count=12
arg	the bins to which ||| bins	count=1
module	are digits [module] there is ||| [module]	count=1
arg	draw samples from ||| scale size	count=4
arg	[arg_1] file ||| [arg_1] limit [arg_2]	count=3
function	message for ||| get message	count=2
function	the inputs in base-2 ||| logaddexp2	count=1
function	from ||| from	count=3
function_arg	[function_1] [arg_2] ||| [function_1] conversion mode [arg_2]	count=4
module	new dtype ||| dtype	count=1
module	the ||| zipfile zipfile	count=2
arg	tb to ||| etype value tb	count=1
module	laguerre series from ||| numpy polynomial laguerre	count=2
function	[function_1] 's ||| [function_2] [function_1]	count=3
module	[module_1] which ||| [module_2] [module_1]	count=2
function	if it is a ||| discard	count=1
arg	[arg_1] new positions ||| [arg_1] [arg_2]	count=2
arg	[arg_1] stop step ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=3
function	[function_1] a long ||| [function_2] [function_1]	count=2
function	[function_1] list ||| [function_2] [function_1]	count=1
module	series whose graph is ||| polynomial	count=3
function_arg	test if [arg_2] ||| [arg_2] [function_1]	count=2
arg	the specified width ||| width	count=5
function_arg	[function_1] one ||| [arg_2] [function_1]	count=14
function	make ||| make	count=1
module	random samples ||| numpy random	count=2
arg	path ||| path args env	count=1
arg	c expression: condition ? ||| condition	count=1
module	of the given array ||| numpy chararray	count=1
module	pattern returning ||| re	count=1
arg	at most [arg] bytes ||| [arg]	count=1
arg	the least-squares solution to ||| rcond	count=1
arg	decimals ||| decimals out	count=1
module	dump of ||| sqlite3 connection	count=1
arg	[arg_1] signal ||| [arg_2] [arg_1]	count=1
arg	an array along an ||| a	count=1
arg	x y z ||| x y	count=10
function	the type ||| type	count=1
arg	object ||| object name	count=3
arg	[arg_1] [arg_2] quoted-printable ||| [arg_2] [arg_1]	count=6
arg	an n-dimensional ||| f varargs edge_order axis	count=1
arg	executable [arg] argument list ||| [arg]	count=1
function	a left-justified version ||| ljust	count=1
arg	and exponent [arg] as ||| [arg]	count=1
arg	a pathname ||| pathname	count=1
function	and type ||| and type	count=4
function_arg	xor of [arg_2] ||| [function_1] [arg_2]	count=1
arg	condition ? true : ||| condition true	count=1
arg	a piecewise-defined function ||| condlist funclist args kw	count=1
arg	[arg] required ||| condition true [arg]	count=1
module	angle measurement units ||| turtle	count=1
function	with a different byte ||| newbyteorder	count=3
module	with sigterm ||| subprocess popen	count=1
function	a converter ||| converter	count=1
function_arg	division [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] a buffer ||| [arg_2] [function_1]	count=1
module	the maximum ||| sys	count=1
arg	yields the [arg] pattern ||| [arg]	count=1
arg	a number ||| number	count=2
function_arg	a code [arg_2] ||| [arg_2] [function_1]	count=1
function	is a ||| is	count=2
function	the week [function] the date ||| [function]	count=1
module	records ||| zipfile zipfile	count=1
function_arg	[function_1] x2 element-wise ||| [arg_2] [function_1]	count=5
module	the interaction ||| numpy	count=1
function_arg	circle [arg_2] ||| [function_1] radius [arg_2]	count=1
function_arg	duplicate of [arg_2] ||| [arg_2] [function_1]	count=1
function	tuple compatible ||| timetuple	count=1
arg	payment against loan principal ||| when	count=1
arg	an object is ||| object	count=1
arg	up [arg] at ||| [arg]	count=1
function	[function] the ||| [function]	count=10
function	[function_1] for ||| [function_2] [function_1]	count=11
module	array elements ||| ma masked_array	count=1
function	[function_1] root ||| [function_1] [function_2]	count=2
arg	that sub is ||| sub	count=4
function	a time [function] ||| [function]	count=3
arg	unique temporary file ||| prefix dir text	count=1
module	return random [module_2] ||| [module_1] [module_2]	count=2
arg	object connected by a ||| duplex	count=1
arg	return an array ||| a dtype order	count=2
module	the [module] to ||| [module]	count=3
module	of ||| connection	count=1
arg	length ||| length	count=2
arg	a and b sequences ||| b	count=2
arg	given encoding and return ||| encoding	count=2
arg	value equal to a ||| a	count=1
module	signal ||| signal	count=1
module	operand to its simplest ||| decimal context	count=1
arg	assuming a is ||| lo hi	count=4
module	sets as a ||| frozenset	count=3
arg	width ||| width	count=7
arg	c is a ||| c	count=1
arg	[arg_1] tarinfo' ||| [arg_1] [arg_2]	count=3
module	the canvas ||| turtle	count=1
function_arg	the tangent [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] the class ||| [function_2] [function_1]	count=3
module	of ||| sqlite3	count=1
function	element-wise square ||| square	count=1
module	self with masked ||| ma	count=1
function	a multipart boundary ||| boundary	count=1
function_arg	return the docstring [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
arg	incorporating the message ||| message	count=1
module	array to a ||| defchararray chararray	count=1
arg	an ||| a newshape	count=1
function_arg	return absolute [arg_2] ||| [function_1] [arg_2]	count=4
function	axis while ignoring ||| nanpercentile	count=1
function	kill ||| kill	count=1
module	matrix of ||| numpy	count=1
module	the [module] connection ||| [module]	count=1
arg	command cmd ||| cmd bufsize mode	count=2
arg	the input to an ||| a	count=1
arg	at points ||| c tensor	count=2
arg	given axis ||| axis	count=11
arg	queries the given ||| bits linkage	count=1
function_arg	convert an [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function_arg	startup_hook [arg_2] ||| [arg_2] [function_1]	count=1
arg	the least-squares solution to ||| b rcond	count=1
function	as a ustar header ||| pax header	count=1
function	the lock is in ||| lock	count=1
arg	return a unique temporary ||| suffix prefix dir	count=3
function	normal ||| normal	count=5
module	a new set ||| frozenset	count=2
function	returns a list of ||| get	count=1
function	difference ||| difference	count=6
function	release the i/o thread ||| release	count=1
arg	of sep ||| sep	count=1
arg	prefix otherwise ||| prefix start	count=1
arg	titles description to a ||| titles aligned byteorder	count=1
arg	find the ||| ar1 ar2 assume_unique	count=1
function_arg	[function_1] d ||| [function_1] [arg_2]	count=2
module	specified ||| logging	count=3
arg	database [arg_2] ||| [arg_2] [arg_1]	count=1
arg	a piecewise-defined function ||| x condlist funclist args kw	count=1
arg	stream ||| stream indent width depth	count=1
module	of the operand ||| decimal context	count=1
function	input to ||| asarray	count=1
function_arg	a >> b ||| rshift a b	count=1
function	set ||| set string	count=1
function	vectors ||| vdot	count=1
function	the vertices of ||| begin	count=1
module	[module] a *= ||| [module]	count=1
function	backslashreplace [function] replaces ||| backslashreplace [function]	count=1
module	return a new array ||| numpy	count=1
arg	single item ||| index	count=1
arg	of times b ||| b	count=1
function	source location lineno ||| location	count=1
arg	return ||| a b	count=1
module	legendre [module_2] ||| [module_1] [module_2]	count=38
arg	fun ||| fun	count=3
function	with the union of ||| union	count=1
arg	of turtle-window ||| titlestring	count=1
arg	with ||| dtype	count=2
arg	a record ||| record	count=3
arg	d ||| d	count=7
arg	an ||| object	count=1
module	stack ||| sys	count=1
arg	a string of data ||| data dtype	count=1
arg	pseudo-vandermonde matrix of ||| x	count=1
function_arg	npv net [arg_2] ||| [arg_2] [function_1]	count=3
module	for each element in ||| numpy core defchararray	count=5
function	packs the ||| packbits	count=1
function	main diagonal ||| diag	count=2
function	xor of ||| xor	count=1
function_arg	[function_1] a number ||| [function_1] [arg_2]	count=1
module	read one value ||| marshal	count=1
function	[function_1] width ||| [function_1] [function_2]	count=4
arg	given name ||| name frame locals	count=1
arg	file descriptor ||| fd buffersize	count=1
module	resultset ||| sqlite3	count=1
function	turned ||| unix	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] [arg_2]	count=68
module	factory function that returns ||| threading	count=1
function	using windows getch ||| win	count=1
module	2-d [module] cartesian product ||| [module]	count=5
module	equation ||| linalg	count=1
arg	element-wise ||| x1 x2 out	count=1
module	to a ||| linalg	count=1
module	which is a ||| logging	count=1
arg	specified key ||| key default	count=1
function	unicode ||| uts	count=1
arg	[arg] as a ||| [arg]	count=3
function	<< ||| lshift	count=1
function	code ||| iscode	count=1
module	masked array along the ||| numpy ma	count=1
module	and ||| socket	count=2
module	to ||| turtle	count=2
module	and ||| turtle	count=1
arg	command returning a ||| command mode bufsize	count=1
module	[module] the integer ||| [module]	count=2
function_arg	[function_1] dictionary ||| [function_1] [arg_2]	count=4
function	[function_1] a plist ||| [function_1] [function_2]	count=1
function	[function_1] completion ||| [function_1] [function_2]	count=1
function	code object ||| code	count=1
arg	to new positions ||| source destination	count=1
function	the caller so ||| caller	count=1
module	polynomial of ||| numpy polynomial hermite hermite	count=1
arg	with contents of line ||| line	count=1
function	items ||| assert array max ulp	count=1
arg	the specified suffix false ||| suffix start end	count=2
arg	draw samples from ||| mode right size	count=1
module	data masked and ||| ma	count=1
function	[function_1] rank of ||| [function_2] [function_1]	count=1
arg	to remote addr and ||| addr	count=1
module	series to data ||| polynomial	count=2
function	of environment [function_2] ||| [function_1] [function_2]	count=1
function	representing utc day ||| utcnow	count=1
module	the ||| subprocess	count=2
function	transpose of the ||| t	count=1
module	of handling floating-point errors ||| numpy	count=1
module	uuid ||| uuid	count=2
function	[function_1] for ||| [function_1] [function_2]	count=5
function_arg	>> [arg_2] ||| [arg_2] [function_1]	count=1
arg	object tarinfo' ||| fileobj	count=1
function	is an integer ||| is integer	count=2
function	returns a list of ||| get archive	count=1
arg	info resource fork etc ||| dst createpath copydates forcetype	count=1
arg	the other [arg_2] ||| [arg_2] [arg_1]	count=2
arg	of seconds ||| seconds	count=2
arg	set the current state ||| state	count=1
module	for mode w ||| zipfile zipfile	count=1
function	ones at and below ||| tri	count=1
function	repeat elements of ||| repeat	count=1
arg	name for the ||| name	count=1
arg	of length size ||| size	count=1
arg	a string of length ||| fillchar	count=2
arg	pass a record to ||| record	count=1
module	trace from its ||| traceback	count=1
function	return the class ||| class	count=1
function	rank of array ||| rank	count=1
function	the symmetric ||| symmetric	count=5
arg	file for low ||| filename flag mode	count=1
function	where a ||| masked where	count=1
arg	access and modified time ||| path atime mtime	count=1
function	mask [function_2] ||| [function_1] [function_2]	count=2
module	w and a write ||| zipfile zipfile	count=1
function	[function_1] display ||| [function_1] [function_2]	count=5
module	to a ||| numpy	count=1
function	[function_1] difference of ||| [function_2] [function_1]	count=15
function	true for any x ||| any	count=1
arg	file using the file ||| buffering	count=1
arg	elements in choicelist ||| choicelist default	count=2
module	random ||| random randomstate	count=3
function	the current [function_2] ||| [function_2] [function_1]	count=1
module	corresponding object ||| dumbdbm	count=1
module	series ||| polynomial hermite hermite	count=2
arg	entries from tb ||| value tb	count=1
arg	bytes b[start:end] ||| start end	count=1
arg	file filename and ||| file flag mode	count=1
function_arg	[function_1] of s ||| [function_1] [arg_2]	count=6
function	[function] version ||| der_cert [function]	count=1
function	split the extension ||| splitext	count=2
module	array with a scalar ||| chararray	count=2
function	the getter on ||| getter	count=1
arg	an ||| a newshape order	count=1
function_arg	return the [function_1] [arg_2] ||| [function_1] docstring [arg_2]	count=1
arg	break on ||| duration	count=1
arg	n m ||| n k m	count=1
function	convert a unicode ||| uts	count=1
arg	equation ||| b	count=1
module	the extended slice described ||| slice	count=1
module	which [module] the ||| [module]	count=1
function_arg	[function_1] for module_or_name ||| [arg_2] [function_1]	count=2
module	a set ||| set	count=3
module	decimal object ||| decimal context	count=1
arg	file filename and ||| file	count=1
arg	of the string ||| string	count=1
arg	[arg_1] dst ||| [arg_2] [arg_1]	count=2
function	is a mount point ||| ismount	count=1
function	to all methods ||| methods	count=1
function	integers of type np ||| integers	count=2
function	copytree [function] parameter ||| [function]	count=1
module	calendar ||| calendar textcalendar	count=2
module	hermite series to another ||| numpy polynomial hermite_e	count=1
function	given degrees ||| hermvander3d	count=1
function	[function_1] [function_2] code without importing it ||| runpy [function_2] [function_1]	count=3
arg	as [arg_2] ||| [arg_2] [arg_1]	count=2
function	indices that are non-zero ||| flatnonzero	count=1
function	return the difference of ||| difference	count=1
module	series from ||| numpy polynomial	count=4
function_arg	sum of [arg_2] ||| [arg_2] [function_1]	count=3
arg	the specified axis ||| a axis	count=2
module	the fft of ||| numpy fft	count=1
function	list of tuples as ||| list	count=1
function_arg	read [arg_2] ||| [function_1] [arg_2]	count=5
function	representing the internal state ||| state	count=2
function	a has a numeric ||| number	count=1
function	common ||| common	count=2
function	the internal state of ||| state	count=2
module	all [module] as machine ||| [module]	count=1
function	[function_1] xor of ||| [function_1] [function_2]	count=3
module	[module_1] [module_2] a real array ||| [module_2] [module_1]	count=4
function	string ||| format	count=1
function	logger is enabled ||| is enabled	count=2
arg	a unique temporary ||| prefix dir text	count=1
function_arg	[function_1] x ||| [function_1] [arg_2]	count=1
arg	of the words ||| words	count=1
function	values ||| nanpercentile	count=1
module	for mode w ||| zipfile	count=2
arg	sub in ||| s sub	count=1
function_arg	[function_1] but ||| [arg_2] [function_1]	count=3
module	replaces [module] unencodable character ||| [module]	count=1
function_arg	[function_1] its identifier ||| [arg_2] [function_1]	count=4
function_arg	set owner [arg_2] ||| [function_1] [arg_2]	count=1
function	compute the 2-dimensional inverse ||| irfft2	count=1
function	print ||| print	count=5
function	a table of contents ||| printdir	count=1
arg	both type1 and type2 ||| type1 type2	count=1
arg	turtle-window ||| titlestring	count=1
arg	of a path ||| path start	count=1
function	subtract ||| chebsub	count=1
function	append ||| append	count=2
function	items of ||| array max ulp	count=1
arg	an array ||| a dtype	count=6
arg	axis ||| a	count=1
arg	a file for low ||| filename flag	count=1
arg	[arg_1] in filename ||| [arg_2] [arg_1]	count=2
arg	connection object connected by ||| duplex	count=1
function	parse a query ||| parse	count=2
function	[function_1] at ||| [function_2] [function_1]	count=3
function	a shallow copy of ||| copy	count=2
arg	bind [arg_2] ||| [arg_2] [arg_1]	count=12
module	of the legendre ||| numpy polynomial legendre	count=1
arg	with the specified ||| a	count=1
arg	to y ||| y	count=1
function	returns the east asian ||| east asian	count=1
function	convert the ||| loads	count=1
module	evaluate a chebyshev series ||| numpy polynomial chebyshev	count=1
function	formatted dump ||| dump	count=1
function	to the history ||| history	count=1
arg	specified records and ||| records	count=1
function	parser object ||| parser	count=1
module	[module_1] to ||| [module_2] [module_1]	count=1
module	of the database ||| connection	count=1
function	current process [function] ||| [function]	count=5
function	true division of ||| true divide	count=2
module	random integers [module_2] ||| [module_1] [module_2]	count=1
arg	values of variables ||| locals	count=1
arg	path to [arg_2] ||| [arg_2] [arg_1]	count=4
function	to determine the libc ||| libc ver	count=1
function	the deleter on ||| deleter	count=1
function	sequences that generated a ||| restore	count=1
arg	[arg_1] mail message ||| [arg_2] [arg_1]	count=6
function	[function_1] data ||| [function_2] [function_1]	count=1
function	the symmetric [function_2] ||| [function_1] [function_2]	count=17
module	the dump ||| sqlite3	count=1
function_arg	owner of [arg_2] ||| [function_1] [arg_2]	count=1
function	a mapping [function_2] ||| [function_2] [function_1]	count=1
function	returns ||| archive	count=1
arg	the open file and ||| file	count=1
function	logger ||| get logger	count=1
module	time ||| time	count=1
module	owner ||| tarfile tarfile	count=1
module	legendre series to a ||| polynomial legendre	count=1
arg	exponent ||| context	count=1
function	change the owner ||| chown	count=1
function_arg	slices along [arg_2] ||| [function_1] [arg_2]	count=1
function	compute hqx crc ||| crc hqx	count=2
arg	[arg_1] plus interest ||| [arg_2] [arg_1]	count=8
module	series to the ||| numpy polynomial	count=2
function	[function] writeable ||| recv bytes [function]	count=3
arg	from elements in ||| default	count=1
function_arg	== [arg_2] ||| [function_1] [arg_2]	count=1
function	value ||| value	count=4
function	[function_1] value ||| [function_2] [function_1]	count=3
module	of two sets ||| frozenset	count=1
function	where ||| find	count=2
function	logarithmic series ||| logseries	count=1
function_arg	or [arg_2] ||| [arg_2] [function_1]	count=2
module	of bytearray ||| bytearray	count=1
arg	module file ||| module path	count=1
function	byte data into ||| into	count=1
arg	execute [arg_2] ||| [arg_2] [arg_1]	count=8
arg	recursively delete ||| path ignore_errors	count=1
function_arg	count the [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	code from [arg_2] ||| os [function_1] [arg_2]	count=1
function	the entries in ||| listdir	count=1
function	[function_1] filling ||| [function_2] [function_1]	count=2
module	process ||| subprocess popen	count=2
function	evaluate a 3-d ||| chebgrid3d	count=1
arg	or if ||| prefix	count=1
module	measurement units to ||| turtle	count=1
arg	s in ||| s	count=5
module	return a ||| float	count=1
function	[function_1] difference of ||| [function_1] [function_2]	count=15
module	of a hermite series ||| polynomial hermite	count=1
function_arg	division of [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] x2 element-wise ||| [function_1] x1 [arg_2]	count=5
arg	[arg_1] stop ||| [arg_1] [arg_2]	count=1
function_arg	the shape [arg_2] ||| [function_1] [arg_2]	count=1
module	the [module] raising ||| [module]	count=1
function	the transpose of ||| t	count=1
function_arg	[function_1] [arg_2] ||| [function_1] b [arg_2]	count=9
arg	the open file ||| file	count=2
function	compute the bit-wise xor ||| bitwise xor	count=1
function	abstract base class abc ||| isabstract	count=1
module	delete a directory tree ||| shutil	count=1
function	[function_1] [function_2] code without importing it ||| [function_2] [function_1]	count=3
function	of arrays to choose ||| choose	count=1
arg	etc ||| dst createpath copydates forcetype	count=1
function	two [function] objects are ||| assert [function]	count=1
function	string in the same ||| format string	count=1
function	of given degrees ||| hermvander3d	count=1
function	and unarchiving ||| get	count=1
function	parse and ||| readline parse and	count=1
arg	file for low level ||| filename flag	count=1
function	[function_1] main diagonal ||| [function_2] [function_1]	count=2
arg	loan principal plus interest ||| nper pv fv when	count=1
function	array where ||| masked where	count=1
arg	list a assuming a ||| lo hi	count=4
arg	an address into a ||| address	count=1
function	returns the east ||| east	count=1
arg	[arg_1] matching a ||| [arg_2] [arg_1]	count=1
module	legendre series from another ||| numpy polynomial legendre	count=1
function_arg	[function_1] axis ||| [function_1] [arg_2]	count=1
arg	major ||| major	count=1
arg	a unique temporary file ||| suffix prefix dir text	count=1
function	docstring ||| docstring	count=1
arg	item onto heap maintaining ||| item	count=1
arg	by the kind keyword ||| kind	count=1
module	in s and ||| unicode	count=1
arg	[arg_1] matching ||| [arg_2] [arg_1]	count=1
function	[function_1] config ||| [function_2] [function_1]	count=1
arg	packed ip ||| af packed_ip	count=1
arg	or if path is ||| path prefix onerror	count=1
module	of array elements ||| numpy	count=1
arg	text returning a new ||| text	count=1
arg	for a and b ||| b	count=2
arg	choicelist ||| choicelist	count=1
module	float and ||| float	count=1
arg	[arg_1] length width ||| [arg_2] [arg_1]	count=1
arg	args in a ||| args	count=2
module	return the ||| numpy	count=1
module	hermite_e ||| hermite_e	count=4
module	evaluate a chebyshev series ||| polynomial chebyshev	count=1
arg	to a stream ||| stream	count=1
module	series to the ||| polynomial	count=2
arg	a linear matrix ||| a	count=1
arg	return a new ||| a	count=1
arg	of [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
arg	c ||| c b	count=1
arg	string with ||| s	count=1
function	[function_1] division ||| [function_2] [function_1]	count=3
function	hqx ||| hqx	count=1
arg	if the object is ||| object	count=9
function	[function_1] memory ||| [function_1] [function_2]	count=1
function	set [function] ||| [function]	count=2
arg	[arg] using its ||| member [arg]	count=3
module	matrix equation ||| numpy	count=1
function	the gzip content ||| gzip	count=1
arg	class to convert formats ||| formats	count=1
module	laguerre series by x ||| numpy polynomial laguerre	count=1
function_arg	that generated [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] a assuming ||| [arg_1] [arg_2]	count=8
arg	to n bytes with ||| n	count=1
module	from ||| random random	count=2
function_arg	libc [arg_2] ||| [function_1] executable [arg_2] chunksize	count=1
function	[function_1] or ||| [function_1] [function_2]	count=3
function_arg	compile [arg_2] ||| [arg_2] [function_1]	count=3
module	legendre series whose graph ||| polynomial legendre	count=1
arg	[arg] required to ||| condition true [arg]	count=1
function_arg	generated a delta ||| restore delta which	count=2
function	is blank or ||| is_line_junk	count=1
function	string using the standard ||| standard	count=1
function_arg	[function_1] x y ||| [function_1] [arg_2]	count=1
function	matrix of given degrees ||| hermvander3d	count=1
arg	encoding and error handling ||| encoding errors	count=1
function	check that all items ||| assert array max ulp	count=1
function	is in effect ||| itruediv	count=1
module	the database in ||| sqlite3	count=1
function_arg	convert an [function_1] [arg_2] to quoted-printable ||| [function_1] [arg_2]	count=2
module	return random integers ||| numpy random	count=4
arg	sep as ||| sep	count=2
arg	string with base64 ||| s binary maxlinelen eol	count=1
function	scan the environment ||| environment	count=1
function	hash value for the ||| hash	count=1
function	convert the input to ||| asarray	count=1
module	of a [module] ||| [module]	count=1
function_arg	elements centered [arg_2] ||| [function_1] [arg_2]	count=6
function_arg	a complete sql ||| complete statement sql	count=1
function	a module [function_2] ||| [function_2] [function_1]	count=1
arg	values in b in ||| b	count=1
module	to the original float ||| float	count=1
arg	python object ||| object indent width	count=1
arg	specified url to read ||| url	count=1
function	right-justified ||| rjust	count=3
function	resize the ||| resize	count=1
arg	return the ||| b	count=1
arg	substring is not found ||| a sub start end	count=1
module	the given [module_2] ||| [module_1] [module_2]	count=2
module	the [module] unistr ||| [module]	count=1
arg	delete ||| path	count=1
arg	sep in b ||| sep	count=1
function	return [function_2] ||| [function_2] [function_1]	count=1
arg	for encoding ||| encoding	count=2
arg	through string ||| string	count=1
function	header as a string ||| header	count=1
function	a ||| resize	count=1
function	compile [function_2] ||| [function_1] [function_2]	count=1
arg	a delta ||| delta which	count=1
arg	x or ||| x	count=1
function	the list of ||| list	count=1
module	of array with the ||| numpy chararray	count=1
function_arg	v [function_1] [arg_2] corresponding value ||| [function_1] [arg_2]	count=1
module	abstract methods ||| abc	count=1
arg	step ||| step	count=1
arg	bins ||| bins	count=1
arg	given [arg_2] ||| [arg_2] [arg_1]	count=2
function	open the database ||| open	count=1
arg	directory ||| path ignore_errors onerror	count=1
function	of given degrees ||| polyvander3d	count=1
function	return the reciprocal ||| reciprocal	count=1
function	[function_1] filling ||| [function_1] [function_2]	count=2
arg	s in a ||| s	count=3
function	non-overlapping occurrences ||| count	count=1
arg	array with ||| m k dtype	count=1
arg	contents of line ||| line	count=1
function	^= ||| ixor	count=1
module	the [module] system ||| [module]	count=1
arg	to apply the pattern ||| pattern	count=1
function	a path ||| get path	count=1
function	[function_1] class of ||| [function_1] [function_2]	count=1
function	the roots ||| chebroots	count=1
arg	path or if ||| prefix	count=1
function	gradient ||| gradient	count=1
arg	[arg_1] and port ||| [arg_1] [arg_2]	count=2
arg	different kind ||| kind	count=2
arg	if flag is false ||| flag	count=1
function_arg	hanning window ||| hanning m	count=1
module	fft [module_2] ||| [module_2] [module_1]	count=3
arg	the given file ||| file	count=2
module	w ||| zipfile zipfile	count=1
module	used [module_2] ||| [module_1] [module_2]	count=2
function	fds set cloexec ||| cloexec	count=1
module	of the series ||| polynomial	count=2
module	commit ||| sqlite3 connection	count=1
function	of namespaces ||| namespaces	count=1
module	series to ||| numpy polynomial chebyshev chebyshev	count=1
function	clumps ||| clump masked	count=2
arg	two ||| a b max_work	count=1
arg	data string ||| data	count=1
arg	line ||| line	count=4
arg	about a frame ||| frame	count=1
module	of an array ||| ma masked_array	count=1
arg	equation ||| a	count=1
function_arg	[function_1] a ||| [arg_2] [function_1]	count=8
function	an indication of ||| number	count=1
function	tuple expressing local ||| localtime	count=1
function_arg	[function_1] gaussian distribution ||| [arg_2] [function_1]	count=6
function	internal state of the ||| state	count=2
module	cache or calls the ||| cache	count=1
module	ending records ||| zipfile	count=2
function_arg	[function_1] element-wise ||| [function_1] [arg_2]	count=20
function	for ||| get archive	count=1
function_arg	[function_1] func ||| [function_1] tracing [arg_2]	count=1
function_arg	[function_1] s in ||| [arg_2] [function_1]	count=4
arg	mail message ||| ifile ofile	count=1
arg	hyperbolic tangent [arg] ||| [arg]	count=1
arg	execute a path with ||| path	count=1
arg	is not found ||| b sub start end	count=1
module	2-d [module] cartesian ||| [module]	count=5
module	chain object ||| itertools chain	count=1
module	that contain masked ||| numpy ma	count=2
function	multiply ||| hermmul	count=1
module	specified ||| numpy	count=2
arg	file from a tarinfo ||| tarinfo	count=1
arg	directory tree ||| path ignore_errors	count=1
function	decode a ||| decode	count=1
function	invalid ||| fix invalid	count=2
module	the masked array ||| numpy ma	count=1
arg	[arg_1] [arg_2] ||| hermgrid2d [arg_1] [arg_2]	count=1
function	elements of a right-justified ||| rjust	count=1
arg	n ||| n	count=10
function	xor of two ||| xor	count=1
arg	in the flattened version ||| a	count=1
function_arg	a - b ||| sub a b	count=1
function_arg	backward [arg_2] ||| [arg_2] [function_1]	count=2
function	a string ||| choose	count=1
function	slices along ||| along	count=1
function_arg	[function_1] c is ||| [arg_2] [function_1]	count=1
module	legendre series to another ||| polynomial legendre	count=1
function_arg	[function_1] function ||| [function_1] [arg_2]	count=17
function	specified axis ||| nanpercentile	count=1
arg	the [arg] to ||| [arg]	count=1
function	tree representation ||| sequence2ast	count=1
arg	[arg_1] pysqlite ||| [arg_2] [arg_1]	count=1
arg	names [arg_2] ||| [arg_2] [arg_1]	count=3
function	class to be used ||| class	count=1
arg	two arrays element-wise ||| x1 x2	count=2
module	of ||| frozenset	count=2
arg	cartesian product [arg_1] [arg_2] ||| hermegrid2d [arg_1] [arg_2]	count=1
function	not ||| not	count=1
module	of an n-dimensional ||| numpy	count=1
arg	[arg_1] port ||| [arg_1] [arg_2]	count=2
arg	like rfind [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
arg	n ||| n k	count=1
function	inputs in base-2 ||| logaddexp2	count=1
function	a mask to ||| mask	count=2
arg	input to an ||| a	count=1
arg	the given axis ||| axis	count=6
arg	in filename ||| filename	count=1
arg	parts of a ||| infile outfile	count=1
arg	path of ||| path	count=1
function_arg	return the process return [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
arg	valueerror when [arg] ||| [arg] start	count=1
module	and a ||| zipfile zipfile	count=1
arg	group associated ||| pgid	count=1
function	new thread and return ||| new thread	count=1
arg	[arg_1] type2 ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] a mime ||| mimify mimify [function_1] ifile ofile [arg_2]	count=1
function_arg	16-bit [arg_2] ||| [arg_2] [function_1]	count=4
function	entries in the directory ||| listdir	count=1
function	delete a directory tree ||| rmtree	count=1
arg	pattern [arg_2] ||| [arg_1] [arg_2]	count=1
arg	an array [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	split the [arg_2] ||| [arg_2] [function_1]	count=4
