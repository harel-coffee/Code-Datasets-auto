swap	swap
fv	fv
separator	separator
named	named
new-by-name	new-by-name
ocr	ocr
?	?
grest	grest
object	object
-&gt;patternmatrix	-&gt;patternmatrix
proxy-super	proxy-super
put!	put!
atan	atan
seque	seque
left	left
plus	plus
bit-and	bit-and
matchu	matchu
basis	basis
printable-ascii-char	printable-ascii-char
test-ns	test-ns
create	create
+'	+'
drop-last	drop-last
ct	ct
sync	sync
ret	ret
t-buf-or-n	t-buf-or-n
keyseq	keyseq
upper-case	upper-case
end	end
pcalls	pcalls
-&gt;basiccache	-&gt;basiccache
coll2	coll2
format	format
comment	comment
aset-double	aset-double
seq	seq
clojure.data.json	clojure.data.json
right	right
ordered	ordered
memo-swap!	memo-swap!
sortedset	sortedset
anode	anode
class?	class?
nilable	nilable
map-&gt;pmap	map-&gt;pmap
make-occurs-unify-fn	make-occurs-unify-fn
zero?	zero?
reify	reify
group-keywords	group-keywords
ann	ann
s2	s2
int	int
pat	pat
cycle	cycle
up	up
unchecked-dec-int	unchecked-dec-int
tree	tree
sample	sample
logical	logical
lv	lv
warn-on-unannotated-vars	warn-on-unannotated-vars
create-ns	create-ns
ref	ref
fn1	fn1
&gt;bindnode	&gt;bindnode
lists	lists
more	more
classpath	classpath
remove-loops	remove-loops
argv	argv
unsigned-bit-shift-right	unsigned-bit-shift-right
idxs	idxs
call-cc	call-cc
memoized-fn	memoized-fn
test-vars	test-vars
xor	xor
all	all
first	first
when-some	when-some
xform*	xform*
opt	opt
math-functions	math-functions
component-graph	component-graph
ifn	ifn
associative?	associative?
ensure-reduced	ensure-reduced
sc	sc
tree-seq	tree-seq
onto-chan	onto-chan
gen-class	gen-class
anss	anss
find-var	find-var
for	for
contexts	contexts
print-env	print-env
state-t	state-t
assert-predicate	assert-predicate
start	start
operations	operations
clauses	clauses
map-indexed	map-indexed
:filter-sets	:filter-sets
expression2	expression2
read-str	read-str
startparse	startparse
success	success
alter-var-root	alter-var-root
decimal	decimal
sgn	sgn
i	i
future-done?	future-done?
asin	asin
str	str
n-or-q	n-or-q
[param	[param
handler-fn	handler-fn
mmap	mmap
seqable?	seqable?
fntail	fntail
transient	transient
pmap	pmap
clojure.algo.graph	clojure.algo.graph
other	other
replacement	replacement
some	some
re-string-or-pattern	re-string-or-pattern
aset-float	aset-float
sorted	sorted
version	version
dedupe	dedupe
init-proxy	init-proxy
print-cause-trace	print-cause-trace
source	source
add-loops	add-loops
construct	construct
base	base
trim-newline	trim-newline
sccs	sccs
cf	cf
load-script	load-script
skip	skip
load	load
untap-all	untap-all
cos	cos
sequentialseqable	sequentialseqable
last	last
prob	prob
-&gt;digit4	-&gt;digit4
cond-&gt;	cond-&gt;
hash-ordered-coll	hash-ordered-coll
onto	onto
repl-caught	repl-caught
long	long
conditional	conditional
:	:
-&gt;one-type	-&gt;one-type
load-string	load-string
zs	zs
/	/
to-chan	to-chan
cond-&gt;&gt;	cond-&gt;&gt;
template	template
stratification-list	stratification-list
test-all-vars	test-all-vars
timeout-ms	timeout-ms
or	or
prefix	prefix
get-neighbors	get-neighbors
fetch-state	fetch-state
condp	condp
-&gt;mappattern	-&gt;mappattern
pow	pow
catvec	catvec
resultset-seq	resultset-seq
fix-constraints	fix-constraints
done	done
memfn	memfn
end-key	end-key
non-nil-return	non-nil-return
var2	var2
c3	c3
unchecked-short	unchecked-short
deliver	deliver
f-buf-or-n	f-buf-or-n
resolve	resolve
?]	?]
make	make
lruq	lruq
file	file
code-dispatch	code-dispatch
frequencies	frequencies
with-test-out	with-test-out
tagged-value	tagged-value
matches	matches
fne	fne
km	km
write	write
locking	locking
unchecked-multiply	unchecked-multiply
import	import
assert	assert
*	*
mapv	mapv
macroexpand	macroexpand
db*	db*
symbol	symbol
accessor	accessor
conjo	conjo
are	are
m3	m3
counted	counted
bean	bean
-&gt;softcache	-&gt;softcache
duplicates	duplicates
pprint	pprint
not	
-&gt;choice	-&gt;choice
fetch	fetch
clojure.java.browse	clojure.java.browse
demunge	demunge
into	into
known	known
hseq	hseq
-&gt;lirscache	-&gt;lirscache
add-watch	add-watch
variable-fn	variable-fn
reverse-graph	reverse-graph
extend	extend
m	m
process-vars	process-vars
check	check
conde	conde
completing	completing
point	point
throwable	throwable
random	random
-&gt;restpattern	-&gt;restpattern
declare-datatypes	declare-datatypes
subseq	subseq
check-form-info	check-form-info
defmonad	defmonad
close!	close!
eof	eof
clojure.core.incubator	clojure.core.incubator
clojure.test	clojure.test
:-	:-
with-sh-dir	with-sh-dir
numerator	numerator
base64	base64
dir	dir
transfer	transfer
params*	params*
cases	cases
validated	validated
groups	groups
s1	s1
maps	maps
nafc	nafc
tests	tests
array&gt;	array&gt;
-&gt;substitutions	-&gt;substitutions
tc-ignore	tc-ignore
with-monad	with-monad
first-row-wildcards-case	first-row-wildcards-case
keywordize-keys	keywordize-keys
sh	sh
fs	fs
sort	sort
methodsym	methodsym
run-nc	run-nc
syms	syms
expression	expression
bindings	bindings
trim	trim
-&gt;fncache	-&gt;fncache
load-reader	load-reader
monad-transformer	monad-transformer
cons	cons
nonemptyvec	nonemptyvec
tc	tc
prompt	prompt
clojure.data.avl	clojure.data.avl
pos	pos
keys	keys
def	def
re-groups	re-groups
one	one
take-while	take-while
vary	vary
empty-rows-case	empty-rows-case
clojure.core.unify	clojure.core.unify
package-prefix	package-prefix
which-m-plus	which-m-plus
rev	rev
attr	attr
from-index	from-index
get-in	get-in
in	in
inspect-table	inspect-table
-&gt;pair	-&gt;pair
floats	floats
tag	tag
skip-whitespace	skip-whitespace
unsub-all	unsub-all
or*	or*
put	put
count	count
zip	zip
sliding-buffer	sliding-buffer
proxy	proxy
throw	throw
future-cancel	future-cancel
=	=
title	title
map-&gt;one-type	map-&gt;one-type
ratio?	ratio?
array-map	array-map
date	date
realized?	realized?
pop	pop
bit-xor	bit-xor
toggle	toggle
staticfieldname-symbol	staticfieldname-symbol
declare-protocols	declare-protocols
go-loop	go-loop
clojure.algo.generic.comparison	clojure.algo.generic.comparison
ends-with?	ends-with?
-&gt;digit2	-&gt;digit2
clojure.algo.generic.functor	clojure.algo.generic.functor
measure-ref	measure-ref
typesyn	typesyn
cnt	cnt
ann-many	ann-many
parse	parse
unchecked-byte	unchecked-byte
release-pending-sends	release-pending-sends
resultset	resultset
aset-char	aset-char
bound]	bound]
error-mode	error-mode
aclone	aclone
stack	stack
clojure.main	clojure.main
keywordize	keywordize
inc-report-counter	inc-report-counter
v4	v4
when-let	when-let
&lt;!	&lt;!
vswap	vswap
walk	walk
map-&gt;leafnode	map-&gt;leafnode
clear	clear
io!	io!
...	...
cc	cc
format-in	format-in
clojure.java.io	clojure.java.io
clojure.data.csv	clojure.data.csv
any	any
self-recursive-sets	self-recursive-sets
*]	*]
not-any?	not-any?
validator-fn	validator-fn
promise-chan	promise-chan
random-sample	random-sample
unchecked-multiply-int	unchecked-multiply-int
short	short
unsafe	unsafe
kw	kw
topic	topic
every?	every?
symbols	symbols
ann-protocol	ann-protocol
ks]	ks]
create-struct	create-struct
sorted-map-by	sorted-map-by
ex-info	ex-info
xml-zip	xml-zip
form	form
bit-test	bit-test
map-&gt;suspendedstream	map-&gt;suspendedstream
persistent	persistent
el	el
list	list
read-line	read-line
iterate	iterate
db	db
-&gt;switchnode	-&gt;switchnode
defalias	defalias
mix-collection-hash	mix-collection-hash
dec-length	dec-length
bit-or	bit-or
instance?	instance?
[fixed*	[fixed*
thread-stopper	thread-stopper
if-some	if-some
append-child	append-child
sorted-map	sorted-map
lower	lower
nc*	nc*
keyword?	keyword?
inc	inc
oc	oc
pr	pr
&lt;=	&lt;=
hash	hash
new-state	new-state
run-db	run-db
arg1	arg1
declare-names	declare-names
true?	true?
[binding	[binding
sort-by	sort-by
nilable-param	nilable-param
&gt;leafnode	&gt;leafnode
extract	extract
else?	else?
swap!	swap!
load-if-needed	load-if-needed
ctor	ctor
defmacro	defmacro
project	project
realized	realized
init*]	init*]
xl	xl
tick	tick
string	string
with-bindings	with-bindings
*'	*'
macroexpand-1	macroexpand-1
possibly	possibly
llist	llist
process	process
-&gt;singletree	-&gt;singletree
cause	cause
repl	repl
typed	typed
var	var
pattern	pattern
volatile?	volatile?
colinc	colinc
cm	cm
&gt;!!	&gt;!!
letfn	letfn
even	even
partition	partition
successful?	successful?
pipeline	pipeline
interface	interface
ocrs	ocrs
soft	soft
pending	pending
arities	arities
buff	buff
re-quote-replacement	re-quote-replacement
insert-child	insert-child
state	state
trimr	trimr
sequence	sequence
replace	replace
nilablenonemptyseq	nilablenonemptyseq
set!	set!
master	master
kmap	kmap
even?	even?
namespaces	namespaces
inspect	inspect
mexpr	mexpr
refer	refer
&gt;!	&gt;!
identity	identity
lefts	lefts
doms	doms
dispatch-val	dispatch-val
rseq	rseq
isa	isa
load-file	load-file
assoc	assoc
anything	anything
decimal?	decimal?
writer	writer
alias	alias
c	c
tuple	tuple
to	to
tan	tan
gs	gs
multiply	multiply
matche	matche
-&gt;digit1	-&gt;digit1
caught	caught
print-json	print-json
caching	caching
column	column
fun	fun
denom	denom
kvs	kvs
short-array	short-array
x2	x2
dotimes	dotimes
method	method
child	child
kw-args	kw-args
&gt;mapkeypattern	&gt;mapkeypattern
future-cancelled?	future-cancelled?
expression1	expression1
cont	cont
sequentialseq	sequentialseq
output-stream	output-stream
sets	sets
ttl	ttl
paths	paths
u	u
await	await
memoized?	memoized?
lines	lines
set-validator!	set-validator!
&gt;patternmatrix	&gt;patternmatrix
:as	:as
encoding	encoding
flatten-bindings	flatten-bindings
filterv	filterv
solo-mode	solo-mode
-&gt;leafnode	-&gt;leafnode
wrap-fn	wrap-fn
oname	oname
with-read-known	with-read-known
remove-watch	remove-watch
vs	vs
proxy-mappings	proxy-mappings
args*	args*
dissoc!	dissoc!
source-fn	source-fn
lower-case	lower-case
complement	complement
appendo	appendo
enter	enter
cast	cast
row	row
msecs	msecs
s	s
biginteger	biginteger
docstring	docstring
as-&gt;	as-&gt;
clojure.zip	clojure.zip
keys]	keys]
&gt;switchnode	&gt;switchnode
booleans	booleans
as-relative-path	as-relative-path
untap	untap
indent	indent
set-state	set-state
binds	binds
with-constraints	with-constraints
reservoir	reservoir
declare	declare
-&gt;literalpattern	-&gt;literalpattern
interns	interns
conj!	conj!
nonemptyaseq	nonemptyaseq
blank?	blank?
emptyseqable	emptyseqable
not-empty	not-empty
monitor-exit	monitor-exit
tfn	tfn
maybe-ann-body-expr	maybe-ann-body-expr
loader	loader
lcons	lcons
refers	refers
timeout	timeout
group-by	group-by
bound	bound
&gt;constructor	&gt;constructor
integer?	integer?
&gt;failnode	&gt;failnode
nonemptyseqable	nonemptyseqable
cljt	cljt
nsyms	nsyms
take	take
check-form*	check-form*
x3	x3
[k	[k
lvars	lvars
formatter-out	formatter-out
bit-flip	bit-flip
subrange	subrange
proc	proc
[fn-spec-or-annotation*]	[fn-spec-or-annotation*]
satisfies?	satisfies?
depth	depth
conj	conj
supers	supers
v3	v3
caller	caller
postwalk	postwalk
capitalize	capitalize
ref2	ref2
monitor	monitor
defprotocol	defprotocol
w	w
union	union
member1o	member1o
extends?	extends?
ref-min-history	ref-min-history
dropping	dropping
cond-statement	cond-statement
run-all-tests	run-all-tests
enc-length	enc-length
chosen	chosen
min-key	min-key
y	y
untyped-var	untyped-var
re-find	re-find
m-expr	m-expr
repeat	repeat
needed	needed
make-parents	make-parents
print-stack-trace	print-stack-trace
ks	ks
c2	c2
simple-dispatch	simple-dispatch
m2	m2
var?	var?
col	col
rest?	rest?
unordered	unordered
prefers	prefers
start-key	start-key
map-&gt;len-right-meter	map-&gt;len-right-meter
into-array	into-array
&gt;suspendedstream	&gt;suspendedstream
xform	xform
error	error
coll3	coll3
defn-	defn-
div	div
eduction	eduction
ascii	ascii
url	url
longs	longs
writer-m	writer-m
case	case
set-error-mode!	set-error-mode!
arg3	arg3
fixed	fixed
var&gt;	var&gt;
set-pprint-dispatch	set-pprint-dispatch
state-m-until	state-m-until
chan	chan
datatypes	datatypes
pr-str	pr-str
quot	quot
init?	init?
float-array	float-array
_meta	_meta
clojure.repl	clojure.repl
ancestors	ancestors
ys	ys
ns-imports	ns-imports
pipeline-async	pipeline-async
af	af
not-every?	not-every?
var1	var1
-&gt;emptytree	-&gt;emptytree
insert	insert
xml	xml
sorted-set-by	sorted-set-by
bigdec	bigdec
[bindings*]	[bindings*]
fixed-point	fixed-point
unmix	unmix
first-row-empty-case	first-row-empty-case
sin	sin
clojure.core.cache	clojure.core.cache
admix	admix
idx2	idx2
-&gt;len-right-meter	-&gt;len-right-meter
doc-string?	doc-string?
csv	csv
subvec	subvec
rights	rights
fressian	fressian
constructor	constructor
floor	floor
remove-method	remove-method
split	split
formatter	formatter
exp	exp
-&gt;apppattern	-&gt;apppattern
skip-if-eol	skip-if-eol
nth	nth
flags-ignored-for-now	flags-ignored-for-now
json	json
edn	edn
prn	prn
reduce	reduce
letfn&gt;	letfn&gt;
pprint-newline	pprint-newline
line	line
fix	fix
mdata	mdata
transitive	transitive
with-out-str	with-out-str
statement	statement
pvalues	pvalues
nonemptyseq	nonemptyseq
rint	rint
memoizer	memoizer
make-unifier-fn	make-unifier-fn
unchecked-long	unchecked-long
math-context	math-context
zipper	zipper
countrange	countrange
nilablenonemptyaseq	nilablenonemptyaseq
bit-not	bit-not
do-alts	do-alts
async	async
element	element
rembero	rembero
deftest-	deftest-
join	join
matcher	matcher
conso	conso
type-pairs*	type-pairs*
print-length-loop	print-length-loop
mult	mult
info	info
clojure.instant	clojure.instant
aset-byte	aset-byte
set-val	set-val
exit	exit
starts	starts
run!	run!
unchecked-subtract-int	unchecked-subtract-int
provide	provide
repeatedly	repeatedly
idx	idx
keywords	keywords
ratio	ratio
uniform	uniform
length	length
when-not	when-not
lazy-cat	lazy-cat
ref1	ref1
-&gt;wildcardpattern	-&gt;wildcardpattern
print-trace-element	print-trace-element
sorted?	sorted?
rhs	rhs
doc	doc
redefs	redefs
dispatch-val-x	dispatch-val-x
atom	atom
eps	eps
trace	trace
denom-gen	denom-gen
xf	xf
trace-lvars	trace-lvars
firsto	firsto
patterns	patterns
failure-cont	failure-cont
blank	blank
interfaces	interfaces
munge	munge
on	on
in-ns	in-ns
clojure.stacktrace	clojure.stacktrace
lv-fn	lv-fn
f2	f2
dorun	dorun
simple	simple
fs*	fs*
mid	mid
print-filterset	print-filterset
metadata-map	metadata-map
the-ns	the-ns
compose	compose
branch	branch
self	self
clause	clause
instance	instance
interleave	interleave
resolver	resolver
extends	extends
.	.
resource	resource
ex	ex
associative-lookup	associative-lookup
value-fn	value-fn
mod	mod
max	max
transformer	transformer
debug	debug
-&gt;retryingdelay	-&gt;retryingdelay
delay?	delay?
reduced	reduced
file-seq	file-seq
unalias	unalias
xml-seq	xml-seq
via	via
p	p
trace-s	trace-s
begin-closed-list	begin-closed-list
off	off
print-str	print-str
ns-map	ns-map
package	package
apply	apply
ns-refers	ns-refers
conjugate	conjugate
take-last	take-last
memo-clear!	memo-clear!
dissoc-in	dissoc-in
keyvals	keyvals
arithmetic	arithmetic
substr	substr
clojure.edn	clojure.edn
-&gt;vecseq	-&gt;vecseq
fifo	fifo
-&gt;digit3	-&gt;digit3
ns-name	ns-name
xn	xn
some-&gt;&gt;	some-&gt;&gt;
post	post
-&gt;vec	-&gt;vec
fetch-val	fetch-val
reference	reference
[obj*]	[obj*]
mapcat	mapcat
ps	ps
oldval	oldval
declaring-class	declaring-class
long-array	long-array
attr-map?	attr-map?
fk	fk
reverse	reverse
map	map
symbol?	symbol?
reader	reader
f1	f1
wildcards-and-duplicates	wildcards-and-duplicates
iter	iter
position	position
includes	includes
delay	delay
contracts	contracts
snapshot	snapshot
m-when-not	m-when-not
with-bindings*	with-bindings*
iterator	iterator
every	every
with-redefs-fn	with-redefs-fn
reduce-kv	reduce-kv
-&gt;lvar	-&gt;lvar
test-var	test-var
k	k
definterface	definterface
eset	eset
run-cont	run-cont
-&gt;&gt;	-&gt;&gt;
closed	closed
fnc	fnc
vol	vol
vn	vn
fmt	fmt
-&gt;asmreflector	-&gt;asmreflector
ty	ty
wildcards	wildcards
reps	reps
close	close
when-let-fail	when-let-fail
-&gt;lrucache	-&gt;lrucache
add	add
set2	set2
compare	compare
soft-cache-factory	soft-cache-factory
bit-and-not	bit-and-not
idxv	idxv
pp	pp
maybe	maybe
eof-value	eof-value
reductions	reductions
n	n
dispatch-fn	dispatch-fn
fn-tail	fn-tail
-&gt;doublelist	-&gt;doublelist
inner	inner
dispatch-val-y	dispatch-val-y
&gt;len	&gt;len
rightmost	rightmost
-&gt;countedsortedset	-&gt;countedsortedset
init-val-or-seq	init-val-or-seq
gensym	gensym
make-hierarchy	make-hierarchy
slurp	slurp
prefix-string	prefix-string
unifier	unifier
history	history
cond	cond
return-type	return-type
ansl	ansl
number?	number?
fn*	fn*
ns-aliases	ns-aliases
keep-indexed	keep-indexed
gen	gen
monitor-enter	monitor-enter
ref-max-history	ref-max-history
some?	some?
blocking	blocking
remote	remote
clojure.set	clojure.set
type*	type*
message	message
sqrt	sqrt
v1	v1
bit-clear	bit-clear
transitive-closure	transitive-closure
reset!	reset!
root-cause	root-cause
meter-obj	meter-obj
call	call
everyg	everyg
2d	2d
io	io
elements	elements
-&gt;vectorpattern	-&gt;vectorpattern
unsub	unsub
bit-shift-left	bit-shift-left
select	select
record	record
clojure.data.codec.base64	clojure.data.codec.base64
-'	-'
volatile	volatile
yl	yl
-&gt;counteddoublelist	-&gt;counteddoublelist
threshold	threshold
future-call	future-call
rsubseq	rsubseq
clojure.core.rrb-vector	clojure.core.rrb-vector
trampoline	trampoline
contains?	contains?
diff	diff
predicate	predicate
namespace-sym	namespace-sym
rows	rows
map-&gt;constructor	map-&gt;constructor
t	t
g1	g1
content	content
rational?	rational?
reflect	reflect
dec	dec
number	number
lazy	lazy
juxt	juxt
printable	printable
local	local
	
h	h
invert	invert
fixed*	fixed*
kw-args?	kw-args?
node	node
satisfies	satisfies
rf	rf
sep	sep
&gt;&gt;	&gt;&gt;
difference	difference
chars	chars
nc	nc
require	require
empty?	empty?
postwalk-demo	postwalk-demo
pop-thread-bindings	pop-thread-bindings
amap	amap
run-tests	run-tests
watch	watch
agent1	agent1
hierarchy	hierarchy
and*	and*
denominator	denominator
seqable	seqable
exception	exception
param	param
reader-conditional	reader-conditional
down	down
unchecked-inc	unchecked-inc
read-object	read-object
persistent!	persistent!
aset-int	aset-int
volatile!	volatile!
distincto	distincto
extract-lvars	extract-lvars
unchecked-negate-int	unchecked-negate-int
drop-while	drop-while
thread-call	thread-call
superset	superset
ints	ints
testing	testing
args	args
copy-term	copy-term
pub	pub
vary-meta	vary-meta
subtract	subtract
vec	vec
nil	nil
ensure	ensure
lookup	lookup
scalar	scalar
-&gt;substvalue	-&gt;substvalue
write-object	write-object
ttl-ms	ttl-ms
reset-meta!	reset-meta!
&gt;pmap	&gt;pmap
with-pprint-dispatch	with-pprint-dispatch
membero	membero
chs	chs
nonemptycoll	nonemptycoll
special-symbol?	special-symbol?
take!	take!
staticfieldname	staticfieldname
c1	c1
wrap	wrap
vswap!	vswap!
vector?	vector?
of	of
-&gt;vecnode	-&gt;vecnode
inheritance	inheritance
keywordize?	keywordize?
cs	cs
by	by
&gt;=	&gt;=
group	group
find-doc	find-doc
time	time
identical?	identical?
clojure.algo.generic.arithmetic	clojure.algo.generic.arithmetic
comparison	comparison
inheritance-lookup	inheritance-lookup
unbound	unbound
names	names
make-unify-fn	make-unify-fn
finger-tree	finger-tree
descendants	descendants
rem	rem
[params*]	[params*]
subset	subset
map-&gt;restpattern	map-&gt;restpattern
hi	hi
false	false
[&amp;	[&amp;
arr	arr
offset	offset
coverage	coverage
bound-fn	bound-fn
colnum	colnum
sigs	sigs
poll	poll
loaded-libs	loaded-libs
fail	fail
z	z
find	find
map-entry?	map-entry?
encoding-transfer	encoding-transfer
defmonadfn	defmonadfn
literal	literal
re-matcher	re-matcher
body-expr	body-expr
core	core
deps	deps
flip	flip
docstring?	docstring?
v2	v2
take-nth	take-nth
bases	bases
g2	g2
char?	char?
comp	comp
codec	codec
envs	envs
object-array	object-array
flatten	flatten
defonce	defonce
clause*	clause*
transduce	transduce
non	non
entry	entry
field	field
report	report
&gt;field	&gt;field
pprint-json	pprint-json
cq	cq
-&gt;javareflector	-&gt;javareflector
+	+
true	true
testing-vars-str	testing-vars-str
op	op
unreduced	unreduced
type?	type?
clojure.algo.generic.math-functions	clojure.algo.generic.math-functions
until	until
!	!
double-array	double-array
stream	stream
zipmap	zipmap
-&gt;pmap	-&gt;pmap
aset-boolean	aset-boolean
unchecked-char	unchecked-char
expr	expr
tagged-literal	tagged-literal
math	math
shutdown-agents	shutdown-agents
stacktrace	stacktrace
buf	buf
var-set	var-set
m#	m#
neighbors	neighbors
-&gt;seqpattern	-&gt;seqpattern
nthnext	nthnext
-&gt;lucache	-&gt;lucache
exprs	exprs
q	q
nonemptyavec	nonemptyavec
send	send
unchecked-int	unchecked-int
typed-deps	typed-deps
loops	loops
dec'	dec'
p1	p1
filters	filters
keyfn	keyfn
printf	printf
rq	rq
approx	
datatype	datatype
byte	byte
provided	provided
shuffle	shuffle
successful	successful
last-index-of	last-index-of
unchecked-negate	unchecked-negate
classname-symbol	classname-symbol
go	go
ann-interface	ann-interface
factory	factory
kind	kind
constraints	constraints
split-key	split-key
offer	offer
remainder	remainder
println	println
bit	bit
term	term
min	min
iref	iref
a	a
derive	derive
split-lines	split-lines
syn	syn
rational	rational
atan2	atan2
fixtures	fixtures
clojure.core.match	clojure.core.match
return	return
try-expr	try-expr
aset-short	aset-short
r	r
state-map	state-map
avl	avl
namespace-munge	namespace-munge
inc'	inc'
insert-left	insert-left
with-open	with-open
unify-	unify-
sliding	sliding
block	block
reset	reset
tagged-object?	tagged-object?
compile	compile
append	append
nonemptylazyseq	nonemptylazyseq
all-ns	all-ns
stringify	stringify
s3	s3
do-template	do-template
size	size
arityvec+	arityvec+
default	default
&gt;restpattern	&gt;restpattern
map-&gt;substvalue	map-&gt;substvalue
statistics	statistics
type	type
extenders	extenders
map-&gt;method	map-&gt;method
cache	cache
list*	list*
type-provided?	type-provided?
run	run
continuation	continuation
o	o
with-meta	with-meta
unchecked-dec	unchecked-dec
then	then
get-possibly-unbound-var	get-possibly-unbound-var
method-type	method-type
println-str	println-str
get	get
byte-array	byte-array
binding-map	binding-map
b	b
opts+sigs	opts+sigs
thread-bound?	thread-bound?
out	out
read	read
char-array	char-array
1	1
interpose	interpose
re-pattern	re-pattern
to-pattern-row	to-pattern-row
set-error-handler!	set-error-handler!
body	body
pred	pred
identical	identical
build-memoizer	build-memoizer
blockingderef	blockingderef
size-or-seq	size-or-seq
clojure.core.logic	clojure.core.logic
error-handler	error-handler
array	array
push	push
write-out	write-out
not=	not=
peek	peek
defmethod*	defmethod*
collection	collection
run-nc*	run-nc*
eof-error?	eof-error?
rrb-vector	rrb-vector
rename-keys	rename-keys
p3	p3
timeout-val	timeout-val
set	set
x1	x1
sizer	sizer
double	double
neg?	neg?
parameter-types	parameter-types
newval	newval
catch	catch
solo	solo
rcache	rcache
sequential?	sequential?
x4	x4
print-table	print-table
nodes	nodes
stratification	stratification
clojure.data	clojure.data
boolean	boolean
publics	publics
handler	handler
map-&gt;switchnode	map-&gt;switchnode
tail	tail
if-let	if-let
rand	rand
&gt;zero	&gt;zero
l	l
some-fn	some-fn
name?	name?
summary	summary
abs	abs
hash-map	hash-map
clojure.core.contracts	clojure.core.contracts
&gt;substvalue	&gt;substvalue
includes?	includes?
eval	eval
instant	instant
readable	readable
unchecked-add-int	unchecked-add-int
remove-all-methods	remove-all-methods
step	step
lvaro	lvaro
form*	form*
unmap	unmap
outer	outer
seq-exprs	seq-exprs
prefer-method	prefer-method
re-matches	re-matches
item	item
and	and
request-exit	request-exit
ann-datatype	ann-datatype
fnu	fnu
frm	frm
rec	rec
hsequential	hsequential
waiting-stream-check	waiting-stream-check
m-lift	m-lift
memoize	memoize
root	root
generic	generic
loop	loop
pprint-logical-block	pprint-logical-block
butlast	butlast
&lt;!!	&lt;!!
reader-conditional?	reader-conditional?
char	char
rdr	rdr
rationalize	rationalize
prefer	prefer
enc	enc
dissoc	dissoc
testing-contexts-str	testing-contexts-str
build	build
record?	record?
str-or-pattern	str-or-pattern
declare-alias-kind	declare-alias-kind
fn-name	fn-name
fna	fna
occurs	occurs
loc	loc
class	class
var-coverage	var-coverage
splicing?	splicing?
with-precision	with-precision
dname	dname
alt!!	alt!!
bound-fn*	bound-fn*
ceil	ceil
cancel	cancel
relative	relative
:objects	:objects
cl	cl
dependency-list	dependency-list
defnu	defnu
import-symbols-or-lists	import-symbols-or-lists
map-&gt;mapkeypattern	map-&gt;mapkeypattern
metadata	metadata
split-at	split-at
flags	flags
fmap	fmap
comparator	comparator
exactcount	exactcount
vreset	vreset
to-array-2d	to-array-2d
other-column-chosen-case	other-column-chosen-case
opts*	opts*
is	is
upper	upper
limits	limits
protocols	protocols
ctor-args	ctor-args
add-local-javadoc	add-local-javadoc
parents	parents
enumeration-seq	enumeration-seq
defne	defne
int-array	int-array
underive	underive
m-when	m-when
fresh	fresh
opts	opts
force	force
unique	unique
override-method	override-method
unchecked-double	unchecked-double
alter	alter
prewalk-replace	prewalk-replace
catch-clause*	catch-clause*
more-dims	more-dims
unchecked-divide-int	unchecked-divide-int
index	index
opts+specs	opts+specs
exprs*	exprs*
filterset	filterset
print	print
replace-first	replace-first
cid	cid
reduced?	reduced?
cancelled	cancelled
do-report	do-report
approx=	approx=
set1	set1
specs	specs
classloader	classloader
unblocking	unblocking
compose-fixtures	compose-fixtures
rs	rs
eol	eol
post-ordered-nodes	post-ordered-nodes
prn-str	prn-str
waiting	waiting
partial	partial
kv	kv
start-test	start-test
check-ns	check-ns
agents	agents
binder	binder
uuid	uuid
join-fixtures	join-fixtures
num	num
leftmost	leftmost
found	found
rand-nth	rand-nth
when-first	when-first
-&gt;lcons	-&gt;lcons
use	use
odd?	odd?
range	range
ex-data	ex-data
coll1	coll1
-&gt;guardpattern	-&gt;guardpattern
sym	sym
avec	avec
defna	defna
accumulator	accumulator
&gt;	&gt;
triml	triml
-&gt;orpattern	-&gt;orpattern
java	java
alt	alt
msg	msg
rank	rank
map-&gt;field	map-&gt;field
aliases	aliases
from	from
nthrest	nthrest
update	update
unsafe-join	unsafe-join
branch?	branch?
iterator-seq	iterator-seq
unchecked-remainder-int	unchecked-remainder-int
print-throwable	print-throwable
recur	recur
[fnspecs*]	[fnspecs*]
areduce	areduce
nothing	nothing
some-&gt;	some-&gt;
-&gt;ttlcache	-&gt;ttlcache
json-str	json-str
rest	rest
inst-of	inst-of
expected	expected
enumeration	enumeration
protocol	protocol
ann-form	ann-form
data	data
function?	function?
class-or-object	class-or-object
mode-keyword	mode-keyword
make-node	make-node
unchecked-float	unchecked-float
flush	flush
dims	dims
merge	merge
read-json	read-json
doto	doto
subs	subs
repl-read	repl-read
meth	meth
intern	intern
with-in-str	with-in-str
am	am
stack-element-str	stack-element-str
deftest	deftest
get-pretty-writer	get-pretty-writer
macroexpand-all	macroexpand-all
repl-prompt	repl-prompt
doall	doall
-&gt;eduction	-&gt;eduction
run*	run*
inst	inst
fresh-line	fresh-line
set-agent-send-off-executor!	set-agent-send-off-executor!
run-db*	run-db*
match	match
end-list	end-list
do	do
relative-to	relative-to
forms	forms
thread	thread
mval	mval
ns-unmap	ns-unmap
:filter	:filter
obj	obj
pad-length	pad-length
dependency	dependency
boolean-array	boolean-array
struct	struct
-&gt;answercache	-&gt;answercache
index-of	index-of
varsym	varsym
dosync	dosync
-&gt;predicatepattern	-&gt;predicatepattern
sqr	sqr
-&gt;pluggablememoization	-&gt;pluggablememoization
inspect-tree	inspect-tree
table	table
expr*	expr*
-&gt;arraychunk	-&gt;arraychunk
available?	available?
featurec	featurec
p2	p2
to-array	to-array
acos	acos
nil?	nil?
function	function
matcha	matcha
new-instance	new-instance
exception-types	exception-types
subset?	subset?
clojure.data.fressian	clojure.data.fressian
struct-map	struct-map
write-csv	write-csv
tabled	tabled
constantly	constantly
generators	generators
new	new
dim	dim
starts-with?	starts-with?
shutdown	shutdown
memoized	memoized
annotation*	annotation*
lazy-walk	lazy-walk
isa?	isa?
poll!	poll!
num-gen	num-gen
field-caching-writer	field-caching-writer
fnil	fnil
algo	algo
fn	fn
agent2	agent2
through	through
let	let
msym	msym
super	super
commute	commute
clojure	clojure
parent	parent
nilo	nilo
read-csv	read-csv
pop!	pop!
seq?	seq?
&amp;	&amp;
select-keys	select-keys
type*]	type*]
colls	colls
defn	defn
name-vals-vec	name-vals-vec
-&gt;	-&gt;
remove-ns	remove-ns
else	else
request	request
clojure.reflect	clojure.reflect
lo	lo
definition	definition
lrus	lrus
escape	escape
seed	seed
throwable-&gt;map	throwable-&gt;map
deref	deref
filter	filter
basic	basic
map-&gt;failnode	map-&gt;failnode
pprint-indent	pprint-indent
inspector	inspector
emit	emit
pipe	pipe
defmulti	defmulti
silently	silently
suf	suf
superset?	superset?
rename	rename
value	value
ann-record	ann-record
mname	mname
occurrence	occurrence
stringify-keys	stringify-keys
-&gt;field	-&gt;field
children	children
xrel	xrel
make-array	make-array
parameter	parameter
matrix	matrix
file-position	file-position
spit	spit
decode!	decode!
bytes	bytes
break	break
lu	lu
make-subst-fn	make-subst-fn
the	the
nsym	nsym
push-thread-bindings	push-thread-bindings
empty	empty
assoc-in	assoc-in
update-in	update-in
finally	finally
class-and-interfaces	class-and-interfaces
send-via	send-via
weighted	weighted
buf-fn	buf-fn
func	func
make-occurs-unifier-fn	make-occurs-unifier-fn
clojure.core	clojure.core
find-keyword	find-keyword
distinct	distinct
inits	inits
in-length	in-length
unmix-all	unmix-all
update-proxy	update-proxy
input-stream	input-stream
vars	vars
ns-resolve	ns-resolve
input	input
-&gt;bindnode	-&gt;bindnode
special	special
newline	newline
options	options
unify	unify
line-seq	line-seq
bindings*	bindings*
encode!	encode!
fnspecs*	fnspecs*
aset	aset
if	if
with-test	with-test
on-caller?	on-caller?
splicing	splicing
path	path
component	component
obj*	obj*
class-resolver	class-resolver
update-val	update-val
tab	tab
shift	shift
alter-meta!	alter-meta!
if-not	if-not
memo	memo
read-string	read-string
equal	equal
add-classpath	add-classpath
mappings	mappings
map-invert	map-invert
not-found	not-found
reset-caches	reset-caches
logic	logic
action	action
doubles	doubles
inst-ctor	inst-ctor
variable	variable
javat	javat
gen-interface	gen-interface
sub	sub
get-thread-bindings	get-thread-bindings
scc	scc
counted?	counted?
clojure-version	clojure-version
kontracts	kontracts
pfn&gt;	pfn&gt;
ns-sym	ns-sym
variable?	variable?
partial-map	partial-map
buf-or-n	buf-or-n
key	key
imports	imports
aset-long	aset-long
atom1	atom1
concat	concat
ns-publics	ns-publics
succeed	succeed
-&gt;method	-&gt;method
init*	init*
fns	fns
at	at
-&gt;constructor	-&gt;constructor
browse-url	browse-url
m1	m1
ref-history-count	ref-history-count
clojure.algo.generic.collection	clojure.algo.generic.collection
negate	negate
fret	fret
list?	list?
incubator	incubator
alength	alength
-&gt;mapkeypattern	-&gt;mapkeypattern
intersection	intersection
main	main
cache-factory	cache-factory
ns	ns
context	context
sends	sends
prewalk-demo	prewalk-demo
aget	aget
into-array-syn	into-array-syn
smap	smap
values	values
clojure.xml	clojure.xml
monads	monads
constant	constant
javadoc	javadoc
prev	prev
clojure.inspector	clojure.inspector
classname	classname
indexed	indexed
pairs	pairs
-&gt;delayedtree	-&gt;delayedtree
nonlvaro	nonlvaro
lazy-seq	lazy-seq
get-validator	get-validator
sorted-set	sorted-set
browse	browse
x	x
compare-and-set!	compare-and-set!
override-constructor	override-constructor
sequential	sequential
..	..
id	id
class-name	class-name
distinct?	distinct?
declaring	declaring
odd	odd
bit-shift-right	bit-shift-right
coll	coll
reservoir-sample	reservoir-sample
pre	pre
set-break-handler!	set-break-handler!
contains	contains
options*	options*
dropping-buffer	dropping-buffer
get-proxy-class	get-proxy-class
seq-zip	seq-zip
log	log
-	-
with-state-field	with-state-field
map-&gt;patternmatrix	map-&gt;patternmatrix
code	code
spec	spec
-&gt;patternrow	-&gt;patternrow
proto+mmaps	proto+mmaps
emptyo	emptyo
monad	monad
clojure.pprint	clojure.pprint
end?	end?
fn?	fn?
tree-ref	tree-ref
ports	ports
partition-all	partition-all
clojure.core.typed	clojure.core.typed
re-seq	re-seq
multifn	multifn
lvars]	lvars]
sequence-t	sequence-t
references*	references*
unchecked-subtract	unchecked-subtract
tap	tap
merge-with	merge-with
decode	decode
atype	atype
decls	decls
env	env
map-&gt;zero-type	map-&gt;zero-type
ignored	ignored
vars]	vars]
tagged	tagged
ns-unalias	ns-unalias
meter	meter
postwalk-replace	postwalk-replace
len	len
v	v
-&gt;failnode	-&gt;failnode
script	script
clojure.data.generators	clojure.data.generators
clojure.data.finger-tree	clojure.data.finger-tree
decoding-transfer	decoding-transfer
future?	future?
emit-matrix	emit-matrix
name	name
try	try
which	which
aseq	aseq
unblocking-buffer?	unblocking-buffer?
string?	string?
extend-protocol	extend-protocol
next	next
restart	restart
[field	[field
doseq	doseq
output	output
pipeline-blocking	pipeline-blocking
clojure.core.memoize	clojure.core.memoize
split-with	split-with
many	many
cat	cat
float	float
-&gt;zero-type	-&gt;zero-type
open	open
associative	associative
test	test
extend-type	extend-type
mix	mix
lhs	lhs
qsym	qsym
lru	lru
loaded	loaded
xs	xs
first-column-chosen-case	first-column-chosen-case
val	val
clojure.java.shell	clojure.java.shell
&gt;one	&gt;one
zero	zero
float?	float?
arg2	arg2
apropos	apropos
resto	resto
edit	edit
keep	keep
every-pred	every-pred
assoc!	assoc!
init	init
cache-pred	cache-pred
divide	divide
defmethod	defmethod
set?	set?
get-method	get-method
future	future
send-off	send-off
subst	subst
when	when
tr	tr
keyword	keyword
not	not
dispatch	dispatch
topic-fn	topic-fn
clojure.string	clojure.string
port	port
with-local-vars	with-local-vars
default-sizer	default-sizer
ignore	ignore
decoding	decoding
ms	ms
pad	pad
delete-file	delete-file
reversible?	reversible?
ex-handler	ex-handler
as	as
features	features
d	d
clojure.template	clojure.template
assert-any	assert-any
namespace	namespace
var-get	var-get
failure	failure
coll?	coll?
-&gt;constraintstore	-&gt;constraintstore
f	f
yrel	yrel
unchecked	unchecked
validator	validator
vector-zip	vector-zip
alts	alts
drop	drop
[fs*]	[fs*]
agent	agent
repl-exception	repl-exception
clojure.walk	clojure.walk
unannotated	unannotated
release	release
alt!	alt!
cqs	cqs
ifn?	ifn?
await-for	await-for
integer	integer
dir-fn	dir-fn
geometric	geometric
ns-or-syms	ns-or-syms
pst	pst
meta	meta
option	option
&lt;	
untyped	untyped
ch	ch
hash-unordered-coll	hash-unordered-coll
-&gt;deeptree	-&gt;deeptree
bound?	bound?
ask	ask
bit-set	bit-set
update-state	update-state
whitespace	whitespace
pos?	pos?
hash-basis	hash-basis
one-of	one-of
unsigned	unsigned
graph	graph
promise	promise
nearest	nearest
hash-set	hash-set
bigint	bigint
vector	vector
with-redefs	with-redefs
limitq	limitq
warn	warn
delete	delete
install	install
set-agent-send-executor!	set-agent-send-executor!
lib	lib
functor	functor
closure	closure
max-key	max-key
debug-str	debug-str
vals	vals
unchecked-inc-int	unchecked-inc-int
caches	caches
prewalk	prewalk
remove	remove
&gt;	
neg	neg
e	e
executor	executor
make-occurs-subst-fn	make-occurs-subst-fn
reversible	reversible
tagged-literal?	tagged-literal?
running	running
with-sh-env	with-sh-env
agent-error	agent-error
apply-template	apply-template
counter	counter
encode	encode
available	available
shorts	shorts
ref-set	ref-set
clojure.core.async	clojure.core.async
g	g
asks	asks
with	with
-&gt;fifocache	-&gt;fifocache
shell	shell
goals	goals
insert-right	insert-right
permuteo	permuteo
re	re
recursive-component?	recursive-component?
-&gt;suspendedstream	-&gt;suspendedstream
stopper	stopper
debug-string	debug-string
empty-accumulator	empty-accumulator
vector-of	vector-of
&gt;method	&gt;method
into-array&gt;	into-array&gt;
close?	close?
ts	ts
cmpr	cmpr
unchecked-add	unchecked-add
map?	map?
success-cont	success-cont
drest	drest
end-test	end-test
mode	mode
binding	binding
request-prompt	request-prompt
find-ns	find-ns
atom2	atom2
ansv*	ansv*
cmap	cmap
ns-interns	ns-interns
partition-by	partition-by
finally-clause?	finally-clause?
lift	lift
begin	begin
nsyms-or-nsym	nsyms-or-nsym
ctorsym	ctorsym
clojure.java.javadoc	clojure.java.javadoc
measure	measure
ends	ends
maybe-t	maybe-t
now	now
[silently]	[silently]
pretty	pretty
nsname	nsname
quote	quote
==	==
types	types
rank-of	rank-of
pprint-tab	pprint-tab
precision	precision
false?	false?
xset	xset
&lt;	&lt;
unifier-	unifier-
cl-format	cl-format
restart-agent	restart-agent
add-remote-javadoc	add-remote-javadoc
map-&gt;bindnode	map-&gt;bindnode
items	items
rand-int	rand-int
demo	demo
oldform	oldform
while	while
override	override
buffer	buffer
offer!	offer!
clojure.algo.monads	clojure.algo.monads
construct-proxy	construct-proxy
basic-cache-factory	basic-cache-factory
pairs*	pairs*
vreset!	vreset!
recursive	recursive
key-val-pairs	key-val-pairs
limit	limit
&gt;map	&gt;map
libs	libs
copy	copy
methods	methods
