arg_pair	un nuevo ||| resource $file	count=1
function_name	este ||| set mlt min	count=1
arg_pair	de la clave /status ||| string $status	count=1
namespace	función acepta uno ||| function	count=1
function_name	devuelve el último error ||| get	count=1
function_name	la operación ||| errno	count=1
arg_pair	una colección de documentos ||| array $docs bool $overwrite	count=1
function_name	virtual actual donde se ||| chdir	count=1
function_name	imagecolorallocate() con la adición ||| imagecolorallocatealpha	count=1
function_name	descripción ||| cairo font options get hint style	count=1
function_name	una región de la ||| region	count=1
function_name	obtener conjuntos consecutivos ||| get	count=1
function_name	en cabecera mime ||| mimeheader	count=1
function_name	pdf usando el ||| pdf open file	count=1
function_name	devuelve ||| get file	count=1
function_name	intérprete xml ||| xml	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] fieldgroup [arg_pair_2]	count=1
function_name	de parada empleada durante ||| stop	count=1
function_name	la caché de código ||| apc	count=1
arg_pair	de ømq pueden hacer ||| zmqsocket $frontend zmqsocket $backend	count=1
return	encuentra activa actualmente en ||| bool	count=1
function_name	calendario juliano es ||| juliantojd	count=1
arg_pair	str con ||| string $str	count=2
function_name	[function_name_1] el nombre ||| [function_name_1] [function_name_2]	count=5
function_name	obtiene información [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	del cursor: ||| mongocursor	count=1
function_name	encuentre un ||| set	count=1
function_name	el de estilo de ||| set slide	count=1
return	entero y el resto ||| array	count=1
function_name	calcula la tangente para ||| trader tan	count=1
function_name	de fecha de este ||| date	count=1
function_name	se encuentra disponible ||| memory image	count=1
function_name	[function_name_1] cabecera ||| [function_name_2] [function_name_1]	count=3
function_name	método devuelve ||| get current	count=1
arg_pair	retira ||| string $str string $character_mask	count=1
function_name	con barras ||| addcslashes	count=1
function_name	estadísticas del servidor es ||| stats	count=1
function_name	[function_name_1] verificación ||| [function_name_1] [function_name_2]	count=1
namespace	de bases de datos ||| function	count=1
function_name	logo de zend usando ||| zend logo guid	count=1
arg_pair	rgb especificado y al ||| resource $image int $red	count=1
function_name	campos a usar ||| fields	count=1
function_name	leída la siguiente fila ||| sqlsrv fetch	count=1
function	[function_name_1] campo ||| [function_name_1] $fdf_document [arg_pair_2] int	count=1
return	el identificador ||| bool	count=1
function_name	fila ||| ibase fetch	count=1
arg_pair	ciertas propiedades de ||| resource $result int $field_offset	count=1
function_name	aplicarse a ||| add	count=1
return	la línea de ||| int	count=1
arg_pair	la imagen ||| int $y	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] bookmark [arg_pair_2]	count=1
function_name	la tabla actual para ||| fbsql table	count=1
function_name	vincular el ||| bind array	count=1
function_name	la csr dada ||| openssl csr	count=1
function_name	excepción de ||| using exceptions	count=1
function_name	umbral ||| threshold	count=3
function_name	el inverso ||| invert	count=1
return	un error una ||| void	count=1
function	borra [arg_pair_2] ||| [function_name_1] textflow [arg_pair_2]	count=1
arg_pair	busca la aguja needle ||| mixed $needle	count=1
function_name	desde ||| string	count=1
function_name	[function_name_1] de peticiones ||| [function_name_1] [function_name_2]	count=1
namespace	se llama cuando ||| recursiveiteratoriterator	count=1
function_name	parte ||| is	count=1
function_name	la utilización de memoria ||| win32 ps stat mem	count=1
arg_pair	función establece [arg_pair] atributo ||| [arg_pair]	count=1
function	fichero a [arg_pair_2] ||| [function_name_1] rename [arg_pair_2]	count=2
namespace	formato a un domdocumentfragment ||| domdocumentfragment	count=1
return	regla ||| bool	count=1
function_name	imagen y con ||| image	count=1
function_name	longitud de ||| length	count=1
function_name	y contornea el ||| pdf fill stroke	count=1
function_name	instancia ||| load	count=1
namespace	tie breaker ||| solrdismaxquery	count=1
return	xml ||| sdo_das_xml_document	count=1
arg_pair	asocia una ||| string $value	count=1
arg_pair	sybase_connect() ||| string $password string $charset	count=1
function_name	documentos ||| mlt min doc	count=1
return	y deletes en ||| bool	count=1
function_name	de pincel ||| imagesetbrush	count=1
namespace	recupera el ||| yaf_controller_abstract	count=1
return	del inicio de ||| string	count=1
namespace	la última llamada a ||| function	count=2
arg_pair	con dos ||| string $username	count=1
function_name	del campo siguiente al ||| next	count=1
arg_pair	y establece variables globales ||| string $encoded_string	count=1
return	función va aquí ||| cairofontoptions	count=3
function_name	agregar ||| parameter	count=1
function_name	última [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	de una base ||| resource $pxdoc string $name	count=1
function_name	una única función de ||| add kernel	count=1
function_name	permisos del ||| eio fchmod	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] outline [arg_pair_2]	count=1
function_name	página ||| set slide show	count=2
function_name	o ||| construct	count=1
function_name	lista ||| ps	count=1
function_name	devuelve el comentario ||| get comment	count=2
function	gamma [arg_pair_2] ||| [function_name_1] image [arg_pair_2]	count=1
function_name	indica si la ||| is	count=1
function_name	la ||| ps	count=1
return	bordes de ||| void	count=1
function_name	ejecutada usando ingres_query() en ||| ingres	count=1
function_name	de dibujo como ps_lineto() ||| ps stroke	count=1
return	[return] lista ||| [return]	count=1
arg_pair	una nueva [arg_pair] ||| [arg_pair]	count=3
namespace	el algoritmo estándar basado ||| function	count=1
function_name	prueba probabilística ||| prob	count=1
return	http en la ||| array	count=1
function_name	establece ||| service proxy callback set	count=1
function_name	largo para ||| long	count=1
function_name	un archivo ||| mailparse uudecode	count=1
function_name	candidatas [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	asigna ||| set	count=1
function_name	identificador de [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	los bordes de ||| gmagick	count=1
function_name	md5 ||| md5	count=1
function_name	de la agrupación ||| server	count=1
return	este método no ||| int	count=1
arg_pair	una variable en ||| string $key mixed $var	count=1
function_name	severidad de la ||| severity	count=1
namespace	a ||| splobjectstorage	count=1
function_name	la siguiente fila de ||| sqlsrv fetch	count=1
function_name	función establece un nombre ||| name	count=1
function_name	frontbase asociado con el ||| fbsql data	count=1
namespace	el nombre del fichero ||| splfileinfo	count=2
function_name	un error una ||| set	count=1
function_name	cuando la ||| using exceptions	count=1
arg_pair	mailbox ||| string $mailbox int $options	count=1
arg_pair	la conexión ||| string $charset resource $link_identifier	count=1
arg_pair	una página ||| int $page	count=1
function_name	libera ||| free result	count=2
arg_pair	la página ||| float $disp_time	count=1
return	un campo ||| int	count=2
namespace	devuelve la opacidad de ||| gmagickdraw	count=1
arg_pair	forma parecida a sybase_connect() ||| string $password string $charset	count=1
function_name	la inserta ||| insert	count=1
return	al destino especificado ||| resource	count=1
function_name	a la ||| set	count=1
function_name	número límite ||| limit	count=1
function_name	imagen ||| unsharp mask image	count=1
return	múltiples ítems especificados en ||| bool	count=1
return	un array con los ||| array	count=5
function_name	de informix de ||| ifx fieldproperties	count=1
arg_pair	las agujas del reloj ||| float $beta	count=1
function_name	el primer ||| first	count=2
namespace	pueden ||| zmqdevice	count=1
function_name	para la salida remarcada ||| set highlight	count=1
namespace	acepta uno dos ||| function	count=1
arg_pair	de que server_key se ||| array $keys	count=1
return	colas o cualquier abstracción ||| zmqsocket	count=1
function_name	de la fecha dada ||| date parse from format	count=1
function_name	por lo menos ||| mlt min doc	count=1
function_name	de la imagen ||| image	count=32
function_name	descripción ||| cairo pattern get radial	count=1
arg_pair	decir el valor ||| string $filename	count=1
arg_pair	devuelve el identificador ||| resource $link_identifier	count=1
function_name	de la anotación cuando ||| set	count=1
function_name	escala de entrada para ||| fann set input	count=1
function_name	de estancamiento de ||| stagnation	count=3
function_name	guarda la ||| fann save	count=2
return	del array ||| int	count=1
function_name	en lugar de ||| set using	count=1
function_name	devuelve hasata que se ||| newt	count=1
function_name	mínimo de ||| min message	count=1
namespace	zip par la ruta ||| ziparchive	count=1
function_name	de caracteres del campo ||| field	count=2
arg_pair	la base de datos ||| string $database	count=1
function_name	codificación de caracteres inicial ||| encoding	count=1
namespace	domentityreference ||| domentityreference	count=1
function	[function_name_1] información dad ||| [function_name_1] [arg_pair_2]	count=1
function_name	de re-escalada líquido ||| liquid rescale image	count=1
namespace	se podría llamar en ||| function	count=1
function_name	método devuelve el valor ||| get	count=1
function_name	obtiene el carácter delimitador ||| get	count=1
function_name	si la función está ||| in	count=1
function_name	establece el factor de ||| fann set	count=1
function_name	de reescritura establecidas previamente ||| output reset rewrite	count=1
return	host y la ruta ||| array	count=1
arg_pair	nueva definición de ||| float $height float $xstep	count=1
function_name	expresión regular ||| preg	count=1
return	en el disco y ||| bool	count=1
return	pasado ||| mixed	count=1
function_name	devolverá la ||| odbc data	count=1
namespace	hash ||| function	count=1
function_name	calcula el seno ||| asin	count=1
namespace	indicando error cuando la ||| rarexception	count=1
function_name	primer plano y ||| ncurses	count=1
arg_pair	actual del recurso checkbox ||| resource $checkbox	count=1
function_name	se buscarán ||| dbplus chdir	count=1
function_name	[function_name_1] lo contornea ||| [function_name_2] [function_name_1]	count=4
function_name	mediante el uso de ||| proc get	count=1
function_name	comporta de ||| pconnect	count=1
arg_pair	más bases de ||| resource $id string $databases	count=1
function_name	[function_name_1] frecuencia ||| [function_name_1] mlt [function_name_2]	count=1
function_name	proceso ||| proc get status	count=2
function_name	de control de ||| control point	count=1
function_name	[function_name_1] resultado de ||| [function_name_2] [function_name_1]	count=9
arg_pair	los datos ||| array $callbacks	count=1
function_name	[function_name_1] del campo ||| [function_name_2] [function_name_1]	count=40
namespace	a la ||| harudestination	count=1
function_name	tabla actual para ||| fbsql table	count=1
function_name	excepto que file_get_contents() devuelve ||| file get contents	count=1
arg_pair	query ||| string $query	count=1
function_name	borra ||| pg delete	count=2
return	en la base ||| bool	count=3
function_name	diccionario ||| enchant dict	count=3
function	[function_name_1] operaciones delete ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	y ||| zmqsocket $frontend	count=1
function_name	del resultado key() ||| key	count=1
function_name	función mysqli_get_server_version() [function_name] la versión ||| mysqli [function_name] server	count=1
arg_pair	una nueva instancia ||| array $rectangle	count=2
function_name	[function_name_1] unión para ||| [function_name_1] [function_name_2]	count=4
function	[function_name_1] fichero ||| [arg_pair_2] [function_name_1]	count=5
function_name	una declaración ||| decl	count=1
arg_pair	modulo de a ||| gmp $a	count=1
function_name	todavía no se ||| count	count=1
arg_pair	se defina ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	[function_name_1] el que ||| [function_name_2] lower [function_name_1]	count=1
function_name	argumento ||| set using exceptions	count=2
function_name	recorte de una ||| clip	count=1
return	abstracción que se defina ||| zmqsocket	count=1
function_name	imagen para [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	simulado aclarando y ||| int $y	count=1
function_name	texto actual de modo ||| mode	count=1
arg_pair	parámetros cipher / ||| string $cipher	count=1
function_name	hash de un string ||| crypt	count=1
function_name	frecuencia en la que ||| min doc	count=1
function_name	campo ||| field match	count=1
arg_pair	flag ||| int $options	count=1
function_name	tailable que son ||| tailable	count=1
arg_pair	una ||| gmagickdraw $draw	count=1
function_name	la prueba ||| prime	count=1
function_name	pregunta [function_name] una ||| pdf [function_name]	count=1
function_name	true ||| set using exceptions	count=2
return	color ||| void	count=1
namespace	devuelve el tamaño actual ||| function	count=1
namespace	hasta que ||| function	count=1
function_name	usa la ||| prob	count=1
arg_pair	php var_array ||| int $max_table_length	count=1
return	lo ||| solrquery	count=1
function	string de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	del estado ||| status message	count=1
function_name	descripción ||| cairo matrix transform point	count=1
function_name	apuntador de archivo dado ||| all	count=1
function_name	ps_stringwidth() excepto ||| string geometry	count=1
function_name	de unix ||| crypt	count=1
arg_pair	de fabricación cres un ||| string $contents int $size	count=1
arg_pair	documento xml desde ||| string $filename	count=1
namespace	error de ||| function	count=1
function_name	textflow ||| pdf info textflow	count=1
function_name	el servidor postgresql ||| pg end	count=1
arg_pair	fichero especificado por path ||| string $path	count=1
arg_pair	de botón ||| int $width	count=1
arg_pair	de texto ||| string $blockname string $text	count=1
function_name	clase simplexml y ||| simplexml	count=1
namespace	nombre especificado por filename ||| function	count=1
arg_pair	left a ||| mixed $left	count=1
function_name	del mensaje mime ||| imap mime	count=2
function_name	como ||| frequency	count=1
function_name	indica ||| is default namespace	count=2
function_name	atributo dado ||| attribute	count=2
function_name	las estadísticas recopiladas ||| stats	count=1
function_name	de socket ||| socket strerror	count=1
function_name	modo de compresión ||| set compression mode	count=2
function_name	el gestor de errores ||| trigger error	count=1
function_name	gobtiene el acl ||| imap getacl	count=1
function_name	la cookie [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	petición http en la ||| function	count=1
function_name	de prioridad ||| priority init	count=1
function_name	en la última ||| last	count=1
function_name	firma usando el certificado ||| pkcs7 sign	count=1
return	imagen mientras preserva los ||| gmagick	count=1
return	original ||| gmagick	count=1
namespace	en la que ||| solrquery	count=1
return	un nodo ||| domnode	count=1
function_name	disponibles después ||| odbc data	count=1
function_name	consulta de ||| get query	count=1
function_name	o más marcadores ||| db2 prepare	count=1
function	[function_name_1] retrollamadas se ||| [function_name_1] array $patterns_and_callbacks [arg_pair_2]	count=1
arg_pair	no condigue ||| string $type	count=1
function_name	máxima de línea ||| max line	count=1
return	error de ||| string	count=1
namespace	un ||| serializable	count=1
function_name	retorna bloques ||| block	count=1
arg_pair	req_handle por el ||| resource $req_identifier	count=1
function_name	devuelve ||| get state	count=1
function_name	declaración de entidades ||| entity decl	count=1
namespace	el [namespace] iterador ||| [namespace]	count=1
function_name	de imagen ||| get image	count=1
arg_pair	[arg_pair_1] message ||| [arg_pair_1] string $mailbox [arg_pair_2]	count=1
function_name	con el identificador slob ||| slob	count=1
function_name	un directorio ||| dir	count=1
function_name	encabezados a ||| headers	count=2
arg_pair	php var_array al ||| array $var_array int $max_table_length	count=1
function	[function_name_1] de arrays ||| [function_name_1] [arg_pair_2]	count=3
function_name	libera ||| mailparse msg free	count=1
arg_pair	la conexión actual ||| resource $link_identifier	count=1
function_name	mismo [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] insert ejecutada ||| [function_name_2] [function_name_1]	count=2
arg_pair	para un ||| int $property	count=1
return	lista todos los ||| array	count=1
arg_pair	de b negro y ||| float $b	count=1
return	solicitado en ||| bool	count=1
arg_pair	de php var_array ||| int $max_table_length	count=1
function_name	en la última petición ||| last request	count=1
function_name	configuración ||| tidy config	count=1
namespace	de [namespace] de tal ||| [namespace]	count=1
function_name	la lista de ||| open	count=1
arg_pair	el domain ||| string $domain string $codeset	count=1
function_name	imagen izquierda y derecha ||| stereo image	count=1
function_name	devolverá la lista de ||| odbc data source	count=1
function_name	verde de la ||| green	count=1
arg_pair	un mensaje ||| int $priority string $message	count=1
namespace	caracter que contiene el ||| function	count=1
function_name	búsqueda ||| search	count=2
arg_pair	parámetros cipher / mode ||| string $cipher string $mode	count=1
function_name	ascenso vertical ||| get ascent	count=1
function_name	el identificador ||| closedict	count=1
function_name	e/s del disco ||| readahead	count=1
function_name	línea de ||| set line	count=2
function_name	lo menos ||| set mlt min	count=1
function_name	para la impresión ||| pos	count=1
function	las variables [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	ser entrenadas las conexiones ||| fann get cascade	count=1
arg_pair	formulario dado por form ||| resource $form	count=2
function	escribe [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	de la imagen ||| int	count=2
function_name	de la imagen ||| image layers	count=1
function_name	el producto ||| array product	count=1
return	lee los ||| array	count=1
return	dirección establecida en el ||| bool	count=2
return	más contenido en ella ||| bool	count=1
return	de los ||| string	count=1
function_name	clase solicitada clase glo ||| glo	count=1
function_name	emitir ||| set using exceptions	count=2
function_name	establece ||| px set blob	count=1
return	usado en las siguientes ||| bool	count=1
function_name	la fracción de cambio ||| change fraction	count=1
function_name	cálculos de todas ||| compat	count=1
arg_pair	old_file y ||| string $old_file	count=1
function_name	la longitud ||| strlen	count=1
arg_pair	de intermediarios ||| zmqsocket $frontend	count=1
function_name	la descripción de ||| surface restrict to level	count=1
function_name	de forma parecida a ||| sybase	count=1
arg_pair	[arg_pair_1] ingres_fetch_row() ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	devuelve el nombre ||| get package name	count=2
function_name	estadísticas ||| stats	count=3
arg_pair	de contexto log_cmd_update ||| array $updateoptions	count=1
function_name	la descripción de la ||| cairo pattern	count=6
arg_pair	las restricciones ||| int $facetsort string $field_override	count=1
function_name	de una acción especificada ||| gupnp service action	count=1
arg_pair	función cubrid_schema() se usa ||| int $schema_type	count=1
function_name	este serán ignoradas ||| min doc	count=1
arg_pair	cero en caso ||| string $zurl	count=1
function_name	establece el valor de ||| fdf set	count=1
function_name	escribir ||| write	count=1
function_name	primera muestra de ||| first	count=1
function_name	[function_name_1] el término ||| [function_name_2] [function_name_1]	count=1
function_name	vacía de la relación ||| dbplus	count=1
return	espera a que ||| bool	count=1
namespace	o cualquier abstracción ||| zmqdevice	count=1
function_name	información del navegador ||| get browser	count=1
function_name	id3v1 ||| id3v1	count=1
namespace	finalizar [namespace] ||| [namespace]	count=3
namespace	de apache que es ||| function	count=1
function_name	el fichero ttf ||| ttf	count=1
function_name	la que ||| set mlt min doc frequency	count=1
arg_pair	un archivo ||| string $sections	count=1
return	espacio ||| bool	count=1
arg_pair	left a right usando ||| mixed $right	count=1
function_name	de declaración de entidades ||| entity	count=1
arg_pair	fgetss() ||| resource $handle int $length	count=1
namespace	que fgetss() intenta ||| function	count=1
function_name	un blob que ||| ibase blob	count=1
function_name	la descripción ||| cairo ps surface create	count=1
function_name	[function_name_1] lecturas ||| [function_name_2] [function_name_1]	count=4
function_name	de atajo empleando ||| shortcut	count=1
function_name	nombre corto para ||| get frame short name	count=1
arg_pair	una ||| domdocument $doc	count=1
arg_pair	tabla de una base ||| resource $pxdoc string $name	count=1
function_name	recurso de conexión en ||| connect	count=1
namespace	solrdocument ||| solrdocument	count=3
function_name	método conveniente [function_name] proporcionalmente al ||| magnify [function_name]	count=1
function_name	los ||| ncurses color set	count=2
namespace	internet que ||| function	count=1
return	un string y como ||| array	count=1
function_name	de correo correctamente formateada ||| write address	count=1
function_name	buscarán los archivos ||| dbplus chdir	count=1
namespace	ømq pueden ||| zmqdevice	count=1
function_name	una distribución [function_name] cuya densidad ||| stats rand gen [function_name]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=24
namespace	servidor memcached ||| memcache	count=1
function_name	seguridad del ||| highlight alternate	count=1
function_name	el dominio ||| domain	count=1
function_name	combina ||| combine	count=1
arg_pair	un año ||| int $method	count=1
namespace	preserva ||| gmagick	count=1
function_name	filas eliminadas ||| db2 num rows	count=1
namespace	código de error dado ||| function	count=1
function_name	elimina ||| offset unset	count=1
namespace	que son similares ||| mongocursor	count=1
function_name	captura una [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	prepara a query para ||| string $query	count=1
arg_pair	de ømq pueden ||| zmqsocket $frontend	count=1
function_name	sobre un proceso abierto ||| proc get	count=1
namespace	yar_client hacia un ||| yar_client	count=1
function_name	es parte de ||| is	count=1
function	para [arg_pair_2] ||| [function_name_1] notation decl handler [arg_pair_2]	count=1
arg_pair	dado por value al ||| string $key string $value	count=1
function_name	una instrucción [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	que se establecieron ||| function	count=1
function_name	obtiene información ||| get	count=1
return	advertencia esta ||| int	count=1
namespace	ambos puedan aplicarse a ||| imagickkernel	count=1
function_name	para que la clave ||| delayed by key	count=1
arg_pair	desde el archivo de ||| string $filename	count=1
function_name	que describe el código ||| message	count=1
namespace	a como ||| function	count=1
function_name	de cualquier error ||| bzerrstr	count=1
arg_pair	fichero ||| float $ury string $filename	count=1
arg_pair	copia de ||| bool $backup_original_files	count=1
function_name	exporta ||| pkey export	count=2
function_name	servidor de ||| server	count=1
function_name	este método obtiene ||| get	count=1
function_name	del borde ||| border	count=1
function_name	función definida ||| func	count=1
arg_pair	[arg_pair_1] especificado ||| [arg_pair_2] [arg_pair_1]	count=8
function	[function_name_1] en repos_url ||| [arg_pair_2] [function_name_1]	count=3
function_name	devuelve las propiedades ||| get	count=1
function_name	uso de ||| proc get	count=1
arg_pair	dado por form ||| resource $form array $components	count=1
return	búfer de ||| int	count=1
function_name	proceso abierto ||| proc get	count=1
function	instrucciones de [arg_pair_2] ||| [function_name_1] handler [arg_pair_2]	count=1
function_name	unos ||| elements by tag name	count=1
function_name	correlación de los índices ||| asort	count=1
arg_pair	y asocia el ||| int $cols int $rows	count=1
function_name	[function_name_1] comentario de ||| [function_name_2] [function_name_1]	count=1
namespace	puedan estar disponibles ||| function	count=1
function_name	lee ||| fbsql read	count=1
namespace	disponibles después ||| function	count=1
arg_pair	una búsqueda en un ||| string $msgid2 int $n	count=1
function_name	alternativa más ||| imagecolorresolvealpha	count=1
function_name	descripción ||| cairo pattern	count=6
function_name	que el substring ||| substr count	count=1
return	perfiles del objeto ||| float	count=1
function_name	mensaje de error de ||| error	count=1
namespace	o escrito ||| function	count=1
function_name	array de oracle pl/sql ||| oci	count=1
function_name	[function_name_1] el contenido ||| ziparchive string [function_name_1] [function_name_2] index int	count=1
function	[function_name_1] y de ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	objeto grande ||| oci-lob $lob_to	count=1
arg_pair	página cookie...) ||| int $pagesize	count=1
function_name	limpia el ||| clrbit	count=1
return	a la ventana ||| bool	count=1
function_name	la función mssql_free_statement() ||| free statement	count=1
function_name	operación substr() [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la frecuencia en la ||| mlt min doc	count=1
function	valor [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	cualquier abstracción que se ||| zmqdevice	count=1
function_name	estilo ||| slide	count=1
function_name	[function_name_1] fondo ||| [function_name_2] [function_name_1]	count=4
arg_pair	de relation ||| resource $relation	count=5
namespace	tipo dado por ||| function	count=1
return	un fichero o ||| resource	count=1
rest	con la [function_2] ||| [return_1] [function_2]	count=1
function_name	del [function_name_2] ||| [function_name_2] qc [function_name_1]	count=4
function_name	esta función crea una ||| create document fragment	count=1
function_name	en blanco del ||| imagecreate	count=1
arg_pair	clúster de grafemas ||| int $extract_type int $start	count=1
function_name	transacción [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	y reanuda su ||| throw	count=1
namespace	retorna el ||| gearmanclient	count=1
function_name	cunstruye ||| string	count=1
function_name	de error ||| bzerrstr	count=1
arg_pair	de la ||| int $y	count=1
function_name	descripción de ||| pattern get surface	count=1
function_name	imagen en particular de ||| image filename	count=1
namespace	la ||| harudestination	count=3
function_name	devuelve un array [function_name_1] [function_name_2] mueve el puntero de ||| function array [function_name_2] [function_name_1]	count=2
arg_pair	para usar los ||| resource $image	count=1
function_name	para [function_name_2] ||| [function_name_2] [function_name_1] resultset resource $statement	count=4
return	una ||| mixed	count=5
arg_pair	dispositivos ||| zmqsocket $backend	count=1
function_name	nombre de sitio web ||| name	count=1
return	véase regexiterator::setmode() [return] lista de ||| [return]	count=1
function_name	función definida por el ||| uasort	count=1
function_name	de patrones de ||| length	count=1
function_name	estilo de ||| set	count=1
function_name	las extensiones de ||| extensions	count=1
function_name	cierra ||| cubrid close	count=1
return	segundo ||| void	count=1
function_name	id ||| get	count=1
function_name	ver ||| ping	count=1
function_name	el grosor de las ||| imagesetthickness	count=1
function_name	se usa para convertir ||| convert to	count=1
function_name	cola de mensajes ||| queue	count=1
function_name	cuando la biblioteca unrar ||| using	count=1
arg_pair	dados por data ||| string $data	count=2
function_name	número máximo de épocas ||| epochs	count=1
function_name	obtiene el ||| gupnp context get	count=2
return	emitir advertencias y devolver ||| void	count=1
arg_pair	solrquery::sethighlightalternatefield() se ||| int $fieldlength	count=1
return	subsiguiente fichero ||| void	count=1
function_name	como este serán ||| min	count=1
arg_pair	por el parámetro length ||| int $length	count=1
function_name	de flujo ||| stream socket client	count=1
namespace	cifrado especificado a ||| function	count=1
function_name	que ya ha ||| add types	count=1
arg_pair	arrays ||| array $array1 mixed $array1_sort_order	count=1
return	de llamarla varias ||| array	count=1
function_name	para ||| msgno	count=1
function_name	abre ||| pdf open	count=1
arg_pair	de relation al ||| string $name	count=1
function_name	como este ||| doc	count=1
arg_pair	acceso recursivamente path1 ||| string $path1 int $rev1	count=1
return	característica conocia como cursores ||| mongocursor	count=1
return	mensaje ||| zmqsocket	count=1
function_name	breaker parameter ||| set tie breaker	count=1
function_name	y devuelve la porción ||| mb stristr	count=1
namespace	con ||| gmagick	count=1
arg_pair	flujo imap ||| string $criteria	count=1
function_name	en la configuración ||| tidy config count	count=1
arg_pair	de una ||| string $schema	count=2
function_name	o a la dirección ||| geoip	count=1
function_name	nueva instancia de haruannotation ||| urlannotation	count=1
function_name	copia binaria ||| bin	count=1
function_name	los métodos ||| methods	count=2
function_name	una transacción [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	rebobina el puntero interno ||| reset	count=1
function_name	esquema solicitado de ||| cubrid schema	count=1
function_name	identificador de sesión ||| getsid	count=1
arg_pair	actual a x y ||| float $x float $y	count=1
function_name	descripción de ||| cairo font options	count=6
function_name	el cliente [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	conjunto óptimo ||| int $scope int $nullable	count=1
function_name	conexión especificada ||| db2	count=1
function_name	acl para un buzón ||| imap getacl	count=1
arg_pair	de ømq ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	referenciado por handle ||| int $offset	count=1
function_name	[function_name_1] insertada ||| [function_name_1] [function_name_2]	count=3
function_name	dbplus_open() ||| dbplus	count=1
function_name	un nuevo archivo pdf ||| pdf open file	count=1
return	cadena de error ||| string	count=1
arg_pair	una expresión aritmética relacional ||| array $arguments	count=1
function_name	una salida ||| runkit sandbox output	count=1
function_name	obtiene ||| get data	count=1
namespace	usa la prueba ||| function	count=1
namespace	por omisión ||| reflectionparameter	count=2
arg_pair	flag a las banderas ||| string $flag	count=1
function_name	la solicitud ||| nsapi	count=1
arg_pair	con el específico link_identifier ||| resource $link_identifier	count=1
function_name	de columna actual ||| get current column number	count=1
function_name	la ventana ||| set	count=1
arg_pair	una nueva instancia ||| string $text	count=1
function_name	operación frontbase ||| fbsql	count=1
function_name	frecuencia ||| min	count=1
arg_pair	unidades de b negro ||| resource $pdfdoc float $b	count=1
arg_pair	campo es decir el ||| int $face string $filename	count=1
return	(«kernel») a este para ||| void	count=1
function_name	recomienda utilizar mongodb::lasterror() en ||| prev error	count=1
function_name	número ||| imap msgno	count=2
function_name	archivo codificado mediante uuencode ||| mailparse	count=1
namespace	puedan estar ||| function	count=1
arg_pair	existe todavía en ||| int $expire	count=1
arg_pair	reconstruida y las diferencias ||| int $metric	count=1
function_name	fichero de un repositorio ||| svn cat	count=1
function_name	llamada establecidas anteriormente ||| clear callbacks	count=1
function_name	probabilística ||| prob	count=1
arg_pair	pueda ser adquirido ||| resource $sem_identifier bool $nowait	count=1
function_name	la lista [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	que el semáforo ||| sem acquire	count=1
return	primer ||| int	count=1
function_name	la frecuencia ||| frequency	count=3
namespace	el ||| domnode	count=1
function_name	miniatura embebida ||| exif thumbnail	count=1
arg_pair	memcached::set() con la ||| int $expiration	count=1
arg_pair	offset ||| resource $lob_identifier int $offset	count=1
function_name	nombre de sitio web ||| code by name	count=1
function_name	en que el substring ||| substr count	count=1
function_name	directorio ||| dir	count=1
function_name	vacío ||| empty	count=1
namespace	puntero de ||| splfileobject	count=1
return	en cada plataforma incluidas ||| bool	count=1
function_name	potencia ||| pow	count=1
function_name	una entrada de ||| filesize	count=1
arg_pair	se especifica ninguna ||| string $collection mixed $id	count=1
function_name	por su nombre ||| name	count=3
function_name	trazado [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	tipo ||| int	count=1
function_name	[function_name_1] imagen ||| [function_name_2] [function_name_1]	count=21
function_name	devuelve la cadena artista ||| get artist	count=1
function_name	escribe la [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	lista de ||| cubrid list	count=1
function_name	[function_name_1] de db++ ||| [function_name_2] [function_name_1]	count=6
function_name	codificados en lzf ||| lzf	count=1
function_name	para obtener conjuntos consecutivos ||| get implicit	count=1
function_name	[function_name_1] de verificación ||| [function_name_2] [function_name_1]	count=1
arg_pair	una estructura ||| int $num_data int $num_input	count=1
function_name	número es primo ||| gmp	count=1
function_name	el tamaño y la ||| size	count=1
namespace	soapserver entre ||| soapserver	count=1
function_name	errores ||| errors	count=3
arg_pair	invertidas ||| string $str	count=1
namespace	de ||| gmagick	count=13
function_name	probabilística ||| gmp prob prime	count=2
function_name	[function_name_1] campo a ||| [function_name_1] [function_name_2]	count=1
function_name	emitir advertencias ||| set using	count=1
function_name	[function_name_1] control ||| [function_name_1] [function_name_2]	count=2
arg_pair	propiedades correspondientes ||| array $ctorparams int $row	count=1
function_name	lugar de emitir advertencias ||| set using exceptions	count=1
arg_pair	otro scrip ||| int $dataoffset	count=1
function_name	de umbral del ||| step error threshold	count=2
return	[return] semilla ||| [return]	count=1
namespace	de seguimiento ||| mongocursor	count=2
function	clase del [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	las salidas ||| output	count=1
function_name	[function_name_1] el copyright ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] todas las ||| [function_name] pages	count=3
function_name	a secundarios ||| okay	count=2
function_name	la fecha ||| date	count=1
return	y devolver ||| void	count=1
function_name	envía datos ||| ping	count=1
arg_pair	relation la ||| resource $relation	count=3
function_name	direcciones ||| construct	count=1
function_name	añade varios componentes ||| add components	count=1
return	mensaje ||| int	count=1
return	en el puntero ||| int	count=1
return	función devolverá la ||| array	count=1
return	página ||| bool	count=2
arg_pair	parámetro filename usando ||| string $filename	count=1
function_name	bit de entrelazamiento ||| imageinterlace	count=1
function_name	tantos documentos ||| min	count=1
function_name	función devuelve el ||| get	count=2
function_name	proceso abierto mediante el ||| proc get status	count=1
function_name	extrae ||| mailparse uudecode all	count=2
return	retorno apropiada ||| bool	count=1
arg_pair	el valor de un ||| string $value	count=1
return	petición ||| array	count=2
function_name	describe el código ||| message	count=1
return	representan la ||| void	count=2
function_name	guid binario de ||| mssql guid string	count=1
arg_pair	crear una nueva ||| string $progid	count=1
function_name	límite de fallo ||| limit	count=1
function_name	para obtener conjuntos ||| get implicit	count=1
function_name	fila de ||| fetch row	count=1
return	el archivo especificado ||| resource	count=1
function_name	se le ha consultado ||| count	count=1
function_name	abierto y devuelve el ||| get	count=1
arg_pair	fgetss() ||| resource $handle	count=1
namespace	que ha ||| function	count=1
function_name	un servidor ldap en ||| ldap	count=1
function_name	una matriz que contiene ||| names	count=1
function_name	las posiciones ||| from neuron	count=1
function_name	cursor al primer atributo ||| first attribute	count=1
function_name	logo de ||| php logo	count=1
arg_pair	la ruta corriente ||| float $ray float $ang1	count=1
function_name	volcar a la salida ||| debug zval dump	count=1
arg_pair	data y devuelve los ||| string $mode	count=1
namespace	este color ||| gmagickpixel	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] server [function_name_1]	count=8
function_name	función ||| source	count=1
arg_pair	path en ||| string $path	count=1
arg_pair	caracteres que aparecen ||| string $str	count=1
function_name	frecuencia en ||| min doc	count=1
function_name	glo ||| glo	count=3
function_name	xml ||| load string	count=2
namespace	mongo posee una característica ||| mongocursor	count=1
namespace	carga un ||| sdo_das_xml	count=1
namespace	o más ||| function	count=2
arg_pair	rota ||| resource $p float $phi	count=1
function	propiedad [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	multi-dimensional con [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	por lo menos ||| mlt min doc frequency	count=1
return	la función de ||| bool	count=1
return	recupera información ||| array	count=1
arg_pair	dibujar imágenes de ||| resource $image	count=1
function_name	secuencia ||| filename	count=1
return	en el conjunto ||| bool	count=1
namespace	el descriptor previamente asignados ||| oci-lob	count=1
arg_pair	que coincida con ||| mixed $target mixed $fill	count=1
function_name	del cliente usado ||| client identifier	count=1
function_name	incorporación de fuentes ||| use krfonts	count=1
function_name	aparecen en el parámetro ||| addcslashes	count=1
arg_pair	manejador de fuentes font ||| int $font	count=1
arg_pair	carácter c verticalmente en ||| string $c int $color	count=1
function_name	la ||| set using	count=1
function_name	las clases padre ||| parents	count=1
return	actual de una ||| int	count=1
function_name	oracle client ||| oci	count=1
arg_pair	[arg_pair_1] base de ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	des de unix o ||| string $str	count=1
function_name	de un string utilizando ||| crypt	count=1
function_name	crea una nueva instancia ||| create comment	count=1
arg_pair	callback ||| callable $callback mixed $data	count=1
function_name	parámetro ||| parameter	count=3
function_name	código de error de ||| error	count=1
function_name	[function_name_1] punto primario ||| [function_name_1] red [function_name_2]	count=1
function_name	proveedor ||| add	count=1
return	relleno usado ||| void	count=1
arg_pair	un ||| resource $file	count=1
arg_pair	servicios ||| zmqsocket $frontend	count=1
function_name	como un parámetro variádico ||| variadic	count=1
function_name	información ||| openssl	count=1
function_name	del servidor ms sql ||| mssql	count=1
arg_pair	una ||| resource $connection	count=3
arg_pair	por relation bajo ||| resource $relation	count=1
function_name	retrollamada del temporizador ||| timer	count=1
function_name	limpia los [function_name_2] ||| [function_name_1] scaling [function_name_2]	count=1
namespace	asociado al objeto alnzado ||| throwable	count=1
function_name	de línea actual ||| get current line	count=1
function_name	del atributo en el ||| attribute	count=2
function_name	[function_name] y ||| [function_name]	count=3
function_name	función devuelve ||| mcrypt enc get	count=1
function_name	todavía no se le ||| count	count=1
namespace	yaf_view_simple::assign() ||| yaf_view_simple	count=1
function_name	[function_name_1] insertada o ||| [function_name_1] [function_name_2]	count=3
function_name	o más imágenes ||| images	count=1
function_name	la desencripta usando un ||| openssl decrypt	count=1
function	establece [function_name_1] [arg_pair_2] ||| bool [function_name_1] name [arg_pair_2]	count=1
function	imagen a [arg_pair_2] ||| [function_name_1] int $cols [arg_pair_2]	count=1
function_name	un ||| curl strerror	count=2
function	cabecera de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	a unas coordenadas nuevas ||| ps moveto	count=1
return	una palabra ||| string	count=1
return	cuando ||| string	count=1
function_name	y lo encripta ||| openssl pkcs7 encrypt	count=1
arg_pair	ambos ||| int $fetchtype	count=1
function_name	tie breaker ||| set tie	count=1
function_name	entrecomillado apropiado para el ||| quote	count=1
function_name	con dos ||| sybase pconnect	count=1
function	los atributos [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	con estadísticas del servidor ||| stats	count=1
arg_pair	datos del parámetro data ||| string $data	count=1
function_name	liberación de ||| udm free res	count=1
arg_pair	de mensaje ||| zmqsocket $backend	count=1
return	mensaje para ||| int	count=1
function_name	[function_name_1] información ||| [function_name_1] [function_name_2]	count=5
function_name	las estadísticas ||| stats	count=2
function_name	convierte en un nodod ||| dom import	count=1
function_name	este método devuelve ||| get	count=6
function_name	probabilística ||| prime	count=1
function_name	pascua para ||| easter	count=1
function_name	posix ||| posix get	count=1
return	en un das xml ||| void	count=1
return	de renderización ||| int	count=1
function_name	[function_name] content ||| [function_name] content	count=2
arg_pair	de un ||| string $domain	count=1
function_name	una lista de ||| enchant broker list	count=1
namespace	la posición actual ||| solrdocument	count=1
return	este método se ||| mongocursor	count=1
function_name	[function_name_1] modo ||| [function_name_2] [function_name_1]	count=5
function_name	devuelve el ||| mssql get	count=1
return	[return] inglés) ||| [return]	count=3
function_name	fann_get_cascade_candidate_change_fraction() ||| candidate	count=1
function_name	[function_name_1] línea a ||| [function_name_2] [function_name_1]	count=2
function_name	rutinas de interoperabilidad stubs ||| stub	count=1
return	una imagen basada en ||| bool	count=1
arg_pair	como timestamp ||| int $format	count=2
function_name	devuelve la ||| mb	count=4
function_name	las palabras que no ||| set mlt	count=1
return	una palabra clave que ||| string	count=1
function_name	función elimina ||| delete	count=1
function_name	devuelve ||| get pixel iterator	count=1
function_name	[function_name_1] peticiones ||| [function_name_1] [function_name_2]	count=1
return	formulario en donde ||| bool	count=1
return	aparecen ||| string	count=1
arg_pair	un mensaje de ||| string $message	count=1
namespace	serán ignoradas ||| solrquery	count=1
arg_pair	registradas ||| string $extension bool $details	count=1
return	closedir() ||| void	count=1
arg_pair	blanco u otros caracteres ||| string $str	count=1
function_name	de un ||| ltrim	count=1
return	el valor de la ||| mixed	count=1
function_name	porción ||| stristr	count=1
return	en la lista ||| bool	count=1
arg_pair	ereg_replace() excepto que ||| string $replacement	count=1
function_name	lo ||| min	count=1
function_name	para extraer ||| msql	count=1
namespace	se rellena ||| function	count=1
namespace	datos soportados por ||| function	count=1
function_name	traslada el ||| pdf translate	count=1
function_name	comprobación ||| crack	count=2
arg_pair	proceso para el intérprete ||| callable $handler	count=1
function_name	devuelve las cabeceras ||| headers	count=3
function_name	establece ||| ms set	count=2
function_name	analiza datos get/post/cookie ||| mb parse str	count=1
namespace	los datos de ||| function	count=1
arg_pair	un array a partir ||| array $array	count=1
function_name	el método gearmanclient::do() es ||| do	count=1
arg_pair	las restricciones de ||| int $facetsort	count=1
function_name	cierra el fichero ||| eio close	count=1
function_name	bits ||| bits	count=1
function_name	número [function_name] ||| ingres num [function_name]	count=1
function_name	disponible la ||| ps	count=1
function_name	de color en ||| start color	count=1
arg_pair	de conexión especificado ||| resource $connection	count=1
arg_pair	de un ||| string $map	count=1
function_name	número de filas que ||| set start	count=1
arg_pair	fichero ||| string $filename	count=4
function_name	más opciones de ||| yaz set option	count=1
arg_pair	de data1 y ||| resource $data1	count=1
arg_pair	modo de acceso mode ||| int $mode	count=1
namespace	la lista ||| imagick	count=1
function_name	entorno de ||| setenv	count=1
arg_pair	[arg_pair_1] texto con ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	establece el [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=7
namespace	editado ||| hw_api	count=1
function_name	en el ||| addcslashes	count=1
arg_pair	consulta sql query a ||| string $query	count=1
function_name	de [function_name] ||| set [function_name]	count=1
function_name	determinado evento ||| event	count=1
function_name	geoip está disponible ||| geoip	count=1
function_name	el número [function_name] modificadas en ||| ingres num [function_name]	count=1
function_name	de bytes [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	patrones ||| fann length	count=1
namespace	o desactiva el bit ||| function	count=1
function_name	respuesta [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	tipo ||| column type	count=2
arg_pair	lote de operaciones ||| mongocollection $collection array $write_options	count=3
return	y devuelve su valor ||| mixed	count=1
function_name	flujo o ||| stream	count=1
function_name	un segundo o ||| add types	count=1
function_name	[function_name_1] la última ||| [function_name_2] [function_name_1]	count=9
arg_pair	unicode por ||| int $namechoice	count=1
arg_pair	mayoría de las ||| string $connection_string string $character_set	count=1
arg_pair	información de una instancia ||| string $oid	count=1
return	mongo ||| mongocursor	count=1
function	desencripta usando [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	indica si ||| is default	count=1
function_name	página y la inserta ||| insert	count=1
function	nombre [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	px_create_fp() ||| tablename	count=1
function_name	son el mismo nodo ||| same node	count=1
return	actual ||| bool	count=3
function_name	blanco de la ||| image white	count=1
function_name	acceso calificadores ccl ||| ccl conf	count=1
function_name	[function_name_1] la tarea ||| [function_name_2] [function_name_1]	count=6
arg_pair	del resultado de la ||| resource $result	count=1
namespace	tamaño actual de una ||| function	count=1
return	capas ||| zmqsocket	count=1
function_name	lee datos blob de ||| read blob	count=1
function_name	temperatura ||| temperature	count=2
function_name	el id de la ||| id	count=1
namespace	información que devuelven ||| function	count=1
function_name	ámbito del ||| lookup	count=1
function_name	espacios en blanco retirados ||| rtrim	count=1
function	crea [arg_pair_2] ||| [function_name_1] fieldgroup [arg_pair_2]	count=1
function_name	[function_name_1] lista ||| [function_name_2] [function_name_1]	count=1
function_name	la propuesta ||| getimagerenderingintent	count=1
function_name	el tamaño de paso ||| fann get rprop delta	count=1
namespace	un array que ||| function	count=1
namespace	actual medido como el ||| function	count=1
namespace	con ||| function	count=2
arg_pair	los dispositivos ||| zmqsocket $frontend	count=1
function_name	[function_name_1] codificador ||| [function_name_2] [function_name_1]	count=2
function_name	la caché de la ||| cache	count=2
function_name	devuelve la geometría ||| get	count=1
function_name	nombre ||| from name	count=2
function_name	la configuración de ||| config	count=1
function_name	mediante uuencode ||| uudecode all	count=1
function_name	un das xml ||| types	count=1
namespace	que no ||| solrquery	count=1
arg_pair	los bordes de ||| int $x int $y	count=1
arg_pair	abstracción que se ||| zmqsocket $backend	count=1
return	pero con ||| resource	count=1
return	no ||| int	count=2
function_name	parámetros ||| ps open memory	count=1
function_name	la incorporación ||| use krfonts	count=1
arg_pair	hipervínculo ||| float $lly float $urx	count=1
function_name	un nuevo [function_name] soapvar ||| [function_name]	count=1
function_name	cada archivo codificado ||| uudecode all	count=1
function_name	cada capa ||| fann get layer array	count=1
function_name	se ||| set start	count=2
arg_pair	pajar incluyendo ||| string $haystack	count=1
function_name	el espacio de la ||| space	count=1
function_name	cubrid_col_get() se usa para ||| cubrid col	count=1
return	función acepta uno ||| string	count=1
function_name	añade una etiqueta ||| label	count=1
arg_pair	cubrid_set_query_timeout() se ||| int $timeout	count=1
function_name	tesela ||| imagesettile	count=1
arg_pair	el result set ||| resource $result int $index	count=1
function_name	esta función [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	devolverá ||| function	count=2
function_name	fichero a ||| eio	count=1
namespace	el objeto actualmente señalado ||| splobjectstorage	count=1
return	la ||| string	count=11
arg_pair	si un ||| gmp $a	count=1
function_name	frecuencia en la ||| frequency	count=1
namespace	página total o ||| function	count=1
function_name	excepción ||| set exception	count=1
function_name	se proporcionan ||| array splice	count=1
namespace	efecto ||| gmagick	count=1
arg_pair	identificador ||| resource $result_identifier	count=1
arg_pair	crea un directorio ||| string $log_message	count=1
return	convierte en un blanco ||| bool	count=1
function_name	como este serán ||| set mlt min	count=1
function_name	imap si los hay ||| imap	count=1
arg_pair	para un punto de ||| int $property	count=1
function_name	carp::cluck de ||| apd clunk	count=1
function_name	podrían ser entrenadas las ||| fann get cascade	count=1
function_name	función geoip_country_code_by_name() devolverá la ||| country code	count=1
arg_pair	rectangular ||| float $urx	count=1
function	[function_name_1] para un ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	la base de ||| string $password string $database	count=1
arg_pair	acceso al servicio daemon ||| string $daemon	count=1
function_name	[function_name_1] namespace ||| [function_name_2] [function_name_1]	count=10
function_name	la tangente hiperbólica ||| trader tanh	count=1
function_name	el método de disposición ||| getimagedispose	count=1
function_name	error una ||| set	count=1
namespace	de [namespace] reflejada ||| [namespace]	count=1
return	numérico del ||| int	count=1
arg_pair	el texto ||| string $text int $index	count=1
namespace	filas que se van ||| solrquery	count=1
function_name	de la fecha ||| date parse from	count=1
function_name	afecta al estado ||| count	count=1
function_name	[function_name_1] punto primario ||| [function_name_2] [function_name_1]	count=3
function_name	devuelve ||| broker get	count=1
namespace	de ||| gearmanworker	count=1
arg_pair	arrays al mismo tiempo ||| array $array1 mixed $array1_sort_order	count=1
function_name	unidades de grafema de ||| grapheme strripos	count=1
arg_pair	nuevo valor value ||| mixed $value	count=1
function_name	carga una biblioteca ||| load	count=1
function_name	postgresql después ||| pg end	count=1
function_name	segundo cuando se enlazó ||| ecb	count=1
function_name	el directorio virtual actual ||| chdir	count=1
namespace	de esquema en un ||| sdo_das_xml	count=1
function_name	directorio personalizado de la ||| setup custom directory	count=1
return	usuario especificado en ||| bool	count=1
function_name	la última sentencia ||| db2 last	count=1
return	resultados ||| bool	count=1
function_name	en blanco ||| imagecreate	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cookie [function_name_2]	count=3
function_name	filas afectadas por ||| stmt affected rows	count=1
namespace	por los ||| function	count=1
function	[function_name_1] una nueva ||| [function_name_1] text annotation [arg_pair_2]	count=1
return	en todas las consultas ||| bool	count=1
function_name	[function_name_1] servidor ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] entrenamiento ||| [function_name_2] from [function_name_1]	count=1
arg_pair	valor de la variable ||| string $variable string $value	count=1
function_name	el valor de ||| value	count=2
function_name	nombre de sitio ||| name	count=1
namespace	del puntero ||| solrdocument	count=1
function_name	como este ||| frequency	count=1
function_name	las colecciones de ||| collection	count=1
function_name	el nodo es parte ||| is	count=1
function_name	byte actual en ||| current byte index	count=1
function	guid binario [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	key corresponda a un ||| string $key mixed $value	count=1
function_name	large object resource ||| pg lo	count=1
function_name	de lecturas ||| slave	count=1
namespace	posición actual ||| splfileobject	count=1
arg_pair	pajar incluyendo la aguja ||| string $needle	count=1
function_name	la función mssql_free_statement() ||| statement	count=1
arg_pair	valor ||| mixed $value	count=4
function_name	un blob ||| ibase blob	count=2
function_name	el ciclo ||| nop	count=1
function_name	o no la remarcación ||| highlight highlight	count=1
function_name	datos ||| cubrid lob2 export	count=1
arg_pair	path [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	donde se buscarán los ||| string	count=1
function_name	memcached::prepend() ||| prepend by key	count=2
function_name	de llamarla ||| data	count=1
function_name	el parámetro rows ||| pg copy from	count=1
arg_pair	dada por variable_key ||| resource $shm_identifier int $variable_key	count=1
function_name	recupera la instancia de ||| get	count=1
function_name	ldap enviando el ||| ldap	count=1
function_name	devuelve un arreglo ||| db2 fetch	count=1
function_name	campo de una ||| field	count=1
return	y cualquier ||| string	count=1
function_name	msql asociado con el ||| msql	count=1
arg_pair	la función ||| gmp $a	count=1
function_name	establece el valor de ||| set	count=2
return	emitir ||| void	count=1
function_name	esta ||| odbc	count=1
arg_pair	versiones estandarizados ||| string $version2	count=1
function_name	o subsiguiente ||| add types	count=1
namespace	número de filas que ||| solrquery	count=1
function_name	frecuencia en la ||| doc frequency	count=1
function_name	entrecomillado apropiado ||| quote	count=1
arg_pair	descendente del texto ||| string $text	count=1
arg_pair	una ||| string $schema	count=3
function_name	calcula la tangente ||| tan	count=1
arg_pair	un algoritmo ||| string $lib_dir	count=1
return	forma parecida a sybase_connect() ||| resource	count=1
function_name	tantos documentos ||| set mlt min doc frequency	count=1
arg_pair	array asociativo un ||| resource $stmt	count=1
function_name	devuelve ||| udm get	count=1
arg_pair	dsn ||| resource $connection_id	count=1
function_name	de argumentos pasados ||| args	count=1
function_name	creó después de aplicar ||| file bdiff	count=1
function_name	establece ||| fann set cascade	count=3
function_name	ps_stringwidth() excepto ||| ps string geometry	count=1
function_name	de grises ||| embossimage	count=1
namespace	apropiada ||| gearmanworker	count=1
function_name	[function_name_1] color ||| [function_name_1] image border [function_name_2]	count=1
function_name	diccionario indicado mediante el ||| crack closedict	count=1
function	una [function_name_1] [arg_pair_2] formulario ||| [function_name_1] [arg_pair_2]	count=1
function_name	opendir readdir ||| eio readdir	count=1
arg_pair	una fuente arbitraria ||| resource $p	count=1
function_name	dsn disponibles ||| source	count=1
function_name	un string ||| addcslashes	count=1
function_name	entradas y salidas para ||| set scaling	count=1
arg_pair	formato csv ||| string $delimiter string $enclosure	count=2
function_name	mínima del ||| sybase min	count=1
function_name	libera la ||| free result	count=1
function_name	la siguiente fila ||| fetch	count=4
function_name	exclución lógica ||| variant xor	count=1
function_name	carácter ||| char	count=1
function_name	disponible la ||| image	count=1
arg_pair	puede utilizarse para obtener ||| int $field_offset	count=1
function_name	documentos ||| min doc frequency	count=2
function_name	después de llamarla ||| odbc	count=1
function_name	obtiene el modo ||| trader get	count=1
function_name	el espacio de ||| is default	count=1
arg_pair	un ||| string $field string $field_override	count=1
arg_pair	codificación para los datos ||| string $encoding	count=1
function_name	establece ||| set cascade num	count=1
function_name	devuelve el producto ||| array product	count=1
namespace	código ||| intlchar	count=7
function_name	el de estilo de ||| show	count=1
arg_pair	el algoritmo ||| string $lib_dir	count=2
arg_pair	los radios ||| float $ry	count=1
function_name	fann_get_cascade_candidate_stagnation_epochs() ||| change fraction	count=1
arg_pair	función permite enviar emails ||| string $message string $additional_headers	count=1
function_name	conjunto de resultados ||| msql	count=2
function_name	or ||| variant or	count=2
namespace	cómo se ||| function	count=1
arg_pair	el identificador ||| resource $link_identifier	count=1
arg_pair	type a charset ||| string $type string $charset	count=1
function_name	del espacio del color ||| color space	count=1
function_name	string ||| addcslashes	count=1
function_name	descenso vertical de ||| get descent	count=1
function_name	la ||| mb	count=6
arg_pair	barras invertidas ||| string $str	count=1
function_name	pares de ||| repl	count=1
function_name	control de paginación ||| control paged result	count=3
function	semáforo pueda [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	establece es ||| mixed	count=1
function_name	las ||| set sslchecks	count=2
function_name	obtiene el ||| get	count=55
function_name	coincidencias de ||| set	count=1
arg_pair	php var_array ||| array $var_array int $max_table_length	count=1
function_name	donde se buscarán ||| dbplus	count=1
namespace	que mostrar ||| function	count=1
arg_pair	la prueba probabilística ||| gmp $a	count=1
return	utilizar en ||| bool	count=1
function_name	[function_name_1] fam en ||| [function_name_2] [function_name_1]	count=1
arg_pair	nivel de bits ||| mixed $right	count=2
function_name	personalizado de ||| setup custom directory	count=1
function_name	máximo de ||| max	count=7
function_name	lo ||| mlt min	count=1
arg_pair	u ||| string $str	count=1
function_name	[function_name_1] contornea el ||| [function_name_1] fill [function_name_2]	count=1
function_name	puede añadir al ||| add	count=1
namespace	mediante configuraciones ||| yaf_router	count=1
function_name	parámetro rows ||| pg copy	count=1
function_name	se emplea para establecer ||| set info	count=1
namespace	a un hash y ||| quickhashstringinthash	count=1
arg_pair	para [arg_pair] ||| [arg_pair]	count=2
function_name	establece el ||| setproctitle	count=1
arg_pair	la función callback ||| mixed $callback	count=1
arg_pair	eventos ||| resource $event_base	count=2
function_name	[function_name] inspeccionada por ||| mysqlnd qc get [function_name] trace	count=3
namespace	la que ||| solrquery	count=1
function_name	del mismo documento ||| locallink	count=1
function_name	trozos remarcados para ser ||| set highlight	count=1
arg_pair	fgets() ||| resource $handle int $length	count=1
arg_pair	limpia ||| int $caches	count=1
function_name	socket ||| socket	count=11
function_name	el tamaño [function_name_2] ||| function int mcrypt module [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] desde una ||| [function_name_2] [function_name_1]	count=4
arg_pair	un alas ||| string $value	count=1
function_name	de espera [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	array mantienen su correlación ||| arsort	count=1
function_name	descripción de ||| cairo ps level to	count=1
namespace	puntero dado ||| function	count=1
arg_pair	intenta eliminar cualesquiera ||| int $length	count=1
function_name	cuantía para ||| quantum	count=1
function_name	recibe ||| nsapi	count=1
function_name	de ellos ||| map	count=1
function_name	copyright de la ||| copyright	count=1
function_name	iterador [function_name] actual ||| get [function_name]	count=1
function_name	rojo de la cromaticidad ||| red	count=2
function_name	devuelve el método de ||| get	count=1
function_name	[function_name_1] prefijo ||| [function_name_1] facet [function_name_2]	count=1
function_name	fracción de fann_get_cascade_candidate_change_fraction() ||| get cascade candidate	count=1
function_name	la supervisión del servicio ||| start service ctrl dispatcher	count=1
return	hw_api_object ||| hw_api_object	count=1
arg_pair	argumento offset a ||| int $offset	count=1
return	que closedir() ||| void	count=1
function_name	de modo ||| mode	count=1
function_name	deshabilitar errores libxml ||| libxml	count=1
function_name	de tipos de letra ||| imagepsencodefont	count=1
function_name	clave usando ||| uksort	count=1
function_name	este método [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	archive ||| writable	count=1
namespace	archivo phar utilizando los ||| phar	count=2
arg_pair	valor ||| int $type mixed $value	count=2
arg_pair	especifica un ||| string $formatter	count=1
function_name	devuelve un mensaje ||| curl	count=1
arg_pair	rango especificado de páginas ||| int $first_num	count=1
return	fue creada con la ||| bool	count=1
function_name	estado del servidor gearman ||| task status	count=1
function_name	una única ||| add kernel	count=1
function_name	datos del ||| uudecode all	count=1
arg_pair	indicando que ocurrió un ||| string $actor string $details	count=1
function_name	logo de php usando ||| php logo guid	count=1
function_name	un cursor ||| cursor	count=1
function_name	de la siguiente ||| next	count=1
function_name	para usos criptográficos ||| random bytes	count=1
function_name	del complemento ||| mysqlnd qc get	count=1
return	devolver un ||| void	count=1
function_name	codificado mediante ||| all	count=1
function_name	ordenación personalizada ||| sort	count=1
arg_pair	el oid dado ||| resource $conn_identifier string $oid	count=1
arg_pair	poder utilizarlo ||| string $separator	count=1
function_name	una única [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	un archivo temporal ||| mailparse	count=1
function_name	de configuración de ||| cfg var	count=1
function_name	establecer ||| set info	count=1
function_name	la lista ||| data source	count=1
arg_pair	dado por [arg_pair_2] ||| [arg_pair_1] string $mailbox [arg_pair_2]	count=4
function_name	esta función devolverá la ||| data	count=1
function	[function_name_1] relation ||| [function_name_1] rcrtlike [arg_pair_2]	count=2
function_name	asignación de ||| apc sma	count=1
arg_pair	png desde ||| int $quality int $filters	count=1
function_name	máxima sobre la ||| max	count=1
function_name	de estado ||| status	count=2
function_name	las ||| doc frequency	count=2
arg_pair	address al socket ||| resource $socket string $address	count=1
function_name	valor de un parámetro ||| value	count=1
arg_pair	un string a el ||| string $str int $length	count=1
function_name	de bézier desde ||| curveto	count=1
function_name	siguiente petición xpath ||| register xpath namespace	count=1
function_name	lista ||| data	count=1
arg_pair	dos coordenadas los radios ||| float $rx float $ry	count=1
function_name	secuencia ||| imap msgno	count=2
function	devuelve el [arg_pair_2] ||| [function_name_1] contents [arg_pair_2]	count=6
arg_pair	el parámetro length ||| bool $crypto_strong	count=1
return	[return] de ||| [return]	count=4
function_name	si el [function_name_2] ||| enc [function_name_1] block [function_name_2]	count=1
function_name	documentos como este ||| doc frequency	count=1
arg_pair	para un punto de ||| mixed $codepoint int $property	count=1
arg_pair	asociativo un ||| resource $stmt	count=1
namespace	una cadena ||| gmagick	count=1
arg_pair	el nombre distinguido ||| array $dn	count=1
arg_pair	una rutina ||| string $alias	count=1
function_name	devuelve el ||| pgsql get	count=1
function_name	el de estilo de ||| slide show	count=1
arg_pair	una nueva ||| int $key int $value	count=1
arg_pair	llave keydata y ||| string $keydata	count=1
function_name	o false si ||| mcrypt module is	count=1
namespace	contiene el ||| function	count=1
arg_pair	a una nueva ubicación ||| string $new_path	count=1
return	solo ||| void	count=1
arg_pair	función callback a los ||| callable $callback	count=1
function_name	la base ||| sybase select db	count=1
function_name	el número de filas ||| db2 num rows	count=1
namespace	numero como por ||| function	count=1
arg_pair	de input identificado por ||| array $input	count=1
function_name	la descripción de la ||| cairo ps level to string	count=1
arg_pair	numérico de un ||| string $server_key string $key	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] output [function_name_2]	count=8
function_name	convierten en claves ||| flip	count=1
function_name	en la configuración del ||| config count	count=1
function_name	uno o más canales ||| channel	count=4
namespace	del ||| solrdocument	count=1
function_name	retorna la carga ||| workload	count=1
return	colas o cualquier ||| zmqsocket	count=1
function_name	secundarios ||| okay	count=2
function_name	[function_name_1] pendiente ||| [function_name_1] activation [function_name_2]	count=1
function_name	xhprof de la ||| xhprof	count=1
function_name	que las ||| set	count=1
function_name	de ||| load string	count=2
function_name	eventos generados ||| event	count=1
function_name	su propia clase dom ||| node class	count=1
function_name	filas afectadas por la ||| affected rows	count=4
function_name	largo para un ||| long	count=1
arg_pair	una ||| string $path	count=1
function_name	rutina de ||| stub	count=1
arg_pair	cero en caso de ||| string $zurl	count=1
function	crea [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=19
namespace	del ||| gmagickdraw	count=1
function_name	global del índice anterior ||| prev	count=1
function_name	quoted printable creado ||| quoted printable encode	count=1
function_name	filas ||| sybase num rows	count=1
namespace	al comando ||| mongocursor	count=1
arg_pair	para ||| resource $imap_stream	count=1
namespace	texto ||| gmagickdraw	count=1
function_name	un manejador de trabajo ||| job	count=1
function_name	las coincidencias de ||| set	count=1
function_name	cubrid_error_code() ||| error code	count=1
arg_pair	de mask ||| string $mask	count=2
function_name	[function_name_1] candidatas antes ||| [function_name_2] [function_name_1]	count=8
function_name	destino con ||| nameddest	count=1
function_name	nuevo [function_name] soapvar ||| [function_name]	count=1
function_name	emitir advertencias y ||| set using exceptions	count=1
namespace	adjunta ||| imagickkernel	count=1
arg_pair	más bases de datos ||| string $databases	count=1
function_name	en por lo ||| mlt min	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pdi value [arg_pair_2]	count=1
function_name	descripción de ||| cairo font options set hint metrics	count=1
function_name	número de registros afectado ||| mssql rows affected	count=1
function_name	intenta borrar un servicio ||| delete service	count=1
function_name	[function_name_1] los ||| [function_name_1] [function_name_2]	count=2
function_name	corto para un ||| get frame short	count=1
arg_pair	de listas desordenadas ||| string $achtung_wild	count=1
function_name	los nombres ||| field names	count=1
function_name	conjunto de caracteres predeterminado ||| charset	count=1
namespace	indica ||| gearmantask	count=1
function_name	[function_name] en ||| ftp [function_name]	count=2
function_name	registrar su propia clase ||| register node class	count=1
function_name	que ||| add types	count=2
function	siguiente fila [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	certificado) basada en ||| array $configargs array $extraattribs	count=1
function_name	selecciona ||| mssql select db	count=2
function_name	a la dirección ||| geoip	count=1
arg_pair	[arg_pair] objeto textflow ||| [arg_pair]	count=1
namespace	verifica que ||| function	count=1
function_name	sets ||| set tie breaker	count=2
arg_pair	de mensaje para ||| resource $imap_stream	count=1
function_name	la csr dada ||| csr	count=1
function_name	versión de pdflib ||| pdf	count=1
function_name	lo menos tantos documentos ||| doc	count=1
function_name	si un ||| prob prime	count=1
arg_pair	texto ||| float $word_space	count=1
function_name	de todas las bases ||| dbs	count=1
arg_pair	construye un ||| int $priority	count=1
return	y ||| string	count=4
return	devuelve el ||| int	count=5
arg_pair	simulado ||| int $width	count=1
namespace	una sentencia preparada ||| sqlite3stmt	count=1
function_name	campo ||| mssql field seek	count=2
function_name	frecuencia en ||| mlt min doc	count=1
function_name	tie ||| set tie breaker	count=2
function_name	describe el ||| message	count=1
arg_pair	assoc_array en ||| int $options	count=1
function_name	la intersección de ||| array uintersect assoc	count=1
arg_pair	se defina sobre las ||| zmqsocket $backend	count=1
function_name	devuelve una versión ||| to string	count=4
function_name	aplicarse ||| kernel	count=1
function_name	el resultado ||| xdiff file	count=4
function_name	bytes requeridos para mostrar ||| field display size	count=1
arg_pair	archivo de ||| string $filename array $options	count=1
function_name	devuelve el número máximo ||| get	count=3
function_name	buzones suscritos ||| imap getsubscribed	count=1
function_name	mensaje de texto ||| curl strerror	count=1
namespace	se necesita invocar ||| function	count=1
arg_pair	fd ||| mixed $fd	count=2
arg_pair	datos y los devuelve ||| string $data string $mode	count=1
return	de parámetros ||| int	count=1
function	[function_name_1] un nombre ||| [arg_pair_2] [function_name_1]	count=3
function_name	el registro ||| dbase delete record	count=1
function_name	transacción ||| ibase commit	count=2
function_name	esquema solicitado de la ||| schema	count=1
function_name	extraer ||| extract	count=1
function_name	ha sido creado con ||| types	count=1
function_name	un mensaje de ||| strerror	count=1
function_name	varias ||| data source	count=2
function_name	gestor curl ||| curl	count=2
function_name	ecualiza el [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	cunstruye el ||| sdo_das_xml	count=1
function_name	similares al comando de ||| tailable	count=1
arg_pair	función callback a ||| array $array callable $callback	count=1
function_name	raíz ||| root	count=4
function_name	nombres de ||| names	count=1
function_name	la publicación de un ||| fdf get ap	count=1
arg_pair	pueden ||| zmqsocket $backend	count=1
function_name	y esté ||| floodfill	count=1
arg_pair	de a b ||| gmp $a gmp $b	count=1
arg_pair	a thickness ||| resource $image int $thickness	count=1
namespace	instancia ||| sdo_das_xml	count=1
function_name	activación [function_name] ||| [function_name] activation	count=2
arg_pair	fgetss() ||| int $length	count=1
function_name	biblioteca ||| exceptions	count=1
return	la cuenta ||| int	count=1
function_name	[function_name] de ||| set image [function_name]	count=2
namespace	la posición actual ||| splfileobject	count=1
function_name	libera la ||| free	count=2
function_name	de reintentos en caso ||| deadlock retry count	count=1
function_name	frecuencia ||| set mlt	count=1
namespace	objectos soapserver ||| soapserver	count=1
function_name	sobre cualquier flujo ||| stream filter	count=1
namespace	los caracteres que aparecen ||| function	count=1
arg_pair	str donde ||| string $str	count=1
namespace	secuencia de mensaje para ||| function	count=1
function_name	tamaño actual ||| zip	count=1
function_name	lo escribe al ||| write function	count=1
namespace	por lo ||| function	count=1
namespace	de la ||| splfileobject	count=1
function_name	tendencias de ||| fann get bias	count=1
function_name	vinculada de oracle ||| oci bind by	count=1
arg_pair	de ||| int $height	count=2
function_name	considerara ||| fragsize	count=1
return	asociado con ||| string	count=1
return	de mensaje y socket. ||| zmqsocket	count=1
function_name	establece el valor del ||| set	count=1
function_name	[function_name_1] relaxng del ||| [function_name_2] ngvalidate [function_name_1]	count=1
function_name	de columna actual ||| current column	count=1
function_name	la función cubrid_lock_read() ||| lock read	count=1
function_name	guardará los pares ||| config save repl	count=1
function_name	número de reintentos ||| retry count	count=1
function_name	atributo name ||| attribute	count=1
namespace	que las ||| solrquery	count=1
function_name	en ||| set using	count=1
function_name	ya ha sido ||| add	count=1
function_name	geoip_domain_by_name() devolverá ||| domain	count=1
arg_pair	se defina sobre ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	la línea de base ||| harufont	count=1
arg_pair	servicios colas ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	manejador de instrucciones ||| set processing instruction handler	count=1
function_name	indicador de ||| gzrewind	count=1
function_name	string ||| ltrim	count=1
function_name	parámetro rows ||| pg copy from	count=1
function_name	es el espacio ||| default	count=1
function_name	tipo incorrecto de argumento) ||| using exceptions	count=1
function_name	especifica el término de ||| terms lower bound	count=1
function_name	el número de columna ||| column	count=1
arg_pair	un nuevo archivo de ||| resource $pxdoc resource $file	count=1
function_name	recurso curl ||| curl	count=1
function_name	los callback [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	donde id es el ||| by id	count=1
function_name	vincular el array de ||| bind	count=1
arg_pair	se defina ||| zmqsocket $backend	count=1
arg_pair	ingres_fetch_array() ||| int $result_type	count=1
arg_pair	de start hacia los ||| gmp $a int $start	count=2
return	y sólo si el ||| void	count=1
function_name	representación que devuelve ||| to	count=1
function_name	diferencias ||| pconnect	count=1
function_name	valores de la fila ||| fetch	count=1
function_name	cliente usado por ||| client identifier	count=1
arg_pair	certificado x509cert proporcionado ||| mixed $x509cert	count=1
function_name	devolver un valor especial ||| set	count=1
namespace	desde la ||| sdo_das_xml	count=1
function_name	aún está sobre un ||| valid	count=1
namespace	uso ||| mysqlnduhconnection	count=2
function_name	la descripción ||| cairo pattern get surface	count=1
function_name	variable de entorno de ||| setenv	count=1
function_name	de interoperabilidad stubs ||| create default stub	count=1
function_name	respuesta ||| command handle response	count=1
namespace	del documento ||| solrinputdocument	count=2
function_name	que ||| mlt min doc	count=2
function_name	todas las capas ocultas ||| hidden	count=1
function_name	de emitir advertencias ||| set using	count=1
function	[function_name_1] ambos ||| [function_name_1] resource $stmt [arg_pair_2]	count=1
function_name	(«kernel») a este ||| add kernel	count=1
function_name	almacena datos de ||| file	count=1
function_name	el tamaño de paso ||| rprop delta	count=3
namespace	de un número ||| function	count=2
return	como este ||| solrquery	count=1
function_name	obtener el tamaño ||| size	count=1
arg_pair	información data la cuál ||| string $data	count=1
function_name	por ||| uasort	count=1
return	mensaje ||| string	count=1
arg_pair	imágenes ||| imagick $image int $channeltype	count=1
namespace	filtro ||| imagickkernel	count=1
namespace	mismas reglas que ||| function	count=1
function_name	conexión con [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	se enlaza con ||| function	count=1
namespace	versión plural ||| function	count=1
arg_pair	parámetro data ||| string $data	count=1
function_name	sin tratar del ||| raw	count=2
function_name	la función usa ||| gmp	count=1
function_name	para desplegar el logo ||| logo	count=1
function_name	y devolver ||| set using exceptions	count=1
arg_pair	que esté disponible ||| resource $stmt int $row	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=5
arg_pair	de texto con ||| string $text	count=1
function_name	devolverá ||| data	count=1
namespace	la propiedad dada por ||| function	count=1
function_name	como ||| mlt	count=1
function_name	para los mensajes ||| imap clearflag full	count=1
function_name	global ||| mysqlnd ms	count=1
function_name	realiza una operación and ||| and	count=1
function	guarda [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	tipo de imagen ||| set type	count=2
function_name	[function_name_1] el modo ||| enc [function_name_1] block [function_name_2]	count=1
arg_pair	dada con el método ||| string $data string $method	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] server [function_name_2]	count=3
arg_pair	aumentar el left_operand ||| string $left_operand	count=1
return	para borrar una instancia ||| bool	count=1
function_name	antes de ||| addcslashes	count=1
function_name	la tarea ||| do	count=2
function_name	el tipo ||| type	count=20
return	imagen basada en ||| bool	count=1
arg_pair	actual indicando que ||| string $details	count=1
function_name	el nombre del ||| get cipher name	count=1
namespace	coordenadas ||| function	count=1
function_name	la biblioteca ||| using exceptions	count=1
return	variable ||| string	count=1
function_name	sftp desde un servidor ||| sftp	count=1
function_name	opción especificada ||| option	count=1
function_name	devuelve ||| db2 get	count=1
arg_pair	data en ||| int $length	count=1
return	función de retorno apropiada ||| bool	count=1
return	que establece es ||| mixed	count=1
function_name	dado y extrae cada ||| mailparse uudecode	count=1
function_name	de reescritura establecidas ||| output reset rewrite vars	count=1
function_name	característica ||| tailable	count=1
function_name	nombre especificado ||| symlink	count=1
function_name	descripción ||| cairo scaled font text extents	count=1
function_name	espera de la ejecución ||| query timeout	count=1
arg_pair	un umbral de ||| int $channel	count=1
arg_pair	ifx_do() ||| int $cursor_def	count=1
arg_pair	el offset especificado ||| resource $context int $offset	count=1
function_name	[function_name] local buscado ||| get elements [function_name]	count=1
arg_pair	ser enviada junto ||| bool $secure bool $httponly	count=1
namespace	elementos de ||| function	count=1
arg_pair	el xml dump ||| string $xml_file string $rrd_file	count=1
function_name	mueve la posición ||| move to	count=1
namespace	el proveedor oauth ||| oauthprovider	count=1
arg_pair	de grafemas ||| int $start	count=1
function_name	almacena [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	la lista de ||| array	count=1
function_name	un repositorio ||| svn	count=2
function_name	devuelve el servidor ||| get	count=1
function_name	[function_name_1] relaxng del ||| [function_name_2] [function_name_1]	count=1
function_name	imagen en negro del ||| imagecreatetruecolor	count=1
arg_pair	en assoc_array ||| int $options	count=1
function_name	no ||| min	count=1
arg_pair	local_socket ||| int $errno	count=1
function_name	datos geoip está disponible ||| geoip	count=1
function_name	método de disposición ||| dispose	count=2
arg_pair	conexión [arg_pair_2] ||| [arg_pair_1] string $user [arg_pair_2]	count=2
arg_pair	externos [arg_pair] ||| [arg_pair]	count=1
arg_pair	image ||| int $color	count=1
namespace	en el puntero ||| splfileobject	count=1
function_name	función geoip_country_code_by_name() devolverá la ||| country code by	count=1
function_name	la intersección ||| array uintersect assoc	count=1
arg_pair	bordes ||| int $height	count=1
function_name	nueva instancia ||| ps new	count=1
function_name	calcula el seno hiperbólico ||| trader sinh	count=1
function_name	devuelve las métricas ||| get	count=1
function_name	devuelve el estado ||| introspection get state	count=1
function_name	coordenadas ||| rotate	count=1
function_name	un das ||| add	count=1
function_name	un valor especial ||| using	count=1
function_name	mysqli_get_server_version() [function_name] la ||| mysqli [function_name] server	count=1
arg_pair	el archivo dest ||| int $context	count=1
namespace	de la imagen ||| gmagick	count=8
function_name	establece el gestor de ||| set storage	count=1
function_name	descripción de la ||| add color stop rgb	count=1
function_name	de el último error ||| error	count=1
arg_pair	una ||| string $filename int $flags	count=1
function_name	obtiene información sobre ||| getinfo	count=1
function_name	parámetros url ||| params	count=1
namespace	secuencia de mensaje ||| function	count=1
namespace	[namespace] reflejada ||| [namespace]	count=1
function_name	los colores ||| ncurses	count=1
function_name	mysqli_get_server_version() [function_name] la versión ||| mysqli [function_name] server	count=1
arg_pair	msglist ||| string $msglist	count=1
function_name	de nombres ||| default namespace	count=1
function_name	el identificador slob ||| slob	count=1
arg_pair	la primera ocurrencia de ||| string $haystack string $needle	count=1
return	retorna el tiempo ||| int	count=1
return	efecto de botón tridimensional ||| void	count=1
arg_pair	de que server_key ||| string $server_key	count=5
function_name	excepción ||| set	count=1
arg_pair	valor ||| string $name mixed $value	count=1
function_name	forma ||| sybase pconnect	count=2
function_name	de color ||| start color	count=1
function_name	[function_name_1] etiqueta dado ||| elements by [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] el prefijo ||| [function_name_1] facet [function_name_2]	count=1
arg_pair	que cualquier otra llamada ||| callable $callback mixed $data	count=1
function_name	la solicitud ||| nsapi request	count=1
function_name	la imagen ||| get image	count=2
arg_pair	parada empleada durante el ||| int $stop_function	count=1
function_name	de la variable ||| gettype	count=1
function_name	servicio pausado ||| continue service	count=1
function_name	encuentra disponible ||| memory image	count=1
function_name	rutina de interoperabilidad cargadora ||| get stub	count=1
function_name	fila de ||| fetch	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] insert [arg_pair_2]	count=9
function_name	en la que las ||| set mlt	count=1
function_name	escala el sistema de ||| scale	count=1
arg_pair	las capas ||| zmqsocket $backend	count=1
namespace	en bruto o ||| function	count=2
arg_pair	datos emita uno de ||| string $event_name2	count=1
function_name	hacer de intermediarios de ||| construct	count=1
arg_pair	cualquier abstracción ||| zmqsocket $frontend	count=1
function_name	que no ||| mlt min	count=1
function	coloca una [function_name_1] [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=2
function_name	la descripción de ||| cairo surface mark dirty rectangle	count=1
function_name	subject el ||| strcspn	count=1
function_name	uri del ||| uri	count=1
namespace	[namespace] la fuente ||| [namespace]	count=3
return	retornar un ||| int	count=1
arg_pair	una base ||| string $database	count=1
return	el directorio base ||| void	count=1
return	existe en el ||| bool	count=1
function_name	ha sido creado ||| add	count=1
function_name	un objeto simplexmliterator ||| children	count=1
function_name	devuelve el último ||| get	count=2
function_name	declaración de namespace ||| end namespace decl	count=1
function_name	lecturas a ||| get slave	count=1
function_name	lee datos ||| fbsql read	count=1
return	un caracter que contiene ||| string	count=1
function_name	[function_name_1] seguridad ||| [function_name_2] [function_name_1]	count=4
function_name	diff ||| file diff	count=2
arg_pair	un ||| int $priority	count=1
function_name	cambia el ||| dbplus chdir	count=1
function_name	[function_name_1] de oracle ||| [function_name_2] [function_name_1]	count=5
function_name	establece el nombre de ||| set	count=2
return	los extremos ||| array	count=2
function_name	de consultas ||| mysqlnd qc	count=1
return	en la ruta ||| bool	count=1
function_name	en la que las ||| set mlt min doc	count=1
arg_pair	establece el uri que ||| string $encoding	count=1
function_name	http de la respuesta ||| get http	count=1
function_name	escala ||| ps scale	count=2
function_name	de direcciones ||| construct	count=1
function_name	adjunta otro núcleo ||| kernel	count=1
function_name	parche binario ||| xdiff file	count=1
function_name	el tamaño de un ||| size	count=1
arg_pair	offset [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	esta función devolverá la ||| source	count=1
function_name	establece la apariencia de ||| fdf set	count=1
function_name	de consultas que serán ||| mlt	count=1
function_name	paleta de ||| imagecolorexact	count=1
function_name	si el [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	importa las variables ||| import request variables	count=3
arg_pair	utilizando el algoritmo estándar ||| string $str	count=1
function_name	los datos del ||| uudecode	count=1
function_name	coseno hiperbólico ||| trader cosh	count=1
function_name	funciones definidas en ||| functions	count=1
arg_pair	-- zguide ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	frontbase asociado con ||| fbsql	count=1
function_name	cursor asociado al ||| ingres result seek	count=1
function_name	instalación actual de ||| imagetypes	count=1
arg_pair	gmagickpixel ||| gmagickpixel $color	count=1
arg_pair	de la ||| int $type float $disp_time	count=1
function_name	extrae una región de ||| region	count=1
arg_pair	la función callback a ||| callable $callback	count=2
arg_pair	efecto de ||| int $width int $height	count=1
function_name	filas extraidas por ||| ifx num rows	count=2
namespace	basado en disco o ||| function	count=1
return	en esas ||| bool	count=1
function_name	del texto que lee ||| fgetss	count=1
function_name	cambiar el ecm ||| stagnation	count=1
function_name	proxy para ||| proxy	count=1
function_name	que closedir() solo que ||| close	count=1
return	se convierte en ||| bool	count=1
namespace	[namespace] un ángulo ||| [namespace]	count=2
arg_pair	valor de un ||| string $value	count=1
function_name	especifica el término de ||| set terms lower bound	count=1
function_name	número de tendencias ||| fann get bias	count=1
function_name	establece el [function_name_2] ||| [function_name_2] [function_name_1]	count=51
function_name	gestores de página abiertos ||| pdi	count=1
function_name	la e/s del disco ||| readahead	count=1
function_name	ambos puedan ||| add	count=1
arg_pair	permite enviar ||| string $message string $additional_headers	count=1
function_name	subject que contiene ||| strspn	count=1
return	un objeto que ||| ktaglib_mpeg_file	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] image blue [function_name_2]	count=1
namespace	de botón tridimensional ||| gmagick	count=1
arg_pair	proporcionado que ||| int $color	count=1
function_name	si un número es ||| prob	count=1
namespace	devuelve el color de ||| gmagickdraw	count=1
function_name	el nombre unicode de ||| name	count=1
function_name	como este serán ignoradas ||| doc frequency	count=1
namespace	define ||| harudestination	count=1
function_name	[function_name_1] abreviado ||| [function_name_2] [function_name_1]	count=4
function_name	memoria caché ||| wincache	count=1
function_name	devuelve el conjunto de ||| cubrid get	count=1
function	[function_name_1] de conexión ||| [function_name_1] resource $connection [arg_pair_2]	count=2
return	a enviar en ||| bool	count=1
arg_pair	usarla como una función ||| string $name mixed $callback	count=1
arg_pair	[arg_pair] datos ||| [arg_pair]	count=1
function_name	stored procedure [function_name] ||| [function_name]	count=3
namespace	los nombres o ||| function	count=1
function_name	el ||| using exceptions	count=2
arg_pair	message al ||| string $message	count=1
function_name	dispositivo raíz descargando ||| gupnp root device	count=1
function	[function_name_1] al campo ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=1
function_name	blob/clob ejecutando la sentencia ||| cubrid lob	count=1
function_name	las conexiones ||| fann get	count=1
function_name	[function_name] una ||| [function_name] add doc	count=1
function_name	los campos de ordenación ||| sort field	count=1
arg_pair	un rectángulo comenzando por ||| resource $image int $x1	count=1
function_name	cubrid_lob2_tell() ||| lob2 tell	count=2
arg_pair	certificado x509cert ||| mixed $x509cert bool $shortnames	count=1
return	opacidad de los ||| float	count=1
function_name	de tidy a ||| tidy	count=1
function_name	como copia de seguridad ||| set highlight alternate	count=1
arg_pair	actual a x ||| float $x	count=1
arg_pair	una matriz ||| resource $p	count=1
return	basado en ||| bool	count=2
function_name	la caja y establece ||| set	count=1
namespace	que se tienen que ||| function	count=1
namespace	actual donde ||| function	count=1
function_name	codificación de caracteres ||| mb convert encoding	count=1
return	intermediarios de direcciones ||| zmqsocket	count=1
arg_pair	sobre las capas ||| zmqsocket $backend	count=1
function_name	el nombre ||| name	count=37
function_name	punto primario verde de ||| green primary	count=1
function_name	devuelve true si el ||| is	count=1
function_name	envía la [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	la biblioteca unrar encuentre ||| rarexception	count=1
function_name	de post ||| get post	count=1
function_name	pulse una ||| wait for key	count=1
function_name	eventos ||| event buffer new	count=2
function_name	añade un nuevo ||| inotify add	count=1
return	todavía no se le ||| int	count=1
arg_pair	a una ||| string $path	count=1
namespace	carácter especificado por ||| function	count=1
namespace	todos los servidores ||| gearmanclient	count=1
arg_pair	image ||| resource $image int $font	count=1
function_name	si no coincide ||| match	count=1
namespace	a ||| imagickkernel	count=2
namespace	sqlite3 como una constante ||| sqlite3	count=1
namespace	archivo nombrado por ||| function	count=1
function_name	documento mínima ||| facet enum cache min default	count=1
arg_pair	argumento offset a ||| string $offset	count=1
arg_pair	los bordes de la ||| int $x	count=1
function_name	de error de socket ||| socket	count=1
function_name	escala las [function_name_2] ||| [function_name_1] [function_name_2]	count=8
namespace	phar ||| phar	count=2
function_name	einer mime ||| iconv mime	count=1
return	un fichero ordinario o ||| resource	count=1
function_name	establece ||| set ap	count=1
function_name	nombres similares para ||| similar names	count=2
function_name	como este ||| set mlt min doc	count=1
function_name	descripción de la ||| cairo pattern create radial	count=1
return	cambia el directorio ||| string	count=1
function_name	ignoradas ||| min doc frequency	count=2
function_name	establece ||| stream set read buffer	count=2
function_name	manejador de trabajo dado ||| job	count=1
namespace	se comporta ||| function	count=2
function_name	número de inodo para ||| inode	count=1
arg_pair	la función callback dependiendo ||| callable $callback	count=1
namespace	un objeto soapserver entre ||| soapserver	count=1
function_name	socket creado ||| socket accept	count=1
arg_pair	data mediante el ||| string $data	count=1
namespace	la [namespace] a ||| [namespace]	count=1
function_name	de épocas [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	valor gamma ||| gamma	count=1
arg_pair	[arg_pair_1] en haystack ||| [arg_pair_2] [arg_pair_1]	count=8
arg_pair	tridimensional ||| int $width	count=1
function_name	carga ||| add types	count=2
arg_pair	fgets() excepto ||| resource $handle int $length	count=1
function_name	añade ficheros ||| add pattern	count=1
function_name	la respuesta original ||| last response	count=1
function_name	la variable env ||| get env	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] page ext [arg_pair_2]	count=1
arg_pair	una consulta aql local ||| string $query	count=1
function_name	de umbral del error ||| step error threshold	count=2
function_name	devuelve una lista de ||| enchant broker list	count=1
namespace	de coordenadas ||| function	count=1
function_name	logo de php ||| php logo	count=1
function_name	que ||| chr	count=1
function_name	los callback definidos ||| gupnp control point browse start	count=1
function_name	el id especificado donde ||| by	count=1
function_name	true entonces en lugar ||| set using exceptions	count=1
function_name	[function_name_1] flujo con ||| [function_name_2] [function_name_1]	count=2
namespace	periodos inestables de ||| function	count=1
function_name	crea un objeto ||| create data object	count=2
function_name	frecuencia de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	sobre la última transferencia ||| int $opt	count=1
function	fecha [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de primer plano y ||| color set	count=1
function_name	el tamaño asociado con ||| size	count=1
function_name	[function_name_1] obtener ||| [function_name_2] [function_name_1] resultset resource $statement	count=1
function_name	proceso actual ||| posix	count=1
arg_pair	pregunta sobre la ||| string $keyword	count=1
namespace	dada que apunta ||| function	count=2
function_name	caja y establece ||| set	count=1
function	[function_name_1] la resolución ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] mismas preferencias ||| [function_name_2] [function_name_1]	count=3
function_name	continuando ||| eio fallocate	count=1
function_name	en ncurses ||| ncurses	count=1
function_name	advertencia esta función ||| ps open memory	count=1
arg_pair	[arg_pair] con ||| [arg_pair]	count=2
arg_pair	transformaciones con xsltprocessor ||| string $name	count=1
namespace	sentencia ||| sqlite3stmt	count=3
function_name	directorio personalizado de ||| setup custom directory	count=1
arg_pair	intermediarios ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	una nueva instancia de ||| array $rectangle string $text	count=1
arg_pair	callback a ||| mixed $callback	count=1
function_name	exe ||| exe	count=1
function_name	usuario ||| uasort	count=1
namespace	graphicsmagick como ||| gmagick	count=1
function_name	obtiene el descenso vertical ||| descent	count=1
function_name	las ||| set mlt	count=1
namespace	que contine ||| memcached	count=1
function_name	esquema es clickeado ||| destination	count=1
namespace	acceso a lectura de ||| function	count=1
function_name	número es ||| prob prime	count=1
arg_pair	des ||| string $str	count=1
function_name	obtiene ||| curl	count=1
function_name	son operaciones crud se ||| command	count=1
function_name	error ||| gupnp service action return error	count=1
function	[function_name_1] una conexión ||| [function_name_1] [arg_pair_2]	count=2
function_name	la siguiente fila del ||| oci fetch	count=1
function_name	glob() de la biblioteca ||| glob	count=1
function_name	esta función devolverá ||| data source	count=1
function_name	si ||| using exceptions	count=4
namespace	acepta uno dos o ||| function	count=1
namespace	closedir() solo ||| directory	count=1
function_name	descripción ||| cairo pattern create for surface	count=1
arg_pair	un ||| mixed $class	count=1
function_name	encabezados a enviar ||| headers	count=1
function_name	de no-bloqueo ||| nb	count=1
return	una máscara de bits ||| int	count=1
function_name	argumento es ||| set using exceptions	count=1
arg_pair	directiva whence como ||| int $whence int $pri	count=1
namespace	las peticiones soap ||| soapclient	count=1
function_name	la imagen y ||| image	count=3
function_name	descripción de la ||| ps surface	count=3
arg_pair	a la de memcached::set() ||| int $expiration	count=1
function_name	[function_name] actual de ||| [function_name] horizontal	count=1
function_name	dibujan objetos rellenos ||| getfillcolor	count=1
arg_pair	recurso de conexión especificado ||| resource $connection	count=1
return	la ||| gmagick	count=2
return	data proporcionada en ||| bool	count=1
function_name	de la palabra ||| word	count=2
function_name	el número de candidatas ||| get cascade	count=1
function_name	de error ||| bzerror	count=1
arg_pair	php var_array al ||| array $var_array	count=1
function_name	palabras ||| set mlt min doc	count=1
function_name	línea cerrada resultante ||| ps closepath stroke	count=1
function_name	primera tupla ||| dbplus first	count=2
function_name	uid del ||| imap uid	count=1
arg_pair	puerto nombre de ||| int $port	count=1
arg_pair	el domain [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	extraer ||| msql	count=1
function_name	apuntador de archivo ||| uudecode all	count=1
return	activa actualmente en el ||| bool	count=2
function_name	carga ||| types	count=1
function_name	añade un ||| add from string	count=1
function_name	desplaza aleatoriamente cada ||| spread	count=1
function_name	mediante el ||| crack closedict	count=1
arg_pair	cuota de ajustes por ||| resource $imap_stream string $quota_root	count=1
function_name	una excepción ||| exception handler	count=1
function_name	obtiene ||| gupnp root device get	count=1
return	de error de cualquier ||| string	count=1
arg_pair	de erroresset_error_handler() ||| int $error_type	count=1
function_name	mínimo de ||| min error	count=1
function_name	serán ignoradas ||| set mlt min doc frequency	count=1
function_name	se usa para ||| cubrid set add	count=2
arg_pair	en un archivo dest ||| string $new_file2 string $dest	count=1
arg_pair	conexión de la red ||| int $from_neuron	count=1
arg_pair	un ||| resource $pdfdoc float $lowerleftx	count=1
namespace	valores ||| arrayiterator	count=1
function_name	el ||| zip entry	count=1
function_name	función cubrid_col_size() se usa ||| cubrid col size	count=1
return	para ||| bool	count=5
function_name	archivo dado y escribe ||| bcompiler write	count=1
function_name	la descripción de ||| cairo font options get subpixel order	count=1
function_name	entradas ||| input	count=2
function_name	clase iterador de ||| iterator class	count=2
arg_pair	[arg_pair_1] un bloque ||| [arg_pair_2] [arg_pair_1]	count=6
arg_pair	función mysql_field_name() ||| int $field_offset	count=1
namespace	la cadena de ||| function	count=1
function_name	función abre un blob ||| ibase blob echo	count=1
function_name	solicitud de servicio extendido ||| es	count=1
function_name	el inverso del modulo ||| invert	count=1
arg_pair	bits en dos variantes ||| mixed $right	count=1
arg_pair	el secreto para las ||| string $token string $token_secret	count=1
function_name	pueda ||| dbx	count=1
function_name	cursores ||| tailable	count=1
function_name	la letra espaciada ||| text width	count=1
function_name	[function_name_1] transformación actual ||| [function_name_1] [function_name_2]	count=2
namespace	se puede ||| function	count=2
function_name	petición al grupo ||| eio	count=1
function_name	atajo empleando ||| shortcut array	count=1
function_name	metadata de los ||| metadata	count=1
function_name	la versión de todos ||| version	count=1
arg_pair	para transformar str1 ||| string $str1	count=1
namespace	instancia ||| yaf_dispatcher	count=1
arg_pair	lotes ||| array $protocoloptions	count=1
namespace	matriz con ||| gmagick	count=1
function_name	para la salida ||| set highlight	count=1
arg_pair	archivo ||| int $use_include_path	count=1
function_name	consulta preparada ||| ingres execute	count=1
function_name	lo menos tantos documentos ||| min doc	count=1
return	el directorio virtual actual ||| string	count=1
function_name	de seguridad ||| set highlight alternate	count=2
function_name	lugar de emitir ||| set using exceptions	count=1
namespace	una imagen ||| gmagick	count=3
function_name	devuelve la cantidad de ||| get	count=1
arg_pair	de fuentes font ||| resource $pdfdoc int $font	count=1
return	para ver ||| bool	count=1
function_name	forma parecida a sybase_connect() ||| sybase	count=1
function_name	id especificado donde id ||| by id	count=1
function_name	hilo de la conexión ||| thread	count=1
function	[function_name_1] str especificada ||| [function_name_1] [arg_pair_2]	count=1
function_name	desde ||| load from string	count=1
arg_pair	alfa para [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	ømq pueden hacer ||| zmqsocket $backend	count=1
function_name	fichero ||| save file	count=1
function_name	remueve [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la frecuencia en ||| min doc	count=1
namespace	indicado por ||| function	count=1
function_name	de los métodos ||| methods	count=2
function_name	lista ||| msql list	count=1
namespace	botón ||| gmagick	count=1
arg_pair	un objeto ||| mixed $data	count=1
function_name	comentario de una entrada ||| comment index	count=1
function_name	en un archivo temporal ||| uudecode	count=1
arg_pair	colas o cualquier ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	blanco u otros caracteres ||| ltrim	count=1
function_name	cairosurface es [function_name] tipo ||| [function_name]	count=1
function_name	establece [function_name_2] ||| [function_name_1] cascade candidate [function_name_2]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] socket [function_name_2]	count=4
function_name	obtiene el iterador ||| get inner iterator	count=2
namespace	unrar encuentre ||| rarexception	count=1
function_name	la primera tupla de ||| dbplus first	count=1
function_name	del atributo de ||| attribute	count=1
function_name	colores de primer plano ||| ncurses color	count=1
function_name	tipo [function_name_2] ||| [function_name_2] [function_name_1]	count=24
function_name	de la expresión regular ||| preg	count=1
arg_pair	en el archivo dado ||| string $filename	count=1
arg_pair	nueva ||| float $height	count=1
namespace	valor de ||| function	count=2
function_name	una lista ||| enchant broker list	count=1
arg_pair	el dominio actual para ||| string $domain	count=1
arg_pair	de mensaje del archivo ||| mixed $filename	count=1
function_name	establecer los ||| ncurses color set	count=1
function_name	puntos de acceso calificadores ||| conf	count=1
function_name	de la puesta ||| date sunset	count=1
function_name	siguiente entero mayor para ||| trader ceil	count=1
arg_pair	objeto [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	función ps_stringwidth() excepto que ||| string geometry	count=1
function_name	este serán ignoradas ||| frequency	count=1
namespace	de a ||| function	count=2
return	caracteres que ||| string	count=1
function_name	lee la ||| read	count=2
function_name	[function_name_1] con el ||| [function_name_2] [function_name_1]	count=2
function_name	el ||| proc get status	count=2
function_name	de prioridad ||| base priority	count=1
return	entero que describe ||| int	count=1
function_name	representación json de ||| json encode	count=1
arg_pair	a b ||| gmp $b	count=2
function_name	fila recuperada ||| sqlsrv fetch	count=1
function_name	selecciona la base de ||| mssql select db	count=1
function_name	[function_name_1] clave privada ||| [function_name_2] [function_name_1]	count=2
function_name	profundidad ||| depth	count=1
function_name	establecer el id ||| id	count=1
return	indica si ||| bool	count=4
function_name	nueva instancia de haruannotation ||| text annotation	count=1
arg_pair	globales ||| string $encoded_string	count=1
arg_pair	en ||| bool $part	count=2
namespace	objeto splfileinfo ||| splfileinfo	count=1
function_name	del objeto char ||| char	count=2
namespace	imagick para una imagen ||| imagick	count=1
namespace	sql ||| sqlite3	count=1
return	al ||| int	count=1
arg_pair	de callback ||| callable $callback	count=1
function_name	tercer parámetro de error::__construct() ||| previous	count=1
namespace	el ecm por ||| function	count=1
function_name	comporta ||| sybase pconnect	count=2
function_name	el cliente ||| client	count=2
function_name	devuelve la representación en ||| to	count=1
function_name	[function_name_1] datos en ||| [function_name_2] [function_name_1]	count=1
function_name	o odbc_exec() ||| odbc fetch	count=1
arg_pair	dada ||| resource $psdoc	count=1
arg_pair	una fuente ||| resource $p	count=1
function	[function_name_1] para un ||| [function_name_1] bytea [arg_pair_2]	count=1
function_name	función [function_name] ||| [function_name] elements by tag	count=6
return	en un archivo de ||| bool	count=2
namespace	del hash en el ||| quickhashinthash	count=1
function_name	de un string ||| ltrim	count=1
function_name	[function_name_1] del cliente ||| [function_name_1] [function_name_2]	count=1
arg_pair	capas de ||| zmqsocket $backend	count=1
function_name	memcached::touch() con la excepción ||| touch	count=1
function	[function_name_1] nombre sobre ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
return	objeto en ||| string	count=1
function_name	de control ||| control point callback	count=1
function_name	[function_name_1] punto ||| [function_name_1] white [function_name_2]	count=1
arg_pair	data especificada ||| string $data	count=1
namespace	colección ||| mongocollection	count=1
function_name	de la relación ||| dbplus	count=2
function_name	la descripción de ||| image surface get	count=1
function_name	versión ||| money format	count=1
arg_pair	hacen referencia ||| string $fk_owner	count=1
namespace	de la pila como ||| throwable	count=1
arg_pair	assoc_array ||| array $assoc_array int $options	count=2
arg_pair	subject coincidencias [arg_pair_2] ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=2
function_name	generador de trozos ||| highlight fragmenter	count=2
function_name	indicador de posición ||| gzrewind	count=1
namespace	el array ||| splfixedarray	count=1
function_name	la firma ||| pkcs7 verify	count=1
function_name	del objeto contorneado ||| getstrokeopacity	count=1
function_name	cada archivo codificado mediante ||| uudecode all	count=1
return	api graphicsmagick como ||| string	count=1
namespace	a todos los servidores ||| gearmanclient	count=1
arg_pair	que deberían ser incluidos ||| string $field_override	count=1
function_name	último error que ||| last	count=1
arg_pair	ya se haya ejecutado ||| int $field_number	count=1
arg_pair	key y almacena ||| mixed $key int $padding	count=1
arg_pair	actual de req_handle por ||| resource $req_identifier	count=1
function_name	extensiones ||| autoload extensions	count=2
function_name	breaker parameter ||| set	count=1
function_name	una imagen de similitud ||| image	count=1
return	en el directorio ||| bool	count=1
function_name	envía información de estado ||| send status	count=1
namespace	línea ||| harufont	count=1
function	acción [arg_pair_2] ||| submit form [function_name_1] resource $fdf_document [arg_pair_2] int	count=2
return	sobre las ||| zmqsocket	count=1
namespace	define la ||| harudestination	count=1
return	unrar encuentre un error ||| void	count=1
function_name	el número ||| count	count=2
function_name	código [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	final de pajar ||| string $haystack	count=2
function_name	de pascua ||| easter	count=1
function_name	[function_name] stream) ||| [function_name] enc is block	count=3
function_name	nodo elemento con ||| element ns	count=1
function_name	lee datos clob ||| read clob	count=1
function	columna [arg_pair_2] ||| [function_name_1] scale [arg_pair_2]	count=2
arg_pair	área rectangular ||| float $llx float $lly	count=1
return	con dos ||| resource	count=1
return	que son similares ||| mongocursor	count=1
arg_pair	a sybase_connect() ||| string $charset	count=1
namespace	de proceso ||| function	count=1
function_name	el punto primario rojo ||| getimageredprimary	count=1
function_name	a este ||| add kernel	count=1
arg_pair	prepara para una solicitud ||| resource $id string $type	count=1
arg_pair	una colección ||| array $docs	count=1
return	un array que ||| array	count=1
function_name	o no predeterminada ||| default	count=1
function_name	rebobina la ||| reset	count=1
arg_pair	datos del acs ||| string $machine	count=1
function_name	el phar ||| map phar	count=1
return	convierte en un ||| bool	count=1
namespace	objeto textflow [namespace] añade ||| [namespace]	count=1
function_name	el de estilo de ||| set	count=1
function_name	país correspondiente ||| country name by	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] size [arg_pair_2]	count=3
arg_pair	desde str en el ||| string $str	count=1
function_name	rellena ||| pdf fill	count=1
function_name	de mensaje ||| msgno	count=1
function_name	una única función ||| add	count=1
arg_pair	array1 que ||| array $array2	count=1
function_name	desencripta usando ||| openssl decrypt	count=1
function_name	el tamaño de ||| lob2 size	count=1
function_name	errores libxml ||| libxml	count=1
function_name	pid del servidor ||| pid	count=1
function_name	función devuelve el conjunto ||| get	count=1
function	compara [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	tantos documentos como este ||| frequency	count=1
arg_pair	result ||| resource $result int $index	count=1
function_name	las candidatas antes de ||| get cascade	count=2
function_name	trabajo para ||| job	count=1
function_name	establece ||| set read buffer	count=2
function_name	[function_name_1] rango ||| [function_name_2] [function_name_1]	count=2
function_name	las banderas del campo ||| field flags	count=1
arg_pair	key corresponda a ||| string $key mixed $value	count=1
namespace	de ||| splfixedarray	count=1
return	actual del puntero ||| bool	count=1
function_name	centrada de un ||| centered	count=1
arg_pair	html ||| int $length	count=1
function_name	el usuario) ||| restore error	count=1
function_name	coseno ||| cos	count=2
function_name	[function_name_1] los hijos ||| [function_name_1] [function_name_2]	count=1
return	e y ||| array	count=1
function	los [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	es ||| function	count=1
arg_pair	modo ||| int $mode	count=1
arg_pair	analizar ||| string $source string $encoding	count=1
function_name	esta ||| ps	count=1
namespace	de ||| oauth	count=1
arg_pair	de los ||| int $linebreak array $callbacks	count=1
arg_pair	por cada señal ||| int $signal	count=1
function_name	un documento xml ||| xml	count=1
function_name	la ||| is	count=1
function_name	las flags establecidas en ||| flags	count=1
function_name	advertencias y ||| exceptions	count=1
function_name	puedan aplicarse a una ||| kernel	count=1
function_name	extensión phar ||| phar filename	count=1
function_name	devuelve un identificador único ||| object hash	count=1
namespace	invertidas antes de ||| function	count=1
arg_pair	el específico link_identifier ||| resource $link_identifier	count=1
function_name	[function_name_1] segundo plano ||| [function_name_1] [function_name_2]	count=4
arg_pair	un ancho especificado ||| float $width	count=1
function_name	[function_name_1] al primer ||| [function_name_1] [function_name_2]	count=1
function_name	vincula una ||| bind	count=1
function_name	en la relación ||| dbplus	count=1
arg_pair	actual indicando ||| string $details	count=1
arg_pair	acepta uno dos o ||| float $number	count=1
arg_pair	dada de un fichero ||| int $srcx	count=1
return	devuelve un array con ||| array	count=2
function_name	la última modificación ||| ftp mdtm	count=1
function_name	actual de ||| zip	count=1
arg_pair	e inicializa sus parámetros ||| int $to_neuron	count=1
function_name	exporta ||| openssl pkey export	count=2
function_name	a facet.limit ||| set facet limit	count=1
function_name	desactiva el canal ||| channel	count=1
arg_pair	etc..., a thickness ||| resource $image int $thickness	count=1
function_name	descripción de la función ||| cairo ps level	count=1
function_name	una matriz que contiene ||| field names	count=1
function_name	devuelve el número ||| msgno	count=1
function_name	la intersección ||| uintersect assoc	count=1
return	una ||| mongocursor	count=1
function_name	de consulta de la ||| query	count=1
return	es true ||| void	count=1
function_name	se le ||| count	count=1
function_name	cubrid_lob2_new() u ||| cubrid lob2 close	count=1
function_name	uso de ||| scache meminfo	count=1
return	método ||| int	count=1
arg_pair	objeto watcher evperiodic y ||| callable $callback	count=1
function_name	de cargar entidades ||| disable entity loader	count=1
function_name	máximo de caracteres ||| max	count=2
function_name	el número ||| imap msgno	count=1
arg_pair	es una manera alternativa ||| mixed $value	count=1
function_name	consulta la publicación ||| get ap	count=1
function_name	la carga ||| workload	count=1
function_name	en la que las ||| min doc	count=1
arg_pair	mensaje del archivo ||| mixed $filename	count=1
arg_pair	genera un ||| array $configargs int $serial	count=1
function_name	tipo de ||| set image type	count=1
function_name	la descripción de la ||| image surface get	count=1
function_name	de las diferentes opciones ||| options	count=1
function_name	bits mas significantes hasta ||| scan1	count=1
arg_pair	coincidan más estrechamente con ||| resource $image2	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] query [function_name_2]	count=3
namespace	compatibilidad que ||| function	count=1
function_name	estilo de entrecomillado apropiado ||| quote	count=1
function_name	carp::cluck de ||| clunk	count=1
return	posee una característica conocia ||| mongocursor	count=1
return	en un blanco ||| bool	count=1
arg_pair	en blanco u ||| string $str	count=1
function_name	devuelve true si ||| is	count=1
return	actual usando la ||| bool	count=1
function_name	que no ||| min	count=1
function_name	en por lo menos ||| doc frequency	count=1
function_name	[function_name_1] [function_name_2] una llamada ||| [function_name_2] [function_name_1]	count=6
return	no una ||| bool	count=1
function_name	de mensaje ||| construct	count=1
return	el puntero ||| int	count=1
function_name	obtiene ||| curl getinfo	count=2
function_name	transformación actual de ||| trans matrix	count=1
function_name	el iterador a ||| iterator	count=1
function	[function_name_1] rgb especificado ||| [arg_pair_2] [function_name_1]	count=1
function_name	de filas que ||| set start	count=1
function_name	utf-8 ||| utf8	count=4
function_name	[function_name_1] de grupos ||| [function_name_2] [function_name_1]	count=1
arg_pair	nombre distinguido ||| array $dn	count=1
return	ha ||| int	count=1
function_name	retorna el nombre de ||| function name	count=1
function_name	devolverá una lista ||| list	count=1
return	afecta ||| int	count=1
function	[function_name_1] del imagick ||| [function_name_1] [arg_pair_2]	count=1
function_name	a la representación que ||| to string	count=1
function	pascua para [arg_pair_2] ||| [function_name_1] days [arg_pair_2]	count=2
function_name	de cabecera ||| mimeheader	count=1
function_name	[function_name] generado ||| mysqli insert [function_name]	count=2
namespace	es ||| domnode	count=1
arg_pair	antes de los ||| string $str	count=1
arg_pair	cada señal ||| resource $cpoint int $signal	count=1
arg_pair	almacenados ||| string $procedure	count=1
arg_pair	el texto ||| string $text float $word_space	count=1
return	una ||| string	count=31
function	primera tupla [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	conexiones de atajo empleando ||| shortcut array	count=1
function_name	realiza una operación substr() ||| substr	count=1
function_name	y salidas para ||| set	count=1
function_name	blanco de ||| image white	count=1
namespace	y que ||| function	count=1
function_name	de mysql asociado ||| mysql data	count=2
function_name	de prioridad de los ||| base priority	count=1
function_name	una operación or ||| variant or	count=1
arg_pair	in_charset ||| string $in_charset	count=1
arg_pair	desde un fichero de ||| string $filename	count=2
arg_pair	arrays compara la información ||| array $array1 array $array2	count=1
function_name	sarprop ||| sarprop step	count=2
function_name	[function_name_1] comenzar ||| [function_name_2] [function_name_1]	count=3
function_name	la prueba probabilística ||| prob prime	count=1
function_name	fgets() excepto ||| fgetss	count=1
arg_pair	efecto de botón tridimensional ||| int $height	count=1
function_name	[function_name_1] unos ||| [function_name_2] [function_name_1]	count=8
function_name	indicado mediante ||| crack	count=1
function_name	de dsn ||| data source	count=1
namespace	disponibles después de llamarla ||| function	count=1
arg_pair	verifica el [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	opacidad de los ||| gmagickdraw	count=1
namespace	salida ||| splfileobject	count=1
arg_pair	fuentes font ||| int $font	count=1
namespace	creada por funciones como ||| function	count=1
arg_pair	una nueva ||| float $height	count=1
arg_pair	lee ||| resource $handle int $length	count=1
return	uuencode ||| array	count=1
namespace	infiniteiterator ||| infiniteiterator	count=1
function_name	ejecuta ||| execute	count=1
arg_pair	php a un ||| int $data_type int $length	count=1
function_name	campo de una consulta ||| ibase field	count=1
function_name	establece el tamaño en ||| set	count=1
function_name	interoperabilidad stubs específicas ||| stub	count=1
arg_pair	imágenes de color verdadero ||| bool $blendmode	count=1
arg_pair	codificación ||| string $encoding	count=2
function_name	el uid del ||| uid	count=1
namespace	blanco ||| function	count=1
function_name	recodificación request ||| recode string	count=1
arg_pair	con un algoritmo ||| float $beta	count=1
function_name	notifica ||| notify	count=1
function_name	parámetros ||| image	count=1
return	tailable ||| mongocursor	count=1
function_name	el valor ||| value	count=5
arg_pair	conexión de [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	miniatura ||| thumbnail	count=1
arg_pair	mensaje ||| resource $imap_stream	count=1
function_name	de tidy a sus ||| tidy	count=1
function_name	demás funciones de sisitema ||| wrapper	count=1
arg_pair	bcc ||| string $bcc string $rpath	count=1
function_name	número de secuencia de ||| imap	count=1
return	un valor ||| mixed	count=1
function_name	virtual actual donde se ||| dbplus	count=1
function_name	[function_name_1] tipo de ||| [function_name_2] [function_name_1]	count=2
function_name	de ||| default	count=1
namespace	[namespace] filename ||| [namespace]	count=3
return	[return] borde ||| [return]	count=3
arg_pair	una base de ||| string $database	count=1
function_name	el enlace [function_name] tiene ||| [function_name]	count=1
function_name	devuelve la metainformación ||| has metadata	count=1
function_name	x509 desde la csr ||| csr sign	count=1
function_name	documentos como ||| mlt min	count=1
function_name	para convertir un ||| convert to	count=1
function_name	firma digital ||| verify	count=1
function_name	procesa una respuesta ||| handle response	count=1
function_name	al número de campo ||| mssql field seek	count=1
arg_pair	ésta es una ||| string $offset string $value	count=1
arg_pair	botón ||| int $width int $height	count=1
namespace	el puntero ||| function	count=1
function_name	creó después de aplicar ||| bdiff	count=1
return	entero y ||| array	count=1
function_name	desencripta ||| mcrypt decrypt	count=2
function_name	varios componentes al formulario ||| components	count=1
function_name	de haruannotation ||| urlannotation	count=1
function_name	llama a ||| call user func	count=1
function_name	el parámetro ||| addcslashes	count=1
namespace	de certificado x509 desde ||| function	count=1
return	solo que ||| void	count=1
return	en el registro ||| bool	count=1
function_name	[function_name_1] el color ||| [function_name_2] [function_name_1]	count=4
function_name	única ||| kernel	count=1
arg_pair	[arg_pair] tabla html ||| [arg_pair]	count=2
function	de [arg_pair_2] ||| [function_name_1] filter [arg_pair_2]	count=1
function_name	un número es ||| prob prime	count=1
function_name	contraseña ||| password change	count=2
function_name	[function_name_1] asociativo ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve la zona horaria ||| geoip time zone by country and	count=1
function_name	casillas de ||| newt checkbox tree find item	count=1
return	por usuario y las ||| array	count=1
function_name	tantos documentos como ||| set mlt	count=1
return	la información sobre el ||| object	count=1
function_name	esta ||| memory	count=1
function_name	última operación de ||| errno	count=1
return	utilizarse mcrypt_generic_deinit() en lugar ||| bool	count=1
function_name	de primer ||| color set	count=1
function_name	en la configuración del ||| tidy config	count=1
arg_pair	comporta de forma parecida ||| string $servername	count=1
function_name	por el ||| function	count=1
arg_pair	es ||| gmp $a	count=1
namespace	yar_client hacia ||| yar_client	count=1
namespace	fichero o directorio ||| function	count=1
namespace	única función de ||| imagickkernel	count=1
function_name	la actual ||| current	count=1
function_name	usando ingres_query() ||| ingres	count=1
arg_pair	el directorio de volcado ||| int $debug_level string $dump_directory	count=1
function_name	de emitir advertencias ||| using	count=1
function_name	copia un recurso de ||| copy	count=1
arg_pair	ømq ||| zmqsocket $backend	count=1
namespace	al igual que ||| directory	count=1
function_name	de campo ||| mssql field	count=1
function_name	transacción ||| fbsql commit	count=2
function	[function_name_1] secreto para ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	crea ||| int $height	count=1
return	en lugar ||| void	count=1
function_name	inicialización iv ||| iv	count=1
function_name	archivo dado y ||| uudecode	count=1
function_name	[function_name_1] de nombres ||| [function_name_2] [function_name_1]	count=4
function_name	xml ||| types	count=1
function_name	para la primera ||| first	count=2
return	de envío ||| mixed	count=1
return	los ficheros dados en ||| bool	count=1
namespace	judy ||| judy	count=1
function_name	mensaje y ||| construct	count=1
function_name	[function_name_1] fecha de ||| [function_name_1] [function_name_2]	count=3
function_name	una lista de los ||| list dicts	count=1
function_name	elimina todos los ||| delete by queries	count=1
function_name	establece la ||| ms set	count=1
return	valor numérico del mensaje ||| int	count=1
namespace	un string con ||| function	count=1
function_name	mime kopfzeile en el ||| mime	count=1
arg_pair	un objeto [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=6
namespace	y imagepolygon() cuando se ||| function	count=1
return	devuelve [return] lista ||| [return]	count=1
function_name	de nombres ||| namespace	count=3
function_name	informix de cada ||| ifx fieldproperties	count=1
function_name	seguimiento ||| await	count=1
function_name	breaker ||| breaker	count=1
function_name	fichero de esquema ||| add types	count=1
function_name	de botón ||| raiseimage	count=1
namespace	hash existente en ||| quickhashinthash	count=1
arg_pair	cadena de formato ||| string $format	count=1
function_name	en cascada es ||| get cascade	count=1
function_name	le permite al entrenamiento ||| fann	count=1
arg_pair	una instancia ||| resource $conn_identifier string $oid	count=1
function_name	otro núcleo ||| kernel	count=1
function_name	donde ||| auth type	count=1
function_name	tarea y ||| do	count=1
function_name	la biblioteca ||| exceptions	count=1
function_name	descripción de la función ||| cairo font	count=1
function_name	el número de argumentos ||| num args	count=1
function_name	y extrae cada archivo ||| mailparse uudecode all	count=1
function_name	el entrenamiento ||| train stop	count=1
function_name	[function_name_1] tamaño asociado ||| [function_name_2] [function_name_1]	count=2
arg_pair	enviar emails ||| string $additional_headers	count=1
function_name	la apariencia ||| set	count=1
arg_pair	por el objeto gmagickpixel ||| gmagickpixel $color	count=1
function	[function_name_1] el texto ||| [arg_pair_2] [function_name_1]	count=5
return	un mensaje ||| string	count=1
function_name	disponibles después de ||| source	count=1
function_name	de cargar entidades externas ||| libxml disable entity loader	count=1
function_name	la base de datos ||| db	count=2
function_name	excepto que fgetss() ||| fgetss	count=1
function_name	imágenes en una ||| images	count=1
return	mientras está ||| bool	count=1
namespace	menos ||| solrquery	count=1
return	los perfiles del ||| float	count=1
return	con el valor ||| string	count=1
return	es el ||| bool	count=1
return	de escritura [return] lote ||| [return]	count=1
function_name	su nombre y ||| from name	count=1
arg_pair	dispositivos ||| zmqsocket $frontend	count=1
return	avanza la ||| void	count=1
return	el carácter especificado ||| string	count=1
function	[function_name_1] [arg_pair_2] como ||| [function_name_1] [arg_pair_2]	count=2
function_name	el número de bits ||| bits	count=1
return	encuentre un error ||| void	count=1
function_name	devuelve el ancho ||| stringwidth	count=1
function_name	inodo para ||| inode	count=1
arg_pair	divide ||| int $flags	count=1
function_name	la ||| prob prime	count=4
function_name	un caracter ||| chr	count=1
return	una única función ||| void	count=1
function_name	cuantía de imagick ||| quantum	count=1
function_name	como este serán ||| mlt	count=1
namespace	a una única función ||| imagickkernel	count=1
function_name	establece el número ||| set cascade num	count=1
function_name	descripción de ||| cairo font options set subpixel order	count=1
function_name	ldap enviando el control ||| ldap control	count=1
arg_pair	datagrama ||| float $timeout	count=1
function_name	array ||| array	count=6
arg_pair	una nueva instancia de ||| array $rectangle	count=2
function_name	las salidas de ||| output	count=1
function_name	la descripción de ||| cairo ps surface restrict to level	count=1
function_name	atributo name como ||| attribute	count=1
namespace	sesiones y devuelve ||| sessionhandlerinterface	count=1
function_name	blob/clob de ||| cubrid lob export	count=1
function_name	este ||| set mlt min doc	count=1
function	[function_name_1] un año ||| [function_name_1] days [arg_pair_2]	count=1
function_name	datos mysql ||| mysql	count=1
function_name	este serán ||| set	count=1
function_name	error ||| bzerrstr	count=2
function_name	curl manteniendo [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	el propietario ||| eio fchown	count=1
arg_pair	en conexiones curl_multi ||| resource $mh	count=1
function_name	da la marca de ||| idate	count=1
function_name	lista de ||| memory image	count=1
function_name	del proceso ||| setproctitle	count=1
namespace	dos líneas se unen ||| function	count=1
return	del tanto por ||| int	count=2
function_name	la descripción ||| ps surface restrict to level	count=1
function_name	descenso vertical de la ||| descent	count=1
function_name	[function_name_1] objeto documento ||| [function_name_2] [function_name_1]	count=1
function_name	lista ||| mcrypt list	count=1
arg_pair	desde un fichero ||| resource $font_index	count=1
function_name	para la tarea ||| do	count=1
arg_pair	de certificado) basada ||| array $configargs array $extraattribs	count=1
namespace	cadena de ||| function	count=2
namespace	que existe ||| function	count=1
function_name	fila insertada o ||| insert	count=1
arg_pair	no existe todavía en ||| int $flag int $expire	count=1
arg_pair	pequeño que podría ||| float $rprop_delta_min	count=1
function_name	sql ||| mssql	count=1
arg_pair	delante ||| int $result_type	count=1
function_name	sobre las capas de ||| construct	count=1
arg_pair	base ||| string $database	count=2
return	archivo ||| array	count=3
namespace	retorna el tiempo ||| gearmanclient	count=1
namespace	para el ||| function	count=1
function_name	prueba probabilística de ||| prob	count=1
namespace	clave usando una ||| arrayiterator	count=1
arg_pair	de arrays con ||| array $array1	count=1
function_name	disponible la lista ||| ps open	count=1
arg_pair	índice ||| int $index	count=1
namespace	o ambos ||| function	count=1
function_name	peso ||| weight	count=1
function_name	se ||| ps open	count=1
namespace	hacer de intermediarios ||| zmqdevice	count=1
function_name	se llega recursivamente al ||| end children	count=1
arg_pair	y negro ||| float $blackpoint	count=1
function_name	representación que ||| to	count=1
function_name	sentencia sql sqlite ||| sqlite escape	count=2
function_name	establecer los colores de ||| color set	count=1
arg_pair	crea ||| int $width	count=1
function_name	devuelve el número ||| param count	count=1
arg_pair	formatear y crear un ||| resource $pdfdoc	count=1
return	archivo dado y extrae ||| array	count=1
namespace	que describe el ||| ev	count=1
namespace	del estado de ||| function	count=3
arg_pair	valor de retorno de ||| mixed $value	count=1
function_name	de memcached::prepend() con la ||| prepend by key	count=1
function_name	máximo de trozos remarcados ||| highlight snippets	count=1
function_name	de la base ||| db	count=1
function_name	la precisión ||| field precision	count=1
function_name	la consulta siguiente ||| cubrid next result	count=1
namespace	construye un nuevo limititerator ||| limititerator	count=1
return	la opacidad de los ||| float	count=1
arg_pair	[arg_pair_1] base ||| [arg_pair_1] string $user [arg_pair_2]	count=2
return	escribe el ||| int	count=1
function_name	si ||| gmp prob prime	count=2
function_name	pendiente [function_name] para ||| fann set [function_name] steepness	count=1
return	de una ||| int	count=1
function_name	[function_name_1] [function_name_2] píxel ||| [function_name_1] [function_name_2] quantum	count=2
function_name	del campo ||| field	count=14
arg_pair	en una y devuelve ||| string $error	count=1
return	índice ||| int	count=1
function_name	documento pdi de ||| pdi	count=1
function_name	almacena datos [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] una ||| [arg_pair_2] [function_name_1]	count=21
arg_pair	desde str ||| mixed $fd string $str	count=1
return	secuencia de mensaje para ||| int	count=1
function_name	deberían ser devueltas ||| limit	count=1
arg_pair	str de acuerdo a ||| string $str string $charset	count=1
function_name	consulta ||| filter query	count=2
function_name	la función cubrid_error_code() ||| code	count=1
namespace	imagen desde un nombre ||| gmagick	count=2
return	inicio ||| string	count=1
namespace	extensión ||| reflectionextension	count=2
function_name	o una dirección ||| geoip	count=1
function_name	única [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	dado y escribe ||| bcompiler write	count=1
function_name	closedir() solo que ||| close	count=1
function_name	la imagen ||| set	count=1
function_name	devuelve una matriz ||| get field	count=1
function_name	cookie de sesión ||| session get cookie	count=2
arg_pair	llave keydata y retorna ||| string $keydata	count=1
function_name	documentos como este serán ||| mlt min doc frequency	count=1
function_name	parámetros de ||| params	count=1
function_name	por ||| set mlt min doc	count=1
namespace	fuente ||| harufont	count=2
function_name	un ||| chr	count=1
function_name	de conectarla ||| pg ping	count=1
function_name	el phar cuando sea ||| map phar	count=1
return	utilizando ||| string	count=1
return	de mensaje para el ||| int	count=1
arg_pair	dado en signed_text y ||| resource $identifier string $signed_text	count=1
function_name	la frecuencia en ||| set mlt	count=1
function_name	oposición a estar ||| internal	count=1
function	la desencripta [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	excepción de ||| void	count=1
namespace	de host o a ||| function	count=1
arg_pair	de una base de ||| resource $pxdoc	count=1
function_name	datos lob de tamaño ||| db2 lob read	count=1
function_name	encabezados a ||| soap headers	count=1
arg_pair	las propiedades correspondientes ||| array $ctorparams	count=1
function_name	crea un nuevo ||| create listen	count=1
arg_pair	establece a 0 index ||| int $index	count=1
arg_pair	una tarea de ||| mixed $context string $unique	count=3
function_name	los pares ||| pspell config save repl	count=1
function_name	las cabeceras de todos ||| headers	count=1
function_name	[function_name_1] el prefijo ||| [function_name_2] [function_name_1]	count=1
arg_pair	usado por la conexión ||| resource $link_identifier	count=1
arg_pair	el oid ||| string $oid	count=1
arg_pair	[arg_pair_1] tiempo ||| [arg_pair_2] int $retry_interval [arg_pair_1]	count=1
return	contenidos en ||| bool	count=1
function_name	de ||| close	count=1
arg_pair	objeto samconnection conecta ||| array $properties	count=1
arg_pair	local ||| string $local_file int $mode	count=2
function_name	retorna el nombre largo ||| id3 get frame long name	count=1
function_name	fila en ||| fetch	count=1
function_name	extraidas ||| ifx num	count=1
arg_pair	una ||| mixed $context string $unique	count=3
namespace	el eleménto ||| xmlreader	count=1
arg_pair	conexión ||| resource $link_identifier	count=3
function_name	persistente ||| pconnect	count=1
function_name	control de ||| gupnp control point callback	count=1
namespace	de compatibilidad que ||| function	count=1
function_name	1.0 ||| hsl	count=1
return	la posición actual ||| bool	count=1
namespace	para el ||| gearmanclient	count=1
function_name	más imágenes en ||| images	count=1
namespace	igual a false ||| function	count=1
function_name	entidades ||| external entity	count=1
function_name	al principio ||| rewind	count=1
function_name	la de memcached::touch() ||| touch by	count=1
function_name	rutina ||| get stub	count=1
function_name	la lista de parámetros ||| ps open memory image	count=1
namespace	que puede ||| function	count=1
function_name	que no ||| set mlt min	count=1
namespace	a la función devolviendo ||| pdo	count=1
return	en ejecución ||| bool	count=1
namespace	[namespace] no ejecutables ||| [namespace]	count=2
function_name	cierra ||| yaz close	count=1
function_name	petición ||| nsapi	count=1
function_name	tamaño actual de ||| zip entry	count=1
function_name	la base de datos ||| sybase select db	count=1
function_name	rellena y [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	la frecuencia bajo ||| frequency	count=1
function_name	[function_name] ejecutará al ||| [function_name] submit form	count=2
function	[function_name_1] parámetro data ||| [function_name_1] [arg_pair_2]	count=1
function_name	entregada ||| ctype	count=1
namespace	segundos ||| function	count=1
function_name	de tendencias ||| fann get bias	count=1
function_name	el último error ||| error	count=4
return	y la desviación estándar ||| array	count=1
namespace	resultado a ||| splfileobject	count=1
function_name	color de fondo de ||| background color	count=1
arg_pair	variable_key y libera ||| int $variable_key	count=1
function_name	devuelve la representación ||| serialize	count=1
arg_pair	buzón especificado por mailbox ||| int $options	count=1
function_name	formateador de la ||| formatter	count=1
arg_pair	en signed_text y retorna ||| resource $identifier string $signed_text	count=1
function_name	sets user ||| set user	count=1
function_name	rellena la ||| fill stroke	count=1
function	[function_name_1] relation ||| [arg_pair_2] [function_name_1]	count=10
function_name	función cubrid_lob2_tell() se usa ||| cubrid lob2 tell	count=1
function_name	largo para un ||| frame long	count=1
namespace	el búfer de ||| splfileobject	count=1
function_name	muestreo horizontal y vertical ||| sampling factors	count=1
function_name	recorte de ||| clip	count=2
function_name	de configuración interna especificada ||| iconv	count=1
function_name	del apuntador ||| mailparse uudecode all	count=1
function_name	imprime el glifo ||| ps symbol	count=1
function_name	una exclución lógica ||| variant xor	count=1
function_name	descripción de ||| cairo scaled font	count=5
function_name	[function_name_1] último error ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve el formateador ||| get highlight formatter	count=1
arg_pair	para un ||| resource $connection string $data	count=1
function_name	el valor de ||| bind value	count=1
namespace	indica si el puntero ||| oci-lob	count=1
arg_pair	un nuevo ||| mixed $value	count=1
arg_pair	una variable ||| string $key	count=2
function_name	es el espacio ||| namespace	count=1
function_name	escritura en la relación ||| dbplus	count=1
namespace	intermediarios de direcciones servicios ||| zmqdevice	count=1
function_name	[function_name_1] id ||| [function_name_2] [function_name_1]	count=5
return	un fichero regular ||| resource	count=1
namespace	la sentencia ||| sqlite3	count=1
function_name	imagen raw ||| raw	count=1
return	un das xml ||| void	count=1
function_name	la ||| open memory	count=1
arg_pair	un assoc_array en valores ||| int $options	count=1
arg_pair	a**r)/gamma r * x** ||| float $a float $r	count=1
function	la columna [arg_pair_2] ||| [function_name_1] scale [arg_pair_2]	count=2
function_name	para que la clave ||| set by	count=1
function_name	una equivalencia ||| eqv	count=1
arg_pair	función cubrid_schema() ||| resource $conn_identifier int $schema_type	count=1
function_name	de prioridad de ||| base priority	count=1
function_name	de épocas ||| min cand epochs	count=1
function_name	distribución de [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	array asociativo usando ||| array	count=1
function_name	la lista de ||| odbc	count=1
return	de conjunto de ||| sqlite3result	count=1
namespace	obtiene la ||| function	count=1
function_name	devuelve la respuesta ||| response	count=1
arg_pair	formulario dado por form ||| resource $component	count=1
return	para tomar ||| string	count=1
arg_pair	que las retrollamadas ||| array $patterns_and_callbacks	count=1
function_name	advertencia esta ||| memory image	count=1
function_name	emitir advertencias y ||| set using	count=1
function_name	tipo ||| set	count=1
namespace	disponible la ||| function	count=1
function_name	número de columna actual ||| current column	count=1
function	abre [arg_pair_2] ||| [function_name_1] pdi document [arg_pair_2]	count=1
function_name	formatos de imagen ||| image	count=1
namespace	diccionario indicado mediante ||| function	count=1
namespace	de los caracteres ||| function	count=1
return	retorna ||| int	count=1
arg_pair	datos disponible ||| int $row int $offset	count=1
arg_pair	un enlace web a ||| resource $pdfdoc	count=1
return	desde el formulario en ||| bool	count=1
function_name	interoperabilidad ||| create default stub	count=2
function_name	complemento ||| mysqlnd	count=3
namespace	por funciones ||| function	count=1
arg_pair	del parámetro data ||| string $data	count=1
namespace	define la forma ||| harupage	count=1
namespace	carga un segundo o ||| sdo_das_xml	count=1
function_name	de transparencia de ||| matte floodfill	count=1
namespace	almacena un [namespace] un ||| [namespace]	count=1
arg_pair	la propiedad hwnd ||| int $client_area	count=1
function_name	[function_name_1] fdf de ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] geoip ||| [function_name_2] [function_name_1]	count=8
arg_pair	operaciones update ||| mongocollection $collection array $write_options	count=1
function_name	agregar parámetros ||| add required parameter	count=1
arg_pair	el valor de ||| mixed $bordercolor	count=1
return	esta función [return] las ||| [return]	count=1
function	[function_name_1] una ||| [function_name_1] [arg_pair_2]	count=10
function_name	devuelve los [function_name_2] ||| [function_name_1] last request [function_name_2]	count=1
function	[function_name_1] específico link_identifier ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	[arg_pair_1] nombres de ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	por las funciones socket_create() ||| int $length	count=1
arg_pair	de n ||| gmp $n	count=1
namespace	estar entre ||| imagickpixel	count=1
function_name	primer ||| ncurses color set	count=2
function_name	estado del servidor ||| task status	count=1
function_name	usa ||| gmp prob prime	count=2
function_name	palabras ||| set	count=1
function_name	privada ||| x509 check private	count=1
namespace	si todavía ||| mongocursor	count=1
function_name	comprensión ||| setswfcompression	count=1
function_name	bind_textdomain_codeset() ||| bind textdomain codeset	count=2
namespace	este método no ||| mongocursor	count=1
namespace	abierta con ibase_connect() o ||| function	count=1
function_name	número de filas eliminadas ||| db2 num rows	count=1
arg_pair	inmediatemente después ||| string $opened_path	count=1
function_name	una columna devuelta ||| db2	count=1
function_name	[function_name_1] azul de ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] paginación ||| [function_name_1] [function_name_2]	count=7
return	mensaje y socket. ||| zmqsocket	count=1
function_name	almaceén ||| reset	count=1
namespace	de segundos ||| function	count=1
function	[function_name_1] al archivo ||| [function_name_1] [arg_pair_2]	count=1
function_name	control de ||| control point callback	count=1
return	usa la ||| int	count=1
function_name	[function_name_1] pulse ||| [function_name_2] [function_name_1]	count=3
arg_pair	stack es true ||| string $stack string $offset	count=1
function_name	uno ||| number format	count=2
arg_pair	y asocia ||| int $cols	count=1
function_name	modo de escritura ||| mode	count=1
function_name	porción ||| strrchr	count=2
arg_pair	devolverá el hash de ||| string $str	count=1
function_name	los ||| color set	count=2
arg_pair	especifica ninguna ||| string $collection mixed $id	count=1
function_name	devuelve ||| get highlight use	count=1
function_name	del servidor ||| set server	count=1
function_name	evento [function_name_2] ||| [function_name_2] next [function_name_1]	count=3
function_name	la descripción ||| surface create	count=1
function_name	serán ignoradas ||| mlt	count=2
function_name	excepción no ||| exception	count=1
function_name	[function_name_1] verificación ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] candidate [function_name_2]	count=12
function_name	extrae cada archivo codificado ||| mailparse	count=1
arg_pair	función mysql_field_name() ||| resource $result int $field_offset	count=1
return	devuelve la opacidad ||| float	count=1
function_name	devuelve ||| zip entry filesize	count=2
arg_pair	el oid ||| resource $conn_identifier string $oid	count=1
namespace	que ya ha ||| sdo_das_xml	count=1
function_name	error [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	y socket. ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	filas en el ||| sybase num rows	count=1
namespace	archivos tar ||| phardata	count=1
namespace	disponibles en ||| function	count=1
return	en esas coordenadas ||| bool	count=1
function_name	control ||| gupnp control point	count=1
return	de trabajo para ||| bool	count=1
arg_pair	a un ||| int $data_type int $length	count=1
function_name	anterior ||| prev	count=3
function_name	exacto o la alternativa ||| imagecolorresolvealpha	count=1
function_name	devuelve el nombre ||| get host	count=1
arg_pair	probabilística ||| gmp $a	count=1
function_name	de la extensión a ||| extension	count=1
function_name	en la ||| set mlt min doc frequency	count=1
arg_pair	y negro ||| float $blackpoint float $gamma	count=1
function_name	grises con un ||| embossimage	count=1
function_name	con los nombres de ||| names	count=1
function_name	el nombre del ||| name by name	count=1
arg_pair	forma ||| string $servername string $username	count=1
function_name	crea un documento xml ||| xml	count=1
function_name	formato de archivo pkcs#12 ||| openssl pkcs12 export	count=1
function_name	función usa ||| prime	count=1
function_name	devuelve el valor del ||| get	count=2
namespace	los ||| gmagickdraw	count=1
namespace	el objeto dado por ||| function	count=1
function_name	jerarquía entera de objetos ||| checkout	count=1
arg_pair	de fichero fieldname ||| string $fieldname	count=1
arg_pair	recursivamente path1 [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	registrados disponibles ||| get wrappers	count=1
function_name	código de error correspondiente ||| errcode	count=1
namespace	de ||| mongocursor	count=3
function_name	si un número ||| prob	count=1
function_name	mensaje para ||| msgno	count=1
arg_pair	conexión al servidor mysql ||| mysqlnd_connection $connection	count=1
arg_pair	según la directiva whence ||| int $pri	count=1
arg_pair	de needle ||| string $haystack mixed $needle	count=1
arg_pair	ésta es una implementación ||| string $value	count=1
arg_pair	de pajar incluyendo ||| string $haystack	count=1
function_name	devuelve la ||| get temp	count=1
function_name	la imagen ||| interlace scheme	count=1
namespace	se necesita invocar esta ||| function	count=1
namespace	de error que describe ||| function	count=1
arg_pair	una variable en caché ||| string $key	count=1
return	de ||| float	count=1
return	en donde se ||| bool	count=1
namespace	imagen escalando ||| gmagick	count=1
function_name	último mensaje de ||| last error	count=1
function_name	muestreo ||| sample	count=1
arg_pair	la directiva whence como ||| int $whence	count=1
function_name	sobre la etiqueta id3v1 ||| id3v1 tag	count=1
function_name	si ||| is	count=19
arg_pair	fgets() excepto ||| int $length	count=1
function_name	errores y alertas de ||| errors	count=1
function	[function_name_1] registradas ||| [arg_pair_2] [function_name_1]	count=5
function_name	dirección ipv4 del host ||| gethostbyname	count=1
arg_pair	la tabla de una ||| string $name	count=1
function_name	el semáforo pueda ser ||| sem acquire	count=1
arg_pair	más imágenes y devuelve ||| imagick $image	count=1
function_name	el argumento es true ||| set	count=1
function_name	objeto ||| get active object	count=1
function_name	reinició la pila de ||| errors	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] client [function_name_2]	count=2
namespace	hash y devuelve si ||| quickhashintstringhash	count=1
function_name	las ||| set mlt min doc	count=1
return	remoto de [return] ||| [return]	count=2
arg_pair	la class dada ||| mixed $class bool $autoload	count=3
function_name	el máximo ||| max	count=1
namespace	mongocommandcursor manualmente ya que ||| mongocommandcursor	count=1
arg_pair	píxel que coincida con ||| mixed $fill float $fuzz	count=1
function_name	los términos serán ||| mlt min	count=1
function_name	es aún válida ||| valid	count=1
function_name	clave dada ||| by key	count=1
function_name	destruir el valor ||| unset	count=1
function_name	conexión de flujo ||| stream socket client	count=1
function_name	el número ||| set start	count=1
arg_pair	ømq pueden hacer de ||| zmqsocket $backend	count=1
arg_pair	comporta de ||| string $username	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=6
namespace	quickhashstringinthash ||| quickhashstringinthash	count=1
function_name	ha ||| types	count=1
function_name	para el ||| imap msgno	count=1
function_name	y extrae cada ||| uudecode all	count=1
function_name	de definición del disco ||| load from file	count=2
arg_pair	rectángulo comenzando por las ||| int $x1	count=1
function_name	acción con parámetros al ||| proxy action	count=1
function_name	esta función devuelve ||| enc get	count=1
function_name	ya ha sido ||| add types	count=1
function_name	de una entrada de ||| entry filesize	count=1
function_name	identificador ||| oci	count=1
namespace	un phar ||| phar	count=1
arg_pair	de memcached::getmulti() con ||| string $cas_tokens int $flags	count=1
namespace	del proceso ||| function	count=1
function_name	este ||| doc	count=1
function_name	los pares ||| save repl	count=1
function_name	la versión escapada ||| cubrid real escape	count=1
function_name	clave ||| key	count=5
function_name	nombres ||| is default namespace	count=2
function_name	entonces en lugar de ||| using	count=1
namespace	conjunto ||| quickhashintset	count=3
function_name	establece el ||| set highlight	count=1
function_name	desde la ||| load	count=1
arg_pair	ya está en ejecución ||| int $code_page	count=1
function_name	[function_name] con los ||| [function_name]	count=1
return	del ||| string	count=4
function_name	apariencia de la ||| set	count=1
function_name	[function_name] de el ||| [function_name]	count=4
arg_pair	la función va aquí ||| cairosvgsurface $surface int $version	count=1
function_name	recibe ||| recv multi	count=2
function_name	añade un fichero ||| add from string	count=1
return	un servidor ||| resource	count=4
function_name	establece la opción de ||| set include path	count=1
namespace	de datos por ||| function	count=1
arg_pair	usando un ||| int $width int $height	count=1
function_name	encuentre un ||| set using	count=1
namespace	un efecto de ||| gmagick	count=1
function_name	los ||| temporary	count=1
function_name	la frecuencia ||| min doc	count=1
arg_pair	de memcached::replace() ||| int $expiration	count=1
namespace	es parte de un ||| tidynode	count=1
function_name	crea un nuevo objeto ||| modify	count=1
function_name	a ||| sybase	count=1
arg_pair	correspondientes ||| array $ctorparams int $row	count=1
arg_pair	de un ||| resource $result	count=6
function_name	se dibujan objetos rellenos ||| getfillcolor	count=1
namespace	la biblioteca sqlite3 como ||| sqlite3	count=1
arg_pair	grafemas ||| int $start	count=1
arg_pair	[arg_pair_1] rectangular ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	[function_name] serializada ||| [function_name]	count=3
function_name	instancia ||| get	count=1
namespace	una cadena que ||| gmagickdraw	count=1
arg_pair	da formato csv ||| string $enclosure	count=1
function_name	iterator [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	redefine ||| int	count=1
function_name	última sentencia insert ||| db2 last insert	count=3
function_name	arreglo ||| db2	count=1
namespace	retorna el tiempo máximo ||| gearmanclient	count=1
function_name	flujo ||| stream filter	count=1
function_name	parámetro de ||| get parameter	count=1
function_name	lote ||| batch size	count=2
function_name	[function_name_1] el buzón ||| [function_name_2] [function_name_1]	count=6
namespace	la distancia de la ||| harufont	count=1
function_name	descripción de la ||| cairo matrix rotate	count=1
function_name	la [function_name] relation ||| [function_name]	count=1
function_name	devuelve información de errores ||| errors	count=1
function_name	limpia el bit lo ||| clrbit	count=1
function_name	añade un [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	en parámetros previamente ||| bool	count=4
function_name	libera un descriptor asignado ||| oci free descriptor	count=1
arg_pair	domain ||| string $domain	count=2
function	[function_name_1] de relation ||| [function_name_1] first [arg_pair_2]	count=1
function_name	resultado ||| xdiff file bpatch	count=1
function_name	de reescritura establecidas ||| rewrite vars	count=1
return	está en activado ||| bool	count=1
function_name	autenticación donde la clave ||| svn auth get	count=1
function_name	de llamarla varias ||| source	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] last response [function_name_2]	count=4
return	núcleo («kernel») a ||| void	count=1
function_name	principio ||| rewind	count=1
namespace	los perfiles ||| gmagickdraw	count=1
arg_pair	realiza una consulta aql ||| string $query string $dbpath	count=1
function_name	hilo de ||| mysqli thread	count=1
function_name	cada capa de ||| layer array	count=1
function_name	lista [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	en fann_get_cascade_output_stagnation_epochs() durante el ||| int $max_neurons int $neurons_between_reports	count=1
arg_pair	clave ||| array $env_keys array $pub_key_ids	count=1
function_name	el uso de memoria ||| meminfo	count=1
function_name	devuelve el nombre de ||| field name	count=1
arg_pair	una tabla especificada por ||| string $table_name	count=1
arg_pair	referencia oid ||| string $mode	count=1
namespace	corresponder el [namespace] ||| [namespace]	count=6
arg_pair	las propiedades correspondientes a ||| array $ctorparams	count=1
return	dispositivos de ømq pueden ||| zmqsocket	count=1
namespace	entrada definida por ||| ziparchive	count=3
function_name	html ||| load html	count=1
arg_pair	de intermediarios ||| zmqsocket $backend	count=1
function_name	pendiente de activación para ||| activation steepness layer	count=1
namespace	sentencia sql más reciente ||| sqlite3	count=1
namespace	si ||| tidynode	count=1
arg_pair	message del ||| bool $serialize	count=1
function_name	previas operaciones de búsqueda ||| count entries	count=1
function_name	función ||| ps open memory	count=1
return	con el mensaje multiparte ||| string	count=1
arg_pair	server_key se puede utilizar ||| array $keys	count=1
function_name	indicando ||| set using exceptions	count=2
function_name	el argumento ||| set using exceptions	count=1
function_name	por lo ||| set mlt min doc frequency	count=1
arg_pair	forma parecida a sybase_connect() ||| string $password	count=1
namespace	la propiedad es o ||| reflectionproperty	count=1
namespace	entrada definido ||| ziparchive	count=2
function_name	que el semáforo pueda ||| sem	count=1
function_name	de resultados ||| cubrid result	count=1
function	[function_name_1] campo de ||| [arg_pair_2] [function_name_1]	count=1
function_name	longitud [function_name] ||| [function_name]	count=1
function_name	codificado mediante ||| mailparse uudecode all	count=1
function_name	de instrucciones de ||| processing instruction	count=1
arg_pair	una imagen ||| gmagick $source	count=1
function_name	una excepción no ||| exception	count=1
function_name	bajo la [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	el carácter c verticalmente ||| int $color	count=1
function_name	un nombre ||| name	count=1
namespace	el array después de ||| splfixedarray	count=1
function_name	copia ||| pgsql copy to array	count=2
arg_pair	el calendario calendar especificado ||| int $calendar int $month	count=1
namespace	por intérpretes ||| function	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] image border [function_name_2]	count=1
return	o más opciones con ||| bool	count=1
function_name	seno ||| trader asin	count=1
function_name	número de tendencias ||| bias	count=1
function_name	pid del ||| get	count=1
return	apropiada ||| bool	count=1
function_name	en minúsculas ||| tolower	count=1
function_name	fam en ||| fam	count=1
arg_pair	archivo a un ||| resource $handle int $mode	count=1
function_name	[function_name_1] cookie de ||| [function_name_2] [function_name_1]	count=2
arg_pair	oracle name el cual ||| string $name	count=1
function_name	este método [function_name_1] [function_name_2] ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=4
function_name	valor especial indicando ||| set	count=1
function_name	tridimensional simulado aclarando ||| raiseimage	count=1
arg_pair	es una ||| string $offset	count=1
arg_pair	mensaje y socket. ||| zmqsocket $frontend	count=1
function_name	establecer los ||| ncurses color	count=1
arg_pair	cuenta el número de ||| int $index_start int $index_end	count=1
function_name	cubrid_lob2_new() u obtenido ||| cubrid lob2	count=1
arg_pair	str donde todas las ||| string $str	count=1
function_name	elimina uno [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=1
function_name	idioma actual ||| mb language	count=1
function_name	único componente al formulario ||| component	count=1
function_name	cambia el directorio virtual ||| chdir	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] set [arg_pair_2]	count=9
function_name	[function_name_1] el control ||| [function_name_2] [function_name_1]	count=3
function_name	el producto ||| product	count=1
function_name	la descripción de la ||| cairo matrix transform distance	count=1
function_name	[function_name_1] el copyright ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] algoritmo ||| [arg_pair_2] [function_name_1]	count=1
function_name	consulta ||| dbx query	count=2
function_name	[function_name_1] blob/clob ||| [function_name_2] [function_name_1]	count=2
return	el color de relleno ||| void	count=1
function_name	entrenadas las conexiones de ||| get	count=1
return	en nombres de ||| bool	count=1
namespace	caracter que ||| function	count=1
function_name	sobre ||| proc get	count=1
function_name	[function_name_1] sin cerrarla ||| [function_name_1] [function_name_2]	count=4
function	miniatura embebida [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	paginación ldap enviando el ||| ldap	count=1
function_name	explícitamente la matriz de ||| pdf setmatrix	count=1
function_name	entrecomillado ||| quote	count=1
function_name	asociativo desde ||| fetch	count=1
function_name	establece el ||| set parameter	count=1
namespace	ha consultado ||| mongocursor	count=1
arg_pair	fichero fd ||| int $mode	count=2
function_name	primera entrada en el ||| ldap first entry	count=1
function_name	último error ||| error	count=5
arg_pair	mezcla alfa para ||| resource $image	count=1
function_name	devuelve la versión ||| version	count=2
return	un fichero de ||| resource	count=1
arg_pair	coincidencias con pattern luego ||| string $pattern	count=1
function	nombre de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] entrenamiento ||| [function_name_1] [function_name_2]	count=1
namespace	tiempo especificada dada por ||| function	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] mlt max [function_name_2]	count=1
arg_pair	lee ||| resource $handle	count=1
return	[return] con las ||| [return]	count=3
function_name	ítems cuyas claves ||| multi	count=1
function_name	[function_name_1] lista ||| [function_name_1] server [function_name_2]	count=1
function_name	frecuencia en la que ||| frequency	count=1
function_name	las cabeceras [function_name_2] ||| [function_name_2] [function_name_1]	count=21
arg_pair	para la conexión ||| string $charset resource $link_identifier	count=1
return	especificado ||| resource	count=5
arg_pair	la base ||| string $password string $database	count=1
function_name	previas operaciones de búsqueda ||| ldap count entries	count=1
return	las palabras que no ||| solrquery	count=1
namespace	imagen que representa la ||| function	count=4
function_name	despliega ||| vprintf	count=1
function_name	devuelve estadísticas sobre ||| get statistics	count=2
function_name	frase de consulta ||| highlight use phrase	count=2
namespace	son ||| mongocursor	count=1
function_name	consulta codificada ||| http build query	count=1
function_name	establece la opción de ||| set	count=1
function	de oracle [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	esta [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	trabajo dado ||| job	count=1
function_name	basado ||| ps shading	count=1
arg_pair	archivo ||| string $localname	count=1
function_name	función [function_name] ||| [function_name] last	count=2
function_name	configuración tidy ||| tidy load config	count=1
arg_pair	de botón tridimensional simulado ||| int $x	count=1
function_name	memcached::prepend() con la ||| prepend	count=1
arg_pair	de botón tridimensional simulado ||| int $height	count=1
function_name	[function_name_1] vacío con ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve el máximo de ||| get	count=1
arg_pair	en subject coincidencias ||| mixed $subject	count=1
function_name	longitud máxima de línea ||| max line	count=1
function_name	diferentes opciones de ||| options	count=1
namespace	indica ||| domnode	count=1
function_name	devuelve el nombre ||| filepro fieldname	count=1
function_name	puede utilizar para que ||| set by	count=1
arg_pair	el resultado de ||| resource $result	count=1
function_name	temporal ||| mailparse	count=1
arg_pair	un ||| resource $imap_stream string $ref	count=1
function_name	formato utf-8 ||| pdf utf8	count=1
function_name	proceso abierto ||| get	count=1
function_name	el número de candidatas ||| fann get cascade	count=1
function_name	la descripción de la ||| ps surface get	count=1
arg_pair	x3 ||| float $x3	count=1
arg_pair	por offset y ||| int $offset	count=1
function_name	virtual ||| dbplus chdir	count=2
function_name	en ||| using	count=1
function_name	obtiene el nombre ||| get filename	count=1
function_name	continente que corresponde ||| continent	count=1
function_name	el atributo name como ||| attribute	count=1
arg_pair	del archivo dado en ||| resource $ftp_stream string $remote_file	count=1
function_name	la que ||| min doc	count=1
namespace	el identificador ||| function	count=1
arg_pair	la ||| resource $psdoc	count=1
function_name	certificado y su ||| openssl pkcs7 sign	count=1
namespace	el fichero ||| splfileobject	count=1
namespace	que ha sido ||| function	count=1
function_name	las cabeceras de petición ||| nsapi request headers	count=1
function_name	por bloques o ||| block algorithm	count=1
function_name	devuelve la geometría de ||| get	count=1
return	imágenes [return] ||| [return]	count=3
arg_pair	cubrid y guarda su ||| resource $lob_identifier	count=1
namespace	de la línea de ||| harufont	count=1
function_name	[function_name_1] clase ||| bool [function_name_1] parse [function_name_2]	count=2
namespace	con información de ||| function	count=1
function_name	cuando la biblioteca ||| set using exceptions	count=1
function_name	define el modo ||| mode	count=3
return	lista de dsn ||| array	count=1
function	[function_name_1] codificación ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=1
namespace	momento actual medido ||| function	count=1
function_name	[function_name_1] rra ||| [function_name_1] [function_name_2]	count=1
function_name	largo para ||| frame long	count=1
function_name	renombrar ||| rename	count=1
function_name	de una estructura fann ||| fann	count=1
function_name	la función dio_read() ||| dio	count=1
arg_pair	un archivo dest ||| string $new_file2 string $dest	count=1
return	disponibles después de ||| array	count=1
function_name	el atributo dado ||| attribute	count=1
function_name	consulta siguiente ||| cubrid next	count=1
function_name	uno ||| format	count=1
function_name	la descripción ||| ps surface create	count=1
arg_pair	el modo de ||| int $mode	count=1
function_name	la posición numérica ||| mb stripos	count=2
function_name	servidor postgresql después ||| pg end	count=1
function_name	descripción ||| ps surface	count=3
function_name	la descripción de ||| surface create	count=1
return	llama ||| bool	count=1
arg_pair	botón tridimensional ||| int $x int $y	count=1
arg_pair	[arg_pair_1] y bcc ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	para especificar un conjunto [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
function_name	el uso de ||| proc get	count=1
function_name	la función usa ||| prob	count=1
arg_pair	[arg_pair] matriz ||| [arg_pair]	count=2
arg_pair	botón tridimensional simulado aclarando ||| int $x int $y	count=1
function_name	conexión con [function_name_2] ||| function resource [function_name_2] [function_name_1]	count=2
function_name	indica si el ||| is	count=1
function_name	la potencia de ||| variant pow	count=1
function_name	[function_name] en un ||| [function_name]	count=1
function_name	escala ||| scale	count=10
function_name	[function_name] atributo ||| move to [function_name]	count=3
function_name	colapsa la imagen para ||| image	count=1
function_name	disposición de la imagen ||| image dispose	count=1
namespace	cursores de seguimiento ||| mongocursor	count=1
function_name	un servicio ||| service	count=1
namespace	array de [namespace] con ||| [namespace]	count=1
arg_pair	timestamp y ubicación dados ||| int $timestamp	count=2
namespace	actual usando la regla ||| harupage	count=1
function_name	transforma ||| transform to	count=2
function_name	peso de la fuente ||| getfontweight	count=1
arg_pair	de conexión ||| bool $value	count=1
function	crea una [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	devuelve el peso de ||| getfontweight	count=1
function_name	uso de memoria ||| meminfo	count=1
function_name	devuelve el prefijo ||| get	count=1
namespace	sobre las capas ||| zmqdevice	count=1
arg_pair	especificado ||| resource $context	count=1
function_name	curl ||| curl multi	count=1
function_name	[function_name] array con ||| fann create [function_name]	count=2
arg_pair	un ||| string $name string $value	count=2
function_name	en ||| mailparse uudecode all	count=2
function_name	inverso del ||| gmp invert	count=1
function_name	un blob en ||| blob	count=1
return	errno como un código ||| string	count=1
return	devolver un valor especial ||| void	count=1
return	una cadena que especifica ||| string	count=1
function_name	[function_name] el arrayiterator ||| [function_name] array	count=2
namespace	retraso de ||| gmagick	count=1
arg_pair	ømq pueden hacer de ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	[function_name_1] nombre ||| [function_name_1] namespace [function_name_2]	count=1
namespace	de formateo dado por ||| function	count=1
function_name	retraso ||| delay	count=1
function_name	escala de entrada para ||| set input	count=1
function_name	datos clob ||| clob	count=1
function_name	con infomación ||| textblock	count=1
function_name	descendientes con [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la versión de la ||| version	count=2
return	en las siguientes ||| bool	count=1
arg_pair	str de acuerdo ||| string $str string $charset	count=1
function_name	número de línea actual ||| get current line	count=1
function_name	el carp::croak de perl ||| apd croak	count=1
namespace	punto de [namespace] ||| [namespace]	count=3
function_name	devuelve el tamaño ||| filesize	count=1
function_name	tantos documentos como este ||| mlt	count=1
function_name	información sobre ||| getinfo	count=1
function_name	la connection ||| dbname	count=1
function_name	biblioteca unrar ||| set using	count=1
return	sql más ||| int	count=1
namespace	o a ||| function	count=1
arg_pair	posicionar ||| int $position	count=1
function_name	de recorte ||| clip	count=3
namespace	estándar basado en ||| function	count=1
function_name	lee datos blob ||| read blob	count=1
function_name	línea actual ||| current line	count=1
arg_pair	el ||| string $str	count=4
return	que aparecen en ||| string	count=1
function_name	segundo plano para ser ||| background	count=1
function_name	afectadas por ||| affected	count=2
function_name	subsiguiente ||| types	count=1
function_name	devuelve el número de ||| count	count=2
function_name	gestro ||| used	count=1
function_name	[function_name_1] similitud ||| [function_name_2] [function_name_1]	count=2
function_name	reinicia ||| fann reset	count=1
function_name	copia del ||| copy	count=1
arg_pair	efecto de ||| int $height	count=1
arg_pair	de ømq pueden hacer ||| zmqsocket $backend	count=1
namespace	pila de una excepción ||| exception	count=1
function_name	de emitir ||| using exceptions	count=1
namespace	proceso actual por ||| function	count=1
function_name	paso ||| fann get rprop delta	count=1
function_name	a las [function_name_2] ||| [function_name_1] [function_name_2]	count=8
arg_pair	a image ||| float $inputgamma	count=1
function_name	el ||| closedict	count=2
arg_pair	recurso de resultados ||| resource $result	count=1
arg_pair	por key corresponda ||| mixed $value	count=1
function_name	función devuelve [function_name] del ||| get [function_name]	count=1
function_name	[function_name_1] el algoritmo ||| [function_name_2] [function_name_1]	count=1
arg_pair	listas desordenadas ||| string $par1	count=1
function_name	tie ||| tie breaker	count=2
return	el momento actual ||| int	count=1
return	error ||| void	count=2
arg_pair	cadena source ||| string $source int $options	count=1
function	de cadena [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
namespace	las líneas cuando se ||| function	count=1
function_name	gestor curl dado ||| curl	count=1
function_name	archivo/usuario de apc ||| apc bin	count=1
function_name	error sqlstate de ||| stmt sqlstate	count=1
function_name	apuntador ||| uudecode all	count=2
function	[function_name_1] la database ||| [arg_pair_2] [function_name_1]	count=2
function_name	corto para un marco ||| get frame short	count=1
arg_pair	a bson ||| string $bson array $typemap	count=1
function_name	de namespace ||| namespace	count=1
function_name	conjunto ||| finalize	count=1
function_name	encuentre un error una ||| exceptions	count=1
arg_pair	con la key existe ||| int $flags	count=1
function_name	esta ||| open	count=1
function_name	privada ||| check private	count=1
function_name	excepción no es ||| exception handler	count=1
namespace	cromaticidad como una matriz ||| gmagick	count=1
return	lo menos tantos documentos ||| solrquery	count=1
function	[function_name_1] puntero al ||| [arg_pair_2] [function_name_1]	count=1
function_name	los callback definidos por ||| gupnp control point browse	count=2
function_name	la zona horaria correspondiente ||| time zone by	count=1
return	la que ||| solrquery	count=1
namespace	una cadena de un ||| function	count=1
function_name	[function_name_1] uno ||| [function_name_2] [function_name_1]	count=4
function_name	la apariencia de la ||| set	count=1
function_name	desde ||| load from file	count=1
arg_pair	efecto de ||| int $y	count=1
namespace	de instancia xml dada ||| sdo_das_xml	count=1
function_name	cubrid_error_code() se usa ||| cubrid error code	count=1
function	algoritmo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	bibliotecas de oracle client ||| oci	count=1
function_name	por ||| mlt min doc frequency	count=2
function_name	mensajes ||| imap sort	count=2
arg_pair	con ||| string $name	count=1
namespace	o para ||| function	count=1
function_name	un nuevo archivo pdf ||| pdf open	count=1
function_name	de primer plano ||| color	count=1
namespace	el resultado ||| splfileobject	count=1
function_name	diferentes opciones de la ||| options	count=1
function_name	devuelve las posiciones ||| get from neuron	count=2
function_name	iterador que es ||| set iterator	count=1
function_name	string ||| generate	count=1
function_name	ventana centrada de ||| newt centered window	count=1
function_name	array multi-dimensional con ||| all	count=1
function_name	[function_name_1] [function_name_2] ||| fann [function_name_1] cascade candidate [function_name_2]	count=4
function_name	de conexiones del ||| connection	count=1
function_name	acción javascript ||| set javascript action	count=1
return	xml que ya ||| void	count=1
function_name	argumento ||| using exceptions	count=2
return	de lectura en la ||| bool	count=1
arg_pair	identificaron con ||| string $client_identifier	count=1
arg_pair	que puedan ||| string $str	count=1
return	usuario y las estadísticas ||| array	count=1
function_name	pdf sujeto ||| pdf begin	count=2
function_name	una relación ||| dbplus	count=1
function_name	devuelve el nombre ||| get extension name	count=2
namespace	array de manera que ||| function	count=1
function	del [arg_pair_2] ||| [function_name_1] class name [arg_pair_2]	count=1
namespace	configuraciones ||| yaf_router	count=1
function_name	establece ||| set status	count=2
arg_pair	parecida a sybase_connect() ||| string $servername	count=1
arg_pair	un fichero ||| resource $font_index string $encodingfile	count=1
function_name	preparada anterioremente ||| execute	count=1
function_name	la ||| data source	count=2
arg_pair	valor de ||| string $variable string $value	count=1
function_name	log 1 + number ||| log1p	count=1
function_name	la que las ||| mlt	count=1
arg_pair	bytes pseudo-aleatorios ||| int $size bool $strong	count=1
function_name	[function_name_1] de sarprop ||| [function_name_2] [function_name_1]	count=38
arg_pair	un string utilizando ||| string $str	count=1
function_name	prueba ||| gmp	count=1
function_name	estar ||| crypt	count=1
function_name	nombre unicode de ||| name	count=1
arg_pair	filtros adjuntos [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	fragmento ideal especificado por ||| regex slop	count=1
function_name	el límite de ||| fail limit	count=1
function_name	sobre ||| proc get status	count=2
function_name	web o una dirección ||| geoip	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] class [function_name_2]	count=5
function_name	de la extensión iconv ||| iconv get encoding	count=1
return	es un ||| bool	count=1
function_name	todos los procedimientos ||| odbc procedures	count=1
function_name	de la página ||| slide show	count=1
namespace	creada por funciones ||| function	count=1
arg_pair	aclarando y ||| int $width int $height	count=1
function_name	contra las ||| array diff ukey	count=1
namespace	especifica ||| solrquery	count=1
function_name	volcado implícito ||| ob implicit flush	count=1
function_name	especial indicando error cuando ||| using	count=1
return	puestas [return] cola hasta ||| [return]	count=1
arg_pair	form ||| resource $component	count=1
function_name	[function_name_1] el límite ||| [function_name_1] cascade candidate [function_name_2]	count=1
arg_pair	datos emita ||| string $event_name2	count=1
function_name	son similares ||| tailable	count=1
arg_pair	de conexión especificado ||| resource $connection bool $value	count=1
arg_pair	una interfaz flexible ||| string $collection	count=1
function_name	código de error ||| error code	count=3
function_name	datos dbase con ||| dbase	count=1
arg_pair	en el objeto de ||| int $flag	count=1
arg_pair	r * x** r-1 ||| float $a float $r	count=1
return	que ||| string	count=6
function_name	donde ||| file	count=1
return	la ||| void	count=17
function	codifica [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	copia de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	dos diferencias considerables ||| string $database string $userid	count=1
function_name	a la de memcached::touch() ||| touch by	count=1
function_name	de mysql asociado con ||| mysql data	count=1
function_name	devuelve el valor de ||| value	count=1
function_name	devuelve el nombre ||| get namespace name	count=2
function_name	se devuelve un ||| add	count=1
function_name	de la puesta de ||| date sunset	count=1
arg_pair	intermediarios de ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	un resultado que contiene ||| resource $connection	count=1
function_name	de control ||| control point	count=1
function_name	número de tendencias de ||| fann get bias	count=1
namespace	se puede indicar opcionalmente ||| function	count=1
function_name	lee el contenido ||| read	count=1
namespace	el uso ||| function	count=1
function_name	base de datos ||| db	count=4
function_name	cabecera mime ||| mimeheader	count=2
namespace	para este objeto rararchive ||| rararchive	count=1
namespace	neuronas de salida que ||| function	count=1
function_name	repositorio ||| svn	count=5
function_name	de salida ||| cascade output	count=1
return	de petición http en ||| array	count=1
arg_pair	con dos ||| string $password string $charset	count=1
function_name	string con barras invertidas ||| addcslashes	count=1
function_name	forma parecida ||| pconnect	count=1
arg_pair	socket_create() ||| int $length	count=1
function_name	la biblioteca ||| using	count=1
function_name	parámetro a ||| bind param	count=1
arg_pair	potencia exp ||| gmp $base gmp $exp	count=1
function_name	tamaño de paso inicial ||| fann get rprop delta zero	count=1
arg_pair	nombre distinguido ||| resource $privkey	count=1
function_name	las variables [function_name] ||| [function_name]	count=1
arg_pair	descriptor de fichero fd ||| mixed $fd	count=3
function_name	la función geoip_country_code_by_name() ||| country code by	count=1
arg_pair	la cadena source ||| string $source int $options	count=1
arg_pair	datos y ||| string $data string $mode	count=1
arg_pair	puede especificar un ||| string $field string $field_override	count=1
function_name	de namespace ||| set end namespace	count=1
function_name	si ||| prob	count=1
function_name	de los ciclos ||| gc collect cycles	count=1
function_name	función geoip_country_code_by_name() devolverá ||| country	count=1
return	computa el ||| int	count=1
function_name	logo de zend usando ||| zend logo	count=1
function_name	por lo menos tantos ||| mlt	count=1
function_name	el índice del campo ||| cubrid field	count=1
return	ampliando [return] reduciendo ||| [return]	count=1
function_name	por lo menos ||| mlt min	count=1
return	que aparecen en el ||| string	count=1
function_name	trabajo para ver ||| ping	count=1
namespace	los datos del ||| function	count=1
function_name	complemento de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	el fichero gzip2 ||| bzwrite	count=1
function_name	averigua [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	obtiene el nombre ||| name	count=5
function_name	html del fichero llamado ||| load htmlfile	count=1
namespace	filteriterator que consiste en ||| filteriterator	count=1
function_name	las facetas de fecha ||| facet date	count=1
function_name	a carboncillo ||| charcoal image	count=1
function_name	carácter ||| chr	count=1
arg_pair	una versión extendida de ||| resource $result	count=2
return	posee una ||| mongocursor	count=1
function	[function_name_1] archivo ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	entrecomilla ||| int $parameter_type	count=1
namespace	[namespace] amigable ||| [namespace]	count=1
function	importa la [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	ser usadas en la ||| bool	count=1
function_name	entrenadas las conexiones de ||| fann get	count=1
namespace	agrega uno o ||| function	count=1
namespace	cuando se dibujan rectágulos ||| function	count=1
return	de trabajo ||| bool	count=1
function_name	generalmente este método no ||| reset error	count=1
function_name	color especificado como un ||| get color value	count=1
arg_pair	es una implementación ||| string $offset	count=1
function_name	mueve ||| move to	count=2
arg_pair	que contiene una ||| int $dictionary_link	count=1
function_name	de subject el ||| strcspn	count=1
return	con la diferencia de ||| resource	count=1
function_name	cierra un gestor ||| close	count=1
function_name	de datos rrd como ||| rrd fetch	count=1
arg_pair	0600 en el directorio ||| string $dir string $prefix	count=1
function_name	una lista ||| broker list	count=1
function_name	recupera los datos especificados ||| dba fetch	count=1
function_name	[function_name_1] que ||| [function_name_2] lower [function_name_1]	count=1
function_name	algún parámetro ||| parameter	count=1
function_name	del módulo ||| module	count=1
arg_pair	message al buzón ||| string $message	count=1
function_name	cliente y la conexión ||| client	count=1
function_name	el tipo de la ||| type	count=3
function	[function_name_1] especificado en ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	las capas de mensaje ||| zmqsocket $frontend	count=1
arg_pair	con la ||| resource $shm_identifier	count=1
function_name	frecuencia en ||| set mlt min	count=1
function_name	cierra el ||| crack	count=1
return	previamente ||| bool	count=1
arg_pair	la función usa ||| gmp $a	count=1
function_name	la propuesta de ||| getimagerenderingintent	count=1
function_name	sisitema de archivos tales ||| wrapper	count=1
function_name	tipo de la ||| gettype	count=1
arg_pair	a sybase_connect() con ||| string $username	count=1
function_name	debug output ||| memcache debug	count=1
function_name	los cálculos ||| compat	count=1
function_name	socket socket creado por ||| socket	count=1
arg_pair	el calendario calendar ||| int $calendar int $month	count=1
arg_pair	esta función intenta asegurarse ||| string $filename	count=1
function_name	la descripción de ||| cairo pattern add color stop rgb	count=1
namespace	y logrando que ||| function	count=1
function_name	espacios en blanco ||| ltrim	count=1
function_name	la versión escapada ||| cubrid real escape string	count=1
function_name	campos en el ||| fields	count=1
return	función va aquí ||| cairopssurface	count=1
return	el diccionario ||| bool	count=1
arg_pair	base de datos ||| resource $conn_identifier	count=1
function_name	lugar ||| set using	count=1
arg_pair	modo de ||| bool $mode	count=1
function_name	[function_name_1] campos de ||| [function_name_2] [function_name_1]	count=2
function_name	acción ||| proxy action	count=1
function_name	la entrada descrita ||| dba	count=2
function_name	de sisitema de archivos ||| wrapper register	count=1
arg_pair	calendario calendar especificado ||| int $calendar int $month	count=1
function_name	grises ||| embossimage	count=1
function_name	toma la raíz ||| root	count=1
function_name	la función ||| prob prime	count=1
function_name	función acepta uno ||| number format	count=1
function_name	de la extensión ||| extension	count=2
function_name	[function_name] modificadas en ||| ingres num [function_name]	count=1
return	los valores usando una ||| void	count=1
return	con la diferencia ||| resource	count=1
function_name	[function_name_1] de compresión ||| [function_name_2] [function_name_1]	count=8
function_name	la frecuencia ||| mlt min doc	count=1
function_name	fila ||| fetch row	count=1
function_name	obtiene el tiempo de ||| context get	count=1
function_name	argumento es ||| using	count=1
function_name	documentos ||| min	count=1
namespace	especificado ||| gmagick	count=1
function_name	elemento con el id ||| id	count=1
arg_pair	un efecto de ||| int $x int $y	count=1
function_name	del continente ||| continent code	count=1
function_name	el desplazamiento [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	tiene derechos de ||| copyrighted	count=1
function_name	de cargar entidades ||| disable entity	count=1
function_name	el ||| required	count=1
function_name	de términos [function_name_2] ||| [function_name_2] max num query [function_name_1]	count=1
function_name	información sobre [function_name_2] ||| [function_name_1] get [function_name_2]	count=3
return	html y php del ||| string	count=1
function_name	donde [function_name_2] ||| [function_name_1] [function_name_2]	count=4
namespace	cual se describe ||| function	count=1
function_name	argumento ||| using	count=1
arg_pair	propietario del fichero filename ||| string $filename	count=1
function_name	devuelve el factor por ||| get	count=1
function_name	las palabras que no ||| doc	count=1
function_name	el tipo ||| field type	count=1
function_name	cualquier abstracción ||| construct	count=1
arg_pair	botón ||| int $height	count=1
function_name	devuelve el ||| sybase get	count=1
function_name	en la ||| mlt min doc	count=1
arg_pair	key y almacena el ||| mixed $key	count=1
arg_pair	de un resultado ||| resource $result	count=1
function_name	token de petición ||| request token	count=1
function	método actualiza [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	y por alpha y ||| resource $p float $alpha	count=1
function_name	[function_name_1] todas las ||| [function_name_1] [function_name_2]	count=1
arg_pair	cuenta ||| int $index_start int $index_end	count=1
function_name	true entonces en lugar ||| set using	count=1
function_name	sets tie breaker parameter ||| tie	count=1
function_name	el número máximo ||| mlt max num	count=2
function_name	obtiene la información ||| get	count=2
function_name	libera todos los ||| event base free	count=1
arg_pair	de str especificada ||| string $str	count=1
return	comprueba la información sobre ||| object	count=1
function_name	añade ||| newt form add	count=2
function_name	advertencia ||| ps	count=1
function_name	establece el ||| set blob	count=1
function_name	lista de todos los ||| list	count=1
function_name	devuelve un array ||| module get	count=1
function_name	la página ||| set slide show	count=1
function_name	de columna ||| column	count=3
function_name	ser el cambio del ||| fann get	count=1
function_name	una descripción de ||| error string	count=1
arg_pair	con dos diferencias considerables ||| string $database string $userid	count=1
namespace	datos del apuntador de ||| function	count=1
function_name	el parámetro rows ||| copy from	count=1
function_name	csr dada ||| csr sign	count=1
function_name	[function_name_1] total de ||| [function_name_2] [function_name_1]	count=2
return	en nombres ||| bool	count=1
arg_pair	dado ||| resource $imap_stream	count=1
function_name	que no ||| set	count=1
function_name	descripción de la ||| cairo surface get	count=1
arg_pair	de value ||| int $options	count=1
return	de un caracter que ||| string	count=1
function_name	obtiene nombres ||| names	count=1
function_name	puntero de filas interno ||| seek	count=1
namespace	xml que ||| sdo_das_xml	count=1
function_name	inverso del modulo de ||| gmp invert	count=1
arg_pair	de la primera ocurrencia ||| string $haystack	count=2
namespace	conexiones [namespace] ||| [namespace]	count=1
function_name	la frecuencia en la ||| doc	count=1
function_name	la siguiente petición xpath ||| xpath namespace	count=1
function_name	línea desde ||| fgets	count=1
namespace	envía datos arbitrarios a ||| gearmanclient	count=1
arg_pair	atributos al dn específico ||| string $dn	count=1
function_name	genera ||| gmp random	count=1
function_name	añade varios componentes al ||| add components	count=1
function_name	envía ||| proxy send	count=1
arg_pair	dispositivos de ømq pueden ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	devuelve el paquete ||| packet	count=1
function_name	alfa de la imagen ||| set image alpha	count=1
function_name	virtual actual donde ||| dbplus	count=1
function_name	recurso de conexión ||| connect	count=1
function_name	este método devuelve el ||| get	count=4
arg_pair	el fichero a ||| string $filename bool $use_include_path	count=1
arg_pair	texto ||| string $text string $optlist	count=1
return	bordes de la ||| gmagick	count=1
return	en la inatensidad ||| bool	count=1
function_name	de color ||| color content	count=1
function_name	sisitema ||| wrapper register	count=2
arg_pair	verifica el texto dado ||| string $signature	count=1
function_name	descripción de la ||| cairo pattern get extend	count=1
namespace	objecto soapserver ||| soapserver	count=1
arg_pair	es ||| string $name	count=1
function_name	el registro ||| record	count=1
function_name	publicación de ||| get ap	count=1
function_name	similar a la representación ||| to	count=1
arg_pair	está en formato csv ||| string $enclosure	count=1
function_name	el dispositivo ||| gupnp device info	count=1
function_name	para obtener el nombre ||| name	count=1
namespace	unix (1 ||| function	count=1
arg_pair	planifica la ||| resource $event	count=1
function_name	el ecm ||| cascade output stagnation	count=1
function_name	un ||| gmp prob	count=1
function_name	que las ||| mlt min doc	count=1
namespace	valores [namespace] tienen las ||| [namespace]	count=1
function_name	campo de una ||| ibase field	count=1
arg_pair	es el único ||| mixed $xsd_file	count=1
function_name	define el ||| set slide show	count=1
function_name	a una ||| kernel	count=1
return	indicando que el ||| void	count=1
function_name	datos ||| db	count=1
arg_pair	un archivo ||| string $file	count=1
function_name	establecer los colores de ||| color	count=1
return	un id ||| resource	count=1
function_name	el espacio de nombres ||| default namespace	count=1
return	archivo codificado mediante uuencode ||| array	count=1
arg_pair	conjunto óptimo de ||| int $nullable	count=1
function_name	tiempo de espera ||| set query timeout	count=1
function_name	establece la calidad ||| set	count=1
arg_pair	de una ||| string $key	count=1
function_name	corto para un marco ||| id3 get frame short	count=1
function_name	imagen a las dimensiones ||| image	count=1
namespace	de memcached ||| memcached	count=1
return	php del texto que ||| string	count=1
function_name	nivel mínimo de ||| sybase min	count=1
function_name	tarea de prioridad baja ||| low	count=1
namespace	es igual a ||| function	count=1
function_name	convierte un guid ||| guid	count=1
function_name	el número máximo ||| max analyzed chars	count=1
function_name	devuelve el número ||| fann num	count=2
function_name	esta ||| format	count=1
function_name	el número de ||| set start	count=1
function_name	[function_name_1] entradas de ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] cambio ||| fann [function_name_1] cascade candidate [function_name_2]	count=1
arg_pair	un directorio y ||| resource $fam string $dirname	count=1
function_name	excepción de tipo ||| set using	count=1
function_name	entrenamiento continuar ||| fann	count=1
arg_pair	html y php del ||| int $length	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] image border [function_name_2]	count=1
function_name	de unicode alphabetic ||| ualphabetic	count=1
function_name	es similar a msql_fetch_array() ||| msql	count=1
function_name	tantos documentos como este ||| set mlt	count=1
function	[function_name_1] una función ||| [function_name_1] [arg_pair_2]	count=3
function_name	lista personal de palabras ||| personal	count=1
function_name	de error ||| strerror	count=1
return	de conexión en ||| bool	count=1
return	por el ||| string	count=1
function_name	escala las ||| scale	count=2
function_name	de instancia xml dada ||| load string	count=1
function_name	[function_name_1] tipo del ||| [function_name_1] [function_name_2]	count=1
namespace	imagepolygon() cuando se ||| function	count=1
function_name	o información ||| info	count=1
function_name	función mssql_free_statement() ||| statement	count=1
return	añadir un campo al ||| void	count=1
return	un array con toda ||| array	count=1
function_name	los iteradores ||| array iterator	count=1
arg_pair	en ||| bool $before_needle	count=1
function_name	entwerfen von einer mime ||| mime	count=1
function_name	muestra ||| display	count=2
return	arco circular [return] ||| [return]	count=3
function	[function_name_1] fichero a ||| [arg_pair_2] [function_name_1]	count=5
function_name	la frecuencia en la ||| mlt min	count=1
namespace	por una o ||| function	count=1
function_name	conjunto de ||| finalize	count=1
function_name	este ||| data	count=1
namespace	en ||| rarexception	count=1
arg_pair	una ||| string $table	count=1
function_name	el seno ||| asin	count=1
function_name	resultados de mysql ||| mysql result	count=1
function_name	y establece la ||| set	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] uri [arg_pair_2]	count=3
function_name	escalar datos ||| fann scale train	count=1
namespace	idéntica ||| function	count=1
arg_pair	negro especificados al ||| float $gamma	count=1
return	el tipo ||| int	count=1
function_name	fila de datos del ||| fbsql fetch row	count=1
function_name	logo de ||| logo	count=1
arg_pair	dada por variable_key y ||| resource $shm_identifier int $variable_key	count=1
function_name	cierra ||| module close	count=1
function_name	uso ||| get status	count=2
arg_pair	la versión plural de ||| string $msgid1	count=1
arg_pair	cuenta ||| int $index_start	count=1
function_name	establece la fracción de ||| set	count=1
function_name	una miniatura de ||| thumbnail	count=1
function_name	método actualiza ||| update	count=2
function_name	intenta eliminar drop ||| fbsql drop	count=1
arg_pair	desde ||| string $filename int $options	count=1
arg_pair	un enlace web a ||| resource $pdfdoc float $lowerleftx	count=1
function_name	actual ||| chdir	count=1
function_name	de píxel ||| pixel	count=1
arg_pair	un directorio ||| resource $fam string $dirname	count=1
return	de el fichero ||| int	count=1
function_name	función dio_read() [function_name_2] ||| [function_name_1] [function_name_2] resource $fd	count=1
return	proporcionada existe [return] el ||| [return]	count=3
function_name	las ||| get cascade	count=1
namespace	número de las que ||| function	count=1
function_name	[function_name] a una ||| db2 [function_name]	count=2
function_name	acción ||| gupnp service proxy action	count=1
arg_pair	dado por form ||| array $components	count=1
function_name	de tendencias de cada ||| bias	count=1
return	excepto que fgetss() ||| string	count=1
function	gamma de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	dn se ||| resource $link_identifier string $dn	count=1
function_name	devuelve el tamaño actual ||| zip	count=1
function_name	de paso [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	aguja needle ||| mixed $needle	count=1
function_name	la descripción de la ||| cairo scaled font get font options	count=1
function_name	frecuencia de documento mínima ||| facet enum cache min default frequency	count=1
function_name	base ||| sybase select db	count=2
return	que puedan ||| string	count=1
function_name	para desplegar el logo ||| logo guid	count=1
function_name	crea ||| create standard	count=2
function_name	devuelto por ||| bzerrstr	count=1
return	el ||| yaf_response_abstract	count=1
function_name	un proceso abierto mediante ||| proc get	count=1
function_name	sobre la información ||| pdf info	count=1
function_name	el color o textura ||| polygon	count=1
arg_pair	los datos en data ||| int $linebreak array $callbacks	count=1
function_name	de documento mínima a ||| terms min	count=1
namespace	archivos tar/zip no ejecutables ||| phardata	count=1
function_name	esta función acepta uno ||| number format	count=1
function_name	[function_name_1] estadísticas sobre ||| [function_name_1] [function_name_2]	count=1
namespace	la frecuencia ||| solrquery	count=1
arg_pair	str de acuerdo ||| string $charset	count=1
function_name	un ||| get	count=1
arg_pair	final de un trazado ||| resource $p	count=1
function_name	tamaño actual de una ||| entry filesize	count=1
function_name	establecer ||| ncurses color set	count=2
arg_pair	dado para ser borrado ||| int $dbase_identifier int $record_number	count=1
arg_pair	la función cubrid_schema() se ||| int $schema_type	count=1
function_name	de ||| ncurses	count=1
function_name	abierto y devuelve ||| get contents	count=1
function_name	de registros ||| px numrecords	count=1
function_name	campos columnas de ||| numfields	count=1
arg_pair	[arg_pair] como ||| [arg_pair]	count=1
function_name	variable character_set ||| client encoding	count=1
function_name	que si no coincide ||| match	count=1
return	al especificado ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] stroking [function_name_2]	count=2
function_name	cuando se enlazó ||| mcrypt ecb	count=1
return	un array asociativo de ||| array	count=1
function_name	la ||| set slide	count=1
function_name	trabajo para la ||| job handle	count=1
function_name	indica ||| is default	count=1
function_name	elipse a la ruta ||| ellipse	count=1
namespace	de tipo type que ||| function	count=1
arg_pair	una ||| resource $conn_identifier	count=1
function_name	de entrenamiento de ||| fann get cascade	count=1
function_name	un namespace es declarado ||| namespace decl	count=1
arg_pair	thickness píxeles ||| resource $image int $thickness	count=1
function_name	devuelve ||| broker get error	count=2
arg_pair	de mensaje ||| zmqsocket $frontend zmqsocket $backend	count=1
function	variables [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	un parámetro ||| string $namespaceuri	count=1
return	cuando se ||| string	count=1
arg_pair	un tipo ||| resource $imap_stream	count=1
function_name	de alertas de accesibilidad ||| access	count=1
function_name	desde ||| from file	count=2
namespace	de almacenamiento usado por ||| function	count=1
arg_pair	una fila ||| resource $result_id	count=1
function_name	postgresql después de ||| pg	count=1
function_name	el tamaño en bytes ||| size	count=2
return	en la posición dada ||| bool	count=3
arg_pair	needle ||| string $haystack string $needle	count=1
function_name	en ||| set mlt	count=2
function_name	valor del parámetro facet.date.hardend ||| facet date hard end	count=1
function_name	una instrucción sql ||| mssql next result	count=2
function_name	lista de ||| mcrypt list	count=1
function_name	el uri ||| uri	count=1
function_name	el prototipo del método ||| prototype	count=1
namespace	los datos del apuntador ||| function	count=1
function_name	el valor ||| checkbox set value	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] image [function_name_2]	count=5
arg_pair	el parámetro stack ||| string $offset	count=1
function_name	atributo ||| attribute	count=14
function_name	realiza una equivalencia ||| eqv	count=1
function_name	para ||| set event handler	count=2
function	[function_name_1] la codificación ||| [function_name_1] [arg_pair_2]	count=1
function_name	especial ||| using exceptions	count=2
function_name	registros en un ||| px numrecords	count=1
namespace	realizado [namespace] la función ||| [namespace]	count=1
arg_pair	solrquery::sethighlightalternatefield() se le ||| int $fieldlength string $field_override	count=1
function_name	esta ||| open memory image	count=2
function_name	clave o/y ||| find	count=1
function_name	la codificación de caracteres ||| mb convert encoding	count=1
function_name	loadfromstring() puede leer ||| save	count=1
function_name	mínima a ||| min	count=1
return	y extrae cada ||| array	count=1
return	un fichero ||| resource	count=9
arg_pair	y namespaceuri dados ||| string $namespaceuri	count=1
function_name	método devuelve el nombre ||| get	count=1
return	crea un ||| resource	count=4
arg_pair	el parámetro stack es ||| string $offset	count=1
function_name	directiva error_reporting en ||| error reporting	count=1
namespace	proceso del proceso ||| function	count=1
function_name	el ||| field count	count=1
function_name	registrar previamente con stream_wrapper_unregister() ||| stream wrapper	count=1
function_name	canal de color ||| get color value	count=1
function_name	frecuencia en la ||| mlt min doc	count=1
function_name	servidor ms-sql ||| last message	count=1
arg_pair	pequeño que podría ser ||| float $rprop_delta_min	count=1
function_name	ignoradas ||| doc frequency	count=2
function_name	dbplus_xlockrel() ||| dbplus xunlockrel	count=2
namespace	tipo de la variable ||| function	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() durante el ||| int $neurons_between_reports	count=1
function_name	de control de ||| control point callback	count=1
arg_pair	msglist ||| resource $imap_stream string $msglist	count=1
namespace	si y sólo si ||| rarexception	count=1
function_name	servidor postgresql después ||| pg	count=1
return	de salida ||| int	count=1
function_name	una distribución [function_name] cuya ||| stats rand gen [function_name]	count=1
namespace	de caracteres que se ||| function	count=1
return	incorpora la ||| void	count=1
function_name	un bloque [function_name] ||| [function_name] fill	count=3
return	[return] phar ||| [return]	count=3
function_name	devuelve un booleano ||| get	count=1
function_name	el [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	el iterador [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	escala las salidas de ||| fann scale output	count=1
function_name	msql asociado con el ||| msql data	count=1
function	[function_name_1] fichero a ||| [function_name_1] contents [arg_pair_2]	count=1
arg_pair	especial a menudo ||| int $dev int $pri	count=1
function_name	filas afectadas por una ||| ifx affected rows	count=1
function_name	que contiene pares de ||| pspell config repl	count=1
function_name	una línea ||| max line	count=1
function_name	el esquema es clickeado ||| set destination	count=1
function_name	[function_name_1] actual para ||| [function_name_2] [function_name_1]	count=16
function_name	[function_name_1] acción ||| [function_name_1] [function_name_2]	count=1
function_name	usa spanscorer para remarcar ||| set highlight highlight multi term	count=1
return	el nombre de ||| void	count=1
arg_pair	al objeto pdostatement ||| int $fetch_style int $cursor_orientation	count=1
arg_pair	si un bit es ||| gmp $a int $index	count=1
namespace	la transacción iniciada por ||| function	count=1
namespace	de la posición actual ||| splfileobject	count=1
namespace	última petición ||| memcached	count=1
return	un objeto de conjunto ||| sqlite3result	count=1
arg_pair	excepto que las retrollamadas ||| array $patterns_and_callbacks mixed $subject	count=1
function_name	adjunta otro núcleo («kernel») ||| add kernel	count=1
function_name	obtener el tamaño de ||| size	count=1
function_name	ha sido ||| types	count=1
function_name	guarda la estructura ||| save	count=1
function_name	es ||| using	count=1
function_name	descripción de la ||| cairo matrix translate	count=1
function_name	trae el ||| get	count=1
function_name	el archivo pdf generado ||| pdf	count=1
function_name	categoría de ||| flatness	count=1
function_name	[function_name_1] de inclued ||| [function_name_2] [function_name_1]	count=2
function_name	el cliente y la ||| client	count=1
function_name	[function_name_1] eventos generados ||| [function_name_2] [function_name_1]	count=2
function_name	ciclo ||| nop	count=1
function_name	para ||| highlight	count=1
arg_pair	fila en [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	y sólo si el ||| set using	count=1
function_name	devuelve el último error ||| enchant broker get error	count=1
function_name	grafema de la primera ||| grapheme stripos	count=1
arg_pair	variables desde un array ||| array $array int $flags	count=1
arg_pair	ordena un array ||| array $array	count=1
function_name	resultado key() ||| key	count=1
arg_pair	del [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	el campo ||| fbsql field	count=1
function_name	[function_name_1] las entradas ||| [function_name_2] [function_name_1]	count=1
return	de retornar un ||| int	count=1
function_name	particular ||| filename	count=1
return	un segundo ||| void	count=1
function_name	valores de la fila ||| sqlsrv fetch	count=1
function_name	elimina ||| shm remove	count=2
function_name	errores y ||| sqlsrv errors	count=1
function_name	codificación [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	cierra una ||| close	count=1
arg_pair	de operaciones ||| mongocollection $collection array $write_options	count=3
function_name	neuronas de cada capa ||| layer array	count=1
arg_pair	cuota de ajustes por ||| string $quota_root	count=1
arg_pair	automática de valores largos ||| float $min_savings	count=1
function_name	una definida por el ||| function	count=1
function_name	ecualiza ||| equalize	count=1
function	para [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
namespace	variable que se le ||| function	count=1
function_name	de definición del disco ||| file	count=2
function_name	reemplaza o [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	cierra un gestor de ||| close	count=1
function_name	menos tantos documentos ||| set	count=1
function_name	caracteres que aparecen ||| addcslashes	count=1
function_name	con el acceso ||| eio mkdir	count=1
namespace	y socket. ||| zmqdevice	count=1
function_name	de ||| tailable	count=2
function_name	instancia ||| string	count=1
function_name	archivo codificado ||| mailparse uudecode	count=1
function_name	el valor ||| bind value	count=1
function_name	closes a large object ||| pg lo	count=1
function_name	la tangente hiperbólica para ||| tanh	count=1
namespace	asignados con ||| oci-lob	count=1
arg_pair	php ||| resource $handle int $length	count=1
function_name	acción especificada ||| gupnp service action get	count=1
function_name	formatos de imagen ||| get image	count=1
function_name	el nombre corto ||| id3 get frame short name	count=1
return	a utilizar en la ||| bool	count=1
arg_pair	esté establecido a ||| array $arguments	count=1
function_name	devuelve el estado ||| get state	count=1
function_name	base ||| db	count=5
arg_pair	de fichero fd para ||| int $mode	count=1
function_name	socket ||| socket accept	count=2
return	a utilizar en ||| bool	count=1
return	es ||| void	count=1
function_name	remarcación ||| highlight highlight	count=1
function_name	de ||| image	count=1
function_name	asociado al ||| result seek	count=1
arg_pair	original_name como ||| string $original_name	count=1
function_name	tipo de dato de ||| field type	count=1
function_name	la clave pública ||| openssl public encrypt	count=1
arg_pair	almacenada en la ||| bool $success	count=1
function_name	[function_name_1] [function_name_2] actual de la ||| harupage float [function_name_1] line [function_name_2]	count=1
function_name	de recorte de ||| clip	count=2
namespace	texto que ||| function	count=1
function_name	obtener información blob/clob de ||| lob export	count=1
function_name	que ||| set	count=3
function_name	una excepción ||| exceptions	count=1
function_name	y equilibrado de carga ||| ms	count=1
function_name	secuencia de imágenes ||| get filename	count=1
function	de autocommit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	acs ||| string $machine	count=1
return	mensaje y socket. -- ||| zmqsocket	count=1
function_name	conexión en caso ||| connect	count=1
namespace	especificado a ||| function	count=1
return	a sybase_connect() con ||| resource	count=1
function_name	determinará el tipo mime ||| image type to mime type	count=1
function_name	del continente que ||| continent code	count=1
namespace	ventana ||| harudestination	count=1
function_name	del estado [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	una excepción de ||| set using exceptions	count=1
arg_pair	color para un ||| resource $image	count=2
function_name	socket ||| stream socket	count=2
arg_pair	un algoritmo de ||| int $channel	count=1
function_name	publicación ||| fdf get ap	count=1
function_name	elimina todos ||| delete by	count=1
namespace	ficheros que están en ||| function	count=1
function_name	de la función ||| function	count=1
function_name	la descripción de ||| pattern get surface	count=1
function_name	al flujo con ||| stream	count=1
function_name	campos de consulta ||| query field	count=1
function_name	propietario ||| fchown	count=1
arg_pair	una búsqueda ||| string $msgid2 int $n	count=1
function_name	de la ||| setimageiterations	count=1
namespace	preserva los bordes de ||| gmagick	count=1
function_name	los colores ||| ncurses color set	count=1
function_name	que las palabras ||| min	count=1
function_name	línea ||| start line	count=1
function_name	y sólo si ||| exceptions	count=1
function	de oracle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	api graphicsmagick como ||| gmagick	count=1
function_name	error una ||| using	count=1
function_name	tantos ||| set mlt min doc	count=1
arg_pair	después ||| resource $connection_id	count=1
function_name	límite del recurso especificado ||| limit	count=1
return	se convierte en un ||| bool	count=1
namespace	a partir de ||| function	count=1
function_name	primer índice ausente que ||| first empty	count=1
function_name	[function_name_1] [function_name_2] y ||| [function_name_1] [function_name_2]	count=3
arg_pair	la página ||| int $type	count=1
function_name	declaración ||| decl	count=1
return	en el fichero ||| bool	count=1
return	clase domnodelist ||| domnodelist	count=1
function_name	uno dos ||| format	count=1
function_name	frecuencia bajo ||| min term frequency	count=1
return	en la fuente ||| bool	count=1
return	fichero dado ||| int	count=1
function_name	html ||| fgetss	count=1
function_name	muestra una ||| display	count=1
function_name	una transacción sin cerrarla ||| commit ret	count=1
arg_pair	desde el xml dump ||| string $xml_file	count=1
function_name	[function_name_1] límite ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve el nombre de ||| get	count=3
function_name	de la consulta siguiente ||| cubrid next	count=1
namespace	que contiene el carácter ||| function	count=1
function_name	de lecturas a ||| slave	count=1
function_name	el de ||| slide show	count=1
function_name	esta función ||| ps open memory	count=1
arg_pair	contenía el fichero dado ||| string $filename	count=1
arg_pair	función pretende usarse como ||| string $file_extensions	count=1
function	desencripta usando [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	pdf [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	encuentre un ||| void	count=1
function_name	unas coordenadas nuevas ||| ps moveto	count=1
arg_pair	un grado de ||| array $other_options	count=1
function_name	devuelve el color ||| get color	count=3
function_name	última sentencia insert ||| last insert	count=1
arg_pair	efecto ||| int $y	count=1
arg_pair	como timestamp y ubicación ||| int $timestamp	count=2
arg_pair	un [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=7
return	imagen ||| void	count=1
function_name	del resultado de ||| data	count=1
function_name	especifica el número ||| start	count=1
return	[return] corresponde ||| [return]	count=1
function_name	de forma ||| sybase	count=1
function_name	columna devuelta de una ||| db2	count=1
arg_pair	image usando ||| resource $image	count=1
namespace	relleno usado ||| gmagickdraw	count=1
arg_pair	con ciertas ||| int $field_offset	count=1
function_name	el id dado ||| by id	count=1
function_name	la ||| slide show	count=2
function_name	módulos cargados en el ||| modules	count=1
arg_pair	el de estilo de ||| int $type float $disp_time	count=1
function_name	de mensaje para el ||| imap	count=1
function_name	de la columna ||| oci field	count=1
return	direcciones servicios colas o ||| zmqsocket	count=1
function_name	destino ||| add nameddest	count=1
function_name	después de llamarla varias ||| data source	count=1
arg_pair	de alimentarlo a una ||| array $input_vector	count=1
arg_pair	pajar incluyendo la ||| string $haystack	count=1
return	que ya ha sido ||| void	count=1
return	retorna [return] nuevo ||| [return]	count=1
arg_pair	en un determinado resultado ||| int $field_offset	count=1
namespace	al ||| mongocursor	count=2
arg_pair	de unicode asignados entre ||| callable $callback int $namechoice	count=1
return	se le ha consultado ||| int	count=1
namespace	de string del error ||| error	count=1
function_name	mueve la ||| move to	count=1
function_name	la clase [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	la cadena de ||| sdo_das_xml_document	count=1
function_name	colores ||| ncurses color	count=1
function_name	antepone ||| unshift	count=1
return	el resultado a el ||| int	count=1
function_name	devuelve ||| stream get	count=1
function_name	actual donde se ||| chdir	count=1
function	acción [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	por lo ||| mlt min	count=1
arg_pair	delimiter como delimitador ||| string $null_as	count=1
namespace	a un formato ||| function	count=1
arg_pair	a una ||| float $ury	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] mimeheader [arg_pair_2]	count=3
return	con ||| int	count=2
namespace	de la base de ||| sqlite3	count=1
function_name	de palabras ||| str word	count=1
arg_pair	la de memcached::set() ||| mixed $value int $expiration	count=1
function_name	de cabecera ||| header	count=1
function_name	archivo pdf ||| pdf open file	count=1
arg_pair	por los componentes rgb ||| int $red	count=1
function_name	cargar entidades externas ||| entity loader	count=1
arg_pair	el argumento offset a ||| string $offset	count=1
return	valores ||| void	count=1
function_name	describe la última ||| last	count=1
function_name	error ||| set using exceptions	count=4
return	la lista de ímágenes ||| bool	count=1
namespace	valor predeterminado de ||| directory	count=1
return	el valor numérico del ||| int	count=1
namespace	entonces en lugar ||| rarexception	count=1
arg_pair	campo solicitado ||| string $fieldname	count=1
function_name	realiza una exclución lógica ||| variant xor	count=1
arg_pair	especificada por flag a ||| int $options	count=1
function_name	[function_name_1] mysql ||| [function_name_2] [function_name_1]	count=14
function_name	es ||| prime	count=1
function_name	de columna ||| column number	count=1
function_name	debug output si el ||| memcache debug	count=1
function_name	esta función devuelve ||| get loaded	count=1
return	[return] que ||| [return]	count=1
arg_pair	fila específica ||| int $row	count=1
function_name	una lista de los ||| list	count=1
function_name	crea una nueva instancia ||| create document fragment	count=1
arg_pair	timestamp ||| int $format	count=2
function_name	establece el buffer para ||| stream set	count=1
function_name	el valor ||| close	count=1
function_name	de lecturas a secundarios ||| get slave okay	count=1
function_name	atajo empleando ||| shortcut	count=1
function_name	función devolverá la lista ||| data	count=1
function_name	[function_name_1] el modo ||| [function_name_1] block algorithm [function_name_2]	count=4
return	apuntador de ||| array	count=1
function_name	para la fragmentación ||| highlight regex pattern	count=1
arg_pair	conexión al ||| mysqlnd_connection $connection	count=1
arg_pair	de un fichero ||| int $srcx	count=1
return	ha sido creado con ||| void	count=1
namespace	searchd ||| sphinxclient	count=1
function_name	de registros afectado ||| mssql rows affected	count=1
namespace	y devolver un ||| rarexception	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] image pixel [function_name_2]	count=1
function_name	un número es ||| prime	count=1
function_name	[function_name_1] contornea el ||| [function_name_2] [function_name_1]	count=2
arg_pair	fijo de colores ||| int $numcolors	count=2
function_name	ingres ||| ingres	count=5
function_name	escalar datos en un ||| fann scale input	count=1
function_name	segundo ||| types	count=1
function_name	escala las entradas de ||| fann scale input	count=1
function_name	imagen ||| image	count=69
function_name	la descripción de la ||| cairo surface set device offset	count=1
arg_pair	decir el ||| int $face string $filename	count=1
return	puntero dado ||| string	count=1
namespace	archivo codificado mediante uuencode ||| function	count=1
arg_pair	escribirá una cadena ||| string $data	count=1
function_name	máxima ||| max	count=2
return	última ||| array	count=1
arg_pair	de un tipo específico ||| resource $imap_stream	count=1
function_name	o ||| kernel	count=1
namespace	a todos ||| gearmanclient	count=1
function_name	prioridad de ||| base priority init	count=1
function_name	comentario [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la opción especificada ||| option	count=1
function_name	se muestra inicialmente abierta ||| opened	count=1
arg_pair	de ||| int $width int $height	count=2
namespace	si la posición actual ||| solrdocument	count=1
arg_pair	final de pajar incluyendo ||| string $haystack	count=1
arg_pair	form ||| resource $form array $components	count=1
namespace	define el ||| harupage	count=1
return	unrar ||| void	count=1
namespace	comprueba si ||| solrdocument	count=1
namespace	representación dom ||| domdocument	count=1
function_name	valores de la fila ||| fetch object	count=1
return	que fgetss() ||| string	count=1
function_name	lee atributos y ||| attributes	count=1
function_name	recodificación ||| recode string	count=2
arg_pair	dada por key ||| string $key mixed $value	count=1
return	los caracteres ||| string	count=1
function_name	[function_name_1] compresión de ||| [function_name_2] [function_name_1]	count=2
function_name	en la configuración ||| config	count=1
function_name	está disponible o ||| available	count=1
function_name	«espacio horizontal» que ||| isblank	count=1
function_name	de envío ||| autocommit	count=1
arg_pair	retira espacios en blanco ||| string $character_mask	count=1
arg_pair	intermediarios de ||| zmqsocket $backend	count=1
namespace	intermediarios de direcciones ||| zmqdevice	count=1
function_name	pdf [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	publicación de un field ||| fdf get ap	count=1
function_name	tipo ||| using exceptions	count=2
function_name	apunta conn_handle ||| cubrid commit	count=1
return	el cual incluye los ||| array	count=1
function_name	caché ||| wincache	count=1
function_name	similares al comando ||| tailable	count=1
arg_pair	en ||| bool $flag string $field_override	count=1
namespace	otros caracteres del ||| function	count=1
arg_pair	a ereg_replace() ||| string $replacement	count=1
function_name	documentos ||| set mlt	count=1
function_name	debajo de ||| ps continue	count=1
return	tailable que ||| mongocursor	count=1
arg_pair	imap dado ||| resource $imap_stream string $criteria	count=1
function_name	inicial de subject ||| strcspn	count=1
return	basada en paleta ||| bool	count=1
function_name	la imagen de ||| compare image	count=1
function_name	de filas eliminadas ||| db2 num rows	count=1
return	un fichero por ||| resource	count=1
arg_pair	señala [arg_pair] creado ||| [arg_pair]	count=1
function_name	contiene ||| chr	count=1
function_name	el paquete wddx ||| wddx packet	count=2
return	se encuentra disponible ||| int	count=1
function	[function_name_1] la database ||| [function_name_1] string $database [arg_pair_2]	count=2
function_name	no ||| set mlt min doc	count=1
function_name	devuelve información sobre el ||| info	count=1
function_name	tamaño comprimido de ||| zip entry compressedsize	count=1
function_name	relaxng del [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	de compatibilidad que afecta ||| function	count=1
namespace	el momento ||| function	count=1
function_name	frecuencia en la que ||| mlt min	count=1
function_name	paso [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	pone [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	quickhashintstringhash ||| quickhashintstringhash	count=1
function_name	usando una función ||| uksort	count=1
function_name	[function_name_1] bajo la ||| [function_name_2] [function_name_1]	count=4
function_name	abierto ||| get	count=1
arg_pair	verifica el texto dado ||| string $signature string $plaintext	count=1
return	haya ||| int	count=1
function_name	de la imagen ||| set	count=1
function_name	tamaño [function_name] paso durante ||| [function_name] rprop increase	count=1
arg_pair	el archivo de base ||| array $options	count=1
function_name	número de i-nodo de ||| inode	count=1
function_name	geoip_country_code_by_name() devolverá ||| country code by	count=1
function_name	la descripción de la ||| cairo pattern get rgba	count=1
arg_pair	php del texto que ||| resource $handle	count=1
namespace	array multidimensional por ||| function	count=1
function_name	error de ||| bzerrstr	count=1
function_name	el número de tendencias ||| bias array	count=1
function_name	de errores del usuario ||| errors	count=1
namespace	por las cadidatas ||| function	count=1
namespace	los perfiles del objeto ||| gmagickdraw	count=1
function_name	de sybase_fetch_row() que utiliza ||| sybase fetch assoc	count=1
arg_pair	consulta result_id en una ||| resource $result_id	count=1
arg_pair	con un algoritmo ||| float $beta int $channel	count=1
function_name	los pares de ||| repl	count=1
namespace	el número de filas ||| sqlite3	count=1
function_name	varias ||| source	count=1
function_name	número de filas ||| start	count=1
function_name	un alias de solrdocument::clear() ||| reset	count=1
return	son similares al comando ||| mongocursor	count=1
arg_pair	usuario de la conexión ||| string $user	count=1
function_name	de la consulta siguiente ||| cubrid next result	count=1
arg_pair	el texto text con ||| string $text	count=1
function_name	recupera información sobre ||| get	count=1
namespace	de la imagen original ||| gmagick	count=1
function_name	conexiones de atajo empleando ||| shortcut	count=1
function_name	sólo si ||| set using	count=1
function_name	número de patrones ||| fann length	count=1
function_name	nodo ||| is	count=1
return	la clase domnodelist ||| domnodelist	count=1
function_name	a la representación que ||| to	count=1
arg_pair	un ||| resource $pdfdoc string $name	count=1
function_name	descripción de la ||| cairo pattern get filter	count=1
function_name	de estancamiento de candidatas ||| candidate stagnation	count=1
function_name	documentos como ||| set mlt	count=1
function_name	obtiene todas las cabeceras ||| headers	count=2
arg_pair	que fgetss() intenta eliminar ||| int $length	count=1
arg_pair	argumento offset a la ||| resource $lob_identifier int $offset	count=1
function_name	compara ||| gmp cmp	count=1
arg_pair	el string str ||| string $option	count=1
function_name	definida ||| uasort	count=1
function_name	descripción de ||| cairo pattern get extend	count=1
arg_pair	una colección de ||| array $docs bool $overwrite	count=1
function_name	xml parser ||| xml set	count=1
arg_pair	aclarando ||| int $width	count=1
function_name	[function_name] de la ||| get [function_name]	count=2
function_name	acepta uno dos ||| number format	count=1
arg_pair	desde el archivo ||| string $filename array $options	count=1
return	array con el mensaje ||| string	count=1
namespace	comporta de ||| function	count=1
function_name	la descripción ||| cairo matrix transform point	count=1
return	el directorio virtual ||| string	count=1
return	sybase_connect() con ||| resource	count=1
function_name	parada empleada durante ||| stop	count=1
arg_pair	con clave ||| string $key	count=1
function_name	biblioteca openssl ||| openssl	count=1
arg_pair	por su ||| string $name int $flags	count=1
namespace	que se defina sobre ||| zmqdevice	count=1
function_name	otro ||| add kernel	count=2
function_name	menos tantos documentos ||| doc	count=1
function_name	[function_name_1] xml del ||| [function_name_2] [function_name_1]	count=8
function_name	si y ||| set	count=1
function_name	temporal ||| uudecode all	count=2
function_name	false cuando se ha ||| cubrid	count=1
namespace	se comporta de ||| function	count=2
arg_pair	disponible la lista ||| resource $psdoc	count=1
arg_pair	ciertas ||| resource $result int $field_offset	count=1
function_name	agregar parámetros ||| add required	count=1
function_name	averigua si una ||| is registered	count=2
namespace	proceso abierto mediante ||| function	count=1
function_name	ser usado para ||| set session	count=2
function_name	basándoes ||| lookup prefix	count=1
arg_pair	crea un efecto ||| int $height	count=1
arg_pair	bit de start hacia ||| gmp $a int $start	count=2
function_name	[function_name_1] byte en ||| [function_name_2] [function_name_1]	count=6
function_name	descripción de ||| cairo pattern create linear	count=1
namespace	que contiene el código ||| function	count=1
function_name	para incrementar o ||| set	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] iv [function_name_2]	count=1
arg_pair	señala [arg_pair] ||| [arg_pair]	count=1
function_name	nueva ||| new	count=3
arg_pair	empleando delimiter como ||| string $delimiter	count=1
function_name	cursor en lugar ||| cursor	count=1
function_name	logaritmo natural para cada ||| ln	count=1
function	[function_name_1] un nombre ||| [function_name_1] value enum [arg_pair_2]	count=3
arg_pair	la versión ||| string $msgid1	count=1
function_name	envía la acción con ||| action	count=1
function_name	más marcadores de ||| db2 prepare	count=1
namespace	que corresponde ||| function	count=3
return	en la ||| solrquery	count=1
function_name	añade definición rra por ||| add archive	count=1
arg_pair	se encuentra disponible ||| resource $psdoc	count=1
function_name	entidades ||| set external entity loader	count=2
arg_pair	ruta para el dominio ||| string $domain string $directory	count=1
function_name	destruye el valor ||| offset unset	count=1
function_name	función crea una ||| create	count=4
return	advertencia esta función ||| int	count=1
function_name	de etiqueta dado ||| tag	count=1
arg_pair	la primera ocurrencia ||| string $needle	count=1
function_name	case ||| case	count=1
function_name	el coseno hiperbólico para ||| cosh	count=1
function_name	en la que las ||| min doc frequency	count=1
function_name	el proveedor ||| required	count=1
function_name	como ||| min	count=1
namespace	que esta comparación es ||| function	count=1
return	la instancia ||| yaf_application	count=1
function_name	nombre de la función ||| function name	count=1
return	borra un ||| resource	count=1
function_name	la paginación ldap ||| ldap	count=1
arg_pair	filtros ||| int $read_write	count=2
function_name	frecuencia en la que ||| doc	count=1
function_name	su elemento documento ||| document	count=1
return	puntero de el fichero ||| int	count=1
function_name	[function_name_1] mínima a ||| [function_name_1] [function_name_2]	count=5
function_name	usuario) ||| restore	count=2
function_name	el número de ||| imap msgno	count=1
function_name	el mensaje ||| message	count=2
function_name	menos tantos documentos como ||| set	count=1
function_name	tiempo de espera de ||| cubrid set query timeout	count=1
function_name	número límite de ||| limit	count=1
function_name	reinicializa el evento ||| re init	count=1
function_name	de una entrada ||| zip entry	count=1
return	php del ||| string	count=1
arg_pair	para lectura mediante ibase_blob_open() ||| resource $blob_handle	count=1
function_name	petición http ||| request	count=2
function_name	temporal ||| uudecode	count=1
function_name	imagen ||| load image	count=1
namespace	especificados por ||| function	count=1
function	descripción de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
arg_pair	modo de acceso mode ||| int $mode int $pri	count=1
function_name	con ||| put var	count=1
namespace	objeto imagick ||| imagick	count=8
arg_pair	del fichero ||| string $filename	count=1
function_name	factor de escala ||| ps scale	count=1
function_name	frecuencia en la que ||| mlt min doc frequency	count=1
arg_pair	estructuras de ||| int $table	count=1
function_name	almacena datos ||| file	count=1
arg_pair	secuencia de mensaje para ||| resource $imap_stream	count=1
function_name	e indexa numéricamente el ||| array values	count=1
return	con el contenido ||| array	count=1
function_name	devuelve el número ||| imap	count=1
function_name	descripción ||| cairo pattern create rgb	count=2
namespace	compatibilidad que afecta a ||| function	count=1
namespace	una sentencia ||| sqlite3stmt	count=1
function_name	de escala de entrada ||| input	count=1
function_name	escribe una cadena ||| ifxus write	count=1
function_name	género correspondiente ||| genre	count=1
function_name	fichero de ||| types	count=1
arg_pair	nueva definición ||| float $height float $xstep	count=1
function_name	establece [function_name_2] ||| [function_name_1] candidate [function_name_2]	count=3
function_name	nombre del servidor anfitrión ||| mysql get host info	count=1
arg_pair	de unicode propertyaliases.txt ||| int $namechoice	count=1
arg_pair	empleando delimiter ||| string $delimiter	count=1
arg_pair	el específico link_identifier ||| string $database_name resource $link_identifier	count=1
namespace	trabajo y ||| gearmanworker	count=1
arg_pair	una respuesta ||| string $key	count=1
function_name	el ||| pdf	count=1
arg_pair	del archivo ||| string $filename string $name	count=1
namespace	la sentencia sql más ||| sqlite3	count=1
function_name	acción ||| gupnp device action callback	count=1
arg_pair	ningún caracter de mask ||| string $subject string $mask	count=1
namespace	indica si ||| tidynode	count=1
function_name	la descripción de la ||| cairo pattern create rgb	count=1
arg_pair	modo wsdl o modo ||| mixed $wsdl	count=1
arg_pair	una matriz asociativa ||| string $date	count=1
arg_pair	eliminar cualesquiera bytes ||| int $length	count=1
function_name	función crea ||| create processing instruction	count=1
function_name	esta función devolverá ||| source	count=1
function_name	copia un [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	actual fuente usada ||| get current font	count=2
arg_pair	una respuesta ||| string $content	count=1
namespace	activación empleadas [namespace] ||| [namespace]	count=2
namespace	inactividad de ||| gearmanclient	count=1
function_name	el proveedor ||| parameter	count=1
arg_pair	de conexión link_identifier especificado ||| resource $link_identifier	count=1
function_name	blob/clob ejecutando la ||| cubrid lob	count=1
namespace	método reflejado ||| reflectionmethod	count=1
function_name	relevancia del término de ||| set mlt boost	count=1
arg_pair	unicode por su ||| string $charactername int $namechoice	count=1
arg_pair	el estilo ||| int $first_page int $style	count=1
function_name	directorio virtual actual donde ||| dbplus	count=1
function_name	biblioteca ||| using	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() durante ||| int $max_neurons int $neurons_between_reports	count=1
function_name	oauth ||| required	count=1
function_name	von einer mime ||| iconv mime encode	count=1
return	su almacenamiento en ||| bool	count=1
function_name	y ||| using exceptions	count=4
function_name	si el argumento ||| using	count=1
namespace	clase ||| reflectionclass	count=5
function_name	la ||| curl	count=1
return	función definida por el ||| void	count=2
function_name	determina lo ||| fann get	count=1
function	es usada [function_name_1] [arg_pair_2] etiqueta ||| [function_name_1] tag [arg_pair_2]	count=2
function_name	por lo menos tantos ||| doc frequency	count=1
function_name	lee ||| uudecode	count=1
function_name	el siguiente resultado ||| next result	count=2
namespace	la base de datos ||| sqlite3	count=1
arg_pair	una ||| string $key string $value	count=1
function_name	obtiene el tamaño ||| filesize	count=1
function_name	[function_name_1] base ||| [function_name_2] [function_name_1]	count=6
arg_pair	cadena str con ||| string $str	count=1
function_name	spl ||| spl	count=1
namespace	en el [namespace] ||| [namespace]	count=2
function_name	array superglobal $_session ||| session encode	count=1
arg_pair	identificador de resultado indicado ||| resource $result	count=1
arg_pair	modo wsdl o ||| mixed $wsdl	count=1
return	interno ||| bool	count=2
namespace	motivo por ||| function	count=2
function_name	establece ||| px set	count=2
arg_pair	de la imagen ||| int $width	count=1
arg_pair	un efecto de ||| int $height	count=1
function_name	[function_name] del entorno ||| get [function_name]	count=1
function	[function_name_1] clientes ||| [arg_pair_2] [function_name_1]	count=1
function_name	longitud máxima de una ||| len	count=1
function_name	una ||| exceptions	count=1
arg_pair	establece un ||| int $dictionary_link	count=1
function_name	cadena ||| imap append	count=1
return	base de datos que ||| int	count=1
arg_pair	línea [arg_pair] todas las ||| [arg_pair]	count=1
function_name	método obtiene ||| get	count=1
function_name	[function_name_1] rra por ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] píxel ||| [function_name_1] [function_name_2]	count=2
namespace	devuelve el momento actual ||| function	count=1
return	de ||| mixed	count=1
namespace	trazado [namespace] ||| [namespace]	count=2
function_name	de atajo empleando un ||| shortcut array	count=1
function_name	discontinuidad actual ||| pdf setdash	count=1
function_name	en la ||| mlt min	count=1
function_name	insertada ||| insert	count=1
arg_pair	conversión de variante ||| variant $variant	count=1
function_name	añade a ||| add	count=1
function_name	del disco ||| file	count=2
function_name	colores de ||| color	count=1
function_name	de grupos ||| getgroups	count=1
function_name	pdf con información variable ||| pdf	count=1
arg_pair	modo ||| bool $mode	count=1
function_name	se ||| ps	count=1
namespace	el tipo ||| function	count=1
function_name	[function_name_1] épocas que ||| [function_name_2] [function_name_1]	count=6
function_name	de configuración dado ||| ini	count=1
return	closedir() solo que el ||| void	count=1
function_name	la asignación ||| apc sma	count=1
arg_pair	de botón tridimensional ||| int $height	count=1
function_name	para ||| add kernel	count=2
function_name	de error de ||| error	count=1
function	para el [arg_pair_2] ||| [function_name_1] notation decl handler [arg_pair_2]	count=1
function_name	error una excepción ||| using exceptions	count=1
function_name	en utf-8 ||| imap utf8	count=1
function_name	reintentos en caso ||| sybase deadlock retry count	count=1
return	número ||| solrquery	count=1
function_name	en ||| ltrim	count=1
function_name	el pid del servidor ||| pid	count=1
return	pid del ||| int	count=1
arg_pair	valores en assoc_array ||| int $options	count=1
return	efecto conseguido [return] ||| [return]	count=3
function_name	vincula [function_name] ||| [function_name]	count=3
namespace	definidas mediante configuraciones ||| yaf_router	count=1
function_name	datos ||| mailparse uudecode all	count=2
function	[function_name_1] left top ||| [function_name_1] float $left [arg_pair_2]	count=1
function_name	del byte actual en ||| get current byte	count=1
function_name	devuelve las métricas de ||| get	count=1
function_name	[function_name_1] el límite ||| [function_name_1] bit [function_name_2]	count=1
function_name	un guid ||| guid	count=1
function_name	sido creado con el ||| add	count=1
function_name	limpia ||| gc	count=1
function	[function_name_1] columna ||| [arg_pair_2] [function_name_1]	count=1
function_name	el formateador ||| formatter	count=1
function_name	lee ||| read string	count=1
return	la cromaticidad como ||| array	count=1
function_name	indicando ||| exceptions	count=1
function_name	de esquema en un ||| types	count=1
function_name	el uso de ||| proc get status	count=1
function_name	a sybase_connect() con dos ||| pconnect	count=1
function_name	definidos por el usuario ||| control point browse	count=2
function_name	basado en des ||| crypt	count=1
function_name	usa la prueba ||| prob	count=1
function_name	color actual del trazo ||| rgbstroke	count=1
arg_pair	php var_array al parámetro ||| array $var_array	count=1
arg_pair	de input ||| array $input	count=1
function_name	apuntador de ||| mailparse uudecode	count=1
function_name	obtiene la transformación actual ||| get text matrix	count=1
function_name	de memoria caché de ||| wincache	count=1
function_name	si un número es ||| gmp	count=1
function_name	proceso del proceso actual ||| setproctitle	count=1
function_name	de bézier desde el ||| pdf curveto	count=1
arg_pair	es a**r)/gamma r ||| float $r	count=1
arg_pair	memcached::set() con la excepción ||| mixed $value int $expiration	count=1
arg_pair	el parámetro name ||| string $name	count=1
function_name	un socket ||| socket accept	count=1
return	mensaje de texto ||| string	count=1
function_name	la clase simplexml y ||| simplexml	count=1
function_name	la zona horaria correspondiente ||| time zone by country and	count=1
function_name	caja y establece la ||| set	count=1
return	máximo de inactividad de ||| int	count=1
function_name	cubrid_num_rows() ||| num	count=1
arg_pair	fgetss() intenta eliminar ||| resource $handle	count=1
arg_pair	relleno con color en ||| int $y2 int $color	count=1
function_name	la lista de parámetros ||| ps	count=1
function_name	[function_name] retrollamada de ||| set idle [function_name]	count=2
arg_pair	el parámetro plaintext con ||| string $plaintext	count=1
return	línea de base ||| int	count=1
function_name	esta función [function_name] ||| [function_name]	count=7
return	posee ||| mongocursor	count=1
arg_pair	parecida a sybase_connect() con ||| string $username	count=1
function_name	y la inserta ||| insert	count=1
arg_pair	estar ||| string $str	count=1
return	y devolver un ||| void	count=1
arg_pair	las restricciones ||| string $field_override	count=1
namespace	que contenía el ||| function	count=1
function_name	nuevo archivo pdf ||| pdf	count=1
function_name	letra espaciada ||| text width	count=1
arg_pair	esta función realiza ||| int $options	count=1
arg_pair	pequeño ||| resource $ann float $rprop_delta_min	count=1
arg_pair	de la conexión ||| mysqlnd_connection $connection	count=1
function_name	obtener el ||| get	count=1
arg_pair	valores largos ||| float $min_savings	count=1
namespace	que ||| mongocursor	count=1
namespace	diccionario indicado ||| function	count=1
function_name	al ||| setgid	count=1
function_name	formato utf-32 ||| pdf utf32	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] phar [function_name_2]	count=2
function_name	obtiene información sobre ||| get	count=1
namespace	bordes de la ||| gmagick	count=2
namespace	archivo phar utilizando ||| phar	count=2
arg_pair	partir de un identificador ||| resource $result_id	count=1
function_name	[function_name] result_identifier ||| [function_name]	count=1
arg_pair	fichero referenciado por handle ||| int $offset	count=1
arg_pair	del acs ||| string $servicename string $machine	count=1
return	regexiterator::setflags() para [return] lista de ||| [return]	count=1
function_name	database ||| database	count=1
namespace	de botón ||| gmagick	count=1
function_name	de funciones ||| functions count	count=1
function_name	de primer plano y ||| ncurses color set	count=1
function_name	disponible la ||| memory image	count=1
function_name	ítem ||| decrement by key	count=1
function_name	si un número ||| gmp prob prime	count=1
function_name	elimina ||| del	count=1
function_name	de flujo con ||| stream	count=1
function_name	de color especificado como ||| get color	count=1
arg_pair	correspondientes a los nombres ||| array $ctorparams int $row	count=1
function_name	un identificador único ||| spl object hash	count=1
namespace	datos de ||| function	count=1
function_name	último error [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	de variante ||| variant $variant	count=1
namespace	conexiones [namespace] de memcache ||| [namespace]	count=1
arg_pair	para transformar str1 en ||| string $str1	count=1
namespace	el uso de ||| function	count=1
function_name	gamma ||| imagegammacorrect	count=1
function_name	con ||| pconnect	count=1
function_name	lista de parámetros ||| memory	count=1
return	cualquier abstracción ||| zmqsocket	count=1
function_name	simulado ||| raiseimage	count=1
arg_pair	memcached::getmulti() ||| int $flags	count=1
arg_pair	a la ruta corriente ||| float $ray	count=1
function_name	proceso actual ||| setproctitle	count=1
function_name	capas ||| sparse	count=1
function_name	exporta el contenido ||| export	count=1
function_name	de ||| using	count=2
function_name	lista de los métodos ||| methods	count=1
function_name	información sobre un ||| proc	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] tablename [arg_pair_2]	count=1
arg_pair	conexión especificado ||| resource $connection	count=1
function_name	en un ||| add types	count=1
namespace	trabajo ||| gearmanworker	count=3
function_name	las funciones [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	obtiene el constructor ||| get	count=1
arg_pair	o cualquier abstracción ||| zmqsocket $backend	count=1
namespace	del inicio de ||| function	count=1
function_name	proveedor ||| required parameter	count=2
function_name	en por lo menos ||| set mlt min doc	count=1
function_name	lugar de ||| exceptions	count=1
return	al valor ||| void	count=1
function_name	una lista de ||| broker list	count=1
function_name	es usada para establecer ||| cubrid set	count=1
function_name	el proveedor ||| add	count=1
namespace	para las solicitudes ||| oauth	count=1
function_name	la descripción de ||| cairo pattern create rgba	count=1
function_name	dice ||| mcrypt enc	count=1
function_name	de instancia xml dada ||| load	count=1
arg_pair	un documento ||| resource $fdf_document	count=1
function_name	la consulta siguiente ||| cubrid next	count=1
function_name	miniatura de ||| thumbnail	count=1
arg_pair	un umbral de ||| float $threshold	count=1
arg_pair	arrays con una ||| array $array1	count=3
function_name	disposición ||| getimagedispose	count=1
return	de cualquier error ||| string	count=1
function_name	obtiene una lista de ||| openssl get	count=1
arg_pair	columna especificada en el ||| resource $stmt mixed $column	count=3
function	intersección [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	todos los procedimientos en ||| odbc procedures	count=1
function_name	la frase de consulta ||| use phrase	count=2
function_name	devuelve ||| entry filesize	count=2
function_name	retropropagación desde ||| create from	count=1
namespace	directorio o ||| function	count=2
arg_pair	archivo dest ||| string $dest	count=1
return	se van ||| solrquery	count=1
function_name	actual es asp ||| is asp	count=1
function_name	devolverá la lista ||| data source	count=1
function_name	añade un enlace ||| add	count=1
function	de prioridad [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	[return] descripción ||| [return]	count=1
function_name	valor predeterminado de ||| close	count=1
return	píxel en ||| bool	count=1
function_name	casillas de ||| newt checkbox tree	count=1
function_name	el certificado y su ||| pkcs7 sign	count=1
function_name	usando tres parámetros: ||| xyz	count=1
return	blanco ||| string	count=1
function_name	el número de ||| mysqli num	count=1
function_name	diferentes opciones ||| assert options	count=1
namespace	después de ||| splfixedarray	count=1
function_name	ha sido cambiado ||| mtime	count=1
return	el motor ||| void	count=1
return	advertencias ||| void	count=1
function_name	campos sql de informix ||| ifx fieldproperties	count=1
arg_pair	de salto de string ||| string $break	count=1
function_name	espacio de ||| is default	count=1
namespace	espacio ||| domnode	count=1
function_name	formulario [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	los ||| uudecode all	count=2
arg_pair	a fgets() excepto que ||| resource $handle	count=1
function	unos [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	devuelve el siguiente ||| fetch	count=1
function_name	usarse para almacenar información ||| set metadata	count=1
function_name	las palabras ||| set mlt min	count=1
function_name	de archivo dado y ||| all	count=1
function_name	la estructura ||| imap fetchstructure	count=1
function_name	establece [function_name] ||| set external [function_name]	count=1
function_name	bit empleado durante ||| bit	count=1
function_name	encuentra disponible la lista ||| open	count=1
return	error de cualquier ||| string	count=1
function_name	[function_name] modificadas ||| ingres num [function_name]	count=1
function_name	candidatas antes de ||| cascade	count=2
arg_pair	path2 ||| string $path2	count=1
function_name	el comentario ||| comment	count=4
return	lista de parámetros ||| int	count=1
function_name	máscara de recorte de ||| clip mask	count=2
return	en las coordenadas ||| bool	count=2
arg_pair	defina sobre las ||| zmqsocket $backend	count=1
function_name	la extensión ||| type to extension	count=1
function_name	[function_name_1] resolver ||| [function_name_1] [function_name_2]	count=1
function_name	devuelve el último error ||| error string	count=1
function_name	dio_read() lee ||| dio read	count=1
function_name	imágenes en una sóla ||| images	count=1
namespace	de mongo ||| mongoid	count=1
function_name	el término de ||| terms lower bound	count=1
namespace	el tipo o ||| function	count=1
arg_pair	valor específico ||| mixed $value	count=1
function_name	el punto de control ||| control point callback	count=1
arg_pair	del ||| int $font float $fontsize	count=1
function_name	fila de resultados ||| fetch	count=1
function_name	palabras que ||| doc frequency	count=1
arg_pair	secuencia del mensaje dado ||| resource $imap_stream int $msg_number	count=1
function_name	la información de ||| pdf info	count=2
function_name	nueva csr ||| openssl csr new	count=2
arg_pair	obtiene un array de ||| resource $imap_stream string $ref	count=1
return	los nombres de todas ||| array	count=1
function_name	propio sobre cualquier flujo ||| stream filter	count=1
function_name	para almacenar ||| set metadata	count=1
function_name	mínima del servidor ||| min server	count=1
function_name	los caracteres que aparecen ||| addcslashes	count=1
return	cantidad especificada en ||| bool	count=1
function_name	de ingres procedimiento al ||| ingres	count=1
function_name	[function_name_1] las salidas ||| [function_name_2] [function_name_1]	count=1
namespace	del documento cuando ||| solrdocument	count=1
function_name	[function_name_1] [function_name_2] y ||| [function_name_1] [function_name_2] resource $fd	count=3
function_name	das xml que ya ||| types	count=1
function_name	abre el [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve lo mismo que ||| get	count=1
function_name	[function_name_1] está disponible ||| [function_name_1] [function_name_2]	count=1
function_name	las conexiones de salida ||| fann get	count=1
return	dirección establecida en ||| bool	count=2
namespace	se dibuja con ||| function	count=1
arg_pair	a sybase_connect() con dos ||| string $charset	count=1
namespace	a los ||| function	count=1
function_name	después de llamarla varias ||| odbc data source	count=1
namespace	característica conocia ||| mongocursor	count=1
function_name	del esquema solicitado ||| cubrid schema	count=1
arg_pair	un string str ||| string $str	count=1
function	campos en [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	de un caracter que ||| function	count=1
function_name	la descripción de la ||| color stop rgb	count=1
function_name	documentos ||| doc	count=1
function_name	variable de post ||| post	count=1
arg_pair	advertencia esta función ||| resource $psdoc	count=1
namespace	colección ||| oci-collection	count=2
function_name	es true ||| using	count=1
function_name	mueve [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	los errores de imap ||| imap	count=1
function_name	cliente establecidas internamente ||| options	count=1
function_name	una ||| filesize	count=1
arg_pair	entradas y un conjunto ||| resource $ann	count=1
function_name	acepta ||| number	count=1
function_name	intenta borrar ||| win32 delete	count=1
arg_pair	php del ||| int $length	count=1
function_name	archivo ||| uudecode	count=3
function_name	[function_name] máximo ||| get mlt max [function_name] query	count=1
namespace	característica conocia como ||| mongocursor	count=1
arg_pair	pretende usarse como ||| string $file_extensions	count=1
function_name	proveedor oauth ||| required	count=1
namespace	carácter base ||| intlchar	count=1
function_name	la función ||| prime	count=1
arg_pair	y su asignación ||| resource $id array $config	count=1
function_name	desencripta ||| decrypt	count=1
arg_pair	una tarea ||| mixed $context string $unique	count=3
return	graphicsmagick como ||| string	count=1
function_name	base [function_name] universal ||| [function_name]	count=1
function_name	a llamar cuando ||| callback	count=1
function_name	[function_name_1] de línea ||| [function_name_2] [function_name_1]	count=1
namespace	nodo es ||| tidynode	count=1
arg_pair	un fichero y cambia ||| resource $font_index	count=1
function_name	vincular el array de ||| bind array	count=1
arg_pair	el domain ||| string $codeset	count=1
return	en un servidor ||| bool	count=4
arg_pair	la ||| gmp $a	count=2
function_name	un documento xml ||| save xml	count=1
function_name	pública ||| openssl public encrypt	count=1
function_name	[function_name_1] de entrenamiento ||| [function_name_1] [function_name_2]	count=1
function	la última [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] encode [function_name_2]	count=14
function_name	certificado y ||| sign	count=1
function_name	una única función ||| add kernel	count=1
function_name	elimina el identificador ||| shm remove	count=1
function_name	un array ||| get array	count=1
function_name	la relación dada ||| dbplus	count=2
namespace	devuelve una cadena ||| gmagickdraw	count=1
arg_pair	de un campo es ||| resource $fdf_document	count=1
function_name	obtiene el nombre del ||| name	count=1
function_name	operaciones memcached::*bykey() ||| server by	count=1
namespace	nueva [namespace] ||| [namespace]	count=1
namespace	o indexado o ambos ||| sqlite3result	count=1
function_name	propiedad gravedad global para ||| get gravity	count=1
return	una nueva sesión o ||| bool	count=1
arg_pair	carácter unicode por su ||| int $namechoice	count=1
function_name	uso de ||| proc get status	count=1
namespace	se utiliza ||| function	count=1
function_name	extensiones de ||| autoload extensions	count=1
function	una intersección [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	método ||| mongocursor	count=2
function	[function_name_1] una ||| [function_name_1] urlannotation [arg_pair_2]	count=1
function_name	que almacena datos de ||| from file	count=1
function_name	[function_name_1] de épocas ||| [function_name_2] [function_name_1]	count=10
function_name	obtiene la información de ||| get	count=1
arg_pair	datagrama ||| string $errstr int $flags	count=1
function_name	u otros caracteres del ||| ltrim	count=1
function_name	ideal especificado por ||| regex slop	count=1
namespace	la cromaticidad como una ||| gmagick	count=1
function_name	filas afectadas por la ||| rows fetched	count=1
arg_pair	las capas ||| zmqsocket $frontend	count=1
arg_pair	cres un nuevo hash ||| string $contents	count=1
function	envía [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	de la fecha ||| date parse	count=1
function_name	espera de la ||| cubrid set query timeout	count=1
arg_pair	a sybase_connect() ||| string $servername	count=1
namespace	por sqlsrv_begin_transaction() incluye ||| function	count=1
namespace	datos por ||| function	count=1
return	pueden ||| zmqsocket	count=1
return	de archivo ||| array	count=1
function_name	devuelve el ||| imap	count=1
function_name	de bloque del ||| get algo block	count=1
function_name	la columna ||| oci field	count=1
arg_pair	del archivo dado ||| resource $ftp_stream string $remote_file	count=1
function_name	[function_name_1] [function_name_2] xml con soporte para ||| xml [function_name_2] [function_name_1]	count=2
arg_pair	esta función ||| int $options	count=1
return	basada en un ||| bool	count=1
arg_pair	cualquier píxel que coincida ||| mixed $target mixed $fill	count=1
arg_pair	fgetss() intenta eliminar ||| resource $handle int $length	count=1
function_name	ignoradas ||| mlt	count=1
function_name	de filas ||| sybase num rows	count=1
function_name	los nombres de campos ||| field names	count=1
function_name	diferentes opciones de ||| assert options	count=1
function_name	tiene [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	si solrquery::sethighlightalternatefield() se ||| int $fieldlength	count=1
function_name	[function_name] y ||| crop thumbnail [function_name]	count=3
function_name	de datos establecida ||| dba	count=1
arg_pair	analizador ||| string $smiley	count=1
namespace	[namespace] el usuario ||| [namespace]	count=2
arg_pair	de un ||| resource $link_identifier	count=1
namespace	devuelto por el ||| function	count=1
function_name	[function_name_1] el nonce ||| [function_name_1] [function_name_2]	count=1
namespace	a fgets() excepto ||| function	count=1
function_name	[function_name_1] el iterador ||| [function_name_2] [function_name_1]	count=4
namespace	color ||| gmagickdraw	count=1
return	aclarando ||| void	count=1
function_name	rrdgraph::__construct() ||| verbose	count=1
function_name	función devuelve ||| get loaded extensions	count=1
function_name	han sido establecidas ||| options	count=1
function_name	diferentes opciones de la ||| assert options	count=1
return	parecida a sybase_connect() con ||| resource	count=1
return	con los ajustes para ||| array	count=1
function	inverso del [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	cuando se anota ||| string	count=1
arg_pair	cubrid_set_drop() ||| string $attr_name string $set_element	count=1
function_name	el ||| dbplus	count=1
function_name	encuentra si la extensión ||| extension	count=1
arg_pair	[arg_pair_1] base ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	define los encabezados a ||| soap headers	count=1
return	información ||| array	count=2
function_name	oracle ||| oci bind by	count=1
arg_pair	punto medio enx y ||| float $beta	count=2
arg_pair	la mayoría de ||| string $character_set	count=1
arg_pair	el fichero dado ||| int $flags	count=1
return	directorio virtual actual donde ||| string	count=1
return	que se ||| solrquery	count=1
function_name	añade varios componentes al ||| newt form add components	count=1
namespace	esquema en un das ||| sdo_das_xml	count=1
function_name	formato utf-8 ||| utf8	count=1
function_name	usado para guardar ||| save path	count=1
function_name	define el ||| show	count=1
return	valores usando una ||| void	count=1
function_name	estado de la tarea ||| do	count=1
function	[function_name_1] algoritmo especificado ||| [arg_pair_2] [function_name_1]	count=1
function_name	del servicio y ||| start service	count=1
function_name	id dado ||| get element by id	count=1
function	[function_name_1] de a ||| [arg_pair_2] [function_name_1]	count=2
return	una matriz con ||| array	count=1
function_name	lecturas [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	información detallada acerca de ||| info	count=1
function_name	establecer los colores de ||| set	count=1
function_name	iterador interno ||| inner iterator	count=4
namespace	enlace simbólico nombrado por ||| function	count=1
function_name	máximo de caracteres del ||| highlight max	count=2
arg_pair	una ||| resource $result_id int $row_number	count=1
function_name	proceso ||| proc get	count=1
function_name	por lo menos ||| min doc frequency	count=1
function_name	de archivo ||| mailparse	count=1
function_name	las consultas de ||| facet queries	count=1
arg_pair	path1 ||| string $path1	count=1
namespace	la prueba probabilística de ||| function	count=1
arg_pair	las ||| int $font	count=1
function_name	ser entrenadas las conexiones ||| get cascade	count=1
arg_pair	imágenes de color ||| resource $image bool $blendmode	count=1
namespace	si el [namespace] especficiado es ||| [namespace]	count=1
function_name	definidos por el ||| gupnp control point browse	count=1
return	ya ||| void	count=1
arg_pair	el texto ||| string $text	count=2
function_name	de una línea a ||| line	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image background [function_name_2]	count=4
return	enviar en las peticiones ||| bool	count=1
function_name	de rutinas de interoperabilidad ||| stub	count=1
return	argumento es true ||| void	count=1
function_name	una ||| add kernel	count=2
function_name	proceso abierto ||| get status	count=1
function_name	das xml ||| add	count=1
namespace	php del ||| function	count=1
namespace	zip nuevo ||| ziparchive	count=1
function_name	imprime ||| show	count=1
namespace	la versión [namespace] ||| [namespace]	count=1
function_name	la descripción ||| cairo matrix	count=1
arg_pair	bordes de la ||| int $width int $height	count=1
namespace	documento ||| harudoc	count=5
function_name	de entrada/salida del ||| tidy	count=1
function_name	[function_name_1] documento basándose ||| [function_name_1] [function_name_2]	count=1
function_name	el rango [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	carga una ||| string $filename int $width	count=1
function_name	entrenamiento ||| fann get	count=2
arg_pair	una colección ||| bool $overwrite	count=1
function_name	nuevo iterador desde una ||| iterator	count=1
function_name	capas de mensaje y ||| construct	count=1
namespace	con las ||| gmagick	count=1
namespace	o escritura ||| function	count=2
function_name	http en la ||| request	count=1
function_name	[function_name_1] índice ausente ||| [function_name_1] [function_name_2]	count=4
function_name	lo menos tantos ||| mlt min doc	count=1
function_name	truncates a large object ||| pg lo	count=1
function_name	establece el valor de ||| set status	count=1
function_name	[function_name_1] especificados ||| [function_name_2] [function_name_1]	count=4
arg_pair	cubrid y guarda ||| resource $lob_identifier	count=1
return	al estado ||| int	count=1
function_name	si y sólo si ||| set using	count=1
return	[return] con el ||| [return]	count=1
function_name	modo especificado es ||| mode	count=1
function	[function_name_1] [arg_pair_2] ||| external [function_name_1] name [arg_pair_2]	count=2
function_name	estilo ||| set slide show	count=2
namespace	del objeto imagick ||| imagick	count=2
arg_pair	de arrays con ||| array $array1 array $array2	count=1
arg_pair	para usar ||| resource $image	count=1
arg_pair	efectos de capa ||| int $effect	count=1
namespace	por parámetro que ||| function	count=1
function_name	más reciente de la ||| last	count=1
arg_pair	esta función pretende usarse ||| string $file_extensions	count=1
function_name	nombre largo ||| frame long name	count=1
namespace	php del texto que ||| function	count=1
arg_pair	la página ||| int $type float $disp_time	count=1
function_name	lo ||| set	count=1
function	entrada descrita [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	[function_name_1] semáforo ||| [function_name_2] [function_name_1]	count=2
function_name	lo ||| fann get	count=1
function	configuración [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	como el carp::croak de ||| croak	count=1
arg_pair	provee un grado ||| array $env array $other_options	count=1
function_name	de épocas de estancamiento ||| stagnation epochs	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=17
function_name	false si ||| module is	count=1
namespace	formato ||| serializable	count=1
function_name	que se ||| construct	count=1
function_name	un número es primo ||| gmp prob	count=1
arg_pair	valor ||| int $flags	count=1
return	sobre los ||| array	count=2
function_name	devuelve el iterador ||| get inner iterator	count=2
function_name	función ||| odbc	count=1
function_name	se encuentra disponible la ||| memory image	count=1
arg_pair	correspondientes a los ||| array $ctorparams int $row	count=1
return	a ser usado en ||| bool	count=1
function_name	3986 ||| oauth urlencode	count=1
namespace	como se define ||| function	count=1
function_name	de excepciones anterior el ||| exception	count=1
arg_pair	de un ||| resource $psdoc int $ord	count=1
function_name	función ||| memory image	count=2
function_name	de datos de entrenamiento ||| merge train data	count=1
function_name	actual de session.cache_expire ||| session cache expire	count=1
arg_pair	basado en ||| string $str	count=1
arg_pair	la primera ocurrencia de ||| string $haystack	count=3
arg_pair	versiones estandarizados de ||| string $version2	count=1
namespace	a un solo ||| function	count=1
arg_pair	a**r)/gamma r ||| float $r	count=1
function_name	y sólo si ||| set using	count=1
function_name	términos de ||| terms	count=1
return	el usuario especificado en ||| bool	count=1
arg_pair	infilename y lo firma ||| string $infilename	count=1
function_name	descripción de la ||| cairo scaled font get font	count=2
function_name	[function_name_1] contexto con ||| [function_name_2] [function_name_1]	count=2
function_name	lista de dsn disponibles ||| odbc	count=1
function	[function_name_1] de arg ||| [arg_pair_2] [function_name_1]	count=3
function	la cabecera [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	atributos de [function_name] ||| [function_name]	count=3
function_name	número máximo [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	cierra ||| eio close	count=1
return	que fgetss() intenta eliminar ||| string	count=1
arg_pair	cuenta el número de ||| int $index_start	count=1
function_name	un valor especial indicando ||| using	count=1
function_name	esta función devolverá la ||| odbc	count=1
function_name	parámetrp está disponible ||| value available	count=1
function_name	ascenso vertical de ||| ascent	count=1
function_name	de emitir advertencias y ||| using exceptions	count=1
function_name	colores de primer plano ||| color	count=1
function_name	bindtextdomain() establece la ||| bindtextdomain	count=1
namespace	segundo cuando se enlaza ||| function	count=1
arg_pair	una fila de ||| resource $result_id	count=1
function_name	encuentra disponible ||| open	count=1
function_name	en el atributo dado ||| attribute ns	count=1
function_name	de reintentos en caso ||| sybase deadlock retry count	count=1
arg_pair	aclarando ||| int $x	count=1
namespace	datos arbitrarios ||| gearmanclient	count=1
function_name	plano y ||| ncurses color	count=1
function_name	menos tantos documentos como ||| mlt	count=1
function_name	en lugar de ||| exceptions	count=1
function_name	[function_name_1] de servidores ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] lecturas a ||| [function_name_2] [function_name_1]	count=4
arg_pair	y ||| resource $connection string $qualifier	count=1
function_name	la prueba probabilística de ||| prob	count=1
arg_pair	un método ||| string $data string $method	count=1
function_name	constantes ||| constants	count=1
arg_pair	inicio ||| string $str	count=1
arg_pair	pretende usarse como una ||| string $class_name string $file_extensions	count=1
function_name	dibuja una curva ||| curve to	count=1
function_name	un blob en modo ||| blob echo	count=1
function_name	correlación ||| asort	count=1
function_name	virtual con ||| pvf	count=2
namespace	crea un efecto ||| gmagick	count=1
arg_pair	estándar basado en ||| string $str	count=1
function_name	ps_stringwidth() excepto ||| geometry	count=1
arg_pair	función es idéntica a ||| string $pattern string $string	count=1
namespace	parámetros de uno o ||| function	count=1
function_name	a ||| pconnect	count=1
function_name	supervisión ||| ctrl dispatcher	count=2
arg_pair	si key ||| string $key	count=1
function_name	establece ||| fann set	count=23
namespace	que contiene la ||| function	count=2
return	tamaño ||| int	count=1
function_name	procedure [function_name] ||| [function_name]	count=3
function_name	punto [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	y almacena el resultado ||| xdiff file patch	count=1
function_name	uso de memoria ||| scache meminfo	count=1
arg_pair	str de ||| string $str	count=1
function_name	contiene el carácter ||| chr	count=1
function_name	si un número ||| gmp	count=1
arg_pair	[arg_pair] caché del ||| [arg_pair]	count=3
function_name	extrase el pid ||| pid	count=1
arg_pair	en bbcode_container creado ||| resource $bbcode_container	count=1
function_name	dispositivos de ømq pueden ||| construct	count=1
arg_pair	cero en caso de ||| mixed $options	count=1
function_name	de instancia ||| load	count=1
function_name	de comprensión de ||| setswfcompression	count=1
function_name	[function_name_1] [function_name_2] algoritmo especificado ||| [function_name_2] [function_name_1]	count=2
function_name	cambia los permisos ||| fchmod	count=1
function_name	el valor ||| colorspace	count=1
function_name	guarda ||| store	count=1
return	método no afecta al ||| int	count=1
arg_pair	valor de referencia ||| mixed $value	count=1
namespace	mensaje para el ||| function	count=1
arg_pair	en des ||| string $str	count=1
function_name	define el de ||| set	count=1
function_name	información de campos de ||| sybase fetch field	count=1
namespace	[namespace] los elementos ||| [namespace]	count=3
function_name	con la fila ||| fetch	count=1
function_name	ser usado [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	gamma ||| gamma	count=2
arg_pair	el modo ||| int $mode int $pri	count=1
function_name	[function_name_1] documento basándose ||| [function_name_2] [function_name_1]	count=1
return	usa [return] obtener ||| [return]	count=1
function_name	el índice ||| offset	count=1
function_name	si ||| gmp prob	count=1
arg_pair	el archivo de base ||| string $filename array $options	count=1
function_name	tamaño actual ||| filesize	count=1
function_name	épocas que [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	un blob ||| blob	count=2
arg_pair	ciertas propiedades de la ||| int $field_offset	count=1
arg_pair	píxel que coincida con ||| float $fuzz	count=1
function_name	color asociada a ||| getcolorcount	count=1
function_name	devuelve la porción de ||| mb strrichr	count=1
namespace	devolver un valor ||| rarexception	count=1
function_name	de consulta de ||| cubrid get query	count=1
arg_pair	es decir el ||| int $face	count=1
function_name	unicode alphabetic ||| ualphabetic	count=1
function_name	id es el ||| id	count=1
function_name	extensiones de ficheros ||| extensions	count=1
function_name	de un campo ||| odbc field	count=1
function	actualiza [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function_name	o false si ||| is	count=1
function_name	un número es primo ||| prob	count=1
return	en el archivo ||| bool	count=1
function_name	raíz cuadrada de ||| gmp sqrtrem	count=1
function_name	permite al entrenamiento ||| fann get	count=1
function_name	de cliente por proceso ||| client	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] color [function_name_2]	count=1
function_name	píxel con la imagen ||| image	count=1
function_name	ldap ||| ldap sort	count=2
arg_pair	puerto nombre de la ||| int $port	count=1
function_name	variable de entorno ||| setenv	count=1
arg_pair	existe todavía ||| int $expire	count=1
function_name	imagen ||| set image interlace scheme	count=2
function_name	conexiones [function_name_2] ||| [function_name_2] get last used [function_name_1]	count=2
function_name	la descripción de la ||| cairo pattern get surface	count=1
function_name	de parámetros url no ||| params	count=1
namespace	varita ||| imagickpixel	count=1
arg_pair	devolverá la lista de ||| resource $connection_id	count=1
return	un array asociativo ||| array	count=4
arg_pair	dibujar imágenes ||| resource $image bool $blendmode	count=1
arg_pair	de certificado) basada en ||| array $configargs array $extraattribs	count=1
function_name	[function_name_1] el perfil ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] una ||| [function_name_1] text annotation [arg_pair_2]	count=1
function_name	es clickeado ||| set destination	count=1
function_name	pueden hacer de intermediarios ||| construct	count=1
function_name	calcula la raíz cuadrada ||| sqrtrem	count=1
return	modificar los ||| bool	count=1
function_name	byte actual en ||| get current byte	count=1
function_name	elimina ||| unregister	count=1
function_name	peso ||| getfontweight	count=1
namespace	al conjunto y ||| quickhashintset	count=1
arg_pair	casi idéntico ||| int $limit	count=1
function_name	llamada a ingres_query() ||| ingres	count=1
arg_pair	opción de contexto log_cmd_update ||| array $protocoloptions	count=1
function_name	o zip desde un ||| from	count=1
function_name	tamaño y el ||| size	count=1
function_name	patrón basado ||| shading pattern	count=1
namespace	codificada en bruto o ||| function	count=2
arg_pair	devuelve una ||| string $text	count=1
function	prioridad [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	calcula la tangente ||| trader tan	count=1
function_name	instanciación del objeto ||| on create	count=1
function_name	error cuando la biblioteca ||| set using	count=1
arg_pair	dos ||| string $charset	count=1
arg_pair	para aumentar el left_operand ||| string $left_operand	count=1
function_name	campos ||| mssql fetch field	count=1
return	array asociativo con ||| array	count=1
return	valores ||| array	count=1
function_name	número [function_name] modificadas ||| ingres num [function_name]	count=1
namespace	con barras ||| function	count=1
function_name	la descripción de ||| cairo matrix	count=1
function_name	wbmp ||| imagewbmp	count=1
function_name	devuelve el nodo del ||| get	count=1
function_name	posición actual del ||| key	count=1
function_name	coloca la siguiente fila ||| fetch	count=1
function_name	[function_name] individual para ||| adaptive [function_name]	count=2
function_name	la descripción de la ||| cairo pattern get color stop	count=1
arg_pair	enviar emails con el ||| string $additional_headers	count=1
function_name	entidades ||| libxml set external entity	count=1
arg_pair	desde el servidor ftp ||| resource $ftp_stream	count=1
function_name	[function_name_1] neuronas de ||| [function_name_2] [function_name_1]	count=1
function_name	monitorizar un recurso ||| fam cancel monitor	count=1
arg_pair	contenido de una ruta ||| string $path	count=1
function_name	de archivo ||| mailparse uudecode all	count=1
function_name	el número de patrones ||| length	count=1
function_name	inverso del ||| invert	count=1
return	la posición actual ||| void	count=1
function_name	acción [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	un enlace ||| resource $pdfdoc	count=1
function_name	devuelve la escala ||| scale	count=2
arg_pair	disponibles después ||| resource $connection_id	count=1
function_name	la descripción de ||| cairo pattern get rgba	count=1
function_name	establece la zona horaria ||| timezone set	count=1
function_name	la imagen obtenida ||| imagecreatefromwebp	count=1
function_name	descripción ||| cairo pattern get color stop	count=1
namespace	o tiff ||| function	count=1
return	[return] de una ||| [return]	count=1
arg_pair	especificada rra del archivo ||| int $raaindex	count=1
function_name	las consultas ||| facet queries	count=1
function	crea [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=1
function_name	grosor de las ||| imagesetthickness	count=1
function_name	de ordenación ||| sort	count=1
function_name	de firma de cabecera ||| header	count=1
function_name	de ||| curl	count=2
function_name	el tamaño actual de ||| entry	count=1
return	barras invertidas antes de ||| string	count=1
function_name	descripción de la ||| pattern add color stop rgb	count=1
function_name	un [function_name] ||| add [function_name]	count=1
namespace	cierra ||| function	count=1
return	instancia ||| sdo_das_xml_document	count=1
function_name	a las candidatas ||| get cascade	count=2
arg_pair	coincida con ||| mixed $fill	count=2
arg_pair	oid de ||| resource $conn_identifier string $oid	count=1
namespace	de la posición ||| splfileobject	count=1
arg_pair	datagrama al destino ||| float $timeout	count=1
function_name	[function_name_1] declaradas ||| [function_name_2] [function_name_1]	count=4
function_name	por lo menos ||| mlt	count=1
function_name	codificación de caracteres ||| detect encoding	count=1
function_name	este serán ignoradas ||| set mlt	count=1
arg_pair	bordes de la imagen ||| int $x	count=1
function_name	las ||| set mlt min	count=1
function_name	[function_name_1] el valor ||| [function_name_1] [function_name_2]	count=1
function_name	como el carp::cluck de ||| clunk	count=1
namespace	por intérpretes de comandos ||| function	count=1
function_name	de distribución de imagemagick ||| release	count=1
arg_pair	enviar ||| string $message string $additional_headers	count=1
function_name	un array [function_name] ||| mysql fetch [function_name]	count=2
function_name	acepta uno ||| number	count=1
arg_pair	los valores en assoc_array ||| array $assoc_array	count=1
namespace	retraso de la ||| gmagick	count=1
return	usando una ||| void	count=2
function_name	conexión de socket dada ||| stream socket	count=1
function_name	a mayúsculas ||| mb strtoupper	count=1
namespace	hilo referenciado por ||| thread	count=1
function_name	[function_name_1] siguiente al ||| [function_name_2] [function_name_1]	count=2
arg_pair	a bson ||| string $bson	count=1
arg_pair	req_handle por ||| resource $req_identifier	count=1
function_name	asignación ||| apc sma	count=1
function_name	último código ||| return code	count=1
function_name	[function_name_1] fuente ||| [function_name_2] [function_name_1]	count=2
arg_pair	para un color requerido ||| resource $image	count=2
function_name	las banderas [function_name] dado separadas ||| [function_name]	count=1
function_name	error del sistema posix ||| posix	count=1
arg_pair	petición actual indicando ||| string $actor	count=1
arg_pair	aparición de needle ||| string $haystack mixed $needle	count=1
function_name	servidor virtual de ||| server	count=1
function_name	[function_name_1] del complemento ||| [function_name_2] get last used [function_name_1]	count=4
function	[function_name_1] el fichero ||| [function_name_1] contents [arg_pair_2]	count=1
function_name	a sybase_fetch_assoc() ||| sybase fetch object	count=1
function_name	el certificado ||| sign	count=1
return	este serán ignoradas ||| solrquery	count=1
function_name	devuelve el peso ||| getfontweight	count=1
function_name	gran número de ||| start buffering	count=1
function_name	alfabéticos convertidos a minúscula ||| strtolower	count=1
namespace	llamarla varias ||| function	count=1
function_name	nombre ||| get name	count=1
arg_pair	user y ||| string $user	count=1
arg_pair	pajar incluyendo la aguja ||| string $haystack	count=1
function_name	la ||| set mlt	count=2
arg_pair	en [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	esto ||| splheap	count=1
function_name	lo menos tantos ||| mlt min	count=1
arg_pair	colas o cualquier abstracción ||| zmqsocket $frontend	count=1
arg_pair	etc..., a thickness ||| int $thickness	count=1
arg_pair	una función ||| string $filename int $flags	count=1
arg_pair	caracteres desde un fichero ||| resource $font_index string $encodingfile	count=1
function_name	serán ||| doc frequency	count=2
function_name	añade rutas ||| add config	count=1
namespace	un [namespace] de un ||| [namespace]	count=1
function_name	de entrenamiento [function_name_2] ||| [function_name_1] [function_name_2]	count=3
rest	todas [function_2] ||| [function_2] [return_1]	count=1
return	x o y ||| bool	count=1
function_name	desecha ||| end clean	count=1
arg_pair	celda de un conjunto ||| resource $result int $row	count=2
function_name	rrd desde ||| rrd	count=1
return	el tamaño actuales en ||| bool	count=1
arg_pair	capas de ||| zmqsocket $frontend	count=1
arg_pair	bordes de la ||| int $x int $y	count=1
arg_pair	contexto log_cmd_update al ||| array $protocoloptions	count=1
function_name	el último error ||| get last error	count=1
function_name	que puedan ||| crypt	count=1
function_name	error sqlstate ||| stmt sqlstate	count=1
arg_pair	mktime() excepto ||| int $hour int $minute	count=1
function_name	está actualmente siendo ejecutada ||| running	count=1
namespace	para usarlo por ||| function	count=1
function	[function_name_1] nombre ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
function_name	establecer los colores de ||| ncurses color set	count=1
function_name	siguiente línea ||| next line	count=2
arg_pair	de página cookie...) ||| resource $link int $pagesize	count=1
function_name	distribución de lecturas a ||| slave	count=1
namespace	cualesquiera bytes ||| function	count=1
arg_pair	función va aquí ||| cairopattern $pattern cairomatrix $matrix	count=1
function_name	imap_header() ||| imap rfc822 parse headers	count=2
function_name	un mensaje de texto ||| curl strerror	count=1
function	oracle [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de la ||| get	count=3
namespace	posición actual a el ||| harupage	count=1
function	un [arg_pair_2] ||| [function_name_1] string $pathto [arg_pair_2]	count=1
return	número de filas ||| int	count=2
function_name	devuelve el tamaño ||| zip	count=1
arg_pair	un índice ||| int $index	count=1
function_name	devuelve una lista de ||| broker list dicts	count=1
function_name	de esquema ||| add types	count=1
arg_pair	el uri ||| string $encoding	count=1
arg_pair	tiempo de ejecucción ||| int $timeout int $retry_interval	count=1
function_name	después ||| data source	count=2
function_name	codificado ||| all	count=1
arg_pair	de una ruta ||| string $optlist string $path	count=1
return	devuelve los índice ||| int	count=1
namespace	que los parámetros pasados ||| function	count=1
arg_pair	creado usando socket_create() y ||| resource $socket	count=1
arg_pair	método y la clave ||| string $method	count=1
namespace	html ||| function	count=1
function_name	página abiertos ||| pdi	count=1
function_name	que se ||| fdf set	count=1
arg_pair	archivo dado ||| string $filename	count=1
function_name	gobtiene el acl para ||| imap getacl	count=1
function_name	las banderas [function_name] dado ||| [function_name]	count=1
function_name	especial ||| set	count=1
function_name	descripción de la ||| cairo surface mark dirty rectangle	count=1
arg_pair	cubrid y ||| resource $lob_identifier	count=1
function_name	cursor del servidor ||| cursor	count=1
function_name	de obtener ||| get	count=1
return	de trabajo para ver ||| bool	count=1
function_name	token de petición ||| token	count=1
arg_pair	realiza una consulta ||| string $dbpath	count=1
function_name	mantienen su correlación ||| arsort	count=1
function_name	el siguiente entero menor ||| trader floor	count=1
function_name	el parámetro rows ||| copy	count=1
function_name	entonces en ||| set using exceptions	count=1
arg_pair	una cadena str con ||| string $str	count=1
function_name	el tipo del ||| type	count=1
arg_pair	propiedades correspondientes a ||| array $ctorparams	count=1
function_name	en por lo ||| set mlt	count=1
function_name	interoperabilidad stubs específicas ||| create default stub	count=1
function_name	función obtiene [function_name] de ||| [function_name]	count=1
function_name	conexión de oracle ||| oci	count=1
function_name	el denominador ||| task denominator	count=1
arg_pair	de datos ||| resource $data	count=1
arg_pair	aleatorios de un array ||| int $num	count=1
namespace	memoria usados por ||| function	count=1
arg_pair	una fila de la ||| resource $result_id int $row_number	count=1
function_name	descripción de ||| cairo pattern create rgba	count=1
function_name	[function_name_1] [function_name_2] ||| function int [function_name_2] [function_name_1]	count=2
namespace	[namespace] en una ||| [namespace]	count=1
function_name	descripción de la ||| ps surface create	count=1
arg_pair	del archivo indicado ||| mixed $filename	count=1
function_name	devolverá una lista de ||| list	count=1
function_name	primer índice [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	de relation la ||| resource $relation	count=2
function_name	donde se ||| dbplus chdir	count=1
function_name	serán ignoradas ||| set	count=1
function_name	función geoip_domain_by_name() ||| domain	count=1
function_name	esta función ||| number	count=1
arg_pair	saturación ||| float $brightness float $saturation	count=1
function_name	y [function_name_2] ||| [function_name_1] closepath [function_name_2]	count=1
return	asociado con el identificador ||| array	count=1
function_name	la frecuencia en ||| doc frequency	count=1
return	un id dado ||| string	count=1
arg_pair	indicado en repos_url ||| string $repos_url	count=1
return	se anota ||| string	count=1
namespace	cursor mongocommandcursor ||| mongocommandcursor	count=1
namespace	de mensaje y ||| zmqdevice	count=1
namespace	otros caracteres ||| function	count=1
function_name	no ||| mlt min doc	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] max out [function_name_1]	count=9
function_name	valor de gravedad actual ||| gravity	count=1
arg_pair	tabla de una base ||| string $name	count=1
arg_pair	que se identificaron con ||| resource $connection string $client_identifier	count=1
function_name	añade el ||| multi add	count=1
namespace	de enero de ||| function	count=1
arg_pair	parecida ||| string $username	count=1
function	prioridad de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	método y ||| string $data string $method	count=2
arg_pair	un nuevo archivo de ||| resource $file	count=1
function	[function_name_1] un ||| [function_name_1] bookmark [arg_pair_2]	count=1
function_name	convertir ||| convert to	count=1
function_name	[function_name] password ||| fbsql [function_name]	count=3
return	de [return] ||| [return]	count=2
function_name	instancia de haruannotation ||| urlannotation	count=1
namespace	que está ||| function	count=7
function_name	u ||| ltrim	count=1
function_name	cabecera ||| header	count=2
function_name	de candidatas ||| cascade	count=1
function_name	la descripción de ||| cairo pdf surface create	count=1
namespace	tal que ||| function	count=1
namespace	el ||| xmlreader	count=2
function_name	la entrada actual ||| current	count=1
function	finaliza [arg_pair_2] ||| [function_name_1] page ext [arg_pair_2]	count=1
function_name	lo menos tantos ||| min	count=1
function_name	bandera o_nonblock del ||| set block	count=1
namespace	del conjunto en el ||| quickhashintset	count=1
function_name	la biblioteca unrar ||| exceptions	count=1
function_name	obtiene la longitud ||| len	count=1
function_name	nuevo analizador ||| parser	count=1
function_name	monitorizar ||| fam cancel monitor	count=2
return	cuando se incluya en ||| bool	count=1
arg_pair	el stream dado ||| resource $stream	count=1
function_name	[function_name_1] tipo de ||| [function_name_1] socket [function_name_2]	count=1
namespace	o subsiguiente fichero de ||| sdo_das_xml	count=1
return	al igual ||| void	count=1
arg_pair	zen-kaku [arg_pair] ||| [arg_pair]	count=1
return	secuencia de ||| int	count=1
function_name	de emitir advertencias y ||| exceptions	count=1
function_name	utf-8 a iso-8859-1 ||| utf8 decode	count=1
function_name	el nombre del campo ||| name	count=1
function_name	siguiente [function_name_2] ||| [function_name_1] [function_name_2]	count=5
return	error cuando la biblioteca ||| void	count=1
function_name	los pares de sustitución ||| repl	count=1
arg_pair	punto x2 y2 ||| float $y2	count=1
namespace	otros ||| function	count=1
return	definido en ||| bool	count=1
rest	[return_1] [function_2] ||| [return_1] [function_2]	count=62
namespace	propiedad ||| reflectionproperty	count=1
return	datos arbitrarios a ||| bool	count=1
function_name	un segundo o subsiguiente ||| types	count=1
function_name	[function_name_1] reemplaza con ||| [function_name_1] [function_name_2]	count=2
function_name	este serán ||| mlt	count=1
function_name	crea una imagen ||| image	count=4
function_name	del ||| setproctitle	count=1
namespace	biblioteca unrar encuentre un ||| rarexception	count=1
function_name	sólo si el ||| set using	count=1
function_name	de archivo dado ||| uudecode all	count=1
function_name	tipo del campo ||| mssql field type	count=2
function_name	imagen para ||| image	count=2
function_name	igual que closedir() ||| close	count=1
function_name	respuesta sin tratar ||| get raw response	count=2
function_name	iterador a ||| iterator	count=1
arg_pair	dada por data mediante ||| string $data	count=1
function_name	que ya ha ||| types	count=1
return	devuelve un ||| int	count=2
arg_pair	rectángulo comenzando ||| int $x1	count=1
function_name	que serán ||| mlt	count=1
function_name	documentos ||| set mlt min doc frequency	count=2
function_name	método de compresión de ||| set compression	count=1
function_name	comunicaciones internas con libeio ||| get event	count=1
function_name	disponibles después de llamarla ||| data	count=1
function_name	método devuelve una ||| to string	count=4
function_name	plano ||| color set	count=2
function_name	de control con un ||| gupnp control	count=1
function_name	imagen ||| sub image	count=1
function_name	repositorio ||| svn import	count=2
function_name	error ||| error	count=16
namespace	de renderización de ||| gmagick	count=1
function_name	indica ||| is	count=3
function_name	objetivo y esté ||| floodfill image	count=1
function_name	las cabeceras de ||| nsapi request headers	count=1
function_name	instrucciones de proceso para ||| processing instruction	count=1
function_name	devuelve la precisión de ||| field precision	count=1
function_name	conveniente [function_name] proporcionalmente ||| magnify [function_name]	count=1
function_name	escribe información de ||| write	count=1
function_name	uno o más canales ||| channel distortion	count=1
function_name	varita ||| option	count=1
function_name	el nombre corto ||| short name	count=1
function_name	[function_name_1] paginación ||| [function_name_2] [function_name_1]	count=7
arg_pair	donde las propiedades correspondientes ||| array $ctorparams int $row	count=1
arg_pair	identificador de entrada ||| resource $result_identifier	count=1
namespace	error una excepción ||| rarexception	count=1
arg_pair	formato csv a ||| string $delimiter string $enclosure	count=1
function_name	dngettext() le permite sobrescribir ||| dngettext	count=1
function_name	el archivo rrd desde ||| rrd	count=1
function_name	en por lo menos ||| mlt min doc	count=1
function_name	orientación ||| orientation	count=1
return	positivo pequeño que determina ||| bool	count=1
function_name	en milisegundos ||| timeout	count=1
function_name	descripción de ||| cairo pattern create for surface	count=1
return	fgetss() intenta ||| string	count=1
function_name	archivos de ||| chdir	count=1
function_name	dibujo a carboncillo ||| charcoal	count=1
function_name	aborta inmediatamente el bucle ||| loopbreak	count=1
function_name	si un número es ||| prime	count=1
function_name	el número de reintentos ||| retry count	count=1
namespace	recupera información sobre ||| function	count=1
function_name	idéntica ||| fgetss	count=1
return	y php del ||| string	count=1
function_name	de servidores ||| servers	count=1
arg_pair	de una respuesta ||| string $key	count=1
function_name	optimiza ||| dba optimize	count=2
function_name	dos ||| sybase pconnect	count=2
function_name	la que ||| mlt min doc	count=1
arg_pair	representa una fila ||| int $row_number	count=1
function_name	nuevo iterador ||| iterator	count=1
function_name	del objeto blob ||| ifx free blob	count=1
function_name	efectivo ||| setegid	count=1
function_name	los iteradores hijo ||| children	count=1
return	posición actual y escribe ||| int	count=1
function_name	la versión plural de ||| ngettext	count=1
function_name	actual de solr ||| solr	count=1
return	resultado a ||| int	count=1
return	puntero de ||| int	count=1
function	paginación [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	validación [function_name_2] ||| [function_name_2] ngvalidate [function_name_1]	count=2
function_name	obtiene los hijos de ||| get children	count=1
arg_pair	fichero especial u ordinario ||| int $major int $minor	count=1
function_name	sin tratar enviadas al ||| raw request	count=1
arg_pair	los radios de ||| float $rx float $ry	count=1
function	inicia [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] text rendering [function_name_1]	count=3
function_name	exporta una o ||| function	count=1
function_name	consulta de la petición ||| cubrid get query	count=1
namespace	archivos phar ||| phar	count=1
return	una representación de ||| string	count=1
arg_pair	form ||| resource $form	count=2
function_name	el directorio personalizado ||| setup custom directory	count=1
function_name	obtiene ||| get last	count=1
arg_pair	una ||| string $value	count=3
function_name	la posición actual del ||| key	count=1
function_name	parecida a ||| sybase pconnect	count=1
arg_pair	la lista de dsn ||| resource $connection_id	count=1
return	closedir() solo ||| void	count=1
function_name	ambos puedan ||| kernel	count=1
function_name	segmento inicial de subject ||| strcspn	count=1
function_name	reinicia el [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	layer contando ||| int $layer	count=3
function_name	en por lo ||| doc	count=1
arg_pair	cubrid_put() se ||| mixed $value	count=1
function_name	carga el fichero ttf ||| load ttf	count=1
function_name	y todos los componentes ||| destroy	count=1
function_name	a ||| sybase pconnect	count=2
namespace	de ||| yaf_dispatcher	count=1
function	[function_name_1] retrollamadas se ||| [arg_pair_2] [function_name_1]	count=1
namespace	aclarando y ||| gmagick	count=1
function_name	única tarea y devuelve ||| do normal	count=1
arg_pair	antes de alimentarlo a ||| array $input_vector	count=1
function_name	por odbc_do() [function_name] ||| [function_name]	count=1
function_name	devuelve ||| get resource	count=1
function_name	y devolver un ||| set using exceptions	count=1
function_name	de resultados msql ||| msql result	count=2
namespace	segundo ||| sdo_das_xml	count=1
function_name	descripción de la ||| cairo image surface get	count=1
return	datos en el ||| bool	count=1
function_name	que closedir() solo ||| close	count=1
function_name	si y ||| using exceptions	count=1
arg_pair	en una y ||| string $new_data2 string $error	count=1
arg_pair	el índice ||| mixed $index	count=1
function_name	fecha dada ||| date parse from format	count=1
arg_pair	para ser borrado de ||| int $record_number	count=1
arg_pair	se identificaron con el ||| string $client_identifier	count=1
function_name	de cada capa de ||| fann get layer array	count=1
function_name	indicando ||| using	count=1
namespace	en la solicitud ||| function	count=1
arg_pair	cubrid_connect() ||| bool $new_link	count=1
return	por ||| solrquery	count=1
namespace	que fgetss() ||| function	count=1
function_name	la entrada del ||| entry	count=1
function_name	de paso ||| fann get rprop delta	count=1
function_name	el enlace [function_name] ||| [function_name]	count=1
arg_pair	función va aquí ||| cairomatrix $matrix1 cairomatrix $matrix2	count=1
function	[function_name_1] para la ||| [arg_pair_2] [function_name_1]	count=5
function_name	directiva error_reporting ||| error reporting	count=1
return	por value [return] ||| [return]	count=3
function_name	un solrinputdocument equivalente ||| input document	count=1
function_name	blob ||| ibase blob echo	count=2
return	cursores ||| mongocursor	count=1
function_name	tidy a ||| tidy reset	count=1
function_name	número de reintentos en ||| deadlock retry count	count=1
function_name	sisitema de archivos tales ||| wrapper register	count=1
arg_pair	calendario calendar ||| int $calendar int $month	count=1
namespace	codificados ||| solrparams	count=1
arg_pair	[arg_pair] es ||| [arg_pair]	count=1
return	marca un ||| void	count=1
function_name	firma ||| verify	count=1
namespace	designado por filename es ||| function	count=1
function_name	extensión a la ||| extension	count=1
function	inverso [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	definida por su ||| string $name	count=1
function_name	núcleo ||| add kernel	count=2
arg_pair	en des de unix ||| string $str	count=1
function_name	el ||| chr	count=1
arg_pair	especial u ordinario ||| int $minor	count=1
function_name	[function_name] un ||| save to [function_name]	count=2
function_name	establece el número de ||| fann set	count=1
arg_pair	texto para después formatear ||| string $text	count=1
arg_pair	ingres_fetch_array() con una diferencia: ||| int $result_type	count=1
function_name	codificación de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	escritura del codificador ||| writing	count=1
arg_pair	a ||| int $method array $arguments	count=1
arg_pair	la función callback ||| array $array callable $callback	count=1
function_name	nueva csr certificate ||| csr new	count=1
function_name	disponible la lista ||| ps	count=1
arg_pair	un resultado ||| resource $result	count=1
function_name	de color especificado ||| get color value	count=1
namespace	una función ||| arrayiterator	count=2
function_name	sets tie breaker ||| tie	count=1
function_name	menos ||| set mlt	count=1
function_name	devuelto por el ||| bzerrstr	count=1
function_name	recupera información sobre ||| status	count=1
return	o rota ||| bool	count=1
function_name	de secuencia ||| imap msgno	count=1
return	la [return] ||| [return]	count=1
function_name	del ||| step	count=2
function_name	el phar cuando ||| phar	count=1
function_name	mensajes de: estado de ||| status string	count=1
namespace	tarea ||| gearmantask	count=2
namespace	de la cromaticidad ||| gmagick	count=2
return	y [return] ||| [return]	count=3
function_name	devuelve el último mensaje ||| get	count=1
function_name	está o no obsoleta ||| deprecated	count=1
function_name	lee ||| fgetss	count=1
function_name	registrados disponibles en ||| get wrappers	count=1
function_name	de la tabla ||| table	count=2
function	renombra [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	apariencia ||| harudestination	count=1
function_name	colas o cualquier abstracción ||| construct	count=1
function_name	la última sentencia insert ||| last insert	count=1
arg_pair	prepara para ||| resource $id	count=1
function	de prioridad [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	por lo ||| min doc	count=1
function_name	la función mssql_free_statement() si ||| mssql free statement	count=1
function_name	gobtiene el acl ||| getacl	count=1
return	el usuario ||| void	count=2
namespace	caracteres que se tienen ||| function	count=1
arg_pair	una página ||| float $ury string $url	count=1
function_name	[function_name_1] para el ||| [function_name_2] [function_name_1]	count=22
arg_pair	[arg_pair] atributo extendido ||| [arg_pair]	count=2
function_name	certificado y su clave ||| sign	count=1
arg_pair	data ||| string $mode	count=1
function_name	el tamaño actual de ||| entry filesize	count=1
arg_pair	desde el domain por ||| string $domain	count=1
arg_pair	devolverá la lista ||| resource $connection_id	count=1
function_name	cursor del servidor ||| kill cursor	count=1
function_name	define el de estilo ||| slide	count=1
arg_pair	una consulta aql local ||| string $dbpath	count=1
function_name	[function_name_1] activación para ||| [function_name_1] [function_name_2]	count=2
namespace	las conexiones [namespace] de ||| [namespace]	count=1
arg_pair	una colección de ||| bool $overwrite	count=1
return	devolver ||| solrquery	count=1
function_name	construye un lote ||| construct	count=3
function_name	elimina una ||| remove var	count=1
function_name	von einer mime kopfzeile ||| mime	count=1
function_name	establece el [function_name_2] ||| [function_name_1] cascade candidate [function_name_2]	count=1
function_name	[function_name] debe ||| [function_name]	count=1
function_name	función acepta uno dos ||| format	count=1
function_name	de argumentos ||| args	count=1
function_name	la que las palabras ||| doc	count=1
function_name	de realizar los cálculos ||| compat	count=1
function_name	[function_name_1] si ||| [function_name_2] [function_name_1]	count=3
function_name	de una línea ||| max line	count=1
namespace	que afecta ||| function	count=1
function_name	al entrenamiento continuar sin ||| fann get cascade	count=1
function_name	al estado del ||| count	count=1
arg_pair	en una cadena ||| mixed $priv_key	count=1
arg_pair	contiene una imagen reconstruida ||| int $metric	count=1
function_name	siguiente si varias ||| next result	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] contents [arg_pair_2]	count=9
function_name	correlación de los ||| asort	count=1
function_name	el resultado ||| xdiff file patch	count=1
function_name	descripción ||| cairo pdf surface create	count=2
function_name	operación or ||| or	count=1
function_name	omitiendo ||| path	count=1
function_name	como este serán ignoradas ||| doc	count=1
arg_pair	una nueva entrada al ||| int $key	count=1
arg_pair	fichero especificado por fd ||| mixed $fd	count=2
arg_pair	final de str ||| string $character_mask	count=1
function_name	documento xml desde la ||| xml	count=1
arg_pair	empleando delimiter como delimitador ||| string $null_as	count=1
namespace	comprueba ||| imagick	count=1
function_name	cadena de ||| load string	count=1
function	corrección gamma [arg_pair_2] ||| [function_name_1] image [arg_pair_2]	count=1
function_name	y devolver un valor ||| set	count=1
function_name	frecuencia en la ||| set mlt min doc	count=1
function_name	veces que una imagen ||| image	count=1
namespace	que está establecida mediante ||| function	count=1
function_name	obtiene información [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	contra las keys ||| array diff ukey	count=1
function_name	libera los recursos del ||| free	count=1
arg_pair	una colección de documentos ||| bool $overwrite	count=1
arg_pair	secuencia ||| resource $imap_stream	count=1
namespace	datos que se ||| function	count=1
function_name	usarse para almacenar ||| set metadata	count=1
function_name	de filas afectadas por ||| fbsql rows fetched	count=1
arg_pair	contexto log_cmd_update al ||| array $updateoptions	count=1
arg_pair	establece el uri ||| string $encoding	count=1
namespace	línea por línea ||| function	count=1
function_name	creado con ||| add types	count=1
function_name	carga una biblioteca de ||| com load	count=1
function_name	usando el certificado ||| pkcs7 sign	count=1
arg_pair	de versiones estandarizados de ||| string $version2	count=1
function_name	[function_name_1] severidad de ||| [function_name_1] [function_name_2]	count=1
function_name	invertido ||| array reverse	count=2
return	un alias ||| bool	count=1
function_name	memcached::prepend() con la excepción ||| prepend by	count=1
function_name	elimina ||| remove filter	count=1
function	[function_name_1] [arg_pair_2] ||| bool [function_name_1] name [arg_pair_2]	count=1
arg_pair	de un enlace ||| resource $pdfdoc	count=1
function_name	si ||| default	count=1
function_name	como este ||| set mlt min doc frequency	count=1
function_name	un das ||| add types	count=1
function_name	de clase iterador que ||| iterator class	count=1
function_name	para ser ||| set	count=1
function_name	el cursor al primer ||| first	count=1
function_name	descripción de la ||| cairo svg surface create	count=1
arg_pair	contenedor en ||| string $frame_name	count=1
function_name	o información asociada al ||| info	count=1
function_name	sólo si el argumento ||| using	count=1
arg_pair	enx y ||| float $beta	count=2
function_name	una cadena ||| chr	count=1
function_name	recuperada y mueve ||| mysql	count=1
function_name	string que representa ||| serialize	count=1
function_name	ser entrenadas las ||| get	count=1
namespace	directorio indicada por ||| function	count=1
function_name	decodifica datos binarios ||| decode	count=1
arg_pair	última ocurrencia de needle ||| string $haystack string $needle	count=2
return	tarea ||| bool	count=1
function_name	el producto de valores ||| product	count=1
function_name	que la ||| get multi by	count=1
function_name	establecer los colores ||| ncurses	count=1
namespace	sobre un proceso abierto ||| function	count=1
function_name	se devuelve un subtipo ||| add	count=1
arg_pair	inmediatemente después de que ||| string $opened_path	count=1
function_name	obtiene ||| ps get	count=1
function_name	[function_name_1] respuesta ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name] sin nada ||| [function_name]	count=3
function_name	a este para ||| add	count=1
function_name	en la ||| min doc frequency	count=1
arg_pair	de un campo ||| resource $fdf_document	count=1
function_name	pedir información de estado ||| status	count=1
function_name	convierten en ||| flip	count=1
return	claves x ||| array	count=1
function_name	la clase simplexml ||| simplexml	count=1
arg_pair	llamar repetidamente a filter_var() ||| mixed $definition	count=1
function_name	establece la zona ||| set	count=1
function_name	devuelve ||| get highlight	count=6
namespace	en formato string ||| serializable	count=1
function	desde una distribución [function_name_1] [arg_pair_2] ||| gen [function_name_1] [arg_pair_2]	count=2
arg_pair	formato csv ||| string $enclosure	count=2
arg_pair	para las ||| string $token	count=1
arg_pair	[arg_pair_1] a stream ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	la línea ||| start line	count=1
function_name	segundo cuando se enlazó ||| mcrypt ecb	count=1
function_name	obtiene el color ||| get stroking color	count=2
function_name	la frase de ||| highlight use phrase	count=2
function_name	descripción ||| cairo pattern get	count=6
function_name	disponible la lista ||| open memory	count=1
function_name	cambiará el directorio personalizado ||| setup custom directory	count=1
function_name	[function_name_1] nonce ||| [function_name_1] [function_name_2]	count=1
namespace	cadena ||| gmagick	count=1
arg_pair	del imagick ||| int $columns int $rows	count=1
namespace	línea de base de ||| harufont	count=1
function_name	de patrones de entrenamiento ||| length	count=1
function_name	de seguimiento ||| await	count=1
function_name	devuelve un ||| get	count=10
arg_pair	una ||| array $rectangle string $url	count=1
function_name	devuelve el límite ||| get	count=1
function_name	ssl ||| set sslchecks	count=2
function_name	de curl [function_name_2] ||| [function_name_1] copy [function_name_2]	count=1
function_name	devuelve una imagen de ||| image	count=1
function_name	cliente y [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	cursor en el atributo ||| move to attribute	count=1
function_name	desde la cadena ||| load string	count=1
arg_pair	watcher evperiodic y lo ||| callable $callback	count=1
function_name	el ||| setproctitle	count=1
arg_pair	de las restricciones de ||| int $facetsort string $field_override	count=1
function_name	número de línea donde ||| line	count=1
function_name	devuelve ||| win32 get	count=1
function_name	una búsqueda en el ||| search	count=1
return	la frecuencia ||| solrquery	count=1
function_name	esta función analiza ||| parse	count=2
return	objeto ||| gmagickdraw	count=1
function_name	de pendientes ||| steepnesses count	count=1
function_name	través de la imagen ||| sparse color image	count=1
arg_pair	con ||| resource $pdfdoc	count=1
arg_pair	una imagen tiff ||| string $filename int $width	count=1
arg_pair	el stream dado a ||| resource $stream	count=1
function_name	la cookie de ||| cookie	count=1
arg_pair	forma parecida a ||| string $password string $charset	count=1
function_name	las solicitudes ||| set	count=1
function_name	la [function_name] declaraciones ||| get [function_name]	count=1
function_name	diff unificado que contiene ||| file diff	count=1
arg_pair	por handle ||| int $offset	count=1
function_name	obtiene el contenido ||| get	count=4
function_name	retorna el denominador ||| denominator	count=1
function_name	con la varita ||| set option	count=1
function_name	para obtener el tamaño ||| size	count=1
function_name	en oposición a una ||| user defined	count=1
function_name	obtiene varios valores que ||| get value	count=1
arg_pair	rota el sistema ||| resource $p float $phi	count=1
function_name	[function_name_1] javascript ||| [function_name_2] [function_name_1] resource	count=1
function_name	espacio de nombres ||| namespace	count=3
function_name	resultados completo para ||| start	count=1
namespace	tiempo máximo de ||| gearmanclient	count=1
function_name	establece el ||| px set blob	count=1
function_name	que fgetss() intenta eliminar ||| fgetss	count=1
function_name	db2_connect() ||| db2	count=1
return	al igual que ||| void	count=1
function_name	de filas eliminadas insertadas ||| num rows	count=1
function_name	de archivo dado ||| all	count=1
arg_pair	coincida con el objetivo ||| mixed $fill float $fuzz	count=1
return	una característica conocia como ||| mongocursor	count=1
function_name	obtiene ||| get object	count=1
return	mongo posee una característica ||| mongocursor	count=1
function_name	actual para ||| current	count=2
return	en función ||| bool	count=1
return	matriz ||| array	count=1
namespace	abstracción que se defina ||| zmqdevice	count=1
function_name	contiene el ||| chr	count=1
function_name	en ||| mlt min doc frequency	count=4
arg_pair	de filtros adjuntos a ||| mixed $params	count=2
function_name	serán ignoradas ||| mlt min	count=1
function_name	[function_name] consulta devuelve ||| [function_name]	count=1
function_name	de ldap ||| ldap	count=1
function_name	[function_name_1] copyright ||| [function_name_2] [function_name_1]	count=1
return	con la ||| resource	count=1
function_name	variable ||| gettype	count=1
function_name	el número total ||| total	count=2
arg_pair	en conexiones curl_multi ||| resource $mh float $timeout	count=1
namespace	la expresión xpath dada ||| domxpath	count=1
function_name	permite al entrenamiento ||| fann get cascade output	count=1
function_name	la imagen ||| image interlace scheme	count=1
return	más contenido en ||| bool	count=1
arg_pair	[arg_pair_1] la base ||| [arg_pair_1] string $user [arg_pair_2]	count=3
return	individuales basados [return] ||| [return]	count=3
function_name	de ||| ps open memory	count=1
function_name	un valor ||| set using exceptions	count=1
namespace	se unen ||| function	count=1
namespace	array a un solo ||| function	count=1
function_name	si el iterador aún ||| valid	count=1
arg_pair	cambia el valor de ||| mixed $bordercolor int $x	count=1
function	[function_name_1] [arg_pair_2] el ||| [function_name_1] node domnode $importednode [arg_pair_2]	count=1
function_name	épocas de estancamiento ||| stagnation epochs	count=6
namespace	grupo de ||| function	count=1
arg_pair	es una [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	los bordes de la ||| gmagick	count=2
function_name	de datos geoip ||| geoip	count=1
namespace	un hash y devuelve ||| quickhashstringinthash	count=1
function_name	nombre de host o ||| record by name	count=1
namespace	posee ||| mongocursor	count=1
namespace	documento basado ||| domdocument	count=2
arg_pair	es una implementación de ||| string $value	count=1
function_name	lo menos ||| min	count=1
function_name	el número de ||| num	count=9
function	establece [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	obtiene información ||| curl	count=1
function_name	biblioteca unrar ||| using	count=1
function_name	del pundo de código ||| chr	count=1
function_name	la cola de ||| queue	count=1
arg_pair	el bit de start ||| int $start	count=2
function_name	consulta preparada anterioremente ||| ingres execute	count=1
arg_pair	especificado por mailbox ||| int $options	count=1
function_name	siguiente fila de ||| fetch	count=3
namespace	entrada utilizando su ||| ziparchive	count=1
function_name	de flujo o ||| stream socket	count=1
function_name	de color ||| get color value	count=1
function_name	que ||| set mlt min	count=2
arg_pair	que fgetss() ||| resource $handle int $length	count=1
function_name	método devuelve el ||| get	count=4
namespace	id ||| mongoid	count=1
function_name	obtiene [function_name_2] ||| harupage float [function_name_1] line [function_name_2]	count=1
function_name	formato utf-8 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	la extensión ||| image type to extension	count=1
function_name	escribe [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	imagefilledpolygon() cuando se rellena ||| function	count=1
namespace	igual ||| directory	count=1
function_name	como mssql_connect() ||| mssql pconnect	count=1
function_name	la fila ||| sqlsrv fetch	count=1
function_name	estilo de la línea ||| line	count=2
function_name	valor especial indicando error ||| set using	count=1
return	de botón ||| void	count=1
arg_pair	de operaciones insert ||| mongocollection $collection array $write_options	count=1
function_name	codificado mediante ||| mailparse uudecode	count=1
arg_pair	-- zguide ||| zmqsocket $frontend	count=1
function_name	http ||| mb http	count=1
function_name	base de datos ||| mysql drop db	count=1
function_name	la ||| scheme	count=1
arg_pair	de memcached::set() ||| int $expiration	count=1
function_name	define la apariencia de ||| set	count=1
function_name	afectadas ||| fetched	count=1
function_name	blob/clob ||| lob export	count=2
arg_pair	identificaron con el mismo ||| resource $connection string $client_identifier	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image channel [function_name_2]	count=5
function_name	una salida como echo ||| sandbox output	count=1
function_name	si el nodo ||| is	count=1
arg_pair	en ||| int $flag	count=1
namespace	el ||| gmagick	count=7
return	el número de ||| solrquery	count=1
function_name	al flujo con stream_filter_prepend() ||| stream	count=1
function_name	brillo ||| modulate	count=1
function_name	nueva [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	del paquete de imagemagick ||| package	count=1
function_name	a large object resource ||| pg lo truncate	count=1
arg_pair	hacen referencia ||| string $fk_qualifier string $fk_owner	count=1
arg_pair	datagrama al ||| float $timeout	count=1
function_name	devuelve el valor actual ||| get	count=1
function_name	establece el algoritmo ||| fann set training algorithm	count=1
function_name	el nombre [function_name_2] ||| [function_name_2] [function_name_1]	count=65
arg_pair	convierte un string en ||| string $string int $split_length	count=1
function_name	adquiere un flujo ||| stream	count=1
namespace	no codificados ||| solrparams	count=1
arg_pair	memcached::replace() ||| int $expiration	count=1
arg_pair	string con barras invertidas ||| string $str	count=1
return	remoto [return] en ||| [return]	count=1
arg_pair	para el uid dado ||| int $uid	count=1
return	de la fuente ||| int	count=2
function_name	su nombre ||| char from name	count=1
function_name	reemplaza el ||| dbase replace	count=1
function_name	asociativo desde [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	un entero que describe ||| ev	count=1
return	declaradas [return] ||| [return]	count=3
arg_pair	archivo remoto ||| int $mode	count=2
function_name	van ||| set	count=1
function_name	de prioridad ||| event base priority	count=1
return	de un string ||| string	count=2
arg_pair	por flag ||| string $flag int $options	count=1
arg_pair	de colores que ||| int $numcolors int $colorspace	count=2
arg_pair	de mezcla alfa para ||| resource $image	count=1
function_name	no se ||| count	count=1
function_name	descripción de ||| cairo pattern get	count=6
function_name	basado ||| shading	count=1
namespace	los archivos de ||| function	count=1
function_name	nombre [function_name_2] ||| function string [function_name_2] [function_name_1] resource $fdf_document string $fieldname	count=2
function_name	la porción de haystack ||| mb strrchr	count=1
arg_pair	fichero al archivo ||| string $filename string $localname	count=1
function_name	[function_name_1] [function_name_2] dada por dirname ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] [function_name_2] en el ||| [function_name_1] [function_name_2]	count=4
function_name	disponible ||| ps open memory image	count=2
function_name	obtiene ||| get entry	count=1
function_name	el proveedor oauth ||| required parameter	count=1
arg_pair	una canal ||| int $channel	count=1
function_name	true entonces en ||| exceptions	count=1
function_name	blob previamente abierto para ||| blob	count=1
function_name	pdf ||| pdf	count=4
namespace	devolverá el hash ||| function	count=1
function	borra los [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] pausado ||| [function_name_2] [function_name_1]	count=6
function_name	de imap ||| imap	count=2
namespace	característica conocia como cursores ||| mongocursor	count=1
function_name	disponible la ||| memory	count=1
function_name	las palabras que no ||| set mlt min	count=1
function_name	imagen en blanco del ||| imagecreate	count=1
function_name	punto de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	añade un único componente ||| add component	count=1
function_name	espera de consulta ||| get query timeout	count=1
function_name	liberación ||| udm free agent	count=2
return	en donde ||| bool	count=1
arg_pair	en el archivo browscap.ini ||| string $user_agent bool $return_array	count=1
return	disponible la ||| int	count=1
function_name	carga una biblioteca ||| com load	count=1
function_name	token del callback ||| token	count=1
function_name	efecto de botón tridimensional ||| raiseimage	count=1
function_name	de emitir ||| set using	count=1
arg_pair	texto ||| resource $handle	count=1
arg_pair	coincida con ||| mixed $target mixed $fill	count=1
function_name	una entrada ||| entry filesize	count=1
function_name	token y ||| token	count=1
function_name	la frecuencia ||| set mlt min doc	count=1
arg_pair	correspondientes a los ||| int $row	count=1
arg_pair	[arg_pair_1] nombres ||| [arg_pair_2] [arg_pair_1]	count=4
return	en el fichero especificado ||| bool	count=1
arg_pair	un archivo remoto ||| int $mode	count=2
arg_pair	el uri ||| string $uri string $encoding	count=1
return	los colores de ||| int	count=1
function_name	apunta conn_handle ||| commit	count=1
function_name	trunca el ||| ftruncate	count=1
namespace	índice del nodo ||| spldoublylinkedlist	count=1
return	para entornos en ||| bool	count=1
namespace	si ||| rarexception	count=2
function_name	define ||| set slide show	count=2
arg_pair	nombre de archivo ||| string $filename	count=1
function_name	de color dada ||| ncurses color content	count=1
function_name	letras del continente que ||| continent code	count=1
function_name	especifica el esquema ||| schema	count=1
function_name	[function_name] el ||| [function_name]	count=3
arg_pair	dibuja el [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
return	en el gestor de ||| bool	count=1
return	página arbitraria en el ||| bool	count=1
namespace	número es ||| function	count=1
function_name	añade un fichero ||| add	count=2
namespace	campos del documento ||| solrinputdocument	count=2
function_name	sobre la firma ||| gnupg verify	count=1
function_name	obtiene el valor ||| get value	count=1
function_name	campos de ||| sybase fetch field	count=1
function_name	alfabéticos convertidos a minúscula ||| mb strtolower	count=1
function_name	de la página asociada ||| page	count=1
arg_pair	archivo de base de ||| array $options	count=1
function_name	nombre largo para un ||| frame long name	count=1
arg_pair	en des de ||| string $str	count=1
return	contenido en la ||| bool	count=1
arg_pair	y ||| int $width int $height	count=1
namespace	sólo si ||| rarexception	count=1
function_name	actual ||| zip entry filesize	count=2
function_name	devolver un valor especial ||| exceptions	count=1
function_name	etiqueta ||| by tag	count=1
function_name	una [function_name] ||| set [function_name]	count=3
function_name	la descripción ||| cairo pattern get color	count=1
function_name	en el almaceén ||| reset	count=1
return	parámetros ||| bool	count=1
function_name	por ||| chr	count=1
namespace	el puntero de ||| splfileobject	count=1
return	como un ||| int	count=1
arg_pair	domain por gettext() ||| string $domain string $codeset	count=1
arg_pair	el fichero a un ||| string $filename bool $use_include_path	count=1
function_name	sets tie breaker ||| set tie	count=1
function_name	en milisegundos para ||| timeout	count=1
arg_pair	la información data especificada ||| string $data	count=1
arg_pair	de la función callback ||| mixed $callback mixed $arg	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] step [function_name_1]	count=8
function	[function_name_1] éxito cero ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	parámetros a y b ||| float $b	count=1
function_name	documentos como este serán ||| set mlt min doc	count=1
function_name	descripción ||| cairo create	count=1
function_name	y sólo si ||| using	count=1
function_name	[function_name] sus ||| [function_name] functions from	count=3
arg_pair	el constructor de yaf_config_ini ||| string $config_file string $section	count=1
function_name	solrdocument::clear() ||| reset	count=1
function_name	basándoes en ||| lookup prefix	count=1
function	es [function_name_1] [arg_pair_2] ||| [function_name_1] tag [arg_pair_2]	count=2
return	método permite ||| bool	count=1
function_name	de tendencias de cada ||| fann get bias	count=1
arg_pair	un nuevo par clave-valor ||| object $object mixed $value	count=1
function_name	de parámetros ||| params	count=2
function_name	xml que ||| types	count=1
function_name	campo a ||| alternate field length	count=2
return	envía datos arbitrarios a ||| bool	count=1
function_name	biblioteca unrar encuentre un ||| set	count=1
function_name	similar a msql_fetch_array() ||| msql fetch	count=1
function_name	das ||| add types	count=2
return	de lectura en ||| bool	count=1
arg_pair	indentificador de resultado ||| resource $result_id	count=1
function_name	hasata que se ||| newt	count=1
function_name	cuyo seno hiperbólico es ||| asinh	count=1
namespace	jpeg o ||| function	count=1
arg_pair	en una búsqueda ||| string $msgid2 int $n	count=1
function_name	valor especial indicando error ||| exceptions	count=1
arg_pair	con el método y ||| string $method	count=1
return	información sobre la ||| mixed	count=1
function_name	[function_name_1] servicio ||| [function_name_1] [function_name_2]	count=1
function_name	esta ||| number format	count=2
arg_pair	str ||| string $encoding	count=2
function_name	apuntador de archivo dado ||| uudecode	count=1
return	del texto que lee ||| string	count=1
function_name	excepción de ||| exceptions	count=1
namespace	la instancia de ||| yaf_dispatcher	count=1
arg_pair	la prueba ||| gmp $a	count=1
function_name	borra los registros ||| pg delete	count=1
function_name	resultado frontbase ||| fbsql data	count=1
namespace	archivo tar o ||| phardata	count=1
return	definida por su ||| bool	count=2
arg_pair	relation al dado por ||| string $name	count=1
function_name	el id del blob ||| ibase blob	count=1
arg_pair	fgets() excepto que fgetss() ||| resource $handle	count=1
arg_pair	de escritura en tuple ||| string $tuple	count=1
function_name	mime kopfzeile ||| iconv mime encode	count=1
function_name	única función de ||| kernel	count=1
arg_pair	un ||| int $width int $height	count=2
function_name	devuelve la imagen ||| compare image	count=1
function_name	[function_name_1] épocas ||| [function_name_2] [function_name_1]	count=10
arg_pair	de memcached::set() con ||| mixed $value int $expiration	count=1
function_name	nombre de la tabla ||| table	count=1
function_name	memoria usada por ||| memory usage	count=1
function_name	tipo de byte en ||| byte type	count=1
arg_pair	es idéntica a ||| string $pattern string $string	count=1
function_name	enviadas al servidor ||| request	count=1
function_name	[function_name_1] obtener conjuntos ||| [function_name_2] [function_name_1]	count=1
function_name	primer plano y ||| set	count=1
function_name	file_get_contents() ||| contents	count=1
namespace	estar disponibles en ||| function	count=1
function_name	secuencia de mensaje ||| msgno	count=1
arg_pair	que esté disponible ||| int $row	count=1
return	hipervínculo [return] ||| [return]	count=6
function_name	resultados porporcionados luego lee ||| ldap get entries	count=1
function_name	carp::cluck ||| clunk	count=1
function_name	retorna el nombre corto ||| get frame short name	count=1
function_name	de secuencia ||| msgno	count=1
arg_pair	path2 ||| string $path2 int $rev2	count=1
namespace	el socket. ||| gearmanclient	count=1
function_name	nuevo objeto ||| new	count=2
function_name	devuelve el límite del ||| get resource limit	count=1
arg_pair	se ||| string $servername	count=1
arg_pair	el patrón ||| string $pattern	count=1
function_name	establece un nombre ||| name	count=1
namespace	los datos ||| function	count=1
arg_pair	que ||| zmqsocket $backend	count=1
arg_pair	valor de referencia al ||| mixed $value	count=1
arg_pair	dada por variable_key y ||| int $variable_key	count=1
function_name	coseno para cada ||| trader cos	count=1
function	otra información [arg_pair_2] ||| [function_name_1] resource $link_identifier [arg_pair_2]	count=1
arg_pair	de ||| string $username	count=1
function_name	de una imagen en ||| image	count=2
arg_pair	vector ||| array $input_vector	count=1
function_name	añade el ||| add	count=1
function_name	establece un [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	cualesquiera ||| resource $handle int $length	count=1
return	fichero especificado ||| resource	count=2
arg_pair	ocurrencia de needle ||| string $needle	count=3
function_name	y todos los ||| destroy	count=1
function	nuevo [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
function_name	cierra ||| crack closedict	count=2
function_name	un error ||| using	count=1
function_name	datos postgresql ||| pg connect	count=1
function_name	entrenadas las ||| fann get	count=1
arg_pair	[arg_pair_1] servidor ftp ||| [arg_pair_2] [arg_pair_1]	count=4
return	valor de ||| mixed	count=3
function_name	encuentra disponible la ||| ps	count=1
return	función acepta ||| string	count=1
function_name	el gestor de errores ||| error	count=1
function_name	en ||| add	count=1
function_name	interna ||| mb internal encoding	count=1
namespace	a valores ||| function	count=1
return	de las ||| int	count=1
function_name	el color de fondo ||| background color	count=1
function_name	la función usa la ||| gmp prob prime	count=1
function_name	crea una nueva ||| create	count=6
function_name	dicha caché ||| cache	count=1
arg_pair	final de str ||| string $str	count=1
namespace	objeto actualmente señalado ||| splobjectstorage	count=1
arg_pair	un fichero de ||| string $filename int $size	count=1
function_name	menos tantos ||| frequency	count=1
return	auto-ejecutable consiste en ||| bool	count=1
function_name	[function_name_1] de términos ||| [function_name_1] [function_name_2]	count=1
namespace	las capas de mensaje ||| zmqdevice	count=1
arg_pair	imagen reconstruida ||| int $metric	count=1
arg_pair	un nuevo ||| mixed $class	count=1
function_name	manejador de trabajo para ||| job	count=1
function_name	ámbito del [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	el puntero interno ||| seek	count=1
return	función de retorno ||| bool	count=1
namespace	medido como el número ||| function	count=1
arg_pair	texto y opciones ||| string $text string $optlist	count=1
return	entornos en ||| bool	count=1
arg_pair	[arg_pair] creado ||| [arg_pair]	count=1
return	se usa [return] obtener ||| [return]	count=1
function_name	de graphicsmagick como ||| getreleasedate	count=1
return	posición actual ||| bool	count=1
arg_pair	fichero de un programa ||| float $ury string $filename	count=1
namespace	rpc remoto ||| yar_client	count=1
namespace	de error que ||| function	count=1
return	a [return] ||| [return]	count=3
return	defina sobre ||| zmqsocket	count=1
function	[function_name_1] asocia el ||| [arg_pair_2] [function_name_1]	count=2
function_name	de consulta de la ||| cubrid get query	count=1
function_name	varíadica ||| variadic	count=1
function_name	borrar un servicio ||| delete service	count=1
function_name	una imagen ||| image	count=21
function	divide [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	salidas de ||| output	count=2
function_name	devuelve el tipo ||| variant get type	count=3
function_name	[function_name] el ||| get [function_name]	count=8
function_name	conexión sobre un socket ||| socket	count=1
function_name	array asociativo desde una ||| fetch array	count=1
namespace	sesiones y ||| sessionhandlerinterface	count=1
function_name	[function_name_1] icu ||| [function_name_2] [function_name_1]	count=4
arg_pair	de un assoc_array en ||| int $options	count=1
return	no afecta al ||| int	count=1
function_name	la función ps_stringwidth() excepto ||| geometry	count=1
return	sean puestas [return] cola ||| [return]	count=1
function_name	conjunto de resultados completo ||| start	count=1
function	casillas de [arg_pair_2] ||| [function_name_1] resource $checkboxtree [arg_pair_2]	count=1
namespace	a menor ||| function	count=1
function_name	usando una función definida ||| uasort	count=1
arg_pair	un ||| resource $p	count=4
namespace	cadena que especifica la ||| gmagickdraw	count=1
arg_pair	ventanas la propiedad hwnd ||| int $window_handle	count=1
function_name	limpia ||| clear	count=1
namespace	abstracción por ||| function	count=1
arg_pair	acceso al servicio daemon ||| string $address	count=1
arg_pair	x509cert proporcionado incluyendo ||| mixed $x509cert	count=1
arg_pair	cuenta el número ||| int $index_start	count=1
arg_pair	de entrenamiento ||| resource $ann	count=1
return	pueden hacer de intermediarios ||| zmqsocket	count=1
function_name	para las ||| sslchecks	count=1
function_name	disponibles después de llamarla ||| source	count=1
function_name	[function_name_1] el hijo ||| [function_name_2] [function_name_1]	count=3
function_name	clase ||| info class	count=1
function_name	de comprensión ||| setswfcompression	count=1
function_name	de cargar entidades externas ||| disable entity	count=1
function_name	query al servidor ingres ||| ingres	count=1
function_name	clase propia ||| info class	count=1
function_name	un mensaje de cadena ||| append	count=1
function_name	al [function_name] ||| [function_name] add to	count=1
function_name	archivo paradox ||| px	count=2
function	[function_name_1] fichero ||| [function_name_1] [arg_pair_2]	count=4
function_name	raíz cuadrada de un ||| gmp sqrtrem	count=1
arg_pair	en una ||| string $schema	count=1
arg_pair	éxito cero en caso ||| string $zurl mixed $options	count=1
return	devuelve una palabra clave ||| string	count=1
function_name	los callback definidos por ||| control point browse	count=1
function_name	obtener el iterator interno ||| get inner iterator	count=1
function_name	ejecuta una [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	hacer de ||| zmqsocket $frontend	count=1
return	botón tridimensional ||| void	count=1
arg_pair	índice especificado por ||| mixed $index	count=1
function_name	conexión al servidor ingres ||| ingres	count=1
namespace	de emitir advertencias ||| rarexception	count=1
return	ha sido empezada ||| bool	count=1
function_name	a ||| ibase	count=1
function_name	en la string entregada ||| ctype upper	count=1
function_name	banderas [function_name] ||| [function_name]	count=1
function_name	sin tratar [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	y como un ||| array	count=1
namespace	que ||| gearmanworker	count=1
namespace	http en la solicitud ||| function	count=1
arg_pair	0 index en ||| int $index	count=1
function_name	arbitrario ||| raw	count=1
function_name	punto primario rojo de ||| getimageredprimary	count=1
function_name	si devuelve un array ||| mcrypt module get supported	count=1
function_name	la tasa de baudios ||| dio tcsetattr	count=1
arg_pair	parecida a sybase_connect() ||| string $password string $charset	count=1
function_name	entidades ||| disable entity loader	count=2
arg_pair	defina ||| zmqsocket $frontend	count=1
function_name	letras en mayúsculas ||| get cap height	count=1
function_name	establece ||| set include path	count=2
function_name	establecer la supervisión del ||| ctrl dispatcher	count=1
function_name	bcompiler y crea ||| bcompiler	count=1
function_name	serán ||| min doc frequency	count=2
function_name	la clase del ||| get class	count=1
arg_pair	lista de dsn disponibles ||| resource $connection_id	count=1
namespace	una matriz con ||| gmagick	count=1
function_name	está definida ||| in	count=1
arg_pair	b ||| float $b	count=1
arg_pair	método es una ||| string $collection	count=1
function_name	el puntero interno a ||| seek	count=1
arg_pair	la conexión de ||| mysqlnd_connection $connection	count=1
function_name	establece el comentario de ||| set comment	count=2
function_name	prueba ||| gmp prob prime	count=2
return	devuelve [return] con el ||| [return]	count=1
return	para borrar una ||| bool	count=1
function_name	solicitudes ||| set	count=1
function_name	de región ||| region	count=1
function_name	de error ||| error function	count=2
function_name	código ||| errcode	count=1
return	un ||| resource	count=31
function	semáforo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	sets tie breaker parameter ||| solrdismaxquery	count=1
arg_pair	eventos especificada ||| resource $event_base int $flags	count=1
function_name	[function_name_1] que serán ||| [function_name_2] [function_name_1]	count=4
function_name	primera muestra ||| first	count=1
function_name	extensión a la que ||| extension	count=1
function_name	establece la calidad ||| set qos	count=1
arg_pair	base de ||| string $password string $database	count=1
namespace	no se le ||| mongocursor	count=1
function_name	la descripción de ||| cairo matrix transform distance	count=1
namespace	especificado es un carácter ||| intlchar	count=5
function_name	iterador interno actual ||| inner iterator	count=2
function_name	si [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=3
namespace	que son ||| mongocursor	count=1
function_name	estancamiento de candidatas ||| candidate stagnation	count=1
function_name	de trabajo ||| job handle	count=1
function_name	[function_name_1] documento ||| [function_name_1] [function_name_2]	count=2
arg_pair	constructor de yaf_config_ini ||| string $config_file string $section	count=1
function_name	devuelve el ||| enchant broker get	count=1
function	objeto [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	de ||| int $x int $y	count=2
function_name	escala el sistema ||| pdf scale	count=1
function	añade un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	mensaje ||| imap msgno	count=2
function_name	xml ||| load	count=1
arg_pair	campo es decir el ||| int $face	count=1
function_name	un ||| proc get	count=1
return	de la api ||| string	count=1
arg_pair	start hacia ||| gmp $a int $start	count=2
return	un valor ||| string	count=1
return	la cadena de instancia ||| sdo_das_xml_document	count=1
function_name	por el usuario) ||| restore error handler	count=1
function_name	tridimensional simulado ||| raiseimage	count=1
arg_pair	hacer de intermediarios ||| zmqsocket $backend	count=1
function_name	cualquier ||| bzerrstr	count=1
arg_pair	la de memcached::replace() ||| int $expiration	count=1
arg_pair	óptimo ||| int $scope int $nullable	count=1
function_name	file() excepto que file_get_contents() ||| contents	count=1
function_name	máscara de [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	un nuevo ||| resource $pxdoc	count=1
namespace	(«kernel») ||| imagickkernel	count=1
function_name	versión menor de ||| minorversion	count=1
function	[function_name_1] para un ||| [function_name_1] value enum [arg_pair_2]	count=5
arg_pair	última ocurrencia de needle ||| string $needle	count=2
function_name	de datos postgresql ||| pg connect	count=1
return	son similares ||| mongocursor	count=1
function_name	entrenamiento continuar sin cambiar ||| fann get	count=1
function_name	obtiene el valor ||| get string	count=1
namespace	codificado mediante uuencode ||| function	count=1
arg_pair	todas las estructuras de ||| int $table	count=1
function_name	especifica el número de ||| start	count=1
arg_pair	a una ||| string $url	count=1
return	conocia ||| mongocursor	count=1
arg_pair	a la de memcached::set() ||| mixed $value int $expiration	count=1
arg_pair	de relation al dado ||| string $name	count=1
function_name	[function_name_1] que comenzar ||| [function_name_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] en haystack ||| [arg_pair_1] [arg_pair_2]	count=8
function_name	si y sólo ||| set using exceptions	count=1
function_name	accesibilidad ||| access	count=1
function_name	cursor ||| kill cursor	count=1
arg_pair	desde str en el ||| mixed $fd string $str	count=1
arg_pair	cuenta el número ||| int $index_start int $index_end	count=1
arg_pair	los registros de una ||| resource $connection	count=1
function_name	estándar basado en ||| crypt	count=1
function_name	devuelve el índice ||| get size offset	count=1
arg_pair	[arg_pair_1] base de ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	una imagen con ||| image	count=2
function_name	comporta ||| pconnect	count=1
namespace	el tamaño actual ||| function	count=1
namespace	hoja de estilos ||| xsltprocessor	count=1
arg_pair	establece el estilo numérico ||| int $style	count=1
namespace	fichero o ||| function	count=1
arg_pair	de la página ||| int $type	count=1
arg_pair	dada por key corresponda ||| mixed $value	count=1
function_name	unidades de grafema ||| grapheme strripos	count=1
function_name	error::__construct() ||| previous	count=1
function_name	sus padres ||| implements	count=1
return	[return] out que ||| [return]	count=2
arg_pair	[arg_pair_1] de un ||| [arg_pair_2] [arg_pair_1]	count=10
function_name	color del [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de imap si ||| imap	count=1
arg_pair	el valor de ||| string $variable string $value	count=1
namespace	con un carácter ||| intlchar	count=1
return	botón tridimensional simulado ||| void	count=1
function_name	descripción de ||| cairo pattern set extend	count=1
function_name	filas afectadas en ||| affected rows	count=2
function_name	el ciclo ||| eio nop	count=1
function_name	función mssql_free_statement() si ||| free statement	count=1
function_name	de servicio extendido ||| yaz es	count=1
function_name	sobre un ||| proc get	count=1
function_name	en por ||| mlt min doc	count=1
function_name	para que ||| kernel	count=1
namespace	uno o más ||| function	count=2
function_name	dsn disponibles después ||| data	count=1
arg_pair	el método y ||| string $data string $method	count=1
function_name	como el carp::cluck de ||| apd clunk	count=1
function_name	el número de filas ||| fbsql num rows	count=1
function_name	establece la ||| set include	count=1
function_name	yaml ||| yaml emit	count=3
function_name	recupera información sobre un ||| get status	count=1
function_name	encabezados a enviar ||| set soap headers	count=1
namespace	almacenamiento usado por ||| function	count=1
function_name	para ||| imap msgno	count=2
return	de botón tridimensional simulado ||| void	count=1
function_name	un objeto char ||| char	count=1
function_name	devuelve un ||| module get	count=1
function_name	callback ||| callback	count=1
function_name	el número de pedido ||| yp order	count=1
namespace	objeto para ser editado ||| hw_api	count=1
function_name	nombre de clase iterador ||| set iterator class	count=1
namespace	del registro ||| yaf_registry	count=2
function_name	es el espacio de ||| is default	count=1
return	similares al ||| mongocursor	count=1
arg_pair	de la entrada proporcionada ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	fondo ||| background	count=1
namespace	sido creado ||| sdo_das_xml	count=1
function_name	alertas de accesibilidad ||| access	count=1
function_name	cada consulta ||| query	count=1
function_name	de mensajes md5 de ||| md5	count=1
arg_pair	del texto que ||| resource $handle int $length	count=1
function_name	secuencia ||| msgno	count=1
arg_pair	por flag a ||| int $options	count=1
return	escribe en ||| bool	count=1
arg_pair	sybase_connect() con dos ||| string $charset	count=1
arg_pair	offset a la ||| resource $lob_identifier string $offset	count=1
function_name	funciones de activación del ||| fann get cascade activation functions count	count=1
function_name	invertida ||| strrev	count=1
function_name	función reinicializa ||| reset	count=1
function_name	una instrucción sql ||| mssql next	count=1
function_name	línea actual para ||| current line	count=1
function_name	los iteradores hijo contenidos ||| children	count=1
return	[return] corresponde con ||| [return]	count=1
function_name	lo menos tantos documentos ||| frequency	count=1
function_name	del servicio y las ||| win32 start service	count=1
function_name	devuelve el copyright ||| get copyright	count=3
function_name	slob ||| slob	count=4
function_name	más detalles del estado ||| status	count=1
function_name	función del manejador de ||| handler	count=4
function_name	acceso calificadores ||| conf	count=1
return	no afecta ||| int	count=1
function_name	variable de post ||| get post	count=1
function_name	contornea ||| stroke	count=1
arg_pair	cookie [arg_pair] ||| [arg_pair]	count=1
namespace	sets tie ||| solrdismaxquery	count=1
function_name	tabla en la página ||| fit table	count=1
function_name	imagen para crear ||| shade image	count=1
function_name	y [function_name_2] ||| [function_name_1] fill [function_name_2]	count=4
function	establecer [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	de ||| harudestination	count=1
function	[function_name_1] columna ||| [function_name_1] resource $stmt [arg_pair_2]	count=1
function_name	notación notation ||| notation decl	count=1
function_name	épocas permitido para continuar ||| epochs	count=1
function_name	archivo codificado mediante ||| all	count=1
function_name	este ||| min doc frequency	count=2
function_name	en la solicitud actual ||| nsapi	count=1
function_name	atributo name [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	caracteres del campo a ||| alternate field length	count=1
function_name	el phar ||| phar	count=1
function_name	[function_name_1] javascript al ||| [function_name_2] [function_name_1]	count=1
function	semáforo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la cadena de ||| bzerrstr	count=1
function_name	propiedad estática ||| static property value	count=1
function_name	base ||| select db	count=2
function_name	función cubrid_error_code() ||| error code	count=1
function_name	en modo de no-bloqueo ||| ftp nb	count=1
arg_pair	el archivo ||| string $filename array $options	count=1
function_name	ubicaciones de certificados ||| cert locations	count=1
return	menos tantos documentos como ||| solrquery	count=1
namespace	a una conexión ||| function	count=1
function_name	salida como ||| output	count=1
arg_pair	str ||| string $str string $encoding	count=2
function_name	para ||| enchant broker set	count=1
function_name	configuración dado su valor ||| ini	count=1
function	[function_name_1] al campo ||| [function_name_1] action resource $fdf_document [arg_pair_2] int	count=1
function_name	php del ||| fgetss	count=1
arg_pair	socket_create() o ||| int $length	count=1
namespace	archivo zip usando su ||| ziparchive	count=1
return	string utilizando ||| string	count=1
namespace	que ambos puedan ||| imagickkernel	count=1
namespace	a imap_alerts() o ||| function	count=1
function_name	lo ||| min doc	count=1
namespace	factor por ||| function	count=1
arg_pair	bordes ||| int $width int $height	count=1
function_name	por sqlsrv_prepare() ||| sqlsrv	count=1
function_name	para los ||| set	count=1
function_name	de un campo ||| field	count=3
function_name	diff unificado que contiene ||| xdiff file diff	count=1
arg_pair	punto de inicio para ||| float $y	count=1
function_name	puntero ||| bzerrstr	count=1
function_name	de firma de cabecera ||| request header	count=1
function_name	devuelve el último error ||| enchant dict get error	count=1
arg_pair	copia de str donde ||| string $str	count=1
function_name	idéntica a fgets() excepto ||| fgetss	count=1
function_name	devuelve el contenido del ||| ifx get	count=2
function_name	drop por ||| fbsql drop	count=1
function_name	colores de primer ||| set	count=1
function_name	[function_name_1] para similitud ||| [function_name_2] [function_name_1]	count=2
arg_pair	filename usando el algoritmo ||| string $filename	count=1
namespace	número de segundos desde ||| function	count=1
function_name	procesa una respuesta ||| simple command handle response	count=1
namespace	los añadidos/eliminados hechos en ||| solrclient	count=1
namespace	rellena un archivo tar ||| phardata	count=1
function_name	o subsiguiente fichero de ||| add types	count=1
namespace	la base de ||| sqlite3	count=1
namespace	petición http en ||| function	count=1
rest	y otra [function_2] ||| [return_1] ibase blob [function_2]	count=1
function_name	módulos cargados en ||| modules	count=1
function_name	para forzar a la ||| cast	count=1
function_name	devuelve la zona horaria ||| time zone by country and	count=1
function_name	devuelve un [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	los ||| dbplus chdir	count=2
function_name	sistema de opendir readdir ||| eio readdir	count=1
function_name	el ruido granular de ||| despeckleimage	count=1
namespace	graphicsmagick como una ||| gmagick	count=1
namespace	tipo type que corresponde ||| function	count=1
namespace	la ||| harufont	count=4
namespace	función ||| reflectionfunctionabstract	count=1
function_name	este serán ||| set mlt min	count=1
function_name	decodifica el string ||| mb decode	count=1
function_name	entrada/salida ||| tidy	count=1
function_name	el modo de ||| mode	count=1
namespace	se defina ||| zmqdevice	count=1
function_name	después de ||| odbc	count=1
function_name	obtiene una [function_name] ||| [function_name]	count=3
function_name	a sybase_connect() con ||| sybase	count=1
arg_pair	el certificado x509cert proporcionado ||| mixed $x509cert bool $shortnames	count=1
function_name	devuelve ||| zip entry	count=1
return	del cursor: si ||| int	count=1
function_name	el ||| imap	count=2
arg_pair	un algoritmo ||| string $algorithm	count=1
function_name	devuelve el nombre ||| db2 field name	count=1
function_name	respuesta ||| apache response	count=1
function_name	sobre la información de ||| info	count=1
function_name	los ||| all	count=2
namespace	del documento xml ||| sdo_das_xml_document	count=1
function_name	durante un entrenamiento ||| fann get	count=1
function_name	[function_name_1] última ||| [function_name_2] insert [function_name_1]	count=2
function_name	consultas range/wildcard/fuzzy/prefix ||| multi term	count=1
function_name	[function_name_1] unicode ||| [function_name_2] [function_name_1]	count=4
arg_pair	un efecto ||| int $x	count=1
namespace	examina la información que ||| function	count=1
arg_pair	un archivo ||| string $filename	count=6
arg_pair	es decir ||| string $filename	count=1
arg_pair	array1 ||| array $array1 array $array2	count=1
function_name	de primer plano y ||| ncurses color	count=1
arg_pair	une tres cadenas ||| string $new_data1	count=1
arg_pair	representa el nombre distinguido ||| array $dn	count=1
function_name	[function_name_1] fila insertada ||| [function_name_2] [function_name_1]	count=3
arg_pair	dado por value ||| string $value	count=1
namespace	si todavía no se ||| mongocursor	count=1
return	información ||| mixed	count=1
function_name	de fondo [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	línea actual para el ||| current line	count=1
arg_pair	path en [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	de agua digital dentro ||| imagick $watermark_wand int $offset	count=1
arg_pair	nuevo par clave-valor ||| object $object mixed $value	count=1
arg_pair	sesión al almacenamiento de ||| string $session_id	count=1
function_name	convierte un guid ||| mssql guid string	count=1
function_name	semáforo pueda ||| sem	count=1
function_name	devuelve la ||| by country and	count=1
function_name	[function_name_1] insert ||| [function_name_2] [function_name_1]	count=2
function_name	de mysql ||| mysql result	count=1
function_name	para que ambos ||| add kernel	count=1
function_name	[function_name_1] bajo ||| [function_name_2] [function_name_1]	count=4
return	estándar basado en des ||| string	count=1
namespace	que ha sido adjuntada ||| function	count=1
function_name	número de campo ||| mssql field seek	count=1
function_name	una entrada de ||| entry filesize	count=1
function_name	la lista de parámetros ||| ps open memory	count=1
function_name	http de respuesta ||| apache response	count=1
arg_pair	[arg_pair_1] y ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	tabla en ||| fit table	count=1
return	un string con ||| string	count=4
namespace	la función de retorno ||| gearmanworker	count=1
function_name	ignoradas ||| set mlt	count=1
function_name	por ||| uksort	count=1
arg_pair	de secuencia del mensaje ||| resource $imap_stream int $msg_number	count=1
arg_pair	un [arg_pair_2] ||| object [arg_pair_1] [arg_pair_2]	count=4
function_name	porción de ||| strrchr	count=2
function_name	de parámetros url ||| params	count=1
function_name	añade una etiqueta al ||| bbcode add	count=1
function_name	de grupos [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de respuesta sin tratar ||| get raw response	count=1
function_name	número de filas afectadas ||| ifx affected rows	count=1
arg_pair	simulado ||| int $x	count=1
arg_pair	negro ||| float $gamma	count=1
function_name	msql ||| msql data	count=1
function_name	frecuencia en la ||| set mlt min	count=1
function_name	establece el tamaño ||| set	count=1
function_name	un documento html ||| save html	count=1
function_name	el campo especificado por ||| oci field	count=1
function_name	a las ||| fann get	count=2
arg_pair	solrquery::sethighlightalternatefield() se le ||| int $fieldlength	count=1
function_name	cubrid_lob2_new() u obtenido ||| lob2	count=1
function	con unos [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	negro ||| imagecreatetruecolor	count=1
function_name	a este para que ||| add kernel	count=1
function_name	implementa directo a ||| get images blob	count=1
namespace	empleadas [namespace] ||| [namespace]	count=2
function_name	de resultados de mysql ||| mysql result	count=1
function_name	documentos como este serán ||| min	count=1
function_name	una imagen en particular ||| image filename	count=1
namespace	dada por new ||| function	count=1
function_name	que se ha declarado ||| declaring	count=1
namespace	recupera el contenido de ||| function	count=1
function_name	command [function_name] al ||| [function_name]	count=1
arg_pair	guarda x509 [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	equilibrado de carga ||| ms	count=1
arg_pair	esta función es una ||| resource $result	count=1
namespace	de [namespace] en ||| [namespace]	count=1
function_name	su nombre ||| name	count=5
function_name	decodifica el string codificado ||| decode	count=1
function_name	por el parámtro ||| index	count=1
return	inactividad de ||| int	count=1
arg_pair	completamente conectada empleando un ||| float $connection_rate int $num_layers	count=1
function_name	ingres_query() o ||| ingres	count=1
function_name	[function_name_1] fila ||| [function_name_2] [function_name_1]	count=4
function_name	similar a sybase_fetch_assoc() con ||| sybase fetch object	count=1
function_name	interno ||| data seek	count=2
function_name	que ya ha sido ||| types	count=1
namespace	información que ||| function	count=1
arg_pair	especificados por msglist ||| string $msglist	count=1
namespace	logrando que ||| function	count=1
function_name	el número ||| num	count=11
function_name	mayúsculas ||| cap height	count=1
return	arbitrarios a ||| bool	count=1
namespace	extensión reflexionada devolvíendola en ||| reflectionextension	count=1
return	que ya ||| void	count=1
function_name	y devolver un ||| exceptions	count=1
arg_pair	cubrid_set_query_timeout() ||| resource $req_identifier int $timeout	count=1
function_name	llamada a ingres_query() o ||| ingres	count=1
arg_pair	stored procedure en ||| bool $skip_results	count=1
function_name	identificador de sesión ||| session	count=1
arg_pair	una imagen ||| gmagick $source int $compose	count=1
namespace	host o ||| function	count=1
function_name	codifica ||| encode	count=2
namespace	resultados como mysql_query() lo ||| function	count=1
arg_pair	del recurso de conexión ||| bool $value	count=1
function_name	de ||| imap	count=2
function_name	del atributo en ||| attribute	count=2
arg_pair	grado de ||| array $other_options	count=1
return	de coordenadas ||| bool	count=1
namespace	para que ambos puedan ||| imagickkernel	count=1
function_name	de entrada ||| input	count=1
function_name	elimina ||| remove	count=10
function_name	la función glob() ||| glob	count=1
arg_pair	más atributos al dn ||| resource $link_identifier string $dn	count=1
namespace	de ||| mongoid	count=1
function_name	paginación ||| paged result	count=2
arg_pair	la codificación para los ||| string $encoding	count=1
namespace	antes de los caracteres ||| function	count=1
arg_pair	un directorio ||| string $path	count=2
function_name	guarda el estado actual ||| save	count=1
arg_pair	la ||| int $type float $disp_time	count=1
function_name	elongamiento de ||| font stretch	count=1
function_name	obtiene la distancia ||| get	count=1
function_name	trabajo [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	carga una ||| string $encoding bool $embed	count=1
function_name	guarda los datos dados ||| save	count=1
namespace	dsn disponibles después de ||| function	count=1
function_name	un valor ||| set using	count=1
arg_pair	recurso checkbox ||| resource $checkbox string $value	count=1
return	frecuencia ||| solrquery	count=1
function_name	seguimiento ||| await data	count=2
function_name	error de socket devuelto ||| socket strerror	count=1
function_name	este método no ||| count	count=1
function_name	la opción de ||| sock opt	count=1
function_name	puedan ||| add	count=1
function_name	[function_name_1] las flags ||| [function_name_2] [function_name_1]	count=1
function_name	de los tipos descritos ||| types	count=1
namespace	que no contienen ||| function	count=1
function_name	[function_name] textual de ||| [function_name]	count=1
function_name	la última ||| dbplus last	count=1
function_name	proceso abierto ||| status	count=1
function_name	prioridad ||| priority init	count=2
arg_pair	el nombre ||| string $name	count=1
arg_pair	codificación para los ||| string $encoding	count=1
function_name	biblioteca ||| set using exceptions	count=2
namespace	que ||| solrquery	count=3
function_name	hijo ||| child	count=2
return	momento actual medido ||| int	count=1
function_name	uuencode ||| all	count=1
arg_pair	función establece [arg_pair] atributo extendido ||| [arg_pair]	count=1
return	actualmente en ||| bool	count=3
function_name	a [function_name] ||| [function_name]	count=1
arg_pair	crea un ||| resource $image	count=1
arg_pair	solrquery::sethighlightalternatefield() se le pasó ||| string $field_override	count=1
function_name	la raíz cuadrada ||| sqrtrem	count=1
function_name	de atajo ||| shortcut	count=1
function_name	frecuencia ||| doc	count=1
function_name	entonces en lugar ||| set	count=1
arg_pair	message al buzón ||| string $options	count=1
namespace	disco o desde ||| function	count=1
function_name	parámetro facet.date.end ||| facet date end	count=1
function_name	a unas ||| ps moveto	count=1
function_name	palabras que no ||| set	count=1
function_name	siguiente entero mayor ||| trader ceil	count=1
arg_pair	función acepta uno dos ||| float $number	count=1
arg_pair	por infilename ||| string $infilename	count=1
function_name	sets ||| set tie	count=1
function_name	primer índice ausente ||| first empty	count=3
function_name	abierto ||| get status	count=2
function_name	probabilística de ||| prob prime	count=1
arg_pair	un fichero al archivo ||| string $filename	count=1
return	lo guarda en ||| bool	count=1
function_name	esta ||| odbc data	count=1
function_name	curl [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	esteblece [arg_pair_1] [arg_pair_2] operaciones de dibujo siguientes ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=1
function_name	el formateo textline ||| info textline	count=1
function_name	establece la función de ||| fann set	count=5
arg_pair	path ||| string $path	count=2
arg_pair	una consulta aql ||| string $query	count=1
function_name	como este ||| min doc frequency	count=1
function_name	casillas ||| newt checkbox tree find item	count=1
function_name	de disposición ||| setimagedispose	count=1
arg_pair	php ||| resource $handle	count=1
namespace	a sybase_connect() con dos ||| function	count=1
arg_pair	el identificador ||| resource $result_identifier	count=1
function_name	textflow y las estructuras ||| textflow	count=1
function_name	las constantes memcached::res_* la ||| result code	count=1
namespace	el servidor que ||| function	count=1
function_name	[function_name_1] los ||| [function_name_2] [function_name_1]	count=2
function_name	palabras que no ||| set mlt min doc	count=1
function_name	color usando ncurses_init_color() ||| can change color	count=1
function_name	devuelve una representación de ||| to date time	count=1
arg_pair	especificado como timestamp y ||| int $timestamp int $format	count=2
namespace	imagen escalando la caída ||| gmagick	count=1
function_name	usando una función definida ||| uksort	count=1
function_name	de bytes [function_name_2] ||| bool [function_name_1] parse [function_name_2]	count=1
arg_pair	por relation ||| string $name resource $relation	count=1
arg_pair	para ||| resource $ann int $activation_function	count=1
arg_pair	carga una ||| string $filename	count=1
function	[function_name_1] una ||| [function_name_1] ccitt [arg_pair_2]	count=1
namespace	un hash ||| quickhashstringinthash	count=1
function_name	para insertar ||| set	count=1
namespace	no afecta al estado ||| mongocursor	count=1
function_name	carga un segundo ||| add	count=1
function_name	atajo empleando un ||| shortcut array	count=1
function_name	la lista de parámetros ||| open memory	count=1
function_name	[function_name] retorna ||| [function_name] block	count=3
arg_pair	y su ||| array $config	count=1
arg_pair	de una [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	en ||| splfileobject	count=1
function_name	datos del ||| mailparse uudecode	count=1
arg_pair	de puerto ||| string $host int $port	count=1
arg_pair	colas o ||| zmqsocket $frontend	count=1
function_name	recupera información ||| proc get status	count=1
function	función socket_sendto() [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	los servidores ||| ping	count=1
function_name	mediante uuencode ||| mailparse	count=1
namespace	por lo ||| solrquery	count=1
function_name	de filas eliminadas ||| num rows	count=1
function_name	agrupación de conexiones ||| connection	count=1
function_name	sybase_fetch_assoc() con la diferencia ||| sybase	count=1
function_name	excepción indicada cuando ||| exception	count=2
function_name	obtiene el [function_name_2] ||| [function_name_1] [function_name_2]	count=29
return	si y ||| void	count=1
function_name	crea ||| create document type	count=2
function_name	establecer los colores de ||| ncurses	count=1
function_name	descripción de ||| cairo ps	count=1
function_name	descripción ||| cairo pattern create radial	count=2
function_name	[function_name_1] la longitud ||| [function_name_1] word [function_name_2]	count=1
function_name	php del texto que ||| fgetss	count=1
namespace	especifica ||| gmagickdraw	count=1
arg_pair	un resultado ||| resource $connection	count=3
arg_pair	el flujo imap dado ||| resource $imap_stream	count=1
arg_pair	el evento ||| resource $event mixed $fd	count=1
function_name	nueva instancia de documento ||| new	count=1
function_name	no afecta al estado ||| count	count=1
arg_pair	str con todos ||| string $encoding	count=2
return	lee los datos del ||| array	count=1
arg_pair	identificador de ||| resource $link_identifier resource $result_identifier	count=1
function_name	indicando error ||| set using	count=1
function_name	curl compartido y ||| curl share	count=2
return	array resultante ||| array	count=1
function_name	[function_name_1] [function_name_2] un ||| [function_name_1] [function_name_2]	count=5
namespace	como el número ||| function	count=1
function_name	función analiza una url ||| parse	count=1
function_name	[function_name_1] secundarios ||| [function_name_2] [function_name_1]	count=8
return	caracter ||| string	count=1
function_name	coordenadas ||| pdf rotate	count=2
function_name	lo ||| fann	count=2
arg_pair	la ||| resource $ch	count=1
arg_pair	carga una fuente ||| string $encoding	count=1
arg_pair	fichero fd ||| mixed $fd	count=3
arg_pair	mensaje del archivo indicado ||| resource $mimemail mixed $filename	count=1
arg_pair	es casi idéntico ||| mixed $subject int $limit	count=1
function_name	la imagen [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	largo para ||| get frame long	count=1
namespace	que ||| function	count=100
function_name	el que [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	los servidores de trabajo ||| gearmanclient	count=1
namespace	método reflejado y ||| reflectionmethod	count=1
function_name	en la paleta de ||| imagecolorexact	count=1
arg_pair	contexto log_cmd_update al ||| array $updateoptions array $protocoloptions	count=1
function_name	disponible la lista ||| open memory image	count=1
function_name	xml ||| add	count=1
arg_pair	string str ||| string $option	count=1
function_name	de versión menor de ||| minorversion	count=1
arg_pair	con los [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	[function_name_1] [function_name_2] actual de la ||| [function_name_1] [function_name_2]	count=1
arg_pair	un documento pdf diferente ||| resource $fdf_document string $url	count=1
arg_pair	alpha y ||| float $alpha	count=1
arg_pair	de php var_array al ||| array $var_array int $max_table_length	count=1
return	puedan estar disponibles en ||| string	count=1
namespace	iterator ||| iterator	count=1
function_name	actualizar ||| log cmd update	count=1
return	renderización de la imagen ||| int	count=1
function_name	palabra máxima ||| mlt max word	count=2
arg_pair	pregunta ||| int $num string $keyword	count=1
function_name	prioridad ||| priority	count=2
function_name	de campo ||| field seek	count=2
arg_pair	con ||| string $str	count=1
function_name	palabra ||| mlt min word	count=1
function_name	i-nodo de el objeto ||| inode	count=1
return	dbplus_open() ||| string	count=1
function_name	establece la función de ||| fann set callback	count=1
arg_pair	un mapa ||| string $domain	count=1
function_name	línea del ||| line to	count=1
function_name	devuelve el ||| get image	count=3
function_name	respuesta ||| get response	count=1
function_name	un ||| gmp prob prime	count=2
function_name	selecciona la base de ||| select db	count=1
arg_pair	[arg_pair_1] una ||| [arg_pair_1] string $msgid1 [arg_pair_2]	count=2
function_name	de la clase yaf_application ||| application	count=1
function_name	y máximo) [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	vincula una variable ||| bind	count=1
function_name	mediante uuencode ||| mailparse uudecode all	count=1
function_name	de campos ||| fields	count=6
function_name	la transformación actual de ||| text matrix	count=1
function_name	ssl para ||| set	count=1
return	excepción de tipo ||| void	count=1
arg_pair	rgb especificado y ||| resource $image int $red	count=1
function_name	una salida como echo ||| output	count=1
function_name	diccionario indicado mediante ||| crack	count=1
return	después de llamarla ||| array	count=1
namespace	fichero dado ||| splfileobject	count=1
function_name	de expresiones regulares ||| highlight regex	count=1
namespace	array o ||| function	count=1
function_name	obtiene las flags establecidas ||| get flags	count=1
function_name	[function_name_1] compresión ||| [function_name_2] [function_name_1]	count=3
function_name	la descripción de la ||| cairo scaled font get	count=2
function_name	canal de color especificado ||| color value	count=1
function_name	[function_name] de operación ||| [function_name]	count=1
function_name	devuelve el número de ||| msgno	count=1
function_name	propiedad enumerada o entera ||| int property value	count=1
function_name	obtiene el nombre de ||| pdf get	count=1
function_name	descripción de ||| cairo scaled font glyph extents	count=1
function_name	descripción de ||| cairo surface	count=5
arg_pair	de una ||| float $gamma	count=1
function_name	zip desde ||| from	count=1
function_name	necesitan ||| addslashes	count=1
arg_pair	excepto que fgetss() ||| resource $handle int $length	count=1
function_name	el número de filas ||| set	count=1
function_name	de lecturas a ||| get slave	count=1
function_name	almacena el resultado ||| xdiff file patch binary	count=1
arg_pair	busca la primera ocurrencia ||| string $haystack	count=1
return	bordes de la imagen ||| gmagick	count=1
arg_pair	más imágenes y ||| imagick $image	count=1
return	una ||| imagick	count=1
function_name	mime ||| iconv mime	count=1
function_name	de los mensajes especificados ||| imap fetchmime	count=1
arg_pair	valor de un ||| string $value int $flags	count=1
function_name	[function_name_1] clave ||| [function_name_1] [function_name_2]	count=6
function_name	y ||| set using exceptions	count=4
arg_pair	el carácter c verticalmente ||| string $c int $color	count=1
arg_pair	parámetro old ||| int $old	count=1
function_name	es true entonces en ||| set using	count=1
function_name	imagen ||| stereo image	count=2
return	de datos que ||| int	count=1
function_name	[function_name] declaraciones ||| get [function_name]	count=1
arg_pair	con ifx_do() ||| mixed $blobidarray	count=1
arg_pair	base de eventos ||| resource $event_base int $flags	count=1
namespace	esta función acepta uno ||| function	count=1
function_name	seno hiperbólico para ||| sinh	count=1
function_name	la función socket_sendto() envía ||| sendto	count=1
function_name	lista ||| broker list dicts	count=2
function_name	[function_name_1] porción borrada ||| [function_name_2] [function_name_1]	count=2
function_name	proceso del ||| setproctitle	count=1
arg_pair	fabricación cres un nuevo ||| string $contents int $size	count=1
return	reduce el ||| gmagick	count=1
function_name	[function_name_1] asociativo desde ||| [function_name_2] [function_name_1]	count=2
arg_pair	es ||| mixed $object	count=1
function_name	forzar a ||| cast	count=1
arg_pair	un umbral de ||| float $threshold int $channel	count=1
namespace	archivo phar que ||| phar	count=1
function_name	obtener conjuntos ||| get	count=1
function_name	la frecuencia ||| set mlt min	count=1
function_name	del recurso curl en ||| curl	count=1
return	de la ||| float	count=1
function_name	lo menos tantos documentos ||| mlt	count=1
function_name	atributo representa una columna ||| db2	count=1
function_name	establece la opción ||| set include	count=1
function_name	seno para ||| trader asin	count=1
function_name	actual [function_name] ||| is [function_name]	count=1
function_name	devuelve un ||| get children	count=3
namespace	a remote database ||| tokyotyrant	count=1
arg_pair	de ||| resource $p	count=2
function_name	o subsiguiente fichero de ||| add	count=1
arg_pair	comporta de forma parecida ||| string $username	count=1
namespace	[namespace] como una ||| [namespace]	count=1
function_name	el tamaño [function_name_2] ||| [function_name_2] [function_name_1]	count=17
function	[function_name_1] el ||| [arg_pair_2] [function_name_1]	count=1
namespace	un [namespace] un ||| [namespace]	count=2
function_name	procesa el html ||| html	count=1
function_name	inicio de un string ||| ltrim	count=1
function_name	correo correctamente formateada ||| rfc822 write address	count=1
function	[function_name_1] analizar ||| [arg_pair_2] [function_name_1]	count=3
namespace	tipo integer que contiene ||| function	count=1
return	sets tie breaker ||| solrdismaxquery	count=1
namespace	punto actual ||| harupage	count=1
function_name	formato utf-8 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	si un número es ||| function	count=1
function_name	como el carp::cluck ||| apd clunk	count=1
function_name	de ingres [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	cursor en el atributo ||| attribute	count=1
function_name	y ||| exceptions	count=2
arg_pair	en fann_get_cascade_output_stagnation_epochs() durante el ||| int $neurons_between_reports	count=1
arg_pair	una consulta aql local ||| string $query string $dbpath	count=1
function_name	este serán ||| min	count=1
function_name	conectar ||| connect	count=1
arg_pair	[arg_pair_1] un ||| [arg_pair_1] string $patch [arg_pair_2]	count=3
function_name	lugar de emitir ||| using exceptions	count=1
function_name	en la que ||| mlt min	count=1
function_name	página ||| reset image page	count=1
function_name	el uso de memoria ||| scache meminfo	count=1
arg_pair	coincida con el objetivo ||| mixed $fill	count=1
function_name	de fragmento ideal ||| highlight regex slop	count=1
return	de filas ||| int	count=1
return	valor numérico del ||| int	count=1
function_name	incluir ||| include	count=3
function_name	el seridor asociado con ||| msql select db	count=1
function_name	la descripción de la ||| cairo pattern get extend	count=1
function_name	el tamaño total ||| total size	count=2
function	[function_name_1] [arg_pair_2] el ||| [function_name_1] [arg_pair_2]	count=3
function_name	optimiza la base ||| dba optimize	count=1
function_name	máximo [function_name_2] ||| [function_name_1] out [function_name_2]	count=3
return	puedan aplicarse a una ||| void	count=1
namespace	color actual ||| harupage	count=1
function_name	clase iterador que ||| iterator class	count=1
namespace	archivos phar contienen ||| phar	count=1
function_name	propuesta ||| getimagerenderingintent	count=1
namespace	o auto-ejecutable ||| function	count=1
function_name	[function_name_1] sentencia insert ||| [function_name_1] [function_name_2]	count=2
function_name	consulta de ||| add filter query	count=1
function_name	de ||| rotate	count=1
function	última tupla [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	un string utilizando ||| function	count=1
function	asigna [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	de columna actual ||| current column number	count=1
arg_pair	una base de ||| resource $pxdoc	count=1
function_name	en ||| request	count=1
arg_pair	los bordes ||| int $y	count=1
function_name	inserta [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	path1 ||| int $rev1	count=1
arg_pair	formato csv a una ||| string $enclosure	count=1
function_name	la descripción de ||| cairo svg surface restrict to version	count=1
function_name	macenado ||| fetch proc return	count=2
arg_pair	fijo de colores ||| int $numcolors int $colorspace	count=2
function_name	regulares para strings multibyte ||| mb ereg match	count=1
arg_pair	local en ||| string $local_file int $mode	count=1
namespace	solicitud ||| function	count=1
function_name	[function_name] consulta ||| [function_name]	count=1
function_name	la paleta ||| imagecolorexact	count=1
function_name	variables estáticas ||| static variables	count=2
arg_pair	un ||| int $property	count=1
function_name	documentos como este serán ||| mlt	count=1
function_name	descripción de ||| cairo format stride for width	count=1
function_name	variables de la codificación ||| mb convert variables	count=1
function_name	aplicarse ||| add	count=1
namespace	defina sobre las ||| zmqdevice	count=1
function	[function_name_1] especificado ||| [function_name_1] len [arg_pair_2]	count=1
function_name	[function_name_1] siguiente y ||| [function_name_2] [function_name_1]	count=8
function_name	ccl ||| yaz ccl	count=1
function_name	segundo o subsiguiente fichero ||| add types	count=1
function_name	un guid binario ||| guid	count=1
arg_pair	y socket. ||| zmqsocket $frontend	count=1
function_name	el conjunto de caracteres ||| charset	count=1
arg_pair	el parámetro charlist ||| string $charlist	count=1
namespace	array judy ||| judy	count=3
function_name	un socket ||| socket	count=2
arg_pair	fichero que contiene una ||| int $dictionary_link	count=1
return	devuelve la opacidad de ||| float	count=1
function_name	establece el gestor de ||| set	count=1
function_name	frecuencia en la que ||| doc frequency	count=1
function_name	de interoperabilidad stubs ||| default stub	count=1
function_name	oposición a una ||| user defined	count=1
namespace	cuando se ||| gmagickdraw	count=2
function_name	devuelve el número de ||| get	count=6
arg_pair	eio_* ||| callable $execute int $pri	count=1
function_name	de compresión de una ||| compression	count=1
namespace	el directorio virtual ||| function	count=1
arg_pair	de mensaje y ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	lugar de emitir advertencias ||| rarexception	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() ||| int $max_neurons int $neurons_between_reports	count=1
namespace	lugar ||| rarexception	count=1
namespace	iterador filesystem ||| filesystemiterator	count=1
function_name	variables de reescritura establecidas ||| rewrite	count=1
function_name	[function_name_1] contenido ||| [function_name_2] [function_name_1]	count=1
function_name	formatos soportados por imagick ||| query formats	count=1
arg_pair	de unix ||| string $str	count=1
function_name	la descripción ||| cairo ps level	count=1
function_name	lote de objetos de ||| batch size	count=2
arg_pair	el texto ||| int $index	count=1
function_name	usando ||| highlight file	count=1
arg_pair	la información data ||| string $data	count=1
function_name	de compilación del complemento ||| mysqlnd qc get available	count=1
function_name	una intersección ||| uintersect	count=1
function_name	una única función ||| kernel	count=1
namespace	igual a ||| function	count=1
function_name	el índice ||| index	count=2
function_name	agregar ||| required	count=1
function_name	registrar su ||| register node	count=1
function_name	buscarán los archivos de ||| dbplus chdir	count=1
function_name	servidores de la agrupación ||| server	count=1
function_name	esquema ||| cubrid schema	count=3
arg_pair	retira espacios ||| string $str string $character_mask	count=1
namespace	una ventana o su ||| function	count=1
function_name	documentos ||| mlt min doc frequency	count=2
function_name	lista ||| broker list	count=1
function_name	cuantía para la ||| quantum	count=1
function_name	establece la calidad de ||| set qos	count=1
function_name	región de la imagen ||| image region	count=1
arg_pair	de miller-rabin para revisar ||| gmp $a int $reps	count=1
return	por ||| domnodelist	count=1
arg_pair	un set de result ||| resource $result	count=1
function_name	en la ||| get	count=1
arg_pair	stack es true ||| string $offset	count=1
namespace	mapa con ||| weakmap	count=1
arg_pair	[arg_pair_1] en una ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	0600 en el ||| string $dir string $prefix	count=1
arg_pair	un ||| resource $fdf_document string $filename	count=1
function_name	ejecuta ||| run	count=1
arg_pair	en un ||| resource $stmt	count=1
arg_pair	un conjunto de ||| resource $result	count=3
function_name	[function_name] de php ||| [function_name]	count=3
function_name	un mensaje de ||| curl strerror	count=1
function_name	del campo ||| mssql field	count=3
arg_pair	actual a un valor ||| resource $p	count=1
arg_pair	el nombre de una ||| resource $connection	count=1
function_name	descripción de la ||| cairo scaled font get font options	count=1
function_name	última ||| last	count=13
function_name	la función bindtextdomain() establece ||| bindtextdomain	count=1
function_name	de reintentos en ||| deadlock retry count	count=1
function_name	de los traits ||| class uses	count=1
function_name	fgets() excepto que fgetss() ||| fgetss	count=1
arg_pair	uid ||| int $uid	count=1
arg_pair	es un algoritmo ||| string $algorithm	count=1
arg_pair	menudo ||| int $pri	count=1
arg_pair	una base de ||| string $name	count=1
namespace	comprueba si el ||| imagick	count=1
function_name	devuelve la precisión ||| field precision	count=1
function_name	como ||| doc	count=1
arg_pair	fann_read_train_from_file() ||| resource $data string $file_name	count=1
arg_pair	datos del parámetro data ||| int $length	count=1
function_name	libera toda la ||| free result	count=1
function_name	las candidatas ||| fann get cascade	count=4
arg_pair	de needle ||| string $haystack string $needle	count=1
function_name	[function_name_1] compartido ||| [function_name_2] [function_name_1]	count=1
arg_pair	un string con barras ||| string $str	count=1
namespace	función de ||| imagickkernel	count=1
arg_pair	de un identificador ||| resource $result_id	count=1
arg_pair	copia de todos ||| bool $backup_original_files	count=1
namespace	diccionario indicado mediante el ||| function	count=1
arg_pair	iterar a ||| int $colnum	count=1
function_name	la imagen ||| image background	count=1
function_name	imap_mail_move() ||| imap undelete	count=2
function_name	campos a ||| fields	count=1
return	la época unix (1 ||| int	count=1
arg_pair	de una fila específica ||| int $row	count=1
function_name	advertencia esta función ||| memory	count=1
namespace	des ||| function	count=1
function_name	devuelve el número ||| imap msgno	count=1
function_name	la descripción de ||| cairo pattern get color stop rgba	count=1
function_name	nuevo objeto pdflib con ||| pdf new	count=1
function_name	copia los datos de ||| copy to array	count=1
namespace	tipo o ||| function	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] sarprop step [function_name_2]	count=4
arg_pair	información data la ||| string $data	count=1
arg_pair	y bcc ||| string $rpath	count=1
function_name	devuelve la primera muestra ||| first	count=1
function_name	tipo ||| set using exceptions	count=2
function_name	sincroniza la base ||| dba sync	count=1
function_name	[function_name_1] de odbc ||| [function_name_2] [function_name_1]	count=4
function_name	máximo de ||| set highlight max	count=1
function_name	espacio de nombres especificado ||| default	count=1
function_name	un recurso de conexión ||| connect	count=1
arg_pair	nueva ||| float $height float $xstep	count=1
function_name	siguiente si varias instrucciones ||| cubrid next result	count=1
function_name	mayúsculas ||| get cap height	count=1
function_name	[function_name_1] de documento ||| [function_name_2] [function_name_1]	count=1
namespace	a los cambios hechos ||| function	count=1
function_name	de un género correspondiente ||| get genre	count=1
arg_pair	con dos ||| string $password	count=1
return	de color de ||| bool	count=1
function_name	rebobina la secuencia ||| reset	count=1
function_name	manipulación directa [function_name] contenido ||| offset [function_name]	count=1
function_name	el número de funciones ||| functions count	count=1
namespace	que están en ||| function	count=1
function_name	recursos regulares actuales como ||| apd dump regular resources	count=1
function_name	rojo ||| image red	count=1
arg_pair	[arg_pair] caché ||| [arg_pair]	count=3
function_name	distribución de imagemagick ||| release	count=1
function_name	devuelve si un campo ||| get highlight	count=1
function_name	sisitema de archivos ||| stream wrapper register	count=1
function_name	el límite ||| fail limit	count=1
function_name	por lo menos ||| set mlt min	count=1
function_name	[function_name] con los ||| service proxy send [function_name]	count=1
namespace	la información que devuelven ||| function	count=1
function_name	de verificación ||| signature	count=1
function_name	los datos del ||| mailparse uudecode all	count=1
function_name	campos de ||| fields	count=3
function_name	de memoria compartida ||| shmop write	count=1
function_name	devuelve la porción de ||| mb stristr	count=1
function_name	sólo ||| exceptions	count=1
function_name	servicio ||| start service	count=1
return	usa ||| int	count=1
function_name	por ||| doc frequency	count=2
namespace	[namespace] contiene ficheros ||| [namespace]	count=1
return	la posición ||| void	count=1
function_name	obtiene la escala de ||| scale	count=1
arg_pair	versión plural de ||| string $msgid1	count=1
arg_pair	parecida ||| string $password string $charset	count=1
function_name	el número máximo de ||| max	count=5
function_name	prueba probabilística ||| prime	count=1
function_name	establece una ||| set	count=3
arg_pair	es decir ||| int $face string $filename	count=1
function_name	añade una ||| pdf add	count=1
arg_pair	desde buf ||| resource $socket string $buf	count=1
return	disponible ||| int	count=1
function_name	activa ||| odbc	count=1
function_name	y [function_name] ||| [function_name]	count=1
function_name	calcula la intersección de ||| array uintersect	count=1
function_name	[function_name] propiedades ||| cubrid [function_name]	count=2
function_name	una ||| kernel	count=1
function_name	utf-8 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	[arg_pair_1] de msql_fetch_row() ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	de session.cache_expire ||| session cache expire	count=1
function_name	wbmp de la imagen ||| imagewbmp	count=1
return	datos ||| string	count=1
function_name	el [function_name] ||| [function_name] query	count=3
function_name	[function_name] original de ||| [function_name]	count=2
function_name	miniatura de tamaño ||| thumbnail	count=1
function_name	versión menor de la ||| minorversion	count=1
function_name	para ||| set highlight	count=1
namespace	directorio virtual ||| function	count=1
function_name	principio del flujo del ||| rewind	count=1
function_name	de datos de entrenamiento ||| fann merge train data	count=1
function_name	disponibles ||| odbc data source	count=2
arg_pair	un segmento ||| int $key	count=1
function_name	[function_name] adicional ||| [function_name]	count=3
function_name	contiene pares ||| pspell config repl	count=1
function	[function_name_1] campo ||| [function_name_1] action resource $fdf_document [arg_pair_2] int	count=1
function_name	geoip está ||| geoip	count=1
function_name	función ||| ps open	count=1
function_name	acceso calificadores ccl ||| yaz ccl conf	count=2
function_name	de forma parecida ||| pconnect	count=1
function_name	especificada ||| entry compressionmethod	count=1
function_name	simplexml ||| simplexml	count=1
return	das xml que ||| void	count=1
function_name	devuelve [function_name] de la ||| [function_name]	count=1
function_name	mysql ||| mysql	count=8
function_name	de ssl para ||| sslchecks	count=1
arg_pair	nueva definición de ||| float $xstep	count=1
function_name	autenticación donde la ||| svn auth get	count=1
namespace	si ||| mongocursor	count=1
function_name	devuelve el número de ||| fann num	count=2
function_name	[function_name_1] línea ||| [function_name_2] [function_name_1]	count=7
arg_pair	en el objeto ||| int $flag	count=1
function_name	a minúsculas ||| strtolower	count=1
function_name	[function_name_1] sesión ||| [function_name_2] [function_name_1]	count=8
function_name	cada archivo codificado mediante ||| uudecode	count=1
function_name	no-bloqueo ||| blocking	count=1
return	el ||| int	count=27
function_name	disponible la lista de ||| ps open	count=1
function_name	de estado del ||| status	count=1
namespace	tar ||| phardata	count=1
arg_pair	delimiter ||| string $delimiter	count=1
function_name	de campos columnas de ||| numfields	count=1
namespace	de xml ||| sdo_das_xml_document	count=1
arg_pair	especificados por msglist al ||| resource $imap_stream string $msglist	count=1
function_name	filas afectadas por la ||| cubrid affected rows	count=1
return	nombres especificado ||| bool	count=1
namespace	devuelve ||| imagick	count=2
function	tupla [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	el tipo de ||| db2 field type	count=1
arg_pair	y path2 ||| string $path2 int $rev2	count=1
function_name	operación [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la descripción de la ||| cairo font face get type	count=1
return	el primer valor del ||| mixed	count=1
arg_pair	que coincida ||| mixed $target mixed $fill	count=1
function_name	en ||| nsapi	count=1
return	envía datos arbitrarios ||| bool	count=1
return	event_set() ocurra en ||| bool	count=1
return	nombre en la ||| bool	count=1
namespace	tar/zip ||| phardata	count=3
namespace	valor por omisión ||| reflectionparameter	count=2
return	array asociativo usando los ||| array	count=1
function_name	argumento es true ||| exceptions	count=1
function_name	la tangente para cada ||| tan	count=1
function_name	de respuesta ||| response	count=3
function_name	devuelve el factor ||| get	count=1
arg_pair	declara ||| bool $isid	count=1
namespace	un servidor de memcached ||| memcached	count=1
function_name	parámetros ||| add	count=1
return	de enero de ||| int	count=1
function_name	de ||| ping	count=1
function_name	php.ini se ha cargado ||| php ini loaded	count=1
arg_pair	del archivo ||| string $filename	count=1
function_name	gearmanclient::do() es ||| do	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() ||| int $neurons_between_reports	count=1
function_name	imagen ||| scheme	count=1
arg_pair	extendido [arg_pair] ||| [arg_pair]	count=1
function_name	de oracle pl/sql ||| oci	count=1
arg_pair	sybase_connect() con ||| string $servername string $username	count=1
function_name	recupera ||| proc get	count=1
function_name	del inicio de ||| ltrim	count=1
function_name	disponibles después de ||| data source	count=1
function_name	apuntador de archivo dado ||| mailparse uudecode	count=1
return	avanza la posición actual ||| void	count=1
arg_pair	esteblece [arg_pair_1] [arg_pair_2] todas las operaciones de ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	función cubrid_set_query_timeout() se ||| resource $req_identifier int $timeout	count=1
arg_pair	una búsqueda ||| string $msgid2	count=1
function_name	extrae cada archivo codificado ||| mailparse uudecode all	count=1
function_name	número de línea actual ||| current line number	count=1
function_name	la respuesta xml ||| response	count=1
arg_pair	un array de todos ||| resource $imap_stream string $ref	count=1
namespace	codificado por palabras ||| function	count=1
return	devuelve un array ||| array	count=2
function_name	un efecto de botón ||| raiseimage	count=1
function_name	menos tantos documentos como ||| min	count=1
function_name	consigna la transacción pendiente ||| commit	count=1
function_name	dado y ||| uudecode all	count=1
arg_pair	un resultado ||| resource $connection string $qualifier	count=3
arg_pair	obtiene un array de ||| resource $imap_stream	count=1
function_name	[function_name_1] alfa de ||| [function_name_2] [function_name_1]	count=8
function_name	de clase [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	las propiedades asociadas que ||| properties	count=1
arg_pair	a**r)/gamma r * ||| float $r	count=1
function_name	menos tantos ||| set mlt min doc	count=1
arg_pair	función pretende usarse como ||| string $class_name string $file_extensions	count=1
function_name	función devolverá la lista ||| source	count=1
function_name	conexión en ||| yaz connect	count=1
arg_pair	conexión al servidor mysql ||| mysqlnd_connection $connection string $host	count=1
function_name	descripción ||| cairo image surface get	count=1
function_name	o no final ||| final	count=1
function	abre [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	posicionado en el eleménto ||| xmlreader	count=1
function_name	decodifica ||| decode	count=2
return	del apuntador de archivo ||| array	count=1
arg_pair	es una implementación de ||| string $offset string $value	count=1
function_name	fichero desde donde ||| file	count=1
return	fichero al ||| bool	count=1
arg_pair	data y ||| string $data string $mode	count=1
namespace	un alias de ||| solrdocument	count=1
return	avanza la posición ||| void	count=1
function_name	serán ||| set mlt min doc	count=1
arg_pair	unicode unicode ||| mixed $codepoint int $namechoice	count=1
function_name	closedir() ||| close	count=1
arg_pair	un archivo de imagen ||| string $sections	count=1
arg_pair	se renombra/mueve ||| string $newparent	count=1
function_name	acumulación y ||| aggregate	count=1
arg_pair	la codificación ||| resource $fdf_document string $encoding	count=1
function	cabecera [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	proceso abierto mediante ||| proc get	count=1
function_name	habilita la incorporación ||| use krfonts	count=1
function_name	devuelve el tipo ||| gettype	count=1
arg_pair	índice ||| int $index int $flags	count=1
function_name	de inicialización iv ||| iv	count=1
function	[function_name_1] archivo ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
arg_pair	última aparición de needle ||| string $haystack mixed $needle	count=1
function_name	array asociativo desde ||| fetch array	count=2
return	todavía no se ||| int	count=1
return	puntero ||| bool	count=2
function_name	[function_name_1] objeto ||| [function_name_1] data [function_name_2]	count=1
arg_pair	verifica el ||| string $plaintext	count=1
arg_pair	base ||| string $password string $database	count=1
function_name	opciones con la varita ||| option	count=1
function_name	query_identifier ||| msql	count=1
function_name	una ||| add	count=1
function_name	opción ||| option	count=1
function_name	xml que ya ha ||| types	count=1
function_name	en por lo ||| min doc frequency	count=1
function_name	la fragmentación ||| highlight regex pattern	count=1
arg_pair	y ordena números de ||| string $charset	count=1
function_name	que determina lo grande ||| fann	count=1
function_name	obtiene los [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	una clave o/y ||| find	count=1
function_name	todos los servidores ||| ping	count=1
function_name	de encabezados ||| headers	count=1
arg_pair	documento xml desde la ||| string $filename	count=1
namespace	dada que ||| function	count=3
return	petición http en la ||| array	count=1
function_name	codificado mediante ||| mailparse	count=1
function_name	salidas de los ||| output	count=1
function_name	un solrinputdocument equivalente al ||| input document	count=1
function_name	los parámetros y de ||| params	count=1
function_name	formato utf-32 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	a ||| add kernel	count=4
function_name	devuelve el ||| memory get	count=1
function_name	finaliza ||| ps end	count=3
arg_pair	service para el ||| string $service	count=1
function_name	[function_name_1] xml ||| [function_name_2] [function_name_1]	count=8
function_name	una definida por ||| function	count=1
arg_pair	string para un ||| resource $connection	count=1
namespace	varita de píxeles ||| imagickpixel	count=1
arg_pair	prepara a query ||| string $query resource $link_identifier	count=1
namespace	simulado aclarando ||| gmagick	count=1
function_name	devuelve el ||| cubrid get	count=1
function_name	parámetros ||| add required parameter	count=2
function_name	[function_name_1] [function_name_2] ||| bool [function_name_1] parse [function_name_2]	count=9
arg_pair	función prepara ||| resource $id string $type	count=1
function_name	reinicia [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	por lo ||| doc	count=1
return	de relleno usado ||| void	count=1
arg_pair	de la columna ||| mixed $column	count=1
function_name	devuelve el ||| get host	count=1
function_name	devuelve un ||| mcrypt module get	count=1
function_name	la imagen obtenida ||| imagecreatefromgif	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] watermark [function_name_1]	count=4
function_name	el inverso del modulo ||| gmp invert	count=1
function_name	de estilo ||| set	count=1
function_name	con la adición del ||| imagecolorallocatealpha	count=1
function_name	de ||| is default	count=1
function_name	la descripción ||| cairo pdf surface create	count=1
namespace	con el [namespace] como una ||| [namespace]	count=1
arg_pair	método y la ||| string $data string $method	count=1
function_name	hace un diff ||| file diff	count=1
function_name	indicando error ||| set using exceptions	count=1
function_name	elimina todos los ||| delete by	count=1
function_name	diff unificado que ||| file diff	count=1
return	con las claves x ||| array	count=1
function_name	base ||| get	count=1
function_name	valor especial indicando error ||| set	count=1
function_name	alternativa más ||| imagecolorresolve	count=1
function_name	supervisión del [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	nombre de relation ||| resource $relation	count=1
function_name	fragmento ideal ||| highlight regex slop	count=1
function_name	liberación ||| udm free res	count=2
function_name	de flujo [function_name] ||| stream [function_name]	count=1
function_name	del formato utf-32 ||| pdf utf32	count=1
namespace	establecer ||| function	count=1
namespace	este ||| solrquery	count=1
function_name	depurado ||| apd set session trace	count=2
function_name	número es ||| prob	count=1
function_name	[function_name_1] pulse ||| [function_name_1] [function_name_2]	count=3
function	del campo [arg_pair_2] ||| [function_name_1] size [arg_pair_2]	count=1
function_name	la porción de haystack ||| strrchr	count=1
function_name	guid ||| mssql guid string	count=2
function_name	establece la ||| ms set qos	count=1
arg_pair	resolución ||| float $y_resolution	count=1
function_name	el nombre corto para ||| frame short name	count=1
function	prepara [arg_pair_2] ||| [function_name_1] resource $connection_id [arg_pair_2]	count=3
arg_pair	u otros ||| string $str	count=1
function_name	representa la imagen obtenida ||| imagecreatefromxpm	count=1
function_name	configura una opción ||| parser set option	count=1
namespace	valores usando una ||| arrayiterator	count=1
function_name	los permisos ||| perms	count=1
function_name	de dsn disponibles después ||| odbc data	count=1
function_name	prototipo del método ||| prototype	count=1
function_name	a dbx_query() con ||| dbx	count=1
function_name	de la asignación de ||| sma	count=1
function_name	error cuando la biblioteca ||| set	count=1
function_name	de entrenamiento ||| train	count=4
function_name	clave /encoding ||| encoding	count=1
arg_pair	solrquery::sethighlightalternatefield() se le pasó ||| int $fieldlength string $field_override	count=1
function_name	proceso abierto mediante el ||| get status	count=1
namespace	lo procesa línea por ||| function	count=1
return	son similares al ||| mongocursor	count=1
arg_pair	desde un fichero ||| resource $font_index string $encodingfile	count=1
return	la api graphicsmagick ||| string	count=1
return	cambia las opciones ||| bool	count=1
function_name	punto primario [function_name_2] ||| [function_name_2] [function_name_1]	count=46
return	ctm en ||| bool	count=1
function_name	recibe ||| recv	count=1
function_name	la función de activación ||| activation	count=4
function_name	en por lo menos ||| mlt min doc frequency	count=1
arg_pair	la de memcached::set() ||| int $expiration	count=1
function_name	que pertenecen a esta ||| class names	count=1
arg_pair	una ||| string $height	count=1
function_name	sybase_connect() con dos ||| sybase	count=1
arg_pair	es una manera ||| string $name mixed $value	count=1
arg_pair	método gearmanclient::setstatuscallback() ||| string $context	count=1
function_name	por ||| set mlt min	count=1
function_name	información de estado ||| add task status	count=1
function_name	devuelve el ||| broker get	count=1
function_name	la función geoip_country_code_by_name() ||| country code by name	count=1
namespace	la clase es decir ||| reflectionclass	count=1
function_name	número máximo de ||| set highlight max	count=1
function_name	documento ||| document	count=4
function_name	por lo menos ||| doc frequency	count=1
function_name	escala el ||| scale	count=2
namespace	carga un segundo ||| sdo_das_xml	count=1
namespace	imagick para una ||| imagick	count=1
namespace	función definida por ||| arrayiterator	count=2
function_name	el árbol de casillas ||| newt checkbox tree find item	count=1
function_name	género correspondiente ||| get genre	count=1
arg_pair	una definición ||| string $contents int $options	count=1
function_name	unix o ||| crypt	count=1
arg_pair	fichero fd ||| resource $fd	count=1
function_name	paso ||| get rprop delta	count=2
function_name	hace borrosa ||| blur	count=1
function_name	bordes de la imagen ||| raiseimage	count=1
function_name	iterador de array que ||| iterator	count=1
namespace	un valor especial ||| rarexception	count=1
function_name	del proceso actual ||| posix	count=2
namespace	error cuando ||| rarexception	count=1
namespace	conocia como cursores de ||| mongocursor	count=1
arg_pair	filename ||| mixed $data	count=1
namespace	soportados por ||| function	count=3
function_name	descripción ||| cairo font options get	count=4
return	conocia como ||| mongocursor	count=1
function_name	cada servidor ||| server	count=1
function_name	una excepción ||| using exceptions	count=1
function_name	puedan aplicarse ||| add kernel	count=1
function_name	devuelve el nombre de ||| db2 field name	count=1
function_name	widrow + nguyen ||| fann init weights	count=1
arg_pair	define el contenedor en ||| resource $fdf_document string $frame_name	count=1
arg_pair	fgetss() intenta eliminar cualesquiera ||| resource $handle int $length	count=1
return	una excepción de tipo ||| void	count=1
return	existe [return] el ||| [return]	count=3
function_name	or de ||| or	count=1
function_name	el tamaño del campo ||| field size	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $out [arg_pair_2]	count=2
arg_pair	por dn [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	de espera de la ||| timeout	count=3
function_name	de declaración de entidades ||| entity decl	count=1
function_name	árbol de casillas ||| newt checkbox tree find	count=1
function_name	encripta la información dada ||| openssl encrypt	count=1
function_name	obtiene ||| stream get	count=1
namespace	eliminar cualesquiera bytes ||| function	count=1
function_name	indicado mediante el ||| closedict	count=1
arg_pair	de la ||| int $x	count=1
function_name	función reemplaza ||| replace	count=1
arg_pair	un año ||| int $year int $method	count=1
arg_pair	data la ||| string $data	count=1
function_name	código ||| code	count=2
function_name	extrae cada archivo ||| all	count=1
namespace	van ||| solrquery	count=1
namespace	o ambos ||| sqlite3result	count=1
namespace	el objeto ||| yaf_controller_abstract	count=1
function_name	función cubrid_error_code() se usa ||| cubrid error code	count=1
arg_pair	cubrid_set_query_timeout() se usa para ||| int $timeout	count=1
function_name	iterador que es usado ||| iterator	count=1
arg_pair	por dn ||| string $dn	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] input scaling params [arg_pair_2]	count=2
namespace	una diferencia se ||| function	count=1
arg_pair	el objeto gmagickpixel de ||| gmagickpixel $color	count=1
namespace	diferencia se ||| function	count=1
function	aguja en [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	comprueba si la posición ||| bool	count=1
function_name	fragmento ideal especificado ||| set highlight regex slop	count=1
function_name	número de filas que ||| rows	count=1
return	[return] todas ||| [return]	count=1
return	trabajo para ver ||| bool	count=1
arg_pair	una columna de un ||| resource $stmt mixed $column	count=1
function_name	versión escapada de la ||| cubrid real escape	count=1
function_name	un archivo fifo especial ||| posix mkfifo	count=1
function_name	segmento de datos lob ||| lob	count=1
arg_pair	arrays al mismo ||| array $array1 mixed $array1_sort_order	count=1
function_name	servidor virtual ||| server	count=1
namespace	http ||| oauth	count=1
arg_pair	las propiedades correspondientes ||| int $row	count=1
arg_pair	rango especificado de páginas ||| string $prefix	count=1
function_name	borra el ||| delete	count=1
function_name	archivo/usuario de apc ||| bin	count=1
function_name	casillas de verificación ||| newt checkbox tree find item	count=1
function_name	parámetro de exception::__construct() ||| previous	count=2
function_name	y la desencripta ||| openssl decrypt	count=1
function_name	fuente usada cuando se ||| getfont	count=1
function_name	para el ||| imap	count=1
arg_pair	name0 es un ||| string $name0	count=1
arg_pair	contexto log_cmd_update ||| array $updateoptions array $protocoloptions	count=1
function_name	biblioteca unrar ||| using exceptions	count=1
arg_pair	con ||| string $password	count=1
arg_pair	como una función escalar ||| string $name	count=1
return	para que ambos ||| void	count=1
function_name	generación de trozos remarcados ||| highlight	count=1
function_name	estado http de la ||| http status	count=1
function_name	complemento apuntada ||| mysqlnd ms	count=1
return	aparecen en el parámetro ||| string	count=1
function_name	la ubicaciones de certificados ||| cert locations	count=1
namespace	un yar_client hacia un ||| yar_client	count=1
namespace	ha sido creado con ||| sdo_das_xml	count=1
arg_pair	cubrid y ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	usarse para ordenar varios ||| multisort	count=1
arg_pair	key desde la ||| string $key	count=1
function	[function_name_1] el búfer ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] a ||| [function_name_2] [function_name_1]	count=11
return	nueva sesión o ||| bool	count=1
arg_pair	una colección ||| array $docs bool $overwrite	count=1
function_name	variable vinculada de oracle ||| oci bind	count=1
function_name	la búsqueda finalice ||| set time allowed	count=1
function_name	letras en minúsculas ||| get xheight	count=1
function_name	el [function_name] ||| [function_name] set	count=1
function_name	analiza el ||| bbcode parse	count=1
return	establecer los colores de ||| int	count=1
function_name	obtiene los [function_name_2] ||| [function_name_1] class [function_name_2]	count=1
arg_pair	key ||| int $padding	count=1
arg_pair	por msglist al ||| string $msglist	count=1
function_name	de la fila ||| sqlsrv fetch	count=1
arg_pair	inicio de ||| string $str	count=1
arg_pair	datos codificados en raw/gzip/zlib ||| string $max_decoded_len	count=1
return	desde ||| sdo_das_xml_document	count=1
return	el pid del id ||| int	count=1
function_name	pdf con ||| pdf	count=1
function_name	emitir advertencias ||| set	count=1
function_name	devuelve la severidad ||| get severity	count=3
function_name	subsiguiente fichero de ||| types	count=1
function_name	propiedad gravedad global para ||| gravity	count=1
function_name	las palabras que ||| set mlt	count=1
function_name	devuelve el ||| introspection get state variable	count=1
arg_pair	utiliza para hacer llamadas ||| array $options mixed $input_headers	count=1
return	conocia como cursores de ||| mongocursor	count=1
return	y devolver un valor ||| void	count=1
function_name	el número total ||| fann get total	count=1
function_name	retorno de una acción ||| gupnp service action	count=1
function_name	fbsql_fetch_array() con una ||| fbsql fetch	count=1
arg_pair	cc ||| string $cc	count=1
function_name	voltea la imagen ||| imageflip	count=1
function_name	como ||| set	count=1
function_name	[function_name_1] eventos de ||| [function_name_2] watermark [function_name_1]	count=1
function_name	con el id dado ||| id	count=1
function_name	campos de los ||| fields	count=1
arg_pair	el ||| int $type	count=1
namespace	biblioteca sqlite3 como ||| sqlite3	count=1
function_name	transacciones [function_name] a ||| [function_name] get last	count=1
return	devuelve una ||| string	count=5
function_name	imagen a ||| image	count=2
arg_pair	área rectangular ||| float $lly	count=1
function_name	imagen ccitt ||| ccitt	count=1
function_name	los nombres de ||| names	count=1
return	candidatas en ||| bool	count=1
function_name	descripción de la ||| cairo ps surface get	count=1
function_name	script si el objeto ||| get active object	count=1
function_name	establece la ||| set include path	count=1
namespace	del texto que ||| function	count=1
function	[function_name_1] database especificada ||| [arg_pair_2] [function_name_1]	count=2
namespace	archivos que contenía ||| function	count=1
namespace	entrada definido por su ||| ziparchive	count=1
function_name	de prioridad de los ||| priority	count=1
function	prioridad de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	recupera información ||| status	count=1
namespace	que apunta a ||| function	count=2
function_name	las letras en mayúsculas ||| cap height	count=1
function_name	documentos como este ||| mlt min	count=1
function_name	columna [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la función ||| prob	count=1
function_name	[function_name_1] y ||| [function_name_2] [function_name_1]	count=18
namespace	el ||| sqlite3result	count=1
function_name	entrenamiento quickprop ||| fann get quickprop	count=1
function_name	esta función devolverá la ||| data source	count=1
return	parámetro errno como un ||| string	count=1
function_name	un objeto ||| object	count=3
arg_pair	desde str en ||| mixed $fd string $str	count=1
function_name	base ||| dba	count=1
function_name	devuelve la cadena ||| get	count=1
arg_pair	resultado en un ||| string $new_file2	count=1
function_name	palabra máxima sobre la ||| max word	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] handler [arg_pair_2]	count=19
function_name	el tamaño ||| lob2 size	count=1
function_name	si el argumento ||| set using exceptions	count=1
arg_pair	socket. -- ||| zmqsocket $frontend	count=1
function_name	que apunta conn_handle actualmente ||| cubrid commit	count=1
function_name	de baudios del ||| dio tcsetattr	count=1
arg_pair	cubrid_put() se usa para ||| mixed $value	count=1
function_name	página sujeta ||| fit pdi page	count=1
function_name	ps_stringwidth() excepto que devuelve ||| ps string geometry	count=1
namespace	especifica el ||| solrquery	count=1
namespace	que describe ||| ev	count=1
function_name	advertencia esta ||| open memory	count=1
function_name	[function_name_1] documentos en ||| [function_name_1] [function_name_2]	count=1
namespace	es un carácter «en ||| intlchar	count=1
namespace	el número de secuencia ||| function	count=1
function_name	o información asociada ||| info	count=1
function_name	[function_name] pendiente ||| [function_name] activation steepness	count=1
function_name	acceder al semáforo ||| sem	count=1
namespace	apuntador de ||| function	count=1
function_name	factor de escala a ||| scale	count=1
function_name	[function_name_1] atributo ||| [function_name_2] [function_name_1]	count=15
function_name	[function_name_1] nombre de ||| [function_name_2] [function_name_1]	count=3
arg_pair	una ||| resource $image	count=1
function_name	la ||| memory image	count=2
function_name	el semáforo pueda ||| sem	count=1
arg_pair	fichero fd ||| int $uid	count=1
arg_pair	address al socket descrito ||| string $address	count=1
return	ficheros dados en la ||| bool	count=1
function_name	[function_name_1] de verificación ||| [function_name_1] [function_name_2]	count=1
function_name	debería usarse para ||| set metadata	count=1
function_name	mediante el uso ||| proc get status	count=1
namespace	obtiene la ||| gmagick	count=1
function_name	factor de ||| factor	count=4
function_name	[function_name_1] superior en ||| [function_name_2] [function_name_1]	count=2
function_name	un error una excepción ||| using	count=1
function_name	devolverá el número total ||| total space	count=1
function_name	de correo correctamente formateada ||| imap rfc822 write address	count=1
return	devolverán en el array ||| array	count=1
function_name	[function_name_1] faceta ||| [function_name_2] [function_name_1]	count=4
arg_pair	de operaciones update ||| mongocollection $collection array $write_options	count=1
function_name	advertencias y devolver un ||| set	count=1
function_name	de color especificado ||| color value	count=1
function	un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	ssh2 ya ||| ssh2	count=1
function_name	el evento ||| event	count=1
arg_pair	esta función pretende usarse ||| string $class_name string $file_extensions	count=1
function_name	de primer plano ||| ncurses color set	count=1
function_name	texto contiene únicamente espacios ||| is whitespace in element content	count=1
function	[function_name_1] con ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	actual a x y ||| float $y	count=1
function_name	devuelve el resto ||| get contents	count=1
function_name	columna actual ||| current column	count=1
function_name	[function_name_1] la impresión ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] de una ||| [arg_pair_2] [function_name_1]	count=9
function	imagen [arg_pair_2] ||| [function_name_1] channel distortions [arg_pair_2]	count=1
return	el carácter delimitador y ||| array	count=1
function_name	las letras en mayúsculas ||| get cap height	count=1
function_name	palabras que no ||| doc	count=1
arg_pair	checkbox ||| string $value	count=1
arg_pair	idéntica a ||| resource $handle	count=1
function_name	[function_name] menos ||| adaptive sharpen [function_name]	count=2
function_name	si ||| set	count=2
arg_pair	operaciones insert ||| mongocollection $collection array $write_options	count=1
arg_pair	object es ||| object $object	count=1
function_name	consulta siguiente si varias ||| cubrid next result	count=1
function_name	inicio de ||| ltrim	count=1
function_name	compresión bzip2 o zlib ||| compress	count=1
return	datos del apuntador ||| array	count=1
function_name	devuelve el nombre base ||| get	count=1
function_name	excepción de ||| set	count=1
function_name	a cabo una transacción ||| commit	count=1
function_name	aplicarse a una ||| add	count=1
namespace	trabajo y llama a ||| gearmanworker	count=1
function_name	la base de ||| select db	count=1
function_name	una excepción de ||| set	count=1
function_name	de aplicar ||| bdiff	count=1
arg_pair	valor de ||| int $type mixed $value	count=1
namespace	cada carácter que ||| function	count=1
arg_pair	se usa para iterar ||| resource $stmt int $colnum	count=1
function_name	[function_name_1] filas ||| [function_name_1] affected [function_name_2]	count=1
namespace	mongocommandcursor manualmente ya ||| mongocommandcursor	count=1
function_name	de clase iterador de ||| iterator class	count=1
return	este ||| solrquery	count=1
function_name	que se van ||| set start	count=1
arg_pair	fichero fd ||| int $offset	count=1
return	cadena ||| string	count=4
function_name	usa la ||| prime	count=1
function_name	este método devuelve una ||| to string	count=2
arg_pair	el final de pajar ||| string $haystack	count=2
return	el final en ||| int	count=1
function_name	por lo menos ||| set	count=1
function_name	disponible la lista de ||| open	count=1
function_name	devuelve la versión de ||| version	count=2
function_name	información de campos de ||| fetch field	count=1
arg_pair	una base de datos ||| string $schema	count=1
function_name	lista de dsn disponibles ||| data	count=1
return	de tipo ||| void	count=1
arg_pair	directorio al ||| string $path	count=1
arg_pair	con ||| string $username	count=1
return	un ||| int	count=24
function_name	apuntador de filas interno ||| data seek	count=1
function_name	su nombre y devolver ||| from name	count=1
function	[function_name_1] xml dump ||| [function_name_1] restore [arg_pair_2]	count=2
function_name	dos dimensiones [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	uno dos ||| number	count=1
namespace	número de ||| solrquery	count=1
namespace	del objeto domnamednodemap ||| domnamednodemap	count=1
function_name	el comentario de ||| comment	count=1
function_name	conocida por el ||| is known	count=1
arg_pair	disponibles ||| string $str	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $oldname [arg_pair_2]	count=1
arg_pair	abstracción que se defina ||| zmqsocket $frontend	count=1
return	entrada ||| int	count=1
namespace	invertidas ||| function	count=1
function_name	ambos puedan ||| add kernel	count=1
return	coordenadas ||| bool	count=1
return	que se defina sobre ||| zmqsocket	count=1
function_name	[function_name] de el ||| get [function_name]	count=1
function_name	ideal especificado por solrquery::sethighlightfragsize) ||| regex slop	count=1
function_name	devuelve ||| imap msgno	count=2
function_name	calcula la intersección ||| uintersect assoc	count=1
function_name	establece la función de ||| set	count=6
function	escribe información [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	una imagen ||| string $name	count=1
namespace	un ||| solrdocument	count=1
arg_pair	de un assoc_array ||| int $options	count=1
arg_pair	una o más imágenes ||| imagick $image	count=1
namespace	a la [namespace] ||| [namespace]	count=1
arg_pair	string str ||| string $str	count=1
return	en un archivo temporal ||| array	count=1
function_name	la distancia especificada ||| pixel similar quantum	count=1
function_name	el propietario del fichero ||| fchown	count=1
function_name	y devuelve la ||| mb	count=3
arg_pair	y negro ||| float $gamma	count=1
function_name	del byte actual en ||| get current byte index	count=1
function_name	lo menos tantos ||| frequency	count=1
namespace	el formato dado por ||| function	count=1
return	como una ||| array	count=1
function_name	api de eventos ||| event	count=1
function_name	error ||| using exceptions	count=4
function_name	el id dado ||| id	count=1
function_name	bindtextdomain() establece ||| bindtextdomain	count=1
function_name	de filas ||| set start	count=1
function_name	[function_name_1] la transformación ||| [function_name_2] [function_name_1]	count=2
arg_pair	en fann_get_cascade_output_stagnation_epochs() ||| int $neurons_between_reports	count=1
namespace	si ||| oci-lob	count=1
function_name	la frecuencia bajo la ||| frequency	count=1
function_name	libera ||| oci free	count=1
function_name	otro ||| kernel	count=1
function_name	documentos como ||| min	count=1
function_name	que ambos puedan aplicarse ||| add	count=1
arg_pair	acceso recursivamente path1 y ||| string $path1 int $rev1	count=1
function_name	[function_name_1] [function_name_2] buscado ||| [function_name_2] [function_name_1]	count=8
function_name	información sobre la ||| curl	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] max word [function_name_2]	count=2
function_name	de entrada a las ||| get	count=2
namespace	adjunta otro núcleo («kernel») ||| imagickkernel	count=1
return	la ruta actual usando ||| bool	count=1
function_name	una línea ||| line	count=2
function_name	donde id ||| by id	count=2
function_name	propiedad de unicode alphabetic ||| ualphabetic	count=1
function_name	de petición http ||| nsapi request	count=1
namespace	cuenta ||| gmagickpixel	count=1
function_name	instante valores [function_name] ||| update [function_name]	count=1
namespace	el pid ||| mongoid	count=1
function_name	variables [function_name] ||| [function_name]	count=1
function_name	establece la ||| default timezone set	count=1
function_name	afectadas por la ||| fetched	count=1
arg_pair	una variable ||| string $key mixed $var	count=2
namespace	la ||| harupage	count=7
namespace	actual ||| harupage	count=11
function_name	asociativo ||| fetch	count=1
arg_pair	de relation al ||| resource $relation	count=1
function_name	vincula ||| db2 bind	count=1
function_name	del canal de color ||| get color	count=1
arg_pair	devuelve el identificador de ||| resource $result_identifier	count=1
function_name	nombre del sistema ||| eio unlink	count=1
function_name	consulta preparada por sqlsrv_prepare() ||| sqlsrv	count=1
return	de ||| sdo_das_xml_document	count=1
arg_pair	la [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	obtiene ||| device get	count=1
function_name	callback [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	enviar en ||| bool	count=1
function_name	de sesión actual ||| session	count=1
function_name	advertencia esta ||| memory	count=1
arg_pair	algoritmo ||| string $lib_dir	count=2
arg_pair	un año ||| int $year	count=1
function_name	si el objeto ||| object	count=1
arg_pair	[arg_pair_1] texto ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	de autocommit ||| db2 autocommit	count=1
arg_pair	compara value1 ||| mixed $value2	count=1
function_name	cubrid_lock_read() se usa para ||| cubrid lock read	count=1
function_name	obtiene ||| context get	count=2
arg_pair	left con ||| mixed $left	count=1
arg_pair	a image dada una ||| float $inputgamma	count=1
function_name	nombre ||| name	count=49
function_name	una nueva [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	función va aquí ||| cairosurfacepattern $pattern int $filter	count=1
function_name	actual nodo incluyendo el ||| outer xml	count=1
function_name	los fragmentos a considerara ||| fragsize	count=1
function_name	lee información blob/clob y ||| cubrid lob send	count=1
function_name	retraso de ||| delay	count=1
function_name	cierra el trazado y ||| pdf closepath	count=1
return	la descripción de una ||| string	count=1
function_name	centrada de ||| centered	count=1
namespace	o los nombres o ||| function	count=1
arg_pair	retrollamadas se ejecutan en ||| mixed $subject	count=1
function_name	llamar cuando un trabajador ||| callback	count=1
arg_pair	una nueva entrada ||| string $key int $value	count=1
namespace	segundo o subsiguiente ||| sdo_das_xml	count=1
function_name	medianoche de pascua ||| easter date	count=1
arg_pair	un efecto de botón ||| int $width int $height	count=1
arg_pair	carácter c verticalmente ||| string $c	count=1
function_name	escala la imagen ||| image	count=1
function_name	primo ||| gmp prob prime	count=2
function_name	[function_name_1] rra por ||| [function_name_1] [function_name_2]	count=1
function_name	de ||| add types	count=2
arg_pair	un string para un ||| resource $connection string $data	count=1
namespace	y t tal que ||| function	count=1
function_name	directorio virtual actual donde ||| dbplus chdir	count=1
arg_pair	poder utilizarlo con las ||| string $separator	count=1
function_name	de palabras dentro de ||| str word	count=1
arg_pair	de direcciones ||| zmqsocket $backend	count=1
function_name	devuelve una matriz ||| get field names	count=1
namespace	y escribe el ||| splfileobject	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] image blue [function_name_2]	count=1
arg_pair	abstracción que se ||| zmqsocket $frontend	count=1
namespace	de manera que los ||| function	count=1
function_name	descripción ||| cairo scaled font extents	count=1
arg_pair	número layer contando ||| int $layer	count=3
function_name	hilo de la ||| mysqli thread	count=1
function_name	a [function_name_2] ||| bool is [function_name_1] [function_name_2]	count=1
function_name	módulos cargados en el ||| get modules	count=1
arg_pair	del fichero [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	pdf usando el nombre ||| pdf open	count=1
function_name	función ||| open memory	count=1
function_name	establece el [function_name_2] ||| [function_name_1] sarprop step error [function_name_2]	count=2
arg_pair	signed_text y ||| string $signed_text	count=1
function_name	y trata de conectarla ||| pg ping	count=1
function_name	zona horaria ||| time zone	count=1
function_name	de petición http en ||| nsapi request	count=1
arg_pair	analizar ||| string $encoding	count=1
function_name	unrar encuentre un ||| set using exceptions	count=1
function	corta una [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	ingres [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	selecciona [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	arrays con una comprobación ||| array $array1	count=2
function_name	parámetro a ||| param	count=1
function_name	la lista de parámetros ||| image	count=1
namespace	directorio hasta volver ||| filesystemiterator	count=1
function_name	de instancia ||| string	count=1
function_name	[function_name_1] posición numérica ||| [function_name_2] [function_name_1]	count=2
arg_pair	entrecomilla el string de ||| int $parameter_type	count=1
function_name	cubrid_list_dbs() ||| cubrid db	count=1
function_name	un [function_name_2] ||| [function_name_2] bind [function_name_1]	count=2
arg_pair	nueva definición ||| float $xstep	count=1
function_name	esta función ||| open	count=1
function_name	obtiene el puerto del ||| get	count=1
function_name	tamaño de paso inicial ||| get rprop delta zero	count=1
arg_pair	de una base de ||| string $name	count=1
namespace	llamada [namespace] una función ||| [namespace]	count=1
function_name	información ||| status	count=1
arg_pair	una base de ||| string $database resource $link_identifier	count=1
function_name	si la clase es ||| is	count=2
function_name	del apuntador de archivo ||| mailparse uudecode all	count=1
arg_pair	de relation la hace ||| resource $relation	count=2
function_name	especial indicando error ||| exceptions	count=1
namespace	la ||| solrdocument	count=1
namespace	desde la cadena ||| sdo_das_xml	count=1
arg_pair	tupla dentro de relation ||| resource $relation	count=1
function_name	propio sobre cualquier flujo ||| stream	count=1
function_name	recupera el objeto respuesta ||| response	count=1
function_name	dado y ||| uudecode	count=1
namespace	serializada del hash ||| quickhashinthash	count=1
function_name	actual del ||| current	count=3
arg_pair	codificación ||| resource $fdf_document string $encoding	count=1
namespace	matriz ||| gmagick	count=1
function_name	devuelve el ||| yaz get	count=1
function_name	la lista de dsn ||| data	count=1
arg_pair	botón tridimensional simulado ||| int $y	count=1
arg_pair	los ||| int $height	count=1
namespace	blanco u otros ||| function	count=1
return	cursores de seguimiento tailable ||| mongocursor	count=1
arg_pair	relation ||| resource $relation	count=7
function_name	núcleo en oposición ||| internal	count=1
function_name	fila de resultados en ||| fetch	count=1
return	nodo es ||| bool	count=1
function_name	mediante un cursor ||| cursor	count=1
function_name	de extensión de socket ||| socket	count=1
function_name	[function_name_1] del servicio ||| [function_name_2] [function_name_1]	count=8
function_name	rutina de interoperabilidad ||| set stub	count=1
function_name	[function_name_1] afectadas por ||| [function_name_1] [function_name_2]	count=4
namespace	dado por name ||| function	count=1
return	para lectura ||| resource	count=2
arg_pair	un bit es ||| gmp $a	count=1
function_name	rebobina ||| reset stream	count=1
function_name	una variación [function_name] memcached::setoption() ||| [function_name]	count=1
function_name	datos geoip ||| geoip	count=1
function_name	otra ||| compositeimage	count=1
function_name	acción ||| action	count=5
arg_pair	corrección gamma a image ||| float $inputgamma	count=1
namespace	omisión ||| reflectionparameter	count=2
return	dados en la ||| bool	count=1
arg_pair	última ocurrencia de ||| string $haystack	count=1
return	donde se buscarán ||| string	count=1
arg_pair	pueden hacer ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	proxy ||| proxy	count=2
arg_pair	dado para ||| int $dbase_identifier	count=1
namespace	dibujar rellanar [namespace] ||| [namespace]	count=1
function_name	el tamaño actual de ||| zip entry filesize	count=1
function_name	tarea en ||| do	count=2
namespace	de intermediarios ||| zmqdevice	count=1
arg_pair	el estilo ||| int $style	count=1
arg_pair	el evento ||| resource $event	count=1
function_name	copyright de ||| getcopyright	count=1
namespace	que está asociado con ||| function	count=1
return	número de secuencia de ||| int	count=1
arg_pair	tan compatible ||| int $content	count=1
arg_pair	una imagen ||| string $filename	count=2
arg_pair	punto actual a x ||| float $x	count=1
function_name	imagecolorallocatealpha() ||| imagecolordeallocate	count=1
function_name	sets tie breaker parameter ||| tie breaker	count=1
function_name	control ||| gupnp control	count=1
function_name	devuelve una imagen de ||| sub image	count=1
function_name	[function_name_1] [function_name_2] propiedades ||| [function_name_1] [function_name_2] object	count=7
namespace	tipo stream fstream o ||| function	count=1
arg_pair	si un número es ||| gmp $a	count=1
return	devolverá ||| array	count=1
arg_pair	archivos ||| string $old_file	count=1
arg_pair	cc [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	xsltprocessor ||| string $namespace string $name	count=1
function_name	renombra o ||| rename	count=1
function_name	comprueba si ||| is nick	count=1
arg_pair	documentada actualmente solamente ||| resource $agent	count=1
function_name	de imagemagick ||| release	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] move [arg_pair_2]	count=3
function_name	splobjectstorage ||| hash	count=1
return	unrar encuentre ||| void	count=1
function_name	activación ||| activation	count=8
function_name	devuelve [function_name_2] ||| [function_name_1] inner [function_name_2]	count=1
function_name	siguiente resultado ||| next result	count=2
arg_pair	memcached::cas() con la excepción ||| float $cas_token	count=1
function_name	especifica el término ||| set terms lower bound	count=1
namespace	de base de las ||| harufont	count=1
function_name	computa una intersección de ||| uintersect	count=1
function_name	[function_name] número ||| [function_name]	count=1
arg_pair	obtiene un array ||| resource $imap_stream string $ref	count=1
function_name	función acepta uno ||| number	count=1
namespace	-- ||| zmqdevice	count=1
function_name	serán ||| mlt min doc frequency	count=2
function_name	un proceso ||| proc get	count=1
function_name	lista de ||| odbc data	count=1
function_name	parche ||| xdiff	count=1
arg_pair	efecto de botón tridimensional ||| int $y	count=1
function_name	número de filas del ||| rows	count=1
function_name	un valor especial ||| set using exceptions	count=1
function_name	función de ||| add	count=1
arg_pair	es casi idéntico al ||| mixed $subject int $limit	count=1
arg_pair	esta ||| resource $connection_id	count=1
return	un string que representa ||| string	count=1
function_name	[function_name_1] conjunto ||| [function_name_2] [function_name_1]	count=5
function_name	una copia ||| copy	count=1
function_name	logo de php ||| php logo guid	count=1
function_name	[function_name_1] control de ||| [function_name_1] [function_name_2]	count=2
function_name	de lectura/escritura definida por ||| user pick server	count=1
function_name	de instrucciones de proceso ||| set processing instruction	count=1
function_name	centrada de un tamaño ||| centered	count=1
function_name	extensión de ||| get extension	count=1
function_name	siguiente [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	índice de la imagen ||| index	count=1
return	disponibles en el ||| string	count=1
arg_pair	y socket. -- ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	de la opción especificada ||| ldap get option	count=1
return	el de estilo ||| bool	count=1
function_name	reescritura establecidas previamente ||| output reset rewrite vars	count=1
function_name	de oracle client ||| oci	count=1
function_name	y equilibrado ||| ms	count=1
namespace	entrada ||| quickhashstringinthash	count=1
function_name	función devolverá la ||| source	count=1
function_name	[function_name_1] asignación ||| [function_name_2] [function_name_1]	count=4
function_name	codificación de caracteres inicial ||| convert encoding	count=1
function_name	en un das ||| add	count=1
function_name	de secuencia de mensaje ||| imap msgno	count=1
function_name	establece el [function_name_2] ||| [function_name_1] quickprop [function_name_2]	count=1
arg_pair	campo es decir el ||| string $filename	count=1
function_name	y equilibrado de ||| ms	count=1
arg_pair	valor de ||| string $value	count=2
namespace	o su ||| function	count=1
function_name	el contexto de ||| context	count=1
namespace	a este para ||| imagickkernel	count=1
arg_pair	primera ocurrencia de un ||| string $haystack	count=1
function_name	e indexa numéricamente el ||| values	count=1
arg_pair	xml desde la ||| string $filename	count=1
function_name	número de registros en ||| px numrecords	count=1
function_name	tipo ||| exceptions	count=1
namespace	el almacenamiento ||| splobjectstorage	count=1
function_name	los ||| array	count=1
arg_pair	arrays con ||| array $array1	count=3
function_name	los elementos invertido ||| reverse	count=1
arg_pair	de la imagen ||| int $width int $height	count=1
function_name	núcleo en oposición a ||| internal	count=1
function_name	borrar un ||| win32 delete	count=1
arg_pair	sybase_connect() con ||| string $username	count=1
namespace	o pasado mediante una ||| function	count=1
function_name	la publicación de un ||| ap	count=1
namespace	de trabajo o un ||| function	count=1
function_name	obtiene varios ||| ps get	count=1
function_name	el glifo de ||| ps symbol	count=1
namespace	se dan ||| function	count=1
function_name	msql asociado con ||| msql data	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] quantum [function_name_2]	count=2
function_name	de transparencia ||| matte floodfill image	count=1
namespace	hacer de ||| zmqdevice	count=1
return	fichero de esquema en ||| void	count=1
function_name	[function_name] estilo ||| [function_name]	count=2
namespace	sobre un ||| function	count=1
function_name	escapa un string para ||| pg escape	count=1
return	actual y escribe el ||| int	count=1
function_name	sybase_connect() ||| sybase pconnect	count=2
function_name	a sybase_connect() ||| sybase pconnect	count=1
function	[function_name_1] por relation ||| [arg_pair_2] [function_name_1]	count=3
function_name	esta función crea ||| create entity reference	count=1
function	obtiene [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	absoluto canonizado en el ||| realpath	count=1
function_name	imagen potencial ||| getimagetype	count=1
namespace	el ||| harupage	count=1
arg_pair	o más imágenes y ||| imagick $image int $channeltype	count=1
function_name	de los parámetros y ||| params	count=1
function_name	obtiene la transformación ||| get text matrix	count=3
function_name	una ||| set using	count=1
return	html y ||| string	count=1
arg_pair	flujo imap dado ||| resource $imap_stream	count=1
namespace	subsiguiente ||| sdo_das_xml	count=1
function_name	establece ||| set qos	count=2
function_name	control de [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	descripción de ||| cairo ps surface create	count=1
arg_pair	es una versión ||| resource $result	count=2
arg_pair	realiza una consulta aql ||| string $query	count=1
function_name	[function_name_1] instrucciones ||| [function_name_2] [function_name_1]	count=6
return	basados en ||| bool	count=1
arg_pair	en ||| bool $status	count=1
arg_pair	el algoritmo especificado ||| string $algorithm string $lib_dir	count=1
function_name	color especificado como un ||| color	count=1
function_name	después de llamarla varias ||| source	count=1
function_name	devuelve el número ||| row count	count=1
function_name	ruido granular de ||| despeckleimage	count=1
function_name	establece el punto ||| callback set	count=1
function_name	establece la opción de ||| set include	count=1
function_name	el tamaño de un ||| cubrid lob2 size	count=1
function_name	obtiene si está disponible ||| gupnp root device get available	count=1
function_name	[function_name] original ||| [function_name]	count=3
arg_pair	actual en una búsqueda ||| string $msgid2 int $n	count=1
function_name	de ||| open memory image	count=2
function_name	por utf-8 a ||| utf8 decode	count=1
function	inicia [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	el uid dado ||| int $uid	count=1
function	[function_name_1] reconstruida ||| [function_name_1] channel distortions [arg_pair_2]	count=4
function_name	encuentre ||| set	count=1
namespace	[namespace] de ||| [namespace]	count=21
function_name	forma parecida ||| sybase	count=1
arg_pair	formato csv y ||| string $delimiter string $enclosure	count=1
arg_pair	entrenamiento ||| int $training_algorithm	count=1
function_name	la ||| using	count=1
arg_pair	x509cert ||| mixed $x509cert bool $shortnames	count=1
return	espacios en blanco ||| string	count=1
function_name	información sobre la ||| curl getinfo	count=1
function_name	false si es uno ||| mcrypt module is	count=1
arg_pair	color para un color ||| resource $image int $red	count=2
namespace	un nuevo filteriterator que ||| filteriterator	count=1
return	client almacenará en búfer ||| bool	count=1
function_name	descripción de la ||| cairo pattern create rgba	count=1
arg_pair	del indentificador ||| resource $result_id	count=1
function_name	lee los ||| mailparse uudecode	count=1
function_name	función geoip_country_code_by_name() devolverá ||| country code by name	count=1
function_name	iterator ||| iterator	count=1
function_name	de la línea de ||| start line	count=1
function_name	secuencia de ||| filename	count=1
arg_pair	address al socket descrito ||| resource $socket string $address	count=1
namespace	persistente a una ||| function	count=1
arg_pair	datos de un ||| resource $statement	count=1
arg_pair	y ||| string $outfilename	count=1
arg_pair	relation al dado ||| resource $relation string $name	count=1
function_name	usa para convertir un ||| convert to	count=1
function_name	en negro ||| imagecreatetruecolor	count=1
function_name	devuelve un recurso de ||| get resource	count=1
arg_pair	msglist al buzón especificado ||| string $msglist	count=1
function	[function_name_1] de entrenamiento ||| [function_name_1] [arg_pair_2]	count=3
function	la última [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	intermediarios de direcciones servicios ||| zmqsocket $frontend	count=1
arg_pair	archivo dest ||| string $dest int $context	count=1
function_name	que determina lo ||| fann get	count=1
function_name	añade una lista ||| add	count=1
function_name	encuentra ||| ps open	count=1
function_name	ascii véase rfc2047 ||| header	count=1
function_name	el algoritmo ||| training algorithm	count=1
function_name	número de columna actual ||| get current column number	count=1
function_name	el color [function_name_2] ||| [function_name_2] [function_name_1]	count=12
arg_pair	de un ancho especificado ||| float $width	count=1
function_name	establece el [function_name_2] ||| [function_name_1] sarprop step [function_name_2]	count=4
function_name	servicio extendido ||| es	count=1
function_name	recupera información sobre ||| get status	count=1
namespace	tailable ||| mongocursor	count=1
function_name	entidades no analizadas para ||| set unparsed entity	count=1
function_name	la extensión phar ||| phar	count=1
arg_pair	en haystack ||| bool $before_needle	count=1
function_name	[function_name_1] verificación de ||| [function_name_1] [function_name_2]	count=1
function_name	crea un ||| ifx create	count=1
arg_pair	ordena un array ||| array $array int $sort_flags	count=3
namespace	cierra el ||| sqlite3result	count=1
function_name	invertido ||| reverse	count=1
function_name	[function_name] de ||| to [function_name]	count=1
arg_pair	de array1 ||| array $array2	count=2
function_name	base de datos ||| dbase	count=1
function_name	el copyright ||| copyright	count=1
arg_pair	es casi idéntico al ||| mixed $subject	count=1
function_name	generador ||| set highlight fragmenter	count=1
function_name	argumento es true ||| set	count=1
function_name	imagen de similitud ||| sub image	count=1
function_name	devuelve un mensaje ||| strerror	count=1
function_name	mensaje para el ||| imap msgno	count=1
function_name	obtiene si ||| gupnp root device get	count=1
function_name	la descripción de ||| cairo surface get font	count=1
function_name	de color especificado ||| get color	count=1
function_name	sistema de coordenadas ||| pdf rotate	count=1
namespace	como por ||| function	count=1
function_name	un documento html desde ||| html	count=1
function_name	ambos ||| kernel	count=1
function_name	rra por descripción de ||| archive	count=1
function_name	código de ||| errcode	count=1
arg_pair	carácter unicode por ||| string $charactername int $namechoice	count=1
arg_pair	de envío ||| resource $connection_id	count=1
function_name	los datos del ||| mailparse	count=1
function_name	de el fichero omitiendo ||| path	count=1
arg_pair	un lote de operaciones ||| mongocollection $collection array $write_options	count=3
function_name	salida como echo ||| sandbox output	count=1
function_name	[function_name_1] inicial ||| [function_name_1] [function_name_2]	count=4
arg_pair	comporta ||| resource $p	count=1
function_name	cambiará el nombre de ||| rrename	count=1
function_name	para almacenar información personalizada ||| set	count=1
arg_pair	resultado especificado para ||| resource $result	count=1
arg_pair	entre old_file y new_file ||| string $new_file	count=1
arg_pair	una base ||| resource $pxdoc	count=1
namespace	esquema ||| sdo_das_xml	count=1
namespace	el ||| tidynode	count=1
function_name	semáforo de ||| sem	count=1
arg_pair	de salto ||| bool $cut	count=1
function_name	campos de una ||| fetch field	count=1
function_name	la lista de parámetros ||| ps open	count=1
function_name	sobre el último ||| last	count=1
namespace	valida [namespace] ||| [namespace]	count=3
arg_pair	donde las propiedades correspondientes ||| int $row	count=1
function_name	después de ||| source	count=1
namespace	se rellena con el ||| function	count=1
namespace	nobre del ||| throwable	count=1
function_name	por el usuario para ||| create function	count=1
arg_pair	una ||| string $character_set	count=1
function_name	petición http ||| nsapi	count=1
return	lectura en la instancia ||| bool	count=1
return	en la zona ||| bool	count=1
function_name	devuelve el tipo de ||| db2 field type	count=1
arg_pair	[arg_pair] con las ||| [arg_pair]	count=2
function_name	un número es primo ||| gmp prob prime	count=1
arg_pair	string para un ||| resource $connection string $data	count=1
return	(1 de enero de ||| int	count=1
function_name	bytes o false si ||| mcrypt module is	count=1
function_name	especial indicando error ||| set	count=1
function_name	mensajes según ||| imap sort	count=1
function_name	obtiene el actual ||| get	count=1
namespace	mediante el uso ||| function	count=1
namespace	un hash y ||| quickhashstringinthash	count=1
namespace	idéntica a fgets() ||| function	count=1
arg_pair	estilo de ||| int $type	count=1
arg_pair	proceso para el intérprete ||| resource $parser	count=1
function_name	[function_name_1] de oracle ||| [function_name_2] field type [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] green [function_name_2]	count=2
function_name	comportamiento de autocommit ||| db2 autocommit	count=1
arg_pair	una matriz ||| resource $p float $a	count=1
namespace	en la que las ||| solrquery	count=1
function_name	guardará los pares de ||| repl	count=1
namespace	conjunto en ||| quickhashintset	count=1
function_name	[function_name_1] multibyte de ||| [function_name_2] [function_name_1]	count=6
function_name	para que ambos puedan ||| add kernel	count=1
function_name	o ||| function	count=1
function_name	devuelve ||| enchant broker get	count=1
function_name	actualiza el ||| update	count=2
function_name	establece el ||| fann set	count=13
function_name	de la línea ||| line width	count=1
function_name	en lugar de ||| using	count=1
return	las ||| zmqsocket	count=1
function_name	estancamiento de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	característica ||| mongocursor	count=1
arg_pair	offset ||| int $offset	count=5
namespace	entero que describe ||| ev	count=1
function_name	tailable que son similares ||| tailable	count=1
arg_pair	el fichero de ||| int $flags	count=1
namespace	última llamada a ||| function	count=2
namespace	y escribe ||| splfileobject	count=1
function_name	descripción de ||| cairo pattern get color stop rgba	count=1
function_name	función acepta uno dos ||| number format	count=1
function_name	facet.limit ||| facet limit	count=2
arg_pair	base de eventos ||| resource $event_base	count=1
return	única ||| void	count=1
function_name	cambio del valor ||| get	count=1
function_name	versión de ||| money format	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $filtername [arg_pair_1]	count=10
namespace	código que ||| function	count=1
arg_pair	empleada durante un ||| resource $ann int $error_function	count=1
function_name	objeto ||| active object	count=1
return	reanuda [return] ||| [return]	count=1
function_name	devuelve el estado ||| introspection get state variable	count=1
function_name	frecuencia en ||| set mlt min doc	count=1
function_name	al nombre ||| code by name	count=1
function_name	la función geoip_domain_by_name() ||| domain by	count=1
function_name	fila [function_name_2] ||| function array [function_name_2] [function_name_1]	count=1
function_name	quoted printable creado ||| quoted printable	count=1
function_name	de configuración [function_name_2] ||| [function_name_2] load [function_name_1]	count=3
function_name	plano ||| ncurses color set	count=2
function_name	en la que ||| mlt min doc frequency	count=1
function_name	conocida ||| is known	count=1
function_name	establecer ||| set	count=3
function_name	más de una instrucción ||| next result	count=1
function_name	desecha todos los colores ||| unique image colors	count=1
function_name	de configuración ||| cfg var	count=1
arg_pair	excepto que fgetss() ||| int $length	count=1
function_name	activa la paginación ldap ||| ldap	count=1
function_name	función ||| odbc data source	count=2
namespace	la ruta actual del ||| harupage	count=1
function_name	archivos ||| dbplus	count=1
namespace	un mensaje especificado que ||| function	count=1
arg_pair	servicios ||| zmqsocket $backend	count=1
arg_pair	una función de ||| string $column_key int $flags	count=1
arg_pair	devuelve un ||| resource $result	count=1
function_name	afectadas ||| stmt affected	count=1
function_name	final de ||| append data	count=2
function_name	recupera el nombre ||| name	count=1
arg_pair	un iterator ||| iterator $iterator	count=1
function_name	un ||| array by name	count=1
function_name	reinicializa a sus ||| reset	count=1
function_name	infinito positivo o ||| infinite	count=1
arg_pair	repos_url ||| string $repos_url	count=1
namespace	describe el ||| ev	count=1
function_name	las consultas ||| queries	count=1
function_name	libera ||| ldap free	count=1
function_name	zend ||| zend	count=1
function_name	el argumento ||| set using	count=1
function_name	el comentario de una ||| comment index	count=1
function_name	crea un vector de ||| mcrypt create	count=1
function_name	para ||| set sslchecks	count=2
function_name	la función geoip_country_code_by_name() ||| country code	count=1
namespace	arbitrarios a ||| gearmanclient	count=1
return	inactividad de entrada/salida en ||| int	count=1
function_name	sybase ||| sybase data	count=1
arg_pair	invoca un ||| resource $id	count=1
function_name	tantos documentos como este ||| min doc frequency	count=1
arg_pair	cc y bcc ||| string $bcc	count=1
function_name	las palabras que no ||| set mlt min doc	count=1
function_name	la descripción de la ||| image surface	count=1
function_name	el tamaño de un ||| lob2 size	count=1
function	array [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	paradox ||| px	count=1
function_name	añade ficheros ||| add	count=1
return	esta función [return] las clases ||| [return]	count=1
namespace	las palabras ||| solrquery	count=1
function_name	una excepción de tipo ||| set	count=1
arg_pair	por msglist al buzón ||| resource $imap_stream string $msglist	count=1
arg_pair	targetpath [arg_pair] ||| [arg_pair]	count=1
function_name	strcmp() ||| strcoll	count=1
function_name	bytes [function_name_2] ||| bool [function_name_1] parse [function_name_2]	count=1
return	[return] descripción textual ||| [return]	count=1
function_name	importa las [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	el uri base ||| base uri	count=2
arg_pair	convierte un ||| int $split_length	count=1
return	contenido de un ||| string	count=1
function_name	xml que ya ha ||| add	count=1
function_name	la lista de ||| data source	count=1
namespace	cadena ||| function	count=2
function_name	compilación del complemento de ||| mysqlnd qc get available	count=1
arg_pair	de callback ||| mixed $data	count=4
namespace	un documento basado ||| domdocument	count=1
function_name	de filas [function_name_2] ||| [function_name_2] [function_name_1]	count=42
function_name	peticiones http ||| request	count=1
namespace	servidores ||| gearmanclient	count=1
function_name	[function_name_1] pendientes de ||| [function_name_2] [function_name_1]	count=1
return	el número de secuencia ||| int	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] md [function_name_2]	count=5
arg_pair	esta función [arg_pair] ||| [arg_pair]	count=2
function_name	descripción de la función ||| cairo ps level to	count=1
arg_pair	de páginas ||| string $prefix	count=1
function_name	verticalmente ||| imagestringup	count=1
arg_pair	servicio proxy de ||| string $action	count=1
arg_pair	una o más bases ||| string $databases	count=1
function_name	tamaño ||| get size	count=1
function_name	devuelve el coseno del ||| cos	count=1
arg_pair	o más imágenes ||| imagick $image	count=1
return	que ||| int	count=2
namespace	la ||| sdo_das_xml	count=1
function_name	método añade ||| add	count=4
function_name	[function_name] una ||| svn [function_name]	count=1
function_name	sea truncado a exactamente ||| ftruncate	count=1
function_name	serán ignoradas ||| mlt min doc frequency	count=1
function_name	las flags de comportamiento ||| flags	count=1
function_name	configuración ||| tidy config count	count=1
function_name	la extensión de ||| get extension	count=1
namespace	perfiles ||| gmagickdraw	count=1
arg_pair	datos almacenados en ||| bool $summaryonly	count=1
function_name	de trabajo [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	el ancho ||| float $width	count=1
arg_pair	termina ||| resource $fam resource $fam_monitor	count=1
function_name	en el servidor apache ||| apache get	count=1
arg_pair	efecto de botón ||| int $width	count=1
return	de forma parecida ||| resource	count=1
function_name	una curva ||| curve to	count=1
function_name	más reciente de ||| last	count=1
arg_pair	un umbral ||| int $channel	count=1
arg_pair	en un ||| resource $grp	count=1
function_name	de sisitema ||| wrapper register	count=1
arg_pair	pajar incluyendo la ||| string $haystack string $needle	count=1
arg_pair	para el dominio ||| string $domain string $directory	count=1
arg_pair	el carácter c verticalmente ||| string $c	count=1
arg_pair	enviar emails con ||| string $message	count=1
return	un string que ||| string	count=2
namespace	socket ||| zmqsocket	count=3
function_name	la acción con ||| action	count=1
function_name	esta función ||| number format	count=1
function_name	una ||| ps setdash	count=1
function_name	servicios colas o ||| construct	count=1
function_name	frecuencia en ||| mlt	count=1
function_name	mínimo ||| min error	count=1
arg_pair	para ejecutar una ||| resource $connection	count=1
namespace	relleno usado cuando se ||| gmagickdraw	count=1
function_name	obtiene blob/clob ||| lob get	count=1
function_name	tie breaker parameter ||| set tie breaker	count=1
function_name	la csr ||| csr sign	count=1
arg_pair	con un nuevo ||| mixed $value	count=1
arg_pair	se especifica ninguna ||| string $collection	count=1
arg_pair	ser enviada junto con ||| bool $secure bool $httponly	count=1
namespace	abierto ||| function	count=1
function_name	sintaxis lint pelusa ||| lint file	count=1
function_name	disposición de una imagen ||| image dispose	count=1
namespace	objeto imagick y ||| imagick	count=1
function_name	del servicio fam ||| fam	count=1
function_name	lista de dsn disponibles ||| odbc data source	count=1
function_name	la cookie ||| cookie	count=1
function_name	advertencia esta ||| open	count=1
function_name	parámetro ||| get parameter	count=1
function_name	el iterator [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	lista ||| resource $connection_id	count=1
function_name	el tipo de columna ||| type	count=1
function_name	si un [function_name] o ||| [function_name] is	count=1
function_name	[function_name_1] user ||| [function_name_2] [function_name_1]	count=1
arg_pair	tridimensional simulado aclarando y ||| int $x int $y	count=1
arg_pair	o más bases ||| resource $id string $databases	count=1
function_name	error cuando ||| set using exceptions	count=1
function_name	devuelve información sobre ||| info	count=1
return	retorno [return] ||| [return]	count=3
function_name	phar ||| phar	count=2
function_name	por el usuario ||| create function	count=1
namespace	internet que corresponde a ||| function	count=1
arg_pair	permite enviar emails ||| string $message	count=1
arg_pair	forma parecida a sybase_connect() ||| string $username	count=1
return	lo escribe en ||| bool	count=1
function_name	función restaura la configuración ||| reset config	count=1
namespace	nombre especificado por ||| function	count=1
function_name	el nivel mínimo de ||| min message	count=1
namespace	los archivos ||| function	count=1
function_name	en ||| set mlt min	count=2
function_name	las facetas [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	indicando error cuando ||| exceptions	count=1
function_name	del manejador de instrucciones ||| processing instruction handler	count=1
function_name	función definida por ||| uksort	count=1
arg_pair	de unix o ||| string $str	count=1
function_name	la acción con ||| service proxy action	count=1
arg_pair	secuencia de ||| resource $imap_stream	count=1
namespace	object apciterator ||| apciterator	count=1
function_name	internas con libeio ||| eio get event	count=1
function_name	en particular ||| filename	count=1
function_name	caché [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	recurso de curl ||| curl	count=1
function_name	una sentencia sql ||| escape	count=1
namespace	cadena de un ||| function	count=1
return	núcleo («kernel») a este ||| void	count=1
arg_pair	la codificación de caracteres ||| resource $fdf_document string $encoding	count=1
function_name	extensión de socket ||| socket	count=1
function_name	la frecuencia en la ||| mlt	count=1
arg_pair	función permite enviar ||| string $message	count=1
return	en la solicitud actual ||| array	count=1
function_name	el número de campos ||| count	count=1
namespace	de la cromaticidad como ||| gmagick	count=1
function_name	la siguiente petición xpath ||| xpath	count=1
arg_pair	una función ||| string $filename	count=1
namespace	de [namespace] ||| [namespace]	count=51
function_name	del id de mongo ||| get	count=1
function_name	el objeto ||| construct	count=1
arg_pair	aparecen en el ||| string $str	count=1
function_name	de la fila recuperada ||| fetch object	count=1
return	ssl para las solicitudes ||| bool	count=1
arg_pair	une tres archivos ||| string $old_file string $new_file1	count=1
function_name	la página ||| set	count=2
function_name	en cualquier consulta ||| query	count=1
function_name	en por ||| mlt min	count=1
arg_pair	un ||| resource $id	count=1
namespace	trabajo datos que ||| gearmanjob	count=1
arg_pair	oldname a newname ||| string $newname	count=1
function_name	las capas de ||| construct	count=1
function_name	descripción de la ||| cairo surface get font	count=1
arg_pair	estructura ||| int $num_data	count=1
return	con ||| array	count=3
return	este color ||| int	count=1
arg_pair	realiza una consulta ||| string $query	count=1
function_name	de apache ||| apache note	count=1
function_name	la línea ||| line width	count=1
return	devolverá el hash de ||| string	count=1
return	devuelve los índice del ||| int	count=1
function_name	establece una ||| callback set	count=1
function_name	este método ||| await	count=1
function_name	por defecto de entidades ||| set external entity loader	count=1
function_name	minúsculas ||| strtolower	count=1
function_name	los ||| remove all	count=1
function_name	error ||| using	count=2
arg_pair	certificado x509cert proporcionado incluyendo ||| bool $shortnames	count=1
arg_pair	una fuente ||| string $encoding bool $embed	count=1
function	información acerca [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	esta es una manera ||| mixed $value	count=1
function_name	y extrae ||| uudecode all	count=1
arg_pair	especificado en ||| resource $result int $field_offset	count=1
function_name	carga ||| com load	count=1
function_name	establece ||| set cascade min	count=1
arg_pair	en haystack ||| bool $part	count=2
function_name	una declaración de namespace ||| set end namespace decl	count=1
namespace	regla ||| harupage	count=1
arg_pair	de ||| int $width	count=2
namespace	ruta actual usando ||| harupage	count=1
function_name	para ||| set event	count=1
namespace	a la ventana ||| harudestination	count=1
function	[function_name_1] database ||| [arg_pair_2] [function_name_1]	count=2
function_name	usada ||| host information	count=1
function_name	callback definidos ||| gupnp control point browse	count=2
function_name	los ||| mailparse uudecode	count=1
function_name	rojo de la ||| image red	count=1
function_name	recurso de conexión en ||| yaz connect	count=1
function_name	establece las flags ||| set flags	count=2
function_name	variables [function_name] actualmente registradas ||| [function_name]	count=1
function_name	conjunto [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	lo escribe al gestor ||| write	count=2
return	en la tabla ||| bool	count=2
function_name	que las ||| mlt min doc frequency	count=1
function_name	registro ||| delete record	count=1
arg_pair	números de versiones estandarizados ||| string $version1 string $version2	count=1
arg_pair	estar disponibles en ||| string $str	count=1
function_name	de esquema en ||| types	count=1
function	antepone el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	de fragmento ideal ||| regex slop	count=1
arg_pair	bloque de texto ||| string $text	count=1
function_name	en por ||| set mlt min doc frequency	count=1
function_name	desde una función ||| from callback	count=1
function_name	país y de región ||| and region	count=1
namespace	lista de parámetros ||| function	count=1
return	la línea de base ||| int	count=1
return	número es ||| int	count=1
function_name	atributo ||| move to attribute	count=1
return	y php del texto ||| string	count=1
function_name	más imágenes ||| images	count=1
function_name	lista de los ||| list dicts	count=1
return	elemento solicitado en un ||| bool	count=1
function_name	[function_name_1] factor de ||| [function_name_1] rprop increase [function_name_2]	count=1
function_name	determina lo grande que ||| fann	count=1
function_name	mínimo y máximo) ||| extrema	count=2
namespace	el fichero o directorio ||| function	count=1
arg_pair	[arg_pair_1] y ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	establece la calidad ||| mysqlnd ms set	count=1
arg_pair	una combinación de códigos ||| string $region_code	count=1
arg_pair	cualquier ||| zmqsocket $frontend	count=1
function_name	de monitorizar un ||| monitor	count=1
return	el array de resultados ||| array	count=1
arg_pair	acceso recursivamente path1 ||| string $path1	count=1
function_name	se encuentra ||| ps open memory	count=1
arg_pair	esta es una manera ||| string $name mixed $value	count=1
function_name	efecto ||| raiseimage	count=1
arg_pair	identificaron ||| string $client_identifier	count=1
function_name	secuencia de ||| imap msgno	count=1
function_name	el índice del campo ||| field	count=1
function_name	un socket ||| stream socket accept	count=1
function_name	guid binario ||| guid string	count=1
function	miniatura embebida [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	parecida a sybase_connect() con ||| sybase pconnect	count=1
function_name	género correspondiente ||| id3 get genre	count=1
function_name	o textura ||| polygon	count=1
arg_pair	manejador de fuentes font ||| resource $pdfdoc int $font	count=1
return	los parámetros de ||| array	count=1
arg_pair	del texto que ||| int $length	count=1
function_name	curl [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	las palabras ||| doc frequency	count=1
function_name	el dueño de ||| owner	count=1
function_name	devuelve el estado de ||| introspection get state variable	count=1
arg_pair	uno dos ||| float $number	count=1
function_name	cada byte-value 0..255 en ||| chars	count=1
arg_pair	que hace referencia oid ||| string $mode	count=1
arg_pair	un ||| resource $stmt	count=2
return	resultado a el búfer ||| int	count=1
arg_pair	es tan compatible como ||| cairosurface $other	count=1
function_name	una excepción ||| set exception	count=1
return	y la ruta ||| array	count=1
arg_pair	fd ||| mixed $fd int $pri	count=1
function_name	color especificado ||| get color value	count=1
function_name	el [function_name] del ||| get [function_name]	count=1
function_name	oracle [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function	notifica a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	en lzf ||| lzf	count=1
arg_pair	relation ||| string $name	count=1
function_name	la descripción ||| cairo matrix multiply	count=1
function_name	sobre la utilización ||| win32 ps stat mem	count=1
function_name	devuelve una matriz que ||| get field names	count=1
function_name	el tipo ||| get type	count=2
function_name	obtiene el [function_name_2] ||| [function_name_1] stroking [function_name_2]	count=1
function_name	[function_name] actual ||| [function_name] horizontal	count=1
arg_pair	resultado en un archivo ||| string $new_file2	count=1
function_name	el servidor apache ||| apache get	count=1
return	[return] último ||| [return]	count=3
arg_pair	para el uid dado ||| resource $imap_stream int $uid	count=1
return	idéntica ||| string	count=1
function_name	de byte en el ||| get byte	count=1
function_name	de clase iterador ||| iterator class	count=3
arg_pair	a ereg_replace() excepto que ||| string $replacement	count=1
function_name	añade la ||| add record	count=1
arg_pair	con la clave cada ||| resource $shm_identifier	count=1
function_name	un recurso socket ||| socket	count=1
arg_pair	una ||| int $depth	count=1
function_name	calcula el coseno ||| cos	count=1
function_name	implementa directo a ||| blob	count=1
function_name	procesa el html contenido ||| html	count=1
function_name	al nombre de ||| code by name	count=1
function_name	tantos documentos ||| set	count=1
arg_pair	correspondientes a ||| int $row	count=1
arg_pair	operación por lotes ||| array $batch	count=1
namespace	el ||| memcached	count=1
function	cambiará [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	memoria compartida ||| shmop	count=4
namespace	ya ha ||| sdo_das_xml	count=1
namespace	aplicarse a ||| imagickkernel	count=1
return	de gettext() ||| string	count=1
function_name	el ||| get status	count=2
arg_pair	flag a ||| int $options	count=1
function_name	un id ||| id	count=1
arg_pair	crea un efecto ||| int $x int $y	count=1
return	array con toda la ||| array	count=1
arg_pair	un humano lo haría ||| string $str1 string $str2	count=1
function_name	estructura de un ||| imap fetchstructure	count=1
function_name	parameter ||| query	count=1
arg_pair	de una respuesta ||| string $content string $key	count=1
function_name	guid binario de ||| guid	count=1
function_name	pausado ||| continue	count=1
return	cromaticidad como un array ||| array	count=1
function_name	devuelve el uid del ||| imap uid	count=1
namespace	fichero de ||| sdo_das_xml	count=1
function_name	abierto mediante el uso ||| status	count=1
namespace	un das ||| sdo_das_xml	count=1
function_name	reescritura establecidas ||| reset rewrite vars	count=1
function	el ancho [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	define el de estilo ||| set	count=1
arg_pair	barras invertidas antes de ||| string $str	count=1
return	devuelve un string serializado ||| string	count=1
function	[function_name_1] bv_name ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	base de eventos especificada ||| int $flags	count=1
function	borra un [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=1
function_name	el codificador utilizado actualmente ||| set current encoder	count=1
arg_pair	comporta de forma parecida ||| string $password string $charset	count=1
namespace	como se ||| function	count=1
function_name	aguja en el ||| strripos	count=1
arg_pair	las restricciones de campos ||| string $field_override	count=1
function_name	[function_name_1] una versión ||| [function_name_2] [function_name_1]	count=6
namespace	por ejemplo su ||| function	count=1
function_name	de recodificación ||| recode string	count=1
arg_pair	para su uso posterior ||| string $fontname	count=1
function_name	como este serán ||| set mlt min doc	count=1
function_name	la zona horaria ||| geoip time zone by country	count=1
arg_pair	de éxito cero ||| mixed $options	count=1
function_name	descripción ||| cairo ps surface	count=3
return	en un objeto ||| bool	count=1
namespace	avanza ||| iterator	count=1
function_name	[function_name_1] prefijo de ||| [function_name_1] facet [function_name_2]	count=1
arg_pair	conexión ||| bool $value	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $progid [arg_pair_2]	count=16
function_name	disponibles ||| data source	count=2
return	función de ||| void	count=1
function_name	devuelve un ||| curl strerror	count=1
function_name	de una entrada ||| entry filesize	count=1
function_name	[function_name_1] candidatas antes ||| [function_name_1] [function_name_2]	count=8
return	canales de un ||| int	count=1
function_name	establecer ||| cubrid set	count=1
function	[function_name_1] texto ||| [arg_pair_2] [function_name_1]	count=9
arg_pair	estilo ||| int $first_page int $style	count=1
function_name	establece la función ||| set callback	count=1
function_name	añade la ||| dbase add record	count=1
arg_pair	para usar los efectos ||| resource $image int $effect	count=1
function_name	el generador ||| fragmenter	count=1
function_name	a la representación ||| to	count=1
function_name	de ømq pueden ||| construct	count=1
return	función [return] las ||| [return]	count=1
function_name	acl para un ||| imap getacl	count=1
function_name	bind_textdomain_codeset() se ||| bind textdomain codeset	count=1
function_name	los cálculos de ||| compat	count=1
function_name	lo menos tantos ||| min doc frequency	count=1
arg_pair	result ||| int $index	count=1
function_name	generador de trozos de ||| fragmenter	count=2
function_name	usado para guardar la ||| save path	count=1
function_name	menos tantos ||| mlt min	count=1
namespace	dos líneas se ||| function	count=1
function_name	debug output si ||| memcache debug	count=1
return	de ||| solrquery	count=1
arg_pair	un algoritmo ||| float $beta	count=1
namespace	del documento cuando al ||| solrdocument	count=1
namespace	datos de mysqlnd especificada ||| mysqlnduhconnection	count=1
return	nombres ||| bool	count=1
arg_pair	un objeto samconnection conecta ||| string $protocol array $properties	count=1
function_name	[function_name_1] bloque del ||| [function_name_2] [function_name_1]	count=1
function_name	oracle ||| oci	count=9
arg_pair	un archivo ||| string $filename string $sections	count=1
return	error o ||| bool	count=1
function_name	devuelve el [function_name_2] ||| [function_name_2] [function_name_1]	count=111
namespace	llena ||| harupage	count=1
function_name	de filas afectadas ||| rows fetched	count=1
function_name	si no existen ||| ingres	count=1
function_name	exporta el contenido de ||| export	count=1
function_name	de entrada [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	una cadena de respuesta ||| response	count=1
return	el final ||| int	count=1
return	incluye los ca_path ||| array	count=1
function_name	como este serán ||| min doc frequency	count=1
arg_pair	método y una clave ||| string $method	count=1
function_name	segundo o ||| add types	count=1
arg_pair	del inicio de ||| string $str	count=1
function_name	jerarquía entera ||| checkout	count=1
arg_pair	la base de ||| string $database	count=1
function_name	de campos de los ||| fields	count=1
arg_pair	de pajar incluyendo ||| string $haystack string $needle	count=1
function_name	instrucción ||| next	count=1
function_name	que ||| add	count=2
function_name	xml a ||| xml	count=1
function	xml [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	pspell_save_wordlist() guardará los pares ||| config save repl	count=1
return	un integer ||| int	count=1
function_name	la línea de inicio ||| start line	count=1
arg_pair	entrada un nuevo valor ||| int $value	count=1
arg_pair	para el dominio ||| string $directory	count=1
function_name	array multi-dimensional ||| all	count=1
function_name	actual del texto saliente ||| text rise	count=1
arg_pair	ancho especificado ||| string $text float $width	count=1
arg_pair	unicode para un punto ||| mixed $codepoint int $property	count=1
function_name	descripción de ||| surface restrict to level	count=1
function_name	descripción de ||| ps surface get	count=1
function_name	si una excepción no ||| exception handler	count=1
function_name	tangente para ||| tan	count=1
return	o subsiguiente fichero de ||| void	count=1
function_name	a la representación ||| to string	count=1
function_name	la fuente ||| get	count=2
function_name	palabras ||| mlt	count=1
return	un fichero al ||| bool	count=1
function_name	acción con ||| service proxy action	count=1
function_name	escape ||| escape	count=2
return	anota ||| string	count=1
function_name	predeterminado ||| close	count=1
function_name	a este para ||| kernel	count=1
function_name	[function_name_1] cliente usado ||| [function_name_2] [function_name_1]	count=1
function_name	devuelve la extensión ||| to extension	count=1
namespace	biblioteca ||| rarexception	count=1
return	en un archivo nombrado ||| bool	count=1
arg_pair	una función callback ||| mixed $callback	count=1
function_name	liberación de memoria ||| udm free agent	count=1
function_name	lanzamiento de excepciones ||| exception	count=1
return	en cada plataforma ||| bool	count=1
return	sólo si el ||| void	count=1
function_name	número de filas ||| fbsql num rows	count=1
namespace	de un objeto ||| serializable	count=1
return	a ||| solrquery	count=1
namespace	biblioteca unrar encuentre ||| rarexception	count=1
function_name	los dispositivos de ||| construct	count=1
arg_pair	aclarando y ||| int $x int $y	count=1
arg_pair	arrays al ||| array $array1	count=1
namespace	color de relleno usado ||| gmagickdraw	count=1
function_name	evento fam ||| fam next event	count=1
function_name	del ||| fann get	count=3
function_name	obtiene el string a ||| get	count=1
namespace	la [namespace] comenzó ||| [namespace]	count=1
function_name	un proceso ||| status	count=1
function	[function_name_1] dos números ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	coinciden con pattern según ||| string $pattern	count=1
arg_pair	el flujo imap ||| string $criteria	count=1
function	[function_name_1] y su ||| [function_name_1] [arg_pair_2]	count=3
function_name	un proceso abierto ||| get status	count=1
function_name	unrar encuentre un error ||| set using exceptions	count=1
function_name	la ||| curl getinfo	count=2
function_name	devuelve ||| entry	count=1
function_name	tendencias de cada ||| bias	count=1
namespace	stream fstream o ||| function	count=1
function_name	como este ||| min doc	count=1
arg_pair	se ||| zmqsocket $frontend	count=1
function_name	la e/s del ||| readahead	count=1
arg_pair	y de ||| string $setting	count=1
arg_pair	hasta maxlength ||| int $maxlength	count=1
function_name	devuelve un array [function_name_1] [function_name_2] y mueve el puntero ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] una conexión ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	de entradas y un ||| resource $ann array $input	count=1
function_name	[function_name_1] la temperatura ||| [function_name_1] sarprop [function_name_2]	count=2
function_name	mediante ||| mailparse	count=1
return	en todas las ||| bool	count=1
namespace	clase arrayobject ||| arrayobject	count=3
function_name	siguiente fila del ||| oci fetch	count=1
function_name	indicado mediante el ||| crack closedict	count=1
return	la biblioteca ||| void	count=1
function_name	[function_name] local ||| stream socket [function_name]	count=1
function_name	en la solicitud actual ||| request	count=1
function_name	/etc/services ||| getservbyport	count=1
function_name	caché de la ||| wincache	count=1
arg_pair	es decir el ||| int $face string $filename	count=1
namespace	representa el motivo por ||| function	count=2
function_name	se encuentra ||| open memory image	count=1
function_name	[function_name] de campos ||| [function_name]	count=1
function_name	para ver ||| ping	count=1
function_name	filas interno del resultado ||| seek	count=1
function_name	de ingres procedimiento ||| ingres	count=1
arg_pair	de datos emita uno ||| string $event_name2	count=1
function_name	nombre ||| db2 field name	count=1
function_name	supervisión del servicio ||| win32 start service ctrl dispatcher	count=1
function	notifica [arg_pair_2] ||| [function_name_1] resource $service [arg_pair_2]	count=2
function_name	línea actual ||| current line number	count=1
function_name	devuelve ||| file get	count=1
function_name	array ||| to array	count=1
arg_pair	de puerto nombre de ||| int $port	count=1
function_name	donde se buscarán los ||| chdir	count=1
arg_pair	dibuja ||| int $y	count=1
return	línea de ||| int	count=1
function_name	descriptor de fichero y ||| eio	count=1
namespace	la imagen ||| gmagick	count=14
function_name	el nombre largo ||| long name	count=1
namespace	un carácter base ||| intlchar	count=1
return	basado [return] varios mapas ||| [return]	count=1
namespace	un documento ||| domdocument	count=1
function_name	como strftime() excepto que ||| gmstrftime	count=1
function_name	«imagen reflejada» ||| char mirror	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image pixel [function_name_2]	count=2
function_name	advertencias y devolver un ||| exceptions	count=1
arg_pair	subject coincidencias [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	el array resultante ||| array	count=1
function_name	filas afectadas por ||| fbsql rows fetched	count=2
function_name	de intermediarios de direcciones ||| construct	count=1
function_name	en ||| min	count=2
arg_pair	renombra/mueve ||| string $newrdn	count=1
function_name	un valor especial ||| set	count=1
function_name	establece una ||| mysqlnd qc set	count=1
arg_pair	como timestamp y ||| int $format	count=2
function_name	mediante ||| uudecode	count=1
function_name	reduciendo [function_name] y ||| crop thumbnail [function_name]	count=1
arg_pair	estructuras de información ||| int $table	count=1
arg_pair	función callback para ||| mixed $callback	count=1
arg_pair	un ||| resource $id string $query	count=1
namespace	la ||| gearmanworker	count=1
function_name	envía la excepción indicada ||| send exception	count=1
function_name	la página ||| page	count=5
function_name	los parámetros ||| scaling params	count=2
arg_pair	la representación dom ||| domnode $node int $options	count=1
arg_pair	relation la hace la ||| resource $relation	count=3
function	[function_name_1] bv_name ||| [function_name_1] [arg_pair_2]	count=4
function_name	notifica a ||| notify	count=1
arg_pair	función callback por ||| mixed $callback mixed $arg	count=1
function_name	[function_name_1] el tipo ||| [function_name_1] socket [function_name_2]	count=1
arg_pair	mensaje y ||| zmqsocket $backend	count=1
function_name	traslada el origen del ||| pdf translate	count=1
function_name	encuentra disponible la ||| ps open memory	count=1
function_name	bit empleado durante un ||| bit fail	count=1
function_name	[function_name] píxel ||| get [function_name]	count=2
namespace	documento actual ||| domdocument	count=1
function_name	concatena ||| variant cat	count=2
function_name	las colecciones de la ||| collection info	count=1
return	usado en las ||| bool	count=1
function_name	una clase ||| class	count=1
function_name	la categoría de ||| flatness	count=1
arg_pair	método ||| string $method	count=2
arg_pair	de la función callback ||| int $pri callable $callback	count=1
function_name	obtiene el ||| get filename	count=1
function_name	dígito específico ||| for digit	count=1
return	del id de ||| int	count=1
return	de unix o ||| string	count=1
function_name	de solicitud site exec ||| exec	count=1
arg_pair	como una ||| string $name mixed $callback	count=1
return	blanco u ||| string	count=1
function_name	los ||| mailparse	count=1
return	tamaño actual de una ||| int	count=1
namespace	ssl para las solicitudes ||| oauth	count=1
function_name	cierra el diccionario indicado ||| crack	count=1
function_name	escribe al gestor ||| write function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image [function_name_2]	count=38
function_name	intermediarios ||| construct	count=1
namespace	salida que ||| function	count=1
arg_pair	[arg_pair_1] del archivo ||| function bool xattr set [arg_pair_2] [arg_pair_1]	count=4
function_name	previa ||| prev	count=1
namespace	que se le ||| function	count=1
namespace	a imap_alerts() ||| function	count=1
namespace	que no son ||| function	count=1
return	de ssl para ||| bool	count=1
return	del elemento solicitado en ||| bool	count=1
arg_pair	real0 y devuelve el ||| array $real0	count=1
function	elimina [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	por omisión del ||| reflectionparameter	count=1
function_name	descripción de la ||| cairo ps	count=1
arg_pair	es a**r)/gamma r * ||| float $r	count=1
arg_pair	texto ||| string $text	count=8
arg_pair	de archivo proporcionado ||| string $filename	count=1
function_name	de la ||| set interlace	count=1
function_name	[function_name] array ||| fann create [function_name]	count=2
function_name	inserta ||| insert	count=2
function_name	de monitorizar un recurso ||| fam cancel monitor	count=1
function_name	cursor: si ||| count	count=1
return	errno como un ||| string	count=1
function_name	de previas operaciones ||| ldap count entries	count=1
namespace	color ||| gmagickpixel	count=1
function_name	la lista de parámetros ||| open	count=1
return	en la plantilla ||| bool	count=1
namespace	el número de ||| sqlite3	count=1
namespace	cual se ||| function	count=2
function_name	atributos ||| attributes	count=2
function_name	crea ||| create entity	count=1
return	segundos desde la ||| int	count=1
function_name	advertencias y ||| using	count=1
arg_pair	nombre de una ||| resource $connection	count=1
function_name	ruta del directorio ||| set dict path	count=1
function_name	invertidas ||| addcslashes	count=1
function_name	el cursor asociado al ||| ingres result seek	count=1
namespace	retorna ||| gearmanclient	count=1
arg_pair	de ||| resource $p string $key	count=1
function_name	raíz cuadrada ||| gmp sqrtrem	count=1
function_name	esta función devolverá ||| data	count=1
function_name	disponible la lista ||| ps open memory image	count=1
arg_pair	la propiedad hwnd en ||| int $window_handle int $client_area	count=1
function_name	no ||| frequency	count=1
function_name	las colecciones de la ||| collection	count=1
function_name	de activación para ||| activation function	count=2
function_name	respectivamente ||| skew	count=1
arg_pair	dado en signed_text ||| string $signed_text	count=1
return	actual medido como el ||| int	count=1
function_name	[function_name_1] los comentarios ||| [function_name_2] [function_name_1]	count=2
function_name	subsiguiente fichero ||| types	count=1
arg_pair	juliana al calendario judío ||| int $juliandaycount	count=1
function	activación [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	frecuencia bajo la cual ||| frequency	count=1
return	pila de una ||| array	count=1
return	[return] todas las ||| [return]	count=1
arg_pair	esta función permite enviar ||| string $additional_headers	count=1
function_name	longitud [function_name] número ||| [function_name]	count=1
return	los colores de primer ||| int	count=1
function_name	obtiene el número de ||| get	count=5
function_name	[function_name] pasado mediante ||| [function_name]	count=3
function	[function_name_1] especificado ||| [arg_pair_2] [function_name_1]	count=20
function_name	que el último intento ||| db2 conn error	count=1
return	palabras que ||| solrquery	count=1
function_name	offset de campo ||| field	count=1
function_name	desviaciones [function_name] desde una ||| [function_name] gen	count=1
namespace	varias ||| function	count=1
arg_pair	el algoritmo especificado ||| string $lib_dir	count=1
function_name	la imagen ||| colorize image	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=4810
function_name	contiene las llaves foraneas ||| foreign keys	count=1
function_name	información sobre un ||| get	count=1
function_name	nombres especificado ||| is default namespace	count=1
function_name	información del ||| info	count=2
namespace	cursores de seguimiento tailable ||| mongocursor	count=1
arg_pair	obtener la cuota de ||| string $quota_root	count=1
namespace	se produjo un error ||| function	count=1
return	es primo ||| int	count=1
namespace	trabajador ||| gearmanworker	count=3
arg_pair	imágenes de ||| resource $image bool $blendmode	count=1
arg_pair	incrementa un valor ||| int $expiry	count=1
function_name	grafema de ||| grapheme stripos	count=1
function_name	hará una copia ||| copy	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] fit [function_name_2]	count=2
function_name	calcula la intersección ||| array uintersect assoc	count=1
arg_pair	una función ||| string $column_key	count=1
return	la base de datos ||| int	count=1
function_name	blob previamente ||| ibase blob	count=1
function_name	logaritmo natural para cada ||| trader ln	count=1
function_name	codificación de caracteres ||| mb detect encoding	count=1
function_name	a la potencia de ||| variant pow	count=1
namespace	mensaje ||| function	count=2
function_name	un objeto slob ||| slob	count=1
function_name	siguiente elemento está disponible ||| next element	count=1
function_name	corto para ||| frame short	count=1
arg_pair	req_handle por el valor ||| resource $req_identifier	count=1
namespace	de [namespace] de ||| [namespace]	count=2
arg_pair	[arg_pair] tabla ||| [arg_pair]	count=3
namespace	la posición actual a ||| harupage	count=1
function_name	especifica un socket ||| socket	count=1
function_name	una clave o/y una ||| find	count=1
namespace	sobre ||| zmqdevice	count=1
rest	y [function_2] ||| [function_2] [return_1]	count=1
function_name	flujo con ||| stream	count=2
function_name	diccionario indicado mediante el ||| closedict	count=1
function_name	el logaritmo natural para ||| trader ln	count=1
function_name	sólo ||| set	count=1
function_name	del xmlrpc base64 ||| xmlrpc	count=1
function_name	identificador ||| crack closedict	count=2
function_name	conexión de flujo o ||| stream socket	count=1
arg_pair	start hacia los ||| gmp $a int $start	count=2
function	[function_name_1] un ||| [function_name_1] value enum [arg_pair_2]	count=3
function_name	plano y ||| color set	count=1
function_name	información de los parámetros ||| get params	count=1
function_name	el nivel mínimo de ||| min	count=1
function_name	lo encripta ||| pkcs7 encrypt	count=1
function_name	o subsiguiente ||| add	count=1
function_name	de activación del ||| fann get cascade activation	count=2
function_name	de éxito [function_name] ||| [function_name] time of day	count=3
function_name	[function_name_1] algún parámetro ||| [function_name_1] [function_name_2]	count=1
function_name	tarea de alta prioridad ||| task high	count=2
function_name	de prioridad ||| event base priority init	count=1
function_name	de autocommit del ||| db2 autocommit	count=1
namespace	que ambos puedan aplicarse ||| imagickkernel	count=1
arg_pair	object splfileobject de el ||| bool $use_include_path	count=1
return	la ventana ||| bool	count=1
function_name	largo ||| get frame long	count=1
arg_pair	idéntica a mktime() excepto ||| int $hour int $minute	count=1
arg_pair	grado de control mucho ||| array $env array $other_options	count=1
function_name	llama a la ||| call	count=1
arg_pair	establece [arg_pair] atributo extendido ||| [arg_pair]	count=1
function	primer atributo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	la opción ||| sock opt	count=1
function_name	cierra ||| ps close	count=1
arg_pair	numérico o ambos ||| int $fetchtype	count=1
function_name	aborta inmediatamente ||| loopbreak	count=1
function_name	de entrenamiento vacía ||| train	count=1
function_name	como este serán ignoradas ||| set mlt	count=1
namespace	la posición especificada ||| harupage	count=1
function_name	las llaves foraneas ||| db2 foreign keys	count=1
namespace	dsn disponibles después ||| function	count=1
function_name	se ||| dbplus	count=1
function_name	tamaño actual ||| entry filesize	count=1
function_name	la última operación curl ||| curl errno	count=1
namespace	proveedor oauth ||| oauthprovider	count=1
arg_pair	el domain actual en ||| string $domain	count=1
return	en parámetros ||| bool	count=4
function_name	después de llamarla ||| source	count=1
return	de la base ||| int	count=1
return	máximo de inactividad ||| int	count=1
arg_pair	memcached::getmulti() con ||| string $cas_tokens int $flags	count=1
function_name	[function_name_1] porción de ||| [function_name_2] [function_name_1]	count=12
function_name	palabras que no ||| doc frequency	count=1
return	en el servidor que ||| bool	count=2
function_name	apuntador ||| all	count=1
function_name	un entrenamiento ||| fann	count=2
function_name	nueva conexión a ||| new connect	count=2
function_name	libera un descriptor ||| free	count=1
arg_pair	de un proxy y ||| resource $proxy string $action	count=1
arg_pair	una anotación ||| string $type	count=1
function_name	estilo ||| set slide	count=1
function_name	el término de ||| lower bound	count=1
namespace	extrae cada archivo ||| function	count=1
arg_pair	número de puerto ||| int $port	count=1
function_name	especificado por su nodename ||| get named	count=1
namespace	registra un objeto ||| hw_api	count=1
function_name	última ||| db2 last	count=1
arg_pair	un assoc_array en valores ||| array $assoc_array	count=1
function_name	fuente ||| get	count=2
function_name	[function_name_1] iterador a ||| [function_name_2] [function_name_1]	count=1
function_name	búsqueda exitosa ||| present	count=1
arg_pair	servicios colas o ||| zmqsocket $backend	count=1
return	de esquema en ||| void	count=1
function_name	región [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	memoria caché de la ||| wincache	count=1
function_name	que son ||| tailable	count=1
function_name	la codificación de ||| encoding	count=2
function_name	cierra ||| imap close	count=1
function_name	[function_name_1] buzón ||| [function_name_2] [function_name_1]	count=4
function_name	tangente hiperbólica ||| tanh	count=1
function_name	a lo largo ||| shearimage	count=1
arg_pair	para un color ||| resource $image int $red	count=2
function_name	un caracter que ||| chr	count=1
function_name	devuelve el estado ||| get	count=1
arg_pair	está documentada actualmente solamente ||| int $conf	count=2
function_name	string que describe ||| message	count=1
function_name	una nueva ||| new	count=1
function_name	una fila ||| ibase fetch object	count=2
function_name	la definición de color ||| color content	count=1
function_name	la descripción ||| cairo pattern create rgba	count=1
namespace	distancia de ||| harufont	count=1
return	indica si el nodo ||| bool	count=1
function_name	lee los ||| mailparse	count=1
namespace	la posición actual del ||| solrdocument	count=1
function_name	la página ||| show	count=1
function_name	obtiene ||| call get	count=1
function_name	conjunto de imágenes ||| images	count=2
function	corta una [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	ps_stringwidth() excepto [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	directorio ||| string $path	count=4
function_name	círculo con su punto ||| ps arc	count=1
function	[function_name_1] el algoritmo ||| [arg_pair_2] [function_name_1]	count=2
function_name	construye ||| construct	count=7
arg_pair	correspondientes a los ||| array $ctorparams	count=1
return	los ||| gmagick	count=1
function_name	información sobre un ||| proc get status	count=1
arg_pair	defina sobre ||| zmqsocket $frontend	count=1
namespace	que devuelven esas funciones ||| function	count=1
function_name	de fann_get_cascade_candidate_change_fraction() ||| cascade candidate	count=1
arg_pair	objeto the sdo_das_xml_document en ||| sdo_xmldocument $xdoc	count=1
namespace	el retraso de ||| gmagick	count=1
arg_pair	de start ||| gmp $a int $start	count=2
arg_pair	empleando un ||| float $connection_rate	count=1
function_name	sólo si el argumento ||| exceptions	count=1
arg_pair	directiva whence como ||| int $whence	count=1
arg_pair	offset con ||| int $offset	count=1
function_name	la fuente ||| query font	count=1
arg_pair	tridimensional simulado aclarando y ||| int $y	count=1
function_name	destruye un evento ||| event	count=1
function_name	identifican ||| odbc specialcolumns	count=2
arg_pair	coincida ||| mixed $fill float $fuzz	count=1
function_name	petición http de la ||| apache request	count=1
arg_pair	una fecha gmt ||| int $is_dst	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] copy [function_name_2]	count=9
function_name	la ||| min doc frequency	count=4
function_name	lee los datos del ||| all	count=1
function_name	matriz para añadir ||| offset set	count=1
arg_pair	sybase_connect() con ||| string $charset	count=1
function_name	en ||| addcslashes	count=1
arg_pair	la lista de ||| resource $psdoc	count=1
function	[function_name_1] desde el ||| [arg_pair_2] [function_name_1]	count=3
return	se buscarán los ||| string	count=1
arg_pair	especificada por sequence ||| string $sequence	count=1
function_name	versión ||| format	count=1
function_name	alta prioridad para ser ||| high	count=1
function_name	pdflib ||| pdf	count=1
arg_pair	criterio y la dirección ||| int $sortorderby int $sortdirection	count=2
function_name	lista de ||| odbc	count=1
function_name	la uri [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la acción ||| gupnp service action get	count=1
function_name	error callback ||| set error callback	count=2
arg_pair	redimensiona una imagen ||| int $new_width	count=1
function_name	plano y ||| ncurses color set	count=1
arg_pair	algoritmos alternativos que ||| string $salt	count=1
namespace	a través de ||| function	count=1
function_name	un segundo o ||| add	count=1
namespace	[namespace] string ||| [namespace]	count=3
function_name	de una entrada ||| zip	count=1
function_name	devuelve el comentario ||| get comment index	count=3
namespace	este método no afecta ||| mongocursor	count=1
function_name	columna actual ||| get current column number	count=1
arg_pair	secuencia de bytes str ||| string $charset	count=1
namespace	entrada dada por ||| function	count=1
arg_pair	que aparecen en ||| string $str	count=1
namespace	activa el ||| function	count=1
function_name	devuelve la porción de ||| strrchr	count=1
return	es parte ||| bool	count=1
function_name	utf-8 ||| imap utf8	count=2
function_name	para establecer la supervisión ||| ctrl dispatcher	count=1
arg_pair	el archivo de ||| string $filename	count=1
function_name	[function_name_1] código de ||| [function_name_2] [function_name_1]	count=1
function_name	añade ||| form add	count=2
function_name	dsn disponibles ||| odbc data source	count=1
return	al trazado ||| bool	count=1
function	control de [arg_pair_2] ||| [function_name_1] set [arg_pair_2]	count=1
function_name	porción de haystack la ||| strrchr	count=1
function_name	de fecha ||| date	count=1
function_name	si y sólo si ||| exceptions	count=1
function_name	manejador para ser llamado ||| handler	count=1
arg_pair	xsltprocessor ||| string $namespace	count=1
arg_pair	fichero fd ||| mixed $fd int $uid	count=1
arg_pair	óptimo de columnas ||| int $nullable	count=1
function_name	de recodificación ||| recode file	count=1
function_name	script ||| javascript	count=1
namespace	de intermediarios de direcciones ||| zmqdevice	count=1
function_name	de alguna forma ||| get modified	count=1
function_name	imagen ||| image interlace	count=1
namespace	de las ||| harufont	count=1
function_name	este método almacena ||| file	count=1
function_name	de imágenes ||| images	count=5
function	[function_name_1] ambos por ||| [function_name_1] resource $stmt [arg_pair_2]	count=1
function_name	similar a sybase_fetch_assoc() con ||| sybase	count=1
function_name	milisegundos ||| timeout	count=1
function_name	[function_name_1] lista de ||| [function_name_1] server [function_name_2]	count=1
function_name	crea una nueva ||| create processing instruction	count=1
rest	todas [function_2] ||| [return_1] get [function_2]	count=1
function_name	documento libxml ||| libxml	count=1
arg_pair	result ||| resource $result	count=1
arg_pair	entradas y un conjunto ||| resource $ann array $input	count=1
function_name	color ||| color content	count=2
function_name	las variables [function_name] actualmente registradas ||| [function_name]	count=1
arg_pair	un ||| int $size	count=1
function_name	importa un ||| import	count=1
function_name	[function_name_1] contenido ||| ziparchive string [function_name_1] [function_name_2] index int	count=1
namespace	anota texto ||| gmagickdraw	count=1
function_name	compartido ||| share	count=1
function_name	el usuario presiona ||| suspend callback	count=1
function_name	[function_name_1] las posiciones ||| [function_name_1] [function_name_2]	count=1
arg_pair	está documentada actualmente solamente ||| resource $agent string $str	count=1
return	excepto que fgetss() intenta ||| string	count=1
function_name	sólo si el ||| exceptions	count=1
function_name	tipos descritos en ||| types	count=1
function_name	la descripción de ||| cairo surface get	count=3
function_name	la metadata de los ||| metadata	count=1
function	una [arg_pair_2] ||| [function_name_1] resource $psdoc [arg_pair_2]	count=1
arg_pair	con ifx_do() ||| int $cursor_def mixed $blobidarray	count=1
function	de escala [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	i-nodo de el ||| inode	count=1
arg_pair	pretende usarse como ||| string $class_name string $file_extensions	count=1
function_name	para guardar ||| save path	count=1
return	los nombres ||| array	count=3
arg_pair	una expresión regular ||| string $pattern string $option	count=2
function_name	el coseno para ||| cos	count=1
function_name	cierra el diccionario ||| crack	count=1
namespace	la variable php ||| function	count=1
namespace	establecido por xsltprocessor::setparameter() ||| xsltprocessor	count=1
function_name	la variable env ||| env	count=1
arg_pair	pueden hacer de ||| zmqsocket $backend	count=1
function_name	o ||| add types	count=2
function_name	obtiene si [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	las tablas ||| tables	count=2
namespace	envía datos arbitrarios ||| gearmanclient	count=1
arg_pair	parada empleada durante el ||| resource $ann int $stop_function	count=1
function_name	descripción de la función ||| cairo ps level to string	count=1
function_name	ruta del directorio ||| dict path	count=1
return	un trabajo y ||| bool	count=1
return	recupera el objeto ||| yaf_response_abstract	count=1
arg_pair	se identificaron con el ||| resource $connection string $client_identifier	count=1
function_name	a fbsql_fetch_array() ||| fbsql fetch	count=1
function_name	obtiene una fila ||| fetch	count=1
function_name	la descripción de ||| cairo font options	count=6
function_name	del paquete de ||| package	count=1
arg_pair	alfa para ||| resource $image	count=1
function_name	cadena de respuesta xml ||| xml response	count=1
return	con el número ||| string	count=1
namespace	obtenido por ||| function	count=1
return	devuelve el tipo ||| string	count=1
function_name	cuenta todos los ||| count	count=1
function_name	especificado si devuelve ||| get supported	count=1
arg_pair	de una canal ||| int $channel	count=1
function_name	de archivo dado ||| mailparse uudecode	count=1
function_name	y devolver ||| exceptions	count=1
function_name	información sobre el ||| info	count=2
function	[function_name_1] result ||| [function_name_1] name [arg_pair_2]	count=1
function_name	el de estilo de ||| slide	count=1
arg_pair	reloj ||| float $beta	count=1
arg_pair	en repos_url de forma ||| string $repos_url	count=1
function_name	la etiqueta ||| tag	count=1
function_name	de la imagen ||| set image interlace	count=1
function_name	país correspondiente a ||| country	count=1
function_name	una versión serializada ||| string	count=2
function_name	la funcionalidad de color ||| color	count=1
function_name	curl [function_name_2] ||| [function_name_1] copy [function_name_2]	count=1
namespace	color que tiene ||| function	count=1
function_name	renombra ||| rename function	count=2
arg_pair	desde el archivo de ||| string $filename array $options	count=1
function_name	proxy para ||| set connection proxy	count=1
function_name	el carp::croak de perl ||| croak	count=1
function_name	[function_name] del ||| get [function_name]	count=5
return	de error ||| string	count=2
arg_pair	dest ||| string $dest	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] insert [function_name_1]	count=16
function_name	gravedad actual [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	la cuota de ||| resource $imap_stream string $quota_root	count=1
function_name	objeto documento ||| document	count=1
return	imagen mientras ||| gmagick	count=1
return	el formulario en donde ||| bool	count=1
function_name	transforma el nodo ||| transform	count=1
return	estado del cursor: si ||| int	count=1
function_name	cadena ||| load string	count=2
namespace	filas de resultados como ||| function	count=1
namespace	excepción lo que ||| exception	count=1
function_name	conexiones de atajo ||| shortcut array	count=1
function_name	filas en el conjunto ||| msql num rows	count=1
function_name	descripción de la ||| cairo pattern add color stop rgb	count=1
namespace	jpeg o tiff ||| function	count=1
function_name	[function_name_1] preparada ||| function bool [function_name_1] [function_name_2]	count=1
function_name	el objeto respuesta actual ||| response	count=1
function_name	define el ||| slide	count=1
function_name	las capas ||| construct	count=1
function_name	las palabras que ||| min doc frequency	count=1
function_name	de forma ||| sybase pconnect	count=1
function_name	elevar ||| bcpow	count=1
function_name	después de ser deserializado ||| wakeup	count=1
arg_pair	keys del servidor ||| int $time	count=1
namespace	opcional se puede ||| function	count=1
function_name	la posición ||| position	count=1
function_name	devuelve una matriz con ||| get field	count=1
arg_pair	dado en signed_text ||| resource $identifier string $signed_text	count=1
function_name	eventos de lectura y ||| event	count=1
function_name	sólo recorre el ciclo ||| nop	count=1
arg_pair	nombre ||| string $name	count=2
arg_pair	pueden hacer ||| zmqsocket $backend	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] rcrtlike [arg_pair_2]	count=25
return	final en el ||| int	count=1
function_name	aplicarse ||| add kernel	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] iv [function_name_2]	count=3
function_name	array numérico ||| array	count=1
function_name	de un repositorio indicado ||| svn cat	count=1
function_name	a ||| kernel	count=2
function_name	corto para ||| id3 get frame short	count=1
function_name	la representación ||| to	count=2
arg_pair	desde la ||| string $filename int $options	count=1
namespace	del texto que lee ||| function	count=1
function_name	el término ||| bound	count=2
function_name	ningún tipo de ||| filename	count=1
function_name	de archivo dado ||| uudecode	count=1
function_name	tipos descritos en el ||| types	count=1
function_name	ambos ||| add kernel	count=2
function_name	una excepción de ||| using	count=1
function_name	menos tantos documentos como ||| mlt min doc frequency	count=1
function_name	de archivo dado y ||| uudecode all	count=1
return	en formato ||| string	count=1
namespace	a minúsculas ||| function	count=1
function_name	imagen que ha sido ||| image	count=1
namespace	sobre los parámetros a ||| function	count=1
return	se anota texto ||| string	count=1
arg_pair	efectos de ||| int $effect	count=1
function_name	obtiene una [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	previas operaciones de ||| ldap count entries	count=1
arg_pair	que server_key ||| array $keys	count=1
function_name	fila ||| fetch object	count=2
namespace	a lectura ||| function	count=1
arg_pair	por relation bajo un ||| resource $relation	count=1
namespace	uno ||| function	count=1
return	modificar los límites ||| bool	count=1
arg_pair	suma left ||| mixed $left	count=1
namespace	lugar de ||| rarexception	count=1
namespace	clave o claves de ||| function	count=1
namespace	de unix ||| function	count=1
return	petición http en ||| array	count=1
function_name	información sobre ||| curl	count=1
function_name	la escala ||| field scale	count=1
return	el nombre del ||| string	count=1
function_name	esté ||| floodfill image	count=2
arg_pair	selecciona un documento pdf ||| resource $fdf_document	count=1
namespace	una ||| gmagickdraw	count=1
arg_pair	str en el ||| mixed $fd string $str	count=1
arg_pair	permite enviar emails con ||| string $additional_headers	count=1
function_name	lugar de emitir ||| exceptions	count=1
function_name	clock_gettime() si no hay ||| of day cached	count=1
function	de autocommit [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=1
arg_pair	el evento que se ||| resource $event mixed $fd	count=1
function_name	la fuente ||| font	count=1
arg_pair	puedan estar disponibles ||| string $str	count=1
function_name	la descripción ||| cairo surface create similar	count=1
function_name	abstracción ||| construct	count=1
function_name	en la que ||| min doc frequency	count=1
function_name	la cadena de instancia ||| load string	count=1
function_name	función usa la prueba ||| prime	count=1
function_name	establece un ||| set	count=1
return	plano y ||| int	count=1
arg_pair	un fichero ||| string $filename	count=6
function_name	error una excepción ||| set using exceptions	count=1
namespace	de host o ||| function	count=1
function_name	contra las ||| ukey	count=1
function_name	nueva csr ||| csr new	count=1
function_name	esta función devuelve ||| mcrypt enc get	count=1
function_name	depurado ||| apd set session	count=1
function_name	recupera información sobre ||| proc get	count=1
function_name	cuál cae pascua para ||| easter days	count=1
function_name	mayúsculas ||| mb strtoupper	count=2
arg_pair	es idéntica a ereg_replace() ||| string $pattern string $replacement	count=1
arg_pair	bloque de texto ||| string $blockname string $text	count=1
function_name	arreglo ||| db2 fetch array	count=1
namespace	cuando se enlaza ||| function	count=1
function_name	la de memcached::prepend() ||| prepend by	count=1
function_name	función ||| memory	count=1
function_name	la tangente ||| trader tan	count=1
function_name	la biblioteca imagemagick subyacente ||| limit	count=1
return	de ||| gmagick	count=3
arg_pair	evento que se ||| mixed $fd	count=1
function_name	[function_name] actual de ||| get line [function_name]	count=1
return	un array ||| mixed	count=1
function_name	reinicializa ||| reset	count=1
function_name	a [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	el ||| addcslashes	count=1
function_name	en ||| mlt min	count=2
arg_pair	que se defina ||| zmqsocket $backend	count=1
function_name	número ||| prime	count=1
function_name	devuelve el número de ||| udm get	count=1
arg_pair	archivo a un ||| resource $handle	count=1
return	el tipo de imagen ||| int	count=1
function_name	de único ||| hash	count=1
function	escapa [arg_pair_2] ||| [function_name_1] bytea [arg_pair_2]	count=1
function_name	filas ||| set	count=1
function_name	el estado http ||| http status	count=1
return	solicitud ||| array	count=1
function_name	tendencias ||| get bias array	count=1
namespace	eventbuffer ||| eventbuffer	count=2
arg_pair	espacio de nombres especificado ||| string $localname string $namespaceuri	count=1
function_name	publicación de un ||| ap	count=1
function_name	crea una nueva ||| create entity	count=1
function_name	que se [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_2] image [function_name_1]	count=6
function_name	devuelve el tipo ||| field type	count=1
arg_pair	archivo local en ||| string $local_file int $mode	count=1
namespace	una extensión reflexionada devolvíendola ||| reflectionextension	count=1
arg_pair	una variable ||| string $name mixed $value	count=1
arg_pair	address al ||| resource $socket string $address	count=1
return	devolverá el hash ||| string	count=1
return	ha sido empezada con ||| bool	count=1
function_name	número de entrenamiento de ||| fann get cascade	count=1
function_name	exe ||| bcompiler write exe	count=1
function_name	contenido del objeto char ||| char	count=1
function_name	función crea una ||| create entity reference	count=1
function_name	usa la prueba ||| gmp	count=1
return	domnodelist con ||| domnodelist	count=1
function_name	siguiente fila ||| oci fetch	count=2
arg_pair	la clave /status ||| resource $fdf_document string $status	count=1
function_name	cambiará el nombre ||| dbplus rrename	count=1
function_name	y devuelve el resto ||| get	count=1
function_name	advertencia ||| open memory	count=1
function_name	[function_name] del ||| [function_name]	count=1
return	api graphicsmagick como una ||| string	count=1
function_name	de ||| open	count=1
arg_pair	es una función de ||| string $column_key	count=1
function_name	serán ignoradas ||| set mlt min	count=1
function_name	dsn ||| odbc data source	count=2
function_name	una declaración de namespace ||| namespace decl	count=1
function_name	ruta del directorio ||| broker set dict path	count=1
function_name	define ||| slide	count=1
function_name	en blanco ||| ltrim	count=1
namespace	un objeto ||| serializable	count=1
return	establecida en el ||| bool	count=2
arg_pair	plural de ||| string $msgid2	count=1
function_name	que necesitan ser escapados ||| addslashes	count=1
function_name	prioridad de ||| event base priority init	count=1
function_name	obtiene el contenido ||| pdf get	count=2
arg_pair	[arg_pair] mapa de ||| [arg_pair]	count=3
arg_pair	el valor ||| mixed $bordercolor	count=2
arg_pair	enviar emails ||| string $message string $additional_headers	count=1
function_name	configura una opción ||| set option	count=1
arg_pair	cadena al archivo gz ||| string $string	count=1
function_name	sentencia preparada ||| execute	count=1
function_name	escribe ||| ifxus write	count=1
return	el espacio de ||| bool	count=1
function_name	[function_name_1] el punto ||| [function_name_1] white [function_name_2]	count=1
arg_pair	una canal de ||| int $channel	count=1
function_name	[function_name_1] sin tratar ||| [function_name_2] [function_name_1]	count=13
function_name	mensaje para el ||| imap	count=1
function	[function_name_1] los clientes ||| [function_name_1] resource $service [arg_pair_2]	count=1
arg_pair	una fuente para ||| string $encoding	count=1
function_name	la configuración ||| config	count=2
function_name	mínima [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	dado de ||| int	count=1
function_name	archivo codificado mediante uuencode ||| all	count=1
function_name	los archivos de ||| dbplus	count=1
arg_pair	resultados ||| resource $result	count=1
function_name	el nombre de la ||| db2 field name	count=1
function_name	establece el número de ||| set	count=5
function_name	podrían ser entrenadas las ||| fann get	count=1
arg_pair	bytes ||| resource $handle	count=1
function_name	añade [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	ascenso vertical de la ||| get ascent	count=1
function_name	de texto ||| curl strerror	count=1
function_name	consulta de la petición ||| get query	count=1
function_name	servidor ms sql ||| mssql	count=1
function_name	declaración de ||| decl	count=1
function_name	el mismo nodo ||| same node	count=1
function_name	geoip_country_code_by_name() devolverá la abreviación ||| country code by	count=1
function_name	de épocas que podrían ||| epochs	count=3
function_name	lee los datos del ||| uudecode	count=1
arg_pair	una ||| string $alias	count=1
function	[function_name_1] string dado ||| [function_name_1] [arg_pair_2]	count=1
return	filas ||| int	count=1
arg_pair	valor de ||| int $flags	count=1
function_name	id dado ||| element by id	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] upper [function_name_2]	count=1
function	rrd [arg_pair_2] ||| [function_name_1] restore [arg_pair_2]	count=1
arg_pair	prepara el evento ||| resource $event mixed $fd	count=1
function_name	depurado ||| apd set	count=1
namespace	memoria asociada a ||| function	count=1
arg_pair	operación por lotes ||| array $batch array $protocoloptions	count=1
namespace	mensaje ||| zmqdevice	count=1
return	proporcionada en la memoria ||| bool	count=1
arg_pair	de bytes str de ||| string $str	count=1
arg_pair	en signed_text ||| resource $identifier string $signed_text	count=1
function_name	de filas que hay ||| mssql num rows	count=1
arg_pair	especificado de páginas ||| int $first_num string $prefix	count=1
function_name	pincel para ||| imagesetbrush	count=1
function_name	del array actual ||| key	count=1
function_name	paginación ldap enviando ||| ldap	count=1
function_name	de consultas range/wildcard/fuzzy/prefix ||| multi term	count=1
function_name	mismo documento ||| locallink	count=1
function_name	clave dada ||| key	count=1
function_name	color especificado ||| get color	count=1
arg_pair	offset a ||| int $offset	count=1
arg_pair	cubrid_schema() se ||| resource $conn_identifier int $schema_type	count=1
return	la imagen ||| bool	count=1
arg_pair	carga una imagen ||| string $filename int $width	count=1
function_name	establecer el valor ||| newt checkbox set value	count=1
arg_pair	datos de cubrid cubrid ||| resource $conn_identifier	count=1
arg_pair	y un conjunto de ||| resource $ann array $input	count=1
function_name	datos en un vector ||| input	count=1
function_name	devuelve el ancho ||| get image width	count=1
arg_pair	una archivo ||| resource $filehandle string $write_ver	count=1
function	[function_name_1] stream dado ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	identificador de entrada ||| resource $link_identifier	count=1
function_name	propiedad fuente de los ||| font	count=1
function_name	una jerarquía entera ||| checkout	count=1
arg_pair	algoritmo ||| string $algorithm	count=2
function_name	que las ||| min doc frequency	count=1
arg_pair	parecida a ||| string $username	count=1
arg_pair	miller-rabin para revisar ||| int $reps	count=1
function_name	de la última tupla ||| dbplus last	count=1
return	dsn disponibles después de ||| array	count=1
function_name	de un ||| chr	count=1
function_name	para acomodar ||| highlight	count=1
function	[function_name_1] un documento ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	hacer de ||| zmqsocket $backend	count=1
function_name	usarse para almacenar información ||| set	count=1
function_name	[function_name] trabajos a ||| add [function_name]	count=1
arg_pair	por el offset ||| int $offset	count=1
namespace	cierra parcialmente o ||| function	count=1
function_name	espera de [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	generador de trozos ||| set highlight fragmenter	count=1
arg_pair	comporta ||| string $servername	count=1
function_name	la contraseña ||| oci password	count=1
function_name	sobre la ||| curl	count=1
arg_pair	especificado ||| string $database_name	count=1
arg_pair	se encuentra disponible la ||| resource $psdoc	count=1
function_name	posix ||| posix	count=2
function_name	sobre ||| proc	count=1
arg_pair	uid dado ||| int $uid	count=1
function_name	del espacio del ||| space	count=2
function_name	correlación de ||| asort	count=1
function_name	[function_name_1] equilibrado de ||| [function_name_2] [function_name_1]	count=1
function_name	enlace [function_name] ||| [function_name]	count=1
function_name	a las candidatas ||| fann get cascade	count=4
function_name	obetiene el retraso de ||| getimagedelay	count=1
function_name	buferizado ||| buffer	count=1
function_name	y sólo si el ||| exceptions	count=1
arg_pair	con ||| mixed $bordercolor	count=1
function_name	su nombre y ||| char from name	count=1
function_name	establece ||| set script	count=1
function_name	lee los ||| all	count=1
namespace	de caracteres de ||| function	count=1
namespace	imagen a color ||| gmagick	count=1
function	lee [arg_pair_2] ||| [function_name_1] slob [arg_pair_2]	count=1
arg_pair	server_key se ||| array $keys	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] text annotation [arg_pair_2]	count=4
function	[function_name_1] una definición ||| [arg_pair_2] [function_name_1]	count=1
function_name	del valor de una ||| get	count=1
function	actualiza el [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	[function_name_1] está cargada ||| [function_name_2] [function_name_1]	count=4
function_name	desde la cadena de ||| load string	count=1
arg_pair	needle ||| string $haystack mixed $needle	count=1
return	caracteres ||| string	count=2
arg_pair	una imagen reconstruida ||| int $metric	count=1
function_name	prepara ||| odbc prepare	count=1
function_name	[function_name_1] primer ||| [function_name_1] [function_name_2]	count=1
function_name	cfb ||| mcrypt	count=1
namespace	servidores ||| memcached	count=3
namespace	de instancia xml ||| sdo_das_xml	count=1
function_name	función usa ||| gmp	count=1
return	generada al inicio ||| void	count=1
function_name	contexto ||| gupnp context	count=1
namespace	y devolver un valor ||| rarexception	count=1
rest	y otra [function_2] ||| [function_2] [return_1]	count=1
arg_pair	uno ||| float $number	count=1
function_name	virtual actual donde ||| chdir	count=1
function_name	decadencia ||| decay	count=2
function_name	ordenados por valor ||| sort	count=2
function_name	el número [function_name] ||| ingres num [function_name]	count=1
function_name	[function_name_1] salida ||| [function_name_2] [function_name_1]	count=12
function_name	una o ||| add function	count=1
arg_pair	esta función [arg_pair_1] [arg_pair_2] ||| function bool xattr set [arg_pair_2] [arg_pair_1]	count=3
function_name	todas las colecciones ||| collection info	count=1
function_name	mensaje para ||| imap	count=1
function_name	descripción de la ||| surface create	count=1
function_name	y almacena el resultado ||| xdiff	count=2
arg_pair	de la imagen ||| int $x	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] affected [function_name_2]	count=1
arg_pair	función callback por cada ||| mixed $callback mixed $arg	count=1
namespace	que closedir() solo que ||| directory	count=1
arg_pair	key ||| mixed $key int $padding	count=1
return	en el esquema ||| bool	count=1
arg_pair	de fichero fd ||| resource $fd	count=1
function_name	tiene [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	array después ||| splfixedarray	count=1
function_name	la última ||| db2 last	count=1
function_name	atributo de la ||| attribute	count=1
function_name	crea un nuevo analizador ||| parser create	count=1
function_name	[function_name_1] porción de ||| [function_name_1] [function_name_2]	count=12
arg_pair	el valor de la ||| string $variable string $value	count=1
function_name	termscomponent ||| terms	count=1
function_name	incorporación de ||| use krfonts	count=1
function_name	los [function_name] un ||| [function_name]	count=1
arg_pair	una ||| int $depth string $mask	count=1
function_name	crea un ||| raiseimage	count=1
function_name	establece el [function_name_2] ||| [function_name_1] cascade activation [function_name_2]	count=2
function_name	si el ||| set using	count=1
function_name	única función de ||| add	count=1
function_name	de filas afectadas por ||| fbsql affected rows	count=1
return	y ||| void	count=3
function_name	de interoperabilidad ||| default stub	count=1
function_name	lo ||| set mlt min doc	count=1
namespace	recopiladas por ||| function	count=1
function_name	instala un objeto ||| mysqlnd uh set	count=1
function_name	devolverá la lista de ||| odbc data	count=1
arg_pair	signed_text y retorna ||| string $signed_text	count=1
arg_pair	[arg_pair] arco ||| [arg_pair]	count=1
function_name	del continente ||| continent	count=1
function	método añade [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=9
arg_pair	carga una ||| string $filename bool $deferred	count=1
function_name	o false si es ||| module is	count=1
arg_pair	un objeto de ||| resource $pdfdoc	count=1
function_name	la descripción de la ||| cairo matrix rotate	count=1
function_name	de color especificado como ||| get color value	count=1
arg_pair	un ancho ||| float $width	count=1
function_name	indicando error ||| set	count=1
arg_pair	tridimensional simulado aclarando ||| int $width int $height	count=1
arg_pair	crea un rectángulo comenzando ||| resource $image int $x1	count=1
namespace	la lista ||| function	count=2
function_name	sobre ||| curl getinfo	count=2
function_name	base de ||| db	count=5
function_name	esta función analiza una ||| parse url	count=1
function_name	de entrada para ||| fann set input scaling	count=1
arg_pair	función se comporta ||| resource $p	count=1
return	y llama ||| bool	count=1
function_name	multibyte de forma ||| mb	count=1
namespace	posición ||| solrdocument	count=1
return	este serán ||| solrquery	count=1
rest	devuelve [function_2] ||| [function_2] [return_1]	count=1
return	un string y ||| array	count=1
arg_pair	el identificador de entrada ||| resource $result_identifier	count=1
function_name	autenticación donde la clave ||| svn auth	count=1
function_name	consulta ||| query chars	count=2
namespace	asociada a ||| function	count=1
function_name	obtiene ||| dbase get	count=1
function_name	del formato utf-8 ||| pdf utf8	count=1
function_name	[function_name_1] copyright de ||| [function_name_1] [function_name_2]	count=1
function_name	de los caracteres que ||| addcslashes	count=1
namespace	de la imagen ||| imagick	count=1
namespace	el carácter especificado ||| function	count=1
function_name	buscarán los archivos de ||| chdir	count=1
function_name	establece el factor ||| set	count=1
arg_pair	repos_url de forma ||| string $repos_url	count=1
return	código ||| string	count=1
function_name	descripción ||| cairo font face get	count=1
namespace	palabras ||| solrquery	count=1
function_name	puede leer loadfromstring() ||| save	count=2
function_name	con el id ||| by id	count=1
namespace	de mensaje para el ||| function	count=1
function_name	cuenta todos los elementos ||| count	count=1
arg_pair	simulado aclarando ||| int $x int $y	count=1
function_name	devuelve un array [function_name_1] [function_name_2] de datos interno hacia ||| [function_name_2] [function_name_1]	count=4
function_name	tamaño ||| entry filesize	count=2
namespace	octal representado por ||| function	count=1
arg_pair	de una base de ||| resource $pxdoc string $name	count=1
return	reduce ||| gmagick	count=1
function_name	recupera la información ||| info	count=2
function_name	lo menos ||| set mlt min doc frequency	count=1
function_name	baudios del ||| dio tcsetattr	count=1
function_name	una de sus madres ||| a	count=1
function_name	lo menos ||| min doc	count=1
arg_pair	objeto gmagickpixel de color ||| gmagickpixel $color	count=1
function_name	detallada desactivado por omisión) ||| disable debug	count=1
arg_pair	con ciertas propiedades de ||| int $field_offset	count=1
function_name	constantes definidas ||| constants	count=1
function_name	envío ||| autocommit	count=1
function_name	la etiqueta id3 correspondiente ||| id3 get	count=1
return	con las ||| array	count=1
arg_pair	celda de [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=14
function_name	esquema solicitado de ||| schema	count=1
function_name	conexiones ||| connection	count=1
arg_pair	del indentificador de resultado ||| resource $result_id	count=1
function_name	[function_name_1] clase ||| [function_name_1] iterator [function_name_2]	count=1
arg_pair	la versión plural de ||| string $msgid2	count=1
function_name	en por ||| set	count=1
function_name	de la ||| interlace	count=1
arg_pair	repos_url de forma opcional ||| string $repos_url	count=1
function_name	página ||| page	count=10
arg_pair	un punto de ||| mixed $codepoint int $property	count=1
function_name	una entrada ||| entry	count=1
function_name	un documento xml desde ||| xml	count=1
function_name	[function_name_1] [function_name_2] ||| mongodate datetime [function_name_2] [function_name_1]	count=1
namespace	por esta extensión ||| function	count=1
function_name	se comporta de forma ||| sybase pconnect	count=1
namespace	es un ||| solrdocument	count=1
function_name	el valor actual ||| checkbox set value	count=1
arg_pair	a 0 index ||| int $index	count=1
function_name	información sobre un ||| status	count=1
return	y lo almacena ||| array	count=1
function_name	la firma ||| verify	count=1
function_name	un documento html desde ||| save html	count=1
return	espacios ||| string	count=1
arg_pair	un ||| mixed $config	count=1
function_name	nueva página [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de ||| autocommit	count=1
namespace	número de segundos ||| function	count=1
function_name	formulario [function_name] ||| [function_name] submit form	count=1
arg_pair	las estructuras de información ||| int $table	count=1
return	disponibles ||| array	count=1
function_name	de ||| get status	count=2
function_name	afectadas ||| affected	count=7
function_name	por buzon ||| createmailbox	count=1
function_name	del servicio y las ||| service	count=1
arg_pair	el domain [arg_pair_2] ||| [arg_pair_1] string $msgid1 [arg_pair_2]	count=2
function_name	de fragmento ideal especificado ||| regex slop	count=1
arg_pair	es ||| mixed $value	count=1
return	que son ||| mongocursor	count=1
function_name	elimina una variable ||| shm remove	count=1
arg_pair	path1 ||| string $path1 int $rev1	count=1
function_name	[function_name_1] curl manteniendo ||| [function_name_2] [function_name_1]	count=2
function_name	la intersección ||| uintersect	count=1
function_name	la frase de ||| use phrase	count=2
function_name	el tamaño del campo ||| oci field size	count=1
function_name	una [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] resource	count=2
namespace	para ser editado ||| hw_api	count=1
function_name	repositorio con ||| svn	count=1
function_name	arcocoseno para cada valor ||| trader acos	count=1
function_name	serán ignoradas ||| frequency	count=1
function_name	fecha dada ||| date	count=1
return	consista en ||| bool	count=1
return	sobre un proceso abierto ||| array	count=1
function_name	control de ||| control point	count=1
return	primer plano y ||| int	count=1
function_name	arcocoseno ||| trader acos	count=1
arg_pair	sybase_connect() con ||| string $password string $charset	count=1
function_name	o subsiguiente fichero ||| add	count=1
namespace	que los ||| function	count=2
function_name	complemento ||| mysqlnd ms	count=1
function_name	[function_name_1] código de ||| [function_name_1] [function_name_2]	count=1
function	obtnener [arg_pair_2] ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=3
function_name	argumento es true entonces ||| set	count=1
namespace	forma opcional se ||| function	count=1
arg_pair	esta función prepara ||| resource $id	count=1
function_name	error ||| curl	count=1
function_name	el logo de ||| logo guid	count=1
function_name	bytes de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name] algoritmo especificado ||| mcrypt module [function_name]	count=2
arg_pair	value ||| mixed $value int $options	count=1
arg_pair	carácter c verticalmente ||| string $c int $color	count=1
function_name	necesariamente igual a ||| iconv strlen	count=1
function_name	recibe un ||| recv multi	count=1
function_name	sisitema de archivos ||| wrapper register	count=1
function_name	para similitud ||| mlt	count=1
function_name	número de secuencia ||| msgno	count=1
function_name	la información de la ||| info	count=1
function_name	modo de compresión para ||| set compression mode	count=1
arg_pair	una cadena str ||| string $str	count=1
arg_pair	la ruta en ||| bool $recursive	count=1
arg_pair	verifica el texto ||| string $signature string $plaintext	count=1
return	la frecuencia en ||| solrquery	count=1
arg_pair	al objetivo target ||| string $target	count=1
function_name	define el de estilo ||| set slide show	count=1
arg_pair	ser adquirido ||| resource $sem_identifier bool $nowait	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] lower [function_name_1]	count=3
arg_pair	de eventos especificada ||| int $flags	count=1
arg_pair	criterio y ||| int $sortorderby	count=2
arg_pair	gmt ||| int $year int $is_dst	count=1
namespace	fgetss() intenta eliminar ||| function	count=1
function_name	[function_name_1] argumentos ||| [function_name_2] [function_name_1]	count=2
function_name	el tipo ||| gettype	count=1
namespace	tridimensional simulado aclarando ||| gmagick	count=1
arg_pair	con el nombre ||| string $name callable $function	count=1
function_name	[function_name_1] parte coincidente ||| [function_name_1] ereg search [function_name_2]	count=1
function_name	usado para extraer ||| msql fetch	count=1
function_name	[function_name_1] a ||| [function_name_1] [function_name_2]	count=1
function_name	de ||| slide	count=3
function_name	otra en el ||| compositeimage	count=1
function_name	de errores ||| trigger error	count=1
function_name	un ||| set file	count=1
function_name	[function_name_1] hijo ||| [function_name_1] [function_name_2]	count=3
function_name	máximo ||| set highlight max	count=1
function_name	imprime el ||| out	count=1
arg_pair	el archivo de base ||| string $filename	count=1
function_name	proceso abierto mediante el ||| proc	count=1
arg_pair	en assoc_array ||| array $assoc_array int $options	count=1
function_name	total de ||| total	count=1
function	[function_name_1] el archivo ||| [arg_pair_2] [function_name_1]	count=1
namespace	una imagen mientras preserva ||| gmagick	count=1
function_name	[function_name_1] el límite ||| [function_name_2] [function_name_1]	count=2
function_name	puedan aplicarse a ||| add	count=1
function_name	el rango de ||| range	count=2
function_name	el perfil ||| profile	count=1
namespace	buscarán los archivos de ||| function	count=1
return	regexiterator::setmode() [return] lista ||| [return]	count=1
arg_pair	16 bytes en un ||| bool $short_format	count=1
function_name	devuelve ||| introspection get state variable	count=2
function_name	lista de parámetros ||| open	count=1
arg_pair	texto ||| resource $handle int $length	count=1
namespace	si dos líneas se ||| function	count=1
arg_pair	name el [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	datos abierta filepro ||| filepro fieldcount	count=1
return	el código ||| string	count=1
function_name	el sistema de ||| rotate	count=1
function_name	la última llamada mysqli_connect() ||| mysqli connect errno	count=1
function_name	buzón actual ||| imap check	count=1
namespace	hash en ||| quickhashinthash	count=1
function_name	un error ||| using exceptions	count=1
function_name	la página [function_name_2] ||| [function_name_2] pdi [function_name_1]	count=2
namespace	[namespace] tipo del ||| [namespace]	count=1
namespace	valida [namespace] un esquema ||| [namespace]	count=1
function_name	devolver ||| using exceptions	count=2
function_name	el id ||| by id	count=1
arg_pair	de una instancia ||| resource $conn_identifier string $oid	count=1
namespace	otros caracteres del inicio ||| function	count=1
function_name	[function_name_1] [function_name_2] algoritmo especificado ||| function int mcrypt module [function_name_2] [function_name_1]	count=2
return	y escribe el ||| int	count=1
function_name	un [function_name] ||| get [function_name]	count=4
arg_pair	óptimo de ||| int $scope int $nullable	count=1
function_name	consulta ||| query field	count=2
return	proceso abierto mediante el ||| array	count=1
function_name	de acumulación y ||| aggregate	count=1
arg_pair	host hostname ||| int $port	count=1
function_name	contexto con la ip ||| context	count=1
function_name	un archivo [function_name] ||| pdf open [function_name]	count=1
arg_pair	de llamarla varias ||| resource $connection_id	count=1
arg_pair	de una imagen ||| string $filename int $width	count=1
return	devuelve el tipo de ||| string	count=1
return	a todos ||| bool	count=1
arg_pair	abstracción que ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	espacio según java ||| java space char	count=1
function_name	y [function_name] dando ||| [function_name]	count=1
arg_pair	une tres cadenas en ||| string $new_data1	count=1
function_name	si ||| supported	count=1
function_name	diff unificado que ||| xdiff file diff	count=1
return	dados en la ruta ||| bool	count=1
function_name	característica conocia como ||| tailable	count=1
function_name	desde el parámetro rows ||| pg copy	count=1
namespace	de salida que ||| function	count=1
function_name	filas que se van ||| set	count=1
function_name	entrenadas las conexiones ||| get cascade	count=1
function_name	número total de ||| get total	count=1
function_name	punto de control de ||| control point	count=1
function_name	disponibles en ||| crypt	count=1
function_name	manejador de declaración de ||| decl handler	count=1
namespace	hash y devuelve ||| quickhashstringinthash	count=1
function_name	respuesta xml del servidor ||| xml response	count=1
function_name	de db2 ||| db2	count=1
function_name	obtiene el puerto ||| get	count=1
arg_pair	datos disponible como ||| int $row int $offset	count=1
function_name	la base de ||| sybase select db	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] continent [function_name_1]	count=3
function_name	de botón tridimensional simulado ||| raiseimage	count=1
namespace	dsn disponibles ||| function	count=1
namespace	reduce el ||| gmagick	count=1
function_name	de sisitema ||| wrapper	count=1
function_name	pdf usando el ||| pdf open	count=1
namespace	último error que ||| function	count=1
function_name	información sobre un ||| proc get	count=1
namespace	basado en ||| function	count=1
function_name	lee datos blob ||| fbsql read blob	count=2
function_name	no ||| set	count=1
function_name	el carp::croak de ||| croak	count=1
arg_pair	especial u ordinario ||| int $major int $minor	count=1
return	claves x e ||| array	count=1
function_name	una descripción ||| sqlite error string	count=1
return	genera una representación ||| string	count=1
arg_pair	sybase_connect() con dos ||| string $password string $charset	count=1
function_name	obtener el tipo ||| get type	count=1
function_name	una matriz de todas ||| defined	count=1
return	en la tabla de ||| bool	count=1
function_name	con dos ||| pconnect	count=1
function_name	[function_name_1] particular de ||| [function_name_2] [function_name_1]	count=3
function_name	parameter ||| set tie breaker	count=4
function	imprime [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de un color del ||| color	count=1
namespace	obtiene el nodo ||| splheap	count=1
namespace	o filtro ||| imagickkernel	count=1
function_name	longitud del campo ||| msql field len	count=1
return	la lista de parámetros ||| int	count=1
arg_pair	usando un método y ||| string $data string $method	count=1
return	de ||| int	count=30
arg_pair	un assoc_array ||| array $assoc_array int $options	count=1
function_name	descripción de la ||| cairo image surface	count=1
return	de los ||| float	count=1
function_name	tidy a sus ||| tidy reset	count=1
function_name	(«kernel») ||| kernel	count=1
function_name	de campos columnas ||| numfields	count=1
function_name	determinará el tipo ||| type	count=1
function_name	la descripción de ||| cairo font options get subpixel	count=1
function_name	que las palabras ||| set mlt	count=1
function_name	llamarla varias ||| source	count=1
arg_pair	ruta en la ||| string $path bool $recursive	count=1
namespace	del array ||| splfixedarray	count=1
function_name	del cifrador especificado ||| mcrypt get cipher	count=1
arg_pair	página del ||| int $page	count=1
namespace	versión plural de ||| function	count=1
function_name	archivo ||| mailparse	count=3
namespace	especial indicando error ||| rarexception	count=1
arg_pair	el método ||| string $data string $method	count=1
function_name	es [function_name] tipo abstracto ||| [function_name]	count=1
arg_pair	esta función invoca un ||| resource $id string $query	count=1
function_name	extrae cada archivo codificado ||| mailparse uudecode	count=1
function_name	imagen ||| interlace scheme	count=2
function_name	de los caracteres ||| get unicode	count=1
function_name	devuelve un identificador único ||| hash	count=1
function_name	y máximo) de ||| extrema	count=2
arg_pair	la información dad ||| array $record	count=1
function_name	[function_name_1] del ||| [function_name_2] cipher [function_name_1]	count=3
function_name	iterador que ||| set iterator	count=1
function_name	de un campo de ||| set	count=1
function_name	destruir el ||| offset unset	count=1
arg_pair	que usar mapreduce ||| array $pipeline array $options	count=1
namespace	que usa la ||| function	count=1
function_name	el tamaño actual ||| zip entry filesize	count=1
function_name	de interoperabilidad stubs específicas ||| create default stub	count=1
function_name	obtiene el nombre base ||| get	count=1
namespace	devuelve el tipo de ||| function	count=1
function_name	resumen de mensajes md5 ||| md5 file	count=1
return	de ømq pueden hacer ||| zmqsocket	count=1
function_name	documentos como este ||| set mlt min doc frequency	count=1
function_name	lista de ||| odbc data source	count=1
function_name	la cadena artista ||| artist	count=1
function_name	de informix de cada ||| ifx fieldproperties	count=1
function	posición numérica [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	redimensiona una imagen ||| resource $image int $new_width	count=1
arg_pair	que esté disponible para ||| int $row	count=1
function_name	obtiene la cadena ||| bzerrstr	count=1
arg_pair	cualquier abstracción que ||| zmqsocket $frontend	count=1
function_name	el arcocoseno para ||| trader acos	count=1
arg_pair	una anotación ||| string $optlist	count=1
function_name	las palabras que ||| mlt min	count=1
arg_pair	[arg_pair_1] tiempo de ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	la lista de parámetros ||| resource $psdoc	count=1
function_name	[function_name] una base ||| db2 [function_name]	count=2
function_name	resultado [function_name] ||| [function_name]	count=3
return	cadena string en ||| bool	count=1
function_name	infomación variable según ||| textblock	count=1
arg_pair	entrada proporcionada ||| resource $result_entry_identifier	count=1
function_name	selecciona la ||| select db	count=1
function_name	mínimo de ||| min	count=3
function_name	pdf importado ||| pdf process	count=2
function_name	consigna la ||| commit	count=1
function_name	[function_name_1] objeto ||| [function_name_2] [function_name_1]	count=1
arg_pair	url ||| string $url	count=1
namespace	pings a ||| function	count=1
function_name	[function_name_1] de imagen ||| [function_name_2] [function_name_1]	count=24
function_name	obtiene el [function_name_2] ||| [function_name_1] module [function_name_2]	count=2
function_name	mediante el uso ||| get status	count=1
function_name	texto que ||| fgetss	count=1
function_name	que almacena datos ||| from file	count=2
function_name	desde ||| load string	count=2
function_name	estadísticas de cliente por ||| client stats	count=1
function_name	lee la siguiente entrada ||| zip read	count=1
function_name	y devuelve el ||| get contents	count=1
return	y sólo si ||| void	count=1
function_name	clase [function_name_2] ||| [function_name_2] [function_name_1]	count=22
function_name	envía ||| ping	count=1
function_name	descripción de la función ||| cairo pattern create rgba	count=1
return	retraso ||| int	count=1
arg_pair	destinatarios cc y bcc ||| string $cc string $bcc	count=1
function_name	de la connection postgresql ||| pg dbname	count=1
namespace	archivo tar ||| phardata	count=1
namespace	abstracción ||| zmqdevice	count=1
function_name	por lo menos ||| doc	count=1
function_name	cambia los permisos del ||| eio fchmod	count=1
function_name	decodifica datos ||| decode	count=1
function_name	sybase_connect() ||| pconnect	count=1
function_name	las palabras ||| min	count=1
return	array asociativo ||| array	count=3
function	[function_name_1] un mensaje ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	signed_text y retorna información ||| string $signed_text	count=1
function_name	estado ||| status message	count=1
arg_pair	un parámetro ||| string $localname	count=1
function_name	[function_name_1] verificación de ||| [function_name_2] [function_name_1]	count=1
arg_pair	de memcached::getmulti() ||| string $cas_tokens	count=1
function_name	[function_name_1] servidores de ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] desde el ||| [function_name_1] [arg_pair_2]	count=3
function_name	se van ||| set	count=1
namespace	de codificar el ||| function	count=1
function_name	descripción ||| ps surface create	count=2
function_name	entidades externas ||| entity	count=1
arg_pair	con la contraseña ||| string $password	count=1
function_name	[function_name_1] rrd ||| [function_name_2] [function_name_1]	count=2
arg_pair	a un ||| resource $p float $g	count=1
function_name	publicación de ||| ap	count=1
function_name	una opción ||| set option	count=1
function_name	[function_name_1] retropropagación ||| [function_name_2] [function_name_1]	count=1
function_name	para el fichero mpeg ||| id3v2 tag	count=1
function_name	a una ||| add	count=1
arg_pair	dado por field ||| resource $statement mixed $field	count=2
arg_pair	la potencia exp ||| gmp $base gmp $exp	count=1
function_name	obtiene blob/clob ejecutando la ||| cubrid lob get	count=1
function_name	importe acrobat [function_name] ||| fdf [function_name] doc	count=1
namespace	todas ||| function	count=1
arg_pair	devuelve un resultado ||| resource $connection	count=3
arg_pair	ancho ||| float $width	count=2
namespace	obtiene la cadena de ||| function	count=1
namespace	de dibujar ||| function	count=1
function_name	de recorte ||| ps clip	count=1
function_name	establece la [function_name_2] ||| [function_name_1] activation [function_name_2]	count=1
function_name	estado del ||| count	count=1
function_name	tamaño actual de ||| entry filesize	count=1
function_name	zip desde ||| build from	count=1
function_name	los ||| uudecode	count=1
function_name	del esquema ||| schema	count=1
function_name	el diccionario ||| crack closedict	count=1
arg_pair	los dispositivos de ømq ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	de ||| status	count=1
function_name	parámetros ||| required parameter	count=2
function_name	lugar de emitir advertencias ||| set	count=1
arg_pair	almacena un [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1] int $startpos	count=3
arg_pair	png ||| int $filters	count=1
function_name	[function_name_1] servidor ||| [function_name_2] [function_name_1]	count=1
namespace	es el espacio de ||| domnode	count=1
function	[function_name_1] database ||| [function_name_1] string $database [arg_pair_2]	count=2
function	una intersección [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	sobre ||| construct	count=1
function_name	de entrada para ||| set input	count=1
function_name	de esquema en un ||| add	count=1
function_name	del servicio ||| service	count=1
function_name	valor especial ||| using exceptions	count=1
function_name	campos de ||| field	count=3
function_name	los colores de primer ||| ncurses color	count=1
arg_pair	espacio de ||| string $namespaceuri	count=1
function_name	por la imagen del ||| set image	count=1
function_name	prioridad de los ||| event base priority	count=1
function_name	tantos ||| doc	count=1
function_name	cambio del valor ||| fann get	count=1
namespace	filas que ||| solrquery	count=1
function_name	archivo codificado mediante ||| uudecode	count=1
function_name	devuelve una imagen ||| sub image	count=1
function_name	nombre de la base ||| name	count=1
function_name	de ||| proc get status	count=2
arg_pair	devuelve el identificador de ||| resource $link_identifier	count=1
function_name	unrar encuentre un error ||| using exceptions	count=1
function_name	array asociativo ||| fetch array	count=2
return	contenido [return] ||| [return]	count=1
arg_pair	para posicionar ||| int $position	count=1
function_name	mongo ||| get	count=1
function_name	este objeto al valor ||| value	count=1
function_name	el nombre de clase ||| class	count=2
arg_pair	retrollamadas ||| mixed $subject	count=1
function_name	devuelve el tiempo ||| get	count=3
arg_pair	[arg_pair_1] dado ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	descripción de la ||| cairo pattern set filter	count=1
arg_pair	una función proporcionada por ||| int $num_output callable $user_function	count=1
function_name	define el de ||| slide show	count=1
function_name	las palabras ||| set	count=1
return	resultado a el ||| int	count=1
arg_pair	una fila ||| int $row_number	count=1
function_name	identifican de manera única ||| odbc specialcolumns	count=1
arg_pair	de ||| zmqsocket $backend	count=4
namespace	especificado ||| function	count=1
namespace	interno ||| solrdocument	count=1
function_name	máximo de épocas ||| epochs	count=1
return	el directorio ||| void	count=1
function_name	conjunto ||| msql	count=2
function_name	un grupo ||| posix	count=1
function_name	[function_name_1] las variables ||| [function_name_2] [function_name_1]	count=1
function_name	de entrelazamiento ||| imageinterlace	count=1
arg_pair	fichero de ||| string $filename	count=1
function_name	devuelve ||| fann get	count=6
function_name	sujeta a ||| fit	count=1
function_name	lista personal de ||| config personal	count=1
function_name	el ámbito del ||| lookup	count=1
function_name	para almacenar información ||| set metadata	count=1
namespace	que el valor ||| directory	count=1
return	de la ||| int	count=8
function_name	[function_name] imap ||| imap last [function_name]	count=1
namespace	array ||| splfixedarray	count=2
function_name	el paquete ||| packet	count=1
function_name	diferencia binaria ||| file bdiff	count=1
function_name	certificado ||| openssl x509 read	count=2
function_name	encuentra disponible la lista ||| open memory image	count=1
function_name	sólo si ||| exceptions	count=1
namespace	perfiles del objeto ||| gmagickdraw	count=1
function_name	devuelve el valor de ||| db2 get	count=1
arg_pair	cuota de ajustes ||| string $quota_root	count=1
arg_pair	un método de ||| int $height	count=1
namespace	devuelve los índice ||| splfixedarray	count=1
function_name	la que las ||| set mlt min doc	count=1
namespace	avanza la ||| iterator	count=1
arg_pair	memcached::cas() ||| float $cas_token	count=1
function_name	para almacenar ||| set	count=1
arg_pair	samconnection conecta el ||| string $protocol array $properties	count=1
function_name	nombre_modulo ||| extension funcs	count=2
function_name	archivo pdf usando ||| pdf open file	count=1
arg_pair	establecieron con la función ||| resource $psdoc	count=1
function_name	de procesos ||| getpgid	count=1
function_name	línea [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	parecida a sybase_connect() con ||| pconnect	count=1
function	pascua para [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	columna especificada del resultado ||| resource $stmt mixed $column	count=1
function_name	valor actual del ||| newt checkbox set value	count=1
arg_pair	valores en assoc_array ||| array $assoc_array	count=1
function_name	nuevo par clave privada ||| openssl pkey new	count=1
function_name	de error ||| curl strerror	count=1
arg_pair	capas de mensaje y ||| zmqsocket $frontend	count=1
function_name	la caché de ||| apc	count=1
function_name	codificación de caracteres inicial ||| mb convert encoding	count=1
function_name	función px_create_fp() ||| tablename	count=1
function_name	la de memcached::prepend() ||| prepend by key	count=1
function_name	número de reintentos ||| sybase deadlock retry count	count=1
function_name	escapa ||| escape	count=1
function_name	actual de una ||| entry filesize	count=1
function_name	nodo actual ||| node	count=1
function_name	large object ||| pg lo close	count=1
function_name	[function_name_1] objeto char ||| [function_name_2] [function_name_1]	count=2
arg_pair	b negro ||| resource $pdfdoc float $b	count=1
function_name	modo de ||| set compression mode	count=1
function	[function_name_1] un nuevo ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	barras invertidas antes ||| string $str	count=1
arg_pair	caracteres que aparecen en ||| string $str	count=1
arg_pair	la codificación de ||| string $encoding	count=1
function_name	blob/clob ejecutando ||| lob	count=1
function_name	frase de ||| use phrase	count=2
function_name	el número de patrones ||| fann length	count=1
return	de una imagen ||| gmagick	count=1
function_name	descripción ||| pattern add color stop rgb	count=1
function	[function_name_1] en un ||| [arg_pair_2] [function_name_1]	count=1
function_name	primer ||| color set	count=2
arg_pair	puntos blanco y negro ||| float $gamma	count=1
arg_pair	especifica por dn se ||| string $dn	count=1
function_name	devolverá la lista ||| data	count=1
function_name	la línea cerrada resultante ||| closepath stroke	count=1
function_name	versión xbm de la ||| imagexbm	count=1
function_name	abre un blob en ||| blob	count=1
return	la fuente ||| int	count=2
function_name	nuevo archivo pdf ||| pdf open	count=1
arg_pair	tamaño de página cookie...) ||| resource $link int $pagesize	count=1
return	una máscara ||| int	count=1
arg_pair	relation al ||| string $name	count=1
arg_pair	en local_socket ||| string $local_socket int $errno	count=1
function_name	columna de ||| column	count=1
function_name	monitorizar ||| cancel monitor	count=2
function_name	manejador para ||| handler	count=1
arg_pair	archivo de base ||| array $options	count=1
function_name	la función socket_recv() recibe ||| recv	count=1
function_name	puede ser usado para ||| set session	count=1
function_name	recorta píxeles ||| shave	count=1
namespace	mensaje de texto ||| function	count=1
namespace	de errores de ||| function	count=1
return	especificados en ||| bool	count=1
arg_pair	de fichero fd ||| mixed $fd int $offset	count=1
function_name	horizontal ||| horizontal scaling	count=1
namespace	nivel de ||| function	count=2
arg_pair	[arg_pair_1] path2 ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	servidor imap o ||| resource $imap_stream	count=1
function_name	parte de un ||| is	count=1
function_name	abierto mediante el uso ||| proc get	count=1
namespace	de la ||| harupage	count=1
function_name	advertencia esta ||| ps open memory image	count=1
function_name	reduciendo [function_name] ||| crop thumbnail [function_name]	count=1
function_name	columna actual para el ||| current column number	count=1
function_name	la ||| odbc data source	count=2
return	y devuelve los ||| array	count=1
function_name	copia de ||| set	count=1
function_name	servicio y las características ||| service	count=1
function_name	línea ||| line	count=14
function	finaliza [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de ssl ||| sslchecks	count=1
arg_pair	envía una petición ||| string $query	count=1
function_name	y extrae ||| mailparse	count=1
function_name	fichero de esquema en ||| types	count=1
function_name	el de estilo ||| show	count=1
namespace	hash ||| quickhashintstringhash	count=3
function_name	devuelve la entrada actual ||| current	count=1
function_name	país y de región ||| country and region	count=1
function_name	tantos documentos como ||| mlt min doc	count=1
namespace	de dimensiones que ||| function	count=1
function	pedido [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	privada ||| private	count=1
function_name	si devuelve un ||| mcrypt module get supported	count=1
arg_pair	establecido a ||| array $arguments	count=1
function_name	utilizando el algoritmo estándar ||| crypt	count=1
return	true entonces en ||| void	count=1
function_name	[function_name_1] condición para ||| [function_name_1] cache [function_name_2]	count=1
function_name	recurso de conexión ||| yaz connect	count=1
function_name	identificador ||| crack	count=1
function_name	el argumento es ||| using exceptions	count=1
function_name	del manejador de ||| handler	count=4
function_name	paso ||| rprop delta	count=3
function	array [arg_pair_2] ||| [function_name_1] resource $stmt [arg_pair_2]	count=2
return	o una ||| bool	count=1
namespace	[namespace] para el ||| [namespace]	count=3
function_name	función acepta uno ||| format	count=1
function_name	[function_name_1] recorte ||| [function_name_2] [function_name_1]	count=4
function_name	un intérprete xml ||| xml	count=1
return	en la capa número ||| bool	count=1
function_name	colecciones de la base ||| collection	count=1
function_name	excepto que file_get_contents() ||| contents	count=1
function_name	los comentarios de documentación ||| doc comment	count=2
arg_pair	tener que usar mapreduce ||| array $pipeline array $options	count=1
arg_pair	almacenados registrados en una ||| string $schema string $procedure	count=1
function_name	este para que ||| kernel	count=1
arg_pair	comporta de forma ||| string $charset	count=1
function_name	de filas ||| rows	count=8
function_name	definición del disco ||| from file	count=2
namespace	el [namespace] en formato ||| [namespace]	count=1
function_name	devuelve el número ||| fbsql num	count=1
return	si usar o ||| solrquery	count=1
function_name	servidor ingres ||| ingres	count=2
namespace	archivo ||| function	count=3
namespace	a ||| function	count=53
namespace	de periodos inestables de ||| function	count=1
function_name	el nombre corto ||| get frame short name	count=1
function_name	para inicializar el phar ||| phar	count=1
function_name	libera la ||| ldap free	count=1
function_name	función crea una ||| create attribute	count=1
function_name	[function_name_1] parámetro facet.date.end ||| [function_name_1] [function_name_2]	count=1
arg_pair	de botón tridimensional ||| int $x	count=1
function_name	opción de configuración dado ||| ini	count=1
arg_pair	socket. -- ||| zmqsocket $backend	count=1
return	en el socket conectado ||| bool	count=1
arg_pair	una base de datos ||| string $database	count=1
function_name	el número de grupos ||| groups	count=1
function_name	desplegar el logo de ||| logo guid	count=1
function_name	registros afectado por la ||| mssql rows affected	count=1
return	hash de un string ||| string	count=1
function	[function_name_1] con ||| [arg_pair_2] [function_name_1]	count=8
function_name	índice de la imagen ||| iterator index	count=1
namespace	de mensaje ||| function	count=1
function_name	corrección gamma ||| gamma	count=1
function_name	extrae cada ||| uudecode	count=1
arg_pair	para un punto ||| int $property	count=1
namespace	página ||| harupage	count=2
arg_pair	de un dn específico ||| resource $link_identifier string $dn	count=2
function_name	el ciclo de peticiones ||| eio nop	count=1
arg_pair	la función va aquí ||| cairogradientpattern $pattern float $offset	count=1
function_name	[function_name_1] sesión ||| [function_name_2] get [function_name_1]	count=4
function_name	posición ||| position	count=1
function_name	extensión a ||| extension	count=1
function_name	el html contenido ||| html	count=1
function_name	error [function_name_2] ||| [function_name_2] step [function_name_1]	count=2
return	el de estilo de ||| bool	count=1
arg_pair	del archivo ||| string $name	count=1
namespace	x e y ||| gmagick	count=1
namespace	que devuelve microtime() ||| mongodate	count=1
function_name	devuelve la metainformación de ||| has metadata	count=1
function_name	obtiene el valor de ||| get string	count=1
function	[function_name_1] [arg_pair_2] formulario ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=1
function_name	la descripción ||| ps surface	count=3
function_name	[function_name] estilo url ||| [function_name]	count=2
function_name	generador de trozos de ||| highlight fragmenter	count=2
arg_pair	por key corresponda a ||| string $key mixed $value	count=1
function_name	máximo de caracteres del ||| set highlight max	count=1
function_name	establece el identificador del ||| set	count=1
function	fichero [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	el nodo actual ||| current	count=1
function_name	computa una intersección ||| uintersect	count=1
function_name	devuelve una cadena de ||| chr	count=1
function_name	sobre distribución de lecturas ||| slave	count=1
arg_pair	domain [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	de control de ||| gupnp control point	count=1
function_name	este ||| count	count=1
arg_pair	extendida de ingres_fetch_row() ||| int $result_type	count=1
function_name	guardar la información de ||| save path	count=1
return	en la conexión ||| bool	count=3
namespace	nombre dado por name ||| function	count=1
arg_pair	hace referencia oid ||| string $mode	count=1
function_name	recupera la extensión ||| extension	count=1
function_name	letras del continente que ||| continent	count=1
function_name	lista de dsn disponibles ||| source	count=1
function_name	retorno de gearman ||| return code	count=2
arg_pair	archivo de ||| string $filename	count=1
namespace	que afecta a la ||| function	count=1
arg_pair	el domain por ||| string $codeset	count=1
function_name	para insertar un único ||| set	count=1
arg_pair	una consulta ||| string $dbpath	count=1
arg_pair	flag a las banderas ||| int $options	count=1
function_name	tamaño actual de una ||| zip entry filesize	count=1
namespace	cadena ||| gmagickdraw	count=1
function_name	oracle ||| oci bind by name	count=2
arg_pair	el certificado x509cert proporcionado ||| bool $shortnames	count=1
function_name	tendencias de ||| bias array	count=1
function_name	función crea ||| create processing	count=1
namespace	devuelto por el puntero ||| function	count=1
function_name	la página para ajustarse ||| set fit	count=1
function_name	letras del continente ||| continent	count=1
return	base ||| int	count=2
arg_pair	de archivo ||| string $filename	count=1
namespace	llena la ruta actual ||| harupage	count=1
function_name	de cada capa de ||| layer array	count=1
namespace	desde la cadena de ||| sdo_das_xml	count=1
function_name	el html ||| load html	count=1
function_name	la precisión de la ||| db2 field precision	count=1
function_name	de datos lob ||| db2 lob	count=1
return	final de la ||| void	count=1
namespace	el ||| sdo_das_xml	count=2
namespace	de directorio indicada por ||| function	count=1
function_name	del conjunto de ||| cubrid	count=1
function_name	usando ncurses_init_color() ||| can change	count=1
function_name	del cliente usado por ||| client identifier	count=1
function_name	[function_name_1] el perfil ||| [function_name_1] image [function_name_2]	count=1
return	fue creado con ||| bool	count=1
arg_pair	de ||| gmp $a	count=1
arg_pair	fd al argumento ||| mixed $fd	count=1
function_name	obtnener ||| imap get quotaroot	count=1
function_name	es [function_name] ||| is [function_name]	count=3
function_name	mysql que está ||| mysql	count=1
namespace	del objeto ||| gmagickdraw	count=1
function_name	a sybase_connect() ||| sybase	count=1
return	de un objeto en ||| string	count=1
function_name	geoip está disponible y ||| geoip	count=1
function_name	descripción ||| surface get	count=2
function_name	de tipo ||| using exceptions	count=1
function_name	cuando la biblioteca unrar ||| set using	count=1
function_name	el último mensaje reportado ||| last message	count=1
function_name	el índice de ||| index	count=1
arg_pair	un efecto de botón ||| int $y	count=1
function_name	colores de primer ||| color	count=1
arg_pair	[arg_pair_1] desde buf ||| [arg_pair_2] [arg_pair_1]	count=4
return	le ha consultado se ||| int	count=1
function_name	registrar ||| register	count=1
namespace	al conjunto y devuelve ||| quickhashintset	count=1
return	id ||| int	count=1
function_name	[function_name_1] el máximo ||| [function_name_2] [function_name_1]	count=1
function_name	error cuadrático medio de ||| mse	count=1
function_name	distancia de la línea ||| get	count=1
return	descriptor previamente asignados con ||| bool	count=1
function_name	canal ||| channel	count=2
function_name	algoritmos por bloques o ||| block algorithm	count=1
function_name	escala [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	propuesta de renderización ||| getimagerenderingintent	count=1
function_name	si y sólo si ||| set	count=1
function_name	fácil de obtener ||| get	count=1
arg_pair	de una ||| string $content string $key	count=1
function_name	la traza ||| trace	count=3
function_name	la frase de consulta ||| phrase	count=2
function_name	tendencias de cada capa ||| fann get bias array	count=1
function_name	términos [function_name] faceta debería ||| [function_name] facet	count=1
function_name	csr certificate signing ||| csr	count=1
return	de emitir ||| void	count=1
arg_pair	similar a ingres_fetch_array() con ||| int $result_type	count=1
function_name	lee datos clob de ||| fbsql read clob	count=1
function_name	del continente que corresponde ||| continent code	count=1
arg_pair	sobre las capas de ||| zmqsocket $frontend	count=1
function_name	guarda la [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	de ||| construct	count=4
arg_pair	bytes ||| resource $handle int $length	count=1
function_name	la línea [function_name_2] ||| [function_name_2] [function_name_1]	count=9
return	en progreso en la ||| bool	count=1
return	devuelve una cadena que ||| string	count=1
arg_pair	una ||| string $name callable $callback	count=1
function_name	oposición a ||| internal	count=1
function_name	efecto de ||| raiseimage	count=1
return	nombre del ||| string	count=1
function_name	la incorporación de fuentes ||| use krfonts	count=1
function_name	todas las opciones ||| all	count=1
function_name	trabajo para [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	facetas ||| facet	count=1
function	monitoreo a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	sobre un socket ||| stream socket accept	count=1
arg_pair	para iterar ||| int $colnum	count=1
namespace	creado con ||| sdo_das_xml	count=1
arg_pair	desde el string ||| string $content string $mimetype	count=1
return	en un formato ||| bool	count=1
namespace	el sistema de coordenadas ||| function	count=1
function_name	propiedad fuente de ||| font	count=1
namespace	dado ||| function	count=4
function_name	[function_name] de persistencia ||| get persistent [function_name]	count=1
function_name	obtener el [function_name_2] ||| [function_name_1] iterator [function_name_2]	count=1
return	un segundo o subsiguiente ||| void	count=1
arg_pair	y ||| resource $handle	count=1
function_name	error cuando ||| using exceptions	count=1
function_name	paginación tamaño ||| paged result	count=1
function_name	conjunto de resultados ||| cubrid result	count=1
function_name	[function_name_1] el mensaje ||| [function_name_1] [function_name_2]	count=2
namespace	parte de un ||| tidynode	count=1
namespace	el pid del id ||| mongoid	count=1
function_name	el coseno hiperbólico para ||| trader cosh	count=1
function_name	una imagen de ||| image	count=1
function_name	frecuencia en la que ||| min	count=1
function_name	máxima sobre la que ||| mlt max	count=1
function	[function_name_1] específica en ||| [function_name_1] int $row_number [arg_pair_2]	count=1
function_name	el ||| is	count=2
arg_pair	la función cubrid_set_drop() ||| string $set_element	count=1
function_name	el código de error ||| strerror	count=1
namespace	exporta la [namespace] a ||| [namespace]	count=1
function_name	de región ||| country and region	count=1
function_name	[function_name_1] interpretación ||| [function_name_2] [function_name_1]	count=6
function	intersección de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
namespace	sistema de coordenadas ||| function	count=1
function_name	cadena del formato utf-8 ||| utf8	count=1
function_name	que las palabras que ||| frequency	count=1
arg_pair	una página ||| int $page string $dest	count=1
arg_pair	un [arg_pair_2] ||| object [arg_pair_1] string $class_name [arg_pair_2]	count=1
function	[function_name_1] entrada proporcionada ||| [function_name_1] [arg_pair_2]	count=4
return	según los ||| array	count=1
function_name	das xml que ya ||| add types	count=1
namespace	esta función ya que ||| function	count=1
function_name	descenso vertical de la ||| get descent	count=1
function	coloca [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] tupla ||| [function_name_2] [function_name_1]	count=8
function_name	algoritmo estándar ||| crypt	count=1
function_name	el punto blanco ||| white point	count=1
function_name	filas ||| set start	count=2
function_name	al entrenamiento continuar ||| fann	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] image background [function_name_2]	count=2
function_name	extrase ||| get pid	count=1
function_name	bits mas significantes hasta ||| gmp scan1	count=1
return	fgets() ||| string	count=1
return	si la ||| bool	count=2
function_name	mensaje y socket. ||| construct	count=1
return	predeterminado ||| void	count=1
namespace	llama a la función ||| gearmanworker	count=1
arg_pair	a una ||| domdocument $doc string $uri	count=1
function_name	y extrae ||| mailparse uudecode	count=1
function_name	prioridad ||| event base priority init	count=2
function_name	establece la edición ||| oci set	count=1
namespace	modo de compatibilidad que ||| function	count=1
function_name	parte coincidente ||| regs	count=1
function_name	espacio de ||| space	count=1
namespace	ha sido ||| sdo_das_xml	count=1
function_name	u otros ||| ltrim	count=1
return	para las ||| bool	count=1
arg_pair	nombre de relation al ||| resource $relation	count=1
namespace	se comporta de forma ||| function	count=2
arg_pair	en el string haystack ||| string $haystack	count=1
function_name	posición offset de campo ||| field	count=1
function_name	cuenta todos ||| count	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] image channel [function_name_2]	count=1
return	segundos desde la época ||| int	count=1
function_name	devuelve el ||| get contents	count=1
namespace	archivo tar o zip ||| phardata	count=1
arg_pair	del objeto ||| int $bid	count=1
function_name	como ||| fetch	count=1
function_name	establece la apariencia ||| set ap	count=1
arg_pair	con el método ||| string $data string $method	count=1
function_name	a llamar ||| callback	count=1
arg_pair	esa función ||| string $function_name	count=1
arg_pair	define el de estilo ||| int $type float $disp_time	count=1
function_name	primer plano ||| color set	count=1
function_name	ideal especificado por solrquery::sethighlightfragsize) ||| highlight regex slop	count=1
function	[function_name_1] con clave ||| [arg_pair_2] [function_name_1]	count=4
return	colores de ||| int	count=1
arg_pair	del texto que lee ||| resource $handle	count=1
arg_pair	propiedad hwnd en instancia ||| int $window_handle	count=1
function_name	puede usarse para ordenar ||| array multisort	count=1
arg_pair	elimina tuple de relation ||| resource $relation array $tuple	count=1
function_name	la configuración del ||| config count	count=1
function_name	devolver un valor ||| set using exceptions	count=1
function_name	escala una imagen ||| image	count=2
function_name	especificado si devuelve un ||| mcrypt module get supported	count=1
return	mcrypt_generic_deinit() en ||| bool	count=1
function_name	use pdf_get_value() ||| get majorversion	count=1
function_name	[function_name] el ||| [function_name] array	count=2
function_name	nombre host ||| fbsql hostname	count=1
arg_pair	key corresponda ||| string $key	count=1
arg_pair	el dominio actual ||| string $domain	count=1
function_name	[function_name_1] compresión ||| [function_name_1] [function_name_2]	count=1
function_name	devuelve una representación ||| to date	count=1
function_name	con centro ||| imagefilledellipse	count=1
function_name	la ||| image	count=2
function_name	[function_name_1] nombre abreviado ||| [function_name_2] [function_name_1]	count=1
namespace	el [namespace] como una ||| [namespace]	count=1
function_name	lista de parámetros ||| ps open	count=1
function_name	petición al [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	id de mongo ||| int	count=1
arg_pair	de mensaje del archivo ||| resource $mimemail mixed $filename	count=1
return	aplicarse a una ||| void	count=1
arg_pair	especificar un ||| string $field string $field_override	count=1
function_name	imágenes ||| compare images	count=1
function_name	archivo pdf usando el ||| pdf	count=1
function_name	el cuál cae ||| days	count=1
function_name	sólo texto ||| is text	count=1
arg_pair	información dad a la ||| array $record	count=1
function_name	libera la memoria ||| free	count=1
arg_pair	intermediarios de direcciones servicios ||| zmqsocket $backend	count=1
function_name	analiza datos get/post/cookie y ||| parse str	count=1
arg_pair	conexión al servidor ||| string $host	count=1
function_name	esta función ||| image	count=1
function_name	nombre del servidor anfitrión) ||| host info	count=1
arg_pair	por el algoritmo ||| string $algorithm	count=1
return	valor especial ||| void	count=1
function_name	nueva instancia ||| new	count=1
arg_pair	a x ||| float $x	count=1
function_name	la ruta del directorio ||| path	count=1
arg_pair	mensaje ||| int $msg_number	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=10
function_name	la propiedad para ||| property	count=1
function_name	obtener información blob/clob ||| cubrid lob export	count=1
arg_pair	un mapa ||| string $domain string $map	count=1
arg_pair	al dn específico ||| resource $link_identifier string $dn	count=1
function_name	nombres especificado ||| is default	count=1
arg_pair	la asociación de mysql_connection ||| mixed $mysql_connection	count=1
function_name	después de ||| odbc data	count=1
function_name	envía la ||| service proxy send	count=1
namespace	un alias ||| solrdocument	count=1
return	binaria dada en ||| bool	count=1
function_name	todos los ||| ping	count=1
return	del id ||| int	count=1
function_name	parameter ||| set query	count=1
function_name	dio_read() [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	subject ||| int $limit	count=1
function_name	la expresión regular ||| preg	count=1
function_name	de forma parecida ||| sybase pconnect	count=1
function_name	de llamarla varias ||| data	count=1
function_name	la fecha dada ||| date parse from format	count=1
return	página arbitraria en ||| bool	count=1
function_name	escala de la columna ||| oci field scale	count=1
arg_pair	que se especifique ||| string $destination mixed $entries	count=1
arg_pair	nth ||| gmp $a int $nth	count=1
function_name	instrucciones ||| set processing instruction	count=1
return	cuando la ||| void	count=1
function_name	socket de flujo ||| stream socket server	count=3
function_name	array multi-dimensional con información ||| all info	count=1
arg_pair	sybase_connect() con dos ||| string $username	count=1
function_name	una matriz ||| field names	count=1
function_name	exporta ||| gmp export	count=1
function_name	logaritmo en base 10 ||| log10	count=2
function_name	devuelve el valor ||| yaz get	count=1
arg_pair	se identificaron con ||| string $client_identifier	count=1
function_name	copyright de la ||| getcopyright	count=1
function_name	o más opciones para ||| options	count=1
function_name	retorna el último error ||| error	count=1
return	devuelve el tamaño actual ||| int	count=1
function_name	no ||| mlt min	count=1
function_name	guardar la ||| save path	count=1
function_name	excepción ||| exceptions	count=1
function_name	base de datos postgresql ||| pg	count=2
arg_pair	hasta maxlength ||| resource $handle int $maxlength	count=1
arg_pair	para el intérprete ||| resource $parser	count=1
return	pid del id de ||| int	count=1
function_name	en ||| nsapi request	count=1
arg_pair	un año dado ||| int $year int $method	count=1
namespace	date() excepto que ||| function	count=1
namespace	de trabajo o ||| function	count=1
function_name	el número de columna ||| column number	count=1
return	socket. -- zguide ||| zmqsocket	count=1
function_name	la csr dada ||| openssl csr sign	count=1
function_name	de llamarla ||| odbc data source	count=1
function_name	blob/clob ejecutando la sentencia ||| lob	count=1
function_name	documentos como este ||| doc	count=1
namespace	refiriénsose [namespace] no hay ||| [namespace]	count=1
function_name	a la clave primaria ||| odbc foreignkeys	count=1
function_name	logaritmo natural de ||| log	count=1
function_name	devuelve el ancho ||| pdf stringwidth	count=1
function_name	de ||| slide show	count=6
function_name	número de campo ||| field seek	count=1
namespace	multidimensional por ||| function	count=1
function_name	obtiene la propuesta ||| getimagerenderingintent	count=1
function_name	una lista de los ||| broker list dicts	count=1
return	es utilizada para tomar ||| string	count=1
arg_pair	comporta ||| string $servername string $username	count=1
arg_pair	añade un ||| resource $pdfdoc	count=1
arg_pair	recursivamente path1 ||| string $path1	count=1
arg_pair	función callback por cada ||| mixed $callback	count=1
function_name	código de error ||| strerror	count=1
function_name	el tipo mime ||| to mime type	count=1
function_name	[function_name_1] documentos en ||| [function_name_2] [function_name_1]	count=1
namespace	proceso ||| function	count=3
function_name	lista de ||| data source	count=1
function_name	valor ||| close	count=1
function_name	fila en forma ||| ibase fetch	count=1
function_name	de tendencias ||| get bias array	count=1
function_name	del estado http ||| get http status	count=1
arg_pair	el de estilo ||| int $type float $disp_time	count=1
return	el búfer ||| int	count=1
function_name	trabajo o repositorio ||| svn mkdir	count=1
arg_pair	el domain actual ||| string $domain	count=1
return	carga un segundo ||| void	count=1
function_name	si y sólo ||| set	count=1
function_name	actual de una entrada ||| entry filesize	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
arg_pair	valor de ||| mixed $value	count=2
function_name	puesta de sol ||| date sunset	count=1
function_name	establece ||| stream set read	count=1
function_name	no se le ha ||| count	count=1
function_name	por lo ||| set mlt	count=1
function_name	calidad de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] mensaje ||| [function_name_2] [function_name_1]	count=2
return	fijo ampliando [return] reduciendo ||| [return]	count=1
function_name	máximo ||| highlight max	count=2
function_name	las entradas ||| input	count=1
function_name	afectadas ||| cubrid affected	count=1
arg_pair	con barras invertidas ||| string $str	count=1
function_name	campos ||| field	count=8
function_name	estado del modo auto-commit ||| cubrid get autocommit	count=1
function_name	frecuencia bajo ||| term frequency	count=1
function_name	la supervisión del servicio ||| win32 start service ctrl dispatcher	count=1
function_name	filas ||| db2 num rows	count=2
function_name	usa la prueba ||| gmp prob prime	count=1
arg_pair	en el modo de ||| int $mode int $pri	count=1
namespace	tiempo ||| gearmanclient	count=1
arg_pair	solicitud para ejecutar una ||| resource $connection	count=1
function_name	función ||| data source	count=2
function	[function_name_1] un ||| [function_name_1] pdi document [arg_pair_2]	count=1
function_name	como ||| doc frequency	count=2
function_name	[function_name_1] copia de ||| [function_name_2] highlight alternate [function_name_1]	count=1
arg_pair	left_operand ||| string $left_operand	count=1
function_name	namespace es declarado ||| xml set start namespace decl	count=1
function_name	imagen en ||| image	count=2
namespace	objeto referenciado aún existe ||| weakref	count=1
function_name	la ||| nsapi	count=1
return	objeto ||| float	count=1
function_name	intersección ||| array uintersect assoc	count=1
return	el objeto throwable anterior ||| throwable	count=1
arg_pair	de un identificador de ||| resource $result_id	count=1
function_name	de configuración interna especificada ||| iconv set encoding	count=1
function_name	y devuelve un nuevo ||| new	count=1
function_name	frecuencia ||| set mlt min doc	count=1
function_name	como el carp::croak ||| croak	count=1
arg_pair	start ||| int $start	count=2
function_name	prueba probabilística de ||| gmp prob prime	count=1
function_name	de nombres especificado ||| default	count=1
function_name	el elemento [function_name] como un ||| [function_name]	count=1
function_name	la porción ||| mb strrchr	count=2
arg_pair	secuencia de mensaje ||| resource $imap_stream	count=1
arg_pair	thickness píxeles ||| int $thickness	count=1
function_name	libera la memoria asociada ||| free result	count=1
function_name	sisitema de archivos tales ||| stream wrapper register	count=1
function_name	comentario a [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	en un stream ||| resource $stream	count=1
function_name	colores de ||| ncurses	count=1
function_name	del array mantienen ||| arsort	count=1
function_name	configuración ||| ini	count=2
arg_pair	hash de un ||| string $str	count=1
namespace	si el [namespace] especficiado ||| [namespace]	count=1
function_name	punto de control con ||| gupnp control point	count=1
function_name	crea ||| create ns	count=2
arg_pair	método y una ||| string $data string $method	count=1
function_name	la estructura de entrenamiento ||| train	count=1
function	[function_name_1] una variable ||| [function_name_1] [arg_pair_2]	count=2
function_name	se van a ||| set	count=1
function	cadena [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function_name	pdf usando el nombre ||| pdf open file	count=1
arg_pair	x509cert proporcionado ||| mixed $x509cert bool $shortnames	count=1
arg_pair	poder utilizarlo con las ||| string $encoding string $separator	count=1
arg_pair	restricciones basdas [arg_pair] términos ||| [arg_pair]	count=1
function_name	pares de ||| pspell config save repl	count=1
arg_pair	un ||| mixed $data	count=1
function_name	escala de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	clave dada por variable_key ||| resource $shm_identifier int $variable_key	count=1
arg_pair	cero ||| string $zurl mixed $options	count=1
function_name	un evento ||| event	count=1
function_name	eventos ||| event buffer	count=2
function_name	gestor de excepciones anterior ||| exception	count=1
arg_pair	needle ||| mixed $needle	count=1
function_name	manejador del trabajo para ||| job handle	count=1
function_name	hacer de intermediarios ||| construct	count=1
function_name	función devuelve [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	de los datos ||| int $linebreak array $callbacks	count=1
function_name	la que las palabras ||| min doc frequency	count=1
namespace	colas ||| zmqdevice	count=1
function_name	ideal ||| highlight regex slop	count=2
function_name	incluir o no ||| include	count=1
function_name	página y ||| page	count=1
function_name	de lecturas [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	la posición indicada. ||| int $top	count=1
namespace	stream_filter_prepend() o ||| function	count=1
function_name	bajo la ||| min	count=1
function_name	la consulta siguiente ||| next	count=1
function_name	unrar encuentre un error ||| exceptions	count=1
arg_pair	función ||| resource $psdoc	count=1
arg_pair	en haystack y ||| bool $before_needle	count=1
function_name	analiza ||| parse str	count=2
function_name	caché de código de ||| apc compile	count=1
function_name	la lista ||| data	count=1
arg_pair	str especificada ||| string $str	count=1
function_name	corrección gamma de ||| gamma	count=1
function_name	devuelve el umbral de ||| get	count=1
function_name	función cubrid_lock_read() ||| lock read	count=1
function_name	país y de región ||| region	count=1
function_name	la descripción de ||| ps surface	count=3
function_name	bytes de [function_name_2] ||| bool [function_name_1] parse [function_name_2]	count=1
function_name	desplazamiento de ||| msql	count=1
function_name	pincel para usarla ||| imagesetbrush	count=1
function_name	un gestor curl dado ||| curl	count=1
function_name	especifica el número máximo ||| max analyzed	count=1
return	usada en el ||| bool	count=1
function	[function_name_1] un método ||| [arg_pair_2] [function_name_1]	count=3
function_name	provisto ||| mhash keygen s2k	count=1
function_name	[function_name_1] cabecera ||| [function_name_1] encode [function_name_2]	count=3
return	directorio virtual ||| string	count=1
namespace	cairoimagesuface ||| cairoimagesurface	count=1
function_name	el ||| add required parameter	count=2
function_name	para forzar a ||| variant cast	count=1
function_name	funciones de activación del ||| fann get cascade activation functions	count=1
function	[function_name_1] de entrenamiento ||| [arg_pair_2] [function_name_1]	count=3
return	ver si ||| bool	count=1
function_name	información de la última ||| last	count=1
function_name	establecer los colores de ||| ncurses color	count=1
function_name	copia binaria ||| apc bin	count=1
function_name	la escala de la ||| scale	count=2
function_name	consulta única no están ||| cubrid query	count=1
function_name	el límite del ||| limit	count=1
return	mysqli_info() devuelve una cadena ||| string	count=1
function_name	declaraciones de notación notation ||| notation decl	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $service [arg_pair_2]	count=8
function_name	por lo menos tantos ||| set mlt min doc frequency	count=1
function_name	[function_name_1] ausente ||| [function_name_2] [function_name_1]	count=3
arg_pair	genera un mensaje log ||| int $priority string $message	count=1
arg_pair	de req_handle por ||| resource $req_identifier	count=1
return	a la función ||| bool	count=1
function_name	bajo la cual ||| min	count=1
function_name	de disposición de ||| dispose	count=2
arg_pair	parámetro stack ||| string $stack string $offset	count=1
function_name	esquema en un das ||| types	count=1
arg_pair	parchea un file con ||| string $file	count=3
arg_pair	declaración preparado con odbc_prepare() ||| array $parameters_array	count=1
function_name	[function_name_1] para incrementar ||| [function_name_2] [function_name_1]	count=8
function_name	a facet.limit ||| facet limit	count=1
function_name	[function_name_1] cliente ||| [function_name_1] [function_name_2]	count=1
namespace	sobre la ||| function	count=1
arg_pair	su uso posterior ||| resource $psdoc string $fontname	count=1
function_name	de obtención interna subsigiente ||| prefetch	count=1
arg_pair	dentro de una ||| string $alias	count=1
function_name	no ||| min doc	count=1
namespace	el puntero ||| oci-lob	count=1
function_name	la lista de ||| ps	count=1
function_name	función ||| uksort	count=1
function_name	en ||| set mlt min doc frequency	count=4
function_name	elimina ||| remove var	count=2
function_name	string quoted printable creado ||| quoted printable	count=1
namespace	o mediante base64 y ||| function	count=1
function_name	entidades no analizadas ||| unparsed entity	count=1
function_name	raíz descargando y ||| root	count=1
arg_pair	empleando delimiter como delimitador ||| string $delimiter	count=1
arg_pair	un conjunto de ||| resource $ann	count=1
function_name	prepara ||| prepare	count=1
function_name	encuentra disponible la ||| ps open	count=1
namespace	definida por el ||| arrayiterator	count=2
arg_pair	propiedades correspondientes ||| array $ctorparams	count=1
namespace	el eleménto padre ||| xmlreader	count=1
function_name	frecuencia en la que ||| set mlt min	count=1
function_name	parecida ||| pconnect	count=1
arg_pair	0600 en el ||| string $prefix	count=1
function_name	lista de dsn ||| odbc	count=1
function_name	codificación ||| detect encoding	count=2
function_name	información ||| pdf info	count=2
function_name	la tabla en ||| table	count=1
function_name	memoria formatos de imagen ||| image	count=1
arg_pair	este método es una ||| string $collection	count=1
function_name	atajo ||| shortcut	count=1
return	recupera la ||| yaf_application	count=1
return	un alias de ||| bool	count=1
arg_pair	sybase_connect() ||| string $username	count=1
function_name	generalmente este método ||| reset error	count=1
function_name	crea un vector ||| mcrypt create	count=1
function_name	memcached::touch() con ||| touch by	count=1
namespace	específica [namespace] ||| [namespace]	count=2
arg_pair	el fichero ||| string $filename	count=1
arg_pair	certificado x509cert proporcionado ||| bool $shortnames	count=1
arg_pair	colas o ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	barras ||| string $str	count=1
function_name	complemento de caché de ||| mysqlnd	count=1
function_name	cambia los permisos ||| eio chmod	count=1
function_name	comprensión de salida ||| setswfcompression	count=1
arg_pair	[arg_pair] si ||| [arg_pair]	count=4
arg_pair	con ifx_do() ||| int $cursor_def	count=1
function_name	blob de la base ||| blob	count=1
function	[function_name_1] conexión especificado ||| [function_name_1] [arg_pair_2]	count=1
function_name	crea una nueva instancia ||| create entity reference	count=1
arg_pair	con un ||| int $key	count=1
return	máximo ||| int	count=1
function_name	estar disponibles en ||| crypt	count=1
function_name	como este serán ||| set	count=1
arg_pair	solamente caracteres de mask ||| string $subject string $mask	count=1
namespace	las ||| zmqdevice	count=1
function_name	en un ||| uudecode	count=1
namespace	proceso del proceso actual ||| function	count=1
function_name	prueba probabilística de ||| prob prime	count=1
return	un mensaje de texto ||| string	count=1
function_name	el seno ||| trader asin	count=1
arg_pair	dada por variable_key ||| int $variable_key	count=1
function_name	de petición http en ||| nsapi	count=1
function_name	dos ||| pconnect	count=1
arg_pair	devuelve el identificador de ||| resource $link_identifier resource $result_identifier	count=1
arg_pair	petición actual indicando que ||| string $details	count=1
function_name	conjunto de resultados msql ||| msql result	count=1
return	otros caracteres del inicio ||| string	count=1
function_name	[function_name_1] el nombre ||| [function_name_2] [function_name_1]	count=12
arg_pair	fichero a un string ||| bool $use_include_path	count=1
arg_pair	direcciones servicios colas ||| zmqsocket $frontend	count=1
arg_pair	un archivo ||| string $new_file2	count=1
return	en un array ||| array	count=2
function_name	[function_name_1] un atributo ||| [function_name_2] [function_name_1]	count=1
function_name	devolver un valor ||| using	count=1
function_name	de la frase de ||| use phrase	count=1
function_name	http en la solicitud ||| nsapi	count=1
function_name	segmento inicial de subject ||| strspn	count=1
function_name	mantienen su ||| arsort	count=1
arg_pair	a x ||| float $y	count=1
function_name	y sólo ||| set using	count=1
arg_pair	datos de unicode propertyaliases.txt ||| int $namechoice	count=1
arg_pair	esteblece [arg_pair] ||| [arg_pair]	count=2
return	entre un ||| resource	count=1
function_name	de recodificación dada por ||| recode file	count=1
namespace	trabajo para ver ||| gearmanclient	count=1
arg_pair	el uri que ||| string $encoding	count=1
function	conexión en [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	un efecto de botón ||| gmagick	count=1
function_name	función crea una nueva ||| create	count=4
function_name	archivo paradox y ||| px	count=1
namespace	serializada del hash en ||| quickhashinthash	count=1
arg_pair	en haystack ||| bool $part string $encoding	count=2
namespace	de direcciones servicios ||| zmqdevice	count=1
arg_pair	datos cubrid y ||| resource $conn_identifier resource $lob_identifier	count=1
return	del puntero ||| bool	count=1
arg_pair	memcached::cas() con la ||| float $cas_token	count=1
namespace	no afecta al ||| mongocursor	count=1
function_name	un número es primo ||| prob prime	count=1
function_name	advertencias y ||| using exceptions	count=1
function_name	utf-32 al formato utf-16 ||| utf32 to utf16	count=1
arg_pair	defina sobre las capas ||| zmqsocket $backend	count=1
function_name	proveedor ||| required	count=1
function_name	que necesitan ||| addslashes	count=1
function_name	corta una parte ||| iconv substr	count=1
return	este ||| mongocursor	count=1
return	cualesquiera ||| string	count=1
function_name	devuelve la respuesta del ||| get response	count=1
function_name	círculo a ||| circle	count=1
function_name	indicando error cuando ||| using exceptions	count=1
function_name	la primera imagen ||| first	count=1
arg_pair	arrays compara ||| array $array1 array $array2	count=1
function_name	y devolver ||| set	count=1
function_name	en el buzón ||| imap	count=2
function_name	breaker parameter ||| breaker	count=1
arg_pair	un método ||| int $width	count=1
return	número de ||| int	count=4
function_name	estado actualizado ||| status callback	count=1
return	al valor dado ||| void	count=1
function_name	que ya ha sido ||| add	count=1
function	la desencripta [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	memcached::set() con la excepción ||| int $expiration	count=1
arg_pair	mayoría de las operaciones ||| string $character_set	count=1
return	en ||| bool	count=210
arg_pair	la función cubrid_set_query_timeout() se ||| int $timeout	count=1
function_name	la codificación ||| mb	count=1
arg_pair	proporcionada por ||| int $num_output callable $user_function	count=1
namespace	solo que ||| directory	count=1
function_name	hald ||| hald	count=1
arg_pair	x509cert proporcionado incluyendo los ||| bool $shortnames	count=1
arg_pair	anotación rectangular ||| float $lly float $urx	count=1
arg_pair	conexión ||| mysqlnd_connection $connection	count=2
arg_pair	para el result set ||| resource $result int $index	count=1
arg_pair	devuelve un resultado ||| resource $connection string $qualifier	count=3
arg_pair	object es de esta ||| object $object string $class_name	count=1
function_name	un [function_name] trabajos ||| add [function_name]	count=1
function_name	página ||| flatness	count=1
arg_pair	directorio ||| string $path int $mode	count=1
namespace	array contiene más entradas ||| arrayiterator	count=1
arg_pair	la versión plural ||| string $msgid1 string $msgid2	count=1
function_name	entrada descrita ||| dba	count=2
function_name	de errores y alertas ||| sqlsrv errors	count=1
function_name	csr dada ||| openssl csr sign	count=1
function_name	entrada para ||| fann set input	count=1
function_name	insertada o el último ||| insert	count=1
return	desde una fuente aleatoria ||| string	count=1
function_name	este método se ||| await data	count=1
function_name	datos especificados por ||| dba fetch	count=1
function_name	especial indicando ||| set	count=1
function_name	usarse para ||| set metadata	count=1
arg_pair	un elemento ||| resource $checkboxtree	count=1
return	los dispositivos ||| zmqsocket	count=1
return	generada al ||| void	count=1
function_name	la frecuencia ||| min doc frequency	count=1
function_name	borra el archivo ||| delete	count=1
function_name	especificado si ||| supported	count=1
function_name	gearman ||| return code	count=2
function_name	la contraseña ||| password	count=1
namespace	tipo integer que ||| function	count=1
namespace	el ||| harufont	count=2
function_name	devolverá ||| odbc data	count=1
arg_pair	página ||| int $type float $disp_time	count=1
function_name	de grafema de la ||| grapheme stripos	count=1
arg_pair	el valor ||| string $name mixed $value	count=1
return	resultado asociado con el ||| array	count=1
function_name	menos tantos documentos ||| mlt min doc	count=1
function_name	través de la imagen ||| color image	count=1
function_name	cubrid_lob2_new() u obtenido ||| cubrid lob2 close	count=1
function_name	pausado nominado ||| continue	count=1
arg_pair	función cubrid_schema() se ||| int $schema_type	count=1
arg_pair	proporcionada por el usuario ||| int $num_output callable $user_function	count=1
function_name	conexión cliente de db2 ||| db2	count=1
function_name	campos que solr debería ||| fields	count=1
return	la prueba ||| int	count=1
namespace	envoltura incluida que se ||| function	count=1
function_name	sybase asociado ||| sybase	count=1
namespace	fichero ||| directoryiterator	count=2
arg_pair	de la página ||| int $type float $disp_time	count=1
arg_pair	colas o cualquier abstracción ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	calcula [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	algoritmo ||| crypt	count=1
namespace	por lo que ||| function	count=1
arg_pair	el dominio ||| string $domain string $directory	count=1
function_name	una clase [function_name_2] ||| bool [function_name_2] [function_name_1]	count=2
function_name	su nombre y devolver ||| name	count=1
namespace	es true entonces en ||| rarexception	count=1
function_name	error icu ||| intl error	count=2
function_name	es válida ||| valid	count=1
arg_pair	prepara a query ||| resource $link_identifier	count=1
function_name	la ||| data	count=1
function_name	[function_name] al textflow ||| [function_name] add	count=2
namespace	en el ||| splfileobject	count=1
namespace	nodo basado en ||| domnode	count=1
function_name	almacenar [function_name] ||| get [function_name]	count=3
arg_pair	r * ||| float $r	count=1
function_name	estado http ||| get http status message	count=1
function_name	define el de estilo ||| show	count=1
function_name	guardará los pares ||| pspell config save repl	count=1
function_name	del campo a devolver ||| alternate field	count=2
namespace	adjunta otro núcleo ||| imagickkernel	count=1
function_name	estancamiento de ||| stagnation	count=3
function_name	la descripción de ||| cairo image surface	count=1
arg_pair	ingres_fetch_array() con una ||| int $result_type	count=1
return	de error de ||| string	count=1
function_name	true entonces ||| exceptions	count=1
return	elemento ||| mixed	count=1
function_name	si y ||| set using exceptions	count=1
return	pid ||| int	count=1
function_name	de conexión actual ||| ingres autocommit	count=1
function_name	variables de reescritura establecidas ||| output reset rewrite vars	count=1
function_name	lista ||| odbc	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] extension [function_name_2]	count=3
function_name	número de ||| start	count=1
function_name	devuelve el número ||| ifx num	count=1
function_name	obtener el iterator interno ||| inner iterator	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2878
function_name	el número de candidatas ||| cascade	count=1
function_name	de filas ||| num rows	count=4
function_name	activa el ||| odbc autocommit	count=1
arg_pair	un ||| resource $connection string $qualifier	count=3
namespace	que ||| sqlite3	count=1
return	devolverá la lista de ||| array	count=1
namespace	la dada por ||| function	count=1
function_name	función crea una ||| create document fragment	count=1
function_name	especial ||| set using exceptions	count=2
function_name	columna actual para el ||| get current column number	count=1
arg_pair	un resultado que ||| resource $connection	count=1
arg_pair	a x y ||| float $x float $y	count=1
function_name	calcula el coseno para ||| cos	count=1
function_name	[function_name_1] nombre ||| [function_name_1] short [function_name_2]	count=1
namespace	phar ||| pharfileinfo	count=1
function_name	posiciona el [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	obtiene el valor de ||| get int	count=1
function_name	disposición [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	posicionar el cursor ||| int $position	count=1
arg_pair	operación por lotes ||| array $protocoloptions	count=1
function_name	dsn ||| data	count=1
function_name	o desactiva el canal ||| channel	count=1
function_name	descripción de ||| cairo ps surface	count=3
function_name	del codificador ||| writing	count=1
namespace	como se define en ||| function	count=1
arg_pair	espacio ||| string $localname string $namespaceuri	count=1
arg_pair	a sybase_connect() con dos ||| string $servername	count=1
function	de configuración [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	consigna la transacción ||| commit	count=1
function_name	devuelve la siguiente fila ||| fetch	count=1
function_name	indicando error cuando la ||| set using	count=1
arg_pair	[arg_pair_1] base ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	primer plano y ||| color set	count=1
return	si ||| void	count=2
namespace	de entrada/salida en ||| gearmanclient	count=1
arg_pair	celda de ||| int $row	count=2
namespace	el [namespace] es ||| [namespace]	count=9
function_name	cadena artista de ||| artist	count=1
function_name	los iteradores añadidos con ||| array iterator	count=1
function_name	verificar las extensiones de ||| extensions	count=1
function_name	de letra titular ||| totitle	count=1
function_name	y sólo si ||| set using exceptions	count=1
arg_pair	usando el método gearmanclient::setstatuscallback() ||| string $job_handle	count=1
function_name	su propia clase dom ||| class	count=1
function	[function_name_1] los clientes ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	object ||| object $object string $class_name	count=1
return	ordenado basado [return] varios ||| [return]	count=1
function_name	crea una nueva ||| create entity reference	count=1
function	[function_name_1] ambos ||| [arg_pair_2] [function_name_1]	count=1
function_name	con la imagen ||| image	count=1
function_name	del array ||| get	count=2
arg_pair	nueva entrada ||| int $value	count=1
arg_pair	[arg_pair_1] los efectos ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	en des de ||| crypt	count=1
function_name	la intersección ||| array uintersect	count=1
arg_pair	píxel que coincida ||| float $fuzz	count=1
namespace	son similares al comando ||| mongocursor	count=1
function_name	arbitrarios ||| ping	count=1
arg_pair	de un conjunto ||| resource $result	count=3
function_name	el proveedor oauth ||| add required	count=1
arg_pair	el identificador de entrada ||| resource $link_identifier resource $result_identifier	count=1
function_name	alfabéticos convertidos a mayúsculas ||| mb strtoupper	count=1
function_name	se defina sobre las ||| construct	count=1
function_name	devuelve el ||| get state	count=1
arg_pair	una tabla ||| string $schema string $table-name	count=1
function_name	devuelve el nombre ||| fieldname	count=1
function_name	todas las cabeceras ||| nsapi request headers	count=1
function_name	de unión ||| set line join	count=1
namespace	de retorno apropiada ||| gearmanworker	count=1
function_name	elipse en ||| ellipse	count=1
function_name	importado ||| process	count=1
function_name	indica ||| default	count=1
function	[function_name_1] name0 ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	en una búsqueda ||| string $msgid2	count=1
return	obtiene el valor ||| mixed	count=2
function_name	el [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de espera de ||| query timeout	count=1
return	de enero ||| int	count=1
namespace	directorio ||| function	count=1
function_name	cursor en lugar de ||| cursor	count=1
arg_pair	imágenes usando un método ||| int $width int $height	count=1
arg_pair	leer información de una ||| resource $conn_identifier	count=1
function_name	documentos como este serán ||| set mlt min	count=1
namespace	error dado ||| function	count=1
function_name	de candidatas ||| fann get cascade	count=1
function_name	emitir advertencias ||| exceptions	count=1
return	perfiles del [return] contorneado ||| [return]	count=1
namespace	si el [namespace] es un ||| [namespace]	count=1
function_name	de la línea para ||| set line	count=1
namespace	socket especificado por ||| function	count=1
function_name	de capa ||| define layer	count=1
namespace	predeterminado ||| directory	count=1
arg_pair	server_key se puede ||| string $server_key	count=5
function_name	de cambio de candidatas ||| candidate	count=1
function_name	la ||| min	count=2
function_name	convierte un guid binario ||| guid string	count=1
arg_pair	de un assoc_array ||| array $assoc_array int $options	count=1
function_name	esta función devuelve ||| get	count=8
arg_pair	cubrid_schema() se usa para ||| resource $conn_identifier int $schema_type	count=1
function_name	adición ||| imagecolorallocatealpha	count=1
function_name	memcached::prepend() ||| prepend by	count=1
function_name	petción de recodificación request ||| recode string	count=1
function_name	reescritura establecidas previamente ||| rewrite	count=1
arg_pair	un [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=18
function_name	[function_name_1] campos del ||| [function_name_1] [function_name_2]	count=2
function_name	caracteres que necesitan ser ||| addslashes	count=1
namespace	más ||| sqlite3	count=1
function_name	caracteres ||| ltrim	count=1
arg_pair	y su asignación al ||| array $config	count=1
function_name	decodifica ||| mb decode	count=1
function_name	[function_name] de ||| [function_name]	count=34
namespace	el espacio de ||| domnode	count=1
function_name	algoritmos por bloques ||| block algorithm	count=2
function_name	true entonces ||| set	count=1
function_name	tipo de ||| column type	count=1
function_name	registrados disponibles en el ||| wrappers	count=1
function_name	información sobre el cliente ||| client info	count=1
function	las variables [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	pajar incluyendo ||| string $needle	count=1
function_name	obtiene el nombre de ||| get	count=2
function_name	la estructura de ||| fetchstructure	count=1
arg_pair	datagrama ||| string $errstr	count=1
namespace	mensajes especificada por ||| function	count=1
function_name	la que ||| min doc frequency	count=1
function	[function_name_1] línea discontinua ||| [function_name_1] resource $psdoc [arg_pair_2]	count=1
function_name	las palabras ||| doc	count=1
function_name	el color de ||| color	count=3
function_name	el número ||| set	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $psdoc [arg_pair_2]	count=1
function_name	de definición del disco ||| from file	count=2
arg_pair	[arg_pair] la ||| [arg_pair]	count=5
function_name	especifica el número de ||| set	count=1
arg_pair	en un archivo dest ||| string $dest	count=1
function_name	número de tendencias ||| bias array	count=1
arg_pair	llave keydata ||| string $keydata	count=1
function_name	documento mínima a ||| terms min count	count=2
function_name	flujo [function_name] ||| stream [function_name]	count=1
return	valor especial indicando error ||| void	count=1
return	comprobando errores en ||| bool	count=2
arg_pair	cuota de ||| resource $imap_stream string $quota_root	count=1
arg_pair	forma ||| string $password string $charset	count=1
function_name	la puesta de ||| date sunset	count=1
function_name	id definido ||| id	count=1
function_name	[function_name_1] ubicaciones ||| [function_name_1] get [function_name_2]	count=1
function_name	de conexión en caso ||| connect	count=1
arg_pair	una entrada un ||| string $key	count=1
function_name	segundo o subsiguiente ||| add types	count=1
arg_pair	de salto de string ||| bool $cut	count=1
arg_pair	datos cubrid y ||| resource $lob_identifier	count=1
function_name	indicando error cuando la ||| exceptions	count=1
function_name	tabla donde ||| table	count=1
function_name	devuelve el prefijo ||| get facet prefix	count=2
return	http en ||| array	count=1
function_name	geoip ||| geoip	count=4
function_name	[function_name_1] campos en ||| [function_name_2] [function_name_1]	count=2
arg_pair	la ||| int $filter	count=1
function_name	sobre las ||| construct	count=1
function_name	registrados disponibles en el ||| get wrappers	count=1
function_name	hace borrosa de ||| blur	count=1
arg_pair	pattern según las reglas ||| string $pattern int $flags	count=1
namespace	información sobre ||| function	count=2
function_name	los pares de sustitución ||| config save repl	count=1
function_name	global que ||| mysqlnd ms	count=1
function_name	devuelve los nombres de ||| get	count=1
arg_pair	algoritmo estándar ||| string $str	count=1
function_name	[function_name_1] las ||| [function_name_2] [function_name_1]	count=1
namespace	modificación de ||| function	count=1
return	que las ||| solrquery	count=1
function_name	devuelve el ||| broker get error	count=1
function_name	como este serán ||| min doc	count=1
function_name	el número de salidas ||| fann num output	count=1
function	datos especificados [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	stack es true de ||| string $stack	count=1
function_name	círculo con su ||| ps arc	count=1
arg_pair	fgets() ||| resource $handle	count=1
function_name	de prioridad de ||| base priority init	count=1
function_name	uid del ||| uid	count=1
function_name	el esquema es clickeado ||| destination	count=1
function_name	[function_name_1] ausente que ||| [function_name_2] [function_name_1]	count=3
function_name	acl para ||| getacl	count=1
function_name	nueva csr certificate ||| openssl csr new	count=2
function_name	blanco del tamaño especificado ||| imagecreate	count=1
function_name	dado y extrae cada ||| uudecode all	count=1
return	un valor especial indicando ||| void	count=1
function_name	un blob ||| blob echo	count=1
function_name	una fila en ||| ibase fetch object	count=2
function_name	mysql ||| mysql result	count=1
function_name	consulta a la ||| query	count=1
namespace	archivo mpeg ||| ktaglib_mpeg_audioproperties	count=5
function_name	consulta de la ||| query	count=1
function_name	de tendencias de cada ||| get bias array	count=1
function_name	por ||| min doc	count=1
arg_pair	x509cert proporcionado incluyendo ||| mixed $x509cert bool $shortnames	count=1
function_name	centrada ||| centered	count=1
function_name	elongamiento de la ||| font stretch	count=1
function_name	[function_name_1] especificada ||| [function_name_2] [function_name_1]	count=2
function_name	de atributo dado ||| set attribute	count=2
function_name	o subsiguiente fichero ||| types	count=1
function_name	nodename ||| get named	count=1
function_name	por la imagen ||| set image	count=1
function_name	información de errores y ||| sqlsrv errors	count=1
return	php ||| string	count=2
function_name	van a ||| start	count=1
function_name	disponibles después de llamarla ||| odbc data source	count=1
function_name	fragmentador de expresiones regulares ||| regex	count=1
return	actual de una entrada ||| int	count=1
function_name	la precisión de ||| precision	count=2
arg_pair	una nueva entrada ||| int $key int $value	count=1
function_name	solicitado que se ||| set	count=1
function_name	y muestra el resultado ||| display	count=1
arg_pair	archivo tar/zip al disco ||| string|array $files	count=1
namespace	unrar encuentre un ||| rarexception	count=1
function_name	la que las ||| doc	count=1
arg_pair	msql_fetch_row() ||| int $result_type	count=1
function_name	campos columnas [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	esta función ||| odbc data	count=1
arg_pair	usa para iterar ||| resource $stmt int $colnum	count=1
namespace	la imagen que ||| function	count=1
arg_pair	direcciones ||| zmqsocket $backend	count=1
arg_pair	el criterio y la ||| int $sortdirection	count=2
function_name	llamar cuando un ||| callback	count=1
arg_pair	función proporcionada por ||| int $num_output callable $user_function	count=1
function_name	blanco de la cromaticidad ||| image white	count=1
namespace	estándar ||| function	count=1
arg_pair	empezando por offset y ||| int $offset	count=1
function_name	calendario juliano ||| juliantojd	count=1
namespace	error que ocurrión ||| function	count=1
arg_pair	incrementa un valor numérico ||| int $expiry	count=1
function_name	sea truncado a exactamente ||| eio ftruncate	count=1
function_name	procesa una respuesta ||| command handle response	count=1
function_name	ncurses ||| ncurses start	count=1
function_name	que las palabras que ||| set mlt	count=1
function_name	que representa una notificación ||| notify	count=1
arg_pair	de needle y ||| string $haystack mixed $needle	count=1
function_name	filas [function_name_2] ||| [function_name_1] [function_name_2]	count=4
namespace	medido como ||| function	count=1
function_name	lugar de emitir advertencias ||| exceptions	count=1
function_name	nombre del [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	mensaje y socket. ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	contraseña para [arg_pair] ||| [arg_pair]	count=2
function_name	lo menos ||| set mlt min doc	count=1
arg_pair	get/post/cookie ||| string $types	count=1
namespace	html y php ||| function	count=1
function_name	afectadas por una ||| ifx affected	count=1
function_name	la descripción ||| cairo font face get	count=1
arg_pair	fgetss() intenta eliminar cualesquiera ||| int $length	count=1
function_name	la agrupación ||| server	count=1
function_name	cuando ||| set	count=1
arg_pair	bordes de ||| int $width	count=1
return	de instancia xml ||| sdo_das_xml_document	count=1
function_name	[function_name_1] tamaño y ||| [function_name_2] [function_name_1]	count=2
function_name	imap ||| imap	count=2
namespace	como el ||| function	count=1
function_name	disponible la lista ||| memory	count=1
function_name	función devuelve [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	id ||| by id	count=1
return	en [return] ||| [return]	count=4
function_name	tendencias de cada ||| get bias	count=1
function_name	control [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	de oracle [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	se ||| construct	count=1
function_name	la escena de la ||| scene	count=1
return	consulta en los búferes ||| bool	count=1
function_name	el ||| types	count=1
function_name	el tamaño de el ||| size	count=1
function	campo de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	el flujo imap dado ||| resource $imap_stream string $criteria	count=1
function_name	calendario juliano es desde ||| juliantojd	count=1
arg_pair	una ruta de ||| string $address	count=1
function_name	y devolver un valor ||| set using exceptions	count=1
namespace	interno ||| oci-lob	count=1
function_name	método devuelve una versión ||| to string	count=2
arg_pair	blanco y negro ||| float $blackpoint float $gamma	count=1
return	updates y deletes en ||| bool	count=1
arg_pair	dispositivos de ømq ||| zmqsocket $frontend	count=1
namespace	en ||| harufont	count=1
namespace	[namespace] corchetes ||| [namespace]	count=2
function_name	de flujo o ||| stream	count=1
arg_pair	pueda ser adquirido ||| bool $nowait	count=1
function_name	este serán ignoradas ||| doc	count=1
function_name	añade ||| multi add	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] train from callback [arg_pair_2]	count=7
namespace	en ||| serializable	count=1
function_name	la longitud ||| length	count=4
function_name	siguiente fila de una ||| fetch	count=1
arg_pair	de botón ||| int $x int $y	count=1
arg_pair	contenía el fichero dado ||| string $filename int $flags	count=1
function_name	conexión persistente al servidor ||| pconnect	count=1
function_name	[function_name_1] tarea y ||| [function_name_2] [function_name_1]	count=6
function_name	términos de [function_name_2] ||| [function_name_2] max num query [function_name_1]	count=1
function_name	esta función crea una ||| create processing	count=1
function_name	un ||| curl	count=1
return	tiempo máximo ||| int	count=1
arg_pair	de una archivo ||| resource $filehandle string $write_ver	count=1
return	encuentra disponible ||| int	count=1
namespace	previamente ||| oci-lob	count=1
arg_pair	rojo ||| int $r	count=1
arg_pair	función ||| gmp $a	count=1
arg_pair	de memcached::replace() ||| mixed $value int $expiration	count=1
arg_pair	estilo numérico para ||| int $first_page int $style	count=1
arg_pair	y un conjunto ||| resource $ann	count=1
namespace	u ||| function	count=1
function_name	si el argumento es ||| set using	count=1
return	direcciones servicios ||| zmqsocket	count=1
function_name	establece el grosor ||| imagesetthickness	count=1
function_name	que las palabras que ||| set mlt min	count=1
function_name	[function_name_1] recuperada ||| function array [function_name_2] [function_name_1]	count=4
function_name	una excepción de tipo ||| using	count=1
function_name	los colores ||| color set	count=1
return	valor del ||| mixed	count=2
function_name	devolverá el número total ||| total	count=1
function_name	false para cfb ||| mcrypt	count=1
function_name	[function_name] algoritmo ||| mcrypt module [function_name]	count=2
function_name	control de la ||| gupnp control point callback	count=1
function	tabla y [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	complemento de [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	de memcached::touch() con ||| touch	count=1
arg_pair	tener que usar mapreduce ||| array $pipeline	count=1
function_name	parámetro facet.date.hardend ||| facet date hard end	count=1
function_name	función geoip_domain_by_name() devolverá los ||| domain by	count=1
function_name	con unos ||| get elements by tag name ns	count=1
function_name	autocommit del recurso ||| db2 autocommit	count=1
function_name	tamaño comprimido ||| zip entry compressedsize	count=1
function_name	descripción de la función ||| cairo pdf surface create	count=1
arg_pair	un punto de código ||| mixed $codepoint	count=1
function_name	[function_name_1] contornea el ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] archivo de ||| [function_name_1] [arg_pair_2]	count=1
function_name	el número total ||| get total	count=1
function_name	descripción de ||| cairo pattern add color stop rgb	count=1
function_name	la descripción ||| cairo scaled font get font options	count=1
function_name	el próximo documento libxml ||| libxml set	count=1
function_name	la petición de recodificación ||| recode file	count=1
function_name	advertencia esta función ||| open memory image	count=1
function_name	consulta siguiente si ||| cubrid next	count=1
function_name	único sentido ||| password hash	count=1
function_name	generador de trozos de ||| set highlight fragmenter	count=1
function_name	analiza datos get/post/cookie y ||| parse	count=1
arg_pair	de ||| float $disp_time	count=3
arg_pair	valor ||| string $value int $flags	count=1
arg_pair	left y right ||| mixed $right	count=1
arg_pair	su punto medio enx ||| float $beta	count=2
function_name	[function_name_1] sujeto ||| [function_name_2] [function_name_1]	count=1
namespace	un ||| gmagick	count=1
arg_pair	transformar str1 en str2 ||| string $str2	count=1
arg_pair	uid dado ||| resource $imap_stream int $uid	count=1
arg_pair	name el cual ||| string $name	count=1
arg_pair	página ||| int $page	count=1
arg_pair	disponibles después de llamarla ||| resource $connection_id	count=1
function_name	[function_name] píxeles ||| [function_name]	count=1
function_name	un ||| prime	count=1
arg_pair	páginas ||| int $first_num string $prefix	count=1
function_name	si la ||| is	count=2
function_name	[function_name_1] objeto char ||| [function_name_1] [function_name_2]	count=2
function_name	extensión está cargada ||| extension loaded	count=2
arg_pair	el ||| resource $p	count=1
function_name	eventos de ||| event	count=1
function_name	arcocoseno para cada ||| trader acos	count=1
return	usuario especificado en el ||| bool	count=1
arg_pair	al archivo ||| string $filename	count=1
function_name	la publicación de un ||| get ap	count=1
arg_pair	al archivo ||| string $localname	count=1
arg_pair	es una función ||| string $column_key	count=1
function_name	transacciones xa ||| mysqlnd ms xa	count=2
namespace	debería estar entre ||| imagickpixel	count=1
arg_pair	en local_socket ||| string $local_socket	count=1
function_name	establece el ||| fann set cascade	count=2
function_name	del error de ||| step error	count=4
namespace	y php ||| function	count=1
function_name	array [function_name] ||| mysql fetch [function_name]	count=2
function_name	de una entrada de ||| entry	count=1
return	con barras invertidas antes ||| string	count=1
function_name	registra el nombre de ||| register	count=1
arg_pair	de una canal de ||| int $channel	count=1
namespace	iterador filesystem a ||| filesystemiterator	count=1
function_name	guarda los datos ||| save	count=1
function_name	datos informix ||| ifx	count=1
function_name	del cliente ||| client	count=1
function_name	generador ||| fragmenter	count=2
arg_pair	un método y una ||| string $method	count=1
function_name	true si ||| mcrypt module is	count=1
function_name	[function_name] más filas ||| [function_name] fetch	count=3
function_name	al nombre de sitio ||| by name	count=1
function_name	afectadas en ||| affected	count=1
function_name	[function_name_1] la versión ||| [function_name_2] [function_name_1]	count=4
function_name	ha sido ||| add types	count=1
function_name	lista con el nombre ||| list	count=1
function_name	escala de la columna ||| field scale	count=1
function_name	carp::cluck de perl ||| apd clunk	count=1
arg_pair	de un ||| resource $fdf_document	count=1
function_name	de previas operaciones ||| count entries	count=1
function_name	columna ||| db2 fetch	count=1
function_name	difieren más [function_name] límte de ||| [function_name] bit	count=1
function_name	una operación substr() ||| substr	count=1
function_name	bloque de asignación ||| block	count=1
function_name	pascua ||| easter date	count=1
return	del mensaje de error ||| int	count=1
function_name	[function_name_1] las posiciones ||| [function_name_2] [function_name_1]	count=1
namespace	el código de error ||| function	count=1
function_name	nombre de [function_name_2] ||| elements [function_name_2] [function_name_1]	count=1
function_name	descriptor de fichero ||| eio	count=1
namespace	hacer ||| zmqdevice	count=1
arg_pair	analizar ||| string $source	count=1
function_name	error de la operación ||| errno	count=1
namespace	acuerdo a ||| function	count=1
arg_pair	servidor número de puerto ||| int $port	count=1
function_name	color directo desde el ||| ps makespotcolor	count=1
arg_pair	dominio ||| string $domain string $directory	count=1
namespace	un mensaje de ||| function	count=1
function_name	informix ||| ifx	count=1
function_name	los tipos descritos ||| types	count=1
arg_pair	signcert ||| mixed $signcert	count=1
return	este método no afecta ||| int	count=1
arg_pair	número layer contando la ||| int $layer	count=3
function_name	[function_name_1] los hijos ||| [function_name_2] [function_name_1]	count=1
function_name	frecuencia ||| mlt	count=1
function_name	un espacio de nombres ||| namespace	count=1
function_name	que las palabras que ||| doc	count=1
function_name	opciones de la ||| assert options	count=1
arg_pair	un ||| resource $pdfdoc int $textflow	count=3
function	[function_name_1] relation al ||| [arg_pair_2] [function_name_1]	count=1
function_name	de activación para la ||| activation function	count=2
function_name	registro ||| record	count=2
function_name	valor especial ||| using	count=1
function_name	si es uno ||| mcrypt module is	count=1
function_name	una columna ||| db2 fetch	count=1
function_name	espacio de nombres ||| is default namespace	count=1
arg_pair	connection_string ||| string $connection_string int $connect_type	count=1
function_name	devuelve los comentarios de ||| get doc comment	count=1
function_name	región ||| country and region	count=2
return	si y sólo si ||| void	count=1
function_name	[function_name_1] de fondo ||| [function_name_2] [function_name_1]	count=4
function_name	fdf ||| fdf	count=3
arg_pair	dado por value al ||| string $value	count=1
function_name	código ||| curl	count=1
function_name	[function_name_1] en cascada ||| [function_name_2] [function_name_1]	count=8
function_name	sobre distribución de lecturas ||| get slave	count=1
function_name	campo [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	si solrquery::sethighlightalternatefield() se ||| int $fieldlength string $field_override	count=1
return	perfiles del ||| float	count=1
return	u ||| string	count=1
function_name	el tipo de dato ||| field type	count=1
arg_pair	reconstruida y ||| int $metric	count=1
function_name	de excepciones anterior ||| exception handler	count=1
function_name	devuelve un arreglo ||| db2 fetch array	count=1
function_name	[function_name_1] [function_name_2] un ||| [function_name_2] [function_name_1]	count=3
return	una cadena de un ||| string	count=1
arg_pair	sistema de ||| resource $p	count=1
namespace	que contiene ||| function	count=14
function_name	encuentra disponible la ||| open	count=1
function_name	el elongamiento de la ||| font stretch	count=1
namespace	[namespace] implosionados ||| [namespace]	count=3
function_name	la contraseña del ||| password change	count=1
function_name	del ||| ltrim	count=1
arg_pair	sobre las capas ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	de mensaje y socket. ||| zmqdevice	count=1
function_name	el calendario juliano ||| juliantojd	count=1
arg_pair	de éxito cero en ||| string $zurl mixed $options	count=1
function_name	inicia la definición ||| begin	count=1
function_name	[function_name_1] en particular ||| [function_name_2] [function_name_1]	count=5
arg_pair	la función cubrid_put() se ||| mixed $value	count=1
arg_pair	dado ||| string $ns	count=1
namespace	integer para usarlo por ||| function	count=1
function_name	asigna ||| assign	count=2
function_name	de página ||| image page	count=1
arg_pair	prepara el evento que ||| resource $event	count=1
namespace	objeto grande ||| oci-lob	count=5
function_name	descripción de ||| cairo font	count=1
function_name	devuelve la longitud de ||| length	count=1
return	desde una ||| string	count=2
arg_pair	una tabla especificada ||| resource $connection string $table_name	count=1
function_name	de servidores de trabajos ||| servers	count=1
return	una única función de ||| void	count=1
function_name	nuevo id ||| create sid	count=1
arg_pair	cipher / mode ||| string $cipher string $mode	count=1
function_name	al entrenamiento continuar ||| fann get cascade	count=1
function_name	del manejador de instrucciones ||| set processing instruction handler	count=1
arg_pair	un string str ||| string $token	count=1
function_name	[function_name_1] preparada anterioremente ||| [function_name_2] [function_name_1]	count=1
function_name	nivel mínimo de severidad ||| sybase min message severity	count=1
function_name	el tamaño y ||| size	count=1
return	al comando ||| mongocursor	count=1
namespace	excepto que fgetss() intenta ||| function	count=1
arg_pair	comporta ||| string $password	count=1
function_name	la ||| open memory image	count=2
arg_pair	destinatarios cc y ||| string $cc	count=1
function_name	guardar la información ||| save	count=1
function_name	datos abiertos ||| dba list	count=1
function_name	establece [function_name_2] ||| [function_name_1] quickprop [function_name_2]	count=1
function_name	la supervisión del servicio ||| service ctrl dispatcher	count=1
return	el socket. ||| int	count=1
function_name	línea ||| line width	count=2
function_name	tipo de dato ||| field type	count=1
namespace	tantos documentos como ||| solrquery	count=1
function_name	id de [function_name_2] ||| [function_name_2] insert [function_name_1]	count=2
namespace	des de unix o ||| function	count=1
namespace	atributo ||| hw_api_object	count=1
function_name	las flags ||| preg flags	count=1
return	directorio ||| string	count=1
arg_pair	archivo remoto desde el ||| string $remote_file int $mode	count=2
function_name	esta función ||| memory image	count=1
function_name	tantos documentos como este ||| min doc	count=1
function_name	parche binario desde ||| xdiff	count=1
namespace	integer que contiene ||| function	count=1
function_name	de la imagen ||| interlace	count=1
arg_pair	datos almacenados en ||| bool $summaryonly string $key	count=1
function_name	publicación de un ||| get ap	count=1
arg_pair	termina de ||| resource $fam_monitor	count=1
function_name	diferencia de strcmp() ||| strcoll	count=1
arg_pair	bordes ||| int $x int $y	count=1
function_name	dígito específico en ||| for digit	count=1
function_name	virtual actual donde se ||| dbplus chdir	count=1
namespace	devuelve el número ||| function	count=1
arg_pair	codificación to_encoding ||| string $to_encoding	count=1
function_name	contenido del xml a ||| xml	count=1
function_name	formato utf-32 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] de cadena ||| [function_name_1] resource $p [arg_pair_2]	count=1
function_name	elimina una variable ||| remove	count=1
function_name	entrenadas las conexiones de ||| fann get cascade	count=1
function_name	un archivo ||| mailparse	count=1
function_name	el propietario del fichero ||| eio fchown	count=1
arg_pair	llamar una función ||| traversable $iterator callable $function	count=1
function_name	[function_name_1] global rrd ||| [function_name_2] [function_name_1]	count=2
function_name	de la tarea ||| do	count=1
arg_pair	fichero a un ||| string $filename	count=1
function_name	permite [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	función mssql_free_statement() ||| free statement	count=1
namespace	escribe ||| splfileobject	count=1
arg_pair	de memcached::replace() con la ||| mixed $value int $expiration	count=1
return	sido creado con el ||| void	count=1
function_name	el interletraje («kerning») del ||| kerning	count=1
function_name	la prueba ||| gmp prob prime	count=1
function_name	logo de php usando ||| php logo	count=1
return	nodo especificado ||| domnode	count=1
arg_pair	un documento pdf diferente ||| resource $fdf_document	count=1
return	actual ctm en ||| bool	count=1
function_name	formulario [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	una nueva ||| float $xstep	count=1
namespace	se encuentra disponible la ||| function	count=5
function_name	frecuencia en la que ||| mlt	count=1
function_name	esta función crea ||| create attribute	count=1
function_name	función glob() de la ||| glob	count=1
function_name	[function_name] conjunto ||| [function_name]	count=3
arg_pair	las retrollamadas se ||| array $patterns_and_callbacks mixed $subject	count=1
function_name	devuelve el ||| get iterator	count=1
function_name	línea del punto ||| line	count=1
arg_pair	un directorio con ||| string $path	count=1
function_name	la descripción de ||| cairo scaled font get font	count=3
arg_pair	en ||| array $values	count=1
arg_pair	cualquier ||| zmqsocket $backend	count=1
arg_pair	que cualquier otra llamada ||| mixed $data	count=1
function_name	tipo de byte en ||| get byte type	count=1
arg_pair	el servidor ftp ||| string $remote_file	count=2
function_name	el cambio del ||| get	count=1
namespace	creación e iteración ||| mongocursorinterface	count=1
function_name	[function_name_1] excepción indicada ||| [function_name_1] [function_name_2]	count=1
return	devuelve ||| void	count=1
function_name	ser codificados por utf-8 ||| utf8 decode	count=1
function_name	crea ||| pdf create annotation	count=2
function_name	por lo menos tantos ||| mlt min doc frequency	count=1
function_name	direcciones servicios colas ||| construct	count=1
arg_pair	un conjunto ||| resource $ann	count=1
function_name	devuelve el tamaño actual ||| filesize	count=1
function_name	de una estructura ||| fann	count=1
function_name	a ||| user	count=1
function_name	de activación de ||| activation	count=1
namespace	llamada a imap_alerts() o ||| function	count=1
function_name	[function_name_1] máximo ||| [function_name_1] cascade [function_name_2]	count=1
arg_pair	función va aquí ||| cairomatrix $matrix float $radians	count=1
arg_pair	el archivo en una ||| string $filename	count=1
function_name	petición http en la ||| nsapi request	count=1
function_name	[function_name_1] [function_name_2] local buscado ||| elements [function_name_2] [function_name_1]	count=7
arg_pair	[arg_pair_1] bcc ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	false para cfb y ||| mcrypt	count=1
arg_pair	volcado ||| string $dump_directory	count=2
arg_pair	stream ||| resource $stream	count=2
function_name	actualiza el contenido ||| ifx update	count=1
arg_pair	proporcionado que debería ||| int $color float $value	count=1
arg_pair	[arg_pair] línea ||| [arg_pair]	count=2
namespace	[namespace] la ||| [namespace]	count=26
arg_pair	xml desde ||| string $filename int $options	count=1
function_name	[function_name_1] filas afectadas ||| [function_name_1] [function_name_2]	count=1
function_name	existe y es legible ||| is readable	count=1
return	de la ||| void	count=2
function	una [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=2
function_name	memcached::touch() con la excepción ||| touch by	count=1
function_name	el número de filas ||| start	count=1
function_name	facet.date.start ||| set facet date start	count=1
namespace	excepción de tipo ||| rarexception	count=1
return	primer plano ||| int	count=1
return	al estado del ||| int	count=1
arg_pair	valor ||| mixed $bordercolor	count=2
function_name	devuelve el número de ||| sybase num	count=1
function_name	codificación de caracteres ||| encoding	count=2
function_name	árbol de casillas ||| newt checkbox tree	count=1
function_name	tamaño asociado ||| size	count=1
function_name	en el archivo paradox ||| px	count=1
function_name	esta función crea una ||| create entity reference	count=1
function_name	[function_name_1] lee ||| [function_name_1] [function_name_2] resource $fd	count=3
function_name	nombre corto ||| get frame short name	count=1
function_name	xhprof de la ejecución ||| xhprof	count=1
arg_pair	de un índice de ||| int $index imagickpixel $color	count=1
function_name	se encuentra disponible ||| ps open memory image	count=1
function_name	de rutinas de interoperabilidad ||| create default stub	count=1
function_name	de reescritura establecidas ||| reset rewrite	count=1
arg_pair	del acs ||| string $machine	count=1
arg_pair	devuelve una matriz asociativa ||| string $format string $date	count=1
function_name	módulos definidos en ||| modules	count=1
arg_pair	timestamp y ubicación ||| int $timestamp int $format	count=2
namespace	objeto imagickpixel como ||| imagickpixel	count=2
function_name	descenso vertical ||| get descent	count=1
arg_pair	eliminar ||| int $length	count=1
arg_pair	suma left a right ||| mixed $right	count=1
arg_pair	la columna especificada del ||| resource $stmt mixed $column	count=1
function_name	imagen ||| function image	count=1
return	con ||| resource	count=2
arg_pair	ya está ||| int $code_page	count=1
function	la intersección [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	espacio de nombres ||| default namespace	count=1
arg_pair	el uid ||| resource $imap_stream int $uid	count=1
function_name	devuelve la ||| by country	count=1
function_name	colores ||| ncurses	count=1
function_name	lista las tablas en ||| msql list tables	count=1
function_name	número total ||| total	count=2
return	se ||| void	count=1
arg_pair	y su asignación al ||| resource $id array $config	count=1
function_name	flujo o ||| stream socket	count=1
function_name	escapa un ||| pg escape	count=1
function_name	clase iterador ||| set iterator class	count=2
function_name	lee el contenido del ||| read	count=1
function_name	cubrid_error_code() ||| code	count=1
function_name	y fclose() sucesivamente ||| file put contents	count=1
function_name	ha ||| add types	count=2
function_name	parámetro variádico ||| variadic	count=1
function_name	escala de ||| db2 field scale	count=1
function_name	de campos ||| fetch field	count=1
arg_pair	las capas de ||| zmqsocket $backend	count=1
arg_pair	se comporta ||| string $password	count=1
function_name	un repositorio indicado ||| svn cat	count=1
function	[function_name_1] clientes en ||| [arg_pair_2] [function_name_1]	count=1
namespace	verisón serializada del ||| quickhashstringinthash	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] set [function_name_1]	count=4
namespace	solicitud actual ||| function	count=1
return	en el final ||| bool	count=1
function_name	sobre un socket ||| stream socket	count=1
arg_pair	de una tabla especificada ||| string $table_name	count=1
namespace	utilizando el ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] class name [arg_pair_2]	count=1
return	los parámetros ||| array	count=2
function_name	solicitudes ||| sslchecks	count=1
namespace	o post o pasado ||| function	count=1
return	la biblioteca unrar ||| void	count=1
arg_pair	php var_array al parámetro ||| array $var_array int $max_table_length	count=1
arg_pair	la función callback ||| callable $callback	count=4
function_name	para que ||| add kernel	count=1
function_name	bajo la cual las ||| min	count=1
function_name	retorna el tipo ||| type	count=1
function_name	la consulta siguiente si ||| next	count=1
return	un mensaje de ||| string	count=1
function	borra [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	documentos como este serán ||| doc	count=1
function_name	guardará los pares de ||| save repl	count=1
function	[function_name_1] de texto ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=3
function_name	la remarcación ||| highlight highlight	count=1
function_name	nombre de [function_name_2] ||| elements by [function_name_2] [function_name_1]	count=4
function_name	la imagen ||| set image	count=2
function_name	azul de la cromaticidad ||| blue	count=2
arg_pair	última transferencia ||| int $opt	count=1
function_name	de una declaración ||| decl	count=1
arg_pair	final del haystack pajar ||| string $haystack	count=1
return	entero y el ||| array	count=1
function_name	descripción de la función ||| cairo pattern get radial	count=1
arg_pair	la directiva whence ||| int $pri	count=1
function_name	pincel ||| imagesetbrush	count=1
function_name	cursor asociado al ||| result seek	count=1
arg_pair	en formato csv y ||| string $delimiter string $enclosure	count=1
function_name	forzar a la copia ||| cast	count=1
namespace	o su área de ||| function	count=1
function_name	de campos en ||| fields	count=2
function_name	lote de objetos ||| batch size	count=2
function_name	closes a large object ||| pg lo close	count=1
arg_pair	valores en assoc_array ||| array $assoc_array int $options	count=1
namespace	primer plano ||| function	count=1
return	recupera ||| yaf_application	count=1
function_name	de sisitema de ||| stream wrapper	count=1
function	abre [arg_pair_2] ||| [function_name_1] ccitt [arg_pair_2]	count=2
function_name	capa ||| layer	count=2
namespace	a función devolviendo ||| pdo	count=1
namespace	el proveedor ||| oauthprovider	count=1
function_name	en lugar de emitir ||| set using exceptions	count=1
function_name	la lista de ||| source	count=1
function_name	la función dio_read() lee ||| dio read	count=1
namespace	se dibuja ||| function	count=1
function_name	número ||| start	count=1
function_name	advertencias y devolver ||| using	count=1
function_name	[function_name_1] [function_name_2] para abrir un diccionario ||| [function_name_2] [function_name_1]	count=1
arg_pair	usando un método de ||| int $height	count=1
arg_pair	busca en subject coincidencias ||| mixed $subject	count=1
function	para ordenar [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	averigua si ||| is registered	count=2
function_name	los parámetros y ||| get params	count=1
function	las [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	una única función de ||| imagickkernel	count=1
function_name	apariencia de ||| set	count=1
function_name	trozos remarcados a ||| highlight snippets	count=1
namespace	la apariencia de la ||| harudestination	count=1
function_name	csr dada ||| csr	count=1
function_name	al método connect ||| connect	count=1
arg_pair	implementa la class dada ||| mixed $class bool $autoload	count=1
return	pdf resultante definido en ||| bool	count=1
return	blanco u otros caracteres ||| string	count=1
arg_pair	la última ocurrencia de ||| string $haystack	count=1
function_name	clave dada por ||| by key	count=1
return	array que ||| array	count=2
namespace	posición ||| splfileobject	count=1
function_name	[function_name_1] las ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] una definición ||| [function_name_1] [arg_pair_2]	count=1
function_name	comentario de una ||| comment index	count=1
function_name	espacio de nombres especificado ||| default namespace	count=1
return	bordes ||| void	count=1
function_name	[function_name_1] la excepción ||| [function_name_1] [function_name_2]	count=1
arg_pair	el punto x2 y2 ||| float $y2	count=1
function_name	dado y extrae cada ||| mailparse uudecode all	count=1
function_name	para acomodar la expresión ||| highlight	count=1
function_name	cierra ||| close	count=8
function_name	[function_name_1] [function_name_2] ||| [function_name_2] ngvalidate [function_name_1]	count=2
function_name	blob en modo ||| ibase blob echo	count=1
arg_pair	un mensaje log ||| string $message	count=1
function_name	por clave manteniendo ||| ksort	count=2
namespace	servidor que está ||| function	count=1
arg_pair	una tarea de ||| string $unique	count=3
arg_pair	los efectos de ||| int $effect	count=1
function_name	datos paradox que se ||| px	count=1
function_name	[function_name_1] el nombre ||| [function_name_1] extension [function_name_2]	count=2
function_name	ssl para ||| sslchecks	count=1
function_name	establece la zona horaria ||| default timezone set	count=1
function_name	archivo dado y ||| all	count=1
arg_pair	información sobre [arg_pair] ||| [arg_pair]	count=2
function_name	tridimensional ||| raiseimage	count=1
return	archivo codificado ||| array	count=1
function_name	el semáforo ||| sem acquire	count=1
function_name	de llamarla varias ||| odbc data	count=1
namespace	a una combinación ||| function	count=1
arg_pair	el intérprete ||| resource $parser callable $handler	count=4
arg_pair	[arg_pair_1] rectangular ||| [arg_pair_2] float $ury [arg_pair_1]	count=1
arg_pair	decir el valor de ||| string $filename	count=1
function_name	la descripción de la ||| cairo svg version to	count=1
arg_pair	fgets() excepto ||| resource $handle	count=1
function_name	string de bytes ||| generate token	count=1
return	arbitraria en el documento ||| bool	count=1
namespace	todos lo buzones que ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| function float [function_name_1] [function_name_2] resource $pdfdoc int $font	count=2
function_name	tamaño de paso ||| get rprop delta	count=2
function_name	las solicitudes ||| set sslchecks	count=1
namespace	crea un efecto de ||| gmagick	count=1
return	abstracción ||| zmqsocket	count=1
arg_pair	cuenta el ||| int $index_start	count=1
function_name	[function_name_1] curl ||| [function_name_2] [function_name_1]	count=8
namespace	sistema de archivos que ||| function	count=1
function_name	lo menos tantos ||| mlt	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] rprop increase [function_name_2]	count=4
function_name	logaritmo natural ||| ln	count=1
function_name	o de «espacio horizontal» ||| isblank	count=1
arg_pair	información almacenada de una ||| string $filename array $tag	count=1
function_name	das ||| add	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=18
function	[function_name_1] por data ||| [arg_pair_2] [function_name_1]	count=4
function	[function_name_1] [arg_pair_2] confirmación automática ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=7
return	especificado comprobando errores en ||| bool	count=2
arg_pair	un documento xml desde ||| string $filename int $options	count=1
function_name	[function_name_1] datos clob ||| [function_name_2] [function_name_1]	count=1
function_name	devuelve la ||| get data	count=1
namespace	cuando se anota ||| gmagickdraw	count=1
return	de la imagen original ||| gmagick	count=1
arg_pair	el calendario calendar especificado ||| int $calendar	count=1
function_name	de rutinas de interoperabilidad ||| default stub	count=1
function_name	escribe la parte ||| write	count=1
arg_pair	las funciones socket_create() ||| int $length	count=1
namespace	último error que ocurrión ||| function	count=1
return	único elemento en un ||| bool	count=1
function_name	lista personal ||| personal	count=1
function_name	disponibles ||| odbc	count=1
function_name	la contraseña ||| oci password change	count=1
function_name	de un repositorio indicado ||| svn	count=1
return	para ||| string	count=3
function_name	la frecuencia ||| mlt	count=1
function_name	de mysql ||| mysql	count=1
namespace	núcleo («kernel») ||| imagickkernel	count=1
function_name	[function_name_1] frecuencia bajo ||| [function_name_1] mlt [function_name_2]	count=1
function_name	última modificación de ||| mdtm	count=1
function_name	pendiente ||| steepness	count=1
function_name	funciones de sisitema de ||| wrapper register	count=1
function_name	iterador del resultado key() ||| key	count=1
function_name	tie breaker ||| tie	count=1
function_name	base ||| drop db	count=1
function_name	se ||| open	count=1
return	del ||| int	count=15
arg_pair	parámetro charlist ||| string $str string $charlist	count=1
arg_pair	imagen png desde ||| int $quality int $filters	count=1
return	el algoritmo estándar ||| string	count=1
function_name	nuevo objeto ||| modify	count=1
function_name	previa de la ||| prev	count=1
arg_pair	de volcado ||| int $debug_level string $dump_directory	count=1
function_name	filas afectadas por ||| fbsql affected rows	count=2
arg_pair	de needle [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	un proceso abierto mediante ||| get	count=1
function_name	un proceso ||| get	count=1
function_name	[function_name_1] de umbral ||| [function_name_2] [function_name_1]	count=8
arg_pair	y establece variables globales ||| string $encoded_string array $result	count=1
function_name	vincular el array ||| bind array by	count=1
function_name	[function_name_1] la caché ||| [function_name_1] [function_name_2]	count=1
return	almacenamiento en dicha ||| bool	count=1
namespace	con el [namespace] ||| [namespace]	count=1
namespace	de la ||| gmagick	count=8
function	[function_name_1] un valor ||| [function_name_1] [arg_pair_2]	count=1
function_name	secuencia de mensaje para ||| msgno	count=1
function_name	entonces en ||| exceptions	count=1
namespace	oauth basada ||| oauth	count=1
arg_pair	una ||| resource $result	count=2
arg_pair	en ||| bool $before_needle string $encoding	count=1
function_name	un carácter de control ||| iscntrl	count=1
function_name	la porción de ||| mb strrchr	count=2
function_name	de ||| entry	count=2
function	[function_name_1] array ||| [arg_pair_2] [function_name_1]	count=1
return	array después ||| void	count=1
namespace	de ||| imagick	count=1
function_name	analiza datos get/post/cookie y ||| mb parse str	count=1
function_name	campo en particular ||| field match	count=1
function_name	comentario a ||| comment	count=1
function_name	de widrow + nguyen ||| fann init weights	count=1
arg_pair	array1 que no estén ||| array $array2	count=1
namespace	es true ||| rarexception	count=1
function_name	certificado asociado ||| openssl x509	count=1
arg_pair	plural ||| string $msgid1 string $msgid2	count=1
arg_pair	nombre variable_name ||| resource $introspection string $variable_name	count=1
arg_pair	entre old_file y new_file ||| string $old_file string $new_file	count=1
function_name	de [function_name_2] ||| [function_name_2] [function_name_1]	count=28
function	notifica a [arg_pair_2] ||| [function_name_1] resource $service [arg_pair_2]	count=3
namespace	y ||| gearmanworker	count=1
function_name	línea de base ||| get	count=1
return	la regla ||| bool	count=1
arg_pair	una ||| string $name int $flags	count=1
arg_pair	conexión al servidor ||| mysqlnd_connection $connection string $host	count=1
return	en el ||| bool	count=39
arg_pair	que representa una fila ||| int $row_number	count=1
function_name	elimina ||| spl autoload unregister	count=1
function_name	eventos ||| event	count=3
function_name	configura las marcas para ||| buffer watermark set	count=1
function_name	nueva csr certificate signing ||| csr new	count=1
namespace	que puedan estar ||| function	count=1
arg_pair	fichero a ||| string $filename	count=1
function_name	calcula el seno para ||| asin	count=1
function_name	cambiar el ecm ||| output stagnation	count=1
function_name	dos ||| sybase	count=1
function_name	lo menos tantos documentos ||| doc frequency	count=1
arg_pair	otra llamada ||| mixed $data	count=1
namespace	a un hash ||| quickhashstringinthash	count=1
function_name	archivo codificado mediante uuencode ||| uudecode	count=1
arg_pair	llave keydata y ||| resource $identifier string $keydata	count=1
function_name	es usada para establecer ||| set	count=1
function_name	pedido ||| yp order	count=2
return	sin ||| string	count=1
arg_pair	valor de retorno ||| mixed $value	count=1
function_name	el objeto ||| object	count=1
arg_pair	dsn disponibles después de ||| resource $connection_id	count=1
function_name	cubrid_col_size() se usa para ||| cubrid col size	count=1
function_name	la pendiente ||| steepness	count=1
function_name	disponible la lista de ||| memory image	count=1
arg_pair	a menudo ||| int $dev	count=1
function_name	y escribe ||| bcompiler write	count=1
return	igual que closedir() solo ||| void	count=1
arg_pair	de req_handle por el ||| resource $req_identifier	count=1
function_name	mensaje ||| curl strerror	count=2
function_name	índice de la ||| iterator index	count=1
function_name	región de ||| region	count=1
function_name	se usa ||| cubrid error	count=1
namespace	búfer ||| splfileobject	count=1
function_name	de ||| entry filesize	count=4
arg_pair	b negro ||| float $b	count=1
function_name	el formateador de ||| highlight formatter	count=1
arg_pair	un formato predefinido ||| int $size int $direction	count=1
function_name	similar a fbsql_fetch_array() con ||| fbsql fetch	count=1
return	el número del ||| int	count=1
function_name	e indexa numéricamente ||| values	count=1
arg_pair	con pub_key_id ||| mixed $signature_alg	count=1
arg_pair	cubrid_schema() se usa ||| int $schema_type	count=1
namespace	de texto ||| function	count=1
function_name	número de tendencias de ||| get bias array	count=1
arg_pair	el parámetro flatness ||| resource $pdfdoc float $flatness	count=1
namespace	obtiene el ||| harufont	count=2
function_name	el código de ||| strerror	count=1
function_name	[function_name_1] está cargada ||| [function_name_1] [function_name_2]	count=4
return	especificado como es ||| mixed	count=1
function_name	devuelve la extensión de ||| image type to extension	count=1
return	obtiene el tipo ||| int	count=1
function_name	cliente usado por ||| client	count=1
arg_pair	bits ||| mixed $right	count=2
return	comprueba la información ||| object	count=1
function_name	tipo ||| get type	count=2
arg_pair	datos y los ||| string $data string $mode	count=1
function_name	flujos ||| stream get	count=1
function_name	donde ||| auth	count=1
arg_pair	a sybase_connect() ||| string $servername string $username	count=1
function_name	de la fila recuperada ||| sqlsrv fetch object	count=1
function_name	el número de ||| count	count=1
return	domnodelist con todos los ||| domnodelist	count=1
function_name	índice del campo ||| field	count=1
function_name	las cabeceras de petición ||| request headers	count=1
arg_pair	cuota ||| resource $imap_stream string $quota_root	count=1
return	la lista ||| array	count=1
function_name	botón tridimensional simulado ||| raiseimage	count=1
namespace	actual ||| yaf_controller_abstract	count=1
function_name	de secuencia de ||| imap msgno	count=1
function_name	comprobación de ||| crack	count=1
function_name	eventos de lectura ||| event buffer	count=1
namespace	caracteres del ||| function	count=1
return	carga ||| void	count=1
function_name	establece la apariencia ||| set	count=1
arg_pair	a sybase_connect() con ||| string $charset	count=1
namespace	devolverá la lista de ||| function	count=1
function	escribe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	virtual actual ||| dbplus chdir	count=1
function_name	el número máximo de ||| cascade max	count=1
arg_pair	conexión al servidor mysql ||| string $host	count=1
function_name	importe acrobat [function_name] los scripts ||| fdf [function_name] doc	count=1
function_name	recupera ||| item	count=1
function_name	restaura ||| restore	count=2
namespace	usuario ||| arrayiterator	count=2
function_name	establece ||| mysqlnd ms set qos	count=2
function_name	de nombres especificado ||| is default	count=1
function_name	último código de ||| return code	count=1
return	del tanto ||| int	count=2
function_name	especificado por buzon ||| createmailbox	count=1
namespace	una única función ||| imagickkernel	count=1
function_name	categoría de la ||| flatness	count=1
function_name	cada capa de la ||| get layer array	count=1
function_name	el acl para un ||| getacl	count=1
function_name	de esquema en un ||| add types	count=1
function_name	alta prioridad [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] un array ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] left con ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	el result ||| int $index	count=1
function_name	hacer de ||| construct	count=1
function_name	devolver un valor especial ||| using	count=1
arg_pair	un caracter de salto ||| string $break bool $cut	count=1
function_name	un campo ||| odbc field	count=1
function_name	[function_name_1] el rango ||| [function_name_1] image channel [function_name_2]	count=1
function_name	xml ||| add types	count=2
return	xml dada ||| sdo_das_xml_document	count=1
function_name	dsn disponibles después de ||| odbc data	count=1
function_name	para que la clave ||| get multi by key	count=1
namespace	[namespace] emplea para ||| [namespace]	count=3
function_name	[function_name_1] épocas permitido ||| [function_name_2] [function_name_1]	count=2
function_name	borrar un servicio ||| delete	count=1
return	comando de ||| mongocursor	count=1
function_name	función ||| prime	count=1
function_name	[function_name] en ||| get [function_name]	count=5
function_name	está definida o ||| in	count=1
arg_pair	el calendario calendar ||| int $calendar	count=1
arg_pair	propiedades correspondientes a los ||| array $ctorparams	count=1
arg_pair	a una página del ||| int $page	count=1
namespace	que se dejó ||| function	count=1
function_name	un caracter de escape ||| escape	count=1
arg_pair	capas ||| zmqsocket $backend	count=1
function_name	la que las ||| set mlt min doc frequency	count=1
function_name	para convertir ||| convert to data	count=1
arg_pair	número es ||| gmp $a	count=1
function_name	[function_name] una ||| [function_name] write	count=3
function_name	[function_name_1] [function_name_2] de el ||| [function_name_1] [function_name_2]	count=4
function_name	dado ||| all	count=1
return	instancia xml ||| sdo_das_xml_document	count=1
function_name	o ||| number format	count=2
arg_pair	offset especificado ||| int $offset int $initial_value	count=1
arg_pair	parámetro stack es ||| string $offset	count=1
function	tabla [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
function_name	el número de campos ||| sybase num fields	count=1
function_name	base de ||| dbase	count=1
function_name	de campos ||| field	count=2
return	dentro de un ||| int	count=1
function	blanco retirados [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	con ||| string $password string $charset	count=1
arg_pair	estilo numérico para el ||| int $style	count=1
arg_pair	copia de todos ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	el estado de ||| status	count=1
arg_pair	[arg_pair_1] con los ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	error callback ||| error callback	count=1
function_name	true si el ||| module is	count=1
return	documentos ||| solrquery	count=1
namespace	es un factor por ||| function	count=1
function_name	[function_name_1] factor de ||| [function_name_2] [function_name_1]	count=1
function_name	la descripción de ||| cairo pattern get surface	count=1
arg_pair	excepción de que server_key ||| array $keys	count=1
function_name	obtiene el servicio ||| get service	count=1
arg_pair	botón tridimensional ||| int $height	count=1
namespace	lo menos tantos ||| solrquery	count=1
namespace	una cadena [namespace] contiene ||| [namespace]	count=1
function_name	actualiza ||| update	count=5
function_name	los pares ||| repl	count=1
function	guarda los [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	modo ||| int $pri	count=1
arg_pair	desde ||| string $content string $mimetype	count=1
function_name	la función usa ||| prob prime	count=1
return	la sentencia sql ||| int	count=1
function_name	ancho ||| stringwidth	count=1
arg_pair	un fichero ||| string $filename int $size	count=1
function_name	intersección ||| uintersect	count=2
function_name	contra las keys ||| ukey	count=1
function_name	atributos y ||| attributes	count=1
function_name	establece una ||| newt set	count=1
function_name	otro núcleo («kernel») ||| add	count=1
namespace	de intermediarios de ||| zmqdevice	count=1
function_name	carga un ||| types	count=1
function_name	tangente ||| tan	count=1
namespace	por sqlsrv_begin_transaction() ||| function	count=1
return	el algoritmo estándar basado ||| string	count=1
arg_pair	[arg_pair_1] tiempo ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	ruta en la ||| string $path	count=1
return	lee ||| array	count=1
arg_pair	de estilo ||| int $type float $disp_time	count=1
function_name	geoip_domain_by_name() devolverá los ||| domain	count=1
function_name	advertencias ||| using exceptions	count=2
namespace	emitir advertencias y ||| rarexception	count=1
arg_pair	socket. ||| zmqsocket $backend	count=1
return	en el ||| string	count=2
function_name	devuelve el último error ||| get error	count=2
arg_pair	usa ||| gmp $a	count=1
function_name	lista de parámetros ||| ps open memory	count=1
function_name	de resumen disponibles ||| md	count=1
function_name	metadata de los campos ||| field metadata	count=1
arg_pair	un ||| float $beta int $channel	count=1
function_name	cursor del ||| cursor	count=1
function	[function_name_1] proporcionado ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	primo ||| gmp $a	count=1
function_name	y socket. ||| construct	count=1
function_name	puedan aplicarse a ||| add kernel	count=1
arg_pair	una interfaz ||| string $collection	count=1
arg_pair	los valores de array1 ||| array $array1	count=1
arg_pair	la función cubrid_set_query_timeout() ||| resource $req_identifier int $timeout	count=1
function_name	el límite del recurso ||| resource limit	count=1
arg_pair	de dicho elemento ||| mixed $entry integer $type	count=1
namespace	por el puntero dado ||| function	count=1
arg_pair	de caracteres desde un ||| resource $font_index string $encodingfile	count=1
arg_pair	inspecciona un ||| resource $id	count=1
function_name	error una ||| set using exceptions	count=1
arg_pair	cubrid_set_add() ||| string $set_element	count=1
function_name	la retrollamada del temporizador ||| timer	count=1
function_name	[function_name_1] máximo de ||| [function_name_2] [function_name_1]	count=3
function_name	descripción de ||| cairo pattern get filter	count=1
arg_pair	str de acuerdo ||| string $str	count=1
function_name	escape de caracteres especiales ||| escape	count=1
function_name	de relleno ||| gray fill	count=1
namespace	fichero de esquema en ||| sdo_das_xml	count=1
function_name	[function_name_1] pascua para ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] del atributo ||| [function_name_2] [function_name_1]	count=3
function_name	supervisión del servicio y ||| start service ctrl dispatcher	count=1
function_name	[function_name_1] modo especificado ||| [function_name_2] [function_name_1]	count=3
arg_pair	blanco y negro especificados ||| float $blackpoint	count=1
return	invertidas ||| string	count=1
function_name	descripción de ||| cairo ps level to string	count=1
function_name	[function_name] campo dado ||| fdf [function_name] field	count=3
arg_pair	miller-rabin para revisar si ||| gmp $a int $reps	count=1
function_name	trozos remarcados para ||| set highlight	count=2
function_name	strftime() excepto que ||| gmstrftime	count=1
return	que determina ||| bool	count=1
function_name	el tamaño actual ||| entry filesize	count=1
function_name	encabezados ||| set soap headers	count=2
arg_pair	0 index ||| gmp $a int $index	count=1
namespace	nobre ||| throwable	count=1
arg_pair	contorno acutales ||| float $ey	count=1
function_name	devuelve una lista ||| broker list dicts	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] text [function_name_2]	count=1
function_name	no ||| set mlt min doc frequency	count=2
function_name	interno actual ||| inner	count=1
function_name	un objeto connection verificará ||| connected	count=1
function_name	de reescritura establecidas previamente ||| rewrite vars	count=1
arg_pair	plaintext con ||| resource $identifier string $plaintext	count=1
arg_pair	xml desde ||| string $filename	count=1
return	virtual actual ||| string	count=1
function_name	lista ||| memory image	count=2
function	desencripta [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	cunstruye ||| load	count=1
function_name	provisto por el usuario ||| mhash keygen s2k	count=1
return	la ruta actual ||| bool	count=1
return	solicitado en un atributo ||| bool	count=1
arg_pair	el evento que ||| resource $event	count=1
namespace	de relleno ||| gmagickdraw	count=1
namespace	a la función ||| gearmanworker	count=1
function_name	entrenadas las ||| fann get cascade	count=1
function_name	posix que falló ||| posix	count=1
arg_pair	el contenido de una ||| string $optlist	count=1
arg_pair	una imagen tiff ||| string $filename	count=1
function_name	obtiene la información del ||| get	count=1
function_name	espacio ||| is	count=1
function_name	glo y enviarla a ||| send glo	count=1
arg_pair	la petición actual indicando ||| string $details	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] [function_name_2] quantum	count=1
arg_pair	conjunto óptimo de ||| int $scope int $nullable	count=1
function_name	las palabras que no ||| set	count=1
arg_pair	direcciones servicios colas ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	sentencia dada por statement ||| resource $statement	count=1
arg_pair	de start hacia ||| int $start	count=2
function_name	de intermediarios de ||| construct	count=1
function_name	de unicode del ||| ord	count=1
function_name	trata array ||| push	count=1
function_name	el ||| count	count=1
function_name	[function_name_1] primer atributo ||| [function_name_2] [function_name_1]	count=1
function_name	devuelve el número de ||| mysqli stmt param count	count=1
function_name	de la última operación ||| errno	count=2
function_name	convierte un ||| strval	count=1
function_name	aparecen en ||| addcslashes	count=1
function_name	imprime ||| show xy	count=1
function_name	crea [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	la codificación de ||| mb detect encoding	count=1
function_name	si el [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=4
function_name	dsn ||| odbc	count=1
namespace	directorio virtual actual donde ||| function	count=1
function_name	a cubrid_list_dbs() ||| cubrid db	count=1
function	destino con [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=2
return	característica conocia ||| mongocursor	count=1
function_name	de parámetros de ||| params	count=1
function_name	llama a ||| call	count=1
function_name	nombre de ||| code by name	count=1
function_name	si y ||| using	count=1
function_name	servidores de trabajo ||| ping	count=1
namespace	que apunta ||| function	count=2
function	destino con [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	nombre variable_name en ||| resource $introspection string $variable_name	count=1
arg_pair	color de un índice ||| int $index imagickpixel $color	count=1
arg_pair	la constante imagetype_xxx dada ||| int $imagetype bool $include_dot	count=1
function_name	información ||| curl	count=1
arg_pair	efecto de botón tridimensional ||| int $x	count=1
function_name	[function_name_1] por ||| [function_name_2] [function_name_1]	count=4
function_name	segundo plano para ejecutar ||| background	count=1
namespace	por omisión ||| function	count=1
function_name	de respuesta ||| apache response	count=1
function_name	dada ||| string	count=1
function_name	que las ||| mlt min	count=1
arg_pair	realiza una consulta ||| string $query string $dbpath	count=1
return	la información proporcionada en ||| bool	count=1
namespace	los ||| zmqdevice	count=1
function_name	las banderas establecidas en ||| flags	count=1
function_name	devuelve el id de ||| id	count=1
function_name	apuntador de archivo ||| all	count=1
function_name	matriz para añadir un ||| offset set	count=1
arg_pair	de memcached::getmulti() ||| int $flags	count=1
arg_pair	de una respuesta ||| string $content	count=1
function	[function_name_1] de conexión ||| [arg_pair_2] [function_name_1]	count=2
function_name	dadas ||| imagestring	count=1
function_name	un caracter de escape ||| escape string	count=1
arg_pair	pem codificada y ||| array $configargs	count=1
namespace	arrayobject ||| arrayobject	count=2
arg_pair	aplicado la función callback ||| callable $callback	count=1
return	con los ajustes ||| array	count=1
function_name	la ||| set	count=10
function_name	el color del ||| color	count=2
namespace	de llamarla varias ||| function	count=1
arg_pair	objeto gmagickpixel de ||| gmagickpixel $color	count=1
arg_pair	por key corresponda a ||| mixed $value	count=1
function_name	actual de timezonedb ||| timezone	count=1
function_name	que ya ha ||| add	count=1
return	en la que ||| solrquery	count=1
function_name	tamaño de el array ||| size	count=1
arg_pair	lista de dsn ||| resource $connection_id	count=1
function_name	[function_name_1] de consulta ||| [function_name_2] [function_name_1]	count=8
arg_pair	ingres_fetch_row() ||| int $result_type	count=1
function_name	selecciona un umbral ||| threshold	count=1
function_name	usuario ||| uksort	count=1
arg_pair	con ||| resource $psdoc	count=1
arg_pair	start hacia los ||| int $start	count=2
namespace	o claves de ||| function	count=1
function_name	de una instrucción sql ||| mssql next	count=1
function_name	[function_name_1] del texto ||| [function_name_2] [function_name_1]	count=8
function_name	una jerarquía entera ||| checkin	count=1
function_name	oracle client almacenará ||| oci	count=1
function_name	encuentra ||| open memory image	count=2
function_name	de caché [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	caracteres que ||| function	count=1
namespace	aparecen en ||| function	count=1
function_name	[function_name_1] la respuesta ||| [function_name_1] [function_name_2]	count=1
arg_pair	valores de array1 ||| array $array1	count=1
function_name	se buscarán los archivos ||| dbplus	count=1
function_name	de único sentido ||| hash	count=1
namespace	que mostrar el pdf ||| function	count=1
function_name	captura una fila ||| fetch object	count=1
namespace	por parámetro ||| function	count=1
namespace	el ||| rarexception	count=1
namespace	si es igual a ||| function	count=1
function_name	de estado del servidor ||| add task status	count=1
function_name	cierra el conjunto ||| finalize	count=1
return	de una ||| mixed	count=2
arg_pair	palabras clave de query ||| string $query	count=1
function_name	manejador [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function	el token [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	opción especificada ||| get option	count=1
function_name	la ||| by country	count=1
function_name	pueden hacer de ||| construct	count=1
function_name	no se da ||| idate	count=1
function_name	lee los datos ||| read	count=1
function_name	mediante ||| get status	count=2
function_name	desencripta usando un ||| openssl decrypt	count=1
return	parámetro ||| string	count=1
arg_pair	advertencia ||| resource $psdoc	count=1
function_name	página para ajustarse ||| fit r	count=1
function_name	definidos por ||| control point browse	count=2
function_name	de la página ||| set slide show	count=1
namespace	servidores de trabajo ||| gearmanclient	count=1
arg_pair	antes de ||| string $str	count=1
function_name	preparada ||| pg execute	count=2
function_name	salida como echo o ||| sandbox output	count=1
function_name	define los encabezados ||| soap headers	count=1
function_name	frontbase ||| fbsql result	count=1
function_name	código de error ||| error	count=1
namespace	otro núcleo ||| imagickkernel	count=1
function_name	el sistema ||| pdf	count=1
arg_pair	empleando delimiter como ||| string $null_as	count=1
function_name	http en la solicitud ||| nsapi request	count=1
function_name	el fichero ttf ||| load ttf	count=1
arg_pair	un elemento ||| string $name string $value	count=1
function_name	actualiza la ||| update	count=1
arg_pair	una palabra a una ||| string $word	count=1
function	[function_name_1] un ||| [function_name_1] bytea [arg_pair_2]	count=1
function_name	devuelve ||| get frame list	count=1
arg_pair	compuesta combinando varias imágenes ||| string $thumbnail_geometry int $mode	count=1
function_name	estado http ||| http status	count=2
function_name	aborta inmediatamente ||| event base loopbreak	count=1
function_name	crea un ||| mcrypt create	count=1
function_name	la tangente hiperbólica para ||| trader tanh	count=1
return	especificada ||| string	count=1
arg_pair	una nueva instancia ||| string $url	count=1
function_name	del inglete limite ||| miter limit	count=1
function_name	proceso abierto ||| proc get status	count=1
function_name	función hará una copia ||| copy	count=1
function_name	apuntador de archivo dado ||| mailparse uudecode all	count=1
arg_pair	clave no existe todavía ||| int $flag int $expire	count=1
function_name	desde la csr dada ||| openssl csr sign	count=1
arg_pair	directiva whence como sigue: ||| int $whence int $pri	count=1
function_name	por lo menos tantos ||| mlt min	count=1
arg_pair	full-duplex ||| resource $stream int $how	count=1
function_name	cambiado de alguna forma ||| get modified	count=1
function_name	parecida a sybase_connect() con ||| sybase	count=1
return	puestas [return] cola ||| [return]	count=1
function_name	obtiene la escala ||| scale	count=1
namespace	de cualquier error ||| function	count=1
function_name	espacio [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	por lo menos ||| min	count=1
function_name	rellena y [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	en un archivo temporal ||| mailparse uudecode	count=1
function	del campo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function	[function_name_1] y asocia ||| imagick bool new [function_name_1] [arg_pair_2]	count=1
function_name	emplea para establecer ||| set info	count=1
function_name	los recursos de página ||| page	count=1
function_name	la actual fuente usada ||| get current font	count=1
function_name	pcos con el ||| pdf pcos	count=4
arg_pair	[arg_pair_1] texto con ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	añade rutas definidas mediante ||| add config	count=1
return	string con barras ||| string	count=1
namespace	indica ||| tidynode	count=1
function_name	[function_name_1] los comentarios ||| [function_name_1] [function_name_2]	count=2
namespace	datos que ||| sqlite3	count=1
arg_pair	parámetro de un ||| resource $p string $key	count=1
return	cursor: ||| int	count=1
arg_pair	esta es ||| string $name	count=1
function_name	[function_name_1] error ||| [function_name_1] [function_name_2]	count=2
arg_pair	el archivo ||| string $filename	count=1
arg_pair	crea ||| int $width int $height	count=1
function	última tupla [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	rellena la ruta actual ||| fill	count=1
function_name	el proveedor oauth ||| parameter	count=1
function_name	función usa la ||| prob prime	count=1
function	escribe información [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	reinicializa el ||| void	count=1
namespace	algoritmo ||| function	count=1
return	este método ||| int	count=1
function_name	una versión serializada del ||| string	count=2
function_name	descripción ||| ps surface restrict to level	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] size [function_name_2]	count=2
function_name	campo para usarlo ||| field	count=1
function_name	consulta única no ||| query	count=1
function_name	lista ||| odbc data source	count=2
arg_pair	versión extendida de ingres_fetch_row() ||| int $result_type	count=1
function_name	el ||| start	count=1
function_name	si devuelve ||| module get supported	count=1
arg_pair	peticiones en un ||| resource $grp	count=1
arg_pair	o cualquier ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	solrquery::sethighlightalternatefield() ||| string $field_override	count=1
arg_pair	conexión ||| string $charset resource $link_identifier	count=1
function_name	escribe la [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	disponibles después de ||| odbc data	count=1
return	escribe el resultado ||| int	count=1
function_name	el número ||| imap	count=1
function_name	en por lo menos ||| set	count=1
function_name	colores de ||| ncurses color	count=1
function_name	predeterminada para __autoload() ||| spl autoload	count=1
function_name	lee ||| query read	count=1
function_name	lista de dsn ||| odbc data source	count=1
function_name	[function_name_1] canal ||| [function_name_2] [function_name_1]	count=2
function_name	de instancia xml ||| load string	count=1
function_name	que la ||| multi by	count=2
function_name	nuevo archivo pdf ||| pdf open file	count=1
function_name	intentará [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	lista de encabezados a ||| headers list	count=1
arg_pair	número de secuencia ||| resource $imap_stream	count=1
function_name	patrón basado en ||| shading pattern	count=1
function_name	curva bezier y ||| curve	count=1
function_name	idéntica a ||| fgetss	count=1
function_name	de emitir advertencias ||| set using exceptions	count=1
function_name	umbral [function_name_2] ||| [function_name_2] [function_name_1]	count=22
arg_pair	hash de ||| string $str	count=1
namespace	consulta dada [namespace] ||| [namespace]	count=3
function_name	documento html ||| html	count=2
function_name	fila en ||| ibase fetch	count=1
function_name	[function_name_1] algún parámetro ||| [function_name_2] [function_name_1]	count=1
function_name	permisos del fichero ||| fchmod	count=1
return	un string de la ||| string	count=1
arg_pair	de base de datos ||| resource $conn_identifier	count=1
arg_pair	result set ||| resource $result	count=1
namespace	parameter ||| solrdismaxquery	count=3
arg_pair	bbcode_container creado por ||| resource $bbcode_container	count=1
return	esquema en ||| void	count=1
function_name	tarea ||| do	count=3
function_name	sólo si el ||| using	count=1
function_name	la rotación ||| set rotate	count=1
function_name	parámetro ||| addcslashes	count=1
function_name	descripción de ||| cairo scaled font text extents	count=1
return	que puedan estar disponibles ||| string	count=1
function_name	y devuelve la imagen ||| compare image channels	count=1
function_name	en lugar ||| set using exceptions	count=1
function_name	frase de consulta del ||| use phrase	count=1
function_name	permite deshabilitar errores libxml ||| libxml	count=1
function_name	la lista [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	de la última ||| array	count=1
function_name	última tupla ||| last	count=1
namespace	función registra un objeto ||| hw_api	count=1
arg_pair	guarda x509 en ||| mixed $x509	count=2
arg_pair	de una función ||| string $filename	count=1
return	con el contenido de ||| array	count=1
function_name	[function_name_1] que la ||| [function_name_1] [function_name_2]	count=4
return	ha consultado ||| int	count=1
arg_pair	y php ||| int $length	count=1
namespace	ver ||| gearmanclient	count=1
arg_pair	pseudo-aleatorios ||| int $size bool $strong	count=1
function_name	elongamiento ||| font stretch	count=1
function_name	número máximo de caracteres ||| set highlight max	count=1
function_name	los ||| color	count=1
function_name	de datos lob ||| lob read	count=1
arg_pair	para su uso posterior ||| resource $psdoc string $fontname	count=1
function_name	a sybase_fetch_assoc() con la ||| sybase fetch	count=1
function_name	por lo ||| set mlt min	count=1
function	[function_name_1] modo ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=3
function_name	pcos con el tipo ||| pdf pcos	count=3
function_name	que no ||| mlt min doc frequency	count=1
function_name	devuelve el producto de ||| product	count=1
arg_pair	de fuentes font ||| int $font	count=1
return	llamarla varias ||| array	count=1
return	la regla del número ||| bool	count=1
arg_pair	a la de memcached::getmulti() ||| string $cas_tokens int $flags	count=1
function_name	configuración dado su ||| ini	count=1
function_name	indica si el nodo ||| is	count=1
function_name	devuelve la ruta del ||| get	count=1
function_name	de único sentido ||| password hash	count=1
function_name	variables de ||| mb convert variables	count=1
function_name	vincular el ||| bind array by	count=1
namespace	número de ||| function	count=2
function_name	la función ||| gmp prob	count=1
arg_pair	un array y devuelve ||| array $array int $num	count=1
function_name	menos tantos documentos como ||| set mlt min	count=1
arg_pair	de mensaje para el ||| resource $imap_stream	count=1
return	función devuelve un objeto ||| object	count=2
namespace	a este ||| gmagickpixel	count=1
function_name	predeterminado si una excepción ||| exception	count=1
arg_pair	memcache::connect() con ||| string $host int $port	count=1
function_name	desplazamiento [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	por lo menos tantos ||| min	count=1
function_name	multi-dimensional con ||| all	count=1
namespace	la hoja de estilos ||| xsltprocessor	count=1
function_name	el año ||| year	count=1
arg_pair	0600 ||| string $prefix	count=1
arg_pair	archivo ||| string $filename array $options	count=1
arg_pair	limpia la caché de ||| int $caches	count=1
arg_pair	esteblece [arg_pair_1] [arg_pair_2] las operaciones de dibujo ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	stream_wrapper_unregister() ||| stream wrapper	count=1
function_name	la descripción de ||| cairo pattern get color	count=1
function_name	proceso ||| get status	count=2
arg_pair	con ciertas propiedades ||| int $field_offset	count=1
function_name	[function_name_1] mime ||| [function_name_1] [function_name_2]	count=3
function_name	que las palabras ||| mlt min doc frequency	count=1
function_name	comporta como el carp::cluck ||| apd clunk	count=1
function_name	opciones de la ||| options	count=1
return	bloqueo de lectura en ||| bool	count=1
namespace	forma opcional se puede ||| function	count=1
function_name	de cargar entidades externas ||| libxml disable entity	count=1
function_name	obtiene varios valores que ||| ps get value	count=1
function_name	una transacción [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	tailable que son similares ||| mongocursor	count=1
function_name	de columna actual para ||| get current column number	count=1
function_name	[function_name_1] codificada ||| [function_name_2] [function_name_1]	count=4
function_name	del continente que corresponde ||| continent code by	count=1
function_name	mensajes md5 de ||| md5 file	count=1
function_name	[function_name_1] de estancamiento ||| [function_name_2] [function_name_1]	count=16
function_name	utilizada por conexiones subsiguientes ||| edition	count=1
function_name	codificada ||| http build	count=1
namespace	el algoritmo estándar ||| function	count=1
function_name	descripción de ||| cairo pattern get color	count=1
function_name	del api de eventos ||| event buffer	count=1
function_name	color del borde de ||| border color	count=1
function_name	después de llamarla varias ||| data	count=1
function_name	directorio personalizado ||| setup custom directory	count=1
function_name	obtener los atributos ||| attributes	count=1
arg_pair	la directiva whence ||| int $whence	count=1
function_name	monitorizar un ||| cancel monitor	count=1
function_name	devuelve una matriz con ||| get	count=1
function_name	marco de acumulación ||| aggregate	count=1
function_name	subject que ||| strspn	count=1
function_name	fbsql_fetch_array() ||| fbsql fetch	count=1
arg_pair	una nueva instancia de ||| array $rectangle string $url	count=1
function_name	asignación de memoria ||| apc sma	count=1
function_name	las cabeceras de ||| headers	count=5
function_name	[function_name_1] entrenadas las ||| [function_name_2] max out [function_name_1]	count=1
function_name	el nombre del módulo ||| module name	count=1
function_name	modo de ||| mode	count=3
function_name	actual de ||| entry filesize	count=1
arg_pair	encuentra disponible la lista ||| resource $psdoc	count=1
return	en el sistema de ||| bool	count=1
function_name	representación yaml de data ||| yaml emit	count=1
return	un string con el ||| string	count=2
function_name	valor gamma de ||| gamma	count=1
function_name	un diff unificado ||| diff	count=1
function	relación [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	mayoría ||| string $connection_string string $character_set	count=1
function_name	basado en des de ||| crypt	count=1
function_name	cubrid_lob2_new() u obtenido de ||| cubrid lob2	count=1
function_name	la alternativa más ||| imagecolorresolvealpha	count=1
namespace	mostrándose por primera vez ||| haruoutline	count=1
arg_pair	a el punto x3 ||| float $x3	count=1
return	una cadena que describiendo ||| string	count=1
function_name	detiene ||| stop	count=2
function_name	datos ||| lob2 export	count=1
function_name	límite ||| fail limit	count=2
function_name	con información detallada ||| info	count=1
function_name	utf-8 ||| pdf utf8	count=1
namespace	(1 de enero de ||| function	count=1
function_name	certificado y su clave ||| openssl pkcs7 sign	count=1
function_name	lee información desde ||| read	count=1
function_name	[function_name_1] resolver ||| [function_name_2] [function_name_1]	count=1
namespace	lob devuelveto por ||| function	count=1
function_name	devuelve la ||| get channels	count=1
function_name	[function_name_1] primer ||| [function_name_2] [function_name_1]	count=1
function_name	caracter que contiene el ||| chr	count=1
function	una [function_name_1] [arg_pair_2] ||| submit form [function_name_1] resource $fdf_document [arg_pair_2] int	count=1
return	u otros ||| string	count=1
function_name	descripción de la ||| pattern get surface	count=1
namespace	tamaño actual de ||| function	count=1
function_name	una entrada de ||| zip entry filesize	count=1
function_name	prioridad de los ||| event base priority init	count=1
arg_pair	archivo local en el ||| int $mode	count=1
arg_pair	función es idéntica a ||| string $string	count=1
function_name	sobre un proceso ||| proc	count=1
function_name	indicando error ||| using exceptions	count=1
function_name	de la imagen y ||| image	count=3
function_name	añade una ||| add	count=4
function_name	interoperabilidad stubs ||| create default stub	count=1
arg_pair	devuelve un [arg_pair_2] ||| object [arg_pair_1] [arg_pair_2]	count=4
return	desde la época ||| int	count=1
arg_pair	el método y ||| string $method	count=1
function_name	mediante ||| mailparse uudecode	count=1
function_name	cadena de error ||| bzerrstr	count=1
function_name	trunca el archivo ||| ftruncate	count=1
arg_pair	array ||| object $object array $args	count=1
arg_pair	crea un efecto ||| int $width int $height	count=1
namespace	el ||| oci-lob	count=2
namespace	o virtual sujeto a ||| function	count=1
function_name	intersección de ||| array uintersect	count=2
return	envía datos ||| bool	count=1
namespace	del color que ||| function	count=1
return	final del ||| int	count=1
arg_pair	caracteres desde un ||| resource $font_index string $encodingfile	count=1
function_name	preparada por ||| ibase execute	count=2
function_name	[function_name] xml ||| xml [function_name] create	count=2
arg_pair	en signed_text y ||| resource $identifier string $signed_text	count=1
function_name	restablece ||| restore	count=1
function_name	de alta prioridad para ||| high	count=1
function_name	número de error ||| bzerror	count=1
namespace	de archivo dado ||| function	count=1
function_name	bindtextdomain() establece la ruta ||| bindtextdomain	count=1
arg_pair	o cualquier abstracción ||| zmqsocket $frontend	count=1
function_name	y devuelve el resto ||| get contents	count=1
return	al valor dado por ||| void	count=1
function_name	[function_name_1] el punto ||| [function_name_2] [function_name_1]	count=1
function_name	de la ||| set slide	count=1
function_name	de instrucciones de ||| set processing instruction	count=1
function_name	más procedimientos ||| db2 procedure columns	count=1
namespace	parcialmente o ||| function	count=1
function_name	del iv del algoritmo ||| iv	count=1
function_name	recurso socket ||| socket	count=1
function_name	el ||| set using	count=1
function_name	orientación de ||| orientation	count=1
function_name	el código de ||| curl strerror	count=1
return	del string ||| int	count=1
function_name	establece el punto de ||| set	count=1
function_name	el factor de umbral ||| threshold factor	count=2
namespace	los caracteres ||| function	count=1
function_name	la ||| bzerrstr	count=1
function_name	fila de datos ||| fbsql fetch row	count=1
namespace	por filename es ||| function	count=1
return	la que las ||| solrquery	count=1
function_name	[function_name] pasado ||| [function_name]	count=3
function_name	ingres procedimiento ||| ingres	count=1
return	un ||| array	count=3
arg_pair	a ereg_replace() excepto ||| string $pattern string $replacement	count=1
function_name	agrupación de conexiones del ||| connection	count=1
function	tabla actual [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	uno nuevo y mantendrá ||| regenerate	count=1
arg_pair	desde la representación ||| string $filename	count=1
function_name	del blob ||| ibase blob	count=1
function_name	[function_name_1] wddx ||| [function_name_2] [function_name_1]	count=6
function_name	unrar encuentre un ||| using	count=1
function_name	el número de salidas ||| num output	count=1
function_name	los servidores de ||| ping	count=1
function_name	establece la fracción ||| set	count=1
function_name	de dsn ||| odbc data source	count=1
function_name	esta función analiza ||| parse url	count=1
arg_pair	cadena str ||| string $str	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] affected [function_name_2]	count=4
function_name	[function_name_1] compartido y ||| [function_name_1] [function_name_2]	count=1
function_name	la línea [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	una ||| string $name int $opsys	count=2
return	los datos del ||| array	count=1
function_name	propiedad nominada ||| property	count=1
arg_pair	para posicionar el ||| int $position	count=1
function_name	ignoradas ||| set mlt min	count=1
function_name	devuelve la ||| get temp dir	count=1
function_name	de control de la ||| control point	count=1
function_name	aclarando y ||| raiseimage	count=1
arg_pair	como una función ||| string $name	count=1
function_name	de inicialización iv desde ||| iv	count=1
return	proceso del proceso ||| void	count=1
function_name	socket [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	antepone ||| prepend	count=2
namespace	imagen que está ||| function	count=1
function	parámetro de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	la configuración de tidy ||| tidy reset config	count=1
arg_pair	remote_socket ||| int $errno	count=1
function_name	fuente usado ||| getfontsize	count=1
function	[function_name_1] de una ||| [function_name_1] name [arg_pair_2]	count=2
function_name	von einer mime kopfzeile ||| mime encode	count=1
arg_pair	ordena números ||| string $search_criteria string $charset	count=1
function_name	puesta de sol ||| sunset	count=1
function_name	de espera de la ||| set query timeout	count=1
function_name	[function_name_1] argumentos pasados ||| [function_name_2] [function_name_1]	count=2
function_name	de ||| curl strerror	count=4
arg_pair	y bcc ||| string $bcc string $rpath	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] ccitt [arg_pair_2]	count=2
namespace	la clase ||| reflectionclass	count=10
arg_pair	un bloque de ||| resource $stmt	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] image [function_name_2]	count=3
arg_pair	eventos especificada ||| int $flags	count=1
arg_pair	de eventos ||| int $flags	count=1
function_name	disponible ||| ps	count=1
function_name	servidor postgresql después de ||| pg end	count=1
function_name	base de datos entera ||| db	count=1
function_name	tie breaker parameter ||| set	count=1
namespace	que es ||| function	count=3
return	serán ||| solrquery	count=1
namespace	número de [namespace] en un ||| [namespace]	count=1
arg_pair	este [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
namespace	que está asociada con ||| function	count=1
arg_pair	dos coordenadas los radios ||| float $ry	count=1
return	si un ||| int	count=1
namespace	api si no se ||| function	count=1
function_name	el id [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	consulta la publicación ||| fdf get ap	count=1
return	cuando ||| void	count=2
function_name	imprime ||| show text	count=2
function_name	las clases padre de ||| class parents	count=1
function	[function_name_1] de archivo ||| [arg_pair_2] [function_name_1]	count=1
function_name	una transacción sin cerrarla ||| ibase commit ret	count=1
function_name	las ||| preg	count=1
function_name	fgets() excepto que ||| fgetss	count=1
function_name	la descripción ||| cairo matrix translate	count=1
function_name	recibe un ||| recv	count=1
function_name	guardar ||| save path	count=2
function_name	buferizado event ||| buffer	count=1
arg_pair	cubrid_set_query_timeout() se usa ||| resource $req_identifier	count=1
return	esta ||| string	count=2
function_name	rebobina el ||| reset	count=1
return	en búfer ||| bool	count=1
function_name	sisitema ||| stream wrapper	count=1
namespace	devuelve una cadena ||| function	count=1
arg_pair	contenido de una ruta ||| string $optlist string $path	count=1
function_name	frecuencia en la que ||| set mlt	count=1
arg_pair	si solrquery::sethighlightalternatefield() ||| string $field_override	count=1
function_name	última operación frontbase ||| fbsql	count=1
function_name	de sisitema de ||| wrapper	count=1
function_name	encabezados ||| soap headers	count=2
function_name	[function_name_1] porción ||| [function_name_1] [function_name_2]	count=12
return	en datos de ||| bool	count=2
function_name	unión para ||| join	count=1
function_name	«espacio horizontal» ||| isblank	count=1
function_name	fue subido mediante ||| uploaded	count=1
function_name	advertencias y devolver un ||| using	count=1
function_name	obtiene una lista ||| get	count=2
return	un valor de ||| string	count=1
arg_pair	los datos ||| int $linebreak array $callbacks	count=1
function_name	método conveniente [function_name] proporcionalmente ||| magnify [function_name]	count=1
namespace	nuevo objeto domentityreference ||| domentityreference	count=1
function_name	total de la ||| total	count=1
function_name	dos letras del continente ||| continent code by	count=1
function_name	servidor virtual de ||| server by path	count=1
arg_pair	es una implementación ||| string $offset string $value	count=1
function_name	permisos ||| eio chmod	count=2
arg_pair	convierte ||| string $string int $split_length	count=1
function_name	es true ||| set using	count=1
function	resida fuera [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	realiza una operación and ||| variant and	count=1
arg_pair	a sybase_connect() con ||| string $servername string $username	count=1
arg_pair	un método de ||| int $width	count=1
function_name	cadena de ||| bzerrstr	count=1
namespace	la ||| gmagick	count=10
function_name	el ||| set slide	count=1
function_name	internas con libeio ||| get event	count=1
function_name	verificar las extensiones ||| spl autoload extensions	count=1
function_name	a una única ||| add	count=1
function_name	establece la calidad de ||| mysqlnd ms set	count=1
return	la tarea ||| bool	count=1
arg_pair	el número de ||| resource $imap_stream	count=1
function_name	acl ||| getacl	count=1
namespace	la imagen y lo ||| gmagick	count=1
return	de secuencia de ||| int	count=1
arg_pair	b negro y ||| resource $pdfdoc float $b	count=1
function_name	función usa ||| prob prime	count=1
arg_pair	mensaje y socket. -- ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	una línea en la ||| line	count=1
function_name	una nueva csr certificate ||| openssl csr new	count=1
function_name	[function_name_1] el control ||| [function_name_1] [function_name_2]	count=3
return	o lógica ||| bool	count=1
function_name	de datos de entrenamiento ||| train data	count=1
return	tridimensional simulado aclarando ||| void	count=1
function_name	más opciones ||| option	count=1
return	y [return] todos ||| [return]	count=1
arg_pair	intenta eliminar cualesquiera bytes ||| int $length	count=1
function_name	este ||| set mlt min doc frequency	count=2
arg_pair	mayoría de ||| string $connection_string string $character_set	count=1
function_name	sólo si ||| set using exceptions	count=1
return	un array asociativo con ||| array	count=2
function_name	array de pendientes ||| steepnesses	count=1
function_name	[function_name_1] error sqlstate ||| [function_name_1] [function_name_2]	count=1
function_name	afectadas ||| fbsql affected	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] from [function_name_1]	count=3
function_name	paquete wddx ||| wddx packet	count=2
function_name	este para ||| add kernel	count=1
function_name	[function_name_1] sin cerrarla ||| [function_name_2] [function_name_1]	count=4
function_name	el tiempo de espera ||| cubrid set query timeout	count=1
function_name	pendientes de activación ||| activation steepnesses	count=3
function_name	en ||| crypt	count=2
function_name	última fecha modificación ||| file time	count=1
namespace	por línea ||| function	count=1
return	enviar en las ||| bool	count=1
function_name	datos de ingres ||| ingres	count=3
arg_pair	desde un fichero y ||| resource $font_index string $encodingfile	count=1
return	en función de ||| bool	count=1
return	puede emplearse virtualmente en ||| bool	count=1
function_name	[function_name_1] importado ||| [function_name_2] [function_name_1]	count=1
function_name	en la ||| nsapi	count=1
arg_pair	arrays con ||| array $array1 array $array2	count=1
function_name	actual de una entrada ||| entry	count=1
arg_pair	que las retrollamadas se ||| array $patterns_and_callbacks mixed $subject	count=1
return	el valor del primer ||| mixed	count=1
function_name	de una entrada ||| entry	count=1
function_name	bcompiler y crea clases ||| bcompiler	count=1
function	obtnener [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function	[function_name_1] para ||| [arg_pair_2] [function_name_1]	count=13
arg_pair	es tratado como una ||| string $fieldname string $fieldvalue	count=1
function_name	función devuelve ||| get	count=8
function_name	un segundo ||| add	count=1
return	de retorno ||| bool	count=1
function_name	desde ||| from builtin	count=1
arg_pair	devuelve un resultado que ||| resource $connection string $qualifier	count=1
function_name	supervisión del ||| ctrl dispatcher	count=1
function_name	gettimeofday ||| gettimeofday	count=1
function_name	el nombre del campo ||| oci field name	count=1
function_name	[function_name_1] el ancho ||| [function_name_1] image [function_name_2]	count=1
function_name	almacena el resultado ||| xdiff file bpatch	count=1
function_name	tipo [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	logaritmo natural para ||| ln	count=1
function_name	a ||| set	count=2
function_name	supervisión del servicio y ||| win32 start service ctrl dispatcher	count=1
function_name	nueva neurona candidata ||| cand	count=2
namespace	de resultados como ||| function	count=1
function	de activación [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function	construye un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	información de campos ||| fetch field	count=1
arg_pair	por alpha y ||| float $alpha	count=1
return	la imagen original ||| gmagick	count=1
function_name	que identifican de manera ||| odbc specialcolumns	count=1
function_name	una respuesta ||| command handle response	count=1
arg_pair	tridimensional simulado ||| int $x	count=1
function_name	información asociada al ||| info	count=1
function_name	a considerara para remarcación ||| highlight fragsize	count=1
arg_pair	consulta sql query a ||| resource $link_identifier	count=1
function_name	como este serán ||| frequency	count=1
arg_pair	y su asignación ||| array $config	count=1
function	[function_name_1] una estructura ||| [arg_pair_2] [function_name_1]	count=1
function_name	que las ||| set mlt min	count=1
function_name	[function_name_1] [function_name_2] local o remoto de ||| [function_name_1] [function_name_2]	count=4
arg_pair	siguientes transformaciones con xsltprocessor ||| string $namespace string $name	count=1
function_name	usada para establecer el ||| cubrid set	count=1
function_name	o ||| add function	count=1
function_name	error cuando la ||| using	count=1
function_name	tangente para cada valor ||| trader tan	count=1
return	la base de ||| int	count=1
function_name	lee datos blob de ||| fbsql read blob	count=1
namespace	y otros cambios a ||| function	count=1
function_name	añade ||| add pattern	count=2
arg_pair	o cualquier ||| zmqsocket $backend	count=1
arg_pair	recupera una variable ||| string $default	count=1
function_name	imagen png ||| png	count=1
function_name	la faceta ||| facet	count=1
function_name	lo ||| set mlt min doc frequency	count=2
function_name	nuevo contexto ||| gupnp context new	count=2
arg_pair	construye un [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	tabla en la ||| fit table	count=1
namespace	de objectos soapserver ||| soapserver	count=1
function_name	entrenamiento desde ||| train from callback	count=2
rest	string con [function_2] ||| [function_2] [return_1]	count=1
arg_pair	las capas de mensaje ||| zmqsocket $backend	count=1
return	estándar ||| string	count=1
return	relleno usado cuando ||| void	count=1
function_name	la extensión a ||| extension	count=1
namespace	el array después ||| splfixedarray	count=1
function_name	de los callback definidos ||| control point browse	count=1
namespace	petición ||| function	count=1
function_name	id es ||| id	count=1
function_name	indica ||| default namespace	count=2
function_name	escribe los datos ||| write temporary	count=2
function_name	o si [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	valor quantum value ||| value quantum	count=1
arg_pair	existe todavía ||| int $flag int $expire	count=1
function_name	archivos de ||| dbplus chdir	count=1
arg_pair	samconnection conecta ||| string $protocol array $properties	count=1
arg_pair	un segmento de ||| int $key	count=1
function	[function_name_1] estructura de ||| [function_name_1] train from callback [arg_pair_2]	count=1
function_name	escape ||| escape string	count=2
arg_pair	a mktime() excepto ||| int $minute	count=1
namespace	de las letras en ||| harufont	count=1
function_name	registrar previamente con stream_wrapper_unregister() ||| wrapper	count=1
function_name	seridor asociado con ||| msql select db	count=1
function_name	devuelve el número máximo ||| get highlight max	count=1
arg_pair	una matriz a ||| resource $p	count=1
function_name	[function_name_1] de decadencia ||| [function_name_2] [function_name_1]	count=1
arg_pair	el criterio y ||| int $sortdirection	count=2
return	solicitudes ||| bool	count=1
arg_pair	una nueva entrada a ||| int $key string $value	count=1
function_name	escala de la ||| db2 field scale	count=1
arg_pair	como timestamp y ||| int $timestamp	count=2
arg_pair	o especial a menudo ||| int $pri	count=1
return	sentencia sql ||| int	count=1
function_name	una ||| error string	count=1
function_name	el directorio ||| dbplus	count=1
function_name	prioridad baja en ||| low	count=1
function_name	[function_name_1] de sesión ||| [function_name_2] get [function_name_1]	count=4
return	este ||| bool	count=1
function_name	está cargada ||| loaded	count=1
namespace	una ||| function	count=2
function_name	en base64 ||| base64	count=1
function_name	[function_name] del objeto ||| get [function_name]	count=1
return	línea ||| int	count=1
namespace	puntero interno de ||| oci-lob	count=1
function_name	rojo de la cromaticidad ||| image red	count=1
function_name	cuenta el número de ||| count	count=2
function_name	de gravedad actual ||| gravity	count=1
function_name	función mssql_free_statement() si existe ||| free statement	count=1
arg_pair	que se identificaron ||| string $client_identifier	count=1
function_name	errores de imap si ||| imap	count=1
function_name	analiza una url y ||| parse	count=1
function_name	[function_name_1] los encabezados ||| [function_name_1] last response [function_name_2]	count=2
arg_pair	los dispositivos de ||| zmqsocket $backend	count=1
function_name	tipo mime ||| image type to mime type	count=1
function_name	ser entrenadas las conexiones ||| get	count=1
function_name	resultados de mysql ||| mysql	count=1
function_name	la ||| source	count=1
arg_pair	del conjunto de resultados ||| resource $result	count=1
function_name	[function_name] al ||| [function_name] add	count=2
arg_pair	xml dump ||| string $xml_file	count=1
function_name	comprueba si [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	característica ||| mongocursor	count=1
function_name	tantos documentos como ||| frequency	count=1
function_name	de ||| crypt	count=2
function_name	establece la edición de ||| oci set	count=1
function_name	información ||| proc get	count=1
function_name	clase en la ||| class	count=1
arg_pair	especificado es un algoritmo ||| string $algorithm	count=1
function_name	actual por la imagen ||| image	count=1
function_name	caché ||| apc fetch	count=2
arg_pair	unicode unicode ||| int $namechoice	count=1
function_name	que file_get_contents() [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	sido ||| sdo_das_xml	count=1
namespace	más reciente ||| sqlite3	count=1
arg_pair	una fila en un ||| resource $stmt int $row_number	count=1
function_name	prueba probabilística ||| prob prime	count=1
function_name	la ||| show	count=1
arg_pair	un ||| string $str	count=3
function_name	de caché actual ||| session cache	count=2
function_name	ømq pueden ||| construct	count=1
arg_pair	de un conjunto de ||| resource $result	count=3
function_name	aborta inmediatamente el ||| event base loopbreak	count=1
function_name	contra las keys ||| diff ukey	count=1
function_name	la clave de columna ||| column	count=1
function_name	un ||| children	count=3
arg_pair	guarda x509 en un ||| mixed $x509	count=1
function	token y [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	mode ||| resource $ftp_stream int $mode	count=1
arg_pair	samconnection conecta el ||| array $properties	count=1
function_name	define la ||| flatness	count=1
function_name	cadena de instancia xml ||| string	count=1
function_name	ámbito del [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	el parámetro ||| string	count=1
function_name	mínima [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	de gettext() ||| string $msgid1	count=1
function_name	[function_name_1] la traza ||| [function_name_1] [function_name_2]	count=3
function_name	tupla previa de ||| prev	count=1
function_name	retorna el numerador ||| task numerator	count=1
function_name	obtiene el modo de ||| get	count=1
function_name	función definida por ||| uasort	count=1
arg_pair	retrollamadas se ejecutan ||| mixed $subject	count=1
arg_pair	es una función ||| string $column_key int $flags	count=1
function_name	una operación or ||| or	count=1
function_name	enviadas al ||| request	count=1
function_name	[function_name_1] retropropagación desde ||| [function_name_2] [function_name_1]	count=1
function_name	información acerca ||| info	count=1
function	localización [arg_pair_2] ||| [function_name_1] int $row_number [arg_pair_2]	count=4
function_name	obtiene nombres similares para ||| similar names	count=1
function_name	agregar parámetros ||| required	count=1
return	para borrar ||| bool	count=1
function_name	prueba automática sobre ||| mcrypt module self test	count=1
namespace	de forma parecida a ||| function	count=1
return	en la caché de ||| bool	count=1
function_name	borrar ||| drop	count=1
arg_pair	los valores de array1 ||| array $array1 array $array2	count=1
return	obtiene la ||| int	count=2
return	el almacenamiento en ||| bool	count=1
arg_pair	o ambos ||| int $fetchtype	count=1
function_name	disponible la lista de ||| memory	count=1
return	como un integer ||| int	count=1
function_name	la uri del ||| uri	count=1
return	extrae cada ||| array	count=1
function_name	filas afectadas ||| fbsql affected rows	count=2
function_name	[function_name_1] estadísticas sobre ||| [function_name_2] [function_name_1]	count=1
function_name	como este serán ignoradas ||| mlt min doc	count=1
arg_pair	una función de ||| string $column_key	count=1
function_name	variable vinculada de oracle ||| oci bind by name	count=1
function_name	mismo ||| same	count=1
return	deletes en el disco ||| bool	count=1
function_name	instrucciones de proceso para ||| set processing instruction	count=1
arg_pair	en el stream dado ||| resource $stream	count=1
function_name	hash de un ||| crypt	count=1
function_name	las palabras que no ||| doc frequency	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] field [function_name_1]	count=3
function_name	cualquier error ||| bzerrstr	count=1
namespace	la última ||| memcached	count=1
namespace	ruta ||| harupage	count=1
function	array numérico [arg_pair_2] ||| [function_name_1] resource $stmt [arg_pair_2]	count=3
return	actualmente en el ||| bool	count=2
return	o subsiguiente ||| void	count=1
function_name	la utilización de ||| win32 ps stat mem	count=1
function_name	para ||| sslchecks	count=1
arg_pair	la lista de ||| resource $connection_id	count=1
function_name	blob que se haya ||| blob	count=1
function_name	el documento ||| get document	count=1
function_name	en un archivo ||| mailparse uudecode all	count=1
function_name	el ||| add required	count=1
function_name	un ||| raiseimage	count=1
namespace	el código ||| function	count=1
arg_pair	del mensaje ||| resource $imap_stream int $msg_number	count=1
arg_pair	cubrid y guarda ||| resource $conn_identifier	count=1
return	ømq pueden hacer ||| zmqsocket	count=1
namespace	[namespace] corchetes de ||| [namespace]	count=2
return	array con la información ||| array	count=1
function_name	descripción de ||| cairo surface create similar	count=1
function_name	tantos documentos como ||| min	count=1
arg_pair	se comporta de ||| string $username	count=1
function_name	archivo codificado ||| all	count=1
function_name	función ||| ps	count=1
namespace	es igual a false ||| function	count=1
function_name	más [function_name] límte ||| [function_name] bit	count=1
return	en las peticiones ||| bool	count=1
return	de la ||| gmagick	count=2
function_name	de espera ||| cubrid set query timeout	count=1
function_name	primer plano ||| set	count=1
return	una columna específica ||| string	count=1
return	sentencia sql más ||| int	count=1
function_name	acepta ||| format	count=1
function_name	elimina uno de los ||| remove	count=2
function_name	[function_name_1] reemplaza con ||| [function_name_2] [function_name_1]	count=2
function_name	milisegundos para el ||| timeout	count=1
function_name	de estancamiento de salida ||| output stagnation	count=1
arg_pair	una definición de ||| string $contents int $options	count=1
function_name	parámetro facet.date.gap ||| facet date gap	count=1
namespace	que especifica ||| gmagickdraw	count=1
arg_pair	obtiene un ||| resource $result int $rownumber	count=1
function_name	de ||| set interlace scheme	count=2
function_name	cada archivo codificado ||| all	count=1
arg_pair	object ||| string $class_name	count=1
function_name	los colores de ||| set	count=1
return	tie ||| solrdismaxquery	count=1
function_name	imagen ||| get image	count=1
function_name	usando una ||| uasort	count=1
arg_pair	php del texto que ||| resource $handle int $length	count=1
function_name	todas las cabeceras ||| headers	count=3
function_name	en la que ||| set mlt min	count=1
function_name	devuelve la extensión de ||| to extension	count=1
function_name	declaración de namespace ||| xml set end namespace decl	count=1
arg_pair	agua digital dentro ||| imagick $watermark_wand	count=1
namespace	palabras que no ||| solrquery	count=1
function_name	elemento con el id ||| element by id	count=1
function_name	salidas de cada patrón ||| output	count=1
function_name	advertencia esta función ||| ps open	count=1
function_name	activa ||| autocommit	count=1
arg_pair	un vector de ||| resource $ann array $input_vector	count=1
function_name	funciones de sisitema ||| wrapper register	count=1
function_name	excepción ||| exception	count=4
function_name	[function_name_1] las variables ||| [function_name_1] [function_name_2]	count=1
arg_pair	el result set ||| int $index	count=1
arg_pair	la sentencia dada ||| resource $statement	count=1
namespace	un objeto soapserver ||| soapserver	count=1
arg_pair	miller-rabin para revisar si ||| int $reps	count=1
function_name	la puesta de sol ||| sunset	count=1
function_name	coseno ||| trader cos	count=1
function_name	[function_name] de campos ||| get [function_name]	count=1
arg_pair	valor numérico de un ||| string $server_key string $key	count=1
function_name	última operación curl ||| curl errno	count=2
return	fue creado ||| bool	count=1
function_name	como este serán ||| set mlt min doc frequency	count=1
function_name	la longitud del campo ||| field len	count=2
function_name	insert ejecutada ||| insert	count=1
function_name	acción ||| device action callback	count=1
arg_pair	ordena números de ||| string $charset	count=1
function_name	servidores de ||| ping	count=1
function_name	versión del protocolo de ||| proto info	count=1
function_name	palabras que ||| min doc frequency	count=1
function_name	[function_name_1] categoría de ||| [function_name_2] [function_name_1]	count=1
function_name	ya ha sido creado ||| add	count=1
arg_pair	assoc_array en ||| array $assoc_array int $options	count=1
function_name	en cascada ||| fann get cascade	count=1
function_name	[function_name_1] umbral ||| [function_name_2] [function_name_1]	count=8
function_name	documentos como este serán ||| min doc frequency	count=1
return	bordes de la ||| void	count=1
namespace	obtiene la cadena ||| function	count=1
function_name	número máximo de ||| max analyzed chars	count=1
function_name	false si es uno ||| module is	count=1
return	devolverá ||| string	count=1
function	de control [arg_pair_2] ||| [function_name_1] set [arg_pair_2]	count=1
namespace	valores usando una función ||| arrayiterator	count=1
function_name	[function_name_1] encabezados a ||| [function_name_2] [function_name_1]	count=6
arg_pair	por relation bajo ||| string $name resource $relation	count=1
function_name	del [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	[function_name_1] tipo de ||| [function_name_1] [function_name_2]	count=1
function_name	bloque de asignación ||| block code	count=1
return	no ejecutables no ||| bool	count=1
function_name	utf-8 a ||| utf8	count=1
function_name	copia [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	como el carp::croak ||| apd croak	count=1
arg_pair	0 ||| gmp $a	count=1
function_name	copia los datos de ||| pgsql copy to	count=1
function_name	[function_name] xml con ||| xml [function_name]	count=1
function_name	número de tendencias de ||| fann get bias array	count=1
namespace	trabajo ||| gearmanjob	count=2
namespace	especificado por variable ||| function	count=1
function_name	permisos ||| eio fchmod	count=2
function_name	interoperabilidad ||| default stub	count=2
function_name	flujo con stream_filter_prepend() ||| stream	count=1
function_name	servidor ldap en ||| ldap	count=1
function_name	repositorio ||| svn cat	count=2
function_name	de una imagen ||| image	count=9
arg_pair	método gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
return	no se le ha ||| int	count=1
arg_pair	local en [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	clave actual ||| key	count=1
function_name	este método devuelve el ||| get current	count=1
function_name	en un das xml ||| types	count=1
function	entrada descrita [arg_pair_2] ||| [function_name_1] replace [arg_pair_2]	count=3
return	tipo ||| string	count=1
function_name	otro núcleo («kernel») a ||| add	count=1
return	para una ||| int	count=1
arg_pair	proporcionado ||| int $color	count=1
namespace	se describe como orden ||| function	count=1
arg_pair	input ||| array $input	count=1
arg_pair	de contexto log_cmd_update al ||| array $updateoptions array $protocoloptions	count=1
function_name	fracción de fann_get_cascade_candidate_change_fraction() ||| cascade candidate	count=1
arg_pair	botón tridimensional simulado ||| int $width	count=1
function_name	páginas raíz para ||| set	count=1
function_name	encuentre ||| exceptions	count=1
function_name	cuantía de imagick como ||| quantum	count=1
arg_pair	devueltos desde el domain ||| string $codeset	count=1
function	[function_name_1] de buzones ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $user [arg_pair_2]	count=21
return	un único elemento en ||| bool	count=1
function_name	[function_name_1] el código ||| [function_name_1] [function_name_2]	count=1
function_name	recupera la instancia ||| get	count=1
function_name	una dirección ||| geoip	count=1
function_name	mensaje ||| curl	count=1
function_name	establece la ||| set callback	count=1
function	el tamaño [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	trae el [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	documento libxml ||| libxml set	count=1
arg_pair	recupera una ||| string $name string $default	count=1
function_name	pundo ||| chr	count=1
arg_pair	yaf_config_ini ||| string $config_file string $section	count=1
function_name	de la columna ||| field	count=1
arg_pair	el descendente del texto ||| string $text	count=1
function_name	sin cambiar el ecm ||| stagnation	count=1
arg_pair	para la mayoría de ||| string $character_set	count=1
function_name	establece ||| imap set quota	count=2
function_name	esta función crea una ||| create processing instruction	count=1
function_name	transacciones ||| mysqlnd ms	count=1
function	[function_name_1] str especificada ||| [arg_pair_2] [function_name_1]	count=1
function_name	de espera de consulta ||| cubrid get query timeout	count=1
arg_pair	unicode propertyaliases.txt ||| int $namechoice	count=1
namespace	es un alias de ||| solrdocument	count=1
function_name	impresión del texto ||| text pos	count=2
function_name	que deberían ser devueltas ||| limit	count=1
function_name	la última sentencia insert ||| db2 last insert	count=1
function_name	las bases de datos ||| dbs	count=1
function_name	una excepción ||| set using exceptions	count=1
arg_pair	de resultado ||| resource $result	count=1
namespace	información de ||| function	count=2
function_name	por db2_prepare() ||| param	count=1
function_name	descripción de la ||| cairo surface set device offset	count=1
function_name	de fann_get_cascade_candidate_change_fraction() ||| candidate	count=1
function_name	aplicar ||| file bdiff	count=1
return	de ||| void	count=10
function_name	[function_name_1] de fecha ||| [function_name_1] [function_name_2]	count=3
function_name	información de la versión ||| version	count=1
function_name	xbm de la imagen ||| imagexbm	count=1
function_name	el número de columnas ||| num fields	count=1
namespace	a una base ||| function	count=1
return	acepta uno dos ||| string	count=1
function	[function_name_1] específica ||| [function_name_1] int $row_number [arg_pair_2]	count=1
namespace	datos del ||| function	count=1
arg_pair	decir el valor ||| int $face string $filename	count=1
arg_pair	transformar str1 ||| string $str1	count=1
function_name	eventos de lectura ||| event	count=1
function_name	clase propia que ||| info class	count=1
namespace	fgetss() ||| function	count=1
namespace	con ||| sdo_das_xml	count=1
function_name	ssh2 ya conectado ||| ssh2	count=1
function_name	el codificador especificado ||| encoder	count=1
arg_pair	por keys del servidor ||| int $time	count=1
function_name	de los elementos invertido ||| reverse	count=1
namespace	los servidores ||| memcached	count=1
namespace	el fichero dado de ||| splfileobject	count=1
function_name	[function_name] asociada ||| [function_name]	count=3
function_name	volcar a ||| debug zval dump	count=1
arg_pair	componentes rgb dados ||| int $red	count=1
namespace	el mapa ||| weakmap	count=1
namespace	de salida de ||| function	count=1
return	directorio virtual actual ||| string	count=1
namespace	disponibles ||| function	count=2
function_name	parámetros ||| parameter	count=1
function_name	cuantía de ||| quantum	count=1
arg_pair	fijo de colores que ||| int $numcolors	count=2
function_name	array asociativo o ||| array	count=1
return	como un código de ||| string	count=1
arg_pair	que coincida con el ||| mixed $target mixed $fill	count=1
function_name	el puntero dado ||| bzerrstr	count=1
function_name	el tipo de dato ||| db2 field type	count=1
return	similares al comando de ||| mongocursor	count=1
arg_pair	función permite enviar emails ||| string $message	count=1
arg_pair	callback ||| int $type mixed $callback	count=1
function_name	un número ||| gmp prob prime	count=1
return	virtualmente en cada ||| bool	count=1
function_name	comentario a [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	tipo ||| void	count=1
function	[function_name_1] [arg_pair_2] etiqueta ||| [function_name_1] [arg_pair_2]	count=2
namespace	[namespace] es ||| [namespace]	count=4
function_name	por ||| min doc frequency	count=2
return	clave usando ||| void	count=1
arg_pair	la cadena de formato ||| string $format	count=1
function_name	advertencia ||| open memory image	count=2
function_name	[function_name_1] de i-nodo ||| [function_name_1] [function_name_2]	count=1
function_name	después ||| source	count=1
arg_pair	una base ||| string $database resource $link_identifier	count=1
function_name	documento mínima a ||| terms min	count=1
function_name	a la de memcached::prepend() ||| prepend by key	count=1
function_name	de paso inicial ||| rprop delta zero	count=1
function_name	prueba probabilística ||| gmp	count=1
function_name	cierra el fichero especificado ||| close	count=1
arg_pair	un fichero ||| resource $context	count=1
function_name	instala un objeto proxy ||| mysqlnd uh set connection proxy	count=1
return	esta función [return] ||| [return]	count=1
function_name	documentos como este ||| min	count=1
function_name	primer atributo de la ||| ldap first attribute	count=1
function_name	obtiene el iterador interno ||| get inner iterator	count=1
function_name	de compresión de ||| compression	count=1
namespace	obtiene el ||| memcached	count=1
function_name	página pdf [function_name_2] ||| [function_name_1] fit [function_name_2]	count=1
arg_pair	asociación de mysql_connection ||| mixed $mysql_connection	count=1
return	obtiene una ||| mixed	count=1
function_name	círculo ||| ps arcn	count=1
arg_pair	la database ||| resource $link_identifier	count=1
arg_pair	la imagen ||| int $x	count=1
function_name	lo menos ||| set mlt	count=1
function_name	que ||| fgetss	count=2
function_name	[function_name_1] decadencia ||| [function_name_1] quickprop [function_name_2]	count=1
namespace	la ||| gmagickdraw	count=2
namespace	proceso abierto mediante el ||| function	count=1
arg_pair	recupera una variable ||| string $name string $default	count=1
arg_pair	fabricación cres un ||| string $contents int $size	count=1
arg_pair	intermediarios ||| zmqsocket $frontend	count=1
function_name	la fila ||| fetch object	count=1
function	crea [arg_pair_2] ||| [function_name_1] text annotation [arg_pair_2]	count=4
function_name	cambia el directorio virtual ||| dbplus	count=1
function_name	argumento es true entonces ||| using	count=1
function_name	lo escribe al ||| write	count=2
function_name	de escape ||| escape string	count=1
function_name	la base ||| dbase	count=1
function_name	fracción de cambio ||| change fraction	count=1
function_name	operación más reciente ||| yp errno	count=2
function_name	control con ||| gupnp control	count=1
arg_pair	usando el método gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
function_name	texto encriptado y firmado ||| gnupg encryptsign	count=1
function_name	el directorio ||| chdir	count=1
namespace	microtime() ||| mongodate	count=1
function_name	encuentra ||| open memory	count=1
arg_pair	eliminar cualesquiera ||| resource $handle	count=1
arg_pair	que coincida con el ||| mixed $fill	count=2
function_name	descripción de la ||| cairo scaled font create	count=1
return	un entero ||| int	count=1
namespace	lee una imagen ||| gmagick	count=1
function_name	establece la edición ||| set	count=1
function_name	del pundo ||| chr	count=1
function_name	la sesión actual ||| session	count=3
function_name	tipo de dato ||| type	count=1
function_name	la caché de ||| apc compile	count=1
function_name	[function_name_1] sarprop ||| [function_name_2] [function_name_1]	count=38
namespace	una ventana o ||| function	count=1
arg_pair	datos disponible ||| int $row	count=1
function_name	[function_name_1] mismas preferencias ||| [function_name_1] copy [function_name_2]	count=2
function_name	el punto de control ||| gupnp control point callback	count=1
arg_pair	excepto que ||| resource $handle int $length	count=1
function_name	ambos puedan aplicarse ||| kernel	count=1
arg_pair	llamar una función ||| callable $function	count=1
arg_pair	una colección de ||| array $docs	count=1
function_name	recupera información sobre un ||| status	count=1
function_name	que ||| set mlt min doc frequency	count=4
arg_pair	archivo dest ||| int $context	count=1
arg_pair	nueva copia de todos ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	devuelve un valor ||| get	count=1
function_name	índice ||| offset	count=1
function	construye [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
arg_pair	función cubrid_set_query_timeout() se ||| resource $req_identifier	count=1
function_name	nombre del campo ||| field name	count=2
arg_pair	por dn ||| resource $link_identifier string $dn	count=1
function_name	de las interfaces ||| interface	count=1
namespace	[namespace] timestamp ||| [namespace]	count=3
function_name	obtiene un ||| get	count=2
namespace	por query al ||| function	count=1
arg_pair	activa ||| resource $connection_id	count=1
function_name	obtiene el ||| get default value	count=1
function_name	imagen animada se repite ||| image iterations	count=1
return	van ||| solrquery	count=1
return	del ||| domnode	count=1
function_name	hilo de la conexión ||| mysqli thread	count=1
function_name	la imagen obtenida ||| imagecreatefromxbm	count=1
function_name	de estancamiento de candidatas ||| cascade candidate stagnation	count=1
return	string y ||| array	count=1
return	polígono [return] ||| [return]	count=1
function_name	reescritura establecidas previamente por ||| output reset rewrite vars	count=1
function_name	que no ||| set mlt min doc	count=1
function_name	control de la ||| control point	count=1
function_name	el tipo de la ||| gettype	count=1
namespace	definida ||| reflectionclass	count=1
namespace	clase reflectionparameter ||| reflectionparameter	count=1
function_name	el número de ||| fbsql num	count=1
function_name	el directorio virtual actual ||| dbplus	count=1
function_name	de seguimiento ||| await data	count=1
function_name	región ||| region	count=2
function_name	expresiones regulares ||| regex	count=1
function_name	[function_name] password de ||| fbsql [function_name]	count=3
return	las claves x ||| array	count=1
return	como cursores ||| mongocursor	count=1
return	cualquier ||| zmqsocket	count=1
function_name	documento pdi de ||| pdi value	count=1
return	agregar parámetros ||| bool	count=1
function_name	página asociada ||| page	count=1
function_name	dado y escribe ||| write	count=1
function_name	exe ||| load exe	count=1
namespace	resultado a el ||| splfileobject	count=1
arg_pair	archivo local en el ||| string $local_file	count=1
return	devuelve el ||| string	count=2
namespace	lee los datos ||| function	count=1
function_name	de una imagen ||| stereo image	count=1
arg_pair	en signed_text y retorna ||| string $signed_text	count=1
function_name	el sistema de ||| pdf rotate	count=1
namespace	dado y extrae ||| function	count=1
arg_pair	su punto medio enx ||| float $alpha float $beta	count=2
arg_pair	éxito cero en ||| string $zurl mixed $options	count=1
function_name	en la que las ||| mlt min	count=1
function_name	declaradas ||| declared	count=2
namespace	ejecuta comandos por ||| function	count=1
arg_pair	versión plural de gettext() ||| string $msgid2	count=1
arg_pair	de memcached::cas() ||| float $cas_token	count=1
arg_pair	por msglist al buzón ||| string $msglist	count=1
function_name	todas las cabeceras de ||| headers	count=2
return	al final de la ||| void	count=1
function_name	comentario [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	una ||| ifx query	count=1
arg_pair	una nueva entrada ||| string $value	count=1
function_name	[function_name] los ||| fdf [function_name] doc	count=1
function_name	[function_name_1] petición ||| [function_name_1] [function_name_2]	count=6
function_name	de llamada establecidas anteriormente ||| clear callbacks	count=1
function_name	secuencia de ||| imap	count=1
function_name	el proveedor oauth ||| required	count=1
function_name	nodo ||| to doc	count=1
arg_pair	esta función devolverá la ||| resource $connection_id	count=1
function_name	de caracteres del campo ||| field length	count=2
function_name	por ||| set mlt min doc frequency	count=2
return	devuelve [return] ||| [return]	count=1
function_name	mínimo ||| min	count=3
return	que ||| mongocursor	count=1
return	hacer ||| zmqsocket	count=1
function_name	nombres ||| default namespace	count=2
function_name	por el ||| create function	count=1
function_name	de bytes de una ||| bcompiler	count=1
arg_pair	un directorio y a ||| resource $fam string $dirname	count=1
function_name	pendientes de activación de ||| activation steepnesses	count=1
function_name	lugar de ||| using	count=1
function_name	determinará el tipo mime ||| to mime type	count=1
function_name	fgetss() intenta ||| fgetss	count=1
function_name	define el ||| set slide	count=1
arg_pair	message al buzón especificado ||| string $options	count=1
function_name	acepta uno dos o ||| number	count=1
arg_pair	intenta eliminar ||| resource $handle int $length	count=1
function_name	la descripción ||| cairo surface get font	count=1
function_name	abstracción que ||| construct	count=1
function_name	si ||| set is	count=1
function	simple línea [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	función cubrid_set_add() ||| string $set_element	count=1
function_name	[function_name_1] recorte de ||| [function_name_2] [function_name_1]	count=4
function_name	sin tratar del servidor ||| get raw	count=2
function_name	el nombre largo ||| frame long name	count=1
function_name	conexión persistente al ||| pconnect	count=1
arg_pair	define el contenedor en ||| string $frame_name	count=1
return	simulado aclarando ||| void	count=1
return	utilizarse mcrypt_generic_deinit() en ||| bool	count=1
function_name	una imagen de ||| sub image	count=1
function_name	puedan estar disponibles ||| crypt	count=1
return	array de ||| array	count=2
return	como un array ||| array	count=1
arg_pair	servicios colas o cualquier ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	entrecomillado apropiado para ||| quote	count=1
arg_pair	0 index en a ||| gmp $a int $index	count=1
arg_pair	devuelve un [arg_pair_2] ||| object [arg_pair_1] string $class_name [arg_pair_2]	count=1
function_name	devuelve el elemento ||| get	count=1
function_name	devolverá la lista ||| odbc data source	count=1
function_name	[function_name] fichero ||| [function_name]	count=1
function_name	comporta de forma parecida ||| sybase pconnect	count=1
function_name	devuelve la escala ||| field scale	count=1
function_name	del byte actual en ||| current byte index	count=1
function_name	los mensajes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	probabilística de ||| function	count=1
function_name	emitir ||| set using	count=1
function_name	máximo [function_name_1] [function_name_2] incluidos ||| [function_name_2] max num query [function_name_1]	count=3
function_name	ecualiza el [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	dn específico ||| resource $link_identifier string $dn	count=1
return	una cadena que ||| string	count=2
arg_pair	de la ||| int $x int $y	count=1
arg_pair	sobre la última transferencia ||| resource $ch int $opt	count=1
function_name	documentos como este serán ||| set	count=1
namespace	dado y extrae cada ||| function	count=1
function_name	de relleno ||| get gray fill	count=1
function_name	[function_name_1] el rango ||| [function_name_1] quantum [function_name_2]	count=1
function_name	un proceso abierto mediante ||| proc	count=1
function_name	a ||| fgetss	count=1
function_name	fuente usada cuando ||| getfont	count=1
function_name	función reemplaza el hijo ||| replace child	count=1
arg_pair	y un conjunto ||| resource $ann array $input	count=1
function_name	campos de ||| set	count=1
arg_pair	usando el oid ||| string $oid	count=1
function_name	ausente anterior no incluido ||| prev empty	count=1
function_name	nueva csr certificate signing ||| openssl csr new	count=1
function_name	configura el contexto de ||| context	count=1
function_name	consultado ||| count	count=1
function_name	de seguridad del ||| set highlight alternate	count=2
function_name	la que las ||| mlt min doc	count=1
arg_pair	necesario para la mayoría ||| string $connection_string string $character_set	count=1
return	que consista en ||| bool	count=1
function_name	y escribe ||| write	count=2
function_name	tipo de la columna ||| column type	count=1
return	la opacidad de ||| float	count=1
function_name	devuelve ||| introspection get	count=1
function_name	una ||| set using exceptions	count=2
function_name	que ||| frequency	count=2
function_name	cola de mensajes de ||| queue	count=1
function_name	del apuntador ||| uudecode	count=1
function_name	[function_name_1] altura ||| [function_name_1] [function_name_2]	count=1
arg_pair	o más bases de ||| resource $id string $databases	count=1
function_name	grafema de la última ||| grapheme strripos	count=1
namespace	excepto que ||| function	count=2
function_name	estándar ||| crypt	count=1
function_name	realizar los cálculos de ||| compat	count=1
function_name	fann_get_cascade_candidate_change_fraction() ||| get cascade candidate	count=1
function_name	el límite de fallo ||| fail limit	count=1
function_name	lugar ||| set using exceptions	count=2
function_name	color de ||| background color	count=2
function_name	[function_name_1] nombre del ||| [function_name_2] [function_name_1]	count=1
return	binaria dada en la ||| bool	count=1
arg_pair	punto x3 y3 ||| float $y3	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] module [function_name_2]	count=2
function_name	el número máximo ||| highlight max	count=2
function_name	el índice de la ||| iterator index	count=1
return	la ||| yaf_application	count=1
arg_pair	puede utilizarse para ||| int $field_offset	count=1
function_name	la frecuencia de documento ||| frequency	count=1
arg_pair	un servidor local o ||| string $database_name	count=1
return	para determinar si ||| bool	count=1
function_name	un guid binario ||| mssql guid	count=1
arg_pair	activa el comportamiento automático ||| resource $connection_id bool $onoff	count=1
function_name	pertenecen ||| class names	count=1
function_name	de dos dimensiones con ||| extended	count=1
function_name	[function_name_1] modo ||| enc [function_name_1] block [function_name_2]	count=1
return	al cliente de la ||| void	count=1
arg_pair	offset especificado ||| resource $context int $offset	count=1
function_name	[function_name] adicional compara ||| [function_name]	count=3
namespace	bordes de la imagen ||| gmagick	count=2
function_name	envía la [function_name_2] ||| [function_name_1] [function_name_2]	count=4
namespace	cambia el directorio ||| function	count=1
namespace	sobre las capas de ||| zmqdevice	count=1
namespace	función ||| gearmanworker	count=1
return	encuentra disponible la lista ||| int	count=1
function_name	consulta la publicación de ||| get ap	count=1
function_name	en la que las ||| min	count=1
function_name	y sus padres ||| implements	count=1
arg_pair	un string utilizando el ||| string $str	count=1
function_name	devuelve el tiempo cuando ||| get	count=1
return	datos ||| int	count=1
function_name	establece la ||| set ap	count=1
function_name	las ||| mlt	count=1
arg_pair	un umbral ||| float $threshold int $channel	count=1
return	se ||| string	count=2
function_name	este serán ||| mlt min doc frequency	count=1
function_name	siguiente si varias instrucciones ||| next	count=1
namespace	devolver un valor especial ||| rarexception	count=1
return	el retraso de la ||| int	count=1
arg_pair	str en ||| mixed $fd string $str	count=1
namespace	de direcciones ||| zmqdevice	count=1
function_name	el número de bits ||| get bits	count=1
arg_pair	connection_string ||| int $connect_type	count=1
function_name	campo en ||| field	count=1
function	[function_name_1] de buzones ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	un archivo phar por ||| string $filename	count=1
function_name	con libeio ||| get event	count=1
function_name	exactamente como pdf_arc() ||| pdf arcn	count=1
arg_pair	permite enviar emails ||| string $message string $additional_headers	count=1
function_name	establece el [function_name_2] ||| [function_name_1] sarprop weight [function_name_2]	count=1
function_name	autenticación donde ||| svn auth	count=1
namespace	define o ||| function	count=2
function_name	devuelve el último ||| get error	count=1
namespace	inactividad de entrada/salida en ||| gearmanclient	count=1
function_name	px_get_record() pero utiliza internamente ||| px retrieve record	count=1
namespace	color de ||| gmagickdraw	count=1
function_name	sobre ||| status	count=1
function_name	[function_name_1] candidatas ||| [function_name_2] [function_name_1]	count=20
function_name	disponible la lista ||| image	count=1
function_name	la función geoip_country_code_by_name() devolverá ||| country code by	count=1
function_name	[function_name] creada ||| [function_name]	count=3
function_name	encuentra disponible la lista ||| ps open memory	count=1
return	el proveedor ||| bool	count=1
function_name	y extrae cada ||| uudecode	count=1
function_name	obtiene la versión del ||| get version	count=1
namespace	archivo temporal ||| function	count=1
arg_pair	conexión ||| mysqlnd_connection $connection string $host	count=1
function_name	información sobre [function_name_2] ||| [function_name_2] [function_name_1]	count=11
function_name	primer atributo de ||| ldap first attribute	count=2
arg_pair	constante imagetype_xxx dada ||| bool $include_dot	count=1
namespace	distribuido por ||| function	count=1
function_name	la desencripta ||| openssl decrypt	count=1
arg_pair	de la red ||| int $from_neuron	count=1
function_name	breaker parameter ||| tie	count=1
arg_pair	la ||| int $width	count=1
function_name	atributos ||| ldap get attributes	count=2
function_name	establece ||| set read	count=1
function_name	inverso ||| gmp invert	count=2
function_name	el ámbito del namespace ||| lookup namespace	count=1
arg_pair	variable_name en ||| resource $introspection string $variable_name	count=1
function	obtiene [arg_pair_2] ||| [function_name_1] record [arg_pair_2]	count=1
arg_pair	de una función o ||| string $filename int $flags	count=1
function_name	la cadena artista de ||| artist	count=1
function_name	[function_name_1] el siguiente ||| [function_name_1] [function_name_2] attribute	count=1
function_name	datos establecida y libera ||| dba	count=1
function	entrada para [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	de ||| setimageiterations	count=1
function_name	el ||| odbc autocommit	count=2
function_name	manipulador curl para el ||| curl init	count=1
function_name	elimina el [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	la clase especificada ||| mixed $class	count=1
return	en el array ||| array	count=2
namespace	mientras preserva ||| gmagick	count=1
function_name	lee datos clob de ||| read clob	count=1
arg_pair	la información data la ||| string $data	count=1
function_name	la zona horaria correspondiente ||| geoip time zone by country	count=1
function_name	la altura de ||| height	count=1
arg_pair	origen a una ||| string $uri	count=1
arg_pair	una ||| string $name string $comment	count=1
return	objetivo en la ||| bool	count=1
return	a la función de ||| bool	count=1
function_name	semáforo pueda ser ||| sem acquire	count=1
arg_pair	especifica por dn se ||| resource $link_identifier string $dn	count=1
function_name	un cursor en ||| cursor	count=1
arg_pair	funciones socket_create() ||| int $length	count=1
return	carácter especificado por ||| string	count=1
return	de ||| string	count=14
namespace	clave ||| arrayiterator	count=1
arg_pair	un formato predefinido ||| int $direction	count=1
function_name	devuelve la representación de ||| serialize	count=1
arg_pair	define el contenedor ||| resource $fdf_document string $frame_name	count=1
arg_pair	un conjunto ||| resource $result	count=3
function_name	devuelve ||| curl	count=1
function_name	escape de ||| escape	count=1
function_name	advertencia esta función ||| open	count=1
arg_pair	de la clave /status ||| resource $fdf_document string $status	count=1
function_name	petición de recodificación dada ||| recode file	count=1
arg_pair	conexión de la ||| mysqlnd_connection $connection	count=1
arg_pair	bloque de texto con ||| string $blockname string $text	count=1
arg_pair	una variable al ||| string $name mixed $value	count=1
function_name	las cabeceras de petición ||| headers	count=1
function_name	el diccionario indicado mediante ||| closedict	count=1
namespace	valores que se establecieron ||| function	count=1
namespace	tipo o false si ||| function	count=1
arg_pair	php var_array al ||| int $max_table_length	count=1
function_name	especifica el término de ||| bound	count=1
function_name	marcador sujeto a ||| bookmark	count=1
arg_pair	base ||| resource $link_identifier	count=1
arg_pair	una implementación de la ||| string $offset string $value	count=1
namespace	la época ||| function	count=1
function_name	analiza datos ||| parse str	count=1
arg_pair	de los ||| string $str	count=1
function_name	de una entrada de ||| zip entry	count=1
function_name	procedimientos ||| db2 procedure columns	count=1
namespace	de ||| memcached	count=1
function_name	encuentra ||| open	count=1
function_name	el tamaño ||| cubrid lob2 size	count=1
function_name	punto blanco de la ||| image white point	count=1
function	javascript [arg_pair_2] ||| [function_name_1] action resource $fdf_document [arg_pair_2] int	count=2
function_name	determina el número máximo ||| cascade max	count=1
namespace	seguimiento tailable que son ||| mongocursor	count=1
function_name	devuelve el ||| get state variable	count=1
namespace	máximo ||| gearmanclient	count=1
function_name	[function_name_1] trazado ||| [function_name_2] color [function_name_1]	count=1
function	una [function_name_1] [arg_pair_2] formulario ||| submit form [function_name_1] resource $fdf_document [arg_pair_2] int	count=1
function_name	la información de ||| info	count=3
function_name	la ||| gmp prob	count=2
function_name	el arcocoseno para cada ||| trader acos	count=1
function_name	establece la calidad de ||| mysqlnd ms set qos	count=1
function_name	3 partes: el ||| footer	count=1
namespace	en des ||| function	count=1
arg_pair	desde el archivo ||| string $filename	count=1
function_name	obtener el estado actualizado ||| status callback	count=1
function_name	elemento cuyo índice es ||| elem	count=1
arg_pair	la última transferencia ||| resource $ch int $opt	count=1
function_name	la cadena ||| load string	count=1
function_name	descripción ||| cairo format stride for width	count=2
namespace	flexible a menos que ||| function	count=1
function_name	el número de entradas ||| num input	count=1
function_name	si y sólo si ||| using exceptions	count=1
function_name	la fila [function_name_2] ||| function array [function_name_2] [function_name_1]	count=1
function_name	asociativo que corresponde ||| assoc	count=1
function_name	php ||| fgetss	count=1
arg_pair	offset a la ||| resource $lob_identifier int $offset	count=1
function_name	sea truncado a ||| ftruncate	count=1
function	fichero [arg_pair_2] ||| [function_name_1] rename [arg_pair_2]	count=2
arg_pair	reabre el flujo espeicificado ||| int $options int $n_retries	count=1
function_name	los iteradores ||| array	count=1
rest	array con [function_2] ||| [function_2] [return_1]	count=1
function_name	mssql_connect() ||| mssql	count=1
namespace	[namespace] en ||| [namespace]	count=14
function_name	o no abstracta ||| abstract	count=1
return	desde la época unix ||| int	count=1
function_name	espera de ||| set query timeout	count=1
namespace	el número de segundos ||| function	count=1
arg_pair	buzón especificado por mailbox ||| string $mailbox int $options	count=1
arg_pair	de fuentes font devuelto ||| resource $pdfdoc int $font	count=1
arg_pair	esta función intenta ||| string $filename	count=1
function_name	el logaritmo natural de ||| log	count=1
function_name	la información del esquema ||| schema	count=1
function_name	[function_name_1] objeto documento ||| [function_name_1] [function_name_2]	count=1
function_name	función devuelve true si ||| mcrypt module is	count=1
function_name	añade ||| add to	count=1
arg_pair	repetidamente a filter_var() ||| mixed $definition	count=1
function_name	reemplaza [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	una ||| fetch array	count=2
arg_pair	apunta a una ||| string $url	count=1
namespace	dada por ||| function	count=8
return	y esté en la ||| bool	count=1
function_name	retorna bloques por ej., ||| block	count=1
function_name	respuesta xml ||| xml response	count=2
function_name	obtiene el color actual ||| get	count=2
arg_pair	un ||| resource $font_index string $encodingfile	count=1
function_name	[function_name_1] campos del ||| [function_name_2] [function_name_1]	count=2
namespace	puedan aplicarse ||| imagickkernel	count=1
arg_pair	los componentes rgb dados ||| int $red	count=1
arg_pair	un vector ||| resource $ann array $input_vector	count=1
function_name	[function_name_1] temperatura ||| [function_name_1] sarprop [function_name_2]	count=2
function_name	acerca de la fecha ||| date parse	count=1
function_name	extrase el pid ||| get pid	count=1
arg_pair	un nuevo valor y ||| int $value	count=1
function_name	y devolver ||| using exceptions	count=1
function_name	traslada el origen ||| pdf translate	count=1
function_name	seguimiento tailable ||| tailable	count=1
function_name	lista de los ||| enchant broker list	count=1
function_name	devuelve un ||| mysqli get	count=1
function_name	sesión ||| getsid	count=1
arg_pair	n por d ||| gmp $d	count=1
return	sql más reciente ||| int	count=1
function_name	de la fila ||| mysqli fetch	count=1
function_name	establece la calidad ||| ms set	count=1
function_name	ldap [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	mediante los datos ||| mixed $data	count=1
function_name	número es primo ||| gmp prob	count=1
return	del apuntador de ||| array	count=1
function_name	proceso ||| proc	count=1
function_name	información sobre el último ||| last	count=1
function_name	[function_name_1] el semáforo ||| [function_name_2] [function_name_1]	count=2
function_name	botón ||| raiseimage	count=1
return	una cadena hexadecimal ||| string	count=1
arg_pair	ereg_replace() excepto que ||| string $pattern string $replacement	count=1
return	los extremos mínimo y ||| array	count=2
function	fichero a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	nombre de etiqueta ||| tag name	count=1
namespace	caracteres que aparecen en ||| function	count=1
function_name	el usuario) ||| restore	count=2
function_name	elementos invertido ||| array reverse	count=1
namespace	describe ||| ev	count=1
arg_pair	string utilizando ||| string $str	count=1
function_name	asignación ||| sma	count=1
arg_pair	cc [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	eio_* ||| int $pri	count=1
function	escala de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	errores ||| trigger error	count=1
return	establece ||| bool	count=1
function_name	de parámetros ||| open	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] module [function_name_2]	count=4
function_name	método devuelve ||| to	count=3
namespace	un carácter «en ||| intlchar	count=1
function_name	estancamiento de candidatas ||| stagnation	count=1
arg_pair	y el secreto para ||| string $token_secret	count=1
function_name	ruido granular ||| despeckleimage	count=1
function_name	acción [function_name_2] ||| [function_name_2] [function_name_1] resource	count=2
namespace	documento ||| domdocument	count=4
function_name	trabajador envía una excepción ||| exception	count=1
arg_pair	es decir el valor ||| int $face	count=1
return	parecida a sybase_connect() ||| resource	count=1
function_name	blanco del ||| imagecreate	count=1
function_name	previa de la relación ||| dbplus prev	count=1
arg_pair	devuelve un resultado que ||| resource $connection	count=1
arg_pair	una ||| mixed $background	count=1
function_name	no analizadas para el ||| set unparsed	count=1
return	dado ||| resource	count=1
function_name	ser deserializado ||| wakeup	count=1
function_name	cursores de seguimiento tailable ||| tailable	count=1
function_name	de la fuente ||| font	count=1
function_name	proveedor oauth ||| add required parameter	count=1
arg_pair	desde buf ||| string $buf	count=1
function_name	si ||| namespace	count=1
arg_pair	última aparición de needle ||| mixed $needle	count=1
function_name	excepciones anterior el cuál ||| exception handler	count=1
function_name	una diferencia binaria de ||| bdiff	count=1
function_name	el tamaño actual de ||| zip entry	count=1
namespace	del nodo ||| domnode	count=1
function_name	de disposición de una ||| dispose	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] floodfill image [arg_pair_2]	count=3
function_name	caché de ||| wincache	count=1
return	todavía ||| int	count=1
function_name	codificador ||| writing	count=1
function_name	ssl para ||| set sslchecks	count=1
return	virtual ||| string	count=1
function_name	la apariencia de ||| set	count=1
arg_pair	una variable de ||| string $name	count=1
function_name	el número máximo ||| max analyzed	count=1
return	copia información entre un ||| resource	count=1
function_name	de sarprop ||| sarprop step	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $mailbox [arg_pair_2]	count=4
function_name	[function_name_1] fuente usada ||| [function_name_1] [function_name_2]	count=3
arg_pair	devolverá la ||| resource $connection_id	count=1
function_name	cabo el formateo textline ||| info textline	count=1
arg_pair	con ciertas ||| resource $result int $field_offset	count=1
arg_pair	profundidad de una canal ||| int $channel int $depth	count=1
function_name	un ||| load from string	count=1
arg_pair	desde in_charset a out_charset ||| string $in_charset string $out_charset	count=1
arg_pair	desde el xml dump ||| string $rrd_file	count=1
arg_pair	encripta data con la ||| string $data	count=1
function	añade un [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	de una imagen ||| gmagick	count=1
function_name	negro del tamaño ||| imagecreatetruecolor	count=1
arg_pair	conectada completamente ||| int $num_neurons1 int $num_neurons2	count=1
arg_pair	archivo local en ||| string $local_file	count=1
function_name	y extrae ||| uudecode	count=1
function_name	finaliza la ||| end	count=2
arg_pair	a una ||| string $uri	count=1
return	devolver ||| void	count=1
function_name	encuentre un error ||| set	count=1
function_name	el proveedor oauth ||| add required parameter	count=1
arg_pair	needle ||| string $needle	count=1
namespace	persistente a ||| function	count=1
arg_pair	relation bajo un nuevo ||| string $name resource $relation	count=1
function_name	los dispositivos ||| construct	count=1
function_name	[function_name_1] épocas de ||| [function_name_1] candidate stagnation [function_name_2]	count=1
function	[function_name_1] relation la ||| [function_name_1] [arg_pair_2]	count=6
function_name	datos de entrenamiento vacía ||| train	count=1
return	en el manejador de ||| bool	count=1
namespace	esquema en ||| sdo_das_xml	count=1
return	el objeto ||| yaf_response_abstract	count=1
function_name	devolver un ||| set using	count=1
function_name	de ||| is default namespace	count=2
function_name	[function_name_1] blanco de ||| [function_name_2] [function_name_1]	count=4
function_name	devuelve el índice ||| get	count=1
function	ccl [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	se ||| ps open memory	count=1
return	final en ||| int	count=1
function_name	verde de ||| image green	count=1
function_name	descripción de la ||| cairo pattern get color stop	count=1
namespace	[namespace] como ||| [namespace]	count=4
arg_pair	una función escalar de ||| string $name mixed $callback	count=1
arg_pair	llamarla ||| resource $connection_id	count=1
function_name	similar al efecto logrado ||| sepia tone	count=1
return	de relleno usado cuando ||| void	count=1
function_name	función devolverá ||| odbc data	count=1
function_name	a las candidatas antes ||| fann get cascade	count=2
function_name	página ||| slide	count=1
arg_pair	necesario para la mayoría ||| string $character_set	count=1
function_name	tiempo de espera ||| timeout	count=6
function_name	namespace es declarado ||| start namespace decl	count=1
arg_pair	en una búsqueda en ||| string $msgid2 int $n	count=1
namespace	cromaticidad ||| gmagick	count=2
namespace	de otras tablas que ||| function	count=1
function_name	de ||| using exceptions	count=4
namespace	caracteres que se ||| function	count=1
function_name	bloque [function_name] ||| [function_name] fill	count=3
function_name	de tendencias de cada ||| bias array	count=1
arg_pair	el valor de retorno ||| int $type mixed $value	count=1
namespace	uno o más atributos ||| function	count=1
arg_pair	filtros adjuntos a ||| int $read_write mixed $params	count=2
return	[return] ruta absulota ||| [return]	count=1
function_name	abierto mediante el uso ||| get status	count=1
function_name	cabo una transacción ||| commit	count=1
namespace	si no se ||| function	count=1
function_name	interpretación del texto ||| text rendering	count=1
function_name	en mayúsculas ||| get cap height	count=1
function_name	fila en forma de ||| fetch	count=1
function_name	del texto ||| fgetss	count=1
function_name	imagen ||| mask image	count=1
return	parte de ||| bool	count=1
function_name	filas [function_name_2] ||| [function_name_2] [function_name_1]	count=42
namespace	método se ||| mongocursor	count=1
arg_pair	del archivo indicado ||| resource $mimemail mixed $filename	count=1
arg_pair	con ||| string $servername	count=1
function_name	[function_name_1] que ||| [function_name_2] [function_name_1]	count=5
function_name	en por ||| min doc frequency	count=1
arg_pair	cadena ||| string $key	count=1
function_name	[function_name_1] rojo de ||| [function_name_2] [function_name_1]	count=8
function_name	cuando la ||| set using exceptions	count=1
function_name	excepciones anterior el cuál ||| exception	count=1
function_name	blob ||| blob	count=6
function_name	devuelve [function_name_2] ||| [function_name_2] [function_name_1]	count=234
function_name	una imagen ||| image colorspace	count=1
function_name	el almaceén ||| reset	count=1
function_name	la zona horaria ||| time zone by country and	count=1
return	servicios colas o ||| zmqsocket	count=1
function	la relación [arg_pair_2] ||| [function_name_1] rcrtlike [arg_pair_2]	count=2
arg_pair	específica en la base ||| int $field_number	count=1
namespace	la fuente ||| harufont	count=3
function_name	una ||| ingres fetch array	count=1
arg_pair	base de datos ||| string $database	count=2
function_name	devuelve el estado de ||| get	count=1
function_name	generar para remarcación ||| highlight	count=1
arg_pair	usando un método y ||| string $method	count=1
return	y como ||| array	count=1
function_name	[function_name] y ||| ps open [function_name]	count=1
function_name	db2_connect() y devuelve el ||| db2	count=1
function_name	una ||| zip entry filesize	count=2
function_name	o una jerarquía entera ||| checkout	count=1
function_name	número total de conexiones ||| fann get total	count=1
namespace	un error una excepción ||| rarexception	count=1
namespace	un mensaje de texto ||| function	count=1
function_name	es ||| is default namespace	count=2
namespace	la posición ||| iterator	count=1
function	[function_name_1] el búfer ||| [arg_pair_2] [function_name_1]	count=1
namespace	y socket. -- zguide ||| zmqdevice	count=1
arg_pair	link_identifier ||| resource $link_identifier	count=1
return	información sobre un ||| array	count=1
arg_pair	plural de ||| string $msgid1	count=1
function_name	último error al conectar ||| stomp connect error	count=1
return	tipo de la variable ||| string	count=1
arg_pair	primera ocurrencia de un ||| string $haystack string $needle	count=1
function_name	un guid binario de ||| mssql guid	count=1
function_name	rellenado por la ||| str pad	count=1
function_name	iteradores adjuntos ||| count iterators	count=1
namespace	y es similar a ||| function	count=1
return	secuencia ||| int	count=1
arg_pair	de los caracteres que ||| string $str	count=1
function_name	el último mensaje de ||| last error	count=1
return	abierto ||| array	count=1
arg_pair	nombre distinguido que se ||| array $dn resource $privkey	count=1
function_name	lista personal de ||| personal	count=1
return	las extensiones de ||| array	count=1
function_name	más detalles del estado ||| status message	count=1
function_name	de entorno de ||| setenv	count=1
arg_pair	por mailbox ||| int $options	count=1
arg_pair	stream_socket_server() ||| resource $server_socket	count=1
function_name	disponibles después de ||| odbc	count=1
function_name	retorna el nombre largo ||| get frame long name	count=1
function_name	[function_name_1] de ||| [function_name_2] compression [function_name_1]	count=3
function	control [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name] conjunto de ||| [function_name]	count=3
return	es parte de ||| bool	count=1
arg_pair	el método gearmanclient::setstatuscallback() ||| string $context	count=1
arg_pair	un array de todos ||| resource $imap_stream	count=1
return	es una ||| mixed	count=1
namespace	un caracter que ||| function	count=1
function_name	error ||| bzerror	count=1
arg_pair	automática de valores largos ||| int $threshold float $min_savings	count=1
function_name	que el semáforo pueda ||| sem acquire	count=1
function_name	calidad de compresión ||| compression quality	count=3
function_name	y almacena el resultado ||| xdiff file bpatch	count=1
function_name	esta función devolverá ||| odbc data	count=1
function_name	mediante el ||| get status	count=1
namespace	trabajo para ver si ||| gearmanclient	count=1
arg_pair	left top and ||| float $top	count=1
function_name	primera [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	encuentra disponible la lista ||| open memory	count=1
function_name	la ubicaciones de ||| cert locations	count=1
function_name	mime ||| to mime	count=1
return	como es ||| mixed	count=1
function_name	el rastreo de oracle ||| oci	count=1
function_name	encuentra disponible la lista ||| ps open	count=1
arg_pair	msglist al [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	rows ||| copy	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cache [function_name_2]	count=5
function_name	vacío con la ||| empty	count=1
function_name	de sybase_fetch_row() que ||| sybase fetch assoc	count=1
arg_pair	la mayoría de las ||| string $character_set	count=1
function_name	establece el tipo del ||| set type	count=1
function_name	campo de una consulta ||| field	count=1
arg_pair	es una ||| string $collection	count=1
function_name	devuelve ||| get field	count=4
function_name	en ||| set	count=3
arg_pair	eventos especificada ||| resource $event_base	count=1
arg_pair	cualquier abstracción que ||| zmqsocket $frontend zmqsocket $backend	count=1
function	[function_name_1] operaciones update ||| [arg_pair_2] [function_name_1]	count=1
namespace	el valor actual del ||| harupage	count=1
function_name	sftp desde un ||| sftp	count=1
function_name	para el objeto ||| construct	count=1
function_name	en la ||| mlt	count=1
function_name	[function_name_1] de salidas ||| [function_name_1] [function_name_2]	count=2
arg_pair	función es una ||| resource $result	count=1
function_name	un socket creado ||| stream socket accept	count=1
function_name	trabajo desde el repositorio ||| svn checkout	count=1
function_name	tiene atributos ||| has attributes	count=2
function_name	escribe al ||| write	count=2
arg_pair	de una imagen tiff ||| string $filename int $width	count=1
namespace	o más atributos ||| function	count=1
function_name	[function_name_1] char ||| [function_name_2] [function_name_1]	count=1
arg_pair	datos codificados en raw/gzip/zlib ||| string $data string $max_decoded_len	count=1
function_name	alfa [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	de los mensajes ||| imap	count=2
return	los perfiles ||| float	count=1
return	progreso en ||| bool	count=1
return	de dsn ||| array	count=1
function_name	dado y extrae ||| uudecode	count=1
function	relación [arg_pair_2] ||| [function_name_1] rcrtlike [arg_pair_2]	count=2
function_name	cada ||| uudecode all	count=2
namespace	[namespace] el conjunto ||| [namespace]	count=3
arg_pair	para la conexión actual ||| string $charset resource $link_identifier	count=1
namespace	usa la ||| function	count=1
namespace	seguimiento tailable ||| mongocursor	count=1
function_name	a sybase_connect() ||| pconnect	count=1
function_name	[function_name_1] varíadica ||| [function_name_2] [function_name_1]	count=1
function_name	encuentre un error ||| set using	count=1
arg_pair	posición ord del vector ||| int $ord	count=1
return	en activado por ||| bool	count=1
function_name	por el puntero dado ||| bzerrstr	count=1
function_name	libera un descriptor ||| oci free descriptor	count=1
function_name	sistema ||| pdf rotate	count=2
function_name	de paso máximo ||| get rprop delta max	count=1
return	ømq pueden ||| zmqsocket	count=1
function_name	obtiene el primer ||| ldap first	count=1
function_name	entrada de ||| zip entry	count=1
function_name	espera de ||| timeout	count=4
function_name	servidor virtual ||| server by	count=1
function_name	documentos como ||| doc frequency	count=1
arg_pair	para el dominio ||| string $domain	count=1
function_name	lo menos ||| mlt min doc	count=1
arg_pair	caso de éxito cero ||| string $zurl	count=1
function_name	instancia de haruannotation ||| text annotation	count=1
namespace	cairoimagesuface del ||| cairoimagesurface	count=1
arg_pair	nombre distinguido que ||| array $dn	count=1
arg_pair	msglist al buzón ||| resource $imap_stream string $msglist	count=1
function_name	[function_name] externos de ||| set external [function_name]	count=1
function_name	[function_name_1] largo ||| [function_name_2] [function_name_1]	count=6
function_name	de post ||| post	count=1
function_name	unas ||| ps moveto	count=2
arg_pair	[arg_pair_1] el modo ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	fila del resultado frontbase ||| fbsql	count=1
function_name	variables de ||| convert variables	count=1
return	para el ||| int	count=2
function_name	descripción de la ||| cairo ps surface restrict to level	count=1
namespace	un carácter ||| intlchar	count=6
function_name	covierte los píxeles planos ||| encipher image	count=1
function_name	codificación de ||| mb detect encoding	count=1
function_name	cursor del ||| kill cursor	count=1
arg_pair	data y devuelve los ||| string $data string $mode	count=1
function_name	la versión escapada de ||| cubrid real escape	count=1
function_name	tupla de ||| dbplus	count=1
return	mientras está en ejecución ||| bool	count=1
return	una única ||| void	count=1
function_name	cuando la biblioteca unrar ||| using exceptions	count=1
namespace	nodo es parte de ||| tidynode	count=1
namespace	esta función devolverá ||| function	count=1
function	cierra el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	con ||| void	count=1
function_name	fichero gzip2 ||| bzwrite	count=1
function_name	contexto de [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	demás funciones de sisitema ||| stream wrapper	count=1
function_name	[function_name_1] lee ||| [function_name_2] [function_name_1]	count=3
arg_pair	uso con ifx_do() ||| int $cursor_def mixed $blobidarray	count=1
function_name	obtiene la actual ||| current	count=1
function_name	por ||| oci	count=1
function_name	cookie de ||| cookie	count=1
return	este para que ambos ||| void	count=1
function_name	iterador aún ||| valid	count=1
function_name	la función usa la ||| gmp prob	count=1
function_name	imagen para crear ||| image	count=1
function_name	se encuentra disponible ||| memory	count=1
function_name	encuentre un ||| set using exceptions	count=1
function_name	indicando ||| set	count=1
function	[function_name_1] la cuota ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=1
function_name	cadena de bytes pseudo-aleatoria ||| openssl random pseudo bytes	count=1
function_name	guid ||| guid string	count=2
function_name	genera desviaciones [function_name] desde una ||| [function_name] gen	count=1
function_name	memcached::touch() con la ||| touch	count=1
arg_pair	salto ||| bool $cut	count=1
function_name	a sybase_connect() con dos ||| sybase	count=1
function_name	validación ||| source	count=1
function_name	que no ||| mlt	count=1
function_name	borrar un servicio de ||| win32 delete service	count=1
function_name	de color en ||| color	count=1
function_name	la ||| set flatness	count=4
function_name	cuando la biblioteca ||| using	count=1
function_name	tipo id ||| id	count=2
arg_pair	entrecomilla el ||| string $string int $parameter_type	count=1
namespace	el número ||| sqlite3	count=1
function_name	nodo del atributo en ||| attribute	count=1
function_name	el número ||| num fields	count=1
function_name	la descripción de la ||| get surface	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] quickprop [function_name_2]	count=4
return	en la secuencia especificada ||| bool	count=1
namespace	xml que ya ha ||| sdo_das_xml	count=1
namespace	de información sobre los ||| function	count=1
function_name	[function_name_1] secundarios ||| [function_name_1] [function_name_2]	count=8
function_name	el primer índice ausente ||| first empty	count=1
return	actual y ||| int	count=1
function_name	error de cualquier ||| bzerrstr	count=1
function_name	reintentos en caso de ||| sybase deadlock retry count	count=1
arg_pair	con un umbral ||| float $threshold int $channel	count=1
function_name	es el espacio de ||| default	count=1
function_name	[function_name_1] de etiqueta ||| elements [function_name_2] [function_name_1]	count=4
arg_pair	imágenes usando un ||| int $width	count=1
function_name	versión escapada ||| cubrid real escape	count=1
function_name	servicio extendido ||| yaz es	count=1
function_name	el logaritmo natural para ||| ln	count=1
function_name	mensajes de: estado ||| status string	count=1
return	colores encontrados en ||| bool	count=1
function_name	[function_name_1] pendientes ||| [function_name_2] [function_name_1]	count=1
function_name	documentos como este ||| mlt min doc	count=1
function_name	rebobinar ||| rewind	count=1
function_name	[function_name_1] preparada anterioremente ||| function bool [function_name_1] [function_name_2]	count=1
arg_pair	un resultado ||| resource $result int $index	count=1
namespace	especificado ||| domnode	count=1
function_name	[function_name_1] mínima ||| [function_name_1] [function_name_2]	count=5
arg_pair	por fd al ||| mixed $fd	count=1
function_name	color o textura ||| polygon	count=1
arg_pair	define el de ||| int $type	count=1
function_name	recupera el database ||| database	count=1
function_name	los traits ||| class uses	count=1
function_name	devuelve la frecuencia de ||| get	count=2
arg_pair	punto x3 y3 ||| float $x3 float $y3	count=1
arg_pair	conexión link_identifier especificado ||| resource $link_identifier	count=1
function_name	invertidas antes de ||| addcslashes	count=1
arg_pair	de datos disponible ||| int $row	count=1
function_name	imagen con un ||| image	count=1
function_name	crea ||| fann create	count=2
function	[function_name_1] y su ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	la codificación de caracteres ||| string $encoding	count=1
function_name	selecciona un umbral ||| threshold image	count=1
function_name	obtiene el servicio ||| info get service	count=3
function_name	resolver ||| resolve	count=1
function_name	la que las palabras ||| min	count=1
function_name	de caché ||| cache	count=1
namespace	lo mismo que ||| function	count=1
function_name	capas de mensaje ||| construct	count=1
namespace	áreas de ||| function	count=1
namespace	función de retorno apropiada ||| gearmanworker	count=1
function_name	frontbase asociado con el ||| fbsql	count=1
function_name	de tidy ||| tidy	count=1
function_name	algoritmo estándar basado ||| crypt	count=1
namespace	descriptor previamente ||| oci-lob	count=1
function_name	si está disponible o ||| available	count=1
arg_pair	imagen ||| int $x	count=1
function_name	el uso de ||| get status	count=1
return	la ||| reflectionclass	count=1
function_name	devuelve un mensaje ||| curl strerror	count=1
function_name	añade ||| dbase add record	count=2
function_name	la ||| set slide show	count=2
function	[function_name_1] relation bajo ||| [function_name_1] rcrtlike [arg_pair_2]	count=2
function_name	columna devuelta de una ||| db2 fetch	count=1
return	con el mensaje ||| string	count=1
function_name	obtiene el factor de ||| get	count=2
arg_pair	el uid dado ||| resource $imap_stream int $uid	count=1
arg_pair	nombre distinguido que ||| resource $privkey	count=1
function_name	si ||| exceptions	count=2
arg_pair	formato csv a ||| string $enclosure	count=1
function_name	mysql ||| mysql get	count=1
arg_pair	en una fuente arbitraria ||| resource $p	count=1
return	el búfer de salida ||| int	count=1
function_name	guarda el estado actual ||| pdf save	count=1
function_name	implicación ||| variant imp	count=2
function_name	comporta como strftime() excepto ||| gmstrftime	count=1
function_name	abre un blob ||| ibase blob	count=1
namespace	[namespace] < ||| [namespace]	count=1
function_name	añade ||| dbplus add	count=1
return	almacenamiento en ||| bool	count=2
function_name	la potencia de ||| pow	count=1
function_name	facet.date.start ||| facet date start	count=1
function_name	lo menos tantos ||| doc	count=1
function_name	a este para que ||| kernel	count=1
function_name	[function_name_1] [function_name_2] campo dado ||| function string fdf [function_name_2] field [function_name_1] resource $fdf_document string $fieldname	count=8
function_name	una propiedad enumerada o ||| property value	count=1
arg_pair	tuple de relation ||| resource $relation array $tuple	count=1
function_name	exporta ||| openssl spki export	count=1
arg_pair	un archivo de imagen ||| string $filename	count=1
function_name	devolverá la lista de ||| source	count=1
function_name	cursor: ||| count	count=1
namespace	y modificación de ||| function	count=1
function_name	describe el código resultante ||| result message	count=1
namespace	o más atributos al ||| function	count=1
arg_pair	php del texto ||| resource $handle	count=1
function_name	de datos ||| start	count=1
namespace	a imap_alerts() o el ||| function	count=1
function_name	devuelve ||| get host	count=1
function_name	máximo de caracteres del ||| max	count=2
function_name	documentos ||| set	count=1
return	una consulta ||| mixed	count=1
function_name	error sqlstate de ||| sqlstate	count=2
arg_pair	obtiene y ordena números ||| string $charset	count=1
function_name	como ||| tailable	count=1
function_name	de estancamiento de candidatas ||| stagnation	count=1
return	advertencia ||| int	count=1
return	de ||| array	count=8
arg_pair	gamma a image ||| float $inputgamma	count=1
function_name	site exec ||| exec	count=1
function_name	del ||| mailparse	count=1
function_name	de la consulta ||| query chars	count=1
function	[function_name_1] por relation ||| [function_name_1] rcrtlike [arg_pair_2]	count=3
namespace	la base ||| sqlite3	count=1
namespace	en [namespace] ||| [namespace]	count=2
namespace	usa para ejecutar yaf_application ||| yaf_application	count=1
arg_pair	utilizando el algoritmo ||| string $str	count=1
function_name	indicando error cuando la ||| using	count=1
arg_pair	alimentarlo a una rna ||| array $input_vector	count=1
return	actualmente en progreso ||| bool	count=1
return	definida por ||| bool	count=3
arg_pair	blanco u ||| string $str	count=1
namespace	de un lob ||| oci-lob	count=1
function_name	frecuencia bajo la ||| frequency	count=1
function_name	establece el conjunto ||| mysql set charset	count=3
arg_pair	un mensaje ||| integer $mode	count=1
function_name	el debug output si ||| memcache debug	count=1
arg_pair	start ||| gmp $a int $start	count=2
arg_pair	esta función ||| resource $psdoc	count=1
arg_pair	una nueva copia ||| bool $backup_original_files	count=1
arg_pair	un array de ||| resource $imap_stream string $ref	count=1
function_name	parche binario desde el ||| xdiff file	count=1
function_name	términos ||| terms	count=2
function_name	un parámetro variádico ||| variadic	count=1
function_name	la uri ||| uri	count=1
return	una excepción de ||| void	count=1
arg_pair	objetivo especificado ||| string $target	count=1
function_name	indica si ||| is default namespace	count=1
namespace	el nivel de ||| function	count=2
function_name	devuelve como un nuevo ||| get	count=1
namespace	lista doblemente enlazada ||| spldoublylinkedlist	count=3
function_name	siguiente fila ||| fetch	count=4
function_name	más marcadores de parámetro ||| db2 prepare	count=1
namespace	la distancia de ||| harufont	count=1
function_name	función ||| number format	count=2
function_name	mediante ||| crack closedict	count=2
return	haya algún tipo de ||| int	count=1
arg_pair	una ||| string $glyphname	count=1
return	lugar de ||| void	count=1
return	rna basada en parámetros ||| bool	count=3
arg_pair	con un algoritmo de ||| float $beta int $channel	count=1
function_name	de prioridad de ||| priority init	count=1
arg_pair	de yaf_config_ini ||| string $config_file string $section	count=1
namespace	el número de ||| solrquery	count=1
arg_pair	el nombre distinguido que ||| resource $privkey	count=1
arg_pair	el de estilo ||| float $disp_time	count=1
arg_pair	la ||| int $x int $y	count=1
function_name	dice ||| enc	count=1
function_name	extensión ||| get extension	count=1
arg_pair	esta función intenta asegurarse ||| string $destination	count=1
function_name	exporta un ||| gmp export	count=1
function_name	formulario [function_name] ejecutará ||| [function_name] submit form	count=1
arg_pair	de memcached::replace() con la ||| int $expiration	count=1
function_name	la línea de ||| set line	count=2
namespace	nombre dado que ||| function	count=1
function_name	de codificación ||| mb	count=1
function_name	serialización personalizada ||| unserialize	count=1
namespace	datos arbitrarios a ||| gearmanclient	count=1
namespace	o auto-ejecutable consiste ||| function	count=1
function_name	en cascada ||| cascade	count=2
arg_pair	a fgets() ||| resource $handle int $length	count=1
function_name	crea un objeto ||| ifx create	count=1
function_name	matchbox ||| matchbox	count=1
arg_pair	a filter_var() ||| array $data mixed $definition	count=1
function_name	el número de ||| msgno	count=1
arg_pair	fila específica de un ||| resource $result int $row	count=1
function_name	nombre largo para ||| id3 get frame long name	count=1
arg_pair	botón tridimensional ||| int $x	count=1
function_name	por el ||| bzerrstr	count=1
arg_pair	desde str ||| string $str	count=1
namespace	especial indicando error cuando ||| rarexception	count=1
arg_pair	propiedad hwnd ||| int $window_handle int $client_area	count=1
function	línea desde [arg_pair_2] ||| [function_name_1] resource $handle [arg_pair_2]	count=2
function_name	este serán ignoradas ||| mlt	count=1
function_name	unrar encuentre ||| using	count=1
return	real del host y ||| array	count=1
function	campo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	la lista de ||| odbc data	count=1
function_name	[function_name_1] lista de ||| [function_name_2] [function_name_1]	count=1
return	client almacenará en ||| bool	count=1
function_name	obtiene el contenido ||| get stream	count=1
function_name	sistema de ||| pdf rotate	count=1
namespace	las conexiones [namespace] de memcache ||| [namespace]	count=1
function_name	de autenticación donde la ||| svn auth get	count=1
function_name	servidor ||| server	count=4
function_name	funciones de sisitema de ||| stream wrapper	count=1
return	proveedor ||| bool	count=1
function_name	las palabras ||| mlt min doc	count=1
function_name	fila ||| fbsql fetch	count=1
function_name	contornea el ||| pdf stroke	count=1
arg_pair	página ||| float $ury int $page	count=1
function_name	reescritura establecidas previamente por ||| rewrite	count=1
namespace	abstracción por encima ||| function	count=1
function_name	opción ||| parser set option	count=1
function_name	la longitud ||| len	count=3
function_name	crea ||| create fp	count=2
function_name	un error una excepción ||| using exceptions	count=1
namespace	de imagen ||| gmagick	count=1
function_name	archivo pdf usando ||| pdf	count=1
function_name	la respuesta del ||| response	count=1
function_name	obtiene el valor ||| get default value	count=1
arg_pair	comporta de ||| string $charset	count=1
return	y devuelve un ||| string	count=1
arg_pair	una característica específica ||| string $feature string $version	count=1
return	la hoja ||| void	count=1
function_name	información de la asignación ||| sma info	count=1
function_name	tantos documentos como este ||| set mlt min doc	count=1
arg_pair	[arg_pair] web ||| [arg_pair]	count=3
arg_pair	un process ||| resource $process int $signal	count=1
function_name	categoría general de ||| char type	count=1
arg_pair	en formato csv ||| string $enclosure	count=1
namespace	phar contienen ||| phar	count=1
function_name	abre el archivo de ||| open	count=1
arg_pair	un mensaje ||| string $message	count=3
namespace	ha ||| sdo_das_xml	count=1
function_name	[function_name_1] namespace ||| [function_name_1] [function_name_2]	count=4
function_name	usado [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] resultset resource $statement	count=4
function_name	de la línea ||| get	count=1
arg_pair	de una base ||| string $database	count=1
return	[return] copia ||| [return]	count=3
return	cada píxel en ||| bool	count=1
function_name	blob previamente abierto ||| ibase blob	count=1
return	escritura [return] lote ||| [return]	count=1
arg_pair	str1 ||| string $str1	count=1
function_name	revierte ||| tx rollback	count=1
arg_pair	sobre el certificado x509cert ||| mixed $x509cert bool $shortnames	count=1
arg_pair	de oracle name el ||| string $name	count=1
function_name	añade un nuevo ||| add	count=1
function_name	cadena ||| bzerrstr	count=1
function_name	envía la acción ||| gupnp service proxy send action	count=1
namespace	de una ||| gmagick	count=1
function_name	resida fuera ||| runkit import	count=1
function_name	resultado frontbase asociado con ||| fbsql	count=1
function_name	la página ||| set slide	count=1
function_name	convierten en claves ||| array flip	count=1
function_name	codificación de caracteres del ||| mb detect encoding	count=1
function_name	simulado aclarando ||| raiseimage	count=1
function_name	máximo de [function_name_2] ||| [function_name_1] alternate [function_name_2]	count=2
function_name	escribe los ||| write	count=1
function_name	escala el tamaño de ||| scale	count=1
arg_pair	una nueva ||| float $height float $xstep	count=1
function_name	[function_name_1] el cliente ||| [function_name_2] [function_name_1]	count=2
function_name	encripta ||| openssl pkcs7 encrypt	count=1
function_name	todas las bases de ||| dbs	count=1
function_name	de un ||| crypt	count=1
namespace	datos del modelo ||| svmmodel	count=1
function_name	primer ||| first	count=3
function_name	escribe el contenido de ||| fwrite	count=1
arg_pair	está documentada actualmente solamente ||| string $directory	count=2
function_name	de errores ||| error	count=1
arg_pair	intermediarios de direcciones ||| zmqsocket $backend	count=1
arg_pair	string con ||| string $str	count=1
return	desde la ||| int	count=1
function_name	fragmento ideal ||| set highlight regex slop	count=1
function_name	entrada de ||| entry filesize	count=1
return	value [return] ||| [return]	count=3
arg_pair	establecieron con ||| resource $psdoc	count=1
function_name	versión del protocolo ||| proto info	count=1
arg_pair	object splfileobject de el ||| string $open_mode bool $use_include_path	count=1
function_name	la descripción de la ||| surface restrict to level	count=1
function_name	la descripción de la ||| cairo pattern get	count=6
function_name	parámetros ||| memory	count=1
namespace	al igual ||| directory	count=1
arg_pair	de una ||| string $name	count=3
function_name	representación de un ||| serialize	count=1
function_name	fecha gregoriana ||| jdtogregorian	count=1
return	matriz con las claves ||| array	count=1
arg_pair	patrón ||| string $pattern	count=1
function_name	trabajador envía un warning ||| warning	count=1
arg_pair	en una fuente ||| resource $p	count=1
function_name	wbmp de ||| imagewbmp	count=1
function_name	tabla actual ||| fbsql table	count=1
function	al valor [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	filas que se ||| solrquery	count=1
arg_pair	de mensaje ||| zmqsocket $frontend	count=1
function	[function_name_1] operaciones insert ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	función cubrid_set_query_timeout() ||| resource $req_identifier int $timeout	count=1
return	los bordes ||| void	count=1
function_name	uno ||| mod	count=2
function	[function_name_1] método ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	pero provee un grado ||| array $other_options	count=1
function_name	entorno de apache especificado ||| apache setenv	count=1
arg_pair	stack es true de ||| string $stack string $offset	count=1
function_name	último mensaje de error ||| error	count=1
function_name	de parámetros ||| image	count=1
function_name	[function_name_1] error de ||| [function_name_2] [function_name_1]	count=10
arg_pair	los radios de las ||| float $ry	count=1
arg_pair	fd al argumento offset ||| mixed $fd	count=1
arg_pair	del resource de datos ||| resource $data	count=1
function_name	conexión ||| dbx connect	count=2
function_name	antes ||| addcslashes	count=1
arg_pair	ciertas propiedades de ||| int $field_offset	count=1
function_name	del inicio ||| ltrim	count=1
function_name	[function_name_1] la imagen ||| [function_name_2] [function_name_1]	count=64
function_name	definición de color dada ||| color	count=1
namespace	de ||| gmagickpixel	count=1
function_name	el fichero mpeg ||| id3v2 tag	count=1
function_name	llamada a dbx_query() con ||| dbx	count=1
return	unix o ||| string	count=1
function_name	del ||| get cascade	count=2
function_name	número de ||| imap msgno	count=1
function_name	escala las ||| fann scale	count=2
function_name	[function_name_1] lecturas a ||| [function_name_1] [function_name_2]	count=4
return	array con el ||| string	count=1
function_name	[function_name] con ||| service proxy send [function_name]	count=1
function_name	el número ||| ifx num fields	count=1
function_name	definición de color ||| ncurses color	count=1
arg_pair	intenta eliminar ||| int $length	count=1
rest	en [function_2] ||| [return_1] [function_2]	count=1
namespace	la regla ||| harupage	count=1
function_name	identifican de manera ||| odbc specialcolumns	count=1
function_name	usarlo como copia de ||| set	count=1
function_name	información sobre un proceso ||| status	count=1
function_name	cada archivo codificado mediante ||| mailparse	count=1
function_name	demás funciones de sisitema ||| stream wrapper register	count=1
arg_pair	datos de ||| mixed $data	count=1
function_name	el tamaño actual de ||| filesize	count=1
function_name	sets tie ||| set tie	count=1
function_name	esto puede ser usado ||| session	count=1
arg_pair	un iterator con ||| iterator $iterator	count=1
function_name	aplicarse a una única ||| add kernel	count=1
namespace	algoritmo estándar ||| function	count=1
function_name	del continente que ||| continent	count=1
function_name	asocia la imagen previa ||| previous image	count=1
function_name	un entrenamiento quickprop ||| fann get quickprop	count=1
function_name	las banderas establecidas ||| flags	count=1
function_name	archivo codificado mediante uuencode ||| mailparse uudecode all	count=1
function_name	de la clase del ||| cubrid get class	count=1
function_name	escribir operaciones en el ||| write buffer	count=1
function_name	agregar parámetros ||| add	count=1
function	[function_name_1] un resultado ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	encuentra disponible ||| resource $psdoc	count=1
function_name	el logo ||| logo	count=1
return	antes de los caracteres ||| string	count=1
function_name	virtual actual ||| chdir	count=1
arg_pair	el argumento offset a ||| int $offset	count=1
function_name	la frase ||| phrase	count=2
arg_pair	un nuevo ||| mixed $class string $name	count=1
arg_pair	por variable_key y ||| resource $shm_identifier int $variable_key	count=1
function_name	de filas afectadas por ||| cubrid affected rows	count=1
arg_pair	una ||| resource $grp	count=1
return	cuenta de ||| int	count=1
function_name	los campos de consulta ||| query field	count=1
namespace	del objeto reflectionclass ||| reflectionclass	count=1
function_name	el objetivo y esté ||| floodfill image	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] property [function_name_2]	count=3
function_name	de entrenamiento [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	relation bajo un nuevo ||| resource $relation	count=1
function_name	de los [function_name] un ||| [function_name]	count=1
function_name	distribución de ||| set	count=1
return	mongo posee ||| mongocursor	count=1
function_name	los campos facet ||| facet	count=1
function_name	una declaración de namespace ||| end namespace decl	count=1
rest	convierte una [function_2] ||| [return_1] [function_2]	count=1
arg_pair	dibuja la ||| int $y	count=2
arg_pair	con color en ||| int $color	count=1
function_name	el número [function_name] modificadas ||| ingres num [function_name]	count=1
return	escribe en el apuntador ||| bool	count=1
arg_pair	de páginas ||| int $first_num	count=1
function_name	información del esquema solicitado ||| schema	count=1
function_name	el primer [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	instanciación del objeto de ||| on create	count=1
arg_pair	método encuentra ||| string $ns bool $is_prefix	count=1
function_name	escribe una cadena en ||| ifxus write	count=1
function_name	número de columna actual ||| get current column	count=1
function	[function_name_1] al campo ||| [arg_pair_2] [function_name_1]	count=3
function_name	minúsculas ||| xheight	count=1
function_name	información ||| get	count=1
arg_pair	secuencia del mensaje ||| resource $imap_stream int $msg_number	count=1
return	y llama a la ||| bool	count=1
function_name	a la potencia ||| variant pow	count=1
namespace	no persistente a una ||| function	count=1
return	función ||| array	count=1
function_name	imagen [function_name_2] ||| [function_name_2] [function_name_1]	count=11
function_name	coseno para ||| trader cos	count=1
arg_pair	un nombre ||| int $property string $name	count=1
function_name	crea un objeto ||| create document	count=1
namespace	un número es ||| function	count=1
arg_pair	fichero especial u ordinario ||| int $minor	count=1
namespace	una entrada de ||| function	count=1
arg_pair	gettext() ||| string $msgid1 string $msgid2	count=1
arg_pair	y pregunta por ||| string $keyword string $optlist	count=1
function_name	obtiene ||| get file	count=1
namespace	trabajo para ||| gearmanclient	count=1
function_name	obtiene el valor del ||| get	count=2
function_name	cargar entidades ||| libxml disable entity loader	count=1
arg_pair	archivo nombrado por infilename ||| string $infilename string $outfilename	count=1
function_name	el código ||| strerror	count=1
function_name	una excepción de ||| exceptions	count=1
function_name	de primer plano y ||| set	count=1
arg_pair	de ømq pueden ||| zmqsocket $backend	count=1
arg_pair	es una versión extendida ||| resource $result	count=2
function_name	[function_name_1] hald ||| [function_name_2] [function_name_1]	count=2
function_name	i-nodo de ||| inode	count=1
arg_pair	un ||| resource $imap_stream int $options	count=1
return	comprueba si el ||| void	count=1
function_name	error [function_name_2] ||| [function_name_2] [function_name_1]	count=19
function	suscribirse a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	del color ||| color	count=1
return	un código de error ||| string	count=1
function_name	función devolverá la ||| data source	count=1
return	de conjunto de resultados ||| sqlite3result	count=1
function_name	[function_name_1] i-nodo ||| [function_name_1] [function_name_2]	count=1
arg_pair	con un umbral ||| int $channel	count=1
function_name	disco ||| from file	count=2
arg_pair	vincula ||| mixed $param	count=1
function_name	true ||| exceptions	count=1
arg_pair	una ||| resource $pxdoc	count=1
namespace	resultado ||| splfileobject	count=1
function_name	como este serán ||| mlt min	count=1
function_name	[function_name_1] bcompiler y ||| [function_name_2] [function_name_1]	count=2
function_name	tabla en la ||| pdf fit table	count=1
function	token [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	estructura de ||| int $num_input	count=1
function_name	indica si ||| default	count=1
function_name	[function_name_1] neuronas ||| [function_name_1] [function_name_2]	count=1
function_name	por ||| bzerrstr	count=1
function_name	donde ||| by	count=1
function_name	ambos puedan aplicarse ||| add	count=1
function_name	importada ||| pdi	count=1
function	[function_name_1] el ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	la cuota ||| resource $imap_stream string $quota_root	count=1
function_name	tipo correo mime ||| mailparse msg	count=1
function_name	[function_name_1] error de ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] cuantía de ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] pdf ||| [function_name_2] process [function_name_1]	count=1
namespace	de un ||| function	count=5
function_name	la función está ||| in	count=1
arg_pair	array1 ||| array $array1	count=1
arg_pair	de parámetros ||| resource $psdoc	count=1
function_name	el carp::cluck de perl ||| clunk	count=1
function_name	monitorizar un recurso ||| monitor	count=1
arg_pair	[arg_pair_1] una cadena ||| [arg_pair_1] string $out [arg_pair_2]	count=1
function_name	id de ||| id	count=2
namespace	del apuntador de archivo ||| function	count=1
namespace	comando de ||| mongocursor	count=1
arg_pair	de datos cubrid y ||| resource $conn_identifier	count=1
function	el nombre [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	de error [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	el ||| fann get	count=1
namespace	para que ambos ||| imagickkernel	count=1
arg_pair	de relation ||| resource $relation string $name	count=1
namespace	búfer de salida ||| splfileobject	count=1
function_name	una lista [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	archivo dado ||| uudecode all	count=1
namespace	especifica el número ||| solrquery	count=1
function_name	que almacena ||| from file	count=2
function_name	frecuencia de documento mínima ||| terms min count	count=1
function_name	las conexiones de salida ||| get cascade	count=1
function_name	el nombre host de ||| fbsql hostname	count=1
arg_pair	un valor ||| string $name mixed $value	count=1
function_name	el acl para un ||| imap getacl	count=1
function_name	cierra el ||| close	count=3
function	[function_name_1] dos números ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	arrays con una comprobación ||| array $array1 array $array2	count=1
arg_pair	conexión al ||| string $host	count=1
function_name	hace una diferencia binaria ||| file bdiff	count=1
function	[function_name_1] el domain ||| [function_name_1] [arg_pair_2]	count=1
function_name	trozos remarcados ||| highlight snippets	count=1
function_name	de reescritura establecidas ||| reset rewrite vars	count=1
function_name	realizar los cálculos ||| compat	count=1
function_name	[function_name_1] consultas range/wildcard/fuzzy/prefix ||| [function_name_2] [function_name_1]	count=3
function_name	xhprof ||| xhprof	count=1
function_name	y sólo si ||| set	count=1
arg_pair	la función callback dependiendo ||| int $pri callable $callback	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] inner [function_name_2]	count=1
namespace	un hash y devuelve ||| quickhashintstringhash	count=1
arg_pair	server_key se puede utilizar ||| string $server_key	count=5
function_name	parámetro ||| bind param	count=1
arg_pair	parecida ||| string $password	count=1
function_name	está corrompido ||| tainted	count=1
function_name	peso de ||| getfontweight	count=1
function_name	extraidas por una ||| ifx num	count=1
return	pdflib y [return] todos los ||| [return]	count=1
function_name	error del servidor ms-sql ||| last message	count=1
namespace	o establece el comportamiento ||| function	count=1
namespace	servidores de memcache ||| memcached	count=1
function_name	restaura el [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	la extensión ||| get extension	count=1
return	contiene el ||| string	count=1
return	dada en ||| bool	count=1
function_name	milisegundos para ||| timeout	count=1
arg_pair	certificado x509cert proporcionado incluyendo ||| mixed $x509cert	count=1
namespace	soap que se ||| function	count=1
function_name	imagen para crear un ||| image	count=1
arg_pair	los dispositivos ||| zmqsocket $backend	count=1
return	en la capa ||| bool	count=1
namespace	de ||| domnode	count=1
function_name	codificación de [function_name_2] ||| [function_name_1] encode [function_name_2]	count=2
function_name	lista de ||| list dicts	count=1
function_name	parámetro de autenticación donde ||| svn auth get parameter	count=1
function_name	[function_name_1] pendientes de ||| [function_name_1] cascade activation [function_name_2]	count=1
return	intensidad [return] su zona ||| [return]	count=1
function_name	obtiene si [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	parámetros ||| required	count=1
function_name	respuesta xml del ||| xml response	count=2
function_name	más opciones de la ||| option	count=1
function_name	tipo del campo ||| field type	count=1
namespace	string del error ||| error	count=1
function_name	establece el [function_name_2] ||| [function_name_1] candidate [function_name_2]	count=3
rest	actualmente en [function_2] ||| [function_2] [return_1]	count=1
function_name	del sistema posix ||| posix	count=1
function_name	cada archivo ||| mailparse	count=1
function_name	la representación ||| serialize	count=1
return	una función definida ||| void	count=2
function_name	procedimiento al macenado ||| fetch proc return	count=1
function_name	de fragmento ideal especificado ||| highlight regex slop	count=1
function_name	prioridad ||| event base priority	count=1
function_name	en el algoritmo bidireccional ||| char direction	count=1
function_name	actual de ||| zip entry	count=1
arg_pair	a ||| string $servername	count=1
function	desde una [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=8
function_name	[function_name_1] buffer ||| [function_name_1] [function_name_2]	count=2
arg_pair	número offset en result ||| int $offset	count=1
arg_pair	cubrid_put() ||| mixed $value	count=1
function_name	blob en ||| blob echo	count=1
function_name	estancamiento de salida ||| output stagnation	count=1
namespace	utilizando el algoritmo estándar ||| function	count=1
function_name	ítem por el ||| decrement by key	count=1
function_name	propia clase ||| node class	count=1
function_name	valor de un ||| bind value	count=1
function_name	como este serán ||| doc	count=1
arg_pair	de secuencia del mensaje ||| int $msg_number	count=1
function	compara [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	es necesariamente igual a ||| iconv strlen	count=1
function_name	devuelve las flags ||| get	count=1
return	en un bloque definido ||| bool	count=1
function_name	salida del sol ||| date sunrise	count=1
namespace	destruye la red por ||| function	count=1
function_name	como este ||| min	count=1
namespace	se encuentra ||| function	count=7
namespace	string utilizando el ||| function	count=1
function_name	creado con ||| add	count=1
function_name	el nombre del campo ||| field name	count=1
arg_pair	data1 y data2 en ||| resource $data1 resource $data2	count=1
arg_pair	criterio y la dirección ||| int $sortdirection	count=2
namespace	última ||| memcached	count=1
function_name	valor ||| colorspace	count=1
function_name	proveedor oauth ||| add required	count=1
return	máximo de ||| int	count=1
function_name	al siguiente ||| next	count=1
arg_pair	en el argumento offset ||| int $offset	count=1
return	una función en ||| bool	count=1
return	y la cadena de ||| array	count=1
function	cierra [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	mayoría de ||| string $character_set	count=1
function_name	de primer plano ||| ncurses color	count=1
function_name	imagen con ||| image	count=4
function_name	define el de ||| set slide	count=1
function_name	[function_name_1] [function_name_2] llamada ||| [function_name_2] [function_name_1]	count=3
function_name	lista de parámetros ||| open memory image	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] int $fetchtype [arg_pair_1]	count=3
function	[function_name_1] los eventos ||| [arg_pair_2] [function_name_1]	count=2
function_name	el seno para cada ||| trader asin	count=1
function	analiza [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	información sobre la ||| info	count=1
function_name	archivo asociado a ||| getfilename	count=1
function_name	envía la excepción indicada ||| exception	count=1
function_name	la severidad de ||| severity	count=1
function_name	encuentre ||| set using exceptions	count=2
function_name	con respecto al contorno ||| pdf setlinecap	count=1
namespace	de codificar ||| function	count=1
namespace	una entrada ||| ziparchive	count=2
return	filas de ||| int	count=1
return	en todas ||| bool	count=1
arg_pair	la información dad a ||| int $dbase_identifier array $record	count=1
function_name	crea una ||| create sparse	count=1
function_name	clickeado ||| set destination	count=1
function_name	serán ignoradas ||| min	count=1
function_name	[function_name_1] lecturas ||| [function_name_1] [function_name_2]	count=4
function_name	operación substr() multibyte ||| mb substr	count=2
arg_pair	ruta en la ||| bool $recursive	count=1
arg_pair	carácter c verticalmente en ||| string $c	count=1
function_name	trazado y ||| pdf closepath	count=2
function_name	con bind_textdomain_codeset() se establece ||| bind textdomain codeset	count=1
function_name	[function_name_1] palabra máxima ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] clave ||| [function_name_2] [function_name_1]	count=6
return	puntero interno de ||| bool	count=1
function_name	índice para ||| optimize	count=1
namespace	hijos ||| simplexmlelement	count=2
function_name	devuelve el ||| fann get	count=3
function_name	como este ||| mlt	count=1
function	coloca una [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	de salida ||| splfileobject	count=1
function_name	que se vieron afectadas ||| ibase affected	count=1
function_name	los nombres de ||| field names	count=1
function_name	línea actual para el ||| current line number	count=1
function_name	devuelve un ||| mysqlnd memcache get	count=1
arg_pair	php a un ||| int $length	count=1
return	consulta en ||| bool	count=1
return	datos en ||| bool	count=2
function_name	provisto por ||| mhash keygen s2k	count=1
function_name	del paquete ||| package	count=1
function_name	filas que ||| rows	count=1
function_name	frecuencia ||| set	count=1
function_name	alfabéticos convertidos a minúsculas ||| strtolower	count=1
function_name	un socket ||| stream socket	count=1
function_name	de entorno ||| setenv	count=1
function_name	funcion procesa el html ||| html	count=1
function_name	destruye el valor ||| unset	count=1
function_name	de atajo empleando un ||| shortcut	count=1
namespace	br / > o ||| function	count=1
arg_pair	correspondientes ||| array $ctorparams	count=1
function_name	firma de cabecera ||| request header	count=1
return	devuelve el número ||| int	count=2
return	nodo especificado por su ||| domnode	count=1
function_name	primer [function_name_2] ||| [function_name_1] [function_name_2]	count=7
namespace	con stream_filter_prepend() o ||| function	count=1
function_name	es el espacio de ||| is default namespace	count=1
arg_pair	memcached::getmulti() con la ||| string $cas_tokens int $flags	count=1
function_name	devuelve la versión ||| get version	count=4
function_name	[function_name_1] nombre ||| [function_name_1] property [function_name_2]	count=1
function_name	entrada ||| zip	count=1
function_name	buscarán los ||| dbplus	count=1
namespace	que todos ||| function	count=1
namespace	la línea ||| harufont	count=1
function_name	ser entrenadas las conexiones ||| fann get	count=1
function_name	el número total ||| number	count=1
function_name	control de paginación tamaño ||| control paged result	count=1
arg_pair	apunta a una ||| float $ury string $url	count=1
function_name	y las reemplaza con ||| preg replace	count=1
function_name	descripción de ||| cairo ps surface get	count=1
function_name	de alta prioridad en ||| task high	count=1
function_name	devuelve el nombre de ||| name	count=4
return	establecida en ||| bool	count=2
arg_pair	el uid ||| int $uid	count=1
function_name	el mismo ||| same	count=1
function_name	por el usuario ||| function	count=1
function_name	entidades externas ||| disable entity loader	count=1
arg_pair	unicode asignados entre ||| int $namechoice	count=1
arg_pair	una ||| string $content string $key	count=1
function_name	página ||| set flatness	count=2
function_name	coincide ningún píxel negra ||| match	count=1
function_name	evento ||| event	count=7
arg_pair	medio enx y ||| float $alpha float $beta	count=2
function	[function_name_1] arrays con ||| [arg_pair_2] [function_name_1]	count=3
function_name	genera una nueva ||| new	count=1
function	[function_name_1] modo de ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	secreto para las subsecuentes ||| string $token_secret	count=1
arg_pair	[arg_pair_1] una y ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	dentro del objeto imagick ||| imagick	count=1
return	tipo de ||| string	count=1
return	mediante el ||| bool	count=1
function_name	[function_name_1] ausente ||| [function_name_1] [function_name_2]	count=3
arg_pair	texto que lee ||| int $length	count=1
arg_pair	cubrid y guarda su ||| resource $conn_identifier	count=1
namespace	fila es actualizado por ||| function	count=1
function_name	línea de ||| start line	count=1
function_name	descripción de la ||| surface get	count=2
function_name	sisitema de ||| wrapper	count=1
arg_pair	servicios ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	data con ||| string $data	count=2
function_name	en oposición a ||| internal	count=1
function_name	mensaje para ||| imap msgno	count=1
function_name	trazado actual ||| pdf closepath	count=1
arg_pair	[arg_pair_1] uso futuro ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	si el argumento ||| set using	count=1
function_name	sin cerrarla ||| ret	count=1
namespace	la ruta actual usando ||| harupage	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] client [function_name_2]	count=2
function_name	la fecha dada ||| date parse from	count=1
function_name	establece el ||| fdf set	count=1
function_name	modo autoconsigna del servidor ||| autocommit	count=1
arg_pair	fichero fd para ||| int $mode	count=1
arg_pair	memcached::replace() ||| mixed $value int $expiration	count=1
return	se comporta de forma ||| resource	count=1
function_name	extensión de ||| type to extension	count=1
function_name	imagen ||| image colorspace	count=2
namespace	fichero dado de la ||| splfileobject	count=1
function_name	una imagen ||| sub image	count=1
arg_pair	dibuja el ||| int $x int $y	count=1
function_name	devuelve ||| addcslashes	count=1
function_name	clave /encoding ||| get encoding	count=1
function_name	predeterminado de ||| close	count=1
arg_pair	llave keydata ||| resource $identifier string $keydata	count=1
function_name	caché de archivo/usuario ||| apc bin	count=1
function_name	selecciona ||| db	count=1
function_name	[function_name_1] el iterador ||| [function_name_1] inner [function_name_2]	count=4
function_name	una etiqueta ||| label	count=1
function_name	de mensaje para el ||| imap msgno	count=1
return	barras ||| string	count=1
function_name	descripción ||| cairo surface mark dirty	count=1
function_name	la csr dada ||| csr sign	count=1
function_name	[function_name_1] resumen disponibles ||| [function_name_2] [function_name_1]	count=4
function_name	disponible la ||| open memory	count=1
function_name	de una ||| zip entry	count=1
function_name	consulta a ||| query	count=1
arg_pair	idéntica a ereg_replace() excepto ||| string $replacement	count=1
function_name	cubrid_col_get() se usa ||| cubrid col get	count=2
function_name	nombre corto para ||| id3 get frame short name	count=1
function_name	sybase_fetch_assoc() con la ||| sybase	count=1
function	[function_name_1] texto ||| [function_name_1] type [arg_pair_2]	count=2
namespace	iniciada por sqlsrv_begin_transaction() ||| function	count=1
function_name	obtiene el número ||| get	count=5
namespace	sólo ||| rarexception	count=1
namespace	ha consultado se ||| mongocursor	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] array [arg_pair_2]	count=5
function_name	los tipos descritos en ||| types	count=1
arg_pair	offset a la ||| int $offset	count=1
return	en el sentido ||| bool	count=1
function_name	argumento es true entonces ||| exceptions	count=1
function	el token [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	retira espacios en ||| string $str string $character_mask	count=1
return	probabilística de ||| int	count=1
return	todavía no ||| int	count=1
function_name	contiene la siguiente fila ||| oci fetch	count=1
function	crea [arg_pair_2] ||| [function_name_1] train from callback [arg_pair_2]	count=3
function_name	tabla ||| fit table	count=1
arg_pair	con dos diferencias: ||| string $servername string $username	count=1
function_name	entrenamiento en un fichero ||| train	count=1
function_name	[function_name_1] devuelve ||| [function_name_1] [function_name_2]	count=1
arg_pair	el ||| resource $stream	count=1
function_name	obtiene la uri ||| uri	count=1
function_name	escribe los datos ||| write	count=1
function_name	estadísticas [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	las ||| mlt min doc frequency	count=2
function_name	[function_name_1] atributo en ||| [function_name_2] [function_name_1]	count=2
arg_pair	modo wsdl ||| mixed $wsdl array $options	count=1
arg_pair	una nueva entrada a ||| int $key	count=1
arg_pair	de puerto nombre ||| int $port	count=1
function_name	resultados como ||| fetch	count=1
function_name	en ||| doc	count=2
arg_pair	mensaje de error al ||| string $message	count=1
function_name	de dsn disponibles después ||| source	count=1
function_name	de datos dbase ||| dbase	count=1
arg_pair	asocia el ||| int $rows	count=1
function_name	cliente usado por varios ||| client identifier	count=1
return	de proceso del ||| void	count=1
arg_pair	comporta de ||| string $password string $charset	count=1
function_name	devuelve el último error ||| broker get error	count=1
function	la longitud [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	un servicio nominado ||| int	count=1
namespace	desde ||| sdo_das_xml	count=1
function_name	el ||| rotate	count=1
function_name	función crea una nueva ||| create attribute ns	count=1
return	devuelve ||| float	count=1
return	extrae cada archivo ||| array	count=1
function_name	[function_name_1] algoritmo ||| [function_name_1] [function_name_2]	count=1
function_name	la clave /encoding ||| get encoding	count=1
function_name	mantienen su correlación con ||| arsort	count=1
return	en el puntero de ||| int	count=1
function_name	personalizado ||| setup custom directory	count=2
function_name	de sarprop ||| sarprop	count=3
function	[function_name_1] un campo ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	de salto ||| string $break	count=1
function_name	implementa directo a la ||| get images blob	count=1
function_name	la descripción de ||| cairo pattern get filter	count=1
function_name	[function_name] previa ||| optimize [function_name]	count=3
function_name	dado ||| imap	count=1
function_name	libera ||| msg free	count=1
function_name	pdf importada ||| pdf fit pdi	count=1
function_name	y sólo si ||| using exceptions	count=1
return	sean puestas [return] cola hasta ||| [return]	count=1
function_name	subject el cual no ||| strcspn	count=1
arg_pair	por form ||| resource $form resource $component	count=1
function_name	asociativo que [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	palabras que ||| set	count=1
function	[function_name_1] operaciones insert ||| [arg_pair_2] [function_name_1]	count=1
namespace	que contiene todos los ||| function	count=1
arg_pair	comandos de listas desordenadas ||| string $par1	count=1
function_name	tipo de la ||| column type	count=1
function_name	devuelve un nuevo ||| new	count=1
namespace	que ejecuta el ||| function	count=1
namespace	apuntador de archivo dado ||| function	count=1
function_name	número de filas ||| sybase num rows	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] config [arg_pair_2]	count=2
arg_pair	versiones estandarizados de php ||| string $version1 string $version2	count=1
function_name	entrenamiento desde una función ||| train from callback	count=1
function_name	documentos en ||| doc count	count=1
function_name	establece el número de ||| set cascade num	count=1
function_name	de filas ||| set	count=1
namespace	subsiguiente fichero de esquema ||| sdo_das_xml	count=1
arg_pair	menudo ||| int $dev	count=1
function_name	imagen ||| set image interlace	count=1
function_name	blob previamente abierto ||| blob	count=1
function_name	[function_name_1] del error ||| [function_name_2] [function_name_1]	count=16
namespace	como este ||| solrquery	count=1
function_name	gettimeofday 2 ||| gettimeofday	count=1
function_name	[function_name_1] fam ||| [function_name_2] [function_name_1]	count=1
arg_pair	tridimensional simulado aclarando y ||| int $width	count=1
arg_pair	[arg_pair] de ||| [arg_pair]	count=3
function_name	sybase_fetch_assoc() con la ||| sybase fetch object	count=1
function_name	servicio y las características ||| win32 start service	count=1
arg_pair	ancho ||| int $type int $width	count=1
function_name	establece un atributo ||| set attribute	count=3
return	va a utilizar en ||| bool	count=1
function_name	descripción de ||| cairo surface write to png	count=1
return	si usar o no ||| solrquery	count=1
function_name	dispositivos de ømq ||| construct	count=1
function_name	buffer ||| buffer	count=4
function_name	después ||| odbc data	count=1
function_name	de versión menor ||| minorversion	count=1
function_name	devuelve el [function_name_2] ||| ziparchive string [function_name_1] [function_name_2] index int	count=1
function_name	columna devuelta de ||| db2	count=1
function_name	función geoip_country_code_by_name() devolverá la ||| country	count=1
function_name	de sentencias ||| stmt	count=1
arg_pair	esta ||| float $number	count=1
function_name	descripción ||| cairo ps level	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] tag [arg_pair_2]	count=2
function_name	string utilizando el ||| crypt	count=1
function_name	petción de recodificación ||| recode string	count=1
function_name	código de ||| strerror	count=1
arg_pair	ip y puerto específicado ||| string $host_ip int $port	count=1
function_name	corta una ||| iconv substr	count=1
function_name	de dsn disponibles después ||| odbc data source	count=1
arg_pair	cero ||| string $zurl	count=1
function_name	si una excepción ||| exception	count=1
function_name	un servicio pausado nominado ||| continue service	count=1
arg_pair	de una conexión ||| resource $link_identifier	count=1
arg_pair	método ||| string $data string $method	count=2
function	[function_name_1] estructuras de ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	desde un fichero y ||| resource $font_index	count=1
function_name	la extensión está cargada ||| extension loaded	count=1
arg_pair	el result set especificado ||| resource $result	count=1
arg_pair	dibuja la cadena ||| int $x int $y	count=2
function_name	que corresponde al nombre ||| name	count=1
arg_pair	r * ||| float $a float $r	count=1
function_name	tantos documentos ||| min doc	count=1
function_name	descomprime la ||| decompress	count=1
arg_pair	com_* básico a ||| int $ok_packet	count=1
return	otros caracteres del ||| string	count=1
function_name	yaml de data ||| yaml emit	count=1
function_name	comentario a ||| commentimage	count=1
namespace	afecta ||| mongocursor	count=1
function_name	crea una ||| create processing instruction	count=1
return	objeto en formato string ||| string	count=1
function_name	que la clave ||| by	count=1
arg_pair	para usar [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
namespace	actual por ||| function	count=1
function_name	recodificación ||| recode	count=1
function_name	la ||| gmp prob prime	count=4
function_name	el archivo paradox ||| px	count=1
function_name	preparada por sqlsrv_prepare() o ||| sqlsrv	count=1
return	forma parecida a ||| resource	count=1
return	en des de unix ||| string	count=1
function_name	unidades de grafema ||| grapheme stripos	count=1
function_name	el factor de aumento ||| factor	count=1
arg_pair	pueda con una ||| string $height	count=1
function_name	petición al ||| eio	count=1
arg_pair	función callback a ||| callable $callback	count=2
function_name	ccl ||| ccl	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] image pixel [function_name_2]	count=1
function	[function_name_1] value ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	el offset ||| int $offset	count=1
function_name	devolverá ||| data source	count=2
function_name	la ||| ps open memory image	count=2
return	dada en la ||| bool	count=1
arg_pair	de botón tridimensional simulado ||| int $x int $y	count=1
arg_pair	de archivo a un ||| resource $handle	count=1
function_name	establece [function_name] externos ||| set external [function_name]	count=1
arg_pair	object es ||| string $class_name	count=1
function_name	es válido ||| valid	count=2
function_name	función crea una nueva ||| create document	count=1
namespace	la ||| splfileobject	count=1
namespace	que los parámetros ||| function	count=1
function_name	un proxy ||| statement proxy	count=1
function_name	devuelve la [function_name_2] ||| [function_name_1] [function_name_2]	count=26
arg_pair	de str ||| string $character_mask	count=1
namespace	codificado ||| function	count=1
function_name	nombre del campo ||| oci field name	count=2
function_name	de estilo de ||| set slide show	count=1
arg_pair	los ||| zmqsocket $frontend	count=1
function_name	de reintentos en caso ||| retry count	count=1
function_name	mediante el uso de ||| get status	count=1
function_name	información pdf generada ||| pdf	count=1
function_name	la ||| by country and	count=1
arg_pair	por el objeto gmagickpixel ||| gmagickpixel $color int $width	count=1
function_name	indicado mediante el ||| crack	count=1
arg_pair	la función cubrid_connect() ||| bool $new_link	count=1
function_name	el índice de la ||| index	count=1
function_name	de documentos en la ||| doc count	count=1
function_name	si devuelve un array ||| get supported	count=1
function_name	por lo menos tantos ||| set mlt	count=1
function_name	del apuntador de ||| uudecode	count=1
arg_pair	dado en signed_text y ||| string $signed_text	count=1
function_name	disponibles ||| odbc data	count=1
namespace	medición ||| hrtime\performancecounter	count=1
arg_pair	un parámetro de un ||| resource $p string $key	count=1
return	subsiguiente fichero de ||| void	count=1
namespace	inicio de ||| function	count=1
function	[function_name_1] horizontal ||| [arg_pair_2] [function_name_1]	count=4
namespace	en un ||| function	count=1
namespace	de almacenamiento que están ||| function	count=1
arg_pair	método de fabricación cres ||| int $size	count=1
function_name	una diferencia binaria de ||| file bdiff	count=1
arg_pair	la potencia exp ||| gmp $exp	count=1
function_name	exception::__construct() ||| previous	count=2
namespace	dado de la ||| splfileobject	count=1
namespace	por el [namespace] ||| [namespace]	count=1
function_name	la descripción de la ||| ps surface restrict to level	count=1
function_name	frecuencia en la que ||| mlt min doc	count=1
function_name	esta función reemplaza ||| replace	count=1
return	sólo ||| void	count=1
function_name	devuelve ||| mcrypt enc get	count=1
arg_pair	devuelve un ||| string $str	count=1
namespace	el ||| sqlite3	count=1
return	cualquier abstracción que ||| zmqsocket	count=1
return	la versión plural de ||| string	count=1
function_name	[function_name_1] entrenamiento en ||| [function_name_1] [function_name_2]	count=1
namespace	indicado mediante el ||| function	count=1
function_name	el crc del archivo ||| crc	count=1
function_name	desactivar el modo autoconsigna ||| autocommit	count=1
function_name	guarda [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	de ||| sqlite3result	count=1
function_name	envía la excepción ||| send exception	count=3
function_name	que describe la última ||| last	count=1
function_name	obtiene el ||| info get	count=1
function_name	[function_name_1] ubicaciones de ||| [function_name_2] [function_name_1]	count=1
function_name	función devolverá la lista ||| odbc data source	count=1
arg_pair	hacer llamadas ||| array $options mixed $input_headers	count=1
function_name	la prueba automática sobre ||| self test	count=1
function_name	un error ||| set	count=1
function_name	de oracle ||| oci bind	count=1
return	de estilo de ||| bool	count=1
function_name	colecciones de la ||| collection info	count=1
function_name	tendencias ||| bias array	count=1
return	la función va aquí ||| cairosvgsurface	count=1
function_name	[function_name_1] con información ||| [function_name_1] [function_name_2]	count=4
function_name	establece el número de ||| fann set cascade	count=1
function_name	de fann_get_mse() en fann_get_cascade_candidate_stagnation_epochs() ||| change fraction	count=1
function_name	frecuencia ||| min doc frequency	count=2
function_name	añade definición [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	de botón ||| int $height	count=1
function_name	nombre del campo ||| mssql field name	count=2
function_name	corto para ||| short	count=1
function_name	conexión persistente ||| pconnect	count=1
function_name	obtiene blob/clob ejecutando la ||| lob get	count=1
function_name	establece [function_name_2] ||| [function_name_1] output stagnation [function_name_2]	count=1
function_name	la configuración ||| config count	count=1
arg_pair	file con ||| string $file	count=3
function_name	encuentre un error ||| using exceptions	count=1
return	un código ||| string	count=1
function_name	tie breaker parameter ||| set tie	count=1
function_name	la lista ||| odbc data	count=1
function_name	[function_name_1] serán ||| [function_name_2] [function_name_1]	count=1
function_name	encontrados en la configuración ||| config count	count=1
arg_pair	el archivo de ||| string $filename array $options	count=1
function_name	rutinas de interoperabilidad ||| create default stub	count=1
function_name	imagen izquierda y ||| stereo image	count=1
return	una representación de tipo ||| string	count=1
arg_pair	un campo es ||| resource $fdf_document string $field_name	count=1
function_name	fichero subido por medio ||| fdf get attachment	count=1
arg_pair	los datos almacenados en ||| bool $summaryonly	count=1
arg_pair	la función cubrid_set_query_timeout() ||| int $timeout	count=1
function_name	blob previamente abierto para ||| ibase blob	count=1
function_name	[function_name] dado separadas ||| [function_name]	count=1
arg_pair	una ||| mixed $connection	count=1
function_name	el nombre ||| zip entry name	count=1
function_name	datos rrd ||| rrd	count=4
arg_pair	file con [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	de datos emita ||| string $event_name1	count=1
function_name	de la asignación de ||| apc sma	count=1
function_name	y las ||| preg	count=1
function_name	subject el cual ||| strcspn	count=1
arg_pair	en dos variantes ||| mixed $right	count=1
function_name	dsn disponibles después ||| odbc data	count=1
namespace	simulado aclarando y ||| gmagick	count=1
function_name	coseno para cada ||| cos	count=1
return	un id que se ||| resource	count=1
namespace	objeto domprocessinginstruction ||| domprocessinginstruction	count=1
function_name	string que describe el ||| message	count=1
arg_pair	dos diferencias: ||| string $username	count=1
arg_pair	se comporta ||| resource $p	count=1
function_name	cambia los permisos del ||| fchmod	count=1
return	su almacenamiento en dicha ||| bool	count=1
function_name	seguimiento ||| tailable	count=1
arg_pair	en dos variantes ||| mixed $left mixed $right	count=1
function_name	caracter que contiene ||| chr	count=1
function_name	fija la base ||| select db	count=1
function_name	[function_name_1] imágenes ||| [function_name_1] [function_name_2]	count=1
function_name	cambia el directorio virtual ||| dbplus chdir	count=1
namespace	unix o ||| function	count=1
function_name	a ||| set start	count=2
function_name	crea un enlace duro ||| link	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=32
return	de forma parecida a ||| resource	count=1
function_name	información sobre distribución de ||| set	count=1
return	de nombres ||| bool	count=1
function_name	serán ||| min	count=1
function_name	los ||| ping	count=1
namespace	dado por name pero ||| function	count=1
function_name	[function_name_1] a secundarios ||| [function_name_1] [function_name_2]	count=9
return	formato string ||| string	count=1
function_name	una diferencia binaria ||| bdiff	count=1
function_name	una excepción ||| set using	count=1
return	cunstruye el ||| sdo_das_xml_document	count=1
function_name	fgets() ||| fgetss	count=1
arg_pair	de éxito cero ||| string $zurl	count=1
arg_pair	timestamp ||| int $timestamp	count=2
function_name	la lista de parámetros ||| memory image	count=1
function_name	el grosor ||| imagesetthickness	count=1
arg_pair	las estructuras ||| int $table	count=1
arg_pair	la base ||| mysqlnd_connection $connection string $database	count=1
function_name	está ||| in	count=1
function_name	de error icu ||| intl error	count=2
function_name	tupla previa ||| prev	count=1
function_name	de emitir ||| using	count=1
function_name	de filas que ||| rows	count=1
arg_pair	forma parecida ||| string $username	count=1
arg_pair	un ||| resource $imap_stream	count=4
function_name	[function_name_1] resultado ||| [function_name_1] [function_name_2]	count=3
arg_pair	un fichero al archivo ||| string $localname	count=1
namespace	recupera ||| yaf_dispatcher	count=1
arg_pair	a ||| string $value	count=2
function_name	inicia la definición de ||| begin	count=1
function_name	a la potencia ||| pow	count=1
rest	array con [function_2] ||| [return_1] ibase field [function_2]	count=1
function_name	cierra el fichero especificado ||| eio close	count=1
namespace	una ||| arrayiterator	count=2
function_name	bordes de la imagen ||| image	count=2
function_name	agregar parámetros ||| required parameter	count=1
function_name	alias de solrdocument::clear() ||| reset	count=1
function_name	configuración de ||| reset config	count=1
function_name	para los eventos especificados ||| set event	count=1
namespace	de [namespace] con ||| [namespace]	count=1
function_name	espacio de ||| default namespace	count=1
arg_pair	[arg_pair_1] ingres_fetch_row() ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	nth de a ||| int $nth	count=1
arg_pair	cc y [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	de escala de entrada ||| input scaling	count=1
function_name	cubrid_lob2_size64() ||| lob2 size64	count=2
arg_pair	de diccionarios ||| resource $broker	count=1
namespace	des de ||| function	count=1
function_name	de mensaje ||| imap	count=1
function_name	nombre y devolver su ||| from name	count=1
return	invertidas antes de los ||| string	count=1
function_name	uuencode ||| uudecode	count=1
return	a la ||| bool	count=2
function	[function_name_1] especificado en ||| [function_name_1] name [arg_pair_2]	count=1
namespace	la [namespace] ||| [namespace]	count=23
function_name	hasta que el semáforo ||| sem acquire	count=1
namespace	por query al servidor ||| function	count=1
namespace	de abstracción por ||| function	count=1
arg_pair	una nueva ||| string $key	count=1
function_name	optimiza la ||| dba optimize	count=1
function_name	los encabezados a ||| headers	count=1
arg_pair	hacer ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	extensión iconv ||| iconv	count=1
function_name	la contraseña del ||| oci password	count=1
function_name	la variable php ||| gettype	count=1
arg_pair	de start hacia ||| gmp $a int $start	count=2
function_name	creado con el ||| add types	count=1
function_name	error una ||| set using	count=1
function_name	establece la edición de ||| set	count=1
function_name	usa [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	avanza la posición actual ||| iterator	count=1
function_name	de tipo ||| set using	count=1
namespace	previamente establecido por xsltprocessor::setparameter() ||| xsltprocessor	count=1
arg_pair	un punto de ||| mixed $codepoint	count=1
return	parecida ||| resource	count=1
function_name	es clickeado ||| destination	count=1
namespace	el tipo de imagen ||| gmagick	count=1
function_name	que apunta conn_handle actualmente ||| commit	count=1
function_name	devuelve un array [function_name_1] [function_name_2] el puntero de datos ||| [function_name_2] [function_name_1]	count=2
function_name	de curl ||| curl	count=2
function_name	de datos ibm db2 ||| db2	count=2
return	cambia el ||| string	count=1
arg_pair	[arg_pair_1] message ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	sobre distribución de ||| set	count=1
namespace	de trabajo para ||| gearmanclient	count=1
namespace	ruta actual ||| harupage	count=2
namespace	imagen imagick ||| imagick	count=1
function_name	es parte de un ||| is	count=1
namespace	disponible ||| function	count=1
arg_pair	una variable en ||| string $key	count=1
arg_pair	crea un ||| int $width int $height	count=1
arg_pair	[arg_pair_1] señal ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	define ||| int $type	count=1
function_name	de eventos ||| event	count=1
return	proporcionada en la ||| bool	count=1
namespace	si ||| gearmantask	count=1
function_name	para preparar la respuesta ||| response	count=1
namespace	valor actual del ||| harupage	count=1
namespace	letras en ||| harufont	count=1
function_name	cabo una transacción ||| ibase commit	count=1
function_name	[function_name] una ||| db2 [function_name]	count=2
function_name	obtiene el ||| fdf get	count=1
function_name	elimina el perfil ||| remove image profile	count=2
namespace	filas de ||| sqlite3	count=1
arg_pair	la llave keydata ||| resource $identifier string $keydata	count=1
arg_pair	simulado ||| int $width int $height	count=1
return	usando ||| void	count=2
function_name	de alta prioridad en ||| high	count=1
function_name	de primer ||| ncurses color	count=1
arg_pair	píxel que coincida con ||| mixed $fill	count=2
return	la página ||| bool	count=2
function_name	tamaños de clave ||| key	count=1
function_name	las extensiones de ficheros ||| autoload extensions	count=1
arg_pair	efecto ||| int $x int $y	count=1
return	de un ||| int	count=9
function_name	[function_name_1] datos ||| [function_name_2] [function_name_1]	count=1
function_name	intersección de ||| array uintersect assoc	count=1
function_name	desde una función ||| from	count=1
function_name	variable de entorno ||| getenv	count=1
function_name	base de datos ||| drop db	count=1
function_name	de prioridad ||| base priority init	count=1
function	[function_name_1] oid ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	la columna especificada ||| resource $stmt mixed $column	count=4
function_name	parte coincidente de ||| regs	count=1
arg_pair	un valor de cadena ||| string $type	count=1
return	tridimensional ||| void	count=1
function_name	este para ||| kernel	count=1
function_name	la representación de ||| serialize	count=1
namespace	[namespace] de memcache ||| [namespace]	count=2
namespace	resultados ||| sqlite3result	count=1
return	de renderización de ||| int	count=1
function_name	menos tantos documentos como ||| doc frequency	count=1
function_name	el término ||| lower bound	count=1
function_name	conjunto de [function_name_2] ||| [function_name_1] [function_name_2] object	count=1
arg_pair	una función de ordenación ||| string $name callable $callback	count=1
function_name	la que las ||| set	count=1
namespace	nuevo filteriterator que consiste ||| filteriterator	count=1
function_name	se recomienda utilizar mongodb::lasterror() ||| prev error	count=1
arg_pair	información de una instancia ||| resource $conn_identifier string $oid	count=1
function_name	máximo de [function_name_2] ||| [function_name_1] out [function_name_2]	count=4
return	archivos phar basados en ||| bool	count=1
function_name	el tiempo de espera ||| set query timeout	count=1
function_name	entonces en lugar de ||| using exceptions	count=1
return	archivo codificado mediante ||| array	count=1
function_name	propiedad dada tal ||| property	count=1
function_name	de sisitema de ||| wrapper register	count=1
function_name	de la ||| slide	count=1
arg_pair	la ||| int $height	count=1
namespace	define ||| harupage	count=2
function_name	mediante el uso ||| status	count=1
function_name	información sobre un proceso ||| proc get status	count=1
function_name	clave privada ||| openssl pkey	count=1
arg_pair	el modo de ||| int $mode int $pri	count=1
arg_pair	la función callback a ||| array $array callable $callback	count=1
function_name	publicación ||| get ap	count=1
arg_pair	un fichero ||| string $filename int $start	count=1
function_name	tamaño de paso ||| fann get rprop delta	count=1
function_name	acceso calificadores [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	salida ||| int	count=1
function_name	mediante el uso ||| proc	count=1
function_name	funciones definidas ||| functions	count=1
namespace	pid del id de ||| mongoid	count=1
namespace	encuentra disponible ||| function	count=1
function_name	[function_name_1] siguiente ||| [function_name_2] [function_name_1]	count=8
return	objeto imagickpixeliterator de ||| imagickpixeliterator	count=1
function_name	estado del ||| add task status	count=1
return	array con los ||| array	count=4
function_name	tamaño ||| zip entry	count=1
arg_pair	mysql_connection ||| mixed $mysql_connection	count=1
function_name	resultado ||| xdiff file rabdiff	count=1
function_name	http en la ||| nsapi	count=1
function_name	establecer el valor ||| checkbox set value	count=1
function_name	campo ||| ingres field	count=3
function_name	de colores únicos de ||| colors	count=1
function_name	crea un nuevo ||| create	count=1
function	[function_name_1] recurso de ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	con índice field ||| resource $statement mixed $field	count=1
arg_pair	a un ||| int $length	count=1
function_name	[function_name_1] [function_name_2] fue creada la excepción ||| [function_name_1] [function_name_2]	count=2
function_name	de modo [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	modificadores ||| modifier	count=1
function_name	manejador de ||| decl handler	count=1
function_name	el formateo textline ||| textline	count=1
function_name	la [function_name] ||| [function_name] error	count=1
arg_pair	variables globales ||| array $result	count=1
function_name	longitud ||| strlen	count=1
arg_pair	excepto ||| resource $handle	count=1
namespace	indica si el nodo ||| tidynode	count=1
function_name	advertencia esta ||| image	count=1
function_name	bordes de ||| raiseimage	count=1
namespace	ya ha sido creado ||| sdo_das_xml	count=1
arg_pair	primera ocurrencia de needle ||| string $haystack string $needle	count=1
function_name	extremos de la imagen ||| image	count=1
arg_pair	botón ||| int $y	count=1
function_name	llama a la ||| call user func	count=1
arg_pair	desde un array ||| array $array	count=1
function_name	estructura de ||| imap fetchstructure	count=1
function_name	la tangente hiperbólica ||| tanh	count=1
arg_pair	devuelve str con ||| string $encoding	count=2
function_name	el espacio ||| namespace	count=1
return	en el array de ||| array	count=1
function_name	en por lo ||| set mlt min doc frequency	count=1
return	con los ||| array	count=1
arg_pair	en la database especificada ||| string $database	count=1
namespace	crea un yar_client hacia ||| yar_client	count=1
arg_pair	message ||| string $message	count=1
function_name	número de filas que ||| set	count=1
function_name	en blanco retirados del ||| rtrim	count=1
function_name	geoip_country_code_by_name() ||| country code by name	count=2
namespace	obtiene información sobre ||| function	count=1
function_name	al número de campo ||| mssql field	count=1
function_name	de cada capa ||| get layer array	count=1
function_name	das xml que ||| add	count=1
arg_pair	-- ||| zmqsocket $frontend zmqsocket $backend	count=1
return	algoritmo ||| string	count=1
function	[function_name_1] operaciones ||| [function_name_1] [arg_pair_2]	count=3
return	trabajo y llama a ||| bool	count=1
function_name	las funciones internas ||| defined	count=1
function_name	y sólo ||| exceptions	count=1
arg_pair	texto para ||| string $text	count=1
function	cierra [arg_pair_2] ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=1
function_name	[function_name] local o ||| stream socket get [function_name]	count=1
function_name	espera de la ||| query timeout	count=1
function_name	menos ||| set mlt min doc	count=1
function_name	[function_name_1] atributo de ||| [function_name_1] [function_name_2]	count=4
arg_pair	[arg_pair] valor ||| [arg_pair]	count=3
function_name	otra en ||| compositeimage	count=1
namespace	de envío ||| function	count=1
function_name	[function_name_1] seguridad del ||| [function_name_2] [function_name_1]	count=4
arg_pair	len bytes de información ||| int $len int $flags	count=1
function_name	sistema de ficheros ||| eio unlink	count=1
function_name	no se le ||| count	count=1
function_name	añade una etiqueta ||| add	count=1
namespace	de mysqlnd ||| mysqlnduhconnection	count=1
function_name	lee [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	coincida con el objetivo ||| float $fuzz	count=1
function_name	neuronas de cada capa ||| fann get layer array	count=1
function_name	sido ||| add types	count=2
arg_pair	documentada actualmente solamente ||| resource $agent string $str	count=1
function_name	mínimo de ||| mssql min error	count=1
function_name	de la fila ||| fetch	count=2
return	una operación de ||| string	count=1
arg_pair	assoc_array en valores ||| int $options	count=1
return	puedan ||| string	count=1
function_name	establece ||| fdf set status	count=2
arg_pair	una estructura de datos ||| int $num_input	count=1
arg_pair	[arg_pair_1] renombra/mueve ||| [arg_pair_1] [arg_pair_2]	count=3
return	método recupera un valor ||| mixed	count=1
arg_pair	una tabla ||| string $table-name	count=1
function_name	de ssl ||| set sslchecks	count=1
function_name	las diferentes opciones de ||| options	count=1
function	[function_name_1] especificado ||| [function_name_1] table [arg_pair_2]	count=3
arg_pair	de array1 ||| array $array1 array $array2	count=1
function_name	cuando ||| using	count=1
function_name	en una sentencia sql ||| escape	count=1
function_name	simple línea de ||| fit textline	count=1
function_name	imagen de pincel para ||| imagesetbrush	count=1
namespace	prueba probabilística de ||| function	count=1
return	-- zguide ||| zmqsocket	count=1
function_name	dado ||| imap msgno	count=2
namespace	se necesita ||| function	count=1
namespace	para las ||| oauth	count=1
namespace	imagen jpeg o ||| function	count=1
function_name	actual donde ||| chdir	count=1
function_name	usarse para almacenar ||| set	count=1
arg_pair	fijo de colores que ||| int $numcolors int $colorspace	count=2
namespace	valores que se ||| function	count=1
arg_pair	el número ||| resource $imap_stream	count=1
function_name	aplicarse a ||| kernel	count=1
arg_pair	advertencia esta ||| resource $psdoc	count=1
function_name	utilizando ||| crypt	count=1
arg_pair	el evento que se ||| mixed $fd	count=1
function_name	de ||| sslchecks	count=1
function_name	[function_name_1] abstracto ||| [function_name_2] [function_name_1]	count=1
return	con el identificador ||| array	count=1
return	o y creando un ||| bool	count=1
function_name	valor ||| set using exceptions	count=2
namespace	tiempo máximo de inactividad ||| gearmanclient	count=1
arg_pair	con ||| mixed $bordercolor int $width	count=1
arg_pair	propiedades correspondientes a los ||| array $ctorparams int $row	count=1
return	nodo especificado por ||| domnode	count=1
function_name	siguiente entero menor para ||| floor	count=1
function_name	documentos como este serán ||| frequency	count=1
return	se usa [return] obtener la ||| [return]	count=1
arg_pair	un grado de ||| array $env array $other_options	count=1
function_name	colores de primer plano ||| ncurses	count=1
function_name	propiedad tamaño de punto ||| point size	count=1
function_name	pulse una tecla ||| wait for key	count=1
namespace	la cuenta de ||| gmagickpixel	count=1
namespace	la cadena de instancia ||| sdo_das_xml	count=1
arg_pair	crea un directorio ||| string $path string $log_message	count=1
function	byte en [arg_pair_2] ||| [function_name_1] type [arg_pair_2]	count=1
function_name	matriz con la lista ||| list	count=1
function_name	copia de seguridad ||| set highlight alternate	count=2
function_name	cadena artista ||| artist	count=1
function_name	tupla previa de la ||| prev	count=1
function_name	y devuelve la porción ||| mb strrchr	count=1
function_name	a colocar antes del ||| prefix	count=1
namespace	acceso está establecido a ||| function	count=1
function_name	[function_name_1] siguiente fila ||| [function_name_2] [function_name_1]	count=4
function_name	para la ||| set highlight	count=1
function_name	obtiene el tiempo ||| context get	count=1
arg_pair	crea un efecto de ||| int $width int $height	count=1
arg_pair	esta es una ||| mixed $value	count=1
function_name	que la clave ||| delete multi by key	count=1
arg_pair	esta función acepta ||| float $number	count=1
function_name	obtener el nombre ||| name	count=2
function_name	establecer ||| color set	count=2
function	[function_name_1] [arg_pair_2] automática ||| [function_name_1] [arg_pair_2]	count=7
function_name	la descripción ||| cairo pattern	count=6
function_name	uuencode ||| mailparse uudecode	count=1
arg_pair	del reloj ||| float $beta	count=1
function_name	permite controlar el brillo ||| modulate	count=1
return	analiza un ||| resource	count=1
arg_pair	con nombre name ||| string $name	count=1
function	documento xml [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	data mediante el método ||| string $data	count=1
function_name	[function_name_1] del trazo ||| [function_name_1] [function_name_2]	count=2
arg_pair	un ||| int $channel	count=1
function_name	variables de reescritura establecidas ||| output reset rewrite	count=1
function_name	entidades no analizadas ||| unparsed entity decl	count=2
function_name	[function_name_1] información asociada ||| [function_name_1] [function_name_2]	count=1
arg_pair	local [arg_pair_2] ||| [arg_pair_2] [arg_pair_1] int $startpos	count=1
arg_pair	de str ||| string $str string $character_mask	count=1
function_name	firma digital ||| openssl pkcs7 verify	count=1
return	si todavía ||| int	count=1
return	recupera la instancia ||| yaf_application	count=1
function_name	devuelve un [function_name] ||| get [function_name]	count=1
function_name	espacio de nombres especificado ||| namespace	count=1
namespace	especificado a través del ||| function	count=1
function_name	aguja en ||| strripos	count=1
function_name	obtiene el nombre ||| pdf get	count=1
function_name	[function_name_1] tidy con ||| [function_name_2] [function_name_1]	count=2
namespace	de ||| solrquery	count=1
function_name	[function_name_1] verde de ||| [function_name_2] [function_name_1]	count=4
arg_pair	el método ||| string $method	count=1
arg_pair	una ||| float $ury string $url	count=1
arg_pair	por el algoritmo ||| string $lib_dir	count=1
function_name	mueve [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	tamaño de paso ||| rprop delta	count=3
function_name	unrar encuentre un error ||| set using	count=1
function_name	datos lob de tamaño ||| db2 lob	count=1
function_name	extensión de ||| image type to extension	count=1
function_name	obtiene el factor de ||| trader get	count=1
namespace	a una base de ||| function	count=1
function_name	función de ||| kernel	count=1
function_name	está actualmente siendo ejecutada ||| is running	count=1
function_name	definición de color ||| color content	count=1
function_name	valor especial indicando ||| using	count=1
arg_pair	esta función intenta asegurarse ||| string $filename string $destination	count=1
return	excepto que ||| string	count=1
return	al principio ||| void	count=1
function_name	notación notation para el ||| set notation decl	count=1
function_name	las conexiones ||| get	count=1
function_name	[function_name_1] de etiqueta ||| elements by [function_name_2] [function_name_1]	count=1
function_name	compilado como thread-safe ||| maxdb thread safe	count=1
return	cadena de instancia ||| sdo_das_xml_document	count=1
function_name	un identificador único ||| hash	count=1
return	a este ||| void	count=1
function_name	la altura de la ||| height	count=1
arg_pair	nodo origen a una ||| string $uri	count=1
function_name	negación lógica ||| variant neg	count=1
function_name	resultado frontbase asociado con ||| fbsql data	count=1
function_name	[function_name_1] estadísticas de ||| [function_name_2] [function_name_1]	count=1
arg_pair	intenta ||| resource $handle	count=1
function_name	a la cola de ||| queue	count=1
function	[function_name_1] repos_url ||| [arg_pair_2] [function_name_1]	count=2
function_name	línea establecida por splfileobject::setmaxlinelen() ||| line len	count=1
return	el código ||| int	count=1
arg_pair	un umbral ||| float $threshold	count=1
function_name	que corresponde al nombre ||| by name	count=1
namespace	en des de unix ||| function	count=1
arg_pair	subject coincidencias ||| mixed $subject int $limit	count=1
function_name	crea un efecto de ||| raiseimage	count=1
return	en un estado que ||| bool	count=1
function_name	color de fondo ||| background color	count=3
namespace	enésima dada por ||| function	count=1
function_name	la lista de parámetros ||| open memory image	count=1
arg_pair	filename usando ||| string $filename	count=1
function_name	obtiene varios valores que ||| get	count=1
return	en parámetros previamente calculados ||| bool	count=4
function_name	transformación actual de ||| text matrix	count=1
arg_pair	dsn disponibles después ||| resource $connection_id	count=1
function_name	xml dada ||| load	count=1
function_name	[function_name] de un ||| set [function_name]	count=3
function_name	geoip_country_code_by_name() ||| country	count=1
function	[function_name_1] una imagen ||| [arg_pair_2] [function_name_1]	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=26
arg_pair	archivo asociado [arg_pair] ||| [arg_pair]	count=3
arg_pair	tridimensional ||| int $height	count=1
function_name	para el párametro ||| odbc cursor	count=1
function_name	de ||| ncurses color	count=1
arg_pair	[arg_pair_1] una ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	archivo nombrado por infilename ||| string $outfilename	count=1
function_name	mime kopfzeile en ||| iconv mime	count=1
function_name	de ||| interlace	count=1
function_name	html del fichero ||| load htmlfile	count=1
function_name	control de la ||| gupnp control point	count=1
function_name	dirección del secundario ||| get	count=1
namespace	a que todos ||| function	count=1
function_name	el bitrate ||| bitrate	count=1
function_name	copia de [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function	[function_name_1] un mapa ||| [function_name_1] [arg_pair_2]	count=3
namespace	mensaje especificado que ||| function	count=1
return	usando una función definida ||| void	count=2
function_name	vacía el [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	de memcached::cas() con la ||| float $cas_token	count=1
arg_pair	renombra/mueve ||| string $newparent	count=1
function_name	el valor actual del ||| newt checkbox set value	count=1
namespace	actual ||| iterator	count=1
namespace	elemento actual directoryiterator es ||| directoryiterator	count=1
function_name	[function_name_1] algoritmo ||| [function_name_2] [function_name_1]	count=1
namespace	oauth para ||| oauth	count=1
function_name	conectarla ||| pg ping	count=2
function_name	que las palabras que ||| set mlt min doc frequency	count=1
arg_pair	delimiter como delimitador de ||| string $delimiter	count=1
function_name	los encabezados ||| set soap headers	count=1
function_name	en ||| set mlt min doc	count=2
function_name	la imagen del ||| image	count=1
function_name	jerarquía entera ||| checkin	count=1
function_name	afecta al ||| count	count=1
function	[function_name_1] campo ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=2
function_name	actual del trazo ||| rgbstroke	count=1
namespace	idéntica a fgets() excepto ||| function	count=1
function_name	devuelve el nombre ||| zip entry name	count=1
arg_pair	una nueva ||| int $key string $value	count=1
function_name	conexión especificada ||| sqlsrv	count=1
namespace	lo buzones que ||| function	count=1
function_name	borra los registros ||| delete	count=1
function_name	de recorte de una ||| clip	count=1
arg_pair	colas ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	tener que usar mapreduce ||| array $options	count=1
arg_pair	modo de ||| int $pri	count=1
namespace	en el mapa ||| weakmap	count=1
arg_pair	user especificado ||| resource $link_identifier string $user	count=1
arg_pair	flatness ||| resource $pdfdoc float $flatness	count=1
function_name	la que ||| set mlt min doc	count=1
arg_pair	intenta ||| resource $handle int $length	count=1
arg_pair	fichero al archivo ||| string $localname	count=1
namespace	que contiene variables ||| function	count=1
function_name	ambos puedan aplicarse a ||| add kernel	count=1
arg_pair	argumento offset ||| int $offset	count=1
return	incluya en ||| bool	count=1
function_name	protocolo ||| proto info	count=1
function_name	una intersección ||| array uintersect	count=1
namespace	actualmente señalado ||| splobjectstorage	count=1
arg_pair	de ||| string $password string $charset	count=1
arg_pair	completamente conectada empleando un ||| int $num_layers	count=1
arg_pair	retira ||| string $character_mask	count=1
function_name	un número es ||| gmp prob	count=1
function_name	si el parámetro fue ||| is	count=1
function_name	paso de sarprop ||| sarprop	count=2
function_name	cuando la ||| exceptions	count=1
arg_pair	path ||| string $path int $flags	count=1
namespace	es utilizado por arrayobject::getiterator() ||| arrayobject	count=1
function_name	las palabras que no ||| min doc	count=1
function_name	se buscarán los ||| dbplus	count=1
function_name	número de columna ||| column number	count=1
function_name	reescritura establecidas previamente ||| rewrite vars	count=1
function_name	un ||| mailparse uudecode	count=1
function_name	[function_name_1] campo ||| [function_name_2] [function_name_1]	count=18
function_name	el índice ||| iterator index	count=1
arg_pair	de un mapa ||| string $domain string $map	count=1
arg_pair	la sesión del recurso ||| resource $ch	count=1
function_name	[function_name_1] de argumentos ||| [function_name_1] [function_name_2]	count=2
function_name	paginación ||| ldap control paged result	count=1
function_name	[function_name_1] interno ||| [function_name_2] [function_name_1]	count=14
function	de escala [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	pertenecen a esta ||| class names	count=1
function_name	espara a ||| loop	count=1
namespace	una matriz con las ||| gmagick	count=1
arg_pair	una nueva entrada ||| string $key	count=1
arg_pair	por la conexión ||| resource $link_identifier	count=1
function_name	blob ||| ibase blob	count=6
namespace	tailable que ||| mongocursor	count=1
arg_pair	nuevo ítem ||| string $text	count=1
function_name	construye un nuevo ||| construct	count=1
return	de ||| zmqsocket	count=4
namespace	se ||| function	count=36
function_name	de registros filas en ||| dbase numrecords	count=1
arg_pair	unicode asignados entre los ||| int $namechoice	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] phar [function_name_2]	count=6
arg_pair	una estructura ||| int $num_data	count=1
function_name	en el atributo ||| attribute	count=1
function_name	siguiente ||| next	count=10
return	el ||| bool	count=11
function_name	encuentra ||| ps	count=1
return	habilitar su almacenamiento en ||| bool	count=1
return	aparecen en ||| string	count=1
namespace	creada por ||| function	count=1
return	la posición en ||| bool	count=1
function_name	tidy a sus ||| tidy	count=1
function_name	el id de sesión ||| id	count=1
function_name	número máximo de caracteres ||| highlight max	count=2
return	en el sentido contrario ||| bool	count=1
function_name	el de estilo ||| set slide show	count=1
function_name	un proceso abierto ||| proc get status	count=1
arg_pair	caracteres ||| string $str	count=2
function_name	blob/clob ejecutando la ||| lob	count=1
function_name	la última petición ||| last request	count=2
function_name	la csr ||| openssl csr	count=1
arg_pair	a**r)/gamma r ||| float $a float $r	count=1
arg_pair	prepara ||| resource $id string $type	count=1
arg_pair	texto text en una ||| resource $p string $text	count=1
return	en el registro para ||| bool	count=1
arg_pair	subject coincidencias de ||| mixed $subject	count=1
function_name	encuentre un ||| using exceptions	count=1
function_name	descripción de ||| get surface	count=1
function_name	y devolver un ||| set using	count=1
function	[function_name_1] [arg_pair_2] conjunto ||| [function_name_1] notify [arg_pair_2]	count=1
arg_pair	y ordena números de ||| string $search_criteria string $charset	count=1
function_name	de cargar entidades externas ||| entity loader	count=1
arg_pair	el conjunto óptimo ||| int $nullable	count=1
return	será generada al ||| void	count=1
function_name	usa para convertir ||| convert to	count=1
function_name	punto primario verde de ||| getimagegreenprimary	count=1
return	barras invertidas ||| string	count=1
arg_pair	a service para el ||| string $service	count=1
return	especificadas en ||| bool	count=1
arg_pair	una rutina de interoperabilidad ||| string $alias	count=1
function_name	sobre un socket ||| socket	count=1
function_name	[function_name_1] lo contornea ||| [function_name_1] [function_name_2]	count=3
arg_pair	esta función devolverá ||| resource $connection_id	count=1
arg_pair	el valor de ||| int $flags	count=1
function_name	[function_name_1] del borde ||| [function_name_2] [function_name_1]	count=4
arg_pair	datos usando el oid ||| resource $conn_identifier string $oid	count=1
function_name	nombre de clase iterador ||| iterator class	count=2
function_name	si un número es ||| gmp prob prime	count=1
arg_pair	un directorio ||| string $directory resource $context	count=1
return	cada archivo codificado ||| array	count=1
arg_pair	cualesquiera bytes ||| int $length	count=1
function_name	afectadas ||| msql affected	count=1
function_name	descripción de la función ||| cairo	count=1
function_name	obtiene la posición ||| get position	count=1
function_name	tamaño actual de ||| zip	count=1
arg_pair	bytes str de acuerdo ||| string $str string $charset	count=1
arg_pair	cubrid_set_query_timeout() se usa para ||| resource $req_identifier	count=1
function_name	reintentos en ||| retry count	count=1
namespace	un código ||| intlchar	count=1
function_name	sobre un socket ||| socket accept	count=1
function_name	la acción ||| action	count=2
namespace	de error de cualquier ||| function	count=1
function_name	unicode uppercase ||| uuppercase	count=1
namespace	fgets() excepto que ||| function	count=1
arg_pair	message al ||| string $message string $options	count=1
function_name	certificado ||| pkcs7 sign	count=2
arg_pair	método y ||| string $method	count=2
function_name	patrón ||| pattern	count=5
function_name	establece ||| timezone set	count=2
return	la información sobre ||| object	count=1
function_name	a la de memcached::touch() ||| touch by key	count=1
function_name	de memcached::touch() con la ||| touch by key	count=1
arg_pair	string utilizando el algoritmo ||| string $str	count=1
function_name	llena un array con ||| array fill	count=1
return	que aparecen ||| string	count=1
function_name	widrow + nguyen ||| weights	count=1
function_name	la codificación de ||| convert encoding	count=1
function_name	que aparecen en ||| addcslashes	count=1
return	de inactividad de ||| int	count=1
arg_pair	texto dado en signed_text ||| resource $identifier string $signed_text	count=1
function_name	[function_name_1] de neuronas ||| [function_name_1] [function_name_2]	count=1
return	única función de ||| void	count=1
arg_pair	texto ||| resource $psdoc string $text	count=1
function_name	serán ||| mlt min term	count=1
function_name	entrada a las ||| get	count=2
function_name	el máximo de ||| max	count=1
function_name	de la ||| interlace scheme	count=1
function_name	actualiza el ||| ifx update	count=1
function_name	los campos morelikethis ||| mlt field	count=2
arg_pair	un archivo phar ||| string $filename	count=1
namespace	si el argumento ||| rarexception	count=1
function_name	el número máximo de ||| max analyzed	count=1
function_name	grafema ||| grapheme stripos	count=1
function_name	actual de una ||| filesize	count=1
function_name	espera de la ||| set query timeout	count=1
function_name	ya ||| add	count=1
arg_pair	vector de ||| resource $ann array $input_vector	count=1
arg_pair	o ||| zmqsocket $frontend	count=1
return	una ||| gmagick	count=1
function_name	términos serán ||| mlt min	count=1
function_name	nombre del espacio del ||| space	count=1
function_name	de haruannotation ||| text annotation	count=1
namespace	objeto en formato string ||| serializable	count=1
function_name	[function_name_1] oauth ||| [function_name_2] [function_name_1]	count=2
function_name	espacio) para la página ||| text leading	count=1
function_name	o recupera el database ||| database	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] int $row_number [arg_pair_2]	count=4
arg_pair	con barras invertidas antes ||| string $str	count=1
return	extrae ||| array	count=1
function_name	épocas permitido para ||| epochs	count=1
function_name	nuevo contexto con ||| gupnp context new	count=2
arg_pair	sistema ||| string $str	count=1
function_name	entero solrquery::facet_sort_index o ||| facet sort	count=1
arg_pair	sobre [arg_pair] ||| [arg_pair]	count=2
namespace	del ||| splfixedarray	count=1
namespace	mysql iniciada por ||| function	count=1
arg_pair	pequeño que ||| resource $ann float $rprop_delta_min	count=1
function_name	el tamaño de paso ||| get rprop delta	count=2
function_name	cookie ||| cookie	count=2
function_name	biblioteca unrar encuentre un ||| using	count=1
function_name	tipo de ||| field type	count=1
function	para establecer [arg_pair_2] ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=4
function_name	instrucciones de proceso ||| processing instruction	count=1
function_name	vinculada de oracle ||| oci	count=1
namespace	una nueva [namespace] ||| [namespace]	count=1
function_name	control ||| iscntrl	count=1
function_name	obtener el tipo ||| type	count=1
function_name	el mismo ||| is same	count=1
namespace	colas o ||| zmqdevice	count=1
function_name	jpeg ||| iptcembed	count=1
return	servicios colas o cualquier ||| zmqsocket	count=1
arg_pair	una ||| array $rectangle	count=2
return	el array después ||| void	count=1
namespace	des de unix ||| function	count=1
return	en donde se originaron ||| bool	count=1
function_name	elementos descendientes con ||| ns	count=1
function_name	[function_name_1] fuente ||| function float [function_name_1] [function_name_2] resource $pdfdoc int $font	count=2
function_name	zip desde un ||| from	count=1
function_name	datos del apuntador de ||| mailparse uudecode	count=1
function_name	épocas que [function_name_2] ||| [function_name_2] max out [function_name_1]	count=1
function_name	y ||| pdf	count=4
namespace	colores de primer ||| function	count=1
arg_pair	puerto específicado ||| string $host_ip int $port	count=1
arg_pair	contenido de datos blob/clob ||| resource $lob_identifier	count=1
namespace	indicada cuando este trabajo ||| gearmanjob	count=2
function_name	la función cubrid_drop() ||| drop	count=1
arg_pair	y namespaceuri ||| string $namespaceuri	count=1
function_name	emitir advertencias ||| using	count=1
function_name	de entrada/salida ||| tidy	count=1
function_name	donde se ||| dbplus	count=1
function_name	objeto [function_name] ||| [function_name] pages	count=1
function	[function_name_1] un mapa ||| [arg_pair_2] [function_name_1]	count=3
function_name	el propietario del ||| eio fchown	count=1
namespace	base de ||| harufont	count=1
function_name	[function_name_1] [function_name_2] máximo ||| [function_name_1] mlt max [function_name_2]	count=1
function_name	lista de imágenes ||| removeimage	count=1
function_name	descripción de la ||| cairo ps level	count=1
arg_pair	atributos de un dn ||| resource $link_identifier string $dn	count=2
namespace	un hash ||| quickhashintstringhash	count=1
function_name	errores del ||| errors	count=1
namespace	direcciones servicios ||| zmqdevice	count=1
return	dos ||| resource	count=1
function_name	usar para establecer ||| set module	count=1
function_name	si ||| count	count=1
function_name	como valores ||| count values	count=1
arg_pair	información data especificada ||| string $data	count=1
namespace	la tarea ||| gearmantask	count=1
function_name	por la transacción ||| commit	count=1
function_name	disponible ||| open	count=1
function_name	[function_name_1] la longitud ||| [function_name_2] [function_name_1]	count=3
arg_pair	uso futuro ||| float $new_input_min float $new_input_max	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] highlight alternate [function_name_1]	count=3
return	y ||| array	count=13
return	la lista de ||| int	count=1
function_name	carga un segundo o ||| add types	count=1
arg_pair	representación dom ||| domnode $node	count=1
function_name	[function_name_1] verde ||| [function_name_2] [function_name_1]	count=4
function_name	el atributo dado ||| attribute ns	count=1
arg_pair	inmediatemente después de ||| int $options string $opened_path	count=1
function_name	error de cualquier error ||| bzerrstr	count=1
arg_pair	intermediarios ||| zmqsocket $backend	count=1
arg_pair	u otros caracteres del ||| string $str	count=1
function_name	en por lo ||| mlt	count=1
function_name	antigua que la última ||| last	count=1
return	redefine la ||| int	count=1
arg_pair	los ||| int $x	count=1
arg_pair	ocurrencia de needle ||| string $haystack string $needle	count=3
rest	en el [function_2] ||| [return_1] [function_2]	count=1
function_name	generador de ||| set highlight fragmenter	count=1
arg_pair	disponibles en el ||| string $str	count=1
function_name	alto de la ||| height	count=1
arg_pair	un ||| resource $connection	count=4
arg_pair	función callback dependiendo ||| callable $callback	count=1
function_name	trozos remarcados [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	estado actual de un ||| resource $pdfdoc	count=1
arg_pair	cualesquiera ||| resource $handle	count=1
arg_pair	según el criterio y ||| int $sortdirection	count=2
function_name	[function_name_1] con estadísticas ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] escribir ||| [function_name_2] [function_name_1]	count=1
arg_pair	nombre de archivo ||| resource $p string $filename	count=1
namespace	los archivos tar/zip no ||| phardata	count=1
return	acepta uno dos o ||| string	count=1
arg_pair	una ||| mixed $connection string $gtrid	count=1
arg_pair	x509cert proporcionado incluyendo los ||| mixed $x509cert	count=1
namespace	filas ||| sqlite3	count=1
function_name	imagen izquierda y ||| image	count=1
namespace	closedir() solo que el ||| directory	count=1
return	apuntador de archivo dado ||| array	count=1
function_name	documento mínima ||| terms min count	count=2
function_name	para guardar la información ||| save path	count=1
arg_pair	connection_string ||| string $connection_string	count=1
arg_pair	mensaje para el ||| resource $imap_stream	count=1
return	en un cuarto oscuro ||| bool	count=2
function_name	[function_name_1] una versión ||| [function_name_1] [function_name_2]	count=6
function_name	identificador único ||| spl object hash	count=1
arg_pair	documento xml desde la ||| string $filename int $options	count=1
namespace	una característica conocia ||| mongocursor	count=1
function_name	limpia el bit lo ||| gmp clrbit	count=1
function_name	biblioteca unrar encuentre un ||| using exceptions	count=1
namespace	das ||| sdo_das_xml	count=1
arg_pair	es una ||| mixed $value	count=1
function_name	calcula el logaritmo natural ||| ln	count=1
function_name	campos en ||| field	count=2
function_name	registro del conjunto ||| record	count=1
arg_pair	función cubrid_set_query_timeout() ||| int $timeout	count=1
function_name	simple línea ||| fit textline	count=1
function_name	uno dos o ||| number	count=1
arg_pair	object es de ||| object $object string $class_name	count=1
arg_pair	un campo es ||| resource $fdf_document	count=1
function_name	warning ||| warning	count=1
function_name	el ||| proc get	count=1
function_name	cada servidor virtual de ||| server	count=1
function_name	[function_name_1] el número ||| [function_name_1] max [function_name_2]	count=1
function_name	de iteradores adjuntos ||| count iterators	count=1
namespace	y ||| zmqdevice	count=1
function_name	y devuelve ||| get contents	count=1
function_name	el iterador ||| iterator	count=3
function_name	cierra el diccionario ||| crack closedict	count=1
function_name	punto primario verde ||| getimagegreenprimary	count=1
function_name	[function_name_1] la ||| [function_name_2] [function_name_1]	count=1
arg_pair	nth de a y ||| gmp $a int $nth	count=1
function_name	información blob/clob ||| cubrid lob export	count=1
function_name	coseno para ||| cos	count=1
arg_pair	image ||| float $inputgamma	count=1
namespace	si el [namespace] es ||| [namespace]	count=8
function_name	usa spanscorer ||| highlight highlight multi term	count=1
function_name	de entrecomillado apropiado ||| quote	count=1
namespace	devuelve un mensaje de ||| function	count=1
function_name	un nuevo archivo pdf ||| pdf	count=1
arg_pair	envía una ||| string $query	count=1
function_name	las cabeceras ||| nsapi request headers	count=1
function_name	la función geoip_domain_by_name() devolverá ||| domain by	count=1
function_name	es ||| set	count=1
namespace	subsiguiente fichero de ||| sdo_das_xml	count=1
namespace	función definida por el ||| arrayiterator	count=2
arg_pair	mysql_field_name() ||| int $field_offset	count=1
function_name	si no coincide ningún ||| match	count=1
arg_pair	de una expresión regular ||| string $pattern	count=2
function_name	nodo [function_name_2] ||| [function_name_2] attribute [function_name_1]	count=1
namespace	de trabajo ||| gearmanclient	count=1
function_name	[function_name_1] fecha ||| [function_name_2] [function_name_1]	count=3
function_name	abre el archivo ||| eio open	count=1
function	comprueba si [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	devueltos desde el domain ||| string $domain	count=1
function_name	de configuración dado su ||| ini	count=1
namespace	sets ||| solrdismaxquery	count=1
namespace	es un carácter base ||| intlchar	count=1
function_name	pdf [function_name_2] ||| [function_name_1] fit [function_name_2]	count=1
function_name	[function_name_1] última fila ||| [function_name_2] insert [function_name_1]	count=2
function_name	de conexión actual ||| autocommit	count=1
namespace	de la ||| imagick	count=1
function_name	sets tie ||| tie	count=1
return	x e y ||| array	count=1
function_name	como este serán ignoradas ||| mlt min	count=1
function_name	de los ciclos ||| collect cycles	count=1
function_name	de acceso calificadores ||| conf	count=1
function_name	las propiedades de ||| properties	count=1
function_name	solicitado que se ||| fdf set	count=1
function_name	del esquema solicitado de ||| cubrid schema	count=1
function_name	devuelve el error sqlstate ||| get sqlstate	count=1
arg_pair	lista de parámetros ||| resource $psdoc	count=1
function_name	firma usando el certificado ||| sign	count=1
arg_pair	una declaración ||| string $query_string	count=1
function_name	dirección del ||| get	count=1
arg_pair	un grupo ||| resource $grp int $limit	count=1
function_name	número es ||| gmp prob prime	count=1
function_name	el iterator ||| iterator	count=1
namespace	esta función acepta ||| function	count=1
function_name	función bindtextdomain() establece ||| bindtextdomain	count=1
function_name	de las diferentes opciones ||| assert options	count=1
arg_pair	n por ||| gmp $n	count=1
function_name	que identifican ||| odbc specialcolumns	count=1
function_name	se encuentra ||| memory	count=1
namespace	[namespace] ejemplo ||| [namespace]	count=3
function_name	desde el parámetro rows ||| pg copy from	count=1
arg_pair	coloca un hipervínculo ||| float $lly float $urx	count=1
arg_pair	los efectos de capa ||| int $effect	count=1
function_name	el html ||| html	count=1
function_name	obetiene ||| getimagedelay	count=1
function_name	virtual ||| dbplus	count=1
function_name	un diff unificado ||| file diff	count=1
function	[function_name_1] objetivo especificado ||| [arg_pair_2] [function_name_1]	count=1
function_name	de paso inicial ||| fann get rprop delta zero	count=1
function_name	basado en ||| ps shading	count=1
function_name	devuelve la extensión ||| image type to extension	count=1
function_name	la ||| gmp	count=2
function_name	[function_name_1] atributo de ||| [function_name_2] [function_name_1]	count=4
function_name	devolver ||| set using	count=1
function_name	en lugar de ||| set	count=1
return	de canales de un ||| int	count=1
function_name	número de patrones ||| length	count=1
function_name	máximo ||| max analyzed chars	count=2
arg_pair	parecida a ||| string $servername	count=1
namespace	función específica [namespace] ||| [namespace]	count=2
function_name	icu ||| intl	count=1
function_name	xml ||| xml get	count=3
arg_pair	o cualquier ||| zmqsocket $frontend	count=1
function_name	descripción de ||| cairo pattern get color stop	count=1
function_name	las propiedades asociadas que ||| image properties	count=1
function_name	función ||| data	count=1
namespace	actual a el ||| harupage	count=1
function_name	[function_name_1] sqlite ||| [function_name_2] [function_name_1]	count=6
arg_pair	de ||| int $type float $disp_time	count=3
function_name	devuelve el ||| db2 get	count=1
namespace	valida [namespace] un ||| [namespace]	count=1
arg_pair	por flag ||| int $options	count=1
function_name	más opciones ||| yaz set option	count=1
function_name	de imagen ||| set	count=1
namespace	que especifica la ||| gmagickdraw	count=1
function_name	define la ||| set flatness	count=1
function_name	[function_name] de ||| remove [function_name]	count=1
function_name	la última modificación ||| mdtm	count=1
function_name	por utf-8 ||| utf8 decode	count=1
function_name	uuencode ||| mailparse uudecode all	count=2
arg_pair	destinatarios cc ||| string $cc	count=1
arg_pair	de la ruta en ||| bool $recursive	count=1
function_name	con los nombres ||| field names	count=1
function_name	el punto primario rojo ||| image red primary	count=1
arg_pair	horizontal y vertical al ||| float $x float $y	count=1
namespace	cuando se enlaza con ||| function	count=1
function_name	las diferentes opciones de ||| assert options	count=1
function_name	de páginas raíz para ||| set	count=1
function_name	vacío con ||| add empty	count=1
function_name	[function_name_1] neuronas de ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] ya está ||| [arg_pair_2] [function_name_1]	count=4
function_name	iniciar ||| win32 start	count=1
namespace	[namespace] para ||| [namespace]	count=3
function_name	entrenamiento desde una ||| train from	count=1
arg_pair	la lista de filtros ||| int $read_write	count=2
function_name	campo para [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	libera los recursos ||| db2 free	count=2
namespace	especial ||| rarexception	count=1
function_name	nivel de severidad ||| severity	count=1
namespace	espera a ||| gearmanworker	count=1
function_name	resida fuera de ||| runkit import	count=1
namespace	archivos ||| function	count=1
function_name	intenta eliminar cualesquiera bytes ||| fgetss	count=1
function_name	establece [function_name_2] ||| [function_name_1] max word [function_name_2]	count=2
arg_pair	establece variables globales ||| string $encoded_string array $result	count=1
function_name	el puntero ||| bzerrstr	count=1
function_name	de petición ||| nsapi	count=1
function_name	a la función mssql_free_statement() ||| statement	count=1
function_name	[function_name_1] la longitud ||| [function_name_1] mlt min word [function_name_2]	count=1
arg_pair	versión ||| string $msgid1	count=1
arg_pair	no está conectada completamente ||| int $num_neurons1	count=1
function_name	ruta por ||| get route	count=1
function_name	abre ||| open	count=10
function_name	certificado proporcionado por ||| openssl x509 read	count=1
arg_pair	con la key existe ||| string $key	count=1
arg_pair	un string a ||| string $str	count=1
namespace	tiff o ||| function	count=1
function_name	cubrid_drop() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un ||| get status	count=2
function_name	devuelve ||| memory get	count=1
function_name	gravedad actual de ||| gravity	count=1
function_name	parámetros ||| params	count=5
return	la ||| solrquery	count=2
function_name	como este serán ignoradas ||| min doc frequency	count=1
function_name	establece ||| set callback	count=1
function_name	error ||| error function	count=2
function_name	función ||| uasort	count=1
function_name	descripción de ||| cairo pattern create rgb	count=1
arg_pair	ubica el ||| int $offset int $whence	count=1
function_name	previa de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	obtiene ||| openssl get	count=1
arg_pair	una base de datos ||| string $database resource $link_identifier	count=1
arg_pair	los dispositivos de ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	o ||| add	count=2
function_name	paso máximo ||| get rprop delta max	count=1
arg_pair	de filtros adjuntos ||| mixed $params	count=2
function_name	descripción de ||| cairo	count=1
function_name	al servidor ingres ||| ingres query	count=1
function_name	almacena el resultado ||| xdiff file patch	count=1
namespace	los ||| solrclient	count=1
function	cadena [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
namespace	si la [namespace] ||| [namespace]	count=2
arg_pair	función pretende usarse ||| string $class_name string $file_extensions	count=1
arg_pair	de las restricciones de ||| string $field_override	count=1
namespace	a popen() pero ||| function	count=1
arg_pair	de un ||| string $server_key	count=1
function_name	instancia xml dada ||| load string	count=1
function_name	[function_name_1] las flags ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] contornea ||| [function_name_1] fill [function_name_2]	count=1
arg_pair	índice dado ||| string $index string $newval	count=1
function_name	que ||| min	count=2
function_name	imagen izquierda y derecha ||| image	count=1
function	[function_name_1] reconstruida ||| [arg_pair_2] [function_name_1]	count=4
return	regla del número de ||| bool	count=1
function_name	objeto [function_name] todas las ||| [function_name] pages	count=1
arg_pair	parecida ||| string $charset	count=1
function_name	datos rrd [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	seguimiento tailable que son ||| tailable	count=1
arg_pair	message al buzón ||| string $message string $options	count=1
function_name	encuentre un error una ||| set using exceptions	count=1
function_name	o ||| types	count=1
namespace	con ibase_connect() o ||| function	count=1
function_name	conexión con ||| connect	count=1
function_name	el número de filas ||| rows	count=7
function_name	a log 1 + ||| log1p	count=1
function_name	nombre de host o ||| by name	count=1
function_name	nombres de los métodos ||| methods	count=1
function_name	base de las ||| get	count=1
arg_pair	imagen ||| int $x int $y	count=1
namespace	recupera ||| yaf_controller_abstract	count=1
function_name	establece una [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	objeto samconnection conecta el ||| string $protocol array $properties	count=1
function_name	la representación que ||| to	count=1
function_name	carga el fichero ttf ||| ttf	count=1
arg_pair	fallará si key ||| string $key mixed $value	count=1
function_name	descripción de la ||| cairo matrix transform point	count=1
arg_pair	el domain por gettext() ||| string $codeset	count=1
function_name	al nombre de ||| by name	count=1
namespace	un das xml que ||| sdo_das_xml	count=1
function_name	errores y alertas ||| errors	count=1
arg_pair	certificado) basada ||| array $configargs array $extraattribs	count=1
function_name	al nombre de sitio ||| code by name	count=1
function_name	suspende la página ||| page	count=1
function_name	definidos por ||| control point browse start	count=1
arg_pair	parámetro charlist ||| string $charlist	count=1
namespace	plantilla y devuelve ||| yaf_view_simple	count=1
function_name	ideal especificado ||| set highlight regex slop	count=1
function	borra los [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	len bytes ||| int $len	count=2
function_name	y sólo ||| set using exceptions	count=1
function_name	la función cubrid_error_code() ||| error code	count=1
function_name	de la imagen ||| scheme	count=1
namespace	usar cuando una tarea ||| gearmanclient	count=1
return	si el puntero ||| bool	count=1
function_name	función analiza una url ||| parse url	count=1
namespace	definida por el usuario ||| arrayiterator	count=2
function_name	lo menos ||| mlt	count=1
function_name	lo ||| set mlt min	count=1
function_name	graphicsmagick como ||| getreleasedate	count=1
function_name	mantenidos por la transacción ||| commit	count=1
function_name	[function_name] ocurrió ||| get [function_name]	count=3
function_name	para convertir un ||| convert to data	count=1
arg_pair	sobrescribir el dominio ||| string $domain	count=1
arg_pair	el punto x3 y3 ||| float $y3	count=1
function_name	código [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	datos del apuntador de ||| mailparse	count=1
namespace	paleta creada por funciones ||| function	count=1
namespace	zip nuevo para lectura ||| ziparchive	count=1
function_name	[function_name_1] o información ||| [function_name_2] [function_name_1]	count=1
function	error [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	de retorno apropiada ||| bool	count=1
function_name	devuelve el copyright de ||| get copyright	count=1
function_name	vacía el [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	obtiene [return] caracter ||| [return]	count=1
function_name	la firma de verificación ||| signature	count=1
arg_pair	memcached::getmulti() con la excepción ||| int $flags	count=1
function_name	[function_name_1] estableciendo zend.enable_gc ||| [function_name_2] [function_name_1]	count=1
function_name	que se van a ||| start	count=1
function_name	transformación actual ||| text matrix	count=1
function_name	que las ||| set mlt min doc frequency	count=1
return	todos ||| bool	count=1
function_name	del complemento ||| mysqlnd	count=1
arg_pair	parecida a ||| string $charset	count=1
function_name	el esquema ||| schema	count=1
arg_pair	de un texto freetype ||| string $text	count=1
namespace	cromaticidad como una ||| gmagick	count=1
function_name	prepara el siguiente resultado ||| next result	count=1
function_name	menos ||| frequency	count=1
namespace	carácter dado con su ||| intlchar	count=3
function_name	el modo [function_name_2] ||| [function_name_2] text rendering [function_name_1]	count=1
arg_pair	apunta a un ||| resource $statement	count=1
function_name	cubrid_lob2_new() u obtenido ||| lob2 close	count=1
arg_pair	información data especificada usando ||| string $data	count=1
namespace	de acceso a lectura ||| function	count=1
namespace	llamada más reciente a ||| function	count=2
arg_pair	pattern según las reglas ||| int $flags	count=1
arg_pair	de un ||| resource $result int $index	count=2
function_name	lista de servidores ||| servers	count=1
function_name	las entradas de los ||| input	count=1
namespace	entero que ||| ev	count=1
arg_pair	llamarla varias ||| resource $connection_id	count=1
function_name	cifrado ||| encryption	count=1
namespace	cadena de ||| sdo_das_xml	count=1
function_name	si y ||| exceptions	count=1
function	[function_name_1] y ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	de ||| string $msgid1	count=1
return	de entrada/salida ||| int	count=1
function_name	reinició la pila ||| errors	count=1
function_name	[function_name_1] transformación actual ||| [function_name_2] [function_name_1]	count=2
function_name	la ||| mlt	count=2
function_name	trabajo para la tarea ||| do job	count=1
function_name	establece ||| mysqlnd ms set	count=2
arg_pair	de salto de ||| string $break bool $cut	count=1
return	del cursor: ||| int	count=1
function_name	tamaño ||| zip entry filesize	count=2
function_name	[function_name_1] color ||| [function_name_2] [function_name_1]	count=8
function_name	el número máximo de ||| highlight max	count=2
function_name	el nombre unicode ||| name	count=1
function_name	[function_name_1] desde ||| [function_name_1] [function_name_2]	count=6
return	actualiza el ||| void	count=1
arg_pair	archivo ||| resource $pdfdoc string $filename	count=2
function_name	diferencia binaria de ||| file bdiff	count=1
function_name	mapea a facet.limit ||| facet limit	count=1
function	[function_name_1] la cuota ||| [arg_pair_2] [function_name_1]	count=1
function_name	de la propiedad ||| property	count=1
arg_pair	forma parecida a ||| string $charset	count=1
function_name	la porción de ||| mb stristr	count=2
arg_pair	función callback ||| callable $callback	count=4
return	que especifica ||| string	count=1
arg_pair	una ||| gmagickdraw $draw string $text	count=1
arg_pair	sobre ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	nombres de las columnas ||| string $class_name	count=1
function_name	es true entonces en ||| exceptions	count=1
arg_pair	botón tridimensional ||| int $width	count=1
function_name	que se van ||| start	count=1
namespace	que se encuentra activa ||| function	count=1
function_name	establece la posición izquierda ||| set	count=1
return	otros ||| string	count=1
arg_pair	las capas ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	función geoip_country_code_by_name() ||| country code by	count=1
function_name	grupo de procesos ||| getpgid	count=1
function_name	desecha todos los ||| unique image colors	count=1
namespace	[namespace] no ||| [namespace]	count=3
return	la ||| int	count=19
function_name	excepción de tipo ||| using	count=1
function_name	de codificación [function_name_2] ||| [function_name_1] encode [function_name_2]	count=2
function_name	una descripción ||| string	count=1
function_name	crea ||| create processing	count=1
function_name	[function_name_1] un recurso ||| [function_name_2] [function_name_1]	count=3
namespace	o ||| function	count=57
function_name	código de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	desde ||| string $content	count=1
function_name	información con el ||| info	count=1
function_name	una función definida ||| uasort	count=1
arg_pair	y bcc ||| string $bcc	count=1
namespace	los ||| gmagick	count=2
namespace	reinicializa el ||| splfixedarray	count=1
function_name	certificado ||| openssl pkcs7 sign	count=2
function_name	de la estructura de ||| imap fetchstructure	count=1
function_name	rotación ||| rotate	count=1
function_name	identificación ||| creator id	count=1
function_name	de una línea a ||| max line	count=1
function_name	blob en modo ||| blob echo	count=1
function_name	retorna el número de ||| mysqli num	count=1
function_name	valor de un ||| value	count=1
function_name	extensiones de ficheros ||| autoload extensions	count=1
arg_pair	directiva whence ||| int $whence	count=1
arg_pair	éxito cero en caso ||| string $zurl	count=1
namespace	claves x ||| gmagick	count=1
arg_pair	actual a x y ||| float $x	count=1
function_name	encuentre un error una ||| set	count=1
function_name	buscarán ||| dbplus	count=1
function_name	la frecuencia en la ||| doc frequency	count=1
function_name	devuelve el prefijo por ||| get	count=1
function_name	como ||| set mlt min	count=1
function_name	versión escapada ||| cubrid real escape string	count=1
arg_pair	identificador de entrada ||| resource $link_identifier resource $result_identifier	count=1
function_name	devuelve ||| get data	count=1
function_name	obtener el número ||| fann get num	count=2
function_name	contra las ||| diff ukey	count=1
function_name	una imagen ||| stereo image	count=1
return	o ||| zmqsocket	count=1
function_name	expresiones regulares ||| set highlight regex	count=1
namespace	devuelve el ||| gmagickdraw	count=1
function_name	un ||| file info	count=1
arg_pair	los ||| string $str	count=1
arg_pair	de sesión al almacenamiento ||| string $session_id	count=1
function_name	encuentra disponible la lista ||| ps	count=1
arg_pair	fichero al archivo ||| string $filename	count=1
return	función acepta uno dos ||| string	count=1
arg_pair	es idéntica a ||| string $string	count=1
function_name	restringe las coincidencias de ||| set	count=1
function_name	columna actual para el ||| current column	count=1
function_name	núcleo («kernel») a este ||| kernel	count=1
function_name	devuelve el contenido del ||| get	count=2
arg_pair	datos disponible como ||| int $row	count=1
function_name	de ||| dbplus chdir	count=2
function_name	más opciones para el ||| options	count=1
function_name	tesela para ||| imagesettile	count=1
arg_pair	dos ||| string $username	count=1
function_name	nivel mínimo de severidad ||| mssql min error severity	count=1
namespace	ventana o ||| function	count=1
function_name	conexión de flujo ||| stream	count=1
namespace	no ||| solrquery	count=1
arg_pair	del contorno acutales ||| float $ey	count=1
arg_pair	se comporta de forma ||| string $password string $charset	count=1
namespace	devuelve o establece ||| function	count=1
function_name	número de campo ||| mssql field	count=1
function_name	la devuelve como ||| get	count=1
function_name	si el método es ||| is	count=1
function_name	calidad ||| quality	count=1
arg_pair	está documentada actualmente solamente ||| int $conf string $directory	count=2
function_name	algoritmo estándar basado en ||| crypt	count=1
function_name	petición http de la ||| request	count=1
function_name	sesión ||| session	count=8
arg_pair	ordena números de ||| string $search_criteria	count=1
namespace	efecto de ||| gmagick	count=1
function_name	varios componentes ||| components	count=1
arg_pair	el campo dado ||| resource $fdf_document string $fieldname	count=1
function_name	es el espacio ||| is default	count=1
namespace	los parámetros a ||| function	count=1
arg_pair	si no condigue ||| string $type	count=1
arg_pair	y socket. ||| zmqsocket $backend	count=1
function_name	ruta y nombre de ||| pathname	count=1
return	[return] que representa ||| [return]	count=1
function_name	dice [function_name_1] [function_name_2] ||| enc [function_name_1] block [function_name_2]	count=2
function_name	lapiz ||| sketch	count=1
function_name	[function_name_1] de cabecera ||| [function_name_1] encode [function_name_2]	count=4
arg_pair	la mayoría de las ||| string $connection_string string $character_set	count=1
function_name	abre un flujo ||| open	count=1
function_name	el comentario ||| comment index	count=1
arg_pair	almacena un [arg_pair] ||| [arg_pair]	count=4
function_name	de petición http ||| nsapi	count=1
function_name	http en ||| nsapi	count=1
arg_pair	un ||| resource $statement mixed $field	count=1
function_name	[function_name_1] comentario ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] [function_name_2] que ||| [function_name_2] [function_name_1]	count=4
function_name	un ||| from string	count=1
function_name	el registro ||| delete record	count=1
function_name	forzar a la copia ||| variant cast	count=1
namespace	> o ||| function	count=1
function_name	los términos serán ||| mlt min term	count=1
function_name	indicando error cuando la ||| set using exceptions	count=1
function	[function_name_1] intérprete ||| [function_name_1] notation decl handler [arg_pair_2]	count=1
function_name	namespace ||| namespace	count=2
arg_pair	entrada proporcionada ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	afectadas ||| mysqli affected	count=1
return	dos o ||| string	count=1
return	preserva los bordes de ||| gmagick	count=1
function_name	caché ||| cache	count=3
function_name	de previas operaciones de ||| count entries	count=1
function_name	obtiene ||| get line	count=2
arg_pair	aparición de needle y ||| mixed $needle	count=1
function_name	está el campo ||| field	count=1
function_name	define la ||| set	count=2
function_name	palabra máxima sobre ||| max word	count=1
function_name	devuelve la escala de ||| field scale	count=1
arg_pair	escribirá una cadena ||| int $shmid string $data	count=1
return	sets ||| solrdismaxquery	count=1
function_name	fwrite() y fclose() sucesivamente ||| file put contents	count=1
function_name	llamarla ||| odbc data source	count=2
function_name	matchbox en la ||| matchbox	count=1
arg_pair	de miller-rabin para revisar ||| int $reps	count=1
return	a [return] revisión ||| [return]	count=1
function_name	disponible ||| ps open memory	count=1
function_name	después ||| data	count=1
function_name	espera ||| timeout	count=6
function_name	recupera ||| status	count=1
arg_pair	dibuja la cadena string ||| int $x	count=2
function_name	advertencia esta ||| open memory image	count=1
function_name	genera ||| random	count=1
arg_pair	es una interfaz flexible ||| string $collection	count=1
function_name	variables de reescritura establecidas ||| reset rewrite	count=1
namespace	por lo que después ||| function	count=1
function_name	de etiqueta ||| by tag	count=1
function_name	string producido ||| sprintf	count=1
function_name	método se ||| data	count=1
arg_pair	parámetro filename usando el ||| string $filename	count=1
arg_pair	que server_key ||| string $server_key	count=5
function_name	función usa ||| gmp prob	count=1
return	definida por el ||| void	count=2
function_name	cambia el ||| dbplus	count=1
arg_pair	cubrid_set_query_timeout() se ||| resource $req_identifier int $timeout	count=1
function_name	de memcached::prepend() ||| prepend	count=1
arg_pair	si un número ||| gmp $a	count=1
arg_pair	con ||| resource $shm_identifier	count=1
function_name	el id ||| id	count=12
function_name	[function_name_1] [function_name_2] ||| [function_name_2] next [function_name_1]	count=3
return	de las letras en ||| int	count=1
function_name	define los encabezados a ||| headers	count=1
arg_pair	una matriz asociativa con ||| string $format string $date	count=1
return	breaker parameter ||| solrdismaxquery	count=1
function_name	conexión ||| yaz connect	count=2
function_name	iterador de ||| iterator	count=1
function_name	el usuario presiona la ||| suspend	count=1
function_name	cliente de ||| client	count=1
function_name	función devuelve ||| cubrid get	count=3
return	si todavía no ||| int	count=1
namespace	que es similar a ||| function	count=1
arg_pair	especificado en caso ||| resource $result int $field_offset	count=1
arg_pair	relation al dado por ||| resource $relation	count=1
function_name	en por lo ||| frequency	count=1
return	un campo al ||| void	count=1
function_name	sets ||| set	count=2
function_name	contra ||| diff ukey	count=1
arg_pair	devuelve el código de ||| resource $action int $error_code	count=1
arg_pair	el objeto gmagickpixel ||| gmagickpixel $color	count=1
namespace	ignoradas ||| solrquery	count=1
namespace	la cromaticidad como ||| gmagick	count=1
return	inicia la sesión en ||| bool	count=1
function_name	otros caracteres ||| ltrim	count=1
namespace	red por ||| function	count=1
function_name	de los traits ||| uses	count=1
function	intersección de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=7
function_name	de paso inicial ||| get rprop delta zero	count=1
function_name	información sobre dicho ||| password get info	count=1
function_name	manejador de declaraciones ||| handler	count=1
arg_pair	de un ||| resource $fdf_document string $field_name	count=1
function_name	tailable que ||| tailable	count=1
function_name	devuelve la cantidad de ||| get channels	count=1
arg_pair	una variable al motor ||| string $name	count=1
namespace	que se le proporciona ||| function	count=1
namespace	un número es primo ||| function	count=1
arg_pair	de un enlace web ||| resource $pdfdoc	count=1
function_name	si y sólo ||| using	count=1
arg_pair	eliminar ||| resource $handle	count=1
return	invertidas antes de ||| string	count=1
function_name	potencia ||| variant pow	count=2
function_name	cargar entidades ||| entity	count=1
return	una rna basada en ||| bool	count=3
arg_pair	imagen image ||| resource $image	count=1
function_name	el espacio ||| is	count=1
function_name	envía la acción con ||| proxy action	count=1
function_name	el tamaño actual de ||| zip	count=1
arg_pair	los componentes rgb ||| int $red	count=1
function_name	carácter especificado ||| chr	count=1
function_name	puedan aplicarse a una ||| add kernel	count=1
namespace	cierra el diccionario indicado ||| function	count=1
function_name	los permisos ||| eio chmod	count=1
function	establece la [arg_pair_2] ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=4
function_name	mssql local o remoto ||| mssql	count=1
function_name	de fecha de ||| date	count=1
function_name	de la cookie de ||| cookie	count=1
function_name	bézier desde ||| pdf curveto	count=1
function_name	es true ||| set	count=1
arg_pair	genera un mensaje ||| int $priority string $message	count=1
function_name	imprime el ||| show xy	count=1
arg_pair	arrays compara la ||| array $array1 array $array2	count=1
function_name	devuelve el ||| get start	count=1
function_name	opción de ||| sock opt	count=1
arg_pair	de ||| int $type	count=3
namespace	el color ||| gmagickdraw	count=1
namespace	lleva a ||| function	count=1
arg_pair	array de php var_array ||| int $max_table_length	count=1
function_name	tipo de columna que ||| type	count=1
function_name	parámetros del servidor ||| server params	count=1
function_name	para el primer ||| first	count=2
function_name	nombre de un campo ||| field name	count=1
return	en un atributo ||| bool	count=2
function_name	vacío con ||| empty	count=1
return	perfiles ||| float	count=1
namespace	previamente asignados con oci_new_descriptor() ||| oci-lob	count=1
function_name	establece los permisos ||| chmod	count=1
return	donde se ||| string	count=1
arg_pair	la directiva whence como ||| int $pri	count=1
function_name	de la imagen ||| get image	count=2
function_name	establece ||| proxy callback set	count=1
function_name	intentará resolver ||| dbplus resolve	count=2
function_name	de primer plano ||| set	count=1
function_name	del estado http ||| http status	count=1
function_name	o una definida por ||| function	count=1
arg_pair	php del texto que ||| int $length	count=1
arg_pair	función devolverá la lista ||| resource $connection_id	count=1
return	a ||| bool	count=4
function_name	carboncillo ||| charcoal image	count=2
return	adjunta ||| void	count=1
function	[function_name_1] arg ||| [arg_pair_2] [function_name_1]	count=2
function_name	las operaciones memcached::*bykey() ||| server by	count=1
arg_pair	la conexión ||| resource $link_identifier	count=3
return	un array asociativa ||| array	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] type [arg_pair_2]	count=7
function_name	restaura la configuración de ||| reset config	count=1
return	html ||| string	count=1
function_name	de resultados [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	das xml ||| add types	count=1
function_name	a las candidatas antes ||| get cascade	count=2
function_name	geoip_country_code_by_name() devolverá la ||| country code	count=1
function_name	copia de seguridad del ||| set highlight alternate	count=1
function_name	codificado mediante uuencode ||| uudecode	count=1
arg_pair	rota el sistema de ||| resource $p float $phi	count=1
function_name	trae el buffer ||| get buffer	count=2
function_name	antepone ||| prepend body	count=2
return	la prueba probabilística de ||| int	count=1
function_name	continente ||| continent code	count=1
namespace	de inactividad de entrada/salida ||| gearmanclient	count=1
function_name	el descenso vertical ||| get descent	count=1
arg_pair	html y php del ||| resource $handle	count=1
function_name	usos criptográficos ||| random bytes	count=1
function_name	el número de ||| ifx num fields	count=1
function_name	función ||| odbc data	count=1
function_name	una ||| chr	count=1
function_name	la descripción de ||| cairo ps level	count=1
function_name	formateo textline ||| info textline	count=1
function_name	cargar entidades externas ||| libxml disable entity loader	count=1
function_name	una fila ||| fetch	count=1
namespace	simbólico nombrado por ||| function	count=1
return	mediante ||| array	count=2
return	característica conocia como ||| mongocursor	count=1
function_name	los hijos de una ||| children	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] matchbox [arg_pair_2]	count=6
arg_pair	una nueva entrada a ||| string $value	count=1
function_name	después ||| odbc	count=1
function_name	para el ||| broker set	count=1
arg_pair	algoritmo estándar basado en ||| string $str	count=1
function	imagen [arg_pair_2] ||| imagick bool new [function_name_1] [arg_pair_2]	count=2
return	devuelve el valor del ||| mixed	count=1
arg_pair	basado ||| string $str	count=1
return	la ||| sdo_das_xml_document	count=1
function_name	la publicación de ||| get ap	count=1
function_name	devolver un valor especial ||| set using	count=1
function_name	ingres procedimiento al ||| ingres	count=1
arg_pair	con dos ||| string $servername	count=1
function_name	obtiene el nombre ||| get module name	count=2
function_name	entrada/salida del documento ||| tidy	count=1
function_name	de datos ||| db	count=1
namespace	es ||| solrdocument	count=1
return	como cursores de seguimiento ||| mongocursor	count=1
function_name	[function_name_1] altura ||| [function_name_2] [function_name_1]	count=1
function_name	utilizar para que la ||| multi by	count=2
namespace	a minúsculas o mayúsculas ||| function	count=1
function_name	esquema es clickeado ||| set destination	count=1
function_name	de depuración ||| dump debug	count=1
function_name	coseno para cada valor ||| cos	count=1
arg_pair	cualesquiera bytes ||| resource $handle	count=1
function_name	el canal [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	de color especificado ||| gmagick	count=1
function_name	cliente por ||| client	count=1
function_name	calidad [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	el semáforo pueda ||| sem acquire	count=1
arg_pair	identificador de ||| resource $link_identifier	count=1
function_name	una secuencia de imágenes ||| images	count=1
arg_pair	indicando que ocurrió un ||| string $details	count=1
function_name	documentos como este ||| min doc frequency	count=1
return	biblioteca ||| void	count=1
arg_pair	stack es true de ||| string $offset	count=1
return	alias ||| bool	count=1
namespace	devuelve un string con ||| function	count=1
arg_pair	n por d ||| gmp $n gmp $d	count=1
function_name	cuál cae ||| days	count=1
function_name	devuelve el copyright ||| getcopyright	count=1
function_name	tamaño actual de una ||| zip	count=1
namespace	get [namespace] ||| [namespace]	count=2
function_name	gettext() ||| ngettext	count=1
function_name	es [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	de ||| setproctitle	count=1
arg_pair	dada por relation ||| string $name resource $relation	count=1
return	caracteres del ||| string	count=1
return	o cualquier ||| zmqsocket	count=1
arg_pair	pregunta sobre ||| int $num string $keyword	count=1
function	una respuesta [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	la información [arg_pair_2] ||| [function_name_1] matchbox [arg_pair_2]	count=1
function_name	de una consulta ||| query	count=1
function_name	de ingres [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	ideal ||| set highlight regex slop	count=2
function_name	inicia la definición de ||| pdf begin	count=1
function_name	del resultado frontbase ||| fbsql	count=1
function_name	devuelve el límite ||| get resource limit	count=1
function_name	[function_name_1] ejecutable ||| [function_name_1] [function_name_2]	count=1
function_name	flujo con cualquier ||| stream	count=1
arg_pair	puedan estar disponibles en ||| string $str	count=1
arg_pair	del contorno acutales ||| float $ex float $ey	count=1
namespace	actual donde se buscarán ||| function	count=1
function_name	de atributo ||| set attribute	count=2
arg_pair	de b negro ||| float $b	count=1
arg_pair	con la ||| resource $psdoc	count=1
function_name	comporta como el carp::cluck ||| clunk	count=1
function_name	grafema ||| grapheme strripos	count=1
arg_pair	una operación por lotes ||| array $batch array $protocoloptions	count=1
function_name	documento xml ||| xml	count=2
namespace	final en el puntero ||| splfileobject	count=1
function_name	no afecta ||| count	count=1
arg_pair	[arg_pair_1] se renombra/mueve ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	de la ruta en ||| string $path bool $recursive	count=1
function_name	tiempo de espera ||| busy timeout	count=1
return	el tipo de ||| int	count=1
function_name	siguiente fila ||| sqlsrv fetch	count=2
function_name	obtiene el ||| context get	count=2
function_name	para obtener información blob/clob ||| cubrid lob export	count=1
arg_pair	une tres archivos en ||| string $new_file1	count=1
function_name	representa la imagen obtenida ||| imagecreatefromgif	count=1
arg_pair	tridimensional simulado aclarando ||| int $width	count=1
function_name	[function_name_1] candidatas ||| [function_name_1] [function_name_2]	count=8
function_name	[function_name_1] severidad ||| [function_name_2] [function_name_1]	count=1
function_name	campos ||| fbsql fetch field	count=1
return	los colores ||| int	count=1
function_name	número de pendientes ||| steepnesses count	count=1
function_name	lista de parámetros ||| image	count=1
function_name	ingres procedimiento [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	el domain por ||| string $domain string $codeset	count=1
function_name	que fue subido mediante ||| move uploaded	count=1
function_name	puede utilizar para que ||| set by key	count=1
function_name	la descripción de la ||| cairo pattern get radial	count=1
function_name	cada capa ||| get layer array	count=1
arg_pair	decir ||| string $filename	count=1
function_name	basado en ||| crypt	count=1
namespace	color que ||| function	count=1
function_name	través del [function_name] ||| [function_name]	count=1
arg_pair	crea un ||| int $y	count=1
function_name	página asociada con ||| page	count=1
function_name	función definida por ||| func	count=1
function_name	tangente hiperbólica para ||| trader tanh	count=1
function	información de [arg_pair_2] ||| [function_name_1] matchbox [arg_pair_2]	count=1
function_name	configuración del ||| config	count=1
function_name	estar disponibles ||| crypt	count=1
function_name	devuelve el tamaño actual ||| zip entry	count=1
return	de base ||| int	count=1
function_name	contornea el trazado ||| pdf stroke	count=1
arg_pair	fgets() excepto que fgetss() ||| int $length	count=1
function_name	sobrescribió dicha ventana. ||| pop window	count=1
arg_pair	procesa cada uno de ||| int $still_running	count=1
function_name	longitud de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	este método devuelve ||| get current	count=1
arg_pair	o más bases de ||| string $databases	count=1
return	proporcionada en el ||| bool	count=1
arg_pair	de ||| int $y	count=2
function	[function_name_1] por fd ||| [function_name_1] [arg_pair_2]	count=1
function_name	la descripción de la ||| cairo surface set fallback resolution	count=1
function_name	html y ||| fgetss	count=1
function_name	establece ||| set highlight simple	count=1
function_name	en segundo plano retornando ||| background	count=1
function_name	finaliza la definición ||| pdf end	count=1
function_name	mssql local ||| mssql	count=1
function_name	candidatas en cascada es ||| cascade candidate	count=1
function_name	parecida a ||| sybase	count=1
arg_pair	una versión extendida ||| resource $result	count=2
function_name	otro núcleo («kernel») ||| kernel	count=1
return	indexado ||| array	count=1
function_name	para ||| fann set	count=2
function_name	argumentos pasados a ||| args	count=1
namespace	excepción ||| exception	count=6
function_name	el phar cuando sea ||| phar	count=1
function_name	establece ||| fann set cascade min	count=1
arg_pair	image ||| resource $image int $cx	count=1
function_name	que la clave ||| multi by key	count=2
arg_pair	y path2 ||| int $rev2	count=1
function_name	y ||| color set	count=2
arg_pair	usa la conexión ||| resource $link_identifier	count=1
function_name	instancias de iteradores adjuntos ||| count iterators	count=1
namespace	puedan estar disponibles en ||| function	count=1
arg_pair	o cualquier abstracción ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	el seno hiperbólico para ||| trader sinh	count=1
arg_pair	dada por key ||| int $max_acquire	count=1
function_name	una instrucción ||| next	count=1
function_name	descripción ||| cairo surface get font	count=1
function_name	plano ||| color	count=1
return	desde la cadena de ||| sdo_das_xml_document	count=1
function_name	servicio y ||| service	count=1
function_name	el número ||| ifx num	count=1
return	dispositivos ||| zmqsocket	count=1
arg_pair	valor de la variable ||| string $value	count=1
namespace	y sólo ||| rarexception	count=1
namespace	el parámetro ||| function	count=1
arg_pair	argumento result de callback ||| callable $callback mixed $data	count=1
function_name	retropropagación [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de mysql ||| mysql data	count=2
function_name	[function_name_1] [function_name_2] en ||| [function_name_2] [function_name_1]	count=4
function_name	de los elementos invertido ||| array reverse	count=1
function_name	estructura ||| fetchstructure	count=1
return	encontrados en esas coordenadas ||| bool	count=1
function_name	cuando la ||| set	count=1
function_name	es ||| set using exceptions	count=2
function_name	filas que se van ||| set start	count=1
function_name	x509 desde la csr ||| csr	count=1
namespace	que puedan estar disponibles ||| function	count=1
function	establece [arg_pair_2] ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=3
arg_pair	capa número layer contando ||| int $layer	count=3
function_name	el ciclo de ||| eio nop	count=1
return	el nodo es ||| bool	count=1
function_name	de la variable php ||| gettype	count=1
namespace	versión plural de gettext() ||| function	count=1
function_name	el debug ||| memcache debug	count=1
function_name	[function_name_1] fam ||| [function_name_2] next [function_name_1]	count=1
function_name	espera ||| set query timeout	count=2
function_name	la imagen ||| image orientation	count=1
function_name	tipo del [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
function_name	tamaño actual de ||| filesize	count=1
namespace	un objeto ||| ktaglib_mpeg_file	count=1
namespace	por ||| function	count=105
arg_pair	estar disponibles en el ||| string $str	count=1
function_name	devuelve el nombre ||| field name	count=1
function_name	descripción ||| cairo matrix transform distance	count=1
function_name	de filas extraidas ||| ifx num rows	count=2
function_name	asociativo con las estadísticas ||| stats	count=1
function_name	[function_name_1] db++ ||| [function_name_2] [function_name_1]	count=4
function_name	de ||| odbc data source	count=4
function_name	tantos documentos ||| mlt	count=1
arg_pair	fichero de un programa ||| string $filename	count=1
function_name	devuelve el valor de ||| get	count=5
function_name	conexiones del [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	especificado ||| namespace	count=1
arg_pair	añade [arg_pair] dentro ||| [arg_pair]	count=1
function_name	se encuentra disponible ||| open memory	count=1
function_name	hace commit ||| commit	count=1
function_name	dado y extrae ||| mailparse	count=1
function_name	si son iguales ||| hash equals	count=1
function_name	a todos los ||| ping	count=1
function_name	extrae ||| mailparse uudecode	count=1
function_name	nodo elemento con el ||| element ns	count=1
return	en un servidor de ||| bool	count=1
function_name	añade ||| inotify add	count=1
function_name	ambos ||| add	count=1
function_name	diccionario dado ||| enchant dict	count=2
namespace	por línea en ||| function	count=1
function_name	información pdf ||| pdf	count=1
namespace	devuelve el tipo ||| function	count=1
namespace	actual [namespace] ||| [namespace]	count=3
function_name	devuelve el número ||| ifx num fields	count=1
function_name	[function_name_1] los encabezados ||| [function_name_2] [function_name_1]	count=3
function_name	glo ||| cubrid save to glo	count=1
return	id3v2 para ||| ktaglib_id3v2_tag	count=1
function	establece la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=13
function_name	el punto blanco ||| image white point	count=2
function_name	de cabecera ||| request header	count=1
function_name	servicio fam ||| fam	count=1
arg_pair	unicode por ||| string $charactername int $namechoice	count=1
function_name	la configuración ||| reset config	count=1
function_name	obtiene la uri del ||| uri	count=1
return	libera ||| bool	count=1
function_name	colores de primer ||| ncurses color	count=1
arg_pair	de forma parecida ||| string $password string $charset	count=1
function_name	si es uno ||| module is	count=1
function_name	fbsql_fetch_array() con una diferencia ||| fbsql fetch	count=1
function_name	gamma de ||| gamma	count=1
function_name	registro del conjunto ||| yaz record	count=1
function_name	mínimo ||| mssql min	count=1
arg_pair	una nueva definición ||| float $height	count=1
function_name	devuelve ||| get loaded	count=1
function_name	línea actual para ||| current line number	count=1
return	de intensidad [return] su zona ||| [return]	count=1
function_name	retorna el nombre corto ||| short name	count=1
arg_pair	las capas de ||| zmqsocket $frontend	count=1
arg_pair	datos emita uno de ||| string $event_name1 string $event_name2	count=1
function_name	ser usado ||| session	count=1
arg_pair	name0 es ||| string $name0	count=1
function_name	documentos como ||| mlt min doc frequency	count=1
arg_pair	de los datos en ||| int $linebreak	count=1
function_name	abre una [function_name] a ||| [function_name]	count=1
function_name	apunta conn_handle actualmente ||| commit	count=1
function_name	cambio del valor de ||| fann get	count=1
function_name	una fila en forma ||| ibase fetch object	count=1
arg_pair	prepara el evento ||| mixed $fd	count=1
namespace	lob ||| oci-lob	count=3
function_name	agregar ||| add required parameter	count=2
arg_pair	un servidor imap ||| resource $imap_stream	count=1
function_name	una declaración de ||| decl	count=1
function_name	un proceso abierto ||| get	count=1
arg_pair	que coincida con el ||| float $fuzz	count=1
function_name	petición [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] de encabezados ||| [function_name_2] [function_name_1]	count=6
return	un array de los ||| array	count=1
arg_pair	de la página ||| float $disp_time	count=1
arg_pair	información ||| int $data_type	count=1
arg_pair	base de ||| string $database	count=2
arg_pair	algoritmos alternativos que ||| string $str string $salt	count=1
function_name	nodo es parte de ||| is	count=1
return	devuelto por ||| string	count=1
arg_pair	usando el oid de ||| resource $conn_identifier string $oid	count=1
function_name	de la puesta de ||| sunset	count=1
function	el semáforo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	para que ambos puedan ||| void	count=1
function_name	de filas ||| fbsql num rows	count=1
function_name	de relleno ||| cmykfill	count=1
arg_pair	opcionalmente incrusta sus datos ||| bool $embed	count=1
namespace	o false si ||| function	count=1
function_name	no ||| set mlt min	count=1
function_name	[function_name] espejo vertical ||| transpose [function_name]	count=2
namespace	si todavía no ||| mongocursor	count=1
function_name	registradas __autoload ||| spl autoload	count=1
function_name	entrada ||| input	count=1
function_name	tamaño ||| filesize	count=2
function_name	copia los datos de ||| copy to	count=1
function_name	textual ||| yaz	count=1
function_name	id ||| id	count=17
function_name	de cuantía para la ||| quantum	count=1
function_name	de línea actual ||| get current line number	count=1
arg_pair	la primera ocurrencia de ||| string $needle	count=1
function_name	campos de ||| fetch field	count=2
function_name	del trazo ||| rgbstroke	count=1
function_name	siguiente fila de ||| oci fetch	count=1
function_name	tiene suscritos ||| imap lsub	count=1
function_name	inicializar el phar cuando ||| map phar	count=1
function_name	código de ||| curl strerror	count=1
arg_pair	a memcache::connect() con ||| string $host	count=1
function_name	del estado ||| status	count=1
namespace	se ||| gmagickdraw	count=2
function_name	[function_name] resultante de ||| [function_name]	count=2
function_name	colas o cualquier ||| construct	count=1
arg_pair	[arg_pair] confirmación automática ||| [arg_pair]	count=2
function_name	datos lob de ||| db2 lob read	count=1
function_name	un valor ||| exceptions	count=1
namespace	a un hash ||| quickhashintstringhash	count=1
function_name	virtual con nombre y ||| pvf	count=1
function_name	[function_name_1] blob ||| [function_name_1] [function_name_2]	count=1
function_name	extrae cada archivo ||| uudecode all	count=1
function_name	estado del servidor ||| status	count=1
namespace	nodo ||| domnode	count=3
arg_pair	función cubrid_set_query_timeout() se usa ||| int $timeout	count=1
return	en el disco ||| bool	count=1
namespace	error una ||| rarexception	count=1
function_name	el argumento es true ||| using exceptions	count=1
function_name	ha asignado a su ||| peak	count=1
namespace	establecer los ||| function	count=1
function_name	codificados por utf-8 ||| utf8	count=1
namespace	ya que ||| function	count=1
function_name	[function_name_1] los datos ||| [function_name_2] [function_name_1]	count=2
function_name	sobre un socket creado ||| stream socket accept	count=1
arg_pair	con un ||| float $beta	count=1
function_name	[function_name_1] todas las ||| [function_name_2] [function_name_1]	count=1
function_name	esta función crea una ||| create document	count=1
namespace	asignados ||| oci-lob	count=1
function_name	reescritura establecidas ||| output reset rewrite	count=1
function	las tablas [arg_pair_2] ||| [function_name_1] string $database [arg_pair_2]	count=1
function_name	para ||| add	count=1
arg_pair	de ||| zmqsocket $frontend zmqsocket $backend	count=4
namespace	el de estilo ||| harupage	count=1
function_name	manejador de declaración ||| handler	count=1
arg_pair	a filter_var() ||| mixed $definition	count=1
arg_pair	un resultado con los ||| resource $connection	count=1
function_name	contexto de ||| context	count=2
function_name	supervisión del servicio y ||| service ctrl dispatcher	count=1
function_name	el debug output ||| memcache debug	count=1
function_name	versión de sybase_fetch_row() que ||| sybase fetch assoc	count=1
namespace	afecta al ||| mongocursor	count=1
function	la imagen [arg_pair_2] ||| border [function_name_1] [arg_pair_2]	count=1
function_name	del servidor ms-sql ||| last message	count=1
function_name	indica si ||| dict is in	count=1
function_name	es primo ||| gmp prob	count=1
function_name	establece el array de ||| fann set	count=1
arg_pair	establece una ||| string $connection_string string $character_set	count=1
function_name	en la solicitud ||| request	count=1
return	la biblioteca unrar encuentre ||| void	count=1
return	una imagen mientras preserva ||| gmagick	count=1
function_name	descripción de la función ||| cairo pattern get extend	count=1
arg_pair	capas de mensaje y ||| zmqsocket $backend	count=1
function_name	contra las keys del ||| diff ukey	count=1
function_name	épocas que podrían ser ||| epochs	count=3
function_name	excepto que fgetss() intenta ||| fgetss	count=1
function_name	devuelve el elemento ||| get current	count=1
namespace	[namespace] en formato ||| [namespace]	count=1
return	desde ||| int	count=1
function_name	para obtener ||| get implicit	count=1
arg_pair	de un índice ||| int $index	count=1
function_name	curl ||| curl	count=12
arg_pair	almacenada de una ||| string $filename int $version	count=1
function_name	la variable character_set ||| client encoding	count=1
function_name	carga un segundo o ||| types	count=1
function_name	por ||| function	count=1
function_name	geoip_country_code_by_name() devolverá ||| country code by name	count=1
arg_pair	red ||| int $from_neuron	count=1
function_name	cuando se enlazó ||| ecb	count=1
function_name	el color ||| color	count=6
namespace	disponibles después de ||| function	count=1
function_name	utf-8 a ||| utf8 decode	count=1
return	petición http ||| array	count=1
function_name	línea siguiente y ||| text next line	count=3
namespace	capas de mensaje y ||| zmqdevice	count=1
function_name	db2_prepare() ||| param	count=1
function_name	devuelve el producto de ||| array product	count=1
function_name	la acción con ||| gupnp service proxy action	count=1
function_name	función cubrid_col_get() ||| col get	count=1
function_name	propiedad enumerada o entera ||| property value	count=1
function_name	manejador ||| decl handler	count=2
function_name	en ||| mailparse	count=1
return	de direcciones ||| zmqsocket	count=1
function_name	[function_name_1] basado en ||| [function_name_2] [function_name_1]	count=2
arg_pair	la versión plural de ||| string $msgid1 string $msgid2	count=1
function_name	devuelve los datos ||| offset get	count=1
function	[function_name_1] campo solicitado ||| [arg_pair_2] [function_name_1]	count=3
function_name	los valores usando ||| uasort	count=1
arg_pair	cambia el valor de ||| mixed $bordercolor	count=1
function_name	a sybase_connect() con ||| pconnect	count=1
function_name	línea siguiente [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	emitir advertencias y devolver ||| set using exceptions	count=1
function_name	la solicitud actual ||| nsapi request	count=1
function_name	se encuentra disponible la ||| open memory	count=1
function_name	marca el registro ||| dbase delete record	count=1
namespace	si ||| domnode	count=1
function_name	clase con ||| class	count=1
arg_pair	a una nueva ubicación ||| string $path string $new_path	count=1
function_name	el desplazamiento de campo ||| msql field seek	count=1
arg_pair	que usar mapreduce ||| array $pipeline	count=1
function_name	documentos como este ||| frequency	count=1
arg_pair	en [arg_pair_2] ||| [arg_pair_2] int $retry_interval [arg_pair_1]	count=2
function_name	la opción especificada ||| get option	count=1
namespace	que representa la ||| function	count=6
return	o desbloquea ||| bool	count=1
return	de primer plano y ||| int	count=1
function_name	dado ||| uudecode all	count=2
arg_pair	en subject coincidencias de ||| mixed $subject	count=1
function_name	lee la siguiente ||| read	count=1
function_name	devuelve el valor ||| db2 get	count=1
arg_pair	dibuja la cadena string ||| int $x int $y	count=2
function_name	un ||| set	count=2
function_name	codificado ||| uudecode	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=14
arg_pair	en el modo ||| int $mode	count=1
arg_pair	bordes de la imagen ||| int $width	count=1
return	la sesión en ||| bool	count=1
arg_pair	- zen-kaku [arg_pair] ||| [arg_pair]	count=1
function_name	devuelve un identificador de ||| get	count=1
function_name	el ||| uksort	count=1
function_name	biblioteca ||| set using	count=1
arg_pair	almacena [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1] int $startpos	count=3
function_name	de parámetros ||| open memory image	count=1
arg_pair	número gmp a la ||| gmp $gmpnumber	count=1
function_name	la descripción ||| cairo font options	count=6
function_name	[function_name_1] los métodos ||| [function_name_2] [function_name_1]	count=2
function_name	tantos ||| min doc	count=1
function_name	tamaño actual de ||| entry	count=1
function_name	array mantienen su ||| arsort	count=1
function_name	sólo si ||| set	count=1
function_name	guardar [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	a ||| ping	count=1
function_name	serán ignoradas ||| mlt min doc	count=1
function_name	base de ||| select db	count=1
function_name	establece las flags a ||| set flags	count=1
function_name	la línea para ||| set line width	count=2
function_name	imprime ||| ps show xy	count=2
function_name	formateador ||| formatter	count=1
return	o desbloquea el fichero ||| bool	count=1
arg_pair	modulo de a b ||| gmp $a gmp $b	count=1
return	contiene el carácter ||| string	count=1
arg_pair	un ||| string $map	count=1
function_name	no es necesariamente igual ||| iconv strlen	count=1
function_name	base de las letras ||| get	count=1
arg_pair	data y devuelve ||| string $mode	count=1
function_name	recibe todas ||| nsapi	count=1
function_name	lee los datos ||| mailparse	count=1
arg_pair	devuelve str con todos ||| string $str	count=2
namespace	redibuja las áreas de ||| function	count=1
function_name	se encuentra disponible ||| image	count=1
return	de seguimiento ||| mongocursor	count=2
function_name	máximo ||| max analyzed	count=1
function_name	valor especial indicando ||| using exceptions	count=1
function_name	de severidad ||| message severity	count=1
return	trabajo para ver si ||| bool	count=1
function_name	mediante el identificador ||| crack	count=1
function_name	establece el número de ||| set cascade	count=3
arg_pair	domain ||| string $codeset	count=1
function_name	rutinas de interoperabilidad ||| stub	count=1
function_name	función crea ||| create entity	count=1
arg_pair	identificador de entrada para ||| resource $link_identifier	count=1
arg_pair	tamaño de página cookie...) ||| int $pagesize	count=1
function_name	estancamiento de candidatas ||| cascade candidate stagnation	count=3
function_name	textual en inglés ||| yaz	count=1
namespace	el valor por omisión ||| reflectionparameter	count=2
arg_pair	crea un efecto ||| int $y	count=1
arg_pair	crea un [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_2] bind [function_name_1]	count=2
function_name	el repositorio con ||| svn	count=1
arg_pair	de una rutina de ||| string $alias	count=1
function_name	de bit empleado durante ||| bit fail	count=1
function_name	o la alternativa ||| imagecolorresolve	count=1
arg_pair	cuota de ||| string $quota_root	count=1
function	[function_name_1] arrays con ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	dada por relation bajo ||| string $name resource $relation	count=1
arg_pair	una ||| string $name string $profile	count=1
arg_pair	el texto ||| float $word_space	count=1
namespace	actual del puntero interno ||| solrdocument	count=1
return	en la secuencia ||| bool	count=2
return	retorna [return] nuevo resource ||| [return]	count=1
function_name	o filtro ||| add	count=1
function_name	buzon ||| createmailbox	count=1
namespace	número de [namespace] ||| [namespace]	count=1
function_name	[function_name_1] de cabecera ||| [function_name_2] [function_name_1]	count=4
arg_pair	llamada ||| mixed $data	count=1
function_name	llamada phar::stopbuffering() para habilitar ||| buffering	count=1
arg_pair	semántica del rfc 2045 ||| string $body int $chunklen	count=1
function	una [function_name_1] [arg_pair_2] ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=4
return	del número ||| int	count=1
function_name	[function_name_1] de campo ||| [function_name_1] [function_name_2]	count=3
function_name	usando una paleta ||| clut	count=1
namespace	http ||| function	count=1
namespace	el ||| gmagickdraw	count=1
function_name	los permisos ||| eio fchmod	count=1
function_name	computa una intersección ||| array uintersect	count=1
namespace	archivo designado por ||| function	count=1
function_name	imagen de similitud ||| image	count=1
function_name	el siguiente ||| fetch	count=1
return	ambos puedan aplicarse a ||| void	count=1
function_name	mediante el uso ||| get	count=1
return	[return] con un ||| [return]	count=3
function_name	una imagen izquierda y ||| image	count=1
namespace	si el ||| oci-lob	count=1
arg_pair	str con todos los ||| string $str	count=2
arg_pair	el índice especificado ||| mixed $index	count=1
function_name	datos del apuntador ||| all	count=1
function_name	corresponde al nombre de ||| name	count=1
arg_pair	de dsn disponibles ||| resource $connection_id	count=1
function_name	de severidad [function_name_2] ||| [function_name_2] server [function_name_1]	count=2
function_name	el número total de ||| get total	count=1
function_name	xml ||| xml parser set	count=1
arg_pair	especificados por msglist al ||| string $msglist	count=1
arg_pair	sybase_connect() ||| string $servername	count=1
return	crea un efecto de ||| void	count=1
function_name	única función de ||| add kernel	count=1
function_name	última petición ||| last request	count=3
function_name	nodo es ||| is	count=1
function_name	la consulta siguiente ||| next result	count=1
function_name	elipse en la imagen ||| ellipse	count=1
function_name	parecida ||| sybase	count=1
function_name	descripción ||| cairo pattern create rgba	count=2
function_name	el ||| exceptions	count=1
function_name	la línea de ||| line	count=2
function_name	lo menos tantos ||| min doc	count=1
arg_pair	nth de ||| gmp $a int $nth	count=1
namespace	espacios en blanco ||| function	count=1
function_name	la función cubrid_close_prepare() cierra ||| cubrid close prepare	count=1
function_name	la distancia ||| get	count=1
namespace	imagen con ||| gmagick	count=1
return	es ||| int	count=1
arg_pair	aclarando ||| int $x int $y	count=1
function_name	similitud ||| mlt	count=1
arg_pair	operación fallará si key ||| string $key mixed $value	count=1
arg_pair	que ||| resource $handle int $length	count=2
function_name	fuente usado cuando se ||| getfontsize	count=1
function_name	rutina de interoperabilidad cargadora ||| stub	count=1
function_name	la e/s del ||| eio readahead	count=1
arg_pair	una nueva ||| string $progid	count=1
namespace	sybase_connect() con ||| function	count=1
function_name	de ||| namespace	count=1
function_name	[function_name_1] importada ||| [function_name_2] [function_name_1]	count=2
function_name	php y lo escribe ||| write	count=1
function_name	cuando la biblioteca ||| set	count=1
function_name	continente que corresponde ||| continent code by	count=1
function_name	resultado de mysql asociado ||| mysql data	count=1
function_name	frecuencia en la ||| mlt	count=1
arg_pair	construye un ||| mixed $data int $priority	count=1
function_name	fichero subido ||| get attachment	count=1
function_name	codificados por utf-8 a ||| utf8 decode	count=1
function	[function_name_1] dado para ||| [arg_pair_2] [function_name_1]	count=3
return	el tiempo ||| int	count=1
function_name	cuando la biblioteca ||| exceptions	count=1
function_name	del resultado frontbase asociado ||| fbsql data	count=1
function_name	reintentos ||| retry count	count=2
arg_pair	sobre las capas de ||| zmqsocket $backend	count=1
function_name	destruye el ||| unset	count=1
function_name	transforma el ||| transform	count=2
arg_pair	valores de array1 ||| array $array2	count=2
arg_pair	retira espacios en blanco ||| string $str string $character_mask	count=1
function_name	encuentra disponible la lista ||| memory	count=1
function_name	la función usa la ||| gmp	count=1
arg_pair	construye un objeto ||| int $priority	count=1
namespace	contiene el carácter ||| function	count=1
function_name	el elongamiento ||| font stretch	count=1
function_name	la varita ||| option	count=1
function_name	si el objeto ||| active object	count=1
function_name	convierte un guid ||| mssql guid	count=1
function_name	el argumento es true ||| set using	count=1
function_name	[function_name_1] peticiones ||| [function_name_2] [function_name_1]	count=1
function_name	acepta uno dos ||| number	count=1
function_name	columna de la fila ||| mysqli fetch	count=1
function_name	la solicitud actual ||| request	count=1
function_name	nombre ||| char from name	count=2
arg_pair	pueden hacer de ||| zmqsocket $frontend	count=1
function_name	son operaciones crud ||| command	count=1
function_name	de tesela para usarse ||| imagesettile	count=1
namespace	biblioteca sqlite3 ||| sqlite3	count=1
function_name	función ||| ps open memory image	count=2
arg_pair	y pregunta por las ||| string $keyword	count=1
return	la posición ||| int	count=1
return	regexiterator::__construct() para [return] lista ||| [return]	count=1
function	javascript [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function	[function_name_1] de un ||| [function_name_1] [arg_pair_2]	count=15
function_name	del iv del ||| iv	count=1
function_name	de acuerdo a /etc/services ||| getservbyname	count=1
arg_pair	se especifique ||| mixed $entries	count=1
function_name	que desplaza aleatoriamente cada ||| spread	count=1
return	el color ||| void	count=1
return	o subsiguiente fichero ||| void	count=1
function_name	[function_name_1] la última ||| [function_name_2] insert [function_name_1]	count=3
function_name	de tidy ||| tidy reset	count=1
function_name	que fue subido mediante ||| uploaded file	count=1
function_name	en ||| upper	count=1
arg_pair	simulado aclarando y ||| int $x int $y	count=1
function_name	establece [function_name_2] ||| [function_name_1] sarprop step [function_name_2]	count=4
return	el array de ||| array	count=2
arg_pair	data y ||| string $data	count=1
function	[function_name_1] codificación de ||| [arg_pair_2] [function_name_1]	count=1
return	al trazado actual ||| bool	count=1
function_name	punto blanco de cromaticidad ||| setimagewhitepoint	count=1
function_name	imagen con un filtro ||| image	count=1
function	del campo [arg_pair_2] ||| [function_name_1] name resource $result [arg_pair_2]	count=1
arg_pair	datagrama ||| int $flags	count=1
function_name	lee ||| mailparse	count=1
namespace	de apache que ||| function	count=1
function_name	método de disposición de ||| setimagedispose	count=1
function_name	e elevado a ||| exp	count=2
return	con el ||| array	count=2
function_name	del diccionario dado ||| enchant dict	count=1
arg_pair	de diccionarios a ||| resource $broker	count=1
function_name	devuelve el máximo ||| get	count=1
arg_pair	stream dado a ||| resource $stream	count=1
function_name	devuelve una lista de ||| list	count=1
function_name	espacio ||| is default namespace	count=2
function_name	lo menos ||| frequency	count=1
function_name	y devolver ||| set using	count=1
arg_pair	dominio ||| string $domain	count=2
function_name	el espacio de ||| namespace	count=1
namespace	una cadena que especifica ||| gmagickdraw	count=1
function_name	número total de ||| total	count=2
function_name	de control ||| gupnp control	count=1
function_name	[function_name_1] límite de ||| [function_name_2] [function_name_1]	count=1
arg_pair	botón ||| int $x	count=1
function_name	[function_name_1] la categoría ||| [function_name_1] [function_name_2]	count=1
function_name	la frecuencia [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	asignados con ||| bool	count=1
function_name	and ||| and	count=1
namespace	hará que ||| function	count=1
arg_pair	horizontal ||| resource $psdoc float $x	count=1
arg_pair	para ||| string $baseclass	count=1
arg_pair	de php a un ||| int $length	count=1
return	disponibles en ||| string	count=1
arg_pair	una línea discontinua ||| resource $psdoc float $on	count=1
function_name	el nivel mínimo ||| min	count=1
function_name	palabras que no ||| min doc	count=1
return	especial indicando error ||| void	count=1
arg_pair	str1 en str2 ||| string $str2	count=1
arg_pair	primera ocurrencia ||| string $haystack string $needle	count=1
function_name	de una entrada de ||| zip	count=1
function_name	por lo menos ||| frequency	count=1
function_name	[function_name_1] grupos ||| [function_name_1] candidate [function_name_2]	count=1
function_name	grafema de la ||| grapheme strripos	count=1
function_name	elimina el semáforo ||| sem remove	count=3
function_name	al semáforo de ||| sem	count=1
namespace	splfileobject como ||| splfileobject	count=1
namespace	sybase_connect() ||| function	count=1
function_name	de grafema ||| grapheme strripos	count=1
function_name	y escribe los ||| write temporary	count=2
namespace	la cadena de error ||| function	count=1
arg_pair	ømq pueden hacer de ||| zmqsocket $frontend	count=1
function_name	una jerarquía entera de ||| checkout	count=1
function_name	un blob que ||| blob	count=1
arg_pair	de forma parecida ||| string $servername string $username	count=1
arg_pair	rojo ||| int $color int $r	count=1
arg_pair	a una ||| string $text string $optlist	count=1
arg_pair	a fgets() excepto que ||| resource $handle int $length	count=1
function_name	si todavía no ||| count	count=1
return	y lo almacena en ||| bool	count=1
arg_pair	de un mapa ||| string $map	count=1
namespace	generador ||| generator	count=1
arg_pair	de conexión link_identifier especificado ||| string $database_name resource $link_identifier	count=1
arg_pair	envía un mensaje de ||| string $message	count=1
function_name	máximo de tokens ||| max	count=1
arg_pair	clave de query ||| string $query	count=1
arg_pair	desde un fichero a ||| resource $context	count=1
function_name	un servicio pausado ||| win32 continue service	count=2
namespace	actualmente señalado por el ||| splobjectstorage	count=1
function_name	recupera los hilos ||| list processes	count=1
function_name	[function_name_1] de oracle ||| [function_name_2] [function_name_1] string $username string $password	count=1
function_name	recupera información que ||| info	count=1
function_name	sólo si ||| using	count=1
namespace	se utiliza para ||| function	count=1
return	y socket. -- zguide ||| zmqsocket	count=1
function_name	el número total de ||| total space	count=1
function_name	ruta del directorio para ||| dict path	count=1
function_name	validación relaxng del ||| relax	count=1
function_name	devuelve el último ||| mssql get	count=1
arg_pair	fichero a un string ||| string $filename bool $use_include_path	count=1
function_name	exporta un ||| export	count=1
function_name	un nuevo iterador desde ||| iterator	count=1
function_name	del mensaje ||| imap	count=1
function_name	apuntador de archivo dado ||| uudecode all	count=1
function_name	reinicializa ||| re init	count=1
function_name	devuelve ||| mysql get	count=1
function_name	serán ignoradas ||| min doc frequency	count=1
return	frecuencia en la que ||| solrquery	count=1
function_name	tiempo de espera de ||| query timeout	count=1
arg_pair	a fgets() ||| resource $handle	count=1
namespace	un contexto ||| zmqcontext	count=1
arg_pair	left top ||| float $top	count=1
arg_pair	de una base de ||| string $database resource $link_identifier	count=1
namespace	índice del nodo ||| splpriorityqueue	count=1
function_name	descriptor de ||| eio	count=1
function_name	contraseña del ||| password change	count=1
arg_pair	el criterio y la ||| int $sortorderby	count=2
function_name	[function_name_1] de peticiones ||| [function_name_2] [function_name_1]	count=1
namespace	lista de ||| function	count=4
function_name	de entidades ||| libxml set external entity loader	count=1
function_name	crea una ||| create entity reference	count=1
namespace	limititerator ||| limititerator	count=1
function_name	devuelve un ||| memcache get	count=1
namespace	elemento actual ||| limititerator	count=1
arg_pair	del texto ||| int $length	count=1
function_name	la lista ||| odbc data source	count=1
return	conjunto de resultados ||| sqlite3result	count=1
function_name	publicación de un field ||| ap	count=1
namespace	los dispositivos de ||| zmqdevice	count=1
function_name	todas las ||| all	count=1
function_name	el ||| dbplus chdir	count=2
return	código de ||| string	count=1
return	este es un ||| bool	count=1
function_name	un ||| fetch array	count=1
return	virtual...-- > [return] mod_include ||| [return]	count=1
arg_pair	clientes ||| string $name	count=1
function_name	esta ||| number	count=1
return	usadas en ||| bool	count=1
function_name	realice una salida ||| runkit sandbox output	count=1
function_name	calcula el arcocoseno para ||| trader acos	count=1
function_name	máximo de épocas que ||| epochs	count=1
return	es true entonces en ||| void	count=1
function_name	devuelve ||| enchant broker get error	count=2
function_name	memcached::touch() ||| touch	count=1
arg_pair	específico link_identifier ||| resource $link_identifier	count=1
arg_pair	negro especificados ||| float $blackpoint	count=1
arg_pair	clave dada por key ||| mixed $value	count=1
return	de filas ||| solrquery	count=1
return	retraso de la imagen ||| int	count=1
function_name	permite al entrenamiento ||| fann	count=1
function_name	que se [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	ser el cambio del ||| get	count=1
namespace	ficheros que ||| function	count=1
namespace	las letras ||| harufont	count=1
function_name	si ||| is default namespace	count=2
function_name	del secundario que está ||| get	count=1
function_name	conexiones subsiguientes ||| edition	count=1
return	datos en el servidor ||| bool	count=1
function_name	[function_name_1] fila insertada ||| [function_name_1] [function_name_2]	count=3
arg_pair	el argumento offset ||| resource $lob_identifier int $offset	count=1
function_name	llamarla varias ||| odbc data	count=1
function_name	[function_name_1] fuente usada ||| [function_name_2] [function_name_1]	count=3
arg_pair	a memcache::connect() con la ||| string $host	count=1
namespace	de el fichero dado ||| splfileobject	count=1
return	de error o ||| bool	count=1
namespace	que ||| zmqdevice	count=1
function_name	ps_stringwidth() excepto que ||| string geometry	count=1
function_name	clase dom ||| class	count=1
namespace	crea ||| gmagick	count=1
function_name	devuelve el conjunto ||| get	count=1
function_name	que la distancia especificada ||| pixel similar quantum	count=1
function_name	[function_name_1] la ubicaciones ||| [function_name_1] get [function_name_2]	count=1
function_name	define ||| slide show	count=2
function_name	el número total de ||| fann get total	count=1
arg_pair	intermediarios de ||| zmqsocket $frontend	count=1
arg_pair	de mask ||| string $subject string $mask	count=2
function_name	[function_name_1] el tipo ||| [function_name_1] [function_name_2]	count=4
arg_pair	orden de las restricciones ||| string $field_override	count=1
function_name	el ||| load	count=1
arg_pair	acerca de un ||| resource $result	count=1
function_name	de ||| mailparse uudecode	count=1
function	acción javascript [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	registros afectado ||| mssql rows affected	count=1
namespace	parecida ||| function	count=1
function_name	argumentos de la acción ||| gupnp service action get	count=1
function_name	una variación [function_name] memcached::setoption() que ||| [function_name]	count=1
function_name	llama a la ||| call user func array	count=1
function_name	por debajo de la ||| ps continue	count=1
function_name	desactivado por omisión) ||| disable debug	count=1
namespace	devuelve la ||| serializable	count=1
function_name	flujo ||| stream set	count=1
function	[function_name_1] operaciones update ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	desde buf a ||| string $buf	count=1
function_name	especifica el término ||| bound	count=1
rest	y [function_2] ||| [return_1] ibase blob [function_2]	count=1
function_name	enviado en la última ||| last	count=1
function_name	de estado del ||| add task status	count=1
function_name	selecciona ||| fbsql db	count=1
arg_pair	saturación ||| float $saturation	count=1
arg_pair	un proxy y ||| resource $proxy string $action	count=1
function_name	generador ||| highlight fragmenter	count=3
arg_pair	las imágenes usando un ||| int $height	count=1
namespace	de entrada/salida ||| gearmanclient	count=1
arg_pair	uso con ifx_do() ||| mixed $blobidarray	count=1
function_name	[function_name_1] de instrucciones ||| [function_name_2] [function_name_1]	count=8
return	los ||| void	count=2
arg_pair	un servicio proxy de ||| resource $proxy	count=1
function_name	codificado mediante uuencode ||| uudecode all	count=1
function_name	la página para ajustarse ||| set fit r	count=1
arg_pair	de una ||| string $content	count=1
return	la que las palabras ||| solrquery	count=1
namespace	inactividad ||| gearmanclient	count=1
arg_pair	directorio con ||| string $path	count=1
arg_pair	para el result ||| int $index	count=1
namespace	de nombres del nodo ||| domnode	count=1
function_name	en lugar de emitir ||| using	count=1
return	modificar ||| bool	count=1
function_name	devuelve la función ||| get	count=2
function_name	de ||| color	count=1
function_name	fecha ||| date parse	count=1
arg_pair	dibuja una ||| float $x	count=1
function_name	entidades externas ||| external entity	count=1
function_name	colección de archivos ||| collection	count=1
function_name	biblioteca unrar ||| set using exceptions	count=1
function_name	objeto contorneado ||| getstrokeopacity	count=1
arg_pair	en haystack ||| bool $before_needle string $encoding	count=1
function_name	escala el sistema de ||| pdf scale	count=1
function_name	tiene conexiones de atajo ||| shortcut	count=1
function_name	determinará el tipo mime ||| mime type	count=1
return	asociado a una ||| string	count=1
function	[function_name_1] útil ||| [function_name_1] resource $link_identifier [arg_pair_2]	count=2
function	al valor [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	los valores de array1 ||| array $array2	count=2
arg_pair	se identificaron ||| resource $connection string $client_identifier	count=1
namespace	devuelveto por ||| function	count=1
function_name	actualiza el contenido de ||| update	count=1
arg_pair	lógica a una ||| int $op	count=1
function_name	despliega los ||| vprintf	count=1
return	llama a ||| bool	count=1
function	la imagen [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	resumen disponibles ||| md	count=1
arg_pair	[arg_pair] objeto ||| [arg_pair]	count=4
function_name	recupera información sobre un ||| proc	count=1
arg_pair	data en ||| string $data int $length	count=1
function_name	mínimo ||| sybase min message	count=1
arg_pair	convierte ||| int $split_length	count=1
function_name	calcula el coseno hiperbólico ||| trader cosh	count=1
return	versión plural ||| string	count=1
arg_pair	blanco y negro especificados ||| float $blackpoint float $gamma	count=1
arg_pair	esta función ||| string $destination	count=1
function	indica si [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	address ||| resource $socket string $address	count=1
return	cualquier error ||| string	count=1
function_name	[function_name_1] punto primario ||| [function_name_1] image blue [function_name_2]	count=1
namespace	cambiar el ecm por ||| function	count=1
arg_pair	de cubrid cubrid ||| resource $conn_identifier	count=1
function_name	unrar ||| using exceptions	count=2
arg_pair	si un bit es ||| gmp $a	count=1
namespace	el valor predeterminado ||| directory	count=1
arg_pair	de filtros adjuntos a ||| int $read_write mixed $params	count=2
arg_pair	un ||| resource $psdoc string $name	count=1
arg_pair	información dad a ||| array $record	count=1
function_name	tamaño actual ||| zip entry	count=1
function	[function_name_1] array ||| [function_name_1] [arg_pair_2]	count=1
function_name	consulta finalice ||| time allowed	count=1
function_name	[function_name_1] de activación ||| [function_name_1] [function_name_2]	count=4
arg_pair	[arg_pair_1] efectos ||| [arg_pair_2] [arg_pair_1]	count=2
function	atributos y [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	severidad mínima del servidor ||| sybase min server severity	count=1
return	actual ||| array	count=1
arg_pair	array1 que no ||| array $array2	count=1
namespace	un lob ||| oci-lob	count=1
function_name	modo de interpretación ||| text rendering mode	count=3
function	javascript al [arg_pair_2] ||| [function_name_1] action resource $fdf_document [arg_pair_2] int	count=2
function_name	puntero interno ||| seek	count=1
arg_pair	una ruta ||| string $path	count=1
function	el algoritmo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] data ||| [arg_pair_2] [function_name_1]	count=3
function_name	[function_name_1] asociado ||| [function_name_2] [function_name_1]	count=4
function_name	caché de ||| apc compile	count=1
function_name	devuelve el tamaño ||| zip entry filesize	count=1
function_name	lista de todos ||| list	count=1
function_name	los traits ||| uses	count=1
return	cadena que ||| string	count=1
function_name	estado http de la ||| get http status	count=1
function_name	nombre de la extensión ||| extension name	count=1
function_name	retropropagación desde ||| create from file	count=2
function_name	base de datos ||| dba	count=1
function_name	de direcciones servicios ||| construct	count=1
return	de ||| resource	count=1
arg_pair	efecto de botón ||| int $x int $y	count=1
function_name	serán ignoradas ||| doc	count=1
function_name	el nombre de ||| name	count=12
function_name	se usa para ||| cubrid set	count=1
function_name	finalice ||| time allowed	count=2
function_name	devuelve información de errores ||| sqlsrv errors	count=1
namespace	dispositivos de ||| zmqdevice	count=1
function_name	estado ||| count	count=1
return	en formato string ||| string	count=1
arg_pair	ésta es una ||| string $offset	count=1
function_name	si el ||| using	count=1
return	función en el servidor ||| bool	count=1
arg_pair	de contexto log_cmd_update al ||| array $protocoloptions	count=1
function_name	rra ||| archive	count=1
arg_pair	numérico o ambos por ||| int $fetchtype	count=1
function_name	finaliza la definición ||| end	count=1
function_name	color de una imagen ||| image	count=1
function_name	como de tipo id ||| id	count=2
function_name	abierto mediante el ||| proc get	count=1
function_name	de ||| set using	count=2
function_name	extrase ||| pid	count=1
function_name	si el ||| set	count=1
arg_pair	el archivo dest ||| string $dest int $context	count=1
function_name	[function_name_1] consulta de ||| [function_name_2] [function_name_1]	count=6
function_name	número de documentos en ||| doc count	count=1
function_name	socket devuelto ||| socket strerror	count=1
function_name	el resultado ||| xdiff file bpatch	count=1
arg_pair	base de ||| resource $link_identifier	count=1
arg_pair	la función va aquí ||| cairosvgsurface $surface	count=1
namespace	en el almacenamiento ||| splobjectstorage	count=1
return	una ||| void	count=5
function	[function_name_1] result set ||| [function_name_1] name [arg_pair_2]	count=1
function_name	cuantía ||| quantum	count=1
function_name	defecto de entidades ||| external entity	count=1
return	dada ||| sdo_das_xml_document	count=1
function_name	que las ||| min doc	count=1
return	consiste en ||| bool	count=1
function_name	llamada a dbx_query() ||| dbx	count=1
namespace	internet que corresponde ||| function	count=1
namespace	creación de objectos soapserver ||| soapserver	count=1
return	número de ||| solrquery	count=1
function_name	consulta de ||| facet query	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] textflow [arg_pair_2]	count=1
return	son ||| mongocursor	count=1
function_name	adjunta otro núcleo ||| add kernel	count=1
arg_pair	str ||| string $str	count=6
function_name	devuelve [function_name_2] ||| [function_name_1] namespace [function_name_2]	count=1
namespace	a partir ||| function	count=1
function_name	pares de sustitución ||| pspell config save repl	count=1
return	la función de ||| void	count=1
namespace	el segundo cuando se ||| function	count=1
function_name	las conexiones ||| get cascade	count=1
function_name	codificación de ||| mb convert encoding	count=1
function_name	clase dom ||| node class	count=1
return	un id ||| string	count=1
return	abierto mediante ||| array	count=1
function_name	de ingres ||| ingres	count=3
function_name	devuelve si ||| get highlight	count=1
function	[function_name_1] el intérprete ||| [function_name_1] [arg_pair_2]	count=6
function_name	los servidores de trabajo ||| ping	count=1
function_name	revierte ||| rollback	count=1
function_name	sybase asociado al ||| sybase data	count=1
function_name	en un das xml ||| add	count=1
function_name	lista de dsn ||| odbc data	count=1
function_name	miniatura embebida de ||| exif thumbnail	count=1
namespace	imagen original ||| gmagick	count=1
function_name	indicador de posición del ||| gzrewind	count=1
return	actual donde se ||| string	count=1
function_name	[function_name_1] afectadas ||| [function_name_2] [function_name_1]	count=28
function_name	de documento mínima ||| terms min	count=1
function_name	cubrid_lob2_new() u ||| lob2 close	count=1
function_name	global que pertenece ||| mysqlnd ms	count=1
function_name	establece el ||| set highlight simple	count=1
function_name	obtiene el retraso ||| delay	count=1
arg_pair	mezcla el ||| mixed $colorize mixed $opacity	count=1
return	devolverá la ||| array	count=1
arg_pair	dado ||| resource $conn_identifier	count=1
function_name	nombre de ||| name	count=17
function_name	está marcado como ||| original	count=1
function_name	incorrecto de argumento) ||| using exceptions	count=1
function_name	un das xml que ||| add	count=1
function	convierte un [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	de data proporcionada en ||| bool	count=1
function_name	construye un lote de ||| construct	count=3
function_name	la actual ||| get current	count=1
namespace	es el ||| domnode	count=1
function_name	resultado [function_name] result_identifier ||| [function_name]	count=1
arg_pair	un objeto ||| resource $pdfdoc	count=1
function_name	devuelve un array ||| mcrypt module get	count=1
function_name	[function_name_1] el código ||| [function_name_2] [function_name_1]	count=1
arg_pair	una ||| string $table int $scope	count=1
arg_pair	de filtros adjuntos ||| int $read_write mixed $params	count=2
function_name	número de campo ||| field	count=1
function_name	esta función devolverá ||| odbc	count=1
function_name	longitud máxima [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	indicando ||| void	count=1
return	tamaño actual ||| int	count=1
function_name	el tamaño [function_name] paso durante ||| [function_name] rprop increase	count=1
function_name	usando ncurses_init_color() ||| can change color	count=1
namespace	archivos que contenía el ||| function	count=1
function_name	connect ||| connect	count=1
arg_pair	dispositivos de ømq pueden ||| zmqsocket $frontend	count=1
function_name	reflectionparameter ||| parameters	count=1
arg_pair	de estilo ||| int $type	count=1
function_name	del cursor: ||| count	count=1
namespace	de forma opcional se ||| function	count=1
function_name	devuelve un solrinputdocument equivalente ||| get input document	count=1
function_name	[function_name_1] la devuelve ||| [function_name_2] [function_name_1]	count=12
function_name	número de filas afectadas ||| affected rows	count=3
function_name	bloquearán la e/s del ||| readahead	count=1
function_name	función ||| format	count=1
function_name	contiene la fecha gregoriana ||| jdtogregorian	count=1
function_name	estado actual del autocommit ||| fbsql autocommit	count=1
function_name	natural ||| natsort	count=1
function	[function_name_1] un método ||| [function_name_1] [arg_pair_2]	count=3
function_name	es ejecutable ||| is executable	count=2
function_name	abstracción que se defina ||| construct	count=1
arg_pair	directorio ||| int $mode	count=1
arg_pair	a ||| gmp $a	count=2
arg_pair	ancho del contorno acutales ||| float $ex float $ey	count=1
function_name	de tipo ||| using	count=1
function_name	[function_name_1] a ||| [function_name_2] [function_name_1] string $field	count=2
function_name	[function_name_1] campos morelikethis ||| [function_name_2] [function_name_1]	count=1
arg_pair	una página ||| float $ury	count=1
namespace	archivo zip ||| ziparchive	count=1
function_name	bytes ||| bcompiler	count=4
function_name	trazado y [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	los datos y los ||| string $data	count=1
function_name	minúsculas ||| tolower	count=1
function_name	columna ||| column number	count=1
function_name	[function_name_1] los métodos ||| [function_name_1] md [function_name_2]	count=1
function_name	frecuencia ||| term frequency	count=2
namespace	imagen que representa ||| function	count=6
arg_pair	de [arg_pair] ||| [arg_pair]	count=4
arg_pair	el código ||| int $error_code	count=1
function_name	inferior ||| lower	count=1
arg_pair	la ruta en ||| string $path	count=1
function_name	núcleo («kernel») a ||| add	count=1
function_name	esquema en ||| add	count=1
arg_pair	la ||| float $disp_time	count=1
arg_pair	entradas y un ||| resource $ann array $input	count=1
arg_pair	desde la representación dom ||| domnode $node	count=1
function	descrita [arg_pair_2] ||| [function_name_1] insert [arg_pair_2]	count=3
namespace	obtiene la ||| harufont	count=1
function_name	pares de sustitución junto ||| save repl	count=1
return	la frecuencia en la ||| solrquery	count=1
arg_pair	la función callback ||| callable $callback string $data	count=1
arg_pair	de un array ||| int $num	count=1
function_name	[function_name] el ||| is [function_name]	count=1
function_name	de fragmeto ideal ||| regex slop	count=1
function_name	intermediarios de direcciones servicios ||| construct	count=1
function_name	de entradas de cada ||| input	count=1
function_name	cierra [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	el array ||| array	count=3
function_name	un valor especial ||| set using	count=1
function_name	una descripción ||| error string	count=1
namespace	una etiqueta id3 ||| ktaglib_tag	count=1
function_name	devuelve e elevado ||| exp	count=1
function_name	contexto de flujo para ||| context	count=1
arg_pair	dentro del buffer especificado ||| string $buffer	count=1
arg_pair	rota el ||| float $phi	count=1
function_name	devuelve el servidor que ||| get	count=1
function_name	raíz descargando ||| root	count=1
namespace	de mysql iniciada por ||| function	count=1
function_name	los encabezados a enviar ||| set soap headers	count=1
function_name	número de línea actual ||| get current line number	count=1
arg_pair	rectangular ||| float $lly	count=2
function_name	un mensaje ||| strerror	count=1
function_name	de coordenadas ||| rotate	count=1
arg_pair	forma parecida a ||| string $servername	count=1
function_name	máximo de caracteres ||| set highlight max	count=1
function_name	escribe el contenido ||| fwrite	count=1
function_name	añade ||| add from	count=1
arg_pair	el modo de ||| int $pri	count=1
function_name	guarda el ||| pdf save	count=1
function_name	0 y ||| color	count=1
function_name	devuelve ||| get loaded extensions	count=1
arg_pair	una ||| resource $pdfdoc string $filename	count=1
namespace	que se tienen ||| function	count=1
function_name	resultado ||| result	count=1
function_name	descripción de ||| image surface get	count=1
function_name	and ||| variant and	count=2
function_name	proporcionan ||| splice	count=1
function_name	obtiene el ancho ||| get	count=1
function_name	reinicializa a ||| reset	count=1
function_name	crea ||| create cdatasection	count=2
return	letras ||| int	count=1
function_name	establece ||| set error	count=1
function_name	retorna el nombre corto ||| id3 get frame short name	count=1
function_name	de control de ||| gupnp control point callback	count=1
function_name	ingres_query() en un ||| ingres	count=1
namespace	que las palabras que ||| solrquery	count=1
function_name	funciones de sisitema ||| stream wrapper	count=1
arg_pair	gettext() ||| string $msgid2	count=1
namespace	cuando una tarea ||| gearmanclient	count=1
function_name	destino con ||| pdf add nameddest	count=1
function_name	primer ||| ncurses	count=1
return	actual basada en un ||| bool	count=1
arg_pair	de direcciones servicios colas ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	número máximo ||| set highlight max	count=1
function_name	devuelve la resolución como ||| getimageresolution	count=1
return	lectura en la ||| bool	count=1
namespace	una cadena ||| function	count=1
arg_pair	bordes ||| int $x	count=1
function_name	al entrenamiento continuar ||| fann get cascade output	count=1
arg_pair	es a**r)/gamma r ||| float $a float $r	count=1
function_name	de grafema de ||| grapheme stripos	count=1
function_name	del complemento ||| mysqlnd ms	count=1
arg_pair	data1 y data2 en ||| resource $data2	count=1
namespace	o no ||| function	count=2
return	sobre ||| array	count=2
namespace	a sybase_connect() con ||| function	count=1
namespace	1 el cual se ||| function	count=1
function_name	true entonces en ||| using	count=1
namespace	líneas se unen ||| function	count=1
function_name	prueba ||| gmp prob	count=1
function_name	nivel mínimo de ||| sybase min message	count=1
function_name	api de eventos ||| event buffer new	count=1
function_name	afectadas por ||| fetched	count=1
arg_pair	listas desordenadas ||| string $achtung_wild string $par1	count=1
namespace	la ventana ||| harudestination	count=1
function_name	está compilado como thread-safe ||| maxdb thread safe	count=1
function_name	[function_name_1] la base ||| [function_name_2] [function_name_1]	count=4
arg_pair	esta es una ||| string $name mixed $value	count=1
function_name	de error ||| curl	count=1
return	string utilizando el algoritmo ||| string	count=1
arg_pair	la función cubrid_schema() se ||| resource $conn_identifier int $schema_type	count=1
function_name	la tarea en ejecución ||| do	count=2
return	especifica ||| string	count=1
arg_pair	con un nuevo valor ||| int $key int $value	count=1
arg_pair	información ||| resource $ch	count=1
function_name	existe en ||| key exists	count=1
function_name	de un gestor curl ||| curl	count=1
arg_pair	pueden ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	en otra ||| compositeimage	count=1
namespace	define el de estilo ||| harupage	count=1
arg_pair	el certificado x509cert ||| bool $shortnames	count=1
function_name	con ||| ns	count=1
arg_pair	bbcode_container creado por bbcode_create() ||| resource $bbcode_container	count=1
arg_pair	como una función ||| string $name mixed $callback	count=1
return	un array ||| resource	count=1
function_name	palabras ||| mlt min	count=1
function_name	buscarán los archivos ||| chdir	count=1
function_name	importa [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	código de ||| code	count=2
arg_pair	con ciertas propiedades de ||| resource $result int $field_offset	count=1
arg_pair	esta función se comporta ||| resource $p float $x	count=1
function_name	el directorio de ldap ||| ldap	count=1
arg_pair	con imagecolorallocate() ||| int $color	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] cookie [function_name_2]	count=3
function_name	subsiguiente fichero ||| add types	count=1
function_name	paso inicial ||| rprop delta zero	count=1
function_name	la ||| open	count=1
function_name	de estilo ||| slide	count=1
namespace	error que describe el ||| function	count=1
function_name	de la línea siguiente ||| next line	count=1
rest	crea un [function_2] ||| [function_2] [return_1]	count=1
namespace	se anota texto ||| gmagickdraw	count=1
arg_pair	bytes str ||| string $str string $charset	count=1
return	en la lista de ||| bool	count=1
function_name	por lo ||| min doc frequency	count=1
arg_pair	un resultado que contiene ||| resource $connection string $qualifier	count=1
function_name	defecto de entidades ||| libxml set external entity loader	count=1
arg_pair	tridimensional ||| int $x	count=1
return	puedan estar ||| string	count=1
function_name	de un documento html ||| html	count=1
function_name	sido creado con el ||| types	count=1
function_name	[function_name_1] color del ||| [function_name_2] [function_name_1]	count=2
function_name	y máximo) ||| extrema	count=2
function_name	tantos documentos ||| doc frequency	count=1
function_name	recodificación request ||| recode	count=1
function	valor actual [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la capa de salida ||| function output	count=1
arg_pair	nombre de ruta ||| string $path	count=1
function_name	de prioridad de los ||| priority init	count=1
function_name	imagen ||| set image	count=3
function_name	devuelve un array ||| get	count=2
function_name	error sqlstate ||| sqlstate	count=2
arg_pair	de llamarla varias veces) ||| resource $connection_id int $fetch_type	count=1
arg_pair	dada por key corresponda ||| string $key mixed $value	count=1
function_name	función cubrid_col_get() se usa ||| cubrid col	count=1
function_name	para añadir ||| offset set	count=1
function_name	entre 0.0 y 1.0 ||| hsl	count=1
namespace	pings a una conexión ||| function	count=1
return	un array de ||| array	count=2
function_name	[function_name_1] última fila ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] read resource $socket [arg_pair_2]	count=3
function_name	el servidor postgresql después ||| pg end	count=1
function_name	de modo de interpretación ||| text rendering mode	count=1
return	de archivo dado ||| array	count=1
namespace	por defecto ||| function	count=1
function_name	línea de ||| get	count=1
arg_pair	forma parecida a ||| string $username	count=1
function_name	string de bytes ||| generate	count=1
namespace	un hash y ||| quickhashintstringhash	count=1
arg_pair	certificado) basada en la ||| array $extraattribs	count=1
function_name	el número de reintentos ||| sybase deadlock retry count	count=1
return	este es un alias ||| bool	count=1
function_name	inverso del modulo ||| invert	count=1
function_name	en la que ||| min doc	count=1
function_name	filas ||| num rows	count=5
function_name	seno para ||| asin	count=1
arg_pair	una fila en ||| int $row_number	count=1
function_name	de un documento html ||| is html	count=1
arg_pair	el valor ||| string $value int $flags	count=1
arg_pair	declara el ||| string $name bool $isid	count=1
function_name	especificado donde id ||| by id	count=2
arg_pair	un identificador de ||| resource $result_id	count=1
arg_pair	en el flujo imap ||| string $criteria	count=1
function_name	por defecto de entidades ||| external entity loader	count=1
function_name	actual de profiling de ||| set profiling level	count=1
function_name	para guardar [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	obtiene el string ||| get	count=1
namespace	después ||| function	count=1
arg_pair	[arg_pair_1] modo ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	convertir un ||| convert to data	count=1
function_name	indica si ||| is	count=3
arg_pair	el secreto para las ||| string $token_secret	count=1
function_name	devuelve la [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=1
function_name	actual de una ||| zip entry filesize	count=1
function_name	archive del disco no ||| writable	count=1
function_name	registra el nombre ||| register	count=1
arg_pair	un ||| resource $pdfdoc	count=12
function_name	árbol de casillas de ||| newt checkbox tree find	count=1
function_name	documento xml desde la ||| save xml	count=1
arg_pair	acceso recursivamente path1 ||| int $rev1	count=1
function_name	tie breaker parameter ||| tie	count=1
function_name	[function_name] copia ||| svn [function_name]	count=1
function_name	[function_name_1] [function_name_2] y mueve el puntero ||| function array [function_name_2] [function_name_1]	count=4
arg_pair	estándar basado ||| string $str	count=1
function_name	de ||| zip entry	count=2
function_name	establece el valor ||| set status	count=1
arg_pair	un trazado ||| resource $p	count=1
function_name	de encabezados a ser ||| headers	count=1
return	un string serializado del ||| string	count=1
function_name	das xml que ||| add types	count=1
function_name	un das xml ||| add types	count=1
namespace	primer plano y ||| function	count=1
function_name	función de activación ||| activation	count=4
function_name	recupera la información de ||| pdf info	count=1
function_name	libera un descriptor ||| oci free	count=1
function	[function_name_1] específico link_identifier ||| [arg_pair_2] [function_name_1]	count=1
return	virtualmente en cada plataforma ||| bool	count=1
arg_pair	un ||| resource $fdf_document string $url	count=1
function_name	la actual fuente usada ||| current font	count=1
arg_pair	texto ||| string $text float $word_space	count=1
function_name	establece el gestor ||| set storage	count=1
arg_pair	crea un ||| resource $pdfdoc int $textflow	count=1
namespace	segundo o ||| sdo_das_xml	count=1
function_name	de ||| chdir	count=1
arg_pair	offset a la dirección ||| int $offset	count=1
arg_pair	ruta en ||| string $path bool $recursive	count=1
function_name	[function_name_1] de recorte ||| [function_name_2] [function_name_1]	count=4
function_name	de reintentos en ||| retry count	count=1
function_name	del buffer ||| buffer	count=1
function_name	de cargar entidades externas ||| disable entity loader	count=1
arg_pair	rgb ||| int $red	count=1
function	[function_name_1] desde ||| [function_name_1] [arg_pair_2]	count=3
function_name	épocas de estancamiento de ||| stagnation epochs	count=2
function_name	círculo ||| circle	count=2
arg_pair	a un fichero ||| string $filename	count=1
function_name	html del ||| load htmlfile	count=1
arg_pair	prepara el evento ||| resource $event	count=1
function_name	la que las palabras ||| mlt	count=1
function_name	i-nodo ||| inode	count=1
function_name	permiso del usuario sobre ||| posix access	count=1
arg_pair	previamente asignado con imagecolorallocate() ||| int $color	count=1
return	un string ||| string	count=8
return	retorna un string con ||| string	count=1
return	plano ||| int	count=1
arg_pair	ømq pueden hacer ||| zmqsocket $frontend	count=1
return	llena la ruta ||| bool	count=1
function_name	función devolverá la ||| odbc data source	count=1
function_name	comentario ||| comment	count=6
return	estilo de ||| bool	count=1
arg_pair	esteblece [arg_pair_1] [arg_pair_2] todas las operaciones de ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=1
function_name	de petición http ||| apache request	count=1
function_name	caché de consultas ||| mysqlnd qc	count=1
function_name	[function_name_1] [function_name_2] inspeccionada por la caché ||| [function_name_1] [function_name_2]	count=1
function_name	clase iterador ||| iterator class	count=3
function_name	devuelve el [function_name_2] ||| [function_name_1] sarprop step error [function_name_2]	count=2
function_name	que ambos ||| add	count=1
namespace	de ||| imagickkernel	count=1
function_name	obtiene el tipo ||| get socket type	count=2
function_name	[function_name_1] rrd desde ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve las flags de ||| get	count=1
function_name	corto para un marco ||| short	count=1
function_name	gestores de ||| handlers	count=1
function_name	y false para cfb ||| mcrypt	count=1
function_name	con un [function_name] ||| [function_name]	count=1
function_name	firma de cabecera ||| header	count=1
function_name	la fuente a usar ||| setfontweight	count=1
arg_pair	address ||| string $address	count=1
function_name	[function_name_1] épocas que ||| [function_name_1] cand [function_name_2]	count=3
return	botón tridimensional simulado aclarando ||| void	count=1
function_name	función devuelve ||| get loaded	count=1
arg_pair	estilo numérico ||| int $first_page int $style	count=1
function_name	al ||| tailable	count=1
function_name	crea un nuevo objeto ||| construct	count=2
function_name	de una entrada de ||| zip entry filesize	count=1
arg_pair	los bordes de la ||| int $width int $height	count=1
arg_pair	una implementación ||| string $value	count=1
return	de base de ||| int	count=1
rest	mueve un [function_2] ||| [return_1] [function_2]	count=2
function	[function_name_1] el domain ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] una ||| [function_name_1] name [arg_pair_2]	count=1
function_name	registros en ||| px numrecords	count=1
function_name	apuntador de archivo ||| mailparse uudecode	count=1
function	función socket_sendto() [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] patrón guía ||| [function_name_1] [function_name_2]	count=1
function_name	estado de un ||| status	count=1
return	en lugar de ||| bool	count=1
arg_pair	para un nombre ||| int $property string $name	count=1
function_name	la descripción de ||| cairo font options get hint style	count=1
function_name	número ||| msgno	count=1
return	devuelve un ||| resource	count=1
function_name	de filas ||| db2 num rows	count=1
function_name	la información del navegador ||| get browser	count=1
function_name	byte actual en ||| get current byte index	count=1
function_name	obtener el número ||| get num	count=2
function	[function_name_1] varios arrays ||| [function_name_1] [arg_pair_2]	count=3
function_name	el servidor raíz ||| gupnp root device	count=1
function_name	un arreglo ||| db2 fetch	count=1
function_name	serán ||| doc	count=1
namespace	si la ||| solrdocument	count=1
function_name	estadísticas de cliente ||| client stats	count=3
function_name	sisitema de archivos tales ||| stream wrapper	count=1
function_name	notifica a los ||| service notify	count=1
function_name	dos o ||| number format	count=1
return	lee los datos ||| array	count=1
function_name	[function_name_1] frecuencia bajo ||| [function_name_2] [function_name_1]	count=1
function_name	solo que el ||| close	count=1
function_name	los pares ||| config save repl	count=1
function_name	en un archivo ||| all	count=1
function_name	de nombres especificado ||| default namespace	count=1
return	domnodelist con todos ||| domnodelist	count=1
arg_pair	reabre el ||| int $options int $n_retries	count=1
arg_pair	datos del acs ||| string $servicename string $machine	count=1
function_name	de entrenamiento en ||| train	count=1
arg_pair	una consulta y devuelve ||| string $query	count=1
namespace	e y ||| gmagick	count=1
function_name	el nombre [function_name_2] ||| function string fdf [function_name_2] field [function_name_1] resource $fdf_document string $fieldname	count=1
arg_pair	nombre variable_name en ||| string $variable_name	count=1
function_name	color actual del trazo ||| cmykstroke	count=1
function_name	debería usarse para almacenar ||| set	count=1
function_name	establece la apariencia de ||| set ap	count=1
arg_pair	la función va aquí ||| cairopssurface $surface	count=1
function_name	la longitud [function_name_2] ||| [function_name_2] [function_name_1]	count=32
arg_pair	simulado aclarando y ||| int $width	count=1
function_name	en la que las ||| mlt	count=1
function_name	establece el identificador ||| set	count=1
namespace	la página ||| harupage	count=13
function_name	caché de ||| apc	count=1
function_name	identifica el tipo ||| type	count=1
function_name	subject que contiene solamente ||| strspn	count=1
namespace	aparecen en el ||| function	count=1
function_name	en la solicitud ||| nsapi request	count=1
namespace	es similar a popen() ||| function	count=1
namespace	parámetro dado por ||| function	count=1
function_name	una clase [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	que devuelven ||| function	count=1
function	fila [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	cola ||| queue	count=1
function_name	false si es ||| module is	count=1
function_name	la entrada ||| zip entry	count=1
function_name	especificado si [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	menos tantos ||| set mlt min	count=1
return	generada al inicio del ||| void	count=1
function_name	hace un diff unificado ||| xdiff file diff	count=1
function_name	de casillas de ||| newt checkbox tree find item	count=1
return	advertencias y ||| void	count=1
function_name	los mensajes de correo ||| imap mail	count=1
function_name	dibuja una curva ||| path curve to	count=1
arg_pair	efecto de botón tridimensional ||| int $x int $y	count=1
function_name	resumen de mensajes md5 ||| md5	count=1
namespace	entrada ||| quickhashintstringhash	count=1
function_name	cierra ||| closedict	count=1
function_name	conjunto de resultados ||| result	count=2
function_name	[function_name] serializada proporcianda ||| [function_name]	count=3
namespace	indica si ||| oci-lob	count=1
function_name	curl compartido y libera ||| curl share	count=1
namespace	devuelve un ||| ev	count=1
function_name	fila ||| fetch	count=10
arg_pair	archivo remoto desde el ||| string $remote_file	count=2
function_name	muestra el resultado ||| display	count=1
function_name	de columna actual para ||| get current column	count=1
function_name	campos a usar para ||| fields	count=1
arg_pair	versión plural de ||| string $msgid2	count=1
arg_pair	efecto de botón ||| int $y	count=1
arg_pair	similar a memcache::connect() con ||| string $host int $port	count=1
function_name	de db++ ||| dbplus	count=2
function_name	[function_name] de solr ||| set [function_name]	count=3
function_name	devuelve el código de ||| get	count=1
function_name	usa la prueba probabilística ||| prob	count=1
arg_pair	eliminar cualesquiera bytes ||| resource $handle	count=1
function_name	en un nodod ||| dom import	count=1
arg_pair	esteblece [arg_pair_1] [arg_pair_2] operaciones de dibujo siguientes ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	es el espacio ||| is default namespace	count=1
arg_pair	actual indicando ||| string $actor	count=1
function_name	codificación ||| mb	count=1
function_name	actual de una ||| entry	count=1
function_name	[function_name_1] campo ||| [function_name_1] alternate [function_name_2]	count=2
return	en un identificador de ||| bool	count=1
function_name	de ||| dbplus	count=1
function_name	seno hiperbólico para ||| trader sinh	count=1
function_name	alfa [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
namespace	es ||| tidynode	count=1
function_name	cual los términos serán ||| mlt min term	count=1
function_name	guarda la imagen ||| save	count=1
arg_pair	identificador de entrada para ||| resource $result_identifier	count=1
arg_pair	enviar emails con el ||| string $message	count=1
function_name	tangente hiperbólica ||| trader tanh	count=1
function	imagen a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	las clases que pertenecen ||| class names	count=1
function_name	[function_name_1] una ||| [function_name_1] [function_name_2]	count=6
function_name	javascript ||| set javascript	count=1
function_name	cierra una relación ||| dbplus close	count=3
return	y escribe ||| int	count=1
function_name	línea por debajo de ||| ps continue	count=1
arg_pair	de memcached::cas() con ||| float $cas_token	count=1
function_name	entidades no analizadas para ||| set unparsed entity decl	count=1
namespace	carácter dado ||| intlchar	count=3
function_name	conjunto ||| cubrid	count=1
function_name	guardar ||| save	count=1
arg_pair	como una ||| string $fieldname	count=1
function_name	de zend ||| zend	count=1
function_name	función ||| gmp	count=1
return	error cuando ||| void	count=1
function_name	contiene pares de ||| pspell config repl	count=1
function_name	intenta ||| fgetss	count=1
function_name	socket ||| socket server	count=2
function_name	filas que se ||| start	count=1
namespace	el cual se ||| function	count=1
function_name	mínimo de ||| sybase min message	count=1
function_name	devuelve el rango ||| get quantum range	count=2
function_name	desplazamiento de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	tridimensional simulado ||| int $y	count=1
namespace	que están disponibles depende ||| function	count=1
arg_pair	una función de ayuda ||| string $column_key	count=1
return	activa ||| mixed	count=1
namespace	espacios en blanco u ||| function	count=1
arg_pair	ereg_replace() ||| string $pattern string $replacement	count=1
function_name	descripción de ||| image surface	count=1
function_name	variables [function_name] actualmente ||| [function_name]	count=1
function_name	la dirección del secundario ||| get	count=1
arg_pair	unidades de b ||| resource $pdfdoc float $b	count=1
arg_pair	salto de ||| string $break bool $cut	count=1
return	y devuelve el valor ||| mixed	count=1
function_name	encuentre ||| set using	count=1
function_name	fragmentador de expresiones regulares ||| highlight regex	count=1
return	en la dirección x ||| bool	count=1
function_name	parameter ||| query alt	count=2
function_name	las llaves [function_name] ||| db2 [function_name]	count=1
function_name	en la configuración ||| tidy config	count=1
function_name	obtiene ||| getinfo	count=1
function_name	escala una imagen a ||| image	count=1
function_name	segmento de datos lob ||| db2 lob	count=1
function_name	importa ||| import stream	count=1
arg_pair	input identificado ||| array $input	count=1
function	[function_name_1] o ambos ||| [function_name_1] resource $stmt [arg_pair_2]	count=1
function_name	dueño de el ||| owner	count=1
arg_pair	domain actual en una ||| string $domain	count=1
function_name	contraste de una imagen ||| image	count=1
function_name	del buffer de ||| buffer	count=1
function_name	actual está cifrado ||| encrypted	count=1
function_name	el tamaño en ||| size	count=1
function_name	de región ||| and region	count=1
function_name	imagen de ||| sub image	count=1
return	resultante definido en ||| bool	count=1
function_name	[function_name_1] el comentario ||| [function_name_1] [function_name_2]	count=2
function_name	error cuando la ||| set using exceptions	count=1
function_name	este ||| await data	count=2
function_name	son similares al comando ||| tailable	count=1
arg_pair	tridimensional simulado aclarando ||| int $y	count=1
function_name	del mensaje [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	de una entrada de ||| int	count=1
function_name	usuario presiona la ||| suspend	count=1
function_name	documento pdf ||| pdf process pdi	count=1
arg_pair	texto y opciones ||| string $text	count=1
function_name	la información de sesión ||| session	count=2
function_name	con stream_wrapper_unregister() ||| wrapper	count=1
function_name	un archivo ||| mailparse uudecode all	count=1
function_name	espacio de nombres ||| is default	count=1
function_name	número ||| gmp prob prime	count=2
namespace	el diccionario indicado ||| function	count=1
arg_pair	función callback ||| mixed $arg	count=1
function_name	[function_name] actualmente registradas ||| [function_name]	count=1
namespace	oauth basada en el ||| oauth	count=1
function	[function_name_1] en repos_url ||| [function_name_1] [arg_pair_2]	count=3
function_name	ascenso vertical de ||| get ascent	count=1
function	[function_name_1] de value ||| [function_name_1] [arg_pair_2]	count=2
return	actual ||| void	count=2
function_name	«espacio horizontal» que separa ||| isblank	count=1
arg_pair	resource de datos ||| resource $data	count=1
function_name	potencia de ||| variant pow	count=1
function_name	[function_name_1] fuente cargada ||| [function_name_2] [function_name_1]	count=2
return	un objeto con propiedades ||| object	count=1
namespace	comprueba ||| solrdocument	count=1
function_name	devuelve el ||| zip	count=1
return	de una imagen mientras ||| gmagick	count=1
arg_pair	el xml dump ||| string $rrd_file	count=1
function_name	[function_name_1] apache especificado ||| [function_name_2] [function_name_1]	count=6
function_name	lista [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	le ha ||| count	count=1
arg_pair	de un ||| string $str	count=2
arg_pair	salto ||| string $break	count=1
namespace	para el fichero o ||| function	count=1
arg_pair	especificada por flag ||| string $flag	count=1
namespace	especificada dada por ||| function	count=1
arg_pair	de certificado) basada ||| array $extraattribs	count=1
namespace	posición ||| iterator	count=1
function_name	cursor utilizado en ||| db2 cursor	count=1
function_name	usa la ||| gmp	count=1
function_name	el resultado ||| xdiff	count=4
arg_pair	otra llamada ||| callable $callback	count=1
function_name	candidatas antes ||| cascade	count=2
return	devuelve la ||| int	count=2
namespace	en la solicitud actual ||| function	count=1
namespace	de [namespace] con la ||| [namespace]	count=1
arg_pair	posición ord del vector ||| resource $psdoc int $ord	count=1
return	del número ||| bool	count=1
function_name	desde la cadena de ||| load	count=1
return	proceso actual ||| void	count=1
function_name	estándar basado en des ||| crypt	count=1
function_name	documentos como ||| set mlt min doc	count=1
function_name	en la que las ||| set mlt min	count=1
function_name	imágenes en ||| images	count=1
arg_pair	comportamiento automático de envío ||| bool $onoff	count=1
function_name	array de pendientes de ||| steepnesses	count=1
function_name	de ||| uudecode all	count=2
function_name	el atributo [function_name] ||| is [function_name]	count=2
namespace	se encuentra activa ||| function	count=1
function_name	advertencias y ||| set	count=1
arg_pair	otros ||| string $str	count=1
function_name	que se ||| set start	count=1
function_name	imprime el ||| pdf show xy	count=1
function_name	nuevo objeto [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de socket dada ||| stream socket	count=1
function_name	detalles del estado ||| status	count=1
arg_pair	certificado x509cert ||| mixed $x509cert	count=1
arg_pair	de una ||| string $optlist	count=1
function_name	escribe los datos dados ||| write temporary	count=1
namespace	un eleménto ||| xmlreader	count=1
arg_pair	cuenta el número ||| int $index_end	count=1
function_name	predeterminado si una excepción ||| exception handler	count=1
function_name	la descripción de la ||| cairo scaled font get font	count=2
function_name	tabla y todas las ||| table	count=1
arg_pair	type a ||| string $type	count=1
arg_pair	botón tridimensional simulado ||| int $height	count=1
function_name	lecturas a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	grado ||| array $env array $other_options	count=1
arg_pair	una nueva entrada ||| int $key string $value	count=1
function_name	mediante ||| uudecode all	count=2
return	a cada píxel en ||| bool	count=1
function_name	[function_name_1] y equilibrado ||| [function_name_2] [function_name_1]	count=1
arg_pair	usa para iterar a ||| int $colnum	count=1
function_name	mínimo y máximo) de ||| extrema	count=2
function_name	[function_name_1] máxima ||| [function_name_2] [function_name_1]	count=6
function_name	abierto mediante el ||| status	count=1
return	numérico del mensaje de ||| int	count=1
function_name	cada servidor virtual ||| server by path	count=1
namespace	xsltprocessor::setparameter() ||| xsltprocessor	count=1
function_name	de los ciclos de ||| collect cycles	count=1
function_name	a ||| by	count=1
function_name	archivo dado y ||| mailparse uudecode	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] params [arg_pair_2]	count=16
function_name	información de la asignación ||| apc sma info	count=1
arg_pair	php del ||| resource $handle	count=1
function_name	que las palabras ||| mlt min	count=1
arg_pair	value1 ||| mixed $value1	count=1
function_name	entradas de cada patrón ||| input	count=1
function_name	establece el array ||| set	count=1
function_name	son el mismo ||| is same	count=1
function	[function_name_1] un archivo ||| [function_name_1] config [arg_pair_2]	count=1
function_name	número de filas ||| set start	count=1
function_name	un string binario ||| blob	count=1
arg_pair	array1 ||| array $array2	count=2
function_name	que no ||| frequency	count=1
function_name	el logaritmo natural ||| log	count=1
function_name	y escribe [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	nombre de host ||| by name	count=2
arg_pair	asociado al objeto pdostatement ||| int $fetch_style int $cursor_orientation	count=1
function_name	única ||| add kernel	count=2
function_name	envía ||| msg send	count=1
function_name	devuelve el ||| get current	count=1
arg_pair	[arg_pair_1] en una ||| [arg_pair_1] string $msgid1 [arg_pair_2]	count=2
arg_pair	con ciertas propiedades ||| resource $result int $field_offset	count=1
return	lee ||| string	count=1
function_name	descripción de ||| ps surface restrict to level	count=1
arg_pair	[arg_pair_1] pattern y ||| [arg_pair_2] [arg_pair_1]	count=2
return	activa actualmente en ||| bool	count=2
arg_pair	sybase_connect() con ||| string $servername	count=1
function_name	restaura la configuración ||| config	count=1
namespace	momento ||| function	count=1
function_name	función geoip_domain_by_name() devolverá ||| domain by	count=1
function_name	lo ||| min doc frequency	count=2
function_name	lista ||| open memory	count=1
function_name	actual de una ||| zip entry	count=1
function_name	tie breaker ||| breaker	count=1
function_name	vincular ||| bind array by name	count=1
function_name	los mensajes ||| imap clearflag full	count=1
function_name	el seno hiperbólico ||| sinh	count=1
function_name	unrar encuentre un ||| set	count=1
function_name	corto ||| short	count=1
function_name	versión ||| version	count=1
arg_pair	de bits ||| mixed $right	count=2
function	[function_name_1] de b ||| [function_name_1] [arg_pair_2]	count=1
return	array con la ||| array	count=1
namespace	al conjunto ||| quickhashintset	count=1
function_name	proceso abierto ||| proc	count=1
function	[function_name_1] un bloque ||| [function_name_1] textblock [arg_pair_2]	count=1
function_name	[function_name_1] interno actual ||| [function_name_2] [function_name_1]	count=4
function	existe en [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	crea un vector ||| create	count=1
function	[function_name_1] una archivo ||| [function_name_1] [arg_pair_2]	count=4
function_name	espacio) para ||| text leading	count=1
function_name	la codificación de caracteres ||| convert encoding	count=1
return	una matriz de ||| array	count=1
function_name	e elevado a la ||| exp	count=2
arg_pair	enviar emails ||| string $message	count=1
namespace	y llama ||| gearmanworker	count=1
function_name	una ||| string	count=4
function_name	de tendencias de ||| fann get bias	count=1
return	devuelve ||| string	count=7
arg_pair	de pattern y ||| mixed $pattern	count=1
function_name	el ||| filesize	count=1
arg_pair	atributos al dn específico ||| resource $link_identifier string $dn	count=1
return	carga un ||| void	count=1
namespace	todos ||| gearmanclient	count=1
arg_pair	el offset [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] el nombre ||| [function_name_1] short [function_name_2]	count=1
function_name	para que la ||| delete multi by	count=1
return	que ambos puedan ||| void	count=1
function_name	zona horaria correspondiente a ||| time zone	count=1
function_name	función de activación ||| activation function	count=4
arg_pair	coincida con el color ||| mixed $fill	count=1
function_name	la descripción de la ||| cairo pattern create rgba	count=1
arg_pair	reabre el flujo ||| int $options int $n_retries	count=1
arg_pair	parecida a sybase_connect() ||| string $username	count=1
function_name	de la fila recuperada ||| sqlsrv fetch	count=1
function_name	un objeto ||| children	count=1
function_name	utilizando el ||| crypt	count=1
function_name	de pincel para usarla ||| imagesetbrush	count=1
return	obtiene el ||| int	count=3
arg_pair	y ||| string $setting mixed $value	count=1
function_name	ítems ||| multi	count=1
function_name	un recurso de flujo ||| resource	count=1
arg_pair	convierte un string en ||| int $split_length	count=1
arg_pair	especificado por mailbox ||| string $mailbox int $options	count=1
function_name	nombre ||| fieldname	count=1
arg_pair	ip y puerto específicado ||| int $port	count=1
arg_pair	obtener información sobre los ||| resource $result	count=1
namespace	un archivo tar/zip ||| phardata	count=1
function_name	calcula el seno hiperbólico ||| sinh	count=1
arg_pair	fila [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=6
arg_pair	una palabra ya existe ||| resource $dict string $word	count=1
function_name	actual ||| get	count=1
namespace	u otros ||| function	count=1
namespace	de la línea ||| harufont	count=1
function_name	reescritura establecidas previamente ||| reset rewrite vars	count=1
function_name	sobre la información de ||| pdf info	count=1
arg_pair	indicando ||| string $actor	count=1
function_name	nodo actual es asp ||| is asp	count=1
arg_pair	el modo de acceso ||| int $mode	count=1
function_name	[function_name_1] alfa ||| [function_name_2] [function_name_1]	count=8
function_name	el ||| set using exceptions	count=2
function_name	lista de dsn disponibles ||| odbc data	count=1
function_name	desplazamiento del [function_name_2] ||| [function_name_2] [function_name_1]	count=20
arg_pair	stack ||| string $stack	count=1
function_name	los mensajes [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	una cadena ||| gmagickdraw	count=1
function_name	acción ||| action callback	count=1
namespace	tar este método ||| phardata	count=2
function_name	el iterador interno actual ||| inner iterator	count=1
function_name	php del texto ||| fgetss	count=1
arg_pair	de la base de ||| string $database	count=1
function_name	los términos serán ||| mlt	count=1
return	[return] ruta ||| [return]	count=1
function_name	el ||| add types	count=2
arg_pair	la función cubrid_schema() ||| resource $conn_identifier int $schema_type	count=1
function_name	lecturas a [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	especificado donde id es ||| by id	count=1
arg_pair	devuelve un [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=5
namespace	archivo dado y ||| function	count=1
function_name	esta función analiza ||| bbcode parse	count=1
function_name	[function_name_1] de imágenes ||| [function_name_2] [function_name_1]	count=1
function_name	es true entonces ||| set	count=1
function_name	pundo de código ||| chr	count=1
function_name	cabecera del mensaje ||| imap	count=1
arg_pair	una ||| string $title	count=1
arg_pair	esta función acepta uno ||| float $number	count=1
return	número ||| int	count=9
function_name	[function_name_1] servidores ||| [function_name_1] [function_name_2]	count=1
function_name	color especificado como ||| get color	count=1
arg_pair	y ||| int $y	count=1
function_name	los parámetros de ||| params	count=3
arg_pair	un ||| string $dest int $flags	count=1
arg_pair	envía len bytes ||| int $len	count=1
function_name	bytes de una ||| bcompiler	count=1
return	el puntero de ||| int	count=1
arg_pair	de un enlace web ||| resource $pdfdoc float $lowerleftx	count=1
arg_pair	relleno actual a un ||| resource $p	count=1
function_name	de instrucciones ||| processing instruction	count=1
namespace	recupera la instancia de ||| yaf_dispatcher	count=1
arg_pair	orden de las restricciones ||| int $facetsort string $field_override	count=1
function_name	dsn ||| data source	count=2
namespace	para la página ||| harupage	count=2
arg_pair	contenido de una ||| string $optlist	count=1
function_name	0 y 1 ||| color	count=1
function_name	menos ||| doc frequency	count=2
function_name	de errores y ||| errors	count=1
arg_pair	la función va aquí ||| cairosurface $surface	count=1
function	de activación [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	lote de operaciones delete ||| mongocollection $collection array $write_options	count=1
function_name	[function_name_1] morelikethis ||| [function_name_2] [function_name_1]	count=6
arg_pair	tridimensional simulado aclarando y ||| int $x	count=1
arg_pair	oid ||| resource $conn_identifier string $oid	count=2
arg_pair	sustitución de oracle name ||| string $name	count=1
arg_pair	disponible ||| resource $psdoc	count=1
function_name	pdf usando ||| pdf open file	count=1
namespace	módulo indicado por ||| function	count=1
namespace	devolver un ||| rarexception	count=1
function_name	la imagen ||| interlace	count=1
function_name	del texto al ||| text	count=1
function_name	línea para ||| set line width	count=2
arg_pair	posición indicada. ||| int $left int $top	count=1
function_name	a large object ||| pg lo truncate	count=1
function_name	bytes ||| fgetss	count=1
return	bloquea o desbloquea el ||| bool	count=1
function_name	en por lo menos ||| set mlt min doc frequency	count=1
arg_pair	el result ||| resource $result int $index	count=1
return	una llamada a ||| string	count=1
function_name	la ||| interlace	count=1
function_name	de seguimiento ||| tailable	count=1
arg_pair	un ||| string $namespaceuri string $localname	count=1
return	y ||| int	count=2
arg_pair	relation al dado por ||| resource $relation string $name	count=1
arg_pair	colores ||| int $colorspace	count=2
arg_pair	plaintext con las ||| string $plaintext	count=1
function_name	advertencias ||| set using	count=1
function_name	conexión necesario para la ||| connect	count=1
function_name	filas que se ||| set start	count=1
function_name	función usa la prueba ||| gmp prob	count=1
function_name	recupera información sobre un ||| proc get status	count=1
function_name	[function_name_1] un entrenamiento ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve el ||| entry	count=1
function_name	sintaxis de la consulta ||| query chars	count=1
return	true entonces ||| void	count=1
function_name	[function_name_1] de entrenamiento ||| [function_name_2] from [function_name_1]	count=1
arg_pair	que server_key se ||| array $keys	count=1
function_name	[function_name_1] en particular ||| [function_name_1] [function_name_2]	count=5
arg_pair	mask ||| string $subject string $mask	count=2
function_name	actual de modo ||| mode	count=1
function_name	ruta del directorio para ||| enchant broker set dict path	count=1
arg_pair	de una ||| string $name int $opsys	count=1
function_name	las palabras que no ||| frequency	count=1
return	tailable que son ||| mongocursor	count=1
arg_pair	con ||| resource $statement	count=1
function_name	a minúscula ||| mb strtolower	count=1
function_name	[function_name_1] más reciente ||| [function_name_2] [function_name_1]	count=8
arg_pair	ninguna ||| string $collection	count=1
function_name	socket. ||| construct	count=1
arg_pair	columna de input ||| array $input	count=1
function_name	devuelve una lista con ||| list	count=1
function_name	las palabras que ||| set mlt min doc	count=1
function_name	que la ||| delayed by	count=1
function_name	de registros afectado por ||| mssql rows affected	count=1
function_name	ambos puedan aplicarse a ||| add	count=1
function_name	rastreo de oracle ||| oci	count=1
function_name	los parámetros de la ||| params	count=1
arg_pair	parecida ||| string $servername string $username	count=1
function_name	paleta de la ||| imagecolorexact	count=1
arg_pair	exp ||| gmp $base gmp $exp	count=1
function_name	unrar encuentre un ||| using exceptions	count=1
function_name	frecuencia en la que ||| set mlt min doc	count=1
function_name	pid ||| get	count=1
function	carga [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	usuario presiona la ||| suspend callback	count=1
function_name	devuelve el nombre ||| get	count=4
function_name	desde un servidor ssh2 ||| ssh2	count=1
function_name	quita ||| remove	count=1
function	escribe los [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	el buffer ||| buffer	count=2
function_name	la precisión de ||| db2 field precision	count=1
function_name	base de ||| get	count=1
function_name	cargar la ||| load	count=1
function_name	usando una ||| uksort	count=1
namespace	obtiene el ||| function	count=1
function_name	añade un elemento hijo ||| add	count=1
return	en un ||| void	count=1
function_name	del namespace ||| lookup namespace	count=2
arg_pair	redimensiona ||| resource $image int $new_width	count=1
arg_pair	un ||| string $domain	count=1
function_name	código de ||| curl	count=1
arg_pair	modo wsdl o modo ||| array $options	count=1
function_name	el valor quantum value ||| value quantum	count=1
function_name	excepciones ||| exception	count=1
function_name	la descripción de ||| cairo font options get hint	count=2
function_name	namespace ||| end namespace	count=1
function_name	una conexión ||| connect	count=2
arg_pair	de estilo de ||| int $type	count=1
function_name	un atributo ||| attribute	count=1
function_name	como este serán ignoradas ||| min	count=1
arg_pair	para un punto ||| mixed $codepoint	count=1
function_name	una fila de resultados ||| fetch	count=1
function_name	el ||| set slide show	count=2
function_name	una cadena de ||| string	count=1
function_name	para que la ||| get multi by	count=1
function_name	estado actualizado ||| status	count=1
function_name	[function_name_1] array multi-dimensional ||| [function_name_2] [function_name_1]	count=1
return	cunstruye ||| sdo_das_xml_document	count=1
return	objeto dado ||| string	count=1
namespace	bruto o mediante base64 ||| function	count=2
return	que lee ||| string	count=1
function_name	fichero mpeg ||| id3v2 tag	count=1
function_name	errores del usuario ||| errors	count=1
return	regexiterator::__construct() para [return] lista de ||| [return]	count=1
return	tamaño actuales en ||| bool	count=1
arg_pair	0 index ||| int $index	count=1
function_name	actual de una entrada ||| zip entry filesize	count=1
function_name	calcula e elevado a ||| trader exp	count=1
function_name	todas las operaciones memcached::*bykey() ||| server by	count=1
function_name	esta función ||| ps open	count=1
function_name	de mensajes según ||| imap sort	count=1
arg_pair	identificaron con el ||| resource $connection string $client_identifier	count=1
arg_pair	caracter de mask ||| string $mask	count=1
function_name	límite del recurso ||| resource limit	count=1
function_name	o ||| add kernel	count=2
namespace	menos tantos documentos como ||| solrquery	count=1
arg_pair	socket. -- zguide ||| zmqsocket $frontend	count=1
function_name	cada ||| mailparse uudecode all	count=2
function_name	colecciones de ||| collection info	count=1
function_name	esta función devolverá ||| odbc data source	count=1
function	socket_sendto() [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	retorna el nombre ||| name	count=5
function_name	línea a ||| line	count=1
function_name	[function_name_1] nonce ||| [function_name_2] [function_name_1]	count=1
namespace	por el ||| function	count=1
namespace	de nombres especificado ||| domnode	count=1
namespace	el fichero dado por ||| function	count=1
return	devuelve un mensaje ||| string	count=1
function_name	devuelve el tipo de ||| column type	count=1
function_name	[function_name_1] el tamaño ||| [function_name_1] [function_name_2]	count=2
arg_pair	el archivo ||| int $use_include_path	count=1
function_name	de lecturas a secundarios ||| set slave okay	count=1
function_name	entrada/salida del ||| tidy	count=1
function_name	devuelve una lsita de ||| get	count=1
namespace	escucha para este trabajo ||| gearmanjob	count=2
return	especificado en el ||| bool	count=2
function	[function_name_1] retrollamadas ||| [arg_pair_2] [function_name_1]	count=1
namespace	cualquier abstracción que ||| zmqdevice	count=1
function_name	de unicode propertyvaluealiases.txt ||| value enum	count=1
arg_pair	html y ||| resource $handle int $length	count=1
namespace	argumentos de ||| function	count=1
function_name	especifica el ||| set start	count=1
function_name	la tangente para ||| trader tan	count=1
function_name	actual ||| zip entry	count=1
function_name	una base [function_name] universal ||| [function_name]	count=1
function	renombrar [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	0 refiriénsose [namespace] no ||| [namespace]	count=1
function_name	devuelve ||| get code	count=1
function_name	propuesta de ||| getimagerenderingintent	count=1
return	eliminar cualesquiera bytes ||| string	count=1
return	clave ||| void	count=1
function_name	factor de aumento ||| factor	count=1
function_name	descripción de ||| cairo matrix transform distance	count=1
return	sólo si el argumento ||| void	count=1
function_name	analiza una url ||| parse	count=1
namespace	uso de ||| function	count=1
arg_pair	r * x** ||| float $a float $r	count=1
return	sistema de coordenadas ||| bool	count=1
namespace	y escribe el resultado ||| splfileobject	count=1
function_name	la cadena ||| bzerrstr	count=1
function_name	[function_name_1] ubicaciones de ||| [function_name_1] get [function_name_2]	count=1
arg_pair	de botón tridimensional ||| int $x int $y	count=1
namespace	direcciones ||| zmqdevice	count=1
function_name	funciones ||| call	count=1
function_name	de autocommit del recurso ||| db2 autocommit	count=1
function_name	objetos excepto [function_name] contenidos en ||| [function_name]	count=1
function_name	de filas afectadas por ||| mysqli stmt affected rows	count=1
return	una consulta preparada por ||| mixed	count=1
function_name	[function_name_1] filas afectadas ||| [function_name_2] [function_name_1]	count=1
function_name	decadencia es ||| decay	count=1
namespace	que existan ||| function	count=1
function_name	es ||| prob prime	count=2
function_name	el código ||| curl strerror	count=1
function_name	documento basándose ||| ngvalidate	count=1
arg_pair	dibujar imágenes de color ||| resource $image bool $blendmode	count=1
function_name	extensión phar ||| phar	count=1
function_name	las solicitudes ||| sslchecks	count=1
function_name	ha consultado se ||| count	count=1
function_name	cadena de instancia ||| load string	count=1
arg_pair	[arg_pair_1] [arg_pair_2] operaciones de dibujo siguientes ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	ruta para el dominio ||| string $directory	count=1
arg_pair	recurso de resultados antes ||| resource $result	count=1
function_name	campos a ||| add field	count=1
function_name	transformación ||| trans matrix	count=1
arg_pair	para el intérprete ||| resource $parser callable $handler	count=1
arg_pair	el modo de acceso ||| int $mode int $pri	count=1
arg_pair	esteblece [arg_pair_1] [arg_pair_2] las operaciones de dibujo ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=1
function	clase del [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=1
function_name	son similares al ||| tailable	count=1
namespace	referenciado en el mapa ||| weakmap	count=1
namespace	directorio hasta volver al ||| filesystemiterator	count=1
function_name	ha ||| add	count=1
function_name	tener una [function_name] por ||| [function_name]	count=1
function_name	que son similares al ||| tailable	count=1
function_name	nombres ||| namespace	count=3
arg_pair	estructura de datos ||| int $num_input	count=1
return	único elemento en ||| bool	count=1
function_name	la longitud de palabra ||| word length	count=2
function_name	construye un ||| construct	count=3
function_name	obtiene los hijos ||| get children	count=1
return	establece [return] ||| [return]	count=2
return	esta función ||| string	count=1
return	datos ||| array	count=1
function_name	del árbol de casillas ||| newt checkbox tree	count=1
namespace	usando una ||| arrayiterator	count=2
function	la propiedad [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	envía ||| gearmanclient	count=1
arg_pair	de llamarla ||| resource $connection_id	count=1
return	cambia ||| string	count=1
function_name	envía ||| send data	count=2
return	los datos del apuntador ||| array	count=1
function_name	puede ser usado ||| session	count=1
function	respuesta [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	con el ||| void	count=1
return	por lo menos ||| solrquery	count=1
function_name	entorno de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	la salida del sol ||| date sunrise	count=1
function_name	la paleta de la ||| imagecolorexact	count=1
namespace	previamente asignados ||| oci-lob	count=1
function_name	el control de ||| control	count=1
function_name	nuevo iterador desde ||| iterator	count=1
function_name	previamente con stream_wrapper_unregister() ||| stream wrapper	count=1
namespace	el tamaño ||| function	count=1
function_name	ordenados por valor boost ||| sort	count=2
return	dado ||| string	count=3
function_name	de primer ||| color	count=1
function_name	la descripción de ||| cairo font	count=1
arg_pair	el fichero ||| int $flags	count=1
function_name	la codificación de caracteres ||| mb detect encoding	count=1
function_name	advertencias y devolver ||| set using	count=1
namespace	proceso actual ||| function	count=1
function_name	con el nombre de ||| name	count=1
function_name	[function_name_1] [function_name_2] de la entrada usando ||| ziparchive string [function_name_1] [function_name_2] index int	count=2
function_name	los colores de primer ||| color	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] package [function_name_2]	count=1
function_name	de la fecha dada ||| date parse from	count=1
function_name	desde el repositorio ||| svn checkout	count=1
function_name	campos columnas ||| numfields	count=1
arg_pair	key ||| int $key int $perms	count=1
function_name	añade una etiqueta al ||| add	count=1
arg_pair	un ||| resource $connection string $data	count=1
arg_pair	ninguna ||| string $collection mixed $id	count=1
function_name	obtener el estado actualizado ||| status	count=1
return	un número es ||| int	count=1
function_name	primera imagen ||| first	count=1
arg_pair	crea un ||| resource $broker	count=1
function_name	una función ||| uasort	count=1
function_name	reescritura establecidas previamente por ||| reset rewrite vars	count=1
namespace	para una conexión o ||| function	count=1
namespace	la función devolviendo ||| pdo	count=1
arg_pair	[arg_pair_1] un conjunto ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	si ||| prime	count=1
function_name	direcciones servicios ||| construct	count=1
function_name	si es uno de ||| mcrypt module is	count=1
function_name	campos de una determinada ||| fetch field	count=1
function_name	este método añade ||| add	count=4
function_name	bytes de ||| bcompiler	count=4
function_name	cubrid_col_get() se usa ||| cubrid col	count=1
arg_pair	path1 y [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	einer mime kopfzeile ||| iconv mime encode	count=1
namespace	rpc ||| yar_client	count=1
function_name	clase ||| class	count=10
arg_pair	una implementación ||| string $offset string $value	count=1
function_name	disponibles después de llamarla ||| odbc data	count=1
namespace	se utiliza para establecer ||| function	count=1
function_name	la zona horaria ||| time zone by country	count=1
function_name	primer índice [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	longitud ||| length	count=1
return	especial ||| void	count=1
function_name	del sistema posix asociado ||| posix strerror	count=1
function_name	[function_name_1] rango de ||| [function_name_1] image channel [function_name_2]	count=1
function_name	establece la calidad ||| mysqlnd ms set qos	count=1
function_name	menos ||| min doc frequency	count=2
arg_pair	compuesta combinando varias imágenes ||| int $mode	count=1
function_name	abierto ||| status	count=1
arg_pair	de una base ||| string $name	count=1
arg_pair	las retrollamadas ||| array $patterns_and_callbacks	count=1
function_name	de forma ||| pconnect	count=1
function_name	recibe todas las cabeceras ||| nsapi request headers	count=1
function_name	hora de la puesta ||| date sunset	count=1
function	[function_name_1] de arg ||| [function_name_1] [arg_pair_2]	count=3
return	lista de ímágenes ||| bool	count=1
arg_pair	define el ||| int $type	count=1
function_name	se usa ||| resource	count=1
return	hash de un ||| string	count=1
namespace	las ||| harufont	count=1
function	[function_name_1] específica ||| [arg_pair_2] [function_name_1]	count=1
return	el nombre ||| void	count=1
function_name	traits ||| class uses	count=1
return	defina ||| zmqsocket	count=1
function_name	como el carp::cluck ||| clunk	count=1
return	count() sobre [return] objeto ||| [return]	count=1
function_name	uso de ||| proc	count=1
arg_pair	una función escalar ||| string $name	count=1
function_name	se encuentra ||| ps open	count=1
function_name	valor especial ||| exceptions	count=1
arg_pair	[arg_pair_1] msql_fetch_row() ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	interpretación del texto para ||| text rendering	count=1
arg_pair	algoritmo estándar basado ||| string $str	count=1
function_name	dueño de el fichero ||| owner	count=1
namespace	hash ||| quickhashstringinthash	count=3
function_name	espera de consulta de ||| get query timeout	count=1
namespace	tamaño ||| function	count=1
arg_pair	una consulta aql ||| string $dbpath	count=1
arg_pair	planifica la ejecución de ||| resource $event	count=1
function_name	[function_name_1] el máximo ||| [function_name_1] cascade [function_name_2]	count=1
function_name	inicializar el phar cuando ||| phar	count=1
function_name	[function_name] espejo ||| transpose [function_name]	count=2
return	que son similares al ||| mongocursor	count=1
return	todos ||| solrupdateresponse	count=1
function_name	lugar de ||| set using exceptions	count=1
function_name	solicitud site exec ||| ftp exec	count=1
function_name	lee ||| uudecode all	count=2
function_name	la lista de ||| ps open memory image	count=1
function_name	fragmentos a considerara ||| fragsize	count=1
return	un trabajo y llama ||| bool	count=1
arg_pair	archivo ||| int $startpos	count=1
namespace	valor [namespace] ||| [namespace]	count=1
arg_pair	alfa para usar los ||| resource $image	count=1
function_name	actualiza el contenido ||| update	count=1
function_name	obtiene el carácter ||| get	count=1
function_name	la actualización [function_name] ||| rrd [function_name]	count=3
function	añade [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=18
function_name	devuelve los nombres ||| get	count=1
function_name	de disposición [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] contornea ||| [function_name_1] [function_name_2]	count=1
function_name	especificado si devuelve un ||| module get supported	count=1
namespace	función acepta uno dos ||| function	count=1
namespace	codificado mediante ||| function	count=1
namespace	código posee ||| intlchar	count=1
function_name	curl compartido ||| curl share	count=2
return	proporcionada existe [return] ||| [return]	count=1
return	búfer ||| int	count=1
arg_pair	óptimo de columnas que ||| int $nullable	count=1
function_name	error una excepción de ||| set	count=1
function_name	información de estado del ||| add task status	count=1
function_name	máximo [function_name_2] ||| [function_name_1] cand [function_name_2]	count=3
function_name	relevancia del término de ||| mlt boost	count=1
function_name	certificado proporcionado ||| openssl x509	count=1
return	información sobre el ||| object	count=1
function_name	devuelve un array [function_name_1] [function_name_2] el puntero de datos ||| function array [function_name_2] [function_name_1]	count=2
function_name	clase del ||| cubrid get class	count=2
function_name	de lecturas [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	lee ||| mailparse uudecode	count=1
arg_pair	una ||| string $format	count=1
function_name	devuelve una versión serializada ||| to string	count=2
function	columna [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	este serán ignoradas ||| min	count=1
function_name	establecer el valor actual ||| value	count=1
function_name	esquema ||| schema	count=4
function_name	utf-32 ||| utf32	count=1
function_name	menos ||| set mlt min	count=1
function_name	el codificador utilizado actualmente ||| current encoder	count=1
arg_pair	el valor ||| mixed $bordercolor int $x	count=2
function_name	puesta de ||| date sunset	count=1
function_name	realiza una operación or ||| or	count=1
function_name	el rango ||| range	count=2
function_name	de la sesión actual ||| session	count=1
arg_pair	establecido a ||| int $method array $arguments	count=1
function_name	cuando el usuario presiona ||| suspend callback	count=1
function_name	xml que ya ha ||| add types	count=1
function_name	preparada y ||| execute	count=1
return	a ser usadas en ||| bool	count=1
function	los datos [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	establece el tipo ||| set type	count=3
namespace	de mysqlnd especificada ||| mysqlnduhconnection	count=1
namespace	o jpeg ||| function	count=1
function_name	cada archivo codificado mediante ||| mailparse uudecode all	count=1
function_name	de documento mínima ||| facet enum cache min default	count=1
function_name	cuál cae [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sobre la ubicaciones ||| cert locations	count=1
function_name	envía la ||| proxy send	count=1
function_name	cierra ||| crack	count=1
function_name	de memcached::touch() con la ||| touch	count=1
function_name	de notación notation ||| notation decl	count=1
function_name	conexión sobre un socket ||| socket accept	count=1
function_name	devuelve las flags de ||| get preg	count=1
return	y la desviación ||| array	count=1
arg_pair	en el string str ||| string $option	count=1
arg_pair	envía una petición a ||| string $query	count=1
return	cursor: si todavía no ||| int	count=1
function_name	de sintaxis lint pelusa ||| lint	count=1
namespace	memcached dada por ||| memcached	count=2
function_name	aql embebido dentro ||| rquery	count=1
function_name	documento ||| pdi	count=1
namespace	disponible la lista ||| function	count=1
namespace	con las claves x ||| gmagick	count=1
function_name	publicación ||| ap	count=1
function_name	ciclo ||| eio nop	count=2
arg_pair	de array1 ||| array $array1	count=1
function_name	alcance de una declaración ||| decl	count=1
function_name	devuelve un arreglo ||| db2	count=1
return	x e ||| array	count=1
namespace	o desde ||| function	count=1
return	y lo escribe en ||| bool	count=1
arg_pair	left con right ||| mixed $right	count=1
namespace	intenta eliminar cualesquiera ||| function	count=1
function_name	para la curva bezier ||| curve	count=1
arg_pair	una página del ||| string $dest	count=1
function_name	obtiene ||| bzerrstr	count=1
arg_pair	de datos de un ||| resource $statement	count=1
return	breaker ||| solrdismaxquery	count=1
function_name	el ||| show	count=1
function_name	una salida como ||| runkit sandbox output	count=1
return	usa la prueba probabilística ||| int	count=1
function_name	de interoperabilidad ||| stub	count=1
function_name	este serán ||| mlt min doc	count=1
function_name	continente que corresponde ||| continent code	count=1
function_name	archive del ||| writable	count=1
namespace	por xsltprocessor::setparameter() ||| xsltprocessor	count=1
function_name	obtiene varios ||| get value	count=1
function_name	un objeto documento ||| document	count=1
function_name	de dígito ||| isdigit	count=1
namespace	tipo de imagen ||| gmagick	count=1
arg_pair	local en ||| int $mode	count=1
function_name	envía datos arbitrarios a ||| ping	count=1
return	array con toda ||| array	count=1
arg_pair	del texto ||| string $text	count=1
namespace	pid ||| mongoid	count=1
function_name	que fue subido mediante ||| move uploaded file	count=1
function_name	datos de geoip ||| geoip	count=2
namespace	define la ||| harupage	count=2
namespace	líneas cuando se ||| function	count=1
namespace	usado ||| solrparams	count=1
arg_pair	petición actual indicando que ||| string $actor	count=1
return	la sentencia ||| int	count=1
function_name	al primer atributo ||| first attribute	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] color [function_name_2]	count=3
function_name	círculo con su punto ||| ps arcn	count=1
namespace	que contiene los ||| function	count=1
function_name	tipo de la columna ||| type	count=1
function_name	devuelve el nombre ||| get name	count=7
function_name	inserta la entrada descrita ||| dba insert	count=1
return	plural de ||| string	count=1
arg_pair	filename usando el ||| string $filename	count=1
namespace	momento actual ||| function	count=1
function_name	forma parecida a ||| pconnect	count=1
return	xml será generada al ||| void	count=1
namespace	si la tarea ||| gearmantask	count=1
function_name	la tangente para cada ||| trader tan	count=1
function_name	controlar el brillo ||| modulate	count=1
return	sido creado ||| void	count=1
function_name	variables ||| convert variables	count=2
namespace	de [namespace] de un ||| [namespace]	count=1
namespace	de retorno a ||| function	count=1
function_name	establece el valor ||| offset set	count=1
function_name	cierra el objecto ||| ifxus close	count=1
function_name	especifica el número ||| set	count=1
function_name	que son similares ||| tailable	count=1
function_name	dada mediante wincache_lock() ||| wincache unlock	count=1
function_name	conexión empleado al crear ||| connection rate	count=1
arg_pair	función prepara para una ||| resource $id string $type	count=1
function_name	sisitema de ||| stream wrapper	count=1
function	[function_name_1] registradas ||| [function_name_1] get all [arg_pair_2]	count=3
function_name	valor actual ||| set value	count=1
namespace	retorno a ||| function	count=1
function_name	entrenamiento continuar ||| fann get	count=1
function_name	sentencia sql ||| exec	count=1
arg_pair	los dispositivos ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	ldap devuelta por ||| ldap	count=1
arg_pair	datos ||| resource $conn_identifier	count=1
function_name	activación para ||| activation	count=2
function_name	[function_name_1] de salidas ||| [function_name_2] [function_name_1]	count=2
function_name	la cabecera del mensaje ||| imap	count=1
arg_pair	de colores ||| int $colorspace	count=2
arg_pair	en el parámetro charlist ||| string $charlist	count=1
namespace	cursor: si ||| mongocursor	count=1
arg_pair	la de memcached::getmulti() ||| string $cas_tokens	count=1
return	utilizando el algoritmo ||| string	count=1
function_name	biblioteca unrar encuentre ||| set using	count=1
namespace	un ||| rarexception	count=2
namespace	cualquier ||| function	count=1
function_name	que se ||| newt	count=1
return	si un número ||| int	count=1
function_name	blob que ||| ibase blob	count=1
arg_pair	para el result set ||| int $index	count=1
function_name	registro del conjunto resultado ||| yaz record	count=1
function_name	afectadas en una operación ||| affected	count=1
function_name	esta función ||| open memory	count=1
function_name	el [function_name] ||| get [function_name]	count=1
function_name	consulta ||| add filter query	count=1
function_name	enviando el control ||| control	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] ereg search [function_name_2]	count=2
function_name	lo menos tantos ||| mlt min doc frequency	count=1
function	última modificación [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	de versiones estandarizados ||| string $version1 string $version2	count=1
arg_pair	define el de estilo ||| int $type	count=1
function_name	un servicio pausado nominado ||| win32 continue service	count=1
namespace	fgets() excepto ||| function	count=1
function_name	de ||| is	count=2
namespace	los índice del ||| splfixedarray	count=1
function_name	en ||| min doc	count=2
function_name	devuelve el copyright de ||| getcopyright	count=1
arg_pair	un mensaje mediante ||| string $message	count=1
function_name	número de candidatas ||| get cascade	count=1
arg_pair	se usa para posicionar ||| int $position	count=1
function_name	los mensajes especificados ||| imap fetchbody	count=2
arg_pair	fijo de colores ||| int $colorspace	count=2
function_name	blanco de la ||| white	count=1
return	define ||| bool	count=3
arg_pair	un valor de ||| resource $p float $g	count=1
arg_pair	algoritmos alternativos ||| string $str string $salt	count=1
function_name	utilizar para que ||| set by	count=1
arg_pair	dada por data ||| string $data	count=1
function_name	conexión actual ||| autocommit	count=1
return	en la tabla global ||| bool	count=1
function_name	guarda los ||| save	count=1
function_name	su nombre y devolver ||| char from name	count=1
namespace	devuelve o ||| function	count=1
function_name	reanua un servicio pausado ||| continue service	count=1
function	[function_name_1] un año ||| [function_name_1] [arg_pair_2]	count=3
namespace	archivo especificado por ||| function	count=1
function_name	de mensajes ||| imap sort	count=1
function_name	establece el ||| callback set	count=1
return	devuelve un string con ||| string	count=2
arg_pair	obtiene un ||| resource $imap_stream int $options	count=1
function_name	configuración del ||| config count	count=1
function_name	escala ||| scaling	count=1
function_name	la traza de pila ||| trace	count=1
function_name	[function_name_1] campos de ||| [function_name_1] [function_name_2]	count=2
return	cuando la biblioteca ||| void	count=1
function_name	la descripción de ||| cairo	count=1
arg_pair	una fila [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=6
namespace	archivo phar basados ||| phar	count=1
function_name	descripción de ||| color stop rgb	count=1
arg_pair	un efecto de ||| int $width int $height	count=1
function_name	código de bytes de ||| bcompiler	count=4
arg_pair	oid ||| string $mode	count=1
function_name	esta función elimina ||| px delete	count=1
arg_pair	imágenes de ||| bool $blendmode	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] color [function_name_2]	count=2
function_name	representa una columna ||| db2 fetch	count=1
function_name	pincel para usarla con ||| imagesetbrush	count=1
return	más ||| int	count=1
arg_pair	empleando delimiter ||| string $null_as	count=1
namespace	y que va ||| function	count=1
namespace	llaves que se an ||| function	count=1
function_name	actual ||| entry	count=1
function_name	cuando se ha ||| cubrid	count=1
function_name	frecuencia bajo ||| frequency	count=1
function_name	puede usar para establecer ||| set	count=1
function_name	devuelve el paquete wddx ||| wddx packet	count=1
arg_pair	[arg_pair] nombre ||| [arg_pair]	count=3
namespace	pertenece la función ||| reflectionfunctionabstract	count=1
function_name	fichero omitiendo el nombre ||| path	count=1
arg_pair	número de ||| resource $imap_stream	count=1
function_name	el propietario ||| fchown	count=1
function_name	devuelve ||| strerror	count=1
return	ficheros dados en ||| bool	count=1
function_name	de ||| uudecode	count=1
function	ancho [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	ya ha sido creado ||| types	count=1
function_name	mediante ||| crack	count=1
function_name	elimina el [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
namespace	lista de argumentos de ||| function	count=1
namespace	value2 ||| splminheap	count=1
function_name	siguiente si varias ||| next	count=1
function_name	elimina uno [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] el result ||| [arg_pair_2] [function_name_1]	count=5
function_name	[function_name_1] el nombre ||| [function_name_1] module [function_name_2]	count=1
return	en por ||| solrquery	count=1
namespace	excepción en ||| exception	count=1
function_name	imagen en negro ||| imagecreatetruecolor	count=1
function_name	memcached::prepend() con la ||| prepend by key	count=1
function_name	en por lo menos ||| min	count=1
namespace	este es un alias ||| solrdocument	count=1
function_name	bloque de ||| block	count=1
function_name	la función del manejador ||| decl handler	count=1
function_name	siguiente fila del conjunto ||| oci fetch	count=1
function_name	busca el desplazamiento de ||| msql	count=1
arg_pair	de un ||| resource $psdoc	count=1
function_name	una única tarea y ||| do normal	count=1
function_name	configuración del ||| tidy config count	count=1
function_name	del archivo paradox ||| px	count=1
arg_pair	a sybase_connect() con ||| string $password	count=1
namespace	en escucha que ||| function	count=1
arg_pair	de la ||| int $width int $height	count=1
arg_pair	recurso de conexión especificado ||| resource $connection bool $value	count=1
function_name	obtiene si está disponible ||| root device get available	count=1
function_name	encuentra ||| image	count=1
function_name	las palabras que no ||| min doc frequency	count=1
function_name	crea una nueva instancia ||| create	count=5
function_name	[function_name_1] parte coincidente ||| [function_name_2] [function_name_1]	count=1
function_name	tabla en ||| pdf fit table	count=1
namespace	de una entrada de ||| function	count=1
function_name	la palabra ||| word	count=2
arg_pair	dos ||| string $password	count=1
return	definida por ||| void	count=2
function_name	rellena y contornea ||| pdf fill stroke	count=2
function_name	las funciones definidas ||| functions	count=2
return	servidores de trabajo ||| bool	count=1
return	la cadena de ||| string	count=1
function_name	el certificado y ||| sign	count=1
function_name	usarse para ordenar varios ||| array multisort	count=1
arg_pair	las ||| zmqsocket $frontend	count=1
function_name	reinicializa el ||| re init	count=1
arg_pair	una ||| resource $grp resource $req	count=1
function_name	la lista de ||| memory image	count=1
function_name	un valor ||| using exceptions	count=1
namespace	que representa la versión ||| function	count=2
function_name	que las palabras que ||| mlt min doc	count=1
function_name	algoritmo por bloques ||| block algorithm	count=1
arg_pair	de la ||| int $height	count=1
return	una ||| resource	count=3
namespace	es parte ||| tidynode	count=1
function_name	antes de los ||| addcslashes	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] sarprop step [function_name_2]	count=4
return	un array con el ||| string	count=1
function_name	obtiene el tiempo de ||| get	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] request [function_name_1]	count=5
namespace	lo menos tantos documentos ||| solrquery	count=1
arg_pair	añade un ||| resource $p	count=1
return	el hash ||| string	count=1
arg_pair	coloca un hipervínculo ||| float $lly	count=1
return	define el ||| bool	count=1
arg_pair	de una ||| resource $pxdoc	count=1
return	de intermediarios ||| zmqsocket	count=1
function_name	el objeto ||| get active object	count=1
return	de datos en el ||| bool	count=1
return	renderización ||| int	count=1
function_name	devuelve el tamaño ||| get compressed size	count=1
function_name	del prefijo ||| prefix	count=1
arg_pair	parámetro old ||| string $key int $old	count=1
arg_pair	dado por value ||| string $key string $value	count=1
function_name	la etiqueta id3v1 ||| get id3v1 tag	count=2
arg_pair	una implementación ||| string $offset	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=4
arg_pair	de un ||| resource $statement mixed $field	count=1
function_name	probabilística de ||| gmp prob	count=1
function_name	consulta coincide con este ||| highlight require	count=1
namespace	cambia el directorio virtual ||| function	count=1
function_name	de la base ||| dba	count=1
function_name	de mensajes md5 de ||| md5 file	count=1
function_name	este ||| frequency	count=1
function_name	constante definida ||| constant	count=1
function_name	número es primo ||| prob	count=1
function_name	devuelve el último error ||| broker get	count=1
arg_pair	el identificador de ||| resource $link_identifier	count=1
function_name	lote de objetos de ||| batch	count=2
arg_pair	objeto sdo_das_xml_document en un ||| sdo_xmldocument $xdoc string $xml_file	count=1
function_name	estático ||| static	count=1
function_name	documento html desde ||| save html	count=1
function_name	de color asociada a ||| getcolorcount	count=1
function_name	la frecuencia en ||| doc	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] fill [function_name_2]	count=4
function_name	el nombre de ||| db2 field name	count=1
function_name	en la que las ||| set mlt min doc frequency	count=1
function_name	de resultados completo ||| start	count=1
function_name	codificación utilizada para hacer ||| zlib get coding	count=1
function_name	el estado http de ||| get http status	count=1
function_name	tamaño ||| zip	count=1
function_name	inicialización iv desde ||| iv	count=1
function_name	cada ||| all	count=1
arg_pair	saturación y el ||| float $brightness float $saturation	count=1
function_name	en blanco u otros ||| ltrim	count=1
return	un array asociativo usando ||| array	count=1
function_name	función de error ||| error	count=2
function_name	el id ||| get element by id	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] region [arg_pair_2]	count=2
arg_pair	una y ||| string $new_data2	count=1
function_name	que describe el ||| message	count=1
namespace	reinicializa ||| splfixedarray	count=1
function_name	analizador ccl ||| yaz ccl parse	count=1
arg_pair	el identificador de ||| resource $result_identifier	count=1
function_name	mensaje ||| strerror	count=1
function_name	devolverá ||| source	count=1
function_name	[function_name_1] pausado nominado ||| [function_name_2] [function_name_1]	count=6
function_name	mime kopfzeile en ||| iconv mime encode	count=1
function_name	un mensaje de texto ||| curl	count=1
function_name	por la última operación ||| errno	count=1
arg_pair	píxel que coincida ||| mixed $target mixed $fill	count=1
function_name	cubrid_lob2_seek64() ||| lob2 seek64	count=2
arg_pair	columna ||| mixed $column	count=1
arg_pair	una estructura de ||| int $num_data	count=1
function_name	[function_name_1] de campos ||| [function_name_2] [function_name_1]	count=10
function_name	multi-dimensional ||| all	count=1
return	el ||| number	count=3
function_name	puedan ||| add kernel	count=2
function_name	obtiene información sobre la ||| curl	count=1
function_name	nombre de ||| by name	count=3
function_name	llamarla varias ||| data source	count=1
namespace	al objeto alnzado ||| throwable	count=1
arg_pair	de forma parecida a ||| string $username	count=1
function_name	obtiene ||| info get	count=1
function_name	del apuntador de archivo ||| all	count=1
function_name	[function_name] error_code ||| [function_name]	count=2
namespace	[namespace] tipo ||| [namespace]	count=1
function_name	otros caracteres del ||| ltrim	count=1
return	usando la ||| bool	count=1
function_name	épocas de ||| epochs	count=2
function_name	número de reintentos ||| deadlock retry count	count=1
function_name	encabezados ||| headers	count=4
function_name	devuelve información sobre ||| cal info	count=1
function_name	obtiene el valor por ||| get	count=1
function_name	envía ||| gupnp service proxy send	count=1
function_name	datos sqlt sin tratar ||| raw	count=1
function_name	eventos generados por ||| event	count=1
function_name	guid binario ||| mssql guid	count=1
function_name	guardará los pares de ||| pspell config save repl	count=1
function_name	ssl para las ||| set sslchecks	count=1
arg_pair	de pattern ||| mixed $pattern	count=1
function_name	de color dada ||| color content	count=1
function_name	directorio de ldap ||| ldap add	count=1
arg_pair	el parámetro length ||| int $length	count=1
function_name	defina sobre las ||| construct	count=1
function_name	sistema de ||| pdf	count=1
namespace	color especificado ||| gmagick	count=1
function_name	lo escribe al gestor ||| write function	count=1
function_name	de entrenamiento desde ||| train from callback	count=2
arg_pair	key corresponda a un ||| string $key	count=1
function_name	[function_name] debe terminar ||| [function_name]	count=1
function_name	[function_name_1] preparada ||| [function_name_2] [function_name_1]	count=1
function_name	obtiene una lista ||| openssl get	count=1
function_name	el tamaño actual ||| zip	count=1
function_name	http en ||| nsapi request	count=1
function_name	definidos por el ||| remap	count=1
function_name	esta función [function_name] ||| [function_name] elements by tag	count=6
return	la época ||| int	count=1
namespace	parámetros a ||| function	count=1
arg_pair	el oid dado ||| string $oid	count=1
namespace	[namespace] el que ||| [namespace]	count=6
function_name	se usa [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	añade un elemento ||| add	count=1
function_name	crea ||| create function	count=1
return	en el final de ||| bool	count=1
function_name	la frecuencia en la ||| set mlt min doc frequency	count=1
function_name	ciclo de ||| eio nop	count=1
namespace	-- zguide ||| zmqdevice	count=1
function_name	[function_name_1] modo especificado ||| [function_name_1] block algorithm [function_name_2]	count=3
namespace	de entrada dada por ||| function	count=1
namespace	para ejecutar yaf_application ||| yaf_application	count=1
function_name	el valor del pundo ||| chr	count=1
function_name	calcula ||| trader	count=1
arg_pair	un ||| string $dest	count=1
namespace	del el [namespace] ||| [namespace]	count=1
function_name	que las palabras ||| set mlt min	count=1
arg_pair	cualesquiera bytes ||| resource $handle int $length	count=1
function_name	clave dada por ||| key	count=1
namespace	número de filas ||| solrquery	count=1
return	devuelve un entero ||| int	count=1
function_name	[function_name_1] [function_name_2] dado ||| function string [function_name_2] [function_name_1] resource $fdf_document string $fieldname	count=8
arg_pair	str con todos ||| string $str	count=2
function	[function_name_1] relation al ||| [function_name_1] [arg_pair_2]	count=1
function_name	la línea de base ||| get	count=1
arg_pair	evento ||| mixed $fd	count=1
function	[function_name_1] una ||| [function_name_1] outline [arg_pair_2]	count=1
function_name	[function_name_1] [function_name_2] abrir un diccionario ||| function int [function_name_2] [function_name_1] string $language string $spelling	count=1
namespace	hacer de intermediarios de ||| zmqdevice	count=1
function_name	[function_name] ruta ||| [function_name]	count=2
namespace	[namespace] < !--#include ||| [namespace]	count=1
function_name	[function_name_1] del servidor ||| [function_name_1] [function_name_2]	count=1
function_name	un recurso ||| resource	count=2
arg_pair	del resultado ||| resource $result	count=2
function_name	de proceso del ||| setproctitle	count=1
return	invertidas antes ||| string	count=1
function_name	en tokens php usando ||| token get all	count=1
function_name	colores de primer ||| color set	count=1
function_name	asociativo que contiene ||| assoc	count=1
namespace	se encuentra disponible ||| function	count=5
function_name	el servidor postgresql ||| pg	count=1
function_name	vincular el ||| bind array by name	count=1
function_name	si un número ||| gmp prob	count=1
function_name	para los eventos especificados ||| set event handler	count=1
function_name	servidor postgresql después de ||| pg	count=1
function_name	error ||| strerror	count=1
arg_pair	a x ||| float $x float $y	count=1
namespace	de un ||| serializable	count=1
function_name	a minúscula ||| strtolower	count=1
function_name	propietario del fichero ||| fchown	count=1
arg_pair	peticiones en un grupo ||| resource $grp int $limit	count=1
function_name	última tupla de ||| dbplus last	count=1
return	objeto throwable ||| throwable	count=1
namespace	mismo que ||| function	count=1
function_name	una equivalencia ||| variant eqv	count=1
function_name	de resultados como ||| fetch	count=1
function_name	csr certificate signing request ||| openssl csr	count=1
function_name	establece una [function_name_2] ||| [function_name_1] cache [function_name_2]	count=3
function_name	previamente añadido al flujo ||| stream	count=1
function_name	[function_name_1] canal de ||| [function_name_2] [function_name_1]	count=2
function_name	descomprime ||| decompress	count=1
arg_pair	para la conexión ||| resource $link_identifier	count=1
namespace	el espacio ||| domnode	count=1
namespace	como mysql_query() ||| function	count=1
function_name	el número de secuencia ||| imap msgno	count=1
arg_pair	hace que esté disponible ||| resource $stmt int $row	count=1
arg_pair	establece [arg_pair] nombre ||| [arg_pair]	count=1
function_name	la última sentencia ||| last	count=1
function_name	añade un fichero al ||| add	count=1
arg_pair	copia de todos los ||| bool $backup_original_files	count=1
function_name	el último intento de ||| db2 conn error	count=1
function_name	configuración dado ||| ini	count=1
function_name	el error sqlstate de ||| sqlstate	count=1
arg_pair	de dicho ||| integer $type	count=1
function_name	tantos documentos como este ||| set mlt min	count=1
function_name	interno ||| inner	count=4
function_name	recupera información ||| proc	count=1
function_name	menos tantos documentos ||| set mlt min	count=1
namespace	unrar ||| rarexception	count=1
arg_pair	data con la ||| string $data	count=1
function	[function_name_1] arrays ||| [function_name_1] [arg_pair_2]	count=5
function_name	la que las palabras ||| set mlt	count=1
function_name	el cliente de base ||| client	count=1
function_name	un servidor ssh2 ||| ssh2	count=1
function_name	ruta ||| pathname	count=1
arg_pair	la función cubrid_set_query_timeout() se ||| resource $req_identifier	count=1
function_name	descripción ||| cairo ps surface restrict to level	count=1
function	representación json [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	lo menos tantos ||| set mlt min doc frequency	count=1
function_name	descripción de la función ||| cairo format stride for width	count=1
function_name	establece [function_name_2] ||| [function_name_1] max [function_name_2]	count=1
namespace	se buscarán los archivos ||| function	count=1
function_name	de filas interno del ||| seek	count=1
namespace	fichero dado de ||| splfileobject	count=1
function_name	impresión [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	transforma el nodo origen ||| transform	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] text [function_name_2]	count=6
arg_pair	a menudo ||| int $dev int $pri	count=1
function_name	-- ||| construct	count=1
arg_pair	pueda con una ||| string $width string $height	count=1
arg_pair	función usa la ||| gmp $a	count=1
arg_pair	[arg_pair_1] texto ||| [arg_pair_2] [arg_pair_1]	count=1
rest	genera una [function_2] ||| [return_1] [function_2]	count=1
function_name	única función ||| add	count=1
function_name	ejecuta el formulario proporcionado ||| newt run form	count=1
arg_pair	aplica un vector ||| mixed $tint mixed $opacity	count=1
arg_pair	capas de ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	con port para ||| int $port	count=1
function_name	y la desencripta usando ||| openssl decrypt	count=1
function_name	obtiene la ||| fann get	count=2
arg_pair	diferencia entre [arg_pair] ||| [arg_pair]	count=6
namespace	tipo de ||| function	count=1
function_name	los ciclos de basura ||| collect cycles	count=1
return	enero de ||| int	count=1
function_name	devuelve la función ||| fann get	count=2
function_name	trozos remarcados a generar ||| highlight snippets	count=1
function_name	de datos de ingres ||| ingres	count=3
function_name	guardados en el almaceén ||| reset	count=1
return	el ||| solrquery	count=1
function_name	ordenación ||| sort	count=1
function_name	de estilo ||| show	count=1
arg_pair	de espacio ||| string $namespaceuri	count=1
function_name	al semáforo de system ||| sem	count=1
function_name	almacena datos [function_name_2] ||| [function_name_2] from [function_name_1]	count=1
arg_pair	almacenada de una ||| string $filename	count=2
function_name	máximo de ||| max analyzed	count=1
namespace	bloqueado hasta que ||| function	count=1
namespace	devuelve ||| gmagickpixel	count=1
arg_pair	fuentes font devuelto por ||| resource $pdfdoc int $font	count=1
function_name	color dada ||| ncurses color content	count=1
function_name	lo menos tantos documentos ||| mlt min doc frequency	count=1
namespace	permanece bloqueado hasta que ||| function	count=1
function	línea desde [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	de cadena ||| imap append	count=1
function_name	la descripción de la ||| cairo surface mark dirty rectangle	count=1
function_name	asociado al ||| ingres result seek	count=1
namespace	mensaje de ||| function	count=1
arg_pair	entrecomilla el string ||| int $parameter_type	count=1
function_name	añade ||| add from string	count=2
arg_pair	dada por key corresponda ||| string $key	count=1
function_name	de monitorizar ||| cancel monitor	count=1
function_name	[function_name_1] la frecuencia ||| [function_name_1] mlt [function_name_2]	count=1
namespace	en disco o ||| function	count=1
function_name	resultado de previas operaciones ||| ldap count entries	count=1
return	imagen ||| bool	count=1
arg_pair	que ||| int $length	count=2
function_name	tabla en la que ||| table	count=1
function_name	cambiará ||| rrename	count=1
namespace	los archivos phar contienen ||| phar	count=1
function_name	función ps_stringwidth() excepto ||| string geometry	count=1
function_name	[function_name] tal ||| [function_name] database	count=3
function_name	selecciona ||| db query	count=2
function_name	establece ||| set include	count=1
function_name	excepción de ||| using	count=1
function_name	frecuencia en ||| min	count=1
return	asociado con el error ||| string	count=1
function_name	consulta ||| cubrid get query	count=1
function_name	especial indicando ||| using exceptions	count=1
function_name	el argumento es true ||| using	count=1
function_name	el tipo del campo ||| mssql field type	count=1
function_name	datos o información asociada ||| info	count=1
function_name	[function_name_1] si ||| [function_name_1] [function_name_2]	count=1
function_name	de trabajo para ||| job	count=1
function_name	devuelve un array [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	direcciones servicios colas o ||| zmqsocket $frontend	count=1
namespace	column_number ||| sqlite3result	count=2
arg_pair	el búfer ||| resource $stream int $buffer	count=1
function_name	de conexiones ||| connection	count=1
function_name	y las [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	juliana al calendario judío ||| int $juliandaycount bool $hebrew	count=1
namespace	los colores de ||| function	count=1
function_name	color del píxel especificado ||| image pixel color	count=1
arg_pair	dos variantes ||| mixed $left mixed $right	count=1
namespace	/ > o ||| function	count=1
function_name	una columna devuelta de ||| db2	count=1
function_name	buscarán los archivos de ||| dbplus	count=1
function_name	de datos lob de ||| lob read	count=1
function_name	menos ||| mlt min	count=1
return	en ||| int	count=3
function_name	el fichero omitiendo el ||| path	count=1
function_name	la clave /encoding ||| encoding	count=1
return	por ||| string	count=2
function_name	namespace es declarado ||| namespace decl	count=1
function_name	los nombres ||| names	count=1
arg_pair	str en el ||| string $str	count=1
function_name	un documento html ||| html	count=2
function_name	[function_name_1] que hay ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name] una ||| bcompiler [function_name]	count=3
arg_pair	la red ||| int $from_neuron	count=1
function_name	[function_name_1] basado ||| [function_name_2] [function_name_1]	count=2
function_name	calcula el logaritmo natural ||| trader ln	count=1
namespace	[namespace] influencia para ||| [namespace]	count=3
arg_pair	hacer ||| zmqsocket $frontend	count=1
function_name	ps_stringwidth() excepto que ||| geometry	count=1
arg_pair	decir el ||| string $filename	count=1
function_name	usando el certificado y ||| openssl pkcs7 sign	count=1
function_name	descripción de la ||| cairo font face get type	count=1
function_name	id ||| set id	count=2
function_name	sybase_connect() con ||| sybase	count=1
arg_pair	crear una nueva instancia ||| string $progid	count=1
function_name	phar cuando sea ||| phar	count=1
function_name	completa ||| connections	count=1
function_name	devuelve el ||| dict get	count=1
function_name	voltea la ||| imageflip	count=1
namespace	mediante el uso de ||| function	count=1
rest	[return_1] [function_2] ||| [return_1] get [function_2]	count=1
function_name	que ya ha sido ||| add types	count=1
return	actual ||| int	count=3
function_name	establece ||| fdf set opt	count=2
function_name	errores interno o ||| trigger error	count=1
return	[return] las ||| [return]	count=2
function_name	una o ||| function	count=1
arg_pair	usando el método gearmanclient::setstatuscallback() ||| string $context	count=1
function_name	fichero ||| types	count=1
function_name	umbral ||| threshold image	count=2
function	autocommit del [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	datagrama en ||| string $errstr	count=1
namespace	documentos como este ||| solrquery	count=1
arg_pair	una variable al motor ||| string $name mixed $value	count=1
function_name	sistema posix ||| posix	count=1
function_name	máximo de [function_name_2] ||| [function_name_2] [function_name_1]	count=13
function_name	dado y extrae ||| all	count=1
function_name	palabras que ||| mlt min	count=1
arg_pair	una ||| resource $link_identifier	count=1
function_name	[function_name] ocurrió el ||| get [function_name]	count=3
arg_pair	del parámetro data ||| string $data int $length	count=1
namespace	el resultado a el ||| splfileobject	count=1
function_name	cubrid_col_get() ||| col	count=1
arg_pair	[arg_pair_1] la base ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	botón tridimensional simulado ||| int $x	count=1
namespace	establecido a ||| function	count=1
return	a ser usada en ||| bool	count=1
function_name	filas afectadas por ||| affected rows	count=6
namespace	los archivos phar ||| phar	count=1
function_name	medianoche de pascua ||| easter	count=1
function_name	la base de datos ||| fbsql start db	count=1
return	desde la ||| sdo_das_xml_document	count=1
function_name	función analiza una ||| parse	count=1
function_name	como este serán ignoradas ||| min doc	count=1
arg_pair	al dn ||| resource $link_identifier string $dn	count=1
return	funciones declaradas [return] ||| [return]	count=3
function_name	siguiente ||| next result	count=2
namespace	de los ||| function	count=1
function_name	un segundo ||| types	count=1
function_name	de forma parecida a ||| sybase pconnect	count=1
function_name	última operación [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	devuelve el número ||| get number	count=4
function_name	con infomación variable ||| textblock	count=1
function_name	incluir ||| terms include	count=3
function_name	obtiene la actual ||| get current	count=1
function_name	[function_name_1] comenzar ||| [function_name_1] [function_name_2]	count=3
function_name	y devolver un valor ||| using exceptions	count=1
function_name	clases declaradas ||| declared classes	count=2
function_name	las ||| replace callback array	count=1
function_name	una entrada ||| zip entry filesize	count=1
return	el resultado a ||| int	count=1
namespace	das xml ||| sdo_das_xml	count=1
arg_pair	datos emita uno ||| string $event_name2	count=1
function_name	documentos ||| mlt	count=1
function_name	transforma el ||| transform to	count=2
function_name	el modo de escritura ||| mode	count=1
namespace	el usuario ||| arrayiterator	count=2
function_name	[function_name_1] [function_name_2] atributo si se encuentra ||| [function_name_1] [function_name_2] attribute	count=3
return	parecida a ||| resource	count=1
namespace	capas ||| zmqdevice	count=1
function_name	devuelve información sobre el ||| cal info	count=1
function_name	relevancia del término ||| set mlt boost	count=1
function_name	sentencia insert ejecutada correctamente ||| insert	count=1
namespace	nobre del fichero desde ||| throwable	count=1
arg_pair	enviar emails con ||| string $additional_headers	count=1
function_name	función de activación para ||| activation function	count=2
arg_pair	comporta ||| string $charset	count=1
function_name	array actual ||| key	count=1
namespace	servidores de ||| gearmanclient	count=1
function_name	[function_name_1] eventos ||| [function_name_1] [function_name_2]	count=2
arg_pair	key y almacena ||| int $padding	count=1
return	y deletes en el ||| bool	count=1
arg_pair	simulado aclarando ||| int $y	count=1
function_name	utilizar para que la ||| delete multi by	count=1
function_name	estado del modo auto-commit ||| get autocommit	count=1
arg_pair	object splfileobject de ||| string $open_mode bool $use_include_path	count=1
function_name	de archivo dado ||| mailparse	count=1
function_name	los valores usando una ||| uasort	count=1
namespace	del proceso actual ||| function	count=1
namespace	valores por omisión ||| function	count=1
function_name	página sujeta a ||| fit pdi page	count=1
function_name	xml que ya ||| add types	count=1
function_name	la línea para ||| set line	count=1
function_name	de la acción ||| gupnp service action get	count=1
arg_pair	un bloque de ||| resource $pdfdoc	count=1
return	archivo dado ||| array	count=1
function_name	devuelve el valor ||| value	count=1
return	almacena el resultado en ||| bool	count=3
namespace	de imagen que ||| function	count=6
function_name	complemento apuntada ||| mysqlnd	count=1
function_name	ser ordenados por ||| sort	count=2
function	campo [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=1
namespace	código especificado ||| intlchar	count=1
function_name	[function_name_1] clase ||| [function_name_2] [function_name_1]	count=7
arg_pair	pueden hacer ||| zmqsocket $frontend	count=1
function_name	[function_name_1] épocas que ||| [function_name_1] out [function_name_2]	count=3
function_name	la versión de unicode ||| unicode version	count=1
return	las palabras que ||| solrquery	count=1
function_name	libera ||| base free	count=1
return	o más opciones ||| bool	count=1
arg_pair	las imágenes usando un ||| int $width	count=1
arg_pair	de salto de ||| bool $cut	count=1
namespace	defina ||| zmqdevice	count=1
function_name	a una ||| add kernel	count=1
function_name	función cubrid_lob2_seek64() se usa ||| cubrid lob2 seek64	count=1
arg_pair	limpia la ||| int $caches	count=1
function_name	la que ||| set mlt	count=1
namespace	soportados por esta extensión ||| function	count=1
function_name	array de oracle ||| oci	count=1
arg_pair	las restricciones de campos ||| int $facetsort string $field_override	count=1
return	la ||| bool	count=12
namespace	un objeto grande ||| oci-lob	count=3
function_name	devuelve la [function_name_2] ||| [function_name_1] train [function_name_2]	count=1
function_name	de línea ||| max line	count=1
function_name	establece ||| mysql set	count=1
function_name	los datos: únicamente ||| drain	count=1
function_name	función a llamar ||| callback	count=1
function_name	se usa para ||| cubrid	count=3
namespace	un trabajo y ||| gearmanworker	count=1
function_name	las ||| construct	count=1
function_name	información sobre un proceso ||| get status	count=1
function_name	interfaz a gettimeofday ||| gettimeofday	count=1
arg_pair	mayoría de las operaciones ||| string $connection_string string $character_set	count=1
function_name	a fgets() excepto que ||| fgetss	count=1
function_name	sets tie ||| set	count=1
function_name	la frecuencia bajo la ||| term frequency	count=1
arg_pair	genera un ||| int $priority	count=1
return	de ssl para las ||| bool	count=1
function_name	von einer mime ||| iconv mime	count=1
return	de mensaje ||| int	count=1
namespace	devuelve una ||| function	count=1
function_name	la imagen ||| compare image	count=1
function_name	clave privada ||| pkey	count=1
namespace	cierra el diccionario ||| function	count=1
function_name	la prueba probabilística de ||| gmp	count=1
namespace	el string codificado por ||| function	count=1
function_name	el tamaño total de ||| total size	count=1
function_name	parche ||| xdiff file	count=1
function_name	[function_name_1] definidos ||| [function_name_1] [function_name_2]	count=4
arg_pair	una ||| string $name mixed $domlist	count=1
function_name	de opendir readdir y ||| readdir	count=1
function_name	lecturas a ||| slave	count=2
namespace	del ||| oci-lob	count=1
function_name	[function_name_1] de mysql ||| [function_name_2] [function_name_1]	count=4
return	lob ||| bool	count=1
arg_pair	prepara a query para ||| string $query resource $link_identifier	count=1
function_name	número ||| imap	count=1
arg_pair	html y ||| int $length	count=1
return	error una excepción ||| void	count=1
function_name	la descripción ||| cairo ps surface get	count=1
function_name	capas ||| sparse array	count=2
function	[function_name_1] un valor ||| [arg_pair_2] [function_name_1]	count=2
function_name	función crea una nueva ||| create processing instruction	count=1
function_name	consulta ejecutada usando ingres_query() ||| ingres	count=1
function_name	que el último ||| error	count=1
function_name	contornea ||| pdf stroke	count=2
function_name	del id ||| get	count=1
function_name	de una ||| zip	count=1
arg_pair	original_name como new_name ||| string $original_name string $new_name	count=1
return	los ||| array	count=19
function_name	la página ||| flatness	count=1
return	la ejecución del ||| void	count=1
function_name	producto de valores de ||| array product	count=1
function_name	clave para ||| key	count=1
function_name	nombre del sistema de ||| eio unlink	count=1
function_name	mediante ||| mailparse uudecode all	count=2
function_name	datos: únicamente los elimina ||| drain	count=1
function_name	disponible ||| memory image	count=2
function_name	conexión con un ||| connect	count=1
function_name	para ordenar ||| array multisort	count=1
namespace	buscarán los ||| function	count=1
function_name	establecidas para los mensajes ||| imap clearflag full	count=1
function_name	el número de ||| sybase num	count=1
function_name	o establecer el id ||| id	count=1
return	crea un efecto ||| void	count=1
function_name	ldap ||| ldap	count=5
return	deletes en ||| bool	count=1
return	indica si la tarea ||| bool	count=1
function_name	obtiene ||| fdf get	count=1
function_name	cadena de instancia ||| string	count=1
function_name	los procedimientos ||| db2 procedures	count=1
function_name	[function_name_1] la columna ||| [function_name_2] [function_name_1]	count=6
arg_pair	la función cubrid_schema() ||| int $schema_type	count=1
function_name	comienzan ||| prefix	count=1
function_name	establece la [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	xml que ya ||| types	count=1
arg_pair	fieldname ||| string $fieldname	count=1
function_name	obtiene el tiempo de ||| gupnp context get	count=1
arg_pair	data ||| string $data int $offset	count=1
function	[function_name_1] algoritmo especificado ||| [function_name_1] [arg_pair_2]	count=1
function_name	entrenamiento continuar sin ||| fann get cascade output	count=1
return	el valor de ||| void	count=1
function_name	el número de campos ||| mysqli num fields	count=1
arg_pair	agujas del reloj ||| float $beta	count=1
function_name	[function_name] bid ||| ifx update [function_name]	count=3
arg_pair	el domain por ||| string $domain	count=1
function_name	si ||| prob prime	count=2
arg_pair	nueva copia de ||| bool $backup_original_files	count=1
function_name	patrones de ||| fann length	count=1
function_name	retorna el tipo de ||| type	count=1
namespace	claves ||| gmagick	count=1
namespace	en por lo ||| solrquery	count=1
function_name	iterador [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	devuelve la imagen de ||| compare image channels	count=1
function_name	el espacio de nombres ||| is default namespace	count=1
function_name	restaura la configuración de ||| config	count=1
function_name	[function_name_1] último ||| [function_name_1] [function_name_2]	count=1
function_name	de mensajes md5 ||| md5	count=1
function_name	eliminar drop ||| fbsql drop	count=1
arg_pair	nombres de las ||| string $class_name	count=1
function_name	en la ||| mlt min doc frequency	count=1
function_name	instancia de ||| get	count=1
arg_pair	forma parecida a sybase_connect() ||| string $charset	count=1
arg_pair	crea una nueva copia ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	strftime() excepto que el ||| gmstrftime	count=1
function_name	un mensaje de ||| curl	count=1
arg_pair	de un mapa ||| string $domain	count=1
function_name	función ||| add	count=1
arg_pair	para el intérprete ||| callable $handler	count=1
function_name	el tamaño de ||| cubrid lob2 size	count=1
arg_pair	de contexto log_cmd_update ||| array $protocoloptions	count=1
namespace	nodo ||| spldoublylinkedlist	count=2
arg_pair	una imagen en ||| gmagick $source	count=1
arg_pair	la propiedad hwnd ||| int $window_handle	count=1
function_name	busca el ámbito del ||| lookup	count=1
function_name	un string utilizando ||| crypt	count=1
arg_pair	mezcla ||| mixed $colorize mixed $opacity	count=1
function_name	rellena y contornea el ||| pdf fill stroke	count=1
function_name	bosquejo de un lapiz ||| sketch	count=1
arg_pair	función ||| float $number	count=1
function_name	para remarcar términos de ||| set	count=1
function_name	seridor asociado con el ||| msql select db	count=1
arg_pair	de direcciones servicios colas ||| zmqsocket $backend	count=1
function_name	traducir caracteres iso-8859 ||| ldap 8859 to	count=1
function_name	el siguiente entero menor ||| floor	count=1
return	la ||| imagick	count=1
arg_pair	número de secuencia de ||| resource $imap_stream	count=1
function_name	se encuentra ||| ps	count=1
arg_pair	por fd al argumento ||| mixed $fd	count=1
function_name	indicando error cuando ||| using	count=1
function_name	el algoritmo especificado si ||| supported	count=1
arg_pair	un archivo ||| string $filename string $mode	count=1
function_name	analiza una ||| parse	count=1
arg_pair	una ||| string $filename int $version	count=1
function_name	pdf usando el nombre ||| pdf	count=1
function_name	para incrementar ||| set	count=1
function_name	función crea ||| create	count=4
function_name	[function_name_1] píxel especificado ||| [function_name_2] [function_name_1]	count=4
namespace	especificada por ||| function	count=1
function	imagen [arg_pair_2] ||| [function_name_1] int $cols [arg_pair_2]	count=1
function_name	cuenta el número ||| count	count=2
function_name	el número de épocas ||| epochs	count=3
arg_pair	en bbcode_container ||| resource $bbcode_container	count=1
namespace	la posición actual ||| iterator	count=1
arg_pair	server_key se ||| string $server_key	count=5
function_name	[function_name_1] [function_name_2] ||| [function_name_1] mlt min [function_name_2]	count=1
return	cadena que especifica la ||| string	count=1
arg_pair	un array manteniendo ||| array $array	count=1
return	lo escribe en el ||| bool	count=1
return	basado en el ||| bool	count=1
function_name	devuelve el número de ||| num fields	count=1
function_name	estado ||| add task status	count=2
arg_pair	valor específico ||| int $type mixed $value	count=1
function_name	descripción de ||| cairo pattern get rgba	count=1
function	inverso [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de unión para ||| set line join	count=1
return	los archivos de ||| string	count=1
arg_pair	data y ||| string $mode	count=1
function_name	[function_name_1] etiqueta id3 ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] la línea ||| [function_name_1] [function_name_2]	count=1
function_name	el objeto respuesta actual ||| get response	count=1
function_name	tupla ||| dbplus	count=1
return	en un estado ||| bool	count=1
function_name	el coseno ||| trader cos	count=1
function_name	lo ||| doc frequency	count=2
function_name	de activación del array ||| fann get cascade activation	count=2
function_name	la que ||| doc	count=1
function_name	el nodo es ||| is	count=1
namespace	que describe ||| function	count=1
arg_pair	del tipo format ||| int $width	count=1
arg_pair	variante para ||| variant $variant	count=1
function_name	[function_name_1] la lista ||| [function_name_1] server [function_name_2]	count=1
function_name	de línea [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	se comporta ||| string $password string $charset	count=1
function_name	si el argumento ||| exceptions	count=1
function_name	menos tantos documentos ||| mlt min	count=1
function_name	[function_name_1] color ||| [function_name_1] stroking [function_name_2]	count=1
function_name	añadido al flujo con ||| stream	count=1
arg_pair	la función va aquí ||| cairogradientpattern $pattern int $index	count=1
arg_pair	watcher evperiodic y ||| int $signum callable $callback	count=1
function_name	abierto mediante ||| status	count=1
function_name	identifican de ||| odbc specialcolumns	count=1
return	los niveles de una ||| mixed	count=1
function_name	obtiene el siguiente resultado ||| fetch	count=1
function_name	la descripción de la ||| cairo pdf surface create	count=1
function_name	geoip_country_code_by_name() ||| country code	count=1
arg_pair	la imgaen ||| int $ignore_transparent	count=1
arg_pair	por data mediante el ||| string $data	count=1
function_name	el nombre ||| fieldname	count=1
arg_pair	haya ejecutado ||| int $field_number	count=1
arg_pair	plaintext con las llaves ||| resource $identifier string $plaintext	count=1
arg_pair	intenta eliminar ||| resource $handle	count=1
function	el tamaño [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	algoritmo especificado ||| string $lib_dir	count=1
function_name	un error una excepción ||| set using	count=1
function_name	devuelve la representación ||| to	count=1
arg_pair	un valor ||| resource $p	count=1
namespace	estado de ficheros que ||| function	count=1
function_name	todas las constantes definidas ||| defined constants	count=1
function_name	lista personal de palabras ||| pspell config personal	count=1
function_name	dibujo ||| move to	count=1
function_name	[function_name_1] pendiente ||| [function_name_2] [function_name_1]	count=1
function_name	de la frase ||| phrase	count=1
function_name	con ||| sybase	count=1
arg_pair	la base ||| string $database	count=1
function_name	utf-8 al formato utf-16 ||| pdf utf8 to utf16	count=1
function_name	suma de verificación crc32() ||| crc32	count=1
return	basados [return] ||| [return]	count=3
namespace	época unix ||| function	count=1
arg_pair	contorno acutales ||| float $ex float $ey	count=1
function_name	es [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	una matriz a ||| resource $p float $a	count=1
function_name	a sybase_connect() con ||| sybase pconnect	count=1
arg_pair	una ||| string $key mixed $var	count=2
arg_pair	simulado ||| int $y	count=1
function_name	[function_name_1] mínima a ||| [function_name_2] [function_name_1]	count=5
function_name	salida ||| output	count=4
function_name	secuencia ||| imap	count=1
function_name	este para que ambos ||| add	count=1
function_name	debajo de la ||| ps continue	count=1
namespace	del cursor: si todavía ||| mongocursor	count=1
arg_pair	por el oid dado ||| resource $conn_identifier string $oid	count=1
function_name	y realiza ||| parse	count=1
function_name	filas interno ||| seek	count=2
function_name	y sólo si el ||| using	count=1
function_name	los datos del ||| all	count=1
function_name	crea un objeto ||| create	count=4
arg_pair	la aguja needle ||| mixed $needle	count=1
function_name	[function_name] función va ||| [function_name]	count=2
function_name	máxima sobre la que ||| max	count=1
function_name	objeto ||| construct	count=1
function_name	nueva instancia de ||| new	count=1
function_name	tangente hiperbólica para cada ||| tanh	count=1
function_name	no existen ||| ingres	count=1
function_name	estadísticas de ||| stats	count=2
function_name	actual ||| entry filesize	count=2
arg_pair	dibuja una ||| float $x float $y	count=1
arg_pair	codificación para ||| string $encoding	count=1
function_name	siguiente resultado de la ||| fetch	count=1
arg_pair	criterio y la ||| int $sortdirection	count=2
arg_pair	después de llamarla ||| resource $connection_id	count=1
function_name	pone ||| apc add	count=1
function_name	tipo del [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la escala ||| scale	count=3
function_name	mensaje de texto ||| strerror	count=1
return	la solicitud ||| array	count=1
arg_pair	esta función establece [arg_pair_1] [arg_pair_2] ||| function bool xattr set [arg_pair_2] [arg_pair_1]	count=3
function_name	iterator interno ||| inner iterator	count=1
arg_pair	a una página ||| int $page	count=1
function_name	se ha asignado ||| peak	count=1
function_name	elemento [function_name] como un ||| [function_name]	count=1
function_name	[function_name] en ||| [function_name]	count=3
function	[function_name_1] intérprete ||| [arg_pair_2] [function_name_1]	count=12
function_name	de ||| chr	count=1
function_name	[function_name_1] de etiqueta ||| [function_name_2] [function_name_1]	count=5
arg_pair	trae [arg_pair] ||| [arg_pair]	count=3
function_name	valor especial indicando error ||| using exceptions	count=1
function_name	recupera las rutas registradas ||| get routes	count=1
namespace	extensión reflexionada ||| reflectionextension	count=1
function_name	desde ||| load	count=1
function_name	conectarla de ||| pg ping	count=1
arg_pair	un grupo ||| resource $grp	count=1
arg_pair	es similar a ||| mixed $object	count=1
function	[function_name_1] texto ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=3
namespace	lugar de emitir ||| rarexception	count=1
function_name	wddx ||| wddx	count=1
function_name	[function_name_1] del ||| [function_name_2] error [function_name_1]	count=8
function_name	línea de inicio ||| line	count=1
function_name	de argumentos pasados a ||| args	count=1
arg_pair	un vector de ||| array $input_vector	count=1
arg_pair	formato csv y devuelve ||| string $delimiter string $enclosure	count=1
function_name	de emitir advertencias y ||| using	count=1
function_name	siguiente petición xpath ||| register xpath	count=1
arg_pair	de la función callback ||| mixed $callback	count=1
function_name	de la asignación ||| apc sma	count=1
function_name	calcula el arcocoseno ||| trader acos	count=1
function_name	la imagen de ||| compare image channels	count=1
function	número límite [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	de texto con ||| string $blockname string $text	count=1
function_name	[function_name] asociada con ||| [function_name]	count=3
function_name	de campo ||| mssql field seek	count=1
arg_pair	base de datos emita ||| string $event_name1 string $event_name2	count=1
function_name	método [function_name] ||| [function_name]	count=3
return	emitir advertencias y ||| void	count=1
function_name	iterador que ||| iterator	count=1
function_name	el punto blanco ||| setimagewhitepoint	count=1
function_name	por clave manteniendo la ||| ksort	count=1
function_name	color dada ||| color	count=1
function_name	lista las tablas en ||| list tables	count=1
function_name	ldap devuelta por ldap_search() ||| ldap sort	count=1
namespace	tridimensional simulado aclarando y ||| gmagick	count=1
arg_pair	fallará si key ya ||| mixed $value	count=1
return	datos activa actualmente en ||| bool	count=1
function_name	javascript al ||| set javascript	count=1
arg_pair	una ||| string $encoding bool $embed	count=1
function_name	[function_name_1] resultados como ||| [function_name_1] [function_name_2] object	count=3
function_name	/encoding ||| fdf get encoding	count=2
namespace	un objeto en ||| serializable	count=1
function_name	palabras que ||| min	count=1
function_name	analiza datos get/post/cookie y ||| mb parse	count=1
function_name	en un ||| mailparse uudecode	count=1
function_name	actual ||| current	count=12
function_name	3 partes: el stub ||| footer	count=1
function_name	devuelve la zona horaria ||| geoip time zone by country	count=1
function_name	devuelve el generador ||| get highlight fragmenter	count=1
function_name	del trazo ||| cmykstroke	count=1
namespace	bytes ||| function	count=1
function_name	ya ha sido ||| types	count=1
arg_pair	conexión full-duplex ||| resource $stream int $how	count=1
arg_pair	función callback dependiendo del ||| int $pri callable $callback	count=1
function_name	valor del pundo de ||| chr	count=1
return	en un gestor de ||| bool	count=1
function_name	la palabra para ||| word	count=1
function_name	establece [function_name_2] ||| [function_name_1] sarprop step error [function_name_2]	count=2
arg_pair	establece variables globales ||| string $encoded_string	count=1
function_name	del manejador de declaración ||| decl handler	count=1
function_name	verificación crc32() ||| crc32	count=1
function_name	máxima ||| mlt max	count=1
arg_pair	ereg_replace() excepto que ignora ||| string $pattern string $replacement	count=1
arg_pair	de eventos ||| resource $event_base int $flags	count=1
function_name	una excepción ||| using	count=1
arg_pair	gmt ||| int $is_dst	count=1
function_name	descripción de ||| cairo font options get	count=4
function	de configuración [arg_pair_2] ||| [function_name_1] get all [arg_pair_2]	count=1
function_name	la descripción de ||| cairo scaled font get	count=4
return	puedan aplicarse ||| void	count=1
arg_pair	establece un fichero ||| int $dictionary_link string $file	count=1
arg_pair	datos disponible como un ||| int $offset	count=1
function_name	certificado y su ||| pkcs7 sign	count=1
function_name	obtiene el ||| trader get	count=2
function_name	sistema ||| eio unlink	count=2
function_name	función ||| prob	count=1
function_name	devuelve ||| get mlt	count=1
arg_pair	pequeño que podría ser ||| resource $ann float $rprop_delta_min	count=1
function_name	de palabra máxima sobre ||| max word	count=1
function_name	similar a sybase_fetch_assoc() ||| sybase fetch	count=1
function_name	para insertar un ||| set	count=1
function_name	retorna el nombre de ||| name	count=1
arg_pair	sentencia dada ||| resource $statement	count=1
namespace	fichero ||| sdo_das_xml	count=1
function_name	las tablas de ||| tables	count=1
function_name	superior en el ||| upper	count=1
return	de resultados ||| bool	count=1
function_name	de datos paradox ||| px	count=2
function_name	una única tarea ||| do normal	count=2
function_name	añade una [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un archivo ||| all	count=1
function_name	salida como echo o ||| runkit sandbox output	count=1
arg_pair	valores de array1 ||| array $array1 array $array2	count=1
function_name	milisegundos para el socket. ||| timeout	count=1
function_name	la ||| load string	count=2
return	graphicsmagick ||| string	count=1
function_name	el diccionario ||| closedict	count=1
namespace	a el búfer de ||| splfileobject	count=1
function_name	memcached::touch() ||| touch by	count=1
function_name	y esté ||| floodfill image	count=1
function_name	el logo de php ||| logo	count=1
function_name	de filas interno ||| data seek	count=1
return	basado en ||| string	count=1
namespace	función acepta ||| function	count=1
function_name	imagen ||| montage image	count=2
function	[function_name_1] un ||| [arg_pair_2] [function_name_1]	count=47
function_name	aplicarse a una ||| add kernel	count=1
arg_pair	nombre de relation al ||| resource $relation string $name	count=1
return	como un código ||| string	count=1
arg_pair	ordena números ||| string $search_criteria	count=1
function	[function_name_1] un ||| [function_name_1] fieldgroup [arg_pair_2]	count=1
function_name	manejador ||| handler	count=5
function_name	de activación de candidatas ||| activation	count=1
function_name	de «espacio horizontal» ||| isblank	count=1
return	se comporta ||| resource	count=1
return	hacer de ||| zmqsocket	count=1
function_name	diferencia binaria ||| bdiff	count=1
function_name	parameter ||| set query alt	count=2
function_name	al servidor de oracle ||| oci	count=1
return	del mensaje ||| int	count=1
function_name	la ruta del directorio ||| broker set dict path	count=1
function_name	punto blanco de ||| image white point	count=2
function_name	devuelve el número de ||| stmt param count	count=1
function_name	un servidor ldap ||| ldap	count=1
arg_pair	msglist al ||| string $msglist	count=1
arg_pair	una ||| resource $psdoc float $x	count=1
function_name	proceso abierto mediante ||| proc	count=1
function_name	esta función ||| open memory image	count=1
function_name	si la implementa ||| is subclass of	count=3
function_name	con su elemento documento ||| document	count=1
function_name	grafema de la ||| grapheme stripos	count=1
function_name	candidatas ||| fann get cascade	count=1
namespace	página con información de ||| function	count=1
function_name	sftp desde [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	xml que ||| add types	count=1
function_name	procesa el html contenido ||| load html	count=1
function_name	núcleo («kernel») ||| add kernel	count=1
function_name	limpia ||| clrbit	count=1
function_name	texto en inglés describiendo ||| last error msg	count=1
function_name	primer ||| ldap first	count=1
function_name	el seno hiperbólico para ||| sinh	count=1
function_name	devuelve el código ||| get	count=1
function_name	xa ||| xa	count=1
arg_pair	la representación dom ||| domnode $node	count=1
function_name	campo ||| field	count=16
function_name	ejecución de expresión regular ||| preg	count=1
arg_pair	después de ||| resource $connection_id	count=1
namespace	apache que ||| function	count=1
function_name	el entrenamiento ||| train	count=2
namespace	excepción en formato string ||| exception	count=1
arg_pair	archivo ||| string $filename string $localname	count=1
function_name	abierto mediante el ||| get	count=1
function_name	estableciendo zend.enable_gc a 1 ||| enable	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] textblock [arg_pair_2]	count=5
arg_pair	[arg_pair_1] bcc ||| [arg_pair_1] [arg_pair_2]	count=3
arg_pair	clave /status ||| string $status	count=1
arg_pair	tridimensional simulado aclarando ||| int $x	count=1
arg_pair	de una ||| string $filename int $flags	count=1
arg_pair	de archivo proporcionado ||| resource $p string $filename	count=1
function_name	lee los datos del ||| uudecode all	count=1
function_name	[function_name_1] de cambio ||| [function_name_2] [function_name_1]	count=1
function_name	respuesta sin tratar del ||| raw response	count=1
arg_pair	certificado) basada en la ||| array $configargs array $extraattribs	count=1
function_name	entrenadas las conexiones de ||| get cascade	count=1
function_name	la incorporación de ||| use krfonts	count=1
function_name	del campo ||| oci field	count=2
function_name	la lista de parámetros ||| memory	count=1
function_name	obtiene el nombre ||| get basename	count=1
arg_pair	en una y ||| string $new_data2	count=1
arg_pair	el calendario calendar ||| int $month	count=1
arg_pair	memcache::connect() ||| int $port	count=1
function_name	envía una excepción ||| exception	count=1
function_name	descripción de la ||| cairo pattern get radial	count=1
function_name	por lo ||| frequency	count=1
namespace	de retorno ||| gearmanworker	count=1
function_name	el tamaño ||| ftp size	count=1
arg_pair	el de ||| float $disp_time	count=1
arg_pair	estilo ||| int $type	count=1
arg_pair	dn ||| resource $link_identifier string $dn	count=2
function_name	un archivo temporal ||| uudecode	count=1
function_name	socket en ||| socket	count=1
namespace	los valores usando ||| arrayiterator	count=1
function_name	valor ||| using exceptions	count=2
function_name	de control de la ||| gupnp control point	count=1
function_name	una búsqueda [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	esté en ||| bool	count=1
arg_pair	el código de ||| resource $action int $error_code	count=1
function_name	más opciones ||| set option	count=1
function_name	[function_name_1] cambio ||| [function_name_2] [function_name_1]	count=1
function_name	del tiempo de espera ||| timeout	count=1
return	al final del ||| int	count=1
namespace	botón tridimensional ||| gmagick	count=1
arg_pair	en un vector de ||| resource $ann array $input_vector	count=1
arg_pair	que lee ||| int $length	count=1
function_name	añade ||| curl multi add	count=1
function_name	palabras que no ||| frequency	count=1
function_name	un ||| add types	count=4
return	un das ||| void	count=1
arg_pair	para la mayoría ||| string $character_set	count=1
function_name	el objeto ||| get	count=1
namespace	conjunto y devuelve si ||| quickhashintset	count=1
function_name	el producto de valores ||| array product	count=1
return	los valores usando ||| void	count=1
function_name	proceso ||| setproctitle	count=2
function_name	propio procesado ||| profiling	count=1
function_name	imprime ||| pdf show xy	count=1
function_name	compartido y libera ||| share	count=1
namespace	string del objeto reflectionclass ||| reflectionclass	count=1
function_name	prioridad ||| base priority init	count=2
arg_pair	abstracción ||| zmqsocket $backend	count=1
return	actual de ||| int	count=1
arg_pair	cuya densidad [arg_pair] ||| [arg_pair]	count=2
function_name	tiene conexiones de atajo ||| shortcut array	count=1
function_name	mínima del servidor ||| sybase min server	count=3
function_name	devuelve [function_name] ||| get persistent [function_name]	count=1
function_name	dice [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	plural de gettext() ||| string $msgid1 string $msgid2	count=1
arg_pair	idéntica a ereg_replace() ||| string $replacement	count=1
function_name	monitorizar un ||| fam cancel monitor	count=1
return	método se ||| mongocursor	count=1
return	definido en fdf_save_file() ||| bool	count=1
arg_pair	archivo dado [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	excepto [function_name] contenidos ||| [function_name]	count=1
function_name	libera toda la ||| free	count=1
namespace	indica ||| oci-lob	count=1
function_name	código y pruebas ||| mysqli report	count=1
function	[function_name_1] el intérprete ||| [function_name_1] notation decl handler [arg_pair_2]	count=1
return	entrada/salida ||| int	count=1
function_name	libxml ||| libxml	count=2
return	esquema definido [return] ||| [return]	count=3
function_name	dirección ipv4 del ||| gethostbyname	count=1
namespace	la memoria asociada a ||| function	count=1
function_name	obtiene una [function_name_2] ||| [function_name_1] md [function_name_2]	count=1
function_name	[function_name_1] épocas ||| [function_name_1] candidate stagnation [function_name_2]	count=3
namespace	en un archivo temporal ||| function	count=1
function_name	el control [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	devuelve [function_name_2] ||| [function_name_1] last response [function_name_2]	count=1
arg_pair	un índice de ||| int $index imagickpixel $color	count=1
arg_pair	thickness ||| resource $image int $thickness	count=1
return	des de ||| string	count=1
function	[function_name_1] un ||| [function_name_1] [arg_pair_2]	count=22
arg_pair	con dos diferencias: ||| string $username	count=1
namespace	mueve la posición actual ||| harupage	count=1
function_name	plural ||| ngettext	count=1
arg_pair	el uri que contiene ||| string $uri string $encoding	count=1
function_name	de intermediarios ||| construct	count=1
function_name	establecer el valor actual ||| set value	count=1
return	actuales ||| resource	count=1
function_name	eliminar drop por ||| fbsql drop	count=1
namespace	excepción ||| rarexception	count=1
namespace	sólo si el ||| rarexception	count=1
function_name	corto para ||| get frame short	count=1
function_name	[function_name_1] un objeto ||| [function_name_2] [function_name_1]	count=2
arg_pair	offset a la ||| string $offset	count=1
function_name	letra ||| imagepsencodefont	count=1
namespace	usadas por intérpretes de ||| function	count=1
namespace	comprueba si la ||| solrdocument	count=1
function_name	del resultado frontbase asociado ||| fbsql	count=1
function_name	la ||| ngettext	count=1
function_name	cursores de seguimiento ||| tailable	count=1
function_name	la respuesta sin tratar ||| get raw response	count=1
return	y el resto ||| array	count=1
function_name	ejecutable ||| executable	count=3
arg_pair	de forma ||| string $password string $charset	count=1
function_name	delimitadores indicados en el ||| explode	count=1
return	posición actual ||| int	count=1
function_name	puede usarse para ordenar ||| multisort	count=1
function_name	lugar ||| using exceptions	count=2
function_name	puede reanudar con pdf_resume_page() ||| pdf suspend	count=1
arg_pair	local en el ||| string $local_file int $mode	count=1
function_name	nombre unicode ||| name	count=1
function_name	vector de inicialización iv ||| iv	count=1
return	cadena de error de ||| string	count=1
namespace	o establece el ||| function	count=1
function_name	para las ||| set sslchecks	count=1
function_name	ruta del directorio para ||| broker set dict path	count=1
function_name	documentos en la base ||| doc count	count=1
function_name	implementar ||| eio poll	count=1
arg_pair	[arg_pair_1] stream ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	medido como el ||| function	count=1
arg_pair	a ||| string $pattern string $string	count=1
function_name	contenido del objeto blob ||| blob	count=1
function_name	modo [function_name_2] ||| [function_name_2] compression [function_name_1]	count=1
function_name	(«kernel») ||| add kernel	count=2
function_name	llega recursivamente al ||| end children	count=1
function_name	la descripción de la ||| cairo ps level to	count=1
arg_pair	como fopen() fread() etc.) ||| string $classname	count=1
function_name	no termscomponent ||| terms	count=1
arg_pair	por expression ||| domnode $contextnode	count=1
function_name	[function_name_1] escribir operaciones ||| [function_name_2] [function_name_1]	count=1
function_name	afila ||| sharpen	count=1
function_name	activa ||| odbc autocommit	count=2
function_name	[function_name_1] unión ||| [function_name_1] [function_name_2]	count=8
arg_pair	o más imágenes ||| imagick $image int $channeltype	count=1
function_name	devuelve ||| memcache get	count=1
function_name	la contraseña ||| password change	count=1
function_name	define el de ||| show	count=1
function_name	texto ||| fgetss	count=1
function_name	cursor en el siguiente ||| next	count=1
namespace	y sólo si ||| rarexception	count=1
function_name	de los campos morelikethis ||| mlt field	count=1
function_name	especificados ||| fetchbody	count=1
arg_pair	identificador de entrada para ||| resource $link_identifier resource $result_identifier	count=1
function_name	rango ||| range	count=2
function_name	y extrae cada ||| mailparse uudecode	count=1
function_name	sets tie breaker parameter ||| set	count=1
function_name	acerca de la fecha ||| date parse from	count=1
return	consista en nombres de ||| bool	count=1
function_name	la descripción ||| ps surface get	count=1
function_name	notifica ||| gupnp service notify	count=1
return	de unix ||| string	count=1
function_name	en un das xml ||| add types	count=1
arg_pair	para un punto de ||| mixed $codepoint	count=1
function_name	el directorio virtual ||| dbplus chdir	count=1
function	salidas para [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	de la función callback ||| string $data	count=1
function_name	pares ||| config save repl	count=2
function_name	sql de informix de ||| ifx fieldproperties	count=1
arg_pair	acepta ||| float $number	count=1
return	de inactividad de entrada/salida ||| int	count=1
function_name	crea una ||| create processing	count=1
arg_pair	notoriamente lenta ||| string $key array $constants	count=1
function_name	menos tantos documentos como ||| set mlt min doc	count=1
return	servicios ||| zmqsocket	count=1
function_name	carp::croak ||| croak	count=1
arg_pair	información sobre los ||| resource $result	count=1
function_name	estancamiento [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	un ||| resource $fdf_document string $field_name	count=1
function_name	activación de candidatas ||| activation	count=1
arg_pair	direcciones ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	usarla como una ||| string $name	count=1
function_name	la codificación ||| encoding	count=2
function_name	mediante ||| status	count=1
function_name	mueve el cursor ||| move to	count=1
function_name	establece la [function_name_2] ||| [function_name_2] [function_name_1]	count=16
arg_pair	[arg_pair_1] es decir ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	clave pública ||| openssl public encrypt	count=1
function_name	defecto de entidades ||| set external entity	count=1
namespace	mongoid::__construct() ||| mongoid	count=1
return	deletes en el ||| bool	count=1
function_name	para que ||| set by	count=1
function_name	la descripción ||| cairo ps	count=1
function_name	colecciones ||| collection info	count=2
return	todos los servidores ||| bool	count=1
function_name	parameter ||| breaker	count=2
function_name	fecha ||| date	count=2
function	configuración [arg_pair_2] ||| [function_name_1] get all [arg_pair_2]	count=1
function	[function_name_1] value ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	un servidor local o ||| string $database_name resource $link_identifier	count=1
arg_pair	base de datos emita ||| string $event_name2	count=1
function_name	descripción de ||| cairo font options get subpixel	count=1
function	[function_name_1] con ||| [function_name_1] scale [arg_pair_2]	count=3
function	los atributos [arg_pair_2] ||| external [function_name_1] name [arg_pair_2]	count=1
namespace	actual ||| function	count=5
namespace	la representación dom ||| domdocument	count=1
function_name	el ||| parameter	count=1
function_name	lugar de ||| set using	count=1
function_name	tendencias de ||| fann get bias array	count=1
function	renombrar [arg_pair_2] ||| [function_name_1] string $oldname [arg_pair_2]	count=1
function_name	función geoip_country_code_by_name() devolverá la ||| country code by name	count=1
arg_pair	cual apunta a un ||| resource $statement	count=1
function_name	[function_name_1] del atributo ||| [function_name_1] [function_name_2]	count=3
namespace	segundo cuando se ||| function	count=1
arg_pair	globales ||| array $result	count=1
function_name	que ya ||| types	count=1
arg_pair	en la clase especificada ||| mixed $class	count=1
return	una o ||| imagick	count=1
function_name	extensiones de ficheros que ||| autoload extensions	count=1
function_name	[function_name] espejo ||| transverse [function_name]	count=2
arg_pair	una ||| string $profile	count=1
arg_pair	fichero o directorio ||| string $path	count=1
function_name	bloques o de ||| block	count=1
function_name	[function_name_1] el tamaño ||| [function_name_1] compressed [function_name_2]	count=1
function	escapa un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	timestamp y ubicación dados ||| int $format	count=2
return	arbitrarios a todos ||| bool	count=1
function_name	e elevado ||| exp	count=1
arg_pair	servidor ftp ||| resource $ftp_stream	count=2
namespace	sujeto a ||| function	count=1
arg_pair	una implementación de la ||| string $offset	count=1
arg_pair	desde la representación ||| string $filename int $options	count=1
function_name	después de aplicar ||| file bdiff	count=1
function_name	escalar [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	el modo de ||| bool $mode	count=1
function_name	región ||| and region	count=2
namespace	el tipo ||| gmagick	count=1
namespace	la información que ||| function	count=1
function_name	actual de modo de ||| mode	count=1
function_name	altura ||| height	count=1
function_name	con el ||| types	count=1
function_name	[function_name_1] un atributo ||| [function_name_1] [function_name_2]	count=1
function_name	de la imagen ||| set interlace	count=1
arg_pair	cuota ||| string $quota_root	count=1
function_name	relaxng del documento ||| relax	count=1
function_name	la descripción de ||| cairo svg version to string	count=1
function_name	el tamaño asociado ||| size	count=1
function_name	mensaje de texto ||| curl	count=1
function_name	array asociativo ||| array	count=1
arg_pair	codificación de caracteres ||| resource $fdf_document string $encoding	count=1
function_name	importa un flujo que ||| import	count=1
function_name	conexión con un servidor ||| connect	count=1
function_name	columna devuelta de ||| db2 fetch	count=1
arg_pair	a crear una nueva ||| string $progid	count=1
function_name	el número de filas ||| num rows	count=4
namespace	cuando se dibuja con ||| function	count=1
function_name	de cargar entidades externas ||| entity	count=1
namespace	[namespace] el ||| [namespace]	count=38
function_name	la última operación ||| errno	count=3
function_name	grosor de las líneas ||| imagesetthickness	count=1
arg_pair	del recurso checkbox ||| resource $checkbox	count=1
arg_pair	0 index en ||| gmp $a int $index	count=1
function_name	de las clases padre ||| class parents	count=1
arg_pair	callback a ser llamado ||| mixed $callback	count=1
function_name	fila de datos ||| fetch row	count=1
function_name	después de ||| data source	count=1
arg_pair	relleno con color en ||| int $color	count=1
arg_pair	uid ||| resource $imap_stream int $uid	count=1
function_name	de replicación y equilibrado ||| ms	count=1
function_name	rutina [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	método se usa para ||| set resource	count=1
namespace	la función usa ||| function	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] red [function_name_2]	count=1
arg_pair	de colores que representan ||| int $numcolors	count=2
arg_pair	a la potencia exp ||| gmp $base gmp $exp	count=1
function_name	la frecuencia en ||| min	count=1
function_name	disponibles en el sistema ||| crypt	count=1
function_name	identificador slob ||| slob	count=1
function_name	[function_name_1] campo en ||| [function_name_1] [function_name_2]	count=1
function_name	codificación de ||| detect encoding	count=1
function_name	[function_name_1] los campos ||| [function_name_1] mlt [function_name_2]	count=1
function_name	del complemento apuntada ||| mysqlnd	count=1
arg_pair	o datagrama al ||| float $timeout	count=1
function_name	tabla en la página ||| pdf fit table	count=1
return	lugar de emitir advertencias ||| void	count=1
function_name	obtener una única fila ||| fetch	count=1
arg_pair	establece el estilo numérico ||| int $first_page int $style	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| object [arg_pair_1] [arg_pair_2]	count=16
function_name	elimina una variable ||| remove var	count=1
function_name	o zip desde ||| build from	count=1
function_name	establece la ||| pdf set	count=1
function_name	lista de los ||| broker list dicts	count=1
function_name	[function_name_1] y equilibrado ||| [function_name_1] [function_name_2]	count=1
arg_pair	puedan ||| string $str	count=1
return	de inactividad ||| int	count=1
function_name	descripción de ||| cairo surface get font options	count=1
function_name	dsn disponibles después de ||| data	count=1
function_name	función crea una nueva ||| create processing	count=1
arg_pair	del ||| resource $handle	count=1
function_name	libera todos los recursos ||| base free	count=1
function_name	descripción ||| cairo svg surface create	count=2
arg_pair	método y una ||| string $method	count=1
namespace	un nuevo contexto ||| zmqcontext	count=1
arg_pair	secuencia del mensaje ||| int $msg_number	count=1
function_name	obtiene el tipo de ||| type	count=1
arg_pair	bits ||| mixed $left mixed $right	count=2
function_name	trazado ||| stroking	count=1
function_name	das xml que ya ||| add	count=1
arg_pair	del parámetro data en ||| string $data	count=1
arg_pair	con un algoritmo ||| int $channel	count=1
arg_pair	un conjunto de ||| resource $ann array $input	count=1
arg_pair	a un fichero ||| float $ury string $filename	count=1
function_name	valores usando ||| uasort	count=1
function_name	por buzon ||| imap createmailbox	count=1
namespace	abstracción que se ||| zmqdevice	count=1
arg_pair	el fichero a ||| string $filename	count=1
function_name	obtiene el ||| get int	count=1
function_name	definida por ||| function	count=1
function_name	sisitema ||| wrapper	count=1
arg_pair	apunta a una página ||| float $ury	count=1
function_name	nombres ||| is	count=1
arg_pair	el archivo ||| array $options	count=2
arg_pair	cubrid_put() se usa ||| mixed $value	count=1
function_name	base de datos dbase ||| dbase	count=1
return	devuelve la ||| string	count=1
function_name	color ||| start color	count=1
arg_pair	relation ||| string $name resource $relation	count=1
namespace	usar yaf_view_simple::assign() ||| yaf_view_simple	count=1
function_name	pregunta [function_name] ||| pdf [function_name]	count=3
function_name	línea de unión para ||| set line join	count=1
function_name	quoted printable creado de ||| quoted printable	count=1
function_name	modo autoconsigna ||| autocommit	count=1
function_name	el nombre [function_name_2] ||| function string [function_name_2] [function_name_1] resource $fdf_document string $fieldname	count=2
function_name	sombreado ||| shfill	count=1
function_name	capa de salida ||| output	count=1
function_name	de ||| interlace scheme	count=2
function_name	acción con ||| proxy action	count=1
arg_pair	reconstruida y las ||| int $metric	count=1
function_name	barras invertidas antes de ||| addcslashes	count=1
function	[function_name_1] estructura ||| [arg_pair_2] [function_name_1]	count=1
function_name	en lugar de ||| set using exceptions	count=1
arg_pair	cursor actual de req_handle ||| resource $req_identifier	count=1
return	renderización de la ||| int	count=1
namespace	algoritmo estándar basado ||| function	count=1
return	el valor predeterminado de ||| void	count=1
function_name	de subject ||| strspn	count=1
function_name	hint ||| hint	count=1
function_name	se buscarán los ||| dbplus chdir	count=1
return	activa en el ||| bool	count=1
return	data proporcionada en el ||| bool	count=1
function_name	borrar un servicio ||| win32 delete	count=1
function_name	proxy ||| set statement proxy	count=1
arg_pair	del ||| resource $handle int $length	count=1
function_name	copyright ||| getcopyright	count=1
function_name	mensaje ||| error	count=1
namespace	abierto mediante ||| function	count=1
function_name	devuelve el último ||| enchant broker get	count=1
arg_pair	el archivo dest ||| string $dest	count=1
function_name	devuelve una ||| to string	count=4
function_name	archivo/usuario de ||| apc bin	count=1
return	archivos de ||| string	count=1
namespace	que es el ||| function	count=1
function_name	frecuencia en la ||| min doc	count=1
function_name	md5 de ||| md5 file	count=1
arg_pair	la codificación de ||| resource $fdf_document string $encoding	count=1
namespace	reglas que ||| function	count=1
namespace	como ||| mongocursor	count=1
return	el elemento ||| mixed	count=1
function_name	exe ||| write exe	count=1
function_name	[function_name_1] varios componentes ||| [function_name_1] [function_name_2]	count=1
namespace	todavía no se ||| mongocursor	count=1
return	errores en ||| bool	count=2
function_name	byte en ||| byte	count=1
function_name	uso ||| proc get status	count=2
namespace	campo del documento cuando ||| solrdocument	count=1
function_name	devuelve el número ||| get start	count=1
function_name	[function_name_1] datos en ||| [function_name_1] [function_name_2]	count=1
function_name	mediante el uso ||| proc get	count=1
function_name	semáforo pueda ||| sem acquire	count=1
arg_pair	se comporta de ||| string $servername string $username	count=1
function_name	comprensión de ||| setswfcompression	count=1
function_name	los callback [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	el atributo ||| move to attribute	count=1
arg_pair	estilo numérico para el ||| int $first_page int $style	count=1
function_name	pares de sustitución ||| config save repl	count=1
function_name	que lee ||| fgetss	count=1
function_name	un warning ||| warning	count=1
function_name	sybase_fetch_assoc() con ||| sybase fetch	count=1
return	host y ||| array	count=1
function_name	almacenados en la ||| get	count=1
arg_pair	[arg_pair] mapa ||| [arg_pair]	count=3
function_name	cierra el diccionario indicado ||| crack closedict	count=1
function_name	crea una miniatura de ||| thumbnail	count=1
function_name	invertidas antes ||| addcslashes	count=1
function_name	clave /encoding ||| fdf get encoding	count=1
rest	string con [function_2] ||| [return_1] [function_2]	count=1
function_name	establece el nonce ||| set nonce	count=3
return	el formulario en ||| bool	count=1
function_name	tipos de parámetros ||| params	count=1
function_name	que identifica el tipo ||| type	count=1
arg_pair	método encuentra ||| bool $is_prefix	count=1
arg_pair	puntero al ||| int $length	count=1
function_name	uso ||| status	count=1
function_name	establece la ||| fdf set	count=1
function_name	[function_name_1] archivo rrd ||| [function_name_2] [function_name_1]	count=2
function_name	los encabezados [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	divide ||| chunk	count=1
function_name	espacio de ||| default	count=1
function_name	se puede escribir ||| writable	count=2
function_name	por el ||| uksort	count=1
function_name	la entrada ||| entry	count=1
function	semáforo pueda [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	el valor del ||| mixed	count=1
function_name	[function_name] de ||| set [function_name]	count=12
function	registro [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	oci_new_descriptor() ||| oci-lob	count=1
arg_pair	específico link_identifier ||| string $database_name resource $link_identifier	count=1
function_name	pulse ||| wait for key	count=1
function_name	de sisitema ||| stream wrapper	count=1
function_name	los colores de ||| color set	count=1
namespace	los datos del modelo ||| svmmodel	count=1
function_name	añade un ||| newt form add	count=1
namespace	parecida a ||| function	count=1
return	estado ||| int	count=1
arg_pair	el sistema ||| resource $p	count=1
namespace	el color de relleno ||| gmagickdraw	count=1
arg_pair	capas de mensaje ||| zmqsocket $backend	count=1
function_name	socket devuelto por ||| socket strerror	count=1
return	utilizando el algoritmo estándar ||| string	count=1
namespace	entrada/salida en ||| gearmanclient	count=1
arg_pair	fila específica de ||| int $row	count=1
function_name	bloque de ||| block code	count=1
function_name	cada byte-value 0..255 ||| chars	count=1
arg_pair	cubrid y guarda ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	paso inicial ||| fann get rprop delta zero	count=1
return	prueba ||| int	count=1
function_name	nombre y ||| name	count=1
function_name	cookie [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
namespace	son similares ||| mongocursor	count=1
function_name	de datos establecida y ||| dba	count=1
function_name	varios componentes al ||| components	count=1
function_name	columna actual ||| current column number	count=1
function_name	de la frase ||| highlight use phrase	count=1
function_name	espera ||| query timeout	count=2
function_name	entrada del ||| entry	count=1
function_name	[function_name_1] nombre ||| [function_name_1] module [function_name_2]	count=1
function_name	alta prioridad [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	a la función mssql_free_statement() ||| mssql free statement	count=1
namespace	máximo de inactividad de ||| gearmanclient	count=1
arg_pair	en bbcode_container creado por ||| resource $bbcode_container	count=1
function_name	intentará [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	de una secuencia ||| string	count=1
function_name	la porción ||| mb strrichr	count=2
return	si todavía no se ||| int	count=1
arg_pair	clave dada por variable_key ||| int $variable_key	count=1
function_name	[function_name] tiene habilitada ||| [function_name]	count=2
function_name	[function_name] usada ||| set [function_name]	count=1
function_name	recibe ||| request	count=1
function_name	el modo especificado es ||| mode	count=1
function_name	sólo si el argumento ||| set using exceptions	count=1
function_name	un ||| ftp alloc	count=1
return	id3v2 ||| ktaglib_id3v2_tag	count=1
namespace	petición get [namespace] ||| [namespace]	count=2
function_name	añade ficheros de ||| add	count=1
function_name	para que ambos puedan ||| add	count=1
function_name	composición asociado a ||| getimagecompose	count=1
function_name	un [function_name] trabajos a ||| add [function_name]	count=1
namespace	petición ||| memcached	count=1
arg_pair	dos o ||| float $number	count=1
function_name	de pendientes ||| steepnesses	count=2
function_name	página [function_name_2] ||| [function_name_2] pdi [function_name_1]	count=2
function_name	base de ||| sybase select db	count=1
function_name	advertencia esta función ||| open memory	count=1
function_name	cierra un gestor de ||| pdf close	count=1
function_name	cunstruye el ||| load string	count=1
namespace	una llamada [namespace] una función ||| [namespace]	count=1
function_name	ca_info establecidos por oauth::setcapath() ||| capath	count=1
function_name	palabras del diccionario dado ||| enchant dict	count=1
function_name	sus madres ||| a	count=1
return	carácter especificado ||| string	count=1
return	establece variables en ||| void	count=1
function_name	dice si ||| mcrypt enc is	count=2
return	comporta ||| resource	count=1
function_name	lo menos tantos ||| doc frequency	count=1
return	ser usada en el ||| bool	count=1
function_name	que las ||| doc	count=1
arg_pair	reconstruida ||| imagick $reference int $metric	count=1
arg_pair	con handle e interpreta ||| resource $handle	count=1
function_name	elimina ||| remove parameter	count=2
namespace	si un ||| function	count=1
function_name	ruta real ||| realpath	count=2
function	antepone [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	del gestionador de errores ||| sqlsrv configure	count=1
function_name	y la devuelve ||| get	count=1
function_name	tantos ||| mlt	count=1
function_name	número es primo ||| prob prime	count=1
function_name	[function_name_1] para remarcar ||| [function_name_2] [function_name_1]	count=2
namespace	archivo dado ||| function	count=1
function_name	posición numérica ||| stripos	count=1
arg_pair	a stream ||| resource $stream	count=2
function	descripción de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	actual a x ||| float $y	count=1
arg_pair	fila ||| int $row_number	count=1
function_name	del espaciado de la ||| space	count=1
return	de llamarla ||| array	count=1
arg_pair	posicionar el ||| int $position	count=1
function_name	el coseno hiperbólico ||| trader cosh	count=1
function_name	sobre un ||| proc get status	count=1
function_name	diff unificado que contiene ||| diff	count=1
function_name	siguiente entero menor ||| floor	count=1
function_name	[function_name_1] multibyte ||| [function_name_2] [function_name_1]	count=6
function_name	país correspondiente a ||| country name by	count=1
return	la posición ||| bool	count=1
function_name	a sybase_fetch_assoc() con ||| sybase	count=1
namespace	la biblioteca sqlite3 ||| sqlite3	count=1
arg_pair	usa la ||| gmp $a	count=1
function_name	un error una excepción ||| set using exceptions	count=1
function_name	establece una función de ||| newt set	count=1
namespace	espacio de nombres especificado ||| domnode	count=1
function_name	lista las tablas ||| msql list tables	count=2
function_name	de inodo para ||| inode	count=1
function_name	la frecuencia ||| term frequency	count=1
function_name	atributo en el espacio ||| attribute	count=2
function_name	obtiene la respuesta original ||| get last response	count=1
arg_pair	de pajar incluyendo la ||| string $haystack string $needle	count=1
function_name	espacio) para la ||| text leading	count=1
arg_pair	botón tridimensional simulado aclarando ||| int $y	count=1
namespace	soapserver entre peticiones ||| soapserver	count=1
function_name	una excepción ||| exception	count=3
arg_pair	de estilo de ||| float $disp_time	count=1
arg_pair	y prefix con ||| string $prefix	count=1
arg_pair	el bit de start ||| gmp $a int $start	count=2
function_name	el factor de decadencia ||| decay	count=1
function_name	[function_name_1] columna ||| [function_name_2] [function_name_1]	count=4
function_name	de errores y alertas ||| errors	count=1
function_name	remueve ||| del	count=1
function_name	a gettimeofday ||| gettimeofday	count=1
function_name	[function_name_1] rango ||| [function_name_1] image channel [function_name_2]	count=1
function_name	de una acción ||| gupnp service action	count=1
function_name	hayan sido completados ||| cubrid unbuffered	count=1
function_name	para cada consulta ||| query	count=1
function_name	la descripción de la ||| cairo pattern set matrix	count=1
function_name	de codificación [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	ingres_fetch_array() con ||| int $result_type	count=1
function_name	para acceder al semáforo ||| sem	count=1
arg_pair	a 0 index en ||| int $index	count=1
return	el array después de ||| void	count=1
function_name	el flujo ||| stream	count=1
function_name	dibuja una elipse en ||| ellipse	count=1
function_name	del codificador ||| get writing	count=1
function_name	al número de campo ||| field	count=1
function_name	el último error ||| last error	count=1
arg_pair	la información dad ||| int $dbase_identifier array $record	count=1
function_name	nombre [function_name_2] ||| elements [function_name_2] [function_name_1]	count=1
function_name	geoip_country_code_by_name() devolverá la abreviación ||| country code	count=1
namespace	o cualquier ||| zmqdevice	count=1
function_name	descripción ||| cairo surface	count=5
arg_pair	las propiedades correspondientes a ||| array $ctorparams int $row	count=1
function_name	una intersección de ||| uintersect	count=1
function_name	si un ||| gmp prob prime	count=1
return	de los perfiles del ||| float	count=1
function_name	un valor especial indicando ||| set	count=1
namespace	actual a el inicio ||| harupage	count=1
arg_pair	obtiene información ||| resource $ch	count=1
return	el número de ||| int	count=3
namespace	cromaticidad como ||| gmagick	count=1
function_name	nodo atributo ||| attribute node ns	count=1
function_name	sincroniza ||| dba sync	count=2
function_name	de prioridad baja en ||| low	count=1
arg_pair	message ||| bool $serialize	count=1
function_name	de la página ||| set slide	count=1
return	una fuente aleatoria ||| string	count=1
arg_pair	criterio y la dirección ||| int $sortorderby	count=2
function_name	cursor ||| cursor	count=2
arg_pair	un archivo de imagen ||| string $filename string $sections	count=1
namespace	un host/puerto o ||| function	count=1
function_name	y sólo ||| using exceptions	count=1
namespace	de la última ||| memcached	count=1
function_name	[function_name_1] de activación ||| [function_name_2] [function_name_1]	count=12
namespace	usando la ||| harupage	count=1
function_name	lo menos tantos documentos ||| set mlt min doc frequency	count=1
namespace	[namespace] un esquema ||| [namespace]	count=2
arg_pair	un efecto ||| int $y	count=1
return	de los caracteres ||| string	count=1
arg_pair	pajar ||| string $haystack	count=3
function_name	el formateador de la ||| formatter	count=1
function_name	palabras que no ||| min doc frequency	count=1
return	transacción en progreso en ||| bool	count=1
arg_pair	capas ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	es similar a ingres_fetch_array() ||| int $result_type	count=1
function_name	documentos en la ||| doc count	count=1
function_name	la raíz cuadrada de ||| sqrtrem	count=1
namespace	los valores ||| arrayiterator	count=1
function_name	unrar encuentre un ||| exceptions	count=1
namespace	de un documento ||| solrdocument	count=1
function	variables get/post/cookie ||| variables string $types	count=1
function_name	el [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=18
function_name	[function_name_1] un entrenamiento ||| [function_name_2] get [function_name_1]	count=2
function	transforma el [arg_pair_2] ||| [function_name_1] uri [arg_pair_2]	count=1
function_name	la ||| getinfo	count=1
return	string y como ||| array	count=1
function_name	reescritura establecidas previamente por ||| reset rewrite	count=1
arg_pair	a sybase_connect() con dos ||| string $servername string $username	count=1
function_name	informix de cada columna ||| ifx fieldproperties	count=1
return	ssl ||| bool	count=1
namespace	obtiene ||| gmagick	count=2
function	[function_name_1] los eventos ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	nueva copia ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	segundo plano ||| background	count=2
arg_pair	función es una versión ||| resource $result	count=1
function_name	el esquema de codificación ||| mb	count=1
namespace	en un das xml ||| sdo_das_xml	count=1
function_name	disponible ||| image	count=1
function_name	de ellos ||| array map	count=1
function_name	reintentos en caso de ||| deadlock retry count	count=1
arg_pair	domain [arg_pair_2] ||| [arg_pair_1] string $msgid1 [arg_pair_2]	count=2
function_name	nombres [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	una ||| resource $image string $filename	count=1
return	en ||| void	count=2
function_name	dsn ||| odbc data	count=1
function_name	de una instrucción ||| next	count=1
function_name	representa sólo texto ||| text	count=1
arg_pair	recursivamente path1 ||| string $path1 int $rev1	count=1
function_name	superficie existente ||| similar	count=1
function_name	función devolverá ||| data source	count=1
function_name	[function_name_1] los iteradores ||| [function_name_2] [function_name_1]	count=1
function_name	función cubrid_drop() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de mensaje para ||| msgno	count=1
function_name	número de grupos ||| groups	count=1
function_name	una llamada a dbx_query() ||| dbx	count=1
function_name	con infomación variable según ||| textblock	count=1
function_name	declaración [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	valor asociado dentro ||| option	count=1
namespace	solicitud dado por ||| function	count=1
function_name	[function_name_1] estadísticas de ||| [function_name_1] client [function_name_2]	count=1
function_name	de argumento) ||| using exceptions	count=1
function_name	dirección ipv4 ||| gethostbyname	count=1
return	eliminar cualesquiera ||| string	count=1
function_name	vincular ||| bind array by	count=1
arg_pair	con imagecolorallocate() ||| resource $image int $color	count=1
function_name	la lista ||| memory image	count=1
arg_pair	valor de una ||| string $name	count=1
namespace	dada por new sólo ||| function	count=1
arg_pair	false si no condigue ||| string $type	count=1
function_name	por ||| create function	count=1
arg_pair	es un algoritmo ||| string $lib_dir	count=1
arg_pair	propiedad hwnd en instancia ||| int $window_handle int $client_area	count=1
function_name	los colores de ||| ncurses color set	count=1
return	devuelve un entero que ||| int	count=1
arg_pair	ocurrencia ||| string $haystack	count=2
function_name	especifica el número ||| set start	count=1
return	recupera información sobre ||| array	count=1
function_name	si el nodo es ||| is	count=1
function_name	de línea actual para ||| get current line number	count=1
arg_pair	cubrid_schema() ||| int $schema_type	count=1
arg_pair	un string a el ||| string $str	count=1
function_name	función devolverá la ||| odbc data	count=1
function_name	de conexión ||| connect	count=2
arg_pair	ancho de ||| float $width	count=1
function_name	consulta de la petición ||| query	count=1
function_name	llamada al método connect ||| connect	count=1
function	nuevo objeto [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	cadena de ||| chr	count=1
function_name	la línea ||| get	count=1
arg_pair	defina sobre ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	bien el conjunto óptimo ||| int $scope int $nullable	count=1
function_name	nombre de sitio web ||| by name	count=1
function_name	el seno para ||| trader asin	count=1
namespace	tie breaker parameter ||| solrdismaxquery	count=1
namespace	del ||| mongocursor	count=1
function_name	obtiene varios ||| get	count=1
arg_pair	enganchar los métodos ||| mysqli $mysqli_connection	count=1
return	obtiene la cadena de ||| string	count=1
function	repositorio [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	registros filas ||| dbase numrecords	count=1
function_name	del resultado de mysql ||| mysql data	count=1
namespace	método de [namespace] ||| [namespace]	count=1
function_name	es ||| gmp	count=1
return	es utilizada para ||| string	count=1
function	método actualiza [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	consulta siguiente ||| next	count=1
function_name	fragmeto ideal [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	xml ||| void	count=1
function_name	[function_name] ejecutará ||| [function_name] submit form	count=2
arg_pair	se ||| string $password	count=1
function_name	una respuesta ||| response	count=1
arg_pair	dicho ||| integer $type	count=1
function_name	obtiene [function_name_2] ||| [function_name_2] [function_name_1]	count=89
function_name	constantes memcached::res_* la cual ||| result code	count=1
function_name	modo de escritura del ||| mode	count=1
function_name	las variables [function_name] actualmente ||| [function_name]	count=1
arg_pair	dos diferencias considerables ||| string $userid	count=1
return	para ||| void	count=2
namespace	el valor actual ||| harupage	count=3
function_name	las ||| fann get cascade	count=1
namespace	primo ||| function	count=1
function_name	cascada ||| fann	count=2
return	función ||| string	count=1
namespace	almacenamiento ||| splobjectstorage	count=7
function_name	[function_name_1] código ||| [function_name_1] [function_name_2]	count=1
function_name	casillas de verificación mediante ||| newt checkbox tree find item	count=1
function_name	el resultado ||| xdiff file rabdiff	count=1
namespace	se dibuja con los ||| function	count=1
function_name	del apuntador de archivo ||| uudecode	count=1
function_name	devuelve el color ||| get	count=1
function_name	columna devuelta ||| db2 fetch	count=1
function_name	no analizadas ||| unparsed	count=1
arg_pair	un objeto de ||| resource $pdfdoc int $shading	count=1
function_name	las palabras que ||| set mlt min	count=1
function_name	disponible la lista de ||| image	count=1
function_name	colores de ||| set	count=1
function_name	web con [function_name] ||| [function_name]	count=2
arg_pair	imagen en ||| gmagick $source int $compose	count=1
function_name	código de error dado ||| strerror	count=1
function_name	número de patrones de ||| length	count=1
function_name	la última operación de ||| errno	count=1
function_name	la descripción ||| color stop rgb	count=1
function_name	[function_name_1] iterador ||| [function_name_2] [function_name_1]	count=20
function_name	que las palabras ||| frequency	count=1
function_name	función reemplaza el ||| replace	count=1
arg_pair	versión plural ||| string $msgid2	count=1
function_name	menos tantos documentos ||| doc frequency	count=1
function_name	el de ||| show	count=1
function_name	curl dado ||| curl	count=1
function_name	es similar a fbsql_fetch_array() ||| fbsql fetch	count=1
return	ordenado basado [return] varios mapas ||| [return]	count=1
arg_pair	punto de inicio ||| float $y	count=1
function	[function_name_1] result set ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	con ||| string $servername string $username	count=1
arg_pair	un documento ||| resource $fdf_document string $url	count=1
return	los caracteres que ||| string	count=1
arg_pair	y php del ||| resource $handle	count=1
arg_pair	función callback por ||| mixed $arg	count=1
function_name	instrucción [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	encuentra disponible la ||| open memory image	count=1
return	método no ||| int	count=1
return	informix asociado con el ||| string	count=1
arg_pair	la versión ||| string $msgid1 string $msgid2	count=1
namespace	un string con barras ||| function	count=1
function_name	del mensaje [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] de archivo ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	hacer de intermediarios ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	de ||| set start	count=2
arg_pair	parámetro data en ||| int $length	count=1
function_name	el substring ||| substr count	count=1
function_name	parámetros ||| memory image	count=2
function_name	establece la zona ||| timezone set	count=1
function_name	de compilación del ||| qc get available	count=1
function_name	otro núcleo («kernel») a ||| add kernel	count=1
function_name	por el usuario para ||| function	count=1
arg_pair	una ||| string $filename int $width	count=1
function_name	para el ||| msgno	count=1
return	errores en la ||| bool	count=2
arg_pair	enviar ||| string $additional_headers	count=1
function_name	varias ||| odbc	count=1
arg_pair	[arg_pair_1] de msql_fetch_row() ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	menos tantos ||| set	count=1
function_name	índice de ||| iterator index	count=1
function_name	definición del disco ||| load from file	count=2
namespace	actual donde se ||| function	count=1
function_name	devuelve un [function_name] ||| ibase [function_name]	count=3
function_name	conexión de flujo ||| stream socket	count=1
namespace	la variable ||| function	count=1
function	devuelve [arg_pair_2] ||| [function_name_1] contents [arg_pair_2]	count=3
function_name	establece algún parámetro ||| set parameter	count=2
function_name	las colecciones ||| collection	count=1
function_name	después de llamarla ||| odbc data source	count=1
arg_pair	columna especificada en ||| resource $stmt mixed $column	count=3
function_name	caracteres ||| addcslashes	count=1
function_name	la cadena de ||| load	count=1
arg_pair	estructura ||| int $num_data int $num_input	count=1
function_name	devuelve la imagen ||| image	count=1
arg_pair	está documentada actualmente solamente ||| string $str	count=1
function_name	las funciones registradas __autoload ||| spl autoload call	count=1
function_name	gestro de ||| used	count=1
function_name	siguiente entero mayor ||| ceil	count=1
function_name	de archivo/usuario de ||| bin	count=1
arg_pair	bordes ||| int $width	count=1
return	define la apariencia de ||| bool	count=1
arg_pair	de la ||| float $disp_time	count=1
arg_pair	una base ||| string $name	count=1
arg_pair	versión ||| string $msgid1 string $msgid2	count=1
arg_pair	directiva whence como ||| int $pri	count=1
function_name	del manejador ||| handler	count=4
return	de proceso del proceso ||| void	count=1
arg_pair	texto text en una ||| string $text	count=1
function_name	actual para el ||| current	count=2
function_name	de entrenamiento de ||| fann	count=1
arg_pair	[arg_pair_1] modo de ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	de forma parecida a ||| pconnect	count=1
arg_pair	de forma ||| string $username	count=1
arg_pair	completa usando sparse_method ||| array $arguments	count=1
function_name	de respuesta [function_name_2] ||| [function_name_2] [function_name_1]	count=14
namespace	a través del ||| function	count=1
function_name	para establecer ||| set	count=3
arg_pair	en el archivo dado ||| string $filename int $flags	count=1
function_name	un [function_name] ||| [function_name]	count=1
arg_pair	enviar emails con el ||| string $message string $additional_headers	count=1
function	la información [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	refiriénsose [namespace] ||| [namespace]	count=1
function_name	funciones de sisitema ||| stream wrapper register	count=1
function_name	color especificado como ||| color value	count=1
arg_pair	needle y ||| mixed $needle	count=1
arg_pair	datos emita ||| string $event_name1	count=1
arg_pair	un nuevo valor ||| int $value	count=1
function_name	sobre un proceso ||| status	count=1
function_name	[function_name] elementos ||| [function_name]	count=1
arg_pair	un efecto ||| int $width	count=1
function_name	de archivo/usuario de ||| apc bin	count=1
function_name	llena un ||| fill	count=1
return	o y ||| bool	count=1
return	a ||| int	count=2
arg_pair	usando un método ||| int $height	count=1
function_name	devuelve la versión ||| version get	count=2
function_name	de curl [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	el código de error ||| string	count=1
arg_pair	ser enviada junto con ||| bool $httponly	count=1
arg_pair	si solrquery::sethighlightalternatefield() se le ||| int $fieldlength string $field_override	count=1
namespace	fichero dado por ||| function	count=1
return	convierte una ||| string	count=1
function_name	de módulos definidos en ||| modules	count=1
namespace	diferencia que ||| function	count=1
return	datos actualmente activa en ||| bool	count=1
arg_pair	para [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	extrae cada archivo codificado ||| array	count=1
function_name	máximo de ||| cascade max	count=1
namespace	y ||| rarexception	count=2
function_name	de entrecomillado ||| quote	count=1
namespace	inicio de un string ||| function	count=1
function_name	prioridad de los ||| base priority	count=1
function_name	sobre un proceso abierto ||| proc	count=1
function_name	identificador del cliente usado ||| client	count=1
function_name	parte de ||| is	count=1
arg_pair	cero en caso de ||| string $zurl mixed $options	count=1
function_name	un ||| fdf set file	count=1
return	del ||| bool	count=3
namespace	error ||| rarexception	count=2
function_name	frontbase asociado al ||| fbsql	count=1
function_name	obtiene el modo de ||| mode	count=1
function_name	la fila recuperada ||| fetch	count=1
function_name	importación ||| gnupg	count=1
return	especificada en ||| bool	count=1
function_name	añade definición ||| add	count=1
function_name	se usa para insertar ||| cubrid set	count=1
arg_pair	método y una clave ||| string $data string $method	count=1
arg_pair	de llamarla varias veces) ||| int $fetch_type	count=1
function_name	de ||| proc	count=1
function_name	de fragmento ideal ||| set highlight regex slop	count=1
arg_pair	un grado ||| array $env array $other_options	count=1
return	xml que ||| void	count=1
return	texto en la ||| bool	count=1
namespace	devuelve la cuenta de ||| gmagickpixel	count=1
arg_pair	función proporcionada por el ||| int $num_output callable $user_function	count=1
function	salidas para [arg_pair_2] ||| [function_name_1] params [arg_pair_2]	count=2
arg_pair	un servidor ||| string $database_name resource $link_identifier	count=1
function	[function_name_1] estructuras de ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
function_name	cada archivo ||| all	count=1
function_name	(«kernel») a este para ||| add kernel	count=1
function_name	elimina ||| delete by	count=1
arg_pair	devuelve un string ||| string $str	count=1
namespace	usando una función definida ||| arrayiterator	count=2
namespace	que están en memoria ||| function	count=1
arg_pair	operaciones delete ||| mongocollection $collection array $write_options	count=1
function_name	usa ||| resource	count=1
arg_pair	solrquery::sethighlightalternatefield() se le ||| string $field_override	count=1
function_name	una [function_name] a una ||| [function_name]	count=1
function_name	comando de ||| tailable	count=1
arg_pair	un documento xml desde ||| string $filename	count=1
namespace	le ha consultado se ||| mongocursor	count=1
namespace	define la forma a ||| harupage	count=1
function_name	emitir advertencias y ||| using	count=1
arg_pair	el objeto gmagickpixel de ||| gmagickpixel $color int $width	count=1
namespace	caracteres ||| function	count=2
function_name	interoperabilidad stubs ||| default stub	count=1
arg_pair	devuelve un ||| resource $psdoc	count=1
function_name	intenta eliminar drop ||| drop	count=1
return	un campo de bits ||| int	count=2
arg_pair	el algoritmo estándar ||| string $str	count=1
arg_pair	el string str dado ||| string $str string $charset	count=1
function_name	código [function_name] ||| fdf [function_name]	count=1
function_name	de conectarla de ||| pg ping	count=1
arg_pair	servidor ftp ||| string $remote_file	count=2
arg_pair	como timestamp ||| int $timestamp int $format	count=2
function_name	signal ||| signal	count=1
function_name	obtiene la altura ||| get height	count=1
arg_pair	número de puerto nombre ||| string $host int $port	count=1
function_name	glifo en ||| ps symbol	count=1
function_name	el nivel mínimo ||| sybase min message	count=1
function_name	información de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	un gestor curl ||| curl	count=1
function_name	del buzón ||| imap	count=1
function_name	registros filas en la ||| dbase numrecords	count=1
function_name	el término ||| terms lower bound	count=1
function_name	un ||| set using	count=2
function_name	serializa ||| serialize	count=1
function_name	computa el inverso del ||| invert	count=1
function	no-bloqueo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	posix [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	log 1 + ||| log1p	count=1
function_name	contexto con la ||| context	count=1
arg_pair	si no condigue el ||| string $type	count=1
arg_pair	con clave y valor ||| string $key string $value	count=1
arg_pair	modo ||| int $mode int $pri	count=1
function_name	simulado aclarando y ||| raiseimage	count=1
arg_pair	obtener la cuota ||| string $quota_root	count=1
namespace	emitir advertencias y devolver ||| rarexception	count=1
function_name	establece la ||| fann set	count=8
arg_pair	excepto que ||| resource $handle	count=1
function_name	devuelve el ||| gettype	count=1
function_name	en la que ||| set mlt min doc frequency	count=1
return	cierra el ||| bool	count=2
arg_pair	con barras ||| string $str	count=1
function_name	obtiene el modo de ||| trader get	count=1
arg_pair	imágenes usando un método ||| int $height	count=1
namespace	cadena de instancia ||| sdo_das_xml	count=1
function_name	la línea de inicio ||| line	count=1
function_name	lista de dsn disponibles ||| data source	count=1
arg_pair	está documentada actualmente solamente ||| resource $agent	count=2
arg_pair	un string ||| string $str	count=3
function_name	el nombre [function_name_2] ||| [function_name_2] cipher [function_name_1]	count=1
function_name	los archivos ||| dbplus	count=1
function_name	incorporación de fuentes coreanas ||| use krfonts	count=1
function_name	en un archivo ||| uudecode all	count=1
function_name	devuelve ||| module get	count=1
return	devuelto por el puntero ||| string	count=1
namespace	o desde que se ||| function	count=1
function_name	número total de bytes ||| total	count=1
function_name	la imagen ||| sparse color image	count=1
return	los bordes de ||| void	count=1
function_name	la descripción ||| cairo ps surface restrict to level	count=1
function_name	el punto [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	veces) ||| resource $connection_id int $fetch_type	count=1
function_name	descripción de la ||| cairo pattern	count=6
arg_pair	con pattern según las ||| int $flags	count=1
return	respuesta al cliente ||| void	count=1
function_name	mueve el ||| move to	count=1
function_name	la descripción de la ||| cairo surface	count=1
function_name	un ||| fetch object	count=1
function_name	adición del ||| imagecolorallocatealpha	count=1
namespace	post o ||| function	count=1
function_name	imagen de similitud tal ||| image	count=1
function_name	de los ciclos de ||| gc collect cycles	count=1
function_name	db2 creada con db2_connect() ||| db2	count=1
function_name	color en ||| color	count=1
arg_pair	obtener la cuota ||| resource $imap_stream string $quota_root	count=1
arg_pair	conjunto óptimo de columnas ||| int $nullable	count=1
function_name	de ||| pdf	count=1
function_name	de una entrada ||| filesize	count=1
function_name	el color ||| background color	count=2
function	[function_name_1] una ||| bool [function_name_1] name [arg_pair_2]	count=2
function_name	seno ||| sin	count=1
arg_pair	objeto gmagickpixel de color ||| gmagickpixel $color int $width	count=1
arg_pair	tridimensional ||| int $x int $y	count=1
function_name	devuelve el tamaño ||| ftp size	count=1
function_name	devuelve la ||| fann get	count=3
function_name	error de paso de ||| error	count=4
arg_pair	el parámetro plaintext con ||| resource $identifier string $plaintext	count=1
return	el puntero interno ||| bool	count=1
arg_pair	del ||| int $width int $height	count=1
function_name	el ||| status	count=1
function_name	frase ||| phrase	count=3
function_name	clase solicitada clase glo ||| cubrid new glo	count=1
function_name	lista de parámetros ||| memory image	count=1
arg_pair	de una tabla ||| string $schema string $table-name	count=1
function_name	el logaritmo natural ||| ln	count=1
function_name	pausa ||| win32 pause service	count=2
function_name	clase simplexml y lo ||| simplexml	count=1
function_name	superior en el conjunto ||| upper	count=1
function_name	pares de sustitución ||| save repl	count=1
function_name	define la apariencia ||| set	count=1
function_name	petción de recodificación request ||| recode	count=1
arg_pair	dada [arg_pair] ||| [arg_pair]	count=1
function_name	en la que las ||| doc	count=1
function_name	modo ||| mode	count=9
arg_pair	[arg_pair_1] eio_* ||| [arg_pair_2] [arg_pair_1]	count=8
arg_pair	es una función de ||| string $column_key int $flags	count=1
function_name	blob de la ||| blob	count=1
function_name	frecuencia ||| frequency	count=3
arg_pair	layer contando la ||| int $layer	count=3
function_name	opción especificada ||| ldap get option	count=1
arg_pair	de intermediarios de direcciones ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	desviaciones [function_name] desde ||| [function_name] gen	count=1
function_name	en el siguiente ||| next	count=1
function_name	tiempo de espera de ||| set query timeout	count=1
return	esta ||| array	count=1
function_name	devuelve [function_name_2] ||| mongodate datetime [function_name_2] [function_name_1]	count=2
function_name	entrenamiento ||| train stop function	count=2
function_name	región de la ||| region	count=1
function_name	que necesitan ser ||| addslashes	count=1
arg_pair	de una línea discontinua ||| resource $psdoc float $on	count=1
arg_pair	dibuja la ||| int $x int $y	count=2
function_name	la tarea ||| is	count=1
function_name	de cabecera ||| get request header	count=1
namespace	el puntero interno ||| oci-lob	count=1
return	número de segundos desde ||| int	count=1
arg_pair	compara value1 con ||| mixed $value1	count=1
function_name	salidas para ||| fann set scaling	count=1
function_name	si una excepción no ||| exception	count=1
function_name	de bytes pseudo-aleatoria ||| openssl random pseudo bytes	count=1
namespace	cuenta de ||| gmagickpixel	count=1
arg_pair	verifica ||| string $signature string $plaintext	count=1
function_name	línea de inicio ||| start line	count=1
function_name	[function_name] está establecido ||| get [function_name]	count=3
return	cual se convierte en ||| bool	count=1
function_name	al entrenamiento ||| fann get	count=1
function_name	fdf de ||| fdf	count=1
function_name	de usuario real ||| seteuid	count=1
function_name	descripción de ||| cairo surface get	count=3
arg_pair	una colección de documentos ||| array $docs	count=1
arg_pair	de contexto log_cmd_update ||| array $updateoptions array $protocoloptions	count=1
return	solicitud actual ||| array	count=1
function_name	de error dado ||| curl	count=1
function_name	es primo ||| prob	count=1
namespace	carácter «en blanco» ||| intlchar	count=1
function_name	[function_name_1] callback ||| [function_name_1] [function_name_2]	count=1
function_name	los colores ||| set	count=1
return	en los ||| bool	count=1
function	[function_name_1] codificación ||| [function_name_1] [arg_pair_2]	count=1
function_name	nivel mínimo ||| sybase min	count=1
function_name	a la de memcached::touch() ||| touch	count=1
arg_pair	de la función callback ||| callable $callback string $data	count=1
function_name	todas ||| nsapi	count=1
function_name	captura una fila en ||| fetch object	count=1
return	información sobre ||| mixed	count=1
function_name	una [function_name] al ||| set submit form [function_name]	count=1
return	consultado se ||| int	count=1
function_name	cambiará ||| dbplus rrename	count=2
arg_pair	una respuesta ||| string $content string $key	count=1
function_name	método no afecta ||| count	count=1
function_name	establece ||| set mlt	count=3
arg_pair	el valor de un ||| string $value int $flags	count=1
namespace	líneas se ||| function	count=1
arg_pair	varias veces) ||| resource $connection_id int $fetch_type	count=1
function_name	nombre corto ||| short name	count=1
rest	[return_1] [function_2] ||| [return_1] ibase field [function_2]	count=3
function	[function_name_1] dado por ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	ésta es una ||| string $value	count=1
arg_pair	variable_name ||| resource $introspection string $variable_name	count=1
function_name	recupera información sobre un ||| proc get	count=1
function_name	petición http en la ||| request	count=1
function_name	un único componente al ||| component	count=1
return	mcrypt_generic_deinit() en lugar ||| bool	count=1
arg_pair	el nombre distinguido ||| resource $privkey	count=1
function_name	certificado asociado con ||| openssl x509	count=1
function_name	da la marca ||| idate	count=1
function_name	y 1.0 ||| hsl	count=1
function_name	el punto blanco de ||| setimagewhitepoint	count=1
function_name	que file_get_contents() ||| contents	count=1
function_name	provisto por el ||| mhash keygen s2k	count=1
namespace	de esquema en ||| sdo_das_xml	count=1
arg_pair	de botón ||| int $y	count=1
function_name	lista las tablas ||| list tables	count=1
namespace	campo del documento ||| solrdocument	count=1
function_name	[function_name_1] insertada ||| [function_name_2] [function_name_1]	count=3
function	añade [arg_pair_2] ||| [function_name_1] personal resource $dict [arg_pair_2]	count=1
arg_pair	en fann_get_cascade_output_stagnation_epochs() durante ||| int $neurons_between_reports	count=1
namespace	obtener información de ||| function	count=1
function_name	ømq ||| construct	count=1
function_name	devuelve [function_name] de ||| [function_name]	count=1
function_name	línea cerrada resultante ||| closepath stroke	count=1
return	a este para que ||| void	count=1
function_name	de instancia xml dada ||| string	count=1
namespace	archivo phar usando la ||| pharfileinfo	count=1
function_name	mayúsculas-minúsculas cuando se comparan ||| eregi replace	count=1
function_name	de no-bloqueo ||| ftp nb	count=1
function_name	generador de trozos ||| fragmenter	count=2
arg_pair	con un umbral de ||| int $channel	count=1
function_name	verde de la cromaticidad ||| green	count=1
return	para tomar el ||| string	count=1
function_name	codificado ||| mailparse uudecode	count=1
function_name	método ||| await	count=1
arg_pair	value1 ||| mixed $value1 mixed $value2	count=1
arg_pair	declaración preparado con odbc_prepare() ||| resource $result_id array $parameters_array	count=1
return	uno dos ||| string	count=1
function_name	establece ||| offset set	count=2
return	string y como un ||| array	count=1
function_name	en por ||| set mlt	count=1
function_name	de espera de consulta ||| query timeout	count=1
namespace	buzones que ||| function	count=1
function_name	el modo autoconsigna ||| autocommit	count=1
function_name	característica conocia ||| tailable	count=1
function_name	extrae cada archivo ||| uudecode	count=1
return	una función ||| string	count=1
function	guid binario [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	un valor especial ||| void	count=1
function_name	uso de ||| status	count=1
function_name	las palabras serán ||| mlt	count=1
function_name	obtiene los iteradores ||| get children	count=2
function_name	argumento es true ||| using	count=1
arg_pair	hacen referencia a ||| string $fk_qualifier	count=1
function_name	donde ||| chdir	count=1
function_name	tipo de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	del campo ||| cubrid field	count=1
function_name	instanciación ||| on create	count=1
return	salida estándar en la ||| bool	count=1
function_name	el código de ||| code	count=1
function_name	activa el debug ||| memcache debug	count=1
function_name	descripción ||| cairo pattern get extend	count=2
function	[function_name_1] un directorio ||| [arg_pair_2] [function_name_1]	count=3
function_name	núcleo («kernel») ||| kernel	count=1
arg_pair	nueva copia de ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	recupera el último error ||| get last error	count=1
function_name	cada capa de ||| get layer array	count=1
arg_pair	buzones ||| string $ref	count=1
namespace	encuentre ||| rarexception	count=1
return	defina sobre las ||| zmqsocket	count=1
arg_pair	des de ||| string $str	count=1
function_name	[function_name_1] complemento ||| [function_name_2] get last used [function_name_1]	count=3
function_name	token del callback que ||| token	count=1
arg_pair	[arg_pair_1] índice field ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	los parámetros ||| params	count=4
function_name	el sistema de coordenadas ||| rotate	count=1
return	algoritmo estándar basado ||| string	count=1
function_name	la función ps_stringwidth() excepto ||| string geometry	count=1
function_name	función cubrid_close_prepare() cierra el ||| cubrid close prepare	count=1
function_name	datos del ||| mailparse	count=1
function_name	puntero interno a fila ||| data seek	count=1
function_name	para ||| set scaling	count=1
function_name	parámetros ||| open memory image	count=2
return	color especificado ||| int	count=1
namespace	apciterator ||| apciterator	count=1
function_name	crea ||| ifx create	count=1
arg_pair	que server_key se ||| string $server_key	count=5
function_name	este serán ||| mlt min	count=1
arg_pair	lista de ||| resource $connection_id	count=1
function_name	descripción ||| cairo surface get	count=3
function_name	carga ||| workload	count=1
function_name	intento ||| db2 conn	count=1
function_name	http de ||| http	count=1
function_name	comportamiento de autocommit del ||| db2 autocommit	count=1
return	en un array asociativo ||| array	count=1
function_name	[function_name_1] estadísticas ||| [function_name_2] [function_name_1]	count=3
function_name	condición para el ||| condition	count=1
function_name	extrae cada archivo ||| mailparse	count=1
arg_pair	estilo numérico para ||| int $style	count=1
function_name	entwerfen von einer mime ||| iconv mime encode	count=1
arg_pair	de mysql_connection ||| mixed $mysql_connection	count=1
return	un recurso ||| resource	count=1
function	entrada para [arg_pair_2] ||| [function_name_1] params [arg_pair_2]	count=2
return	de proceso ||| void	count=1
function_name	bcompiler ||| bcompiler	count=2
function_name	color o textura de ||| polygon	count=1
arg_pair	con un algoritmo de ||| int $channel	count=1
function_name	al entrenamiento ||| fann	count=1
function_name	actual de una entrada ||| filesize	count=1
arg_pair	un assoc_array en ||| array $assoc_array int $options	count=1
function	de paginación [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	provee un grado ||| array $other_options	count=1
function_name	descripción de la ||| cairo pattern get color stop rgba	count=1
function_name	nuevo contexto con la ||| context new	count=1
function_name	fuente type ||| font	count=1
function_name	desplazamiento de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	una excepción no ||| exception handler	count=1
function	no-bloqueo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de espera de la ||| cubrid set query timeout	count=1
arg_pair	identificador de ||| resource $result_identifier	count=1
namespace	de datos que ||| sqlite3	count=1
function_name	su propia clase ||| node class	count=1
function_name	tantos ||| mlt min doc	count=1
function_name	determina lo grande ||| fann	count=1
arg_pair	de colores que representan ||| int $numcolors int $colorspace	count=2
return	la función ||| int	count=1
arg_pair	servicio proxy ||| string $action	count=1
return	destino especificado ||| resource	count=1
function_name	establece el ||| set mlt count	count=1
function_name	largo ||| frame long	count=1
arg_pair	x509cert proporcionado incluyendo los ||| mixed $x509cert bool $shortnames	count=1
function_name	entidades ||| external entity loader	count=2
arg_pair	se puede especificar un ||| string $field	count=1
arg_pair	nueva ||| float $xstep	count=1
arg_pair	html ||| resource $handle int $length	count=1
function_name	filas eliminadas insertadas ||| db2 num rows	count=1
function_name	objetos excepto [function_name] contenidos ||| [function_name]	count=1
arg_pair	parte de str especificada ||| string $str	count=1
return	el carácter especificado por ||| string	count=1
namespace	inicio de un ||| function	count=1
arg_pair	comporta de forma ||| string $servername string $username	count=1
function_name	tipo de la variable ||| gettype	count=1
function_name	que ||| add kernel	count=2
function_name	ser un recurso socket ||| socket	count=1
function_name	interno del ||| seek	count=1
function_name	parámetros de la base ||| db	count=1
function_name	devuelve la cantidad ||| get channels	count=1
function_name	de la ||| set	count=9
function_name	lee los ||| read	count=1
function_name	definidos ||| control point browse	count=2
function	cabecera [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	devuelve una ||| chr	count=1
arg_pair	y negro especificados al ||| float $blackpoint float $gamma	count=1
function_name	gif de la imagen ||| image layers	count=1
namespace	fichero referenciado ||| splfileinfo	count=1
arg_pair	para un ||| resource $connection	count=1
function_name	candidatas ||| candidate	count=2
arg_pair	mensaje de error ||| string $message	count=1
function_name	identificador de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	que la clave ||| by key	count=3
function_name	de fondo de ||| background	count=1
arg_pair	un servidor ||| string $database_name	count=1
function_name	un blob en modo ||| ibase blob echo	count=1
function_name	asociativo que ||| assoc	count=1
function_name	de módulos definidos ||| modules	count=1
function_name	las palabras ||| mlt min	count=1
namespace	cierra ||| sqlite3result	count=1
return	una conexión ||| string	count=1
namespace	conexión o ||| function	count=1
arg_pair	un fichero al archivo ||| string $filename string $localname	count=1
arg_pair	alfa para [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	strftime() excepto ||| gmstrftime	count=1
function	[function_name_1] de cadena ||| [arg_pair_2] [function_name_1]	count=1
function_name	interna ||| internal	count=4
function_name	cadena de ||| load	count=1
function_name	servicio y ||| start service	count=1
namespace	el código de ||| function	count=1
function_name	[function_name_1] bloques ||| [function_name_2] [function_name_1]	count=6
function	[function_name_1] un año ||| [arg_pair_2] [function_name_1]	count=4
function_name	mediante un cursor en ||| cursor	count=1
function_name	la función geoip_country_code_by_name() devolverá ||| country	count=1
function_name	desde una ||| from callback	count=1
function_name	ruta del directorio ||| path	count=1
return	en cada ||| bool	count=1
function_name	[function_name_1] la versión ||| [function_name_1] [function_name_2]	count=2
function_name	devuelto ||| bzerrstr	count=1
function_name	pares de sustitución junto ||| repl	count=1
arg_pair	cubrid_schema() se ||| int $schema_type	count=1
function_name	el límite superior de) ||| strncasecmp	count=1
function_name	1970 00:00:00 gmt) ||| time	count=1
function_name	la longitud [function_name] número ||| [function_name]	count=1
function_name	resultado de [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	conjunto ||| charset	count=1
arg_pair	[arg_pair_1] a un ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	servidores de trabajo para ||| gearmanclient	count=1
function_name	el certificado y su ||| sign	count=1
function_name	la biblioteca unrar ||| set using	count=1
function_name	xml desde ||| save xml	count=1
function_name	cuando la biblioteca ||| set using	count=1
function_name	archivo ||| file	count=1
return	de la última petición ||| array	count=1
arg_pair	objeto pdostatement ||| int $fetch_style int $cursor_orientation	count=1
function_name	de instancia xml ||| load	count=1
namespace	indica si el ||| tidynode	count=1
function_name	categoría ||| flatness	count=1
function_name	y devuelve la porción ||| mb strrichr	count=1
function_name	lo grande que podría ||| fann	count=1
function	extensión de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	a una combinación específica ||| function	count=1
function_name	por la transacción ||| fbsql commit	count=1
function_name	[function_name_1] de conexión ||| [function_name_2] [function_name_1]	count=1
function_name	devuelve ||| get terms	count=1
function_name	del ||| get	count=14
function_name	devuelve el tipo ||| get type	count=5
function_name	y ||| ncurses	count=1
namespace	string codificado por palabras ||| function	count=1
arg_pair	de botón tridimensional ||| int $y	count=1
function_name	obtención interna subsigiente a ||| prefetch	count=1
function_name	esta función reinicializa ||| reset	count=1
function_name	devolverá la lista de ||| odbc	count=1
function	[function_name_1] un valor ||| [function_name_1] ref [arg_pair_2]	count=1
function_name	una [function_name] ||| pdf info [function_name]	count=1
return	será generada al inicio ||| void	count=1
function_name	fuente usado cuando ||| getfontsize	count=1
function_name	o una definida por ||| create function	count=1
namespace	el nodo es ||| tidynode	count=1
function_name	trata array como ||| push	count=1
function_name	obtiene si ||| get	count=1
function_name	archivo/usuario ||| bin	count=1
namespace	blanco u ||| function	count=1
arg_pair	línea [arg_pair] todas ||| [arg_pair]	count=1
namespace	documento cuando al ||| solrdocument	count=1
function_name	[function_name_1] de oracle ||| [function_name_2] field [function_name_1]	count=3
arg_pair	el hash ||| string $str	count=1
function_name	imprime ||| out	count=1
function_name	acción ||| gupnp service action	count=2
function_name	biblioteca unrar encuentre ||| set using exceptions	count=1
function_name	comprobación de la ||| crack check	count=1
function_name	la ||| min doc	count=2
namespace	de mensaje para ||| function	count=1
function_name	archivo dado ||| all	count=1
function_name	fichero omitiendo ||| path	count=1
function_name	formateador de la ||| highlight formatter	count=1
function_name	[function_name_1] zona horaria ||| [function_name_2] [function_name_1]	count=4
function_name	la transformación ||| text matrix	count=1
function_name	añade un fichero ||| add from	count=1
function_name	[function_name_1] [function_name_2] ||| bool [function_name_2] [function_name_1]	count=3
return	sólo si ||| void	count=1
namespace	objeto ||| gmagickdraw	count=1
function_name	prefijo [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve la extensión de ||| type to extension	count=1
arg_pair	crea un ||| int $x int $y	count=1
function_name	usuario real ||| seteuid	count=1
function_name	del índice del campo ||| field	count=3
namespace	este para que ||| imagickkernel	count=1
function_name	[function_name_1] [function_name_2] por dirname ||| [function_name_2] [function_name_1]	count=2
function_name	registro del ||| yaz record	count=1
function_name	después de llamarla varias ||| odbc	count=1
arg_pair	texto text con la ||| string $text	count=1
arg_pair	la clave key ||| mixed $key	count=1
arg_pair	delimiter como delimitador de ||| string $delimiter string $null_as	count=1
function_name	el uso de ||| proc	count=1
function_name	caracteres del campo ||| field	count=2
function_name	mediante uuencode ||| all	count=1
function_name	[function_name_1] el nombre ||| [function_name_1] package [function_name_2]	count=1
function_name	limpia los [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	de la línea de ||| int	count=1
namespace	se dan tres ||| function	count=1
namespace	por el [namespace] es un ||| [namespace]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] is null	count=1
function_name	ingres dada ||| ingres	count=1
function_name	abstracción que se ||| construct	count=1
function_name	la ||| prime	count=2
namespace	usados por ||| function	count=1
function_name	del enlace simbólico filename ||| lchgrp	count=1
arg_pair	fichero de ||| int $flags	count=1
function_name	baja prioridad y retorna ||| low	count=1
function_name	establece la posición para ||| set	count=1
return	clase domnodelist con todos ||| domnodelist	count=1
arg_pair	última ocurrencia ||| string $haystack	count=1
return	en fdf_save_file() ||| bool	count=1
function	tupla de [arg_pair_2] ||| [function_name_1] first [arg_pair_2]	count=4
function_name	representa la imagen obtenida ||| imagecreatefromwebp	count=1
arg_pair	un ||| resource $ftp_stream	count=1
arg_pair	sobre los ||| resource $result	count=1
namespace	un proceso abierto mediante ||| function	count=1
arg_pair	coordenadas los radios de ||| float $ry	count=1
function_name	sesión actual ||| session	count=5
function_name	descripción de la función ||| cairo pattern set extend	count=1
function_name	disponibles después ||| data	count=1
function_name	[function_name_1] memoria caché ||| [function_name_2] [function_name_1]	count=6
return	codificado ||| array	count=1
function_name	activación para la capa ||| activation	count=1
function_name	indicando error cuando ||| set	count=1
return	un caracter que ||| string	count=1
arg_pair	a la de memcached::getmulti() ||| string $cas_tokens	count=1
function_name	línea ||| get	count=1
function	[function_name_1] representación dom ||| [function_name_1] [arg_pair_2]	count=2
function_name	la agrupación de conexiones ||| connection	count=1
arg_pair	address al socket ||| string $address	count=1
function_name	fecha dada ||| date parse	count=1
function_name	del apuntador de ||| mailparse uudecode all	count=1
function_name	error cuando la biblioteca ||| set using exceptions	count=1
function_name	canal alfa [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	el conjunto óptimo de ||| int $nullable	count=1
function_name	crea un índice en ||| create	count=1
arg_pair	pueden hacer de ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	memoria formatos de imagen ||| get image	count=1
function_name	limpia todos los ||| clear	count=1
rep	[namespace_1] [rest_2] ||| [namespace_1] [rest_2]	count=20
namespace	los elementos de ||| function	count=1
function	[function_name_1] una base ||| [arg_pair_2] [function_name_1]	count=3
function_name	consulta única no ||| cubrid query	count=1
arg_pair	punto medio enx ||| float $alpha float $beta	count=2
arg_pair	del archivo ||| mixed $filename	count=1
function_name	sólo ||| using exceptions	count=2
function_name	elemento [function_name] como ||| [function_name]	count=1
function_name	borra el archivo especificado ||| ftp delete	count=1
namespace	la función ||| gearmanworker	count=1
function_name	[function_name_1] módulos definidos ||| [function_name_2] [function_name_1]	count=1
function_name	que pertenecen ||| class names	count=1
return	información de la ||| reflectionextension	count=1
arg_pair	un array ||| array $array	count=6
function_name	la tabla actual ||| fbsql table	count=1
function_name	declaración de namespace ||| set end namespace decl	count=1
function_name	[function_name_1] del ||| [function_name_2] [function_name_1]	count=25
function_name	sobre un ||| status	count=1
function_name	archivo ||| uudecode all	count=6
function_name	de expresiones regulares ||| set highlight regex	count=1
function_name	definida por el usuario ||| function	count=1
function_name	actual del trazo ||| cmykstroke	count=1
function	[function_name_1] y asocia ||| [arg_pair_2] [function_name_1]	count=1
function_name	similar a fbsql_fetch_array() ||| fbsql fetch	count=1
function_name	un enlace duro ||| link	count=1
namespace	ya que puede ocasionar ||| function	count=1
arg_pair	del texto ||| resource $handle int $length	count=1
arg_pair	un bloque de ||| resource $pdfdoc int $page	count=1
function_name	un ||| strerror	count=1
return	devuelve el número de ||| int	count=2
function_name	equivalente en minúsculas ||| tolower	count=1
function_name	la codificación de ||| mb convert encoding	count=1
function_name	datos arbitrarios a ||| ping	count=1
arg_pair	por fd ||| mixed $fd int $pri	count=1
function_name	el modo de compresión ||| set compression mode	count=1
namespace	o para escritura ||| function	count=1
function_name	frecuencia de ||| frequency	count=1
function_name	[function_name_1] valor ||| [function_name_2] [function_name_1]	count=1
arg_pair	unix ||| string $str	count=1
function_name	intersección ||| uintersect assoc	count=1
function_name	cambia ||| chdir	count=1
function_name	prioridad de ||| priority	count=1
function_name	[function_name_1] de configuración ||| [function_name_2] get [function_name_1]	count=1
function_name	nivel mínimo de ||| min message	count=1
function_name	db2_connect() y devuelve ||| db2	count=1
function_name	devolver un valor ||| exceptions	count=1
function_name	limpia el bit ||| clrbit	count=1
arg_pair	y asocia ||| int $cols int $rows	count=1
arg_pair	esta ||| resource $psdoc	count=1
arg_pair	una nueva instancia ||| array $rectangle string $url	count=1
function_name	valor especial indicando error ||| using	count=1
function_name	ømq pueden hacer de ||| construct	count=1
function_name	definida por su nombre ||| name	count=1
function_name	de ||| types	count=1
return	como una matriz ||| array	count=1
namespace	sido creado con ||| sdo_das_xml	count=1
arg_pair	ømq pueden ||| zmqsocket $frontend	count=1
namespace	para que ||| imagickkernel	count=1
arg_pair	filtros adjuntos [arg_pair_2] ||| [arg_pair_2] string $filtername [arg_pair_1]	count=2
function_name	para añadir un campo ||| set	count=1
arg_pair	copia de ||| bool $preserve_cloned_files bool $backup_original_files	count=1
namespace	sqlite3 como una ||| sqlite3	count=1
function_name	tabla y todas ||| table	count=1
arg_pair	no condigue el ||| string $type	count=1
function_name	von einer mime ||| mime	count=1
function_name	de error fdf ||| fdf error	count=1
arg_pair	ordena números de ||| string $search_criteria string $charset	count=1
arg_pair	nombre distinguido ||| array $dn resource $privkey	count=1
namespace	del hash ||| quickhashinthash	count=1
return	base de las letras ||| int	count=1
function_name	primer atributo ||| first attribute	count=2
arg_pair	puntos blanco y negro ||| float $blackpoint float $gamma	count=1
return	dado ||| int	count=2
return	parameter ||| solrdismaxquery	count=3
function_name	que ||| kernel	count=1
function_name	de filas afectadas en ||| affected rows	count=1
function_name	obtiene el [function_name_2] ||| [function_name_2] [function_name_1]	count=50
namespace	contar los elementos de ||| function	count=1
return	un fichero en el ||| resource	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] image [arg_pair_2]	count=4
namespace	en ||| sdo_das_xml	count=1
namespace	obtiene información sobre la ||| function	count=1
arg_pair	asociado al objeto pdostatement ||| int $cursor_orientation	count=1
arg_pair	un elemento en ||| resource $checkboxtree	count=1
return	sobre ||| zmqsocket	count=1
return	lob ||| oci-lob	count=1
arg_pair	al campo ||| string $fieldname	count=1
function_name	animada se repite ||| iterations	count=1
function_name	la utilización ||| win32 ps stat mem	count=1
function_name	está al final del ||| feof	count=1
arg_pair	de colores ||| int $numcolors	count=2
function_name	de los campos ||| field	count=1
function_name	extensión [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	valor de la ||| string $variable string $value	count=1
function_name	[function_name_1] el último ||| [function_name_2] [function_name_1]	count=1
namespace	cualquier error ||| function	count=1
arg_pair	la última ocurrencia ||| string $haystack	count=1
function_name	filas eliminadas insertadas o ||| num rows	count=1
arg_pair	realiza una consulta aql ||| string $dbpath	count=1
function_name	documentos ||| set mlt min	count=1
function_name	firma ||| gnupg verify	count=2
arg_pair	[arg_pair_1] anotación rectangular ||| [arg_pair_2] float $ury [arg_pair_1]	count=1
function_name	función acepta uno dos ||| number	count=1
namespace	yar_client hacia un yar_server ||| yar_client	count=1
arg_pair	especificado como timestamp y ||| int $timestamp	count=2
function_name	afectadas por una consulta ||| affected	count=1
arg_pair	usa para iterar ||| int $colnum	count=1
function_name	colapsa la imagen ||| image	count=1
function_name	nombres ||| is default	count=1
function_name	sus padres ||| class implements	count=1
return	[return] items ||| [return]	count=3
function_name	sobre la etiqueta id3v1 ||| get id3v1 tag	count=1
function_name	[function_name_1] la acción ||| [function_name_2] [function_name_1]	count=1
function_name	un número es primo ||| prime	count=1
function_name	ejecuta una [function_name_1] [function_name_2] ||| function bool [function_name_1] [function_name_2]	count=2
function_name	máximo de [function_name_2] ||| [function_name_1] cand [function_name_2]	count=4
arg_pair	de éxito cero en ||| string $zurl	count=1
function_name	como ||| min doc	count=1
function_name	descripción ||| cairo scaled font glyph extents	count=1
function_name	encripta ||| openssl encrypt	count=2
arg_pair	directorio con el ||| string $path	count=1
return	mientras preserva los bordes ||| gmagick	count=1
function_name	cada ||| mailparse	count=1
arg_pair	que server_key se puede ||| string $server_key	count=5
function_name	través de la imagen ||| image	count=1
function_name	el array de pendientes ||| steepnesses	count=1
arg_pair	del string str a ||| string $str	count=1
function_name	convertidos a minúscula ||| mb strtolower	count=1
arg_pair	fgetss() intenta ||| resource $handle int $length	count=1
function_name	módulos definidos ||| modules	count=1
return	el ||| gmagick	count=1
return	des ||| string	count=1
function_name	siguiente ||| cubrid next	count=1
function_name	el generador de ||| fragmenter	count=1
function_name	archivo pdf usando el ||| pdf open	count=1
function_name	error ||| return error	count=1
namespace	comporta ||| function	count=1
namespace	regla del número ||| harupage	count=1
arg_pair	un ||| int $height	count=2
function_name	en un intérprete xml ||| xml	count=1
arg_pair	con un umbral ||| float $threshold	count=1
arg_pair	comporta ||| string $password string $charset	count=1
function_name	una visual ||| fribidi log2vis	count=1
function_name	reintentos en ||| deadlock retry count	count=1
function_name	una región ||| region	count=1
function_name	de llamarla varias ||| odbc	count=1
namespace	temporalmente la [namespace] ||| [namespace]	count=1
function_name	al [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] la columna ||| [arg_pair_2] [function_name_1]	count=2
function_name	después de obtenerlo de ||| fann descale	count=1
function_name	los datos ||| mailparse uudecode	count=1
arg_pair	a b donde ||| gmp $a gmp $b	count=1
function_name	iniciar ||| start	count=1
function_name	monitorizar un ||| monitor	count=1
arg_pair	del contorno acutales ||| float $ex	count=1
arg_pair	dibujar imágenes de color ||| bool $blendmode	count=1
function_name	color en ||| start color	count=1
function_name	o false si ||| module is	count=1
function_name	cadena ||| load	count=1
function_name	[function_name_1] argumentos pasados ||| [function_name_1] [function_name_2]	count=2
function_name	caché de archivo/usuario de ||| apc bin	count=1
function_name	número de filas ||| num rows	count=4
function_name	usa la prueba probabilística ||| gmp prob	count=1
namespace	la lista de dsn ||| function	count=1
function	clase dom [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	de la api graphicsmagick ||| string	count=1
return	haya algún tipo ||| int	count=1
return	el formato especificado en ||| bool	count=1
function_name	palabras ||| frequency	count=1
arg_pair	o especial a menudo ||| int $dev int $pri	count=1
function_name	lista de ||| broker list dicts	count=1
function_name	terminal tiene capacidades de ||| ncurses	count=1
namespace	no se le ha ||| mongocursor	count=1
function_name	finaliza la definición de ||| end	count=1
namespace	de la ||| harudestination	count=1
function_name	obtiene varios valores ||| ps get	count=1
function_name	[function_name_1] palabras ||| [function_name_2] [function_name_1]	count=2
function_name	como strftime() excepto ||| gmstrftime	count=1
namespace	error que ||| function	count=2
arg_pair	buzón especificado por mailbox ||| string $mailbox	count=1
function_name	el estado [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	los hijos de ||| children	count=2
namespace	imágenes ||| imagick	count=1
arg_pair	una tarea de ||| mixed $context	count=3
function_name	la biblioteca unrar ||| set using exceptions	count=1
function_name	devuelve la firma ||| get	count=1
return	un código de ||| string	count=1
function_name	establecido ||| testbit	count=1
function_name	la descripción de la ||| cairo matrix	count=1
function_name	es necesariamente igual ||| iconv strlen	count=1
function_name	error ||| set using	count=2
arg_pair	una característica ||| string $feature	count=1
function_name	la siguiente fila ||| oci fetch	count=2
function_name	establece el buffer para ||| set	count=1
arg_pair	apariencia de un ||| resource $fdf_document	count=1
function_name	el punto primario verde ||| getimagegreenprimary	count=1
namespace	acceso para este método ||| reflectionmethod	count=1
arg_pair	en un archivo ||| string $new_file2	count=1
function_name	fue subido mediante ||| move uploaded	count=1
function_name	una ||| using exceptions	count=2
function_name	si un ||| prime	count=1
arg_pair	calendario calendar especificado ||| int $calendar	count=1
function	[function_name_1] del imagick ||| [arg_pair_2] [function_name_1]	count=1
return	conocia como cursores ||| mongocursor	count=1
return	devuelve el ||| array	count=2
arg_pair	esté disponible para ser ||| resource $stmt int $row	count=1
namespace	el nodo ||| splheap	count=1
function_name	y sus padres ||| class implements	count=1
function_name	la lista de ||| memory	count=1
function_name	acción ||| gupnp device action	count=1
function_name	tamaño de ||| size	count=2
function_name	entonces en ||| set	count=1
arg_pair	caracter de mask ||| string $subject string $mask	count=1
function_name	gran número de ficheros ||| start buffering	count=1
function_name	escribe ||| write	count=11
return	el hash de ||| string	count=1
namespace	especifica el número de ||| solrquery	count=1
function	similares para [arg_pair_2] ||| [function_name_1] names [arg_pair_2]	count=1
arg_pair	o ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	una nueva copia ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	esta función ||| odbc	count=1
function_name	oracle del campo ||| oci field	count=2
function_name	devuelve ||| get mode	count=1
function_name	[function_name_1] unión ||| [function_name_1] line [function_name_2]	count=1
function_name	en un das ||| add types	count=1
function_name	ruta por ||| route	count=1
return	que el ||| void	count=2
function_name	en la ||| request	count=1
arg_pair	punto de ||| float $y	count=1
function_name	del canal de color ||| color value	count=1
arg_pair	dsn disponibles ||| resource $connection_id	count=1
function_name	convertidos a mayúsculas ||| strtoupper	count=1
arg_pair	se comporta de forma ||| string $servername string $username	count=1
function_name	tamaño de fragmento ideal ||| highlight regex slop	count=1
namespace	las ||| solrquery	count=1
namespace	cuando ||| rarexception	count=1
function_name	valores de la fila ||| sqlsrv fetch object	count=1
namespace	presente que es ||| judy	count=2
return	un archivo temporal ||| array	count=1
function_name	extraer ||| grapheme extract	count=1
function_name	notifica a los ||| gupnp service notify	count=1
function_name	descripción de la función ||| cairo font face	count=1
function_name	no analizadas para ||| set unparsed	count=2
arg_pair	algoritmos alternativos que puedan ||| string $salt	count=1
function_name	de campos de ||| field	count=1
function_name	tantos ||| mlt min doc frequency	count=2
namespace	entonces en lugar de ||| rarexception	count=1
namespace	píxeles ||| imagick	count=1
function_name	una imagen en ||| image	count=2
arg_pair	eventos ||| resource $event_base int $flags	count=1
function_name	[function_name_1] devuelve el ||| [function_name_2] [function_name_1]	count=8
function_name	la posción actual ||| pdf show	count=1
function_name	variables de la ||| variables	count=1
function_name	el diccionario indicado mediante ||| crack	count=1
function_name	transparencia de ||| matte floodfill image	count=1
function_name	extrase el ||| get pid	count=1
function_name	elimina todos los ||| delete	count=1
namespace	del puntero interno ||| solrdocument	count=1
namespace	actual del objeto grande ||| oci-lob	count=1
function_name	de entrecomillado apropiado para ||| quote	count=1
namespace	fichero ||| splfileobject	count=2
function_name	clase iterador de array ||| iterator class	count=1
function_name	dice si ||| enc is	count=1
function_name	segundo ||| add types	count=2
function_name	con las estadísticas ||| stats	count=1
arg_pair	esta función establece [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	ignoradas ||| mlt min doc frequency	count=2
return	diccionario indicado ||| bool	count=1
arg_pair	el búfer ||| int $buffer	count=1
function_name	el token ||| token	count=1
arg_pair	a fgets() ||| int $length	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] red [function_name_2]	count=1
return	preserva los bordes ||| gmagick	count=1
function_name	como este serán ignoradas ||| frequency	count=1
function_name	en des ||| crypt	count=1
arg_pair	dn se ||| string $dn	count=1
function_name	parámetros [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	el ||| resource $connection_id	count=1
return	cual está en activado ||| bool	count=1
function_name	el canal ||| channel	count=1
function_name	una búsqueda en ||| search	count=1
function_name	este serán ||| set mlt	count=1
function_name	establecer los colores ||| ncurses color set	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] seek [arg_pair_2]	count=4
arg_pair	y socket. -- zguide ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	[function_name_1] bloque del ||| function int mcrypt module [function_name_2] [function_name_1]	count=1
arg_pair	de datos disponible como ||| int $offset	count=1
function_name	la siguiente [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	la fecha ||| date parse from	count=1
function_name	la imagen y lo ||| image	count=1
return	todas ||| array	count=4
return	elemento en ||| bool	count=1
function_name	el formateador de ||| formatter	count=1
namespace	las ||| oauth	count=1
function_name	implementa directo ||| images blob	count=1
function_name	de ||| gmp prob prime	count=2
function_name	caracter ||| chr	count=1
function_name	la instancia de ||| get	count=1
function_name	los parámetros de ||| scaling params	count=2
function_name	vinculada de oracle ||| oci bind by name	count=1
namespace	que debería estar entre ||| imagickpixel	count=1
function_name	en el ||| crypt	count=1
return	por el usuario ||| void	count=2
arg_pair	a b ||| gmp $a gmp $b	count=2
arg_pair	len bytes de ||| int $len	count=1
function_name	de ||| pconnect	count=1
function_name	sobre un socket creado ||| socket accept	count=1
function_name	el tamaño actual ||| zip entry	count=1
function_name	la de memcached::touch() con ||| touch	count=1
return	número de segundos ||| int	count=1
arg_pair	mensaje de ||| string $message	count=1
arg_pair	str de ||| string $str string $charset	count=1
function_name	selecciona la base ||| select db	count=1
function_name	fue subido mediante el ||| move uploaded file	count=1
function_name	el número de tendencias ||| get bias array	count=1
function_name	última ||| dbplus last	count=2
function_name	[function_name_1] inicialización iv ||| [function_name_2] [function_name_1]	count=1
function_name	el algoritmo bidireccional ||| char direction	count=1
function_name	base ||| base	count=1
function_name	retorna el número ||| num	count=1
arg_pair	color para un color ||| resource $image	count=2
function_name	ignoradas ||| set mlt min doc	count=1
function_name	la tabla ||| table	count=2
arg_pair	un nombre de valor ||| int $property string $name	count=1
arg_pair	se comporta de ||| string $charset	count=1
arg_pair	de forma ||| string $servername	count=1
function_name	lecturas a secundarios ||| get slave okay	count=3
function_name	facet.date.end ||| set facet date end	count=1
return	pdflib y [return] todos ||| [return]	count=1
function_name	indica si la tarea ||| is	count=1
function_name	la información [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	archivo pdf ||| pdf	count=2
return	[return] una ||| [return]	count=3
arg_pair	similar a memcache::connect() con ||| string $host	count=1
function_name	la función geoip_country_code_by_name() devolverá ||| country code	count=1
arg_pair	invertidas antes ||| string $str	count=1
function_name	fichero subido por ||| fdf get attachment	count=1
arg_pair	usando un método ||| string $method	count=1
function_name	las cabeceras de respuesta ||| headers	count=1
function	información [arg_pair_2] ||| [function_name_1] resource $link_identifier [arg_pair_2]	count=1
namespace	este método ||| reflectionmethod	count=1
function_name	devuelve el ||| file get	count=1
arg_pair	parámetro name ||| string $name	count=1
return	mediante el identificador ||| bool	count=1
arg_pair	y negro especificados ||| float $blackpoint float $gamma	count=1
function_name	por lo ||| mlt min doc frequency	count=1
function_name	la lista ||| open	count=1
function_name	respuesta sin tratar ||| raw response	count=1
arg_pair	modo wsdl o ||| mixed $wsdl array $options	count=1
namespace	que contiene todos ||| function	count=1
function_name	devuelve el nombre ||| get short name	count=2
namespace	valor ||| rarexception	count=1
function_name	csr certificate signing ||| openssl csr	count=1
arg_pair	fila extraida del bloque ||| int $row_number	count=1
arg_pair	modo de ||| int $mode	count=1
function_name	cada archivo codificado ||| uudecode	count=1
arg_pair	parámetro stack es true ||| string $offset	count=1
arg_pair	parámetro flatness ||| float $flatness	count=1
function_name	entradas por clave manteniendo ||| ksort	count=1
arg_pair	bordes de la imagen ||| int $width int $height	count=1
function_name	la imagen ||| image	count=52
function_name	clases ||| classes	count=1
function_name	de colores únicos ||| colors	count=1
function	del campo [arg_pair_2] ||| [function_name_1] type [arg_pair_2]	count=1
return	contienen una ||| string	count=1
function_name	devuelve un mensaje de ||| curl	count=1
namespace	fecha unix correspondiente a ||| function	count=1
namespace	una ||| gearmanclient	count=2
arg_pair	según el criterio y ||| int $sortorderby int $sortdirection	count=2
arg_pair	fichero dado ||| int $flags	count=1
function_name	la codificación de ||| detect encoding	count=1
function_name	estáticas ||| static	count=2
function_name	con ||| types	count=1
function_name	imagen raw ||| load raw	count=1
arg_pair	un documento ||| resource $parser string $data	count=1
function_name	y sólo si el ||| using exceptions	count=1
function_name	el diccionario ||| crack	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get [function_name_1]	count=19
function_name	sets tie breaker ||| set	count=1
function_name	el número ||| start	count=1
arg_pair	una nueva entrada al ||| int $key int $value	count=1
function_name	[function_name_1] la severidad ||| [function_name_2] [function_name_1]	count=1
function_name	consulta [function_name_2] ||| function bool [function_name_1] [function_name_2]	count=2
function_name	para forzar a la ||| variant cast	count=1
arg_pair	un documento pdf ||| resource $fdf_document string $url	count=1
namespace	que contenía ||| function	count=1
arg_pair	[arg_pair_1] de ingres_fetch_row() ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	(«kernel») a ||| add kernel	count=1
return	cada archivo codificado mediante ||| array	count=1
function_name	definidos ||| gupnp control point browse	count=1
function_name	es el ||| is default	count=1
arg_pair	offset a ||| resource $lob_identifier int $offset	count=1
arg_pair	apunta a una ||| float $ury	count=1
arg_pair	y pregunta por las ||| string $keyword string $optlist	count=1
namespace	este ||| gmagickpixel	count=1
function_name	base de datos ||| start db	count=1
function_name	debería usarse para ||| set	count=1
function_name	la descripción ||| image surface get	count=1
arg_pair	un nombre de valor ||| string $name	count=1
function_name	excepción no es ||| exception	count=1
namespace	igual que ||| directory	count=1
function_name	retorno a ||| bind	count=1
function_name	true si [function_name_2] ||| [function_name_1] block algorithm [function_name_2]	count=3
function_name	una función definida ||| uksort	count=1
function_name	usa la prueba ||| prob prime	count=1
function_name	imagen ccitt en ||| ccitt	count=1
function_name	da ||| idate	count=1
function_name	establece la ||| date default timezone set	count=1
function_name	desde la csr dada ||| openssl csr	count=1
return	similares al comando ||| mongocursor	count=1
namespace	usado ||| gmagickdraw	count=1
arg_pair	por variable_key ||| resource $shm_identifier int $variable_key	count=1
namespace	especificado que ||| function	count=1
function_name	[function_name_1] conexión ||| [function_name_2] [function_name_1]	count=2
function_name	de servicio extendido ||| es	count=1
function_name	devuelve una representación ||| to string	count=1
function_name	está disponible ||| available	count=1
function_name	añade ||| dbase add	count=1
function_name	actual de una entrada ||| zip entry	count=1
arg_pair	intenta eliminar cualesquiera ||| resource $handle	count=1
namespace	cuando se rellena ||| function	count=1
function_name	[function_name_1] grupos ||| [function_name_2] [function_name_1]	count=1
arg_pair	verifica el texto dado ||| string $plaintext	count=1
arg_pair	un número ||| gmp $a	count=1
function_name	prioridad baja ||| low	count=1
function_name	el número de filas ||| fbsql rows	count=1
arg_pair	envía len bytes ||| int $len int $flags	count=1
arg_pair	old_file y new_file ||| string $old_file string $new_file	count=1
arg_pair	tipo format ||| int $width	count=1
function_name	sets tie ||| tie breaker	count=1
arg_pair	interno hacia delante ||| int $result_type	count=1
function_name	aplicarse a una única ||| add	count=1
function_name	de archivo ||| uudecode	count=1
function_name	método no ||| count	count=1
function_name	de estancamiento [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	todas las opciones de ||| all	count=1
function_name	obtiene la página ||| page	count=1
function_name	obtiene el estado de ||| status	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] resource $context [arg_pair_2]	count=1
arg_pair	[arg_pair] través del ||| [arg_pair]	count=1
function_name	columna actual para ||| current column	count=1
function_name	las extensiones de ||| autoload extensions	count=1
function_name	de umbral ||| threshold	count=2
function_name	fecha de ||| date	count=1
function_name	tendencias de cada capa ||| bias	count=1
function_name	porción ||| strrichr	count=1
function_name	es un id ||| id	count=1
function_name	menos tantos documentos ||| set mlt	count=1
namespace	filteriterator que ||| filteriterator	count=1
return	de ømq pueden ||| zmqsocket	count=1
function_name	la frecuencia de documento ||| terms	count=1
return	un objeto ||| string	count=1
function_name	de la imagen ||| interlace scheme	count=1
arg_pair	infilename y ||| string $infilename	count=1
function_name	de subject el cual ||| strcspn	count=1
function_name	entrelazado ||| getimageinterlacescheme	count=1
function_name	las tablas en la ||| tables	count=1
return	del número de ||| bool	count=1
function_name	de pedido ||| yp order	count=1
function_name	van a ||| set	count=1
return	dado y ||| array	count=1
function_name	curl en formato string ||| curl	count=1
namespace	anota ||| gmagickdraw	count=1
function_name	la caché del código ||| apc	count=1
return	de primer ||| int	count=1
arg_pair	busca un elemento ||| resource $checkboxtree	count=1
arg_pair	número gmp a ||| gmp $gmpnumber	count=1
return	un proceso abierto mediante ||| array	count=1
function_name	la imagen de pincel ||| imagesetbrush	count=1
arg_pair	por su ||| string $name	count=1
arg_pair	tabla de una ||| resource $pxdoc string $name	count=1
function_name	añadido al flujo ||| stream	count=1
arg_pair	y ||| resource $ann	count=1
arg_pair	de alimentarlo a ||| resource $ann array $input_vector	count=1
return	de primer plano ||| int	count=1
function_name	socket creado ||| socket	count=1
function_name	[function_name] local ||| stream socket get [function_name]	count=1
function_name	inicial de subject el ||| strcspn	count=1
namespace	secuencia ||| gmagick	count=1
function_name	contenido de la caché ||| cache	count=1
function_name	la escala ||| db2 field scale	count=1
function_name	[function_name_1] cuantía para ||| [function_name_2] [function_name_1]	count=4
function_name	para el ||| set	count=3
function_name	valor del atributo de ||| attribute	count=1
return	a una ||| void	count=1
function_name	obtiene varios valores ||| get	count=1
namespace	recupera la lista de ||| function	count=1
function	[function_name_1] y su ||| [function_name_1] conf [arg_pair_2]	count=1
function_name	[function_name_1] [function_name_2] de ||| [function_name_1] [function_name_2]	count=48
arg_pair	offset a la dirección ||| resource $lob_identifier int $offset	count=1
namespace	texto que lee ||| function	count=1
function_name	salida del sol para ||| date sunrise	count=1
function_name	elipse a ||| ellipse	count=1
arg_pair	negro ||| float $blackpoint float $gamma	count=1
namespace	de tipo ||| rarexception	count=1
function_name	un array ||| array copy	count=1
function_name	archivos ||| chdir	count=1
function_name	cualesquiera de los otros ||| diff	count=1
function_name	matriz para ||| set	count=1
function_name	frecuencia ||| doc frequency	count=2
function_name	información del esquema ||| schema	count=1
return	enero ||| int	count=1
namespace	multidimensional por una o ||| function	count=1
function_name	nivel mínimo de ||| min	count=1
function_name	la clave primaria ||| odbc foreignkeys	count=1
function_name	de memcached::touch() con ||| touch by	count=1
namespace	de resultados como mysql_query() ||| function	count=1
function_name	inicio ||| ltrim	count=1
function_name	libera un descriptor asignado ||| oci free	count=1
function_name	[function_name_1] de entrenamiento ||| [function_name_2] [function_name_1]	count=4
function_name	msql_fetch_array() ||| msql	count=1
function_name	información detallada sobre ||| info	count=1
function_name	si el ||| using exceptions	count=1
arg_pair	un nuevo ||| resource $pxdoc resource $file	count=1
function_name	devuelve la lista de ||| get	count=1
function_name	lista de parámetros ||| ps open memory image	count=1
function_name	estilo de ||| set slide	count=1
function_name	objeto [function_name] todas ||| [function_name] pages	count=1
function_name	[function_name] actual de ||| rpm [function_name]	count=1
function	una imagen [arg_pair_2] ||| [function_name_1] channel distortions [arg_pair_2]	count=1
function_name	el argumento es ||| exceptions	count=1
function_name	nombre ||| record by name	count=1
arg_pair	el archivo en ||| int $use_include_path	count=1
namespace	de botón tridimensional simulado ||| gmagick	count=1
function_name	el generador de trozos ||| highlight fragmenter	count=1
function_name	las clases padre de ||| parents	count=1
namespace	lista doblemente enlazada contiene ||| spldoublylinkedlist	count=1
function_name	disposición ||| dispose	count=2
function_name	sisitema de archivos ||| wrapper	count=1
function_name	cada capa de la ||| fann get layer array	count=1
function_name	un [function_name] del ||| get [function_name]	count=1
function_name	por su nodename ||| get named	count=1
function_name	xml ||| xml set	count=2
function_name	última operación curl ||| curl error	count=1
arg_pair	los efectos ||| int $effect	count=1
arg_pair	una nueva definición ||| float $xstep	count=1
return	y como un número ||| array	count=1
function_name	épocas que ||| epochs	count=4
namespace	desde ||| function	count=1
function_name	dos letras del continente ||| continent code	count=1
namespace	nombres especificado ||| domnode	count=1
function_name	de prioridad de ||| event base priority	count=1
function_name	reemplaza uno ||| mod replace	count=1
arg_pair	la versión plural ||| string $msgid1	count=1
function_name	para lecturas ||| slave	count=1
arg_pair	[arg_pair_1] de texto ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	previa de ||| prev	count=1
function_name	[function_name_1] afectadas ||| [function_name_1] [function_name_2]	count=4
function_name	añade un fichero ||| add file	count=1
function_name	entrada ||| zip entry filesize	count=2
function_name	de la línea ||| line	count=5
function_name	información asociada ||| info	count=1
function_name	para inicializar el phar ||| map phar	count=1
function_name	secuencia de imágenes ||| filename	count=1
namespace	actual de ||| function	count=1
return	información de ||| array	count=1
function_name	[function_name_1] sujeta ||| [function_name_2] pdi [function_name_1]	count=2
function_name	cuantía para la instancia ||| quantum	count=1
function_name	guid binario de ||| guid string	count=1
function_name	frecuencia de documento ||| frequency	count=1
return	blanco u otros ||| string	count=1
function_name	dos dimensiones [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	palabras que ||| mlt	count=1
function_name	guarda el ||| save	count=1
function_name	encuentra disponible la lista ||| image	count=1
function_name	función devuelve [function_name_2] ||| [function_name_1] iv [function_name_2]	count=1
function_name	de términos [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	índice de la ||| index	count=1
function_name	voltea ||| imageflip	count=1
function_name	esta función acepta ||| format	count=1
return	posición actual del puntero ||| bool	count=1
function_name	campos en ||| fbsql fetch field	count=1
arg_pair	para hacer llamadas ||| mixed $input_headers	count=1
arg_pair	el parámetro stack ||| string $stack	count=1
namespace	se usa para cambiar ||| function	count=1
function_name	comprobación de la dificultad ||| crack check	count=1
function_name	el número de ||| field count	count=1
arg_pair	identificador ||| resource $link_identifier resource $result_identifier	count=1
function_name	obtiene el ||| pdf get	count=3
function_name	variables de reescritura establecidas ||| reset rewrite vars	count=1
function_name	número total de conexiones ||| get total	count=1
function_name	borra un ||| delete	count=1
arg_pair	casi idéntico al ||| int $limit	count=1
return	apariencia de la ||| bool	count=1
function_name	de la fila recuperada ||| fetch	count=1
function_name	[function_name_1] excepción ||| [function_name_2] [function_name_1]	count=1
function_name	puede usar para establecer ||| set module	count=1
namespace	dsn ||| function	count=1
function_name	establece ||| set cascade	count=5
namespace	el array a ||| function	count=1
function_name	entrenamiento continuar sin ||| fann	count=1
return	objeto en formato ||| string	count=1
function_name	recibe ||| nsapi request	count=1
arg_pair	grado de control ||| array $other_options	count=1
return	ser usado en las ||| bool	count=1
arg_pair	hacia delante ||| int $result_type	count=1
function_name	[function_name_1] el color ||| [function_name_1] stroking [function_name_2]	count=1
function_name	procesa el html ||| load html	count=1
function_name	hash de ||| crypt	count=1
arg_pair	modo de ||| int $mode int $pri	count=1
return	estándar en la mayoría ||| bool	count=1
function_name	al entrenamiento continuar ||| fann get	count=1
namespace	una [namespace] ||| [namespace]	count=4
function_name	inicio de la línea ||| line	count=1
function_name	de estilo ||| set slide	count=1
arg_pair	directiva whence ||| int $pri	count=1
function_name	extensión phar ||| valid phar filename	count=1
function_name	objeto ||| object	count=2
return	activa en el servidor ||| bool	count=1
function_name	csr ||| openssl csr sign	count=2
function_name	[function_name_1] la transformación ||| [function_name_1] [function_name_2]	count=2
function_name	virtual con nombre ||| pvf	count=2
function_name	obtiene la propuesta de ||| getimagerenderingintent	count=1
arg_pair	provee un grado de ||| array $other_options	count=1
return	se buscarán los archivos ||| string	count=1
function_name	después de llamarla varias ||| odbc data	count=1
function_name	para guardar la información ||| save	count=1
function_name	libera toda la memoria ||| fbsql free result	count=1
function_name	la supervisión del ||| ctrl dispatcher	count=1
return	espera a ||| bool	count=1
function	[function_name_1] un archivo ||| [function_name_1] pvf [arg_pair_2]	count=2
function_name	valor actual del ||| checkbox set value	count=1
function_name	la función cubrid_col_size() ||| col size	count=1
function_name	destruye ||| offset unset	count=2
return	actual donde se buscarán ||| string	count=1
return	su valor ||| mixed	count=1
function_name	la última tupla ||| last	count=1
arg_pair	un grado ||| array $other_options	count=1
function_name	el número de campos ||| field count	count=1
arg_pair	una búsqueda en ||| string $msgid2 int $n	count=1
function	[function_name_1] string dado ||| [arg_pair_2] [function_name_1]	count=1
namespace	y llama a ||| gearmanworker	count=1
function_name	la imagen ||| image interlace	count=1
arg_pair	de página cookie...) ||| int $pagesize	count=1
function_name	generador de ||| highlight fragmenter	count=2
function_name	como valores ||| values	count=1
function_name	tipo ||| type	count=22
function_name	la consulta ||| query	count=1
function_name	de trabajo ||| svn	count=2
return	niveles de una ||| mixed	count=1
function_name	consulta siguiente si varias ||| next result	count=1
namespace	si el nodo es ||| tidynode	count=1
function_name	[function_name_1] [function_name_2] propiedades ||| [function_name_1] [function_name_2]	count=7
function_name	número de tendencias ||| get bias	count=1
arg_pair	de un ||| resource $p string $key	count=1
function_name	identificador de conexión necesario ||| oci connect	count=1
function_name	or ||| or	count=2
arg_pair	samconnection conecta el script ||| array $properties	count=1
arg_pair	se defina sobre las ||| zmqsocket $frontend zmqsocket $backend	count=1
rest	devuelve [function_2] ||| [return_1] [function_2]	count=1
namespace	devuelto por ||| function	count=1
arg_pair	data la cuál ||| string $data	count=1
function_name	esta ||| memory image	count=2
arg_pair	indentificador de resultado dado ||| resource $result_id	count=1
namespace	definida ||| arrayiterator	count=2
arg_pair	fann_read_train_from_file() ||| string $file_name	count=1
function_name	[function_name] sus códigos ||| [function_name] functions from	count=3
function_name	filas afectadas ||| ifx affected rows	count=2
function_name	de acceso calificadores ccl ||| ccl conf	count=1
function_name	que loadfromstring() puede leer ||| save	count=1
function_name	[function_name_1] la longitud ||| [function_name_1] max word [function_name_2]	count=1
return	las extensiones de la ||| array	count=1
function_name	el algoritmo estándar ||| crypt	count=1
return	colores de primer plano ||| int	count=1
function_name	una imagen a ||| image	count=1
arg_pair	rota el sistema ||| float $phi	count=1
function_name	identificador de ||| oci	count=1
namespace	objeto ||| serializable	count=1
function_name	segundo plano para ||| background	count=2
arg_pair	negro especificados al ||| float $blackpoint	count=1
function_name	eliminar drop por ||| drop	count=1
function_name	inverso ||| invert	count=1
function_name	retorna el numerador ||| numerator	count=1
function_name	manejador para ser ||| handler	count=1
function_name	[function_name_1] enviadas al ||| [function_name_1] [function_name_2]	count=3
function_name	abre un blob en ||| blob echo	count=1
namespace	las claves ||| gmagick	count=1
function_name	los definidos por el ||| remap	count=1
function_name	de la imagen ||| contrast image	count=1
namespace	número dado por ||| function	count=1
function_name	de neuronas ||| input	count=1
namespace	almacena un [namespace] ||| [namespace]	count=2
function_name	relación dada ||| dbplus	count=2
function	[function_name_1] devuelve un ||| [function_name_1] [arg_pair_2]	count=2
function_name	en por lo menos ||| set mlt	count=1
function_name	[function_name_1] cliente por ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] página cookie...) ||| [arg_pair_2] [function_name_1]	count=9
function_name	lee los datos de ||| read	count=1
function_name	ldap enviando [function_name_2] ||| [function_name_1] [function_name_2]	count=5
namespace	unix (1 de enero ||| function	count=1
arg_pair	formulario dado por form ||| resource $form resource $component	count=1
function_name	esta función analiza el ||| bbcode parse	count=1
function_name	valor actual ||| newt checkbox set value	count=1
arg_pair	intenta eliminar cualesquiera ||| resource $handle int $length	count=1
function_name	trazado ||| closepath	count=1
function_name	una fila en ||| fetch object	count=1
function_name	con barras invertidas antes ||| addcslashes	count=1
function_name	de estado ||| task status	count=1
arg_pair	dominio actual para una ||| string $domain	count=1
function	[function_name_1] cadena ||| [arg_pair_2] [function_name_1]	count=1
namespace	de bases ||| function	count=1
arg_pair	función cubrid_set_query_timeout() se usa ||| resource $req_identifier int $timeout	count=1
arg_pair	sistema de coordenadas ||| resource $p	count=1
function_name	mensajes md5 de ||| md5	count=1
arg_pair	tupla a relation ||| array $tuple	count=1
function_name	realice una salida ||| output	count=1
function_name	socket devuelto por ||| socket	count=1
function_name	lugar ||| using	count=1
arg_pair	a y b ||| float $b	count=1
namespace	obtiene información ||| function	count=1
function_name	a large object ||| pg lo close	count=1
return	envío ||| mixed	count=1
function_name	este para que ambos ||| add kernel	count=1
arg_pair	dos variantes ||| mixed $right	count=1
namespace	le ha ||| mongocursor	count=1
function_name	manejo de errores del ||| errors	count=1
function	[function_name_1] left top ||| [arg_pair_2] [function_name_1]	count=1
function_name	aparecen ||| addcslashes	count=1
function_name	negación not a nivel ||| variant not	count=1
function_name	información blob/clob de ||| lob export	count=1
function_name	la desencripta usando ||| openssl decrypt	count=1
function_name	operación curl ||| curl	count=1
function_name	ámbito del namespace ||| lookup namespace	count=2
return	en blanco u ||| string	count=1
arg_pair	un fichero ||| resource $font_index	count=1
function_name	lista de ||| ps open memory image	count=1
namespace	código posee la ||| intlchar	count=1
namespace	esta ||| function	count=3
arg_pair	pattern y ||| mixed $pattern	count=1
function_name	la imagen ||| image layers	count=1
function_name	un socket creado ||| stream socket	count=1
arg_pair	imágenes ||| resource $image bool $blendmode	count=1
return	no afecta al estado ||| int	count=1
arg_pair	de mensaje ||| resource $imap_stream	count=1
namespace	simulado ||| gmagick	count=1
namespace	nueva expresión regular ||| mongoregex	count=1
arg_pair	una característica específica dada ||| string $feature	count=1
function_name	guarda ||| pdf save	count=1
function_name	utf-8 al formato utf-16 ||| utf8 to utf16	count=1
function_name	blob ||| ifx free blob	count=1
function_name	la prueba ||| gmp	count=1
function_name	de archivo dado y ||| mailparse	count=1
namespace	error cuando la ||| rarexception	count=1
function_name	establece ||| mysqlnd qc set	count=1
arg_pair	simulado ||| int $x int $y	count=1
function_name	de umbral [function_name_2] ||| [function_name_2] error [function_name_1]	count=2
arg_pair	de input identificado ||| array $input	count=1
namespace	base de ||| sqlite3	count=1
function_name	del carácter espaciado ||| char space	count=1
function_name	definida por ||| uksort	count=1
function_name	utilizar para ||| set	count=1
function_name	la descripción de ||| cairo pattern get radial	count=1
namespace	retraso ||| gmagick	count=1
namespace	soapserver ||| soapserver	count=2
function_name	el mensaje de error ||| error	count=2
function_name	la última tupla ||| dbplus last	count=1
function_name	lista ||| open memory image	count=2
return	lo almacena en ||| bool	count=1
function_name	[function_name] y mueve ||| [function_name]	count=3
function_name	conexión en caso ||| yaz connect	count=1
arg_pair	de datos emita ||| string $event_name2	count=1
function_name	para modificar la ||| set	count=1
function_name	y ||| text	count=1
return	objetivo en ||| bool	count=1
return	interno de ||| bool	count=1
function_name	grises con un efecto ||| embossimage	count=1
function_name	palabra máxima ||| max word	count=1
function_name	grosor ||| imagesetthickness	count=1
function_name	donde ||| dbplus	count=1
function_name	lista de módulos definidos ||| modules	count=1
arg_pair	local en ||| string $local_file	count=1
function_name	considerara para remarcación ||| highlight fragsize	count=2
function_name	él ||| open	count=1
function_name	función devolverá ||| source	count=1
arg_pair	busca un elemento en ||| resource $checkboxtree	count=1
function_name	entonces en lugar ||| using	count=1
function_name	oci8 dada por statement ||| oci statement	count=1
function_name	id del objeto blob ||| ifx free blob	count=1
function_name	dirección del secundario que ||| get	count=1
function_name	false si ||| mcrypt module is	count=1
function_name	la operación [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de emitir advertencias ||| set	count=1
namespace	formato de puntos por ||| function	count=1
function	[function_name_1] dado por ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	tridimensional simulado aclarando y ||| int $height	count=1
function_name	la codificación ||| convert encoding	count=1
function_name	true si ||| module is	count=1
return	botón ||| void	count=1
function_name	del apuntador de archivo ||| mailparse	count=1
function_name	[function_name] xml con ||| xml [function_name] create	count=2
function_name	en ||| min doc frequency	count=4
function	una respuesta [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	del tanto por ciento ||| int	count=2
arg_pair	extendida para usarla después ||| string $extendedclass	count=1
arg_pair	mysql_field_name() ||| resource $result int $field_offset	count=1
function_name	cabecera ||| get request header	count=2
namespace	con value2 ||| splminheap	count=1
arg_pair	directorio al completo ||| string $path	count=1
function_name	una cadena de ||| chr	count=1
function_name	[function_name_1] importado ||| [function_name_1] [function_name_2]	count=1
function_name	la línea de ||| get	count=1
function	token [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	inserta la entrada ||| insert	count=1
namespace	objeto dado por ||| function	count=1
arg_pair	destinatarios cc y bcc ||| string $bcc	count=1
arg_pair	coincida con el ||| mixed $target mixed $fill	count=1
function_name	nombre de la clase ||| class	count=1
function_name	siguiente fila de ||| sqlsrv fetch	count=1
arg_pair	str ||| string $str string $charset	count=1
arg_pair	de datos de un ||| resource $statement mixed $field	count=1
function_name	superior ||| upper	count=2
function_name	el usuario) ||| restore error handler	count=1
arg_pair	delimiter como delimitador de ||| string $null_as	count=1
arg_pair	de direcciones ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	obtiene y ordena números ||| string $search_criteria string $charset	count=1
function_name	[function_name_1] extensión ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] un archivo ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	un parámetro ||| string $namespaceuri string $localname	count=1
function_name	establecer el valor actual ||| newt checkbox set value	count=1
arg_pair	se comporta de ||| string $password	count=1
function_name	un ||| path info	count=1
namespace	esquema en un ||| sdo_das_xml	count=1
function_name	límite del ||| resource limit	count=1
function_name	manejador de trabajo para ||| job handle	count=1
arg_pair	de datos cubrid y ||| resource $lob_identifier	count=1
function_name	de petición http ||| request	count=2
arg_pair	primera ocurrencia de ||| string $haystack string $needle	count=1
function_name	el primer atributo ||| ldap first attribute	count=2
function_name	seno ||| asin	count=1
namespace	los colores de primer ||| function	count=1
return	lista ||| array	count=1
function_name	la lista ||| ps open	count=1
function_name	que realice una salida ||| output	count=1
arg_pair	una tarea para ||| mixed $context	count=1
arg_pair	de que server_key ||| array $keys	count=1
function_name	que ||| mlt min doc frequency	count=4
function_name	usa la prueba probabilística ||| prob prime	count=1
arg_pair	coincidan más estrechamente con ||| resource $image1 resource $image2	count=1
function_name	una característica ||| tailable	count=1
arg_pair	sequence ||| string $sequence	count=1
return	recupera información sobre un ||| array	count=1
function_name	y ||| using	count=2
function_name	privado ||| private	count=1
arg_pair	[arg_pair_1] [arg_pair_2] través del ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	el máximo de épocas ||| max cand epochs	count=1
function_name	contexto de flujo ||| context	count=1
function_name	la asignación de memoria ||| apc sma	count=1
function_name	einer mime kopfzeile ||| mime encode	count=1
function_name	la descripción de ||| cairo scaled font get font matrix	count=1
function	escala [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	para preparar la respuesta ||| response writer	count=1
function_name	la instanciación del ||| on create	count=1
namespace	antes de los ||| function	count=1
function_name	devuelve el mime ||| mime	count=1
function_name	bloques o ||| block	count=1
function_name	pares ||| pspell config save repl	count=2
function	transforma el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	devuelve el tamaño ||| get size	count=4
function_name	textura de ||| polygon	count=1
function_name	csr dada ||| openssl csr	count=1
function_name	de alertas de accesibilidad ||| access count	count=1
namespace	intenta eliminar cualesquiera bytes ||| function	count=1
function_name	manejador de trabajo ||| job handle	count=1
arg_pair	de un ancho ||| string $text float $width	count=1
namespace	del id de ||| mongoid	count=1
function_name	punto actual a unas ||| ps moveto	count=1
function_name	extrase el ||| pid	count=1
namespace	ambos puedan aplicarse ||| imagickkernel	count=1
function_name	coloca una [function_name] ||| pdf place [function_name]	count=3
function_name	concatena ||| cat	count=1
function_name	se ||| memory image	count=2
function_name	de primer plano y ||| ncurses	count=1
function_name	establece la ||| fann set callback	count=1
namespace	como ||| throwable	count=1
function_name	del último error ||| errno	count=1
function_name	reintentos en ||| sybase deadlock retry count	count=1
arg_pair	una ||| mixed $context	count=4
function_name	defecto de entidades ||| set external entity loader	count=1
return	en las siguientes transformaciones ||| bool	count=1
function_name	devuelve ||| pgsql get	count=2
arg_pair	especificada por sequence ||| resource $imap_stream string $sequence	count=1
return	y el ||| array	count=2
arg_pair	path1 [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	nuevo limititerator ||| limititerator	count=1
function_name	una excepción de tipo ||| set using exceptions	count=1
arg_pair	comandos de listas desordenadas ||| string $achtung_wild	count=1
function_name	usada para establecer ||| cubrid set	count=1
function_name	cadena de instancia xml ||| load string	count=1
function_name	el tamaño ||| entry filesize	count=1
namespace	imagen que representa una ||| function	count=2
return	tiempo ||| int	count=1
function_name	devuelve el ||| imap msgno	count=1
function	documento xml [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	rellanar [namespace] ||| [namespace]	count=1
function_name	con la lista ||| list	count=1
function_name	fichero ttf ||| load ttf	count=1
function_name	cuenta de color asociada ||| getcolorcount	count=1
namespace	transacción iniciada por sqlsrv_begin_transaction() ||| function	count=1
namespace	las llaves que se ||| function	count=1
namespace	se dibujan ||| function	count=1
arg_pair	el parámetro stack es ||| string $stack	count=1
function_name	letras en ||| get	count=1
function_name	de interoperabilidad stubs específicas ||| stub	count=1
function_name	existe en el ||| array key exists	count=1
namespace	servicios colas o cualquier ||| zmqdevice	count=1
namespace	contiene el carácter especificado ||| function	count=1
function_name	opción de configuración ||| ini	count=1
function_name	cada archivo codificado ||| mailparse uudecode all	count=1
function_name	analiza ||| mb parse	count=1
namespace	tipo o false ||| function	count=1
return	puntero ||| int	count=1
function_name	[function_name_1] perfil ||| [function_name_2] [function_name_1]	count=1
function_name	de excepciones anterior el ||| exception handler	count=1
arg_pair	los bordes de la ||| int $y	count=1
function_name	a una única ||| add kernel	count=1
namespace	el [namespace] especficiado ||| [namespace]	count=1
function_name	glo ||| cubrid new glo	count=2
arg_pair	espacios en blanco ||| string $str	count=1
function_name	proveedor ||| add required	count=1
function_name	con algoritmos por bloques ||| block algorithm	count=1
function_name	la asignación de memoria ||| sma	count=1
namespace	que se an ||| function	count=1
function_name	color asociada ||| getcolorcount	count=1
function_name	obtener el iterator ||| iterator	count=1
function_name	solicitud actual ||| request	count=1
function	objeto [arg_pair_2] ||| [function_name_1] string $progid [arg_pair_2]	count=4
function_name	en la que las ||| frequency	count=1
function_name	los colores de primer ||| set	count=1
function_name	nombre del servidor anfitrión ||| get host	count=1
arg_pair	o algoritmos alternativos ||| string $salt	count=1
function_name	id especificado donde ||| by	count=1
arg_pair	primera ocurrencia de ||| string $haystack	count=2
function_name	ccitt en bruto ||| ccitt	count=1
namespace	mensaje especificado que está ||| function	count=1
arg_pair	proxy ||| string $action	count=1
function_name	de eventos ||| event buffer new	count=1
namespace	la prueba ||| function	count=1
namespace	a una ||| function	count=3
function_name	siguiente resultado ||| fetch	count=1
function_name	interfaces [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la ||| string	count=1
function_name	borra el archivo ||| ftp delete	count=1
function_name	para ser generados ||| set	count=1
function_name	de tipo id ||| set id	count=2
function_name	errores y alertas de ||| sqlsrv errors	count=1
function_name	trunca el archivo a ||| ftruncate	count=1
arg_pair	ser adquirido ||| bool $nowait	count=1
function_name	número total ||| fann get total	count=1
arg_pair	y ||| int $length	count=1
function_name	envía la acción ||| gupnp service proxy action	count=1
function_name	fichero ttf ||| ttf	count=1
function_name	la descripción ||| cairo matrix rotate	count=1
function_name	espera de ||| query timeout	count=1
function_name	continente que corresponde al ||| continent code by	count=1
return	el sistema de coordenadas ||| bool	count=1
namespace	ya ha sido ||| sdo_das_xml	count=1
function_name	seno hiperbólico ||| sinh	count=1
function_name	http de la ||| http	count=1
function_name	la propiedad ||| property	count=1
return	reinicializa el array ||| void	count=1
function_name	que ||| mlt min	count=2
namespace	unicode uax #9) ||| intlchar	count=1
arg_pair	evento que ||| mixed $fd	count=1
arg_pair	destinatarios cc [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
namespace	y que va hasta ||| function	count=1
function_name	de filas afectadas ||| affected rows	count=4
return	de ímágenes ||| bool	count=1
function_name	punto primario rojo de ||| image red primary	count=1
function_name	paso mínimo ||| set rprop delta min	count=1
arg_pair	almacenados ||| string $schema string $procedure	count=1
namespace	exporta la [namespace] ||| [namespace]	count=1
arg_pair	configura un ||| resource $parser	count=1
function_name	byte actual en ||| current byte	count=1
namespace	a menos que ||| function	count=1
arg_pair	un punto ||| int $property	count=2
function_name	consulta siguiente si varias ||| cubrid next	count=1
function_name	o cualquier ||| construct	count=1
function_name	de primer ||| ncurses	count=1
function_name	filtro de ||| filter	count=1
function_name	html ||| load htmlfile	count=2
arg_pair	enx ||| float $beta	count=2
function_name	pcos ||| pcos	count=1
function_name	incluidos [function_name] ||| mlt max num [function_name]	count=2
function_name	documento pdi ||| pdi	count=1
namespace	a partir de los ||| function	count=1
arg_pair	certificado x509cert proporcionado ||| mixed $x509cert bool $shortnames	count=1
function_name	objeto textflow ||| textflow	count=1
function_name	nombre de sitio ||| by name	count=1
arg_pair	el left_operand ||| string $left_operand	count=1
arg_pair	ømq pueden ||| zmqsocket $backend	count=1
arg_pair	callback a ser ||| mixed $callback	count=1
function_name	[function_name_1] asignación de ||| [function_name_2] [function_name_1]	count=4
function_name	lee ||| mailparse uudecode all	count=2
function_name	[function_name_1] extraidas ||| [function_name_2] [function_name_1]	count=8
arg_pair	un intérprete ||| resource $parser int $option	count=1
function_name	de ||| kernel	count=1
arg_pair	texto y opciones ||| string $optlist	count=1
return	en las ||| bool	count=4
function_name	candidatas en cascada ||| cascade candidate	count=2
arg_pair	del inicio de un ||| string $str	count=1
function_name	de candidatas en cascada ||| cascade candidate	count=1
function_name	de entidades ||| external entity	count=1
function_name	porción de ||| stristr	count=1
namespace	actual del ||| harupage	count=1
function_name	encuentra el campo ||| fbsql field	count=1
function_name	función devolverá la ||| data	count=1
namespace	función date() excepto que ||| function	count=1
function_name	de entrenamiento desde ||| train from	count=1
arg_pair	por mailbox ||| string $mailbox int $options	count=1
function_name	tantos documentos como este ||| set	count=1
arg_pair	pregunta sobre ||| string $keyword	count=1
arg_pair	los clientes en escucha ||| string $name	count=1
function_name	la fila recuperada ||| sqlsrv fetch	count=1
function_name	por la función glob() ||| glob	count=1
function_name	subject ||| strcspn	count=1
function	[function_name_1] recurso ||| [function_name_1] [arg_pair_2]	count=3
function_name	servicios ||| construct	count=1
namespace	función usa ||| function	count=1
function_name	sistema posix asociado ||| posix strerror	count=2
function_name	devuelve el [function_name_2] ||| [function_name_1] short [function_name_2]	count=1
arg_pair	hacer de intermediarios ||| zmqsocket $frontend	count=1
function_name	de estilo de ||| set slide	count=1
return	entonces en lugar ||| void	count=1
function_name	define los encabezados ||| headers	count=1
return	coordenadas especificadas en ||| bool	count=1
function_name	nombre del cursor activo ||| ingres cursor	count=1
function_name	sistema de coordenadas ||| pdf	count=2
function_name	de paso ||| get rprop delta	count=2
return	cromaticidad ||| array	count=2
function_name	el logo de php ||| php logo guid	count=1
return	este es ||| bool	count=1
arg_pair	la ||| resource $connection_id	count=1
function_name	la descripción de ||| cairo ps level to string	count=1
function_name	crea un documento html ||| html	count=1
arg_pair	unicode para un punto ||| mixed $codepoint	count=1
function_name	la frase de consulta ||| highlight use phrase	count=2
function_name	función devuelve el tipo ||| type	count=1
function_name	sólo texto ||| text	count=1
arg_pair	función callback ||| mixed $callback mixed $arg	count=1
arg_pair	ejecutar una ||| resource $connection	count=1
function_name	el pid del ||| get	count=1
function	[function_name_1] especificado ||| [function_name_1] name [arg_pair_2]	count=1
function_name	salidas para ||| set	count=1
function_name	del apuntador ||| mailparse	count=1
function_name	configuración de tidy a ||| tidy reset config	count=1
function_name	documentos como este ||| mlt min doc frequency	count=1
function_name	exporta ||| spki export	count=1
arg_pair	[arg_pair_1] se renombra/mueve ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	el valor predeterminado ||| close	count=1
namespace	array [namespace] ||| [namespace]	count=3
arg_pair	el índice dado ||| string $index string $newval	count=1
function_name	mediante imap_delete() o imap_mail_move() ||| undelete	count=1
return	imagen ||| gmagick	count=3
arg_pair	un método ||| int $height	count=1
arg_pair	mezcla el color de ||| mixed $colorize mixed $opacity	count=1
function_name	de la cabecera ||| header	count=1
return	string con la ||| string	count=1
function_name	lee datos [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	devuelve un array vacío ||| get	count=1
function_name	representa sólo texto ||| is text	count=1
function_name	procesa una respuesta ||| response	count=1
function_name	devuelve ||| zip	count=1
return	de una consulta en ||| bool	count=1
function_name	alternativa más próxima posible ||| imagecolorresolve	count=1
arg_pair	str ||| string $str string $character_mask	count=1
function_name	línea ||| line number	count=1
arg_pair	y de log ||| string $setting	count=1
arg_pair	sesión al almacenamiento ||| string $session_id	count=1
function_name	devuelve el tipo de ||| get type	count=1
arg_pair	las retrollamadas se ejecutan ||| array $patterns_and_callbacks	count=1
function_name	cubrid_col_get() ||| col get	count=2
function_name	datos ||| all	count=1
function_name	trabajo para la ||| job	count=1
namespace	objeto ||| hw_api	count=1
function_name	es ||| exceptions	count=1
function_name	blob en modo lectura ||| blob	count=1
function_name	el hash de un ||| crypt	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] bytea [arg_pair_2]	count=4
arg_pair	estilo de ||| int $type float $disp_time	count=1
function_name	en milisegundos para el ||| timeout	count=1
arg_pair	un valor de referencia ||| string $name mixed $value	count=1
function_name	una [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $username string $password	count=3
function_name	si un número ||| prob prime	count=1
function_name	que las palabras que ||| mlt min doc frequency	count=1
function_name	campo a devolver ||| alternate field	count=2
arg_pair	al servicio daemon debería ||| string $daemon string $address	count=1
function	[function_name_1] con key ||| [function_name_1] replace [arg_pair_2]	count=4
function_name	el conjunto ||| charset	count=1
return	caracter que contiene ||| string	count=1
arg_pair	que fgetss() intenta ||| resource $handle int $length	count=1
function_name	virtual actual donde ||| dbplus chdir	count=1
function_name	si y sólo si ||| using	count=1
function_name	cambia el propietario del ||| eio fchown	count=1
arg_pair	el fichero a un ||| string $filename	count=1
function_name	límite ||| resource limit	count=2
arg_pair	a unidades de b ||| resource $pdfdoc float $b	count=1
function_name	escala de la ||| scale	count=2
function_name	[function_name_1] campo ||| [function_name_1] [function_name_2]	count=4
function_name	el contenido ||| from	count=1
namespace	el tiempo máximo ||| gearmanclient	count=1
function_name	nuevo archivo pdf usando ||| pdf	count=1
function_name	del campo [function_name_2] ||| [function_name_2] [function_name_1]	count=6
rest	una [function_2] ||| [function_2] [return_1]	count=2
function_name	obtiene [function_name_2] ||| [function_name_1] image channel [function_name_2]	count=2
arg_pair	revisa una ||| string $uri string $method	count=1
function_name	la descripción ||| cairo pattern get radial	count=1
function_name	lee atributos ||| get attributes	count=1
function_name	mediante ||| all	count=1
function_name	devuelve el número de ||| num	count=7
function_name	o subsiguiente fichero de ||| types	count=1
function_name	la conexión especificada ||| sqlsrv	count=1
rest	la [function_2] ||| [return_1] [function_2]	count=1
function_name	obtiene el puerto ||| context get	count=1
function_name	[function_name_1] base de ||| [function_name_2] [function_name_1]	count=2
arg_pair	a**r)/gamma r * ||| float $a float $r	count=1
function_name	información sobre un proceso ||| get	count=1
function_name	primer plano y ||| color	count=1
arg_pair	cualquier píxel que coincida ||| float $fuzz	count=1
function_name	el ||| zip entry filesize	count=2
function_name	ingres [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	obtener el [return] de ||| [return]	count=1
function_name	[function_name_1] compresión para ||| [function_name_1] [function_name_2]	count=1
function_name	conocida por ||| is known	count=1
function_name	transacciones [function_name] ||| [function_name] get last	count=2
arg_pair	relleno con color ||| int $color	count=1
function_name	tie ||| breaker	count=1
function_name	manejador de declaración ||| decl handler	count=1
arg_pair	de colores ||| int $numcolors int $colorspace	count=2
arg_pair	un campo ||| resource $fdf_document	count=1
function_name	que las palabras ||| set mlt min doc	count=1
function_name	valores [function_name] ||| update [function_name]	count=1
function_name	verde ||| image green	count=1
arg_pair	con un [arg_pair] ||| [arg_pair]	count=1
function_name	si ||| gmp	count=1
function_name	entidades externas ||| entity loader	count=1
function_name	la alternativa ||| imagecolorresolve	count=1
return	en la dirección ||| bool	count=1
arg_pair	de intermediarios de ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	16 bytes en ||| string $binary bool $short_format	count=1
arg_pair	parámetro de un ||| resource $p	count=1
return	en el apuntador del ||| bool	count=1
function_name	la lista ||| ps open memory	count=1
function_name	[function_name_1] parámetros ||| [function_name_1] [function_name_2]	count=1
namespace	iterador hasta el ||| apciterator	count=1
arg_pair	con un nuevo par ||| mixed $value	count=1
function_name	interfaces ||| interfaces	count=1
namespace	o desactiva ||| function	count=1
function_name	facetas de fecha ||| facet date	count=3
function_name	país correspondiente a ||| country name	count=1
function_name	el componente de estadísticas ||| set stats	count=1
function_name	la acción especificada ||| gupnp service action get	count=1
arg_pair	layer contando la capa ||| int $layer	count=3
namespace	creado ||| sdo_das_xml	count=1
arg_pair	define el de estilo ||| float $disp_time	count=1
arg_pair	invertidas antes de ||| string $str	count=1
function_name	una ||| zip	count=1
function_name	entonces en lugar ||| using exceptions	count=1
namespace	que tiene el ||| function	count=1
arg_pair	los valores en assoc_array ||| array $assoc_array int $options	count=1
return	comprobando errores en la ||| bool	count=2
arg_pair	path1 y [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	renombra o mueve ||| rename	count=1
function_name	actual [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] record [arg_pair_2]	count=1
function_name	tamaño ||| size	count=4
function_name	dice [function_name] ||| mcrypt enc [function_name] block	count=1
namespace	designado por filename ||| function	count=1
arg_pair	una característica específica ||| string $feature	count=1
function_name	con el nombre especificado ||| symlink	count=1
namespace	como cursores de seguimiento ||| mongocursor	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] line [function_name_2]	count=4
arg_pair	usuario y la contraseña ||| string $password	count=1
function_name	a una visual ||| fribidi log2vis	count=1
function_name	en cascada es ||| fann get cascade	count=1
function_name	guid ||| guid	count=1
function_name	estado [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	conexión al ||| connect	count=1
return	sobre ||| mixed	count=1
namespace	y devolver ||| rarexception	count=1
function_name	para las solicitudes ||| sslchecks	count=1
arg_pair	almacena un [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	atributo representa una columna ||| db2 fetch	count=1
function_name	obtiene ||| get default	count=1
namespace	un [namespace] ||| [namespace]	count=7
namespace	para esta clase ||| reflectionclass	count=1
arg_pair	transformar str1 en ||| string $str1	count=1
function_name	vincular el array ||| bind	count=1
function_name	después de ||| data	count=1
function_name	existe en la codificación ||| mb	count=1
arg_pair	retrollamada a emplear durante ||| resource $ann collable $callback	count=1
namespace	reglas usadas por intérpretes ||| function	count=1
return	o filtro ||| void	count=1
function_name	entrenamiento desde una función ||| train from	count=1
namespace	xml ||| sdo_das_xml_document	count=2
namespace	emitir ||| rarexception	count=1
arg_pair	y un ||| resource $ann array $input	count=1
function	discontinuidad actual [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	valor de la ||| string $value	count=1
arg_pair	número fijo de colores ||| int $numcolors int $colorspace	count=2
function_name	sobre un proceso abierto ||| get status	count=1
namespace	cuando se rellena con ||| function	count=1
namespace	que es parte ||| function	count=1
arg_pair	texto para después ||| string $text	count=1
return	del cursor: si todavía ||| int	count=1
arg_pair	data ||| string $data string $mode	count=1
function_name	de mongocollection::find() este método ||| find one	count=1
function_name	punto primario verde de ||| image green primary	count=1
namespace	devuelve el ||| gmagick	count=4
namespace	mediante ||| function	count=3
namespace	restricción [namespace] la ||| [namespace]	count=1
function_name	lo menos tantos documentos ||| min doc frequency	count=1
function_name	null ||| null	count=2
function_name	msql asociado con ||| msql	count=1
function_name	cierra el conjunto de ||| finalize	count=1
function_name	este ||| mlt min doc	count=1
function_name	omisión) ||| disable debug	count=1
function_name	de interoperabilidad por ||| set	count=1
function_name	necesitan ser ||| addslashes	count=1
function_name	jerarquía entera de ||| checkout	count=1
function_name	baja prioridad y ||| low	count=1
return	en un gestor ||| bool	count=1
return	direcciones servicios colas ||| zmqsocket	count=1
function_name	parámetro socket ||| socket	count=1
return	que representan la ||| void	count=2
function_name	encuentra disponible la ||| ps open memory image	count=1
function_name	la cola de mensajes ||| queue	count=1
namespace	de ssl para ||| oauth	count=1
function_name	información [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	espacio de la ||| space	count=1
arg_pair	actual en una ||| string $msgid2	count=1
function_name	la de memcached::touch() con ||| touch by key	count=1
function_name	des ||| crypt	count=1
function_name	existe ||| exists	count=2
function_name	máscara de ||| mask	count=2
return	contiene la ||| string	count=1
namespace	cualquier abstracción ||| zmqdevice	count=1
function_name	conexión persistente [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	ldap devuelta ||| ldap	count=1
function_name	mínimo de épocas de ||| min	count=1
function_name	en por lo ||| mlt min doc frequency	count=1
function_name	a ||| bind	count=1
namespace	hash y devuelve si ||| quickhashstringinthash	count=1
arg_pair	por lotes ||| array $protocoloptions	count=1
function_name	parameter ||| set tie	count=2
function_name	al igual ||| close	count=1
function_name	de transparencia de ||| matte floodfill image	count=1
function_name	menos tantos ||| set mlt min doc frequency	count=1
function_name	asigna el evento ||| event	count=1
function_name	de columna actual para ||| current column number	count=1
arg_pair	se comporta de forma ||| string $charset	count=1
function_name	círculo con ||| ps arc	count=1
function_name	es true entonces ||| using exceptions	count=1
function_name	acepta uno dos o ||| number format	count=1
function_name	las cabeceras ||| request headers	count=1
return	al trazado actual desde ||| bool	count=1
function_name	se creó recientemente ||| pristine	count=1
function_name	prueba automática sobre el ||| module self test	count=1
function	paginación tamaño [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	acceso y modificación de ||| function	count=1
arg_pair	el nombre de relation ||| string $name	count=1
function_name	obtiene el id ||| id	count=1
arg_pair	y todas las estructuras ||| int $table	count=1
function_name	gestores ||| dba handlers	count=2
arg_pair	abstracción ||| zmqsocket $frontend	count=1
function_name	especifica el término de ||| lower bound	count=1
function_name	para que la ||| multi by	count=2
function	atributo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	de una imagen izquierda ||| image	count=1
function_name	de seguimiento tailable ||| tailable	count=1
function_name	la acción ||| service proxy action	count=1
function_name	último error ||| errstr	count=1
arg_pair	que puedan estar ||| string $str	count=1
function_name	la frase de ||| phrase	count=2
arg_pair	decir el ||| int $face	count=1
arg_pair	de ||| zmqsocket $frontend	count=4
arg_pair	la función va aquí ||| cairopssurface $surface int $level	count=1
function_name	datos del apuntador ||| uudecode	count=1
function_name	fila ||| fbsql fetch row	count=1
namespace	devuelve ||| ev	count=1
namespace	con el ||| sdo_das_xml	count=1
return	la almacena en ||| bool	count=1
function_name	añade varios componentes al ||| form add components	count=1
function_name	esquema ||| add	count=1
arg_pair	devuelve el código ||| int $error_code	count=1
function_name	de casillas de ||| newt checkbox tree find	count=1
function_name	añade ||| add	count=36
namespace	una excepción ||| exception	count=1
function_name	que la ||| get delayed by	count=1
arg_pair	fallará si key ya ||| string $key mixed $value	count=1
function_name	y de región ||| country and region	count=1
namespace	true ||| rarexception	count=1
namespace	proceso abierto ||| function	count=1
return	proceso abierto ||| array	count=1
namespace	de emitir advertencias y ||| rarexception	count=1
function_name	última [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	valor ||| checkbox set value	count=1
arg_pair	dada por key ||| string $key	count=1
function_name	equivalente de letra titular ||| totitle	count=1
arg_pair	de salto de ||| string $break	count=1
namespace	sentencias que no ||| function	count=1
namespace	cadena de error de ||| function	count=1
function_name	las tablas en ||| tables	count=1
function_name	última fila [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	un string ||| crypt	count=1
arg_pair	contenedor ||| string $frame_name	count=1
function_name	almacena ||| file	count=3
function_name	inicializar el phar ||| map phar	count=1
arg_pair	que se defina sobre ||| zmqsocket $frontend	count=1
function_name	una definida por el ||| create function	count=1
arg_pair	/status ||| resource $fdf_document string $status	count=1
arg_pair	a un fichero de ||| string $filename	count=1
arg_pair	evento que se va ||| resource $event mixed $fd	count=1
function_name	instancia xml ||| load string	count=1
arg_pair	name0 es un alias ||| string $name0	count=1
namespace	tar/zip no ejecutables ||| phardata	count=1
arg_pair	es un algoritmo ||| string $algorithm string $lib_dir	count=1
function_name	área de recorte ||| clip	count=1
function_name	de las tablas de ||| tables	count=1
function_name	es ||| set using	count=1
function_name	recupera el documento ||| document	count=1
function_name	devuelve un array [function_name_1] [function_name_2] mueve el puntero de ||| [function_name_2] [function_name_1]	count=2
return	entonces en ||| void	count=1
namespace	solo que el ||| directory	count=1
function_name	[function_name_1] nombre abreviado ||| [function_name_1] [function_name_2]	count=1
namespace	opcional se puede indicar ||| function	count=1
function	[function_name_1] un ||| [function_name_1] textblock [arg_pair_2]	count=1
function_name	cadena del formato utf-32 ||| utf32	count=1
function_name	lista de los ||| enchant broker list dicts	count=1
function_name	compartido y libera todos ||| share	count=1
function_name	de los atributos ||| attributes	count=1
function_name	coloca la siguiente fila ||| oci fetch	count=1
function_name	elemento ||| element	count=1
arg_pair	el criterio y ||| int $sortorderby int $sortdirection	count=2
function	información acerca [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	en [arg_pair] ||| [arg_pair]	count=3
function_name	retraso [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	los datos o información ||| info	count=1
namespace	xpath dada ||| domxpath	count=1
namespace	de secuencia de mensaje ||| function	count=1
return	información proporcionada en ||| bool	count=1
function_name	el último código ||| return code	count=1
function_name	registros en un archivo ||| px numrecords	count=1
function_name	afectadas ||| mysqli stmt affected	count=1
function_name	información sobre ||| get	count=1
return	del ||| array	count=1
return	si usar ||| solrquery	count=1
function_name	servidor apache ||| apache get	count=1
arg_pair	índice de ||| imagickpixel $color	count=1
arg_pair	devuelve str con ||| string $str string $encoding	count=2
function_name	traslada ||| pdf translate	count=2
function	[function_name_1] especificado en ||| [arg_pair_2] [function_name_1]	count=5
function_name	[function_name_1] type ||| [function_name_1] [function_name_2]	count=2
namespace	el fichero directorio o ||| function	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $msgid1 [arg_pair_2]	count=18
return	que ambos puedan aplicarse ||| void	count=1
function_name	grupos ||| getgroups	count=1
function_name	conexión en caso de ||| yaz connect	count=1
return	filtro ||| void	count=1
function_name	emitir ||| using	count=1
arg_pair	dibuja la ||| int $x	count=2
return	se incluya en ||| bool	count=1
function_name	de severidad ||| severity	count=2
function_name	número máximo de ||| max	count=5
arg_pair	datagrama en ||| string $errstr int $flags	count=1
function_name	aborta inmediatamente ||| base loopbreak	count=1
function_name	la extensión que definió ||| extension	count=1
arg_pair	name ||| string $name	count=3
arg_pair	por flag a ||| string $flag	count=1
function_name	curva bezier ||| curve	count=1
return	array que describe ||| array	count=1
function_name	[function_name_1] para remarcación ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] último error ||| [function_name_1] [function_name_2]	count=2
arg_pair	usando un método de ||| int $width int $height	count=1
function_name	capa de salida ||| function output	count=1
function_name	la representación en ||| to	count=1
function_name	devuelve una conexión ||| connect	count=1
arg_pair	función es ||| mixed $data	count=1
namespace	nombre del fichero ||| splfileinfo	count=2
arg_pair	parámetro plaintext con ||| string $plaintext	count=1
arg_pair	bordes de ||| int $x	count=1
function_name	si el argumento es ||| set using exceptions	count=1
function_name	documentos como ||| min doc frequency	count=1
function_name	país correspondiente ||| country name	count=1
namespace	que afecta a ||| function	count=1
arg_pair	del inicio ||| string $str	count=1
arg_pair	datos dados por data ||| string $data	count=2
function_name	los permisos del fichero ||| eio fchmod	count=1
function_name	una ||| msql fetch array	count=1
function_name	nombre corto para un ||| short name	count=1
function_name	dado y extrae cada ||| mailparse	count=1
function_name	de error dado ||| strerror	count=1
function_name	especificado si devuelve un ||| get supported	count=1
arg_pair	función devolverá la ||| resource $connection_id	count=1
function_name	logaritmo natural ||| log	count=1
arg_pair	conexión [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	unix ||| string	count=1
function_name	pares de sustitución junto ||| config save repl	count=1
function_name	la cadena de instancia ||| load	count=1
function_name	contraseña del ||| password	count=1
function_name	strings multibyte ||| mb ereg match	count=1
function_name	el ||| uasort	count=1
return	indicando error cuando ||| void	count=1
function_name	el último error ||| error string	count=1
function_name	desencripta ||| openssl decrypt	count=2
function_name	configuración ||| config count	count=1
arg_pair	conexión full-duplex ||| int $how	count=1
function	[function_name_1] columna especificada ||| [function_name_1] [arg_pair_2]	count=5
function_name	que las palabras ||| mlt min doc	count=1
function_name	descripción ||| cairo pattern add color stop rgb	count=1
function	[function_name_1] los datos ||| [function_name_1] resource $checkboxtree [arg_pair_2]	count=1
function_name	descripción ||| cairo scaled font get font	count=3
function_name	mime kopfzeile en ||| mime	count=1
namespace	que se van a ||| solrquery	count=1
namespace	de imagen jpeg o ||| function	count=1
namespace	en por lo menos ||| solrquery	count=1
function_name	ingres_query() o justo ||| ingres	count=1
function_name	complemento de caché ||| mysqlnd	count=1
arg_pair	en una base de ||| string $schema	count=1
function_name	recupera la variable character_set ||| client encoding	count=1
function_name	notación notation [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	geoip_country_code_by_name() devolverá la abreviación ||| country	count=1
arg_pair	expresión aritmética relacional o ||| array $arguments	count=1
function_name	de respuesta sin tratar ||| raw response	count=1
arg_pair	un resultado que ||| resource $connection string $qualifier	count=1
function_name	punto blanco de ||| setimagewhitepoint	count=1
arg_pair	píxel que coincida ||| mixed $fill	count=2
function_name	una lista con ||| list	count=1
function_name	paquete [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	destino [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	última fila [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	msglist al buzón ||| string $msglist	count=1
function_name	bézier desde el punto ||| curveto	count=1
function_name	para los mensajes ||| imap clearflag	count=1
arg_pair	abstracción que se defina ||| zmqsocket $backend	count=1
function_name	uso de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	número de filas ||| db2 num rows	count=1
function_name	calcula la tangente hiperbólica ||| trader tanh	count=1
function_name	deflate ||| gzdeflate	count=1
namespace	imagen mientras preserva ||| gmagick	count=1
function_name	los ||| construct	count=1
function_name	descripción de ||| cairo font face get type	count=1
arg_pair	la base de eventos ||| resource $event_base	count=1
function_name	mensaje para el ||| msgno	count=1
function_name	la zona horaria ||| geoip time zone by	count=1
arg_pair	rota la imgaen ||| int $ignore_transparent	count=1
namespace	una función definida por ||| arrayiterator	count=2
function_name	la variable ||| gettype	count=1
arg_pair	incrementalmente al interior del ||| resource $mimemail	count=1
function_name	[function_name_1] servidores de ||| [function_name_2] [function_name_1]	count=1
function_name	de reintentos ||| deadlock retry count	count=1
arg_pair	compone una imagen en ||| gmagick $source	count=1
function_name	propietario ||| eio fchown	count=2
function_name	de oracle ||| oci	count=9
arg_pair	por alpha y ||| resource $p float $alpha	count=1
arg_pair	de un ||| resource $ftp_stream	count=1
namespace	puerto de internet que ||| function	count=1
function_name	banderas [function_name] dado separadas ||| [function_name]	count=1
function_name	si y sólo ||| set using	count=1
namespace	devuelto ||| function	count=1
function_name	núcleo ||| add	count=1
arg_pair	de una ||| string $value	count=1
function_name	épocas ||| min cand epochs	count=1
function_name	campo siguiente al ||| next	count=1
function_name	grafema de ||| grapheme strripos	count=1
function_name	[function_name_1] al macenado ||| [function_name_2] [function_name_1]	count=3
arg_pair	binaria desde un fichero ||| resource $context	count=1
function_name	factor de decadencia ||| decay	count=1
function_name	plano y ||| set	count=1
arg_pair	una estructura de ||| int $num_input	count=1
return	string con el ||| string	count=1
arg_pair	contexto log_cmd_update ||| array $protocoloptions	count=1
function_name	implementa ||| subclass of	count=2
function_name	de tendencias ||| get bias	count=1
function_name	[function_name_1] máximo ||| [function_name_1] [function_name_2]	count=4
namespace	este serán ignoradas ||| solrquery	count=1
function_name	sido creado ||| types	count=1
return	que las palabras ||| solrquery	count=1
function_name	al nombre de ||| name	count=1
function_name	cubrid_drop() se usa ||| cubrid drop	count=2
function_name	contornea el trazado con ||| pdf stroke	count=1
function_name	dbplus_open() ||| dbplus chdir	count=2
namespace	datos de mysqlnd ||| mysqlnduhconnection	count=1
function_name	obtiene la [function_name_2] ||| [function_name_2] [function_name_1]	count=20
function_name	false si es ||| is	count=1
function_name	de las tablas ||| tables	count=1
return	mongo posee una ||| mongocursor	count=1
arg_pair	dado por ||| string $key	count=1
function	localización [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	binario ||| blob	count=1
namespace	a un ||| function	count=2
function_name	de bases de datos ||| db	count=1
arg_pair	un ||| resource $result	count=11
function_name	el límite ||| resource limit	count=1
function_name	devuelve un ||| get pixel iterator	count=1
function_name	función cubrid_lock_read() [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	el nodo actual ||| node	count=1
return	que se van ||| solrquery	count=1
arg_pair	toma ||| string $password int $options	count=1
arg_pair	existe todavía en ||| int $flag int $expire	count=1
namespace	archivo directorio o ||| function	count=1
function_name	negación lógica de ||| variant neg	count=1
function_name	y almacena el resultado ||| xdiff file patch binary	count=1
function_name	del servidor ||| server	count=2
arg_pair	evento que se ||| resource $event	count=1
return	fgets() excepto que fgetss() ||| string	count=1
function_name	un guid binario ||| mssql guid string	count=1
function_name	descripción ||| cairo surface get font options	count=2
function_name	personalizado de la ||| setup custom directory	count=1
function_name	tie breaker parameter ||| breaker	count=1
function_name	[function_name_1] para insertar ||| [function_name_2] [function_name_1]	count=1
function_name	traslada ||| translate	count=1
function_name	proveedor oauth ||| parameter	count=1
function_name	al flujo ||| stream	count=1
arg_pair	el valor de la ||| string $value	count=1
function_name	documentos como ||| set mlt min	count=1
namespace	serán ||| solrquery	count=1
arg_pair	función convierte un dominio ||| string $domain	count=1
namespace	php ||| function	count=2
return	a sybase_connect() con dos ||| resource	count=1
arg_pair	path1 y ||| string $path1 int $rev1	count=1
function_name	código ||| curl strerror	count=2
function_name	función socket_sendto() ||| sendto	count=1
function_name	la ||| frequency	count=2
arg_pair	una ||| string $type string $optlist	count=1
return	comporta de ||| resource	count=1
function_name	blob ||| blob echo	count=2
function_name	error una excepción de ||| set using	count=1
arg_pair	el user ||| resource $link_identifier string $user	count=1
arg_pair	espacio asociado ||| string $namespaceuri string $qualifiedname	count=1
return	se ||| mongocursor	count=1
function_name	computa el inverso ||| gmp invert	count=1
arg_pair	un archivo ||| resource $pdfdoc string $filename	count=2
function_name	objeto slob ||| slob	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| function bool xattr set [arg_pair_2] [arg_pair_1]	count=3
return	en un ||| bool	count=22
function_name	servicio y las ||| win32 start service	count=1
function_name	la última conexión usada ||| last	count=1
function_name	del [function_name] ||| [function_name]	count=1
function_name	establece el número ||| fann set	count=1
function_name	son el mismo ||| same	count=1
function_name	de la tabla actual ||| fbsql table	count=1
function	[function_name_1] proporcionado ||| [arg_pair_2] [function_name_1]	count=4
function_name	fila [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	base de datos que ||| sqlite3	count=1
arg_pair	desde ||| string $filename	count=1
arg_pair	comportamiento automático ||| bool $onoff	count=1
function_name	destruye ||| destroy	count=2
function_name	devuelve el ||| msgno	count=1
function_name	la ||| set mlt min doc	count=2
function_name	el número máximo de ||| max analyzed chars	count=1
function_name	de flujo o ||| stream socket client	count=1
return	especificado en ||| bool	count=3
arg_pair	de datos ||| string $data	count=1
return	de imagemagick [return] ||| [return]	count=3
namespace	actual a ||| harupage	count=1
arg_pair	resolución deseada ||| float $x_resolution float $y_resolution	count=1
namespace	contexto ||| zmqcontext	count=4
function_name	lo grande ||| fann get	count=1
function_name	obtener el nombre ||| get name	count=1
return	ser usadas en ||| bool	count=1
function_name	[function_name_1] el siguiente ||| [function_name_2] [function_name_1]	count=1
function_name	la frecuencia ||| min term frequency	count=1
function_name	blob que se haya ||| ibase blob	count=1
function_name	[function_name_1] enviadas al ||| [function_name_2] [function_name_1]	count=3
arg_pair	un método y ||| string $data string $method	count=1
return	posición ||| void	count=1
function_name	con unos ||| elements by tag name ns	count=1
function_name	crea una ||| create cdatasection	count=1
arg_pair	la función va aquí ||| cairomatrix $matrix1 cairomatrix $matrix2	count=1
arg_pair	una ||| string $host	count=1
function_name	la codificación ||| detect encoding	count=1
namespace	entero que describe el ||| ev	count=1
function_name	a usar para similitud ||| mlt	count=1
function_name	número de secuencia ||| imap	count=1
return	ruta ||| bool	count=1
function_name	de reintentos en ||| sybase deadlock retry count	count=1
function_name	se encuentra disponible la ||| image	count=1
function_name	de datos lob de ||| db2 lob read	count=1
function_name	descripción de ||| cairo pattern	count=6
function_name	este ||| add	count=1
function_name	función usa la ||| gmp	count=1
return	el puntero ||| bool	count=1
namespace	utilizado por arrayobject::getiterator() ||| arrayobject	count=1
function_name	monitoreo a ||| fam monitor directory	count=1
function_name	página pdf [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	msglist al [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	el texto text con ||| resource $pdfdoc string $text	count=1
namespace	alias ||| solrdocument	count=1
function_name	[function_name] del sistema ||| [function_name]	count=1
function_name	/status ||| status	count=1
namespace	un archivo tar ||| phardata	count=1
arg_pair	el string haystack ||| string $haystack	count=1
function_name	elimina todos los documentos ||| delete by	count=1
function_name	descripción ||| ps surface get	count=1
function_name	socket devuelto ||| socket	count=1
arg_pair	string str dado ||| string $str	count=1
function_name	a este para ||| add kernel	count=1
namespace	índice del ||| splfixedarray	count=1
function_name	false si no existen ||| ingres	count=1
function_name	información sobre la etiqueta ||| tag	count=1
function	[function_name_1] una ||| [function_name_1] image [arg_pair_2]	count=2
function_name	atributo en el ||| attribute	count=2
function_name	lectura/escritura definida por el ||| user pick server	count=1
function_name	establece una función de ||| set	count=1
arg_pair	establece el valor ||| string $value	count=1
function_name	asigna un valor ||| assign	count=1
namespace	la versión ||| function	count=1
function_name	la tupla previa de ||| prev	count=1
arg_pair	[arg_pair_1] una y ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	fgetss() intenta eliminar ||| int $length	count=1
function_name	campos ||| sybase fetch field	count=1
function_name	manejador de trabajo ||| job	count=2
arg_pair	un resultado con ||| resource $connection string $qualifier	count=2
arg_pair	las restricciones de ||| string $field_override	count=1
function_name	en ||| uudecode	count=1
function_name	xml que ||| add	count=1
function_name	menos tantos documentos como ||| set mlt min doc frequency	count=1
function_name	el control [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	recupera información ||| int $data_type	count=1
function_name	base de datos informix ||| ifx	count=1
function_name	frecuencia ||| mlt min doc	count=1
function_name	los valores rgb proporcionados ||| pdf setrgbcolor stroke	count=1
function_name	el diccionario indicado ||| closedict	count=1
function_name	devuelve ||| yaz get	count=1
return	distancia de ||| int	count=1
function_name	define el de ||| slide	count=1
namespace	de archivos que contenía ||| function	count=1
function_name	casos/registros/filas) afectadas ||| pg affected	count=1
namespace	en bruto o mediante ||| function	count=2
function_name	las facetas [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] copia de ||| [function_name_2] [function_name_1]	count=1
arg_pair	una nueva ||| array $rectangle	count=2
function_name	la descripción de la ||| cairo ps surface create	count=1
namespace	por sqlsrv_begin_transaction() incluye todas ||| function	count=1
function_name	árbol de casillas ||| newt checkbox tree find item	count=1
arg_pair	hacen referencia a ||| string $fk_owner	count=1
function_name	se encuentra ||| memory image	count=1
function_name	obtener ||| fgets	count=1
function_name	intenta borrar un ||| delete	count=1
function_name	relaxng del documento basándose ||| relax ngvalidate	count=1
function_name	tarea de prioridad baja ||| task low	count=1
function_name	la función mssql_free_statement() si ||| free statement	count=1
function_name	usarse para ordenar ||| array multisort	count=1
namespace	este para ||| imagickkernel	count=1
function_name	de estado ||| add task status	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] size [function_name_2]	count=2
function_name	[function_name_1] nombre de ||| [function_name_1] extension [function_name_2]	count=2
function	tabla [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] elemento está ||| [function_name_2] [function_name_1]	count=1
return	sets tie ||| solrdismaxquery	count=1
function_name	javascript al ||| javascript	count=1
function_name	el límite de ||| limit	count=1
function_name	establece el gestor ||| set	count=1
function_name	[function_name_1] parámetros ||| [function_name_2] [function_name_1]	count=2
arg_pair	aclarando ||| int $width int $height	count=1
arg_pair	un mensaje log que ||| int $priority string $message	count=1
arg_pair	un bloque ||| resource $pdfdoc	count=1
function_name	color ||| color value	count=2
arg_pair	iterar a través ||| resource $stmt int $colnum	count=1
function_name	agrega una nueva página ||| page	count=1
function_name	error ||| set error	count=1
function_name	del cliente usado por ||| client	count=1
function_name	obtiene el factor ||| trader get	count=1
function_name	el último error encontrado ||| error	count=1
return	solo que el ||| void	count=1
namespace	las capas ||| zmqdevice	count=1
namespace	segundo o subsiguiente fichero ||| sdo_das_xml	count=1
arg_pair	una cadena insensible a ||| string $haystack string $needle	count=2
arg_pair	se ||| zmqsocket $backend	count=1
function_name	de filas que se ||| set start	count=1
function_name	defina ||| construct	count=1
namespace	el algoritmo ||| function	count=1
namespace	código especificado tiene ||| intlchar	count=1
arg_pair	de 16 bytes en ||| string $binary bool $short_format	count=1
function_name	envía [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	una operación por lotes ||| array $protocoloptions	count=1
namespace	que contiene variables y ||| function	count=1
function_name	de una declaración de ||| decl	count=1
arg_pair	usa para iterar a ||| resource $stmt int $colnum	count=1
function_name	establece [function_name_2] ||| [function_name_1] cascade activation [function_name_2]	count=1
function_name	emitir advertencias y devolver ||| set	count=1
function	una [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	frecuencia ||| min doc	count=1
function_name	descripción ||| cairo scaled font get font options	count=2
function_name	fichero subido por ||| attachment	count=1
function_name	palabras que no ||| set mlt min doc frequency	count=1
function_name	de prioridad baja en ||| task low	count=1
function_name	[function_name_1] implementa ||| [function_name_1] [function_name_2]	count=2
arg_pair	el parámetro length ||| int $length bool $crypto_strong	count=1
arg_pair	in_charset a ||| string $in_charset	count=1
namespace	se especifica el parámetro ||| function	count=1
function_name	despliega los valores de ||| vprintf	count=1
namespace	de las que ||| function	count=1
arg_pair	en el calendario calendar ||| int $calendar int $month	count=1
return	dsn disponibles después ||| array	count=1
function_name	la etiqueta [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	el descenso vertical ||| descent	count=1
function_name	mongo ||| tailable	count=1
namespace	un objeto solr ||| solrobject	count=1
function_name	vinculada de oracle ||| oci bind	count=1
arg_pair	un método y ||| string $method	count=1
arg_pair	la de memcached::replace() con ||| int $expiration	count=1
arg_pair	propiedades correspondientes a ||| array $ctorparams int $row	count=1
function_name	el copyright de la ||| getcopyright	count=1
return	en el servidor de ||| bool	count=1
arg_pair	una ||| string $msgid2 int $n	count=1
function_name	el contexto especificado ||| stream context	count=1
namespace	de internet que ||| function	count=1
function_name	raíz para ||| set	count=1
function_name	la devuelve como un ||| get	count=1
function_name	especificado ||| is default namespace	count=2
function_name	de cuantía para ||| quantum	count=1
function_name	el color de relleno ||| cmykfill	count=1
function_name	devolverá ||| crypt	count=1
function_name	una única función de ||| add	count=1
function_name	que las ||| min	count=1
function_name	encontrados en la configuración ||| tidy config	count=1
namespace	de campos del documento ||| solrinputdocument	count=1
function_name	ha sido creado ||| types	count=1
function_name	modo especificado es para ||| mode	count=1
arg_pair	ancho especificado ||| float $width	count=1
return	comprueba si la ||| bool	count=1
arg_pair	y ||| int $height	count=1
function_name	añade un nuevo seguimiento ||| inotify add	count=1
function_name	gzip2 ||| bzwrite	count=1
arg_pair	un ||| string $directory	count=1
function_name	de sisitema de archivos ||| wrapper	count=1
function_name	cunstruye el ||| load	count=1
function_name	dos dimensiones con ||| extended	count=1
arg_pair	para el ||| resource $imap_stream	count=1
function_name	[function_name_1] mínima ||| [function_name_2] server [function_name_1]	count=4
function_name	crea una ||| create document	count=1
function_name	comentario ||| comment index	count=2
arg_pair	la de memcached::set() con ||| mixed $value int $expiration	count=1
return	definida por el usuario ||| void	count=2
function	desde una distribución [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	de filas del ||| rows	count=1
function_name	recomienda utilizar mongodb::lasterror() ||| prev error	count=1
arg_pair	de pajar incluyendo ||| string $needle	count=1
function_name	conjunto de caracteres ||| charset	count=1
arg_pair	provee de ||| bool $is_prefix	count=1
function_name	matriz para añadir ||| set	count=1
return	del host y ||| array	count=1
function_name	prioridad ||| base priority	count=1
function_name	fichero de un repositorio ||| svn	count=1
function_name	descripción de ||| cairo matrix transform point	count=1
function_name	obtiene la función ||| get	count=1
function_name	número máximo ||| cascade max	count=1
namespace	sus valores por omisión ||| function	count=1
function_name	el tipo [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
arg_pair	el sistema de coordenadas ||| resource $p	count=1
function_name	estilo de entrecomillado ||| quote	count=1
function_name	[function_name_1] valor ||| [function_name_1] [function_name_2]	count=1
namespace	la época unix (1 ||| function	count=1
arg_pair	memcached::set() con la ||| mixed $value int $expiration	count=1
function_name	configura las marcas ||| buffer watermark	count=1
arg_pair	caracter de salto ||| string $break bool $cut	count=1
namespace	cadena de error ||| function	count=1
function_name	devuelve el contenido ||| get	count=2
function_name	función analiza ||| parse url	count=1
namespace	la cadena ||| sdo_das_xml	count=1
function_name	diccionario ||| broker request dict	count=1
return	dado de la ||| int	count=1
function_name	cambia el propietario ||| fchown	count=1
arg_pair	data ||| string $data	count=6
function_name	[function_name_1] el índice ||| [function_name_1] size [function_name_2]	count=1
function_name	paso máximo ||| rprop delta max	count=1
function_name	odbc_exec() ||| odbc fetch	count=1
arg_pair	primera ocurrencia de un ||| string $needle	count=1
function_name	transforma ||| transform to doc	count=1
function_name	línea de [function_name_2] ||| [function_name_2] [function_name_1]	count=5
return	y ||| zmqsocket	count=1
arg_pair	dado ||| resource $result	count=1
function_name	cadena que [function_name] con ||| [function_name]	count=1
function_name	de la base de ||| db	count=1
arg_pair	pub_key_id ||| mixed $signature_alg	count=1
namespace	socket descrito por ||| function	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=5
arg_pair	etc..., a thickness píxeles ||| int $thickness	count=1
function_name	espara a que ||| loop	count=1
function_name	[function_name_1] que ||| [function_name_1] [function_name_2]	count=4
function_name	para establecer el ||| cubrid set	count=1
namespace	de unix o ||| function	count=1
function_name	parecida a sybase_connect() ||| pconnect	count=1
function_name	[function_name_1] intento ||| [function_name_2] [function_name_1]	count=6
function_name	que describe ||| result message	count=1
function_name	la representación que ||| to string	count=1
function_name	persistente ||| persistent	count=1
namespace	a ||| gearmanclient	count=1
function_name	la clave primaria de ||| odbc foreignkeys	count=1
namespace	una lista de ||| function	count=1
function_name	csr ||| csr sign	count=2
arg_pair	ciertas propiedades ||| int $field_offset	count=1
function_name	la descripción ||| cairo pattern create linear	count=1
function_name	petición al grupo de ||| eio	count=1
return	base del ||| string	count=1
return	tamaño actuales en la ||| bool	count=1
arg_pair	de éxito cero en ||| mixed $options	count=1
arg_pair	especificado de páginas ||| int $first_num	count=1
function_name	autocommit ||| fbsql autocommit	count=2
function_name	leer ||| read	count=1
function_name	texto ||| text	count=6
function_name	devuelve la zona horaria ||| geoip time zone by	count=1
function_name	atributo llamado name del ||| attribute	count=1
function_name	de primer ||| set	count=1
function_name	un blob en ||| ibase blob echo	count=1
function_name	instrucción sql ||| mssql next result	count=2
arg_pair	óptimo de ||| int $nullable	count=1
function_name	directorio vacío con ||| add empty dir	count=2
function_name	el siguiente [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	de ||| set interlace	count=1
function_name	si es ||| mcrypt module is	count=1
function_name	de escala ||| scale	count=2
arg_pair	compara value1 con ||| mixed $value1 mixed $value2	count=1
arg_pair	un nuevo ítem ||| resource $checkboxtree	count=1
function_name	de la consulta siguiente ||| next result	count=1
function_name	facetas de fecha de ||| facet date	count=1
function_name	de reescritura establecidas previamente ||| output reset rewrite vars	count=1
namespace	fichero phar que ||| phar	count=1
return	frecuencia en la ||| solrquery	count=1
function	[function_name_1] retrollamadas ||| [function_name_1] array $patterns_and_callbacks [arg_pair_2]	count=1
return	parte de un ||| bool	count=1
function_name	la cadena de error ||| bzerrstr	count=1
arg_pair	el comportamiento automático ||| resource $connection_id bool $onoff	count=1
function_name	determina el número máximo ||| max	count=2
function_name	obtiene información sobre la ||| getinfo	count=1
function_name	propiedad fuente ||| font	count=1
function_name	oauth ||| add	count=1
function_name	preparada y devuelve ||| execute	count=1
namespace	socket. ||| zmqdevice	count=1
function_name	índice ||| iterator index	count=1
function_name	una columna devuelta de ||| db2 fetch	count=1
function_name	intenta borrar un ||| delete service	count=1
arg_pair	obtiene un ||| resource $imap_stream	count=2
arg_pair	direcciones servicios ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	petición http ||| function	count=1
function_name	los iteradores añadidos con ||| array	count=1
function	propiedad [arg_pair_2] ||| [function_name_1] value enum [arg_pair_2]	count=3
namespace	utilizando el algoritmo ||| function	count=1
function_name	geoip_country_code_by_name() devolverá la abreviación ||| country code by name	count=1
return	con barras ||| string	count=1
function_name	un número ||| prob	count=1
function_name	máscara de recorte ||| clip mask	count=6
return	un efecto de ||| void	count=1
function_name	el peso de ||| getfontweight	count=1
function	[function_name_1] intérprete ||| [function_name_1] entity decl handler [arg_pair_2]	count=1
namespace	objeto reflectionclass ||| reflectionclass	count=1
function_name	las conexiones de ||| get	count=1
function_name	máximo ||| max	count=10
function_name	de ||| source	count=2
function_name	centro ||| imagefilledellipse	count=1
function_name	por la extensión phar ||| valid phar	count=1
function_name	de una ||| entry filesize	count=1
function_name	intenta borrar ||| win32 delete service	count=1
return	mientras está en ||| bool	count=1
function_name	la descripción ||| surface restrict to level	count=1
function_name	la descripción de la ||| cairo surface get font options	count=1
function_name	de pendientes de activación ||| activation steepnesses	count=1
arg_pair	que coincida ||| mixed $fill	count=2
arg_pair	0600 ||| string $dir	count=1
function_name	un número es primo ||| gmp	count=1
return	época unix (1 ||| int	count=1
function_name	el cambio del ||| fann get	count=1
function_name	nombre largo para ||| frame long name	count=1
arg_pair	key y almacena el ||| mixed $key int $padding	count=1
namespace	que ya ||| sdo_das_xml	count=1
function_name	vincula una variable de ||| bind	count=1
function_name	[function_name_1] los campos ||| [function_name_2] [function_name_1]	count=1
function_name	e/s del ||| eio readahead	count=1
arg_pair	[arg_pair_1] en ||| [arg_pair_2] [arg_pair_1]	count=8
arg_pair	un ||| mixed $class string $name	count=1
function_name	comporta de ||| sybase pconnect	count=1
function_name	http de respuesta ||| response	count=1
arg_pair	conexión link_identifier especificado ||| string $database_name resource $link_identifier	count=1
arg_pair	bien el conjunto óptimo ||| int $nullable	count=1
namespace	conexión [namespace] ||| [namespace]	count=2
function_name	[function_name_1] que la ||| [function_name_2] [function_name_1]	count=4
return	o ||| bool	count=12
function_name	con bind_textdomain_codeset() ||| bind textdomain codeset	count=1
function_name	uid del número ||| imap uid	count=1
function_name	en por ||| frequency	count=1
function_name	para guardar ||| save	count=1
arg_pair	efecto ||| int $x	count=1
function_name	la acción con parámetros ||| action	count=1
function_name	[function_name_1] una relación ||| [function_name_2] [function_name_1]	count=2
return	si el argumento ||| void	count=1
function_name	la versión ||| version	count=13
function_name	eliminia ||| curl multi remove handle	count=1
function_name	pasa sus argumentos como ||| args	count=2
function_name	el número de filas ||| sybase num rows	count=1
function_name	términos serán ||| mlt min term	count=1
namespace	de la biblioteca sqlite3 ||| sqlite3	count=1
function_name	nombre del [function_name_2] ||| function string [function_name_2] [function_name_1] resource $fdf_document string $fieldname	count=2
arg_pair	negro especificados al ||| float $blackpoint float $gamma	count=1
function_name	uso ||| get	count=1
function_name	si es uno de ||| module is	count=1
return	como array ||| array	count=1
function_name	disco ||| load from file	count=2
function	[function_name_1] [arg_pair_2] la ||| [function_name_1] [arg_pair_2]	count=4
function_name	geoip_country_code_by_name() devolverá la ||| country	count=1
function_name	[function_name] externos ||| get external [function_name]	count=4
arg_pair	y asocia el ||| int $rows	count=1
return	registrar ||| void	count=1
function_name	parámetros de solicitud deberían ||| params	count=1
function_name	esta ||| source	count=1
arg_pair	una función ||| string $name mixed $callback	count=1
function_name	fue subido mediante ||| move uploaded file	count=1
function_name	primer plano y ||| ncurses color set	count=1
arg_pair	dentro de una rutina ||| string $alias	count=1
function_name	resultado [function_name] result_identifier hasta ||| [function_name]	count=1
function_name	sybase asociado al ||| sybase	count=1
function_name	vincular el array ||| bind array by name	count=1
function_name	el ||| proc	count=1
function_name	libera ||| broker free	count=1
function_name	lugar ||| exceptions	count=1
function_name	reinició ||| errors	count=1
function_name	menos tantos documentos ||| min doc frequency	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2] string	count=4
function	[function_name_1] y de ||| [arg_pair_2] [function_name_1]	count=2
function_name	las flags establecidas ||| flags	count=1
function_name	obtener el nombre ||| get	count=1
arg_pair	[arg_pair_1] pattern y ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=2
function_name	pedido de ||| yp order	count=1
function_name	el identificador ||| crack	count=1
function_name	y extrae cada archivo ||| uudecode all	count=1
arg_pair	función usa ||| gmp $a	count=1
function_name	[function_name] de ||| [function_name] default	count=1
namespace	un entero que ||| ev	count=1
arg_pair	direcciones servicios colas ||| zmqsocket $backend	count=1
function_name	utilizar para que la ||| set by	count=1
function_name	número de reintentos en ||| retry count	count=1
function_name	y php del ||| fgetss	count=1
function_name	desplegar el logo ||| logo guid	count=1
function	[function_name_1] un ||| [function_name_1] notify [arg_pair_2]	count=1
function_name	documentos ||| min doc	count=1
arg_pair	usa para posicionar ||| int $position	count=1
namespace	recupera la instancia ||| yaf_dispatcher	count=1
arg_pair	object es de esta ||| string $class_name	count=1
function_name	palabra ||| min word	count=1
function_name	de [function_name] ||| [function_name]	count=4
function_name	especial indicando error cuando ||| exceptions	count=1
function_name	calcula la intersección ||| array uintersect	count=1
function_name	que las palabras ||| min doc	count=1
function	el objeto [arg_pair_2] ||| [function_name_1] string $progid [arg_pair_2]	count=4
function_name	guarda ||| save	count=7
arg_pair	base de datos predeterminada ||| string $database	count=1
function_name	siguiente si ||| next	count=1
function_name	recibe un array ||| recv	count=1
arg_pair	de un ||| string $domain string $map	count=1
function_name	como este serán ignoradas ||| mlt	count=1
function_name	aptos para usos criptográficos ||| random bytes	count=1
namespace	retorno que ||| function	count=1
function_name	crea un objeto char ||| ifx create char	count=1
function_name	rojo de ||| red	count=2
arg_pair	actual de req_handle ||| resource $req_identifier	count=1
return	el directorio base de ||| void	count=1
function_name	la ||| set using exceptions	count=2
function_name	base de datos establecida ||| dba	count=1
function	campo de [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=1
function_name	trabajo para ||| ping	count=1
namespace	los campos del documento ||| solrinputdocument	count=1
function_name	[function_name_1] complemento de ||| [function_name_2] [function_name_1]	count=7
function_name	añade ||| add config	count=2
function_name	en la que ||| min	count=1
function_name	cada capa ||| layer array	count=1
function_name	clase propia que será ||| class	count=1
return	oci_new_descriptor() ||| bool	count=1
function_name	excepto ||| fgetss	count=1
function_name	un array ||| get array copy	count=1
function_name	de solicitud site exec ||| ftp exec	count=1
arg_pair	o algoritmos alternativos que ||| string $salt	count=1
arg_pair	de relation al dado ||| resource $relation string $name	count=1
arg_pair	offset a la dirección ||| resource $lob_identifier string $offset	count=1
arg_pair	en la url ||| string $url	count=1
return	quita el primer valor ||| mixed	count=1
arg_pair	del modulo de a ||| gmp $a	count=1
function_name	argumento ||| set	count=1
arg_pair	de n por d ||| gmp $d	count=1
function_name	[function_name_1] valor gamma ||| [function_name_2] [function_name_1]	count=1
function_name	mensaje de ||| error	count=1
function_name	devuelve el último error ||| error	count=1
function_name	[function_name_1] cookie ||| [function_name_2] [function_name_1]	count=2
function_name	palabras ||| str word	count=1
return	a enviar en las ||| bool	count=1
function_name	añade un ||| form add	count=1
return	el retraso ||| int	count=1
function_name	devuelve ||| get start	count=1
function_name	la propiedad gravedad global ||| get gravity	count=1
return	caso de retornar un ||| int	count=1
function_name	funciones de sisitema ||| wrapper	count=1
function_name	elimina el semáforo dado ||| sem remove	count=1
namespace	función ya que ||| function	count=1
return	igual que ||| void	count=1
namespace	advertencias y devolver ||| rarexception	count=1
function_name	se ||| sybase pconnect	count=2
function	[function_name_1] de texto ||| [arg_pair_2] [function_name_1]	count=3
function_name	[function_name_1] blanco ||| [function_name_2] [function_name_1]	count=4
function_name	id [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	establece ||| bbcode set	count=1
function_name	modo de no-bloqueo ||| ftp nb	count=1
function_name	posix [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	watcher evperiodic y ||| callable $callback	count=1
function	los datos [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	la descripción ||| add color stop rgb	count=1
function_name	fila recuperada ||| fetch object	count=1
function_name	alfabéticos convertidos a mayúsculas ||| strtoupper	count=1
function_name	puedan aplicarse ||| kernel	count=1
arg_pair	de str donde ||| string $str	count=1
function_name	restaura el archivo rrd ||| rrd restore	count=1
function_name	crea un ||| pdf create	count=1
function_name	tantos documentos como ||| set mlt min doc	count=1
function_name	[function_name_1] un ||| [function_name_2] [function_name_1]	count=2
function_name	el [function_name] del servidor ||| get [function_name]	count=1
function_name	la siguiente [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	encuentre un ||| rarexception	count=1
function_name	la frecuencia ||| set mlt	count=1
function_name	en por lo menos ||| set mlt min	count=1
namespace	por filename a ||| function	count=1
function_name	almaceén de sesiones ||| reset	count=1
function_name	implementa directo a ||| images blob	count=1
arg_pair	imágenes y ||| imagick $image int $channeltype	count=1
function_name	una salida como ||| output	count=1
function_name	advertencias ||| using	count=1
function_name	[function_name] similar ||| solarize [function_name]	count=3
return	devuelve ||| array	count=4
arg_pair	formulario dado por form ||| array $components	count=1
function_name	devuelve la porción ||| mb stristr	count=2
arg_pair	por infilename y lo ||| string $infilename	count=1
function_name	función interbase ||| ibase	count=1
arg_pair	una versión [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	a la ventana ||| set	count=1
return	tiempo de conexión en ||| bool	count=1
function_name	copia los datos de ||| pgsql copy to array	count=1
arg_pair	disponibles ||| resource $connection_id	count=1
function_name	un archivo temporal ||| all	count=1
function_name	la descripción de la ||| surface get	count=2
namespace	que 1 se ||| function	count=1
namespace	a mongoid::__construct() ||| mongoid	count=1
function_name	[function_name_1] decadencia ||| [function_name_2] [function_name_1]	count=1
function_name	información con el objeto ||| info	count=1
function_name	establece el valor ||| fdf set status	count=1
return	la cromaticidad como una ||| array	count=1
function_name	de mensaje y ||| construct	count=1
function_name	contra las keys del ||| ukey	count=1
function_name	[function_name_1] la categoría ||| [function_name_2] [function_name_1]	count=1
function_name	byte en el ||| get byte	count=1
function_name	largo para un ||| id3 get frame long	count=1
function_name	línea actual para ||| get current line	count=1
function_name	desactiva el canal alfa ||| alpha channel	count=1
function_name	datos: únicamente los ||| drain	count=1
function_name	devuelve la ||| by	count=1
function_name	comprueba si ||| is	count=1
namespace	a nivel de bits ||| function	count=2
function_name	que [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	descripción de ||| cairo font options get hint style	count=1
namespace	la propiedad ||| reflectionproperty	count=2
function_name	conexión necesario ||| connect	count=1
arg_pair	éxito cero ||| string $zurl mixed $options	count=1
function_name	a com que eventos ||| com event	count=1
function_name	[function_name] a ||| db2 [function_name]	count=2
function_name	función cubrid_col_size() ||| col size	count=1
arg_pair	fichero de un ||| string $filename	count=1
function_name	cada servidor virtual de ||| server by path	count=1
function_name	de interoperabilidad stubs específicas ||| default stub	count=1
function_name	devuelve un [function_name] del objeto ||| get [function_name]	count=1
function_name	[function_name_1] devuelve un ||| [function_name_2] [function_name_1]	count=8
function_name	forma parecida a ||| sybase	count=1
return	un segundo o ||| void	count=1
function_name	remuestrea la imagen a ||| resample image	count=1
arg_pair	objeto gmagickpixel de ||| gmagickpixel $color int $width	count=1
function_name	pueden ser ordenados por ||| sort	count=2
function_name	como este serán ignoradas ||| mlt min doc frequency	count=1
function_name	usando ingres_query() en un ||| ingres	count=1
function_name	en la solicitud actual ||| nsapi request	count=1
function_name	este método ||| data	count=1
function_name	del parámetro facet.date.end ||| facet date end	count=1
function_name	consulta de ||| filter query	count=2
namespace	final ||| splfileobject	count=1
function_name	los valores rgb proporcionados ||| pdf setrgbcolor	count=1
function_name	borra ||| delete	count=8
arg_pair	bit de start hacia ||| int $start	count=2
return	http en la solicitud ||| array	count=1
function_name	unrar ||| exceptions	count=1
arg_pair	verifica el ||| string $signature string $plaintext	count=1
function_name	obtiene una [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	clase iterador que es ||| set iterator class	count=1
function_name	caché del código ||| apc	count=1
function_name	bit empleado durante un ||| bit	count=1
function_name	número del último error ||| errno	count=1
namespace	construye un nuevo contexto ||| zmqcontext	count=1
arg_pair	es una manera ||| mixed $value	count=1
arg_pair	un ||| resource $fam string $dirname	count=1
function_name	establece ||| set mlt count	count=2
function	coloca [function_name_1] [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=2
arg_pair	puerto nombre ||| string $host int $port	count=1
function_name	especifica el número máximo ||| max	count=2
function_name	comprobación de la ||| crack	count=1
arg_pair	la directiva whence ||| int $whence int $pri	count=1
function_name	[function_name_1] del campo ||| [function_name_1] [function_name_2]	count=2
namespace	contenido de ||| yaf_response_abstract	count=1
return	array de resultados ||| array	count=1
function_name	la ruta del directorio ||| enchant broker set dict path	count=1
function_name	parada empleada durante el ||| stop function	count=1
arg_pair	nth de ||| int $nth	count=1
function_name	una única ||| add	count=1
arg_pair	por key corresponda a ||| string $key	count=1
arg_pair	mensaje para el uid ||| resource $imap_stream int $uid	count=1
function_name	de lecturas ||| set slave	count=2
namespace	campo ||| solrdocument	count=1
arg_pair	domain por ||| string $codeset	count=1
function_name	datos lob de ||| lob read	count=1
function_name	establece el punto de ||| callback set	count=1
function_name	común explainother ||| explain other	count=1
function_name	sólo si el ||| set using exceptions	count=1
function	entrada descrita [arg_pair_2] ||| [function_name_1] insert [arg_pair_2]	count=3
namespace	que esta ||| function	count=1
namespace	unicode ||| intlchar	count=3
return	dado y extrae ||| array	count=1
function_name	la puesta ||| date sunset	count=1
function_name	otro núcleo ||| add	count=1
function_name	establece una función ||| newt set	count=1
function_name	el nombre largo para ||| get frame long name	count=1
function_name	imagen ||| annotate image	count=1
return	en datos de entrenamiento ||| bool	count=2
function_name	carp::croak de ||| apd croak	count=1
function_name	binaria ||| binary	count=1
arg_pair	coincida con el ||| float $fuzz	count=1
function_name	de ||| ps open	count=1
function_name	la dirección ipv4 del ||| gethostbyname	count=1
function_name	datos de entrenamiento ||| train data	count=2
function	tupla de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	lista de parámetros ||| open memory	count=1
arg_pair	apariencia de un ||| resource $fdf_document string $field_name	count=1
namespace	al estado del ||| mongocursor	count=1
arg_pair	timestamp y ubicación ||| int $format	count=2
function	[function_name_1] una declaración ||| [arg_pair_2] [function_name_1]	count=1
function_name	una lista ||| enchant broker list dicts	count=1
function_name	memcached::touch() con ||| touch	count=1
function_name	devuelve la escala de ||| db2 field scale	count=1
function_name	un género correspondiente ||| genre	count=1
function_name	un ||| by name	count=1
namespace	posición actual ||| harupage	count=1
arg_pair	imágenes usando un método ||| int $width	count=1
function_name	una salida como ||| sandbox output	count=1
function_name	de envío ||| odbc	count=1
function_name	línea del punto ||| line to	count=1
namespace	o false en ||| function	count=2
return	a la ||| void	count=1
function	acción javascript [arg_pair_2] ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=2
function_name	devuelve la ruta del ||| get temp dir	count=1
arg_pair	una definición de una ||| string $contents int $options	count=1
function_name	como ||| to	count=1
function_name	[function_name_1] salidas de ||| [function_name_1] [function_name_2]	count=3
function	[function_name_1] codificación ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	de memcached::getmulti() con la ||| string $cas_tokens int $flags	count=1
function_name	[function_name_1] de relación ||| [function_name_2] [function_name_1]	count=2
function_name	están habilitadas o ||| stats	count=1
function_name	desplazamiento del error ||| error shift	count=4
return	en la mayoría ||| bool	count=1
function_name	si el ||| exceptions	count=1
arg_pair	defina sobre ||| zmqsocket $backend	count=1
return	imagen mientras preserva ||| gmagick	count=1
arg_pair	por variable_key ||| int $variable_key	count=1
function_name	cubrid_lob2_new() ||| cubrid lob2 close	count=2
namespace	sencilla de usar yaf_view_simple::assign() ||| yaf_view_simple	count=1
function	[function_name_1] de value ||| [arg_pair_2] [function_name_1]	count=2
function_name	los datos especificados por ||| dba fetch	count=1
function_name	el mínimo de épocas ||| min	count=1
function_name	número de filas en ||| num rows	count=1
function_name	retraso de la imagen ||| get image delay	count=1
function_name	de imagen ||| image	count=6
namespace	de forma parecida ||| function	count=1
function_name	string que describe el ||| result message	count=1
function_name	del apuntador de archivo ||| mailparse uudecode	count=1
arg_pair	medio enx ||| float $beta	count=2
function_name	[function_name_1] insertada o ||| [function_name_2] [function_name_1]	count=3
function_name	un segundo o subsiguiente ||| add	count=1
function_name	el número de secuencia ||| msgno	count=1
function_name	encuentra ||| ps open memory image	count=2
arg_pair	los datos en data ||| int $linebreak	count=1
function_name	datos en ||| input	count=1
function_name	el indicador de ||| gzrewind	count=1
function_name	la descripción ||| cairo svg version to string	count=1
function_name	tantos documentos como este ||| doc frequency	count=1
arg_pair	link_identifier ||| string $database_name resource $link_identifier	count=1
function_name	lista de los ||| broker list	count=1
function_name	cuyo coseno hiperbólico es ||| acosh	count=1
function_name	determina lo ||| fann	count=1
function_name	cliente de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	de color ||| int	count=1
function_name	decodifica el string ||| decode	count=1
function_name	desde el parámetro rows ||| copy from	count=1
function_name	los encabezados a ||| set soap headers	count=1
function_name	bloque ||| block code	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] float $ury [arg_pair_1]	count=2
return	recomiendo para entornos en ||| bool	count=1
return	versión plural de ||| string	count=1
arg_pair	éxito cero en ||| mixed $options	count=1
function_name	la respuesta [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	en un vector de ||| array $input_vector	count=1
function_name	aumenta ||| apc inc	count=1
arg_pair	result set ||| resource $result int $index	count=1
function_name	ldap enviando ||| ldap	count=1
function	primer atributo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	string binario ||| blob	count=1
function_name	versión plural de gettext() ||| ngettext	count=1
function_name	comprueba si existe ||| exists	count=1
function_name	producto de valores ||| product	count=1
function_name	establecer el valor ||| set value	count=1
namespace	mientras preserva los ||| gmagick	count=1
function_name	dígito ||| for digit	count=1
function	existe en [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	base de ||| mysql drop db	count=1
function_name	a carboncillo ||| charcoal	count=1
function_name	con ||| shm put var	count=1
function	[function_name_1] una archivo ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	un bloque ||| resource $stmt	count=1
function_name	mediante el identificador ||| closedict	count=1
return	obtiene [return] caracter del ||| [return]	count=1
function_name	codificación ||| convert encoding	count=2
namespace	soportados por esta ||| function	count=1
return	los datos contenidos en ||| bool	count=1
arg_pair	una ||| string $connection_string	count=1
namespace	de una ||| function	count=1
function_name	documentos como este ||| set	count=1
function_name	comprobación de indices ||| array udiff assoc	count=1
function_name	los ||| chdir	count=1
function_name	de ||| raiseimage	count=2
arg_pair	un array ||| array $array int $flags	count=1
function_name	[function_name_1] índice ausente ||| [function_name_2] [function_name_1]	count=4
return	cada ||| array	count=1
function_name	mueve ||| move	count=2
arg_pair	mayoría de las ||| string $character_set	count=1
function_name	la ||| prob	count=2
function_name	con los nombres ||| names	count=1
function_name	borrar un servicio ||| win32 delete service	count=1
return	que closedir() solo que ||| void	count=1
function_name	como ||| mlt min doc	count=1
function_name	el número ||| sybase num	count=1
namespace	devuelve el número de ||| function	count=1
arg_pair	path [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	bloque de texto con ||| string $text	count=1
function	última [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	una característica ||| mongocursor	count=1
arg_pair	para usar [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
return	menos tantos documentos ||| solrquery	count=1
function_name	obtiene información sobre el ||| error get	count=1
function_name	con la función px_create_fp() ||| tablename	count=1
function_name	de entrada para ||| fann set input	count=1
function_name	elementos con el nombre ||| name	count=1
namespace	puntero de el ||| splfileobject	count=1
namespace	imagickpixel como ||| imagickpixel	count=1
function_name	[function_name_1] el que ||| [function_name_2] [function_name_1]	count=1
function_name	información sobre dicho hash ||| info	count=1
function_name	[function_name_1] elemento está ||| [function_name_1] [function_name_2]	count=1
namespace	emitir advertencias ||| rarexception	count=1
function_name	la descripción ||| cairo format stride for width	count=1
arg_pair	devuelve el ||| resource $imap_stream	count=1
function_name	trata ||| push	count=1
function_name	prioridad baja en ||| task low	count=1
arg_pair	varios arrays al mismo ||| array $array1	count=1
arg_pair	de fichero fd ||| mixed $fd int $uid	count=1
function_name	método no afecta al ||| count	count=1
return	por lo menos tantos ||| solrquery	count=1
function_name	frecuencia en la ||| set	count=1
function_name	recibe todas ||| request	count=1
function_name	una única función de ||| kernel	count=1
arg_pair	de un [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	es ||| mixed $data	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] socket [function_name_2]	count=2
function_name	tarea y devuelve ||| do	count=1
function_name	la función geoip_db_avail() ||| db avail	count=1
return	cierra ||| bool	count=2
function_name	las posiciones de ||| from neuron	count=1
namespace	posición actual ||| solrdocument	count=1
function_name	campo especificado por ||| oci field	count=1
function_name	por ||| mlt min	count=1
function_name	extraidas por ||| ifx num	count=1
function_name	módulos cargados ||| get modules	count=1
arg_pair	pajar incluyendo la aguja ||| string $haystack string $needle	count=1
function_name	de entidades ||| entity decl	count=1
arg_pair	de los ||| array $callbacks	count=1
namespace	entrada ||| ziparchive	count=11
function_name	línea en la ||| line	count=1
function_name	de estado del servidor ||| task status	count=1
function_name	especifica el término ||| lower bound	count=1
function_name	salidas para ||| fann set	count=1
return	con barras invertidas ||| string	count=1
function_name	de dsn disponibles después ||| data	count=1
function_name	establece ||| fann set cascade num	count=1
function_name	función devuelve true si ||| module is	count=1
arg_pair	la ruta en la ||| string $path bool $recursive	count=1
function_name	que se defina sobre ||| construct	count=1
function	[function_name_1] dado ||| [arg_pair_2] [function_name_1]	count=4
function_name	servidores ||| ping	count=1
arg_pair	secreto para ||| string $token_secret	count=1
function_name	añade un ||| add	count=6
function_name	tantos documentos ||| mlt min doc frequency	count=1
function_name	el último intento ||| db2 conn error	count=2
function_name	rango de ||| range	count=2
function_name	las cabeceras ||| headers	count=6
return	en los búferes ||| bool	count=1
function_name	las extensiones de ||| spl autoload extensions	count=1
function_name	descripción de ||| cairo pattern set filter	count=1
function_name	sistema de ||| rotate	count=1
namespace	de dsn ||| function	count=1
function_name	directorio actual ||| getcwd	count=1
arg_pair	bordes de la ||| int $height	count=1
namespace	a ||| harudestination	count=1
return	de una ||| gmagick	count=1
return	en la copia ||| bool	count=1
return	otro núcleo («kernel») a ||| void	count=1
namespace	de enero ||| function	count=1
function_name	recurso curl en formato ||| curl	count=1
function_name	el tipo de ||| field type	count=1
return	devuelve [return] con ||| [return]	count=1
arg_pair	una ||| string $width string $height	count=1
function_name	[function_name_1] iterador ||| [function_name_1] inner [function_name_2]	count=4
arg_pair	un ||| resource $pxdoc	count=2
function_name	pares ||| pspell config repl	count=1
function_name	ideal especificado ||| highlight regex slop	count=1
arg_pair	de color para un ||| resource $image int $red	count=2
function_name	devuelve ||| to	count=4
function_name	comporta de forma ||| pconnect	count=1
function_name	distribución de lecturas ||| get slave	count=1
function	xml desde [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	especifica un ||| string $fragmenter string $field_override	count=1
return	[return] una base ||| [return]	count=3
function_name	imagen png ||| load png	count=1
function_name	tangente para cada ||| trader tan	count=1
function	la propiedad [arg_pair_2] ||| [function_name_1] value enum [arg_pair_2]	count=3
function_name	fila ||| sqlsrv fetch object	count=2
arg_pair	[arg_pair_1] str en ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	servidor soap que se ||| function	count=1
function_name	facet.limit ||| set facet limit	count=2
arg_pair	un grado de control ||| array $env array $other_options	count=1
namespace	errores ||| hw_api_error	count=1
function_name	espacio ||| is default	count=1
arg_pair	estilo ||| int $style	count=1
return	de mensaje para ||| int	count=1
function_name	establecer ||| fann set weight	count=1
function	las [arg_pair_2] ||| [function_name_1] array $patterns_and_callbacks [arg_pair_2]	count=4
function	nombre [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	coordenadas ||| pdf	count=2
return	caracter que contiene el ||| string	count=1
function_name	el valor ||| set value	count=1
arg_pair	posterior uso con ifx_do() ||| mixed $blobidarray	count=1
function_name	imap_mail_move() ||| undelete	count=1
function	borra un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name] textual ||| [function_name]	count=1
return	un polígono [return] ||| [return]	count=1
function_name	del espacio de nombres ||| namespace	count=2
function_name	una excepción de tipo ||| using exceptions	count=1
function_name	no ||| svn	count=1
function_name	objeto respuesta actual ||| get response	count=1
arg_pair	un método ||| string $method	count=1
function_name	que las ||| set mlt	count=1
function_name	devuelve una lsita ||| get	count=1
function_name	del id de ||| get	count=1
function_name	el inverso ||| gmp invert	count=1
namespace	entrada ||| arrayiterator	count=1
namespace	variable ||| function	count=1
function_name	la descripción de ||| cairo pattern create rgb	count=1
function_name	la actual [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	obtiene ||| get path info	count=1
function	[function_name_1] las estructuras ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
function_name	establece la calidad de ||| set	count=1
function_name	excepción ||| using	count=1
arg_pair	caracter de salto ||| string $break	count=1
function_name	este serán ||| doc frequency	count=1
function_name	la descripción de ||| cairo pattern create radial	count=1
function_name	usando el certificado ||| openssl pkcs7 sign	count=1
function_name	la descripción ||| cairo pattern get	count=6
namespace	atributos ||| hw_api_object	count=1
namespace	la api graphicsmagick ||| gmagick	count=1
arg_pair	final de pajar incluyendo ||| string $needle	count=1
function_name	existen ||| ingres	count=1
arg_pair	y de log ||| string $setting mixed $value	count=1
function_name	la descripción de la ||| surface create	count=1
namespace	los caracteres que ||| function	count=1
function_name	si una variable global ||| is	count=1
arg_pair	cero en caso ||| mixed $options	count=1
function_name	uid del número de ||| imap uid	count=1
arg_pair	sybase_connect() ||| string $servername string $username	count=1
function_name	la ||| load	count=1
function_name	inicio de un ||| ltrim	count=1
function_name	o información con ||| info	count=1
function_name	que las palabras que ||| set	count=1
namespace	por ejemplo su desplazamiento ||| function	count=1
arg_pair	borrar para transformar str1 ||| string $str1	count=1
function_name	método de disposición de ||| dispose	count=2
function_name	más opciones para ||| options	count=1
namespace	matriz con las claves ||| gmagick	count=1
function_name	buscarán ||| dbplus chdir	count=2
return	una imagen mientras ||| gmagick	count=1
function_name	closedir() solo que el ||| close	count=1
function_name	un ||| imap gc	count=1
function_name	colecciones de ||| collection	count=1
arg_pair	valor de retorno de ||| int $type mixed $value	count=1
arg_pair	[arg_pair_1] línea discontinua ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	filas que ||| set	count=1
namespace	de filas que se ||| solrquery	count=1
function_name	cubrid_lock_read() se usa ||| cubrid lock read	count=2
arg_pair	parámetro length ||| int $length	count=1
function_name	[function_name_1] xmlrpc base64 ||| [function_name_2] set [function_name_1]	count=2
function_name	lecturas ||| set slave	count=1
function_name	etiqueta dado por name ||| tag	count=1
function_name	canal de color especificado ||| get color value	count=1
function_name	devuelve el último error ||| dict get error	count=1
arg_pair	objeto watcher evperiodic ||| int $signum callable $callback	count=1
function_name	función definida ||| uasort	count=1
return	puntero de el ||| int	count=1
function_name	[function_name_1] retropropagación desde ||| [function_name_1] [function_name_2]	count=1
namespace	si el puntero ||| oci-lob	count=1
return	del string dado ||| int	count=1
function_name	aborta inmediatamente el ||| loopbreak	count=1
function_name	acción ||| device action	count=1
namespace	hace que ||| function	count=1
function_name	argumento es true ||| set using exceptions	count=1
function_name	objetivo y esté ||| floodfill	count=1
arg_pair	negro especificados ||| float $blackpoint float $gamma	count=1
function_name	establece la ||| timezone set	count=1
function_name	ha expirado y la ||| dead	count=1
arg_pair	el búfer de ||| int $buffer	count=1
arg_pair	usar mapreduce ||| array $pipeline array $options	count=1
arg_pair	forma parecida ||| string $charset	count=1
function_name	[function_name_1] parámetro facet.date.hardend ||| [function_name_1] [function_name_2]	count=1
return	dado de la posición ||| int	count=1
arg_pair	medio enx y ||| float $beta	count=2
function_name	extensión que definió ||| extension	count=1
function_name	devuelve el color del ||| get color	count=1
return	los ||| int	count=2
function_name	frecuencia ||| mlt min doc frequency	count=2
arg_pair	nth ||| int $nth	count=1
arg_pair	en el servidor ftp ||| string $remote_file	count=1
function_name	[function_name_1] notación notation ||| [function_name_2] [function_name_1]	count=2
function_name	guardar la ||| save	count=1
function_name	carga un segundo o ||| add	count=1
arg_pair	el parámetro stack es ||| string $stack string $offset	count=1
function_name	una [function_name] usada para ||| pspell [function_name]	count=1
function_name	múltiples recursos curl ||| curl multi	count=1
function_name	una respuesta ||| handle response	count=1
function_name	[function_name_1] fuente cargada ||| function float [function_name_1] [function_name_2] resource $pdfdoc int $font	count=2
function_name	tantos documentos como ||| set	count=1
return	entrada/salida en ||| int	count=1
arg_pair	de acceso recursivamente path1 ||| int $rev1	count=1
function_name	la lista ||| open memory	count=1
function_name	respuesta ||| handle response	count=1
function	importa [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	crea un directorio con ||| string $path	count=1
function_name	ssl para las solicitudes ||| set sslchecks	count=1
function_name	imap si los ||| imap	count=1
function_name	nombre ||| field name	count=1
return	lo menos ||| solrquery	count=1
function_name	código [function_name] ||| [function_name]	count=1
arg_pair	este es el ||| mixed $xsd_file string $key	count=1
function_name	número de tendencias de ||| bias array	count=1
arg_pair	varias veces) ||| int $fetch_type	count=1
arg_pair	de espacio asociado ||| string $namespaceuri string $qualifiedname	count=1
arg_pair	el oid de la ||| string $oid	count=1
function_name	para [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	azul de la ||| blue	count=2
function_name	información sobre un ||| get status	count=1
function_name	phar ||| valid phar	count=1
function	de cadena [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
return	activa en ||| bool	count=1
arg_pair	genera un ||| array $configargs	count=1
arg_pair	y asocia el ||| int $cols	count=1
namespace	varios valores que se ||| function	count=1
namespace	conocia como ||| mongocursor	count=1
function_name	fbsql_fetch_array() con ||| fbsql fetch	count=1
function_name	añade una etiqueta ||| bbcode add	count=1
namespace	el diccionario indicado mediante ||| function	count=1
function_name	ha sido creado con ||| add types	count=1
function_name	[function_name_1] iterador interno ||| [function_name_1] [function_name_2]	count=4
function_name	ficheros y [function_name] dando ||| [function_name]	count=1
return	dos ||| string	count=1
arg_pair	devuelve str ||| string $encoding	count=2
function_name	solo ||| close	count=1
function_name	el espacio ||| space	count=1
function_name	busca la dirección del ||| get	count=1
function_name	la imagen y con ||| image	count=1
return	versión plural de gettext() ||| string	count=1
arg_pair	el nombre distinguido ||| array $dn resource $privkey	count=1
arg_pair	es ||| string $name mixed $value	count=1
arg_pair	de peticiones en un ||| resource $grp int $limit	count=1
namespace	entrada utilizando ||| ziparchive	count=1
arg_pair	el comportamiento automático de ||| resource $connection_id bool $onoff	count=1
arg_pair	el estilo numérico ||| int $first_page int $style	count=1
function_name	las ||| doc	count=1
namespace	esperar a que todos ||| function	count=1
function_name	y devolver un valor ||| using	count=1
function_name	la frecuencia en la ||| frequency	count=1
function_name	opendir readdir y ||| readdir	count=1
arg_pair	de b negro y ||| resource $pdfdoc float $b	count=1
function_name	la ||| get	count=6
arg_pair	volcado ||| int $debug_level string $dump_directory	count=1
return	el [return] ||| [return]	count=5
function_name	sobre el uso de ||| scache meminfo	count=1
function_name	[function_name_1] de cambio ||| fann [function_name_1] cascade candidate [function_name_2]	count=1
return	un nombre del ||| resource	count=1
function_name	todas las colecciones de ||| collection info	count=1
arg_pair	[arg_pair_1] efectos ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] error [function_name_1]	count=8
namespace	el hash ||| function	count=1
function_name	stream_wrapper_unregister() ||| wrapper	count=1
function_name	[function_name_1] de bcompiler ||| [function_name_2] [function_name_1]	count=2
function_name	trata array como si ||| push	count=1
arg_pair	una función callback para ||| mixed $callback	count=1
namespace	usando ||| harupage	count=1
arg_pair	por flag a las ||| int $options	count=1
arg_pair	redimensiona una imagen empleando ||| resource $image int $new_width	count=1
function_name	carga una biblioteca de ||| load	count=1
namespace	el búfer ||| splfileobject	count=1
namespace	ecm por ||| function	count=1
return	obtiene el tipo de ||| int	count=1
function_name	núcleo («kernel») a este ||| add kernel	count=1
arg_pair	fichero a un ||| string $filename bool $use_include_path	count=1
namespace	desde que se ||| function	count=1
function_name	la frecuencia en ||| set mlt min doc frequency	count=1
function_name	de nombres especificado ||| namespace	count=1
function_name	no puede ser presentado ||| wakeup	count=1
namespace	una conexión o ||| function	count=1
function_name	si ||| is file	count=1
function_name	descripción de la ||| cairo pattern create rgb	count=1
arg_pair	a la codificación to_encoding ||| string $to_encoding	count=1
function_name	una lista de encabezados ||| headers list	count=1
function_name	el ||| set	count=3
function_name	de filas que se ||| start	count=1
arg_pair	al servicio daemon ||| string $daemon	count=1
function_name	de las letras ||| get	count=1
arg_pair	por key ||| mixed $value	count=1
namespace	devuelve la ||| gmagickdraw	count=1
function_name	[function_name_1] año ||| [function_name_2] [function_name_1]	count=1
function_name	de [function_name] ||| get [function_name]	count=1
arg_pair	por data ||| int $offset	count=1
function_name	la función mssql_free_statement() ||| mssql free statement	count=1
function	corrección gamma [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	xmlrpc base64 ||| xmlrpc	count=1
function_name	calidad de ||| quality	count=1
function_name	el espacio ||| is default namespace	count=1
namespace	hash y ||| quickhashstringinthash	count=1
function_name	realice una salida como ||| output	count=1
function_name	[function_name_1] conexión ||| [function_name_1] [function_name_2]	count=2
function_name	una función ||| uksort	count=1
function_name	define ||| set	count=4
function_name	permite al entrenamiento continuar ||| fann get cascade output	count=1
function_name	tie breaker ||| tie breaker	count=1
function	seridor asociado [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	al comando de ||| mongocursor	count=1
namespace	por name pero ||| function	count=1
return	que fgetss() intenta ||| string	count=1
function_name	una o más opciones ||| options	count=1
arg_pair	al servicio daemon ||| string $address	count=1
function_name	línea siguiente ||| next line	count=2
function_name	que no ||| min doc frequency	count=1
arg_pair	flag a ||| string $flag int $options	count=1
function_name	lectura/escritura definida por ||| user pick server	count=1
function_name	de texto ||| curl	count=1
function_name	los definidos ||| remap	count=1
function_name	cambia parámetros [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	datos de unicode propertyaliases.txt ||| int $property int $namechoice	count=1
function_name	para cfb y ||| mcrypt	count=1
arg_pair	de ømq pueden hacer ||| zmqsocket $frontend	count=1
function_name	devuelve el tiempo actual ||| get	count=1
function_name	de oracle del campo ||| oci field	count=1
function_name	gzip .gz ||| gzopen	count=1
function_name	una nueva csr ||| csr new	count=1
function_name	obtiene el modo ||| get	count=1
function	[function_name_1] desde ||| [arg_pair_2] [function_name_1]	count=3
function_name	de entrada ||| input scaling	count=1
namespace	hash y ||| quickhashintstringhash	count=1
namespace	activa o desactiva ||| function	count=1
function_name	la frecuencia en ||| mlt min doc frequency	count=1
function_name	pid del id de ||| get	count=1
namespace	de estilo de ||| harupage	count=1
function_name	en por ||| mlt min doc frequency	count=1
arg_pair	la conexión actual ||| string $charset resource $link_identifier	count=1
function_name	documentos ||| doc frequency	count=2
function_name	tabla en la ||| table	count=2
namespace	sql más ||| sqlite3	count=1
function_name	píxel con la imagen ||| colorize image	count=1
namespace	carácter especificado ||| function	count=1
namespace	advertencias y ||| rarexception	count=1
namespace	de seguimiento tailable ||| mongocursor	count=1
function_name	registradas __autoload ||| autoload	count=1
function_name	el ||| get	count=7
function_name	núcleo ||| kernel	count=1
namespace	usa ||| function	count=1
function_name	usa la ||| gmp prob	count=1
namespace	contiene ||| function	count=1
arg_pair	el comportamiento automático ||| bool $onoff	count=1
function_name	un [function_name] del objeto ||| get [function_name]	count=1
function	relación dada [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	establece el ||| set storage	count=1
function_name	función crea una ||| create document	count=1
function_name	instrucción ||| next result	count=2
function_name	si el argumento es ||| set	count=1
function_name	algoritmo ||| training algorithm	count=1
arg_pair	x2 y2 ||| float $y2	count=1
namespace	basados en [namespace] ||| [namespace]	count=1
namespace	documentos ||| solrquery	count=1
namespace	instancia de ||| yaf_dispatcher	count=1
return	información sobre ||| object	count=1
arg_pair	recupera una ||| string $default	count=1
namespace	frames id3v2 asociados ||| ktaglib_id3v2_tag	count=1
function_name	cierra el diccionario indicado ||| closedict	count=1
arg_pair	un umbral de contraste ||| int $channel	count=1
function_name	imagen obtenida ||| imagecreatefromgif	count=1
function_name	tamaño de fragmento ideal ||| set highlight regex slop	count=1
namespace	una ||| imagickkernel	count=1
return	en la posición actual ||| bool	count=1
function_name	activa el debug output ||| memcache debug	count=1
function_name	copia un recurso ||| copy	count=1
function_name	similares al ||| tailable	count=1
namespace	error que describe ||| function	count=1
namespace	a sus valores por ||| function	count=1
namespace	un nuevo filteriterator ||| filteriterator	count=1
function_name	ejecuta ||| exec	count=1
return	véase regexiterator::setmode() [return] lista ||| [return]	count=1
arg_pair	los destinatarios cc y ||| string $cc	count=1
return	ser usado en ||| bool	count=1
namespace	un documento basado en ||| domdocument	count=1
function	[function_name_1] result ||| [function_name_1] [arg_pair_2]	count=2
function_name	se asigne un trabajo ||| work	count=1
arg_pair	con pattern según las ||| string $pattern int $flags	count=1
arg_pair	una variable al ||| string $name	count=1
arg_pair	especificado por fd ||| mixed $fd	count=2
return	un array ||| array	count=18
function_name	error cuando la biblioteca ||| using	count=1
function_name	no-bloqueo ||| nb	count=1
function_name	true entonces en ||| using exceptions	count=1
namespace	donde se buscarán los ||| function	count=1
function_name	lista ||| data source	count=2
function_name	cancela ||| event del	count=1
arg_pair	plaintext con las ||| resource $identifier string $plaintext	count=1
arg_pair	watcher evperiodic ||| int $signum callable $callback	count=1
function_name	reemplaza [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	un fichero y ||| resource $font_index string $encodingfile	count=1
function_name	el formateador ||| highlight formatter	count=1
function_name	fclose() sucesivamente para escribir ||| file put contents	count=1
function_name	una cadena ||| save string	count=1
function_name	el color de relleno ||| gray fill	count=1
function	relación dada [arg_pair_2] ||| [function_name_1] rcrtlike [arg_pair_2]	count=3
namespace	frecuencia en la que ||| solrquery	count=1
namespace	de filas de la ||| sqlite3	count=1
arg_pair	conectada completamente ||| int $num_neurons2	count=1
function_name	prefijo de faceta ||| facet prefix	count=3
namespace	que ||| gmagickdraw	count=1
function_name	documento html ||| is html	count=1
function_name	fragmento ideal especificado ||| regex slop	count=1
function_name	una ||| tailable	count=1
function_name	envía datos arbitrarios ||| ping	count=1
function_name	un archivo temporal ||| mailparse uudecode	count=1
function_name	[function_name_1] texto ||| [function_name_2] [function_name_1]	count=6
function_name	dice si el ||| mcrypt enc is	count=2
namespace	por el [namespace] es ||| [namespace]	count=1
function_name	esta ||| data	count=1
arg_pair	domain por gettext() ||| string $codeset	count=1
function_name	en minúsculas ||| xheight	count=1
namespace	método ||| reflectionmethod	count=7
arg_pair	por fd ||| mixed $fd	count=2
function_name	de codificaciones admitidas ||| mb list encodings	count=1
function_name	píxel especificado ||| image pixel	count=1
function_name	retorna el denominador ||| task denominator	count=1
function_name	uuencode ||| mailparse	count=1
namespace	parámetro column_number ||| sqlite3result	count=1
function_name	pone ||| add	count=1
function_name	tipo de socket ||| socket type	count=3
rest	en el [function_2] ||| [function_2] [return_1]	count=1
return	comprueba si ||| bool	count=2
namespace	devuelve los datos de ||| function	count=1
function_name	blanco ||| white	count=1
namespace	tipo de la ||| function	count=1
arg_pair	redimensiona una ||| int $columns	count=1
function_name	una opción ||| parser set option	count=1
function_name	seno para cada ||| asin	count=1
return	en ||| array	count=2
arg_pair	actual indicando que ocurrió ||| string $actor	count=1
arg_pair	arrays ||| array $array1	count=2
function_name	pares ||| repl	count=1
arg_pair	usa la class dada ||| mixed $class bool $autoload	count=1
function_name	espacio de ||| namespace	count=1
function_name	función devolverá ||| odbc	count=1
function_name	lo menos tantos documentos ||| set mlt	count=1
function_name	encuentra el campo ||| field	count=1
arg_pair	con los ||| array $params	count=1
function_name	sftp [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de dsn ||| source	count=1
function_name	al conectar ||| stomp connect	count=1
namespace	ambos ||| sqlite3result	count=1
function_name	pueden hacer ||| construct	count=1
function_name	no la remarcación de ||| highlight highlight	count=1
namespace	contenido existente ||| yaf_response_abstract	count=2
function_name	[function_name_1] el rango ||| [function_name_2] [function_name_1]	count=2
namespace	devuelve ||| splfixedarray	count=1
function_name	facetas [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	de a ||| gmp $a	count=1
return	en la caché ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=16
arg_pair	ruta en ||| bool $recursive	count=1
function_name	[function_name_1] extraidas por ||| [function_name_2] [function_name_1]	count=8
function_name	no coincide ningún píxel ||| match	count=1
function_name	una consulta ||| query	count=1
arg_pair	de la función callback ||| mixed $arg	count=1
arg_pair	una ||| int $columns	count=1
arg_pair	indentificador de ||| resource $result_id	count=1
function_name	las cabeceras de respuesta ||| response headers	count=1
function_name	en ncurses ||| ncurses start	count=1
function	para ordenar [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	datos geoip está ||| geoip	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] train [function_name_2]	count=7
function_name	del sistema de ficheros ||| eio unlink	count=1
return	un array como ||| mixed	count=1
function_name	directorio de ldap ||| ldap	count=1
function_name	cadena ||| chr	count=1
function_name	la que apunta conn_handle ||| commit	count=1
function_name	de instancia ||| load string	count=1
function_name	la descripción de ||| cairo surface get font options	count=1
function_name	en la ||| set mlt	count=1
namespace	un caracter que contiene ||| function	count=1
function_name	basado ||| crypt	count=1
namespace	donde se ||| function	count=1
function_name	número de épocas que ||| epochs	count=1
function_name	inicia una ||| pdf begin	count=1
function_name	decodifica el ||| decode	count=1
arg_pair	servicios colas o ||| zmqsocket $frontend	count=1
arg_pair	de relation al ||| resource $relation string $name	count=1
function_name	el carp::cluck de ||| clunk	count=1
function_name	de solrdocument::clear() ||| reset	count=1
arg_pair	y length ||| int $length string $charset	count=1
return	proceso ||| void	count=2
function_name	del ||| count	count=1
namespace	define la apariencia de ||| harudestination	count=1
function_name	nueva página ||| page	count=2
arg_pair	da formato csv a ||| string $delimiter string $enclosure	count=1
function_name	el término [function_name_2] ||| [function_name_2] lower [function_name_1]	count=1
arg_pair	entradas de un tipo ||| resource $imap_stream	count=1
function_name	de ||| msgno	count=2
function_name	conjunto de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	de forma ||| function	count=1
arg_pair	de las restricciones de ||| int $facetsort	count=1
function_name	establece el nombre host ||| fbsql hostname	count=1
function_name	tantos documentos ||| set mlt min doc	count=1
function_name	encuentre un error una ||| using	count=1
namespace	de objetos solrdocument ||| solrdocument	count=1
arg_pair	valor de ||| string $value int $flags	count=1
function_name	actual del inglete limite ||| miter limit	count=1
function_name	última ||| get last	count=1
function_name	el archivo paradox en ||| px	count=1
return	como un array asociativa ||| array	count=1
function_name	valor actual del ||| set value	count=1
return	estándar basado en ||| string	count=1
return	actual medido como ||| int	count=1
function_name	defecto de entidades ||| external entity loader	count=1
return	una de las ||| int	count=1
arg_pair	usuario de la conexión ||| mysqlnd_connection $connection string $user	count=1
function_name	está ejecutando ||| port	count=1
return	número de filas de ||| int	count=1
function_name	vincular ||| bind	count=1
namespace	de ficheros que ||| function	count=1
arg_pair	directorio al completo mediante ||| string $path	count=1
function_name	phar ||| map phar	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] mysqlnduhconnection $connection_proxy [arg_pair_2]	count=4
function_name	un error una ||| using	count=1
function_name	espacio ||| space	count=1
function	[function_name_1] arrays ||| [arg_pair_2] [function_name_1]	count=5
function_name	calcula el coseno ||| trader cos	count=1
arg_pair	la posición indicada. ||| int $left int $top	count=1
function_name	último error ||| last	count=1
function_name	dado y extrae cada ||| uudecode	count=1
function_name	representación que ||| to string	count=1
arg_pair	b ||| resource $pdfdoc float $b	count=1
function_name	trabajo para la tarea ||| do job handle	count=1
function_name	la transacción ||| fbsql commit	count=1
function_name	las columnas del conjunto ||| cubrid	count=1
function_name	la descripción ||| cairo pattern get extend	count=1
function_name	de etiqueta ||| tag	count=1
return	elemento en un ||| bool	count=1
function_name	si el ||| mcrypt module is	count=1
function_name	true entonces ||| set using exceptions	count=1
namespace	especificado es un código ||| intlchar	count=1
arg_pair	la imagen image ||| resource $image	count=1
function_name	de cargar entidades ||| entity	count=1
function_name	verificar las extensiones ||| extensions	count=1
function_name	objeto al valor ||| value	count=1
function_name	frecuencia en la que ||| set	count=1
function_name	consulta ||| cubrid query	count=1
function_name	[function_name_1] estancamiento de ||| [function_name_2] [function_name_1]	count=12
function_name	última llamada mysqli_connect() ||| mysqli connect errno	count=1
return	sobre las capas ||| zmqsocket	count=1
return	final ||| int	count=1
arg_pair	con un ||| float $beta int $channel	count=1
namespace	de bloqueo o ||| function	count=1
arg_pair	que contiene una ||| int $dictionary_link string $file	count=1
function_name	devuelve un [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	la variable de entorno ||| setenv	count=1
function_name	excepción ||| exception handler	count=2
function_name	este serán ignoradas ||| mlt min doc	count=1
arg_pair	mensaje y socket. -- ||| zmqsocket $frontend	count=1
arg_pair	data1 y data2 ||| resource $data1 resource $data2	count=1
arg_pair	establece [arg_pair] nombre de ||| [arg_pair]	count=1
function_name	las ||| sslchecks	count=1
function_name	página ||| show	count=1
function_name	elimina una variable ||| shm remove var	count=1
function_name	obtiene los comentarios de ||| get doc comment	count=1
arg_pair	para la conexión actual ||| resource $link_identifier	count=1
arg_pair	consulta sql query a ||| string $query resource $link_identifier	count=1
namespace	que ya ha sido ||| sdo_das_xml	count=1
function_name	establece un [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la fila ||| mysqli fetch	count=1
namespace	como el número de ||| function	count=1
function_name	solo que ||| close	count=1
function_name	[function_name_1] almacena datos ||| [function_name_1] [function_name_2]	count=1
function_name	o odbc_exec() ||| odbc	count=1
arg_pair	el algoritmo especificado ||| string $algorithm	count=1
function_name	una [function_name] por ||| [function_name]	count=1
arg_pair	apunta a una página ||| float $ury string $url	count=1
function_name	siendo usado para lecturas ||| slave	count=1
function_name	el sistema ||| rotate	count=1
function_name	filas ||| rows	count=8
function_name	cuando se ha alcanzado ||| cubrid	count=1
function_name	imagen en [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	datos y los ||| string $data	count=1
function_name	la base de ||| dba	count=1
function_name	al entrenamiento continuar sin ||| fann	count=1
function_name	indicando ||| set using	count=1
arg_pair	en la posición indicada. ||| int $top	count=1
function_name	de ||| scheme	count=1
arg_pair	[arg_pair_1] índice field ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	son iguales al ||| run	count=1
function_name	almaceén de ||| reset	count=1
function_name	creado [function_name] debe terminar ||| [function_name]	count=1
function_name	disco ||| file	count=3
return	el tamaño ||| int	count=1
function_name	[function_name] elementos del ||| [function_name]	count=1
function_name	a msql_fetch_array() ||| msql	count=1
function_name	coseno para cada valor ||| trader cos	count=1
function_name	la ubicaciones ||| cert locations	count=1
function_name	devolverá la ||| data	count=1
function_name	xml ||| string	count=1
return	obtiene el ||| array	count=1
namespace	u otros caracteres ||| function	count=1
function_name	la de memcached::touch() ||| touch	count=1
function_name	para insertar ||| set add	count=1
function_name	de oracle ||| oci bind by	count=1
function_name	la base de ||| dbase	count=1
function_name	archivo dado y extrae ||| uudecode all	count=1
return	valor ||| void	count=2
function_name	de casillas ||| newt checkbox tree	count=1
return	nombre en la plantilla ||| bool	count=1
return	entonces ||| void	count=1
arg_pair	peticiones en un grupo ||| resource $grp	count=1
namespace	excepto ||| function	count=1
function_name	máximo) de ||| extrema	count=2
arg_pair	alfa para usar ||| resource $image	count=1
function_name	memcached::prepend() con ||| prepend by key	count=1
function_name	lista de [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	la que ||| mlt min doc frequency	count=1
arg_pair	key corresponda a un ||| mixed $value	count=1
function_name	devuelve los nombres ||| apd get	count=1
function_name	de monitorizar un ||| fam cancel monitor	count=1
namespace	otras tablas que ||| function	count=1
function_name	ubicaciones de certificados disponibles ||| cert locations	count=1
namespace	plantilla y ||| yaf_view_simple	count=1
function_name	de escala a aplicar ||| scale	count=1
function_name	tipo de cursor utilizado ||| db2 cursor type	count=1
arg_pair	por key ||| string $key mixed $value	count=1
function	[function_name_1] con clave ||| [function_name_1] [arg_pair_2]	count=1
function_name	consulta ||| facet query	count=1
arg_pair	el modo ||| int $mode	count=1
function_name	[function_name] resultados ||| [function_name]	count=1
arg_pair	gmagickpixel de ||| gmagickpixel $color int $width	count=1
function_name	indicando error ||| exceptions	count=1
function_name	fila en forma de ||| ibase fetch	count=1
namespace	si [namespace] ||| [namespace]	count=11
function_name	si la ||| query	count=1
namespace	actual de una entrada ||| function	count=1
arg_pair	varios arrays ||| array $array1 mixed $array1_sort_order	count=1
function	[function_name_1] result set ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	parámetro stack es true ||| string $stack	count=1
return	en la base de ||| bool	count=3
function_name	función usa la prueba ||| gmp prob prime	count=1
function_name	facetas de [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	devuelve las flags ||| get preg	count=1
function_name	del canal de color ||| get color value	count=1
function_name	escribir operaciones en ||| write buffer	count=1
function_name	esta función ||| source	count=1
arg_pair	carácter c verticalmente ||| int $color	count=1
function_name	lugar ||| set	count=1
function_name	base de datos db2 ||| db2	count=1
return	y lo procesa línea ||| array	count=1
function_name	operación ||| errno	count=1
arg_pair	clúster de grafemas ||| int $start	count=1
function_name	socket_sendto() ||| sendto	count=1
function_name	configuración de php ||| cfg var	count=1
function_name	devuelve el estado de ||| introspection get state	count=1
arg_pair	entrada y salida basados ||| resource $ann resource $train_data	count=1
namespace	función para este trabajo ||| gearmanjob	count=1
arg_pair	pero provee un grado ||| array $env array $other_options	count=1
namespace	usando la regla del ||| harupage	count=1
return	devuelve una cadena de ||| string	count=1
function_name	color de una imagen ||| image colorspace	count=1
function_name	la línea siguiente ||| next line	count=2
function_name	socket en particular ||| socket	count=1
function_name	advertencia ||| open	count=1
function_name	el hijo ||| child	count=1
arg_pair	usando un ||| int $width	count=1
arg_pair	un algoritmo ||| float $beta int $channel	count=1
return	obtiene la ||| string	count=1
namespace	url no codificados ||| solrparams	count=1
arg_pair	pre-procesa texto para ||| string $text	count=1
function_name	único ||| hash	count=1
function	[function_name_1] por data ||| [function_name_1] [arg_pair_2]	count=4
function_name	en este servicio ||| gupnp service introspection	count=1
function_name	por lo ||| set	count=1
namespace	que ||| directory	count=2
function_name	captura una fila en ||| ibase fetch object	count=1
arg_pair	bcc ||| string $bcc	count=1
function_name	back-end utilizado por libev ||| backend	count=1
function_name	establece el array ||| fann set	count=1
return	esté en la zona ||| bool	count=1
function_name	cierra una [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	str ||| string $character_mask	count=1
namespace	el número de ||| function	count=2
arg_pair	específica en ||| int $field_number	count=1
function_name	la línea siguiente y ||| text next line	count=1
function_name	los ciclos ||| gc collect cycles	count=1
function_name	de bcompiler y ||| bcompiler	count=1
function_name	que hay en ||| mssql	count=1
function_name	[function_name_1] el servicio ||| [function_name_2] [function_name_1]	count=1
return	un array con las ||| array	count=1
function_name	de gettext() ||| ngettext	count=1
namespace	puedan aplicarse a una ||| imagickkernel	count=1
return	puntero interno ||| bool	count=2
arg_pair	método gearmanclient::setstatuscallback() ||| string $job_handle	count=1
arg_pair	fallará si key ||| mixed $value	count=1
return	código de error dado ||| string	count=1
function_name	pendientes ||| steepnesses count	count=2
function_name	desde la cadena ||| load	count=1
namespace	esta clase ||| reflectionclass	count=1
function_name	la zona horaria correspondiente ||| time zone by country	count=1
function_name	resultado de ||| data	count=1
function_name	establece ||| set storage	count=1
function_name	un nuevo ||| new	count=1
arg_pair	función cubrid_schema() ||| int $schema_type	count=1
arg_pair	de fichero fd ||| mixed $fd int $mode	count=1
function_name	el tamaño ||| entry	count=1
function_name	(«kernel») a este ||| add	count=1
namespace	devuelve ||| sqlite3	count=1
function_name	operación curl ||| curl error	count=1
function_name	infinito positivo o negativo ||| infinite	count=1
function_name	devuelve un objeto ||| get children	count=1
function_name	zona horaria correspondiente ||| geoip time zone	count=1
namespace	sets tie breaker ||| solrdismaxquery	count=1
arg_pair	un fichero a la ||| resource $context	count=1
function_name	firmas soportados ||| supported signatures	count=1
arg_pair	calendario calendar ||| int $calendar	count=1
arg_pair	un valor de ||| resource $p	count=1
function_name	codificado ||| mailparse uudecode all	count=2
function_name	tesela para usarse ||| imagesettile	count=1
arg_pair	un servidor imap o ||| resource $imap_stream	count=1
function_name	de geoip ||| geoip	count=2
function_name	el nivel mínimo ||| min message	count=1
arg_pair	los bordes de la ||| int $width	count=1
function_name	base [function_name] ||| [function_name]	count=2
function_name	descripción ||| cairo matrix translate	count=1
function_name	argumento es ||| exceptions	count=1
function_name	los encabezados a enviar ||| soap headers	count=1
function_name	extrase el pid del ||| pid	count=1
return	id de ||| int	count=1
function_name	crea ||| create processing instruction	count=2
function_name	acrobat [function_name] ||| fdf [function_name] doc	count=1
function_name	archivo codificado mediante ||| uudecode all	count=1
namespace	indicando error ||| rarexception	count=1
arg_pair	para posicionar el cursor ||| int $position	count=1
function_name	de campos ||| sybase fetch field	count=1
function_name	del complemento apuntada ||| mysqlnd ms	count=1
function_name	el comentario de ||| comment index	count=1
function_name	destruir el valor para ||| offset unset	count=1
function_name	única tarea ||| do normal	count=2
function_name	obtiene un ||| get parameter	count=1
function_name	una [function_name] ||| oci [function_name]	count=3
function_name	se encuentra ||| image	count=1
function_name	es o no predeterminada ||| default	count=1
arg_pair	stream_socket_server() ||| float $timeout	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] urlannotation [arg_pair_2]	count=4
function_name	neuronas ||| input	count=1
arg_pair	tamaño de un ||| resource $link_identifier	count=1
function_name	detalles del estado ||| status message	count=1
namespace	archivo zip usando ||| ziparchive	count=1
function_name	ya ha ||| types	count=1
function_name	de filas que ||| start	count=1
function_name	valor ||| value	count=7
function_name	libera toda ||| free result	count=1
return	usado ||| void	count=1
namespace	que están disponibles ||| function	count=2
arg_pair	haystack pajar ||| string $haystack	count=2
arg_pair	de mensaje y ||| zmqsocket $backend	count=1
return	definida ||| bool	count=4
namespace	dado y ||| function	count=1
function_name	la fecha ||| date parse from format	count=1
function_name	el contexto de flujo ||| context	count=1
function_name	de fragmeto ideal para ||| highlight regex slop	count=1
function_name	un das xml que ||| types	count=1
return	tiene asociada [return] por ejemplo ||| [return]	count=1
return	imagemagick [return] ||| [return]	count=3
function_name	[function_name] dado ||| [function_name]	count=2
function	[function_name_1] un directorio ||| [function_name_1] [arg_pair_2]	count=3
function_name	devuelve true si el ||| module is	count=1
function_name	la descripción de la ||| cairo pattern create radial	count=1
function_name	devuelve la ruta del ||| get temp	count=1
namespace	elemento directoryiterator ||| directoryiterator	count=1
function_name	patrones de entrenamiento ||| length	count=1
return	uno ||| string	count=1
namespace	por filename a un ||| function	count=1
function_name	convierte un ||| gmp strval	count=1
function_name	archivo [function_name] ||| pdf open [function_name]	count=1
function_name	acción con parámetros ||| action	count=1
function_name	un nuevo objeto ||| construct	count=1
function_name	línea de inicio de ||| start line	count=1
function_name	guarda el estado ||| pdf save	count=1
function_name	multibyte ||| ereg search	count=1
function_name	que la clave dada ||| by key	count=1
function_name	cambia los permisos ||| eio fchmod	count=1
function_name	la paginación ldap enviando ||| ldap	count=1
function_name	color especificado ||| color value	count=1
function_name	patrones de ||| length	count=1
return	proporcionada en ||| bool	count=2
function_name	[function_name_1] [function_name_2] ruta dada por dirname ||| [function_name_2] [function_name_1]	count=2
namespace	lo ||| solrquery	count=1
function_name	el seridor asociado ||| msql select db	count=1
function_name	[function_name_1] servidor ssh2 ||| [function_name_2] [function_name_1]	count=2
function_name	el objeto respuesta ||| get response	count=1
arg_pair	un ||| resource $statement	count=3
function_name	subsiguiente fichero de ||| add	count=1
function_name	método ||| await data	count=2
function_name	punto de control ||| control point	count=1
function_name	[function_name_1] de título ||| [function_name_2] [function_name_1]	count=1
return	ventana ||| bool	count=1
return	de la línea ||| int	count=1
function_name	pendientes de ||| steepnesses	count=1
function_name	si está disponible ||| available	count=1
function_name	petición http de ||| apache request	count=1
function_name	contiene las llaves foraneas ||| db2 foreign keys	count=1
function_name	siguiente y ||| text next	count=2
function_name	función geoip_db_avail() devuelve ||| db avail	count=1
function_name	al ||| close	count=1
function_name	de datos geoip está ||| geoip	count=1
arg_pair	oid de la ||| string $oid	count=1
function_name	el valor del atributo ||| attribute	count=2
function_name	un comentario ||| comment	count=1
function_name	devuelve si un ||| get	count=1
function_name	hacer ||| construct	count=1
arg_pair	un objeto ||| mixed $config	count=1
arg_pair	de color para un ||| resource $image	count=2
function_name	otro núcleo («kernel») ||| add kernel	count=1
function_name	el glifo de la ||| ps symbol	count=1
function_name	sobre la información ||| info	count=1
namespace	distancia de la línea ||| harufont	count=1
namespace	espera ||| gearmanworker	count=1
arg_pair	función devuelve un ||| resource $result	count=1
function_name	trabajo desde el repositorio ||| svn	count=1
namespace	después de llamarla varias ||| function	count=1
arg_pair	data y devuelve los ||| string $data	count=1
arg_pair	local en el ||| string $local_file	count=1
function_name	en por ||| set mlt min doc	count=1
function_name	las salidas de los ||| output	count=1
function_name	serán ||| set	count=1
function_name	la primera muestra ||| first	count=1
function_name	devuelve ||| get last errors	count=1
arg_pair	data mediante ||| string $data	count=1
arg_pair	cubrid y guarda su ||| resource $conn_identifier resource $lob_identifier	count=1
return	y ||| bool	count=1
function_name	método de disposición ||| getimagedispose	count=1
function_name	máxima ||| max count	count=1
function	[function_name_1] éxito cero ||| [arg_pair_2] [function_name_1]	count=1
function_name	la [function_name] ||| [function_name] set storage	count=1
namespace	el array judy ||| judy	count=2
function_name	como este serán ignoradas ||| set mlt min doc frequency	count=1
function_name	una acción ||| gupnp service action	count=1
function_name	xml del ||| xml	count=1
function_name	llena un array ||| fill	count=1
function	[function_name_1] [arg_pair_2] ||| function mixed cubrid [function_name_1] [arg_pair_2]	count=12
function_name	es true entonces ||| set using	count=1
function_name	[function_name_1] versión menor ||| [function_name_1] [function_name_2]	count=1
arg_pair	ereg_replace() excepto ||| string $pattern string $replacement	count=1
return	obtiene ||| int	count=5
return	algoritmo estándar ||| string	count=1
function_name	de línea donde ||| line	count=1
function_name	menos tantos documentos como ||| doc	count=1
namespace	define la apariencia ||| harudestination	count=1
function_name	libera toda la memoria ||| fbsql free	count=1
function_name	la temperatura ||| temperature	count=2
arg_pair	memcached::getmulti() con la ||| int $flags	count=1
function_name	documentos como este ||| min doc	count=1
return	[return] valores del ||| [return]	count=2
function_name	crc del ||| crc	count=1
arg_pair	de forma parecida ||| string $password	count=1
arg_pair	nombre de espacio asociado ||| string $namespaceuri string $qualifiedname	count=1
function_name	la lista de dsn ||| odbc data source	count=1
function_name	obtiene la distancia de ||| get	count=1
function_name	desde ||| from	count=4
function	[function_name_1] por fd ||| [arg_pair_2] [function_name_1]	count=1
function_name	la fecha gregoriana ||| jdtogregorian	count=1
arg_pair	uri que contiene ||| string $uri	count=1
return	variable php ||| string	count=1
namespace	los añadidos/eliminados ||| solrclient	count=1
arg_pair	de php var_array al ||| int $max_table_length	count=1
function_name	el tamaño [function_name] paso ||| [function_name] rprop increase	count=1
function_name	siguiente entrada ||| next	count=1
arg_pair	en haystack y devuelve ||| bool $part	count=2
arg_pair	str con ||| string $encoding	count=2
function_name	el nombre largo para ||| long name	count=1
function_name	configura las marcas ||| watermark	count=1
function_name	carp::croak ||| apd croak	count=2
function_name	el ||| zip	count=1
arg_pair	color para un ||| resource $image int $red	count=2
function_name	[function_name_1] ldap en ||| function resource [function_name_2] [function_name_1]	count=1
function_name	casillas de ||| newt checkbox tree find	count=1
function_name	página pdf ||| pdf	count=1
function_name	que se ||| set	count=2
namespace	el objeto imagick ||| imagick	count=1
function_name	este serán ignoradas ||| mlt min	count=1
function_name	un ||| types	count=2
function_name	el último ||| error	count=1
arg_pair	hasta length bytes desde ||| int $length	count=1
function_name	un ||| exceptions	count=2
arg_pair	operaciones ||| mongocollection $collection array $write_options	count=3
arg_pair	cambia ||| string $new_password	count=1
arg_pair	resultado indicado ||| resource $result	count=1
namespace	arbitrarios a todos los ||| gearmanclient	count=1
function_name	define el ||| set	count=1
function_name	mensajes según ||| imap	count=1
function_name	rutina de interoperabilidad por ||| set default stub	count=1
return	de botón tridimensional ||| void	count=1
namespace	de [namespace] que ||| [namespace]	count=1
return	el array ||| void	count=1
function_name	las palabras que ||| doc	count=1
function_name	solo que el valor ||| close	count=1
function_name	y extrae ||| all	count=1
function_name	iterador aún está ||| valid	count=1
function_name	el código de error ||| curl strerror	count=1
function_name	xbm ||| imagexbm	count=1
function_name	del apuntador de archivo ||| uudecode all	count=1
function_name	archivo fifo especial ||| posix mkfifo	count=1
return	intermediarios de ||| zmqsocket	count=1
function_name	user ||| user fields	count=2
function_name	enlace simbólico filename ||| lchgrp	count=1
arg_pair	bytes str de acuerdo ||| string $str	count=1
return	mientras preserva los ||| gmagick	count=1
function_name	de unicode ||| unicode	count=1
function_name	una excepción de tipo ||| exceptions	count=1
arg_pair	a ereg_replace() ||| string $pattern string $replacement	count=1
function_name	un efecto ||| raiseimage	count=1
arg_pair	a la ruta corriente ||| float $ray float $ang1	count=1
return	en la posición de ||| bool	count=1
function_name	mime kopfzeile ||| mime	count=1
function_name	de los callback ||| gupnp	count=1
function_name	de memcached::prepend() con ||| prepend by key	count=1
function_name	número ||| prob prime	count=2
arg_pair	esté disponible ||| resource $stmt int $row	count=1
function_name	de espera ||| set query timeout	count=1
arg_pair	un ||| string $field	count=1
function_name	de los datos ||| data	count=1
namespace	advertencias y devolver un ||| rarexception	count=1
function_name	encontrados en la configuración ||| tidy config count	count=1
function_name	punto de control de ||| gupnp control point	count=1
function_name	excepción de ||| set using exceptions	count=1
function_name	el ||| slide show	count=2
function_name	de filas en el ||| num rows	count=2
function_name	la ruta y nombre ||| pathname	count=1
arg_pair	el ||| int $type float $disp_time	count=1
namespace	el puntero interno de ||| oci-lob	count=1
function_name	bordes de la ||| raiseimage	count=1
arg_pair	colores que ||| int $numcolors int $colorspace	count=2
arg_pair	memcache::connect() con la ||| string $host int $port	count=1
function_name	forma parecida a sybase_connect() ||| pconnect	count=1
arg_pair	archivo de ||| array $options	count=2
function_name	aún ||| valid	count=1
function	[function_name_1] archivo de ||| [arg_pair_2] [function_name_1]	count=1
function_name	dice [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	usuario user ||| mixed $user	count=1
function_name	establece el valor para ||| fdf set value	count=1
arg_pair	cero en caso ||| string $zurl mixed $options	count=1
function_name	direcciones servicios colas o ||| construct	count=1
function_name	función elimina ||| px delete	count=1
function_name	conexión sobre un socket ||| stream socket accept	count=1
namespace	secuencia de ||| function	count=1
arg_pair	old_file ||| string $old_file	count=1
function_name	fue subido mediante ||| uploaded file	count=1
namespace	aplicarse a una única ||| imagickkernel	count=1
function_name	ecm ||| output stagnation	count=1
function_name	establece [function_name_2] ||| [function_name_1] output [function_name_2]	count=2
arg_pair	flatness ||| float $flatness	count=1
arg_pair	el archivo de ||| array $options	count=2
function_name	las funciones registradas __autoload ||| autoload call	count=1
namespace	expresión xpath dada ||| domxpath	count=1
arg_pair	una ||| string $key	count=4
function_name	de color usando ncurses_init_color() ||| can change color	count=1
function_name	de la imagen ||| set image	count=4
function_name	para las solicitudes ||| set	count=1
function_name	las palabras que no ||| set mlt min doc frequency	count=1
function_name	se ||| count	count=2
function_name	[function_name_1] nombre de ||| [function_name_1] [function_name_2] string	count=1
function_name	un carácter de puntuación ||| ispunct	count=1
function_name	puedan aplicarse ||| add	count=1
function_name	la descripción de la ||| cairo pattern get color stop rgba	count=1
function_name	banderas [function_name] dado ||| [function_name]	count=1
function_name	último error ||| get last error	count=1
arg_pair	el valor ||| string $variable string $value	count=1
function_name	espacios en ||| ltrim	count=1
function_name	actual de una entrada ||| zip	count=1
arg_pair	de valores largos ||| float $min_savings	count=1
function_name	tie ||| tie	count=1
function_name	una imagen en negro ||| imagecreatetruecolor	count=1
function_name	en por ||| doc	count=1
function_name	devuelve las ||| get	count=3
function_name	ya ||| add types	count=2
arg_pair	valor de ||| mixed $bordercolor int $x	count=1
function_name	[function_name] proporcionalmente al ||| magnify [function_name]	count=3
function	[function_name_1] bytes pseudo-aleatorios ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	forma parecida ||| string $password string $charset	count=1
function_name	error una excepción ||| set using	count=1
function	[function_name_1] página cookie...) ||| [function_name_1] [arg_pair_2]	count=9
function_name	envía la ||| gupnp service proxy send	count=1
function	[function_name_1] de un ||| [arg_pair_2] [function_name_1]	count=18
return	época ||| int	count=1
return	y ||| resource	count=1
function_name	la correlación de ||| asort	count=1
arg_pair	densidad [arg_pair] ||| [arg_pair]	count=2
namespace	información sobre un proceso ||| function	count=1
function_name	la ruta del directorio ||| set dict path	count=1
function_name	[function_name_1] la severidad ||| [function_name_1] [function_name_2]	count=1
arg_pair	pattern según las ||| string $pattern int $flags	count=1
namespace	socket. -- ||| zmqdevice	count=1
function_name	de unión ||| join	count=1
function_name	usa la prueba ||| gmp prob	count=1
arg_pair	planifica la ejecución ||| resource $event	count=1
function_name	frecuencia en la que ||| set mlt min doc frequency	count=1
function_name	los definidos por ||| remap	count=1
namespace	los bordes de ||| gmagick	count=2
function_name	lee la información ||| read	count=1
namespace	que devuelven esas ||| function	count=1
arg_pair	los datos de ||| mixed $data	count=1
function_name	simple línea de ||| pdf fit textline	count=1
function_name	el repositorio ||| svn	count=2
function_name	rellena y ||| pdf fill	count=2
function_name	solicitada clase glo ||| cubrid new glo	count=1
function_name	contexto de flujo ||| stream context	count=3
function_name	establece el número ||| fann set cascade	count=1
namespace	array a un ||| function	count=1
function_name	temporal ||| mailparse uudecode	count=1
arg_pair	se pueda con una ||| string $width string $height	count=1
function_name	que las palabras que ||| min doc	count=1
function_name	actual ||| key	count=1
arg_pair	timestamp ||| int $timestamp int $format	count=2
function_name	[function_name_1] [function_name_2] ||| function string [function_name_2] [function_name_1] resource $fdf_document string $fieldname	count=8
arg_pair	una ||| string $type	count=1
return	objeto throwable anterior ||| throwable	count=1
function_name	campo para usarlo como ||| field	count=1
function_name	la alternativa ||| imagecolorresolvealpha	count=1
return	indica si la ||| bool	count=1
function_name	especificada ||| db2	count=1
function_name	interoperabilidad stubs ||| stub	count=1
function_name	colección ||| collection	count=1
function_name	base64 ||| base64	count=1
arg_pair	versión plural ||| string $msgid1 string $msgid2	count=1
return	de seguimiento tailable que ||| mongocursor	count=1
arg_pair	la entrada especificada de ||| string $key resource $handle	count=1
arg_pair	pueden hacer de intermediarios ||| zmqsocket $frontend	count=1
namespace	todavía ||| mongocursor	count=1
function_name	obtiene el valor de ||| get	count=4
function_name	para el primer índice ||| first	count=2
namespace	función ||| function	count=4
return	un array como valores ||| mixed	count=1
namespace	seguimiento tailable que ||| mongocursor	count=1
namespace	para ver ||| gearmanclient	count=1
arg_pair	el modo de acceso ||| int $pri	count=1
function_name	libera ||| enchant broker free	count=1
function_name	de salida ||| output	count=3
function_name	cubrid_col_size() ||| col size	count=2
function_name	por omisión) ||| disable debug	count=1
arg_pair	unserializes a bson ||| string $bson array $typemap	count=1
function_name	de memcached::prepend() con ||| prepend by	count=1
function_name	de nombres ||| is default	count=1
arg_pair	recursivamente path1 ||| int $rev1	count=1
function_name	uri del espacio de ||| uri	count=1
arg_pair	relation bajo ||| resource $relation	count=1
function	del campo [arg_pair_2] ||| [function_name_1] len [arg_pair_2]	count=1
return	y esté en ||| bool	count=1
arg_pair	un resultado con los ||| resource $connection string $qualifier	count=1
arg_pair	original_name como new_name ||| string $new_name	count=1
namespace	de la base ||| sqlite3	count=1
function_name	usa ||| gmp prob	count=1
function_name	recupera el documento ||| get document	count=1
arg_pair	fgetss() intenta ||| int $length	count=1
arg_pair	versiones estandarizados de php ||| string $version2	count=1
arg_pair	comenzando por el offset ||| int $offset	count=1
function_name	página para ajustarse ||| fit	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] server [function_name_2]	count=7
function_name	versión xbm de ||| imagexbm	count=1
function_name	con el id dado ||| get element by id	count=1
namespace	disponibles en el sistema ||| function	count=1
function_name	[function_name_1] unión para ||| [function_name_2] [function_name_1]	count=5
function_name	y extrae cada ||| all	count=1
function_name	parecida a sybase_connect() ||| sybase pconnect	count=1
arg_pair	el hash de ||| string $str	count=1
function_name	bézier desde el ||| curveto	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $pathto [arg_pair_2]	count=1
function_name	como este serán ||| mlt min doc	count=1
namespace	se puede usar ||| function	count=1
arg_pair	solrquery::sethighlightalternatefield() ||| int $fieldlength	count=1
namespace	yaf_application ||| yaf_application	count=1
arg_pair	dos ||| float $number	count=1
function_name	el nombre especificado ||| symlink	count=1
function_name	documentos como este serán ||| min doc	count=1
arg_pair	botón tridimensional ||| int $y	count=1
function_name	establece el número ||| set mlt count	count=1
function_name	complemento de ||| mysqlnd	count=2
function_name	repositorio ||| svn checkout	count=2
namespace	conjunto y ||| quickhashintset	count=1
arg_pair	esté establecido a ||| int $method array $arguments	count=1
function_name	de la imagen ||| set interlace scheme	count=1
function_name	obtención interna subsigiente ||| prefetch	count=1
function_name	el espacio de ||| default	count=1
function_name	ejecutada usando ingres_query() ||| ingres	count=1
function_name	los mensajes ||| imap clearflag	count=1
arg_pair	imágenes ||| bool $blendmode	count=1
function_name	devuelve una nueva instancia ||| get	count=2
function_name	las bases de ||| dbs	count=1
arg_pair	con pattern según ||| string $pattern	count=1
function_name	[function_name_1] eventos ||| [function_name_2] [function_name_1]	count=3
function_name	elimina ||| px delete	count=1
function_name	archivo codificado ||| uudecode all	count=1
function_name	un proceso abierto ||| proc get	count=1
function_name	una elipse con centro ||| imagefilledellipse	count=1
return	encontrados en esas ||| bool	count=1
function_name	el ||| offset	count=1
arg_pair	establecieron con la ||| resource $psdoc	count=1
function_name	y salidas para ||| fann set scaling	count=1
function_name	entradas de cada ||| input	count=1
function_name	agregar ||| add	count=1
return	una columna ||| string	count=1
namespace	en blanco u ||| function	count=1
function_name	la [function_name] ||| [function_name]	count=5
function_name	información sobre el uso ||| scache meminfo	count=1
arg_pair	de str especificada por ||| string $str	count=1
function_name	entrada a las candidatas ||| get cascade	count=2
function_name	inicia ||| pdf begin	count=2
return	recurso ||| resource	count=2
arg_pair	el argumento offset a ||| resource $lob_identifier string $offset	count=1
namespace	string [namespace] ||| [namespace]	count=9
arg_pair	fichero especificado por fd ||| mixed $fd int $pri	count=1
arg_pair	el valor de retorno ||| mixed $value	count=1
function_name	añade un ||| add file	count=1
function_name	[function_name_1] modificadores ||| [function_name_2] [function_name_1]	count=2
function_name	para cfb ||| mcrypt	count=1
arg_pair	con odbc_prepare() ||| resource $result_id	count=1
return	en el esquema rng ||| bool	count=1
arg_pair	object es de ||| string $class_name	count=1
namespace	(«kernel») a este para ||| imagickkernel	count=1
arg_pair	especificado de páginas ||| string $prefix	count=1
function_name	los ||| uasort	count=1
function_name	fragmento ideal ||| regex slop	count=1
function_name	extrae cada archivo codificado ||| all	count=1
function_name	el semáforo ||| sem	count=2
function_name	comporta de forma ||| sybase	count=1
function_name	y devuelve ||| get	count=1
return	a fgets() excepto ||| string	count=1
function_name	función ||| prob prime	count=2
function_name	y devuelve el ||| get	count=1
return	indicado ||| bool	count=1
function_name	einer mime kopfzeile en ||| mime	count=1
arg_pair	disponibles en ||| string $str	count=1
function_name	campos de una ||| mssql fetch field	count=1
function_name	función usa la ||| prime	count=1
function_name	[function_name_1] una clase ||| bool [function_name_1] parse [function_name_2]	count=3
function_name	especificado ||| is default	count=1
function_name	conocia como ||| tailable	count=1
function	[function_name_1] un ||| [function_name_1] size [arg_pair_2]	count=1
function_name	el peso de la ||| getfontweight	count=1
arg_pair	bordes de la imagen ||| int $height	count=1
arg_pair	[arg_pair_1] del archivo ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	página cookie...) ||| resource $link int $pagesize	count=1
function_name	rows ||| pg copy	count=1
namespace	segundos desde ||| function	count=1
arg_pair	función va aquí ||| cairogradientpattern $pattern	count=2
namespace	blanco u otros caracteres ||| function	count=1
namespace	string ||| serializable	count=1
function_name	[function_name_1] de campos ||| [function_name_1] [function_name_2]	count=10
return	de un array como ||| mixed	count=1
function	escribe los [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	la imagen ||| int	count=2
function_name	[function_name_1] mysql asociado ||| [function_name_2] [function_name_1]	count=14
function_name	especial indicando error cuando ||| using exceptions	count=1
arg_pair	devuelve el número ||| resource $imap_stream	count=1
arg_pair	usa la prueba ||| gmp $a	count=1
function_name	forma parecida ||| sybase pconnect	count=1
arg_pair	un mensaje log que ||| string $message	count=1
function_name	descripción ||| surface create	count=2
function_name	previas operaciones ||| count entries	count=1
arg_pair	mode ||| int $mode	count=1
function_name	borra ||| ftp delete	count=2
function_name	la alternativa más próxima ||| imagecolorresolve	count=1
function	[function_name_1] [arg_pair_2] si ||| bool [function_name_1] [arg_pair_2]	count=1
return	como una matriz con ||| array	count=1
function_name	einer mime ||| iconv mime encode	count=1
function_name	que ||| by	count=1
arg_pair	en conexiones curl_multi ||| float $timeout	count=1
function_name	a sybase_fetch_assoc() ||| sybase fetch	count=1
function_name	si una variable ||| is	count=1
function_name	carga un segundo ||| types	count=1
function_name	usa la ||| prob prime	count=1
function_name	sybase_fetch_assoc() con la ||| sybase fetch	count=1
namespace	asociativo que ||| function	count=1
namespace	afecta al estado ||| mongocursor	count=1
function_name	conexiones [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	como este ||| set mlt min	count=1
function_name	frase de consulta del ||| highlight use phrase	count=1
arg_pair	de b ||| float $b	count=1
namespace	string ||| function	count=3
function_name	un archivo temporal ||| uudecode all	count=1
function_name	el nombre de ||| function name	count=2
function_name	parámetro de error::__construct() ||| previous	count=1
function_name	lo grande que ||| fann get	count=1
function_name	método devuelve el elemento ||| get	count=1
return	de relleno ||| void	count=1
function_name	el identificador de sesión ||| getsid	count=1
arg_pair	una y devuelve el ||| string $new_data2 string $error	count=1
namespace	textflow [namespace] añade ||| [namespace]	count=1
namespace	a popen() pero provee ||| function	count=1
function_name	[function_name_1] facet ||| [function_name_2] [function_name_1]	count=2
function_name	siguiente fila del conjunto ||| sqlsrv fetch	count=1
function_name	de ||| add kernel	count=2
function_name	un número ||| prime	count=1
return	escala ||| float	count=1
namespace	función devolviendo ||| pdo	count=2
arg_pair	group ||| string $filename mixed $group	count=1
function_name	para ser utilizada como ||| create collation	count=1
function_name	matriz para ||| offset set	count=1
function_name	corto para un ||| frame short	count=1
return	no devuelve resultados en ||| bool	count=1
function_name	transacción sin cerrarla ||| commit ret	count=1
return	fgetss() ||| string	count=1
function_name	archivo pdf generado y ||| pdf	count=1
function_name	en por lo ||| set mlt min doc	count=1
function_name	las ||| set	count=2
function_name	siguiente si varias instrucciones ||| next result	count=1
arg_pair	activa el ||| resource $connection_id	count=1
function_name	el número máximo ||| set highlight max	count=1
function_name	la biblioteca cliente ||| client info	count=2
function_name	de depuración ||| debug	count=1
arg_pair	a**r)/gamma r * x** ||| float $r	count=1
function_name	devuelve false cuando se ||| cubrid	count=1
arg_pair	propiedad hwnd en ||| int $client_area	count=1
function_name	[function_name_1] cliente ||| [function_name_2] [function_name_1]	count=5
function_name	elemento está disponible ||| element	count=1
function_name	sistema de coordenadas ||| rotate	count=1
function_name	lista ||| cubrid list	count=1
return	actualmente activa en el ||| bool	count=1
arg_pair	otros caracteres del inicio ||| string $str	count=1
arg_pair	aparecen en el parámetro ||| string $str	count=1
function_name	[function_name_1] iterador de ||| [function_name_2] [function_name_1]	count=8
function_name	en un das ||| types	count=1
function_name	abierto mediante ||| proc	count=1
namespace	array que contiene todos ||| function	count=1
function	[function_name_1] recurso ||| [arg_pair_2] [function_name_1]	count=3
function	devuelve [arg_pair_2] ||| [function_name_1] notify [arg_pair_2]	count=1
function_name	mensaje de cadena ||| imap append	count=1
function_name	destino ||| nameddest	count=1
function_name	sftp ||| sftp	count=1
function_name	un socket creado ||| socket accept	count=1
arg_pair	el user especificado ||| string $user	count=1
function_name	de etiqueta dado por ||| tag	count=1
function_name	fija la base de ||| select db	count=1
return	frecuencia en ||| solrquery	count=1
arg_pair	string ||| string $str	count=3
function_name	público ||| public	count=1
function_name	obtiene el estilo ||| get	count=1
function_name	nueva [function_name] ||| new [function_name]	count=1
function_name	fuente ||| font	count=3
function_name	[function_name_1] de socket ||| [function_name_2] [function_name_1]	count=4
function_name	si el parámetro ||| is	count=1
function_name	ordena a com que ||| com	count=1
function_name	la descripción ||| cairo scaled font get font matrix	count=1
function_name	de los caracteres ||| addcslashes	count=1
function_name	en la configuración ||| config count	count=1
function_name	la descripción de la ||| cairo matrix transform point	count=1
arg_pair	una cadena ||| mixed $priv_key	count=1
arg_pair	sybase_connect() con dos ||| string $password	count=1
function_name	como este ||| set	count=1
function_name	solicitud actual ||| nsapi	count=1
arg_pair	x3 y3 ||| float $x3 float $y3	count=1
function_name	array e indexa numéricamente ||| values	count=1
function_name	función analiza ||| bbcode parse	count=1
function_name	comprueba si [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] is null	count=1
function_name	que ambos puedan aplicarse ||| add kernel	count=1
function_name	de fdf ||| fdf	count=1
function	[function_name_1] modo ||| [arg_pair_2] [function_name_1]	count=3
return	colas ||| zmqsocket	count=1
arg_pair	estilo de ||| float $disp_time	count=1
namespace	descriptor previamente asignados ||| oci-lob	count=1
function_name	fusiona una secuencia ||| flatten	count=1
arg_pair	imap ||| int $flag	count=1
arg_pair	a un array de ||| resource $statement	count=1
function_name	mueve la posición del ||| move to	count=1
function_name	operación and ||| variant and	count=1
function_name	el campo especificado ||| field	count=1
return	afecta al estado ||| int	count=1
arg_pair	un mapa ||| string $map	count=1
function	[function_name_1] campo de ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=1
function_name	de imagen ||| load image	count=1
function_name	siguiente ||| cubrid next result	count=2
namespace	consultado se ||| mongocursor	count=1
namespace	encuentrae un eleménto ||| xmlreader	count=1
function_name	búsqueda exitosa ||| yaz present	count=1
function_name	posición ||| get position	count=1
function_name	obtiene la cadena de ||| bzerrstr	count=1
namespace	objeto actualmente señalado por ||| splobjectstorage	count=1
function_name	se ||| dbplus chdir	count=2
return	tie breaker parameter ||| solrdismaxquery	count=1
function_name	descripción de ||| cairo scaled font get	count=4
function_name	busca el desplazamiento ||| msql	count=1
arg_pair	[arg_pair_1] de ingres_fetch_row() ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	devuelve ||| get stats	count=1
arg_pair	usa para posicionar el ||| int $position	count=1
function	es [function_name_1] [arg_pair_2] etiqueta ||| [function_name_1] tag [arg_pair_2]	count=2
arg_pair	archivo local ||| int $mode	count=2
namespace	la pila como ||| throwable	count=1
return	inactividad de entrada/salida ||| int	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $database string	count=2
arg_pair	modo de acceso ||| int $mode	count=1
arg_pair	idéntica ||| resource $handle int $length	count=1
function_name	[function_name] que ||| [function_name]	count=1
function_name	establece los datos contenidos ||| set	count=1
function_name	lote ||| batch	count=2
function_name	primer plano ||| ncurses color set	count=1
function_name	imagen ||| raiseimage	count=1
function_name	borrar ||| delete service	count=2
function_name	continente ||| continent	count=1
function	[function_name_1] eventos ||| [function_name_1] [arg_pair_2]	count=2
return	color de ||| bool	count=1
arg_pair	un clúster de grafemas ||| int $extract_type	count=1
arg_pair	memcached::replace() con la ||| int $expiration	count=1
function_name	de errores interno ||| error	count=1
arg_pair	el número de secuencia ||| resource $imap_stream	count=1
function_name	lo menos ||| mlt min	count=1
function_name	flujo con cualquier opción ||| stream	count=1
namespace	a través ||| function	count=1
function_name	una imagen ||| set image	count=2
function_name	filas que hay ||| mssql num rows	count=2
arg_pair	usarla como una función ||| string $name	count=1
arg_pair	es una ||| string $name	count=1
arg_pair	óptimo de columnas que ||| int $scope int $nullable	count=1
function_name	desde la csr ||| openssl csr	count=1
function_name	en el almaceén de ||| reset	count=1
return	un array con ||| array	count=8
function_name	devuelve la porción ||| mb strrichr	count=2
arg_pair	value1 con ||| mixed $value2	count=1
function_name	error una ||| using exceptions	count=1
arg_pair	esta [arg_pair_1] [arg_pair_2] ||| function bool xattr set [arg_pair_2] [arg_pair_1]	count=3
function_name	resultados completo ||| start	count=1
arg_pair	datos disponible como un ||| int $row	count=1
function_name	reinicia [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	lee la siguiente entrada ||| read	count=1
function_name	una jerarquía entera de ||| checkin	count=1
function_name	para modificar ||| set	count=1
function_name	tener una [function_name] ||| [function_name]	count=1
return	mediante ||| bool	count=1
function_name	devuelve las posiciones de ||| get from neuron	count=1
function_name	que ambos ||| add kernel	count=1
arg_pair	registradas ||| bool $details	count=1
return	ha sido ||| void	count=1
arg_pair	database especificada ||| string $database resource $link_identifier	count=1
function_name	imagen con ruido ||| image	count=1
function_name	obtiene el tipo ||| type	count=2
function_name	directorio virtual ||| chdir	count=1
function_name	la función socket_sendto() ||| sendto	count=1
arg_pair	éxito cero ||| mixed $options	count=1
function_name	las candidatas antes ||| fann get cascade	count=4
function_name	rebobina ||| reset	count=2
function_name	renombra ||| rename	count=1
function_name	a msql_fetch_array() ||| msql fetch	count=1
function_name	el argumento es true ||| exceptions	count=1
function_name	estilo ||| set	count=1
namespace	creación e iteración del ||| mongocursorinterface	count=1
arg_pair	que se identificaron con ||| string $client_identifier	count=1
arg_pair	por lotes ||| array $batch	count=1
function_name	devuelve los datos o ||| get	count=1
arg_pair	formato csv y ||| string $enclosure	count=1
function_name	mínima ||| min	count=2
arg_pair	erroresset_error_handler() ||| int $error_type	count=1
function_name	fichero ||| file	count=1
arg_pair	mensaje ||| zmqsocket $frontend	count=1
arg_pair	parecida ||| string $servername	count=1
namespace	dada que contiene ||| function	count=1
namespace	renderización ||| gmagick	count=1
function_name	encuentra disponible ||| ps	count=1
function	[function_name_1] los datos ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] la pendiente ||| [function_name_1] activation [function_name_2]	count=1
return	sombreado basado en ||| bool	count=1
function_name	se da ||| idate	count=1
function_name	biblioteca gd instalada ||| gd info	count=1
function_name	escala a aplicar en ||| scale	count=1
function_name	canal de color especificado ||| color	count=1
arg_pair	según la directiva whence ||| int $whence int $pri	count=1
function_name	msql ||| msql	count=2
namespace	ser editado ||| hw_api	count=1
function_name	la página ||| slide	count=1
namespace	las ||| gmagick	count=1
arg_pair	desde el xml dump ||| string $xml_file string $rrd_file	count=1
function_name	donde id es ||| by id	count=2
namespace	que es similar ||| function	count=1
function_name	columna ||| array column	count=2
function_name	fichero de ||| add types	count=1
function_name	[function_name_1] imágenes ||| [function_name_2] [function_name_1]	count=1
namespace	o fecha-hora para ||| function	count=1
function_name	creado con el ||| types	count=1
function_name	función acepta ||| format	count=1
function_name	la porción ||| mb stristr	count=2
function_name	función del manejador ||| handler	count=4
function_name	proxy ||| set connection proxy	count=1
function	una [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function_name	parte [function_name] usada en ||| set [function_name]	count=1
function_name	por sqlsrv_prepare() o sqlsrv_query() ||| sqlsrv	count=1
function_name	de entorno [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	de aplicar ||| file bdiff	count=1
function_name	devuelve la zona horaria ||| time zone by	count=1
function_name	un ||| using exceptions	count=4
function_name	libera todos los ||| free	count=1
namespace	api ||| gmagick	count=1
return	el fichero ||| int	count=1
namespace	devuelve ||| gmagickdraw	count=3
function_name	[function_name_1] línea donde ||| [function_name_2] [function_name_1]	count=1
function_name	número de línea ||| line number	count=1
function_name	codificado mediante uuencode ||| mailparse uudecode all	count=1
function_name	oauth ||| parameter	count=1
return	si el nodo ||| bool	count=1
function_name	información con ||| info	count=1
namespace	dado de la posición ||| splfileobject	count=1
function_name	colecciones de la base ||| collection info	count=1
function_name	de ||| nsapi request	count=1
function_name	máximo ||| max cand	count=1
arg_pair	bordes de la imagen ||| int $x int $y	count=1
function_name	verde de ||| green	count=1
function_name	de filas en ||| sybase num rows	count=1
function_name	donde se buscarán los ||| dbplus chdir	count=1
arg_pair	devuelve una ||| gmagickdraw $draw	count=1
arg_pair	la función callback por ||| mixed $arg	count=1
function_name	similar a la representación ||| to string	count=1
namespace	acceso para esta clase ||| reflectionclass	count=1
function_name	la acción ||| proxy action	count=1
function_name	[function_name_1] serán ||| [function_name_2] max num query [function_name_1]	count=1
arg_pair	relation al ||| resource $relation	count=1
function_name	descrita ||| dba	count=2
function_name	[function_name_1] abstracto ||| [function_name_1] [function_name_2]	count=1
function_name	de la página ||| set	count=1
function_name	opciones de configuración ||| ini	count=1
arg_pair	defina sobre las ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	de cursor utilizado en ||| db2 cursor	count=1
arg_pair	que se defina ||| zmqsocket $frontend	count=1
function_name	recupera información ||| proc get	count=1
arg_pair	n ||| gmp $n	count=1
return	el algoritmo ||| string	count=1
function_name	las palabras que ||| doc frequency	count=1
return	el descriptor previamente asignados ||| bool	count=1
arg_pair	una función de ||| string $name	count=1
function_name	de patrones ||| fann length	count=1
function_name	la información del ||| info	count=1
return	con el error ||| string	count=1
function_name	abierto mediante el uso ||| proc	count=1
namespace	elemento actual directoryiterator ||| directoryiterator	count=11
function_name	para ||| fann set scaling	count=1
namespace	invertidas antes de los ||| function	count=1
function_name	las palabras que ||| mlt min doc	count=1
function_name	devuelve un string ||| addcslashes	count=1
function_name	documentos como ||| mlt min doc	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] array $patterns_and_callbacks [arg_pair_2]	count=4
function_name	[function_name_1] id es ||| [function_name_2] [function_name_1]	count=5
namespace	persistente a una base ||| function	count=1
function_name	[function_name_1] se usa ||| [function_name_2] [function_name_1]	count=24
arg_pair	imagen ||| int $y	count=1
function_name	documento html ||| save html	count=1
arg_pair	un parámetro de un ||| resource $p	count=1
function_name	caracteres que necesitan ||| addslashes	count=1
function_name	número de la línea ||| line	count=1
function_name	devuelto por db2_prepare() ||| param	count=1
function_name	de petición http de ||| apache request	count=1
function_name	[function_name_1] descrita ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] la caché ||| [function_name_2] [function_name_1]	count=1
function_name	abre un flujo imap ||| open	count=1
function_name	libera un ||| free descriptor	count=1
function_name	grupos ||| groups	count=1
function_name	http ||| http	count=3
function_name	información que ||| info	count=1
namespace	el hash de un ||| function	count=1
return	indicado mediante el identificador ||| bool	count=1
function_name	[function_name_1] las salidas ||| [function_name_1] [function_name_2]	count=1
function_name	visual ||| fribidi log2vis	count=2
function_name	producto de ||| array product	count=1
arg_pair	flag ||| string $flag	count=1
function_name	se encuentra disponible la ||| memory	count=1
arg_pair	de arrays ||| array $array1	count=1
function_name	entwerfen von einer mime ||| iconv mime	count=1
namespace	http en ||| function	count=1
return	abstracción que se ||| zmqsocket	count=1
arg_pair	que se defina sobre ||| zmqsocket $frontend zmqsocket $backend	count=1
return	capas de ||| zmqsocket	count=1
function_name	[function_name_1] particular de ||| [function_name_1] [function_name_2]	count=3
function_name	peticiones ||| grp	count=1
return	clave usando una función ||| void	count=1
return	a el búfer de ||| int	count=1
arg_pair	el oid de ||| string $oid	count=1
return	en la copia de ||| bool	count=1
function_name	escapa ||| pg escape	count=1
function_name	este ||| min	count=1
arg_pair	se identificaron ||| string $client_identifier	count=1
function_name	de funcionalidades soportadas ||| features	count=1
function_name	filas afectadas por ||| ifx affected rows	count=2
function_name	el de ||| set slide show	count=1
namespace	información del estado de ||| function	count=3
function_name	que las ||| mlt	count=1
function_name	autocommit del recurso de ||| db2 autocommit	count=1
namespace	una entrada definida por ||| ziparchive	count=1
function_name	nombre de host o ||| name	count=2
function_name	parámetros ||| ps open	count=1
arg_pair	los datos y ||| string $data string $mode	count=1
function_name	contra un servidor ldap ||| ldap	count=1
function_name	[function_name_1] único componente ||| [function_name_1] [function_name_2]	count=1
function_name	frecuencia ||| set mlt min	count=1
function_name	dado y ||| mailparse	count=1
function_name	esta función reemplaza el ||| replace	count=1
arg_pair	coordenadas los radios de ||| float $rx float $ry	count=1
function_name	bloques ||| block	count=1
return	des de unix o ||| string	count=1
function_name	elimina el fichero directorio ||| delete	count=1
function_name	nodename ||| named	count=1
return	del proceso ||| void	count=1
function_name	almacena el resultado ||| xdiff	count=2
function_name	[function_name_1] punto primario ||| [function_name_1] green [function_name_2]	count=1
function_name	la potencia ||| pow	count=1
function_name	si un número ||| prime	count=1
function_name	la longitud de palabra ||| min word length	count=1
function_name	la descripción ||| cairo	count=1
arg_pair	conexiones curl_multi ||| resource $mh float $timeout	count=1
arg_pair	un método de ||| int $width int $height	count=1
function_name	las flags de ||| flags	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] short [function_name_2]	count=1
function_name	uno dos o ||| number format	count=1
function_name	en un archivo ||| uudecode	count=1
function_name	interno ||| seek	count=3
function_name	abierto mediante ||| proc get status	count=1
namespace	base ||| mongodb	count=1
function	las tablas [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	convierte un guid ||| guid string	count=1
function_name	servidor ||| server by path	count=2
arg_pair	user ||| string $user	count=2
namespace	de instancia ||| sdo_das_xml	count=1
function_name	una transacción ||| ibase commit	count=1
function_name	de accesibilidad ||| access	count=1
return	una imagen ||| gmagick	count=1
return	la cuenta de ||| int	count=1
function_name	devuelve estadísticas de cliente ||| get client stats	count=1
return	en un bloque ||| bool	count=1
function_name	devuelve el tamaño comprimido ||| zip entry compressedsize	count=1
function_name	de configuración de php ||| cfg var	count=1
function_name	informix de ||| ifx fieldproperties	count=1
arg_pair	un archivo en la ||| string $filename	count=1
namespace	puntero de el fichero ||| splfileobject	count=1
function_name	esta ||| data source	count=2
function_name	e/s ||| eio readahead	count=2
function_name	acción con parámetros ||| gupnp service proxy action	count=1
function_name	procesos ||| getpgid	count=1
function_name	cubrid_col_size() se usa ||| cubrid col size	count=2
function_name	función devuelve true si ||| is	count=1
namespace	excepto por la ||| function	count=1
function_name	de trozos remarcados a ||| highlight snippets	count=1
arg_pair	algo de un objeto ||| mixed $array_or_countable	count=1
namespace	al estado ||| mongocursor	count=1
arg_pair	proceso para el intérprete ||| resource $parser callable $handler	count=1
function_name	de i-nodo de ||| inode	count=1
namespace	una cadena [namespace] contiene una ||| [namespace]	count=1
function_name	adjunta ||| add	count=1
function_name	devuelve ||| enc get	count=1
function_name	[function_name_1] nodo ||| [function_name_2] [function_name_1]	count=4
function_name	devuelve el formateador de ||| get highlight formatter	count=1
arg_pair	puede utilizarse ||| int $field_offset	count=1
arg_pair	del parámetro data ||| int $length	count=1
function_name	despliega los valores ||| vprintf	count=1
function_name	inicia la definición ||| pdf begin	count=1
function_name	ordinal de columna ||| column	count=1
function_name	establece los datos ||| set	count=1
function_name	de llamarla ||| odbc	count=1
function_name	estilo de ||| slide	count=1
arg_pair	los caracteres ||| string $str	count=1
function_name	los datos del apuntador ||| mailparse uudecode all	count=1
namespace	datos para una tarea ||| gearmanclient	count=1
rest	una [function_2] ||| [return_1] [function_2]	count=2
function_name	la frecuencia en ||| mlt	count=1
return	devolverá la lista ||| array	count=1
arg_pair	[arg_pair] el ||| [arg_pair]	count=8
function_name	el factor de escala ||| scale	count=2
function_name	establece ||| set encoding	count=4
function_name	de unix o ||| crypt	count=1
function_name	parte de la cabecera ||| header	count=1
function_name	la biblioteca unrar encuentre ||| using	count=1
function_name	de línea ||| line number	count=1
function_name	campos del ||| fields	count=1
namespace	del objeto grande ||| oci-lob	count=1
function_name	de informix ||| ifx fieldproperties	count=1
arg_pair	direcciones servicios ||| zmqsocket $backend	count=1
arg_pair	se especifica por dn ||| string $dn	count=1
function_name	token ||| token	count=4
function_name	de archivo ||| mailparse uudecode	count=1
function_name	preparada y devuelve un ||| execute	count=1
arg_pair	número es primo ||| gmp $a	count=1
namespace	el argumento es true ||| rarexception	count=1
function_name	no ||| mlt	count=1
function_name	la imagen ||| image channels	count=1
function_name	máximo [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	de escala a ||| scale	count=1
function_name	corresponde al nombre ||| name	count=1
return	contiene el carácter especificado ||| string	count=1
arg_pair	[arg_pair_1] anotación rectangular ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	el inverso del ||| invert	count=1
function_name	fgetss() intenta eliminar cualesquiera ||| fgetss	count=1
function_name	obetiene el ||| getimagedelay	count=1
arg_pair	del mensaje dado ||| int $msg_number	count=1
arg_pair	unidades de b ||| float $b	count=1
return	un número es primo ||| int	count=1
function_name	a ingres_query() o ||| ingres	count=1
function_name	añade un nuevo seguimiento ||| add	count=1
arg_pair	se encuentra ||| resource $psdoc	count=1
function_name	obtiene información sobre la ||| curl getinfo	count=1
function_name	analiza el ||| parse	count=1
arg_pair	un valor ||| resource $p float $g	count=1
function_name	mime kopfzeile en el ||| mime encode	count=1
arg_pair	botón tridimensional simulado aclarando ||| int $width int $height	count=1
function_name	la biblioteca unrar ||| set	count=1
function_name	los caracteres que ||| addcslashes	count=1
function_name	datos ||| mailparse uudecode	count=1
function_name	una declaración [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	puedan ||| imagickkernel	count=1
function	valor actual [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	información de errores ||| sqlsrv errors	count=1
arg_pair	sobre la imagen image ||| resource $image	count=1
arg_pair	un archivo remoto desde ||| string $remote_file int $mode	count=2
return	error dado ||| string	count=1
function_name	truncates a large object ||| pg lo truncate	count=1
arg_pair	crear un ||| resource $pdfdoc	count=2
return	una función en el ||| bool	count=1
function_name	propertyvaluealiases.txt ||| value enum	count=2
function_name	de botón tridimensional ||| raiseimage	count=1
namespace	que se defina ||| zmqdevice	count=1
arg_pair	según la clave key ||| string $key int $timeout	count=1
function_name	consulta siguiente si ||| next	count=1
return	búfer de salida ||| int	count=1
function_name	clave ||| uksort	count=1
return	una entrada ||| int	count=1
function_name	en lugar ||| using	count=1
namespace	la sentencia sql ||| sqlite3	count=1
arg_pair	archivo dado [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	fichero ||| int $srcx	count=1
function_name	que se ||| start	count=1
return	valor en ||| mixed	count=1
function_name	trabajo ||| svn	count=2
return	que ||| bool	count=1
function_name	[function_name] resultante ||| [function_name]	count=2
function_name	para ordenar varios ||| multisort	count=1
arg_pair	un ||| resource $checkboxtree	count=1
function_name	consulta la publicación ||| ap	count=1
function_name	establece la función ||| fann set callback	count=1
namespace	se anota ||| gmagickdraw	count=1
function_name	de un ||| is	count=1
function_name	la ||| gettype	count=1
function_name	en un ||| mailparse	count=1
function_name	para almacenar [function_name] ||| get [function_name]	count=3
function_name	comporta ||| sybase	count=1
function_name	inverso del modulo ||| gmp invert	count=1
function_name	un mensaje de texto ||| strerror	count=1
function_name	un efecto de ||| raiseimage	count=1
return	y el resto del ||| array	count=1
function_name	modo de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	la cromaticidad ||| gmagick	count=2
function	[function_name_1] recurso checkbox ||| [arg_pair_2] [function_name_1]	count=2
function_name	columna actual para ||| current column number	count=1
function_name	trae el [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de direcciones servicios colas ||| construct	count=1
function_name	lo menos tantos ||| set mlt min	count=1
function_name	entrenadas las conexiones ||| fann get	count=1
return	x o y creando ||| bool	count=1
return	imagen ||| int	count=3
arg_pair	la función va aquí ||| cairosurfacepattern $pattern int $filter	count=1
function_name	por utf-8 ||| utf8	count=1
function_name	consulta la publicación de ||| fdf get ap	count=1
function_name	primo ||| gmp prob	count=1
function_name	la frecuencia en ||| mlt min	count=1
function_name	terminal tiene capacidades ||| ncurses	count=1
function_name	el desplazamiento de ||| msql	count=1
function_name	codificado mediante uuencode ||| all	count=1
function_name	caracteres del ||| ltrim	count=1
function_name	flujo ||| stream socket	count=1
arg_pair	descriptor de fichero fd ||| mixed $fd int $uid	count=1
function_name	convierte ||| strval	count=1
function_name	establecer ||| set weight	count=1
return	función usa la ||| int	count=1
function_name	proxy ||| connection proxy	count=1
namespace	de tipo integer que ||| function	count=1
arg_pair	un documento ||| resource $parser	count=1
namespace	dispositivos de ømq ||| zmqdevice	count=1
function_name	menos tantos documentos ||| set mlt min doc frequency	count=1
function_name	en la ||| nsapi request	count=1
namespace	iterador hasta ||| apciterator	count=1
function_name	más marcadores ||| db2 prepare	count=1
function_name	u otros caracteres ||| ltrim	count=1
function_name	liberación de memoria asignada ||| udm free res	count=1
function_name	para que [function_name] ser usada ||| [function_name] escape	count=1
arg_pair	crea un efecto de ||| int $height	count=1
function_name	memcached::touch() con la ||| touch by key	count=1
return	colores encontrados en esas ||| bool	count=1
function_name	función dio_read() ||| dio	count=1
function_name	la cabecera de ||| header	count=1
namespace	[namespace] con ||| [namespace]	count=1
function_name	la solicitud actual ||| nsapi	count=1
function_name	atributo de ||| attribute	count=2
return	color ||| int	count=2
function_name	[function_name_1] consultas range/wildcard/fuzzy/prefix ||| [function_name_1] [function_name_2]	count=3
namespace	será distribuido por ||| function	count=1
function_name	ejecución de los callback ||| gupnp	count=1
arg_pair	los bordes de ||| int $x	count=1
arg_pair	una versión [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	es ||| using exceptions	count=2
function_name	cambia el ||| chdir	count=1
function_name	sistema de ||| eio unlink	count=1
namespace	escribe el resultado a ||| splfileobject	count=1
arg_pair	conjunto de resultados ||| resource $result	count=1
function_name	[function_name_1] de argumentos ||| [function_name_2] [function_name_1]	count=2
function_name	cuando la biblioteca ||| using exceptions	count=1
arg_pair	tuple ||| string $tuple	count=1
function_name	acción javascript al ||| set javascript action	count=1
arg_pair	servidor imap ||| resource $imap_stream	count=1
arg_pair	una ||| string $title object $parent_outline	count=1
arg_pair	memcached::replace() con la excepción ||| int $expiration	count=1
function_name	establece la apariencia de ||| fdf set ap	count=1
function_name	si [function_name_2] ||| [function_name_2] [function_name_1]	count=13
function_name	actual al siguiente elemento ||| next	count=1
function_name	primer plano y ||| ncurses color	count=1
arg_pair	recupera una variable de ||| string $name string $default	count=1
return	una operación ||| string	count=1
namespace	archivo phar usando ||| pharfileinfo	count=1
function_name	excepto [function_name] contenidos en ||| [function_name]	count=1
function_name	finalice ||| set time allowed	count=2
function_name	del error [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	la prueba probabilística ||| prime	count=1
function_name	obtener información blob/clob de ||| cubrid lob export	count=1
function_name	para la fragmentación ||| set highlight regex pattern	count=1
arg_pair	capas de mensaje ||| zmqsocket $frontend zmqsocket $backend	count=1
function	cambiará el [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	que las palabras ||| set mlt min doc frequency	count=1
function_name	las posiciones de la ||| from neuron	count=1
arg_pair	el final de pajar ||| string $haystack string $needle	count=2
function_name	los mensajes especificados ||| imap fetchmime	count=2
function_name	de tidy a ||| tidy reset	count=1
function_name	y ||| color	count=1
function_name	la remarcación de ||| highlight highlight	count=1
function_name	parámetros ||| ps	count=1
arg_pair	de forma ||| string $password	count=1
return	su ||| yaf_route_interface	count=1
function_name	identifica el tipo de ||| type	count=1
function_name	información de depuración ||| dump debug	count=1
namespace	trabajo o un ||| function	count=1
function_name	la descripción de la ||| ps surface create	count=1
function_name	función crea una nueva ||| create document fragment	count=1
arg_pair	sobre las ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	corta una parte de ||| iconv substr	count=1
function_name	el nombre abreviado ||| short name	count=1
return	el carácter ||| string	count=1
function_name	o la alternativa más ||| imagecolorresolve	count=1
arg_pair	valores de array1 que ||| array $array2	count=1
function_name	tamaño de paso mínimo ||| set rprop delta min	count=1
function_name	la ||| odbc	count=1
function_name	corresponde al nombre de ||| code by name	count=1
function_name	por lo menos tantos ||| min doc	count=1
return	adjunta otro núcleo ||| void	count=1
function_name	datos lob de ||| lob	count=1
function_name	una columna devuelta ||| db2 fetch	count=1
function_name	un ||| is	count=1
arg_pair	datagrama en ||| int $flags	count=1
function_name	rutina de ||| set default stub	count=1
function_name	nombre del ||| get cipher name	count=1
function_name	el ciclo de peticiones ||| nop	count=1
function_name	reescritura establecidas ||| rewrite vars	count=1
namespace	la ruta ||| harupage	count=2
function_name	[function_name_1] tipo id ||| [function_name_2] [function_name_1]	count=2
function_name	para la primera imagen ||| first	count=1
arg_pair	grado de control ||| array $env array $other_options	count=1
function_name	el tiempo de espera ||| timeout	count=3
namespace	iterador al inicio del ||| arrayiterator	count=1
arg_pair	un ||| resource $context string $location	count=1
function_name	es ||| exists	count=1
return	cromaticidad como una ||| array	count=1
function_name	libera todos los ||| base free	count=1
return	carácter ||| string	count=1
function_name	nombre [function_name_2] ||| [function_name_2] cipher [function_name_1]	count=1
function	[function_name_1] del resultado ||| [arg_pair_2] [function_name_1]	count=4
function	[function_name_1] con ||| border [function_name_1] [arg_pair_2]	count=1
function_name	nombre host de ||| fbsql hostname	count=1
namespace	1 se ||| function	count=1
arg_pair	local ||| string $local_file	count=2
function_name	dentro de la faceta ||| facet	count=1
function_name	letra titular ||| totitle	count=1
function_name	[function_name_1] la frecuencia ||| [function_name_2] [function_name_1]	count=1
return	en blanco ||| string	count=1
function_name	para forzar ||| variant cast	count=1
namespace	por una ||| function	count=1
function_name	mensajes ||| imap clearflag full	count=2
function_name	recupera la extensión ||| get extension	count=1
function_name	y devolver un valor ||| exceptions	count=1
function_name	propietario del ||| eio fchown	count=1
function_name	al primer [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	tantos documentos ||| set mlt	count=1
return	método no afecta ||| int	count=1
function_name	o no termscomponent ||| terms	count=1
function_name	formateo textline ||| pdf info textline	count=1
return	sesión en la ||| bool	count=1
function_name	este ||| doc frequency	count=2
namespace	el puntero ||| splfileobject	count=1
arg_pair	datos cubrid y ||| resource $conn_identifier	count=1
function_name	obtener [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	acceso a ||| function	count=1
function_name	frecuencia en ||| set mlt	count=1
function_name	si [function_name_2] ||| enc [function_name_1] block [function_name_2]	count=1
function_name	el copyright de ||| getcopyright	count=1
function_name	el ||| is default namespace	count=2
function	[function_name_1] get/post/cookie ||| [arg_pair_2] [function_name_1]	count=3
return	reinicializa ||| void	count=1
arg_pair	cero en ||| mixed $options	count=1
arg_pair	del path ||| int $flags	count=1
namespace	tridimensional ||| gmagick	count=1
function_name	id de sesión ||| id	count=1
function_name	sobre un proceso abierto ||| status	count=1
function_name	el árbol de casillas ||| newt checkbox tree find	count=1
function_name	obtiene la ||| get data	count=1
arg_pair	divide el ||| int $flags	count=1
arg_pair	log_cmd_update ||| array $updateoptions array $protocoloptions	count=1
function_name	parámetro de ||| parameter	count=2
function_name	obtiene la categoría ||| get flatness	count=3
function_name	obtiene información ||| curl getinfo	count=1
arg_pair	representación dom ||| domnode $node int $options	count=1
function_name	notifica a los ||| notify	count=1
function_name	de trabajo para ||| job handle	count=1
function_name	la frecuencia bajo ||| min term frequency	count=1
function_name	libera todos ||| event base free	count=1
function_name	los colores de ||| ncurses color	count=1
arg_pair	disponibles después de ||| resource $connection_id	count=1
arg_pair	message al buzón especificado ||| string $message string $options	count=1
function_name	le ha consultado se ||| count	count=1
function_name	de patrones de ||| fann length	count=1
arg_pair	espacio de nombres ||| string $localname string $namespaceuri	count=1
function_name	todas las facetas de ||| facet	count=1
function	string de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	estar disponibles en el ||| function	count=1
function_name	[function_name_1] contexto ||| [function_name_2] [function_name_1]	count=2
function_name	por lo ||| doc frequency	count=1
return	intermediarios de direcciones servicios ||| zmqsocket	count=1
arg_pair	de ||| string $msgid1 string $msgid2	count=1
function_name	por el ||| uasort	count=1
arg_pair	entrecomilla el ||| int $parameter_type	count=1
function_name	del campo dado por ||| field	count=1
arg_pair	domain actual [arg_pair_2] ||| [arg_pair_1] string $msgid1 [arg_pair_2]	count=3
function_name	ejecuta una sentencia preparada ||| execute	count=1
function_name	de memcached::prepend() con ||| prepend	count=1
function_name	sets tie breaker parameter ||| set tie	count=1
function	instrucciones de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	consista en nombres ||| bool	count=1
arg_pair	de conversión de variante ||| variant $variant	count=1
function_name	el punto ||| point	count=1
function_name	descripción ||| pattern get surface	count=1
function_name	lee los datos del ||| mailparse	count=1
function_name	[function_name_1] afectadas en ||| [function_name_2] [function_name_1]	count=8
function_name	de pendientes de ||| steepnesses	count=1
arg_pair	string utilizando el ||| string $str	count=1
arg_pair	atributos al dn ||| string $dn	count=1
arg_pair	path en ||| string $path int $flags	count=1
return	especial indicando error cuando ||| void	count=1
function_name	rellena la ruta ||| fill	count=1
namespace	es similar a ||| function	count=2
function	[function_name_1] ya está ||| [function_name_1] string $progid [arg_pair_2]	count=4
function_name	método almacena ||| file	count=1
function_name	de monitorizar un recurso ||| monitor	count=1
function_name	especifica el término ||| terms lower bound	count=1
arg_pair	server_key ||| array $keys	count=1
return	usar para determinar si ||| bool	count=1
function_name	cualquier flujo ||| stream	count=1
return	que ambos ||| void	count=1
function_name	la acción con ||| proxy action	count=1
function_name	indica ||| namespace	count=1
function	es [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	filas afectadas por una ||| stmt affected rows	count=1
function_name	con barras invertidas ||| addcslashes	count=1
function_name	única ||| add	count=1
return	argumento es ||| void	count=1
function_name	desde el parámetro rows ||| copy	count=1
function_name	en un ||| add	count=1
function_name	cuando la biblioteca unrar ||| exceptions	count=1
arg_pair	el xml dump ||| string $xml_file	count=1
arg_pair	hasta maxlength bytes y ||| int $maxlength	count=1
function_name	y ||| uudecode all	count=2
function	nombre host [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	selecciona un documento ||| resource $fdf_document	count=1
function_name	y ||| mailparse	count=1
function_name	de cualquier ||| bzerrstr	count=1
arg_pair	de un dn ||| resource $link_identifier string $dn	count=2
function_name	devuelve si ||| get	count=1
arg_pair	y negro especificados al ||| float $gamma	count=1
arg_pair	al [arg_pair] formulario ||| [arg_pair]	count=1
arg_pair	crea un directorio ||| string $path	count=1
function_name	devuelve la escala de ||| scale	count=2
arg_pair	para el uid ||| resource $imap_stream int $uid	count=1
function_name	un proceso ||| proc	count=1
arg_pair	las reglas en bbcode_container ||| resource $bbcode_container	count=1
function_name	la fuente usada cuando ||| getfont	count=1
function_name	se ||| await data	count=2
function_name	para forzar a ||| cast	count=1
function_name	[function_name_1] un objeto ||| [function_name_1] data [function_name_2]	count=1
namespace	se dibujan rectágulos ||| function	count=1
function_name	línea ||| max line	count=2
arg_pair	old ||| string $key int $old	count=1
function_name	extensiones de ficheros ||| spl autoload extensions	count=1
function_name	espacio ||| default namespace	count=2
arg_pair	estructura de datos ||| int $num_data int $num_input	count=1
return	resultado asociado con ||| array	count=1
function_name	mediante el ||| get	count=1
namespace	del apuntador ||| function	count=1
function_name	las ||| request	count=1
return	previamente asignados con ||| bool	count=1
arg_pair	un ||| string $server_key string $key	count=1
function_name	[function_name_1] ubicaciones ||| [function_name_2] [function_name_1]	count=1
arg_pair	un directorio ||| resource $context	count=1
function	asigna [arg_pair_2] ||| [function_name_1] ref [arg_pair_2]	count=3
arg_pair	argumento result de callback ||| mixed $data	count=1
return	todos los ||| bool	count=1
function_name	del texto que ||| fgetss	count=1
return	de segundos ||| int	count=1
return	el valor predeterminado ||| void	count=1
function_name	escribe una cadena en ||| write	count=1
function_name	de paso de sarprop ||| sarprop step	count=2
function_name	de la extensión iconv ||| iconv get	count=1
namespace	reinicializa el array ||| splfixedarray	count=1
function_name	a una única ||| kernel	count=1
function_name	entrenamiento ||| fann get cascade	count=1
function_name	y ||| set	count=3
function_name	el número de filas ||| set start	count=1
return	encuentre un error una ||| void	count=1
return	si la posición ||| bool	count=1
return	ya ha sido creado ||| void	count=1
function_name	la descripción ||| cairo pattern get color stop	count=1
function_name	ya ha ||| add types	count=1
arg_pair	ninguna ||| mixed $id	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] sarprop weight [function_name_2]	count=1
function_name	tantos documentos ||| mlt min	count=1
function_name	de letra ||| imagepsencodefont	count=1
namespace	iterador ||| arrayiterator	count=2
function_name	página ||| page ext	count=2
return	mediante uuencode ||| array	count=1
function_name	un archivo ||| uudecode all	count=1
function_name	sido creado con el ||| add types	count=1
namespace	ømq ||| zmqdevice	count=1
arg_pair	el método y la ||| string $data string $method	count=1
function	[function_name_1] get/post/cookie ||| [function_name_1] [arg_pair_2]	count=3
function_name	el último [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	con el [function_name] ||| get [function_name]	count=1
arg_pair	no existe todavía ||| int $expire	count=1
function_name	que ||| types	count=1
namespace	de un ||| tidynode	count=1
return	se van a ||| solrquery	count=1
namespace	como una matriz con ||| gmagick	count=1
arg_pair	la función callback por ||| mixed $callback	count=1
function_name	crea un documento xml ||| save xml	count=1
function_name	cargar entidades externas ||| disable entity loader	count=1
return	obtiene información sobre ||| mixed	count=1
function_name	lee la siguiente ||| zip read	count=1
function_name	establece ||| pdf set	count=1
namespace	plural de ||| function	count=1
function_name	directorio virtual actual ||| dbplus chdir	count=1
return	establece variables ||| void	count=1
arg_pair	envío ||| resource $connection_id	count=1
function_name	[function_name_1] línea donde ||| [function_name_1] [function_name_2]	count=1
namespace	el [namespace] especficiado es ||| [namespace]	count=1
function_name	el terminal tiene capacidades ||| ncurses	count=1
return	se ||| zmqsocket	count=1
function_name	desecha todos los colores ||| unique image	count=1
function_name	distancia ||| get	count=1
function_name	una consulta de odbc ||| odbc	count=1
function_name	varias ||| odbc data	count=1
function_name	acepta uno ||| format	count=1
namespace	soap ||| soapclient	count=8
arg_pair	diferencias entre old_file y ||| string $old_file	count=1
function_name	árbol de casillas de ||| newt checkbox tree	count=1
arg_pair	tabla de una base ||| resource $pxdoc	count=1
function_name	le permite al entrenamiento ||| fann get cascade	count=1
function_name	añade varios componentes ||| newt form add components	count=1
return	segundos desde ||| int	count=1
function_name	cargar la copia binaria ||| load	count=1
arg_pair	completa usando sparse_method ||| int $sparse_method	count=1
namespace	de ||| gearmanclient	count=3
function_name	si una ||| is	count=1
function_name	posix que falló ||| posix get	count=1
function_name	por conexiones subsiguientes ||| edition	count=1
arg_pair	el result set especificado ||| resource $result int $index	count=1
namespace	no afecta ||| mongocursor	count=1
function_name	cubrid_lob2_new() ||| lob2 close	count=2
function_name	devuelve una lista ||| list	count=2
function_name	esta ||| odbc data source	count=2
arg_pair	flag a las banderas ||| string $flag int $options	count=1
function_name	los ||| array iterator	count=1
arg_pair	html y ||| resource $handle	count=1
arg_pair	a los clientes en ||| string $name	count=1
function_name	obtiene información sobre ||| curl	count=1
function_name	número de la línea ||| start line	count=1
function_name	del espaciado [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	log_cmd_update al ||| array $updateoptions array $protocoloptions	count=1
arg_pair	con un objetivo especificado ||| string $target	count=1
function_name	columna de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	la versión ||| string $msgid2	count=1
arg_pair	con xsltprocessor ||| string $namespace string $name	count=1
function_name	disables ||| disable	count=1
function_name	de ||| string	count=1
arg_pair	crea un ||| resource $psdoc	count=1
return	filas que ||| solrquery	count=1
function_name	[function_name_1] control de ||| [function_name_2] [function_name_1]	count=2
function_name	usando ||| uksort	count=1
function_name	creado ||| add	count=1
function_name	eventos de ||| event buffer	count=1
function	de la [arg_pair_2] ||| [function_name_1] filter [arg_pair_2]	count=1
return	nombre dado en ||| bool	count=1
function_name	servidor de oracle ||| oci	count=2
function_name	del ||| all	count=1
return	socket. ||| int	count=1
namespace	nombrado por ||| function	count=2
arg_pair	puerto específicado ||| int $port	count=1
function_name	[function_name_1] de candidatas ||| [function_name_2] [function_name_1]	count=12
function_name	intermediarios de direcciones ||| construct	count=1
function	[function_name_1] el intérprete ||| [arg_pair_2] [function_name_1]	count=16
arg_pair	una ||| string $gtrid	count=1
arg_pair	procesa cada uno ||| int $still_running	count=1
function_name	de seguridad del sumario ||| set highlight alternate	count=1
namespace	sesión actual ||| sessionhandler	count=1
arg_pair	a fgets() excepto ||| int $length	count=1
function_name	atributo tipo de imagen ||| set type	count=1
namespace	un archivo phar ||| phar	count=2
function_name	una imagen izquierda y ||| stereo image	count=1
function_name	rrdgraph::__construct() y devuelve la ||| verbose	count=1
function_name	calcular los parámetros ||| scaling params	count=2
arg_pair	la entrada proporcionada ||| resource $result_entry_identifier	count=1
arg_pair	no se especifica ninguna ||| string $collection mixed $id	count=1
function_name	o imap_mail_move() ||| undelete	count=1
arg_pair	define ||| int $type float $disp_time	count=1
function_name	en ||| mailparse uudecode	count=1
arg_pair	idéntica a ereg_replace() excepto ||| string $pattern string $replacement	count=1
function_name	el [function_name] ||| is [function_name]	count=1
function_name	umbral del ||| step error threshold	count=2
function_name	fragmeto ideal para ||| highlight regex slop	count=2
return	el retraso de ||| int	count=1
arg_pair	el identificador de entrada ||| resource $link_identifier	count=1
return	píxel [return] ||| [return]	count=3
function_name	en la que ||| doc	count=1
arg_pair	0600 en el ||| string $dir	count=1
function_name	información del servicio ||| gupnp service info	count=2
return	obtiene ||| string	count=2
function_name	hard del recurso actual ||| posix getrlimit	count=1
function_name	el tiempo de espera ||| busy timeout	count=1
namespace	con barras invertidas ||| function	count=1
function_name	puesta ||| sunset	count=1
function_name	de entidades ||| libxml set external entity	count=1
function_name	etiqueta id3 correspondiente ||| id3	count=1
function_name	imprime el glifo de ||| ps symbol	count=1
arg_pair	las propiedades correspondientes ||| array $ctorparams int $row	count=1
function_name	closedir() solo ||| close	count=1
return	devuelve su valor ||| mixed	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] text [function_name_2]	count=2
function_name	lee los ||| mailparse uudecode all	count=1
function_name	instancia ||| instance	count=1
function_name	[function_name_1] las tablas ||| [function_name_2] [function_name_1]	count=1
function_name	la ruta del directorio ||| dict path	count=1
function_name	las letras en minúsculas ||| get xheight	count=1
function_name	de baudios ||| dio tcsetattr	count=1
function_name	el número de elementos ||| size	count=2
function_name	disponible la ||| ps open	count=1
function_name	nombres de los traits ||| uses	count=1
namespace	imagick ||| imagick	count=2
function_name	de compresión ||| set compression	count=2
arg_pair	la conexión de la ||| mysqlnd_connection $connection	count=1
function_name	palabras ||| doc	count=1
function_name	la versión del protocolo ||| proto info	count=1
return	fgets() excepto que ||| string	count=1
namespace	caracter que contiene ||| function	count=1
arg_pair	una imagen ||| string $name string $profile	count=1
arg_pair	datagrama [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	de la base de ||| dba	count=1
function_name	para insertar un ||| set add	count=1
function_name	flujos registrados disponibles ||| stream get wrappers	count=1
function_name	la función ||| gmp prob prime	count=1
function_name	id [function_name_2] ||| [function_name_2] insert [function_name_1]	count=2
return	en el conjunto de ||| bool	count=1
function_name	filas afectadas por la ||| mysqli affected rows	count=1
function_name	la supervisión ||| ctrl dispatcher	count=1
function_name	permite al entrenamiento ||| fann get cascade	count=1
function_name	de la connection ||| dbname	count=1
function_name	descripción ||| cairo pattern get filter	count=1
function_name	filas que hay en ||| mssql num rows	count=1
function_name	archivo pkcs#12 ||| openssl pkcs12 export	count=1
function_name	si devuelve ||| get supported	count=1
arg_pair	dispositivos de ømq ||| zmqsocket $backend	count=1
function_name	la descripción de ||| ps surface get	count=1
function_name	al estado del cursor: ||| count	count=1
return	un das xml que ||| void	count=1
return	en la escritura del ||| bool	count=2
function_name	el número de registros ||| px numrecords	count=1
function_name	descripción ||| cairo ps level to string	count=2
function_name	con información ||| info	count=1
return	en la conexión dada ||| bool	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] mlt min [function_name_2]	count=1
arg_pair	en ||| bool $status callable $failure_callback	count=1
function_name	esta función analiza una ||| parse	count=1
arg_pair	recupera un archivo remoto ||| int $mode	count=2
function_name	usa spanscorer [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	de tiempo de espera ||| timeout	count=1
arg_pair	la key existe ||| string $key	count=1
return	cualquier ||| string	count=1
arg_pair	el de estilo de ||| int $type	count=1
function_name	lecturas ||| slave	count=4
function_name	copia los ||| pgsql copy to array	count=1
arg_pair	16 bytes en un ||| string $binary bool $short_format	count=1
function_name	[function_name_1] o información ||| [function_name_1] [function_name_2]	count=1
function_name	de ||| start	count=1
namespace	cadena ||| sdo_das_xml	count=1
namespace	como este serán ignoradas ||| solrquery	count=1
function_name	especifica el ||| set	count=1
function_name	sincroniza la ||| dba sync	count=1
return	de filas que ||| solrquery	count=1
function_name	devuelve el id ||| id	count=4
function	crea [arg_pair_2] ||| [function_name_1] urlannotation [arg_pair_2]	count=4
function_name	curva de bézier desde ||| curveto	count=1
arg_pair	en fann_get_cascade_output_stagnation_epochs() ||| int $max_neurons int $neurons_between_reports	count=1
function_name	obtiene ||| fann get	count=2
function_name	último error ||| error string	count=1
function_name	de conexiones [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	a una página ||| string $url	count=1
function_name	añade una cantidad ||| add	count=1
function_name	de la función ||| set	count=1
function_name	menos tantos ||| min doc frequency	count=1
function_name	zguide ||| construct	count=1
return	o ||| string	count=2
return	arbitraria en el ||| bool	count=1
arg_pair	compone una imagen ||| gmagick $source	count=1
namespace	llama a la ||| gearmanworker	count=1
arg_pair	bit de start ||| gmp $a int $start	count=2
function_name	de épocas de ||| epochs	count=2
arg_pair	la ||| string $msgid2	count=1
arg_pair	píxel que coincida con ||| mixed $target mixed $fill	count=1
function_name	el seno hiperbólico ||| trader sinh	count=1
function_name	tidy ||| tidy reset	count=1
function_name	la cadena de ||| load string	count=1
function_name	registrados disponibles en ||| wrappers	count=1
function_name	se usa [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	identidad ||| identity	count=1
function_name	devuelve el número de ||| param count	count=1
arg_pair	contexto log_cmd_update ||| array $updateoptions	count=1
function_name	una [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	en el parámetro charlist ||| string $str string $charlist	count=1
arg_pair	ambos por ||| int $fetchtype	count=1
function_name	función glob() de ||| glob	count=1
namespace	función de retorno ||| gearmanworker	count=1
function_name	devuelve la respuesta ||| get response	count=2
function_name	archivo temporal ||| mailparse uudecode	count=1
function_name	encuentra disponible ||| ps open	count=1
arg_pair	descriptor de fichero fd ||| int $uid	count=1
function_name	notifica a ||| gupnp service notify	count=1
function_name	ignoradas ||| set	count=1
arg_pair	parámetro length ||| bool $crypto_strong	count=1
function_name	una declaración de namespace ||| xml set end namespace decl	count=1
namespace	a que todos los ||| function	count=1
return	que contiene el carácter ||| string	count=1
namespace	sido creado con el ||| sdo_das_xml	count=1
function_name	la siguiente petición xpath ||| register xpath namespace	count=1
return	un error ||| void	count=1
function_name	fragmeto ideal para acomodar ||| highlight regex slop	count=1
function_name	[function_name_1] desde ||| [function_name_2] [function_name_1]	count=6
arg_pair	con los ||| array $params int $type	count=1
function_name	caché del código de ||| apc	count=1
return	inicio de un ||| string	count=1
function_name	del campo a ||| alternate field	count=1
function	[function_name_1] especificado ||| [function_name_1] [arg_pair_2]	count=15
function_name	memcached::touch() ||| touch by key	count=2
function_name	la última fila insertada ||| last insert	count=1
function_name	error ||| action return error	count=1
return	preserva los ||| gmagick	count=1
arg_pair	obtiene y ordena números ||| string $search_criteria	count=1
namespace	una excepción ||| rarexception	count=1
function_name	borra los registros de ||| delete	count=1
namespace	de array se ||| function	count=1
function_name	la frecuencia bajo ||| term frequency	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] new resource $context [arg_pair_2]	count=3
function_name	parámetros ||| open	count=1
arg_pair	ancho de [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	de la tabla donde ||| table	count=1
function_name	/encoding ||| encoding	count=1
function_name	esta función crea una ||| create	count=4
arg_pair	uri que ||| string $uri string $encoding	count=1
namespace	especificado por filename a ||| function	count=1
namespace	a la ||| gearmanworker	count=1
function_name	y extrae cada archivo ||| mailparse uudecode	count=1
function_name	salidas de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	función analiza el ||| parse	count=1
namespace	son similares al ||| mongocursor	count=1
function_name	de gravedad actual de ||| gravity	count=1
function_name	rango de datos ||| start	count=1
arg_pair	image ||| int $font	count=1
function_name	de compresión de ||| set compression	count=1
function	atributo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	nombres ||| default	count=1
function_name	[function_name_1] mensaje ||| [function_name_1] [function_name_2]	count=2
return	función devuelve una cadena ||| string	count=1
function_name	la lista de ||| image	count=1
function_name	con la ||| by	count=1
function	imprime [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	no bloquearán la e/s ||| eio readahead	count=1
function_name	página y aplica ||| page ext	count=1
function_name	sobre cualquier flujo ||| stream	count=1
arg_pair	la cuota de ajustes ||| resource $imap_stream string $quota_root	count=1
function	propiedad para [arg_pair_2] ||| [function_name_1] value enum [arg_pair_2]	count=4
function_name	http de la respuesta ||| http	count=1
arg_pair	como timestamp y ubicación ||| int $format	count=2
function_name	[function_name_1] [function_name_2] máximo ||| [function_name_1] [function_name_2]	count=1
return	si el ||| bool	count=3
function_name	sistema posix [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	devolverá el nombre del ||| name by name	count=1
function_name	string utilizando el algoritmo ||| crypt	count=1
arg_pair	colas o ||| zmqsocket $backend	count=1
function_name	lo menos tantos ||| set	count=1
namespace	que son similares al ||| mongocursor	count=1
arg_pair	clave dada por key ||| string $key	count=1
function_name	si todavía no se ||| count	count=1
function_name	entonces en lugar ||| set using	count=1
rest	crea un [function_2] ||| [return_1] [function_2]	count=1
function_name	lugar de ||| using exceptions	count=1
function_name	los parámetros y de ||| get params	count=1
function_name	el ||| required parameter	count=2
return	predeterminado [return] ||| [return]	count=2
function_name	compresión de ||| compression	count=1
function_name	cadena del formato utf-32 ||| pdf utf32	count=1
arg_pair	blanco y negro ||| float $gamma	count=1
function_name	la que las palabras ||| mlt min doc frequency	count=1
function_name	descripción de la ||| surface	count=5
function_name	devuelve ||| variant get	count=1
function_name	proveedor oauth ||| required parameter	count=1
function_name	obtener el tamaño de ||| cubrid lob2 size	count=1
function	[function_name_1] result ||| [arg_pair_2] [function_name_1]	count=3
function_name	primera muestra de datos ||| first	count=1
function_name	que las palabras que ||| set mlt min doc	count=1
namespace	se usa para ||| function	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] table [arg_pair_2]	count=3
function_name	la que ||| min	count=1
arg_pair	una estructura ||| int $num_input	count=1
namespace	define el de ||| harupage	count=1
function_name	cualesquiera ||| fgetss	count=1
function_name	función crea una nueva ||| create entity reference	count=1
namespace	si el ||| imagick	count=1
function	string [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	entrenamiento [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	de datos postgresql ||| pg	count=2
function_name	palabras ||| min doc frequency	count=2
function_name	orden inverso mayor ||| rsort	count=1
function_name	al entrenamiento continuar sin ||| fann get cascade output	count=1
function_name	en por ||| min doc	count=1
function_name	entradas de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	de opendir readdir ||| eio readdir	count=1
function_name	disponibles después de llamarla ||| data source	count=1
function_name	lista ||| enchant broker list	count=1
function_name	factor de escala ||| scale	count=2
return	se ||| solrquery	count=1
function_name	[function_name_1] desplazamiento del ||| [function_name_2] [function_name_1]	count=2
function_name	siguiente elemento está ||| next element	count=2
return	cuando se ||| void	count=1
arg_pair	sistema ||| resource $p	count=1
function_name	el valor de un ||| value	count=1
namespace	claves x e ||| gmagick	count=1
function_name	[function_name_1] de interoperabilidad ||| [function_name_2] [function_name_1]	count=2
function_name	copyright ||| copyright	count=1
function_name	documentos como ||| min doc	count=1
function_name	existe ||| array key exists	count=1
arg_pair	infilename y lo ||| string $infilename	count=1
function_name	sujeto ||| begin	count=1
arg_pair	log_cmd_update al ||| array $updateoptions	count=1
namespace	como una ||| gmagick	count=2
function_name	punto primario rojo ||| getimageredprimary	count=1
arg_pair	xsltprocessor ||| string $name	count=1
arg_pair	dado por form ||| resource $form	count=2
arg_pair	el sistema de ||| resource $p	count=1
function_name	dado y extrae cada ||| all	count=1
arg_pair	con un nuevo par ||| object $object mixed $value	count=1
function	[function_name_1] un mensaje ||| [arg_pair_2] [function_name_1]	count=1
function_name	devuelve ||| cubrid get	count=3
arg_pair	peticiones en un ||| resource $grp int $limit	count=1
return	en la búsqueda recuperación ||| bool	count=1
arg_pair	la ||| int $y	count=1
function_name	[function_name_1] información detallada ||| [function_name_1] [function_name_2]	count=4
function_name	borra los registros de ||| pg delete	count=1
namespace	iniciada por ||| function	count=2
function_name	en inglés describiendo ||| last error msg	count=1
function_name	se ||| start	count=1
function_name	al grupo de peticiones ||| grp	count=1
arg_pair	la entrada especificada ||| string $key resource $handle	count=1
function_name	solicitud de servicio extendido ||| yaz es	count=1
function_name	propiedad gravedad global ||| get gravity	count=1
function_name	definición rra por ||| archive	count=1
function_name	función ps_stringwidth() excepto que ||| geometry	count=1
function_name	extensión iconv ||| iconv get encoding	count=1
function_name	prioridad de los ||| priority	count=1
return	una matriz con las ||| array	count=1
function_name	búsqueda en el buzón ||| imap search	count=1
function_name	en ||| mlt min doc	count=2
function_name	los campos [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	repetidamente a filter_var() ||| array $data mixed $definition	count=1
function_name	de datos abierta filepro ||| filepro fieldcount	count=1
function_name	de estilo de ||| show	count=1
function_name	el que comenzar ||| terms lower	count=2
arg_pair	archivo de base de ||| string $filename	count=1
function_name	para ver si ||| ping	count=1
function_name	devuelve estadísticas de cliente ||| mysqli get client stats	count=1
function_name	registro están habilitados ||| get level	count=1
function_name	subsiguiente ||| add types	count=2
return	una entrada de ||| string	count=1
function_name	[function_name_1] datos ||| [function_name_1] [function_name_2]	count=1
function	la precisión [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] macenado ||| [function_name_1] [function_name_2]	count=2
function_name	en oposición a estar ||| internal	count=1
return	información entre un ||| resource	count=1
arg_pair	esta función invoca un ||| resource $id	count=1
return	inicio de un string ||| string	count=1
arg_pair	copia ||| bool $backup_original_files	count=1
return	basada en parámetros previamente ||| bool	count=3
namespace	puedan aplicarse a ||| imagickkernel	count=1
function_name	palabra para ||| word	count=1
function	repositorio [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	si solrquery::sethighlightalternatefield() ||| int $fieldlength	count=1
function_name	la descripción de la ||| cairo ps level	count=1
function	[function_name_1] codificación de ||| [function_name_1] [arg_pair_2]	count=1
function_name	de una instrucción sql ||| mssql next result	count=1
function_name	un iterador ||| children	count=1
arg_pair	o más imágenes y ||| imagick $image	count=1
arg_pair	versión plural de gettext() ||| string $msgid1 string $msgid2	count=1
function	[function_name_1] una ||| [function_name_1] rename [arg_pair_2]	count=1
arg_pair	un ||| int $x int $y	count=1
function_name	objeto respuesta actual ||| response	count=1
function_name	especificado si devuelve ||| module get supported	count=1
function_name	texto ||| curl strerror	count=2
function	[function_name_1] arrays al ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	la class dada y ||| mixed $class bool $autoload	count=1
return	número de filas afectadas ||| int	count=1
namespace	de imagen que representa ||| function	count=6
function_name	los datos del ||| uudecode all	count=1
namespace	biblioteca unrar ||| rarexception	count=1
function_name	pcos con ||| pdf pcos	count=4
function_name	corresponde al nombre de ||| by name	count=1
arg_pair	en el calendario calendar ||| int $calendar	count=1
function_name	facetas [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	llena ||| bool	count=1
function_name	estilo ||| slide show	count=2
function_name	guarda la estructura de ||| fann save	count=1
arg_pair	los ||| int $x int $y	count=1
namespace	por intérpretes de ||| function	count=1
function_name	directorio virtual actual donde ||| chdir	count=1
arg_pair	de una ||| resource $connection	count=2
arg_pair	parámetro data en ||| string $data	count=1
namespace	de renderización de la ||| gmagick	count=1
return	fgetss() intenta eliminar cualesquiera ||| string	count=1
function_name	de accesibilidad ||| access count	count=1
function_name	la lista de ||| data	count=1
arg_pair	busca la última ocurrencia ||| string $haystack	count=1
function_name	incluyendo las propiedades heredadas ||| default properties	count=1
arg_pair	de cadena ||| string $key	count=1
function_name	devuelve la información de ||| get	count=1
function	[function_name_1] oid ||| [function_name_1] class name [arg_pair_2]	count=1
arg_pair	a otro objeto grande ||| oci-lob $lob_to oci-lob $lob_from	count=1
function_name	los nombres de campos ||| names	count=1
arg_pair	y crear un ||| resource $pdfdoc	count=1
function_name	la frecuencia en la ||| min doc	count=1
arg_pair	ruta corriente ||| float $ang1	count=1
arg_pair	identificaron con el mismo ||| string $client_identifier	count=1
arg_pair	abre un archivo ||| string $filename	count=1
arg_pair	eventos ||| int $flags	count=1
function_name	de odbc ||| odbc	count=1
function_name	[function_name_1] el último ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] o ambos ||| [arg_pair_2] [function_name_1]	count=1
function_name	de un lapiz ||| sketch	count=1
function_name	[function_name_1] transformación ||| [function_name_2] [function_name_1]	count=2
namespace	el descriptor previamente ||| oci-lob	count=1
function_name	devuelve el iterador interno ||| get inner iterator	count=1
return	se defina sobre ||| zmqsocket	count=1
function_name	la dirección ipv4 ||| gethostbyname	count=1
arg_pair	como fopen() fread() etc.) ||| string $protocol string $classname	count=1
function_name	de un lapiz ||| sketch image	count=1
return	las solicitudes ||| bool	count=1
namespace	completa a ||| function	count=1
function_name	la que las palabras ||| doc frequency	count=1
arg_pair	parecida a ||| string $servername string $username	count=1
function_name	sentencia sql ||| escape	count=1
function_name	puesta de sol para ||| sunset	count=1
arg_pair	o especial a menudo ||| int $dev	count=1
function_name	que se pulse una ||| newt wait for key	count=1
return	su nombre en la ||| bool	count=1
arg_pair	uri que contiene el ||| string $uri	count=1
namespace	carácter dado con ||| intlchar	count=3
function_name	de ||| set sslchecks	count=2
function_name	de compresión ||| compression	count=2
function_name	para obtener el tamaño ||| lob2 size	count=1
function_name	devuelve ||| mssql get	count=1
return	en las coordenadas dadas ||| bool	count=1
function_name	de filas de ||| num rows	count=1
return	mueve un ||| resource	count=1
return	en el manejador ||| bool	count=1
function_name	de errores interno o ||| trigger error	count=1
function_name	consultado se ||| count	count=1
arg_pair	ruta corriente ||| float $ray	count=1
function_name	palabras que ||| mlt min doc frequency	count=1
return	núcleo («kernel») ||| void	count=1
function_name	de trabajo ||| job	count=2
function_name	una ||| zip entry	count=1
function_name	de columna ||| array column	count=1
function_name	establecer el valor ||| value	count=1
namespace	los índice ||| splfixedarray	count=1
arg_pair	o algoritmos alternativos que ||| string $str string $salt	count=1
function_name	[function_name] sin ||| [function_name]	count=3
function_name	devuelve los [function_name_2] ||| [function_name_1] last response [function_name_2]	count=1
return	dado en mode ||| bool	count=1
return	en la instancia apuntada ||| bool	count=1
function_name	multi-dimensional con información ||| all info	count=3
arg_pair	relation la hace ||| resource $relation	count=3
arg_pair	es una ||| resource $result	count=2
namespace	frecuencia en la ||| solrquery	count=1
function_name	argumentos ||| args	count=1
function_name	blanco u ||| ltrim	count=1
arg_pair	de archivo ||| resource $p string $filename	count=1
function_name	una rutina de ||| set default stub	count=1
function_name	función geoip_country_code_by_name() devolverá ||| country code by	count=1
function_name	en el fichero gzip2 ||| bzwrite	count=1
arg_pair	el resultado ||| resource $link resource $result	count=1
function_name	de respuesta sin tratar ||| raw	count=1
function_name	un ||| set using exceptions	count=4
namespace	un archivo ||| function	count=1
namespace	distancia de la ||| harufont	count=1
function_name	seguridad ||| highlight alternate	count=1
arg_pair	imágenes y devuelve ||| imagick $image int $channeltype	count=1
function_name	de ||| mailparse	count=1
namespace	conocer los glifos que ||| function	count=1
return	incrementar o disminuir el ||| void	count=1
function_name	crea un ||| create	count=9
function_name	del espaciado de ||| space	count=1
namespace	después ||| splfixedarray	count=1
function_name	la cadena de ||| string	count=1
function_name	como ||| set mlt	count=1
arg_pair	de un string a ||| string $str	count=1
function_name	color especificado como ||| get color value	count=1
return	establecer ||| int	count=1
function_name	afectadas por una consulta ||| ifx affected	count=1
function_name	patrón guía ||| dash	count=1
function_name	excepción ||| set using	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] image [function_name_2]	count=9
function_name	establece la [function_name_2] ||| fann [function_name_1] cascade candidate [function_name_2]	count=1
function_name	retorna el nombre corto ||| frame short name	count=1
function	renombra [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	la función cubrid_col_get() ||| col get	count=1
function_name	último mensaje de error ||| last error	count=1
function_name	filas afectadas por ||| msql affected rows	count=1
arg_pair	solamente caracteres de mask ||| string $mask	count=1
return	de la base de ||| int	count=1
arg_pair	bson ||| array $typemap	count=1
function_name	especificados ||| fetchmime	count=1
function_name	la capa ||| layer	count=1
function_name	en cualquier consulta generada ||| query	count=1
function_name	incluir o ||| terms include	count=1
arg_pair	el contenedor ||| resource $fdf_document string $frame_name	count=1
arg_pair	invoca un ||| resource $id string $query	count=1
function_name	manejador de [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	de [function_name] ||| do [function_name]	count=3
arg_pair	una canal de imagen ||| int $channel	count=1
function_name	épocas de [function_name_2] ||| [function_name_2] [function_name_1]	count=12
arg_pair	a una ||| float $ury string $url	count=1
function_name	[function_name_1] tupla de ||| [function_name_2] [function_name_1]	count=8
namespace	extensión reflexionada devolvíendola ||| reflectionextension	count=1
function_name	para ||| broker set	count=1
function	seridor asociado [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	logo de php usando ||| logo guid	count=1
namespace	lista ||| function	count=2
function_name	disposición de ||| setimagedispose	count=1
function_name	datos db2 ||| db2	count=1
arg_pair	método y la clave ||| string $data string $method	count=1
function_name	codificación de caracteres del ||| detect encoding	count=1
function_name	descripción ||| cairo ps surface get	count=1
function_name	de los modificadores de ||| modifiers	count=2
function_name	obtener el número de ||| fann get num	count=2
return	sobre ||| resource	count=1
function_name	en la ||| doc frequency	count=1
function_name	todas las cabeceras de ||| request headers	count=1
return	el pid ||| int	count=1
function_name	devolverá la ||| odbc data source	count=1
function_name	a sybase_fetch_assoc() con la ||| sybase	count=1
arg_pair	memcached::getmulti() ||| string $cas_tokens int $flags	count=1
function_name	sobre un proceso ||| proc get	count=1
arg_pair	un [arg_pair_2] ||| [arg_pair_1] resource $train_data [arg_pair_2]	count=2
function_name	[function_name_1] superior ||| [function_name_2] [function_name_1]	count=2
function_name	secuencia de ||| msgno	count=1
function_name	al semáforo ||| sem	count=1
function_name	sobre el buzón actual ||| imap check	count=1
arg_pair	de datos del acs ||| string $machine	count=1
function_name	que las palabras ||| doc	count=1
namespace	que todos los ||| function	count=1
function_name	apache ||| apache note	count=2
function_name	la biblioteca unrar encuentre ||| exceptions	count=1
function	[function_name_1] pseudo-aleatorios ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	dispositivos ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	valor ||| string $variable string $value	count=1
function_name	diccionario ||| closedict	count=1
function_name	frecuencia bajo la ||| min term frequency	count=1
arg_pair	stream_socket_server() ||| resource $server_socket float $timeout	count=1
arg_pair	de bytes str de ||| string $charset	count=1
namespace	dado de ||| splfileobject	count=1
arg_pair	una nueva ||| string $url	count=1
function_name	actual donde ||| dbplus	count=1
function_name	colores de primer plano ||| color set	count=1
namespace	la última petición ||| memcached	count=1
function_name	de excepciones ||| exception	count=1
namespace	código ||| function	count=1
function_name	este método se ||| data	count=1
function_name	filas ||| start	count=1
function_name	la función geoip_country_code_by_name() devolverá ||| country code by name	count=1
namespace	formateo dado por ||| function	count=1
function_name	en la configuración del ||| config	count=1
function_name	la ||| set mlt min	count=2
function_name	caché ||| apc	count=5
arg_pair	un punto ||| mixed $codepoint int $property	count=1
function_name	especificada ||| zip entry compressionmethod	count=1
arg_pair	no se especifica ninguna ||| mixed $id	count=1
function_name	servidor virtual ||| server by path	count=1
function_name	definida por el usuario) ||| restore	count=2
function_name	establece ||| ms set qos	count=2
arg_pair	de memcached::set() con la ||| int $expiration	count=1
return	información sobre ||| array	count=1
return	datos arbitrarios ||| bool	count=1
function_name	descripción de ||| cairo font options set hint style	count=1
function_name	cubrid_insert_id() recupera el id ||| id	count=1
return	crea un fichero ||| resource	count=1
function_name	diccionario indicado ||| crack	count=1
function_name	de archivo ||| uudecode all	count=1
function_name	la descripción de ||| color stop rgb	count=1
arg_pair	un ||| resource $grp int $limit	count=1
namespace	actual y escribe el ||| splfileobject	count=1
function_name	archivo codificado ||| mailparse uudecode all	count=1
function_name	función socket_read() lee desde ||| read	count=1
function_name	con el ||| add	count=1
function_name	importar ||| import	count=1
arg_pair	versión plural ||| string $msgid1	count=1
function_name	por lo menos ||| set mlt	count=1
function	socket_sendto() envía [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	acepta uno ||| function	count=1
function_name	glob() de ||| glob	count=1
function_name	escribir operaciones ||| write buffer	count=1
namespace	las letras en ||| harufont	count=1
arg_pair	concatena [arg_pair] ||| [arg_pair]	count=3
return	[return] descrito en ||| [return]	count=2
return	número de ||| bool	count=1
function_name	fecha de este ||| date	count=1
function_name	se encuentra ||| ps open memory image	count=1
function_name	caché de la sesión ||| wincache	count=1
function_name	apuntador ||| mailparse uudecode all	count=2
function_name	blob/clob ejecutando ||| cubrid lob	count=1
function_name	mismo nodo ||| is same node	count=2
arg_pair	de botón tridimensional ||| int $width	count=1
function_name	si todavía ||| count	count=1
arg_pair	arg ||| float $arg	count=1
function_name	se vieron afectadas por ||| ibase affected	count=1
function_name	atributo ||| to attribute	count=1
function_name	von einer mime ||| mime encode	count=1
arg_pair	un array en arrays ||| array $array	count=1
function_name	columna de la ||| column	count=1
return	las capas ||| zmqsocket	count=1
function_name	valor predeterminado ||| close	count=1
function_name	número de tendencias ||| fann get bias array	count=1
function_name	un ||| gmp	count=1
function_name	a unicode ||| unicode	count=1
function_name	la relación ||| dbplus	count=3
arg_pair	imágenes usando un ||| int $width int $height	count=1
function_name	un documento html ||| is html	count=1
function_name	en des de unix ||| crypt	count=1
function_name	de patrón ||| pattern	count=1
namespace	identificada por column_number ||| sqlite3result	count=1
arg_pair	estructura de ||| int $num_data	count=1
namespace	el fichero dado ||| splfileobject	count=1
arg_pair	b negro y ||| float $b	count=1
arg_pair	fichero que contiene una ||| string $file	count=1
function_name	tendencias de ||| get bias array	count=1
function_name	la descripción de ||| image surface	count=1
arg_pair	el algoritmo ||| string $algorithm	count=2
namespace	una clase está definida ||| reflectionclass	count=1
namespace	imagen escalando la ||| gmagick	count=1
arg_pair	offset y ||| int $offset	count=1
arg_pair	alpha y ||| resource $p float $alpha	count=1
function_name	número de secuencia de ||| imap msgno	count=1
function_name	este serán ||| min doc	count=1
return	disponibles después de llamarla ||| array	count=1
function_name	[function_name] una clase ||| [function_name] write	count=3
function_name	y la devuelve como ||| get	count=1
function_name	cada uno de ellos ||| array map	count=1
function_name	relaxng del ||| relax	count=1
namespace	este método es llamado ||| php_user_filter	count=1
return	error una ||| void	count=1
function_name	con información detallada sobre ||| info	count=1
function_name	servicio y las ||| start service	count=1
arg_pair	de start hacia los ||| int $start	count=2
arg_pair	resultado especificado para apuntar ||| resource $result int $row_number	count=1
function_name	error de paso ||| error	count=4
function_name	el algoritmo ||| crypt	count=1
function_name	retraso de la imagen ||| image delay	count=1
arg_pair	un texto freetype ||| string $text	count=1
function_name	la ||| slide	count=1
function_name	en la que ||| set mlt min doc	count=1
arg_pair	estructuras de información asociadas ||| int $table	count=1
function_name	una entrada ||| zip entry	count=1
arg_pair	el archivo en una ||| string $filename int $use_include_path	count=1
function_name	de reescritura establecidas ||| output reset rewrite	count=1
function_name	a la imagen ||| image	count=2
function_name	el proveedor ||| required parameter	count=1
function_name	la que ||| set mlt min	count=1
function_name	establece el número de ||| fann set cascade num	count=1
function_name	archivo rrd ||| rrd	count=1
namespace	los servidores de ||| gearmanclient	count=1
function_name	javascript ||| javascript	count=1
function_name	el ascenso vertical ||| get ascent	count=1
return	el valor ||| mixed	count=7
return	en el área ||| bool	count=1
return	gettext() ||| string	count=1
function_name	recupera el ||| get	count=1
function_name	disponible ||| ps open	count=1
arg_pair	es una manera alternativa ||| string $name	count=1
function_name	neuronas de cada capa ||| get layer array	count=1
function_name	propia clase ||| class	count=1
arg_pair	o cualquier abstracción que ||| zmqsocket $frontend	count=1
function_name	el copyright de ||| copyright	count=1
function_name	etiqueta ||| tag	count=2
function_name	la página sujeta ||| fit pdi page	count=1
arg_pair	con el específico link_identifier ||| string $database_name resource $link_identifier	count=1
function_name	cubrid_lob2_new() ||| lob2	count=1
function_name	la que ||| doc frequency	count=1
arg_pair	construye un objeto ||| mixed $data int $priority	count=1
function_name	actual donde se ||| dbplus	count=1
function_name	[function_name] desafío desde ||| [function_name]	count=1
arg_pair	salto ||| string $break bool $cut	count=1
namespace	(1 de ||| function	count=1
arg_pair	que coincida ||| float $fuzz	count=1
function_name	lee la miniatura embebida ||| exif thumbnail	count=1
arg_pair	el ||| int $cipher	count=2
function_name	para los eventos ||| set event	count=1
function_name	de bézier desde el ||| curveto	count=1
function_name	trozos remarcados en la ||| highlight	count=1
function_name	pares de sustitución junto ||| pspell config save repl	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] entity decl handler [arg_pair_2]	count=2
namespace	pueden hacer de intermediarios ||| zmqdevice	count=1
function_name	documento html desde ||| html	count=1
function_name	el código de ||| curl	count=1
function_name	de unicode binaria ||| binary	count=1
arg_pair	[arg_pair_1] y path2 ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	tantos ||| set mlt	count=1
function_name	nuevo contexto ||| context new	count=1
function_name	inverso del modulo de ||| invert	count=1
function_name	[function_name_1] para ser ||| [function_name_2] [function_name_1]	count=2
function_name	línea actual ||| get current line number	count=1
arg_pair	com_* básico ||| int $ok_packet	count=1
function_name	pares de ||| save repl	count=1
function_name	las candidatas ||| get cascade	count=2
return	espacios en blanco u ||| string	count=1
namespace	se le ha consultado ||| mongocursor	count=1
arg_pair	la columna especificada en ||| resource $stmt mixed $column	count=3
function_name	cromaticidad de la imagen ||| image	count=2
return	los ||| zmqsocket	count=1
arg_pair	una operación por lotes ||| array $batch	count=1
function_name	el trazado [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	uri ||| string $uri string $encoding	count=1
function_name	fichero de esquema en ||| add types	count=1
arg_pair	el ||| resource $imap_stream	count=2
arg_pair	para poder utilizarlo con ||| string $separator	count=1
function_name	establece ||| qc set	count=1
namespace	esta función devolverá la ||| function	count=1
function_name	mime kopfzeile en el ||| iconv mime	count=1
function_name	libera la memoria ||| free result	count=1
arg_pair	correspondientes a los nombres ||| int $row	count=1
function_name	registrar su ||| register	count=1
function_name	un error una ||| exceptions	count=1
arg_pair	caracter de salto de ||| string $break bool $cut	count=1
function_name	reescritura establecidas ||| output reset rewrite vars	count=1
function_name	disponibles ||| data	count=1
arg_pair	dibuja la cadena ||| int $x	count=2
namespace	los índice del array ||| splfixedarray	count=1
function_name	que file_get_contents() devuelve el ||| get contents	count=1
function_name	de envío ||| odbc autocommit	count=1
function_name	copia los datos ||| copy to	count=1
function_name	que ||| mlt	count=2
function_name	site exec ||| ftp exec	count=1
arg_pair	antes de alimentarlo a ||| resource $ann array $input_vector	count=1
function_name	crea y ||| create	count=1
return	cromaticidad como ||| array	count=1
arg_pair	ereg_replace() excepto ||| string $replacement	count=1
function_name	[function_name_1] y realiza ||| [function_name_2] [function_name_1]	count=6
return	el puntero dado ||| string	count=1
function_name	segundo plano retornando el ||| background	count=1
function_name	la fecha ||| date parse	count=1
function_name	errores ||| sqlsrv errors	count=2
function_name	del servidor mysql ||| mysql	count=1
namespace	el [namespace] es un ||| [namespace]	count=2
function_name	palabras que ||| min doc	count=1
function_name	actual a unas ||| ps moveto	count=1
function_name	se buscarán los ||| chdir	count=1
function	[function_name_1] con nombre ||| [arg_pair_2] [function_name_1]	count=1
function_name	uso ||| proc	count=1
function_name	igual que ||| close	count=1
function_name	especifica el número máximo ||| max analyzed chars	count=1
function_name	los colores ||| ncurses color	count=1
return	de dsn disponibles ||| array	count=1
function_name	si ||| using	count=2
namespace	estilo de ||| harupage	count=1
function_name	una interfaz a gettimeofday ||| gettimeofday	count=1
arg_pair	acceso al servicio daemon ||| string $daemon string $address	count=1
function_name	devuelve el coseno ||| cos	count=1
return	ambos puedan aplicarse ||| void	count=1
function_name	cuando la biblioteca unrar ||| set	count=1
namespace	botón tridimensional simulado aclarando ||| gmagick	count=1
function_name	[function_name_1] semáforo dado ||| [function_name_2] [function_name_1]	count=2
arg_pair	para el result ||| resource $result int $index	count=1
function_name	que el ||| close	count=1
function_name	elimina uno de ||| remove	count=2
arg_pair	es decir el valor ||| string $filename	count=1
function_name	php ||| gettype	count=1
function_name	socket_read() lee desde ||| read	count=1
function_name	clase iterador que ||| set iterator class	count=2
function_name	fila insertada o el ||| insert	count=1
function_name	indicado mediante ||| closedict	count=1
return	esta función ||| int	count=1
function_name	socket creado ||| stream socket accept	count=1
function_name	superficie ||| similar	count=1
function_name	datos lob ||| db2 lob	count=1
namespace	que el ||| directory	count=1
function_name	0.0 y 1.0 ||| hsl	count=1
function_name	ruta del directorio ||| enchant broker set dict path	count=1
function_name	de configuración ||| config	count=1
function_name	posiciona el cursor ||| move to	count=3
function_name	el logo de ||| php logo guid	count=1
function_name	en lugar ||| set using	count=1
function_name	elongamiento de la fuente ||| font stretch	count=1
function_name	bytes requeridos para mostrar ||| db2 field display size	count=1
namespace	obtiene el tipo de ||| gmagick	count=1
namespace	última llamada a imap_alerts() ||| function	count=1
return	nodo ||| domnode	count=2
function_name	envía ||| send	count=7
function_name	[function_name_1] javascript ||| [function_name_2] [function_name_1]	count=1
function_name	abierto y devuelve el ||| get contents	count=1
arg_pair	función prepara ||| resource $id	count=1
function_name	único sentido ||| hash	count=1
function_name	actual ||| nsapi	count=1
arg_pair	el valor ||| int $flags	count=1
arg_pair	enganchar los métodos de ||| mysqli $mysqli_connection	count=1
arg_pair	a un ||| resource $handle	count=1
namespace	cambia el ||| function	count=1
return	de un objeto ||| int	count=1
function_name	punto primario verde ||| green primary	count=1
function_name	[function_name_1] almacena ||| [function_name_2] [function_name_1]	count=1
arg_pair	los ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	tipo de imagen ||| set image type	count=2
arg_pair	con ||| string $name callable $function	count=1
arg_pair	por sequence ||| string $sequence	count=1
arg_pair	direcciones horizontal y vertical ||| float $y	count=1
function_name	utilizar para que la ||| by	count=2
function_name	de ssl ||| set	count=1
function_name	string con ||| addcslashes	count=1
arg_pair	que fgetss() ||| int $length	count=1
function_name	entrenamiento continuar sin cambiar ||| fann	count=1
namespace	se especifica el ||| function	count=1
function_name	obtiene el valor por ||| get default	count=1
function_name	de escape ||| escape	count=1
arg_pair	obtener la cuota de ||| resource $imap_stream string $quota_root	count=1
function_name	inicial ||| zero	count=1
namespace	llama a ||| gearmanworker	count=1
function_name	de comprensión de salida ||| setswfcompression	count=1
arg_pair	timestamp y ||| int $timestamp int $format	count=2
function_name	devuelve la ruta ||| get	count=2
function_name	línea por debajo ||| ps continue	count=1
function_name	permite establecer el valor ||| value	count=1
return	devolver un valor ||| void	count=1
function_name	descripción de ||| add color stop rgb	count=1
function_name	error dado ||| curl	count=1
function_name	la transformación ||| trans matrix	count=1
function_name	establece el valor ||| set	count=4
namespace	error que ocurrión en ||| function	count=1
function_name	la profundidad de la ||| depth	count=2
arg_pair	variable_name en ||| string $variable_name	count=1
function_name	por lo menos ||| min doc	count=1
arg_pair	de intermediarios de ||| zmqsocket $frontend	count=1
function_name	file_get_contents() devuelve ||| get contents	count=1
namespace	mensaje y socket. -- ||| zmqdevice	count=1
function_name	mensaje ||| construct	count=1
function_name	transacción ||| commit	count=3
arg_pair	php var_array ||| array $var_array	count=1
return	una matriz ||| array	count=3
function_name	la última ||| last	count=7
function_name	[function_name_1] salidas ||| [function_name_1] [function_name_2]	count=3
arg_pair	[arg_pair_1] str ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	tidy a sus valores ||| tidy	count=1
arg_pair	se especifica ninguna ||| mixed $id	count=1
function_name	función crea ||| create attribute ns	count=1
function_name	estado http ||| http status message	count=1
function_name	de tendencias de ||| bias	count=1
function_name	todas ||| request	count=1
arg_pair	por form ||| array $components	count=1
function_name	caracteres del inicio de ||| ltrim	count=1
function_name	punto ||| point	count=2
function_name	el alto de la ||| height	count=1
function_name	tipo del ||| type	count=1
function_name	de reflectionparameter ||| parameters	count=1
function_name	del proceso actual ||| setproctitle	count=1
arg_pair	datos almacenados en la ||| bool $summaryonly	count=1
function_name	de emitir advertencias ||| exceptions	count=1
arg_pair	de memcached::getmulti() ||| string $cas_tokens int $flags	count=1
function_name	la de memcached::prepend() con ||| prepend by key	count=1
arg_pair	de colores que ||| int $numcolors	count=2
return	un string con la ||| string	count=1
function_name	[function_name_1] el valor ||| [function_name_2] [function_name_1]	count=1
return	para el ||| void	count=1
function_name	número máximo ||| max analyzed chars	count=1
namespace	error de cualquier ||| function	count=1
function_name	última sentencia insert ejecutada ||| last insert	count=1
function_name	apuntador interno ||| seek	count=1
namespace	true entonces en lugar ||| rarexception	count=1
function_name	valor especial ||| set using exceptions	count=1
arg_pair	value ||| int $options	count=1
function_name	la versión de ||| version	count=6
function_name	el siguiente índice ||| next	count=1
function_name	que el valor predeterminado ||| close	count=1
return	secuencia de mensaje ||| int	count=1
namespace	todavía no ||| mongocursor	count=1
function_name	[function_name_1] de control ||| [function_name_2] [function_name_1]	count=2
function_name	blob que se ||| blob	count=1
arg_pair	función prepara para ||| resource $id	count=1
arg_pair	se comporta de forma ||| string $password	count=1
function_name	rrdgraph::__construct() y devuelve ||| verbose	count=1
function_name	usando el certificado ||| sign	count=1
function_name	a sybase_connect() con dos ||| sybase pconnect	count=1
arg_pair	conjunto óptimo de columnas ||| int $scope int $nullable	count=1
function_name	después de llamarla ||| odbc data	count=1
function_name	devuelve el ||| filesize	count=1
function	añade la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	recibe todas ||| function	count=1
function_name	el uso ||| get	count=1
arg_pair	unicode asignados entre ||| callable $callback int $namechoice	count=1
function_name	del texto saliente ||| text rise	count=1
function_name	especial ||| set using	count=1
function_name	prueba ||| prime	count=1
function	[function_name_1] relation bajo ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] efectos de ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	a las ||| get	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] slob [arg_pair_2]	count=1
function_name	de coordenadas ||| pdf	count=2
return	disponibles ||| string	count=1
function_name	utf-32 ||| pdf utf32	count=1
return	no ||| bool	count=2
arg_pair	una nueva instancia ||| array $rectangle string $text	count=1
function_name	donde se buscarán ||| dbplus chdir	count=1
namespace	el parámetro column_number ||| sqlite3result	count=1
function_name	establece el ||| fdf set status	count=1
function_name	y socket. -- zguide ||| construct	count=1
function_name	en lugar ||| exceptions	count=1
arg_pair	petición actual indicando ||| string $actor string $details	count=1
function	borra [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=1
function_name	la firma digital ||| openssl pkcs7 verify	count=1
function_name	recorta píxeles de los ||| shave	count=1
return	en la fuente rng ||| bool	count=1
function_name	serán ||| mlt min doc	count=1
function_name	este serán ignoradas ||| set	count=1
function_name	descripción ||| add color stop rgb	count=1
function_name	archivo dado ||| mailparse uudecode all	count=1
namespace	a lectura de ||| function	count=1
function_name	almacenada de la caché ||| apc	count=1
arg_pair	con xsltprocessor ||| string $name	count=1
function_name	para los mensajes ||| imap	count=1
function_name	corto para un ||| short	count=1
function_name	[function_name_1] de faceta ||| [function_name_2] [function_name_1]	count=4
function_name	true si [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	csr ||| csr	count=2
namespace	[namespace] de un ||| [namespace]	count=1
function_name	donde se ||| chdir	count=1
namespace	xml dada ||| sdo_das_xml	count=1
function_name	prepara el siguiente ||| next	count=1
function_name	número de reintentos en ||| sybase deadlock retry count	count=1
function_name	forma parecida a sybase_connect() ||| sybase pconnect	count=1
return	advertencias y devolver ||| void	count=1
arg_pair	apunta a un fichero ||| string $filename	count=1
arg_pair	formato de datos ||| string $data	count=1
function	el valor [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	entradas y salidas para ||| fann set	count=1
arg_pair	y ordena números ||| string $charset	count=1
function_name	después de aplicar ||| bdiff	count=1
function_name	[function_name_1] de palabras ||| [function_name_2] [function_name_1]	count=2
function_name	guardará los pares ||| save repl	count=1
arg_pair	de un ||| int $color	count=1
function_name	menos tantos ||| doc	count=1
return	definida por su nobre ||| bool	count=1
function_name	la base ||| select db	count=1
function_name	estado del servidor gearman ||| add task status	count=1
function_name	[function_name_1] clase iterador ||| [function_name_2] [function_name_1]	count=1
function_name	char ||| ifx free char	count=1
function_name	representación json ||| json encode	count=1
function_name	[function_name_1] almacena ||| [function_name_1] [function_name_2]	count=1
function_name	caché del ||| apc	count=1
function_name	fila ||| sqlsrv fetch	count=1
function_name	de fragmento ideal especificado ||| set highlight regex slop	count=1
arg_pair	que coincida con ||| mixed $fill float $fuzz	count=1
function_name	función usa la ||| prob	count=1
return	actual usando la regla ||| bool	count=1
function_name	[function_name_1] patrón guía ||| [function_name_2] [function_name_1]	count=1
function_name	la frecuencia en la ||| set mlt	count=1
return	en la posición ||| bool	count=5
return	de archivo dado y ||| array	count=1
function	[function_name_1] una base ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	[arg_pair] la clave ||| [arg_pair]	count=2
function_name	la tabla en la ||| table	count=1
function_name	postgresql después ||| pg	count=1
function_name	recupera el nombre de ||| name	count=1
arg_pair	r ||| float $r	count=1
namespace	actual del ||| solrdocument	count=1
namespace	parámetro ||| reflectionparameter	count=3
function_name	imagen obtenida ||| imagecreatefromwebp	count=1
arg_pair	orden de las restricciones ||| int $facetsort	count=1
function_name	actualizar ||| cmd update	count=1
function_name	los pares de ||| pspell config save repl	count=1
namespace	hash de un ||| function	count=1
namespace	con dos ||| function	count=1
function_name	de subject que ||| strspn	count=1
function_name	de trabajo ||| ping	count=1
function_name	se ||| set	count=2
function_name	serán ||| mlt min	count=2
function_name	devuelve el número ||| get highlight	count=1
function_name	frecuencia en la ||| mlt min	count=1
arg_pair	una ||| resource $dict	count=1
function_name	imagemagick ||| release	count=1
namespace	la lista de parámetros ||| function	count=1
arg_pair	no existe todavía ||| int $flag int $expire	count=1
return	que ||| zmqsocket	count=1
return	imagickpixel de color de ||| bool	count=1
arg_pair	al archivo ||| string $filename string $localname	count=1
function_name	que las palabras que ||| mlt	count=1
function_name	grupo de peticiones ||| grp	count=1
function_name	comprueba si [function_name] ||| oci [function_name] is	count=1
function_name	la siguiente fila de ||| fetch	count=3
return	dado y extrae cada ||| array	count=1
arg_pair	en un vector ||| array $input_vector	count=1
function	información [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de ||| gmp prob	count=1
return	la ||| array	count=5
function_name	reescritura establecidas ||| reset rewrite	count=1
arg_pair	message ||| string $message string $options	count=1
function_name	como ||| mlt min	count=1
function_name	contexto [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	de las ||| get	count=1
function_name	especificado por ||| chr	count=1
arg_pair	parecida a sybase_connect() con ||| string $servername	count=1
function_name	consulta siguiente ||| next result	count=1
function_name	byte en el ||| byte	count=1
return	uso de ||| array	count=1
function_name	de ||| proc get	count=1
arg_pair	está documentada actualmente solamente ||| string $charset	count=1
function	parámetro [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	redimensiona una ||| resource $image int $new_width	count=1
function_name	en un ||| uudecode all	count=1
arg_pair	tridimensional simulado ||| int $x int $y	count=1
namespace	en el servidor que ||| function	count=1
function_name	establece la [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=4
return	array que describe la ||| array	count=1
function_name	y verificar las extensiones ||| spl autoload extensions	count=1
return	regexiterator::setmode() [return] lista de ||| [return]	count=1
arg_pair	con el método ||| string $method	count=1
return	estándar en ||| bool	count=1
return	zguide ||| zmqsocket	count=1
namespace	por filename es un ||| function	count=1
function_name	de color dada ||| color	count=1
function_name	a sybase_fetch_assoc() con la ||| sybase fetch object	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] get all [arg_pair_2]	count=3
arg_pair	[arg_pair] datos de ||| [arg_pair]	count=1
namespace	datos arbitrarios a todos ||| gearmanclient	count=1
function_name	función mssql_free_statement() si ||| statement	count=1
function_name	de seguimiento tailable que ||| tailable	count=1
function	[function_name_1] un nuevo ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	callback ||| mixed $data	count=4
function_name	describe el código resultante ||| message	count=1
function_name	resultados mediante un cursor ||| cursor	count=1
namespace	función de ||| gearmanworker	count=1
arg_pair	del final de str ||| string $character_mask	count=1
arg_pair	en la database especificada ||| string $database resource $link_identifier	count=1
function_name	subsiguiente fichero de esquema ||| types	count=1
arg_pair	con dos ||| string $charset	count=1
function_name	la petción de recodificación ||| recode string	count=1
return	los servidores ||| bool	count=1
function_name	el estado actualizado ||| status callback	count=1
arg_pair	con clave y ||| string $key	count=1
arg_pair	pseudo-aleatorios ||| bool $strong	count=1
function_name	[function_name_1] palabras dentro ||| [function_name_2] [function_name_1]	count=2
function_name	si es uno ||| is	count=1
function_name	prueba probabilística de ||| gmp	count=1
return	en la zona inmediata ||| bool	count=1
arg_pair	key y almacena ||| mixed $key	count=1
function_name	de proceso ||| setproctitle	count=1
function_name	el carp::cluck ||| apd clunk	count=1
namespace	archivos tar este método ||| phardata	count=1
function_name	devuelve el último ||| broker get error	count=1
arg_pair	el identificador ||| resource $link_identifier resource $result_identifier	count=1
function_name	obtiene la ||| bzerrstr	count=1
function_name	la descripción ||| cairo font options get hint metrics	count=1
function_name	el de estilo ||| set slide	count=1
function_name	error de socket ||| socket strerror	count=1
arg_pair	len bytes de información ||| int $flags	count=1
arg_pair	directorio de volcado ||| int $debug_level string $dump_directory	count=1
function_name	en la ||| doc	count=1
function_name	gestionador de errores ||| sqlsrv configure	count=1
function_name	de casillas de ||| newt checkbox tree	count=1
function_name	las facetas ||| facet	count=1
function_name	se ||| data	count=1
function_name	especial indicando ||| set using	count=1
namespace	documento ||| solrinputdocument	count=4
function_name	actual ||| ingres autocommit	count=1
function_name	tiene suscritos ||| lsub	count=1
function_name	las palabras que no ||| mlt min doc	count=1
arg_pair	función permite enviar emails ||| string $additional_headers	count=1
namespace	que no contienen las ||| function	count=1
arg_pair	fgets() ||| int $length	count=1
function_name	objeto connection verificará ||| connected	count=1
namespace	que contiene un ||| function	count=1
function_name	número es ||| gmp prob	count=1
arg_pair	desde un ||| resource $font_index	count=1
function_name	dado ||| curl strerror	count=2
function_name	de archivo asociado a ||| getfilename	count=1
function_name	gestores ||| handlers	count=1
function_name	información sobre ||| status	count=1
function_name	de secuencia de ||| imap	count=1
function_name	blob previamente ||| blob	count=1
arg_pair	de relation ||| string $name	count=1
function_name	obtiene blob/clob ||| cubrid lob get	count=2
function	[function_name_1] fichero a ||| [function_name_1] [arg_pair_2]	count=4
function_name	a que se asigne ||| work	count=1
function_name	mensaje de ||| strerror	count=1
arg_pair	de ømq pueden ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	simplexmliterator ||| simplexmliterator	count=1
function_name	nombre de [function_name_2] ||| [function_name_2] [function_name_1]	count=23
namespace	el tamaño actual de ||| function	count=1
function_name	los colores de primer ||| color set	count=1
function_name	total de la caché ||| total	count=1
function_name	[function_name] todas ||| [function_name] pages	count=3
function_name	función ||| gmp prob	count=1
arg_pair	si solrquery::sethighlightalternatefield() ||| int $fieldlength string $field_override	count=1
function_name	[function_name_1] particular ||| [function_name_2] [function_name_1]	count=3
function_name	los callback definidos ||| gupnp control point browse	count=2
return	colas o ||| zmqsocket	count=1
return	lectura en ||| bool	count=1
arg_pair	archivo dado ||| string $filename int $flags	count=1
function_name	imagen de tesela ||| imagesettile	count=1
function_name	que las ||| frequency	count=1
namespace	el diccionario ||| function	count=1
function_name	crea una ||| fann create	count=1
function_name	el espacio ||| is default	count=1
function_name	posix asociado ||| posix strerror	count=2
namespace	devuelve ||| serializable	count=1
function_name	número de bits ||| get bits	count=1
function_name	color de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	secreto para las subsecuentes ||| string $token string $token_secret	count=1
function_name	la prueba probabilística de ||| prime	count=1
arg_pair	información sobre la ||| resource $ch	count=1
function_name	descripción ||| cairo ps	count=1
arg_pair	especificado por mailbox ||| string $mailbox	count=1
namespace	se describe ||| function	count=1
function_name	si [function_name] ||| oci [function_name] is	count=1
function_name	frecuencia bajo la cual ||| min term frequency	count=1
function_name	prueba automática sobre ||| self test	count=1
function_name	id es el valor ||| id	count=1
function_name	datos [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	etiqueta id3v2 ||| ktaglib_id3v2_tag	count=1
function_name	variable env ||| env	count=1
function_name	la rotación ||| rotate	count=1
function_name	la frecuencia ||| min	count=1
function_name	y la conexión especificada ||| sqlsrv	count=1
return	cierra el diccionario indicado ||| bool	count=1
arg_pair	un array manteniendo la ||| array $array	count=1
function_name	devuelve la traza de ||| get trace	count=3
namespace	fichero ||| splfileinfo	count=8
function_name	puesta ||| date sunset	count=2
function_name	relevancia del término ||| mlt boost	count=1
function_name	el sistema de coordenadas ||| pdf rotate	count=1
arg_pair	dado por form ||| resource $component	count=1
function_name	[function_name_1] colores únicos ||| [function_name_2] [function_name_1]	count=1
namespace	mensaje para ||| function	count=1
function_name	de memoria caché ||| wincache	count=1
function_name	excepción indicada ||| exception	count=2
function_name	los comentarios de ||| doc comment	count=2
function_name	establece ||| set highlight	count=2
function_name	[function_name_1] cliente usado ||| [function_name_1] [function_name_2]	count=1
function_name	con ||| all	count=1
function_name	especificado por buzon ||| imap createmailbox	count=1
function_name	parámetros del servidor ||| set server params	count=2
function_name	el ||| curl strerror	count=2
function_name	el ancho ||| stringwidth	count=1
function_name	sentencia sql [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	frontbase asociado con ||| fbsql data	count=1
function_name	yaml ||| yaml emit file	count=1
function_name	glifo de ||| ps symbol	count=1
namespace	el ||| splfileobject	count=6
arg_pair	una nueva instancia ||| string $progid	count=1
function_name	página para ajustarse ||| set fit r	count=1
function_name	la función de error ||| error	count=2
function_name	[function_name_1] ssh2 ya ||| [function_name_2] [function_name_1]	count=2
function_name	reemplaza ||| replace	count=7
arg_pair	servicio proxy de forma ||| string $action	count=1
return	en activado por omisión ||| bool	count=1
function_name	cubrid_col_get() [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	argumento offset a la ||| string $offset	count=1
namespace	integer que contiene el ||| function	count=1
function_name	devuelve ||| ms get	count=1
function_name	descenso vertical ||| descent	count=1
arg_pair	a un array ||| resource $statement	count=1
arg_pair	servidor número de puerto ||| string $host int $port	count=1
function_name	mostrar o no información ||| info	count=1
function_name	de apache especificado ||| apache	count=1
function_name	crea un ||| create document	count=1
function_name	indicador ||| gzrewind	count=1
arg_pair	une tres cadenas ||| string $old_data	count=1
function_name	de archivo ||| all	count=1
function_name	la descripción de ||| cairo svg version to	count=1
function_name	de tendencias ||| fann get bias array	count=1
function_name	entrenamiento continuar sin cambiar ||| fann get cascade output	count=1
function_name	xml dada ||| string	count=1
function_name	blob de ||| blob	count=1
function_name	sin leer toda ||| ping	count=1
arg_pair	crea un ||| int $x	count=1
function_name	creado ||| add types	count=2
function_name	plano y ||| color	count=1
function_name	de llamarla ||| source	count=1
function_name	lo grande ||| fann	count=1
arg_pair	arrays al mismo ||| array $array1	count=1
function_name	nombre del [function_name_2] ||| function string fdf [function_name_2] field [function_name_1] resource $fdf_document string $fieldname	count=1
arg_pair	crea un ||| resource $pdfdoc	count=2
function_name	codificado mediante ||| uudecode all	count=1
return	la lista ||| int	count=1
return	cadena de un caracter ||| string	count=1
function_name	base64 y la desencripta ||| openssl decrypt	count=1
function_name	para las solicitudes ||| set sslchecks	count=1
function_name	nombre ||| code by name	count=2
function_name	si se proporcionan ||| array splice	count=1
arg_pair	y ||| int $x int $y	count=1
namespace	para ||| imagickkernel	count=1
namespace	que se ||| zmqdevice	count=1
function_name	documentos como ||| set	count=1
function_name	la fila recuperada ||| fetch object	count=1
function_name	geoip_domain_by_name() ||| domain by	count=1
function_name	positivo que determina lo ||| fann	count=1
function_name	esta función devuelve el ||| cubrid get	count=1
function_name	ubicaciones ||| cert locations	count=1
function_name	tokens php usando ||| token get all	count=1
function_name	escala ||| pdf scale	count=1
function_name	primer plano ||| ncurses color	count=1
arg_pair	salto de ||| string $break	count=1
function_name	devuelve el tipo ||| db2 field type	count=1
function_name	codificación de caracteres del ||| encoding	count=1
return	de las letras ||| int	count=1
function_name	establece la función de ||| set callback	count=1
return	intenta ||| string	count=1
function_name	fgetss() intenta eliminar ||| fgetss	count=1
namespace	los servidores ||| gearmanclient	count=1
namespace	el ||| oauthprovider	count=1
function_name	el ||| crack	count=2
function_name	definición de color ||| color	count=1
function_name	clickeado ||| destination	count=1
arg_pair	en el modo ||| int $pri	count=1
function_name	servicio ||| service	count=3
arg_pair	una y devuelve ||| string $error	count=1
function_name	optimiza la base de ||| dba optimize	count=1
arg_pair	del fichero [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	carácter «en blanco» o ||| intlchar	count=1
arg_pair	punto actual a x ||| float $x float $y	count=1
namespace	agrega uno o más ||| function	count=1
function_name	la adición del parámetro ||| imagecolorallocatealpha	count=1
function_name	entrenamiento ||| fann	count=3
function_name	desde la cadena ||| string	count=1
function_name	el nivel de severidad ||| severity	count=1
function_name	[function_name_1] sin tratar ||| [function_name_2] request [function_name_1]	count=1
function_name	tener una [function_name] por lo ||| [function_name]	count=1
function_name	mediante el ||| closedict	count=1
function_name	lista personal ||| config personal	count=1
function_name	tantos ||| set mlt min	count=1
function_name	trozos remarcados en ||| highlight	count=1
return	escribe ||| int	count=1
arg_pair	una definición de una ||| string $contents	count=1
function_name	el gestor curl ||| curl	count=1
function_name	frase ||| use phrase	count=2
function_name	la frecuencia ||| mlt min	count=1
function_name	tantos ||| doc frequency	count=2
namespace	dado que ||| function	count=1
function_name	conexión persistente a ||| pconnect	count=2
function_name	el de estilo ||| set	count=1
arg_pair	relation bajo ||| string $name resource $relation	count=1
return	método ||| mongocursor	count=1
function_name	proceso de importación ||| gnupg	count=1
function_name	disponibles ||| crypt	count=1
function_name	la ||| ps open	count=1
namespace	posición actual del puntero ||| solrdocument	count=1
function_name	[function_name_1] relación dada ||| [function_name_2] [function_name_1]	count=4
arg_pair	una consulta y ||| string $query	count=1
namespace	entradas ||| arrayiterator	count=1
function_name	identificador ||| closedict	count=1
arg_pair	estilo numérico ||| int $style	count=1
function_name	que se van ||| set	count=1
function_name	diccionario ||| request dict	count=1
function_name	geoip_country_code_by_name() devolverá la ||| country code by	count=1
function_name	la impresión [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	segundo o subsiguiente fichero ||| void	count=1
function_name	valor de ||| value	count=2
arg_pair	efecto de botón tridimensional ||| int $width	count=1
function_name	una lista con el ||| list	count=1
namespace	se defina sobre las ||| zmqdevice	count=1
function_name	iteración durante un entrenamiento ||| fann get	count=1
function_name	con dos ||| sybase	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] int $offset [arg_pair_2]	count=1
function_name	por la extensión phar ||| phar filename	count=1
arg_pair	gestor de erroresset_error_handler() ||| int $error_type	count=1
arg_pair	diferencias entre old_file ||| string $old_file	count=1
function_name	fragmentación ||| highlight regex pattern	count=2
namespace	de sentencias que no ||| function	count=1
arg_pair	bytes pseudo-aleatorios ||| bool $strong	count=1
arg_pair	en haystack y ||| bool $before_needle string $encoding	count=1
namespace	bruto o ||| function	count=2
function_name	en cascada es un ||| cascade	count=1
function_name	el factor ||| factor	count=4
function_name	añade una lista de ||| add	count=1
arg_pair	de ||| string $servername	count=1
function_name	abre el ||| open	count=2
arg_pair	con color ||| int $y2 int $color	count=1
function_name	llamada a ||| call	count=1
arg_pair	evento que ||| resource $event mixed $fd	count=1
return	archivo temporal ||| array	count=1
arg_pair	a una página ||| float $ury string $url	count=1
function	método añade [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=9
arg_pair	crea un efecto de ||| int $x	count=1
function_name	muestra una imagen o ||| display	count=1
function_name	vincula el nombre ||| bind	count=1
function_name	[function_name] faceta debería ||| [function_name] facet	count=3
arg_pair	de fichero fd ||| mixed $fd	count=3
function_name	frecuencia bajo la cual ||| term frequency	count=1
arg_pair	sobre las ||| zmqsocket $frontend	count=1
function_name	copia los datos ||| pgsql copy to array	count=1
function_name	de color ||| color value	count=1
arg_pair	permite sobrescribir el dominio ||| string $domain	count=1
arg_pair	fgets() excepto que ||| int $length	count=1
function_name	devuelve el tipo de ||| type	count=6
namespace	y ||| gmagick	count=2
return	o reanuda [return] ||| [return]	count=1
function_name	última modificación de ||| ftp mdtm	count=1
arg_pair	datos ||| resource $data	count=1
function	suscribirse a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	la tarea en ||| do	count=2
function_name	espacio de ||| is	count=1
function_name	la frecuencia ||| set mlt min doc frequency	count=1
function_name	extraer ||| msql fetch	count=1
arg_pair	capas de mensaje ||| zmqsocket $frontend	count=1
arg_pair	definición ||| int $options	count=1
function_name	núcleo («kernel») ||| add	count=1
function_name	escala de entrada ||| input	count=1
namespace	filas que se ||| solrquery	count=1
function_name	[function_name_1] caché de ||| [function_name_2] [function_name_1]	count=4
namespace	la distancia ||| harufont	count=1
namespace	si y ||| rarexception	count=1
arg_pair	del resultado de ||| resource $result	count=1
function	autocommit del [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	una salida ||| output	count=1
arg_pair	usarla como una ||| string $name mixed $callback	count=1
function_name	términos de consultas ||| terms	count=1
arg_pair	función prepara para una ||| resource $id	count=1
function_name	el contexto ||| stream context	count=1
function_name	información ||| proc get status	count=2
function_name	prueba probabilística ||| gmp prob prime	count=1
arg_pair	proporcionada por ||| callable $user_function	count=1
function_name	un proxy ||| proxy	count=1
arg_pair	log_cmd_update al ||| array $protocoloptions	count=1
function_name	casillas de verificación ||| newt checkbox tree	count=1
function_name	el ||| gettype	count=1
function_name	en la que ||| frequency	count=1
arg_pair	un directorio ||| string $directory	count=1
function_name	de ||| all	count=1
namespace	base de datos ||| mongodb	count=1
return	tridimensional simulado aclarando y ||| void	count=1
return	texto que ||| string	count=1
function_name	advertencias y devolver ||| set using exceptions	count=1
arg_pair	para enganchar los métodos ||| mysqli $mysqli_connection	count=1
function_name	declaración de namespace ||| namespace decl	count=1
return	van a ||| solrquery	count=1
arg_pair	[arg_pair_1] para ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=3
function_name	al comando de ||| tailable	count=1
return	ømq ||| zmqsocket	count=1
function_name	contexto especificado ||| stream context	count=1
function_name	la ||| raiseimage	count=1
function_name	devuelve true si ||| module is	count=1
arg_pair	efecto de botón tridimensional ||| int $width int $height	count=1
function_name	descripción de ||| cairo ps surface restrict to level	count=1
arg_pair	la de memcached::set() con ||| int $expiration	count=1
namespace	de la api graphicsmagick ||| gmagick	count=1
function_name	de ||| prob	count=1
namespace	mientras preserva los bordes ||| gmagick	count=1
arg_pair	si solrquery::sethighlightalternatefield() se ||| string $field_override	count=1
namespace	índice del color que ||| function	count=1
function_name	dueño de ||| owner	count=1
arg_pair	obtiene un ||| resource $result	count=1
return	medido ||| int	count=1
function	[function_name_1] analizar ||| [function_name_1] [arg_pair_2]	count=3
function_name	los datos: únicamente los ||| drain	count=1
function_name	la descripción de ||| cairo matrix transform point	count=1
function_name	unrar encuentre ||| set using exceptions	count=1
arg_pair	el archivo dado ||| string $filename int $flags	count=1
function	construye un [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
arg_pair	una ||| string $text string $optlist	count=1
function_name	esta función devuelve ||| get loaded extensions	count=1
function_name	ecualiza el histograma de ||| equalize	count=1
namespace	por parámetro que contiene ||| function	count=1
function_name	exe de bcompiler y ||| bcompiler load exe	count=1
arg_pair	proporcionada por el usuario ||| callable $user_function	count=1
function_name	devolver un valor ||| set using	count=1
namespace	que está contorneado ||| function	count=1
function_name	devuelve la ruta de ||| get	count=1
function_name	devuelve ||| get last	count=1
function_name	caché ||| apc compile	count=1
arg_pair	de certificado) basada en ||| array $extraattribs	count=1
function_name	de la fecha dada ||| date parse	count=1
arg_pair	de una ||| string $filename int $width	count=1
arg_pair	establece el estilo ||| int $style	count=1
function_name	página pdf importada ||| pdf fit pdi	count=1
arg_pair	colas ||| zmqsocket $frontend	count=1
function_name	de parámetros ||| memory image	count=1
arg_pair	calendario calendar ||| int $month	count=1
return	bloquea o ||| bool	count=1
function_name	comunicaciones internas con libeio ||| event	count=1
function_name	puedan estar disponibles en ||| crypt	count=1
function	parámetro de [arg_pair_2] ||| [function_name_1] resource $p [arg_pair_2]	count=2
return	unicode de una ||| string	count=1
function	antepone [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	de dicho elemento ||| mixed $entry	count=1
function	[function_name_1] campo solicitado ||| [function_name_1] resource $fdf_document [arg_pair_2] int	count=1
function_name	o subsiguiente ||| types	count=1
function_name	la función cubrid_col_get() ||| col	count=1
arg_pair	establece [arg_pair] atributo ||| [arg_pair]	count=1
namespace	excepto por ||| function	count=1
function	un atributo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] un campo ||| [function_name_2] [function_name_1]	count=18
function_name	con ||| add	count=1
function_name	devuelve la [function_name_2] ||| [function_name_2] [function_name_1]	count=38
namespace	advertencia esta ||| function	count=1
function_name	cairosurface es [function_name] tipo abstracto ||| [function_name]	count=1
function_name	máxima de palabra ||| word	count=1
return	véase regexiterator::setmode() [return] ||| [return]	count=1
arg_pair	[arg_pair_1] [arg_pair_2] las operaciones de dibujo ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] inclued ||| [function_name_2] [function_name_1]	count=2
function_name	nueva instancia de haruoutline ||| outline	count=1
function_name	menos tantos documentos como ||| min doc frequency	count=1
function_name	la connection postgresql ||| pg dbname	count=2
return	de filas de la ||| int	count=1
function_name	propiedad gravedad global ||| gravity	count=1
function_name	nombre de ||| db2 field name	count=1
arg_pair	[arg_pair_1] es ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	de un ||| string $server_key string $key	count=1
function_name	la descripción de ||| surface get	count=2
arg_pair	eliminar cualesquiera ||| int $length	count=1
arg_pair	memcached::set() con ||| mixed $value int $expiration	count=1
namespace	sub ||| recursiveiteratoriterator	count=1
function_name	donde se buscarán los ||| dbplus	count=1
function_name	escala de entrada ||| input scaling	count=1
function_name	de error dado ||| curl strerror	count=1
function_name	información sobre ||| proc get status	count=1
function_name	[function_name] fijo ampliando ||| crop [function_name]	count=2
function_name	de memcached::touch() ||| touch	count=1
function_name	ser entrenadas las ||| fann get	count=1
arg_pair	de un enlace ||| resource $pdfdoc float $lowerleftx	count=1
arg_pair	xml desde la representación ||| string $filename	count=1
function_name	(«kernel») ||| add	count=1
arg_pair	de un índice ||| int $index imagickpixel $color	count=1
function_name	la zona horaria correspondiente ||| geoip time zone by	count=1
function_name	lee el ||| read	count=1
function_name	[function_name_1] tipo ||| [function_name_1] [function_name_2]	count=4
function_name	de error sqlstate ||| sqlstate	count=1
function_name	debajo ||| ps continue	count=1
namespace	de datos soportados por ||| function	count=1
function_name	probabilística ||| prob prime	count=2
arg_pair	de datos vea mongodbref ||| mixed $document_or_id	count=1
function_name	indices ||| array udiff assoc	count=1
function_name	línea actual para ||| get current line number	count=1
arg_pair	de resultado indicado ||| resource $result	count=1
function_name	uri ||| uri	count=3
return	subsiguiente fichero de esquema ||| void	count=1
function_name	obtiene ||| get int	count=1
namespace	entrada ||| function	count=1
function_name	proveedor oauth ||| add	count=1
function_name	trazo ||| cmykstroke	count=1
arg_pair	flag ||| string $flag int $options	count=1
function_name	la descripción ||| pattern get surface	count=1
function_name	función del manejador de ||| decl handler	count=1
function_name	[function_name_1] complemento apuntada ||| [function_name_2] [function_name_1]	count=3
function_name	de una ||| filesize	count=1
function_name	extrase el pid del ||| get pid	count=1
function_name	blanco retirados del final ||| rtrim	count=1
arg_pair	ruta en la copia ||| bool $recursive	count=1
function_name	excepción ||| using exceptions	count=2
function_name	numerador ||| numerator	count=1
function_name	de [function_name_2] ||| [function_name_1] [function_name_2]	count=16
arg_pair	de la class dada ||| mixed $class bool $autoload	count=1
return	en un blanco para ||| bool	count=1
function_name	que file_get_contents() devuelve ||| file get contents	count=2
function_name	instancia de la tabla ||| table	count=1
arg_pair	de b negro ||| resource $pdfdoc float $b	count=1
function_name	método devuelve ||| get	count=6
arg_pair	de needle ||| string $needle	count=1
function_name	devuelve el ||| udm get	count=1
function_name	control ||| control point	count=1
function_name	acceder a la cola ||| queue	count=1
namespace	nuevo contexto ||| zmqcontext	count=1
arg_pair	el evento que ||| mixed $fd	count=1
function_name	tantos documentos como ||| min doc	count=1
function_name	reemplaza uno ||| ldap mod replace	count=2
function_name	si la [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	error cuando ||| exceptions	count=1
arg_pair	especifica ninguna ||| mixed $id	count=1
namespace	la ||| oauthprovider	count=1
function_name	archivo dado y extrae ||| mailparse uudecode	count=1
function_name	de la estructura ||| imap fetchstructure	count=1
function_name	cuando ||| set using	count=1
function_name	página para ajustarse a ||| set fit	count=1
arg_pair	uri ||| string $encoding	count=1
function	de pedido [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	llamada a función devolviendo ||| pdo	count=1
function_name	función geoip_country_code_by_name() ||| country	count=1
arg_pair	si se especifica un ||| string $fieldname	count=1
function_name	cuando la biblioteca unrar ||| set using exceptions	count=1
function_name	máxima sobre la ||| mlt max	count=1
arg_pair	caracteres que ||| string $str	count=1
function_name	usado para extraer ||| msql	count=1
function_name	copia ||| copy	count=5
return	distancia ||| int	count=1
function_name	[function_name_1] el modo ||| [function_name_2] [function_name_1]	count=5
function_name	estado http ||| get http status	count=3
function_name	arbitrario ||| ftp raw	count=1
function_name	número de columna actual ||| current column number	count=1
function_name	para recibir datos subordinados ||| socket cmsg space	count=1
namespace	iterador ||| apciterator	count=3
return	por ||| void	count=2
function_name	[function_name_1] [function_name_2] especificado ||| [function_name_2] [function_name_1]	count=2
function_name	por el usuario) ||| restore error	count=1
function_name	inicia la ||| pdf begin	count=1
function_name	datos de entrenamiento ||| train	count=3
function_name	la que las ||| mlt min doc frequency	count=1
function_name	la que ||| frequency	count=1
return	que describe ||| int	count=1
arg_pair	str ||| mixed $fd string $str	count=1
arg_pair	image ||| resource $image	count=4
function_name	y fclose() sucesivamente para ||| file put contents	count=1
namespace	de ||| harufont	count=5
function_name	devuelve el número total ||| get number	count=1
function_name	uno dos o ||| format	count=1
arg_pair	crea una nueva copia ||| bool $backup_original_files	count=1
namespace	núcleo ||| imagickkernel	count=1
function_name	[function_name_1] cabecera mime ||| [function_name_2] [function_name_1]	count=3
arg_pair	texto que ||| int $length	count=1
function_name	pdflib use pdf_get_value() con ||| pdf get majorversion	count=1
arg_pair	stack es true ||| string $stack	count=1
return	los datos ||| array	count=1
function_name	que las palabras ||| set	count=1
function_name	utf-8 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	una nueva ||| array $rectangle string $url	count=1
return	el final en el ||| int	count=1
function_name	similares para ||| similar	count=1
function_name	caché actual ||| session cache	count=2
function_name	[function_name_1] [function_name_2] incluidos ||| [function_name_2] max num query [function_name_1]	count=4
function_name	[function_name_1] [function_name_2] ||| [function_name_2] process [function_name_1]	count=1
namespace	zip nuevo para ||| ziparchive	count=1
function_name	llamarla varias ||| data	count=1
function_name	parámetros ||| ps open memory image	count=2
function_name	[function_name_1] inodo para ||| [function_name_2] [function_name_1]	count=1
function_name	el hash ||| crypt	count=1
namespace	que va hasta el ||| function	count=1
function_name	subject ||| strspn	count=1
arg_pair	establece el valor de ||| string $value	count=1
return	información de ||| reflectionextension	count=1
arg_pair	un iterator con un ||| iterator $iterator	count=1
arg_pair	una expresión regular ||| string $pattern	count=3
function_name	número de épocas de ||| epochs	count=2
namespace	a los servidores ||| memcached	count=1
function_name	para almacenar [function_name] appenditerator::append() ||| get [function_name]	count=1
function_name	file_get_contents() [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	reinicializa a sus valores ||| reset	count=1
function_name	generador de ||| fragmenter	count=2
function_name	[function_name_1] línea ||| [function_name_1] [function_name_2]	count=5
function_name	obtiene el estado ||| status	count=1
function_name	comporta de ||| sybase	count=1
function_name	disponibles después ||| odbc	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] stroking [function_name_2]	count=1
namespace	definida por ||| function	count=1
function_name	a usar ||| setfontweight	count=1
function_name	blob/clob ||| cubrid lob export	count=2
function_name	datos del apuntador de ||| uudecode	count=1
function_name	de color en ncurses ||| ncurses start color	count=1
return	ímágenes ||| bool	count=1
function_name	palabras que ||| mlt min doc	count=1
function_name	consulta ||| ingres	count=2
return	mcrypt_generic_deinit() en lugar de ||| bool	count=1
function_name	la imagen y la ||| image	count=1
arg_pair	valor ||| string $value	count=2
function_name	el número máximo ||| cascade max	count=1
arg_pair	directiva whence ||| int $whence int $pri	count=1
namespace	(1 ||| function	count=1
function_name	añade el ||| curl multi add	count=1
namespace	el ||| yaf_controller_abstract	count=1
return	comporta de forma parecida ||| resource	count=1
function_name	tantos documentos como ||| mlt min	count=1
function_name	durante el procesamiento ||| progress monitor	count=1
function_name	cargar entidades ||| entity loader	count=1
return	de los perfiles ||| float	count=1
return	que contiene ||| string	count=1
arg_pair	llave keydata y retorna ||| resource $identifier string $keydata	count=1
function_name	nombre de etiqueta ||| by tag name	count=1
arg_pair	dibuja el [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] infinito positivo ||| [function_name_1] [function_name_2]	count=1
function_name	un valor especial indicando ||| exceptions	count=1
function_name	anexar una [function_name] ||| [function_name]	count=3
function_name	son ||| tailable	count=1
namespace	recupera información ||| function	count=1
function_name	recupera la versión del ||| info	count=1
function_name	valores usando una ||| uasort	count=1
function_name	esta ||| open memory	count=1
arg_pair	espacio de ||| string $localname string $namespaceuri	count=1
function_name	un nuevo objeto ||| modify	count=1
function_name	definida por el ||| uasort	count=1
function_name	número máximo [function_name_2] ||| [function_name_1] out [function_name_2]	count=3
function_name	el lanzamiento de excepciones ||| exception	count=1
function_name	uri aplicando ||| to uri	count=1
function_name	al parámetro stats.field ||| add stats field	count=1
function_name	cambia el directorio ||| dbplus	count=1
arg_pair	salto de ||| bool $cut	count=1
return	basado [return] varios ||| [return]	count=1
function_name	la acción con parámetros ||| gupnp service proxy action	count=1
function_name	función ps_stringwidth() excepto ||| geometry	count=1
arg_pair	primera ocurrencia de ||| string $needle	count=1
function_name	la extensión phar ||| phar filename	count=1
function_name	la clave para el ||| key	count=1
function_name	se encuentra ||| open memory	count=1
function_name	todas las colecciones ||| collection	count=1
function_name	la última operación curl ||| curl	count=1
function_name	el espacio ||| default namespace	count=1
namespace	se dan tres argumentos ||| function	count=1
function_name	descripción ||| color stop rgb	count=1
arg_pair	o más bases ||| string $databases	count=1
return	entero que ||| int	count=1
arg_pair	que aparecen en el ||| string $str	count=1
function_name	[function_name_1] unión para ||| [function_name_1] line [function_name_2]	count=1
arg_pair	bordes de la ||| int $x	count=1
function_name	espara ||| loop	count=1
return	o lógica a ||| bool	count=1
function_name	servicio pausado nominado ||| win32 continue service	count=2
function_name	es ||| namespace	count=1
arg_pair	ciertos elementos de un ||| resource $pdfdoc int $doc	count=1
arg_pair	nueva ||| int $value	count=1
function_name	calcula el ancho ||| width	count=1
function_name	elimina el identificador ||| remove	count=1
function_name	para strings multibyte ||| mb ereg match	count=1
function_name	mssql_connect() ||| mssql pconnect	count=2
function_name	archivo dado y extrae ||| all	count=1
arg_pair	path2 ||| int $rev2	count=1
function_name	el carp::croak de ||| apd croak	count=1
arg_pair	str en ||| string $str	count=1
function_name	[function_name_1] [function_name_2] abrir un diccionario ||| [function_name_2] [function_name_1]	count=1
function_name	obtiene la función de ||| fann get	count=1
function_name	mediante el ||| proc get	count=1
function_name	esquema en un ||| add types	count=1
arg_pair	apunta a una página ||| int $page	count=1
function_name	envía una excepción ||| set exception	count=1
function_name	entradas de ||| input	count=2
arg_pair	parámetro length ||| int $length bool $crypto_strong	count=1
function_name	los nombres de los ||| names	count=1
arg_pair	bbcode_container ||| resource $bbcode_container	count=1
arg_pair	simulado aclarando y ||| int $x	count=1
function_name	atributo tipo de ||| set type	count=2
namespace	actual ||| appenditerator	count=1
arg_pair	nuevo ||| object $object mixed $value	count=1
function_name	lote de objetos ||| batch	count=2
arg_pair	ømq ||| zmqsocket $frontend	count=1
function_name	previas operaciones de ||| count entries	count=1
function_name	html contenido ||| html	count=1
function_name	la e/s del disco ||| eio readahead	count=1
function_name	información de depuración ||| server dump debug	count=1
arg_pair	cualquier abstracción que se ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	llamarla varias veces) ||| resource $connection_id int $fetch_type	count=1
arg_pair	result de callback ||| callable $callback mixed $data	count=1
arg_pair	hacer de ||| zmqsocket $frontend zmqsocket $backend	count=1
return	> [return] mod_include ||| [return]	count=1
function_name	especial indicando error ||| set using exceptions	count=1
return	solo que el valor ||| void	count=1
function_name	línea ||| line to	count=1
function_name	puedan aplicarse a una ||| add	count=1
function_name	copia binaria de ||| bin	count=1
function_name	fam ||| fam	count=1
namespace	cadena de un caracter ||| function	count=1
namespace	de la ||| function	count=1
function_name	comenzar ||| lower	count=1
function	[function_name_1] clase especificada ||| [arg_pair_2] [function_name_1]	count=1
function_name	para acomodar la ||| highlight	count=1
arg_pair	un archivo dest ||| string $dest	count=1
function_name	lee hasta eof en ||| fpassthru	count=1
function_name	fichero omitiendo el ||| path	count=1
function_name	devuelve el conjunto de ||| get	count=1
function_name	probabilística de ||| gmp	count=1
function_name	o dirección ||| geoip	count=1
function_name	actual ||| session	count=1
function_name	excepciones anterior ||| exception	count=1
function_name	la string entregada ||| ctype	count=1
return	borra un nombre ||| resource	count=1
function_name	basándoes en la ||| lookup prefix	count=1
namespace	memcached dada ||| memcached	count=2
arg_pair	da formato csv a ||| string $enclosure	count=1
return	determinar si ||| bool	count=1
arg_pair	uri que contiene ||| string $uri string $encoding	count=1
function_name	[function_name] escritura ||| mysqlnd ms get [function_name]	count=3
return	posición ||| bool	count=1
function_name	callback definidos por el ||| gupnp control point browse start	count=1
function_name	interno [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	afecta al estado del ||| count	count=1
namespace	sistema de ||| function	count=1
function_name	el carácter especificado ||| chr	count=1
namespace	el espacio de nombres ||| domnode	count=1
function_name	carga una ||| com load	count=1
namespace	en un array o ||| function	count=1
function	activación [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
function_name	píxel virtual ||| virtual pixel method	count=1
arg_pair	el user ||| string $user	count=1
function_name	[function_name_1] buffer ||| [function_name_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] decir el ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	crea una nueva superficie ||| create	count=1
return	especificada ||| resource	count=1
function_name	de salidas de ||| output	count=1
function_name	datos lob de tamaño ||| lob read	count=1
namespace	variable que se ||| function	count=1
function_name	del parámetro facet.date.hardend ||| facet date hard end	count=1
function_name	encuentra ||| ps open memory	count=1
function_name	de memoria compartida ||| shmop	count=4
namespace	que se van ||| solrquery	count=1
return	biblioteca unrar encuentre ||| void	count=1
function_name	[function_name_1] la cabecera ||| [function_name_2] [function_name_1]	count=1
return	define como el número ||| int	count=1
function_name	identidad de tamaño ||| identity	count=1
function_name	de error de cualquier ||| bzerrstr	count=1
namespace	disco o ||| function	count=1
function_name	línea de unión ||| line join	count=3
arg_pair	hacer ||| zmqsocket $backend	count=1
function_name	siguiente si varias instrucciones ||| cubrid next	count=1
arg_pair	a partir del path ||| int $flags	count=1
function_name	cada archivo codificado mediante ||| mailparse uudecode	count=1
namespace	omisión del parámetro ||| reflectionparameter	count=1
function_name	[function_name_1] varios componentes ||| [function_name_2] [function_name_1]	count=1
function_name	simple línea ||| pdf fit textline	count=1
function_name	establece la calidad de ||| ms set	count=1
function_name	aborta inmediatamente el bucle ||| base loopbreak	count=1
function_name	de parámetros ||| memory	count=1
arg_pair	esta función ||| float $number	count=1
function_name	azul ||| blue	count=2
namespace	string con barras invertidas ||| function	count=1
function_name	de clase ||| class	count=2
namespace	un string utilizando el ||| function	count=1
function_name	nombre del país correspondiente ||| country name by name	count=1
function_name	permite ||| allows	count=1
arg_pair	versión plural de gettext() ||| string $msgid1	count=1
function_name	de conexión en caso ||| yaz connect	count=1
function_name	de implicación ||| variant imp	count=1
function_name	el ||| close	count=1
function_name	relación dada por ||| dbplus	count=1
function_name	el logo ||| php logo guid	count=1
function_name	por lo menos tantos ||| min doc frequency	count=1
function_name	número de tendencias ||| get bias array	count=1
arg_pair	es casi idéntico ||| mixed $subject	count=1
function_name	[function_name_1] [function_name_2] especificado ||| function int [function_name_2] [function_name_1]	count=2
function_name	filas afectadas por ||| cubrid affected rows	count=1
function_name	notifica ||| service notify	count=1
namespace	abstracción por encima del ||| function	count=1
function_name	y verificar las extensiones ||| extensions	count=1
arg_pair	según la directiva whence ||| int $whence	count=1
arg_pair	datos almacenados en la ||| bool $summaryonly string $key	count=1
return	desde una llamada ||| string	count=1
function_name	db2 ||| db2	count=4
function_name	versión de ||| format	count=1
function_name	prioridad de ||| event base priority	count=1
function_name	[function_name_1] de título ||| [function_name_1] [function_name_2]	count=1
arg_pair	un ||| string $new_file2	count=1
arg_pair	la llave keydata y ||| resource $identifier string $keydata	count=1
arg_pair	defina ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	indicada por ||| function	count=1
namespace	espacio de nombres ||| domnode	count=1
function_name	filas en ||| sybase num rows	count=1
function_name	socket ||| stream socket accept	count=2
function_name	el tipo de edición ||| filepro fieldtype	count=1
function	[function_name_1] al archivo ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	key y ||| mixed $key	count=1
function_name	[function_name_1] similares para ||| [function_name_2] [function_name_1]	count=4
function_name	estructura de entrenamiento ||| train	count=1
namespace	indexado o ambos ||| sqlite3result	count=1
function_name	correo correctamente formateada como ||| rfc822 write address	count=1
namespace	zguide ||| zmqdevice	count=1
function_name	paginación tamaño de ||| paged result	count=1
function_name	escribir operaciones en el ||| write	count=1
function_name	base ||| mysql drop db	count=1
function_name	la web ||| weblink	count=1
function_name	antepone un ||| prepend body	count=1
function	la columna [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	imap_delete() o imap_mail_move() ||| undelete	count=1
function_name	existe en el ||| key exists	count=1
function_name	rprop ||| rprop	count=1
arg_pair	relation al ||| resource $relation string $name	count=1
arg_pair	samconnection conecta ||| array $properties	count=1
function_name	la distancia de la ||| get	count=1
arg_pair	descriptor de fichero fd ||| resource $fd	count=1
arg_pair	parámetro plaintext con ||| resource $identifier string $plaintext	count=1
arg_pair	delimiter como ||| string $null_as	count=1
function_name	curva bezier y el ||| curve	count=1
namespace	por new sólo ||| function	count=1
return	en ||| string	count=5
return	posición en ||| bool	count=1
namespace	la línea de ||| harufont	count=1
function_name	devuelve el tamaño asociado ||| get size	count=1
function_name	información de la estructura ||| imap fetchstructure	count=1
function_name	[function_name_1] sujeta ||| [function_name_2] [function_name_1]	count=2
function_name	datos ||| ping	count=1
function_name	la etiqueta id3v1 ||| id3v1 tag	count=1
function_name	de la clase yaf_application ||| get application	count=1
namespace	en el ||| function	count=2
namespace	donde se buscarán ||| function	count=1
function	[function_name_1] intérprete ||| [function_name_1] [arg_pair_2]	count=3
function_name	nombre [function_name_2] ||| [function_name_2] [function_name_1]	count=70
return	un string de ||| string	count=1
function_name	salidas ||| output	count=2
arg_pair	[arg_pair] valor boost ||| [arg_pair]	count=3
function	almacena [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	posición actual ||| iterator	count=1
function_name	[function_name_1] palabra ||| [function_name_2] [function_name_1]	count=10
return	los ||| string	count=2
function_name	método ||| count	count=1
function_name	propietario del ||| fchown	count=1
function_name	el valor de un ||| bind value	count=1
function	el campo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	esta función acepta ||| string	count=1
arg_pair	una ruta de sistema ||| string $address	count=1
function_name	de la ||| gettype	count=1
function_name	[function_name_1] de entradas ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] asigna ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] específica en ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	una característica ||| string $feature string $version	count=1
namespace	indicado ||| function	count=1
function_name	diff unificado ||| file diff	count=1
function_name	la descripción ||| cairo pattern get color stop rgba	count=1
function_name	función dio_read() [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	facet.date ||| facet date	count=1
arg_pair	key ||| int $key	count=1
function_name	recupera ||| proc	count=1
function_name	función analiza ||| parse	count=2
namespace	de cualquier ||| function	count=1
function_name	los datos que han ||| complete	count=2
return	closedir() solo que ||| void	count=1
function_name	largo para un marco ||| id3 get frame long	count=1
function_name	existe en la ||| exists	count=1
function_name	a la función mssql_free_statement() ||| free statement	count=1
function_name	biblioteca unrar encuentre ||| set	count=1
function_name	phar ||| valid phar filename	count=1
function_name	de salida ||| function output	count=1
function_name	especifica ||| set	count=1
function_name	información de depuración ||| debug	count=1
return	que puedan estar ||| string	count=1
namespace	la opacidad de ||| gmagickdraw	count=1
namespace	por filename ||| function	count=2
arg_pair	a ||| int $length	count=1
arg_pair	una ||| string $name mixed $callback	count=1
function_name	cambiará el ||| dbplus rrename	count=1
arg_pair	dado por form ||| resource $form resource $component	count=1
function_name	entrenadas las ||| get	count=1
arg_pair	de un string a ||| string $str int $length	count=1
function_name	última conexión ||| last	count=1
function_name	apuntador de ||| all	count=1
return	en paleta creada ||| bool	count=1
function_name	entidades externas ||| libxml disable entity loader	count=1
function_name	bajo ||| min	count=1
function_name	la e/s ||| readahead	count=1
arg_pair	función cubrid_put() ||| mixed $value	count=1
arg_pair	por msglist ||| resource $imap_stream string $msglist	count=1
function_name	puesta de ||| sunset	count=1
arg_pair	de memcached::set() con la ||| mixed $value int $expiration	count=1
function_name	describe el código ||| result message	count=1
function_name	método devuelve el elemento ||| get current	count=1
function_name	especial indicando ||| using	count=1
function_name	elimina una ||| remove	count=1
function_name	fija la base de ||| sybase select db	count=1
function_name	e/s del ||| readahead	count=1
return	al inicio del documento ||| void	count=1
function	codifica [arg_pair_2] ||| [function_name_1] mimeheader [arg_pair_2]	count=1
arg_pair	por el offset especificado ||| int $offset	count=1
arg_pair	las coordenadas ||| resource $image int $font	count=1
function_name	palabras que ||| set mlt min doc	count=1
return	string utilizando el ||| string	count=1
namespace	a el ||| splfileobject	count=1
arg_pair	group ||| mixed $group	count=1
function	[function_name_1] una columna ||| [function_name_1] resource $stmt [arg_pair_2]	count=1
function_name	los bordes de ||| raiseimage	count=1
arg_pair	texto text con la ||| resource $pdfdoc string $text	count=1
function	[function_name_1] registradas ||| [function_name_1] [arg_pair_2]	count=2
function_name	a considerara [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	especificado ||| resource $result int $field_offset	count=5
namespace	el final ||| splfileobject	count=1
function_name	se encuentra disponible la ||| ps open memory image	count=1
function_name	número de filas que ||| start	count=1
function_name	de oracle ||| oci bind by name	count=1
namespace	tantos documentos como este ||| solrquery	count=1
namespace	la posición ||| solrdocument	count=1
arg_pair	una o más bases ||| resource $id string $databases	count=1
arg_pair	los datos ||| int $linebreak	count=1
namespace	lee los datos del ||| function	count=1
namespace	id de ||| mongoid	count=1
arg_pair	string con barras ||| string $str	count=1
return	al comando de ||| mongocursor	count=1
function_name	el índice para ||| optimize	count=1
function_name	[function_name_1] el tipo ||| [function_name_2] [function_name_1]	count=5
namespace	eliminar ||| function	count=1
function_name	de color asociada ||| getcolorcount	count=1
function_name	campos de una determinada ||| mssql fetch field	count=1
function_name	fuente type 3 ||| font	count=1
arg_pair	imap dado ||| resource $imap_stream	count=1
namespace	indica si ||| domnode	count=1
function_name	salida como echo o ||| output	count=1
arg_pair	en una ||| string $msgid2	count=1
function_name	[function_name_1] los encabezados ||| [function_name_1] last request [function_name_2]	count=1
arg_pair	de una ||| resource $conn_identifier	count=1
function_name	por ||| set	count=1
namespace	tiff o jpeg ||| function	count=1
function	[function_name_1] una imagen ||| [function_name_1] [arg_pair_2]	count=2
function_name	que se van a ||| set start	count=1
function	los [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	sisitema de archivos ||| stream wrapper	count=1
function_name	la consulta ||| query chars	count=1
arg_pair	fichero fieldname ||| string $fieldname	count=1
arg_pair	parámetro stack es true ||| string $stack string $offset	count=1
function_name	escala las salidas ||| fann scale output	count=3
function_name	la ||| doc frequency	count=4
namespace	ssl para ||| oauth	count=1
function_name	guid ||| mssql guid	count=1
namespace	retraso de la imagen ||| gmagick	count=1
namespace	intermediarios ||| zmqdevice	count=1
namespace	el módulo indicado por ||| function	count=1
arg_pair	en assoc_array ||| array $assoc_array	count=1
function_name	encripta ||| encrypt	count=1
return	en el documento actual ||| bool	count=1
function_name	la descripción de ||| cairo font options get hint metrics	count=1
function_name	máximo de caracteres ||| highlight max	count=2
function_name	la descripción de la ||| cairo surface get font	count=1
namespace	hace pings a una ||| function	count=1
return	en el ||| int	count=1
function_name	estadísticas del ||| stats	count=1
function_name	nodos son el mismo ||| is same	count=1
function_name	número de entrenamiento de ||| fann	count=1
function_name	sets ||| breaker	count=1
function_name	este ||| set mlt	count=1
return	[return] out ||| [return]	count=2
function_name	[function_name] fue creada ||| get [function_name]	count=1
arg_pair	los datos almacenados en ||| bool $summaryonly string $key	count=1
function_name	severidad ||| severity	count=3
function_name	serán ||| set mlt min doc frequency	count=2
function_name	0 ||| color	count=1
arg_pair	a ||| string $password string $charset	count=1
function_name	gestores de almacenamiento ||| handlers	count=1
function_name	recupera información sobre ||| proc	count=1
function_name	actual para ||| get current	count=2
function_name	curva ||| curve to	count=1
function_name	o false si es ||| is	count=1
function_name	esta función ||| ps open memory image	count=1
arg_pair	form ||| array $components	count=1
function_name	en un archivo temporal ||| all	count=1
function_name	de ||| imap msgno	count=4
function_name	especial indicando error ||| set using	count=1
function_name	esta función acepta uno ||| number	count=1
function_name	primo ||| prob	count=1
return	string ||| string	count=4
function_name	de casillas ||| newt checkbox tree find	count=1
function_name	puesta de sol para ||| date sunset	count=1
function_name	que ||| tailable	count=1
function_name	devuelve un identificador ||| get	count=1
arg_pair	old ||| int $old	count=1
function_name	el ||| crypt	count=3
function_name	[function_name_1] categoría ||| [function_name_1] [function_name_2]	count=1
function_name	información de la estructura ||| fetchstructure	count=1
arg_pair	name0 ||| string $name0	count=1
arg_pair	de listas desordenadas ||| string $achtung_wild string $par1	count=1
function_name	libxml ||| libxml set	count=1
arg_pair	domain actual en una ||| string $message	count=1
return	antes ||| string	count=1
function_name	postgresql después de ||| pg end	count=1
function_name	de alguna forma ||| modified	count=1
arg_pair	se comporta ||| string $servername	count=1
function_name	alta prioridad para ||| high	count=1
arg_pair	el uri que ||| string $uri	count=1
namespace	almacenamiento que ||| function	count=1
namespace	construye un infiniteiterator ||| infiniteiterator	count=1
namespace	cambia ||| function	count=1
arg_pair	cc y ||| string $cc	count=1
function_name	determina lo grande que ||| fann get	count=1
arg_pair	nueva entrada a ||| int $value	count=1
function_name	proporcionan ||| array splice	count=1
return	fue creada con ||| bool	count=1
namespace	el retraso ||| gmagick	count=1
function_name	obtiene el nombre ||| get extension name	count=2
namespace	de la imagen que ||| function	count=1
function_name	de paginación tamaño ||| paged result	count=1
function_name	la lista de ||| ps open memory	count=1
arg_pair	para iterar a través ||| resource $stmt int $colnum	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] color [function_name_1]	count=1
arg_pair	a una ||| string $text	count=1
function_name	que ||| min doc	count=2
function_name	regular para la fragmentación ||| set highlight regex pattern	count=1
namespace	probabilística ||| function	count=1
function_name	[function_name_1] datos db2 ||| [function_name_2] [function_name_1]	count=4
arg_pair	comporta de forma ||| string $servername	count=1
function_name	de indices ||| array udiff assoc	count=1
arg_pair	datos cubrid y guarda ||| resource $conn_identifier resource $lob_identifier	count=1
namespace	una llamada [namespace] una ||| [namespace]	count=1
function	[function_name_1] llave keydata ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	cubrid_set_query_timeout() se ||| resource $req_identifier	count=1
arg_pair	de una ||| resource $psdoc	count=1
function_name	código de error dado ||| curl	count=1
function_name	escribe la ||| write	count=1
function_name	libera ||| oci free descriptor	count=2
function_name	[function_name_1] i-nodo ||| [function_name_2] [function_name_1]	count=1
function_name	último intento ||| db2 conn error	count=2
function_name	la consulta finalice ||| time allowed	count=1
function_name	matriz con los nombres ||| field names	count=1
arg_pair	del ||| int $font	count=1
function_name	[function_name] imap que ||| imap last [function_name]	count=1
function_name	de entrelazado ||| getimageinterlacescheme	count=1
function_name	desde la ||| load string	count=1
function_name	(«kernel») a ||| kernel	count=1
function_name	función crea ||| create entity reference	count=1
function_name	descripción de ||| cairo scaled font get font	count=3
arg_pair	un objeto ||| resource $pdfdoc int $shading	count=1
arg_pair	de botón tridimensional simulado ||| int $width	count=1
function_name	severidad de la excepción ||| severity	count=1
function_name	acerca de la fecha ||| date	count=1
function_name	descripción de la ||| cairo font face	count=1
function_name	[function_name] archivo phar ||| [function_name]	count=3
namespace	x e ||| gmagick	count=1
arg_pair	color de un índice ||| int $index	count=1
function_name	de esquema ||| types	count=1
function_name	[function_name_1] resultados como ||| [function_name_2] [function_name_1]	count=3
function_name	módulos definidos en config ||| modules	count=1
function_name	carga un ||| add types	count=1
function_name	autocommit del ||| db2 autocommit	count=1
function	[function_name_1] relation ||| [function_name_1] [arg_pair_2]	count=7
arg_pair	delimiter ||| string $delimiter string $null_as	count=1
arg_pair	a sybase_connect() con dos ||| string $password string $charset	count=1
arg_pair	da formato csv ||| string $delimiter string $enclosure	count=1
namespace	encuentre un error una ||| rarexception	count=1
function_name	servicio ||| win32 start service	count=1
function	[function_name_1] la resolución ||| [arg_pair_2] [function_name_1]	count=1
function_name	fuente a usar ||| setfontweight	count=1
function_name	entrenamiento continuar sin cambiar ||| fann get cascade	count=1
function_name	menos tantos ||| doc frequency	count=1
namespace	ejecutar yaf_application ||| yaf_application	count=1
namespace	que contiene el ||| function	count=5
function_name	extensión ||| image type to extension	count=1
function_name	conocia ||| tailable	count=1
function_name	la biblioteca unrar encuentre ||| set	count=1
function_name	la lista ||| cubrid list	count=1
arg_pair	apunta a un fichero ||| float $ury string $filename	count=1
function_name	versión [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	la posición ||| splfileobject	count=1
return	un id que ||| resource	count=1
function_name	último [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	establecer el valor actual ||| checkbox set value	count=1
function_name	los datos ||| uudecode	count=1
function_name	la imagen de ||| image channels	count=1
function_name	filas del ||| rows	count=1
function_name	las interfaces ||| interface	count=1
function_name	un servicio pausado ||| continue service	count=1
function_name	cromaticidad de una imagen ||| image	count=1
arg_pair	agua digital dentro de ||| imagick $watermark_wand	count=1
return	emplearse virtualmente en cada ||| bool	count=1
function_name	del esquema ||| cubrid schema	count=1
namespace	comprueba si la posición ||| solrdocument	count=1
function_name	crea ||| create annotation	count=2
return	un objeto ||| object	count=2
return	aproxima a cero ||| float	count=1
function_name	la base de datos ||| start db	count=1
function_name	la imagen de ||| image	count=1
return	es ||| mixed	count=3
arg_pair	para un color ||| resource $image	count=2
namespace	dado que ejecuta el ||| function	count=1
function_name	la de memcached::touch() con ||| touch by	count=1
function_name	bases de datos ||| db	count=1
arg_pair	por flag a las ||| string $flag	count=1
namespace	cada ||| function	count=1
return	errores en la escritura ||| bool	count=2
function_name	gestor de errores interno ||| trigger error	count=1
arg_pair	colas o cualquier ||| zmqsocket $backend	count=1
function_name	el servidor apache ||| apache	count=1
function_name	determina lo grande ||| fann get	count=1
namespace	un error una ||| rarexception	count=1
function_name	de los parámetros y ||| get params	count=1
function_name	siguiente fila del ||| sqlsrv fetch	count=1
function_name	[function_name_1] objeto blob ||| [function_name_1] [function_name_2]	count=1
arg_pair	el fichero a un ||| bool $use_include_path	count=1
arg_pair	envía len bytes ||| int $flags	count=1
arg_pair	campo ||| string $fieldname	count=3
function_name	web ||| weblink	count=1
function_name	instancia xml ||| load	count=1
function_name	función está definida o ||| in	count=1
function_name	tamaño actual de una ||| filesize	count=1
function_name	establece ||| set blob	count=1
function_name	continente que ||| continent	count=1
return	servidores de ||| bool	count=1
function	la relación [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	interfaces declaradas ||| declared interfaces	count=2
function_name	sybase_fetch_assoc() ||| sybase	count=1
function_name	de pendientes [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	excepción ||| set using exceptions	count=2
namespace	imagen mientras ||| gmagick	count=1
namespace	valores por ||| function	count=1
return	función usa ||| int	count=1
function_name	compilación del [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la frecuencia en ||| frequency	count=1
return	este método permite ||| bool	count=1
function_name	solamente debería usarse para ||| set metadata	count=1
function_name	[function_name_1] de filas ||| [function_name_1] affected [function_name_2]	count=1
function_name	el seno para ||| asin	count=1
function_name	a ||| shearimage	count=1
function_name	frecuencia ||| set mlt min doc frequency	count=2
function_name	campos morelikethis ||| mlt field	count=2
arg_pair	archivos en uno ||| string $old_file	count=1
function_name	nombre abreviado ||| short name	count=1
arg_pair	indicado en repos_url de ||| string $repos_url	count=1
namespace	el número dado por ||| function	count=1
function_name	negro del ||| imagecreatetruecolor	count=1
function_name	devuelve la porción ||| mb strrchr	count=2
function_name	apariencia ||| set	count=1
arg_pair	compuesta combinando varias imágenes ||| string $thumbnail_geometry	count=1
function_name	recuperar los atributos ||| attributes	count=1
return	valor ||| mixed	count=11
function_name	función devuelve [function_name] del entorno ||| get [function_name]	count=1
function	cierra el [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	lee los datos ||| all	count=1
namespace	biblioteca sqlite3 como una ||| sqlite3	count=1
function_name	aborta inmediatamente el bucle ||| event base loopbreak	count=1
function_name	usar para similitud ||| mlt	count=1
function_name	las palabras que ||| frequency	count=1
function_name	obtiene la lista ||| get	count=1
function_name	cadena de un caracter ||| chr	count=1
arg_pair	de resultado especificado para ||| resource $result	count=1
return	ambos puedan ||| void	count=1
function_name	de la acción especificada ||| gupnp service action get	count=1
arg_pair	socket. ||| zmqsocket $frontend	count=1
namespace	ya ||| sdo_das_xml	count=1
namespace	de ||| harupage	count=4
namespace	función devolverá ||| function	count=1
return	neuronal ||| returntype	count=2
function_name	escribir operaciones en ||| write	count=1
function_name	traslada el origen del ||| translate	count=1
arg_pair	celda ||| int $row	count=2
arg_pair	prepara el evento que ||| mixed $fd	count=1
function_name	la lista de ||| open memory	count=1
function_name	[function_name] asíncrona pendiente ||| pgsql get [function_name]	count=3
function_name	fclose() sucesivamente para ||| file put contents	count=1
function_name	que una imagen ||| image	count=1
function_name	devolver un ||| set	count=1
arg_pair	una ||| float $gamma	count=1
namespace	ibase_connect() o ||| function	count=1
function_name	el desplazamiento [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	devuelve la versión escapada ||| cubrid real escape	count=1
function_name	documento [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	el evento que ||| resource $event mixed $fd	count=1
function_name	de funciones [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	user y group ||| string $group	count=1
return	es ||| bool	count=5
function_name	establece ||| setproctitle	count=1
function_name	una ||| sqlite error string	count=1
function_name	candidatas ||| get cascade	count=1
function_name	libera ||| free	count=9
function_name	máximo) [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	en el sistema ||| function	count=1
arg_pair	obtiene un ||| string $headers string $defaulthost	count=1
return	en la pila de ||| bool	count=1
function_name	[function_name_1] servicio ||| [function_name_2] [function_name_1]	count=11
function_name	menos tantos documentos como ||| frequency	count=1
arg_pair	alimentarlo a una rna ||| resource $ann array $input_vector	count=1
function_name	o ||| crypt	count=1
function_name	un color del ||| color	count=1
function_name	media ||| mean	count=1
function_name	[function_name_1] entradas ||| [function_name_1] [function_name_2]	count=3
arg_pair	es a**r)/gamma r * ||| float $a float $r	count=1
function_name	los atributos ||| attributes	count=4
function_name	key() ||| key	count=1
function	[function_name_1] un parámetro ||| [arg_pair_2] [function_name_1]	count=1
namespace	el nodo es parte ||| tidynode	count=1
function_name	variables de la ||| convert variables	count=1
function_name	si ||| mcrypt module is	count=2
function_name	destruye el valor en ||| offset unset	count=1
namespace	función usa la prueba ||| function	count=1
function_name	el argumento ||| exceptions	count=1
function_name	registrar su propia ||| register node	count=1
function_name	[function_name_1] transformación ||| [function_name_1] [function_name_2]	count=2
function_name	una condición para ||| condition	count=1
function_name	devuelve una lista ||| get	count=1
function_name	este para que ||| add kernel	count=1
function_name	javascript ||| fdf set javascript	count=1
function_name	biblioteca unrar encuentre ||| using exceptions	count=1
arg_pair	un algoritmo de ||| float $beta	count=1
function_name	del disco ||| load from file	count=2
function_name	deshace cualquier cambio local ||| svn revert	count=1
function_name	tamaño de fragmento ideal ||| regex slop	count=1
function_name	de entidades ||| entity	count=1
arg_pair	un archivo de ||| string $filename	count=2
function_name	se buscarán ||| chdir	count=1
arg_pair	retropropagación estándar completamente conectada ||| int $num_layers int $num_neurons1	count=1
function_name	del apuntador ||| uudecode all	count=1
arg_pair	html y php ||| int $length	count=1
namespace	devuelve el ||| function	count=4
function_name	un ||| proc get status	count=2
arg_pair	en una y devuelve ||| string $new_data2 string $error	count=1
arg_pair	a crear una ||| string $progid	count=1
namespace	con mysqlnd_memcache [namespace] ||| [namespace]	count=3
return	utilizada para tomar ||| string	count=1
arg_pair	de memcached::replace() con ||| mixed $value int $expiration	count=1
function_name	devuelve un informe de ||| get	count=1
arg_pair	conexión de ||| mysqlnd_connection $connection	count=1
namespace	objeto soapserver ||| soapserver	count=1
function_name	que las palabras que ||| min doc frequency	count=1
namespace	cadena [namespace] contiene ||| [namespace]	count=1
function_name	o si la implementa ||| is subclass of	count=1
function_name	establece parámetros ||| set params	count=2
function_name	palabra máxima sobre ||| mlt max word	count=2
function_name	los comentarios ||| doc comment	count=2
function_name	círculo ||| ps arc	count=1
function_name	obtiene los iteradores hijo ||| get children	count=1
function_name	fichero subido por ||| get attachment	count=1
function_name	[function_name] una ||| pdf [function_name]	count=1
namespace	frecuencia en ||| solrquery	count=1
function_name	devolver un valor especial ||| set using exceptions	count=1
return	el primer valor ||| mixed	count=1
arg_pair	o cualquier abstracción que ||| zmqsocket $frontend zmqsocket $backend	count=1
return	la apariencia ||| bool	count=1
namespace	el número ||| solrquery	count=1
function_name	estado http de ||| get http status	count=2
function_name	variable env ||| get env	count=1
arg_pair	botón tridimensional simulado aclarando ||| int $width	count=1
function_name	dada ||| load string	count=2
arg_pair	con un objeto vinculado ||| object $newthis	count=1
return	un string utilizando el ||| string	count=1
function_name	es true entonces ||| exceptions	count=1
function_name	id ||| element by id	count=1
function_name	posix que ||| posix get	count=1
function_name	establece ||| set highlight simple pre	count=1
namespace	constructor de [namespace] ||| [namespace]	count=1
function_name	tantos documentos como este ||| mlt min	count=1
rest	con [function_2] ||| [return_1] [function_2]	count=1
function_name	objeto char ||| ifx free char	count=1
namespace	extrae en forma de ||| function	count=1
function	asociado al [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	transacciones [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] título ||| [function_name_1] [function_name_2]	count=1
function_name	gestor de errores ||| trigger error	count=1
function_name	de la ||| raiseimage	count=1
arg_pair	x509cert proporcionado incluyendo ||| bool $shortnames	count=1
function_name	consulta siguiente si varias ||| next	count=1
function_name	omitiendo el ||| path	count=1
return	la cromaticidad ||| array	count=2
function_name	de cargar entidades ||| libxml disable entity	count=1
function_name	[function_name_1] cabecera mime ||| [function_name_1] encode [function_name_2]	count=3
function_name	importa ||| import	count=3
return	de un array ||| mixed	count=1
function_name	la imagen ||| set image interlace scheme	count=1
function_name	de filas interno ||| seek	count=2
return	como ||| int	count=1
namespace	de información sobre ||| function	count=1
function_name	porción borrada ||| chop	count=1
function_name	certificado y su ||| sign	count=1
function_name	para que la clave ||| delete multi by key	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] inner [function_name_2]	count=1
return	subsiguiente ||| void	count=1
function_name	del sistema ||| eio unlink	count=1
function_name	[function_name_1] total ||| [function_name_2] [function_name_1]	count=2
function_name	de ||| ltrim	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] facet [function_name_2]	count=2
function_name	al nombre de sitio ||| name	count=1
function_name	descripción de ||| cairo font options get subpixel order	count=1
arg_pair	coincida ||| mixed $target mixed $fill	count=1
namespace	bruto o mediante ||| function	count=2
namespace	de ||| directory	count=1
function_name	la clase ||| class	count=4
namespace	objetos añadidos a ||| splobjectstorage	count=1
function_name	cierra el ||| ifxus close	count=1
function_name	socket_recv() recibe ||| recv	count=1
function_name	error ||| service action return error	count=1
function_name	parecida a sybase_connect() ||| sybase	count=1
function_name	clase simplexml ||| simplexml	count=1
function_name	un proxy ||| mysqlnd uh set statement proxy	count=1
arg_pair	el criterio y ||| int $sortorderby	count=2
return	comprueba ||| boolean	count=2
function_name	con la lista ||| cubrid list	count=1
arg_pair	valor de una ||| string $value	count=1
arg_pair	que deberían ser incluidos ||| int $mincount string $field_override	count=1
arg_pair	activa el comportamiento automático ||| bool $onoff	count=1
namespace	sql más reciente ||| sqlite3	count=1
arg_pair	función acepta ||| float $number	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] [function_name_2]	count=145
function_name	de datos db2 ||| db2	count=1
function_name	checkbox ||| newt checkbox	count=1
return	especial indicando ||| void	count=1
function_name	el tipo de ||| type	count=11
namespace	objeto colección ||| oci-collection	count=1
function_name	palabras del diccionario ||| enchant dict	count=1
function_name	[function_name_1] array multi-dimensional ||| [function_name_1] [function_name_2]	count=1
arg_pair	string str dado mediante ||| string $str	count=1
arg_pair	los datos en ||| array $callbacks	count=1
function_name	obtiene la categoría de ||| get flatness	count=1
namespace	array asociativo que ||| function	count=1
return	en él ||| bool	count=1
function_name	de casillas de verificación ||| newt checkbox tree	count=1
arg_pair	nombre de archivo proporcionado ||| string $filename	count=1
arg_pair	solrquery::sethighlightalternatefield() se ||| string $field_override	count=1
arg_pair	un ||| resource $p string $filename	count=1
namespace	este trabajo está siendo ||| gearmanjob	count=1
function_name	de importación ||| gnupg	count=1
arg_pair	archivo ||| string $filename	count=8
arg_pair	ésta es una implementación ||| string $offset string $value	count=1
function_name	de tendencias de ||| fann get bias array	count=1
function_name	el pid ||| get	count=1
return	indicando error ||| void	count=1
function_name	define ||| show	count=1
function_name	consulta ||| query	count=16
function_name	devuelve [function_name_2] ||| [function_name_1] sarprop step error [function_name_2]	count=2
namespace	del proceso actual por ||| function	count=1
function_name	[function_name_1] modo ||| [function_name_1] [function_name_2]	count=1
function_name	palabras ||| set mlt min	count=1
function_name	unrar ||| set using	count=1
function_name	entrada para ||| fann set input scaling	count=1
function_name	habilita la incorporación de ||| use krfonts	count=1
function_name	[function_name_1] el algoritmo ||| [function_name_1] [function_name_2]	count=1
arg_pair	pequeño que podría ||| resource $ann float $rprop_delta_min	count=1
namespace	refiriénsose [namespace] no ||| [namespace]	count=1
namespace	sistema ||| function	count=2
function_name	devuelve la zona horaria ||| time zone by country	count=1
namespace	máximo de ||| gearmanclient	count=1
function_name	dada ||| load	count=1
function_name	la descripción ||| cairo font face get type	count=1
function_name	mínima a devolver para ||| min	count=1
arg_pair	la función callback por ||| mixed $callback mixed $arg	count=1
function_name	zona horaria correspondiente a ||| geoip time zone	count=1
function_name	segundo o subsiguiente fichero ||| add	count=1
function_name	cambia el propietario del ||| fchown	count=1
function_name	(«kernel») a este ||| kernel	count=1
function	[function_name_1] un ||| [function_name_1] matchbox [arg_pair_2]	count=3
function_name	todas las cabeceras ||| request headers	count=1
namespace	de ||| gmagickdraw	count=2
function_name	si devuelve un array ||| module get supported	count=1
namespace	o basado en disco ||| function	count=1
function_name	de ømq pueden hacer ||| construct	count=1
namespace	zip par la ||| ziparchive	count=1
function_name	iterador que es ||| iterator	count=1
function_name	red neuronal de retropropagación ||| fann create	count=1
function_name	manipulador curl para ||| curl init	count=1
function_name	espera de consulta de ||| cubrid get query timeout	count=1
arg_pair	una ||| string $optlist	count=3
function_name	menos tantos ||| min	count=1
function_name	filas eliminadas ||| num rows	count=1
arg_pair	el certificado x509cert proporcionado ||| mixed $x509cert	count=1
arg_pair	al servicio daemon debería ||| string $daemon	count=1
function_name	de lecturas a ||| set slave	count=2
arg_pair	offset a la dirección ||| string $offset	count=1
function_name	servicio y ||| win32 start service	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] new [arg_pair_2]	count=2
arg_pair	de pajar ||| string $haystack	count=2
arg_pair	del fichero ||| string $class_name	count=1
function_name	[function_name_1] al primer ||| [function_name_2] [function_name_1]	count=1
arg_pair	de php var_array ||| array $var_array	count=1
function_name	un string con barras ||| addcslashes	count=1
function_name	llama a ||| call user func array	count=1
arg_pair	devuelve un resultado con ||| resource $connection	count=2
function_name	tantos documentos como ||| set mlt min	count=1
function_name	el html contenido ||| load html	count=1
function_name	inicio de la siguiente ||| next	count=1
function_name	[function_name_1] la acción ||| [function_name_1] [function_name_2]	count=1
function_name	devuelve el número de ||| get field count	count=1
function_name	es un comentario ||| comment	count=1
arg_pair	localname y namespaceuri ||| string $namespaceuri string $localname	count=1
function_name	varias ||| data	count=1
function_name	de estilo de ||| slide	count=1
function_name	de alta prioridad ||| task high	count=2
namespace	de datos que se ||| function	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] quantum [function_name_2]	count=3
function_name	[function_name_1] resultado de ||| [function_name_1] [function_name_2]	count=3
function_name	sets tie ||| breaker	count=1
namespace	devuelve el número ||| sqlite3	count=1
function_name	en escala de grises ||| embossimage	count=1
function_name	se encuentra disponible la ||| ps open	count=1
arg_pair	de ||| string $msgid2	count=1
function_name	nombre de la ||| field name	count=1
function_name	geoip_country_code_by_name() devolverá la ||| country code by name	count=1
arg_pair	comporta de forma parecida ||| string $servername string $username	count=1
function_name	previa [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	de consulta de la ||| get query	count=1
function	convierte [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	firma de certificado) basada ||| array $configargs array $extraattribs	count=1
function_name	el número ||| number	count=2
function_name	array numérico o ||| array	count=1
function_name	usa la prueba ||| prime	count=1
function_name	parameter ||| set	count=3
function_name	[function_name_1] seguridad del ||| [function_name_1] [function_name_2]	count=4
return	y llama a ||| bool	count=1
function_name	el denominador ||| denominator	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $checkboxtree [arg_pair_2]	count=10
return	segundo o subsiguiente ||| void	count=1
function_name	nodo atributo ||| set attribute node ns	count=1
function_name	valor especial ||| set	count=1
function_name	mensaje ||| message	count=2
namespace	espacios en ||| function	count=1
function_name	sybase_connect() con ||| sybase pconnect	count=1
function_name	indicando error cuando ||| set using exceptions	count=1
function_name	tantos ||| set mlt min doc frequency	count=2
function_name	(«kernel») a este para ||| add	count=1
arg_pair	es similar ||| mixed $object	count=1
arg_pair	nth de a ||| gmp $a int $nth	count=1
arg_pair	de fuentes font devuelto ||| int $font	count=1
return	genera una ||| string	count=2
arg_pair	memcached::getmulti() ||| string $cas_tokens	count=1
function_name	lista de ||| broker list	count=1
function_name	semáforo dado ||| sem	count=1
function_name	de píxel virtual ||| virtual pixel method	count=1
function_name	las conexiones de salida ||| get	count=1
function_name	de configuración [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	sobre un socket creado ||| stream socket	count=1
function	para [arg_pair_2] ||| [function_name_1] params [arg_pair_2]	count=2
function_name	frecuencia en la ||| min doc frequency	count=1
namespace	devuelve un entero que ||| ev	count=1
function	[function_name_1] archivo ||| [function_name_1] pvf [arg_pair_2]	count=2
function_name	el buffer ||| get buffer	count=2
function_name	se asigne un ||| work	count=1
function_name	el nombre ||| db2 field name	count=1
return	el uso de ||| array	count=1
function_name	descripción ||| cairo scaled font	count=5
function_name	desde la csr ||| csr	count=1
arg_pair	del parámetro data en ||| int $length	count=1
function_name	lo menos tantos documentos ||| mlt min doc	count=1
return	como un array con ||| array	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] first [arg_pair_2]	count=7
function_name	[function_name] en la ||| get [function_name]	count=3
function_name	[function_name_1] eventos ||| [function_name_2] watermark [function_name_1]	count=1
function_name	glob() de la ||| glob	count=1
function_name	frecuencia ||| min term frequency	count=2
function_name	reemplaza los valores de ||| array replace	count=1
arg_pair	el ancho de ||| float $width	count=1
return	abierto mediante el ||| array	count=1
function_name	la longitud de ||| len	count=1
namespace	del ||| harupage	count=1
return	a ||| string	count=1
namespace	numero como por ejemplo ||| function	count=1
function_name	entonces en lugar de ||| set using exceptions	count=1
namespace	de la página ||| harupage	count=5
arg_pair	dos ||| string $password string $charset	count=1
function_name	especificado ||| is	count=1
namespace	la imagen y ||| gmagick	count=1
function_name	de un género correspondiente ||| genre	count=1
function_name	resultado ||| xdiff	count=4
function_name	devolverá [function_name] actual ||| rpm [function_name]	count=1
function_name	blanco ||| image white	count=1
function_name	obtiene nombres [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	colecciones ||| collection	count=1
function_name	a cabo una transacción ||| ibase commit	count=1
function_name	establece el número ||| set	count=5
function_name	la caché ||| cache	count=1
function_name	xml desde la ||| save xml	count=1
function	[function_name_1] una colección ||| [function_name_1] [arg_pair_2]	count=1
namespace	intermediarios de ||| zmqdevice	count=1
function_name	almacena el resultado ||| xdiff file	count=2
function_name	javascript al ||| fdf set javascript	count=1
return	un string serializado ||| string	count=1
function_name	se comporta de ||| sybase pconnect	count=1
function	propiedad para [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	crea una ||| create document fragment	count=1
arg_pair	función yaz_record() inspecciona un ||| resource $id	count=1
function_name	escribe una ||| write	count=1
return	la distancia de la ||| int	count=1
return	una o más ||| imagick	count=1
function_name	de palabras del diccionario ||| enchant dict	count=1
function_name	que ||| set mlt	count=2
function_name	un caracter que contiene ||| chr	count=1
function_name	utilizando el algoritmo ||| crypt	count=1
function_name	minúscula ||| strtolower	count=1
namespace	están siendo registrados actualmente ||| mongolog	count=1
function_name	número es primo ||| gmp prob prime	count=1
arg_pair	final de pajar ||| string $haystack string $needle	count=2
function_name	devuelve el tipo de ||| field type	count=1
function_name	socket de flujo ||| stream socket	count=1
namespace	establecer los colores de ||| function	count=1
arg_pair	por data ||| string $data int $offset	count=1
namespace	todavía no se le ||| mongocursor	count=1
function_name	o más imágenes en ||| images	count=1
function_name	sobre las capas ||| construct	count=1
arg_pair	str con todos los ||| string $encoding	count=2
function_name	[function_name_1] de ordenación ||| [function_name_2] [function_name_1]	count=2
function_name	para los eventos ||| set event handler	count=1
namespace	un phar tiene un ||| phar	count=1
namespace	la época unix ||| function	count=1
function_name	descripción de la ||| cairo ps surface	count=3
namespace	el ||| solrquery	count=1
arg_pair	recursivamente path1 [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	socket ||| socket listen	count=1
function_name	de una imagen ||| image colorspace	count=1
function_name	el punto primario verde ||| image green primary	count=1
function_name	string con barras ||| addcslashes	count=1
function_name	fragmeto ideal ||| regex slop	count=1
arg_pair	un ||| string $namespaceuri	count=1
function_name	el ciclo de ||| nop	count=1
function_name	los índices predeterminados ||| rcrtlike	count=1
function_name	extrae ||| all	count=1
function_name	imagen ||| set interlace	count=1
namespace	cuando este trabajo está ||| gearmanjob	count=2
arg_pair	bandera especificada por flag ||| string $flag int $options	count=1
arg_pair	interno de dicho elemento ||| mixed $entry integer $type	count=1
function_name	indicado mediante el identificador ||| crack closedict	count=1
function_name	tendencias de cada ||| get bias array	count=1
return	abstracción que ||| zmqsocket	count=1
function_name	textura ||| polygon	count=1
function_name	petición http de ||| request	count=1
function_name	la descripción de ||| ps surface create	count=1
function_name	blob en ||| ibase blob	count=1
function_name	información ||| getinfo	count=1
arg_pair	actual de un ||| resource $pdfdoc int $textflow	count=1
arg_pair	el resultado ||| resource $result	count=1
function_name	retorna el último código ||| return code	count=1
namespace	de la ||| memcached	count=1
function_name	para que la ||| set by	count=1
function_name	colores de ||| color set	count=1
function_name	instrucciones de proceso ||| set processing instruction	count=1
function_name	del sistema de ||| eio unlink	count=1
function_name	exec ||| exec	count=1
function_name	caracter que ||| chr	count=1
arg_pair	rectángulo relleno con color ||| int $color	count=1
function_name	primo ||| prob prime	count=2
function_name	un dibujo a carboncillo ||| charcoal image	count=1
arg_pair	para poder utilizarlo ||| string $separator	count=1
arg_pair	un hipervínculo ||| float $lly float $urx	count=1
arg_pair	un ||| string $localname	count=1
function_name	un nuevo objeto ||| new	count=1
function_name	paleta ||| imagecolorexact	count=1
function_name	excepciones anterior el ||| exception	count=1
function_name	representa una columna devuelta ||| db2	count=1
function_name	nombre corto para ||| frame short name	count=1
arg_pair	con color ||| int $color	count=1
arg_pair	enviar emails con ||| string $message string $additional_headers	count=1
arg_pair	un ||| int $x	count=1
function_name	punto de ||| point	count=1
function_name	la descripción de la ||| cairo pattern add color stop rgb	count=1
function_name	de capas ||| sparse array	count=1
function_name	string del último error ||| errstr	count=1
function_name	mediante uuencode ||| mailparse uudecode	count=1
function_name	filas afectadas ||| affected rows	count=4
arg_pair	recurso ||| resource $result	count=1
namespace	que closedir() ||| directory	count=1
namespace	archivos tar/zip ||| phardata	count=3
arg_pair	en un bloque ||| resource $stmt	count=1
function_name	[function_name_1] del servidor ||| [function_name_2] [function_name_1]	count=5
function_name	minúsculas ||| get xheight	count=1
arg_pair	[arg_pair] nombre de ||| [arg_pair]	count=1
arg_pair	el user especificado ||| resource $link_identifier string $user	count=1
function_name	elimina todos los documentos ||| delete	count=1
arg_pair	la clave ||| array $query	count=1
function_name	[function_name] ruta dada ||| [function_name]	count=2
function	tabla actual [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=2
return	uso ||| array	count=1
return	el espacio ||| bool	count=1
function	[function_name_1] la base ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	con handle ||| resource $handle	count=1
arg_pair	formato csv y devuelve ||| string $enclosure	count=1
function_name	función usa la ||| gmp prob	count=1
function_name	cliente se ha desconectado ||| connection aborted	count=1
function_name	palabras que no ||| mlt min doc	count=1
function_name	la descripción ||| get surface	count=1
arg_pair	una función de ordenación ||| string $name	count=1
function_name	punto de control ||| gupnp control point callback	count=1
function_name	el directorio virtual actual ||| dbplus chdir	count=1
function_name	archivo dado ||| mailparse	count=1
function_name	file_get_contents() devuelve el ||| get contents	count=1
function_name	privada ||| openssl x509 check private	count=1
function_name	color de relleno ||| get gray fill	count=1
arg_pair	texto ||| string $optlist	count=1
namespace	closedir() ||| directory	count=1
arg_pair	en el archivo browscap.ini ||| bool $return_array	count=1
function_name	de los parámetros ||| get params	count=1
function_name	devuelve un [function_name] del ||| get [function_name]	count=1
function_name	información de campos ||| sybase fetch field	count=1
function_name	en la que ||| set mlt	count=1
namespace	uso ||| function	count=1
function_name	factor de [function_name_2] ||| [function_name_2] [function_name_1]	count=28
function_name	un círculo a ||| circle	count=1
function_name	socket. -- ||| construct	count=1
function_name	de neuronas de ||| input	count=1
function_name	reintentos en caso de ||| retry count	count=1
function_name	[function_name] tiene ||| [function_name]	count=2
function_name	exacto o la alternativa ||| imagecolorresolve	count=1
function_name	disponible la ||| ps open memory image	count=1
arg_pair	a memcache::connect() con la ||| string $host int $port	count=1
return	cualesquiera bytes ||| string	count=1
function	codifica el [arg_pair_2] ||| [function_name_1] mimeheader [arg_pair_2]	count=2
function_name	[function_name_1] encabezados ||| [function_name_1] last request [function_name_2]	count=1
arg_pair	un object ||| object $object	count=1
function_name	dado y ||| mailparse uudecode all	count=1
function_name	el iterator interno ||| get inner iterator	count=2
namespace	[namespace] en fopen() ||| [namespace]	count=3
function_name	obtiene si está disponible ||| device get available	count=1
function_name	cambio del valor de ||| get	count=1
function_name	ítems cuyas ||| multi	count=1
function_name	encuentra disponible ||| open memory	count=1
function_name	la clave ||| key	count=1
function_name	número máximo de ||| max analyzed	count=1
arg_pair	crear una ||| string $progid	count=1
function_name	la capa de salida ||| output	count=1
function_name	establece [function_name_2] ||| [function_name_1] rprop increase [function_name_2]	count=2
arg_pair	el nombre distinguido que ||| array $dn	count=1
function_name	largo para ||| id3 get frame long	count=1
arg_pair	crea un [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	archivo codificado mediante ||| mailparse uudecode all	count=1
function_name	de palabra ||| word	count=2
function_name	fuente postscript type 1 ||| imagepsfreefont	count=1
function_name	[function_name_1] tarea en ||| [function_name_2] [function_name_1]	count=4
function_name	de interpretación ||| text rendering	count=1
namespace	el tiempo máximo de ||| gearmanclient	count=1
function_name	de tendencias de cada ||| get bias	count=1
function_name	de base de las ||| get	count=1
function_name	mínima a devolver para ||| min count	count=1
function_name	los encabezados de ||| headers	count=1
return	sobre el ||| resource	count=1
function_name	todas las facetas ||| facet	count=1
function_name	guarda el estado ||| save	count=1
return	de el fichero dado ||| int	count=1
function_name	el formulario proporcionado ||| newt run form	count=1
function_name	clave para el ||| key	count=1
arg_pair	botón ||| int $width	count=1
arg_pair	partir del path ||| int $flags	count=1
return	un array en ||| resource	count=1
return	que ya ha ||| void	count=1
function_name	recodificación dada por request ||| recode file	count=1
function_name	devuelve el mensaje ||| get message	count=2
function_name	base de datos actualmente ||| db	count=1
return	de texto ||| string	count=1
function_name	[function_name_1] estadísticas ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] copyright ||| [function_name_1] [function_name_2]	count=1
arg_pair	establece una ||| string $connection_string	count=1
function_name	de coordenadas ||| pdf rotate	count=1
arg_pair	dest ||| string $dest int $context	count=1
function_name	id dado ||| id	count=1
function_name	lugar de emitir ||| set using	count=1
arg_pair	[arg_pair_1] message al ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	los parámetros [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	verifica el texto ||| string $plaintext	count=1
function_name	de strcmp() ||| strcoll	count=1
function	similares para [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	extrae cada ||| mailparse uudecode all	count=1
function_name	relleno ||| cmykfill	count=1
function_name	la versión [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	desde una fuente ||| string	count=1
function_name	documento xml desde ||| save xml	count=1
function_name	estructura de un ||| fetchstructure	count=1
function_name	de muestreo o tasa ||| sample bitrate	count=1
return	en un ||| array	count=1
arg_pair	actual en una ||| string $msgid2 int $n	count=1
return	el cual está en ||| bool	count=1
function_name	conexión en ||| connect	count=1
function_name	está marcado como el ||| original	count=1
arg_pair	de un ancho especificado ||| string $text float $width	count=1
function	[function_name_1] varios arrays ||| [arg_pair_2] [function_name_1]	count=3
function_name	nodo [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	asociativo que corresponde a ||| assoc	count=1
function_name	de tendencias de ||| bias array	count=1
function_name	recodificación dada por ||| recode file	count=1
return	la solicitud actual ||| array	count=1
arg_pair	tuple de relation ||| array $tuple	count=1
function_name	[function_name_1] varíadica ||| [function_name_1] [function_name_2]	count=1
function_name	un género correspondiente ||| id3 get genre	count=1
function_name	la descripción de ||| cairo scaled font get font options	count=1
function_name	[function_name_1] insert ejecutada ||| [function_name_1] [function_name_2]	count=2
function_name	de candidatas ||| cascade candidate	count=1
namespace	sentencia sql ||| sqlite3	count=1
function_name	aparecen en el ||| addcslashes	count=1
function_name	ingres_query() ||| ingres	count=3
namespace	u otros caracteres del ||| function	count=1
arg_pair	la ||| string $msgid1 string $msgid2	count=1
function_name	de activación para ||| activation	count=2
function_name	de flujo ||| stream socket	count=1
arg_pair	un ||| resource $image	count=2
function_name	de filas [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	número es primo ||| prime	count=1
function_name	caracter de escape ||| escape string	count=1
arg_pair	de memcached::set() ||| mixed $value int $expiration	count=1
function_name	palabras ||| min	count=1
namespace	un objeto ||| hw_api	count=1
arg_pair	los datos ||| mixed $data	count=1
function_name	frecuencia en ||| doc	count=1
arg_pair	de los datos en ||| int $linebreak array $callbacks	count=1
arg_pair	delimiter como ||| string $delimiter	count=1
arg_pair	parecida a sybase_connect() con ||| string $servername string $username	count=1
namespace	más entradas ||| arrayiterator	count=1
function_name	cliente de base ||| client	count=1
function_name	a llamar cuando un ||| callback	count=1
function_name	cancela ||| cancel	count=1
function_name	curl manteniendo ||| curl	count=1
arg_pair	data ||| int $length	count=1
namespace	que tiene ||| function	count=1
arg_pair	a sybase_connect() con dos ||| string $username	count=1
arg_pair	función cubrid_schema() se ||| resource $conn_identifier int $schema_type	count=1
return	apuntador de archivo ||| array	count=1
arg_pair	si el parámetro old ||| int $old	count=1
function_name	transformación actual ||| trans matrix	count=1
function_name	actual ||| zip	count=1
arg_pair	una combinación de códigos ||| string $country_code	count=1
return	lugar ||| void	count=1
function_name	la firma ||| openssl pkcs7 verify	count=1
arg_pair	según el criterio y ||| int $sortorderby	count=2
namespace	reglas usadas por ||| function	count=1
arg_pair	en un bloque de ||| resource $stmt	count=1
function_name	del campo dado ||| field	count=1
function_name	bits mas significantes hasta ||| scan0	count=1
function_name	las conexiones de ||| get cascade	count=1
function_name	en ||| doc frequency	count=4
return	la cadena ||| sdo_das_xml_document	count=1
return	arbitrarios ||| bool	count=1
arg_pair	ya ||| int $code_page	count=1
arg_pair	un ||| int $dbase_identifier	count=1
arg_pair	id interno de dicho ||| integer $type	count=1
return	función [return] ||| [return]	count=1
namespace	es un código ||| intlchar	count=1
function_name	colas o ||| construct	count=1
arg_pair	0600 en el directorio ||| string $dir	count=1
function_name	establece una función ||| set	count=1
arg_pair	un punto de ||| int $property	count=2
function_name	en por ||| doc frequency	count=1
namespace	como cursores de ||| mongocursor	count=1
arg_pair	dado ||| string $key	count=1
function_name	el nombre host ||| fbsql hostname	count=1
function_name	datos del apuntador de ||| mailparse uudecode all	count=1
return	retorna los ||| array	count=1
function_name	obtener [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	las conexiones ||| fann get cascade	count=1
namespace	entonces ||| rarexception	count=1
return	disminuir el ||| void	count=1
function	[function_name_1] útil ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	dos números ||| gmp $a gmp $b	count=1
function_name	[function_name_1] [function_name_2] campo dado ||| [function_name_2] [function_name_1]	count=8
arg_pair	un efecto de ||| int $y	count=1
function_name	reduce el ruido granular ||| despeckleimage	count=1
function_name	de ømq ||| construct	count=1
function_name	cliente por proceso ||| client	count=1
arg_pair	o datagrama ||| float $timeout	count=1
arg_pair	propertyaliases.txt ||| int $namechoice	count=1
arg_pair	como timestamp ||| int $timestamp	count=2
function_name	iterador ||| iterator	count=7
function_name	el nombre largo para ||| id3 get frame long name	count=1
function_name	la posición numérica de ||| mb stripos	count=1
function_name	preparada ||| execute	count=3
arg_pair	los bordes ||| int $width	count=1
function_name	el retraso [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la descripción ||| cairo surface mark dirty rectangle	count=1
function_name	cabeceras exif ||| exif	count=1
return	indica si el puntero ||| bool	count=1
function_name	las diferentes opciones ||| options	count=1
return	espacio de nombres especificado ||| bool	count=1
return	los perfiles del objeto ||| float	count=1
arg_pair	mensaje y socket. ||| zmqsocket $backend	count=1
function_name	las ||| frequency	count=1
function_name	de namespace ||| end namespace	count=1
function_name	las colecciones ||| collection info	count=1
return	el nodo ||| bool	count=1
function_name	nuevo par ||| new	count=1
function_name	la lista de todos ||| list	count=1
function_name	[function_name_1] como ||| [function_name_1] [function_name_2] string $filename	count=3
function_name	sisitema ||| stream wrapper register	count=2
function_name	del conjunto [function_name_2] ||| [function_name_1] [function_name_2] object	count=1
function_name	frecuencia [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	segmento de datos lob ||| lob read	count=1
arg_pair	un fichero de ||| string $filename	count=2
return	usadas en la búsqueda ||| bool	count=1
return	última petición ||| array	count=1
function_name	establece [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=6
return	usando la regla del ||| bool	count=1
namespace	de ||| solrdocument	count=1
function_name	descripción de ||| cairo ps level	count=1
function_name	el índice de ||| iterator index	count=1
function_name	el seno ||| sin	count=1
function_name	[function_name_1] campos ||| [function_name_2] [function_name_1]	count=15
arg_pair	un nuevo ítem ||| resource $checkboxtree string $text	count=1
arg_pair	definida por su ||| string $name int $flags	count=1
function_name	unicode binaria ||| binary	count=1
return	lectura ||| resource	count=3
namespace	[namespace] una función ||| [namespace]	count=2
function_name	la función usa ||| prime	count=1
function_name	carácter de puntuación ||| ispunct	count=1
arg_pair	conexiones curl_multi ||| float $timeout	count=1
arg_pair	object es de ||| object $object	count=1
namespace	referencia débil ||| weakref	count=1
function_name	canal alfa ||| alpha channel	count=2
arg_pair	tupla de relation la ||| resource $relation	count=1
function_name	como ||| mlt min doc frequency	count=2
function_name	previamente con stream_wrapper_unregister() ||| wrapper	count=1
arg_pair	que fgetss() ||| resource $handle	count=1
function_name	carp::cluck de perl ||| clunk	count=1
function_name	el peso ||| getfontweight	count=1
arg_pair	un string con ||| string $str	count=1
namespace	datos del apuntador ||| function	count=1
function_name	la imagen para ||| image	count=1
function_name	la frase ||| use phrase	count=2
function_name	correo correctamente formateada ||| imap rfc822 write address	count=1
return	de la variable ||| string	count=1
function_name	color especificado como un ||| color value	count=1
arg_pair	mensaje para el uid ||| int $uid	count=1
return	biblioteca unrar ||| void	count=1
function_name	de filas afectadas por ||| ifx affected rows	count=1
function_name	dispositivo raíz descargando y ||| gupnp root device	count=1
function_name	das ||| types	count=1
function_name	readline ||| readline	count=1
arg_pair	a ereg_replace() excepto que ||| string $pattern string $replacement	count=1
function_name	del valor ||| fann get	count=1
arg_pair	los bordes de ||| int $height	count=1
arg_pair	result de callback ||| callable $callback	count=1
namespace	identificador ||| function	count=1
function_name	el dispositivo ||| gupnp device	count=1
return	asignados ||| bool	count=1
function_name	[function_name_1] tamaño ||| [function_name_2] [function_name_1]	count=2
function_name	de [function_name] ||| is [function_name]	count=2
namespace	readgzfile() excepto [namespace] ||| [namespace]	count=2
function_name	base de ||| start db	count=1
function_name	cierra el objecto ||| close	count=1
return	en la escritura ||| bool	count=2
function_name	el prefijo ||| prefix	count=1
function_name	y colapsa la imagen ||| image	count=1
function_name	se puede utilizar para ||| set	count=1
function_name	si devuelve un ||| get supported	count=1
function_name	la descripción de la ||| cairo pattern create linear	count=1
namespace	hash ||| quickhashinthash	count=3
function_name	copia los datos ||| pgsql copy to	count=1
arg_pair	especificada por flag ||| string $flag int $options	count=1
arg_pair	bytes str de ||| string $charset	count=1
function_name	establece donde ||| set auth type	count=2
function_name	la raíz cuadrada ||| gmp sqrtrem	count=1
function_name	argumento es true ||| using exceptions	count=1
function_name	del borde [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	o su área ||| function	count=1
function_name	abreviado ||| short	count=1
return	comprueba si el ||| bool	count=1
arg_pair	devuelve ||| resource $imap_stream	count=1
function_name	true entonces en lugar ||| using exceptions	count=1
arg_pair	función permite enviar ||| string $additional_headers	count=1
function_name	[function_name] los scripts ||| fdf [function_name] doc	count=1
function_name	control de [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	dos ||| string $servername	count=1
function_name	[function_name_1] activación ||| [function_name_2] [function_name_1]	count=10
arg_pair	de parada empleada durante ||| int $stop_function	count=1
return	primer valor del ||| mixed	count=1
function_name	es true entonces en ||| using exceptions	count=1
function_name	la connection [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	exclusivo or xor ||| xor	count=1
function	la intersección [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	de trabajo para la ||| job handle	count=1
arg_pair	a b donde gcd ||| gmp $b	count=1
function_name	el tipo de dato ||| type	count=1
function	unos [arg_pair_2] ||| [function_name_1] ns [arg_pair_2]	count=2
function_name	información dependiente ||| resize	count=1
function_name	decodifica el string codificado ||| mb decode	count=1
namespace	obtiene una lista de ||| function	count=1
namespace	al igual que closedir() ||| directory	count=1
function_name	la descripción de ||| cairo font options get	count=4
namespace	secuencia ||| function	count=1
function_name	connection postgresql ||| pg dbname	count=2
arg_pair	tiempo de ||| int $timeout	count=1
function_name	de palabra máxima ||| mlt max word	count=2
function_name	una representación ||| to	count=1
arg_pair	la base de datos ||| string $password string $database	count=1
function_name	sftp desde ||| sftp	count=1
namespace	a una conexión de ||| function	count=1
arg_pair	el dominio ||| string $directory	count=1
function_name	número de secuencia ||| imap msgno	count=1
return	que no ||| solrquery	count=1
function_name	permite establecer el valor ||| newt checkbox set value	count=1
function_name	desplazamiento del error de ||| error shift	count=2
function	de campo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	evento que se va ||| resource $event	count=1
function_name	lo menos tantos ||| set mlt min doc	count=1
arg_pair	un vector ||| array $input_vector	count=1
namespace	mientras ||| gmagick	count=1
return	en el servidor asociado ||| bool	count=1
function_name	recupera el último error ||| last error	count=1
function	imagen y [arg_pair_2] ||| imagick bool new [function_name_1] [arg_pair_2]	count=2
function_name	de ||| set using exceptions	count=4
function_name	en otra en el ||| compositeimage	count=1
function_name	actual ||| filesize	count=1
function_name	información de la primera ||| first	count=1
function_name	opción ||| sock opt	count=1
namespace	de argumentos de ||| function	count=1
return	retorna un array con ||| array	count=1
function_name	recorre el ciclo ||| nop	count=1
function_name	infomación variable según sus ||| textblock	count=1
function_name	obtiene la transformación actual ||| get trans matrix	count=1
function_name	semáforo de system v ||| sem	count=1
function_name	letras en mayúsculas ||| cap height	count=1
arg_pair	de b ||| resource $pdfdoc float $b	count=1
function_name	que no ||| doc	count=1
namespace	las capas de ||| zmqdevice	count=1
arg_pair	formulario dado por form ||| resource $form array $components	count=1
function_name	descripción de ||| cairo svg surface create	count=1
function_name	de documento ||| terms	count=1
arg_pair	elimina tuple de relation ||| array $tuple	count=1
function_name	entidades ||| disable entity	count=1
arg_pair	archivo remoto desde ||| string $remote_file int $mode	count=2
function_name	seno hiperbólico ||| trader sinh	count=1
function_name	biblioteca unrar encuentre ||| using	count=1
function_name	encuentre un error ||| using	count=1
function_name	identificador único ||| hash	count=1
function_name	información sobre ||| proc	count=1
function_name	a large object resource ||| pg lo	count=1
arg_pair	convierte un string ||| int $split_length	count=1
function_name	cookie de [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	tie breaker ||| set	count=1
function_name	aplicarse a una única ||| kernel	count=1
function_name	nombre ||| by name	count=4
function_name	descripción de la ||| cairo pattern get	count=6
namespace	[namespace] con la ||| [namespace]	count=1
function_name	recupera la variable env ||| get env	count=1
arg_pair	el string dado por ||| string $key	count=1
function_name	establece ||| date default timezone set	count=2
return	el ||| void	count=28
function_name	geoip_domain_by_name() ||| domain	count=1
function_name	db2_connect() y ||| db2	count=1
arg_pair	al [arg_pair] ||| [arg_pair]	count=1
function_name	devuelve el entero ||| get	count=1
arg_pair	la ||| string $msgid1	count=1
function_name	commit ||| commit	count=1
arg_pair	compone una imagen ||| gmagick $source int $compose	count=1
namespace	string con ||| function	count=1
function_name	de título ||| title	count=1
namespace	de un objeto en ||| serializable	count=1
arg_pair	un directorio al completo ||| string $path	count=1
namespace	que aparecen en el ||| function	count=1
arg_pair	de botón tridimensional simulado ||| int $width int $height	count=1
return	borra un nombre del ||| resource	count=1
return	en un fichero ||| bool	count=1
arg_pair	de arrays con una ||| array $array1	count=1
function_name	el modo autoconsigna del ||| autocommit	count=1
namespace	de el fichero ||| splfileobject	count=1
function_name	[function_name_1] frecuencia ||| [function_name_2] [function_name_1]	count=1
function_name	trabajo para ver si ||| ping	count=1
arg_pair	más bases ||| resource $id string $databases	count=1
function_name	se le ha ||| count	count=1
function_name	nodod ||| dom import	count=1
function_name	fondo [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	filas eliminadas insertadas o ||| db2 num rows	count=1
function_name	parámetro de ||| param	count=1
return	usuario ||| void	count=2
arg_pair	path en el ||| int $flags	count=1
function_name	de la línea para ||| set line width	count=1
arg_pair	la llave keydata y ||| string $keydata	count=1
function_name	sobre un proceso ||| get	count=1
function_name	buzones ||| imap getmailboxes	count=2
return	cada archivo ||| array	count=1
function_name	nombre ||| zip entry name	count=2
function_name	memcached::prepend() con la excepción ||| prepend	count=1
return	incluye los ca_path y ||| array	count=1
function	rodea [function_name_1] [arg_pair_2] ||| border [function_name_1] [arg_pair_2]	count=1
function_name	el tipo de la ||| column type	count=1
arg_pair	un documento pdf ||| resource $fdf_document	count=1
function_name	[function_name_1] inodo para ||| [function_name_1] [function_name_2]	count=1
function_name	una lista de servidores ||| servers	count=1
function_name	[function_name_1] control ||| [function_name_2] [function_name_1]	count=4
function_name	versión escapada de la ||| cubrid real escape string	count=1
function_name	función acepta ||| number	count=1
function_name	nombre corto para un ||| get frame short name	count=1
function_name	en lugar de ||| using exceptions	count=1
namespace	que puede ocasionar colisiones ||| function	count=1
function_name	rows ||| pg copy from	count=2
arg_pair	rectángulo comenzando por ||| int $x1	count=1
function_name	con la lista de ||| list	count=1
function_name	establece la calidad ||| ms set qos	count=1
function_name	[function_name_1] conjunto de ||| [function_name_2] [function_name_1]	count=5
arg_pair	con ||| resource $identifier	count=1
namespace	líneas cuando se dibujan ||| function	count=1
function_name	apuntador de archivo dado ||| mailparse	count=1
function_name	mssql ||| mssql	count=1
arg_pair	o cualquier abstracción que ||| zmqsocket $backend	count=1
function	el inverso [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	una función ||| string $name	count=2
function_name	devuelve el máximo ||| memory get	count=1
function_name	devuelve el ||| ifx get	count=2
function_name	de la frase ||| use phrase	count=1
function_name	el conjunto ||| finalize	count=1
arg_pair	por key corresponda ||| string $key mixed $value	count=1
function_name	oposición a estar definida ||| internal	count=1
arg_pair	la [arg_pair] ||| [arg_pair]	count=1
function_name	envía la acción ||| send action	count=1
arg_pair	pueden hacer de intermediarios ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	caracter de salto de ||| string $break	count=1
arg_pair	estructura de datos de ||| int $num_data	count=1
function_name	[function_name_1] multi-dimensional con ||| [function_name_2] [function_name_1]	count=1
arg_pair	función cubrid_connect() ||| bool $new_link	count=1
function_name	un ||| status	count=1
function_name	de la ||| slide show	count=1
function_name	estado del cursor: ||| count	count=1
function_name	devuelve ||| get contents	count=2
function_name	descripción de la ||| cairo pdf surface create	count=1
function_name	ideal especificado por ||| set highlight regex slop	count=1
arg_pair	dominio actual ||| string $domain	count=1
function_name	de puntuación ||| ispunct	count=1
arg_pair	pajar incluyendo la ||| string $needle	count=1
namespace	por ejemplo ||| function	count=2
arg_pair	el string haystack pajar ||| string $haystack	count=3
arg_pair	puerto ||| string $host int $port	count=1
arg_pair	proporcionado que debería ||| int $color	count=1
function_name	[function_name_1] etiqueta ||| elements [function_name_2] [function_name_1]	count=3
arg_pair	copia de todos los ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	http en la ||| nsapi request	count=1
arg_pair	0600 ||| string $dir string $prefix	count=1
arg_pair	imagen reconstruida y ||| int $metric	count=1
function_name	de cursor utilizado ||| db2 cursor	count=1
namespace	cuando se ||| function	count=4
function_name	el mínimo de ||| min	count=1
function_name	contra ||| array diff ukey	count=1
function	[function_name_1] estructuras ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
return	indicando error cuando la ||| void	count=1
arg_pair	comportamiento automático de ||| resource $connection_id bool $onoff	count=1
function_name	limpia el ||| gmp clrbit	count=1
arg_pair	asociado [arg_pair] ||| [arg_pair]	count=3
function_name	como [function_name] ||| get trace as [function_name]	count=3
namespace	de un archivo tar/zip ||| phardata	count=1
function_name	las propiedades ||| properties	count=2
arg_pair	una ||| array $rectangle string $text	count=1
function_name	[function_name_1] de cliente ||| [function_name_2] [function_name_1]	count=2
function_name	del autocommit ||| fbsql autocommit	count=1
namespace	dom ||| domdocument	count=1
return	obtiene ||| array	count=1
function_name	entrenamiento ||| train stop	count=1
function_name	lee hasta eof ||| fpassthru	count=1
function_name	encuentre un error una ||| using exceptions	count=1
function_name	épocas que se le ||| epochs	count=1
function_name	campos en ||| fields	count=2
function_name	método devuelve [function_name_2] ||| [function_name_1] inner [function_name_2]	count=1
function_name	máxima de palabra bajo ||| min word	count=1
function_name	fila recuperada ||| mysql fetch	count=1
function_name	crea un [function_name_2] ||| xml [function_name_2] [function_name_1]	count=1
return	relleno ||| void	count=1
function_name	la precisión de la ||| field precision	count=1
arg_pair	comporta de ||| string $servername string $username	count=1
namespace	devuelve el momento ||| function	count=1
function_name	y sólo ||| using	count=1
namespace	que esta comparación ||| function	count=1
function_name	la codificación de caracteres ||| mb	count=1
function_name	entonces ||| using exceptions	count=2
arg_pair	actual a un ||| resource $p float $g	count=1
function_name	el tipo de socket ||| socket type	count=1
arg_pair	de la ruta en ||| string $path	count=1
arg_pair	selecciona un documento pdf ||| resource $fdf_document string $url	count=1
function_name	establece la ||| mysqlnd ms set	count=1
function_name	el coseno del ||| cos	count=1
function_name	traits ||| uses	count=1
arg_pair	colores que ||| int $numcolors	count=2
function_name	se encuentra disponible la ||| open	count=1
arg_pair	la imagen ||| int $height	count=1
namespace	versión serializada del conjunto ||| quickhashintset	count=1
namespace	a nivel de ||| function	count=5
function_name	large object ||| pg lo truncate	count=1
function_name	eventos de lectura y ||| event buffer	count=1
function_name	basado en ||| shading	count=1
function_name	rellena la ruta ||| fill stroke	count=1
function_name	excepciones anterior el ||| exception handler	count=1
function_name	serán ignoradas ||| min doc	count=1
function_name	establece [function_name_2] ||| [function_name_1] activation [function_name_2]	count=1
namespace	opacidad de ||| gmagickdraw	count=1
function_name	ingres ||| ingres query	count=2
arg_pair	abstracción que se defina ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	datos codificados en lzf ||| lzf	count=1
function_name	mu ||| mu	count=1
arg_pair	de arg ||| float $arg	count=1
function_name	los mensajes de correo ||| mail	count=1
arg_pair	imágenes ||| imagick $image	count=1
arg_pair	llamarla varias veces) ||| int $fetch_type	count=1
function_name	borrar un ||| delete service	count=1
function_name	información de estado del ||| task status	count=1
return	el puntero interno de ||| bool	count=1
arg_pair	el offset especificado ||| int $offset int $initial_value	count=1
function_name	advertencias y ||| set using exceptions	count=1
function_name	curl en ||| curl	count=1
function_name	la prueba automática sobre ||| mcrypt module self test	count=1
arg_pair	number representado en base ||| int $frombase	count=1
namespace	de ssl ||| oauth	count=1
namespace	por name pero con ||| function	count=1
function_name	destruir ||| offset unset	count=2
arg_pair	del mensaje dado ||| resource $imap_stream int $msg_number	count=1
namespace	descriptor previamente asignados con ||| oci-lob	count=1
function_name	tipo de edición ||| filepro fieldtype	count=1
function_name	de la clave /encoding ||| get encoding	count=1
function_name	obtiene un parámetro si ||| get	count=1
namespace	preserva los bordes ||| gmagick	count=1
arg_pair	local_socket ||| string $local_socket int $errno	count=1
namespace	[namespace] una ||| [namespace]	count=10
function_name	datos dbase ||| dbase	count=1
function_name	producto ||| array product	count=2
arg_pair	para [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	resultado de previas operaciones ||| count entries	count=1
function_name	una representación de ||| to	count=1
function_name	por lo menos tantos ||| doc	count=1
namespace	forma de ||| function	count=1
function_name	base ||| fbsql start db	count=1
function_name	información con el ||| set info	count=1
function_name	devuelve la extensión ||| extension	count=1
function_name	sin cambiar el ecm ||| output stagnation	count=1
namespace	este para que ambos ||| imagickkernel	count=1
arg_pair	el valor ||| int $type mixed $value	count=1
arg_pair	fuentes font devuelto ||| int $font	count=1
function_name	de ||| odbc	count=3
arg_pair	renombra una ||| string $name string $newname	count=1
function_name	el término de ||| bound	count=1
function_name	[function_name_1] documento ||| [function_name_2] [function_name_1]	count=2
namespace	la clave dada por ||| function	count=1
function_name	notación notation para ||| set notation decl	count=2
function	nueva [function_name_1] [arg_pair_2] ||| imagick bool new [function_name_1] [arg_pair_2]	count=4
return	usando una función ||| void	count=2
function	variables [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	indicado ||| crack closedict	count=2
function_name	del recurso curl ||| curl	count=1
function	[function_name_1] arrays compara ||| [function_name_1] [arg_pair_2]	count=3
function_name	mantienen ||| arsort	count=1
function_name	almacenar [function_name] appenditerator::append() ||| get [function_name]	count=1
function_name	número ||| prob	count=1
function_name	establece ||| set storage handler	count=2
function_name	el tamaño ||| size offset	count=2
arg_pair	texto y ||| string $optlist	count=1
function_name	de reescritura establecidas previamente ||| reset rewrite	count=1
function_name	la prueba probabilística de ||| gmp prob prime	count=1
return	que se obtuvo en ||| bool	count=1
function_name	en por lo ||| mlt min doc	count=1
function_name	[function_name_1] [function_name_2] el ||| [function_name_1] [function_name_2]	count=14
namespace	iniciada por sqlsrv_begin_transaction() incluye ||| function	count=1
arg_pair	del texto que ||| resource $handle	count=1
function_name	de un repositorio ||| svn cat	count=1
function_name	en la ||| set mlt min	count=1
function_name	prioridad de ||| base priority	count=1
function_name	método devuelve el ||| get current	count=1
arg_pair	[arg_pair_1] a stream ||| [arg_pair_2] string $filtername [arg_pair_1]	count=6
function_name	conexión actual ||| ingres autocommit	count=1
function_name	obtiene ||| trader get	count=2
function_name	nueva [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	[function_name_1] documento mínima ||| [function_name_2] [function_name_1]	count=5
namespace	atributo ||| hw_api_attribute	count=1
function_name	le ha consultado ||| count	count=1
function_name	obtiene la lista de ||| get	count=1
function_name	[function_name] universal ||| [function_name]	count=3
namespace	que se ||| solrquery	count=1
function_name	declaración de entidades ||| entity	count=1
return	aclarando y ||| void	count=1
namespace	menos que ||| function	count=1
function_name	por la extensión phar ||| phar	count=1
namespace	número de ||| sqlite3	count=1
function_name	el ecm ||| output stagnation	count=1
function_name	el tamaño ||| zip entry filesize	count=1
function_name	campos [function_name_2] ||| [function_name_2] [function_name_1]	count=9
return	[return] descrito ||| [return]	count=2
function_name	sybase_connect() con ||| pconnect	count=1
function_name	estilo de ||| set slide show	count=1
function_name	serán ||| frequency	count=1
function_name	coloca el indicador de ||| gzrewind	count=1
function_name	disponible la ||| ps open memory	count=1
arg_pair	en una base ||| string $schema	count=1
arg_pair	estándar ||| string $str	count=1
function_name	encriptado y firmado ||| gnupg encryptsign	count=1
namespace	o para escritura mediante ||| function	count=1
namespace	a un formato más ||| function	count=1
arg_pair	la propiedad hwnd ||| int $window_handle int $client_area	count=1
function_name	información sobre ||| curl getinfo	count=1
function_name	final ||| append	count=1
function_name	el uso ||| proc get	count=1
function_name	de un string ||| crypt	count=1
function_name	disposición de una imagen ||| set image dispose	count=1
function_name	adjunta ||| kernel	count=1
namespace	como ||| solrquery	count=1
function_name	[function_name_1] el número ||| [function_name_1] [function_name_2]	count=3
function_name	zip desde un ||| build from	count=1
function_name	grosor de ||| imagesetthickness	count=1
namespace	o directorio ||| function	count=2
function_name	definición del disco ||| file	count=2
function_name	supervisión [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	descripción ||| cairo scaled font create	count=1
function_name	devuelve si un campo ||| get	count=1
namespace	especificado por filename ||| function	count=1
namespace	la posición ||| harupage	count=1
return	su nombre en ||| bool	count=1
return	se buscarán ||| string	count=1
function_name	la información ||| pdf info	count=2
function_name	adjunta otro núcleo («kernel») ||| kernel	count=1
function_name	intenta eliminar drop por ||| drop	count=1
function_name	indica si ||| enchant dict is in	count=1
arg_pair	intenta eliminar cualesquiera bytes ||| resource $handle	count=1
namespace	a este color ||| gmagickpixel	count=1
function_name	phar cuando sea directamente ||| phar	count=1
function_name	la longitud de ||| length	count=3
arg_pair	ambos por defecto ||| int $fetchtype	count=1
namespace	desde la época ||| function	count=1
function_name	ha consultado ||| count	count=1
arg_pair	service para ||| string $service	count=1
function_name	no bloquearán la e/s ||| readahead	count=1
arg_pair	línea discontinua ||| float $on	count=1
namespace	la posición actual ||| harupage	count=1
function_name	establece el [function_name_2] ||| [function_name_1] [function_name_2]	count=16
function_name	configuración de ||| cfg var	count=1
function	[function_name_1] la base ||| [function_name_1] [arg_pair_2]	count=1
function_name	la descripción de ||| cairo pattern get	count=6
function_name	información de estado ||| status	count=3
arg_pair	un hipervínculo ||| float $lly	count=1
function_name	recupera información sobre un ||| get	count=1
arg_pair	el punto x3 y3 ||| float $x3 float $y3	count=1
arg_pair	una conexión ||| resource $link_identifier	count=1
function_name	entidades externas ||| disable entity	count=1
function_name	acción javascript ||| fdf set javascript action	count=1
function_name	de ||| zip	count=2
function	[function_name_1] [arg_pair_2] si ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	de memcached::getmulti() con la ||| int $flags	count=1
arg_pair	una instancia ||| string $oid	count=1
function_name	y ca_info establecidos por ||| capath	count=1
function_name	minúscula ||| mb strtolower	count=2
namespace	memcached dada por option ||| memcached	count=2
function_name	método ||| data	count=1
arg_pair	de n por d ||| gmp $n gmp $d	count=1
return	como una cadena ||| string	count=1
function_name	si se proporcionan ||| splice	count=1
arg_pair	y php del ||| int $length	count=1
function_name	servidor mysql ||| mysql	count=3
arg_pair	en haystack y devuelve ||| bool $before_needle	count=1
function_name	sin tratar ||| raw	count=3
return	valores usando una función ||| void	count=1
function_name	en la sesión actual ||| session	count=1
function_name	de prioridad de ||| priority	count=1
function_name	adjunta otro ||| kernel	count=1
function_name	a fbsql_fetch_array() con ||| fbsql fetch	count=1
arg_pair	domain actual en una ||| string $domain string $message	count=1
function_name	como de tipo id ||| set id	count=2
function_name	[function_name_1] máximo de ||| [function_name_1] cascade [function_name_2]	count=1
function_name	nombre de un ||| name	count=2
arg_pair	para ||| resource $ann	count=2
function_name	socket de ||| socket	count=1
function_name	pausado ||| win32 continue	count=1
function_name	dado y extrae ||| mailparse uudecode	count=1
arg_pair	[arg_pair_1] en signed_text ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	única ||| imagickkernel	count=1
arg_pair	forma ||| string $charset	count=1
function_name	cuando la ||| set using	count=1
arg_pair	callback a ser llamado ||| int $type mixed $callback	count=1
namespace	recupera ||| function	count=1
arg_pair	por variable_key y ||| int $variable_key	count=1
function_name	variables ||| mb convert variables	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image border [function_name_2]	count=2
function	[function_name_1] un campo ||| [arg_pair_2] [function_name_1]	count=1
namespace	la ||| yaf_dispatcher	count=1
function_name	equilibrado de ||| ms	count=1
function_name	carga una ||| load	count=1
function_name	iterador ||| set iterator	count=1
arg_pair	datos ||| string $data	count=1
arg_pair	fichero fd ||| mixed $fd int $offset	count=1
function_name	la remarcación [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	ciertas ||| int $field_offset	count=1
function_name	descripción de la ||| cairo format stride for width	count=1
function_name	de la tarea en ||| do	count=1
namespace	memoria usada por ||| function	count=1
function_name	trabajador envía una excepción ||| set exception	count=1
function_name	[function_name_1] épocas ||| [function_name_1] cand [function_name_2]	count=3
function_name	función devolverá la lista ||| odbc data	count=1
function_name	repositorio con el ||| svn	count=1
function_name	de peticiones ||| grp	count=1
function_name	parada empleada durante ||| stop function	count=1
return	la distancia ||| int	count=1
namespace	de ||| sdo_das_xml	count=2
function_name	la prueba probabilística de ||| gmp prob	count=1
arg_pair	devolverá el ||| string $str	count=1
function_name	de primer plano ||| color set	count=1
function_name	indices ||| udiff assoc	count=1
function_name	copia ||| pgsql copy to	count=1
arg_pair	de entrenamiento ||| resource $ann int $training_algorithm	count=1
arg_pair	a menudo ||| int $pri	count=1
namespace	gmagickpixel ||| gmagickpixel	count=1
function	crea [arg_pair_2] ||| [function_name_1] bookmark [arg_pair_2]	count=1
function_name	proveedor ||| parameter	count=1
function_name	calcula el seno ||| trader asin	count=1
namespace	argumento ||| rarexception	count=1
namespace	http en la ||| function	count=1
function_name	string utilizando ||| crypt	count=1
namespace	si el nodo ||| tidynode	count=1
function_name	un [function_name] ||| geoip domain [function_name]	count=2
function_name	función socket_sendto() envía ||| sendto	count=1
arg_pair	imagen en ||| gmagick $source	count=1
namespace	el momento actual ||| function	count=1
arg_pair	un ancho ||| string $text float $width	count=1
function_name	la descripción de la ||| cairo ps	count=1
function_name	del api de eventos ||| event	count=1
function_name	último error que ocurrió ||| last	count=1
function_name	de mensaje ||| imap msgno	count=1
function_name	representación en ||| to	count=1
function	de la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	se encuentra ||| open	count=1
function_name	palabras ||| set mlt	count=1
arg_pair	desde un ||| resource $font_index string $encodingfile	count=1
function_name	de registros en ||| px numrecords	count=1
arg_pair	[arg_pair_1] los efectos ||| [arg_pair_1] [arg_pair_2]	count=3
arg_pair	en subject ||| int $limit	count=1
namespace	unix ||| function	count=2
namespace	de relleno usado cuando ||| gmagickdraw	count=1
function_name	asigna un ||| assign	count=1
function_name	información de inclued ||| inclued	count=1
function	[function_name_1] arrays compara ||| [arg_pair_2] [function_name_1]	count=3
return	retorna el ||| int	count=1
function	cambiará el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	fecha ||| date parse from	count=1
function_name	devuelve el ||| zip entry	count=1
function	socket_sendto() envía [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	valor ||| using	count=1
arg_pair	para ||| resource $psdoc	count=1
function_name	parámetrp está disponible ||| default value available	count=1
function_name	de un género correspondiente ||| id3 get genre	count=1
function_name	máxima de una línea ||| max line	count=1
arg_pair	de php var_array al ||| array $var_array	count=1
arg_pair	mensaje ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	datos arbitrarios ||| ping	count=1
function_name	frecuencia en ||| set mlt min doc frequency	count=1
function_name	restaura el archivo ||| restore	count=1
function_name	suscribirse a ||| imap subscribe	count=1
return	este ||| int	count=2
return	rna basada en ||| bool	count=3
function_name	nombres especificado ||| default namespace	count=1
function_name	[function_name_1] de sarprop ||| [function_name_2] step [function_name_1]	count=2
return	trabajo y ||| bool	count=1
function_name	alta prioridad para ||| task high	count=1
arg_pair	cambia el valor ||| mixed $bordercolor int $x	count=2
function_name	carp::croak de ||| croak	count=1
function_name	esta función ||| data source	count=1
function_name	cursores de ||| tailable	count=1
function_name	espacios ||| ltrim	count=1
function_name	el canal alfa ||| alpha channel	count=2
function_name	lista personal de ||| pspell config personal	count=1
namespace	número binario representado por ||| function	count=1
arg_pair	form ||| resource $form resource $component	count=1
function_name	tantos documentos ||| frequency	count=1
return	la peticiones ||| void	count=1
function_name	das xml ||| types	count=1
function_name	unicode del ||| ord	count=1
function_name	verificación de ||| signature	count=1
arg_pair	watcher evperiodic y lo ||| int $signum callable $callback	count=1
function_name	de consulta ||| get query	count=1
return	unix (1 de enero ||| int	count=1
namespace	estado del ||| mongocursor	count=1
arg_pair	el hash de un ||| string $str	count=1
function_name	de entrenamiento desde una ||| train from callback	count=1
arg_pair	tridimensional simulado ||| int $width int $height	count=1
arg_pair	string str dado ||| string $str string $charset	count=1
arg_pair	un archivo remoto ||| resource $ftp_stream string $remote_file	count=1
function_name	disposición ||| setimagedispose	count=1
arg_pair	información almacenada de una ||| string $filename	count=1
arg_pair	un process ||| resource $process	count=1
function_name	[function_name_1] importada ||| [function_name_1] fit [function_name_2]	count=2
namespace	número de filas ||| sqlite3	count=1
function_name	severidad ||| message severity	count=1
function_name	del formato utf-8 ||| utf8	count=1
function_name	porporcionados luego lee ||| ldap get entries	count=1
function_name	cuando ||| exceptions	count=1
function_name	autenticación donde la ||| svn auth	count=1
function_name	lee atributos ||| attributes	count=1
function_name	rutinas de interoperabilidad stubs ||| create default stub	count=1
arg_pair	la cuota ||| string $quota_root	count=2
function_name	producto de valores ||| array product	count=1
function_name	parámetro de sustitución con ||| param	count=1
function_name	para establecer el ||| set	count=1
arg_pair	de datos cubrid y ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	la lista ||| source	count=1
function_name	indicando error cuando la ||| using exceptions	count=1
return	en por lo menos ||| solrquery	count=1
arg_pair	permite enviar emails ||| string $additional_headers	count=1
function_name	de datos abiertos ||| dba list	count=1
function_name	si ||| set using	count=2
function_name	marco [function_name] animada ||| [function_name] ticks per	count=1
function_name	[function_name] por ||| [function_name]	count=1
function_name	como este ||| mlt min doc	count=1
function_name	atributo name como de ||| attribute	count=1
function_name	advertencia ||| image	count=1
function_name	string verticalmente ||| imagestringup	count=1
function_name	un único componente ||| component	count=1
function_name	fija la base ||| sybase select db	count=1
arg_pair	dos ||| string $servername string $username	count=1
function_name	contraseña ||| password	count=1
function_name	código de unicode del ||| ord	count=1
function_name	[function_name_1] primer atributo ||| [function_name_1] [function_name_2]	count=1
return	los ca_path ||| array	count=1
function_name	devuelve el ||| zip entry filesize	count=1
function_name	descripción de la ||| cairo font	count=1
namespace	índice presente que ||| judy	count=1
function_name	valor del parámetro facet.date.end ||| facet date end	count=1
function_name	manejador de instrucciones de ||| processing instruction handler	count=1
namespace	los glifos que ||| function	count=1
function_name	arcocoseno para ||| trader acos	count=1
function_name	de control ||| iscntrl	count=1
arg_pair	en la database ||| resource $link_identifier	count=1
namespace	fgetss() intenta eliminar cualesquiera ||| function	count=1
arg_pair	es tan compatible como ||| cairosurface $other int $content	count=1
function_name	propiedades ||| properties	count=1
arg_pair	un umbral de contraste ||| float $threshold int $channel	count=1
function_name	fichero subido ||| attachment	count=1
function_name	caché de código ||| apc	count=1
function_name	grupo ||| posix	count=1
return	y socket. -- ||| zmqsocket	count=1
return	un nombre ||| resource	count=1
function_name	hilo ||| thread	count=2
function_name	función crea una nueva ||| create attribute	count=1
function_name	imagen y [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	la biblioteca ||| set using	count=1
function_name	columna actual ||| get current column	count=1
function_name	[function_name_1] de unicode ||| [function_name_2] [function_name_1]	count=4
function_name	del apuntador de ||| all	count=1
arg_pair	un número es primo ||| gmp $a	count=1
function_name	de resultados completo para ||| start	count=1
function_name	de monitorizar un recurso ||| cancel monitor	count=1
return	devuelve los ||| array	count=1
function_name	[function_name_1] escribir operaciones ||| [function_name_1] [function_name_2]	count=1
function_name	recupera la ||| get	count=1
namespace	número es primo ||| function	count=1
arg_pair	tridimensional ||| int $width int $height	count=1
function_name	[function_name_1] unión ||| [function_name_2] [function_name_1]	count=9
return	igual que closedir() ||| void	count=1
function_name	establece el ||| set storage handler	count=1
function_name	ser devueltas ||| limit	count=1
return	en un atributo de ||| bool	count=2
function_name	un das xml ||| add	count=1
function_name	devuelve la extensión ||| type to extension	count=1
function_name	tiene ||| has	count=1
function_name	breaker parameter ||| set tie	count=1
arg_pair	data en ||| string $data	count=1
arg_pair	la conexión [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	más bases de ||| string $databases	count=1
return	del [return] contorneado ||| [return]	count=1
function_name	función [function_name] ||| dbx [function_name]	count=2
arg_pair	bordes de ||| int $height	count=1
namespace	tailable que son similares ||| mongocursor	count=1
function_name	establece el ||| set	count=40
function_name	de socket devuelto ||| socket strerror	count=1
function_name	devolver un ||| using exceptions	count=1
return	buscarán los ||| string	count=1
function_name	un ||| extract to	count=1
function_name	remarcación de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	del conjunto ||| quickhashintset	count=1
return	adjunta otro ||| void	count=1
arg_pair	colores ||| int $numcolors int $colorspace	count=2
function_name	un diff ||| file diff	count=1
function_name	documento html desde la ||| save html	count=1
function_name	comprobación ||| crack check	count=2
namespace	a ||| gearmanworker	count=2
function_name	nombre del ||| name by name	count=1
function_name	ssl para las ||| set	count=1
function_name	de flujo ||| stream	count=4
function_name	una cadena de un ||| chr	count=1
function_name	datos de entrenamiento desde ||| train from	count=1
function_name	curva de bézier desde ||| pdf curveto	count=1
arg_pair	de oracle name ||| string $name	count=1
function_name	de ||| request	count=1
namespace	obtiene el valor de ||| function	count=1
function_name	la etiqueta id3 ||| id3 get	count=2
function	notifica [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	total ||| total	count=1
arg_pair	puedan estar ||| string $str	count=1
function_name	incluir o no ||| terms include	count=1
function_name	la prueba ||| prob	count=1
arg_pair	base de datos ||| string $password string $database	count=1
function_name	parámetro rows ||| copy from	count=1
function_name	unrar encuentre ||| exceptions	count=1
function_name	obtener el número de ||| get num	count=2
function_name	obtiene ||| root device get	count=1
arg_pair	variables globales ||| string $encoded_string array $result	count=1
arg_pair	de str donde todas ||| string $str	count=1
function_name	de ||| pdf rotate	count=2
function_name	una excepción no es ||| exception	count=1
function_name	de la palabra para ||| word	count=1
function_name	datos en un ||| input	count=1
function_name	para que la clave ||| multi by key	count=2
return	el sistema de ||| bool	count=1
function_name	verde de la ||| image green	count=1
function_name	cubrid_lob2_new() u obtenido de ||| lob2 close	count=1
function_name	devuelve [function_name] ||| [function_name]	count=1
function_name	de cada capa ||| fann get layer array	count=1
function_name	entrenamiento continuar ||| fann get cascade output	count=1
arg_pair	especifica por dn ||| string $dn	count=1
function_name	como ||| min doc frequency	count=2
function_name	cfb y ||| mcrypt	count=1
function_name	devolverá [function_name] ||| rpm [function_name]	count=1
function	[function_name_1] [arg_pair_2] ||| bool [function_name_1] [arg_pair_2]	count=2
function_name	nombre del paquete ||| package name	count=2
arg_pair	dicho elemento ||| mixed $entry	count=1
arg_pair	imagen reconstruida y las ||| int $metric	count=1
function_name	[function_name_1] peso de ||| [function_name_2] [function_name_1]	count=2
function_name	el trazado y ||| pdf closepath	count=2
arg_pair	propiedad hwnd en instancia ||| int $client_area	count=1
function_name	llamarla varias ||| odbc data source	count=1
function_name	devuelve el índice del ||| get	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] namespace [function_name_2]	count=1
arg_pair	direcciones horizontal y vertical ||| float $x float $y	count=1
function_name	función cubrid_col_get() [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	y ||| int $width	count=1
arg_pair	key ||| mixed $key	count=1
namespace	núcleo («kernel») a este ||| imagickkernel	count=1
function_name	afectadas por la última ||| fbsql affected	count=1
arg_pair	una nueva definición de ||| float $height float $xstep	count=1
arg_pair	negro especificados al rango ||| float $blackpoint float $gamma	count=1
arg_pair	esté disponible ||| int $row	count=1
function_name	memcached::prepend() con ||| prepend by	count=1
function_name	documentos ||| mlt min	count=1
arg_pair	comporta de ||| string $password	count=1
return	las claves x e ||| array	count=1
function_name	el tamaño y ||| size offset	count=2
function_name	de la extensión iconv ||| iconv	count=1
namespace	type que ||| function	count=1
function_name	valor ||| exceptions	count=1
function_name	lo menos tantos documentos ||| mlt min	count=1
namespace	es un carácter ||| intlchar	count=5
function_name	crea ||| create document	count=1
function_name	calcula la tangente para ||| tan	count=1
arg_pair	database ||| resource $link_identifier	count=1
function_name	socket ||| socket strerror	count=2
function_name	uno de ellos ||| map	count=1
arg_pair	por el oid dado ||| string $oid	count=1
function_name	[function_name_1] donde ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] estructuras ||| [arg_pair_2] [function_name_1]	count=1
function_name	que ||| construct	count=1
function_name	crea un objeto char ||| create char	count=1
function_name	denominador ||| denominator	count=1
function_name	consulta de búsqueda ||| query	count=2
function_name	datos ||| uudecode all	count=2
function_name	filas extraidas por una ||| ifx num rows	count=1
function	información de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	ldap ||| ldap add	count=2
return	estar disponibles en ||| string	count=1
function_name	encuentra disponible la ||| open memory	count=1
function_name	indicando ||| using exceptions	count=2
function_name	entrada ||| filesize	count=1
function_name	proceso ||| status	count=1
function_name	lecturas ||| get slave	count=2
function_name	con estadísticas ||| stats	count=1
function_name	define el de estilo ||| set slide	count=1
function_name	entrada a las candidatas ||| fann get cascade	count=2
function_name	una elipse en la ||| ellipse	count=1
arg_pair	usar dentro de una ||| string $alias	count=1
arg_pair	de memcached::set() con ||| int $expiration	count=1
function_name	el ||| chdir	count=1
function_name	descripción ||| cairo font options get subpixel order	count=1
arg_pair	string dado por value ||| string $key string $value	count=1
function_name	sqlsrv_prepare() o ||| sqlsrv	count=1
function_name	ser almacenados en la ||| get	count=1
function_name	[function_name_1] basándose ||| [function_name_1] [function_name_2]	count=1
function_name	token de petición secreto ||| request token	count=1
arg_pair	almacena [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	para [function_name_2] ||| [function_name_2] watermark [function_name_1]	count=4
function_name	frecuencia en ||| set	count=1
return	blob en ||| bool	count=1
arg_pair	similar a crear una ||| string $progid	count=1
function	[function_name_1] codificación para ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=1
namespace	cambios a ||| function	count=1
arg_pair	parecida a sybase_connect() con ||| string $password	count=1
namespace	y php del texto ||| function	count=1
arg_pair	lote de operaciones update ||| mongocollection $collection array $write_options	count=1
namespace	la dada por new ||| function	count=1
function_name	advertencia ||| ps open memory	count=1
function_name	iterador a la ||| iterator	count=1
arg_pair	los ||| int $linebreak	count=1
function_name	usa ||| gmp	count=1
function_name	las ||| get	count=4
function_name	se ||| sybase	count=1
function_name	el ||| pdf rotate	count=2
function_name	reescritura establecidas previamente ||| reset rewrite	count=1
function_name	htmlspecialchars() ||| htmlspecialchars decode	count=2
arg_pair	plural de gettext() ||| string $msgid1	count=1
function_name	identificador del cliente ||| client identifier	count=1
return	arbitraria en ||| bool	count=1
namespace	puntero ||| splfileobject	count=1
function_name	memoria caché de ||| wincache	count=1
arg_pair	imágenes de color ||| resource $image	count=1
function_name	la caché de archivo/usuario ||| apc bin	count=1
arg_pair	devuelve str con todos ||| string $str string $encoding	count=2
function_name	la estructura ||| fetchstructure	count=1
function_name	lista ||| removeimage	count=1
namespace	nombres ||| domnode	count=1
function_name	que no ||| doc frequency	count=1
function_name	este para ||| add	count=1
function_name	devuelve el comentario de ||| get comment index	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] node domnode $importednode [arg_pair_2]	count=1
function_name	siguiente si ||| cubrid next	count=1
function_name	de espera ||| query timeout	count=1
function_name	el generador de trozos ||| fragmenter	count=1
function_name	espacio de nombres ||| default	count=1
arg_pair	y ordena números ||| string $search_criteria string $charset	count=1
function_name	devuelve ||| get pixel	count=1
arg_pair	está conectada completamente ||| int $num_neurons1	count=1
function_name	[function_name_1] cadena artista ||| [function_name_1] [function_name_2]	count=1
function_name	se ||| chdir	count=1
arg_pair	actual indicando ||| string $actor string $details	count=1
function_name	bloquearán la e/s ||| eio readahead	count=1
function_name	la descripción de ||| get surface	count=1
function_name	columna actual para ||| get current column number	count=1
function_name	de todas las colecciones ||| collection info	count=1
function_name	de secuencia de ||| msgno	count=1
namespace	el final en ||| splfileobject	count=1
function_name	es true ||| using exceptions	count=1
function_name	canal [function_name_2] ||| [function_name_2] [function_name_1]	count=8
namespace	nodo es parte ||| tidynode	count=1
function_name	la última fila ||| last	count=1
arg_pair	cero ||| mixed $options	count=1
namespace	de llamarla ||| function	count=1
function_name	estadísticas sobre ||| statistics	count=1
return	de direcciones servicios colas ||| zmqsocket	count=1
return	el argumento es ||| void	count=1
function_name	de la página ||| slide	count=1
function_name	se comporta ||| pconnect	count=1
function_name	el carácter especificado por ||| chr	count=1
return	de un caracter ||| string	count=1
arg_pair	un efecto de ||| int $x	count=1
function_name	se van ||| set start	count=1
arg_pair	una nueva ||| string $value	count=1
function_name	equilibrado ||| ms	count=1
function_name	red neuronal de ||| fann	count=3
function_name	función geoip_country_code_by_name() ||| country code	count=1
function_name	devolver un valor especial ||| using exceptions	count=1
function_name	en ||| mlt	count=2
function_name	jerarquía entera de ||| checkin	count=1
arg_pair	bordes de ||| int $y	count=1
function_name	a la de memcached::prepend() ||| prepend	count=1
return	array con ||| array	count=6
namespace	momento actual medido como ||| function	count=1
function_name	advertencia esta función ||| ps open memory image	count=1
arg_pair	correspondientes a ||| array $ctorparams int $row	count=1
return	otro ||| void	count=1
namespace	representado por ||| function	count=3
arg_pair	html y php ||| resource $handle int $length	count=1
function	blanco retirados [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	el certificado ||| openssl pkcs7 sign	count=1
function_name	indica si ||| default namespace	count=1
arg_pair	a una página ||| string $dest	count=1
function_name	esta función devuelve el ||| get	count=2
function_name	obtiene [function_name] ||| [function_name]	count=1
function_name	de respuesta xml ||| xml response	count=2
function_name	establece el número ||| set mlt	count=1
function_name	flags como ||| flags	count=1
function_name	obtiene información sobre el ||| get	count=1
function_name	curl ||| curl error	count=1
return	especifica el número de ||| solrquery	count=1
function_name	bandera o_nonblock del socket ||| set block	count=1
arg_pair	un nuevo objeto ||| mixed $class	count=1
function_name	modo de no-bloqueo ||| nb	count=1
return	sobre un proceso ||| array	count=1
function_name	rebobina la ||| reset stream	count=1
function_name	lista de servidores de ||| servers	count=1
arg_pair	un nombre ||| string $name	count=1
function_name	string ||| bzdecompress	count=1
function_name	mediante el identificador ||| crack closedict	count=1
function_name	cada archivo ||| uudecode	count=1
namespace	un segundo ||| sdo_das_xml	count=1
arg_pair	un ||| resource $pdfdoc int $page	count=1
function	[function_name_1] adquirido ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	modo wsdl o ||| array $options	count=1
return	obtiene información sobre los ||| array	count=2
function_name	un repositorio ||| svn cat	count=1
arg_pair	esta es ||| string $name mixed $value	count=1
function_name	uno de ellos ||| array map	count=1
arg_pair	ruta ||| string $path	count=1
function_name	compartido y ||| share	count=1
arg_pair	función va aquí ||| cairopssurface $surface int $level	count=1
namespace	sentencia ||| sqlite3	count=1
function_name	variables de la ||| mb convert variables	count=1
function_name	menos ||| mlt min doc	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] package [function_name_2]	count=1
return	medido como ||| int	count=1
function_name	[function_name] por lo ||| [function_name]	count=1
return	lista de ||| array	count=1
function_name	de ||| show	count=3
arg_pair	usando un ||| int $height	count=1
return	y la ruta de ||| array	count=1
arg_pair	específicado ||| string $host_ip	count=1
return	es un alias ||| bool	count=1
arg_pair	usa la prueba probabilística ||| gmp $a	count=1
namespace	objeto pdostatement ||| pdostatement	count=1
function	[function_name_1] un ||| [function_name_1] params [arg_pair_2]	count=8
function_name	de filas afectadas ||| fbsql affected rows	count=2
return	idéntica a fgets() ||| string	count=1
arg_pair	de variante para ||| variant $variant	count=1
function_name	libera un ||| oci free descriptor	count=1
return	un array de objetos ||| array	count=1
function_name	fichero subido ||| fdf get attachment	count=1
arg_pair	esta función prepara para ||| resource $id string $type	count=1
function_name	restaura el ||| restore	count=1
function_name	de parámetros ||| ps open memory image	count=1
function_name	el id dado ||| get element by id	count=1
function_name	error dado ||| strerror	count=1
namespace	la regla del número ||| harupage	count=1
arg_pair	una ||| float $ury	count=1
function_name	[function_name] actual ||| get line [function_name]	count=1
function_name	de bytes ||| bcompiler	count=4
function_name	[function_name_1] nombre del ||| [function_name_1] module [function_name_2]	count=1
namespace	a ||| solrquery	count=1
return	cadena ||| sdo_das_xml_document	count=1
function_name	pregunta [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] nombres ||| [function_name_2] [function_name_1]	count=2
function_name	tamaño ||| entry	count=1
arg_pair	contorno acutales ||| float $ex	count=1
function_name	firma de cabecera ||| get request header	count=1
function	[function_name_1] las estructuras ||| [arg_pair_2] [function_name_1]	count=1
function_name	que la [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	segundo plano retornando ||| background	count=1
arg_pair	número del indentificador ||| resource $result_id	count=1
function_name	unrar encuentre ||| set using	count=1
namespace	devuelve un array que ||| function	count=1
function_name	devuelve la escala ||| db2 field scale	count=1
function_name	y ||| ncurses color	count=1
function_name	campo a ||| alternate field	count=1
function_name	directorios ||| svn	count=1
arg_pair	la ruta corriente ||| float $ray	count=1
return	una excepción ||| void	count=1
function_name	[function_name_1] el número ||| [function_name_2] [function_name_1]	count=5
function_name	pdf ||| pdf open file	count=2
function_name	calidad de compresión de ||| compression quality	count=1
function_name	[function_name_1] los parámetros ||| [function_name_1] cookie [function_name_2]	count=1
namespace	memcached ejecutado ||| memcached	count=2
arg_pair	sobre ||| resource $ch	count=1
namespace	igual que closedir() solo ||| directory	count=1
function_name	número ||| gmp prob	count=1
function_name	voltea la imagen dada ||| imageflip	count=1
namespace	en lugar de ||| rarexception	count=1
arg_pair	coloca un hipervínculo ||| float $urx	count=1
function_name	[function_name_1] cadena artista ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] categoría ||| [function_name_2] [function_name_1]	count=1
function_name	sólo si el argumento ||| set	count=1
function_name	que ||| from	count=1
return	proceso del ||| void	count=1
function_name	a diferencia de strcmp() ||| strcoll	count=1
function_name	el tamaño ||| zip entry	count=1
namespace	por variable ||| function	count=1
function_name	compresión de una ||| compression	count=1
function_name	una nueva página al ||| add page	count=1
return	la ||| cairoscaledfont	count=1
function_name	[function_name_1] el factor ||| [function_name_1] rprop increase [function_name_2]	count=1
function_name	la función usa ||| gmp prob prime	count=1
namespace	la ||| rarexception	count=1
arg_pair	pajar ||| string $needle	count=2
function_name	continente ||| continent code by	count=1
return	color de relleno usado ||| void	count=1
function_name	la parte [function_name] ||| set [function_name]	count=1
function_name	certificado y ||| openssl pkcs7 sign	count=1
function_name	la clave [function_name] que ||| [function_name]	count=1
function_name	entrada para ||| set input scaling	count=1
function_name	diff unificado ||| xdiff file diff	count=1
namespace	se van ||| solrquery	count=1
arg_pair	un archivo ||| resource $filehandle	count=1
function_name	sólo ||| set using exceptions	count=2
arg_pair	se pueda con una ||| string $height	count=1
function_name	en un archivo ||| mailparse uudecode	count=1
arg_pair	de operaciones delete ||| mongocollection $collection array $write_options	count=1
function_name	enviando el control de ||| control	count=1
function_name	abierto mediante el ||| get status	count=1
function_name	con el ||| add types	count=1
function_name	usuario) ||| restore error handler	count=1
function_name	función ||| number	count=1
arg_pair	recurso de ||| resource $result	count=1
namespace	obtiene ||| harufont	count=3
function_name	de trabajo para ||| ping	count=1
function_name	documento pdi de tipo ||| pdi	count=1
function_name	marca los mensajes ||| imap	count=1
function_name	parada empleada durante el ||| stop	count=1
function_name	devuelve un ||| strerror	count=1
return	en event_set() ocurra en ||| bool	count=1
function	concatena [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	del texto ||| function	count=1
function_name	un proceso abierto ||| proc	count=1
arg_pair	dest ||| int $context	count=1
function_name	jerarquía entera de objetos ||| checkin	count=1
function_name	texto contiene únicamente espacios ||| whitespace in element content	count=1
arg_pair	mensaje y ||| zmqsocket $frontend zmqsocket $backend	count=1
return	el número de filas ||| solrquery	count=1
arg_pair	el filename ||| mixed $data	count=1
return	otros caracteres ||| string	count=1
function_name	información sobre la utilización ||| win32 ps stat mem	count=1
function_name	filas interno ||| data seek	count=1
function_name	[function_name_1] compartido y ||| [function_name_2] [function_name_1]	count=1
function_name	devuelve ||| mysqli get	count=5
function_name	base de datos ||| sybase select db	count=1
function_name	un documento xml desde ||| save xml	count=1
return	en dicha ||| bool	count=1
function_name	el espacio ||| default	count=1
function_name	del servicio ||| win32 start service	count=1
arg_pair	a fgets() excepto ||| resource $handle	count=1
function_name	nombre de etiqueta dado ||| tag name	count=1
namespace	que está abierto ||| function	count=1
function_name	que ||| terms	count=1
arg_pair	stored procedure en una ||| bool $skip_results	count=1
arg_pair	un objeto de ||| mixed $config	count=1
return	error una excepción de ||| void	count=1
function_name	la curva bezier ||| curve	count=1
function_name	usa para convertir ||| convert to data	count=1
function	el inverso [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	formato especificado en ||| bool	count=1
function_name	columnas del conjunto de ||| cubrid	count=1
arg_pair	conexión al servidor ||| mysqlnd_connection $connection	count=1
namespace	plural ||| function	count=1
function_name	apuntador de ||| uudecode all	count=1
function	el registro [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	ver si ||| gearmanclient	count=1
function_name	[function_name_1] con información ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] [arg_pair_2] ||| [function_name_1] float $left [arg_pair_2]	count=2
function_name	del servicio y ||| service	count=1
return	este método ||| bool	count=1
namespace	obtiene el tipo ||| gmagick	count=1
arg_pair	hasta maxlength bytes y ||| resource $handle int $maxlength	count=1
function_name	parámetro de sustitución ||| param	count=1
function_name	el último error que ||| last	count=1
arg_pair	dibuja la cadena ||| int $y	count=2
function_name	char ||| char	count=3
namespace	carácter que es ||| function	count=1
return	elemento en un atributo ||| bool	count=1
arg_pair	object splfileobject de ||| bool $use_include_path	count=1
return	capas de mensaje y ||| zmqsocket	count=1
function_name	lista de [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	los caracteres que necesitan ||| addslashes	count=1
function	[function_name_1] un bloque ||| [arg_pair_2] [function_name_1]	count=1
namespace	del nodo ||| spldoublylinkedlist	count=1
function_name	unrar ||| using	count=1
return	de un ||| string	count=9
function_name	servicio ||| gupnp service	count=1
function_name	de la fuente ||| get	count=2
function_name	de parámetros ||| ps open	count=1
arg_pair	cualquier otra llamada ||| callable $callback mixed $data	count=1
function_name	filas extraidas ||| ifx num rows	count=2
arg_pair	pem codificada y la ||| array $configargs	count=1
arg_pair	0600 en el directorio ||| string $prefix	count=1
function_name	función está definida ||| in	count=1
function_name	un ||| mung server	count=1
namespace	posición actual y ||| splfileobject	count=1
function_name	entorno ||| setenv	count=1
function_name	palabras serán ignoradas ||| mlt	count=1
namespace	note que esta comparación ||| function	count=1
function_name	obtiene el valor por ||| get default value	count=1
function_name	sido creado ||| add types	count=1
function_name	número de filas en ||| sybase num rows	count=1
return	un fichero ordinario ||| resource	count=1
return	el resultado en ||| bool	count=3
function_name	obtiene el nombre de ||| name	count=2
function_name	obtiene el puerto del ||| context get	count=1
return	índice del array ||| int	count=1
rep	se [rest_2] ||| [namespace_1] [rest_2]	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $patch [arg_pair_2]	count=3
function_name	relevancia del térmido ||| mlt boost	count=1
function_name	carga un ||| add	count=1
function_name	obtiene información sobre ||| curl getinfo	count=1
arg_pair	de array1 que no ||| array $array2	count=1
function_name	encuentra disponible ||| ps open memory	count=1
function_name	la descripción de la ||| cairo ps surface	count=3
function_name	es usada [function_name] ||| id3 [function_name]	count=3
function_name	en por lo ||| set	count=1
arg_pair	certificado) basada en ||| array $extraattribs	count=1
function_name	obtiene una ||| openssl get	count=1
namespace	el tipo dado por ||| function	count=1
arg_pair	identificaron con ||| resource $connection string $client_identifier	count=1
function_name	colores de primer ||| ncurses	count=1
function_name	envío ||| odbc	count=1
arg_pair	cubrid_connect() ||| string $passwd bool $new_link	count=1
function_name	realiza una búsqueda en ||| search	count=1
function_name	post ||| post	count=1
function_name	blob en modo ||| blob	count=1
function_name	el número de i-nodo ||| inode	count=1
function_name	con bind_textdomain_codeset() se ||| bind textdomain codeset	count=1
function_name	devuelve el límite inferior ||| get	count=1
arg_pair	key corresponda a ||| string $key	count=1
return	estilo ||| bool	count=1
namespace	uno o ||| function	count=2
return	en activado ||| bool	count=1
arg_pair	reglas en bbcode_container creado ||| resource $bbcode_container	count=1
namespace	un archivo temporal ||| function	count=1
return	una característica conocia ||| mongocursor	count=1
function_name	las llaves foraneas de ||| foreign keys	count=1
arg_pair	sobre la ||| resource $ch	count=1
function_name	consigna ||| commit	count=1
function_name	máximo) ||| extrema	count=2
arg_pair	renombra/mueve ||| string $newrdn string $newparent	count=1
namespace	o ||| imagickkernel	count=1
function_name	como este ||| mlt min doc frequency	count=1
arg_pair	a b donde gcd ||| gmp $a gmp $b	count=1
return	nodo ||| bool	count=1
function_name	es infinito positivo o ||| is infinite	count=1
arg_pair	[arg_pair_1] un ||| [arg_pair_2] [arg_pair_1]	count=13
return	(1 ||| int	count=1
namespace	se le ||| mongocursor	count=1
function_name	descripción de la ||| cairo scaled font get font matrix	count=1
arg_pair	verificación mediante los datos ||| mixed $data	count=1
return	un fichero por lo ||| resource	count=1
function_name	lee ||| zip read	count=1
arg_pair	de una archivo ||| resource $filehandle	count=1
function_name	tantos documentos como ||| mlt	count=1
function_name	semáforo ||| sem	count=3
function_name	frontbase ||| fbsql data	count=1
arg_pair	bandera especificada por flag ||| int $options	count=1
arg_pair	samconnection conecta el script ||| string $protocol array $properties	count=1
namespace	parámetro espera ||| reflectionparameter	count=1
return	base de datos ||| int	count=1
arg_pair	por key corresponda ||| string $key	count=1
function_name	phar cuando ||| map phar	count=1
function_name	abierto mediante ||| proc get	count=1
return	la apariencia de la ||| bool	count=1
function_name	de entrenamiento en un ||| train	count=1
namespace	xml que ya ||| sdo_das_xml	count=1
namespace	los añadidos/eliminados hechos ||| solrclient	count=1
function_name	esquema en un das ||| add types	count=1
function_name	recorta ||| shave	count=1
function_name	crea ||| construct	count=4
function_name	del secundario ||| get	count=1
function_name	imagen [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	se comporta como mssql_connect() ||| mssql	count=1
arg_pair	para iterar ||| resource $stmt int $colnum	count=1
function_name	la función ps_stringwidth() excepto ||| ps string geometry	count=1
function_name	lo menos tantos documentos ||| set mlt min	count=1
function_name	varias ||| odbc data source	count=2
arg_pair	un número gmp a ||| gmp $gmpnumber	count=1
arg_pair	cuenta el ||| int $index_end	count=1
function_name	define() ||| typelib	count=1
function_name	se van ||| start	count=1
function_name	el número ||| msgno	count=1
function	[function_name_1] conexión ||| [function_name_1] resource $connection [arg_pair_2]	count=1
function_name	csr certificate ||| csr	count=1
return	devuelve un mensaje de ||| string	count=1
arg_pair	de una ||| float $gamma int $channel	count=1
function_name	de cliente por ||| client	count=1
function_name	tidy con la ||| tidy	count=1
return	mientras preserva ||| gmagick	count=1
function_name	acción con parámetros al ||| service proxy action	count=1
arg_pair	los datos de elemento ||| mixed $data	count=1
function	resida fuera [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	obtiene el factor ||| get	count=2
function	nueva [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	la uri del espacio ||| uri	count=1
function_name	borrar ||| win32 delete service	count=2
function_name	tie breaker parameter ||| tie breaker	count=1
return	el descriptor previamente ||| bool	count=1
arg_pair	que ||| resource $handle	count=2
function	[function_name_1] devuelve un ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	de un string ||| string $str	count=2
function_name	máxima sobre ||| max	count=1
namespace	los perfiles del ||| gmagickdraw	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] [function_name_2]	count=56
function_name	puntero interno a ||| data seek	count=1
function_name	[function_name_1] de ||| [function_name_1] [function_name_2]	count=1
arg_pair	rectangular ||| float $llx float $lly	count=1
function_name	devuelve el número ||| stmt param count	count=1
namespace	de el ||| splfileobject	count=1
function_name	coincide ningún píxel ||| match	count=1
function_name	emitir advertencias y devolver ||| exceptions	count=1
return	recupera ||| yaf_response_abstract	count=1
arg_pair	socket. -- zguide ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	previniendo incluso ||| dbplus xlockrel	count=1
arg_pair	cualquier ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	el acl para ||| imap getacl	count=1
function_name	se usa para poner ||| cubrid	count=1
function_name	el ancho ||| pdf stringwidth	count=1
function_name	la raíz ||| root	count=1
arg_pair	archivo de base de ||| string $filename array $options	count=1
function_name	blob/clob ||| lob	count=1
function_name	[function_name_1] nombre ||| [function_name_1] extension [function_name_2]	count=2
function_name	parámetros de solicitud ||| params	count=1
namespace	la versión plural de ||| function	count=1
function_name	de sesión ||| session	count=5
function_name	devuelve el tamaño ||| size	count=3
function	[function_name_1] data ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	nuevo gestor de erroresset_error_handler() ||| int $error_type	count=1
return	determina ||| bool	count=10
function_name	asignación de memoria compartida ||| apc sma	count=1
function_name	copyright de la api ||| getcopyright	count=1
arg_pair	a ||| resource $handle int $length	count=1
function_name	un error una ||| using exceptions	count=1
function_name	establece ||| fdf set ap	count=1
arg_pair	a la ruta corriente ||| float $ang1	count=1
function_name	similar a sybase_fetch_assoc() con ||| sybase fetch	count=1
return	mediante el uso ||| array	count=1
function_name	información sobre un proceso ||| proc get	count=1
return	los valores ||| void	count=1
arg_pair	asignado con imagecolorallocate() ||| resource $image int $color	count=1
arg_pair	llamada ||| callable $callback	count=1
function_name	la frecuencia bajo la ||| min term frequency	count=1
function_name	namespace ||| set end namespace	count=1
function_name	fgetss() ||| fgetss	count=1
function_name	de sisitema de archivos ||| stream wrapper	count=1
return	en ||| solrquery	count=2
return	de entrada/salida en ||| int	count=1
function_name	importe acrobat [function_name] los ||| fdf [function_name] doc	count=1
function_name	devuelve ||| chr	count=1
function_name	de espera ||| timeout	count=6
function_name	de alta prioridad para ||| task high	count=1
arg_pair	imágenes y ||| imagick $image	count=1
function_name	configuración magic_quotes_gpc ||| magic quotes gpc	count=1
function_name	casillas de verificación mediante ||| newt checkbox tree find	count=1
arg_pair	servidor imap o nntp ||| resource $imap_stream	count=1
function_name	byte en ||| get byte	count=1
function_name	un das ||| types	count=1
function_name	o false si es ||| mcrypt module is	count=1
function_name	factor [function_name_2] ||| [function_name_2] [function_name_1]	count=28
return	como ||| solrquery	count=1
arg_pair	inmediatemente después ||| int $options string $opened_path	count=1
function_name	la [function_name_2] ||| [function_name_1] ereg search [function_name_2]	count=2
function_name	[function_name_1] de filas ||| [function_name_2] [function_name_1]	count=1
function_name	entonces en lugar ||| exceptions	count=1
arg_pair	ordena números ||| string $charset	count=1
rest	un [function_2] ||| [function_2] [return_1]	count=3
function_name	[function_name] del servidor ||| get [function_name]	count=3
function_name	el token y ||| token	count=1
namespace	o del número ||| function	count=1
function_name	de la ||| set interlace scheme	count=1
function_name	funciones [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	cubrid cubrid ||| resource $conn_identifier	count=1
function_name	vincular el array de ||| bind array by	count=1
function_name	raíz ||| gupnp root device	count=1
function_name	[function_name_1] id es ||| [function_name_1] [function_name_2]	count=5
function_name	el espacio de ||| default namespace	count=1
arg_pair	fila en un bloque ||| resource $stmt int $row_number	count=1
function_name	mediante ||| proc get status	count=2
function_name	en por lo ||| set mlt min	count=1
function_name	número de i-nodo ||| inode	count=1
function_name	conexión ||| connect	count=10
function_name	añade un ||| add from	count=1
function_name	lista ||| ps open memory image	count=2
arg_pair	basdas [arg_pair] términos ||| [arg_pair]	count=1
function_name	el producto de ||| product	count=1
function_name	la lista ||| list	count=2
arg_pair	atributos al dn ||| resource $link_identifier string $dn	count=1
function_name	[function_name] de la ||| [function_name]	count=8
function_name	cada ||| uudecode	count=1
function	[function_name_1] método ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	r * x** r-1 ||| float $r	count=1
function_name	de reescritura establecidas ||| rewrite	count=1
function_name	[function_name_1] type ||| [function_name_2] [function_name_1]	count=2
function_name	el nivel mínimo ||| sybase min	count=1
return	plural ||| string	count=1
function_name	complemento [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	con la imagen ||| colorize image	count=1
function_name	de filas afectadas por ||| mysqli affected rows	count=1
return	array ||| void	count=1
function_name	disponible la lista ||| ps open memory	count=1
function_name	bibliotecas de oracle ||| oci	count=1
arg_pair	datos usando el oid ||| string $oid	count=1
function_name	fragmentación ||| set highlight regex pattern	count=2
function_name	actual fuente usada ||| current font	count=1
function	destino [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=2
function_name	del error de paso ||| step error	count=2
namespace	tar este método comprime ||| phardata	count=1
function	[function_name_1] campo solicitado ||| [function_name_1] $fdf_document [arg_pair_2] int	count=1
function_name	geoip_country_code_by_name() devolverá ||| country	count=1
function_name	número de colores únicos ||| colors	count=1
return	fichero de ||| void	count=1
arg_pair	a sybase_connect() ||| string $password	count=1
function_name	crea ||| pdf create	count=5
function_name	cursor utilizado ||| db2 cursor	count=1
function_name	un valor ||| set	count=1
return	inicio de ||| string	count=1
function_name	número de pendientes ||| steepnesses	count=1
arg_pair	un extremo de una ||| mixed $background	count=1
function_name	archivo dado y extrae ||| mailparse	count=1
function_name	recibe todas las cabeceras ||| request headers	count=1
function_name	palabra [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	menos tantos documentos como ||| set mlt	count=1
function_name	la extensión phar ||| valid phar filename	count=1
function_name	que [function_name] ser ||| [function_name] escape	count=1
function_name	para ||| kernel	count=1
arg_pair	e inicializa sus parámetros ||| int $from_neuron int $to_neuron	count=1
arg_pair	una fila específica de ||| int $row	count=1
return	convierte en ||| bool	count=1
return	direcciones ||| zmqsocket	count=1
arg_pair	gamma a image dada ||| float $inputgamma	count=1
function_name	campos columnas de la ||| numfields	count=1
namespace	de los perfiles del ||| gmagickdraw	count=1
function_name	una lista ||| broker list dicts	count=1
function_name	certificado proporcionado ||| openssl x509 read	count=1
arg_pair	función pretende usarse ||| string $file_extensions	count=1
function_name	la conexión de oracle ||| oci	count=1
function_name	fichero ||| eio	count=1
arg_pair	un valor de cadena ||| string $value	count=1
arg_pair	fijo de colores que ||| int $colorspace	count=2
namespace	indica si la ||| gearmantask	count=1
function_name	el ||| namespace	count=1
function_name	del ||| rise	count=1
function_name	emitir ||| using exceptions	count=2
function_name	que ambos puedan ||| add kernel	count=1
arg_pair	[arg_pair_1] [arg_pair_2] las operaciones de dibujo ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=2
function_name	geoip_domain_by_name() devolverá los ||| domain by	count=1
arg_pair	este es ||| mixed $xsd_file string $key	count=1
namespace	por la dirección de ||| function	count=1
namespace	las reglas usadas por ||| function	count=1
return	relleno en ||| bool	count=1
namespace	en un host/puerto o ||| function	count=1
function_name	coseno hiperbólico para cada ||| trader cosh	count=1
arg_pair	desde un array ||| array $array int $flags	count=1
function_name	[function_name_1] sentencia insert ||| [function_name_2] [function_name_1]	count=2
function_name	y extrae cada ||| mailparse	count=1
function_name	cubrid_lob2_new() u obtenido de ||| lob2	count=1
function_name	devuelve los ||| offset get	count=1
arg_pair	domain actual [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	devuelve la firma de ||| get	count=1
namespace	glifos que ||| function	count=1
return	los dispositivos de ømq ||| zmqsocket	count=1
return	fscanf() [return] similar a ||| [return]	count=1
function_name	el bit de entrelazamiento ||| imageinterlace	count=1
function_name	o información con ||| set info	count=1
function_name	usa ||| prob prime	count=2
return	trabajo y llama ||| bool	count=1
arg_pair	efectos de capa de ||| int $effect	count=1
return	base de ||| int	count=2
function_name	último índice ||| last	count=1
function_name	funcionalidad de color en ||| start color	count=1
arg_pair	directiva whence como sigue: ||| int $pri	count=1
function_name	[function_name_1] de clase ||| [function_name_2] [function_name_1]	count=1
function_name	aleatorias ||| stats rand	count=1
namespace	de memoria usada por ||| function	count=1
arg_pair	de mensaje y ||| zmqsocket $frontend	count=1
namespace	dado que ejecuta ||| function	count=1
function_name	fila recuperada ||| fetch	count=1
function_name	socket. -- zguide ||| construct	count=1
function_name	[function_name] fijo ||| crop [function_name]	count=2
namespace	previamente asignados con ||| oci-lob	count=1
function_name	devuelve el seno ||| sin	count=1
function	[function_name_1] asocia el ||| imagick bool new [function_name_1] [arg_pair_2]	count=1
namespace	serializada del conjunto ||| quickhashintset	count=1
arg_pair	pública asociada con pub_key_id ||| mixed $signature_alg	count=1
arg_pair	número ||| gmp $a	count=1
function_name	entrada para la primera ||| first	count=1
namespace	de internet especificado por ||| function	count=3
return	los nombres de ||| array	count=2
function_name	el mínimo ||| min	count=1
namespace	apuntador ||| function	count=1
namespace	por ejemplo el ||| function	count=1
function_name	por lo ||| min	count=1
arg_pair	parecida a ||| string $password	count=1
function_name	etiqueta dado ||| tag	count=1
function_name	almacena [function_name_2] ||| [function_name_2] from [function_name_1]	count=1
arg_pair	decir el valor de ||| int $face string $filename	count=1
function_name	de ||| function	count=1
function_name	de exception::__construct() ||| previous	count=2
function_name	que no ||| mlt min doc	count=1
function_name	functions ||| functions	count=1
function_name	advertencia esta ||| ps	count=1
function_name	printable ||| printable encode	count=2
arg_pair	que contiene una ||| string $file	count=1
function_name	esta función ||| data	count=1
function_name	logo ||| php logo	count=1
function_name	de cliente establecidas internamente ||| options	count=1
function_name	acción con parámetros ||| service proxy action	count=1
function_name	servicio y las ||| service	count=1
function_name	[function_name_1] la fila ||| [function_name_2] [function_name_1]	count=2
arg_pair	los datos en ||| int $linebreak array $callbacks	count=1
function_name	continente que corresponde al ||| continent code	count=1
function_name	separa ||| separateimagechannel	count=1
function_name	no-bloqueo ||| ftp nb	count=1
arg_pair	crea un efecto ||| int $x	count=1
function_name	uso ||| proc get	count=1
arg_pair	codificación de caracteres del ||| resource $fdf_document string $encoding	count=1
function_name	buferizado ||| buffer set callback	count=2
namespace	el búfer de salida ||| splfileobject	count=1
function_name	distribución [function_name] cuya ||| stats rand gen [function_name]	count=1
arg_pair	parecida a ||| string $password string $charset	count=1
arg_pair	diccionarios ||| resource $broker	count=1
function_name	de entidades ||| set external entity	count=1
namespace	o pasado ||| function	count=1
function_name	del canal de color ||| color	count=1
function_name	añade [function_name_2] ||| [function_name_1] [function_name_2]	count=9
arg_pair	de bytes pseudo-aleatorios ||| int $size bool $strong	count=1
function_name	máximo de [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	parámetros ||| add required	count=1
namespace	que contine la ||| memcached	count=1
function_name	recurso curl en ||| curl	count=1
function_name	ldap devuelta ||| ldap sort	count=1
function_name	función abre un blob ||| blob echo	count=1
function_name	a ||| add	count=3
namespace	establece la versión de ||| function	count=1
function_name	[function_name_1] perfil ||| [function_name_1] image [function_name_2]	count=1
arg_pair	el valor de ||| mixed $value	count=1
function_name	registros filas en ||| dbase numrecords	count=1
function_name	la extensión de ||| to extension	count=1
function_name	advertencias y ||| set using	count=1
namespace	una entrada definida ||| ziparchive	count=1
function_name	sybase_connect() con dos ||| sybase pconnect	count=1
namespace	propiedad dada por ||| function	count=1
arg_pair	de un servicio proxy ||| resource $proxy string $action	count=1
arg_pair	de mensaje y socket. ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	[function_name_1] de error ||| [function_name_1] train [function_name_2]	count=1
return	en el apuntador ||| bool	count=1
function_name	imprime texto ||| ps show xy	count=1
function	[function_name_1] fichero ||| [function_name_1] contents [arg_pair_2]	count=1
arg_pair	y socket. -- zguide ||| zmqsocket $backend	count=1
function_name	color directo desde ||| ps makespotcolor	count=1
arg_pair	usar mapreduce ||| array $pipeline	count=1
function_name	[function_name_1] para insertar ||| [function_name_1] [function_name_2]	count=1
function_name	base de datos postgresql ||| pg connect	count=1
function_name	filas en el ||| num rows	count=2
function_name	llena un array con ||| fill	count=1
arg_pair	inicio de un string ||| string $str	count=1
arg_pair	imagen ||| int $width	count=1
arg_pair	un servidor local ||| string $database_name	count=1
function_name	ubicaciones de ||| cert locations	count=1
function_name	devuelve la extensión de ||| extension	count=1
arg_pair	un ||| resource $grp	count=1
function_name	mínima a devolver ||| min	count=1
arg_pair	[arg_pair_1] servidor ftp ||| [arg_pair_2] [arg_pair_1] int $startpos	count=4
function_name	descripción de ||| cairo scaled font extents	count=1
arg_pair	proporcionado que ||| float $value	count=1
function_name	como cursores de seguimiento ||| tailable	count=1
namespace	o un ||| function	count=1
namespace	0 refiriénsose [namespace] no hay ||| [namespace]	count=1
function_name	sobre el uso ||| scache meminfo	count=1
function_name	guarda la [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] repos_url ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	un ||| resource $result string $name	count=1
function_name	el atributo llamado ||| attribute	count=1
namespace	incluida que se dejó ||| function	count=1
function_name	la descripción ||| cairo image surface get	count=1
function_name	prueba probabilística de ||| prime	count=1
function_name	la siguiente petición xpath ||| register xpath	count=1
arg_pair	la de memcached::cas() ||| float $cas_token	count=1
function_name	devuelve el nodo ||| get	count=1
function_name	su nombre y ||| name	count=1
function_name	de socket devuelto por ||| socket strerror	count=1
arg_pair	sobre las ||| zmqsocket $backend	count=1
function_name	máximo [function_name] ||| max num query [function_name]	count=3
arg_pair	permite enviar ||| string $additional_headers	count=1
namespace	conexiones [namespace] de ||| [namespace]	count=1
function_name	para el ||| enchant broker set	count=1
return	objeto ||| yaf_response_abstract	count=1
function_name	manejo de flags como ||| flags	count=1
function_name	próximo documento libxml ||| libxml	count=1
function_name	[function_name_1] de imágenes ||| [function_name_1] [function_name_2]	count=1
arg_pair	para la mayoría de ||| string $connection_string string $character_set	count=1
function_name	multi-dimensional con [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	xml desde [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	obtiene información sobre ||| resource $ch	count=1
arg_pair	dado por ||| resource $imap_stream	count=1
function_name	[function_name_1] pulse una ||| [function_name_2] [function_name_1]	count=3
function_name	cada archivo ||| uudecode all	count=1
function_name	objeto textflow ||| create textflow	count=1
function_name	obtiene el ascenso vertical ||| get ascent	count=1
function_name	un repositorio indicado en ||| svn cat	count=1
arg_pair	de botón tridimensional simulado ||| int $y	count=1
function_name	método se ||| await	count=1
namespace	excepto por la dirección ||| function	count=1
function_name	dispositivos de ||| construct	count=1
arg_pair	información del ||| int $schema_type string $table_name	count=1
function_name	en cascada es ||| cascade	count=2
arg_pair	configura un ||| resource $parser callable $handler	count=1
function_name	rojo de ||| image red	count=1
function_name	un número es ||| gmp	count=1
arg_pair	se comporta ||| string $servername string $username	count=1
function_name	un número ||| prob prime	count=1
return	enteros en el array ||| array	count=1
arg_pair	estar disponibles ||| string $str	count=1
function_name	unrar encuentre un error ||| set	count=1
return	documentos como ||| solrquery	count=1
function_name	seridor asociado ||| msql select db	count=1
namespace	la variable que se ||| function	count=1
function	[function_name_1] la columna ||| [function_name_1] resource $stmt [arg_pair_2]	count=2
function_name	disposición de ||| dispose	count=2
function_name	este ||| add kernel	count=2
namespace	los ||| splfixedarray	count=1
namespace	hash y devuelve ||| quickhashintstringhash	count=1
function_name	de línea [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	a memcache::connect() ||| int $port	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] candidate stagnation [function_name_2]	count=15
function_name	un [function_name] o una ||| [function_name] is	count=1
function_name	establecer los ||| color set	count=1
arg_pair	desde in_charset a out_charset ||| string $out_charset	count=1
namespace	llamada a imap_alerts() ||| function	count=1
namespace	los ||| arrayiterator	count=1
function_name	el ||| entry filesize	count=2
arg_pair	la ||| int $filter float $blur	count=1
function_name	las ||| callback array	count=1
return	base de las ||| int	count=1
function_name	[function_name_1] un ||| [function_name_1] [function_name_2]	count=1
function_name	especificado donde [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	seguimiento tailable que ||| mongocursor	count=1
arg_pair	colas o cualquier abstracción ||| zmqsocket $backend	count=1
function_name	[function_name] similar al ||| solarize [function_name]	count=3
function_name	importa las [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	un ||| gmp $a	count=1
function_name	unicode propertyvaluealiases.txt ||| value enum	count=1
function_name	entrenamiento en un ||| train	count=1
function_name	devuelve el estado ||| get state variable	count=1
function_name	escapa un string ||| escape	count=1
function_name	exe de ||| load exe	count=1
function_name	de ||| prime	count=1
arg_pair	una nueva ||| string $key int $value	count=1
function_name	tiempo de espera ||| cubrid set query timeout	count=1
function_name	o textura de ||| polygon	count=1
function_name	si un número es ||| gmp prob	count=1
return	a este color ||| int	count=1
function_name	se vieron afectadas ||| ibase affected	count=1
function_name	mínima a ||| min count	count=1
function_name	que ||| by key	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] value enum [arg_pair_2]	count=27
function_name	instalación actual de php ||| imagetypes	count=1
arg_pair	parámetro ||| string $str	count=1
arg_pair	al objetivo target existente ||| string $target	count=1
function_name	información de ||| pdf info	count=2
function_name	y extrae cada ||| mailparse uudecode all	count=1
function_name	ldap devuelta por ldap_search() ||| ldap	count=1
function_name	el almaceén de sesiones ||| reset	count=1
function_name	prueba probabilística ||| gmp prob	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cascade candidate [function_name_2]	count=2
function_name	elimina una variable con ||| shm remove var	count=1
function_name	vacío ||| add empty	count=1
return	count() sobre [return] objeto que ||| [return]	count=1
return	componente entero y el ||| array	count=1
function_name	es el ||| is default namespace	count=1
function_name	punto blanco ||| image white point	count=2
return	buscarán ||| string	count=1
function_name	[function_name_1] atributo ||| [function_name_1] [function_name_2]	count=13
return	espacio de ||| bool	count=1
function_name	máxima de una línea ||| line	count=1
function_name	argumento es ||| set using	count=1
namespace	devuelve el tamaño ||| function	count=1
function_name	hace un diff ||| xdiff file diff	count=1
return	disponible la lista ||| int	count=1
function_name	de la propiedad para ||| property	count=1
arg_pair	su ||| string $name	count=1
function_name	último ||| error	count=1
function_name	id del objeto char ||| ifx free char	count=1
function_name	interfaz a gettimeofday 2 ||| gettimeofday	count=1
arg_pair	permite enviar ||| string $message	count=1
namespace	devuelve microtime() ||| mongodate	count=1
function_name	petición http en ||| request	count=1
function_name	corto ||| get frame short	count=1
function_name	otros caracteres del inicio ||| ltrim	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] last request [function_name_2]	count=1
function_name	alternativa más próxima ||| imagecolorresolve	count=1
function_name	bosquejo de un lapiz ||| sketch image	count=1
function_name	el identificador del cliente ||| client	count=1
return	está en ejecución ||| bool	count=1
function_name	un das xml que ||| add types	count=1
namespace	este ||| mongocursor	count=2
function_name	tantos ||| min doc frequency	count=2
function_name	servicio [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	última operación curl ||| curl	count=1
arg_pair	asocia ||| int $rows	count=1
arg_pair	la clave /status ||| string $status	count=1
function_name	o subsiguiente fichero ||| add types	count=1
function_name	frase de consulta ||| use phrase	count=2
arg_pair	comandos de listas desordenadas ||| string $achtung_wild string $par1	count=1
function_name	devuelve un valor entero ||| get	count=1
function_name	un valor especial ||| exceptions	count=1
arg_pair	mismo para poder utilizarlo ||| string $separator	count=1
namespace	de la variable php ||| function	count=1
function_name	infinito positivo ||| infinite	count=1
arg_pair	espacio asociado ||| string $qualifiedname	count=1
function_name	de dsn ||| data	count=1
function_name	guid binario ||| guid	count=1
function_name	de sisitema de archivos ||| stream wrapper register	count=1
function_name	devuelve la ||| get	count=17
function_name	un ||| add	count=2
return	con oci_new_descriptor() ||| bool	count=1
function_name	[function_name_1] un array ||| [function_name_1] [function_name_2]	count=1
function_name	elimina una ||| shm remove var	count=1
function_name	error fdf de ||| fdf error	count=1
namespace	color que tiene el ||| function	count=1
arg_pair	de éxito cero ||| string $zurl mixed $options	count=1
return	con el número de ||| string	count=1
function_name	frecuencia bajo la ||| term frequency	count=1
arg_pair	lectura mediante ibase_blob_open() ||| resource $blob_handle	count=1
function_name	[function_name_1] último ||| [function_name_2] [function_name_1]	count=1
function_name	es parte ||| is	count=1
function_name	einer mime ||| mime	count=1
namespace	iterador hasta el primer ||| apciterator	count=1
function_name	las flags a ||| flags	count=1
function_name	contiene el carácter especificado ||| chr	count=1
arg_pair	desde buf a ||| resource $socket string $buf	count=1
arg_pair	la función va aquí ||| cairosurface $surface int $content	count=1
arg_pair	no está conectada completamente ||| int $num_neurons1 int $num_neurons2	count=1
function_name	global rrd ||| rrd	count=1
function_name	clase solicitada clase glo ||| new glo	count=1
function_name	dio_read() [function_name_2] ||| [function_name_1] [function_name_2] resource $fd	count=1
function_name	establece el punto ||| set	count=1
function_name	número es ||| prime	count=1
function_name	punto primario ||| primary	count=5
arg_pair	función va aquí ||| cairogradientpattern $pattern float $offset	count=1
arg_pair	tupla de relation ||| resource $relation	count=1
function_name	[function_name_1] implementa ||| [function_name_2] [function_name_1]	count=2
function_name	cadena de respuesta ||| response	count=1
function_name	por utf-8 a iso-8859-1 ||| utf8 decode	count=1
function_name	guardar la [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un objeto de cualquier ||| object	count=1
function_name	de indices ||| udiff assoc	count=1
return	antes de los ||| string	count=1
function	logaritmo natural [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	se ||| resource	count=1
function	prioridad [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	asignados con oci_new_descriptor() ||| bool	count=1
arg_pair	archivos en ||| string $old_file	count=1
return	das xml que ya ||| void	count=1
arg_pair	botón tridimensional simulado ||| int $width int $height	count=1
arg_pair	de una imagen tiff ||| string $filename	count=1
function_name	descripción ||| cairo pattern get rgba	count=1
function_name	establece ||| set mlt min	count=1
function_name	usa la prueba probabilística ||| gmp prob prime	count=1
function_name	devuelve la precisión de ||| precision	count=2
function_name	crea una copia ||| clone	count=2
function	[function_name_1] la codificación ||| [arg_pair_2] [function_name_1]	count=2
return	valor predeterminado ||| void	count=1
function_name	[function_name_1] color ||| [function_name_1] image background [function_name_2]	count=1
function_name	el resultado ||| xdiff file patch binary	count=1
function_name	antepone el string ||| prepend	count=1
function_name	[function_name_1] [function_name_2] local buscado ||| [function_name_2] [function_name_1]	count=7
namespace	tantos ||| solrquery	count=1
function_name	relevancia del térmido de ||| mlt boost	count=1
function_name	establece el parámetro de ||| set	count=1
arg_pair	de ruta ||| string $path	count=1
function_name	procesamiento ||| progress monitor	count=2
function_name	sql en ||| exec	count=1
function_name	devuelve la porción ||| strrchr	count=1
namespace	obtiene el ||| gmagick	count=1
arg_pair	a fgets() excepto ||| resource $handle int $length	count=1
function_name	extensiones ||| extensions	count=1
function_name	de instrucciones de proceso ||| processing instruction	count=1
function_name	devuelve un ||| ms get	count=1
function_name	odbc ||| odbc	count=1
function_name	ps_stringwidth() excepto que devuelve ||| geometry	count=1
arg_pair	la función callback ||| mixed $arg	count=1
function_name	vincula el ||| bind	count=1
function_name	archivo phar [function_name] ||| is [function_name]	count=1
function_name	intersección de ||| uintersect	count=2
arg_pair	fila en ||| int $row_number	count=1
function_name	de escritura del codificador ||| get writing	count=1
function_name	si ellas ||| is	count=1
function_name	cierra el ||| closedict	count=1
arg_pair	de n por ||| gmp $n	count=1
namespace	basado ||| function	count=1
function_name	los encabezados a enviar ||| headers	count=1
arg_pair	lotes ||| array $batch	count=1
function_name	[function_name_1] la línea ||| [function_name_2] [function_name_1]	count=1
function_name	entrada [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	método devuelve [function_name_2] ||| [function_name_1] phar [function_name_2]	count=2
arg_pair	ruta en ||| string $path	count=1
arg_pair	[arg_pair_1] por mailbox ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	una diferencia binaria ||| file bdiff	count=1
function_name	una excepción no es ||| exception handler	count=1
return	de blob en todas ||| bool	count=1
function_name	el modo ||| mode	count=7
function	[function_name_1] de str ||| [arg_pair_2] [function_name_1]	count=1
function_name	tipo de dato bytea ||| bytea	count=1
function_name	iterador que es usado ||| set iterator	count=1
namespace	argumento es true ||| rarexception	count=1
function_name	dibuja una línea en ||| line	count=1
function_name	la codificación de caracteres ||| detect encoding	count=1
return	documentos como este ||| solrquery	count=1
function_name	la frecuencia en ||| set mlt min	count=1
return	utilizada para ||| string	count=1
function_name	tipo ||| field type	count=1
function_name	sybase_fetch_assoc() ||| sybase fetch object	count=1
function_name	de consulta ||| cubrid get query	count=1
arg_pair	con la key existe ||| string $key int $flags	count=1
function_name	añade definición [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	llamarla ||| array	count=1
namespace	por encima ||| function	count=1
arg_pair	imágenes y devuelve ||| imagick $image	count=1
function	campos en [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=2
function_name	creado con ||| types	count=1
function_name	de cliente ||| client	count=1
function_name	llamar ||| callback	count=1
function_name	establece el [function_name_2] ||| [function_name_1] candidate stagnation [function_name_2]	count=2
function_name	función glob() ||| glob	count=1
arg_pair	correspondientes ||| int $row	count=1
return	función devolverá ||| array	count=1
return	a ||| void	count=2
namespace	el ||| imagick	count=1
function_name	[function_name_1] el color ||| [function_name_1] [function_name_2]	count=1
function_name	un [function_name] o ||| [function_name] is	count=1
function_name	con ||| add types	count=2
function_name	nodo del atributo ||| attribute	count=1
return	los parámetros de la ||| array	count=1
arg_pair	en formato csv ||| string $delimiter string $enclosure	count=1
function_name	convierte ||| gmp strval	count=1
function_name	en disco ||| file	count=1
namespace	de dsn disponibles ||| function	count=1
function_name	de la página ||| page	count=1
arg_pair	de dsn disponibles después ||| resource $connection_id	count=1
function_name	acción con ||| action	count=1
function_name	[function_name_1] para ||| [function_name_2] [function_name_1]	count=64
function_name	objeto ||| get	count=1
function_name	los datos especificados ||| dba fetch	count=1
function_name	callback [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	especifica el número máximo ||| set highlight max	count=1
function_name	un array ||| array	count=4
function_name	con los índices predeterminados ||| rcrtlike	count=1
namespace	los glifos que están ||| function	count=1
arg_pair	cualesquiera ||| int $length	count=1
arg_pair	string dado por value ||| string $value	count=1
function_name	devuelve el último ||| broker get	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=4
return	conjunto ||| sqlite3result	count=1
function_name	estructura de ||| fetchstructure	count=1
namespace	de la ||| harufont	count=3
return	esta ||| int	count=1
arg_pair	rectangular ||| float $lly float $urx	count=1
function_name	[function_name_1] categoría de ||| [function_name_1] [function_name_2]	count=1
return	deshabilitará el ||| void	count=1
return	que especifica la ||| string	count=1
function_name	límite de ||| limit	count=1
function_name	de un blob que ||| ibase blob	count=1
arg_pair	la ruta en ||| string $path bool $recursive	count=1
arg_pair	texto ||| string $text int $index	count=1
function_name	actual usado para guardar ||| save	count=1
function_name	la descripción de ||| cairo ps surface create	count=1
namespace	entrada definida ||| ziparchive	count=3
arg_pair	excepto que fgetss() intenta ||| int $length	count=1
arg_pair	xml dump ||| string $rrd_file	count=1
function_name	la ||| using exceptions	count=2
function_name	plano ||| ncurses color	count=1
arg_pair	función cubrid_put() se ||| mixed $value	count=1
arg_pair	bits en dos variantes ||| mixed $left mixed $right	count=1
function_name	de forma parecida ||| sybase	count=1
function_name	este ||| kernel	count=1
function_name	se comporta ||| sybase	count=1
function_name	[function_name_1] [function_name_2] de php desde el ||| [function_name_1] [function_name_2]	count=2
function_name	de datos abierta filepro ||| filepro rowcount	count=1
function_name	insertada o ||| insert	count=1
return	objetivo y esté en ||| bool	count=1
arg_pair	la de memcached::cas() con ||| float $cas_token	count=1
return	das ||| void	count=1
function_name	multi-dimensional [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	cambio ||| change fraction	count=1
namespace	procesa línea por ||| function	count=1
function_name	diccionario indicado mediante el ||| crack	count=1
function_name	formato idna ascii-compatible ||| idn to ascii	count=1
function_name	del valor ||| get	count=1
function_name	el trazado ||| closepath	count=1
function_name	raíz cuadrada de un ||| sqrtrem	count=1
arg_pair	[arg_pair_1] desde str ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	ocurrencia de ||| string $haystack	count=2
arg_pair	una imagen ||| resource $pdfdoc string $filename	count=1
function_name	un archivo ||| uudecode	count=1
arg_pair	petición actual indicando ||| string $details	count=1
return	progreso en la ||| bool	count=1
function_name	[function_name_1] objeto blob ||| [function_name_2] [function_name_1]	count=1
function_name	conexión necesario para ||| connect	count=1
function_name	de sus madres ||| a	count=1
arg_pair	primera ocurrencia de needle ||| string $needle	count=1
function_name	del índice anterior ||| prev	count=1
return	una ||| array	count=2
arg_pair	una imagen en ||| gmagick $source int $compose	count=1
namespace	ha ||| mongocursor	count=1
namespace	o mediante ||| function	count=2
function_name	insertada o el ||| insert	count=1
function	casillas de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	devuelve la información ||| get	count=1
arg_pair	la ||| mysqlnd_connection $connection	count=1
arg_pair	con un algoritmo de ||| float $beta	count=1
function_name	las [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	devuelve ||| msg get	count=1
function_name	solicitud site exec ||| exec	count=1
namespace	servidor que ||| function	count=1
function	[function_name_1] método y ||| [function_name_1] [arg_pair_2]	count=2
namespace	cuando se anota texto ||| gmagickdraw	count=3
arg_pair	por variable_key y libera ||| resource $shm_identifier int $variable_key	count=1
arg_pair	es similar a memcache::connect() ||| int $port	count=1
arg_pair	de un ||| resource $imap_stream	count=1
function_name	dsn disponibles después ||| data source	count=1
function_name	para los eventos especificados ||| set	count=1
function_name	número máximo ||| max analyzed	count=1
function_name	[function_name_1] la ||| [function_name_1] [function_name_2]	count=1
function_name	devuelve los nombres de ||| apd get	count=1
function_name	[function_name_1] modo ||| [function_name_1] block algorithm [function_name_2]	count=3
function_name	estar disponibles en el ||| crypt	count=1
return	un efecto ||| void	count=1
function_name	imagen ||| set	count=1
return	puntero ||| string	count=1
return	función va aquí ||| cairopattern	count=4
function_name	escala de ||| scale	count=3
arg_pair	de bytes str ||| string $str string $charset	count=1
arg_pair	selecciona un ||| resource $fdf_document string $url	count=1
arg_pair	de una tabla ||| string $table-name	count=1
function_name	representación binaria ||| decbin	count=1
function_name	[function_name_1] estadísticas del ||| [function_name_1] [function_name_2]	count=2
namespace	a la ruta actual ||| harupage	count=1
arg_pair	entrecomilla el string ||| string $string int $parameter_type	count=1
return	conjunto con la peticiones ||| void	count=1
function_name	encuentra disponible la ||| image	count=1
function_name	cyrus imap ||| cyrus	count=1
function	única fila [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	devuelve una lista de ||| broker list	count=1
function_name	error dado ||| curl strerror	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| object [arg_pair_1] string $class_name [arg_pair_2]	count=7
function_name	escala a ||| scale	count=1
function_name	para las ||| set	count=1
function_name	fue subido mediante el ||| uploaded	count=1
function_name	el error cuadrático medio ||| mse	count=1
function_name	tipos de parámetros de ||| params	count=1
function_name	actualiza el contenido de ||| ifx update	count=1
function_name	de error sqlstate de ||| sqlstate	count=1
namespace	de filas ||| solrquery	count=1
arg_pair	una nueva ||| string $text	count=1
function	pdf usando [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	devuelve la ruta ||| get temp	count=1
function_name	que describe el código ||| result message	count=1
function_name	le permite al entrenamiento ||| fann get cascade output	count=1
function_name	dado y extrae ||| uudecode all	count=1
function	comprueba si [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	de datos paradox que ||| px	count=1
arg_pair	de espacio asociado ||| string $qualifiedname	count=1
function_name	establece la [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=1
function_name	la página asociada ||| page	count=1
arg_pair	el nombre distinguido que ||| array $dn resource $privkey	count=1
function_name	computa el inverso ||| invert	count=1
function_name	mime kopfzeile en ||| mime encode	count=1
function_name	descripción de la ||| cairo pattern get color	count=1
function_name	documento [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	dirección ||| geoip record by	count=1
function	[function_name_1] y ||| [function_name_1] conf [arg_pair_2]	count=1
arg_pair	cubrid_set_query_timeout() ||| int $timeout	count=1
function_name	extensión ||| extension	count=6
function_name	para almacenar información ||| set	count=1
function_name	copia ||| copy to	count=1
return	phar basados en ||| bool	count=1
function_name	de registros en un ||| px numrecords	count=1
function_name	número de filas eliminadas ||| num rows	count=1
function_name	carácter de dígito ||| isdigit	count=1
namespace	la ||| sqlite3	count=2
namespace	el fichero o ||| function	count=1
function_name	elipse en la ||| ellipse	count=1
function_name	archivo tar/zip [function_name] ||| is [function_name]	count=3
function_name	control con un ||| gupnp control	count=1
return	un proceso ||| array	count=1
function_name	[function_name_1] el tamaño ||| [function_name_2] [function_name_1]	count=3
function_name	escala las entradas ||| scale input	count=1
arg_pair	signed_text y ||| resource $identifier string $signed_text	count=1
function_name	en la que ||| mlt	count=1
function_name	lista de ||| open memory image	count=1
function_name	en segundo plano ||| background	count=2
namespace	de las letras ||| harufont	count=1
arg_pair	tabla de una ||| resource $pxdoc	count=1
function_name	logo ||| logo guid	count=1
function_name	conjunto de ||| charset	count=1
function_name	describe ||| message	count=1
function_name	nombre abreviado de ||| short name	count=1
function_name	obtiene la clave ||| key	count=1
function_name	[function_name_1] [function_name_2] atributo si se encuentra ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] el nombre ||| [function_name_1] property [function_name_2]	count=1
function_name	retropropagación ||| create	count=1
function_name	la función ||| gmp	count=1
function_name	tantos documentos como este ||| doc	count=1
function_name	convierte un guid binario ||| mssql guid string	count=1
function_name	[function_name_1] del campo ||| [function_name_1] alternate [function_name_2]	count=4
function_name	y enviarla a ||| send	count=1
return	domnodelist ||| domnodelist	count=1
arg_pair	filtros adjuntos a ||| mixed $params	count=2
function_name	un área de recorte ||| ps clip	count=1
function_name	salida como echo ||| runkit sandbox output	count=1
function_name	severidad [function_name_2] ||| [function_name_2] server [function_name_1]	count=2
function_name	obtener el [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	que coincida con ||| float $fuzz	count=1
namespace	hash existente ||| quickhashinthash	count=1
function_name	lista ||| source	count=1
arg_pair	entrecomilla el string de ||| string $string int $parameter_type	count=1
function_name	documento ||| get document	count=1
function_name	archivo pdf usando ||| pdf open	count=1
return	función va aquí ||| cairosvgsurface	count=1
function_name	esta función reinicializa a ||| reset	count=1
function_name	se defina ||| construct	count=1
namespace	que todos los resultados ||| function	count=1
return	comprueba ||| bool	count=11
function_name	el espacio de ||| space	count=1
function_name	corto ||| id3 get frame short	count=1
rep	que se [rest_2] ||| [namespace_1] [rest_2]	count=2
function_name	de consulta codificada ||| http build query	count=1
function_name	una característica conocia como ||| tailable	count=1
function_name	si ||| is default	count=1
return	la api graphicsmagick como ||| string	count=1
arg_pair	len bytes de ||| int $len int $flags	count=1
arg_pair	delimiter como delimitador ||| string $delimiter string $null_as	count=1
function_name	cada uno de ellos ||| map	count=1
arg_pair	al campo solicitado ||| string $fieldname	count=1
function_name	campo para ||| field	count=1
function_name	mediante el uso de ||| proc	count=1
function_name	recupera ||| get status	count=2
arg_pair	intérprete ||| callable $handler	count=4
function_name	[function_name_1] definición rra ||| [function_name_1] [function_name_2]	count=1
function_name	un guid ||| mssql guid string	count=1
function_name	localización ||| filepro retrieve	count=1
function_name	ruido granular de una ||| despeckleimage	count=1
function	[function_name_1] a b ||| [function_name_1] [arg_pair_2]	count=1
function_name	la siguiente fila de ||| oci fetch	count=1
arg_pair	una consulta ||| string $query	count=2
namespace	especificado por ||| function	count=9
function	[function_name_1] con key ||| [arg_pair_2] [function_name_1]	count=5
function_name	serán ||| mlt	count=4
function_name	estadísticas del servidor ||| stats	count=1
arg_pair	dibuja [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
namespace	imagen con el color ||| gmagick	count=1
function_name	si ellas lanzarán ||| is	count=1
function_name	glo ||| save to glo	count=1
function_name	ser ordenados por valor ||| sort	count=2
function_name	lee los ||| uudecode	count=1
arg_pair	conexión actual ||| resource $link_identifier	count=1
function_name	de parámetros ||| open memory	count=1
namespace	clave dada por ||| function	count=1
function_name	servidor virtual de ||| server by	count=1
function_name	breaker ||| set	count=1
arg_pair	el domain por gettext() ||| string $domain	count=1
function_name	texto que lee ||| fgetss	count=1
return	resultados en ||| bool	count=1
function_name	mediante ||| closedict	count=1
function_name	muestreo o tasa de ||| sample bitrate	count=1
arg_pair	que fgetss() intenta eliminar ||| resource $handle int $length	count=1
arg_pair	de secuencia de mensaje ||| resource $imap_stream	count=1
arg_pair	si el parámetro old ||| string $key int $old	count=1
function_name	la excepción indicada cuando ||| exception	count=2
function_name	imagen con una imagen ||| image	count=2
function_name	o si [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de campos a ||| add field	count=1
function_name	datos paradox que ||| px	count=1
function_name	los pares de sustitución ||| pspell config save repl	count=1
namespace	fgets() ||| function	count=1
function_name	punto primario rojo de ||| red primary	count=2
function_name	múltiples recursos curl de ||| curl multi	count=1
function_name	al ||| count	count=1
function_name	imagen obtenida ||| imagecreatefromxbm	count=1
arg_pair	image dada una ||| float $inputgamma	count=1
function_name	id dado ||| by id	count=1
function_name	para el calendario juliano ||| juliantojd	count=1
function_name	[function_name] generado por ||| mysqli insert [function_name]	count=2
function_name	de reescritura establecidas previamente ||| reset rewrite vars	count=1
namespace	la ruta actual ||| harupage	count=3
return	en lugar de emitir ||| void	count=1
function_name	la estructura de un ||| fetchstructure	count=1
return	todos los ||| array	count=7
return	modificar los límites de ||| bool	count=1
function_name	error ||| set	count=2
function_name	si el argumento ||| set	count=1
return	clase domnodelist con ||| domnodelist	count=1
arg_pair	éxito cero en ||| string $zurl	count=1
arg_pair	crea ||| int $x int $y	count=1
function_name	especificado donde ||| by	count=1
function_name	indicando error cuando la ||| set	count=1
arg_pair	desde el string ||| string $content	count=1
return	la sesión en la ||| bool	count=1
namespace	si el puntero interno ||| oci-lob	count=1
function_name	en blanco del tamaño ||| imagecreate	count=1
function_name	establece el ||| set cascade	count=4
namespace	obtiene ||| function	count=3
function_name	alguna forma ||| get modified	count=1
namespace	píxeles cifrados ||| imagick	count=1
function_name	devuelve el entero del ||| get	count=1
arg_pair	las capas de ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	el ecm ||| get cascade output stagnation	count=1
function_name	caracteres del campo ||| field length	count=2
function_name	de ||| set	count=39
function_name	nombre de ||| field name	count=1
function_name	obtiene ||| get request	count=1
arg_pair	un efecto ||| int $height	count=1
namespace	de puntos por ||| function	count=1
namespace	del color que tiene ||| function	count=1
function_name	cambia parámetros ||| params	count=1
function_name	columnas del conjunto ||| cubrid	count=1
function_name	la porción ||| strrchr	count=1
arg_pair	texto ||| int $index	count=1
arg_pair	a un ||| resource $p	count=1
function_name	tendencias ||| fann get bias array	count=1
function_name	ha sido ||| add	count=1
function_name	definidos por ||| remap	count=1
function_name	rutina de interoperabilidad ||| set default stub	count=1
function_name	el directorio de ldap ||| ldap add	count=1
arg_pair	leer un directorio ||| string $path	count=1
return	en mode ||| bool	count=1
function_name	los ciclos de ||| gc collect cycles	count=1
namespace	devuelve un ||| function	count=2
function_name	personalizado de la base ||| setup custom directory	count=1
function_name	clases [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	como un string y ||| array	count=1
function_name	ver si ||| ping	count=1
function_name	el estado actualizado ||| status	count=1
function_name	devolverá el nombre del ||| by name	count=1
arg_pair	que coincida con el ||| mixed $fill float $fuzz	count=1
function_name	durante un entrenamiento ||| fann	count=1
arg_pair	offset especificado ||| int $offset	count=1
function_name	el ascenso vertical de ||| ascent	count=1
arg_pair	añade un elemento ||| string $name string $value	count=1
return	del texto ||| string	count=1
function_name	las ||| mlt min doc	count=1
function_name	su nodename ||| named	count=1
function_name	tiene su crc verificada ||| crcchecked	count=1
return	este ||| void	count=1
return	de datos ||| int	count=1
arg_pair	un caracter de salto ||| string $break	count=1
arg_pair	caracteres del inicio ||| string $str	count=1
function_name	con el tipo ||| pdf	count=1
arg_pair	direcciones servicios colas o ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	indicando que ||| string $actor	count=1
function_name	lo menos ||| doc	count=1
function_name	false cuando se ||| cubrid	count=1
function_name	convierten en ||| array flip	count=1
function_name	afectadas por la ||| fbsql affected	count=1
return	en lugar de ||| void	count=1
function_name	entonces en lugar de ||| set using	count=1
function_name	un diff unificado que ||| xdiff file diff	count=1
arg_pair	domain por gettext() y ||| string $codeset	count=1
arg_pair	el estilo numérico ||| int $style	count=1
function_name	patrones de entrenamiento ||| fann length	count=1
return	ha consultado se ||| int	count=1
function_name	[function_name_1] peso ||| [function_name_2] [function_name_1]	count=2
function_name	la extensión iconv ||| iconv get encoding	count=1
return	un trabajo ||| bool	count=1
function_name	o zip desde ||| from	count=1
function_name	el estado ||| status	count=2
return	cierra el diccionario ||| bool	count=1
function_name	esquema de codificación ||| mb	count=1
function_name	primera entrada en ||| ldap first entry	count=1
function_name	función usa la prueba ||| prob prime	count=1
function_name	oauth ||| oauth	count=1
function_name	salida como ||| runkit sandbox output	count=1
function_name	la frecuencia en ||| set	count=1
arg_pair	una definición ||| string $contents	count=1
function_name	xml dada ||| load string	count=1
return	como este serán ||| solrquery	count=1
function_name	ningún tipo ||| filename	count=1
function_name	el nombre [function_name_2] ||| elements [function_name_2] [function_name_1]	count=1
arg_pair	la función usa la ||| gmp $a	count=1
arg_pair	mensaje del archivo ||| resource $mimemail mixed $filename	count=1
function_name	el nombre ||| get name	count=1
function_name	posiciona el ||| move to	count=2
function_name	y ||| uudecode	count=1
namespace	que va hasta ||| function	count=1
function_name	por la [function_name] función ||| posix [function_name]	count=1
return	existe [return] ||| [return]	count=1
function	parte coincidente [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	función de ||| add kernel	count=1
function_name	es un id definido ||| id	count=1
function_name	array mantienen ||| arsort	count=1
return	[return] tar este ||| [return]	count=3
return	una secuencia ||| string	count=1
function_name	directorio vacío con la ||| add empty dir	count=1
function_name	documentos ||| set mlt min doc	count=1
function_name	yaml de data proporcionada ||| yaml emit	count=1
arg_pair	los ||| zmqsocket $backend	count=1
arg_pair	-- zguide ||| zmqsocket $backend	count=1
arg_pair	pajar incluyendo ||| string $haystack string $needle	count=1
function_name	de monitorizar ||| monitor	count=1
function_name	versión plural de ||| ngettext	count=1
namespace	unicode uax ||| intlchar	count=1
function_name	imagen para ocupar ||| image	count=1
namespace	advertencias ||| rarexception	count=1
function_name	considerara [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la descripción de la ||| cairo matrix multiply	count=1
function_name	metainformación ||| has metadata	count=1
arg_pair	las restricciones ||| int $facetsort	count=1
arg_pair	el archivo dado ||| string $filename	count=1
arg_pair	ancho ||| int $width	count=1
arg_pair	/status ||| string $status	count=1
function_name	entonces ||| set using	count=1
arg_pair	reabre el ||| int $n_retries	count=1
function_name	una imagen izquierda ||| image	count=1
function_name	lo grande que podría ||| fann get	count=1
arg_pair	un archivo de ||| string $sections	count=1
return	por lo ||| solrquery	count=1
arg_pair	oid de la instancia ||| resource $conn_identifier string $oid	count=1
function_name	entonces ||| exceptions	count=1
arg_pair	más imágenes y devuelve ||| imagick $image int $channeltype	count=1
function_name	información sobre ||| proc get	count=1
rest	[return_1] información útil ||| [function_2] [return_1]	count=1
function_name	nombres especificado ||| namespace	count=1
arg_pair	si el parámetro stack ||| string $offset	count=1
function_name	usuario presiona ||| suspend	count=1
arg_pair	interno de dicho ||| integer $type	count=1
function_name	formateador de ||| highlight formatter	count=1
function_name	sybase ||| sybase	count=1
function_name	el tamaño ||| size	count=22
function_name	donde [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	actual de una ||| function	count=1
function_name	actual donde se ||| dbplus chdir	count=1
function_name	modo ||| parse mode	count=1
arg_pair	de un campo ||| resource $fdf_document string $field_name	count=1
function_name	de bits ||| bits	count=1
function_name	de memcached::touch() con ||| touch by key	count=1
function_name	de bcompiler y crea ||| bcompiler	count=1
function_name	[function_name_1] pulse una ||| [function_name_1] [function_name_2]	count=3
function_name	obtiene el retraso de ||| delay	count=1
function_name	lapiz ||| sketch image	count=2
namespace	contenido ||| yaf_response_abstract	count=2
arg_pair	página ||| float $disp_time	count=1
namespace	un array [namespace] ||| [namespace]	count=3
function_name	el proveedor oauth ||| add	count=1
function_name	lzf ||| lzf	count=1
function_name	abstracto ||| abstract	count=1
arg_pair	desde in_charset ||| string $in_charset	count=1
function_name	función dio_read() lee ||| dio read	count=1
return	recupera un valor ||| mixed	count=1
function_name	que la ||| delete multi by	count=1
function_name	e/s ||| readahead	count=1
namespace	imagen ||| gmagick	count=23
function_name	extensión ||| type to extension	count=1
function_name	la función usa ||| gmp prob	count=1
function_name	conexión de socket ||| stream socket	count=1
function_name	con db2_connect() y ||| db2	count=1
function_name	para desplegar el logo ||| php logo guid	count=1
function_name	de disposición ||| getimagedispose	count=1
arg_pair	en un grupo ||| resource $grp	count=1
arg_pair	dn se [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	base de datos emita ||| string $event_name1	count=1
function_name	la estructura de un ||| imap fetchstructure	count=1
namespace	realizada por ||| function	count=1
function_name	si y sólo ||| exceptions	count=1
function_name	máximo de ||| max cand	count=1
function_name	[function_name_1] el nombre ||| [function_name_1] namespace [function_name_2]	count=1
function_name	dsn ||| source	count=1
function	[function_name_1] asocia ||| [arg_pair_2] [function_name_1]	count=2
return	le ha ||| int	count=1
arg_pair	esta función es ||| mixed $data	count=1
arg_pair	de una ||| string $filename int $version	count=1
arg_pair	y ||| resource $connection	count=1
function_name	[function_name_1] los iteradores ||| [function_name_1] [function_name_2]	count=1
return	mongo ||| int	count=1
arg_pair	varias ||| resource $connection_id	count=1
function_name	en lugar de emitir ||| using exceptions	count=1
namespace	o boolean ||| function	count=2
function_name	cierra un gestor ||| pdf close	count=1
arg_pair	siguientes transformaciones con xsltprocessor ||| string $name	count=1
arg_pair	texto ||| string $blockname string $text	count=1
function_name	verde ||| green	count=1
function_name	la descripción ||| cairo surface get font options	count=1
function_name	que ||| crypt	count=1
arg_pair	una ||| resource $psdoc int $fontid	count=1
arg_pair	las retrollamadas se ejecutan ||| array $patterns_and_callbacks mixed $subject	count=1
function_name	las propiedades asociadas ||| image properties	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] extension [function_name_2]	count=3
function_name	alfabéticos ||| alpha	count=1
return	de mensaje y ||| zmqsocket	count=1
arg_pair	defina sobre las capas ||| zmqsocket $frontend	count=1
function_name	diccionario indicado ||| closedict	count=1
namespace	host o a ||| function	count=1
namespace	virtual sujeto a ||| function	count=1
arg_pair	función callback ||| mixed $callback	count=2
function_name	un mensaje ||| curl strerror	count=1
function_name	identificador único ||| object hash	count=1
namespace	que representa una imagen ||| function	count=2
arg_pair	la prueba probabilística de ||| gmp $a	count=1
return	de intermediarios de ||| zmqsocket	count=1
function_name	podrían ejecutarse pero deja ||| close cursor	count=1
function_name	devuelve ||| mcrypt module get	count=1
function_name	la [function_name] declaraciones de ||| get [function_name]	count=1
arg_pair	coincida con el color ||| mixed $target mixed $fill	count=1
function_name	con el tipo stream ||| pdf	count=1
arg_pair	caracteres de mask ||| string $mask	count=1
function_name	la escala de ||| scale	count=3
arg_pair	oid de la instancia ||| string $oid	count=1
function_name	nombre del paquete de ||| package name	count=1
function_name	[function_name_1] control con ||| [function_name_2] [function_name_1]	count=2
function_name	el control ||| control	count=1
function_name	estancamiento de salida ||| cascade output stagnation	count=3
return	cual incluye los ca_path ||| array	count=1
function_name	filas afectadas por ||| mysqli stmt affected rows	count=1
namespace	de filas que ||| solrquery	count=1
function_name	devuelve el número de ||| fbsql num	count=1
function_name	excepción de tipo ||| using exceptions	count=1
function_name	formulario y todos los ||| newt form destroy	count=1
function_name	en unidades de grafema ||| grapheme strripos	count=1
function_name	descripción de ||| cairo create	count=1
function_name	recupera el objeto ||| get	count=1
function_name	de la opción especificada ||| option	count=1
arg_pair	redimensiona ||| int $new_width	count=1
function_name	otra información ||| info	count=1
namespace	cuando la ||| rarexception	count=1
function_name	de línea actual ||| current line number	count=1
return	el [return] de línea ||| [return]	count=1
arg_pair	devuelve el identificador ||| resource $result_identifier	count=1
arg_pair	un algoritmo ||| int $channel	count=1
function_name	a considerara ||| fragsize	count=1
function_name	ha sido creado con ||| add	count=1
function_name	mediante el ||| proc	count=1
function_name	sql de informix ||| ifx fieldproperties	count=1
arg_pair	un campo [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
return	de la imagen ||| void	count=1
function_name	el argumento es ||| set using	count=1
return	ignoradas ||| solrquery	count=1
arg_pair	une tres archivos ||| string $new_file1	count=1
function_name	cierra el objecto slob ||| ifxus close	count=1
function_name	documento pdi ||| pdi value	count=1
return	contiene el número del ||| int	count=1
return	a fgets() ||| string	count=1
namespace	código de ||| function	count=1
function_name	[function_name_1] atributos ||| [function_name_2] [function_name_1]	count=1
function_name	en la codificación de ||| mb	count=1
namespace	embargo cualquier código que ||| function	count=1
function_name	disponible ||| memory	count=1
function_name	número de filas afectadas ||| rows fetched	count=1
function_name	llamarla ||| data source	count=2
function_name	prioridad de los ||| priority init	count=1
return	tantos documentos ||| solrquery	count=1
arg_pair	componentes rgb ||| int $red	count=1
function_name	las palabras que no ||| min	count=1
function_name	de la acción especificada ||| gupnp service action	count=1
namespace	realiza lo mismo que ||| function	count=1
arg_pair	memcached::replace() con ||| int $expiration	count=1
arg_pair	number ||| int $frombase	count=1
function_name	emitir ||| exceptions	count=1
function_name	control de iso ||| isocontrol	count=1
function_name	[function_name_1] eventos generados ||| [function_name_1] [function_name_2]	count=2
function_name	devuelve true si el ||| mcrypt module is	count=1
function_name	atajo empleando un ||| shortcut	count=1
return	a que ||| bool	count=1
function_name	tailable ||| tailable	count=1
function_name	desplegar el logo ||| php logo guid	count=1
arg_pair	une tres cadenas en ||| string $old_data	count=1
arg_pair	cc y bcc ||| string $cc string $bcc	count=1
function_name	actual donde ||| dbplus chdir	count=1
namespace	donde ||| function	count=1
function_name	escala de grises ||| embossimage	count=1
function_name	conectarla de nuevo si ||| pg ping	count=1
function_name	codificador ||| get writing	count=1
arg_pair	con handle e ||| resource $handle	count=1
return	el diccionario indicado ||| bool	count=1
function_name	de entrenamiento de ||| fann get	count=1
function_name	del array fann_get_cascade_activation_functions() ||| get cascade	count=2
function_name	manejador de declaración de ||| handler	count=1
arg_pair	texto text con ||| resource $pdfdoc string $text	count=1
function	autocommit [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=1
function_name	volcar a la ||| debug zval dump	count=1
function_name	entradas y salidas para ||| fann set scaling	count=1
function_name	sybase_fetch_row() que utiliza ||| sybase fetch assoc	count=1
arg_pair	un ||| resource $fam	count=1
arg_pair	sybase_connect() ||| string $password	count=1
function_name	campo de ||| ibase field	count=1
arg_pair	con el nombre de ||| string $name	count=1
function_name	antepone un contenido a ||| prepend body	count=1
function_name	el espacio [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	recuperada y mueve el ||| mysql	count=1
function_name	advertencia esta función ||| ps	count=1
arg_pair	redimensiona una imagen empleando ||| int $new_width	count=1
arg_pair	que ||| zmqsocket $frontend	count=1
function_name	a una única función ||| add kernel	count=1
function_name	[function_name_1] del módulo ||| [function_name_2] [function_name_1]	count=4
function_name	tamaño actual de una ||| zip entry	count=1
return	la variable ||| string	count=1
return	entrada de ||| int	count=1
function_name	escala [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	límite de ||| fail limit	count=1
arg_pair	data y devuelve ||| string $data string $mode	count=1
function_name	a la potencia de ||| pow	count=1
arg_pair	a image dada ||| float $inputgamma	count=1
namespace	al estado del cursor: ||| mongocursor	count=1
function_name	consulta única ||| query	count=1
arg_pair	para iterar a través ||| int $colnum	count=1
arg_pair	[arg_pair_1] tiempo de ||| [arg_pair_2] int $retry_interval [arg_pair_1]	count=1
function_name	de color ||| color	count=3
function_name	crea una nueva ||| create processing	count=1
function_name	[function_name_1] el hijo ||| [function_name_1] [function_name_2]	count=3
function_name	el punto de control ||| control point	count=1
namespace	el número de filas ||| solrquery	count=1
function_name	callback definidos por ||| control point browse	count=1
function_name	[function_name_1] [function_name_2] de ||| [function_name_2] [function_name_1]	count=6
function_name	el tamaño comprimido ||| zip entry compressedsize	count=1
function_name	de la primera tupla ||| dbplus first	count=1
namespace	en ||| gearmanclient	count=1
arg_pair	ifx_do() ||| int $cursor_def mixed $blobidarray	count=1
function_name	utilización de memoria ||| win32 ps stat mem	count=1
function_name	obtiene el tipo ||| get type	count=1
function_name	recorre el ciclo de ||| eio nop	count=1
function_name	nombre largo ||| id3 get frame long name	count=1
arg_pair	el puntero al ||| int $length	count=1
function_name	[function_name_1] para acomodar ||| [function_name_2] [function_name_1]	count=6
function_name	datos geoip ||| geoip db	count=2
function_name	comporta como mssql_connect() ||| mssql	count=1
arg_pair	especificado como timestamp ||| int $timestamp	count=2
namespace	indicado mediante el identificador ||| function	count=1
function_name	sqlsrv_prepare() o sqlsrv_query() ||| sqlsrv	count=1
function_name	sybase asociado ||| sybase data	count=1
namespace	conjunto en el ||| quickhashintset	count=1
function_name	[function_name_1] de namespace ||| [function_name_2] [function_name_1]	count=8
return	la lista de dsn ||| array	count=1
function_name	el atributo llamado name ||| attribute	count=1
function_name	de campos [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	archivo en una ||| string $filename	count=1
arg_pair	texto text con ||| string $text	count=1
function_name	conjunto [function_name] ||| add [function_name]	count=1
function_name	[function_name_1] rango de ||| [function_name_1] quantum [function_name_2]	count=1
return	la ruta ||| bool	count=1
function_name	filas afectadas por una ||| affected rows	count=2
function_name	la que apunta conn_handle ||| cubrid commit	count=1
function_name	infomación variable ||| textblock	count=1
function_name	potencial ||| getimagetype	count=1
function_name	éxito [function_name] ||| [function_name] time of day	count=3
function_name	de documento [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	nombre largo para ||| long name	count=1
arg_pair	columna especificada ||| resource $stmt mixed $column	count=4
function_name	registros ||| px numrecords	count=2
function_name	de la ||| show	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] conf [arg_pair_2]	count=4
function_name	siguiente resultado de ||| fetch	count=1
function_name	tiempo de espera de ||| timeout	count=4
function_name	iteración durante un entrenamiento ||| fann	count=1
return	la línea ||| int	count=1
arg_pair	data1 y ||| resource $data1	count=1
function_name	[function_name_1] facet.date ||| [function_name_2] [function_name_1]	count=2
arg_pair	el offset especificado ||| int $offset	count=1
function_name	un ||| crypt	count=1
arg_pair	parámetros signcert ||| mixed $signcert	count=1
function_name	valor actual ||| value	count=1
function_name	entidades ||| entity	count=2
arg_pair	excepto ||| int $length	count=1
function_name	que ||| min doc frequency	count=4
arg_pair	la cuota de ||| string $quota_root	count=2
function_name	letras del continente que ||| continent code by	count=1
return	advertencias y devolver un ||| void	count=1
namespace	es parte de ||| tidynode	count=1
arg_pair	nombre sobre ||| string $name	count=1
arg_pair	para un color requerido ||| resource $image int $red	count=2
namespace	actual tiene un hijo ||| parentiterator	count=1
function_name	objeto blob ||| blob	count=1
function_name	el retraso ||| delay	count=1
function_name	la biblioteca unrar ||| using	count=1
namespace	de resultados ||| sqlite3result	count=1
function_name	documentos como este ||| set mlt min doc	count=1
function	asociado al [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	con las ||| resource $identifier	count=1
return	devuelve un ||| string	count=6
function_name	devuelve el nombre ||| get property name	count=2
function_name	intentará ||| dbplus	count=1
function_name	sólo si ||| using exceptions	count=1
function_name	devolver ||| set	count=1
function_name	función geoip_domain_by_name() devolverá ||| domain	count=1
arg_pair	el objeto gmagickpixel ||| gmagickpixel $color int $width	count=1
function_name	lo menos ||| set	count=1
arg_pair	declara ||| string $name bool $isid	count=1
function_name	de socket ||| socket	count=3
function_name	y devolver un ||| using	count=1
arg_pair	archivo local en el ||| string $local_file int $mode	count=1
function_name	establecer los ||| ncurses	count=1
namespace	de almacenamiento que ||| function	count=1
return	describe ||| int	count=1
arg_pair	idéntica a mktime() excepto ||| int $minute	count=1
arg_pair	de arrays con una ||| array $array1 array $array2	count=1
function_name	libera un descriptor asignado ||| free	count=1
arg_pair	gmagickpixel de ||| gmagickpixel $color	count=1
function_name	de una imagen con ||| image	count=1
function_name	que ||| doc frequency	count=4
return	actual basada en ||| bool	count=1
function_name	rutinas de interoperabilidad ||| default stub	count=1
function_name	nombres ||| names	count=2
function_name	de las letras en ||| get	count=1
namespace	a false ||| function	count=1
arg_pair	escribirá una cadena en ||| string $data	count=1
namespace	se ||| zmqdevice	count=1
function_name	para ||| optimize	count=1
function_name	tantos documentos como ||| mlt min doc frequency	count=1
arg_pair	de un archivo remoto ||| resource $ftp_stream string $remote_file	count=1
function_name	destruye ||| unset	count=2
function_name	información sobre el ||| cal info	count=1
arg_pair	con la ||| resource $pdfdoc	count=1
arg_pair	con dos ||| string $servername string $username	count=1
return	informix asociado con ||| string	count=1
function_name	dgettext() le permite sobrescribir ||| dgettext	count=1
namespace	dada [namespace] ||| [namespace]	count=3
namespace	la cadena ||| function	count=1
namespace	subsiguiente fichero ||| sdo_das_xml	count=1
return	del mensaje de ||| int	count=1
namespace	de el [namespace] ||| [namespace]	count=1
function_name	campo ||| fbsql field	count=1
function_name	[function_name_1] excepción ||| [function_name_1] [function_name_2]	count=1
function_name	convertidos a minúsculas ||| strtolower	count=1
arg_pair	el método gearmanclient::setstatuscallback() ||| string $job_handle	count=1
function_name	para __autoload() ||| spl autoload	count=1
namespace	que contiene un directorio ||| function	count=1
function_name	esté ||| floodfill	count=1
arg_pair	efecto ||| int $width	count=1
function_name	el que [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] de flujo ||| [function_name_2] [function_name_1]	count=4
function_name	escribe al gestor de ||| write function	count=1
function_name	la representación que devuelve ||| to string	count=1
arg_pair	existe todavía en el ||| int $expire	count=1
arg_pair	cualquier abstracción que se ||| zmqsocket $frontend	count=1
function_name	actual por la imagen ||| set image	count=1
function_name	al entrenamiento ||| fann get cascade	count=1
function_name	o cualquier abstracción que ||| construct	count=1
function_name	la página ||| slide show	count=1
function_name	la descripción de ||| cairo surface set fallback resolution	count=1
arg_pair	ereg_replace() excepto que ignora ||| string $replacement	count=1
function_name	[function_name_1] escribir ||| [function_name_1] [function_name_2]	count=1
function_name	índice ausente ||| empty	count=1
function_name	el tipo mime ||| image type to mime type	count=1
function_name	como este ||| mlt min	count=1
function_name	esta función crea ||| create entity	count=1
return	valor del primer ||| mixed	count=1
arg_pair	los dispositivos de ømq ||| zmqsocket $backend	count=1
function_name	nombres similares para el ||| similar names	count=1
function_name	[function_name_1] particular ||| [function_name_1] [function_name_2]	count=3
arg_pair	de datos disponible como ||| int $row int $offset	count=1
namespace	la api ||| gmagick	count=1
function_name	token del ||| token	count=1
function_name	la respuesta original de ||| response	count=1
namespace	la apariencia ||| harudestination	count=1
arg_pair	se ||| resource $psdoc	count=1
function_name	de emitir ||| set using exceptions	count=1
function_name	la página [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	remarcación de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	recuperada y ||| mysql	count=1
arg_pair	devuelve un array a ||| array $array	count=1
function_name	valores usando una función ||| uasort	count=1
function_name	usando ||| uasort	count=1
namespace	el archivo nombrado por ||| function	count=1
return	previamente asignados ||| bool	count=1
function_name	probabilística de ||| prob	count=1
function_name	el glifo ||| ps symbol	count=1
namespace	serializada del conjunto en ||| quickhashintset	count=1
namespace	escribe el ||| splfileobject	count=1
arg_pair	localname y namespaceuri dados ||| string $namespaceuri string $localname	count=1
function_name	la fila ||| sqlsrv fetch object	count=1
function_name	los archivos de ||| chdir	count=1
function_name	fclose() sucesivamente ||| file put contents	count=1
function_name	de clave ||| key	count=1
function_name	imprimibles ||| print	count=1
function_name	apuntador de archivo ||| mailparse uudecode all	count=1
namespace	recupera la ||| yaf_dispatcher	count=1
return	segundo o ||| void	count=1
arg_pair	key y almacena el ||| int $padding	count=1
function_name	arbitrarios a todos ||| ping	count=1
arg_pair	plural de gettext() ||| string $msgid2	count=1
namespace	de los ||| gmagickdraw	count=1
arg_pair	similar a ingres_fetch_array() ||| int $result_type	count=1
arg_pair	asocia el ||| int $cols	count=1
namespace	dada que apunta a ||| function	count=2
function_name	variable vinculada de oracle ||| oci bind by	count=1
function_name	tie ||| set	count=1
namespace	través de ||| function	count=1
function_name	van a ||| set start	count=1
arg_pair	number representado ||| int $frombase	count=1
function_name	true entonces ||| set using	count=1
function_name	[function_name_1] de palabra ||| [function_name_2] [function_name_1]	count=4
function_name	este método anima ||| animate images	count=1
arg_pair	una ||| string $offset	count=1
function_name	consulta de búsqueda principal ||| query	count=1
function_name	del color de cualquier ||| color	count=1
namespace	la biblioteca unrar ||| rarexception	count=1
return	una entrada ||| string	count=1
arg_pair	retropropagación estándar completamente conectada ||| int $num_neurons1	count=1
function_name	implementa directo a la ||| blob	count=1
return	las capas de mensaje ||| zmqsocket	count=1
arg_pair	de alimentarlo a ||| array $input_vector	count=1
arg_pair	se especifica por dn ||| resource $link_identifier string $dn	count=1
function_name	repositorio indicado en ||| svn	count=1
arg_pair	gmagickpixel ||| gmagickpixel $color int $width	count=1
function_name	paginación ldap [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	de datos emita uno ||| string $event_name1	count=1
function_name	establece el ||| set highlight simple pre	count=1
function_name	respuesta ||| simple command handle response	count=1
arg_pair	codificación de caracteres del ||| string $encoding	count=1
function_name	[function_name_1] campos ||| [function_name_1] [function_name_2]	count=10
arg_pair	expresión aritmética relacional ||| array $arguments	count=1
function_name	tantos documentos como este ||| mlt min doc frequency	count=1
function_name	recibe un array ||| recv multi	count=1
function_name	envía la acción ||| service proxy send action	count=1
arg_pair	bv_name ||| resource $statement string $bv_name	count=1
function_name	cierra el ||| eio close	count=1
function_name	si [function_name] ||| dbplus [function_name]	count=3
function_name	de filas afectadas por ||| affected rows	count=6
function_name	punto de control ||| gupnp control point	count=4
function_name	de mysql que está ||| mysql	count=1
namespace	de archivos que ||| function	count=1
namespace	dos o ||| function	count=1
function_name	documentos como este serán ||| set mlt	count=1
arg_pair	variables desde un array ||| array $array	count=1
function_name	el tamaño de ||| size	count=7
function_name	breaker ||| tie	count=1
function_name	[function_name] tiempo ||| get time [function_name]	count=1
arg_pair	una nueva ||| int $key	count=2
function_name	obtiene [function_name_2] ||| [function_name_1] affected [function_name_2]	count=1
function_name	número máximo [function_name_2] ||| [function_name_2] [function_name_1]	count=11
return	objeto de conjunto de ||| sqlite3result	count=1
function_name	tendencias de cada capa ||| get bias array	count=1
arg_pair	el valor ||| string $value	count=2
return	[return] copia de ||| [return]	count=3
function_name	[function_name_1] azul ||| [function_name_2] [function_name_1]	count=8
return	y extrae cada archivo ||| array	count=1
arg_pair	un file con ||| string $file	count=3
function_name	del valor de ||| get	count=1
function_name	sin tratar ||| get raw	count=3
function_name	existe en el ||| exists	count=1
function_name	largo para un marco ||| get frame long	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() durante ||| int $neurons_between_reports	count=1
function_name	de espera de consulta ||| get query timeout	count=1
arg_pair	final de str ||| string $str string $character_mask	count=1
function_name	explícitamente la ||| pdf setmatrix	count=1
return	en el gestor ||| bool	count=2
arg_pair	[arg_pair] través ||| [arg_pair]	count=1
namespace	envía datos ||| gearmanclient	count=1
function	[function_name_1] original_name como ||| [arg_pair_2] [function_name_1]	count=1
function_name	elimina el identificador de ||| remove	count=1
namespace	con valores [namespace] tienen las ||| [namespace]	count=1
function_name	copia binaria de ||| apc bin	count=1
function_name	el espacio de nombres ||| is	count=1
arg_pair	contenedor ||| resource $fdf_document string $frame_name	count=1
function_name	corto ||| frame short	count=1
namespace	estándar basado ||| function	count=1
function	añade la [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function	[function_name_1] bytes pseudo-aleatorios ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	dada por key ||| mixed $value	count=1
function_name	nivel mínimo ||| sybase min message	count=1
arg_pair	rota el ||| resource $p float $phi	count=1
return	filas de la base ||| int	count=1
return	llena la ||| bool	count=1
return	id3v2 para el ||| ktaglib_id3v2_tag	count=1
namespace	contenido de ||| function	count=2
function_name	archivo de relación ||| dbplus	count=1
function_name	nodo es parte ||| is	count=1
namespace	documento xml ||| domdocument	count=1
function	divide [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	función callback dependiendo ||| int $pri callable $callback	count=1
function_name	contiene pares de sustitución ||| pspell config repl	count=1
arg_pair	establece un ||| string $param_key	count=1
function_name	del texto ||| text	count=2
function_name	caché de archivo/usuario de ||| bin	count=1
arg_pair	a x y ||| float $x	count=1
function_name	estilo viñeta ||| vignette	count=1
function_name	en utf-8 ||| utf8	count=1
arg_pair	valores de un assoc_array ||| array $assoc_array int $options	count=1
namespace	tipo type que ||| function	count=1
arg_pair	un fichero ||| string $filename string $mode	count=1
function_name	la ||| mlt min	count=2
arg_pair	imágenes de color ||| bool $blendmode	count=1
function	[function_name_1] una nueva ||| [function_name_1] [arg_pair_2]	count=9
arg_pair	de una tabla especificada ||| resource $connection string $table_name	count=1
function_name	las palabras ||| mlt	count=1
function_name	se buscarán los archivos ||| dbplus chdir	count=1
function_name	define la rotación ||| rotate	count=1
function_name	ha ||| count	count=1
function_name	de composición asociado a ||| getimagecompose	count=1
arg_pair	aparecen ||| string $str	count=1
namespace	un objeto en formato ||| serializable	count=1
function_name	configuración ||| cfg var	count=1
function_name	primer ||| set	count=1
namespace	cualquier ||| zmqdevice	count=1
function_name	en la ||| set mlt min doc	count=1
function_name	establece el ||| set cascade num	count=1
arg_pair	con pattern luego ||| string $pattern	count=1
namespace	abierto mediante el uso ||| function	count=1
function_name	de campos en el ||| fields	count=1
namespace	documento xml ||| sdo_das_xml_document	count=1
function_name	la base ||| dba	count=1
function_name	en por lo menos ||| min doc	count=1
function_name	la porción borrada ||| chop	count=1
namespace	tipo de ||| gmagick	count=1
function_name	la paleta de ||| imagecolorexact	count=1
function_name	sintaxis lint pelusa en ||| runkit lint	count=1
function_name	usar para establecer ||| set	count=1
arg_pair	rgb especificado ||| resource $image int $red	count=1
function_name	espacio de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	pendientes de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	de forma parecida a ||| string $password string $charset	count=1
function_name	[function_name_1] [function_name_2] xml con soporte para ||| [function_name_2] [function_name_1]	count=2
namespace	otro núcleo («kernel») a ||| imagickkernel	count=1
function_name	[function_name_1] información ||| [function_name_2] [function_name_1]	count=5
arg_pair	una nueva ||| array $rectangle string $text	count=1
arg_pair	una conexión full-duplex ||| int $how	count=1
namespace	por encoding type ||| function	count=1
arg_pair	y negro especificados ||| float $gamma	count=1
return	proceso ||| array	count=1
function_name	query al servidor ingres ||| ingres query	count=1
function_name	bits de los modificadores ||| modifiers	count=2
function_name	cambio del ||| get	count=1
function_name	campos de los resultados ||| fields	count=1
namespace	a éste ||| function	count=1
return	pid del id ||| int	count=1
function_name	afecta ||| count	count=1
function_name	esta función ||| odbc data source	count=1
arg_pair	clave /status ||| resource $fdf_document string $status	count=1
return	la variable php ||| string	count=1
arg_pair	solrquery::sethighlightalternatefield() se le pasó ||| int $fieldlength	count=1
function	establece [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=10
namespace	en lugar de emitir ||| rarexception	count=1
function_name	de una salida estándar ||| output	count=1
function_name	para la tarea en ||| do	count=1
arg_pair	una fuente para ||| string $encoding bool $embed	count=1
function_name	de la imagen ||| stegano image	count=1
arg_pair	una petición a un ||| resource $connection	count=1
return	documentación de una ||| string	count=2
function_name	simplexml y lo convierte ||| simplexml	count=1
function_name	utf-32 al formato utf-16 ||| pdf utf32 to utf16	count=1
function_name	pspell_save_wordlist() guardará los pares ||| save repl	count=1
arg_pair	se especifica un ||| string $fieldname	count=1
function_name	recursos persistentes como una ||| apd dump persistent resources	count=1
function_name	de la imagen ||| set image interlace scheme	count=1
function_name	cálculos de todas las ||| compat	count=1
function_name	información blob/clob ||| lob export	count=1
namespace	establece ||| function	count=1
namespace	de la dada por ||| function	count=1
function_name	vincula el nombre dado ||| bind	count=1
function_name	la imagen del ||| set image	count=1
arg_pair	inicio de un ||| string $str	count=1
function_name	[function_name_1] del trazo ||| [function_name_2] [function_name_1]	count=2
arg_pair	una página del ||| int $page string $dest	count=1
arg_pair	[arg_pair] sincronizada ||| [arg_pair]	count=1
arg_pair	y asocia ||| int $rows	count=1
arg_pair	extremo de una ||| mixed $background float $x_shear	count=1
function_name	la directiva error_reporting en ||| error reporting	count=1
arg_pair	otros caracteres del ||| string $str	count=1
function_name	del grupo de procesos ||| getpgid	count=1
namespace	encuentre un error ||| rarexception	count=1
rep	se encuentra [rest_2] ||| [namespace_1] [rest_2]	count=2
function_name	última fila insertada ||| last insert	count=3
function	[function_name_1] método y ||| [arg_pair_2] [function_name_1]	count=2
namespace	cada archivo codificado ||| function	count=1
return	como un ||| string	count=1
namespace	capas de mensaje ||| zmqdevice	count=1
function_name	obtiene ||| get string	count=2
function_name	el próximo documento libxml ||| libxml	count=1
arg_pair	un efecto ||| int $x int $y	count=1
namespace	la ||| iterator	count=1
function_name	del secundario que ||| get	count=1
namespace	el nodo ||| tidynode	count=1
return	objeto throwable anterior el ||| throwable	count=1
function_name	[function_name] individual ||| adaptive [function_name]	count=2
arg_pair	información del ||| int $schema_type	count=1
function_name	se comporta de forma ||| sybase	count=1
function_name	los pares de sustitución ||| save repl	count=1
function_name	un error una ||| set using	count=1
namespace	devuelve el contenido de ||| function	count=1
function_name	una ||| uksort	count=1
function_name	uri base ||| base uri	count=2
function_name	un diff unificado que ||| file diff	count=1
function_name	información detallada acerca ||| info	count=1
arg_pair	los ||| int $width int $height	count=1
namespace	crea un objeto grande ||| oci-lob	count=1
function_name	de columnas que identifican ||| odbc specialcolumns	count=1
function_name	devuelve el resto del ||| get contents	count=1
namespace	(1 de enero ||| function	count=1
function_name	interpretación ||| text rendering	count=1
function_name	función socket_recv() recibe ||| recv	count=1
namespace	por palabras ||| function	count=1
function_name	emitir advertencias ||| set using exceptions	count=1
function_name	campos de una ||| field	count=1
function_name	el valor gamma de ||| gamma	count=1
function_name	crea una nueva instancia ||| create cdatasection	count=1
return	establecer los colores ||| int	count=1
function_name	[function_name_1] cliente de ||| [function_name_2] [function_name_1]	count=2
function_name	curl en formato ||| curl	count=1
function_name	de casillas de verificación ||| newt checkbox tree find	count=1
function_name	[function_name_1] la palabra ||| [function_name_2] [function_name_1]	count=6
arg_pair	selecciona un ||| resource $fdf_document	count=1
function_name	de tipo ||| set	count=1
function_name	establece ||| default timezone set	count=2
function_name	[function_name_1] de documento ||| [function_name_1] [function_name_2]	count=1
arg_pair	se comporta de forma ||| string $servername	count=1
function_name	el tipo [function_name_2] ||| [function_name_2] [function_name_1]	count=17
arg_pair	una archivo ||| resource $filehandle	count=1
function_name	exe de [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	coordenadas ||| resource $p	count=1
function	[function_name_1] del resultado ||| function mixed cubrid [function_name_1] [arg_pair_2]	count=4
function_name	devuelve la ruta ||| get temp dir	count=1
arg_pair	reabre ||| int $n_retries	count=1
function	actualiza el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	regla del ||| bool	count=1
function_name	a texto utf-7 modificado ||| imap utf7 encode	count=1
arg_pair	un nuevo archivo ||| resource $pxdoc resource $file	count=1
arg_pair	números de versiones estandarizados ||| string $version2	count=1
function	[function_name_1] el intérprete ||| [function_name_1] entity decl handler [arg_pair_2]	count=1
function_name	esta función crea ||| create	count=4
function_name	validación [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] el fichero ||| [arg_pair_2] [function_name_1]	count=5
function_name	cabecera del mensaje mime ||| imap mime	count=1
arg_pair	variable_key ||| resource $shm_identifier int $variable_key	count=1
function_name	de candidatas [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	imagen a ||| gmagick	count=1
return	no una conexión ||| bool	count=1
function_name	quoted printable creado de ||| quoted printable encode	count=1
arg_pair	capas de mensaje y ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	espacio de la palabra ||| word space	count=1
function_name	abierto mediante el uso ||| get	count=1
arg_pair	simulado aclarando ||| int $x	count=1
function_name	sólo si el ||| set	count=1
function_name	que fue subido mediante ||| uploaded	count=1
return	una palabra clave ||| string	count=1
namespace	añadidos a ||| splobjectstorage	count=1
arg_pair	por data mediante ||| string $data	count=1
function_name	información dependiente de ||| resize	count=1
arg_pair	se defina ||| zmqsocket $frontend	count=1
function_name	relaxng del [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	incluida que se ||| function	count=1
function_name	que comenzar ||| terms lower	count=2
arg_pair	una ruta ||| string $optlist string $path	count=1
function_name	un dibujo a carboncillo ||| charcoal	count=1
function_name	del actual nodo incluyendo ||| outer xml	count=1
return	este para que ||| void	count=1
function_name	los caracteres ||| unicode	count=1
function_name	elemento cuyo índice ||| elem	count=1
namespace	virtual ||| function	count=1
function_name	lugar de ||| set	count=1
function_name	devuelve el estado http ||| get http status	count=1
function_name	memcached::prepend() con la ||| prepend by	count=1
function_name	a lo ||| shearimage	count=1
function_name	fue subido mediante el ||| uploaded file	count=1
arg_pair	sequence ||| resource $imap_stream string $sequence	count=1
function_name	el identificador ||| crack closedict	count=1
function_name	devuelve el número ||| num	count=7
function_name	rutina ||| default stub	count=2
arg_pair	abstracción que se ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	clase y realiza ||| parse class	count=1
function_name	obtiene una fila de ||| fetch	count=1
arg_pair	celda [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=12
function_name	detalles del estado http ||| get http status	count=1
function_name	establece el conjunto ||| set charset	count=1
function_name	es primo ||| prime	count=1
function_name	la escala de ||| field scale	count=1
function_name	[function_name_1] [function_name_2] ocurrió el error ||| [function_name_1] [function_name_2]	count=6
arg_pair	varios arrays al mismo ||| array $array1 mixed $array1_sort_order	count=1
function_name	sybase_fetch_assoc() con la diferencia ||| sybase fetch	count=1
function_name	analiza datos get/post/cookie ||| parse	count=1
function_name	finaliza la definición de ||| pdf end	count=1
return	basada en ||| bool	count=5
function_name	lugar de emitir advertencias ||| set using	count=1
return	las letras en ||| int	count=1
function_name	de respuesta xml del ||| xml response	count=1
function_name	el de ||| slide	count=1
function_name	método se ||| await data	count=1
function_name	crear un nuevo iterador ||| iterator	count=1
function_name	ruta del directorio para ||| path	count=1
function_name	la ||| set interlace scheme	count=2
arg_pair	[arg_pair] confirmación ||| [arg_pair]	count=2
function_name	de [function_name_2] ||| [function_name_1] line [function_name_2]	count=4
function_name	matchbox en la página ||| matchbox	count=1
function_name	usa para ||| set resource	count=2
return	afecta al estado del ||| int	count=1
arg_pair	un servicio proxy ||| resource $proxy	count=1
namespace	que representa una variable ||| function	count=1
function_name	importa las ||| import request	count=2
namespace	exclusivo previamente obtenido por ||| function	count=1
function_name	[function_name_1] límite de ||| [function_name_1] bit [function_name_2]	count=1
arg_pair	la primera ocurrencia ||| string $haystack	count=3
function_name	devuelve el número de ||| ifx num fields	count=1
arg_pair	actual indicando que ocurrió ||| string $actor string $details	count=1
function	archivo rrd [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	función analiza el ||| bbcode parse	count=1
function_name	de dsn ||| odbc data	count=1
function_name	petición de ||| request	count=1
arg_pair	de direcciones servicios colas ||| zmqsocket $frontend	count=1
function_name	datos lob ||| db2 lob read	count=1
function_name	consulta de la ||| cubrid get query	count=1
return	en el servidor ||| bool	count=7
function_name	número máximo de ||| cascade max	count=1
arg_pair	reabre el flujo espeicificado ||| int $n_retries	count=1
arg_pair	propiedad hwnd ||| int $client_area	count=1
function_name	la lista de dsn ||| source	count=1
function_name	activa el ||| autocommit	count=1
function_name	el servicio ||| service	count=1
namespace	total o ||| function	count=1
function_name	de un blob ||| blob	count=1
function_name	añade un fichero al ||| add file	count=1
function_name	puntero interno a ||| seek	count=1
function_name	el arcocoseno ||| trader acos	count=1
namespace	plural de gettext() ||| function	count=1
return	un valor ||| void	count=1
arg_pair	tabla de una ||| string $name	count=1
function_name	única función ||| add kernel	count=1
namespace	archivo codificado ||| function	count=1
namespace	cadena de instancia xml ||| sdo_das_xml	count=1
function_name	número de tendencias de ||| bias	count=1
function_name	máscara ||| mask	count=2
function_name	una ||| entry filesize	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=7
return	recupera la instancia de ||| yaf_application	count=1
arg_pair	añade un ||| resource $p float $x	count=1
function_name	true ||| using exceptions	count=2
function_name	obtener ||| get	count=4
arg_pair	compara value1 con ||| mixed $value2	count=1
namespace	el sistema de ||| function	count=1
function_name	nombre del ||| by name	count=1
function_name	dbms_sql.return_result [function_name] ||| [function_name] get implicit	count=1
return	proporciona al final del ||| int	count=1
arg_pair	descriptor de fichero fd ||| mixed $fd int $offset	count=1
function	[function_name_1] dado ||| [function_name_1] [arg_pair_2]	count=1
namespace	que va ||| function	count=1
function_name	un string ||| ltrim	count=1
function_name	[function_name] atributo si ||| move to [function_name]	count=3
function_name	[function_name] local o ||| stream socket [function_name]	count=1
function_name	devuelve ||| gettype	count=1
function_name	la línea de unión ||| line join	count=1
return	y escribe el resultado ||| int	count=1
function_name	de neuronas de salida ||| output	count=1
arg_pair	una entrada con un ||| int $key	count=1
function_name	sintaxis lint pelusa ||| lint	count=1
function_name	[function_name_1] del complemento ||| [function_name_2] get [function_name_1]	count=1
function_name	sql ||| exec	count=1
function_name	[function_name_1] la altura ||| [function_name_1] [function_name_2]	count=1
function_name	nombre y devolver su ||| name	count=1
arg_pair	de intermediarios ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	la función de ||| gearmanworker	count=1
function_name	comprueba si existe ||| file exists	count=1
function_name	devolver un valor ||| using exceptions	count=1
function_name	para usos criptográficos ||| bytes	count=1
function_name	devuelve el último error ||| enchant broker get	count=1
function_name	frase ||| highlight use phrase	count=2
function_name	salida ||| function output	count=2
namespace	devuelve la ||| gmagickpixel	count=1
function_name	de entidades ||| set external entity loader	count=1
arg_pair	exp ||| int $exp	count=1
function_name	la que las palabras ||| set mlt min doc frequency	count=1
function_name	que [function_name] ser usada ||| [function_name] escape	count=1
namespace	ømq pueden hacer de ||| zmqdevice	count=1
function_name	la línea de ||| start line	count=1
function_name	command [function_name] ||| [function_name]	count=1
function_name	obtiene la longitud de ||| len	count=1
function_name	[function_name] el ||| set [function_name]	count=2
function_name	devuelve ||| get current	count=2
namespace	conjunto en el mismo ||| quickhashintset	count=1
function_name	representación yaml ||| yaml emit file	count=1
arg_pair	mensaje para ||| resource $imap_stream	count=1
namespace	similares al comando de ||| mongocursor	count=1
namespace	ventana o su ||| function	count=1
function_name	en la paleta ||| imagecolorexact	count=1
function	número límite [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	se comporta ||| string $charset	count=1
function_name	de la función va ||| set	count=1
function_name	[function_name_1] http de ||| [function_name_2] [function_name_1]	count=6
function_name	analiza datos get/post/cookie ||| parse str	count=1
function_name	absoluto canonizado en ||| eio realpath	count=1
arg_pair	lista de filtros adjuntos ||| mixed $params	count=2
function_name	obtiene el ||| get stream	count=1
function_name	el array superglobal $_session ||| session encode	count=1
arg_pair	log_cmd_update ||| array $updateoptions	count=1
function_name	[function_name_1] imagen ||| [function_name_1] [function_name_2]	count=3
function_name	palabras dentro de ||| str word	count=1
function_name	multibyte de forma segura ||| mb	count=1
function_name	lee datos [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	dado ||| msgno	count=1
function_name	nodo actual ||| current	count=1
function_name	la puesta ||| sunset	count=1
arg_pair	notoriamente lenta ||| array $constants	count=1
arg_pair	coincida con ||| mixed $fill float $fuzz	count=1
function_name	el tipo mime ||| mime type	count=3
arg_pair	bytes str de ||| string $str string $charset	count=1
return	ruta actual ||| bool	count=1
function_name	filas afectadas por la ||| fbsql rows fetched	count=1
function_name	adjunta otro núcleo («kernel») ||| add	count=1
return	progreso en la conexión ||| bool	count=1
arg_pair	nombre distinguido que ||| array $dn resource $privkey	count=1
function_name	información sobre la ||| openssl	count=1
function_name	información sobre ||| cal info	count=1
function_name	devuelve los ||| get	count=6
return	cursores de ||| mongocursor	count=1
namespace	mediante el identificador ||| function	count=1
function_name	frontbase asociado ||| fbsql	count=2
function_name	rutina ||| stub	count=1
arg_pair	la mayoría ||| string $character_set	count=1
return	recupera un valor de ||| mixed	count=1
function_name	devuelve el tamaño de ||| get size	count=2
function_name	los tamaños de clave ||| key	count=1
function_name	crea una nueva ||| create cdatasection	count=1
arg_pair	idéntica a fgets() excepto ||| resource $handle int $length	count=1
return	las ||| bool	count=1
function_name	archivo temporal ||| all	count=1
function_name	obtiene los nombres de ||| get	count=1
arg_pair	oracle name el ||| string $name	count=1
function_name	que file_get_contents() devuelve ||| get contents	count=1
function_name	crea una nueva ||| create document fragment	count=1
function_name	inicia una conexión ||| connect	count=1
function_name	para que ambos ||| kernel	count=1
function_name	de sombreado ||| pdf shfill	count=1
function_name	la curva bezier y ||| curve	count=1
function_name	copia ||| oci lob copy	count=1
return	codificado mediante ||| array	count=1
function_name	dos letras del continente ||| continent	count=1
function_name	devuelve el número ||| get field count	count=2
return	valores usando ||| void	count=1
namespace	la lista de imágenes ||| imagick	count=1
function_name	función ||| add kernel	count=2
arg_pair	tar/zip al disco ||| string|array $files	count=1
function_name	advertencia ||| memory	count=1
function_name	string de error ||| error	count=1
function_name	color ||| get color value	count=2
arg_pair	en el calendario calendar ||| int $month	count=1
arg_pair	conexión al ||| mysqlnd_connection $connection string $host	count=1
function_name	variable vinculada de oracle ||| oci	count=1
function_name	identificador del cliente usado ||| client identifier	count=1
arg_pair	esteblece [arg_pair] línea ||| [arg_pair]	count=1
namespace	de un string utilizando ||| function	count=1
namespace	conocia como cursores ||| mongocursor	count=1
namespace	cual se describe como ||| function	count=1
function_name	[function_name] externos ||| set external [function_name]	count=1
return	forma parecida ||| resource	count=1
namespace	objeto alnzado ||| throwable	count=1
function_name	clase ||| node class	count=2
function_name	función ||| image	count=1
arg_pair	atributo extendido [arg_pair] ||| [arg_pair]	count=1
namespace	identificador de imagen que ||| function	count=6
function_name	consulta de la ||| get query	count=1
arg_pair	de un ||| resource $statement	count=1
arg_pair	de peticiones en un ||| resource $grp	count=1
function_name	de onda a la ||| wave	count=1
arg_pair	remote_socket ||| string $remote_socket int $errno	count=1
arg_pair	estilo ||| float $disp_time	count=1
function_name	del últime [function_name] imap que ||| imap last [function_name]	count=1
function_name	modo [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	a htmlspecialchars() ||| htmlspecialchars decode	count=1
function	el semáforo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	frecuencia en la ||| doc	count=1
function	array numérico [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	imap_delete() o imap_mail_move() ||| imap undelete	count=1
function_name	valor del atributo en ||| attribute	count=1
function_name	advertencia ||| ps open memory image	count=2
function_name	curva ||| path curve to	count=1
function_name	de prioridad de los ||| event base priority init	count=1
function_name	esta función ||| format	count=1
function_name	si ||| ping	count=1
return	llama a la función ||| bool	count=1
arg_pair	empleando delimiter como ||| string $delimiter string $null_as	count=1
function_name	en lugar ||| set	count=1
namespace	método no afecta al ||| mongocursor	count=1
function_name	el número de ||| imap	count=1
function_name	tarea ||| is	count=1
function_name	establece los ||| set	count=1
function_name	[function_name_1] conjunto ||| [function_name_1] [function_name_2]	count=1
function_name	devuelve el generador de ||| get highlight fragmenter	count=1
arg_pair	directorio de volcado ||| string $dump_directory	count=2
function_name	transforma el ||| transform to doc	count=1
arg_pair	una ||| string $comment	count=1
function_name	cualquier consulta ||| query	count=1
function_name	cambiado de alguna forma ||| modified	count=1
namespace	el sistema ||| function	count=2
namespace	activa o ||| function	count=1
function_name	un guid binario de ||| mssql guid string	count=1
return	una fuente ||| string	count=1
function_name	que las ||| set mlt min doc	count=1
function_name	el logo de php ||| php logo	count=1
function_name	la prueba probabilística ||| prob	count=1
function_name	actual [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	encuentre un error una ||| set using	count=1
arg_pair	a la de memcached::replace() ||| int $expiration	count=1
arg_pair	grado de control mucho ||| array $other_options	count=1
arg_pair	left a right ||| mixed $right	count=1
function_name	logo ||| php logo guid	count=1
arg_pair	[arg_pair_1] es el ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	la categoría general ||| char type	count=1
function_name	paso inicial ||| get rprop delta zero	count=1
function_name	devuelve el estado de ||| introspection get	count=1
function_name	hora de la puesta ||| sunset	count=1
arg_pair	versiones estandarizados ||| string $version1 string $version2	count=1
arg_pair	necesaria de un clúster ||| int $service_level_option mixed $option_value	count=1
namespace	colas o cualquier abstracción ||| zmqdevice	count=1
function_name	estancamiento de candidatas en ||| stagnation	count=1
function_name	de la tabla en ||| table	count=1
function_name	el término de ||| set terms lower bound	count=1
namespace	abstracción que ||| zmqdevice	count=1
function_name	añade rutas ||| add	count=1
function_name	desde ||| from callback	count=2
function_name	de ||| color set	count=2
function	proxy para [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	devuelve un código ||| int	count=1
function	[function_name_1] una variable ||| [arg_pair_2] [function_name_1]	count=2
namespace	de ||| serializable	count=1
function_name	[function_name] xml ||| xml [function_name]	count=1
function	atributo de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de llamarla varias ||| odbc data source	count=1
function_name	tangente hiperbólica para cada ||| trader tanh	count=1
function_name	rutina de ||| get stub	count=1
arg_pair	bbcode_container creado ||| resource $bbcode_container	count=1
function_name	la primera [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	sobre un proceso ||| proc get status	count=1
function_name	durante la instanciación ||| on create	count=1
return	esquema en un das ||| void	count=1
function_name	forzar a ||| variant cast	count=1
function_name	disponibles después de ||| odbc data source	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] max [function_name_2]	count=2
function_name	lo menos ||| min doc frequency	count=1
function_name	utilizando su nombre ||| name	count=1
function_name	establece el número de ||| set mlt	count=1
function_name	un lapiz ||| sketch	count=1
function_name	libera toda la memoria ||| free	count=1
function	para establecer [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	uid del número de ||| uid	count=1
arg_pair	direcciones horizontal ||| float $x	count=1
function_name	información de campos de ||| field	count=1
function_name	argumento es true entonces ||| set using	count=1
function_name	devuelve el índice de ||| get iterator index	count=1
function_name	firma ||| pkcs7 verify	count=1
function_name	directa [function_name] contenido ||| offset [function_name]	count=1
function_name	ciclo de peticiones ||| nop	count=1
function_name	actual de una ||| zip	count=1
namespace	solicitudes ||| oauth	count=1
function_name	mediante ||| proc get	count=1
arg_pair	datos emita uno ||| string $event_name1 string $event_name2	count=1
function_name	lanzará [function_name] ||| catch [function_name]	count=1
function_name	archivo dado y ||| uudecode all	count=1
function_name	descriptor ||| dio	count=1
function_name	que la clave dada ||| by	count=1
function_name	el carp::cluck ||| clunk	count=1
function_name	de compresión para ||| set compression	count=1
arg_pair	local en el ||| int $mode	count=1
return	ítems especificados en ||| bool	count=1
function_name	límite de fallo de ||| limit	count=1
namespace	que se dejó de ||| function	count=1
function_name	e indexa numéricamente ||| array values	count=1
function_name	conocia como cursores ||| tailable	count=1
arg_pair	flag a las ||| string $flag	count=1
function_name	lee hasta ||| fpassthru	count=1
function_name	al servidor ingres ||| ingres	count=2
return	los archivos ||| string	count=1
function_name	añade un enlace a ||| add	count=1
function_name	devuelve el tamaño ||| entry	count=1
function_name	el semáforo pueda ser ||| sem	count=1
namespace	se ||| solrquery	count=1
function_name	el dueño de el ||| owner	count=1
function_name	comporta de forma ||| sybase pconnect	count=1
return	en ella ||| bool	count=1
function_name	[function_name_1] prototipo del ||| [function_name_2] [function_name_1]	count=1
function_name	punto primario azul ||| blue primary	count=4
arg_pair	de la base ||| string $password string $database	count=1
namespace	el directorio virtual actual ||| function	count=1
function_name	ambos puedan aplicarse ||| add kernel	count=1
arg_pair	que las retrollamadas se ||| array $patterns_and_callbacks	count=1
function_name	de ||| odbc autocommit	count=2
function_name	tidy ||| tidy	count=2
function_name	advertencia esta ||| ps open	count=1
function_name	envía el ||| send	count=1
arg_pair	las dimensiones dadas ||| int $rows	count=1
function_name	coincide ||| match	count=1
function_name	longitud del campo ||| field len	count=4
namespace	valor especial indicando error ||| rarexception	count=1
arg_pair	una ||| mixed $key	count=1
arg_pair	una página ||| string $url	count=1
function_name	de entidades no analizadas ||| unparsed entity decl	count=1
function	posición numérica [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	caracter de salto ||| bool $cut	count=1
function_name	formatos soportados por ||| queryformats	count=1
function_name	la metainformación de una ||| has metadata	count=1
function_name	se emplea para establecer ||| set	count=1
function_name	el generador de ||| highlight fragmenter	count=1
function_name	libera ||| event base free	count=1
function_name	devolver ||| exceptions	count=1
function_name	una sentencia sql en ||| exec	count=1
function_name	círculo con su ||| ps arcn	count=1
function_name	parámtro ||| index	count=1
function_name	true entonces ||| using exceptions	count=1
arg_pair	por relation ||| resource $relation	count=1
return	si y sólo ||| void	count=1
function_name	serán ||| set mlt min	count=1
function_name	la descripción ||| cairo scaled font get font	count=3
function_name	libera toda ||| fbsql free result	count=1
return	es el espacio ||| bool	count=1
function_name	enviará ||| flush	count=1
function_name	la descripción ||| cairo svg surface create	count=1
arg_pair	string str dado mediante ||| string $str string $charset	count=1
function_name	realiza una equivalencia ||| variant eqv	count=1
function_name	de la última tupla ||| last	count=1
arg_pair	respuesta del proveedor de ||| string $callback_url	count=1
arg_pair	opción de contexto log_cmd_update ||| array $updateoptions array $protocoloptions	count=1
return	para [return] lista ||| [return]	count=2
function_name	del iterador [function_name] ||| [function_name]	count=1
function_name	error una excepción ||| using	count=1
function_name	fragmento ideal especificado por ||| highlight regex slop	count=1
function_name	codificación ||| mb convert encoding	count=2
return	al nombre de ||| void	count=1
function_name	de documento mínima a ||| terms min count	count=1
function_name	número de filas extraidas ||| ifx num rows	count=1
function_name	crea una nueva instancia ||| create document	count=1
arg_pair	obtiene ||| resource $ch	count=1
namespace	especificado que está establecida ||| function	count=1
function_name	determinará el tipo mime ||| type to mime type	count=1
return	o y creando ||| bool	count=1
function_name	acumulación ||| aggregate	count=1
function_name	entrenamiento desde una ||| train from callback	count=2
arg_pair	o ambos por ||| int $fetchtype	count=1
namespace	glifos que están ||| function	count=1
function_name	de ||| gettype	count=1
function_name	escala las [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	versión actual de solr ||| solr version	count=1
arg_pair	el índice especificado por ||| mixed $index	count=1
function_name	devuelve lo ||| get	count=1
function_name	notificación ||| notify	count=1
arg_pair	para poder utilizarlo con ||| string $encoding string $separator	count=1
function_name	calcula la intersección ||| uintersect	count=1
function_name	los permisos del ||| eio fchmod	count=1
return	ha ||| bool	count=1
function_name	de datos informix ||| ifx	count=1
function_name	número de columna ||| column	count=1
function_name	es el espacio de ||| default namespace	count=1
namespace	temporal ||| function	count=1
function_name	de oracle client almacenará ||| oci	count=1
function_name	en el buffer ||| buffer	count=1
arg_pair	object ||| object $object	count=1
function_name	potencia de ||| pow	count=1
function_name	analiza datos ||| parse	count=1
arg_pair	de un proxy y ||| resource $proxy	count=1
namespace	por esta ||| function	count=1
function_name	sybase_connect() ||| sybase	count=1
namespace	integer que ||| function	count=1
function_name	de aql embebido dentro ||| rquery	count=1
function_name	de interoperabilidad ||| create default stub	count=1
return	similares ||| mongocursor	count=1
arg_pair	capas ||| zmqsocket $frontend	count=1
function_name	el valor actual del ||| checkbox set value	count=1
function_name	rellena la ruta actual ||| fill stroke	count=1
arg_pair	se especifique ||| string $destination mixed $entries	count=1
function_name	url de conexión que ||| set location	count=1
arg_pair	de secuencia de ||| resource $imap_stream	count=1
function_name	pg_send_execute() ||| pg	count=1
arg_pair	el identificador de resultado ||| resource $result	count=1
function_name	de color especificado como ||| color value	count=1
function_name	de una entrada de ||| filesize	count=1
function_name	verificar las extensiones de ||| spl autoload extensions	count=1
function_name	imagen de tesela para ||| imagesettile	count=1
function_name	establece el algoritmo ||| set training algorithm	count=1
arg_pair	por path ||| string $path	count=1
function_name	semáforo ||| sem acquire	count=2
function_name	de ||| fann	count=1
function_name	bézier desde el ||| pdf curveto	count=1
function_name	el número de tendencias ||| get bias	count=1
namespace	note que esta ||| function	count=1
arg_pair	conexión actual ||| string $charset resource $link_identifier	count=1
function_name	crea un efecto ||| raiseimage	count=1
function_name	una ||| uasort	count=1
function_name	adición del parámetro de ||| imagecolorallocatealpha	count=1
arg_pair	codificación de ||| string $encoding	count=1
function_name	menos ||| set	count=1
namespace	obtiene la distancia ||| harufont	count=1
arg_pair	x509cert proporcionado ||| bool $shortnames	count=1
function_name	analiza ||| mb parse str	count=2
arg_pair	relation al dado ||| resource $relation	count=1
function_name	tesela para usarse con ||| imagesettile	count=1
function_name	de ldap ||| ldap add	count=1
function_name	mediante uuencode ||| uudecode	count=1
function	el registro [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	el tamaño ||| filesize	count=2
function_name	escalar datos en ||| fann scale input	count=2
arg_pair	campo es decir ||| int $face string $filename	count=1
function_name	devuelve el número de ||| row count	count=1
return	u otros caracteres ||| string	count=1
namespace	todos los servidores de ||| gearmanclient	count=1
namespace	los colores ||| function	count=1
function_name	[function_name_1] del paquete ||| [function_name_2] [function_name_1]	count=4
arg_pair	una estructura de ||| int $num_data int $num_input	count=1
function_name	del cursor: si ||| count	count=1
function_name	número de patrones de ||| fann length	count=1
function_name	de página abiertos ||| pdi	count=1
return	intenta eliminar ||| string	count=1
arg_pair	y el secreto para ||| string $token string $token_secret	count=1
arg_pair	string str a la ||| string $str	count=1
function_name	definida por el ||| uksort	count=1
arg_pair	archivo virtual ||| string $filename	count=1
arg_pair	reflejada ||| mixed $argument	count=1
namespace	calcula el nivel de ||| function	count=2
arg_pair	hasta maxlength bytes ||| resource $handle int $maxlength	count=1
function_name	token de ||| token	count=1
namespace	o subsiguiente fichero ||| sdo_das_xml	count=1
function_name	una imagen [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	botón tridimensional ||| int $width int $height	count=1
function_name	realiza una búsqueda ||| search	count=1
function_name	acción con parámetros ||| proxy action	count=1
arg_pair	transformaciones con xsltprocessor ||| string $namespace	count=1
function_name	condición para ||| condition	count=1
namespace	posición del apuntador interno ||| seekableiterator	count=1
function_name	la puesta de sol ||| date sunset	count=1
arg_pair	assoc_array en valores adecuados ||| array $assoc_array int $options	count=1
function_name	buferizado ||| buffer set	count=1
function_name	menos tantos ||| min doc	count=1
function_name	la activación ||| activation	count=1
function	[function_name_1] oid ||| [arg_pair_2] [function_name_1]	count=8
function_name	lista ||| memory	count=1
function_name	el objeto respuesta ||| response	count=1
arg_pair	en el argumento offset ||| resource $lob_identifier int $offset	count=1
function_name	filas de ||| num rows	count=1
arg_pair	esta función ||| string $filename string $destination	count=1
return	la salida estándar en ||| bool	count=1
function_name	de la primera ||| first	count=1
function_name	una lista de ||| list dicts	count=1
arg_pair	secuencia imap ||| int $flag	count=1
function	socket_sendto() [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	es el espacio de ||| is	count=1
function_name	que file_get_contents() devuelve el ||| file get contents	count=1
arg_pair	de listas desordenadas ||| string $par1	count=1
function_name	candidatas ||| cascade candidate	count=1
function_name	[function_name_1] el entrenamiento ||| [function_name_2] [function_name_1]	count=4
function_name	descripción de la ||| cairo pattern create linear	count=1
function_name	devuelve ||| apd get	count=1
return	devuelve el tamaño ||| int	count=1
namespace	sobre ||| function	count=2
function_name	devuelve el producto ||| product	count=1
function_name	información sobre ||| openssl	count=1
arg_pair	una tarea ||| mixed $context	count=4
function_name	pendientes ||| steepnesses	count=2
function_name	tantos ||| mlt min	count=1
namespace	por el usuario ||| arrayiterator	count=2
arg_pair	plaintext con las llaves ||| string $plaintext	count=1
arg_pair	una nueva instancia de ||| string $url	count=1
function_name	archivos de ||| dbplus	count=1
namespace	clave usando ||| arrayiterator	count=1
return	de mensaje ||| zmqsocket	count=1
arg_pair	el secreto para ||| string $token string $token_secret	count=1
namespace	la frecuencia en ||| solrquery	count=1
namespace	número octal representado por ||| function	count=1
arg_pair	arrays al ||| array $array1 mixed $array1_sort_order	count=1
function	rodea [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de filas en el ||| sybase num rows	count=1
arg_pair	actual en una búsqueda ||| string $msgid2	count=1
arg_pair	un fichero de definición ||| string $filename	count=1
function_name	función definida por el ||| func	count=1
function_name	descripción de ||| cairo scaled font create	count=1
namespace	del id ||| mongoid	count=1
namespace	una excepción de ||| rarexception	count=1
function_name	la frecuencia ||| doc	count=1
function_name	ms sql ||| mssql	count=1
function_name	máximo de ||| max analyzed chars	count=1
function_name	la descripción de la ||| add color stop rgb	count=1
function_name	el logo de php ||| logo guid	count=1
function_name	descripción de ||| cairo font face get	count=1
function_name	de tendencias ||| bias	count=1
function_name	nivel mínimo ||| min message	count=1
arg_pair	html y php ||| resource $handle	count=1
arg_pair	se puede especificar un ||| string $field string $field_override	count=1
function_name	una transacción ||| commit	count=1
return	de direcciones servicios ||| zmqsocket	count=1
function_name	se ||| fdf set	count=1
function_name	el número máximo ||| max	count=5
arg_pair	del ||| resource $psdoc	count=1
function_name	devuelve una lista ||| enchant broker list dicts	count=1
arg_pair	[arg_pair_1] de pattern ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=3
namespace	apariencia de ||| harudestination	count=1
function_name	escapa un ||| escape	count=1
namespace	a ||| gmagickpixel	count=1
namespace	de filas de ||| sqlite3	count=1
namespace	actual medido como ||| function	count=1
function_name	[function_name_1] datos clob ||| [function_name_1] [function_name_2]	count=1
arg_pair	por el offset especificado ||| int $offset int $initial_value	count=1
function_name	calcular los parámetros ||| params	count=2
function_name	devolverá la lista ||| odbc	count=1
function_name	una [function_name] por lo ||| [function_name]	count=1
function_name	imagen obtenida ||| imagecreatefromxpm	count=1
function_name	definición de color dada ||| color content	count=1
return	crea una ||| resource	count=1
namespace	que ||| sdo_das_xml	count=1
function_name	sentencia sql en ||| exec	count=1
function_name	string de ||| generate token	count=1
arg_pair	result set especificado ||| resource $result	count=1
namespace	devuelve un entero ||| ev	count=1
function_name	un diff ||| diff	count=1
arg_pair	listas desordenadas ||| string $achtung_wild	count=1
function_name	blob en modo lectura ||| ibase blob	count=1
function	algoritmo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	glo [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	objetivo target existente con ||| string $target	count=1
function_name	seguridad del sumario ||| highlight alternate	count=1
function_name	capa ||| pdf define layer	count=1
function_name	[function_name_1] al macenado ||| [function_name_1] [function_name_2]	count=3
function_name	última sentencia [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	un valor de un ||| mixed	count=1
function_name	argumento es ||| using exceptions	count=1
arg_pair	modo wsdl ||| mixed $wsdl	count=1
arg_pair	desde el ||| string $content string $mimetype	count=1
function_name	se ||| add	count=1
function_name	de una ||| zip entry filesize	count=1
arg_pair	carácter unicode por ||| int $namechoice	count=1
arg_pair	con un umbral de ||| float $threshold int $channel	count=1
return	servidores de trabajo para ||| bool	count=1
function_name	[function_name_1] xmlrpc base64 ||| [function_name_2] [function_name_1]	count=4
return	un string con barras ||| string	count=1
arg_pair	excepto que las retrollamadas ||| array $patterns_and_callbacks	count=1
function_name	función mssql_free_statement() si existe ||| statement	count=1
namespace	mediante uuencode ||| function	count=1
function_name	id de ||| get	count=1
namespace	del conjunto en ||| quickhashintset	count=1
function	[function_name_1] el algoritmo ||| [function_name_1] [arg_pair_2]	count=2
function_name	la acción ||| gupnp service proxy action	count=1
function_name	de secuencia de mensaje ||| imap	count=1
function_name	recibe todas las cabeceras ||| headers	count=1
function_name	otros ||| ltrim	count=1
arg_pair	gettext() ||| string $msgid1	count=1
return	error cuando la ||| void	count=1
arg_pair	uno dos o ||| float $number	count=1
function_name	especial indicando error ||| using exceptions	count=1
function_name	[function_name_1] de términos ||| [function_name_1] query [function_name_2]	count=1
function_name	file_get_contents() devuelve ||| file get contents	count=2
function_name	obtiene [function_name_2] ||| [function_name_1] extension [function_name_2]	count=3
arg_pair	mensaje dado ||| int $msg_number	count=1
function_name	entonces en lugar de ||| set	count=1
function_name	color especificado como un ||| get color	count=1
function_name	0 o más marcadores ||| db2 prepare	count=1
return	estado del ||| int	count=1
function_name	columna actual para el ||| get current column	count=1
function_name	raíz cuadrada de ||| sqrt	count=1
function_name	deshabilitar ||| unregister	count=1
return	después de ||| void	count=1
function_name	el código de error ||| curl	count=1
arg_pair	en signed_text y ||| string $signed_text	count=1
function_name	fuente usada ||| getfont	count=1
function_name	biblioteca cliente de db++ ||| dbplus	count=1
function_name	se ||| open memory image	count=2
arg_pair	efecto de botón ||| int $width int $height	count=1
arg_pair	un archivo ||| resource $filehandle int $startpos	count=1
function_name	devolverá ||| odbc	count=1
function_name	un guid ||| guid string	count=1
function_name	glifo en puntos ||| ps symbol	count=1
namespace	la imagen ||| imagick	count=3
function_name	[function_name] asíncrona ||| pgsql get [function_name]	count=3
arg_pair	del texto que lee ||| int $length	count=1
arg_pair	a la de memcached::getmulti() ||| int $flags	count=1
arg_pair	por el offset especificado ||| resource $context int $offset	count=1
function_name	calcula el coseno hiperbólico ||| cosh	count=1
arg_pair	apunta a un array ||| resource $statement	count=1
return	reciente ||| int	count=1
return	al ||| void	count=7
function_name	como ps_lineto() ||| ps stroke	count=1
arg_pair	la función cubrid_connect() ||| string $passwd bool $new_link	count=1
function	simple línea [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
function_name	imagen de ||| image	count=2
function_name	descriptor de ||| dio	count=1
function_name	incluir ||| set terms include	count=2
function_name	transacción xa ||| mysqlnd ms xa	count=1
function_name	exporta el ||| spki export	count=1
function_name	busca el siguiente ||| next	count=1
arg_pair	este método encuentra ||| string $ns bool $is_prefix	count=1
arg_pair	datos incrementalmente al interior ||| resource $mimemail string $data	count=1
arg_pair	la de memcached::getmulti() con ||| string $cas_tokens int $flags	count=1
arg_pair	un rectángulo comenzando ||| resource $image int $x1	count=1
return	mediante el uso de ||| array	count=1
function_name	el primer atributo de ||| ldap first attribute	count=1
return	tamaño actual de ||| int	count=1
function_name	módulos cargados ||| modules	count=1
return	aparecen en el ||| string	count=1
arg_pair	un ||| resource $ann array $input	count=1
function_name	de datos dbase con ||| dbase	count=1
arg_pair	de pajar incluyendo la ||| string $haystack	count=1
function_name	elimina el fichero ||| delete	count=1
return	emplearse virtualmente en ||| bool	count=1
namespace	imagen jpeg o tiff ||| function	count=1
return	y sólo ||| void	count=1
function_name	[function_name_1] nodo ||| [function_name_1] [function_name_2]	count=4
arg_pair	aclarando y ||| int $height	count=1
function_name	espaciado entre palabras del ||| interword spacing	count=1
arg_pair	rellena un archivo ||| string $base_dir string $regex	count=1
arg_pair	en el modo de ||| int $mode	count=1
function_name	abre un blob ||| blob	count=1
function_name	entrada ||| zip entry	count=2
arg_pair	e inicializa sus parámetros ||| int $from_neuron	count=1
namespace	de ømq pueden ||| zmqdevice	count=1
arg_pair	parecida a sybase_connect() ||| string $charset	count=1
namespace	un trabajo ||| gearmanworker	count=1
function_name	la imagen ||| contrast image	count=1
arg_pair	el parámetro flatness ||| float $flatness	count=1
arg_pair	dibujar imágenes de ||| resource $image bool $blendmode	count=1
function_name	de verificación crc32() ||| crc32	count=1
function_name	del cliente ||| client identifier	count=1
function_name	de candidatas ||| get cascade	count=1
function_name	desde un ||| from	count=1
arg_pair	input identificado por la ||| array $input	count=1
function_name	sobre un socket creado ||| socket	count=1
function_name	el nombre corto para ||| id3 get frame short name	count=1
function_name	-- zguide ||| construct	count=1
namespace	función devolverá la lista ||| function	count=1
arg_pair	un punto ||| mixed $codepoint	count=1
function_name	cuando ||| using exceptions	count=2
function_name	[function_name_1] color de ||| [function_name_2] [function_name_1]	count=1
function_name	de emitir advertencias y ||| set using exceptions	count=1
arg_pair	number representado en ||| int $frombase	count=1
function_name	registra ||| register	count=3
arg_pair	cadena str con un ||| string $str	count=1
function_name	[function_name_1] frontbase ||| [function_name_2] [function_name_1]	count=6
return	string con ||| string	count=3
function_name	documento xml desde ||| xml	count=1
namespace	una cadena de ||| function	count=1
arg_pair	indicando ||| string $actor string $details	count=1
arg_pair	cada señal ||| int $signal	count=1
function_name	a mayúsculas ||| strtoupper	count=1
namespace	como por ejemplo el ||| function	count=1
function_name	array multi-dimensional [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] registradas __autoload ||| [function_name_2] [function_name_1]	count=8
function_name	siguiente índice ||| next	count=1
function_name	devuelve un identificador único ||| spl object hash	count=1
function_name	textual en ||| yaz	count=1
arg_pair	la entrada proporcionada ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	[function_name_1] de fecha ||| [function_name_2] [function_name_1]	count=3
arg_pair	ligeras que se identificaron ||| resource $connection string $client_identifier	count=1
function_name	paso [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	impresión ||| pos	count=1
function_name	la extensión ||| to extension	count=1
function_name	bytes o false si ||| is	count=1
namespace	del inicio de un ||| function	count=1
function_name	blob en modo lectura ||| ibase blob echo	count=1
function_name	grupos del proceso actual ||| posix getgroups	count=1
function_name	de ||| set slide	count=3
function_name	obtiene el nombre ||| get	count=5
function_name	probabilística ||| gmp	count=1
function_name	los datos dados ||| temporary	count=1
namespace	copia realizado [namespace] la función ||| [namespace]	count=1
return	de emitir advertencias ||| void	count=1
function_name	la severidad ||| severity	count=1
function_name	los parámetros de escala ||| scaling params	count=2
function_name	encuentre un ||| using	count=1
function_name	sintaxis lint pelusa en ||| runkit lint file	count=1
function_name	seno hiperbólico para cada ||| trader sinh	count=1
function_name	mediante el ||| status	count=1
function_name	palabras que no ||| mlt min	count=1
namespace	servidor que está asociado ||| function	count=1
function_name	base de ||| fbsql start db	count=1
function_name	[function_name_1] comentario de ||| [function_name_1] [function_name_2]	count=1
arg_pair	subject coincidencias ||| mixed $subject	count=1
function_name	error de [function_name_2] ||| [function_name_2] step [function_name_1]	count=2
function_name	afectadas por ||| fbsql affected	count=1
arg_pair	msglist al buzón especificado ||| resource $imap_stream string $msglist	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] last response [function_name_2]	count=2
function_name	van ||| set start	count=2
namespace	la ||| serializable	count=1
function_name	descripción de la ||| cairo scaled font get	count=2
return	fichero de esquema ||| void	count=1
arg_pair	agua digital dentro ||| imagick $watermark_wand int $offset	count=1
function_name	respuesta sin tratar del ||| get raw response	count=1
function_name	apuntador de archivo ||| uudecode	count=1
namespace	de relleno usado ||| gmagickdraw	count=1
function_name	punto blanco de la ||| white point	count=1
function_name	tipo mime ||| mime type	count=3
function_name	directorio virtual actual ||| dbplus	count=1
return	que es una ||| mixed	count=1
function_name	calcula el ancho de ||| width	count=1
function_name	de ||| filesize	count=2
arg_pair	una ||| resource $pxdoc string $name	count=1
arg_pair	coniciden con el patrón ||| bool $only_names	count=1
function_name	si la función es ||| is	count=1
function_name	el nombre del ||| by name	count=1
function_name	raíz cuadrada ||| sqrtrem	count=1
function_name	entrenamiento ||| set train	count=1
function_name	descripción ||| cairo surface create similar	count=1
function_name	para los eventos ||| set	count=1
function_name	número ||| set	count=1
return	y cualquier barra ||| string	count=1
return	mientras ||| gmagick	count=1
function_name	en blanco u ||| ltrim	count=1
function_name	devuelve ||| imap	count=1
namespace	o del ||| function	count=1
return	aplicarse a ||| void	count=1
return	le ||| int	count=1
function_name	subsiguiente fichero de esquema ||| add	count=1
namespace	dbplus_open() ||| function	count=1
function_name	acl ||| imap getacl	count=2
function_name	libera los recursos del ||| db2 free	count=1
function	escapa [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la descripción ||| cairo font options get hint style	count=1
function_name	punto de control de ||| control point callback	count=1
function_name	obtiene información ||| error get	count=1
function_name	[function_name_1] de conexión ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] copyright de ||| [function_name_2] [function_name_1]	count=1
return	obtener el elemento ||| mixed	count=1
function_name	el nombre de la ||| function name	count=1
function_name	tantos ||| min	count=1
arg_pair	miller-rabin para revisar ||| gmp $a int $reps	count=1
function_name	analizada ||| strptime	count=1
function_name	[function_name] función ||| [function_name]	count=2
function_name	[function_name_1] atributo dado ||| [function_name_1] [function_name_2]	count=1
arg_pair	una combinación de códigos ||| string $country_code string $region_code	count=1
function_name	un array multi-dimensional ||| all	count=1
namespace	nodo ||| tidynode	count=1
function_name	petición http ||| apache request	count=1
function_name	formateador ||| highlight formatter	count=2
function_name	obtiene ||| get stream	count=2
function_name	obtiene el estilo de ||| get	count=1
function_name	[function_name_1] valor gamma ||| [function_name_1] image [function_name_2]	count=1
function_name	nombre [function_name_2] ||| function string fdf [function_name_2] field [function_name_1] resource $fdf_document string $fieldname	count=1
arg_pair	cuenta ||| int $index_end	count=1
function_name	el certificado y su ||| openssl pkcs7 sign	count=1
function_name	las flags a ser ||| flags	count=1
return	del puntero interno ||| bool	count=1
arg_pair	memcached::getmulti() con ||| int $flags	count=1
function_name	de iso ||| isocontrol	count=1
return	nombre en ||| bool	count=1
arg_pair	una ||| string $collection	count=1
function_name	sobre la utilización de ||| win32 ps stat mem	count=1
arg_pair	un ||| resource $pxdoc resource $file	count=1
return	y la cadena ||| array	count=1
function	[function_name_1] cadena de ||| [arg_pair_2] [function_name_1]	count=1
function_name	establece el número de ||| set mlt count	count=1
function_name	el nombre largo ||| get frame long name	count=1
arg_pair	asocia el ||| int $cols int $rows	count=1
function_name	elimina una ||| shm remove	count=1
function_name	multi-dimensional con información detallada ||| all info	count=1
function_name	coseno del ||| cos	count=1
function_name	el atributo tipo ||| type	count=1
function_name	[function_name_1] nombre unicode ||| [function_name_1] property [function_name_2]	count=1
arg_pair	el argumento offset ||| int $offset	count=1
function_name	fecha dada ||| date parse from	count=1
arg_pair	imágenes ||| resource $image	count=1
function_name	en fann_get_cascade_candidate_stagnation_epochs() ||| change fraction	count=1
return	en la pila ||| bool	count=1
arg_pair	de una base ||| resource $pxdoc	count=1
arg_pair	la información dad a ||| array $record	count=1
function_name	crea [function_name_2] ||| function int [function_name_2] [function_name_1] string $language string $spelling	count=2
function_name	sintaxis lint pelusa ||| runkit lint file	count=1
arg_pair	el [arg_pair] ||| [arg_pair]	count=10
function_name	de la estructura ||| fetchstructure	count=1
namespace	clausura a ||| closure	count=1
function_name	cubrid_col_size() [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	valor ||| mixed $bordercolor int $x	count=2
namespace	de acceso a ||| function	count=1
function_name	intento de ||| db2 conn	count=1
namespace	establece cómo se ||| function	count=1
function_name	todas las bases ||| dbs	count=1
arg_pair	y socket. -- zguide ||| zmqsocket $frontend	count=1
arg_pair	que fgetss() intenta ||| resource $handle	count=1
function_name	de tendencias de ||| get bias	count=1
function_name	biblioteca unrar encuentre un ||| exceptions	count=1
arg_pair	elementos de un ||| resource $pdfdoc	count=1
arg_pair	una ||| string $width	count=1
function_name	por ||| min	count=1
return	seguimiento tailable que son ||| mongocursor	count=1
arg_pair	función proporcionada por ||| callable $user_function	count=1
arg_pair	caracteres desde un ||| resource $font_index	count=1
function_name	preparar la respuesta ||| response	count=1
function_name	fila insertada ||| insert	count=1
function_name	definición de color ||| ncurses color content	count=1
function	guarda [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	escribe ||| eio write	count=2
return	esté en la ||| bool	count=1
arg_pair	basado en des de ||| string $str	count=1
function_name	lista de ||| data	count=1
function_name	sólo si el argumento ||| set using	count=1
arg_pair	ancho del contorno acutales ||| float $ey	count=1
function_name	[function_name_1] xa ||| [function_name_1] [function_name_2]	count=1
return	en un cuarto ||| bool	count=2
return	ømq pueden hacer de ||| zmqsocket	count=1
function_name	disposición de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	[return] con ||| [return]	count=7
namespace	que se ||| function	count=8
return	http ||| array	count=1
function_name	final [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	cada servidor virtual ||| server	count=1
arg_pair	relation bajo un ||| resource $relation	count=1
function_name	la opción especificada ||| ldap get option	count=1
arg_pair	datos almacenados ||| string $key	count=1
function_name	indicado mediante el identificador ||| crack	count=1
function_name	escribe una ||| ifxus write	count=1
arg_pair	conexiones curl_multi ||| resource $mh	count=1
function_name	línea para ||| set line	count=1
arg_pair	a ||| resource $handle	count=1
function_name	tendencias de cada ||| fann get bias array	count=1
function_name	aumenta ||| inc	count=1
function_name	el número total ||| total space	count=1
function_name	los métodos [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	usa [return] obtener la ||| [return]	count=1
return	datos contenidos en ||| bool	count=1
function_name	supervisión del servicio ||| service ctrl dispatcher	count=1
function_name	[function_name_1] umbral del ||| [function_name_2] [function_name_1]	count=8
arg_pair	que devuelve un ||| resource $psdoc	count=1
arg_pair	[arg_pair_1] [arg_pair_2] del ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	borra los ||| delete	count=1
function_name	de emitir advertencias y ||| set using	count=1
function_name	utilización de ||| win32 ps stat mem	count=1
arg_pair	se usa para iterar ||| int $colnum	count=1
function_name	nodo representa sólo texto ||| is text	count=1
function_name	de la categoría general ||| char type	count=1
namespace	estado del cursor: ||| mongocursor	count=1
function_name	transacción [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	devuelve true si ||| mcrypt module is	count=1
function_name	traslada el ||| translate	count=1
function_name	cuya tangente hiperbólica es ||| atanh	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() durante el entrenamiento ||| int $max_neurons int $neurons_between_reports	count=1
return	genera y devuelve un ||| string	count=1
function_name	dado ||| uudecode	count=1
arg_pair	índice field ||| mixed $field	count=1
function_name	configuración [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	la descripción ||| cairo font options get subpixel order	count=1
function_name	no se da la ||| idate	count=1
function_name	número de versión menor ||| minorversion	count=1
function_name	el valor actual del ||| set value	count=1
function_name	clase [function_name_2] ||| bool [function_name_2] [function_name_1]	count=2
arg_pair	una página del ||| int $page	count=1
function_name	que las palabras ||| doc frequency	count=1
function_name	función devuelve el conjunto ||| cubrid get	count=1
function_name	lista de los ||| list	count=1
function_name	devuelve el contenido ||| get from	count=1
return	acepta ||| string	count=1
function_name	segundo o subsiguiente fichero ||| types	count=1
function_name	los encabezados ||| soap headers	count=1
function_name	vincular ||| bind array	count=1
function_name	en el servidor apache ||| apache	count=1
function_name	y ||| add data source	count=1
arg_pair	por form ||| resource $form	count=2
function_name	borra el archivo especificado ||| delete	count=1
function_name	valor de la propiedad ||| property	count=1
function	[function_name_1] proporcionado que ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	se ||| string $charset	count=1
namespace	comandos y logrando que ||| function	count=1
return	código de error ||| string	count=1
function_name	tiene derechos de autor ||| copyrighted	count=1
arg_pair	de datos blob/clob ||| resource $lob_identifier	count=1
return	como cursores de ||| mongocursor	count=1
arg_pair	se comporta ||| resource $p float $x	count=1
function_name	[function_name_1] de paginación ||| [function_name_1] [function_name_2]	count=7
function_name	del objeto blob ||| blob	count=1
function	intersección [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
function_name	única función ||| kernel	count=1
function	envía [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	descripción de ||| pattern add color stop rgb	count=1
arg_pair	un ||| string $value	count=1
function_name	excepto que file_get_contents() devuelve ||| get contents	count=1
function_name	del campo ||| field length	count=2
function_name	detiene el ||| stop	count=1
function_name	se puede escribir en ||| writable	count=1
namespace	la diferencia que ||| function	count=1
return	pueden hacer de ||| zmqsocket	count=1
function_name	por utf-8 a ||| utf8	count=1
arg_pair	[arg_pair_1] de texto ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	define el de ||| int $type float $disp_time	count=1
function_name	que han sido establecidas ||| options	count=1
function_name	los ||| addcslashes	count=1
return	versión ||| string	count=1
function	es usada [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	gestor de errores ||| error	count=1
function_name	añade ||| add record	count=2
function_name	resultado de ||| result	count=1
arg_pair	después de llamarla varias ||| resource $connection_id	count=1
function_name	elementos descendientes con unos ||| elements by tag name ns	count=1
namespace	de color ||| gmagick	count=1
function_name	conexión a un ||| connect	count=1
function_name	calcular los parámetros de ||| params	count=2
function_name	de dsn disponibles ||| data source	count=1
namespace	la ||| solrquery	count=2
return	o más ||| bool	count=1
return	al inicio del ||| void	count=1
function_name	[function_name_1] definición rra ||| [function_name_2] [function_name_1]	count=1
function_name	de la biblioteca cliente ||| client info	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] cipher [function_name_1]	count=3
function_name	einer mime ||| mime encode	count=1
function_name	y devolver un ||| set	count=1
arg_pair	full-duplex ||| int $how	count=1
return	de un ||| array	count=1
arg_pair	modo de acceso ||| int $pri	count=1
arg_pair	idéntica a fgets() ||| resource $handle int $length	count=1
function_name	flujos ||| stream	count=1
function_name	la descripción de ||| cairo format stride for width	count=1
function_name	y lo encripta ||| pkcs7 encrypt	count=1
return	e ||| array	count=1
arg_pair	la clave dada ||| array $query	count=1
namespace	por los argumentos ||| function	count=1
arg_pair	función invoca un ||| resource $id string $query	count=1
function_name	yaml de data proporcionada ||| yaml emit file	count=1
function_name	otra en el índice ||| compositeimage	count=1
function_name	adjunta otro ||| add kernel	count=1
arg_pair	el resultado en un ||| string $new_file2	count=1
namespace	oauth para las ||| oauth	count=1
function_name	devuelve la longitud ||| length	count=1
function_name	transparencia de ||| matte floodfill	count=1
arg_pair	unicode por su ||| int $namechoice	count=1
namespace	número ||| harupage	count=1
function_name	[function_name_1] argumentos ||| [function_name_1] [function_name_2]	count=2
function_name	callback definidos por el ||| control point browse	count=1
arg_pair	a un valor ||| resource $p float $g	count=1
arg_pair	de valores largos ||| int $threshold float $min_savings	count=1
function_name	argumento es true entonces ||| set using exceptions	count=1
function	[function_name_1] la ||| [arg_pair_2] [function_name_1]	count=1
function_name	colores ||| set	count=1
arg_pair	a una página ||| float $ury	count=1
arg_pair	dado ||| int $options string $ns	count=1
return	que contiene el ||| string	count=1
function_name	por lo menos tantos ||| set mlt min	count=1
function_name	nombre del campo ||| name	count=1
function	[function_name_1] left con ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	texto y ||| string $text string $optlist	count=1
arg_pair	intérprete ||| resource $parser callable $handler	count=4
arg_pair	definición de ||| int $options	count=1
namespace	aparecen en el parámetro ||| function	count=1
arg_pair	propiedades correspondientes a los ||| int $row	count=1
function_name	oracle pl/sql ||| oci	count=1
function_name	añade ||| add file	count=2
function_name	reemplaza los valores ||| array replace	count=1
arg_pair	prepara para una solicitud ||| resource $id	count=1
function_name	ignoradas ||| min doc	count=1
function_name	palabras que no ||| min	count=1
function_name	destino con ||| add nameddest	count=1
arg_pair	asocia ||| int $cols	count=1
function_name	de ||| gmp	count=1
namespace	las áreas de ||| function	count=1
arg_pair	plural de ||| string $msgid1 string $msgid2	count=1
function_name	el iterador a la ||| iterator	count=1
arg_pair	thickness ||| int $thickness	count=1
function_name	como este serán ignoradas ||| set	count=1
function_name	argumentos pasados ||| args	count=1
function_name	y ||| set using	count=2
arg_pair	nuevo par clave-valor ||| mixed $value	count=1
namespace	servicios colas ||| zmqdevice	count=1
function_name	datos del apuntador ||| uudecode all	count=1
function_name	multibyte ||| mb	count=1
function_name	devuelve [function_name_2] ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=4
arg_pair	se ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	por ||| mlt min doc	count=1
function_name	las diferentes opciones ||| assert options	count=1
function_name	función usa la prueba ||| gmp	count=1
namespace	fgets() excepto que fgetss() ||| function	count=1
namespace	a minúsculas o ||| function	count=1
arg_pair	un alas ||| string $name string $value	count=1
function_name	el mismo [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	el modo ||| int $pri	count=1
arg_pair	offset a ||| string $offset	count=1
function_name	remueve uno ||| mod del	count=1
arg_pair	propiedad hwnd en ||| int $window_handle	count=1
arg_pair	un nuevo par clave-valor ||| mixed $value	count=1
function_name	borrar un servicio de ||| delete	count=1
namespace	rutas definidas mediante configuraciones ||| yaf_router	count=1
function_name	[function_name_1] [function_name_2] un objeto datetime de ||| mongodate datetime [function_name_2] [function_name_1]	count=1
namespace	que es parte de ||| function	count=1
arg_pair	colores que ||| int $colorspace	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $database [arg_pair_2]	count=6
function_name	elimina el documento ||| delete	count=1
arg_pair	codificación de ||| resource $fdf_document string $encoding	count=1
function_name	que ambos puedan ||| add	count=1
namespace	color de relleno ||| gmagickdraw	count=1
function_name	el número máximo de ||| mlt max num	count=1
arg_pair	está en formato csv ||| string $delimiter string $enclosure	count=1
function_name	contenido del recurso curl ||| curl	count=1
arg_pair	define el contenedor ||| string $frame_name	count=1
arg_pair	es una interfaz ||| string $collection	count=1
arg_pair	un string con glue ||| string $glue	count=1
return	o desbloquea el ||| bool	count=1
return	devuelve ||| int	count=8
function_name	lista ||| list dicts	count=2
function_name	información blob/clob de ||| cubrid lob export	count=1
function_name	el buzón ||| imap	count=3
arg_pair	de estilo de ||| int $type float $disp_time	count=1
arg_pair	es una implementación ||| string $value	count=1
namespace	devuelve ||| function	count=7
function_name	almacena ||| compile file	count=1
function_name	entero solrquery::facet_sort_index ||| facet sort	count=1
namespace	para este método ||| reflectionmethod	count=1
arg_pair	de un texto freetype ||| string $fontfile string $text	count=1
namespace	es primo ||| function	count=1
function_name	posiciona el cursor ||| move to element	count=1
function_name	resultado de mysql ||| mysql data	count=2
function_name	fichero de ||| add	count=1
arg_pair	de memcached::getmulti() con ||| int $flags	count=1
function_name	http en la solicitud ||| request	count=1
function_name	establecer el id de ||| id	count=1
function_name	antepone un ||| prepend	count=1
function	codifica el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	rango especificado de páginas ||| int $first_num string $prefix	count=1
function	[function_name_1] una ||| [function_name_1] page ext [arg_pair_2]	count=1
function_name	[function_name_1] error ||| [function_name_2] [function_name_1]	count=15
function_name	esquema en ||| add types	count=1
function_name	la cabecera ||| header	count=1
function_name	la cadena ||| load	count=1
arg_pair	datos disponible como ||| int $offset	count=1
function_name	tendencias ||| fann get bias	count=1
function_name	posición para la impresión ||| pos	count=1
arg_pair	una y devuelve ||| string $new_data2	count=1
namespace	hilo referenciado ||| thread	count=1
function_name	descripción de ||| ps surface create	count=1
function_name	de la fecha ||| date parse from format	count=1
function_name	que está el campo ||| field	count=1
namespace	dentro del objeto domnamednodemap ||| domnamednodemap	count=1
namespace	de los perfiles ||| gmagickdraw	count=1
function_name	esta función ||| memory	count=1
arg_pair	cres un nuevo ||| string $contents	count=1
function_name	intermediarios de ||| construct	count=1
return	de secuencia de mensaje ||| int	count=1
function_name	la descripción de ||| cairo surface	count=5
return	tipo de ||| int	count=1
function_name	archivos o partición ||| disk	count=1
namespace	imagen soportados por ||| function	count=1
function_name	de datos lob de ||| db2 lob	count=1
function_name	que ambos puedan aplicarse ||| kernel	count=1
arg_pair	de una imagen ||| string $filename	count=1
function_name	límite del recurso ||| limit	count=1
function_name	consulta única no están ||| query	count=1
function_name	[function_name_1] género correspondiente ||| [function_name_2] [function_name_1]	count=4
function_name	o filtro ||| kernel	count=1
function_name	está definida o no ||| in	count=1
function_name	representación ||| serialize	count=1
arg_pair	las retrollamadas se ||| array $patterns_and_callbacks	count=1
function_name	estructura de entrenamiento en ||| train	count=1
return	actual y escribe ||| int	count=1
function_name	gearmanclient::do() ||| do	count=1
return	y lo ||| array	count=2
function_name	usar ||| setfontweight	count=1
return	de error dado ||| string	count=1
return	la versión plural ||| string	count=1
function_name	espera de ||| cubrid set query timeout	count=1
namespace	método no afecta ||| mongocursor	count=1
function_name	objeto respuesta ||| response	count=1
function_name	codificación de ||| convert encoding	count=1
function_name	de ||| sybase pconnect	count=2
return	lista de ||| int	count=1
function_name	segmento de datos lob ||| db2 lob read	count=1
namespace	cualquier código que ||| function	count=1
arg_pair	fichero que contiene una ||| int $dictionary_link string $file	count=1
arg_pair	nth de a y ||| int $nth	count=1
return	error informix asociado con ||| string	count=1
arg_pair	una ||| string $name	count=13
arg_pair	signed_text y retorna ||| resource $identifier string $signed_text	count=1
namespace	de direcciones servicios colas ||| zmqdevice	count=1
function_name	obtiene el ||| get basename	count=1
return	devuelto por el ||| string	count=1
function	[function_name_1] relation ||| [function_name_1] first [arg_pair_2]	count=1
function_name	envío ||| odbc autocommit	count=2
function_name	la relevancia del término ||| mlt boost	count=1
return	el directorio ||| string	count=1
arg_pair	cubrid_set_query_timeout() se usa ||| resource $req_identifier int $timeout	count=1
function_name	la combinación de entrelazado ||| getimageinterlacescheme	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] restore [arg_pair_2]	count=8
function_name	punto primario azul de ||| blue primary	count=2
function_name	encuentre un ||| exceptions	count=1
arg_pair	simple archivo ||| string $filename	count=1
return	a este ||| int	count=1
arg_pair	puerto nombre de ||| string $host int $port	count=1
function_name	canal de color especificado ||| get color	count=1
arg_pair	log_cmd_update ||| array $protocoloptions	count=1
function_name	datos lob ||| lob	count=1
function_name	advertencia esta función ||| memory image	count=1
function_name	usa la ||| gmp prob prime	count=1
function_name	que se pulse ||| newt wait for key	count=1
namespace	por ||| arrayiterator	count=2
function_name	el nodo ||| node	count=1
arg_pair	rota el sistema de ||| float $phi	count=1
function_name	de reescritura establecidas previamente ||| rewrite	count=1
arg_pair	el modo ||| bool $mode	count=1
function	repositorio indicado [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	[function_name_1] de épocas ||| [function_name_1] output stagnation [function_name_2]	count=1
namespace	es el espacio ||| domnode	count=1
arg_pair	stack ||| string $stack string $offset	count=1
function_name	el tamaño y el ||| size offset	count=1
function_name	excepciones anterior ||| exception handler	count=1
function_name	o no iterable ||| iterateable	count=1
function_name	función ||| gmp prob prime	count=2
function_name	una única fila ||| fetch	count=1
function_name	la descripción ||| cairo surface get	count=3
function_name	desplegar el logo de ||| logo	count=1
return	el valor ||| void	count=2
function_name	el mismo [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	un simple archivo ||| string $filename	count=1
function_name	de recodificación dada ||| recode file	count=1
function_name	de reintentos ||| retry count	count=1
function_name	columna devuelta ||| db2	count=1
function_name	la biblioteca unrar ||| using exceptions	count=1
function_name	incorporación ||| use krfonts	count=1
arg_pair	establece una ||| string $character_set	count=1
function	un campo [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=1
function_name	ignoradas ||| set mlt min doc frequency	count=2
function_name	el nombre del paquete ||| package name	count=1
function_name	un ||| field boost	count=1
function_name	obtiene el ancho del ||| get	count=1
arg_pair	idéntica a fgets() ||| int $length	count=1
function_name	este serán ||| set mlt min doc	count=1
arg_pair	de versiones estandarizados de ||| string $version1 string $version2	count=1
arg_pair	datos de un ||| resource $statement mixed $field	count=1
function_name	donde ||| dbplus chdir	count=2
arg_pair	una imagen ||| resource $pdfdoc	count=1
function_name	método de disposición ||| setimagedispose	count=1
arg_pair	devuelve una matriz asociativa ||| string $date	count=1
function_name	una región [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	cursor: si todavía ||| count	count=1
function_name	crea una nueva instancia ||| create entity	count=1
arg_pair	actual del recurso checkbox ||| resource $checkbox string $value	count=1
function_name	archivo codificado mediante uuencode ||| mailparse uudecode	count=1
function_name	cancela ||| eio grp cancel	count=1
arg_pair	database especificada ||| string $database	count=1
function_name	campo ||| ibase field	count=1
function_name	devuelve el estado de ||| get state	count=1
arg_pair	una nueva entrada ||| int $key	count=2
function_name	párametro ||| odbc cursor	count=1
function_name	por defecto de entidades ||| libxml set external entity	count=1
function_name	salidas de cada ||| output	count=1
function_name	de estado del ||| task status	count=1
namespace	contraposición ||| reflectionfunctionabstract	count=1
function_name	plano y ||| ncurses	count=1
return	de la ||| bool	count=3
namespace	por la dirección ||| function	count=1
function_name	[function_name_1] null ||| [function_name_2] [function_name_1]	count=1
function_name	descripción de ||| surface get	count=2
function_name	obtiene el nombre base ||| get basename	count=1
function_name	primera llamada a ingres_query() ||| ingres	count=1
arg_pair	[arg_pair_1] línea discontinua ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	y escribe [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	archivo rrd desde ||| rrd	count=1
function_name	del espacio del color ||| get color space	count=1
namespace	si el argumento es ||| rarexception	count=1
function_name	alertas de accesibilidad ||| access count	count=1
function_name	variables [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	una ||| int $columns int $rows	count=1
namespace	t tal que ||| function	count=1
function_name	devuelve las banderas ||| flags	count=1
function_name	diccionario indicado ||| crack closedict	count=1
function_name	entrenamiento continuar ||| fann get cascade	count=1
function_name	de conexión en ||| yaz connect	count=1
arg_pair	número ||| resource $imap_stream	count=1
function_name	que ||| close	count=2
function_name	de capa ||| pdf define layer	count=1
function_name	el descenso vertical de ||| descent	count=1
function_name	límite del ||| limit	count=1
namespace	devolverá la ||| function	count=1
function_name	la prueba automática sobre ||| module self test	count=1
arg_pair	definición de una cadena ||| int $options	count=1
function_name	escala las entradas ||| fann scale input	count=3
function_name	campos ||| fetch field	count=4
namespace	agregar parámetros ||| oauthprovider	count=1
return	los nombres de todos ||| array	count=1
return	como el número ||| int	count=2
function_name	de la opción ||| sock opt	count=1
namespace	final en el ||| splfileobject	count=1
function_name	los [function_name] ||| [function_name]	count=1
return	sobre la ||| mixed	count=1
return	de estilo ||| bool	count=1
function_name	nombre [function_name_2] ||| elements by [function_name_2] [function_name_1]	count=3
function_name	lista de parámetros ||| ps	count=1
function_name	el nombre de etiqueta ||| by tag name	count=1
return	previa [return] ||| [return]	count=2
arg_pair	idéntica a fgets() ||| resource $handle	count=1
function_name	casillas de verificación ||| newt checkbox tree find	count=1
arg_pair	obtiene un ||| resource $imap_stream string $ref	count=1
function_name	primer atributo ||| ldap first attribute	count=2
namespace	de nombres ||| domnode	count=1
function_name	las [function_name_2] ||| [function_name_1] [function_name_2]	count=10
function_name	el método [function_name] ||| save [function_name]	count=3
function_name	único ||| password hash	count=1
function_name	[function_name_1] si el ||| [function_name_2] [function_name_1]	count=1
function_name	máximo ||| cascade max	count=1
namespace	trabajo y llama ||| gearmanworker	count=1
function_name	la descripción de ||| cairo font face get	count=1
arg_pair	desde el domain ||| string $domain string $codeset	count=1
function_name	para añadir un ||| set	count=1
function_name	la ||| request	count=1
function_name	descripción de ||| cairo scaled font get font matrix	count=1
function_name	creado [function_name] debe ||| [function_name]	count=1
function_name	a lo largo del ||| shearimage	count=1
arg_pair	un valor de cadena ||| string $value string $type	count=1
function_name	[function_name_1] atributos ||| [function_name_1] [function_name_2]	count=1
function_name	explícitamente ||| pdf setmatrix	count=2
function_name	el descenso vertical de ||| get descent	count=1
function_name	punto de control ||| control point callback	count=1
namespace	imagefilledpolygon() cuando se ||| function	count=1
function_name	un ||| ltrim	count=1
function_name	socket creado ||| stream socket	count=1
arg_pair	del recurso checkbox ||| resource $checkbox string $value	count=1
function_name	datos ||| input	count=1
function_name	espera de consulta ||| query timeout	count=1
namespace	api graphicsmagick como una ||| gmagick	count=1
function_name	xml ||| xml	count=13
return	indica ||| bool	count=4
function_name	advertencias y devolver ||| set	count=1
function_name	devuelve el índice ||| get iterator index	count=1
return	del ||| float	count=1
function_name	términos [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	primera ||| first	count=4
return	espacio de nombres ||| bool	count=1
function_name	el atributo ||| to attribute	count=1
arg_pair	cualquier abstracción ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	que no ||| set mlt min doc frequency	count=1
arg_pair	invertidas antes de los ||| string $str	count=1
return	indica si el ||| bool	count=2
arg_pair	de estilo ||| float $disp_time	count=1
namespace	dada ||| sdo_das_xml	count=1
arg_pair	grado de ||| array $env array $other_options	count=1
function	[function_name_1] de str ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	rectángulo relleno con color ||| int $y2 int $color	count=1
function_name	lee datos clob ||| fbsql read clob	count=2
function_name	[function_name_1] fdf ||| [function_name_2] [function_name_1]	count=4
arg_pair	keys del servidor ||| string $key int $time	count=1
function_name	de errores interno o ||| error	count=1
arg_pair	inmediatemente después de que ||| int $options string $opened_path	count=1
function_name	establece el gestor ||| set storage handler	count=1
namespace	llena la ruta ||| harupage	count=1
function_name	establece la pendiente ||| set activation steepness	count=2
namespace	este serán ||| solrquery	count=1
return	emitir advertencias ||| void	count=1
function_name	devuelve e elevado a ||| exp	count=1
function_name	de dsn disponibles ||| odbc data	count=1
arg_pair	función callback dependiendo del ||| callable $callback	count=1
namespace	el número ||| function	count=2
function_name	de subject ||| strcspn	count=1
arg_pair	[arg_pair_1] message al ||| [arg_pair_1] string $mailbox [arg_pair_2]	count=1
namespace	que ||| ev	count=1
function_name	se buscarán los archivos ||| chdir	count=1
function_name	libera los recursos ||| free	count=2
function_name	identificador de conexión ||| oci connect	count=3
function_name	alguna forma ||| modified	count=1
arg_pair	de bytes str ||| string $charset	count=1
function_name	que la búsqueda finalice ||| time allowed	count=1
function_name	un blob en ||| ibase blob	count=1
return	una columna específica dentro ||| string	count=1
function_name	épocas que se ||| epochs	count=1
function_name	encuentra disponible la lista ||| memory image	count=1
arg_pair	idéntica a ||| string $pattern string $string	count=1
return	archivo especificado ||| resource	count=1
arg_pair	un ||| int $y	count=1
function_name	la posición ||| get position	count=1
function_name	extrae cada ||| mailparse uudecode	count=1
return	fichero ||| void	count=1
namespace	nuevo nombre dado por ||| function	count=1
function_name	lee atributos ||| ldap get attributes	count=1
function_name	trazado y [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	de ømq ||| zmqdevice	count=1
function_name	el ||| is default	count=1
return	el nombre dado en ||| bool	count=1
function_name	un diff ||| xdiff file diff	count=1
function_name	dsn disponibles después de ||| data source	count=1
function_name	de errores del ||| errors	count=1
return	la función de retorno ||| bool	count=1
namespace	de manera que ||| function	count=1
arg_pair	botón tridimensional simulado aclarando ||| int $x	count=1
function_name	cadena de un ||| chr	count=1
arg_pair	final de pajar ||| string $needle	count=2
function_name	base-64 dado ||| imap base64	count=1
function_name	[function_name_1] corto ||| [function_name_2] [function_name_1]	count=6
function_name	imap si ||| imap	count=1
arg_pair	más bases de datos ||| resource $id string $databases	count=1
function_name	composición de una imagen ||| stereo image	count=1
function_name	vincula ||| bind	count=3
function_name	obtiene un parámetro ||| get parameter	count=1
arg_pair	por data ||| string $data	count=3
arg_pair	asocia una ||| string $key	count=1
function_name	siguiente entero menor para ||| trader floor	count=1
arg_pair	fd al ||| mixed $fd	count=1
function_name	string entregada ||| ctype upper	count=1
return	devuelto ||| string	count=1
return	el fichero dado de ||| int	count=1
function_name	mínimo de ||| mssql min	count=1
return	de segundos desde la ||| int	count=1
function_name	activación para la ||| activation function	count=2
function_name	obtener el [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	[function_name] está ||| get [function_name]	count=3
return	que se defina ||| zmqsocket	count=1
function_name	importa un ||| import stream	count=1
return	obtener el [return] de línea ||| [return]	count=1
arg_pair	puerto nombre ||| int $port	count=1
function_name	activación para ||| activation function	count=2
function_name	lote de ||| batch size	count=2
function	[function_name_1] eventos ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] rango ||| [function_name_1] quantum [function_name_2]	count=1
function_name	nodo ||| node	count=3
function_name	raíz cuadrada ||| sqrt	count=1
function_name	mínima ||| sybase min	count=1
function_name	[function_name_1] a secundarios ||| [function_name_2] [function_name_1]	count=9
function_name	dado y ||| mailparse uudecode	count=1
return	se comporta de ||| resource	count=1
function_name	transacción xa entre ||| mysqlnd ms xa	count=1
return	el uso ||| array	count=1
function_name	con ||| pdf	count=1
function_name	de sesión ||| getsid	count=1
namespace	note que ||| function	count=1
arg_pair	y blancas de una ||| resource $psdoc	count=1
function_name	filas en ||| num rows	count=1
arg_pair	path en el ||| string $path int $flags	count=1
function_name	la primera ||| first	count=4
namespace	el ||| ev	count=1
function_name	establece el nombre ||| set	count=2
function_name	después de llamarla ||| data	count=1
arg_pair	hacen referencia a ||| string $fk_qualifier string $fk_owner	count=1
function_name	definidos por el usuario ||| gupnp control point browse	count=1
function_name	por spl ||| spl	count=1
function_name	monitorizar ||| monitor	count=1
function_name	al entrenamiento continuar sin ||| fann get	count=1
arg_pair	key corresponda a ||| mixed $value	count=1
function_name	proxy ||| mysqlnd uh set statement proxy	count=1
function	aguja en [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	a sybase_fetch_assoc() con ||| sybase fetch	count=1
function_name	obtiene blob/clob ejecutando ||| lob get	count=1
function_name	control ||| gupnp control point callback	count=1
function_name	parecida a ||| pconnect	count=1
function_name	máximo) de la imagen ||| image extrema	count=1
namespace	el valor ||| directory	count=1
function_name	están habilitadas o no ||| stats	count=1
function_name	datos del apuntador ||| mailparse uudecode	count=1
function_name	en ||| types	count=1
function_name	segmento de memoria compartida ||| shmop	count=2
arg_pair	el contenedor ||| string $frame_name	count=1
return	ruta actual usando la ||| bool	count=1
arg_pair	el domain por gettext() ||| string $domain string $codeset	count=1
function_name	establece el ||| set status	count=1
namespace	un das xml ||| sdo_das_xml	count=1
return	de un ||| mixed	count=1
arg_pair	intermediarios de direcciones servicios ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	la imagen ||| raiseimage	count=1
return	se ||| int	count=3
arg_pair	extrae un ||| resource $fdf_document	count=1
function_name	validación relaxng del documento ||| relax	count=1
function_name	al ||| add	count=1
function_name	número de funciones ||| functions count	count=1
namespace	época unix (1 de ||| function	count=1
namespace	arbitrarios ||| gearmanclient	count=1
function_name	intenta eliminar ||| fgetss	count=1
return	[return] tar ||| [return]	count=3
return	la ||| float	count=4
function_name	el cambio del valor ||| fann get	count=1
function_name	especial indicando error cuando ||| set using	count=1
arg_pair	hash de un string ||| string $str	count=1
function_name	tercer parámetro de exception::__construct() ||| previous	count=2
function_name	alta prioridad ||| high	count=2
function_name	imagen y la ||| image	count=2
function_name	al nombre ||| by name	count=1
function_name	antepone un contenido ||| prepend body	count=1
function_name	de archivo/usuario de apc ||| apc bin	count=1
function_name	filas afectadas en una ||| affected rows	count=1
return	una operación de escritura ||| string	count=1
arg_pair	de un ||| resource $pdfdoc int $doc	count=1
function_name	gravedad actual ||| gravity	count=1
arg_pair	el parámetro stack ||| string $stack string $offset	count=1
function_name	instancia ||| load string	count=2
function_name	conexiones de atajo ||| shortcut	count=1
function_name	obtener el nombre de ||| get	count=1
function_name	resultados ||| result	count=2
function_name	se ha asignado a ||| peak	count=1
function_name	establece ||| fann set callback	count=1
return	mueve la ||| void	count=1
function_name	mensaje de ||| curl	count=1
function_name	cola de ||| queue	count=1
function_name	representación que devuelve ||| to string	count=1
function_name	descripción ||| cairo scaled font get font matrix	count=2
function_name	entonces ||| set	count=1
function_name	elemento cuyo ||| elem	count=1
function_name	id de mongo ||| get	count=1
function_name	utilizado con algoritmos por ||| algorithm	count=1
function_name	línea de inicio de ||| line	count=1
function_name	dado ||| strerror	count=1
namespace	conocia ||| mongocursor	count=1
arg_pair	de la imagen ||| int $height	count=1
function_name	método de re-escalada líquido ||| liquid rescale image	count=1
function_name	analiza datos ||| mb parse	count=1
arg_pair	contenedor en ||| resource $fdf_document string $frame_name	count=1
function_name	reescritura establecidas previamente por ||| output reset rewrite	count=1
function_name	conjunto de grupos ||| getgroups	count=1
function_name	continente que corresponde al ||| continent	count=1
arg_pair	un string para un ||| resource $connection	count=1
function_name	todas las capas ocultas ||| function hidden	count=1
namespace	el archivo designado por ||| function	count=1
arg_pair	el fichero ||| string $filename bool $use_include_path	count=1
function_name	del manejador de ||| decl handler	count=1
return	en el documento ||| bool	count=2
function_name	una lista ||| list dicts	count=1
function_name	información sobre la ||| getinfo	count=1
function_name	un array ||| to array	count=1
function	[function_name_1] relation la ||| [arg_pair_2] [function_name_1]	count=7
return	el sistema ||| string	count=1
namespace	manera que ||| function	count=1
function_name	cargar entidades ||| libxml disable entity	count=1
namespace	sobre un proceso ||| function	count=1
function_name	remarcación de consultas range/wildcard/fuzzy/prefix ||| highlight highlight multi term	count=1
function_name	la publicación ||| ap	count=1
function_name	primer ||| ncurses color	count=1
function_name	realice una salida como ||| sandbox output	count=1
function	exporta [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	unicode propertyaliases.txt ||| int $property int $namechoice	count=1
namespace	de certificado x509 ||| function	count=1
function_name	código de error sqlstate ||| stmt sqlstate	count=1
function_name	un iterador para la ||| children	count=1
function_name	etiqueta dado por ||| tag	count=1
function_name	la prueba ||| prob prime	count=1
function_name	se comporta de ||| pconnect	count=1
arg_pair	punto ||| float $y	count=1
function_name	y devuelve la imagen ||| image	count=1
function_name	haruannotation ||| text annotation	count=2
function_name	para guardar la ||| save	count=1
function_name	aún está ||| valid	count=1
function_name	filas que ||| start	count=1
arg_pair	elipses etc..., a thickness ||| int $thickness	count=1
namespace	de segundos desde ||| function	count=1
function_name	borrar ||| delete	count=2
arg_pair	forma parecida a sybase_connect() ||| string $servername	count=1
function_name	informix ||| ifx fieldproperties	count=2
arg_pair	de una rutina ||| string $alias	count=1
function_name	coincide exactamente con una ||| tremove	count=1
arg_pair	modo de acceso mode ||| int $pri	count=1
function_name	variación [function_name] memcached::setoption() que ||| [function_name]	count=1
return	función devuelve un array ||| array	count=1
function_name	los caracteres ||| addcslashes	count=1
function	última modificación [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	llega recursivamente al final ||| end children	count=1
function_name	consulta de ||| cubrid get query	count=1
function_name	una única ||| kernel	count=1
function_name	elimina uno ||| remove	count=2
function_name	información acerca ||| stat	count=1
arg_pair	espacios en blanco u ||| string $str	count=1
function_name	calcula la tangente hiperbólica ||| tanh	count=1
arg_pair	las diferencias entre old_file ||| string $old_file	count=1
return	del host y la ||| array	count=1
function_name	conjunto de ||| cubrid	count=1
return	formato ||| string	count=1
namespace	de la última petición ||| memcached	count=1
arg_pair	proporcionada por el ||| callable $user_function	count=1
function_name	extensión phar ||| valid phar	count=1
arg_pair	del texto que lee ||| resource $handle int $length	count=1
function_name	la siguiente fila ||| sqlsrv fetch	count=2
function_name	un id definido ||| id	count=1
function_name	la que las ||| doc frequency	count=1
arg_pair	una declaración para ||| string $query_string	count=1
namespace	o establece ||| function	count=1
function_name	las ||| min doc frequency	count=2
function	devuelve el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	mueve la ||| move	count=1
function_name	el estado de un ||| status	count=1
function_name	el término en el ||| terms upper bound	count=1
function_name	no ||| min doc frequency	count=2
function_name	aplicarse a una ||| kernel	count=1
function	primera tupla [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	puede utilizar para ||| set	count=1
arg_pair	datos disponible ||| int $offset	count=1
function	discontinuidad actual [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	tridimensional simulado aclarando y ||| int $width int $height	count=1
function_name	patrón basado en ||| ps shading pattern	count=2
return	trabajo para ||| bool	count=1
function_name	los archivos ||| chdir	count=1
namespace	bloqueo de [namespace] de tal ||| [namespace]	count=1
namespace	aclarando ||| gmagick	count=1
function_name	la imagen obtenida ||| imagecreatefromxpm	count=1
function_name	encuentra disponible ||| image	count=1
return	función retorna [return] nuevo ||| [return]	count=1
return	blob en todas ||| bool	count=1
function	[function_name_1] [arg_pair_2] conjunto ||| [function_name_1] [arg_pair_2]	count=1
function_name	fila ||| mysqli fetch	count=1
namespace	o ||| zmqdevice	count=1
return	función fscanf() [return] similar ||| [return]	count=1
namespace	de la api ||| gmagick	count=1
function_name	nombre y ||| from name	count=1
function_name	[function_name_1] el índice ||| [function_name_2] [function_name_1]	count=1
function_name	tangente hiperbólica para ||| tanh	count=1
namespace	en des de ||| function	count=1
arg_pair	x3 y3 ||| float $y3	count=1
function_name	salida ||| sandbox output	count=1
return	que ||| void	count=4
function_name	de una línea ||| line	count=1
return	tantos ||| solrquery	count=1
return	[return] las clases ||| [return]	count=1
function_name	una entrada de ||| zip entry	count=1
arg_pair	la función cubrid_put() ||| mixed $value	count=1
arg_pair	una ||| string $name string $value	count=1
function_name	siguiente fila del ||| fetch	count=1
function_name	rrd desde el ||| rrd	count=1
function_name	bytes requeridos para mostrar ||| display size	count=1
arg_pair	uri que ||| string $uri	count=1
function_name	memcached::touch() con ||| touch by key	count=1
function_name	una elipse en ||| ellipse	count=1
function_name	relleno ||| gray fill	count=1
function_name	canal de color ||| color	count=1
function_name	crea un [function_name_2] ||| [function_name_1] data [function_name_2]	count=1
function_name	estado de un trabajo ||| status	count=1
function_name	la implementa ||| subclass of	count=1
function_name	del array fann_get_cascade_activation_functions() ||| get	count=2
function_name	[function_name_1] [function_name_2] de la entrada usando ||| [function_name_1] [function_name_2]	count=2
arg_pair	sobre el certificado x509cert ||| bool $shortnames	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=5
return	con ||| bool	count=1
function_name	error sqlstate de la ||| stmt sqlstate	count=1
function_name	en lugar de emitir ||| exceptions	count=1
return	establece [return] autor ||| [return]	count=1
arg_pair	especificada por flag ||| int $options	count=1
arg_pair	se ||| string $password string $charset	count=1
function_name	[function_name_1] color de ||| [function_name_1] image background [function_name_2]	count=1
arg_pair	de datos del acs ||| string $servicename string $machine	count=1
function_name	salida ||| cascade output	count=1
function_name	las palabras ||| set mlt	count=1
arg_pair	comporta de forma parecida ||| string $charset	count=1
function_name	el código ||| code	count=1
function_name	de parámetros de solicitud ||| params	count=1
namespace	domelement ||| domelement	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] activation [function_name_2]	count=2
function_name	nombre del servidor anfitrión ||| get host info	count=1
function_name	/etc/services ||| getservbyname	count=1
function_name	[function_name_1] petición http ||| [function_name_2] [function_name_1]	count=4
function_name	des de unix o ||| crypt	count=1
function_name	el de estilo ||| slide show	count=1
arg_pair	un umbral de contraste ||| float $threshold	count=1
arg_pair	función cubrid_connect() ||| string $passwd bool $new_link	count=1
namespace	caracteres que aparecen ||| function	count=1
function_name	una descripción de ||| string	count=1
namespace	el de estilo de ||| harupage	count=1
function_name	pid del id ||| get	count=1
function_name	conexión sobre un socket ||| stream socket	count=1
function_name	establece el ||| mysql set	count=1
function_name	y muestra el ||| display	count=1
function_name	del esquema solicitado ||| schema	count=1
function_name	la biblioteca unrar encuentre ||| set using	count=1
function_name	nombre del cifrador especificado ||| mcrypt get cipher name	count=1
arg_pair	firma de certificado) basada ||| array $extraattribs	count=1
function_name	información de ||| info	count=3
function_name	información sobre dicho ||| get info	count=1
return	cadena de ||| string	count=2
function	[function_name_1] una nueva ||| [function_name_1] urlannotation [arg_pair_2]	count=1
function_name	seno para cada valor ||| asin	count=1
arg_pair	antes de los caracteres ||| string $str	count=1
function_name	guarda ||| fann save	count=2
function_name	distribución de [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	prepara para una ||| resource $id	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pdi document [arg_pair_2]	count=1
function_name	frecuencia en ||| mlt min	count=1
function_name	de la clase ||| class	count=3
function_name	breaker ||| set tie	count=1
function_name	no son operaciones crud ||| command	count=1
function_name	salidas de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	tidy a ||| tidy	count=1
arg_pair	ya está en ||| int $code_page	count=1
function_name	como ||| set mlt min doc frequency	count=2
return	el valor de ||| mixed	count=2
function_name	libera toda ||| free	count=1
function_name	[function_name_1] complemento de ||| [function_name_2] qc [function_name_1]	count=1
function_name	la clase yaf_application ||| get application	count=1
function_name	resultado ||| xdiff file patch binary	count=1
function_name	se ||| open memory	count=1
arg_pair	campo es decir ||| int $face	count=1
function_name	el formateo textline ||| pdf info textline	count=1
function_name	cadena de título ||| title	count=1
arg_pair	el estilo numérico para ||| int $style	count=1
arg_pair	eliminar cualesquiera bytes ||| resource $handle int $length	count=1
function	rrd desde [arg_pair_2] ||| [function_name_1] restore [arg_pair_2]	count=1
arg_pair	copia ||| bool $preserve_cloned_files bool $backup_original_files	count=1
arg_pair	que se defina sobre ||| zmqsocket $backend	count=1
function_name	el uid del ||| imap uid	count=1
function_name	función geoip_domain_by_name() ||| domain by	count=1
function_name	para insertar un único ||| set add	count=1
namespace	por el puntero ||| function	count=1
function_name	imagen que ||| image	count=1
function_name	elimina ||| shm remove var	count=2
function_name	el ||| num	count=1
namespace	modelo ||| svmmodel	count=1
function_name	generar identificadores únicos ||| hostname	count=1
function_name	sido creado con ||| add types	count=1
function_name	la e/s ||| eio readahead	count=1
arg_pair	define ||| float $disp_time	count=1
function_name	punto blanco ||| setimagewhitepoint	count=1
function_name	en ||| set using exceptions	count=2
function_name	dirección ||| geoip	count=6
return	la cadena de error ||| string	count=1
function_name	de ||| sybase	count=1
function_name	[function_name_1] paginación tamaño ||| [function_name_2] [function_name_1]	count=7
function_name	el ancho ||| width	count=5
function_name	devolverá la lista ||| odbc data	count=1
function_name	método conveniente [function_name] ||| magnify [function_name]	count=1
function_name	sin tratar del ||| get raw	count=2
function_name	las peticiones http ||| request	count=1
function_name	[function_name] actual ||| rpm [function_name]	count=1
function_name	indicado mediante ||| crack closedict	count=1
function_name	escala el tamaño ||| scale	count=1
namespace	de abstracción por encima ||| function	count=1
function_name	devuelve los datos asociados ||| get	count=1
function_name	último ||| last	count=2
function_name	extrae ||| uudecode	count=1
function_name	que puedan estar disponibles ||| crypt	count=1
function_name	envía la acción ||| proxy send action	count=1
arg_pair	la función cubrid_set_query_timeout() se ||| resource $req_identifier int $timeout	count=1
function_name	advertencias ||| set	count=1
function_name	nueva instancia de documento ||| ps new	count=1
function_name	[function_name] al ||| [function_name]	count=3
function_name	usando proc_open() que ||| proc	count=1
function_name	su nodename ||| get named	count=1
function_name	define ||| set slide	count=1
arg_pair	es idéntica a ereg_replace() ||| string $replacement	count=1
function_name	información de estado del ||| status	count=1
function_name	mysqli_thread_id() devuelve el id ||| id	count=1
function_name	sybase asociado al identificador ||| sybase	count=1
namespace	de la variable ||| function	count=1
function_name	subsiguiente fichero ||| add	count=1
function_name	un arreglo ||| db2	count=1
function_name	cierra un ||| pdf close	count=1
namespace	proceso del ||| function	count=1
namespace	posición actual del ||| solrdocument	count=1
function_name	borrar ||| win32 delete	count=1
arg_pair	esta es una manera ||| string $name	count=1
namespace	con barras invertidas antes ||| function	count=1
function_name	caracteres que ||| addcslashes	count=1
function_name	cualquier consulta generada ||| query	count=1
namespace	comando ||| mongocursor	count=1
function_name	proveedor ||| add required parameter	count=2
namespace	en el puntero de ||| splfileobject	count=1
return	ssl para ||| bool	count=1
return	en un archivo ||| bool	count=5
arg_pair	array ||| array $args	count=1
arg_pair	de una conexión ||| resource $link_identifier string $host_name	count=1
function_name	directorio vacío ||| empty dir	count=1
function_name	[function_name_1] contornea ||| [function_name_2] [function_name_1]	count=2
function_name	de la versión ||| version	count=3
function_name	la extensión iconv ||| iconv	count=1
function_name	lo ||| doc	count=1
function_name	el directorio actual ||| getcwd	count=1
function_name	del último error ||| errstr	count=1
function_name	de llamarla varias ||| data source	count=1
function	[function_name_1] modo de ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=3
function_name	mime ||| iconv mime encode	count=2
function	indica si [arg_pair_2] ||| [function_name_1] session [arg_pair_2]	count=1
function_name	generar para remarcación de ||| highlight	count=1
function_name	descripción de ||| cairo surface mark dirty rectangle	count=1
arg_pair	una y ||| string $new_data2 string $error	count=1
function_name	columna ||| column	count=4
arg_pair	disponibles en el sistema ||| string $str	count=1
function_name	la última modificación para ||| mtime	count=1
arg_pair	secreto para las ||| string $token_secret	count=1
function_name	[function_name_1] obtener conjuntos ||| [function_name_2] [function_name_1] resultset resource $statement	count=1
namespace	html y php del ||| function	count=1
function_name	tendencias de cada capa ||| fann get bias	count=1
namespace	que está establecida ||| function	count=1
arg_pair	etc..., a thickness píxeles ||| resource $image int $thickness	count=1
function_name	un array multi-dimensional con ||| all	count=1
return	en progreso ||| bool	count=1
return	si ||| solrquery	count=1
function_name	la descripción de ||| add color stop rgb	count=1
function_name	tamaño de el ||| size	count=1
arg_pair	directamente una ||| resource $connection	count=1
function_name	md5 de ||| md5	count=1
namespace	uno dos ||| function	count=1
function	construye [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=7
function_name	atributo dado ||| attribute ns	count=1
arg_pair	con la clave ||| resource $shm_identifier	count=1
return	función en el ||| bool	count=1
namespace	imagen tiff o jpeg ||| function	count=1
function_name	un guid binario ||| guid string	count=1
function_name	posix que ||| posix	count=1
arg_pair	espacio de nombres especificado ||| string $namespaceuri	count=1
arg_pair	estructuras ||| int $table	count=1
function_name	ser usado para extraer ||| msql fetch	count=1
function_name	de cabecera mime ||| mimeheader	count=1
function_name	das xml que ||| types	count=1
function_name	biblioteca unrar ||| exceptions	count=1
namespace	el descriptor ||| oci-lob	count=1
namespace	devuelve un string ||| function	count=1
return	el código de ||| int	count=1
function_name	directorio virtual ||| dbplus chdir	count=1
function_name	clase del ||| get class	count=1
function_name	campo a devolver ||| alternate field length	count=4
return	la base ||| int	count=1
arg_pair	mensaje ||| zmqsocket $backend	count=1
function_name	datos del apuntador ||| mailparse uudecode all	count=1
return	en la página actual ||| bool	count=1
function_name	servidor postgresql ||| pg end	count=1
function_name	abre un ||| open	count=1
return	obtuvo en ||| bool	count=1
function_name	devuelve una representación ||| to date time	count=1
function_name	los caracteres ||| get unicode	count=1
namespace	indicado mediante ||| function	count=1
function_name	selecciona ||| fbsql db query	count=2
function_name	los iteradores ||| children	count=1
function_name	[function_name_1] fecha de ||| [function_name_2] [function_name_1]	count=3
namespace	verisón ||| quickhashstringinthash	count=1
function_name	mensajes md5 ||| md5	count=1
arg_pair	por sequence ||| resource $imap_stream string $sequence	count=1
function_name	que contiene ||| chr	count=1
function_name	devuelve el ||| win32 get	count=1
function_name	como este ||| doc frequency	count=1
function_name	producto ||| product	count=1
namespace	domdocumentfragment ||| domdocumentfragment	count=1
function_name	en base-64 dado ||| imap base64	count=1
return	resultado en ||| bool	count=3
function_name	lee atributos y ||| ldap get attributes	count=1
return	asociado con ||| array	count=1
arg_pair	con nombre sobre ||| string $name	count=1
arg_pair	índice especificado ||| mixed $index	count=1
arg_pair	type a charset ||| string $charset	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $connection_id [arg_pair_2]	count=3
arg_pair	dispositivos de ømq pueden ||| zmqsocket $backend	count=1
arg_pair	apunta a una página ||| string $url	count=1
arg_pair	assoc_array ||| array $assoc_array	count=2
arg_pair	planifica ||| resource $event	count=1
function_name	asocia la siguiente imagen ||| next image	count=1
namespace	dirección de la página ||| harupage	count=1
function_name	índice ausente que es ||| empty	count=1
function	importa [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	xbm de ||| imagexbm	count=1
function_name	elimina ||| autoload unregister	count=1
function_name	el semáforo dado ||| sem	count=1
function_name	devuelve ||| get frame	count=1
return	respuesta al cliente de ||| void	count=1
function_name	un área de recorte ||| clip	count=1
function_name	el uso ||| scache meminfo	count=1
arg_pair	que se defina ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	se defina sobre las ||| zmqsocket $frontend	count=1
function_name	activación para la capa ||| activation function	count=1
function_name	el cambio del valor ||| get	count=1
function_name	de activación ||| activation function	count=4
namespace	el momento actual medido ||| function	count=1
function_name	a importar y ||| import	count=1
return	de un objeto ||| string	count=1
arg_pair	especificado en caso de ||| resource $result int $field_offset	count=1
arg_pair	needle y ||| string $haystack mixed $needle	count=1
function_name	de la página ||| show	count=1
return	devuelve un string ||| string	count=3
arg_pair	desde un fichero ||| string $filename	count=3
function_name	el primer índice ||| first	count=2
function_name	la firma ||| gnupg verify	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] session [arg_pair_2]	count=1
arg_pair	por flag a ||| string $flag int $options	count=1
return	numérico del mensaje ||| int	count=1
function_name	de mensaje y socket. ||| construct	count=1
function_name	carga ||| load	count=3
function_name	instancia xml dada ||| load	count=1
function_name	desplazamiento de campo ||| msql field	count=1
function_name	los encabezados a ||| soap headers	count=1
function_name	al macenado ||| fetch proc return	count=1
function_name	longitud de ||| len	count=1
function_name	nuevo objeto paradox ||| px new	count=2
function_name	contra ||| ukey	count=1
arg_pair	llamado para establecer ||| string $path int $option	count=1
function_name	notifica a ||| service notify	count=1
arg_pair	de páginas ||| int $first_num string $prefix	count=1
return	la distancia de ||| int	count=1
function_name	sets tie ||| set tie breaker	count=1
function_name	neuronas de salida ||| output	count=1
function_name	[function_name] una ||| save [function_name]	count=2
function_name	error de ||| error	count=5
function_name	oracle [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] si el ||| [function_name_1] [function_name_2]	count=1
function_name	o si ||| is	count=1
function_name	crea un vector de ||| create	count=1
namespace	dentro del objeto domnodelist ||| domnodelist	count=1
return	bytes ||| string	count=1
function_name	el atributo tipo de ||| set type	count=1
arg_pair	value1 con ||| mixed $value1	count=1
arg_pair	en un grupo ||| resource $grp int $limit	count=1
return	de intermediarios de direcciones ||| zmqsocket	count=1
function_name	representación yaml de data ||| yaml emit file	count=1
function_name	gestores soportados ||| dba handlers	count=1
arg_pair	el tamaño de un ||| resource $link_identifier	count=1
function_name	[function_name_1] épocas permitido ||| [function_name_1] candidate stagnation [function_name_2]	count=2
arg_pair	la imagen ||| int $width	count=1
return	creado con ||| void	count=1
function_name	fue subido mediante el ||| move uploaded	count=1
function_name	con libeio ||| event	count=1
namespace	resultados como mysql_query() ||| function	count=1
function	existe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	lee los datos ||| uudecode	count=1
return	como ||| string	count=1
arg_pair	para el result set ||| resource $result	count=1
namespace	breaker ||| solrdismaxquery	count=1
function_name	de seguimiento ||| data	count=1
function_name	vacía ||| mysqlnd qc clear	count=1
return	[return] valores ||| [return]	count=2
namespace	hilo ||| thread	count=1
function_name	[function_name_1] la implementa ||| [function_name_1] [function_name_2]	count=2
arg_pair	una fila específica ||| int $row	count=1
function_name	para ||| set metadata	count=2
namespace	las claves x ||| gmagick	count=1
return	dada en la caché ||| bool	count=1
function_name	la contraseña del ||| password	count=1
namespace	a un solo valor ||| function	count=1
function_name	todas las operaciones memcached::*bykey() ||| server	count=1
arg_pair	actual indicando que ||| string $actor string $details	count=1
function_name	[function_name_1] épocas ||| [function_name_1] out [function_name_2]	count=3
function	[function_name_1] [arg_pair_2] ||| [function_name_1] rename [arg_pair_2]	count=4
return	segundos ||| int	count=1
namespace	[namespace] un ||| [namespace]	count=9
namespace	es ||| rarexception	count=1
function_name	por lo menos tantos ||| set mlt min doc	count=1
arg_pair	función callback a cada ||| callable $callback	count=1
function_name	parameter ||| tie breaker	count=4
function_name	establece ||| callback set	count=4
namespace	que se an indicado ||| function	count=1
arg_pair	key ||| int $perms	count=1
arg_pair	de value ||| mixed $value int $options	count=1
function_name	la página especificada ||| page	count=1
function_name	la remarcación [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	objeto ||| object	count=4
function_name	dsn disponibles ||| data source	count=1
function_name	biblioteca unrar encuentre ||| exceptions	count=1
function_name	[function_name] trabajos ||| add [function_name]	count=1
arg_pair	escribirá una cadena en ||| int $shmid string $data	count=1
function_name	código [function_name_1] [function_name_2] error_code ||| [function_name_2] [function_name_1]	count=2
arg_pair	stack ||| string $offset	count=1
function_name	uso de ||| get	count=1
return	estar disponibles ||| string	count=1
arg_pair	en una ||| resource $p	count=1
function_name	acepta uno dos o ||| format	count=1
function_name	información del esquema ||| cubrid schema	count=1
return	un número ||| int	count=1
function_name	incluir o ||| include	count=1
function_name	el término en el ||| bound	count=1
function_name	excepción de tipo ||| set using exceptions	count=1
arg_pair	el nombre de archivo ||| string $filename	count=1
function_name	tabla y ||| table	count=1
return	encuentra ||| int	count=1
namespace	dispositivo ||| zmqdevice	count=1
function_name	información sobre ||| get info	count=1
function_name	de imagen ||| set image	count=2
function_name	el ansho ||| width	count=1
function_name	y lo escribe ||| write	count=1
function_name	devuelve una lista ||| list dicts	count=1
arg_pair	la apariencia de un ||| resource $fdf_document string $field_name	count=1
namespace	en ||| solrquery	count=2
function_name	el último código de ||| return code	count=1
return	época unix ||| int	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] compression [function_name_1]	count=3
function_name	habilitado o no termscomponent ||| terms	count=1
return	ha sido ||| bool	count=1
function_name	[function_name_1] nombre ||| [function_name_2] [function_name_1]	count=13
function_name	devuelve una lista ||| enchant broker list	count=1
function_name	sin tratar enviadas al ||| get raw request	count=1
function_name	añade rutas definidas mediante ||| add	count=1
function_name	elimina el ||| shm remove	count=1
function_name	guarda la estructura de ||| save	count=1
function_name	columna de la fila ||| fetch	count=1
function_name	bloquearán la e/s ||| readahead	count=1
function_name	imagen ccitt en bruto ||| ccitt	count=1
arg_pair	plural ||| string $msgid1	count=1
arg_pair	fecha gmt ||| int $year int $is_dst	count=1
namespace	o desactiva el ||| function	count=1
arg_pair	un objetivo especificado ||| string $target	count=1
namespace	el array a un ||| function	count=1
function_name	xml ||| save xml	count=1
arg_pair	en haystack y devuelve ||| bool $part string $encoding	count=2
arg_pair	usuario user ||| string $filename mixed $user	count=1
function_name	sin cambiar el ecm ||| get cascade output stagnation	count=1
function_name	no la remarcación ||| highlight highlight	count=1
function_name	devuelve el tamaño actual ||| entry	count=1
arg_pair	óptimo ||| int $nullable	count=1
arg_pair	previamente asignado con imagecolorallocate() ||| resource $image int $color	count=1
function	[function_name_1] un ||| bool [function_name_1] [arg_pair_2]	count=1
function_name	respuesta sin tratar ||| get raw	count=1
namespace	recibe ||| function	count=1
function_name	contenido ||| from	count=1
namespace	especificado a través ||| function	count=1
function_name	postgresql después de hacer ||| pg end	count=1
arg_pair	con dos diferencias considerables ||| string $userid	count=1
function_name	al igual que closedir() ||| close	count=1
function_name	de la anotación ||| set	count=2
function_name	devolverá el nombre del ||| name	count=1
return	primo ||| int	count=1
function_name	tiempo de espera ||| query timeout	count=1
function_name	multi-dimensional [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	las conexiones de ||| fann get	count=1
arg_pair	directiva whence como sigue: ||| int $whence	count=1
function	valor [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	punto de la ||| float	count=1
arg_pair	interno de dicho elemento ||| mixed $entry	count=1
function_name	[function_name] a ||| [function_name] get last	count=1
function_name	cadena que [function_name] ||| [function_name]	count=1
function_name	los colores ||| color	count=1
namespace	integer que corresponde al ||| judy	count=1
arg_pair	un ||| resource $pdfdoc int $doc	count=1
function_name	de filas que ||| set	count=1
function_name	el id de ||| id	count=2
function_name	que determina lo ||| fann	count=1
function_name	el punto primario azul ||| blue primary	count=2
function_name	para guardar la ||| save path	count=1
function_name	en por lo menos ||| frequency	count=1
function_name	el modo [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	equipo o dirección ||| geoip	count=1
return	proveedor oauth ||| bool	count=1
function_name	establece el [function_name_2] ||| [function_name_1] rprop increase [function_name_2]	count=2
function_name	en ||| add types	count=2
return	bordes de ||| gmagick	count=1
arg_pair	para la mayoría ||| string $connection_string string $character_set	count=1
function_name	campos de consulta ||| query	count=1
return	intensidad [return] su ||| [return]	count=1
function	paginación tamaño [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	obtiene el puerto ||| gupnp context get	count=1
function_name	descripción ||| cairo font	count=1
function_name	vacío con la ||| add empty	count=1
function_name	los datos de entrenamiento ||| train data	count=2
function_name	de campos [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
arg_pair	datos y los devuelve ||| string $data	count=1
function_name	servidores de trabajos ||| servers	count=1
function_name	dado ||| curl	count=1
function_name	acepta ||| number format	count=2
function_name	sybase_fetch_assoc() con la diferencia ||| sybase fetch object	count=1
arg_pair	una ||| string $encoding	count=1
function_name	analizada o ||| strptime	count=1
function_name	esta función devolverá la ||| odbc data source	count=1
function_name	usado ||| session	count=1
function_name	en la configuración del ||| tidy config count	count=1
arg_pair	nombre de relation al ||| string $name	count=1
arg_pair	función acepta uno ||| float $number	count=1
return	el tiempo máximo de ||| int	count=1
function_name	establecido ||| gmp testbit	count=1
arg_pair	un directorio al ||| string $path	count=1
arg_pair	estilo ||| int $type float $disp_time	count=1
function_name	desde la cadena de ||| string	count=1
arg_pair	secuencia de bytes str ||| string $str string $charset	count=1
function_name	un nuevo iterador ||| iterator	count=1
function_name	los mensajes ||| imap	count=4
function_name	número máximo de caracteres ||| max	count=2
return	del apuntador ||| array	count=1
function	rrd [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] encabezados ||| [function_name_1] last response [function_name_2]	count=1
function_name	[function_name_1] id ||| [function_name_1] [function_name_2]	count=5
arg_pair	pregunta ||| string $keyword	count=1
namespace	el [namespace] ||| [namespace]	count=49
function_name	elimina todos ||| delete by queries	count=1
function_name	por bloques ||| block algorithm	count=1
function_name	entrenamiento vacía ||| train	count=1
function_name	código de error ||| curl	count=1
function_name	nombre del módulo ||| module name	count=3
function	elimina [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
return	el diccionario indicado mediante ||| bool	count=1
arg_pair	poder utilizarlo ||| string $encoding string $separator	count=1
function	[function_name_1] ambos por ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	de botón tridimensional ||| int $width int $height	count=1
function	del campo [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=1
function	[function_name_1] oid ||| [function_name_1] name [arg_pair_2]	count=3
function_name	el retraso de ||| delay	count=1
function_name	función reemplaza [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	número de filas de ||| num rows	count=1
function_name	[function_name_1] error ||| [function_name_1] train [function_name_2]	count=1
function_name	de la fecha ||| date	count=1
function_name	principio del ||| rewind	count=1
arg_pair	de direcciones ||| zmqsocket $frontend	count=1
function_name	devuelve un ||| curl	count=1
arg_pair	una tarea ||| string $unique	count=3
function_name	mongo posee una ||| tailable	count=1
arg_pair	un grado de control ||| array $other_options	count=1
return	unix (1 ||| int	count=1
namespace	[namespace] difieren más ||| [namespace]	count=3
function_name	cual los términos serán ||| mlt min	count=1
function_name	3 partes: ||| footer	count=1
return	se defina ||| zmqsocket	count=1
function_name	el entrenamiento ||| train stop function	count=1
function_name	analiza ||| parse	count=4
function_name	[function_name_1] un ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=1
function	para [arg_pair_2] ||| [function_name_1] size [arg_pair_2]	count=2
arg_pair	puntos blanco y negro ||| float $blackpoint	count=1
function_name	la lista de dsn ||| odbc	count=1
return	la función ||| bool	count=1
function_name	alta prioridad en ||| high	count=1
namespace	pueden hacer ||| zmqdevice	count=1
function_name	conexión a un servidor ||| connect	count=1
arg_pair	al dn específico ||| string $dn	count=1
function_name	la firma digital ||| pkcs7 verify	count=1
function_name	muestreo ||| sampling factors	count=1
function_name	documentos como ||| frequency	count=1
function_name	devuelve el código ||| win32 get	count=1
namespace	objeto ||| yaf_controller_abstract	count=1
namespace	dispositivos de ømq pueden ||| zmqdevice	count=1
function_name	msql asociado ||| msql data	count=1
function_name	el proveedor ||| add required parameter	count=1
function_name	son el mismo nodo ||| is same node	count=1
function_name	esquema solicitado de la ||| cubrid schema	count=1
function_name	representación de ||| serialize	count=1
function_name	por ||| ibase	count=1
function_name	filtro digital que mejora ||| median filter	count=1
arg_pair	mensaje ||| resource $imap_stream int $msg_number	count=1
function_name	imagen de la ||| image	count=1
function_name	canal alfa [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
arg_pair	este método encuentra ||| bool $is_prefix	count=1
namespace	presente que es igual ||| judy	count=1
function_name	un valor ||| using	count=1
function_name	solicita el monitoreo a ||| fam monitor directory	count=1
arg_pair	objeto gmagickpixel ||| gmagickpixel $color int $width	count=1
function_name	la que las palabras ||| min doc	count=1
arg_pair	crea un ||| resource $psdoc string $name	count=1
function_name	de palabra máxima sobre ||| mlt max word	count=1
arg_pair	value1 ||| mixed $value2	count=2
function_name	curl manteniendo [function_name_2] ||| [function_name_1] copy [function_name_2]	count=1
function_name	[function_name_1] la temperatura ||| [function_name_2] [function_name_1]	count=2
function_name	error cuando ||| set using	count=1
return	algoritmo estándar basado en ||| string	count=1
function_name	máximo de ||| mlt max	count=1
function_name	umbral del error de ||| step error threshold	count=2
function_name	al nombre ||| name	count=1
namespace	índice del array ||| splfixedarray	count=1
arg_pair	[arg_pair_1] pattern ||| [arg_pair_2] mixed $replacement [arg_pair_1]	count=2
function_name	documentos como este ||| set mlt	count=1
function_name	de la acción ||| gupnp service action	count=1
function_name	las clases padre ||| class parents	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] scaling [function_name_2]	count=1
function_name	asignación de ||| sma	count=1
function_name	la instanciación ||| on create	count=1
function_name	crea un nuevo analizador ||| parser create ns	count=1
function_name	cierra la conexión ||| close	count=1
arg_pair	correspondientes a los nombres ||| array $ctorparams	count=1
function_name	relación ||| dbplus	count=9
arg_pair	extendida de msql_fetch_row() ||| int $result_type	count=1
arg_pair	basado en des ||| string $str	count=1
arg_pair	a unidades de b ||| float $b	count=1
function_name	destruir el valor para ||| unset	count=1
return	mientras ||| bool	count=1
function_name	devuelve un mensaje de ||| strerror	count=1
return	las ||| array	count=15
return	tipo de imagen ||| int	count=1
function_name	si y sólo ||| using exceptions	count=1
arg_pair	usando un método ||| string $data string $method	count=1
function_name	directiva error_reporting en tiempo ||| error reporting	count=1
function_name	imprime ||| ps show2	count=2
namespace	x ||| gmagick	count=1
namespace	bloqueo de [namespace] de ||| [namespace]	count=1
return	cadena de ||| sdo_das_xml_document	count=1
function_name	acerca de la fecha ||| date parse from format	count=1
function_name	obtiene la [function_name_2] ||| [function_name_1] [function_name_2]	count=18
function_name	un nodod ||| dom import	count=1
function_name	documento fdf ||| fdf	count=3
function_name	curl y libera todos ||| curl	count=1
rest	[return_1] información útil ||| [return_1] ibase blob [function_2]	count=1
function_name	usado para guardar ||| save	count=1
namespace	aplicarse ||| imagickkernel	count=1
function_name	porporcionados luego lee los ||| ldap get entries	count=1
function_name	contorneado ||| getstrokeopacity	count=1
arg_pair	esta función realiza una ||| int $options	count=1
function_name	[function_name_1] [function_name_2] con los parámetros in_params ||| [function_name_1] [function_name_2]	count=4
function_name	sarprop ||| sarprop	count=3
function_name	apuntador de ||| uudecode	count=1
function_name	de conectarla de nuevo ||| pg ping	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $link_identifier [arg_pair_2]	count=2
arg_pair	que ||| string $str	count=2
arg_pair	enx y ||| float $alpha float $beta	count=2
return	en un servidor x ||| bool	count=3
function_name	esta función cierra ||| close	count=1
function_name	ssl para las ||| sslchecks	count=1
return	sobre un ||| array	count=1
return	objeto imagickpixeliterator ||| imagickpixeliterator	count=1
function_name	si devuelve un ||| module get supported	count=1
arg_pair	nueva [arg_pair] ||| [arg_pair]	count=3
arg_pair	key desde la base ||| string $key	count=1
function_name	[function_name_1] user ||| [function_name_1] [function_name_2]	count=1
function_name	solicitud ||| request	count=1
function_name	[function_name] en el ||| get [function_name]	count=2
arg_pair	de una ||| resource $pxdoc string $name	count=1
function_name	de color ||| get color	count=1
return	excepto ||| string	count=1
namespace	esperar a que ||| function	count=1
function_name	logaritmo natural para ||| trader ln	count=1
function_name	recurso devuelto por db2_prepare() ||| param	count=1
arg_pair	para hacer llamadas ||| array $options mixed $input_headers	count=1
namespace	manera que los índices ||| function	count=1
function_name	de nombres especificado ||| is default namespace	count=1
function_name	extensión de ||| to extension	count=1
function_name	[function_name_1] la excepción ||| [function_name_2] [function_name_1]	count=1
function_name	retropropagación [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	reabre el flujo ||| int $n_retries	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=415
function	borra [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	key ||| int $max_acquire	count=1
function_name	se da la ||| idate	count=1
function_name	destruye el ||| offset unset	count=1
function_name	que ||| doc	count=2
function_name	una base [function_name] universal database ||| [function_name]	count=1
function_name	texto ||| strerror	count=1
function_name	el número máximo de ||| max num	count=1
return	de esquema en un ||| void	count=1
return	ya ha ||| void	count=1
function_name	en unidades de grafema ||| grapheme stripos	count=1
namespace	relleno usado cuando ||| gmagickdraw	count=1
return	efecto de ||| void	count=1
function_name	uri del espacio ||| uri	count=1
function_name	más opciones ||| options	count=2
function_name	tendencias de cada ||| fann get bias	count=1
function_name	el [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	disponible ||| open memory image	count=2
function_name	a la cola ||| queue	count=1
namespace	el servidor que está ||| function	count=1
arg_pair	16 bytes en ||| string $binary	count=1
arg_pair	el ||| float $disp_time	count=1
function_name	[function_name_1] de ||| [function_name_2] text rendering [function_name_1]	count=3
function_name	la codificación de caracteres ||| encoding	count=2
function_name	error cuando ||| using	count=1
function_name	depuración ||| server dump debug	count=1
function_name	fija la base ||| db	count=1
namespace	por new sólo si ||| function	count=1
function_name	callback ||| gupnp	count=1
function_name	y sólo si el ||| set using exceptions	count=1
function_name	tipo mime ||| to mime type	count=1
function_name	de la frase de ||| phrase	count=1
function	pedido de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	del archivo ||| string $file	count=1
function_name	uso de ||| get status	count=1
function_name	lista de ||| list	count=5
function_name	asociado al ||| seek	count=1
namespace	del ||| mongoid	count=1
function_name	crea un nuevo objeto ||| new	count=1
arg_pair	de las restricciones ||| int $facetsort string $field_override	count=1
function_name	cargar entidades ||| disable entity	count=1
function_name	este método asigna ||| assign ref	count=2
function_name	para ||| imap	count=1
arg_pair	stack es ||| string $offset	count=1
function_name	ciclo de peticiones entero ||| nop	count=1
function_name	de byte en ||| byte	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] green [function_name_2]	count=1
arg_pair	de ||| string $servername string $username	count=1
arg_pair	es el único método ||| mixed $xsd_file	count=1
return	los ||| bool	count=1
function_name	de estado del servidor ||| status	count=1
function_name	menos tantos documentos ||| set mlt min doc	count=1
arg_pair	función cubrid_schema() se usa ||| resource $conn_identifier int $schema_type	count=1
function_name	los callback definidos por ||| gupnp control point browse start	count=1
function_name	la codificación ||| mb convert encoding	count=1
function_name	a las funciones internas ||| user defined	count=1
function_name	obtiene información ||| getinfo	count=1
function_name	la miniatura embebida ||| exif thumbnail	count=1
arg_pair	devuelve str con ||| string $str	count=2
arg_pair	mensaje y ||| zmqsocket $frontend	count=1
namespace	presente que ||| judy	count=2
function_name	biblioteca cliente ||| client info	count=2
return	defina sobre las capas ||| zmqsocket	count=1
function_name	tendencias de cada capa ||| get bias	count=1
function_name	diff unificado ||| diff	count=1
function_name	valor ||| set using	count=1
function_name	código de bytes ||| bcompiler	count=4
arg_pair	[arg_pair_1] decir ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	conexiones del ||| connection	count=1
return	si la tarea ||| bool	count=1
function_name	en el sistema ||| crypt	count=1
arg_pair	datos blob/clob ||| resource $lob_identifier	count=1
namespace	para una tarea ||| gearmanclient	count=2
arg_pair	estructura de datos de ||| int $num_input	count=1
function_name	los recursos persistentes como ||| apd dump persistent resources	count=1
function_name	sybase_fetch_assoc() con ||| sybase fetch object	count=1
function_name	algoritmo especificado si devuelve ||| mcrypt module get supported	count=1
function_name	al estado ||| count	count=1
function_name	descripción de ||| cairo image surface	count=1
arg_pair	mediante ibase_blob_open() ||| resource $blob_handle	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $stmt [arg_pair_2]	count=15
return	excepción indicando que el ||| void	count=1
function_name	de activación ||| activation	count=7
function_name	tipo de [function_name_2] ||| [function_name_2] [function_name_1]	count=13
namespace	un valor especial indicando ||| rarexception	count=1
function_name	método [function_name] ||| save [function_name]	count=3
function_name	de atajo empleando ||| shortcut array	count=1
function_name	reintentos ||| sybase deadlock retry count	count=2
function_name	devuelve la precisión de ||| db2 field precision	count=1
function_name	lee ||| all	count=1
function_name	la que las palabras ||| mlt min	count=1
function_name	resultado de una consulta ||| query	count=1
function_name	del manejador de declaraciones ||| handler	count=1
return	indicado para ||| bool	count=1
function_name	[function_name] proporcionalmente ||| magnify [function_name]	count=3
function_name	ssl para las solicitudes ||| set	count=1
function_name	[function_name_1] la asignación ||| [function_name_2] [function_name_1]	count=6
function_name	http de la ||| get http	count=1
function_name	comporta como mssql_connect() ||| mssql pconnect	count=1
function_name	ldap devuelta por ||| ldap sort	count=1
namespace	post o pasado mediante ||| function	count=1
function	[function_name_1] name0 es ||| [function_name_1] [arg_pair_2]	count=1
function_name	acumulación y recuperar los ||| aggregate	count=1
function_name	de eventos ||| event buffer	count=1
function_name	de primer plano ||| ncurses	count=1
namespace	fichero actual ||| splfileinfo	count=1
function_name	reemplaza o inserta la ||| replace	count=1
arg_pair	cualquier píxel que coincida ||| mixed $fill float $fuzz	count=1
arg_pair	dibuja ||| int $x int $y	count=1
function_name	de dsn disponibles ||| odbc	count=1
function_name	campo ||| odbc field	count=1
function_name	cambiar el ecm ||| cascade output stagnation	count=1
arg_pair	se ||| string $username	count=1
function_name	la [function_name] relation dada ||| [function_name]	count=1
function_name	atributos ||| get attributes	count=2
function_name	de trozos remarcados ||| highlight	count=1
function_name	la descripción ||| cairo ps level to string	count=1
arg_pair	una imagen ||| string $profile	count=1
function_name	manejo de errores ||| errors	count=1
function_name	una entrada ||| filesize	count=1
namespace	como ||| function	count=4
function	[function_name_1] el nombre ||| [function_name_1] names [arg_pair_2]	count=1
function_name	de un blob que ||| blob	count=1
function_name	si es ||| is	count=2
return	en la ruta que ||| bool	count=1
arg_pair	un ||| float $beta	count=1
function_name	llamar cuando ||| callback	count=1
function_name	desde la csr ||| openssl csr sign	count=1
function_name	rectángulo a la ruta ||| rectangle	count=1
function_name	documentos como ||| mlt	count=1
function_name	información de la última ||| dbplus last	count=1
function_name	colocar antes del elemento ||| prefix	count=1
return	define el de ||| bool	count=1
return	buscarán los archivos ||| string	count=1
function_name	en por lo menos ||| mlt	count=1
return	sistema ||| bool	count=1
function_name	[function_name_1] csr certificate ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] severidad de ||| [function_name_2] [function_name_1]	count=1
function_name	large object resource ||| pg lo truncate	count=1
function_name	el ||| using	count=1
namespace	similares ||| mongocursor	count=1
return	creado ||| void	count=1
function_name	devuelve ||| get result	count=1
return	instancia xml dada ||| sdo_das_xml_document	count=1
function_name	o la alternativa ||| imagecolorresolvealpha	count=1
function_name	datos arbitrarios a todos ||| ping	count=1
return	la hoja de ||| void	count=1
arg_pair	zguide ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	producto de valores de ||| product	count=1
function_name	las palabras ||| min doc	count=1
arg_pair	usar los efectos de ||| int $effect	count=1
function_name	[function_name_1] épocas ||| [function_name_1] output stagnation [function_name_2]	count=1
function	lista [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	del manejador ||| decl handler	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] inner [function_name_2]	count=1
function_name	el último ||| last	count=1
function_name	la primera tupla ||| dbplus first	count=2
arg_pair	desde un fichero ||| resource $context	count=1
function_name	la definición de color ||| color	count=1
arg_pair	obtener la información del ||| int $schema_type	count=1
function_name	[function_name_1] apache ||| [function_name_2] [function_name_1]	count=6
function_name	fecha ||| jdtojewish	count=1
function_name	comentario de una entrada ||| comment	count=1
arg_pair	una o más imágenes ||| imagick $image int $channeltype	count=1
function_name	la ||| doc	count=2
arg_pair	establece a 0 ||| gmp $a	count=1
arg_pair	simple archivo ||| resource $fam string $filename	count=1
arg_pair	user ||| resource $link_identifier string $user	count=1
arg_pair	de datos emita uno ||| string $event_name1 string $event_name2	count=1
return	llena la ruta actual ||| bool	count=1
arg_pair	los parámetros cipher / ||| string $cipher	count=1
arg_pair	idéntica a fgets() excepto ||| int $length	count=1
function_name	y ||| ncurses color set	count=2
function_name	descripción ||| cairo ps surface create	count=2
function_name	si no se da ||| idate	count=1
function_name	último código de retorno ||| return code	count=1
function_name	documento ||| terms	count=1
function_name	de tamaño asociado ||| size	count=1
return	otro núcleo («kernel») ||| void	count=1
function_name	de ||| await	count=1
function_name	una operación and ||| variant and	count=1
arg_pair	función cubrid_set_drop() ||| string $set_element	count=1
function_name	codificaciones admitidas ||| mb list encodings	count=1
function_name	absoluto canonizado en el ||| eio realpath	count=1
namespace	raíz enésima dada por ||| function	count=1
function_name	descripción ||| cairo image surface	count=1
function	[function_name_1] arg ||| [function_name_1] [arg_pair_2]	count=2
namespace	de bases de ||| function	count=1
function_name	el nombre largo para ||| frame long name	count=1
function_name	[function_name_1] etiqueta ||| elements by [function_name_2] [function_name_1]	count=1
return	actual ||| string	count=1
arg_pair	esta ||| int $options	count=1
namespace	tarea ||| gearmanclient	count=5
function_name	sólo si el ||| using exceptions	count=1
function_name	lista de ||| enchant broker list	count=1
arg_pair	una base de ||| string $schema	count=1
function_name	imagen ||| shade image	count=2
function_name	copia los ||| pgsql copy to	count=1
return	este método ||| mongocursor	count=1
function_name	entwerfen von einer mime ||| mime encode	count=1
return	-- ||| zmqsocket	count=1
function_name	otro núcleo («kernel») a ||| kernel	count=1
function_name	del espaciado ||| space	count=1
function_name	el número de funciones ||| functions	count=1
function_name	archivo dado y extrae ||| uudecode	count=1
function_name	recupera ||| libxml get	count=1
function_name	leída la siguiente fila ||| fetch	count=1
function_name	glo ||| new glo	count=2
function_name	ps_stringwidth() excepto que ||| ps string geometry	count=1
function_name	definida por el usuario ||| uksort	count=1
function_name	la directiva error_reporting ||| error reporting	count=1
function_name	[function_name_1] [function_name_2] un ||| [function_name_1] [function_name_2] string $filename	count=3
function_name	[function_name_1] salidas de ||| [function_name_2] [function_name_1]	count=3
function	el nombre [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	obtiene varios valores ||| get value	count=1
namespace	terminal actual [namespace] ||| [namespace]	count=3
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=10
function_name	la [function_name_2] ||| [function_name_2] [function_name_1]	count=23
arg_pair	memcached::set() ||| int $expiration	count=1
function_name	true si el ||| is	count=1
function_name	devuelve el color hsl ||| get	count=1
function_name	[function_name_1] límite ||| [function_name_1] cascade candidate [function_name_2]	count=1
namespace	llamarla ||| function	count=1
function_name	función cubrid_lock_read() se usa ||| cubrid lock read	count=1
function_name	lecturas distribuidas ||| slave	count=1
function_name	establece la ||| set encoding	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] terms lower [function_name_2]	count=3
arg_pair	a fgets() excepto que ||| int $length	count=1
function_name	transformación ||| text matrix	count=1
function_name	descripción ||| cairo matrix rotate	count=1
arg_pair	saturación y el ||| float $saturation	count=1
function_name	file_get_contents() devuelve el ||| file get contents	count=2
arg_pair	nombre de relation ||| resource $relation string $name	count=1
arg_pair	bytes str ||| string $str	count=1
function_name	descripción de ||| ps surface	count=3
arg_pair	negro ||| float $blackpoint	count=1
arg_pair	el punto x3 ||| float $x3	count=1
namespace	entero ||| ev	count=1
arg_pair	la función callback ||| int $pri callable $callback	count=1
namespace	entonces en ||| rarexception	count=1
function_name	socket de ||| socket server	count=1
function_name	este serán ||| frequency	count=1
function_name	coseno hiperbólico para ||| trader cosh	count=1
return	un array que describe ||| array	count=1
function_name	semáforo de system ||| sem	count=1
function_name	palabras ||| min doc	count=1
function_name	se puede añadir al ||| add	count=1
arg_pair	a un valor ||| resource $p	count=1
function_name	datos: únicamente ||| drain	count=1
arg_pair	por flag ||| string $flag	count=1
namespace	base de las ||| harufont	count=1
function_name	el uso ||| proc get status	count=1
function_name	opciones ||| options	count=1
function_name	archivo pdf generado ||| pdf	count=1
return	virtual actual donde se ||| string	count=1
arg_pair	descriptor de fichero fd ||| mixed $fd int $mode	count=1
namespace	imagen que ||| function	count=7
function_name	miniatura de [function_name] ||| set [function_name]	count=1
arg_pair	crea un ||| int $width	count=1
function_name	la que las ||| min doc	count=1
namespace	actual usando la ||| harupage	count=1
function_name	probabilística de ||| prime	count=1
function	[function_name_1] nombre ||| [function_name_1] names [arg_pair_2]	count=1
function_name	cual las palabras serán ||| mlt	count=1
arg_pair	envía un mensaje ||| string $message	count=1
namespace	preserva los ||| gmagick	count=1
function_name	versión xbm ||| imagexbm	count=1
function_name	este serán ||| set mlt min doc frequency	count=1
function_name	[function_name_1] la implementa ||| [function_name_2] [function_name_1]	count=2
namespace	entrada definida por su ||| ziparchive	count=1
return	contenido en ||| bool	count=2
arg_pair	fecha gmt ||| int $is_dst	count=1
arg_pair	de needle ||| mixed $needle	count=1
namespace	de acuerdo a ||| function	count=1
function_name	datos ||| uudecode	count=1
function_name	crea [function_name_2] ||| [function_name_1] data [function_name_2]	count=1
function_name	vacía el contenido de ||| mysqlnd qc clear	count=1
function_name	lee atributos y ||| get attributes	count=1
function_name	seguimiento tailable que ||| tailable	count=1
arg_pair	y su ||| resource $id array $config	count=1
function	pedido de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	el intérprete ||| resource $parser	count=4
function_name	distribución [function_name] cuya densidad ||| stats rand gen [function_name]	count=1
arg_pair	una base ||| resource $pxdoc string $name	count=1
return	una consulta en los ||| bool	count=1
function_name	el número ||| mysqli num	count=1
arg_pair	desde el ||| string $content	count=1
function_name	datos especificados ||| dba fetch	count=1
return	que el valor ||| void	count=1
function_name	de filas ||| start	count=1
function_name	entidades ||| libxml disable entity loader	count=2
function_name	el número de ||| fann num	count=2
return	devuelve el momento actual ||| int	count=1
function_name	bind_textdomain_codeset() se establece la ||| bind textdomain codeset	count=1
arg_pair	número del indentificador de ||| resource $result_id	count=1
function_name	a la fila ||| fetch	count=1
function_name	de estilo ||| slide show	count=1
function_name	tipo ||| gettype	count=1
arg_pair	en un ||| resource $grp int $limit	count=1
function_name	phar cuando sea ||| map phar	count=1
arg_pair	del ||| int $length	count=1
arg_pair	iterar ||| resource $stmt int $colnum	count=1
function_name	imagen ||| interlace	count=1
function_name	del ||| mailparse uudecode	count=1
function_name	[function_name_1] nombre ||| [function_name_1] [function_name_2] string	count=1
function_name	iterator interno ||| get inner iterator	count=2
arg_pair	comporta de forma ||| string $username	count=1
arg_pair	del texto ||| resource $handle	count=1
namespace	plano ||| function	count=1
namespace	ømq pueden hacer ||| zmqdevice	count=1
function_name	del pundo de ||| chr	count=1
arg_pair	imagen ||| int $width int $height	count=1
arg_pair	parámetro flatness ||| resource $pdfdoc float $flatness	count=1
function_name	número máximo [function_name_2] ||| [function_name_1] alternate [function_name_2]	count=2
namespace	mismo nombre dado que ||| function	count=1
function_name	no información ||| info	count=1
function_name	última fila insertada o ||| last insert	count=1
arg_pair	feature está soportada para ||| string $feature	count=1
function	[function_name_1] codificación para ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	ningún caracter de mask ||| string $mask	count=1
function_name	de los [function_name] ||| [function_name]	count=1
arg_pair	que ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	abstracción ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	establece el uri que ||| string $uri	count=1
return	x o ||| bool	count=1
function_name	la acción con parámetros ||| service proxy action	count=1
function_name	preparada [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	nodo basado ||| domnode	count=1
function_name	la instancia ||| get	count=1
return	[return] lista de ||| [return]	count=1
function_name	texto ||| curl	count=1
namespace	atributo si [namespace] ||| [namespace]	count=1
function_name	entero solrquery::facet_sort_index o solrquery::facet_sort_count) ||| facet sort	count=1
function_name	el ||| strerror	count=1
function_name	si la [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	relation bajo un ||| string $name resource $relation	count=1
function_name	la traza de ||| trace	count=3
function_name	de secuencia de mensaje ||| msgno	count=1
function_name	[function_name_1] los métodos ||| [function_name_1] class [function_name_2]	count=1
namespace	tipo ||| gmagick	count=1
function_name	seno hiperbólico para cada ||| sinh	count=1
function_name	[function_name_1] variables ||| [function_name_1] [function_name_2]	count=2
return	fichero ||| int	count=1
function_name	lista de ||| ps open memory	count=1
arg_pair	establece una ||| string $host	count=1
return	en un identificador ||| bool	count=1
arg_pair	una fila de ||| resource $result_id int $row_number	count=1
function_name	devuelve la precisión ||| precision	count=2
function_name	crea un índice ||| create	count=1
function_name	del apuntador de ||| uudecode all	count=1
function_name	es el espacio ||| default namespace	count=1
arg_pair	local [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	solo ||| directory	count=1
function_name	la [function_name_2] ||| [function_name_1] [function_name_2]	count=11
function_name	para desplegar el logo ||| php logo	count=1
function_name	devuelve la traza ||| get trace	count=6
namespace	valor predeterminado ||| directory	count=1
function_name	antepone un contenido a ||| prepend	count=1
return	una función definida por ||| void	count=2
function_name	libera todos los recursos ||| free	count=1
arg_pair	una nueva definición de ||| float $xstep	count=1
function_name	la función glob() de ||| glob	count=1
function_name	y lo escribe al ||| write function	count=1
namespace	escucha que ||| function	count=1
arg_pair	que server_key se puede ||| array $keys	count=1
function_name	la que las ||| mlt min	count=1
function_name	la intersección de ||| uintersect assoc	count=1
function_name	[function_name_1] comentario ||| [function_name_2] [function_name_1]	count=2
function_name	devuelve el umbral ||| get	count=1
arg_pair	[arg_pair_1] por mailbox ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	en haystack y ||| bool $part	count=2
function_name	y extrae cada archivo ||| all	count=1
function_name	filas que se ||| set	count=1
function_name	color dada ||| color content	count=1
arg_pair	la propiedad hwnd en ||| int $window_handle	count=1
function_name	sólo ||| set using	count=1
arg_pair	sobre las capas de ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	ruta efectiva del proceso ||| get current route	count=1
function_name	la lista ||| odbc	count=1
return	le ha consultado ||| int	count=1
return	un valor de ||| mixed	count=1
function	[function_name_1] [arg_pair_2] confirmación automática ||| [function_name_1] [arg_pair_2]	count=7
arg_pair	funciones socket_create() o socket_accept() ||| int $length	count=1
function_name	convierte un guid binario ||| mssql guid	count=1
function_name	último mensaje ||| last error	count=1
function	descrita [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function	[function_name_1] el fichero ||| [function_name_1] [arg_pair_2]	count=4
function_name	nombre largo para un ||| long name	count=1
function_name	obtener información blob/clob ||| lob export	count=1
arg_pair	del fichero filename ||| string $filename	count=1
function_name	del xml a ||| xml	count=1
arg_pair	grafemas ||| int $extract_type int $start	count=1
function_name	ha asignado a ||| peak	count=1
function_name	el pid del id ||| get	count=1
function_name	devuelve el nombre abreviado ||| get short name	count=1
namespace	e ||| gmagick	count=1
function_name	devuelve [function_name] del entorno ||| get [function_name]	count=1
function_name	versión ||| ngettext	count=1
function_name	elipse con centro ||| imagefilledellipse	count=1
namespace	ya existía ||| xsltprocessor	count=1
function_name	este para que ambos ||| kernel	count=1
function_name	la descripción de la ||| cairo scaled font get font matrix	count=1
function_name	yaml de data ||| yaml emit file	count=1
namespace	formato dado por ||| function	count=1
function	crea un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de campos del ||| fields	count=1
arg_pair	con la revisión revision ||| int $flags	count=1
arg_pair	crea un efecto de ||| int $x int $y	count=1
function_name	rojo de la ||| red	count=2
function_name	envía la acción ||| action	count=1
arg_pair	con [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	cliente de db++ ||| dbplus	count=1
arg_pair	un ||| resource $font_index	count=1
function_name	llamarla ||| source	count=1
function_name	errores interno ||| trigger error	count=1
function_name	de errores y ||| sqlsrv errors	count=1
return	como ||| array	count=1
return	basada en paleta creada ||| bool	count=1
arg_pair	transformaciones con xsltprocessor ||| string $namespace string $name	count=1
arg_pair	por form ||| resource $component	count=1
function_name	la adición ||| imagecolorallocatealpha	count=1
function_name	[function_name_1] postgresql ||| [function_name_2] [function_name_1]	count=8
namespace	verisón serializada ||| quickhashstringinthash	count=1
function_name	nombre de ||| record by name	count=1
function_name	crea [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	[arg_pair_1] modo ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	por una o más ||| function	count=1
function_name	la versión del ||| info	count=1
function_name	logaritmo en base 10 ||| trader log10	count=1
function_name	compresión ||| compression	count=6
function_name	tasa de baudios ||| dio tcsetattr	count=1
namespace	llamada [namespace] una ||| [namespace]	count=1
return	la función usa ||| int	count=1
function_name	contraseña ||| oci password	count=1
arg_pair	la base de eventos ||| int $flags	count=1
function_name	estado de ||| status	count=1
function_name	certificado y su clave ||| pkcs7 sign	count=1
arg_pair	función cubrid_set_query_timeout() ||| resource $req_identifier	count=1
arg_pair	colas ||| zmqsocket $backend	count=1
function_name	por el usuario) ||| restore	count=2
function_name	línea del ||| line	count=1
arg_pair	parámetro stack es ||| string $stack	count=1
function_name	copyright de ||| copyright	count=1
arg_pair	las estructuras de ||| int $table	count=1
return	guarda en ||| bool	count=1
function_name	devuelve un array vacío ||| module get	count=1
function_name	la función está definida ||| in	count=1
return	que ||| solrquery	count=3
function_name	el punto primario rojo ||| red primary	count=2
function_name	cambia ||| dbplus	count=1
function_name	el atributo ||| attribute	count=5
function_name	dispositivos ||| construct	count=1
return	para ver si ||| bool	count=1
arg_pair	una ||| resource $result_id	count=1
namespace	cuando ||| gmagickdraw	count=2
function_name	devuelve el contenido ||| ifx get	count=2
function_name	html ||| html	count=1
return	en la que las ||| solrquery	count=1
function_name	la alternativa más ||| imagecolorresolve	count=1
function_name	devuelve el ||| get resource	count=1
arg_pair	el certificado x509cert ||| mixed $x509cert bool $shortnames	count=1
function_name	xml desde la ||| xml	count=1
function_name	varita ||| set option	count=2
arg_pair	llamar repetidamente a filter_var() ||| array $data mixed $definition	count=1
function_name	llama durante la instanciación ||| on create	count=1
function_name	mueve el [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	función callback ||| array $array callable $callback	count=1
function_name	[function_name_1] servidor mysql ||| [function_name_2] [function_name_1]	count=2
function_name	prioridad baja [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	mensaje ||| msgno	count=1
function_name	y salidas para ||| set scaling	count=1
function_name	caracteres del inicio ||| ltrim	count=1
arg_pair	texto que lee ||| resource $handle int $length	count=1
function_name	obtiene [function_name] de la ||| [function_name]	count=1
function	[function_name_1] para ||| [function_name_1] [arg_pair_2]	count=8
namespace	(«kernel») a ||| imagickkernel	count=1
function_name	directorio vacío con la ||| empty dir	count=1
function_name	borrar un ||| delete	count=1
return	en paleta ||| bool	count=1
function_name	hace un diff unificado ||| diff	count=1
arg_pair	negro especificados al rango ||| float $gamma	count=1
function_name	exe de bcompiler ||| bcompiler load exe	count=3
function_name	el iterador aún ||| valid	count=1
function_name	[function_name] menos intensidad ||| adaptive sharpen [function_name]	count=2
arg_pair	un campo [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
function	[function_name_1] estructura de ||| [arg_pair_2] [function_name_1]	count=1
function_name	nombre y ||| char from name	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] max [function_name_2]	count=1
function_name	de filas afectadas por ||| msql affected rows	count=1
arg_pair	petición actual indicando que ||| string $actor string $details	count=1
function_name	tamaño de paso máximo ||| rprop delta max	count=1
function_name	la entrada del ||| zip entry	count=1
function_name	puntero dado ||| bzerrstr	count=1
arg_pair	[arg_pair_1] con los ||| object [arg_pair_1] string $class_name [arg_pair_2]	count=3
return	previamente ||| resource	count=1
function_name	de ssl para las ||| sslchecks	count=1
function_name	la descripción de ||| cairo image surface get	count=1
function_name	tantos documentos como este ||| min	count=1
namespace	de renderización ||| gmagick	count=1
arg_pair	la mayoría ||| string $connection_string string $character_set	count=1
arg_pair	una [arg_pair_2] ||| [arg_pair_2] float $ury [arg_pair_1]	count=1
return	desde la cadena ||| sdo_das_xml_document	count=1
arg_pair	cualquier abstracción que se ||| zmqsocket $backend	count=1
function_name	el tamaño actual ||| filesize	count=1
function_name	compara ||| cmp	count=1
arg_pair	conjunto óptimo ||| int $nullable	count=1
function_name	un proceso abierto mediante ||| proc get status	count=1
arg_pair	secuencia especificada por sequence ||| resource $imap_stream string $sequence	count=1
function_name	en ||| exceptions	count=1
arg_pair	parámetro stack ||| string $stack	count=1
function_name	[function_name_1] especificados ||| [function_name_1] [function_name_2]	count=4
return	dsn disponibles ||| array	count=1
function_name	representación de un objeto ||| serialize	count=1
function_name	diff ||| diff	count=1
function_name	archivos ||| dbplus chdir	count=2
function_name	por ||| mlt	count=1
function_name	final [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	valor ||| set	count=1
function_name	llena ||| array fill	count=1
function_name	la descripción de la ||| cairo matrix translate	count=1
arg_pair	semántica del rfc 2045 ||| int $chunklen	count=1
function_name	calcula el coseno para ||| trader cos	count=1
function_name	cursor para el párametro ||| odbc cursor	count=1
function_name	encabezados a ||| set soap headers	count=1
arg_pair	la cuota de ajustes ||| string $quota_root	count=2
function_name	afectadas ||| ifx affected	count=1
function_name	par clave privada ||| pkey	count=1
function_name	un ||| mailparse	count=1
function_name	paginación ldap ||| ldap	count=1
arg_pair	una ||| mixed $background float $x_shear	count=1
function_name	un error una ||| set using exceptions	count=1
function_name	alternativa más próxima posible ||| imagecolorresolvealpha	count=1
function_name	patrón de discontinuidad actual ||| pdf setdash	count=1
return	un error una excepción ||| void	count=1
function_name	las consultas de facetas ||| facet queries	count=1
arg_pair	texto que lee ||| resource $handle	count=1
namespace	true entonces en ||| rarexception	count=1
function_name	matriz con la lista ||| cubrid list	count=1
function	de activación [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
arg_pair	que esté disponible para ||| resource $stmt int $row	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] qc [function_name_1]	count=4
namespace	opcional se ||| function	count=1
function_name	establece ||| imap set	count=1
namespace	puntero ||| oci-lob	count=1
function_name	de memcached::touch() con la ||| touch by	count=1
arg_pair	old_file y new_file y ||| string $new_file	count=1
function	la escala [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	función bindtextdomain() establece la ||| bindtextdomain	count=1
arg_pair	image dada ||| float $inputgamma	count=1
namespace	sesiones y devuelve el ||| sessionhandlerinterface	count=1
arg_pair	apunta a una página ||| int $page string $dest	count=1
function_name	[function_name_1] excepción indicada ||| [function_name_2] [function_name_1]	count=1
return	de el ||| void	count=1
arg_pair	los bordes de la ||| int $height	count=1
function_name	más próximo al valor ||| imagecolorclosestalpha	count=1
function_name	número de pedido de ||| yp order	count=1
function_name	dado y extrae ||| mailparse uudecode all	count=1
function_name	de curl manteniendo las ||| curl	count=1
function_name	la asignación de ||| sma	count=1
function	[function_name_1] [arg_pair_2] formulario ||| [function_name_1] [arg_pair_2]	count=1
function_name	recuperada ||| mysql	count=3
function_name	[function_name] original ||| despeckle [function_name]	count=3
return	momento actual medido como ||| int	count=1
function_name	un ||| uudecode all	count=2
function_name	establecidas para los mensajes ||| imap	count=1
return	inactividad ||| int	count=1
function	con unos [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	de ømq ||| zmqsocket $frontend	count=1
function_name	devuelve la función de ||| fann get	count=2
function_name	ningún tipo de información ||| filename	count=1
namespace	o subsiguiente ||| sdo_das_xml	count=1
function_name	un error una excepción ||| set	count=1
function_name	el nodo del atributo ||| attribute	count=1
function_name	función cubrid_close_prepare() cierra ||| cubrid close prepare	count=1
function_name	función geoip_db_avail() ||| db avail	count=1
function_name	cada servidor ||| server by	count=1
function_name	ha asignado ||| peak	count=1
function_name	en la que ||| doc frequency	count=1
function_name	la base de datos ||| dbase	count=1
namespace	cuando la biblioteca unrar ||| rarexception	count=1
return	en lugar de esta ||| bool	count=1
function_name	del color de ||| color	count=1
function_name	la fila ||| fetch	count=4
function_name	extensiones de ||| extensions	count=1
namespace	los valores usando una ||| arrayiterator	count=1
function_name	esta función crea ||| create processing	count=1
function_name	entradas y salidas para ||| set	count=1
arg_pair	espacio ||| string $namespaceuri	count=2
return	cambia el directorio virtual ||| string	count=1
function_name	dice [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	nombre largo ||| long name	count=1
function_name	liberación de memoria asignada ||| udm free agent	count=1
function_name	la descripción ||| cairo svg surface restrict to version	count=1
function_name	ideal especificado ||| regex slop	count=1
function	única fila [arg_pair_2] ||| function mixed cubrid [function_name_1] [arg_pair_2]	count=3
arg_pair	devuelve un resultado con ||| resource $connection string $qualifier	count=2
function_name	hilo de ||| thread	count=2
function_name	libera un ||| free	count=1
arg_pair	una ruta ||| string $address	count=1
return	caracter que ||| string	count=1
function_name	el iterador aún está ||| valid	count=1
function_name	primo ||| prime	count=1
arg_pair	assoc_array en valores adecuados ||| array $assoc_array	count=1
function_name	la escala [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	una entrada de ||| zip	count=1
arg_pair	pequeño ||| float $rprop_delta_min	count=1
function_name	oauth ||| required parameter	count=2
function_name	el ||| autocommit	count=1
function_name	el nombre del ||| name	count=3
function_name	la excepción indicada ||| exception	count=2
function_name	establece el número ||| set cascade	count=3
function_name	color ||| background color	count=2
function	existe [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	servidor ssh2 ||| ssh2	count=1
arg_pair	dibuja ||| int $x	count=2
function_name	de ser deserializado ||| wakeup	count=1
function_name	llama a la ||| call user	count=1
arg_pair	direcciones servicios colas o ||| zmqsocket $backend	count=1
function_name	las consultas de ||| queries	count=1
arg_pair	una estructura de datos ||| int $num_data	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] type [function_name_1]	count=3
namespace	cualesquiera ||| function	count=1
function_name	crea y ||| ifxus create	count=1
namespace	sobre las ||| zmqdevice	count=1
function_name	anexa un círculo a ||| circle	count=1
function_name	descripción de la ||| cairo ps level to	count=1
return	por el puntero dado ||| string	count=1
function_name	lee los datos del ||| mailparse uudecode all	count=1
function_name	la descripción de la ||| cairo ps surface restrict to level	count=1
function_name	pundo de código de ||| chr	count=1
function_name	imagen en blanco ||| imagecreate	count=1
function_name	esquema en ||| types	count=1
arg_pair	str especificada por los ||| string $str	count=1
function_name	complemento de replicación ||| mysqlnd	count=1
function_name	libera toda la ||| fbsql free result	count=1
function_name	del índice del campo ||| cubrid field	count=2
namespace	barras ||| function	count=1
arg_pair	oid dado ||| string $oid	count=1
function_name	string ||| crypt	count=1
function_name	última operación de db++ ||| dbplus errno	count=1
arg_pair	con un nuevo ||| object $object mixed $value	count=1
namespace	similar a popen() pero ||| function	count=1
return	de la posición actual ||| int	count=1
return	almacenará en búfer después ||| bool	count=1
namespace	le ha consultado ||| mongocursor	count=1
function_name	previas operaciones ||| ldap count entries	count=1
function_name	la respuesta xml del ||| response	count=1
function_name	esquema en un ||| add	count=1
function_name	con la adición ||| imagecolorallocatealpha	count=1
function_name	frase de consulta en ||| highlight use phrase	count=1
function_name	atributo llamado name ||| attribute	count=1
arg_pair	memcached::getmulti() con la excepción ||| string $cas_tokens int $flags	count=1
function_name	valor ||| set value	count=1
function_name	la base de ||| fbsql start db	count=1
function_name	la prueba probabilística de ||| prob prime	count=1
function_name	error una excepción de ||| set using exceptions	count=1
namespace	[namespace] difieren ||| [namespace]	count=3
arg_pair	representa el nombre distinguido ||| resource $privkey	count=1
namespace	en la ||| solrquery	count=1
function_name	[function_name_1] corto para ||| [function_name_2] [function_name_1]	count=6
arg_pair	un enlace ||| resource $pdfdoc float $lowerleftx	count=1
function_name	etiqueta ||| label	count=1
function_name	fuente cargada ||| font	count=1
namespace	que puede ocasionar ||| function	count=1
arg_pair	y de ||| string $setting mixed $value	count=1
arg_pair	feature está soportada para ||| string $feature string $version	count=1
function_name	envía información de estado ||| status	count=1
namespace	por línea en busca ||| function	count=1
function_name	false si es uno ||| is	count=1
function_name	última modificación ||| ftp mdtm	count=1
function_name	de la puesta ||| sunset	count=1
arg_pair	pre-procesa texto para después ||| string $text	count=1
function	del [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	una lista de ||| enchant broker list dicts	count=1
function_name	función cubrid_drop() ||| drop	count=1
function_name	número de épocas ||| epochs	count=3
return	regexiterator::setflags() para [return] lista ||| [return]	count=1
function_name	argumento cadena_hex ||| hexdec	count=1
arg_pair	dados por data ||| string $data int $offset	count=1
return	del id de mongo ||| int	count=1
function_name	punto primario verde ||| image green primary	count=2
arg_pair	len bytes [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
namespace	número de secuencia de ||| function	count=1
arg_pair	para poder utilizarlo ||| string $encoding string $separator	count=1
function_name	filas ||| fbsql num rows	count=1
function_name	línea actual para el ||| get current line	count=1
namespace	dos ||| function	count=2
arg_pair	disponible la ||| resource $psdoc	count=1
function_name	que la última ||| last	count=1
function_name	de espera de ||| timeout	count=4
function_name	llamarla varias ||| odbc	count=1
function_name	advertencias y devolver ||| using exceptions	count=1
arg_pair	fuentes font ||| resource $pdfdoc int $font	count=1
function_name	parámetro ||| param	count=3
function_name	acl para un ||| getacl	count=1
function_name	ømq pueden hacer ||| construct	count=1
function_name	necesariamente igual ||| iconv strlen	count=1
arg_pair	por variable_key y libera ||| int $variable_key	count=1
function_name	los métodos de ||| methods	count=2
function_name	cookie [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	arbitrarios a todos los ||| bool	count=1
function_name	que ya ||| add types	count=1
function_name	tendencias de ||| bias	count=1
function_name	petición ||| eio	count=2
arg_pair	req_handle ||| resource $req_identifier	count=1
arg_pair	una consulta ||| string $query string $dbpath	count=1
function_name	el nombre de la ||| field name	count=1
arg_pair	si el parámetro stack ||| string $stack string $offset	count=1
function_name	dado ||| bzerrstr	count=1
function_name	descripción de la función ||| cairo pattern create radial	count=1
function_name	[function_name] una llamada ||| bcompiler [function_name]	count=1
function	[function_name_1] algoritmo ||| [function_name_1] [arg_pair_2]	count=1
function_name	el prefijo de ||| prefix	count=1
return	consultado ||| int	count=1
function_name	del ||| mailparse uudecode all	count=2
namespace	la red por ||| function	count=1
return	si un número es ||| int	count=1
function_name	desde ||| load from	count=2
namespace	el retraso de la ||| gmagick	count=1
function_name	x509 desde la csr ||| openssl csr sign	count=1
function_name	[function_name] la ||| transform [function_name]	count=1
arg_pair	desde el domain por ||| string $codeset	count=1
namespace	que ejecuta ||| function	count=1
arg_pair	una fuente ||| string $encoding	count=1
namespace	la cadena de ||| sdo_das_xml	count=1
namespace	nuevo filteriterator que ||| filteriterator	count=1
return	crea un fichero ordinario ||| resource	count=1
function_name	la descripción de ||| cairo pattern get extend	count=1
function_name	el manipulador curl para ||| curl init	count=1
namespace	la ||| memcached	count=1
function_name	lista de ||| ps open	count=1
namespace	que mostrar el ||| function	count=1
function_name	[function_name_1] [function_name_2] inspeccionada por la caché ||| function array mysqlnd qc [function_name_1] [function_name_2] trace log	count=1
namespace	comporta de forma ||| function	count=1
function_name	agregar ||| required parameter	count=2
namespace	la lista de ||| imagick	count=1
arg_pair	cubrid_schema() se usa para ||| int $schema_type	count=1
return	nombre base del ||| string	count=1
namespace	información que devuelven esas ||| function	count=1
function	el algoritmo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de estancamiento de salida ||| cascade output stagnation	count=1
arg_pair	estándar basado en des ||| string $str	count=1
return	una consulta preparada ||| mixed	count=1
function_name	xml ||| xml parser	count=1
return	un entero que describe ||| int	count=1
arg_pair	message al ||| string $options	count=1
function_name	mínimo ||| mssql min error	count=1
function_name	mime kopfzeile ||| mime encode	count=1
function_name	número de candidatas ||| fann get cascade	count=1
function	la cabecera [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	divide ||| array chunk	count=2
function_name	errores y ||| errors	count=1
arg_pair	un número es ||| gmp $a	count=1
function_name	dos dimensiones ||| extended	count=1
function_name	definida por el usuario ||| create function	count=1
function_name	de la opción especificada ||| get option	count=1
function_name	conocia como cursores de ||| tailable	count=1
return	si ||| int	count=2
arg_pair	de volcado ||| string $dump_directory	count=2
function_name	descripción de ||| cairo pattern create radial	count=1
function_name	y extrae ||| mailparse uudecode all	count=1
function_name	la biblioteca unrar encuentre ||| set using exceptions	count=1
function_name	mysql asociado ||| mysql	count=1
arg_pair	por infilename y ||| string $infilename	count=1
arg_pair	propiedades correspondientes ||| int $row	count=1
arg_pair	el result ||| resource $result	count=1
return	delimitador y ||| array	count=1
function_name	escribe los ||| write temporary	count=2
function_name	ldap en ||| ldap	count=1
arg_pair	stack es ||| string $stack string $offset	count=1
function_name	tendencias de cada capa ||| bias array	count=1
function_name	más [function_name] límte de ||| [function_name] bit	count=1
return	escribe el resultado a ||| int	count=1
function_name	cuando se ||| cubrid	count=1
arg_pair	verifica el texto ||| string $signature	count=1
function	rellena [arg_pair_2] ||| [function_name_1] textblock [arg_pair_2]	count=5
namespace	que está asociada ||| function	count=1
function_name	el archivo de relación ||| dbplus	count=1
function_name	parámetro de configuración magic_quotes_gpc ||| magic quotes gpc	count=1
function	un repositorio [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	un ||| resource $p float $x	count=1
namespace	de inactividad ||| gearmanclient	count=1
function_name	punto de control de ||| gupnp control point callback	count=1
function_name	la imagen ||| color image	count=1
function_name	una fila en forma ||| fetch object	count=1
namespace	primer ||| function	count=1
arg_pair	cero en ||| string $zurl mixed $options	count=1
function_name	para añadir un campo ||| offset set	count=1
function_name	usa spanscorer para ||| set highlight highlight multi term	count=1
function_name	[function_name_1] palabra para ||| [function_name_2] [function_name_1]	count=4
arg_pair	establece el valor de ||| string $variable string $value	count=1
function_name	mime kopfzeile en el ||| iconv mime encode	count=1
return	del inicio de un ||| string	count=1
function_name	las banderas ||| flags	count=1
function_name	dice si el algoritmo ||| mcrypt enc is	count=1
function_name	punto primario rojo ||| red primary	count=3
function_name	devolverá la ||| data source	count=1
function_name	muestra una imagen ||| display	count=1
function	[function_name_1] con key ||| [function_name_1] [arg_pair_2]	count=1
namespace	un ||| gearmanworker	count=1
function_name	la que las ||| set mlt min	count=1
function_name	acción ||| gupnp service action get	count=2
function_name	una [function_name] usada ||| pspell [function_name]	count=1
function_name	de la relación dada ||| dbplus	count=2
namespace	y ||| function	count=3
arg_pair	de una ||| mixed $background	count=1
arg_pair	una base de ||| resource $pxdoc string $name	count=1
function_name	número total de bytes ||| total space	count=1
return	ejecutables no ||| bool	count=1
function_name	un ||| prob	count=1
function_name	desplazamiento [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	devolver ||| set using exceptions	count=2
function_name	el tipo del campo ||| field type	count=1
return	biblioteca unrar encuentre un ||| void	count=1
namespace	si el ||| tidynode	count=1
function_name	de socket devuelto ||| socket	count=1
arg_pair	imagen ||| gmagick $source int $compose	count=1
function_name	[function_name_1] el nonce ||| [function_name_2] [function_name_1]	count=1
function_name	y php del texto ||| fgetss	count=1
function_name	atributo tipo ||| type	count=1
function_name	de «espacio horizontal» que ||| isblank	count=1
arg_pair	aclarando ||| int $height	count=1
arg_pair	que fgetss() intenta eliminar ||| resource $handle	count=1
function_name	el producto de ||| array product	count=1
function_name	la lista ||| memory	count=1
function_name	añade una [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	reemplaza ||| array replace	count=2
function	elimina [arg_pair_2] ||| bool [function_name_1] [arg_pair_2]	count=3
return	si el puntero interno ||| bool	count=1
arg_pair	acepta uno dos ||| float $number	count=1
function	[function_name_1] una declaración ||| [function_name_1] resource $connection_id [arg_pair_2]	count=1
arg_pair	[arg_pair_1] dado ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	simple línea de ||| textline	count=1
function_name	ssl ||| set	count=1
arg_pair	por el parámetro length ||| int $length bool $crypto_strong	count=1
namespace	error cuando la biblioteca ||| rarexception	count=1
arg_pair	abre un archivo ||| string $filename string $mode	count=1
function_name	de grafema ||| grapheme stripos	count=1
function_name	composición asociado a ||| compose	count=1
namespace	omisión del ||| reflectionparameter	count=1
function_name	fuente ||| query font	count=1
function_name	interoperabilidad ||| stub	count=1
function_name	sobre ||| curl	count=1
arg_pair	comportamiento automático ||| resource $connection_id bool $onoff	count=1
function_name	ingres_query() o justo después ||| ingres	count=1
arg_pair	o datagrama al destino ||| float $timeout	count=1
arg_pair	un fichero ||| int $srcx	count=1
function_name	todas [function_name] ||| get [function_name]	count=1
arg_pair	los valores en assoc_array ||| int $options	count=1
function_name	el número de ||| num fields	count=1
return	un array en el ||| resource	count=1
namespace	codificado por ||| function	count=1
function_name	más opciones de ||| option	count=1
return	después de ||| array	count=1
arg_pair	forma parecida a ||| string $password	count=1
function_name	describe el ||| result message	count=1
function_name	contexto ||| context get	count=1
function_name	blanco retirados del ||| rtrim	count=1
return	que closedir() solo ||| void	count=1
arg_pair	[arg_pair_1] el modo ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	namespaceuri dados ||| string $namespaceuri	count=1
function_name	página ||| set	count=2
function_name	[function_name] tiempo disponible ||| get time [function_name]	count=1
return	según los parámetros ||| array	count=1
return	forma ||| resource	count=1
namespace	imagen desde un ||| gmagick	count=2
arg_pair	ligeras que se identificaron ||| string $client_identifier	count=1
namespace	del nodo ||| splpriorityqueue	count=1
function_name	[function_name_1] blob de ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] puntero al ||| [function_name_1] resource $handle [arg_pair_2]	count=1
function_name	donde se buscarán ||| chdir	count=1
function_name	afectadas por la última ||| fetched	count=1
function_name	permite al entrenamiento continuar ||| fann get cascade	count=1
return	devuelve la cuenta ||| int	count=1
function_name	interno del resultado ||| seek	count=1
function_name	morelikethis ||| mlt	count=1
function_name	de casillas ||| newt checkbox tree find item	count=1
function_name	frecuencia ||| mlt min	count=1
arg_pair	excepción de que server_key ||| string $server_key	count=5
function_name	tamaño comprimido de una ||| zip entry compressedsize	count=1
function_name	frontbase ||| fbsql	count=4
function_name	de flujo con cualquier ||| stream	count=1
namespace	por query ||| function	count=1
function_name	un recurso de ||| resource	count=1
arg_pair	la función callback ||| string $data	count=1
arg_pair	incrementalmente al interior ||| resource $mimemail	count=1
function_name	[function_name_1] almacena datos ||| [function_name_2] [function_name_1]	count=1
function_name	si [function_name] ||| [function_name] is	count=1
function	file_get_contents() devuelve [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	libera la memoria asociada ||| free	count=1
function_name	mínimo de épocas ||| min	count=1
function_name	string que describe ||| result message	count=1
function_name	token y el ||| token	count=1
function_name	utf-32 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	filas afectadas por ||| mysqli affected rows	count=1
return	función definida ||| void	count=2
function_name	[function_name_1] la imagen ||| [function_name_1] [function_name_2]	count=4
function_name	ibm db2 ||| db2	count=2
return	codificado mediante uuencode ||| array	count=1
function_name	logo de ||| php logo guid	count=1
function_name	ellos ||| map	count=1
function_name	por lo menos ||| set mlt min doc frequency	count=1
arg_pair	actividad en conexiones curl_multi ||| resource $mh	count=1
function_name	de campos de ||| sybase fetch field	count=1
namespace	establece el ||| function	count=1
function_name	imagen ||| setimageiterations	count=1
arg_pair	cadena source ||| string $source	count=1
function_name	destruir el valor ||| offset unset	count=1
function_name	la estructura de ||| imap fetchstructure	count=1
return	y socket. ||| zmqsocket	count=1
function_name	de respuesta sin tratar ||| get raw	count=1
namespace	similares al ||| mongocursor	count=1
function	[function_name_1] a una ||| [function_name_1] uri [arg_pair_2]	count=1
function_name	tipo de ||| set type	count=2
function_name	datos rrd como ||| rrd fetch	count=1
arg_pair	completa usando sparse_method ||| int $sparse_method array $arguments	count=1
arg_pair	dibujar imágenes de color ||| resource $image	count=1
function_name	cualquier abstracción que ||| construct	count=1
function_name	cifrado en base-64 dado ||| imap base64	count=1
arg_pair	los ||| array $callbacks	count=1
arg_pair	[arg_pair_1] cada señal ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	las direcciones horizontal ||| float $x	count=1
function_name	línea a ||| max line	count=1
function_name	cuando se enlazó con ||| ecb	count=1
function_name	el código ||| curl	count=1
function_name	menos tantos documentos ||| mlt min doc frequency	count=1
function_name	el comentario de una ||| comment	count=1
namespace	tamaño actual ||| function	count=1
function_name	cliente usado ||| client identifier	count=1
function	[function_name_1] a una ||| [arg_pair_2] [function_name_1]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $handle [arg_pair_2]	count=4
namespace	y extrae ||| function	count=1
function_name	archive del disco ||| writable	count=1
function_name	de salidas de cada ||| output	count=1
function_name	las letras en ||| get	count=1
return	cursor: si todavía ||| int	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] property [function_name_2]	count=3
return	devuelve el color ||| void	count=1
function_name	el método gearmanclient::do() ||| do	count=1
function_name	a /etc/services ||| getservbyname	count=1
function_name	true ||| using	count=1
function_name	devuelve la función de ||| get	count=2
function_name	libera toda la ||| fbsql free	count=1
arg_pair	image dada una entrada ||| float $inputgamma	count=1
function_name	proceso abierto mediante el ||| proc get	count=1
function_name	[function_name_1] color ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] de ||| get [function_name]	count=21
function_name	desde la csr dada ||| csr sign	count=1
function_name	similares para el ||| similar	count=1
function_name	[function_name_1] límite ||| [function_name_1] bit [function_name_2]	count=1
function_name	una lista de ||| list	count=2
function_name	el máximo de ||| max cand	count=1
function_name	se puede leer ||| readable	count=1
function_name	archivo rrd desde el ||| rrd	count=1
function_name	[function_name_1] prefijo de ||| [function_name_2] [function_name_1]	count=1
function_name	parámetros ||| open memory	count=1
namespace	reciente a ||| function	count=2
function_name	por debajo ||| ps continue	count=1
function_name	esta función acepta ||| number	count=1
function_name	función abre un blob ||| ibase blob	count=1
function_name	valor ||| newt checkbox set value	count=1
function_name	mínima a devolver ||| min count	count=1
function_name	nombre y devolver su ||| char from name	count=1
function_name	no ||| doc frequency	count=2
arg_pair	función prepara para ||| resource $id string $type	count=1
arg_pair	estructura ||| int $num_input	count=1
function_name	nueva página al ||| add page	count=2
function_name	palabra ||| word	count=4
function_name	función cubrid_num_rows() se usa ||| cubrid num	count=1
function_name	el diccionario indicado mediante ||| crack closedict	count=1
function_name	emitir ||| set	count=1
return	imagen original ||| gmagick	count=1
namespace	que puedan ||| function	count=1
function_name	existe ||| key exists	count=1
function_name	devuelve el método ||| get	count=1
function_name	otro núcleo ||| add kernel	count=1
function_name	representación yaml de ||| yaml emit file	count=1
arg_pair	la conexión ||| mysqlnd_connection $connection	count=1
function_name	de épocas que ||| epochs	count=4
function_name	de la cabecera de ||| header	count=1
function	[function_name_1] de arrays ||| [arg_pair_2] [function_name_1]	count=3
function_name	libera todos ||| base free	count=1
function_name	tarea en ejecución ||| do	count=2
function_name	devuelve los ||| apd get	count=1
function_name	archivo temporal ||| mailparse	count=1
function_name	publicación de un field ||| get ap	count=1
arg_pair	el algoritmo ||| string $algorithm string $lib_dir	count=2
arg_pair	un nombre de ||| string $name	count=1
return	palabras ||| solrquery	count=1
function_name	y php ||| fgetss	count=1
arg_pair	alimentarlo a ||| array $input_vector	count=1
arg_pair	de las restricciones ||| string $field_override	count=1
function_name	la descripción de ||| cairo svg surface create	count=1
namespace	unix correspondiente a ||| function	count=1
function_name	la representación json de ||| json encode	count=1
function_name	desplegar el logo ||| logo	count=1
function	extensión de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	idéntica a ereg_replace() ||| string $pattern string $replacement	count=1
function_name	tangente para cada valor ||| tan	count=1
arg_pair	por key desde la ||| string $key	count=1
function_name	adjunta otro núcleo ||| add	count=1
function_name	descripción de ||| cairo scaled font get font options	count=1
function_name	devolver un ||| exceptions	count=1
function_name	función mssql_free_statement() si ||| mssql free statement	count=1
function_name	[function_name_1] estancamiento ||| [function_name_2] [function_name_1]	count=12
return	el [return] de ||| [return]	count=1
return	sobre las capas de ||| zmqsocket	count=1
return	especifica el número ||| solrquery	count=1
function_name	de subject que contiene ||| strspn	count=1
function_name	último error ||| errno	count=1
arg_pair	certificado x509cert proporcionado incluyendo ||| mixed $x509cert bool $shortnames	count=1
function_name	de campos de ||| set	count=1
function_name	el estado http de ||| http status	count=1
arg_pair	es el ||| mixed $xsd_file	count=1
arg_pair	los datos en ||| int $linebreak	count=1
function_name	base de datos ||| select db	count=1
function_name	por defecto de entidades ||| external entity	count=1
function_name	obtiene la función ||| fann get	count=1
function_name	de espera de ||| set query timeout	count=1
function_name	después ||| odbc data source	count=2
function_name	espera ||| busy timeout	count=1
function_name	proceso abierto mediante el ||| status	count=1
arg_pair	como timestamp y ||| int $timestamp int $format	count=2
function_name	subsiguiente ||| add	count=1
function_name	si un ||| gmp prob	count=1
function_name	archivo dado ||| uudecode	count=1
function_name	archivo temporal ||| uudecode	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] train [function_name_2]	count=1
arg_pair	identificaron con el ||| string $client_identifier	count=1
function_name	filas ||| fbsql rows	count=1
function_name	información asociada al objeto ||| info	count=1
function_name	variables de la codificación ||| convert variables	count=1
arg_pair	real0 y devuelve ||| array $real0	count=1
function_name	mssql local o ||| mssql	count=1
function_name	descripción ||| cairo font options get hint metrics	count=1
arg_pair	a thickness ||| int $thickness	count=1
arg_pair	objeto gmagickpixel ||| gmagickpixel $color	count=1
function_name	especificado si devuelve ||| mcrypt module get supported	count=1
function	crea una [arg_pair_2] ||| [function_name_1] train from callback [arg_pair_2]	count=4
function_name	es el ||| is	count=1
function_name	una lista de ||| broker list dicts	count=1
namespace	está establecido a ||| function	count=1
function_name	corta ||| iconv substr	count=1
function_name	que hay ||| mssql	count=1
arg_pair	un extremo de una ||| mixed $background float $x_shear	count=1
namespace	dada que contiene los ||| function	count=1
function_name	[function_name_1] filas ||| [function_name_2] [function_name_1]	count=1
arg_pair	result set especificado ||| resource $result int $index	count=1
arg_pair	archivo proporcionado ||| resource $p string $filename	count=1
function_name	interface usando las funciones ||| call	count=1
namespace	de error de ||| function	count=1
function	[function_name_1] de relation ||| [arg_pair_2] [function_name_1]	count=9
arg_pair	un índice ||| int $index imagickpixel $color	count=1
function_name	msql asociado ||| msql	count=1
function_name	firma ||| openssl pkcs7 verify	count=1
function_name	proxy para ||| connection proxy	count=1
function	[function_name_1] entrada proporcionada ||| [arg_pair_2] [function_name_1]	count=4
function_name	los bordes de la ||| raiseimage	count=1
function_name	eliminar drop ||| drop	count=1
function_name	reinicia el [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	calendario calendar especificado ||| int $month	count=1
function_name	número de filas afectadas ||| fbsql rows fetched	count=1
function_name	el elongamiento de ||| font stretch	count=1
function	[function_name_1] una estructura ||| [function_name_1] train from callback [arg_pair_2]	count=1
function_name	del archivo paradox y ||| px	count=1
arg_pair	modulo de a b ||| gmp $b	count=1
function_name	van ||| start	count=1
function_name	acl para ||| imap getacl	count=1
namespace	una restricción [namespace] la ||| [namespace]	count=1
return	la regla del ||| bool	count=1
return	tie breaker ||| solrdismaxquery	count=1
function_name	realice una salida ||| sandbox output	count=1
function_name	colores ||| color set	count=2
function_name	máximo [function_name_2] ||| [function_name_2] [function_name_1]	count=11
function_name	ssl para las solicitudes ||| sslchecks	count=1
namespace	la que las palabras ||| solrquery	count=1
namespace	colores de primer plano ||| function	count=1
function_name	tendencias ||| bias	count=1
function_name	del estado http ||| http status message	count=1
function_name	es similar a msql_fetch_array() ||| msql fetch	count=1
function_name	indicado mediante el identificador ||| closedict	count=1
function_name	[function_name_1] [function_name_2] ||| elements by [function_name_2] [function_name_1]	count=7
function_name	devuelve la siguiente fila ||| sqlsrv fetch	count=1
arg_pair	dibujar imágenes ||| bool $blendmode	count=1
return	carga un segundo o ||| void	count=1
function_name	última tupla ||| dbplus last	count=1
function_name	espera de consulta ||| cubrid get query timeout	count=1
arg_pair	un objeto samconnection conecta ||| array $properties	count=1
namespace	peticiones soap ||| soapclient	count=1
function_name	petición oauth ||| check oauth request	count=2
function_name	devuelve una cadena ||| chr	count=1
arg_pair	str con ||| string $str string $encoding	count=2
function_name	escala de ||| field scale	count=1
function_name	largo para un marco ||| long	count=1
function_name	dado ||| mailparse	count=1
arg_pair	png desde ||| int $filters	count=1
return	a sybase_connect() ||| resource	count=1
return	componente entero y ||| array	count=1
function_name	el certificado y ||| openssl pkcs7 sign	count=1
function_name	bcompiler y ||| bcompiler	count=1
function_name	una fila ||| fetch object	count=1
arg_pair	tridimensional ||| int $y	count=1
function_name	escribe los datos del ||| write	count=1
function_name	[function_name_1] estadísticas ||| [function_name_1] client [function_name_2]	count=1
return	un ||| string	count=26
arg_pair	imagen ||| gmagick $source	count=1
function_name	[function_name_1] si es ||| [function_name_2] [function_name_1]	count=2
function_name	se encuentra disponible ||| open	count=1
function_name	la relación dada por ||| dbplus	count=1
arg_pair	información dad a ||| int $dbase_identifier array $record	count=1
function_name	utilización de memoria global ||| win32 ps stat mem	count=1
arg_pair	[arg_pair_1] uso futuro ||| [arg_pair_1] resource $train_data [arg_pair_2]	count=2
function_name	flujo ||| stream socket client	count=2
arg_pair	y ordena números ||| string $search_criteria	count=1
function_name	[function_name_1] de configuración ||| [function_name_2] [function_name_1]	count=3
function_name	valores ||| array	count=1
arg_pair	variante ||| variant $variant	count=1
function_name	liberación de ||| udm free agent	count=1
function_name	de archivos o partición ||| disk	count=1
function_name	la ||| flatness	count=2
function_name	modo [function_name_2] ||| [function_name_2] text rendering [function_name_1]	count=1
namespace	a una ||| imagickkernel	count=1
function_name	de resultados ||| result	count=2
arg_pair	a los clientes ||| string $name	count=1
function_name	codificador especificado ||| encoder	count=1
return	sobre [return] objeto que ||| [return]	count=1
arg_pair	entradas y un ||| resource $ann	count=1
arg_pair	salto de string ||| string $break	count=1
function_name	[function_name] un ||| [function_name] date	count=1
function_name	escalar datos ||| fann scale input	count=2
function_name	la fuente usada ||| getfont	count=1
function	error [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	datos de ingres procedimiento ||| ingres	count=1
namespace	virtual actual donde se ||| function	count=1
arg_pair	un fichero de definición ||| string $filename int $size	count=1
arg_pair	se comporta de ||| string $password string $charset	count=1
return	retorno ||| bool	count=1
function_name	del apuntador ||| mailparse uudecode	count=1
function_name	con libeio ||| eio get event	count=1
return	cadena de instancia xml ||| sdo_das_xml_document	count=1
function_name	frase de consulta del ||| phrase	count=1
arg_pair	pretende usarse como una ||| string $file_extensions	count=1
function_name	obtener el número total ||| get total	count=1
function_name	un [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	la posición actual ||| int	count=1
function_name	neuronas de ||| input	count=1
function_name	[function_name_1] ruta real ||| [function_name_2] [function_name_1]	count=6
namespace	que lee ||| function	count=1
function_name	el nombre de un ||| name	count=2
return	almacenará en búfer ||| bool	count=1
arg_pair	delimiter como ||| string $delimiter string $null_as	count=1
function_name	llena un array ||| array fill	count=1
function_name	letras ||| get	count=1
function_name	de facet.date ||| facet date	count=1
namespace	objeto lob devuelveto por ||| function	count=1
arg_pair	de buzones ||| string $ref	count=1
return	string en ||| bool	count=1
function_name	el desplazamiento ||| msql	count=1
function_name	del atributo ||| attribute	count=3
arg_pair	conexión ||| string $host	count=1
namespace	que ocurrión ||| function	count=1
function_name	[function_name_1] consulta ||| [function_name_2] [function_name_1]	count=6
function_name	y socket. -- ||| construct	count=1
namespace	un array que contiene ||| function	count=1
function_name	los permisos del fichero ||| fchmod	count=1
function_name	de control ||| gupnp control point	count=1
function_name	ejecuta una única ||| normal	count=1
namespace	de una entrada ||| ziparchive	count=1
function_name	información sobre la última ||| info	count=1
function_name	lista de dsn ||| data	count=1
function_name	línea en la imagen ||| line	count=1
arg_pair	otro objeto grande ||| oci-lob $lob_to oci-lob $lob_from	count=1
function_name	extrae cada ||| uudecode all	count=1
function_name	un proxy ||| uh set statement proxy	count=1
function_name	el número de tendencias ||| fann get bias	count=1
arg_pair	botón tridimensional simulado aclarando ||| int $height	count=1
function_name	especifica el ||| start	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] pdi [function_name_1]	count=4
function_name	de una instrucción ||| next result	count=1
function_name	llamarla ||| odbc	count=1
function_name	el ||| string	count=1
function_name	extrae cada archivo ||| mailparse uudecode all	count=1
function_name	en el atributo ||| to attribute	count=1
function_name	image_type_to_mime_type() determinará el tipo ||| type	count=1
return	en el sistema ||| string	count=1
function_name	actual de ||| entry	count=1
function_name	postscript type 1 ||| imagepsfreefont	count=1
function_name	cargar entidades externas ||| libxml disable entity	count=1
function_name	descripción ||| surface restrict to level	count=1
function_name	facetas de ||| facet	count=1
function_name	script si el objeto ||| active object	count=1
arg_pair	para iterar a ||| int $colnum	count=1
function_name	devuelve un mensaje de ||| curl strerror	count=1
namespace	opacidad de los perfiles ||| gmagickdraw	count=1
function_name	un ||| fann train	count=1
return	momento ||| int	count=1
function_name	la función geoip_country_code_by_name() ||| country	count=1
function_name	la lista ||| ps open memory image	count=1
arg_pair	genera un mensaje ||| string $message	count=1
function_name	usa la prueba probabilística ||| prime	count=1
function_name	inserta la ||| insert	count=1
function_name	identificador del objeto char ||| char	count=1
function	escala [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	y ||| resource $id array $config	count=1
function_name	menos tantos documentos ||| min doc	count=1
return	opacidad ||| float	count=1
arg_pair	una ||| string $mask	count=1
arg_pair	de entradas de un ||| resource $imap_stream	count=1
function_name	elimina ||| delete	count=9
function_name	la lista de ||| ps open	count=1
function_name	propia clase dom ||| class	count=1
function_name	número límite de peticiones ||| limit	count=1
namespace	del punto actual ||| harupage	count=1
function_name	las ||| min doc	count=1
function_name	envía la acción ||| proxy action	count=1
namespace	otro ||| imagickkernel	count=1
arg_pair	16 bytes en ||| bool $short_format	count=1
function_name	reemplaza ||| replace data	count=2
function_name	con el [function_name] del ||| get [function_name]	count=1
namespace	valor actual ||| harupage	count=3
function	[function_name_1] clientes en ||| [function_name_1] resource $service [arg_pair_2]	count=1
function_name	se ||| await	count=1
return	sql ||| int	count=1
return	un proceso abierto ||| array	count=1
function_name	tipos descritos ||| types	count=1
arg_pair	especificado por fd al ||| mixed $fd	count=1
function_name	[function_name] con ||| [function_name]	count=7
function_name	con db2_connect() ||| db2	count=1
function_name	de activación para la ||| activation	count=2
function_name	el id dado ||| element by id	count=1
arg_pair	mensaje ||| string $message	count=1
arg_pair	datos emita uno ||| string $event_name1	count=1
arg_pair	dispositivos de ||| zmqsocket $frontend	count=1
function_name	mongo posee ||| tailable	count=1
return	usada en ||| bool	count=1
function_name	los permisos ||| fchmod	count=1
return	fgets() excepto ||| string	count=1
function_name	variables de reescritura establecidas ||| rewrite vars	count=1
function_name	descripción ||| cairo font options	count=6
function_name	lista de ||| open	count=1
function_name	de conexión ||| yaz connect	count=1
function_name	definidos por el ||| control point browse	count=2
arg_pair	en signed_text ||| string $signed_text	count=1
arg_pair	función invoca un ||| resource $id	count=1
function_name	conexión en caso de ||| connect	count=1
function_name	gestor de errores interno ||| error	count=1
return	de los caracteres que ||| string	count=1
namespace	sólo si el argumento ||| rarexception	count=1
namespace	actualizado por ||| function	count=1
function_name	espera de la ||| timeout	count=3
function_name	el número de línea ||| line	count=2
function_name	copia ||| copy to array	count=2
function	[function_name_1] de relation ||| [function_name_1] [arg_pair_2]	count=8
arg_pair	clave no existe todavía ||| int $expire	count=1
function_name	valor ||| bind value	count=1
function_name	este serán ignoradas ||| min doc frequency	count=1
function	[function_name_1] cadena ||| [function_name_1] resource $p [arg_pair_2]	count=1
function_name	establecer los colores ||| ncurses color	count=1
namespace	array que ||| function	count=1
function_name	la imagen para ocupar ||| image	count=1
function_name	[function_name] espejo horizontal ||| transverse [function_name]	count=2
function_name	memoria compartida ||| shmop write	count=1
function_name	del continente ||| continent code by	count=1
return	especificado por ||| string	count=1
function_name	de las clases padre ||| parents	count=1
function_name	haystack y devuelve la ||| mb	count=3
function_name	especial indicando error cuando ||| set	count=1
function_name	marco [function_name] ||| [function_name] ticks per	count=1
function_name	reemplaza la línea ||| line	count=1
function_name	página ||| image page	count=1
function_name	procedimientos ||| odbc procedurecolumns	count=2
namespace	este método ||| mongocursor	count=2
function_name	encuentra disponible la ||| memory image	count=1
function_name	si devuelve ||| mcrypt module get supported	count=1
namespace	la función usa la ||| function	count=1
function_name	la tupla previa ||| prev	count=1
function_name	para ||| set add	count=2
function_name	canal de color ||| get color	count=1
namespace	si la posición ||| solrdocument	count=1
return	reinicializa el array después ||| void	count=1
function_name	de la clave /status ||| status	count=1
namespace	filteriterator que consiste ||| filteriterator	count=1
return	actual del puntero interno ||| bool	count=1
function_name	la función de activación ||| activation function	count=4
function_name	las candidatas antes ||| get cascade	count=2
function_name	devuelve el tiempo en ||| get	count=1
function_name	absoluto canonizado ||| eio realpath	count=1
arg_pair	clave ||| array $pub_key_ids	count=1
namespace	líneas se unen en ||| function	count=1
function_name	certificado proporcionado por ||| openssl x509	count=1
namespace	que está abierto en ||| function	count=1
namespace	que describe el código ||| function	count=1
arg_pair	dado por [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	el nombre ||| field name	count=1
function_name	descripción ||| cairo pattern create linear	count=2
namespace	que contiene la información ||| function	count=1
function_name	curl y libera ||| curl	count=1
function_name	la publicación de ||| fdf get ap	count=1
arg_pair	una conexión full-duplex ||| resource $stream int $how	count=1
function_name	nuevo [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	predeterminado para la conexión ||| resource $link_identifier	count=1
function_name	umbral [function_name_2] ||| [function_name_2] error [function_name_1]	count=2
function_name	parche binario desde ||| xdiff file	count=1
namespace	extrae ||| function	count=1
function_name	define el ||| slide show	count=1
function_name	de tesela ||| imagesettile	count=1
namespace	o pasado mediante ||| function	count=1
function_name	reemplaza ||| dbase replace	count=1
return	no ||| solrquery	count=1
arg_pair	un ||| resource $parser	count=1
namespace	de filtro dado por ||| function	count=2
function_name	descripción de ||| cairo font options get hint	count=2
function_name	devuelve el ||| get error	count=1
return	consulta en los ||| bool	count=1
namespace	de ||| zmqdevice	count=4
function_name	que fgetss() intenta ||| fgetss	count=1
function_name	número de campos columnas ||| numfields	count=1
function_name	plural de gettext() ||| ngettext	count=1
function_name	tipo de ||| type	count=11
function_name	anexa un círculo ||| circle	count=1
namespace	y sólo si el ||| rarexception	count=1
function_name	el argumento ||| using	count=1
function_name	mínima del [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	cliente usado por varios ||| client	count=1
function_name	obtener conjuntos consecutivos de ||| get	count=1
function_name	base de datos entera ||| drop db	count=1
namespace	posición dada que apunta ||| function	count=2
function_name	un error ||| exceptions	count=1
arg_pair	el secreto para ||| string $token_secret	count=1
function_name	el número de pendientes ||| steepnesses count	count=1
namespace	prueba ||| function	count=1
function_name	de filas afectadas por ||| rows fetched	count=1
arg_pair	el final de pajar ||| string $needle	count=2
function_name	el coseno ||| cos	count=2
namespace	varios resultados hará que ||| function	count=1
function_name	algoritmo especificado si ||| supported	count=1
function_name	[function_name_1] segundo plano ||| [function_name_2] [function_name_1]	count=4
arg_pair	memcache::connect() con la ||| string $host	count=1
return	el número de filas ||| int	count=1
return	el puntero ||| string	count=1
function_name	las ||| min	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] compressed [function_name_2]	count=1
function_name	función ||| kernel	count=1
function_name	define los encabezados ||| set soap headers	count=1
namespace	devolverá el ||| function	count=1
arg_pair	[arg_pair_1] en ||| [arg_pair_1] [arg_pair_2]	count=8
function_name	los iteradores añadidos ||| array	count=1
namespace	mongo posee una ||| mongocursor	count=1
function_name	estilo de ||| show	count=1
function_name	de parada empleada durante ||| stop function	count=1
function_name	disponible la ||| open	count=1
function_name	más fácil de obtener ||| get	count=1
function_name	el [function_name] ||| [function_name] bdiff	count=3
arg_pair	de un string utilizando ||| string $str	count=1
function_name	el numerador ||| numerator	count=1
function_name	elipse ||| ellipse	count=1
function_name	información ||| curl getinfo	count=2
function_name	registros afectado por ||| mssql rows affected	count=1
function_name	pares de ||| config save repl	count=1
function_name	borra un ||| pdf delete	count=1
function_name	cambia ||| dbplus chdir	count=2
function_name	por la extensión phar ||| valid phar filename	count=1
function_name	ccitt ||| ccitt	count=1
function_name	no coincide ningún ||| match	count=1
return	un entero que ||| int	count=1
arg_pair	de botón ||| int $width int $height	count=1
namespace	objeto domxpath ||| domxpath	count=1
return	o cualquier abstracción ||| zmqsocket	count=1
function_name	el índice de ||| offset	count=1
function_name	devuelve el modo ||| get mode	count=1
function_name	para modificar la información ||| set	count=1
function_name	[function_name_1] mismas preferencias ||| [function_name_1] [function_name_2]	count=1
function_name	el punto blanco de ||| image white point	count=1
function_name	de datos mysql ||| mysql	count=1
function_name	[function_name] actualmente ||| [function_name]	count=1
function_name	función geoip_domain_by_name() devolverá los ||| domain	count=1
arg_pair	de resultados ||| resource $result	count=1
function	[function_name_1] ser adquirido ||| [arg_pair_2] [function_name_1]	count=3
function_name	propia clase dom ||| node class	count=1
function_name	importa un flujo ||| import	count=1
function_name	colores únicos de ||| colors	count=1
arg_pair	grafemas ||| int $extract_type	count=1
function_name	http ||| nsapi	count=1
arg_pair	en un ||| string $new_file2	count=1
namespace	plantilla ||| yaf_view_simple	count=1
function	guarda los [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	prueba automática sobre el ||| mcrypt module self test	count=1
namespace	mongocommandcursor ||| mongocommandcursor	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] white [function_name_2]	count=2
function_name	una descripción de ||| sqlite error string	count=1
function_name	analizada o false ||| strptime	count=1
function_name	última comprobación realizada ||| crack getlastmessage	count=1
return	en un archivo ||| array	count=1
function_name	de cadena ||| append	count=1
function_name	el uso de ||| get	count=1
namespace	o cualquier abstracción que ||| zmqdevice	count=1
arg_pair	con el nombre de ||| string $name callable $function	count=1
namespace	caracteres del inicio de ||| function	count=1
function_name	el usuario presiona ||| suspend	count=1
function_name	el sistema de coordenadas ||| pdf	count=2
function_name	usada para establecer ||| set	count=1
namespace	sqlite3 ||| sqlite3	count=1
function_name	descripción ||| get surface	count=1
function_name	página [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	convierten ||| array flip	count=2
function_name	validación relaxng del ||| relax ngvalidate source	count=1
namespace	manera que los ||| function	count=1
arg_pair	retorna el archivo ||| int $use_include_path	count=1
function_name	la resolución como ||| getimageresolution	count=1
function_name	[function_name_1] i-nodo de ||| [function_name_2] [function_name_1]	count=1
arg_pair	coincida con el ||| mixed $fill	count=2
arg_pair	la función callback ||| mixed $callback mixed $arg	count=1
function_name	de línea actual ||| current line	count=1
function_name	frase de consulta ||| phrase	count=2
arg_pair	xpath dada [arg_pair] ||| [arg_pair]	count=1
function_name	[function_name_1] socket ||| [function_name_2] [function_name_1]	count=4
function_name	sólo recorre el ciclo ||| eio nop	count=1
namespace	virtual actual ||| function	count=1
function_name	definida por el ||| create function	count=1
arg_pair	cubrid_schema() se usa ||| resource $conn_identifier int $schema_type	count=1
function_name	[function_name_1] mime ||| [function_name_2] [function_name_1]	count=15
function_name	carp::cluck ||| apd clunk	count=2
arg_pair	de forma parecida ||| string $servername	count=1
function_name	efecto de botón ||| raiseimage	count=1
function_name	definida por el ||| function	count=1
function_name	defecto de entidades ||| libxml set external entity	count=1
function_name	[function_name] desafío ||| [function_name]	count=1
arg_pair	los ||| int $width	count=1
function_name	establece [function_name_2] ||| [function_name_1] [function_name_2]	count=25
arg_pair	sobre las capas ||| zmqsocket $frontend	count=1
function_name	devuelve el número ||| count	count=2
function_name	obtiene ||| get default value	count=1
arg_pair	timestamp y ubicación ||| int $timestamp	count=2
arg_pair	simulado aclarando y ||| int $height	count=1
function_name	la descripción ||| cairo font	count=1
function_name	descripción de la ||| ps surface restrict to level	count=1
function_name	severidad mínima del servidor ||| min server severity	count=1
arg_pair	[arg_pair_1] decir el ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	al ||| directory	count=1
function_name	línea en ||| line	count=1
function_name	por lo menos tantos ||| mlt min doc	count=1
function	pdf usando [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	de mensajes especificada por ||| function	count=1
arg_pair	mailbox ||| string $mailbox string $username	count=1
function	[function_name_1] de una ||| [function_name_1] image [arg_pair_2]	count=2
function_name	identificador [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	del conjunto [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la lista de ||| list	count=2
arg_pair	un clúster de grafemas ||| int $extract_type int $start	count=1
arg_pair	texto dado en signed_text ||| string $signed_text	count=1
function_name	[function_name_1] ccl ||| [function_name_2] [function_name_1]	count=6
function_name	el nonce ||| nonce	count=1
function_name	reanua un servicio ||| service	count=1
arg_pair	nombre distinguido que se ||| array $dn	count=1
function_name	afectadas en una ||| affected	count=1
namespace	array a ||| function	count=1
arg_pair	alimentarlo a una ||| resource $ann array $input_vector	count=1
return	preserva ||| gmagick	count=1
function_name	los campos de consulta ||| query	count=1
function	javascript al [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	con la peticiones ||| void	count=1
arg_pair	dibuja un ||| resource $image int $x	count=1
namespace	el parámetro dado por ||| function	count=1
function_name	cuando ||| set using exceptions	count=2
arg_pair	para usarla como una ||| string $name mixed $callback	count=1
function_name	raíz cuadrada de ||| sqrtrem	count=1
function_name	de mensajes ||| imap	count=2
arg_pair	prepara ||| resource $id	count=1
function_name	reinicia ||| reset	count=1
function_name	canal de color ||| color value	count=1
namespace	a todos los ||| gearmanclient	count=1
function_name	número total ||| get total	count=1
function_name	implementa directo ||| get images blob	count=1
function_name	un ||| fann test	count=1
function_name	blob/clob de ||| lob export	count=1
function_name	la base ||| db	count=3
function_name	de conexión en ||| connect	count=1
function_name	elimina todos ||| delete	count=1
function_name	implementación predeterminada para __autoload() ||| spl autoload	count=1
function_name	[function_name] una función ||| [function_name]	count=2
namespace	o fecha-hora ||| function	count=1
function_name	xbm de la ||| imagexbm	count=1
function_name	una sentencia sql ||| exec	count=1
function_name	como valores ||| array count values	count=1
function	es usada [function_name_1] [arg_pair_2] etiqueta ||| [function_name_1] [arg_pair_2]	count=2
function_name	devuelve ||| msgno	count=1
function_name	un [function_name] píxeles ||| [function_name]	count=1
function_name	etiquetas < meta > ||| meta tags	count=1
function_name	función cubrid_lob2_size64() se usa ||| cubrid lob2 size64	count=1
arg_pair	pattern luego ||| string $pattern	count=1
function_name	permite establecer el valor ||| set value	count=1
function_name	palabra máxima sobre la ||| mlt max word	count=1
function_name	la frecuencia en la ||| set mlt min	count=1
function_name	esta función crea ||| create processing instruction	count=1
function_name	lista ||| image	count=1
function_name	obtiene ||| error get	count=1
function_name	añade un enlace ||| pdf add	count=1
function_name	variables de la codificación ||| variables	count=1
function	crea [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	en por ||| solrquery	count=1
function_name	a ingres_query() o justo ||| ingres	count=1
return	argumento es true entonces ||| void	count=1
arg_pair	comportamiento automático de ||| bool $onoff	count=1
arg_pair	con color en ||| int $y2 int $color	count=1
function_name	que ||| addcslashes	count=1
function_name	términos serán ||| mlt	count=1
function_name	este serán ignoradas ||| set mlt min doc frequency	count=1
function_name	descripción de la ||| image surface	count=1
function_name	espera ||| cubrid set query timeout	count=2
arg_pair	de datos disponible como ||| int $row	count=1
function_name	frecuencia de documento ||| terms	count=1
arg_pair	de php var_array ||| array $var_array int $max_table_length	count=1
function_name	[function_name_1] infinito positivo ||| [function_name_2] [function_name_1]	count=1
arg_pair	una transacción ||| string $table int $scope	count=1
function_name	es infinito positivo ||| is infinite	count=2
function_name	inglés describiendo ||| last error msg	count=1
function_name	[function_name_1] de ordenación ||| [function_name_1] [function_name_2]	count=2
function_name	del últime [function_name] imap ||| imap last [function_name]	count=1
arg_pair	left con right ||| mixed $left mixed $right	count=1
return	usuario y las ||| array	count=1
arg_pair	uso con ifx_do() ||| int $cursor_def	count=1
function_name	propietario del fichero ||| eio fchown	count=1
function_name	establece el factor de ||| set	count=1
function_name	nodos son el mismo ||| same	count=1
function_name	de la última modificación ||| ftp mdtm	count=1
arg_pair	una implementación de ||| string $offset string $value	count=1
return	del ||| void	count=3
function_name	descripción de la función ||| cairo font face get type	count=1
function_name	establece [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=3
function_name	que escala una imagen ||| image	count=1
function_name	con información dependiente de ||| resize	count=1
function_name	en por lo ||| min	count=1
function_name	un iterador para ||| children	count=1
function_name	dígito ||| isdigit	count=1
function_name	patrones de entrenamiento del ||| length	count=1
namespace	a resultado ||| function	count=1
function_name	datos lob ||| lob read	count=1
function_name	secuencia de imágenes ||| images	count=1
function_name	una función [function_name] ||| dbx [function_name]	count=2
namespace	relleno ||| gmagickdraw	count=1
function_name	de emitir ||| exceptions	count=1
function_name	cabecera ||| request header	count=2
function_name	error cuando la ||| exceptions	count=1
function_name	conectarla de nuevo ||| pg ping	count=1
function_name	que contiene pares ||| pspell config repl	count=1
return	parte ||| bool	count=1
arg_pair	con nombre ||| string $name	count=1
return	palabras que no ||| solrquery	count=1
arg_pair	los bordes de ||| int $width int $height	count=1
function_name	de la fila ||| sqlsrv fetch object	count=1
function_name	bézier desde el punto ||| pdf curveto	count=1
namespace	filas de la base ||| sqlite3	count=1
function_name	mensajes ||| imap	count=3
function_name	unión ||| join	count=2
function_name	código de error dado ||| curl strerror	count=1
function_name	por ||| frequency	count=1
function_name	seno del ||| sin	count=1
function	oracle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	afectadas por una ||| affected	count=1
arg_pair	anotación rectangular ||| float $urx	count=1
arg_pair	una columna ||| mixed $column	count=1
function_name	de retorno a ||| bind	count=1
function_name	de la imagen ||| setimageiterations	count=1
namespace	desde la época unix ||| function	count=1
arg_pair	desde in_charset a ||| string $in_charset	count=1
function_name	relleno ||| rgbfill	count=1
function_name	error cuando la ||| using exceptions	count=1
arg_pair	la ruta corriente ||| float $ang1	count=1
namespace	cada archivo ||| function	count=1
arg_pair	blanco y negro ||| float $blackpoint	count=1
function_name	lista de dsn ||| source	count=1
function_name	recupera los hilos del ||| list processes	count=1
function_name	podrían ser entrenadas las ||| get cascade	count=1
return	si la posición actual ||| bool	count=1
arg_pair	una ||| resource $p float $a	count=1
arg_pair	corresponde a un host ||| string $type	count=1
function_name	faceta ||| facet	count=2
function_name	de sintaxis lint pelusa ||| runkit lint file	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get last used [function_name_1]	count=14
function_name	cierra un ||| close	count=1
function_name	establece el ||| oci set	count=1
function_name	virtual actual ||| dbplus	count=1
arg_pair	corresponde a service para ||| string $service	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] bit [function_name_2]	count=7
function_name	atributo llamado ||| attribute	count=1
function	nuevo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	un ||| resource $context	count=3
function_name	por sqlsrv_prepare() o ||| sqlsrv	count=1
function_name	página y aplica ||| page	count=1
function_name	argumento ||| set using	count=1
function_name	durante [function_name] entrenamiento ||| fann get cascade [function_name]	count=1
function_name	forzar ||| variant cast	count=1
arg_pair	[arg_pair_1] watcher evperiodic ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	la ||| exceptions	count=1
namespace	nuevo objeto domprocessinginstruction ||| domprocessinginstruction	count=1
function_name	dado ||| mailparse uudecode all	count=2
function_name	sea truncado a ||| eio ftruncate	count=1
function_name	un constructor ||| constructor	count=1
function_name	usa la prueba probabilística ||| gmp	count=1
arg_pair	identificador ||| resource $link_identifier	count=1
arg_pair	nueva definición de ||| float $height	count=1
function_name	rellena ||| ps fill	count=1
function_name	lo ||| mlt min doc	count=1
function_name	página ||| slide show	count=2
function_name	usuario presiona ||| suspend callback	count=1
return	los extremos mínimo ||| array	count=2
function_name	acceso ||| eio mkdir	count=2
function_name	el modo de ||| set compression mode	count=1
function_name	utf-8 a iso-8859-1 ||| utf8	count=1
function_name	actual ||| dbplus chdir	count=2
arg_pair	y por alpha y ||| float $alpha	count=1
arg_pair	hipervínculo ||| float $urx	count=1
function	[function_name_1] una función ||| [arg_pair_2] [function_name_1]	count=3
function_name	y enviarla a la ||| send	count=1
function_name	[function_name_1] atributo dado ||| [function_name_2] [function_name_1]	count=1
function_name	se comporta de ||| sybase	count=1
arg_pair	message ||| string $options	count=1
namespace	internet especificado por ||| function	count=3
function_name	devuelve la versión escapada ||| cubrid real escape string	count=1
function_name	sets tie breaker ||| breaker	count=1
function_name	manejador de declaraciones de ||| handler	count=1
arg_pair	ancho de [arg_pair_2] ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=2
function_name	recorta píxeles de ||| shave	count=1
function	[function_name_1] adquirido ||| [arg_pair_2] [function_name_1]	count=2
function_name	algoritmo especificado si devuelve ||| module get supported	count=1
function_name	representación ||| to	count=2
namespace	la prueba probabilística ||| function	count=1
function_name	configura las marcas para ||| watermark set	count=1
function_name	de documento mínima ||| terms min count	count=2
function_name	un ||| set flags	count=1
arg_pair	para el uid ||| int $uid	count=1
function_name	que las palabras ||| min doc frequency	count=1
function_name	las fuentes configuradas ||| query fonts	count=1
return	esta función ||| array	count=1
arg_pair	parámetros ||| resource $psdoc	count=1
function_name	consulta [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	filas que se van ||| start	count=1
function_name	existe en ||| array key exists	count=1
rest	con [function_2] ||| [function_2] [return_1]	count=1
function_name	recibe todas ||| nsapi request	count=1
function_name	las reemplaza con ||| preg replace	count=2
function_name	[function_name_1] color del ||| [function_name_1] image pixel [function_name_2]	count=1
return	el argumento ||| void	count=1
function_name	más opciones de la ||| yaz set option	count=1
function	convierte un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	pattern ||| mixed $pattern	count=1
return	el tamaño actual ||| int	count=1
arg_pair	el nombre de ruta ||| string $path	count=1
function_name	nodo actual [function_name] ||| is [function_name]	count=1
namespace	la conexión searchd ||| sphinxclient	count=1
function_name	probabilística de ||| gmp prob prime	count=1
arg_pair	data especificada usando ||| string $data	count=1
namespace	de los caracteres que ||| function	count=1
function_name	posiciona ||| move to	count=2
return	desde una llamada a ||| string	count=1
function_name	función reemplaza [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	en el modo de ||| int $pri	count=1
arg_pair	de un tipo ||| resource $imap_stream	count=1
return	al ||| bool	count=12
function_name	número total de ||| fann get total	count=1
function_name	de nombres especificado ||| is	count=1
arg_pair	key ||| string $key	count=1
arg_pair	diccionarios a ||| resource $broker	count=1
arg_pair	el oid de la ||| resource $conn_identifier string $oid	count=1
namespace	de certificado ||| function	count=1
function_name	devuelve una lista de ||| get	count=1
namespace	un ||| sdo_das_xml	count=2
namespace	de una imagen mientras ||| gmagick	count=1
return	usa la prueba ||| int	count=1
namespace	devuelve una cadena de ||| function	count=1
arg_pair	de salto ||| string $break bool $cut	count=1
arg_pair	saturación y ||| float $brightness float $saturation	count=1
namespace	botón tridimensional simulado ||| gmagick	count=1
function_name	prueba ||| prob	count=1
arg_pair	reflejada ||| mixed $argument bool $return	count=1
function_name	de filas eliminadas insertadas ||| db2 num rows	count=1
function_name	extensiones de ficheros que ||| spl autoload extensions	count=1
function_name	define ||| flatness	count=1
arg_pair	a ||| string $servername string $username	count=1
arg_pair	aclarando ||| int $y	count=1
function_name	la descripción de la ||| cairo	count=1
arg_pair	encuentra ||| resource $psdoc	count=1
function_name	formateador de la salida ||| formatter	count=1
function_name	instrucciones de ||| processing instruction	count=1
function_name	pausado nominado ||| win32 continue	count=1
function_name	el archivo pdf ||| pdf	count=1
function_name	[function_name_1] paginación tamaño ||| [function_name_1] [function_name_2]	count=7
function_name	que apunta conn_handle ||| cubrid commit	count=1
function_name	biblioteca imagemagick subyacente ||| limit	count=1
return	dispositivos de ||| zmqsocket	count=1
function_name	datos lob de ||| db2 lob	count=1
return	establecer los ||| int	count=1
arg_pair	assoc_array ||| int $options	count=2
function_name	de disposición de ||| setimagedispose	count=1
function_name	establece la opción ||| set	count=1
return	caracteres del inicio ||| string	count=1
arg_pair	prueba probabilística ||| gmp $a	count=1
function_name	estado del servidor ||| add task status	count=1
function_name	definida ||| uksort	count=1
function_name	cierra el ||| crack closedict	count=1
arg_pair	un nuevo par ||| object $object mixed $value	count=1
return	resultado ||| int	count=1
function_name	las mismas preferencias ||| handle	count=1
namespace	distancia ||| harufont	count=1
function_name	[function_name_1] inicialización iv ||| [function_name_1] [function_name_2]	count=1
return	función en ||| bool	count=1
function_name	cubrid_lob2_new() u ||| cubrid lob2	count=1
namespace	para ||| gearmanclient	count=2
function_name	de la base ||| dbase	count=1
function_name	función acepta ||| number format	count=1
arg_pair	prueba probabilística de ||| gmp $a	count=1
arg_pair	caracteres del ||| string $str	count=1
function_name	esta función analiza el ||| parse	count=1
function_name	devueltas ||| limit	count=1
function_name	calcula la intersección de ||| uintersect assoc	count=1
function_name	es primo ||| prob prime	count=1
namespace	documento cuando ||| solrdocument	count=1
function_name	documentos como este serán ||| set mlt min doc frequency	count=1
function_name	de documentos en ||| doc count	count=1
function_name	un conjunto de imágenes ||| images	count=1
function_name	frecuencia en ||| doc frequency	count=1
arg_pair	la llave keydata ||| string $keydata	count=1
function	[function_name_1] de b ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	de una ||| string $filename array $tag	count=1
function_name	color ||| ncurses color content	count=2
function_name	imagen que ha ||| image	count=1
function_name	la búsqueda finalice ||| time allowed	count=1
function_name	insert ||| insert	count=1
function_name	manejador de ||| handler	count=4
function_name	devolver un ||| set using exceptions	count=1
return	las ||| int	count=1
function_name	rellena [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	edición ||| filepro fieldtype	count=1
namespace	basado en des ||| function	count=1
return	una máscara de ||| int	count=1
function_name	devuelve el número de ||| get number	count=1
function_name	épocas que podrían ||| epochs	count=3
function_name	manejador de instrucciones de ||| set processing instruction handler	count=1
namespace	una única ||| imagickkernel	count=1
function_name	disponibles después ||| source	count=1
namespace	a que ||| gearmanworker	count=1
namespace	puntero interno ||| solrdocument	count=1
function_name	valor actual del ||| value	count=1
function_name	se encuentra disponible la ||| open memory image	count=1
return	para ||| int	count=2
function_name	codifica el ||| encode	count=1
function_name	[function_name_1] nuevo analizador ||| [function_name_2] [function_name_1]	count=1
namespace	de error ||| function	count=3
function_name	de cambio ||| change fraction	count=1
function_name	obtiene ||| ps get value	count=1
function_name	la severidad de la ||| severity	count=1
function_name	positivo que determina lo ||| fann get	count=1
arg_pair	dados por data ||| int $offset	count=1
function_name	los colores de primer ||| ncurses	count=1
function_name	devuelve el elemento seleccionado ||| get	count=1
function_name	del objeto char ||| ifx free char	count=1
function_name	para forzar ||| cast	count=1
function_name	objeto char ||| char	count=3
function_name	uno dos ||| number format	count=1
function_name	certificado y ||| pkcs7 sign	count=1
function_name	o más marcadores de ||| db2 prepare	count=1
function_name	añade varios componentes ||| form add components	count=1
arg_pair	cadena de formato dada ||| string $format	count=1
function_name	y salidas para ||| fann set	count=1
function_name	por defecto de entidades ||| libxml set external entity loader	count=1
function_name	de sintaxis lint pelusa ||| lint file	count=1
function_name	de la ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] ns [arg_pair_2]	count=2
arg_pair	eliminar cualesquiera ||| resource $handle int $length	count=1
function_name	la descripción ||| cairo pattern create radial	count=1
function_name	de la caché del ||| apc	count=1
function_name	de la consulta siguiente ||| next	count=1
function_name	representa una columna ||| db2	count=1
function_name	bytes pseudo-aleatoria ||| openssl random pseudo bytes	count=1
arg_pair	información data ||| string $data	count=1
namespace	los ||| gearmanclient	count=1
arg_pair	el de ||| int $type float $disp_time	count=1
namespace	elemento ||| iteratoriterator	count=1
function_name	el estado http ||| get http status	count=2
function_name	remoto ||| systype	count=1
function_name	devuelve ||| introspection get state	count=1
function_name	de columna [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	valor especial indicando ||| exceptions	count=1
function_name	establece la zona horaria ||| date default timezone set	count=1
arg_pair	una ||| string $offset string $value	count=1
function_name	hasta que el semáforo ||| sem	count=1
function_name	en por lo ||| min doc	count=1
function_name	establece [function_name_2] ||| [function_name_1] word [function_name_2]	count=2
function_name	si el argumento es ||| using	count=1
function_name	cursor en ||| cursor	count=1
function_name	esta función crea una ||| create entity	count=1
function_name	segundo o ||| add	count=1
function_name	el cliente de ||| client	count=1
function_name	devuelve la frecuencia ||| get	count=2
function_name	se llega recursivamente ||| end children	count=1
function_name	opciones de ||| assert options	count=1
function_name	tendencias ||| get bias	count=1
function_name	de la asignación ||| sma	count=1
function_name	emitir advertencias y ||| set	count=1
namespace	o directorio especificado en ||| function	count=1
function_name	[function_name_1] [function_name_2] una llamada ||| [function_name_1] [function_name_2]	count=5
arg_pair	por keys del servidor ||| string $key int $time	count=1
arg_pair	un enlace web ||| resource $pdfdoc	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] days [arg_pair_2]	count=2
namespace	la que las ||| solrquery	count=1
return	argumento ||| void	count=1
return	devuelve un objeto ||| object	count=2
namespace	sentencias que no contienen ||| function	count=1
return	formulario en donde se ||| bool	count=1
function_name	calcular los parámetros de ||| scaling params	count=2
function_name	devuelve la lista ||| get server list	count=2
function_name	semáforo pueda ser ||| sem	count=1
function_name	como cursores de ||| tailable	count=1
arg_pair	para un ||| resource $image int $red	count=2
function_name	número total de conexiones ||| total	count=1
arg_pair	acepta uno ||| float $number	count=1
function_name	en por ||| min	count=1
function_name	de paso mínimo ||| set rprop delta min	count=1
namespace	este trabajo está ||| gearmanjob	count=2
function_name	true entonces en ||| set using	count=1
function_name	épocas [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	clave de columna ||| array column	count=1
namespace	de ||| function	count=82
arg_pair	páginas ||| string $prefix	count=1
arg_pair	valor de una ||| string $name string $value	count=1
function_name	obtiene el ||| get string	count=1
function_name	de la activación ||| activation	count=1
function_name	entrenadas las conexiones ||| get	count=1
arg_pair	indentificador ||| resource $result_id	count=1
function_name	establece el [function_name_2] ||| [function_name_1] output [function_name_2]	count=2
namespace	mensaje y socket. ||| zmqdevice	count=1
function_name	en por lo ||| doc frequency	count=1
function_name	escala el sistema ||| scale	count=1
arg_pair	utilizando ||| string $str	count=1
arg_pair	archivos en uno y ||| string $old_file	count=1
function_name	flujos registrados disponibles en ||| stream get wrappers	count=1
function_name	versión del ||| info	count=1
namespace	estilos ||| xsltprocessor	count=1
function_name	función mssql_free_statement() si existe ||| mssql free statement	count=1
namespace	imagen con el ||| gmagick	count=1
function_name	token de petición secreto ||| token	count=1
arg_pair	el parámetro ||| string $str	count=1
namespace	el color actual ||| harupage	count=1
arg_pair	de pajar ||| string $needle	count=2
namespace	original ||| gmagick	count=1
return	un servidor cubrid ||| resource	count=2
function_name	menos tantos ||| set mlt	count=1
function_name	de dos dimensiones ||| extended	count=1
arg_pair	en ||| bool $part string $encoding	count=2
function	[function_name_1] para la ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	actual a un valor ||| resource $p float $g	count=1
function_name	escribe al gestor de ||| write	count=2
arg_pair	iterar a ||| resource $stmt int $colnum	count=1
arg_pair	colores que representan ||| int $colorspace	count=2
function_name	coseno hiperbólico para ||| cosh	count=1
function_name	de una ||| fann	count=1
arg_pair	suma left a ||| mixed $left	count=1
arg_pair	una ||| string $filename array $tag	count=1
arg_pair	mayoría ||| string $character_set	count=1
function_name	cierra ||| ifxus close	count=1
function_name	devuelve la lista ||| get	count=1
function_name	los datos del apuntador ||| uudecode all	count=1
namespace	posición dada que ||| function	count=2
function_name	con el ||| pdf	count=1
return	en el servidor o ||| bool	count=1
namespace	cairoimagesurface ||| cairoimagesurface	count=2
namespace	de emitir ||| rarexception	count=1
namespace	píxeles de la imagen ||| gmagick	count=1
return	contiene ||| string	count=1
function_name	establece el ||| set mlt	count=1
function_name	un recurso de curl ||| curl	count=1
function_name	menos ||| set mlt min doc frequency	count=2
arg_pair	usando un método ||| int $width int $height	count=1
function_name	módulo ||| module	count=1
function_name	mínima ||| facet enum cache min default	count=1
function_name	sets [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	reemplaza los valores de ||| replace	count=1
function_name	[function_name_1] palabras serán ||| [function_name_2] [function_name_1]	count=6
function_name	la función del manejador ||| handler	count=4
return	ruta actual usando ||| bool	count=1
function_name	un carácter de dígito ||| isdigit	count=1
function_name	que [function_name] con ||| [function_name]	count=1
function_name	número de filas ||| rows	count=7
function_name	de codificación de ||| mb	count=1
return	estar disponibles en el ||| string	count=1
function_name	definida por el usuario) ||| restore error handler	count=1
function_name	establece ||| set error log	count=2
function_name	la de memcached::touch() ||| touch by key	count=1
function_name	petición http en ||| nsapi request	count=1
return	usando la regla ||| bool	count=1
function_name	datos rrd [function_name_2] ||| [function_name_1] [function_name_2] string $filename	count=1
function_name	establece el grosor de ||| imagesetthickness	count=1
function_name	[function_name_1] las interfaces ||| [function_name_2] [function_name_1]	count=2
function_name	interno es aún válida ||| valid	count=1
arg_pair	del indentificador de ||| resource $result_id	count=1
function_name	[function_name_1] la impresión ||| [function_name_1] text [function_name_2]	count=1
function_name	activación de ||| activation	count=1
function	[function_name_1] llave keydata ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] en un ||| [function_name_1] [arg_pair_2]	count=1
function_name	socket socket ||| socket	count=2
arg_pair	vea mongodbref ||| mixed $document_or_id	count=1
return	objeto de conjunto ||| sqlite3result	count=1
function_name	[function_name] fue ||| get [function_name]	count=1
function_name	establece el [function_name_2] ||| [function_name_1] output stagnation [function_name_2]	count=2
arg_pair	datos ||| mixed $data	count=1
function_name	buffer de ||| buffer	count=1
function_name	es true ||| set using exceptions	count=1
function	[function_name_1] a b ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] tipo ||| [function_name_1] socket [function_name_2]	count=1
function	proxy para [arg_pair_2] ||| [function_name_1] mysqlnduhconnection $connection_proxy [arg_pair_2]	count=2
arg_pair	con el patrón ||| string $pattern	count=1
namespace	[namespace] la shell ||| [namespace]	count=2
function_name	datos establecida ||| dba	count=1
arg_pair	divide un string str ||| string $token	count=1
return	tiene asociada [return] por ||| [return]	count=1
arg_pair	objeto watcher evperiodic y ||| int $signum callable $callback	count=1
arg_pair	archivo ||| array $options	count=2
function_name	configuración [function_name_2] ||| [function_name_2] load [function_name_1]	count=3
function_name	la última operación curl ||| curl error	count=1
namespace	distribuidas ||| mongo	count=1
function_name	lee los datos del ||| mailparse uudecode	count=1
arg_pair	path1 [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	el número de reintentos ||| deadlock retry count	count=1
function_name	nueva instancia de ||| ps new	count=1
function_name	las flags ||| flags	count=3
arg_pair	esta función [arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	si ||| default namespace	count=2
function_name	de una entrada ||| zip entry filesize	count=1
function	[function_name_1] dado ||| [function_name_1] type [arg_pair_2]	count=3
function_name	interno ||| get inner	count=1
function_name	[function_name] una ||| [function_name]	count=6
arg_pair	-- ||| zmqsocket $frontend	count=1
function_name	[function_name_1] el contenido ||| [function_name_2] [function_name_1]	count=1
function_name	cabecera ||| mimeheader	count=1
function_name	devolverá el hash de ||| crypt	count=1
return	de una entrada ||| int	count=1
function_name	el archivo rrd ||| rrd	count=1
arg_pair	extremo de una ||| mixed $background	count=1
function_name	de primer ||| ncurses color set	count=1
function_name	nombre ||| entry name	count=2
namespace	o del número ordinal ||| function	count=1
function_name	a la de memcached::prepend() ||| prepend by	count=1
function_name	clave para el elemento ||| key	count=1
arg_pair	conectada completamente ||| int $num_neurons1	count=1
function_name	archivo está marcado como ||| original	count=1
function_name	logo de ||| logo guid	count=1
function	el objeto [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	la información del ||| int $schema_type	count=1
function_name	si y sólo si ||| set using exceptions	count=1
function_name	campos a [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de tipo ||| exceptions	count=1
arg_pair	obtiene un array ||| resource $imap_stream	count=1
function_name	[function_name_1] prefijo ||| [function_name_2] [function_name_1]	count=1
function_name	las cabeceras http de ||| headers	count=1
function_name	la publicación ||| get ap	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] compressed [function_name_2]	count=1
function_name	información de estado ||| task status	count=1
return	la ||| mixed	count=1
function_name	establece el parámetro ||| set	count=1
arg_pair	un efecto de botón ||| int $width	count=1
function_name	[function_name_1] configuración ||| [function_name_2] get [function_name_1]	count=1
return	si ||| bool	count=9
return	en la inatensidad de ||| bool	count=1
arg_pair	hacer llamadas ||| mixed $input_headers	count=1
arg_pair	una ||| resource $pdfdoc	count=2
function_name	encabezados a ser enviados ||| headers	count=1
function_name	dígito específico en la ||| for digit	count=1
function_name	el certificado y ||| pkcs7 sign	count=1
function_name	esquema de codificación de ||| mb	count=1
function_name	y ||| raiseimage	count=1
arg_pair	variable almacenada en la ||| bool $success	count=1
function_name	[function_name_1] petición ||| [function_name_2] [function_name_1]	count=6
namespace	núcleo («kernel») a ||| imagickkernel	count=1
return	de el ||| int	count=2
function_name	valor gearman_errno ||| get errno	count=1
function_name	ejecuta una única tarea ||| do normal	count=1
arg_pair	un carácter unicode por ||| string $charactername int $namechoice	count=1
function_name	una lista de los ||| broker list	count=1
function_name	funcionalidad de color ||| start color	count=1
function_name	de fondo ||| background	count=1
function_name	las candidatas antes de ||| fann get cascade	count=2
function_name	color de ||| color	count=3
function_name	reemplaza los ||| array replace	count=1
arg_pair	para ||| resource $image	count=1
namespace	el argumento ||| rarexception	count=1
arg_pair	oid de ||| string $oid	count=1
namespace	devolviendo ||| pdo	count=2
function_name	absoluto canonizado en ||| realpath	count=1
function_name	el nivel mínimo de ||| sybase min message	count=1
arg_pair	de la sentencia dada ||| resource $statement	count=1
function_name	este ||| mlt	count=1
arg_pair	la columna ||| mixed $column	count=1
arg_pair	establece variables globales ||| array $result	count=1
function_name	obtiene ||| func	count=1
namespace	información sobre la ||| function	count=1
function_name	un ||| using	count=2
arg_pair	los ||| int $y	count=1
function_name	severidad [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	sets user ||| set user fields	count=2
function_name	apuntador ||| mailparse uudecode	count=1
arg_pair	función callback por ||| mixed $callback	count=1
arg_pair	archivo en una ||| string $filename int $use_include_path	count=1
arg_pair	un ||| string $fieldname	count=1
function_name	oauth ||| add required	count=1
function_name	esta ||| ps open memory	count=1
function_name	nivel mínimo de severidad ||| min message severity	count=1
function_name	actualiza ||| ifx update	count=1
function_name	las palabras que no ||| mlt	count=1
arg_pair	ubica ||| int $offset int $whence	count=1
function_name	diff ||| xdiff file diff	count=2
function_name	true entonces ||| using	count=1
arg_pair	comporta ||| string $username	count=1
function_name	de decadencia ||| decay	count=2
return	en la memoria ||| bool	count=1
arg_pair	posterior uso con ifx_do() ||| int $cursor_def	count=1
namespace	devuelve ||| gmagick	count=4
function_name	del array ||| get cascade	count=2
namespace	actual y escribe ||| splfileobject	count=1
namespace	de parámetros ||| function	count=1
function_name	control de la ||| control point callback	count=1
function_name	de datos lob ||| db2 lob read	count=1
function	exporta [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	tridimensional simulado ||| int $width	count=1
function_name	[function_name_1] salidas ||| [function_name_2] [function_name_1]	count=3
function_name	y muestra ||| display	count=1
function_name	metainformación de una fichero ||| has metadata	count=1
function_name	excepción de ||| set using	count=1
function_name	intenta borrar un ||| win32 delete service	count=1
function_name	cookie de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	red neuronal de retropropagación ||| fann	count=1
namespace	que ocurrión en ||| function	count=1
function_name	de encabezados a ||| headers	count=1
namespace	un documento ||| solrdocument	count=1
function	[function_name_1] asocia ||| imagick bool new [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] intérprete ||| [function_name_1] handler [arg_pair_2]	count=7
function_name	un cursor en lugar ||| cursor	count=1
namespace	en un das ||| sdo_das_xml	count=1
function_name	la configuración ||| tidy config count	count=1
function_name	id ||| get element by id	count=1
function_name	el documento ||| document	count=1
function_name	los ||| mailparse uudecode all	count=2
function_name	la decadencia es ||| decay	count=1
arg_pair	devueltos desde el domain ||| string $domain string $codeset	count=1
function_name	abre una ||| open	count=1
function_name	archivo dado y ||| mailparse uudecode all	count=1
function_name	bytes [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] faceta ||| [function_name] facet	count=3
arg_pair	algo de un objeto ||| mixed $array_or_countable int $mode	count=1
arg_pair	caracteres del inicio de ||| string $str	count=1
function_name	devuelve un ||| get pixel	count=1
function_name	[function_name_1] de términos ||| [function_name_2] [function_name_1]	count=2
namespace	se buscarán ||| function	count=1
function_name	devuelve el tipo de ||| gettype	count=1
arg_pair	archivo proporcionado ||| string $filename	count=1
arg_pair	clave dada por key ||| string $key mixed $value	count=1
return	de punto de la ||| float	count=1
function_name	en un archivo temporal ||| mailparse	count=1
function_name	mediante imap_delete() o imap_mail_move() ||| imap undelete	count=1
function	una imagen [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	rojo ||| red	count=2
return	hacer de intermediarios ||| zmqsocket	count=1
namespace	un trabajo y llama ||| gearmanworker	count=1
function_name	de recodificación ||| recode	count=1
arg_pair	de un ||| resource $p	count=1
return	más reciente ||| int	count=1
namespace	binario representado por ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| bool is [function_name_1] [function_name_2]	count=1
namespace	utilizando ||| function	count=1
function	un atributo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name] generado ||| mysql insert [function_name]	count=2
function_name	el ||| slide	count=1
function_name	objeto textflow ||| pdf create textflow	count=1
function_name	[function_name] campo ||| fdf [function_name] field	count=3
function_name	la función geoip_domain_by_name() ||| domain	count=1
function_name	a fgets() excepto ||| fgetss	count=1
function_name	de esquema en ||| add	count=1
function_name	de bytes de ||| bcompiler	count=4
function_name	al formato idna ascii-compatible ||| idn to ascii	count=1
namespace	de ||| rarexception	count=2
function_name	se da la marca ||| idate	count=1
function_name	devuelve lo mismo ||| get	count=1
namespace	excepto que fgetss() ||| function	count=1
function_name	año ||| year	count=1
function_name	control ||| control	count=1
function_name	respuesta actual ||| response	count=1
function_name	devuelve la imagen de ||| image	count=1
function_name	la precisión de la ||| precision	count=1
return	está en ||| bool	count=2
function_name	igual ||| close	count=1
arg_pair	grado ||| array $other_options	count=1
function_name	a fbsql_fetch_array() con una ||| fbsql fetch	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] $fdf_document [arg_pair_2] int	count=4
function_name	servidor ingres ||| ingres query	count=1
function_name	[function_name] la hoja ||| transform [function_name]	count=1
function_name	contexto con ||| context	count=1
return	el momento ||| int	count=1
function_name	base ||| start db	count=1
arg_pair	función cubrid_set_add() ||| string $attr_name string $set_element	count=1
namespace	aparecen ||| function	count=1
return	como un objeto pdostatement ||| pdostatement	count=1
function_name	dsn disponibles después de ||| odbc	count=1
function_name	los pares de ||| save repl	count=1
function_name	forzar a la ||| variant cast	count=1
namespace	obtiener el ||| splfixedarray	count=1
arg_pair	éxito cero en caso ||| mixed $options	count=1
function_name	codificador utilizado actualmente ||| set current encoder	count=1
namespace	para la conexión searchd ||| sphinxclient	count=1
arg_pair	conexión de [arg_pair_2] ||| [arg_pair_1] string $user [arg_pair_2]	count=3
function_name	archivo codificado mediante uuencode ||| uudecode all	count=1
arg_pair	el certificado x509cert ||| mixed $x509cert	count=1
function_name	[function_name_1] de épocas ||| [function_name_1] candidate stagnation [function_name_2]	count=1
function_name	se usa para obtener ||| cubrid	count=2
function_name	devuelve un recurso ||| get resource	count=2
function_name	crea un ||| create ns	count=1
function_name	bézier desde ||| curveto	count=1
function_name	[function_name_1] nombre ||| [function_name_1] package [function_name_2]	count=1
function_name	einer mime kopfzeile en ||| iconv mime	count=1
function_name	[function_name_1] desde una ||| [function_name_1] [function_name_2]	count=4
function_name	las entradas de ||| input	count=1
function_name	establece el valor de ||| fdf set status	count=1
function_name	[function_name_1] char ||| [function_name_1] [function_name_2]	count=1
function_name	los datos ||| temporary	count=1
function_name	[function_name_1] pdf ||| [function_name_2] [function_name_1]	count=1
function_name	csr certificate ||| openssl csr	count=1
function_name	cualquier ||| construct	count=1
arg_pair	el criterio y la ||| int $sortorderby int $sortdirection	count=2
function_name	devuelve los [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	transacciones [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	unix (1 de ||| int	count=1
function_name	de unicode uppercase ||| uuppercase	count=1
function_name	de la última ||| dbplus last	count=1
function_name	que ||| set start	count=2
arg_pair	leer un directorio al ||| string $path	count=1
function_name	elimina el identificador de ||| shm remove	count=1
namespace	la instancia ||| yaf_dispatcher	count=1
function_name	tamaño de paso inicial ||| rprop delta zero	count=1
namespace	direcciones servicios colas o ||| zmqdevice	count=1
return	una ||| int	count=8
function_name	encuentra ||| memory image	count=2
function_name	rutina de interoperabilidad ||| get stub	count=1
function_name	alfa de ||| set image alpha	count=1
function_name	base de datos entera ||| mysql drop db	count=1
namespace	el contenido de ||| function	count=2
arg_pair	por key ||| int $max_acquire	count=1
function_name	eliminar ||| fgetss	count=1
arg_pair	aclarando y ||| int $y	count=1
namespace	filas de la ||| sqlite3	count=1
function_name	valor gamma [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un campo de ||| set	count=1
function_name	información sobre ||| password get info	count=1
namespace	que no ||| function	count=2
function_name	[function_name_1] entradas de ||| [function_name_2] [function_name_1]	count=3
function_name	los datos del apuntador ||| uudecode	count=1
function_name	escala de entrada para ||| set input scaling	count=1
return	archivos ||| string	count=1
namespace	elimina una imagen ||| gmagick	count=1
return	de segundos desde ||| int	count=1
arg_pair	objeto [arg_pair] ||| [arg_pair]	count=1
return	un objeto en formato ||| string	count=1
function_name	dos o ||| format	count=1
function_name	[function_name_1] máxima sobre ||| [function_name_2] [function_name_1]	count=6
function_name	para ||| offset set	count=1
function_name	devuelve el resto del ||| get	count=1
namespace	el puntero de el ||| splfileobject	count=1
function	[function_name_1] parámetro data ||| [arg_pair_2] [function_name_1]	count=1
return	api graphicsmagick ||| string	count=1
function_name	dispositivo raíz ||| gupnp root device	count=2
return	des de unix ||| string	count=1
arg_pair	esté disponible para ||| int $row	count=1
function_name	lista ||| enchant broker list dicts	count=2
function_name	se ||| image	count=1
function_name	el prefijo [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	instancia xml dada ||| string	count=1
function_name	[function_name_1] siguiente al ||| function string fdf [function_name_2] field [function_name_1] resource $fdf_document string $fieldname	count=2
arg_pair	a sybase_connect() con dos ||| string $password	count=1
function_name	exec ||| ftp exec	count=1
function_name	la descripción de la ||| cairo pattern get filter	count=1
function_name	de paginación tamaño de ||| paged result	count=1
arg_pair	guarda x509 [arg_pair_2] ||| [arg_pair_1] string $out [arg_pair_2]	count=1
arg_pair	parámetro plaintext con las ||| string $plaintext	count=1
function_name	a unas coordenadas ||| ps moveto	count=1
function_name	elipse a la ||| ellipse	count=1
namespace	memcached ||| memcached	count=6
arg_pair	-- ||| zmqsocket $backend	count=1
arg_pair	hace que esté disponible ||| int $row	count=1
function_name	[function_name_1] entrenadas las ||| [function_name_2] [function_name_1]	count=1
arg_pair	a un valor de ||| resource $p float $g	count=1
function_name	un número es ||| prob	count=1
function_name	[function_name_1] de grupos ||| [function_name_1] candidate [function_name_2]	count=1
function_name	de ||| memory image	count=2
arg_pair	memcached::replace() con la ||| mixed $value int $expiration	count=1
arg_pair	punto x3 ||| float $x3	count=1
arg_pair	un dn específico ||| resource $link_identifier string $dn	count=2
function_name	última sentencia insert ejecutada ||| db2 last insert	count=1
arg_pair	convierte un ||| string $string int $split_length	count=1
arg_pair	prepara a query para ||| resource $link_identifier	count=1
function_name	secuencia ||| get filename	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] closepath [function_name_2]	count=1
arg_pair	a esa función ||| string $function_name	count=1
function_name	nombres especificado ||| is	count=1
function_name	usarse para ordenar ||| multisort	count=1
namespace	el argumento es ||| rarexception	count=1
function_name	añade ficheros de ||| add pattern	count=1
arg_pair	de la base ||| string $database	count=1
function_name	intersección ||| array uintersect	count=2
function_name	la que las ||| min doc frequency	count=1
arg_pair	feature está soportada para ||| string $version	count=1
function_name	contraseña del ||| oci password	count=1
function	campos [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	tamaño de el ||| get size	count=1
arg_pair	instrucciones table_get y table_set ||| string $note_name string $note_value	count=1
function_name	[function_name_1] color del ||| [function_name_1] [function_name_2] quantum	count=1
return	de la cromaticidad como ||| array	count=1
return	el ||| string	count=11
function_name	escribe ||| bcompiler write	count=1
function_name	intenta eliminar cualesquiera ||| fgetss	count=1
function_name	el término ||| set terms lower bound	count=1
function_name	y la letra espaciada ||| text width	count=1
arg_pair	horizontal y vertical ||| float $y	count=1
arg_pair	fabricación cres ||| int $size	count=1
function_name	[function_name_1] conjunto de ||| [function_name_1] [function_name_2]	count=1
function_name	sentencia insert ejecutada ||| insert	count=1
return	una ||| bool	count=4
namespace	de estilos ||| xsltprocessor	count=1
namespace	otros cambios a ||| function	count=1
function_name	se encuentra disponible ||| ps open memory	count=1
function_name	obtiene el valor ||| get default	count=1
function_name	máximo) de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	desplazamiento del ||| shift	count=2
function_name	índice ausente que ||| empty	count=1
function_name	[function_name_1] de pendientes ||| [function_name_1] cascade activation [function_name_2]	count=1
function_name	lista de dsn ||| data source	count=1
arg_pair	incrementa ||| int $expiry	count=1
function_name	obtiene el descenso vertical ||| get descent	count=1
function_name	[function_name_1] con ||| [function_name_2] [function_name_1]	count=2
function_name	peso [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ser entrenadas las ||| get cascade	count=1
function_name	realice una salida como ||| runkit sandbox output	count=1
function_name	[function_name_1] los caracteres ||| [function_name_2] [function_name_1]	count=2
function_name	las palabras ||| frequency	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] streams [function_name_1]	count=1
function_name	ocupar la porción borrada ||| chop	count=1
function_name	la altura ||| height	count=2
function_name	constructor para el objeto ||| construct	count=1
function_name	propuesta de renderización de ||| getimagerenderingintent	count=1
arg_pair	la url ||| string $url	count=1
arg_pair	el uri que contiene ||| string $uri	count=1
function_name	descripción de ||| cairo pdf surface create	count=1
function_name	[function_name_1] de épocas ||| [function_name_1] cand [function_name_2]	count=4
function_name	devuelve el [function_name_2] ||| [function_name_1] image background [function_name_2]	count=2
function_name	sistema de opendir readdir ||| readdir	count=1
function_name	[function_name] particular ||| set [function_name]	count=3
function_name	la imagen ||| set interlace	count=1
function_name	devuelve una lista ||| broker list	count=1
function_name	archivo dado ||| mailparse uudecode	count=1
arg_pair	existe todavía en el ||| int $flag int $expire	count=1
arg_pair	lista de filtros ||| int $read_write	count=2
function_name	de los caracteres ||| unicode	count=1
function_name	comentario de ||| comment index	count=1
function_name	correo correctamente formateada como ||| write address	count=1
function_name	obtiene varios valores que ||| ps get	count=1
function_name	campo para [function_name_2] ||| [function_name_2] highlight alternate [function_name_1]	count=1
function_name	[function_name_1] severidad ||| [function_name_1] [function_name_2]	count=1
arg_pair	efecto ||| int $width int $height	count=1
arg_pair	para un ||| resource $image	count=2
function	[function_name_1] un resultado ||| [function_name_1] name [arg_pair_2]	count=3
function_name	versión plural ||| ngettext	count=1
function_name	descripción de ||| cairo matrix translate	count=1
function_name	espacio de nombres especificado ||| is default	count=1
function_name	encabezados a ser ||| headers	count=1
arg_pair	actual a un ||| resource $p	count=1
function_name	añade la ||| add	count=1
arg_pair	un identificador de resultado ||| resource $result_id	count=1
function_name	biblioteca unrar ||| set	count=1
function_name	rutina de interoperabilidad ||| stub	count=1
function_name	[function_name] index_or_name si ||| sqlite [function_name]	count=3
function	información [arg_pair_2] ||| [function_name_1] matchbox [arg_pair_2]	count=1
function_name	obtiene el contenido de ||| pdf get	count=2
return	puedan ||| void	count=1
namespace	de ømq pueden hacer ||| zmqdevice	count=1
function_name	los pares de ||| config save repl	count=1
arg_pair	la database especificada ||| string $database	count=1
function_name	obtiene el nombre del ||| get	count=2
function_name	[function_name_1] las entradas ||| [function_name_1] [function_name_2]	count=1
function_name	número de pedido ||| yp order	count=1
function_name	longitud de un campo ||| odbc field len	count=1
arg_pair	forma parecida ||| string $servername	count=1
function_name	devuelve la longitud ||| len	count=2
return	entero que describe el ||| int	count=1
function_name	a gettimeofday 2 ||| gettimeofday	count=1
function_name	lugar de emitir advertencias ||| using	count=1
arg_pair	exp ||| gmp $exp	count=1
function_name	de trozos remarcados ||| highlight snippets	count=1
function_name	clase iterador que es ||| iterator class	count=1
function_name	de los otros ||| diff	count=1
arg_pair	iterar ||| int $colnum	count=1
function_name	carácter especificado por ||| chr	count=1
function_name	distancia especificada ||| pixel similar quantum	count=1
function_name	de [function_name] ||| set [function_name] virtual pixel	count=1
namespace	aplicarse a una ||| imagickkernel	count=1
function_name	devuelve la imagen de ||| image channels	count=1
arg_pair	secuencia del mensaje dado ||| int $msg_number	count=1
arg_pair	format ||| mixed $args	count=1
function_name	el índice [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	que fgetss() intenta eliminar ||| function	count=1
return	de ømq ||| zmqsocket	count=1
arg_pair	de la base de ||| string $password string $database	count=1
function_name	un servidor ssh2 ya ||| ssh2	count=1
namespace	entrada a un hash ||| quickhashintstringhash	count=1
namespace	variable php ||| function	count=1
function	desencripta [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	distribución de graphicsmagick como ||| getreleasedate	count=1
arg_pair	la key existe ||| int $flags	count=1
arg_pair	de la primera ocurrencia ||| string $needle	count=1
return	varias ||| array	count=1
function_name	[function_name_1] complemento apuntada ||| [function_name_2] get last used [function_name_1]	count=3
function_name	una nueva csr certificate ||| csr new	count=1
function_name	es true entonces ||| set using exceptions	count=1
return	al estado del cursor: ||| int	count=1
function_name	información sobre la firma ||| gnupg verify	count=1
function_name	pregunta [function_name_1] [function_name_2] ||| function float [function_name_1] [function_name_2] resource $pdfdoc int $font	count=2
return	de cualquier ||| string	count=1
function_name	[function_name_1] de salida ||| [function_name_2] [function_name_1]	count=12
function_name	define el de ||| set slide show	count=1
function_name	abierto ||| proc get	count=1
arg_pair	value1 con ||| mixed $value1 mixed $value2	count=1
arg_pair	identificaron ||| resource $connection string $client_identifier	count=1
namespace	del lob ||| oci-lob	count=1
function_name	directorio vacío ||| add empty dir	count=2
namespace	de campos del documento ||| solrdocument	count=1
function_name	devuelve ||| get stream	count=2
function_name	a las [function_name_2] ||| [function_name_2] [function_name_1]	count=8
rest	convierte una [function_2] ||| [function_2] [return_1]	count=1
function_name	identificador [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	devuelve el estado ||| introspection get	count=1
arg_pair	algoritmos alternativos ||| string $salt	count=1
arg_pair	resultado ||| resource $link resource $result	count=1
function_name	la extensión ||| extension	count=6
function_name	un error ||| set using exceptions	count=1
function_name	[function_name_1] seguridad ||| [function_name_1] [function_name_2]	count=4
function_name	búsqueda en [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] la lista ||| [function_name_2] [function_name_1]	count=1
arg_pair	asocia ||| int $cols int $rows	count=1
function_name	función realiza una búsqueda ||| search	count=1
function_name	obtiene el valor actual ||| get	count=1
arg_pair	x509cert proporcionado ||| mixed $x509cert	count=1
function_name	paquete ||| packet	count=1
function	logaritmo natural [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	actualmente en el servidor ||| bool	count=1
function_name	para establecer ||| set module	count=1
function_name	descripción de ||| cairo surface get font	count=1
function_name	lote de ||| batch	count=2
arg_pair	ciertos elementos de un ||| resource $pdfdoc	count=1
function_name	un género correspondiente ||| get genre	count=1
arg_pair	colores que representan ||| int $numcolors int $colorspace	count=2
function_name	error de socket devuelto ||| socket	count=1
namespace	uuencode ||| function	count=1
arg_pair	varios arrays al ||| array $array1 mixed $array1_sort_order	count=1
function_name	mime kopfzeile ||| iconv mime	count=1
return	el argumento es true ||| void	count=1
function_name	clave /status ||| status	count=1
function_name	lo ||| mlt	count=1
function_name	valor actual ||| checkbox set value	count=1
function_name	el usuario presiona la ||| suspend callback	count=1
function_name	número de ||| msgno	count=1
function_name	abierto mediante ||| get status	count=1
arg_pair	especificar un ||| string $field	count=1
function_name	cierra el objecto slob ||| close	count=1
function_name	se encuentra disponible la ||| ps	count=1
function_name	la extensión de ||| extension	count=2
function_name	evento [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	modo wsdl o modo ||| mixed $wsdl array $options	count=1
function_name	abre un blob en ||| ibase blob	count=1
function_name	usando el certificado y ||| sign	count=1
function_name	de memcached::touch() ||| touch by key	count=1
arg_pair	gmagickpixel de color ||| gmagickpixel $color	count=1
function_name	devuelve un array vacío ||| mcrypt module get	count=1
function_name	ingres_query() en ||| ingres	count=1
arg_pair	con ||| string $charset	count=1
arg_pair	espacio de nombres ||| string $namespaceuri	count=1
function_name	casillas ||| newt checkbox tree find	count=1
namespace	objeto imagickpixel como string ||| imagickpixel	count=1
return	mensaje y ||| zmqsocket	count=1
function_name	ser usado para extraer ||| msql	count=1
function_name	para los ||| set event handler	count=1
function_name	este método ||| ref	count=1
function_name	la descripción de la ||| pattern add color stop rgb	count=1
function_name	se devuelve ||| add	count=1
namespace	documentos como este serán ||| solrquery	count=1
namespace	o ||| sdo_das_xml	count=1
function_name	el logo de ||| logo	count=1
function_name	seguridad del sumario predeterminado ||| highlight alternate	count=1
function_name	valor de ||| bind value	count=1
function_name	la última respuesta ||| last response	count=3
arg_pair	devuelve el número de ||| resource $imap_stream	count=1
namespace	fichero de esquema ||| sdo_das_xml	count=1
function_name	especial ||| using	count=1
function_name	bloques o de lo ||| block	count=1
function_name	devuelve el ||| get	count=114
function_name	sombreado ||| pdf shfill	count=1
function_name	fichero de esquema ||| types	count=1
arg_pair	dibujar imágenes de ||| bool $blendmode	count=1
arg_pair	a thickness píxeles ||| resource $image int $thickness	count=1
arg_pair	veces) ||| int $fetch_type	count=1
arg_pair	valores largos ||| int $threshold float $min_savings	count=1
return	la función va aquí ||| cairopssurface	count=1
return	un array asociativa con ||| array	count=1
function_name	archivo dado y escribe ||| write	count=1
return	una entrada de ||| int	count=1
function_name	petición ||| nsapi request	count=1
function_name	establece ||| set highlight use	count=1
arg_pair	base de eventos ||| int $flags	count=1
return	los nombres y ||| array	count=1
arg_pair	devuelve str ||| string $str	count=2
return	los nombres y valores ||| array	count=1
function_name	reintentos en caso ||| retry count	count=1
arg_pair	forma parecida a ||| string $servername string $username	count=1
function_name	resultado ||| xdiff file	count=4
arg_pair	establece el uri ||| string $uri string $encoding	count=1
function_name	en ||| all	count=1
function_name	especifica el número de ||| set start	count=1
namespace	array asociativo que contiene ||| function	count=1
function_name	expresiones regulares ||| highlight regex	count=1
return	un objeto con ||| object	count=2
function_name	las palabras que no ||| mlt min	count=1
arg_pair	las coordenadas ||| resource $image	count=1
namespace	opacidad ||| gmagickdraw	count=1
function_name	la traza de la ||| trace	count=2
function_name	mysql asociado con el ||| mysql	count=1
function_name	de la ||| set slide show	count=1
function_name	una imagen [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	el objetivo y esté ||| floodfill	count=1
function_name	devuelve la imagen ||| compare image channels	count=1
function_name	obtiene la clave para ||| key	count=1
function_name	el indicador ||| gzrewind	count=1
function	[function_name_1] de a ||| [function_name_1] [arg_pair_2]	count=2
function_name	la descripción ||| cairo font options get subpixel	count=1
function_name	valor de un parámetro ||| bind value	count=1
return	debería utilizarse mcrypt_generic_deinit() en ||| bool	count=1
function_name	directorio ||| chdir	count=1
arg_pair	horizontal y vertical ||| float $x float $y	count=1
function_name	[function_name_1] http ||| [function_name_2] [function_name_1]	count=14
function_name	[function_name] celda ||| [function_name] table	count=1
function_name	de parámetros ||| ps	count=1
function_name	este ||| mlt min	count=1
namespace	del número ||| harupage	count=1
return	imagen basada en paleta ||| bool	count=1
function_name	de datos geoip ||| geoip db	count=2
namespace	de ||| sqlite3	count=3
arg_pair	busca en subject ||| int $limit	count=1
arg_pair	memcached::set() con ||| int $expiration	count=1
namespace	clase reflectionextension ||| reflectionextension	count=1
arg_pair	los datos almacenados ||| string $key	count=1
function_name	imagen izquierda ||| stereo image	count=1
function_name	rellenado ||| str pad	count=2
function_name	de ||| odbc data	count=2
function_name	núcleo («kernel») a este ||| add	count=1
arg_pair	recursivamente path1 y ||| string $path1	count=1
return	según los parámetros dados ||| array	count=1
function_name	devuelve ||| get state variable	count=2
function_name	establece el manejador de ||| set	count=1
function_name	que la ||| by	count=4
function_name	contexto con la ip ||| gupnp context	count=1
return	existe en ||| bool	count=1
arg_pair	idéntica ||| int $length	count=1
function_name	cambia el tamaño ||| size	count=1
arg_pair	registros de una ||| resource $connection	count=1
function_name	menos ||| doc	count=1
function_name	letras del continente ||| continent code by	count=1
function_name	enlace simbólico ||| is link	count=1
function_name	ecualiza el histograma ||| equalize	count=1
function_name	la consulta siguiente si ||| cubrid next result	count=1
function_name	clases que pertenecen ||| class names	count=1
function_name	actual ||| setproctitle	count=1
arg_pair	[arg_pair] atributo ||| [arg_pair]	count=2
function_name	primarias de ||| primary	count=1
function_name	un identificador único ||| object hash	count=1
arg_pair	un servicio proxy de ||| resource $proxy string $action	count=1
function_name	un error ||| set using	count=1
return	trabajo ||| bool	count=2
function_name	si y ||| set using	count=1
return	el número ||| int	count=5
function_name	indica si ||| is in	count=1
function_name	[function_name_1] msql ||| [function_name_2] [function_name_1]	count=6
function_name	sido creado con ||| add	count=1
function_name	rellena ||| fill stroke	count=2
arg_pair	una función escalar ||| string $name mixed $callback	count=1
function_name	tupla previa [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	otra información [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	pueden ||| construct	count=1
namespace	ssl para las ||| oauth	count=1
function_name	del servicio ||| start service	count=1
function_name	funciones registradas __autoload ||| spl autoload call	count=2
function_name	una ||| object	count=1
function_name	calcula el seno para ||| trader asin	count=1
function_name	[function_name_1] variables ||| [function_name_2] [function_name_1]	count=2
function_name	el actual patrón guía ||| dash	count=1
function_name	el siguiente resultado de ||| next result	count=1
function_name	cierra ||| pdf close	count=1
arg_pair	es una implementación de ||| string $offset	count=1
function_name	de dsn disponibles después ||| data source	count=1
function_name	base de datos actualmente ||| select db	count=1
function_name	xml desde ||| xml	count=1
function_name	la siguiente fila del ||| sqlsrv fetch	count=1
function_name	colección de archivos dentro ||| collection	count=1
arg_pair	assoc_array en ||| array $assoc_array	count=1
function_name	de espera de la ||| query timeout	count=1
function_name	errores de imap ||| imap	count=1
namespace	carácter que es parte ||| function	count=1
namespace	actual medido ||| function	count=1
arg_pair	path1 y ||| string $path1	count=1
arg_pair	caracteres de mask ||| string $subject string $mask	count=1
function_name	de escala la imagen ||| image	count=1
function_name	desde la csr ||| csr sign	count=1
function_name	de cargar entidades ||| entity loader	count=1
arg_pair	está conectada completamente ||| int $num_neurons2	count=1
function_name	false si ||| is	count=1
function_name	devuelve la [function_name_2] ||| [function_name_1] server [function_name_2]	count=4
function_name	descripción de la función ||| cairo pattern	count=3
function_name	el conjunto de grupos ||| getgroups	count=1
return	descriptor previamente ||| bool	count=1
function_name	interoperabilidad stubs específicas del ||| stub	count=1
function_name	obtiene el valor de ||| fdf get	count=1
namespace	de proceso del ||| function	count=1
arg_pair	que aparecen ||| string $str	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] replace [arg_pair_2]	count=12
function_name	la descripción de la ||| cairo svg version to string	count=1
function_name	establece el gestor de ||| set storage handler	count=1
function_name	caché de archivo/usuario ||| bin	count=1
function_name	ciclo de peticiones ||| eio nop	count=1
function_name	devuelve ||| get facet	count=1
function_name	establece la ||| set qos	count=1
function_name	severidad de ||| severity	count=1
namespace	error de cualquier error ||| function	count=1
arg_pair	objetivo target existente ||| string $target	count=1
return	agregar ||| bool	count=1
return	de base de las ||| int	count=1
function_name	ca_path y ca_info establecidos ||| capath	count=1
function_name	simple línea ||| textline	count=1
namespace	similares al comando ||| mongocursor	count=1
function_name	siguiente entero menor ||| trader floor	count=1
arg_pair	página ||| int $type	count=1
function_name	color asociada a este ||| getcolorcount	count=1
function_name	documento mínima ||| terms min	count=1
function_name	imagen en [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	por dn [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	repositorio indicado ||| svn cat	count=1
arg_pair	un ||| int $data_type	count=1
function_name	descripción de la función ||| cairo pattern get	count=3
arg_pair	dn [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	resultado de ||| resource $result	count=1
arg_pair	indicando que ||| string $actor string $details	count=1
function_name	establecidas para los mensajes ||| imap clearflag	count=1
return	o disminuir el ||| void	count=1
function_name	devuelve la versión de ||| get version	count=2
arg_pair	variable_key y ||| resource $shm_identifier int $variable_key	count=1
function_name	servidor raíz ||| gupnp root device	count=1
function_name	cadena artista de una ||| artist	count=1
return	previamente asignados con oci_new_descriptor() ||| bool	count=1
arg_pair	php del texto ||| resource $handle int $length	count=1
namespace	carácter ||| intlchar	count=10
function_name	secuencia de ||| get filename	count=1
function_name	de 1970 00:00:00 gmt) ||| time	count=1
function_name	etiquetas < meta > ||| get meta tags	count=1
return	línea de base de ||| int	count=1
arg_pair	de intermediarios de direcciones ||| zmqsocket $backend	count=1
function_name	postgresql ||| pg end	count=1
function_name	de ssl para ||| set	count=1
function_name	devuelve el ||| variant get	count=1
function_name	últime [function_name] imap ||| imap last [function_name]	count=1
arg_pair	respecto al módulo modulus ||| int $scale	count=1
function_name	obtiene la información ||| get data	count=1
return	una conexión de ||| string	count=1
function_name	rellena ||| fill	count=4
function_name	la cookie [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
arg_pair	píxel que coincida ||| mixed $fill float $fuzz	count=1
arg_pair	fuentes font devuelto por ||| int $font	count=1
function_name	de la última modificación ||| mdtm	count=1
namespace	usando una función ||| arrayiterator	count=2
function_name	marcador ||| bookmark	count=1
function_name	actual usado para guardar ||| save path	count=1
arg_pair	de gettext() ||| string $msgid2	count=1
function_name	de página ||| reset image page	count=1
function_name	[function_name_1] activación para ||| [function_name_2] [function_name_1]	count=2
arg_pair	una función proporcionada por ||| callable $user_function	count=1
function_name	onda a la imagen ||| wave image	count=1
function	parámetro [arg_pair_2] ||| [function_name_1] resource $p [arg_pair_2]	count=2
function_name	un círculo a la ||| circle	count=1
namespace	de proceso del proceso ||| function	count=1
function_name	buscarán los ||| chdir	count=1
arg_pair	fichero fd ||| mixed $fd int $mode	count=1
return	cambia ||| bool	count=2
function_name	más opciones de la ||| set option	count=1
function_name	oauth ||| check oauth	count=1
function_name	el número de secuencia ||| imap	count=1
return	en el array resultante ||| array	count=1
function_name	la porción de ||| mb strrichr	count=2
function_name	ciclo de peticiones entero ||| eio nop	count=1
namespace	en un ||| sdo_das_xml	count=1
function_name	gran número ||| start buffering	count=1
arg_pair	crea un efecto de ||| int $y	count=1
namespace	filtro dado por ||| function	count=2
function_name	y sólo ||| set	count=1
function_name	entrada/salida en milisegundos ||| timeout	count=1
arg_pair	el intérprete ||| callable $handler	count=4
function_name	denominador ||| task denominator	count=1
function_name	método connect ||| connect	count=1
arg_pair	file con [arg_pair_2] ||| [arg_pair_1] string $patch [arg_pair_2]	count=1
function_name	segundo o subsiguiente ||| types	count=1
arg_pair	obtiene un ||| string $defaulthost	count=1
function_name	valor del pundo ||| chr	count=1
arg_pair	de la primera ocurrencia ||| string $haystack string $needle	count=1
arg_pair	evento que se va ||| mixed $fd	count=1
function_name	de una clase ||| class	count=1
function_name	función devuelve el ||| cubrid get	count=1
function_name	asignación de memoria ||| sma	count=1
function_name	sobre un grupo ||| posix	count=1
function_name	la última comprobación realizada ||| crack getlastmessage	count=1
arg_pair	función usa la prueba ||| gmp $a	count=1
namespace	la clase es ||| reflectionclass	count=1
return	cuando se anota texto ||| string	count=1
namespace	el tipo de ||| gmagick	count=1
function_name	comprobación de indices ||| udiff assoc	count=1
namespace	entrada definido por ||| ziparchive	count=2
function_name	mediante el uso de ||| get	count=1
return	circular [return] ||| [return]	count=3
return	número de filas ||| solrquery	count=1
function_name	por spl ||| spl autoload	count=1
function_name	al entrenamiento ||| fann get cascade output	count=1
function_name	[function_name_1] de la ||| [function_name_2] [function_name_1]	count=7
return	con la ||| string	count=1
namespace	la ||| imagick	count=3
arg_pair	blanco y negro especificados ||| float $gamma	count=1
function_name	el sistema ||| crypt	count=1
return	carácter delimitador y ||| array	count=1
arg_pair	como timestamp y ubicación ||| int $timestamp int $format	count=2
function_name	extrae cada archivo codificado ||| uudecode all	count=1
arg_pair	una nueva ubicación ||| string $path string $new_path	count=1
function_name	de relación ||| dbplus	count=1
arg_pair	lotes ||| array $batch array $protocoloptions	count=1
return	definida ||| void	count=2
arg_pair	operación fallará si key ||| mixed $value	count=1
arg_pair	instrucciones table_get y table_set ||| string $note_value	count=1
arg_pair	pattern según ||| string $pattern	count=1
function_name	agrupación ||| server	count=1
function_name	la última conexión ||| last	count=1
function_name	de la última ||| last	count=3
function_name	quitar ||| offset unset	count=1
return	la actual basada en ||| bool	count=1
function_name	array multi-dimensional [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	modo especificado ||| mode	count=1
function_name	lista de ||| image	count=1
namespace	si ||| imagick	count=1
function_name	suscribirse a ||| subscribe	count=1
function_name	el valor gamma ||| gamma	count=1
return	de blob en ||| bool	count=1
function_name	pdf ||| pdf open	count=1
namespace	extrae cada archivo codificado ||| function	count=1
arg_pair	la función cubrid_set_add() ||| string $set_element	count=1
function	campos [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=1
function_name	[function_name_1] el conjunto ||| [function_name_1] [function_name_2]	count=1
function_name	abre ||| newt open	count=1
function_name	la transformación actual ||| trans matrix	count=1
function_name	[function_name_1] campo a ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] escritura realizada ||| mysqlnd ms get [function_name]	count=3
arg_pair	un algoritmo ||| string $algorithm string $lib_dir	count=1
arg_pair	se identificaron con ||| resource $connection string $client_identifier	count=1
return	usando ||| bool	count=1
namespace	a este ||| imagickkernel	count=1
function_name	drop ||| drop	count=1
function_name	obtiene la posición ||| position	count=1
function_name	los bordes ||| raiseimage	count=1
return	crea ||| void	count=1
namespace	de la ||| sqlite3	count=1
function_name	inicia ||| begin	count=3
function_name	de ||| ngettext	count=1
arg_pair	un ||| string $directory resource $context	count=1
function_name	logo de php ||| logo guid	count=1
arg_pair	uri que contiene el ||| string $uri string $encoding	count=1
function_name	una función a llamar ||| callback	count=1
function_name	ejecutando una clave o/y ||| find	count=1
arg_pair	del final de str ||| string $str	count=1
return	de filas de ||| int	count=1
function_name	operación substr() ||| substr	count=1
namespace	los dominios especificados por ||| function	count=1
function_name	escala de un ||| scale	count=1
function_name	valor especial indicando error ||| set using exceptions	count=1
function_name	de archivo dado ||| mailparse uudecode all	count=1
arg_pair	variable_key y libera la ||| resource $shm_identifier int $variable_key	count=1
namespace	conexión searchd ||| sphinxclient	count=1
namespace	como este serán ||| solrquery	count=1
namespace	puntero ||| function	count=1
namespace	lee ||| function	count=2
arg_pair	de un ||| resource $pdfdoc string $boxname	count=1
return	conexión que establece es ||| mixed	count=1
namespace	de ||| splfileobject	count=3
function_name	de consulta ||| query field	count=1
function_name	entonces en ||| using exceptions	count=1
function_name	base de datos especificada ||| dbase	count=1
function_name	límite ||| limit	count=4
function_name	[function_name_1] caché ||| [function_name_2] [function_name_1]	count=4
function_name	logo de php ||| logo	count=1
function_name	establece la posición ||| pdf set	count=1
function_name	de nombres ||| is	count=1
function_name	descripción de la función ||| cairo pattern create linear	count=1
function_name	la información del servicio ||| gupnp service info	count=1
function_name	reemplaza el ||| replace	count=2
function_name	patrones de entrenamiento del ||| fann length	count=1
arg_pair	dispositivos de ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	del últime [function_name] ||| imap last [function_name]	count=3
function_name	consulta siguiente ||| cubrid next result	count=1
arg_pair	un array y devuelve ||| array $array	count=1
function_name	lo ||| set mlt	count=1
function_name	el manejo de errores ||| errors	count=1
function_name	de la línea de ||| line	count=2
function_name	la porción de haystack ||| mb stristr	count=1
arg_pair	fuentes font devuelto ||| resource $pdfdoc int $font	count=1
namespace	igual que closedir() ||| directory	count=1
function_name	protocolo mysql ||| mysql get proto info	count=1
arg_pair	simulado aclarando ||| int $width int $height	count=1
function_name	el espacio de ||| is default namespace	count=1
return	(«kernel») a este ||| void	count=1
function_name	etiqueta id3 ||| id3	count=1
arg_pair	modo wsdl ||| array $options	count=1
namespace	el tiempo ||| gearmanclient	count=1
return	mediante su nombre en ||| bool	count=1
namespace	como cursores ||| mongocursor	count=1
function_name	lista con ||| list	count=1
function_name	el servidor postgresql después ||| pg	count=1
arg_pair	fgetss() intenta ||| resource $handle	count=1
function_name	el último error ||| last	count=1
function_name	transparencia ||| matte floodfill image	count=2
arg_pair	parecida a sybase_connect() ||| string $password	count=1
arg_pair	la función va aquí ||| cairomatrix $matrix float $radians	count=1
arg_pair	de la conexión de ||| mysqlnd_connection $connection	count=1
function_name	número ||| set start	count=2
function_name	unix ||| crypt	count=1
function	el ancho [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	este método [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=4
namespace	por name ||| function	count=1
function_name	los datos del apuntador ||| all	count=1
function_name	cada archivo codificado ||| mailparse uudecode	count=1
function_name	última sentencia ||| last	count=1
function_name	rango de [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	espera de consulta de ||| query timeout	count=1
function_name	obtiene una ||| get	count=2
arg_pair	está conectada completamente ||| int $num_neurons1 int $num_neurons2	count=1
function_name	large object ||| pg lo	count=2
arg_pair	el calendario calendar especificado ||| int $month	count=1
namespace	llamada a ||| function	count=2
function_name	de tidy a sus ||| tidy reset	count=1
arg_pair	provee ||| bool $is_prefix	count=1
function_name	el máximo ||| max cand	count=1
function_name	patrones ||| length	count=1
return	la clase domnodelist con ||| domnodelist	count=1
return	como el número de ||| int	count=1
function_name	devuelve el ||| introspection get state	count=1
return	diccionario indicado mediante ||| bool	count=1
return	un ||| void	count=7
namespace	índice ||| splfixedarray	count=1
function_name	las conexiones de ||| fann get cascade	count=1
function_name	descripción de ||| surface create	count=1
arg_pair	el método gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
arg_pair	información dad ||| array $record	count=1
function_name	la que ||| mlt min	count=1
namespace	hash de un string ||| function	count=1
function_name	del manejador de declaración ||| handler	count=1
function_name	de socket ||| stream socket	count=1
function_name	error una excepción de ||| using exceptions	count=1
arg_pair	rgb especificado ||| int $red	count=1
arg_pair	devuelve un ||| resource $connection string $qualifier	count=3
arg_pair	cuenta el ||| int $index_start int $index_end	count=1
return	es un alias de ||| bool	count=1
function_name	registrados disponibles ||| wrappers	count=1
function_name	la que ||| mlt	count=1
return	en la ||| bool	count=44
namespace	barras invertidas antes ||| function	count=1
function_name	buferizado event ||| buffer set callback	count=1
function_name	llamarla ||| odbc data	count=1
arg_pair	señal ||| int $signal	count=1
function_name	para [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	sea truncado ||| eio ftruncate	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] [function_name_2]	count=63
arg_pair	un mensaje log ||| int $priority string $message	count=1
function_name	descripción ||| cairo scaled font get	count=4
function_name	el seno para cada ||| asin	count=1
function	[function_name_1] una imagen ||| [function_name_1] ccitt [arg_pair_2]	count=1
namespace	este ||| solrdocument	count=1
namespace	que existan en la ||| function	count=1
function_name	formato utf-32 ||| utf32	count=1
return	usadas por el ||| void	count=1
namespace	nuevo filteriterator ||| filteriterator	count=1
arg_pair	indicando que ocurrió ||| string $actor	count=1
return	servidores ||| bool	count=1
function_name	la lista de ||| open memory image	count=1
function_name	relleno ||| get gray fill	count=1
function_name	intersección de ||| uintersect assoc	count=1
function_name	datos ||| mailparse	count=1
function_name	defina sobre ||| construct	count=1
function_name	barras invertidas antes ||| addcslashes	count=1
arg_pair	datos del parámetro data ||| string $data int $length	count=1
function_name	como cursores ||| tailable	count=1
function_name	posiciona el cursor en ||| move to	count=2
function_name	la función usa la ||| prob prime	count=1
function_name	función cubrid_col_get() ||| col	count=1
function_name	analiza ||| parse url	count=2
function_name	esquema ||| add types	count=2
function_name	marca el registro ||| delete record	count=1
function_name	la descripción de ||| cairo scaled font	count=5
function_name	extrae cada ||| mailparse	count=1
function_name	función [function_name] ||| [function_name]	count=7
function_name	de paso máximo ||| rprop delta max	count=1
function_name	especifica el número máximo ||| highlight max	count=1
function_name	tarea de alta prioridad ||| high	count=2
namespace	para archivos tar ||| phardata	count=1
namespace	de ficheros que están ||| function	count=1
function_name	oauth ||| add required parameter	count=2
arg_pair	una y devuelve el ||| string $new_data2	count=1
function_name	escala el ||| pdf scale	count=1
function_name	rrdgraph::__construct() y ||| verbose	count=1
function_name	búsqueda ||| yaz search	count=1
function_name	inicializar el phar ||| phar	count=1
arg_pair	criterio y ||| int $sortorderby int $sortdirection	count=2
function_name	[function_name_1] el color ||| [function_name_1] image background [function_name_2]	count=1
function_name	nombres especificado ||| default	count=1
function_name	un estilo de entrecomillado ||| quote	count=1
function_name	lo encripta ||| encrypt	count=1
return	blob en todas las ||| bool	count=1
arg_pair	contiene una ||| int $dictionary_link	count=1
function_name	los elementos descendientes con ||| ns	count=1
function_name	esta función ||| cubrid	count=1
function_name	definida por ||| uasort	count=1
arg_pair	datos vea mongodbref ||| mixed $document_or_id	count=1
function_name	[function_name] animada ||| [function_name] ticks per	count=2
function_name	registro están habilitados actualmente ||| get level	count=1
function_name	nombre corto ||| id3 get frame short name	count=1
function_name	de columna actual para ||| current column	count=1
function_name	es el ||| default	count=1
return	cuenta ||| int	count=1
arg_pair	clase especificada ||| mixed $class	count=1
arg_pair	value ||| mixed $value	count=1
function_name	una nueva csr ||| openssl csr new	count=2
namespace	[namespace] no hay ||| [namespace]	count=1
arg_pair	criterio y la ||| int $sortorderby	count=2
return	el número de segundos ||| int	count=1
return	texto que lee ||| string	count=1
arg_pair	una transacción ||| string $table	count=1
function_name	que puede leer loadfromstring() ||| save	count=2
function_name	devuelve el siguiente ||| next	count=1
function_name	actual ||| autocommit	count=1
function_name	este ||| await	count=1
function_name	mediante el ||| proc get status	count=1
function_name	lista de ||| ps	count=1
function_name	devuelve las cabeceras de ||| headers	count=3
function_name	[function_name_1] de ||| [function_name_2] image [function_name_1]	count=6
function_name	una salida ||| sandbox output	count=1
function_name	lee los datos ||| mailparse uudecode	count=1
function_name	de la operación ||| errno	count=1
function_name	el límite ||| limit	count=3
function_name	utilizar para que la ||| get multi by	count=1
function_name	en la solicitud ||| nsapi	count=1
arg_pair	de un assoc_array en ||| array $assoc_array	count=1
function_name	glob() ||| glob	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() durante el entrenamiento ||| int $neurons_between_reports	count=1
function_name	de los parámetros ||| params	count=1
function_name	que realice una salida ||| sandbox output	count=1
arg_pair	string str a ||| string $str	count=1
function_name	las cabeceras de ||| request headers	count=1
return	este para ||| void	count=1
arg_pair	siguientes transformaciones con xsltprocessor ||| string $namespace	count=1
function_name	el número de campos ||| fbsql num fields	count=1
namespace	el último error que ||| function	count=1
function_name	y ||| data source	count=1
function_name	proceso abierto mediante ||| get	count=1
function_name	la ||| interlace scheme	count=2
function_name	devuelve las ||| get preg	count=1
function_name	en un ||| types	count=1
function_name	por lo ||| mlt min doc	count=1
function_name	descripción de la función ||| cairo font face get	count=1
function_name	[function_name_1] ejecutable ||| [function_name_2] [function_name_1]	count=1
function_name	configuración interna especificada ||| iconv set	count=1
arg_pair	a una página ||| int $page string $dest	count=1
function_name	cuando se llega recursivamente ||| end children	count=1
arg_pair	contiene una ||| int $dictionary_link string $file	count=1
function_name	xml que ya ||| add	count=1
function_name	error cuando la ||| set	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] get [function_name_2]	count=9
function	[function_name_1] a ||| [function_name_1] [arg_pair_2]	count=1
function_name	la instanciación del objeto ||| on create	count=1
function_name	servidores de ||| servers	count=1
function_name	devuelve las fuentes configuradas ||| query fonts	count=1
function_name	la que ||| set	count=1
namespace	medido ||| function	count=1
function_name	en oposición ||| internal	count=1
function_name	nombre de clase ||| class	count=2
function_name	el elemento [function_name] como ||| [function_name]	count=1
arg_pair	si solrquery::sethighlightalternatefield() se le ||| string $field_override	count=1
function_name	crea un objeto documento ||| create document	count=1
function_name	definición de color dada ||| ncurses color	count=1
function_name	[function_name_1] por ||| [function_name_2] [function_name_1] is null	count=2
function_name	tasa de baudios del ||| dio tcsetattr	count=1
arg_pair	[arg_pair_1] y bcc ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	buscarán los ||| dbplus chdir	count=1
function_name	obtiene la función de ||| get	count=1
function_name	en la última respuesta ||| last response	count=1
return	devuelve el momento ||| int	count=1
function_name	transacción sin cerrarla ||| ibase commit ret	count=2
function_name	un ||| all	count=1
arg_pair	des de unix ||| string $str	count=1
arg_pair	stream dado ||| resource $stream	count=1
function_name	un blob en ||| blob echo	count=1
function_name	es ||| is default	count=1
return	ha sido creado ||| void	count=1
arg_pair	almacenada de una ||| string $filename array $tag	count=1
function_name	se van a ||| start	count=1
arg_pair	día especificado como timestamp ||| int $timestamp	count=2
function_name	zona horaria ||| geoip time zone	count=1
function_name	unicode ||| unicode	count=1
function_name	número máximo ||| highlight max	count=2
function_name	comentario de una ||| comment	count=1
arg_pair	convierte un string ||| string $string int $split_length	count=1
function_name	descripción de la ||| cairo pattern get rgba	count=1
function_name	de control de la ||| gupnp control point callback	count=1
function_name	reescritura establecidas previamente por ||| rewrite vars	count=1
function_name	entonces ||| set using exceptions	count=2
function_name	true entonces en ||| set	count=1
function_name	encripta la ||| openssl encrypt	count=1
function_name	devuelve el uid del ||| uid	count=1
arg_pair	la última transferencia ||| int $opt	count=1
namespace	resultados como ||| function	count=1
function_name	de la última fila ||| last	count=1
return	función fscanf() [return] similar a ||| [return]	count=1
function_name	representa una notificación ||| notify	count=1
arg_pair	su ||| string $name int $flags	count=1
namespace	por ||| solrquery	count=1
function_name	documentos como este serán ||| mlt min	count=1
function_name	genera una nueva csr ||| csr new	count=1
arg_pair	con una ||| string $height	count=1
arg_pair	por número del indentificador ||| resource $result_id	count=1
function_name	de la caché ||| cache	count=1
function_name	de palabra [function_name_2] ||| [function_name_2] [function_name_1]	count=8
namespace	lista de dsn ||| function	count=1
function_name	usado para incrementar o ||| set session	count=1
function_name	[function_name_1] una representación ||| [function_name_2] [function_name_1]	count=1
arg_pair	un fichero de un ||| float $ury string $filename	count=1
function_name	alta prioridad para ser ||| task high	count=1
function_name	el logo ||| php logo	count=1
function_name	cadena asociada a un ||| string	count=1
namespace	por las ||| function	count=1
function_name	cambio de candidatas ||| candidate	count=1
namespace	unrar encuentre un error ||| rarexception	count=1
function_name	descripción ||| cairo font options get hint	count=2
function_name	nombre del ||| name	count=3
function_name	o zip desde un ||| build from	count=1
return	el hash de un ||| string	count=1
return	los servidores de trabajo ||| bool	count=1
function_name	[function_name_1] documento mínima ||| [function_name_1] [function_name_2]	count=1
function_name	imagen para crear un ||| shade image	count=1
function_name	elemento con el id ||| get element by id	count=1
function_name	proceso abierto mediante ||| proc get status	count=1
function_name	conexión de flujo o ||| stream socket client	count=1
function_name	el carp::croak ||| croak	count=1
function_name	[function_name_1] blob de ||| [function_name_1] [function_name_2]	count=1
function_name	la descripción de ||| cairo pattern	count=6
arg_pair	de ||| string $str	count=4
function_name	un blob que se ||| blob	count=1
function_name	aborta inmediatamente el ||| base loopbreak	count=1
arg_pair	de arrays compara ||| array $array1 array $array2	count=1
function_name	en negro del tamaño ||| imagecreatetruecolor	count=1
namespace	si ||| gearmanclient	count=1
namespace	de ssl para las ||| oauth	count=1
function_name	[function_name_1] id3v1 ||| [function_name_2] [function_name_1]	count=8
arg_pair	de archivo a un ||| resource $handle int $mode	count=1
arg_pair	un ||| resource $p float $g	count=1
namespace	línea por ||| function	count=1
function_name	[function_name_1] tipo ||| [function_name_2] [function_name_1]	count=5
function_name	el objeto ||| active object	count=1
arg_pair	el servidor ftp ||| resource $ftp_stream	count=2
function_name	apache especificado ||| apache	count=1
arg_pair	para un nombre de ||| string $name	count=1
arg_pair	una definición de ||| string $contents	count=1
function_name	este método ||| await data	count=1
arg_pair	un archivo ||| string $file int $mode	count=1
function_name	libera todos los recursos ||| event base free	count=1
namespace	que contiene la versión ||| function	count=1
arg_pair	[arg_pair] formulario ||| [arg_pair]	count=1
arg_pair	es una ||| string $name mixed $value	count=1
namespace	similar a popen() ||| function	count=1
namespace	de sentencias que ||| function	count=1
function_name	devuelve ||| offset get	count=2
function_name	otro ||| add	count=1
return	sets tie breaker parameter ||| solrdismaxquery	count=1
function_name	construye el objeto ||| construct	count=1
function_name	[function_name_1] sujeto ||| [function_name_1] [function_name_2]	count=1
function_name	propiedad enumerada o ||| property value	count=1
function_name	copia ||| lob copy	count=1
arg_pair	archivo de base ||| string $filename array $options	count=1
function_name	obtiene ||| gupnp context get	count=2
arg_pair	el búfer de lectura ||| resource $stream int $buffer	count=1
function_name	nuevo archivo pdf usando ||| pdf open	count=1
arg_pair	a service para ||| string $service	count=1
arg_pair	nombre de espacio ||| string $namespaceuri	count=1
function_name	el ||| default	count=1
return	entero ||| int	count=1
return	una cadena ||| string	count=21
function_name	obtener el número total ||| fann get total	count=1
function_name	función del manejador ||| decl handler	count=1
function_name	desde el repositorio ||| svn	count=1
function_name	breaker parameter ||| tie breaker	count=1
arg_pair	respuesta del proveedor ||| string $callback_url	count=1
function_name	vincular el ||| bind	count=1
function_name	longitud máxima de línea ||| line	count=1
function_name	de una imagen ||| set image	count=2
return	de forma ||| resource	count=1
function_name	la descripción de ||| cairo surface create similar	count=1
arg_pair	carácter c verticalmente en ||| int $color	count=1
function_name	[function_name_1] condición para ||| [function_name_2] [function_name_1]	count=1
arg_pair	local ||| int $mode	count=2
function_name	[function_name_1] etiqueta dado ||| [function_name_2] [function_name_1]	count=1
namespace	[namespace] la fecha ||| [namespace]	count=3
namespace	una matriz ||| gmagick	count=1
namespace	parámetro ||| function	count=1
namespace	regla del ||| harupage	count=1
function_name	blob en modo ||| ibase blob	count=1
arg_pair	y su ||| resource $id	count=1
function_name	un blob en modo ||| ibase blob	count=1
function_name	devuelve una ||| get field	count=1
function_name	corto para un ||| id3 get frame short	count=1
function_name	cierra el gestor ||| close	count=1
namespace	como por ejemplo ||| function	count=1
return	serán ignoradas ||| solrquery	count=1
function_name	la escala de la ||| db2 field scale	count=1
namespace	nombre dado que ejecuta ||| function	count=1
function_name	devuelve una representación de ||| to date	count=1
function_name	información de la ||| info	count=1
function_name	ítem por el ||| increment	count=1
function	autocommit del [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=1
function_name	un campo ||| field	count=3
arg_pair	reglas en bbcode_container ||| resource $bbcode_container	count=1
arg_pair	el valor de un ||| int $flags	count=1
function_name	último mensaje reportado ||| last message	count=1
function_name	de datos rrd ||| rrd	count=4
arg_pair	ser enviada junto ||| bool $httponly	count=1
function_name	en lugar ||| using exceptions	count=1
arg_pair	guarda x509 ||| mixed $x509	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=304
function_name	[function_name_1] actual ||| [function_name_2] [function_name_1]	count=20
function_name	establece ||| set script path	count=2
function_name	las palabras que ||| set mlt min doc frequency	count=1
namespace	por funciones como ||| function	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] [function_name_2] quantum	count=1
function	control [arg_pair_2] ||| [function_name_1] set [arg_pair_2]	count=1
function_name	del ||| uudecode	count=1
namespace	se ||| mongocursor	count=3
arg_pair	de ||| resource $psdoc	count=1
function_name	[function_name_1] máximo ||| [function_name_2] [function_name_1]	count=7
function	ps_stringwidth() excepto [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	añade ||| add facet	count=1
function_name	la fragmentación ||| set highlight regex pattern	count=1
arg_pair	un tipo específico ||| resource $imap_stream	count=1
arg_pair	result set ||| int $index	count=1
arg_pair	puerto nombre de la ||| string $host int $port	count=1
namespace	el ||| directory	count=1
function_name	establece [function_name_2] ||| [function_name_1] cache [function_name_2]	count=2
arg_pair	por relation bajo un ||| string $name resource $relation	count=1
function	[function_name_1] un archivo ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	result_id en una ||| resource $result_id	count=1
function_name	definidos ||| remap	count=1
function_name	las banderas [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	un nuevo par ||| mixed $value	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] namespace [function_name_2]	count=2
function_name	un valor especial indicando ||| set using	count=1
arg_pair	posterior uso con ifx_do() ||| int $cursor_def mixed $blobidarray	count=1
function_name	información ||| get status	count=2
function_name	si el ||| set using exceptions	count=1
function_name	obtiene el color ||| get	count=2
function_name	devuelve el tamaño ||| zip entry	count=1
function_name	abre un blob ||| blob echo	count=1
function_name	y establece ||| set	count=1
arg_pair	defina ||| zmqsocket $backend	count=1
function_name	de umbral [function_name_2] ||| [function_name_2] [function_name_1]	count=22
function_name	el número [function_name_2] ||| [function_name_1] [function_name_2]	count=19
function_name	primer índice ||| first	count=2
function_name	error de socket ||| socket	count=1
function_name	la descripción de ||| cairo matrix multiply	count=1
namespace	instancia de ||| function	count=1
arg_pair	un ||| resource $link_identifier	count=1
function_name	gestor de excepciones anterior ||| exception handler	count=1
function_name	color ||| color	count=10
function_name	devolverá la lista de ||| data source	count=1
arg_pair	imagen png ||| int $filters	count=1
function_name	información de sesión ||| session	count=2
function_name	árbol de casillas de ||| newt checkbox tree find item	count=1
namespace	en un archivo ||| function	count=1
namespace	objetos quickhashintset ||| quickhashintset	count=1
function_name	la tangente ||| tan	count=1
function_name	el número de línea ||| line number	count=1
function_name	dsn disponibles después ||| source	count=1
namespace	mongo posee ||| mongocursor	count=1
function_name	devuelve la información ||| get data	count=1
function_name	la relevancia del término ||| set mlt boost	count=1
function_name	de filas extraidas por ||| ifx num rows	count=1
function_name	datos postgresql ||| pg	count=2
function_name	dispositivo ||| gupnp device info	count=1
namespace	efecto de botón ||| gmagick	count=1
function_name	nombre ||| filepro fieldname	count=1
function_name	cambia parámetros del servidor ||| set server params	count=1
function_name	vueltas diferentes a cero ||| fill	count=1
function_name	de la línea de ||| get	count=1
function_name	columnas que identifican ||| odbc specialcolumns	count=1
return	no se le ||| int	count=1
namespace	devolverá la lista ||| function	count=1
function_name	de mensaje para ||| imap	count=1
arg_pair	de ingres_fetch_row() ||| int $result_type	count=1
function_name	y de región ||| region	count=1
function_name	correo correctamente formateada como ||| imap rfc822 write address	count=1
function	devuelve [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	devuelve el logaritmo natural ||| log	count=1
namespace	actual ||| solrdocument	count=1
function_name	por lo ||| mlt	count=1
return	objeto ||| string	count=1
function_name	el directorio personalizado de ||| setup custom directory	count=1
function_name	dominio ||| domain	count=1
function_name	palabras que ||| doc	count=1
function_name	aplicar ||| bdiff	count=1
arg_pair	un directorio y ||| resource $fam	count=1
namespace	resultados hará que ||| function	count=1
function_name	de texto ||| strerror	count=1
function	[function_name_1] original_name como ||| [function_name_1] [arg_pair_2]	count=1
function_name	de datos lob ||| lob	count=1
arg_pair	usar mapreduce ||| array $options	count=1
namespace	a nivel ||| function	count=5
arg_pair	bytes str de acuerdo ||| string $charset	count=1
function_name	serán ignoradas ||| set mlt min doc	count=1
function_name	permite null ||| allows null	count=2
function_name	el ||| bzerrstr	count=1
function_name	de términos ||| terms	count=1
function_name	estado del servidor gearman ||| status	count=1
function_name	la función geoip_domain_by_name() devolverá ||| domain	count=1
function_name	invocada durante el procesamiento ||| progress monitor	count=1
function_name	eliminar cualesquiera ||| fgetss	count=1
function_name	el argumento es true ||| set using exceptions	count=1
return	encontrados en ||| bool	count=1
function_name	hilo ||| mysqli thread	count=1
arg_pair	la tabla de una ||| resource $pxdoc	count=1
namespace	documento ||| solrdocument	count=6
namespace	bordes de ||| gmagick	count=2
return	instancia de ||| yaf_application	count=1
function_name	remueve uno ||| ldap mod del	count=2
function_name	opendir readdir y closedir ||| eio readdir	count=1
function_name	discontinuidad actual a unidades ||| pdf setdash	count=1
return	usado en ||| bool	count=1
function_name	del ||| lookup	count=1
function_name	instrucciones de ||| set processing instruction	count=1
function_name	tantos documentos ||| min doc frequency	count=1
function_name	datos del ||| uudecode	count=1
namespace	a que ||| function	count=2
function_name	el ||| default namespace	count=2
function_name	importa la ||| import	count=1
function_name	de severidad [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	apuntador de archivo ||| mailparse	count=1
function_name	particular de ||| filename	count=1
function_name	verde de la cromaticidad ||| image green	count=1
namespace	tar/zip no ||| phardata	count=1
namespace	nueva instancia rrdupdater ||| rrdupdater	count=1
function_name	para strings multibyte ||| mb ereg	count=1
function_name	es true entonces en ||| set using exceptions	count=1
function_name	base de datos rrd ||| rrd	count=4
function_name	la clase del ||| cubrid get class	count=2
return	intenta eliminar cualesquiera bytes ||| string	count=1
function_name	selecciona la ||| mssql select db	count=1
function_name	libera ||| free descriptor	count=2
return	registrar los ||| void	count=1
function_name	servicios colas o cualquier ||| construct	count=1
function	[function_name_1] un documento ||| [function_name_1] [arg_pair_2]	count=1
function_name	imagen a las ||| image	count=1
function_name	la descripción ||| pattern add color stop rgb	count=1
function_name	de transparencia ||| matte floodfill	count=1
function_name	los archivos ||| dbplus chdir	count=1
namespace	valor ||| directory	count=1
arg_pair	y un ||| resource $ann	count=1
function_name	restaura la configuración ||| reset config	count=1
arg_pair	por key ||| string $key	count=1
function_name	sobre el último error ||| last	count=1
namespace	espacio de ||| domnode	count=1
function_name	sin tratar [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	el control de paginación ||| control paged result	count=1
arg_pair	es decir el valor ||| int $face string $filename	count=1
function_name	acl para un buzón ||| getacl	count=1
function_name	[function_name_1] xa ||| [function_name_2] [function_name_1]	count=1
namespace	string con barras ||| function	count=1
function_name	establece la posición ||| set	count=2
namespace	de ||| tidynode	count=1
namespace	indicando ||| rarexception	count=1
function_name	corresponde con la fila ||| fetch	count=1
arg_pair	los radios ||| float $rx float $ry	count=1
arg_pair	de memcached::getmulti() con la ||| string $cas_tokens	count=1
arg_pair	y negro especificados al ||| float $blackpoint	count=1
function_name	de grafema de la ||| grapheme strripos	count=1
function_name	importa [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	path ||| int $flags	count=1
return	basada en un identificador ||| bool	count=1
arg_pair	copia de str ||| string $str	count=1
function_name	clase glo ||| glo	count=1
function_name	dos o ||| number	count=1
function_name	la frecuencia ||| mlt min doc frequency	count=1
function_name	extrae ||| mailparse	count=1
function_name	equivalencia ||| eqv	count=1
return	y las estadísticas ||| array	count=1
function_name	las palabras ||| min doc frequency	count=1
namespace	de trabajo para ver ||| gearmanclient	count=1
return	especifica el ||| solrquery	count=1
arg_pair	un algoritmo de ||| float $beta int $channel	count=1
function_name	de épocas de estancamiento ||| stagnation	count=1
function_name	extrae una región ||| region	count=1
arg_pair	objeto samconnection conecta ||| string $protocol array $properties	count=1
function_name	máximo [function_name_2] ||| [function_name_1] alternate [function_name_2]	count=2
function_name	interletraje («kerning») del texto ||| text kerning	count=1
namespace	con la diferencia que ||| function	count=1
function_name	el usuario ||| uasort	count=1
namespace	el ||| splfixedarray	count=1
function_name	copyright de la api ||| copyright	count=1
function_name	cabecera de ||| header	count=1
function_name	que ambos ||| kernel	count=1
return	lugar de emitir ||| void	count=1
function_name	el prototipo del ||| prototype	count=1
function_name	si el ||| is	count=8
arg_pair	un resultado con ||| resource $connection	count=2
function_name	array e indexa numéricamente ||| array values	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] sarprop step [function_name_2]	count=16
function_name	de prioridad de los ||| base priority init	count=1
function	[function_name_1] asocia ||| imagick bool [function_name_1] [arg_pair_2]	count=1
return	formulario en ||| bool	count=1
function_name	del archivo pdf actual ||| pdf	count=1
arg_pair	usando un método de ||| int $width	count=1
return	la imagen ||| gmagick	count=2
arg_pair	le asocia con ||| bool $deep	count=1
function_name	coloca el indicador ||| gzrewind	count=1
function_name	número de registros filas ||| dbase numrecords	count=1
function_name	devuelve ||| enchant dict get	count=1
function_name	devuelve el código de ||| win32 get	count=1
function_name	extrae ||| uudecode all	count=2
arg_pair	valor de un ||| int $flags	count=1
function_name	fondo de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de filas afectadas por ||| stmt affected rows	count=1
arg_pair	prueba ||| gmp $a	count=1
return	número de secuencia ||| int	count=1
return	número del ||| int	count=1
function_name	namespace es declarado ||| set start namespace decl	count=1
arg_pair	actual indicando que ocurrió ||| string $details	count=1
namespace	breaker parameter ||| solrdismaxquery	count=1
function_name	un mensaje ||| curl	count=1
return	array ||| array	count=18
namespace	un campo del documento ||| solrdocument	count=1
function_name	de datos [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	el nombre de relation ||| resource $relation	count=1
function_name	conexión empleado al crear ||| get connection rate	count=1
function_name	la descripción ||| cairo matrix transform distance	count=1
function_name	las letras en minúsculas ||| xheight	count=1
function_name	reemplaza el [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	de alta prioridad ||| high	count=2
namespace	servidor de memcached ||| memcached	count=1
arg_pair	de fabricación cres ||| int $size	count=1
function_name	borrar un ||| win32 delete service	count=1
function_name	de mensajes según ||| imap	count=1
function_name	pdf actual ||| pdf	count=1
return	haya algún ||| int	count=1
arg_pair	usar los efectos ||| int $effect	count=1
return	escribe en el ||| bool	count=1
function_name	de consulta de ||| get query	count=1
function_name	llamarla ||| data	count=1
arg_pair	[arg_pair] en el ||| [arg_pair]	count=2
return	de imagen ||| int	count=1
arg_pair	que coincida ||| mixed $fill float $fuzz	count=1
function_name	la potencia ||| variant pow	count=1
function_name	la propiedad gravedad global ||| gravity	count=1
arg_pair	el identificador de ||| resource $link_identifier resource $result_identifier	count=1
function_name	devuelve el estado de ||| get state variable	count=1
function_name	[function_name_1] devuelve ||| [function_name_2] [function_name_1]	count=27
function_name	último error encontrado ||| error	count=1
function_name	[function_name_1] entradas ||| [function_name_2] [function_name_1]	count=3
namespace	entrada de ||| function	count=1
function_name	campo ||| field seek	count=3
namespace	apuntador de archivo ||| function	count=1
namespace	excepción de ||| rarexception	count=1
arg_pair	un array de ||| resource $imap_stream	count=1
function_name	función crea una nueva ||| create entity	count=1
function_name	el conjunto de ||| charset	count=1
arg_pair	una y devuelve el ||| string $error	count=1
function_name	funciones de sisitema de ||| stream wrapper register	count=1
function_name	último error ||| last error	count=1
function_name	descriptor ||| eio	count=1
function_name	error cuando ||| set	count=1
return	devuelve [return] lista separada ||| [return]	count=1
arg_pair	de respuesta del proveedor ||| string $callback_url	count=1
arg_pair	la imagen ||| int $x int $y	count=1
function_name	devuelve la longitud ||| strlen	count=1
function_name	comporta como el carp::croak ||| apd croak	count=1
return	virtualmente en ||| bool	count=1
function_name	[function_name_1] mínima ||| [function_name_2] [function_name_1]	count=13
arg_pair	recurso de conexión ||| bool $value	count=1
namespace	(«kernel») a este ||| imagickkernel	count=1
function_name	lee datos ||| read	count=1
function_name	ser codificados por utf-8 ||| utf8	count=1
function_name	[function_name_1] conexión necesario ||| [function_name_1] [function_name_2]	count=1
return	en por lo ||| solrquery	count=1
function_name	[function_name_1] de decadencia ||| [function_name_1] quickprop [function_name_2]	count=1
arg_pair	estructura de datos ||| int $num_data	count=1
function_name	se encuentra disponible ||| ps	count=1
arg_pair	punto medio enx ||| float $beta	count=2
function_name	la descripción ||| surface	count=5
return	un objeto ||| int	count=1
function_name	[function_name_1] campos ||| [function_name_1] mlt [function_name_2]	count=1
function_name	ldap enviando [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	base de ||| drop db	count=1
arg_pair	nombre variable_name ||| string $variable_name	count=1
arg_pair	los dispositivos de ||| zmqsocket $frontend	count=1
function	escribir operaciones [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	clase glo ||| new glo	count=1
function	[function_name_1] un ||| [function_name_1] textflow [arg_pair_2]	count=1
function_name	usuario presiona la tecla ||| suspend	count=1
namespace	transacción iniciada por ||| function	count=1
function	proxy [arg_pair_2] ||| [function_name_1] mysqlnduhconnection $connection_proxy [arg_pair_2]	count=1
function	gamma [arg_pair_2] ||| gen [function_name_1] [arg_pair_2]	count=2
arg_pair	los radios de ||| float $ry	count=1
namespace	testigo ||| evsignal	count=1
function_name	establece [function_name_2] ||| fann [function_name_1] cascade candidate [function_name_2]	count=1
function_name	datos del apuntador de ||| uudecode all	count=1
function_name	entidades externas ||| set external entity	count=1
arg_pair	y ||| resource $id	count=1
function_name	cambia el propietario ||| eio fchown	count=1
function_name	información [function_name_2] ||| [function_name_1] get [function_name_2]	count=2
arg_pair	[arg_pair_1] para ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	devuelve ||| dict get	count=1
arg_pair	de una función o ||| string $filename	count=1
function_name	geoip_country_code_by_name() ||| country code by	count=1
function_name	archivo ||| all	count=3
function_name	representación ||| to string	count=2
namespace	filteriterator ||| filteriterator	count=1
function_name	más imágenes en una ||| images	count=1
function_name	la lista de ||| cubrid list	count=1
arg_pair	nueva entrada a un ||| int $value	count=1
function_name	regulares para strings multibyte ||| mb ereg	count=1
function_name	frase desde ||| phrase	count=1
function_name	sets tie breaker parameter ||| breaker	count=1
function_name	proceso abierto mediante ||| status	count=1
namespace	a fgets() ||| function	count=1
function_name	mensaje y socket. -- ||| construct	count=1
function_name	establece donde ||| set auth	count=1
function_name	abre el archivo ||| open	count=2
function_name	que no ||| min doc	count=1
function	concatena [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	cálculos ||| compat	count=1
function_name	épocas ||| epochs	count=9
function_name	y extrae cada archivo ||| mailparse	count=1
function_name	generada del propio procesado ||| profiling	count=1
return	distancia de la línea ||| int	count=1
return	basado en des ||| string	count=1
function_name	la conexión especificada ||| db2	count=1
arg_pair	image ||| int $cx	count=1
function_name	repositorio con el mensaje ||| svn	count=1
arg_pair	devuelve una ||| gmagickdraw $draw string $text	count=1
arg_pair	las propiedades correspondientes a ||| int $row	count=1
function_name	el ancho [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	actual donde se buscarán ||| chdir	count=1
function_name	la medianoche de pascua ||| easter date	count=1
return	un fichero en ||| resource	count=2
function_name	consulta ||| get query	count=1
function_name	para cada elemento ||| apply	count=1
function_name	advertencias y devolver un ||| using exceptions	count=1
arg_pair	añade ||| float $x	count=1
function_name	fondo de ||| background	count=1
function_name	recupera información ||| get status	count=1
function_name	el proveedor ||| add required	count=1
function_name	línea de ||| line	count=2
arg_pair	fichero de ||| float $ury string $filename	count=1
function_name	obtener el tamaño ||| lob2 size	count=1
function_name	disponible la lista de ||| ps open memory	count=1
return	de la ||| string	count=3
arg_pair	entre old_file y ||| string $old_file	count=1
function_name	la clave para ||| key	count=1
namespace	[namespace] emplea ||| [namespace]	count=3
return	temporal ||| array	count=1
namespace	el tipo de la ||| function	count=1
return	valor predeterminado de ||| void	count=1
function_name	un segundo o ||| types	count=1
function_name	recupera información ||| get	count=1
arg_pair	establece el uri que ||| string $uri string $encoding	count=1
function_name	datos de ingres dada ||| ingres	count=1
function_name	[function_name_1] iterador que ||| [function_name_2] [function_name_1]	count=8
arg_pair	xml desde la representación ||| string $filename int $options	count=1
function	[function_name_1] un fichero ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	string dado ||| string $key	count=1
function_name	de control de la ||| control point callback	count=1
arg_pair	un servicio proxy ||| resource $proxy string $action	count=1
arg_pair	con la fuente y ||| resource $pdfdoc	count=1
namespace	oauth basada en ||| oauth	count=1
function_name	es primo ||| gmp prob prime	count=1
namespace	devolver ||| rarexception	count=1
function_name	sistema ||| pdf	count=1
function_name	el buzón actual ||| imap check	count=1
arg_pair	llamada [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	un caracter de salto ||| bool $cut	count=1
arg_pair	de datos disponible ||| int $offset	count=1
arg_pair	nombres ||| string $class_name	count=1
function_name	creado [function_name] ||| [function_name]	count=1
namespace	[namespace] contiene ||| [namespace]	count=1
function_name	conveniente [function_name] ||| magnify [function_name]	count=1
function_name	las palabras que ||| mlt	count=1
function_name	índice anterior ||| prev	count=1
function_name	de entidades no analizadas ||| unparsed entity	count=1
namespace	gmagick ||| gmagick	count=1
namespace	se encuentra el ||| function	count=1
arg_pair	str con todos ||| string $str string $encoding	count=2
function_name	única tarea y ||| do normal	count=2
return	devolverá el ||| string	count=1
function_name	este método se usa ||| resource	count=1
namespace	un proceso ||| function	count=1
arg_pair	domain ||| string $domain string $codeset	count=1
function_name	[function_name_1] sujeta a ||| [function_name_2] [function_name_1]	count=2
namespace	advertencia esta función ||| function	count=1
function_name	últime [function_name] ||| imap last [function_name]	count=3
function_name	recupera la información de ||| info	count=2
function_name	puedan ||| crypt	count=1
return	de dsn disponibles después ||| array	count=1
function_name	establece el valor del ||| offset set	count=1
return	la función ||| void	count=1
function_name	la intersección de ||| uintersect	count=1
arg_pair	forma ||| string $username	count=1
arg_pair	clientes en ||| string $name	count=1
function_name	define los encabezados a ||| set soap headers	count=1
function_name	un ||| filepro fieldwidth	count=1
function_name	archivo dado y ||| mailparse	count=1
function_name	convertir un ||| convert to	count=1
function_name	la descripción de la ||| cairo ps surface get	count=1
return	los colores encontrados en ||| bool	count=1
return	error ||| string	count=3
function_name	analiza datos get/post/cookie ||| mb parse	count=1
arg_pair	que se ||| zmqsocket $backend	count=1
function_name	tamaño actual de ||| zip entry filesize	count=1
return	un fichero regular referenciado ||| resource	count=1
return	acepta uno ||| string	count=1
namespace	fichero directorio o ||| function	count=1
function_name	uri [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	cargar entidades ||| disable entity loader	count=1
function_name	última modificación ||| mdtm	count=1
function_name	la última [function_name_2] ||| [function_name_1] [function_name_2]	count=7
arg_pair	o ||| float $number	count=1
function_name	de línea actual para ||| current line	count=1
function_name	facet.date.end ||| facet date end	count=1
function_name	elimina el buzón ||| imap	count=1
namespace	una tarea ||| gearmanclient	count=3
function_name	espacio de ||| is default namespace	count=1
function_name	false si es ||| mcrypt module is	count=1
function_name	de firma de cabecera ||| get request header	count=1
function_name	de una ||| entry	count=1
function	carga [arg_pair_2] ||| [function_name_1] config [arg_pair_2]	count=2
namespace	la lista de ||| function	count=3
namespace	si el ||| rarexception	count=1
function_name	fila en forma ||| fetch	count=1
function_name	de error de ||| bzerrstr	count=1
return	creado previamente ||| resource	count=1
function_name	definición de plantilla ||| template	count=1
function_name	una intersección de ||| array uintersect	count=1
function_name	para ||| implicit	count=1
function_name	un string utilizando el ||| crypt	count=1
function_name	de disposición ||| dispose	count=2
function_name	imprime el ||| show	count=1
namespace	espera a que ||| gearmanworker	count=1
function_name	obtiene los comentarios ||| get doc comment	count=2
function_name	establece el ||| fann set cascade num	count=1
function_name	oposición ||| internal	count=1
arg_pair	el valor de ||| int $type mixed $value	count=1
function_name	la prueba probabilística ||| gmp	count=1
function_name	definición rra por descripción ||| archive	count=1
function_name	[function_name_1] entrenamiento en ||| [function_name_2] [function_name_1]	count=1
arg_pair	en local_socket ||| int $errno	count=1
function_name	http de ||| get http	count=1
function_name	cada archivo codificado mediante ||| all	count=1
function_name	obtiene si ||| device get	count=1
return	si el ||| void	count=2
function_name	documento html desde la ||| html	count=1
function_name	el valor predeterminado de ||| close	count=1
function_name	establece la zona ||| date default timezone set	count=1
function_name	[function_name_1] desplazamiento del ||| [function_name_1] sarprop step error [function_name_2]	count=2
return	describe el ||| int	count=1
function_name	desde la ||| string	count=1
function_name	la configuración de ||| reset config	count=1
return	existe en el sistema ||| bool	count=1
function_name	[function_name] archivo ||| [function_name]	count=3
arg_pair	define el de ||| float $disp_time	count=1
function_name	excepción no ||| exception handler	count=1
function_name	trozos remarcados ||| highlight	count=2
namespace	por encima del api ||| function	count=1
namespace	string codificado por ||| function	count=1
function_name	borra los ||| pg delete	count=1
return	puedan aplicarse a ||| void	count=1
function_name	descripción de la ||| cairo surface get font options	count=1
function_name	comunicaciones internas con libeio ||| eio get event	count=1
function_name	las extensiones ||| extensions	count=1
function_name	consulta siguiente si ||| cubrid next result	count=1
arg_pair	un índice de ||| int $index	count=1
arg_pair	[arg_pair_1] es decir ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	memcached::touch() con la excepción ||| touch by key	count=1
arg_pair	de los eventos ||| resource $event_base	count=1
arg_pair	la función va aquí ||| cairosurfacepattern $pattern	count=1
function_name	phar cuando sea directamente ||| map phar	count=1
function_name	se usa para convertir ||| convert to data	count=1
function_name	error cuadrático medio ||| mse	count=1
function_name	splobjectstorage ||| get hash	count=1
function_name	borrar un servicio de ||| win32 delete	count=1
arg_pair	sobre ||| zmqsocket $frontend	count=1
function_name	pl/sql dbms_sql.return_result [function_name] ||| [function_name] get implicit	count=1
function_name	sintaxis lint pelusa en ||| lint file	count=1
function_name	qué tipos de parámetros ||| params	count=1
function_name	recupera la información ||| pdf info	count=1
function_name	intenta eliminar drop por ||| fbsql drop	count=1
arg_pair	llamada ||| callable $callback mixed $data	count=1
function_name	de la clave /encoding ||| fdf get encoding	count=1
function_name	[function_name_1] inicial ||| [function_name_2] [function_name_1]	count=4
return	unrar encuentre un ||| void	count=1
function_name	datos paradox ||| px	count=2
function_name	de faceta ||| facet	count=1
arg_pair	archivo remoto desde ||| string $remote_file	count=2
function_name	descripción de ||| cairo font options get hint metrics	count=1
arg_pair	de un resultado ||| resource $result int $index	count=1
arg_pair	que deberían ser incluidos ||| int $mincount	count=1
function	siguiente fila [arg_pair_2] ||| [function_name_1] array [arg_pair_2]	count=1
function_name	para el codificador especificado ||| encoder	count=1
function_name	colores únicos ||| colors	count=1
function_name	forzar a la ||| cast	count=1
function_name	recursos de página ||| page	count=1
function_name	de servidores de ||| servers	count=1
function_name	obtiene ||| get	count=117
arg_pair	final de pajar incluyendo ||| string $haystack string $needle	count=1
function_name	de instrucciones ||| set processing instruction	count=1
arg_pair	ancho del contorno acutales ||| float $ex	count=1
arg_pair	el contenedor en ||| string $frame_name	count=1
arg_pair	rota ||| float $phi	count=1
function_name	disponibles en el ||| crypt	count=1
namespace	usado por ||| function	count=1
function_name	términos de consultas que ||| terms	count=1
return	en la instancia ||| bool	count=1
return	a una única función ||| void	count=1
function_name	lista ||| ps open	count=1
function_name	de petición ||| request	count=1
function_name	uno ||| ldap mod	count=2
function_name	estado del ||| task status	count=1
arg_pair	conexión especificado ||| resource $connection bool $value	count=1
arg_pair	ruta en la copia ||| string $path	count=1
arg_pair	variable_name ||| string $variable_name	count=1
function_name	argumento ||| bindec	count=1
function_name	la fila recuperada ||| mysql fetch	count=1
arg_pair	óptimo de columnas ||| int $scope int $nullable	count=1
function_name	textflow ||| info textflow	count=1
function_name	que las palabras que ||| doc frequency	count=1
namespace	única función ||| imagickkernel	count=1
function_name	cubrid_lob2_new() u ||| lob2	count=1
arg_pair	de un servicio proxy ||| resource $proxy	count=1
return	va aquí ||| cairopattern	count=4
function_name	utilizar para que ||| set by key	count=2
function_name	caracteres del documento fdf ||| fdf	count=1
return	al ||| mongocursor	count=1
arg_pair	el uri que ||| string $uri string $encoding	count=1
function_name	trabajo ||| job	count=2
arg_pair	recurso checkbox ||| resource $checkbox	count=1
function_name	de prioridad baja ||| task low	count=1
function_name	clase propia que ||| class	count=1
function_name	enlace [function_name] tiene habilitada ||| [function_name]	count=1
function_name	intenta borrar un servicio ||| delete	count=1
arg_pair	se ||| string $servername string $username	count=1
function_name	una excepción de ||| set using	count=1
function_name	definido por su nombre ||| name	count=1
function_name	añade un único componente ||| form add component	count=1
arg_pair	la base de eventos ||| resource $event_base int $flags	count=1
function_name	devuelve si un ||| get highlight	count=1
arg_pair	data con la clave ||| string $data	count=1
function_name	dsn disponibles ||| odbc data	count=1
function_name	callback definidos ||| control point browse	count=1
function_name	fuente usada ||| font	count=1
function_name	usada para establecer el ||| set	count=1
function_name	directorio [function_name_2] ||| [function_name_2] [function_name_1]	count=10
return	[return] quantum ||| [return]	count=1
function_name	la ||| set mlt min doc frequency	count=4
function_name	la versión plural ||| ngettext	count=1
function_name	posción actual ||| pdf show	count=1
namespace	a valores de ||| function	count=1
function_name	servicio pausado ||| win32 continue service	count=2
arg_pair	una tabla especificada por ||| resource $connection string $table_name	count=1
function_name	indicando error cuando ||| set using	count=1
namespace	índice presente que es ||| judy	count=1
namespace	el índice del nodo ||| spldoublylinkedlist	count=1
function_name	apuntador ||| uudecode	count=1
function_name	[function_name] más ||| [function_name] fetch	count=3
namespace	solrinputdocument::clear ||| solrinputdocument	count=1
function_name	las operaciones memcached::*bykey() ||| server	count=1
arg_pair	imágenes de color verdadero ||| resource $image bool $blendmode	count=1
function_name	la última tupla de ||| dbplus last	count=1
namespace	un argumento a mongoid::__construct() ||| mongoid	count=1
function_name	dsn disponibles después de ||| source	count=1
function_name	base de datos paradox ||| px	count=2
function_name	sujeta ||| fit	count=1
function_name	o imap_mail_move() ||| imap undelete	count=1
function_name	información sobre ||| info	count=5
function_name	de línea ||| line	count=3
function_name	mensaje de cadena ||| append	count=1
function_name	uuencode ||| uudecode all	count=2
function_name	para que la clave ||| set by key	count=1
function_name	la lista ||| open memory image	count=1
return	como ||| mongocursor	count=1
function_name	negro del tamaño especificado ||| imagecreatetruecolor	count=1
function_name	de la siguiente línea ||| next line	count=1
arg_pair	rellena un archivo ||| string $regex	count=1
function_name	todas las cabeceras http ||| headers	count=1
function_name	tipo ||| using	count=1
return	de bits de un ||| int	count=1
arg_pair	archivo ||| resource $fam string $filename	count=1
function_name	de secuencia ||| imap	count=1
function_name	uso [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	del fichero especificado ||| resource	count=2
function_name	esquema en un das ||| add	count=1
namespace	a un hash y ||| quickhashintstringhash	count=1
function_name	frecuencia de documento mínima ||| terms min	count=1
return	sesión o ||| bool	count=1
function_name	lo menos ||| doc frequency	count=1
namespace	capas de ||| zmqdevice	count=1
function_name	firma de verificación ||| signature	count=1
arg_pair	mensaje del archivo indicado ||| mixed $filename	count=1
function_name	el primer [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	carácter «en ||| intlchar	count=1
function_name	tangente para cada ||| tan	count=1
function_name	difieren más [function_name] límte ||| [function_name] bit	count=1
function_name	función cubrid_error_code() ||| code	count=1
arg_pair	o ambos por defecto ||| int $fetchtype	count=1
return	bordes de la imagen ||| void	count=1
function_name	[function_name_1] una imagen ||| [function_name_2] [function_name_1]	count=6
function_name	de activación [function_name] ||| [function_name] activation	count=2
function_name	obtiene el número de ||| func num	count=1
namespace	el hash de ||| function	count=1
namespace	renderización de la imagen ||| gmagick	count=1
function_name	true entonces en ||| set using exceptions	count=1
function_name	id3 ||| id3	count=1
function_name	la raíz cuadrada de ||| gmp sqrtrem	count=1
function_name	extensiones ||| spl autoload extensions	count=2
function_name	una [function_name] a ||| [function_name]	count=1
function_name	string de ||| generate	count=1
arg_pair	archivo de base ||| string $filename	count=1
function_name	de cargar entidades ||| libxml disable entity loader	count=1
function_name	función devolverá ||| data	count=1
function_name	md5 ||| md5 file	count=1
namespace	de uno o más ||| function	count=1
return	y php ||| string	count=1
namespace	objeto domnamednodemap ||| domnamednodemap	count=1
function_name	uid del número ||| uid	count=1
function_name	de ||| strerror	count=2
return	prueba probabilística ||| int	count=1
function_name	crea un objeto ||| create document type	count=1
function_name	en la que las ||| mlt min doc frequency	count=1
function_name	los datos ||| uudecode all	count=1
function_name	ncurses ||| ncurses	count=1
function_name	recupera la extensión de ||| get extension	count=1
function_name	que aparecen ||| addcslashes	count=1
arg_pair	información dad a la ||| int $dbase_identifier array $record	count=1
function_name	comentario de ||| comment	count=1
namespace	instancia de [namespace] ||| [namespace]	count=4
function_name	transforma el nodo ||| transform to	count=1
arg_pair	busca en subject coincidencias ||| mixed $subject int $limit	count=1
return	estándar basado ||| string	count=1
arg_pair	una declaración para su ||| string $query_string	count=1
return	en búfer después de ||| bool	count=1
function_name	explícitamente la matriz ||| pdf setmatrix	count=1
arg_pair	php ||| int $length	count=1
function_name	callback definidos por el ||| gupnp control point browse	count=2
namespace	o basado en ||| function	count=1
function_name	devuelve un array [function_name_1] [function_name_2] y mueve el puntero ||| function array [function_name_2] [function_name_1]	count=2
return	(«kernel») ||| void	count=1
function_name	reduciendo [function_name] y recortando ||| crop thumbnail [function_name]	count=1
function_name	un repositorio indicado ||| svn	count=1
arg_pair	contenía el fichero dado ||| int $flags	count=1
arg_pair	más imágenes ||| imagick $image int $channeltype	count=1
function_name	mapea a facet.limit ||| set facet limit	count=1
function_name	[function_name_1] el año ||| [function_name_2] [function_name_1]	count=1
function	imagen [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	que está asociado ||| function	count=2
function_name	imagen izquierda ||| image	count=1
function_name	mayúsculas ||| strtoupper	count=1
function_name	db++ ||| dbplus	count=3
return	y [return] todos los ||| [return]	count=1
function_name	todas las colecciones de ||| collection	count=1
function_name	ignoradas ||| doc	count=1
arg_pair	una tarea para ser ||| mixed $context	count=1
namespace	posee una ||| mongocursor	count=1
function_name	http en ||| request	count=1
function_name	a devolver ||| alternate	count=2
function_name	opendir readdir ||| readdir	count=1
function_name	estilo de ||| slide show	count=1
arg_pair	una función de ayuda ||| string $column_key int $flags	count=1
arg_pair	dentro de relation ||| resource $relation	count=1
return	array después de ||| void	count=1
namespace	la ||| function	count=10
function_name	[function_name_1] épocas de ||| [function_name_2] [function_name_1]	count=2
arg_pair	str donde todas ||| string $str	count=1
function_name	reemplaza los valores ||| replace	count=1
function_name	define ||| set flatness	count=2
function	[function_name_1] a una ||| [function_name_1] rename [arg_pair_2]	count=1
arg_pair	de la ||| int $width	count=1
function_name	es ||| default	count=1
function_name	una curva ||| path curve to	count=1
arg_pair	un determinado resultado de ||| int $field_offset	count=1
function_name	candidatas antes de añadir ||| cascade	count=2
return	bordes ||| gmagick	count=1
return	la imagen ||| void	count=1
arg_pair	el dominio ||| string $domain	count=2
function_name	caché ||| apc cache	count=1
function_name	la frase ||| highlight use phrase	count=2
function_name	devuelve [function_name] de persistencia ||| get persistent [function_name]	count=1
function_name	obetiene el retraso ||| getimagedelay	count=1
return	array con los nombres ||| array	count=3
namespace	graphicsmagick ||| gmagick	count=1
return	valores de error o ||| bool	count=1
function_name	si ellas lanzarán excepciones ||| is	count=1
function_name	devuelve el ||| introspection get	count=1
function	[function_name_1] operaciones ||| [arg_pair_2] [function_name_1]	count=3
function_name	datos clob de la ||| clob	count=1
arg_pair	forma ||| string $servername	count=1
function_name	mensaje ||| imap	count=1
function_name	[function_name] universal database ||| [function_name]	count=3
function_name	de errores ||| errors	count=2
function_name	como mssql_connect() ||| mssql	count=1
function_name	importa un flujo que ||| import stream	count=1
return	recibe todas ||| array	count=1
return	devuelve el color de ||| void	count=1
return	documentos como este serán ||| solrquery	count=1
function_name	codificados por utf-8 a ||| utf8	count=1
function_name	ssl ||| sslchecks	count=1
arg_pair	domain por gettext() y ||| string $domain	count=1
function_name	trata de conectarla de ||| pg ping	count=1
function	string [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	signed_text y retorna información ||| resource $identifier string $signed_text	count=1
function_name	cadena ||| append	count=1
function_name	de capas ||| sparse	count=1
namespace	construir un nuevo filteriterator ||| filteriterator	count=1
arg_pair	su uso posterior ||| string $fontname	count=1
function_name	captura una fila ||| ibase fetch object	count=2
function_name	de autenticación donde ||| svn auth get	count=1
function_name	un namespace es declarado ||| xml set start namespace decl	count=1
function_name	la dirección del ||| get	count=1
arg_pair	un array a ||| array $array	count=1
arg_pair	una ||| string $progid	count=1
arg_pair	establece el parámetro flatness ||| float $flatness	count=1
namespace	la función ||| function	count=1
arg_pair	un nuevo archivo de ||| resource $pxdoc	count=1
function_name	el nombre corto para ||| get frame short name	count=1
function_name	forma ||| pconnect	count=1
function_name	descripción ||| cairo ps level to	count=1
function_name	la zona horaria ||| time zone by	count=1
function_name	un segundo o subsiguiente ||| add types	count=1
function_name	[function_name_1] de ||| [function_name_2] [function_name_1]	count=42
function_name	las bases ||| dbs	count=1
arg_pair	sobrescribir el dominio actual ||| string $domain	count=1
namespace	en forma de ||| function	count=1
function_name	[function_name_1] campos en ||| [function_name_1] [function_name_2]	count=2
function_name	de i-nodo ||| inode	count=1
function	analiza [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	épocas ||| cand epochs	count=2
return	en los búferes internos ||| bool	count=1
function_name	activación ||| activation function	count=4
arg_pair	[arg_pair_1] msql_fetch_row() ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	estadísticas de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	[arg_pair] sincronizada y ||| [arg_pair]	count=1
function_name	la frecuencia en la ||| min doc frequency	count=1
function_name	supervisión del servicio ||| start service ctrl dispatcher	count=1
namespace	de ||| oci-lob	count=1
function_name	obtiene información sobre ||| error get	count=1
function_name	parameter ||| alt	count=1
function_name	enlace duro ||| link	count=1
function_name	devolverá la ||| odbc	count=1
function_name	el argumento ||| using exceptions	count=1
arg_pair	una función o clase ||| string $filename	count=1
function_name	pertenecen a esta extensión ||| class names	count=1
function_name	[function_name_1] macenado ||| [function_name_2] [function_name_1]	count=2
namespace	array se ||| function	count=1
function_name	de el crc del ||| crc	count=1
return	de secuencia ||| int	count=1
function_name	la precisión ||| precision	count=2
function_name	nombre corto para ||| short name	count=1
function_name	título ||| title	count=1
return	un archivo ||| array	count=1
function_name	la ||| by	count=1
arg_pair	los caracteres que aparecen ||| string $str	count=1
function_name	especificado en la paleta ||| imagecolorexact	count=1
function_name	interletraje («kerning») del ||| kerning	count=1
function	[function_name_1] ser adquirido ||| [function_name_1] [arg_pair_2]	count=3
function_name	devuelve la cantidad ||| get	count=1
function_name	los ciclos ||| collect cycles	count=1
function_name	cliente ||| client	count=4
return	del lob ||| bool	count=1
function_name	de entradas de ||| input	count=1
function_name	[function_name_1] nombre ||| [function_name_1] [function_name_2]	count=5
function_name	para añadir un ||| offset set	count=1
function_name	cliente usado ||| client	count=1
arg_pair	por el parámetro length ||| bool $crypto_strong	count=1
arg_pair	excepto ||| resource $handle int $length	count=1
function_name	destruye el valor en ||| unset	count=1
return	objeto pdostatement ||| pdostatement	count=1
function_name	servidor ssh2 ya conectado ||| ssh2	count=1
function_name	segmento de memoria compartida ||| shmop write	count=1
namespace	parámetros ||| oauthprovider	count=1
function_name	servicio pausado nominado ||| continue service	count=1
function	el campo [arg_pair_2] ||| [function_name_1] table [arg_pair_2]	count=1
function_name	elemento actual es válido ||| valid	count=1
function_name	la biblioteca unrar encuentre ||| using exceptions	count=1
return	cursores de seguimiento ||| mongocursor	count=1
function_name	el número de pendientes ||| steepnesses	count=1
function_name	y lo escribe al ||| write	count=2
arg_pair	nbytes del objeto ||| int $bid int $nbytes	count=1
function_name	una característica conocia ||| tailable	count=1
function_name	campo de ||| field	count=2
function	establece [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=13
function_name	a sybase_fetch_assoc() ||| sybase	count=1
function_name	definición rra ||| archive	count=1
function_name	string quoted printable creado ||| quoted printable encode	count=1
function_name	sólo si el argumento ||| using exceptions	count=1
function_name	yaml de ||| yaml emit	count=2
arg_pair	un elemento en el ||| resource $checkboxtree	count=1
function_name	la acción ||| gupnp service action	count=1
function_name	petición ||| request	count=6
namespace	código especificado tiene la ||| intlchar	count=1
function_name	el siguiente [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	lugar de emitir ||| set	count=1
return	se obtuvo en ||| bool	count=1
function_name	configuración de ||| config	count=1
function_name	la descripción de la ||| cairo font	count=1
function_name	único componente ||| component	count=1
arg_pair	con port para el ||| int $port	count=1
function_name	prioridad baja ||| task low	count=1
arg_pair	base de datos ||| resource $link_identifier	count=1
function_name	una salida como echo ||| runkit sandbox output	count=1
arg_pair	ruta para el dominio ||| string $domain	count=1
arg_pair	key corresponda ||| string $key mixed $value	count=1
function_name	codificador utilizado actualmente ||| current encoder	count=1
function_name	codificación ||| mb detect encoding	count=2
arg_pair	un comando ||| int $command	count=1
function_name	número de la versión ||| version	count=1
function_name	que describe ||| message	count=1
function_name	de la última respuesta ||| last response	count=1
function_name	bloque ||| block	count=1
arg_pair	el formato de datos ||| string $data	count=1
function_name	que closedir() ||| close	count=1
function_name	diccionario indicado mediante ||| crack closedict	count=1
function_name	a la fila recuperada ||| mysql fetch	count=1
arg_pair	[arg_pair_1] base de ||| [arg_pair_1] string $user [arg_pair_2]	count=2
function_name	imagen ||| pdf load image	count=1
function_name	la biblioteca gd instalada ||| gd info	count=1
function_name	devuelve el ||| enchant dict get	count=1
namespace	[namespace] amigable al ||| [namespace]	count=1
arg_pair	argumento offset a la ||| resource $lob_identifier string $offset	count=1
arg_pair	dibuja el ||| int $x	count=1
arg_pair	la [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
arg_pair	las restricciones de campos ||| int $facetsort	count=1
function_name	dibuja una línea ||| line	count=1
arg_pair	una ||| resource $psdoc	count=3
function_name	imagen para ocupar la ||| image	count=1
return	actual usando ||| bool	count=1
return	y las estadísticas de ||| array	count=1
function_name	una [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=13
function_name	el párametro ||| odbc cursor	count=1
arg_pair	en blanco ||| string $str	count=1
arg_pair	un nuevo objeto ||| mixed $class string $name	count=1
arg_pair	una anotación [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	la de memcached::prepend() con ||| prepend	count=1
function_name	número total ||| total space	count=1
function_name	entrada ||| entry	count=2
function_name	tabla ||| pdf fit table	count=1
function_name	si ||| set using exceptions	count=4
function_name	de color ||| ncurses color content	count=1
namespace	encuentra disponible la lista ||| function	count=1
function_name	es ||| default namespace	count=2
function_name	color dada ||| ncurses color	count=1
function_name	factor ||| factor	count=4
function_name	siguiente si ||| next result	count=1
function_name	[function_name_1] [function_name_2] error_code ||| [function_name_2] [function_name_1]	count=2
function_name	de la imagen ||| image interlace	count=1
return	en blanco u otros ||| string	count=1
function_name	información sobre dicho ||| info	count=1
function_name	la imagen ||| set image interlace	count=1
function_name	escala ||| field scale	count=1
function_name	o ||| format	count=1
namespace	estado de ||| function	count=3
arg_pair	php del texto ||| int $length	count=1
function_name	definición de patrón ||| pattern	count=1
function_name	acción con parámetros al ||| action	count=1
function_name	de la base de ||| dbase	count=1
return	estado del cursor: ||| int	count=1
arg_pair	de datos emita ||| string $event_name1 string $event_name2	count=1
function_name	palabras que ||| set mlt min doc frequency	count=1
function_name	detalles del estado http ||| get http status message	count=1
function_name	conveniente [function_name] proporcionalmente al ||| magnify [function_name]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] alternate [function_name_2]	count=20
arg_pair	str de acuerdo a ||| string $str	count=1
arg_pair	un fichero de ||| float $ury string $filename	count=1
function_name	los datos del apuntador ||| mailparse uudecode	count=1
function_name	[function_name_1] tabla actual ||| [function_name_2] [function_name_1]	count=4
function_name	un número ||| gmp	count=1
function_name	la representación ||| to string	count=2
function_name	opciones de ||| options	count=1
arg_pair	y socket. -- ||| zmqsocket $backend	count=1
function_name	apunta conn_handle actualmente ||| cubrid commit	count=1
function_name	de petición http de ||| request	count=1
function_name	resolución como ||| getimageresolution	count=1
function_name	no coincide ||| match	count=1
arg_pair	un efecto de botón ||| int $height	count=1
arg_pair	bordes de ||| int $width int $height	count=1
function_name	establecer la supervisión ||| ctrl dispatcher	count=1
function_name	el [function_name] ||| [function_name] ms get	count=3
function_name	absoluto canonizado ||| realpath	count=1
function_name	el formateador de la ||| highlight formatter	count=1
function_name	la ||| memory	count=1
function_name	añadir al ||| add	count=1
function_name	biblioteca unrar encuentre un ||| set using exceptions	count=1
function_name	escapa un string ||| pg escape	count=1
arg_pair	un nuevo archivo ||| resource $file	count=1
function_name	de archivo/usuario ||| bin	count=1
namespace	con una diferencia se ||| function	count=1
arg_pair	primera ocurrencia ||| string $needle	count=1
function_name	establece la directiva error_reporting ||| error reporting	count=1
namespace	la api graphicsmagick como ||| gmagick	count=1
function_name	[function_name_1] configuración ||| [function_name_2] [function_name_1]	count=3
return	asociado con el ||| string	count=1
function_name	liberación de memoria ||| udm free res	count=1
function_name	o información con el ||| set info	count=1
function_name	representa la imagen obtenida ||| imagecreatefromxbm	count=1
function_name	especificado ||| default	count=1
function	autocommit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de la opción de ||| sock opt	count=1
function	actualiza [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	de resultados de mysql ||| mysql	count=1
function_name	funciones registradas __autoload ||| autoload call	count=1
function_name	el diccionario indicado ||| crack closedict	count=1
function_name	categoría de la página ||| flatness	count=1
function_name	objeto respuesta ||| get response	count=1
arg_pair	los bordes ||| int $x	count=1
namespace	a nivel de hilos ||| function	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] bit [function_name_2]	count=4
function_name	largo ||| long	count=1
namespace	imagen ||| ktaglib_id3v2_attachedpictureframe	count=2
arg_pair	con xsltprocessor ||| string $namespace	count=1
arg_pair	descriptor de fichero fd ||| int $mode	count=2
function_name	fichero subido por medio ||| attachment	count=1
return	estándar en la ||| bool	count=1
function_name	este método se ||| await	count=1
function_name	el número ||| fbsql num	count=1
function_name	y [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	obtiene el tiempo ||| get	count=1
function_name	ciclo de ||| nop	count=1
function_name	añade la ||| dbase add	count=1
function_name	registra el ||| register	count=1
namespace	a fgets() excepto que ||| function	count=1
function_name	devolverá el ||| crypt	count=1
function_name	biblioteca unrar encuentre un ||| set using	count=1
arg_pair	transformar str1 en str2 ||| string $str1 string $str2	count=1
function_name	a com que ||| com	count=1
function_name	avanza al siguiente elemento ||| next	count=1
function_name	en un archivo ||| mailparse	count=1
function_name	intenta borrar un servicio ||| win32 delete	count=1
function_name	número de filas ||| fbsql rows	count=1
namespace	con el objeto imagick ||| imagick	count=1
function_name	en ||| frequency	count=2
arg_pair	función ordena un array ||| array $array int $sort_flags	count=1
arg_pair	[arg_pair_1] local_socket ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	obtiene ||| pdf get	count=3
namespace	de datos ||| sqlite3	count=1
function_name	clave de columna ||| column	count=1
function_name	determinado recurso de sentencias ||| stmt	count=1
function_name	establecer ||| ncurses color	count=1
function_name	este servicio ||| gupnp service	count=1
namespace	estado del cursor: si ||| mongocursor	count=1
function_name	un ||| proc	count=1
function_name	con [function_name] ||| [function_name]	count=5
function_name	exporta una o ||| add function	count=1
return	array con ||| string	count=1
function_name	la adición del ||| imagecolorallocatealpha	count=1
function_name	de la imagen ||| set image orientation	count=2
arg_pair	es decir el ||| string $filename	count=1
function_name	uno ||| number	count=1
arg_pair	a sybase_connect() ||| string $password string $charset	count=1
function_name	retorna bloques por ||| block	count=1
return	predeterminado de ||| void	count=1
function_name	para obtener el tamaño ||| cubrid lob2 size	count=1
function_name	para incrementar o disminuir ||| set	count=1
function_name	obtiene si ||| root device get	count=1
function_name	ideal especificado por solrquery::sethighlightfragsize) ||| set highlight regex slop	count=1
arg_pair	una función escalar de ||| string $name	count=1
function_name	por lo menos tantos ||| frequency	count=1
namespace	tie ||| solrdismaxquery	count=1
function	atributo de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de entrenamiento desde una ||| train from	count=1
arg_pair	contiene una ||| string $file	count=1
function_name	exporta ||| export	count=7
function_name	lee hasta el final ||| fpassthru	count=1
return	en la cadena dada ||| bool	count=1
arg_pair	usando el oid ||| resource $conn_identifier string $oid	count=1
namespace	un proceso abierto ||| function	count=1
namespace	no se ||| function	count=1
function_name	atributos y ||| ldap get attributes	count=1
function_name	la identificación ||| creator id	count=1
function_name	a large object ||| pg lo	count=2
return	recupera un nodo ||| domnode	count=1
function_name	las facetas de ||| facet	count=1
function_name	el ||| entry	count=1
function_name	exporta el ||| openssl spki export	count=1
arg_pair	excepto que fgetss() intenta ||| resource $handle int $length	count=1
function_name	iterador aún está sobre ||| valid	count=1
arg_pair	de 16 bytes en ||| string $binary	count=1
function_name	lecturas a secundarios ||| slave okay	count=4
function_name	se defina sobre ||| construct	count=1
function_name	obtiene un parámetro ||| get	count=1
arg_pair	una y ||| string $error	count=1
arg_pair	obtener la información del ||| int $schema_type string $table_name	count=1
function_name	[function_name_1] que serán ||| [function_name_2] max num query [function_name_1]	count=2
function_name	descripción de la función ||| cairo pattern create rgb	count=1
function_name	una propiedad enumerada o ||| int property value	count=1
function_name	la imagen ||| setimageiterations	count=1
function_name	y devolver un ||| using exceptions	count=1
function_name	la descripción de la ||| cairo scaled font	count=2
function_name	lista ||| open	count=1
function_name	el directorio virtual ||| dbplus	count=1
arg_pair	es una ||| string $offset string $value	count=1
function_name	el uso ||| status	count=1
arg_pair	un ||| resource $parser string $data	count=1
arg_pair	fichero de un ||| float $ury string $filename	count=1
function_name	porción de haystack ||| strrchr	count=2
function_name	cada archivo codificado ||| mailparse	count=1
function_name	cadena de instancia xml ||| load	count=1
function_name	añade un enlace a ||| pdf add	count=1
function_name	épocas de estancamiento ||| stagnation	count=1
namespace	puntos por ||| function	count=1
return	fuente ||| int	count=2
function_name	el conjunto de ||| finalize	count=1
namespace	automático de sentencias que ||| function	count=1
function_name	guardar la información de ||| save	count=1
function_name	devuelve las propiedades predeterminadas ||| get	count=1
arg_pair	establece el valor ||| string $variable string $value	count=1
return	un caracter ||| string	count=1
arg_pair	cuota de ajustes ||| resource $imap_stream string $quota_root	count=1
namespace	usada por ||| function	count=1
function_name	http ||| nsapi request	count=1
namespace	imagen desde ||| gmagick	count=2
namespace	usado cuando se ||| gmagickdraw	count=1
return	final en el puntero ||| int	count=1
function_name	ps_stringwidth() excepto que devuelve ||| string geometry	count=1
function_name	finaliza la ||| pdf end	count=2
function_name	lee los datos ||| mailparse uudecode all	count=1
function_name	algoritmo bidireccional ||| char direction	count=1
arg_pair	una búsqueda en ||| string $msgid2	count=1
function_name	reinicializa el evento base ||| re init	count=1
arg_pair	left con right y ||| mixed $right	count=1
function_name	virtual ||| chdir	count=1
function_name	frase de ||| highlight use phrase	count=2
function_name	histograma de la imagen ||| image	count=1
function_name	[function_name] result_identifier hasta ||| [function_name]	count=1
namespace	del apuntador de ||| function	count=1
arg_pair	de data1 y data2 ||| resource $data1 resource $data2	count=1
function_name	mime ||| mime encode	count=2
function	rrd desde [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	especificado es un algoritmo ||| string $lib_dir	count=1
function_name	el tamaño ||| zip	count=1
function_name	contexto ||| context	count=4
arg_pair	ruta corriente ||| float $ray float $ang1	count=1
return	el código de error ||| int	count=1
function_name	los elementos invertido ||| array reverse	count=1
arg_pair	las imágenes usando un ||| int $width int $height	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] int $cols [arg_pair_2]	count=2
function_name	propiedad de unicode uppercase ||| uuppercase	count=1
arg_pair	mismo para poder utilizarlo ||| string $encoding string $separator	count=1
function_name	raw ||| load raw	count=1
function_name	esta función devolverá la ||| odbc data	count=1
function_name	con ||| sybase pconnect	count=2
arg_pair	el valor de ||| string $value	count=2
function_name	dado ||| mailparse uudecode	count=1
function_name	entrenamiento desde ||| train from	count=1
arg_pair	servicios colas o ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	se usa ||| function	count=2
function_name	hasata que se pulse ||| newt wait for key	count=1
arg_pair	bv_name ||| string $bv_name	count=1
function_name	esta función elimina ||| delete	count=1
function	establecer el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	aparición de needle y ||| string $haystack mixed $needle	count=1
namespace	string utilizando el algoritmo ||| function	count=1
function_name	el logaritmo natural ||| trader ln	count=1
function_name	nombre de host ||| name	count=3
function_name	retorna el nombre largo ||| long name	count=1
function_name	para que la ||| by	count=2
arg_pair	objeto samconnection conecta el ||| array $properties	count=1
function_name	de entidades [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	retorna el id ||| id	count=1
function_name	existe en ||| exists	count=2
return	dada ||| bool	count=1
function_name	de ||| prob prime	count=2
function_name	la línea cerrada resultante ||| ps closepath stroke	count=1
function_name	de la versión de ||| version	count=2
function_name	realiza una [function_name] ||| [function_name]	count=1
function	[function_name_1] de operaciones ||| [function_name_1] [arg_pair_2]	count=3
function_name	[function_name_1] acción ||| [function_name_2] [function_name_1]	count=1
return	las claves ||| array	count=1
arg_pair	class dada y ||| mixed $class bool $autoload	count=1
function_name	contraseña ||| oci password change	count=2
arg_pair	nueva copia de todos ||| bool $backup_original_files	count=1
arg_pair	en formato csv y ||| string $enclosure	count=1
namespace	indica si el ||| oci-lob	count=1
function_name	peso de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	línea desde el ||| fgets	count=1
namespace	cursores de ||| mongocursor	count=1
arg_pair	se comporta de forma ||| string $username	count=1
function	nombre host [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	vacía el ||| mysqlnd qc clear	count=1
function_name	todas las [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	descripción de ||| surface	count=5
return	función usa la prueba ||| int	count=1
function_name	el número total de ||| total	count=2
function_name	true entonces en lugar ||| set	count=1
function_name	[function_name_1] nuevo analizador ||| xml [function_name_2] [function_name_1]	count=1
function_name	está protegido ||| protected	count=1
function_name	mensajes ||| imap clearflag	count=1
arg_pair	0600 en ||| string $dir string $prefix	count=1
function_name	ca_info establecidos ||| capath	count=1
function_name	el phar cuando ||| map phar	count=1
arg_pair	une tres cadenas ||| string $old_data string $new_data1	count=1
arg_pair	con un umbral de ||| float $threshold	count=1
function_name	en la string entregada ||| ctype	count=1
arg_pair	al servicio daemon ||| string $daemon string $address	count=1
function_name	obtiene los hijos ||| call get children	count=2
arg_pair	una [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	marca el registro ||| record	count=1
function_name	tar/zip [function_name] ||| is [function_name]	count=3
function_name	ha expirado y ||| dead	count=1
function_name	clave ||| by key	count=1
arg_pair	de forma ||| string $servername string $username	count=1
function_name	este ||| min doc	count=1
return	de una ||| string	count=5
function_name	información de los parámetros ||| params	count=1
function_name	descripción ||| cairo	count=1
function_name	complemento de replicación y ||| mysqlnd	count=1
arg_pair	hacer de intermediarios de ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	vincular el array de ||| bind array by name	count=1
function_name	cuando el usuario presiona ||| suspend	count=1
function_name	[function_name] retrollamada ||| set idle [function_name]	count=2
function_name	elimina ||| delete data	count=2
arg_pair	de una ruta ||| string $path	count=1
arg_pair	un conjunto de resultados ||| resource $result	count=1
return	asociada [return] por ||| [return]	count=1
arg_pair	clientes en escucha ||| string $name	count=1
function_name	la última tupla de ||| last	count=1
arg_pair	in_charset a out_charset ||| string $out_charset	count=1
function_name	devuelve el tipo ||| type	count=7
arg_pair	parecida a sybase_connect() con ||| string $charset	count=1
return	una representación ||| string	count=2
function_name	el espacio de nombres ||| namespace	count=1
arg_pair	una ||| string $url	count=2
function_name	el directorio virtual ||| chdir	count=1
return	el manifiesto de un ||| int	count=1
function_name	de la frase de ||| highlight use phrase	count=1
namespace	crea un ||| gmagick	count=1
function_name	recurso de curl manteniendo ||| curl	count=1
function_name	el logo ||| logo guid	count=1
arg_pair	a ||| resource $conn	count=1
arg_pair	bytes empezando por offset ||| int $offset	count=1
arg_pair	una copia de str ||| string $str	count=1
return	la dirección establecida en ||| bool	count=2
function_name	(«kernel») a este para ||| kernel	count=1
function_name	escribe el ||| fwrite	count=1
function_name	[function_name_1] una ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] complemento ||| [function_name_2] qc [function_name_1]	count=1
arg_pair	delimiter como delimitador ||| string $delimiter	count=1
arg_pair	celda [arg_pair] ||| [arg_pair]	count=1
function_name	de patrones ||| length	count=1
function_name	y reanuda su ejecución ||| throw	count=1
arg_pair	otra llamada [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	tipo ||| db2 field type	count=1
function_name	abre el ||| eio open	count=1
function_name	página ||| set slide	count=1
arg_pair	función [arg_pair] ||| [arg_pair]	count=2
function_name	recupera ||| proc get status	count=2
arg_pair	un ||| string $headers	count=1
function_name	instrucción sql ||| mssql next	count=1
function_name	codificación ||| encoding	count=2
function_name	número total de ||| total space	count=1
namespace	eliminar cualesquiera ||| function	count=1
arg_pair	resolución ||| float $x_resolution float $y_resolution	count=1
function_name	error una excepción ||| set	count=1
arg_pair	la petición actual indicando ||| string $actor string $details	count=1
namespace	valor por omisión del ||| reflectionparameter	count=1
arg_pair	más imágenes ||| imagick $image	count=1
return	(1 de enero ||| int	count=1
arg_pair	objeto sdo_das_xml_document en un ||| sdo_xmldocument $xdoc	count=1
function_name	la funcionalidad de color ||| start color	count=1
namespace	clave usando una función ||| arrayiterator	count=1
namespace	el índice del nodo ||| splpriorityqueue	count=1
namespace	le ||| mongocursor	count=1
arg_pair	fichero a ||| bool $use_include_path	count=1
function_name	coseno hiperbólico ||| cosh	count=1
function	[function_name_1] xml dump ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	una columna de ||| mixed $column	count=1
function_name	de ||| bzerrstr	count=2
function_name	solamente debería usarse para ||| set	count=1
function_name	método se usa ||| resource	count=1
function_name	el número máximo de ||| set highlight max	count=1
return	ser usadas por el ||| void	count=1
arg_pair	los destinatarios cc ||| string $cc	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] terms lower [function_name_2]	count=3
return	medido como el número ||| int	count=1
function_name	la descripción de la ||| surface	count=5
namespace	una función definida ||| arrayiterator	count=2
function_name	[function_name_1] i-nodo de ||| [function_name_1] [function_name_2]	count=1
namespace	de una entrada ||| function	count=1
return	el tipo de la ||| string	count=1
return	efecto de botón ||| void	count=1
function_name	establece la [function_name_2] ||| [function_name_1] text [function_name_2]	count=1
function_name	la definición de color ||| ncurses color	count=1
arg_pair	esta es ||| mixed $value	count=1
arg_pair	de bytes str de ||| string $str string $charset	count=1
function_name	cambia el directorio ||| dbplus chdir	count=1
function_name	phar cuando ||| phar	count=1
arg_pair	socket. -- zguide ||| zmqsocket $backend	count=1
function_name	este serán ||| doc	count=1
return	menos ||| solrquery	count=1
function_name	con el id dado ||| element by id	count=1
function_name	a una única función ||| add	count=1
function_name	desecha todos los ||| unique	count=1
function_name	ya abierto y devuelve ||| get contents	count=1
function_name	la base de datos ||| dba	count=1
function_name	directorio virtual ||| dbplus	count=1
arg_pair	es decir ||| int $face	count=1
function_name	devuelve el ||| entry filesize	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] package [function_name_2]	count=2
function_name	fichero de esquema en ||| add	count=1
arg_pair	tiempo de ejecucción ||| int $retry_interval	count=1
function_name	obtiene la transformación ||| get trans matrix	count=3
function_name	establece la función ||| set	count=5
return	en el archivo dado ||| bool	count=1
arg_pair	en repos_url de ||| string $repos_url	count=1
function_name	abierto ||| proc get status	count=2
namespace	hace pings a ||| function	count=1
function_name	con ||| addcslashes	count=1
namespace	con el [namespace] como ||| [namespace]	count=1
function_name	obtiene el ||| get default	count=1
function_name	selecciona la base ||| mssql select db	count=1
function_name	cálculos de ||| compat	count=1
function_name	disponible la lista ||| open	count=1
arg_pair	con una ||| string $width	count=1
function_name	fann_get_cascade_candidate_change_fraction() ||| cascade candidate	count=1
function_name	error cuando la biblioteca ||| using exceptions	count=1
function_name	activación para la ||| activation	count=2
namespace	del hash en ||| quickhashinthash	count=1
function_name	palabras ||| mlt min doc frequency	count=2
return	creado con el ||| void	count=1
arg_pair	encuentra disponible la ||| resource $psdoc	count=1
function_name	máximo de ||| highlight max	count=2
function_name	se ||| memory	count=1
function_name	muestra el ||| display	count=1
arg_pair	establece una ||| string $host int $port	count=1
function_name	callback definidos por ||| gupnp control point browse	count=2
namespace	una llamada [namespace] ||| [namespace]	count=1
arg_pair	arrays al mismo tiempo ||| array $array1	count=1
namespace	array de [namespace] ||| [namespace]	count=1
namespace	un yar_client hacia ||| yar_client	count=1
namespace	el valor de ||| function	count=2
return	el código de ||| string	count=1
function_name	mensajes md5 ||| md5 file	count=1
return	y otra ||| array	count=1
return	afecta al ||| int	count=1
function_name	posee una característica ||| tailable	count=1
arg_pair	propiedad hwnd ||| int $window_handle	count=1
arg_pair	criterio y ||| int $sortdirection	count=2
function_name	devuelve la dirección ipv4 ||| gethostbyname	count=1
return	devuelve una palabra ||| string	count=1
function_name	devuelve un valor entero ||| mysqli get	count=1
namespace	un segundo o subsiguiente ||| sdo_das_xml	count=1
function_name	lista de ||| removeimage	count=1
function_name	advertencia esta función ||| image	count=1
arg_pair	watcher evperiodic ||| callable $callback	count=1
return	de mongo ||| int	count=1
function_name	que ya ||| add	count=1
arg_pair	server_key ||| string $server_key	count=5
arg_pair	un array ||| int $num	count=1
function	[function_name_1] objetivo especificado ||| [function_name_1] new resource $context [arg_pair_2]	count=1
function_name	entrada ||| input scaling	count=1
return	para que ||| void	count=1
function_name	[function_name_1] módulos definidos ||| [function_name_1] [function_name_2]	count=1
arg_pair	espacios ||| string $str	count=1
function_name	las constantes memcached::res_* ||| result code	count=1
namespace	frame ||| ktaglib_id3v2_frame	count=2
namespace	esta función ||| function	count=3
namespace	direcciones servicios colas ||| zmqdevice	count=1
namespace	comandos por ||| function	count=1
arg_pair	la ruta en la ||| bool $recursive	count=1
arg_pair	con una ||| string $width string $height	count=1
function_name	obtiene [function_name_2] ||| [function_name_1] socket [function_name_2]	count=2
return	la sentencia sql más ||| int	count=1
namespace	época unix (1 ||| function	count=1
function_name	este serán ignoradas ||| doc frequency	count=1
function_name	distribución de lecturas a ||| set slave	count=1
namespace	a la función de ||| gearmanworker	count=1
function_name	coincide ningún ||| match	count=1
function_name	codificado mediante ||| uudecode	count=1
function_name	el número total de ||| number	count=1
function_name	recupera la variable env ||| env	count=1
function_name	http ||| request	count=2
function_name	cambiará el ||| rrename	count=1
namespace	montón ||| splheap	count=1
arg_pair	índice ||| mixed $index	count=1
arg_pair	un directorio ||| resource $fam	count=1
arg_pair	a ereg_replace() excepto ||| string $replacement	count=1
function_name	sets tie breaker ||| set tie breaker	count=1
arg_pair	entradas de un ||| resource $imap_stream	count=1
return	se le ||| int	count=1
function_name	columna actual para ||| get current column	count=1
function_name	un proceso abierto mediante ||| status	count=1
arg_pair	a 0 index en ||| gmp $a int $index	count=1
arg_pair	entre old_file ||| string $old_file	count=1
return	fue creado con la ||| bool	count=1
function	[function_name_1] al campo ||| [function_name_1] $fdf_document [arg_pair_2] int	count=1
function_name	resultado ||| xdiff file patch	count=1
arg_pair	cualquier otra llamada ||| callable $callback	count=1
function_name	escribir ||| write buffer	count=1
arg_pair	socket_create() o socket_accept() ||| int $length	count=1
function_name	mismas preferencias ||| handle	count=1
function_name	[function_name_1] para ||| [function_name_1] [function_name_2]	count=2
function_name	el color de ||| background color	count=2
function_name	la longitud de palabra ||| mlt min word length	count=1
function_name	todas ||| nsapi request	count=1
function_name	una notificación ||| notify	count=1
function_name	el color del borde ||| border color	count=1
function_name	obtiene el número ||| func num	count=2
function_name	la descripción ||| cairo pattern get rgba	count=1
function_name	la miniatura embebida de ||| exif thumbnail	count=1
arg_pair	evento que ||| resource $event	count=1
function_name	diccionario ||| crack closedict	count=2
function_name	descendientes con ||| ns	count=1
function_name	consulta siguiente si ||| next result	count=1
arg_pair	esta función ||| resource $connection_id	count=1
arg_pair	un assoc_array ||| array $assoc_array	count=1
return	activa el ||| mixed	count=1
arg_pair	servicios colas ||| zmqsocket $frontend	count=1
arg_pair	recursivamente path1 y ||| int $rev1	count=1
function_name	el uid del número ||| uid	count=1
namespace	designado por ||| function	count=1
function_name	la cadena de título ||| title	count=1
function_name	configuración de tidy ||| tidy reset config	count=1
arg_pair	acceso recursivamente path1 y ||| int $rev1	count=1
function_name	extensión [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	cursor: si todavía ||| mongocursor	count=1
arg_pair	empleando delimiter ||| string $delimiter string $null_as	count=1
function_name	crea una ||| create entity	count=1
arg_pair	fgets() excepto que ||| resource $handle int $length	count=1
function_name	insert ejecutada correctamente en ||| insert	count=1
arg_pair	sesión del recurso ||| resource $ch	count=1
function_name	callback definidos ||| gupnp control point browse start	count=1
arg_pair	como una ||| string $name	count=1
function_name	[function_name_1] mínima del ||| [function_name_2] server [function_name_1]	count=4
function_name	[function_name_1] sql ||| [function_name_2] [function_name_1]	count=8
function_name	ascenso vertical ||| ascent	count=1
function_name	[function_name_1] de neuronas ||| [function_name_2] [function_name_1]	count=1
namespace	de información ||| function	count=1
function_name	azul de ||| blue	count=2
function_name	la correlación de los ||| asort	count=1
function_name	cada servidor virtual de ||| server by	count=1
function_name	emitir advertencias y ||| using exceptions	count=1
arg_pair	empezando por offset ||| int $offset	count=1
function_name	ca_info establecidos por ||| capath	count=1
arg_pair	recupera una variable de ||| string $default	count=1
arg_pair	el comportamiento automático de ||| bool $onoff	count=1
namespace	activa ||| function	count=1
return	u otros caracteres del ||| string	count=1
return	matriz con ||| array	count=1
function_name	disponible la lista de ||| ps open memory image	count=1
arg_pair	permite enviar emails con ||| string $message string $additional_headers	count=1
function	paginación [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	con ||| annotateimage	count=1
function_name	tantos ||| set	count=1
arg_pair	argumento offset a ||| resource $lob_identifier string $offset	count=1
function_name	la longitud de un ||| len	count=1
function_name	información dependiente de la ||| resize	count=1
function_name	devuelve ||| get image	count=4
function_name	ruta del directorio para ||| set dict path	count=1
function_name	el seno del ||| sin	count=1
arg_pair	la clave con ||| string $key	count=1
arg_pair	data ||| int $offset	count=1
function_name	api de eventos ||| event buffer	count=1
function_name	el valor ||| newt checkbox set value	count=1
function_name	la asignación de ||| apc sma	count=1
function_name	devuelve los datos ||| get	count=3
arg_pair	un array en ||| array $array	count=1
return	una llamada ||| string	count=1
function_name	el logo de ||| php logo	count=1
function_name	de único ||| password hash	count=1
function_name	vincular el array ||| bind array	count=1
function_name	si ||| module is	count=2
arg_pair	cambia la ||| string $new_password	count=1
arg_pair	compara value1 ||| mixed $value1	count=1
arg_pair	de una función ||| string $filename int $flags	count=1
function_name	virtual ||| pvf	count=2
namespace	mysqlnd_memcache [namespace] ||| [namespace]	count=3
function_name	tipos de letra ||| imagepsencodefont	count=1
arg_pair	local en [arg_pair_2] ||| [arg_pair_2] [arg_pair_1] int $startpos	count=1
function	[function_name_1] repos_url de ||| [arg_pair_2] [function_name_1]	count=2
return	hash ||| string	count=1
function_name	ingres procedimiento al macenado ||| ingres fetch proc return	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] mlt min word [function_name_2]	count=1
function_name	secuencia de mensaje ||| imap	count=1
function_name	el iterator interno ||| inner iterator	count=1
function_name	obtiene ||| current	count=1
namespace	cierra el ||| function	count=1
namespace	objeto en formato ||| serializable	count=1
arg_pair	un ||| resource $pdfdoc string $boxname	count=1
function_name	última sentencia ||| db2 last	count=1
arg_pair	de un assoc_array ||| array $assoc_array	count=1
function_name	de archivo dado y ||| uudecode	count=1
namespace	abierto mediante el ||| function	count=1
function_name	operación and ||| and	count=1
arg_pair	que lee ||| resource $handle	count=1
namespace	cada archivo codificado mediante ||| function	count=1
function_name	la descripción de ||| cairo font face get type	count=1
return	de una ||| array	count=1
function_name	la descripción de la ||| cairo svg surface create	count=1
function_name	por utf-8 a iso-8859-1 ||| utf8	count=1
function_name	cualquier flujo ||| stream filter	count=1
return	dsn ||| array	count=1
arg_pair	localname y namespaceuri ||| string $localname	count=1
return	regla del número ||| bool	count=1
function	[function_name_1] de una ||| [function_name_1] [arg_pair_2]	count=5
namespace	argumento a mongoid::__construct() ||| mongoid	count=1
function_name	un valor especial indicando ||| using exceptions	count=1
return	de emitir advertencias y ||| void	count=1
function_name	extensiones de ficheros que ||| extensions	count=1
arg_pair	de una ||| mixed $background float $x_shear	count=1
namespace	instancia xml dada ||| sdo_das_xml	count=1
return	en el directorio de ||| bool	count=1
arg_pair	de mensaje y socket. ||| zmqsocket $backend	count=1
arg_pair	de contexto log_cmd_update al ||| array $updateoptions	count=1
function_name	un archivo temporal ||| mailparse uudecode all	count=1
function_name	como este serán ignoradas ||| set mlt min	count=1
function_name	un nuevo analizador ||| parser	count=1
arg_pair	de pajar ||| string $haystack string $needle	count=2
function_name	de campo ||| field	count=3
function_name	nueva conexión ||| new connect	count=2
namespace	html y ||| function	count=1
function_name	tangente para ||| trader tan	count=1
function_name	el crc del ||| crc	count=1
function_name	la que las palabras ||| mlt min doc	count=1
function	añade [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=17
function_name	el método de disposición ||| setimagedispose	count=1
function_name	establece el [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=6
function_name	registrar su propia ||| register	count=1
function_name	siguiente resultado de ||| next result	count=2
arg_pair	[arg_pair_1] efectos de ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	devuelve la imagen de ||| compare image	count=1
arg_pair	este ||| string $key	count=1
arg_pair	a sybase_connect() con ||| string $password string $charset	count=1
function_name	la longitud del campo ||| msql field len	count=1
arg_pair	[arg_pair_1] path2 ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	[function_name] incluidos ||| get [function_name] max num query	count=3
function_name	la escala de un ||| scale	count=1
return	el búfer de ||| int	count=1
function_name	la csr ||| openssl csr sign	count=1
function_name	el punto primario ||| primary	count=5
namespace	[namespace] los ||| [namespace]	count=3
function_name	de memcached::touch() ||| touch by	count=1
namespace	error una excepción de ||| rarexception	count=1
function_name	de interoperabilidad por lo ||| set	count=1
function_name	[function_name_1] factor ||| [function_name_1] rprop increase [function_name_2]	count=1
function_name	callback definidos por ||| gupnp control point browse start	count=1
function_name	utilización ||| win32 ps stat mem	count=1
arg_pair	crea ||| int $x	count=1
function_name	lista personal de palabras ||| config personal	count=1
return	otro núcleo ||| void	count=1
arg_pair	efecto de ||| int $x int $y	count=1
function_name	obtiene el tiempo ||| gupnp context get	count=1
function_name	módulos cargados en ||| get modules	count=1
return	matriz con las ||| array	count=1
function_name	respuesta ||| response	count=5
function_name	de capa ||| layer	count=1
namespace	especial indicando ||| rarexception	count=1
arg_pair	bcc ||| string $rpath	count=1
function_name	archivo temporal ||| mailparse uudecode all	count=1
function_name	creada con db2_connect() ||| db2	count=1
arg_pair	mailbox ||| int $options	count=1
function_name	instala un objeto ||| mysqlnd uh set connection	count=1
function_name	de trozos remarcados en ||| highlight	count=1
namespace	oauth ||| oauthprovider	count=1
function_name	la imagen ||| set interlace scheme	count=1
arg_pair	la mayoría de ||| string $connection_string string $character_set	count=1
function_name	último intento de ||| db2 conn error	count=2
arg_pair	desde la ||| string $filename	count=1
arg_pair	rgb especificado y al ||| int $red	count=1
function_name	puedan ||| kernel	count=1
namespace	que se encuentra ||| function	count=1
arg_pair	ifx_do() ||| mixed $blobidarray	count=1
function_name	certificado ||| openssl x509	count=2
function_name	borra el ||| ftp delete	count=1
namespace	usando ||| arrayiterator	count=2
function_name	el primer ||| ldap first	count=1
namespace	una característica conocia como ||| mongocursor	count=1
namespace	todos los ||| gearmanclient	count=1
arg_pair	a la de memcached::replace() ||| mixed $value int $expiration	count=1
function_name	convierten ||| flip	count=1
namespace	que representa una ||| function	count=3
function_name	entrenamiento ||| train	count=7
function_name	y contornea ||| pdf fill stroke	count=1
arg_pair	de cadena de ||| string $key	count=1
namespace	o de ||| function	count=1
function_name	un error una excepción ||| exceptions	count=1
arg_pair	especificado como timestamp ||| int $timestamp int $format	count=2
return	devuelve el ||| void	count=1
function_name	opción ||| set option	count=1
function_name	diferencia binaria de ||| bdiff	count=1
arg_pair	el de estilo ||| int $type	count=1
function_name	estándar basado ||| crypt	count=1
function_name	método gearmanclient::do() ||| do	count=1
function_name	plano ||| ncurses	count=1
function_name	sobre ||| getinfo	count=1
namespace	un caracter ||| function	count=1
arg_pair	localname y namespaceuri dados ||| string $localname	count=1
arg_pair	una nueva entrada a ||| string $key	count=1
namespace	lista de dsn disponibles ||| function	count=1
return	actual medido ||| int	count=1
return	conexión en ||| bool	count=1
namespace	las palabras que ||| solrquery	count=1
function_name	lee ||| fann read	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] names [arg_pair_2]	count=2
function_name	última operación frontbase ||| fbsql errno	count=2
function_name	línea actual ||| get current line	count=1
function	antepone el [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	primer [function_name_2] ||| [function_name_2] [function_name_1]	count=7
namespace	datos ||| gearmanclient	count=1
function_name	colección de ||| collection	count=1
function_name	archivo paradox en un ||| px	count=1
namespace	con oci_new_descriptor() ||| oci-lob	count=1
function_name	retorna el nombre largo ||| frame long name	count=1
arg_pair	html ||| resource $handle	count=1
function_name	entonces ||| using	count=1
function_name	aql embebido dentro de ||| rquery	count=1
function_name	devuelve el ||| get highlight	count=3
function_name	paso de sarprop ||| sarprop step	count=2
arg_pair	texto ||| int $length	count=1
function_name	base de datos actualmente ||| sybase select db	count=1
function_name	siguiente si varias ||| cubrid next	count=1
namespace	pings a una ||| function	count=1
function_name	entrada de ||| filesize	count=1
namespace	una ||| gmagick	count=3
namespace	virtual actual donde ||| function	count=1
function_name	descripción de la ||| ps surface get	count=1
function_name	directorio virtual actual ||| chdir	count=1
function_name	los datos ||| all	count=1
function_name	devuelve ||| get iterator	count=1
namespace	[namespace] a ||| [namespace]	count=1
arg_pair	nivel de bits ||| mixed $left mixed $right	count=2
function_name	la porción de haystack ||| mb strrichr	count=1
arg_pair	proporcionado que ||| int $color float $value	count=1
arg_pair	proporcionado ||| int $color float $value	count=1
function_name	geoip_domain_by_name() devolverá ||| domain by	count=1
function_name	para establecer ||| cubrid set	count=1
arg_pair	el fichero ||| bool $use_include_path	count=1
function_name	el desplazamiento de campo ||| msql field	count=1
function_name	el de estilo ||| slide	count=1
return	pueden hacer ||| zmqsocket	count=1
namespace	que es el nombre ||| function	count=1
function_name	que corresponde al nombre ||| code by name	count=1
arg_pair	un efecto de ||| int $width	count=1
function_name	asignación de memoria compartida ||| sma	count=1
return	crea un array ||| array	count=2
arg_pair	un ||| string $domain string $map	count=1
function_name	establece la ||| px set	count=1
function_name	esta función acepta uno ||| format	count=1
return	aproxima a ||| float	count=1
function_name	sistema ||| crypt	count=1
function_name	servidor postgresql ||| pg	count=1
function_name	cargar ||| load	count=1
namespace	que retorna el ||| function	count=1
function_name	unión para la página ||| join	count=1
function_name	punto blanco ||| white point	count=1
function_name	la respuesta original de ||| last response	count=1
function_name	de términos de consultas ||| terms	count=1
function_name	cambia el tamaño y ||| size	count=1
arg_pair	a la potencia exp ||| gmp $exp	count=1
arg_pair	desde str en ||| string $str	count=1
namespace	devuelve una cadena que ||| gmagickdraw	count=1
function_name	el argumento es ||| set using exceptions	count=1
return	de color especificado ||| int	count=1
arg_pair	que fgetss() intenta ||| int $length	count=1
arg_pair	señal ||| resource $cpoint int $signal	count=1
function_name	para remarcación ||| highlight	count=1
return	hacer de intermediarios de ||| zmqsocket	count=1
function_name	de la faceta ||| facet	count=1
function_name	ecm ||| get cascade output stagnation	count=1
function_name	las variables ||| request variables	count=2
arg_pair	de forma parecida a ||| string $servername string $username	count=1
function_name	sqlite ||| sqlite	count=2
function_name	cifrado para ||| encryption	count=1
function_name	[function_name_1] fondo de ||| [function_name_2] [function_name_1]	count=4
arg_pair	si key ya existe ||| string $key	count=1
function_name	elimina una variable con ||| remove	count=1
arg_pair	se haya ejecutado ||| int $field_number	count=1
function_name	ha sido creado ||| add types	count=1
return	o ||| void	count=2
function_name	el uid del número ||| imap uid	count=1
function_name	la categoría ||| flatness	count=1
namespace	correspondiente objeto pdostatement ||| pdostatement	count=1
function_name	devuelve un array ||| to array	count=2
return	clave usando una ||| void	count=1
function_name	que las ||| doc frequency	count=1
function_name	disponible la lista ||| memory image	count=1
return	tiempo máximo de ||| int	count=1
function_name	de la imagen ||| color image	count=1
arg_pair	procesa cada uno de ||| resource $mh int $still_running	count=1
function_name	en por lo menos ||| doc	count=1
function_name	conexiones del [function_name_2] ||| [function_name_2] get last used [function_name_1]	count=2
arg_pair	result de callback ||| mixed $data	count=2
function_name	número de ||| imap	count=1
function_name	argumento es true entonces ||| using exceptions	count=1
namespace	de estilo ||| harupage	count=1
function_name	clob ||| clob	count=1
function_name	para que la ||| set by key	count=2
function_name	el directorio ||| dbplus chdir	count=1
function_name	de filas ||| fbsql rows	count=1
arg_pair	función convierte un dominio ||| string $domain int $options	count=1
arg_pair	pequeño que ||| float $rprop_delta_min	count=1
return	esta función devolverá ||| array	count=1
return	el número ||| solrquery	count=1
function_name	dispositivo ||| gupnp device	count=1
arg_pair	intenta ||| int $length	count=1
arg_pair	los caracteres que ||| string $str	count=1
function_name	las palabras que ||| mlt min doc frequency	count=1
function_name	opciones explícitas ||| pdf	count=1
function_name	marco de acumulación y ||| aggregate	count=1
namespace	excepción en formato ||| exception	count=1
namespace	intenta ||| function	count=1
function_name	asociativo que contiene la ||| assoc	count=1
arg_pair	de una ||| string $name string $value	count=1
namespace	nombres o ||| function	count=1
function_name	funciones de sisitema de ||| wrapper	count=1
arg_pair	a sybase_connect() ||| string $username	count=1
namespace	instancia xml ||| sdo_das_xml	count=1
function_name	devuelve [function_name] ||| get [function_name]	count=1
function_name	en negro del ||| imagecreatetruecolor	count=1
arg_pair	de un ||| resource $pdfdoc	count=4
arg_pair	imgaen ||| int $ignore_transparent	count=1
function_name	documentos como este serán ||| mlt min doc	count=1
return	cromaticidad como una matriz ||| array	count=1
arg_pair	más bases ||| string $databases	count=1
function_name	puedan aplicarse a ||| kernel	count=1
namespace	barras invertidas ||| function	count=1
function_name	colocar antes del ||| prefix	count=1
function_name	esta ||| image	count=1
function_name	blanco u otros ||| ltrim	count=1
arg_pair	[arg_pair_1] en un ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	de configuración tidy ||| tidy load config	count=1
function_name	[function_name] empleadas ||| [function_name] num	count=3
namespace	ruta actual usando la ||| harupage	count=1
return	en un formato de ||| bool	count=1
return	mensaje de ||| string	count=1
namespace	ssl ||| oauth	count=1
return	los índice ||| int	count=1
function_name	ser entrenadas las ||| fann get cascade	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] notation decl handler [arg_pair_2]	count=2
namespace	alias de: finfo_set_flags() ||| finfo	count=1
function_name	tamaño de ||| get size	count=1
function_name	función abre un blob ||| blob	count=1
function_name	el número de columnas ||| ifx num	count=1
arg_pair	[arg_pair_1] de pattern ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	rastreo para cada consulta ||| query	count=1
function_name	grises con ||| embossimage	count=1
function_name	y las [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] y mueve el puntero ||| [function_name_2] [function_name_1]	count=4
function_name	establece la ||| mysqlnd ms set qos	count=1
function_name	sets tie breaker ||| tie breaker	count=1
namespace	la regla del ||| harupage	count=1
arg_pair	array de php var_array ||| array $var_array int $max_table_length	count=1
function_name	blob en modo lectura ||| blob echo	count=1
arg_pair	mask ||| string $mask	count=2
function	de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	el diccionario indicado ||| crack	count=1
function_name	tantos documentos como este ||| mlt min doc	count=1
function_name	[function_name_1] obtener ||| [function_name_2] [function_name_1]	count=1
function_name	computa una intersección de ||| array uintersect	count=1
function_name	número de ||| set start	count=1
function_name	detalles del estado http ||| http status	count=1
function_name	nombre de host ||| record by name	count=1
function_name	página para ajustarse a ||| fit	count=1
function_name	[function_name_1] iterador a ||| [function_name_1] [function_name_2]	count=1
function_name	la lista de ||| odbc data source	count=1
function_name	menos ||| min	count=1
arg_pair	needle [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	establece ||| fdf set	count=3
function_name	del continente que ||| continent code by	count=1
function_name	o si la ||| is	count=1
arg_pair	fichero dado ||| string $filename	count=1
function_name	id de [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	[function_name_1] blob ||| [function_name_2] [function_name_1]	count=1
function_name	o más opciones ||| options	count=1
namespace	archivo codificado mediante ||| function	count=1
function_name	al formato utf-16 ||| to utf16	count=2
function_name	analiza una url ||| parse url	count=1
function_name	de términos de ||| terms	count=1
arg_pair	objeto pdostatement ||| int $cursor_orientation	count=1
function_name	devuelve el elemento seleccionado ||| get current	count=1
function_name	siguiente ||| fetch	count=1
function_name	de escala ||| ps scale	count=1
arg_pair	decir ||| int $face	count=1
arg_pair	la función cubrid_set_add() ||| string $attr_name string $set_element	count=1
function_name	borra ||| pdf delete	count=3
return	envía ||| bool	count=1
return	intermediarios ||| zmqsocket	count=1
function_name	el número de entradas ||| fann num input	count=1
namespace	puntero ||| solrdocument	count=1
arg_pair	actual a x ||| float $x float $y	count=1
arg_pair	un ||| resource $pdfdoc string $text	count=1
function_name	de grises con ||| embossimage	count=1
function_name	crea [function_name_2] ||| xml [function_name_2] [function_name_1]	count=1
return	almacena en ||| bool	count=3
namespace	cifrado especificado a través ||| function	count=1
function_name	encripta ||| pkcs7 encrypt	count=1
function_name	entidades [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	mapa con un ||| weakmap	count=1
namespace	archivo phar ||| pharfileinfo	count=2
function_name	de ssl para ||| set sslchecks	count=1
function_name	actual de ||| filesize	count=1
function_name	la configuración del ||| config	count=1
arg_pair	un mensaje ||| string $message integer $mode	count=1
function_name	encuentre ||| using	count=1
function_name	en cascada ||| get cascade	count=1
arg_pair	in_charset a out_charset ||| string $in_charset string $out_charset	count=1
function_name	certificado asociado con el ||| openssl x509	count=1
function_name	escala las salidas de ||| scale output	count=1
arg_pair	aparecen en ||| string $str	count=1
function_name	petición http en la ||| nsapi	count=1
function_name	devolverá ||| odbc data source	count=2
arg_pair	en una y ||| string $error	count=1
function	[function_name_1] xml dump ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	una ||| resource $p	count=2
function_name	[function_name_1] la extensión ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name] para ||| fann set [function_name] steepness	count=2
function_name	la extensión [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	de excepciones anterior ||| exception	count=1
function_name	establece el número ||| fann set cascade num	count=1
function_name	una imagen a las ||| image	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] out [function_name_2]	count=24
function_name	[function_name_1] clase iterador ||| [function_name_1] [function_name_2]	count=1
function_name	lo encripta ||| openssl pkcs7 encrypt	count=1
function_name	excepción de tipo ||| exceptions	count=1
return	el ||| array	count=4
arg_pair	xml dump ||| string $xml_file string $rrd_file	count=1
function_name	color especificado ||| color	count=1
arg_pair	cubrid_set_query_timeout() ||| resource $req_identifier	count=1
function_name	resultados ||| cubrid result	count=1
function_name	solicitud ||| nsapi request	count=1
namespace	información sobre un ||| function	count=1
return	sentencia sql más reciente ||| int	count=1
namespace	desde la ||| function	count=1
function_name	entorno de apache ||| apache setenv	count=3
function_name	encabezados a enviar ||| soap headers	count=1
function_name	menos tantos ||| mlt	count=1
function_name	este método devuelve ||| to	count=3
arg_pair	por msglist ||| string $msglist	count=1
function_name	devuelve ||| filesize	count=1
function_name	a una única función ||| kernel	count=1
return	para el socket. ||| int	count=1
function_name	disponibles después ||| data source	count=1
function_name	[function_name_1] sujeta a ||| [function_name_2] pdi [function_name_1]	count=2
function_name	importa un flujo ||| import stream	count=1
arg_pair	las retrollamadas ||| array $patterns_and_callbacks mixed $subject	count=1
function_name	autenticación donde ||| svn auth get	count=1
function_name	rra por descripción ||| archive	count=1
namespace	una ||| mongocursor	count=1
function_name	filas afectadas por una ||| mysqli stmt affected rows	count=1
namespace	hash de ||| function	count=1
function_name	de funciones ||| functions	count=1
arg_pair	un ||| resource $p string $key	count=1
arg_pair	sybase_connect() con dos ||| string $servername	count=1
arg_pair	dibuja [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
namespace	carácter que ||| function	count=1
arg_pair	de needle y ||| mixed $needle	count=1
function_name	cursor al primer ||| first	count=1
arg_pair	en tuple ||| string $tuple	count=1
function_name	[function_name] un ||| [function_name]	count=6
arg_pair	verifica el ||| string $signature	count=1
function_name	composición de una imagen ||| image	count=1
function_name	des de unix ||| crypt	count=1
function_name	exclusivo or xor de ||| xor	count=1
namespace	del error ||| error	count=1
arg_pair	[arg_pair_1] resolución ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	archivo phar ||| phar	count=7
function_name	escribe ||| fwrite	count=1
function_name	esta función devuelve ||| cubrid get	count=5
function_name	mediante el uso de ||| proc get status	count=1
function_name	abierto mediante el uso ||| proc get status	count=1
function_name	archivo de una imagen ||| image	count=1
function_name	el ascenso vertical ||| ascent	count=1
arg_pair	[arg_pair_1] una búsqueda ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	r ||| float $a float $r	count=1
function_name	archivo paradox en ||| px	count=1
arg_pair	objeto watcher evperiodic ||| callable $callback	count=1
function_name	con el id ||| get element by id	count=1
function_name	las ||| fann get	count=3
function_name	una versión ||| string	count=2
function_name	la que las ||| set mlt	count=1
arg_pair	un ||| float $connection_rate	count=1
arg_pair	archivo local ||| string $local_file	count=2
function_name	el conjunto de resultados ||| finalize	count=1
arg_pair	campo dado ||| resource $fdf_document string $fieldname	count=1
return	especificado ||| int	count=2
function_name	mínimo de severidad ||| sybase min message severity	count=1
function	nombre de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	para el socket. ||| gearmanclient	count=1
function_name	el coseno para cada ||| cos	count=1
function_name	contexto de flujo con ||| stream context	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] action resource $fdf_document [arg_pair_2] int	count=4
namespace	la apariencia de ||| harudestination	count=1
function_name	emitir advertencias y devolver ||| using exceptions	count=1
arg_pair	de bytes str ||| string $str	count=1
namespace	si un número ||| function	count=1
namespace	conjunto y devuelve ||| quickhashintset	count=1
function_name	baudios ||| dio tcsetattr	count=2
function_name	ajustes del registro ||| registry	count=1
function_name	están ||| get	count=1
function_name	archivo codificado ||| mailparse	count=1
function_name	blob/clob ||| cubrid lob	count=1
function_name	devuelve todas las opciones ||| get all	count=1
arg_pair	asociada con pub_key_id ||| mixed $signature_alg	count=1
arg_pair	memcached::getmulti() con la ||| string $cas_tokens	count=1
function_name	nueva neurona candidata ||| out	count=1
function_name	descripción de la ||| cairo	count=1
function_name	glifo en puntos si ||| ps symbol	count=1
return	dado ||| array	count=1
function_name	frecuencia en la ||| min	count=1
return	fscanf() [return] similar ||| [return]	count=1
arg_pair	array ||| object $object	count=1
namespace	sin esperar a que ||| function	count=1
function_name	aún está sobre ||| valid	count=1
function_name	filas afectadas por la ||| fbsql affected rows	count=1
function_name	sobre la ubicaciones de ||| cert locations	count=1
function_name	la correlación ||| asort	count=1
function_name	advertencias ||| exceptions	count=1
function_name	de épocas ||| cand epochs	count=2
function_name	en la que las ||| doc frequency	count=1
arg_pair	imagen png desde ||| int $filters	count=1
function_name	índice de ||| index	count=1
function_name	(«kernel») a ||| add	count=1
function_name	[function_name_1] definidos ||| [function_name_2] [function_name_1]	count=4
arg_pair	horizontal ||| float $x	count=2
arg_pair	fichero ||| int $flags	count=1
arg_pair	ømq ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	conexión persistente [function_name_2] ||| [function_name_2] [function_name_1] string $username string $password	count=1
return	[return] un ||| [return]	count=3
arg_pair	pueden ||| zmqsocket $frontend	count=1
return	idéntica a fgets() excepto ||| string	count=1
function_name	devuelve la posición numérica ||| mb stripos	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] extension [function_name_2]	count=12
function_name	establecer los ||| set	count=1
function_name	devuelve el punto blanco ||| get image white point	count=1
function_name	mínima del ||| min	count=1
namespace	texto ||| function	count=2
function_name	del propio procesado ||| profiling	count=1
arg_pair	data ||| string $data int $length	count=1
function_name	capas ||| construct	count=1
function_name	rotación ||| set rotate	count=1
function_name	operaciones memcached::*bykey() ||| server	count=1
function_name	de la estructura de ||| fetchstructure	count=1
namespace	de mensaje ||| zmqdevice	count=1
function_name	filtro ||| filter	count=1
arg_pair	con el nombre ||| string $name	count=1
function	[function_name_1] recurso checkbox ||| [function_name_1] [arg_pair_2]	count=2
function_name	devuelve el nombre ||| entry name	count=1
arg_pair	especifica ninguna ||| string $collection	count=1
function_name	archivo temporal ||| uudecode all	count=1
arg_pair	idéntica a fgets() excepto ||| resource $handle	count=1
function_name	lo ||| frequency	count=1
return	tridimensional simulado ||| void	count=1
function_name	perfil ||| profile	count=1
arg_pair	domain por ||| string $domain string $codeset	count=1
function_name	una fila de ||| fetch	count=1
function_name	la respuesta del servidor ||| response	count=1
return	renderización de ||| int	count=1
arg_pair	colores que representan ||| int $numcolors	count=2
return	encuentre ||| void	count=1
function_name	obtiene los nombres ||| get	count=1
arg_pair	secreto para las ||| string $token string $token_secret	count=1
function_name	uri aplicando ||| uri	count=1
arg_pair	nombre de relation ||| string $name	count=1
function_name	de previas operaciones de ||| ldap count entries	count=1
function_name	la prueba probabilística ||| gmp prob	count=1
arg_pair	la apariencia de un ||| resource $fdf_document	count=1
function_name	propiedad enumerada o ||| int property value	count=1
function_name	el almaceén de ||| reset	count=1
function_name	html contenido ||| load html	count=1
function_name	del manejador [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	el tiempo de espera ||| query timeout	count=1
function_name	menos tantos documentos ||| mlt	count=1
arg_pair	de una expresión regular ||| string $pattern string $option	count=2
arg_pair	verifica ||| string $signature	count=1
function	pedido [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	cipher / ||| string $cipher	count=1
rest	un [function_2] ||| [return_1] [function_2]	count=3
function_name	implementa directo a la ||| images blob	count=1
arg_pair	puede especificar un ||| string $field	count=1
function_name	caracteres que aparecen en ||| addcslashes	count=1
function_name	siguiente fila del conjunto ||| fetch	count=1
function_name	argumento ||| exceptions	count=1
function_name	la relevancia del térmido ||| mlt boost	count=1
function_name	un ||| mailparse uudecode all	count=2
function_name	invertidas antes de los ||| addcslashes	count=1
function_name	longitud ||| len	count=4
arg_pair	las funciones socket_create() o ||| int $length	count=1
namespace	que contine la información ||| memcached	count=1
function_name	posición numérica de ||| stripos	count=1
return	a fgets() excepto que ||| string	count=1
arg_pair	establece [arg_pair] fuente ||| [arg_pair]	count=1
namespace	actual y ||| splfileobject	count=1
arg_pair	la de memcached::getmulti() ||| int $flags	count=1
arg_pair	el result set especificado ||| int $index	count=1
function_name	[function_name] de php ||| to [function_name]	count=1
function_name	imagen ||| set interlace scheme	count=2
arg_pair	los ||| int $linebreak array $callbacks	count=1
arg_pair	array de php var_array ||| array $var_array	count=1
arg_pair	por cada señal ||| resource $cpoint int $signal	count=1
return	la opacidad ||| float	count=1
function	[function_name_1] el texto ||| [function_name_1] type [arg_pair_2]	count=2
return	esta función devolverá la ||| array	count=1
function_name	csr certificate signing request ||| csr	count=1
arg_pair	de direcciones servicios ||| zmqsocket $frontend	count=1
function_name	devolverá la lista ||| source	count=1
arg_pair	parecida a sybase_connect() con ||| string $password string $charset	count=1
function_name	la descripción de la ||| cairo image surface get	count=1
function_name	y devolver un valor ||| set using	count=1
function_name	código de error ||| errcode	count=1
arg_pair	en el índice ||| mixed $index	count=1
arg_pair	probabilística de ||| gmp $a	count=1
function_name	idéntica a fgets() ||| fgetss	count=1
function_name	implementa directo ||| blob	count=1
arg_pair	charlist ||| string $charlist	count=1
function_name	haruannotation ||| urlannotation	count=1
function_name	la descripción de ||| cairo ps surface	count=3
function_name	de los modificadores ||| modifiers	count=2
function_name	servicios colas ||| construct	count=1
return	xml que ya ha ||| void	count=1
function_name	advertencias y devolver un ||| set using	count=1
function_name	le ||| count	count=1
function_name	siguiente petición xpath ||| xpath namespace	count=1
function_name	defina sobre las capas ||| construct	count=1
arg_pair	mensaje dado ||| resource $imap_stream int $msg_number	count=1
function_name	esta ||| ps open	count=1
namespace	la posición actual y ||| splfileobject	count=1
namespace	si ||| function	count=1
namespace	valor especial ||| rarexception	count=1
function_name	errores interno o ||| error	count=1
arg_pair	pueda con una ||| string $width	count=1
return	probabilística ||| int	count=1
function	selecciona [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	[function_name_1] punto ||| [function_name_2] [function_name_1]	count=1
function_name	que las palabras ||| mlt	count=1
namespace	usando la regla ||| harupage	count=1
arg_pair	a ||| string $password	count=1
arg_pair	espacios en ||| string $str	count=1
return	fichero dado de la ||| int	count=1
function_name	[function_name_1] recuperada ||| [function_name_2] [function_name_1]	count=4
function_name	recupera el id ||| id	count=2
function_name	como este serán ||| mlt min doc frequency	count=1
function_name	debería usarse para almacenar ||| set metadata	count=1
function_name	proxy ||| statement proxy	count=1
function_name	si [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	especifica la ||| gmagickdraw	count=1
namespace	método reflexionado ||| reflectionmethod	count=1
function_name	hash ||| crypt	count=1
function_name	campos [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
function_name	la impresión del texto ||| text pos	count=1
function_name	el número máximo ||| max num	count=1
namespace	forma parecida a sybase_connect() ||| function	count=1
function_name	es true ||| exceptions	count=1
function_name	transforma ||| transform	count=2
arg_pair	caso de éxito cero ||| string $zurl mixed $options	count=1
return	manifiesto de un ||| int	count=1
arg_pair	en repos_url ||| string $repos_url	count=1
function_name	de discontinuidad actual ||| pdf setdash	count=1
namespace	valores de array se ||| function	count=1
arg_pair	del ||| int $width	count=1
function_name	devuelve el número de ||| ifx num	count=1
function_name	de trabajo para la ||| job	count=1
return	almacenará en ||| bool	count=1
function_name	con un [function_name] ||| geoip domain [function_name]	count=2
return	incluye los ||| array	count=1
arg_pair	una cookie [arg_pair] ||| [arg_pair]	count=1
function_name	en el buzón actual ||| imap	count=1
function_name	con el id dado ||| by id	count=1
arg_pair	coniciden con el patrón ||| string $pattern bool $only_names	count=1
arg_pair	decir el valor de ||| int $face	count=1
function_name	[function_name_1] prototipo del ||| [function_name_1] [function_name_2]	count=1
return	indicado mediante ||| bool	count=1
return	domelement ||| domelement	count=1
function_name	declaración de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	si el algoritmo del ||| is	count=1
function_name	reinicia el ||| reset	count=1
function	ancho [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	de la fuente ||| harufont	count=2
function_name	la categoría general de ||| char type	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] field type [function_name_1]	count=1
arg_pair	caracter de salto de ||| bool $cut	count=1
function_name	función definida ||| uksort	count=1
return	objeto con propiedades ||| object	count=1
function	lista [arg_pair_2] ||| [function_name_1] resource $imap_stream [arg_pair_2]	count=1
return	disponibles después ||| array	count=1
arg_pair	una variable ||| string $name	count=2
arg_pair	el fichero a ||| bool $use_include_path	count=1
function_name	devuelve ||| get temp	count=1
function_name	connection [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	descripción de la función ||| cairo ps	count=1
function_name	encuentre un error ||| exceptions	count=1
function_name	dbplus_open() ||| chdir	count=1
return	el motor de ||| void	count=1
return	con ||| string	count=10
namespace	por lo menos ||| solrquery	count=1
function_name	recorte ||| clip	count=3
arg_pair	defina sobre las capas ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	el número de ||| ifx num	count=1
function_name	fila de datos del ||| fetch row	count=1
function_name	instancia de la clase ||| hwapi object	count=1
function_name	usa para convertir un ||| convert to data	count=1
arg_pair	efecto de botón ||| int $x	count=1
function_name	establece el iterador a ||| set iterator	count=1
function_name	del cursor: si todavía ||| count	count=1
function_name	corresponde al nombre ||| code by name	count=1
function_name	la que las palabras ||| set mlt min	count=1
return	graphicsmagick como una cadena ||| string	count=1
function_name	de ||| nsapi	count=1
function_name	código ||| strerror	count=1
function_name	función devolverá la lista ||| odbc	count=1
return	letras en ||| int	count=1
arg_pair	una función ||| string $name callable $callback	count=1
function_name	actual ||| get current	count=5
function_name	[function_name_1] pendientes ||| [function_name_1] cascade activation [function_name_2]	count=1
arg_pair	un assoc_array en ||| int $options	count=1
function_name	la descripción ||| cairo font face	count=1
function_name	recupera ||| get	count=5
function_name	que la consulta finalice ||| time allowed	count=1
arg_pair	negro especificados al rango ||| float $blackpoint	count=1
arg_pair	un hipervínculo ||| float $urx	count=1
function_name	un guid binario de ||| guid string	count=1
return	se encuentra disponible la ||| int	count=1
return	indicado mediante el ||| bool	count=1
arg_pair	de salto de string ||| string $break bool $cut	count=1
function_name	comporta de forma parecida ||| sybase	count=1
return	datos desde una llamada ||| string	count=1
function_name	de la fecha dada ||| date	count=1
function_name	datos del apuntador de ||| all	count=1
arg_pair	suma left a right ||| mixed $left mixed $right	count=1
function_name	bits ||| get bits	count=1
function_name	prueba probabilística de ||| gmp prob	count=1
arg_pair	acceso recursivamente path1 y ||| string $path1	count=1
arg_pair	cualquier abstracción ||| zmqsocket $backend	count=1
function_name	elimina ||| delete by queries	count=2
arg_pair	intenta eliminar cualesquiera bytes ||| resource $handle int $length	count=1
namespace	un numero como por ||| function	count=1
function_name	la versión de pdflib ||| pdf	count=1
function_name	la transformación actual de ||| trans matrix	count=1
arg_pair	se defina sobre ||| zmqsocket $frontend	count=1
arg_pair	ømq pueden hacer ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	conjunto [function_name] ||| [function_name]	count=1
function_name	numerador ||| task numerator	count=1
function_name	[function_name_1] campo de ||| [function_name_2] [function_name_1]	count=4
return	función de ||| bool	count=1
function_name	función geoip_country_code_by_name() devolverá ||| country code	count=1
function_name	función ||| open memory image	count=2
namespace	devuelve el número de ||| sqlite3	count=1
function	[function_name_1] archivo ||| [arg_pair_2] [function_name_1]	count=5
function_name	realiza una operación or ||| variant or	count=1
function_name	devuelve el número máximo ||| get mlt max num	count=1
function_name	elimina el documento con ||| delete	count=1
function_name	empleadas durante [function_name] entrenamiento ||| fann get cascade [function_name]	count=1
function_name	crea una nueva instancia ||| create processing instruction	count=1
arg_pair	datos de elemento ||| mixed $data	count=1
function_name	el siguiente entero mayor ||| trader ceil	count=1
function_name	de error sqlstate de ||| stmt sqlstate	count=1
function_name	seno para cada ||| trader asin	count=1
function_name	[function_name_1] parámetros ||| [function_name_1] scaling [function_name_2]	count=1
return	crea un ||| void	count=1
return	ocurra en ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] word [function_name_2]	count=2
function_name	lecturas distribuidas ||| set slave	count=1
arg_pair	de array1 que ||| array $array2	count=1
namespace	a través del descriptor ||| function	count=1
namespace	información ||| function	count=2
function_name	establece [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=6
namespace	y llama a la ||| gearmanworker	count=1
function_name	intenta borrar un servicio ||| win32 delete service	count=1
function_name	la puesta de ||| sunset	count=1
function_name	remarcación [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	imagen de pincel ||| imagesetbrush	count=1
return	obtiene ||| mixed	count=1
arg_pair	uri que ||| string $encoding	count=1
function_name	la parte [function_name] usada ||| set [function_name]	count=1
function	desde [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=8
arg_pair	[arg_pair_1] decir ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	para que ambos ||| add	count=1
function_name	de filas afectadas ||| ifx affected rows	count=2
namespace	puedan ||| function	count=1
arg_pair	de query ||| string $query	count=1
function_name	peso de la ||| getfontweight	count=1
arg_pair	adquirido ||| resource $sem_identifier bool $nowait	count=1
function_name	borrar un servicio de ||| delete service	count=1
function_name	array asociativo o indexado ||| array	count=1
function_name	configuración ||| reset config	count=1
function_name	después de ||| odbc data source	count=1
function_name	unix segundos desde 1.1.1970 ||| unixtojd	count=1
return	actuales en la ||| bool	count=1
function_name	menos ||| mlt min doc frequency	count=2
namespace	lucene soporta ||| solrutils	count=1
arg_pair	las ||| zmqsocket $backend	count=1
function_name	utf-8 ||| utf8 decode	count=2
return	los bordes de la ||| gmagick	count=1
return	api ||| string	count=1
function_name	filas ||| mysqli stmt num rows	count=1
function_name	[function_name_1] de unión ||| [function_name_1] [function_name_2]	count=5
function_name	retorna el número ||| mysqli num	count=1
function_name	[function_name_1] multi-dimensional con ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] la ||| [function_name]	count=3
arg_pair	devuelve el identificador ||| resource $link_identifier resource $result_identifier	count=1
arg_pair	pretende usarse ||| string $file_extensions	count=1
arg_pair	a x y ||| float $y	count=1
arg_pair	un nuevo ||| string $name	count=1
function_name	función devolverá ||| odbc data source	count=1
function_name	descripción de la ||| cairo pattern set extend	count=1
function_name	a este para que ||| add	count=1
function_name	si ||| query	count=1
function_name	[function_name_1] los datos ||| [function_name_1] [function_name_2]	count=2
arg_pair	ésta es una implementación ||| string $offset	count=1
function_name	[function_name] empleadas durante ||| [function_name] num	count=3
function_name	extrae cada ||| all	count=1
function_name	la descripción de la ||| cairo font face get	count=1
function_name	desplegar el logo ||| php logo	count=1
return	prueba probabilística de ||| int	count=1
function_name	algoritmos por ||| algorithm	count=1
arg_pair	de la columna especificada ||| resource $stmt mixed $column	count=4
arg_pair	número de puerto nombre ||| int $port	count=1
function_name	extensión de ||| extension	count=2
function_name	true ||| set	count=1
function_name	activa el ||| odbc	count=1
function_name	una operación and ||| and	count=1
rest	genera una [function_2] ||| [function_2] [return_1]	count=1
function_name	indicando error ||| using	count=1
arg_pair	provee un grado de ||| array $env array $other_options	count=1
arg_pair	solrquery::sethighlightalternatefield() ||| int $fieldlength string $field_override	count=1
function_name	entrada a las ||| fann get	count=2
arg_pair	png ||| int $quality int $filters	count=1
arg_pair	bordes de la imagen ||| int $y	count=1
function_name	entidades ||| libxml disable entity	count=1
function_name	menos tantos ||| mlt min doc	count=1
function_name	flujo ||| stream	count=12
namespace	este método se ||| mongocursor	count=1
function_name	solicitud actual ||| nsapi request	count=1
function_name	de retorno de gearman ||| return code	count=2
function	un repositorio [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	en la que ||| set	count=1
arg_pair	argumento offset ||| resource $lob_identifier int $offset	count=1
arg_pair	un bit es ||| gmp $a int $index	count=1
function_name	de byte en el ||| byte	count=1
namespace	inestables de ||| function	count=1
function_name	[function_name_1] compartido ||| [function_name_1] [function_name_2]	count=1
function_name	menos tantos documentos ||| min	count=1
function_name	[function_name_1] el número ||| [function_name_1] mlt max [function_name_2]	count=1
arg_pair	devolverá el hash ||| string $str	count=1
namespace	verisón serializada del hash ||| quickhashstringinthash	count=1
arg_pair	índice ||| int $flags	count=1
function_name	lugar de emitir ||| using	count=1
function_name	entrada para ||| set input	count=1
return	de una función en ||| bool	count=1
function_name	envía la acción con ||| service proxy action	count=1
arg_pair	una ||| string $msgid2	count=1
function_name	[function_name_1] estableciendo zend.enable_gc ||| [function_name_1] [function_name_2]	count=1
arg_pair	y php ||| resource $handle int $length	count=1
function_name	más de una instrucción ||| next	count=1
arg_pair	el evento que se ||| resource $event	count=1
arg_pair	y ordena números de ||| string $search_criteria	count=1
function_name	la supervisión [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	posee una ||| tailable	count=1
function_name	de ||| add	count=2
arg_pair	oid de la ||| resource $conn_identifier string $oid	count=1
arg_pair	compone una imagen en ||| gmagick $source int $compose	count=1
return	en búfer después ||| bool	count=1
arg_pair	que se ||| zmqsocket $frontend zmqsocket $backend	count=1
namespace	adjunta otro ||| imagickkernel	count=1
arg_pair	datos y ||| string $data	count=1
namespace	uno dos o ||| function	count=1
function_name	obtiene la ||| get	count=14
namespace	imagepolygon() cuando se dibuja ||| function	count=1
function_name	cada archivo ||| mailparse uudecode	count=1
function_name	script si el objeto ||| object	count=1
function_name	sybase_fetch_assoc() ||| sybase fetch	count=1
function_name	mongocollection::find() este método ||| find one	count=1
function_name	base ||| dbase	count=1
arg_pair	sobre un servidor imap ||| resource $imap_stream	count=1
arg_pair	de puerto nombre ||| string $host int $port	count=1
function_name	devuelve la cadena de ||| get	count=1
function_name	[function_name_1] conexión a ||| [function_name_1] [function_name_2]	count=1
function_name	información con ||| set info	count=1
return	lo menos tantos ||| solrquery	count=1
return	datos arbitrarios a todos ||| bool	count=1
function_name	filas afectadas por la ||| msql affected rows	count=1
namespace	dado por ||| function	count=11
function_name	devuelve el conjunto ||| cubrid get	count=1
function_name	de bézier desde ||| pdf curveto	count=1
function_name	devuelve la precisión ||| db2 field precision	count=1
namespace	el directorio ||| function	count=1
return	parámetros ||| int	count=1
arg_pair	el de estilo de ||| float $disp_time	count=1
return	[return] las diferentes ||| [return]	count=1
function_name	finaliza ||| end	count=6
function_name	descripción ||| cairo pattern get color stop rgba	count=1
namespace	una excepción de tipo ||| rarexception	count=1
function_name	devuelve [function_name] del ||| get [function_name]	count=1
namespace	este es ||| solrdocument	count=1
function_name	de tendencias ||| bias array	count=1
function_name	identidad de ||| identity	count=1
function_name	probabilística ||| gmp prob	count=1
arg_pair	tomará un string str ||| string $str	count=1
function_name	[function_name_1] estáticas ||| [function_name_2] [function_name_1]	count=2
function_name	característica conocia como cursores ||| tailable	count=1
function_name	dsn disponibles ||| odbc	count=1
namespace	por el ||| arrayiterator	count=2
function_name	bits mas significantes hasta ||| gmp scan0	count=1
function	fecha [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	menos ||| mlt	count=1
function_name	[function_name_1] de clase ||| [function_name_1] iterator [function_name_2]	count=1
arg_pair	unserializes a bson ||| string $bson	count=1
function_name	depurado en ||| apd	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] short [function_name_2]	count=2
namespace	que usa ||| function	count=1
function_name	advertencias y devolver ||| exceptions	count=1
function_name	el uso de ||| status	count=1
function_name	de pedido de ||| yp order	count=1
arg_pair	de 16 bytes en ||| bool $short_format	count=1
function_name	de verificación de ||| signature	count=1
arg_pair	la función cubrid_set_drop() ||| string $attr_name string $set_element	count=1
return	del texto que ||| string	count=1
function_name	entrada de ||| zip	count=1
namespace	el correspondiente objeto pdostatement ||| pdostatement	count=1
function	escala de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] [function_name_2] el ||| [function_name_2] [function_name_1]	count=8
arg_pair	la directiva whence como ||| int $whence int $pri	count=1
namespace	contiene más entradas ||| arrayiterator	count=1
arg_pair	de memcached::replace() con ||| int $expiration	count=1
arg_pair	método es una interfaz ||| string $collection	count=1
return	identificador ||| bool	count=1
function_name	espacio ||| namespace	count=1
function_name	un arreglo ||| db2 fetch array	count=1
function_name	el ecm ||| stagnation	count=1
function_name	extrae cada archivo codificado ||| uudecode	count=1
arg_pair	versión ||| string $msgid2	count=1
arg_pair	o directorio ||| string $path	count=1
function_name	de un caracter que ||| chr	count=1
function_name	una función definida por ||| uasort	count=1
function_name	el número [function_name_2] ||| [function_name_2] [function_name_1]	count=27
function_name	definidos por el parámetro ||| remap	count=1
function_name	establecer ||| color	count=1
function_name	añade un único componente ||| newt form add component	count=1
arg_pair	image usando el ||| resource $image	count=1
function_name	establece la ||| set image	count=2
return	devuelve un código de ||| int	count=1
namespace	base de las letras ||| harufont	count=1
function_name	el número de ||| set	count=1
function_name	id3v1 ||| get id3v1	count=1
function_name	hace un diff unificado ||| file diff	count=1
arg_pair	dominio ||| string $directory	count=1
function_name	tantos documentos como ||| min doc frequency	count=1
namespace	reducir el array a ||| function	count=1
function_name	longitud de un ||| len	count=1
function_name	información sobre ||| get status	count=1
function_name	el límite del recurso ||| limit	count=1
function_name	es true entonces ||| using	count=1
function_name	iso ||| isocontrol	count=1
arg_pair	ciertas propiedades de la ||| resource $result int $field_offset	count=1
function_name	abre un blob ||| ibase blob echo	count=1
arg_pair	vector ||| resource $ann array $input_vector	count=1
function_name	trabajo ||| ping	count=1
function_name	de sisitema de ||| stream wrapper register	count=1
function_name	recurso de sentencias ||| stmt	count=1
function_name	las ||| set mlt min doc frequency	count=2
arg_pair	que se identificaron ||| resource $connection string $client_identifier	count=1
namespace	hash en el mismo ||| quickhashinthash	count=1
function	[function_name_1] de operaciones ||| [arg_pair_2] [function_name_1]	count=3
function_name	advertencias ||| set using exceptions	count=2
function_name	el coseno hiperbólico ||| cosh	count=1
function_name	inserta la entrada descrita ||| dba	count=1
function_name	escritura del codificador ||| get writing	count=1
arg_pair	clave dada por key ||| int $max_acquire	count=1
namespace	array después de ||| splfixedarray	count=1
function_name	drop por ||| drop	count=1
namespace	archivo designado por filename ||| function	count=1
function_name	no predeterminada ||| default	count=1
function_name	convierte un guid binario ||| guid	count=1
function_name	el ||| add	count=2
namespace	una ||| rarexception	count=1
function_name	para que la clave ||| by key	count=3
arg_pair	local_socket ||| string $local_socket	count=1
namespace	eleménto ||| xmlreader	count=1
arg_pair	nombre de archivo proporcionado ||| resource $p string $filename	count=1
arg_pair	función proporcionada por el ||| callable $user_function	count=1
arg_pair	str de acuerdo a ||| string $charset	count=1
function_name	[function_name_1] único componente ||| [function_name_2] [function_name_1]	count=1
function_name	dio_read() ||| dio	count=1
function_name	crea una nueva instancia ||| create processing	count=1
arg_pair	proporcionada por el ||| int $num_output callable $user_function	count=1
function_name	llena ||| fill	count=2
function	almacena [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	la respuesta original ||| response	count=1
arg_pair	nodo origen a una ||| domdocument $doc string $uri	count=1
arg_pair	los radios de las ||| float $rx float $ry	count=1
function_name	componente de estadísticas ||| set stats	count=1
function_name	del continente que corresponde ||| continent	count=1
arg_pair	de callback ||| callable $callback mixed $data	count=1
function_name	[function_name_1] [function_name_2] estilo url a partir ||| [function_name_2] [function_name_1]	count=4
arg_pair	para la ||| resource $ann	count=1
return	la recuperación ||| void	count=1
return	host y la ||| array	count=1
arg_pair	y puerto específicado ||| string $host_ip int $port	count=1
namespace	los bordes ||| gmagick	count=2
function_name	y ca_info establecidos ||| capath	count=1
function_name	muestreo o tasa ||| sample bitrate	count=1
function_name	se van a ||| set start	count=1
function_name	escala ||| fann scale	count=2
namespace	invertidas antes ||| function	count=1
function_name	averigua ||| registered	count=1
arg_pair	excepto que fgetss() ||| resource $handle	count=1
arg_pair	otros caracteres ||| string $str	count=1
function_name	de conexión necesario ||| connect	count=1
function_name	serán ignoradas ||| set mlt	count=1
function_name	del marco de acumulación ||| aggregate	count=1
function_name	unrar ||| set using exceptions	count=2
function_name	devuelve [function_name_2] ||| [function_name_1] white [function_name_2]	count=1
function_name	desplegar el logo de ||| php logo guid	count=1
arg_pair	[arg_pair] en ||| [arg_pair]	count=4
function_name	devolverá la ||| source	count=1
function_name	blanco del tamaño ||| imagecreate	count=1
function_name	en segundo plano para ||| background	count=2
function_name	especificada ||| sqlsrv	count=1
function_name	matriz con los nombres ||| names	count=1
function_name	nodo de atributo dado ||| set attribute node	count=1
arg_pair	fichero a un string ||| string $filename	count=1
arg_pair	para las subsecuentes ||| string $token	count=1
arg_pair	archivo en ||| int $use_include_path	count=1
function_name	devuelve ||| get preg	count=1
function_name	de una imagen izquierda ||| stereo image	count=1
function_name	establece [function_name_2] ||| [function_name_1] candidate stagnation [function_name_2]	count=1
arg_pair	fichero ||| string $filename bool $use_include_path	count=1
function_name	de error de socket ||| socket strerror	count=1
function_name	de ingres dada ||| ingres	count=1
function_name	de casillas de verificación ||| newt checkbox tree find item	count=1
function_name	advertencia esta ||| ps open memory	count=1
namespace	apariencia de la ||| harudestination	count=1
arg_pair	establece un fichero que ||| int $dictionary_link string $file	count=1
function_name	cascada ||| cascade	count=1
function_name	de [function_name] ||| remove [function_name]	count=1
function_name	la lista ||| ps	count=1
function_name	[function_name_1] iterador interno ||| [function_name_2] [function_name_1]	count=4
function_name	gzip .gz para ||| gzopen	count=1
function_name	definición de color dada ||| ncurses color content	count=1
function_name	y lo encripta ||| encrypt	count=1
namespace	un nuevo limititerator ||| limititerator	count=1
function_name	de palabra máxima ||| max word	count=1
function_name	[function_name_1] posición numérica ||| [function_name_1] [function_name_2]	count=2
function_name	petición [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	en el parámetro ||| addcslashes	count=1
function_name	y verificar las extensiones ||| autoload extensions	count=1
function_name	una sentencia sql sqlite ||| sqlite escape	count=1
function_name	recibir datos subordinados ||| socket cmsg space	count=1
function_name	de bit empleado durante ||| bit	count=1
arg_pair	cubrid_set_query_timeout() se usa ||| int $timeout	count=1
namespace	cada carácter que es ||| function	count=1
function_name	plural de ||| ngettext	count=1
function_name	de bits ||| get bits	count=1
function_name	entidades externas ||| libxml disable entity	count=1
function_name	devuelve el prototipo del ||| get prototype	count=1
return	o cualquier abstracción que ||| zmqsocket	count=1
arg_pair	una implementación de ||| string $value	count=1
namespace	y php del ||| function	count=1
arg_pair	devuelve un array ||| array $array	count=1
arg_pair	de puerto nombre de ||| string $host int $port	count=1
function_name	la descripción de la ||| ps surface	count=3
arg_pair	el contenedor en ||| resource $fdf_document string $frame_name	count=1
arg_pair	del final de str ||| string $str string $character_mask	count=1
arg_pair	dada con el método ||| string $method	count=1
function_name	un umbral ||| threshold image	count=1
arg_pair	específica en la ||| int $field_number	count=1
function_name	del apuntador de ||| mailparse uudecode	count=1
function_name	elimina una variable con ||| remove var	count=1
arg_pair	imagen ||| int $height	count=1
arg_pair	nombres de ||| string $class_name	count=1
function_name	sobre un ||| get	count=1
function_name	la última operación frontbase ||| fbsql errno	count=1
function_name	permite al entrenamiento continuar ||| fann	count=1
arg_pair	función va aquí ||| cairosurfacepattern $pattern	count=1
function_name	que apunta conn_handle ||| commit	count=1
function_name	imagen ||| image interlace scheme	count=2
function_name	[function_name] de ||| get persistent [function_name]	count=1
function_name	insert ejecutada correctamente ||| insert	count=1
arg_pair	una anotación ||| string $type string $optlist	count=1
function_name	[function_name_1] la altura ||| [function_name_2] [function_name_1]	count=1
function_name	usado [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	los datos dados por ||| temporary	count=1
arg_pair	[arg_pair] etiqueta ||| [arg_pair]	count=3
function_name	sets ||| tie breaker	count=2
function_name	limpia el bit ||| gmp clrbit	count=1
namespace	mensaje de error que ||| function	count=1
arg_pair	tridimensional simulado aclarando ||| int $height	count=1
function_name	extensiones de ||| spl autoload extensions	count=1
function_name	especificado por su nodename ||| named	count=1
arg_pair	casi idéntico al de ||| int $limit	count=1
function_name	alfa ||| alpha	count=1
function_name	biblioteca ||| set	count=1
function_name	ellos ||| array map	count=2
function_name	filas que [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	una comprobación de indices ||| array udiff assoc	count=1
function_name	nodo representa sólo texto ||| text	count=1
function_name	devuelve el número de ||| imap	count=1
namespace	iterador al inicio ||| arrayiterator	count=1
function_name	multibyte ||| mb ereg search init	count=2
function_name	tantos documentos como ||| doc	count=1
namespace	un phar tiene ||| phar	count=1
function_name	[function_name_1] equilibrado ||| [function_name_1] [function_name_2]	count=1
function_name	el database ||| database	count=1
arg_pair	con key y value ||| string $key string $value	count=1
namespace	archivos tar este ||| phardata	count=1
function_name	una matriz que ||| field names	count=1
function_name	vacía el contenido ||| mysqlnd qc clear	count=1
arg_pair	una ||| traversable $iterator	count=1
function_name	devuelve un informe ||| get	count=1
namespace	imagen a color ajustando ||| gmagick	count=1
namespace	a remote ||| tokyotyrant	count=1
arg_pair	y php del texto ||| resource $handle int $length	count=1
return	url y [return] ||| [return]	count=3
arg_pair	blanco u otros ||| string $str	count=1
function	de paginación [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] el conjunto ||| [function_name_2] [function_name_1]	count=1
function_name	palabras serán ||| mlt	count=1
namespace	directorio virtual actual ||| function	count=1
function_name	establece el manejador ||| set	count=1
arg_pair	un enlace web ||| resource $pdfdoc float $lowerleftx	count=1
arg_pair	en el modo ||| int $mode int $pri	count=1
function_name	variables ||| variables	count=3
arg_pair	carácter unicode por su ||| string $charactername int $namechoice	count=1
arg_pair	con key ||| string $key	count=1
function_name	de la consulta ||| query	count=1
namespace	y imagefilledpolygon() cuando se ||| function	count=1
function_name	función devuelve [function_name] ||| get [function_name]	count=1
namespace	llaves que se ||| function	count=1
function_name	columnas que identifican de ||| odbc specialcolumns	count=1
function_name	guarda la estructura ||| fann save	count=1
function_name	palabras dentro ||| str word	count=1
return	los ca_path y ||| array	count=1
function	[function_name_1] secreto para ||| [function_name_1] [arg_pair_2]	count=2
function_name	acción con parámetros al ||| gupnp service proxy action	count=1
function_name	elemento está ||| element	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] extension [function_name_2]	count=3
arg_pair	intérprete ||| resource $parser	count=4
function_name	cliente de base de ||| client	count=1
function_name	buzón ||| imap	count=5
function_name	busca el siguiente índice ||| next	count=1
function_name	consulta de ||| query	count=6
function_name	de bcompiler ||| bcompiler	count=1
namespace	ventana o su área ||| function	count=1
function_name	espacio de nombres especificado ||| is default namespace	count=1
function_name	enlace ||| link	count=1
arg_pair	[arg_pair_1] resolución deseada ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	una línea en ||| line	count=1
function_name	una nueva página ||| page	count=1
arg_pair	str de ||| string $charset	count=1
arg_pair	para ||| mysqlnd_connection $connection	count=1
function	[function_name_1] información dad ||| [arg_pair_2] [function_name_1]	count=1
function_name	la descripción de ||| cairo font face	count=1
namespace	dispositivos ||| zmqdevice	count=1
function_name	este serán ignoradas ||| mlt min doc frequency	count=1
namespace	caracteres del inicio ||| function	count=1
return	intenta eliminar cualesquiera ||| string	count=1
arg_pair	una ||| string $address	count=1
function_name	calcula la intersección de ||| uintersect	count=1
function_name	entrada de ||| entry	count=1
function_name	escalar [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	devuelve el ítem ||| get	count=1
function_name	página para ajustarse al ||| fit r	count=1
function_name	devuelve los comentarios ||| get doc comment	count=2
function_name	gd2 ||| imagecreatefromgd2part	count=1
return	claves ||| array	count=1
function_name	conexión a ||| connect	count=2
namespace	nobre del fichero ||| throwable	count=1
function_name	la codificación ||| mb detect encoding	count=1
function_name	que fgetss() ||| fgetss	count=1
function_name	publicación de ||| fdf get ap	count=1
namespace	otro núcleo («kernel») ||| imagickkernel	count=1
function_name	la ||| mlt min doc	count=2
namespace	das xml que ||| sdo_das_xml	count=1
function_name	base [function_name] universal database ||| [function_name]	count=1
function_name	los valores ||| uasort	count=1
function_name	formulario proporcionado ||| newt run form	count=1
namespace	este es un ||| solrdocument	count=1
function_name	en este servicio ||| gupnp service	count=1
function_name	el nombre ||| entry name	count=1
return	instancia ||| yaf_application	count=1
function_name	conjunto [function_name_2] ||| [function_name_1] [function_name_2] object	count=1
function_name	sobre ||| get status	count=2
arg_pair	de alimentarlo a una ||| resource $ann array $input_vector	count=1
function_name	datos de entrenamiento desde ||| train from callback	count=1
function_name	desecha todos los ||| unique image	count=1
arg_pair	path1 y ||| int $rev1	count=1
function_name	establece el identificador del ||| oci set	count=1
arg_pair	un directorio y a ||| resource $fam	count=1
function_name	la caché del ||| apc	count=1
function_name	desde una ||| from	count=1
function_name	siguiente entero mayor para ||| ceil	count=1
function_name	[function_name_1] si una ||| [function_name_2] [function_name_1]	count=2
function_name	cubrid_lob2_new() u obtenido de ||| cubrid lob2 close	count=1
function_name	el ancho de la ||| width	count=1
function_name	devuelve el resto ||| get	count=1
function_name	cierra el gestor de ||| close	count=1
function_name	de la siguiente fila ||| fetch	count=1
function_name	recodificación dada ||| recode file	count=1
function_name	tipo mime ||| type to mime type	count=1
return	que se van a ||| solrquery	count=1
function_name	cursor: si todavía no ||| count	count=1
arg_pair	selecciona un documento ||| resource $fdf_document string $url	count=1
arg_pair	función va aquí ||| cairogradientpattern $pattern int $index	count=1
function_name	clave usando una función ||| uksort	count=1
function_name	del apuntador ||| all	count=1
function_name	el tipo mime ||| type to mime type	count=1
arg_pair	[arg_pair_1] rectángulo comenzando ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	punto medio enx y ||| float $alpha float $beta	count=2
function_name	[function_name_1] flujo ||| [function_name_2] [function_name_1]	count=4
function_name	texto ||| set text	count=3
function_name	permisos del fichero ||| eio fchmod	count=1
namespace	el color de ||| gmagickdraw	count=1
namespace	virtualmente la [namespace] ||| [namespace]	count=1
function_name	delimitadores indicados en ||| explode	count=1
arg_pair	representan una fecha gmt ||| int $year int $is_dst	count=1
arg_pair	callback ||| mixed $callback	count=1
arg_pair	botón tridimensional simulado ||| int $x int $y	count=1
return	barras invertidas antes ||| string	count=1
function_name	servidor ssh2 ya ||| ssh2	count=1
function_name	[function_name_1] de servidores ||| [function_name_1] [function_name_2]	count=1
function_name	salida como echo ||| output	count=1
arg_pair	parchea una cadena str ||| string $str	count=1
function_name	máximo de tokens ||| mlt max	count=1
function_name	que ambos puedan ||| kernel	count=1
function_name	los campos ||| field	count=1
function_name	función de error ||| error function	count=2
return	en la ||| array	count=1
arg_pair	infilename ||| string $infilename	count=1
function_name	escala a aplicar ||| scale	count=1
arg_pair	hipervínculo ||| float $lly	count=1
arg_pair	y ||| zmqsocket $frontend zmqsocket $backend	count=1
return	función retorna [return] nuevo resource ||| [return]	count=1
return	cadena de un ||| string	count=1
namespace	con las claves ||| gmagick	count=1
return	llama a la ||| bool	count=1
arg_pair	devuelve un ||| resource $connection	count=3
function_name	una función definida por ||| uksort	count=1
arg_pair	excepto que ||| int $length	count=1
function_name	decide si ||| qc set is select	count=1
function_name	reinició la ||| errors	count=1
function_name	el certificado ||| pkcs7 sign	count=1
function_name	funcionalidad de color en ||| color	count=1
function_name	mediante el uso de ||| status	count=1
namespace	buscarán ||| function	count=1
namespace	de solicitud dado por ||| function	count=1
function_name	etiqueta id3v1 ||| id3v1 tag	count=1
function_name	el trazado actual ||| pdf closepath	count=1
function_name	de ||| ncurses color set	count=2
arg_pair	algoritmo ||| string $algorithm string $lib_dir	count=2
function_name	descripción ||| image surface get	count=1
namespace	oauth ||| oauth	count=2
arg_pair	un ||| int $result_type	count=1
function_name	la solicitud ||| request	count=1
return	php del texto ||| string	count=1
return	como este serán ignoradas ||| solrquery	count=1
function_name	palabras que ||| set mlt	count=1
namespace	seguimiento ||| mongocursor	count=2
function_name	datos dbase con el ||| dbase	count=1
function_name	una imagen en blanco ||| imagecreate	count=1
arg_pair	los bordes de ||| int $y	count=1
function_name	de modo de ||| mode	count=1
function_name	tokens php usando el ||| token get all	count=1
function_name	error una excepción ||| exceptions	count=1
return	medido como el ||| int	count=1
function_name	ruta efectiva del proceso ||| current route	count=1
return	la posición actual y ||| int	count=1
function_name	bytes de [function_name_2] ||| bool [function_name_1] [function_name_2]	count=1
function_name	copia los datos ||| copy to array	count=1
arg_pair	número de puerto ||| string $host int $port	count=1
namespace	iterator interno ||| limititerator	count=2
function_name	error de la última ||| last error	count=1
arg_pair	charlist ||| string $str string $charlist	count=1
function_name	campo especificado [function_name_2] ||| [function_name_2] [function_name_1] is null	count=1
arg_pair	[arg_pair] arco circular ||| [arg_pair]	count=1
namespace	afecta al estado del ||| mongocursor	count=1
namespace	la imagen que está ||| function	count=1
function_name	el error sqlstate ||| sqlstate	count=1
function_name	una cadena ||| string	count=2
function_name	unrar encuentre un error ||| using	count=1
function_name	mensaje de ||| curl strerror	count=1
function_name	acción javascript ||| javascript action	count=1
namespace	de un caracter ||| function	count=1
function_name	[function_name_1] [function_name_2] dado ||| [function_name_2] [function_name_1]	count=8
function_name	información de errores ||| errors	count=1
function_name	especificado ||| chr	count=1
function_name	[function_name_1] al conectar ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] vacío ||| [function_name_2] [function_name_1]	count=2
return	de un string utilizando ||| string	count=1
function_name	ser usado para incrementar ||| set session	count=1
function_name	antepone un contenido ||| prepend	count=1
arg_pair	un array asociativo un ||| resource $stmt	count=1
function_name	calcula la raíz cuadrada ||| gmp sqrtrem	count=1
namespace	se encuentrae un eleménto ||| xmlreader	count=1
function_name	de espera de ||| cubrid set query timeout	count=1
return	array con los alias ||| array	count=1
return	a una única ||| void	count=1
function_name	obtiene ||| get filename	count=1
arg_pair	hacer de intermediarios de ||| zmqsocket $backend	count=1
namespace	el resultado a ||| splfileobject	count=1
function_name	usando una función ||| uasort	count=1
arg_pair	por el algoritmo ||| string $algorithm string $lib_dir	count=1
function_name	lista personal ||| pspell config personal	count=1
arg_pair	como una función escalar ||| string $name mixed $callback	count=1
function_name	diccionario ||| crack	count=1
function_name	adjunta otro ||| add	count=1
function_name	von einer mime kopfzeile ||| iconv mime encode	count=1
namespace	como mysql_query() lo hace ||| function	count=1
arg_pair	memcached::cas() con ||| float $cas_token	count=1
arg_pair	nueva definición ||| float $height	count=1
namespace	predeterminado de ||| directory	count=1
arg_pair	datos emita ||| string $event_name1 string $event_name2	count=1
function_name	devolver un valor ||| set	count=1
function_name	color directo ||| ps makespotcolor	count=1
arg_pair	forma parecida a sybase_connect() ||| string $servername string $username	count=1
arg_pair	si key ya ||| string $key	count=1
function_name	la metainformación de ||| has metadata	count=1
arg_pair	prepara para una ||| resource $id string $type	count=1
function_name	un proceso abierto ||| status	count=1
function_name	núcleo («kernel») a ||| add kernel	count=1
arg_pair	envía un mensaje ||| integer $mode	count=1
function_name	curl y ||| curl	count=1
function_name	einer mime kopfzeile ||| mime	count=1
function	[function_name_1] recurso de ||| [function_name_1] [arg_pair_2]	count=3
namespace	número de filas de ||| sqlite3	count=1
function_name	lee ||| read	count=13
namespace	del fichero ||| splfileinfo	count=2
function_name	el uso de ||| scache meminfo	count=1
namespace	a sybase_connect() ||| function	count=1
return	lista ||| int	count=1
function_name	los ciclos de basura ||| gc collect cycles	count=1
function_name	cunstruye el ||| string	count=1
function_name	documento pdf importado ||| pdf process pdi	count=2
function_name	id de la ||| id	count=1
function_name	categoría general ||| char type	count=1
namespace	arbitrarios a todos ||| gearmanclient	count=1
function_name	codificación de ||| mb	count=1
function_name	el número de campos ||| num fields	count=5
function_name	al ||| dio write	count=1
arg_pair	a ingres_fetch_array() con una ||| int $result_type	count=1
namespace	[namespace] implosionados por ||| [namespace]	count=3
function_name	del conjunto ||| cubrid	count=1
return	una función ||| void	count=2
arg_pair	un bloque [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	la frecuencia en la ||| min	count=1
function_name	descripción de la ||| image surface get	count=1
function_name	buscarán ||| chdir	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] image [function_name_2]	count=13
function_name	carácter de control ||| iscntrl	count=1
return	de seguimiento tailable ||| mongocursor	count=1
function_name	las palabras ||| mlt min doc frequency	count=1
namespace	number [namespace] ||| [namespace]	count=1
function_name	con algoritmos por ||| algorithm	count=1
function_name	utilizar para [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	las llaves foraneas de ||| db2 foreign keys	count=1
function_name	para ||| ping	count=1
function_name	la ||| odbc data	count=1
function_name	pcos [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	asociado con port para ||| int $port	count=1
function_name	de memcached::prepend() con la ||| prepend	count=1
function_name	phar ||| phar filename	count=1
namespace	de archivo ||| function	count=1
function_name	escape de caracteres ||| escape	count=1
arg_pair	una ||| float $gamma int $channel	count=1
function_name	una búsqueda ||| search	count=1
function_name	sido creado ||| add	count=1
function_name	[function_name_1] de épocas ||| [function_name_1] out [function_name_2]	count=4
function_name	archivo dado y extrae ||| mailparse uudecode all	count=1
function_name	errores interno ||| error	count=1
function_name	última operación ||| errno	count=3
namespace	procesa línea por línea ||| function	count=1
function_name	épocas permitido ||| epochs	count=1
function_name	palabras que ||| set mlt min	count=1
function	para el [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	old_file y new_file y ||| string $old_file string $new_file	count=1
function_name	si la extensión ||| extension	count=1
function_name	nombres de las interfaces ||| interface names	count=1
function_name	oracle ||| oci bind	count=1
function_name	argumentos de la acción ||| gupnp service action	count=1
function_name	[function_name_1] versión menor ||| [function_name_2] [function_name_1]	count=1
arg_pair	que coincida con ||| mixed $fill	count=2
return	la función usa la ||| int	count=1
function_name	la frecuencia de ||| frequency	count=1
function_name	mensaje de error ||| error	count=3
function_name	un segundo ||| add types	count=1
namespace	época ||| function	count=1
function_name	ya ha sido creado ||| add types	count=1
function_name	secuencia de mensaje para ||| imap msgno	count=1
arg_pair	por dn se ||| resource $link_identifier string $dn	count=1
arg_pair	el valor ||| mixed $value	count=2
arg_pair	en subject coincidencias de ||| mixed $subject int $limit	count=1
function_name	conjunto de resultados como ||| cubrid fetch	count=1
function_name	pares de sustitución ||| repl	count=1
namespace	para ||| oauth	count=1
function_name	línea [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	convierte left y right ||| mixed $right	count=1
function_name	descripción de la ||| cairo pattern get surface	count=1
function_name	con una imagen ||| image	count=2
namespace	objeto soapserver entre peticiones ||| soapserver	count=1
namespace	retorno ||| gearmanworker	count=1
arg_pair	proporcionado ||| float $value	count=1
function_name	el término [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	el puntero interno a ||| data seek	count=1
function_name	añade una ||| bbcode add	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] used [function_name_2]	count=1
function_name	[function_name_1] activación de ||| [function_name_2] [function_name_1]	count=6
function_name	el uso ||| get status	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] resource $train_data [arg_pair_2]	count=2
function_name	fann_get_mse() en fann_get_cascade_candidate_stagnation_epochs() ||| change fraction	count=1
function_name	odbc_do() [function_name] ||| [function_name]	count=1
function_name	devuelve un objeto simplexmliterator ||| get children	count=1
function_name	de control con ||| gupnp control	count=1
function_name	palabras que no ||| mlt	count=1
function	de campo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	busca un ||| resource $checkboxtree	count=1
arg_pair	una función o ||| string $filename	count=1
arg_pair	memcached::getmulti() con ||| string $cas_tokens	count=1
function_name	mínimo ||| sybase min	count=1
return	de la variable php ||| string	count=1
function_name	archivo codificado mediante ||| mailparse	count=1
namespace	método no ||| mongocursor	count=1
function_name	seridor ||| msql select db	count=2
function_name	descripción ||| cairo surface mark dirty rectangle	count=1
return	información sobre los ||| array	count=2
function_name	este ||| set	count=1
function_name	tamaño actual ||| entry	count=1
namespace	tablas que ||| function	count=1
function_name	los ||| set	count=1
function_name	la frecuencia en la ||| set	count=1
arg_pair	el ||| int $cipher string $key	count=2
namespace	a ||| splfileobject	count=1
function_name	y ||| mailparse uudecode	count=1
function_name	la clave /status ||| status	count=1
function_name	la clave de columna ||| array column	count=1
namespace	pid del ||| mongoid	count=1
function_name	escribe una cadena ||| write	count=1
function_name	en el cuál cae ||| days	count=1
function_name	de entorno de apache ||| apache setenv	count=1
function_name	le permite al entrenamiento ||| fann get	count=1
arg_pair	object es ||| object $object string $class_name	count=1
function_name	depurado ||| apd	count=1
function_name	color ||| ncurses color	count=1
function_name	de byte en ||| get byte	count=1
namespace	división realizada por ||| function	count=1
arg_pair	[arg_pair_1] renombra/mueve ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	de la cookie ||| cookie	count=1
function_name	array [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	devuelve el seno del ||| sin	count=1
function_name	a todos los servidores ||| ping	count=1
function	imagen y [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	sistema de ||| bool	count=1
function_name	devuelve el último ||| enchant broker get error	count=1
function_name	se muestra inicialmente abierta ||| set opened	count=1
function_name	un ||| prob prime	count=2
arg_pair	varios arrays ||| array $array1	count=1
function_name	en ||| using exceptions	count=2
function_name	en otra en ||| compositeimage	count=1
arg_pair	de grafemas ||| int $extract_type	count=1
function_name	los datos del apuntador ||| mailparse	count=1
function_name	la descripción ||| cairo scaled font	count=5
function_name	sido ||| add	count=1
namespace	función definida ||| arrayiterator	count=2
function_name	[function_name_1] fecha ||| [function_name_1] [function_name_2]	count=3
arg_pair	evento que se ||| resource $event mixed $fd	count=1
namespace	pueden hacer de ||| zmqdevice	count=1
return	lee todos los ||| array	count=2
function_name	establece la zona horaria ||| set	count=1
function_name	elemento documento ||| document	count=1
return	salida estándar en ||| bool	count=1
arg_pair	forma ||| string $password	count=1
function_name	rra por ||| archive	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] facet [function_name_2]	count=2
return	[return] de error ||| [return]	count=2
function_name	el grosor de ||| imagesetthickness	count=1
function_name	salida como ||| sandbox output	count=1
return	de intensidad [return] su ||| [return]	count=1
function_name	memcached::touch() con la ||| touch by	count=1
function_name	ordenados por ||| sort	count=2
namespace	usarlo por ||| function	count=1
function_name	sentencias ||| stmt	count=1
namespace	actual usando ||| harupage	count=1
arg_pair	comporta de forma parecida ||| string $password	count=1
namespace	proveedor ||| oauthprovider	count=1
function_name	nombre de la ||| db2 field name	count=1
arg_pair	índice ||| imagickpixel $color	count=1
function_name	función usa la ||| gmp prob prime	count=1
arg_pair	[arg_pair_1] y path2 ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	de la imagen ||| image interlace scheme	count=1
arg_pair	en el índice especificado ||| mixed $index	count=1
function_name	error de [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	principio del flujo ||| rewind	count=1
function_name	acumulación y recuperar ||| aggregate	count=1
function_name	que ||| start	count=1
function_name	entrada de ||| zip entry filesize	count=1
function_name	recupera información sobre ||| proc get status	count=1
arg_pair	primera ocurrencia ||| string $haystack	count=2
function_name	comando ||| tailable	count=1
namespace	tantos documentos ||| solrquery	count=1
function_name	devuelve el [function_name_2] ||| [function_name_1] white [function_name_2]	count=1
function_name	blanco de la cromaticidad ||| white	count=1
function_name	por la imagen del ||| image	count=1
arg_pair	string haystack pajar ||| string $haystack	count=3
function_name	descripción de ||| cairo font face	count=1
function_name	atributos y ||| get attributes	count=1
function_name	parámetros url no ||| params	count=1
function_name	mismo nodo ||| same node	count=1
function_name	entorno [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	plantilla y devuelve el ||| yaf_view_simple	count=1
function_name	control ||| control point callback	count=1
function_name	del campo a ||| alternate field length	count=2
arg_pair	de ||| resource $imap_stream	count=2
arg_pair	anotación rectangular ||| float $lly	count=1
arg_pair	datos cubrid y guarda ||| resource $conn_identifier	count=1
function_name	línea establecida por splfileobject::setmaxlinelen() ||| max line len	count=1
arg_pair	una estructura de datos ||| int $num_data int $num_input	count=1
function_name	reescritura establecidas ||| rewrite	count=1
arg_pair	de un campo es ||| resource $fdf_document string $field_name	count=1
arg_pair	fila específica [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=6
arg_pair	con la key con ||| string $key	count=1
function_name	página para ajustarse al ||| set fit r	count=1
function	[function_name_1] [arg_pair_2] automática ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=7
function_name	verificar las extensiones de ||| autoload extensions	count=1
function	un campo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	sistema ||| string	count=1
function_name	ya abierto y devuelve ||| get	count=1
arg_pair	tridimensional simulado ||| int $height	count=1
namespace	documentos como ||| solrquery	count=1
function_name	la última modificación de ||| mdtm	count=1
return	una de ||| int	count=1
function_name	[function_name_1] un array ||| [function_name_2] [function_name_1]	count=1
namespace	el objeto imagickpixel como ||| imagickpixel	count=1
arg_pair	del haystack pajar ||| string $haystack	count=1
function	[function_name_1] proporcionado que ||| [arg_pair_2] [function_name_1]	count=4
return	hash de ||| string	count=1
return	con el ||| string	count=6
arg_pair	de un ancho ||| float $width	count=1
function_name	[function_name_1] resultado ||| [function_name_2] [function_name_1]	count=3
namespace	llama ||| gearmanworker	count=1
namespace	[namespace] en un ||| [namespace]	count=4
function_name	consulta coincide con este ||| require	count=1
function_name	imagen y la escala ||| image	count=1
function_name	texto utf-7 modificado ||| imap utf7 encode	count=1
function_name	imagen y la devuelve ||| get image	count=1
function_name	la que las palabras ||| set mlt min doc	count=1
namespace	parte de ||| tidynode	count=1
function_name	región de [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	control de ||| gupnp control point	count=1
function_name	tipos de codificaciones admitidas ||| mb list encodings	count=1
function_name	[function_name_1] cuantía ||| [function_name_2] [function_name_1]	count=2
function_name	basándose ||| ngvalidate	count=1
arg_pair	simulado aclarando y ||| int $width int $height	count=1
arg_pair	ancho ||| string $text float $width	count=1
namespace	en lugar ||| rarexception	count=1
function_name	guardará los pares ||| repl	count=1
function_name	paginación ldap [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	conjunto de ||| msql	count=2
arg_pair	especial a menudo ||| int $dev	count=1
arg_pair	cubrid_set_drop() ||| string $set_element	count=1
namespace	mongo ||| mongocursor	count=1
function_name	serán ignoradas ||| doc frequency	count=1
arg_pair	len bytes de ||| int $flags	count=1
function_name	distribución de lecturas a ||| get slave	count=1
function_name	largo ||| id3 get frame long	count=1
function_name	cual los términos serán ||| mlt	count=1
function_name	llamada mysqli_connect() ||| mysqli connect errno	count=1
function_name	llaves [function_name] ||| db2 [function_name]	count=1
arg_pair	cubrid_set_add() ||| string $attr_name string $set_element	count=1
namespace	sentencia ||| pdostatement	count=3
function_name	del [function_name_2] ||| [function_name_2] [function_name_1]	count=13
namespace	estándar basado en des ||| function	count=1
function_name	el proceso de importación ||| gnupg	count=1
function_name	términos de [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	está documentada actualmente solamente ||| ps show xy2	count=1
function_name	entrenamiento en ||| train	count=1
function_name	de tipo id ||| id	count=2
function_name	devuelve ||| date time	count=1
namespace	de codificar el contenido ||| function	count=1
function_name	las llaves foraneas ||| foreign keys	count=1
namespace	no se ||| mongocursor	count=1
function_name	número de entrenamiento de ||| fann get	count=1
function_name	de clase iterador que ||| set iterator class	count=1
arg_pair	el string dado ||| string $key	count=1
function_name	con la varita ||| option	count=1
function_name	importar un ||| import	count=1
function_name	el ancho de ||| width	count=4
arg_pair	timestamp y ||| int $format	count=2
function_name	apuntador de ||| mailparse uudecode all	count=1
function_name	fusiona una secuencia de ||| flatten	count=1
arg_pair	desde la representación dom ||| domnode $node int $options	count=1
arg_pair	de los datos ||| int $linebreak	count=1
function_name	la de memcached::prepend() ||| prepend	count=1
function_name	transparencia ||| matte floodfill	count=1
function_name	blanco retirados ||| rtrim	count=1
arg_pair	de bits ||| mixed $left mixed $right	count=2
function_name	filas interno [function_name_2] ||| [function_name_2] [function_name_1]	count=10
namespace	a este para que ||| imagickkernel	count=1
function_name	lee los ||| uudecode all	count=1
function_name	lo menos ||| mlt min doc frequency	count=1
function_name	tabla en la página ||| table	count=1
arg_pair	resultado de ||| resource $link resource $result	count=1
function_name	el generador ||| highlight fragmenter	count=1
function_name	devuelve [function_name_2] ||| ziparchive string [function_name_1] [function_name_2] index int	count=1
return	y las ||| array	count=1
function_name	sólo ||| using	count=1
function	[function_name_1] texto ||| [function_name_1] [arg_pair_2]	count=4
namespace	nombres del nodo ||| domnode	count=1
return	donde ||| string	count=1
function_name	distribución de lecturas ||| slave	count=1
function_name	lo menos tantos documentos ||| min	count=1
arg_pair	dispositivos de ||| zmqsocket $backend	count=1
function_name	de todas las colecciones ||| collection	count=1
function_name	de filas que se ||| set	count=1
arg_pair	o ||| zmqsocket $backend	count=1
arg_pair	de la imagen ||| int $y	count=1
function_name	obtiene ||| get path	count=1
arg_pair	de dsn ||| resource $connection_id	count=1
function_name	y establece la posición ||| set	count=1
function_name	previniendo incluso de ||| dbplus xlockrel	count=1
function_name	todavía ||| count	count=1
namespace	la imagen original ||| gmagick	count=1
function_name	al igual que ||| close	count=1
function_name	un ||| uudecode	count=1
function_name	una instrucción ||| next result	count=1
namespace	de un string ||| function	count=2
function_name	de lecturas ||| get slave	count=1
namespace	función ||| arrayiterator	count=2
return	valor de la ||| mixed	count=1
return	valor de un ||| mixed	count=1
function_name	obtiene ||| get value	count=1
arg_pair	con key y ||| string $key	count=1
arg_pair	si el parámetro stack ||| string $stack	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] quantum [function_name_2]	count=5
function_name	y de región ||| and region	count=1
arg_pair	sybase_connect() con ||| string $password	count=1
function_name	establecer los ||| color	count=1
function_name	de apache ||| apache	count=2
function_name	botón tridimensional ||| raiseimage	count=1
arg_pair	bytes str ||| string $charset	count=1
function_name	función obtiene [function_name] ||| [function_name]	count=1
function_name	esquema en un ||| types	count=1
namespace	un string [namespace] ||| [namespace]	count=6
function_name	x509 desde la csr ||| openssl csr	count=1
function_name	ventana centrada ||| newt centered window	count=1
namespace	se rellena con ||| function	count=1
function_name	aclarando ||| raiseimage	count=1
function_name	de las constantes memcached::res_* ||| result code	count=1
function_name	de registros filas ||| dbase numrecords	count=1
function_name	de imagen ||| pdf load image	count=1
function_name	fichero ||| add	count=1
arg_pair	un simple archivo ||| resource $fam string $filename	count=1
function_name	la última operación frontbase ||| fbsql	count=1
return	diccionario indicado mediante el ||| bool	count=1
function_name	la lista ||| image	count=1
function_name	la función usa la ||| prime	count=1
namespace	barras invertidas antes de ||| function	count=1
function_name	[function_name] llamada ||| [function_name]	count=1
function_name	[function_name_1] intento de ||| [function_name_2] [function_name_1]	count=6
function_name	en el atributo dado ||| attribute	count=1
function_name	pares de ||| pspell config repl	count=1
function_name	función restaura la configuración ||| config	count=1
function_name	un umbral ||| threshold	count=1
function_name	función está ||| in	count=1
namespace	parámetros ||| function	count=1
function_name	antepone el ||| prepend	count=1
return	en la conexión especificada ||| bool	count=1
arg_pair	en las direcciones horizontal ||| float $x	count=1
function_name	el ascenso vertical de ||| get ascent	count=1
function_name	en la ||| frequency	count=1
function_name	[function_name] llamada de ||| [function_name]	count=1
function_name	el número de ||| number	count=1
function_name	[function_name_1] blob/clob ejecutando ||| [function_name_2] [function_name_1]	count=2
function	la precisión [arg_pair_2] ||| [function_name_1] resource $stmt [arg_pair_2]	count=1
function_name	mayúsculas-minúsculas cuando se comparan ||| eregi	count=2
function_name	una miniatura ||| thumbnail	count=1
namespace	hexadecimal representado por ||| function	count=1
function_name	ignoradas ||| frequency	count=1
arg_pair	la key existe ||| string $key int $flags	count=1
return	función ||| void	count=3
function_name	elemento con el id ||| by id	count=1
arg_pair	efecto de ||| int $x	count=1
function_name	[function_name_1] lo contornea ||| [function_name_1] closepath [function_name_2]	count=1
arg_pair	la de memcached::getmulti() con ||| int $flags	count=1
arg_pair	una nueva definición de ||| float $height	count=1
arg_pair	[arg_pair_1] una búsqueda ||| [arg_pair_1] string $msgid1 [arg_pair_2]	count=2
namespace	colores de ||| function	count=1
function_name	[function_name_1] como ||| [function_name_2] [function_name_1]	count=3
arg_pair	información sobre ||| resource $ch	count=1
function_name	el siguiente ||| next	count=4
function_name	intenta borrar ||| delete	count=1
function_name	socket de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	r * x** ||| float $r	count=1
function_name	la descripción de ||| cairo ps surface get	count=1
function_name	la información de inclued ||| inclued	count=1
function_name	un proxy ||| set statement proxy	count=1
return	plural de gettext() ||| string	count=1
return	color de relleno ||| void	count=1
arg_pair	si ||| gmp $a	count=1
namespace	devuelve la opacidad ||| gmagickdraw	count=1
function_name	máximo de tokens a ||| mlt max	count=1
function_name	flujo pty al proceso ||| expect popen	count=1
function_name	establece la ||| fdf set ap	count=1
function_name	del byte actual en ||| current byte	count=1
function_name	la primera entrada en ||| ldap first entry	count=1
return	una consulta en ||| bool	count=1
function_name	dibujo como ps_lineto() ||| ps stroke	count=1
function_name	establece/obtiene el idioma actual ||| mb language	count=1
return	pequeño que determina ||| bool	count=1
function_name	de la clase del ||| get class	count=1
namespace	array de [namespace] con la ||| [namespace]	count=1
arg_pair	permite enviar emails con ||| string $message	count=1
function_name	obtiene el modo ||| mode	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] data [function_name_2]	count=2
function_name	índice del campo ||| cubrid field	count=1
function_name	devuelve el tamaño ||| entry filesize	count=1
function_name	entrada actual ||| current	count=1
function_name	obtiene varios ||| ps get value	count=1
function_name	épocas de estancamiento de ||| stagnation	count=1
namespace	función devolverá la ||| function	count=1
function_name	máscara [function_name_2] ||| [function_name_2] [function_name_1]	count=10
namespace	van a ||| solrquery	count=1
namespace	una entrada ||| function	count=1
function_name	[function_name_1] de i-nodo ||| [function_name_2] [function_name_1]	count=1
arg_pair	bandera especificada por flag ||| string $flag	count=1
function_name	las cabeceras [function_name_2] ||| [function_name_2] request [function_name_1]	count=1
function_name	[function_name_1] información detallada ||| [function_name_2] [function_name_1]	count=4
namespace	como ||| gmagick	count=2
function_name	el último mensaje ||| last error	count=1
function	convierte [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	encripta data con ||| string $data	count=2
namespace	[namespace] la firma ||| [namespace]	count=1
function	[function_name_1] horizontal ||| [function_name_1] [arg_pair_2]	count=4
return	número de filas que ||| solrquery	count=1
function_name	fragmento ideal especificado por ||| set highlight regex slop	count=1
function_name	similar a sybase_fetch_assoc() ||| sybase fetch object	count=1
arg_pair	función callback a los ||| array $array callable $callback	count=1
function_name	la alternativa más próxima ||| imagecolorresolvealpha	count=1
arg_pair	caso de éxito cero ||| mixed $options	count=1
arg_pair	un ||| int $color	count=1
function_name	por ||| set mlt	count=1
function_name	los otros ||| diff	count=1
return	devuelve la ||| float	count=1
arg_pair	la ||| int $width int $height	count=1
function_name	de ssl para las ||| set	count=1
arg_pair	sentencia ||| string $option	count=1
function_name	temporal ||| all	count=1
function_name	devolverá [function_name] actual de ||| rpm [function_name]	count=1
arg_pair	otra llamada ||| callable $callback mixed $data	count=1
function_name	de discontinuidad actual a ||| pdf setdash	count=1
arg_pair	última transferencia ||| resource $ch int $opt	count=1
function_name	capas de ||| construct	count=1
function_name	del ||| fgetss	count=1
function_name	de tipo ||| set using exceptions	count=1
function_name	inicia la ||| begin	count=1
function_name	obtiene los hijos de ||| call get children	count=1
return	las letras ||| int	count=1
namespace	tar este ||| phardata	count=1
function_name	funciones ||| functions count	count=2
function_name	de errores ||| sqlsrv errors	count=1
arg_pair	la primera ocurrencia ||| string $haystack string $needle	count=1
arg_pair	una ||| string $text	count=3
namespace	versión [namespace] ||| [namespace]	count=1
function_name	[function_name_1] entrenamiento ||| [function_name_2] [function_name_1]	count=7
function_name	página para ajustarse ||| set fit	count=1
arg_pair	salto de string ||| bool $cut	count=1
function_name	[function_name_1] [function_name_2] un objeto datetime de ||| [function_name_2] [function_name_1]	count=1
function_name	reintentos ||| deadlock retry count	count=2
namespace	objeto imagickpixel ||| imagickpixel	count=3
function_name	campos ||| fields	count=10
arg_pair	cambia el valor ||| mixed $bordercolor	count=2
namespace	de datos de mysqlnd ||| mysqlnduhconnection	count=1
function_name	[function_name_1] la ubicaciones ||| [function_name_2] [function_name_1]	count=1
function_name	de estilo ||| set slide show	count=1
function_name	el enlace [function_name] tiene habilitada ||| [function_name]	count=1
function_name	nombre de la clase ||| class name	count=1
function_name	[function_name] si ||| [function_name]	count=3
function_name	cuando se enlazó con ||| mcrypt ecb	count=1
arg_pair	que usar mapreduce ||| array $options	count=1
arg_pair	a 0 ||| gmp $a	count=1
arg_pair	entrada con un ||| int $key	count=1
function	es [function_name_1] [arg_pair_2] etiqueta ||| [function_name_1] [arg_pair_2]	count=2
function_name	menos ||| min doc	count=1
function_name	elementos descendientes con unos ||| get elements by tag name ns	count=1
function_name	decodifica el ||| mb decode	count=1
namespace	número de ||| harupage	count=1
function_name	mongocollection::find() este método solamente ||| find one	count=1
function_name	nuevo ||| new	count=3
arg_pair	un ||| resource $result int $rownumber	count=1
function_name	la que las palabras ||| set	count=1
function_name	función definida por el ||| uksort	count=1
arg_pair	está documentada actualmente solamente ||| resource $agent string $charset	count=1
function_name	devolverá el hash ||| crypt	count=1
namespace	un domdocumentfragment ||| domdocumentfragment	count=1
function_name	el término de límite ||| bound	count=1
function_name	el nombre largo ||| id3 get frame long name	count=1
return	comando ||| mongocursor	count=1
arg_pair	puntero al fichero ||| int $length	count=1
function_name	la descripción ||| image surface	count=1
namespace	das xml que ya ||| sdo_das_xml	count=1
arg_pair	un efecto ||| int $width int $height	count=1
return	núcleo ||| void	count=1
arg_pair	una anotación [arg_pair_2] ||| [arg_pair_2] float $ury [arg_pair_1]	count=1
arg_pair	un ||| resource $result int $index	count=3
function_name	la dirección ||| geoip	count=1
arg_pair	a un ||| resource $handle int $mode	count=1
function_name	el que ||| terms	count=1
arg_pair	el oid de ||| resource $conn_identifier string $oid	count=1
function_name	de emitir advertencias ||| using exceptions	count=1
namespace	enero ||| function	count=1
function_name	apuntador ||| mailparse	count=1
function_name	dsn disponibles después ||| odbc	count=1
function_name	una región de ||| region	count=1
arg_pair	dibujar imágenes ||| resource $image	count=1
function_name	establece [function_name] externos de ||| set external [function_name]	count=1
function_name	apache ||| apache	count=2
function_name	si la tarea ||| is	count=1
function_name	[function_name_1] la clase ||| [function_name_2] [function_name_1]	count=6
function	ccl [arg_pair_2] ||| [function_name_1] conf [arg_pair_2]	count=4
function_name	encripta la información ||| openssl encrypt	count=1
arg_pair	en una búsqueda en ||| string $msgid2	count=1
function_name	se encuentra disponible ||| open memory image	count=1
arg_pair	retira espacios en ||| string $character_mask	count=1
arg_pair	parámetro data en ||| string $data int $length	count=1
function_name	filas que ||| set start	count=1
function_name	función a llamar cuando ||| callback	count=1
namespace	argumento es ||| rarexception	count=1
function_name	ejecuta el lote de ||| execute	count=1
function_name	dos ||| format	count=1
return	capas de mensaje ||| zmqsocket	count=1
function_name	este serán ignoradas ||| set mlt min doc	count=1
function_name	la cola ||| queue	count=1
arg_pair	relleno con color ||| int $y2 int $color	count=1
arg_pair	indicando que ocurrió ||| string $actor string $details	count=1
return	número ||| bool	count=1
arg_pair	path con el mode ||| string $mode	count=1
return	array ||| int	count=1
namespace	nueva instancia rrdgraph ||| rrdgraph	count=1
function_name	xml del servidor apache ||| xml	count=1
return	valor del primer elemento ||| mixed	count=1
function_name	línea actual para el ||| get current line number	count=1
arg_pair	desncripta la información data ||| string $data	count=1
function_name	matchbox en ||| matchbox	count=1
namespace	archivos que ||| function	count=1
arg_pair	name el cual apunta ||| string $name	count=1
arg_pair	los bordes de ||| int $width	count=1
function_name	[function_name_1] proceso actual ||| [function_name_2] [function_name_1]	count=2
function_name	una única ||| normal	count=1
arg_pair	una entrada un ||| int $key	count=1
function_name	el mismo nodo ||| is same node	count=2
function_name	canal de la imagen ||| image channel	count=1
function_name	la descripción de la ||| cairo surface get	count=1
arg_pair	cubrid y ||| resource $conn_identifier	count=1
function_name	analiza ||| bbcode parse	count=2
function_name	un conjunto [function_name] ||| add [function_name]	count=1
function_name	espera [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	descripción de ||| cairo surface set device offset	count=1
function_name	el acl ||| imap getacl	count=1
arg_pair	en fann_get_cascade_output_stagnation_epochs() durante ||| int $max_neurons int $neurons_between_reports	count=1
return	obtiene información sobre la ||| mixed	count=1
function_name	de recodificación request ||| recode	count=1
function_name	de columna actual ||| get current column	count=1
namespace	la división realizada por ||| function	count=1
function_name	número es ||| gmp	count=1
arg_pair	left a right usando ||| mixed $left mixed $right	count=1
function_name	recorre el ciclo de ||| nop	count=1
function_name	por defecto de entidades ||| set external entity	count=1
arg_pair	de un [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	una tabla especificada ||| string $table_name	count=1
function_name	desplazamiento ||| msql	count=1
function_name	discontinuidad actual a ||| pdf setdash	count=1
namespace	domnamednodemap ||| domnamednodemap	count=1
arg_pair	vector de ||| array $input_vector	count=1
function_name	protocolo ||| get proto info	count=1
function_name	la fila recuperada ||| sqlsrv fetch object	count=1
function_name	continente que ||| continent code	count=1
namespace	apache que es ||| function	count=1
function_name	propiedad para ||| property	count=1
arg_pair	se comporta ||| string $username	count=1
return	usada en el final ||| bool	count=1
arg_pair	numérico de un ||| string $server_key	count=1
function_name	similar a sybase_fetch_assoc() ||| sybase	count=1
function_name	de página ||| page	count=2
function_name	parameter ||| tie	count=2
arg_pair	de la imagen ||| int $x int $y	count=1
function	[function_name_1] un parámetro ||| bool [function_name_1] [arg_pair_2]	count=1
namespace	parecida a sybase_connect() ||| function	count=1
function_name	descripción de ||| cairo surface mark dirty	count=1
function_name	par clave privada ||| openssl pkey	count=1
arg_pair	de una ||| string $alias	count=1
arg_pair	un ||| int $max_neurons	count=1
namespace	posición actual a ||| harupage	count=1
function_name	afectadas por ||| ifx affected	count=1
function_name	que determina lo grande ||| fann get	count=1
function_name	remarcación de ||| highlight highlight	count=1
function_name	constantes memcached::res_* ||| result code	count=1
function_name	define la rotación ||| set rotate	count=1
return	de nombres especificado ||| bool	count=1
namespace	recupera información sobre un ||| function	count=1
function_name	por bloques [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	de una base de ||| string $database	count=1
function_name	error sqlstate de la ||| sqlstate	count=2
function_name	depuración ||| dump debug	count=1
function_name	convertir ||| convert to data	count=2
namespace	alias de ||| solrdocument	count=1
function_name	logo ||| logo	count=1
function_name	datos del ||| all	count=1
arg_pair	del fichero ||| string $filename string $class_name	count=1
function_name	que realice una salida ||| runkit sandbox output	count=1
arg_pair	especial a menudo ||| int $pri	count=1
function_name	error fdf ||| fdf error	count=2
function_name	de entradas ||| input	count=1
namespace	o false en caso ||| function	count=2
arg_pair	campo de ||| string $fieldname	count=1
return	asociada [return] por ejemplo ||| [return]	count=1
namespace	cuando este trabajo ||| gearmanjob	count=2
function_name	dsn disponibles después ||| odbc data source	count=1
function_name	establece el punto blanco ||| setimagewhitepoint	count=1
function_name	que la [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name] resultados y ||| [function_name]	count=1
arg_pair	left con right y ||| mixed $left mixed $right	count=1
function_name	establece ||| set preg	count=1
arg_pair	y php del ||| resource $handle int $length	count=1
arg_pair	de botón ||| int $x	count=1
function_name	conexión awill internet correspondiente ||| netspeedcell	count=1
function_name	postgresql ||| pg	count=3
return	la api ||| string	count=1
function_name	clave [function_name] que ||| [function_name]	count=1
function_name	la base ||| fbsql start db	count=1
function_name	[function_name] el ||| xdiff [function_name]	count=3
namespace	palabras que ||| solrquery	count=1
namespace	la propiedad es ||| reflectionproperty	count=1
function_name	documento xml ||| save xml	count=1
arg_pair	el uri que contiene ||| string $encoding	count=1
arg_pair	tiempo ||| int $timeout	count=1
function_name	codificación de ||| encoding	count=2
function_name	crea un documento html ||| save html	count=1
function_name	frase de consulta en ||| use phrase	count=1
function_name	como este serán ||| doc frequency	count=1
function_name	información de errores y ||| errors	count=1
arg_pair	de los datos ||| array $callbacks	count=1
arg_pair	key ||| mixed $value	count=1
function_name	de la clave /encoding ||| encoding	count=1
function_name	[function_name_1] de entradas ||| [function_name_2] [function_name_1]	count=2
return	y lo procesa ||| array	count=1
function_name	plantilla y muestra el ||| display	count=1
function_name	abre un blob en ||| ibase blob echo	count=1
function_name	atajo ||| shortcut array	count=2
return	se encuentra ||| int	count=1
arg_pair	de los ||| int $linebreak	count=1
function_name	debajo de la última ||| ps continue	count=1
arg_pair	obtiene información sobre la ||| resource $ch	count=1
function_name	variación [function_name] memcached::setoption() ||| [function_name]	count=1
function_name	una ||| entry	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] filter [arg_pair_2]	count=2
function_name	de monitorizar un ||| cancel monitor	count=1
function_name	agregar parámetros ||| parameter	count=1
function_name	[function_name_1] la relación ||| [function_name_2] [function_name_1]	count=6
function_name	tabla en ||| table	count=2
namespace	o basado ||| function	count=1
function_name	estado del ||| status	count=1
function_name	elimina [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	un mensaje ||| function	count=1
arg_pair	una nueva ubicación ||| string $new_path	count=1
arg_pair	propiedad hwnd en ||| int $window_handle int $client_area	count=1
function_name	sets [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	la sentencia dada por ||| resource $statement	count=1
return	filas de la ||| int	count=1
function_name	escapa un string para ||| escape	count=1
return	permite ||| bool	count=1
return	índice del ||| int	count=1
function_name	permisos del ||| fchmod	count=1
arg_pair	de acceso recursivamente path1 ||| string $path1	count=1
arg_pair	para un punto ||| mixed $codepoint int $property	count=1
function_name	hace una diferencia binaria ||| bdiff	count=1
arg_pair	un ||| resource $ann	count=3
namespace	servidores de ||| memcached	count=1
arg_pair	un ||| int $color mixed $value	count=1
function_name	documento mínima a devolver ||| terms min	count=1
return	el descriptor ||| bool	count=1
function_name	trabajo para ||| job handle	count=1
namespace	tridimensional simulado ||| gmagick	count=1
function_name	ausente ||| empty	count=1
function_name	en un objeto slob ||| slob	count=1
function_name	mínimo de ||| sybase min	count=1
function_name	el ||| mysqli field count	count=1
namespace	de caracteres ||| function	count=1
function_name	estado http de ||| http status	count=1
function_name	las cabeceras http ||| headers	count=1
namespace	similar a ||| function	count=2
function_name	blanco ||| imagecreate	count=1
function_name	creado con el ||| add	count=1
return	igual ||| void	count=1
arg_pair	establece a 0 index ||| gmp $a int $index	count=1
function_name	de [function_name] ||| set [function_name] value	count=1
function_name	[function_name_1] rango de ||| [function_name_2] [function_name_1]	count=2
function_name	reemplaza los ||| replace	count=1
function_name	las consultas de facetas ||| queries	count=1
namespace	defina sobre ||| zmqdevice	count=1
namespace	cadena [namespace] contiene una ||| [namespace]	count=1
function_name	[function_name_1] [function_name_2] una llamada ||| bool [function_name_1] [function_name_2]	count=5
return	actual del ||| bool	count=1
arg_pair	se renombra/mueve ||| string $newrdn string $newparent	count=1
function	el valor [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la página asociada con ||| page	count=1
return	mensaje para el ||| int	count=1
function_name	durante [function_name] entrenamiento calculado ||| fann get cascade [function_name]	count=1
function_name	información con el objeto ||| set info	count=1
function_name	obtiene ||| stream get line	count=2
namespace	devuelve una ||| gmagickdraw	count=1
function_name	salidas para ||| set scaling	count=1
return	relleno usado cuando se ||| void	count=1
arg_pair	efecto de ||| int $width	count=1
function_name	representación yaml de ||| yaml emit	count=2
function_name	firma digital ||| pkcs7 verify	count=1
function_name	[function_name_1] [function_name_2] llamada ||| bool [function_name_2] [function_name_1]	count=3
arg_pair	si solrquery::sethighlightalternatefield() se le ||| int $fieldlength	count=1
function_name	continente que ||| continent code by	count=1
function_name	recursos persistentes como ||| apd dump persistent resources	count=1
function_name	si el atributo ||| attribute	count=1
arg_pair	los bordes ||| int $height	count=1
function_name	de ||| get	count=8
function_name	el calendario juliano es ||| juliantojd	count=1
return	de instancia ||| sdo_das_xml_document	count=1
function_name	menos tantos documentos como ||| min doc	count=1
function_name	frecuencia en ||| mlt min doc frequency	count=1
namespace	la ||| gmagickpixel	count=1
function_name	la página para ajustarse ||| fit r	count=1
function_name	la función px_create_fp() ||| tablename	count=1
function_name	el cursor asociado al ||| seek	count=1
function_name	la línea ||| line	count=6
function_name	entonces en lugar de ||| exceptions	count=1
function_name	una excepción ||| set	count=1
function_name	definida por el usuario) ||| restore error	count=1
arg_pair	ventanas la propiedad hwnd ||| int $client_area	count=1
function_name	devuelve todas las ||| get all	count=2
function_name	devolver ||| using	count=1
function_name	crea ||| create sparse	count=2
function_name	el factor de ||| factor	count=4
arg_pair	información de una ||| resource $conn_identifier	count=1
arg_pair	imap ||| string $criteria	count=1
function_name	descripción ||| surface	count=5
arg_pair	hasta length bytes ||| int $length	count=1
function_name	modo de ||| parse mode	count=1
function_name	casillas ||| newt checkbox tree	count=1
function_name	etiqueta [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	consulta generada ||| query	count=1
function_name	un enlace simbólico ||| link	count=1
function_name	de consulta ||| query	count=3
function_name	en mayúsculas ||| cap height	count=1
function_name	color de trazo de ||| set cmykstroke	count=1
namespace	devuelve la cuenta ||| gmagickpixel	count=1
function_name	nuevo contexto con ||| context new	count=1
function_name	tipo de ||| db2 field type	count=1
return	tantos documentos como ||| solrquery	count=1
namespace	gd [namespace] una url ||| [namespace]	count=1
function_name	wbmp de la ||| imagewbmp	count=1
function	importa la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	excepción lo que resultará ||| exception	count=1
return	en lugar ||| bool	count=1
return	época unix (1 de ||| int	count=1
arg_pair	toma ||| int $options	count=1
function_name	mismo [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	tomar el nombre ||| name	count=1
function_name	tantos documentos ||| set mlt min	count=1
function_name	pundo de ||| chr	count=1
arg_pair	de un ||| resource $pdfdoc float $lowerleftx	count=1
function_name	unos ||| get elements by tag name	count=1
function_name	blob en ||| blob	count=1
function_name	como copia de ||| set	count=1
return	cuando la biblioteca unrar ||| void	count=1
namespace	objeto soapserver entre ||| soapserver	count=1
return	datos del ||| array	count=1
function_name	coloca una [function_name] ||| [function_name]	count=2
arg_pair	del archivo ||| resource $mimemail mixed $filename	count=1
function_name	campos de ||| mssql fetch field	count=1
arg_pair	bytes str de ||| string $str	count=1
function_name	nodo de atributo ||| set attribute node	count=2
namespace	base de ||| mongodb	count=1
namespace	de una excepción ||| exception	count=1
arg_pair	certificado x509cert ||| bool $shortnames	count=1
return	de la ||| array	count=3
arg_pair	la codificación para ||| string $encoding	count=1
function_name	de épocas que se ||| epochs	count=1
arg_pair	texto con ||| string $blockname string $text	count=1
function_name	coincide exactamente ||| tremove	count=1
namespace	advertencia ||| function	count=1
arg_pair	de forma parecida a ||| string $password	count=1
function_name	actual ||| dbplus	count=1
namespace	si y sólo ||| rarexception	count=1
function_name	definida por el parámtro ||| index	count=1
namespace	usado cuando ||| gmagickdraw	count=1
function_name	de mensajes md5 ||| md5 file	count=1
return	nodo es parte de ||| bool	count=1
function_name	en un ||| mailparse uudecode all	count=1
namespace	a lectura de otros ||| function	count=1
arg_pair	entre [arg_pair] ||| [arg_pair]	count=6
function_name	[function_name_1] el factor ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] index_or_name ||| sqlite [function_name]	count=3
namespace	un entero ||| ev	count=1
arg_pair	la ||| int $x	count=1
function_name	con el id ||| element by id	count=1
arg_pair	representa el nombre distinguido ||| array $dn resource $privkey	count=1
function_name	caracteres del campo a ||| alternate field	count=1
arg_pair	php del ||| resource $handle int $length	count=1
function_name	sqlsrv_prepare() ||| sqlsrv	count=1
function_name	[function_name_1] equilibrado ||| [function_name_2] [function_name_1]	count=1
function_name	contornea el ||| stroke	count=1
function_name	un proceso abierto mediante ||| get status	count=1
function_name	para extraer ||| msql fetch	count=1
namespace	después de llamarla ||| function	count=1
arg_pair	la ||| int $type	count=1
namespace	registro ||| yaf_registry	count=2
function_name	imagen de la lista ||| image	count=1
function_name	esta ||| ps open memory image	count=2
arg_pair	un fichero ||| float $ury string $filename	count=1
namespace	ya que puede ||| function	count=1
return	basado en des de ||| string	count=1
arg_pair	una fila ||| resource $result_id int $row_number	count=1
arg_pair	rgb especificado y ||| int $red	count=1
function_name	página especificada ||| page	count=1
function_name	enviadas al servidor solr ||| request	count=1
function_name	los ||| ncurses color	count=1
function_name	devuelve el tipo ||| column type	count=1
function_name	glifo de la ||| ps symbol	count=1
arg_pair	una implementación de ||| string $offset	count=1
function_name	cambiará el nombre ||| rrename	count=1
namespace	encuentra disponible la ||| function	count=1
arg_pair	el domain ||| string $domain	count=2
function_name	identificador del cliente ||| client	count=1
function_name	[function_name_1] cursor utilizado ||| [function_name_2] [function_name_1]	count=6
function_name	regular para la fragmentación ||| highlight regex pattern	count=1
function_name	mínima ||| min count	count=1
arg_pair	lote de operaciones insert ||| mongocollection $collection array $write_options	count=1
function_name	escala de la ||| field scale	count=1
function_name	ser utilizada como ||| create collation	count=1
function_name	interna ||| internal encoding	count=1
function_name	a este ||| add	count=1
function_name	[function_name_1] de pendientes ||| [function_name_2] [function_name_1]	count=1
function_name	rows ||| copy from	count=2
function_name	de error de la ||| error	count=1
arg_pair	key y ||| mixed $key int $padding	count=1
function_name	el ||| odbc	count=1
function_name	lo menos tantos documentos ||| set mlt min doc	count=1
arg_pair	[arg_pair_1] [arg_pair_2] operaciones de dibujo siguientes ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=2
function_name	tipo de dato de ||| type	count=1
arg_pair	str ||| string $charset	count=1
namespace	conjunto existente ||| quickhashintset	count=1
arg_pair	carga una ||| string $encoding	count=1
return	los bordes de la ||| void	count=1
function_name	devuelve el último mensaje ||| mssql get	count=1
function_name	[function_name_1] servidores ||| [function_name_2] [function_name_1]	count=1
return	las capas de ||| zmqsocket	count=1
function_name	longitud [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	forma ||| sybase	count=1
namespace	descriptor ||| oci-lob	count=1
arg_pair	y un conjunto de ||| resource $ann	count=1
arg_pair	une tres archivos en ||| string $old_file string $new_file1	count=1
function_name	lecturas [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	forma parecida ||| function	count=1
arg_pair	archivo local ||| string $local_file int $mode	count=2
function_name	de llamarla ||| data source	count=1
function_name	contexto ||| stream context	count=1
function_name	mínimo de severidad ||| min message severity	count=1
arg_pair	prepara para ||| resource $id string $type	count=1
namespace	type que corresponde ||| function	count=1
function_name	servidores de trabajo para ||| ping	count=1
namespace	nodo ||| splpriorityqueue	count=1
function_name	si un ||| prob	count=1
function_name	de campos de ||| fields	count=1
function_name	de oracle [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	utf-32 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	secreto para ||| string $token string $token_secret	count=1
function_name	descendientes con unos ||| get elements by tag name ns	count=1
function	[function_name_1] nombre sobre ||| [arg_pair_2] [function_name_1]	count=1
function_name	datos ||| start	count=1
arg_pair	simulado aclarando ||| int $width	count=1
function_name	libeio ||| eio get event	count=1
function_name	[function_name_1] devuelve como ||| [function_name_2] [function_name_1]	count=10
function_name	libera toda la memoria ||| free result	count=1
namespace	de archivo dado y ||| function	count=1
function_name	establece una ||| qc set	count=1
function_name	de color especificado ||| color	count=1
function_name	de la página especificada ||| page	count=1
function_name	para remarcar ||| set	count=1
function_name	la consulta siguiente si ||| next result	count=1
function_name	elimina el ||| remove	count=3
function_name	posee una característica conocia ||| tailable	count=1
arg_pair	es ||| mixed $xsd_file	count=1
arg_pair	de un índice de ||| int $index	count=1
function_name	el ||| width	count=1
function_name	[function_name_1] [function_name_2] incluidos ||| [function_name_2] [function_name_1]	count=10
arg_pair	desde el domain por ||| string $domain string $codeset	count=1
function_name	[function_name_1] fam en ||| [function_name_2] next [function_name_1]	count=1
function_name	encuentra disponible ||| memory	count=1
arg_pair	o ||| string $str	count=1
function_name	información de campos ||| field	count=1
return	encuentra disponible la ||| int	count=1
arg_pair	una imagen ||| string $filename int $width	count=1
return	el objeto throwable ||| throwable	count=1
function_name	función ps_stringwidth() excepto que ||| ps string geometry	count=1
namespace	lee los ||| function	count=1
namespace	obtiene ||| memcached	count=1
namespace	el cifrado especificado a ||| function	count=1
arg_pair	un string a ||| string $str int $length	count=1
namespace	base de datos ||| sqlite3	count=1
function_name	de los mensajes especificados ||| imap fetchbody	count=1
function_name	devuelve el año ||| get year	count=1
arg_pair	cc y [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	al servicio daemon debería ||| string $address	count=1
function_name	nombre y devolver ||| from name	count=1
function_name	del formato utf-32 ||| utf32	count=1
function_name	libera un descriptor asignado ||| free descriptor	count=1
function_name	se ||| ps open memory image	count=2
function_name	lista de encabezados ||| headers list	count=3
arg_pair	user y group ||| string $user string $group	count=1
function_name	la información ||| info	count=3
arg_pair	lo establece a 0 ||| gmp $a	count=1
function_name	la descripción ||| cairo image surface	count=1
function_name	xml parser ||| xml	count=3
function_name	accesibilidad ||| access count	count=1
function_name	se ||| pconnect	count=1
function_name	las palabras que ||| min	count=1
function_name	da la ||| idate	count=1
function_name	mediante ||| get	count=1
function_name	frecuencia en la ||| set mlt	count=1
return	que describe el ||| int	count=1
namespace	indica si ||| gearmantask	count=1
function_name	actual para el ||| get current	count=2
function_name	del ||| cubrid get	count=2
function_name	[function_name_1] el ancho ||| harupage float [function_name_1] line [function_name_2]	count=1
return	al cliente de ||| void	count=1
return	tiempo máximo de inactividad ||| int	count=1
namespace	posee una característica conocia ||| mongocursor	count=1
function	rellena [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
return	esquema ||| void	count=1
namespace	campos del documento ||| solrdocument	count=1
function_name	el acl ||| getacl	count=1
function_name	metainformación de ||| has metadata	count=1
return	no se ||| int	count=1
function_name	descripción de la ||| cairo scaled font	count=2
return	proceso del proceso actual ||| void	count=1
return	en la página ||| bool	count=3
namespace	la ||| gearmantask	count=1
namespace	id de mongo ||| mongoid	count=1
return	aplicarse a una única ||| void	count=1
namespace	cadena que ||| gmagickdraw	count=1
namespace	un error ||| rarexception	count=1
return	en un das ||| void	count=1
arg_pair	y negro especificados ||| float $blackpoint	count=1
function_name	la descripción ||| cairo font options get	count=4
function_name	los permisos ||| chmod	count=1
arg_pair	dibuja la cadena string ||| int $y	count=2
arg_pair	elipses etc..., a thickness ||| resource $image int $thickness	count=1
function_name	las palabras ||| set mlt min doc frequency	count=1
arg_pair	un ||| resource $psdoc int $ord	count=1
return	los ||| float	count=1
function_name	fila recuperada ||| sqlsrv fetch object	count=1
arg_pair	valores de un assoc_array ||| array $assoc_array	count=1
function_name	base de datos ||| fbsql start db	count=1
function_name	usuario presiona la tecla ||| suspend callback	count=1
function_name	iterador [function_name] ||| [function_name]	count=1
arg_pair	needle [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
arg_pair	una función de ||| string $name callable $callback	count=1
arg_pair	key corresponda ||| mixed $value	count=1
namespace	que contiene los datos ||| function	count=1
function_name	primera tupla de ||| dbplus first	count=2
function_name	el id ||| element by id	count=1
function_name	el núcleo en oposición ||| internal	count=1
return	socket. ||| zmqsocket	count=1
arg_pair	a una ||| string $optlist	count=1
function_name	no afecta al ||| count	count=1
function_name	palabras que ||| frequency	count=1
function_name	de lecturas a secundarios ||| slave okay	count=1
namespace	si la ||| gearmantask	count=1
function_name	la medianoche de pascua ||| easter	count=1
arg_pair	a ||| string $username	count=1
function_name	crc del archivo de ||| crc	count=1
return	devuelve el valor ||| mixed	count=2
arg_pair	plaintext con ||| string $plaintext	count=1
function_name	filtro de flujo previamente ||| filter	count=1
namespace	socket. ||| gearmanclient	count=1
function_name	obtiene el puerto del ||| gupnp context get	count=1
namespace	cursor: si todavía no ||| mongocursor	count=1
return	devuelve la cuenta de ||| int	count=1
arg_pair	estructura de datos de ||| int $num_data int $num_input	count=1
arg_pair	certificado) basada ||| array $extraattribs	count=1
arg_pair	devuelve ||| string $str	count=1
function_name	t61 ||| t61	count=1
function_name	del servicio y ||| win32 start service	count=1
arg_pair	gmagickpixel de color ||| gmagickpixel $color int $width	count=1
function_name	usos criptográficos ||| bytes	count=1
function_name	superior en ||| upper	count=1
arg_pair	nuevo par ||| object $object mixed $value	count=1
function_name	establece la zona ||| default timezone set	count=1
function_name	sintaxis lint pelusa ||| runkit lint	count=1
function_name	de dsn disponibles ||| source	count=1
arg_pair	correspondientes a ||| array $ctorparams	count=1
arg_pair	descriptor de fichero fd ||| int $offset	count=1
namespace	de imagen soportados por ||| function	count=1
namespace	como una matriz ||| gmagick	count=1
return	recupera el número ||| int	count=1
function_name	índices predeterminados ||| rcrtlike	count=1
function_name	forma parecida a ||| sybase pconnect	count=1
function_name	cambio del ||| fann get	count=1
function_name	error una ||| exceptions	count=1
function_name	el paquete [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	bytes o false si ||| module is	count=1
function_name	actualización [function_name] ||| rrd [function_name]	count=3
arg_pair	unicode para un punto ||| int $property	count=1
function_name	envía la acción con ||| gupnp service proxy action	count=1
namespace	devuelve el color ||| gmagickdraw	count=1
function_name	libera toda ||| fbsql free	count=1
function_name	analiza una url y ||| parse url	count=1
function_name	entidades ||| set external entity	count=1
namespace	que retorna ||| function	count=1
function_name	clases que pertenecen a ||| class names	count=1
arg_pair	un [arg_pair] ||| [arg_pair]	count=7
function_name	error ||| exceptions	count=2
function_name	el ||| crack closedict	count=4
function_name	la descripción ||| cairo pattern add color stop rgb	count=1
arg_pair	un método ||| int $width int $height	count=1
function_name	de ||| set slide show	count=6
function_name	valor quantum value de ||| value quantum	count=1
function_name	devuelve un booleano que ||| get	count=1
arg_pair	el argumento offset a ||| resource $lob_identifier int $offset	count=1
function_name	segundo o subsiguiente ||| add	count=1
arg_pair	más imágenes y ||| imagick $image int $channeltype	count=1
namespace	archivos tar/zip no ||| phardata	count=1
function_name	la csr ||| csr	count=1
function_name	de un blob ||| ibase blob	count=1
function_name	devuelve ||| sybase get	count=1
function_name	este método actualiza ||| update	count=2
function_name	registrar ||| register node	count=1
function_name	remarcación [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	los bordes ||| gmagick	count=1
function_name	los modificadores de acceso ||| modifiers	count=2
function_name	esquema ||| types	count=1
function_name	guarda la ||| save	count=3
return	de un ||| bool	count=2
return	abierto mediante el uso ||| array	count=1
function_name	instala un objeto ||| mysqlnd uh	count=1
arg_pair	a 0 index ||| gmp $a int $index	count=1
function_name	stats.field ||| stats field	count=2
arg_pair	archivo local en ||| int $mode	count=1
function_name	strings multibyte ||| mb ereg	count=1
function_name	[function_name] appenditerator::append() ||| get [function_name]	count=1
function_name	error ||| curl strerror	count=2
function_name	la clase yaf_application ||| application	count=1
arg_pair	crea un efecto ||| int $width	count=1
function_name	índices del array mantienen ||| arsort	count=1
function_name	la extensión iconv ||| iconv get	count=1
return	elemento solicitado en ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] output stagnation [function_name_2]	count=7
function_name	[function_name_1] de la ||| [function_name_1] [function_name_2]	count=1
function_name	datos establecida y ||| dba	count=1
function_name	[function_name_1] de respuesta ||| [function_name_2] [function_name_1]	count=8
function_name	la descripción de ||| cairo pattern create linear	count=1
arg_pair	indicando ||| string $details	count=1
function_name	[function_name_1] activación ||| [function_name_1] [function_name_2]	count=4
arg_pair	la de memcached::getmulti() con ||| string $cas_tokens	count=1
function_name	sobre ||| get	count=1
function_name	el carp::croak ||| apd croak	count=1
function_name	sentencia insert ||| insert	count=1
function_name	máxima sobre ||| mlt max	count=1
arg_pair	de acceso recursivamente path1 ||| string $path1 int $rev1	count=1
arg_pair	un efecto de botón ||| int $x	count=1
function_name	cubrid_drop() ||| drop	count=1
arg_pair	cero en ||| string $zurl	count=1
function_name	o no información ||| info	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1] int $startpos	count=6
return	el fichero dado ||| int	count=1
function_name	actual donde se buscarán ||| dbplus chdir	count=1
function_name	socket_sendto() envía ||| sendto	count=1
arg_pair	en blanco u otros ||| string $str	count=1
function_name	correo especificado por buzon ||| imap createmailbox	count=1
function_name	archivo [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un objeto de ||| object	count=1
function_name	de archivo/usuario ||| apc bin	count=1
function_name	ítem por ||| decrement by key	count=1
arg_pair	callback a ser ||| int $type mixed $callback	count=1
function_name	descripción de ||| cairo image surface get	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] timer [function_name_2]	count=3
return	efecto ||| void	count=1
namespace	error ||| function	count=3
function_name	virtual con nombre de ||| pvf	count=1
function_name	nombre largo ||| get frame long name	count=1
arg_pair	servicios colas ||| zmqsocket $backend	count=1
function_name	prioridad de ||| priority init	count=1
return	los servidores de ||| bool	count=1
function_name	cadena ||| string	count=1
arg_pair	función devolverá ||| resource $connection_id	count=1
function_name	subsiguiente fichero de ||| add types	count=1
function_name	internas con libeio ||| event	count=1
function_name	sea truncado ||| ftruncate	count=1
function_name	ruta y nombre ||| pathname	count=1
function_name	del valor de una ||| fann get	count=1
return	como una ||| string	count=1
arg_pair	domain por gettext() ||| string $domain	count=1
function	[function_name_1] campo ||| [arg_pair_2] [function_name_1]	count=4
function_name	combinación de entrelazado ||| getimageinterlacescheme	count=1
arg_pair	parámetro data ||| string $data int $length	count=1
function_name	establece la apariencia de ||| set	count=1
return	datos ||| bool	count=1
namespace	de primer plano y ||| function	count=1
function_name	en la que las ||| set	count=1
arg_pair	devolverá ||| string $str	count=1
arg_pair	una ||| int $op	count=1
function_name	nivel mínimo ||| min	count=1
function_name	devuelve una imagen ||| image	count=1
namespace	que pertenece la función ||| reflectionfunctionabstract	count=1
function_name	ancho ||| pdf stringwidth	count=2
return	actual ||| yaf_response_abstract	count=1
arg_pair	key ||| string $key mixed $value	count=1
function_name	postgresql después de hacer ||| pg	count=1
function_name	carp::croak de perl ||| croak	count=1
function_name	función crea una ||| create attribute ns	count=1
function_name	términos [function_name] ||| [function_name] facet	count=1
function_name	distancia de la ||| get	count=1
function_name	la columna ||| field	count=1
function_name	una línea a ||| max line	count=1
namespace	apache que es similar ||| function	count=1
function_name	documento [function_name_2] ||| [function_name_2] process [function_name_1]	count=1
function_name	añade definición rra ||| add archive	count=3
return	utilizada para tomar el ||| string	count=1
function_name	mime ||| mime	count=6
function_name	filtro ||| add kernel	count=2
arg_pair	fgets() excepto que ||| resource $handle	count=1
function_name	número de neuronas de ||| fann	count=1
function_name	disponible la lista de ||| open memory	count=1
function_name	dice si el algoritmo ||| enc is	count=1
arg_pair	a un fichero de ||| float $ury string $filename	count=1
function_name	de inclued ||| inclued	count=1
function_name	el argumento es ||| set	count=1
function	[function_name_1] stream dado ||| [arg_pair_2] [function_name_1]	count=2
namespace	del archivo especificado por ||| function	count=1
namespace	escribe el resultado ||| splfileobject	count=1
function_name	ecualiza el ||| equalize	count=1
return	esta función acepta uno ||| string	count=1
return	con el valor actual ||| string	count=1
function_name	de los ||| addcslashes	count=1
return	la posición actual del ||| bool	count=1
function_name	iterador ||| iterator count	count=2
return	en el parámetro ||| bool	count=1
function_name	devuelve el código ||| get code	count=3
function_name	en por ||| set mlt min	count=1
function_name	tipo de imagen potencial ||| getimagetype	count=1
arg_pair	número fijo de colores ||| int $numcolors	count=2
function_name	puntuación ||| ispunct	count=1
function_name	establecer los colores ||| color set	count=1
function_name	espacio ||| default	count=1
function_name	la de memcached::prepend() con ||| prepend by	count=1
namespace	datos ||| function	count=1
function	[function_name_1] de un ||| [function_name_1] matchbox [arg_pair_2]	count=3
function_name	devuelve una lista de ||| enchant broker list dicts	count=1
function_name	y almacena el resultado ||| xdiff file	count=2
function_name	bases de datos abiertos ||| dba list	count=1
arg_pair	se pueda con una ||| string $width	count=1
return	caracteres que aparecen ||| string	count=1
function_name	columna ||| oci field	count=1
namespace	línea de ||| harufont	count=1
arg_pair	de value ||| mixed $value	count=1
function_name	de prioridad de ||| event base priority init	count=1
function_name	pendiente de activación para ||| activation steepness	count=1
arg_pair	memcache::connect() con ||| string $host	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] attribute [function_name_1]	count=1
function_name	establecida por splfileobject::setmaxlinelen() ||| len	count=1
rest	la [function_2] ||| [function_2] [return_1]	count=1
function_name	la imagen ||| stegano image	count=1
function_name	se proporcionan ||| splice	count=1
arg_pair	data1 y data2 ||| resource $data2	count=1
namespace	fgetss() intenta ||| function	count=1
function_name	un [function_name] ||| geoip netspeedcell by [function_name]	count=3
namespace	o false ||| function	count=1
function_name	las propiedades ||| image properties	count=1
function_name	palabras que no ||| mlt min doc frequency	count=1
arg_pair	efecto de botón ||| int $height	count=1
namespace	un factor por ||| function	count=1
arg_pair	a ||| string $charset	count=1
arg_pair	un fichero y ||| resource $font_index	count=1
function_name	[function_name_1] instrucciones de ||| [function_name_2] [function_name_1]	count=6
function_name	siguiente si varias ||| cubrid next result	count=1
function_name	imagen para ||| shade image	count=1
function_name	token ||| request token	count=1
function_name	mediante ||| proc	count=1
function_name	el tipo ||| db2 field type	count=1
function_name	para que la clave ||| get delayed by key	count=1
function_name	información del [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	fgets() excepto que fgetss() ||| resource $handle int $length	count=1
function_name	actual del ||| key	count=1
function_name	la caché de archivo/usuario ||| bin	count=1
arg_pair	un array ||| resource $statement	count=1
function_name	[function_name_1] año ||| [function_name_1] [function_name_2]	count=1
arg_pair	bordes ||| int $y	count=1
function	conexión en [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	proxy [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	número ||| gmp	count=1
arg_pair	que las retrollamadas ||| array $patterns_and_callbacks mixed $subject	count=1
arg_pair	un clúster de grafemas ||| int $start	count=1
function_name	el número ||| fann num	count=2
arg_pair	[arg_pair] dentro ||| [arg_pair]	count=1
function_name	campo especificado [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	igual que closedir() solo ||| close	count=1
return	devuelve los ||| int	count=1
function_name	últime [function_name] imap que ||| imap last [function_name]	count=1
function_name	obtiene ||| string	count=1
arg_pair	especificado por fd ||| mixed $fd int $pri	count=1
function_name	decide si ||| mysqlnd qc set is select	count=1
arg_pair	termina ||| resource $fam_monitor	count=1
function_name	o la alternativa más ||| imagecolorresolvealpha	count=1
arg_pair	de un ||| int $color mixed $value	count=1
arg_pair	una nueva copia de ||| bool $preserve_cloned_files bool $backup_original_files	count=1
function_name	ingres procedimiento [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	antes ||| function	count=1
function_name	padre ||| dirname	count=1
function_name	elimina el ||| delete	count=3
function	[function_name_1] el nombre ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	un humano lo haría ||| string $str2	count=1
namespace	interno de ||| oci-lob	count=1
function_name	adición del parámetro ||| imagecolorallocatealpha	count=1
arg_pair	un archivo remoto desde ||| string $remote_file	count=2
function_name	trunca ||| ftruncate	count=1
function_name	descripción de la ||| color stop rgb	count=1
function_name	y ||| construct	count=1
function_name	establece el ||| px set	count=1
return	en la mayoría de ||| bool	count=1
function	[function_name_1] un array ||| [function_name_1] [arg_pair_2]	count=1
function_name	rellena la ||| fill	count=1
arg_pair	un nombre en un ||| string $name	count=1
function_name	empleadas durante [function_name] entrenamiento calculado ||| fann get cascade [function_name]	count=1
arg_pair	crea ||| int $y	count=1
return	adjunta otro núcleo («kernel») ||| void	count=1
function_name	sybase_fetch_assoc() con ||| sybase	count=1
function_name	el cursor asociado al ||| result seek	count=1
function_name	colores de ||| ncurses color set	count=1
function_name	rango [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	la apariencia de ||| bool	count=1
function_name	establece el valor ||| fdf set	count=1
namespace	imagen mientras preserva los ||| gmagick	count=1
function_name	seguimiento ||| data	count=1
arg_pair	ereg_replace() ||| string $replacement	count=1
function_name	geoip_domain_by_name() devolverá los nombres ||| domain by	count=1
function_name	número de candidatas ||| cascade	count=1
function_name	fila de ||| fbsql fetch row	count=1
arg_pair	posición offset ||| int $offset	count=1
namespace	línea ||| splfileobject	count=2
function_name	descripción ||| cairo font face get type	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] inner [function_name_2]	count=8
arg_pair	este es el único ||| mixed $xsd_file string $key	count=1
return	basada en parámetros ||| bool	count=3
namespace	usa la prueba probabilística ||| function	count=1
function_name	el comportamiento de autocommit ||| db2 autocommit	count=1
function	[function_name_1] representación dom ||| [arg_pair_2] [function_name_1]	count=2
function_name	el modo [function_name_2] ||| [function_name_2] compression [function_name_1]	count=1
arg_pair	predeterminado para la conexión ||| string $charset resource $link_identifier	count=1
function_name	color usando ncurses_init_color() ||| can change	count=1
return	un efecto de botón ||| void	count=1
arg_pair	base de eventos especificada ||| resource $event_base int $flags	count=1
return	un objeto en ||| string	count=1
function_name	configuración actual de session.cache_expire ||| session cache expire	count=1
function_name	pendiente [function_name] ||| fann set [function_name] steepness	count=1
arg_pair	para ser enviada junto ||| bool $httponly	count=1
function_name	capa ||| define layer	count=1
function_name	comprobación de ||| crack check	count=1
function_name	de trabajo para ver ||| ping	count=1
namespace	splfileobject ||| splfileobject	count=2
function_name	encuentra disponible ||| ps open memory image	count=1
namespace	el tipo de ||| function	count=1
function_name	el propietario del ||| fchown	count=1
function_name	un identificador de sesión ||| session	count=1
arg_pair	parámetro plaintext con las ||| resource $identifier string $plaintext	count=1
arg_pair	un assoc_array en ||| array $assoc_array	count=1
function_name	un mensaje de cadena ||| imap append	count=1
function_name	número de bits ||| bits	count=1
function_name	el punto primario verde ||| green primary	count=1
namespace	este trabajo ||| gearmanjob	count=4
arg_pair	y su asignación al ||| resource $id	count=1
function_name	disposición de una ||| dispose	count=1
namespace	tipo ||| function	count=1
function_name	número de filas afectadas ||| fbsql affected rows	count=1
return	en la búsqueda ||| bool	count=1
function_name	de entrada/salida en milisegundos ||| timeout	count=1
arg_pair	para un nombre ||| string $name	count=1
function_name	obtiene el nodo actual ||| current	count=1
function_name	menos tantos documentos como ||| mlt min	count=1
function_name	largo para un marco ||| frame long	count=1
function_name	nuevo objeto ||| construct	count=1
function_name	en lugar de emitir ||| set	count=1
return	o false en caso ||| bool	count=1
function_name	de base ||| get	count=1
function_name	para que ambos puedan ||| kernel	count=1
namespace	paleta creada por ||| function	count=1
namespace	post o pasado ||| function	count=1
namespace	se especifica ||| function	count=1
arg_pair	archivo local [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	[function_name] con una ||| [function_name]	count=3
return	de candidatas en ||| bool	count=1
arg_pair	la base de datos ||| mysqlnd_connection $connection string $database	count=1
arg_pair	a una página del ||| string $dest	count=1
function_name	tidy con ||| tidy	count=1
function_name	función devuelve la porción ||| strrchr	count=1
function_name	de proceso del proceso ||| setproctitle	count=1
function_name	http ||| get http	count=2
return	array asociativo de ||| array	count=1
function_name	entrenamiento ||| fann get cascade output	count=1
function_name	del array mantienen su ||| arsort	count=1
arg_pair	uri que contiene ||| string $encoding	count=1
function_name	interno del resultado de ||| data seek	count=1
function_name	desplazamiento de decadencia del ||| decay shift	count=1
function_name	salida gamma ||| imagegammacorrect	count=1
arg_pair	apunta a una página ||| string $dest	count=1
arg_pair	mensaje y socket. -- ||| zmqsocket $backend	count=1
function_name	[function_name] un objeto ||| [function_name]	count=2
function_name	guardar la información ||| save path	count=1
arg_pair	función cubrid_set_drop() ||| string $attr_name string $set_element	count=1
return	después de llamarla varias ||| array	count=1
function_name	archivo ||| mailparse uudecode all	count=6
function_name	de estilo de ||| slide show	count=1
function_name	nombre de ||| function name	count=2
return	apariencia ||| bool	count=1
function_name	si el algoritmo ||| is	count=1
namespace	variable de datos por ||| function	count=1
function_name	devuelve el ||| enchant broker get error	count=1
function_name	dos ||| number format	count=2
return	servicios colas ||| zmqsocket	count=1
arg_pair	los dispositivos de ømq ||| zmqsocket $frontend	count=1
function_name	canal de ||| channel	count=1
function_name	base de ||| dba	count=1
function_name	asigna un valor a ||| assign	count=1
namespace	gettext() ||| function	count=1
arg_pair	socket. -- ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	que se asigne ||| work	count=1
namespace	habilitará o ||| function	count=1
function_name	clase glo ||| cubrid new glo	count=1
function_name	usado para guardar la ||| save	count=1
function_name	creada con db2_connect() y ||| db2	count=1
function_name	devolver un ||| using	count=1
function_name	baja prioridad ||| low	count=1
function_name	de filas en ||| num rows	count=1
function_name	obtiene el valor ||| get int	count=1
return	campo al ||| void	count=1
arg_pair	los datos y ||| string $data	count=1
function_name	el número de tendencias ||| bias	count=1
arg_pair	incrementa un ||| int $expiry	count=1
function_name	el fichero omitiendo ||| path	count=1
namespace	realizado [namespace] la ||| [namespace]	count=1
return	socket. -- ||| zmqsocket	count=1
arg_pair	en un vector ||| resource $ann array $input_vector	count=1
function_name	una lista de los ||| enchant broker list dicts	count=1
function_name	argumento cadena_octal ||| octdec	count=1
function_name	demás funciones de sisitema ||| wrapper register	count=1
namespace	tiempo máximo ||| gearmanclient	count=1
function_name	letras del continente ||| continent code	count=1
function	[function_name_1] name0 ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	una ||| string $name mixed $value	count=1
function_name	una sentencia preparada ||| execute	count=1
function_name	el punto blanco de ||| white point	count=1
function_name	[function_name_1] de ||| [function_name_2] attribute [function_name_1]	count=1
function_name	ausente que es ||| empty	count=1
function_name	especial indicando error cuando ||| set using exceptions	count=1
return	el ||| sdo_das_xml_document	count=1
arg_pair	enviar ||| string $message	count=1
arg_pair	carga una fuente para ||| string $encoding	count=1
function_name	el número ||| field count	count=2
function_name	color en ncurses ||| ncurses start color	count=1
function_name	comprobación de la dificultad ||| crack	count=1
function_name	que contiene el ||| chr	count=1
return	al cliente ||| void	count=1
function_name	archivo pdf ||| pdf open	count=1
function_name	devuelve el estado ||| status	count=1
function_name	obtiene el directorio actual ||| getcwd	count=1
function	para [arg_pair_2] ||| [function_name_1] input scaling params [arg_pair_2]	count=2
function_name	de sisitema ||| stream wrapper register	count=1
function_name	tamaño de el array ||| get size	count=1
arg_pair	tridimensional simulado aclarando ||| int $x int $y	count=1
function_name	define el de estilo ||| slide show	count=1
function_name	devuelve el número de ||| get start	count=1
arg_pair	una nueva instancia de ||| string $text	count=1
namespace	un string ||| function	count=3
arg_pair	a thickness píxeles ||| int $thickness	count=1
arg_pair	class dada ||| mixed $class bool $autoload	count=3
arg_pair	hash ||| string $str	count=1
function_name	[function_name_1] afectadas por ||| [function_name_2] [function_name_1]	count=20
function_name	candidatas ||| cascade	count=3
arg_pair	almacenados registrados en una ||| string $procedure	count=1
arg_pair	una expresión regular multibyte ||| string $pattern string $option	count=1
function_name	la siguiente ||| next	count=1
namespace	las conexiones [namespace] ||| [namespace]	count=1
function_name	para el [function_name] ||| is [function_name]	count=1
function_name	sistema ||| rotate	count=1
function_name	servidor apache ||| apache	count=1
function_name	devuelve mensajes de: estado ||| get status string	count=1
arg_pair	devuelve una ||| string $format	count=1
function_name	descripción de la ||| cairo ps surface create	count=1
arg_pair	mailbox ||| string $username	count=1
function_name	que [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	actual ||| request	count=1
return	espacios en ||| string	count=1
function_name	espacios en blanco u ||| ltrim	count=1
function_name	campos de una determinada ||| field	count=1
function_name	función devuelve el nombre ||| name	count=1
arg_pair	de un ||| resource $pdfdoc int $textflow	count=1
function_name	[function_name] un objeto ||| [function_name] date	count=1
function	crea un [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=1
arg_pair	una matriz asociativa ||| string $format string $date	count=1
arg_pair	variables globales ||| string $encoded_string	count=1
arg_pair	menudo ||| int $dev int $pri	count=1
arg_pair	los clientes en ||| string $name	count=1
function_name	de los métodos de ||| methods	count=2
arg_pair	dibuja el ||| int $y	count=1
function_name	el ||| set start	count=2
function_name	búsqueda finalice ||| time allowed	count=1
function_name	[function_name_1] épocas de ||| [function_name_1] output stagnation [function_name_2]	count=1
arg_pair	una y devuelve ||| string $new_data2 string $error	count=1
function_name	primo ||| gmp	count=1
function_name	variádico ||| variadic	count=1
function_name	similar a msql_fetch_array() ||| msql	count=1
function	respuesta [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	tiene derechos ||| copyrighted	count=1
namespace	después de ||| function	count=1
function	[function_name_1] el archivo ||| [function_name_1] [arg_pair_2]	count=1
return	el contenido de un ||| string	count=1
function_name	tipo de la ||| type	count=3
function_name	entregada ||| ctype upper	count=2
arg_pair	puerto ||| int $port	count=1
function_name	la base de ||| start db	count=1
function	campo [arg_pair_2] ||| [function_name_1] table [arg_pair_2]	count=1
function_name	devuelve ||| curl strerror	count=2
namespace	búfer de ||| splfileobject	count=1
namespace	del ||| function	count=4
function_name	crea una nueva ||| create comment	count=1
function_name	formateador de la salida ||| highlight formatter	count=1
function_name	de línea actual para ||| current line number	count=1
function_name	archivo/usuario ||| apc bin	count=1
function_name	[function_name_1] código ||| [function_name_2] [function_name_1]	count=1
namespace	por lo menos tantos ||| solrquery	count=1
function_name	[function_name_1] relación ||| [function_name_2] [function_name_1]	count=8
function_name	frase de ||| phrase	count=2
return	especificado ||| bool	count=1
function	[function_name_1] el nombre ||| [function_name_1] [arg_pair_2]	count=2
function_name	la que las palabras ||| frequency	count=1
function_name	crea ||| create comment	count=2
function_name	disponible la ||| open memory image	count=1
function_name	codificados por utf-8 ||| utf8 decode	count=1
function_name	devuelve la severidad de ||| get severity	count=1
function_name	la caché de la ||| cache size	count=1
namespace	no persistente a ||| function	count=1
function_name	el siguiente resultado ||| fetch	count=1
function_name	función crea ||| create attribute	count=1
return	un ||| bool	count=3
function_name	string ||| generate token	count=2
function_name	devuelve el número de ||| imap msgno	count=1
function_name	en ||| loaded extensions	count=1
function	información [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	dice si el ||| enc is	count=1
arg_pair	archivo local [arg_pair_2] ||| [arg_pair_2] [arg_pair_1] int $startpos	count=1
function_name	simplexml y ||| simplexml	count=1
namespace	se defina sobre ||| zmqdevice	count=1
function_name	las palabras que ||| set	count=1
function_name	círculo con ||| ps arcn	count=1
namespace	trabajo datos que el ||| gearmanjob	count=1
function_name	obtiene el ascenso vertical ||| ascent	count=1
arg_pair	en la posición indicada. ||| int $left int $top	count=1
namespace	objeto domentityreference ||| domentityreference	count=1
function_name	instanciación del ||| on create	count=1
namespace	un segundo o ||| sdo_das_xml	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] create standard [arg_pair_2]	count=1
function_name	configuración interna especificada ||| iconv set encoding	count=1
function_name	[function_name_1] [function_name_2] para abrir un diccionario ||| function int [function_name_2] [function_name_1] string $language string $spelling	count=1
namespace	el carácter ||| function	count=1
function_name	el modo especificado ||| mode	count=1
function_name	del ||| uudecode all	count=2
function_name	porción de ||| strrichr	count=1
function_name	archivo codificado mediante ||| mailparse uudecode	count=1
return	seguimiento ||| mongocursor	count=2
function_name	nuevo ||| document	count=1
arg_pair	parada empleada durante ||| resource $ann int $stop_function	count=1
function_name	información sobre un proceso ||| proc	count=1
function_name	marcador sujeto ||| bookmark	count=1
arg_pair	mapea a ||| string $value string $field_override	count=2
function_name	nonce ||| nonce	count=1
function_name	servicio y las características ||| start service	count=1
function_name	usando las funciones ||| call	count=1
function	las tablas [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	data especificada usando la ||| string $data	count=1
function_name	proceso abierto mediante ||| get status	count=1
function_name	área de recorte ||| ps clip	count=1
function_name	prueba ||| prob prime	count=2
function_name	devuelve el número ||| udm get	count=1
function_name	un diff unificado ||| xdiff file diff	count=1
return	añadir más contenido en ||| bool	count=1
function_name	que las palabras que ||| min	count=1
return	conjunto de ||| sqlite3result	count=1
arg_pair	de agua digital dentro ||| imagick $watermark_wand	count=1
function_name	la descripción de la ||| cairo font face	count=1
function_name	imágenes ||| images	count=6
function_name	cada archivo ||| mailparse uudecode all	count=1
function_name	de interpretación del texto ||| set text rendering	count=1
return	posición actual ||| void	count=1
function_name	eliminar ||| remove	count=1
arg_pair	útil ||| string $blob_id	count=1
function_name	de dsn ||| odbc	count=1
function_name	apuntador de ||| mailparse	count=1
function_name	de ||| await data	count=2
arg_pair	la información del ||| int $schema_type string $table_name	count=1
namespace	se unen en ||| function	count=1
function_name	consultas que serán ||| mlt	count=1
function_name	se buscarán ||| dbplus	count=1
function_name	los ||| ncurses	count=1
function_name	obtiene la información de ||| get data	count=1
function_name	por lo menos ||| set mlt min doc	count=1
function_name	una ||| create dbref	count=1
function_name	la tabla donde ||| table	count=1
function_name	generalmente este ||| reset error	count=1
return	de retorno [return] ||| [return]	count=3
namespace	el eleménto padre del ||| xmlreader	count=1
arg_pair	len bytes de información ||| int $len	count=1
namespace	datos que se encuentra ||| function	count=1
function_name	el numerador ||| task numerator	count=1
function_name	corresponde al nombre ||| by name	count=1
function_name	la extensión a la ||| extension	count=1
return	registrar los errores ||| void	count=1
function_name	la acción especificada ||| gupnp service action	count=1
function_name	las bibliotecas de oracle ||| oci	count=1
namespace	si ||| solrdocument	count=1
return	usadas en la ||| bool	count=1
function_name	de nombres ||| is default namespace	count=1
arg_pair	función cubrid_set_query_timeout() se ||| int $timeout	count=1
arg_pair	una ||| string $content	count=1
namespace	no ||| mongocursor	count=2
function_name	círculo ||| pdf circle	count=1
function_name	establece ||| set max	count=1
function_name	acepta uno dos ||| format	count=1
function_name	interoperabilidad stubs específicas ||| default stub	count=1
arg_pair	el directorio de volcado ||| string $dump_directory	count=2
arg_pair	índice especificado por newval ||| mixed $newval	count=1
function_name	post ||| get post	count=2
arg_pair	especificado por path ||| string $path	count=1
function_name	una entrada de ||| entry	count=1
arg_pair	simbólico al objetivo target ||| string $target	count=1
function_name	se encuentra disponible la ||| ps open memory	count=1
function_name	actual patrón guía ||| dash	count=1
function_name	número de ||| set	count=1
function_name	de error fdf de ||| fdf error	count=1
return	sybase_connect() ||| resource	count=1
function_name	el número de error ||| bzerror	count=1
function_name	clase propia que será ||| info class	count=1
function_name	nombre corto para un ||| id3 get frame short name	count=1
function_name	tarea de [function_name] ||| do [function_name]	count=3
function_name	una excepción de ||| using exceptions	count=1
arg_pair	de forma parecida ||| string $charset	count=1
arg_pair	donde las propiedades correspondientes ||| array $ctorparams	count=1
function_name	una clase y realiza ||| parse class	count=1
function_name	devuelve la información de ||| get data	count=1
function_name	línea de unión ||| set line join	count=2
function_name	nombre de sitio ||| code by name	count=1
return	retorna el tiempo máximo ||| int	count=1
function_name	firma de verificación de ||| signature	count=1
function_name	el carp::cluck de ||| apd clunk	count=1
return	el sistema ||| bool	count=1
function_name	en el que comenzar ||| terms lower	count=1
return	graphicsmagick como una ||| string	count=1
function_name	función cierra ||| close	count=1
function_name	función api que lanzó ||| apiname	count=1
function_name	si un número es ||| prob prime	count=1
function_name	unrar encuentre ||| using exceptions	count=1
function_name	documento pdi de tipo ||| pdi value	count=1
arg_pair	iterar a través ||| int $colnum	count=1
function_name	línea de [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	todas las estructuras ||| int $table	count=1
arg_pair	data la cuál fue ||| string $data	count=1
function_name	mueve el cursor al ||| move to	count=1
function_name	máximo de épocas ||| max cand epochs	count=3
arg_pair	un método y una ||| string $data string $method	count=1
function_name	descripción de la ||| surface restrict to level	count=1
return	que el valor predeterminado ||| void	count=1
function_name	elimina una variable con ||| shm remove	count=1
function_name	de memcached::prepend() ||| prepend by key	count=1
function_name	el espacio de ||| is	count=1
function_name	bloquearán la e/s del ||| eio readahead	count=1
arg_pair	direcciones ||| zmqsocket $frontend	count=1
function_name	el campo ||| field	count=2
function_name	de línea actual para ||| get current line	count=1
arg_pair	dada por relation ||| resource $relation	count=1
arg_pair	valores desde una entrada ||| resource $link_identifier resource $result_entry_identifier	count=1
function_name	la codificación de ||| mb	count=1
return	a el búfer ||| int	count=1
function_name	devuelve los [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	antes de ||| function	count=1
function_name	tamaño de fragmeto ideal ||| regex slop	count=1
return	función ||| int	count=2
function_name	cubrid_lock_read() ||| lock read	count=2
return	actualmente activa en ||| bool	count=1
function_name	un string multibyte predefinido ||| mb ereg search	count=1
function_name	entidades ||| entity decl	count=1
function_name	firma usando el certificado ||| openssl pkcs7 sign	count=1
function	[function_name_1] repos_url de ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	origen a una ||| domdocument $doc string $uri	count=1
return	ambos ||| void	count=1
arg_pair	coincida ||| float $fuzz	count=1
function_name	de patrones de entrenamiento ||| fann length	count=1
function_name	textflow ||| textflow	count=2
namespace	de errores de la ||| function	count=1
arg_pair	simulado aclarando ||| int $height	count=1
return	eliminar ||| string	count=1
function_name	el desplazamiento del error ||| error shift	count=2
function_name	de documento [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	los ||| dbplus	count=1
function_name	cada servidor virtual ||| server by	count=1
namespace	apuntada por ||| function	count=1
function_name	lista ||| list	count=7
namespace	es un alias ||| solrdocument	count=1
function_name	ya ha ||| add	count=1
function_name	establece la ||| set	count=22
function_name	filtro de flujo ||| filter	count=1
function_name	código de error ||| curl strerror	count=1
arg_pair	relation al dado ||| string $name	count=1
arg_pair	botón ||| int $x int $y	count=1
function_name	encontrados en la configuración ||| config	count=1
function_name	la descripción de ||| surface	count=5
return	devuelve un objeto con ||| object	count=2
function_name	devuelve el xml recibido ||| get	count=1
namespace	configura o ||| function	count=1
function_name	para los ||| set event	count=1
function_name	de primer plano y ||| color	count=1
namespace	el valor predeterminado de ||| directory	count=1
function_name	clase en ||| class	count=1
arg_pair	colores ||| int $numcolors	count=2
return	la versión ||| string	count=1
function_name	[function_name_1] de error ||| [function_name_2] [function_name_1]	count=3
arg_pair	de secuencia ||| resource $imap_stream	count=1
function_name	de emitir advertencias y ||| set	count=1
function_name	barras ||| addcslashes	count=1
function_name	escala de un campo ||| field scale	count=1
function_name	infomación ||| textblock	count=1
function_name	alta prioridad ||| task high	count=2
function_name	los parámetros ||| get params	count=1
return	el de ||| bool	count=1
arg_pair	esta función intenta ||| string $destination	count=1
function_name	publicación de un ||| fdf get ap	count=1
arg_pair	relleno actual a un ||| resource $p float $g	count=1
arg_pair	de direcciones servicios ||| zmqsocket $backend	count=1
arg_pair	los bordes ||| int $x int $y	count=1
function_name	agregar ||| add required	count=1
function_name	a ||| start	count=1
namespace	cuando se dibujan ||| function	count=1
function_name	ítems cuyas claves se ||| multi	count=1
function_name	asociativo ||| assoc	count=1
arg_pair	ruta que se especifique ||| mixed $entries	count=1
function_name	a este ||| kernel	count=1
function_name	de configuración ||| ini	count=2
arg_pair	data y devuelve ||| string $data	count=1
function_name	obtiene ||| get file info	count=1
namespace	ha sido creado ||| sdo_das_xml	count=1
function_name	y devuelve la imagen ||| compare image	count=1
function_name	que se van a ||| set	count=1
function_name	los dispositivos de ømq ||| construct	count=1
function_name	encuentre ||| using exceptions	count=2
arg_pair	desde la posición offset ||| int $offset	count=1
return	de filas que se ||| solrquery	count=1
function_name	de la imagen ||| sparse color image	count=1
function_name	bases de datos geoip ||| geoip db	count=1
function_name	usando ingres_query() en ||| ingres	count=1
function_name	[function_name_1] conexión a ||| [function_name_2] [function_name_1]	count=1
return	del resultado asociado con ||| array	count=1
namespace	mapa ||| weakmap	count=5
return	opacidad de los perfiles ||| float	count=1
function_name	la imagen ||| tint image	count=1
return	transformación actual ctm en ||| bool	count=1
function_name	recorre el ciclo ||| eio nop	count=1
return	texto ||| string	count=3
function_name	[function_name_1] del codificador ||| [function_name_2] [function_name_1]	count=4
function_name	devuelve una lista de ||| list dicts	count=1
function_name	lo contornea ||| stroke	count=1
function_name	de flags como ||| flags	count=1
arg_pair	memcached::replace() con ||| mixed $value int $expiration	count=1
arg_pair	columna de input identificado ||| array $input	count=1
function_name	glo ||| to glo	count=1
function_name	compilación del ||| qc get available	count=1
namespace	estado ||| mongocursor	count=1
arg_pair	uri que contiene el ||| string $encoding	count=1
namespace	un valor ||| rarexception	count=1
namespace	solo que el valor ||| directory	count=1
namespace	el de ||| harupage	count=1
arg_pair	user especificado ||| string $user	count=1
function_name	el espacio de nombres ||| default	count=1
function_name	parte [function_name] ||| set [function_name]	count=1
arg_pair	especifica por dn ||| resource $link_identifier string $dn	count=1
arg_pair	eio_* ||| callable $execute	count=1
namespace	la cuenta ||| gmagickpixel	count=1
arg_pair	codificación de caracteres ||| string $encoding	count=1
namespace	línea de base ||| harufont	count=1
function_name	omitiendo el nombre del ||| path	count=1
arg_pair	memcached::set() ||| mixed $value int $expiration	count=1
return	en el parámetro ||| string	count=1
arg_pair	name el ||| string $name	count=1
arg_pair	repos_url de ||| string $repos_url	count=1
function_name	de filas afectadas ||| fbsql rows fetched	count=2
arg_pair	[arg_pair_1] stream ||| [arg_pair_2] string $filtername [arg_pair_1]	count=4
function_name	el uri [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	descripción de la ||| cairo matrix transform distance	count=1
function_name	facetas de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	el espacio de nombres ||| bool	count=1
function_name	codificación de cabecera ||| mb encode mimeheader	count=2
function_name	el valor actual ||| set value	count=1
arg_pair	el parámetro old ||| string $key int $old	count=1
arg_pair	y socket. -- ||| zmqsocket $frontend	count=1
function_name	cierra el trazado actual ||| pdf closepath	count=1
function_name	de imap si los ||| imap	count=1
function_name	[function_name_1] imagen y ||| [function_name_2] [function_name_1]	count=4
function_name	de un campo de ||| field	count=1
namespace	asociativo que contiene ||| function	count=1
function_name	función devolverá la ||| odbc	count=1
namespace	mongocommandcursor manualmente ||| mongocommandcursor	count=1
function_name	la clave /encoding ||| fdf get encoding	count=1
function_name	temporal ||| mailparse uudecode all	count=2
namespace	las claves x e ||| gmagick	count=1
function	[function_name_1] estructura ||| [function_name_1] train from callback [arg_pair_2]	count=1
function_name	[function_name_1] multi-dimensional ||| [function_name_2] [function_name_1]	count=1
function_name	índice del array actual ||| key	count=1
function_name	de correo correctamente formateada ||| rfc822 write address	count=1
function_name	[function_name_1] tarea ||| [function_name_2] [function_name_1]	count=10
function_name	buferizado event ||| buffer set	count=1
function_name	los colores de ||| color	count=1
function_name	el ||| msgno	count=2
function_name	recurso de la connection ||| dbname	count=1
function_name	establece el conjunto de ||| mysql set charset	count=1
function_name	fila del resultado frontbase ||| fbsql data	count=1
function_name	de mensaje para el ||| msgno	count=1
function_name	en un archivo temporal ||| uudecode all	count=1
arg_pair	de texto ||| string $text	count=2
return	html y php ||| string	count=1
arg_pair	un punto de código ||| mixed $codepoint int $property	count=1
arg_pair	empleando delimiter como delimitador ||| string $delimiter string $null_as	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=6
function_name	propiedad dada tal como ||| property	count=1
function_name	imagen en particular ||| image filename	count=3
function_name	[function_name_1] callback ||| [function_name_2] [function_name_1]	count=1
arg_pair	abstracción que ||| zmqsocket $backend	count=1
function_name	la cadena ||| string	count=1
function_name	con el id ||| id	count=1
function_name	búsqueda [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	la página total o ||| function	count=1
namespace	puntero interno ||| oci-lob	count=1
function_name	filas interno del ||| seek	count=1
namespace	posición actual y escribe ||| splfileobject	count=1
function_name	textflow y ||| textflow	count=1
arg_pair	html y php del ||| resource $handle int $length	count=1
function_name	argumento es ||| set	count=1
arg_pair	y php del texto ||| int $length	count=1
function_name	colores de primer plano ||| ncurses color set	count=1
function_name	asociativo desde una consulta ||| fetch	count=1
return	establece ||| void	count=2
arg_pair	función callback por cada ||| mixed $arg	count=1
namespace	forma ||| function	count=1
function_name	la frecuencia ||| set	count=1
function_name	captura una ||| object	count=1
arg_pair	de mensaje y socket. ||| zmqsocket $frontend	count=1
function_name	formateo textline ||| textline	count=1
function_name	reinicia el ||| fann reset	count=1
function_name	puntero interno a fila ||| seek	count=1
function	[function_name_1] ya ||| [arg_pair_2] [function_name_1]	count=4
function_name	llena un ||| array fill	count=1
arg_pair	utiliza para hacer llamadas ||| mixed $input_headers	count=1
namespace	línea por línea en ||| function	count=1
function_name	buzon ||| imap createmailbox	count=2
function	establece la [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=9
function_name	cambiar el ecm ||| get cascade output stagnation	count=1
arg_pair	usando un método ||| int $width	count=1
namespace	por encima del ||| function	count=1
function	control de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	se identifica ||| function	count=2
function_name	función ||| open	count=1
function_name	peso de ||| weight	count=1
namespace	presente que es menor ||| judy	count=1
arg_pair	la de memcached::replace() ||| mixed $value int $expiration	count=1
function_name	por el puntero ||| bzerrstr	count=1
arg_pair	cubrid_set_query_timeout() se usa para ||| resource $req_identifier int $timeout	count=1
function_name	condición para el almacenamiento ||| condition	count=1
function_name	atributo ||| set attribute	count=1
namespace	el pid del ||| mongoid	count=1
function_name	de composición asociado a ||| compose	count=1
return	que las palabras que ||| solrquery	count=1
return	en progreso en ||| bool	count=1
function_name	nombre corto ||| frame short name	count=1
arg_pair	plural ||| string $msgid2	count=1
function_name	la que las ||| frequency	count=1
return	regexiterator::setmode() [return] ||| [return]	count=1
namespace	como mysql_query() lo ||| function	count=1
return	en des ||| string	count=1
function_name	devuelve el máximo de ||| memory get	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] personal resource $dict [arg_pair_2]	count=1
arg_pair	especifica un ||| string $fragmenter	count=1
function_name	delimitadores indicados ||| explode	count=1
function_name	[function_name] declaraciones de ||| get [function_name]	count=1
arg_pair	a ingres_fetch_array() ||| int $result_type	count=1
function_name	distancia de ||| get	count=1
namespace	omisión del parámetro de ||| reflectionparameter	count=1
function_name	lista ||| ps open memory	count=1
function_name	escalar ||| fann scale	count=1
function_name	desplegar el logo de ||| php logo	count=1
return	se le ha ||| int	count=1
function_name	función de activación para ||| activation	count=2
function_name	cliente ||| client identifier	count=2
arg_pair	desde el domain ||| string $codeset	count=1
namespace	javascript registradas mediante v8js::registerextension() ||| v8js	count=1
function_name	dado y ||| all	count=1
function_name	método devuelve [function_name_2] ||| [function_name_1] [function_name_2]	count=13
function_name	detalles del estado http ||| http status message	count=1
function_name	canal de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la ||| set interlace	count=1
namespace	entrada ||| rarentry	count=2
function	inverso del [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	de ||| ps open memory image	count=2
function_name	una imagen izquierda ||| stereo image	count=1
arg_pair	para iterar a ||| resource $stmt int $colnum	count=1
function_name	el espacio de nombres ||| is default	count=1
function_name	máximo [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	simulado ||| int $height	count=1
function_name	[function_name_1] paradox ||| [function_name_2] [function_name_1]	count=2
return	datos del apuntador de ||| array	count=1
namespace	a una única ||| imagickkernel	count=1
arg_pair	esta función intenta ||| string $filename string $destination	count=1
function_name	textura de relleno ||| polygon	count=1
arg_pair	callback ||| callable $callback	count=1
arg_pair	en el ||| string $str	count=2
return	contenido en ella ||| bool	count=1
namespace	valor especial indicando ||| rarexception	count=1
function_name	es true entonces en ||| set	count=1
function_name	de palabras dentro ||| str word	count=1
function_name	la caché ||| apc compile	count=1
function_name	nombre largo para un ||| get frame long name	count=1
namespace	el ||| mongoid	count=1
function_name	diccionario ||| enchant broker request dict	count=1
function_name	para almacenar información personalizada ||| set metadata	count=1
arg_pair	y puerto específicado ||| int $port	count=1
arg_pair	y length ||| string $charset	count=1
function_name	definidos por ||| gupnp control point browse	count=1
function_name	tie ||| set tie	count=1
function_name	afectadas por la última ||| affected	count=1
return	string con barras invertidas ||| string	count=1
function_name	documentos como este serán ||| doc frequency	count=1
function_name	cargar entidades externas ||| disable entity	count=1
function_name	el monitoreo a ||| fam monitor directory	count=1
function_name	lista de ||| memory	count=1
arg_pair	un ||| resource $broker	count=1
function_name	el método de disposición ||| dispose	count=2
function_name	breaker ||| tie breaker	count=2
namespace	o mediante base64 ||| function	count=2
namespace	intenta eliminar ||| function	count=1
arg_pair	parámetro stack es ||| string $stack string $offset	count=1
arg_pair	parecida a sybase_connect() ||| string $servername string $username	count=1
function_name	[function_name] si hay ||| [function_name]	count=2
arg_pair	esté disponible para ||| resource $stmt int $row	count=1
namespace	un carácter «en blanco» ||| intlchar	count=1
arg_pair	de ømq ||| zmqsocket $backend	count=1
function_name	rellenado por ||| str pad	count=1
function_name	todos ||| ping	count=1
namespace	host/puerto o ||| function	count=1
return	al igual que closedir() ||| void	count=1
function_name	connection ||| dbname	count=1
function_name	[function_name_1] no analizadas ||| [function_name_2] [function_name_1]	count=8
function_name	de pdflib ||| pdf	count=1
arg_pair	el valor de ||| mixed $bordercolor int $x	count=1
arg_pair	de un assoc_array en ||| array $assoc_array int $options	count=1
arg_pair	una matriz a la ||| resource $p	count=1
arg_pair	dos diferencias: ||| string $servername string $username	count=1
function_name	frontbase asociado ||| fbsql data	count=1
return	lista de dsn disponibles ||| array	count=1
function_name	devuelve el nombre de ||| get host	count=1
function_name	las conexiones de salida ||| fann get cascade	count=1
function_name	no ||| set mlt	count=1
function_name	menos tantos ||| mlt min doc frequency	count=1
arg_pair	para ||| string $token	count=1
function_name	entrenamiento [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	string en un array ||| array	count=1
return	cadena que especifica ||| string	count=1
function_name	fracción de fann_get_cascade_candidate_change_fraction() ||| candidate	count=1
arg_pair	eliminar ||| resource $handle int $length	count=1
function_name	manejador de instrucciones ||| processing instruction handler	count=1
function_name	el nombre corto para ||| short name	count=1
function_name	sets tie breaker parameter ||| set tie breaker	count=1
function_name	datos o información ||| info	count=1
function_name	que se ha asignado ||| peak	count=1
function	[function_name_1] clase especificada ||| [function_name_1] [arg_pair_2]	count=1
function_name	la descripción ||| surface get	count=2
function_name	resultado frontbase asociado ||| fbsql	count=1
function_name	que las palabras que ||| mlt min	count=1
function_name	y devolver ||| using	count=1
function_name	una columna ||| db2	count=1
function_name	retorna el tamaño ||| size	count=1
function_name	el número de ||| start	count=1
arg_pair	lista de filtros adjuntos ||| int $read_write mixed $params	count=2
function_name	longitud de un campo ||| field len	count=1
arg_pair	argumento offset a ||| resource $lob_identifier int $offset	count=1
function_name	[function_name] y escribe ||| ps open [function_name]	count=1
arg_pair	redimensiona una ||| int $columns int $rows	count=1
arg_pair	de intermediarios de ||| zmqsocket $backend	count=1
function_name	de ordenación personalizada ||| sort	count=1
arg_pair	funciones socket_create() o ||| int $length	count=1
function_name	opendir readdir y closedir ||| readdir	count=1
function_name	usando una paleta hald ||| hald clut	count=1
function_name	el ruido granular ||| despeckleimage	count=1
function_name	recorte ||| ps clip	count=2
arg_pair	decir el valor ||| int $face	count=1
function_name	de ssl para las ||| set sslchecks	count=1
function_name	[function_name_1] equilibrado de ||| [function_name_1] [function_name_2]	count=1
arg_pair	por dn se ||| string $dn	count=1
return	conseguido [return] ||| [return]	count=3
function_name	permisos ||| fchmod	count=1
namespace	que está asociado al ||| function	count=1
function_name	[function_name_1] atributo en ||| [function_name_1] [function_name_2]	count=2
return	el puntero de el ||| int	count=1
arg_pair	de ||| resource $connection_id	count=3
namespace	un nuevo objeto domprocessinginstruction ||| domprocessinginstruction	count=1
function	[function_name_1] relation la ||| [function_name_1] first [arg_pair_2]	count=1
function_name	datos abierta filepro ||| filepro rowcount	count=1
function_name	sin tratar del servidor ||| raw	count=2
arg_pair	de relation al dado ||| resource $relation	count=1
arg_pair	datos cubrid y guarda ||| resource $lob_identifier	count=1
arg_pair	una fuente [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	un assoc_array en valores ||| array $assoc_array int $options	count=1
function	[function_name_1] nombre ||| [arg_pair_2] [function_name_1]	count=4
function_name	como este serán ignoradas ||| set mlt min doc	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $p [arg_pair_2]	count=4
function_name	opciones ||| assert options	count=1
arg_pair	une tres cadenas en ||| string $old_data string $new_data1	count=1
function	desde [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	de interoperabilidad stubs ||| stub	count=1
function_name	[function_name_1] definidos por ||| [function_name_1] [function_name_2]	count=4
function_name	la intersección de ||| array uintersect	count=1
namespace	se van a ||| solrquery	count=1
function_name	a fgets() ||| fgetss	count=1
arg_pair	excepto que fgetss() intenta ||| resource $handle	count=1
namespace	con valores [namespace] tienen ||| [namespace]	count=1
function_name	devuelve el tamaño actual ||| zip entry filesize	count=1
function_name	el usuario ||| uksort	count=1
arg_pair	función callback ||| int $pri callable $callback	count=1
function_name	un blob en modo ||| blob	count=1
arg_pair	elementos de un ||| resource $pdfdoc int $doc	count=1
function_name	toma el tamaño ||| size	count=1
function_name	se comporta de forma ||| pconnect	count=1
function_name	prefijo ||| prefix	count=1
function_name	si es uno de ||| is	count=1
return	en el área inmediata ||| bool	count=1
function_name	disponibles después de llamarla ||| odbc	count=1
arg_pair	y php ||| resource $handle	count=1
return	la última ||| array	count=1
function	[function_name_1] database especificada ||| [function_name_1] [arg_pair_2]	count=2
namespace	por encoding ||| function	count=1
function_name	replicación y equilibrado ||| ms	count=1
function_name	línea donde ||| line	count=1
function_name	la longitud [function_name] ||| [function_name]	count=1
function_name	si el argumento es ||| exceptions	count=1
return	resultante definido en fdf_save_file() ||| bool	count=1
namespace	de primer plano ||| function	count=1
function_name	ejecuta una sentencia sql ||| exec	count=1
function_name	onda a la ||| wave	count=1
arg_pair	una búsqueda en un ||| string $msgid2	count=1
arg_pair	un fichero a ||| resource $context	count=1
function_name	por la imagen ||| image	count=1
function_name	columna ||| field	count=1
function_name	las palabras serán ignoradas ||| mlt	count=1
function_name	[function_name] una vez ||| [function_name] add doc	count=1
function_name	mime ||| type to mime	count=1
function_name	indicado ||| crack	count=1
function_name	abierto mediante el ||| proc get status	count=1
arg_pair	oid dado ||| resource $conn_identifier string $oid	count=1
function_name	advertencias y devolver un ||| set using exceptions	count=1
arg_pair	el result set ||| resource $result	count=1
function_name	fichero de esquema ||| add	count=1
return	los parámetros dados ||| array	count=1
function_name	asociado ||| strerror	count=1
function_name	arbitrarios a ||| ping	count=1
namespace	los ||| function	count=4
function_name	nombre y devolver ||| char from name	count=1
function_name	número de línea actual ||| current line	count=1
arg_pair	que se especifique ||| mixed $entries	count=1
function_name	obtiene los ||| get	count=1
function_name	repositorio indicado ||| svn	count=1
return	la función va aquí ||| cairopattern	count=4
function_name	que aparecen en el ||| addcslashes	count=1
arg_pair	de unicode propertyaliases.txt ||| int $property int $namechoice	count=1
return	sentencia ||| int	count=1
function_name	errores y alertas ||| sqlsrv errors	count=1
arg_pair	en ||| bool $flag	count=1
arg_pair	de start ||| int $start	count=2
function_name	la excepción ||| exception	count=2
function_name	los datos ||| mailparse	count=1
function_name	directorio ||| dbplus	count=1
function_name	ausente que es igual ||| empty	count=1
function_name	registro del ||| record	count=1
function_name	con los nombres de ||| field names	count=1
return	utilizar en la ||| bool	count=1
function_name	información del documento ||| info	count=1
function_name	donde los grados indican ||| swirl	count=1
function_name	una matriz que ||| names	count=1
arg_pair	la codificación ||| string $encoding	count=2
arg_pair	se comporta de ||| string $servername	count=1
function_name	descendientes con unos ||| elements by tag name ns	count=1
function_name	número máximo [function_name_2] ||| [function_name_1] cand [function_name_2]	count=3
arg_pair	socket. ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	función establece [arg_pair] ||| [arg_pair]	count=3
arg_pair	de forma ||| string $charset	count=1
function_name	del estado http ||| get http status message	count=1
return	definido [return] ||| [return]	count=3
return	excepción ||| void	count=1
function_name	reemplaza el hijo ||| replace child	count=3
arg_pair	para usarla como una ||| string $name	count=1
function_name	[function_name_1] bloques o ||| [function_name_2] [function_name_1]	count=6
namespace	un archivo tar o ||| phardata	count=1
namespace	se buscarán los ||| function	count=1
function_name	entrelazamiento ||| imageinterlace	count=1
function_name	de ||| data source	count=4
arg_pair	y ||| array $config	count=1
function_name	información sobre dicho hash ||| password get info	count=1
function_name	[function_name_1] de apache ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name] inspeccionada ||| mysqlnd qc get [function_name] trace	count=3
function_name	cambia parámetros del servidor ||| server params	count=1
function_name	las banderas [function_name] ||| [function_name]	count=1
function_name	tendencias de cada ||| bias array	count=1
function_name	estructura ||| imap fetchstructure	count=1
arg_pair	argumento offset a la ||| int $offset	count=1
arg_pair	una ||| string $connection_string string $character_set	count=1
function_name	la página ||| set flatness	count=1
arg_pair	una función ||| string $column_key int $flags	count=1
arg_pair	mezcla alfa para usar ||| resource $image	count=1
arg_pair	la función cubrid_set_query_timeout() ||| resource $req_identifier	count=1
return	el momento actual medido ||| int	count=1
namespace	operación ||| regexiterator	count=1
arg_pair	[arg_pair_1] en local_socket ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	crea ||| create entity reference	count=2
arg_pair	se renombra/mueve ||| string $newrdn	count=1
function_name	de opendir readdir y ||| eio readdir	count=1
namespace	tipo ||| rarexception	count=1
function_name	especial ||| exceptions	count=1
arg_pair	bytes ||| int $length	count=1
function_name	diferentes opciones ||| options	count=1
function_name	es el ||| default namespace	count=1
function_name	límite del recurso especificado ||| resource limit	count=1
arg_pair	de fichero fd ||| int $mode	count=2
function_name	[function_name_1] fila en ||| [function_name_2] [function_name_1]	count=4
namespace	api graphicsmagick ||| gmagick	count=1
namespace	la opacidad ||| gmagickdraw	count=1
function_name	[function_name_1] de línea ||| [function_name_1] [function_name_2]	count=1
function_name	reemplaza o ||| replace	count=1
arg_pair	variable_key y ||| int $variable_key	count=1
function_name	de error ||| error	count=9
arg_pair	hacen referencia ||| string $fk_qualifier	count=1
function_name	colector de referencia circular ||| gc	count=1
namespace	menor que 1 se ||| function	count=1
function_name	la imagen ||| compare image channels	count=1
function_name	tidy a sus valores ||| tidy reset	count=1
function_name	uso ||| scache meminfo	count=1
function_name	el ||| imap msgno	count=4
function_name	el nivel mínimo de ||| sybase min	count=1
function_name	una entrada ||| zip	count=1
function_name	configuración ||| config	count=4
function_name	instancia xml ||| string	count=1
arg_pair	acs ||| string $servicename string $machine	count=1
function_name	fichero ha sido cambiado ||| mtime	count=1
arg_pair	str con todos los ||| string $str string $encoding	count=2
function_name	[function_name_1] tidy ||| [function_name_2] load [function_name_1]	count=2
function_name	de dsn disponibles después ||| odbc	count=1
function_name	global para el primer ||| first	count=1
arg_pair	modo de acceso ||| int $mode int $pri	count=1
function_name	devuelve el número ||| num fields	count=1
return	de la imagen ||| bool	count=1
function_name	en modo de no-bloqueo ||| nb	count=1
return	un array con ||| string	count=1
function_name	lo menos tantos documentos ||| set	count=1
function_name	argumento es true ||| set using	count=1
namespace	ambos puedan ||| imagickkernel	count=1
return	el resultado ||| int	count=1
function_name	sido creado con ||| types	count=1
arg_pair	en ||| string $str	count=4
arg_pair	left ||| mixed $left	count=1
arg_pair	server_key se puede ||| array $keys	count=1
function_name	búsqueda en el ||| search	count=1
function_name	mínimo ||| min message	count=1
function_name	país correspondiente ||| country	count=1
return	de ssl ||| bool	count=1
namespace	forma parecida a ||| function	count=1
function_name	ítem por ||| increment	count=1
return	por el puntero ||| string	count=1
arg_pair	oracle name ||| string $name	count=1
function_name	devuelve el operador ||| get	count=1
arg_pair	a mktime() excepto ||| int $hour int $minute	count=1
function_name	de consulta de ||| query	count=1
function_name	el coseno para ||| trader cos	count=1
arg_pair	[arg_pair_1] [arg_pair_2] todas las operaciones de ||| function bool ps setlinewidth [arg_pair_2] [arg_pair_1]	count=2
function_name	csr ||| openssl csr	count=2
arg_pair	una nueva definición ||| float $height float $xstep	count=1
function_name	dsn disponibles ||| data	count=1
function_name	existe ||| offset exists	count=2
function_name	[function_name_1] compresión para ||| [function_name_2] [function_name_1]	count=1
function_name	por lo menos tantos ||| set	count=1
function_name	el token y el ||| token	count=1
function_name	las extensiones de ficheros ||| extensions	count=1
function_name	entradas de los ||| input	count=1
function_name	acrobat [function_name] los scripts ||| fdf [function_name] doc	count=1
function_name	de ||| exceptions	count=2
function_name	palabras que no ||| set mlt	count=1
arg_pair	los datos en data ||| array $callbacks	count=1
function_name	pertenecen a ||| class names	count=1
arg_pair	lista de ||| resource $psdoc	count=1
function_name	[function_name_1] colores únicos ||| [function_name_1] image [function_name_2]	count=1
arg_pair	comporta de ||| string $servername	count=1
return	la época unix ||| int	count=1
arg_pair	pretende usarse ||| string $class_name string $file_extensions	count=1
arg_pair	bordes de la ||| int $y	count=1
namespace	en disco o desde ||| function	count=1
function	[function_name_1] conexión ||| [arg_pair_2] [function_name_1]	count=1
function_name	mantenidos por la transacción ||| fbsql commit	count=1
arg_pair	las restricciones de ||| int $facetsort string $field_override	count=1
function_name	campos en ||| fetch field	count=2
return	de documentación de una ||| string	count=2
return	función definida por ||| void	count=2
function_name	autocommit ||| db2 autocommit	count=1
arg_pair	dn se [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	sybase_connect() con dos ||| string $servername string $username	count=1
function_name	guarda [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	un ||| resource $psdoc	count=3
function_name	copia los ||| copy to	count=1
function_name	url de conexión ||| set location	count=1
function	desde [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
function_name	como el carp::croak de ||| apd croak	count=1
function_name	si el ||| module is	count=1
function_name	blob que ||| blob	count=1
function_name	función mysqli_get_server_version() [function_name] la ||| mysqli [function_name] server	count=1
function_name	variables de ||| variables	count=1
return	virtual actual donde ||| string	count=1
arg_pair	función callback [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	se asigne ||| work	count=1
function_name	espara a que los ||| loop	count=1
function_name	esta función crea ||| create attribute ns	count=1
function_name	registro ||| yaz record	count=1
function_name	de paso de sarprop ||| sarprop	count=2
namespace	y extrae cada archivo ||| function	count=1
function_name	nodo ||| node ns	count=1
arg_pair	el string str dado ||| string $str	count=1
namespace	las que ||| function	count=1
arg_pair	base de eventos especificada ||| resource $event_base	count=1
function_name	de nombres ||| default	count=1
arg_pair	aplica un vector de ||| mixed $tint mixed $opacity	count=1
function_name	lee la ||| zip read	count=1
function_name	la descripción ||| cairo ps surface	count=3
namespace	la versión plural ||| function	count=1
return	datos desde una ||| string	count=1
function_name	pdf usando ||| pdf open	count=1
arg_pair	la conexión [arg_pair_2] ||| [arg_pair_1] string $user [arg_pair_2]	count=2
function_name	la transacción ||| commit	count=1
function_name	las extensiones ||| spl autoload extensions	count=1
function_name	llamada a cubrid_list_dbs() ||| cubrid db	count=1
function_name	se comporta ||| sybase pconnect	count=1
function_name	de escritura del codificador ||| writing	count=1
function_name	emitir advertencias ||| using exceptions	count=1
arg_pair	en haystack y ||| bool $part string $encoding	count=2
function_name	eliminar cualesquiera bytes ||| fgetss	count=1
function_name	prueba automática sobre el ||| self test	count=1
function_name	comporta de forma parecida ||| pconnect	count=1
namespace	mensaje y ||| zmqdevice	count=1
namespace	por new ||| function	count=1
function_name	establecer los colores ||| color	count=1
arg_pair	la petición actual indicando ||| string $actor	count=1
function_name	la porción de ||| strrchr	count=1
function_name	indicado ||| closedict	count=1
function_name	seno para cada valor ||| trader asin	count=1
function	tupla [arg_pair_2] ||| [function_name_1] first [arg_pair_2]	count=3
function_name	especial indicando ||| exceptions	count=1
namespace	por omisión del parámetro ||| reflectionparameter	count=1
arg_pair	por flag a las ||| string $flag int $options	count=1
function_name	un blob ||| ibase blob echo	count=1
function	[function_name_1] [arg_pair_2] etiqueta ||| [function_name_1] tag [arg_pair_2]	count=2
return	a este para ||| void	count=1
arg_pair	de a b ||| gmp $b	count=1
function	[function_name_1] un ||| [function_name_1] input scaling params [arg_pair_2]	count=1
function_name	colores ||| ncurses color set	count=2
arg_pair	msglist al ||| resource $imap_stream string $msglist	count=1
function	[function_name_1] operaciones delete ||| [function_name_1] [arg_pair_2]	count=1
function_name	en por ||| mlt	count=1
arg_pair	de datos disponible ||| int $row int $offset	count=1
function_name	pdf con información ||| pdf	count=1
function_name	etiqueta id3v1 ||| get id3v1 tag	count=2
arg_pair	crea un efecto de ||| int $width	count=1
return	información sobre un proceso ||| array	count=1
function_name	cadena del formato utf-8 ||| pdf utf8	count=1
function_name	campos facet ||| facet fields	count=2
function_name	es ||| is	count=7
function_name	permite [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	color ||| gmagick	count=1
namespace	se encuentra activa actualmente ||| function	count=1
arg_pair	para las subsecuentes peticiones ||| string $token	count=1
function_name	colores de primer ||| ncurses color set	count=1
function_name	nombre de las tablas ||| tables	count=1
function_name	que describe el ||| result message	count=1
arg_pair	mezcla el color ||| mixed $colorize mixed $opacity	count=1
arg_pair	zguide ||| zmqsocket $frontend	count=1
function_name	establece el ||| offset set	count=1
namespace	[namespace] influencia ||| [namespace]	count=3
return	true ||| void	count=1
function_name	función usa ||| gmp prob prime	count=1
namespace	el ||| gearmanclient	count=2
function_name	colecciones de la ||| collection	count=1
function	[function_name_1] conexión especificado ||| [arg_pair_2] [function_name_1]	count=1
function_name	actual donde se buscarán ||| dbplus	count=1
function_name	comentario a la imagen ||| comment image	count=1
function_name	el tipo de ||| gettype	count=1
function_name	número de línea ||| line	count=2
function_name	filas afectadas ||| rows fetched	count=1
function_name	por bloques o false ||| block algorithm	count=1
function_name	compresión para ||| compression	count=1
return	valor especial indicando ||| void	count=1
namespace	comprueba si ||| imagick	count=1
function_name	filtro ||| kernel	count=1
function_name	establece ||| gupnp service proxy callback set	count=1
arg_pair	un texto freetype ||| string $fontfile string $text	count=1
function_name	[function_name_1] conexión especificada ||| [function_name_2] [function_name_1]	count=4
namespace	se establecieron ||| function	count=1
arg_pair	len bytes ||| int $len int $flags	count=2
function	[function_name_1] línea discontinua ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] una clase ||| [function_name_2] [function_name_1]	count=3
function_name	especial indicando ||| set using exceptions	count=1
function_name	la ||| setimageiterations	count=1
namespace	éxito o false en ||| function	count=1
function_name	interno al siguiente elemento ||| next	count=1
arg_pair	comporta de forma ||| string $password	count=1
arg_pair	unix o algoritmos alternativos ||| string $str string $salt	count=1
return	un array con la ||| array	count=1
return	si el nodo es ||| bool	count=1
return	ssl para las ||| bool	count=1
return	colores de primer ||| int	count=1
function_name	la información del esquema ||| cubrid schema	count=1
namespace	definida por ||| arrayiterator	count=2
namespace	inactividad de entrada/salida ||| gearmanclient	count=1
namespace	cursor: ||| mongocursor	count=1
arg_pair	con la función ||| resource $psdoc	count=1
function_name	color del ||| color	count=4
arg_pair	la ruta en la ||| string $path	count=1
function_name	tridimensional simulado aclarando y ||| raiseimage	count=1
function_name	posiciona el [function_name_2] ||| [function_name_1] [function_name_2] attribute	count=1
namespace	en blanco u otros ||| function	count=1
namespace	mediante el ||| function	count=2
function_name	usado para ||| set session	count=2
function	[function_name_1] una columna ||| [arg_pair_2] [function_name_1]	count=1
function_name	algoritmos por [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function	clase dom [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	del documento ||| solrdocument	count=2
return	de ||| bool	count=17
function_name	los callback ||| gupnp	count=1
namespace	de esquema ||| sdo_das_xml	count=1
arg_pair	información dad ||| int $dbase_identifier array $record	count=1
namespace	mongo ||| mongoid	count=1
function_name	tipo de dato de ||| db2 field type	count=1
arg_pair	objetivo target ||| string $target	count=1
function_name	palabras ||| doc frequency	count=2
namespace	pid del id ||| mongoid	count=1
arg_pair	memcache::connect() con la diferencia ||| string $host int $port	count=1
function_name	describe la última conexión ||| last	count=1
function_name	[function_name_1] la cabecera ||| [function_name_1] [function_name_2]	count=1
namespace	establecer los colores ||| function	count=1
function_name	solicitudes ||| set sslchecks	count=2
function_name	prefijo de ||| prefix	count=1
namespace	objetos solrdocument ||| solrdocument	count=1
function_name	dos ||| number	count=1
function_name	[function_name] una sentencia ||| [function_name]	count=1
function_name	de color usando ncurses_init_color() ||| can change	count=1
function_name	de parámetros ||| ps open memory	count=1
function_name	abierto y devuelve ||| get	count=1
function	activación [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	prioridad baja [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	tabla actual para el ||| fbsql table	count=1
function_name	extremos mínimo y máximo) ||| extrema	count=2
function_name	punto primario rojo ||| image red primary	count=2
function_name	reemplaza el [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	un año dado ||| int $year	count=1
function_name	encuentra disponible ||| open memory image	count=1
return	después ||| void	count=1
return	dado en ||| bool	count=2
function_name	de ||| mailparse uudecode all	count=2
arg_pair	mktime() excepto ||| int $minute	count=1
function_name	el de ||| set slide	count=1
function	cabecera de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	configura una opción ||| option	count=1
function_name	obtiene el valor ||| get	count=11
function_name	devuelve un array multi-dimensional ||| get all	count=1
namespace	que las palabras ||| solrquery	count=1
return	sesión en ||| bool	count=1
function_name	ps_lineto() ||| ps stroke	count=2
function_name	desecha todos los colores ||| unique	count=1
function_name	codificado ||| uudecode all	count=2
function_name	en la codificación ||| mb	count=1
return	en la página sujeta ||| bool	count=1
function_name	las palabras ||| set mlt min doc	count=1
function	[function_name_1] campo solicitado ||| [function_name_1] action resource $fdf_document [arg_pair_2] int	count=1
function_name	la descripción de ||| ps surface restrict to level	count=1
function_name	máxima de línea ||| line	count=1
arg_pair	path en [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
return	aplicarse ||| void	count=1
return	de la cromaticidad ||| array	count=2
namespace	una característica ||| mongocursor	count=1
arg_pair	archivo ||| resource $p string $filename	count=1
function_name	frecuencia en la que ||| min doc frequency	count=1
function_name	próximo documento libxml ||| libxml set	count=1
arg_pair	servicios colas o cualquier ||| zmqsocket $frontend	count=1
arg_pair	filtros adjuntos ||| int $read_write mixed $params	count=2
arg_pair	dn [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
return	y lo almacena en ||| array	count=1
namespace	regla del número de ||| harupage	count=1
arg_pair	añade un ||| resource $pdfdoc float $x	count=1
function_name	establece ||| set opt	count=2
function_name	[function_name_1] de paginación ||| [function_name_2] [function_name_1]	count=7
function	[function_name_1] rgb especificado ||| [function_name_1] [arg_pair_2]	count=1
function_name	clave o/y una ||| find	count=1
arg_pair	un array ||| resource $imap_stream string $ref	count=1
namespace	archivo tar/zip ||| phardata	count=2
function_name	control [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	arrays con una ||| array $array1 array $array2	count=1
arg_pair	el fichero dado ||| string $filename	count=1
arg_pair	estado actual de un ||| resource $pdfdoc int $textflow	count=1
arg_pair	una interfaz flexible que ||| string $collection	count=1
function_name	de sombreado ||| shfill	count=1
function_name	transformación actual de la ||| text matrix	count=1
arg_pair	un valor de ||| string $name mixed $value	count=1
function_name	se comporta como mssql_connect() ||| mssql pconnect	count=1
function_name	codificado ||| mailparse	count=1
arg_pair	actual de un ||| resource $pdfdoc	count=1
arg_pair	solrquery::sethighlightalternatefield() se ||| int $fieldlength string $field_override	count=1
function	[function_name_1] el modo ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=4
function_name	envía la excepción ||| exception	count=1
return	después ||| array	count=1
function_name	cada capa de ||| fann get layer array	count=1
function_name	cierra ||| mcrypt module close	count=1
function_name	información del esquema solicitado ||| cubrid schema	count=1
function_name	disponibles ||| source	count=1
arg_pair	de la función callback ||| callable $callback	count=2
function_name	un ||| construct	count=1
return	solicitado en un ||| bool	count=1
function_name	última fila ||| last	count=1
function_name	de ||| load	count=1
function_name	widrow + nguyen ||| init weights	count=1
arg_pair	blancas de una ||| resource $psdoc	count=1
return	sido creado con ||| void	count=1
function_name	de datos de entrenamiento ||| train	count=2
function_name	genera una nueva csr ||| openssl csr new	count=1
function_name	[function_name_1] mínima del ||| [function_name_2] [function_name_1]	count=4
function_name	copia los ||| copy to array	count=1
function_name	las palabras que ||| min doc	count=1
arg_pair	página del ||| float $ury int $page	count=1
function_name	sisitema de ||| stream wrapper register	count=1
arg_pair	y su asignación ||| resource $id	count=1
return	una función de ||| string	count=1
function_name	actual nodo incluyendo ||| outer xml	count=1
function_name	fdf que ||| fdf	count=1
arg_pair	texto con ||| string $text	count=1
function_name	el tamaño comprimido de ||| zip entry compressedsize	count=1
function_name	tamaño actual de una ||| entry	count=1
function_name	devuelve el operador de ||| get	count=1
function_name	alternativa ||| imagecolorresolvealpha	count=1
function_name	aguja ||| strripos	count=1
namespace	del número de ||| harupage	count=1
return	especificado en el parámetro ||| bool	count=1
function_name	entrenamiento ||| fann set train	count=1
arg_pair	cubrid_schema() ||| resource $conn_identifier int $schema_type	count=1
function_name	extensión iconv ||| iconv get	count=1
arg_pair	función va aquí ||| resource $stream	count=1
function_name	de error [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	es true entonces en ||| using	count=1
function_name	página y ||| page ext	count=1
function_name	para ordenar varios ||| array multisort	count=1
arg_pair	el nombre de archivo ||| resource $p string $filename	count=1
arg_pair	no se especifica ninguna ||| string $collection	count=1
function_name	sobre la ||| curl getinfo	count=1
function_name	lee la información de ||| read	count=1
function_name	desplaza el apuntador interno ||| seek	count=1
function_name	curl manteniendo las ||| curl	count=1
namespace	xml ||| sdo_das_xml	count=2
function_name	obtiene una lista de ||| get	count=2
function_name	funcionalidades soportadas ||| features	count=1
function_name	la descripción de la ||| cairo format stride for width	count=1
arg_pair	similar a memcache::connect() ||| int $port	count=1
function_name	unas coordenadas ||| ps moveto	count=1
function_name	la petción de recodificación ||| recode	count=1
arg_pair	imágenes usando un ||| int $height	count=1
function	[function_name_1] asocia el ||| imagick bool [function_name_1] [arg_pair_2]	count=1
function_name	en ||| uudecode all	count=2
arg_pair	disponible la lista de ||| resource $psdoc	count=1
arg_pair	coordenadas los radios ||| float $ry	count=1
arg_pair	hacer de intermediarios de ||| zmqsocket $frontend	count=1
arg_pair	[arg_pair_1] modo de ||| [arg_pair_2] [arg_pair_1]	count=1
return	archivo dado y ||| array	count=1
function_name	el idioma actual ||| mb language	count=1
function	monitoreo a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	[function_name_1] una línea ||| [function_name_2] [function_name_1]	count=2
function_name	en minúsculas ||| get xheight	count=1
function_name	después de llamarla ||| data source	count=1
function_name	de la caché ||| apc	count=2
arg_pair	de gettext() ||| string $msgid1 string $msgid2	count=1
function_name	diccionario indicado mediante ||| closedict	count=1
arg_pair	un ancho especificado ||| string $text float $width	count=1
arg_pair	de eventos especificada ||| resource $event_base	count=1
arg_pair	unicode asignados entre los ||| callable $callback int $namechoice	count=1
function_name	desde un ||| build from	count=1
function_name	solicitud ||| nsapi	count=1
function_name	actual del autocommit ||| fbsql autocommit	count=1
function	[function_name_1] el result ||| [function_name_1] name [arg_pair_2]	count=2
arg_pair	asignado con imagecolorallocate() ||| int $color	count=1
function_name	la descripción de ||| cairo matrix rotate	count=1
function_name	que no ||| set mlt	count=1
function_name	siguiente al ||| next	count=1
return	das xml ||| void	count=1
arg_pair	secuencia de bytes str ||| string $str	count=1
function_name	color de relleno ||| gray fill	count=1
return	de la página ||| bool	count=1
function_name	el algoritmo estándar basado ||| crypt	count=1
return	diccionario ||| bool	count=1
namespace	para este trabajo ||| gearmanjob	count=2
namespace	de segundos desde la ||| function	count=1
function_name	[function_name_1] el color ||| [function_name_1] image border [function_name_2]	count=1
arg_pair	valor de ||| mixed $bordercolor	count=1
function_name	el desplazamiento del ||| shift	count=2
function_name	la caché de código ||| apc compile	count=1
function_name	primer rango de datos ||| start	count=1
arg_pair	versión plural de ||| string $msgid1 string $msgid2	count=1
function_name	la contraseña del ||| oci password change	count=1
return	antes de ||| string	count=1
function_name	de la línea ||| start line	count=1
function_name	directorio vacío con ||| empty dir	count=1
function_name	la devuelve ||| get	count=1
namespace	de petición ||| function	count=1
function_name	rodea [function_name] ||| border [function_name]	count=1
function_name	a dbx_query() ||| dbx	count=1
arg_pair	y ||| zmqsocket $backend	count=1
function_name	de paso ||| rprop delta	count=3
function_name	archivo/usuario de ||| bin	count=1
function_name	la asignación ||| sma	count=1
arg_pair	usando el oid de ||| string $oid	count=1
function_name	de mensaje para ||| imap msgno	count=1
function_name	lo escribe ||| write	count=1
function_name	fecha de este campo ||| date	count=1
function_name	que se asigne un ||| work	count=1
function_name	función devuelve ||| enc get	count=1
function_name	replicación y equilibrado de ||| ms	count=1
function_name	el parámtro ||| index	count=1
function_name	cadena de error de ||| bzerrstr	count=1
function_name	tipo [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
function_name	uri ||| to uri	count=2
function_name	este servicio ||| gupnp service introspection	count=1
function_name	obtiene [function_name] de ||| [function_name]	count=1
function_name	bits de funcionalidades soportadas ||| features	count=1
function_name	obtener el número total ||| total	count=1
function_name	funciones ||| functions	count=1
function_name	bind_textdomain_codeset() se establece ||| bind textdomain codeset	count=1
arg_pair	esta función ||| string $filename	count=1
return	en la cadena ||| bool	count=1
function_name	siguiente si ||| cubrid next result	count=1
function_name	[function_name_1] la traza ||| [function_name_2] [function_name_1]	count=3
function_name	si el argumento es ||| using exceptions	count=1
arg_pair	los bordes de la ||| int $x int $y	count=1
return	un fichero de configuración ||| resource	count=1
function_name	para establecer ||| set info	count=1
function_name	escala las salidas ||| scale output	count=1
function_name	posee ||| tailable	count=1
function_name	string entregada ||| ctype	count=1
function_name	mínima del [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	obtener [function_name_2] ||| [function_name_1] iterator [function_name_2]	count=1
function_name	por ||| doc	count=1
arg_pair	dada por relation bajo ||| resource $relation	count=1
function_name	añade un ||| inotify add	count=1
arg_pair	una tupla a relation ||| resource $relation array $tuple	count=1
return	sido ||| void	count=1
namespace	sus valores por ||| function	count=1
arg_pair	un ||| resource $statement int $mode	count=1
function_name	consulta la publicación de ||| ap	count=1
function_name	desecha el contenido ||| end clean	count=1
arg_pair	un objeto de la ||| mixed $config	count=1
function_name	rebobina el puntero ||| reset	count=1
function_name	devuelve ||| date	count=1
return	el color de ||| void	count=1
function_name	especificado donde [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	una ||| set	count=1
function_name	datos ibm db2 ||| db2	count=2
function_name	descripción ||| cairo font face	count=1
function_name	abre ||| eio open	count=2
function_name	este para que ||| add	count=1
arg_pair	celda de un ||| resource $result int $row	count=2
return	única función ||| void	count=1
namespace	la solicitud actual ||| function	count=1
function_name	[function_name] original definida ||| [function_name]	count=1
namespace	o post o ||| function	count=1
namespace	a un domdocumentfragment ||| domdocumentfragment	count=1
function_name	el repositorio con el ||| svn	count=1
function_name	textflow y las ||| textflow	count=1
function_name	obtener el tamaño de ||| lob2 size	count=1
function	xml a [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	última conexión usada ||| last	count=1
function_name	establece ||| oci set	count=2
function_name	frecuencia en la ||| mlt min doc frequency	count=1
arg_pair	algoritmo especificado ||| string $algorithm string $lib_dir	count=1
function_name	añade ||| add documents	count=2
function_name	valor especial indicando ||| set using exceptions	count=1
function_name	raw ||| raw	count=1
arg_pair	bordes de la ||| int $width	count=1
function_name	asociativo desde una ||| fetch	count=1
function_name	el color de relleno ||| get gray fill	count=1
return	idéntica a ||| string	count=1
function_name	colas ||| construct	count=1
return	obtiene la distancia de ||| int	count=1
function_name	importar si son iguales ||| hash equals	count=1
namespace	un infiniteiterator ||| infiniteiterator	count=1
arg_pair	lee ||| int $length	count=1
arg_pair	a un host ||| string $type	count=1
namespace	enero de ||| function	count=1
arg_pair	de los datos en ||| array $callbacks	count=1
function_name	envía ||| service proxy send	count=1
function_name	respuesta sin tratar ||| raw	count=1
arg_pair	parámetro stack ||| string $offset	count=1
arg_pair	flag a ||| string $flag	count=1
function_name	[function_name_1] entrenamiento ||| [function_name_2] get [function_name_1]	count=1
function_name	aleatorias ||| rand	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] channel distortions [arg_pair_2]	count=4
return	colores ||| int	count=1
namespace	sentencias que ||| function	count=1
function_name	utilizar para [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	de arrays compara la ||| array $array1 array $array2	count=1
function_name	guid binario de ||| mssql guid	count=1
arg_pair	y ||| string $setting	count=1
arg_pair	carga una fuente para ||| string $encoding bool $embed	count=1
function_name	pedir información de estado ||| add task status	count=1
function_name	de tendencias de ||| get bias array	count=1
function_name	como ||| set mlt min doc	count=1
function_name	la caché ||| apc	count=4
return	descriptor ||| bool	count=1
function_name	[function_name_1] sarprop ||| [function_name_2] step [function_name_1]	count=2
function_name	error una excepción de ||| exceptions	count=1
arg_pair	con [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	de configuración magic_quotes_gpc ||| magic quotes gpc	count=1
function_name	obtiene blob/clob ejecutando ||| cubrid lob get	count=2
function_name	configuración del ||| tidy config	count=1
arg_pair	la secuencia imap ||| int $flag	count=1
arg_pair	timestamp y ||| int $timestamp	count=2
function_name	escribir operaciones ||| write	count=1
function_name	de configuración interna especificada ||| iconv set	count=1
function_name	nuevo par [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	un alas ||| string $name	count=1
function_name	fichero ||| add types	count=2
arg_pair	criterio y la ||| int $sortorderby int $sortdirection	count=2
arg_pair	la de memcached::replace() con ||| mixed $value int $expiration	count=1
function_name	reemplaza con ||| replace	count=1
function_name	[function_name_1] el año ||| [function_name_1] [function_name_2]	count=1
function_name	los encabezados ||| headers	count=4
return	especifica ||| solrquery	count=1
function_name	de archivo dado y ||| mailparse uudecode	count=1
function_name	inicial de subject que ||| strspn	count=1
function_name	número ordinal de columna ||| column	count=1
function_name	[function_name_1] ssh2 ||| [function_name_2] [function_name_1]	count=2
arg_pair	los clientes ||| string $name	count=1
function_name	una imagen de similitud ||| sub image	count=1
return	en el sistema ||| bool	count=1
function_name	establece la función ||| fann set	count=5
arg_pair	de forma parecida ||| string $username	count=1
function_name	última sentencia [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	un guid ||| mssql guid	count=1
function_name	valor del atributo ||| attribute	count=2
function_name	de la clase simplexml ||| simplexml	count=1
return	retraso de la ||| int	count=1
function_name	petición al [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	el indicador de posición ||| gzrewind	count=1
namespace	versión de ||| function	count=1
function_name	propiedad ||| property	count=3
function	[function_name_1] un fichero ||| [arg_pair_2] [function_name_1]	count=1
function_name	de salidas ||| output	count=1
function_name	error cuando la biblioteca ||| exceptions	count=1
function_name	pendientes de activación del ||| fann get cascade activation steepnesses	count=1
function_name	disponible la lista de ||| ps	count=1
function_name	color del borde ||| border color	count=2
function_name	añade rutas definidas ||| add config	count=1
function_name	botón tridimensional simulado aclarando ||| raiseimage	count=1
function_name	obtiene un parámetro si ||| get parameter	count=1
arg_pair	una nueva instancia de ||| string $progid	count=1
arg_pair	una característica específica dada ||| string $feature string $version	count=1
namespace	de [namespace] que contiene ||| [namespace]	count=1
arg_pair	la database especificada ||| string $database resource $link_identifier	count=1
arg_pair	fgetss() intenta eliminar cualesquiera ||| resource $handle	count=1
function_name	el apuntador interno ||| seek	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] int $retry_interval [arg_pair_1]	count=2
function_name	ejecuta el ||| execute	count=1
arg_pair	un assoc_array ||| int $options	count=1
namespace	archivo phar basados en ||| phar	count=1
function_name	de error sqlstate ||| stmt sqlstate	count=1
arg_pair	de los destinatarios cc ||| string $cc	count=1
function_name	versión escapada de ||| cubrid real escape	count=1
function_name	representación yaml ||| yaml emit	count=2
arg_pair	comportamiento automático de envío ||| resource $connection_id bool $onoff	count=1
return	por el ||| void	count=2
function_name	encuentra disponible la lista ||| ps open memory image	count=1
function_name	la fila actual del ||| key	count=1
function_name	de autenticación donde ||| svn auth	count=1
arg_pair	imágenes de color verdadero ||| resource $image	count=1
arg_pair	u otros caracteres ||| string $str	count=1
function_name	la [function_name] función ||| posix [function_name]	count=1
function_name	el [function_name] ||| db2 conn [function_name]	count=1
arg_pair	poder utilizarlo con ||| string $encoding string $separator	count=1
function	establecer el [arg_pair_2] ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=4
arg_pair	de los caracteres ||| string $str	count=1
function	establecer [arg_pair_2] ||| [function_name_1] autocommit resource $conn_identifier [arg_pair_2]	count=4
namespace	prueba probabilística ||| function	count=1
namespace	la biblioteca ||| rarexception	count=1
function_name	[function_name_1] está disponible ||| [function_name_2] [function_name_1]	count=1
function_name	conjunto de resultados ||| finalize	count=1
function_name	documentos ||| frequency	count=1
return	a todos los servidores ||| bool	count=1
namespace	bordes ||| gmagick	count=2
arg_pair	y length ||| int $length	count=1
function_name	con la lista de ||| cubrid list	count=1
function_name	los hijos de el ||| children	count=1
function_name	libeio ||| event	count=1
arg_pair	entrecomilla ||| string $string int $parameter_type	count=1
arg_pair	de ||| string $password	count=1
function_name	textura de relleno actuales ||| polygon	count=1
arg_pair	con el ||| string $name callable $function	count=1
function_name	[function_name_1] complemento ||| [function_name_2] [function_name_1]	count=10
return	el nodo es parte ||| bool	count=1
function_name	de compresión de una ||| set compression	count=1
function_name	escala de entrada para ||| fann set input scaling	count=1
namespace	objeto gmagick ||| gmagick	count=3
function_name	la zona horaria correspondiente ||| geoip time zone by country and	count=1
function_name	grupos [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	es ||| prob	count=1
arg_pair	a ingres_fetch_array() con ||| int $result_type	count=1
function_name	petición http ||| nsapi request	count=1
function_name	disponible ||| open memory	count=1
function_name	biblioteca ||| using exceptions	count=2
namespace	reinicializa el array después ||| splfixedarray	count=1
function_name	devuelve el tamaño actual ||| entry filesize	count=1
namespace	máximo de inactividad ||| gearmanclient	count=1
function_name	atributo en ||| attribute	count=2
function_name	de color ||| ncurses color	count=1
function_name	al primer [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de pascua ||| easter date	count=1
arg_pair	algoritmo especificado ||| string $algorithm	count=1
function_name	creado ||| types	count=1
function_name	de monitorizar ||| fam cancel monitor	count=1
function	de error [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	usado cuando se ||| void	count=1
function_name	no ||| count	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] train stop function [arg_pair_2]	count=3
arg_pair	con las llaves ||| resource $identifier	count=1
function_name	este ||| mlt min doc frequency	count=2
function_name	de entrada/salida del documento ||| tidy	count=1
function_name	la función usa la ||| prob	count=1
function_name	de candidatas ||| candidate	count=2
arg_pair	el algoritmo ||| string $str	count=1
function_name	contexto con ||| gupnp context	count=1
function_name	ignoradas ||| min	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cascade activation [function_name_2]	count=7
function_name	codificación de caracteres ||| convert encoding	count=1
function_name	y sólo si el ||| set	count=1
arg_pair	un ||| string $server_key	count=1
function_name	salida ||| runkit sandbox output	count=1
function_name	el atributo name ||| attribute	count=1
function	atributos y [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	valores [namespace] tienen ||| [namespace]	count=1
function_name	la descripción de ||| pattern add color stop rgb	count=1
function_name	obtiene el valor ||| fdf get	count=1
return	momento actual ||| int	count=1
namespace	renderización de la ||| gmagick	count=1
arg_pair	establece [arg_pair] ||| [arg_pair]	count=4
arg_pair	idéntica a ||| resource $handle int $length	count=1
function_name	tantos documentos como ||| doc frequency	count=1
function_name	del complemento de ||| mysqlnd qc get	count=1
function_name	[function_name_1] el servicio ||| [function_name_1] [function_name_2]	count=1
function_name	ya ||| types	count=1
namespace	[namespace] bajo ||| [namespace]	count=3
function_name	coseno hiperbólico para cada ||| cosh	count=1
function_name	las palabras que no ||| mlt min doc frequency	count=1
return	en esas coordenadas a ||| bool	count=1
arg_pair	el nombre de relation ||| resource $relation string $name	count=1
return	el pid del ||| int	count=1
function_name	función devuelve el valor ||| get	count=1
function_name	en el atributo ||| move to attribute	count=1
function_name	búsqueda en ||| search	count=1
function_name	mediante el ||| crack	count=1
function_name	errores ||| error	count=1
arg_pair	actual indicando que ||| string $actor	count=1
namespace	zip ||| ziparchive	count=1
function_name	extrae cada archivo ||| mailparse uudecode	count=1
namespace	un ||| tidynode	count=1
function_name	usado para incrementar ||| set session	count=2
function_name	emitir advertencias y ||| exceptions	count=1
namespace	servicios ||| zmqdevice	count=1
function_name	abierto ||| proc	count=1
function_name	la respuesta ||| response writer	count=1
function_name	[function_name_1] largo para ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] neuronas ||| [function_name_2] [function_name_1]	count=1
function_name	añade un [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	parada empleada durante ||| int $stop_function	count=1
function_name	los datos del ||| mailparse uudecode	count=1
arg_pair	apariencia de un campo ||| resource $fdf_document	count=1
function_name	indica si ||| namespace	count=1
function_name	menos tantos documentos ||| frequency	count=1
function_name	los parámetros de escala ||| params	count=2
arg_pair	varios arrays al ||| array $array1	count=1
arg_pair	o algoritmos alternativos ||| string $str string $salt	count=1
arg_pair	los eventos ||| resource $event_base	count=1
namespace	zip par ||| ziparchive	count=1
function_name	espera de la ejecución ||| cubrid set query timeout	count=1
arg_pair	de un trazado ||| resource $p	count=1
function	registro [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	matriz para añadir un ||| set	count=1
function_name	lista de direcciones ipv4 ||| gethostbynamel	count=1
function_name	acuerdo a /etc/services ||| getservbyname	count=1
return	para las solicitudes ||| bool	count=1
function_name	versión escapada de ||| cubrid real escape string	count=1
function_name	de archivo pkcs#12 ||| openssl pkcs12 export	count=1
function_name	los permisos del ||| fchmod	count=1
function_name	cada capa de la ||| layer array	count=1
function_name	devuelve el nombre ||| name	count=9
function_name	en el que ||| terms	count=1
function_name	nuevo contexto con la ||| gupnp context new	count=1
namespace	de secuencia de ||| function	count=1
function_name	soporta los atributos extendidos ||| xattr supported	count=1
function_name	servidor ||| server by	count=1
function_name	de instancia xml ||| string	count=1
arg_pair	la versión plural ||| string $msgid2	count=1
namespace	parte ||| tidynode	count=1
function_name	proceso ||| get	count=1
arg_pair	indicando que ||| string $details	count=1
function_name	o información con el ||| info	count=1
function_name	una [function_name] con ||| [function_name]	count=1
arg_pair	variable_key ||| int $variable_key	count=1
arg_pair	path en ||| int $flags	count=1
function_name	la descripción ||| cairo pattern create rgb	count=1
function_name	[function_name_1] bcompiler ||| [function_name_2] [function_name_1]	count=2
function_name	texto ||| is text	count=1
return	devuelve un string de ||| string	count=1
function_name	conexión empleado al crear ||| fann get connection rate	count=1
arg_pair	el valor de ||| string $value int $flags	count=1
namespace	de memoria usados por ||| function	count=1
function_name	de petición http en ||| request	count=1
function_name	campo de ||| set	count=1
return	de datos en ||| bool	count=2
namespace	imagick para la ||| imagick	count=1
arg_pair	intermediarios de direcciones ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	una [function_name] ||| pdf place [function_name]	count=3
function_name	como este serán ||| set mlt	count=1
function_name	el código de bytes ||| bcompiler	count=4
namespace	específicado ||| splfixedarray	count=1
function_name	consulta de odbc ||| odbc	count=1
arg_pair	actividad en conexiones curl_multi ||| resource $mh float $timeout	count=1
arg_pair	establece el estilo ||| int $first_page int $style	count=1
function_name	restaura [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	este ||| imagickkernel	count=1
arg_pair	una matriz a la ||| resource $p float $a	count=1
function_name	iterador de array ||| iterator	count=1
function_name	prefijo de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	a valores de tipo ||| function	count=1
namespace	devuelve o establece el ||| function	count=1
function_name	la biblioteca sqlite vinculada ||| sqlite libversion	count=1
arg_pair	la propiedad hwnd en ||| int $client_area	count=1
namespace	dominios especificados por ||| function	count=1
return	fue creada ||| bool	count=1
function_name	para especificar un conjunto [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	el valor actual ||| value	count=1
function_name	función ps_stringwidth() excepto ||| ps string geometry	count=1
function_name	[function_name_1] título ||| [function_name_2] [function_name_1]	count=1
function_name	llega recursivamente ||| end children	count=1
function_name	codificado mediante uuencode ||| mailparse	count=1
function_name	paleta de la imagen ||| imagecolorexact	count=1
function_name	serán ||| set mlt	count=1
arg_pair	indicando que ocurrió ||| string $details	count=1
function	datos especificados [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de la ||| scheme	count=1
namespace	array multidimensional por una ||| function	count=1
namespace	número ||| function	count=3
function_name	/encoding ||| get encoding	count=2
namespace	closedir() solo que ||| directory	count=1
function_name	campo en particular ||| field	count=1
function_name	un círculo ||| circle	count=1
function_name	[function_name_1] estadísticas del ||| [function_name_2] [function_name_1]	count=2
function_name	número de filas ||| set	count=1
namespace	de internet que corresponde ||| function	count=1
function_name	ignoradas ||| mlt min	count=1
function_name	barras invertidas ||| addcslashes	count=1
arg_pair	información dada por data ||| string $data	count=1
function_name	escalar datos de ||| fann scale train	count=1
function_name	lugar de emitir advertencias ||| using exceptions	count=1
namespace	trabajo con ||| gearmanworker	count=1
return	a ||| resource	count=1
function_name	propiedad dada ||| property	count=1
function_name	parte [function_name] usada ||| set [function_name]	count=1
function_name	inserta la [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	archivo dado y extrae ||| function	count=1
function_name	[function_name_1] servicio y ||| [function_name_2] [function_name_1]	count=6
function_name	registro del conjunto resultado ||| record	count=1
function	[function_name_1] dado para ||| [function_name_1] [arg_pair_2]	count=3
namespace	tailable que son ||| mongocursor	count=1
return	anota texto ||| string	count=1
function_name	aplicarse a ||| add kernel	count=1
function_name	[function_name_1] [function_name_2] en la que el ||| [function_name_1] [function_name_2]	count=8
function_name	de un repositorio ||| svn	count=1
return	el nombre base del ||| string	count=1
function_name	esta función crea una ||| create attribute	count=1
function_name	plano ||| set	count=1
function_name	la ||| mlt min doc frequency	count=4
function_name	devuelve un array ||| array	count=1
namespace	ambos ||| imagickkernel	count=1
function_name	aptos para usos criptográficos ||| bytes	count=1
function_name	carga ||| add	count=1
function_name	el punto de control ||| gupnp control point	count=1
function_name	caché del usuario ||| wincache ucache	count=1
arg_pair	memcached::getmulti() con la excepción ||| string $cas_tokens	count=1
namespace	disponibles en el ||| function	count=1
function_name	y ||| mailparse uudecode all	count=2
function	[function_name_1] columna especificada ||| [arg_pair_2] [function_name_1]	count=5
return	recibe ||| array	count=1
function_name	la respuesta ||| response	count=4
namespace	inicio ||| function	count=1
function_name	reanua un servicio pausado ||| win32 continue service	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] mlt min word [function_name_2]	count=1
return	es true entonces ||| void	count=1
arg_pair	páginas ||| int $first_num	count=1
arg_pair	especificado como timestamp ||| int $format	count=2
namespace	copia realizado [namespace] la ||| [namespace]	count=1
return	disponibles en el sistema ||| string	count=1
function_name	von einer mime kopfzeile ||| iconv mime	count=1
function_name	formulario [function_name] ejecutará al ||| [function_name] submit form	count=1
function_name	definidos por el usuario ||| control point browse start	count=1
namespace	[namespace] es un ||| [namespace]	count=1
function_name	en particular de ||| filename	count=1
function_name	devuelve una ||| get	count=5
arg_pair	versiones estandarizados de ||| string $version1 string $version2	count=1
arg_pair	idéntica a ||| string $string	count=1
function_name	de archivo/usuario de apc ||| bin	count=1
namespace	devuelve el ||| sqlite3	count=1
function_name	[function_name] local ||| get elements [function_name]	count=3
function_name	los callback definidos ||| control point browse	count=1
namespace	por la ||| function	count=1
return	cual está en ||| bool	count=1
function_name	devuelve el número ||| get	count=10
function_name	reescritura establecidas previamente ||| output reset rewrite	count=1
arg_pair	de eventos especificada ||| resource $event_base int $flags	count=1
function_name	pdf usando ||| pdf	count=1
function_name	uso de memoria caché ||| wincache scache meminfo	count=1
arg_pair	una función o ||| string $filename int $flags	count=1
arg_pair	valores de un assoc_array ||| int $options	count=1
namespace	retorno apropiada ||| gearmanworker	count=1
function_name	[function_name_1] información asociada ||| [function_name_2] [function_name_1]	count=1
function_name	de dsn disponibles ||| odbc data source	count=1
arg_pair	define el ||| float $disp_time	count=1
function_name	porción de haystack ||| strrichr	count=1
function_name	método devuelve un recurso ||| get resource	count=1
function_name	se usa para ||| set resource	count=2
arg_pair	campo ||| resource $fdf_document string $fieldname	count=1
function_name	un namespace es declarado ||| start namespace decl	count=1
namespace	y socket. -- ||| zmqdevice	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] stagnation [function_name_1]	count=4
arg_pair	un archivo en ||| string $filename	count=1
function_name	por el usuario ||| uksort	count=1
function_name	cambiará el nombre de ||| dbplus rrename	count=1
function_name	rutinas de interoperabilidad stubs ||| default stub	count=1
function_name	metainformación de una ||| has metadata	count=1
function_name	caché de código ||| apc compile	count=1
arg_pair	valor de retorno ||| int $type mixed $value	count=1
namespace	devolverá el hash de ||| function	count=1
return	función devolverá la lista ||| array	count=1
function_name	cargar entidades externas ||| entity	count=1
function_name	una [function_name] ||| [function_name]	count=16
function_name	desecha el ||| end clean	count=1
arg_pair	inmediatemente después de ||| string $opened_path	count=1
arg_pair	es una manera alternativa ||| string $name mixed $value	count=1
function_name	phar [function_name] ||| is [function_name]	count=1
function_name	permite al entrenamiento continuar ||| fann get	count=1
function	[function_name_1] el texto ||| [function_name_1] [arg_pair_2]	count=3
function_name	la varita ||| set option	count=1
function_name	de interoperabilidad ||| set	count=1
function_name	función cubrid_col_get() se usa ||| cubrid col get	count=1
function_name	número de tendencias de ||| get bias	count=1
function_name	des de ||| crypt	count=1
arg_pair	ciertas propiedades ||| resource $result int $field_offset	count=1
function_name	crea una ||| create comment	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] object resource $stmt [arg_pair_2]	count=1
function_name	blob en ||| ibase blob echo	count=1
function	gamma de [arg_pair_2] ||| [function_name_1] image [arg_pair_2]	count=1
function_name	umbral del error ||| step error threshold	count=4
function_name	sybase_connect() con dos ||| pconnect	count=1
function_name	el número de columnas ||| ifx num fields	count=1
arg_pair	idéntica a ||| int $length	count=1
function_name	token de ||| request token	count=1
arg_pair	del parámetro data en ||| string $data int $length	count=1
return	descriptor previamente asignados ||| bool	count=1
function_name	cubrid_col_get() se usa para ||| cubrid col get	count=1
arg_pair	especificado ||| int $field_offset	count=1
function_name	msql_fetch_array() ||| msql fetch	count=1
function_name	complemento [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la configuración del ||| tidy config	count=1
namespace	que existan en ||| function	count=1
return	una cadena hexadecimal representación ||| string	count=1
rest	en [function_2] ||| [function_2] [return_1]	count=1
function_name	el término en ||| bound	count=1
function_name	establecer el ||| set	count=1
arg_pair	callback a ||| int $type mixed $callback	count=1
namespace	entrada/salida ||| gearmanclient	count=1
function_name	elimina todos los documentos ||| delete by queries	count=1
arg_pair	limpia la caché ||| int $caches	count=1
function_name	el tamaño de la ||| size	count=1
function_name	descripción de la ||| cairo surface	count=1
function_name	[function_name_1] encabezados ||| [function_name_2] [function_name_1]	count=8
function_name	el inverso del ||| gmp invert	count=1
function_name	establece la apariencia ||| fdf set ap	count=1
namespace	graphicsmagick como una cadena ||| gmagick	count=1
function_name	de palabra ||| min word	count=1
function_name	los iteradores añadidos ||| array iterator	count=1
namespace	objeto imagick y libera ||| imagick	count=1
function_name	que contiene el carácter ||| chr	count=1
namespace	se puede indicar ||| function	count=1
function_name	es [function_name] tipo ||| [function_name]	count=1
function_name	cierra el fichero ||| close	count=1
function_name	la frecuencia en la ||| set mlt min doc	count=1
arg_pair	unix o algoritmos alternativos ||| string $salt	count=1
function_name	cancela ||| grp cancel	count=1
function_name	[function_name] replacement ||| [function_name]	count=1
function_name	tantos ||| frequency	count=1
arg_pair	el búfer de lectura ||| int $buffer	count=1
arg_pair	con dos diferencias: ||| string $servername	count=1
arg_pair	destinatarios cc [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	carboncillo ||| charcoal	count=1
function_name	píxel ||| pixel	count=1
function_name	y ||| all	count=1
function_name	la consulta siguiente si ||| cubrid next	count=1
arg_pair	arrays con una verificación ||| array $array1	count=1
arg_pair	a las dimensiones dadas ||| int $rows	count=1
function_name	el ||| load string	count=2
namespace	iterador filesystem a partir ||| filesystemiterator	count=1
arg_pair	una consulta aql ||| string $query string $dbpath	count=1
function_name	acrobat [function_name] los ||| fdf [function_name] doc	count=1
function_name	de petición ||| nsapi request	count=1
arg_pair	de msql_fetch_row() ||| int $result_type	count=1
function_name	cierra conexión ||| close	count=1
function_name	el número de columnas ||| num	count=1
function_name	información acerca de ||| info	count=1
arg_pair	fichero ||| bool $use_include_path	count=1
arg_pair	flujo imap dado ||| resource $imap_stream string $criteria	count=1
function_name	usado para lecturas ||| slave	count=1
function_name	envía la ||| send	count=2
function_name	ejecuta el lote ||| execute	count=1
return	caracteres que aparecen en ||| string	count=1
function_name	las funciones ||| call	count=1
namespace	que representa ||| function	count=9
function_name	einer mime kopfzeile en ||| mime encode	count=1
arg_pair	bit de start ||| int $start	count=2
namespace	lo menos ||| solrquery	count=1
arg_pair	identificador de resultado ||| resource $result	count=1
function_name	están habilitadas ||| stats	count=1
namespace	sqlite3 como ||| sqlite3	count=1
arg_pair	escritura en tuple ||| string $tuple	count=1
namespace	cunstruye ||| sdo_das_xml	count=1
function_name	largo para un ||| get frame long	count=1
function_name	trata de conectarla ||| pg ping	count=1
return	cualquier abstracción que se ||| zmqsocket	count=1
function_name	neuronas de entrada ||| input	count=1
function_name	de emitir ||| set	count=1
function_name	evento fam en ||| fam next event	count=1
function_name	la fecha dada ||| date	count=1
function_name	parche binario desde el ||| xdiff	count=1
function_name	una cadena de caracteres ||| string	count=1
function_name	descripción de ||| cairo pattern get surface	count=1
function_name	el uso ||| proc	count=1
arg_pair	forma parecida ||| string $servername string $username	count=1
arg_pair	revisión revision ||| int $flags	count=1
arg_pair	pre-procesa texto ||| string $text	count=1
function_name	solicitada clase glo ||| new glo	count=1
return	aproxima ||| float	count=1
function_name	la última [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	trazado y lo contornea ||| pdf closepath stroke	count=1
namespace	efecto de botón tridimensional ||| gmagick	count=1
function_name	copia un ||| copy	count=1
function_name	de archivo dado y ||| mailparse uudecode all	count=1
function_name	conexión de flujo o ||| stream	count=1
function_name	información sobre un grupo ||| posix	count=1
function_name	una línea a ||| line	count=1
function_name	proceso abierto mediante el ||| get	count=1
function_name	[function_name_1] trazado ||| [function_name_2] [function_name_1]	count=1
return	filas ||| solrquery	count=1
function_name	longitud máxima de ||| len	count=1
return	fgetss() intenta eliminar ||| string	count=1
arg_pair	para un nombre de ||| int $property string $name	count=1
arg_pair	función va aquí ||| cairopssurface $surface	count=1
function_name	porción de haystack ||| stristr	count=1
arg_pair	y ||| resource $handle int $length	count=1
function_name	de color dada ||| ncurses color	count=1
function_name	lo menos tantos ||| set mlt	count=1
arg_pair	adquirido ||| bool $nowait	count=1
namespace	envío ||| function	count=1
namespace	especificado con un carácter ||| intlchar	count=1
function_name	logaritmo natural ||| trader ln	count=1
arg_pair	un nuevo objeto ||| string $name	count=1
arg_pair	un nuevo ||| object $object mixed $value	count=1
arg_pair	datos de data1 y ||| resource $data1	count=1
arg_pair	de bytes pseudo-aleatorios ||| bool $strong	count=1
arg_pair	es una ||| string $value	count=1
arg_pair	una variable en caché ||| string $key mixed $var	count=1
function_name	el uso [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	array que se ||| array	count=1
arg_pair	[arg_pair_1] [arg_pair_2] todas las operaciones de ||| [arg_pair_2] [arg_pair_1]	count=2
return	(«kernel») a ||| void	count=1
function_name	del valor de ||| fann get	count=1
function	prepara [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	llamada [namespace] ||| [namespace]	count=1
function_name	la tangente para ||| tan	count=1
function_name	un blob que se ||| ibase blob	count=1
function_name	de esquema ||| schema	count=1
function_name	sobre la ||| getinfo	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] red [function_name_2]	count=2
arg_pair	en el archivo browscap.ini ||| string $user_agent	count=1
function_name	archivos o partición de ||| disk	count=1
function_name	usuario) ||| restore error	count=1
function_name	prototipo del ||| prototype	count=1
function_name	drop ||| fbsql drop	count=1
function_name	de edición ||| filepro fieldtype	count=1
arg_pair	medio enx ||| float $alpha float $beta	count=2
arg_pair	recursivamente path1 y ||| string $path1 int $rev1	count=1
arg_pair	en el sistema ||| string $str	count=1
return	buscarán los archivos de ||| string	count=1
arg_pair	domain por ||| string $domain	count=1
function_name	el repositorio ||| svn checkout	count=1
function_name	el sistema de ||| pdf	count=1
namespace	sybase_connect() con dos ||| function	count=1
function_name	de prioridad ||| priority	count=1
function_name	finaliza ||| abort	count=1
arg_pair	del mensaje ||| int $msg_number	count=1
arg_pair	negro especificados ||| float $gamma	count=1
function_name	un objeto simplexmliterator que ||| children	count=1
function_name	traslada el origen ||| translate	count=1
function_name	ignoradas ||| mlt min doc	count=1
return	es parte de un ||| bool	count=1
function_name	la imagen ||| scheme	count=1
function_name	mueve el [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	lógica a una visual ||| fribidi log2vis	count=1
arg_pair	tratado como una matriz ||| string $fieldname string $fieldvalue	count=1
arg_pair	oid ||| string $oid	count=2
function_name	de los callback definidos ||| gupnp control point browse	count=2
function_name	el nombre corto ||| frame short name	count=1
function_name	einer mime kopfzeile ||| iconv mime	count=1
function_name	y opciones explícitas ||| pdf	count=1
function_name	o ||| number	count=1
arg_pair	y establece variables globales ||| array $result	count=1
function	[function_name_1] la codificación ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=1
arg_pair	por lotes ||| array $batch array $protocoloptions	count=1
function	pone [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	en formato ||| serializable	count=1
function_name	cuando la ||| using	count=1
arg_pair	a un valor de ||| resource $p	count=1
function_name	mysql asociado con ||| mysql	count=1
function_name	el valor actual ||| newt checkbox set value	count=1
namespace	array que contiene ||| function	count=1
function_name	interoperabilidad stubs específicas del ||| create default stub	count=1
arg_pair	defina sobre las ||| zmqsocket $frontend	count=1
function_name	el manejador de trabajo ||| job handle	count=1
return	distancia de la ||| int	count=1
function_name	del cliente usado ||| client	count=1
arg_pair	las ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	devuelve ||| mysqlnd memcache get	count=1
function_name	[function_name_1] módulo ||| [function_name_2] [function_name_1]	count=4
function_name	ecm ||| stagnation	count=1
function_name	de la fila ||| fetch object	count=1
function_name	la prueba ||| gmp prob	count=1
arg_pair	enx ||| float $alpha float $beta	count=2
function_name	actual a unas coordenadas ||| ps moveto	count=1
namespace	tiene un hijo ||| parentiterator	count=1
function_name	[function_name_1] entrada descrita ||| [function_name_2] [function_name_1]	count=4
function_name	usada [function_name] ||| id3 [function_name]	count=3
function_name	un ||| addcslashes	count=1
namespace	iterador al ||| arrayiterator	count=1
arg_pair	colas o cualquier ||| zmqsocket $frontend	count=1
namespace	para ||| function	count=1
function_name	estado ||| status	count=5
function_name	[function_name_1] asociado ||| [function_name_1] [function_name_2]	count=4
arg_pair	0600 en ||| string $dir	count=1
function_name	formateador de ||| formatter	count=1
function_name	de un caracter ||| chr	count=1
function_name	establece el conjunto de ||| set charset	count=1
arg_pair	coincida con el ||| mixed $fill float $fuzz	count=1
function_name	cargar la copia ||| load	count=1
return	un ||| mixed	count=3
function_name	devuelve el código de ||| get code	count=1
arg_pair	descomprime el ||| string $source int $small	count=1
function_name	otros ||| diff	count=1
function_name	tabla ||| table	count=5
function_name	añade ||| pdf add	count=3
return	objeto con ||| object	count=2
arg_pair	lista ||| resource $psdoc	count=1
function_name	función crea una ||| create processing instruction	count=1
return	cursor: si ||| int	count=1
function_name	los datos ||| mailparse uudecode all	count=1
function_name	libera ||| event free	count=1
function_name	del diccionario ||| enchant dict	count=2
function_name	true entonces en lugar ||| exceptions	count=1
function_name	entrenadas las ||| get cascade	count=1
function_name	establece el ||| stream set	count=1
function_name	para obtener información blob/clob ||| lob export	count=1
function_name	y devuelve la imagen ||| image channels	count=1
function_name	obtiene los parámetros ||| get cookie params	count=1
function_name	opendir readdir y ||| eio readdir	count=1
arg_pair	prepara el evento que ||| resource $event mixed $fd	count=1
function_name	representa una columna devuelta ||| db2 fetch	count=1
function_name	yaf lanzará [function_name] ||| catch [function_name]	count=1
function_name	campo especificado ||| field	count=1
function_name	cliente de db2 ||| db2	count=1
function	[function_name_1] [arg_pair_2] ||| imagick bool [function_name_1] [arg_pair_2]	count=2
arg_pair	[arg_pair_1] rectángulo comenzando ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	descripción ||| cairo pattern get color	count=1
function_name	escala de grises con ||| embossimage	count=1
function_name	el coseno para cada ||| trader cos	count=1
function_name	de las funciones definidas ||| functions	count=1
arg_pair	remote_socket ||| string $remote_socket	count=1
function	repositorio indicado [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	fuerzas de los ciclos ||| collect cycles	count=1
function_name	si un [function_name] o una ||| [function_name] is	count=1
return	bloquea o desbloquea ||| bool	count=1
function_name	necesariamente igual a la ||| iconv strlen	count=1
function_name	de campos de ||| fetch field	count=1
function_name	[function_name_1] del cliente ||| [function_name_2] [function_name_1]	count=1
namespace	de primer ||| function	count=1
function_name	de conexión necesario para ||| connect	count=1
arg_pair	función permite enviar ||| string $message string $additional_headers	count=1
return	oauth ||| bool	count=1
function_name	configura el contexto ||| context	count=1
function_name	cada servidor ||| server by path	count=1
function_name	equivalencia ||| variant eqv	count=2
function_name	y ||| fgetss	count=1
function_name	ssh2 ||| ssh2	count=1
function_name	nombres de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	las extensiones de ficheros ||| spl autoload extensions	count=1
function_name	función geoip_country_code_by_name() ||| country code by name	count=1
arg_pair	añade [arg_pair] ||| [arg_pair]	count=3
function_name	una lista ||| list	count=3
function_name	espera de la ejecución ||| set query timeout	count=1
function_name	[function_name_1] clase del ||| [function_name_2] [function_name_1]	count=4
arg_pair	unix o ||| string $str	count=1
arg_pair	de las restricciones ||| int $facetsort	count=1
function_name	alternativa ||| imagecolorresolve	count=1
function_name	diff unificado que ||| diff	count=1
function_name	crea una nueva ||| create document	count=1
function_name	[function_name_1] tipo del ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] con nombre ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=1
namespace	plano y ||| function	count=1
return	opacidad de ||| float	count=1
function_name	de ||| zip entry filesize	count=4
arg_pair	un conjunto ||| resource $ann array $input	count=1
arg_pair	de versiones estandarizados ||| string $version2	count=1
arg_pair	poder utilizarlo con ||| string $separator	count=1
namespace	a los cambios ||| function	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $key [arg_pair_1]	count=8
function_name	esquema solicitado ||| cubrid schema	count=1
function_name	obtener el nombre de ||| name	count=1
function_name	número máximo ||| max	count=5
function_name	fifo especial ||| posix mkfifo	count=1
namespace	los dispositivos ||| zmqdevice	count=1
function_name	devolverá la lista de ||| data	count=1
function_name	la descripción de ||| cairo ps level to	count=1
arg_pair	define el ||| int $type float $disp_time	count=1
arg_pair	mediante los datos de ||| mixed $data	count=1
function_name	arbitrarios a todos los ||| ping	count=1
function_name	inclusive para el primer ||| first	count=1
namespace	imagen ||| imagick	count=4
function_name	selecciona ||| select db	count=3
function_name	el código de error ||| error	count=1
function_name	un conjunto [function_name] ||| [function_name]	count=1
function_name	que la ||| by key	count=1
function	[function_name_1] arrays al ||| [arg_pair_2] [function_name_1]	count=2
function_name	ldap [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	frecuencia ||| solrquery	count=1
arg_pair	un punto de código ||| int $property	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] scale [arg_pair_2]	count=6
function_name	de épocas ||| epochs	count=8
function_name	para ||| set	count=20
namespace	un nuevo objeto domentityreference ||| domentityreference	count=1
function_name	su equivalente en minúsculas ||| tolower	count=1
function_name	descripción ||| cairo font options get subpixel	count=1
function_name	de la ||| data	count=1
function_name	breaker ||| set tie breaker	count=2
arg_pair	especificado es un algoritmo ||| string $algorithm string $lib_dir	count=1
namespace	ejecuta una sentencia ||| sqlite3stmt	count=1
function_name	un guid binario de ||| guid	count=1
function_name	[function_name_1] null ||| [function_name_1] [function_name_2]	count=1
arg_pair	argumento result de callback ||| callable $callback	count=1
namespace	de un archivo phar ||| phar	count=2
function_name	una acción especificada ||| gupnp service action	count=1
function_name	definidos por el ||| control point browse start	count=1
return	tipo de la ||| string	count=1
namespace	[namespace] en el ||| [namespace]	count=1
function_name	como este ||| set mlt	count=1
function_name	una matriz ||| names	count=1
namespace	si el [namespace] ||| [namespace]	count=6
arg_pair	rgb dados ||| int $red	count=1
namespace	descrito por ||| function	count=1
arg_pair	nueva copia ||| bool $backup_original_files	count=1
function_name	la descripción de la ||| cairo pattern get color	count=1
function_name	resultado frontbase ||| fbsql	count=1
function_name	la acción con parámetros ||| proxy action	count=1
arg_pair	y path2 ||| string $path2	count=1
arg_pair	de una [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	opciones con la varita ||| set option	count=1
namespace	acceso a lectura ||| function	count=1
function_name	máximo de tokens a ||| max	count=1
function_name	interoperabilidad stubs específicas del ||| default stub	count=1
function_name	su propia clase ||| class	count=1
function_name	por su nodename ||| named	count=1
function_name	usarse para ||| set	count=1
arg_pair	potencia exp ||| gmp $exp	count=1
function_name	xml del servidor ||| xml	count=1
function_name	opuesta a htmlspecialchars() ||| htmlspecialchars decode	count=1
arg_pair	a ||| array $arguments	count=1
function_name	la configuración del ||| tidy config count	count=1
function_name	única ||| normal	count=1
arg_pair	fila en un ||| resource $stmt int $row_number	count=1
namespace	filas ||| solrquery	count=1
function_name	preparada por sqlsrv_prepare() ||| sqlsrv	count=1
function_name	devuelve una matriz ||| get	count=1
function	escribir operaciones [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	nuevo ||| mixed $value	count=1
arg_pair	desde el domain ||| string $domain	count=1
function	la precisión [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	bit empleado durante ||| bit fail	count=1
namespace	de base ||| harufont	count=1
namespace	de uno o ||| function	count=1
function_name	con el nombre ||| name	count=1
function_name	la [function_name] ||| get [function_name]	count=2
function_name	emitir advertencias y devolver ||| using	count=1
function_name	esta función crea una ||| create attribute ns	count=1
function_name	libera un descriptor ||| free descriptor	count=1
arg_pair	del puerto dado esperando ||| int $port	count=1
namespace	avanza la posición ||| iterator	count=1
function_name	objeto ||| modify	count=1
function_name	todavía no ||| count	count=1
namespace	que será distribuido por ||| function	count=1
namespace	de seguimiento tailable que ||| mongocursor	count=1
function_name	campo ||| mssql field	count=1
function_name	llama a ||| call user	count=1
function_name	libeio ||| get event	count=1
arg_pair	un directorio con el ||| string $path	count=1
function_name	a ||| alternate	count=1
function_name	[function_name_1] la cookie ||| [function_name_2] [function_name_1]	count=2
arg_pair	especificado como timestamp y ||| int $format	count=2
function_name	operación de implicación ||| variant imp	count=1
namespace	el ||| function	count=21
function_name	sin cambiar el ecm ||| cascade output stagnation	count=1
return	posición actual y ||| int	count=1
function_name	establece el factor ||| fann set	count=1
return	en des de ||| string	count=1
function_name	añade una cantidad dada ||| add	count=1
arg_pair	un ||| int $width	count=2
function_name	[function_name_1] el término ||| [function_name_1] terms lower [function_name_2]	count=1
arg_pair	cres un ||| string $contents	count=1
function_name	documentos como este ||| set mlt min	count=1
function_name	mysql que está asociada ||| mysql	count=1
arg_pair	el método y la ||| string $method	count=1
function_name	reintentos en caso ||| deadlock retry count	count=1
function_name	[function_name_1] conexión necesario ||| [function_name_2] [function_name_1]	count=1
function_name	intenta borrar ||| delete service	count=1
function_name	es primo ||| gmp	count=1
function_name	el límite de fallo ||| limit	count=1
return	dados en ||| bool	count=1
arg_pair	de forma parecida a ||| string $servername	count=1
arg_pair	0 index en a ||| int $index	count=1
arg_pair	llamado para establecer ||| int $option	count=1
arg_pair	16 bytes en un ||| string $binary	count=1
arg_pair	aparición de needle ||| mixed $needle	count=1
return	dispositivos de ømq ||| zmqsocket	count=1
function_name	el tipo de ||| column type	count=1
function_name	consulta a la base ||| query	count=1
function_name	ambos puedan aplicarse a ||| kernel	count=1
arg_pair	antes ||| string $str	count=1
arg_pair	sobre ||| zmqsocket $backend	count=1
function_name	núcleo («kernel») a ||| kernel	count=1
arg_pair	valor numérico de un ||| string $server_key	count=1
arg_pair	el resultado de ||| resource $link resource $result	count=1
namespace	un ||| ev	count=1
return	los dispositivos de ||| zmqsocket	count=1
arg_pair	en haystack y devuelve ||| bool $before_needle string $encoding	count=1
namespace	la posición dada que ||| function	count=2
return	sybase_connect() con dos ||| resource	count=1
arg_pair	del ||| string $str	count=1
function_name	línea de base de ||| get	count=1
function_name	del error ||| step error	count=4
namespace	trabajo o ||| function	count=1
function_name	debug ||| memcache debug	count=2
function_name	del documento fdf ||| fdf	count=1
arg_pair	a memcache::connect() con ||| string $host int $port	count=1
function_name	un proceso ||| get status	count=1
function_name	[function_name] transacciones ||| mysqlnd ms [function_name] last	count=1
function_name	campos de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	sesión actual ||| sessionhandlerinterface	count=1
function_name	session.cache_expire ||| session cache expire	count=2
function_name	escribe la parte de ||| write	count=1
arg_pair	un efecto de botón ||| int $x int $y	count=1
namespace	matriz con las ||| gmagick	count=1
namespace	imagick para ||| imagick	count=2
namespace	sesiones ||| sessionhandlerinterface	count=1
arg_pair	evento ||| resource $event mixed $fd	count=1
arg_pair	en una y devuelve ||| string $new_data2	count=1
function_name	de memcached::prepend() con la ||| prepend by	count=1
arg_pair	efecto ||| int $height	count=1
function_name	establecer los colores ||| set	count=1
arg_pair	coincida ||| mixed $fill	count=2
arg_pair	un array ||| array $array int $sort_flags	count=1
function_name	el tamaño [function_name_2] ||| function int [function_name_2] [function_name_1]	count=2
namespace	0 refiriénsose [namespace] ||| [namespace]	count=1
function_name	configuración tidy con ||| tidy load config	count=1
function_name	envía la acción ||| service proxy action	count=1
arg_pair	sentencia dada por ||| resource $statement	count=1
function_name	elimina ||| unset	count=1
function_name	el siguiente entero mayor ||| ceil	count=1
function_name	utilizar para que la ||| set by key	count=1
arg_pair	más atributos al dn ||| string $dn	count=1
arg_pair	una matriz asociativa con ||| string $date	count=1
arg_pair	uso futuro ||| float $new_input_max	count=2
return	obtiene el ||| string	count=1
function_name	[function_name_1] al ||| [function_name_2] [function_name_1]	count=6
namespace	hilo referenciado por el ||| thread	count=1
arg_pair	un array ||| resource $imap_stream	count=1
function_name	textual en inglés correspondiente ||| yaz	count=1
return	primer valor ||| mixed	count=1
function_name	filtro ||| add	count=1
function_name	muestreo de ||| sample	count=1
namespace	que los índices ||| function	count=1
namespace	se enlaza ||| function	count=1
return	como el ||| int	count=1
function_name	bloque del ||| get algo block	count=1
namespace	número de [namespace] en ||| [namespace]	count=1
function_name	información detallada sobre todos ||| info	count=1
function_name	dispositivo raíz ||| gupnp device	count=1
function_name	una miniatura de tamaño ||| thumbnail	count=1
namespace	indicando error cuando ||| rarexception	count=1
function_name	[function_name_1] campo en ||| [function_name_2] [function_name_1]	count=1
function_name	envía [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	número máximo de ||| highlight max	count=2
arg_pair	domain por gettext() y ||| string $domain string $codeset	count=1
function	cambiará [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	palabras ||| mlt min doc	count=1
function_name	la bandera o_nonblock del ||| set block	count=1
function_name	lo grande que ||| fann	count=1
namespace	en el parámetro ||| function	count=1
function_name	entrada del ||| zip entry	count=1
function_name	[function_name_1] rojo ||| [function_name_2] [function_name_1]	count=8
arg_pair	cualquier píxel que coincida ||| mixed $fill	count=2
function_name	por el usuario ||| uasort	count=1
arg_pair	un servidor local ||| string $database_name resource $link_identifier	count=1
arg_pair	nombre de espacio asociado ||| string $qualifiedname	count=1
namespace	los dispositivos de ømq ||| zmqdevice	count=1
arg_pair	de colores que representan ||| int $colorspace	count=2
arg_pair	a un ||| resource $statement	count=1
function_name	en la que las ||| mlt min doc	count=1
function_name	tiempo de compilación del ||| qc get available	count=1
return	matriz que consista en ||| bool	count=1
arg_pair	flag a las ||| int $options	count=1
arg_pair	resultado ||| resource $result	count=2
namespace	y extrae cada ||| function	count=1
return	es el espacio de ||| bool	count=1
function_name	[function_name_1] el mensaje ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] con clave ||| [function_name_1] insert [arg_pair_2]	count=3
function_name	definidos ||| control point browse start	count=1
arg_pair	función cubrid_put() se usa ||| mixed $value	count=1
function_name	serán ||| min doc	count=1
function_name	el carácter ||| chr	count=1
function_name	el iterador interno ||| inner iterator	count=4
function_name	unrar encuentre ||| set	count=1
function_name	[function_name_1] error sqlstate ||| [function_name_2] [function_name_1]	count=1
namespace	contenido de un lob ||| oci-lob	count=1
function_name	esta función ||| ps	count=1
function_name	verificación ||| signature	count=1
function_name	para convertir ||| convert to	count=1
arg_pair	uri ||| string $uri	count=1
function_name	valor gamma de la ||| gamma	count=1
arg_pair	algoritmos alternativos que puedan ||| string $str string $salt	count=1
return	para [return] lista de ||| [return]	count=2
arg_pair	de entradas y un ||| resource $ann	count=1
namespace	clase interna ||| reflectionclass	count=1
return	retraso de ||| int	count=1
function_name	espacio de nombres ||| is	count=1
arg_pair	x509cert ||| mixed $x509cert	count=1
arg_pair	una consulta a mysql ||| mysqlnd_connection $connection string $query	count=1
function_name	de los callback definidos ||| gupnp control point browse start	count=1
arg_pair	cualquier abstracción que ||| zmqsocket $backend	count=1
arg_pair	de una instancia ||| string $oid	count=1
namespace	por ejemplo el resultado ||| function	count=1
function_name	de entrada a las ||| fann get	count=2
return	información ||| object	count=2
function_name	la función de error ||| error function	count=2
arg_pair	un determinado resultado ||| int $field_offset	count=1
function_name	que ||| set mlt min doc	count=2
function_name	devuelve ||| get temp dir	count=1
function_name	definida por ||| create function	count=1
function_name	rrd ||| rrd	count=2
function_name	establece ||| stream set	count=2
arg_pair	compara value1 ||| mixed $value1 mixed $value2	count=1
arg_pair	con la fuente ||| resource $pdfdoc	count=1
function_name	verificar las extensiones ||| autoload extensions	count=1
arg_pair	función se comporta ||| resource $p float $x	count=1
arg_pair	establece [arg_pair] fuente la ||| [arg_pair]	count=1
function	de control [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	devuelve ||| ifx get	count=2
function_name	campos que serán devueltos ||| fields	count=1
function_name	de acumulación ||| aggregate	count=1
function_name	entrada/salida en milisegundos para ||| timeout	count=1
function_name	el hash de ||| crypt	count=1
function_name	cubrid_lock_read() [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	sincroniza la base de ||| dba sync	count=1
function_name	dos dimensiones con estadísticas ||| extended stats	count=1
function	[function_name_1] pseudo-aleatorios ||| [function_name_1] [arg_pair_2]	count=1
function_name	de prioridad de los ||| event base priority	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] load [function_name_1]	count=6
function_name	configuración interna especificada ||| iconv	count=1
function_name	codificación [function_name_2] ||| [function_name_1] encode [function_name_2]	count=2
function_name	el nombre de la ||| name	count=7
return	a todos los ||| bool	count=1
function_name	copia los datos: únicamente ||| drain	count=1
namespace	parecida a sybase_connect() con ||| function	count=1
function_name	nivel mínimo de severidad ||| min error severity	count=1
function_name	descripción ||| cairo pattern get surface	count=1
function_name	buscarán los archivos ||| dbplus	count=1
namespace	de inactividad de ||| gearmanclient	count=1
return	mediante el ||| array	count=1
arg_pair	asocia una ||| string $key string $value	count=1
function_name	un repositorio indicado en ||| svn	count=1
return	que se ||| zmqsocket	count=1
arg_pair	establece el uri ||| string $uri	count=1
function_name	el tipo ||| column type	count=1
function_name	la descripción ||| cairo svg version to	count=1
function_name	al siguiente nodo ||| next	count=1
return	del proceso actual ||| void	count=1
function_name	de trabajo o repositorio ||| svn mkdir	count=1
function_name	nombre largo para ||| get frame long name	count=1
function_name	un lapiz ||| sketch image	count=1
function_name	del campo especificado ||| field	count=1
function_name	imprime el ||| show text	count=1
arg_pair	leído desde un fichero ||| string $filename	count=1
return	[return] último error ||| [return]	count=3
arg_pair	object es de esta ||| object $object	count=1
arg_pair	abstracción que ||| zmqsocket $frontend	count=1
arg_pair	de needle [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	de entrada para ||| set input scaling	count=1
return	obtiene información ||| mixed	count=1
function_name	devuelve el xml enviado ||| get	count=1
arg_pair	en el ||| int $flag	count=1
function_name	espera de la ejecución ||| timeout	count=1
arg_pair	sobre el certificado x509cert ||| mixed $x509cert	count=1
function_name	consultas ||| mysqlnd qc	count=1
function_name	funcionalidad de color ||| color	count=1
arg_pair	y pregunta por ||| string $keyword	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] len [arg_pair_2]	count=1
return	la información ||| object	count=1
function_name	[function_name_1] multi-dimensional ||| [function_name_1] [function_name_2]	count=1
function_name	de autenticación donde la ||| svn auth	count=1
arg_pair	un ||| string $name	count=3
function_name	de esquema ||| add	count=1
function_name	servidor ldap ||| ldap	count=1
arg_pair	la tabla de una ||| resource $pxdoc string $name	count=1
arg_pair	dado ||| resource $result int $field_offset	count=1
arg_pair	un fichero de un ||| string $filename	count=1
function_name	y extrae cada archivo ||| uudecode	count=1
namespace	final en ||| splfileobject	count=1
arg_pair	[arg_pair_1] pattern ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	delimiter ||| string $null_as	count=1
function_name	alto de la imagen ||| image height	count=1
function_name	la descripción ||| cairo surface	count=5
namespace	el final en el ||| splfileobject	count=1
function_name	términos [function_name_2] ||| [function_name_2] max num query [function_name_1]	count=1
namespace	que describe el ||| function	count=1
return	los índice del ||| int	count=1
return	apariencia de ||| bool	count=1
function_name	desecha el contenido del ||| end clean	count=1
namespace	segundos desde la ||| function	count=1
arg_pair	carga una fuente ||| string $encoding bool $embed	count=1
function_name	[function_name_1] tidy ||| [function_name_2] [function_name_1]	count=2
namespace	en ||| function	count=10
function_name	especifica ||| set start	count=2
function_name	de recodificación request ||| recode string	count=1
function_name	ccitt en ||| ccitt	count=1
function_name	nombre corto para un ||| frame short name	count=1
function_name	de dsn disponibles ||| data	count=1
arg_pair	str1 en str2 ||| string $str1 string $str2	count=1
arg_pair	esta función prepara para ||| resource $id	count=1
function_name	máximo [function_name_1] [function_name_2] incluidos ||| [function_name_2] [function_name_1]	count=3
function_name	la función mssql_free_statement() si ||| statement	count=1
function_name	escribe al ||| write function	count=1
rest	con la [function_2] ||| [function_2] [return_1]	count=1
function_name	en por lo menos ||| min doc frequency	count=1
function_name	la versión ||| ngettext	count=1
function_name	de fann_get_cascade_candidate_change_fraction() ||| get cascade candidate	count=1
namespace	es actualizado por ||| function	count=1
function_name	el dueño ||| owner	count=1
function_name	lee hasta el ||| fpassthru	count=1
function_name	campos de facet.date ||| facet date fields	count=3
function_name	el id [function_name_2] ||| [function_name_2] insert [function_name_1]	count=2
function_name	definida por el usuario ||| uasort	count=1
function_name	escribe al gestor ||| write	count=2
function_name	permite establecer el valor ||| checkbox set value	count=1
function_name	y enviarla a la ||| cubrid send	count=1
function_name	retraso de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	unix ||| int	count=1
function_name	limpia ||| gmp clrbit	count=2
arg_pair	una ||| string $unique	count=3
function_name	re-escalada líquido ||| liquid rescale image	count=1
namespace	el [namespace] como ||| [namespace]	count=1
return	las extensiones ||| array	count=1
function_name	entrenadas las conexiones ||| fann get cascade	count=1
namespace	de cada carácter que ||| function	count=1
function_name	devuelve una nueva ||| get	count=2
namespace	estar ||| function	count=1
function_name	argumentos pasados a la ||| args	count=1
function_name	obtener el tamaño ||| cubrid lob2 size	count=1
function_name	la metainformación ||| has metadata	count=1
arg_pair	y php del texto ||| resource $handle	count=1
namespace	objeto en ||| serializable	count=1
arg_pair	documentada actualmente solamente ||| string $str	count=1
function_name	pedir información de estado ||| task status	count=1
arg_pair	la clave dada a ||| array $query	count=1
function_name	segundo ||| add	count=1
function_name	con stream_wrapper_unregister() ||| stream wrapper	count=1
function_name	lista de ||| source	count=1
return	de la clase domnodelist ||| domnodelist	count=1
function_name	la primera muestra de ||| first	count=1
function_name	estancamiento ||| stagnation	count=3
arg_pair	la posición offset ||| int $offset	count=1
function_name	recupera la extensión de ||| extension	count=1
function_name	dsn disponibles después de ||| odbc data source	count=1
function_name	compilación del complemento ||| mysqlnd qc get available	count=1
function_name	documentos como este ||| mlt	count=1
return	color de ||| void	count=1
function_name	de la línea de ||| set line	count=1
function_name	de palabra ||| mlt min word	count=1
function_name	[function_name_1] [function_name_2] un ||| function resource [function_name_2] [function_name_1]	count=3
function_name	guid binario ||| mssql guid string	count=1
function_name	de consulta [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	el seridor ||| msql select db	count=1
function_name	advertencia ||| memory image	count=2
function	[function_name_1] clientes ||| [function_name_1] resource $service [arg_pair_2]	count=1
function_name	alternativa más próxima ||| imagecolorresolvealpha	count=1
function_name	la descripción ||| cairo scaled font get	count=4
function_name	a ingres_query() ||| ingres	count=2
arg_pair	str especificada por ||| string $str	count=1
namespace	perfiles del ||| gmagickdraw	count=1
namespace	php del texto ||| function	count=1
function_name	o cualquier abstracción ||| construct	count=1
function_name	devuelve ||| get	count=290
arg_pair	esta función se comporta ||| resource $p	count=1
arg_pair	a una página del ||| int $page string $dest	count=1
arg_pair	dos diferencias: ||| string $servername	count=1
return	las ||| solrquery	count=1
function_name	uri del [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	con ||| oci-lob	count=1
function_name	que puedan estar ||| crypt	count=1
arg_pair	versión extendida de msql_fetch_row() ||| int $result_type	count=1
function_name	en la ||| min doc	count=1
function_name	de estilo de ||| set	count=1
arg_pair	reconstruida ||| int $metric	count=2
function_name	[function_name_1] un recurso ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] de interpretación ||| [function_name_2] [function_name_1]	count=8
arg_pair	esta función permite enviar ||| string $message	count=1
namespace	disponible la lista de ||| function	count=1
function_name	usando el certificado y ||| pkcs7 sign	count=1
return	la función va aquí ||| cairofontoptions	count=3
function_name	inclued ||| inclued	count=1
function_name	namespace ||| xml set end namespace	count=1
arg_pair	selección de fichero fieldname ||| string $fieldname	count=1
function_name	de acceso calificadores ccl ||| yaz ccl conf	count=1
function_name	proxy ||| uh set statement proxy	count=1
function_name	dirección ||| geoip record	count=1
arg_pair	una conexión ||| resource $link_identifier string $host_name	count=1
function_name	sisitema de ||| wrapper register	count=1
function_name	es el ||| namespace	count=1
arg_pair	de coordenadas ||| resource $p	count=1
function_name	del api de eventos ||| event buffer new	count=1
function_name	de salir con eventbase::stop() ||| got stop	count=1
function_name	un recurso de conexión ||| yaz connect	count=1
function_name	[function_name_1] javascript al ||| [function_name_2] [function_name_1] resource	count=1
function_name	escribe información ||| write	count=1
namespace	acepta ||| function	count=1
function_name	arreglo ||| db2 fetch	count=1
namespace	de petición http ||| function	count=1
arg_pair	éxito cero ||| string $zurl	count=1
function_name	descripción ||| image surface	count=1
namespace	domprocessinginstruction ||| domprocessinginstruction	count=1
return	recupera ||| array	count=1
return	las coordenadas especificadas en ||| bool	count=1
arg_pair	una nueva entrada a ||| string $key int $value	count=1
arg_pair	signed_text ||| resource $identifier string $signed_text	count=1
return	alias de ||| bool	count=1
function_name	devuelve como un ||| get	count=1
arg_pair	con key y value ||| string $value	count=1
arg_pair	salto de string ||| string $break bool $cut	count=1
function_name	la ||| nsapi request	count=1
function_name	clase propia ||| class	count=1
function_name	esta función acepta ||| number format	count=1
arg_pair	bordes de ||| int $x int $y	count=1
function_name	corto para un marco ||| frame short	count=1
return	de renderización de la ||| int	count=1
function_name	fondo de la imagen ||| image background	count=1
namespace	propiedades públicas ||| arrayiterator	count=1
namespace	se produjo un ||| function	count=1
return	de pila de una ||| array	count=1
function_name	columna ||| db2	count=1
function_name	[function_name_1] tidy con ||| [function_name_2] load [function_name_1]	count=2
function_name	el acceso ||| eio mkdir	count=1
namespace	que closedir() solo ||| directory	count=1
arg_pair	termina de ||| resource $fam resource $fam_monitor	count=1
arg_pair	un campo ||| resource $fdf_document string $field_name	count=1
function_name	reemplaza o inserta ||| replace	count=1
return	las palabras ||| solrquery	count=1
arg_pair	específica ||| int $field_number	count=1
arg_pair	de puerto ||| int $port	count=1
arg_pair	del ||| string $path	count=1
arg_pair	el evento ||| mixed $fd	count=1
function_name	añade ||| bbcode add	count=1
function_name	tendencias de ||| get bias	count=1
function_name	siguiente fila de una ||| oci fetch	count=1
namespace	de secuencia ||| function	count=1
function_name	[function_name_1] donde ||| [function_name_2] [function_name_1]	count=1
function_name	la operación más reciente ||| yp errno	count=1
arg_pair	número fijo de colores ||| int $colorspace	count=2
function_name	letras en minúsculas ||| xheight	count=1
function_name	la frecuencia en ||| set mlt min doc	count=1
function_name	de widrow + nguyen ||| init weights	count=1
function_name	valores ||| uasort	count=1
function_name	computa el inverso del ||| gmp invert	count=1
arg_pair	campo es decir ||| string $filename	count=1
arg_pair	nombre distinguido que se ||| resource $privkey	count=1
function_name	la lista de dsn ||| data source	count=1
function_name	establece la ||| oci set	count=1
function_name	distribución de lecturas ||| set slave	count=2
namespace	entrada a un hash ||| quickhashstringinthash	count=1
return	el tamaño actual de ||| int	count=1
function_name	devuelve el número ||| mysqli stmt param count	count=1
function_name	límite superior de) ||| strncasecmp	count=1
function_name	entrada ||| entry filesize	count=2
function_name	número [function_name] modificadas en ||| ingres num [function_name]	count=1
arg_pair	un bloque ||| resource $pdfdoc int $page	count=1
arg_pair	renombra una ||| string $newname	count=1
namespace	reciente ||| sqlite3	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=3777
function_name	y lo contornea ||| pdf closepath stroke	count=1
function_name	obtiene ||| get basename	count=2
arg_pair	el fichero dado ||| string $filename int $flags	count=1
rest	[return_1] [function_2] ||| [return_1] ibase blob [function_2]	count=2
return	x ||| array	count=1
function_name	los archivos de ||| dbplus chdir	count=1
function_name	el valor actual del ||| value	count=1
namespace	menos tantos documentos ||| solrquery	count=1
function_name	la representación json ||| json encode	count=1
function_name	petición http en ||| nsapi	count=1
namespace	del inicio ||| function	count=1
function_name	un valor especial indicando ||| set using exceptions	count=1
function_name	operación substr() multibyte de ||| mb substr	count=1
function_name	devuelve la primera ||| first	count=1
function_name	las ||| mlt min	count=1
namespace	estar disponibles ||| function	count=1
namespace	fichero o directorio especificado ||| function	count=1
return	asociado con el ||| array	count=1
function_name	es el espacio de ||| namespace	count=1
function_name	bordes ||| raiseimage	count=1
function_name	[function_name_1] la pendiente ||| [function_name_2] [function_name_1]	count=1
function_name	conocida por el servidor ||| is known	count=1
function	lee [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la precisión de ||| field precision	count=1
return	el tiempo máximo ||| int	count=1
function_name	abierto mediante ||| get	count=1
function_name	[function_name] usada en ||| set [function_name]	count=1
function_name	puedan estar ||| crypt	count=1
function_name	lista con el ||| list	count=1
function_name	función obtiene [function_name] de la ||| [function_name]	count=1
function_name	covierte los píxeles planos ||| encipher	count=1
function_name	por lo ||| set mlt min doc	count=1
function_name	de expresiones regulares ||| regex	count=1
function_name	estilo ||| show	count=1
function_name	los colores de ||| ncurses	count=1
return	un objeto pdostatement ||| pdostatement	count=1
namespace	usadas por ||| function	count=1
return	ha ||| void	count=1
arg_pair	el parámetro old ||| int $old	count=1
function	[function_name_1] el intérprete ||| [function_name_1] handler [arg_pair_2]	count=8
function_name	nodo de ||| set attribute node	count=1
function_name	descripción de la ||| get surface	count=1
function_name	de trabajo dado ||| job	count=1
return	de esquema ||| void	count=1
return	función ||| bool	count=1
arg_pair	timestamp y ubicación dados ||| int $timestamp int $format	count=2
arg_pair	entrada y salida basados ||| resource $train_data	count=1
arg_pair	el puntero al fichero ||| int $length	count=1
function_name	devuelve el valor ||| get	count=10
function_name	ideal especificado por ||| highlight regex slop	count=1
function_name	yaml de ||| yaml emit file	count=1
function_name	las estadísticas de cada ||| statistics	count=1
function_name	colores únicos [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	valor especial ||| set using	count=1
function	xml [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	transacción xa entre servidores ||| mysqlnd ms xa	count=1
arg_pair	definición de una ||| int $options	count=1
function_name	información detallada ||| info	count=2
function	[function_name_1] la ||| [function_name_1] [arg_pair_2]	count=1
function_name	establece la calidad de ||| ms set qos	count=1
arg_pair	método y la ||| string $method	count=1
function_name	de ||| ps	count=1
function_name	documento mínima a devolver ||| terms min count	count=1
function	es usada [function_name_1] [arg_pair_2] ||| [function_name_1] tag [arg_pair_2]	count=2
arg_pair	[arg_pair] es null ||| [arg_pair]	count=1
function_name	pascua ||| easter	count=1
function_name	la página para ajustarse ||| fit	count=2
function_name	única fila ||| fetch	count=1
function_name	simplexml y lo ||| simplexml	count=1
namespace	del objeto domnodelist ||| domnodelist	count=1
return	avanza ||| void	count=1
function_name	nombre de la ||| function name	count=2
arg_pair	representa una fila en ||| int $row_number	count=1
function_name	encuentra ||| memory	count=1
namespace	función ya que puede ||| function	count=1
function_name	recupera el objeto respuesta ||| get response	count=1
function_name	[function_name_1] de atributo ||| [function_name_2] [function_name_1]	count=2
namespace	que el valor predeterminado ||| directory	count=1
function_name	similares ||| tailable	count=1
function_name	este serán ignoradas ||| set mlt min	count=1
return	información ||| reflectionextension	count=1
function_name	multibyte de ||| mb	count=1
namespace	para archivos tar este ||| phardata	count=1
function_name	retorna el número de ||| num	count=1
return	esquema en un ||| void	count=1
function_name	de ||| addcslashes	count=1
arg_pair	de filtros ||| int $read_write	count=2
arg_pair	texto y ||| string $text	count=1
arg_pair	especificada rra del archivo ||| string $file int $raaindex	count=1
arg_pair	por offset ||| int $offset	count=1
arg_pair	de ||| int $x	count=2
arg_pair	propertyaliases.txt ||| int $property int $namechoice	count=1
function_name	frecuencia en ||| frequency	count=1
function_name	[function_name_1] pdf importado ||| [function_name_2] [function_name_1]	count=2
arg_pair	datos emita uno de ||| string $event_name1	count=1
namespace	copia de trabajo o ||| function	count=1
namespace	el carácter especificado por ||| function	count=1
arg_pair	esté disponible para ser ||| int $row	count=1
function_name	el número de tendencias ||| fann get bias array	count=1
function_name	más reciente ||| last	count=1
function_name	único componente al ||| component	count=1
function_name	datos clob de ||| clob	count=1
function_name	nombre largo para un ||| id3 get frame long name	count=1
namespace	true entonces ||| rarexception	count=1
return	la cadena ||| string	count=1
return	descripción de una ||| string	count=1
arg_pair	función ||| resource $connection_id	count=1
return	define el de estilo ||| bool	count=1
arg_pair	offset a ||| resource $lob_identifier string $offset	count=1
function_name	entrenamiento continuar sin ||| fann get cascade	count=1
function_name	rango de cuantía para ||| quantum range	count=1
function_name	estado del cursor: si ||| count	count=1
namespace	extrae cada ||| function	count=1
return	el tipo ||| string	count=1
function_name	user ||| user	count=1
function_name	el [function_name] ||| ms get last [function_name]	count=1
function_name	en por lo menos ||| mlt min	count=1
function_name	todas las cabeceras de ||| nsapi request headers	count=1
function_name	emplea para establecer ||| set	count=1
function_name	en un ||| all	count=1
namespace	hash en el ||| quickhashinthash	count=1
namespace	se usa para obtener ||| function	count=1
function_name	sistema posix [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	un flujo ||| stream	count=1
function_name	socket socket creado ||| socket	count=1
function_name	si es ||| module is	count=1
function_name	[function_name] number ||| [function_name] get	count=1
arg_pair	pattern según las ||| int $flags	count=1
function_name	se usa para insertar ||| cubrid set add	count=1
namespace	que ambos ||| imagickkernel	count=1
function_name	convertidos a minúscula ||| strtolower	count=1
function_name	de entidades ||| external entity loader	count=1
function_name	geoip_domain_by_name() devolverá los nombres ||| domain	count=1
function_name	primarias ||| primary	count=1
function_name	unrar ||| set	count=1
function_name	sybase_fetch_row() que utiliza como ||| sybase fetch assoc	count=1
function_name	fichero subido por medio ||| get attachment	count=1
function_name	es ||| gmp prob prime	count=2
arg_pair	declara el ||| bool $isid	count=1
function_name	tipo de la imagen ||| type	count=1
namespace	función usa la ||| function	count=1
return	los caracteres que aparecen ||| string	count=1
return	de instancia xml dada ||| sdo_das_xml_document	count=1
function_name	la impresión ||| pos	count=1
function_name	transforma el nodo origen ||| transform to	count=1
function_name	estableciendo zend.enable_gc ||| enable	count=1
function_name	especifica ||| start	count=1
function_name	el siguiente resultado de ||| fetch	count=1
function_name	color de relleno ||| cmykfill	count=1
function_name	disponibles después ||| odbc data source	count=1
return	en el socket ||| bool	count=1
function_name	devuelve ||| get channels	count=1
function_name	no ||| mlt min doc frequency	count=2
arg_pair	la cadena source ||| string $source	count=1
function_name	la siguiente línea ||| next line	count=2
namespace	dado ||| splfileobject	count=1
function_name	caché de código de ||| apc	count=1
namespace	devuelve los ||| splfixedarray	count=1
arg_pair	coincida con ||| float $fuzz	count=1
function_name	plantilla ||| template	count=2
arg_pair	un ||| resource $fdf_document	count=4
function_name	devuelve el comentario de ||| get comment	count=1
function_name	crea ||| fbsql create	count=1
arg_pair	por mailbox ||| string $mailbox	count=2
function_name	secuencia de mensaje para ||| imap	count=1
function_name	una operación substr() multibyte ||| mb substr	count=1
arg_pair	[arg_pair] actual ||| [arg_pair]	count=3
function_name	entradas de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	función geoip_db_avail() devuelve si ||| db avail	count=1
function_name	exporta el ||| export	count=2
arg_pair	el algoritmo estándar basado ||| string $str	count=1
function_name	geoip_country_code_by_name() devolverá ||| country code	count=1
function_name	control de ||| control	count=1
function_name	función usa la prueba ||| prob	count=1
function_name	para añadir ||| set	count=1
namespace	base ||| sqlite3	count=1
namespace	del id de mongo ||| mongoid	count=1
function_name	argumento) ||| using exceptions	count=1
function_name	las extensiones ||| autoload extensions	count=1
arg_pair	la función va aquí ||| cairogradientpattern $pattern	count=2
function_name	archivo pdf actual ||| pdf	count=1
function_name	datos de unicode propertyvaluealiases.txt ||| value enum	count=1
function_name	tantos documentos como ||| set mlt min doc frequency	count=1
function_name	devuelve los datos previamente ||| get	count=1
function	gamma [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	un campo de ||| field	count=1
function_name	la frecuencia en ||| min doc frequency	count=1
function_name	tipo de dato ||| db2 field type	count=1
arg_pair	día especificado como timestamp ||| int $timestamp int $format	count=2
function_name	unión para la ||| join	count=1
function_name	[function_name_1] de facet.date ||| [function_name_2] [function_name_1]	count=2
function_name	función crea una ||| create entity	count=1
function_name	sintaxis de la consulta ||| query	count=1
function_name	parche binario ||| xdiff	count=1
function_name	nombres de los traits ||| class uses	count=1
function	[function_name_1] y ||| [arg_pair_2] [function_name_1]	count=6
namespace	y ||| splfileobject	count=1
function_name	establecer ||| ncurses	count=1
function_name	al número de campo ||| field seek	count=1
function_name	sobre un proceso abierto ||| get	count=1
function_name	desplazamiento de campo ||| msql field seek	count=3
namespace	[namespace] ejemplo con ||| [namespace]	count=3
function_name	el argumento es ||| using	count=1
function_name	establece el identificador ||| oci set	count=1
function_name	abierto mediante el ||| proc	count=1
function_name	una lista de los ||| enchant broker list	count=1
arg_pair	stack es ||| string $stack	count=1
arg_pair	que cualquier otra llamada ||| callable $callback	count=1
function_name	fragmento ideal especificado ||| highlight regex slop	count=1
function_name	de imagen potencial ||| getimagetype	count=1
namespace	multidimensional por una ||| function	count=1
function_name	sobre la etiqueta ||| tag	count=1
function_name	obtiene ||| get parameter	count=2
function_name	la descripción de ||| cairo matrix translate	count=1
function_name	unidades de grafema de ||| grapheme stripos	count=1
function_name	información ||| proc	count=1
function_name	instrucciones ||| processing instruction	count=1
function_name	patrón [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	type ||| type	count=1
function_name	todas las [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	de que server_key se ||| string $server_key	count=5
function_name	frecuencia en ||| min doc frequency	count=1
return	ser usada en ||| bool	count=1
namespace	en blanco ||| function	count=1
namespace	colores ||| function	count=1
return	y la ||| array	count=3
return	error de cualquier error ||| string	count=1
function_name	proceso del proceso ||| setproctitle	count=1
function_name	odbc_exec() ||| odbc	count=1
function_name	para ordenar ||| multisort	count=1
function_name	devuelve el ||| get mode	count=1
arg_pair	string haystack ||| string $haystack	count=1
function_name	especifica la fuente usada ||| getfont	count=1
function_name	socket dada ||| stream socket	count=1
function_name	sets ||| tie	count=1
arg_pair	un fichero y cambia ||| resource $font_index string $encodingfile	count=1
function_name	la descripción de la ||| pattern get surface	count=1
namespace	previamente obtenido por ||| function	count=1
function_name	error una excepción de ||| using	count=1
namespace	caracter ||| function	count=1
arg_pair	fichero dado ||| string $filename int $flags	count=1
return	true entonces en lugar ||| void	count=1
function_name	de grafema de ||| grapheme strripos	count=1
function_name	palabras dentro de string ||| str word	count=1
arg_pair	result set especificado ||| int $index	count=1
function_name	crea ||| mcrypt create	count=1
function_name	tantos documentos como este ||| set mlt min doc frequency	count=1
function_name	sobre un ||| proc	count=1
function_name	una base [function_name] ||| [function_name]	count=2
function_name	pares ||| save repl	count=2
function_name	omitiendo el nombre ||| path	count=1
function_name	la descripción ||| cairo pattern get filter	count=1
return	menos tantos ||| solrquery	count=1
arg_pair	la imagen ||| int $width int $height	count=1
return	imagen que es una ||| mixed	count=1
arg_pair	x509cert ||| bool $shortnames	count=1
namespace	almacenamiento que están disponibles ||| function	count=1
function_name	de tesela para ||| imagesettile	count=1
namespace	reduce ||| gmagick	count=1
function_name	código de error sqlstate ||| sqlstate	count=1
function_name	logo de php usando ||| logo	count=1
arg_pair	a una ||| int $op	count=1
function_name	círculo a la ||| circle	count=1
namespace	argumento es true entonces ||| rarexception	count=1
arg_pair	de fichero fd ||| int $uid	count=1
function_name	inicia una ||| begin	count=1
function_name	glo y enviarla a ||| cubrid send glo	count=1
return	nodo es parte ||| bool	count=1
function_name	acción javascript al ||| javascript action	count=1
arg_pair	proporcionado que debería ||| float $value	count=1
function_name	tipo ||| set using	count=1
return	ver ||| bool	count=1
return	información proporcionada en la ||| bool	count=1
function_name	hilo de la ||| thread	count=1
arg_pair	reabre ||| int $options int $n_retries	count=1
arg_pair	horizontal y vertical al ||| float $y	count=1
function_name	cabo el formateo textline ||| pdf info textline	count=1
function_name	el brillo ||| modulate	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] ref [arg_pair_2]	count=3
return	un sombreado basado en ||| bool	count=1
function_name	funcion procesa el html ||| load html	count=1
arg_pair	conversión de variante para ||| variant $variant	count=1
function_name	un diff unificado que ||| diff	count=1
return	al inicio ||| void	count=1
arg_pair	para el result ||| resource $result	count=1
function_name	una condición para el ||| condition	count=1
arg_pair	cadena de ||| string $key	count=1
namespace	función reflexionada ||| reflectionfunction	count=2
function_name	segundo o ||| types	count=1
return	posee una característica ||| mongocursor	count=1
function_name	en la etiqueta id3 ||| id3 get	count=1
arg_pair	algoritmo ||| string $str	count=1
arg_pair	representan una fecha gmt ||| int $is_dst	count=1
arg_pair	índice especificado por newval ||| mixed $index mixed $newval	count=1
namespace	sentencia sql más ||| sqlite3	count=1
namespace	un [namespace] de ||| [namespace]	count=1
function_name	plantilla y muestra ||| display	count=1
function_name	acción con ||| gupnp service proxy action	count=1
function_name	necesitan ser escapados ||| addslashes	count=1
function	file_get_contents() devuelve [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	true ||| set using	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] property [function_name_2]	count=6
function_name	contra las keys del ||| array diff ukey	count=1
function_name	de firmas soportados ||| supported signatures	count=1
arg_pair	saturación y ||| float $saturation	count=1
function_name	de la [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	para el índice dado ||| string $index string $newval	count=1
function_name	donde ||| blob file	count=1
arg_pair	que puedan estar disponibles ||| string $str	count=1
function_name	sobre un proceso ||| get status	count=1
arg_pair	un mensaje mediante ||| string $message integer $mode	count=1
function_name	coinciden ||| preg grep	count=1
function	fila [arg_pair_2] ||| function mixed cubrid [function_name_1] [arg_pair_2]	count=3
function_name	durante la instanciación del ||| on create	count=1
function	descrita [arg_pair_2] ||| [function_name_1] replace [arg_pair_2]	count=3
namespace	como una cadena ||| gmagick	count=1
function_name	el nombre de ||| field name	count=1
function_name	en ||| get	count=1
function_name	extraidas por una consulta ||| ifx num	count=1
function_name	la escala de ||| db2 field scale	count=1
function_name	si el argumento ||| using exceptions	count=1
function_name	devuelve ||| get error	count=2
function_name	función reinicializa a ||| reset	count=1
arg_pair	variable_key y libera ||| resource $shm_identifier int $variable_key	count=1
function_name	límite de fallo de ||| fail limit	count=1
function_name	tipo de ||| gettype	count=1
arg_pair	php var_array al parámetro ||| int $max_table_length	count=1
namespace	es true entonces ||| rarexception	count=1
function_name	ventana ||| set	count=1
function_name	directorio ||| dbplus chdir	count=2
namespace	menos tantos ||| solrquery	count=1
function_name	un string con ||| addcslashes	count=1
function_name	cuenta ||| count	count=2
return	cual incluye los ||| array	count=1
function_name	un número ||| gmp prob	count=1
arg_pair	aclarando y ||| int $x	count=1
function_name	se especifica un socket ||| socket	count=1
namespace	unix (1 de ||| function	count=1
arg_pair	mailbox ||| string $mailbox	count=2
arg_pair	una página ||| string $dest	count=1
function_name	excepto que ||| fgetss	count=1
namespace	función ||| imagickkernel	count=1
arg_pair	retira espacios ||| string $character_mask	count=1
function_name	la descripción de ||| cairo pattern get color stop	count=1
function_name	datos lob de tamaño ||| lob	count=1
namespace	se describe como ||| function	count=1
namespace	iterador ||| norewinditerator	count=1
function_name	cliente [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	del apuntador de ||| mailparse	count=1
namespace	una conexión [namespace] ||| [namespace]	count=2
function_name	depuración ||| debug	count=1
arg_pair	pueden hacer de intermediarios ||| zmqsocket $backend	count=1
function_name	filas afectadas ||| fbsql rows fetched	count=2
function_name	no ||| doc	count=1
arg_pair	len bytes ||| int $flags	count=2
arg_pair	de pajar incluyendo la ||| string $needle	count=1
namespace	actual del puntero ||| solrdocument	count=1
function	archivo rrd [arg_pair_2] ||| [function_name_1] restore [arg_pair_2]	count=1
arg_pair	un bloque de resultados ||| resource $stmt	count=1
function_name	[function_name_1] de curl ||| [function_name_2] [function_name_1]	count=2
function_name	parecida ||| sybase pconnect	count=2
function_name	primer plano ||| ncurses	count=1
function_name	instalación actual ||| imagetypes	count=1
return	las opciones de ||| array	count=1
namespace	columna identificada por column_number ||| sqlite3result	count=1
function_name	spl ||| spl autoload	count=1
function_name	descripción de la ||| cairo font face get	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] iterator [function_name_2]	count=4
function_name	establece ||| newt set	count=1
arg_pair	agua digital dentro de ||| imagick $watermark_wand int $offset	count=1
function_name	el sistema ||| pdf rotate	count=1
function_name	este método ||| count	count=1
function_name	nombre y devolver ||| name	count=1
function_name	petición oauth ||| oauth request	count=1
function_name	de errores interno ||| trigger error	count=1
arg_pair	y ||| int $x	count=1
function_name	destino ||| pdf add nameddest	count=1
return	del inicio ||| string	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image blue [function_name_2]	count=2
function_name	todos los servidores de ||| ping	count=1
return	a una ||| string	count=1
function_name	[function_name_1] las tablas ||| [function_name_1] [function_name_2]	count=1
namespace	resultado a el búfer ||| splfileobject	count=1
namespace	el [namespace] en ||| [namespace]	count=2
return	fue ||| bool	count=2
namespace	usadas por intérpretes ||| function	count=1
function_name	afectadas por la ||| affected	count=1
return	disponible la lista de ||| int	count=1
function_name	objecto ||| soap	count=1
function_name	en un archivo temporal ||| mailparse uudecode all	count=1
arg_pair	namespaceuri ||| string $namespaceuri	count=1
function_name	número de funciones ||| functions	count=1
arg_pair	datos dados por data ||| int $offset	count=1
function_name	oracle del campo dado ||| oci field	count=1
namespace	un array o ||| function	count=1
arg_pair	especificada por flag a ||| string $flag	count=1
function_name	devuelve el número ||| sybase num	count=1
function_name	que pertenecen a ||| class names	count=1
function_name	la versión escapada de ||| cubrid real escape string	count=1
function_name	factor de umbral ||| threshold factor	count=6
arg_pair	[arg_pair_1] una cadena ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	secuencia especificada por sequence ||| string $sequence	count=1
function_name	la descripción de ||| cairo ps	count=1
function_name	de paso [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] hijo ||| [function_name_2] [function_name_1]	count=3
arg_pair	assoc_array en valores ||| array $assoc_array	count=1
arg_pair	tratado como una ||| string $fieldname string $fieldvalue	count=1
function_name	blanco de ||| white	count=1
arg_pair	old_file y new_file ||| string $new_file	count=1
function	[function_name_1] el result ||| [function_name_1] [arg_pair_2]	count=3
function_name	constantes memcached::res_* la ||| result code	count=1
function_name	en la que ||| mlt min doc	count=1
function_name	versión menor ||| minorversion	count=1
function_name	lee los datos ||| uudecode all	count=1
function_name	contornea el trazado ||| stroke	count=1
return	apuntador interno a la ||| void	count=1
namespace	ficheros que están ||| function	count=1
function_name	alta prioridad en ||| task high	count=1
function_name	cunstruye ||| load string	count=2
function_name	genera desviaciones [function_name] desde ||| [function_name] gen	count=1
function_name	parámetro rows ||| copy	count=1
function_name	un entrenamiento ||| fann get	count=1
namespace	actualmente señalado por ||| splobjectstorage	count=1
function_name	de paginación ||| paged result	count=1
return	devuelve una cadena ||| string	count=9
function_name	primer ||| color	count=1
function_name	previniendo incluso de acceso ||| dbplus xlockrel	count=1
arg_pair	un nuevo archivo ||| resource $pxdoc	count=1
return	recupera el ||| yaf_response_abstract	count=1
arg_pair	devolverá ||| resource $connection_id	count=1
return	(1 de ||| int	count=1
function_name	sybase_fetch_row() que ||| sybase fetch assoc	count=1
arg_pair	verifica ||| string $plaintext	count=1
function_name	un número es ||| gmp prob prime	count=1
function_name	la caché ||| apc fetch	count=1
function_name	que almacena [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	antes de los caracteres ||| addcslashes	count=1
function_name	en la ||| set	count=1
namespace	inicio del documento xml ||| sdo_das_xml_document	count=1
function_name	atributo [function_name] ||| is [function_name]	count=2
return	puedan estar disponibles ||| string	count=1
function_name	última modificación para ||| mtime	count=1
arg_pair	una ||| string $host int $port	count=1
function_name	constructor ||| construct	count=1
function_name	escribe [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	los modificadores de ||| modifiers	count=2
arg_pair	key y ||| int $padding	count=1
function_name	en lugar de emitir ||| set using	count=1
function_name	la imagen de tesela ||| imagesettile	count=1
function_name	mongo posee una característica ||| tailable	count=1
namespace	por column_number ||| sqlite3result	count=1
arg_pair	un archivo de ||| string $filename string $sections	count=1
function_name	usa ||| prime	count=1
function_name	cliente y ||| client	count=1
function_name	la propuesta de renderización ||| getimagerenderingintent	count=1
function_name	fila actual del ||| key	count=1
function_name	al siguiente elemento ||| next	count=2
arg_pair	se defina sobre ||| zmqsocket $backend	count=1
return	la última petición ||| array	count=1
function_name	rebobina la secuencia ||| reset stream	count=1
namespace	gd [namespace] una ||| [namespace]	count=1
arg_pair	una fila de la ||| resource $result_id	count=1
function_name	de prioridad baja ||| low	count=1
function_name	para remarcar términos ||| set	count=1
arg_pair	datagrama en [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	cliente y la ||| client	count=1
function_name	[function_name_1] temperatura ||| [function_name_2] [function_name_1]	count=2
namespace	actual ||| splfileobject	count=1
function_name	de mongo ||| get	count=1
function_name	[function_name_1] ausente que ||| [function_name_1] [function_name_2]	count=3
namespace	que están ||| function	count=3
arg_pair	efectos ||| int $effect	count=1
function_name	resultados msql ||| msql result	count=2
return	con el identificador de ||| array	count=1
function_name	base de datos geoip ||| geoip	count=1
namespace	un número ||| function	count=1
arg_pair	por msglist al ||| resource $imap_stream string $msglist	count=1
function_name	establece ||| set	count=94
arg_pair	redimensiona una ||| int $new_width	count=1
arg_pair	globales ||| string $encoded_string array $result	count=1
function_name	los ciclos de ||| collect cycles	count=1
arg_pair	documento xml desde ||| string $filename int $options	count=1
arg_pair	xml desde la ||| string $filename int $options	count=1
arg_pair	no está conectada completamente ||| int $num_neurons2	count=1
function_name	función cubrid_col_size() [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	cubrid_lob2_new() ||| cubrid lob2	count=1
function_name	destruir el ||| unset	count=1
arg_pair	de req_handle ||| resource $req_identifier	count=1
function_name	establece el array de ||| set	count=1
function_name	correo especificado por buzon ||| createmailbox	count=1
namespace	clausura ||| closure	count=1
function_name	de error::__construct() ||| previous	count=1
return	basado ||| string	count=1
function_name	los ||| raiseimage	count=1
arg_pair	procesa cada uno ||| resource $mh int $still_running	count=1
namespace	de dsn disponibles después ||| function	count=1
function_name	cursor en el atributo ||| to attribute	count=1
function_name	crc del archivo ||| crc	count=1
function_name	imagen y ||| image	count=4
arg_pair	la lista ||| resource $connection_id	count=1
return	función [return] las clases ||| [return]	count=1
arg_pair	memcached::replace() con la excepción ||| mixed $value int $expiration	count=1
function_name	en la ||| min	count=1
namespace	error ||| error	count=3
return	fichero dado de ||| int	count=1
function_name	blob que se ||| ibase blob	count=1
function_name	la última modificación de ||| ftp mdtm	count=1
function_name	colores ||| color	count=1
arg_pair	imagen png ||| int $quality int $filters	count=1
function_name	obtiene ||| get children	count=1
function_name	una respuesta ||| simple command handle response	count=1
arg_pair	left a right ||| mixed $left mixed $right	count=1
function_name	lee ||| ifxus read	count=1
arg_pair	el búfer de ||| resource $stream int $buffer	count=1
function_name	preparar la respuesta ||| response writer	count=1
function_name	libera todos ||| free	count=1
namespace	elemento ||| simplexmlelement	count=1
function_name	dueño ||| owner	count=1
arg_pair	prepara a query ||| string $query	count=1
function_name	cada ||| mailparse uudecode	count=1
namespace	de [namespace] en un ||| [namespace]	count=1
namespace	archivos de ||| function	count=1
function	byte en [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	al primer ||| first	count=1
arg_pair	del buffer especificado ||| string $buffer	count=1
arg_pair	datos dados por data ||| string $data int $offset	count=1
function_name	obtiene varios valores ||| ps get value	count=1
function_name	archivo ||| mailparse uudecode	count=3
function_name	acción ||| service proxy action	count=1
return	de imágenes [return] ||| [return]	count=3
function_name	crea un ||| create document type	count=1
namespace	basado en des de ||| function	count=1
arg_pair	evento ||| resource $event	count=1
arg_pair	retorna el archivo en ||| int $use_include_path	count=1
function_name	gobtiene el acl para ||| getacl	count=1
function_name	archivo pdf usando el ||| pdf open file	count=1
function_name	diccionario ||| dict	count=2
namespace	al servidor memcached ||| memcache	count=1
arg_pair	address al ||| string $address	count=1
return	de petición ||| array	count=1
function_name	quickprop ||| quickprop	count=1
arg_pair	a la de memcached::cas() ||| float $cas_token	count=1
function_name	se encuentra disponible ||| ps open	count=1
namespace	cursores ||| mongocursor	count=1
function_name	de base de ||| get	count=1
arg_pair	retrollamadas se ||| mixed $subject	count=1
function_name	actual ||| nsapi request	count=1
function_name	datos del ||| mailparse uudecode all	count=1
function_name	clave usando una ||| uksort	count=1
namespace	almacenamiento que están ||| function	count=1
function_name	error cuando la ||| set using	count=1
namespace	para ver si ||| gearmanclient	count=1
function_name	devuelve el ítem que ||| get	count=1
namespace	de base de ||| harufont	count=1
function_name	mismo ||| is same	count=1
arg_pair	no existe todavía en ||| int $expire	count=1
function_name	crea ||| raiseimage	count=1
function_name	entonces en ||| set using	count=1
function_name	fam en espera ||| fam	count=1
function_name	en blanco retirados ||| rtrim	count=1
namespace	estilo ||| harupage	count=1
function_name	documentos como ||| doc	count=1
arg_pair	path en el ||| string $path	count=1
function_name	de clase iterador ||| set iterator class	count=2
return	simulado aclarando y ||| void	count=1
function_name	de datos lob de ||| lob	count=1
arg_pair	signed_text ||| string $signed_text	count=1
namespace	del modelo ||| svmmodel	count=1
function_name	usa ||| prob	count=1
function_name	que el semáforo ||| sem	count=1
function_name	podrían ser entrenadas las ||| get	count=1
function_name	primer plano ||| color	count=1
arg_pair	de la entrada proporcionada ||| resource $result_entry_identifier	count=1
function_name	de acumulación y recuperar ||| aggregate	count=1
return	tantos documentos como este ||| solrquery	count=1
rest	actualmente en [function_2] ||| [return_1] [function_2]	count=1
function_name	resultados completo para las ||| start	count=1
function_name	abre una [function_name] a una ||| [function_name]	count=1
function_name	de esquema en ||| add types	count=1
namespace	el archivo directorio o ||| function	count=1
arg_pair	el estilo numérico para ||| int $first_page int $style	count=1
function_name	clave o/y una query ||| find	count=1
function_name	[function_name_1] última ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] ldap en ||| [function_name_2] [function_name_1]	count=1
function_name	última tupla de ||| last	count=1
function_name	pendientes [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	html y php del ||| fgetss	count=1
function_name	string multibyte predefinido ||| mb ereg search	count=1
function_name	el buzón actual ||| imap	count=1
function_name	[function_name_1] retropropagación ||| [function_name_1] [function_name_2]	count=1
arg_pair	unidades de b negro ||| float $b	count=1
function_name	[function_name_1] etiqueta ||| [function_name_2] [function_name_1]	count=4
function_name	con db2_connect() y devuelve ||| db2	count=1
namespace	arrayobject serializado ||| arrayobject	count=1
arg_pair	un buzón nuevo ||| resource $imap_stream string $mailbox	count=1
return	define la ||| bool	count=2
namespace	de filas ||| sqlite3	count=1
function_name	[function_name_1] un objeto ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=1
function_name	al valor ||| value	count=1
function_name	índice ||| index	count=2
arg_pair	un bloque [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	el nombre ||| filepro fieldname	count=1
arg_pair	una fecha gmt ||| int $year int $is_dst	count=1
function_name	obtiene el contenido de ||| get	count=4
function_name	palabras que no ||| set mlt min	count=1
return	simulado ||| void	count=1
function_name	esta función [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	se produjo ||| function	count=1
function_name	la descripción ||| cairo font options get hint	count=2
arg_pair	texto que ||| resource $handle	count=1
function_name	una opción ||| option	count=1
namespace	número hexadecimal representado por ||| function	count=1
function_name	la extensión [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	que el valor ||| close	count=1
arg_pair	de eventos ||| resource $event_base	count=1
function_name	número de secuencia de ||| msgno	count=1
arg_pair	un nombre de ||| int $property string $name	count=1
function_name	[function_name_1] eventos de ||| [function_name_2] [function_name_1]	count=1
return	devuelve resultados en ||| bool	count=1
function_name	cadena de instancia ||| load	count=1
function_name	ventana centrada de un ||| newt centered window	count=1
function_name	un servicio [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	la codificación to_encoding ||| string $to_encoding	count=1
function_name	una conexión persistente a ||| pconnect	count=2
function_name	cierra el trazado ||| closepath	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] sarprop step error [function_name_2]	count=8
arg_pair	blanco ||| string $str	count=1
function_name	perfiles del objeto contorneado ||| getstrokeopacity	count=1
arg_pair	una versión ||| resource $result	count=2
arg_pair	coordenadas los radios ||| float $rx float $ry	count=1
function_name	devuelve el xml ||| get	count=2
arg_pair	intermediarios de direcciones ||| zmqsocket $frontend	count=1
function_name	atributo tipo [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	especial a la imagen ||| image	count=1
return	ya ha sido ||| void	count=1
namespace	idéntica a ||| function	count=1
namespace	del cursor: si ||| mongocursor	count=1
function_name	hace un diff ||| diff	count=1
arg_pair	de unicode asignados entre ||| int $namechoice	count=1
arg_pair	el conjunto óptimo ||| int $scope int $nullable	count=1
function_name	de ||| open memory	count=1
function_name	fija la base de ||| db	count=1
return	si el argumento es ||| void	count=1
function	[function_name_1] cadena de ||| [function_name_1] resource $p [arg_pair_2]	count=1
function_name	la ||| ps open memory	count=1
namespace	los archivos tar/zip ||| phardata	count=3
function_name	[function_name_1] de campo ||| [function_name_2] [function_name_1]	count=3
function_name	el tamaño actual ||| entry	count=1
return	objeto imagickpixeliterator de una ||| imagickpixeliterator	count=1
function	última [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	guardará los pares de ||| config save repl	count=1
arg_pair	de colores que ||| int $colorspace	count=2
function_name	de la fuente ||| query font	count=1
function_name	especial indicando error ||| using	count=1
return	del objeto ||| float	count=1
arg_pair	que lee ||| resource $handle int $length	count=1
function_name	color ||| get color	count=2
function_name	carp::croak de perl ||| apd croak	count=1
function_name	dibujo a carboncillo ||| charcoal image	count=1
return	[return] semilla seed ||| [return]	count=1
arg_pair	apariencia de un campo ||| resource $fdf_document string $field_name	count=1
namespace	documento basado en ||| domdocument	count=1
function_name	advertencia ||| ps open	count=1
function_name	averigua si una variable ||| is registered	count=1
function_name	lista de ||| enchant broker list dicts	count=1
namespace	agregar ||| oauthprovider	count=1
function_name	[function_name_1] csr ||| [function_name_2] [function_name_1]	count=6
function_name	coincide exactamente con ||| tremove	count=1
function_name	lista de ||| open memory	count=1
arg_pair	texto que ||| resource $handle int $length	count=1
namespace	versión ||| function	count=1
function_name	sintaxis lint pelusa en ||| lint	count=1
arg_pair	fichero a un ||| bool $use_include_path	count=1
function_name	el ||| curl	count=1
function_name	memcached::prepend() con ||| prepend	count=1
return	un string utilizando ||| string	count=1
function_name	obtiene el contenido de ||| get stream	count=1
arg_pair	fichero fd para el ||| int $mode	count=1
arg_pair	para ser borrado ||| int $record_number	count=1
function_name	filas afectadas por ||| rows fetched	count=1
function_name	id del blob ||| ibase blob	count=1
arg_pair	valores desde una entrada ||| resource $result_entry_identifier	count=1
function_name	añade ||| add task	count=5
function_name	monitorizar un recurso ||| cancel monitor	count=1
function_name	las ||| preg replace callback array	count=1
arg_pair	dominio actual para ||| string $domain	count=1
arg_pair	con nombre ||| mixed $value	count=1
function	[function_name_1] para ||| [function_name_1] hidden [arg_pair_2]	count=5
function_name	recurso ||| resource	count=1
function_name	[function_name_1] definidos por ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] [function_name_2] ||| [function_name_1] last request [function_name_2]	count=2
function_name	[function_name_1] de unión ||| [function_name_2] [function_name_1]	count=5
namespace	consultado ||| mongocursor	count=1
function_name	prueba automática sobre ||| module self test	count=1
return	establece el ||| void	count=2
function_name	variable php ||| gettype	count=1
function_name	actual de ||| zip entry filesize	count=1
namespace	más reciente a ||| function	count=2
namespace	pila como ||| throwable	count=1
function_name	final de la ||| append data	count=2
namespace	datos ||| sqlite3	count=1
function_name	entonces en ||| using	count=1
function_name	la transformación actual ||| text matrix	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] name resource $result [arg_pair_2]	count=1
function_name	función analiza una ||| parse url	count=1
arg_pair	ventanas la propiedad hwnd ||| int $window_handle int $client_area	count=1
function_name	una operación de implicación ||| variant imp	count=1
function_name	ecm ||| cascade output stagnation	count=1
function_name	función reinicializa a sus ||| reset	count=1
function_name	el nodo ||| is	count=1
namespace	de errores ||| function	count=1
arg_pair	decir ||| int $face string $filename	count=1
arg_pair	la revisión revision ||| int $flags	count=1
function_name	los colores de primer ||| ncurses color set	count=1
return	de la imagen ||| gmagick	count=2
function_name	cierra el diccionario ||| closedict	count=1
function_name	devuelve el estado http ||| http status	count=1
function_name	tamaño de paso máximo ||| get rprop delta max	count=1
function_name	devuelve un string con ||| addcslashes	count=1
arg_pair	de grafemas ||| int $extract_type int $start	count=1
namespace	glifos que están disponibles ||| function	count=1
arg_pair	los datos y los ||| string $data string $mode	count=1
namespace	posee una característica ||| mongocursor	count=1
function_name	operación or ||| variant or	count=1
function_name	la biblioteca ||| set using exceptions	count=1
arg_pair	en una ||| string $msgid2 int $n	count=1
arg_pair	para ser enviada junto ||| bool $secure bool $httponly	count=1
function_name	[function_name_1] de sesión ||| [function_name_2] [function_name_1]	count=10
namespace	se dibujan rectágulos polígonos ||| function	count=1
return	usado cuando ||| void	count=1
function_name	la actual [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	estar ||| string	count=1
namespace	devuelve los índice del ||| splfixedarray	count=1
function_name	a sybase_fetch_assoc() con ||| sybase fetch object	count=1
function_name	del esquema solicitado de ||| schema	count=1
function_name	devuelve la porción de ||| mb strrchr	count=1
return	define la apariencia ||| bool	count=1
function_name	repositorio indicado en ||| svn cat	count=1
function_name	contexto con la ||| gupnp context	count=1
function_name	ausente que ||| empty	count=1
function_name	devuelve como ||| get	count=1
namespace	trabajo datos ||| gearmanjob	count=1
arg_pair	comporta ||| resource $p float $x	count=1
arg_pair	zguide ||| zmqsocket $backend	count=1
rest	mueve un [function_2] ||| [function_2] [return_1]	count=2
arg_pair	domain actual en ||| string $domain	count=1
function_name	con información dependiente ||| resize	count=1
namespace	la opacidad de los ||| gmagickdraw	count=1
function_name	el cliente y ||| client	count=1
return	con las claves ||| array	count=1
function_name	la frecuencia ||| doc frequency	count=1
function_name	extensión ||| to extension	count=1
function_name	para que [function_name] ser ||| [function_name] escape	count=1
function_name	sobre un ||| get status	count=1
return	especificado ||| string	count=1
function_name	estado ||| task status	count=2
function_name	la firma digital ||| verify	count=1
function_name	añade un ||| pdf add	count=1
function_name	la publicación de ||| ap	count=1
function	campo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	para ser generados en ||| set	count=1
arg_pair	las capas de mensaje ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	alimentarlo a ||| resource $ann array $input_vector	count=1
function_name	de socket devuelto por ||| socket	count=1
function_name	disponibles después de ||| data	count=1
function_name	devuelve [function_name] de ||| get persistent [function_name]	count=1
function_name	pares de sustitución ||| pspell config repl	count=1
arg_pair	el nombre de espacio ||| string $namespaceuri	count=1
return	activa el ||| void	count=1
function_name	gif de la imagen ||| image	count=1
function_name	de código y pruebas ||| mysqli report	count=1
function_name	tantos documentos ||| mlt min doc	count=1
arg_pair	de data1 y data2 ||| resource $data2	count=1
namespace	que ||| imagickkernel	count=1
function_name	[function_name] retorna tan ||| [function_name] block	count=3
function_name	true entonces en lugar ||| using	count=1
function_name	no analizadas [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	registro ||| dbase delete record	count=1
function_name	lista ||| odbc data	count=1
namespace	colas o cualquier ||| zmqdevice	count=1
namespace	defina sobre las capas ||| zmqdevice	count=1
arg_pair	subject coincidencias de ||| mixed $subject int $limit	count=1
function_name	tamaño y ||| size	count=1
function_name	pendientes de activación del ||| fann get cascade activation steepnesses count	count=1
function_name	nombre de la ||| name	count=7
function_name	interno del [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	las letras ||| get	count=1
function_name	la respuesta sin tratar ||| raw response	count=1
function_name	términos [function_name] faceta ||| [function_name] facet	count=1
function_name	tie breaker ||| set tie breaker	count=1
function_name	del inicio de un ||| ltrim	count=1
function_name	facet ||| facet	count=1
namespace	que corresponde a ||| function	count=2
arg_pair	dicho elemento ||| mixed $entry integer $type	count=1
function_name	finaliza ||| pdf end	count=3
function_name	si un ||| gmp	count=1
function_name	lista ||| imap list	count=1
arg_pair	resolución deseada ||| float $y_resolution	count=1
function_name	y enviarla a ||| cubrid send	count=1
function_name	función usa ||| prob	count=1
function_name	[function_name_1] del complemento ||| [function_name_2] [function_name_1]	count=5
function_name	cadena de ||| string	count=1
function_name	html y php ||| fgetss	count=1
function_name	[function_name_1] parámetro facet.date.hardend ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] parámetro facet.date.end ||| [function_name_2] [function_name_1]	count=1
arg_pair	de ||| string $charset	count=1
function_name	de ||| memory	count=1
function_name	[function_name_1] los parámetros ||| [function_name_2] [function_name_1]	count=1
arg_pair	con el método y ||| string $data string $method	count=1
return	bits de un ||| int	count=1
function_name	blanco ||| ltrim	count=1
function	la longitud [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	relation ||| resource $relation string $name	count=1
return	establece variables en el ||| void	count=1
function_name	el parámetro rows ||| pg copy	count=1
function_name	obtiene el primer atributo ||| ldap first attribute	count=1
function_name	con [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	segundos desde la época ||| function	count=1
function_name	de cada byte-value 0..255 ||| chars	count=1
function_name	de pincel para ||| imagesetbrush	count=1
arg_pair	esta función prepara ||| resource $id string $type	count=1
arg_pair	del ||| string $body	count=1
namespace	se le ha ||| mongocursor	count=1
function_name	color [function_name_2] ||| [function_name_2] [function_name_1]	count=12
arg_pair	una rutina de ||| string $alias	count=1
return	pero ||| resource	count=1
function_name	tipos de firmas soportados ||| supported signatures	count=1
function_name	que la búsqueda finalice ||| set time allowed	count=1
function_name	crea ||| create	count=34
arg_pair	0600 en ||| string $prefix	count=1
arg_pair	direcciones servicios ||| zmqsocket $frontend	count=1
arg_pair	el conjunto óptimo de ||| int $scope int $nullable	count=1
function_name	intenta borrar un ||| win32 delete	count=1
function_name	nuevo par clave privada ||| pkey new	count=1
function_name	la extensión de ||| image type to extension	count=1
namespace	la solicitud ||| function	count=1
function_name	que la clave ||| get multi by key	count=1
arg_pair	devuelve str con todos ||| string $encoding	count=2
function_name	crea un [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	en la ||| function	count=1
function_name	solicitada clase glo ||| glo	count=1
function_name	de color especificado como ||| color	count=1
function_name	establece el valor para ||| set value	count=1
function_name	de ||| data	count=5
function_name	fuerzas de los ciclos ||| gc collect cycles	count=1
namespace	diccionario ||| function	count=1
return	comporta de forma ||| resource	count=1
function_name	excepción de tipo ||| set	count=1
arg_pair	assoc_array en valores adecuados ||| int $options	count=1
arg_pair	opcionalmente incrusta sus ||| bool $embed	count=1
function_name	función crea una ||| create processing	count=1
function_name	fragmentador de expresiones regulares ||| set highlight regex	count=1
function_name	xhprof de ||| xhprof	count=1
arg_pair	comparar value1 ||| mixed $value2	count=1
arg_pair	con un ||| int $channel	count=1
function_name	calcula la intersección de ||| array uintersect assoc	count=1
function_name	devolverá la identificación ||| creator id	count=1
function_name	devuelve la representación ||| to string	count=1
namespace	devuelve un mensaje ||| function	count=1
function_name	campo en ||| field match	count=1
function_name	[function_name_1] porción ||| [function_name_2] [function_name_1]	count=12
function_name	la descripción ||| cairo ps level to	count=1
namespace	espacios ||| function	count=1
namespace	buscarán los archivos ||| function	count=1
function_name	petición de recodificación ||| recode file	count=1
function_name	la fila [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	un ||| function	count=8
return	método ||| bool	count=1
namespace	de la [namespace] ||| [namespace]	count=9
arg_pair	cualquier otra llamada ||| mixed $data	count=1
return	que consista en nombres ||| bool	count=1
function_name	contraseña del ||| oci password change	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] bit [function_name_2]	count=3
function_name	el de ||| set	count=1
arg_pair	variable_key y libera la ||| int $variable_key	count=1
namespace	sesión ||| sessionhandler	count=1
return	objeto con propiedades de ||| object	count=1
function_name	cadena string verticalmente ||| imagestringup	count=1
namespace	excepto [namespace] ||| [namespace]	count=2
function_name	acceder al semáforo de ||| sem	count=1
function_name	[function_name_1] una representación ||| mongodate datetime [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] nombre unicode ||| [function_name_2] [function_name_1]	count=1
return	posición ||| int	count=1
namespace	la frecuencia en la ||| solrquery	count=1
function_name	la zona horaria ||| geoip time zone by country and	count=1
function_name	contornea el trazado actual ||| stroke	count=1
function_name	este método no afecta ||| count	count=1
function_name	entonces en lugar ||| set using exceptions	count=1
arg_pair	string dado por ||| string $key	count=1
function_name	siguiente petición xpath ||| xpath	count=1
arg_pair	ruta en la copia ||| string $path bool $recursive	count=1
namespace	formato string ||| serializable	count=1
function_name	la parte [function_name] usada en ||| set [function_name]	count=1
function_name	servidores ||| servers	count=1
function_name	establece el atributo tipo ||| type	count=1
function_name	emitir advertencias y devolver ||| set using	count=1
function_name	la descripción de ||| cairo surface set device offset	count=1
arg_pair	dado por field ||| mixed $field	count=2
arg_pair	posición indicada. ||| int $top	count=1
return	la instancia de ||| yaf_application	count=1
function_name	información ||| info	count=11
return	archivo asociado a una ||| string	count=1
arg_pair	una expresión regular multibyte ||| string $pattern	count=1
function_name	describe ||| result message	count=1
namespace	o directorio especificado ||| function	count=1
arg_pair	crea un ||| int $height	count=1
function_name	el contexto ||| context	count=1
function_name	true si ||| is	count=1
return	y ||| float	count=1
arg_pair	indicando que ocurrió un ||| string $actor	count=1
function_name	con estadísticas del ||| stats	count=1
namespace	llena la ||| harupage	count=1
arg_pair	comporta de forma ||| string $password string $charset	count=1
function_name	devuelve el valor de ||| yaz get	count=1
function_name	nuevo archivo pdf usando ||| pdf open file	count=1
function_name	de ||| default namespace	count=2
function_name	para que ||| add	count=1
function_name	modo autoconsigna del ||| autocommit	count=1
namespace	el tipo o false ||| function	count=1
return	copia binaria dada en ||| bool	count=1
arg_pair	esta función permite enviar ||| string $message string $additional_headers	count=1
arg_pair	de forma parecida a ||| string $charset	count=1
namespace	cuando se dibuja ||| function	count=1
function_name	mime ||| image type to mime	count=1
namespace	de dimensiones que contiene ||| function	count=1
return	un url ||| resource	count=1
function_name	devuelve un valor ||| mysqli get	count=1
namespace	asignados con oci_new_descriptor() ||| oci-lob	count=1
function_name	rellenado por la izquierda ||| str pad	count=1
namespace	código de error ||| function	count=1
namespace	las palabras que no ||| solrquery	count=1
function_name	de tendencias de cada ||| fann get bias array	count=1
namespace	número ||| solrquery	count=1
function_name	las propiedades asociadas ||| properties	count=1
arg_pair	caracteres desde un fichero ||| resource $font_index	count=1
function_name	establece la apariencia ||| fdf set	count=1
namespace	función definida por ||| function	count=1
namespace	una clase ||| reflectionclass	count=1
namespace	devuelve la imagen ||| imagick	count=1
return	todos los servidores de ||| bool	count=1
function_name	longitud máxima ||| len	count=1
arg_pair	domain actual ||| string $domain	count=1
function_name	máximo ||| mlt max	count=1
function	[function_name_1] el modo ||| [arg_pair_2] [function_name_1]	count=4
function	escapa un [arg_pair_2] ||| [function_name_1] bytea [arg_pair_2]	count=1
function_name	recodificación ||| recode file	count=2
function_name	apuntador de filas interno ||| seek	count=1
return	una cadena de ||| string	count=1
function_name	enlace simbólico ||| link	count=1
function_name	de curl manteniendo ||| curl	count=1
function_name	la lista de dsn ||| odbc data	count=1
function_name	inicial de subject ||| strspn	count=1
function_name	la función geoip_db_avail() devuelve ||| db avail	count=1
function_name	devuelve la imagen ||| image channels	count=1
function_name	de memcached::prepend() ||| prepend by	count=1
function_name	subsiguiente fichero de esquema ||| add types	count=1
function_name	al proceso actual ||| posix setgid	count=2
function_name	nombre del servidor anfitrión ||| mysql get host	count=1
arg_pair	a b donde ||| gmp $b	count=1
arg_pair	fichero a ||| string $filename bool $use_include_path	count=1
arg_pair	de la ||| int $type	count=1
function_name	número de registros ||| px numrecords	count=1
arg_pair	extendida para usarla después ||| string $baseclass string $extendedclass	count=1
function_name	establece la opción ||| set include path	count=1
function_name	limpia ||| clear body	count=2
function_name	limpia los ||| fann clear	count=1
namespace	base ||| harufont	count=1
function_name	la descripción de la ||| cairo image surface	count=1
function	[function_name_1] una colección ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	clúster de grafemas ||| int $extract_type	count=1
function_name	la representación de un ||| serialize	count=1
arg_pair	un intérprete ||| resource $parser	count=1
function	crea [arg_pair_2] ||| [function_name_1] outline [arg_pair_2]	count=1
function_name	crea un [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	xml a [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	sybase_connect() ||| string $charset	count=1
function_name	consulta única ||| cubrid query	count=1
function_name	una comprobación de indices ||| udiff assoc	count=1
arg_pair	fann_get_cascade_output_stagnation_epochs() durante el ||| int $max_neurons int $neurons_between_reports	count=1
function_name	la escala de la ||| field scale	count=1
namespace	la versión de ||| function	count=1
arg_pair	aclarando y ||| int $width	count=1
function_name	de notación notation para ||| set notation decl	count=1
function_name	ideal ||| regex slop	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cand [function_name_2]	count=24
function_name	método devuelve [function_name_2] ||| [function_name_2] [function_name_1]	count=16
return	y extrae ||| array	count=1
namespace	externos [namespace] ||| [namespace]	count=1
namespace	renderización de ||| gmagick	count=1
function_name	obtiene el [function_name_2] ||| [function_name_1] image channel [function_name_2]	count=2
function_name	función devolverá la lista ||| data source	count=1
arg_pair	message al buzón especificado ||| string $message	count=1
function_name	tantos documentos ||| doc	count=1
function_name	codificado mediante uuencode ||| mailparse uudecode	count=1
function_name	servidores de trabajos que ||| servers	count=1
function_name	este serán ||| min doc frequency	count=1
function_name	el identificador del cliente ||| client identifier	count=1
arg_pair	de intermediarios de direcciones ||| zmqsocket $frontend	count=1
function_name	devuelve los datos asociados ||| offset get	count=1
function_name	la base ||| start db	count=1
function	tabla y [arg_pair_2] ||| [function_name_1] resource $pdfdoc [arg_pair_2]	count=2
namespace	versión serializada del hash ||| quickhashinthash	count=1
arg_pair	imágenes de ||| resource $image	count=1
return	cambia las ||| bool	count=1
function_name	descenso vertical de ||| descent	count=1
function_name	la extensión phar ||| valid phar	count=1
function_name	palabras ||| set mlt min doc frequency	count=2
function_name	de reintentos ||| sybase deadlock retry count	count=1
arg_pair	de fichero fd ||| int $offset	count=1
function_name	en la [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	del resultado frontbase ||| fbsql data	count=1
arg_pair	en subject coincidencias ||| mixed $subject int $limit	count=1
namespace	de petición http en ||| function	count=1
function_name	carga un segundo ||| add types	count=1
function_name	con un [function_name] píxeles ||| [function_name]	count=1
function_name	el copyright de la ||| copyright	count=1
function_name	el prefijo de faceta ||| facet prefix	count=1
return	está en activado por ||| bool	count=1
return	actual donde ||| string	count=1
arg_pair	dn ||| string $dn	count=2
arg_pair	de memcached::getmulti() con ||| string $cas_tokens	count=1
function_name	acción especificada ||| gupnp service action	count=2
return	fichero dentro de un ||| int	count=1
namespace	conjunto existente en ||| quickhashintset	count=1
function_name	la publicación ||| fdf get ap	count=1
return	interno a la ||| void	count=1
arg_pair	un año dado ||| int $method	count=1
function_name	lee [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	un array de ||| resource $statement	count=1
return	proceso abierto mediante ||| array	count=1
function_name	pspell_save_wordlist() guardará los pares ||| repl	count=1
function_name	esquema solicitado ||| schema	count=1
function	la escala [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	el mime ||| mime	count=1
function_name	archivo paradox y libera ||| px	count=1
arg_pair	de parada empleada durante ||| resource $ann int $stop_function	count=1
return	datos que ||| int	count=1
function_name	printable ||| printable	count=1
arg_pair	devuelve un string con ||| string $str	count=1
function_name	un namespace es declarado ||| set start namespace decl	count=1
function_name	cabo el formateo textline ||| textline	count=1
function_name	la frecuencia en ||| mlt min doc	count=1
function	[function_name_1] [arg_pair_2] de ||| [function_name_1] [arg_pair_2]	count=2
function_name	zona horaria correspondiente ||| time zone	count=1
namespace	claves x e y ||| gmagick	count=1
function	[function_name_1] ya ||| [function_name_1] string $progid [arg_pair_2]	count=4
function_name	cambia el directorio ||| chdir	count=1
arg_pair	por form ||| resource $form array $components	count=1
arg_pair	la de memcached::getmulti() ||| string $cas_tokens int $flags	count=1
namespace	bloqueo o ||| function	count=1
function_name	elementos invertido ||| reverse	count=1
namespace	captura una ventana o ||| function	count=1
function_name	algoritmo especificado si devuelve ||| get supported	count=1
arg_pair	alimentarlo a una ||| array $input_vector	count=1
arg_pair	utilizando el ||| string $str	count=1
return	número es primo ||| int	count=1
function_name	el copyright ||| getcopyright	count=1
function_name	la fecha dada ||| date parse	count=1
arg_pair	datos interno hacia delante ||| int $result_type	count=1
arg_pair	assoc_array en valores ||| array $assoc_array int $options	count=1
function_name	de datos de geoip ||| geoip	count=2
function_name	un [function_name] ||| ibase [function_name]	count=3
arg_pair	hasta maxlength bytes ||| int $maxlength	count=1
arg_pair	una implementación de la ||| string $value	count=1
function_name	[function_name_1] insert ||| [function_name_1] [function_name_2]	count=2
arg_pair	de direcciones servicios ||| zmqsocket $frontend zmqsocket $backend	count=1
arg_pair	a sybase_connect() con ||| string $servername	count=1
function_name	la base de ||| db	count=3
arg_pair	de una ||| string $filename	count=4
arg_pair	valor en el índice ||| mixed $index	count=1
function_name	sido ||| types	count=1
namespace	servicios colas o ||| zmqdevice	count=1
return	sobre [return] objeto ||| [return]	count=1
function_name	el factor de escala ||| ps scale	count=1
namespace	creado con el ||| sdo_das_xml	count=1
function_name	sobre un proceso abierto ||| proc get status	count=1
function_name	punto blanco de ||| white point	count=1
function_name	flujo o ||| stream socket client	count=1
namespace	indica si la tarea ||| gearmantask	count=1
arg_pair	flag a las ||| string $flag int $options	count=1
namespace	especificado que está ||| function	count=1
namespace	de gettext() ||| function	count=1
function_name	devuelve el modo ||| get	count=1
function_name	los hijos ||| children	count=2
function_name	acción javascript al ||| fdf set javascript action	count=1
function_name	o filtro ||| add kernel	count=1
arg_pair	dn específico ||| string $dn	count=1
namespace	de caracteres de cada ||| function	count=1
function_name	de opendir readdir ||| readdir	count=1
function_name	la que las ||| min	count=1
arg_pair	servicios colas o cualquier ||| zmqsocket $backend	count=1
function_name	de neuronas de entrada ||| input	count=1
arg_pair	un mensaje de error ||| string $message	count=1
function_name	es ||| gmp prob	count=1
arg_pair	de php a un ||| int $data_type int $length	count=1
function_name	devuelve [function_name_2] ||| [function_name_1] green [function_name_2]	count=1
function_name	enlace [function_name] tiene ||| [function_name]	count=1
namespace	a el búfer ||| splfileobject	count=1
namespace	el ||| arrayiterator	count=2
return	seguimiento tailable ||| mongocursor	count=1
return	un campo de ||| int	count=2
namespace	objeto domnodelist ||| domnodelist	count=1
function_name	límite de fallo ||| fail limit	count=1
function_name	una ||| using	count=1
function_name	disponible la lista de ||| open memory image	count=1
function_name	color especificado como ||| color	count=1
namespace	varita de ||| imagickpixel	count=1
return	de la posición ||| int	count=1
function_name	un proceso ||| proc get status	count=1
arg_pair	día especificado como timestamp ||| int $format	count=2
function_name	añade rutas definidas ||| add	count=1
arg_pair	función cubrid_set_query_timeout() se usa ||| resource $req_identifier	count=1
function_name	el procesamiento ||| progress monitor	count=1
function_name	cualesquiera bytes ||| fgetss	count=1
function_name	si el objeto ||| get active object	count=1
arg_pair	es primo ||| gmp $a	count=1
function_name	secuencia de mensaje ||| imap msgno	count=1
function_name	conocido dado ||| aliases	count=1
function_name	la distancia de ||| get	count=1
arg_pair	un identificador ||| resource $result_id	count=1
function_name	una excepción de tipo ||| set using	count=1
function_name	campo ||| field length	count=4
arg_pair	la base de ||| mysqlnd_connection $connection string $database	count=1
function_name	sybase asociado al identificador ||| sybase data	count=1
function_name	menos tantos documentos como ||| mlt min doc	count=1
function_name	de cada capa de ||| get layer array	count=1
function_name	de widrow + nguyen ||| weights	count=1
function_name	borra ||| delete file	count=2
function_name	devuelto por el puntero ||| bzerrstr	count=1
function_name	frase de consulta en ||| phrase	count=1
function_name	[function_name_1] campos morelikethis ||| [function_name_1] [function_name_2]	count=1
function_name	los modificadores ||| modifiers	count=2
arg_pair	en el parámetro ||| string $str	count=1
namespace	trabajo ||| gearmanclient	count=1
arg_pair	una función o clase ||| string $filename int $flags	count=1
namespace	nombre dado por ||| function	count=1
function_name	al comando ||| tailable	count=1
arg_pair	str1 en ||| string $str1	count=1
function_name	buzón actual ||| imap	count=1
function_name	de grises con un ||| embossimage	count=1
arg_pair	especificada por flag a ||| string $flag int $options	count=1
function_name	establece ||| set quota	count=2
function_name	explícitas ||| pdf	count=1
return	el tipo de ||| string	count=1
return	de datos desde una ||| string	count=1
arg_pair	un dn ||| resource $link_identifier string $dn	count=2
function_name	tamaño [function_name] paso ||| [function_name] rprop increase	count=1
return	de ||| yaf_application	count=1
function_name	a todos ||| ping	count=1
arg_pair	establece el parámetro flatness ||| resource $pdfdoc float $flatness	count=1
function_name	cualquier abstracción que se ||| construct	count=1
function_name	libera un ||| oci free	count=1
arg_pair	de una base ||| string $database resource $link_identifier	count=1
function_name	establece ||| set parameter	count=2
return	de conjunto ||| sqlite3result	count=1
function_name	certificado ||| sign	count=1
return	caracteres del inicio de ||| string	count=1
namespace	que los índices del ||| function	count=1
function_name	peso de sarprop ||| sarprop weight	count=3
function_name	entidades ||| libxml set external entity loader	count=2
return	obtiene la distancia ||| int	count=1
function_name	función cubrid_drop() se usa ||| cubrid drop	count=1
namespace	el motivo por ||| function	count=2
function_name	analiza una ||| parse url	count=1
function_name	datos del apuntador ||| mailparse	count=1
function_name	pausa ||| win32 pause	count=1
namespace	recupera el objeto ||| yaf_controller_abstract	count=1
function_name	espacio de nombres especificado ||| is	count=1
return	de ||| mongocursor	count=3
return	espera ||| bool	count=1
function_name	la opuesta a htmlspecialchars() ||| htmlspecialchars decode	count=1
function_name	bitrate ||| bitrate	count=1
arg_pair	objeto the sdo_das_xml_document en ||| sdo_xmldocument $xdoc int $indent	count=1
function_name	crea una ||| create	count=9
namespace	comporta de forma parecida ||| function	count=1
namespace	en el array judy ||| judy	count=2
function_name	su nombre ||| from name	count=1
function_name	adjunta ||| add kernel	count=2
function_name	por debajo de ||| ps continue	count=1
arg_pair	ruta que se especifique ||| string $destination mixed $entries	count=1
function	[function_name_1] un resultado ||| [function_name_1] [arg_pair_2]	count=3
function_name	trabajo ||| job handle	count=1
arg_pair	columna especificada del ||| resource $stmt mixed $column	count=1
return	el componente entero y ||| array	count=1
namespace	encuentra ||| function	count=1
function_name	la precisión ||| db2 field precision	count=1
namespace	cadena que especifica ||| gmagickdraw	count=1
arg_pair	carga una imagen ||| string $filename	count=1
namespace	imagen tiff o ||| function	count=1
arg_pair	nuevo par ||| mixed $value	count=1
function_name	comporta como el carp::croak ||| croak	count=1
return	en la solicitud ||| array	count=1
function_name	para que ||| set by key	count=2
function_name	usado [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] el comentario ||| [function_name_2] [function_name_1]	count=2
function_name	búsqueda finalice ||| set time allowed	count=1
namespace	letras ||| harufont	count=1
return	actuales en ||| bool	count=1
function_name	escala las entradas de ||| scale input	count=1
arg_pair	una imagen reconstruida y ||| int $metric	count=1
namespace	una imagen mientras ||| gmagick	count=1
function_name	el manejador de trabajo ||| job	count=1
function_name	analiza datos ||| mb parse str	count=1
function	[function_name_1] una nueva ||| [arg_pair_2] [function_name_1]	count=11
return	claves x e y ||| array	count=1
return	el ||| mixed	count=1
arg_pair	yaz_record() inspecciona un ||| resource $id	count=1
function_name	establece [function_name_2] ||| [function_name_2] [function_name_1]	count=67
return	apuntador ||| array	count=1
arg_pair	dispositivos de ømq ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	entidades ||| entity loader	count=2
function_name	la prueba probabilística ||| gmp prob prime	count=1
function_name	de i-nodo de el ||| inode	count=1
function_name	estableciendo zend.enable_gc a ||| enable	count=1
function_name	de todas [function_name] ||| get [function_name]	count=1
function_name	[function_name_1] rra ||| [function_name_2] [function_name_1]	count=1
namespace	los objetos añadidos a ||| splobjectstorage	count=1
function_name	crea una miniatura ||| thumbnail	count=1
return	para el ||| string	count=1
arg_pair	a ||| string $string	count=1
namespace	que aparecen ||| function	count=1
function_name	tipo id ||| set id	count=2
arg_pair	con el ||| string $name	count=1
function_name	lo ||| mlt min doc frequency	count=2
function_name	petción de recodificación ||| recode	count=1
arg_pair	estructura de ||| int $num_data int $num_input	count=1
function_name	acepta uno ||| number format	count=1
function_name	de llamarla ||| odbc data	count=1
function_name	de namespace ||| xml set end namespace	count=1
function_name	obtiene si está disponible ||| get available	count=1
arg_pair	los bordes ||| int $width int $height	count=1
arg_pair	pajar ||| string $haystack string $needle	count=2
function_name	[function_name_1] [function_name_2] ||| function resource [function_name_2] [function_name_1]	count=3
arg_pair	de datos ||| resource $conn_identifier	count=1
namespace	al socket descrito por ||| function	count=1
arg_pair	pregunta sobre la ||| int $num string $keyword	count=1
return	al nombre ||| void	count=1
function_name	[function_name_1] a devolver ||| [function_name_2] [function_name_1]	count=16
function_name	de atajo ||| shortcut array	count=1
function_name	el límite del ||| resource limit	count=1
function	representación json [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	un array asociativo que ||| function	count=1
arg_pair	propiedades correspondientes a ||| int $row	count=1
namespace	correspondiente a ||| function	count=2
arg_pair	como una matriz ||| string $fieldname	count=1
function_name	resultado frontbase asociado ||| fbsql data	count=1
arg_pair	la lista ||| resource $psdoc	count=1
arg_pair	memcache::connect() con la diferencia ||| string $host	count=1
arg_pair	con nombre name al ||| string $name	count=1
function_name	las capas de mensaje ||| construct	count=1
return	utilizando el ||| string	count=1
function_name	la siguiente fila del ||| fetch	count=1
function_name	del servicio y las ||| start service	count=1
function_name	de grupos ||| groups	count=1
function_name	manteniendo las mismas preferencias ||| handle	count=1
namespace	string utilizando ||| function	count=1
arg_pair	una ||| string $filename	count=5
function_name	encuentre un error ||| set using exceptions	count=1
arg_pair	input identificado por ||| array $input	count=1
namespace	carga ||| sdo_das_xml	count=1
arg_pair	al dn ||| string $dn	count=1
function_name	descripción ||| cairo surface write to png	count=1
namespace	a popen() ||| function	count=1
namespace	fstream o ||| function	count=1
function_name	quickprop ||| get quickprop	count=1
function_name	la categoría de la ||| flatness	count=1
function_name	la frecuencia en la ||| mlt min doc frequency	count=1
namespace	las solicitudes ||| oauth	count=1
function_name	devuelve un ||| addcslashes	count=1
function_name	archivo codificado ||| uudecode	count=1
function_name	frecuencia en la ||| set mlt min doc frequency	count=1
function_name	establece la posición para ||| pdf set	count=1
namespace	un archivo phar utilizando ||| phar	count=1
function_name	y escribe los datos ||| write temporary	count=1
return	filas que se van ||| solrquery	count=1
function_name	pdf usando el ||| pdf	count=1
function_name	memcached::prepend() ||| prepend	count=1
function_name	cursor asociado al ||| seek	count=1
function_name	más opciones de ||| set option	count=1
function	parte coincidente [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	forma parecida ||| string $password	count=1
return	especifica la ||| string	count=1
namespace	de error dado ||| function	count=1
function_name	de la imagen ||| raiseimage	count=1
function_name	una definida por ||| create function	count=1
namespace	el puntero dado ||| function	count=1
arg_pair	un proxy y ||| resource $proxy	count=1
arg_pair	un carácter unicode por ||| int $namechoice	count=1
arg_pair	ømq pueden ||| zmqsocket $frontend zmqsocket $backend	count=1
function_name	memcached::prepend() con la excepción ||| prepend by key	count=1
function_name	[function_name_1] factor ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] un ||| [function_name_1] record [arg_pair_2]	count=1
arg_pair	idéntica ||| resource $handle	count=1
arg_pair	que se ||| zmqsocket $frontend	count=1
function_name	el argumento ||| set	count=1
function	nuevo objeto [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	abre [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	respuesta al ||| void	count=1
function_name	última conexión usada desde ||| last	count=1
function_name	iterador a la posición ||| iterator	count=1
return	la prueba probabilística ||| int	count=1
function_name	descripción de ||| cairo matrix rotate	count=1
function_name	fecha ||| date parse from format	count=2
arg_pair	actividad en conexiones curl_multi ||| float $timeout	count=1
namespace	salida de ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] facet [function_name_2]	count=4
arg_pair	el parámetro charlist ||| string $str string $charlist	count=1
function_name	documentos como ||| set mlt min doc frequency	count=1
function_name	que [function_name] ||| [function_name]	count=1
function_name	la representación que devuelve ||| to	count=1
namespace	algoritmo estándar basado en ||| function	count=1
function_name	e/s del disco ||| eio readahead	count=1
return	texto en la posición ||| bool	count=1
function_name	encuentra disponible la ||| memory	count=1
arg_pair	esta función devuelve un ||| resource $result	count=1
function_name	la base de datos ||| select db	count=1
return	entonces en lugar de ||| void	count=1
function_name	es el espacio ||| is	count=1
function_name	de cada capa ||| layer array	count=1
arg_pair	al objeto pdostatement ||| int $cursor_orientation	count=1
namespace	de usar yaf_view_simple::assign() ||| yaf_view_simple	count=1
function_name	que se defina ||| construct	count=1
arg_pair	especificados por msglist ||| resource $imap_stream string $msglist	count=1
function_name	correo correctamente formateada ||| write address	count=1
arg_pair	especifica un ||| string $fieldname	count=1
function_name	el de estilo de ||| set slide show	count=1
arg_pair	de caracteres desde un ||| resource $font_index	count=1
arg_pair	genera un mensaje log ||| string $message	count=1
namespace	compatibilidad que afecta ||| function	count=1
return	uno dos o ||| string	count=1
arg_pair	una base ||| string $schema	count=1
function_name	copia de ||| copy	count=1
function_name	la string entregada ||| ctype upper	count=1
function_name	transformación actual de la ||| trans matrix	count=1
function_name	elimina [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
arg_pair	datos disponible como un ||| int $row int $offset	count=1
return	se defina sobre las ||| zmqsocket	count=1
function_name	establecer el ||| cubrid set	count=1
namespace	cuando la biblioteca ||| rarexception	count=1
arg_pair	filtros adjuntos ||| mixed $params	count=2
namespace	las mismas reglas que ||| function	count=1
arg_pair	punto actual a x ||| float $y	count=1
arg_pair	el sistema ||| string $str	count=1
function_name	se usa ||| cubrid	count=7
function_name	con el [function_name] del servidor ||| get [function_name]	count=1
function_name	descripción de ||| cairo pattern get radial	count=1
function_name	descripción de la ||| cairo ps level to string	count=1
function_name	[function_name_1] el ancho ||| [function_name_2] [function_name_1]	count=2
function_name	colores de primer plano ||| set	count=1
function	[function_name_1] a ||| [arg_pair_2] [function_name_1]	count=1
return	un servicio ||| int	count=1
function	la imagen [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	las opciones ||| array	count=1
function_name	del borde de ||| border	count=1
arg_pair	una nueva copia de ||| bool $backup_original_files	count=1
namespace	valores usando ||| arrayiterator	count=1
function_name	o textura de relleno ||| polygon	count=1
arg_pair	en el servidor ftp ||| resource $ftp_stream	count=1
return	el proveedor oauth ||| bool	count=1
function_name	desde la csr dada ||| csr	count=1
function_name	de estancamiento ||| stagnation	count=3
function_name	envía un warning ||| warning	count=1
arg_pair	esta es una ||| string $name	count=1
namespace	de retorno que ||| function	count=1
function_name	escala ||| db2 field scale	count=1
function_name	un valor especial ||| using exceptions	count=1
function_name	de control ||| gupnp control point callback	count=1
function_name	valor especial indicando ||| set using	count=1
function_name	error de la ||| error	count=1
namespace	un efecto ||| gmagick	count=1
function_name	el factor [function_name_2] ||| [function_name_2] [function_name_1]	count=28
arg_pair	es una [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	los cálculos de todas ||| compat	count=1
function_name	tangente ||| trader tan	count=1
function_name	ascenso vertical de la ||| ascent	count=1
arg_pair	abierto ||| resource $filehandle	count=1
function	[function_name_1] nombre ||| [function_name_1] [arg_pair_2]	count=2
namespace	número ||| sqlite3	count=1
function_name	durante un entrenamiento quickprop ||| fann get quickprop	count=1
function_name	si una excepción ||| exception handler	count=1
return	a el ||| int	count=1
function_name	el acl para ||| getacl	count=1
function_name	cookie ||| get cookie	count=1
function_name	tipo de columna ||| type	count=1
function_name	elimina uno [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	está al final ||| feof	count=1
function_name	de sintaxis lint pelusa ||| runkit lint	count=1
function_name	más reciente ||| yp	count=1
namespace	obtiene la distancia de ||| harufont	count=1
function_name	resultados [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	factor de aumento es ||| factor	count=1
return	los índice del array ||| int	count=1
function_name	formulario ||| newt form	count=1
function_name	del campo a devolver ||| alternate field length	count=2
function_name	la definición de color ||| ncurses color content	count=1
function_name	[function_name_1] basándose ||| [function_name_2] [function_name_1]	count=1
function_name	de espera ||| busy timeout	count=1
function_name	sobre distribución de lecturas ||| set slave	count=1
function_name	respuesta actual ||| get response	count=1
arg_pair	el de ||| int $type	count=1
function	token y [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	forzar ||| cast	count=1
return	obtiene la cadena ||| string	count=1
function	de pedido [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	método gearmanclient::do() es ||| do	count=1
function_name	glifo ||| ps symbol	count=3
function_name	objeto blob ||| ifx free blob	count=1
arg_pair	el uri ||| string $uri	count=1
return	en datos ||| bool	count=2
arg_pair	devuelve str ||| string $str string $encoding	count=2
function_name	especificado ||| default namespace	count=2
function_name	unrar encuentre un ||| set using	count=1
function_name	pspell_save_wordlist() guardará los pares ||| pspell config save repl	count=1
function_name	patrón basado ||| ps shading pattern	count=2
function_name	la línea de unión ||| set line join	count=1
namespace	carácter ||| function	count=1
function_name	destruir ||| unset	count=1
function_name	true si el ||| mcrypt module is	count=1
namespace	que aparecen en ||| function	count=1
function_name	la configuración ||| tidy config	count=1
function_name	del disco ||| from file	count=2
function_name	un socket creado ||| socket	count=1
arg_pair	start hacia ||| int $start	count=2
function_name	que identifican de ||| odbc specialcolumns	count=1
function_name	asociativo de dos dimensiones ||| extended	count=1
arg_pair	es una manera ||| string $name	count=1
arg_pair	parámetro data ||| int $length	count=1
namespace	número de secuencia ||| function	count=1
function_name	de gearman ||| return code	count=2
namespace	socket. -- zguide ||| zmqdevice	count=1
return	de petición http ||| array	count=1
function_name	la extensión de ||| type to extension	count=1
arg_pair	de str ||| string $str	count=2
namespace	activa o desactiva el ||| function	count=1
function_name	producto de ||| product	count=1
function_name	entrenamiento continuar sin ||| fann get	count=1
function_name	exe [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	función mssql_free_statement() ||| mssql free statement	count=1
function_name	[function_name_1] con estadísticas ||| [function_name_2] [function_name_1]	count=3
function_name	convertidos a mayúsculas ||| mb strtoupper	count=1
function_name	desde ||| build from	count=1
arg_pair	cuenta el número de ||| int $index_end	count=1
function_name	la cadena de instancia ||| string	count=1
function_name	filas eliminadas insertadas ||| num rows	count=1
function_name	de conexiones [function_name_2] ||| [function_name_2] get last used [function_name_1]	count=2
function_name	imagen de similitud tal ||| sub image	count=1
function_name	tamaño actual ||| zip entry filesize	count=1
function_name	einer mime kopfzeile en ||| iconv mime encode	count=1
function_name	caracter de escape ||| escape	count=1
function_name	a unicode ||| get unicode	count=1
function_name	de depuración ||| server dump debug	count=1
return	posición actual del ||| bool	count=1
function_name	[function_name] y recortando ||| crop thumbnail [function_name]	count=3
function_name	la biblioteca ||| set	count=1
function_name	de registro están habilitados ||| get level	count=1
namespace	excepción lo ||| exception	count=1
function_name	[function_name_1] la respuesta ||| [function_name_2] [function_name_1]	count=1
arg_pair	opción de contexto log_cmd_update ||| array $updateoptions	count=1
function_name	de la tupla previa ||| prev	count=1
function	[function_name_1] name0 es ||| [arg_pair_2] [function_name_1]	count=1
function_name	calcula [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	formato csv a una ||| string $delimiter string $enclosure	count=1
function_name	información sobre dicho hash ||| get info	count=1
function_name	salir con eventbase::stop() ||| got stop	count=1
function_name	el carp::cluck de perl ||| apd clunk	count=1
function_name	prioridad de los ||| base priority init	count=1
return	texto en ||| bool	count=1
function_name	los parámetros y ||| params	count=1
function_name	las colecciones de ||| collection info	count=1
