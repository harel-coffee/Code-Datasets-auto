APCIterator mixed current	retourne lélément courant en cas de succès ou false si aucun élément supplémentaire nexiste ou en cas déchec
APCIterator mixed current	r&eacute;cup&egrave;re l'&eacute;l&eacute;ment en cours
APCIterator int get Total Count	le nombre total déléments
APCIterator int get Total Count	r&eacute;cup&egrave;re le nombre total d'&eacute;l&eacute;ments
APCIterator string key	retourne la clé en cas de succès ou false si échec
APCIterator string key	r&eacute;cup&egrave;re la cl&eacute; de l'it&eacute;rateur
APCIterator void next	d&eacute;place le pointeur vers l'&eacute;l&eacute;ment suivant
APCIterator void rewind	rembobine l'it&eacute;rateur
APCIterator void valid	v&eacute;rifie si la position courante de l'it&eacute;rateur est valide
AppendIterator append $iterator	litérateur à ajouter
AppendIterator void append Iterator $iterator	ajoute un it&eacute;rateur &agrave; la fin
AppendIterator void get Array Iterator	r&eacute;cup&egrave;re le arrayiterator
AppendIterator Iterator get Inner Iterator	litérateur interne courant ou null sil ny en a pas
AppendIterator Iterator get Inner Iterator	lit l'it&eacute;rateur interne
AppendIterator int get Iterator Index	retourne un entier qui représente lindex commençant à 0 de litérateur courant
AppendIterator int get Iterator Index	lit l'index d'un it&eacute;rateur
AppendIterator scalar key	la clé courante si cest possible et null sinon
AppendIterator scalar key	lit la cl&eacute; courante
AppendIterator void rewind	remet l'it&eacute;rateur au d&eacute;but
AppendIterator bool valid	retourne true si litérateur courant est valide false sinon
AppendIterator bool valid	v&eacute;rifie la validit&eacute; de l'&eacute;l&eacute;ment courant
ArrayAccess offset Exists $offset	une position à vérifier
ArrayAccess boolean offset Exists	cette fonction retourne true en cas de succès ou false si une erreur survient
ArrayAccess boolean offset Exists mixed $offset	indique si une position existe dans un tableau
ArrayAccess offset Get $offset	la position à lire
ArrayAccess mixed offset Get	peut retourner nimporte quel type de valeur
ArrayAccess mixed offset Get mixed $offset	position &agrave; lire
ArrayAccess offset Set $offset	la position à laquelle assigner une valeur
ArrayAccess offset Set $value	la valeur à assigner
ArrayAccess void offset Set mixed $offset mixed $value	assigne une valeur &agrave; une position donn&eacute;e
ArrayIterator append $value	la valeur à ajouter
ArrayIterator void append mixed $value	ajoute un &eacute;l&eacute;ment
ArrayIterator int count	le nombre déléments ou dattributs publics du array associatif ou de l object respectivement
ArrayIterator int count	compte les &eacute;l&eacute;ments
ArrayIterator mixed current	lentrée courante du tableau
ArrayIterator mixed current	retourne l'entr&eacute;e courante du tableau
ArrayIterator void get Flags	r&eacute;cup&egrave;re un comportement
ArrayIterator mixed key	la clé courante du tableau
ArrayIterator mixed key	retourne la cl&eacute; courante du tableau
ArrayIterator void ksort	trie un tableau par les cl&eacute;s
ArrayIterator void natcasesort	trie naturellement un tableau en ne tenant pas compte de la casse
ArrayIterator offset Exists $index	la position à vérifier
ArrayIterator void offset Exists string $index	v&eacute;rifie si une position existe
ArrayIterator offset Set $newval	la nouvelle valeur à stocker à lindex donné
ArrayIterator offset Set $index	lindex à définir
ArrayIterator void offset Set string $index string $newval	d&eacute;finit la valeur d'une position
ArrayIterator offset Unset $index	la position à effacer
ArrayIterator void offset Unset string $index	efface la valeur d'une position
ArrayIterator void rewind	revient &agrave; la position initiale
ArrayIterator set Flags $flags	un masque comme suit : 0 = les propriétés dun objet ont leur fonctionnalité normale lorsquon y accède comme des listes var_dump foreach etc
ArrayIterator void set Flags string $flags	d&eacute;finit des comportements
ArrayObject append $value	la valeur ajoutée
ArrayObject void append mixed $value	ajoute la valeur &agrave; la fin d'un tableau
ArrayObject void asort	trie les &eacute;l&eacute;ments par valeur
ArrayObject int count	retourne le nombre de propriétés publiques dans lobjet arrayobject
ArrayObject int count	retourne le nombre de propri&eacute;t&eacute;s publiques dans l'objet arrayobject
ArrayObject exchange Array $input	le nouveau tableau ou objet à utiliser
ArrayObject array exchange Array	retourne lancien tableau
ArrayObject array exchange Array mixed $input	remplace un tableau par un autre
ArrayObject array get Array Copy	retourne une copie du tableau
ArrayObject array get Array Copy	cr&eacute;e une copie de l'objet arrayobject
ArrayObject ArrayIterator get Iterator	un itérateur depuis un arrayobject
ArrayObject ArrayIterator get Iterator	cr&eacute;e un nouvel it&eacute;rateur &agrave; partir d'un objet arrayobject
ArrayObject string get Iterator Class	retourne le nom de la classe ditérateur utilisé par cet objet
ArrayObject string get Iterator Class	lit le nom de la classe de arrayobject
ArrayObject void natcasesort	trie un tableau en utilisant le tri naturel sans la casse
ArrayObject void natsort	trie les &eacute;l&eacute;ments avec un tri naturel
ArrayObject offset Set $newval	la nouvelle valeur de lindex index
ArrayObject offset Set $index	lindex à définir
ArrayObject void offset Set mixed $index mixed $newval	d&eacute;finie $newval comme valeur &agrave; l'$index sp&eacute;cifi&eacute;
ArrayObject offset Unset $index	lindex à effacer
ArrayObject void offset Unset mixed $index	efface la valeur &agrave; l'$index sp&eacute;cifi&eacute;
ArrayObject string serialize	la représentation linéarisée dun objet arrayobject
ArrayObject string serialize	lin&eacute;arise un arrayobject
ArrayObject set Flags $flags	le nouveau comportement arrayobject
ArrayObject void set Flags int $flags	configure les options de comportement
ArrayObject uasort $cmp_function	la fonction cmp_function doit accepter deux paramètres qui contiendront les éléments
ArrayObject void uasort callable $cmp_function	trie les &eacute;l&eacute;ments avec une fonction utilisateur
ArrayObject uksort $cmp_function	la fonction de rappel pour les comparaisons
ArrayObject void uksort callable $cmp_function	trie les &eacute;l&eacute;ments par cl&eacute; avec une fonction utilisateur
ArrayObject unserialize $serialized	lobjet arrayobject linéarisé
ArrayObject void unserialize string $serialized	d&eacute;lin&eacute;arisation d'un arrayobject
CairoContext construct $surface	un objet cairosurface valide comme cairoimagesurface ou cairopdfsurface
CairoContext CairoSurface construct	un nouvel objet cairocontext
CairoContext CairoSurface construct CairoSurface $surface	cr&eacute;e un nouvel objet cairocontext
CairoFontFace - construct	cr&eacute;e un nouvel objet cairofontface
CairoFormat stride For Width $format	le format cairoformat à utiliser
CairoFormat stride For Width $width	la longueur de limage
CairoFormat int stride For Width	le stride approprié à utiliser pour le format et la longueur désirés ou -1 si soit le format est invalide soit la longueur est trop grande
CairoFormat int stride For Width int $format int $width	fournit un stride appropri&eacute; &agrave; utiliser
CairoImageSurface construct $format	peut être un format parmi ceux définis par cairoformat
CairoImageSurface construct $width	la largeur de la surface de limage
CairoImageSurface construct $height	la hauteur de la surface de limage
CairoImageSurface int construct	un nouvel objet cairoimagesurface
CairoImageSurface int construct int $format int $width int $height	cr&eacute;e un nouvel objet cairoimagesurface
CairoImageSurface create From Png $file	chemin vers le fichier image png
CairoImageSurface CairoImageSurface create From Png	un objet cairoimagesurface
CairoImageSurface CairoImageSurface create From Png string $file	cr&eacute;e un nouvel cairoimagesurface &agrave; partir d'une image png
CairoImageSurface int get Format	un format dimage parmi ceux définis par cairoformat
CairoImageSurface int get Format	r&eacute;cup&egrave;re le format de l'image
CairoImageSurface int get Width	retourne la largeur dun objet cairoimagesurface
CairoImageSurface int get Width	r&eacute;cup&egrave;re la largeur d'un cairoimagesurface
CairoSurface - construct	le but de __construct
CairoSurface create Similar $other	une surface existante utilisée pour sélectionner le moteur de la nouvelle surface
CairoSurface create Similar $content	le contenu de la nouvelle surface
CairoSurface create Similar $width	largeur de la nouvelle surface en utilisant lunité despacement définie
CairoSurface create Similar $height	hauteur de la nouvelle surface en utilisant lunité despacement définie
CairoSurface void create Similar CairoSurface $other int $content string $width string $height	le but de createsimilar
CallbackFilterIterator string accept	retourne true pour accepter lélément courant false sinon
CallbackFilterIterator string accept	appel la fonction de rappel avec la valeur courante la cl&eacute; courante et l'it&eacute;rateur interne comme arguments
chdb get $key	la clé dont nous voulons récupérer la valeur
chdb string get	retourne une chaîne de caractères contenant la valeur associée avec le paramètre key fourni ou null si la clé na pu être trouvée
chdb string get string $key	r&eacute;cup&egrave;re la valeur associ&eacute;e &agrave; une cl&eacute;
Closure bind $newthis	lobjet auquel lier la fonction anonyme ou null pour délier
Closure bind $newscope	le contexte de classe à associer à la fermeture ou static pour conserver le contexte actuel
Closure bind $closure	la fonction anonyme à lier
Closure Closure bind	retourne un nouvel objet closure ou false si une erreur survient
Closure Closure bind Closure $closure object $newthis mixed $newscope	duplique une fermeture avec un nouvel objet li&eacute; et un nouveau contexte de classe
Closure bind To $newthis	lobjet auquel lier la fonction anonyme ou null pour une fermeture statique
Closure bind To $newscope	le contexte de classe à associer à la fermeture ou static pour conserver le contexte actuel
Closure Closure bind To	retourne la nouvelle fermeture sous la forme dun objet closure ou false si une erreur survient
Closure Closure bind To object $newthis mixed $newscope	duplique la fermeture avec un nouvel objet li&eacute; et un nouveau contexte de classe
Closure - construct	constructeur emp&ecirc;chant l'instanciation
Collectable bool is Garbage	d&eacute;termine si un objet a &eacute;t&eacute; marqu&eacute; comme obsol&egrave;te
Collectable void set Garbage	marque un objet comme obsol&egrave;te
Cond broadcast $condition	un gestionnaire de variable de condition retourné par un appel à la méthode cond::create()
Cond boolean broadcast	un booléen indiquant le succès de lopération
Cond boolean broadcast long $condition	diffuse une condition
Cond long create	un gestionnaire vers une variable de condition
Cond long create	cr&eacute;e une condition
Cond destroy $condition	un gestionnaire de variable de condition retourné par un appel à la méthode cond::create()
Cond boolean destroy	un booléen indiquant le succès de lopération
Cond boolean destroy long $condition	d&eacute;truit une condition
Countable int count	le nombre compté sous forme integer
Countable int count	compte le nombre d'&eacute;l&eacute;ments d'un objet
DateInterval create From Date String $time	une date avec des parties relatives
DateInterval DateInterval create From Date String	retourne un nouvel objet dateinterval
DateInterval DateInterval create From Date String string $time	configure un objet dateinterval &agrave; partir des parties d'une cha&icirc;ne
DateTime set state $array	le tableau dinitialisation
DateTime DateTime set state	retourne une nouvelle instance de lobjet datetime
DateTime DateTime set state array $array	le gestionnaire __set_state
DateTime - wakeup	le gestionnaire __wakeup
DateTimeImmutable DateTimeImmutable add DateInterval $interval	ajoute un nombre de jours mois ann&eacute;es heures minutes et secondes
DateTimeImmutable array get Last Errors	retourne les alertes et erreurs
DateTimeImmutable modify $object	style procédural uniquement : un objet datetime retourné par la fonction date_create()
DateTimeImmutable modify $modify	une chaîne date / heure
DateTimeImmutable DateTimeImmutable modify	retourne le nouvel objet créé ou false si une erreur survient
DateTimeImmutable DateTimeImmutable modify string $modify	cr&eacute;e un nouvel objet dont le timestamp a &eacute;t&eacute; modifi&eacute;
DateTimeImmutable DateTimeImmutable set state array $array	le gestionnaire __set_state
DateTimeImmutable DateTimeImmutable set Date int $year int $month int $day	d&eacute;finit la date
DateTimeImmutable DateTimeImmutable set Timestamp int $unixtimestamp	d&eacute;finit la date et l'heure bas&eacute; sur un timestamp unix
DateTimeImmutable DateTimeImmutable set Timezone DateTimeZone $timezone	d&eacute;finit le d&eacute;calage horaire
DateTimeImmutable DateTimeImmutable sub DateInterval $interval	soustrait un nombre de jours mois ann&eacute;es heures et secondes
Directory void close resource $dir_handle	ferme le gestionnaire de dossier
Directory void rewind resource $dir_handle	r&eacute;initialise le gestionnaire de dossier
DirectoryIterator DirectoryIterator current	retourne lélément courant du directoryiterator
DirectoryIterator DirectoryIterator current	retourne l'&eacute;l&eacute;ment courant du directoryiterator
DirectoryIterator int get ATime	la date et lheure du dernier accès au fichier sous forme de timestamp unix
DirectoryIterator int get ATime	lit la date et l'heure du dernier acc&egrave;s &agrave; un fichier
DirectoryIterator get Basename $suffix	si le nom du dossier se termine par le suffixe suffix il sera retiré
DirectoryIterator string get Basename	le nom du dossier courant
DirectoryIterator string get Basename string $suffix	lit le nom de dossier de l'&eacute;l&eacute;ment directoryiterator
DirectoryIterator string get Extension	retourne une chaîne de caractères contenant lextension du fichier ou une chaîne de caractères vide si le fichier na pas dextension
DirectoryIterator string get Extension	r&eacute;cup&egrave;re l'extension du fichier
DirectoryIterator string get Filename	retourne le nom du fichier courant dans litérateur directoryiterator
DirectoryIterator string get Filename	retourne le nom de l'entr&eacute;e courante du dossier
DirectoryIterator int get Owner	le nom du propriétaire du fichier au format numérique
DirectoryIterator int get Owner	r&eacute;cup&egrave;re le propri&eacute;taire d'un fichier
DirectoryIterator string get Pathname	retourne le chemin et le nom du fichier courant
DirectoryIterator string get Pathname	retourne le chemin et le nom de l'entr&eacute;e courante du dossier
DirectoryIterator int get Perms	retourne les permissions du fichier sous forme d entier
DirectoryIterator int get Perms	r&eacute;cup&egrave;re les permissions d'un fichier
DirectoryIterator int get Size	retourne la taille du fichier en octets
DirectoryIterator int get Size	r&eacute;cup&egrave;re la taille d'un fichier
DirectoryIterator string get Type	retourne une chaîne de caractères représentant le type de fichier
DirectoryIterator string get Type	r&eacute;cup&egrave;re le type d'un fichier
DirectoryIterator bool is Dir	true si cest un dossier false sinon
DirectoryIterator bool is Dir	v&eacute;rifie si un fichier est un dossier
DirectoryIterator bool is Dot	true si lentrée est
DirectoryIterator bool is Dot	retourne true si l'entr&eacute;e courante est '
DirectoryIterator bool is Readable	true si le fichier est accessible en lecture false sinon
DirectoryIterator bool is Readable	v&eacute;rifie si le fichier est accessible en lecture
DirectoryIterator void next	se d&eacute;place vers la prochaine entr&eacute;e
DirectoryIterator void rewind	revient au d&eacute;but du dossier
DirectoryIterator string to String	retourne le nom du fichier courant de lélément directoryiterator
DirectoryIterator string to String	lit le nom du fichier
DOMAttr construct $value	la valeur de lattribut
DOMAttr construct $name	le nom de lattribut
DOMAttr string construct string $name string $value	cr&eacute;e un nouvel objet domattr
DOMAttr bool is Id	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMAttr bool is Id	v&eacute;rifie si l'attribut est un identifiant d&eacute;fini
DOMCharacterData delete Data $count	le nombre de caractères à effacer
DOMCharacterData delete Data $offset	la position à partir de laquelle on doit commencer à effacer
DOMCharacterData void delete Data int $offset int $count	supprime une sous-cha&icirc;ne dans le noeud
DOMCharacterData substring Data $count	le nombre de caractères à extraire
DOMCharacterData substring Data $offset	la position du début de la chaîne à extraire
DOMCharacterData string substring Data	la sous-chaîne spécifiée
DOMCharacterData string substring Data int $offset int $count	extrait un morceau de donn&eacute;es dans le noeud
DOMComment construct $value	la valeur du commentaire
DOMComment string construct string $value	cr&eacute;e un nouvel objet domcomment
DOMDocument construct $version	le numéro de version du document en tant que partie de la déclaration xml
DOMDocument construct $encoding	lencodage du document en tant que partie de la déclaration xml
DOMDocument string construct string $version string $encoding	cr&eacute;e un nouvel objet domdocument
DOMDocument create Attribute NS $qualifiedName	le nom de la balise et le préfixe de lattribut sous cette forme : préfixe:nombalise
DOMDocument create Attribute NS $namespaceURI	luri de lespace de noms
DOMDocument DOMAttr create Attribute NS	le nouveau domattr ou false si une erreur survient
DOMDocument DOMAttr create Attribute NS string $namespaceURI string $qualifiedName	cr&eacute;e un nouvel attribut avec un espace de noms associ&eacute;
DOMDocument create CDATASection $data	le contenu du cdata
DOMDocument DOMCDATASection create CDATASection	le nouveau domcdatasection ou false si une erreur survient
DOMDocument DOMCDATASection create CDATASection string $data	cr&eacute;e un nouveau noeud cdata
DOMDocument create Comment $data	le contenu du commentaire
DOMDocument DOMComment create Comment	le nouveau domcomment ou false si une erreur survient
DOMDocument DOMComment create Comment string $data	cr&eacute;e un nouveau noeud de commentaire
DOMDocument DOMDocumentFragment create Document Fragment	le nouveau domdocumentfragment ou false si une erreur survient
DOMDocument DOMDocumentFragment create Document Fragment	cr&eacute;e un nouveau fragment de document
DOMDocument create Element $name	le nom du tag de lélément
DOMDocument create Element $value	la valeur de lélément
DOMDocument DOMElement create Element	retourne une nouvelle instance de la classe domelement ou false si une erreur survient
DOMDocument DOMElement create Element string $name string $value	cr&eacute;e un nouveau noeud
DOMDocument create Element NS $value	la valeur de lélément
DOMDocument create Element NS $qualifiedName	le nom qualifié de lélément en tant que préfixe:nombalise
DOMDocument create Element NS $namespaceURI	luri de lespace de noms
DOMDocument DOMElement create Element NS	un nouveau domelement ou false si une erreur survient
DOMDocument DOMElement create Element NS string $namespaceURI string $qualifiedName string $value	cr&eacute;e un nouveau noeud avec un espace de noms associ&eacute;
DOMDocument create Entity Reference $name	le contenu de la référence de lentité e
DOMDocument DOMEntityReference create Entity Reference	le nouveau domentityreference ou false si une erreur survient
DOMDocument DOMEntityReference create Entity Reference string $name	cr&eacute;e un nouveau noeud de r&eacute;f&eacute;rence d'entit&eacute;
DOMDocument get Element By Id $elementId	la valeur de lidentifiant unique pour un élément
DOMDocument DOMElement get Element By Id	retourne un domelement ou null si lélément nest pas trouvé
DOMDocument DOMElement get Element By Id string $elementId	cherche un &eacute;l&eacute;ment avec un certain identifiant
DOMDocument get Elements By Tag Name $name	le nom local sans espace de nommage de la balise à chercher
DOMDocument DOMNodeList get Elements By Tag Name	un nouvel objet domnodelist contenant tous les éléments correspondants
DOMDocument DOMNodeList get Elements By Tag Name string $name	cherche tous les &eacute;l&eacute;ments qui ont le nom de la balise locale donn&eacute;
DOMDocument get Elements By Tag Name NS $namespaceURI	luri de lespace de noms des éléments à chercher
DOMDocument get Elements By Tag Name NS $localName	le nom local des éléments à chercher
DOMDocument DOMNodeList get Elements By Tag Name NS	un nouvel objet domnodelist contenant tous les éléments trouvés
DOMDocument DOMNodeList get Elements By Tag Name NS string $namespaceURI string $localName	recherche tous les &eacute;l&eacute;ments avec un nom de balise donn&eacute; dans un espace de noms sp&eacute;cifi&eacute;
DOMDocument import Node $importedNode	le noeud à importer
DOMDocument import Node $deep	si défini à true cette méthode importera récursivement le sous-arbre situé sous le noeud importednode
DOMDocument DOMNode import Node	le noeud copié ou false si la copie a échouée
DOMDocument DOMNode import Node DOMNode $importedNode bool $deep	importe un noeud dans le document courant
DOMDocument load $filename	le chemin vers le document xml
DOMDocument load $options	lopérateur or des constantes de libxml
DOMDocument mixed load	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMDocument mixed load string $filename int $options	charge du xml depuis un fichier
DOMDocument load HTMLFile $filename	le chemin vers le fichier html
DOMDocument load HTMLFile $options	depuis php 5
DOMDocument bool load HTMLFile	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMDocument bool load HTMLFile string $filename int $options	charge du html &agrave; partir d'un fichier
DOMDocument void normalize Document	normalise le document
DOMDocument relax NGValidate Source $source	une chaîne contenant le schéma rng
DOMDocument bool relax NGValidate Source	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMDocument bool relax NGValidate Source string $source	effectue une validation relaxng sur le document
DOMDocument save $options	options additionnelles
DOMDocument save $filename	le chemin où sera sauvegardé le document xml
DOMDocument int save	retourne le nombre doctets écrit ou false si une erreur survient
DOMDocument int save string $filename int $options	sauvegarde l'arbre interne xml dans un fichier
DOMDocument save HTML $node	paramètre optionnel pour afficher une portion du document
DOMDocument string save HTML	retourne le code html ou false si une erreur survient
DOMDocument string save HTML DOMNode $node	sauvegarde le document interne dans une cha&icirc;ne en utilisant un formatage html
DOMDocument save XML $options	options additionnelles
DOMDocument save XML $node	utilisez ce paramètre pour afficher uniquement un noeud spécifique sans déclaration xml plutôt que la totalité du document
DOMDocument string save XML	retourne le xml ou false si une erreur survient
DOMDocument string save XML DOMNode $node int $options	sauvegarde l'arbre interne xml dans une cha&icirc;ne de caract&egrave;res
DOMDocument schema Validate $filename	le chemin vers le fichier contenant le schéma
DOMDocument schema Validate $flags	un masque de drapeaux de validation du schéma libxml
DOMDocument bool schema Validate	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMDocument bool schema Validate string $filename int $flags	valide un document selon un sch&eacute;ma
DOMDocument schema Validate Source $flags	un masque de drapeau de validation de schéma libxml
DOMDocument schema Validate Source $source	une chaîne contenant le schéma
DOMDocument bool schema Validate Source	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMDocument bool schema Validate Source string $source int $flags	valide un document selon un sch&eacute;ma
DOMDocument bool validate	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMDocument bool validate	valide un document en se basant sur sa dtd
DOMDocument xinclude $options	paramètres libxml
DOMDocument int xinclude	retourne le nombre de xincludes du document -1 si une erreur survient lors du processus ou false sil ny a aucune substitution
DOMDocument int xinclude int $options	remplace les xincludes dans un objet domdocument
DOMDocumentFragment append XML $data	xml à ajouter
DOMDocumentFragment bool append XML	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMDocumentFragment bool append XML string $data	ajoute des donn&eacute;es xml
DOMElement construct $value	la valeur de lélément
DOMElement construct $name	le nom de lélément
DOMElement construct $namespaceURI	un espace de nom de luri pour créer lélément dans un espace de nom spécifique
DOMElement string construct string $name string $value string $namespaceURI	cr&eacute;e un nouvel objet domelement
DOMElement get Attribute $name	le nom de lattribut
DOMElement string get Attribute	la valeur de lattribut ou une chaîne vide si aucun attribut avec le nom name donné nest trouvé
DOMElement string get Attribute string $name	retourne la valeur d'un attribut
DOMElement get Attribute Node $name	le nom de lattribut
DOMElement DOMAttr get Attribute Node	le noeud dattribut
DOMElement DOMAttr get Attribute Node string $name	retourne le noeud d'attribut
DOMElement get Attribute Node NS $localName	le nom local
DOMElement get Attribute Node NS $namespaceURI	luri de lespace de noms
DOMElement DOMAttr get Attribute Node NS	le noeud dattribut
DOMElement DOMAttr get Attribute Node NS string $namespaceURI string $localName	retourne le noeud d'attribut
DOMElement get Attribute NS $localName	le nom local
DOMElement get Attribute NS $namespaceURI	luri de lespace de noms
DOMElement string get Attribute NS	la valeur de lattribut ou une chaîne vide si aucun attribut avec le nom local localname donné et dans lespace de noms namespaceuri nest trouvé
DOMElement string get Attribute NS string $namespaceURI string $localName	retourne la valeur de l'attribut
DOMElement get Elements By Tag Name $name	le nom de la balise
DOMElement DOMNodeList get Elements By Tag Name	cette fonction retourne une nouvelle instance de la classe domnodelist contenant tous les éléments correspondants
DOMElement DOMNodeList get Elements By Tag Name string $name	retourne les &eacute;l&eacute;ments par leur nom de balise
DOMElement get Elements By Tag Name NS $localName	le nom local
DOMElement get Elements By Tag Name NS $namespaceURI	luri de lespace de noms
DOMElement DOMNodeList get Elements By Tag Name NS	cette fonction retourne un nouvel objet de la classe domnodelist contenant tous les éléments correspondants dans lordre dans lesquels ils sont rencontrés lors du parcours de larbre de cet élément
DOMElement DOMNodeList get Elements By Tag Name NS string $namespaceURI string $localName	r&eacute;cup&egrave;re les &eacute;l&eacute;ments par leur espace de noms et leur localname
DOMElement remove Attribute $name	le nom de lattribut
DOMElement bool remove Attribute	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMElement bool remove Attribute string $name	efface un attribut
DOMElement remove Attribute Node $oldnode	le noeud de lattribut
DOMElement bool remove Attribute Node	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMElement bool remove Attribute Node DOMAttr $oldnode	efface un attribut
DOMElement remove Attribute NS $localName	le nom local
DOMElement remove Attribute NS $namespaceURI	luri de lespace de noms
DOMElement bool remove Attribute NS	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMElement bool remove Attribute NS string $namespaceURI string $localName	efface un attribut
DOMElement set Attribute $value	la valeur de lattribut
DOMElement set Attribute $name	le nom de lattribut
DOMElement DOMAttr set Attribute	le nouveau domattr ou false si une erreur survient
DOMElement DOMAttr set Attribute string $name string $value	ajoute un nouvel attribut
DOMElement set Attribute Node $attr	lattribut
DOMElement DOMAttr set Attribute Node	retourne lancien noeud si lattribut a été placé ou null
DOMElement DOMAttr set Attribute Node DOMAttr $attr	ajoute un nouvel attribut &agrave; l'&eacute;l&eacute;ment
DOMElement set Attribute Node NS $attr	le nom de lattribut
DOMElement DOMAttr set Attribute Node NS	retourne lancien noeud si lattribut a été placé
DOMElement DOMAttr set Attribute Node NS DOMAttr $attr	ajoute un nouvel attribut &agrave; l'&eacute;l&eacute;ment
DOMElement set Id Attribute $isId	définissez à true si vous voulez que name soit de type id false sinon
DOMElement set Id Attribute $name	le nom de lattribut
DOMElement void set Id Attribute string $name bool $isId	d&eacute;clare l'attribut sp&eacute;cifi&eacute; par son nom &agrave; &ecirc;tre de type id
DOMElement set Id Attribute Node $attr	lattribut du noeud
DOMElement set Id Attribute Node $isId	définissez à true si vous voulez que name soit de type id false sinon
DOMElement void set Id Attribute Node DOMAttr $attr bool $isId	d&eacute;clare l'attribut sp&eacute;cifi&eacute; par le noeud &agrave; &ecirc;tre de type id
DOMElement set Id Attribute NS $namespaceURI	luri de lespace de nom de lattribut
DOMElement set Id Attribute NS $isId	définissez à true si vous voulez que name soit de type id false sinon
DOMElement set Id Attribute NS $localName	le nom local de lattribut sous la forme prefix:tagname
DOMElement void set Id Attribute NS string $namespaceURI string $localName bool $isId	d&eacute;clare l'attribut sp&eacute;cifi&eacute; par son nom local et son espace de nom uri &agrave; &ecirc;tre de type id
DOMEntityReference construct $name	le nom de la référence à lentité
DOMEntityReference string construct string $name	cr&eacute;e un nouvel objet domentityreference
DOMImplementation create Document $qualifiedName	le nom qualifié des éléments du document à créer
DOMImplementation create Document $namespaceURI	luri de lespace de noms des éléments du document à créer
DOMImplementation create Document $doctype	le type de document à créer ou null
DOMImplementation DOMDocument create Document	un nouvel objet domdocument
DOMImplementation DOMDocument create Document string $namespaceURI string $qualifiedName DOMDocumentType $doctype	cr&eacute;e un objet dom document du type sp&eacute;cifi&eacute; avec ses &eacute;l&eacute;ments
DOMImplementation has Feature $feature	la fonctionnalité à tester
DOMImplementation has Feature $version	le numéro de version de la fonctionnalité feature à tester
DOMImplementation bool has Feature	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMImplementation bool has Feature string $feature string $version	teste si l'impl&eacute;mentation dom impl&eacute;mente une fonctionnalit&eacute; sp&eacute;cifique
DOMNamedNodeMap get Named Item $name	le nodename du noeud à récupérer
DOMNamedNodeMap DOMNode get Named Item	un noeud de nimporte quel type avec un nodename spécifié ou null si aucun noeud nest trouvé
DOMNamedNodeMap DOMNode get Named Item string $name	retourne un noeud sp&eacute;cifi&eacute; par nom nom
DOMNamedNodeMap get Named Item NS $localName	le nom local du noeud à récupérer
DOMNamedNodeMap get Named Item NS $namespaceURI	luri de lespace de noms du noeud à récupérer
DOMNamedNodeMap DOMNode get Named Item NS	un noeud de nimporte quel type ou null si aucun noeud nest trouvé
DOMNamedNodeMap DOMNode get Named Item NS string $namespaceURI string $localName	retourne un noeud sp&eacute;cifi&eacute; par son nom local et son espace de noms
DOMNamedNodeMap item $index	index dans cette carte
DOMNamedNodeMap DOMNode item	le noeud à la position index dans la carte ou null si ce nest pas un index valide plus grand que ou égal au nombre de noeuds dans cette carte
DOMNamedNodeMap DOMNode item int $index	retourne un noeud selon son index
DOMNode C14 N $ns_prefixes	un tableau de préfixes despaces de noms utilisés pour filtrer les noeuds
DOMNode C14 N $exclusive	active lanalyse des seuls noeuds correspondant à lxpath ou aux préfixes despace de noms fournis
DOMNode C14 N $xpath	un tableau de xpath utilisés pour filtrer les noeuds
DOMNode C14 N $with_comments	conserve les commentaires dans la sortie
DOMNode string C14 N	retourne les noeuds canonisés sous la forme dune chaîne de caractères ou false si une erreur survient
DOMNode string C14 N bool $exclusive bool $with_comments array $xpath array $ns_prefixes	canonise des noeuds en une cha&icirc;ne
DOMNode C14 NFile $xpath	un tableau d xpath utilisés pour filtrer les noeuds
DOMNode C14 NFile $ns_prefixes	un tableau de préfixes despace de noms utilisés pour filtrer les noeuds
DOMNode C14 NFile $exclusive	active lanalyse des seuls noeuds correspondant à lxpath ou préfixes despace de noms fournis
DOMNode C14 NFile $with_comments	conserve les commentaires dans la sortie
DOMNode C14 NFile $uri	chemin vers lequel le fichier sera créé
DOMNode int C14 NFile	nombre doctets écrits ou false si une erreur survient
DOMNode int C14 NFile string $uri bool $exclusive bool $with_comments array $xpath array $ns_prefixes	canonise des noeuds en fichier
DOMNode clone Node $deep	indique si lon doit copier tous les noeuds fils
DOMNode DOMNode clone Node	le noeud cloné
DOMNode DOMNode clone Node bool $deep	clone un noeud
DOMNode string get Node Path	retourne un chaîne de caractères contenant le xpath ou null si une erreur survient
DOMNode string get Node Path	r&eacute;cup&egrave;re un xpath pour un n&oelig;ud
DOMNode bool has Attributes	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMNode bool has Attributes	v&eacute;rifie si le noeud poss&egrave;de un attribut
DOMNode is Default Namespace $namespaceURI	luri de lespace de noms à vérifier
DOMNode bool is Default Namespace	retourne true si namespaceuri est lespace de noms par défaut false sinon
DOMNode bool is Default Namespace string $namespaceURI	v&eacute;rifie si l'espace de nom sp&eacute;cifi&eacute; est l'espace de noms par d&eacute;faut ou non
DOMNode is Same Node $node	le noeud à comparer
DOMNode bool is Same Node	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMNode bool is Same Node DOMNode $node	indique si deux noeuds sont identiques
DOMNode is Supported $feature	la fonctionnalité à tester
DOMNode is Supported $version	le numéro de la version de la fonctionnalité feature à tester
DOMNode bool is Supported	cette fonction retourne true en cas de succès ou false si une erreur survient
DOMNode bool is Supported string $feature string $version	v&eacute;rifie si la fonctionnalit&eacute; est disponible pour la version sp&eacute;cifi&eacute;e
DOMNode lookup Namespace URI $prefix	le préfixe de lespace de noms
DOMNode string lookup Namespace URI	luri de lespace de noms de ce noeud
DOMNode string lookup Namespace URI string $prefix	retourne l'uri de l'espace de noms selon le pr&eacute;fixe
DOMNode lookup Prefix $namespaceURI	luri de lespace de noms
DOMNode string lookup Prefix	le préfixe de lespace de noms
DOMNode string lookup Prefix string $namespaceURI	retourne le pr&eacute;fixe de l'espace de noms selon l'uri de l'espace de noms
DOMNode remove Child $oldnode	le fils à effacer
DOMNode DOMNode remove Child	si le fils ne peut être effacé la fonction retourne lancien fils
DOMNode DOMNode remove Child DOMNode $oldnode	supprime un fils de la liste des enfants
DOMNodelist item $index	lindex du noeud dans la collection
DOMNodelist DOMNode item	le noeud à la position index dans la domnodelist ou null si ce nest pas un index valide
DOMNodelist DOMNode item int $index	retourne un noeud sp&eacute;cifi&eacute; par son index
DOMProcessingInstruction construct $name	le nom du tag de linstruction
DOMProcessingInstruction construct $value	la valeur de linstruction
DOMProcessingInstruction string construct string $name string $value	cr&eacute;e un nouvel objet domprocessinginstruction
DOMText split Text $offset	la position de la césure commençant à 0
DOMText DOMText split Text	le nouveau noeud du même type qui contient tout le contenu à partir de la position offset
DOMText DOMText split Text int $offset	coupe le noeud en deux noeuds &agrave; l'endroit sp&eacute;cifi&eacute;
DOMXPath construct $doc	lobjet domdocument associé à lobjet domxpath
DOMXPath DOMDocument construct DOMDocument $doc	cr&eacute;e un nouvel objet domxpath
DOMXPath evaluate $expression	lexpression xpath à exécuter
DOMXPath evaluate $contextnode	le paramètre optionnel contextnode peut être spécifié pour effectuer des requêtes xpath relatives
DOMXPath evaluate $registerNodeNS	le paramètre optionnel registernodens peut être renseigné pour désactiver lenregistrement automatique du noeud de contexte
DOMXPath mixed evaluate	retourne un résultat typé si possible ou un domnodelist contenant tous les noeuds correspondant à lexpression xpath expression
DOMXPath mixed evaluate string $expression DOMNode $contextnode bool $registerNodeNS	&eacute;value une expression xpath donn&eacute;e et retourne un r&eacute;sultat typ&eacute; si possible
DOMXPath query $expression	lexpression xpath à exécuter
DOMXPath query $contextnode	le paramètre optionnel contextnode peut être spécifié pour effectuer des requêtes xpath relative
DOMXPath query $registerNodeNS	le paramètre optionnel registernodens peut être renseigné pour désactiver lenregistrement automatique du noeud de contexte
DOMXPath DOMNodeList query	retourne un domnodelist contenant tous les noeuds correspondant à lexpression expression xpath donnée
DOMXPath DOMNodeList query string $expression DOMNode $contextnode bool $registerNodeNS	&eacute;value l'expression xpath donn&eacute;e
EmptyIterator scalar key	the key() method
EmptyIterator void next	la m&eacute;thode emptyiterator::next
ErrorException int get Severity	retourne le degré de sévérité de lexception
ErrorException int get Severity	r&eacute;cup&egrave;re la s&eacute;v&eacute;rit&eacute; de l'exception
Ev int depth	ev_depth() retourne la profondeur de récursion de la boucle par défaut
Ev int depth	retourne la profondeur de r&eacute;cursion
Ev void embeddable Backends	retourne le jeu de backends qui sont encapsul&eacute;s dans les autres boucles d'&eacute;v&eacute;nements
Ev feed Signal $signum	numéro du signal
Ev void feed Signal int $signum	simule la r&eacute;ception d'un signal
Ev feed Signal Event $signum	numéro du signal
Ev void feed Signal Event int $signum	simule un &eacute;v&eacute;nement de signal dans la boucle par d&eacute;faut
Ev int iteration	retourne le nombre de sollicitation de la boucle dévénement par défaut
Ev int iteration	retourne le nombre de fois que la boucle d'&eacute;v&eacute;nement par d&eacute;faut a &eacute;t&eacute; sollicit&eacute;e pour un nouvel &eacute;v&eacute;nement
Ev double now	retourne le nombre de secondes représentant le temps de démarrage de la dernière itération de la boucle dévénement par défaut
Ev double now	retourne le temps de d&eacute;marrage de la derni&egrave;re it&eacute;ration de la boucle d'&eacute;v&eacute;nement par d&eacute;faut
Ev void now Update	etablit le temps courant en demandant au kernel ; met &agrave; jour le temps retourn&eacute; par ev::now pendant l'ex&eacute;cution
Ev void recommended Backends	retourne un masque d'octets de backends recommand&eacute;s pour la plateforme courante
Ev void resume	reprend la boucle d'&eacute;v&eacute;nement par d&eacute;faut pr&eacute;c&eacute;demment stopp&eacute;e
Ev void run int $flags	commence la v&eacute;rification des &eacute;v&eacute;nements et appelle les fonctions de rappels pour la boucle par d&eacute;faut
Ev stop $how	une constants parmie les constantes ev::break_*
Ev void stop int $how	arr&ecirc;te la boucle d'&eacute;v&eacute;nements par d&eacute;faut
Ev void supported Backends	retourne le jeu de backends support&eacute;s par la configuration courant de libev
Ev void suspend	suspend la boucle par d&eacute;faut d'&eacute;v&eacute;nements
Ev double time	retourne le temps courant en nombre de secondes depuis lépoque unix
Ev double time	retourne le temps courant depuis l'&eacute;poque unix
Ev void verify	effectue des v&eacute;rifications internes de consistence pour le d&eacute;bogage
EvCheck construct $callback	voir les fonctions de rappel des observations
EvCheck construct $priority	priorité de lobservateur
EvCheck construct $data	données personnalisées associées avec lobservateur
EvCheck callable construct	retourne un objet evcheck en cas de succès
EvCheck callable construct callable $callback mixed $data int $priority	construit l'objet d'observation evcheck
EvCheck create Stopped $data	données personnalisées à associer avec lobservateur
EvCheck create Stopped $callback	voir les fonctions de rappel des observateurs
EvCheck create Stopped $priority	priorité de lobservateur
EvCheck object create Stopped	retourne lobjet evcheck en cas de succès
EvCheck object create Stopped string $callback string $data string $priority	cr&eacute;e une instance d'un observateur stopp&eacute; evcheck
EvChild construct $data	données personnalisées associées avec lobservateur
EvChild construct $pid	attend les modifications de statut des processus pid ou tout processus si pid vaut 0
EvChild construct $trace	si vaut false nactive lobservateur que lorsque le processus se termine
EvChild construct $callback	voir les fonctions de rappel des observateurs
EvChild construct $priority	fonctions de rappel de lobservateur
EvChild int construct	retourne un objet evchild en cas de succès
EvChild int construct int $pid bool $trace callable $callback mixed $data int $priority	construit l'objet d'observation evchild
EvChild create Stopped $pid	identique à celui utilisé pour evchild::__construct()
EvChild create Stopped $priority	priorité de lobservateur
EvChild create Stopped $callback	voir les fonctions de rappel des observateurs
EvChild create Stopped $data	données personnalisées associées avec lobservateur
EvChild create Stopped $trace	identique à celui utilisé pour evchild::__construct()
EvChild object create Stopped int $pid bool $trace callable $callback mixed $data int $priority	cr&eacute;e une instance de l'observateur stopp&eacute; evcheck
EvEmbed set $other	identique au paramètre de la méthode evembed::__construct()
EvEmbed void set object $other	configure le watcher
EvEmbed void sweep	balaye une seule fois et de fa&ccedil;on non bloquante la boucle interne
Event bool add Signal double $timeout	alias de la m&eacute;thode event::add
Event bool add Timer double $timeout	alias de event::add
Event construct $fd	ressource de flux ressource de socket ou descripteur numérique de fichier
Event construct $cb	la fonction de rappel de lévénement
Event construct $what	drapeaux dévénements
Event construct $arg	données personnalisées
Event construct $base	la base dévénement à associer
Event EventBase construct	retourne lobjet event
Event EventBase construct EventBase $base mixed $fd int $what callable $cb mixed $arg	construit un objet event
Event bool del	retourne true en cas de succès false sinon
Event bool del	supprime un &eacute;v&eacute;nement de la liste des &eacute;v&eacute;nements surveill&eacute;s
Event bool del Signal	alias de event::del
Event array get Supported Methods	retourne un tableau
Event array get Supported Methods	retourne un tableau contenant les noms des m&eacute;thodes support&eacute;es par cette version de libevent
Event pending $flags	une ou plusieurs des constantes suivantes : event::read event::write event::timeout event::signal
Event bool pending	retourne true si lévénement est en attente ou programmé false sinon
Event bool pending int $flags	d&eacute;tecte si l'&eacute;v&eacute;nement est en attente ou programm&eacute;
Event set $cb	la fonction de rappel de lévénement
Event set $fd	un flux une ressource de socket ou un descripteur de fichier ; pourles événements de type signal passez -1
Event set $what	voir les drapeaux dévénements
Event set $arg	données personnalisées à associer avec lévénement
Event set $base	la base dévénement à associer
Event bool set	retourne true en cas de succès false sinon
Event bool set EventBase $base mixed $fd int $what callable $cb mixed $arg	re-configure l'&eacute;v&eacute;nement
Event set Priority $priority	la priorité de lévénement
Event bool set Priority	retourne true en cas de succès false sinon
Event bool set Priority int $priority	d&eacute;fini la priorit&eacute; de l'&eacute;v&eacute;nement
Event signal $signum	le numéro du signal
Event signal $cb	la fonction de rappel de lévénement signal
Event signal $arg	données personnalisées
Event signal $base	lobjet de base dévénement associé
Event Event signal	retourne un objet dévénement en cas de succès false sinon
Event Event signal EventBase $base int $signum callable $cb mixed $arg	construit un objet d'&eacute;v&eacute;nement signal
Event timer $arg	données personnalisées
Event timer $cb	la fonction de rappel dévénement signal
Event timer $base	lobjet de base dévénement associé
Event Event timer	retourne un objet dévénement en cas de succès false sinon
Event Event timer EventBase $base callable $cb mixed $arg	construit un objet d'&eacute;v&eacute;nement timer
EventBase void dispatch	distribut les &eacute;v&eacute;nements en attente
EventBase exit $timeout	optionnel - nombre de secondes après lequel lévénement de base doit stopper la distribution dévénements
EventBase bool exit	retourne true en cas de succès false sinon
EventBase bool exit double $timeout	stoppe la distribution des &eacute;v&eacute;nements
EventBase int get Features	retourne un entier représentant un masque des fonctionalités supportées
EventBase int get Features	retourne un masque des fonctionalit&eacute;s support&eacute;es
EventBase bool got Exit	retourne true sil a été demandé à la boucle dévénements de sortir via la méthode eventbase::exit() false sinon
EventBase bool got Exit	v&eacute;rifie s'il a &eacute;t&eacute; demand&eacute; &agrave; la boucle d'&eacute;v&eacute;nements de sortir
EventBase bool got Stop	retourne true sil a été demandé à la boucle dévénements de sarrêter via la méthode eventbase::stop() false sinon
EventBase bool got Stop	v&eacute;rifie s'il a &eacute;t&eacute; demand&eacute; &agrave; la boucle d'&eacute;v&eacute;nements de s'arr&ecirc;ter
EventBase bool re Init	retourne true en cas de succès false sinon
EventBase bool re Init	re-initialise l'&eacute;v&eacute;nement de base apr&egrave;s un fork
EventBuffer add Buffer $buf	lobjet source eventbuffer
EventBuffer bool add Buffer	retourne true en cas de succès false sinon
EventBuffer bool add Buffer EventBuffer $buf	d&eacute;place toutes les donn&eacute;es du tampon fourni dans l'instance courante eventbuffer
EventBuffer - construct	construit un objet eventbuffer
EventBuffer drain $len	le nombre doctets à supprimer depuis le tampon
EventBuffer bool drain	retourne true en cas de succès false sinon
EventBuffer bool drain int $len	supprime un nombre sp&eacute;cifi&eacute; d'octets depuis le d&eacute;but du tampon sans copier les donn&eacute;es
EventBuffer void enable Locking	description
EventBuffer expand $len	le nombre doctets à réserver pour le tampon
EventBuffer bool expand	retourne true en cas de succès false sinon
EventBuffer bool expand int $len	r&eacute;serve de l'espace dans le tampon
EventBuffer freeze $at_front	permet de désactiver les modifitications en début ou en fin de tampon
EventBuffer bool freeze	retourne true en cas de succès false sinon
EventBuffer bool freeze bool $at_front	permet d'emp&eacute;cher les appels qui tentent de modifier un tampon d'&eacute;v&eacute;nements de r&eacute;ussir
EventBuffer void lock	acqui&egrave;re un verrou sur le buffer
EventBuffer prepend $data	chaîne de caractères à ajouter au début du buffer
EventBuffer bool prepend	retourne true en cas de succès
EventBuffer bool prepend string $data	ajoute des donn&eacute;es au d&eacute;but du buffer
EventBuffer pullup $size	le nombre doctets qui doivent être contigus dans le buffer
EventBuffer string pullup	si size est supérieur au nombre doctets du buffer la fonction retournera null
EventBuffer string pullup int $size	lin&eacute;arise les donn&eacute;es du buffer et retourne le contenu du buffer sous la forme d'une cha&icirc;ne
EventBuffer read $max_bytes	le nombre maximal doctets à lire depuis le tampon
EventBuffer string read	retourne la chaîne lue ou false si une erreur survient
EventBuffer string read int $max_bytes	lit les donn&eacute;es d'un evbuffer et vide les octets lus
EventBuffer read Line $eol_style	une constante eventbuffer:eol_*
EventBuffer string read Line	en cas de succès retourne la ligne lue depuis le tampon null sinon
EventBuffer string read Line int $eol_style	extrait une ligne depuis le d&eacute;but du tampon
EventBuffer search Eol $eol_style	une constante eventbuffer:eol_*
EventBuffer search Eol $start	position de début de recherche
EventBuffer mixed search Eol	retourne la position numérique de la première occurrence du symbole de fin de ligne dans le tampon ou bien false sil na pas été trouvé
EventBuffer mixed search Eol int $start int $eol_style	cherche dans le tampon une occurrence de fin de ligne
EventBuffer bool unlock	retourne true en cas de succès
EventBuffer bool unlock	lib&egrave;re un verrou acquis avec eventbuffer::lock
EventBuffer write $fd	ressource de socket flux ou un descripteur numérique de fichier associé avec un socket
EventBuffer write $howmuch	le nombre maximal doctets à écrire
EventBuffer int write	retourne le nombre doctets écrits ou false si une erreur survient
EventBuffer int write mixed $fd int $howmuch	ecrit le contenu du buffer dans un fichier ou dans un socket
EventBufferEvent void close	ferme le descripteur de fichier associ&eacute; avec le buffer d'&eacute;v&eacute;nements courant
EventBufferEvent connect $addr	doit contenir une adresse ip avec optionnellement le numéro du port ou un chemin vers le socket unix
EventBufferEvent bool connect	retourne true en cas de succès false sinon
EventBufferEvent bool connect string $addr	connecte le descripteur de fichier du tampon d'&eacute;v&eacute;nement &agrave; l'adresse fournie ou au socket unix
EventBufferEvent connect Host $port	le numéro du port
EventBufferEvent connect Host $dns_base	objet eventdnsbase dans le cas où le dns doit être résolu de façon asynchrone
EventBufferEvent connect Host $family	famille de ladresse
EventBufferEvent connect Host $hostname	le nom dhôte sur lequel la connexion tente dêtre faite
EventBufferEvent bool connect Host	retourne true en cas de succès false sinon
EventBufferEvent bool connect Host EventDnsBase $dns_base string $hostname int $port int $family	connexion &agrave; un h&ocirc;te
EventBufferEvent construct $writecb	fonction de rappel pour les événements décriture
EventBufferEvent construct $readcb	fonction de rappel pour les événements de lecture
EventBufferEvent construct $eventcb	fonction de rappel pour les événements de changement de statut
EventBufferEvent construct $arg	une variable qui sera passée à toutes les fonctions de rappel
EventBufferEvent construct $base	evenement de base qui doit être associé avec le nouveau tampon dévénement
EventBufferEvent construct $options	une constante parmi les constantes eventbufferevent::opt_* ou 0
EventBufferEvent construct $socket	doit être créé comme flux non nécessairement via lextension sockets
EventBufferEvent EventBase construct	retourne une ressource de tampon dévénement associée à la ressource de socket
EventBufferEvent EventBase construct EventBase $base mixed $socket int $options callable $readcb callable $writecb callable $eventcb	construit un objet eventbufferevent
EventBufferEvent create Pair $options	constantes eventbufferevent::opt_* combinées avec lopérateur or
EventBufferEvent create Pair $base	evenement de base associé
EventBufferEvent array create Pair	retourne un tableau de deux objets eventbufferevent connectés à lun à lautre
EventBufferEvent array create Pair EventBase $base int $options	cr&eacute;e deux &eacute;v&eacute;nements de tampon connect&eacute;s l'un &agrave; l'autre
EventBufferEvent enable $events	event::read event::write ou event::read | event::write sur un événement de tampon
EventBufferEvent bool enable	retourne true en cas de succès false sinon
EventBufferEvent bool enable int $events	active les &eacute;v&eacute;nements de lecture d'&eacute;criture ou des deux sur un &eacute;v&eacute;nement de tampon
EventBufferEvent string get Dns Error String	retourne une chaîne décrivant lerreur dns ou une chaîne vide sil ny a aucune erreur
EventBufferEvent string get Dns Error String	retourne une cha&icirc;ne d&eacute;crivant la derni&egrave;re erreur dns
EventBufferEvent int get Enabled	retourne un entier représentant un masque dévénements actuellement actifs sur le tampon dévénements
EventBufferEvent int get Enabled	retourne un masque d'&eacute;v&eacute;nements actuellement actifs sur le tampon d'&eacute;v&eacute;nements
EventBufferEvent EventBuffer get Input	retourne une instance du tampon dentrée eventbuffer associé avec le tampon dévénements courant
EventBufferEvent EventBuffer get Input	retourne le tampon d'entr&eacute;e associ&eacute; avec le tampon d'&eacute;v&eacute;nements courant
EventBufferEvent EventBuffer get Output	retourne une instance du tampon de sortie eventbuffer associé avec le tampon dévénements courant
EventBufferEvent EventBuffer get Output	retourne le tampon de sortie associ&eacute; avec le tampon d'&eacute;v&eacute;nement courant
EventBufferEvent read $size	nombre maximal doctets à lire
EventBufferEvent string read	retourne la chaîne de données lues depuis le tampon dentrée
EventBufferEvent string read int $size	lit les donn&eacute;es du tampon
EventBufferEvent read Buffer $buf	tampon cible
EventBufferEvent bool read Buffer	retourne true en cas de succès false sinon
EventBufferEvent bool read Buffer EventBuffer $buf	vide le contenu entier du tampon d'entr&eacute;e et le place dans le tampon
EventBufferEvent set Callbacks $eventcb	fonction de rappel pour un événement de modification de statut
EventBufferEvent set Callbacks $arg	une variable qui sera passée à toutes les fonctions de rappel
EventBufferEvent set Callbacks $writecb	fonction de rappel pour un événement décriture
EventBufferEvent set Callbacks $readcb	fonction de rappel pour un événement de lecture
EventBufferEvent void set Callbacks callable $readcb callable $writecb callable $eventcb string $arg	assigne les fonctions de rappel pour la lecture l'&eacute;criture et les statuts d'&eacute;v&eacute;nements
EventBufferEvent set Watermark $events	masque de constantes event::read event::write ou les deux
EventBufferEvent set Watermark $highmark	valeur maximale du filigrane
EventBufferEvent set Watermark $lowmark	valeur minimale du filigrane
EventBufferEvent void set Watermark int $events int $lowmark int $highmark	active la lecture et / ou l'&eacute;criture des filigranes
EventBufferEvent string ssl Error	retourne la chaîne derreur openssl rapporté par le tampon dévénement ou $false; sil ny a plus aucune erreur à retourner
EventBufferEvent string ssl Error	retourne l'erreur openssl la plus r&eacute;cente rapport&eacute;e par le tampon d'&eacute;v&eacute;nement
EventBufferEvent ssl Filter $options	une ou plusieurs options de tampon dévénement
EventBufferEvent ssl Filter $ctx	objet de la classe eventsslcontext
EventBufferEvent ssl Filter $state	le statut courant de la connexion ssl : eventbufferevent::ssl_open eventbufferevent::ssl_accepting ou eventbufferevent::ssl_connecting
EventBufferEvent ssl Filter $base	evenement de base associé
EventBufferEvent ssl Filter $underlying	un socket de tampon dévénement à utiliser pour ce ssl
EventBufferEvent EventBufferEvent ssl Filter	retourne un nouvel objet eventbufferevent ssl
EventBufferEvent EventBufferEvent ssl Filter EventBase $base EventBufferEvent $underlying EventSslContext $ctx int $state int $options	cr&eacute;e un nouveau tampon d'&eacute;v&eacute;nement ssl dont les donn&eacute;es seront envoy&eacute;es via un autre tampon d'&eacute;v&eacute;nement
EventBufferEvent string ssl Get Cipher Info	retourne une description textuelle du cipher en cas de succès ou bien false si une erreur survient
EventBufferEvent string ssl Get Cipher Info	retourne une description textuelle d'un cipher
EventBufferEvent string ssl Get Cipher Name	retourne le nom du cipher courant pour la connexion ssl ou false si une erreur survient
EventBufferEvent string ssl Get Cipher Name	retourne le nom du cipher courant pour la connexion ssl
EventBufferEvent string ssl Get Protocol	retourne le nom du protocole utilisé pour la connexion ssl courante
EventBufferEvent string ssl Get Protocol	retourne le nom du protocole utilis&eacute; pour la connexion ssl courante
EventBufferEvent write $data	données à ajouter dans le tampon
EventBufferEvent bool write	retourne true en cas de succès false sinon
EventBufferEvent bool write string $data	ajoute des donn&eacute;es dans un tampon d'&eacute;v&eacute;nement de sortie
EventBufferEvent write Buffer $buf	objet eventbuffer source
EventBufferEvent bool write Buffer	retourne true en cas de succès false sinon
EventBufferEvent bool write Buffer EventBuffer $buf	ajoute le contenu entier d'un tampon dans un tampon d'&eacute;v&eacute;nement de sortie
EventConfig avoid Method $method	la méthode à ignorer
EventConfig bool avoid Method	retourne true en cas de succès false sinon
EventConfig bool avoid Method int $method	demande &agrave; libevent d'ignorer une m&eacute;thode d'&eacute;v&eacute;nement sp&eacute;cifique
EventConfig set Max Dispatch Interval $max_callbacks	un nombre de fonctions de rappel après lequel libevent doit arrêter lexécution des fonctions de rappel et vérifier la présence dautres événements ou -1 sil ne doit pas y avoir de telle limite
EventConfig set Max Dispatch Interval $min_priority	une priorité en dessous de laquelle max_interval et max_callbacks ne doivent pas être pris en compte
EventConfig set Max Dispatch Interval $max_interval	un intervalle après lequel libevent va arrêter lexécution des fonctions de rappel et vérifier la présence dautres événements ou 0 sil ne doit pas y avoir de tel intervalle
EventConfig void set Max Dispatch Interval int $max_interval int $max_callbacks int $min_priority	evite l'inversion des priorit&eacute;s
EventDnsBase add Nameserver Ip $ip	la chaîne représentant le serveur de noms ; soit une adresse ipv4 soit une adresse ipv6 soit une adresse ipv4 avec un port ipv4:port soit une adresse ipv6 avec un port ipv6 :port
EventDnsBase bool add Nameserver Ip	retourne true en cas de succès false sinon
EventDnsBase bool add Nameserver Ip string $ip	ajoute un serveur de noms &agrave; la base dns
EventDnsBase construct $initialize	si largument initialize vaut true il tentera de configurer la sensibilité de base du dns fournie par le système opérant
EventDnsBase construct $base	evénement de base
EventDnsBase EventBase construct	retourne un objet eventdnsbase
EventDnsBase EventBase construct EventBase $base bool $initialize	construit un objet eventdnsbase
EventDnsBase int count Nameservers	retourne le nombre de serveurs de noms configurés pas nécessairement le nombre de serveurs de noms en cours de fonctionnement
EventDnsBase int count Nameservers	r&eacute;cup&egrave;re le nombre de serveurs de noms configur&eacute;s
EventDnsBase load Hosts $hosts	chemin vers le fichier hosts
EventDnsBase bool load Hosts	retourne true en cas de succès false sinon
EventDnsBase bool load Hosts string $hosts	charge un fichier hosts au m&ecirc;me format que / etc / hosts
EventDnsBase parse Resolv Conf $flags	détermine les informations à analyser depuis le fichier resolv
EventDnsBase parse Resolv Conf $filename	chemin vers le fichier resolv
EventDnsBase bool parse Resolv Conf	retourne true en cas de succès false sinon
EventDnsBase bool parse Resolv Conf int $flags string $filename	analyse le fichier resolv
EventDnsBase set Option $value	la valeur de loption
EventDnsBase set Option $option	les options de configuration actuellement disponibles sont : ndots timeout max-timeouts max-inflight et attempts
EventDnsBase bool set Option	retourne true en cas de succès false sinon
EventDnsBase bool set Option string $option string $value	d&eacute;finit la valeur d'une option de configuration
EventDnsBase set Search Ndots $ndots	le nombre de points
EventDnsBase bool set Search Ndots	retourne true en cas de succès false sinon
EventDnsBase bool set Search Ndots int $ndots	d&eacute;finit le param&egrave;tre 'ndots' pour les recherches
EventHttp accept $socket	socket flux ou descripteur numérique de fichier représentant un socket prêt à accepter les connexions
EventHttp bool accept	retourne true en cas de succès false sinon
EventHttp bool accept mixed $socket	autorise un serveur http &agrave; accepter les connexions sur le socket ou la ressource sp&eacute;cifi&eacute;e
EventHttp add Server Alias $alias	lalias à ajouter
EventHttp bool add Server Alias	retourne true en cas de succès false sinon
EventHttp bool add Server Alias string $alias	ajoute un alias du serveur pour l'objet serveur http
EventHttp remove Server Alias $alias	lalias à supprimer
EventHttp bool remove Server Alias	retourne true en cas de succès false sinon
EventHttp bool remove Server Alias string $alias	supprime un alias sur le serveur
EventHttp set Allowed Methods $methods	un masque de constantes eventhttprequest::cmd_*
EventHttp void set Allowed Methods int $methods	d&eacute;finit les m&eacute;thodes http support&eacute;es et accept&eacute;es dans les requ&ecirc;tes sur ce serveur et pass&eacute;es aux fonctions de rappel utilisateurs
EventHttp set Default Callback $cb	la fonction de rappel de type callable
EventHttp set Default Callback $arg	données personnalisées fournies par lutilisateur à la fonction de rappel
EventHttp set Default Callback $arg	données personnalisées
EventHttp set Default Callback $req	eventhttprequest objet
EventHttp void set Default Callback string $cb string $arg	d&eacute;finit la fonction de rappel par d&eacute;faut pour g&eacute;rer les requ&ecirc;tes qui ne sont pas attrapp&eacute;es par des fonctions de rappel sp&eacute;cifiques
EventHttp set Max Body Size $value	la taille du corps en octets
EventHttp void set Max Body Size int $value	d&eacute;finit la taille maximale du corps de la demande
EventHttp set Max Headers Size $value	la taille maximale des en-têtes en octets
EventHttp void set Max Headers Size int $value	d&eacute;finit la taille maximale des en-t&ecirc;tes http
EventHttp set Timeout $value	le délai dattente maximal en secondes
EventHttp void set Timeout int $value	d&eacute;finit le d&eacute;lai d'attente maximal pour une requ&ecirc;te http
EventHttpConnection construct $port	le port de connexion
EventHttpConnection construct $dns_base	si vaut null la résolution du nom dhôte sera bloquante
EventHttpConnection construct $address	ladresse de connexion
EventHttpConnection construct $base	base dévénement associé
EventHttpConnection construct $ctx	lobjet de la classe eventsslcontext
EventHttpConnection EventBase construct	retourne un objet eventhttpconnection
EventHttpConnection EventBase construct EventBase $base EventDnsBase $dns_base string $address int $port EventSslContext $ctx	construit un objet eventhttpconnection
EventHttpConnection get Peer $address	adresse du pair
EventHttpConnection get Peer $port	port du pair
EventHttpConnection void get Peer string $address int $port	r&eacute;cup&egrave;re l'adresse et le port distant associ&eacute;s avec la connexion
EventHttpConnection make Request $uri	luri associé à la requête
EventHttpConnection make Request $req	lobjet représentant la connexion sur laquelle la requête sera envoyée
EventHttpConnection make Request $type	une constante eventhttprequest::cmd_*
EventHttpConnection bool make Request	retourne true en cas de succès false sinon
EventHttpConnection bool make Request EventHttpRequest $req int $type string $uri	effectue une requ&ecirc;te http sur la connexion sp&eacute;cifi&eacute;e
EventHttpConnection set Close Callback $callback	fonction de rappel à appeler lors de la fermeture de la connexion
EventHttpConnection void set Close Callback callable $callback mixed $data	d&eacute;fini une fonction de rappel lors de la fermeture de la connexion
EventHttpConnection set Local Port $port	le numéro du port
EventHttpConnection void set Local Port int $port	d&eacute;finit le port local depuis lequel les connexions sont effectu&eacute;es
EventHttpConnection set Max Body Size $max_size	la taille maximale du cors en octets
EventHttpConnection void set Max Body Size string $max_size	d&eacute;finit la taille maximale du corps pour la connexion
EventHttpConnection set Retries $retries	le nombre limite de tentatives
EventHttpConnection void set Retries int $retries	d&eacute;finit le nombre de tentatives pour la connexion
EventHttpConnection set Timeout $timeout	le délai dattente maximal en secondes
EventHttpConnection void set Timeout int $timeout	d&eacute;finit le d&eacute;lai d'attente maximal pour la connexion
EventHttpRequest add Header $value	valeur de len-tête
EventHttpRequest add Header $key	nom de len-tête
EventHttpRequest add Header $type	une des constantes eventhttprequest::*_header
EventHttpRequest bool add Header	retourne true en cas de succès
EventHttpRequest bool add Header string $key string $value int $type	ajoute un en-t&ecirc;te http aux en-t&ecirc;tes de la requ&ecirc;te
EventHttpRequest void clear Headers	supprime tous les en-t&ecirc;tes depuis la liste des en-t&ecirc;tes de la requ&ecirc;te
EventHttpRequest void close Connection	ferme les connexions http associ&eacute;es
EventHttpRequest construct $callback	fonction de rappel appelée avec le chemin demandé
EventHttpRequest construct $data	données utilisateur personnalisées à passer à la fonction de rappel
EventHttpRequest callable construct	retourne un objet eventhttprequest
EventHttpRequest callable construct callable $callback mixed $data	construit un objet eventhttprequest
EventHttpRequest EventBufferEvent get Buffer Event	retourne un objet eventbufferevent
EventHttpRequest EventBufferEvent get Buffer Event	retourne l'objet eventbufferevent
EventHttpRequest string get Host	retourne lhôte demandé
EventHttpRequest string get Host	retourne l'h&ocirc;te demand&eacute;
EventHttpRequest EventBuffer get Input Buffer	retourne le buffer dentrée
EventHttpRequest EventBuffer get Input Buffer	retourne le buffer d'entr&eacute;e
EventHttpRequest array get Input Headers	retourne le tableau associatif contenant les en-têtes dentrée
EventHttpRequest array get Input Headers	retourne le tableau associatif contenant les en-t&ecirc;tes d'entr&eacute;e
EventHttpRequest EventBuffer get Output Buffer	retourne le buffer de sortie de la requête
EventHttpRequest EventBuffer get Output Buffer	retourne le buffer de sortie de la requ&ecirc;te
EventHttpRequest void get Output Headers	retourne un tableau associatif contenant les en-t&ecirc;tes de sortie
EventHttpRequest int get Response Code	retourne le code de la réponse
EventHttpRequest int get Response Code	retourne le code de la r&eacute;ponse
EventHttpRequest string get Uri	retourne luri de la requête
EventHttpRequest string get Uri	retourne l'uri de la requ&ecirc;te
EventHttpRequest send Error $reason	une brève explication de lerreur
EventHttpRequest send Error $error	le code erreur http
EventHttpRequest void send Error int $error string $reason	envoi un message d'erreur html au client
EventHttpRequest send Reply Chunk $buf	le bloc de données à envoyer comme partie de la réponse
EventHttpRequest void send Reply Chunk EventBuffer $buf	envoi un autre bloc de donn&eacute;es comme partie d'un bloc de r&eacute;ponse entrant
EventHttpRequest send Reply Start $code	le code réponse http à envoyer
EventHttpRequest send Reply Start $reason	un bref message à envoyer avec le code réponse
EventHttpRequest void send Reply Start int $code string $reason	initialise un bloc de r&eacute;ponse
EventListener construct $data	données utilisateur personnalisées attachées au paramètre cb
EventListener construct $backlog	contrôle le nombre maximal de connexions en attente que la pile réseau autorise à patienter dans un statut non encore accepté ; voir la documentation de la fonction listen de votre système pour plus de détails
EventListener construct $base	base dévénement associée
EventListener construct $cb	un callable qui sera invoqué lorsquune nouvelle connexion sera reçue
EventListener construct $flags	un masque de constantes eventlistener::opt_*
EventListener construct $target	peut être une chaîne de caractères une ressource de socket ou un flux associé avec un socket
EventListener EventBase construct	retourne un objet eventlistener représentant lécouteur dévénement de connexion
EventListener EventBase construct EventBase $base callable $cb mixed $data int $flags int $backlog mixed $target	cr&eacute;e un nouvel &eacute;couteur de connexion associ&eacute; avec la base d'&eacute;v&eacute;nement
EventListener bool disable	retourne true en cas de succès false sinon
EventListener bool disable	d&eacute;sactive un objet d'&eacute;coute d'&eacute;v&eacute;nement de connexion
EventListener bool enable	retourne true en cas de succès false sinon
EventListener bool enable	active un objet d'&eacute;coute d'&eacute;v&eacute;nement de connexion
EventListener void get Base	retourne la base d'&eacute;v&eacute;nement associ&eacute;e avec l'&eacute;couteur d'&eacute;v&eacute;nements
EventListener set Callback $fd	le descripteur de fichier ou une ressource associée à lécoute
EventListener set Callback $listener	lobjet eventlistener
EventListener set Callback $arg	données utilisateur personnalisées attachées à la fonction de rappel
EventListener set Callback $address	tableau de deux éléments : ladresse ip et le port du serveur
EventListener set Callback $cb	la nouvelle fonction de rappel pour les nouvelles connexions
EventListener void set Callback callable $cb mixed $arg	le but de setcallback
EventListener set Error Callback $listener	lobjet eventlistener
EventListener set Error Callback $data	données personnalisées de lutilisateur à associer à la fonction de rappel
EventListener set Error Callback $cb	la fonction de rappel pour lerreur
EventListener void set Error Callback string $cb	d&eacute;finit la fonction de rappel sur l'&eacute;v&egrave;nement d'erreur
EventSslContext construct $method	une des constantes eventsslcontext::*_method
EventSslContext construct $options	un tableau associatif doptions de contexte ssl
EventSslContext string construct	retourne un objet eventsslcontext
EventSslContext string construct string $method string $options	construit un contexte openssl &agrave; utiliser avec les classes event
EventUtil - construct	le constructeur
EventUtil get Last Socket Errno $socket	ressource de socket flux ou descripteur de fichier de socket
EventUtil int get Last Socket Errno	retourne le numéro derreur le plus récemment survenu sur le socket errno
EventUtil int get Last Socket Errno mixed $socket	retourne le num&eacute;ro d'erreur le plus r&eacute;cemment survenu sur le socket
EventUtil get Last Socket Error $socket	ressource de socket flux ou descripteur de fichier de socket
EventUtil string get Last Socket Error	retourne lerreur la plus récemment survenue sur le socket
EventUtil string get Last Socket Error mixed $socket	retourne l'erreur la plus r&eacute;cemment survenue sur le socket
EventUtil get Socket Fd $socket	socket ou flux
EventUtil int get Socket Fd	retourne true en cas de succès false sinon
EventUtil int get Socket Fd mixed $socket	retourne le descripteur de fichier d'un socket ou d'un flux
EventUtil get Socket Name $address	paramètre de sortie
EventUtil get Socket Name $port	paramètre de sortie
EventUtil get Socket Name $socket	ressource de socket flux ou descripteur de fichier de socket
EventUtil bool get Socket Name	retourne true en cas de succès false sinon
EventUtil bool get Socket Name mixed $socket string $address mixed $port	r&eacute;cup&egrave;re l'adresse courant li&eacute;e au socket
EvFork construct $priority	priorité de lobservateur
EvFork construct $data	données personalisées associées à lobservateur
EvFork construct $callback	voir aussi les fonctions de rappels pour les observateurs
EvFork callable construct	retourne lobjet evfork en cas de succès
EvFork callable construct callable $callback mixed $data int $priority	construit l'objet observateur evfork
EvIdle construct $priority	priorité de lobservateur
EvIdle construct $callback	voir les fonctions de rappel des observateurs
EvIdle construct $data	données personnalisées associées avec lobservateur
EvIdle callable construct	returne un objet evidle en cas de succès
EvIdle callable construct callable $callback mixed $data int $priority	construit l'objet observateur evidle
EvIdle create Stopped $callback	voir les fonctions de rappel des observateurs
EvIdle create Stopped $priority	priorité de lobservateur
EvIdle create Stopped $data	données personnalisées avec lobservateur
EvIdle object create Stopped	retourne un objet evidle en cas de succès
EvIdle object create Stopped string $callback mixed $data int $priority	cr&eacute;e une instance d'un objet observateur evidle
EvIo set $fd	identique à la méthode evio::__construct()
EvIo set $events	identique à la méthode evio::__construct()
EvIo void set mixed $fd int $events	configure l'observateur
EvLoop int backend	retourne un entier décrivant le backend utilisé par libev
EvLoop int backend	retourne un entier d&eacute;crivant le backend utilis&eacute; par libev
EvLoop EvCheck check	retourne un objet evcheck object en cas de succès
EvLoop EvCheck check string $callback string $data string $priority	cr&eacute;e un objet evcheck associ&eacute; avec l'instance de la boucle d'&eacute;v&eacute;nements courante
EvLoop EvChild child	retourne un objet evchild en cas de succès
EvLoop EvChild child string $pid string $trace string $callback string $data string $priority	cr&eacute;e un objet evchild associ&eacute; avec la boucle d'&eacute;v&eacute;nements courante
EvLoop EvEmbed embed	retourne lobjet evembed en cas de succès
EvLoop EvEmbed embed string $other string $callback string $data string $priority	cr&eacute;e une instance de l'observateur evembed associ&eacute; avec l'objet de l'evloop courant
EvLoop EvFork fork	retourne lobjet evfork en cas de succès
EvLoop EvFork fork callable $callback mixed $data int $priority	cr&eacute;e un objet evfork watcher associ&eacute; avec l'instance de la boucle de l'&eacute;v&eacute;nement courant
EvLoop EvIdle idle	retourne un objet evidle en cas de succès
EvLoop EvIdle idle callable $callback mixed $data int $priority	cr&eacute;e un objet evidle watcher associ&eacute; avec l'instance de la boucle de l'&eacute;v&eacute;nement courant
EvLoop void invoke Pending	invoque tous les watchers en attente pendant que leurs statuts de file d'attente ne soient r&eacute;initialis&eacute;s
EvLoop EvIo io	retourne un objet evio en cas de succès
EvLoop EvIo io mixed $fd int $events callable $callback mixed $data int $priority	cr&eacute;e un objet evio watcher associ&eacute; avec l'instance de la boucle de l'&eacute;v&eacute;nement courant
EvLoop void loop Fork	doit &ecirc;tre appel&eacute; apr&egrave;s un fork
EvLoop EvPrepare prepare	retourne un objet evprepare en cas de succès
EvLoop EvPrepare prepare callable $callback mixed $data int $priority	cr&eacute;e un objet evprepare watcher associ&eacute; avec l'instance de la boucle d'&eacute;v&eacute;nement courant
EvLoop void run int $flags	commence &agrave; v&eacute;rifier les &eacute;v&eacute;nements et &agrave; appeler les fonctions de rappel de la boucle
EvLoop EvSignal signal	retourne un objet evsignal en cas de succès
EvLoop EvSignal signal int $signum callable $callback mixed $data int $priority	cr&eacute;e un objet evsignal watcher associ&eacute; avec l'instance de la boucle d'&eacute;v&eacute;nement courant
EvLoop EvStat stat	retourne un objet evstat en cas de succès
EvLoop EvStat stat string $path double $interval callable $callback mixed $data int $priority	cr&eacute;e un objet evstat watcher associ&eacute; avec l'instance de la boucle d'&eacute;v&eacute;nement courant
EvLoop void suspend	suspend la boucle
EvLoop EvTimer timer	retourne lobjet evtimer en cas de succès
EvLoop EvTimer timer double $after double $repeat callable $callback mixed $data int $priority	cr&eacute;e un objet evtimer watcher associ&eacute; avec l'instance de la boucle d'&eacute;v&eacute;nement courant
EvLoop void verify	effectue des v&eacute;rifications de consistence interne pour le d&eacute;bogage
EvPeriodic construct $reschedule_cb	fonction de rappel reschedule
EvPeriodic construct $priority	priorité du watcher
EvPeriodic construct $callback	voir les fonctions de rappel des watchers
EvPeriodic construct $data	données personnalisées à associer avec le watcher
EvPeriodic construct $offset	voir les modes dopération du watcher périodique
EvPeriodic construct $interval	voir les modes dopération du watcher périodique
EvPeriodic double construct	retourne un objet evperiodic en cas de succès
EvPeriodic double construct double $offset string $interval callable $reschedule_cb callable $callback mixed $data int $priority	construit un objet watcher evperiodic
EvPeriodic create Stopped $reschedule_cb	fonction de rappel reschedule
EvPeriodic create Stopped $priority	priorité du watcher
EvPeriodic create Stopped $offset	see periodic watcher operation modes
EvPeriodic create Stopped $callback	voir les fonctions de rappel des watchers
EvPeriodic create Stopped $data	données personnalisées à associer avec le watcher
EvPeriodic create Stopped $interval	voir les modes dopération du watcher périodique
EvPeriodic EvPeriodic create Stopped	retourne un objet watcher evperiodic en cas de succès
EvPeriodic EvPeriodic create Stopped double $offset double $interval callable $reschedule_cb callable $callback mixed $data int $priority	cr&eacute;e un watcher evperiodic stopp&eacute;
EvSignal create Stopped $data	données personnalisées à associer avec le watcher
EvSignal create Stopped $callback	voir les fonctions de rappel des watchers
EvSignal create Stopped $priority	priorité du watcher
EvSignal create Stopped $signum	numéro du signal
EvSignal EvSignal create Stopped	retourne un objet evsignal en cas de succès
EvSignal EvSignal create Stopped int $signum callable $callback mixed $data int $priority	cr&eacute;e un objet watcher evsignal stopp&eacute;
EvStat array attr	retourne la valeur la plus r&eacute;cente d&eacute;tect&eacute;e par ev
EvStat construct $path	le chemin pour lequel on attend un modification de statut
EvStat construct $data	données personnalisées à associer avec le watcher
EvStat construct $callback	voir les fonctions de rappel watcher
EvStat construct $interval	intervalle de détection dune modification ; doit valoir normalement 0
EvStat construct $priority	les priorités du watcher
EvStat string construct	retourne un objet evstat watcher en cas de succès
EvStat string construct string $path double $interval callable $callback mixed $data int $priority	construit un objet evstat watcher
EvStat create Stopped $path	le chemin pour lequel on doit attendre un changement de statut
EvStat create Stopped $callback	voir les fonctions de rappel watcher
EvStat create Stopped $data	données personnalisées à associer avec le watcher
EvStat create Stopped $interval	intervalle de détection de la modification ; doit normalement valoir 0
EvStat create Stopped $priority	les priorités du watcher
EvStat void create Stopped string $path double $interval callable $callback mixed $data int $priority	cr&eacute;e un objet evstat watcher stopp&eacute;
EvStat void prev	retourne le jeu pr&eacute;c&eacute;dent retourn&eacute; par evstat::attr
EvStat bool stat	retourne true si path existe
EvStat bool stat	initialise l'appel &agrave; stat
EvTimer void again	re-d&eacute;marre le watcher timer
EvTimer create Stopped $repeat	si ce paramètre vaut 0
EvTimer create Stopped $data	données personnelles associées au watcher
EvTimer create Stopped $callback	voir les fonctions de rappel watcher
EvTimer create Stopped $after	configure le time pour lancer un trigger après after secondes
EvTimer create Stopped $priority	les priorités du watcher
EvTimer EvTimer create Stopped	retourne un objet evtimer watcher en cas de succès
EvTimer EvTimer create Stopped double $after double $repeat callable $callback mixed $data int $priority	cr&eacute;e un objet evtimer watcher stopp&eacute;
EvWatcher int clear	dans le cas où lobservateur est en attente retourne le bitset revents comme si sa fonction de rappel était invoquée
EvWatcher int clear	efface le statut d'attente de l'observateur
EvWatcher - construct	constructeur d'objet observateur
EvWatcher feed $revents	masque de bits de lobservateur de réception dévénements
EvWatcher void feed int $revents	alimente les revents fournis dans la boucle d'&eacute;v&eacute;nements
EvWatcher EvLoop get Loop	retourne un objet evloop responsable de lobservateur
EvWatcher EvLoop get Loop	retourne la boucle responsable de l'observateur
EvWatcher invoke $revents	masque de bits de lobservateur qui reçoit les événements
EvWatcher void invoke int $revents	invoque la fonction de rappel de l'observateur avec le masque de bits des &eacute;v&eacute;nements re&ccedil;us fournis
EvWatcher keepalive $value	si vaut false le watcher ne va pas empêcher les méthodes ev::run() / evloop::run() de se terminer même si le watcher est actif
EvWatcher bool keepalive	retourne le précédent statut
EvWatcher bool keepalive bool $value	garde la boucle active
EvWatcher set Callback $callback	voir les fonctions de rappel pour les watchers
EvWatcher void set Callback callable $callback	d&eacute;finit une nouvelle fonction de rappel pour le watcher
EvWatcher void start	d&eacute;marre le watcher
EvWatcher void stop	arr&ecirc;te le watcher
Exception void clone	clone l'exception
Exception int get Line	retourne le numéro de la ligne où lexception a été créée
Exception int get Line	r&eacute;cup&egrave;re la ligne dans laquelle l'exception est survenue
Exception Exception get Previous	retourne la précédente exception si disponible null sinon
Exception Exception get Previous	retourne l'exception pr&eacute;c&eacute;dente
Exception array get Trace	retourne la trace de la pile de lexception sous la forme dun tableau
Exception array get Trace	r&eacute;cup&egrave;re la trace de la pile
Exception string get Trace As String	retourne la trace de la pile de lexception sous la forme dune chaîne de caractères
Exception string get Trace As String	r&eacute;cup&egrave;re la trace de la pile en tant que cha&icirc;ne
Exception string to String	retourne la représentation de lexception sous la forme dune chaîne de caractères
Exception string to String	repr&eacute;sente l'exception sous la forme d'une cha&icirc;ne
FANNConnection construct $weight	la valeur de poids de la connexion
FANNConnection construct $from_neuron	le numéro de la position du neurone de départ
FANNConnection construct $to_neuron	le numéro de la position du neurone de fin
FANNConnection int construct int $from_neuron int $to_neuron float $weight	le constructeur de connexion
FANNConnection int get From Neuron	la position du neurone de départ
FANNConnection int get From Neuron	retourne la position du neurone de d&eacute;part
FANNConnection int get To Neuron	la position du neurone de fin
FANNConnection int get To Neuron	retourne la position du neurone de fin
FANNConnection set Weight $weight	le poids de la connexion
FANNConnection bool set Weight	retourne true en cas de succès false sinon
FANNConnection bool set Weight float $weight	d&eacute;fini le poids de la connexion
FilesystemIterator construct $flags	les options qui affectent le comportement des méthodes
FilesystemIterator construct $path	le chemin du dossier dans lequel on va travailler
FilesystemIterator string construct string $path int $flags	construit un objet filesystemiterator
FilesystemIterator void next	passe au fichier suivant
FilesystemIterator void rewind	recommence &agrave; lire le dossier
FilesystemIterator set Flags $flags	les options à configurer
FilesystemIterator void set Flags int $flags	configure les options
FilterIterator bool accept	true si lélément courant est acceptable et sinon false
FilterIterator bool accept	v&eacute;rifie si l'&eacute;l&eacute;ment courant de l'it&eacute;rateur est acceptable
FilterIterator construct $iterator	litérateur à filtrer
FilterIterator Iterator construct	lobjet filteriterator
FilterIterator Iterator construct Iterator $iterator	construit un filteriterator
finfo string buffer string $string int $options resource $context	alias de de finfo_buffer
finfo bool set flags int $options	alias de de finfo_set_flags
function abs $number	la valeur numérique à traiter
function number abs	la valeur absolue du nombre number
function number abs mixed $number	valeur absolue
function acosh $arg	la valeur à traiter
function float acosh	larc cosinus hyperbolique de arg
function float acosh float $arg	arc cosinus hyperbolique
function array apache get modules	un tableau contenant les modules apache chargés
function array apache get modules	retourne la liste des modules apache charg&eacute;s
function apache getenv $walk_to_top	si passé à true récupération de la variable de haut niveau disponible pour toutes les couches dapache
function apache getenv $variable	la variable denvironnement apache
function string apache getenv	la valeur de la variable denvironnement dapache en cas de réussite ou false en cas déchec
function string apache getenv string $variable bool $walk_to_top	lit une variable de processus apache
function apache lookup uri $filename	le nom du fichier uri qui sera demandé
function object apache lookup uri	un objet des informations relatives à luri
function object apache lookup uri string $filename	effectue une requ&ecirc;te partielle pour l'uri sp&eacute;cifi&eacute;e et renvoie toutes les informations la concernant
function array apache request headers	un tableau associatif avec tous les en-têtes http de la requête courante ou false en cas déchec
function array apache request headers	r&eacute;cup&egrave;re tous les en-t&ecirc;tes http de la requ&ecirc;te
function array apache response headers	un tableau de tous les en-têtes de réponse dapache en cas de réussite ou false si une erreur survient
function array apache response headers	r&eacute;cup&egrave;re tous les en-t&ecirc;tes de r&eacute;ponse http
function apache setenv $value	la nouvelle valeur de variable
function apache setenv $variable	la variable denvironnement qui sera modifiée
function apache setenv $walk_to_top	si passé à true assignation de la variable de haut niveau disponible pour toutes les couches dapache
function bool apache setenv	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool apache setenv string $variable string $value bool $walk_to_top	modifie une variable de processus apache
function apc add $var	la variable à stocker
function apc add $ttl	durée de vie ; stocke la variable var dans le cache pendant ttl secondes
function apc add $values	les noms comme clés les variables comme valeurs
function apc add $key	stocke la variable en utilisant son nom
function bool apc add	retourne true si quelque chose a bien été aujouté au cache false sinon
function bool apc add string $key mixed $var int $ttl	met en cache une nouvelle variable dans le magasin de donn&eacute;es
function apc bin dump $files	les fichiers
function apc bin dump $user_vars	les variables utilisateur
function string apc bin dump	retourne une sortie binaire de chaque fichier et chaque variable utilisateur depuis le cache apc
function string apc bin dump array $files array $user_vars	r&eacute;cup&egrave;re une sortie binaire des fichiers et variables utilisateur sp&eacute;cifi&eacute;s
function apc bin loadfile $filename	le nom du fichier contenant la sortie binaire typiquement obtenu depuis apc_bin_dumpfile()
function apc bin loadfile $flags	soit apc_bin_verify_crc32 soit apc_bin_verify_md5 soit les deux combinés
function apc bin loadfile $context	le contexte du fichier
function bool apc bin loadfile	retourne true en cas de succès ou alors false
function bool apc bin loadfile string $filename resource $context int $flags	charge une sortie binaire depuis un fichier dans le cache fichiers ou utilisateur d'apc
function apc cas $old	lancienne valeur la valeur actuellement stockée
function apc cas $key	la clé de la valeur à mettre à jour
function apc cas $new	la nouvelle valeur à utiliser
function bool apc cas	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool apc cas string $key int $old int $new	met &agrave; jour une ancienne valeur par une nouvelle
function apc compile file $filename	chemin complet ou relatif vers un fichier php qui sera compilé et stocké dans le cache
function mixed apc compile file	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed apc compile file string $filename bool $atomic	stocke un fichier dans le cache en &eacute;vitant tous les filtres
function apc dec $key	la clé de la valeur à décrémenter
function apc dec $step	le pas ou la valeur à décrémenter
function apc dec $success	optionnellement passe une valeur booléenne indiquant succès ou échec à la variable référencée par ce paramètre
function int apc dec	retourne la valeur courante de lentrée correspondant à key en cas de succès ou false si une erreur survient
function int apc dec string $key int $step bool $success	d&eacute;cr&eacute;mente un nombre stock&eacute;
function apc define constants $key	la clé key correspondant au nom du jeu de constantes stockées
function apc define constants $case_sensitive	le comportement par défaut pour les constantes est dêtre déclarées en tenant compte de la casse ; i
function apc define constants $constants	un tableau associatif de paires constant_name = > value
function bool apc define constants	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool apc define constants string $key array $constants bool $case_sensitive	d&eacute;finit un jeu de constantes pour la r&eacute;cup&eacute;ration et la d&eacute;finition en masse
function apc delete file $keys	les fichiers à effacer
function mixed apc delete file	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed apc delete file mixed $keys	efface des fichiers du cache opcode
function apc fetch $success	vaut true en cas de succès et false si une erreur survient
function apc fetch $key	la clé key utilisée pour stocker la valeur avec apc_store()
function mixed apc fetch	la variable stockée ou les variables du tableau en cas de succès false si une erreur survient
function mixed apc fetch mixed $key bool $success	r&eacute;cup&egrave;re une variable stock&eacute;e dans le cache
function apc inc $step	le pas ou la valeur à incrémenter
function apc inc $success	optionnellement passe une valeur booléenne indiquant succès ou échec à la variable référencée par ce paramètre
function apc inc $key	la clé de la valeur à incrémenter
function int apc inc	retourne la valeur courante de lentrée correspondant à key en cas de succès ou false si une erreur survient
function int apc inc string $key int $step bool $success	incr&eacute;mente un nombre stock&eacute;
function apc store $var	la variable à stocker
function apc store $values	les noms comme clés les variables comme valeurs
function apc store $key	stocke la variable en utilisant ce nom
function apc store $ttl	temps de vie : stocke la variable var dans le cache pour ttl secondes
function bool apc store	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool apc store string $key mixed $var int $ttl	met en cache une variable dans le magasin
function apd breakpoint $debug_level	un entier qui est formé en ajoutant les constantes xxx_trace
function bool apd breakpoint	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool apd breakpoint int $debug_level	stoppe l'interpr&eacute;teur et attend un cr depuis le socket
function array apd callstack	un tableau contenant la pile dappel courante
function array apd callstack	retourne la pile d'appel courante dans un tableau
function apd clunk $warning	lalerte à lancer
function apd clunk $delimiter	le délimiteur
function void apd clunk string $warning string $delimiter	lance une alerte et un callstack
function apd croak $warning	lalerte à lancer
function apd croak $delimiter	le délimiteur
function void apd croak string $warning string $delimiter	lance une erreur un callstack et sort
function void apd dump function table	affiche la table courante de fonction
function array apd dump persistent resources	un tableau contenant toutes les ressources persistantes
function array apd dump persistent resources	retourne toutes les ressources persistantes dans un tableau
function array apd get active symbols	un tableau multidimensionnel contenant toutes les variables
function array apd get active symbols	r&eacute;cup&egrave;re un tableau contenant les noms des variables courantes de port&eacute;e locale
function apd set session trace socket $debug_level	un entier qui est formé en ajoutant les constantes xxx_trace
function apd set session trace socket $port	vous pouvez utiliser nimporte quel port mais les numéros de port les plus élevés sont plus recommandés que les moins élevés qui risquent dêtre utilisés par dautres services du système
function apd set session trace socket $tcp_server	ip ou socket unix comme un fichier du serveur tcp
function apd set session trace socket $socket_type	peut prendre les valeurs des constantes af_unix pour un socket à base de fichiers ou apd_af_inet pour des sockets tcp / ip standard
function bool apd set session trace socket	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool apd set session trace socket string $tcp_server int $socket_type int $port int $debug_level	d&eacute;marre la session de d&eacute;boguage &agrave; distance
function apd set session trace $dump_directory	le dossier dans lequel le fichier sera écrit
function apd set session trace $debug_level	un entier qui est formé en ajoutant les constantes xxx_trace
function void apd set session trace int $debug_level string $dump_directory	d&eacute;marre la session de d&eacute;boguage apd
function array change key case $case	soit case_upper majuscules soit case_lower minuscules valeur par défaut
function array change key case $array	le tableau à traiter
function array array change key case	retourne un tableau dont les clés ont été transformées en majuscule ou en minuscule ou false si array nest pas un tableau
function array array change key case array $array int $case	change la casse de toutes les cl&eacute;s d'un tableau
function array combine $values	tableau de valeurs à utiliser
function array combine $keys	tableau de clés à utiliser
function array array combine	retourne le tableau combiné ou false si le nombre déléments de chaque tableau nest pas identique
function array array combine array $keys array $values	cr&eacute;e un tableau &agrave; partir de deux autres tableaux
function array count values $array	le tableau de valeurs à compter
function array array count values	retourne un tableau associatif de valeurs ayant les clés correspondant à array et leurs nombres comme valeurs
function array array count values array $array	compte le nombre de valeurs d'un tableau
function array diff assoc	plus de tableaux à comparer
function array diff assoc $array2	le tableau à comparer
function array diff assoc $array1	le tableau à comparer
function array array diff assoc	retourne un tableau contenant toutes les valeurs du tableau array1 qui ne sont pas présentes dans les autres tableaux
function array array diff assoc array $array1 array $array2	calcule la diff&eacute;rence de deux tableaux en prenant aussi en compte les cl&eacute;s
function array diff key	plus de tableaux à comparer
function array diff key $array2	le tableau à comparer
function array diff key $array1	le tableau à comparer
function array array diff key	retourne un tableau contenant toutes les entrées du tableau array1 dont les clés ne sont présentes dans aucun des autres tableaux
function array array diff key array $array1 array $array2	calcule la diff&eacute;rence de deux tableaux en utilisant les cl&eacute;s pour comparaison
function array diff uassoc	plus de tableaux à comparer
function array diff uassoc $array2	le tableau à comparer
function array diff uassoc $array1	le tableau à comparer
function array diff uassoc $key_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array array diff uassoc	retourne un tableau contenant toutes les entrées du tableau array1 qui ne sont présentes dans aucun autre tableau
function array array diff uassoc array $array1 array $array2 callable $key_compare_func	calcule la diff&eacute;rence entre deux tableaux associatifs &agrave; l'aide d'une fonction de rappel
function array diff ukey	plus de tableaux à comparer
function array diff ukey $array2	le tableau à comparer
function array diff ukey $array1	le tableau à comparer
function array diff ukey $key_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array array diff ukey	retourne un tableau contenant toutes les entrées du tableau array1 qui ne sont présentes dans aucun autre tableau
function array array diff ukey array $array1 array $array2 callable $key_compare_func	calcule la diff&eacute;rence entre deux tableaux en utilisant une fonction de rappel sur les cl&eacute;s pour comparaison
function array fill keys $keys	tableau de valeurs qui sera utilisé comme clés
function array fill keys $value	valeur à utiliser pour remplir le tableau
function array array fill keys	retourne le tableau rempli
function array array fill keys array $keys mixed $value	remplit un tableau avec des valeurs en sp&eacute;cifiant les cl&eacute;s
function array fill $value	valeur à utiliser pour remplir le tableau
function array fill $start_index	le premier index du tableau retourné
function array fill $num	nombre déléments à insérer
function array array fill	retourne le tableau rempli
function array array fill int $start_index int $num mixed $value	remplit un tableau avec une m&ecirc;me valeur
function array filter $array	le tableau à évaluer
function array filter $callback	la fonction utilisateur à utiliser si aucune fonction utilisateur nest fournie toutes les entrées du tableau array valant false voir la conversion en booléen seront effacées
function array filter $flag	drapeau indiquant quels sont les arguments à envoyer au paramètre callback : array_filter_use_key - ne passer que la clé comme seul argument à callback au lieu de la valeur array_filter_use_both - passer à la fois la valeur et la clé comme arguments de callback au lieu de la valeur
function array array filter	retourne le tableau filtré
function array array filter array $array callable $callback int $flag	filtre les &eacute;l&eacute;ments d'un tableau gr&acirc;ce &agrave; une fonction utilisateur
function array intersect key $array1	le tableau contenant les clés maîtres à vérifier
function array intersect key	une liste variable de tableaux à comparer
function array intersect key $array2	un tableau contenant les clés à comparer
function array array intersect key	retourne un tableau associatif contenant toutes les entrées du tableau array1 qui ont des clés présentes dans tous les arguments
function array array intersect key array $array1 array $array2	calcule l'intersection de deux tableaux en utilisant les cl&eacute;s pour comparaison
function array intersect uassoc	liste variable de tableaux à comparer
function array intersect uassoc $key_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array intersect uassoc $array2	premier tableau dont on doit comparer les clés
function array intersect uassoc $array1	tableau initial pour la comparaison des autres tableaux
function array array intersect uassoc	retourne les valeurs du tableau array1 dont les valeurs existent dans tous les autres arguments
function array array intersect uassoc array $array1 array $array2 callable $key_compare_func	calcule l'intersection de deux tableaux avec des tests sur les index compare les index en utilisant une fonction de rappel
function array intersect ukey $array2	premier tableau utilisé pour comparer les clés
function array intersect ukey $array1	tableau initial pour la comparaison des tableaux
function array intersect ukey $key_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array intersect ukey	liste variable de tableaux à comparer
function array array intersect ukey	retourne les valeurs du tableau array1 dont les clés existent dans tous les arguments
function array array intersect ukey array $array1 array $array2 callable $key_compare_func	calcule l'intersection de deux tableaux en utilisant une fonction de rappel sur les cl&eacute;s pour comparaison
function array intersect	une liste variable de tableaux à comparer
function array intersect $array1	le tableau contenant les valeurs maîtres à vérifier
function array intersect $array2	un tableau contenant les valeurs à comparer
function array array intersect	retourne un tableau contenant toutes les valeurs du tableau array1 dont les valeurs existent dans tous les arguments
function array array intersect array $array1 array $array2	calcule l'intersection de tableaux
function array key exists $key	valeur à vérifier
function array key exists $array	un tableau contenant les clés à vérifier
function bool array key exists	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool array key exists mixed $key array $array	v&eacute;rifie si une cl&eacute; existe dans un tableau
function array map	liste des tableaux à exécuter via la fonction de callback
function array map $callback	la fonction de rappel à exécuter pour chaque élément de chaque tableau
function array map $array1	un tableau à exécuter via la fonction de callback
function array array map	retourne un tableau contenant tous les éléments du tableau array1 après avoir appliqué la fonction de callback sur chacun deux
function array array map callable $callback array $array1	applique une fonction sur les &eacute;l&eacute;ments d'un tableau
function array merge recursive	liste variable de tableaux à rassembler récursivement
function array merge recursive $array1	tableau initial à rassembler
function array array merge recursive	un tableau de valeurs résultantes de la fusion des arguments
function array array merge recursive array $array1	combine plusieurs tableaux ensemble r&eacute;cursivement
function array merge $array1	tableau initial à fusionner
function array merge	liste de tableaux à fusionner
function array array merge	retourne le tableau résultant
function array array merge array $array1	fusionne plusieurs tableaux en un seul
function array pad $size	nouvelle taille du tableau
function array pad $value	valeur à insérer si largument array est plus petit que largument size
function array pad $array	tableau initial de valeurs à compléter
function array array pad	retourne une copie du tableau array complétée jusquà la taille de size avec la valeur value
function array array pad array $array int $size mixed $value	compl&egrave;te un tableau avec une valeur jusqu'&agrave; la longueur sp&eacute;cifi&eacute;e
function array push $value1	la première valeur à insérer à la fin du tableau array
function array push $array	le tableau dentrée
function int array push	retourne le nouveau nombre déléments dans le tableau
function int array push array $array mixed $value1	empile un ou plusieurs &eacute;l&eacute;ments &agrave; la fin d'un tableau
function array rand $num	spécifie le nombre dentrées que vous voulez récupérer
function array rand $array	le tableau dentrée
function mixed array rand	lorsque vous ne récupérez quune seule entrée la fonction array_rand() retourne la clé dune entrée choisie aléatoirement
function mixed array rand array $array int $num	prend une ou plusieurs valeurs au hasard dans un tableau
function array reduce $callback	mixed callback mixed $carry mixed $item carry contient la valeur retournée de litération précédente ; dans le cas de la première itération ce sera la valeur du paramètre initial
function array reduce $carry	contient la valeur retournée de litération précédente ; dans le cas de la première itération ce sera la valeur du paramètre initial
function array reduce $initial	si largument optionnel initial est disponible il sera utilisé pour initialiser le processus ou bien comme valeur finale si le tableau est vide
function array reduce $item	contient la valeur de litération courante
function array reduce $array	le tableau dentrée
function mixed array reduce	retourne la valeur résultante
function mixed array reduce array $array callable $callback mixed $initial	r&eacute;duit it&eacute;rativement un tableau
function array reverse $preserve_keys	si définit à true les clés numériques seront préservées
function array reverse $array	le tableau dentrée
function array array reverse	retourne le tableau dans lordre inverse
function array array reverse array $array bool $preserve_keys	inverse l'ordre des &eacute;l&eacute;ments d'un tableau
function array shift $array	le tableau dentrée
function mixed array shift	retourne la valeur dépilée ou null si le tableau est vide ou si la valeur dentrée nest pas un tableau
function mixed array shift array $array	d&eacute;pile un &eacute;l&eacute;ment au d&eacute;but d'un tableau
function array udiff assoc $value_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array udiff assoc $array2	le second tableau
function array udiff assoc $array1	le premier tableau
function array array udiff assoc	array_udiff_assoc() retourne un tableau contenant toutes les valeurs de array1 qui ne sont présentes dans aucun autre des arguments array2
function array array udiff assoc array $array1 array $array2 callable $value_compare_func	calcule la diff&eacute;rence entre des tableaux avec v&eacute;rification des index compare les donn&eacute;es avec une fonction de rappel
function array uintersect assoc $value_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array uintersect assoc $array2	le second tableau
function array uintersect assoc $array1	le premier tableau
function array array uintersect assoc	retourne un tableau contenant toutes les valeurs du tableau array1 qui sont présentes dans tous les autres arguments
function array array uintersect assoc array $array1 array $array2 callable $value_compare_func	calcule l'intersection de deux tableaux avec des tests sur l'index compare les donn&eacute;es en utilisant une fonction de rappel
function array uintersect uassoc $key_compare_func	fonction de rappel utilisée pour la comparaison des clés
function array uintersect uassoc $value_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array uintersect uassoc $array2	le second tableau
function array uintersect uassoc $array1	le premier tableau
function array array uintersect uassoc	retourne un tableau contenant toutes les valeurs du tableau array1 qui sont présentes dans tous les arguments
function array array uintersect uassoc array $array1 array $array2 callable $value_compare_func callable $key_compare_func	calcule l'intersection de deux tableaux avec des tests sur l'index compare les donn&eacute;es et les indexes des deux tableaux en utilisant une fonction de rappel s&eacute;par&eacute;e
function array uintersect $value_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function array uintersect $array2	le second tableau
function array uintersect $array1	le premier tableau
function array array uintersect	retourne un tableau contenant toutes les valeurs du tableau array1 qui sont présentes dans tous les arguments
function array array uintersect array $array1 array $array2 callable $value_compare_func	calcule l'intersection de deux tableaux compare les donn&eacute;es en utilisant une fonction de rappel
function array unique $array	le tableau dentrée
function array array unique	retourne le tableau filtré
function array array unique array $array int $sort_flags	d&eacute;doublonne un tableau
function array unshift $value1	première valeur à empiler
function array unshift $array	le tableau dentrée
function int array unshift	retourne le nouveau nombre déléments du tableau array
function int array unshift array $array mixed $value1	empile un ou plusieurs &eacute;l&eacute;ments au d&eacute;but d'un tableau
function array values $array	le tableau
function array array values	retourne un tableau de valeurs indexé
function array array values array $array	retourne toutes les valeurs d'un tableau
function array walk recursive $callback	typiquement callback prend 2 paramètres
function array walk recursive $userdata	si le paramètre optionnel userdata est fourni il sera passé comme troisième paramètre à la fonction de rappel callback
function array walk recursive $array	le tableau dentrée
function bool array walk recursive	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool array walk recursive array $array callable $callback mixed $userdata	applique une fonction de rappel r&eacute;cursivement &agrave; chaque membre d'un tableau
function arsort $sort_flags	vous pouvez modifier le comportement de cette fonction en utilisant le paramètre optionnel sort_flags
function arsort $array	le tableau dentrée
function bool arsort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool arsort array $array int $sort_flags	trie un tableau en ordre inverse
function asin $arg	largument à traiter
function float asin	larc sinus de arg en radians
function float asin float $arg	arc sinus
function asinh $arg	largument à traiter
function float asinh	larc sinus hyperbolique de arg
function float asinh float $arg	arc sinus hyperbolique
function assert options $value	une nouvelle valeur optionnelle pour loption
function assert options $what	options dassertions option directive valeur par défaut description assert_active assert
function mixed assert options	retourne la valeur originale de loption ou bien false en cas derreur
function mixed assert options int $what mixed $value	fixe et lit diff&eacute;rentes options d'assertions
function atan $arg	largument à traiter
function float atan	larc tangent de arg en radians
function float atan float $arg	arc tangente
function atanh $arg	largument à traiter
function float atanh	larc tangente hyperbolique de arg
function float atanh float $arg	arc tangente hyperbolique
function base convert $frombase	la base number dans laquelle il est
function base convert $number	le nombre à convertir
function base convert $tobase	la base dans laquelle on doit convertir le nombre number
function string base convert	le nombre number converti dans la base tobase
function string base convert string $number int $frombase int $tobase	convertit un nombre entre des bases arbitraires
function bbcode add element $bbcode_container	ressource bbcode_container retournée par bbcode_create()
function bbcode add element $tag_rules	un tableau associatif contenant les règles danalyse ; voir bbcode_create() pour les clés disponibles
function bbcode add element $tag_name	la nouvelle balise à ajouter au bbcode_container tag_set
function bool bbcode add element	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bbcode add element resource $bbcode_container string $tag_name array $tag_rules	ajoute un &eacute;l&eacute;ment bbcode
function bbcode destroy $bbcode_container	ressource bbcode_container retournée par bbcode_create()
function bool bbcode destroy	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bbcode destroy resource $bbcode_container	ferme une ressource bbcode_container
function bbcode parse $bbcode_container	ressource bbcode_container retournée par bbcode_create()
function bbcode parse $to_parse	la chaîne à analyser
function string bbcode parse	retourne la chaine analysée ou false si une erreur survient
function string bbcode parse resource $bbcode_container string $to_parse	analyse une cha&icirc;ne en suivant le jeu de r&egrave;gles donn&eacute;es
function bbcode set arg parser $bbcode_arg_parser	ressource bbcode_container retournée par bbcode_create()
function bbcode set arg parser $bbcode_container	ressource bbcode_container retournée par bbcode_create()
function bool bbcode set arg parser	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bbcode set arg parser resource $bbcode_container resource $bbcode_arg_parser	attache un analyseur pour g&eacute;rer un autre jeu de r&egrave;gles
function bbcode set flags $flags	le jeu de drapeaux qui doivent être appliquée aux options de bbcode_container
function bbcode set flags $bbcode_container	ressource bbcode_container retournée par bbcode_create()
function bbcode set flags $mode	une des constantes bbcode_set_flags_* à utiliser ou supprimer
function bool bbcode set flags	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bbcode set flags resource $bbcode_container int $flags int $mode	sp&eacute;cifie ou modifie des options d'analyseurs bbcode
function bccomp $right_operand	lopérande de droite sous la forme dune chaîne de caractères
function bccomp $left_operand	lopérande de gauche sous la forme dune chaîne de caractères
function bccomp $scale	le paramètre optionnel scale est utilisé pour définir le nombre de digits après la décimale qui sera utilisé dans la comparaison
function int bccomp	retourne 0 si les deux opérandes sont égaux 1 si lopérande left_operand est plus grand que lopérande right_operand -1 sinon
function int bccomp string $left_operand string $right_operand int $scale	compare deux nombres de grande taille
function bcmod $modulus	le modulo sous la forme dune chaîne de caractères
function bcmod $left_operand	lopérande de gauche sous la forme dune chaîne de caractères
function string bcmod	retourne le modulo sous la forme dune chaîne de caractères ou null si modulus vaut 0
function string bcmod string $left_operand string $modulus	retourne le reste d'une division entre nombres de grande taille
function bcompiler load exe $filename	le chemin vers le fichier exe sous la forme dune chaîne de caractères
function bool bcompiler load exe	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler load exe string $filename	lit et cr&eacute;e des classes depuis un fichier exe bcompiler
function bcompiler load $filename	le chemin vers le fichier compressé avec bzip2 sous la forme dune chaîne de caractères
function bool bcompiler load	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler load string $filename	lit et cr&eacute;e les classes depuis un fichier compress&eacute; en bzip2
function bcompiler parse class $class	le nom de la classe sous la forme dune chaîne de caractères
function bool bcompiler parse class	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler parse class string $class string $callback	lit le bytecode d'une classe et revient &agrave; une fonction utilisateur
function bcompiler read $filehandle	une ressource de fichier retournée par la fonction fopen()
function bool bcompiler read	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler read resource $filehandle	lit et cr&eacute;e les classes depuis un pointeur de fichier
function bcompiler write class $filehandle	une ressource de fichier retournée par la fonction fopen()
function bcompiler write class $className	le nom de la classe sous la forme dune chaîne de caractères
function bool bcompiler write class	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler write class resource $filehandle string $className string $extends	&eacute;crit une classe d&eacute;finie en bytecode
function bcompiler write exe footer $filehandle	une ressource de fichier retournée par la fonction fopen()
function bcompiler write exe footer $startpos	la position dans le fichier à partir duquel commence le bytecode et pouvant être obtenu en utilisant la fonction ftell()
function bool bcompiler write exe footer	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler write exe footer resource $filehandle int $startpos	&eacute;crit &agrave; la position start et jusqu'&agrave; la fin du fichier de type exe
function bcompiler write footer $filehandle	une ressource de fichier retournée par la fonction fopen()
function bool bcompiler write footer	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler write footer resource $filehandle	&eacute;crit le caract&egrave;re \x00 pour indiquer la fin des donn&eacute;es compil&eacute;es
function bcompiler write header $write_ver	peut être utilisé pour écrire le bytecode dans un format utilisé précédemment vous pouvez donc lutiliser avec les anciennes versions de bcompiler
function bcompiler write header $filehandle	une ressource de fichier retournée par la fonction fopen()
function bool bcompiler write header	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcompiler write header resource $filehandle string $write_ver	&eacute;crit l'en-t&ecirc;te bcompiler
function bcpow $right_operand	lopérande de droite sous la forme dune chaîne de caractères
function bcpow $left_operand	lopérande de gauche sous la forme dune chaîne de caractères
function bcpow $scale	ce paramètre optionnel est utilisé pour définir le nombre de digits après la décimale à placer dans le résultat
function string bcpow	retourne le résultat sous la forme dune chaîne de caractères
function string bcpow string $left_operand string $right_operand int $scale	&eacute;l&egrave;ve un nombre &agrave; une puissance donn&eacute;e
function bcpowmod $right_operand	lopérande de droite sous la forme dune chaîne de caractères
function bcpowmod $modulus	le modulo sous la forme dune chaîne de caractères
function bcpowmod $left_operand	lopérande de gauche sous la forme dune chaîne de caractères
function bcpowmod $scale	ce paramètre optionnel est utilisé pour définir le nombre de digits après la décimale à placer dans le résultat
function string bcpowmod	retourne le résultat sous la forme dune chaîne de caractères ou null si modulus vaut 0
function string bcpowmod string $left_operand string $right_operand string $modulus int $scale	calcule le reste modulo d'un nombre &eacute;lev&eacute; &agrave; une puissance
function bcscale $scale	le facteur de précision
function bool bcscale	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool bcscale int $scale	sp&eacute;cifie le nombre de d&eacute;cimales par d&eacute;faut pour toutes les fonctions
function bcsqrt $operand	lopérande sous la forme dune chaîne de caractères
function bcsqrt $scale	ce paramètre optionnel est utilisé pour définir le nombre de digits après la décimale à placer dans le résultat
function string bcsqrt	retourne la racine carrée de lopérande sous la forme dune chaîne de caractères ou null si lopérande operand est négatif
function string bcsqrt string $operand int $scale	r&eacute;cup&egrave;re la racine carr&eacute;e d'un nombre de grande taille
function bin2hex $str	une chaîne de caractères
function string bin2hex	retourne la représentation hexadécimale de la chaîne fournie
function string bin2hex string $str	convertit des donn&eacute;es binaires en repr&eacute;sentation hexad&eacute;cimale
function bind textdomain codeset $codeset	le jeu de caractères
function bind textdomain codeset $domain	le domaine
function string bind textdomain codeset	une chaîne de caractères en cas de succès
function string bind textdomain codeset string $domain string $codeset	sp&eacute;cifie le jeu de caract&egrave;res utilis&eacute; pour les messages du domaine domain
function bindec $binary_string	la chaîne binaire à convertir
function number bindec	la valeur décimale de binary_string
function number bindec string $binary_string	convertit de binaire en d&eacute;cimal
function bindtextdomain $directory	le chemin vers le dossier
function bindtextdomain $domain	le domaine
function string bindtextdomain	le chemin complet vers le domaine
function string bindtextdomain string $domain string $directory	fixe le chemin d'un domaine
function blenc encrypt $encryption_key	la clé que blenc va utiliser pour crypter le contenu
function blenc encrypt $encodedfile	le nom du fichier où blenc va sauvegarder le code source crypté
function blenc encrypt $plaintext	le code source à crypter
function string blenc encrypt	blenc va retourner la clé redistribuable qui doit être sauvegardée dans key_file : le chemin de key_file est spécifié au moment de lexécution avec loption blenc
function string blenc encrypt string $plaintext string $encodedfile string $encryption_key	crypte un script php avec blenc
function boolval $var	la valeur scalaire qui sera convertie en booléen
function boolean boolval	la valeur booléenne du paramètre var
function boolean boolval mixed $var	r&eacute;cup&egrave;re la valeur bool&eacute;enne d'une variable
function bson decode $bson	lobjet bson à délinéariser
function array bson decode	retourne lobjet bson délinéarisé
function array bson decode string $bson	d&eacute;lin&eacute;arise un objet bson en un tableau php
function bson encode $anything	la variable à linéariser
function string bson encode	retourne la chaîne linéarisée
function string bson encode mixed $anything	lin&eacute;arise une variable php en une cha&icirc;ne bson
function bzclose $bz	le pointeur de fichier
function int bzclose	cette fonction retourne true en cas de succès ou false si une erreur survient
function int bzclose resource $bz	ferme un fichier bzip2
function bzcompress $blocksize	spécifie la taille de bloc utilisée durant la compression et doit être un nombre de 1 à 9 sachant que 9 représente la meilleure compression mais quelle utilise plus de ressources pour se faire
function bzcompress $workfactor	contrôle le comportement de la compression dans les pires cas de données hautement répétitives
function bzcompress $source	la chaîne à compresser
function mixed bzcompress	la chaîne compressée ou un numéro derreur si une erreur survient
function mixed bzcompress string $source int $blocksize int $workfactor	compresse une cha&icirc;ne avec bzip2
function bzerror $bz	le pointeur de fichier
function array bzerror	retourne un tableau associatif avec le code erreur dans lentrée errno et le message derreur dans lentrée errstr
function array bzerror resource $bz	retourne le num&eacute;ro et le message d'erreur bzip2 dans un tableau
function bzopen $mode	similaire à la fonction fopen() seules les options r pour lecture et w pour écriture sont supportées
function bzopen $file	le nom du fichier à ouvrir ou une ressource de flux existante
function resource bzopen	si louverture échoue bzopen() retourne false sinon il retourne un pointeur vers le fichier ouvert
function resource bzopen mixed $file string $mode	ouvre un fichier compress&eacute; avec bzip2
function bzread $length	si non spécifié bzread() lira 1024 non-compressé) octets à la fois
function bzread $bz	le pointeur de fichier
function string bzread	retourne les données non-compressées ou false si une erreur survient
function string bzread resource $bz int $length	lecture binaire d'un fichier bzip2
function bzwrite $data	les données écrites
function bzwrite $length	si fourni lécriture sarrêtera après que length non-compressé) octets aient été écrits ou bien que la fin de data soit atteinte le premier des deux qui survient
function bzwrite $bz	le pointeur de fichier
function int bzwrite	retourne le nombre doctets écrits ou false si une erreur survient
function int bzwrite resource $bz string $data int $length	&eacute;criture binaire dans un fichier bzip2
function cal days in month $year	année dans le calendrier sélectionné
function cal days in month $month	mois dans le calendrier sélectionné
function cal days in month $calendar	calendrier à utiliser pour le calcul
function int cal days in month	le nombre de jours dans le mois sélectionné dans le calendrier fourni
function int cal days in month int $calendar int $month int $year	retourne le nombre de jours dans un mois pour une ann&eacute;e et un calendrier donn&eacute;
function cal from jd $calendar	calendrier à utiliser
function cal from jd $jd	jour julien sous la forme dun entier
function array cal from jd	retourne un tableau contenant des informations sur le calendrier comme le mois le jour lannée le jour de la semaine les noms abrégés et complets des jours de la semaine et du mois et la date sous la forme dune chaîne de caractères mois / jour / année
function array cal from jd int $jd int $calendar	convertit le nombre de jours julien en un calendrier sp&eacute;cifique
function cal to jd $day	le jour sous la forme dun nombre
function cal to jd $year	lannée sous la forme dun nombre
function cal to jd $calendar	calendrier à convertir
function cal to jd $month	le mois sous la forme dun nombre
function int cal to jd	le nombre de jour julien
function int cal to jd int $calendar int $month int $day int $year	convertit un calendrier en nombre de jours julien
function call user func array $param_arr	les paramètres à passer à la fonction de rappel sous la forme dun tableau indexé
function call user func array $callback	la fonction de rappel à appeler
function mixed call user func array	retourne la valeur retournée par la fonction de rappel ou false si une erreur survient
function mixed call user func array callable $callback array $param_arr	appelle une fonction de rappel avec les param&egrave;tres rassembl&eacute;s en tableau
function call user func $parameter	0 ou plus de paramètres à passer à la fonction de rappel
function call user func $callback	la fonction de rappel à appeler
function mixed call user func	retourne la valeur retournée par la fonction de rappel ou false si une erreur survient
function mixed call user func callable $callback mixed $parameter	appelle une fonction de rappel fournie par le premier argument
function chdb create $data	un tableau contenant les paires clé-valeur à stocker dans le fichier chdb
function chdb create $pathname	le nom du fichier à créer
function bool chdb create	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool chdb create string $pathname array $data	cr&eacute;e un fichier chdb
function checkdate $month	le mois doit être compris entre 1 et 12
function checkdate $year	lannée est comprise entre 1 et 32767 inclus
function checkdate $day	le jour doit être un jour autorisé par le mois donné
function bool checkdate	retourne true si la date fournie est valide false sinon
function bool checkdate int $month int $day int $year	valide une date gr&eacute;gorienne
function checkdnsrr $host	host peut être soit une adresse ip au format numérique soit un nom dhôte
function checkdnsrr $type	type peut être lune des valeurs suivantes : a mx ns soa ptr cname aaaa a6 srv naptr txt ou any
function bool checkdnsrr	retourne true si un enregistrement a été trouvé et false en cas derreur ou si aucun enregistrement na été trouvé
function bool checkdnsrr string $host string $type	r&eacute;solution dns d'une adresse ip
function chgrp $group	un nom ou un numéro de groupe
function chgrp $filename	chemin vers le fichier
function bool chgrp	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool chgrp string $filename mixed $group	change le groupe d'un fichier
function chown $user	un nom ou un numéro dutilisateur
function chown $filename	chemin vers le fichier
function bool chown	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool chown string $filename mixed $user	change le propri&eacute;taire du fichier
function chr $ascii	le code ascii
function string chr	retourne le caractère à partir de son code ascii
function string chr int $ascii	retourne un caract&egrave;re &agrave; partir de son code ascii
function chunk split $body	la chaîne à scinder
function chunk split $end	le caractère de fin de la séquence
function chunk split $chunklen	la taille de la portion
function string chunk split	retourne la chaîne scindée
function string chunk split string $body int $chunklen string $end	scinde une cha&icirc;ne
function class alias $alias	le nom de lalias de la classe
function class alias $original	la classe originale
function class alias $autoload	si lon doit charger automatiquement si la classe originale nest pas trouvée
function bool class alias	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool class alias string $original string $alias bool $autoload	cr&eacute;e un alias de classe
function class parents $autoload	si true autorise cette fonction à charger la classe automatiquement grâce à la méthode magique __autoload()
function class parents $class	un objet instance ou une chaîne de caractères nom de la classe
function array class parents	retourne un tableau ou false en cas derreur
function array class parents mixed $class bool $autoload	retourne la classe parente d'une classe
function clearstatcache $filename	nettoie le cache réel ainsi que le cache stat dun fichier spécifique
function clearstatcache $clear_realpath_cache	si lon doit ou non vider le cache réel
function void clearstatcache bool $clear_realpath_cache string $filename	efface le cache de stat
function string cli get process title	retourne le titre du processus courant sous la forme dune chaîne de caractères ou null si une erreur survient
function string cli get process title	retourne le titre du processus courant
function cli set process title $title	le nouveau titre
function bool cli set process title	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool cli set process title string $title	d&eacute;finit le titre du processus
function closedir $dir_handle	la ressource de dossier ouverte précédemment avec opendir()
function void closedir resource $dir_handle	ferme le pointeur sur le dossier
function string com create guid	retourne le guid sous la forme dune chaîne de caractères
function string com create guid	g&eacute;n&egrave;re un identifiant unique global guid
function com event sink $sinkinterface	php devrait être capable dutiliser le type par défaut de dispinterface spécifié par la typelib associée avec lobjet comobject mais vous pouvez changer cela en spécifiant dans le paramètre sinkinterface le dispinterface que vous souhaitez utiliser
function com event sink $sinkobject	sinkobject devra être une instance de la classe avec des noms de méthodes suivant le dispinterface désiré ; vous devriez utiliser com_print_typeinfo() pour laide à la génération dun gabarit de classe pour cela
function bool com event sink	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool com event sink variant $comobject object $sinkobject mixed $sinkinterface	connecte des &eacute;v&eacute;nements d'un objet com sur un objet php
function int connection status	retourne les bits de statut de la connexion qui peuvent être utilisés avec les constantes connection_xxx pour déterminer le statut de la connexion
function int connection status	retourne les bits de statut de la connexion http
function convert cyr string $from	le jeu de caractères cyrillique comme simple caractère
function convert cyr string $str	la chaîne à convertir
function convert cyr string $to	le jeu de caractères cyrillique cible comme simple caractère
function string convert cyr string	retourne la chaîne convertie
function string convert cyr string string $str string $from string $to	convertit une cha&icirc;ne d'un jeu de caract&egrave;res cyrillique &agrave; l'autre
function convert uudecode $data	les données au format uuencode
function string convert uudecode	retourne les données décodées sous la forme dune chaîne de caractères ou false si une erreur survient
function string convert uudecode string $data	d&eacute;code une cha&icirc;ne au format uuencode
function convert uuencode $data	les données à encoder
function string convert uuencode	retourne les données au format uuencode ou false si une erreur survient
function string convert uuencode string $data	encode une cha&icirc;ne de caract&egrave;res en utilisant l'algorithme uuencode
function cos $arg	langle en radians
function float cos	le cosinus de arg
function float cos float $arg	cosinus
function cosh $arg	largument à traiter
function float cosh	le cosinus hyperbolique de arg
function float cosh float $arg	cosinus hyperbolique
function crack check $dictionary	le dictionnaire
function crack check $password	le mot de passe à tester
function bool crack check	retourne true si password est solide ou false sinon
function bool crack check resource $dictionary string $password	effectue une v&eacute;rification de mot de passe
function crack closedict $dictionary	le dictionnaire à fermer
function bool crack closedict	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool crack closedict resource $dictionary	ferme un dictionnaire cracklib
function crack opendict $dictionary	le chemin vers le dictionnaire cracklib
function resource crack opendict	retourne un identifiant de ressource de dictionnaire en cas de succès ou false si une erreur survient
function resource crack opendict string $dictionary	ouvre un nouveau dictionnaire cracklib
function create function $args	les arguments de la fonction
function create function $code	le code de la fonction
function string create function	retourne un nom de fonction unique sous la forme dune chaîne de caractères ou false si une erreur survient
function string create function string $args string $code	cr&eacute;e une fonction anonyme
function crypt $salt	si largument salt nest pas fourni le comportement est défini par limplémentation de lalgorithme et peut provoquer des résultats inattendus
function crypt $str	la chaîne à hacher
function string crypt	retourne la chaîne hachée ou une chaîne qui sera inférieure à 13 caractères et qui est garantie de différer du salt en cas derreur
function string crypt string $str string $salt	hachage &agrave; sens unique ind&eacute;chiffrable
function ctype alnum $text	la chaîne testée
function bool ctype alnum	retourne true si tous les caractères de text sont soit des lettres soit des chiffres false sinon
function bool ctype alnum string $text	v&eacute;rifie qu'une cha&icirc;ne est alphanum&eacute;rique
function ctype alpha $text	la chaîne testée
function bool ctype alpha	retourne true si tous les caractères de text est une lettre de la locale courante false sinon
function bool ctype alpha string $text	v&eacute;rifie qu'une cha&icirc;ne est alphab&eacute;tique
function ctype digit $text	la chaîne testée
function bool ctype digit	retourne true si tous les caractères de text sont des entiers false sinon
function bool ctype digit string $text	v&eacute;rifie qu'une cha&icirc;ne est un entier
function ctype lower $text	la chaîne testée
function bool ctype lower	retourne true si tous les caractères de text sont en minuscule dans la locale courante
function bool ctype lower string $text	v&eacute;rifie qu'une cha&icirc;ne est en minuscules
function ctype print $text	la chaîne testée
function bool ctype print	retourne true si tous les caractères de text seront imprimables y compris les espaces blancs
function bool ctype print string $text	v&eacute;rifie qu'une cha&icirc;ne est imprimable
function ctype punct $text	la chaîne testée
function bool ctype punct	retourne true si tous les caractères de text sont des caractères de ponctuation false sinon
function bool ctype punct string $text	v&eacute;rifie qu'une cha&icirc;ne contient de la ponctuation
function ctype space $text	la chaîne testée
function bool ctype space	retourne true si tous les caractères de text vont créer des espaces blancs false sinon
function bool ctype space string $text	v&eacute;rifie qu'une cha&icirc;ne n'est faite que de caract&egrave;res blancs
function ctype upper $text	la chaîne testée
function bool ctype upper	retourne true si tous les caractères de text sont en majuscules dans la locale courante
function bool ctype upper string $text	v&eacute;rifie qu'une cha&icirc;ne est en majuscules
function cubrid affected rows $conn_identifier	le résultat
function cubrid affected rows $req_identifier	lidentifiant de requête ; il peut être retourné soit de la fonction cubrid_prepare() soit de la fonction cubrid_execute()
function int cubrid affected rows	nombre de lignes affectées par la dernière requête sql lorsquelle a réussi
function int cubrid affected rows resource $conn_identifier	r&eacute;cup&egrave;re le nombre de lignes affect&eacute;es par la derni&egrave;re requ&ecirc;te sql
function cubrid bind $bind_value	valeur actuelle à lier
function cubrid bind $bind_index	position des paramètres liés
function cubrid bind $req_identifier	identifiant de requête retourné par la fonction cubrid_prepare()
function cubrid bind $bind_value_type	un type de valeur à lier il est omis par défaut et en interne le type chaîne de caractères sera utilisé
function bool cubrid bind	true lorsque lopération a été réalisée avec succès
function bool cubrid bind resource $req_identifier int $bind_index mixed $bind_value string $bind_value_type	lie des valeurs &agrave; une requ&ecirc;te pr&eacute;par&eacute;e
function cubrid close $conn_identifier	lidentifiant de connexion cubrid
function bool cubrid close	true lorsque lopération a été réalisée avec succès
function bool cubrid close resource $conn_identifier	ferme une connexion cubrid
function cubrid column names $req_identifier	identifiant de requête
function array cubrid column names	un tableau de chaînes de caractères contenant les noms des colonnes lorsque lopération est un succès
function array cubrid column names resource $req_identifier	r&eacute;cup&egrave;re les noms de colonnes du r&eacute;sultat
function cubrid column types $req_identifier	identifiant de requête
function array cubrid column types	un tableau de chaînes de caractères contenant les types de colonnes lorsque lopération est un succès
function array cubrid column types resource $req_identifier	r&eacute;cup&egrave;re les types de colonnes du r&eacute;sultat
function cubrid connect with url $userid	le nom dutilisateur de la base de données
function cubrid connect with url $new_link	si un second appel est effectué à la fonction cubrid_connect_with_url() avec les mêmes arguments aucune nouvelle connexion ne sera établit et lidentifiant de la connexion déjà ouverte sera retourné à la place
function cubrid connect with url $passwd	le mot de passe de lutilisateur
function cubrid connect with url $conn_url	une chaîne de caractères contenant les informations de connexion au serveur
function resource cubrid connect with url	identifiant de connexion en cas de succès
function resource cubrid connect with url string $conn_url string $userid string $passwd bool $new_link	&eacute;tablit l'environnement pour une connexion au serveur cubrid
function cubrid connect $dbname	nom de la base de données
function cubrid connect $new_link	si un second appel est effectué à la fonction cubrid_connect() avec les mêmes arguments aucune nouvelle connexion ne sera établie et lidentifiant de la connexion déjà ouverte sera retourné à la place
function cubrid connect $host	nom dhôte ou adresse ip du serveur cubrid cas
function cubrid connect $passwd	mot de passe pour lutilisateur
function cubrid connect $port	numéro du port du serveur cubrid cas broker_port est configuré danns le fichier $cubrid / conf / cubrid_broker
function cubrid connect $userid	nom dutilisateur pour la base de données
function resource cubrid connect	un identifiant de connexion lorsque lopération a été réalisée avec succès
function resource cubrid connect string $host int $port string $dbname string $userid string $passwd bool $new_link	ouvre une connexion au serveur cubrid
function cubrid current oid $req_identifier	identifiant de requête
function string cubrid current oid	oid de la localisation du curseur courant lorsque lopération est un succès
function string cubrid current oid resource $req_identifier	r&eacute;cup&egrave;re l'oid de la localisation du curseur courant
function cubrid db name $result	le pointeur de résultat depuis un appel à la fonction cubrid_list_dbs()
function cubrid db name $index	lindex dans le jeu de résultats
function string cubrid db name	retourne le nom de la base de données en cas de succès et false si une erreur survient
function string cubrid db name array $result int $index	r&eacute;cup&egrave;re le nom de la base de donn&eacute;es depuis les r&eacute;sultats de cubrid_list_dbs
function cubrid drop $oid	oid de linstance que vous voulez supprimer
function cubrid drop $conn_identifier	identifiant de connexion
function bool cubrid drop	true en cas de succès
function bool cubrid drop resource $conn_identifier string $oid	supprime une instance en utilisant son oid
function cubrid errno $conn_identifier	lidentifiant de connexion cubrid
function int cubrid errno	retourne le numéro de lerreur issue lors de la dernière fonction cubrid ou 0 zéro si aucune erreur nest survenue
function int cubrid errno resource $conn_identifier	retourne la valeur num&eacute;rique d'un message d'erreur
function int cubrid error code facility	le niveau depuis le code erreur survenue : cubrid_facility_dbms cubrid_facility_cas cubrid_facility_cci cubrid_facility_client
function int cubrid error code facility	r&eacute;cup&egrave;re le niveau du code erreur
function int cubrid error code	le code erreur de la dernière erreur survenue ou 0 zéro si aucune erreur nest survenue
function int cubrid error code	r&eacute;cup&egrave;re le code erreur de la derni&egrave;re erreur survenue
function string cubrid error msg	le message derreur survenue
function string cubrid error msg	r&eacute;cup&egrave;re le message d'erreur de la derni&egrave;re erreur survenue
function cubrid error $connection	la connexion cubrid
function string cubrid error	le message de lerreur survenue
function string cubrid error resource $connection	r&eacute;cup&egrave;re le message de l'erreur
function cubrid execute $request_identifier	identifiant de requête pour la fonction cubrid_prepare()
function cubrid execute $sql	sql à exécuter
function cubrid execute $option	option dexécution de la requête : cubrid_include_oid cubrid_async cubrid_exec_query_all
function cubrid execute $conn_identifier	identifiant de connexion
function resource cubrid execute	un identifiant de requête lorsque lopération a été réalisée avec succès et que le premier paramètre est lidentifiant de connexion ; true lorsque lopération a été réalisée avec succès et que le premier paramètre est lidentifiant de requête
function resource cubrid execute resource $conn_identifier string $sql int $option	ex&eacute;cute une requ&ecirc;te sql pr&eacute;par&eacute;e
function cubrid fetch assoc $type	le type ne peut être que cubrid_lob ; ce paramètre sera utilisé uniquement lorsque vous avez besoin dutiliser un objet lob
function cubrid fetch assoc $result	le paramètre result provient dun appel à la fonction cubrid_execute()
function array cubrid fetch assoc	un tableau associatif en cas de succès
function array cubrid fetch assoc resource $result int $type	retourne un tableau associatif correspondant &agrave; la ligne r&eacute;cup&eacute;r&eacute;e
function cubrid fetch row $type	le type ne peut être que cubrid_lob ; ce paramètre sera utilisé uniquement lorsque vous avez besoin dutiliser un objet lob
function cubrid fetch row $result	le paramètre result provient dun appel à la fonction cubrid_execute()
function array cubrid fetch row	un tableau numérique en cas de succès
function array cubrid fetch row resource $result int $type	retourne un tableau num&eacute;rique avec les valeurs de la ligne courante
function cubrid fetch $result	le paramètre result provient de lappel à la fonction cubrid_execute()
function cubrid fetch $type	type du tableau à retourner : cubrid_num cubrid_assoc cubrid_both cubrid_object
function mixed cubrid fetch	tableau ou objet de résultat en cas de succès
function mixed cubrid fetch resource $result int $type	r&eacute;cup&egrave;re la prochaine ligne du jeu de r&eacute;sultats
function cubrid field len $result	le paramètre result provient de lappel à la fonction cubrid_execute()
function cubrid field len $field_offset	la position numérique du champ
function int cubrid field len	la longueur maximale en cas de succès
function int cubrid field len resource $result int $field_offset	r&eacute;cup&egrave;re la longueur maximale du champ sp&eacute;cifi&eacute;
function cubrid field name $result	le paramètre result provient de lappel à la fonction cubrid_execute()
function cubrid field name $field_offset	la position numérique du champ
function string cubrid field name	nom du champ spécifié par son index en cas de succès
function string cubrid field name resource $result int $field_offset	retourne le nom du champ sp&eacute;cifi&eacute;
function cubrid field seek $result	le paramètre result provient de lappel à la fonction cubrid_execute()
function cubrid field seek $field_offset	la position numérique du champ
function bool cubrid field seek	true en cas de succès
function bool cubrid field seek resource $result int $field_offset	d&eacute;place le curseur du jeu de r&eacute;sultats &agrave; une position sp&eacute;cifi&eacute;e
function cubrid field table $result	type du tableau des résultats retournés : cubrid_num cubrid_assoc cubrid_both
function cubrid field table $field_offset	la position numérique du champ
function string cubrid field table	nom de la table du champ spécifié en cas de succès
function string cubrid field table resource $result int $field_offset	retourne le nom de la table d'un champ sp&eacute;cifi&eacute;
function cubrid field type $field_offset	position numérique du champ
function cubrid field type $result	type du tableau du résultat récupéré : cubrid_num cubrid_assoc cubrid_both
function string cubrid field type	le type de la colonne en cas de succès
function string cubrid field type resource $result int $field_offset	retourne le type de la colonne correspondant &agrave; la position du champ fourni
function cubrid free result $req_identifier	identifiant de requête
function bool cubrid free result	true en cas de succès
function bool cubrid free result resource $req_identifier	lib&egrave;re la m&eacute;moire occup&eacute;e par les donn&eacute;es de r&eacute;sultat
function cubrid get class name $oid	oid de linstance dont vous voulez vérifier lexistence
function cubrid get class name $conn_identifier	identifiant de connexion
function string cubrid get class name	le nom de la classe en cas de succès
function string cubrid get class name resource $conn_identifier string $oid	r&eacute;cup&egrave;re le nom de la classe en utilisant son oid
function string cubrid get client info	une chaîne de caractères représentant la version de la bibliothèque cliente en cas de succès
function string cubrid get client info	retourne la version de la biblioth&egrave;que cliente
function cubrid get db parameter $conn_identifier	la connexion cubrid
function array cubrid get db parameter	un tableau associatif contenant les paramètres de la base de données cubrid en cas de succès
function array cubrid get db parameter resource $conn_identifier	retourne les param&egrave;tres de la base de donn&eacute;es cubrid
function cubrid get server info $conn_identifier	lidentifiant de connexion cubrid
function string cubrid get server info	une chaîne de caractères représentant la version du serveur cubrid en cas de succès
function string cubrid get server info resource $conn_identifier	retourne la version du serveur cubrid
function cubrid get $oid	oid de linstance depuis laquelle vous voulez lire
function cubrid get $attr	nom de lattribut que vous voulez lire
function cubrid get $conn_identifier	identifiant de connexion
function mixed cubrid get resource $conn_identifier string $oid mixed $attr	r&eacute;cup&egrave;re une colonne en utilisant son oid
function cubrid list dbs $conn_identifier	identifiant de connexion cubrid
function array cubrid list dbs	un tableau numérique contenant toutes les bases de données cubrid existantes en cas de succès
function array cubrid list dbs resource $conn_identifier	retourne un tableau contenant la liste de toutes les bases de donn&eacute;es cubrid existantes
function cubrid load from glo $oid	oid de linstance glo depuis laquelle vous voulez lire la donnée
function cubrid load from glo $file_name	nom du fichier où la sauvegarde de la donnée doit seffectuer
function cubrid load from glo $conn_identifier	identifiant de connexion
function int cubrid load from glo	true lorsque le processus est un succès
function int cubrid load from glo resource $conn_identifier string $oid string $file_name	lie une donn&eacute;e
function cubrid lob export $path_name	chemin vers le fichier
function cubrid lob export $lob_identifier	identifiant lob
function cubrid lob export $conn_identifier	identifiant de connexion
function bool cubrid lob export	true lorsque le processus est un succès
function bool cubrid lob export resource $conn_identifier resource $lob_identifier string $path_name	exporte des donn&eacute;es blob / clob vers un fichier
function cubrid lob get $sql	requête sql à exécuter
function cubrid lob get $conn_identifier	identifiant de connexion
function array cubrid lob get	retourne un tableau de ressources lob en cas de succès
function array cubrid lob get resource $conn_identifier string $sql	r&eacute;cup&egrave;re les donn&eacute;es blob / clob
function cubrid lob send $lob_identifier	identifiant lob
function cubrid lob send $conn_identifier	identifiant de connexion
function bool cubrid lob send	true en cas de succès
function bool cubrid lob send resource $conn_identifier resource $lob_identifier	lit les donn&eacute;es blob / clob et les envoye au navigateur
function cubrid lob size $lob_identifier	identifiant lob
function string cubrid lob size	une chaîne représentant la taille des données lob lorsque lopération a réussi
function string cubrid lob size resource $lob_identifier	r&eacute;cup&egrave;re la taille des donn&eacute;es blob / clob
function cubrid lob2 bind $req_identifier	identifiant de la demande résultant de la fonction cubrid_prepare()
function cubrid lob2 bind $bind_value	valeur actuelle pour le liage
function cubrid lob2 bind $bind_value_type	doit être blob ou clob et nest pas sensible à la casse
function cubrid lob2 bind $bind_index	position des paramètres liés
function bool cubrid lob2 bind	true lorsque le processus réussi
function bool cubrid lob2 bind resource $req_identifier int $bind_index mixed $bind_value string $bind_value_type	lie un objet lob ou une cha&icirc;ne de caract&egrave;res &agrave; un objet lob comme param&egrave;tre d'une requ&ecirc;te pr&eacute;par&eacute;e
function cubrid lob2 close $lob_identifier	un identifiant lob résultant de la fonction cubrid_lob2_new() ou récupéré depuis le jeu de résultats
function bool cubrid lob2 close	true en cas de succès
function bool cubrid lob2 close resource $lob_identifier	ferme un objet lob
function cubrid lob2 import $filename	le nom du fichier depuis lequel les données blob / clob doivent être importées
function cubrid lob2 import $lob_identifier	un identifiant lob résultat de la fonction cubrid_lob2_new() ou récupérer depuis le jeu de résultats
function bool cubrid lob2 import	true en cas de succès ou false si une erreur survient
function bool cubrid lob2 import resource $lob_identifier string $file_name	importe des donn&eacute;es blob / clob depuis un fichier
function cubrid lob2 seek $origin	ce paramètre peut prendre les valeurs suivantes : cubrid_cursor_first : se déplace en avant depuis le début
function cubrid lob2 seek $offset	nombre dunités à utiliser pour déplacer le curseur
function cubrid lob2 seek $lob_identifier	un identifiant lob résultant de la fonction cubrid_lob2_new() ou récupérer depuis le jeu de résultats
function bool cubrid lob2 seek	true en cas de succès ou false si une erreur survient
function bool cubrid lob2 seek resource $lob_identifier int $offset int $origin	d&eacute;place le curseur d'un objet lob
function cubrid lob2 size64 $lob_identifier	un identifiant lob récupéré depuis la fonction cubrid_lob2_new() ou depuis le jeu de résultats
function string cubrid lob2 size64	retourne la taille dun objet lob sous la forme dune chaîne de caractères en cas de succès
function string cubrid lob2 size64 resource $lob_identifier	r&eacute;cup&egrave;re la taille d'un objet lob
function cubrid lob2 tell64 $lob_identifier	un identifiant lob récupéré depuis la fonction cubrid_lob2_new() ou depuis le jeu de résultats
function string cubrid lob2 tell64	retourne la position du curseur dans lobjet lob sous la forme dune chaîne de caractères en cas de succès
function string cubrid lob2 tell64 resource $lob_identifier	r&eacute;cup&egrave;re la position du curseur dans l'objet lob
function cubrid lock read $oid	oid de linstance dont vous voulez verrouiller la lecture
function cubrid lock read $conn_identifier	identifiant de connexion
function bool cubrid lock read	true en cas de succès
function bool cubrid lock read resource $conn_identifier string $oid	place un verrou de lecture sur l'oid fourni
function cubrid lock write $oid	oid de linstance dont vous voulez placer un verrou décriture
function cubrid lock write $conn_identifier	identifiant de connexion
function bool cubrid lock write	true en cas de succès
function bool cubrid lock write resource $conn_identifier string $oid	place un verrou d'&eacute;criture sur l'oid fourni
function cubrid move cursor $origin	cible où vous voulez déplacer le curseur soit cubrid_cursor_first cubrid_cursor_current cubrid_cursor_last
function cubrid move cursor $req_identifier	identifiant de requête
function cubrid move cursor $offset	nombre dunités que vous voulez utiliser pour le déplacement
function int cubrid move cursor	true en cas de succès
function int cubrid move cursor resource $req_identifier int $offset int $origin	d&eacute;place le curseur dans le r&eacute;sultat
function cubrid next result $result	le paramètre result provient de lappel à la fonction cubrid_execute()
function bool cubrid next result	true lorsque lopération est un succès
function bool cubrid next result resource $result	r&eacute;cup&egrave;re le r&eacute;sultat de la prochaine requ&ecirc;te lors de l'ex&eacute;cution de requ&ecirc;tes sql multiples
function cubrid num rows $result	le paramètre result provient dun appel à la fonction cubrid_execute() la fonction cubrid_query() ou la fonction cubrid_prepare()
function int cubrid num rows	nombre de lignes en cas de succès
function int cubrid num rows resource $result	r&eacute;cup&egrave;re le nombre de lignes d'un jeu de r&eacute;sultats
function cubrid pconnect with url $conn_url	une chaîne de caractères qui contient les informations de connexion pour le serveur
function cubrid pconnect with url $userid	nom dutilisateur pour la base de données
function cubrid pconnect with url $passwd	mot de passe pour lutilisateur
function resource cubrid pconnect with url	identifiant de connexion lorsque le processus réussit
function resource cubrid pconnect with url string $conn_url string $userid string $passwd	ouvre une connexion persistante vers un serveur cubrid
function cubrid prepare $prepare_stmt	requête préparée
function cubrid prepare $option	oid retourné par loption cubrid_include_oid
function cubrid prepare $conn_identifier	identifiant de connexion
function resource cubrid prepare	identifiant de requête en cas de succès
function resource cubrid prepare resource $conn_identifier string $prepare_stmt int $option	pr&eacute;pare une requ&ecirc;te sql pour son ex&eacute;cution
function cubrid query $query	une requête sql les données de la requête doivent être proprement échappées
function cubrid query $conn_identifier	la connexion cubrid
function resource cubrid query	pour les requête de type select show describe explain et autres requêtes retournant un jeu de résultats cubrid_query() retourne une ressource en cas de succès ou false si une erreur survient
function resource cubrid query string $query resource $conn_identifier	envoi une requ&ecirc;te cubrid
function cubrid real escape string $unescaped_string	la chaîne de caractères à échapper
function cubrid real escape string $conn_identifier	lidentifiant de connexion cubrid
function string cubrid real escape string	la version échappée de la chaîne de caractères fournie en cas de succès
function string cubrid real escape string string $unescaped_string resource $conn_identifier	&eacute;chappe les caract&egrave;res sp&eacute;ciaux d'une cha&icirc;ne pour l'utiliser dans une requ&ecirc;te sql
function cubrid result $row	le numéro de la ligne depuis le résultat à récupérer
function cubrid result $field	le nom ou la position du champ field à récupérer
function cubrid result $result	le paramètre result provient dun appel à la fonction cubrid_execute()
function string cubrid result	la valeur du champ spécifié en cas de succès null si la valeur est null
function string cubrid result resource $result int $row mixed $field	retourne la valeur d'un champ d'une ligne sp&eacute;cifique
function cubrid rollback $conn_identifier	identifiant de connexion
function bool cubrid rollback	true en cas de succès
function bool cubrid rollback resource $conn_identifier	annule une transaction
function cubrid save to glo $file_name	le nom du fichier à sauvegarder
function cubrid save to glo $oid	oid de linstance glo dans laquelle le fichier sera sauvegardé
function cubrid save to glo $conn_identifier	identifiant de connexion
function int cubrid save to glo	true en cas de succès
function int cubrid save to glo resource $conn_identifier string $oid string $file_name	sauvegarde un fichier dans une instance glo
function cubrid schema $schema_type	données du schéma à récupérer
function cubrid schema $class_name	classe pour laquelle vous souhaitez connaître le schéma
function cubrid schema $attr_name	attribut pour lequel vous souhaitez connaître le schéma
function cubrid schema $conn_identifier	identifiant de connexion
function array cubrid schema	un tableau contenant les informations sur le schéma en cas de succès
function array cubrid schema resource $conn_identifier int $schema_type string $class_name string $attr_name	r&eacute;cup&egrave;re des informations sur un sch&eacute;ma
function cubrid send glo $oid	oid de linstance glo depuis laquelle les données sont lues
function cubrid send glo $conn_identifier	identifiant de connexion
function int cubrid send glo	true en cas de succès
function int cubrid send glo resource $conn_identifier string $oid	lit les donn&eacute;es depuis une instance glo
function cubrid seq insert $oid	oid de linstance à utiliser
function cubrid seq insert $attr_name	nom de lattribut à insérer
function cubrid seq insert $seq_element	contenu de lélément à insérer
function cubrid seq insert $index	position de lélement pour son insertion en commençant à 1
function cubrid seq insert $conn_identifier	identifiant de connexion
function bool cubrid seq insert	true en cas de succès
function bool cubrid seq insert resource $conn_identifier string $oid string $attr_name int $index string $seq_element	ins&egrave;re un &eacute;l&eacute;ment dans une s&eacute;quence
function cubrid seq put $attr_name	nom de lattribut à utiliser
function cubrid seq put $oid	oid de linstance à utiliser
function cubrid seq put $index	index en commençant à 1 de lélément à mettre à jour
function cubrid seq put $seq_element	nouveau contenu à placer dans lélément
function cubrid seq put $conn_identifier	identifiant de connexion
function bool cubrid seq put	true en cas de succès
function bool cubrid seq put resource $conn_identifier string $oid string $attr_name int $index string $seq_element	met &agrave; jour la valeur d'un &eacute;l&eacute;ment d'une s&eacute;quence
function cubrid set add $set_element	contenu de lélément à insérer
function cubrid set add $oid	oid de linstance à utiliser
function cubrid set add $attr_name	nom de lattribut dans lequel le nouvel élément sera insérer
function cubrid set add $conn_identifier	identifiant de connexion
function bool cubrid set add	true en cas de succès
function bool cubrid set add resource $conn_identifier string $oid string $attr_name string $set_element	ins&egrave;re un seul &eacute;l&eacute;ment pour d&eacute;finir le type d'une colonne
function cubrid set db parameter $param_value	niveau disolation 1-6 ou la valeur du délai dexpiration en secondes
function cubrid set db parameter $param_type	type de paramètre de la base de données
function cubrid set db parameter $conn_identifier	la connexion cubrid
function bool cubrid set db parameter	true en cas de succès
function bool cubrid set db parameter resource $conn_identifier int $param_type int $param_value	d&eacute;finit les param&egrave;tres de base de donn&eacute;es cubrid
function cubrid set query timeout $req_identifier	identifiant de requête
function cubrid set query timeout $timeout	délai maximal en millisecondes
function bool cubrid set query timeout	true en cas de succès
function bool cubrid set query timeout resource $req_identifier int $timeout	d&eacute;finit le d&eacute;lai maximal d'ex&eacute;cution d'une requ&ecirc;te
function cubrid unbuffered query $query	une requête sql
function cubrid unbuffered query $conn_identifier	identifiant de connexion
function resource cubrid unbuffered query	pour les requêtes de type select show describe ou explain la fonction retournera une ressource didentifiant de requête en cas de succès
function resource cubrid unbuffered query string $query resource $conn_identifier	ex&eacute;cute une requ&ecirc;te sans placer les r&eacute;sultats en m&eacute;moire vive
function curl close $ch	un gestionnaire curl retourné par la fonction curl_init()
function void curl close resource $ch	ferme une session curl
function curl errno $ch	un gestionnaire curl retourné par la fonction curl_init()
function int curl errno	retourne le numéro de lerreur ou 0 si aucune erreur nest survenue
function int curl errno resource $ch	retourne le dernier message d'erreur curl
function curl error $ch	un gestionnaire curl retourné par la fonction curl_init()
function string curl error	retourne le message derreur ou chaîne vide si aucune erreur nest survenue
function string curl error resource $ch	retourne une cha&icirc;ne contenant le dernier message d'erreur curl
function curl escape $ch	un gestionnaire curl retourné par la fonction curl_init()
function curl escape $str	la chaîne à encoder
function string curl escape	retourne la chaîne encodée ou false si une erreur survient
function string curl escape resource $ch string $str	encode url la cha&icirc;ne fournie
function curl getinfo $opt	ce paramètre peut prendre lune des valeurs suivantes : curlinfo_effective_url : dernière url réelle curlinfo_http_code : dernier code http reçu curlinfo_filetime : date distante du document et -1 si la date du document distant est inconnue
function curl getinfo $ch	un gestionnaire curl retourné par la fonction curl_init()
function mixed curl getinfo	si opt est fourni la valeur sera retournée
function mixed curl getinfo resource $ch int $opt	lit les informations d&eacute;taillant un transfert curl
function curl init $url	si fourni alors curlopt_url prendra cette valeur
function resource curl init	retourne une session curl en cas de succès false si une erreur survient
function resource curl init string $url	initialise une session curl
function curl multi add handle $mh	un gestionnaire curl multiple retourné par la fonction curl_multi_init()
function curl multi add handle $ch	un gestionnaire curl retourné par la fonction curl_init()
function int curl multi add handle	retourne 0 en cas de succès ou un des codes erreurs curlm_xxx
function int curl multi add handle resource $mh resource $ch	ajoute une ressource curl &agrave; un curl multiple
function curl multi close $mh	un gestionnaire curl multiple retourné par la fonction curl_multi_init()
function void curl multi close resource $mh	termine un jeu de sessions curl
function curl multi exec $mh	un gestionnaire curl multiple retourné par la fonction curl_multi_init()
function curl multi exec $still_running	une référence à un drapeau qui annonce si les opérations sont toujours en cours
function int curl multi exec	un code curl défini dans les constantes prédéfinies curl
function int curl multi exec resource $mh int $still_running	ex&eacute;cute les sous-requ&ecirc;tes de la session curl
function curl multi getcontent $ch	un gestionnaire curl retourné par la fonction curl_init()
function string curl multi getcontent	retourne le contenu du gestionnaire curl si curlopt_returntransfer est défini
function string curl multi getcontent resource $ch	retourne le contenu obtenu avec l'option curlopt_returntransfer
function curl multi info read $mh	un gestionnaire curl multiple retourné par la fonction curl_multi_init()
function curl multi info read $msgs_in_queue	nombre de messages encore présents dans la file dattente
function array curl multi info read	retourne un tableau associatif contenant le message en cas de succès false si une erreur survient
function array curl multi info read resource $mh int $msgs_in_queue	lit les informations sur les transferts actuels
function resource curl multi init	retourne un gestionnaire curl multiple en cas de succès false si une erreur survient
function resource curl multi init	retourne un nouveau curl multiple
function curl multi remove handle $mh	un gestionnaire curl multiple retourné par la fonction curl_multi_init()
function curl multi remove handle $ch	un gestionnaire curl retourné par la fonction curl_init()
function int curl multi remove handle	retourne 0 en cas de succès ou un des codes erreurs curlm_xxx
function int curl multi remove handle resource $mh resource $ch	retire une ressource curl d'un curl multiple
function curl multi select $mh	un gestionnaire curl multiple retourné par la fonction curl_multi_init()
function curl multi select $timeout	durée maximale en secondes à attendre une réponse
function int curl multi select	retourne le nombre de sockets contenues dans le jeu de sockets en cas de succès
function int curl multi select resource $mh float $timeout	attend une activit&eacute; sur n'importe quelle connexion curl_multi
function curl multi strerror $errornum	une constante parmi les constantes de codes erreurs curlm
function string curl multi strerror	retourne la description dun code erreur valide null sinon
function string curl multi strerror int $errornum	retourne la description d'un code erreur
function curl reset $ch	un gestionnaire curl retourné par la fonction curl_init()
function void curl reset resource $ch	r&eacute;-initialise toutes les options d'un gestionnaire de session libcurl
function curl setopt array $ch	un gestionnaire curl retourné par la fonction curl_init()
function curl setopt array $options	un tableau spécifiant quelles options à fixer avec leurs valeurs
function bool curl setopt array	retourne true si toutes les options ont été fixées correctement
function bool curl setopt array resource $ch array $options	fixe plusieurs options pour un transfert curl
function curl setopt $option	loption curlopt_xxx à définir
function curl setopt $ch	un gestionnaire curl retourné par la fonction curl_init()
function curl setopt $value	la valeur à définir pour option
function bool curl setopt	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool curl setopt resource $ch int $option mixed $value	d&eacute;finit une option de transmission curl
function curl share close $sh	un gestionnaire partagé curl retourné par la fonction curl_share_init()
function void curl share close resource $sh	ferme un gestionnaire partag&eacute; curl
function resource curl share init	retourne une ressource de type curl share handle
function resource curl share init	initialise un gestionnaire partag&eacute; curl
function curl share setopt $sh	un gestionnaire curl retourné par la fonction curl_share_init()
function curl share setopt $value	valeur description curl_lock_data_cookie cookie de données partagées
function curl share setopt $option	option description curlshopt_share spécifie un type de données qui doivent être partagées
function bool curl share setopt	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool curl share setopt resource $sh int $option string $value	d&eacute;finit une option du gestionnaire partag&eacute; curl
function curl strerror $errornum	une constante parmi les constantes des codes erreurs curl
function string curl strerror	retourne la description de lerreur ou null pour un code erreur invalide
function string curl strerror int $errornum	retourne la cha&icirc;ne descriptive du code erreur fourni
function curl unescape $ch	un gestionnaire curl retourné par la fonction curl_init()
function curl unescape $str	lurl encodé à décoder
function string curl unescape	retourne la chaîne décodée ou false si une erreur survient
function string curl unescape resource $ch string $str	d&eacute;code l'url fourni
function array curl version int $age	retourne la version courante de curl
function cyrus close $connection	le gestionnaire de connexion
function bool cyrus close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool cyrus close resource $connection	ferme la connexion &agrave; un serveur cyrus imap
function cyrus connect $port	le numéro de port
function cyrus connect $host	le nom dhôte du serveur cyrus imap
function resource cyrus connect	retourne un gestionnaire de connexion en cas de succès ou false si une erreur survient
function resource cyrus connect string $host string $port int $flags	connexion sur un serveur cyrus imap
function cyrus query $connection	le gestionnaire de connexion
function cyrus query $query	la requête
function array cyrus query	retourne un tableau associatif contenant les clés suivantes : text msgno et keyword
function array cyrus query resource $connection string $query	envoie une requ&ecirc;te &agrave; un serveur cyrus imap
function string date default timezone get	retourne une chaîne de caractères
function string date default timezone get	r&eacute;cup&egrave;re le d&eacute;calage horaire par d&eacute;faut utilis&eacute; par toutes les fonctions date / heure d'un script
function date parse from format $format	format accepté par la méthode datetime::createfromformat()
function date parse from format $date	chaîne représentant la date
function array date parse from format	retourne un tableau associatif avec des informations détaillées sur la date donnée
function array date parse from format string $format string $date	r&eacute;cup&egrave;re les informations d'une date donn&eacute;e suivant un format sp&eacute;cifique
function date sunrise $timestamp	le timestamp unix du jour pour lequel lheure de lever du soleil est donnée
function date sunrise $format	constantes pour le paramètre format constante description exemple sunfuncs_ret_string retourne le résultat en tant que chaîne de caractères 16:46 sunfuncs_ret_double retourne le résultat en tant que nombre décimal 16
function date sunrise $zenith	par défaut : date
function date sunrise $latitude	par défaut cest le nord
function date sunrise $gmtoffset	spécifié en heures
function date sunrise $longitude	par défaut cest lest
function mixed date sunrise	retourne lheure de lever du soleil dans le format spécifié en cas de succès ou false si une erreur survient
function mixed date sunrise int $timestamp int $format float $latitude float $longitude float $zenith float $gmt_offset	retourne l'heure de lever du soleil pour un jour et un endroit donn&eacute;s
function date sunset $zenith	par défaut : date
function date sunset $timestamp	le timestamp unix du jour pour lequel lheure du coucher du soleil est donnée
function date sunset $latitude	par défaut cest le nord
function date sunset $gmtoffset	spécifié en heures
function date sunset $format	constantes pour le paramètre format constante description exemple sunfuncs_ret_string retourne le résultat sous la forme dune chaîne de caractères 16:46 sunfuncs_ret_double retourne le résultat sous la forme dun nombre décimal 16
function date sunset $longitude	par défaut cest lest
function mixed date sunset	retourne lheure de coucher du soleil dans le format spécifié ou false si une erreur survient
function mixed date sunset int $timestamp int $format float $latitude float $longitude float $zenith float $gmt_offset	retourne l'heure de coucher du soleil pour un jour et un endroit donn&eacute;s
function date $timestamp	le paramètre optionnel timestamp est un timestamp unix de type entier qui vaut par défaut lheure courante locale si le paramètre timestamp nest pas fourni
function date $format	le format de la date désirée
function string date	retourne une date formatée
function string date string $format int $timestamp	formate une date / heure locale
function db2 autocommit $connection	une variable de connexion à une base de données valide retournée par db2_connect() ou db2_pconnect()
function db2 autocommit $value	une des constantes suivantes : db2_autocommit_off désactive autocommit
function db2 autocommit $DB2_AUTOCOMMIT_ON	active autocommit
function db2 autocommit $DB2_AUTOCOMMIT_OFF	désactive autocommit
function mixed db2 autocommit	lorsque db2_autocommit() reçoit seulement connection comme paramètre la fonction retourne un entier représentant létat courant de autocommit de la connexion fournie
function mixed db2 autocommit resource $connection bool $value	retourne ou modifie l'&eacute;tat autocommit de la connexion &agrave; la base de donn&eacute;es
function db2 close $connection	spécifie une connexion client db2 active
function bool db2 close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool db2 close resource $connection	ferme une connexion de base de donn&eacute;es
function db2 column privileges $table-name	le nom de la table
function db2 column privileges $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 column privileges $column-name	le nom de la colonne
function db2 column privileges $schema	le schéma qui contient les tables
function db2 column privileges $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 column privileges	retourne une ressource avec le jeu de résultats contenant les lignes qui décrivent les privilèges des colonnes concordant avec les paramètres spécifiés
function resource db2 column privileges resource $connection string $qualifier string $schema string $table-name string $column-name	retourne un jeu de r&eacute;sultats listant les colonnes et ses privil&egrave;ges d'une table
function db2 columns $table-name	le nom de la table
function db2 columns $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 columns $column-name	le nom de la colonne
function db2 columns $schema	le schéma qui contient les tables
function db2 columns $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 columns	retourne une ressource avec le jeu de résultats contenant les lignes qui décrivent les privilèges des colonnes concordant avec les paramètres spécifiés
function resource db2 columns resource $connection string $qualifier string $schema string $table-name string $column-name	retourne un jeu de r&eacute;sultats listant les colonnes et ses m&eacute;tadonn&eacute;es d'une table
function db2 commit $connection	une variable ressource de connexion valide retournée par db2_connect() ou db2_pconnect()
function bool db2 commit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool db2 commit resource $connection	valide la transaction
function db2 conn error $connection	une ressource de connexion associée à la connexion qui a préalablement été réussie mais qui est devenue invalide avec le temps
function string db2 conn error	retourne la valeur de sqlstate résultant dune mauvaise tentative de connexion
function string db2 conn error resource $connection	retourne une cha&icirc;ne contenant la valeur de sqlstate retourn&eacute;e par la derni&egrave;re tentative de connexion
function db2 conn errormsg $connection	une ressource de connexion associée à la connexion qui a préalablement été réussie mais qui est devenue invalide avec le temps
function string db2 conn errormsg	retourne une chaîne contenant le message derreur et la valeur de sqlcode résultant dune mauvaise tentative de connexion
function string db2 conn errormsg resource $connection	retourne le dernier message d'erreur de connexion ainsi que la valeur de sqlcode
function db2 connect $i5_date_fmt	db2_i5_fmt_iso : le format de date de lorganisation internationale de normalisation iso yyyy-mm-dd est utilisé
function db2 connect $i5_query_optimize	db2_first_io toutes les requêtes sont optimisées avec le but de retourner la première page aussi vite que possible
function db2 connect $hostname	ladresse internet ou ip du serveur de base de données
function db2 connect $password	le mot de passe avec lequel vous vous connectez à la base de données
function db2 connect $DB2_ATTR_CASE	passer la valeur db2_case_natural spécifie que les noms de colonnes seront retournés dans leurs casses naturelles
function db2 connect $i5_dbcs_alloc	la valeur db2_i5_dbcs_alloc_on active le canevas dallocation db2 6x pour laccroissement des tailles des colonnes
function db2 connect $port	le port tcp / ip sur lequel la base de données écoute les connexions
function db2 connect $options	un tableau associatif des options de connexion qui affecteront le comportement de la connexion où les valeurs des clés incluent : autocommit la valeur db2_autocommit_on active lautocommit sur cette connexion
function db2 connect $CURSOR	passer la valeur db2_forward_only spécifie un curseur uniquement suivant pour une ressource de requête
function db2 connect $i5_naming	la valeur db2_i5_naming_on active db2 udb cli iseries mode système de nom
function db2 connect $i5_decimal_sep	db2_i5_sep_period : un point
function db2 connect $username	le nom dutilisateur avec lequel vous vous connectez à la base de données
function db2 connect $i5_lib	un caractère qui indique la bibliothèque par défaut qui sera utilisée pour résoudre les références aux fichiers non qualifiées
function db2 connect $i5_libl	une chaîne indiquant la liste a utilisé pour résoudre les références de fichiers non qualifiés
function db2 connect $database	le nom de la base de données
function db2 connect $i5_date_sep	db2_i5_sep_slash : un slash / est utilisé en tant que séparateur de date
function db2 connect $i5_time_sep	db2_i5_sep_colon : un deux-points : est utilisé en tant que séparateur de temps
function db2 connect $i5_commit	lattribut i5_commit devrait être fixé avant lappel à db2_connect()
function db2 connect $i5_time_fmt	db2_i5_fmt_iso : le format de lheure de lorganisation internationale de normalisation hh
function db2 connect $autocommit	la valeur db2_autocommit_on active lautocommit sur cette connexion
function db2 connect $trustedcontext	le fait de passer la valeur db2_trusted_context_enable active le contexte pour ce gestionnaire de connexion
function resource db2 connect	retourne la ressource de connexion si la tentative de connexion réussie
function resource db2 connect string $database string $username string $password array $options	retourne une connexion &agrave; une base de donn&eacute;es
function db2 cursor type $stmt	une ressource valide
function int db2 cursor type	retourne db2_forward_only si la ressource utilise un curseur à avance seul ou db2_scrollable si la ressource utilise un curseur flottant
function int db2 cursor type resource $stmt	retourne le type de curseur utilis&eacute; par une ressource
function db2 escape string $string_literal	une chaîne de caractères qui contient des caractères spéciaux qui doivent être modifiés
function string db2 escape string	retourne string_literal avec les caractères spéciaux mentionnés ci-dessus précédés par des antislashs
function string db2 escape string string $string_literal	utilis&eacute; pour &eacute;chapper certains caract&egrave;res
function db2 exec $options	un tableau associatif contenant les options de la requête
function db2 exec $connection	une variable ressource de connexion valide retournée par db2_connect() ou db2_pconnect()
function db2 exec $statement	une requête sql
function resource db2 exec	retourne une variable ressource si la requête sql était envoyée correctement ou false si la base de données na pas réussi à exécuter la requête sql
function resource db2 exec resource $connection string $statement array $options	ex&eacute;cute une requ&ecirc;te sql directement
function db2 fetch assoc $stmt	une ressource stmt valide contenant le jeu de résultats
function db2 fetch assoc $row_number	demande une ligne spécifique indexée numériquement qui commence par la valeur 1 au jeu de résultat
function array db2 fetch assoc	retourne un tableau associatif avec les valeurs des colonnes indexées par le nom des colonnes représentant la ligne suivante ou la ligne demandée dans le jeu de résultats
function array db2 fetch assoc resource $stmt int $row_number	retourne un tableau index&eacute; par nom de colonne repr&eacute;sentant une ligne du jeu de r&eacute;sultats
function db2 fetch both $stmt	une ressource stmt valide contenant le jeu de résultats
function db2 fetch both $row_number	demande une ligne spécifique indexée numériquement qui commence par la valeur 1 au jeu de résultat
function array db2 fetch both	retourne un tableau associatif avec les valeurs des colonnes indexées par le nom des colonnes et le numéro des colonnes commençant par 0
function array db2 fetch both resource $stmt int $row_number	retourne un tableau index&eacute; par nom de colonne et position repr&eacute;sentant une ligne du jeu de r&eacute;sultats
function db2 fetch object $stmt	une ressource stmt valide contenant le jeu de résultats
function db2 fetch object $row_number	demande une ligne spécifique commençant à lindex 1 du jeu de résultats
function object db2 fetch object	retourne un objet représentant une seule ligne dans le jeu de résultats
function object db2 fetch object resource $stmt int $row_number	retourne un objet avec les propri&eacute;t&eacute;s repr&eacute;sentant des colonnes dans la ligne extraite
function db2 fetch row $stmt	une ressource stmt valide contenant le jeu de résultats
function db2 fetch row $row_number	avec des curseurs flottants vous pouvez demander un numéro de ligne spécifique du jeu de résultats
function bool db2 fetch row	retourne true si la ligne demandée existe dans le jeu de résultats
function bool db2 fetch row resource $stmt int $row_number	modifie le pointeur du jeu de r&eacute;sultat &agrave; la prochaine ligne ou &agrave; la ligne demand&eacute;e
function db2 field display size $stmt	spécifie la ressource contenant le jeu de résultats
function db2 field display size $column	spécifie la colonne dans le jeu de résultats
function int db2 field display size	retourne une valeur entière avec le maximum doctets requis pour afficher la colonne spécifiée
function int db2 field display size resource $stmt mixed $column	retourne le maximum d'octets requis pour afficher une colonne
function db2 field name $stmt	spécifie la ressource contenant le jeu de résultats
function db2 field name $column	spécifie la colonne dans le jeu de résultats
function string db2 field name	retourne une chaîne contenant le nom de la colonne spécifiée
function string db2 field name resource $stmt mixed $column	retourne le nom de la colonne du jeu de r&eacute;sultats
function db2 field num $stmt	spécifie une ressource contenant un jeu de résultats
function db2 field num $column	spécifie la colonne dans le jeu de résultats
function int db2 field num	retourne un entier contenant la position commençant à 0 du nom de la colonne dans le jeu de résultats
function int db2 field num resource $stmt mixed $column	retourne la position du nom de la colonne du jeu de r&eacute;sultats
function db2 field scale $stmt	spécifie la ressource contenant le jeu de résultats
function db2 field scale $column	spécifie la colonne dans le jeu de résultats
function int db2 field scale	retourne un entier contenant léchelle de la colonne spécifiée
function int db2 field scale resource $stmt mixed $column	retourne l'&eacute;chelle de la colonne indiqu&eacute;e du jeu de r&eacute;sultats
function db2 field type $stmt	spécifie la ressource contenant le jeu de résultats
function db2 field type $column	spécifie la colonne dans le jeu de résultats
function string db2 field type	retourne une chaîne contenant le type de données défini de la colonne spécifiée
function string db2 field type resource $stmt mixed $column	retourne le type de donn&eacute;e de la colonne indiqu&eacute;e du jeu de r&eacute;sultats
function db2 field width $stmt	spécifie la ressource contenant le jeu de résultats
function db2 field width $column	spécifie la colonne dans le jeu de résultats
function int db2 field width	retourne un entier contenant la largeur du caractère spécifié ou de la colonne de type binaire dans le jeu de résultats
function int db2 field width resource $stmt mixed $column	retourne la largeur de la valeur courante de la colonne indiqu&eacute;e du jeu de r&eacute;sultats
function db2 foreign keys $table-name	le nom de la table
function db2 foreign keys $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 foreign keys $schema	le schéma qui contient les tables
function db2 foreign keys $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 foreign keys	retourne une ressource avec le jeu de résultats contenant des lignes décrivant les clés étrangères à la table spécifiée
function resource db2 foreign keys resource $connection string $qualifier string $schema string $table-name	retourne un jeu de r&eacute;sultats listant les cl&eacute;s &eacute;trang&egrave;res d'une table
function db2 free stmt $stmt	une ressource valide
function bool db2 free stmt	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool db2 free stmt resource $stmt	lib&egrave;re la m&eacute;moire associ&eacute;e &agrave; la ressource indiqu&eacute;e
function db2 last insert id $resource	une ressource de connexion valide créée par db2_connect() ou db2_pconnect()
function string db2 last insert id	retourne lidentifiant autogénéré qui a pu être exécuté correctement sur cette connexion
function string db2 last insert id resource $resource	retourne le dernier id g&eacute;n&eacute;r&eacute; par la derni&egrave;re requ&ecirc;te d'insertion
function db2 lob read $length	la taille des grands objets binaires à récupérer de la ressource stmt
function db2 lob read $stmt	une ressource stmt valide contenant des grands objets binaires
function db2 lob read $colnum	un numéro de colonne valide dans le jeu de résultats de la ressource stmt
function string db2 lob read	retourne le nombre de données spécifiés
function string db2 lob read resource $stmt int $colnum int $length	r&eacute;cup&egrave;re de grands objets binaires de tailles pr&eacute;d&eacute;finies &agrave; chaque invocation
function db2 next result $stmt	une requête préparée retournée par db2_exec() ou db2_execute()
function resource db2 next result	retourne une nouvelle ressource contenant le jeu de résultats suivants si la procédure contenait un jeu de résultats suivant
function resource db2 next result resource $stmt	demande le prochain jeu de r&eacute;sultats de la ressource indiqu&eacute;e
function db2 num fields $stmt	une ressource valide contenant un jeu de résultats
function int db2 num fields	retourne un entier représentant le nombre de champs dans le jeu de résultats associé avec la ressource spécifiée
function int db2 num fields resource $stmt	retourne le nombre de champs contenu du jeu de r&eacute;sultats
function db2 num rows $stmt	une ressource stmt valide contenant le jeu de résultats
function int db2 num rows	retourne le nombre de lignes affectées par la dernière requête sql envoyée par une fonction qui exécute les requêtes sql
function int db2 num rows resource $stmt	retourne le nombre de lignes affect&eacute;es par une requ&ecirc;te sql
function db2 prepare $options	un tableau associatif contenant les options de la requête
function db2 prepare $connection	une variable ressource de connexion valide retournée par db2_connect() ou db2_pconnect()
function db2 prepare $statement	une requête sql qui peut contenir un ou plusieurs marqueurs
function resource db2 prepare	retourne une variable ressource si la requête sql était envoyée correctement ou false si le serveur de base de données a retourné une erreur
function resource db2 prepare resource $connection string $statement array $options	pr&eacute;pare une requ&ecirc;te sql &agrave; &ecirc;tre ex&eacute;cut&eacute;e
function db2 primary keys $table-name	le nom de la table
function db2 primary keys $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 primary keys $schema	le schéma qui contient les tables
function db2 primary keys $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 primary keys	retourne une ressource avec le jeu de résultats contenant des lignes décrivant les clés primaires à la table spécifiée
function resource db2 primary keys resource $connection string $qualifier string $schema string $table-name	retourne un jeu de r&eacute;sultats listant les cl&eacute;s d'une table
function db2 procedure columns $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 procedure columns $procedure	le nom de la procédure
function db2 procedure columns $parameter	le nom du paramètre
function db2 procedure columns $schema	le schéma qui contient les tables
function db2 procedure columns $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 procedure columns	retourne une ressource avec le jeu de résultats contenant les lignes qui décrient les paramètres pour les procédures denregistrement qui concordent avec les paramètres spécifiés
function resource db2 procedure columns resource $connection string $qualifier string $schema string $procedure string $parameter	retourne un jeu de r&eacute;sultats listant les param&egrave;tres de proc&eacute;dure d'enregistrement
function db2 procedures $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 procedures $procedure	le nom de la procédure
function db2 procedures $schema	le schéma qui contient les tables
function db2 procedures $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 procedures	retourne une ressource avec le jeu de résultats contenant les lignes qui décrient les procédures enregistrées qui concordent avec les paramètres spécifiés
function resource db2 procedures resource $connection string $qualifier string $schema string $procedure	retourne un jeu de r&eacute;sultats listant les proc&eacute;dures d'enregistrement enregistr&eacute;es dans la base de donn&eacute;es
function db2 rollback $connection	une variable ressource de connexion valide retournée par db2_connect() ou db2_pconnect()
function bool db2 rollback	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool db2 rollback resource $connection	annule une transaction
function db2 special columns $scope	un entier représentant le temps minimal pour lequel lidentifiant unique de la ligne est valide
function db2 special columns $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 special columns $schema	le schéma qui contient les tables
function db2 special columns $table_name	le nom de la table
function db2 special columns $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 special columns	retourne une ressource avec un jeu de résultats contenant des lignes avec des informations uniques pour une table
function resource db2 special columns resource $connection string $qualifier string $schema string $table_name int $scope	retourne un jeu de r&eacute;sultats listant les identifiants uniques des lignes d'une table
function db2 statistics $schema	le schéma qui contient les tables visées
function db2 statistics $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function db2 statistics $table_name	le nom de la table
function db2 statistics $0	retourne seulement les informations pour les index uniques de la table
function db2 statistics $1	retourne les informations pour tous les index de la table
function db2 statistics $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 statistics $unique	un entier représentant le type dinformation à retourner
function resource db2 statistics	ce que la fonction retourne premièrement lors de succès ensuite lors déchec
function resource db2 statistics resource $connection string $qualifier string $schema string $table-name bool $unique	retourne un jeu de r&eacute;sultats listant les index et statistiques d'une table
function db2 stmt error $stmt	une ressource valide
function string db2 stmt error	retourne une chaîne contenant la valeur de sqlstate
function string db2 stmt error resource $stmt	retourne une cha&icirc;ne contenant la valeur de sqlstate retourn&eacute;e par une requ&ecirc;te sql
function db2 stmt errormsg $stmt	une ressource valide
function string db2 stmt errormsg	retourne une chaîne contenant lerreur du message et le sqlcode pour la dernière erreur qui sest déroulée après lexécution dune requête sql
function string db2 stmt errormsg resource $stmt	retourne le dernier message d'erreur d'une requ&ecirc;te sql
function db2 table privileges $table-name	le nom de la table
function db2 table privileges $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 table privileges $schema	le schéma qui contient les tables
function db2 table privileges $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 table privileges	retourne une ressource avec le jeu de résultats contenant les lignes qui décrient les privilèges pour la table qui concordent avec les paramètres spécifiés
function resource db2 table privileges resource $connection string $qualifier string $schema string $table_name	retourne un jeu de r&eacute;sultats listant les tables et leurs privil&egrave;ges qui leur sont associ&eacute;es d'une base de donn&eacute;es
function db2 tables $table-name	le nom de la table
function db2 tables $connection	une connexion valide à une base de données ibm db2 cloudscape ou apache derby
function db2 tables $table-type	une liste des identifiants du type de table délimitée par des virgules
function db2 tables $schema	le schéma qui contient les tables
function db2 tables $qualifier	un qualificatif pour les bases de données db2 qui fonctionnent sur les serveurs os / 390 ou z / os
function resource db2 tables	retourne une ressource avec le jeu de résultats contenant les lignes qui décrient les tables qui concordent avec les paramètres spécifiés
function resource db2 tables resource $connection string $qualifier string $schema string $table-name string $table-type	retourne la liste des tables et leurs m&eacute;tadonn&eacute;es
function dba delete $handle	le gestionnaire de la base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function dba delete $key	la clé de lentrée à effacer
function bool dba delete	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dba delete string $key resource $handle	efface une ligne dans une base dba
function dba exists $handle	le gestionnaire de base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function dba exists $key	la clé à vérifier
function bool dba exists	retourne true si la clé existe false sinon
function bool dba exists string $key resource $handle	v&eacute;rifie qu'une cl&eacute; dba existe
function dba fetch $key	la clé correspondant aux données
function dba fetch $skip	le nombre de paires clé-valeur que vous souhaitez ignorer lors de lutilisation de bases cdb
function dba fetch $handle	le gestionnaire de base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function string dba fetch	retourne la chaîne associée si la paire clé / valeur est trouvée false sinon
function string dba fetch string $key resource $handle	lit les donn&eacute;es li&eacute;es &agrave; une cl&eacute; dba
function dba firstkey $handle	le gestionnaire de base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function string dba firstkey	retourne la clé en cas de succès ou false si une erreur survient
function string dba firstkey resource $handle	lit la premi&egrave;re cl&eacute; dba
function dba handlers $full_info	active laffiche de toutes les informations dans le résultat
function array dba handlers	retourne un tableau de gestionnaires disponibles
function array dba handlers bool $full_info	liste les gestionnaires dba disponibles
function dba insert $handle	le gestionnaire de base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function dba insert $value	la valeur à insérer
function dba insert $key	la clé de lentrée à insérer
function bool dba insert	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dba insert string $key string $value resource $handle	ins&egrave;re une entr&eacute;e dba
function array dba list	un tableau associatif sous la forme idressource = > nomfichier
function array dba list	liste tous les fichiers de bases de donn&eacute;es dba ouverts
function dba nextkey $handle	le gestionnaire de base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function string dba nextkey	retourne la clé en cas de succès ou false si une erreur survient
function string dba nextkey resource $handle	lit la cl&eacute; dba suivante
function dba optimize $handle	le gestionnaire de base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function bool dba optimize	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dba optimize resource $handle	optimise une base dba
function dba popen $mode	il vaut r pour lecture seule w pour lecture / écriture c pour lecture / écriture et création si la base nexiste pas et n pour création écrasement et accès en lecture / écriture
function dba popen $path	chemin sur votre système de fichiers
function dba popen $handler	le nom du gestionnaire qui doit être utilisé pour accéder à path
function resource dba popen	retourne un gestionnaire positif en cas de succès ou false si une erreur survient
function resource dba popen string $path string $mode string $handler	ouvre une connexion persistante &agrave; une base de donn&eacute;es dba
function dba sync $handle	le gestionnaire de base de données retourné par la fonction dba_open() ou la fonction dba_popen()
function bool dba sync	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dba sync resource $handle	synchronise une base de donn&eacute;es dba
function dbase add record $dbase_identifier	lidentifiant du lien à la base de données retourné par dbase_open() ou dbase_create()
function dbase add record $record	un tableau de données indexé
function bool dbase add record	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dbase add record int $dbase_identifier array $record	ajoute un enregistrement dans une base de donn&eacute;es dbase
function dbase delete record $dbase_identifier	lidentifiant du lien à la base de données retourné par dbase_open() ou dbase_create()
function dbase delete record $record_number	un entier compris entre 1 et le nombre maximal denregistrements dans la base de données tel que retourné par la fonction dbase_numrecords()
function bool dbase delete record	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dbase delete record int $dbase_identifier int $record_number	efface un enregistrement dans une base dbase
function dbase get header info $dbase_identifier	lidentifiant du lien à la base de données retourné par dbase_open() ou dbase_create()
function array dbase get header info	un tableau indexé avec une entrée pour chaque colonne de la base de données
function array dbase get header info int $dbase_identifier	r&eacute;cup&egrave;re des informations d'en-t&ecirc;te d'une base de donn&eacute;es dbase
function dbase get record with names $dbase_identifier	lidentifiant du lien à la base de données retourné par dbase_open() ou dbase_create()
function dbase get record with names $record_number	lindex de lenregistrement
function array dbase get record with names	lenregistrement sous la forme dun tableau associatif
function array dbase get record with names int $dbase_identifier int $record_number	lit un enregistrement dans une base dbase sous la forme d'un tableau associatif
function dbase numfields $dbase_identifier	lidentifiant du lien à la base de données retourné par dbase_open() ou dbase_create()
function int dbase numfields	le nombre de champs de la base de données ou false si une erreur survient
function int dbase numfields int $dbase_identifier	compte le nombre de champs d'une base dbase
function dbase open $mode	un entier correspondant à celui utilisé pour lappel système open() typiquement 0 signifie lecture seule 1 signifie écriture seule et 2 signifie lecture et écriture
function dbase open $filename	le nom de la base de données
function int dbase open	retourne un identifiant de lien à la base de données si la base de données est ouverte avec succès ou false si une erreur survient
function int dbase open string $filename int $mode	ouvre une base dbase
function dbase replace record $record_number	un entier entre 1 et le nombre total denregistrements dans la base de données comme retourné par la fonction dbase_numrecords()
function dbase replace record $dbase_identifier	lidentifiant du lien à la base de données retourné par la fonction dbase_open() ou la fonction dbase_create()
function dbase replace record $record	un tableau indexé des données
function bool dbase replace record	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dbase replace record int $dbase_identifier array $record int $record_number	remplace un enregistrement dans une base dbase
function dbplus aql $query	la requête aql qui sera exécutée
function resource dbplus aql	retourne une ressource de relation en cas de succès
function resource dbplus aql string $query string $server string $dbpath	ex&eacute;cute une requ&ecirc;te aql
function dbplus chdir $newdir	le nouveau répertoire pour les fichiers de relations
function string dbplus chdir	retourne le chemin absolu du dossier courant
function string dbplus chdir string $newdir	lit / modifie le chemin du dossier virtuel courant vers la base de donn&eacute;es
function dbplus close $relation	une relation ouverte par dbplus_open()
function mixed dbplus close	retourne true en cas de succès ou dbplus_err_unknown en cas déchec
function mixed dbplus close resource $relation	ferme une relation
function dbplus curr $relation	une relation ouverte avec dbplus_open()
function dbplus curr $tuple	les données seront retournées par ce paramètre comme un tableau associatif
function int dbplus curr	la fonction retournera zéro dbplus_err_noerr en cas de succès ou une erreur db++ en cas déchec
function int dbplus curr resource $relation array $tuple	lit la ligne courante depuis une relation
function int dbplus errno	retourne le code derreur sous forme dentier
function int dbplus errno	lit le code d'erreur g&eacute;n&eacute;r&eacute; par la derni&egrave;re op&eacute;ration
function dbplus find $constraints	les contraintes sont des triplets de chaîne de caractères contenant un nom de domaine un opérateur de comparaison et une valeur de comparaison
function dbplus find $relation	une relation ouverte avec dbplus_open()
function int dbplus find resource $relation array $constraints mixed $tuple	ajoute une contrainte sur une relation
function dbplus first $relation	une relation ouverte avec dbplus_open()
function int dbplus first	retourne dbplus_err_noerr en cas de succès ou un code derreur db++ en cas déchec
function int dbplus first resource $relation array $tuple	lit la premi&egrave;re ligne d'une relation
function int dbplus freealllocks	lib&egrave;re tous les verrous pos&eacute;s par le client
function dbplus freerlocks $relation	une relation ouverte par dbplus_open()
function int dbplus freerlocks resource $relation	l&egrave;ve tous les verrous sur les lignes d'une relation
function dbplus getlock $relation	une relation ouverte avec dbplus_open()
function int dbplus getlock	retourne zéro en cas de succès ou un code derreur différent de zéro plus précisément dbplus_err_wlocked en cas déchec
function int dbplus getlock resource $relation string $tuple	pose un verrou sur une ligne
function dbplus next $relation	une relation ouverte avec dbplus_open()
function int dbplus next	retourne dbplus_err_noerr en cas de succès ou un code derreur db++ en cas déchec
function int dbplus next resource $relation array $tuple	lit la ligne suivante dans la relation
function dbplus open $name	peut être soit un fichier ou un chemin relatif ou absolu
function resource dbplus open	en cas de succès une ressource de fichier de relation dite aussi curseur sera retournée
function resource dbplus open string $name	ouvre un fichier de relation
function dbplus prev $relation	une relation ouverte avec dbplus_open()
function int dbplus prev	retourne dbplus_err_noerr en cas de succès ou un code derreur db++ en cas déchec
function int dbplus prev resource $relation array $tuple	lit la ligne pr&eacute;c&eacute;dente dans la relation
function dbplus rchperm $relation	une relation ouverte par dbplus_open()
function int dbplus rchperm resource $relation int $mask string $user string $group	modifie les droits sur la relation
function dbplus rcrtexact $overwrite	une relation existante par le même nom name sera seulement écrasée si ce paramètre est fixé à true et aucun autre processus utilise cette relation
function dbplus rcrtexact $relation	la relation copiée ouverte par dbplus_open()
function mixed dbplus rcrtexact	retourne une ressource en cas de succès ou dbplus_err_unknown en cas déchec
function mixed dbplus rcrtexact string $name resource $relation bool $overwrite	cr&eacute;e une copie exacte mais vide d'une relation
function dbplus rcrtlike $overwrite	une relation existante par le même nom name sera seulement écrasée si ce paramètre est fixé à true et aucun autre processus utilise cette relation
function dbplus rcrtlike $relation	la relation copiée ouverte par dbplus_open()
function mixed dbplus rcrtlike	retourne une ressource en cas de succès ou dbplus_err_unknown en cas derreur
function mixed dbplus rcrtlike string $name resource $relation int $overwrite	cr&eacute;e une copie vide d'une relation avec les index
function dbplus resolve $relation_name	nom de la relation
function array dbplus resolve	retourne un tableau contenant les valeurs sous les clés sid host et host_path ou false en cas derreur
function array dbplus resolve string $relation_name	r&eacute;sout les informations d'h&ocirc;te pour une relation
function resource dbplus ropen string $name	ouvre un fichier de relation local
function resource dbplus rquery string $query string $dbpath	accomplit une requ&ecirc;te aql locale
function dbplus rrename $relation	une relation ouverte par dbplus_open()
function int dbplus rrename resource $relation string $name	renomme une relation
function dbplus rsecindex $relation	une relation ouverte par dbplus_open()
function dbplus rsecindex $domlist	une combinaison de domaines
function mixed dbplus rsecindex	retourne une ressource en cas de succès ou dbplus_err_unknown en cas déchec
function mixed dbplus rsecindex resource $relation mixed $domlist int $type	cr&eacute;e un nouvel index secondaire pour une relation
function dbplus rzap $relation	une relation ouverte par dbplus_open()
function int dbplus rzap resource $relation	supprime toutes les lignes d'une relation
function string dbplus tcl int $sid string $script	ex&eacute;cute du code tcl c&ocirc;t&eacute; serveur
function dbplus tremove $relation	une relation ouverte par dbplus_open()
function int dbplus tremove resource $relation array $tuple array $current	supprime la ligne courante et retourne la nouvelle ligne courante
function dbplus unselect $relation	une relation ouverte par dbplus_open()
function int dbplus unselect resource $relation	retire une contrainte d'une relation
function dbplus update $relation	une relation ouverte par dbplus_open()
function dbplus update $old	lancienne ligne
function dbplus update $new	la nouvelle ligne
function int dbplus update resource $relation array $old array $new	modifie une ligne dans une relation
function dbplus xlockrel $relation	une relation ouverte par dbplus_open()
function int dbplus xlockrel resource $relation	pose un verrou exclusif sur une relation
function dbplus xunlockrel $relation	une relation ouverte par dbplus_open()
function int dbplus xunlockrel resource $relation	l&egrave;ve un verrou exclusif pos&eacute; sur une relation
function dbx compare $row_b	seconde ligne
function dbx compare $column_key	la colonne comparée
function dbx compare $row_a	première ligne
function int dbx compare	retourne 0 si row_a[$column_key] est égale à row_b[$column_key] et 1 ou -1 si le premier est plus grand ou plus petit que le dernier respectivement ou bien le contraire si loption flags est configurée à dbx_cmp_desc
function int dbx compare array $row_a array $row_b string $column_key int $flags	compare deux lignes dbx afin de les trier
function dbx connect $persistent	le paramètre persistent peut prendre la valeur dbx_persistent pour créer une connexion persistante
function dbx connect $username	le nom dutilisateur
function dbx connect $password	le mot de passe
function dbx connect $host	lhôte serveur sql
function dbx connect $database	le nom de la base de données
function dbx connect $module	le paramètre module peut être soit une chaîne soit une constante
function object dbx connect	retourne un objet en cas de succès false si une erreur survient
function object dbx connect mixed $module string $host string $database string $username string $password int $persistent	ouvre une connexion &agrave; une base de donn&eacute;es
function dbx error $link_identifier	lobjet dbx retourné par la fonction dbx_connect()
function string dbx error	retourne une chaîne contenant le dernier message derreur du module sélectionné
function string dbx error object $link_identifier	rapporte le message d'erreur du dernier appel de fonction dbx
function dbx escape string $link_identifier	lobjet dbx retourné par la fonction dbx_connect()
function dbx escape string $text	la chaîne à échapper
function string dbx escape string	retourne le texte text dont les caractères spéciaux ont été protégés les guillemets les antislash
function string dbx escape string object $link_identifier string $text	prot&egrave;ge une cha&icirc;ne de caract&egrave;res pour l'utiliser dans une requ&ecirc;te
function dbx query $DBX_RESULT_ASSOC	cette option fait que la valeur des champs peut être accessible avec le nom de la colonne utilisé comme clé dans le tableau du membre data
function dbx query $DBX_RESULT_INDEX	ce paramètre est toujours activé cest à dire que lobjet retourné dispose du membre data qui est un tableau à deux dimensions indexé numériquement
function dbx query $flags	le paramètre flags sert à contrôler la quantité dinformations retournée
function dbx query $DBX_COLNAMES_UNCHANGED	la casse du nom des colonnes retournées ne sera pas modifiée
function dbx query $DBX_COLNAMES_LOWERCASE	les noms de colonnes seront mis en minuscules
function dbx query $DBX_RESULT_UNBUFFERED	cet option ne crée pas de propriété data et la propriété rows sera initialement positionnée à 0
function dbx query $link_identifier	lobjet dbx retournée par la fonction dbx_connect()
function dbx query $DBX_COLNAMES_UPPERCASE	les noms de colonnes seront mis en majuscules
function dbx query $sql_statement	la requête sql
function dbx query $DBX_RESULT_INFO	cette option fournit des informations sur les colonnes comme les noms des champs et leur type
function mixed dbx query	dbx_query() retourne un objet dbx_result_object ou 1 en cas de succès un objet de résultat ne sera retourné que pour les requêtes sql qui retournent un résultat ou 0 en cas derreur
function mixed dbx query object $link_identifier string $sql_statement int $flags	envoie une requ&ecirc;te et lit tous les r&eacute;sultats dbx
function dcgettext $message	le message
function dcgettext $category	la catégorie
function dcgettext $domain	le domaine
function string dcgettext	une chaîne de caractères en cas de succès
function string dcgettext string $domain string $message int $category	remplace le domaine lors d'une recherche
function dcngettext $domain	le domaine
function string dcngettext	une chaîne de caractères en cas de succès
function string dcngettext string $domain string $msgid1 string $msgid2 int $n int $category	version plurielle de dcgettext
function debug backtrace $limit	depuis 5
function debug backtrace $options	depuis php 5
function array debug backtrace	retourne un tableau de tableaux associatifs
function array debug backtrace int $options int $limit	g&eacute;n&egrave;re le contexte de d&eacute;boguage
function debug print backtrace $options	depuis 5
function debug print backtrace $limit	depuis 5
function void debug print backtrace int $options int $limit	affiche la pile d'ex&eacute;cution php
function debug zval dump $variable	la variable à évaluer
function void debug zval dump mixed $variable	extrait une repr&eacute;sentation sous forme de cha&icirc;ne d'une valeur interne &agrave; zend pour affichage
function decbin $number	valeur décimale à convertir interval dentrée sur des machines 32-bit paramètre number positif paramètre number négatif valeur retournée 0 &nbsp; 0 1 &nbsp; 1 2 &nbsp; 10
function string decbin	une représentation binaire de number
function string decbin int $number	convertit de d&eacute;cimal en binaire
function dechex $number	la valeur décimale à convertir
function string dechex	une représentation hexadécimale de number
function string dechex int $number	convertit de d&eacute;cimal en hexad&eacute;cimal
function decoct $number	valeur décimale à convertir
function string decoct	une représentation octale de number
function string decoct int $number	convertit de d&eacute;cimal en octal
function void define syslog variables	initialise toutes les variables relatives aux fonctions syslog
function define $name	le nom de la constante
function define $value	la valeur de la constante ; seuls les scalaires et les valeurs null sont autorisées
function define $case_insensitive	sil vaut true le nom de la constante sera insensible à la casse : constant et constant représentent des valeurs identiques
function bool define	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool define string $name mixed $value bool $case_insensitive	d&eacute;finit une constante
function defined $name	le nom de la constante
function bool defined	retourne true si le nom de la constante fournie par le paramètre name a été définie false sinon
function bool defined string $name	v&eacute;rifie l'existence d'une constante
function dgettext $message	le message
function dgettext $domain	le domaine
function string dgettext	une chaîne de caractères en cas de succès
function string dgettext string $domain string $message	remplace le domaine courant
function dio fcntl $fd	la ressource de fichier retournée par dio_open()
function dio fcntl $cmd	peut être une de ces opérations suivantes : f_setlk : le verrou est posé ou levé
function dio fcntl $args	args est un tableau associatif lorsque cmd vaut f_setlk ou f_setllw avec les entrées suivantes : start : offset de début de verrou length : taille de la surface verrouillée
function mixed dio fcntl	retourne le résultat dun appel en c
function mixed dio fcntl resource $fd int $cmd mixed $args	ex&eacute;cute une fonction fichier de langage c
function dio open $mode	si flags contient o_creat mode définira les permissions du fichier permissions de création
function dio open $filename	le chemin vers le fichier à ouvrir
function dio open $flags	le paramètre flags est une valeur comprenant des drapeaux depuis la liste suivante
function resource dio open	une ressource de fichier ou false en cas derreur
function resource dio open string $filename int $flags int $mode	ouvre un nouveau fichier avec les permissions sp&eacute;cifi&eacute;es
function dio read $fd	la ressource de fichier retournée par dio_open()
function dio read $len	le nombre doctets à lire
function string dio read	les octets lus de fd
function string dio read resource $fd int $len	lit les octets dans un fichier
function dio seek $fd	la ressource de fichier retournée par dio_open()
function dio seek $pos	la nouvelle position
function dio seek $whence	spécifie comment la position pos devrait être interprétée : seek_set défaut : spécifie que pos est spécifié à partir du début du fichier
function int dio seek resource $fd int $pos int $whence	d&eacute;place le pointeur interne de fichier
function dio stat $fd	la ressource de fichier retournée par dio_open()
function array dio stat resource $fd	lit des informations sur le fichier
function dio tcsetattr $fd	la ressource de fichier retournée par dio_open()
function dio tcsetattr $options	les options actuellement disponibles sont : baud : taux de baud du port : peut être 38400 19200 9600 4800 2400 1800 1200 600 300 200 150 134 110 75 ou 50
function bool dio tcsetattr resource $fd array $options	modifie les attributs du terminal et le taux de baud du port s&eacute;rie
function dio write $fd	la ressource de fichier retournée par dio_open()
function dio write $data	les données à écrire
function dio write $len	la grandeur des données à écrire en octets
function int dio write	retourne le nombre doctets écrits dans fd
function int dio write resource $fd string $data int $len	&eacute;crit des donn&eacute;es dans le fichier avec la possibilit&eacute; de tronquer sa longueur
function dirname $levels	le nombre de dossiers parents plus haut
function dirname $path	un chemin
function string dirname	retourne le dossier parent du chemin
function string dirname string $path int $levels	renvoie le chemin du dossier parent
function disk total space $directory	un dossier du système de fichiers ou la partition dun disque
function float disk total space	retourne la taille en octets sous la forme dun nombre décimal ou false si une erreur survient
function float disk total space string $directory	retourne la taille d'un dossier ou d'une partition
function dl $library	ce paramètre est seulement le nom de fichier de lextension qui dépend de votre plate-forme
function bool dl	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool dl string $library	charge une extension php &agrave; la vol&eacute;e
function dngettext $domain	le domaine
function string dngettext	une chaîne de caractères en cas de succès
function string dngettext string $domain string $msgid1 string $msgid2 int $n	version plurielle de dgettext
function dns get record $authns	passé par référence et sil est fourni recevra les enregistrements de ressources pour les authoritative name servers
function dns get record $addtl	passé par référence et sil est fourni recevra tous les enregistrements supplémentaires
function dns get record $type	par défaut dns_get_record() va rechercher toutes les ressources associées à hostname
function dns get record $raw	dans le cas du mode brut nous requêtons uniquement le type demandé au lieu de parcourir tous les types avant daccéder à celui demandé
function dns get record $hostname	hostname doit être un nom dhôte dns valide comme www
function array dns get record	dns_get_record() retourne un tableau de tableaux associatifs ou false si une erreur survient
function array dns get record string $hostname int $type array $authns array $addtl bool $raw	lit les donn&eacute;es dns associ&eacute;es &agrave; un h&ocirc;te
function dom import simplexml $node	le noeud simplexmlelement
function DOMElement dom import simplexml	le noeud domelement à ajouter ou false si une erreur survient
function DOMElement dom import simplexml SimpleXMLElement $node	transforme un objet simplexmlelement en un objet domelement
function each $array	le tableau dentrée
function array each	retourne la paire clé / valeur courante du tableau array et avance le pointeur de tableau
function array each array $array	retourne chaque paire cl&eacute; / valeur d'un tableau
function easter days $year	lannée sous la forme dun nombre positif
function easter days $method	permet le calcul des dates de pâques en se basant sur le calendrier grégorien pour les années entre 1582 et 1752 lorsque définit à cal_easter_roman
function int easter days	le nombre de jours entre le 21 mars et pâques pour lannée year fournie
function int easter days int $year int $method	retourne le nombre de jours entre le 21 mars et p&acirc;ques pour une ann&eacute;e donn&eacute;e
function eio cancel $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio cancel $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio cancel $req	la ressource de la requête
function eio cancel $data	variable arbitraire passée à la fonction de rappel callback
function eio cancel $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio cancel $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio cancel $data	représente les données personnalisées passées à la requête
function void eio cancel resource $req	annule une requ&ecirc;te
function eio chmod $mode	les nouvelles permissions i
function eio chmod $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio chmod $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio chmod $data	variable arbitraire à passer à la fonction de rappel callback
function eio chmod $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio chmod $path	chemin vers le fichier ou le dossier cible
function eio chmod $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio chmod $data	représente les données personnalisées passées à la requête
function resource eio chmod	la fonction eio_chmod() retourne la ressource de requête en cas de succès ou false si une erreur survient
function resource eio chmod string $path int $mode int $pri callable $callback mixed $data	modifie les permissions d'un fichier / dossier
function eio custom $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio custom $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio custom $data	variable arbitraire à passer à la fonction de rappel callback
function eio custom $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio custom $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio custom $data	représente les données personnalisées passées à la requête
function resource eio custom	eio_custom() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio custom callable $execute int $pri callable $callback mixed $data	ex&eacute;cute une demande personnalis&eacute;e comme l'appel &agrave; une des fonctions eio_*
function eio dup2 $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio dup2 $fd	flux source ressource de socket ou descripteur de fichier numérique
function eio dup2 $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio dup2 $data	variable arbitraire à passer à la fonction de rappel callback
function eio dup2 $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio dup2 $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio dup2 $data	représente les données personnalisées passées à la requête
function eio dup2 $fd2	flux cible ressource de socket ou descripteur de fichier numérique
function resource eio dup2	eio_dup2() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio dup2 mixed $fd mixed $fd2 int $pri callable $callback mixed $data	duplique un descripteur de fichier
function bool eio event loop	eio_event_loop() retourne true en cas de succès false si une erreur survient
function bool eio event loop	boucle libeio tant que les requ&ecirc;tes s'ex&eacute;cutent
function eio fallocate $data	variables arbitraires à passer à la fonction de rappel callback
function eio fallocate $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio fallocate $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio fallocate $length	spécifie la longueur de lintervalle doctets
function eio fallocate $offset	spécifie le début de lintervalle doctets
function eio fallocate $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio fallocate $fd	un flux une ressource de socket ou un descripteur de fichier i
function eio fallocate $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio fallocate $mode	actuellement un seul drapeau est supporté pour le mode : eio_falloc_fl_keep_size identique à la constante posix falloc_fl_keep_size
function eio fallocate $data	représente les données personnalisées passées à la requête
function resource eio fallocate	eio_fallocate() retourne une ressource de la requête en cas de succès ou false si une erreur survient
function resource eio fallocate mixed $fd int $mode int $offset int $length int $pri callable $callback mixed $data	autorise l'appelant &agrave; manipuler directement l'espace disque allou&eacute; pour un fichier
function eio fchmod $data	variables arbitraires à passer à la fonction de rappel callback
function eio fchmod $mode	les nouvelles permissions i
function eio fchmod $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio fchmod $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio fchmod $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio fchmod $fd	un flux une ressource de socket ou un descripteur de fichier i
function eio fchmod $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio fchmod $data	représente les données personnalisées passées à la requête
function resource eio fchmod	eio_fchmod() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio fchmod mixed $fd int $mode int $pri callable $callback mixed $data	modifie les permissions sur un fichier
function eio fdatasync $data	variables arbitraires à passer à la fonction de rappel callback
function eio fdatasync $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio fdatasync $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio fdatasync $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio fdatasync $fd	un flux une ressource de socket ou un descripteur de fichier i
function eio fdatasync $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio fdatasync $data	représente les données personnalisées passées à la requête
function resource eio fdatasync	eio_fdatasync() retourne la ressource de la demande en cas de succès ou false si une erreur survient
function resource eio fdatasync mixed $fd int $pri callable $callback mixed $data	synchronise le statut interne d'un fichier avec le p&eacute;riph&eacute;rique de stockage
function eio fstat $fd	un flux une ressource de socket ou un descripteur de fichier
function eio fstat $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio fstat $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio fstat $data	variables arbitraires à passer à la fonction de rappel callback
function eio fstat $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio fstat $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio fstat $data	représente les données personnalisées passées à la requête
function resource eio fstat	eio_busy() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio fstat mixed $fd int $pri callable $callback mixed $data	r&eacute;cup&egrave;re le statut d'un fichier
function eio fstatvfs $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio fstatvfs $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio fstatvfs $data	variable arbitraire à passer à la fonction de rappel callback
function eio fstatvfs $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio fstatvfs $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio fstatvfs $fd	un descripteur de fichier dun fichier contenu dans le système de fichier monté
function eio fstatvfs $data	représente les données personnalisées passées à la requête
function resource eio fstatvfs	eio_fstatvfs() retourne la ressource demandée en cas de succès false si une erreur survient
function resource eio fstatvfs mixed $fd int $pri callable $callback mixed $data	r&eacute;cup&egrave;re des statistiques sur le syst&egrave;me de fichiers
function eio fsync $fd	un flux une ressource de socket ou un descripteur de fichier
function eio fsync $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio fsync $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio fsync $data	variables arbitraires à passer à la fonction de rappel callback
function eio fsync $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio fsync $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio fsync $data	représente les données personnalisées passées à la requête
function resource eio fsync	eio_fsync() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio fsync mixed $fd int $pri callable $callback mixed $data	synchronise le statut interne d'un fichier avec le p&eacute;riph&eacute;rique de stockage
function eio ftruncate $offset	la position depuis le début du fichier
function eio ftruncate $fd	un flux une ressource de socket ou un descripteur de fichier
function eio ftruncate $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio ftruncate $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio ftruncate $data	variables arbitraires à passer à la fonction de rappel callback
function eio ftruncate $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio ftruncate $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio ftruncate $data	représente les données personnalisées passées à la requête
function resource eio ftruncate	eio_ftruncate() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio ftruncate mixed $fd int $offset int $pri callable $callback mixed $data	tronque un fichier
function eio futime $data	variables arbitraires à passer à la fonction de rappel callback
function eio futime $mtime	heure de la dernière modification
function eio futime $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio futime $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio futime $atime	heure du dernier accès
function eio futime $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio futime $fd	un flux une ressource de socket ou un descripteur de fichier i
function eio futime $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio futime $data	représente les données personnalisées passées à la requête
function resource eio futime	eio_futime() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio futime mixed $fd float $atime float $mtime int $pri callable $callback mixed $data	modifie l'heure du dernier acc&egrave;s et de la derni&egrave;re modification d'un fichier
function mixed eio get event stream	eio_get_event_stream() retourne un flux en cas de succès null sinon
function mixed eio get event stream	r&eacute;cup&egrave;re le flux repr&eacute;sentant une variable utilis&eacute;e dans les communications internes avec libeio
function eio get last error $req	la ressource demandée
function string eio get last error	eio_get_last_error() retourne une chaîne décrivant la dernière erreur avec la ressource demandée spécifiée par le paramètre req
function string eio get last error resource $req	retourne une cha&icirc;ne d&eacute;crivant la derni&egrave;re erreur associ&eacute;e avec la ressource demand&eacute;e
function eio grp add $grp	la ressource du groupe de requêtes retournée par la fonction eio_grp()
function eio grp add $req	la ressource de la requête
function void eio grp add resource $grp resource $req	ajoute une requ&ecirc;te au groupe de requ&ecirc;tes
function eio grp $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio grp $data	variables arbitraires à passer à la fonction de rappel callback
function resource eio grp	eio_grp() retourne la ressource du groupe de requêtes en cas de succès ou false si une erreur survient
function resource eio grp callable $callback string $data	cr&eacute;e un groupe de requ&ecirc;tes
function eio link $data	variables arbitraires à passer à la fonction de rappel callback
function eio link $new_path	le chemin du fichier cible
function eio link $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio link $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio link $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio link $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio link $path	le chemin du fichier source
function eio link $data	représente les données personnalisées passées à la requête
function resource eio link string $path string $new_path int $pri callable $callback mixed $data	cr&eacute;e un lien fort sur un fichier
function eio lstat $data	variables arbitraires à passer à la fonction de rappel callback
function eio lstat $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio lstat $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio lstat $path	le chemin du fichier
function eio lstat $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio lstat $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio lstat $data	représente les données personnalisées passées à la requête
function resource eio lstat	eio_lstat() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio lstat string $path int $pri callable $callback mixed $data	r&eacute;cup&egrave;re le statut d'un fichier
function eio nop $data	variables arbitraires à passer à la fonction de rappel callback
function eio nop $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio nop $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio nop $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio nop $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio nop $data	représente les données personnalisées passées à la requête
function resource eio nop	eio_nop() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio nop int $pri callable $callback mixed $data	ne fait rien mise &agrave; part le fait de parcourir l'ensemble du cycle des requ&ecirc;tes
function int eio nreqs	eio_nreqs() retourne le nombre de requêtes restant à exécuter
function int eio nreqs	retourne le nombre de requ&ecirc;tes restant &agrave; ex&eacute;cuter
function eio open $path	chemin vers le fichier à ouvrir
function eio open $data	variables arbitraires à passer à la fonction de rappel callback
function eio open $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio open $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio open $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio open $mode	une constante parmi les constantes eio_s_i* ou bien une combinaison de ces constantes via lopérateur or
function eio open $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio open $data	représente les données personnalisées passées à la requête
function eio open $flags	une constante parmi les constants eio_o_* ou bien une combinaison de ces constantes
function resource eio open	eio_open() retourne un descripteur de fichier dans largument result de la fonction de rappel callback en cas de succès ; sinon result vaudra -1
function resource eio open string $path int $flags int $mode int $pri callable $callback mixed $data	ouvre un fichier
function int eio poll	si une des invocations retourne une valeur différente de zéro cette valeur sera retournée
function int eio poll	v&eacute;rifie s'il reste des requ&ecirc;tes en cours d'ex&eacute;cution
function eio read $fd	un flux une ressource de socket ou un descripteur de fichier
function eio read $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio read $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio read $length	nombre maximal doctets à lire
function eio read $data	variables arbitraires à passer à la fonction de rappel callback
function eio read $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio read $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio read $offset	position dans le fichier
function eio read $data	représente les données personnalisées passées à la requête
function resource eio read	eio_read() stocke les octets lus dans largument result de la fonction de rappel callback
function resource eio read mixed $fd int $length int $offset int $pri callable $callback mixed $data	lit un descripteur de fichier &agrave; une position donn&eacute;e
function eio readahead $data	variables arbitraires à passer à la fonction de rappel callback
function eio readahead $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio readahead $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio readahead $length	nombre doctets à lire
function eio readahead $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio readahead $offset	point de départ à partir de laquelle les données seront lues
function eio readahead $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio readahead $data	représente les données personnalisées passées à la requête
function eio readahead $fd	un flux une ressource de socket ou un descripteur de fichier
function resource eio readahead	eio_readahead() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio readahead mixed $fd int $offset int $length int $pri callable $callback mixed $data	effectue un readahead sur le fichier dans le cache d'une page
function eio readdir $data	variables arbitraires à passer à la fonction de rappel callback
function eio readdir $flags	combinaison de constantes eio_readdir_*
function eio readdir $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio readdir $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio readdir $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio readdir $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio readdir $data	représente les données personnalisées passées à la requête
function eio readdir $path	chemin du dossier
function resource eio readdir	eio_readdir() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio readdir string $path int $flags int $pri callable $callback string $data	lit le contenu d'un dossier
function eio realpath $path	nom du chemin en version courte
function resource eio realpath string $path int $pri callable $callback string $data	r&eacute;cup&egrave;re le nom du chemin absolu canonis&eacute;
function eio rename $data	variables arbitraires à passer à la fonction de rappel callback
function eio rename $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio rename $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio rename $path	chemin source
function eio rename $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio rename $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio rename $new_path	chemin cible
function eio rename $data	représente les données personnalisées passées à la requête
function resource eio rename	eio_rename() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio rename string $path string $new_path int $pri callable $callback mixed $data	modifie le nom ou le chemin d'un fichier
function eio sendfile $out_fd	flux ressource de socket ou descripteur de fichier pour la sortie
function eio sendfile $data	variables arbitraires à passer à la fonction de rappel callback
function eio sendfile $in_fd	flux ressource de socket ou descripteur de fichier pour lentrée
function eio sendfile $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio sendfile $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio sendfile $length	nombre doctets à copier
function eio sendfile $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio sendfile $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio sendfile $offset	position dans le fichier source
function eio sendfile $data	représente les données personnalisées passées à la requête
function resource eio sendfile	eio_sendfile() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio sendfile mixed $out_fd mixed $in_fd int $offset int $length int $pri callable $callback string $data	transf&egrave;re des donn&eacute;es entre des descripteurs de fichiers
function eio set max poll time $nseconds	nombre de secondes
function void eio set max poll time float $nseconds	d&eacute;finit la dur&eacute;e maximale de la file d'attente
function eio stat $data	variables arbitraires à passer à la fonction de rappel callback
function eio stat $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio stat $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio stat $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio stat $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio stat $path	le chemin vers le fichier
function eio stat $data	représente les données personnalisées passées à la requête
function resource eio stat	eio_stat() retourne une ressource demandée en cas de succès ou false si une erreur survient
function resource eio stat string $path int $pri callable $callback mixed $data	r&eacute;cup&egrave;re le statut d'un fichier
function eio statvfs $data	variables arbitraires à passer à la fonction de rappel callback
function eio statvfs $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio statvfs $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio statvfs $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio statvfs $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio statvfs $path	nom du chemin dun fichier contenu dans le système de fichiers monté
function eio statvfs $data	représente les données personnalisées passées à la requête
function resource eio statvfs	eio_statvfs() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio statvfs string $path int $pri callable $callback mixed $data	r&eacute;cup&egrave;re les statistiques du syst&egrave;me de fichiers
function eio symlink $data	variables arbitraires à passer à la fonction de rappel callback
function eio symlink $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio symlink $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio symlink $path	chemin source
function eio symlink $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio symlink $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio symlink $new_path	chemin cible
function eio symlink $data	représente les données personnalisées passées à la requête
function resource eio symlink	eio_symlink() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio symlink string $path string $new_path int $pri callable $callback mixed $data	cr&eacute;e un lien symbolique
function eio truncate $data	variables arbitraires à passer à la fonction de rappel callback
function eio truncate $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio truncate $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio truncate $offset	position depuis le début du fichier
function eio truncate $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio truncate $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio truncate $path	chemin vers le fichier
function eio truncate $data	représente les données personnalisées passées à la requête
function resource eio truncate	eio_busy() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio truncate string $path int $offset int $pri callable $callback mixed $data	tronque un fichier
function eio unlink $data	variables arbitraires à passer à la fonction de rappel callback
function eio unlink $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio unlink $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio unlink $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio unlink $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio unlink $path	chemin vers le fichier
function eio unlink $data	représente les données personnalisées passées à la requête
function resource eio unlink	eio_unlink() retourne la ressource demandée en cas de succès ou false si une erreur survient
function resource eio unlink string $path int $pri callable $callback mixed $data	supprime un nom et &eacute;ventuellement le fichier qui s'y r&eacute;f&egrave;re
function eio write $data	variables arbitraires à passer à la fonction de rappel callback
function eio write $length	nombre maximum doctets à écrire
function eio write $req	est la ressource optionnelle de la requête qui peut être utilisée avec les fonctions comme eio_get_last_error()
function eio write $result	représente la valeur résultante spécifique à la requête ; basiquement la valeur retournée par lappel système correspondant
function eio write $str	chaîne de caractères source
function eio write $offset	position depuis le début du fichier
function eio write $callback	la fonction de rappel callback est appelée lorsque la requête est terminée
function eio write $fd	un flux une ressource de socket ou un descripteur de fichier i
function eio write $pri	la priorité de la requête : eio_pri_default eio_pri_min eio_pri_max ou null
function eio write $data	représente les données personnalisées passées à la requête
function resource eio write	eio_write() retourne la ressource demandée ou false si une erreur survient
function resource eio write mixed $fd string $str int $length int $offset int $pri callable $callback mixed $data	ecrit dans un fichier
function empty $var	variable à vérifier
function bool empty	retourne false si var existe et est non-vide et dont la valeur nest pas zéro
function bool empty mixed $var	d&eacute;termine si une variable est vide
function enchant broker describe $broker	ressource dun sponsor
function array enchant broker describe	cette fonction retourne true en cas de succès ou false si une erreur survient
function array enchant broker describe resource $broker	&eacute;num&egrave;re les fournisseurs enchant
function enchant broker dict exists $tag	langage dans un format comme us_us ch_de etc
function enchant broker dict exists $broker	ressource de sponsor
function bool enchant broker dict exists	retourne true si le langage existe false sinon
function bool enchant broker dict exists resource $broker string $tag	v&eacute;rifie si un dictionnaire existe
function enchant broker free $broker	ressource de sponsor
function bool enchant broker free	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool enchant broker free resource $broker	lib&egrave;re la ressource de sponsor ainsi que ses dictionnaires
function enchant broker list dicts $broker	ressource de sponsor
function mixed enchant broker list dicts	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed enchant broker list dicts resource $broker	retourne une liste de tous les dictionnaires disponibles
function enchant broker request dict $tag	une balise décrivant le langage par exemple en_us de_de
function enchant broker request dict $broker	ressource de sponsor
function resource enchant broker request dict	retourne une ressource de dictionnaire en cas de succès ou false si une erreur survient
function resource enchant broker request dict resource $broker string $tag	cr&eacute;e un nouveau dictionnaire
function enchant broker request pwl dict $filename	chemin vers le fichier pwl
function enchant broker request pwl dict $broker	ressource de sponsor
function resource enchant broker request pwl dict	retourne une ressource de dictionnaire en cas de succès ou false si une erreur survient
function resource enchant broker request pwl dict resource $broker string $filename	cr&eacute;e un dictionnaire en utilisant un fichier pwl
function enchant broker set ordering $ordering	liste de noms de fournisseurs séparée par une virgule
function enchant broker set ordering $tag	la langue
function enchant broker set ordering $broker	ressource de sponsor
function bool enchant broker set ordering	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool enchant broker set ordering resource $broker string $tag string $ordering	d&eacute;clare une pr&eacute;f&eacute;rence pour un dictionnaire d'une langue
function enchant dict add to personal $dict	ressource de dictionnaire
function enchant dict add to personal $word	le mot à ajouter
function void enchant dict add to personal resource $dict string $word	ajoute un mot &agrave; la liste des mots personnelle
function enchant dict check $dict	ressource de dictionnaire
function enchant dict check $word	le mot à vérifier
function bool enchant dict check	retourne true si le mot est correctement orthographié false sinon
function bool enchant dict check resource $dict string $word	v&eacute;rifie si un mot est correctement orthographi&eacute;
function enchant dict describe $dict	ressource de dictionnaire
function mixed enchant dict describe	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed enchant dict describe resource $dict	d&eacute;crit un dictionnaire
function enchant dict get error $dict	ressource de dictionnaire
function string enchant dict get error	retourne le message derreur sous la forme dune chaîne de caractères ou false si une erreur survient
function string enchant dict get error resource $dict	retourne la derni&egrave;re erreur de la session courante
function enchant dict is in session $dict	ressource de dictionnaire
function enchant dict is in session $word	le mot à vérifier
function bool enchant dict is in session	retourne true si le mot existe false sinon
function bool enchant dict is in session resource $dict string $word	v&eacute;rifie si un mot existe dans une session de v&eacute;rification
function enchant dict store replacement $dict	ressource de dictionnaire
function enchant dict store replacement $cor	le mot correct
function enchant dict store replacement $mis	le mot à traiter
function void enchant dict store replacement resource $dict string $mis string $cor	ajoute une orthographe pour un mot
function end $array	le tableau
function mixed end	retourne la valeur du dernier élément ou false si le tableau est vide
function mixed end array $array	positionne le pointeur de tableau en fin de tableau
function eregi replace $string	la chaîne dentrée
function eregi replace $pattern	une expression rationnelle posix
function eregi replace $replacement	si pattern contient des sous-masques mis entre parenthèses replacement contiendra des sous-chaînes sous la forme \ digit qui seront remplacées par le texte correspondant au sous-masque mis entre parenthèses ; \0 correspondra au contenu complet de la chaîne
function string eregi replace	la chaîne modifiée est retournée
function string eregi replace string $pattern string $replacement string $string	remplacement par expression rationnelle insensible &agrave; la casse
function eregi $string	la chaîne dentrée
function eregi $regs	si des correspondances sont trouvées pour les sous-masques entre parenthèses de pattern et que la fonction est appelé avec le troisième argument regs les correspondances seront stockées dans des éléments du tableau regs
function eregi $pattern	expression rationnelle insensible à la casse
function int eregi	retourne la longueur de la chaîne trouvée si une correspondance pour le masque pattern a été trouvée dans string ou false si aucune correspondance na été trouvée ou si une erreur est survenue
function int eregi string $pattern string $string array $regs	recherche par expression rationnelle insensible &agrave; la casse
function error log $extra_headers	les en-têtes supplémentaires
function error log $destination	la destination
function error log $message	le message derreur qui doit être stocké
function error log $message_type	spécifie la destination du message derreur
function bool error log	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool error log string $message int $message_type string $destination string $extra_headers	envoi un message d'erreur vers le gestionnaire d'erreurs d&eacute;fini
function error reporting $level	le nouveau niveau error_reporting
function int error reporting	retourne lancien niveau d error_reporting ou le niveau derreurs courant si le paramètre level nest pas fourni
function int error reporting int $level	fixe le niveau de rapport d'erreurs php
function escapeshellcmd $command	la commande à échapper
function string escapeshellcmd	la chaîne échappée
function string escapeshellcmd string $command	prot&egrave;ge les caract&egrave;res sp&eacute;ciaux du shell
function eval $code	code php valide à évaluer
function mixed eval	eval() retourne null sauf si return est appelé dans le code évalué auquel cas la valeur passée à return est retournée
function mixed eval string $code	ex&eacute;cute une cha&icirc;ne comme un script php
function event add $event	ressource event valide
function event add $timeout	timeout optionnel en microsecondes
function bool event add	event_add() retourne true en cas de succès ou false si une erreur survient
function bool event add resource $event int $timeout	ajoute un &eacute;v&egrave;nement aux &eacute;v&egrave;nements monitor&eacute;s
function event base free $event_base	ressource de base dévènements valide
function void event base free resource $event_base	d&eacute;truit une base d'&eacute;v&egrave;nements
function event base loop $event_base	une ressource de base dévènements valide
function event base loop $flags	paramètre optionnel qui peut être une combinaison de evloop_once et evloop_nonblock
function int event base loop	event_base_loop() retourne 0 en cas de succès -1 en cas derreurs et 1 si aucun évènement na été enregistré
function int event base loop resource $event_base int $flags	traitement des &eacute;v&egrave;nements
function resource event base new	event_base_new() retourne une ressource de base dévènements valide en cas de succès ou false sinon
function resource event base new	cr&eacute;er et initialise une nouvelle base d'&eacute;v&egrave;nements
function event base reinit $event_base	ressource de base dévénements qui doit être réinitialisé
function bool event base reinit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool event base reinit resource $event_base	r&eacute;initialise la base de l'&eacute;v&eacute;nement apr&egrave;s un fork
function event base set $event	ressource dévènement valide
function event base set $event_base	ressource de base dévènements valide
function bool event base set	event_base_set() retourne true en cas de succès ou false sinon
function bool event base set resource $event resource $event_base	associe une base avec un &eacute;v&egrave;nement
function event buffer base set $event_base	ressource de base dévènements valide
function event buffer base set $bevent	ressource dévènement bufferisé valide
function bool event buffer base set	event_buffer_base_set() retourne true en cas de succès ou false sinon
function bool event buffer base set resource $bevent resource $event_base	associe un &eacute;v&egrave;nement bufferis&eacute; avec une base
function event buffer disable $events	une combinaison de ev_read et ev_write
function event buffer disable $bevent	ressource dévènement bufferisé valide
function bool event buffer disable	event_buffer_disable() retourne true en cas de succès ou false sinon
function bool event buffer disable resource $bevent int $events	d&eacute;sactive un &eacute;v&egrave;nement bufferis&eacute;
function event buffer enable $events	une combinaison de ev_read et ev_write
function event buffer enable $bevent	active un évènement bufferisé
function bool event buffer enable	event_buffer_enable() retourne true en cas de succès ou false sinon
function bool event buffer enable resource $bevent int $events	active un &eacute;v&egrave;nement bufferis&eacute;
function event buffer free $bevent	ressource dévènement bufferisé valide
function void event buffer free resource $bevent	d&eacute;truit un &eacute;v&egrave;nement bufferis&eacute;
function event buffer priority set $priority	niveau de priorité
function event buffer priority set $bevent	ressource dévènement bufferisé valide
function bool event buffer priority set	event_buffer_priority_set() retourne true en cas de succès ou false sinon
function bool event buffer priority set resource $bevent int $priority	assigne une priorit&eacute; &agrave; un &eacute;v&egrave;nement bufferis&eacute;
function event buffer read $bevent	ressource dévènement bufferisé valide
function event buffer read $data_size	taille en octets
function string event buffer read resource $bevent int $data_size	lit des donn&eacute;es depuis un &eacute;v&egrave;nement bufferis&eacute;
function event buffer set callback $arg	un argument optionnel à passer à chaque fonction de rappel
function event buffer set callback $writecb	fonction de rappel à appeler lorsque le descripteur est prêt pour écriture ou null si aucune fonction de rappel nest à utiliser
function event buffer set callback $errorcb	fonction de rappel à invoquer lorsquune erreur survient sur le descripteur ne peut pas être null
function event buffer set callback $readcb	fonction de rappel à invoquer sil y a des données à lire ou null si aucune fonction de rappel nest à utiliser
function event buffer set callback $event	ressource évènement bufferisé valide
function bool event buffer set callback	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool event buffer set callback resource $event mixed $readcb mixed $writecb mixed $errorcb mixed $arg	affecte ou r&eacute;initialise les rappels pour un &eacute;v&egrave;nement bufferis&eacute;
function event buffer timeout set $bevent	ressource dévènement bufferisée valide
function event buffer timeout set $write_timeout	délai décriture en secondes
function event buffer timeout set $read_timeout	délai de lecture en secondes
function void event buffer timeout set resource $bevent int $read_timeout int $write_timeout	affecte les d&eacute;lais de lecture et &eacute;criture pour un &eacute;v&egrave;nement bufferis&eacute;
function event del $event	ressource dévènement valide
function bool event del	event_del() retourne true en cas de succès ou false sinon
function bool event del resource $event	supprime un &eacute;v&egrave;nement de la liste des &eacute;v&egrave;nements surveill&eacute;s
function event free $event	ressource dévènement valide
function void event free resource $event	lib&egrave;re une ressource d'&eacute;v&egrave;nement
function event priority set $priority	niveau de priorité
function event priority set $event	une ressource dévénement valide
function bool event priority set	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool event priority set resource $event int $priority	assigne une priorit&eacute; &agrave; un &eacute;v&eacute;nement
function event set $fd	ressource de flux php valide
function event set $arg	paramètres optionnels à passer à la callback
function event set $event	ressource dévènement valide
function event set $callback	fonction de rappel à appeler lorsquun évènement correspondant survient
function event set $events	un ensemble de drapeaux indiquant lévènement désiré peut être ev_read et / ou ev_write
function bool event set	event_set() retourne true en cas de succès ou false sinon
function bool event set resource $event mixed $fd int $events mixed $callback mixed $arg	pr&eacute;pare un &eacute;v&egrave;nement
function event timer set $event	ressource dévénement valide
function event timer set $callback	fonction de rappel à appeler lorsque des événements correspondants surviennent
function event timer set $arg	paramètre optionnel de la fonction de rappel
function bool event timer set	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool event timer set resource $event callable $callback mixed $arg	pr&eacute;pare un &eacute;v&eacute;nement timer
function exec $output	si largument output est présent alors ce tableau sera rempli par les lignes retournées par la commande
function exec $return_var	si largument return_var est présent en plus du tableau output alors le statut de retour dexécution sera inscrit dans cette variable
function exec $command	la commande à exécuter
function string exec	la dernière ligne du résultat de la commande
function string exec string $command array $output int $return_var	ex&eacute;cute un programme externe
function exif imagetype $filename	limage à vérifier
function int exif imagetype	lorsquune valeur valide est trouvée la constante appropriée est retournée et sinon false
function int exif imagetype string $filename	d&eacute;termine le type d'une image
function exif read data $sections	liste de valeur séparées par des virgules des sections qui devront être présentées dans le tableau de résultat
function exif read data $thumbnail	lorsque défini à true la miniature elle-même est lue
function exif read data $arrays	spécifie si chaque section doit être un tableau ou non
function exif read data $filename	le nom du fichier image à lire
function array exif read data	retourne un tableau associatif où les indexes sont les noms des en-têtes et les valeurs sont les valeurs associées à ces en-têtes
function array exif read data string $filename string $sections bool $arrays bool $thumbnail	lit les en-t&ecirc;tes exif dans les images jpeg ou tiff
function exif thumbnail $imagetype	le type de limage retourné de la miniature retournée
function exif thumbnail $height	la hauteur retournée de la miniature retournée
function exif thumbnail $filename	le nom du fichier image à lire
function exif thumbnail $width	la largeur retournée de la miniature retournée
function string exif thumbnail	retourne la miniature embarquée ou false si limage ne contient pas de miniature
function string exif thumbnail string $filename int $width int $height int $imagetype	r&eacute;cup&egrave;re la miniature d'une image tiff ou jpeg
function exit $status	si status est une chaîne de caractères cette fonction affichera le status juste avant de sortir
function void exit string $status	affiche un message et termine le script courant
function expect expectl $expect	un flux de données expect ouvert précédemment avec expect_popen()
function expect expectl $cases	un tableau des cas expect
function int expect expectl	retourne une valeur associée avec le motif qui correspond
function int expect expectl resource $expect array $cases array $match	attend jusqu'&agrave; ce que la sortie d'un processus corresponde &agrave; un des motifs un p&eacute;riode de temps sp&eacute;cifique est pass&eacute;e ou un eof est vu
function expect popen $command	commande à exécuter
function resource expect popen	retourne un flux de données pty ouvert au processus stdio stdout et stderr
function resource expect popen string $command	ex&eacute;cute une commande via le shell bourne et ouvre le flux pty au processus
function explode $string	la chaîne initiale
function explode $limit	si limit est défini et positif le tableau retourné contient au maximum limit éléments et le dernier élément contiendra le reste de la chaîne
function explode $delimiter	le séparateur
function array explode	retourne un tableau de chaînes de caractères créées en découpant la chaîne du paramètre string en plusieurs morceaux suivant le paramètre delimiter
function array explode string $delimiter string $string int $limit	coupe une cha&icirc;ne en segments
function expm1 $arg	largument à traiter
function float expm1	e à la puissance arg moins un
function float expm1 float $arg	calcule pr&eacute;cis&eacute;ment exponentiel moins un
function fam cancel monitor $fam_monitor	une ressource retournée par une des fonctions fam_monitor_xxx
function fam cancel monitor $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function bool fam cancel monitor	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fam cancel monitor resource $fam resource $fam_monitor	termine le monitoring
function fam close $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function void fam close resource $fam	ferme la connexion fam
function fam monitor directory $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function fam monitor directory $dirname	chemin vers le dossier surveillé
function resource fam monitor directory	retourne une ressource ou false si une erreur survient
function resource fam monitor directory resource $fam string $dirname	surveiller les changements dans un dossier
function fam monitor file $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function fam monitor file $filename	chemin vers le fichier surveillé
function resource fam monitor file	retourne une ressource ou false si une erreur survient
function resource fam monitor file resource $fam string $filename	surveille un fichier r&eacute;gulier pour les changements
function fam next event $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function array fam next event	retourne un tableau contenant un code événement fam dans lentrée code le chemin vers le fichier ciblé dans lentrée filename et optionnellement un nom dhôte dans lentrée hostname
function array fam next event resource $fam	retourne le prochain &eacute;v&eacute;nement fam en attente
function fam open $appname	chaîne de caractères identifiant lapplication pour les journaux de logs
function resource fam open	retourne une ressource représentant une connexion à un service fam en cas de succès ou false si une erreur survient
function resource fam open string $appname	ouvre une connexion vers le d&eacute;mon fam
function fam pending $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function int fam pending	retourne une valeur différente de zéro si des évènements sont disponibles pour être récupérés avec fam_next_event()
function int fam pending resource $fam	v&eacute;rifie si des &eacute;v&eacute;nements fam sont disponibles
function fam resume monitor $fam_monitor	une ressource retournée par une des fonctions fam_monitor_xxx
function fam resume monitor $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function bool fam resume monitor	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fam resume monitor resource $fam resource $fam_monitor	reprend un monitoring suspendu
function fam suspend monitor $fam_monitor	une ressource retournée par une des fonctions fam_monitor_xxx
function fam suspend monitor $fam	une ressource représentant une connexion à un service fam retournée par la fonction fam_open()
function bool fam suspend monitor	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fam suspend monitor resource $fam resource $fam_monitor	suspend temporairement le monitoring
function fann create from file $configuration_file	le chemin vers le fichier de configuration
function resource fann create from file	retourne une ressource de réseau de neurones en cas de succès ou false si une erreur survient
function resource fann create from file string $configuration_file	consruit une propagation de retour du r&eacute;seau neuronal depuis un fichier de configuration
function fann create shortcut array $layers	un tableau de tailles de couches
function fann create shortcut array $num_layers	le nombre total de couches incluant les couches dentrée et de sortie
function resource fann create shortcut array	retourne une ressource représentant le réseau neurinal en cas de succès ou false si une erreur survient
function resource fann create shortcut array int $num_layers array $layers	cr&eacute;e une propagation de retour standart de r&eacute;seau neuronal qui n'est pas totalement connect&eacute; et a des connexions raccourcies
function fann create train from callback $num_output	le nombre de sorties par données dentrainement
function fann create train from callback $num_data	le nombre de données dentrainement
function fann create train from callback $num_input	le nombre dentrées par données dentrainement
function resource fann create train from callback	retourne une ressource de données dentrainement en cas de succès ou false si une erreur survient
function resource fann create train from callback int $num_data int $num_input int $num_output callable $user_function	cr&eacute;e la structure de donn&eacute;es d'entrainement depuis une fonction fournie par l'utilisateur
function fann create train $num_output	le nombre de sorties par données dentrainement
function fann create train $num_data	le nombre de données dentrainement
function fann create train $num_input	le nombre dentrées par données dentrainement
function resource fann create train	retourne une ressource de données dentrainement en cas de succès ou false si une erreur survient
function resource fann create train int $num_data int $num_input int $num_output	cr&eacute;e une structure vide de donn&eacute;es d'entrainement
function fann destroy train $train_data	ressource de données dentrainement du réseau de neurones
function bool fann destroy train	retourne true en cas de succès false sinon
function bool fann destroy train resource $train_data	d&eacute;truit les donn&eacute;es d'entrainement
function fann duplicate train data $data	ressource de données dentrainement du réseau de neurones
function resource fann duplicate train data	retourne une ressource de données dentrainement en cas de succès ou false si une erreur survient
function resource fann duplicate train data resource $data	retourne une copie exact des donn&eacute;es d'entrainement fann
function fann get connection array $ann	ressource de réseau de neurones
function array fann get connection array	un tableau de connexions dans le réseau
function array fann get connection array resource $ann	r&eacute;cup&egrave;re les connexions dans le r&eacute;seau
function fann get connection rate $ann	ressource de réseau de neurones
function float fann get connection rate	le taux de connexion utilisé lorsque le réseau a été créé ou false si une erreur survient
function float fann get connection rate resource $ann	r&eacute;cup&egrave;re le taux de connexion lorsque le r&eacute;seau a &eacute;t&eacute; cr&eacute;&eacute;
function fann get errno $errdat	soit une ressource de réseau de neurones soit une ressource de données dentrainement dun réseau de neurones
function int fann get errno	le numéro de lerreur ou false si une erreur survient
function int fann get errno resource $errdat	retourne le num&eacute;ro de la derni&egrave;re erreur
function fann get num input $ann	ressource de réseau de neurones
function int fann get num input	le nombre de neurones entrants ou false si une erreur survient
function int fann get num input resource $ann	r&eacute;cup&egrave;re le nombre de neurones entrants
function fann get num layers $ann	ressource de réseau de neurones
function int fann get num layers	le nombre de couches du réseau neuronal ou false si une erreur survient
function int fann get num layers resource $ann	r&eacute;cup&egrave;re le nombre de couches du r&eacute;seau neuronal
function fann get quickprop mu $ann	ressource de réseau de neurones
function float fann get quickprop mu	le facteur mu ou false si une erreur survient
function float fann get quickprop mu resource $ann	retourne le facteur mu
function fann get rprop decrease factor $ann	ressource de réseau de neurones
function float fann get rprop decrease factor	le facteur de décroissement ou false si une erreur survient
function float fann get rprop decrease factor resource $ann	retourne le facteur d'accroissement utilis&eacute; pendant l'entrainement rprop
function fann get rprop delta max $ann	ressource de réseau de neurones
function float fann get rprop delta max	la taille maximale de létape ou false si une erreur survient
function float fann get rprop delta max resource $ann	retourne la taille maximale de l'&eacute;tape
function fann get rprop delta zero $ann	ressource de réseau de neurones
function ReturnType fann get rprop delta zero	la taille initiale de létape ou false si une erreur survient
function ReturnType fann get rprop delta zero resource $ann	retourne la taille initiale de l'&eacute;tape
function fann get rprop increase factor $ann	ressource de réseau de neurones
function float fann get rprop increase factor	le facteur croissant ou false si une erreur survient
function float fann get rprop increase factor resource $ann	retourne le facteur croissant utilis&eacute; pendant l'entrainement rprop
function fann get sarprop step error shift $ann	ressource de réseau de neurones
function float fann get sarprop step error shift	le décalage de lerreur lors de létape sarprop ou false si une erreur survient
function float fann get sarprop step error shift resource $ann	retourne le d&eacute;calage de l'erreur lors de l'&eacute;tape sarprop
function fann get sarprop temperature $ann	ressource de réseau de neurones
function float fann get sarprop temperature	la température sarprop ou false si une erreur survient
function float fann get sarprop temperature resource $ann	retourne la temp&eacute;rature sarprop
function fann get sarprop weight decay shift $ann	ressource de réseau de neurones
function float fann get sarprop weight decay shift	le changement décroissant du poids sarprop ou false si une erreur survient
function float fann get sarprop weight decay shift resource $ann	retourne le changement d&eacute;croissant du poids sarprop
function fann get total connections $ann	ressource de réseau de neurones
function int fann get total connections	le nombre total de connexions dans la totalité du réseau ou false si une erreur survient
function int fann get total connections resource $ann	r&eacute;cup&egrave;re le nombre total de connexions dans la totalit&eacute; du r&eacute;seau
function fann get train error function $ann	ressource de réseau de neurones
function int fann get train error function	la constante de fonction derreur ou false si une erreur survient
function int fann get train error function resource $ann	retourne la fonction d'erreur utilis&eacute;e pendant l'entrainement
function fann get train stop function $ann	ressource de réseau de neurones
function int fann get train stop function	la constante de fonction darrêt ou false si une erreur survient
function int fann get train stop function resource $ann	retourne la fonction d'arr&ecirc;t utilis&eacute;e pendant l'entrainement
function fann get training algorithm $ann	ressource de réseau de neurones
function int fann get training algorithm	la constante de l algorithme dentrainement ou false si une erreur survient
function int fann get training algorithm resource $ann	retourne l'algorithme d'entrainement
function fann length train data $data	ressource de données dentrainement du réseau de neurones
function int fann length train data	le nombre déléments dans les données dentrainement ou false si une erreur survient
function int fann length train data resource $data	retourne le nombre de masques d'entrainement dans les donn&eacute;es d'entrainement
function fann num input train data $data	ressource de données dentrainement du réseau de neurones
function int fann num input train data	le nombre dentrées ou false si une erreur survient
function int fann num input train data resource $data	retourne le nombre d'entr&eacute;es dans chaque masque d'entrainement dans les donn&eacute;es d'entrainement
function fann num output train data $data	ressource de données dentrainement du réseau de neurones
function int fann num output train data	le nombre de sortie ou false si une erreur survient
function int fann num output train data resource $data	retourne le nombre de sortie dans chaque masque d'entrainement dans les donn&eacute;es d'entrainement
function fann read train from file $filename	le fichier dentrée au format suivant : num_train_data num_input num_output inputdata séparé par un espace outputdata séparé par un espace
function resource fann read train from file	retourne une ressource de données dentrainement en cas de succès ou false si une erreur survient
function resource fann read train from file string $filename	lit un fichier contenant les donn&eacute;es d'entrainement
function fann reset errno $errdat	soit une ressource de réseau de neurones soit une ressource de données dentrainement dun réseau de neurones
function void fann reset errno resource $errdat	r&eacute;initialise le num&eacute;ro de la derni&egrave;re erreur
function fann reset MSE $ann	ressource de réseau de neurones
function bool fann reset MSE	retourne true en cas de succès false sinon
function bool fann reset MSE string $ann	r&eacute;initialise l'erreur quadratique moyenne du r&eacute;seau
function fann run $input	tableau de valeurs dentrées
function fann run $ann	ressource de réseau de neurones
function array fann run	tableau de valeurs de sorties ou false si une erreur survient
function array fann run resource $ann array $input	ex&eacute;cute les entr&eacute;es via le r&eacute;seau neuronal
function fann save train $file_name	le nom du fichier où la sauvegarde à lieu
function fann save train $data	ressource de données dentrainement du réseau de neurones
function bool fann save train	retourne true en cas de succès false sinon
function bool fann save train resource $data string $file_name	sauvegarde la structure d'entrainement dans un fichier
function fann save $ann	ressource de réseau de neurones
function fann save $configuration_file	le chemin vers le fichier de configuration
function bool fann save	retourne true en cas de succès false sinon
function bool fann save resource $ann string $configuration_file	sauvegarde le r&eacute;seau complet dans un fichier de configuration
function fann scale input train data $train_data	ressource de données dentrainement du réseau de neurones
function fann scale input train data $new_min	nouveau minimum après la mise à léchelle des entrées dans les données dentrainement
function fann scale input train data $new_max	nouveau maximum après la mise à léchelle des entrées dans les données dentrainement
function bool fann scale input train data	retourne true en cas de succès false sinon
function bool fann scale input train data resource $train_data float $new_min float $new_max	met &agrave; l'&eacute;chelle les entr&eacute;es dans les donn&eacute;es d'entrainement &agrave; l'intervalle sp&eacute;cifi&eacute;
function fann scale input $ann	ressource de réseau de neurones
function fann scale input $input_vector	vecteur dentrée qui va être mise à léchelle
function bool fann scale input	retourne true en cas de succès false sinon
function bool fann scale input resource $ann array $input_vector	met &agrave; l'&eacute;chelle les donn&eacute;es dans le vecteur d'entr&eacute;e avant de les donner &agrave; ann en se basant sur les param&egrave;tres pr&eacute;c&eacute;demment calcul&eacute;s
function fann scale output train data $train_data	ressource de données dentrainement du réseau de neurones
function fann scale output train data $new_min	nouveau minimum après la mise à léchelle des sorties dans les données dentrainement
function fann scale output train data $new_max	nouveau maximum après la mise à léchelle des sorties dans les données dentrainement
function bool fann scale output train data	retourne true en cas de succès false sinon
function bool fann scale output train data resource $train_data float $new_min float $new_max	met &agrave; l'&eacute;chelle les sorties dans les donn&eacute;es d'entrainement &agrave; l'intervalle sp&eacute;cifi&eacute;
function fann scale train $train_data	ressource de données dentrainement du réseau de neurones
function fann scale train $ann	ressource de réseau de neurones
function bool fann scale train	retourne true en cas de succès false sinon
function bool fann scale train resource $ann resource $train_data	met &agrave; l'&eacute;chelle les donn&eacute;es d'entr&eacute;e et de sortie en se basant sur les param&egrave;tres pr&eacute;c&eacute;demment calcul&eacute;s
function fann set activation function hidden $activation_function	la constante de fonctions dactivation
function fann set activation function hidden $ann	ressource de réseau de neurones
function bool fann set activation function hidden	retourne true en cas de succès false sinon
function bool fann set activation function hidden resource $ann int $activation_function	d&eacute;fini la fonction d'activation pour toutes les couches cach&eacute;es
function fann set activation function output $activation_function	la constante de fonctions dactivation
function fann set activation function output $ann	ressource de réseau de neurones
function bool fann set activation function output	retourne true en cas de succès false sinon
function bool fann set activation function output resource $ann int $activation_function	d&eacute;fini la fonction d'activation pour la couche d'entr&eacute;e
function fann set activation function $activation_function	la constante de fonctions dactivation
function fann set activation function $neuron	le numéro du neurone
function fann set activation function $layer	le numéro de la couche
function fann set activation function $ann	ressource de réseau de neurones
function bool fann set activation function	retourne true en cas de succès false sinon
function bool fann set activation function resource $ann int $activation_function int $layer int $neuron	d&eacute;fini la fonction d'activation pour le neurone et la couche sp&eacute;cifi&eacute;s
function fann set activation steepness hidden $activation_steepness	la pente dactivation
function fann set activation steepness hidden $ann	ressource de réseau de neurones
function bool fann set activation steepness hidden	retourne true en cas de succès false sinon
function bool fann set activation steepness hidden resource $ann float $activation_steepness	d&eacute;fini la raideur de la pente d'activation pour tous les neurones des couches cach&eacute;es
function fann set activation steepness layer $activation_steepness	la pente dactivation
function fann set activation steepness layer $layer	le numéro de la couche
function fann set activation steepness layer $ann	ressource de réseau de neurones
function bool fann set activation steepness layer	retourne true en cas de succès false sinon
function bool fann set activation steepness layer resource $ann float $activation_steepness int $layer	d&eacute;fini la pente d'activation pour tous les neurones dans la couche dont le num&eacute;ro est fourni
function fann set activation steepness output $ann	ressource de réseau de neurones
function fann set activation steepness output $activation_steepness	la raideur de la pente dactivation
function bool fann set activation steepness output	retourne true en cas de succès false sinon
function bool fann set activation steepness output resource $ann float $activation_steepness	d&eacute;fini la raideur de la pente d'activation dans la couche de sortie
function fann set activation steepness $activation_steepness	la pente dactivation
function fann set activation steepness $neuron	le numéro du neurone
function fann set activation steepness $layer	le numéro de la couche
function fann set activation steepness $ann	ressource de réseau de neurones
function bool fann set activation steepness	retourne true en cas de succès false sinon
function bool fann set activation steepness resource $ann float $activation_steepness int $layer int $neuron	d&eacute;fini la pente d'activation pour le neurone et le num&eacute;ro de couche donn&eacute;s
function fann set callback $ann	ressource de réseau de neurones
function bool fann set callback	retourne true en cas de succès false sinon
function bool fann set callback resource $ann collable $callback	d&eacute;fini la fonction de rappel &agrave; utiliser pendant l'entrainement
function fann set cascade activation functions $ann	ressource de réseau de neurones
function fann set cascade activation functions $cascade_activation_functions	le tableau des fonctions dactivation candidate en cascade
function bool fann set cascade activation functions	retourne true en cas de succès false sinon
function bool fann set cascade activation functions resource $ann array $cascade_activation_functions	d&eacute;fini le tableau des fonctions d'activation candidate en cascade
function fann set cascade activation steepnesses $cascade_activation_steepnesses_count	le tableaux des raideurs dactivation candidate en cascade
function fann set cascade activation steepnesses $ann	ressource de réseau de neurones
function bool fann set cascade activation steepnesses	retourne true en cas de succès false sinon
function bool fann set cascade activation steepnesses resource $ann array $cascade_activation_steepnesses_count	d&eacute;fini le tableaux des raideurs d'activation candidate en cascade
function fann set cascade candidate stagnation epochs $cascade_candidate_stagnation_epochs	le nombre dépoques de stagnation candidates en cascade
function fann set cascade candidate stagnation epochs $ann	ressource de réseau de neurones
function bool fann set cascade candidate stagnation epochs	retourne true en cas de succès false sinon
function bool fann set cascade candidate stagnation epochs resource $ann int $cascade_candidate_stagnation_epochs	d&eacute;fini le nombre d'&eacute;poques de stagnation candidates en cascade
function fann set cascade max cand epochs $ann	ressource de réseau de neurones
function fann set cascade max cand epochs $cascade_max_cand_epochs	lépoque maximale candidate
function bool fann set cascade max cand epochs	retourne true en cas de succès false sinon
function bool fann set cascade max cand epochs resource $ann int $cascade_max_cand_epochs	d&eacute;fini l'&eacute;poque maximale candidate
function fann set cascade max out epochs $cascade_max_out_epochs	lépoque maximale de sortie
function fann set cascade max out epochs $ann	ressource de réseau de neurones
function bool fann set cascade max out epochs	retourne true en cas de succès false sinon
function bool fann set cascade max out epochs resource $ann int $cascade_max_out_epochs	d&eacute;fini l'&eacute;poque maximale de sortie
function fann set cascade min cand epochs $ann	ressource de réseau de neurones
function fann set cascade min cand epochs $cascade_min_cand_epochs	lépoque minimale candidate
function bool fann set cascade min cand epochs	retourne true en cas de succès false sinon
function bool fann set cascade min cand epochs resource $ann int $cascade_min_cand_epochs	d&eacute;fini l'&eacute;poque minimale candidate
function fann set cascade min out epochs $cascade_min_out_epochs	lépoque minimale de sortie
function fann set cascade min out epochs $ann	ressource de réseau de neurones
function bool fann set cascade min out epochs	retourne true en cas de succès false sinon
function bool fann set cascade min out epochs resource $ann int $cascade_min_out_epochs	d&eacute;fini l'&eacute;poque minimale de sortie
function fann set cascade output change fraction $cascade_output_change_fraction	la fraction de modification de sortie en cascade
function fann set cascade output change fraction $ann	ressource de réseau de neurones
function bool fann set cascade output change fraction	retourne true en cas de succès false sinon
function bool fann set cascade output change fraction resource $ann float $cascade_output_change_fraction	d&eacute;fini la fraction de modification de sortie en cascade
function fann set cascade output stagnation epochs $ann	ressource de réseau de neurones
function fann set cascade output stagnation epochs $cascade_output_stagnation_epochs	le nombre dépoques de stagnation en cascade de sortie
function bool fann set cascade output stagnation epochs	retourne true en cas de succès false sinon
function bool fann set cascade output stagnation epochs resource $ann int $cascade_output_stagnation_epochs	d&eacute;fini le nombre d'&eacute;poques de stagnation en cascade de sortie
function fann set cascade weight multiplier $cascade_weight_multiplier	le multiplicateur de poids
function fann set cascade weight multiplier $ann	ressource de réseau de neurones
function bool fann set cascade weight multiplier	retourne true en cas de succès false sinon
function bool fann set cascade weight multiplier resource $ann float $cascade_weight_multiplier	d&eacute;fini le multiplicateur de poids
function fann set error log $errdat	soit une ressource de réseau de neurones soit une ressource de données dentrainement dun réseau de neurones
function fann set error log $log_file	le chemin du fichier dhistorisation
function void fann set error log resource $errdat string $log_file	d&eacute;fini l'endroit o&ugrave; les erreurs seront historis&eacute;es
function fann set learning momentum $learning_momentum	la dynamique dapprentissage
function fann set learning momentum $ann	ressource de réseau de neurones
function bool fann set learning momentum	retourne true en cas de succès false sinon
function bool fann set learning momentum resource $ann float $learning_momentum	d&eacute;fini la dynamique d'apprentissage
function fann set learning rate $learning_rate	le taux dapprentissage
function fann set learning rate $ann	ressource de réseau de neurones
function bool fann set learning rate	retourne true en cas de succès false sinon
function bool fann set learning rate resource $ann float $learning_rate	d&eacute;fini le taux d'apprentissage
function fann set output scaling params $train_data	ressource de données dentrainement du réseau de neurones
function fann set output scaling params $new_output_min	la limite inférieure souhaitée dans les données de sortie après mise à léchelle pas strictement suivi
function fann set output scaling params $new_output_max	la limite supérieur souhaitée dans les données de sortie après mise à léchelle pas strictement suivi
function fann set output scaling params $ann	ressource de réseau de neurones
function bool fann set output scaling params	retourne true en cas de succès false sinon
function bool fann set output scaling params resource $ann resource $train_data float $new_output_min float $new_output_max	calcule les param&egrave;tres d'&eacute;chelle de sortie pour une utilisation future en se basant sur les donn&eacute;es d'entrainement
function fann set quickprop decay $ann	ressource de réseau de neurones
function fann set quickprop decay $quickprop_decay	le facteur décroissant quickprop
function bool fann set quickprop decay	retourne true en cas de succès false sinon
function bool fann set quickprop decay resource $ann float $quickprop_decay	d&eacute;fini le facteur d&eacute;croissant quickprop
function fann set quickprop mu $quickprop_mu	le facteur mu
function fann set quickprop mu $ann	ressource de réseau de neurones
function bool fann set quickprop mu	retourne true en cas de succès false sinon
function bool fann set quickprop mu resource $ann float $quickprop_mu	d&eacute;fini le facteur quickprop mu
function fann set rprop decrease factor $ann	ressource de réseau de neurones
function fann set rprop decrease factor $rprop_decrease_factor	le facteur de diminution
function bool fann set rprop decrease factor	retourne true en cas de succès false sinon
function bool fann set rprop decrease factor resource $ann float $rprop_decrease_factor	d&eacute;fini le facteur de diminution utilis&eacute; pendant l'entrainement rprop
function fann set rprop delta max $rprop_delta_max	la taille maximale de létape
function fann set rprop delta max $ann	ressource de réseau de neurones
function bool fann set rprop delta max	retourne true en cas de succès false sinon
function bool fann set rprop delta max resource $ann float $rprop_delta_max	d&eacute;fini la taille maximale de l'&eacute;tape
function fann set rprop delta min $rprop_delta_min	la taille minimale de létape
function fann set rprop delta min $ann	ressource de réseau de neurones
function bool fann set rprop delta min	retourne true en cas de succès false sinon
function bool fann set rprop delta min resource $ann float $rprop_delta_min	d&eacute;fini la taille minimale de l'&eacute;tape
function fann set rprop delta zero $rprop_delta_zero	la taille de létape initiale
function fann set rprop delta zero $ann	ressource de réseau de neurones
function bool fann set rprop delta zero	retourne true en cas de succès false sinon
function bool fann set rprop delta zero resource $ann float $rprop_delta_zero	d&eacute;fini la taille de l'&eacute;tape initiale
function fann set sarprop step error shift $ann	ressource de réseau de neurones
function fann set sarprop step error shift $sarprop_step_error_shift	le changement de létape derreur sarprop
function bool fann set sarprop step error shift	retourne true en cas de succès false sinon
function bool fann set sarprop step error shift resource $ann float $sarprop_step_error_shift	d&eacute;fini le changement de l'&eacute;tape d'erreur sarprop
function fann set sarprop step error threshold factor $sarprop_step_error_threshold_factor	le facteur de seuil de létape derreur sarprop
function fann set sarprop step error threshold factor $ann	ressource de réseau de neurones
function bool fann set sarprop step error threshold factor	retourne true en cas de succès false sinon
function bool fann set sarprop step error threshold factor resource $ann float $sarprop_step_error_threshold_factor	d&eacute;fini le facteur de seuil de l'&eacute;tape d'erreur sarprop
function fann set sarprop temperature $ann	ressource de réseau de neurones
function fann set sarprop temperature $sarprop_temperature	la températeur sarprop
function bool fann set sarprop temperature	retourne true en cas de succès false sinon
function bool fann set sarprop temperature resource $ann float $sarprop_temperature	d&eacute;fini la temp&eacute;rateur sarprop
function fann set training algorithm $training_algorithm	une constante d algorithme dentrainement
function fann set training algorithm $ann	ressource de réseau de neurones
function bool fann set training algorithm	retourne true en cas de succès false sinon
function bool fann set training algorithm resource $ann int $training_algorithm	d&eacute;fini l'algorithme d'entrainement
function fann set weight $from_neuron	le neurone où la connexion commence
function fann set weight $to_neuron	le neurone où la connexion se termine
function fann set weight $ann	ressource de réseau de neurones
function fann set weight $weight	taille de la connexion
function bool fann set weight	retourne true en cas de succès false sinon
function bool fann set weight resource $ann int $from_neuron int $to_neuron float $weight	d&eacute;fini une connexion dans le r&eacute;seau
function fann shuffle train data $train_data	ressource de données dentrainement du réseau de neurones
function bool fann shuffle train data	retourne true en cas de succès false sinon
function bool fann shuffle train data resource $train_data	m&eacute;lange les donn&eacute;es d'entrainement et rend al&eacute;aloire leurs ordres
function fann subset train data $pos	position de départ
function fann subset train data $length	le nombre déléments copiés
function fann subset train data $data	ressource de données dentrainement du réseau de neurones
function resource fann subset train data	retourne une ressource de données dentrainement en cas de succès ou false si une erreur survient
function resource fann subset train data resource $data int $pos int $length	retourne une copie d'un sous-jeu de donn&eacute;es d'entrainement
function fann test data $data	ressource de données dentrainement du réseau de neurones
function fann test data $ann	ressource de réseau de neurones
function float fann test data	le mse mis à jour ou false si une erreur survient
function float fann test data resource $ann resource $data	effectue un test sur un jeu de donn&eacute;es d'entrainement et calcule le mse pour ces donn&eacute;es
function fann train on data $epochs_between_reports	le nombre dépoques entre les appels à la fonction de rappel
function fann train on data $data	ressource de données dentrainement du réseau de neurones
function fann train on data $ann	ressource de réseau de neurones
function fann train on data $desired_error	le fann_get_mse() ou le fann_get_bit_fail() voulu suivant la fonction darrêt choisie par la fonction fann_set_train_stop_function()
function fann train on data $max_epochs	le nombre maximal dépoques que lentrainement doit durer
function bool fann train on data	retourne true en cas de succès false sinon
function bool fann train on data resource $ann resource $data int $max_epochs int $epochs_between_reports float $desired_error	effectue un entrainement sur un jeu de donn&eacute;es complet pour une p&eacute;riode de temps
function boolean fastcgi finish request	cette fonction retourne true en cas de succès ou false si une erreur survient
function boolean fastcgi finish request	affiche toutes les donn&eacute;es de la r&eacute;ponse au client
function fbsql blob size $blob_handle	un gestionnaire de blob retourné par la fonction fbsql_create_blob()
function fbsql blob size $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function int fbsql blob size	retourne la taille du blob sous la forme dun entier ou false si une erreur survient
function int fbsql blob size string $blob_handle resource $link_identifier	retourne la taille d'un blob
function fbsql clob size $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function fbsql clob size $clob_handle	un gestionnaire de clob retourné par la fonction fbsql_create_clob()
function int fbsql clob size	retourne la taille du clob sous la forme dun entier ou false si une erreur survient
function int fbsql clob size string $clob_handle resource $link_identifier	retourne la taille d'un clob
function fbsql close $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function bool fbsql close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql close resource $link_identifier	ferme la connexion frontbase
function fbsql commit $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function bool fbsql commit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql commit resource $link_identifier	valide une transaction
function fbsql create clob $clob_data	les données clob
function fbsql create clob $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function string fbsql create clob	retourne un gestionnaire de ressource clob qui pourra être utilisé avec les commandes dinsertion ou de mise à jour pour stocker le clob dans la base de données
function string fbsql create clob string $clob_data resource $link_identifier	cr&eacute;e un clob
function fbsql create db $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function fbsql create db $database_name	le nom de la base de données sous la forme dune chaîne de caractères
function bool fbsql create db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql create db string $database_name resource $link_identifier string $database_options	cr&eacute;e une base de donn&eacute;es
function fbsql database password $database_password	le mot de passe sous la forme dune chaîne de caractères
function fbsql database password $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function string fbsql database password	retourne le mot de passe de base de données associé à la connexion courante
function string fbsql database password resource $link_identifier string $database_password	modifie / lit le mot de passe dans une base fbsql
function fbsql database $database	le nom de la base de données
function fbsql database $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function string fbsql database	retourne le nom de la base de données utilisée avec cette connexion
function string fbsql database resource $link_identifier string $database	lit ou d&eacute;finit le nom de la base de donn&eacute;es utilis&eacute;e avec une connexion
function fbsql db query $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function fbsql db query $database	la base de données à sélectionner
function fbsql db query $query	la requête sql à exécuter
function resource fbsql db query	retourne un identifiant de résultat positif frontbase ou false si une erreur survient
function resource fbsql db query string $database string $query resource $link_identifier	envoie une requ&ecirc;te &agrave; la base frontbase
function fbsql drop db $database_name	le nom de la base de données
function fbsql drop db $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function bool fbsql drop db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql drop db string $database_name resource $link_identifier	supprime une base de donn&eacute;es frontbase
function fbsql fetch assoc $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function array fbsql fetch assoc	retourne un tableau associatif contenant la ligne courante du résultat ou false sil ny a plus de lignes
function array fbsql fetch assoc resource $result	lit toute une ligne de r&eacute;sultat dans un tableau associatif
function fbsql fetch field $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function fbsql fetch field $field_offset	loffset numérique du champ
function object fbsql fetch field	retourne un objet contenant les informations sur le champ ou false si une erreur survient
function object fbsql fetch field resource $result int $field_offset	lit des informations sur une colonne dans un r&eacute;sultat et retourne un objet
function fbsql fetch lengths $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function array fbsql fetch lengths	retourne un tableau commençant à loffset 0 qui correspond aux tailles de chaque champ présent dans la dernière ligne récupérée par la fonction fbsql_fetch_row() ou false si une erreur survient
function array fbsql fetch lengths resource $result	lit la taille de chaque colonne d'un r&eacute;sultat
function fbsql fetch object $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function object fbsql fetch object	retourne un objet dont les propriétés correspondent à la ligne récupérée ou false sil ny a plus de ligne à lire
function object fbsql fetch object resource $result	lit une ligne de r&eacute;sultat sous forme d'objet
function fbsql fetch row $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function array fbsql fetch row	retourne un tableau qui correspond à la ligne récupérée où chaque colonne du résultat y est stocké en commençant par la position 0 ou false sil ny a plus de ligne à lire
function array fbsql fetch row resource $result	lit une ligne de r&eacute;sultat sous forme de tableau num&eacute;rique
function fbsql field flags $result	un pointeur de résultat retourné par la fonction fbsql_list_fields()
function fbsql field flags $field_offset	la position numérique du champ
function string fbsql field flags	retourne les options du champ field_offset dans le résultat result
function string fbsql field flags resource $result int $field_offset	lit les options associ&eacute;es &agrave; une colonne de r&eacute;sultat
function fbsql field len $result	un pointeur de résultat retourné par la fonction fbsql_list_fields()
function fbsql field len $field_offset	la position numérique du champ
function int fbsql field len	retourne la taille du champ spécifié
function int fbsql field len resource $result int $field_offset	retourne la taille d'un champ
function fbsql field name $result	un pointeur de résultat retourné par la fonction fbsql_list_fields()
function fbsql field name $field_index	la position numérique du champ
function string fbsql field name	retourne le nom sous la forme dune chaîne de caractères ou false si le champ nexiste pas
function string fbsql field name resource $result int $field_index	lit le nom d'un champ
function fbsql field table $field_offset	la position numérique du champ
function fbsql field table $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function string fbsql field table	retourne le nom de la table sous la forme dune chaîne de caractères
function string fbsql field table resource $result int $field_offset	lit le nom de la table d'origine d'un champ
function fbsql field type $field_offset	la position numérique du champ
function fbsql field type $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function string fbsql field type	retourne le type du champ sous la forme dune chaîne de caractères
function string fbsql field type resource $result int $field_offset	lit le type d'une colonne
function fbsql free result $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function bool fbsql free result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql free result resource $result	lib&egrave;re le r&eacute;sultat de la m&eacute;moire
function fbsql insert id $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function int fbsql insert id	retourne lidentifiant généré depuis la dernière requête insert ou 0 si la dernière requête na pas générée une valeur default unique
function int fbsql insert id resource $link_identifier	lit le dernier identifiant g&eacute;n&eacute;r&eacute; par une requ&ecirc;te insert
function fbsql list dbs $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function resource fbsql list dbs	retourne un pointeur de résultat ou false si une erreur survient
function resource fbsql list dbs resource $link_identifier	liste les bases de donn&eacute;es fbsql
function fbsql list fields $database_name	le nom de la base de données
function fbsql list fields $table_name	le nom de la table
function fbsql list fields $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function resource fbsql list fields	retourne un pointeur de résultat qui pourra être utilisé avec les fonctions fbsql_field_xxx ou false si une erreur survient
function resource fbsql list fields string $database_name string $table_name resource $link_identifier	liste les champs d'une table frontbase
function fbsql list tables $database	le nom de la base de données
function fbsql list tables $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function resource fbsql list tables	retourne un pointeur de résultat qui pourra être utilisé avec la fonction fbsql_tablename() pour lire les noms des tables ou false si une erreur survient
function resource fbsql list tables string $database resource $link_identifier	liste les tables dans une base de donn&eacute;es frontbase
function fbsql num fields $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function int fbsql num fields	retourne le nombre de champs sous la forme dun entier
function int fbsql num fields resource $result	lit le nombre de champs dans un r&eacute;sultat
function fbsql password $password	si fourni il sera le nouveau mot de passe pour la connexion
function fbsql password $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function string fbsql password	retourne le mot de passe courant pour la connexion
function string fbsql password resource $link_identifier string $password	lit ou d&eacute;finit le mot de passe &agrave; utiliser avec une connexion
function fbsql query $query	la requête sql à exécuter
function fbsql query $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function resource fbsql query	fbsql_query() retourne une ressource en cas de succès ou false en cas déchec
function resource fbsql query string $query resource $link_identifier int $batch_size	ex&eacute;cute une requ&ecirc;te sur un serveur frontbase
function fbsql read blob $blob_handle	un gestionnaire blob retourné par la fonction fbsql_create_blob()
function fbsql read blob $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function string fbsql read blob	retourne une chaîne de caractères contenant les données du blob spécifié
function string fbsql read blob string $blob_handle resource $link_identifier	lit un blob dans une base de donn&eacute;es
function fbsql read clob $clob_handle	un gestionnaire clob retourné par la fonction fbsql_create_clob()
function fbsql read clob $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function string fbsql read clob	retourne une chaîne de caractères contenant les données du clob spécifié
function string fbsql read clob string $clob_handle resource $link_identifier	lit un clob dans une base de donn&eacute;es
function fbsql select db $database_name	le nom de la base de données à sélectionner
function fbsql select db $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function bool fbsql select db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql select db string $database_name resource $link_identifier	s&eacute;lectionne une base de donn&eacute;es frontbase
function fbsql set lob mode $lob_mode	peut être un parmi : fbsql_lob_direct - les données lob sont lues directement
function fbsql set lob mode $result	un identifiant de résultat retourné par la fonction fbsql_query() ou la fonction fbsql_db_query()
function bool fbsql set lob mode	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql set lob mode resource $result int $lob_mode	modifie le mode de lecture des lob
function fbsql set password $password	le nouveau mot de passe à définir
function fbsql set password $old_password	lancien mot de passe à remplacer
function fbsql set password $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function fbsql set password $user	le nom de lutilisateur
function bool fbsql set password	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql set password resource $link_identifier string $user string $password string $old_password	change le mot de passe de l'utilisateur sp&eacute;cifi&eacute;
function fbsql set transaction $isolation	le type disolation à définir
function fbsql set transaction $locking	le type de verrouillage à définir
function fbsql set transaction $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function void fbsql set transaction resource $link_identifier int $locking int $isolation	configure le verrouillage et l'isolation de transactions
function fbsql start db $database_name	le nom de la base de données
function fbsql start db $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function bool fbsql start db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql start db string $database_name resource $link_identifier string $database_options	d&eacute;marre une base de donn&eacute;es fbsql
function fbsql stop db $database_name	le nom de la base de données
function fbsql stop db $link_identifier	un identifiant de lien frontbase retourné par la fonction fbsql_connect() ou la fonction fbsql_pconnect()
function bool fbsql stop db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fbsql stop db string $database_name resource $link_identifier	stoppe une base de donn&eacute;es fbsql
function fbsql table name $result	un pointeur de résultats retourné par la fonction fbsql_list_tables()
function fbsql table name $index	lindex de la table courante sous la forme dun entier
function string fbsql table name	retourne le nom de la table sous le forme dune chaîne de caractères
function string fbsql table name resource $result int $index	r&eacute;cup&egrave;re le nom de la table d'un champ
function fbsql warnings $OnOff	si lon doit activer ou non les alertes
function bool fbsql warnings	retourne true si les alertes sont actives false sinon
function bool fbsql warnings bool $OnOff	active ou d&eacute;sactive les alertes frontbase
function fdf add doc javascript $script_name	le nom du script
function fdf add doc javascript $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function fdf add doc javascript $script_code	le code du script
function bool fdf add doc javascript	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf add doc javascript resource $fdf_document string $script_name string $script_code	ajoute du code javascript dans un document fdf
function resource fdf create	retourne un gestionnaire de document fdf ou false si une erreur survient
function resource fdf create	cr&eacute;e un nouveau document fdf
function fdf get attachment $savepath	peut être le nom dun fichier ou bien un dossier dans lequel le fichier téléchargé sera créé sous son nom original
function fdf get attachment $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function array fdf get attachment	le tableau retourné contient les champs suivants : path - chemin de stockage du dossier size - taille du fichier stocké en octets type - type mimi du fichier sil a été fourni dans le document fdf
function array fdf get attachment resource $fdf_document string $fieldname string $savepath	extrait un fichier int&eacute;gr&eacute; dans un document fdf
function fdf get encoding $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function string fdf get encoding	retourne lencodage sous la forme dune chaîne de caractères
function string fdf get encoding resource $fdf_document	lit la valeur de la cl&eacute; / encoding
function fdf get file $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function string fdf get file	retourne la valeur de la clé sous la forme dune chaîne de caractères
function string fdf get file resource $fdf_document	lit la valeur de la cl&eacute; / f
function fdf get status $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function string fdf get status	retourne la valeur de la clé sous la forme dune chaîne de caractères
function string fdf get status resource $fdf_document	lit la valeur de la cl&eacute; / status
function void fdf header	&eacute;met les en-t&ecirc;tes http sp&eacute;cifiques &agrave; fdf
function fdf next field name $fieldname	nom du champ fdf sous la forme dune chaîne de caractères
function fdf next field name $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function string fdf next field name	retourne le nom du champ sous la forme dune chaîne de caractères
function string fdf next field name resource $fdf_document string $fieldname	lit le nom du champ fdf suivant
function fdf set ap $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function fdf set ap $face	les valeurs possibles sont : fdfnormalap fdfrolloverap et fdfdownap
function bool fdf set ap	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set ap resource $fdf_document string $field_name int $face string $filename int $page_number	fixe l'apparence d'un champ fdf
function fdf set encoding $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function fdf set encoding $encoding	le nom de lencodage
function bool fdf set encoding	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set encoding resource $fdf_document string $encoding	modifie l'encodage des caract&egrave;res
function fdf set file $url	doit être fourni sous la forme dune url absolue
function fdf set file $target_frame	utilisez ce paramètre pour spécifier la frame dans laquelle le document sera affiché
function fdf set file $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function bool fdf set file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set file resource $fdf_document string $url string $target_frame	cr&eacute;e un document pdf pour y afficher des donn&eacute;es fdf
function fdf set opt $fieldname	nom du champ fdf sous la forme dune chaîne de caractères
function fdf set opt $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function bool fdf set opt	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set opt resource $fdf_document string $fieldname int $element string $str1 string $str2	modifie une option d'un champ
function fdf set status $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function bool fdf set status	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set status resource $fdf_document string $status	fixe la valeur de la cl&eacute; / status
function fdf set submit form action $fieldname	nom du champ fdf sous la forme dune chaîne de caractères
function fdf set submit form action $fdf_document	le gestionnaire de document retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function bool fdf set submit form action	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set submit form action resource $fdf_document string $fieldname int $trigger string $script int $flags	modifie l'action d'un formulaire
function fdf set target frame $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function fdf set target frame $frame_name	le nom du cadre sous la forme dune chaîne de caractères
function bool fdf set target frame	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set target frame resource $fdf_document string $frame_name	configure le cadre de destination pour l'affichage du formulaire
function fdf set version $version	le numéro de version
function fdf set version $fdf_document	le gestionnaire de document fdf retourné par la fonction fdf_create() la fonction fdf_open() ou la fonction fdf_open_string()
function bool fdf set version	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fdf set version resource $fdf_document string $version	modifie le num&eacute;ro de version du fichier fdf
function feof $handle	le pointeur de fichier doit être valide et pointer sur un fichier ouvert avec succès par fopen() ou fsockopen() et pas encore fermé par fclose()
function bool feof	retourne true si le pointeur handle est à la fin du fichier ou si une erreur survient sinon retourne false
function bool feof resource $handle	teste la fin du fichier
function fflush $handle	le pointeur de fichier doit être valide et pointer sur un fichier ouvert avec succès par fopen() ou fsockopen() et pas encore fermé par fclose()
function bool fflush	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool fflush resource $handle	envoie tout le contenu g&eacute;n&eacute;r&eacute; dans un fichier
function fgetc $handle	le pointeur de fichier doit être valide et pointer sur un fichier ouvert avec succès par fopen() ou fsockopen() et pas encore fermé par fclose()
function string fgetc	retourne une chaîne contenant un seul caractère lu depuis le fichier pointé par handle
function string fgetc resource $handle	lit un caract&egrave;re dans un fichier
function fgetcsv $enclosure	le paramètre optionnel enclosure définit le caractère dencadrement de texte un seul caractère
function fgetcsv $delimiter	le paramètre optionnel delimiter définit le séparateur de champ un seul caractère
function fgetcsv $handle	un pointeur valide sur un fichier ouvert avec fopen() popen() ou fsockopen()
function fgetcsv $length	doit être plus grand que la plus grande ligne en terme de caractères à lire dans le fichier y compris le caractère de fin de ligne
function fgetcsv $escape	le paramètre optionnel escape définit le caractère déchappement un seul caractère
function array fgetcsv	retourne un tableau indexé contenant les champs lus
function array fgetcsv resource $handle int $length string $delimiter string $enclosure string $escape	obtient une ligne depuis un pointeur de fichier et l'analyse pour des champs csv
function fgets $handle	le pointeur de fichier doit être valide et pointer sur un fichier ouvert avec succès par fopen() ou fsockopen() et pas encore fermé par fclose()
function fgets $length	lit jusquà la taille length - 1 octet depuis le pointeur de fichier handle ou bien la fin du fichier ou une nouvelle ligne qui est inclue dans la valeur retournée ou encore un eof celui qui arrive en premier
function string fgets	retourne une chaîne de caractères contenant les length premiers caractères moins 1 octet depuis le pointeur de fichier handle
function string fgets resource $handle int $length	r&eacute;cup&egrave;re la ligne courante sur laquelle se trouve le pointeur du fichier
function fgetss $handle	le pointeur de fichier doit être valide et pointer sur un fichier ouvert avec succès par fopen() ou fsockopen() et pas encore fermé par fclose()
function fgetss $length	taille des données à récupérer
function fgetss $allowable_tags	vous pouvez utiliser ce paramètre optionnel pour spécifier les balises qui ne doivent pas être supprimées
function string fgetss	retourne une chaîne de taille length - 1 octet lu depuis le fichier pointé par handle dont les balises html et php ont été échappées
function string fgetss resource $handle int $length string $allowable_tags	renvoie la ligne courante du fichier et &eacute;limine les balises html
function file exists $filename	chemin vers le fichier ou le dossier
function bool file exists	retourne true si le fichier ou le dossier spécifié par le paramètre filename existe ; false sinon
function bool file exists string $filename	v&eacute;rifie si un fichier ou un dossier existe
function file get contents $offset	la position à partir de laquelle on commence à lire dans le flux original
function file get contents $use_include_path	note : depuis php 5 la constante file_use_include_path peut être utilisée pour déclencher la recherche dans le chemin dinclusion
function file get contents $filename	nom du fichier à lire
function file get contents $context	une ressource de contexte valide créée avec la fonction stream_context_create()
function file get contents $maxlen	la taille maximale des données à lire
function string file get contents	retourne les données lues ou false si une erreur survient
function string file get contents string $filename bool $use_include_path resource $context int $offset int $maxlen	lit tout un fichier dans une cha&icirc;ne
function file put contents $filename	chemin vers le fichier dans lequel on doit écrire les données
function file put contents $data	les données à écrire
function file put contents $flags	la valeur du paramètre flags peut être nimporte quelle combinaison des drapeaux suivants liés par lopérateur binaire ou |
function file put contents $context	une ressource de contexte valide créée avec la fonction stream_context_create()
function int file put contents	retourne le nombre doctets qui ont été écrits au fichier ou false si une erreur survient
function int file put contents string $filename mixed $data int $flags resource $context	&eacute;crit un contenu dans un fichier
function filegroup $filename	chemin vers le fichier
function int filegroup	retourne le groupe qui possède le fichier filename ou false si une erreur survient
function int filegroup string $filename	lire le nom du groupe
function fileowner $filename	chemin vers le fichier
function int fileowner	renvoie lidentifiant du propriétaire du fichier filename ou false si une erreur survient
function int fileowner string $filename	lit l'identifiant du propri&eacute;taire d'un fichier
function fileperms $filename	chemin vers le fichier
function int fileperms	retourne les permissions du fichier sous forme numérique
function int fileperms string $filename	lit les droits d'un fichier
function int filepro fieldcount	retourne le nombre de champs dune base de données filepro ouverte ou false si une erreur survient
function int filepro fieldcount	retourne le nombre de champs dans une base filepro
function filepro fieldname $field_number	le numéro du champ
function string filepro fieldname	retourne le nom du champ sous la forme dune chaîne de caractères ou false si une erreur survient
function string filepro fieldname int $field_number	retourne le nom d'un champ filepro
function int filepro rowcount	retourne le nombre de lignes dune base de données filepro ouverte ou false si une erreur survient
function int filepro rowcount	retourne le nombre de lignes dans une base filepro
function filepro $directory	le dossier du fichier
function bool filepro	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool filepro string $directory	lit et v&eacute;rifie un fichier
function filesize $filename	chemin vers le fichier
function int filesize	renvoie la taille du fichier filename en octets ou false et génère une erreur de niveau e_warning en cas derreur
function int filesize string $filename	lit la taille d'un fichier
function filter input array $definition	un tableau définissant les arguments
function filter input array $add_empty	ajout des clés manquantes à la valeur null dans la valeur retournée
function filter input array $type	une constante parmi input_get input_post input_cookie input_server ou input_env
function mixed filter input array	un tableau contenant les valeurs des variables demandées en cas de succès ou false si une erreur survient
function mixed filter input array int $type mixed $definition bool $add_empty	r&eacute;cup&egrave;re plusieurs valeurs externes et les filtre
function filter var array $definition	un tableau définissant les arguments
function filter var array $data	un tableau avec les clés contenant les données à filtrer
function filter var array $add_empty	ajout des clés manquantes à la valeur null dans la valeur retournée
function mixed filter var array	un tableau contenant les valeurs des variables demandées en cas de succès ou false si une erreur survient
function mixed filter var array array $data mixed $definition bool $add_empty	r&eacute;cup&egrave;re plusieurs variables et les filtre
function floatval $var	peut être de nimporte quel type scalaire
function float floatval	la valeur flottante de la variable donnée
function float floatval mixed $var	convertit une cha&icirc;ne en nombre &agrave; virgule flottante
function flock $wouldblock	ce troisième argument optionnel est défini à 1 si le verrou doit bloquer le script condition derreur ewouldblock
function flock $operation	operation peut prendre une des valeurs suivantes : lock_sh pour acquérir un verrou partagé lecture
function flock $handle	un pointeur de système de fichiers de type resource qui est habituellement créé en utilisant la fonction fopen()
function bool flock	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool flock resource $handle int $operation int $wouldblock	verrouille le fichier
function void flush	vide les tampons de sortie du syst&egrave;me
function fmod $y	le diviseur
function fmod $x	le dividende
function float fmod	le reste de la division de x par y
function float fmod float $x float $y	retourne le reste de la division
function fnmatch $pattern	le masque shell
function fnmatch $string	la chaîne testée
function fnmatch $flags	la valeur de flags peut être une combinaison des drapeaux suivants joins avec l opérateur binaire or |)
function bool fnmatch	retourne true sil y a des résultats false sinon
function bool fnmatch string $pattern string $string int $flags	teste un nom de fichier au moyen d'un masque de recherche
function fopen $use_include_path	le troisième paramètre optionnel use_include_path peut être défini à 1 ou à true pour chercher le fichier dans l include_path
function fopen $mode	le paramètre mode spécifie le type daccès désiré au flux
function fopen $context	note : le support de contexte a été ajouté en php 5
function fopen $filename	si filename est de la forme protocole: / / filename est supposé être une url et php va rechercher un gestionnaire de protocole adapté pour lire ce fichier
function resource fopen	retourne une ressource représentant le pointeur de fichier ou false si une erreur survient
function resource fopen string $filename string $mode bool $use_include_path resource $context	ouvre un fichier ou une url
function fpassthru $handle	le pointeur de fichier doit être valide et pointer sur un fichier ouvert avec succès par fopen() ou fsockopen() et pas encore fermé par fclose()
function int fpassthru	si une erreur survient fpassthru() retourne false
function int fpassthru resource $handle	affiche le reste du fichier
function fprintf $format	voir la documentation sur la fonction sprintf() pour une description du paramètre format
function fprintf $handle	un pointeur de système de fichiers de type resource qui est habituellement créé en utilisant la fonction fopen()
function int fprintf	retourne la longueur de la chaîne écrite
function int fprintf resource $handle string $format mixed $args	&eacute;crit une cha&icirc;ne format&eacute;e dans un flux
function fputcsv $handle	le pointeur de fichier doit être valide et pointer sur un fichier ouvert avec succès par fopen() ou fsockopen() et pas encore fermé par fclose()
function fputcsv $escape_char	le paramètre optionnel escape_char définit le caractère déchappement un seul caractère
function fputcsv $delimiter	le paramètre optionnel delimiter spécifie le délimiteur un seul caractère
function fputcsv $enclosure	le paramètre enclosure spécifie le caractère dencadrement un seul caractère
function fputcsv $fields	un tableau de valeurs
function int fputcsv	retourne la taille de la chaîne écrite ou false si une erreur survient
function int fputcsv resource $handle array $fields string $delimiter string $enclosure string $escape_char	formate une ligne en csv et l'&eacute;crit dans un fichier
function fread $length	taille length doctets à lire
function fread $handle	un pointeur de système de fichiers de type resource qui est habituellement créé en utilisant la fonction fopen()
function string fread	retourne la chaîne lue ou false si une erreur survient
function string fread resource $handle int $length	lecture du fichier en mode binaire
function frenchtojd $year	lannée sous la forme dun nombre compris entre 1 et 14
function frenchtojd $month	le mois sous la forme dun nombre entre 1 pour vendémiaire à 13 pour la période de 5-6 jours en à la fin de chaque année
function frenchtojd $day	le jour sous la forme dun nombre compris entre 1 et 30
function int frenchtojd	le jour julien pour la date fournie du calendrier français républicain sous la forme dun entier
function int frenchtojd int $month int $day int $year	convertit une date du calendrier fran&ccedil;ais r&eacute;publicain en nombre de jours du calendrier julien
function fribidi log2vis $charset	une constante parmi les constantes fribidi_charset_xxx
function fribidi log2vis $str	la chaîne logique
function fribidi log2vis $direction	une constante parmi fribidi_rtl fribidi_ltr ou fribidi_auto
function string fribidi log2vis	retourne la chaîne visuelle en cas de succès ou false si une erreur survient
function string fribidi log2vis string $str string $direction int $charset	convertit une cha&icirc;ne logique en cha&icirc;ne visuelle
function fscanf $format	le format spécifié tel que décrit dans la documentation de la fonction sprintf()
function fscanf $handle	un pointeur de système de fichiers de type resource qui est habituellement créé en utilisant la fonction fopen()
function fscanf	les valeurs optionnelles à assigner
function mixed fscanf	si seulement 2 paramètres sont passés à la fonction la valeur analysée sera retourné sous la forme dun tableau
function mixed fscanf resource $handle string $format	analyse un fichier en fonction d'un format
function fstat $handle	un pointeur de système de fichiers de type resource qui est habituellement créé en utilisant la fonction fopen()
function array fstat	retourne un tableau contenant les statistiques pour le fichier ; le format de ce tableau est décrit en détail sur la page de documentation de la fonction stat()
function array fstat resource $handle	lit les informations sur un fichier &agrave; partir d'un pointeur de fichier
function ftell $handle	le pointeur de fichier doit être valide et avoir été correctement ouvert par fopen() ou popen()
function int ftell	retourne la position courante du pointeur dans le fichier repéré par le pointeur handle sous la forme dun entier i
function int ftell resource $handle	renvoie la position courant du pointeur de fichier
function ftp cdup $ftp_stream	lidentifiant du lien de la connexion ftp
function bool ftp cdup	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftp cdup resource $ftp_stream	change de dossier et passe au dossier parent
function ftp connect $port	ce paramètre spécifie un numéro de port alternatif pour la connexion
function ftp connect $timeout	ce paramètre spécifie le délai de connexion pour toutes les opérations de sous séquences du réseau
function ftp connect $host	ladresse du serveur ftp
function resource ftp connect	retourne un flux ftp en cas de succès ou false si une erreur survient
function resource ftp connect string $host int $port int $timeout	ouvre une connexion ftp
function ftp exec $ftp_stream	lidentifiant du lien de connexion ftp
function ftp exec $command	la commande à exécuter
function bool ftp exec	retourne true si la commande a été exécutée avec succès le serveur envoie le code réponse : 200 ; sinon retourne false
function bool ftp exec resource $ftp_stream string $command	ex&eacute;cute une commande sur un serveur ftp
function ftp fget $ftp_stream	lidentifiant du lien de connexion ftp
function ftp fget $handle	un pointeur de fichier ouvert dans lequel on écrit les données
function ftp fget $mode	le mode de transfert
function ftp fget $remote_file	le chemin vers le fichier distant
function ftp fget $resumepos	la position du fichier distant à partir de laquelle le téléchargement commence
function bool ftp fget	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftp fget resource $ftp_stream resource $handle string $remote_file int $mode int $resumepos	t&eacute;l&eacute;charge un fichier via ftp dans un fichier local
function ftp get $ftp_stream	lidentifiant du lien de connexion ftp
function ftp get $mode	le mode de transfert
function ftp get $remote_file	le chemin vers le fichier distant
function ftp get $local_file	le chemin vers le fichier local sera écrasé si le fichier existe déjà)
function ftp get $resumepos	la position dans le fichier distant à partir duquel on commence le téléchargement
function bool ftp get	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftp get resource $ftp_stream string $local_file string $remote_file int $mode int $resumepos	t&eacute;l&eacute;charge un fichier depuis un serveur ftp
function ftp login $password	le mot de passe pass
function ftp login $ftp_stream	lidentifiant du lien de connexion ftp
function ftp login $username	le nom de lutilisateur user
function bool ftp login	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftp login resource $ftp_stream string $username string $password	identification sur un serveur ftp
function ftp mdtm $ftp_stream	lidentifiant du lien de connexion ftp
function ftp mdtm $remote_file	le fichier depuis lequel on doit extraire la date de dernière modification
function int ftp mdtm	retourne la date de dernière modification en tant que timestamp unix en cas de succès ou -1 si une erreur survient
function int ftp mdtm resource $ftp_stream string $remote_file	retourne la date de derni&egrave;re modification d'un fichier sur un serveur ftp
function ftp nb continue $ftp_stream	lidentifiant du lien de connexion ftp
function int ftp nb continue	retourne ftp_failed ou ftp_finished ou ftp_moredata
function int ftp nb continue resource $ftp_stream	reprend le t&eacute;l&eacute;chargement d'un fichier non bloquant
function ftp nb get $ftp_stream	lidentifiant du lien de connexion ftp
function ftp nb get $mode	le mode de transfert
function ftp nb get $resumepos	la position dans le fichier distant à partir de laquelle le téléchargement doit commencer
function ftp nb get $remote_file	le chemin vers le fichier distant
function ftp nb get $local_file	le chemin vers le fichier local sera écrasé si le fichier existe déjà)
function int ftp nb get	retourne ftp_failed ou ftp_finished ou ftp_moredata
function int ftp nb get resource $ftp_stream string $local_file string $remote_file int $mode int $resumepos	lit un fichier sur un serveur ftp et l'&eacute;crit dans un fichier non bloquant
function ftp nb put $startpos	la position dans le fichier distant à partir de laquelle le téléchargement commencera
function ftp nb put $ftp_stream	lidentifiant du lien de connexion ftp
function ftp nb put $mode	le mode de transfert
function ftp nb put $remote_file	le chemin vers le fichier distant
function ftp nb put $local_file	le chemin vers le fichier local
function int ftp nb put	retourne ftp_failed ftp_finished ou ftp_moredata
function int ftp nb put resource $ftp_stream string $remote_file string $local_file int $mode int $startpos	envoie un fichier sur un serveur ftp non-bloquant
function ftp pasv $ftp_stream	lidentifiant du lien de connexion ftp
function ftp pasv $pasv	si true le mode passif est activé sinon il est désactivé
function bool ftp pasv	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftp pasv resource $ftp_stream bool $pasv	active ou d&eacute;sactive le mode passif
function ftp rawlist $ftp_stream	lidentifiant du lien de connexion ftp
function ftp rawlist $directory	le chemin vers le dossier
function ftp rawlist $recursive	si défini à true la commande sera list -r
function mixed ftp rawlist	retourne un tableau où les éléments correspondent à une ligne de texte
function mixed ftp rawlist resource $ftp_stream string $directory bool $recursive	fait une liste d&eacute;taill&eacute;e des fichiers d'un dossier
function ftp rmdir $ftp_stream	lidentification du lien de connexion ftp
function ftp rmdir $directory	le dossier à effacer
function bool ftp rmdir	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftp rmdir resource $ftp_stream string $directory	efface un dossier ftp
function ftp site $ftp_stream	lidentifiant du lien de connexion ftp
function ftp site $command	la commande site
function bool ftp site	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftp site resource $ftp_stream string $command	ex&eacute;cute la commande site sur un serveur ftp
function ftp systype $ftp_stream	lidentifiant du lien de connexion ftp
function string ftp systype	retourne le type de serveur distant ou false si une erreur survient
function string ftp systype resource $ftp_stream	retourne un identifiant de type de serveur ftp
function ftruncate $handle	le pointeur de fichier
function ftruncate $size	la taille que lon doit conserver
function bool ftruncate	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ftruncate resource $handle int $size	tronque un fichier
function func get arg $arg_num	la position de largument
function mixed func get arg	retourne largument spécifié ou false si une erreur survient
function mixed func get arg int $arg_num	retourne un &eacute;l&eacute;ment de la liste des arguments
function array func get args	retourne un tableau dont chaque élément est une copie du membre correspondant de la liste darguments de la fonction
function array func get args	retourne les arguments d'une fonction sous la forme d'un tableau
function int func num args	retourne le nombre darguments passés à la fonction utilisateur courante
function int func num args	retourne le nombre d'arguments pass&eacute;s &agrave; la fonction
function bool gc enabled	retourne true si le collecteur est actif et false sinon
function bool gc enabled	retourne le statut du collecteur de r&eacute;f&eacute;rences circulaires
function array gd info	retourne un tableau associatif
function array gd info	retourne des informations &agrave; propos de la biblioth&egrave;que gd install&eacute;e
function geoip country code by name $hostname	le nom de lhôte ou ladresse ip
function string geoip country code by name	retourne les deux lettres du code pays iso en cas de succès ou false si ladresse na pu être trouvée dans la base de données
function string geoip country code by name string $hostname	r&eacute;cup&egrave;re les deux lettres du code pays
function geoip country code3 by name $hostname	le nom de lhôte ou ladresse ip
function string geoip country code3 by name	retourne les trois lettres do code pays en cas de succès ou false si ladresse na pu être trouvée dans la base de données
function string geoip country code3 by name string $hostname	r&eacute;cup&egrave;re les trois lettres du code pays
function geoip db avail $database	le type de de base de données sous la forme dun entier
function bool geoip db avail	retourne true si la base de données existe false si elle nest pas trouvée ou null si une erreur survient
function bool geoip db avail int $database	v&eacute;rifie si la base de donn&eacute;es geoip est disponible
function geoip isp by name $hostname	le nom dhôte ou ladresse ip
function string geoip isp by name	retourne le nom isp en cas de succès ou false si ladresse na pu être trouvée dans la base de données
function string geoip isp by name string $hostname	r&eacute;cup&egrave;re le nom du fournisseur d'acc&egrave;s
function geoip netspeedcell by name $hostname	le nom dhôte ou ladresse ip
function string geoip netspeedcell by name	retourne la vitesse de la connexion en cas de succès ou false si ladresse ne peut être trouvée dans la base de données
function string geoip netspeedcell by name string $hostname	r&eacute;cup&egrave;re la vitesse de la connexion internet
function geoip org by name $hostname	le nom de lhôte ou ladresse ip
function string geoip org by name	retourne le nom de lorganisation en cas de succès ou false si ladresse na pu être trouvée dans la base de données
function string geoip org by name string $hostname	r&eacute;cup&egrave;re le nom de l'organisation
function geoip region name by code $region_code	le code de région en deux lettres voyez geoip_region_by_name()
function geoip region name by code $country_code	le code de pays en deux lettres voyez geoip_country_code_by_name()
function string geoip region name by code	retourne le nom de la région en cas de succès ou false si le pays la région ou la combinaison des deux na pas pu être trouvé
function string geoip region name by code string $country_code string $region_code	retourne le nom de la r&eacute;gion pour un pays et un code de r&eacute;gion
function geoip setup custom directory $path	le chemin complet où se trouve la base de données geoip sur le disque
function void geoip setup custom directory string $path	d&eacute;fini un dossier personnalis&eacute; pour la base de donn&eacute;es geoip
function geoip time zone by country and region $region_code	le code de région en deux lettres voyez geoip_region_by_name()
function geoip time zone by country and region $country_code	le code de pays en deux lettres voyez geoip_country_code_by_name()
function string geoip time zone by country and region	retourne le fuseau horaire en cas de succès et false si le pays la région ou la combinaison des deux na pas pu être trouvé
function string geoip time zone by country and region string $country_code string $region_code	retourne le fuseau horaire de certains pays et r&eacute;gion du globe
function get browser $user_agent	lentête user agent à analyser
function get browser $return_array	si définit à true cette fonction retournera un tableau au lieu dun objet
function mixed get browser	les informations sont retournées sous forme dun objet dont les différents membres contiendront des informations telles que les versions majeures et mineures et des chaînes didentification ; des booléens pour des caractéristiques telles que frames javascript et cookies ; et ainsi de suite
function mixed get browser string $user_agent bool $return_array	indique les capacit&eacute;s du navigateur client
function string get called class	retourne le nom de la classe
function string get called class	le nom de la classe en late static binding
function get class methods $class_name	le nom de la classe ou une instance dobjet
function array get class methods	retourne un tableau contenant les noms des méthodes de la classe class_name
function array get class methods mixed $class_name	retourne les noms des m&eacute;thodes d'une classe
function get class vars $class_name	le nom de la classe
function array get class vars	retourne un tableau associatif contenant les noms / valeurs des propriétés visibles dans le scope courant avec leurs valeurs par défaut
function array get class vars string $class_name	retourne les valeurs par d&eacute;faut des propri&eacute;t&eacute;s d'une classe
function get defined constants $categorize	permet à cette fonction de retourner un tableau multidimensionnel avec les catégories en tant que clés de la première dimension et les constantes ainsi que leurs valeurs dans la seconde dimension
function array get defined constants	retourne un tableau de constantes au format nom de la constante = > valeur de la constante optionnellement groupées par le nom de lextension ayant enregistré la constante
function array get defined constants bool $categorize	retourne la liste des constantes et leurs valeurs
function array get defined functions	retourne un tableau multidimensionnel contenant la liste de toutes les fonctions définies aussi bien les fonctions internes à php que celle déjà définie par lutilisateur
function array get defined functions	liste toutes les fonctions d&eacute;finies
function array get defined vars	un tableau multidimensionnel contenant toutes les variables
function array get defined vars	liste toutes les variables d&eacute;finies
function get headers $url	lurl cible
function get headers $format	si le paramètre optionnel format est défini à 1 get_headers() analyse la réponse et définit les index du tableau
function array get headers	retourne un tableau indexé ou associatif contenant les en-têtes ou false si une erreur survient
function array get headers string $url int $format	retourne tous les en-t&ecirc;tes envoy&eacute;s par le serveur en r&eacute;ponse &agrave; une requ&ecirc;te http
function get html translation table $flags	un masque dun ou plusieurs drapeaux suivants qui spécifient quel guillemet la table contiendra tout comme le type de document prévu pour la table
function get html translation table $table	la table à retourner
function get html translation table $encoding	encodage à utiliser
function array get html translation table	retourne la table de traduction sous la forme dun tableau avec comme clés les caractères orignaux et comme valeurs les entités correspondantes
function array get html translation table int $table int $flags string $encoding	retourne la table de traduction des entit&eacute;s utilis&eacute;e par htmlspecialchars et htmlentities
function array get included files	retourne un tableau contenant les noms de tous les fichiers
function array get included files	retourne un tableau avec les noms des fichiers qui sont inclus dans un script
function get loaded extensions $zend_extensions	retourne uniquement les extensions zend
function array get loaded extensions	retourne un tableau indexé des noms de tous les modules
function array get loaded extensions bool $zend_extensions	retourne la liste de tous les modules compil&eacute;s et charg&eacute;s
function bool get magic quotes gpc	retourne 0 si magic_quotes_gpc est désactivée 1 sinon
function bool get magic quotes gpc	retourne la configuration actuelle de l'option magic_quotes_gpc
function get object vars $object	une instance dun objet
function array get object vars	retourne un tableau associatif contenant les propriétés non-statiques accessibles depuis le contexte courant de lobjet object
function array get object vars object $object	retourne les propri&eacute;t&eacute;s d'un objet
function get resource type $handle	le gestionnaire de ressources à évaluer
function string get resource type	si le paramètre handle est une ressource cette fonction retournera une chaîne de caractères représentant son type
function string get resource type resource $handle	retourne le type de ressource
function array getallheaders	un tableau associatif avec tous les en-têtes http de la requête courante ou false en cas déchec
function array getallheaders	r&eacute;cup&egrave;re tous les en-t&ecirc;tes de la requ&ecirc;te http
function getdate $timestamp	le paramètre optionnel timestamp est un timestamp unix de type entier qui vaut par défaut lheure courante locale si le paramètre timestamp nest pas fourni
function array getdate	retourne un tableau associatif contenant les informations de date et dheure du timestamp timestamp
function array getdate int $timestamp	retourne la date / heure
function getenv $varname	le nom de la variable
function string getenv	retourne la valeur de la variable denvironnement varname ou false si la variable denvironnement varname nexiste pas
function string getenv string $varname	retourne la valeur d'une variable d'environnement
function gethostbyaddr $ip_address	ladresse ip de lhôte
function string gethostbyaddr	retourne le nom de lhôte en cas de succès ladresse ip non modifiée en cas déchec ou false si une entrée mal formée est fournie
function string gethostbyaddr string $ip_address	retourne le nom d'h&ocirc;te correspondant &agrave; une ip
function gethostbyname $hostname	le nom de lhôte
function string gethostbyname	retourne ladresse ipv4 ou une chaîne contenant le nom dhôte inchangé en cas déchec
function string gethostbyname string $hostname	retourne l'adresse ipv4 correspondant &agrave; un h&ocirc;te
function gethostbynamel $hostname	le nom de lhôte
function array gethostbynamel	retourne un tableau dadresses ipv4 ou false si hostname na pu être résolu
function array gethostbynamel string $hostname	retourne la liste d'ipv4 correspondante &agrave; un h&ocirc;te
function getimagesize $filename	ce paramètre spécifie le fichier dont vous voulez récupérer les informations
function getimagesize $imageinfo	ce paramètre optionnel permet dextraire des informations supplémentaires du fichier image
function array getimagesize	retourne un tableau contenant jusquà 7 éléments
function array getimagesize string $filename array $imageinfo	retourne la taille d'une image
function getimagesizefromstring $imageinfo	voir la fonction getimagesize()
function getimagesizefromstring $imagedata	les données de limage sous la forme dune chaîne
function array getimagesizefromstring	voir la fonction getimagesize()
function array getimagesizefromstring string $imagedata array $imageinfo	r&eacute;cup&egrave;re la taille d'une image depuis une cha&icirc;ne
function int getlastmod	retourne la date de dernière modification de la page
function int getlastmod	retourne la date de derni&egrave;re modification de la page
function getmxrr $mxhosts	la liste des enregistrements mx est placée dans le tableau mxhosts
function getmxrr $hostname	le nom dhôte internet
function getmxrr $weight	si le tableau weight est fourni il sera rempli par les informations de poids
function bool getmxrr	retourne true si des enregistrements sont trouvés et false si une erreur est rencontrée ou si la recherche échoue
function bool getmxrr string $hostname array $mxhosts array $weight	retourne les enregistrements mx d'un h&ocirc;te
function int getmyinode	retourne linode du script courant sous la forme dun entier ou false si une erreur survient
function int getmyinode	retourne l'inode du script
function int getmypid	retourne le numéro de processus courant de php ou false si une erreur survient
function int getmypid	retourne le num&eacute;ro de processus courant de php
function getopt $options	chaque caractère dans cette chaîne sera utilisé en tant que caractères optionnels et devra correspondre aux options passées commençant par un tiret simple -
function getopt $longopts	un tableau doptions
function array getopt	cette fonction retourne un tableau doptions / arguments ou false si une erreur survient
function array getopt string $options array $longopts	lit des options pass&eacute;es dans la ligne de commande
function getprotobyname $name	le nom du protocole
function int getprotobyname	retourne le numéro du protocole ou false si une erreur survient
function int getprotobyname string $name	retourne le num&eacute;ro de protocole associ&eacute; &agrave; un nom de protocole
function getprotobynumber $number	le numéro du protocole
function string getprotobynumber	retourne le nom du protocole sous la forme dune chaîne de caractères ou false si une erreur survient
function string getprotobynumber int $number	retourne le nom de protocole associ&eacute; &agrave; un num&eacute;ro de protocole
function getservbyname $protocol	protocol vaut soit tcp soit udp en minuscule
function getservbyname $service	le nom du service internet sous la forme dune chaîne de caractères
function int getservbyname	retourne le numéro du port ou false si service ou protocol nest pas trouvé
function int getservbyname string $service string $protocol	retourne le num&eacute;ro de port associ&eacute; &agrave; un service internet et un protocole
function getservbyport $port	le numéro du port
function getservbyport $protocol	protocol vaut soit tcp soit udp en minuscule
function string getservbyport	retourne le nom du service internet sous la forme dune chaîne de caractères
function string getservbyport int $port string $protocol	retourne le service internet qui correspond au port et protocole
function gettext $message	le message à traduire
function string gettext	retourne une chaîne traduite si elle en a trouvé une dans la table de traduction ou bien le message message sil na pas été trouvé
function string gettext string $message	recherche un message dans le domaine courant
function gettimeofday $return_float	lorsque défini à true un nombre décimal est retourné à la place dun tableau
function mixed gettimeofday	par défaut un tableau est retourné
function mixed gettimeofday bool $return_float	retourne l'heure actuelle
function gettype $var	la variable à analyser
function string gettype	les chaînes de caractères que peut retourner la fonction sont les suivantes : boolean integer double pour des raisons historiques double est retournée lorsquune valeur de type float est fournie au lieu de la chaîne float string array object resource null unknown type
function string gettype mixed $var	retourne le type de la variable
function glob $pattern	le masque
function glob $flags	les drapeaux valides sont : glob_mark : ajoute un slash final à chaque dossier retourné glob_nosort : retourne les fichiers dans lordre dapparence pas de tri
function array glob	retourne un tableau contenant les fichiers et dossiers correspondant au masque un tableau vide sil ny a aucune correspondance ou false si une erreur survient
function array glob string $pattern int $flags	recherche des chemins qui v&eacute;rifient un masque
function gmdate $format	le format de la date en sortie
function gmdate $timestamp	le paramètre optionnel timestamp est un timestamp unix de type entier qui vaut par défaut lheure courante locale si le paramètre timestamp nest pas fourni
function string gmdate	retourne une date formatée
function string gmdate string $format int $timestamp	formate une date / heure gmt / cut
function gmmktime $month	le nombre de mois depuis la fin de lannée précédente
function gmmktime $year	lannée
function gmmktime $second	le nombre de secondes depuis le début de la minute minute
function gmmktime $hour	le nombre dheures depuis le début de la journée fixée par les paramètres month day et year
function gmmktime $day	le nombre de jours depuis la fin du mois précédent
function gmmktime $is_dst	les paramètres représentent toujours une date gmt donc le paramètre is_dst ninfluence pas le résultat
function gmmktime $minute	le nombre de minutes depuis le début de lheure hour
function int gmmktime	retourne un timestamp unix sous la forme dun entier
function int gmmktime int $hour int $minute int $second int $month int $day int $year int $is_dst	retourne le timestamp unix d'une date gmt
function gmp abs $a	il peut être soit une ressource gmp en php 5
function GMP gmp abs	retourne la valeur absolue de a sous la forme dun nombre gmp
function GMP gmp abs GMP $a	valeur absolue gmp
function gmp add $b	un nombre à ajouter
function gmp add $a	un nombre à ajouter
function GMP gmp add	un nombre gmp représentant la somme des arguments
function GMP gmp add GMP $a GMP $b	addition de 2 nombres gmp
function gmp and $b	il peut être soit une ressource gmp en php 5
function gmp and $a	il peut être soit une ressource gmp en php 5
function GMP gmp and	un nombre gmp représentant le et logique and des 2 arguments
function GMP gmp and GMP $a GMP $b	et logique
function gmp clrbit $a	il peut être soit une ressource gmp en php 5
function gmp clrbit $index	lindex de loctet à annuler
function void gmp clrbit GMP $a int $index	annule un octet
function gmp cmp $b	il peut être soit une ressource gmp en php 5
function gmp cmp $a	il peut être soit une ressource gmp en php 5
function int gmp cmp	retourne une valeur positive si a > b zéro si a = b et négative si a < b
function int gmp cmp GMP $a GMP $b	compare des nombres gmp
function gmp com $a	il peut être soit une ressource gmp en php 5
function GMP gmp com	retourne le complémentaire de a sous la forme dun nombre gmp
function GMP gmp com GMP $a	calcule le compl&eacute;mentaire d'un nombre
function gmp div q $a	le nombre à diviser
function gmp div q $b	le diviseur
function gmp div q $round	larrondi du résultat est défini par round qui peut prendre lune des valeurs suivantes : gmp_round_zero : le résultat est tronqué vers 0
function GMP gmp div q	une ressource gmp en php 5
function GMP gmp div q GMP $a GMP $b int $round	divisions de 2 nombres gmp
function gmp divexact $d	le diviseur
function gmp divexact $n	le nombre à diviser
function GMP gmp divexact	une ressource gmp en php 5
function GMP gmp divexact GMP $n GMP $d	division exacte de nombres gmp
function gmp gcd $b	il peut être soit une ressource gmp en php 5
function gmp gcd $a	il peut être soit une ressource gmp en php 5
function GMP gmp gcd	un nombre positif gmp qui se divise avec a et b
function GMP gmp gcd GMP $a GMP $b	calcule le gcd
function gmp hamdist $b	il peut être soit une ressource gmp en php 5
function gmp hamdist $a	il peut être soit une ressource gmp en php 5
function int gmp hamdist	une ressource gmp en php 5
function int gmp hamdist GMP $a GMP $b	distance de hamming
function gmp import $options	la valeur par défaut est gmp_msw_first | gmp_native_endian
function gmp import $word_size	la valeur par défaut est 1
function gmp import $data	la chaîne binaire à importer
function GMP gmp import	retourne un nombre gmp ou false si une erreur survient
function GMP gmp import string $data integer $word_size integer $options	importation depuis une cha&icirc;ne binaire
function gmp init $base	la base
function gmp init $number	un entier ou une chaîne de caractères
function GMP gmp init	une ressource gmp en php 5
function GMP gmp init mixed $number int $base	cr&eacute;e un nombre gmp
function gmp intval $gmpnumber	il peut être soit une ressource gmp en php 5
function int gmp intval	un entier représentant le nombre gmpnumber
function int gmp intval GMP $gmpnumber	convertit un nombre gmp en entier
function gmp jacobi $p	il peut être soit une ressource gmp en php 5
function gmp jacobi $a	il peut être soit une ressource gmp en php 5
function int gmp jacobi	une ressource gmp en php 5
function int gmp jacobi GMP $a GMP $p	symbole de jacobi
function gmp mul $a	un nombre qui sera multiplié par b
function gmp mul $b	un nombre qui sera multiplié par a
function GMP gmp mul	une ressource gmp en php 5
function GMP gmp mul GMP $a GMP $b	multiplication de 2 nombres gmp
function gmp neg $a	il peut être soit une ressource gmp en php 5
function GMP gmp neg	retourne - a sous la forme dun nombre gmp
function GMP gmp neg GMP $a	oppos&eacute; de nombre gmp
function gmp nextprime $a	il peut être soit une ressource gmp en php 5
function GMP gmp nextprime	retourne le prochain nombre premier plus grand que a sous la forme dun nombre gmp
function GMP gmp nextprime int $a	trouve le prochain nombre premier
function gmp or $b	il peut être soit une ressource gmp en php 5
function gmp or $a	il peut être soit une ressource gmp en php 5
function GMP gmp or	une ressource gmp en php 5
function GMP gmp or GMP $a GMP $b	ou logique
function gmp perfect square $a	le nombre à vérifier
function bool gmp perfect square	retourne true si a est un carré parfait false sinon
function bool gmp perfect square GMP $a	carr&eacute; parfait gmp
function gmp powm $base	la base
function gmp powm $mod	le modulo
function gmp powm $exp	la puissance
function GMP gmp powm	le nouveau nombre sous la forme dun nombre gmp
function GMP gmp powm GMP $base GMP $exp GMP $mod	puissance et modulo
function gmp random bits $bits	le nombre doctets
function GMP gmp random bits	un nombre gmp aléatoire
function GMP gmp random bits integer $bits	g&eacute;n&egrave;re un nombre al&eacute;atoire
function gmp random range $min	un nombre gmp représentant la borne inférieure pour le nombre aléatoire
function gmp random range $max	un nombre gmp représentant la borne supérieure pour le nombre aléatoire
function GMP gmp random range	un nombre gmp aléatoire
function GMP gmp random range GMP $min GMP $max	g&eacute;n&egrave;re un nombre al&eacute;atoire
function gmp root $a	il peut être soit une ressource gmp en php 5
function gmp root $nth	la racine positive à prendre de a
function GMP gmp root	la partie entière de la racine résultante sous la forme dun nombre gmp
function GMP gmp root GMP $a int $nth	r&eacute;cup&egrave;re la partie enti&egrave;re de la n-&egrave;me racine
function gmp rootrem $a	il peut être soit une ressource gmp en php 5
function gmp rootrem $nth	la racine positive à prendre de a
function array gmp rootrem	un tableau contenant deux élément ; le premier est la partie entière de la racine et le second le reste
function array gmp rootrem GMP $a int $nth	r&eacute;cup&egrave;re la partie enti&egrave;re et le reste de la n-&egrave;me racine
function gmp setbit $a	la valeur à modifier
function gmp setbit $bit_on	true pour définir loctet défini à 1 / on ; false pour le ré-initialiser défini à 0 / off
function gmp setbit $index	lindex de loctet à définir
function void gmp setbit GMP $a int $index bool $bit_on	modifie un bit
function gmp sign $a	il peut être soit une ressource gmp en php 5
function int gmp sign	retourne le signe de a : 1 si a est positif -1 sil est négatif et 0 si a est égal à zéro
function int gmp sign GMP $a	signe du nombre gmp
function gmp sqrt $a	il peut être soit une ressource gmp en php 5
function GMP gmp sqrt	la partie entière de la racine carrée sous la forme dun nombre gmp
function GMP gmp sqrt GMP $a	racine carr&eacute;e gmp
function gmp sub $a	le nombre à soustraire
function gmp sub $b	le nombre à soustraire de a
function GMP gmp sub	une ressource gmp en php 5
function GMP gmp sub GMP $a GMP $b	soustraction de 2 nombres gmp
function gmp testbit $index	loctet à tester
function gmp testbit $a	il peut être soit une ressource gmp en php 5
function bool gmp testbit	retourne true si loctet est défini dans la ressource $a false sinon
function bool gmp testbit GMP $a int $index	teste si un octet est d&eacute;fini
function gmp xor $b	il peut être soit une ressource gmp en php 5
function gmp xor $a	il peut être soit une ressource gmp en php 5
function GMP gmp xor	une ressource gmp en php 5
function GMP gmp xor GMP $a GMP $b	ou exclusif logique
function gmstrftime $format	voir la description de la fonction strftime()
function gmstrftime $timestamp	le paramètre optionnel timestamp est un timestamp unix de type entier qui vaut par défaut lheure courante locale si le paramètre timestamp nest pas fourni
function string gmstrftime	retourne une chaîne de caractères formatée suivant le format donné par le paramètre timestamp ou la date courante si aucun paramètre timestamp nest fourni
function string gmstrftime string $format int $timestamp	formate une date / heure gmt / cut en fonction de la configuration locale
function gnupg decrypt $text	le texte à déchiffrer
function gnupg decrypt $identifier	lidentifiant gnupg généré par un appel à la fonction gnupg_init() ou à la fonction gnupg
function string gnupg decrypt	cette fonction retourne true en cas de succès ou false si une erreur survient
function string gnupg decrypt resource $identifier string $text	d&eacute;chiffre un texte donn&eacute;
function gnupg encryptsign $identifier	lidentifiant gnupg généré par un appel à la fonction gnupg_init() ou à la fonction gnupg
function gnupg encryptsign $plaintext	le texte à chiffrer
function string gnupg encryptsign	en cas de succès cette fonction retourne le texte signé et crypté
function string gnupg encryptsign resource $identifier string $plaintext	chiffre et signe un texte donn&eacute;
function gnupg verify $signed_text	le texte signé
function gnupg verify $identifier	lidentifiant gnupg généré par un appel à la fonction gnupg_init() ou à la fonction gnupg
function gnupg verify $plaintext	le texte
function gnupg verify $signature	la signature
function array gnupg verify	en cas de succès cette fonction retourne des informations à propos de la signature
function array gnupg verify resource $identifier string $signed_text string $signature string $plaintext	v&eacute;rifie un texte sign&eacute;
function grapheme extract $haystack	la chaîne à étudier
function grapheme extract $size	le nombre maximal délément en fonction de $extract_type à retourner
function grapheme extract $extract_type	définit le type dunités indiquées par le paramètre $size : grapheme_extr_count par défaut : $size est le nombre de groupe de graphèmes à extraire
function grapheme extract $start	la position de début dans $haystack exprimée en octets
function grapheme extract $next	référence à une variable qui recevra la prochaine position de début valide
function string grapheme extract	une chaîne qui débute à la position $start et se termine à la limite valide dun graphème et qui se conformen aux conditions $size et $extract_type
function string grapheme extract string $haystack int $size int $extract_type int $start int $next	extrait un groupe de graph&egrave;me d'une cha&icirc;ne utf-8
function grapheme stristr $haystack	la chaîne à étudier
function grapheme stristr $needle	la chaîne à rechercher
function grapheme stristr $before_needle	si true grapheme_stristr() retourne la partie de haystack avant la première occurrence needle exclus
function string grapheme stristr	retourne une portion de $haystack ou false si $needle nest pas trouvé
function string grapheme stristr string $haystack string $needle bool $before_needle	retourne la partie d'une cha&icirc;ne &agrave; partir d'une occurrence
function grapheme strlen $input	la chaîne à mesurer
function int grapheme strlen	la taille de la chaîne et 0 si la chaîne est vide
function int grapheme strlen string $input	lit la taille d'une cha&icirc;ne en nombre de graph&egrave;me
function grapheme strpos $haystack	la chaîne à étudier
function grapheme strpos $needle	la chaîne à étudier
function grapheme strpos $offset	le paramètre $offset permet de spécifier la position dans la $haystack de début de recherche exprimée en graphème et non pas en octets ou caractères
function int grapheme strpos	retourne l position sous forme dentier
function int grapheme strpos string $haystack string $needle int $offset	trouve la position du premier graph&egrave;me
function grapheme strripos $haystack	la chaîne à étudier
function grapheme strripos $offset	le paramètre $offset permet de spécifier la position dans la $haystack de début de recherche exprimée en graphème et non pas en octets ou caractères
function grapheme strripos $needle	la chaîne à rechercher
function int grapheme strripos	retourne l position sous forme dentier
function int grapheme strripos string $haystack string $needle int $offset	trouve la position du dernier graph&egrave;me insensible &agrave; la casse
function gregoriantojd $day	le jour sous la forme dun nombre compris entre 1 et 31
function gregoriantojd $year	lannée sous la forme dun nombre compris entre -4714 et 9999
function gregoriantojd $month	le mois sous la forme dun nombre compris entre 1 pour janvier et 12 pour décembre
function int gregoriantojd	le jour julien pour la date fournie du calendrier grégorien sous la forme dun entier
function int gregoriantojd int $month int $day int $year	convertit une date gr&eacute;gorienne en nombre de jours du calendrier julien
function gupnp context get host ip $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function string gupnp context get host ip	retourne ladresse ip du contexte courant et false si une erreur survient
function string gupnp context get host ip resource $context	r&eacute;cup&egrave;re l'adresse ip
function gupnp context get port $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function int gupnp context get port	retourne le numéro du port pour le contexte courant et false si une erreur survient
function int gupnp context get port resource $context	r&eacute;cup&egrave;re le port
function gupnp context get subscription timeout $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function int gupnp context get subscription timeout	le délai dattente lors de la souscription aux événements en secondes
function int gupnp context get subscription timeout resource $context	r&eacute;cup&egrave;re le d&eacute;lai d'expiration lors de la souscription aux &eacute;v&eacute;nements
function gupnp context host path $server_path	chemin du serveur web où local_path doit être hébergé
function gupnp context host path $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function gupnp context host path $local_path	chemin vers le fichier ou le dossier local à héberger
function bool gupnp context host path	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp context host path resource $context string $local_path string $server_path	d&eacute;marre l'h&eacute;bergement
function gupnp context new $host_ip	ladresse ip de lhôte local ou null pour utiliser ladresse ip de la première interface qui nest pas une interface de boucle locale
function gupnp context new $port	le port à utiliser ou 0 si vous ne voulez pas vous préoccuper du port à utiliser
function resource gupnp context new	un identifiant de contexte
function resource gupnp context new string $host_ip int $port	cr&eacute;e un nouveau contexte
function gupnp context set subscription timeout $timeout	le délai dattente des événements de souscription en secondes
function gupnp context set subscription timeout $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function void gupnp context set subscription timeout resource $context int $timeout	d&eacute;finit le d&eacute;lai d'attente des &eacute;v&eacute;nements de sousscription
function gupnp context timeout add $timeout	un délai dattente en millisecondes
function gupnp context timeout add $callback	la fonction de rappel à appeler à chaque période de temps définie par le paramètre timeout
function gupnp context timeout add $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function gupnp context timeout add $arg	données utilisateur pour le callback
function bool gupnp context timeout add	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp context timeout add resource $context int $timeout mixed $callback mixed $arg	d&eacute;finit une fonction &agrave; appeler &agrave; intervalle r&eacute;gulier
function gupnp context unhost path $server_path	chemin du serveur web où est localisé le fichier ou le dossier hébergé
function gupnp context unhost path $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function bool gupnp context unhost path	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp context unhost path resource $context string $server_path	interrompt l'h&eacute;bergement
function gupnp control point browse start $cpoint	un identifiant de point de contrôle retourné par la fonction gupnp_control_point_new()
function bool gupnp control point browse start	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp control point browse start resource $cpoint	commence la recherche
function gupnp control point callback set $cpoint	un identifiant de point de contrôle retourné par la fonction gupnp_control_point_new()
function gupnp control point callback set $GUPNP_SIGNAL_SERVICE_PROXY_UNAVAILABLE	émis lorsquun service devient indisponible
function gupnp control point callback set $callback	la fonction de rappel pour un signal spécifique
function gupnp control point callback set $arg	données utilisateur pour la fonction de rappel callback
function gupnp control point callback set $GUPNP_SIGNAL_DEVICE_PROXY_AVAILABLE	émis lorsquun nouveau périphérique devient disponible
function gupnp control point callback set $GUPNP_SIGNAL_SERVICE_PROXY_AVAILABLE	émis lorsquun nouveau service devient disponible
function gupnp control point callback set $GUPNP_SIGNAL_DEVICE_PROXY_UNAVAILABLE	émis lorsquun périphérique devient indisponible
function gupnp control point callback set $signal	la valeur du signal
function bool gupnp control point callback set	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp control point callback set resource $cpoint int $signal mixed $callback mixed $arg	d&eacute;finit la fonction de rappel pour le point de contr&ocirc;le
function gupnp control point new $target	la cible de recherche
function gupnp control point new $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function resource gupnp control point new	un identifiant de point de contrôle
function resource gupnp control point new resource $context string $target	cr&eacute;e un nouveau point de contr&ocirc;le
function gupnp device info get service $type	le type du service à récupérer
function gupnp device info get service $root_device	un identifiant de périphérique racine retourné par la fonction gupnp_root_device_new()
function resource gupnp device info get service	un identifiant de service
function resource gupnp device info get service resource $root_device string $type	r&eacute;cup&egrave;re le service avec son type
function gupnp device info get $root_device	un identifiant de périphérique racine retourné par la fonction gupnp_root_device_new()
function array gupnp device info get	retourne un tableau contenant les informations sur un périphérique racine comme la localisation lurl ludn etc
function array gupnp device info get resource $root_device	r&eacute;cup&egrave;re les informations d'un p&eacute;riph&eacute;rique racine
function gupnp root device get available $root_device	un identifiant de périphérique racine retourné par la fonction gupnp_root_device_new()
function bool gupnp root device get available	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp root device get available resource $root_device	v&eacute;rifie si un p&eacute;riph&eacute;rique racine est disponible
function gupnp root device get relative location $root_device	un identifiant de périphérique racine retourné par la fonction gupnp_root_device_new()
function string gupnp root device get relative location	le chemin relatif du périphérique racine
function string gupnp root device get relative location resource $root_device	r&eacute;cup&egrave;re le chemin relatif d'un p&eacute;riph&eacute;rique racine
function gupnp root device new $location	localisation du fichier de description de ce périphérique relatif à la racine http
function gupnp root device new $context	un identifiant de contexte retourné par la fonction gupnp_context_new()
function resource gupnp root device new	un identifiant de périphérique racine
function resource gupnp root device new resource $context string $location string $description_dir	cr&eacute;e un nouveau p&eacute;riph&eacute;rique racine
function gupnp root device set available $available	définissez à true si root_device doit être disponible
function gupnp root device set available $root_device	un identifiant de périphérique racine retourné par gupnp_root_device_new()
function bool gupnp root device set available	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp root device set available resource $root_device bool $available	d&eacute;finit si le p&eacute;riph&eacute;rique racine est disponible ou non
function gupnp root device stop $root_device	un identifiant de périphérique racine retourné par la fonction gupnp_root_device_new()
function bool gupnp root device stop	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp root device stop resource $root_device	interrompt la boucle principale
function gupnp service action get $GUPNP_TYPE_DOUBLE	le type de la variable est un double
function gupnp service action get $GUPNP_TYPE_FLOAT	le type de la variable est un nombre à virgule flottante
function gupnp service action get $GUPNP_TYPE_BOOLEAN	le type de la variable est un booléen
function gupnp service action get $name	le nom de la variable à récupérer
function gupnp service action get $GUPNP_TYPE_LONG	le type de la variable est un long
function gupnp service action get $GUPNP_TYPE_STRING	le type de la variable est une chaîne de caractères
function gupnp service action get $type	le type de la variable à récupérer
function gupnp service action get $GUPNP_TYPE_INT	le type de la variable est un entier
function gupnp service action get $action	un identifiant daction du service
function mixed gupnp service action get	la valeur de la variable
function mixed gupnp service action get resource $action string $name int $type	r&eacute;cup&egrave;re les arguments de l'action sp&eacute;cifi&eacute;e
function gupnp service action return error $GUPNP_CONTROL_ERROR_OUT_OF_SYNC	nest plus synchronisé obsolète
function gupnp service action return error $GUPNP_CONTROL_ERROR_INVALID_ARGS	les arguments de laction sont invalides
function gupnp service action return error $action	un identifiant daction du service
function gupnp service action return error $error_code	le code erreur
function gupnp service action return error $error_description	la description de lerreur
function gupnp service action return error $GUPNP_CONTROL_ERROR_INVALID_ACTION	le nom de laction est invalide
function gupnp service action return error $GUPNP_CONTROL_ERROR_ACTION_FAILED	laction a échoué
function bool gupnp service action return error	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp service action return error resource $action int $error_code string $error_description	retourne le code erreur
function gupnp service action set $GUPNP_TYPE_DOUBLE	le type de la variable est un double
function gupnp service action set $GUPNP_TYPE_FLOAT	le type de la variable est un nombre à virgule flottante
function gupnp service action set $GUPNP_TYPE_BOOLEAN	le type de la variable est un booléen
function gupnp service action set $name	le nom de la variable à récupérer
function gupnp service action set $GUPNP_TYPE_LONG	le type de la variable est un long
function gupnp service action set $GUPNP_TYPE_STRING	le type de la variable est une chaîne de caractères
function gupnp service action set $type	le type de la variable à récupérer
function gupnp service action set $GUPNP_TYPE_INT	le type de la variable est un entier
function gupnp service action set $action	un identifiant daction du service
function gupnp service action set $value	la valeur de la variable à récupérer
function bool gupnp service action set	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp service action set resource $action string $name int $type mixed $value	d&eacute;finit les valeurs &agrave; retourner par une action sp&eacute;cifique
function gupnp service info get introspection $callback	la fonction de rappel à appeler lors lobjet dintrospection est prêt
function gupnp service info get introspection $proxy	un identifiant de proxy du service
function gupnp service info get introspection $arg	les données utilisateur pour la fonction de rappel callback
function mixed gupnp service info get introspection	retourne true si la fonction de rappel a été définie
function mixed gupnp service info get introspection resource $proxy mixed $callback mixed $arg	r&eacute;cup&egrave;re l'introspection des ressources du service
function gupnp service info get $proxy	un identifiant de proxy du service
function array gupnp service info get	retourne un tableau contenant les informations dun service comme la localisation lurl ludn etc
function array gupnp service info get resource $proxy	r&eacute;cup&egrave;re les informations compl&egrave;tes d'un service
function gupnp service introspection get state variable $introspection	un identifiant dintrospection
function gupnp service introspection get state variable $variable_name	le nom de la variable à récupérer
function array gupnp service introspection get state variable	retourne le statut de la variable dune donnée ou false
function array gupnp service introspection get state variable resource $introspection string $variable_name	retourne le statut de la variable d'une donn&eacute;e
function gupnp service notify $service	un identifiant de service
function gupnp service notify $GUPNP_TYPE_DOUBLE	le type de la variable est un double
function gupnp service notify $GUPNP_TYPE_FLOAT	le type de la variable est un nombre à virgule flottante
function gupnp service notify $GUPNP_TYPE_BOOLEAN	le type de la variable est un booléen
function gupnp service notify $GUPNP_TYPE_LONG	le type de la variable est un long
function gupnp service notify $GUPNP_TYPE_STRING	le type de la variable est une chaîne de caractères
function gupnp service notify $name	le nom de la variable
function gupnp service notify $GUPNP_TYPE_INT	le type de la variable est un entier
function gupnp service notify $value	la valeur de la variable
function gupnp service notify $type	le type de la variable
function bool gupnp service notify	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp service notify resource $service string $name int $type mixed $value	notifie les clients connect&eacute;s
function gupnp service proxy action set $GUPNP_TYPE_DOUBLE	le type de la variable est un double
function gupnp service proxy action set $proxy	un identifiant de service de proxy
function gupnp service proxy action set $GUPNP_TYPE_FLOAT	le type de la variable est un nombre à virgule flottante
function gupnp service proxy action set $GUPNP_TYPE_BOOLEAN	le type de la variable est un booléen
function gupnp service proxy action set $GUPNP_TYPE_LONG	le type de la variable est un long
function gupnp service proxy action set $name	le nom de laction
function gupnp service proxy action set $GUPNP_TYPE_STRING	le type de la variable est une chaîne de caractères
function gupnp service proxy action set $value	la valeur de laction
function gupnp service proxy action set $action	une action
function gupnp service proxy action set $GUPNP_TYPE_INT	le type de la variable est un entier
function gupnp service proxy action set $type	le type de laction
function bool gupnp service proxy action set	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp service proxy action set resource $proxy string $action string $name mixed $value int $type	envoie une action au service et d&eacute;finit la valeur
function gupnp service proxy add notify $GUPNP_TYPE_DOUBLE	le type de la variable est un double
function gupnp service proxy add notify $proxy	un identifiant de service de proxy
function gupnp service proxy add notify $GUPNP_TYPE_FLOAT	le type de la variable est un nombre à virgule flottante
function gupnp service proxy add notify $GUPNP_TYPE_BOOLEAN	le type de la variable est un booléen
function gupnp service proxy add notify $GUPNP_TYPE_LONG	le type de la variable est un long
function gupnp service proxy add notify $GUPNP_TYPE_STRING	le type de la variable est une chaîne de caractères
function gupnp service proxy add notify $arg	données utilisateur pour la fonction de rappel callback
function gupnp service proxy add notify $value	la variable pour laquelle nous devons ajouter une notification
function gupnp service proxy add notify $GUPNP_TYPE_INT	le type de la variable est un entier
function gupnp service proxy add notify $callback	la fonction de rappel à appeler lors de modification de variables
function gupnp service proxy add notify $type	le type de laction
function bool gupnp service proxy add notify	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp service proxy add notify resource $proxy string $value int $type mixed $callback mixed $arg	d&eacute;finit une fonction de rappel pour la notification de modification d'une variable
function gupnp service proxy callback set $proxy	un identifiant de service de proxy
function gupnp service proxy callback set $arg	données utilisateur pour la fonction de rappel callback
function gupnp service proxy callback set $callback	la fonction de rappel pour un signal donné
function gupnp service proxy callback set $signal	la valeur du signal
function gupnp service proxy callback set $GUPNP_SIGNAL_SUBSCRIPTION_LOST	émis lorsque la souscription à ce service a été perdue en raison dune erreur sur la condition
function bool gupnp service proxy callback set	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gupnp service proxy callback set resource $proxy int $signal mixed $callback mixed $arg	d&eacute;finit la fonction de rappel pour un service de proxy pour un signal donn&eacute;
function gzclose $zp	le pointeur de fichier compressé
function bool gzclose	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gzclose resource $zp	ferme un pointeur sur un fichier gz ouvert
function gzcompress $level	le degré de compression
function gzcompress $encoding	une constante zlib_encoding_*
function gzcompress $data	la donnée à compresser
function string gzcompress	la chaîne compressée ou false si une erreur survient
function string gzcompress string $data int $level int $encoding	compresse une cha&icirc;ne
function gzdecode $length	la longueur maximale de données à décoder
function gzdecode $data	les données à décoder encodées par la fonction gzencode()
function string gzdecode	la chaîne de caractères décodée ou false si une erreur survient
function string gzdecode string $data int $length	d&eacute;code une cha&icirc;ne de caract&egrave;res compress&eacute;e gzip
function gzfile $filename	le nom du fichier
function gzfile $use_include_path	vous pouvez définir ce paramètre optionnel à 1 si vous voulez chercher le fichier également dans l include_path
function array gzfile	un tableau contenant le fichier une ligne par cellule ; les lignes vides sont incluses et les nouvelles lignes sont tojours attachées
function array gzfile string $filename int $use_include_path	lit la totalit&eacute; d'un fichier compress&eacute;
function gzgetc $zp	le pointeur de fichier gz
function string gzgetc	le caractère décompressé ou false si le pointeur est à la fin du fichier position eof contrairement à la fonction gzeof()
function string gzgetc resource $zp	lit un caract&egrave;re dans un fichier compress&eacute;
function gzgets $zp	le pointeur de fichier gz
function gzgets $length	la longueur de données à lire
function string gzgets	la chaîne décompressée ou false si une erreur survient
function string gzgets resource $zp int $length	lit une ligne dans un fichier compress&eacute;
function gzpassthru $zp	le pointeur de fichier gz
function int gzpassthru	le nombre de caractères décompressés lus depuis gz et affiché ou false si une erreur survient
function int gzpassthru resource $zp	affiche toutes les donn&eacute;es qui restent dans un pointeur gz
function gzread $length	le nombre doctets lus
function gzread $zp	le pointeur de fichier gz
function string gzread	les données qui ont été lues
function string gzread resource $zp int $length	lecture de fichier compress&eacute; binaire
function gzrewind $zp	le pointeur de fichier gz
function bool gzrewind	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool gzrewind resource $zp	replace le pointeur au d&eacute;but du fichier
function gztell $zp	le pointeur de fichier
function int gztell	la position du pointeur de fichier ou false si une erreur survient
function int gztell resource $zp	lit la position courante du pointeur de lecture
function gzuncompress $length	la longueur maximale de données à décoder
function gzuncompress $data	les données compressées par gzcompress()
function string gzuncompress	les données originales décompressées ou false si une erreur survient
function string gzuncompress string $data int $length	d&eacute;compresse une cha&icirc;ne compress&eacute;e
function void halt compiler	stoppe l'ex&eacute;cution du compilateur
function array headers list	retourne un tableau den-têtes indexé numériquement
function array headers list	retourne la liste des en-t&ecirc;tes de r&eacute;ponse du script courant
function hebrev $hebrew_text	une chaîne dentrée en hébreux
function hebrev $max_chars_per_line	le paramètre optionnel max_chars_per_line indique le nombre maximum de caractères par ligne dans le résultat
function string hebrev	retourne la chaîne visuelle
function string hebrev string $hebrew_text int $max_chars_per_line	convertit un texte logique h&eacute;breux en texte visuel
function hex2bin $data	représentation hexadécimale de la donnée
function string hex2bin	retourne la représentation binaire de la donnée ou false si une erreur survient
function string hex2bin string $data	convertit une cha&icirc;ne binaire encod&eacute;e en hexad&eacute;cimal
function hexdec $hex_string	la chaîne hexadécimale à convertir
function number hexdec	la représentation décimale de hex_string
function number hexdec string $hex_string	convertit de hexad&eacute;cimal en d&eacute;cimal
function highlight file $return	en passant ce paramètre à true la fonction retourne le code colorisé au lieu de lafficher
function highlight file $filename	le chemin vers le fichier php à coloriser
function mixed highlight file	si le second paramètre optionnel return vaut true alors highlight_file() retournera le code généré au lieu de lafficher
function mixed highlight file string $filename bool $return	colorisation syntaxique d'un fichier
function html entity decode $flags	un masque dun ou plusieurs drapeaux suivants qui spécifient la façon dont doivent être gérés les guillemets et quel type de document doit être utilisé
function html entity decode $string	la chaîne dentrée
function html entity decode $encoding	un argument optionnel définissant lencodage utilisé lors de la convertion des caractères
function string html entity decode	retourne la chaîne décodée
function string html entity decode string $string int $flags string $encoding	convertit toutes les entit&eacute;s html en caract&egrave;res normaux
function htmlspecialchars decode $flags	un masque dun ou plusieurs drapeaux suivants qui spécifient la façon dont doit être géré les guillemets et quel type de document à utiliser
function htmlspecialchars decode $string	la chaîne de caractères à décoder
function string htmlspecialchars decode	retourne la chaîne de caractères décodée
function string htmlspecialchars decode string $string int $flags	convertit les entit&eacute;s html sp&eacute;ciales en caract&egrave;res
function htmlspecialchars $flags	un masque dun ou plusieurs drapeaux suivants qui déterminent la façon dont les guillemets seront gérés dont les séquences de code invalide seront gérées ainsi que le type du document utilisé
function htmlspecialchars $encoding	un argument optionnel définissant lencodage utilisé lors de la convertion des caractères
function htmlspecialchars $string	la chaîne à convertir
function htmlspecialchars $double_encode	lorsque le paramètre double_encode est désactivé php nencodera pas les entités html existants ; par défaut tout est converti
function string htmlspecialchars	la chaîne convertie
function string htmlspecialchars string $string int $flags string $encoding bool $double_encode	convertit les caract&egrave;res sp&eacute;ciaux en entit&eacute;s html
function http build query $enc_type	par défaut vaut php_query_rfc1738
function http build query $query_data	peut être un tableau ou un objet contenant des propriétés
function http build query $arg_separator	arg_separator
function http build query $numeric_prefix	si des indices numériques sont utilisés dans le tableau de base et que numeric_prefix est fourni il sera utilisé pour préfixer les noms des index pour les éléments du tableau de base seulement
function string http build query	retourne une chaîne de caractères encodée url
function string http build query mixed $query_data string $numeric_prefix string $arg_separator int $enc_type	g&eacute;n&egrave;re une cha&icirc;ne de requ&ecirc;te en encodage url
function http response code $response_code	le paramètre optionnel response_code change le code de la réponse
function int http response code	le code de la réponse courant
function int http response code int $response_code	r&eacute;cup&egrave;re ou change le code de la r&eacute;ponse http
function hwapi attribute new $value	la valeur de lattribut
function hwapi attribute new $name	le nom de lattribut
function HW_API_Attribute hwapi attribute new	retourne une instance de la classe hw_api_attribute
function HW_API_Attribute hwapi attribute new string $name string $value	cr&eacute;e une nouvelle instance de la classe hw_api_attribute
function hypot $y	longueur du second côté
function hypot $x	longueur du premier côté
function float hypot	la longueur calculée de lhypoténuse
function float hypot float $x float $y	calcul la longueur de l'hypot&eacute;nuse d'un triangle &agrave; angle droit
function ibase blob add $data	les données à ajouter
function ibase blob add $blob_handle	une ressource blob ouverte avec la fonction ibase_blob_create()
function void ibase blob add resource $blob_handle string $data	ajoute des donn&eacute;es dans un blob ibase fra&icirc;chement cr&eacute;&eacute;
function ibase blob cancel $blob_handle	une ressource blob ouverte avec la fonction ibase_blob_create()
function bool ibase blob cancel	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase blob cancel resource $blob_handle	annule la cr&eacute;ation d'un blob ibase
function ibase blob create $link_identifier	un identifiant de connexion à interbase
function resource ibase blob create	retourne un identifiant de blob à utiliser avec ibase_blob_add() ou false si une erreur survient
function resource ibase blob create resource $link_identifier	cr&eacute;e un blob ibase pour ajouter des donn&eacute;es
function ibase blob get $len	la taille des données retournées
function ibase blob get $blob_handle	une ressource blob ouverte avec la fonction ibase_blob_open()
function string ibase blob get	retourne au plus len octets du blob ou false si une erreur survient
function string ibase blob get resource $blob_handle int $len	lit len octets de donn&eacute;es dans un blob ibase ouvert
function ibase blob info $blob_id	lidentifiant du blob
function ibase blob info $link_identifier	un identifiant de connexion à interbase
function array ibase blob info	retourne un tableau contenant des informations à propos du blob blob_id
function array ibase blob info resource $link_identifier string $blob_id	retourne la taille d'un blob ibase et d'autres informations utiles
function ibase blob open $blob_id	lidentifiant du blob
function ibase blob open $link_identifier	un identifiant de connexion à interbase
function resource ibase blob open	retourne une ressource blob pour une utilisation avec la fonction ibase_blob_get() ou false si une erreur survient
function resource ibase blob open resource $link_identifier string $blob_id	ouvre un blob ibase pour r&eacute;cup&eacute;rer des parties de donn&eacute;es
function ibase close $connection_id	un identifiant de connexion à interbase retourné par la fonction ibase_connect()
function bool ibase close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase close resource $connection_id	ferme une connexion &agrave; une base de donn&eacute;es interbase
function ibase commit ret $link_or_trans_identifier	appelée sans argument elle valide la transaction par défaut de la connexion par défaut
function bool ibase commit ret	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase commit ret resource $link_or_trans_identifier	valide une transaction ibase sans la refermer
function ibase commit $link_or_trans_identifier	appelée sans argument elle valide la transaction par défaut de la connexion par défaut
function bool ibase commit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase commit resource $link_or_trans_identifier	valide une transaction ibase
function ibase drop db $connection	un identifiant de connexion à interbase
function bool ibase drop db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase drop db resource $connection	supprime une base de donn&eacute;es ibase
function ibase execute $query	une requête interbase préparée avec la fonction ibase_prepare()
function resource ibase execute	si la requête émet une erreur la fonction retournera false
function resource ibase execute resource $query mixed $bind_arg	ex&eacute;cute une requ&ecirc;te ibase pr&eacute;par&eacute;e
function ibase fetch object $result_id	un identifiant de résultat interbase obtenu soit par la fonction ibase_query() soit par la fonction ibase_execute()
function ibase fetch object $fetch_flag	fetch_flag est une combinaison des constantes ibase_text et ibase_unixtime
function object ibase fetch object	retourne un objet contenant les informations de la ligne ou false sil ny a plus de ligne
function object ibase fetch object resource $result_id int $fetch_flag	lit une ligne dans une base interbase dans un objet
function ibase fetch row $result_identifier	un identifiant de résultat interbase
function ibase fetch row $fetch_flag	fetch_flag est une combinaison des constantes ibase_text et ibase_unixtime
function array ibase fetch row	retourne un tableau correspondant à la ligne récupérée ou false sil ny a plus de ligne
function array ibase fetch row resource $result_identifier int $fetch_flag	lit une ligne d'une base interbase
function ibase free query $query	une requête préparée avec la fonction ibase_prepare()
function bool ibase free query	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase free query resource $query	lib&egrave;re la m&eacute;moire r&eacute;serv&eacute;e par une requ&ecirc;te pr&eacute;par&eacute;e
function ibase free result $result_identifier	un jeu de caractères créé par la fonction ibase_query() ou par la fonction ibase_execute()
function bool ibase free result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase free result resource $result_identifier	lib&egrave;re un r&eacute;sultat ibase
function ibase name result $result	un jeu de résultats interbase
function ibase name result $name	le nom à assigner
function bool ibase name result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ibase name result resource $result string $name	assigne un nom &agrave; un jeu de r&eacute;sultats ibase
function ibase num fields $result_id	un identifiant de résultat interbase
function int ibase num fields	retourne le nombre de champs sous la forme dun entier
function int ibase num fields resource $result_id	retourne le nombre de colonnes dans un r&eacute;sultat ibase
function ibase num params $query	la requête préparée
function int ibase num params	retourne le nombre de paramètres sous la forme dun entier
function int ibase num params resource $query	retourne le nombre de param&egrave;tres dans une requ&ecirc;te pr&eacute;par&eacute;e ibase
function ibase set event handler $event_handler	fonction de rappel appelée avec le nom de lévénement et la ressource de connexion en tant quarguments dès quun événement spécifié est posté dans la base de données
function ibase set event handler $event_name1	le nom de lévénement
function ibase set event handler $event_name2	15 événements tout au plus sont autorisés
function resource ibase set event handler	la valeur retournée est une ressource dévénement
function resource ibase set event handler callable $event_handler string $event_name1 string $event_name2	enregistre une fonction de rappel sur un &eacute;v&eacute;nement interbase
function ibase trans $trans_args	trans_args peut être une combinaison des constantes suivantes : ibase_read ibase_write ibase_committed ibase_consistency ibase_concurrency ibase_rec_version ibase_rec_no_version ibase_wait et ibase_nowait
function ibase trans $link_identifier	un identifiant de connexion à interbase
function resource ibase trans	retourne une ressource de transaction ou false si une erreur survient
function resource ibase trans int $trans_args resource $link_identifier	pr&eacute;pare une transaction interbase
function iconv mime encode $preferences	vous pouvez contrôler le comportement de la fonction iconv_mime_encode() en spécifiant un tableau associatif contenant la configuration des éléments dans le paramètre preferences
function iconv mime encode $field_name	le nom du champ
function iconv mime encode $field_value	la valeur du champs
function string iconv mime encode	retourne un champs mime en cas de succès ou false si une erreur survient durant lencodage
function string iconv mime encode string $field_name string $field_value array $preferences	construit un en-t&ecirc;te mime avec les champs field_name et field_value
function iconv set encoding $charset	le jeu de caractères
function iconv set encoding $type	les valeurs possibles de type sont : input_encoding output_encoding internal_encoding
function bool iconv set encoding	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool iconv set encoding string $type string $charset	modifie le jeu courant de caract&egrave;res d'encodage
function iconv strlen $charset	si charset nest pas passé en paramètre str est supposée être encodée en iconv
function iconv strlen $str	la chaîne de caractères
function int iconv strlen	retourne le nombre de caractères de la chaîne str sous la forme dun entier
function int iconv strlen string $str string $charset	retourne le nombre de caract&egrave;res d'une cha&icirc;ne
function iconv strpos $haystack	la chaîne de caractères entière
function iconv strpos $needle	la chaîne de caractères à chercher
function iconv strpos $offset	le paramètre optionnel offset spécifie la position à partir de laquelle la recherche doit commencer
function iconv strpos $charset	si le paramètre charset est omis string sera encodé en accord avec iconv
function int iconv strpos	retourne la position numérique de la première occurrence de needle dans haystack
function int iconv strpos string $haystack string $needle int $offset string $charset	trouve la position de la premi&egrave;re occurrence d'une cha&icirc;ne dans une autre
function iconv $out_charset	le jeu de caractères de sortie
function iconv $str	la chaîne de caractères à convertir
function iconv $in_charset	le jeu de caractères dentrée
function string iconv	retourne la chaîne de caractères convertie ou false si une erreur survient
function string iconv string $in_charset string $out_charset string $str	convertit une cha&icirc;ne dans un jeu de caract&egrave;res
function id3 get frame long name $frameId	une frame id3v2
function string id3 get frame long name	retourne le nom long dun champs ou false si une erreur survient
function string id3 get frame long name string $frameId	r&eacute;cup&egrave;re le nom long d'un champs id3v2
function id3 get frame short name $frameId	une frame id3v2
function string id3 get frame short name	retourne le nom court dun champs ou false si une erreur survient
function string id3 get frame short name string $frameId	r&eacute;cup&egrave;re le nom court d'un champs id3v2
function id3 get genre name $genre_id	un entier compris entre 0 et 147
function string id3 get genre name	retourne le nom sous la forme dune chaîne de caractères
function string id3 get genre name int $genre_id	r&eacute;cup&egrave;re le nom pour un id de genre
function id3 get tag $filename	le chemin vers le fichier mp3 au lieu de passer un nom de fichier vous pouvez aussi passer un flux de ressource valide
function id3 get tag $version	vous permet de spécifier la version du tag bien que les fichiers mp3 doivent contenir à la fois les versions 1
function array id3 get tag	retourne un tableau associatif avec diverses clés comme : title artist
function array id3 get tag string $filename int $version	r&eacute;cup&egrave;re toutes les informations stock&eacute;es dans un tag id3
function id3 get version $filename	le chemin vers le fichier mp3 au lieu de passer un nom de fichier vous pouvez aussi passer un flux de ressource valide
function int id3 get version	retourne la les version s du des tag s id3 dun fichier mp3
function int id3 get version string $filename	r&eacute;cup&egrave;re la version d'un tag id3
function id3 set tag $version	vous permet de spécifier la version du tag bien que les fichiers mp3 doivent contenir à la fois les versions 1
function id3 set tag $filename	le chemin vers le fichier mp3 au lieu dun nom de fichier vous pouvez également passer une ressource valide
function id3 set tag $tag	un tableau associatif de clés et de valeurs de tags les clés suivantes peuvent être utilisées dans le tableau associatif : clés dans le tableau associatif clé valeur possible disponible dans la version title chaîne de caractères avec un maximum de 30 caractères v1
function bool id3 set tag	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool id3 set tag string $filename array $tag int $version	met &agrave; jour les informations stock&eacute;es dans un tag id3
function idate $timestamp	le paramètre optionnel timestamp est un timestamp unix de type entier qui vaut par défaut lheure courante locale si le paramètre timestamp nest pas fourni
function int idate	retourne un entier
function int idate string $format int $timestamp	formate une date / heure locale en tant qu'entier
function idn to ascii $variant	soit la constante intl_idna_variant_2003 pour idna 2003 soit la constante intl_idna_variant_uts46 pour uts #46
function idn to ascii $idna_info	ce paramètre ne peut être utilisé que si la cosntante intl_idna_variant_uts46 a été utilisée dans le paramètre variant
function idn to ascii $options	options de conversion - combinaison de constantes idna_*
function idn to ascii $domain	domaine à convertir
function string idn to ascii	le nom de domaine encodé au format ascii-compatible
function string idn to ascii string $domain int $options int $variant array $idna_info	convertie un nom de domaine au format idna ascii
function ifx affected rows $result_id	un identifiant de résultat valide retourné par la fonction ifx_query() ou la fonction ifx_prepare()
function int ifx affected rows	retourne le nombre de lignes sous la forme dun entier
function int ifx affected rows resource $result_id	retourne le nombre de lignes affect&eacute;es par une requ&ecirc;te
function ifx byteasvarchar $mode	le mode 0 retournera lidentifiant de blob et le mode 1 retournera le contenu du text sous la forme dun varchar
function bool ifx byteasvarchar	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ifx byteasvarchar int $mode	choisit le mode par d&eacute;faut des objets byte
function ifx connect $userid	le nom dutilisateur sous la forme dune chaîne de caractères
function ifx connect $password	le mot de passe sous la forme dune chaîne de caractères
function ifx connect $database	le nom de la base de données sous la forme dune chaîne de caractères
function resource ifx connect	retourne un identifiant de connexion en cas de succès ou false si une erreur survient
function resource ifx connect string $database string $userid string $password	ouvre une connexion &agrave; un serveur informix
function ifx create blob $type	1 = text 0 = byte
function ifx create blob $param	si mode = 0: pointeur du contenu si mode = 1: pointeur vers un fichier
function ifx create blob $mode	0 = lobjet blob place le contenu en mémoire 1 = lobjet blob place le contenu dans un fichier
function int ifx create blob	retourne lidentifiant vers le nouveau blob ou false si une erreur survient
function int ifx create blob int $type int $mode string $param	cr&eacute;e un objet blob
function ifx create char $param	le contenu du char
function int ifx create char	retourne lidentifiant vers le nouvel objet char ou false si une erreur survient
function int ifx create char string $param	cr&eacute;e un objet char
function ifx error $link_identifier	lidentifiant du lien
function string ifx error	les codes erreurs informix sqlstate & sqlcode sont formatés ainsi : x [sqlstate = aa bbb sqlcode=cccc]
function string ifx error resource $link_identifier	retourne le code d'erreur de la derni&egrave;re requ&ecirc;te informix
function ifx errormsg $errorcode	si spécifié la fonction retournera le message correspondant au code erreur spécifié
function string ifx errormsg	retourne le message derreur sous la forme dune chaîne de caractères
function string ifx errormsg int $errorcode	retourne le message d'erreur de la derni&egrave;re requ&ecirc;te informix
function ifx fetch row $result_id	result_id est un identifiant valide de résultat retourné par ifx_query() ou ifx_prepare() requêtes select seulement !)
function ifx fetch row $position	position est un paramètre optionnel pour une opération de lecture dinformations sur un pointeur de type scroll: next previous current first last ou encore un nombre
function array ifx fetch row	retourne un tableau associatif qui contient la ligne retournée ou false sil ne reste plus de lignes à lire ou sil a eu une erreur
function array ifx fetch row resource $result_id mixed $position	retourne une ligne sous la forme d'un tableau &eacute;num&eacute;r&eacute;
function ifx fieldtypes $result_id	result_id est un identifiant de résultats valide retourné par la fonction ifx_query() ou la fonction ifx_prepare() requêtes de type select uniquement !)
function array ifx fieldtypes	retourne un tableau associatif avec les noms des champs comme clés et les types sql comme valeurs
function array ifx fieldtypes resource $result_id	liste les champs informix sql
function ifx free blob $bid	lidentifiant de lobjet blob
function bool ifx free blob	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ifx free blob int $bid	supprime un objet blob
function ifx free char $bid	lidentifiant de lobjet char
function bool ifx free char	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ifx free char int $bid	supprime un objet char
function ifx free result $result_id	result_id est un identifiant de résultats valide retourné par la fonction ifx_query() ou la fonction ifx_prepare() requêtes de type select uniquement !)
function bool ifx free result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ifx free result resource $result_id	lib&egrave;re les ressources prises par un r&eacute;sultat
function ifx get char $bid	lidentifiant de lobjet char
function string ifx get char	retourne le contenu sous la forme dune chaîne de caractères ou false si une erreur survient
function string ifx get char int $bid	retourne le contenu d'un objet char
function ifx getsqlca $result_id	result_id est un identifiant de résultats valide retourné par la fonction ifx_query() ou la fonction ifx_prepare() requêtes de type select uniquement !)
function array ifx getsqlca	retourne un tableau associatif composé des entrées suivantes : sqlerrd0 sqlerrd1 sqlerrd2 sqlerrd3 sqlerrd4 et sqlerrd5
function array ifx getsqlca resource $result_id	retourne le contenu de la variable sqlca
function ifx nullformat $mode	le mode 0 retourne et le mode 1 retourne null
function bool ifx nullformat	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ifx nullformat int $mode	modifie le mode par d&eacute;faut de lecture des valeurs
function ifx num fields $result_id	result_id est un identifiant de résultats retourné par la fonction ifx_query() ou par la fonction ifx_prepare() requêtes de type select uniquement !)
function int ifx num fields	retourne le nombre de colonnes dans la requête result_id ou false en cas derreur
function int ifx num fields resource $result_id	retourne le nombre de colonnes d'une requ&ecirc;te
function ifx pconnect $userid	le nom dutilisateur sous la forme dune chaîne de caractères
function ifx pconnect $password	le mot de passe sous la forme dune chaîne de caractères
function ifx pconnect $database	le nom de la base de données sous la forme dune chaîne de caractères
function resource ifx pconnect	retourne un identifiant valide de connexion persistante à un serveur informix ou false en cas derreur
function resource ifx pconnect string $database string $userid string $password	ouvre une connexion persistante &agrave; un serveur informix
function ifx update blob $bid	un identifiant dobjet blob
function ifx update blob $content	les nouvelles données sous la forme dune chaîne de caractères
function bool ifx update blob	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ifx update blob int $bid string $content	modifie le contenu d'un objet blob
function ifx update char $bid	un identifiant dobjet char
function ifx update char $content	les nouvelles données sous la forme dune chaîne de caractères
function bool ifx update char	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ifx update char int $bid string $content	modifie le contenu d'un objet char
function ifxus open slob $bid	un identifiant slob existant
function ifxus open slob $mode	une combinaison des constantes suivantes : ifx_lo_rdonly ifx_lo_wronly ifx_lo_append ifx_lo_rdwr ifx_lo_buffer ifx_lo_nobuffer
function int ifxus open slob	retourne lidentifiant du nouvel objet slob ou false si une erreur survient
function int ifxus open slob int $bid int $mode	ouvre un objet slob
function ifxus read slob $bid	un identifiant slob existant
function ifxus read slob $nbytes	le nombre doctets à lire
function string ifxus read slob	retourne le contenu du slob sous la forme dune chaîne de caractères ou false si une erreur survient
function string ifxus read slob int $bid int $nbytes	lit des octets dans un objet slob
function ifxus seek slob $bid	un identifiant slob existant
function ifxus seek slob $mode	0 = lo_seek_set 1 = lo_seek_cur 2 = lo_seek_end
function ifxus seek slob $offset	la position
function int ifxus seek slob	retourne le position sous la forme dun entier ou false si une erreur survient
function int ifxus seek slob int $bid int $mode int $offset	fixe le fichier courant ou la position courante
function ifxus tell slob $bid	un identifiant slob existant
function int ifxus tell slob	retourne la position sous la forme dun entier ou false si une erreur survient
function int ifxus tell slob int $bid	retourne le fichier courant ou la position courante
function ifxus write slob $bid	un identifiant slob existant
function ifxus write slob $content	le contenu à écrire sous la forme dune chaîne de caractères
function int ifxus write slob	retourne les octets écrits sous la forme dun entier ou false si une erreur survient
function int ifxus write slob int $bid string $content	&eacute;crit une cha&icirc;ne dans un objet slob
function iis get server by path $path	le chemin vers le dossier racine
function int iis get server by path	retourne le numéro dinstance du serveur
function int iis get server by path string $path	retourne le num&eacute;ro d'instance associ&eacute; avec le chemin
function image type to extension $imagetype	une des constantes imagetype_xxx
function image type to extension $include_dot	si lon doit ajouter un point à lextension ou non
function string image type to extension	une chaîne de caractères avec lextension correspondant au type de limage fournie
function string image type to extension int $imagetype bool $include_dot	retourne l'extension du fichier pour le type d'image
function image type to mime type $imagetype	une des constantes imagetype_xxx
function string image type to mime type int $imagetype	lit le mime-type d'un type d'image
function image2wbmp $threshold	valeur du seuil entre 0 et 255 inclus
function image2wbmp $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function image2wbmp $filename	chemin vers le fichier de sauvegarde
function bool image2wbmp	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool image2wbmp resource $image string $filename int $threshold	affichage de l'image vers le navigateur ou dans un fichier
function imagearc $height	la hauteur de lellipse
function imagearc $width	la largeur de lellipse
function imagearc $end	langle de fin de lellipse en degrés
function imagearc $cx	x : coordonnée du centre
function imagearc $start	langle de début de lellipse en degrés
function imagearc $color	un identifiant de couleur créé par la fonction imagecolorallocate()
function imagearc $cy	y : coordonnée du centre
function imagearc $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagearc	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagearc resource $image int $cx int $cy int $width int $height int $start int $end int $color	dessine une ellipse partielle
function imagechar $x	x : coordonnée de départ
function imagechar $y	y : coordonnée de départ
function imagechar $font	peut être 1 2 3 4 5 pour les polices internes dencodage latin2 où les plus grands nombres correspondent aux polices larges ou nimporte quels identifiants de police de votre choix enregistrées avec la fonction imageloadfont()
function imagechar $c	le caractère à dessiner
function imagechar $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagechar $color	un identifiant de couleur créé par la fonction imagecolorallocate()
function bool imagechar	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagechar resource $image int $font int $x int $y string $c int $color	dessine un caract&egrave;re horizontalement
function imagecolorallocate $green	valeur du composant vert
function imagecolorallocate $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagecolorallocate $red	valeur du composant rouge
function imagecolorallocate $blue	valeur du composant bleu
function int imagecolorallocate	un identifiant de couleur ou false si lallocation échoue
function int imagecolorallocate resource $image int $red int $green int $blue	alloue une couleur pour une image
function imagecolorclosest $green	valeur du composant vert
function imagecolorclosest $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagecolorclosest $red	valeur du composant rouge
function imagecolorclosest $blue	valeur du composant bleu
function int imagecolorclosest	retourne lindex de la couleur la plus proche dans la palette de limage de celle donnée
function int imagecolorclosest resource $image int $red int $green int $blue	retourne l'index de la couleur la plus proche d'une couleur donn&eacute;e
function imagecolorclosestalpha $alpha	une valeur comprise entre 0 et 127
function imagecolorclosestalpha $green	valeur du composant vert
function imagecolorclosestalpha $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagecolorclosestalpha $red	valeur du composant rouge
function imagecolorclosestalpha $blue	valeur du composant bleu
function int imagecolorclosestalpha	retourne lindex de la couleur la plus proche dans la palette
function int imagecolorclosestalpha resource $image int $red int $green int $blue int $alpha	retourne la couleur la plus proche en tenant compte du canal alpha
function imagecolorexactalpha $alpha	une valeur comprise entre 0 et 127
function imagecolorexactalpha $green	valeur du composant vert
function imagecolorexactalpha $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagecolorexactalpha $red	valeur du composant rouge
function imagecolorexactalpha $blue	valeur du composant bleu
function int imagecolorexactalpha	retourne lindex de la couleur fournie et son canal alpha dans la palette de limage ou -1 si la couleur nexiste pas dans la palette de limage
function int imagecolorexactalpha resource $image int $red int $green int $blue int $alpha	retourne l'index d'une couleur avec son canal alpha
function imagecolormatch $image2	une ressource de palette dimage pointant sur une image qui a la même taille que image1
function imagecolormatch $image1	une ressource dimage truecolor
function bool imagecolormatch	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagecolormatch resource $image1 resource $image2	fait correspondre un peu plus les couleurs de la version palette d'une image aux couleurs de sa version truecolor
function imagecolorset $red	valeur du composant rouge
function imagecolorset $alpha	valeur du composant alpha
function imagecolorset $green	valeur du composant vert
function imagecolorset $blue	valeur du composant bleu
function imagecolorset $index	un index de la palette
function imagecolorset $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function void imagecolorset resource $image int $index int $red int $green int $blue int $alpha	change la couleur dans une palette &agrave; l'index donn&eacute;
function imagecolorstotal $image	une ressource représentant une image retournée par une des fonctions de création dimages comme la fonction imagecreatefromgif()
function int imagecolorstotal	retourne le nombre de couleurs de la palette pour limage image ou 0 pour les images truecolor
function int imagecolorstotal resource $image	calcule le nombre de couleurs d'une palette
function imagecolortransparent $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagecolortransparent $color	un identifiant de couleur créé par la fonction imagecolorallocate()
function int imagecolortransparent	lidentifiant de la nouvelle couleur transparente ou lactuelle si aucune nest spécifiée est retourné
function int imagecolortransparent resource $image int $color	d&eacute;finit la couleur transparente
function imageconvolution $offset	la position de la couleur
function imageconvolution $div	le diviseur du résultat de la convolution utilisé pour la normalisation
function imageconvolution $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imageconvolution $matrix	une matrice 3x3 : un tableau contenant trois tableaux de trois nombres à virgules flottantes
function bool imageconvolution	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imageconvolution resource $image array $matrix float $div float $offset	applique une matrice de la convolution 3x3 en utilisant le coefficient et l'excentrage
function imagecopy $src_h	hauteur de la source
function imagecopy $src_x	x : coordonnées du point source
function imagecopy $src_im	lien vers la ressource source de limage
function imagecopy $dst_y	y : coordonnées du point de destination
function imagecopy $dst_x	x : coordonnées du point de destination
function imagecopy $src_y	y : coordonnées du point source
function imagecopy $dst_im	lien vers la ressource cible de limage
function imagecopy $src_w	largeur de la source
function bool imagecopy	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagecopy resource $dst_im resource $src_im int $dst_x int $dst_y int $src_x int $src_y int $src_w int $src_h	copie une partie d'une image
function imagecreate $width	la largeur de limage
function imagecreate $height	la hauteur de limage
function resource imagecreate	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreate int $width int $height	cr&eacute;e une nouvelle image &agrave; palette
function imagecreatefromgd $filename	chemin vers un fichier gd
function resource imagecreatefromgd	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromgd string $filename	cr&eacute;e une nouvelle image &agrave; partir d'un fichier gd ou d'une url
function imagecreatefromgd2 $filename	chemin vers limage gd2
function resource imagecreatefromgd2	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromgd2 string $filename	cr&eacute;e une nouvelle image &agrave; partir d'un fichier gd2 ou d'une url
function imagecreatefromgd2part $filename	chemin vers limage gd2
function imagecreatefromgd2part $height	hauteur de la source
function imagecreatefromgd2part $srcX	coordonnée en x du point source
function imagecreatefromgd2part $srcY	coordonnée en y du point source
function imagecreatefromgd2part $width	largeur de la source
function resource imagecreatefromgd2part	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromgd2part string $filename int $srcX int $srcY int $width int $height	cr&eacute;e une nouvelle image &agrave; partir d'une partie de fichier gd2 ou d'une url
function imagecreatefromjpeg $filename	chemin vers limage jpeg
function resource imagecreatefromjpeg	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromjpeg string $filename	cr&eacute;e une nouvelle image depuis un fichier ou une url
function imagecreatefromstring $image	une chaîne contenant les données de limage
function resource imagecreatefromstring	une ressource dimage sera retourné en cas de succès
function resource imagecreatefromstring string $image	cr&eacute;e une image &agrave; partir d'une cha&icirc;ne
function imagecreatefromwbmp $filename	chemin vers limage wbmp
function resource imagecreatefromwbmp	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromwbmp string $filename	cr&eacute;e une nouvelle image depuis un fichier ou une url
function imagecreatefromwebp $filename	chemin vers limage webp
function resource imagecreatefromwebp	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromwebp string $filename	cr&eacute;e une nouvelle image depuis un fichier ou une url
function imagecreatefromxbm $filename	chemin vers limage xbm
function resource imagecreatefromxbm	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromxbm string $filename	cr&eacute;e une nouvelle image depuis un fichier ou une url
function imagecreatefromxpm $filename	chemin vers limage xpm
function resource imagecreatefromxpm	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatefromxpm string $filename	cr&eacute;e une nouvelle image depuis un fichier ou une url
function imagecreatetruecolor $width	largeur de limage
function imagecreatetruecolor $height	hauteur de limage
function resource imagecreatetruecolor	retourne un identifiant de ressource dimage en cas de succès ou false si une erreur survient
function resource imagecreatetruecolor int $width int $height	cr&eacute;e une nouvelle image en couleurs vraies
function imageellipse $height	la hauteur de lellipse
function imageellipse $width	la largeur de lellipse
function imageellipse $cx	x : coordonnée du centre
function imageellipse $color	la couleur de lellipse
function imageellipse $cy	y : coordonnée du centre
function imageellipse $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imageellipse	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imageellipse resource $image int $cx int $cy int $width int $height int $color	dessine une ellipse
function imagefill $y	y : coordonnée du point de départ
function imagefill $color	la couleur de remplissage
function imagefill $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagefill $x	x : coordonnée du point de départ
function bool imagefill	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagefill resource $image int $x int $y int $color	remplissage
function imagefilledellipse $height	la hauteur de lellipse
function imagefilledellipse $width	la largeur de lellipse
function imagefilledellipse $cx	x : coordonnée du centre
function imagefilledellipse $color	la couleur de remplissage
function imagefilledellipse $cy	y : coordonnée du centre
function imagefilledellipse $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagefilledellipse	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagefilledellipse resource $image int $cx int $cy int $width int $height int $color	dessine une ellipse pleine
function imagefilledrectangle $y2	y : coordonné du point 2
function imagefilledrectangle $x1	x : coordonné du point 1
function imagefilledrectangle $x2	x : coordonné du point 2
function imagefilledrectangle $y1	y : coordonné du point 1
function imagefilledrectangle $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagefilledrectangle $color	la couleur de remplissage
function bool imagefilledrectangle	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagefilledrectangle resource $image int $x1 int $y1 int $x2 int $y2 int $color	dessine un rectangle rempli
function imagefilltoborder $border	la couleur de la bordure
function imagefilltoborder $x	x : coordonné de départ
function imagefilltoborder $color	la couleur de remplissage
function imagefilltoborder $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagefilltoborder $y	y : coordonné de départ
function bool imagefilltoborder	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagefilltoborder resource $image int $x int $y int $border int $color	remplit une r&eacute;gion avec une couleur sp&eacute;cifique
function imageflip $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imageflip $mode	mode de retournement ; peut-être une des constantes img_flip_* : constante signification img_flip_horizontal retourne limage horizontalement
function bool imageflip	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imageflip resource $image int $mode	retourne une image en utilisant le mode fourni
function imagefontwidth $font	peut être 1 2 3 4 5 pour les polices internes dencodage latin2 où les plus grands nombres correspondent aux polices larges ou nimporte quels identifiants de police de votre choix enregistrées avec la fonction imageloadfont()
function int imagefontwidth	retourne la largeur de la police
function int imagefontwidth int $font	retourne la largeur de la police
function imageftbbox $size	la taille de la police de caractères
function imageftbbox $angle	angle en degrés dans lequel le paramètre text sera mesuré
function imageftbbox $extrainfo	index possibles pour le tableau extrainfo clé type signification linespacing float représente lespacement entre les lignes lors du dessin
function imageftbbox $fontfile	le nom du fichier de la police truetype peut être une url
function imageftbbox $text	la chaîne à mesurer
function array imageftbbox float $size float $angle string $fontfile string $text array $extrainfo	calcule le rectangle d'encadrement pour un texte en utilisant la police courante et freetype2
function imagegammacorrect $outputgamma	le facteur gamma de sortie
function imagegammacorrect $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagegammacorrect $inputgamma	le facteur gamma dentrée
function bool imagegammacorrect	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagegammacorrect resource $image float $inputgamma float $outputgamma	applique une correction gamma &agrave; l'image gd
function imagegd $filename	le chemin denregistrement du fichier
function imagegd $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagegd	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagegd resource $image string $filename	g&eacute;n&egrave;re une image au format gd vers le navigateur ou un fichier
function imagegd2 $chunk_size	taille de la pièce
function imagegd2 $type	soit img_gd2_raw soit img_gd2_compressed
function imagegd2 $filename	le chemin denregistrement du fichier
function imagegd2 $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagegd2	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagegd2 resource $image string $filename int $chunk_size int $type	g&eacute;n&egrave;re une image au format gd2 vers le navigateur ou un fichier
function imagegif $filename	le chemin denregistrement du fichier
function imagegif $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagegif	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagegif resource $image string $filename	affichage de l'image vers le navigateur ou dans un fichier
function resource imagegrabscreen	retourne une ressource image en cas de succès ou false si une erreur survient
function resource imagegrabscreen	capture l'&eacute;cran complet
function imagegrabwindow $window_handle	lidentifiant hwnd de la fenêtre
function imagegrabwindow $client_area	inclure ou non lespace du client de la fenêtre de lapplication
function resource imagegrabwindow	retourne une ressource image en cas de succès ou false si une erreur survient
function resource imagegrabwindow int $window_handle int $client_area	capture une fen&ecirc;tre
function imageinterlace $interlace	si différent de zéro limage sera entrelacée sinon lentrelacement sera désactivé
function imageinterlace $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function int imageinterlace	retourne 1 si lentrelacement est activé pour limage 0 sinon
function int imageinterlace resource $image int $interlace	active ou d&eacute;sactive l'entrelacement
function imageistruecolor $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imageistruecolor	retourne true si limage est truecolor false sinon
function bool imageistruecolor resource $image	d&eacute;termine si une image est une image truecolor
function imagejpeg $quality	quality est optionnel et prend des valeurs entières de 0 pire qualité petit fichier et 100 meilleure qualité gros fichier
function imagejpeg $filename	le chemin denregistrement du fichier
function imagejpeg $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagejpeg	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagejpeg resource $image string $filename int $quality	affichage de l'image vers le navigateur ou dans un fichier
function imagelayereffect $IMG_EFFECT_NORMAL	identique à la constante img_effect_alphablend
function imagelayereffect $IMG_EFFECT_ALPHABLEND	utilise le blending normal de pixels équivalent à passer false à la fonction imagealphablending()
function imagelayereffect $IMG_EFFECT_OVERLAY	loverlay a pour effet que les pixels noirs du fond resteront noirs les blancs du fond resteront blancs mais les gris du fond prendront la couleur du pixel de premier plan
function imagelayereffect $IMG_EFFECT_REPLACE	utilise le remplacement de pixels équivalent à passer true à la fonction imagealphablending()
function imagelayereffect $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagelayereffect $effect	une des constantes suivantes : img_effect_replace utilise le remplacement de pixels équivalent à passer true à la fonction imagealphablending() img_effect_alphablend utilise le blending normal de pixels équivalent à passer false à la fonction imagealphablending() img_effect_normal identique à la constante img_effect_alphablend
function bool imagelayereffect	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagelayereffect resource $image int $effect	active l'option d'alpha blending pour utiliser les effets de libgd
function imageloadfont $file	le format des polices dépend actuellement du système dexploitation
function int imageloadfont	lidentifiant de la police qui sera toujours supérieur à 5 afin déviter les conflits avec les polices internes ou false si une erreur survient
function int imageloadfont string $file	charge une nouvelle police
function imagepalettecopy $destination	la ressource de limage de destination
function imagepalettecopy $source	la ressource de limage source
function void imagepalettecopy resource $destination resource $source	copie la palette d'une image &agrave; l'autre
function imagepng $filters	permet la réduction de la taille du fichier png
function imagepng $quality	degré de compression : depuis 0 aucune compression à 9
function imagepng $filename	le chemin denregistrement du fichier
function imagepng $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagepng	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagepng resource $image string $filename int $quality int $filters	envoie une image png vers un navigateur ou un fichier
function imagepsencodefont $font_index	une ressource de police retournée par la fonction imagepsloadfont()
function imagepsencodefont $encodingfile	le format exact de ce fichier est décrit dans la documentation t1libs
function bool imagepsencodefont	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagepsencodefont resource $font_index string $encodingfile	change le codage vectoriel d'un caract&egrave;re dans une police
function imagepsextendfont $font_index	une ressource de police retournée par la fonction imagepsloadfont()
function imagepsextendfont $extend	extension de la valeur ; doit être supérieure à 0
function bool imagepsextendfont	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagepsextendfont resource $font_index float $extend	&eacute;tend ou condense une police de caract&egrave;res
function imagepsfreefont $font_index	une ressource de police retournée par la fonction imagepsloadfont()
function bool imagepsfreefont	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagepsfreefont resource $font_index	lib&egrave;re la m&eacute;moire occup&eacute;e par une police postscript type 1
function imagepsslantfont $font_index	une ressource de police retournée par la fonction imagepsloadfont()
function imagepsslantfont $slant	niveau de litalique
function bool imagepsslantfont	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagepsslantfont resource $font_index float $slant	incline une police de caract&egrave;res postscript
function imagerotate $bgd_color	spécifie la couleur des zones qui seront découvertes après la rotation
function imagerotate $angle	langle de rotation en degrés
function imagerotate $ignore_transparent	si ce paramètre est défini et ne vaut pas zéro les couleurs transparentes seront ignorées
function imagerotate $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function resource imagerotate	retourne une ressource dimage correspondant à limage après rotation ou false si une erreur survient
function resource imagerotate resource $image float $angle int $bgd_color int $ignore_transparent	fait tourner une image d'un angle
function imagescale $new_height	la hauteur à utiliser pour la mise à léchelle de limage
function imagescale $mode	une des constantes img_nearest_neighbour img_bilinear_fixed img_bicubic img_bicubic_fixed ou toute autre utilisera deux passages
function imagescale $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagescale $new_width	la largeur à utiliser pour la mise à léchelle de limage
function resource imagescale	retourne la ressource de limage mise à léchelle en cas de succès ou false si une erreur survient
function resource imagescale resource $image int $new_width int $new_height int $mode	met &agrave; l'&eacute;chelle une image en utilisant une hauteur et une largeur fournies
function imagesetbrush $brush	une ressource dimage
function imagesetbrush $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagesetbrush	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagesetbrush resource $image resource $brush	modifie la brosse pour le dessin des lignes
function imagesetinterpolation $method	la méthode dinterpolation qui peut être une parmi : img_bell : filtre bell
function imagesetinterpolation $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagesetinterpolation	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagesetinterpolation resource $image int $method	d&eacute;fini la m&eacute;thode d'interpolation
function imagesetstyle $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagesetstyle $style	un tableau de couleurs de pixels
function bool imagesetstyle	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagesetstyle resource $image array $style	configure le style pour le dessin des lignes
function imagesetthickness $thickness	lépaisseur en pixels
function imagesetthickness $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagesetthickness	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagesetthickness resource $image int $thickness	modifie l'&eacute;paisseur d'un trait
function imagestringup $y	coordonnée y du coin en haut à gauche
function imagestringup $x	coordonnée x du coin en haut à gauche
function imagestringup $font	peut être 1 2 3 4 5 pour les polices internes dencodage latin2 où les plus grands nombres correspondent aux polices larges ou nimporte quels identifiants de police de votre choix enregistrées avec la fonction imageloadfont()
function imagestringup $string	la chaîne de caractères à écrire
function imagestringup $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagestringup $color	un identifiant de couleur créé par la fonction imagecolorallocate()
function bool imagestringup	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagestringup resource $image int $font int $x int $y string $string int $color	dessine une cha&icirc;ne verticale
function imagesy $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function int imagesy	retourne la hauteur de limage image ou false si une erreur survient
function int imagesy resource $image	retourne la hauteur de l'image
function imagetruecolortopalette $dither	indique si limage doit être granuleuse - si défini à true alors limage sera un peu plus granuleuse mais lapproximation des couleurs sera meilleure
function imagetruecolortopalette $ncolors	le nombre maximal de couleurs dans la palette finale
function imagetruecolortopalette $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagetruecolortopalette	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagetruecolortopalette resource $image bool $dither int $ncolors	convertit une image en couleurs vraies en image &agrave; palette
function imagettftext $y	lordonnée y
function imagettftext $x	les coordonnées données par x et y définiront la position du premier caractère le coin bas-gauche du caractère
function imagettftext $angle	langle en degrés ; 0 degré correspond à la lecture du texte de gauche à droite
function imagettftext $color	lindex de la couleur
function imagettftext $text	la chaîne de texte en utf-8
function imagettftext $size	la taille de la police de caractères
function imagettftext $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function imagettftext $fontfile	le chemin vers la police truetype que vous souhaitez utiliser
function array imagettftext	retourne un tableau de 8 éléments représentant quatre points marquants les limites du texte
function array imagettftext resource $image float $size float $angle int $x int $y int $color string $fontfile string $text	dessine un texte avec une police truetype
function int imagetypes	retourne un champ doctets correspondant aux formats dimages supportés par la version de gd utilisée
function int imagetypes	retourne les types d'images support&eacute;s par la version courante de php
function imagewbmp $foreground	vous pouvez choisir la couleur de fond avec ce paramètre
function imagewbmp $filename	le chemin denregistrement du fichier
function imagewbmp $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagewbmp	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagewbmp resource $image string $filename int $foreground	affichage de l'image vers le navigateur ou dans un fichier
function imagexbm $foreground	vous pouvez définir le premier plan avec ce paramètre en définissant un identifiant obtenu depuis la fonction imagecolorallocate()
function imagexbm $filename	le chemin denregistrement du fichier
function imagexbm $image	une ressource dimage retournée par une des fonctions de création dimages comme imagecreatetruecolor()
function bool imagexbm	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imagexbm resource $image string $filename int $foreground	g&eacute;n&egrave;re une image au format xbm
function imap 8bit $string	la chaîne 8 bits à convertir
function string imap 8bit	retourne une chaîne encodée en quoted-printable
function string imap 8bit string $string	convertit une cha&icirc;ne &agrave; 8 bits en une cha&icirc;ne encod&eacute;e en quoted-printable
function array imap alerts	retourne un tableau contenant tous les messages dalerte imap générés ou false si aucun message dalerte nest disponible
function array imap alerts	retourne toutes les alertes
function imap append $internal_date	si ce paramètre est défini il mettra les internaldate sur le message joint
function imap append $imap_stream	un flux imap retourné par la fonction imap_open()
function imap append $options	si fourni le paramètre options sera également écrit dans la boîte mailbox
function imap append $message	le message à ajouter sous la forme dune chaîne de caractères lors des échanges avec le serveur cyrus imap vous devrez utiliser \r\n comme terminaison de ligne à la place de \n ou lopération échouera
function imap append $mailbox	le nom de la boîte aux lettres voir la documentation sur la fonction imap_open() pour plus dinformations
function bool imap append	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap append resource $imap_stream string $mailbox string $message string $options string $internal_date	ajoute un message dans une bo&icirc;te aux lettres
function imap base64 $text	le texte encodé
function string imap base64	retourne le texte décodé sous la forme dune chaîne de caractères
function string imap base64 string $text	d&eacute;code un texte encod&eacute; en base64
function imap binary $string	la chaîne 8 bits
function string imap binary	retourne la chaîne encodée en base64
function string imap binary string $string	convertit une cha&icirc;ne &agrave; 8 bits en une cha&icirc;ne &agrave; base64
function imap check $imap_stream	un flux imap retourné par la fonction imap_open()
function object imap check	retourne les informations dans un objet contenant les propriétés suivantes : date - date de dernière modification du contenu de la boîte aux lettres en accord avec la rfc2822 driver - protocole utilisé pour accéder à la boîte aux lettres: pop3 imap nntp
function object imap check resource $imap_stream	v&eacute;rifie la bo&icirc;te aux lettres courante
function imap clearflag full $imap_stream	un flux imap retourné par la fonction imap_open()
function imap clearflag full $flag	les flags flag que vous pouvez effacer sont \\seen \\answered \\flagged \\deleted et \\draft tels que définis dans la rfc2060
function imap clearflag full $options	options est un masque de bits qui accepte uniquement la valeur suivante : st_uid - la séquence contient des uid au lieu de numéros de séquence
function imap clearflag full $sequence	une séquence de numéro de messages
function bool imap clearflag full	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap clearflag full resource $imap_stream string $sequence string $flag int $options	supprime un flag drapeau sur un message
function imap close $imap_stream	un flux imap retourné par la fonction imap_open()
function imap close $flag	sil est défini à cl_expunge la fonction effectuera une purge automatique de la boîte aux lettres avant de la fermer supprimant tous les messages marqués pour leffacement
function bool imap close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap close resource $imap_stream int $flag	termine un flux imap
function imap delete $msg_number	le numéro du message
function imap delete $options	vous pouvez le définir à ft_uid qui demande à la fonction de traiter largument msg_number comme un uid
function imap delete $imap_stream	un flux imap retourné par la fonction imap_open()
function bool imap delete	retourne true
function bool imap delete resource $imap_stream int $msg_number int $options	marque le fichier pour l'effacement dans la bo&icirc;te aux lettres courante
function array imap errors	cette fonction retourne un tableau contenant tous les messages derreur imap générés depuis le dernier appel à la fonction imap_errors() ou depuis le début de la page
function array imap errors	retourne toutes les erreurs imap survenues
function imap fetch overview $sequence	une description de la séquence du message
function imap fetch overview $imap_stream	un flux imap retourné par la fonction imap_open()
function imap fetch overview $options	sequence va contenir une séquence dindice de message ou duid si flags contient ft_uid
function array imap fetch overview	retourne un tableau dobjets décrivant len-tête de chaque message
function array imap fetch overview resource $imap_stream string $sequence int $options	lit le sommaire des en-t&ecirc;tes de messages
function imap fetchbody $msg_number	le numéro du message
function imap fetchbody $options	loption imap_fetchbody() est un masque qui peut contenir les valeurs suivantes : ft_uid - msg_number est un uid ft_peek - ne pas lever le drapeau \seen message lu sil nest pas déjà levé
function imap fetchbody $imap_stream	un flux imap retourné par la fonction imap_open()
function imap fetchbody $section	le numéro de la section
function string imap fetchbody	retourne une section particulière du corps des messages spécifiés sous la forme dune chaîne de caractères
function string imap fetchbody resource $imap_stream int $msg_number string $section int $options	retourne une section extraite du corps d'un message
function imap fetchheader $msg_number	le numéro du message
function imap fetchheader $imap_stream	un flux imap retourné par la fonction imap_open()
function imap fetchheader $options	les options possibles sont : ft_uid - msgno est un uid ft_internal - la chaîne renvoyée est au format internal cest-à-dire sans canonisation des crlf ft_prefetchtext - rfc822
function string imap fetchheader	retourne len-tête du message spécifié sous la forme dune chaîne de caractères
function string imap fetchheader resource $imap_stream int $msg_number int $options	retourne l'en-t&ecirc;te d'un message
function imap gc $caches	indique le type de cache à purger
function imap gc $imap_stream	un flux imap retourné par la fonction imap_open()
function bool imap gc	returns true
function bool imap gc resource $imap_stream int $caches	efface le cache imap
function imap get quota $quota_root	quota_root doit être de la forme : user
function imap get quota $imap_stream	un flux imap retourné par la fonction imap_open()
function array imap get quota	retourne un tableau contenant les valeurs de quota et courante de la boîte aux lettres quota_root
function array imap get quota resource $imap_stream string $quota_root	lit les quotas des bo&icirc;tes aux lettres ainsi que des statistiques sur chacune d'elles
function imap getmailboxes $imap_stream	un flux imap retourné par la fonction imap_open()
function imap getmailboxes $pattern	spécifie la position dans la hiérarchie des boîtes aux lettres où il faut commencer à chercher
function imap getmailboxes $ref	ref ne devrait être que le serveur sous la forme décrite dans imap_open()
function array imap getmailboxes	retourne un tableau dobjets contenant les informations sur les boîtes aux lettres
function array imap getmailboxes resource $imap_stream string $ref string $pattern	liste les bo&icirc;tes aux lettres et retourne les d&eacute;tails de chacune
function imap headerinfo $msg_number	le numéro du message
function imap headerinfo $subjectlength	nombre de caractères pour la propriété fetchsubject
function imap headerinfo $imap_stream	un flux imap retourné par la fonction imap_open()
function imap headerinfo $fromlength	nombre de caractères pour la propriété fetchfrom
function object imap headerinfo resource $imap_stream int $msg_number int $fromlength int $subjectlength string $defaulthost	lit l'en-t&ecirc;te du message
function imap headers $imap_stream	un flux imap retourné par la fonction imap_open()
function array imap headers	retourne un tableau de chaînes contenant les en-têtes des messages : une chaîne par message
function array imap headers resource $imap_stream	retourne les en-t&ecirc;tes de tous les messages d'une bo&icirc;te aux lettres
function string imap last error	retourne le texte complet du dernier message derreur imap survenu sur la page courante
function string imap last error	retourne la derni&egrave;re erreur survenue
function imap list $imap_stream	un flux imap retourné par la fonction imap_open()
function imap list $pattern	spécifie la position dans la hiérarchie des boîtes aux lettres où il faut commencer à chercher
function imap list $ref	ref ne devrait être que le serveur sous la forme décrite dans imap_open()
function array imap list	retourne un tableau contenant les noms des boîtes aux lettres
function array imap list resource $imap_stream string $ref string $pattern	lit la liste des bo&icirc;tes aux lettres
function imap mail compose $body	un tableau indexé du corps un corps est un tableau associatif qui peut contenir les clés suivantes : type encoding charset type
function imap mail compose $envelope	un tableau associatif contenant les champs des en-têtes
function string imap mail compose	retourne le message mime
function string imap mail compose array $envelope array $body	cr&eacute;e un message mime
function imap mail move $msglist	msglist est un intervalle et pas seulement une liste de messages comme décrit dans la rfc2060
function imap mail move $options	options est un champ de bits et peut contenir une seule valeur : cp_uid - la séquence de nombres contient des uid
function imap mail move $imap_stream	un flux imap retourné par la fonction imap_open()
function imap mail move $mailbox	le nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function bool imap mail move	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap mail move resource $imap_stream string $msglist string $mailbox int $options	d&eacute;place des messages dans une bo&icirc;te aux lettres
function imap mail $subject	le sujet du mail
function imap mail $to	le destinataire
function imap mail $additional_headers	une chaîne de caractères contenant les en-têtes additionnels à envoyer avec le mail
function imap mail $message	le corps du mail ; voir la fonction imap_mail_compose()
function imap mail $bcc	les destinataires spécifiés dans le bcc recevront le mail mais sont exclus des en-têtes
function imap mail $rpath	utiliser ce paramètre pour spécifier le chemin de retour en cas déchec de délivrance du mail
function bool imap mail	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap mail string $to string $subject string $message string $additional_headers string $cc string $bcc string $rpath	envoie un message mail
function imap mailboxmsginfo $imap_stream	un flux imap retourné par la fonction imap_open()
function object imap mailboxmsginfo resource $imap_stream	lit les informations &agrave; propos de la bo&icirc;te aux lettres courante
function imap msgno $uid	luid du message
function imap msgno $imap_stream	un flux imap retourné par la fonction imap_open()
function int imap msgno	retourne le numéro de séquence du message pour luid uid
function int imap msgno resource $imap_stream int $uid	retourne le num&eacute;ro de s&eacute;quence du message pour un uid donn&eacute;
function imap open $password	le mot de passe associé avec lutilisateur username
function imap open $options	options est un masque de bit qui peut prendre une ou plusieurs des valeurs suivantes : op_readonly : ouvre une boîte aux lettres en lecture seule op_anonymous : ne pas utiliser ou modifier le fichier
function imap open $username	le nom dutilisateur
function imap open $n_retries	le nombre maximal de tentatives de connexion
function imap open $mailbox	un nom de boîte aux lettres est constitué dune adresse de serveur et dune adresse de boîte sur ce serveur
function imap open $params	paramètres de connexion ; les clés peuvent être utilisées pour définir un ou plusieurs paramètres de connexion : disable_authenticator - désactive les propriétés dauthentification
function resource imap open	retourne un flux imap en cas de succès ou false si une erreur survient
function resource imap open string $mailbox string $username string $password int $options int $n_retries array $params	ouvre un flux imap vers une bo&icirc;te aux lettres
function imap ping $imap_stream	un flux imap retourné par la fonction imap_open()
function bool imap ping	retourne true si le flux est toujours actif false sinon
function bool imap ping resource $imap_stream	v&eacute;rifie que le flux imap est toujours actif
function imap qprint $string	une chaîne à guillemets
function string imap qprint	retourne une chaîne de caractères à 8 bits
function string imap qprint string $string	convertit une cha&icirc;ne &agrave; guillemets en une cha&icirc;ne &agrave; 8 bits
function imap renamemailbox $old_mbox	lancien nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function imap renamemailbox $imap_stream	un flux imap retourné par la fonction imap_open()
function imap renamemailbox $new_mbox	le nouveau nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function bool imap renamemailbox	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap renamemailbox resource $imap_stream string $old_mbox string $new_mbox	renomme une bo&icirc;te aux lettres
function imap reopen $imap_stream	un flux imap retourné par la fonction imap_open()
function imap reopen $mailbox	le nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function imap reopen $n_retries	le nombre maximal de tentatives de connexion
function imap reopen $options	options est un masque de bits qui peut contenir les valeurs suivantes : op_readonly - ouvre une boîte aux lettres en lecture seule op_anonymous - ne pas utiliser ou modifier le fichier
function bool imap reopen	retourne true si le flux est réouvert false sinon
function bool imap reopen resource $imap_stream string $mailbox int $options int $n_retries	r&eacute;ouvre un flux imap vers une nouvelle bo&icirc;te aux lettres
function imap rfc822 parse adrlist $default_host	le nom de lhôte par défaut
function imap rfc822 parse adrlist $address	une chaîne de caractères contenant les adresses
function array imap rfc822 parse adrlist	retourne un tableau dobjets
function array imap rfc822 parse adrlist string $address string $default_host	analyse une adresse email
function imap rfc822 parse headers $headers	les données à analyser
function imap rfc822 parse headers $defaulthost	le nom de lhôte par défaut
function object imap rfc822 parse headers	retourne un objet similaire à celui retourné par la fonction imap_header() excepté pour les drapeaux et les autres propriétés qui proviennent du serveur imap
function object imap rfc822 parse headers string $headers string $defaulthost	analyse un en-t&ecirc;te mail
function imap rfc822 write address $mailbox	le nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function imap rfc822 write address $host	la partie hôte de lemail
function imap rfc822 write address $personal	le nom du propriétaire du compte
function string imap rfc822 write address	retourne une adresse email sous la forme dune chaîne de caractères formatée correctement selon la rfc2822
function string imap rfc822 write address string $mailbox string $host string $personal	retourne une adresse email format&eacute;e correctement
function imap search $criteria	une chaîne de caractères délimitée par des espaces dans laquelle les mots-clés suivants sont acceptés
function imap search $imap_stream	un flux imap retourné par la fonction imap_open()
function imap search $options	les valeurs pour les flags sont se_uid qui fait que le tableau réponse contient les uid plutôt que les numéros de séquence
function array imap search	retourne un tableau de numéro de messages ou duid
function array imap search resource $imap_stream string $criteria int $options string $charset	retourne un tableau de messages apr&egrave;s recherche
function imap setacl $rights	les droits à donner à lutilisateur
function imap setacl $imap_stream	un flux imap retourné par la fonction imap_open()
function imap setacl $mailbox	le nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function imap setacl $id	lidentifiant de lutilisateur dont on veut définir les droits
function bool imap setacl	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap setacl resource $imap_stream string $mailbox string $id string $rights	modifie le acl de la bo&icirc;te aux lettres
function imap setflag full $flag	les flags que vous pouvez modifier sont \seen \answered \flagged \deleted et \draft comme défini dans la rfc2060
function imap setflag full $imap_stream	un flux imap retourné par la fonction imap_open()
function imap setflag full $options	options est un masque de bits qui accepte uniquement la valeur suivante : st_uid - la séquence contient des uid au lieu de numéros de séquence
function imap setflag full $sequence	une séquence de numéro de messages
function bool imap setflag full	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap setflag full resource $imap_stream string $sequence string $flag int $options	positionne un drapeau sur un message
function imap status $options	les drapeaux valides sont : sa_messages - met la valeur de $status->messages au nombre de messages dans la boîte aux lettres
function imap status $imap_stream	un flux imap retourné par la fonction imap_open()
function imap status $mailbox	le nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function object imap status	cette fonction retourne un objet contenant les informations sur le statut
function object imap status resource $imap_stream string $mailbox int $options	retourne les informations de statut sur une bo&icirc;te aux lettres
function imap subscribe $imap_stream	un flux imap retourné par la fonction imap_open()
function imap subscribe $mailbox	le nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function bool imap subscribe	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap subscribe resource $imap_stream string $mailbox	souscrit &agrave; une bo&icirc;te aux lettres
function imap thread $imap_stream	un flux imap retourné par la fonction imap_open()
function array imap thread	imap_thread() retourne un tableau associatif contenant un arbre de messages organisés par thread par references ou false en cas derreur
function array imap thread resource $imap_stream int $options	retourne l'arbre des messages organis&eacute;s par thread
function imap timeout $timeout_type	une valeur parmi les suivantes : imap_opentimeout imap_readtimeout imap_writetimeout ou imap_closetimeout
function imap timeout $timeout	le timeout en secondes
function mixed imap timeout	si le paramètre timeout est défini cette fonction retourne true en cas de succès et false si une erreur survient
function mixed imap timeout int $timeout_type int $timeout	configure ou retourne le timeout
function imap uid $msg_number	le numéro du message
function imap uid $imap_stream	un flux imap retourné par la fonction imap_open()
function int imap uid	luid dun message donné
function int imap uid resource $imap_stream int $msg_number	retourne l'uid d'un message
function imap undelete $msg_number	le numéro du message
function imap undelete $imap_stream	un flux imap retourné par la fonction imap_open()
function bool imap undelete	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap undelete resource $imap_stream int $msg_number int $flags	enl&egrave;ve la marque d'effacement d'un message
function imap unsubscribe $imap_stream	un flux imap retourné par la fonction imap_open()
function imap unsubscribe $mailbox	le nom de la boîte aux lettres voir la documentation de la fonction imap_open() pour plus de détails
function bool imap unsubscribe	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool imap unsubscribe resource $imap_stream string $mailbox	termine la souscription &agrave; une bo&icirc;te aux lettres
function imap utf7 decode $text	lencodage utf-7 modifié est défini dans la rfc 2060 section 5
function string imap utf7 decode	retourne une chaîne de caractères encodée iso-8859-1 et contenant la même séquence de caractères que dans le paramètre text ou false si text contient une séquence utf-7 modifiée invalide ou si text contient un caractère qui ne fait pas partie du jeu de caractères iso-8859-1
function string imap utf7 decode string $text	d&eacute;code une cha&icirc;ne encod&eacute;e en utf-7 modifi&eacute;
function imap utf7 encode $data	une chaîne de caractères iso-8859-1
function string imap utf7 encode	retourne les données data encodées avec lencodage utf-7 modifié tel que défini dans la rfc 2060 section 5
function string imap utf7 encode string $data	convertit une cha&icirc;ne iso-8859-1 en texte utf-7 modifi&eacute;
function array inclued get data	les données incluses
function array inclued get data	lit les donn&eacute;es incluses
function inet pton $address	une adresse ipv4 ou ipv6
function string inet pton	retourne la représentation in_addr de ladresse fournie par le paramètre address ou false si le paramètre address fourni a une synthaxe invalide par exemple une adresse ipv4 sans point ou une adresse ipv6 sans virgule
function string inet pton string $address	convertit une adresse ip lisible en sa repr&eacute;sentation in_addr
function ingres autocommit state $link	la ressource de connexion ingres
function bool ingres autocommit state	retourne true si lautocommit est activé et false sinon
function bool ingres autocommit state resource $link	v&eacute;rifie si la connexion utilise l'autocommit
function ingres autocommit $link	la ressource de connexion ingres
function bool ingres autocommit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ingres autocommit resource $link	active ou d&eacute;sactive le mode autocommit
function ingres close $link	la ressource de connexion
function bool ingres close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ingres close resource $link	ferme une connexion &agrave; un serveur ingres
function ingres connect $password	le mot de passe associé avec lutilisateur username
function ingres connect $database	le nom de la base de données
function ingres connect $options	options d ingres_connect() nom de loption option type description exemple date_century_boundary entier le seuil pour lequel une année sur 2 chiffres est déterminée pour être dans le siècle courant ou dans le siècle prochain
function ingres connect $username	le nom dutilisateur ingres
function resource ingres connect	retourne une ressource ingres en cas de succès ou false si une erreur survient
function resource ingres connect string $database string $username string $password array $options	ouvre une connexion sur un serveur ingres
function ingres cursor $result	la ressource de connexion ingres
function string ingres cursor	retourne une chaîne de caractères contenant le nom du curseur actif
function string ingres cursor resource $result	r&eacute;cup&egrave;re le nom du curseur pour une ressource de r&eacute;sultats donn&eacute;e
function ingres errno $link	la ressource de connexion ingres
function int ingres errno	retourne un entier contenant le numéro de la dernière erreur
function int ingres errno resource $link	r&eacute;cup&egrave;re le dernier num&eacute;ro d'erreur d'ingres g&eacute;n&eacute;r&eacute;
function ingres error $link	la ressource de connexion ingres
function string ingres error	retourne une chaîne contenant la dernière erreur ou null si aucune nest survenue
function string ingres error resource $link	lit le dernier message d'erreur ingres
function ingres errsqlstate $link	la ressource de connexion ingres
function string ingres errsqlstate	retourne une chaîne contenant la dernière sqlstate ou null si aucune erreur nest survenue
function string ingres errsqlstate resource $link	r&eacute;cup&egrave;re le dernier code sqlstate g&eacute;n&eacute;r&eacute;
function ingres escape string $source_string	la chaîne à protéger
function ingres escape string $link	la ressource de connexion au serveur
function string ingres escape string	retourne la chaîne avec les caractères protégés
function string ingres escape string resource $link string $source_string	prot&egrave;ge les caract&egrave;res sp&eacute;ciaux de ingres
function ingres execute $result	la ressource de résultat ingres
function ingres execute $params	un tableau de paramètres à utiliser avec la requête
function ingres execute $types	une chaîne contenant une séquence de types pour formater les valeurs des paramètres
function bool ingres execute	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ingres execute resource $result array $params string $types	ex&eacute;cute une commande pr&eacute;par&eacute;e ingres
function ingres fetch array $result_type	result_type peut valoir ingres_num pour un tableau à index numériques ingres_assoc pour un tableau associatif ou ingres_both défaut pour un tableau mixte accessible selon les deux méthodes
function ingres fetch array $result	la ressource de résultats
function array ingres fetch array	retourne un tableau qui correspond à la ligne récupérée ou false sil ny a plus de lignes
function array ingres fetch array resource $result int $result_type	r&eacute;cup&egrave;re une ligne de r&eacute;sultat ingres dans un tableau
function ingres fetch assoc $result	lidentifiant de résultat
function array ingres fetch assoc	retourne un tableau associatif correspondant à la ligne récupérée ou false sil ny a plus de lignes de disponible
function array ingres fetch assoc resource $result	r&eacute;cup&egrave;re une ligne de r&eacute;sultat dans un tableau associatif
function ingres fetch object $link	la ressource de connexion
function ingres fetch object $result_type	le paramètre optionnel result_type est une constante qui peut prendre les valeurs ingres_assoc ingres_num et ingres_both
function object ingres fetch object	retourne un objet qui correspond à la ligne récupérée ou false sil ny a plus de lignes
function object ingres fetch object resource $result int $result_type	r&eacute;cup&egrave;re une ligne de r&eacute;sultat dans un objet
function ingres fetch proc return $result	la ressource de résultat ingres
function int ingres fetch proc return	retourne un entier sil y a une valeur à retourner et sinon retourne null
function int ingres fetch proc return resource $result	lit le r&eacute;sultat d'un appel &agrave; une proc&eacute;dure stock&eacute;e
function ingres fetch row $result	la ressource de connexion ingres
function array ingres fetch row	retourne un tableau qui correspond à la ligne récupérée ou false sil ny a plus de lignes
function array ingres fetch row resource $result	r&eacute;cup&egrave;re une ligne de r&eacute;sultat dans un tableau &eacute;num&eacute;r&eacute;
function ingres field name $result	la ressource de résultat ingres
function ingres field name $index	index est lindexe du champ à récupérer
function string ingres field name	retourne le nom du champ dans le résultat dune requête ou false si une erreur survient
function string ingres field name resource $result int $index	retourne le nom d'un champ dans le r&eacute;sultat d'une requ&ecirc;te ingres
function ingres field nullable $result	la ressource de résultat ingres
function ingres field nullable $index	index est lindexe du champ à récupérer
function bool ingres field nullable	ingres_field_nullable() retourne true si le champ peut recevoir la valeur null et false sinon
function bool ingres field nullable resource $result int $index	teste si un champ est annulable
function ingres field precision $result	la ressource de connexion ingres
function ingres field precision $index	index est lindexe du champ à récupérer
function int ingres field precision	retourne la précision du champ sous la forme dun entier
function int ingres field precision resource $result int $index	retourne la pr&eacute;cision d'un champ ingres
function ingres field scale $result	la ressource de résultat ingres
function ingres field scale $index	index est lindexe du champ à récupérer
function int ingres field scale	retourne léchelle dun champ sous la forme dun entier
function int ingres field scale resource $result int $index	retourne l'&eacute;chelle d'un champ
function ingres free result $result	la ressource de résultat ingres
function bool ingres free result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ingres free result resource $result	lib&egrave;re les ressources d'un r&eacute;sultat ingres
function ingres next error $link	la ressource de connexion ingres
function bool ingres next error	ingres_next_error() retourne true sil y a dautres erreurs à lire et false sil ny a plus dautres erreurs
function bool ingres next error resource $link	lit l'erreur ingres suivante
function ingres num fields $result	la ressource de résultat ingres
function int ingres num fields	retourne le nombre de champs
function int ingres num fields resource $result	retourne le nombre de champs renvoy&eacute;s par la derni&egrave;re requ&ecirc;te ingres
function ingres num rows $link	la ressource de résultats ingres
function int ingres num rows	pour les requêtes delete insert update ingres_num_rows() retourne le nombre de lignes affectées par la requête
function int ingres num rows resource $result	retourne le nombre de lignes affect&eacute;es ou renvoy&eacute;es par une requ&ecirc;te ingres
function ingres pconnect $options	voyez la fonction ingres_connect() pour connaître la liste des options qui peuvent être passées
function ingres pconnect $database	le nom de la base de données
function ingres pconnect $password	le mot de passe associé à lutilisateur username
function ingres pconnect $username	le nom dutilisateur ingres
function resource ingres pconnect	retourne une ressource de connexion ingres en cas de succès ou false si une erreur survient
function resource ingres pconnect string $database string $username string $password array $options	ouvre une connexion persistante &agrave; un serveur ingres
function ingres prepare $link	la ressource de connexion ingres
function ingres prepare $query	une requête sql valide voyez le sql reference guide de la documentation ingres
function mixed ingres prepare	ingres_prepare() retourne une ressource de résultat qui peut être utilisée avec ingres_execute() pour exécuter la requête
function mixed ingres prepare resource $link string $query	pr&eacute;pare une requ&ecirc;te pour l'ex&eacute;cution
function ingres query $link	la ressource de connexion à ingres
function ingres query $params	un tableau de valeurs de paramètres à utiliser avec la requête
function ingres query $query	une requête sql valide voyez le sql reference guide de la documentation ingres
function ingres query $types	une chaîne contenant une séquence de types pour les paramètres fournis à la requête
function mixed ingres query	ingres_query() retourne une ressource de résultat en cas de succès et sinon false
function mixed ingres query resource $link string $query array $params string $types	envoie une requ&ecirc;te sql &agrave; ingres
function ingres result seek $position	la ligne à laquelle positionner le curseur
function ingres result seek $result	une ressource de résultat ingres
function bool ingres result seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ingres result seek resource $result int $position	change la position de lecture des donn&eacute;es
function ingres rollback $link	la ressource de connexion ingres
function bool ingres rollback	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ingres rollback resource $link	annule une transaction ingres
function ingres set environment $options	un tableau énuméré de paires clé / valeur
function ingres set environment $link	la ressource de connexion ingres
function bool ingres set environment	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ingres set environment resource $link array $options	configure les directives contr&ocirc;lant les r&eacute;sultats ingres
function ingres unbuffered query $link	la ressource de connexion à ingres
function ingres unbuffered query $params	un tableau de valeurs de paramètre à utiliser avec la requête
function ingres unbuffered query $types	une chaîne contenant une séquence de types pour les paramètres fournis à la requête
function ingres unbuffered query $query	une requête sql valide voyez le sql reference guide pour le serveur ingres
function mixed ingres unbuffered query	ingres_unbuffered_query() retourne une ressource de résultats lorsquil y a des lignes à lire et sinon elle retourne false sil ny a pas de lignes à lire comme pour les requêtes insert update et delete
function mixed ingres unbuffered query resource $link string $query array $params string $types	envoie une requ&ecirc;te sans buffer &agrave; ingres
function ini get $varname	le nom de loption de configuration
function string ini get	retourne la valeur de loption de configuration varname en cas de succès ou une chaîne de caractères vide pour les valeurs null
function string ini get string $varname	lit la valeur d'une option de configuration
function ini restore $varname	le nom de loption de configuration
function void ini restore string $varname	restaure la valeur de l'option de configuration
function ini set $varname	les options disponibles ne peuvent pas toutes être modifiées avec ini_set()
function ini set $newvalue	la nouvelle valeur pour loption
function string ini set	retourne lancienne valeur en cas de succès false si une erreur survient
function string ini set string $varname string $newvalue	modifie la valeur d'une option de configuration
function inotify add watch $pathname	fichier ou dossier à surveiller
function inotify add watch $inotify_instance	ressource returnée par inotify_init()
function inotify add watch $mask	événements à surveiller
function int inotify add watch	la valeur retournée est un pointeur inotify unique inotify instance wide
function int inotify add watch resource $inotify_instance string $pathname int $mask	ajoute un point de surveillance &agrave; une instance inotify
function resource inotify init	un flux ou false en cas derreur
function resource inotify init	initialise une instance inotify
function inotify queue len $inotify_instance	ressource returnée par inotify_init()
function int inotify queue len	retourne le nombre dévénements qui sont survenus
function int inotify queue len resource $inotify_instance	retourne le nombre d'&eacute;v&eacute;nements qui sont survenus
function intl error name $error_code	le code derreur icu
function string intl error name	la chaîne retournée sera celui du nom de la constante équivalente
function string intl error name int $error_code	lit le nom symbolique d'un code d'erreur donn&eacute;
function int intl get error code	le code derreur retourné par le dernier appel à lapi
function int intl get error code	lit le dernier code d'erreur
function string intl get error message	la description de lerreur qui est survenue durant le dernier appel de lapi
function string intl get error message	lit la description de la derni&egrave;re erreur
function ip2long $ip_address	une adresse au format standard
function int ip2long	retourne une adresse ipv4 ou false si ip_address est invalide
function int ip2long string $ip_address	convertit une cha&icirc;ne contenant une adresse ipv4 ip num&eacute;rique en adresse litt&eacute;rale
function iptcembed $iptcdata	les données à écrire
function iptcembed $spool	la bobine
function iptcembed $jpeg_file_name	chemin vers le fichier jpeg
function mixed iptcembed	en cas de succès et si la bobine est supérieure à 2 alors le fichier jpeg sera retourné sous la forme dune chaîne de caractères ou false si une erreur survient
function mixed iptcembed string $iptcdata string $jpeg_file_name int $spool	int&egrave;gre des donn&eacute;es binaires iptc dans une image jpeg
function iptcparse $iptcblock	un bloc binaire iptc
function array iptcparse	retourne un tableau avec les balises comme index et les valeurs de ces balises iptc dans les valeurs de tableau correspondantes
function array iptcparse string $iptcblock	analyse un bloc binaire iptc et recherche les balises simples
function is a $class_name	le nom de la classe
function is a $allow_string	si ce paramètre vaut false le nom de la classe sous forme de chaîne de caractères dans le paramètre object nest pas autorisé
function is a $object	lobjet testé
function bool is a	retourne true si lobjet est une instance de cette classe ou a cette classe comme parent false sinon
function bool is a object $object string $class_name bool $allow_string	v&eacute;rifie si l'objet est une instance d'une classe donn&eacute;e ou a cette classe parmi ses parents
function is array $var	la variable à évaluer
function bool is array	retourne true si var est un array false sinon
function bool is array mixed $var	d&eacute;termine si une variable est un tableau
function is callable $callable_name	largument callable_name reçoit le nom à utiliser
function is callable $var	la valeur à vérifier
function is callable $syntax_only	si largument syntax_only vaut true la fonction ne va vérifier que si name peut être une fonction ou une méthode
function bool is callable	retourne true si var peut être appelé comme une fonction false sinon
function bool is callable mixed $var bool $syntax_only string $callable_name	d&eacute;termine si l'argument peut &ecirc;tre appel&eacute; comme fonction
function is dir $filename	chemin vers le fichier
function bool is dir	retourne true si le nom de fichier existe et que cest un dossier false sinon
function bool is dir string $filename	indique si le fichier est un dossier
function is file $filename	chemin vers le fichier
function bool is file	retourne true si le nom de fichier existe et que cest un fichier régulier false sinon
function bool is file string $filename	indique si le fichier est un v&eacute;ritable fichier
function is infinite $val	la valeur à vérifier
function bool is infinite	true si val est une valeur infinie sinon false
function bool is infinite float $val	indique si un nombre est infini
function is int $var	la variable à évaluer
function bool is int	retourne true si var est un entier false sinon
function bool is int mixed $var	d&eacute;termine si une variable est de type nombre entier
function is nan $val	la valeur à vérifier
function bool is nan	retourne true si val est not a number pas un nombre sinon false
function bool is nan float $val	indique si une valeur n'est pas un nombre
function is numeric $var	la variable à évaluer
function bool is numeric	retourne true si var est un nombre ou une chaîne numérique false sinon
function bool is numeric mixed $var	d&eacute;termine si une variable est un type num&eacute;rique
function is object $var	la variable à évaluer
function bool is object	retourne true si var est un objet false sinon
function bool is object mixed $var	d&eacute;termine si une variable est de type objet
function is readable $filename	chemin vers le fichier
function bool is readable	retourne true si le fichier ou le dossier spécifié par filename existe et est accessible en lecture false sinon
function bool is readable string $filename	indique si un fichier existe et est accessible en lecture
function is resource $var	la variable à évaluer
function bool is resource	retourne true si var est une ressource false autrement
function bool is resource mixed $var	d&eacute;termine si une variable est une ressource
function is scalar $var	la variable à évaluer
function bool is scalar	retourne true si var est un scalaire false autrement
function bool is scalar mixed $var	indique si une variable est un scalaire
function is soap fault $objet	lobjet à tester
function bool is soap fault	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool is soap fault mixed $object	v&eacute;rifie si soap retourne une erreur
function is subclass of $class_name	le nom de la classe
function is subclass of $allow_string	si ce paramètre est défini à false un nom de classe sous forme de chaîne de caractères dans le paramètre object nest pas autorisé
function is subclass of $object	un nom de classe ou une instance dun objet
function bool is subclass of	cette fonction retourne true si lobjet object est une instance dune classe qui est une sous-classe de class_name false sinon
function bool is subclass of mixed $object string $class_name bool $allow_string	d&eacute;termine si un objet est une sous-classe d'une classe donn&eacute;e
function bool is tainted	retourne true si la chaîne est nettoyée false sinon
function bool is tainted string $string	v&eacute;rifie si une cha&icirc;ne est nettoy&eacute;e
function is uploaded file $filename	le nom de fichier à vérifier
function bool is uploaded file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool is uploaded file string $filename	indique si le fichier a &eacute;t&eacute; t&eacute;l&eacute;charg&eacute; par http post
function is writable $filename	le nom du fichier à vérifier
function bool is writable	retourne true si le fichier filename existe et est accessible en écriture
function bool is writable string $filename	indique si un fichier est accessible en &eacute;criture
function iterator apply $args	les arguments à passer à la fonction de rappel
function iterator apply $iterator	la classe à itérer
function iterator apply $function	la fonction à appeler à chaque élément
function int iterator apply	retourne le nombre ditération
function int iterator apply Traversable $iterator callable $function array $args	appelle une fonction pour tous les &eacute;l&eacute;ments d'un it&eacute;rateur
function iterator count $iterator	litérateur dont il faut compter les éléments
function int iterator count	le nombre déléments dans litérateur iterator
function int iterator count Traversable $iterator	compte de nombre d'&eacute;l&eacute;ments dans un it&eacute;rateur
function iterator to array $use_keys	sil faut utiliser les éléments de litérateur comme clé
function iterator to array $iterator	litérateur à copier
function array iterator to array	un tableau contenant les éléments de litérateur iterator
function array iterator to array Traversable $iterator bool $use_keys	copie un it&eacute;rateur dans un tableau
function jddayofweek $julianday	le numéro du jour julien sous la forme dun entier
function jddayofweek $mode	modes pour la semaine du calendrier mode signification 0 défaut retourne le numéro du jour comme un entier 0=dimanche 1=lundi etc
function mixed jddayofweek	le jour de la semaine grégorien sous la forme dun entier ou dune chaîne de caractères
function mixed jddayofweek int $julianday int $mode	retourne le num&eacute;ro du jour de la semaine
function jdmonthname $calendar	le calendrier dans lequel on récupère le nom du mois
function jdmonthname $jday	le jour julien à analyser
function string jdmonthname	le nom du mois pour le jour julien donné pour le calendrier calendar
function string jdmonthname int $julianday int $mode	retourne le nom du mois
function jdtojewish $julianday	le nombre de jours julien sous la forme dun entier
function string jdtojewish	la date juive sous la forme dune chaîne de caractères mois / jour / année
function string jdtojewish int $juliandaycount bool $hebrew int $fl	convertit le nombre de jours du calendrier julien en date du calendrier juif
function jdtojulian $julianday	le nombre de jours julien sous la forme dun entier
function string jdtojulian	la date julien sous la forme dune chaîne de caractères mois / jour / année
function string jdtojulian int $julianday	convertit le nombre de jours du calendrier julien en date du calendrier julien
function jdtounix $jday	le nombre de jours julien compris entre 2440588 et 2465342
function int jdtounix	le timestamp unix pour le début du jour julien donné
function int jdtounix int $jday	convertit un jour julien en timestamp unix
function jpeg2wbmp $wbmpname	chemin vers le fichier final wbmp
function jpeg2wbmp $dest_width	largeur de limage de destination
function jpeg2wbmp $jpegname	le chemin vers le fichier jpeg
function jpeg2wbmp $threshold	valeur du seuil entre 0 et 8 inclus
function jpeg2wbmp $dest_height	hauteur de limage de destination
function bool jpeg2wbmp	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool jpeg2wbmp string $jpegname string $wbmpname int $dest_height int $dest_width int $threshold	convertit une image jpeg en image wbmp
function json decode $json	la chaîne json à décoder
function json decode $depth	définit la profondeur de récursion
function json decode $assoc	lorsque ce paramètre vaut true lobjet retourné sera converti en un tableau associatif
function json decode $options	un masque doptions json decode
function mixed json decode	retourne la valeur encodée dans le paramètre json dans le type php approprié
function mixed json decode string $json bool $assoc int $depth int $options	d&eacute;code une cha&icirc;ne json
function json encode $options	masque composé des constantes json_hex_quot json_hex_tag json_hex_amp json_hex_apos json_numeric_check json_pretty_print json_unescaped_slashes json_force_object json_preserve_zero_fraction json_unescaped_unicode
function json encode $depth	définit la profondeur maximale
function json encode $value	la valeur à encoder
function string json encode	retourne une chaîne encodé json ou false si une erreur survient
function string json encode mixed $value int $options int $depth	retourne la repr&eacute;sentation json d'une valeur
function int json last error	retourne une des constantes suivantes :
function int json last error	retourne la derni&egrave;re erreur json
function judy type $array	le tableau judy à tester
function int judy type	retourne un entier correspondant au type judy
function int judy type Judy $array	retourne le type de tableau judy
function juliantojd $year	lannée sous la forme dun nombre entre -4713 et 9999
function juliantojd $day	le jour sous la forme dun nombre entre 1 et 31
function juliantojd $month	le mois sous la forme dun nombre entre 1 pour janvier et 12 pour décembre
function int juliantojd	le jour julien pour la date julienne donnée sous la forme dun entier
function int juliantojd int $month int $day int $year	convertit un jours du calendrier julien en un nombre de jours du calendrier julien
function kadm5 chpass principal $principal	le principal
function kadm5 chpass principal $handle	un gestionnaire kadm5
function kadm5 chpass principal $password	le nouveau mot de passe
function bool kadm5 chpass principal	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool kadm5 chpass principal resource $handle string $principal string $password	modifie le mot de passe du principal
function kadm5 create principal $principal	le principal
function kadm5 create principal $handle	un gestionnaire kadm5
function kadm5 create principal $password	si password nest pas spécifié ou sil vaut null une clé aléatoire sera générée
function kadm5 create principal $options	il est possible de spécifier plusieurs paramètres optionnels avec le tableau options
function bool kadm5 create principal	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool kadm5 create principal resource $handle string $principal string $password array $options	cr&eacute;e un principal kerberos avec les param&egrave;tres donn&eacute;s
function kadm5 delete principal $principal	le principal à effacer
function kadm5 delete principal $handle	un gestionnaire kadm5
function bool kadm5 delete principal	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool kadm5 delete principal resource $handle string $principal	efface un principal kerberos
function kadm5 destroy $handle	un gestionnaire kadm5
function bool kadm5 destroy	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool kadm5 destroy resource $handle	ferme la connexion avec le serveur d'administration et lib&egrave;re toutes les ressources associ&eacute;es
function kadm5 flush $handle	un gestionnaire kadm5
function bool kadm5 flush	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool kadm5 flush resource $handle	valide toutes les modifications de la base de donn&eacute;es kerberos
function kadm5 get policies $handle	un gestionnaire kadm5
function array kadm5 get policies	retourne un tableau de directives en cas de succès ou false si une erreur survient
function array kadm5 get policies resource $handle	r&eacute;cup&egrave;re toutes les directives depuis la base de donn&eacute;es kerberos
function kadm5 get principal $principal	le principal
function kadm5 get principal $handle	un gestionnaire kadm5
function array kadm5 get principal	kadm5_get_principal() retourne un tableau associatif contenant les clés suivantes : kadm5_principal kadm5_princ_expire_time kadm5_pw_expiration kadm5_attributes kadm5_max_life kadm5_mod_name kadm5_mod_time kadm5_kvno kadm5_policy kadm5_max_rlife kadm5_last_success kadm5_last_failed kadm5_fail_auth_count
function array kadm5 get principal resource $handle string $principal	r&eacute;cup&egrave;re les entr&eacute;es des &eacute;l&eacute;ments principaux depuis la base de donn&eacute;es kerberos
function kadm5 get principals $handle	a kadm5 handle
function array kadm5 get principals	retourne un tableau déléments principaux en cas de succès ou false si une erreur survient
function array kadm5 get principals resource $handle	r&eacute;cup&egrave;re tous les &eacute;l&eacute;ments principaux depuis la base de donn&eacute;es kerberos
function kadm5 modify principal $principal	le principal
function kadm5 modify principal $handle	un gestionnaire kadm5
function kadm5 modify principal $options	il est possible de spécifier plusieurs paramètres optionnels avec un tableau d options
function bool kadm5 modify principal	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool kadm5 modify principal resource $handle string $principal array $options	modifie un principal kerberos avec les param&egrave;tres donn&eacute;s
function krsort $sort_flags	vous pouvez modifier le comportement de cette fonction en utilisant le paramètre optionnel sort_flags
function krsort $array	le tableau dentrée
function bool krsort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool krsort array $array int $sort_flags	trie un tableau en sens inverse et suivant les cl&eacute;s
function ksort $sort_flags	vous pouvez modifier le comportement de cette fonction en utilisant le paramètre optionnel sort_flags
function ksort $array	le tableau dentrée
function bool ksort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ksort array $array int $sort_flags	trie un tableau suivant les cl&eacute;s
function lcfirst $str	la chaîne dentrée
function string lcfirst	retourne la chaîne résultante
function string lcfirst string $str	met le premier caract&egrave;re en minuscule
function float lcg value	une valeur pseudoaléatoire dans lintervalle de 0 à 1
function float lcg value	g&eacute;n&eacute;rateur de congruence combin&eacute;e lin&eacute;aire
function lchown $user	lutilisateur par son nom ou son numéro
function lchown $filename	chemin vers le fichier
function bool lchown	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool lchown string $filename mixed $user	change le propri&eacute;taire d'un lien symbolique
function ldap 8859 to t61 $value	le texte à convertir
function string ldap 8859 to t61	retourne la conversion en t61 du texte value
function string ldap 8859 to t61 string $value	convertit les caract&egrave;res 8859 en caract&egrave;res t61
function ldap add $entry	un tableau avec les informations sur la nouvelle entrée
function ldap add $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap add $dn	le nom dn de lentrée ldap
function bool ldap add	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap add resource $link_identifier string $dn array $entry	ajoute une entr&eacute;e dans un dossier ldap
function ldap bind $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function bool ldap bind	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap bind resource $link_identifier string $bind_rdn string $bind_password	authentification au serveur ldap
function ldap compare $attribute	le nom de lattribut
function ldap compare $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap compare $dn	le dn de lentrée ldap
function ldap compare $value	la valeur comparée
function mixed ldap compare	retourne true si la valeur value correspond sinon retourne false
function mixed ldap compare resource $link_identifier string $dn string $attribute string $value	compare une entr&eacute;e avec des valeurs d'attributs
function ldap connect $port	le port utilisé pour la connexion
function ldap connect $hostname	si vous utilisez openldap 2
function resource ldap connect	retourne un identifiant positif de serveur ldap en cas de succès ou bien false en cas derreur
function resource ldap connect string $hostname int $port	connexion &agrave; un serveur ldap
function ldap control paged result response $cookie	une structure opaque envoyée par le serveur
function ldap control paged result response $link	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap control paged result response $estimated	le nombre estimé dentrées à récupérer
function bool ldap control paged result response	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap control paged result response resource $link resource $result string $cookie int $estimated	r&eacute;cup&egrave;re le cookie de pagination ldap
function ldap control paged result $pagesize	le nombre dentrées par page
function ldap control paged result $link	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap control paged result $cookie	une structure opaque envoyée par le serveur ldap_control_paged_result_response()
function ldap control paged result $iscritical	indique si la pagination est critique ou non
function bool ldap control paged result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap control paged result resource $link int $pagesize bool $iscritical string $cookie	envoi un contr&ocirc;le de pagination ldap
function ldap count entries $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap count entries $result_identifier	le résultat interne ldap
function int ldap count entries	retourne le nombre dentrées dans le résultat ou false si une erreur survient
function int ldap count entries resource $link_identifier resource $result_identifier	compte le nombre d'entr&eacute;es apr&egrave;s une recherche
function ldap delete $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap delete $dn	le nom dn de lentrée ldap
function bool ldap delete	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap delete resource $link_identifier string $dn	efface une entr&eacute;e dans un dossier
function ldap dn2ufn $dn	le dn de lentrée ldap
function string ldap dn2ufn	retourne lufn
function string ldap dn2ufn string $dn	convertit un dn en format ufn user friendly naming
function ldap errno $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function int ldap errno	retourne le numéro derreur ldap généré par la dernière commande
function int ldap errno resource $link_identifier	retourne le num&eacute;ro d'erreur ldap de la derni&egrave;re commande ex&eacute;cut&eacute;e
function ldap error $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function string ldap error	retourne un message derreur ldap
function string ldap error resource $link_identifier	retourne le message ldap de la derni&egrave;re commande ldap
function ldap explode dn $with_attrib	sert à préciser si les rdn sont retournés seuls ou bien avec leurs attributs
function ldap explode dn $dn	le nom dn de lentrée ldap
function array ldap explode dn	retourne un tableau de tous les composants dn
function array ldap explode dn string $dn int $with_attrib	s&eacute;pare les diff&eacute;rents composants d'un dn
function ldap first attribute $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap first attribute $ber_identifier	le paramètre ber_identifier est lidentifiant de pointeur en mémoire locale
function string ldap first attribute	retourne le premier attribut de lentrée en cas de succès et false si une erreur survient
function string ldap first attribute resource $link_identifier resource $result_entry_identifier	retourne le premier attribut
function ldap first entry $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function resource ldap first entry	retourne la première entrée en cas de succès false si une erreur survient
function resource ldap first entry resource $link_identifier resource $result_identifier	retourne la premi&egrave;re entr&eacute;e
function bool ldap free result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap free result resource $result_identifier	lib&egrave;re la m&eacute;moire du r&eacute;sultat
function ldap get dn $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function string ldap get dn	retourne le dn de lentrée du résultat ou false si une erreur survient
function string ldap get dn resource $link_identifier resource $result_entry_identifier	lit le dn d'une entr&eacute;e
function ldap get values len $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function array ldap get values len	retourne un tableau de valeurs pour lattribut en cas de succès et false en cas derreur
function array ldap get values len resource $link_identifier resource $result_entry_identifier string $attribute	lit toutes les valeurs binaires d'une entr&eacute;e
function ldap get values $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function array ldap get values	retourne un tableau de valeurs pour lattribut ou false en cas derreur
function array ldap get values resource $link_identifier resource $result_entry_identifier string $attribute	lit toutes les valeurs d'une entr&eacute;e ldap
function ldap mod add $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap mod add $dn	le nom dn de lentrée ldap
function bool ldap mod add	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap mod add resource $link_identifier string $dn array $entry	ajoute un attribut &agrave; l'entr&eacute;e courante
function ldap mod del $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap mod del $dn	le nom dn de lentrée ldap
function bool ldap mod del	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap mod del resource $link_identifier string $dn array $entry	efface un attribut &agrave; l'entr&eacute;e courante
function ldap mod replace $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap mod replace $dn	le nom dn de lentrée ldap
function bool ldap mod replace	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap mod replace resource $link_identifier string $dn array $entry	remplace un attribut dans l'entr&eacute;e courante
function ldap modify batch $LDAP_MODIFY_BATCH_REMOVE_ALL	toutes les valeurs sont supprimées depuis lattribut nommé par attrib
function ldap modify batch $LDAP_MODIFY_BATCH_REPLACE	toutes les valeurs courantes de lattribut nommé par attrib sont remplacées avec les valeurs spécifiées via le tableau values
function ldap modify batch $entry	un tableau qui spécifie les modifications à réaliser
function ldap modify batch $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap modify batch $LDAP_MODIFY_BATCH_ADD	chaque valeur spécifiée via values est ajoutée comme valeur additionnelle à lattribut nommé par attrib
function ldap modify batch $dn	le nom unique de lentrée ldap
function ldap modify batch $LDAP_MODIFY_BATCH_REMOVE	chaque valeur spécifiée via values est supprimée depuis lattribut nommée par attrib
function bool ldap modify batch	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap modify batch resource $link_identifier string $dn array $entry	mets en lot des modifications et les ex&eacute;cute sur une entr&eacute;e ldap
function ldap next entry $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function resource ldap next entry	retourne lidentifiant de la prochaine entrée du résultat où la première entrée a été lue par la fonction ldap_first_entry()
function resource ldap next entry resource $link_identifier resource $result_entry_identifier	lit la prochaine entr&eacute;e
function ldap parse result $errmsg	une référence vers une variable qui sera valorisée du message derreur ldap dans le résultat ou dune chaîne vide si aucune erreur nest survenue
function ldap parse result $referrals	une référence vers une variable qui sera valorisée dun jeu de tableaux contenant les chaînes de référence dans le résultat ou un tableau vide si aucune référence nest retournée
function ldap parse result $result_identifier	une ressource de résultat ldap retournée par la fonction ldap_list() ou la fonction ldap_search()
function ldap parse result $matcheddn	une référence vers une variable qui sera valorisée du dn correspondant sil a été reconnu dans la requête sinon vaudra null
function ldap parse result $link	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap parse result $errcode	une référence vers une variable qui sera valorisée du code erreur ldap dans le résultat ou par 0 si aucune erreur nest survenue
function bool ldap parse result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap parse result resource $link resource $result int $errcode string $matcheddn string $errmsg array $referrals	extrait des informations d'un r&eacute;sultat
function ldap rename $newrdn	le nouveau rdn
function ldap rename $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function ldap rename $dn	le nom dn de lentrée ldap
function ldap rename $newparent	la nouvelle entrée parent / supérieure
function ldap rename $deleteoldrdn	si ce paramètre vaut true lancienne valeur rdn est supprimée
function bool ldap rename	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap rename resource $link_identifier string $dn string $newrdn string $newparent bool $deleteoldrdn	modifie le nom d'une entr&eacute;e
function ldap unbind $link_identifier	un identifiant de lien ldap retourné par la fonction ldap_connect()
function bool ldap unbind	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ldap unbind resource $link_identifier	d&eacute;connecte d'un serveur ldap
function levenshtein $cost_rep	définit le coût du remplacement
function levenshtein $str2	une des chaînes à évaluer
function levenshtein $str1	une des chaînes à évaluer
function levenshtein $cost_del	définit le coût de leffacement
function levenshtein $cost_ins	définit le coût de linsertion
function int levenshtein	retourne la distance levenshtein entre deux chaînes de caractères
function int levenshtein string $str1 string $str2	calcule la distance levenshtein entre deux cha&icirc;nes
function void libxml clear errors	vide le buffer d'erreur libxml
function libxml disable entity loader $disable	désactive true ou active false le chargement des entités externes par les extensions libxml telles que dom xmlwriter et xmlreader
function bool libxml disable entity loader	retourne la configuration précédente
function bool libxml disable entity loader bool $disable	d&eacute;sactive le chargement des entit&eacute;s externes
function array libxml get errors	libxml_get_errors() retourne un tableau avec les objets libxmlerror qui représentent les erreurs ou bien un tableau vide sil ny a pas derreurs
function array libxml get errors	lit le tableau d'erreurs
function LibXMLError libxml get last error	libxml_get_last_error() retourne un objet libxmlerror sil y a une erreur et false sinon
function LibXMLError libxml get last error	lit la derni&egrave;re erreur libxml
function libxml set external entity loader $resolver_function	une callable qui accepte trois arguments
function void libxml set external entity loader callable $resolver_function	change le chargeur d'entit&eacute;s externes par d&eacute;faut
function libxml set streams context $streams_context	la ressource de contexte de flux créé avec la fonction stream_context_create()
function void libxml set streams context resource $streams_context	configure le contexte de flux pour la prochaine op&eacute;ration libxml
function libxml use internal errors $use_errors	active true le gestionnaire derreurs utilisateur ou le désactive false
function bool libxml use internal errors	libxml_use_internal_errors() retourne la valeur précédemment configurée pour use_errors
function bool libxml use internal errors bool $use_errors	d&eacute;sactive le rapport d'erreur libxml et les stocke pour lecture ult&eacute;rieure
function link $target	la cible du lien
function link $link	le nom du lien
function bool link	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool link string $target string $link	cr&eacute;e un lien
function linkinfo $path	chemin vers le lien
function int linkinfo	linkinfo() retourne le champ st_dev de la structure stat unix c retourné par lappel système lstat
function int linkinfo string $path	renvoie les informations d'un lien
function list $var1	une variable
function array list	retourne le tableau assigné
function array list mixed $var1	assigne des variables comme si elles &eacute;taient un tableau
function array localeconv	localeconv() retourne les formats en fonction de la configuration effectuée avec setlocale()
function array localeconv	lit la configuration locale
function localtime $is_associative	si défini à false ou ignoré force localtime() à retourner un tableau à index numérique
function localtime $timestamp	le paramètre optionnel timestamp est un timestamp unix de type entier qui vaut par défaut lheure courante locale si le paramètre timestamp nest pas fourni
function array localtime int $timestamp bool $is_associative	r&eacute;cup&egrave;re l'heure locale
function log cmd delete $deleteOptions	clé valeur limit entier 1 ou 0
function log cmd delete $protocolOptions	key value message_length la taille totale en bytes du message encodé en cours denvoi
function log cmd delete $server	un tableau contenant les informations basiques du serveur récupéré
function array log cmd delete array $server array $writeOptions array $deleteOptions array $protocolOptions	fonction de rappel lors de la suppression des documents
function log cmd update $protocolOptions	key value message_length la taille totale en bytes du message encodé en cours denvoi
function log cmd update $server	un tableau contenant les informations basiques du serveur récupéré
function log cmd update $updateOptions	clé valeur multi booléen true si cette mise à jour est autorisée à mettre à jour tous les critères correspondants upsert booléen true si le document doit être créé si le critère ne correspond pas q tableau les critères de recherche u tableau le nouvel objet / les modifications
function array log cmd update array $server array $writeOptions array $updateOptions array $protocolOptions	fonction de rappel lors de la mise &agrave; jour de documents
function log getmore $server	un tableau contenant les informations basiques du serveur récupéré
function log getmore $info	clé valeur request_id entier lidentifiant de requête du driver cursor_id entier lidentifiant du curseur utilisé pour récupérer plus de données batch_size entier nombre maximal de documents demandés
function array log getmore array $server array $info	fonction de rappel lors de la r&eacute;cup&eacute;ration du prochain curseur du lot
function log killcursor $server	un tableau contenant les informations basiques du serveur récupéré
function log killcursor $info	clé valeur cursor_id entier lidentifiant du curseur à tuer
function array log killcursor array $server array $info	fonction de rappel lors de l'ex&eacute;cution des op&eacute;ration killcursor
function log reply $messageHeaders	clé valeur length entier en octets de la longueur du message de la réponse request_id entier lidentifiant de requête du serveur response_id entier lidentifiant de requête du driver dont ce message est la réponse opcode entier lidentifiant opcode
function log reply $server	un tableau contenant les informations basiques du serveur récupéré
function log reply $operationHeaders	clé valeur flags entier masque de bits des drapeaux du protocole cursor_id entier id du curseur créé sur le serveur 0 si aucune nest créé ou sil est épuisé) start la position de départ de ce curseur returned entier nombre de documents retournés durant cette étape
function array log reply array $server array $messageHeaders array $operationHeaders	fonction de rappel lors de la lecture d'une r&eacute;ponse mongodb
function log10 $arg	largument à traiter
function float log10	le logarithme en base 10 de arg
function float log10 float $arg	logarithme en base 10
function log1p $number	largument à traiter
function float log1p	log 1 + number
function float log1p float $number	calcule pr&eacute;cis&eacute;ment log 1 + nombre
function long2ip $proper_address	une représentation dune adresse
function string long2ip	retourne ladresse ip internet sous la forme dune chaîne de caractères
function string long2ip string $proper_address	convertit une adresse ip ipv4 en adresse ip num&eacute;rique
function lstat $filename	chemin vers un fichier ou un lien symbolique
function array lstat	voyez la page de manuel de stat() pour plus dinformations sur la structure du tableau retourné par lstat()
function array lstat string $filename	retourne les informations sur un fichier ou un lien symbolique
function ltrim $str	la chaîne dentrée
function ltrim $character_mask	il est aussi possible de spécifier les caractères à supprimer en utilisant le paramètre character_mask
function string ltrim	cette fonction retourne la chaîne str après avoir supprimé les caractères invisibles de début de chaîne
function string ltrim string $str string $character_mask	supprime les espaces ou d'autres caract&egrave;res de d&eacute;but de cha&icirc;ne
function lzf decompress $data	la chaîne compressée
function string lzf decompress	retourne les données compressées ou false si une erreur survient
function string lzf decompress string $data	d&eacute;compression lzf
function mail $additional_headers(optionnel)	chaîne à insérer à la fin des en-têtes du mail
function mail $message	message à envoyer
function mail $to	le ou les destinataires du mail
function mail $additional_parameters(optionnel)	le paramètre additional_parameters peut être utilisé pour passer des drapeaux additionnels comme options à la ligne de commande configurée pour être utilisée pour envoyer les mails en utilisant le paramètre de configuration sendmail_path
function mail $subject	sujet du mail à envoyer
function bool mail	retourne true si le mail a été accepté pour livraison false sinon
function bool mail string $to string $subject string $message string $additional_headers string $additional_parameters	envoi de mail
function mailparse determine best xfer encoding $fp	un pointeur de fichier valide qui peut être lu
function string mailparse determine best xfer encoding	retourne un encodage de caractères supporté par le module mbstring
function string mailparse determine best xfer encoding resource $fp	d&eacute;termine le meilleur encodage pour un fichier
function mailparse msg extract part file $mimemail	une ressource valide mime créée avec la fonction mailparse_msg_create()
function mailparse msg extract part file $callbackfunc	si défini ce peut être soit un callback valide qui sera passé à la section extraite soit null pour faire que cette fonction retourne la section extraite
function mailparse msg extract part file $filename	peut être un nom de fichier ou un flux valide
function string mailparse msg extract part file	si callbackfunc ne vaut pas null retourne true en cas de succès
function string mailparse msg extract part file resource $mimemail mixed $filename callable $callbackfunc	extrait et d&eacute;code une section de message
function mailparse msg free $mimemail	une ressource mime allouée par la fonction mailparse_msg_create() ou la fonction mailparse_msg_parse_file()
function bool mailparse msg free	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mailparse msg free resource $mimemail	lib&egrave;re une ressource mime
function mailparse msg parse $mimemail	une ressource mime valide
function bool mailparse msg parse	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mailparse msg parse resource $mimemail string $data	analyse incr&eacute;mentalement des donn&eacute;es dans un buffer
function mailparse rfc822 parse addresses $addresses	une chaîne de caractères contenant les adresses comme : wez furlong < wez@example
function array mailparse rfc822 parse addresses	retourne un tableau de tableaux associatifs contenant les clés suivantes pour chaque adresses : display le nom de ladresse aux fins daffichage
function array mailparse rfc822 parse addresses string $addresses	analyse des adresses
function mailparse stream encode $sourcefp	un gestionnaire de fichier valide
function mailparse stream encode $destfp	le gestionnaire de fichier destinataire dans lequel les données encodées seront écrites
function mailparse stream encode $encoding	un des encodages de caractères supportés par le module mbstring
function bool mailparse stream encode	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mailparse stream encode resource $sourcefp resource $destfp string $encoding	lit les donn&eacute;es dans un fichier applique l'encodage et envoie le r&eacute;sultat &agrave; destfp
function mailparse uudecode all $fp	un pointeur de fichier valide
function array mailparse uudecode all	retourne un tableau de tableaux associatifs listant les informations sur les noms de fichiers
function array mailparse uudecode all resource $fp	scanne les donn&eacute;es du fichier et extrait tous les fichiers encod&eacute;s qui s'y trouvent
function string maxdb connect error	une chaîne décrivant lerreur
function string maxdb connect error	retourne une cha&icirc;ne descriptive de la derni&egrave;re erreur
function void maxdb debug string $debug	effectue des op&eacute;rations de d&eacute;boguage
function string maxdb get client info	une chaîne représentant la version de la bibliothèque cliente maxdb
function string maxdb get client info	retourne la version du client maxdb sous la forme d'une cha&icirc;ne
function int maxdb get client version	un nombre représentant la version de la bibliothèque cliente maxdb dans le format : main_version*10000 + minor_version *100 + sub_version
function int maxdb get client version	r&eacute;cup&egrave;re des informations sur le client maxdb
function resource maxdb init	retourne une ressource
function resource maxdb init	initialise maxdb et retourne une ressource pour l'utiliser avec maxdb_real_connect
function bool maxdb more results	toujours false
function bool maxdb more results resource $link	v&eacute;rifie s'il y a encore des r&eacute;sultats de disponibles depuis de multiples requ&ecirc;tes
function bool maxdb next result	retourne false
function bool maxdb next result resource $link	pr&eacute;pare le prochain r&eacute;sultat depuis multi_query
function bool maxdb select db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool maxdb select db resource $link string $dbname	s&eacute;lectionne une base de donn&eacute;es pour les requ&ecirc;tes
function string maxdb stmt sqlstate	retourne une chaîne contenant le code erreur sqlstate pour la dernière erreur
function string maxdb stmt sqlstate resource $stmt	retourne une erreur sqlstate depuis la requ&ecirc;te pr&eacute;c&eacute;dente
function bool maxdb thread safe	true si la bibliothèque cliente est thread safety false sinon
function bool maxdb thread safe	indique si le thread safety est donn&eacute; ou non
function mb convert case $encoding	le paramètre encoding est lencodage des caractères
function mb convert case $str	la chaîne à convertir
function mb convert case $mode	le mode de conversion
function string mb convert case	la chaîne dont la casse a été changée suivant le mode fourni
function string mb convert case string $str int $mode string $encoding	modifie la casse d'une cha&icirc;ne
function mb convert encoding $to_encoding	le type dencodage utilisé pour la conversion de la chaîne str
function mb convert encoding $from_encoding	spécifié par le nom de code des caractères avant la conversion
function mb convert encoding $str	la chaîne à encoder
function string mb convert encoding	la chaîne encodée
function string mb convert encoding string $str string $to_encoding mixed $from_encoding	conversion d'encodage
function mb convert variables $from_encoding	from-encoding est une liste dencodages possibles pour les variables vars fourni sous forme dun tableau ou dune liste dencodages séparés par des virgules
function mb convert variables	variables additionnelles
function mb convert variables $to_encoding	lencodage dans lequel la chaîne doit être convertie
function mb convert variables $vars	vars est une référence sur une variable à convertir
function string mb convert variables	lencodage avant conversion en cas de succès ou false si une erreur survient
function string mb convert variables string $to_encoding mixed $from_encoding mixed $vars	convertit l'encodage de variables
function mb decode numericentity $encoding	le paramètre encoding est lencodage des caractères
function mb decode numericentity $str	la chaîne à décoder
function mb decode numericentity $convmap	convmap est un tableau qui spécifie les codes à convertir
function string mb decode numericentity	la chaîne convertie
function string mb decode numericentity string $str array $convmap string $encoding	d&eacute;code les entit&eacute;s html en caract&egrave;res
function mb detect encoding $strict	strict spécifie si lon doit utiliser une détection de lencodage strict ou non
function mb detect encoding $encoding_list	encoding_list est une liste dencodages sous forme de tableau ou bien de chaîne les valeurs étant séparées par des virgules
function mb detect encoding $str	la chaîne à analyser
function string mb detect encoding	lencodage détecté ou false si lencodage ne peut être détecté pour la chaîne de caractères donnée
function string mb detect encoding string $str mixed $encoding_list bool $strict	d&eacute;tecte un encodage
function mb encode mimeheader $transfer_encoding	transfer_encoding est lencodage de transfert
function mb encode mimeheader $charset	charset est le nom de lencodage utilisé par la chaîne str
function mb encode mimeheader $indent	indentation de la première ligne nombre de caractères dans len-tête avant la chaîne str
function mb encode mimeheader $str	la chaîne à encoder
function mb encode mimeheader $linefeed	linefeed spécifie les fins de lignes eof : end-of-line utilisées par mb_encode_mimeheader() pour formater la chaîne une rfc définie la longueur dune chaîne à partir de laquelle on doit ajouter une fin de ligne
function string mb encode mimeheader	une version convertie de la chaîne en ascii
function string mb encode mimeheader string $str string $charset string $transfer_encoding string $linefeed int $indent	encode une cha&icirc;ne pour un en-t&ecirc;te mim
function mb encode numericentity $encoding	le paramètre encoding est lencodage des caractères
function mb encode numericentity $str	la chaîne à encoder
function mb encode numericentity $convmap	convmap est un tableau qui spécifie les codes à convertir
function string mb encode numericentity	la chaîne convertie
function string mb encode numericentity string $str array $convmap string $encoding bool $is_hex	encode les caract&egrave;res en r&eacute;f&eacute;rence num&eacute;rique html
function mb ereg replace callback $callback	un callback qui sera appelé et lui sera passé un tableau déléments correspondants dans la chaine de caractère subject
function mb ereg replace callback $string	la string qui doit être vérifiée
function mb ereg replace callback $pattern	lexpression régulière
function mb ereg replace callback $option	matching condition can be set by option parameter
function string mb ereg replace callback	the resultant string en cas de succès ou false en cas derreur
function string mb ereg replace callback string $pattern callable $callback string $string string $option	rechercher et remplacer par expression r&eacute;guli&egrave;re avec support multi octets utilisant une fonction de callback
function mb ereg search init $string	la chaîne à chercher
function mb ereg search init $pattern	le masque de recherche
function mb ereg search init $option	loption de recherche
function bool mb ereg search init string $string string $pattern string $option	configure les cha&icirc;nes et les expressions rationnelles pour le support des caract&egrave;res multi-octets
function mb http output $encoding	si encoding est fourni mb_http_output() utilisera dorénavant lencodage encoding pour les affichages http : les caractères qui seront envoyés aux clients web seront convertis dans le jeu de caractères encoding
function mixed mb http output	si le paramètre encoding est omis mb_http_output() retourne lencodage courant http
function mixed mb http output string $encoding	lit / modifie l'encodage d'affichage
function mb internal encoding $encoding	encoding sert lors des conversions des chaînes en provenance et en direction du web ainsi que lors de la création de chaînes avec le module mbstring
function mixed mb internal encoding	si encoding est fourni cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed mb internal encoding string $encoding	lit / modifie l'encodage interne
function mb language $language	sert à encoder les messages électroniques
function mixed mb language	si language est fourni et est valide mb_language() retourne true
function mixed mb language string $language	lit / modifie le langage courant
function array mb list encodings	retourne un tableau indexé numériquement
function array mb list encodings	retourne un tableau contenant tous les encodages support&eacute;s
function mb output handler $status	le statut du buffer de sortie
function mb output handler $contents	le contenu du buffer de sortie
function string mb output handler	la chaîne convertie
function string mb output handler string $contents int $status	fonction de traitement des affichages
function mb parse str $result	un tableau contenant les valeurs décodées et les noms des jeux de caractères
function mb parse str $encoded_string	les données encodées url
function bool mb parse str	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mb parse str string $encoded_string array $result	analyse les donn&eacute;es http get / post / cookie et assigne les variables globales
function mb preferred mime name $encoding	lencodage à vérifier
function string mb preferred mime name	le nom de lencodage mime pour lencodage encoding
function string mb preferred mime name string $encoding	d&eacute;tecte l'encodage mime
function mb strcut $start	position de départ dans les octets
function mb strcut $encoding	le paramètre encoding est lencodage des caractères
function mb strcut $length	longueur dans les octets
function mb strcut $str	la chaîne à couper
function string mb strcut	mb_strcut() retourne la portion de la chaîne str qui commence au caractère start et a la longueur de length caractères
function string mb strcut string $str int $start int $length string $encoding	coupe une partie de cha&icirc;ne
function mb strimwidth $encoding	le paramètre encoding est lencodage des caractères
function mb strimwidth $trimmarker	trimmarker est la chaîne ajoutée à la fin de la chaîne tronquée
function mb strimwidth $str	la chaîne à tronquer
function mb strimwidth $width	la taille à tronquer
function mb strimwidth $start	start est loffset de départ en nombre de caractères depuis le début de la chaîne cela commence à 0
function string mb strimwidth	la chaîne tronquée
function string mb strimwidth string $str int $start int $width string $trimmarker string $encoding	tronque une cha&icirc;ne
function mb stripos $encoding	nom de lencodage à utiliser
function mb stripos $offset	la position dans haystack où lon doit commencer à chercher
function mb stripos $haystack	la chaîne depuis laquelle on récupère la position de la première occurrence de needle
function mb stripos $needle	la chaîne à chercher dans haystack
function int mb stripos	retourne la position numérique de la première occurrence de needle dans la chaîne haystack ou false si needle nest pas trouvé
function int mb stripos string $haystack string $needle int $offset string $encoding	trouve la premi&egrave;re occurrence d'une cha&icirc;ne dans une autre sans tenir compte de la casse
function mb stristr $encoding	nom de lencodage à utiliser
function mb stristr $haystack	la chaîne depuis laquelle on récupère la première occurrence de needle
function mb stristr $before_needle	détermine quelle portion de haystack cette fonction retourne
function mb stristr $needle	la chaîne à chercher dans haystack
function string mb stristr	retourne la portion de haystack ou false si needle nest pas trouvé
function string mb stristr string $haystack string $needle bool $before_needle string $encoding	trouve la premi&egrave;re occurrence d'une cha&icirc;ne dans une autre sans tenir compte de la casse
function mb strlen $encoding	le paramètre encoding est lencodage des caractères
function mb strlen $str	la chaîne à analyser
function mixed mb strlen	retourne le nombre de caractères dans la chaîne str avec lencodage encoding
function mixed mb strlen string $str string $encoding	retourne la taille d'une cha&icirc;ne
function mb strpos $encoding	le paramètre encoding est lencodage des caractères
function mb strpos $haystack	la chaîne à analyser
function mb strpos $offset	la position de début de recherche
function mb strpos $needle	la chaîne de caractères à trouver dans le paramètre haystack
function int mb strpos	retourne la position numérique de la première occurrence du caractère needle dans la chaîne haystack
function int mb strpos string $haystack string $needle int $offset string $encoding	rep&egrave;re la premi&egrave;re occurrence d'un caract&egrave;re dans une cha&icirc;ne
function mb strrchr $haystack	la chaîne depuis laquelle on doit récupérer la dernière occurrence de needle
function mb strrchr $part	détermine quelle portion de haystack cette fonction retourne
function mb strrchr $needle	la chaîne à trouver dans haystack
function mb strrchr $encoding	nom de lencodage à utiliser
function string mb strrchr	retourne la portion de haystack
function string mb strrchr string $haystack string $needle bool $part string $encoding	trouve la derni&egrave;re occurrence d'un caract&egrave;re d'une cha&icirc;ne dans une autre
function mb strrichr $encoding	nom de lencodage à utiliser
function mb strrichr $part	détermine quelle portion de haystack cette fonction retourne
function mb strrichr $needle	la chaîne à chercher dans haystack
function mb strrichr $haystack	la chaîne depuis laquelle on doit chercher la dernière occurrence de needle
function string mb strrichr	retourne la portion de haystack
function string mb strrichr string $haystack string $needle bool $part string $encoding	trouve la derni&egrave;re occurrence d'un caract&egrave;re d'une cha&icirc;ne dans une autre insensible &agrave; la casse
function mb strripos $encoding	nom de lencodage à utiliser
function mb strripos $offset	la position dans haystack à partir de laquelle on doit commencer à chercher
function mb strripos $needle	la chaîne à chercher dans haystack
function mb strripos $haystack	la chaîne depuis laquelle on récupère la position de la dernière occurrence de needle
function int mb strripos	retourne la position numérique de la dernière occurrence de needle dans la chaîne haystack ou false si needle nest pas trouvé
function int mb strripos string $haystack string $needle int $offset string $encoding	trouve la position de la derni&egrave;re occurrence d'une cha&icirc;ne dans une autre en ne tenant pas compte de la casse
function mb strrpos $needle	la chaîne à chercher dans la chaîne haystack
function mb strrpos $encoding	le paramètre encoding est lencodage des caractères
function mb strrpos $haystack	la chaîne à analyser
function mb strrpos $offset	doit être spécifié pour commencer à recherche un nombre arbitraire de nombre de caractères dans une chaîne
function int mb strrpos	retourne la position numérique de la dernière occurrence du caractère needle dans la chaîne haystack
function int mb strrpos string $haystack string $needle int $offset string $encoding	rep&egrave;re la derni&egrave;re occurrence d'un caract&egrave;re dans une cha&icirc;ne
function mb strstr $encoding	nom de lencodage à utiliser
function mb strstr $before_needle	détermine quelle portion de haystack cette fonction retourne
function mb strstr $needle	la chaîne à chercher dans haystack
function mb strstr $haystack	la chaîne dans laquelle on doit chercher la première occurrence de needle
function string mb strstr	retourne la portion de haystack ou false si needle nest pas trouvé
function string mb strstr string $haystack string $needle bool $before_needle string $encoding	trouve la premi&egrave;re occurrence d'une cha&icirc;ne dans une autre
function mb strtolower $encoding	le paramètre encoding est lencodage des caractères
function mb strtolower $str	la chaîne à mettre en minuscule
function string mb strtolower	retourne la chaîne str dont tous les caractères alphabétiques ont été mis en minuscule
function string mb strtolower string $str string $encoding	met tous les caract&egrave;res en minuscules
function mb strwidth $encoding	le paramètre encoding est lencodage des caractères
function mb strwidth $str	la chaîne à analyser
function int mb strwidth	la taille de la chaîne
function int mb strwidth string $str string $encoding	retourne la taille d'une cha&icirc;ne
function mb substr count $encoding	le paramètre encoding est lencodage des caractères
function mb substr count $haystack	la chaîne à analyser
function mb substr count $needle	la chaîne à chercher
function int mb substr count	retourne le nombre de fois où la chaîne needle apparaît dans la chaîne haystack
function int mb substr count string $haystack string $needle string $encoding	compte le nombre d'occurrences d'une sous-cha&icirc;ne
function mb substr $encoding	le paramètre encoding est lencodage des caractères
function mb substr $str	la chaîne à extraire depuis la sous-chaîne
function mb substr $length	nombre maximal de caractères à utiliser depuis str
function mb substr $start	position du premier caractère à utiliser depuis str
function string mb substr	mb_substr() retourne la portion de la chaîne str qui commence au caractère start et a la longueur de length caractères
function string mb substr string $str int $start int $length string $encoding	lit une sous-cha&icirc;ne
function string mcrypt cfb int $cipher string $key string $data int $mode string $iv	chiffre / d&eacute;chiffre des donn&eacute;es en mode cfb
function mcrypt create iv $source	la source dun iv
function mcrypt create iv $size	la taille du vecteur
function string mcrypt create iv	retourne le vecteur dinitialisation ou bien false en cas derreur
function string mcrypt create iv int $size int $source	cr&eacute;e un vecteur d'initialisation iv &agrave; partir d'une source al&eacute;atoire
function string mcrypt ecb int $cipher string $key string $data int $mode	obsol&egrave;te : chiffre / d&eacute;chiffre des donn&eacute;es en mode ecb
function mcrypt enc get algorithms name $td	la resource de chiffrement
function string mcrypt enc get algorithms name	retourne le nom de lalgorithme courant sous forme de chaîne de caractères
function string mcrypt enc get algorithms name resource $td	retourne le nom de l'algorithme de chiffrement
function mcrypt enc get block size $td	le pointeur de fichiers
function int mcrypt enc get block size	retourne la taille du bloc de lalgorithme en octets
function int mcrypt enc get block size resource $td	retourne la taille du bloc d'un algorithme
function mcrypt enc get iv size $td	le pointeur de fichiers
function int mcrypt enc get iv size	retourne la taille du iv ou 0 si liv est ignoré par lalgorithme
function int mcrypt enc get iv size resource $td	retourne la taille du vi d'un algorithme
function mcrypt enc get key size $td	le pointeur de fichier
function int mcrypt enc get key size	retourne la taille maximale de la clé pour le mode donné
function int mcrypt enc get key size resource $td	retourne la taille maximale de la cl&eacute; pour un mode
function mcrypt enc get modes name $td	la ressource de chiffrement
function string mcrypt enc get modes name	retourne le nom sous la forme dune chaîne de caractères
function string mcrypt enc get modes name resource $td	retourne le nom du mode
function mcrypt enc get supported key sizes $td	la ressource de chiffrement
function array mcrypt enc get supported key sizes	retourne un tableau contenant les tailles des clés supportées par lalgorithme désigné par td
function array mcrypt enc get supported key sizes resource $td	retourne un tableau contenant les tailles de cl&eacute;s accept&eacute;es par un algorithme
function mcrypt enc is block algorithm mode $td	la ressource de chiffrement
function bool mcrypt enc is block algorithm mode	retourne true si ce mode utilise des algorithmes par blocs et false sinon
function bool mcrypt enc is block algorithm mode resource $td	teste le chiffrement par blocs d'un mode
function mcrypt generic deinit $td	la ressource de chiffrement
function bool mcrypt generic deinit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mcrypt generic deinit resource $td	pr&eacute;pare le module pour le d&eacute;chargement
function bool mcrypt generic end resource $td	termine un chiffrement
function mcrypt get cipher name $cipher	une constante parmi les constantes mcrypt_ciphername ou le nom de lalgorithme sous la forme dune chaîne de caractères
function string mcrypt get cipher name	cette fonction retourne le nom du cipher ou false si le cipher nexiste pas
function string mcrypt get cipher name int $cipher	lit le nom du chiffrement utilis&eacute;
function mcrypt get iv size $cipher	une constante parmi les constantes mcrypt_ciphername ou le nom de lalgorithme sous la forme dune chaîne de caractères
function mcrypt get iv size $mode	une constantes parmi les constantes mcrypt_mode_modename ou une des chaînes suivantes : ecb cbc cfb ofb nofb ou stream
function int mcrypt get iv size	retourne la taille du vecteur dinitialisation iv en octets
function int mcrypt get iv size string $cipher string $mode	retourne la taille du vi utilis&eacute; par un couple chiffrement / mode
function mcrypt list algorithms $lib_dir	spécifie le dossier où les algoritjmes sont situés
function array mcrypt list algorithms	retourne un tableau avec les algorithmes supportés
function array mcrypt list algorithms string $lib_dir	liste tous les algorithmes de chiffrement support&eacute;s
function mcrypt list modes $lib_dir	spécifie le dossier où tous les modes sont situés
function array mcrypt list modes	retourne un tableau avec tous les modes supportés
function array mcrypt list modes string $lib_dir	liste tous les modes de chiffrement support&eacute;s
function mcrypt module close $td	la ressource de chiffrement
function bool mcrypt module close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mcrypt module close resource $td	d&eacute;charge le module de chiffrement
function mcrypt module get algo block size $lib_dir	le paramètre optionnel lib_dir contient le chemin jusquau module de lalgorithme sur le système
function mcrypt module get algo block size $algorithm	le nom de lalgorithme
function int mcrypt module get algo block size	retourne la taille de blocs dun algorithme en octets
function int mcrypt module get algo block size string $algorithm string $lib_dir	retourne la taille de blocs d'un algorithme
function mcrypt module get algo key size $lib_dir	le paramètre optionnel lib_dir contient le chemin jusquau module de lalgorithme sur le système
function mcrypt module get algo key size $algorithm	le nom de lalgorithme
function int mcrypt module get algo key size	retourne la taille maximale de la clé supportée par lalgorithme algorithm
function int mcrypt module get algo key size string $algorithm string $lib_dir	retourne la taille maximale de cl&eacute;
function mcrypt module get supported key sizes $algorithm	lalgorithme à utiliser
function mcrypt module get supported key sizes $lib_dir	le paramètre optionnel lib_dir peut contenir le chemin du dossier dinstallation du module sur le système
function array mcrypt module get supported key sizes	retourne un tableau contenant les tailles de clés supportées par lalgorithme de chiffrement algorithm
function array mcrypt module get supported key sizes string $algorithm string $lib_dir	retourne un tableau contenant les tailles de cl&eacute;s support&eacute;es par l'algorithme ouvert
function mcrypt module is block algorithm mode $lib_dir	le paramètre optionnel lib_dir peut contenir le dossier où les modules dalgorithme se trouvent sur le système
function mcrypt module is block algorithm mode $mode	le mode à vérifier
function bool mcrypt module is block algorithm mode	cette fonction retourne true si le mode doit être utilisé avec un algorithme par bloc sinon elle retourne false i
function bool mcrypt module is block algorithm mode string $mode string $lib_dir	indique si un mode fonctionne par blocs
function mcrypt module is block algorithm $lib_dir	le paramètre optionnel lib_dir peut contenir le chemin où se trouve les modules des algorithmes sur le disque système
function mcrypt module is block algorithm $algorithm	lalgorithme à vérifier
function bool mcrypt module is block algorithm	retourne true si lalgorithme spécifié est un algorithme par blocs ou false si cest un algorithme par flux
function bool mcrypt module is block algorithm string $algorithm string $lib_dir	indique si un algorithme fonctionne par blocs
function mcrypt module is block mode $lib_dir	le paramètre optionnel lib_dir contient le chemin jusquau module de lalgorithme sur le système
function mcrypt module is block mode $mode	une constantes parmi les constantes mcrypt_mode_modename ou une des chaînes suivantes : ecb cbc cfb ofb nofb ou stream
function bool mcrypt module is block mode	cette fonction retourne true si ce mode fournit des blocs doctets ou false sil ne sort que des octets
function bool mcrypt module is block mode string $mode string $lib_dir	indique si un mode travaille par blocs
function mcrypt module open $algorithm_directory	le paramètre algorithm_directory est utilisé pour localiser le module de cryptage
function mcrypt module open $mode	une constantes parmi les constantes mcrypt_mode_modename ou une des chaînes suivantes : ecb cbc cfb ofb nofb ou stream
function mcrypt module open $algorithm	une constante parmi les constantes mcrypt_ciphername ou le nom de lalgorithme sous la forme dune chaîne de caractères
function mcrypt module open $mode_directory	le paramètre mode_directory est utilisé pour localiser le module de cryptage
function resource mcrypt module open	normalement cette fonction retourne un descripteur de cryptage ou false si une erreur survient
function resource mcrypt module open string $algorithm string $algorithm_directory string $mode string $mode_directory	ouvre le module de l'algorithme et du mode &agrave; utiliser
function mcrypt module self test $lib_dir	le paramètre optionnel lib_dir contient le chemin jusquau module de lalgorithme sur le système
function mcrypt module self test $algorithm	une constante parmi les constantes mcrypt_ciphername ou le nom de lalgorithme sous la forme dune chaîne de caractères
function bool mcrypt module self test	retourne true si le test fonctionne et false sinon
function bool mcrypt module self test string $algorithm string $lib_dir	teste un mode
function string mcrypt ofb int $cipher string $key string $data int $mode string $iv	chiffre / d&eacute;chiffre des donn&eacute;es en mode ofb
function md5 file $filename	le nom du fichier
function md5 file $raw_output	lorsque true retourne le prétraitement en format binaire brut avec une grandeur de 16
function string md5 file	retourne une chaîne de caractères en cas de succès false autrement
function string md5 file string $filename bool $raw_output	calcule le md5 d'un fichier
function md5 $str	la chaîne
function md5 $raw_output	si le paramètre optionnel raw_output est défini à true alors le md5 est retourné au format binaire brut avec une longueur de 16
function string md5	retourne le md5 de la chaîne sous la forme dun nombre hexadécimal de 32 caractères
function string md5 string $str bool $raw_output	calcule le md5 d'une cha&icirc;ne
function memcache debug $on_off	active laffichage de débogue si égal à true
function bool memcache debug	retourne true si php était compilé avec loption --enable-debug autrement retourne false
function bool memcache debug bool $on_off	active ou non l'affichage des informations de d&eacute;boguage
function memory get peak usage $real_usage	définir à true pour récupérer la taille réelle de la mémoire allouée par le système
function int memory get peak usage	retourne la quantité de mémoire en octets
function int memory get peak usage bool $real_usage	retourne la quantit&eacute; de m&eacute;moire maximale allou&eacute;e par php
function memory get usage $real_usage	définir à true pour récupérer la taille réelle de la mémoire allouée par le système
function int memory get usage	retourne la quantité de mémoire en octets
function int memory get usage bool $real_usage	indique la quantit&eacute; de m&eacute;moire utilis&eacute;e par php
function metaphone $phonemes	ce paramètre restreint la clé métaphone retournée à une longueur de phonemes caractères
function metaphone $str	la chaîne dentrée
function string metaphone	retourne la clé metaphone sous la forme dune chaîne de caractères ou false si une erreur survient
function string metaphone string $str int $phonemes	calcule la cl&eacute; metaphone
function method exists $method_name	le nom de la méthode
function method exists $object	une instance dun objet ou le nom dune classe
function bool method exists	retourne true si la méthode fournie par le paramètre method_name a été définie pour lobjet object false sinon
function bool method exists mixed $object string $method_name	v&eacute;rifie si la m&eacute;thode existe pour une classe
function int mhash count	retourne lidentifiant de hash maximal
function int mhash count	r&eacute;cup&egrave;re l'identifiant maximal de hash
function mhash get block size $hash	lidentifiant du hash
function int mhash get block size	retourne la taille en octets ou false si le hash nexiste pas
function int mhash get block size int $hash	retourne la taille de bloc du hash
function mime content type $filename	chemin vers le fichier à tester
function string mime content type	retourne le type de contenu au format mime comme text / plain ou application / octet-stream
function string mime content type string $filename	d&eacute;tecte le type de contenu d'un fichier obsol&egrave;te
function ming setcubicthreshold $threshold	le niveau du seuil
function void ming setcubicthreshold int $threshold	fixe le niveau de seuil cubique
function ming setscale $scale	léchelle à définir
function void ming setscale float $scale	d&eacute;finit le facteur d'&eacute;chelle globale
function ming setswfcompression $level	le nouveau degré de compression
function void ming setswfcompression int $level	d&eacute;finit la compression de sortie swf
function mktime $month	le nombre de mois depuis la fin de lannée précédente
function mktime $is_dst	ce paramètre peut être mis à 1 si lheure dhiver est appliquée dst 0 si elle ne lest pas et -1 par défaut si on ne sait pas
function mktime $second	le nombre de secondes depuis le début de la minute minute
function mktime $hour	le nombre dheures depuis le début de la journée fixée par les paramètres month day et year
function mktime $day	le nombre de jours depuis la fin du mois précédent
function mktime $year	lannée peut être sur deux ou quatre chiffres avec des valeurs allant de 0 à 69 correspondant au valeur 2000 à 2069 et 70 à 100 correspondant au valeur 1970 à 2000
function mktime $minute	le nombre de minutes depuis le début de lheure hour
function int mktime	mktime() retourne un timestamp unix des arguments donnés
function int mktime int $hour int $minute int $second int $month int $day int $year int $is_dst	retourne le timestamp unix d'une date
function money format $#n	le nombre maximal de chiffres n attendus à gauche du séparateur décimal e
function money format $number	le nombre à formater
function money format $^	désactive le groupage de caractères tel que défini dans la configuration locale
function money format $-	si fourni cette configuration fait que les champs seront justifiés à gauche complétés à droite au contraire de la configuration par défaut qui est justifiée à droite et complétée à gauche
function money format $n	le nombre est formaté en fonction du format monétaire national e
function money format $%	retourne le caractère %
function money format $.p	un point suivi par un nombre de décimales p
function money format $w	un nombre décimal qui spécifie la taille minimale du champ
function money format f $	le caractère = suivi par un octet unique f qui sera utilisé comme caractère de remplissage
function money format $!	supprime le simple monétaire dans la chaîne finale
function money format $i	le nombre est formaté suivant le format monétaire international de la configuration locale e
function money format $+ou(	spécifie le style de formatage pour les nombres positifs et négatifs
function string money format	retourne la chaîne formatée
function string money format string $format float $number	met un nombre au format mon&eacute;taire
function move uploaded file $destination	la destination du fichier déplacé
function move uploaded file $filename	le nom du fichier téléchargé
function bool move uploaded file	retourne true en cas de succès
function bool move uploaded file string $filename string $destination	d&eacute;place un fichier t&eacute;l&eacute;charg&eacute;
function mqseries back $hConn	connection handle
function mqseries back $reason	la raison qui qualifie le compcode
function mqseries back $compCode	code de complétion
function void mqseries back resource $hconn resource $compCode resource $reason	mqseries mqback
function mqseries begin $hConn	connection handle
function mqseries begin $reason	la raison qui qualifie le compcode
function mqseries begin $compCode	code de complétion
function void mqseries begin resource $hconn array $beginOptions resource $compCode resource $reason	mqseries mqbegin
function mqseries close $hConn	connection handle
function mqseries close $reason	la raison qui qualifie le compcode
function mqseries close $hObj	object handle
function mqseries close $compCode	code de complétion
function void mqseries close resource $hconn resource $hobj int $options resource $compCode resource $reason	mqseries mqclose
function mqseries conn $qManagerName	nom du gestionnaire de queues
function mqseries conn $reason	la raison qui qualifie le compcode
function mqseries conn $compCode	code de complétion
function mqseries conn $hConn	connection handle
function void mqseries conn string $qManagerName resource $hconn resource $compCode resource $reason	mqseries mqconn
function mqseries connx $qManagerName	nom du gestionnaire de queues
function mqseries connx $reason	la raison qui qualifie le compcode
function mqseries connx $compCode	code de complétion
function mqseries connx $hConn	connection handle
function mqseries connx $connOps	options qui contrôle les actions de la fonction voir aussi la structure mqcno
function void mqseries connx string $qManagerName array $connOptions resource $hconn resource $compCode resource $reason	mqseries mqconnx
function mqseries disc $hConn	connection handle
function mqseries disc $reason	la raison qui qualifie le compcode
function mqseries disc $compCode	code de complétion
function void mqseries disc resource $hconn resource $compCode resource $reason	mqseries mqdisc
function mqseries put $message	le message à mettre dans la queue
function mqseries put $compCode	code de complétion
function mqseries put $hConn	gestionnaire de connexion
function mqseries put $hObj	object handle
function mqseries put $md	ressource de message mqmd
function mqseries put $pmo	option dajout de message
function mqseries put $reason	la raison qui qualifie le compcode
function void mqseries put resource $hConn resource $hObj array $md array $pmo string $message resource $compCode resource $reason	mqseries mqput
function mqseries put1 $msgDesc	ressource de message mqmd
function mqseries put1 $compCode	code de complétion
function mqseries put1 $hConn	connection handle
function mqseries put1 $objDesc	object descriptor
function mqseries put1 $reason	la raison qui qualifie le compcode
function mqseries put1 $pmo	options dajout du message mqpmo
function void mqseries put1 resource $hconn resource $objDesc resource $msgDesc resource $pmo string $buffer resource $compCode resource $reason	mqseries mqput1
function mqseries strerror $reason	la raison qui qualifie le compcode
function string mqseries strerror	la chaîne de représentation de la raison du message derreur
function string mqseries strerror int $reason	retourne le message d'erreur correspondant au code de r&eacute;sultat
function msg queue exists $key	la clé de la file
function bool msg queue exists	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msg queue exists int $key	v&eacute;rifie si une file de messages existe
function msg remove queue $queue	une ressource représentant la file des messages
function bool msg remove queue	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msg remove queue resource $queue	d&eacute;truit une file de messages
function msg set queue $queue	une ressource représentant la file des messages
function msg set queue $data	vous devez spécifier les valeurs désirées en définissant la valeur des clés que vous voulez récupérer dans le tableau data
function bool msg set queue	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msg set queue resource $queue array $data	modifie des informations dans la file de messages
function msg stat queue $queue	une ressource représentant la file des messages
function array msg stat queue	la valeur retournée par la fonction est un tableau dont les index et valeurs sont les suivants : structure de réponse de msg_stat_queue() msg_perm
function array msg stat queue resource $queue	retourne des informations sur la file de messages
function msql affected rows $result	la ressource de résultat qui vient dêtre évaluée
function int msql affected rows	retourne le nombre de lignes affectées ou false si une erreur survient
function int msql affected rows resource $result	retourne le nombre de lignes affect&eacute;es
function msql close $link_identifier	la connexion msql
function bool msql close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msql close resource $link_identifier	ferme une connexion msql
function msql create db $link_identifier	la connexion msql
function msql create db $database_name	le nom de la base de données msql
function bool msql create db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msql create db string $database_name resource $link_identifier	cr&eacute;e une base de donn&eacute;es msql
function msql data seek $result	la ressource de résultat qui vient dêtre évaluée
function msql data seek $row_number	le numéro de ligne désiré
function bool msql data seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msql data seek resource $result int $row_number	d&eacute;place le pointeur interne msql
function msql drop db $link_identifier	la connexion msql
function msql drop db $database_name	le nom de la base de données
function bool msql drop db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msql drop db string $database_name resource $link_identifier	efface une base de donn&eacute;es msql
function string msql error	le dernier message derreur ou une chaîne vide sil ny en a aucune
function string msql error	retourne le message d'erreur msql
function msql fetch field $result	la ressource de résultat qui vient dêtre évaluée
function msql fetch field $field_offset	la position du champ
function object msql fetch field	retourne un objet contenant les informations du champs
function object msql fetch field resource $result int $field_offset	lit la valeur d'un champ msql
function msql fetch object $result	la ressource de résultat qui vient dêtre évaluée
function object msql fetch object	retourne un objet dont les propriétés correspondent à la ligne récupérée ou false siil ny a plus de lignes
function object msql fetch object resource $result	lit une ligne sous la forme d'un objet
function msql fetch row $result	la ressource de résultat qui vient dêtre évaluée
function array msql fetch row	retourne un tableau qui correspond à la ligne lue ou false sil ny a plus de lignes de disponible
function array msql fetch row resource $result	retourne une ligne sous la forme d'un tableau
function msql field len $result	la ressource de résultat qui vient dêtre évaluée
function msql field len $field_offset	la position numérique du champ
function int msql field len	retourne la taille du champ spécifié ou false en cas derreur
function int msql field len resource $result int $field_offset	lit la taille du champ msql
function msql field table $result	la ressource de résultat qui vient dêtre évaluée
function msql field table $field_offset	la position numérique du champ
function int msql field table	le nom de la table en cas de succès ou false si une erreur survient
function int msql field table resource $result int $field_offset	lit le nom de la table du champ msql
function msql field type $result	la ressource de résultat qui vient dêtre évaluée
function msql field type $field_offset	la position numérique du champ
function string msql field type	le type du champ
function string msql field type resource $result int $field_offset	lit le type de champ msql
function msql free result $result	la ressource de résultat qui vient dêtre évaluée
function bool msql free result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msql free result resource $result	lib&egrave;re le r&eacute;sultat de la m&eacute;moire
function msql list dbs $link_identifier	la connexion msql
function resource msql list dbs	retourne un jeu de résultats qui peut être lu par nimporte quelle fonction capable de parcourir un tel résultat comme msql_fetch_array()
function resource msql list dbs resource $link_identifier	liste les bases de donn&eacute;es msql sur un serveur
function msql list fields $link_identifier	la connexion msql
function msql list fields $tablename	le nom de la table
function msql list fields $database	le nom de la base de données
function resource msql list fields	retourne un jeu de résultats pouvant être parcouru par nimporte quelle fonction capable comme msql_fetch_array()
function resource msql list fields string $database string $tablename resource $link_identifier	liste les champs d'une table
function msql num rows $result	la ressource de résultat qui vient dêtre évaluée
function int msql num rows	retourne le nombre de lignes dans le jeu de résultats
function int msql num rows resource $query_identifier	retourne le nombre de lignes dans un r&eacute;sultat
function msql query $link_identifier	la connexion msql
function msql query $query	la requête sql
function resource msql query	retourne un identifiant positif de connexion msql en cas de succès ou false si une erreur survient
function resource msql query string $query resource $link_identifier	envoie une requ&ecirc;te msql
function msql result $result	la ressource de résultat qui vient dêtre évaluée
function msql result $row	loffset de la ligne
function msql result $field	peut être loffset du champ ou le nom du champ le nom de la table suivi du nom du champ tablename
function string msql result	retourne le contenu de la cellule se trouvant à la ligne et à la position spécifiées dans le jeu de résultats msql
function string msql result resource $result int $row mixed $field	retourne les donn&eacute;es de r&eacute;sultat
function msql select db $link_identifier	la connexion msql
function msql select db $database_name	le nom de la base de données
function bool msql select db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool msql select db string $database_name resource $link_identifier	s&eacute;lectionne une base de donn&eacute;es msql
function mssql bind $is_null	si le paramètre vaut null ou non
function mssql bind $var	la variable php que vous voulez lier au paramètre mssql
function mssql bind $maxlen	utilisé avec les valeurs de type char et varchar
function mssql bind $is_output	si la valeur est un paramètre output ou non
function mssql bind $param_name	le nom du paramètre sous la forme dune chaîne de caractères
function mssql bind $stmt	une ressource de requête obtenue avec la fonction mssql_init()
function mssql bind $type	une constante parmi : sqltext sqlvarchar sqlchar sqlint1 sqlint2 sqlint4 sqlbit sqlflt4 sqlflt8 sqlfltn
function bool mssql bind	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mssql bind resource $stmt string $param_name mixed $var int $type bool $is_output bool $is_null int $maxlen	ajoute un param&egrave;tre &agrave; une proc&eacute;dure stock&eacute;e mssql locale ou distante
function mssql close $link_identifier	un identifiant de lien ms sql retourné par la fonction mssql_connect()
function bool mssql close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mssql close resource $link_identifier	ferme une connexion ms sql server
function mssql connect $username	le nom dutilisateur
function mssql connect $servername	le serveur ms sql
function mssql connect $new_link	si un deuxième appel est fait à mssql_connect() avec les mêmes arguments un nouveau lien ne sera pas retourné mais le lien déjà ouvert sera utilisé
function mssql connect $password	le mot de passe
function resource mssql connect	retourne un identifiant de lien ms sql en cas de succès ou false si une erreur survient
function resource mssql connect string $servername string $username string $password bool $new_link	ouvre une connexion &agrave; un serveur ms sql server
function mssql data seek $result_identifier	la ressource de résultat à évaluer
function mssql data seek $row_number	le numéro de la ligne désiré pour le nouveau pointeur de résultat
function bool mssql data seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mssql data seek resource $result_identifier int $row_number	d&eacute;place le pointeur interne de ligne
function mssql execute $stmt	le gestionnaire de requête obtenu avec la fonction mssql_init()
function mssql execute $skip_results	omettre les résultats ou non
function mixed mssql execute resource $stmt bool $skip_results	ex&eacute;cute une proc&eacute;dure stock&eacute;e sur un serveur ms sql
function mssql fetch array $result	la ressource de résultat à évaluer
function mssql fetch array $result_type	un tableau de types qui doivent être récupérés
function array mssql fetch array	retourne un tableau qui correspond à la ligne récupérée ou false sil ny a plus de ligne
function array mssql fetch array resource $result int $result_type	lit une ligne de r&eacute;sultat ms sql dans un tableau
function mssql fetch assoc $result_id	la ressource de résultat à lire
function array mssql fetch assoc	retourne un tableau associatif qui correspond à la ligne récupérée ou false sil ny a plus de ligne
function array mssql fetch assoc resource $result_id	retourne un tableau associatif pour la ligne courant de r&eacute;sultat ms sql server
function mssql fetch field $result	la ressource de résultats à évaluer
function mssql fetch field $field_offset	la position numérique du champ
function object mssql fetch field	retourne un objet contenant les informations du champ
function object mssql fetch field resource $result int $field_offset	lit les informations sur le champ
function mssql fetch object $result	la ressource de résultats à évaluer
function object mssql fetch object	retourne un objet dont les propriétés contiennent les valeurs de la ligne courante dans le résultat result ou false sil ny a plus de ligne
function object mssql fetch object resource $result	retourne une ligne de r&eacute;sultat ms sql server sous la forme d'un objet
function mssql fetch row $result	la ressource de résultats à évaluer
function array mssql fetch row	retourne un tableau qui contient les valeurs de la ligne courante du résultat result ou bien false sil ny a plus de ligne à lire
function array mssql fetch row resource $result	lit une ligne de r&eacute;sultat ms sql dans un tableau num&eacute;rique
function mssql field length $result	la ressource de résultats à évaluer
function mssql field length $offset	la position du champ en commençant à 0
function int mssql field length	la longueur du champ spécifié en cas de succès ou false si une erreur survient
function int mssql field length resource $result int $offset	lit la longueur d'un champ ms sql server
function mssql field name $result	la ressource de résultats à évaluer
function mssql field name $offset	la position du champ en commençant à 0
function string mssql field name	le nom du champ spécifié en cas de succès ou false si une erreur survient
function string mssql field name resource $result int $offset	lit le nom d'un champ ms sql server
function mssql field type $result	la ressource du résultats à évaluer
function mssql field type $offset	la position du champ en commençant à 0
function string mssql field type	le type du champ spécifié en cas de succès ou false si une erreur survient
function string mssql field type resource $result int $offset	lit le nom d'un champ ms sql server
function mssql free statement $stmt	la ressource de la requête obtenue avec la fonction mssql_init()
function bool mssql free statement	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mssql free statement resource $stmt	lib&egrave;re une commande ms sql server de la m&eacute;moire
function string mssql get last message	retourne le dernier message derreur du serveur ou une chaîne vide si aucune message derreur na été retourné par mssql
function string mssql get last message	retourne le dernier message d'erreur du serveur
function mssql guid string $binary	un guid binaire de 16 octets
function mssql guid string $short_format	true sil faut utiliser le format court
function string mssql guid string	retourne la chaîne convertie en cas de succès
function string mssql guid string string $binary bool $short_format	convertit le guid binaire de 16 octets en une cha&icirc;ne de caract&egrave;res
function mssql init $sp_name	le nom dune procédure stocké comme ownew
function mssql init $link_identifier	un identifiant de lien ms sql retourné par la fonction mssql_connect()
function resource mssql init	retourne un identifiant de ressource de requête à utiliser lors des appels aux fonctions mssql_bind() et mssql_execute() ou false si une erreur survient
function resource mssql init string $sp_name resource $link_identifier	initialise une proc&eacute;dure stock&eacute;e ms sql server locale ou distante
function void mssql min error severity int $severity	fixe le niveau de s&eacute;v&eacute;rit&eacute; des erreurs ms sql server
function void mssql min message severity int $severity	fixe le niveau de s&eacute;v&eacute;rit&eacute; des messages d'erreur ms sql server
function mssql next result $result_id	une ressource de résultats à évaluer
function bool mssql next result	retourne true si un jeu de résultats additionnel est disponible ou false sinon
function bool mssql next result resource $result_id	d&eacute;place le pointeur interne ms sql server au r&eacute;sultat suivant
function mssql num rows $result	la ressource de résultats à évaluer
function int mssql num rows	retourne le nombre de lignes sous la forme dun entier
function int mssql num rows resource $result	retourne le nombre de lignes dans un r&eacute;sultat ms sql
function mssql pconnect $username	le nom dutilisateur
function mssql pconnect $servername	le serveur ms sql
function mssql pconnect $new_link	si un deuxième appel est fait à mssql_pconnect() avec les mêmes arguments un nouveau lien ne sera pas retourné mais le lien déjà ouvert sera utilisé
function mssql pconnect $password	le mot de passe
function resource mssql pconnect	retourne un identifiant de lien positif ms sql en cas de succès ou false si une erreur survient
function resource mssql pconnect string $servername string $username string $password bool $new_link	ouvre une connexion persistante &agrave; un serveur ms sql
function mssql select db $database_name	le nom de la base de données
function mssql select db $link_identifier	un identifiant de lien ms sql retourné par la fonction mssql_connect() ou mssql_pconnect()
function bool mssql select db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mssql select db string $database_name resource $link_identifier	s&eacute;lectionne la base de donn&eacute;es ms sql
function mt srand $seed	une valeur dinitialisation aléatoire
function void mt srand int $seed	initialise une meilleure valeur al&eacute;atoire
function mysql client encoding $link_identifier	la connexion mysql
function string mysql client encoding	retourne le nom du jeu de caractères par défaut pour la connexion courante
function string mysql client encoding resource $link_identifier	retourne le nom du jeu de caract&egrave;res utilis&eacute; par le client mysql
function mysql close $link_identifier	la connexion mysql
function bool mysql close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mysql close resource $link_identifier	ferme la connexion mysql
function mysql create db $database_name	le nom de la base de données à être créée
function mysql create db $link_identifier	la connexion mysql
function bool mysql create db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mysql create db string $database_name resource $link_identifier	cr&eacute;e une base de donn&eacute;es mysql
function mysql data seek $result	la ressource de résultat qui vient dêtre évaluée
function mysql data seek $row_number	la position de la ligne désirée pour le nouveau pointeur de résultats
function bool mysql data seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mysql data seek resource $result int $row_number	d&eacute;place le pointeur interne de r&eacute;sultat mysql
function mysql db query $database	le nom de la base de données qui sera sélectionnée
function mysql db query $link_identifier	la connexion mysql
function mysql db query $query	la requête mysql
function resource mysql db query	retourne une ressource de résultat positive mysql à partir de la requête ou false en cas derreur
function resource mysql db query string $database string $query resource $link_identifier	s&eacute;lectionne une base de donn&eacute;es et y ex&eacute;cute une requ&ecirc;te
function mysql drop db $database_name	le nom de la base de données à effacer
function mysql drop db $link_identifier	la connexion mysql
function bool mysql drop db	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mysql drop db string $database_name resource $link_identifier	efface une base de donn&eacute;es mysql
function mysql errno $link_identifier	la connexion mysql
function int mysql errno	retourne le numéro de lerreur depuis la dernière fonction mysql ou 0 zéro si aucune erreur ne survient
function int mysql errno resource $link_identifier	retourne le num&eacute;ro d'erreur de la derni&egrave;re commande mysql
function mysql error $link_identifier	la connexion mysql
function string mysql error	retourne le texte de lerreur de la dernière fonction mysql ou chaîne vide si aucune erreur survient
function string mysql error resource $link_identifier	retourne le texte associ&eacute; avec l'erreur g&eacute;n&eacute;r&eacute;e lors de la derni&egrave;re requ&ecirc;te
function mysql escape string $unescaped_string	la chaîne qui doit être protégée
function string mysql escape string	retourne la chaîne protégée
function string mysql escape string string $unescaped_string	prot&egrave;ge les caract&egrave;res sp&eacute;ciaux sql
function mysql fetch array $result	la ressource de résultat qui vient dêtre évaluée
function mysql fetch array $result_type	le type de tableau à récupérer
function array mysql fetch array	retourne un tableau de chaînes qui correspond à la ligne récupérée ou false sil ny a plus de lignes
function array mysql fetch array resource $result int $result_type	retourne une ligne de r&eacute;sultat mysql sous la forme d'un tableau associatif d'un tableau index&eacute; ou les deux
function mysql fetch assoc $result	la ressource de résultat qui vient dêtre évaluée
function array mysql fetch assoc	retourne un tableau associatif de chaînes qui contient la ligne lue dans le résultat result ou bien false sil ne reste plus de lignes à lire
function array mysql fetch assoc resource $result	lit une ligne de r&eacute;sultat mysql dans un tableau associatif
function mysql fetch field $result	la ressource de résultat qui vient dêtre évaluée
function mysql fetch field $field_offset	la position numérique du champ
function object mysql fetch field	retourne un objet contenant les informations sur les champs
function object mysql fetch field resource $result int $field_offset	retourne les donn&eacute;es enregistr&eacute;es dans une colonne mysql sous forme d'objet
function mysql fetch lengths $result	la ressource de résultat qui vient dêtre évaluée
function array mysql fetch lengths	un array de taille en cas de succès ou false si une erreur survient
function array mysql fetch lengths resource $result	retourne la taille de chaque colonne d'une ligne de r&eacute;sultat mysql
function mysql field flags $result	la ressource de résultat qui vient dêtre évaluée
function mysql field flags $field_offset	la position numérique du champ
function string mysql field flags	retourne les sémaphores sous la forme dune chaîne associés avec le résultat ou false si une erreur survient
function string mysql field flags resource $result int $field_offset	retourne des d&eacute;tails sur une colonne mysql
function mysql field len $result	la ressource de résultat qui vient dêtre évaluée
function mysql field len $field_offset	la position numérique du champ
function int mysql field len	la taille de lindex du champ spécifié en cas de succès ou false si une erreur survient
function int mysql field len resource $result int $field_offset	retourne la taille d'un champ de r&eacute;sultat mysql
function mysql field name $result	la ressource de résultat qui vient dêtre évaluée
function mysql field name $field_offset	la position numérique du champ
function string mysql field name	le nom du champ de lindex spécifié en cas de succès ou false si une erreur survient
function string mysql field name resource $result int $field_offset	retourne le nom d'une colonne dans un r&eacute;sultat mysql
function mysql field seek $result	la ressource de résultat qui vient dêtre évaluée
function mysql field seek $field_offset	la position numérique du champ
function bool mysql field seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mysql field seek resource $result int $field_offset	d&eacute;place le pointeur de r&eacute;sultat vers une position donn&eacute;e
function mysql field table $result	la ressource de résultat qui vient dêtre évaluée
function mysql field table $field_offset	la position numérique du champ
function string mysql field table	le nom de la table en cas de succès
function string mysql field table resource $result int $field_offset	retourne le nom de la table mysql o&ugrave; se trouve une colonne
function mysql field type $result	la ressource de résultat qui vient dêtre évaluée
function mysql field type $field_offset	la position numérique du champ
function string mysql field type	le type du champ retourné peut être : int real string blob ou dautres comme détaillé dans la documentation mysql
function string mysql field type resource $result int $field_offset	retourne le type d'une colonne mysql sp&eacute;cifique
function mysql free result $result	la ressource de résultat qui vient dêtre évaluée
function bool mysql free result	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mysql free result resource $result	lib&egrave;re le r&eacute;sultat de la m&eacute;moire
function string mysql get client info	la version du client mysql
function string mysql get client info	lit les informations sur le client mysql
function mysql get proto info $link_identifier	la connexion mysql
function int mysql get proto info	retourne le protocole mysql en cas de succès ou false si une erreur survient
function int mysql get proto info resource $link_identifier	lit les informations sur le protocole mysql
function mysql get server info $link_identifier	la connexion mysql
function string mysql get server info	retourne la version du serveur mysql en cas de succès ou false si une erreur survient
function string mysql get server info resource $link_identifier	lit les informations sur le serveur mysql
function mysql insert id $link_identifier	la connexion mysql
function int mysql insert id	lid généré pour une colonne auto_increment par la dernière requête en cas de succès 0 si la dernière requête na pas généré de valeur auto_increment ou false si aucune connexion mysql na été établie
function int mysql insert id resource $link_identifier	retourne l'identifiant g&eacute;n&eacute;r&eacute; par la derni&egrave;re requ&ecirc;te
function mysql list dbs $link_identifier	la connexion mysql
function resource mysql list dbs	retourne une ressource de pointeurs de résultats en cas de succès ou false si une erreur survient
function resource mysql list dbs resource $link_identifier	liste les bases de donn&eacute;es disponibles sur le serveur mysql
function mysql list tables $link_identifier	la connexion mysql
function mysql list tables $database	le nom de la base de données
function resource mysql list tables	une ressource de pointeurs de résultats en cas de succès ou false si une erreur survient
function resource mysql list tables string $database resource $link_identifier	liste les tables d'une base de donn&eacute;es mysql
function mysql num fields $result	la ressource de résultat qui vient dêtre évaluée
function int mysql num fields	retourne le nombre de champs dun jeu de résultat en cas de succès ou false si une erreur survient
function int mysql num fields resource $result	retourne le nombre de champs d'un r&eacute;sultat mysql
function mysql num rows $result	la ressource de résultat qui vient dêtre évaluée
function int mysql num rows	le nombre de lignes dans un jeu de résultats en cas de succès ou false si une erreur survient
function int mysql num rows resource $result	retourne le nombre de lignes d'un r&eacute;sultat mysql
function mysql pconnect $client_flags	le paramètre client_flags peut être une compilation des constantes suivantes : 128 active le gestionnaire load data local mysql_client_ssl mysql_client_compress mysql_client_ignore_space ou mysql_client_interactive
function mysql pconnect $username	le nom de lutilisateur
function mysql pconnect $server	le serveur mysql
function mysql pconnect $password	le mot de passe
function resource mysql pconnect	retourne un identifiant de lien persistant mysql en cas de succès ou false si une erreur survient
function resource mysql pconnect string $server string $username string $password int $client_flags	ouvre une connexion persistante &agrave; un serveur mysql
function mysql ping $link_identifier	la connexion mysql
function bool mysql ping	retourne true si la connexion au serveur mysql fonctionne false sinon
function bool mysql ping resource $link_identifier	v&eacute;rifie la connexion au serveur mysql et s'y reconnecte au besoin
function mysql query $link_identifier	la connexion mysql
function mysql query $query	une requête sql la chaîne de requête ne doit pas se terminer par un point-virgule
function mixed mysql query	pour les requêtes du type select show describe explain et les autres requêtes retournant un jeu de résultats mysql_query() retournera une ressource en cas de succès ou false en cas derreur
function mixed mysql query string $query resource $link_identifier	envoie une requ&ecirc;te &agrave; un serveur mysql
function mysql real escape string $link_identifier	la connexion mysql
function mysql real escape string $unescaped_string	la chaîne à échapper
function string mysql real escape string	retourne la chaîne échappée ou false si une erreur survient
function string mysql real escape string string $unescaped_string resource $link_identifier	prot&egrave;ge une commande sql de la pr&eacute;sence de caract&egrave;res sp&eacute;ciaux
function mysql result $result	la ressource de résultat qui vient dêtre évaluée
function mysql result $field	le nom ou la position du champ à récupérer
function mysql result $row	le numéro de la ligne à récupérer
function string mysql result	le contenu dun champ depuis un jeu de résultats mysql en cas de succès ou false si une erreur survient
function string mysql result resource $result int $row mixed $field	retourne un champ d'un r&eacute;sultat mysql
function mysql unbuffered query $link_identifier	la connexion mysql
function mysql unbuffered query $query	la requête sql à exécuter les données de la requête doivent être proprement échappées
function resource mysql unbuffered query	pour les requêtes select show describe ou explain mysql_unbuffered_query() retourne une ressource en cas de succès ou false si une erreur survient
function resource mysql unbuffered query string $query resource $link_identifier	ex&eacute;cute une requ&ecirc;te sql sans mobiliser les r&eacute;sultats mysql
function array mysqli get links stats	la fonction mysqli_get_links_stats() retourne un tableau associatif contenant trois éléments dont les clés sont les suivantes : total un entier indiquant le nombre total de liens ouverts quelques soient leurs statuts
function array mysqli get links stats	retourne des informations sur les liens ouverts et mis en cache
function mysqlnd memcache get config $connection	un gestionnaire de connexion au serveur mysql utilisant une des extensions mysql api de php pouvant être pdo_mysql mysqli ou ext / mysql
function array mysqlnd memcache get config	un tableau contenant les informations de configuration mysqlnd_memcache en cas de succès ou false sinon
function array mysqlnd memcache get config mixed $connection	retourne les informations concernant la configuration du plugin
function mysqlnd memcache set $mysql_connection	un gestionnaire de serveur mysql en utilisant une des extensions api mysql de php qui sont pdo_mysql mysqli ou ext / mysql
function mysqlnd memcache set $callback	une fonction de rappel qui sera utilisée à chaque fois que la requête est envoyée à mysql
function mysqlnd memcache set $memcache_connection	une instance memcached avec une connexion au plugin mysql memcache daemon
function mysqlnd memcache set $pattern	une expression rationnelle au format pcre pour identifier les requêtes potentielles memcache
function bool mysqlnd memcache set	true si lassociation ou la dé-association a été un succès ou false si une erreur survient
function bool mysqlnd memcache set mixed $mysql_connection Memcached $memcache_connection string $pattern callback $callback	associe une connexion mysql avec une connexion memcache
function mysqlnd ms dump servers $connection	un gestionnaire de connexion mysql obtenu avec une des fonctions de connexion des extensions mysqli mysql ou pdo_mysql
function array mysqlnd ms dump servers	false si une erreur survient
function array mysqlnd ms dump servers mixed $connection	retourne une liste des serveurs actuellement configur&eacute;s
function mysqlnd ms get last gtid $connection	un gestionnaire de connexion pecl / mysqlnd_ms vers un serveur mysql de type pdo_mysql mysqli ou ext / mysql
function string mysqlnd ms get last gtid	retourne un identifiant de transaction globale gtid en cas de succès false sinon
function string mysqlnd ms get last gtid mixed $connection	retourne le dernier identifiant de transaction globale
function mysqlnd ms get last used connection $connection	un gestionnaire de connexion mysql obtenu depuis nimporte quelle fonction de connexion des extensions mysqli mysql ou pdo_mysql
function array mysqlnd ms get last used connection	false en cas derreur
function array mysqlnd ms get last used connection mixed $connection	retourne un tableau qui r&eacute;crit la derni&egrave;re connexion utilis&eacute;e
function array mysqlnd ms get stats	retourne null si la directive de configuration php mysqlnd_ms
function array mysqlnd ms get stats	retourne des statistiques quant &agrave; la distribution et la connexion de requ&ecirc;tes
function mysqlnd ms match wild $table_name	le nom de la table à vérifier si elle correspond au joker
function mysqlnd ms match wild $wildcard	le masque contenant le joker à vérifier par rapport au nom de la table
function bool mysqlnd ms match wild	retourne true si table_name correspond au joker wildcard false sinon
function bool mysqlnd ms match wild string $table_name string $wildcard	cherche si un nom de table correspond ou non &agrave; un joker d'un masque
function mysqlnd ms query is select $query	la requête à tester
function int mysqlnd ms query is select	une valeur de retour mysqlnd_ms_query_use_master indique que la requête doit être envoyée au serveur mysql maître de réplication
function int mysqlnd ms query is select string $query	v&eacute;rifie quel serveur est s&eacute;lectionn&eacute; pour l'envoi de la requ&ecirc;te
function mysqlnd ms set qos $service_level_option	une option pour paramétrer le niveau de service demdandé
function mysqlnd ms set qos $connection	un gestionnaire de connexion pecl / mysqlnd_ms vers un serveur mysql de type pdo_mysql mysqli ou ext / mysql pour lequel un niveau de service doit être défini
function mysqlnd ms set qos $service_level	le niveau de service demandé : mysqlnd_ms_qos_consistency_eventual mysqlnd_ms_qos_consistency_session ou mysqlnd_ms_qos_consistency_strong
function mysqlnd ms set qos $option_value	la valeur optionnelle du niveau de service
function bool mysqlnd ms set qos	retourne true si le niveau de service des connexions a pû être atteint false sinon
function bool mysqlnd ms set qos mixed $connection int $service_level int $service_level_option mixed $option_value	d&eacute;finit la qualit&eacute; de service d&eacute;sir&eacute;e pour le cluster
function mysqlnd ms set user pick server $function	la fonction à appeler
function bool mysqlnd ms set user pick server	hôte sur lequel la requête sera exécutée
function bool mysqlnd ms set user pick server string $function	d&eacute;finit une fonction de rappel utilisateur pour la s&eacute;paration lecture / &eacute;criture
function mysqlnd ms xa begin $timeout	délai maximal dattente en secondes
function mysqlnd ms xa begin $connection	un gestion de connexion mysql obtenu depuis une des fonctions de connexion des extensions mysqli mysql ou pdo_mysql
function mysqlnd ms xa begin $gtrid	identifiant de transaction globale gtrid
function int mysqlnd ms xa begin	retourne true sil ny a aucune transaction globale ou locale et une nouvelle transaction globale peut être démarrée
function int mysqlnd ms xa begin mixed $connection string $gtrid int $timeout	d&eacute;marre une transaction distribu&eacute;e / xa sur les serveurs mysql particpants
function mysqlnd ms xa gc $connection	un gestionnaire de connexion mysql obtenu depuis une des fonctions de connexion des extensions mysqli mysql ou pdo_mysql
function mysqlnd ms xa gc $gtrid	lidentifiant de transaction globale gtrid
function mysqlnd ms xa gc $ignore_max_retries	si lon doit ignorer ou non la configuration max_retries du plugin
function int mysqlnd ms xa gc	retourne true si la transaction globale a été annulée avec succès false sinon
function int mysqlnd ms xa gc mixed $connection string $gtrid boolean $ignore_max_retries	collecte les donn&eacute;es incorrectes issues des transactions xa non termin&eacute;es en raison d'erreurs s&eacute;b&egrave;res
function bool mysqlnd qc clear cache	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool mysqlnd qc clear cache	force l'affichage complet du contenu du cache
function array mysqlnd qc get normalized query trace log	un tableau de log de requêtes
function array mysqlnd qc get normalized query trace log	retourne une trace dans les logs d'une requ&ecirc;te normalis&eacute;e pour chaque requ&ecirc;te inspect&eacute;e par le cache de requ&ecirc;tes
function array mysqlnd qc get query trace log	un tableau de traces des requêtes
function array mysqlnd qc get query trace log	retourne une trace pour chaque requ&ecirc;te inspect&eacute;e par la mise en cache de requ&ecirc;tes
function mysqlnd qc set cache condition $condition_type	type de condition
function mysqlnd qc set cache condition $condition	paramètre pour la condition définie avec condition_type
function mysqlnd qc set cache condition $condition_option	option pour la condition le type et la structure dépendent de condition_type
function bool mysqlnd qc set cache condition	retourne true en cas de succès false sinon
function bool mysqlnd qc set cache condition int $condition_type mixed $condition mixed $condition_option	d&eacute;finit les conditions pour une mise en cache automatique
function mixed mysqlnd qc set is select	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed mysqlnd qc set is select string $callback	installe une fonction de rappel qui d&eacute;cide si une requ&ecirc;te doit &ecirc;tre mise en cache
function mysqlnd uh convert to mysqlnd $Gestionnaire de connexion MySQL	un gestionnaire de connexion mysql de type mysql mysqli ou pdo_mysql
function resource mysqlnd uh convert to mysqlnd	un gestionnaire de connexion mysqlnd
function resource mysqlnd uh convert to mysqlnd mysqli $mysql_connection	convertit un gestionnaire de connexion mysql en un gestionnaire de connexion mysqlnd
function mysqlnd uh set connection proxy $connection_proxy	un objet proxy de type mysqlnduhconnection
function mysqlnd uh set connection proxy $mysqli_connection	objet de type mysqli
function bool mysqlnd uh set connection proxy	retourne true en cas de succès false sinon
function bool mysqlnd uh set connection proxy MysqlndUhConnection $connection_proxy mysqli $mysqli_connection	installe un proxy pour les connexions mysqlnd
function natsort $array	le tableau dentrée
function bool natsort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool natsort array $array	trie un tableau avec l'algorithme &agrave; ordre naturel
function ncurses color content $g	une variable passée par référence pour recevoir le composant vert de la couleur demandée
function ncurses color content $r	une variable passée par référence pour recevoir le composant rouge de la couleur demandée
function ncurses color content $b	une variable passée par référence pour recevoir le composant bleu de la couleur demandée
function ncurses color content $color	le numéero de la couleur dont il faut lire les composants
function int ncurses color content	retourne -1 si la fonction a réussi et 0 si ncurses ou la gestion des couleurs du terminal nont pas été initialisées
function int ncurses color content int $color int $r int $g int $b	lit la valeur rgb d'une couleur
function ncurses color set $pair	la paire de couleur qui sera utilisée pour définir les couleurs de fond décran et daffichage
function int ncurses color set	retourne -1 en cas de succès et 0 en cas déchec
function int ncurses color set int $pair	modifie la couleur de fond et de devant
function bool ncurses has colors	retourne true si le terminal supporte les couleurs false sinon
function bool ncurses has colors	v&eacute;rifie que le terminal supporte les couleurs
function void ncurses init	initialise ncurses
function ncurses pair content $pair	le numéro de la paire de couleur quil faut lire
function ncurses pair content $f	une référence dans laquelle les informations de la couleur daffichage sera placée
function ncurses pair content $b	une référence dans laquelle les informations de la couleur de fond sera placée
function int ncurses pair content	retourne -1 si la fonction a réussi et 0 si ncurses ou le support des couleurs du terminal nont pas été initialisées
function int ncurses pair content int $pair int $f int $b	retourne les couleurs de fond et d'affichage d'une paire
function int ncurses start color	retourne 0 en cas de succès et -1 si la table de couleurs na pas pu être allouée ou ncurses na pas été initialisée
function int ncurses start color	active les couleurs
function void newt bell	envoie un beep au terminal
function string newt checkbox get value	retourne le caractère indiquant la valeur de la boîte à cocher
function string newt checkbox get value resource $checkbox	r&eacute;cup&egrave;re la valeur de la ressource de bo&icirc;te &agrave; cocher
function void newt checkbox set flags resource $checkbox int $flags int $sense	configure une ressource de bo&icirc;te &agrave; cocher
function array newt checkbox tree find item	retourne la ressource de lélément de larbre de boîtes à cocher ou null sil na pas été trouvé
function array newt checkbox tree find item resource $checkboxtree mixed $data	cherche un &eacute;l&eacute;ment dans l'arbre des bo&icirc;tes &agrave; cocher
function newt draw root text $left	numéro de colonne note : si left est négatif la position est mesurée à partir du côté opposé de lécran
function newt draw root text $text	texte à afficher
function newt draw root text $top	numéro de ligne note : si top est négatif la position est mesurée à partir du côté opposé de lécran
function void newt draw root text int $left int $top string $text	affiche la cha&icirc;ne de caract&egrave;res &agrave; la position indiqu&eacute;e
function newt form add component $form	forme à laquelle le composant sera ajouté
function newt form add component $component	composant à ajouter à la forme
function void newt form add component resource $form resource $component	ajoute un seul composant &agrave; la forme
function newt form destroy $form	composant forme qui sera détruit
function void newt form destroy resource $form	d&eacute;truit une forme
function newt form run $form	composant forme
function newt form run $exit_struct	tableau utilisé pour retourner des informations après lexécution des composants de la forme
function void newt form run resource $form array $exit_struct	ex&eacute;cute une forme
function void newt pop help line	replace la ligne d'aide courante avec une provenant de la pile
function void newt pop window	supprime la fen&ecirc;tre de premier plan de l'affichage
function newt push help line $text	nouveau message daide note : si non spécifié la ligne daide est supprimée
function void newt push help line string $text	sauvegarde la ligne d'aide courante sur la pile et affiche la nouvelle ligne
function void newt refresh	met &agrave; jour les portions modifi&eacute;es de l'&eacute;cran
function void newt resume	r&eacute;cup&egrave;re l'interface de newt apr&egrave;s l'appel de newt_suspend
function newt run form $form	composant forme
function resource newt run form	le composant qui a arrêté la forme
function resource newt run form resource $form	ex&eacute;cute une forme
function void newt suspend	indique &agrave; newt de retourner &agrave; l'&eacute;tat initial du terminal
function ngettext $msgid2	lid pluriel du message
function ngettext $msgid1	lid singulier du message
function ngettext $n	le nombre i
function string ngettext	retourne un message au pluriel identifié par msgid1 et msgid2 pour le compteur n
function string ngettext string $msgid1 string $msgid2 int $n	version plurielle de gettext
function nl langinfo $item	item peut être la valeur entière dun élément ou le nom de sa constante
function string nl langinfo	retourne lélément sous la forme dune chaîne de caractères ou false si le paramètre item nest pas valide
function string nl langinfo int $item	rassemble des informations sur la langue et la configuration locale
function nsapi virtual $uri	luri du script
function bool nsapi virtual	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool nsapi virtual string $uri	effectue une sous-requ&ecirc;te nsapi
function oauth get sbs $uri	luri à encoder
function oauth get sbs $request_parameters	tableau de paramètres de requêtes
function oauth get sbs $http_method	la méthode http
function string oauth get sbs	retourne une chaîne la signature base string
function string oauth get sbs string $http_method string $uri array $request_parameters	g&eacute;n&egrave;re une cha&icirc;ne de base de signature
function bool ob end clean	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ob end clean	d&eacute;truit les donn&eacute;es du tampon de sortie et &eacute;teint la temporisation de sortie
function bool ob end flush	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ob end flush	envoie les donn&eacute;es du tampon de sortie et &eacute;teint la temporisation de sortie
function void ob flush	envoie le tampon de sortie
function string ob get clean	retourne le contenu du tampon de sortie et termine la session de temporisation
function string ob get clean	lit le contenu courant du tampon de sortie puis l'efface
function string ob get flush	retourne le tampon de sortie ou false sil ny en a aucun dactif
function string ob get flush	vide le tampon le retourne en tant que cha&icirc;ne et stoppe la temporisation
function int ob get length	retourne la longueur du contenu du tampon de sortie en octets si la temporisation est activée et false sinon
function int ob get length	retourne la longueur du contenu du tampon de sortie
function ob get status $full_status	true pour retourner tous les tampons daffichage
function array ob get status bool $full_status	lit le statut du tampon de sortie
function string ob gzhandler string $buffer int $mode	fonction de rappel pour la compression automatique des tampons
function string ob iconv handler	voir la documentation sur la fonction ob_start() pour plus dinformations sur les valeurs retournées par cette fonction
function string ob iconv handler string $contents int $status	gestionnaire de sortie pour ma&icirc;triser le jeu de caract&egrave;res de sortie
function ob tidyhandler $mode	le mode du buffer
function ob tidyhandler $input	le buffer
function string ob tidyhandler	retourne le buffer modifié
function string ob tidyhandler string $input int $mode	fonction de rappel ob_start pour r&eacute;parer le buffer
function oci bind array by name $var_array	un tableau
function oci bind array by name $name	le marqueur oracle
function oci bind array by name $max_table_length	spécifie la longueur maximale des tableaux dentrées et de résultats
function oci bind array by name $max_item_length	définit la longueur maximale pour les éléments du tableau
function oci bind array by name $statement	un identifiant de requête oci valide
function oci bind array by name $type	devrait être utilisé pour définir le type des éléments pl / sql
function bool oci bind array by name	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci bind array by name resource $statement string $name array $var_array int $max_table_length int $max_item_length int $type	lie un tableau php &agrave; un param&egrave;tre de tableau oracle pl / sql
function oci cancel $statement	une requête oci
function bool oci cancel	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci cancel resource $statement	termine la lecture de curseurs oracle
function string oci client version	retourne le numéro de version sous la forme dune chaîne de caractères
function string oci client version	retourne la version de la biblioth&egrave;que cliente oracle
function oci close $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() oci_pconnect() ou oci_new_connect()
function bool oci close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci close resource $connection	ferme une connexion oracle
function oci commit $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() oci_pconnect() ou oci_new_connect()
function bool oci commit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci commit resource $connection	valide les transactions oracle en cours
function oci connect $connection_string	contient linstance oracle sur laquelle nous devons nous connecter
function oci connect $username	le nom dutilisateur oracle
function oci connect $password	le mot de passe de lutilisateur
function oci connect $session_mode	ce paramètre est disponible depuis php 5 pecl oci8 1
function oci connect $character_set	détermine le jeu de caractères utilisé par la bibliothèque cliente oracle
function resource oci connect	retourne un identifiant de connexion ou false si une erreur survient
function resource oci connect string $username string $password string $connection_string string $character_set int $session_mode	&eacute;tablit une connexion avec un serveur oracle
function oci error $resource	pour la plupart des erreurs le paramètre resource représente une ressource de connexion
function array oci error	si aucune erreur nest trouvée oci_error() retourne false
function array oci error resource $resource	retourne la derni&egrave;re erreur oracle
function oci execute $mode	un second paramètre optionnel peut prendre une des constantes suivantes : modes dexécution constante description oci_commit_on_success validation automatique sur la connexion lorsque la requête a été exécutée avec succès
function oci execute $statement	un identifiant de requête oci valide
function bool oci execute	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci execute resource $statement int $mode	ex&eacute;cute une commande sql oracle
function oci fetch assoc $statement	un identifiant de requête oci8 créé par la fonction oci_parse() et exécuté par la fonction oci_execute() ou un identifiant de requête ref cursor
function array oci fetch assoc	retourne un tableau associatif ou false sil ny a plus de ligne de diponible pour la requête statement
function array oci fetch assoc resource $statement	lit une ligne d'un r&eacute;sultat sous forme de tableau associatif
function oci fetch object $statement	un identifiant de requête oci8 créé par la fonction oci_parse() et exécuté par la fonction oci_execute() ou un identifiant de requête ref cursor
function object oci fetch object	retourne un objet
function object oci fetch object resource $statement	lit une ligne d'un r&eacute;sultat sous forme d'objet
function oci fetch row $statement	un identifiant de requête oci8 créé par la fonction oci_parse() et exécuté par la fonction oci_execute() ou un identifiant de requête ref cursor
function array oci fetch row	retourne un tableau indexé numériquement
function array oci fetch row resource $statement	lit la prochaine ligne d'une requ&ecirc;te sous forme de tableau num&eacute;rique
function oci fetch $statement	un identifiant de requête oci8 créé par la fonction oci_parse() et exécuté par la fonction oci_execute() ou un identifiant de requête ref cursor
function bool oci fetch	retourne true en cas de succès ou false sil ny a plus de lignes de disponible pour la requête statement
function bool oci fetch resource $statement	lit la prochaine ligne d'un r&eacute;sultat oracle dans un buffer interne
function oci field is null $field	peut être lindex du champ en base 1 ou son nom
function oci field is null $statement	un identifiant de requête oci valide
function bool oci field is null	retourne true si field vaut null false sinon
function bool oci field is null resource $statement mixed $field	test si un champ de la ligne r&eacute;cup&eacute;r&eacute;e vaut null
function oci field name $statement	un identifiant de requête oci valide
function oci field name $field	peut être un index de champ en commençant à 1 ou un nom de champ
function string oci field name	retourne le nom sous la forme dune chaîne de caractères ou false si une erreur survient
function string oci field name resource $statement mixed $field	retourne le nom d'un champ oracle
function oci field precision $statement	un identifiant de requête oci valide
function oci field precision $field	peut être un index de champ en commençant à 1 ou un nom de champ
function int oci field precision	retourne la précision sous la forme dun entier ou false si une erreur survient
function int oci field precision resource $statement mixed $field	lit la pr&eacute;cision d'un champ oracle
function oci field scale $field	peut être un index de champ en commençant à 1 ou le nom dun champ
function oci field scale $statement	un identifiant de requête oci valide
function int oci field scale	retourne léchelle sous la forme dun entier ou false si une erreur survient
function int oci field scale resource $statement mixed $field	lit l'&eacute;chelle d'une colonne oracle
function oci field type $field	peut être lindex du champ lindexation commence à 1 ou le nom
function oci field type $statement	un identifiant de requête oci valide
function mixed oci field type	retourne le type de données dun champ sous la forme dune chaîne de caractères ou false si une erreur survient
function mixed oci field type resource $statement mixed $field	retourne le type de donn&eacute;es d'un champ oracle
function bool oci free descriptor	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci free descriptor resource $descriptor	lib&egrave;re un descripteur
function oci free statement $statement	un identifiant de requête oci valide
function bool oci free statement	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci free statement resource $statement	lib&egrave;re toutes les ressources r&eacute;serv&eacute;es par un r&eacute;sultat oracle
function oci get implicit resultset $statement	un identifiant de requête oci8 valide créé par la fonction oci_parse() et exécutée par la fonction oci_execute()
function resource oci get implicit resultset	retourne un gestionnaire de requête pour la prochaine requête fils disponible sur statement
function resource oci get implicit resultset resource $statement	retourne le fils suivant d'une ressource de requ&ecirc;te depuis une ressource de requ&ecirc;te parent qui a un jeu de r&eacute;sultat implicite oracle database 12c
function oci internal debug $onoff	définissez ce paramètre à 0 pour désactiver laffichage ou à 1 pour lactiver
function void oci internal debug bool $onoff	active ou d&eacute;sactive l'affichage des donn&eacute;es de d&eacute;boguage oracle
function oci lob is equal $lob2	un identifiant lob
function oci lob is equal $lob1	un identifiant lob
function bool oci lob is equal	retourne true si ces objets sont égaux false sinon
function bool oci lob is equal OCI-Lob $lob1 OCI-Lob $lob2	compare deux lob / file oracle
function oci new collection $tdo	doit être un type nommé valide en majuscule
function oci new collection $schema	doit pointer sur le schéma de base de données où le type a été créé
function oci new collection $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() ou la fonction oci_pconnect()
function OCI-Collection oci new collection	retourne un nouvel objet ocicollection ou false si une erreur survient
function OCI-Collection oci new collection resource $connection string $tdo string $schema	initialise une nouvelle collection oracle
function oci new connect $password	le mot de passe pour lutilisateur
function oci new connect $connection_string	contient linstance oracle sur laquelle nous devons nous connecter
function oci new connect $username	le nom dutilisateur oracle
function oci new connect $character_set	détermine le jeu de caractères utilisé par la bibliothèque cliente oracle
function oci new connect $session_mode	ce paramètre est disponible depuis php 5 pecl oci8 1
function resource oci new connect	retourne un identifiant de connexion ou false si une erreur survient
function resource oci new connect string $username string $password string $connection_string string $character_set int $session_mode	connexion au serveur oracle en utilisant une seule connexion
function oci new descriptor $type	les valeurs acceptées pour type sont : oci_d_file oci_d_lob et oci_d_rowid
function oci new descriptor $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() ou la fonction oci_pconnect()
function OCI-Lob oci new descriptor	retourne une nouvelle ressource lob ou file en cas de succès false si une erreur survient
function OCI-Lob oci new descriptor resource $connection int $type	initialise un nouveau pointeur vide de lob / file oracle
function oci num fields $statement	un identifiant de requête oci valide
function int oci num fields	retourne le nombre de colonnes sous la forme dun entier ou false si une erreur survient
function int oci num fields resource $statement	retourne le nombre de colonnes dans un r&eacute;sultat oracle
function oci parse $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() oci_pconnect() ou oci_new_connect()
function oci parse $sql_text	la requête sql ou pl / sql
function resource oci parse	retourne un gestionnaire de requête en cas de succès ou false si une erreur survient
function resource oci parse resource $connection string $sql_text	pr&eacute;pare une requ&ecirc;te sql avec oracle
function oci pconnect $connection_string	contient linstance oracle sur laquelle nous devons nous connecter
function oci pconnect $username	le nom dutilisateur oracle
function oci pconnect $password	le mot de passe de lutilisateur
function oci pconnect $session_mode	ce paramètre est disponible depuis php 5 pecl oci8 1
function oci pconnect $character_set	détermine le jeu de caractères utilisé par la bibliothèque cliente oracle
function resource oci pconnect	retourne un identifiant de connexion ou false si une erreur survient
function resource oci pconnect string $username string $password string $connection_string string $character_set int $session_mode	ouvre une connexion persistante &agrave; un serveur oracle
function oci result $field	peut être soit le numéro de la colonne en commençant à 1 soit le nom de la colonne
function mixed oci result	retourne tout les types sauf les types abstraits rowids lobs et files
function mixed oci result resource $statement mixed $field	retourne la valeur d'une colonne dans un r&eacute;sultat oracle
function oci set action $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() oci_pconnect() ou la fonction oci_new_connect()
function oci set action $action_name	chaîne choisie par lutilisateur jusquà 32 octets de long
function bool oci set action	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci set action resource $connection string $action_name	d&eacute;finit le nom de l'action
function oci set client identifier $client_identifier	chaîne choisie par lutilisateur jusquà 64 octets de long
function oci set client identifier $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() oci_pconnect() ou la fonction oci_new_connect()
function bool oci set client identifier	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci set client identifier resource $connection string $client_identifier	d&eacute;finit l'identifiant du client
function oci set edition $edition	nom de lédition oracle précédemment créé avec la commande sql create edition
function bool oci set edition	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci set edition string $edition	d&eacute;finit l'&eacute;dition de la base de donn&eacute;es
function oci set module name $connection	un identifiant de connexion oracle retourné par la fonction oci_connect() oci_pconnect() ou la fonction oci_new_connect()
function oci set module name $module_name	chaîne choisie par lutilisateur jusquà 48 octets de long
function bool oci set module name	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci set module name resource $connection string $module_name	d&eacute;finit le nom du module
function oci set prefetch $statement	un identifiant de requête oci8 créé par la fonction oci_parse() et exécuté par la fonction oci_execute() ou un identifiant de requête ref cursor
function oci set prefetch $rows	le nombre de lignes à précharger > =0
function bool oci set prefetch	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool oci set prefetch resource $statement int $rows	indique le nombre de lignes qui doivent &ecirc;tre lues &agrave; l'avance par oracle
function octdec $octal_string	la chaîne de caractères octale à convertir
function number octdec	la représentation décimale de octal_string
function number octdec string $octal_string	conversion d'octal en d&eacute;cimal
function odbc autocommit $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc autocommit $OnOff	si onoff vaut true lautovalidation est activée
function mixed odbc autocommit	sans le paramètre onoff odbc_autocommit() retourne le statut dautovalidation de la connexion connection_id
function mixed odbc autocommit resource $connection_id bool $OnOff	active le mode d'autovalidation
function odbc binmode $result_id	lidentifiant de résultat
function odbc binmode $mode	valeurs possibles pour le paramètre mode : odbc_binmode_passthru : retourner les données en binaire odbc_binmode_return : retourner sans conversion odbc_binmode_convert : convertir en caractère
function bool odbc binmode	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool odbc binmode resource $result_id int $mode	modifie la gestion des colonnes de donn&eacute;es binaires
function void odbc close all	ferme toutes les connexions odbc
function odbc close $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function void odbc close resource $connection_id	ferme une connexion odbc
function odbc columnprivileges $column_name	le paramètre column_name accepte des masques de recherche % pour remplacer zéro ou plus caractères et _ pour nen remplacer quun seul
function odbc columnprivileges $table_name	le nom de la table
function odbc columnprivileges $owner	le propriétaire
function odbc columnprivileges $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc columnprivileges $qualifier	le qualifieur
function resource odbc columnprivileges	retourne un identifiant de résultat odbc ou false si une erreur survient
function resource odbc columnprivileges resource $connection_id string $qualifier string $owner string $table_name string $column_name	liste les colonnes et leurs droits associ&eacute;s
function odbc columns $table_name	le nom de la table
function odbc columns $column_name	le nom de la colonne
function odbc columns $schema	le propriétaire
function odbc columns $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc columns $qualifier	le qualifieur
function resource odbc columns	retourne un identifiant de résultat odbc ou false si une erreur survient
function resource odbc columns resource $connection_id string $qualifier string $schema string $table_name string $column_name	liste les colonnes d'une table
function odbc commit $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function bool odbc commit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool odbc commit resource $connection_id	valide une transaction odbc
function odbc cursor $result_id	la ressource de résultat
function string odbc cursor	retourne le nom du curseur sous forme dune chaîne de caractères
function string odbc cursor resource $result_id	lit le nom du pointeur de r&eacute;sultat courant
function odbc exec $query_string	la requête sql
function odbc exec $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc exec $flags	ce paramètre nest actuellement pas utilisé
function resource odbc exec	retourne une ressource de résultat odbc en cas de succès false si une erreur survient
function resource odbc exec resource $connection_id string $query_string int $flags	pr&eacute;pare et ex&eacute;cute une requ&ecirc;te sql
function odbc fetch into $result_id	la ressource de résultat
function odbc fetch into $rownumber	le numéro de la ligne
function odbc fetch into $result_array	peut être de nimporte quel type étant donné quil sera converti en tableau
function int odbc fetch into	retourne le nombre de colonnes du résultat ou false si une erreur survient
function int odbc fetch into resource $result_id array $result_array int $rownumber	lit une ligne de r&eacute;sultat et la place dans un tableau
function odbc fetch object $rownumber	le numéro de ligne à récupérer en option
function odbc fetch object $result	la ressource de résultat depuis la fonction odbc_exec()
function object odbc fetch object	retourne un objet qui correspond à la ligne récupérée ou false sil ny a plus de ligne de disponible
function object odbc fetch object resource $result int $rownumber	lit une ligne de r&eacute;sultat dans un objet
function odbc field scale $result_id	lidentifiant de résultat
function odbc field scale $field_number	le numéro du champ
function int odbc field scale	retourne léchelle du champ sous la forme dun entier ou false si une erreur survient
function int odbc field scale resource $result_id int $field_number	lit l'&eacute;chelle d'un champ
function odbc gettypeinfo $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc gettypeinfo $data_type	peut être utilisé pour restreindre les informations à un seul type de données
function resource odbc gettypeinfo	retourne lidentifiant de résultat odbc ou false si une erreur survient
function resource odbc gettypeinfo resource $connection_id int $data_type	liste les types de donn&eacute;es support&eacute;s par une source
function odbc longreadlen $result_id	lidentifiant de résultat
function odbc longreadlen $length	le nombre doctets retourné à php
function bool odbc longreadlen	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool odbc longreadlen resource $result_id int $length	gestion des colonnes de type long
function odbc next result $result_id	lidentifiant de résultat
function bool odbc next result	retourne true sil ny a plus de jeux de résultats false sinon
function bool odbc next result resource $result_id	v&eacute;rifie si plusieurs r&eacute;sultats sont disponibles
function odbc num fields $result_id	lidentifiant de résultat retourné par la fonction odbc_exec()
function int odbc num fields	retourne le nombre de colonnes ou -1 si une erreur survient
function int odbc num fields resource $result_id	nombre de colonnes dans un r&eacute;sultat
function odbc num rows $result_id	lidentifiant de résultat retourné par la fonction odbc_exec()
function int odbc num rows	retourne le nombre de lignes dans le résultat odbc
function int odbc num rows resource $result_id	nombre de lignes dans un r&eacute;sultat
function resource odbc pconnect	retourne un identifiant de connexion odbc ou 0 false si une erreur survient
function resource odbc pconnect string $dsn string $user string $password int $cursor_type	ouvre une connexion persistante &agrave; une source de donn&eacute;es
function odbc primarykeys $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function resource odbc primarykeys	retourne un identifiant de résultat odbc ou false si une erreur survient
function resource odbc primarykeys resource $connection_id string $qualifier string $owner string $table	liste les colonnes utilis&eacute;es dans une cl&eacute; primaire
function odbc procedurecolumns $column	la colonne
function odbc procedurecolumns $owner	le propriétaire
function odbc procedurecolumns $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc procedurecolumns $proc	le procédure
function odbc procedurecolumns $qualifier	le qualifieur
function resource odbc procedurecolumns	retourne les paramètres dentrée et de sortie ainsi que les colonnes utilisées dans les procédures désignées par les paramètres
function resource odbc procedurecolumns resource $connection_id	liste les param&egrave;tres des proc&eacute;dures
function odbc result all $result_id	lidentifiant de résultat
function odbc result all $format	permet de modifier laspect global de la table
function int odbc result all	retourne le nombre de lignes du résultat ou false si une erreur survient
function int odbc result all resource $result_id string $format	affiche le r&eacute;sultat sous la forme d'une table html
function odbc result $field	le nom du champ à récupérer
function odbc result $result_id	une ressource odbc
function mixed odbc result	retourne le contenu du champ false si une erreur survient null pour les données null ou true pour des données binaires
function mixed odbc result resource $result_id mixed $field	lit un champ de r&eacute;sultat uodbc
function odbc rollback $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function bool odbc rollback	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool odbc rollback resource $connection_id	annule une transaction
function odbc setoption $param	la valeur pour loption donnée
function odbc setoption $function	fonction odbc à utiliser
function odbc setoption $option	loption à définir
function odbc setoption $id	un identifiant de connexion ou un identifiant de résultat pour lequel vous souhaitez modifier des options
function bool odbc setoption	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool odbc setoption resource $id int $function int $option int $param	modifie les param&egrave;tres odbc
function odbc statistics $unique	lattribut unique
function odbc statistics $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc statistics $table_name	le nom de la table
function odbc statistics $accuracy	lattribut accuracy
function odbc statistics $qualifier	le qualifieur
function odbc statistics $owner	le propriétaire
function resource odbc statistics	retourne un identifiant de résultat odbc ou false si une erreur survient
function resource odbc statistics resource $connection_id string $qualifier string $owner string $table_name int $unique int $accuracy	calcul des statistiques sur une table
function odbc tables $owner	le propriétaire
function odbc tables $types	si table_type nest pas une chaîne vide il doit contenir une liste de valeurs séparées par des virgules qui représentent les types recherchés
function odbc tables $connection_id	lidentifiant de connexion odbc voir la documentation de la fonction odbc_connect() pour plus de détails
function odbc tables $name	le nom
function odbc tables $qualifier	le qualifieur
function resource odbc tables	retourne un identifiant de résultat odbc contenant les informations ou false si une erreur survient
function resource odbc tables resource $connection_id string $qualifier string $owner string $name string $types	liste les tables d'une source
function opcache compile file $file	le chemin vers le fichier php à compiler et mettre en cache
function boolean opcache compile file	retourne true si file a été compilé avec succès ou false si une erreur survient
function boolean opcache compile file string $file	compiles et met en cache un script php sans l'ex&eacute;cuter
function opcache get status $get_scripts	inclut les informations spécifiques aux scripts
function array opcache get status	retourne un tableau dinformations optionnellement contenant un script spécifique dinformations de statut
function array opcache get status boolean $get_scripts	r&eacute;cup&egrave;re les informations de statut du cache
function opcache invalidate $force	si vaut true le script sera invalidé indépendamment du fait que linvalidation soit nécessaire ou non
function opcache invalidate $script	le chemin vers le script à invalider
function boolean opcache invalidate	retourne true si le cache opcode pour le script a été invalidé ou sil ny avait rien à invalider ou bien false si le cache opcode est désactivé
function boolean opcache invalidate string $script boolean $force	invalide un script mis en cache
function opcache is script cached $file	le chemin vers le script php à vérifier
function boolean opcache is script cached	retourne true si le script file est présent dans le cache dopcache false sinon
function boolean opcache is script cached string $file	indique si un script est dans le cache d'opcache
function opendir $path	le chemin du répertoire à ouvrir
function opendir $context	pour la description du paramètre context référez-vous à la section des flux du manuel
function resource opendir	retourne la ressource de dossier en cas de succès ou false en cas déchec
function resource opendir string $path resource $context	ouvre un dossier et r&eacute;cup&egrave;re un pointeur dessus
function openlog $facility	largument facility sert à indiquer quel programme enregistre ce message
function openlog $ident	la chaîne ident sera ajoutée à chaque message
function openlog $option	largument option indique les options de journalisation utilisées pour générer le message
function bool openlog	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openlog string $ident int $option int $facility	ouvre la connexion &agrave; l'historique syst&egrave;me
function openssl cipher iv length $method	la méthode cipher voir la fonction openssl_get_cipher_methods() pour une liste de valeurs potentielles
function int openssl cipher iv length	retourne la longueur cipher en cas de succès ou $false; si une erreur survient
function int openssl cipher iv length string $method	r&eacute;cup&egrave;re la longueur cipher iv
function openssl csr export to file $outfilename	chemin vers le fichier de sortie
function openssl csr export to file $notext	le paramètre optionnel notext affecte le niveau verbeux de laffichage ; sil vaut false des informations humainement lisibles seront ajoutées dans laffichage
function bool openssl csr export to file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl csr export to file resource $csr string $outfilename bool $notext	exporte une csr vers un fichier
function openssl csr new $dn	le nom distingué qui doit être utilisé dans le certificat
function openssl csr new $extraattribs	extraattribs est utilisé pour spécifier des options de configuration supplémentaires pour la csr
function openssl csr new $configargs	par défaut le fichier openssl
function openssl csr new $privkey	privkey doit être une clé privée qui a été générée par openssl_pkey_new() ou obtenue autrement par lune des fonctions de la famille openssl_pkey) la clé publique sera utilisée pour signer la csr
function mixed openssl csr new	retourne la csr
function mixed openssl csr new array $dn resource $privkey array $configargs array $extraattribs	g&eacute;n&egrave;re une csr
function openssl decrypt $method	la méthode de cipher
function openssl decrypt $data	les données
function openssl decrypt $iv	un vecteur dinitialisation non-nul
function openssl decrypt $options	le paramètre options peut prendre comme valeur openssl_raw_data ou openssl_zero_padding
function openssl decrypt $password	le password
function string openssl decrypt	la chaine décryptée en cas de succès ou false si une erreur survient
function string openssl decrypt string $data string $method string $password int $options string $iv	d&eacute;crypte les donn&eacute;es
function openssl encrypt $method	la méthode de cipher
function openssl encrypt $data	les données
function openssl encrypt $iv	un vecteur dinitialisation non-nul
function openssl encrypt $options	le paramètre options peut prendre la valeur openssl_raw_data ou la valeur openssl_zero_padding
function openssl encrypt $password	le password
function string openssl encrypt	retourne la chaine cryptée en cas de succès ou false si une erreur survient
function string openssl encrypt string $data string $method string $password int $options string $iv	crypte les donn&eacute;es
function string openssl error string	retourne un message derreur sous la forme dune chaîne de caractères ou false sil ny a plus de message à afficher
function string openssl error string	retourne le message d'erreur openssl
function array openssl get cert locations	retourne un tableau contenant les chemins vers les certificats disponibles
function array openssl get cert locations	r&eacute;cup&egrave;re les chemins vers les certificats disponibles
function openssl get cipher methods $aliases	passez true si vous voulez que les alias de cipher soient inclus dans le tableau retourné
function array openssl get cipher methods	un array des méthodes cipher disponibles
function array openssl get cipher methods bool $aliases	r&eacute;cup&egrave;re la liste des m&eacute;thodes cipher disponibles
function openssl get md methods $aliases	passez true si vous voulez que les alias de digest soient inclus dans le tableau retourné
function array openssl get md methods	un array des méthodes digest disponibles
function array openssl get md methods bool $aliases	r&eacute;cup&egrave;re la liste des m&eacute;thodes digest disponibles
function openssl pkcs12 export $out	en cas de succès cette variable contiendra le pkcs#12
function openssl pkcs12 export $x509	voir les paramètres clés / certificats pour une liste de valeurs valides
function openssl pkcs12 export $pass	mot de passe de chiffrement pour déverrouiller le fichier pkcs#12
function openssl pkcs12 export $priv_key	clé privée du fichier pkcs#12
function bool openssl pkcs12 export	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl pkcs12 export mixed $x509 string $out mixed $priv_key string $pass array $args	exporte un certificat compatible pkcs#12 dans une variable
function openssl pkcs12 read $certs	en cas de succès ce tableau contiendra les données du certificat
function openssl pkcs12 read $pass	mot de passe de chiffrement pour déverrouiller le fichier pkcs#12
function bool openssl pkcs12 read	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl pkcs12 read string $pkcs12 array $certs string $pass	lit un certificat pkcs#12 dans un tableau
function openssl pkcs7 verify $extracerts	si le paramètre extracerts est spécifié il doit représenter le nom dun fichier contenant un ensemble de certificats utilisés comme certificats de peu de confiance
function openssl pkcs7 verify $outfilename	si le paramètre outfilename est spécifié il doit être une chaîne contenant le nom dun fichier qui contient le certificat du signataire au format pem
function openssl pkcs7 verify $content	vous pouvez spécifier un nom de fichier avec le paramètre content qui peut être remplit avec les données vérifiées mais avec les informations de signature
function openssl pkcs7 verify $flags	flags sert à modifier la façon dont la signature est vérifiée
function openssl pkcs7 verify $cainfo	si le paramètre cainfo est spécifié il doit contenir les informations sur les tiers de certificats de confiance utilisé lors de la vérification
function openssl pkcs7 verify $filename	chemin vers le message
function mixed openssl pkcs7 verify	retourne true si la signature est vérifiée et false sinon le message a été modifié ou bien le certificat de signature est invalide ou -1 si une erreur survient
function mixed openssl pkcs7 verify string $filename int $flags string $outfilename array $cainfo string $extracerts string $content	v&eacute;rifie la signature d'un message s / mime
function openssl pkey export to file $passphrase	la clé peut éventuellement être protégée par un mot de passe
function openssl pkey export to file $outfilename	chemin du fichier de sortie
function openssl pkey export to file $configargs	configargs peut être utilisé pour calibrer le processus dexportation en spécifiant ou remplaçant les options du fichier de configuration dopenssl
function bool openssl pkey export to file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl pkey export to file mixed $key string $outfilename string $passphrase array $configargs	sauve une cl&eacute; au format ascii dans un fichier
function openssl pkey export $passphrase	la clé est éventuellement protégée par le mot de passe passphrase
function openssl pkey export $configargs	configargs peut être utilisé pour calibrer le processus dexportation en spécifiant ou remplaçant les options du fichier de configuration dopenssl
function bool openssl pkey export	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl pkey export mixed $key string $out string $passphrase array $configargs	stocke une repr&eacute;sentation exportable de la cl&eacute; dans une cha&icirc;ne de caract&egrave;res
function openssl pkey get details $key	ressource représentant la clé
function array openssl pkey get details	retourne un tableau avec les détails de la clé en cas de succès ou false si une erreur survient
function array openssl pkey get details resource $key	retourne un tableau contenant le d&eacute;tail d'une cl&eacute;
function openssl private encrypt $padding	le paramètre padding peut être openssl_pkcs1_padding ou openssl_no_padding
function bool openssl private encrypt	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl private encrypt string $data string $crypted mixed $key int $padding	chiffre des donn&eacute;es avec une cl&eacute; priv&eacute;e
function openssl public decrypt $padding	padding peut être openssl_pkcs1_padding ou openssl_no_padding
function openssl public decrypt $key	key doit être la clé publique qui a été utilisée pour chiffrer les données
function bool openssl public decrypt	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl public decrypt string $data string $decrypted mixed $key int $padding	d&eacute;chiffre des donn&eacute;es avec une cl&eacute; publique
function openssl random pseudo bytes $crypto_strong	si fourni détermine si lagorithme de cryptologie utilisé était cryptographiquement fort i
function openssl random pseudo bytes $length	la taille désirée pour la chaine doctets
function string openssl random pseudo bytes	retourne la chaine doctets générée en cas de succès ou false si une erreur survient
function string openssl random pseudo bytes int $length bool $crypto_strong	g&eacute;n&egrave;re une chaine pseudo-al&eacute;atoire d'octets
function int openssl seal	retourne la longueur des données scellées en cas de succès et false sinon
function int openssl seal string $data string $sealed_data array $env_keys array $pub_key_ids string $method	scelle des donn&eacute;es
function openssl spki export challenge $spkac	une clé publique signée valide
function string openssl spki export challenge	retourne le challenge associé sous la forme dune chaîne de caractères ou null en cas déchec
function string openssl spki export challenge string $spkac	exporte le challenge associ&eacute; avec la cl&eacute; publique sign&eacute;e
function openssl spki verify $spkac	une clé publique signée valide
function string openssl spki verify	retourne un booléen en cas de succès ou déchec
function string openssl spki verify string $spkac	v&eacute;rifie une cl&eacute; publique sign&eacute;e et effectue un challenge
function openssl verify $signature_alg	int - une des signatures dalgorithmes
function openssl verify $pub_key_id	resource - une clé retourné par la fonction openssl_get_publickey() string - une clé au format pem par exemple : -----begin public key----- miibcgk
function openssl verify $data	la chaîne de données utilisé pour générer la signature
function openssl verify $signature	une chaîne brûte binaire générée par la fonction openssl_sign() ou signification similaire
function int openssl verify	retourne 1 si la signature est correcte 0 si elle est incorrecte et -1 si une erreur survient
function int openssl verify string $data string $signature mixed $pub_key_id mixed $signature_alg	v&eacute;rifie une signature
function openssl x509 check private key $key	la clé privée
function openssl x509 check private key $cert	le certificat
function bool openssl x509 check private key	retourne true si key est la clé privée qui correspond à cert ou false sinon
function bool openssl x509 check private key mixed $cert mixed $key	v&eacute;rifie si une cl&eacute; priv&eacute;e correspond &agrave; un certificat
function openssl x509 checkpurpose $cainfo	cainfo doit être un tableau de dossiers / fichiers de ca de confiance comme décrit dans la vérification des certificats
function openssl x509 checkpurpose $x509cert	le certificat examiné
function openssl x509 checkpurpose $untrustedfile	si spécifié est le nom dun fichier au format pem contenant les certificats qui pourront aider lors de la vérification du certificat même si une confiance limitée doit leur être portée
function int openssl x509 checkpurpose	retourne true si le certificat peut être utilisé pour un but particulier false sil ne le peut pas ou -1 si une erreur survient
function int openssl x509 checkpurpose mixed $x509cert int $purpose array $cainfo string $untrustedfile	v&eacute;rifie l'usage d'un certificat
function openssl x509 export to file $x509	voir les paramètres clés / certificats pour une liste de valeurs valides
function openssl x509 export to file $notext	le paramètre optionnel notext affecte le niveau verbeux de laffichage ; sil vaut false des informations humainement lisibles seront ajoutées dans laffichage
function openssl x509 export to file $outfilename	chemin du fichier de sortie
function bool openssl x509 export to file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool openssl x509 export to file mixed $x509 string $outfilename bool $notext	exporte un certificat vers un fichier
function openssl x509 fingerprint $x509	voir les paramètres clés / certificats pour une liste de valeurs valides
function openssl x509 fingerprint $hash_algorithm	lalgorithme de hashage à utiliser i
function openssl x509 fingerprint $raw_output	lorsque vaut true affiche les données brutes binaires
function bool openssl x509 fingerprint	retourne un chaîne de caractères contenant lempreinte calculé du certificat sous la forme dhexits minuscule si le paramètre raw_output vaut false
function bool openssl x509 fingerprint mixed $x509 string $hash_algorithm bool $raw_output	calcule l'empreinte ou le digest d'un certificat x
function void openssl x509 free resource $x509cert	lib&egrave;re les ressources prises par un certificat
function openssl x509 parse $shortnames	shortnames contrôle lindexation des données dans le tableau : si shortnames vaut true valeur par défaut alors les champs seront indexés avec la forme courte des noms sinon les noms longs seront utilisés
function array openssl x509 parse	la structure des données retournées est délibérément non documentée car elle est sujette à des changements sans préavis
function array openssl x509 parse mixed $x509cert bool $shortnames	analyse un certificat x509
function resource openssl x509 read	retourne une ressource en cas de succès ou false si une erreur survient
function resource openssl x509 read mixed $x509certdata	analyse un certificat x
function ord $string	un caractère
function int ord	retourne la valeur ascii sous la forme dun entier
function int ord string $string	retourne le code ascii d'un caract&egrave;re
function pack $format	la chaîne de caractères format consiste en des codes de format suivis par un argument répéteur optionnel
function string pack	retourne une chaîne de caractères binaire contenant les données
function string pack string $format mixed $args	compacte des donn&eacute;es dans une cha&icirc;ne binaire
function parse ini file $scanner_mode	peut être ini_scanner_normal défaut ou ini_scanner_raw
function parse ini file $filename	le nom du fichier de configuration à analyser
function parse ini file $process_sections	en passant le deuxième paramètre optionnel à process_sections vous obtiendrez un tableau multidimensionnel avec les noms des sections
function array parse ini file	la configuration est retournée sous la forme dun tableau associatif en cas de succès et false si une erreur survient
function array parse ini file string $filename bool $process_sections int $scanner_mode	analyse un fichier de configuration
function parse str $str	la chaîne dentrée
function parse str $arr	si le second paramètre arr est fourni les variables y seront stockées sous forme dindex de tableau
function void parse str string $str array $arr	analyse une requ&ecirc;te http
function passthru $return_var	si largument return_var est présent le statut retourné par la commande unix sera placé dans cette variable
function passthru $command	la commande à exécuter
function void passthru string $command int $return_var	ex&eacute;cute un programme externe et affiche le r&eacute;sultat brut
function password get info $hash	un hachage créé par la fonction password_hash()
function array password get info	retourne un tableau associatif contenant trois éléments : algo qui doit correspondre à une constante de lalgorithme de mot de passe algoname qui correspond au nom humainement lisible de lalgorithme options qui contient les options fournies lors de lappel de la fonction password_hash()
function array password get info string $hash	retourne des informations &agrave; propos du hachage fourni
function password needs rehash $hash	un hachage créé par la fonction password_hash()
function password needs rehash $algo	une constantes de lalgorithme de mot de passe représentant lalgorithme à utiliser lors du hachage du mot de passe
function password needs rehash $options	un tableau associatif contenant les options
function boolean password needs rehash	retourne true si le hachage doit être re-généré pour correspondre aux paramètres algo et options fournis ou false sinon
function boolean password needs rehash string $hash integer $algo array $options	v&eacute;rifie que le hachage fourni est conforme &agrave; l'algorithme et aux options sp&eacute;cifi&eacute;es
function password verify $password	le mot de passe utilisateur
function password verify $hash	un hachage créé par la fonction password_hash()
function boolean password verify	retourne true si le mot de passe et le hachage correspondent ou false sinon
function boolean password verify string $password string $hash	v&eacute;rifie qu'un mot de passe correspond &agrave; un hachage
function pclose $handle	le pointeur de fichier doit être valide et avoir été ouvert correctement par popen()
function int pclose	retourne le statut final du processus exécuté ou -1 en cas dechec
function int pclose resource $handle	ferme un processus de pointeur de fichier
function pcntl exec $path	path doit être le chemin vers un binaire exécutable ou un script avec un chemin valide pointant vers un exécutable à la première ligne par exemple #! / usr / local / bin / perl
function pcntl exec $envs	envs est un tableau de chaînes de caractères qui sont passées au programme comme variables denvironnement
function pcntl exec $args	args est un tableau darguments sous la forme de chaînes de caractères passées au programme
function bool pcntl exec	retourne false si une erreur survient et ne retourne rien en cas de succès
function bool pcntl exec string $path array $args array $envs	ex&eacute;cute le programme indiqu&eacute; dans l'espace courant de processus
function int pcntl fork	en cas de succès le pid identifiant de processus du fils est retourné dans le processus père et 0 est retourné dans le processus fils
function int pcntl fork	duplique le process courant
function pcntl getpriority $process_identifier	une constante parmi prio_pgrp prio_user ou prio_process
function pcntl getpriority $pid	si non spécifié le pid du processus courant est utilisé
function int pcntl getpriority	pcntl_getpriority() retourne la priorité du processus ou false en cas derreur
function int pcntl getpriority int $pid int $process_identifier	retourne la priorit&eacute; d'un processus
function pcntl setpriority $process_identifier	une constante parmi prio_pgrp prio_user ou prio_process
function pcntl setpriority $priority	priority est généralement une valeur allant de -20 à 20
function pcntl setpriority $pid	si non spécifié le pid du processus courant est utilisé
function bool pcntl setpriority	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pcntl setpriority int $priority int $pid int $process_identifier	change la priorit&eacute; d'un processus
function pcntl signal $signo	le signal à gérer
function pcntl signal $restart_syscalls	le paramètre optionnel restart_syscalls spécifie si lappel système de redémarrage restarting doit être utilisé lorsque ce signal arrive
function pcntl signal $handler	le gestionnaire de signaux
function pcntl signal $signo	le numéro du signal
function bool pcntl signal	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pcntl signal int $signo callable|int $handler bool $restart_syscalls	installe un gestionnaire de signaux
function pcntl sigwaitinfo $siginfo	le paramètre siginfo reçoit un tableau contenant les informations sur le signal
function pcntl sigwaitinfo $set	un tableau de signaux à attendre
function int pcntl sigwaitinfo	en cas de succès pcntl_sigwaitinfo() retourne le numéro du signal
function int pcntl sigwaitinfo array $set array $siginfo	attend un signal
function pcntl wait $options	si wait3 est disponible sur votre système cest le cas de la plupart des systèmes bsd-) vous pouvez ajouter le paramètre optionnel options
function pcntl wait $status	pcntl_wait() va stocker les informations de statut dans le paramètre status qui peut être lu avec les fonctions suivantes : pcntl_wifexited() pcntl_wifstopped() pcntl_wifsignaled() pcntl_wexitstatus() pcntl_wtermsig() et pcntl_wstopsig()
function int pcntl wait	pcntl_wait() retourne lidentifiant de processus qui sest terminé -1 en cas derreur ou zéro si wnohang a été fourni comme option disponible sur les systèmes wait3 et quaucun processus fils nétait disponible
function int pcntl wait int $status int $options	attend ou retourne le statut d'un processus fils
function pcntl wexitstatus $status	le paramètre status est le paramètre status passé à un appel de pcntl_waitpid() ayant réussi
function int pcntl wexitstatus	retourne le code de retour sous la forme dun entier
function int pcntl wexitstatus int $status	retourne le code d'un processus fils termin&eacute;
function pcntl wifexited $status	le paramètre status est le paramètre status passé à un appel de pcntl_waitpid() ayant réussi
function bool pcntl wifexited	retourne true si le processus fils a retourné un code qui représente une fin normale false sinon
function bool pcntl wifexited int $status	v&eacute;rifie si le code de retour repr&eacute;sente une fin normale
function pcntl wifsignaled $status	le paramètre status est le paramètre status passé à un appel de pcntl_waitpid() ayant réussi
function bool pcntl wifsignaled	retourne true si le processus fils sort car un signal na pu être reçu false sinon
function bool pcntl wifsignaled int $status	retourne true si le code statut repr&eacute;sente une fin due &agrave; un signal
function pcntl wstopsig $status	le paramètre status est le paramètre status passé à un appel de pcntl_waitpid() ayant réussi
function int pcntl wstopsig	retourne le numéro du signal
function int pcntl wstopsig int $status	retourne le signal qui a caus&eacute; l'arr&ecirc;t du processus fils
function bool PDF add launchlink resource $pdfdoc float $llx float $lly float $urx float $ury string $filename	[obsol&egrave;te] ajoute une annotation de lancement dans la page pdf courante
function bool PDF add locallink resource $pdfdoc float $lowerleftx float $lowerlefty float $upperrightx float $upperrighty int $page string $dest	[obsol&egrave;te] ajoute une annotation de lien dans la page pdf courante
function int PDF add table cell resource $pdfdoc int $table int $column int $row string $text string $optlist	ajoute une cellule &agrave; un nouveau tableau ou un tableau existant
function bool PDF begin glyph resource $pdfdoc string $glyphname float $wx float $llx float $lly float $urx float $ury	commence une d&eacute;finition de glyphe pour les polices de type 3
function int PDF begin item resource $pdfdoc string $tag string $optlist	ouvre un &eacute;l&eacute;ment de structure ou un autre &eacute;l&eacute;ment de contenu
function int PDF begin pattern resource $pdfdoc float $width float $height float $xstep float $ystep int $painttype	initialise un nouveau pattern pdf
function int PDF begin template ext resource $pdfdoc float $width float $height string $optlist	commence une d&eacute;finition de gabarit pdf
function int PDF begin template resource $pdfdoc float $width float $height	initialise un nouveau gabarit pdf obsol&egrave;te
function bool PDF clip resource $p	modifie le chemin de clipping pdf
function bool PDF close image resource $p int $image	ferme une image dans un document pdf
function bool PDF close pdi page resource $p int $page	ferme la page pdf
function bool PDF close pdi resource $p int $doc	ferme le fichier pdf d'entr&eacute;e obsol&egrave;te
function bool PDF close resource $p	[obsol&egrave;te] ferme le fichier pdf
function bool PDF closepath fill stroke resource $p	termine le chemin dessine les bords et remplit la forme
function bool PDF closepath stroke resource $p	termine le chemin et dessine les bords
function bool PDF continue text resource $p string $text	affiche du texte &agrave; la prochaine ligne pdf
function int PDF create action resource $pdfdoc string $type string $optlist	cr&eacute;e une action pour des objets ou des &eacute;v&eacute;nements
function bool PDF create fieldgroup resource $pdfdoc string $name string $optlist	cr&eacute;e un groupe de champs dans un formulaire
function int PDF create gstate resource $pdfdoc string $optlist	cr&eacute;e un objet graphique
function bool PDF create pvf resource $pdfdoc string $filename string $data string $optlist	cr&eacute;e un fichier pdflib virtuel
function int PDF create textflow resource $pdfdoc string $text string $optlist	cr&eacute;e un objet de flux de texte
function bool PDF curveto resource $p float $x1 float $y1 float $x2 float $y2 float $x3 float $y3	dessine une courbe de bezier
function int PDF define layer resource $pdfdoc string $name string $optlist	cr&eacute;e une d&eacute;finition d'interface
function bool PDF delete textflow resource $pdfdoc int $textflow	efface un objet de flux de texte
function bool PDF delete resource $pdfdoc	efface un objet pdf
function bool PDF end document resource $pdfdoc string $optlist	ferme un fichier pdf
function bool PDF end font resource $pdfdoc	termine une d&eacute;finition de police de type 3
function bool PDF end item resource $pdfdoc int $id	ferme la structure d'un &eacute;l&eacute;ment ou un autre &eacute;l&eacute;ment de contenu
function bool PDF end layer resource $pdfdoc	d&eacute;sactive toutes les interfaces actives
function bool PDF end pattern resource $p	termine le pattern pdf
function bool PDF end template resource $p	termine le gabarit pdf
function bool PDF endpath resource $p	termine le chemin courant
function int PDF fill imageblock resource $pdfdoc int $page string $blockname int $image string $optlist	remplit un bloc d'image avec des donn&eacute;es variables
function int PDF fill pdfblock resource $pdfdoc int $page string $blockname int $contents string $optlist	remplit un bloc de contenu avec des donn&eacute;es variables
function int PDF fill textblock resource $pdfdoc int $page string $blockname string $text string $optlist	remplit un bloc de texte avec des donn&eacute;es variables
function int PDF findfont resource $p string $fontname string $encoding int $embed	[obsol&egrave;te] pr&eacute;pare une police pour utilisation ult&eacute;rieure
function bool PDF fit image resource $pdfdoc int $image float $x float $y string $optlist	place une image ou un gabarit pdf
function string PDF fit table resource $pdfdoc int $table float $llx float $lly float $urx float $ury string $optlist	place un tableau sur la page
function bool PDF fit textline resource $pdfdoc string $text float $x float $y string $optlist	place un simple ligne de texte
function string PDF get buffer resource $p	lit le tampon contenant le fichier pdf g&eacute;n&eacute;r&eacute;
function string PDF get errmsg resource $pdfdoc	r&eacute;cup&egrave;re le texte d'une erreur
function int PDF get majorversion	[obsol&egrave;te] retourne le num&eacute;ro de version majeur de pdflib
function int PDF get minorversion	[obsol&egrave;te] retourne le num&eacute;ro de version mineure de pdflib
function string PDF get parameter resource $p string $key float $modifier	lit certains param&egrave;tres
function string PDF get pdi parameter resource $p string $key int $doc int $page int $reserved	lit des param&egrave;tres textuels dans le document pdi obsol&egrave;te
function float PDF get pdi value resource $p string $key int $doc int $page int $reserved	lit des param&egrave;tres num&eacute;riques dans le document pdf d'entr&eacute;e obsol&egrave;te
function float PDF get value resource $p string $key float $modifier	lit certains param&egrave;tres num&eacute;riques
function float PDF info font resource $pdfdoc int $font string $keyword string $optlist	r&eacute;cup&egrave;re des informations d&eacute;taill&eacute;es sur une police charg&eacute;e
function float PDF info table resource $pdfdoc int $table string $keyword	r&eacute;cup&egrave;re les informations d'un tableau
function float PDF info textline resource $pdfdoc string $text string $keyword string $optlist	effectue le formatage d'une ligne de texte et r&eacute;cup&egrave;re la matrice
function bool PDF initgraphics resource $p	remet &agrave; z&eacute;ro l'environnement graphique pdf
function bool PDF lineto resource $p float $x float $y	dessine une ligne pdf
function int PDF load 3ddata resource $pdfdoc string $filename string $optlist	charge un mod&egrave;le 3d
function int PDF load font resource $pdfdoc string $fontname string $encoding string $optlist	cherche et pr&eacute;pare une police
function int PDF makespotcolor resource $p string $spotname	place un point de couleur pdf
function bool PDF moveto resource $p float $x float $y	place le point courant pdf
function resource PDF new	cr&eacute;e un nouvel objet pdf
function int PDF open ccitt resource $pdfdoc string $filename int $width int $height int $BitReverse int $k int $Blackls1	[obsol&egrave;te] ouvre une image contenant des donn&eacute;es brutes ccitt
function int PDF open image file resource $p string $imagetype string $filename string $stringparam int $intparam	[obsol&egrave;te] lit une image depuis un fichier
function int PDF open memory image resource $p resource $image	[non support&eacute;] ouvre une image cr&eacute;&eacute;e en m&eacute;moire par php
function int PDF open pdi document resource $p string $filename string $optlist	pr&eacute;pare un document pdi
function int PDF open pdi page resource $p int $doc int $pagenumber string $optlist	pr&eacute;pare une page
function int PDF open pdi resource $pdfdoc string $filename string $optlist int $len	ouvre un fichier pdf obsol&egrave;te
function string PDF pcos get string resource $p int $doc string $path	r&eacute;cup&egrave;re la valeur du chemin pcos
function bool PDF place image resource $pdfdoc int $image float $x float $y float $scale	[obsol&egrave;te] place une image dans la page
function int PDF process pdi resource $pdfdoc int $doc int $page string $optlist	traite un document pdf import&eacute;
function bool PDF rect resource $p float $x float $y float $width float $height	dessine un rectangle
function bool PDF restore resource $p	r&eacute;tablit l'ancien environnement graphique pdf
function bool PDF resume page resource $pdfdoc string $optlist	r&eacute;ouvre une page
function bool PDF rotate resource $p float $phi	configure la rotation
function bool PDF save resource $p	sauve l'environnement graphique courant
function bool PDF scale resource $p float $sx float $sy	configure l'&eacute;chelle du document
function bool PDF set border color resource $p float $red float $green float $blue	[obsol&egrave;te] configure la couleur des bords autour des liens et annotations
function bool PDF set border dash resource $pdfdoc float $black float $white	[obsol&egrave;te] configure le style des lignes autour des liens des annotations
function bool PDF set border style resource $pdfdoc string $style float $width	[obsol&egrave;te] choisit le style de bord autour des liens et annotations
function bool PDF set gstate resource $pdfdoc int $gstate	active un objet graphique
function bool PDF set info resource $p string $key string $value	remplit un champ de l'en-t&ecirc;te de document pdf
function bool PDF set layer dependency resource $pdfdoc string $type string $optlist	d&eacute;finit les liens entre les interfaces
function bool PDF set parameter resource $p string $key string $value	modifie certains param&egrave;tres
function bool PDF setcolor resource $p string $fstype string $colorspace float $c1 float $c2 float $c3 float $c4	configure la couleur de dessin et de remplissage
function bool PDF setdashpattern resource $pdfdoc string $optlist	d&eacute;finit un mod&egrave;le de masque
function bool PDF setfont resource $pdfdoc int $font float $fontsize	configure la police courante
function bool PDF setgray fill resource $p float $g	[obsol&egrave;te] configure la couleur de remplissage &agrave; un niveau de gris
function bool PDF setgray stroke resource $p float $g	[obsol&egrave;te] configure la couleur de dessin &agrave; un niveau de gris
function bool PDF setgray resource $p float $g	[obsol&egrave;te] configure la couleur de dessin et de remplissage &agrave; un niveau de gris
function bool PDF setlinecap resource $p int $linecap	configure le param&egrave;tre de linecap
function bool PDF setlinejoin resource $p int $value	configure le param&egrave;tre de linejoin
function bool PDF setlinewidth resource $p float $width	configure la largeur de ligne
function bool PDF setmatrix resource $p float $a float $b float $c float $d float $e float $f	configure la matrice de transformation
function bool PDF setmiterlimit resource $pdfdoc float $miter	configure la miter limit
function bool PDF setrgbcolor fill resource $p float $red float $green float $blue	[obsol&egrave;te] choisit la couleur utilis&eacute;e pour le remplissage
function bool PDF setrgbcolor stroke resource $p float $red float $green float $blue	[obsol&egrave;te] choisit la couleur utilis&eacute;e pour le dessin
function bool PDF show xy resource $p string $text float $x float $y	affiche un texte &agrave; une position donn&eacute;e
function bool PDF skew resource $p float $alpha float $beta	incline le syst&egrave;me de coordonn&eacute;es
function float PDF stringwidth resource $p string $text int $font float $fontsize	retourne la largeur d'un texte avec la police courante
function bool PDF suspend page resource $pdfdoc string $optlist	suspend une page
function bool PDF translate resource $p float $tx float $ty	effectue une translation de l'origine du syst&egrave;me de coordonn&eacute;es
function string PDF utf32 to utf16 resource $pdfdoc string $utf32string string $ordering	convertie une cha&icirc;ne utf-32 en utf-16
function string PDF utf8 to utf16 resource $pdfdoc string $utf8string string $ordering	convertit une cha&icirc;ne utf-8 en utf-16
function resource pfsockopen string $hostname int $port int $errno string $errstr float $timeout	ouvre un socket de connexion internet ou unix persistante
function pg cancel query $connection	ressource de connexion de base de données postgresql
function bool pg cancel query	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg cancel query resource $connection	annule une requ&ecirc;te asynchrone
function pg client encoding $connection	la ressource de connexion de la base de données postgresql
function string pg client encoding	lencodage du client ou false en cas déchec
function string pg client encoding resource $connection	lit l'encodage du client
function pg close $connection	la ressource de connexion de la base de données postgresql
function bool pg close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg close resource $connection	termine une connexion postgresql
function pg connect poll $connection	ressource de connexion à la base de données postgresql
function int pg connect poll	retourne la constante pgsql_polling_failed pgsql_polling_reading pgsql_polling_writing pgsql_polling_ok ou la constante pgsql_polling_active
function int pg connect poll resource $connection	test le statut d'une tentative de connexion asynchrone postgresql en cours
function pg connect $connection_string	la chaîne connection_string peut être vide pour utiliser tous les paramètres par défaut ou elle peut contenir un ou plusieurs paramètres de configuration séparés par des espaces
function pg connect $connect_type	si pgsql_connect_force_new est passé en argument alors une nouvelle connexion sera créée même si la chaîne connection_string est identique à celle de la connexion existante
function resource pg connect	ressource de connexion postgresql en cas de succès false en cas déchec
function resource pg connect string $connection_string int $connect_type	&eacute;tablit une connexion postgresql
function pg connection status $connection	ressource de connexion de base de données postgresql
function int pg connection status	pgsql_connection_ok ou pgsql_connection_bad
function int pg connection status resource $connection	lit le statut de la connexion postgresql
function pg consume input $connection	ressource de connexion à la base de données postgresql
function bool pg consume input	true en cas de succès ou false si une erreur survient
function bool pg consume input resource $connection	lit l'entr&eacute;e de la connexion
function pg copy from $rows	un tableau de données à être copié à lintérieur de table_name
function pg copy from $delimiter	le marqueur qui sépare les valeurs pour chaque champ dans chaque élément de rows
function pg copy from $table_name	nom de la table dans laquelle rows sera copié
function pg copy from $null_as	comment les valeurs null de sql sont représentées dans rows
function pg copy from $connection	ressource de connexion de base de données postgresql
function bool pg copy from	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg copy from resource $connection string $table_name array $rows string $delimiter string $null_as	ins&egrave;re des lignes dans une table &agrave; partir d'un tableau
function pg dbname $connection	la ressource de connexion de la base de données postgresql
function string pg dbname	une chaîne de type string contenant le nom de la base de données associée à la connexion connection ou false en cas derreur
function string pg dbname resource $connection	retourne le nom de la base de donn&eacute;es postgresql
function pg delete $table_name	nom de la table depuis laquelle les lignes seront effacées
function pg delete $assoc_array	un tableau où les clés sont les noms des champs de la table table_name et où les valeurs sont les valeurs de ces champs qui sont à effacés
function pg delete $options	toute combinaison des valeurs suivantes : pgsql_conv_force_null pgsql_dml_no_conv pgsql_dml_escape pgsql_dml_exec pgsql_dml_async ou pgsql_dml_string
function pg delete $connection	ressource de connexion postgresql
function mixed pg delete	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed pg delete resource $connection string $table_name array $assoc_array int $options	efface des lignes postgresql
function pg escape bytea $data	une chaîne de caractères contenant du texte ou des données binaires qui seront insérées dans la colonne bytea
function pg escape bytea $connection	ressource de connexion à une base de données postgresql
function string pg escape bytea	une chaîne de caractères contenant les données échappées
function string pg escape bytea resource $connection string $data	prot&egrave;ge une cha&icirc;ne pour insertion dans un champ bytea
function pg escape identifier $data	une chaîne de caractères contenant du texte à protéger
function pg escape identifier $connection	ressource de connexion à une base de données postgresql
function string pg escape identifier	une chaîne de caractères contenant les données protégées
function string pg escape identifier resource $connection string $data	prot&egrave;ge un identifiant pour l'insertion dans un champ texte
function pg escape string $connection	ressource de connexion à une base de données postgresql
function pg escape string $data	une chaîne de caractères contenant le texte à échapper
function string pg escape string	une chaîne de caractères contenant les données échappées
function string pg escape string resource $connection string $data	prot&egrave;ge une cha&icirc;ne de caract&egrave;res pour une requ&ecirc;te sql
function pg execute $connection	la ressource de connexion de la base de données postgresql
function pg execute $stmtname	le nom de la requête préparée à exécuter
function pg execute $params	un tableau de valeurs de paramètres pour substituer les variables $1 $2 etc
function resource pg execute	une ressource de résultats en cas de succès ou false si une erreur survient
function resource pg execute resource $connection string $stmtname array $params	ex&eacute;cute une requ&ecirc;te pr&eacute;par&eacute;e postgresql
function pg fetch all columns $result	ressource de résultats dune requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function pg fetch all columns $column	numéro de la colonne commençant à 0 à récupérer depuis la ressource de résultats
function array pg fetch all columns	un tableau contenant toutes les valeurs dune colonne du résultat
function array pg fetch all columns resource $result int $column	r&eacute;cup&egrave;re toutes les lignes d'une colonne de r&eacute;sultats particuli&egrave;re en tant que tableau
function pg fetch all $result	ressource résultat de requête postgresql retourné par pg_query() pg_query_params() ou pg_execute() entre autres
function array pg fetch all	un tableau array de toutes les lignes dans le jeu de résultats
function array pg fetch all resource $result	lit toutes les lignes d'un r&eacute;sultat
function pg fetch array $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre dautres
function pg fetch array $row	numéro de la ligne à récupérer
function pg fetch array $result_type	paramètre optionnel qui contrôle comment sera indexé le array retourné
function array pg fetch array	un tableau à indice numérique commençant à 0 associatif indexé avec le nom des champs ou les deux
function array pg fetch array resource $result int $row int $result_type	lit une ligne de r&eacute;sultat postgresql dans un tableau
function pg fetch object $row	numéro de la ligne à récupérer
function pg fetch object $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function pg fetch object $params	paramètre optionnel de type array pour passer des arguments au constructeur de la classe class_name
function pg fetch object $class_name	le nom de la classe à instancier fixe les propriétés de celles-ci et ses valeurs de retour
function pg fetch object $result_type	ignoré et obsolète
function object pg fetch object	un objet de type object avec les attributs pour chaque champ dans le jeu de résultats
function object pg fetch object resource $result int $row int $result_type	lit une ligne de r&eacute;sultat postgresql dans un objet
function pg fetch result $row	numéro de la ligne à récupérer
function pg fetch result $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function pg fetch result $field	une chaîne de type string représentant le nom du champ colonne à récupérer sinon un entier de type int représentant le numéro du champ à récupérer
function string pg fetch result	les booléens sont retournés comme des t ou f
function string pg fetch result resource $result int $row mixed $field	retourne les valeurs d'un r&eacute;sultat
function pg fetch row $row	numéro de la ligne à récupérer
function pg fetch row $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function array pg fetch row	un tableau de type array indexé de 0 en montant avec chaque valeur représentée comme une chaîne chaîne de caractères
function array pg fetch row resource $result int $row	lit une ligne dans un tableau
function pg field name $field_number	numéro du champ commençant à 0
function pg field name $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function string pg field name	le nom du champ ou false en cas derreur
function string pg field name resource $result int $field_number	retourne le nom d'un champ postgresql
function pg field prtlen $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function pg field prtlen $row	numéro de la ligne dans le résultat
function int pg field prtlen	le nombre de caractères imprimés ou false en cas derreur
function int pg field prtlen resource $result int $row_number mixed $field_name_or_number	retourne la taille imprim&eacute;e
function pg field size $field_number	numéro du champ commençant à 0
function pg field size $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function int pg field size	la taille du stockage interne dun champ en octets
function int pg field size resource $result int $field_number	retourne la taille interne de stockage d'un champ donn&eacute;
function pg field type $field_number	numéro du champ commençant à 0
function pg field type $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function string pg field type	une chaîne de type string contenant le nom de base du type de champ ou false en cas derreur
function string pg field type resource $result int $field_number	retourne le type d'un champ postgresql donn&eacute; par index
function pg flush $connection	ressource de connexion à la base de données postgresql
function mixed pg flush	retourne true si lenvoi a réussi ou si aucune donnée nest en attente denvoi 0 si une partie des données en attente ont été envoyées mais quil en reste encore ou false si une erreur survient
function mixed pg flush resource $connection	envoi les donn&eacute;es de requ&ecirc;te sortante sur la connexion
function pg get notify $result_type	un paramètre optionnel qui contrôle la façon dont le tableau sera indexé
function pg get notify $connection	ressource de connexion postgresql
function array pg get notify	un tableau contenant le nom du message notify
function array pg get notify resource $connection int $result_type	lit le message sql notify
function pg get pid $connection	une ressource de connexion postgresql
function int pg get pid	lidentifiant du processus du serveur
function int pg get pid resource $connection	lit l'identifiant de processus du serveur postgresql
function pg host $connection	la ressource de connexion de la base de données postgresql
function string pg host	une chaîne contenant le nom de lordinateur hôte de connection ou false en cas derreur
function string pg host resource $connection	retourne le nom d'h&ocirc;te
function pg insert $assoc_array	un tableau dont les clés sont les noms des champs dans la table table_name et où les valeurs sont les valeurs de ces champs qui seront insérés
function pg insert $connection	une ressource de connexion postgresql
function pg insert $table_name	nom de la table dans laquelle les lignes seront insérées
function pg insert $options	toutes combinaisons de constantes parmi pgsql_conv_opts pgsql_dml_no_conv pgsql_dml_escape pgsql_dml_exec pgsql_dml_async ou pgsql_dml_string
function mixed pg insert	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed pg insert resource $connection string $table_name array $assoc_array int $options	ins&egrave;re un tableau dans une table
function pg last error $connection	la ressource de connexion de la base de données postgresql
function string pg last error	une chaîne de caractères contenant le dernier message derreur sur la connexion connection ou false en cas derreur
function string pg last error resource $connection	lit le dernier message d'erreur sur la connexion
function pg last oid $result	ressource de résultat de requête postgresql retournée par pg_query() pg_query_params() ou pg_execute() entre autres
function string pg last oid	une chaîne de caractères contenant le oid assigné à la plus récente ligne insérée dans la connexion connection spécifiée ou false en cas derreur ou de oid indisponible
function string pg last oid resource $result	retourne l'identifiant de la derni&egrave;re ligne
function pg lo close $result	ressource objet de grande taille lob postgresql retournée par pg_lo_open()
function bool pg lo close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg lo close resource $large_object	ferme un objet de grande taille postgresql
function pg lo create $connection	la ressource de connexion de la base de données postgresql
function pg lo create $object_id	si le paramètre object_id est fourni la fonction essayera de créer un objet large avec cet identifiant sinon un identifiant dobjet disponible sera assigné par le serveur
function int pg lo create	un objet large oid ou false en cas derreur
function int pg lo create resource $connection mixed $object_id	cr&eacute;e un objet de grande taille postgresql
function pg lo export $pathname	le chemin daccès complet ainsi que le fichier dans lequel il sera écrit lobjet de grande taille sur le système du client
function pg lo export $connection	la ressource de connexion de la base de données postgresql
function pg lo export $oid	le oid de lobjet de grande taille dans la base de données
function bool pg lo export	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg lo export resource $connection int $oid string $pathname	exporte un objet de grande taille vers un fichier
function pg lo import $pathname	le chemin daccès complet ainsi que le fichier dans lequel il sera lu lobjet de grande taille sur le système du client
function pg lo import $object_id	si le paramètre object_id est fourni la fonction essayera de créer un objet large avec cette identifiant sinon un identifiant dobjet disponible sera assigné par le serveur
function pg lo import $connection	la ressource de connexion de la base de données postgresql
function int pg lo import	le oid du nouvel objet de grande taille créé ou false en cas déchec
function int pg lo import resource $connection string $pathname mixed $object_id	importe un objet de grande taille depuis un fichier
function pg lo open $mode	peut être r pour lecture seule w pour écriture seule ou rw pour lecture et écriture
function pg lo open $connection	la ressource de connexion de la base de données postgresql
function pg lo open $oid	le oid de lobjet de grande taille dans la base de données
function resource pg lo open	une ressource dobjet de grande taille ou false en cas derreur
function resource pg lo open resource $connection int $oid string $mode	ouvre un objet de grande taille postgresql
function pg lo read all $large_object	ressource objet de grande taille lob postgresql retournée par pg_lo_open()
function int pg lo read all	nombre doctets lu ou false en cas derreur
function int pg lo read all resource $large_object	lit un objet de grande taille en totalit&eacute;
function pg lo seek $whence	une de ces constantes pgsql_seek_set positionne à partir du début de lobjet pgsql_seek_cur positionne à partir de la position courante ou pgsql_seek_end positionne à partir de la fin de lobjet
function pg lo seek $offset	le nombre doctets de déplacement
function pg lo seek $large_object	ressource objet de grande taille lob postgresql retournée par pg_lo_open()
function bool pg lo seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg lo seek resource $large_object int $offset int $whence	modifie la position dans un objet de grande taille
function pg lo truncate $size	le nombre doctets à tronquer
function pg lo truncate $large_object	ressource dobjet large postgresql lob retourné par pg_lo_open()
function bool pg lo truncate	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg lo truncate resource $large_object int $size	tronque un objet large
function pg lo write $data	les données à être écrites dans lobjet de grande taille
function pg lo write $len	un nombre maximal doctets à écrire
function pg lo write $large_object	ressource objet de grande taille lob postgresql retournée par pg_lo_open()
function int pg lo write	le nombre doctets écrit dans lobjet de grande taille ou false en cas derreur
function int pg lo write resource $large_object string $data int $len	&eacute;crit un objet de grande taille postgresql
function pg meta data $table_name	le nom de la table
function pg meta data $extended	drapeau pour retourner les méta-données étendus
function pg meta data $connection	ressource de connexion de base de données postgresql
function array pg meta data	un tableau de la table de définition ou false en cas derreur
function array pg meta data resource $connection string $table_name bool $extended	lit les m&eacute;tadonn&eacute;es de la table postgresql
function pg num fields $result	ressource résultat de requête postgresql retourné par pg_query() pg_query_params() ou pg_execute() entre autres
function int pg num fields	le nombre de champs ou colonne dans le jeu de résultats
function int pg num fields resource $result	retourne le nombre de champ
function pg num rows $result	ressource résultat de requête postgresql retourné par pg_query() pg_query_params() ou pg_execute() entre autres
function int pg num rows	le nombre de lignes dans le jeu de résultats
function int pg num rows resource $result	retourne le nombre de lignes postgresql
function pg options $connection	la ressource de connexion de la base de données postgresql
function string pg options	une chaîne contenant les options de connection ou false en cas derreur
function string pg options resource $connection	retourne les options postgresql
function pg parameter status $param_name	les valeurs possibles de param_name sont server_version server_encoding client_encoding is_superuser session_authorization datestyle timezone et integer_datetimes
function pg parameter status $connection	la ressource de connexion de la base de données postgresql
function string pg parameter status	une chaîne contenant la valeur du paramètre false en cas déchec ou du paramètre param_name invalide
function string pg parameter status resource $connection string $param_name	consulte un param&egrave;tre de configuration courant du serveur
function pg pconnect $connection_string	la chaîne connection_string peut être vide pour utiliser tous les paramètres par défaut ou elle peut contenir un ou plusieurs paramètres de configuration séparés par des espaces
function pg pconnect $connect_type	si pgsql_connect_force_new est passé en argument alors une nouvelle connexion sera créée même si la chaîne connection_string est identique à celle de la connexion existante
function resource pg pconnect	ressource de connexion postgresql en cas de succès false en cas déchec
function resource pg pconnect string $connection_string int $connect_type	&eacute;tablit une connexion postgresql persistante
function pg port $connection	la ressource de connexion de la base de données postgresql
function int pg port	un entier contenant le numéro du port du serveur de base de données identifié par connection ou false en cas derreur
function int pg port resource $connection	retourne le num&eacute;ro de port
function pg prepare $query	la requête sql avec ses paramètres
function pg prepare $stmtname	le nom à donner à la requête préparée
function pg prepare $connection	la ressource de connexion de la base de données postgresql
function resource pg prepare	une ressource de résultats en cas de succès ou false si une erreur survient
function resource pg prepare resource $connection string $stmtname string $query	envoie une requ&ecirc;te pour cr&eacute;er une requ&ecirc;te pr&eacute;par&eacute;e avec les param&egrave;tres donn&eacute;s et attend l'ex&eacute;cution
function pg put line $data	une ligne de texte à envoyer directement au serveur postgresql
function pg put line $connection	la ressource de connexion de la base de données postgresql
function bool pg put line	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg put line resource $connection string $data	envoie une cha&icirc;ne au serveur postgresql
function pg query params $query	la requête sql avec ses paramètres
function pg query params $connection	la ressource de connexion de la base de données postgresql
function pg query params $params	un tableau de valeurs de paramètres pour substituer les variables $1 $2 etc
function resource pg query params	une ressource de résultats en cas de succès ou false si une erreur survient
function resource pg query params resource $connection string $query array $params	envoie une commande au serveur et attend le r&eacute;sultat avec les capacit&eacute;s de passer des param&egrave;tres s&eacute;par&eacute;ment de la commande texte sql
function pg query $connection	la ressource de connexion de la base de données postgresql
function pg query $query	la requête ou les requêtes sql à être exécutées
function resource pg query	une ressource de résultats en cas de succès ou false si une erreur survient
function resource pg query resource $connection string $query	ex&eacute;cute une requ&ecirc;te postgresql
function pg result error field $fieldcode	les valeurs possibles de fieldcode sont : pgsql_diag_severity pgsql_diag_sqlstate pgsql_diag_message_primary pgsql_diag_message_detail pgsql_diag_message_hint pgsql_diag_statement_position pgsql_diag_internal_position postgresql 8
function pg result error field $result	une ressource requête postgresql provenant dune requête précédemment exécutée
function string pg result error field	retourne une chaîne contenant le contenu du champ derreur null si le champ nexiste pas ou false en cas déchec
function string pg result error field resource $result int $fieldcode	retourne un champ individuel d'un rapport d'erreur
function pg result error $result	ressource résultat de requête postgresql retourné par pg_query() pg_query_params() ou pg_execute() entre autres
function string pg result error	retourne une chaîne de caractères
function string pg result error resource $result	lit le message d'erreur associ&eacute; &agrave; un r&eacute;sultat
function pg result seek $offset	ligne à déplacer la position interne dans le jeu de résultats result
function pg result seek $result	ressource résultat de requête postgresql retourné par pg_query() pg_query_params() ou pg_execute() entre autres
function bool pg result seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg result seek resource $result int $offset	modifie la ligne courant dans un r&eacute;sultat
function pg result status $type	soit pgsql_status_long pour retourner un statut numérique de result ou pgsql_status_string pour retourner le tag de la commande de result
function pg result status $result	ressource résultat de requête postgresql retourné par pg_query() pg_query_params() ou pg_execute() entre autres
function mixed pg result status	les valeurs de retour possibles sont pgsql_empty_query pgsql_command_ok pgsql_tuples_ok pgsql_copy_out pgsql_copy_in pgsql_bad_response pgsql_nonfatal_error et pgsql_fatal_error si pgsql_status_long est spécifié
function mixed pg result status resource $result int $type	lit le statut du r&eacute;sultat
function pg select $assoc_array	un tableau à qui les clés sont les noms des champs dans la table table_name et à qui les valeurs sont les conditions que la ligne doit vérifier pour être récupérée
function pg select $table_name	nom de la table dans laquelle on sélectionne les lignes
function pg select $options	nimporte quelle de pgsql_conv_force_null pgsql_dml_no_conv pgsql_dml_escape pgsql_dml_exec pgsql_dml_async ou pgsql_dml_string combinée
function pg select $connection	ressource de connexion de base de données postgresql
function mixed pg select	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed pg select resource $connection string $table_name array $assoc_array int $options	effectue une s&eacute;lection postgresql
function pg send execute $connection	la ressource de connexion de la base de données postgresql
function pg send execute $stmtname	le nom de la requête préparée à exécuter
function pg send execute $params	un tableau de valeurs de paramètres pour substituer les variables $1 $2 etc
function bool pg send execute	retourne true en cas de succès false en cas déchec
function bool pg send execute resource $connection string $stmtname array $params	envoie une requ&ecirc;te pour ex&eacute;cuter une requ&ecirc;te pr&eacute;par&eacute;e avec des param&egrave;tres donn&eacute;s sans attendre le s r&eacute;sultat s
function pg send prepare $query	la requête sql avec ses paramètres
function pg send prepare $stmtname	le nom à donner à la requête préparée
function pg send prepare $connection	la ressource de connexion de la base de données postgresql
function bool pg send prepare	retourne true en cas de succès false en cas déchec
function bool pg send prepare resource $connection string $stmtname string $query	envoie une requ&ecirc;te pour cr&eacute;er une requ&ecirc;te pr&eacute;par&eacute;e avec les param&egrave;tres donn&eacute;s sans attendre la fin de son ex&eacute;cution
function pg send query params $query	la requête sql avec ses paramètres
function pg send query params $params	un tableau de valeurs de paramètres pour substituer les variables $1 $2 etc
function pg send query params $connection	ressource de connexion de base de données postgresql
function bool pg send query params	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg send query params resource $connection string $query array $params	envoie une commande et s&eacute;pare les param&egrave;tres au serveur sans attendre le s r&eacute;sultat s
function pg send query $connection	la ressource de connexion de la base de données postgresql
function pg send query $query	la requête ou les requêtes sql à être exécutées
function bool pg send query	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg send query resource $connection string $query	ex&eacute;cute une requ&ecirc;te postgresql asynchrone
function pg set client encoding $connection	la ressource de connexion de la base de données postgresql
function pg set client encoding $encoding	lencodage client demandé
function int pg set client encoding	retourne 0 en cas de succès ou -1 en cas derreur
function int pg set client encoding resource $connection string $encoding	choisit l'encodage du client postgresql
function pg set error verbosity $verbosity	le degré de message derreur : pgsql_errors_terse pgsql_errors_default ou pgsql_errors_verbose
function pg set error verbosity $connection	la ressource de connexion de la base de données postgresql
function int pg set error verbosity	le degré de message derreur précédant : pgsql_errors_terse pgsql_errors_default ou pgsql_errors_verbose
function int pg set error verbosity resource $connection int $verbosity	d&eacute;termine la le degr&eacute; des messages retourn&eacute;s par pg_last_error et pg_result_error
function pg trace $connection	la ressource de connexion de la base de données postgresql
function pg trace $pathname	le chemin complet et le nom du fichier dans lequel le suivi sera enregistré
function pg trace $mode	le mode daccès optionnel comme fopen()
function bool pg trace	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pg trace string $pathname string $mode resource $connection	active le suivi d'une connexion postgresql
function pg transaction status $connection	ressource de connexion de base de données postgresql
function int pg transaction status	le statut peut être pgsql_transaction_idle actuellement inactif pgsql_transaction_active une commande est en cours pgsql_transaction_intrans inactif dans un bloc de transaction valide ou pgsql_transaction_inerror inactif dans un bloc de transaction en échec
function int pg transaction status resource $connection	retourne le statut de la transaction en cours du serveur
function pg tty $connection	la ressource de connexion de la base de données postgresql
function string pg tty	une chaîne contenant le débogue tty de la connexion connection ou false en cas derreur
function string pg tty resource $connection	retourne le nom de tty associ&eacute; &agrave; la connexion
function pg unescape bytea $data	une chaîne de caractères contenant les données bytea postgresql à être converties en chaîne de caractères binaire php
function string pg unescape bytea	une chaîne de caractères contenant les données protégées
function string pg unescape bytea string $data	supprime la protection d'une cha&icirc;ne de type bytea
function pg update $options	toutes combinaisons de constantes parmi pgsql_conv_force_null pgsql_dml_no_conv pgsql_dml_escape pgsql_dml_exec pgsql_dml_async ou pgsql_dml_string
function pg update $connection	une ressource de connexion postgresql
function pg update $data	un tableau dont les clés sont les noms des champs dans la table table_name et où les valeurs sont les lignes correspondantes qui seront mises à jour
function pg update $table_name	le nom de la table dans laquelle les lignes seront mises à jour
function pg update $condition	un tableau dont les clés sont les noms des champs dans la table table_name et où les valeurs sont les conditions à remplir par les lignes pour être mises à jour
function mixed pg update	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed pg update resource $connection string $table_name array $data array $condition int $options	modifie les lignes d'une table
function php check syntax $filename	le nom du fichier à vérifier
function php check syntax $error_message	si le paramètre error_message est utilisé il contiendra le message derreur généré par la vérification de la syntaxe
function bool php check syntax	retourne true si la vérification a réussie et false si la vérification échoue ou si le fichier filename na pu être ouvert
function bool php check syntax string $filename string $error_message	v&eacute;rifie la syntaxe php et ex&eacute;cute d'un fichier sp&eacute;cifique
function string php logo guid	retourne phpe9568f34-d428-11d2-a769-00aa001acf42
function string php logo guid	retourne l'identifiant du logo php
function php strip whitespace $filename	chemin vers le fichier php
function string php strip whitespace	le code source nettoyé sera retourné en cas de succès ou une chaîne vide en cas déchec
function string php strip whitespace string $filename	retourne la source sans commentaires ni espaces blancs
function phpcredits $flag	pour générer une page personnalisée sur les crédits il faut utiliser le paramètre flag
function bool phpcredits	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool phpcredits int $flag	affiche les cr&eacute;dits de php
function phpinfo $what	laffichage peut être personnalisé en utilisant une ou plusieurs des constantes suivantes
function bool phpinfo	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool phpinfo int $what	affiche de nombreuses informations sur la configuration de php
function phpversion $extension	un nom dextension optionnel
function string phpversion	si le paramètre optionnel extension est spécifié la fonction phpversion() retournera la version de cette extension ou false sil ny a aucune information sur la version associée ou si cette extension nest pas disponible
function string phpversion string $extension	retourne le num&eacute;ro de la version courante de php
function png2wbmp $wbmpname	chemin vers le fichier final wbmp
function png2wbmp $dest_width	largeur de limage de destination
function png2wbmp $pngname	chemin vers le fichier png
function png2wbmp $threshold	valeur du seuil entre 0 et 8 inclus
function png2wbmp $dest_height	hauteur de limage de destination
function bool png2wbmp	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool png2wbmp string $pngname string $wbmpname int $dest_height int $dest_width int $threshold	convertit une image png en image wbmp
function int posix get last error	retourne le numéro de la dernière erreur survenue lors dun appel à une fonction posix
function int posix get last error	lit le dernier num&eacute;ro d'erreur g&eacute;n&eacute;r&eacute; par la derni&egrave;re fonction posix qui a &eacute;chou&eacute;
function string posix getcwd	retourne une chaîne de caractères représentant le nom du chemin absolu en cas de succès
function string posix getcwd	chemin du dossier de travail courant
function int posix getegid	retourne un entier représentant lid effectif du groupe
function int posix getegid	retourne l'id effectif du groupe du processus courant
function int posix geteuid	retourne lid de lutilisateur sous la forme dun entier
function int posix geteuid	retourne l'uid effectif de l'utilisateur du processus courant
function int posix getgid	retourne lid réel du groupe sous la forme dun entier
function int posix getgid	retourne l'uid du groupe du processus courant
function posix getgrgid $gid	lidentifiant du groupe
function array posix getgrgid	les éléments du tableau retourné sont : les informations du groupe élément description name cet élément contient le nom du groupe
function array posix getgrgid int $gid	retourne des informations sur un groupe
function posix getgrnam $name	le nom du groupe
function array posix getgrnam	les éléments du tableau retourné sont : les informations du groupe élément description name cet élément contient le nom du groupe
function array posix getgrnam string $name	retourne des informations sur un groupe
function array posix getgroups	retourne un tableau contenant les identifiants du groupe du processus courant
function array posix getgroups	retourne les identifiants du groupe du processus courant
function posix getpgid $pid	lidentifiant du processus
function int posix getpgid	retourne lidentifiant sous la forme dun entier
function int posix getpgid int $pid	retourne l'id du groupe de processus
function int posix getpid	retourne lidentifiant sous la forme dun entier
function int posix getpid	retourne l'identifiant du processus courant
function int posix getppid	retourne lidentifiant sous la forme dun entier
function int posix getppid	retourne l'identifiant du processus parent
function posix getpwnam $username	un nom alphanumérique dutilisateur
function array posix getpwnam	en cas de succès un tableau avec les éléments suivants est retourné sinon false : le tableau descriptif dun utilisateur élément description name le nom contient le nom de lutilisateur
function array posix getpwnam string $username	retourne des informations sur un utilisateur
function array posix getrlimit	retourne un tableau associatif déléments pour chaque limite définie
function array posix getrlimit	retourne des informations concernant les limites des ressources syst&egrave;me
function int posix getuid	retourne lidentifiant sous la forme dun entier
function int posix getuid	retourne l'id de l'utilisateur du processus courant
function posix initgroups $base_group_id	typiquement le numéro du groupe depuis le fichier de mot de passe
function posix initgroups $name	lutilisateur pour lequel on doit calculer la liste
function bool posix initgroups	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool posix initgroups string $name int $base_group_id	calcule la liste des acc&egrave;s de groupe
function posix mkfifo $pathname	chemin vers le fichier fifo
function posix mkfifo $mode	le second paramètre mode doit être au format octal i
function bool posix mkfifo	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool posix mkfifo string $pathname int $mode	cr&eacute;e un fichier fifo first in first outun pipe nomm&eacute;
function posix mknod $major	lidentifiant majeur du dispositif du noyau requis lorsque vous utilisez s_ifchr ou s_ifblk
function posix mknod $pathname	le fichier à créer
function posix mknod $mode	ce paramètre est construit par une manipulation de bits ou par des types de fichier une des constantes suivantes : posix_s_ifreg posix_s_ifchr posix_s_ifblk posix_s_ififo ou posix_s_ifsock et des permissions
function posix mknod $minor	lidentifiant mineur du dispositif du noyau
function bool posix mknod	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool posix mknod string $pathname int $mode int $major int $minor	cr&eacute;e un fichier sp&eacute;cial ou ordinaire posix
function posix seteuid $uid	lid de lutilisateur
function bool posix seteuid	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool posix seteuid int $uid	modifie l'identifiant d'utilisateur r&eacute;el uid du processus courant
function int posix setsid	retourne lidentifiant de session ou -1 si une erreur survient
function int posix setsid	fait du processus courant un chef de session
function posix setuid $uid	lid de lutilisateur
function bool posix setuid	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool posix setuid int $uid	fixe l'uid effective du processus courant
function posix strerror $errno	un numéro derreur posix retourné par la fonction posix_get_last_error()
function string posix strerror	retourne le message derreur sous la forme dune chaîne de caractères
function string posix strerror int $errno	lit le message d'erreur associ&eacute; &agrave; un num&eacute;ro d'erreur posix
function array posix times	retourne un tableau avec les informations sur lutilisation du cpu
function array posix times	utilisation des ressources
function posix ttyname $fd	le descripteur de fichier qui doit être soit une ressource de fichier soit un entier
function string posix ttyname	en cas de succès retourne une chaîne de caractères correspondant au chemin absolu de fd
function string posix ttyname mixed $fd	retourne le nom de device du terminal
function array posix uname	retourne un tableau associatif avec des informations sur le système
function array posix uname	retourne le nom du syst&egrave;me
function pow $base	la base à utiliser
function pow $exp	lexponentielle
function number pow	base élevé à la puissance exp
function number pow number $base number $exp	expression exponentielle
function mixed preg filter	retourne un tableau si le paramètre subject est de type tableau ou une chaîne de caractères autrement
function mixed preg filter mixed $pattern mixed $replacement mixed $subject int $limit int $count	recherche et remplace avec une expression rationnelle
function preg match all $pattern	le masque à chercher sous la forme dune chaîne de caractères
function preg match all $PREG_SET_ORDER	les résultats sont classés de telle façon que $matches 0 contient la première série de résultats $matches 1 contient la deuxième etc
function preg match all $offset	normalement la recherche commence au début de la chaîne subject
function preg match all $PREG_OFFSET_CAPTURE	si cette option est activée toutes les sous-chaînes qui satisfont le masque seront aussi identifiées par leur offset
function preg match all $subject	la chaîne dentrée
function preg match all $matches	tableau contenant tous les résultats dans un tableau multidimensionnel ordonné suivant le paramètre flags
function preg match all $PREG_PATTERN_ORDER	lordre est tel que $matches 0 est un tableau qui contient les résultats qui satisfont le masque complet $matches 1 est un tableau qui contient les résultats qui satisfont la première parenthèse capturante etc
function int preg match all	retourne le nombre de résultats qui satisfont le masque complet ou false si une erreur survient
function int preg match all string $pattern string $subject array $matches int $flags int $offset	expression rationnelle globale
function preg quote $delimiter	si largument optionnel delimiter est fourni il sera aussi échappé
function preg quote $str	la chaîne dentrée
function string preg quote	retourne la chaîne protégée
function string preg quote string $str string $delimiter	protection des caract&egrave;res sp&eacute;ciaux des expressions rationnelles
function preg replace callback $subject	la chaîne ou le tableau de chaînes à chercher et à remplacer
function preg replace callback $pattern	le masque à chercher
function preg replace callback $limit	le nombre maximal de remplacement pour chaque masque dans chaque chaîne subject
function preg replace callback $count	si fournie cette variable sera remplie avec le nombre de remplacements effectués
function preg replace callback $callback	la fonction de rappel qui recevra le tableau déléments trouvés dans la chaîne subject
function mixed preg replace callback	preg_replace_callback() retourne un tableau si le paramètre subject est un tableau ou sinon une chaîne de caractères
function mixed preg replace callback mixed $pattern callable $callback mixed $subject int $limit int $count	rechercher et remplacer par expression rationnelle standard en utilisant une fonction de callback
function preg replace $subject	la chaîne ou le tableau contenant des chaînes à chercher et à remplacer
function preg replace $pattern	le masque à chercher
function preg replace $limit	le nombre maximal de remplacement pour chaque masque dans chaque chaîne subject
function preg replace $count	si fournie cette variable contiendra le nombre de remplacements effectués
function preg replace $replacement	la chaîne ou un tableau de chaînes pour le remplacement
function mixed preg replace	preg_replace() retourne un tableau si le paramètre subject est un tableau ou une chaîne sinon
function mixed preg replace mixed $pattern mixed $replacement mixed $subject int $limit int $count	rechercher et remplacer par expression rationnelle standard
function prev $array	le tableau dentrée
function mixed prev	retourne la valeur précédente du tableau suivant le pointeur interne du tableau ou false sil ny a plus délément
function mixed prev array $array	recule le pointeur courant de tableau
function print $arg	les données dentrée
function int print	retourne 1 toujours
function int print string $arg	affiche une cha&icirc;ne de caract&egrave;res
function proc close $process	la resource proc_open() à fermer
function int proc close	retourne le code de sortie du processus ou -1 en cas dechec
function int proc close resource $process	ferme un processus ouvert par proc_open
function proc get status $process	la ressource proc_open() à évaluer
function array proc get status	un tableau contenant les informations collectées en cas de succès et false en cas déchec
function array proc get status resource $process	lit les informations concernant un processus ouvert par proc_open
function proc open $env	un tableau contenant les variables denvironnement pour la commande qui doit être exécutée ou null pour utiliser le même environnement que le processus php courant
function proc open $cwd	le dossier initial de travail de la commande
function proc open $other_options	vous permet de spécifier des options supplémentaires
function proc open $pipes	doit être défini en un tableau indexé de pointeurs de fichiers qui correspondent à la fin de nimporte quel descripteur php qui sont créés
function proc open $cmd	la commande à exécuter
function proc open $descriptorspec	un tableau indexé dont les clés représentent le numéro de descripteur et la valeur la méthode avec laquelle php va passer ce descripteur au processus fils
function resource proc open	retourne une ressource représentant le processus qui pourra être utilisé par la fonction proc_close() lorsque vous nen aurez plus besoin
function resource proc open string $cmd array $descriptorspec array $pipes string $cwd array $env array $other_options	ex&eacute;cute une commande et ouvre les pointeurs de fichiers pour les entr&eacute;es / sorties
function proc terminate $signal	ce paramètre optionnel nest utile que sur les plates-formes posix : vous pouvez alors spécifier un signal à envoyer au processus en utilisant lappel système kill 2
function proc terminate $process	la ressource proc_open() qui sera fermée
function bool proc terminate	retourne le code de sortie du processus
function bool proc terminate resource $process int $signal	termine un processus ouvert par proc_open
function ps add bookmark $parent	un signet précédemment créé par cette fonction qui est utilisé comme parent du nouveau signet
function ps add bookmark $open	si open nest pas égal à zéro le signet sera montré ouvert dans le lecteur pdf
function ps add bookmark $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps add bookmark $text	le texte utilisé pour afficher le signet
function int ps add bookmark	la valeur retournée est une référence pour le signet
function int ps add bookmark resource $psdoc string $text int $parent int $open	ajoute un signet &agrave; la page courante
function ps add launchlink $ury	la position y du coin supérieur droit
function ps add launchlink $lly	la position y du coin inférieur gauche
function ps add launchlink $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps add launchlink $urx	la position x du coin supérieur droit
function ps add launchlink $filename	le chemin où le programme sera démarré lorsque le lien sera cliqué
function ps add launchlink $llx	la position x du coin inférieur gauche
function bool ps add launchlink	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps add launchlink resource $psdoc float $llx float $lly float $urx float $ury string $filename	ajoute un lien qui d&eacute;marre un fichier
function ps add locallink $ury	la position y du coin supérieur droit
function ps add locallink $lly	la position y du coin inférieur gauche
function ps add locallink $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps add locallink $dest	le paramètre dest détermine comment le document sera vu
function ps add locallink $urx	la position x du coin supérieur droit
function ps add locallink $llx	la position x du coin inférieur gauche
function ps add locallink $page	le nombre de page affichée lors du clic sur le lien
function bool ps add locallink	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps add locallink resource $psdoc float $llx float $lly float $urx float $ury int $page string $dest	ajoute un lien &agrave; une page dans le m&ecirc;me document
function ps arcn $beta	langle de fin donné en degrés
function ps arcn $y	la position y du centre du cercle
function ps arcn $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps arcn $x	la position x du centre du cercle
function ps arcn $radius	le rayon du cercle
function ps arcn $alpha	langle de départ donné en degrés
function bool ps arcn	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps arcn resource $psdoc float $x float $y float $radius float $alpha float $beta	dessine un arc dans le sens des aiguilles d'une montre
function ps begin page $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps begin page $width	la largeur de la page en pixel par exemple 596 pour le format a4
function ps begin page $height	la hauteur de la page en pixel par exemple 842 pour le format a4
function bool ps begin page	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps begin page resource $psdoc float $width float $height	d&eacute;marre une nouvelle page
function ps begin pattern $height	la hauteur du motif en pixel
function ps begin pattern $painttype	doit être 1 ou 2
function ps begin pattern $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps begin pattern $y-step	la distance en pixel de lemplacement du motif dans la direction verticale
function ps begin pattern $x-step	la distance en pixel de lemplacement du motif dans la direction horizontale
function ps begin pattern $width	la largeur du motif en pixel
function int ps begin pattern	lidentifiant du motif ou false si une erreur survient
function int ps begin pattern resource $psdoc float $width float $height float $xstep float $ystep int $painttype	d&eacute;marre un nouveau motif
function ps begin template $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps begin template $width	la largeur du modèle en pixels
function ps begin template $height	la hauteur du modèle en pixels
function int ps begin template	cette fonction retourne true en cas de succès ou false si une erreur survient
function int ps begin template resource $psdoc float $width float $height	d&eacute;marre un nouveau mod&egrave;le
function ps circle $x	la position x du centre du cercle
function ps circle $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps circle $radius	le rayon du cercle
function ps circle $y	la position y du centre du cercle
function bool ps circle	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps circle resource $psdoc float $x float $y float $radius	dessine un cercle
function ps clip $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps clip	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps clip resource $psdoc	attache le dessin au chemin courant
function ps close image $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps close image $imageid	identifiant dune image retourné par ps_open_image() ou ps_open_image_file()
function void ps close image resource $psdoc int $imageid	ferme l'image et lib&egrave;re la m&eacute;moire
function ps closepath stroke $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps closepath stroke	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps closepath stroke resource $psdoc	ferme et trace un chemin
function ps closepath $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps closepath	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps closepath resource $psdoc	ferme un chemin
function ps continue text $text	le texte à afficher
function ps continue text $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps continue text	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps continue text resource $psdoc string $text	continue un texte &agrave; la ligne suivante
function ps end page $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps end page	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps end page resource $psdoc	termine une page
function ps end pattern $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps end pattern	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps end pattern resource $psdoc	termine un motif
function ps end template $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps end template	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps end template resource $psdoc	termine un mod&egrave;le
function ps fill stroke $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps fill stroke	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps fill stroke resource $psdoc	remplit et trace le chemin courant
function ps fill $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps fill	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps fill resource $psdoc	remplit le chemin courant
function ps findfont $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps findfont $encoding	ps_findfont() essaiera de charger le fichier passé dans le paramètre encoding
function ps findfont $embed	si fixé à une valeur > 0 la police sera incorporée dans le document
function ps findfont $fontname	le nom de la police
function int ps findfont	retourne un identifiant de la police ou zéro en cas derreur
function int ps findfont resource $psdoc string $fontname string $encoding bool $embed	charge une police
function ps get buffer $psdoc	identifiant dun fichier postscript retourné par ps_new()
function string ps get buffer resource $psdoc	r&eacute;cup&egrave;re le tampon complet contenant les donn&eacute;es ps g&eacute;n&eacute;r&eacute;es
function ps hyphenate $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps hyphenate $text	text ne devrait pas contenir de caractères non alpha
function array ps hyphenate	un tableau dentier indiquant la position des coupures possibles dans le texte ou false si une erreur survient
function array ps hyphenate resource $psdoc string $text	relie un mot
function ps include file $psdoc	identifiant de ressource du fichier postscript tel que retourné par la fonction ps_new()
function bool ps include file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps include file resource $psdoc string $file	lit un fichier externe avec du code postscript brut
function ps lineto $x	la position x du dernier point de la ligne
function ps lineto $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps lineto $y	la position y du dernier point de la ligne
function bool ps lineto	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps lineto resource $psdoc float $x float $y	dessine une ligne
function ps makespotcolor $name	nom de la tache de couleur par exemple pantone 5565
function ps makespotcolor $psdoc	identifiant dun fichier postscript retourné par ps_new()
function int ps makespotcolor	lid de la nouvelle tache de couleur ou 0 en cas derreur
function int ps makespotcolor resource $psdoc string $name int $reserved	cr&eacute;e une tache de couleur
function ps moveto $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps moveto $y	la position y du point où se déplacer
function ps moveto $x	la position x du point où se déplacer
function bool ps moveto	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps moveto resource $psdoc float $x float $y	fixe le point courant
function resource ps new	ressource dun document postscript ou false si une erreur survient
function resource ps new	cr&eacute;e un nouvel objet document postscript
function ps open file $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps open file $filename	le nom du fichier postscript
function bool ps open file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps open file resource $psdoc string $filename	ouvre un fichier pour &eacute;criture
function ps open image file $intparam	non utilisé
function ps open image file $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps open image file $stringparam	non utilisé
function ps open image file $type	type de limage
function ps open image file $filename	le nom du fichier contenant les données de limage
function int ps open image file	retourne un identifiant de limage ou zéro en cas derreur
function int ps open image file resource $psdoc string $type string $filename string $stringparam int $intparam	ouvre une image &agrave; partir d'un fichier
function ps open memory image $psdoc	identifiant de ressource du fichier postscript tel que retourné par la fonction ps_new()
function int ps open memory image resource $psdoc int $gd	prend une image gd et retourne une image &agrave; placer dans un document ps
function ps place image $scale	le facteur de redimensionnement pour limage
function ps place image $x	la position x du coin inférieur gauche de limage
function ps place image $y	la position y du coin inférieur gauche de limage
function ps place image $imageid	identifiant dun fichier postscript retourné par ps_open_image() ou ps_open_image_file()
function ps place image $psdoc	identifiant de ressource postscript tel que retourné par ps_new()
function bool ps place image	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps place image resource $psdoc int $imageid float $x float $y float $scale	place une image sur la page
function ps rect $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps rect $width	la largeur de limage
function ps rect $x	la position x du coin inférieur gauche du rectangle
function ps rect $height	la hauteur de limage
function ps rect $y	la position y du coin inférieur gauche du rectangle
function bool ps rect	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps rect resource $psdoc float $x float $y float $width float $height	dessine un rectangle
function ps save $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps save	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps save resource $psdoc	sauvegarde le contexte courant
function ps scale $y	facteur de redimensionnement en direction verticale
function ps scale $x	facteur de redimensionnement en direction horizontale
function ps scale $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps scale	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps scale resource $psdoc float $x float $y	fixe le facteur de redimensionnement
function ps set border color $green	le composant vert de la couleur de la bordure
function ps set border color $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps set border color $blue	le composant bleu de la couleur de la bordure
function ps set border color $red	le composant rouge de la couleur de la bordure
function bool ps set border color	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps set border color resource $psdoc float $red float $green float $blue	fixe la couleur des bordures pour les commentaires
function ps set border dash $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps set border dash $black	la grandeur des pointillés
function ps set border dash $white	la grandeur de lespace entre les pointillés
function bool ps set border dash	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps set border dash resource $psdoc float $black float $white	fixe la grandeur des tirets pour les bordures des commentaires
function ps set border style $style	style peut être solid ou dashed
function ps set border style $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps set border style $width	la largeur de la bordure
function bool ps set border style	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps set border style resource $psdoc string $style float $width	fixe le style de bordure des commentaires
function ps set info $key	le nom du champ dinformation à configurer
function ps set info $value	les valeurs du champ dinformation
function ps set info $psdoc	identifiant de ressource postscript retourné par ps_new()
function bool ps set info	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps set info resource $p string $key string $val	assigne les champs d'informations d'un document
function ps set parameter $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps set parameter $name	pour une liste des noms possibles voyez ps_get_parameter()
function ps set parameter $value	la valeur du paramètre
function bool ps set parameter	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps set parameter resource $psdoc string $name string $value	fixe certains param&egrave;tres
function ps set text pos $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps set text pos $y	la position y de la nouvelle position du texte
function ps set text pos $x	la position x de la nouvelle position du texte
function bool ps set text pos	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps set text pos resource $psdoc float $x float $y	fixe la position l'&eacute;criture du texte
function ps setdash $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps setdash $off	la grandeur des espaces entres les pointillés
function ps setdash $on	la grandeur des pointillés
function bool ps setdash	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps setdash resource $psdoc float $on float $off	fixe l'apparence d'une ligne pointill&eacute;e
function ps setflat $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps setflat $value	la valeur value doit être entre 0
function bool ps setflat	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps setflat resource $psdoc float $value	fixe la position &agrave; plat
function ps setfont $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps setfont $size	la taille de la police
function ps setfont $fontid	lidentifiant de la police retourné par ps_findfont()
function bool ps setfont	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps setfont resource $psdoc int $fontid float $size	fixe la police &agrave; utiliser pour la prochaine &eacute;criture
function ps setgray $gray	la valeur doit être entre 0 blanc et 1 noir
function ps setgray $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps setgray	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps setgray resource $psdoc float $gray	fixe la valeur de gris
function ps setlinecap $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps setlinecap $type	le type de fin de ligne
function bool ps setlinecap	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps setlinecap resource $psdoc int $type	fixe l'apparence des fins de ligne
function ps setmiterlimit $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps setmiterlimit $value	le ratio maximal entre la grandeur de langlet et la largeur de la ligne
function bool ps setmiterlimit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps setmiterlimit resource $psdoc float $value	fixe les limites de l'anglet
function ps shading pattern $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps shading pattern $shadingid	lidentifiant de ton créé précédemment avec ps_shading()
function ps shading pattern $optlist	cet argument nest pas utilisé présentement
function int ps shading pattern	lidentifiant du motif ou false si une erreur survient
function int ps shading pattern resource $psdoc int $shadingid string $optlist	cr&eacute;e un motif bas&eacute; sur le ton
function ps shfill $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps shfill $shadingid	lidentifiant de ton créé précédemment avec ps_shading()
function bool ps shfill	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps shfill resource $psdoc int $shadingid	remplit un espace avec un ton
function ps show xy $y	la position y du coin inférieur droit de la boîte entourant le texte
function ps show xy $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps show xy $x	la position x du coin inférieur droit de la boîte entourant le texte
function ps show xy $text	le texte à être affiché
function bool ps show xy	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps show xy resource $psdoc string $text float $x float $y	&eacute;crit du texte &agrave; la position donn&eacute;e
function ps show $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps show $text	le texte à être affiché
function bool ps show	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps show resource $psdoc string $text	&eacute;crit du texte
function ps show2 $text	le texte à afficher
function ps show2 $len	le nombre maximal de caractères à afficher
function ps show2 $psdoc	identifiant de ressource dun fichier postscript tel que retourné par la fonction ps_new()
function bool ps show2	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps show2 resource $psdoc string $text int $len	affiche un texte &agrave; la position courante
function ps string geometry $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps string geometry $text	le texte pour lequel la géométrie sera calculée
function ps string geometry $fontid	lidentifiant de la police à être utilisée
function ps string geometry $size	la taille de la police
function array ps string geometry	un tableau des dimensions de la chaîne de caractères
function array ps string geometry resource $psdoc string $text int $fontid float $size	r&eacute;cup&egrave;re les g&eacute;om&eacute;tries d'une cha&icirc;ne de caract&egrave;res
function ps stringwidth $text	le texte pour lequel la largeur sera calculée
function ps stringwidth $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps stringwidth $fontid	lidentifiant de la police à être utilisée
function ps stringwidth $size	la taille de la police
function float ps stringwidth	largeur de la chaîne de caractères en points
function float ps stringwidth resource $psdoc string $text int $fontid float $size	r&eacute;cup&egrave;re la largeur d'une cha&icirc;ne de caract&egrave;res
function ps stroke $psdoc	identifiant dun fichier postscript retourné par ps_new()
function bool ps stroke	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps stroke resource $psdoc	dessine le chemin courant
function ps symbol name $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps symbol name $ord	le paramètre ord est la position du glyphe dans le vecteur dencodage de la police
function ps symbol name $fontid	lidentifiant de la police à être utilisée
function string ps symbol name	le nom dun glyphe dans la police donnée
function string ps symbol name resource $psdoc int $ord int $fontid	r&eacute;cup&egrave;re le nom d'un glyphe
function ps symbol $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps symbol $ord	la position du glyphe dans le vecteur dencodage de la police
function bool ps symbol	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps symbol resource $psdoc int $ord	&eacute;crit un glyphe
function ps translate $psdoc	identifiant dun fichier postscript retourné par ps_new()
function ps translate $y	la position y de lorigine du système de coordonnées translaté
function ps translate $x	la position x de lorigine du système de coordonnées translaté
function bool ps translate	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ps translate resource $psdoc float $x float $y	fixe une translation
function pspell config personal $file	le dictionnaire personnel
function bool pspell config personal	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pspell config personal int $dictionary_link string $file	choisit le fichier qui contient le dictionnaire personnel
function pspell config repl $file	le fichier doit être accessible en écriture pour lutilisateur invoquant php ex
function bool pspell config repl	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pspell config repl int $dictionary_link string $file	choisit le fichier qui contient les paires de remplacement
function pspell config runtogether $flag	true si deux mots accolés doivent être traités comme un composé valide false sinon
function bool pspell config runtogether	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pspell config runtogether int $dictionary_link bool $flag	consid&egrave;re deux mots accol&eacute;s comme un compos&eacute;
function pspell config save repl $flag	true si les paires de remplacement doivent être sauvées false sinon
function bool pspell config save repl	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool pspell config save repl int $dictionary_link bool $flag	d&eacute;termine s'il faut sauver les paires de remplacement avec le dictionnaire
function pspell new $spelling	ce paramètre est nécessaire pour les langues qui ont plus dune orthographe comme langlais ou le français
function pspell new $language	le paramètre de langue spelling est constitué des deux lettres du codage de langue iso 639 et du codage optionnel de pays iso 3166 séparés par un _
function pspell new $mode	le paramètre mode est le mode de travail du vérificateur dorthographe
function pspell new $jargon	le paramètre jargon contient des informations supplémentaires pour distinguer deux listes de mots qui ont le même marquage de langue et dorthographe
function pspell new $encoding	le paramètre encoding est le type dencodage des mots
function int pspell new	retourne lidentifiant de dictionnaire en cas de succès ou false si une erreur survient
function int pspell new string $language string $spelling string $jargon string $encoding int $mode	charge un nouveau dictionnaire
function putenv $setting	la configuration comme foo=bar
function bool putenv	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool putenv string $setting	fixe la valeur d'une variable d'environnement
function px close $pxdoc	ressource identifiant la base de données paradox telle que retournée par la fonction px_new()
function bool px close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool px close resource $pxdoc	ferme une base de donn&eacute;es paradox
function px date2string $pxdoc	identifiant de ressource de la base de données paradox tel que retourné par la fonction px_new()
function px date2string $format	format similaire au format utilisé par la fonction date()
function px date2string $value	valeur comme stockée dans le champ de la base de données paradox dun type px_field_date
function string px date2string	cette fonction retourne true en cas de succès ou false si une erreur survient
function string px date2string resource $pxdoc int $value string $format	convertit une date en une cha&icirc;ne de caract&egrave;res
function px delete record $pxdoc	identifiant de ressource de base de données paradox tel que retourné par la fonction px_new()
function px delete record $num	le numéro de lenregistrement est un numéro artificiel comptant les enregistrements dans lordre dans les lesquels ils sont stockés en base de données
function bool px delete record	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool px delete record resource $pxdoc int $num	efface une enregistrement depuis une base de donn&eacute;es paradox
function px get schema $pxdoc	identifiant de la ressource de la base de données paradox comme retourné par la fonction px_new()
function px get schema $mode	si le paramètre optionnel mode vaut px_keytolower ou px_keytoupper les clés du tableau retourné seront converties en minuscule ou en majuscule
function array px get schema	retourne le schéma du fichier de base de données en tant que tableau associatif
function array px get schema resource $pxdoc int $mode	retourne le sch&eacute;ma de la base de donn&eacute;es
function px get value $name	name peut être un parmi les suivants : numprimkeys le nombre de clés primaires
function px get value $pxdoc	identifiant de la ressource de la base de données paradox comme retourné par la fonction px_new()
function px get value $numprimkeys	le nombre de clés primaires
function float px get value	retourne la valeur du paramètre ou false si une erreur survient
function float px get value resource $pxdoc string $name	r&eacute;cup&egrave;re une valeur
function px insert record $pxdoc	identifiant de ressource de base de données paradox tel que retourné par la fonction px_new()
function px insert record $data	un tableau associatif ou indexé contenant les valeurs des champs comme retournées par la fonction px_retrieve_record()
function int px insert record	retourne le numéro de lenregistrement inséré ou false en cas derreur
function int px insert record resource $pxdoc array $data	ins&egrave;re un enregistrement dans une base de donn&eacute;es paradox
function resource px new	retourne false si une erreur survient
function resource px new	cr&eacute;e un nouvel objet paradox
function px numfields $pxdoc	identifiant de ressource de base de données paradox tel que retourné par la fonction px_new()
function int px numfields	retourne le nombre de champs dun fichier de base de données paradox
function int px numfields resource $pxdoc	retourne le nombre de champs d'une base de donn&eacute;es paradox
function px numrecords $pxdoc	identifiant de ressource de base de données paradox tel que retourné par la fonction px_new()
function int px numrecords	retourne le nombre denregistrements dun fichier de base de données paradox
function int px numrecords resource $pxdoc	retourne le nombre d'enregistrements d'une base de donn&eacute;es paradox
function px retrieve record $num	le numéro de lenregistrement est un numéro artificiel comptant les enregistrements dans lordre dans les lesquels ils sont stockés en base de données
function px retrieve record $mode	le paramètre optionnel mode peut être px_keytolower ou px_keytoupper afin de convertir les clés en majuscules ou en minuscules
function px retrieve record $pxdoc	identifiant de ressource de base de données paradox comme retourné par la fonction px_new()
function array px retrieve record	retourne lenregistrement numéro num depuis une base de données paradox
function array px retrieve record resource $pxdoc int $num int $mode	retourne un enregistrement depuis une base de donn&eacute;es paradox
function px set blob file $pxdoc	identifiant de ressource de base de données paradox tel que retourné par la fonction px_new()
function px set blob file $filename	le nom du fichier
function bool px set blob file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool px set blob file resource $pxdoc string $filename	d&eacute;finit le fichier depuis lequel les blobs seront lus
function px set parameter $name	suivant le paramètre que vous voulez définir name peut prendre une des valeurs suivantes : tablename le nom de la table comme il est stocké dans len-tête de la base de données
function px set parameter $targetencoding	lencodage pour la sortie
function px set parameter $value	la valeur du paramètre à définir
function px set parameter $tablename	le nom de la table comme il est stocké dans len-tête de la base de données
function px set parameter $pxdoc	identifiant de la ressource de la base de données paradox comme retourné par la fonction px_new()
function px set parameter $inputencoding	lencodage des données dentrées qui seront stockées dans la base de données
function bool px set parameter	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool px set parameter resource $pxdoc string $name string $value	d&eacute;finit un param&egrave;tre
function px set targetencoding $pxdoc	identifiant de ressource de base de données paradox tel que retourné par la fonction px_new()
function px set targetencoding $encoding	lencodage pour la sortie
function bool px set targetencoding	retourne false si lencodage na pû être définie e
function bool px set targetencoding resource $pxdoc string $encoding	d&eacute;finit l'encodage pour les caract&egrave;res des champs obsol&egrave;te
function px set value $name	name peut être un des suivants : numprimkeys le nombre de clés primaires
function px set value $pxdoc	identifiant de la ressource de la base de données comme retourné par la fonction px_new()
function px set value $numprimkeys	le nombre de clés primaires
function bool px set value	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool px set value resource $pxdoc string $name float $value	d&eacute;finit une valeur
function px update record $data	tableau associatif contenant les valeurs des champs comme retournées par la fonction px_retrieve_record()
function px update record $num	le numéro de lenregistrement est un numéro artificiel comptant les enregistrements dans lordre dans les lesquels ils sont stockés en base de données
function px update record $pxdoc	identifiant de ressource de la base de données paradox comme retourné par la fonction px_new()
function bool px update record	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool px update record resource $pxdoc array $data int $num	met &agrave; jour les enregistrements dans une base de donn&eacute;es paradox
function quoted printable encode $str	la chaîne à traiter
function string quoted printable encode	la chaîne encodée
function string quoted printable encode string $str	convertit une cha&icirc;ne 8 bits en une cha&icirc;ne quoted-printable
function quotemeta $str	la chaîne dentrée
function string quotemeta	retourne la chaîne dont les métacaractères ont été protégés ou false si une chaîne vide est fournie dans le paramètre str
function string quotemeta string $str	prot&egrave;ge les m&eacute;tacaract&egrave;res
function rad2deg $number	une valeur en radians
function float rad2deg	léquivalent de number en degrés
function float rad2deg float $number	conversion de radians en degr&eacute;s
function radius add server $hostname	le paramètre hostname spécifie lhôte serveur soit en tant que nom de domaine qualifié soit en tant quadresse ip
function radius add server $port	le port spécifie le port udp à contacter sur le serveur
function radius add server $max_tries	le nombre maximal de requêtes répétées à faire avant déchouer
function radius add server $timeout	le délai limite pour recevoir les réponses du serveur est passé au paramètre timeout sous la forme de seconde
function radius add server $secret	le secret partagé pour lhôte serveur est passé au paramètre secret
function bool radius add server	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool radius add server resource $radius_handle string $hostname int $port string $secret int $timeout int $max_tries	ajoute un serveur
function radius config $file	le chemin vers le fichier de configuration est passé en tant quargument à la fonction radius_config()
function bool radius config	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool radius config resource $radius_handle string $file	demande &agrave; la biblioth&egrave;que de lire un fichier de configuration donn&eacute;
function radius create request $type	le type est radius_access_request ou radius_accounting_request
function bool radius create request	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool radius create request resource $radius_handle int $type	cr&eacute;e une demande de compte ou d'identification
function string radius demangle mppe key	retourne la chaîne ou false si une erreur survient
function string radius demangle mppe key resource $radius_handle string $mangled	d&eacute;rive les cl&eacute;s mppe depuis des donn&eacute;es
function string radius demangle	retourne la chaîne asséchées ou false si une erreur survient
function string radius demangle resource $radius_handle string $mangled	ass&egrave;che des donn&eacute;es
function mixed radius get attr	retourne un tableau associatif contenant le type de lattribut ainsi que les données ou un numéro derreur < = 0
function mixed radius get attr resource $radius_handle	extrait un attribut
function radius get tagged attr data $data	lattribut contenant un tag à décoder
function string radius get tagged attr data	retourne les données de lattribut ou false si une erreur survient
function string radius get tagged attr data string $data	extrait les donn&eacute;es d'un attribut
function array radius get vendor attr	retourne un tableau associatif contenant le type de lattribut le vendeur ainsi que les données ou false si une erreur survient
function array radius get vendor attr string $data	extrait un attribut sp&eacute;cifique au vendeur
function radius put vendor string $radius_handle	la ressource radius
function radius put vendor string $options	un masqe doptions dattribut
function radius put vendor string $vendor	lidentifiant du vendeur
function radius put vendor string $type	le type dattribut
function radius put vendor string $value	la valeur de lattribut
function radius put vendor string $tag	lattribut tag
function bool radius put vendor string	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool radius put vendor string resource $radius_handle int $vendor int $type string $value int $options int $tag	attache un attribut sous la forme d'une cha&icirc;ne &agrave; un vendeur sp&eacute;cifique
function string radius request authenticator	retourne lidentificateur demandé en tant que chaîne de caractères ou false si une erreur survient
function string radius request authenticator resource $radius_handle	retourne l'identifiant demand&eacute;
function range $end	la séquence se termine lorsque la valeur end est atteinte
function range $start	première valeur de la séquence
function range $step	si une valeur est donnée au paramètre step il sera utilisé comme valeur incrémentale entre les éléments de la séquence
function array range	retourne un tableau déléments depuis start jusquà end inclusif
function array range mixed $start mixed $end number $step	cr&eacute;e un tableau contenant un intervalle d'&eacute;l&eacute;ments
function rawurlencode $str	lurl à encoder
function string rawurlencode	retourne une chaîne dont tous les caractères non alphanumériques hormis -_
function string rawurlencode string $str	encode une cha&icirc;ne en url selon la rfc 3986
function readfile $filename	le fichier à lire
function readfile $context	une ressource de contexte
function readfile $use_include_path	vous pouvez utiliser le deuxième paramètre optionnel pour explorer le dossier include_path en passant la valeur de true
function int readfile	retourne le nombre doctets lus depuis le fichier
function int readfile string $filename bool $use_include_path resource $context	affiche un fichier
function readgzfile $filename	le nom du fichier
function readgzfile $use_include_path	vous pouvez définir ce paramètre optionnel à 1 si vous voulez chercher le fichier également dans l include_path
function int readgzfile	retourne le nombre doctets décompressés lus depuis le fichier
function int readgzfile string $filename int $use_include_path	lit tout le fichier compress&eacute;
function readline add history $line	la ligne à ajouter à lhistorique
function bool readline add history	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool readline add history string $line	ajoute une ligne &agrave; l'historique
function readline callback handler install $prompt	le message de prompt
function readline callback handler install $callback	la fonction callback prend un paramètre : lentrée utilisateur retournée
function bool readline callback handler install	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool readline callback handler install string $prompt callable $callback	initialise l'interface et le terminal de rappel de readline affiche le prompt et retourne imm&eacute;diatement
function void readline callback read char	lit un caract&egrave;re et informe l'interface de rappel readline
function bool readline clear history	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool readline clear history	efface l'historique
function readline completion function $function	vous devez fournir le nom dune fonction qui accepte un nom partiel de commande et retourne une liste de fonctions complète possibles
function bool readline completion function	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool readline completion function callable $function	enregistre une fonction de compl&eacute;tion
function array readline list history	retourne un tableau avec la liste de toutes les lignes de commandes de lhistorique
function array readline list history	liste l'historique
function void readline on new line	informe readline que le curseur est pass&eacute; &agrave; une nouvelle ligne
function readline read history $filename	chemin vers le fichier contenant lhistorique des commandes
function bool readline read history	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool readline read history string $filename	lit l'historique
function void readline redisplay	demande &agrave; readline de refaire l'affichage
function array realpath cache get	retourne un tableaux dentrées du cache realpath
function array realpath cache get	r&eacute;cup&egrave;re les entr&eacute;es du cache realpath
function int realpath cache size	retourne la quantité de mémoire utilisée par le cache realpath
function int realpath cache size	r&eacute;cup&egrave;re la taille du cache realpath
function realpath $path	le chemin à vérifier
function string realpath	retourne le chemin canonique absolu ainsi trouvé
function string realpath string $path	retourne le chemin canonique absolu
function recode file $output	un gestionnaire de fichier local pour le paramètre output
function recode file $request	le type de requête recode désiré
function recode file $input	un gestionnaire de fichier local pour le paramètre input
function bool recode file	retourne false en cas déchec et true sinon
function bool recode file string $request resource $input resource $output	recodage de fichier &agrave; fichier en fonction de la demande
function recode string $string	la chaîne de caractères à recoder
function recode string $request	le type de requête recode désiré
function string recode string	retourne la chaîne recodée en cas de succès et false sinon
function string recode string string $request string $string	recode une cha&icirc;ne en fonction de la requ&ecirc;te
function register shutdown function $parameter	il est possible de passer des paramètres aux fonctions dextinction en configurant ces paramètres supplémentaires
function register shutdown function $callback	la fonction de rappel à enregistrer
function void register shutdown function callable $callback mixed $parameter	enregistre une fonction de rappel pour ex&eacute;cution &agrave; l'extinction
function rename function $new_name	le nouveau nom pour la fonction original_name
function rename function $original_name	le nom original de la fonction
function bool rename function	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool rename function string $original_name string $new_name	renomme une fonction int&eacute;gr&eacute;e dans la table des fonctions globales
function reset $array	le tableau dentrée
function mixed reset	retourne la valeur du premier élément du tableau ou false si le tableau est vide
function mixed reset array $array	remet le pointeur interne de tableau au d&eacute;but
function bool restore error handler	cette fonction retourne toujours true
function bool restore error handler	r&eacute;active l'ancienne fonction de gestion des erreurs
function rewind $handle	le pointeur de fichier doit être valide et avoir été correctement ouvert par fopen()
function bool rewind	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool rewind resource $handle	replace le pointeur de fichier au d&eacute;but
function rewinddir $dir_handle	la ressource de dossier ouverte précédemment avec opendir()
function void rewinddir resource $dir_handle	retourne &agrave; la premi&egrave;re entr&eacute;e du dossier
function rmdir $dirname	le chemin vers le dossier
function rmdir $context	note : le support de contexte a été ajouté en php 5
function bool rmdir	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool rmdir string $dirname resource $context	efface un dossier
function rpm close $rpmr	une ressource de pointeur de fichier ouverte par rpm_open()
function bool rpm close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool rpm close resource $rpmr	ferme un fichier rpm
function rpm get tag $rpmr	une ressource de pointeur de fichier correctement ouverte par rpm_open()
function rpm get tag $tagnum	le numéro du tag à récupérer de len-tête rpm
function mixed rpm get tag	la valeur de retour peut être de type varié dépendamment du paramètre tagnum spécifié à la fonction
function mixed rpm get tag resource $rpmr int $tagnum	r&eacute;cup&eacute;ration d'un tag de l'en-t&ecirc;te d'un fichier rpm
function rpm open $filename	le nom du fichier que vous souhaitez ouvrir en tant que fichier rpm
function resource rpm open	si la fonction réussit alors rpm_open() retournera une ressource de pointeur de fichier du nouveau fichier ouvert
function resource rpm open string $filename	ouvre un fichier rpm
function rrd create $options	options pour la création rrd - listes de chaînes
function rrd create $filename	nom de fichier du nouveau fichier rrd
function bool rrd create	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool rrd create string $filename array $options	cr&eacute;e un fichier de base de donn&eacute;es rrd
function string rrd error	le dernier message derreur
function string rrd error	r&eacute;cup&egrave;re le message de la derni&egrave;re erreur survenue
function rrd fetch $options	tableau doptions pour la spécification de la résolution
function rrd fetch $filename	nom de fichier de la base de données rrd
function array rrd fetch	retourne des informations sur les données de graphique récupérées
function array rrd fetch string $filename array $options	r&eacute;cup&egrave;re les donn&eacute;es pour le graphique
function rrd first $raaindex	le numéro dindex du rra à examiner
function rrd first $file	nom de fichier de la base de données rrd
function int rrd first	timestamp unix ou false si une erreur survient
function int rrd first string $file int $raaindex	r&eacute;cup&egrave;re le timestamp du premier &eacute;chantillon depuis le fichier rrd
function rrd graph $options	options pour la génération de limage
function rrd graph $filename	le nom du fichier dans lequel le graphique sera redirigé
function array rrd graph	tableau contenant les informations sur limage générée ou false si une erreur survient
function array rrd graph string $filename array $options	cr&eacute;e une image depuis des donn&eacute;es
function rrd last $filename	nom de fichier de la base de données rrd
function int rrd last	timestamp unix des données les plus récentes de la base de données rrd
function int rrd last string $filename	r&eacute;cup&egrave;re le timestamp unix du premier &eacute;chantillon
function rrd lastupdate $file	nom de fichier de la base de données rrd
function array rrd lastupdate	tableau dinformations sur la dernière mise à jour ou false si une erreur survient
function array rrd lastupdate string $filename	r&eacute;cup&egrave;re les informations sur les derni&egrave;res donn&eacute;es mises &agrave; jour
function rrd restore $rrd_file	nom du fichier de la base de données rrd qui sera restauré
function rrd restore $xml_file	nom de fichier xml de la sauvegarde du fichier original de base de données rrd
function rrd restore $options	tableau doptions pour la restauration
function bool rrd restore	retourne true en cas de succès false sinon
function bool rrd restore string $xml_file string $rrd_file array $options	restaure le fichier rrd depuis une sauvegarde xml
function rrd update $options	options pour la mise à jour de la base de données rrd - liste de chaînes
function rrd update $filename	nom du fichier de la base de données rrd
function bool rrd update	retourne true en cas de succès ou false si une erreur survient
function bool rrd update string $filename array $options	met &agrave; jour une base de donn&eacute;es rrd
function string rrd version	une chaîne de caractères contenant le numéro de version de la bibliothèque rrdtool i
function string rrd version	r&eacute;cup&egrave;re les informations de version de la biblioth&egrave;que rrdtool
function rrd xport $options	tableau doptions pour lexportation ; reportez-vous à la page man correspondante
function array rrd xport	tableau contenant les informations du fichier de base de données rrd ou false si une erreur survient
function array rrd xport array $options	exporte les informations d'une base de donn&eacute;es
function rsort $sort_flags	vous pouvez modifier le comportement de cette fonction en utilisant le paramètre optionnel sort_flags
function rsort $array	le tableau dentrée
function bool rsort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool rsort array $array int $sort_flags	trie un tableau en ordre inverse
function rtrim $str	la chaîne dentrée
function rtrim $character_mask	il est aussi possible de spécifier les caractères à supprimer en utilisant le paramètre character_mask
function string rtrim	retourne la chaîne modifiée
function string rtrim string $str string $character_mask	supprime les espaces ou d'autres caract&egrave;res de fin de cha&icirc;ne
function runkit import $filename	nom du fichier pour importer les définitions de fonctions et de classe
function runkit import $flags	comparaison de bits ou or de la famille de constantes runkit_import_*
function bool runkit import	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool runkit import string $filename int $flags	traite un fichier php important fonctions et d&eacute;finitions de classes &eacute;crasement o&ugrave; applicable
function runkit lint file $filename	fichier contenant du code php à être vérifié
function bool runkit lint file	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool runkit lint file string $filename	v&eacute;rifie la syntaxe php d'un fichier sp&eacute;cifi&eacute;
function runkit sandbox output handler $sandbox	instance de la classe runkit_sandbox sur laquelle spécifier la gestion des sorties
function runkit sandbox output handler $callback	nom dune fonction qui sattend à un paramètre
function mixed runkit sandbox output handler	retourne le nom de la fonction de rappel précédemment définie en tant que gestion des sorties ou false si aucun gestionnaire navait été précédemment défini
function mixed runkit sandbox output handler object $sandbox mixed $callback	sp&eacute;cifie une fonction &agrave; capturer et / ou traiter la sortie &agrave; partir d'un runkit sandbox
function scandir $directory	le dossier qui sera analysé
function scandir $context	pour une description du paramètre context référez-vous à la section flux de données du manuel
function scandir $sorting_order	par défaut le tri est en ordre alphabétique croissant
function array scandir	retourne un tableau des fichiers en cas de succès ou false en cas déchec
function array scandir string $directory int $sorting_order resource $context	liste les fichiers et dossiers dans un dossier
function sem acquire $sem_identifier	sem_identifier est une ressource de sémaphore obtenue de la fonction sem_get()
function bool sem acquire	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sem acquire resource $sem_identifier	r&eacute;serve un s&eacute;maphore
function sem get $auto_release	le paramètre optionnel auto_release spécifie si le sémaphore doit être automatiquement libéré à la fermeture
function sem get $max_acquire	le nombre de processus qui peuvent réserver simultanément le sémaphore est précisé dans le paramètre max_acquire
function sem get $perm	les permissions du sémaphore
function resource sem get	retourne une ressource de sémaphore en cas de succès et false en cas derreur
function resource sem get int $key int $max_acquire int $perm int $auto_release	retourne un identifiant de s&eacute;maphore
function sem release $sem_identifier	une ressource représentant un sémaphore telle que retournée par la fonction sem_get()
function bool sem release	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sem release resource $sem_identifier	lib&egrave;re un s&eacute;maphore
function serialize $value	la valeur à linéariser
function string serialize	retourne une chaîne contenant une représentation linéaire de value pour stockage
function string serialize mixed $value	g&eacute;n&egrave;re une repr&eacute;sentation stockable d'une valeur
function bool session abort	abandonne les changements sur le tableau de session et termine la session
function session cache expire $new_cache_expire	si new_cache_expire est fourni la configuration actuelle de cache expire sera remplacée par new_cache_expire
function int session cache expire	retourne la configuration courante de session
function int session cache expire string $new_cache_expire	retourne la configuration actuelle du d&eacute;lai d'expiration du cache
function session decode $data	les données encodées
function bool session decode	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool session decode string $data	d&eacute;code les donn&eacute;es encod&eacute;es de session
function array session get cookie params	retourne un tableau qui contient les éléments suivants : lifetime : durée de vie du cookie
function array session get cookie params	lit la configuration du cookie de session
function session id $id	si id est fourni il remplacera lidentifiant courant de session
function string session id	session_id() retourne lidentifiant de session pour la session courante ou une chaîne vide sil ny a pas de session courante aucun identifiant de session nexiste
function string session id string $id	lit et / ou modifie l'identifiant courant de session
function session is registered $name	le nom de la variable
function bool session is registered	session_is_registered() retourne true si la variable de nom name fait partie de la session courante false sinon
function bool session is registered string $name	v&eacute;rifie si une variable est enregistr&eacute;e dans la session
function session pgsql get error $with_error_message	fixé à true le message derreur littéral pour chaque erreur est aussi retourné
function array session pgsql get error	le nombre derreurs est retourné comme array
function array session pgsql get error bool $with_error_message	retourne le nombre d'erreurs et le dernier message d'erreur
function bool session pgsql reset	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool session pgsql reset	remet la connexion &agrave; la session des serveurs de base de donn&eacute;es
function session regenerate id $delete_old_session	si lon doit effacer lancien fichier de session associé ou pas
function bool session regenerate id	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool session regenerate id bool $delete_old_session	remplace l'identifiant de session courant par un nouveau
function session register $name	le nom de la variable ou du tableau contenant les noms des variables ou dautres tableaux
function bool session register	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool session register mixed $name	enregistre une variable globale dans une session
function session save path $path	chemin des données de session
function string session save path	retourne le chemin du dossier courant utilisé pour y stocker les données
function string session save path string $path	lit et / ou modifie le chemin de sauvegarde des sessions
function session set cookie params $httponly	si true php va tenter denvoyer loption httponly lors de la configuration du cookie
function session set cookie params $lifetime	la durée de vie du cookie en secondes
function session set cookie params $secure	si true le cookie ne sera envoyé que sur une connexion sécurisée
function session set cookie params $domain	le domaine du cookie par exemple www
function session set cookie params $path	le chemin dans le domaine où le cookie sera accessible
function void session set cookie params int $lifetime string $path string $domain bool $secure bool $httponly	modifie les param&egrave;tres du cookie de session
function bool session start	retourne true si une session a pu être démarrée avec succès et false sinon
function bool session start	d&eacute;marre une nouvelle session ou reprend une session existante
function int session status	php_session_disabled si les sessions sont désactivées
function int session status	d&eacute;termine le statut de la session courante
function session unregister $name	le nom de la variable
function bool session unregister	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool session unregister string $name	supprime une variable de la session
function void session unset	d&eacute;truit toutes les variables d'une session
function void session write close	&eacute;crit les donn&eacute;es de session et ferme la session
function set error handler $errfile	le troisième paramètre optionnel errfile contient le nom du fichier dans lequel lerreur a été identifiée
function set error handler $error_handler	une fonction de rappel avec la signature suivante
function set error handler $errline	le quatrième paramètre optionnel errline contient le numéro de ligne à laquelle lerreur a été identifiée
function set error handler $errcontext	le cinquième paramètre optionnel errcontext est un tableau qui pointe sur la table des symboles actifs lors de lerreur
function set error handler $errno	le premier paramètre errno contient le niveau derreur sous la forme dun entier
function set error handler $error_types	sert de masque pour appeler la fonction error_handler de la même façon que loption de configuration error_reporting contrôle les erreurs qui sont affichées
function set error handler $errstr	le second paramètre errstr contient le message derreur sous forme de chaîne
function mixed set error handler	retourne une chaîne contenant le dernier gestionnaire derreurs sil existe
function mixed set error handler callable $error_handler int $error_types	sp&eacute;cifie une fonction utilisateur comme gestionnaire d'erreurs
function set exception handler $exception_handler	nom de la fonction à appeler lorsquune exception qui na pu être attrapée survient
function callable set exception handler	retourne le nom du gestionnaire précédemment défini ou null en cas derreur
function callable set exception handler callable $exception_handler	d&eacute;finit une fonction utilisateur de gestion d'exceptions
function set include path $new_include_path	la nouvelle valeur pour la directive de configuration include_path
function string set include path	retourne lancienne valeur de include_path en cas de succès ou false si une erreur survient
function string set include path string $new_include_path	modifie la valeur de la directive de configuration include_path
function set magic quotes runtime $new_setting	0 loption est désactivée 1 loption est activée
function bool set magic quotes runtime	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool set magic quotes runtime bool $new_setting	active / d&eacute;sactive l'option magic_quotes_runtime
function setcookie $path	le chemin sur le serveur sur lequel le cookie sera disponible
function setcookie $value	la valeur du cookie
function setcookie $domain	le domaine pour lequel le cookie est disponible
function setcookie $name	le nom du cookie
function setcookie $secure	indique si le cookie doit uniquement être transmis à travers une connexion sécurisée https depuis le client
function setcookie $expire	le temps après lequel le cookie expire
function setcookie $httponly	lorsque ce paramètre vaut true le cookie ne sera accessible que par le protocole http
function bool setcookie	si quelque chose a été envoyé sur la sortie standard avant lappel à cette fonction setcookie() échouera et retournera false
function bool setcookie string $name string $value int $expire string $path string $domain bool $secure bool $httponly	envoie un cookie
function setlocale $category	category est une constante ou une chaîne qui spécifie la catégorie de fonctions affectées par la configuration de localisation : lc_all pour toutes les constantes suivantes lc_collate pour la comparaison de chaînes de caractères
function setlocale $locale	si locale est null ou la chaîne vide les noms de locales seront pris dans lenvironnement à partir des variables de même nom que les catégories ci-dessus ou depuis lang
function setlocale	( chaîne ou tableau de paramètres optionnel à essayer comme configuration de la locale jusquà réussite
function string setlocale	retourne la nouvelle configuration locale ou false si la localisation nest pas implémentée sur votre plate-forme si la variable de localisation nexiste pas ou si la catégorie spécifiée nest pas valide
function string setlocale int $category string $locale	modifie les informations de localisation
function setproctitle $title	le titre à utiliser comme titre du processus
function void setproctitle string $title	d&eacute;finit le titre du processus
function bool setrawcookie	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool setrawcookie string $name string $value int $expire string $path string $domain bool $secure bool $httponly	envoie un cookie sans encoder sa valeur en url
function setthreadtitle $title	le titre à utiliser comme titre du thread
function bool setthreadtitle	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool setthreadtitle string $title	d&eacute;finit le titre du thread
function shell exec $cmd	la commande à exécuter
function string shell exec	la sortie de lexécution de la commande ou null si une erreur survient ou si la commande ne produit aucune sortie
function string shell exec string $cmd	ex&eacute;cute une commande via le shell et retourne le r&eacute;sultat sous forme de cha&icirc;ne
function shm attach $memsize	la taille mémoire
function shm attach $perm	les permissions optionnelles
function shm attach $key	un identifiant numérique de la mémoire partagée
function resource shm attach	retourne un identifiant de mémoire partagée
function resource shm attach int $key int $memsize int $perm	cr&eacute;e ou ouvre un segment de m&eacute;moire partag&eacute;e
function shm get var $variable_key	la clé de la variable
function shm get var $shm_identifier	segment de mémoire partagée obtenu depuis la fonction shm_attach()
function mixed shm get var	retourne la variable correspondant à la clé donnée
function mixed shm get var resource $shm_identifier int $variable_key	lit une variable dans la m&eacute;moire partag&eacute;e
function shm remove var $shm_identifier	lidentifiant de la mémoire partagée tel que retourné par la fonction shm_attach()
function shm remove var $variable_key	la clé de la variable
function bool shm remove var	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool shm remove var resource $shm_identifier int $variable_key	efface une variable de la m&eacute;moire partag&eacute;e
function shm remove $shm_identifier	lidentifiant de mémoire partagée tel que retourné par la fonction shm_attach()
function bool shm remove	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool shm remove resource $shm_identifier	supprime un segment de m&eacute;moire partag&eacute;e sous unix
function shmop close $shmid	identifiant de mémoire partagée créé par shmop_open()
function void shmop close int $shmid	ferme un bloc de m&eacute;moire partag&eacute;e
function shmop delete $shmid	identifiant de mémoire partagée créé par shmop_open()
function bool shmop delete	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool shmop delete int $shmid	d&eacute;truit un bloc de m&eacute;moire partag&eacute;e
function shmop open $size	la taille du bloc mémoire partagé que vous voulez créer en octets
function shmop open $flags	vous pouvez utiliser : a pour accès utilise shm_rdonly pour shmat utilisez cette option pour ouvrir un bloc déjà existant en lecture seule
function shmop open $key	identifiant système pour le bloc de mémoire partagé
function shmop open $mode	les permissions que vous donnez à ce bloc
function int shmop open	en cas de succès shmop_open() retourne un identifiant que vous pouvez utiliser pour accéder à la mémoire que vous venez de créer
function int shmop open int $key string $flags int $mode int $size	cr&eacute;e ou ouvre un bloc de m&eacute;moire partag&eacute;e
function shmop read $count	le nombre doctets à lire
function shmop read $shmid	lidentifiant du bloc mémoire partagé créé par la fonction shmop_open()
function shmop read $start	position depuis laquelle on doit commencer à lire
function string shmop read	retourne les données ou false si une erreur survient
function string shmop read int $shmid int $start int $count	lit des donn&eacute;es &agrave; partir d'un bloc
function shmop write $offset	spécifie la position à partir de laquelle les données doivent être écrites dans la mémoire partagée
function shmop write $shmid	lidentifiant du bloc mémoire partagé créé par la fonction shmop_open()
function shmop write $data	une chaîne à écrire dans le bloc de la mémoire partagée
function int shmop write	la taille des données écrites ou false si une erreur survient
function int shmop write int $shmid string $data int $offset	&eacute;crire dans un bloc de m&eacute;moire partag&eacute;e
function simplexml import dom $node	un élément dom
function simplexml import dom $class_name	vous pouvez utiliser ce paramètre optionnel afin que simplexml_load_string() retourne un objet de la classe spécifiée
function SimpleXMLElement simplexml import dom	retourne un objet simplexmlelement ou false si une erreur survient
function SimpleXMLElement simplexml import dom DOMNode $node string $class_name	construit un objet simplexmlelement &agrave; partir d'un objet dom
function simplexml load file $ns	préfixe ou luri de lespace de noms
function simplexml load file $is_prefix	true si ns est un préfixe false si cest luri ; par défaut false
function simplexml load file $class_name	vous pouvez utiliser ce paramètre optionnel et ainsi la fonction simplexml_load_file() retournera un objet de la classe spécifiée
function simplexml load file $options	depuis php 5
function simplexml load file $filename	chemin vers le fichier xml note : libxml 2 supprime la protection des caractères des uri alors si vous voulez passer par exemple b & c comme paramètre uri à a vous devez appeler simplexml_load_file( rawurlencode( http: / / example
function SimpleXMLElement simplexml load file	retourne un objet de la classe simplexmlelement dont les propriétés contiennent les données du document xml ou false si une erreur survient
function SimpleXMLElement simplexml load file string $filename string $class_name int $options string $ns bool $is_prefix	convertit un fichier xml en objet
function bool snmp get quick print	retourne true si quick_print est actif false sinon
function bool snmp get quick print	lit la valeur courante de l'option quick_print de la biblioth&egrave;que ucd
function snmp set enum print $enum_print	vu que la valeur est interprétée comme un booléen par la bibliothèque net-snmp library il peut valoir 0 ou 1
function bool snmp set enum print int $enum_print	retourne toutes les valeurs qui sont des &eacute;num&eacute;rations avec leur valeur d'&eacute;num&eacute;ration au lieu de l'entier
function void snmp set oid numeric print int $oid_format	d&eacute;finit le format de sortie de l'oid
function bool snmp set quick print bool $quick_print	&eacute;crit la valeur courante de l'option quick_print de la biblioth&egrave;que ucd snmp
function snmp2 get $retries	le nombre de tentative dans le cas où le délai dexpiration survient
function snmp2 get $timeout	le nombre de microsecondes avant le premier délai dexpiration
function snmp2 get $host	lagent snmp
function snmp2 get $object_id	lidentifiant de lobjet snmp
function snmp2 get $community	la communauté de lecture
function string snmp2 get	retourne la valeur de lobjet snmp en cas de succès ou false si une erreur survient
function string snmp2 get string $host string $community string $object_id string $timeout string $retries	r&eacute;cup&egrave;re un objet snmp
function snmp2 getnext $retries	le nombre de tentative dans le cas où le délai dexpiration survient
function snmp2 getnext $timeout	le nombre de microsecondes avant le premier délai dexpiration
function snmp2 getnext $community	la communauté de lecture
function snmp2 getnext $host	le nom dhôte de lagent snmp serveur
function snmp2 getnext $object_id	lidentifiant de lobjet snmp qui précède celui voulu
function string snmp2 getnext	retourne la valeur de lobjet snmp en cas de succès ou false si une erreur survient
function string snmp2 getnext string $host string $community string $object_id string $timeout string $retries	r&eacute;cup&egrave;re l'objet snmp qui suit imm&eacute;diatement l'identifiant de l'objet fourni
function snmp2 walk $timeout	le nombre de microsecondes avant le premier délai dexpiration
function snmp2 walk $community	la communauté de lecture
function snmp2 walk $retries	le nombre de tentatives dans le cas où un délai dexpiration survient
function snmp2 walk $host	lagent snmp serveur
function snmp2 walk $object_id	si null object_id sera la racine de larbre des objets snmp et tous les objets de cet arbre seront retournés sous la forme dun tableau
function array snmp2 walk	retourne un tableau de valeurs dobjet snmp en commençant par lobjet object_id ou false si une erreur survient
function array snmp2 walk string $host string $community string $object_id string $timeout string $retries	r&eacute;cup&egrave;re tous les objets snmp depuis un agent
function snmpset $community	la communauté de lecture
function snmpset $object_id	lidentifiant de lobjet snmp
function snmpset $host	le nom dhôte de lagent snmp serveur
function snmpset $retries	le nombre dessais avant datteindre le délai maximal dattente
function snmpset $timeout	le nombre de microsecondes depuis le premier timeout
function snmpset $type	le mib définit le type de chaque identifiant dobjets
function snmpset $value	la nouvelle valeur
function bool snmpset	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool snmpset string $host string $community string $object_id string $type mixed $value int $timeout int $retries	d&eacute;finit la valeur d'un objet snmp
function snmpwalk $object_id	si null object_id est pris comme racine des objets snmp et tous les objets de cet arbre sont retournés sous la forme dun tableau
function snmpwalk $hostname	lagent snmp serveur
function snmpwalk $community	la communauté de lecture
function snmpwalk $timeout	le nombre de microsecondes depuis le premier timeout
function snmpwalk $retries	le nombre de tentative dans le cas où le délai dexpiration survient
function array snmpwalk	retourne un tableau de valeurs de lobjet snmp en commençant par object_id ou false si une erreur survient
function array snmpwalk string $hostname string $community string $object_id int $timeout int $retries	re&ccedil;oit tous les objets snmp d'un agent
function snmpwalkoid $object_id	si null object_id est pris comme racine des objets snmp et tous les objets de cet arbre sont retournés sous la forme dun tableau
function snmpwalkoid $community	la communauté de lecture
function snmpwalkoid $timeout	le nombre de microsecondes depuis le premier timeout
function snmpwalkoid $hostname	lagent snmp
function snmpwalkoid $retries	le nombre de tentative dans le cas où le délai dattente maximal survient
function array snmpwalkoid	retourne un tableau associatif contenant les identifiants des objets ainsi que leurs valeurs respectives à partir de object_id ou false si une erreur survient
function array snmpwalkoid string $hostname string $community string $object_id int $timeout int $retries	demande d'informations d'arbre sur une entit&eacute; du r&eacute;seau
function socket accept $socket	une ressource de socket valide créée par la fonction socket_create()
function resource socket accept	retourne une nouvelle ressource de socket en cas de succès ou false en cas derreur
function resource socket accept resource $socket	accepte une connexion sur un socket
function socket bind $port(optionnel)	le paramètre port est uniquement utilisé lors de la liaison à un socket af_inet et désigne le port sur lequel écouter pour une connexion
function socket bind $address	si le socket est de la famille af_inet le paramètre address est une ip numérique i
function socket bind $socket	une ressource de socket valide créée par la fonction socket_create()
function bool socket bind	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool socket bind resource $socket string $address int $port	lie un nom &agrave; un socket
function socket close $socket	une ressource de socket valide créée par la fonction socket_create() ou la fonction socket_accept()
function void socket close resource $socket	ferme un socket
function socket connect $address	le paramètre address est soit une adresse valide ipv4 e
function socket connect $port	le paramètre port nest utilisé et mandaté que lors dune connexion à un socket af_inet ou af_inet6 et désigne le port de lhôte distant sur lequel la connexion doit être effectuée
function bool socket connect	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool socket connect resource $socket string $address int $port	cr&eacute;e une connexion sur un socket
function socket create pair $fd	une référence vers un tableau dans lequel les deux ressources de sockets seront insérées
function socket create pair $type	le paramètre type spécifie le type de communication à utiliser par le socket
function socket create pair $domain	le paramètre domain spécifie la famille du protocole à utiliser par le socket
function socket create pair $protocol	le paramètre protocol définit un protocole spécifique dans le domaine spécifié domain pour être utilisé lors dune communication sur un socket retourné
function bool socket create pair	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool socket create pair int $domain int $type int $protocol array $fd	cr&eacute;e une paire de sockets identiques et les stocke dans un tableau
function socket create $protocol	le paramètre protocol définit le protocole spécifique pour le domaine domain à utiliser lors de communications sur un socket retourné
function socket create $type	le paramètre type sélectionne le type de communication à utiliser par le socket
function socket create $domain	le paramètre domain spécifie la famille de protocoles à utiliser par le socket
function resource socket create	socket_create() retourne une ressource de socket en cas de succès et false sinon
function resource socket create int $domain int $type int $protocol	cr&eacute;e un socket
function socket get option $level	le paramètre level spécifie la couche de protocole de loption
function socket get option $optname	options disponibles pour les sockets option description type so_debug reporte si les informations de déboguage sont enregistrées ou pas
function socket get option $socket	une ressource de socket valide créée par la fonction socket_create() ou la fonction socket_accept()
function mixed socket get option	retourne la valeur de loption fournie ou false si une erreur survient
function mixed socket get option resource $socket int $level int $optname	lit les options du socket
function socket last error $socket	une ressource de socket valide créée par la fonction socket_create()
function int socket last error	retourne le code erreur associé au socket
function int socket last error resource $socket	lit la derni&egrave;re erreur g&eacute;n&eacute;r&eacute;e par un socket
function socket listen $backlog	un nombre maximum de backlog connexions seront mises en attente de traitement
function socket listen $socket	une ressource de socket valide créée par la fonction socket_create()
function bool socket listen	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool socket listen resource $socket int $backlog	attend une connexion sur un socket
function socket recv $len	jusquà len octets seront lus depuis lhôte distant
function socket recv $buf	les données reçues seront transmises dans buf
function socket recv $flags	la valeur de flags peut être une combinaison des drapeaux suivants groupés au moyen de lopérateur binaire or |
function socket recv $socket	socket doit être une ressource de socket précédemment créée par socket_create()
function int socket recv	socket_recv() retourne le nombre doctets reçus ou false si une erreur est apparue
function int socket recv resource $socket string $buf int $len int $flags	re&ccedil;oit des donn&eacute;es d'un socket connect&eacute;
function socket select $tv_sec	les paramètres tv_sec et tv_usec ensembles forment le paramètre timeout durée de vie
function socket select $write	les sockets listés dans write seront surveillés en écriture : pour voir si une écriture ne va pas bloquer
function socket select $except	les sockets listés dans except seront surveillés pour leurs exceptions
function int socket select	en cas de succès socket_select() retourne le nombre de sockets contenues dans les tableaux modifiés
function int socket select array $read array $write array $except int $tv_sec int $tv_usec	ex&eacute;cute l'appel syst&egrave;me select() sur un tableau de sockets avec une dur&eacute;e d'expiration
function socket sendto $buf	les données à envoyer seront prises depuis le buffer buf
function socket sendto $addr	ladresse ip de lhôte distant
function socket sendto $len	len octets depuis buf doivent être envoyés
function socket sendto $flags	peut être une combinaison des drapeaux suivants joints par un ou binaire |
function socket sendto $socket	une ressource de socket valide créée par la fonction socket_create()
function socket sendto $port	port est le numéro de port sur lequel les données doivent être envoyées
function int socket sendto	socket_sendto() retourne le nombre doctets envoyés sur lhôte distant ou false si une erreur survient
function int socket sendto resource $socket string $buf int $len int $flags string $addr int $port	envoie un message &agrave; un socket qu'il soit connect&eacute; ou pas
function socket set block $socket	une ressource de socket valide créée par la fonction socket_create() ou la fonction socket_accept()
function bool socket set block	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool socket set block resource $socket	met le socket en mode bloquant
function socket set nonblock $socket	une ressource de socket valide créée par la fonction socket_create() ou la fonction socket_accept()
function bool socket set nonblock	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool socket set nonblock resource $socket	s&eacute;lectionne le mode non bloquant d'un pointeur de fichier
function socket strerror $errno	une numéro derreur de socket valide comme produit par la fonction socket_last_error()
function string socket strerror	retourne le message derreur associé avec le paramètre errno
function string socket strerror int $errno	retourne une cha&icirc;ne d&eacute;crivant un message d'erreur
function socket write $buffer	le buffer à écrire
function socket write $length	le paramètre optionnel length peut spécifier explicitement la taille des données qui doivent être écrites
function int socket write	socket_write() retourne le nombre doctets qui ont pu être écrits dans le socket ou false si une erreur survient
function int socket write resource $socket string $buffer int $length	&eacute;crit dans un socket
function string solr get version	retourne un chaîne de caractères en cas de succès et false si une erreur survient
function string solr get version	retourne la version courante de l'extension solr utilis&eacute;e par apache
function sort $array	le tableau dentrée
function bool sort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sort array $array int $sort_flags	trie un tableau
function soundex $str	la chaîne dentrée
function string soundex	retourne la clé soundex sous la forme dune chaîne de caractères
function string soundex string $str	calcule la cl&eacute; soundex
function spl autoload call $class_name	le nom de la classe cherchée
function void spl autoload call string $class_name	essai toutes les fonctions __autoload() enregistr&eacute;es pour charger la classe demand&eacute;e
function spl autoload extensions $file_extensions	lorsquappelée sans argument elle retourne simplement la liste courante des extensions séparées par une virgule
function string spl autoload extensions	une liste dextensions de fichier délimitée par une virgule pour spl_autoload()
function string spl autoload extensions string $file_extensions	enregistre et retourne l'extension du fichier par d&eacute;faut pour spl_autoload
function spl autoload register $prepend	si ce paramètre vaut true spl_autoload_register() ajoutera la fonction au début de la pile de lautoloader au lieu de lajouter à la fin de la pile
function spl autoload register $throw	ce paramètre spécifie si spl_autoload_register() doit lancer des exceptions lorsque le paramètre autoload_function na pu être enregistré
function spl autoload register $autoload_function	la fonction __autoload() à enregistrer
function bool spl autoload register	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool spl autoload register callable $autoload_function bool $throw bool $prepend	enregistre une fonction comme __autoload()
function spl autoload $class_name	le nom de la classe et de lespace de noms en minuscule à instancier
function spl autoload $file_extensions	par défaut la fonction vérifie tous les chemins dinclusion qui pourraient contenir des noms de fichier ajoutés par le nom de classe utilisant les extensions
function void spl autoload string $class_name string $file_extensions	impl&eacute;mentation par d&eacute;faut d'__autoload()
function array spl classes	retourne un tableau contenant les classes spl actuellement disponibles
function array spl classes	retourne les classes spl disponibles
function spl object hash $object	nimporte quel objet
function string spl object hash	une chaîne de caractères unique pour chaque objet existant et qui sera toujours identique pour chaque objet
function string spl object hash object $obj	retourne l'identifiant de hashage pour un objet donn&eacute;
function sql regcase $string	la chaîne dentrée
function string sql regcase	sql_regcase() retourne une expression rationnelle valide qui acceptera la chaîne string et toutes les variantes majuscule / minuscule possibles de cette chaîne
function string sql regcase string $string	pr&eacute;pare une expression rationnelle pour effectuer une recherche insensible &agrave; la casse
function sqlite close $dbhandle	la ressource de base de données sqlite; retournée par sqlite_open() lorsquutilisée de manière procédurale
function void sqlite close resource $dbhandle	ferme la connexion &agrave; sqlite
function sqlite error string $error_code	le code erreur à utiliser qui peut être passé depuis la fonction sqlite_last_error()
function string sqlite error string	retourne une description du code erreur error_code sous la forme dune chaîne de caractères
function string sqlite error string int $error_code	retourne le message d'erreur sqlite
function sqlite escape string $item	la chaîne de caractères à échapper
function string sqlite escape string	retourne une chaîne de caractères échappée afin de lutiliser dans des requêtes sqlite sql
function string sqlite escape string string $item	prot&egrave;ge une cha&icirc;ne de caract&egrave;res pour utilisation avec sqlite
function sqlite factory $error_message	passée par référence et est affectée afin de contenir la description du message derreur qui explique pourquoi la base de données ne pouvait pas être ouverte sil y avait une erreur
function sqlite factory $filename	le nom du fichier de la base de données sqlite
function sqlite factory $mode	le mode du fichier
function SQLiteDatabase sqlite factory	retourne un objet sqlitedatabase en cas de succès null en cas derreur
function SQLiteDatabase sqlite factory string $filename int $mode string $error_message	ouvre une base sqlite et cr&eacute;e un objet pour elle
function string sqlite libencoding	retourne lencodage de la bibliothèque
function string sqlite libencoding	retourne l'encodage utilis&eacute; par la biblioth&egrave;que sqlite
function string sqlite libversion	retourne la version de la bibliothèque sous la forme dune chaîne de caractères
function string sqlite libversion	retourne la version de la biblioth&egrave;que sqlite
function sqlite udf decode binary $data	les données encodées avec les fonctions sqlite_udf_encode_binary() ou sqlite_escape_string() et qui doivent être décodées
function string sqlite udf decode binary	la chaîne de caractères décodée
function string sqlite udf decode binary string $data	d&eacute;code des donn&eacute;es binaires pass&eacute;es &agrave; une udf sqlite
function sqlsrv cancel $stmt	la ressource de la requête à annuler
function bool sqlsrv cancel	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sqlsrv cancel resource $stmt	annule une requ&ecirc;te
function sqlsrv client info $conn	la connexion sur laquelle on souhaite des informations
function array sqlsrv client info	retourne un tableau associatif dont les clés sont décrites dans la table ci-dessous
function array sqlsrv client info resource $conn	retourne les informations sur le client ainsi que sur la connexion sp&eacute;cifi&eacute;e
function sqlsrv close $conn	la connexion à fermer
function bool sqlsrv close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sqlsrv close resource $conn	cl&ocirc;ture une connexion &eacute;tablie et lib&egrave;re les ressources associ&eacute;es
function sqlsrv commit $conn	la connexion sur laquelle la transaction va être validée
function bool sqlsrv commit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sqlsrv commit resource $conn	valide une transaction commenc&eacute;e avec la fonction sqlsrv_begin_transaction
function sqlsrv configure $value	la valeur de la configuration à définir
function sqlsrv configure $setting	le nom de la configuration à définir
function bool sqlsrv configure	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sqlsrv configure string $setting mixed $value	modifie la configuration du gestionnaire d'erreurs et d'historisations du driver
function sqlsrv connect $serverName	le nom du serveur sur lequel nous souhaitons réaliser une connexion
function sqlsrv connect $connectionInfo	un tableau associatif spécifiant les options pour la connexion sur le serveur
function resource sqlsrv connect	une ressource de connexion
function resource sqlsrv connect string $serverName array $connectionInfo	ouvre une connexion sur une base de donn&eacute;es microsoft sql server
function sqlsrv execute $stmt	une ressource de requête retournée par la fonction sqlsrv_prepare()
function bool sqlsrv execute	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sqlsrv execute resource $stmt	ex&eacute;cute une requ&ecirc;te pr&eacute;par&eacute;e avec la fonction sqlsrv_prepare
function sqlsrv fetch object $stmt	une ressource de requête créée par la fonction sqlsrv_query() ou la fonction sqlsrv_execute()
function sqlsrv fetch object $className	le nom de la classe à instancier
function sqlsrv fetch object $ctorParams	valeurs à passer au constructeur de la classe spécifiée
function sqlsrv fetch object $row	la ligne à traiter
function sqlsrv fetch object $offset	spécifie la ligne à traiter si le paramètre row est défini à la valeur sqlsrv_scroll_absolute ou sqlsrv_scroll_relative
function mixed sqlsrv fetch object	retourne un objet en cas de succès null sil ny a plus de ligne à retourner et false si une erreur survient ou si la classe spécifiée nexiste pas
function mixed sqlsrv fetch object resource $stmt string $className array $ctorParams int $row int $offset	r&eacute;cup&egrave;re la prochaine ligne de donn&eacute;es du jeu de r&eacute;sultats sous la forme d'un objet
function sqlsrv field metadata $stmt	une ressource de requête depuis laquelle les données méta seront récupérées
function mixed sqlsrv field metadata	retourne un tableau de tableaux en cas de succès false si une erreur survient
function mixed sqlsrv field metadata resource $stmt	r&eacute;cup&egrave;re les donn&eacute;es m&eacute;ta pour les champs d'une requ&ecirc;te pr&eacute;par&eacute;e par la fonction sqlsrv_prepare ou la fonction sqlsrv_query
function sqlsrv free stmt $stmt	la requête dont les ressources seront libérées
function bool sqlsrv free stmt	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sqlsrv free stmt resource $stmt	lib&egrave;re toutes les ressources de la requ&ecirc;te sp&eacute;cifi&eacute;e
function sqlsrv get field $stmt	une ressource de requête retournée par la fonction sqlsrv_query() ou la fonction sqlsrv_execute()
function sqlsrv get field $getAsType	le type de données php pour les données du champ retourné
function sqlsrv get field $fieldIndex	lindex du champ à récupérer
function mixed sqlsrv get field	retourne les données depuis le champ spécifié en cas de succès
function mixed sqlsrv get field resource $stmt int $fieldIndex int $getAsType	r&eacute;cup&egrave;re les donn&eacute;es du champ depuis la ligne actuellement s&eacute;lectionn&eacute;e
function sqlsrv has rows $stmt	une ressource de requête retournée par la fonction sqlsrv_query() ou la fonction sqlsrv_execute()
function bool sqlsrv has rows	retourne true si la requête spécifiée contient des lignes false si elle nen contient pas ou bien si une erreur survient
function bool sqlsrv has rows resource $stmt	indique si la requ&ecirc;te sp&eacute;cifi&eacute;e contient des lignes
function sqlsrv next result $stmt	la requête sur laquelle le prochain résultat sera appelé
function mixed sqlsrv next result	retourne true si le prochain résultat a été récupéré avec succès false si une erreur survient et null sil ny a plus de résultat à récupérer
function mixed sqlsrv next result resource $stmt	rend actif le prochain r&eacute;sultat de la requ&ecirc;te sp&eacute;cifi&eacute;e
function sqlsrv num fields $stmt	la requête depuis laquelle le nombre de champs est retournée
function mixed sqlsrv num fields	retourne le nombre de champs en cas de succès
function mixed sqlsrv num fields resource $stmt	r&eacute;cup&egrave;re le nombre de champs colonnes dans une requ&ecirc;te
function sqlsrv prepare $params	un tableau spécifiant les informations de paramètres lors de lexécution dune requête contenant des paramètres
function sqlsrv prepare $conn	une ressource de connexion retournée par la fonction sqlsrv_connect()
function sqlsrv prepare $options	un tableau spécifiant les options de propriétés de la requête
function sqlsrv prepare $sql	la chaîne qui définit la requête à préparer et à exécuter
function mixed sqlsrv prepare	retourne une ressource de requête en cas de succès ou false si une erreur survient
function mixed sqlsrv prepare resource $conn string $sql array $params array $options	pr&eacute;pare une requ&ecirc;te pour ex&eacute;cution
function sqlsrv query $params	un tableau spécifiant les paramètres lors de lexécution dune requête les autorisant
function sqlsrv query $conn	une ressource de connexion retournée par la fonction sqlsrv_connect()
function sqlsrv query $options	un tableau spécifiant les options de la requête
function sqlsrv query $sql	la chaîne qui définit la requête à préparer et à exécuter
function mixed sqlsrv query	retourne une ressource de requête en cas de succès et false si une erreur survient
function mixed sqlsrv query resource $conn string $sql array $params array $options	pr&eacute;pare et ex&eacute;cute une requ&ecirc;te
function sqlsrv rollback $conn	la ressource de connexion retournée par un appel à la fonction sqlsrv_connect()
function bool sqlsrv rollback	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sqlsrv rollback resource $conn	annule une transaction qui a &eacute;t&eacute; commenc&eacute;e gr&acirc;ce &agrave; la fonction sqlsrv_begin_transaction
function sqlsrv rows affected $stmt	la ressource de requête exécutée
function int sqlsrv rows affected	retourne le nombre de lignes affectées par la dernière requête insert update ou delete
function int sqlsrv rows affected resource $stmt	retourne le nombre de lignes modifi&eacute;es par la derni&egrave;re requ&ecirc;te de type insert update ou delete
function sqlsrv send stream data $stmt	une ressource de requête retournée par la fonction sqlsrv_query() ou par la fonction sqlsrv_execute()
function bool sqlsrv send stream data	retourne true sil y a encore des données à envoyer et false sil ny en a plus
function bool sqlsrv send stream data resource $stmt	envoie des donn&eacute;es depuis le flux vers le serveur
function sqlsrv server info $conn	la ressource de connexion qui connecte le client et le serveur
function array sqlsrv server info	retourne un tableau tel que décrit dans la table suivante : tableau retourné currentdatabase la base de données connectée sqlserverversion la version du serveur sql sqlservername le nom du serveur
function array sqlsrv server info resource $conn	retourne des informations sur le serveur
function sqrt $arg	largument à traiter
function float sqrt	la racine carrée de arg ou la valeur spéciale nan pour les nombres négatifs
function float sqrt float $arg	racine carr&eacute;e
function sscanf $format	le format interprété pour la chaîne str qui est décrit dans la documentation de la fonction sprintf() avec les différences suivantes : la fonction nest pas sensible à la locale courante
function sscanf	optionnellement vous pouvez passer des variables dans ce paramètre par référence qui contiendront les valeurs de lanalyse
function sscanf $str	la chaîne à analyser
function mixed sscanf	si seulement deux paramètres sont fournis les valeurs trouvées seront retournées sous forme de tableau
function mixed sscanf string $str string $format	analyse une cha&icirc;ne &agrave; l'aide d'un format
function ssdeep fuzzy compare $signature1	la chaîne représentant la première signature de hachage flou
function ssdeep fuzzy compare $signature2	la chaîne représentant la seconde signature de hachage flou
function int ssdeep fuzzy compare	retourne un entier entre 0 et 100 en cas de succès ou false si une erreur survient
function int ssdeep fuzzy compare string $signature1 string $signature2	calcule le score de correspondance entre 2 signatures de hachages flous
function ssh2 auth none $username	nom dutilisateur distant
function ssh2 auth none $session	un identifiant de connexion ssh obtenu avec la fonction ssh2_connect()
function mixed ssh2 auth none	retourne true si le serveur accepte none comme méthode didentification ou un tableau de méthodes didentification acceptées en cas déchec
function mixed ssh2 auth none resource $session string $username	identification en tant que none
function ssh2 auth password $password	mot de passe pour lutilisateur username
function ssh2 auth password $username	nom dutilisateur distant
function ssh2 auth password $session	un identifiant de connexion ssh obtenu depuis la fonction ssh2_connect()
function bool ssh2 auth password	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ssh2 auth password resource $session string $username string $password	identification via ssh en utilisant un mot de passe en clair
function ssh2 connect $methods	methods doit être un tableau associatif avec plus de quatre paramètres comme décrit ci-dessous
function ssh2 connect $callbacks	callbackss doit être un tableau associatif contenant nimporte quel ou tous les paramètres suivants
function resource ssh2 connect	retourne une ressource en cas de succès ou false si une erreur survient
function resource ssh2 connect string $host int $port array $methods array $callbacks	connexion &agrave; un serveur ssh
function ssh2 fetch stream $streamid	un canal de flux ssh2
function resource ssh2 fetch stream	retourne la ressource représentant le flux demandé
function resource ssh2 fetch stream resource $channel int $streamid	parcours un flux &eacute;tendu de donn&eacute;es
function ssh2 fingerprint $flags	flags peut être soit ssh2_fingerprint_md5 ou ssh2_fingerprint_sha1 associé logiquement avec ssh2_fingerprint_hex ou ssh2_fingerprint_raw
function ssh2 fingerprint $session	un identifiant de connexion ssh obtenu depuis la fonction ssh2_connect()
function string ssh2 fingerprint	retourne lempreinte sous la forme dune chaîne de caractères
function string ssh2 fingerprint resource $session int $flags	r&eacute;cup&egrave;re l'empreinte d'un serveur distant
function ssh2 methods negotiated $session	un identifiant de connexion ssh obtenu depuis la fonction ssh2_connect()
function array ssh2 methods negotiated resource $session	retourne une liste de m&eacute;thodes n&eacute;goci&eacute;es
function resource ssh2 publickey init	retourne une ressource ssh2 publickey subsystem pour utiliser avec toutes les autres méthodes ssh2_publickey_*() ou false si une erreur survient
function resource ssh2 publickey init resource $session	initialise un publickey subsystem sous-syst&egrave;me de cl&eacute; publique
function ssh2 publickey list $pkey	ressource publickey subsystem
function array ssh2 publickey list	retourne un tableau de clés indexées numériquement chacune delle est un tableau associatif contenant : nom blob et éléments attrs
function array ssh2 publickey list resource $pkey	liste les cl&eacute;s publiques actuellement autoris&eacute;es
function ssh2 scp recv $local_file	chemin vers le fichier local
function ssh2 scp recv $remote_file	chemin vers le fichier distant
function ssh2 scp recv $session	un identifiant de connexion ssh obtenu depuis la fonction ssh2_connect()
function bool ssh2 scp recv	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ssh2 scp recv resource $session string $remote_file string $local_file	demande un fichier via scp
function ssh2 scp send $remote_file	chemin vers le fichier distant
function ssh2 scp send $create_mode	le fichier sera créé avec le mode spécifié par create_mode
function ssh2 scp send $local_file	chemin vers le fichier local
function ssh2 scp send $session	un identifiant de connexion ssh obtenu depuis la fonction ssh2_connect()
function bool ssh2 scp send	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ssh2 scp send resource $session string $local_file string $remote_file int $create_mode	envoie un fichier via scp
function ssh2 sftp chmod $sftp	une ressource ssh2 sftp ouverte avec la fonction ssh2_sftp()
function ssh2 sftp chmod $mode	permissions sur le fichier
function ssh2 sftp chmod $filename	chemin vers le fichier
function bool ssh2 sftp chmod	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ssh2 sftp chmod resource $sftp string $filename int $mode	modifie le mode d'un fichier
function ssh2 sftp lstat $path	chemin vers le lien symbolique distant
function array ssh2 sftp lstat	voir la documentation de la fonction stat() pour les détails concernant les valeurs retournées
function array ssh2 sftp lstat resource $sftp string $path	statue un lien symbolique
function ssh2 sftp mkdir $sftp	une ressource ssh2 sftp ouverte avec la fonction ssh2_sftp()
function ssh2 sftp mkdir $mode	permissions du nouveau dossier
function ssh2 sftp mkdir $recursive	si recursive vaut true tous les dossiers requis pour dirname seront également automatiquement créés
function ssh2 sftp mkdir $dirname	chemin du nouveau dossier
function bool ssh2 sftp mkdir	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ssh2 sftp mkdir resource $sftp string $dirname int $mode bool $recursive	cr&eacute;e un dossier
function ssh2 sftp readlink $sftp	une ressource ssh2 sftp ouverte par la fonction ssh2_sftp()
function ssh2 sftp readlink $link	chemin vers le lien symbolique
function string ssh2 sftp readlink	retourne la cible du lien symbolique link
function string ssh2 sftp readlink resource $sftp string $link	retourne la cible d'un lien symbolique
function ssh2 sftp realpath $sftp	une ressource ssh2 sftp ouverte par la fonction ssh2_sftp()
function string ssh2 sftp realpath	retourne le chemin réel sous la forme dune chaîne de caractères
function string ssh2 sftp realpath resource $sftp string $filename	r&eacute;sout le chemin r&eacute;el d'un chemin fourni
function ssh2 sftp rmdir $sftp	une ressource ssh2 sftp ouverte par la fonction ssh2_sftp()
function bool ssh2 sftp rmdir	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ssh2 sftp rmdir resource $sftp string $dirname	efface un dossier
function ssh2 sftp stat $sftp	une ressource ssh2 sftp ouverte par la fonction ssh2_sftp()
function array ssh2 sftp stat	voir la documentation de la fonction stat() pour les détails concernant les valeurs retournées
function array ssh2 sftp stat resource $sftp string $path	statue un fichier sur un syst&egrave;me de fichiers distant
function ssh2 sftp symlink $sftp	une ressource ssh2 sftp ouverte par la fonction ssh2_sftp()
function ssh2 sftp symlink $target	cible du lien symbolique
function bool ssh2 sftp symlink	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool ssh2 sftp symlink resource $sftp string $target string $link	cr&eacute;e un lien symbolique
function ssh2 shell $env	env doit être passé en tant quun tableau associatif de paire nom / valeur à définir dans lenvironnement cible
function ssh2 shell $term_type	term_type doit correspondre à une des entrées du fichier / etc / termcap du système cible
function ssh2 shell $height	hauteur du terminal virtuel
function ssh2 shell $width	largeur du terminal virtuel
function ssh2 shell $session	un identifiant de connexion ssh obtenu depuis la fonction ssh2_connect()
function ssh2 shell $width_height_type	width_height_type doit être soit ssh2_term_unit_chars soit ssh2_term_unit_pixels
function resource ssh2 shell resource $session string $term_type array $env int $width int $height int $width_height_type	demande un shell interactif
function stat $filename	le chemin vers le fichier
function array stat string $filename	renvoie les informations &agrave; propos d'un fichier
function float stats rand gen f float $dfn float $dfd	g&eacute;n&egrave;re un &eacute;cart al&eacute;atoire
function string stomp connect error	une chaîne décrivant lerreur ou null si aucune erreur nest survenue
function string stomp connect error	retourne une cha&icirc;ne d&eacute;crivant la derni&egrave;re erreur de connexion
function string stomp version	version de lextension stomp
function string stomp version	r&eacute;cup&egrave;re la version de l'extension stomp
function str getcsv $delimiter	le délimiteur de champ un seul caractère
function str getcsv $input	la chaîne à analyser
function str getcsv $escape	le caractère de protection un seul caractère
function str getcsv $enclosure	le caractère dencadrement un seul caractère
function array str getcsv	retourne un tableau contenant les champs lus
function array str getcsv string $input string $delimiter string $enclosure string $escape	analyse une cha&icirc;ne de caract&egrave;res csv dans un tableau
function str ireplace $search	la valeur à chercher connue aussi sous le nom de needle
function str ireplace $count	si fournie cette variable contiendra le nombre de remplacements effectués
function str ireplace $replace	la valeur de remplacement utilisée pour chaque valeur trouvée dans search
function str ireplace $subject	une chaîne de caractères ou un tableau dans lequel la recherche seffectue aussi connu sous le nom de haystack
function mixed str ireplace	retourne une chaîne ou un tableau de remplacement
function mixed str ireplace mixed $search mixed $replace mixed $subject int $count	version insensible &agrave; la casse de str_replace
function str pad $input	la chaîne dentrée
function str pad $pad_length	si la valeur de pad_length est négative plus petite que ou égale à la taille courante de la chaîne input input est retournée inchangée et input sera retourné
function str pad $pad_type	largument optionnel pad_type peut être lune des constantes suivantes : str_pad_right str_pad_left ou str_pad_both
function str pad $pad_string	note : le paramètre pad_string peut être tronqué si le nombre de caractères de complétion nest pas multiple de la taille de pad_string
function string str pad	retourne la chaîne complétée
function string str pad string $input int $pad_length string $pad_string int $pad_type	compl&egrave;te une cha&icirc;ne jusqu'&agrave; une taille donn&eacute;e
function str repeat $input	la chaîne à répéter
function str repeat $multiplier	nombre de fois où la chaîne input doit être multipliée
function string str repeat	retourne la chaîne répétée multiplier fois
function string str repeat string $input int $multiplier	r&eacute;p&egrave;te une cha&icirc;ne
function str replace $replace	la valeur de remplacement à substituer aux valeurs trouvées
function str replace $subject	la chaîne de caractères ou le tableau sur lequel on va effectuer la recherche et le remplacement aussi connu sous le nom de haystack
function str replace $search	la valeur à chercher autrement connue comme le masque
function str replace $count	si fournie cette variable contiendra le nombre de remplacements effectués
function mixed str replace	cette fonction retourne une chaîne ou un tableau contenant les valeurs remplacées
function mixed str replace mixed $search mixed $replace mixed $subject int $count	remplace toutes les occurrences dans une cha&icirc;ne
function str rot13 $str	la chaîne dentrée
function string str rot13	retourne la version rot13 de la chaîne fournie
function string str rot13 string $str	effectue une transformation rot13
function strcasecmp $str2	la seconde chaîne
function strcasecmp $str1	la première chaîne
function int strcasecmp	retourne < 0 si str1 est inférieure à str2 ; > 0 si str1 est plus grande que str2 et 0 si les deux chaînes sont égales
function int strcasecmp string $str1 string $str2	comparaison insensible &agrave; la casse de cha&icirc;nes binaires
function strcoll $str2	la seconde chaîne
function strcoll $str1	la première chaîne
function int strcoll	retourne < 0 si str1 est inférieure à str2 ; > 0 si str1 est supérieure à str2 et 0 si les deux chaînes sont égales
function int strcoll string $str1 string $str2	comparaison de cha&icirc;nes localis&eacute;es
function strcspn $subject	la chaîne à examiner
function strcspn $mask	la chaîne contenant tous les caractères désactivés
function strcspn $start	la position dans subject à partir de laquelle on commence à chercher
function strcspn $length	la longueur du segment de subject à examiner
function int strcspn	retourne la longueur du segment initial de subject qui contient seulement des caractères qui ne sont pas dans mask
function int strcspn string $subject string $mask int $start int $length	trouve un segment de cha&icirc;ne ne contenant pas certains caract&egrave;res
function stream bucket prepend $brigade	brigade est une ressource pointant vers une bucket brigade qui contient un ou plusieurs objets bucket
function stream bucket prepend $bucket	un objet bucket
function void stream bucket prepend resource $brigade object $bucket	ajout initial d'un bucket dans une brigade
function stream context create $options	doit être un tableau associatif au format $arr wrapper option = $value
function stream context create $params	doit être un tableau associatif de format $arr parameter = $value
function resource stream context create	une ressource représentant le contexte du flux
function resource stream context create array $options array $params	cr&eacute;e un contexte de flux
function stream context get params $stream_or_context	une ressource de flux ou de contexte
function array stream context get params	retourne un tableau associatif contenant les options de contexte et leur valeur
function array stream context get params resource $stream_or_context	lit les param&egrave;tres d'un contexte
function stream copy to stream $dest	le flux de destination
function stream copy to stream $offset	loffset où démarrer la copie de données
function stream copy to stream $maxlength	nombre maximal doctets à copier
function stream copy to stream $source	le flux de source
function int stream copy to stream	retourne le nombre total doctets copiés
function int stream copy to stream resource $source resource $dest int $maxlength int $offset	copie des donn&eacute;es depuis un flux vers un autre
function stream filter append $params	ce filtre sera ajouté avec les paramètres params à la fin de la liste des filtres et sera ainsi appelé à la fin des opérations de filtres
function stream filter append $stream	le flux cible
function stream filter append $filtername	le nom du filtre
function stream filter append $read_write	par défaut stream_filter_append() va ajouter le filtre à la liste de filtres de lecture si le fichier a été ouvert en mode lecture r et / ou +
function resource stream filter append	retourne une ressource qui peut être utilisée pour identifier ce filtre lors de leffacement du filtre avec stream_filter_remove()
function resource stream filter append resource $stream string $filtername int $read_write mixed $params	attache un filtre &agrave; un flux en fin de liste
function stream filter prepend $read_write	par défaut stream_filter_prepend() va attacher le filtre à la chaîne de filtre de lectures si le fichier a été ouvert en lecture i
function stream filter prepend $params	le filtre sera ajouté avec les paramètres spécifiés dans params au début de la liste et sera ainsi appelé en premier dans les opérations du flux
function stream filter prepend $stream	le flux cible
function stream filter prepend $filtername	le nom du filtre
function resource stream filter prepend	retourne une ressource qui peut être utilisée pour faire référence à ce filtre durant les opérations de stream_filter_remove()
function resource stream filter prepend resource $stream string $filtername int $read_write mixed $params	attache un filtre &agrave; un flux en d&eacute;but de liste
function stream filter remove $stream_filter	le filtre de flux à supprimer
function bool stream filter remove	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream filter remove resource $stream_filter	retire un filtre d'un flux
function stream get contents $maxlength(entier)	le nombre maximal doctets à lire
function stream get contents $offset(entier)	se déplace à la position spécifiée avant la lecture
function stream get contents $handle(resource)	une ressource de flux e
function string stream get contents	retourne une chaîne de caractères ou false si une erreur survient
function string stream get contents resource $handle int $maxlength int $offset	lit tout un flux dans une cha&icirc;ne
function stream get meta data $stream	le flux peut être nimporte quel flux créé par les fonctions fopen() fsockopen() ou pfsockopen()
function array stream get meta data	le tableau résultant peut contenir les éléments suivants :
function array stream get meta data resource $stream	lit les en-t&ecirc;tes et donn&eacute;es m&eacute;ta des flux
function stream is local $stream_or_url	la ressource de flux ou lurl à vérifier
function bool stream is local	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream is local mixed $stream_or_url	v&eacute;rifie si un flux est local
function stream select $except	les flux qui sont listés dans le paramètre except seront surveillés pour voir si une exception est levée
function stream select $tv_sec	les paramètres tv_sec et tv_usec forment le délai dexpiration tv_sec spécifie le nombre de secondes tandis que tv_usec le nombre de microsecondes
function stream select $tv_usec	voyez la description de tv_sec
function stream select $write	les flux qui sont listés dans le paramètre write seront surveillés en écriture pour être précis si une écriture ne bloquera pas
function int stream select	en cas de succès stream_select() retourne le nombre de flux qui ont évolué ce qui peut être 0 si le délai dexpiration a été atteint avant que les flux névoluent
function int stream select array $read array $write array $except int $tv_sec int $tv_usec	surveille la modification d'un ou plusieurs flux
function stream set chunk size $fp	le flux en question
function stream set chunk size $chunk_size	la nouvelle taille de segment désirée
function int stream set chunk size	retourne la taille précédente du segment en cas de succès
function int stream set chunk size resource $fp int $chunk_size	change la taille du segment du flux
function stream set read buffer $buffer	le nombre doctets à mettre en buffer
function stream set read buffer $stream	le pointeur de fichier
function int stream set read buffer	retourne 0 en cas de succès ou une autre valeur si la requête échoue
function int stream set read buffer resource $stream int $buffer	configure le buffer de lecture d'un flux
function stream set timeout $microseconds	le nombre de microsecondes entières du délai dexpiration
function stream set timeout $seconds	le nombre de secondes entières du délai dexpiration
function stream set timeout $stream	le flux cible
function bool stream set timeout	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream set timeout resource $stream int $seconds int $microseconds	configure la dur&eacute;e d'expiration d'un flux
function stream set write buffer $buffer	le nombre doctets à mettre en buffer
function stream set write buffer $stream	le pointeur de fichier
function int stream set write buffer	retourne 0 en cas de succès ou un autre valeur si la requête échoue
function int stream set write buffer resource $stream int $buffer	configure le buffer d'&eacute;criture d'un flux
function stream socket accept $peername	le nom adresse du client connecté si fourni et si disponible pour le transport sélectionné
function stream socket accept $server_socket	le socket serveur depuis lequel accepter une connexion
function stream socket accept $timeout	remplace le délai dexpiration par défaut du socket
function resource stream socket accept	retourne un flux vers la connexion socket acceptée ou false si une erreur survient
function resource stream socket accept resource $server_socket float $timeout string $peername	accepte une connexion sur un socket cr&eacute;&eacute; par stream_socket_server
function stream socket pair $domain	la famille de protocole à utiliser : stream_pf_inet stream_pf_inet6 ou stream_pf_unix
function stream socket pair $protocol	le protocole à utiliser : stream_ipproto_icmp stream_ipproto_ip stream_ipproto_raw stream_ipproto_tcp ou stream_ipproto_udp
function stream socket pair $type	le type de communication à utiliser : stream_sock_dgram stream_sock_raw stream_sock_rdm stream_sock_seqpacket ou stream_sock_stream
function array stream socket pair	retourne un tableau contenant les ressources des deux sockets en cas de succès ou false en cas déchec
function array stream socket pair int $domain int $type int $protocol	cr&eacute;e une paire de sockets connect&eacute;es et indissociables
function stream socket recvfrom $length	le nombre doctets à recevoir de socket
function stream socket recvfrom $flags	la valeur de flags peut être la combinaison des constantes suivantes : valeurs possibles pour flags stream_oob traite les données en mode oob out-of-band
function stream socket recvfrom $socket	le socket distant
function stream socket recvfrom $address	si le paramètre address est fourni il recevra ladresse du socket distant
function string stream socket recvfrom	retourne les données lues sous forme de chaîne de caractères
function string stream socket recvfrom resource $socket int $length int $flags string $address	lit des donn&eacute;es depuis un socket connect&eacute; ou pas
function stream socket sendto $socket	le socket vers lequel envoyer les données data
function stream socket sendto $flags	la valeur de flags peut être la combinaison des constantes suivantes : valeurs possibles pour flags stream_oob traite les données en mode oob out-of-band
function stream socket sendto $data	les données à envoyer
function stream socket sendto $address	ladresse du socket est spécifiée lorsque le socket est créé et sera utilisé si une autre adresse nest pas spécifiée dans le paramètre address
function int stream socket sendto	retourne le code de résultat sous forme dentier
function int stream socket sendto resource $socket string $data int $flags string $address	envoie un message au socket connect&eacute; ou pas
function stream socket server $errstr	voyez la description de errno
function stream socket server $local_socket	le type de socket créé est déterminé par le transport spécifié avec le formatage url suivant : transport: / / target
function stream socket server $errno	si les arguments optionnels errno et errstr sont présents ils seront configurés pour indiquer le niveau derreur actuel des fonctions système socket() bind() et listen()
function stream socket server $flags	un champ de bits qui peut être la combinaison de nimporte quelle option de création de socket
function resource stream socket server	retourne le flux créé ou bien false en cas derreur
function resource stream socket server string $local_socket int $errno string $errstr int $flags resource $context	cr&eacute;e un socket serveur unix ou internet
function stream socket shutdown $how	une des constantes suivantes : stream_shut_rd désactive les réceptions futures stream_shut_wr désactive les transmissions futures ou stream_shut_rdwr désactive les réceptions ou les transmissions futures
function stream socket shutdown $stream	un flux ouvert ouvert avec la fonction stream_socket_client() par exemple
function bool stream socket shutdown	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream socket shutdown resource $stream int $how	arr&ecirc;te une connexion full-duplex
function stream supports lock $stream	le flux à tester
function bool stream supports lock	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream supports lock resource $stream	indique si le flux supporte les verrous
function stream wrapper register $classname	la classe qui implémente le protocole protocol
function stream wrapper register $protocol	le nom du gestionnaire à enregistrer
function stream wrapper register $flags	doit être configuré à stream_is_url si protocol est un protocole à url
function bool stream wrapper register	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream wrapper register string $protocol string $classname int $flags	enregistre un gestionnaire d'url
function bool stream wrapper restore	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream wrapper restore string $protocol	restaure un gestionnaire d'url supprim&eacute;
function bool stream wrapper unregister	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool stream wrapper unregister string $protocol	supprime un gestionnaire d'url
function strftime $timestamp	le paramètre optionnel timestamp est un timestamp unix de type entier qui vaut par défaut lheure courante locale si le paramètre timestamp nest pas fourni
function string strftime	retourne une chaîne de caractères formatée suivant le paramètre format donné en utilisant le paramètre timestamp ou la date locale courante si aucun timestamp nest fourni
function string strftime string $format int $timestamp	formate une date / heure locale avec la configuration locale
function stripcslashes $str	la chaîne à traiter
function string stripcslashes	retourne la chaîne modifiée
function string stripcslashes string $str	d&eacute;code une cha&icirc;ne encod&eacute;e avec addcslashes
function stripos $offset	si spécifié la recherche commencera à partir de ce nombre de caractères compté depuis le début de la chaîne
function stripos $haystack	la chaîne dans laquelle on effectue la recherche
function stripos $needle	le paramètre needle peut être une chaîne dun ou plusieurs caractères
function mixed stripos	retourne la position de la première occurrence dans la chaîne relativement au début de la chaîne haystack indépendamment de loffset
function mixed stripos string $haystack string $needle int $offset	recherche la position de la premi&egrave;re occurrence dans une cha&icirc;ne sans tenir compte de la casse
function stripslashes $str	la chaîne dentrée
function string stripslashes	retourne une chaîne dont les antislashs on été supprimés
function string stripslashes string $str	supprime les antislashs d'une cha&icirc;ne
function strlen $string	la chaîne de caractères à mesurer
function int strlen	la taille de la chaîne string est 0 si le paramètre string est vide
function int strlen string $string	calcule la taille d'une cha&icirc;ne
function strncmp $str2	la seconde chaîne
function strncmp $str1	la première chaîne
function strncmp $len	nombre de caractères à utiliser pour la comparaison
function int strncmp	retourne < 0 si str1 est inférieure à str2 ; > 0 si str1 est supérieure à str2 et 0 si les deux chaînes sont égales
function int strncmp string $str1 string $str2 int $len	comparaison binaire des n premiers caract&egrave;res
function strpbrk $char_list	ce paramètre est sensible à la casse
function strpbrk $haystack	la chaîne dans laquelle on cherche char_list
function string strpbrk	retourne une chaîne commençant au premier caractère trouvé ou false sil na pas été trouvé
function string strpbrk string $haystack string $char_list	recherche un ensemble de caract&egrave;res dans une cha&icirc;ne de caract&egrave;res
function strptime $date(chaîne de caractères)	la chaîne à analyser e
function strptime $format(chaîne de caractères)	le format utilisé par date e
function array strptime	retourne un tableau ou false si une erreur survient
function array strptime string $date string $format	analyse une date g&eacute;n&eacute;r&eacute;e par strftime
function strrchr $needle	si needle contient plus dun caractère seul le premier sera utilisé
function strrchr $haystack	la chaîne dans laquelle on doit chercher
function string strrchr	retourne la portion de la chaîne ou false si needle nest pas trouvé
function string strrchr string $haystack mixed $needle	trouve la derni&egrave;re occurrence d'un caract&egrave;re dans une cha&icirc;ne
function strrev $string	la chaîne à inverser
function string strrev	retourne la chaîne inversée
function string strrev string $string	inverse une cha&icirc;ne
function strrpos $haystack	la chaîne dans laquelle chercher
function strrpos $offset	si spécifié la recherche commencera à ce nombre de caractères compté depuis le début de la chaîne
function strrpos $needle	si needle nest pas une chaîne de caractères il sera converti en un entier et utilisé comme valeur ordinale du caractère
function int strrpos	retourne la position à laquelle loccurrence a été trouvée relativement au debut de la chaîne haystack indépendamment de la direction de recherche ou de loffset
function int strrpos string $haystack string $needle int $offset	cherche la position de la derni&egrave;re occurrence d'une sous-cha&icirc;ne dans une cha&icirc;ne
function strstr $needle	si needle nest pas une chaîne elle sera convertie en entier et utilisée comme code ascii du caractère correspondant
function strstr $before_needle	si vaut true strstr() retourne la partie de haystack avant la première occurrence de needle needle étant exclus
function strstr $haystack	la chaîne dentrée
function string strstr	retourne la portion de la chaîne ou false si needle nest pas trouvé
function string strstr string $haystack mixed $needle bool $before_needle	trouve la premi&egrave;re occurrence dans une cha&icirc;ne
function strtok $token	le délimiteur utilisé lors de la découpe
function strtok $str	la chaîne que lon doit couper en plusieurs chaînes de tailles plus petites
function string strtok	une chaîne coupée
function string strtok string $str string $token	coupe une cha&icirc;ne en segments
function strtolower $string	la chaîne dentrée
function string strtolower	retourne la chaîne en minuscule
function string strtolower string $string	renvoie une cha&icirc;ne en minuscules
function strtoupper $string	la chaîne dentrée
function string strtoupper	retourne la chaîne en majuscule
function string strtoupper string $string	renvoie une cha&icirc;ne en majuscules
function strtr $from	les caractères de départ
function strtr $str	la chaîne à traiter
function strtr $to	les caractères de remplacement
function strtr $replace_pairs	le paramètre replace_pairs peut être utilisé à la place de to et from et dans ce cas ce sera un tableau sous la forme array( from = > to
function string strtr	retourne la chaîne de caractères modifiée
function string strtr string $str string $from string $to	remplace des caract&egrave;res dans une cha&icirc;ne
function substr compare $str	la chaîne secondaire à comparer
function substr compare $case_insensitivity	si case_insensitivity vaut true la comparaison est insensible à la casse
function substr compare $main_str	la chaîne principale à comparer
function substr compare $length	la longueur de la comparaison
function substr compare $offset	la position de départ de la comparaison dans main_str
function int substr compare	retourne < 0 si main_str à partir de offset est inférieur à str > 0 sil est plus grand que str et 0 si ils sont égaux
function int substr compare string $main_str string $str int $offset int $length bool $case_insensitivity	compare deux cha&icirc;nes depuis un offset jusqu'&agrave; une longueur en caract&egrave;res
function substr count $haystack	la chaîne de caractères pour rechercher à lintérieur
function substr count $needle	la chaîne de caractères que lon recherche
function substr count $length	la taille maximale après le décalage spécifié pour rechercher la chaîne
function substr count $offset	le décalage où on commence à compter
function int substr count	cette fonction retourne un entier
function int substr count string $haystack string $needle int $offset int $length	compte le nombre d'occurrences de segments dans une cha&icirc;ne
function substr replace $replacement	la chaîne de remplacement
function substr replace $length	si length est fourni et positif il représentera la longueur du segment de code remplacé dans la chaîne string
function substr replace $string	la chaîne dentrée
function substr replace $start	si start est positif le remplacement se fera à partir du caractère numéro start dans string
function mixed substr replace	la chaîne résultante est retournée
function mixed substr replace mixed $string mixed $replacement mixed $start mixed $length	remplace un segment dans une cha&icirc;ne
function substr $length	si length est fourni et est positif la chaîne retournée contiendra au plus length caractères en commençant à partir du caractère start en fonction de la taille de la chaîne string
function substr $start	si start est positif la chaîne retournée commencera au caractère numéro start dans la chaîne string
function substr $string	la chaîne dentrée
function string substr	retourne la partie extraite de la chaîne string ; ou false si une erreur survient ou une chaine vide
function string substr string $string int $start int $length	retourne un segment de cha&icirc;ne
function svn auth set parameter $key	nom de la clé
function svn auth set parameter $value	valeur à définir pour la nouvelle clé
function void svn auth set parameter string $key string $value	sp&eacute;cifie un param&egrave;tre d'identification
function svn blame $revision_no	le numéro de révision
function svn blame $repository_url	lurl du référentiel
function array svn blame	un tableau des informations de condamnation svn séparées par ligne qui incluent le numéro de révision le numéro de ligne la ligne de code lauteur et la date
function array svn blame string $repository_url int $revision_no	r&eacute;cup&egrave;re les condamnations svn pour un fichier
function svn cat $revision_no	numéro de révision de lélément à récupérer ; par défaut vaut head
function svn cat $repos_url	url de lélément du référentiel
function string svn cat	retourne le contenu de lélément depuis le référentiel en cas de succès et false si une erreur survient
function string svn cat string $repos_url int $revision_no	r&eacute;cup&egrave;re le contenu d'un fichier du r&eacute;f&eacute;rentiel
function svn checkout $repos	url du dossier dans le référentiel à extraire
function svn checkout $revision	numéro de révision du référentiel à extraire
function svn checkout $flags	toute combinaison de svn_non_recursive et svn_ignore_externals
function svn checkout $targetpath	chemin local du dossier dans lequel on effectue lextraction note : les chemins relatifs peuvent être résolus si le dossier de travail courant est lun de ceux qui contiennent le binaire php
function bool svn checkout	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool svn checkout string $repos string $targetpath int $revision int $flags	extrait une copie de travail depuis un r&eacute;f&eacute;rentiel
function svn commit $recursive	drapeau de type booléen pour désactiver la récursivité lors de la livraison de dossiers dans le tableau targets
function svn commit $targets	tableau de chemins locaux des fichiers à livrer
function svn commit $log	message dhistorisation à utiliser lors de la livraison
function array svn commit	retourne un tableau sous la forme :
function array svn commit string $log array $targets bool $recursive	envoie les modifications depuis la copie locale vers le r&eacute;f&eacute;rentiel
function svn delete $path	chemin vers lélément à effacer
function svn delete $force	si vaut true le fichier sera effacé même sil a des modifications locales
function bool svn delete	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool svn delete string $path bool $force	efface un &eacute;l&eacute;ment d'un dossier de travail ou d'un d&eacute;p&ocirc;t
function svn diff $path1	premier chemin
function svn diff $rev1	numéro de révision du premier chemin
function svn diff $path2	deuxième chemin à comparer
function svn diff $rev2	numéro de révision du second chemin
function array svn diff	retourne un tableau contenant 2 flux : le premier représente la sortie de la comparaison et le second contient les erreurs
function array svn diff string $path1 int $rev1 string $path2 int $rev2	compare deux chemins r&eacute;cursivement
function svn log $flags	toutes combinaisons de svn_omit_messages svn_discover_changed_paths et svn_stop_on_copy
function svn log $repos_url	url dans le référentiel de lélément dont on doit récupérer lhistorique
function svn log $limit	nombre dhistorisations à récupérer
function svn log $end_revision	numéro de révision de la dernière historisation à récupérer
function svn log $start_revision	numéro de révision de la première historisation à récupérer
function array svn log string $repos_url int $start_revision int $end_revision int $limit int $flags	r&eacute;cup&egrave;re le message d'historisation d'une url du r&eacute;f&eacute;rentiel
function svn ls $recurse	active la récursivité
function svn ls $url	url du référentiel e
function svn ls $revision	numéro de révision à utiliser
function array svn ls string $repos_url int $revision_no bool $recurse bool $peg	retourne la liste du contenu d'un dossier d'un r&eacute;f&eacute;rentiel optionnellement &agrave; la r&eacute;vision fournie
function svn mkdir $path	le chemin vers la copie de travail ou le référentiel
function bool svn mkdir	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool svn mkdir string $path string $log_message	cr&eacute;e un dossier dans la copie de travail ou dans le r&eacute;f&eacute;rentiel
function svn revert $path	le chemin vers lélément dans la copie de travail
function svn revert $recursive	optionnellement applique ceci récursivement
function bool svn revert	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool svn revert string $path bool $recursive	revenir en arri&egrave;re sur les changements de la copie de travail
function svn update $path	chemin vers la copie de travail locale
function svn update $recurse	si lon doit ou non mettre à jour les dossiers récursivement
function svn update $revno	numéro de révision vers lequel mettre à jour ; vaut par défaut svn_revision_head
function int svn update	retourne le nouveau numéro de révision en cas de succès ou false si une erreur survient
function int svn update string $path int $revno bool $recurse	met &agrave; jour la copie de travail
function sybase close $link_identifier	si lidentifiant de connexion nest pas spécifié la dernière connexion sera utilisée
function bool sybase close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sybase close resource $link_identifier	ferme une connexion sybase
function bool sybase data seek	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool sybase data seek resource $result_identifier int $row_number	d&eacute;place le pointeur interne de lignes sybase
function sybase deadlock retry count $retry_count	valeurs pour le paramètre retry_count -1 essai jusquà réussir par défaut 0 ne pas réessayer n réessaye n fois
function void sybase deadlock retry count int $retry_count	configure le nombre de tentatives lors de blocages
function array sybase fetch array	retourne un tableau qui contient la ligne demandée ou false sil ne reste plus de ligne
function array sybase fetch array resource $result	retourne une ligne sybase sous la forme d'un tableau
function sybase fetch field $field_offset	si loffset du champ nest pas précisé le champ suivant est traité
function object sybase fetch field	retourne un objet contenant les informations du champ
function object sybase fetch field resource $result int $field_offset	lit les informations d'un champ sybase
function sybase fetch object $object	utilisez le second paramètre object pour spécifier le type dobjet que vous voulez retourner
function object sybase fetch object	retourne un objet qui contient la ligne demandée en cas de succès et false sil ny a plus de ligne
function object sybase fetch object resource $result mixed $object	retourne une ligne sybase sous la forme d'un objet
function array sybase fetch row	retourne un tableau qui contient la ligne demandée en cas de succès et false sil ny a plus de ligne
function array sybase fetch row resource $result	retourne une ligne sybase sous la forme d'un tableau num&eacute;rique
function void sybase min client severity int $severity	fixe la s&eacute;v&eacute;rit&eacute; minimale du client sybase
function void sybase min error severity int $severity	fixe la s&eacute;v&eacute;rit&eacute; minimale du client pour les erreurs
function void sybase min message severity int $severity	fixe la s&eacute;v&eacute;rit&eacute; minimale du client pour les messages
function void sybase min server severity int $severity	fixe la s&eacute;v&eacute;rit&eacute; minimale du client pour le serveur sybase
function int sybase num fields	retourne le nombre de champs sous la forme dun entier
function int sybase num fields resource $result	retourne le nombre de champs dans un r&eacute;sultat sybase
function sybase pconnect $username	le nom dutilisateur sybase
function sybase pconnect $appname	spécifie un appname pour la connexion sybase
function sybase pconnect $password	le mot de passe associé avec lutilisateur username
function sybase pconnect $servername	doit être un nom de serveur valide défini dans le fichier interfaces
function sybase pconnect $charset	spécifie le jeu de caractères pour la connexion
function resource sybase pconnect	retourne un identifiant de connexion persistant sybase en cas de succès ou false si une erreur survient
function resource sybase pconnect string $servername string $username string $password string $charset string $appname	ouvre une connexion persistante &agrave; un serveur sybase
function sybase query $link_identifier	si lidentifiant de connexion nest pas précisé la fonction essaiera dutiliser la dernière connexion ouverte
function mixed sybase query	retourne un identifiant de résultat positif en cas de succès false si une erreur survient ou true si la requête a été effectuée avec succès mais na retourné aucune colonne
function mixed sybase query string $query resource $link_identifier	envoie une requ&ecirc;te &agrave; une base sybase
function sybase unbuffered query $store_result	le paramètre optionnel store_result peut valoir false pour indiquer que les lignes ne doivent pas être ramenées en mémoire afin de réduire la consommation surtout dans le cas de très grands résultats
function resource sybase unbuffered query	retourne un identifiant de résultat sybase en cas de succès ou false si une erreur survient
function resource sybase unbuffered query string $query resource $link_identifier bool $store_result	envoie une requ&ecirc;te &agrave; sybase et ne bloque pas
function symlink $target	la cible du lien
function symlink $link	le nom du lien
function bool symlink	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool symlink string $target string $link	cr&eacute;e un lien symbolique
function string sys get temp dir	retourne le chemin du répertoire temporaire
function string sys get temp dir	retourne le chemin du r&eacute;pertoire utilis&eacute; pour les fichiers temporaires
function array sys getloadavg	retourne un array avec trois échantillons dernières 1 5 et 15 minutes
function array sys getloadavg	r&eacute;cup&egrave;re la charge moyenne du syst&egrave;me
function bool taint	retourne true si la transformation a eu lieu et retournera toujours true si lextension taint nest pas activée
function bool taint string $string	nettoie une cha&icirc;ne
function tan $arg	largument à traiter en radians
function float tan	la tangente de arg
function float tan float $arg	tangente
function tanh $arg	largument à traiter
function float tanh	la tangente hyperbolique de arg
function float tanh float $arg	tangente hyperbolique
function tcpwrap check $daemon	le nom du service
function tcpwrap check $user	un nom dutilisateur optionnel
function tcpwrap check $address	ladresse distante du client
function tcpwrap check $nodns	si address ressemble à un nom de domaine dns est utilisé pour le résoudre en adresse ip ; définissez nodns à true pour éviter ce comportement
function bool tcpwrap check	cette fonction retourne true si laccès doit être autorisé false sinon
function bool tcpwrap check string $daemon string $address string $user bool $nodns	v&eacute;rification tcpwrap
function tempnam $prefix	le préfixe du fichier temporaire généré
function tempnam $dir	le dossier dans lequel le fichier temporaire sera créé
function string tempnam	retourne un nouveau fichier temporaire avec son chemin ou false si une erreur survient
function string tempnam string $dir string $prefix	cr&eacute;e un fichier avec un nom unique
function tidy access count $object	lobjet tidy
function int tidy access count	retourne le nombre dalertes
function int tidy access count tidy $object	retourne le nombre d'alertes d'accessibilit&eacute; tidy rencontr&eacute;es dans le document
function tidy config count $object	lobjet tidy
function int tidy config count	retourne le nombre derreurs
function int tidy config count tidy $object	retourne le nombre d'erreurs de configuration tidy rencontr&eacute;es dans le document
function tidy error count $object	lobjet tidy
function int tidy error count	retourne le nombre derreur
function int tidy error count tidy $object	retourne le nombre d'erreurs tidy rencontr&eacute;es dans le document
function void tidy load config string $filename string $encoding	charge un fichier de configuration ascii tidy avec l'encodage sp&eacute;cifi&eacute;
function bool tidy reset config	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool tidy reset config	redonne les valeurs de configuration par d&eacute;faut de tidy
function tidy save config $filename	chemin vers le fichier de configuration
function bool tidy save config	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool tidy save config string $filename	sauve la configuration courante dans un fichier
function tidy set encoding $encoding	la valeurs possibles de encoding sont ascii latin0 latin1 raw utf8 iso2022 mac win1252 ibm858 utf16 utf16le utf16be big5 et shiftjis
function bool tidy set encoding	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool tidy set encoding string $encoding	modifie le jeu de caract&egrave;res pour les entr&eacute;es / sorties de l'analyseur tidy
function time nanosleep $nanoseconds	doit être un entier non-négatif inférieur à 1 milliard
function time nanosleep $seconds	doit être un entier non-négatif
function mixed time nanosleep	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed time nanosleep int $seconds int $nanoseconds	attendre pendant un nombre de secondes et de nanosecondes
function int time	retourne le timestamp unix actuel
function resource tmpfile	retourne un pointeur de fichier identique à celui retourné par la fonction fopen() pour le nouveau fichier ou false si une erreur survient
function resource tmpfile	cr&eacute;e un fichier temporaire
function token get all $source	le source php à analyser
function array token get all	un tableau contenant la liste des descriptions des éléments
function array token get all string $source	scinde un code source en &eacute;l&eacute;ments de base
function token name $token	la valeur du token
function string token name	le nom symbolique du token donné
function string token name int $token	retourne le nom d'un &eacute;l&eacute;ment de code source
function touch $atime	si présent lheure daccès au fichier fourni sera défini à la valeur du paramètre atime
function touch $time	la date de création
function touch $filename	le nom du fichier à créer
function bool touch	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool touch string $filename int $time int $atime	modifie la date de modification et de dernier acc&egrave;s d'un fichier
function trader asin $real	tableau de valeurs réelles
function array trader asin	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader asin array $real	vector trigonometric asin
function trader ceil $real	tableau de valeurs réelles
function array trader ceil	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader ceil array $real	vecteur plafonn&eacute;
function trader cos $real	tableau de valeurs réelles
function array trader cos	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader cos array $real	vecteur trigonom&eacute;trique cos
function trader cosh $real	tableau de valeurs réelles
function array trader cosh	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader cosh array $real	vecteur trigonom&eacute;trique cosh
function trader div $real1	tableau de valeurs réelles
function trader div $real0	tableau de valeurs réelles
function array trader div	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader div array $real0 array $real1	vecteur arithm&eacute;tique div
function trader exp $real	tableau de valeurs réelles
function array trader exp	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader exp array $real	vecteur arithm&eacute;tique exp
function trader floor $real	tableau de valeurs réelles
function array trader floor	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader floor array $real	niveau du vecteur
function trader get unstable period $functionId	identifiant de la fonction du facteur à lire
function integer trader get unstable period	retourne le facteur dinstabilité de la période pour la fonction correspondante
function integer trader get unstable period integer $functionId	r&eacute;cup&egrave;re la p&eacute;riode d'instabilit&eacute;
function trader ln $real	tableau de valeurs réelles
function array trader ln	retourne un tableau avec les données calculées ou false si une erreur survient
function array trader ln array $real	vecteur de log naturel
function trader log10 $real	tableau de valeurs réelles
function array trader log10	retourne un tableau avec les données calculées ou false si une erreur survient
function array trader log10 array $real	vecteur log10
function trader mult $real1	tableau de valeurs réelles
function trader mult $real0	tableau de valeurs réelles
function array trader mult	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader mult array $real0 array $real1	vecteur arithm&eacute;tique mult
function trader sin $real	tableau de valeurs réelles
function array trader sin	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader sin array $real	vecteur trigonom&eacute;trique sin
function trader sinh $real	tableau de valeurs réelles
function array trader sinh	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader sinh array $real	vecteur trigonom&eacute;trique sinh
function trader sqrt $real	tableau de valeurs réelles
function array trader sqrt	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader sqrt array $real	vecteur de racine carr&eacute;e
function trader sub $real1	tableau de valeurs réelles
function trader sub $real0	tableau de valeurs réelles
function array trader sub	retourne un tableau contenant les données calculées ou false si une erreur survient
function array trader sub array $real0 array $real1	vecteur de soustraction arithm&eacute;tique
function trader tan $real	tableau de valeurs réelles
function array trader tan	retourne un tableau avec les données calculées ou false si une erreur survient
function array trader tan array $real	vecteur trigonom&eacute;trie tan
function trim $str	la chaîne de caractères qui sera coupée
function trim $character_mask	optionnellement les caractères supprimés peuvent aussi être spécifiés en utilisant le paramètre character_mask
function string trim	la chaîne de caractères coupée
function string trim string $str string $character_mask	supprime les espaces ou d'autres caract&egrave;res en d&eacute;but et fin de cha&icirc;ne
function ucfirst $str	la chaîne dentrée
function string ucfirst	retourne la chaîne après modification
function string ucfirst string $str	met le premier caract&egrave;re en majuscule
function udm add search limit $val	définit la valeur du paramètre courant
function udm add search limit $var	nom du paramètre de limitation
function udm add search limit $agent	un identifiant dagent obtenu après un appel à udm_alloc_agent()
function bool udm add search limit	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool udm add search limit resource $agent int $var string $val	ajoute diff&eacute;rentes limitations de recherche
function udm alloc agent array $databases	le paramètre databases est un tableau qui contient une url par élément de manière analogue au premier paramètre de udm_alloc_agent()
function resource udm alloc agent array	retourne une ressource représentant un identifiant en cas de succès ou false si une erreur survient
function resource udm alloc agent array array $databases	alloue une session mnogosearch
function udm cat path $agent	un lien vers lagent reçu après un appel à la fonction udm_alloc_agent()
function array udm cat path	le tableau est constitué de paires
function array udm cat path resource $agent string $category	lit le chemin de la cat&eacute;gorie courante
function bool udm check charset resource $agent string $charset	v&eacute;rifie si un jeu de caract&egrave;res est support&eacute; par mnogosearch
function udm clear search limits $agent	un lien vers lagent reçu après lappel à la fonction udm_alloc_agent()
function bool udm clear search limits	retourne true
function bool udm clear search limits resource $agent	annule toutes les limitations de recherche mnogosearch
function int udm crc32 resource $agent string $str	retourne la somme de contr&ocirc;le crc32 d'une cha&icirc;ne
function udm free res $res	un lien vers un identifiant de résultat reçu après lappel à la fonction udm_find()
function bool udm free res	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool udm free res resource $res	lib&egrave;re un r&eacute;sultat mnogosearch
function udm get doc count $agent	un lien vers lagent reçu après lappel à la fonction udm_alloc_agent()
function int udm get doc count	retourne le nombre de documents
function int udm get doc count resource $agent	lit le nombre total de documents dans les bases mnogosearch
function udm get res field $res	res - un identifiant de résultat obtenu après un appel à udm-find
function udm get res field $row	row - le numéro du lien dans la page courante
function udm get res field $field	field - lidentifiant de champ et peut prendre lune des valeurs suivantes : udm_field_url : champ url udm_field_content : champ content-type par exemple text / html
function string udm get res field	retourne la valeur du champ field dans la ligne row du résultat res et false si une erreur survient
function string udm get res field resource $res int $row int $field	lit un champ de r&eacute;sultat
function udm get res param $param	param - peut prendre les valeurs suivantes : udm_param_num_rows - nombre de liens trouvés dans le groupe de résultat courant
function udm get res param $res	res - identifiant de résultat obtenu après un appel à udm_find()
function string udm get res param	udm_get_res_param() retourne les paramètres de résultats en cas de succès false en cas derreur
function string udm get res param resource $res int $param	lit les param&egrave;tres de r&eacute;sultats mnogosearch
function uksort $key_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function uksort $array	le tableau dentrée
function bool uksort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool uksort array $array callable $key_compare_func	trie un tableau par ses cl&eacute;s en utilisant une fonction de rappel
function umask $mask	le nouvel umask
function int umask	umask() appelée sans arguments retourne simplement le umask courant sinon ce sera lancien umask qui sera retourné
function int umask int $mask	change le umask courant
function uniqid $more_entropy	si le paramètre optionnel more_entropy est true uniqid() ajoutera une entropie combined lcg à la fin de la valeur retournée ce qui augmente la probabilité de lunicité du résultat
function uniqid $prefix	peut être utile par exemple pour identifier facilement différents hôtes si vous générez simultanément des fichiers depuis plusieurs hôtes à la même microseconde
function string uniqid	retourne un identifiant unique sous la forme dune chaîne de caractères
function string uniqid string $prefix bool $more_entropy	g&eacute;n&egrave;re un identifiant unique
function unpack $data	les données conditionnées
function unpack $format	voir la fonction pack() pour une explication des codes de format
function array unpack	retourne un tableau associatif contenant les éléments déconditionnés dune chaîne binaire
function array unpack string $format string $data	d&eacute;conditionne des donn&eacute;es depuis une cha&icirc;ne binaire
function unset $var	la variable à détruire
function unset	autres variables
function void unset mixed $var	d&eacute;truit une variable
function bool untaint string $string	ne nettoie pas une cha&icirc;ne
function uopz backup $function	le nom de la fonction
function uopz backup $class	le nom de la classe contenant la fonction à sauvegarder
function void uopz backup string $class string $function	sauvegarde une fonction
function uopz compose $classes	un tableau de classes dinterfaces ou de noms trait
function uopz compose $methods	un tableau associatif de méthodes ; les valeurs sont soit des closures soit des [modifiers = > closure]
function uopz compose $flags	type dentrée ; par défaut zend_acc_class
function uopz compose $properties	un tableau associatif de propriétés ayant comme clés les noms et comme valeurs les modificateurs
function uopz compose $name	un nom de classe valide
function void uopz compose string $name array $classes array $methods array $properties int $flags	compose une classe
function uopz copy $function	le nom de la fonction
function uopz copy $class	le nom de la classe contenant la fonction à copier
function Closure uopz copy	une closure pour la fonction spécifiée
function Closure uopz copy string $class string $function	copie une fonction
function void uopz delete string $class string $function	supprime une fonction
function uopz extend $parent	le nom de la classe parent
function uopz extend $class	le nom de la classe à étendre
function void uopz extend string $class string $parent	etend une classe &agrave; l'ex&eacute;cution
function uopz flags $class	le nom de la classe
function uopz flags $function	le nom de la fonction
function uopz flags $flags	un jeu valide de drapeaux zend_acc_ flags zend_acc_fetch
function int uopz flags	si des drapeaux ont été définis retourne les anciens drapeaux sinon retourne les drapeaux courants
function int uopz flags string $class string $function int $flags	r&eacute;cup&egrave;re ou d&eacute;fini les drapeaux d'une fonction ou d'une classe
function uopz function $class	le nom de la classe qui doit recevoir la nouvelle fonction
function uopz function $function	le nom de la fonction
function uopz function $handler	la closure de la fonction
function uopz function $modifiers	les modificateurs de la fonction ; par défaut copé ou zend_acc_public
function void uopz function string $class string $function Closure $handler int $modifiers	cr&eacute;e une fonction &agrave; l'ex&eacute;cution
function void uopz implement string $class string $interface	impl&eacute;mente une interface &agrave; l'ex&eacute;cution
function uopz overload $opcode	un opcode valide ; voir les constantes pour plus de détails sur les codes supportés
function void uopz overload int $opcode Callable $callable	surcharge un opcode vm
function uopz rename $class	le nom de la classe contenant la fonction
function uopz rename $rename	le nouveau nom de la fonction
function uopz rename $function	le nom dune fonction existante
function void uopz rename string $class string $function string $rename	renomme une fonction &agrave; l'ex&eacute;cution
function uopz undefine $class	le nom de la classe contenant la constant
function uopz undefine $constant	le nom dune constante existante
function void uopz undefine string $class string $constant	supprime une constante
function urlencode $str	la chaîne de caractères à encoder
function string urlencode	retourne une chaîne dont les caractères non alphanumériques hormis -_
function string urlencode string $str	encode une cha&icirc;ne en url
function use soap error handler $handler	avec la valeur true le détail des erreurs sera envoyé aux clients
function bool use soap error handler	retourne la valeur originale
function bool use soap error handler bool $handler	active le gestionnaire d'erreurs soap natif
function usleep $micro_seconds	durée de larrêt en microsecondes
function void usleep int $micro_seconds	arr&ecirc;te l'ex&eacute;cution durant quelques microsecondes
function usort $value_compare_func	la fonction de comparaison doit retourner un entier inférieur à égal à ou supérieur à 0 si le premier argument est considéré comme respectivement inférieur à égal à ou supérieur au second
function usort $array	le tableau dentrée
function bool usort	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool usort array $array callable $value_compare_func	trie un tableau en utilisant une fonction de comparaison
function utf8 decode $data	la chaîne encodée utf-8
function string utf8 decode	retourne la chaîne convertie
function string utf8 decode string $data	convertit une cha&icirc;ne utf-8 en iso-8859-1
function utf8 encode $data	une chaîne iso-8859-1
function string utf8 encode	retour la version utf-8 de data
function string utf8 encode string $data	convertit une cha&icirc;ne iso-8859-1 en utf-8
function variant abs $val	le variant
function mixed variant abs	retourne la valeur absolue de val
function mixed variant abs mixed $val	retourne la valeur absolue d'un variant
function variant add $left	lopérande de gauche
function variant add $right	lopérande de droite
function mixed variant add	retourne le résultat
function mixed variant add mixed $left mixed $right	ajoute deux valeurs de variants et retourne le r&eacute;sultat
function variant and $left	lopérande de gauche
function variant and $right	lopérande de droite
function mixed variant and	règles du et variant si left est si right est alors le résultat est true true true true false false true null null false true false false false false false null false null true null null false false null null null
function mixed variant and mixed $left mixed $right	effectue un et entre deux variants et retourne le r&eacute;sultat
function variant date from timestamp $timestamp	un timestamp unix
function variant variant date from timestamp	retourne un variant vt_date
function variant variant date from timestamp int $timestamp	retourne une repr&eacute;sentation date en variant d'un timestamp unix
function variant date to timestamp $variant	le variant
function int variant date to timestamp	retourne un timestamp unix
function int variant date to timestamp variant $variant	convertit une valeur date / temps variante en un timestamp unix
function variant div $left	lopérande de gauche
function variant div $right	lopérande de droite
function mixed variant div mixed $left mixed $right	retourne le r&eacute;sultat de la division de deux variants
function variant eqv $left	lopérande de gauche
function variant eqv $right	lopérande de droite
function mixed variant eqv	si chaque bit dans left est égal au bit correspondant dans right alors la fonction retourne true sinon elle retourne false
function mixed variant eqv mixed $left mixed $right	effectue une &eacute;quivalence de bits de deux variants
function variant get type $variant	lobjet variant
function int variant get type	retourne une valeur entière qui indique le type de variant qui peut être une instance de com dotnet ou de variant
function int variant get type variant $variant	retourne le type d'un objet variant
function variant idiv $left	lopérande de gauche
function variant idiv $right	lopérande de droite
function mixed variant idiv mixed $left mixed $right	convertit des variants en valeurs enti&egrave;res et effectue alors une division
function variant mod $left	lopérande de gauche
function variant mod $right	lopérande de droite
function mixed variant mod	retourne le reste de la division
function mixed variant mod mixed $left mixed $right	divise deux variantes et retourne le reste
function variant neg $variant	le variant
function mixed variant neg	retourne le résultat de la négation logique
function mixed variant neg mixed $variant	effectue une n&eacute;gation logique sur un variant
function variant or $left	lopérande de gauche
function variant or $right	lopérande de droite
function mixed variant or	règles du or variant si left est si right est alors le résultat est true true true true false true true null true false true true false false false false null null null true true null false null null null null
function mixed variant or mixed $left mixed $right	performe une disjonction logique sur deux variants
function variant pow $left	lopérande de gauche
function variant pow $right	lopérande de droite
function mixed variant pow	retourne le résultat de left à la puissance right
function mixed variant pow mixed $left mixed $right	retourne le r&eacute;sultat de la fonction puissance avec deux variants
function variant set type $variant	le variant
function void variant set type variant $variant int $type	convertit un variant en un autre type sur-place
function variant xor $left	lopérande de gauche
function variant xor $right	lopérande de droite
function mixed variant xor	règles xor pour les variant si left est si right est alors le résultat est true true false true false true false true true false false false null null null
function mixed variant xor mixed $left mixed $right	ex&eacute;cute une exclusion logique sur deux variants
function version compare $version1	premier numéro de version
function version compare $version2	second numéro de version
function version compare $operator	si le troisième argument optionnel operator est fourni un test pour une relation particulière sera réalisée
function mixed version compare	par défaut version_compare() retourne -1 si la première version est inférieure à la seconde 0 si elles sont égales et 1 si la seconde est inférieure à la première
function mixed version compare string $version1 string $version2 string $operator	compare deux cha&icirc;nes de version au format des versions php
function vfprintf $format	voir la documentation de la fonction sprintf() pour une description complète du paramètre format
function int vfprintf	retourne la longueur de la chaîne retournée
function int vfprintf resource $handle string $format array $args	&eacute;crit une cha&icirc;ne format&eacute;e dans un flux
function virtual $filename	le fichier sur lequel la commande virtuelle sera effectuée
function bool virtual	exécute une commande virtuelle en cas de succès ou retourne false en cas déchec
function bool virtual string $filename	effectue une sous-requ&ecirc;te apache
function vprintf $format	voir la documentation de la fonction sprintf() pour une description détaillée du paramètre format
function int vprintf	retourne la longueur de la chaîne retournée
function int vprintf string $format array $args	affiche une cha&icirc;ne format&eacute;e
function vsprintf $format	voir la documentation de la fonction sprintf() pour une description détaillée du paramètre format
function string vsprintf	retourne une chaîne formatée à partir du tableau de valeurs args et en utilisant le format format
function string vsprintf string $format array $args	retourne une cha&icirc;ne format&eacute;e
function wddx add vars $packet_id	un paquet wddx retourné par la fonction wddx_packet_start()
function wddx add vars $var_name	peut être une chaîne de caractères nommant une variable ou un tableau contenant des noms de variables ou dautres tableaux etc
function bool wddx add vars	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool wddx add vars resource $packet_id mixed $var_name	ajoute des variables &agrave; un paquet wddx
function wddx deserialize $packet	un paquet wddx sous la forme dune chaîne de caractères ou dun flux
function mixed wddx deserialize	retourne la valeur délinéarisée pouvant être une chaîne de caractères un nombre ou un tableau
function mixed wddx deserialize string $packet	d&eacute;lin&eacute;arise un paquet wddx
function wddx packet end $packet_id	un paquet wddx retourné par la fonction wddx_packet_start()
function string wddx packet end	retourne une chaîne de caractères contenant le paquet wddx
function string wddx packet end resource $packet_id	cl&ocirc;t un paquet wddx
function wddx packet start $comment	une chaîne de caractères optionnelle contenant le commentaire
function resource wddx packet start	retourne un identifiant de paquet pour utilisation ultérieure avec les fonctions wddx ou false si une erreur survient
function resource wddx packet start string $comment	commence un nouveau paquet wddx avec une structure
function wddx serialize value $var	la valeur à linéariser
function wddx serialize value $comment	une chaîne de caractères optionnelle contenant un commentaire qui apparaît dans len-tête du paquet
function string wddx serialize value	retourne le paquet wddx ou false si une erreur survient
function string wddx serialize value mixed $var string $comment	enregistre une valeur dans un paquet wddx
function int win32 get last control message	retourne une constante de contrôle qui sera une parmi les constantes de contrôle des messages de service win32service : win32_service_control_continue win32_service_control_interrogate win32_service_control_pause win32_service_control_preshutdown win32_service_control_shutdown win32_service_control_stop
function int win32 get last control message	retourne le dernier message de contr&ocirc;le qui a &eacute;t&eacute; envoy&eacute; &agrave; ce service
function win32 pause service $machine	nom de la machine optionnel
function win32 pause service $servicename	le nom court du service
function int win32 pause service	returns win32_no_error on success false if there is a problem with the parameters or a win32 error code on failure
function int win32 pause service string $servicename string $machine	met en pause un service
function array win32 ps list procs	retourne false en cas derreur ou un tableau contenant des statistiques de processus comme la fonction win32_ps_stat_proc() retourne pour tous les processus qui fonctionnent en cas de succès
function array win32 ps list procs	liste des processus qui fonctionnent
function array win32 ps stat mem	retourne false en cas déchec ou un tableau contenant les informations suivantes en cas de succès :
function array win32 ps stat mem	statistiques de l'utilisation de la m&eacute;moire
function win32 ps stat proc $pid	lidentifiant du processus à obtenir des statistiques
function array win32 ps stat proc	retourne false en cas déchec ou un tableau contenant les informations suivantes en cas de succès :
function array win32 ps stat proc int $pid	statistique de processus
function win32 query service status $servicename	le nom court du service
function win32 query service status $machine	le nom optionnel de la machine
function mixed win32 query service status	retourne un tableau contenant les informations suivantes en cas de succès false if there is a problem with the parameters or a win32 error code on failure
function mixed win32 query service status string $servicename string $machine	questionne le statut d'un service
function win32 set service status $status	le code de statut de service un de win32_service_running win32_service_stopped win32_service_stop_pending win32_service_start_pending win32_service_continue_pending win32_service_pause_pending win32_service_paused
function win32 set service status $checkpoint	cette valeur sera incrémentée par le service périodiquement pour reporter sa progression lors des opérations de démarrage darrêt de pause ou de reprise
function bool win32 set service status	returns true on success false if there is a problem with the parameters or a win32 error code on failure
function bool win32 set service status int $status int $checkpoint	met &agrave; jour le statut d'un service
function win32 stop service $servicename	le nom court du service
function win32 stop service $machine	le nom optionnel de la machine
function int win32 stop service	returns win32_no_error on success false if there is a problem with the parameters or a win32 error code on failure
function int win32 stop service string $servicename string $machine	arr&ecirc;te un service
function wincache fcache fileinfo $summaryonly	si le tableau retourné doit contenir des informations sur chaque entrée du cache en plus du résumé sur les fichiers du cache
function array wincache fcache fileinfo	tableau de méta-données sur le cache de fichier ou false si une erreur survient
function array wincache fcache fileinfo bool $summaryonly	extrait des informations sur les fichiers mis en cache dans le cache de fichiers
function array wincache ocache meminfo	tableau de méta-données sur lutilisation de la mémoire cache opcode ou false si une erreur survient
function array wincache ocache meminfo	extrait des informations sur l'utilisation du cache opcode
function wincache refresh if changed $files	tableau de noms de fichiers pour les fichiers qui ont besoin dêtre actualisés
function bool wincache refresh if changed	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool wincache refresh if changed array $files	actualise les entr&eacute;es du cache pour les fichiers mis en cache
function array wincache rplist fileinfo	un tableau de données méta contenant le contenu du cache dun chemin de fichier résolu ou false si une erreur survient
function array wincache rplist fileinfo bool $summaryonly	r&eacute;cup&egrave;re des informations du cache sur un chemin de fichier r&eacute;solu
function wincache scache info $summaryonly	contrôle si le tableau retourné doit contenir des informations sur des entrées individuelles du cache en plus du résumé du cache
function array wincache scache info	un tableau de données méta sur le cache pour cette session ou false si une erreur survient
function array wincache scache info bool $summaryonly	r&eacute;cup&egrave;re des informations sur des fichiers mis en cache
function array wincache scache meminfo	un tableau de données méta sur lutilisation de la mémoire du cache ou false si une erreur survient
function array wincache scache meminfo	r&eacute;cup&egrave;re des informations sur l'utilisation de la m&eacute;moire du cache
function wincache ucache add $value	la valeur de la variable à stocker
function wincache ucache add $values	tableau associatif de clés et de valeurs
function wincache ucache add $ttl	durée de vie de la variable dans le cache en secondes
function wincache ucache add $key	stocke la variable en utilisant le nom key
function bool wincache ucache add string $key mixed $value int $ttl	ajoute une nouvelle variable au cache utilisateur
function wincache ucache cas $key	la clé key utilisé pour stocker la variable dans le cache
function wincache ucache cas $new_value	la nouvelle valeur qui sera assignée à la variable pointée par la clé key si la correspondance a été trouvée
function wincache ucache cas $old_value	lancienne valeur de la variable pointée par le paramètre key dans le cache utilisateur
function bool wincache ucache cas	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool wincache ucache cas string $key int $old_value int $new_value	compare la variable avec son ancienne valeur et lui assigne une nouvelle valeur
function bool wincache ucache clear	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool wincache ucache clear	supprime le contenu d'une entr&eacute;e du cache utilisateur
function wincache ucache dec $dec_by	la valeur utilisée pour décrémenter la variable associée à la clé key
function wincache ucache dec $success	sera définie à true en cas de succès false si une erreur survient
function wincache ucache dec $key	la clé key utilisée pour stoker la variable dans le cache
function mixed wincache ucache dec string $key int $dec_by bool $success	d&eacute;cr&eacute;mente la valeur associ&eacute;e &agrave; une cl&eacute;
function wincache ucache delete $key	la clé key utilisée pour stoker la variable dans le cache
function bool wincache ucache delete	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool wincache ucache delete mixed $key	supprime les variables du cache utilisateur
function wincache ucache exists $key	la clé key utilisée pour stoker la variable dans le cache
function bool wincache ucache exists	retourne true si la variable dont la clé est key existe false sinon
function bool wincache ucache exists string $key	v&eacute;rifie si une variable existe dans le cache utilisateur
function wincache ucache inc $inc_by	la valeur utilisée pour incrémenter la variable associée à la clé key
function wincache ucache inc $success	sera défini à true en cas de succès false si une erreur survient
function wincache ucache inc $key	la clé key utilisée pour stoker la variable dans le cache
function mixed wincache ucache inc string $key int $inc_by bool $success	incr&eacute;mente la valeur associ&eacute;e &agrave; une cl&eacute;
function wincache ucache info $key	la clé de lentrée du cache utilisateur
function wincache ucache info $summaryonly	contrôle si le tableau résultant doit contenir les informations sur des entrées individuelles en plus du résumé du cache utilisateur
function array wincache ucache info	un tableau de données méta sur le cache utilisateur ou false si une erreur survient
function array wincache ucache info bool $summaryonly string $key	r&eacute;cup&egrave;re des informations sur des donn&eacute;es stok&eacute;es dans le cache utilisateur
function array wincache ucache meminfo	tableau de données méta sur lutilisation mémoire du cache utilisateur ou false si une erreur survient
function array wincache ucache meminfo	r&eacute;cup&egrave;re des informations sur l'utilisation m&eacute;moire du cache utilisateur
function wincache unlock $key	nom de la clé du cache pour laquelle le verrou doit être libéré
function bool wincache unlock	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool wincache unlock string $key	lib&egrave;re un verrou exclusif sur une cl&eacute; donn&eacute;e
function xattr list $filename	le chemin vers le fichier
function xattr list $flags	flags xattr supportés xattr_dontfollow ne pas suivre les liens symboliques mais opère directement sur le lien lui-même
function array xattr list	cette fonction retourne un tableau contenant les noms des attributs étendus
function array xattr list string $filename int $flags	r&eacute;cup&egrave;re une liste d'attributs &eacute;tendus
function xattr remove $name	le nom de lattribut à effacer
function xattr remove $filename	le fichier depuis lequel nous effaçons lattribut
function xattr remove $flags	options xattr disponibles xattr_dontfollow ne pas suivre les liens symboliques mais opère directement sur le lien lui-même
function bool xattr remove	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xattr remove string $filename string $name int $flags	efface un attribut &eacute;tendu
function xattr set $filename	le fichier dans lequel nous devons définir lattribut
function xattr set $name	le nom de lattribut étendu
function xattr set $value	la valeur de lattribut
function xattr set $flags	flags xattr supportés xattr_create la fonction échouera si lattribut étendu existe déjà
function bool xattr set	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xattr set string $filename string $name string $value int $flags	d&eacute;finit un attribut &eacute;tendu
function xdiff file bdiff size $file	le patch du patch binaire créé par la fonction xdiff_string_bdiff() ou la fonction xdiff_string_rabdiff()
function int xdiff file bdiff size	retourne la taille du fichier créé
function int xdiff file bdiff size string $file	lit la taille d'un fichier cr&eacute;&eacute; lors de l'application d'un diff binaire
function xdiff file diff binary $new_file	chemin jusquau deuxième fichier
function xdiff file diff binary $old_file	chemin jusquau premier fichier
function xdiff file diff binary $dest	chemin vers le fichier résultat
function bool xdiff file diff binary	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xdiff file diff binary string $old_file string $new_file string $dest	cr&eacute;&eacute; un diff binaire de deux fichier
function xdiff file diff $old_file	chemin vers le premier fichier
function xdiff file diff $minimal	configurez minimal à true si vous voulez minimaliser la taille du fichier des différences peut prendre beaucoup de temps
function xdiff file diff $dest	chemin vers le fichier contenant la différence
function xdiff file diff $new_file	chemin vers le second fichier
function xdiff file diff $context	indique le nombre de lignes de contexte que vous voulez inclure dans le résultat de diff
function bool xdiff file diff	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xdiff file diff string $old_file string $new_file string $dest int $context bool $minimal	cr&eacute;&eacute; un diff unifi&eacute; entre deux fichiers
function xdiff file patch binary $patch	le patch binaire
function xdiff file patch binary $file	le fichier original
function xdiff file patch binary $dest	le chemin vers le fichier résultat
function bool xdiff file patch binary	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xdiff file patch binary string $file string $patch string $dest	alias de xdiff_file_bpatch
function xdiff file patch $patch	le fichier contenant le patch unifié
function xdiff file patch $file	le fichier original
function xdiff file patch $dest	le chemin vers le fichier résultat
function xdiff file patch $flags	peut être soit xdiff_patch_normal mode par défaut patch normal ou xdiff_patch_reverse patch inversé)
function mixed xdiff file patch	retourne false si une erreur interne sest produite une chaîne avec les parties rejetées du patch si cest le cas ou true si le patch a été appliqué avec succès
function mixed xdiff file patch string $file string $patch string $dest int $flags	patche un fichier avec un diff unifi&eacute;
function xdiff string bpatch $patch	le patch binaire sous forme dune chaîne de caractères
function xdiff string bpatch $str	la chaîne binaire originale
function string xdiff string bpatch	retourne la chaîne patchée ou false si une erreur survient
function string xdiff string bpatch string $str string $patch	patche une cha&icirc;ne avec un diff binaire
function xdiff string merge3 $new_data2	troisième chaîne de données
function xdiff string merge3 $error	si error est fourni alors les parties rejetées y seront stockées
function xdiff string merge3 $new_data1	seconde chaîne de données
function xdiff string merge3 $old_data	première chaîne de données
function mixed xdiff string merge3	retourne la chaîne fusionnée false si une erreur interne survient ou true si la chaîne fusionnée est vide
function mixed xdiff string merge3 string $old_data string $new_data1 string $new_data2 string $error	fusionne trois cha&icirc;nes en une seule
function xdiff string patch binary $patch	le patch binaire
function xdiff string patch binary $str	la chaîne binaire originale
function string xdiff string patch binary	retourne la chaîne patchée ou false si une erreur survient
function string xdiff string patch binary string $str string $patch	alias de xdiff_string_bpatch
function array xhprof sample disable	un tableau de données de léchantillon xhprof issues de son exécution
function array xhprof sample disable	stoppe le profilage xhprof sur &eacute;chantillon
function void xhprof sample enable	d&eacute;marre le profilage en mode &eacute;chantillonnage
function xml error string $code	un code erreur provenant de xml_get_error_code()
function string xml error string	retourne une chaîne représentant la description de lerreur code ou false si aucune description nest trouvée
function string xml error string int $code	lit le message d'erreur de l'analyseur xml
function xml get current byte index $parser	une référence sur un analyseur xml valide
function int xml get current byte index	xml_get_current_byte_index() retourne false si parser nest pas valide ou sinon retourne lindex de loctet danalyse courante de lanalyseur xml débute à 0
function int xml get current byte index resource $parser	retourne l'index de l'octet courant d'un analyseur xml
function xml get current column number $parser	une référence sur un analyseur xml valide
function int xml get current column number	xml_get_current_column_number() retourne false si parser nest pas valide ou sinon retourne le numéro de colonne courant de la ligne courante de lanalyseur qui correspond à la position danalyse courante de lanalyseur xml comme retourné par xml_get_current_line_number()
function int xml get current column number resource $parser	retourne le num&eacute;ro de colonne courant d'un analyseur xml
function xml get current line number $parser	une référence sur un analyseur xml valide
function int xml get current line number	xml_get_current_line_number() retourne false si parser nest pas valide ou sinon retourne le numéro de la ligne en cours danalyse
function int xml get current line number resource $parser	retourne le num&eacute;ro de ligne courant d'un analyseur xml
function xml parse into struct $values	un tableau contenant les valeurs des données xml
function xml parse into struct $parser	une référence à une analyseur xml
function xml parse into struct $index	un tableau contenant les pointeurs vers les valeurs appropriées dans le paramètre $values
function xml parse into struct $data	une chaîne de caractères contenant les données xml
function int xml parse into struct	xml_parse_into_struct() retourne 0 si une erreur survient et 1 en cas de succès
function int xml parse into struct resource $parser string $data array $values array $index	analyse une structure xml
function xml parser free $parser	une référence sur un analyseur xml
function bool xml parser free	cette fonction retourne false si parser nest pas une référence valide ou sinon détruit lanalyseur et retourne true
function bool xml parser free resource $parser	d&eacute;truit un analyseur xml
function xml parser set option $parser	une référence vers un analyseur xml
function xml parser set option $value	la nouvelle valeur de loption
function xml parser set option $option	loption à modifier
function bool xml parser set option	retourne false si parser nest pas une référence valide sur un analyseur xml ou si loption na pas pu être modifiée
function bool xml parser set option resource $parser int $option mixed $value	affecte les options d'un analyseur xml
function xml set character data handler $handler	handler est une chaîne qui contient le nom dune fonction qui existe lorsque xml_parse() est appelé pour créer parser
function xml set character data handler $data	le second paramètre data contient les caractères sous la forme dune chaîne
function xml set character data handler $parser	le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function xml set character data handler $parser	une référence à un analyseur xml à définir comme fonction gérant les données
function bool xml set character data handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set character data handler resource $parser callable $handler	affecte les gestionnaires de texte litt&eacute;ral
function xml set default handler $handler	handler est une chaîne qui contient le nom dune fonction qui existe lorsque xml_parse() est appelé pour créer parser
function xml set default handler $data	le second paramètre data contient les caractères sous la forme dune chaîne
function xml set default handler $parser	une référence à un analyseur xml à définir comme fonction danalyse par défaut
function xml set default handler $parser	le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function bool xml set default handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set default handler resource $parser callable $handler	affecte le gestionnaire xml par d&eacute;faut
function xml set element handler $name	le second paramètre name contient le nom de lélément qui a provoqué lappel du gestionnaire
function xml set element handler $parser	une référence danalyseur xml à définir comme fonction gérant les éléments de début et de fin
function xml set element handler $attribs	le troisième paramètre attribs contient un tableau associatif avec les attributs de lélément sil en existe
function xml set element handler $end_element_handler	la fonction endelementhandler doit accepter deux paramètres : end_element_handler resource $parser string $name parser le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function xml set element handler $start_element_handler	la fonction start_element_handler doit accepter trois paramètres : start_element_handler resource $parser string $name array $attribs parser le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function xml set element handler $name	le deuxième paramètre name contient le nom de lélément qui a provoqué lappel du gestionnaire
function xml set element handler $parser	le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function bool xml set element handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set element handler resource $parser callable $start_element_handler callable $end_element_handler	affecte les gestionnaires de d&eacute;but et de fin de balise xml
function xml set end namespace decl handler $handler	handler est une chaîne contenant le nom dune fonction qui doit exister lorsque la fonction xml_parse() est appelée pour lanalyseur parser
function xml set end namespace decl handler $prefix	le préfixe est une chaîne de caractères utilisée pour référencer lespace de noms dans un objet
function xml set end namespace decl handler $parser	une référence à un analyseur xml
function xml set end namespace decl handler $parser	le 3ème paramètre parser est une référence à lanalyseur xml appelée par le gestionnaire
function bool xml set end namespace decl handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set end namespace decl handler resource $parser callable $handler	configure le gestionnaire xml de donn&eacute;es
function xml set external entity ref handler $parser	une référence danalyseur xml à définir comme fonction de référence dentités externes
function xml set external entity ref handler $open_entity_names	le deuxième paramètre open_entity_names est la liste de noms dentités séparés par des espaces
function xml set external entity ref handler $system_id	identifiant système pour cette entité externe
function xml set external entity ref handler $handler	handler est une chaîne qui contient les noms de fonctions qui existent lorsque xml_parse() est appelé pour créer le parser
function xml set external entity ref handler $base	la meilleure base de résolution de lidentifiant système system_id de cette entité externe
function xml set external entity ref handler $public_id	le cinquième paramètre public_id est lidentifiant public comme spécifié dans la déclaration dentité ou une chaîne vide si aucune déclaration na été spécifiée
function xml set external entity ref handler $parser	le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function bool xml set external entity ref handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set external entity ref handler resource $parser callable $handler	configure le gestionnaire xml de r&eacute;f&eacute;rences externes
function xml set notation decl handler $notation_name	le nom de la notation name comme précisé dans le format de notation ci-dessus
function xml set notation decl handler $parser	une référence danalyseur xml à définir comme fonction de déclaration de notation
function xml set notation decl handler $public_id	identifiant public pour cette entité externe
function xml set notation decl handler $system_id	identifiant système pour cette entité externe
function xml set notation decl handler $handler	handler est une chaîne qui contient le nom dune fonction qui existe lorsque xml_parse() est appelé pour créer parser
function xml set notation decl handler $base	la meilleure base de résolution de lidentifiant système system_id de cette entité externe
function xml set notation decl handler $parser	le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function bool xml set notation decl handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set notation decl handler resource $parser callable $handler	configure le gestionnaire xml de notations
function xml set object $object	lobjet dans lequel nous devons utiliser lanalyseur xml
function xml set object $parser	une référence danalyseur xml à utiliser dans lobjet
function bool xml set object	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set object resource $parser object $object	configure un objet comme analyseur xml
function xml set processing instruction handler $handler	handler est une chaîne qui contient le nom dune fonction qui existe lorsque xml_parse() est appelé pour créer parser
function xml set processing instruction handler $target	le second paramètre target contient lapplication cible
function xml set processing instruction handler $parser	une référence à lanalyseur xml à définir comme fonction danalyse dinstructions pi
function xml set processing instruction handler $parser	le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function xml set processing instruction handler $data	le troisième paramètre data contient le code sous la forme dune chaîne
function bool xml set processing instruction handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set processing instruction handler resource $parser callable $handler	affecte les gestionnaires d'instructions ex&eacute;cutables
function xml set start namespace decl handler $parser	le premier paramètre parser est une référence à lanalyseur xml appelée par le gestionnaire
function xml set start namespace decl handler $handler	handler est une chaîne contenant le nom dune fonction devant exister lorsque la fonction xml_parse() est appelé pour lanalyseur parser
function xml set start namespace decl handler $prefix	le préfixe est une chaîne de caractères utilisée pour référencer lespace de noms dun objet xml
function xml set start namespace decl handler $uri	identifiant de ressource uniforme uri dun espace de noms
function xml set start namespace decl handler $parser	une référence vers lanalyseur xml
function bool xml set start namespace decl handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set start namespace decl handler resource $parser callable $handler	configure le gestionnaire de caract&egrave;res
function xml set unparsed entity decl handler $entity_name	le nom de lentité qui va être définie
function xml set unparsed entity decl handler $public_id	identifiant public pour cette entité externe
function xml set unparsed entity decl handler $notation_name	nom de la notation de cette entité
function xml set unparsed entity decl handler $system_id	identifiant système pour cette entité externe
function xml set unparsed entity decl handler $parser	le premier paramètre parser est une référence sur lanalyseur xml qui appelle cette fonction
function xml set unparsed entity decl handler $handler	handler est une chaîne qui contient le nom dune fonction qui existe lorsque xml_parse() est appelé pour créer parser
function xml set unparsed entity decl handler $base	la meilleure base de résolution de lidentifiant système de cette entité externe
function xml set unparsed entity decl handler $parser	une référence à lanalyseur xml à définir à la fonction utilisée par traiter les déclarations dentités non-analysées
function bool xml set unparsed entity decl handler	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xml set unparsed entity decl handler resource $parser callable $handler	affecte les gestionnaires d'entit&eacute;s non d&eacute;clar&eacute;es
function xmlrpc set type $value	valeur dont on veut modifier le type
function xmlrpc set type $type	base64 ou datetime
function bool xmlrpc set type	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool xmlrpc set type string $value string $type	d&eacute;finit le type xmlrpc base64 ou datetime d'une valeur php
function yaml emit file $callbacks	gestionnaires de contenu pour lémission de noeud yaml
function yaml emit file $linebreak	caractère de fin de ligne choisi parmi yaml_any_break yaml_cr_break yaml_ln_break yaml_crln_break
function yaml emit file $encoding	encodage des caractères en sortie choisi parmi yaml_any_encoding yaml_utf8_encoding yaml_utf16le_encoding yaml_utf16be_encoding
function yaml emit file $data	donnée à encoder
function yaml emit file $filename	chemin vers un fichier
function bool yaml emit file	retourne true en cas de succès
function bool yaml emit file string $filename mixed $data int $encoding int $linebreak array $callbacks	envoie une repr&eacute;sentation yaml vers un fichier
function yaml emit $linebreak	caractère de fin de ligne choisi parmi yaml_any_break yaml_cr_break yaml_ln_break yaml_crln_break
function yaml emit $data	les données à encoder
function yaml emit $encoding	encodage des caractères en sortie choisi parmi yaml_any_encoding yaml_utf8_encoding yaml_utf16le_encoding yaml_utf16be_encoding
function yaml emit $callbacks	gestionnaires de contenu pour lémission de noeud yaml
function string yaml emit	retourne une chaîne yaml en cas de succès
function string yaml emit mixed $data int $encoding int $linebreak array $callbacks	retourne une cha&icirc;ne repr&eacute;sentant une valeur yaml
function yaml parse file $ndocs	si ndocs est fourni alors il est rempli avec le nombre de documents trouvés dans le flux
function yaml parse file $pos	le document à extraire du flux -1 pour tous les documents 0 pour le premier
function yaml parse file $callbacks	analyseurs de contenu pour les noeuds yaml
function yaml parse file $filename	chemin vers le fichier
function mixed yaml parse file	retourne la valeur encodée de filename dans le type php approprié ou false si une erreur survient
function mixed yaml parse file string $filename int $pos int $ndocs array $callbacks	analyse un flux yaml depuis un fichier
function yaz ccl conf $config	un tableau de configuration
function yaz ccl conf $id	la ressource de connexion retournée par yaz_connect()
function void yaz ccl conf resource $id array $config	configure l'analyseur ccl
function yaz ccl parse $query	la requête ccl find
function yaz ccl parse $id	la ressource de connexion retournée par yaz_connect()
function yaz ccl parse $result	si la fonction a été exécutée correctement cet argument sera un tableau contenant la requête rpn valide sous la clé rpn
function bool yaz ccl parse	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool yaz ccl parse resource $id string $query array $result	appelle l'analyseur ccl
function yaz close $id	la ressource de connexion retournée par yaz_connect()
function bool yaz close	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool yaz close resource $id	ferme une connexion yaz
function yaz connect $persistent	un booléen
function yaz connect $proxy	proxy pour connexion proxy yaz
function yaz connect $password	mot de passe pour authentification
function yaz connect $user	utilisateur pour authentification
function yaz connect $cookie	cookie pour session proxy yaz
function yaz connect $group	groupe pour authentification
function yaz connect $zurl	une chaîne de caractères qui prend la forme host[:port][ / database]
function yaz connect $piggyback	un booléen
function yaz connect $charset	une chaîne de caractères qui spécifie le jeu de caractères qui sera utilisé dans le langage z39
function yaz connect $preferredMessageSize	un entier qui spécifie la taille maximale en octets pour toutes les entrées qui seront retournées par la cible durant la récupération
function yaz connect $options	si donné comme une chaîne de caractères cela sera traité comme la chaîne dauthentification z39
function yaz connect $maximumRecordSize	un entier qui spécifie la taille maximale en octets pour une seule entrée qui sera retournée par la cible durant la récupération
function mixed yaz connect	une ressource de connexion en cas de réussite false en cas derreur
function mixed yaz connect string $zurl mixed $options	pr&eacute;pare une connexion &agrave; un serveur z39
function yaz database $databases	une chaîne de caractères contenant une ou plusieurs bases de données
function yaz database $id	la ressource de connexion retournée par yaz_connect()
function bool yaz database	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool yaz database resource $id string $databases	sp&eacute;cifie la base d'une session yaz
function yaz element $id	la ressource de connexion retournée par yaz_connect()
function yaz element $elementset	la plupart des serveurs supportent f pour les enregistrements complets et b pour les enregistrements brefs
function bool yaz element	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool yaz element resource $id string $elementset	sp&eacute;cifie le type d'&eacute;l&eacute;ments yaz &agrave; lire
function yaz error $id	la ressource de connexion retournée par yaz_connect()
function string yaz error	retourne un message derreur pour le serveur dernière requête identifié par le paramètre id
function string yaz error resource $id	retourne une description de l'erreur
function yaz es result $id	la ressource de connexion retournée par yaz_connect()
function array yaz es result	retourne un tableau avec lélément targetreference pour la référence pour lopération de service étendu généré et retourné depuis le serveur
function array yaz es result resource $id	inspecte le r&eacute;sultat d'un service &eacute;tendu
function yaz es $id	la ressource de connexion retournée par yaz_connect()
function yaz es $type	une chaîne de caractères représentant le type de service étendu : itemorder item order create create database drop drop database commit commit operation update update record xmlupdate xml update
function yaz es $args	un tableau avec les options de service étendu et les options spécifiques du paquet
function void yaz es resource $id string $type array $args	pr&eacute;pare pour une requ&ecirc;te de service &eacute;tendu
function yaz get option $name	le nom de loption
function yaz get option $id	la ressource de connexion retournée par yaz_connect()
function string yaz get option	retourne la valeur de loption spécifiée ou une chaîne de caractères vide si loption nétait pas définie
function string yaz get option resource $id string $name	retourne la valeur d'une option de connexion yaz
function yaz itemorder $id	la ressource de connexion retournée par yaz_connect()
function yaz itemorder $args	doit être un tableau associatif avec les informations à propos de lordre des items des requêtes qui seront envoyées
function void yaz itemorder resource $id array $args	pr&eacute;pare une requ&ecirc;te z39
function yaz present $id	la ressource de connexion retournée par yaz_connect()
function bool yaz present	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool yaz present resource $id	pr&eacute;pare &agrave; la lecture z39
function yaz range $number	spécifie le nombre denregistrements qui doivent être récupérés
function yaz range $id	la ressource de connexion retournée par yaz_connect()
function yaz range $start	spécifie la position du premier enregistrement à récupérer
function void yaz range resource $id int $start int $number	sp&eacute;cifie le nombre maximal de r&eacute;sultats &agrave; lire
function yaz record $pos	la position de lenregistrement
function yaz record $array	lenregistrement est retourné comme un tableau qui réfléchit la structure grs-1
function yaz record $database	le nom de la base de données associée aux résultats à la position est retourné comme une chaîne de caractères
function yaz record $raw	lenregistrement est retourné comme une chaîne de caractères dans sa forme originale
function yaz record $xml	lenregistrement est retourné comme une chaîne de caractères xml si possible
function yaz record $string	lenregistrement est retourné comme une chaîne de caractères pour affichage simple
function yaz record $id	la ressource de connexion retournée par yaz_connect()
function yaz record $syntax	la syntaxe de lenregistrement est retournée comme une chaîne de caractères par exemple usmarc grs-1 xml etc
function yaz record $type	le type spécifie la forme du résultat retourné
function string yaz record	retourne lenregistrement à la position pos ou une chaîne vide si aucun enregistrement nexiste à la position donnée
function string yaz record resource $id int $pos string $type	retourne un r&eacute;sultat
function yaz scan result $id	la ressource de connexion retournée par yaz_connect()
function yaz scan result $result	si donné ce tableau sera modifié pour contenir des informations additionnelles prises à partir de la réponse scan : number - nombre dentrées retournées stepsize - grandeur de pas position - position du terme status - statut du scan
function array yaz scan result	retourne un tableau 0
function array yaz scan result resource $id array $result	retourne le r&eacute;sultat d'un scan
function yaz scan $type	actuellement seulement le type rpn est supporté
function yaz scan $startterm	point de départ du scan
function yaz scan $id	la ressource de connexion retournée par yaz_connect()
function yaz scan $flags	ce paramètre optionnel spécifie des informations supplémentaires pour contrôler le comportement de la requête de scan
function void yaz scan resource $id string $type string $startterm array $flags	pr&eacute;pare un scan yaz
function yaz schema $id	la ressource de connexion retournée par yaz_connect()
function yaz schema $schema	doit être spécifié comme un oid object identifier dans une notation par point brut comme 1
function void yaz schema resource $id string $schema	sp&eacute;cifie le sch&eacute;ma de lecture
function yaz search $query	les requêtes rpn sont des représentations textuelles des requêtes de type type-1 comme défini dans le standard z39
function yaz search $id	la ressource de connexion retournée par yaz_connect()
function yaz search $type	ce paramètre représente le type de requête - seul rpn est supporté actuellement et dans ce cas le troisième argument est un préfixe de notation de requête utilisé par yaz
function bool yaz search	cette fonction retourne true en cas de succès ou false si une erreur survient
function bool yaz search resource $id string $type string $query	pr&eacute;pare une recherche
function yaz sort $a	tri ascendant
function yaz sort $i	tri insensible à la casse
function yaz sort $s	tri sensible à la casse
function yaz sort $id	la ressource de connexion retournée par yaz_connect()
function yaz sort $criteria	une chaîne de caractères qui prend la forme de field1 flags1 field2 flags2 où field1 spécifie les attributs primaires pour le tri field2 le second etc
function yaz sort $d	tri descendant
function void yaz sort resource $id string $criteria	configure les crit&egrave;res de tri
function yaz syntax $id	la ressource de connexion retournée par yaz_connect()
function yaz syntax $syntax	doit être spécifié comme un oid object identifier dans une notation par point brut comme 1
function void yaz syntax resource $id string $syntax	sp&eacute;cifie la syntaxe de lecture des lignes
function yaz wait $timeout	spécifie un délai dattente en secondes
function yaz wait $options	un tableau associatif des options : timeout spécifie un délai dattente en secondes
function yaz wait $event	un booléen
function mixed yaz wait	cette fonction retourne true en cas de succès ou false si une erreur survient
function mixed yaz wait array $options	attend l'ex&eacute;cution d'une requ&ecirc;te
function yp all $map	la carte nis
function yp all $domain	le nom du domaine nis
function void yp all string $domain string $map string $callback	traverse la carte et applique une fonction sur chaque entr&eacute;e
function yp cat $map	la carte nis
function yp cat $domain	le nom du domaine nis
function array yp cat	retourne toutes les entrées de la carte sous forme de tableau associatif dont les clés et les valeurs sont respectivement les clés et les entrées de la carte
function array yp cat string $domain string $map	retourne une tableau contenant la carte enti&egrave;re
function int yp errno	retourne une des constantes yperr_xxx
function int yp errno	retourne le code d'erreur de la derni&egrave;re op&eacute;ration nis
function yp first $map	la carte nis
function yp first $domain	le nom du domaine nis
function array yp first	retourne la première paire clé / valeur dune carte donnée ou false si une erreur survient
function array yp first string $domain string $map	retourne la premi&egrave;re paire cl&eacute; / valeur d'une carte donn&eacute;e
function yp master $map	la carte nis
function yp master $domain	le nom du domaine nis
function string yp master string $domain string $map	retourne le nom de la machine ma&icirc;tre pour une carte
function yp match $map	la carte nis
function yp match $key	cette clé doit être exacte
function yp match $domain	le nom du domaine nis
function string yp match	retourne la valeur ou false si une erreur survient
function string yp match string $domain string $map string $key	retourne la ligne associ&eacute;e
function int yp order	retourne le numéro dordre pour la carte ou false si une erreur survient
function int yp order string $domain string $map	retourne le num&eacute;ro d'ordre d'une carte
function string zend logo guid	retourne phpe9568f35-d428-11d2-a769-00aa001acf42
function string zend logo guid	retourne le logo de zend
function int zend thread id	retourne lidentifiant du thread sous la forme dun entier
function int zend thread id	retourne un identifiant unique du thread courant
function zip close $zip	un fichier zip précédemment ouvert avec la fonction zip_open()
function void zip close resource $zip	ferme une archive zip
function zip entry compressedsize $zip_entry	un dossier darchives retourné par la fonction zip_read()
function int zip entry compressedsize	la taille compressée
function int zip entry compressedsize resource $zip_entry	lit la taille compress&eacute;e d'un dossier d'archives
function zip entry compressionmethod $zip_entry	un dossier darchives retourné par la fonction zip_read()
function string zip entry compressionmethod	la méthode de compression
function string zip entry compressionmethod resource $zip_entry	lit la m&eacute;thode de compression utilis&eacute;e sur un dossier d'archives
function zip entry filesize $zip_entry	un dossier darchives retourné par la fonction zip_read()
function int zip entry filesize	la taille décompressée du dossier darchives
function int zip entry filesize resource $zip_entry	lit la taille d&eacute;compress&eacute;e d'un dossier d'archives
function zip entry read $length	le nombre doctets à retourner
function zip entry read $zip_entry	un dossier darchives retourné par la fonction zip_read()
function string zip entry read	retourne les données lues une chaîne vide si lon est à la fin du fichier ou false si une erreur survient
function string zip entry read resource $zip_entry int $length	lit le contenu d'un fichier dans un dossier
function zip read $zip	un fichier zip précédemment ouvert avec la fonction zip_open()
function resource zip read	retourne une ressource de dossier darchive à utiliser plus tard avec les autres fonctions de la bibliothèque false sil ny a plus dentrées à lire dans larchive zip ou le numéro de lerreur si une erreur survient
function resource zip read resource $zip	lit la prochaine entr&eacute;e dans une archive zip
function string zlib decode string $data string $max_decoded_len	d&eacute;compresse des donn&eacute;es encod&eacute;es raw / gzip / zlib
function string zlib encode string $data string $encoding string $level	compresse des donn&eacute;es avec l'encodage sp&eacute;cifi&eacute;
function string zlib get coding type	les valeurs possibles de retour sont gzip deflate ou false
function string zlib get coding type	retourne la m&eacute;thode de compression utilis&eacute;e avec gzip
GearmanClient add Server $port	le port du serveur de travaux
GearmanClient add Server $host	le nom dhôte du serveur de travaux
GearmanClient bool add Server	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool add Server string $host int $port	ajoute un serveur de t&acirc;ches au client
GearmanClient add Servers $servers	une liste de serveurs séparés par des virgules chacun étant spécifié selon le format host:port
GearmanClient bool add Servers	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool add Servers string $servers	ajoute une liste de serveurs de t&acirc;ches au client
GearmanClient add Task $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient add Task $workload	données linéarisées à analyser
GearmanClient add Task $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient add Task $context	contexte de lapplication à associer avec une tâche
GearmanClient GearmanTask add Task	un objet gearmantask ou false si l tâche na pu être ajoutée
GearmanClient GearmanTask add Task string $function_name string $workload mixed $context string $unique	ajoute une t&acirc;che &agrave; ex&eacute;cuter en parall&egrave;le
GearmanClient add Task Background $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient add Task Background $workload	données linéarisées à analyser
GearmanClient add Task Background $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient add Task Background $context	contexte de lapplication à associer avec une tâche
GearmanClient GearmanTask add Task Background	un objet gearmantask ou false si la tâche na pu être ajoutée
GearmanClient GearmanTask add Task Background string $function_name string $workload mixed $context string $unique	ajoute une t&acirc;che d'arri&egrave;re-plan pour une ex&eacute;cution en parall&egrave;le
GearmanClient add Task High Background $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient add Task High Background $workload	données linéarisées à analyser
GearmanClient add Task High Background $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient add Task High Background $context	contexte de lapplication à associer avec une tâche
GearmanClient GearmanTask add Task High Background	un objet gearmantask ou false si la tâche ne peut pas être ajoutée
GearmanClient GearmanTask add Task High Background string $function_name string $workload mixed $context string $unique	ajoute une t&acirc;che de fond de forte priorit&eacute; &agrave; effectuer en parall&egrave;le
GearmanClient add Task Low $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient add Task Low $workload	données linéarisées à analyser
GearmanClient add Task Low $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient add Task Low $context	contexte de lapplication à associer avec une tâche
GearmanClient GearmanTask add Task Low	un objet gearmantask ou false si la tâche ne peut pas être ajoutée
GearmanClient GearmanTask add Task Low string $function_name string $workload mixed $context string $unique	ajoute une t&acirc;che de faible priorit&eacute; &agrave; effectuer en parall&egrave;le
GearmanClient add Task Status $job_handle	les descripteur pour la tâche dont on souhaite le statut
GearmanClient add Task Status $context	les données à passer au retour de statut généralement une référence à un tableau ou à un objet
GearmanClient GearmanTask add Task Status	un objet gearmantask
GearmanClient GearmanTask add Task Status string $job_handle string $context	ajoute une t&acirc;che pour obtenir le statut
GearmanClient string context	les données de contexte identiques à celles définies avec la fonction gearmanclient::setcontext()
GearmanClient string context	r&eacute;cup&egrave;re le contexte de l'application
GearmanClient do $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient do $workload	données linéarisées à analyser
GearmanClient do $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient string do	une représentation sous forme de chaîne de caractères du résultat de lexécution de la tâche
GearmanClient string do string $function_name string $workload string $unique	ex&eacute;cute une seule t&acirc;che et retourne le r&eacute;sultat obsol&egrave;te
GearmanClient do Background $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient do Background $workload	données linéarisées à analyser
GearmanClient do Background $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient string do Background	le gestionnaire de travaux pour la tâche soumise
GearmanClient string do Background string $function_name string $workload string $unique	ex&eacute;cute une t&acirc;che en arri&egrave;re-plan
GearmanClient do High Background $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient do High Background $workload	données linéarisées à analyser
GearmanClient do High Background $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient string do High Background	le gestionnaire de travail de la tâche ajoutée
GearmanClient string do High Background string $function_name string $workload string $unique	ex&eacute;cute une t&acirc;che en priorit&eacute; haute en arri&egrave;re plan
GearmanClient do Low $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient do Low $workload	données linéarisées à analyser
GearmanClient do Low $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient string do Low	une représentation sous forme de chaîne de caractères du résultat de la tâche en cours
GearmanClient string do Low string $function_name string $workload string $unique	ex&eacute;cute une seule t&acirc;che en priorit&eacute; basse
GearmanClient do Low Background $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient do Low Background $workload	données linéarisées à analyser
GearmanClient do Low Background $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient string do Low Background	le gestionnaire de travaux de la tâche soumise
GearmanClient string do Low Background string $function_name string $workload string $unique	ex&eacute;cute une t&acirc;che en priorit&eacute; basse en arri&egrave;re-plan
GearmanClient do Normal $unique	un identifiant unique utilisé pour identifier une tâche particulière
GearmanClient do Normal $workload	données linéarisées à analyser
GearmanClient do Normal $function_name	une fonction enregistrée que le travailleur va exécuter
GearmanClient string do Normal	une chaîne de caractères représentant le résultat de la tâche exécutée
GearmanClient string do Normal string $function_name string $workload string $unique	ex&eacute;cute une t&acirc;che et retourne le r&eacute;sultat
GearmanClient array do Status	un tableau représentant le pourcentage de réalisation fourni sous la forme dune fraction dont le premier élément est le numérateur et le second le dénominateur
GearmanClient array do Status	r&eacute;cup&egrave;re le statut de la t&acirc;che en cours
GearmanClient echo $workload	données arbitraires linéarisées
GearmanClient bool echo	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool echo string $workload	envoi des donn&eacute;es &agrave; tous les serveurs de travaux afin de v&eacute;rifier qu'ils les affichent en retour obsol&egrave;te
GearmanClient job Status $job_handle	le gestionnaire de travaux assigné par le serveur gearman
GearmanClient array job Status	un tableau contenant les informations de statut pour le travail correspondant au gestionnaire de travaux fourni
GearmanClient array job Status string $job_handle	r&eacute;cup&egrave;re le statut d'un travail en arri&egrave;re-plan
GearmanClient ping $workload	quelques données arbitraires qui seront retournées
GearmanClient bool ping	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool ping string $workload	envoi des donn&eacute;es &agrave; tous les serveurs de t&acirc;ches pour s'assurer qu'ils sont toujours en fonctionnement
GearmanClient remove Options $options	les options à supprimer
GearmanClient bool remove Options	retourne toujours true
GearmanClient bool remove Options int $options	supprime les options du client
GearmanClient int return Code	un code retour gearman valide
GearmanClient int return Code	r&eacute;cup&egrave;re le dernier code gearman retourn&eacute;
GearmanClient set Client Callback $callback	une fonction ou une méthode à appeler
GearmanClient void set Client Callback callable $callback	d&eacute;finit une fonction de rappel lorsqu'un paquet de donn&eacute;es est re&ccedil;u pour une t&acirc;che obsol&egrave;te
GearmanClient set Context $context	données de contexte
GearmanClient bool set Context	retourne toujours true
GearmanClient bool set Context string $context	d&eacute;finit le contexte d'une application
GearmanClient set Created Callback $callback	une fonction à appeler
GearmanClient bool set Created Callback	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool set Created Callback string $callback	d&eacute;finit une fonction de rappel &agrave; appeler lorsqu'une t&acirc;che est plac&eacute;e dans la file d'attente
GearmanClient set Data Callback $callback	une fonction ou une méthode à appeler
GearmanClient bool set Data Callback	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool set Data Callback callable $callback	d&eacute;finit une fonction de rappel &agrave; appeler lorsqu'un paquet de donn&eacute;es est re&ccedil;u pour une t&acirc;che
GearmanClient set Exception Callback $callback	fonction à appeler lorsque lagent émet une exception
GearmanClient bool set Exception Callback	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool set Exception Callback callable $callback	d&eacute;finit une fonction de rappel pour les exceptions &eacute;mises par l'agent
GearmanClient set Options $options	les options à définir
GearmanClient bool set Options	retourne toujours true
GearmanClient bool set Options int $options	d&eacute;finit les options du client
GearmanClient set Warning Callback $callback	une fonction à appeler
GearmanClient bool set Warning Callback	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool set Warning Callback callable $callback	d&eacute;finit une fonction de rappel lors de l'&eacute;mission d'alerte depuis l'agent
GearmanClient set Workload Callback $callback	une fonction à appeler
GearmanClient bool set Workload Callback	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanClient bool set Workload Callback callable $callback	d&eacute;finit une fonction de rappel lors de la r&eacute;ception de mises &agrave; jour de donn&eacute;es incr&eacute;mentales
GearmanJob complete $result	les données linéarisées du résultat
GearmanJob bool complete	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool complete string $result	envoie les r&eacute;sultats ainsi que le statut complet obsol&egrave;te
GearmanJob data $data	données linéarisées arbitraires
GearmanJob bool data	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool data string $data	envoie des donn&eacute;es pour un travail en cours d'ex&eacute;cution obsol&egrave;te
GearmanJob string function Name	le nom de la fonction
GearmanJob string function Name	r&eacute;cup&egrave;re le nom de la fonction
GearmanJob string handle	un gestionnaire de travaux
GearmanJob string handle	r&eacute;cup&egrave;re le gestionnaire de travaux
GearmanJob send Complete $result	les données linéarisées du résultat
GearmanJob bool send Complete	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool send Complete string $result	envoie le r&eacute;sultat ainsi que le statut complet
GearmanJob send Data $data	données linéarisées arbitraires
GearmanJob bool send Data	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool send Data string $data	envoie les donn&eacute;es pour un travail en cours d'ex&eacute;cution
GearmanJob send Exception $exception	une description dexception
GearmanJob bool send Exception	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool send Exception string $exception	envoie une exception pour un travail en cours d'ex&eacute;cution
GearmanJob bool send Fail	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool send Fail	envoie un statut d'&eacute;chec
GearmanJob set Return $gearman_return_t	une valeur de retour valide gearman
GearmanJob bool set Return int $gearman_return_t	d&eacute;finit une valeur de retour
GearmanJob status $numerator	le numérateur du taux de réalisation sous forme dune fraction
GearmanJob status $denominator	le dénominateur du taux de réalisation sous forme dune fraction
GearmanJob bool status	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool status int $numerator int $denominator	envoie un statut obsol&egrave;te
GearmanJob string unique	lidentifiant unique
GearmanJob string unique	r&eacute;cup&egrave;re l'identifiant unique
GearmanJob warning $warning	un message dalerte
GearmanJob bool warning	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanJob bool warning string $warning	envoie une alerte obsol&egrave;te
GearmanJob string workload	les données linéarisées
GearmanJob string workload	r&eacute;cup&egrave;re la charge de travail
GearmanJob int workload Size	la taille en octets
GearmanJob int workload Size	r&eacute;cup&egrave;re la taille de la charge de travail
GearmanTask - construct	cr&eacute;e une instance gearmantask
GearmanTask GearmanTask create	un objet gearmantask ou false si une erreur survient
GearmanTask GearmanTask create	cr&eacute;e une t&acirc;che obsol&egrave;te
GearmanTask string data	les données linéarisées ou false sil ny a aucune donnée
GearmanTask string data	r&eacute;cup&egrave;re les donn&eacute;es retourn&eacute;es par une t&acirc;che
GearmanTask int data Size	la taille des données ou false sil ny a pas de données
GearmanTask int data Size	r&eacute;cup&egrave;re la taille des donn&eacute;es retourn&eacute;es
GearmanTask string function Name	un nom de fonction
GearmanTask string function Name	r&eacute;cup&egrave;re le nom de la fonction associ&eacute;e
GearmanTask bool is Known	true si la tâche est connue false sinon
GearmanTask bool is Known	v&eacute;rifie si une t&acirc;che est connue
GearmanTask bool is Running	true si la tâche est en fonctionnement false sinon
GearmanTask bool is Running	v&eacute;rifie si la t&acirc;che est actuellement en fonctionnement
GearmanTask string job Handle	le gestionnaire de travaux
GearmanTask string job Handle	r&eacute;cup&egrave;re le gestionnaire de travaux
GearmanTask int task Denominator	un nombre entre 0 et 100 ou false sil ne peut être déterminé
GearmanTask int task Denominator	r&eacute;cup&egrave;re le d&eacute;nominateur du taux de r&eacute;alisation
GearmanTask int task Numerator	un nombre entre 0 et 100 ou false sil ne peut être déterminé
GearmanTask int task Numerator	r&eacute;cup&egrave;re le num&eacute;rateur du taux de r&eacute;alisation
GearmanTask string unique	lidentifiant unique ou false si aucun identifiant na été assigné
GearmanTask string unique	r&eacute;cup&egrave;re l'identifiant unique de la t&acirc;che
GearmanWorker add Function $function_name	le nom de la fonction à enregistrer avec le serveur de travaux
GearmanWorker add Function $context	une référence à des données de contexte de lapplication qui peuvent être modifiées par la fonction de lagent
GearmanWorker add Function $function	une fonction de rappel à appeler lorsquun travail est soumis
GearmanWorker add Function $timeout	un intervalle de temps en secondes
GearmanWorker bool add Function	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanWorker bool add Function string $function_name callable $function mixed $context int $timeout	enregistre et ajoute une fonction de rappel
GearmanWorker add Options $option	les options à ajouter
GearmanWorker bool add Options	retourne toujours true
GearmanWorker bool add Options int $option	ajout des options &agrave; l'agent
GearmanWorker add Server $port	le port du serveur de travaux
GearmanWorker add Server $host	le nom dhôte du serveur de travaux
GearmanWorker bool add Server	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanWorker bool add Server string $host int $port	ajoute un serveur de travaux
GearmanWorker add Servers $servers	une liste de serveurs de travaux séparés par une virgule au format hôte:port
GearmanWorker bool add Servers	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanWorker bool add Servers string $servers	ajoute plusieurs serveurs de travaux
GearmanWorker void clone	cr&eacute;e une copie d'un agent
GearmanWorker - construct	cr&eacute;e une instance gearmanworker
GearmanWorker echo $workload	données linéarisées arbitraires
GearmanWorker bool echo	retourne une valeur standard gearman
GearmanWorker bool echo string $workload	test la r&eacute;ponse d'un serveur de travaux
GearmanWorker string error	une erreur sous la forme dune chaîne de caractères
GearmanWorker string error	r&eacute;cup&egrave;re la derni&egrave;re erreur survenue
GearmanWorker int get Errno	une errno valide
GearmanWorker int get Errno	r&eacute;cup&egrave;re la errno
GearmanWorker int options	les options actuellement définies pour lagent
GearmanWorker int options	r&eacute;cup&egrave;re les options de l'agent
GearmanWorker register $function_name	le nom de la fonction à enregistrer avec le serveur de travaux
GearmanWorker register $timeout	un intervalle de temps en secondes
GearmanWorker bool register	une valeur de retour gearman standard
GearmanWorker bool register string $function_name int $timeout	enregistre une fonction sur un serveur de travaux
GearmanWorker remove Options $option	les options à supprimer
GearmanWorker bool remove Options	retourne toujours true
GearmanWorker bool remove Options int $option	supprime des options de l'agent
GearmanWorker set Id $id	un identifiant
GearmanWorker bool set Id	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanWorker bool set Id string $id	d&eacute;finit un identifiant au worker
GearmanWorker set Options $option	les options à définir
GearmanWorker bool set Options	retourne toujours true
GearmanWorker bool set Options int $option	d&eacute;finit les options de l'agent
GearmanWorker int timeout	une période de temps en millisecondes
GearmanWorker int timeout	r&eacute;cup&egrave;re le d&eacute;lai d'attente de l'activit&eacute; du socket i / o
GearmanWorker bool wait	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanWorker bool wait	attente une activit&eacute; d'un ou plusieurs serveurs de travaux
GearmanWorker bool work	cette fonction retourne true en cas de succès ou false si une erreur survient
GearmanWorker bool work	attend et ex&eacute;cute un travail
Gender\Gender is Nick $name1	nom à vérifier
Gender\Gender is Nick $name0	nom à vérifier
Gender\Gender is Nick $country	identifiant du pays identifié par la constante de la classe gender
Gender\Gender array is Nick	cette fonction retourne true en cas de succès ou false si une erreur survient
Gender\Gender array is Nick string $name0 string $name1 integer $country	v&eacute;rifie si name0 est un alias de name1
Generator void rewind	r&eacute;-initialise l'it&eacute;rateur
Generator send $value	valeur à envoyer au générateur
Generator mixed send	retourne la valeur cédée
Generator mixed send mixed $value	envoi une valeur au g&eacute;n&eacute;rateur
Generator throw $exception	exception à lancer dans le générateur
Generator mixed throw	retourne la valeur cédée
Generator mixed throw Exception $exception	lance une exception dans le g&eacute;n&eacute;rateur
Generator void wakeup	fonction de rappel de lin&eacute;arisation
GlobIterator construct $flags	les options qui peuvent être un champ de bits de constantes de classe filesystemiterator
GlobIterator construct $path	le chemin du dossier
GlobIterator string construct string $path int $flags	construit un it&eacute;rateur de type glob
Gmagick addimage $source	lobjet gmagick source
Gmagick Gmagick addimage	lobjet gmagick contenant la nouvelle image chargé
Gmagick Gmagick addimage Gmagick $Gmagick	ajoute une nouvelle image &agrave; la liste des images de l'objet gmagick
Gmagick addnoiseimage $noise_type	le type de bruit
Gmagick Gmagick addnoiseimage	lobjet gmagick dont le bruit a été ajouté
Gmagick Gmagick addnoiseimage int $NOISE	ajoute du bruit al&eacute;atoirement dans l'image
Gmagick blurimage $sigma	déviation standard
Gmagick blurimage $radius	rayon utilisé pour le flou
Gmagick Gmagick blurimage	lobjet gmagick flouté
Gmagick Gmagick blurimage float $radius float $sigma int $channel	ajoute un filtre flou &agrave; l'image
Gmagick borderimage $height	hauteur de la bordure
Gmagick borderimage $color	objet gmagickpixel ou une chaîne de caractères contenant la couleur de la bordure
Gmagick borderimage $width	épaisseur de la bordure
Gmagick Gmagick borderimage	lobjet gmagick dont la bordure a été ajoutée
Gmagick Gmagick borderimage GmagickPixel $color int $width int $height	ajoute une bordure &agrave; l'image
Gmagick chopimage $y	origine en y de la région à supprimer
Gmagick chopimage $width	longueur de la région à supprimer
Gmagick chopimage $x	origine en x de la région à supprimer
Gmagick chopimage $height	hauteur de la région à supprimer
Gmagick Gmagick chopimage	lobjet gmagick dont la région a été supprimée
Gmagick Gmagick chopimage int $width int $height int $x int $y	supprime une r&eacute;gion de l'image
Gmagick Gmagick clear	lobjet gmagick nettoyé
Gmagick Gmagick clear	efface toutes les ressources associ&eacute;es &agrave; l'objet gmagick
Gmagick compositeimage $y	la position de la ligne de limage assemblée
Gmagick compositeimage $source	lobjet gmagick qui contient limage à assembler
Gmagick compositeimage $compose	lopérateur dassemblage
Gmagick compositeimage $x	la position de la colonne de limage assemblée
Gmagick Gmagick compositeimage	lobjet gmagick contenant lassemblage
Gmagick Gmagick compositeimage Gmagick $source int $COMPOSE int $x int $y	assemble 2 images
Gmagick construct $filename	le chemin vers une image à charger ou un tableau de chemins
Gmagick string construct	retourne un nouvel objet gmagick en cas de succès
Gmagick string construct string $filename	le constructeur gmagick
Gmagick cropimage $y	la coordonnée en y de la portion à extraire en commençant par le coin en haut à gauche
Gmagick cropimage $x	la coordonnée en x de la portion à extraire en commençant par le coin en haut à gauche
Gmagick cropimage $height	la hauteur de la région
Gmagick cropimage $width	la longueur de la portion
Gmagick Gmagick cropimage	lobjet gmagick représentant la portion extraite
Gmagick Gmagick cropimage int $width int $height int $x int $y	extrait une portion d'une image
Gmagick cropthumbnailimage $width	la longueur de la miniature
Gmagick cropthumbnailimage $height	la hauteur de la miniature
Gmagick Gmagick cropthumbnailimage	lobjet gmagick recadré
Gmagick Gmagick cropthumbnailimage int $width int $height	cr&eacute;e une miniature recadr&eacute;e
Gmagick void deconstructimages	retourne les pixels diff&eacute;rents entre des images
Gmagick Gmagick despeckleimage	lobjet gmagick sans bruit en cas de succès
Gmagick Gmagick despeckleimage	le but de despeckleimage
Gmagick embossimage $sigma	le sigma de leffet
Gmagick embossimage $radius	le rayon de leffect
Gmagick Gmagick embossimage	lobjet gmagick en relief
Gmagick Gmagick embossimage float $radius float $sigma	retourne une image en niveau de gris avec un effet &agrave; 3 dimensions
Gmagick Gmagick enhanceimage	lobjet gmagick amélioré
Gmagick Gmagick enhanceimage	am&eacute;liore la qualit&eacute; d'une image contenant du bruit
Gmagick Gmagick flipimage	lobjet gmagick reflété
Gmagick Gmagick flipimage	cr&eacute;e une image miroir verticale
Gmagick Gmagick flopimage	lobjet gmagick reflété
Gmagick Gmagick flopimage	le but de la m&eacute;thode flopimage
Gmagick frameimage $inner_bevel	la largeur du bevel interne
Gmagick frameimage $width	la largeur de la bordure
Gmagick frameimage $color	un objet gmagickpixel ou un nombre à virgule flottante représentant la couleur mate
Gmagick frameimage $outer_bevel	la largeur du bevel externe
Gmagick frameimage $height	la hauteur de la bordure
Gmagick Gmagick frameimage	lobjet gmagick dont la bordure 3d a été ajoutée
Gmagick Gmagick frameimage GmagickPixel $color int $width int $height int $inner_bevel int $outer_bevel	ajoute une bordure afin de simuler un effet 3d
Gmagick string getfilename	retourne une chaîne de caractères en cas de succès
Gmagick string getfilename	retourne le nom du fichier associ&eacute; avec une s&eacute;quence d'image
Gmagick array getimageblueprimary	un tableau contenant les coordonnées en x et en y du point
Gmagick array getimageblueprimary	retourne le point bleu primaire chromatique
Gmagick void getimagebordercolor	retourne la couleur du bord de l'image
Gmagick int getimagechanneldepth	la profondeur du canal de limage
Gmagick int getimagechanneldepth int $channel_type	r&eacute;cup&egrave;re la profondeur d'un canal particulier de l'image
Gmagick int getimagecolorspace	lespace colorimétrique
Gmagick int getimagecolorspace	r&eacute;cup&egrave;re l'espace colorim&eacute;trique de l'image
Gmagick int getimagecompose	retourne lopérateur de composition associé avec limage
Gmagick int getimagecompose	retourne l'op&eacute;rateur de composition associ&eacute; avec l'image
Gmagick int getimagedepth	la profondeur de limage
Gmagick int getimagedepth	r&eacute;cup&egrave;re la profondeur de l'image
Gmagick array getimageextrema	retourne un tableau associatif contenant les clés min et max
Gmagick array getimageextrema	r&eacute;cup&egrave;re les extr&eacute;mit&eacute;s de l'image
Gmagick string getimageformat	retourne une chaîne de caractères contenant le format de limage en cas de succès
Gmagick string getimageformat	r&eacute;cup&egrave;re le format d'une image particuli&egrave;re dans une s&eacute;quence
Gmagick float getimagegamma	retourne le gamma de limage en cas de succès
Gmagick float getimagegamma	r&eacute;cup&egrave;re le gamma de l'image
Gmagick array getimagegreenprimary	retourne un tableau contenant les clés x and y en cas de succès
Gmagick array getimagegreenprimary	r&eacute;cup&egrave;re le point chromatique primaire vert
Gmagick int getimageheight	retourne la hauteur de limage en pixels
Gmagick int getimageheight	r&eacute;cup&egrave;re la hauteur de l'image
Gmagick array getimagehistogram	retourne lhistogramme de limage sous la forme dun tableau dobjets gmagickpixel
Gmagick array getimagehistogram	r&eacute;cup&egrave;re l'histogramme de l'image
Gmagick int getimageinterlacescheme	retourne le schéma dentrelacement de limage sous la forme dun entier en cas de succès
Gmagick int getimageinterlacescheme	r&eacute;cup&egrave;re le sch&eacute;ma d'entrelacement de l'image
Gmagick string getimageprofile	retourne une chaîne de caractères représentant le profile de limage
Gmagick string getimageprofile string $name	r&eacute;cup&egrave;re le nom du profile de l'image
Gmagick array getimageredprimary	retourne le point chromatique primaire rouge sous la forme dun tableau contenant les clés x et y
Gmagick array getimageredprimary	r&eacute;cup&egrave;re le point chromatique primaire rouge
Gmagick array getimageresolution	retourne la résolution sous la forme dun tableau
Gmagick array getimageresolution	r&eacute;cup&egrave;re la r&eacute;solution de l'image
Gmagick string getimagesignature	retourne une chaîne de caractères contenant la signature sha-256 hash
Gmagick string getimagesignature	g&eacute;n&egrave;re la signature sha-256 de l'image
Gmagick int getimagetype	retourne le type potentiel dune image
Gmagick int getimagetype	r&eacute;cup&egrave;re le type potentiel d'une image
Gmagick int getimageunits	retourne les unités utilisées pour la résolution de limage
Gmagick int getimageunits	r&eacute;cup&egrave;re les unit&eacute;s utilis&eacute;es pour la r&eacute;solution de l'image
Gmagick int getimagewidth	retourne la largeur de limage
Gmagick int getimagewidth	r&eacute;cup&egrave;re la largeur de l'image
Gmagick string getpackagename	retourne le nom du paquet graphicsmagick sous la forme dune chaîne de caractères
Gmagick string getpackagename	r&eacute;cup&egrave;re le nom du paquet graphicsmagick
Gmagick array getquantumdepth	retourne la profondeur du quantum gmagick sous la forme dun chaîne de caractères
Gmagick array getquantumdepth	r&eacute;cup&egrave;re la profondeur du quantum gmagick
Gmagick string getreleasedate	retourne la date de sortie de la version courante de graphicsmagick sous la forme dune chaîne de caractères
Gmagick string getreleasedate	r&eacute;cup&egrave;re la date de sortie de la version courante de graphicsmagick
Gmagick array getsamplingfactors	retourne un tableau associatif contenant le facteur déchantillonnage vertical et horizontal
Gmagick array getsamplingfactors	r&eacute;cup&egrave;re le facteur d'&eacute;chantillonnage horizontal et vertical
Gmagick mixed hasnextimage	retourne true si lobjet a au moins une image suivante false sinon
Gmagick mixed hasnextimage	v&eacute;rifie si l'objet contient au moins une autre image
Gmagick mixed haspreviousimage	retourne true si lobjet a au moins une image précédente false sinon
Gmagick mixed haspreviousimage	v&eacute;rifie si l'objet contient une image pr&eacute;c&eacute;dente
Gmagick implodeimage $radius	la rayon dimplosion des pixels
Gmagick mixed implodeimage	retourne un objet gmagick dont les pixels ont été modifiés
Gmagick mixed implodeimage float $radius	cr&eacute;e une image &agrave; partir d'une copie
Gmagick levelimage $gamma	la valeur gamma
Gmagick levelimage $blackPoint	le point noir de limage
Gmagick levelimage $channel	une constante de canaux valide pour le mode de canal utilisé
Gmagick levelimage $whitePoint	le point blanc de limage
Gmagick mixed levelimage	lobjet gmagick dont les niveaux ont été modifiés
Gmagick mixed levelimage float $blackPoint float $gamma float $whitePoint int $channel	ajuste les niveaux d'une image
Gmagick mixed magnifyimage	lobjet gmagick modifié
Gmagick mixed magnifyimage	retaille par 2 une image en conservant les proportions
Gmagick mapimage $dither	entier plus grand que 0 pour faire tergiverser limage mappée
Gmagick mapimage $gmagick	limage de référence
Gmagick Gmagick mapimage	lobjet gmagick
Gmagick Gmagick mapimage gmagick $gmagick bool $dither	remplace les couleurs d'une image avec les couleurs les plus proches d'une image de r&eacute;f&eacute;rence
Gmagick medianfilterimage $radius	le rayon des pixels voisins
Gmagick void medianfilterimage float $radius	applique un filtre digital
Gmagick motionblurimage $angle	applique leffet tout le long de langle
Gmagick motionblurimage $radius	le rayon du gaussien en pixels sans compter le pixel central
Gmagick motionblurimage $sigma	la déviation standard du gaussien en pixels
Gmagick void motionblurimage float $radius float $sigma float $angle	simule un flou cin&eacute;tique
Gmagick bool nextimage	lobjet gmagick en cas de succès
Gmagick bool nextimage	se d&eacute;place sur l'image suivante
Gmagick bool previousimage	lobjet gmagick en cas de succès
Gmagick bool previousimage	se d&eacute;place vers l'image pr&eacute;c&eacute;dente de l'objet
Gmagick profileimage $name	nom du profile à ajouter ou à supprimer : profile icc iptc ou générique
Gmagick profileimage $profile	le profile
Gmagick void profileimage string $name string $profile	ajoute ou supprime un profile d'une image
Gmagick quantizeimage $colorspace	effectue la réduction de couleurs dans cette espace de couleurs typiquement rgbcolorspace
Gmagick quantizeimage $dither	une valeur autre que zéro distribue la différence entre limage originale et la couleur correspondante réduite par lalgorithme vers les pixels voisins le long de la courbe hilbert
Gmagick quantizeimage $numColors	le nombre de couleurs
Gmagick quantizeimage $treeDepth	normalement la valeur de cet entier est zéro ou un
Gmagick quantizeimage $measureError	une valeur autre que zéro mesure la différence entre limage originale et limage optimisée
Gmagick void quantizeimage int $numColors int $colorspace int $treeDepth bool $dither bool $measureError	analyse les couleurs d'une image de r&eacute;f&eacute;rence
Gmagick array queryfontmetrics	lobjet gmagick en cas de succès
Gmagick array queryfontmetrics GmagickDraw $draw string $text	retourne un tableau repr&eacute;sentant la m&eacute;trique pour la police de caract&egrave;res
Gmagick array queryfonts	lobjet gmagick en cas de succès
Gmagick array queryfonts string $pattern	retourne les polices de caract&egrave;res configur&eacute;es
Gmagick radialblurimage $channel	canal concerné
Gmagick radialblurimage $angle	langle de brouillage en degrés
Gmagick void radialblurimage float $angle int $channel	brouille une image suivant un rayon
Gmagick raiseimage $y	coordonnée en y
Gmagick raiseimage $width	largeur de la zone à traiter
Gmagick raiseimage $x	coordonnée en x
Gmagick raiseimage $raise	une valeur autre que 0 pour créer leffet 3d sinon leffet sera amoindri
Gmagick raiseimage $height	hauteur de la zone à traiter
Gmagick void raiseimage int $width int $height int $x int $y bool $raise	cr&eacute;e un un bouton avec un effet 3d
Gmagick read $filename	le nom du fichier image
Gmagick void read string $filename	lit une image depuis un fichier
Gmagick readimage $filename	le nom du fichier image
Gmagick void readimage string $filename	lit une image depuis un fichier
Gmagick readimageblob $filename	le nom du fichier image
Gmagick readimageblob $imageContents	contenu de limage
Gmagick void readimageblob string $imageContents string $filename	lit une image depuis une cha&icirc;ne binaire
Gmagick reducenoiseimage $radius	le rayon du pixel voisin
Gmagick void reducenoiseimage float $radius	lisse les contours de l'image
Gmagick void removeimage	supprime une image depuis la liste des images
Gmagick removeimageprofile $name	nom du profil à retourner : icc iptc ou un profil générique
Gmagick string removeimageprofile	lobjet gmagick en cas de succès
Gmagick string removeimageprofile string $name	supprime un profil nomm&eacute; de l'image
Gmagick resampleimage $filter	filtre de limage à utiliser
Gmagick resampleimage $blur	la facteur de flou où la valeur supérieure à 1 correspond a entièrement flou et la valeur inférieure à 1 linverse
Gmagick resampleimage $xResolution	la nouvelle résolution en x de limage
Gmagick resampleimage $yResolution	la nouvelle résolution en y de limage
Gmagick void resampleimage float $xResolution float $yResolution int $filter float $blur	&eacute;chantillonne l'image &agrave; la r&eacute;solution d&eacute;sir&eacute;e
Gmagick rollimage $y	la position en y
Gmagick rollimage $x	la position en x
Gmagick void rollimage int $x int $y	repositionne une image
Gmagick separateimagechannel $channel	canal à extraire : redchannel greenchannel bluechannel opacitychannel cyanchannel magentachannel yellowchannel blackchannel
Gmagick Gmagick separateimagechannel	lobjet gmagick en cas de succès
Gmagick Gmagick separateimagechannel int $channel	s&eacute;pare un canal depuis une image
Gmagick setimagebackgroundcolor $color	la couleur darrière-plan
Gmagick Gmagick setimagebackgroundcolor	lobjet gmagick en cas de succès
Gmagick Gmagick setimagebackgroundcolor GmagickPixel $color	d&eacute;finit la couleur d'arri&egrave;re-plan de l'image
Gmagick setimageblueprimary $x	coordonnée en x du point du bleu primaire
Gmagick setimageblueprimary $y	coordonnée en y du point du bleu primaire
Gmagick Gmagick setimageblueprimary	lobjet gmagick en cas de succès
Gmagick Gmagick setimageblueprimary float $x float $y	d&eacute;finit le point bleu primaire de l'image chromatique
Gmagick setimagedispose $disposeType	le type de disposition de limage
Gmagick Gmagick setimagedispose	lobjet gmagick en cas de succès
Gmagick Gmagick setimagedispose int $disposeType	d&eacute;finit la m&eacute;thode de disposition de l'image
Gmagick setimagefilename $filename	le nom du fichier de limage
Gmagick Gmagick setimagefilename	lobjet gmagick object en cas de succès
Gmagick Gmagick setimagefilename string $filename	d&eacute;finit le nom du fichier pour une image particuli&egrave;re d'une s&eacute;quence
Gmagick setimagegreenprimary $x	coordonnée en x du point vert de limage chromatique
Gmagick setimagegreenprimary $y	coordonnée en y du point vert de limage chromatique
Gmagick Gmagick setimagegreenprimary	lobjet gmagick en cas de succès
Gmagick Gmagick setimagegreenprimary float $x float $y	d&eacute;finit le point vert sur l'image chromatique primaire
Gmagick setimageindex $index	le numéro de la scène
Gmagick Gmagick setimageindex	lobjet gmagick en cas de succès
Gmagick Gmagick setimageindex int $index	d&eacute;finit l'it&eacute;rateur &agrave; la position sp&eacute;cifi&eacute;e dans l'image de la liste point&eacute;e par son index
Gmagick setimageinterlacescheme $interlace	le schéma dentrelacement de limage : nointerlace lineinterlace planeinterlace partitioninterlace
Gmagick Gmagick setimageinterlacescheme	lobjet gmagick en cas de succès
Gmagick Gmagick setimageinterlacescheme int $interlace	d&eacute;finit le sch&eacute;ma d'entrelacement de l'image
Gmagick setimageiterations $iterations	le délai de limage au 1 / 100ème de seconde
Gmagick Gmagick setimageiterations	lobjet gmagick en cas de succès
Gmagick Gmagick setimageiterations int $iterations	d&eacute;finit les it&eacute;rations de l'image
Gmagick setimageprofile $name	nom du profile à ajouter ou à effacer : icc iptc ou un profile générique
Gmagick setimageprofile $profile	le profile
Gmagick Gmagick setimageprofile	lobjet gmagick en cas de succès
Gmagick Gmagick setimageprofile string $name string $profile	ajoute un profile nomm&eacute; &agrave; l'objet gmagick
Gmagick setimageredprimary $y	coordonnée en y du point rouge de limage chromatique
Gmagick setimageredprimary $x	coordonnée en x du point rouge de limage chromatique
Gmagick Gmagick setimageredprimary	lobjet gmagick en cas de succès
Gmagick Gmagick setimageredprimary float $x float $y	d&eacute;finit le point rouge sur l'image chromatique primaire
Gmagick setimageresolution $xResolution	la résolution en x de limage
Gmagick setimageresolution $yResolution	la résolution en y de limage
Gmagick Gmagick setimageresolution	lobjet gmagick en cas de succès
Gmagick Gmagick setimageresolution float $xResolution float $yResolution	d&eacute;finit la r&eacute;solution de l'image
Gmagick setimagescene $scene	le numéro de la scène dans limage
Gmagick Gmagick setimagescene	lobjet gmagick en cas de succès
Gmagick Gmagick setimagescene int $scene	d&eacute;finit l'image de sc&egrave;ne
Gmagick setimageunits $resolution	les unités à utiliser pour la résolution de limage : undefinedresolution pixelsperinchresolution ou pixelspercentimeterresolution
Gmagick Gmagick setimageunits	lobjet gmagick en cas de succès
Gmagick Gmagick setimageunits int $resolution	d&eacute;finit les unit&eacute;s &agrave; utiliser pour la r&eacute;solution de l'image
Gmagick setimagewhitepoint $x	coordonnée en x du point blanc de limage chromatique
Gmagick setimagewhitepoint $y	coordonnée en y du point blanc de limage chromatique
Gmagick Gmagick setimagewhitepoint	lobjet gmagick en cas de succès
Gmagick Gmagick setimagewhitepoint float $x float $y	d&eacute;finit le point blanc sur l'image chromatique primaire
Gmagick shearimage $yShear	le degré de cisaillement de limage
Gmagick shearimage $xShear	le degré de cisaillement de limage
Gmagick shearimage $color	le pixel darrière-plan
Gmagick Gmagick shearimage	lobjet gmagick en cas de succès
Gmagick Gmagick shearimage mixed $color float $xShear float $yShear	cr&eacute;e un parall&eacute;logramme
Gmagick solarizeimage $threshold	définit létendu de la solarisation
Gmagick Gmagick solarizeimage	lobjet gmagick en cas de succès
Gmagick Gmagick solarizeimage int $threshold	applique un effet de solarisation &agrave; l'image
Gmagick spreadimage $radius	choisit des pixels aléatoirement dans le voisinage de cette étendue
Gmagick Gmagick spreadimage	lobjet gmagick en cas de succès
Gmagick Gmagick spreadimage float $radius	d&eacute;place al&eacute;atoirement chaque pixel d'un bloc
Gmagick Gmagick stripimage	lobjet gmagick en cas de succès
Gmagick Gmagick stripimage	supprime d'une image tous les profiles et tous les commentaires
Gmagick swirlimage $degrees	définit la finesse de leffet de remous
Gmagick Gmagick swirlimage	lobjet gmagick en cas de succès
Gmagick Gmagick swirlimage float $degrees	remous les pixels du centre de l'image
Gmagick trimimage $fuzz	par défaut la cible doit correspondre exactement à la couleur du pixel précis
Gmagick Gmagick trimimage	lobjet gmagick en cas de succès
Gmagick Gmagick trimimage float $fuzz	supprime les coins de l'image
Gmagick write $filename	le nom du fichier
Gmagick void write string $filename	&eacute;crit une image dans un fichier
Gmagick writeimage $filename	le nom du fichier
Gmagick Gmagick writeimage	lobjet gmagick en cas de succès
Gmagick Gmagick writeimage string $filename bool $all_frames	&eacute;crit une image dans un fichier
GmagickDraw annotate $y	coordonnée en y de la base du texte
GmagickDraw annotate $x	coordonnée en x de la gauche du texte
GmagickDraw annotate $text	le texte à dessiner
GmagickDraw GmagickDraw annotate	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw annotate float $x float $y string $text	dessine un texte sur l'image
GmagickDraw arc $ex	coordonnée en x de la fin du rectangle conteneur
GmagickDraw arc $sy	coordonnée en y du début du rectangle conteneur
GmagickDraw arc $sx	coordonnée en x du début du rectangle conteneur
GmagickDraw arc $sd	degré de départ de la rotation
GmagickDraw arc $ed	degré de fin de la rotation
GmagickDraw arc $ey	coordonnée en y de la fin du rectangle conteneur
GmagickDraw GmagickDraw arc	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw arc float $sx float $sy float $ex float $ey float $sd float $ed	dessine un arc
GmagickDraw bezier $coordinate_array	tableau de coordonnées
GmagickDraw GmagickDraw bezier	lobjet gmagickdraw object en cas de succès
GmagickDraw GmagickDraw bezier array $coordinate_array	dessine une courbe de b&eacute;zier
GmagickDraw void getfillcolor	retourne la couleur de remplissage
GmagickDraw float getfillopacity	retourne lopacité utilisée lors dun dessin utilisant une couleur de remplissage ou une texture de remplissage
GmagickDraw float getfillopacity	retourne l'opacit&eacute; utilis&eacute;e lors d'un dessin
GmagickDraw string getfont	retourne une chaîne de caractères en cas de succès et false si la police de caractères nest pas définie
GmagickDraw string getfont	retourne la police de caract&egrave;res
GmagickDraw int getfontweight	retourne un entier en cas de succès et 0 si le poids nest pas défini
GmagickDraw int getfontweight	retourne le poids de la police de caract&egrave;res
GmagickDraw void getstrokecolor	retourne la couleur utilis&eacute;e pour tracer les contours de l'objet
GmagickDraw float getstrokeopacity	retourne un double décrivant lopacité
GmagickDraw float getstrokeopacity	retourne l'opacit&eacute; du trac&eacute; des contours de l'objet
GmagickDraw float getstrokewidth	retourne un double décrivant la largeur des contours
GmagickDraw float getstrokewidth	retourne la largeur utilis&eacute;e pour les contours de l'objet
GmagickDraw int gettextdecoration	retourne une constante parmi les constantes decoration_ et 0 si aucune décoration nest définie
GmagickDraw int gettextdecoration	retourne la d&eacute;coration du texte
GmagickDraw string gettextencoding	retourne une chaîne de caractères spécifiant le code du jeu de caractères ou false si lencodage nest pas défini
GmagickDraw string gettextencoding	retourne le code du jeu de caract&egrave;res &agrave; utiliser pour les annotations
GmagickDraw line $ey	coordonnée de fin en y
GmagickDraw line $ex	coordonnée de fin en x
GmagickDraw line $sx	coordonnée de départ en x
GmagickDraw line $sy	coordonnée de départ en y
GmagickDraw GmagickDraw line	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw line float $sx float $sy float $ex float $ey	le but de la m&eacute;thode line
GmagickDraw point $x	coordonnée cible en x
GmagickDraw point $y	coordonnée cible en y
GmagickDraw GmagickDraw point	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw point float $x float $y	dessine un point
GmagickDraw rectangle $y1	coordonnée en y du premier point
GmagickDraw rectangle $x2	coordonnée en x du second point
GmagickDraw rectangle $y2	coordonnée en y du second point
GmagickDraw rectangle $x1	coordonnée en x du premier point
GmagickDraw GmagickDraw rectangle	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw rectangle float $x1 float $y1 float $x2 float $y2	dessine un rectangle
GmagickDraw rotate $degrees	degrés pour la rotation
GmagickDraw GmagickDraw rotate	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw rotate float $degrees	applique une rotation
GmagickDraw roundrectangle $x2	coordonnée en x du second point
GmagickDraw roundrectangle $ry	le rayon du coin en direction verticale
GmagickDraw roundrectangle $y1	coordonnée en y du premier point
GmagickDraw roundrectangle $rx	le rayon du coin en direction horizontale
GmagickDraw roundrectangle $x1	coordonnée en x du premier point
GmagickDraw roundrectangle $y2	coordonnée en y du second point
GmagickDraw GmagickDraw roundrectangle	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw roundrectangle float $x1 float $y1 float $x2 float $y2 float $rx float $ry	dessine un rectangle arrondi
GmagickDraw scale $y	facteur déchelle vertical
GmagickDraw scale $x	facteur déchelle horizontal
GmagickDraw GmagickDraw scale	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw scale float $x float $y	ajuste le facteur d'&eacute;chelle
GmagickDraw setfillopacity $fill_opacity	opacité du remplissage
GmagickDraw GmagickDraw setfillopacity	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw setfillopacity float $fill_opacity	le but de la m&eacute;thode setfillopacity
GmagickDraw setfont $font	le nom de la police de caractère
GmagickDraw GmagickDraw setfont	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw setfont string $font	d&eacute;finit la police de caract&egrave;re &agrave; utiliser lors d'une annotation
GmagickDraw settextdecoration $int	la décoration du texte
GmagickDraw GmagickDraw settextdecoration	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw settextdecoration int $decoration	sp&eacute;cifie une d&eacute;coration
GmagickDraw settextencoding $encoding	chaîne spécifiant lencodage du texte
GmagickDraw GmagickDraw settextencoding	lobjet gmagickdraw en cas de succès
GmagickDraw GmagickDraw settextencoding string $encoding	sp&eacute;cifie le code du jeu de caract&egrave;res &agrave; utiliser
GmagickPixel getcolor $as_array	true pour indiquer que la valeur retournée doit être un tableau au lieu dune chaîne de caractères
GmagickPixel getcolor $normalize_array	normalise les valeurs de couleur
GmagickPixel mixed getcolor	un tableau de valeurs de canaux dont chacun est normalisé si true est fourni comme paramètre
GmagickPixel mixed getcolor bool $as_array bool $normalize_array	retourne la couleur
GmagickPixel int getcolorcount	retourne le nombre de couleurs sous la forme dun entier en cas de succès et émets une exception gmagickpixelexception si une erreur survient
GmagickPixel int getcolorcount	retourne le nombre de couleurs associ&eacute;es avec cette couleur
GmagickPixel getcolorvalue $color	le canal à vérifier spécifié sous la forme dune des constantes de canal gmagick
GmagickPixel float getcolorvalue	la valeur du canal sous la forme dun nombre à virgule flottante normalisé et émets une exception gmagickpixelexception si une erreur survient
GmagickPixel float getcolorvalue int $color	r&eacute;cup&egrave;re la valeur normalis&eacute;e du canal de la couleur fournie
GmagickPixel setcolor $color	la définition de la couleur à utiliser pour initialiser lobjet gmagickpixel
GmagickPixel GmagickPixel setcolor	lobjet gmagickpixel object en cas de succès
GmagickPixel GmagickPixel setcolor string $color	d&eacute;finit la couleur
GmagickPixel setcolorvalue $color	une des constantes de couleur de canal gmagick
GmagickPixel setcolorvalue $value	la valeur à utiliser pour définir ce canal comprise entre 0 et 1
GmagickPixel GmagickPixel setcolorvalue	lobjet gmagickpixel en cas de succès
GmagickPixel GmagickPixel setcolorvalue int $color float $value	d&eacute;finit la valeur normalis&eacute;e d'un des canaux
HaruAnnotation set Border Style $dash_off	le style de la ligne
HaruAnnotation set Border Style $dash_on	le style de la bordure
HaruAnnotation set Border Style $width	lépaisseur de la bordure
HaruAnnotation bool set Border Style	retourne true en cas de succès
HaruAnnotation bool set Border Style float $width int $dash_on int $dash_off	d&eacute;finit le style de bordure d'une annotation
HaruAnnotation set Highlight Mode $mode	le mode de mise en évidence de lannotation
HaruAnnotation bool set Highlight Mode	retourne true en cas de succès
HaruAnnotation bool set Highlight Mode int $mode	d&eacute;finit le mode de mise en &eacute;vidence de l'annotation
HaruAnnotation set Icon $icon	le style de licône
HaruAnnotation bool set Icon	retourne true en cas de succès
HaruAnnotation bool set Icon int $icon	d&eacute;finit le style de l'ic&ocirc;ne de l'annotation
HaruAnnotation set Opened $opened	true signifie que lannotation est initialement affichée ouverte false signifie close
HaruAnnotation bool set Opened	retourne true en cas de succès
HaruAnnotation bool set Opened bool $opened	d&eacute;finit le statut initial de l'annotation
HaruDestination bool set Fit	retourne true en cas de succès
HaruDestination bool set Fit	d&eacute;finit l'apparence de la page afin qu'elle tienne dans la fen&ecirc;tre
HaruDestination bool set Fit B	retourne true en cas de succès
HaruDestination bool set Fit B	d&eacute;finit l'apparence de la page afin qu'elle tienne dans une boite de la page dans la fen&ecirc;tre
HaruDestination set Fit BH $top	les coordonnées haute de la page
HaruDestination bool set Fit BH	retourne true en cas de succès
HaruDestination bool set Fit BH float $top	d&eacute;finit l'apparence de la page afin qu'elle tienne en largeur dans la boite
HaruDestination set Fit R $left	les coordonnées gauche de la page
HaruDestination set Fit R $bottom	les coordonnées du bas de la page
HaruDestination set Fit R $right	les coordonnées droite de la page
HaruDestination set Fit R $top	les coordonnées du haut de la page
HaruDestination bool set Fit R	retourne true en cas de succès
HaruDestination bool set Fit R float $left float $bottom float $right float $top	d&eacute;finit l'apparence de la page afin qu'elle tienne dans le rectangle sp&eacute;cifi&eacute;
HaruDestination set Fit V $left	la position gauche de la page
HaruDestination bool set Fit V	retourne true en cas de succès
HaruDestination bool set Fit V float $left	d&eacute;finit l'apparence de la page afin qu'elle tienne en hauteur dans la fen&ecirc;tre
HaruDestination set XYZ $left	la position gauche de la page
HaruDestination set XYZ $zoom	le facteur de zoom
HaruDestination set XYZ $top	la position haute de la page
HaruDestination bool set XYZ	retourne true en cas de succès
HaruDestination bool set XYZ float $left float $top float $zoom	d&eacute;finit l'apparence d'une page
HaruDoc object add Page	retourne une nouvelle instance de la classe harupage
HaruDoc object add Page	ajoute une nouvelle page au document
HaruDoc add Page Label $first_num	le numéro de la première page de lintervalle
HaruDoc add Page Label $prefix	le préfixe pour le libellé de la page
HaruDoc add Page Label $style	le style de numérotation
HaruDoc add Page Label $first_page	la première page de lintervalle
HaruDoc bool add Page Label	retourne true en cas de succès
HaruDoc bool add Page Label int $first_page int $style int $first_num string $prefix	d&eacute;finit le style de num&eacute;rotation d'une s&eacute;rie de pages
HaruDoc create Outline $title	le titre de lobjet du nouveau contour
HaruDoc create Outline $encoder	une instance valide haruencoder ou null
HaruDoc create Outline $parent_outline	une instance valide de haruoutline ou null
HaruDoc object create Outline	retourne une nouvelle instance haruoutline
HaruDoc object create Outline string $title object $parent_outline object $encoder	cr&eacute;e une instance haruoutline
HaruDoc object get Current Page	retourne linstance harupage en cas de succès ou false sil ny a actuellement pas de page courante
HaruDoc object get Current Page	retourne la page courante du document
HaruDoc get Encoder $encoding	le nom de lencodage
HaruDoc object get Encoder	retourne linstance haruencoder de lencodage spécifié
HaruDoc object get Encoder string $encoding	r&eacute;cup&egrave;re l'instance haruencoder de l'encodage sp&eacute;cifi&eacute;
HaruDoc get Font $encoding	lencodage à utiliser
HaruDoc get Font $fontname	le nom de la police
HaruDoc object get Font	retourne une instance harufont avec le nom de police fontname et lencodage encoding
HaruDoc object get Font string $fontname string $encoding	r&eacute;cup&egrave;re une instance harufont
HaruDoc int get Page Layout	retourne la disposition courante de la page définie dans le document ou false si la disposition de la page na pas été définie
HaruDoc int get Page Layout	r&eacute;cup&egrave;re la disposition courante de la page
HaruDoc int get Stream Size	retourne la taille des données dans le flux temporaire du document
HaruDoc int get Stream Size	r&eacute;cup&egrave;re la taille du flux temporaire
HaruDoc insert Page $page	une instance valide harupage
HaruDoc object insert Page	retourne une nouvelle instance de la classe harupage
HaruDoc object insert Page object $page	ins&egrave;re une nouvelle page juste avant la page sp&eacute;cifi&eacute;e
HaruDoc load PNG $filename	le nom du fichier image png
HaruDoc load PNG $deferred	ne pas charger les données immédiatement
HaruDoc object load PNG	retourne une instance de la classe haruimage
HaruDoc object load PNG string $filename bool $deferred	charge une image png
HaruDoc load Raw $filename	le nom du fichier image raw
HaruDoc load Raw $color_space	lespace de couleur de limage
HaruDoc load Raw $width	la largeur de limage
HaruDoc load Raw $height	la hauteur de limage
HaruDoc object load Raw	retourne une instance de la classe haruimage
HaruDoc object load Raw string $filename int $width int $height int $color_space	charge une image raw
HaruDoc load TTC $embed	lorsque défini à true les données glyphe seront intégrées dans le fichier pdf sinon uniquement la matrice des données sera incluse
HaruDoc load TTC $fontfile	le fichier de collection truetype
HaruDoc load TTC $index	lindex de la police dans le fichier de collection
HaruDoc string load TTC	retourne le nom de la police chargée en cas de succès
HaruDoc string load TTC string $fontfile int $index bool $embed	charge la police avec l'index sp&eacute;cifi&eacute; depuis le fichier ttc
HaruDoc load TTF $fontfile	le fichier ttf à charger
HaruDoc load TTF $embed	lorsque défini à true les données glyphe de la police seront intégrées dans le fichier pdf sinon uniquement la matrice des données sera incluse
HaruDoc string load TTF	retourne le nom de la police chargée en cas de succès
HaruDoc string load TTF string $fontfile bool $embed	charge un fichier de police ttf
HaruDoc load Type1 $afmfile	chemin vers un fichier afm
HaruDoc load Type1 $pfmfile	chemin vers un fichier pfa / pfb optionnel
HaruDoc string load Type1	retourne le nom de la police chargée en cas de succès
HaruDoc string load Type1 string $afmfile string $pfmfile	charge la police type1
HaruDoc bool output	retourne true en cas de succès
HaruDoc bool output	&eacute;crit les donn&eacute;es du document dans un buffer de sortie
HaruDoc bool save To Stream	retourne true en cas de succès
HaruDoc bool save To Stream	sauvegarde le document dans un flux temporaire
HaruDoc set Compression Mode $mode	le mode de compression à utiliser
HaruDoc bool set Compression Mode	retourne true en cas de succès
HaruDoc bool set Compression Mode int $mode	d&eacute;finit le mode de compression pour le document
HaruDoc set Encryption Mode $key_len	la longueur de la clé de chiffrement en octets
HaruDoc set Encryption Mode $mode	le mode de chiffrement à utiliser
HaruDoc bool set Encryption Mode	retourne true en cas de succès
HaruDoc bool set Encryption Mode int $mode int $key_len	d&eacute;finit le mode de chiffrement pour le document
HaruDoc set Page Mode $mode	les valeurs suivantes sont acceptées : harudoc::page_mode_use_none - affiche le document sans contour ni miniature
HaruDoc bool set Page Mode	retourne true en cas de succès
HaruDoc bool set Page Mode int $mode	d&eacute;finit la fa&ccedil;on dont le document doit &ecirc;tre affich&eacute;
HaruDoc set Pages Configuration $page_per_pages	le nombre de pages quun objet page peut contenir
HaruDoc bool set Pages Configuration	retourne true en cas de succès
HaruDoc bool set Pages Configuration int $page_per_pages	d&eacute;finit le nombre de pages par jeu de pages
HaruDoc set Password $user_password	le mot de passe de lutilisateur
HaruDoc set Password $owner_password	le mot de passe du propriétaire qui modifie les permissions du document
HaruDoc bool set Password	retourne true en cas de succès
HaruDoc bool set Password string $owner_password string $user_password	d&eacute;finit les mots de passe de l'utilisateur et du propri&eacute;taire pour le document
HaruDoc bool use CNSEncodings	retourne true en cas de succès
HaruDoc bool use CNSEncodings	active l'encodage chinois simplifi&eacute;
HaruDoc bool use CNSFonts	retourne true en cas de succès
HaruDoc bool use CNSFonts	active les polices chinoises simplifi&eacute;es internes
HaruDoc bool use CNTEncodings	retourne true en cas de succès
HaruDoc bool use CNTEncodings	active l'encodage chinois traditionnel
HaruDoc bool use CNTFonts	retourne true en cas de succès
HaruDoc bool use CNTFonts	active les polices chinoises traditionnelles internes
HaruDoc bool use JPEncodings	retourne true en cas de succès
HaruDoc bool use JPEncodings	active l'encodage japonais
HaruDoc bool use KREncodings	retourne true en cas de succès
HaruDoc bool use KREncodings	active l'encodage cor&eacute;en
HaruDoc bool use KRFonts	retourne true en cas de succès
HaruDoc bool use KRFonts	active les polices cor&eacute;ennes internes
HaruEncoder get Byte Type $index	la position dans le texte
HaruEncoder get Byte Type $text	le texte
HaruEncoder int get Byte Type	retourne le type doctets dans le texte à une position donnée
HaruEncoder int get Byte Type string $text int $index	r&eacute;cup&egrave;re le type d'octets dans le texte
HaruEncoder int get Type	retourne le type de lencodeur
HaruEncoder int get Type	r&eacute;cup&egrave;re le type de l'encodeur
HaruEncoder get Unicode $character	le code du caractère à convertir
HaruEncoder int get Unicode int $character	convertit un caract&egrave;re en unicode
HaruEncoder int get Writing Mode	retourne le mode décriture de lencodeur
HaruEncoder int get Writing Mode	r&eacute;cup&egrave;re le mode d'&eacute;criture de l'encodeur
HaruFont string get Encoding Name	retourne le nom de lencodage de la police
HaruFont string get Encoding Name	r&eacute;cup&egrave;re le nom de l'encodage
HaruFont string get Font Name	retourne le nom de la police
HaruFont string get Font Name	r&eacute;cup&egrave;re le nom de la police
HaruFont get Unicode Width $character	le code du caractère
HaruFont int get Unicode Width	retourne la largeur dun caractère dans la police
HaruFont int get Unicode Width int $character	r&eacute;cup&egrave;re la largeur d'un caract&egrave;re dans une police
HaruFont int get XHeight	retourne la distance depuis la ligne de base des lettres en minuscule
HaruFont int get XHeight	r&eacute;cup&egrave;re la distance depuis la ligne de base des lettres minuscule
HaruFont measure Text $width	la largeur de lendroit dans lequel le texte doit tenir
HaruFont measure Text $char_space	lespacement des caractères
HaruFont measure Text $word_wrap	lorsque ce paramètre vaut true la fonction émule la troncation des mots et ninclut pas la partie courante du mot si lon a atteint la fin de lespace
HaruFont measure Text $word_space	lespacement des mots
HaruFont measure Text $font_size	la taille de la police
HaruFont measure Text $text	le texte qui doit tenir dans la largeur
HaruFont int measure Text	retourne le nombre de caractères qui peuvent être inclus dans la largeur spécifiée
HaruFont int measure Text string $text float $width float $font_size float $char_space float $word_space bool $word_wrap	calcule le nombre de caract&egrave;res qui peuvent &ecirc;tre inclus dans la largeur sp&eacute;cifi&eacute;e
HaruImage int get Bits Per Component	retourne le nombre doctets utilisés pour décrire chaque composant de la couleur de limage
HaruImage int get Bits Per Component	r&eacute;cup&egrave;re le nombre d'octets utilis&eacute;s pour d&eacute;crire chaque composant de la couleur de l'image
HaruImage string get Color Space	retourne le nom de lespace de couleur de limage
HaruImage string get Color Space	r&eacute;cup&egrave;re le nom de l'espace de couleur de l'image
HaruImage array get Size	retourne un tableau contenant deux éléments : la hauteur et la largeur qui contiennent les dimensions de limage
HaruImage array get Size	r&eacute;cup&egrave;re la taille de l'image
HaruImage int get Width	retourne la largeur de limage
HaruImage int get Width	r&eacute;cup&egrave;re la largeur de l'image
HaruImage set Color Mask $bmin	le limite basse de bleu
HaruImage set Color Mask $rmin	le limite basse de rouge
HaruImage set Color Mask $gmax	le limite haute de vert
HaruImage set Color Mask $rmax	le limite haute de rouge
HaruImage set Color Mask $gmin	le limite basse de vert
HaruImage set Color Mask $bmax	le limite haute de bleu
HaruImage bool set Color Mask	retourne true en cas de succès
HaruImage bool set Color Mask int $rmin int $rmax int $gmin int $gmax int $bmin int $bmax	d&eacute;finit le masque de couleur de l'image
HaruImage set Mask Image $mask_image	une instance valide haruimage
HaruImage bool set Mask Image	retourne true en cas de succès
HaruImage bool set Mask Image object $mask_image	d&eacute;finit le masque de l'image
HaruPage arc $x	coordonnée horizontale du centre
HaruPage arc $ang1	langle de début
HaruPage arc $y	coordonnée verticale du centre
HaruPage arc $ang2	langle de fin
HaruPage arc $ray	le rayon de larc
HaruPage bool arc	retourne true en cas de succès
HaruPage bool arc float $x float $y float $ray float $ang1 float $ang2	ajoute un arc au chemin courant
HaruPage bool begin Text	retourne true en cas de succès
HaruPage bool begin Text	commence un objet texte et d&eacute;finit la position courante du texte &agrave; 0 0
HaruPage circle $x	coordonnée horizontale du centre
HaruPage circle $y	coordonnée verticale du centre
HaruPage circle $ray	le rayon du cercle
HaruPage bool circle	retourne true en cas de succès
HaruPage bool circle float $x float $y float $ray	ajoute un cercle au chemin courant
HaruPage bool close Path	retourne true en cas de succès
HaruPage bool close Path	ajoute une ligne droite depuis le point courant jusqu'au point de d&eacute;part du chemin
HaruPage bool concat	retourne true en cas de succès
HaruPage bool concat float $a float $b float $c float $d float $x float $y	concat&egrave;ne la matrice de transformation courante et la matrice sp&eacute;cifi&eacute;e
HaruPage object create Destination	retourne une nouvelle instance de la classe harudestination
HaruPage object create Destination	cr&eacute;e une nouvelle instance harudestination
HaruPage create URLAnnotation $rectangle	un tableau contenant 4 coordonnées de zone cliquable
HaruPage create URLAnnotation $url	lurl à ouvrir
HaruPage object create URLAnnotation	retourne une nouvelle instance de la classe haruannotation
HaruPage object create URLAnnotation array $rectangle string $url	cr&eacute;e une nouvelle instance haruannotation instance
HaruPage curve To2 $y2	un point de contrôle de la courbe de bézier
HaruPage curve To2 $x3	la position à laquelle le point courant est déplacé
HaruPage curve To2 $x2	un point de contrôle de la courbe de bézier
HaruPage bool curve To2	retourne true en cas de succès
HaruPage bool curve To2 float $x2 float $y2 float $x3 float $y3	ajoute une courbe de b&eacute;zier au chemin courant
HaruPage curve To3 $x1	un point de contrôle de la courbe de bézier
HaruPage curve To3 $x3	la position à laquelle le point courant est déplacé
HaruPage curve To3 $y1	un point de contrôle de la courbe de bézier
HaruPage bool curve To3	retourne true en cas de succès
HaruPage bool curve To3 float $x1 float $y1 float $x3 float $y3	ajoute une courbe de b&eacute;zier au chemin courant
HaruPage bool end Text	retourne true en cas de succès
HaruPage bool end Text	termine l'objet texte courant
HaruPage bool eofill	retourne true en cas de succès
HaruPage bool eofill	remplit le chemin courant en utilisant la r&egrave;gle even-odd
HaruPage fill Stroke $close_path	paramètre optionnel
HaruPage bool fill Stroke	retourne true en cas de succès
HaruPage bool fill Stroke bool $close_path	remplit le chemin en utilisant des nombres diff&eacute;rents de z&eacute;ro puis peint le chemin
HaruPage array get CMYKStroke	retourne la couleur de remplissage courante sous la forme dun tableau de quatre éléments c m y et k
HaruPage array get CMYKStroke	r&eacute;cup&egrave;re la couleur de remplissage courante
HaruPage object get Current Font	retourne la police actuellement utilisée sous la forme dune instance harufont
HaruPage object get Current Font	r&eacute;cup&egrave;re la police actuellement utilis&eacute;e
HaruPage float get Current Font Size	retourne la taille de la police courante
HaruPage float get Current Font Size	r&eacute;cup&egrave;re la taille de la police courante
HaruPage array get Current Text Pos	retourne la position courante pour laffichage du texte sous la forme dun tableau de deux éléments - x et y
HaruPage array get Current Text Pos	r&eacute;cup&egrave;re la position courante pour l'affichage du texte
HaruPage array get Dash	retourne le style de tiret courant sous la forme dun tableau de deux éléments - pattern et phase ou false si le style de tiret na pas été défini
HaruPage array get Dash	r&eacute;cup&egrave;re le style de tiret courant
HaruPage int get Filling Color Space	retourne la couleur de remplissage
HaruPage int get Filling Color Space	r&eacute;cup&egrave;re la couleur de remplissage
HaruPage float get Gray Fill	retourne la couleur courante de remplissage
HaruPage float get Gray Fill	r&eacute;cup&egrave;re la couleur courante de remplissage
HaruPage float get Gray Stroke	retourne la couleur courante
HaruPage float get Gray Stroke	r&eacute;cup&egrave;re la couleur courante
HaruPage float get Horizontal Scaling	retourne la valeur courante de léchelle horizontale
HaruPage float get Horizontal Scaling	r&eacute;cup&egrave;re la valeur courante de l'&eacute;chelle horizontale
HaruPage int get Line Cap	retourne le style courant de fin de lignes
HaruPage int get Line Cap	r&eacute;cup&egrave;re le style courant de fin de lignes
HaruPage int get Line Join	retourne le style de jointure de lignes
HaruPage int get Line Join	r&eacute;cup&egrave;re le style de jointure de lignes
HaruPage float get Miter Limit	retourne la valeur de la limite de langlet
HaruPage float get Miter Limit	r&eacute;cup&egrave;re la valeur de la limite de l'anglet
HaruPage array get RGBFill	retourne la couleur courante de remplissage sous la forme dun tableau de 3 éléments : r g et b
HaruPage array get RGBFill	r&eacute;cup&egrave;re la couleur courante de remplissage
HaruPage array get RGBStroke	retourne la couleur de peinture courante
HaruPage array get RGBStroke	r&eacute;cup&egrave;re la couleur de peinture courante
HaruPage int get Stroking Color Space	retourne la couleur de peinture de lespace courant
HaruPage int get Stroking Color Space	r&eacute;cup&egrave;re la couleur de peinture de l'espace courant
HaruPage float get Text Leading	retourne la valeur courante de lespacement des lignes
HaruPage float get Text Leading	r&eacute;cup&egrave;re la valeur courante de l'espacement des lignes
HaruPage array get Text Matrix	retourne la matrice de transformation courante du texte de la page sous la forme dun tableau de 6 éléments : a b c d x et y
HaruPage array get Text Matrix	r&eacute;cup&egrave;re la matrice de transformation courante du texte de la page
HaruPage int get Text Rendering Mode	retourne le mode de rendu courant du texte
HaruPage int get Text Rendering Mode	r&eacute;cup&egrave;re le mode de rendu courant du texte
HaruPage get Text Width $text	le texte à mesurer
HaruPage float get Text Width	retourne la largeur du texte en utilisant la taille de la police courante lespacement des caractères et lespacement des mots
HaruPage float get Text Width string $text	r&eacute;cup&egrave;re la largeur du texte en utilisant la taille de la police courante l'espacement des caract&egrave;res et l'espacement des mots
HaruPage array get Trans Matrix	retourne la matrice de transformation courante de la page sous la forme dun tableau de 6 éléments : a b c d x and y
HaruPage array get Trans Matrix	r&eacute;cup&egrave;re la matrice de transformation courante de la page
HaruPage float get Width	retourne la largeur de la page
HaruPage float get Width	r&eacute;cup&egrave;re la largeur de la page
HaruPage float get Word Space	retourne la valeur courante de lespacement entre les mots
HaruPage float get Word Space	r&eacute;cup&egrave;re la valeur courante de l'espacement entre les mots
HaruPage bool line To	retourne true en cas de succès
HaruPage bool line To float $x float $y	trace une ligne depuis le point courant vers le point sp&eacute;cifi&eacute;
HaruPage measure Text $width	la largeur de la ligne
HaruPage measure Text $text	le texte à mesurer
HaruPage measure Text $wordwrap	lorsque ce paramètre est défini à true la fonction émule la troncation des mots en stoppant après le dernier mot entier délimité par un espace qui peut être contenu dans la ligne
HaruPage int measure Text	retourne la longueur des caractères qui peuvent être inclus dans la largeur spécifiée
HaruPage int measure Text string $text float $width bool $wordwrap	calcule le longueur des caract&egrave;res qui peuvent &ecirc;tre inclus sur une ligne de largeur sp&eacute;cifi&eacute;e
HaruPage rectangle $height	la hauteur du rectangle
HaruPage rectangle $width	la largeur du rectangle
HaruPage rectangle $x	la bordure gauche du rectangle
HaruPage rectangle $y	la bordure basse du rectangle
HaruPage bool rectangle	retourne true en cas de succès
HaruPage bool rectangle float $x float $y float $width float $height	ajoute un rectangle &agrave; la position courante
HaruPage bool set CMYKFill	retourne true en cas de succès
HaruPage bool set CMYKFill float $c float $m float $y float $k	d&eacute;finit la couleur de remplissage de la page
HaruPage bool set CMYKStroke	retourne true en cas de succès
HaruPage bool set CMYKStroke float $c float $m float $y float $k	d&eacute;finit la couleur de remplissage de la page
HaruPage set Dash $phase	la phase sur laquelle les masques commencent
HaruPage set Dash $pattern	un tableau 8 éléments au maximum qui contiennent les styles et les trous utilisés pour les lignes de la page
HaruPage bool set Dash	retourne true en cas de succès
HaruPage bool set Dash array $pattern int $phase	d&eacute;finit le style de tiret pour la page
HaruPage set Flatness $flatness	la planéité pour la page
HaruPage bool set Flatness	retourne true en cas de succès
HaruPage bool set Flatness float $flatness	d&eacute;finit la plan&eacute;it&eacute; de la page
HaruPage set Font And Size $font	une instance valide de harufont
HaruPage set Font And Size $size	la taille de la police
HaruPage bool set Font And Size	retourne true en cas de succès
HaruPage bool set Font And Size object $font float $size	d&eacute;finit la police et sa taille pour la page
HaruPage set Height $height	la hauteur de la page
HaruPage bool set Height	retourne true en cas de succès
HaruPage bool set Height float $height	d&eacute;finit la hauteur de la page
HaruPage set Line Join $join	doit être une des valeurs suivantes : harupage::miter_join harupage::round_join harupage::bevel_join
HaruPage bool set Line Join	retourne true en cas de succès
HaruPage bool set Line Join int $join	d&eacute;finit le style de jointure de ligne pour la page
HaruPage bool set RGBFill	retourne true en cas de succès
HaruPage bool set RGBFill float $r float $g float $b	d&eacute;finit la couleur de remplissage pour la page
HaruPage set Rotate $angle	doit être un multiple de 90 degrés
HaruPage bool set Rotate	retourne true en cas de succès
HaruPage bool set Rotate int $angle	d&eacute;finit l'angle de rotation de la page
HaruPage set Slide Show $type	doit être une des valeurs suivantes : harupage::ts_wipe_right harupage::ts_wipe_left harupage::ts_wipe_up harupage::ts_wipe_down harupage::ts_barn_doors_horizontal_out harupage::ts_barn_doors_horizontal_in harupage::ts_barn_doors_vertical_out harupage::ts_barn_doors_vertical_in harupage::ts_box_out harupage::ts_box_in harupage::ts_blinds_horizontal harupage::ts_blinds_vertical harupage::ts_dissolve harupage::ts_glitter_right harupage::ts_glitter_down harupage::ts_glitter_top_left_to_bottom_right harupage::ts_replace
HaruPage set Slide Show $disp_time	le temps daffichage de la page en secondes
HaruPage set Slide Show $trans_time	la durée de leffet de transition en secondes
HaruPage bool set Slide Show	retourne true en cas de succès
HaruPage bool set Slide Show int $type float $disp_time float $trans_time	d&eacute;finit le style de transition pour la page
HaruPage set Text Leading $text_leading	espacement entre les lignes de la page
HaruPage bool set Text Leading	retourne true en cas de succès
HaruPage bool set Text Leading float $text_leading	d&eacute;finit l'espacement entre les lignes du texte pour la page
HaruPage set Text Matrix $y	position verticale du texte
HaruPage set Text Matrix $d	multiplicateur de hauteur
HaruPage set Text Matrix $x	position horizontale du texte
HaruPage set Text Matrix $c	inclinaison horizontale en radians
HaruPage set Text Matrix $a	multiplicateur de largeur
HaruPage set Text Matrix $b	inclinaison verticale en radians
HaruPage bool set Text Matrix	retourne true en cas de succès
HaruPage bool set Text Matrix float $a float $b float $c float $d float $x float $y	d&eacute;finit la matrice de transformation de texte courante de la page
HaruPage set Text Rise $rise	valeur courante de la levée du texte
HaruPage bool set Text Rise	retourne true en cas de succès
HaruPage bool set Text Rise float $rise	d&eacute;finit la valeur courante de la lev&eacute;e du texte
HaruPage set Width $width	largeur de la page
HaruPage bool set Width	retourne true en cas de succès
HaruPage bool set Width float $width	d&eacute;finit la largeur de la page
HaruPage set Word Space $word_space	espacement entre les mots de la page
HaruPage bool set Word Space	retourne true en cas de succès
HaruPage bool set Word Space float $word_space	d&eacute;finit l'espacement entre les mots pour la page
HaruPage show Text $text	le texte à afficher
HaruPage bool show Text	retourne true en cas de succès
HaruPage bool show Text string $text	affiche le texte &agrave; la position courante de la page
HaruPage show Text Next Line $text	le texte à afficher
HaruPage show Text Next Line $char_space	lespacement entre les caractères
HaruPage show Text Next Line $word_space	lespacement entre les mots
HaruPage bool show Text Next Line	retourne true en cas de succès
HaruPage bool show Text Next Line string $text float $word_space float $char_space	d&eacute;place la position courante au d&eacute;but de la prochaine ligne et affiche le texte
HaruPage stroke $close_path	ferme le chemin courant si défini à true
HaruPage bool stroke	retourne true en cas de succès
HaruPage bool stroke bool $close_path	peint le chemin courant
HaruPage text Rect $left	bordure gauche de la zone de texte
HaruPage text Rect $align	alignement du texte
HaruPage text Rect $top	bordure haute de la zone de texte
HaruPage text Rect $text	le texte à afficher
HaruPage text Rect $bottom	bordure basse de la zone de texte
HaruPage text Rect $right	bordure droite de la zone de texte
HaruPage bool text Rect	retourne true en cas de succès
HaruPage bool text Rect float $left float $top float $right float $bottom string $text int $align	affiche le texte d'une r&eacute;gion sp&eacute;cifique
HRTime\PerformanceCounter int get Elapsed Ticks	retourne un entier indiquant les ticks écoulés
HRTime\PerformanceCounter int get Elapsed Ticks	r&eacute;cup&egrave;re les ticks &eacute;coul&eacute;s pour tous les intervalles
HRTime\PerformanceCounter int get Last Elapsed Ticks	retourne un entier indiquant les ticks écoulés
HRTime\PerformanceCounter int get Last Elapsed Ticks	r&eacute;cup&egrave;re les ticks &eacute;coul&eacute;s pour le dernier intervalle
HRTime\PerformanceCounter void start	d&eacute;marre la mesure du temps
HRTime\StopWatch get Elapsed Time $unit	unité de temps représentée par une constante hrtime\unit
HRTime\StopWatch float get Elapsed Time	retourne un nombre décimal indiquant le temps écoulé
HRTime\StopWatch float get Elapsed Time integer $unit	r&eacute;cup&egrave;re le temps &eacute;coul&eacute; pour tous les intervalles
Imagick adaptive Resize Image $columns	le nombre de colonnes dans limage cible
Imagick adaptive Resize Image $rows	le nombre de lignes dans limage cible
Imagick adaptive Resize Image $bestfit	indique sil faut conserver limage dans le rectangle de délimitation
Imagick bool adaptive Resize Image	retourne true en cas de succès
Imagick bool adaptive Resize Image int $columns int $rows bool $bestfit	redimensionne adaptativement une image par triangulation
Imagick adaptive Sharpen Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick adaptive Sharpen Image $radius	le rayon de la gaussienne en pixel sans compter le pixel du centre
Imagick adaptive Sharpen Image $sigma	la déviation standard de la gaussienne en pixel
Imagick bool adaptive Sharpen Image	retourne true en cas de succès
Imagick bool adaptive Sharpen Image float $radius float $sigma int $channel	augmente le contraste de l'image
Imagick adaptive Threshold Image $offset	la moyenne de la position
Imagick adaptive Threshold Image $width	la largeur du voisinage
Imagick adaptive Threshold Image $height	la hauteur du voisinage
Imagick bool adaptive Threshold Image	retourne true en cas de succès
Imagick bool adaptive Threshold Image int $width int $height int $offset	s&eacute;lectionne le niveau de chaque pixel &agrave; partir d'un intervalle d'intensit&eacute;
Imagick add Image $source	lobjet source imagick
Imagick bool add Image	retourne true en cas de succès
Imagick bool add Image Imagick $source	ajoute une nouvelle image &agrave; la liste d'image imagick
Imagick affine Transform Image $matrix	la matrice affine
Imagick bool affine Transform Image	retourne true en cas de succès
Imagick bool affine Transform Image ImagickDraw $matrix	transforme une image
Imagick animate Images $x_server	adresse du serveur x
Imagick bool animate Images	retourne true en cas de succès
Imagick bool animate Images string $x_server	anime une ou plusieurs images
Imagick annotate Image $text	la chaîne à dessiner
Imagick annotate Image $y	la position verticale du texte en pixel depuis la ligne de base du texte
Imagick annotate Image $x	la position horizontale du texte en pixel depuis la gauche du texte
Imagick annotate Image $draw_settings	lobjet imagickdraw qui contient les directives pour dessiner le texte
Imagick annotate Image $angle	langle auquel écrire le texte
Imagick bool annotate Image	retourne true en cas de succès
Imagick bool annotate Image ImagickDraw $draw_settings float $x float $y float $angle string $text	annote une image avec un texte
Imagick append Images $stack	si lon doit placer les images dans la pile de façon verticale
Imagick Imagick append Images	retourne un nouvel objet imagick en cas de succès
Imagick Imagick append Images bool $stack	ajoute un jeu d'images
Imagick Imagick average Images	retourne un nouvel objet imagick en cas de succès
Imagick Imagick average Images	moyenne d'un jeu d'images
Imagick blur Image $sigma	la déviation standard
Imagick blur Image $channel	la constante de type de canal
Imagick blur Image $radius	le rayon du flou
Imagick bool blur Image	retourne true en cas de succès
Imagick bool blur Image float $radius float $sigma int $channel	ajoute un filtre de flou &agrave; une image
Imagick charcoal Image $radius	le rayon de la gaussienne en pixel sans compter le pixel du centre
Imagick charcoal Image $sigma	la déviation standard de la gaussienne en pixel
Imagick bool charcoal Image	retourne true en cas de succès
Imagick bool charcoal Image float $radius float $sigma	simule un dessin au fusain
Imagick chop Image $height	la hauteur de la région à retirer
Imagick chop Image $y	lordonnée de la région retirée
Imagick chop Image $width	la largeur de la région à retirer
Imagick chop Image $x	labscisse de la région retirée
Imagick bool chop Image	retourne true en cas de succès
Imagick bool chop Image int $width int $height int $x int $y	supprime une r&eacute;gion d'une image et retaille
Imagick bool clip Image	retourne true en cas de succès
Imagick bool clip Image	s'aligne sur le premier chemin d'un profil 8bim
Imagick clip Path Image $pathname	le nom du chemin
Imagick clip Path Image $inside	si true les prochaines opérations auront lieu dans le chemin
Imagick bool clip Path Image	retourne true en cas de succès
Imagick bool clip Path Image string $pathname bool $inside	suit le chemin d'un profil 8bim
Imagick Imagick clone	une copie de lobjet imagick
Imagick Imagick clone	fait une copie exacte d'un objet imagick
Imagick Imagick coalesce Images	retourne un nouvel objet imagick en cas de succès
Imagick Imagick coalesce Images	compose un jeu d'images
Imagick color Floodfill Image $bordercolor	lobjet imagickpixel contenant la couleur de frontière
Imagick color Floodfill Image $y	lordonnée de début de remplissage
Imagick color Floodfill Image $fill	lobjet imagickpixel contenant la couleur de remplissage
Imagick color Floodfill Image $x	labscisse de début de remplissage
Imagick color Floodfill Image $fuzz	la quantité de bruit
Imagick bool color Floodfill Image	retourne true en cas de succès
Imagick bool color Floodfill Image mixed $fill float $fuzz mixed $bordercolor int $x int $y	change la couleur d'un pixel
Imagick colorize Image $colorize	lobjet imagickpixel ou une chaîne contenant la couleur de colorisation
Imagick colorize Image $opacity	lobjet imagickpixel ou un nombre décimal contenant la valeur de lopacité
Imagick bool colorize Image	retourne true en cas de succès
Imagick bool colorize Image mixed $colorize mixed $opacity	m&eacute;lange la couleur de remplissage avec l'image
Imagick combine Images $channelType	fournit une constante de canal valide pour votre mode de canal
Imagick Imagick combine Images	retourne true en cas de succès
Imagick Imagick combine Images int $channelType	combine plusieurs images en une seule
Imagick compare Image Channels $metricType	une des constantes de type de métrique
Imagick compare Image Channels $image	un objet imagick contenant limage à comparer
Imagick compare Image Channels $channelType	fournit une constante de canal valide pour votre mode de canal
Imagick array compare Image Channels	un tableau contenant new_wand et distortion
Imagick array compare Image Channels Imagick $image int $channelType int $metricType	retourne la diff&eacute;rence entre plusieurs images
Imagick compare Image Layers $method	une des constantes de méthode de couche
Imagick Imagick compare Image Layers	retourne true en cas de succès
Imagick Imagick compare Image Layers int $method	retourne la r&eacute;gion d'encadrement maximale entre deux images
Imagick compare Images $metric	une constante de type de métrique
Imagick compare Images $compare	une image à comparer
Imagick array compare Images	retourne true en cas de succès
Imagick array compare Images Imagick $compare int $metric	compare une image avec une image reconstitu&eacute;e
Imagick construct $files	le chemin jusquà limage à charger ou un tableau de chemins
Imagick mixed construct	retourne un nouvel objet imagick en cas de succès
Imagick mixed construct mixed $files	le constructeur imagick
Imagick contrast Image $sharpen	la valeur de contraste
Imagick bool contrast Image	retourne true en cas de succès
Imagick bool contrast Image bool $sharpen	change le contraste de l'image
Imagick contrast Stretch Image $white_point	le point blanc
Imagick contrast Stretch Image $black_point	le point noir
Imagick contrast Stretch Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick bool contrast Stretch Image	retourne true en cas de succès
Imagick bool contrast Stretch Image float $black_point float $white_point int $channel	am&eacute;liore le contraste d'une image
Imagick convolve Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick convolve Image $kernel	le noyau de convolution
Imagick bool convolve Image	retourne true en cas de succès
Imagick bool convolve Image array $kernel int $channel	applique un noyau de convolution &agrave; une image
Imagick crop Image $height	la hauteur du retaillage
Imagick crop Image $y	lordonnée coordonnée y de la région retaillée coin haut gauche
Imagick crop Image $width	la largeur du retaillage
Imagick crop Image $x	labscisse coordonnée x de la région retaillée coin haut gauche
Imagick bool crop Image	retourne true en cas de succès
Imagick bool crop Image int $width int $height int $x int $y	extrait une r&eacute;gion d'une image
Imagick crop Thumbnail Image $width	la largeur de la miniature
Imagick crop Thumbnail Image $height	la hauteur de la miniature
Imagick bool crop Thumbnail Image	retourne true en cas de succès
Imagick bool crop Thumbnail Image int $width int $height	cr&eacute;e une miniature par retaillage
Imagick Imagick current	retourne self en cas de succès
Imagick Imagick current	retourne une r&eacute;f&eacute;rence sur l'objet imagick courant
Imagick cycle Colormap Image $displace	le déplacement de la carte des couleurs
Imagick bool cycle Colormap Image	retourne true en cas de succès
Imagick bool cycle Colormap Image int $displace	d&eacute;place la carte des couleurs d'une image
Imagick deskew Image $threshold	seuil de redressement
Imagick bool deskew Image float $threshold	supprime le biais de l'image
Imagick bool destroy	retourne true en cas de succès
Imagick bool destroy	d&eacute;truit un objet imagick
Imagick display Image $servername	le nom du serveur x
Imagick bool display Image	retourne true en cas de succès
Imagick bool display Image string $servername	affiche une image
Imagick distort Image $arguments	les arguments de cette méthode de déformation
Imagick distort Image $bestfit	tentative de redimensionnement de limage de destination pour sassurer de la taille
Imagick distort Image $method	la méthode de déformation de limage
Imagick bool distort Image	retourne true en cas de succès
Imagick bool distort Image int $method array $arguments bool $bestfit	d&eacute;forme une image avec diff&eacute;rentes m&eacute;thodes
Imagick emboss Image $radius	le rayon de leffet
Imagick emboss Image $sigma	le sigma de leffet
Imagick bool emboss Image	retourne true en cas de succès
Imagick bool emboss Image float $radius float $sigma	retourne une image en niveau de gris avec un effet 3d
Imagick bool enhance Image	retourne true en cas de succès
Imagick bool enhance Image	am&eacute;liore la qualit&eacute; d'une image bruit&eacute;e
Imagick export Image Pixels $y	coordonnée en y de lespace exporté
Imagick export Image Pixels $map	ordre des pixels exportés
Imagick export Image Pixels $height	hauteur de lespace exporté
Imagick export Image Pixels $x	coordonnée en x de lespace exporté
Imagick export Image Pixels $STORAGE	référez-vous à la liste des constantes de type pixel
Imagick export Image Pixels $width	largeur de lespace exporté
Imagick array export Image Pixels	retourne un tableau contenant les valeurs des pixels
Imagick array export Image Pixels int $x int $y int $width int $height string $map int $STORAGE	exporte les pixels bruts de l'image
Imagick extent Image $height	la nouvelle hauteur
Imagick extent Image $y	la position en y pour la nouvelle taille
Imagick extent Image $width	la nouvelle largeur
Imagick extent Image $x	la position en x pour la nouvelle taille
Imagick bool extent Image	retourne true en cas de succès
Imagick bool extent Image int $width int $height int $x int $y	d&eacute;finit la taille de l'image
Imagick Imagick flatten Images	retourne true en cas de succès
Imagick Imagick flatten Images	fusionne une s&eacute;quence d'images
Imagick bool flop Image	retourne true en cas de succès
Imagick bool flop Image	cr&eacute;e une image par miroir horizontal
Imagick frame Image $matte_color	un objet imagickpixel ou une chaîne représentant la couleur
Imagick frame Image $width	la largeur de la bordure
Imagick frame Image $outer_bevel	la largeur du chanfrein extérieur
Imagick frame Image $height	la hauteur de la bordure
Imagick frame Image $inner_bevel	la largeur du chanfrein intérieur
Imagick bool frame Image	retourne true en cas de succès
Imagick bool frame Image mixed $matte_color int $width int $height int $inner_bevel int $outer_bevel	ajoute un bord 3d
Imagick fx Image $expression	lexpression
Imagick fx Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick Imagick fx Image	retourne true en cas de succès
Imagick Imagick fx Image string $expression int $channel	&eacute;value une expression pour chaque pixel d'une image
Imagick gamma Image $gamma	la correction gamma
Imagick gamma Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick bool gamma Image	retourne true en cas de succès
Imagick bool gamma Image float $gamma int $channel	applique une correction gamma &agrave; l'image
Imagick gaussian Blur Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick gaussian Blur Image $radius	le rayon de la gaussienne en pixel sans compter le pixel du centre
Imagick gaussian Blur Image $sigma	la déviation standard de la gaussienne en pixel
Imagick bool gaussian Blur Image	retourne true en cas de succès
Imagick bool gaussian Blur Image float $radius float $sigma int $channel	ajoute du flou &agrave; image
Imagick int get Colorspace	retourne un entier qui peut être comparé avec les constantes colorspace
Imagick int get Colorspace	r&eacute;cup&egrave;re l'espace de couleurs
Imagick int get Compression Quality	retourne un entier décrivant la qualité de la compression
Imagick int get Compression Quality	lit la qualit&eacute; de la compression
Imagick string get Filename	retourne une chaîne en cas de succès
Imagick string get Filename	lit le nom du fichier associ&eacute; &agrave; une s&eacute;quence
Imagick string get Font	retourne une chaîne de caractères contenant le nom de la police de caractères ou false si la police nest pas définie
Imagick string get Font	r&eacute;cup&egrave;re la police de caract&egrave;res
Imagick string get Home URL	retourne lurl de imagemagick
Imagick string get Home URL	retourne l'url de imagemagick
Imagick Imagick get Image	retourne un nouvel objet imagick
Imagick Imagick get Image	retourne un nouvel objet imagick
Imagick int get Image Alpha Channel	retourne une constante définissant la valeur du canal alpha courant
Imagick int get Image Alpha Channel	r&eacute;cup&egrave;re le canal alpha de l'image
Imagick get Image Artifact $artifact	le nom de lartefact
Imagick string get Image Artifact	retourne la valeur de lartefact en cas de succès
Imagick string get Image Artifact string $artifact	r&eacute;cup&egrave;re l'artefact de l'image
Imagick ImagickPixel get Image Background Color	retourne la couleur de fond sous forme dobjet imagickpixel
Imagick ImagickPixel get Image Background Color	retourne la couleur de fond
Imagick array get Image Blue Primary	retourne un tableau avec les clés x et y en cas de succès
Imagick array get Image Blue Primary	retourne la chromacit&eacute; de la couleur bleue
Imagick ImagickPixel get Image Border Color	retourne true en cas de succès
Imagick ImagickPixel get Image Border Color	retourne la couleur de bordure de l'image
Imagick get Image Channel Depth $channel	fournit une constante de canal valide pour votre mode de canal
Imagick int get Image Channel Depth	retourne true en cas de succès
Imagick int get Image Channel Depth int $channel	lit la profondeur d'un des canaux de l'image
Imagick get Image Channel Distortion $channel	fournit une constante de canal valide pour votre mode de canal
Imagick get Image Channel Distortion $metric	une des constantes de type de métrique
Imagick get Image Channel Distortion $reference	lobjet imagick avec lequel se comparer
Imagick float get Image Channel Distortion	retourne true en cas de succès
Imagick float get Image Channel Distortion Imagick $reference int $channel int $metric	compare les canaux d'une image reconstitu&eacute;e
Imagick get Image Channel Distortions $channel	fournit une constante de canal valide pour votre mode de canal
Imagick get Image Channel Distortions $reference	objet imagick contenant la référence de limage
Imagick get Image Channel Distortions $metric	référez-vous à la liste des constantes de type de mesures
Imagick float get Image Channel Distortions	retourne un double décrivant la distorsion du canal
Imagick float get Image Channel Distortions Imagick $reference int $metric int $channel	r&eacute;cup&egrave;re les distorsions d'un canal
Imagick get Image Channel Extrema $channel	fournit une constante de canal valide pour votre mode de canal
Imagick array get Image Channel Extrema	retourne true en cas de succès
Imagick array get Image Channel Extrema int $channel	lit les extr&ecirc;mes pour les canaux de l'image
Imagick get Image Channel Kurtosis $channel	fournit une constante de canal valide pour votre mode de canal
Imagick array get Image Channel Kurtosis	retourne un tableau avec les membres kurtosis et skewness
Imagick array get Image Channel Kurtosis int $channel	le but de getimagechannelkurtosis
Imagick get Image Channel Mean $channel	fournit une constante de canal valide pour votre mode de canal
Imagick array get Image Channel Mean	retourne true en cas de succès
Imagick array get Image Channel Mean int $channel	lit la moyenne et la d&eacute;viation standard
Imagick get Image Channel Range $channel	fournit une constante de canal valide pour votre mode de canal
Imagick array get Image Channel Range	retourne un tableau contenant les valeurs minimales et maximales du ou des canaux
Imagick array get Image Channel Range int $channel	r&eacute;cup&egrave;re l'intervalle du canal
Imagick array get Image Channel Statistics	retourne true en cas de succès
Imagick array get Image Channel Statistics	retourne des statistiques sur chaque canal de l'image
Imagick get Image Colormap Color $index	la position dans la carte des couleurs
Imagick ImagickPixel get Image Colormap Color	retourne true en cas de succès
Imagick ImagickPixel get Image Colormap Color int $index	retourne la couleur &agrave; l'index de la carte de couleurs
Imagick int get Image Colorspace	retourne true en cas de succès
Imagick int get Image Colorspace	lit l'espace de couleurs de l'image
Imagick int get Image Compression Quality	retourne un entier qui décrit la qualité de la compression de limage
Imagick int get Image Compression Quality	lit la qualit&eacute; de compression de l'image
Imagick int get Image Delay	retourne le délai de limage
Imagick int get Image Delay	lit le d&eacute;lai de l'image
Imagick int get Image Depth	la profondeur de limage
Imagick int get Image Depth	lit la profondeur de l'image
Imagick array get Image Extrema	retourne un tableau associatif avec les clés min et max
Imagick array get Image Extrema	lit les extr&ecirc;mes d'une image
Imagick string get Image Filename	retourne une chaîne avec le nom du fichier de limage
Imagick string get Image Filename	retourne le nom d'un fichier pour une image dans une s&eacute;quence
Imagick string get Image Format	retourne le format dune image dans une séquence
Imagick string get Image Format	retourne le format d'une image dans une s&eacute;quence
Imagick array get Image Geometry	retourne un tableau avec les dimensions de limage
Imagick array get Image Geometry	lit les dimensions de l'image dans un tableau
Imagick int get Image Gravity	retourne la propriété de la gravité de limage
Imagick int get Image Gravity	r&eacute;cup&egrave;re la gravit&eacute; de l'image
Imagick int get Image Height	retourne la hauteur de limage en pixels
Imagick int get Image Height	retourne la hauteur de l'image
Imagick int get Image Interlace Scheme	retourne le schéma dentrelacement de limage en cas de succès
Imagick int get Image Interlace Scheme	lit le sch&eacute;ma d'entrelacement de l'image
Imagick int get Image Iterations	retourne les itérations de limage
Imagick int get Image Iterations	lit les it&eacute;rations de l'image
Imagick string get Image Magick License	retourne une chaîne
Imagick string get Image Magick License	retourne une cha&icirc;ne avec la licence imagemagick
Imagick bool get Image Matte	cette fonction retourne true en cas de succès ou false si une erreur survient
Imagick bool get Image Matte	indique si l'image a un canal mat
Imagick ImagickPixel get Image Matte Color	retourne un objet imagickpixel en cas de succès
Imagick ImagickPixel get Image Matte Color	retourne la couleur mate de l'image
Imagick int get Image Orientation	retourne un entier en cas de succès
Imagick int get Image Orientation	lit l'orientation de l'image
Imagick get Image Pixel Color $x	labscisse du pixel
Imagick get Image Pixel Color $y	lordonnée du pixel
Imagick ImagickPixel get Image Pixel Color	retourne un objet imagickpixel qui représente la couleur pour ces coordonnées
Imagick ImagickPixel get Image Pixel Color int $x int $y	retourne la couleur d'un pixel
Imagick get Image Profile $name	le nom du profil à lire
Imagick string get Image Profile	retourne une chaîne contenant le profile de limage
Imagick string get Image Profile string $name	retourne un profil d'une image
Imagick get Image Profiles $pattern	le modèle de profile à lire
Imagick get Image Profiles $only_names	sil faut retourner seulement les noms des profils
Imagick array get Image Profiles	retourne un tableau avec les profils de limage ou bien seulement les noms des profils
Imagick array get Image Profiles string $pattern bool $only_names	retourne les profils de l'image
Imagick get Image Properties $pattern	le modèle pour les noms de propriétés
Imagick get Image Properties $only_names	sil faut retourner uniquement les noms des propriétés
Imagick array get Image Properties	retourne un tableau contenant les propriétés de limage ou leurs noms
Imagick array get Image Properties string $pattern bool $only_names	retourne les propri&eacute;t&eacute;s exif de l'image
Imagick get Image Region $y	lordonnée du coin supérieur gauche de la région extraite
Imagick get Image Region $width	la largeur de la région extraite
Imagick get Image Region $x	labscisse du coin supérieur gauche de la région extraite
Imagick get Image Region $height	la hauteur de la région extraite
Imagick Imagick get Image Region	extrait une région dune image et la retourne sous la forme dun nouvel objet imagick
Imagick Imagick get Image Region int $width int $height int $x int $y	extrait une r&eacute;gion d'une image
Imagick int get Image Rendering Intent	retourne la constante de rendu
Imagick int get Image Rendering Intent	lit la m&eacute;thode de rendu de l'image
Imagick int get Image Ticks Per Second	lit les ticks-par-seconde de limage
Imagick int get Image Ticks Per Second	lit les ticks-par-seconde de l'image
Imagick float get Image Total Ink Density	lit la densité totale dencre de limage
Imagick float get Image Total Ink Density	lit la densit&eacute; totale d'encre de l'image
Imagick int get Image Type	lit le type possible dimage
Imagick int get Image Type	lit le type possible d'image
Imagick int get Image Units	retourne les unités de résolution de limage
Imagick int get Image Units	retourne les unit&eacute;s de r&eacute;solution de l'image
Imagick int get Image Virtual Pixel Method	retourne la méthode du pixel virtuel pour limage spécifiée
Imagick int get Image Virtual Pixel Method	retourne la m&eacute;thode du pixel virtuel
Imagick array get Image White Point	retourne la chromacité du point blanc sous la forme dun tableau associatif avec les clés x et y
Imagick array get Image White Point	retourne la chromacit&eacute; du point blanc
Imagick int get Image Width	retourne la largeur de limage
Imagick int get Image Width	retourne la largeur de l'image
Imagick int get Interlace Scheme	lit la constante dentrelacement
Imagick int get Interlace Scheme	lit le sch&eacute;ma d'entrelacement de l'objet
Imagick int get Number Images	retourne le nombre dimage dun objet imagick
Imagick int get Number Images	retourne le nombre d'images d'un objet
Imagick array get Page	retourne la géométrie de lobjet imagick sous forme dun tableau associatif avec les clés width height x et y
Imagick array get Page	retourne la g&eacute;om&eacute;trie de la page
Imagick array get Quantum Range	retourne un tableau associatif contenant lintervalle quantique sous la forme dun entier quantumrangelong et sous la forme dune chaîne de caractères quantumrangestring
Imagick array get Quantum Range	retourne l'intervalle quantique de imagick
Imagick array get Sampling Factors	retourne un tableau associatif avec les facteurs déchantillonnage horizontal et vertical de limage
Imagick array get Sampling Factors	lit le facteur d'&eacute;chantillonnage horizontal et vertical
Imagick array get Size	retourne la taille associée avec un objet imagick sous forme de tableau avec les clés columns colonnes et rows lignes
Imagick array get Size	retourne la taille associ&eacute;e avec un objet imagick
Imagick int get Size Offset	retourne la taille de la position associée avec lobjet imagick
Imagick int get Size Offset	retourne la taille de la position
Imagick bool has Previous Image	retourne true si lobjet a une image précédente et false sinon
Imagick bool has Previous Image	v&eacute;rifie si un objet a une image pr&eacute;c&eacute;dente
Imagick implode Image $radius	le rayon de limplosion
Imagick bool implode Image	retourne true en cas de succès
Imagick bool implode Image float $radius	cr&eacute;e une nouvelle copie d'image
Imagick label Image $label	le libellé à ajouter
Imagick bool label Image	retourne true en cas de succès
Imagick bool label Image string $label	ajoute un libelle &agrave; une image
Imagick linear Stretch Image $whitePoint	le point blanc de limage
Imagick linear Stretch Image $blackPoint	le point noir de limage
Imagick bool linear Stretch Image	retourne true en cas de succès
Imagick bool linear Stretch Image float $blackPoint float $whitePoint	&eacute;tire la saturation de l'intensit&eacute; de l'image
Imagick liquid Rescale Image $rigidity	introduit une rigidité pour les coutures non droites
Imagick liquid Rescale Image $width	la largeur de la taille cible
Imagick liquid Rescale Image $delta_x	le nombre de coutures pouvant traverser laxe x
Imagick liquid Rescale Image $height	la hauteur de la taille cible
Imagick bool liquid Rescale Image	retourne true en cas de succès
Imagick bool liquid Rescale Image int $width int $height float $delta_x float $rigidity	anime une ou plusieurs images
Imagick bool magnify Image	retourne true en cas de succès
Imagick bool magnify Image	double la taille d'une image proportionnellement
Imagick matte Floodfill Image $x	labscisse dorigine de lopération
Imagick matte Floodfill Image $alpha	le niveau de transparence : 1
Imagick matte Floodfill Image $fuzz	cet argument représente la tolérance acceptable pour que deux couleurs soient considérées comme identiques
Imagick matte Floodfill Image $y	lordonnée dorigine de lopération
Imagick matte Floodfill Image $bordercolor	un objet imagickpixel ou une chaîne représentant la couleur de bordure
Imagick bool matte Floodfill Image	retourne true en cas de succès
Imagick bool matte Floodfill Image float $alpha float $fuzz mixed $bordercolor int $x int $y	change la transparence d'une couleur
Imagick median Filter Image $radius	le rayon du voisinage
Imagick bool median Filter Image	retourne true en cas de succès
Imagick bool median Filter Image float $radius	applique un filtre num&eacute;rique
Imagick bool modulate Image	retourne true en cas de succès
Imagick bool modulate Image float $brightness float $saturation float $hue	contr&ocirc;le la saturation l'intensit&eacute; et la teinte
Imagick montage Image $frame	encadre limage avec un bord dornement e
Imagick montage Image $mode	le mode de cadrage des miniatures
Imagick montage Image $thumbnail_geometry	la taille demandée pour limage et sa bordure pour chaque miniature e
Imagick montage Image $draw	le nom de la police la taille et la couleur sont demandés à cet objet
Imagick montage Image $tile_geometry	le nombre de carreaux par lignes et par page e
Imagick Imagick montage Image	retourne true en cas de succès
Imagick Imagick montage Image ImagickDraw $draw string $tile_geometry string $thumbnail_geometry int $mode string $frame	cr&eacute;e une image composite
Imagick morph Images $number_frames	le nombre dimages à générer entre les deux images
Imagick Imagick morph Images	cette méthode retourne un nouvel objet imagick
Imagick Imagick morph Images int $number_frames	r&eacute;alise un morphing entre deux images
Imagick negate Image $gray	sil faut effectuer la négation sur les niveaux de gris
Imagick negate Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick bool negate Image	retourne true en cas de succès
Imagick bool negate Image bool $gray int $channel	effectue la n&eacute;gation des couleurs d'une image de r&eacute;f&eacute;rence
Imagick new Image $rows	le nombre de lignes de la nouvelle image
Imagick new Image $cols	le nombre de colonnes de la nouvelle image
Imagick new Image $background	la couleur de fond utilisée pour cette image
Imagick new Image $format	le format de limage
Imagick bool new Image	retourne true en cas de succès
Imagick bool new Image int $cols int $rows mixed $background string $format	cr&eacute;e une nouvelle image
Imagick new Pseudo Image $columns	le nombre de colonnes dans la nouvelle image
Imagick new Pseudo Image $rows	le nombre de lignes dans la nouvelle image
Imagick new Pseudo Image $pseudoString	une chaîne contenant une pseudodéfinition dimage
Imagick bool new Pseudo Image	retourne true en cas de succès
Imagick bool new Pseudo Image int $columns int $rows string $pseudoString	cr&eacute;e une nouvelle image
Imagick bool next Image	retourne true en cas de succès
Imagick bool next Image	passe &agrave; la prochaine image
Imagick normalize Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick bool normalize Image	retourne true en cas de succès
Imagick bool normalize Image int $channel	am&eacute;liore le contraste de l'image
Imagick oil Paint Image $radius	le rayon du voisinage circulaire
Imagick bool oil Paint Image	retourne true en cas de succès
Imagick bool oil Paint Image float $radius	simule une peinture &agrave; l'huile
Imagick opaque Paint Image $fuzz	la quantité de poussière de papier
Imagick opaque Paint Image $target	un objet imagickpixel ou une chaîne de caractères contenant la couleur à modifier
Imagick opaque Paint Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick opaque Paint Image $fill	la couleur de remplacement
Imagick opaque Paint Image $invert	si vaut true colorise tous les pixels qui ne correspondent pas à la couleur cible
Imagick bool opaque Paint Image	retourne true en cas de succès
Imagick bool opaque Paint Image mixed $target mixed $fill float $fuzz bool $invert int $channel	modifie la valeur de la couleur de tous les pixels correspondant &agrave; la cible
Imagick bool optimize Image Layers	retourne true en cas de succès
Imagick bool optimize Image Layers	supprime les portions r&eacute;currents d'images &agrave; optimiser
Imagick ordered Posterize Image $threshold_map	une chaîne contenant le nom de la carte de seuils de dither
Imagick ordered Posterize Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick bool ordered Posterize Image	retourne true en cas de succès
Imagick bool ordered Posterize Image string $threshold_map int $channel	effectue un dither ordonn&eacute;
Imagick paint Floodfill Image $fuzz	la quantité de bruit
Imagick paint Floodfill Image $y	lordonnée position dorigine du remplissage
Imagick paint Floodfill Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick paint Floodfill Image $x	labscisse position dorigine du remplissage
Imagick paint Floodfill Image $fill	lobjet imagickpixel ou une chaîne de caractères contenant la couleur de remplissage
Imagick paint Floodfill Image $bordercolor	un objet imagickpixel ou une chaîne de caractères contenant la couleur de la bordure
Imagick bool paint Floodfill Image	retourne true en cas de succès
Imagick bool paint Floodfill Image mixed $fill float $fuzz mixed $bordercolor int $x int $y int $channel	change les pixels qui sont d'une couleur
Imagick paint Opaque Image $target	la couleur cible avec son opacité
Imagick paint Opaque Image $fuzz	ce paramètre indique la tolérance qui permet de considérer que deux couleurs sont identiques
Imagick paint Opaque Image $channel	fournit une constante de canal valide pour votre mode de canal
Imagick paint Opaque Image $fill	un objet imagickpixel ou une chaîne représentant une couleur de remplissage
Imagick bool paint Opaque Image	retourne true en cas de succès
Imagick bool paint Opaque Image mixed $target mixed $fill float $fuzz int $channel	change les pixels qui sont d'une couleur
Imagick paint Transparent Image $target	la couleur cible avec son opacité
Imagick paint Transparent Image $fuzz	ce paramètre indique la tolérance qui permet de considérer que deux couleurs sont identiques
Imagick paint Transparent Image $alpha	le niveau de transparence : 1
Imagick bool paint Transparent Image	retourne true en cas de succès
Imagick bool paint Transparent Image mixed $target float $alpha float $fuzz	remplit les pixels avec une couleur
Imagick ping Image File $filehandle	un flux ouvert sur une image
Imagick ping Image File $fileName	le nom du fichier dimage optionnellement
Imagick bool ping Image File	retourne true en cas de succès
Imagick bool ping Image File resource $filehandle string $fileName	lit les attributs simples d'une image
Imagick bool posterize Image	retourne true en cas de succès
Imagick bool posterize Image int $levels bool $dither	r&eacute;duit une image &agrave; un nombre limit&eacute; de couleurs
Imagick preview Images $preview	type de prévisualisation
Imagick bool preview Images	retourne true en cas de succès
Imagick bool preview Images int $preview	teste rapidement diff&eacute;rents param&egrave;tres pour un traitement d'images
Imagick bool profile Image	retourne true en cas de succès
Imagick bool profile Image string $name string $profile	ajoute ou retire un profil d'une image
Imagick query Font Metrics $text	le texte
Imagick query Font Metrics $multiline	un paramètre multiligne
Imagick query Font Metrics $properties	un objet imagickdraw contenant des attributs de police
Imagick array query Font Metrics	retourne un tableau de plusieurs dimensions contenant les dimensions de la police
Imagick array query Font Metrics ImagickDraw $properties string $text bool $multiline	retourne un tableau repr&eacute;sentant les dimensions de la police
Imagick array query Formats	retourne un tableau contenant les formats supportés par imagick
Imagick array query Formats string $pattern	retourne les formats support&eacute;s par imagick
Imagick bool radial Blur Image	retourne true en cas de succès
Imagick bool radial Blur Image float $angle int $channel	flou radial d'une image
Imagick bool raise Image	retourne true en cas de succès
Imagick bool raise Image int $width int $height int $x int $y bool $raise	cr&eacute;e un effet 3d de bouton
Imagick bool read Image Blob	retourne true en cas de succès
Imagick bool read Image Blob string $image string $filename	lit une image depuis une cha&icirc;ne binaire
Imagick bool read Image File	retourne true en cas de succès
Imagick bool read Image File resource $filehandle string $fileName	lit une image &agrave; partir d'une ressource fichier
Imagick recolor Image $matrix	la matrice contenant les valeurs des couleurs
Imagick bool recolor Image	retourne true en cas de succès
Imagick bool recolor Image array $matrix	recolore l'image
Imagick bool remove Image	retourne true en cas de succès
Imagick bool remove Image	retire une image de la liste
Imagick string remove Image Profile	retourne une chaîne contenant le profil de limage
Imagick string remove Image Profile string $name	supprime le profil de l'image et le retourne
Imagick bool render	retourne true en cas de succès
Imagick bool render	affiche toute les commandes de dessins pr&eacute;c&eacute;dentes
Imagick reset Image Page $page	la définition de la page
Imagick bool reset Image Page	retourne true en cas de succès
Imagick bool reset Image Page string $page	r&eacute;initialise la page de l'image
Imagick resize Image $filter	une constante de filtre
Imagick resize Image $blur	le facteur de flou où > 1 est flou et < 1 est net
Imagick resize Image $rows	la hauteur de limage cible
Imagick resize Image $columns	la largeur de limage cible
Imagick resize Image $bestfit	paramètre optionnel de fit
Imagick bool resize Image	retourne true en cas de succès
Imagick bool resize Image int $columns int $rows int $filter float $blur bool $bestfit	redimensionne une image
Imagick roll Image $y	le décalage en ordonnée
Imagick roll Image $x	le décalage en abscisse
Imagick bool roll Image	retourne true en cas de succès
Imagick bool roll Image int $x int $y	d&eacute;cale une image
Imagick rotate Image $background	la couleur de fond
Imagick rotate Image $degrees	angle de rotation en degrés
Imagick bool rotate Image	retourne true en cas de succès
Imagick bool rotate Image mixed $background float $degrees	tourne une image
Imagick round Corners $stroke_width	largeur du trait
Imagick round Corners $x_rounding	arrondi en x
Imagick round Corners $displace	déplacement de limage
Imagick round Corners $size_correction	correction de taille
Imagick round Corners $y_rounding	arrondi en y
Imagick bool round Corners	retourne true en cas de succès
Imagick bool round Corners float $x_rounding float $y_rounding float $stroke_width float $displace float $size_correction	arrondit les coins d'un image
Imagick bool sample Image	retourne true en cas de succès
Imagick bool sample Image int $columns int $rows	met &agrave; l'&eacute;chelle une image avec &eacute;chantillonnage de pixels
Imagick separate Image Channel $channel	le canal à retourner
Imagick bool separate Image Channel	retourne true en cas de succès
Imagick bool separate Image Channel int $channel	s&eacute;pare un canal d'une image
Imagick bool sepia Tone Image	retourne true en cas de succès
Imagick bool sepia Tone Image float $threshold	passe une image en tons s&eacute;pia
Imagick bool set Background Color	retourne true en cas de succès
Imagick bool set Background Color mixed $background	configure la couleur de fond par d&eacute;faut
Imagick set Colorspace $COLORSPACE	une constante parmi les constantes colorspace
Imagick bool set Colorspace	retourne true en cas de succès
Imagick bool set Colorspace int $COLORSPACE	d&eacute;finit l'espace de couleurs
Imagick bool set Compression	retourne true en cas de succès
Imagick bool set Compression int $compression	configure le type de compression de l'objet
Imagick bool set First Iterator	retourne true en cas de succès
Imagick bool set First Iterator	place l'it&eacute;rateur de imagick sur la premi&egrave;re image
Imagick bool set Format	retourne true en cas de succès
Imagick bool set Format string $format	configure le format de l'objet imagick
Imagick set Image $replace	lobjet imagick de remplacement
Imagick bool set Image	retourne true en cas de succès
Imagick bool set Image Imagick $replace	remplace l'image dans l'objet
Imagick set Image Alpha Channel $mode	une constante parmi les constantes imagick::alphachannel_*
Imagick bool set Image Alpha Channel	retourne true en cas de succès
Imagick bool set Image Alpha Channel int $mode	d&eacute;finit le canal alpha de l'image
Imagick set Image Artifact $artifact	le nom de lartefact
Imagick set Image Artifact $value	la valeur de lartefact
Imagick bool set Image Artifact	retourne true en cas de succès
Imagick bool set Image Artifact string $artifact string $value	d&eacute;finit l'artefact de l'image
Imagick bool set Image Background Color	retourne true en cas de succès
Imagick bool set Image Background Color mixed $background	configure la couleur de fond d'image
Imagick bool set Image Bias	retourne true en cas de succès
Imagick bool set Image Bias float $bias	configure le biais pour les convolutions
Imagick bool set Image Blue Primary	retourne true en cas de succès
Imagick bool set Image Blue Primary float $x float $y	configure la chromacit&eacute; du point bleu
Imagick set Image Border Color $border	la couleur de bordure
Imagick bool set Image Border Color	retourne true en cas de succès
Imagick bool set Image Border Color mixed $border	configure la couleur de bordure
Imagick bool set Image Channel Depth	retourne true en cas de succès
Imagick bool set Image Channel Depth int $channel int $depth	configure la profondeur d'un canal
Imagick bool set Image Colormap Color	retourne true en cas de succès
Imagick bool set Image Colormap Color int $index ImagickPixel $color	configure une couleur de la carte
Imagick set Image Colorspace $colorspace	une des constantes colorspace
Imagick bool set Image Colorspace	retourne true en cas de succès
Imagick bool set Image Colorspace int $colorspace	configure l'espace de couleurs de l'image
Imagick bool set Image Compose	retourne true en cas de succès
Imagick bool set Image Compose int $compose	configure l'op&eacute;rateur de composition de l'image
Imagick set Image Delay $delay	le temps exprimé en ticks pendant lequel limage sera affichée
Imagick bool set Image Delay	retourne true en cas de succès
Imagick bool set Image Delay int $delay	configure le d&eacute;lai de l'image
Imagick bool set Image Depth	retourne true en cas de succès
Imagick bool set Image Depth int $depth	configure la profondeur de l'image
Imagick bool set Image Extent	retourne true en cas de succès
Imagick bool set Image Extent int $columns int $rows	configure la taille d'une image
Imagick set Image Format $format	la représentation en chaîne du format dimage
Imagick bool set Image Format	retourne true en cas de succès
Imagick bool set Image Format string $format	configure le format d'une image dans une s&eacute;quence
Imagick bool set Image Green Primary	retourne true en cas de succès
Imagick bool set Image Green Primary float $x float $y	configure la chromacit&eacute; du point vert
Imagick bool set Image Interlace Scheme	retourne true en cas de succès
Imagick bool set Image Interlace Scheme int $interlace_scheme	configure la m&eacute;thode d'entrelacement de l'image
Imagick set Image Interpolate Method $method	une constante imagick::interpolate_*
Imagick bool set Image Interpolate Method	retourne true en cas de succès
Imagick bool set Image Interpolate Method int $method	configure la m&eacute;thode d'interpolation de l'image
Imagick set Image Iterations $iterations	le nombre ditérations de limage
Imagick bool set Image Iterations	retourne true en cas de succès
Imagick bool set Image Iterations int $iterations	configure les it&eacute;rations de l'image
Imagick set Image Opacity $opacity	le niveau de transparence : 1
Imagick bool set Image Opacity	retourne true en cas de succès
Imagick bool set Image Opacity float $opacity	configure le niveau d'opacit&eacute; de l'image
Imagick set Image Orientation $orientation	une des constantes dorientation
Imagick bool set Image Orientation	retourne true en cas de succès
Imagick bool set Image Orientation int $orientation	configure l'orientation de l'image
Imagick bool set Image Page	retourne true en cas de succès
Imagick bool set Image Page int $width int $height int $x int $y	configure la g&eacute;om&eacute;trie de la page de l'image
Imagick bool set Image Resolution	retourne true en cas de succès
Imagick bool set Image Resolution float $x_resolution float $y_resolution	configure la r&eacute;solution de l'image
Imagick bool set Image Scene	retourne true en cas de succès
Imagick bool set Image Scene int $scene	configure la sc&egrave;ne de l'image
Imagick bool set Image Type	retourne true en cas de succès
Imagick bool set Image Type int $image_type	configure le type d'image
Imagick bool set Image Units	retourne true en cas de succès
Imagick bool set Image Units int $units	configure les unit&eacute;s de r&eacute;solutions de l'image
Imagick bool set Image White Point	retourne true en cas de succès
Imagick bool set Image White Point float $x float $y	configure la chromacit&eacute; du point blanc
Imagick bool set Page	retourne true en cas de succès
Imagick bool set Page int $width int $height int $x int $y	configure la g&eacute;om&eacute;trie de la page de l'objet imagick
Imagick set Resolution $x_resolution	la résolution horizontale
Imagick set Resolution $y_resolution	la résolution verticale
Imagick bool set Resolution	retourne true en cas de succès
Imagick bool set Resolution float $x_resolution float $y_resolution	configure la r&eacute;solution de l'image
Imagick set Resource Limit $type	référez-vous à la liste des constantes resourcetype
Imagick set Resource Limit $limit	la limite de la ressource
Imagick bool set Resource Limit	retourne true en cas de succès
Imagick bool set Resource Limit int $type int $limit	configure la taille limite d'une ressource
Imagick bool set Sampling Factors	retourne true en cas de succès
Imagick bool set Sampling Factors array $factors	configure les facteurs d'&eacute;chantillonnage de l'image
Imagick bool set Size	retourne true en cas de succès
Imagick bool set Size int $columns int $rows	configure la taille de l'objet imagick
Imagick bool set Type	retourne true en cas de succès
Imagick bool set Type int $image_type	configure l'attribut de l'image
Imagick bool shade Image	retourne true en cas de succès
Imagick bool shade Image bool $gray float $azimuth float $elevation	cr&eacute;e un effet 3d
Imagick bool shadow Image	retourne true en cas de succès
Imagick bool shadow Image float $opacity float $sigma int $x int $y	simule une ombre sur l'image
Imagick bool shave Image	retourne true en cas de succès
Imagick bool shave Image int $columns int $rows	supprime les pixels du bord de l'image
Imagick sigmoidal Contrast Image $alpha	la quantité de contraste à appliquer
Imagick sigmoidal Contrast Image $channel	canaux de couleurs sur lesquels le contraste doit dappliquer
Imagick sigmoidal Contrast Image $sharpen	si vaut true le contraste augmentera sinon le contraste dimunera
Imagick sigmoidal Contrast Image $beta	où doit se situer le milieu du gradient
Imagick bool sigmoidal Contrast Image	retourne true en cas de succès
Imagick bool sigmoidal Contrast Image bool $sharpen float $alpha float $beta int $channel	ajuste le contraste de l'image
Imagick bool solarize Image	retourne true en cas de succès
Imagick bool solarize Image int $threshold	applique un effet de solarisation &agrave; l'image
Imagick sparse Color Image $CHANNEL	fournit une constante de canal valide pour votre mode de canal
Imagick sparse Color Image $SPARSE_METHOD	référez-vous à la liste des constantes pour la méthode sparse
Imagick sparse Color Image $arguments	un tableau contenant les coordonnées
Imagick bool sparse Color Image	retourne true en cas de succès
Imagick bool sparse Color Image int $SPARSE_METHOD array $arguments int $channel	interpole les couleurs
Imagick bool splice Image	retourne true en cas de succès
Imagick bool splice Image int $width int $height int $x int $y	joint une couleur solide dans l'image
Imagick bool stereo Image	retourne true en cas de succès
Imagick bool stereo Image Imagick $offset_wand	fusionne 2 images
Imagick bool strip Image	retourne true en cas de succès
Imagick bool strip Image	supprime d'une image tous les profiles et les commentaires
Imagick bool swirl Image	retourne true en cas de succès
Imagick bool swirl Image float $degrees	tourbillonne les pixels du centre de l'image
Imagick bool texture Image	retourne true en cas de succès
Imagick bool texture Image Imagick $texture_wand	r&eacute;p&egrave;te les carreaux de la texture d'une image
Imagick bool threshold Image	retourne true en cas de succès
Imagick bool threshold Image float $threshold int $channel	modifie la valeur des pixels individuels bas&eacute;e sur un seuil
Imagick bool tint Image	retourne true en cas de succès
Imagick bool tint Image mixed $tint mixed $opacity	applique un vecteur de couleur &agrave; chaque pixel de l'image
Imagick bool transpose Image	retourne true en cas de succès
Imagick bool transpose Image	applique une sym&eacute;trie verticale
Imagick trim Image $fuzz	par défaut la cible doit correspondre à une couleur particulière de pixel
Imagick bool trim Image	retourne true en cas de succès
Imagick bool trim Image float $fuzz	supprime les bords de l'image
Imagick bool unique Image Colors	retourne true en cas de succès
Imagick bool unique Image Colors	ne conserve qu'une couleur de pixel
Imagick bool unsharp Mask Image	retourne true en cas de succès
Imagick bool unsharp Mask Image float $radius float $sigma float $amount float $threshold int $channel	rend une image plus nette
Imagick bool valid	retourne true en cas de succès
Imagick bool valid	v&eacute;rifie si l'&eacute;l&eacute;ment courant est valide
Imagick wave Image $length	longueur de la vague
Imagick wave Image $amplitude	amplitude de la vague
Imagick bool wave Image	retourne true en cas de succès
Imagick bool wave Image float $amplitude float $length	ajoute un filtre de vagues &agrave; l'image
Imagick write Image File $filehandle	descripteur de fichier dans lequel limage sera écrite
Imagick bool write Image File	retourne true en cas de succès
Imagick bool write Image File resource $filehandle	&eacute;crit une image dans un descripteur de fichier
Imagick bool write Images	retourne true en cas de succès
Imagick bool write Images string $filename bool $adjoin	&eacute;crit une image ou une s&eacute;quence d'images
Imagick write Images File $filehandle	descripteur de fichier dans lequel les frames seront écrites
Imagick bool write Images File	retourne true en cas de succès
Imagick bool write Images File resource $filehandle	&eacute;crits des frames dans un descripteur de fichiers
ImagickDraw path Curve To Quadratic Bezier Smooth Absolute $y	lordonnée du point de fin
ImagickDraw path Curve To Quadratic Bezier Smooth Absolute $x	labscisse du point de fin
ImagickDraw bool path Curve To Quadratic Bezier Smooth Absolute float $x float $y	dessine une courbe de b&eacute;zier de puissance 4 en coordonn&eacute;es absolues
ImagickPixel get Color $normalized	valeurs normalisées de la couleur
ImagickPixel array get Color	un tableau de valeurs de canaux chacun normalisé si true est fourni comme argument
ImagickPixel array get Color bool $normalized	retourne la couleur
ImagickPixel string get Color As String	retourne la couleur de lobjet imagickpixel sous la forme dune chaîne de caractères
ImagickPixel string get Color As String	retourne une couleur
ImagickPixel get Color Value $color	la couleur pour laquelle la valeur sera récupérée spécifiée sous forme de constante de couleurs imagick
ImagickPixel float get Color Value	la valeur du canal sous la forme dun nombre à virgule flottante normalisé ou lance une exception imagickpixelexception si une erreur survient
ImagickPixel float get Color Value int $color	r&eacute;cup&egrave;re la valeur normalis&eacute;e du canal de la couleur fournie
ImagickPixel array get HSL	retourne la valeur hsl dans un tableau contenant les clés hue saturation et luminosity
ImagickPixel array get HSL	retourne la couleur hsl normalis&eacute;e de l'objet imagickpixel
ImagickPixel is Pixel Similar $color	lobjet imagickpixel à utiliser pour la comparaison
ImagickPixel is Pixel Similar $fuzz	la distance maximale pour laquelle on considère les couleurs comme similaires
ImagickPixel bool is Pixel Similar	retourne true en cas de succès
ImagickPixel bool is Pixel Similar ImagickPixel $color float $fuzz	v&eacute;rifie la distance entre cette couleur et une autre
ImagickPixel set Color Value $color	une constante de couleur imagick i
ImagickPixel set Color Value $value	la valeur à définir pour ce canal comprise entre 0 et 1
ImagickPixel bool set Color Value	retourne true en cas de succès
ImagickPixel bool set Color Value int $color float $value	d&eacute;finit la valeur normalis&eacute;e d'un des canaux
InfiniteIterator void next	avance l'it&eacute;rateur ou le replace au d&eacute;but
IntlCalendar - construct	constructeur priv&eacute; pour la d&eacute;sactivation de l'instanciation
Iterator mixed current	peut retourner tout type
Iterator mixed current	retourne l'&eacute;l&eacute;ment courant
Iterator scalar key	retourne un scalaire en cas de succès ou null si une erreur survient
Iterator scalar key	retourne la cl&eacute; de l'&eacute;l&eacute;ment courant
Iterator void next	se d&eacute;place sur l'&eacute;l&eacute;ment suivant
Iterator boolean valid	la valeur retournée sera transtypée en booléen puis évaluée
Iterator boolean valid	v&eacute;rifie si la position courante est valide
IteratorAggregate Traversable get Iterator	une instance dun objet qui implémente un iterator ou linterface traversable
IteratorAggregate Traversable get Iterator	retourne un it&eacute;rateur externe
IteratorIterator construct $iterator	litérateur traversable
IteratorIterator Traversable construct Traversable $iterator	cr&eacute;e un it&eacute;rateur &agrave; partir d'un objet traversable
IteratorIterator Traversable get Inner Iterator	litérateur interne fourni au constructeur iteratoriterator::__construct()
IteratorIterator Traversable get Inner Iterator	retourne l'it&eacute;rateur interne
IteratorIterator scalar key	la clé de lélément courant
IteratorIterator scalar key	lit la cl&eacute; de l'&eacute;l&eacute;ment courant
IteratorIterator void next	avance au prochain &eacute;l&eacute;ment
JsonSerializable mixed json Serialize	retourne les données qui peuvent être linéarisées par la fonction json_encode() qui peuvent être des valeurs de nimporte quel type autre quune ressource
JsonSerializable mixed json Serialize	sp&eacute;cifie les donn&eacute;es qui doivent &ecirc;tre lin&eacute;aris&eacute;es en json
Judy by Count $nth_index	n ième index à retourner
Judy int by Count	retourne lindex se trouvant à la n ième position
Judy int by Count int $nth_index	trouve le n i&egrave;me index pr&eacute;sent dans le tableau judy
Judy construct $judy_type	le type judy à utiliser
Judy int construct	retourne la nouvelle instance judy
Judy int construct int $judy_type	construit un nouvel objet judy
Judy void destruct	d&eacute;truit l'objet judy
Judy first $index	lindex peut-être un entier ou une chaîne de caractére coresspondant à lindex où la recherche commence
Judy mixed first	retourne lindex du tableau correspondant
Judy mixed first mixed $index	recherche le premier index dans le tableau judy
Judy first Empty $index	lindex peut-être un entier ou une chaîne de caractére coresspondant à lindex où la recherche commence
Judy int first Empty	retourne lindex du tableau correspondant
Judy int first Empty mixed $index	recherche le premier index absent dans le tableau judy
Judy int free	vide enti&eacute;rement le tableau judy
Judy last $index	lindex peut-être un entier ou une chaîne de caractére coresspondant à lindex où la recherche commence
Judy void last string $index	recherche le dernier index dans le tableau judy
Judy last Empty $index	lindex peut-être un entier ou une chaîne de caractére coresspondant à lindex où la recherche commence
Judy int last Empty	retourne lindex du tableau correspondant
Judy int last Empty int $index	recherche le dernier index absent dans le tableau judy
Judy int memory Usage	retourne la mémoire utilisée en octets
Judy int memory Usage	retourne la m&eacute;moire utilis&eacute;e par le tableau judy
Judy next $index	lindex peut-être un entier ou une chaîne de caractére coresspondant à lindex où la recherche commence
Judy mixed next	retourne lindex du tableau correspondant
Judy mixed next mixed $index	recherche le prochain index dans le tableau judy
Judy offset Exists $offset	une position à vérifier
Judy bool offset Exists	cette fonction retourne true en cas de succès ou false si une erreur survient
Judy bool offset Exists mixed $offset	indique si une position existe dans un tableau
Judy offset Get $offset	la position à lire
Judy mixed offset Get	peut retourner nimporte quel type de valeur
Judy mixed offset Get mixed $offset	position &agrave; lire
Judy offset Set $offset	la position à laquelle assigner une valeur
Judy offset Set $value	la valeur à assigner
Judy bool offset Set mixed $offset mixed $value	position &agrave; assigner
Judy prev $index	lindex peut-être un entier ou une chaîne de caractére coresspondant à lindex où la recherche commence
Judy mixed prev	retourne lindex du tableau correspondant
Judy mixed prev mixed $index	recherche le pr&eacute;c&eacute;dent index dans le tableau judy
Judy prev Empty $index	lindex peut-être un entier ou une chaîne de caractére coresspondant à lindex où la recherche commence
Judy int prev Empty	retourne lindex du tableau correspondant
Judy int prev Empty mixed $index	recherche le pr&eacute;c&eacute;dent index absent dans le tableau judy
Judy void size	retourne le nombre d'&eacute;l&eacute;ments dans le tableau judy
Lapack eigen Values $a	la matrice pour calculer ses vecteurs propres
Lapack eigen Values $right	paramètre optionnel - si cest un tableau passé en paramètre il sera rempli avec les vecteurs propres droites
Lapack eigen Values $left	paramètre optionnel - si cest un tableau passé en paramètre il sera rempli avec les vecteurs propres gauches
Lapack array eigen Values	retourne un tableau de tableaux représentant les vecteurs propres pour le tableau
Lapack array eigen Values array $a array $left array $right	cette fonction retourne les vecteurs propres pour une matrice carr&eacute; donn&eacute;e
Lapack identity $n	la hauteur et la largeur de la matrice didentité
Lapack array identity	retournera un tableau de n tableaux chacun contenant n entrées
Lapack array identity int $n	return an identity matrix
Lapack least Squares By Factorisation $a	matrice a
Lapack least Squares By Factorisation $b	matrice b
Lapack array least Squares By Factorisation	tableau de matrice de solution
Lapack array least Squares By Factorisation array $a array $b	calculer la solution des moindres carr&eacute;s lin&eacute;aires d'une matrice utilisant factorisation qr
Lapack least Squares By SVD $a	matrice a
Lapack least Squares By SVD $b	matrice b
Lapack array least Squares By SVD	retourne la solution en un tableau de tableaux
Lapack array least Squares By SVD array $a array $b	r&eacute;soudre le probl&egrave;me des moindres carr&eacute;s lin&eacute;aires en utilisant svd
Lapack pseudo Inverse $a	matrice à inverser
Lapack array pseudo Inverse	matrice inversée tableaux de tableaux
Lapack array pseudo Inverse array $a	calculer l'inverse d'une matrice
Lapack singular Values $a	la matrice des valeurs singulières à calculer
Lapack array singular Values	les valeurs singulières
Lapack array singular Values array $a	calcule des valeurs singuli&egrave;res d'une matrice
Lapack solve Linear Equation $b	côté droit à résoudre
Lapack solve Linear Equation $a	matrice carrée déquations linéaires
Lapack array solve Linear Equation	matrice x
Lapack array solve Linear Equation array $a array $b	r&eacute;solution d'un syst&egrave;me d'&eacute;quation lin&eacute;aire
LimitIterator construct $offset	position optionnelle de la limite
LimitIterator construct $count	nombre optionnelle de la limite
LimitIterator construct $iterator	l iterator à limiter
LimitIterator Iterator construct	le nouvel objet limititerator
LimitIterator Iterator construct Iterator $iterator int $offset int $count	construit un nouvel objet limititerator
LimitIterator mixed current	lélément courant ou null si il ny en a pas
LimitIterator mixed current	r&eacute;cup&egrave;re l'&eacute;l&eacute;ment courant
LimitIterator Iterator get Inner Iterator	litérateur interne passé à limititerator::__construct()
LimitIterator Iterator get Inner Iterator	r&eacute;cup&egrave;re l'it&eacute;rateur interne
LimitIterator int get Position	la position courante
LimitIterator int get Position	retourne la position courante
LimitIterator mixed key	la clé de lélément courant
LimitIterator mixed key	r&eacute;cup&egrave;re la cl&eacute; courante
LimitIterator void next	d&eacute;place l'it&eacute;rateur &agrave; la position suivante
Lua register Callback $function	une fonction de rappel php valide
Lua mixed register Callback	retourne $this null si de mauvais arguments sont passés ou false si une erreur dun autre type survient
Lua mixed register Callback string $name callable $function	enregistre une fonction php en lua
Memcache add $var	la variable à stocker
Memcache add $key	la clé à associer à lélément
Memcache add $expire	temps dexpiration de lélément
Memcache add $flag	utilisez memcache_compressed pour compresser lélément utilise zlib
Memcache bool add	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcache bool add string $key mixed $var int $flag int $expire	ajoute un &eacute;l&eacute;ment dans le server
Memcache bool close	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcache bool close	ferme la connexion avec le serveur memcache
Memcache decrement $key	clé de lélément à décrémenter
Memcache decrement $value	décrémente lélément par value
Memcache int decrement	retourne la valeur du nouvel élément en cas de succès ou false si une erreur survient
Memcache int decrement string $key int $value	d&eacute;cr&eacute;mente la valeur d'un &eacute;l&eacute;ment
Memcache delete $timeout	ce paramètre obsolète nest pas supporté et vaut par défaut 0 seconde
Memcache delete $key	la clé associée à lélément à supprimer
Memcache bool delete	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcache bool delete string $key int $timeout	efface un &eacute;l&eacute;ment du serveur de cache
Memcache bool flush	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcache bool flush	efface tous les &eacute;l&eacute;ments existant sur le serveur de cache
Memcache get $flags	si ce paramètre est présent il représentera les drapeaux des valeurs à récupérer
Memcache get $key	la clé ou le tableau de clés à récupérer
Memcache string get	retourne une chaîne de caractères associée avec le paramètre key ou un tableau contenant les paires clé / valeur trouvées lorsque le paramètre key est un tableau
Memcache string get string $key int $flags	r&eacute;cup&egrave;re un &eacute;l&eacute;ment du serveur de cache
Memcache get Extended Stats $type	le type de statistiques à récupérer
Memcache get Extended Stats $limit	utilisé avec le paramètre type définit à cachedump pour limiter le nombre dentrées à récupérer
Memcache get Extended Stats $slabid	utilisé avec le paramètre type définit à cachedump pour identifier le slab à récupérer
Memcache array get Extended Stats	retourne un tableau associatif à avec des statistiques des serveurs ou false en cas derreur
Memcache array get Extended Stats string $type int $slabid int $limit	r&eacute;cup&egrave;re des statistiques de tous les serveurs dans la liste
Memcache get Server Status $host	pointe à lhôte où memcache écoute pour des connexions
Memcache get Server Status $port	pointe au port où memcache écoute pour des connexions
Memcache int get Server Status	retourne le statut du serveur
Memcache int get Server Status string $host int $port	retourne le statut du serveur
Memcache get Stats $type	le type de statistiques à récupérer
Memcache get Stats $limit	utilisé avec le paramètre type définit à cachedump pour limiter le nombre dentrées à récupérer
Memcache get Stats $slabid	utilisé avec le paramètre type définit à cachedump pour identifier le slab à récupérer
Memcache array get Stats	retourne un tableau associatif des statistiques dun serveur ou false si une erreur survient
Memcache array get Stats string $type int $slabid int $limit	lit les statistiques du serveur
Memcache pconnect $host	pointe à lhôte où memcache écoute pour des connexions
Memcache pconnect $port	pointe au port où memcache écoute pour des connexions
Memcache pconnect $timeout	valeur en seconde qui sera utilisée pour se connecter au démon
Memcache mixed pconnect	retourne un objet memcache ou false si une erreur survient
Memcache mixed pconnect string $host int $port int $timeout	ouvre un connexion persistante &agrave; un serveur de cache
Memcache set $expire	temps dexpiration pour lélément
Memcache set $var	la variable à enregistrer
Memcache set $flag	utilisez memcache_compressed pour enregistrer lélément compressé utilise zlib
Memcache set $key	la clé qui sera associée avec lélément
Memcache bool set	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcache bool set string $key mixed $var int $flag int $expire	stocke des donn&eacute;es dans le serveur de cache
Memcache set Server Params $retry_interval	contrôle combien de fois la connexion à un serveur qui échoue sera essayée : la valeur par défaut est de 15 secondes
Memcache set Server Params $port	port où memcache écoute pour des connexions
Memcache set Server Params $timeout	valeur en seconde qui sera utilisée pour se connecter au démon
Memcache set Server Params $status	contrôle si le serveur doit être indiqué comme étant en ligne
Memcache set Server Params $host	hôte où memcache écoute pour des connexions
Memcache set Server Params $failure_callback	permet à lutilisateur de spécifier une fonction de rappel permettant de contourner une erreur
Memcache bool set Server Params	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcache bool set Server Params string $host int $port int $timeout int $retry_interval bool $status callable $failure_callback	modifit les param&egrave;tres et les statuts du serveur pendant l'ex&eacute;cution
Memcached add $key	la clé avec laquelle stocker la valeur
Memcached add $value	la valeur à stocker
Memcached add $expiration	le délai dexpiration par défaut à zéro
Memcached bool add	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool add string $key mixed $value int $expiration	ajoute un nouvel &eacute;l&eacute;ment sous une nouvelle cl&eacute;
Memcached add Servers $array	un tableau de serveurs à ajouter
Memcached bool add Servers	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool add Servers array $servers	ajoute plusieurs serveurs au pool
Memcached append $value	la chaîne suffixée
Memcached append $key	la clé de lélément à suffixer
Memcached bool append	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool append string $key string $value	ajoute des donn&eacute;es &agrave; un &eacute;l&eacute;ment
Memcached append By Key $key	la clé de lélément à qui ajouter des données
Memcached append By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached append By Key $value	la chaîne à ajouter
Memcached bool append By Key	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool append By Key string $server_key string $key string $value	ajoute des donn&eacute;es &agrave; un &eacute;l&eacute;ment
Memcached cas $key	la clé avec laquelle stocker la valeur
Memcached cas $value	la valeur à stocker
Memcached cas $expiration	le délai dexpiration par défaut à zéro
Memcached cas $cas_token	valeur unique associée à un élément existant
Memcached bool cas	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool cas float $cas_token string $key mixed $value int $expiration	compare et &eacute;change un &eacute;l&eacute;ment
Memcached cas By Key $key	la clé avec laquelle stocker la valeur
Memcached cas By Key $value	la valeur à stocker
Memcached cas By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached cas By Key $cas_token	valeur unique associée à un élément existant
Memcached cas By Key $expiration	le délai dexpiration par défaut à zéro
Memcached bool cas By Key	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool cas By Key float $cas_token string $server_key string $key mixed $value int $expiration	compare et &eacute;change un &eacute;l&eacute;ment sur un serveur
Memcached decrement $initial_value	la valeur à utiliser pour définir lélément sil nexiste pas
Memcached decrement $key	la clé de lélément à décrémenter
Memcached decrement $offset	la quantité avec laquelle diminuer lélément
Memcached decrement $expiry	le délai dexpiration dans la définition de lélément
Memcached int decrement	retourne la nouvelle valeur de lélément en cas de succès ou false si une erreur survient
Memcached int decrement string $key int $offset int $initial_value int $expiry	d&eacute;cr&eacute;mente une valeur num&eacute;rique
Memcached decrement By Key $initial_value	la valeur à définir si léménent nexiste pas
Memcached decrement By Key $key	la clé de lélément à décrémenter
Memcached decrement By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached decrement By Key $expiry	le délai dexpiration pour la définition de lélément
Memcached decrement By Key $offset	lincrément à utiliser sur la valeur de lélément
Memcached int decrement By Key	retourne la nouvelle valeur de lélément en cas de succès ou false si une erreur survient
Memcached int decrement By Key string $server_key string $key int $offset int $initial_value int $expiry	d&eacute;cr&eacute;mente une valeur num&eacute;rique d'un &eacute;l&eacute;ment stock&eacute; sur un serveur sp&eacute;cifique
Memcached delete $time	la durée deffacement sur le serveur
Memcached delete $key	la clé a effacer
Memcached bool delete	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool delete string $key int $time	efface un &eacute;l&eacute;ment
Memcached delete By Key $time	la durée dattente de leffacement
Memcached delete By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached delete By Key $key	la clé à effacer
Memcached bool delete By Key	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool delete By Key string $server_key string $key int $time	supprime un &eacute;l&eacute;ment d'un serveur sp&eacute;cifique
Memcached delete Multi $keys	les clés à supprimer
Memcached delete Multi $time	le délai dattente du serveur pour supprimer les éléments
Memcached bool delete Multi	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool delete Multi array $keys int $time	supprime plusieurs &eacute;l&eacute;ments
Memcached array fetch	retourne le résultat suivant ou bien false sinon
Memcached array fetch	lit le prochain r&eacute;sultat
Memcached array fetch All	retourne les résultats ou false si une erreur survient
Memcached array fetch All	lit tous les autres &eacute;l&eacute;ments
Memcached flush $delay	le nombre de secondes dattente avant linvalidation
Memcached bool flush	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool flush int $delay	invalide tous les &eacute;l&eacute;ments du cache
Memcached get $cas_token	la variable où stocker le cas
Memcached get $key	la clé de lélément à lire
Memcached get $cache_cb	une fonction de rappel en cas dabsence ou null
Memcached mixed get	retourne la valeur stockée dans le cache ou bien false sinon
Memcached mixed get string $key callable $cache_cb float $cas_token	lit un &eacute;l&eacute;ment
Memcached array get All Keys	retourne les clés stockées sur tous les serveurs en cas de succès ou false si une erreur survient
Memcached array get All Keys	r&eacute;cup&egrave;re toutes les cl&eacute;s stock&eacute;s sur tous les serveurs
Memcached get By Key $cas_token	la variable dans laquelle stocker le cas
Memcached get By Key $key	la clé de lélément à lire
Memcached get By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached get By Key $cache_cb	fonction de rappel en cas dabsence ou null
Memcached mixed get By Key	retourne la valeur stockée dans le cache ou false sinon
Memcached mixed get By Key string $server_key string $key callable $cache_cb float $cas_token	lit un &eacute;l&eacute;ment sur un serveur sp&eacute;cifique
Memcached get Delayed $value_cb	une fonction de rappel de résultats ou null
Memcached get Delayed $keys	un tableau de clé à lire
Memcached get Delayed $with_cas	sil faut lire les cas
Memcached bool get Delayed	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool get Delayed array $keys bool $with_cas callable $value_cb	lit plusieurs &eacute;l&eacute;ments
Memcached get Delayed By Key $value_cb	une fonction de rappel de résultats ou null
Memcached get Delayed By Key $keys	un tableau de clé à lire
Memcached get Delayed By Key $with_cas	sil faut aussi lire les cas
Memcached get Delayed By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached bool get Delayed By Key	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool get Delayed By Key string $server_key array $keys bool $with_cas callable $value_cb	lit plusieurs &eacute;l&eacute;ments sur un serveur
Memcached get Multi $keys	un tableau de clé à lire
Memcached get Multi $flags	les options pour cette opération
Memcached get Multi $cas_tokens	la variable où stocker les cas des éléments trouvés
Memcached mixed get Multi	retourne un tableau délément lus ou false si une erreur survient
Memcached mixed get Multi array $keys array $cas_tokens int $flags	lit plusieurs &eacute;l&eacute;ments
Memcached get Multi By Key $keys	un tableau de clé à lire
Memcached get Multi By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached get Multi By Key $cas_tokens	la variable où stocker les cas des éléments trouvés
Memcached get Multi By Key $flags	les options de lopération
Memcached array get Multi By Key	retourne le tableau des éléments trouvés ou false si une erreur survient
Memcached array get Multi By Key string $server_key array $keys string $cas_tokens int $flags	lit plusieurs &eacute;l&eacute;ments d'un serveur sp&eacute;cifique
Memcached int get Result Code	le code de résultat de la dernière opération memcached
Memcached int get Result Code	retourne le code de r&eacute;sultat de la derni&egrave;re op&eacute;ration
Memcached get Server By Key $server_key	la clé didentification du serveur
Memcached array get Server By Key	retourne un tableau contenant 3 clés : host port et weight en cas de succès ou false si une erreur survient
Memcached array get Server By Key string $server_key	dirige une cl&eacute; sur un serveur
Memcached array get Version	tableau de versions de serveurs une par serveur
Memcached array get Version	lit les informations de version du pool serveur
Memcached increment By Key $initial_value	la valeur à définir si léménent nexiste pas
Memcached increment By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached increment By Key $key	la clé de lélément à incrémenter
Memcached increment By Key $offset	lincrément à utiliser sur la valeur de lélément
Memcached increment By Key $expiry	le délai dexpiration pour la définition de lélément
Memcached int increment By Key	retourne la nouvelle valeur de lélément en cas de succès ou false si une erreur survient
Memcached int increment By Key string $server_key string $key int $offset int $initial_value int $expiry	incr&eacute;mente une valeur num&eacute;rique d'un &eacute;l&eacute;ment stock&eacute; sur un serveur sp&eacute;cifique
Memcached bool is Pristine	retourne true si linstance a été récemment créée false sinon
Memcached bool is Pristine	v&eacute;rifie si l'instance a &eacute;t&eacute; cr&eacute;&eacute;e r&eacute;cemment
Memcached prepend By Key $key	la clé de lélément à préfixer
Memcached prepend By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached prepend By Key $value	la chaîne à préfixer
Memcached bool prepend By Key	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool prepend By Key string $server_key string $key string $value	pr&eacute;fixe un &eacute;l&eacute;ment existant
Memcached bool quit	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool quit	ferme toutes les connexions ouvertes
Memcached replace $key	la clé avec laquelle stocker la valeur
Memcached replace $value	la valeur à stocker
Memcached replace $expiration	le délai dexpiration par défaut à zéro
Memcached bool replace	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool replace string $key mixed $value int $expiration	remplace un &eacute;l&eacute;ment sous une cl&eacute;
Memcached bool reset Server List	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool reset Server List	supprime tous les serveurs depuis la liste des serveurs
Memcached set $key	la clé avec laquelle stocker la valeur
Memcached set $value	la valeur à stocker
Memcached set $expiration	le délai dexpiration par défaut à zéro
Memcached bool set	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool set string $key mixed $value int $expiration	stocke un &eacute;l&eacute;ment
Memcached set By Key $key	la clé avec laquelle stocker la valeur
Memcached set By Key $value	la valeur à stocker
Memcached set By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached set By Key $expiration	le délai dexpiration par défaut à zéro
Memcached bool set By Key	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool set By Key string $server_key string $key mixed $value int $expiration	stocke un &eacute;l&eacute;ment sur un serveur sp&eacute;cifique
Memcached set Multi $expiration	le délai dexpiration par défaut à zéro
Memcached set Multi $items	un tableau de paires clé / valeur à stocker sur le serveur
Memcached bool set Multi	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool set Multi array $items int $expiration	stocke plusieurs &eacute;l&eacute;ments
Memcached set Multi By Key $server_key	la clé didentification du serveur de stockage ou de récupération
Memcached set Multi By Key $expiration	le délai dexpiration par défaut à zéro
Memcached set Multi By Key $items	un tableau de paires clé / valeur à stocker sur le serveur
Memcached bool set Multi By Key	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool set Multi By Key string $server_key array $items int $expiration	stocke plusieurs &eacute;l&eacute;ments sur un serveur
Memcached bool set Option	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool set Option int $option mixed $value	configure une option memcached
Memcached set Options $options	un tableau associatif doptions où les clés représentent loption à définir et les valeurs la nouvelle valeur pour loption
Memcached bool set Options	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool set Options array $options	d&eacute;finit des options memcache
Memcached set Sasl Auth Data $username	le nom dutilisateur à utiliser pour lauthentification
Memcached set Sasl Auth Data $password	le mot de passe à utiliser pour lauthentification
Memcached void set Sasl Auth Data string $username string $password	d&eacute;finit les informations &agrave; utiliser pour l'authentification
Memcached touch $key	la clé avec laquelle stocker la valeur
Memcached touch $expiration	le délai dexpiration par défaut à zéro
Memcached bool touch	cette fonction retourne true en cas de succès ou false si une erreur survient
Memcached bool touch string $key int $expiration	d&eacute;finit une nouvelle expiration sur un &eacute;l&eacute;ment
Mongo string get Slave	ladresse du secondaire utilisé par cette connexion pour les lectures
Mongo string get Slave	retourne l'adresse &agrave; utiliser pour les lectures slaveokay
Mongo bool get Slave Okay	retourne la valeur de la configuration de slaveokay pour cette instance
Mongo bool get Slave Okay	r&eacute;cup&egrave;re la configuration de slaveokay pour cette collection
Mongo string switch Slave	retourne ladresse du secondaire utilisé par cette connexion pour les lectures
Mongo string switch Slave	choisit un nouvel secondaire pour les lectures slaveokay
MongoBinData construct $data	données binaires
MongoBinData construct $type	le type de données
MongoBinData string construct	retourne un nouvel objet de données binaires
MongoBinData string construct string $data int $type	cr&eacute;e un nouvel objet de donn&eacute;es binaires
MongoClient close $connection	si ce paramètre nest pas fourni ou vaut false alors la connexion sélectionnée pour les écritures sera fermée
MongoClient bool close	retourne true si la connexion a pu être fermée
MongoClient bool close boolean|string $connection	ferme la connexion
MongoClient array get Connections	un tableau de connexions ouvertes
MongoClient array get Connections	retourne des informations sur toutes les connexions ouvertes
MongoClient array get Hosts	retourne un tableau dinformations sur les hôtes du jeu incluant chaque nom dhôtes la santé 1 signifie que lhôte est en bonne santé) létat 1 primaire 2 secondaire 3 autre le temps écoulé pour pinger le serveur et quand le dernier ping a eu lieu
MongoClient array get Hosts	met &agrave; jour les statuts de tous les h&ocirc;tes associ&eacute;s
MongoCollection aggregate	opérateurs additionnels de pipeline
MongoCollection aggregate $pipeline	un tableau dopérateurs de pipeline
MongoCollection aggregate $op	second opérateur de pipeline
MongoCollection aggregate $options	options pour la commande dagrégation
MongoCollection aggregate $op	premier opérateur de pipeline
MongoCollection array aggregate	le résultat delagrégation sous la forme dun tableau
MongoCollection array aggregate array $pipeline array $options	effectue une agr&eacute;gation en utilisant le framework d&eacute;di&eacute;
MongoCollection delete Index $keys	un tableau spécifiant les champs de lindex comme clés
MongoCollection array delete Index	retourne la réponse de la base de données
MongoCollection array delete Index string|array $keys	supprime un index de la collection
MongoCollection distinct $key	la clé à utiliser
MongoCollection distinct $query	paramètres additionnels de la requête
MongoCollection array distinct	retourne un tableau contenant les valeurs distinctes ou false si une erreur survient
MongoCollection array distinct string $key array $query	retourne une liste de valeurs distinctes d'une collection pour la cl&eacute; donn&eacute;e
MongoCollection array drop	retourne la réponse de la base de données
MongoCollection array drop	supprime cette collection
MongoCollection find And Modify $update	les critères de mise à jour
MongoCollection find And Modify $options	un tableau doptions à appliquer comme le fait de supprimer le document trouvé depuis la base de données et le retourner
MongoCollection find And Modify $query	les critères de recherche
MongoCollection find And Modify $fields	optionnellement ne retourne que ces champs
MongoCollection array find And Modify	retourne le document original ou le document modifié lorsque new est défini
MongoCollection array find And Modify array $query array $update array $fields array $options	met &agrave; jour un document et le retourne
MongoCollection find One $query	le champ dans lequel la recherche va seffectuer
MongoCollection find One $options	ce paramètre est un tableau associatif sous la forme array( nom = > < valeur >
MongoCollection find One $fields	les champs de résultat à retourner
MongoCollection array find One	retourne les enregistrements qui correspondent aux critères ou bien null
MongoCollection array find One array $query array $fields array $options	interroge cette collection retourne un seul &eacute;l&eacute;ment
MongoCollection bool get Slave Okay	retourne la valeur de la configuration slaveokay pour cette instance
MongoCollection bool get Slave Okay	r&eacute;cup&egrave;re la configuration slaveokay pour cette collection
MongoCollection parallel Collection Scan $num_cursors	le nombre de curseurs à demander au serveur
MongoCollection array[MongoCommandCursor] parallel Collection Scan	retourne un tableau dobjets mongocommandcursor
MongoCollection array[MongoCommandCursor] parallel Collection Scan int $num_cursors	retourne un tableau de curseurs pour parcourir une collection compl&egrave;te en parall&egrave;le
MongoCommandCursor batch Size $batchSize	le nombre de résultats à retourner par lot
MongoCommandCursor MongoCommandCursor batch Size	retourne ce curseur
MongoCommandCursor MongoCommandCursor batch Size int $batchSize	limite le nombre d'&eacute;l&eacute;ments retourn&eacute;s dans un lot
MongoCommandCursor construct $command	commande de base de données
MongoCommandCursor construct $ns	nom complet de la base de données et de la collection i
MongoCommandCursor construct $connection	la connexion à la base de données
MongoCommandCursor MongoClient construct	retourne le nouveau curseur
MongoCommandCursor MongoClient construct MongoClient $connection string $ns array $command	cr&eacute;e un nouveau curseur de commande
MongoCommandCursor create From Document $document	document contenant les informations du curseur
MongoCommandCursor create From Document $hash	le hash de la connexion tel quobtenu via le troisième argument par référence de la méthodec mongodb:command()
MongoCommandCursor create From Document $connection	la connexion à la base de données
MongoCommandCursor MongoCommandCursor create From Document	retourne le nouveau curseur
MongoCommandCursor MongoCommandCursor create From Document MongoClient $connection string $hash array $document	cr&eacute;e un nouveau curseur de commande depuis un document de commande existant
MongoCommandCursor array current	le document courant sous la forme dun tableau associatif
MongoCommandCursor array current	retourne l'&eacute;l&eacute;ment courant
MongoCommandCursor bool dead	retourne true sil y a encore des résultats qui nont pas été envoyés au client false sinon
MongoCommandCursor bool dead	v&eacute;rifie s'il y a des documents qui n'ont pas encore &eacute;t&eacute; envoy&eacute;s depuis la base de donn&eacute;es
MongoCursor add Option $value	la valeur à ajouter
MongoCursor add Option $key	le nom du champ à ajouter
MongoCursor MongoCursor add Option	retourne ce curseur
MongoCursor MongoCursor add Option string $key mixed $value	ajoute une paire cl&eacute; / valeur de haut niveau &agrave; la requ&ecirc;te
MongoCursor await Data $wait	si le curseur doit attente plus de données ou non
MongoCursor MongoCursor await Data	retourne le curseur
MongoCursor MongoCursor await Data bool $wait	d&eacute;finit si le curseur doit attendre un curseur tailable pour retourner plus de donn&eacute;es
MongoCursor batch Size $batchSize	le nombre de résultats à retourner pour un lot
MongoCursor MongoCursor batch Size	retourne ce curseur
MongoCursor MongoCursor batch Size int $batchSize	limite le nombre de r&eacute;sultats retourn&eacute; pour un lot
MongoCursor array current	le document résultant sous la forme dun tableau associatif
MongoCursor array current	retourne l'&eacute;l&eacute;ment courant
MongoCursor bool dead	retourne true sil existe dautres résultats qui nont pas encore été envoyés au client false sinon
MongoCursor bool dead	v&eacute;rifie s'il reste des r&eacute;sultats non envoy&eacute;s depuis la base de donn&eacute;es
MongoCursor immortal $liveForever	si le curseur doit être immortel ou non
MongoCursor MongoCursor immortal	returns this cursor
MongoCursor MongoCursor immortal bool $liveForever	d&eacute;finit si le curseur doit s'interrompre apr&egrave;s un certain d&eacute;lai
MongoCursor array info	retourne les champs namespace batch size limit skip flags query et projected de ce curseur
MongoCursor array info	r&eacute;cup&egrave;re les informations sur la cr&eacute;ation du curseur et son it&eacute;ration
MongoCursor void rewind	retourne le curseur au d&eacute;but du jeu de r&eacute;sultats
MongoCursor set Flag $set	si le drapeau doit être défini true ou supprimé false
MongoCursor set Flag $flag	le drapeau à définir
MongoCursor MongoCursor set Flag	retourne le curseur
MongoCursor MongoCursor set Flag int $flag bool $set	d&eacute;finit des drapeaux dans le cas o&ugrave; aucune m&eacute;thode d&eacute;di&eacute;e n'est disponible
MongoCursor MongoCursor snapshot	retourne le curseur
MongoCursor MongoCursor snapshot	utilise le mode de capture pour la requ&ecirc;te
MongoCursor timeout $ms	le nombre de millisecondes que le curseur doit attente une réponse
MongoCursor MongoCursor timeout	ce curseur
MongoCursor MongoCursor timeout int $ms	d&eacute;fini un d&eacute;lai maximum d'attente c&ocirc;t&eacute; client pour cette requ&ecirc;te
MongoCursorException string get Host	retourne le nom de lhôte ou null si le nom de lhôte est inconnu
MongoCursorException string get Host	r&eacute;cup&egrave;re le nom de l'h&ocirc;te sur lequel une erreur est survenue
MongoCursorInterface bool dead	retourne true sil y a encore des résultats qui nont pas encore été envoyés au client false sinon
MongoCursorInterface bool dead	v&eacute;rifie s'il y a des r&eacute;sultats qui n'ont pas encore &eacute;t&eacute; envoy&eacute;s depuis la base de donn&eacute;es
MongoCursorInterface timeout $ms	le nombre de millisecondes que le curseur doit attendre une réponse
MongoCursorInterface MongoCursorInterface timeout	retourne ce curseur
MongoCursorInterface MongoCursorInterface timeout int $ms	d&eacute;finit un d&eacute;lai maximal d'attente c&ocirc;t&eacute; client pour cette requ&ecirc;te
MongoDate construct $sec	le nombre de secondes depuis lépoque i
MongoDate construct $usec	le nombre de microsecondes
MongoDate int construct	retourne la nouvelle date
MongoDate int construct int $sec int $usec	cr&eacute;e une nouvelle date
MongoDate string to String	cette date
MongoDate string to String	retourne la date sous forme de cha&icirc;ne
MongoDB authenticate $username	le nom dutilisateur
MongoDB authenticate $password	le mot de passe en texte plein
MongoDB array authenticate	retourne la réponse de la base de données
MongoDB array authenticate string $username string $password	identification &agrave; une base de donn&eacute;es
MongoDB command $hash	défini le hash de connexion du serveur qui a exécuté la commande
MongoDB command $command	la requête à envoyer
MongoDB command $options	un tableau doptions pour la création de lindex
MongoDB array command	retourne la réponse de la base de données
MongoDB array command array $command array $options string $hash	ex&eacute;cute une commande de base de donn&eacute;es
MongoDB construct $MongoClientconn	la connexion à la base de données
MongoDB construct $name	le nom de la base de données
MongoDB MongoClient construct	returns the database
MongoDB MongoClient construct MongoClient $conn string $name	cr&eacute;e une nouvelle base de donn&eacute;es mongo
MongoDB create DBRef $collection	la collection vers laquelle la référence de base de données va pointer
MongoDB create DBRef $document_or_id	si un tableau ou un objet est fourni son champ _id sera utilisé comme identifiant de référence
MongoDB array create DBRef	retourne la tableau de référence de la base de données
MongoDB array create DBRef string $collection mixed $document_or_id	cr&eacute;e une r&eacute;f&eacute;rence de base de donn&eacute;es
MongoDB bool force Error	retourne la réponse de la base de données
MongoDB bool force Error	cr&eacute;e une erreur de base de donn&eacute;es
MongoDB get $name	le nom de la collection
MongoDB MongoCollection get	retourne la collection
MongoDB MongoCollection get string $name	r&eacute;cup&egrave;re une collection
MongoDB get Collection Names $options	un tableau doptions listant les collections
MongoDB array get Collection Names	retourne les noms des collections sous la forme dun tableau de chaînes de caractères
MongoDB array get Collection Names array $options	r&eacute;cup&egrave;re un tableau de noms pour toutes les collections de cette base de donn&eacute;es
MongoDB int get Profiling Level	retourne le niveau de profilage
MongoDB int get Profiling Level	lit le niveau de profilage de la base de donn&eacute;es
MongoDB bool get Slave Okay	retourne la valeur de slaveokay pour cette instance
MongoDB bool get Slave Okay	r&eacute;cup&egrave;re la configuration de slaveokay pour cette base de donn&eacute;es
MongoDB array last Error	retourne lerreur sil y en a une
MongoDB array last Error	v&eacute;rifie s'il y a une erreur sur la derni&egrave;re op&eacute;ration relative &agrave; la base de donn&eacute;es
MongoDB array prev Error	retourne lerreur ainsi que le numéro de lopérations dans laquelle elle est apparue
MongoDB array prev Error	v&eacute;rifie la derni&egrave;re erreur &eacute;mise lors d'une op&eacute;ration relative &agrave; la base de donn&eacute;es
MongoDB repair $backup_original_files	indique si les fichiers originaux doivent être sauvegardés
MongoDB repair $preserve_cloned_files	indique les fichiers clonés doivent être conservé en cas déchec de la réparation
MongoDB array repair	retourne la réponse de la base de données
MongoDB array repair bool $preserve_cloned_files bool $backup_original_files	r&eacute;pare et compacte une base de donn&eacute;es
MongoDB array reset Error	retourne la réponse à la base de données
MongoDB array reset Error	efface toutes les erreurs d'une base de donn&eacute;es
MongoDB set Profiling Level $level	le niveau de profilage
MongoDB int set Profiling Level	retourne le niveau de profilage précédent
MongoDB int set Profiling Level int $level	configure le niveau de profilage de la base de donn&eacute;es
MongoDB set Slave Okay $ok	si la lecture doit être envoyée au second membre dun jeu de réplication pour toutes les requêtes possibles utilisant linstance mongodb
MongoDB bool set Slave Okay	retourne la valeur de slaveokay pour cette instance
MongoDB bool set Slave Okay bool $ok	modifie la configuration de slaveokay pour cette base de donn&eacute;es
MongoDeleteBatch construct $collection	la mongocollection sur laquelle le lot sera exécuté
MongoDeleteBatch construct $write_options	un tableau doptions décriture
MongoDeleteBatch MongoCollection construct	un nouveau mongodeletebatch
MongoDeleteBatch MongoCollection construct MongoCollection $collection array $write_options	description
MongoGridFS construct $files	le nom de fichier de collection pour les fichiers optionnel
MongoGridFS construct $db	la base de données
MongoGridFS MongoDB construct MongoDB $db string $prefix mixed $chunks	cr&eacute;e une nouvelle collection de fichiers
MongoGridFSFile string get Bytes	retourne le contenu du fichier sous forme dune chaîne de caractères
MongoGridFSFile string get Bytes	retourne le contenu du fichier
MongoGridFSFile resource get Resource	retourne une ressource qui pourra être utilisée pour lire le fichier
MongoGridFSFile resource get Resource	retourne une ressource qui peut &ecirc;tre utilis&eacute;e pour lire le fichier stock&eacute;
MongoId int get PID	retourne le pid de mongoid
MongoId int get PID	r&eacute;cup&egrave;re l'identifiant du processus
MongoId int get Timestamp	retourne le nombre de secondes depuis lépoque unix et la création de lid
MongoId int get Timestamp	retourne le timestamp depuis la cr&eacute;ation de l'id
MongoId is Valid $value	la valeur à vérifier
MongoId bool is Valid	retourne true si value est une instance mongoid ou une chaîne de caratcères composée dexactement 24 caractères hexadécimaux ; sinon false sera retourné
MongoId bool is Valid mixed $value	v&eacute;rifie si une valeur est un objectid valide
MongoId set state $props	théoriquement un tableau de propriétés utilisé pour créer un nouvel identifiant
MongoId MongoId set state	un nouvel identifiant avec la valeur 000000000000000000000000
MongoId MongoId set state array $props	cr&eacute;e un mongoid
MongoInsertBatch construct $collection	la mongocollection sur laquelle le lot sera exécuté
MongoInsertBatch construct $write_options	un tableau doptions décriture
MongoInsertBatch MongoCollection construct	un nouveau mongoinsertbatch
MongoInsertBatch MongoCollection construct MongoCollection $collection array $write_options	description
MongoInt32 construct $value	un nombre
MongoInt32 string construct	retourne un nouvel entier
MongoInt32 string construct string $value	cr&eacute;e un nouvel entier 32-bit
MongoInt64 construct $value	un nombre
MongoInt64 string construct	retourne un nouvel entier
MongoInt64 string construct string $value	cr&eacute;e un nouvel entier 64-bit
MongoLog callable get Callback	retourne la fonction de rappel ou false si aucune fonction de rappel na été définie
MongoLog callable get Callback	r&eacute;cup&egrave;re la pr&eacute;c&eacute;dente fonction de rappel d&eacute;finie
MongoLog int get Level	retourne le s niveau x actuellement loggués
MongoLog int get Level	r&eacute;cup&egrave;re le s niveau x actuellement loggu&eacute; s
MongoLog set Callback $module	une constante parmi les constantes du module mongolog
MongoLog set Callback $level	une constante parmi les constantes de niveau mongolog
MongoLog set Callback $log_function	la fonction de rappel à appeler lors dévénements
MongoLog set Callback $message	le message de log
MongoLog void set Callback callable $log_function	d&eacute;finit une fonction de rappel &agrave; utiliser lors d'&eacute;v&eacute;nements
MongoLog set Module $module	le ou les modules à loguer
MongoLog void set Module int $module	d&eacute;finit le s module s &agrave; surveiller avec les logs
MongoPool set Size $size	le nombre maximal de connexions pour les futures nouvelles files dattente
MongoPool bool set Size	retourne la taille de la file dattente
MongoPool bool set Size int $size	d&eacute;finit la taille de la future file d'attente de connexions
MongoRegex construct $regex	expression rationnelle sous la forme / expression / options
MongoRegex string construct	retourne une expression rationnelle
MongoRegex string construct string $regex	cr&eacute;e une nouvelle expression rationnelle
MongoResultException array get Document	le document résultant complet sous la forme dun tableau incluant des données partielles si possible ainsi que des clés additionnelles
MongoResultException array get Document	r&eacute;cup&egrave;re le document r&eacute;sultant complet
MongoTimestamp construct $sec	nombre de secondes depuis lépoque i
MongoTimestamp construct $inc	lincrément
MongoTimestamp int construct	retourne le nouveau timestamp
MongoTimestamp int construct int $sec int $inc	cr&eacute;e un nouveau timestamp
MongoTimestamp string to String	le nombre de seconde depuis lépoque unix représenté par le timestamp
MongoTimestamp string to String	retourne une repr&eacute;sentation sous la forme d'une cha&icirc;ne de caract&egrave;res d'un timestamp
MongoUpdateBatch construct $collection	la mongocollection sur laquelle le lot sera exécuté
MongoUpdateBatch construct $write_options	un tableau doptions décriture
MongoUpdateBatch MongoCollection construct	un nouveau mongoupdatebatch
MongoUpdateBatch MongoCollection construct MongoCollection $collection array $write_options	description
MongoWriteBatch add $item	un tableau qui décrit une opération décriture
MongoWriteBatch bool add	retourne true en cas de succès et lance une exception si une erreur survient
MongoWriteBatch bool add array $item	ajoute une op&eacute;ration d'&eacute;criture dans un lot
MongoWriteBatch execute $write_options	voir mongowritebatch::__construct
MongoWriteBatch array execute	retourne un tableau contenant les informations statistiques pour le lot complet
MongoWriteBatch array execute array $write_options	ex&eacute;cute un lot d'op&eacute;rations d'&eacute;criture
MongoWriteConcernException array get Document	un document mongodb si disponible sous la forme dun tableau
MongoWriteConcernException array get Document	r&eacute;cup&egrave;re le document d'erreur
MultipleIterator attach Iterator $iterator	le nouvel itérateur à attacher
MultipleIterator attach Iterator $infos	les informations de litérateur qui doivent être un entier une chaîne de caractères ou null
MultipleIterator void attach Iterator Iterator $iterator string $infos	attache un it&eacute;rateur
MultipleIterator int count Iterators	le nombre dinstances ditérateurs attachés sous la forme dun entier
MultipleIterator int count Iterators	r&eacute;cup&egrave;re le nombre d'instances d'it&eacute;rateurs attach&eacute;s
MultipleIterator array current	un tableau contenant les valeurs courantes de chaque itérateur attaché ou false si aucun itérateur nest attaché
MultipleIterator array current	r&eacute;cup&egrave;re les instantes des it&eacute;rateurs attach&eacute;s
MultipleIterator array key	un tableau de tous les itérateurs enregistrés ou false si aucun sous-itérateur nest attaché
MultipleIterator array key	r&eacute;cup&egrave;re les instances des it&eacute;rateurs enregistr&eacute;s
MultipleIterator void next	d&eacute;place vers l'avant toutes les instances des it&eacute;rateurs attach&eacute;s
MultipleIterator void rewind	r&eacute;initialise toutes les instances d'it&eacute;rateurs attach&eacute;s
MultipleIterator bool valid	retourne true si un ou tous les sous-itérateurs sont valides suivant les drapeaux false sinon
MultipleIterator bool valid	v&eacute;rifie la validit&eacute; d'un sous-it&eacute;rateur
Mutex create $lock	passer la valeur true pour verrouiller le mutex pour lappelant avant de retourner le gestionnaire
Mutex long create	un nouveau gestionnaire mutex et optionnellement verrouillé
Mutex long create boolean $lock	cr&eacute;e un mutex
Mutex destroy $mutex	un gestionnaire retourné par un appel à la méthode mutex::create()
Mutex boolean destroy	un booléen indiquant le statut de lopération
Mutex boolean destroy long $mutex	d&eacute;truit un mutex
Mutex unlock $destroy	lorsque vaut true pthreads va détruire le mutex après un déverrouillage réussi
Mutex unlock $mutex	un gestionnaire retourné par un appel à la méthode mutex::create()
Mutex boolean unlock	un booléen indiquant le succès de lopération
Mutex boolean unlock long $mutex boolean $destroy	lib&egrave;re un mutex
MysqlndUhConnection charset Name $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection string charset Name	le jeu de caractères par défaut
MysqlndUhConnection string charset Name mysqlnd_connection $connection	r&eacute;cup&egrave;re le jeu de caract&egrave;res par d&eacute;faut pour la connexion &agrave; la base de donn&eacute;es
MysqlndUhConnection close $close_type	la raison pour laquelle la connexion doit être fermée
MysqlndUhConnection close $connection	la connexion à fermer
MysqlndUhConnection bool close	retourne true en cas de succès
MysqlndUhConnection bool close mysqlnd_connection $connection int $close_type	ferme une connexion existante &agrave; la base de donn&eacute;es
MysqlndUhConnection escape String $escape_string	la chaîne de caractères à échapper
MysqlndUhConnection escape String $MYSQLND_UH_RES_MYSQLND_NAME	le gestionnaire de connexion mysqlnd
MysqlndUhConnection string escape String	la chaîne de caractères échappée
MysqlndUhConnection string escape String mysqlnd_connection $connection string $escape_string	&eacute;chappe les caract&egrave;res sp&eacute;ciaux d'une cha&icirc;ne dans le but d'&ecirc;tre utilis&eacute;e dans une requ&ecirc;te sql en prenant en compte le jeu de caract&egrave;res courant de la connexion
MysqlndUhConnection get Affected Rows $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection int get Affected Rows	le nombre de lignes affectées
MysqlndUhConnection int get Affected Rows mysqlnd_connection $connection	r&eacute;cup&egrave;re le nombre de lignes affect&eacute;es par la pr&eacute;c&eacute;dente op&eacute;ration mysql
MysqlndUhConnection get Error Number $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection int get Error Number	le code erreur du plus récent appel à une fonction
MysqlndUhConnection int get Error Number mysqlnd_connection $connection	retourne le code erreur du plus r&eacute;cent appel &agrave; une fonction
MysqlndUhConnection get Error String $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection string get Error String	la description textuelle de lerreur du dernier appel à une fonction
MysqlndUhConnection string get Error String mysqlnd_connection $connection	retourne une description textuelle de la derni&egrave;re erreur
MysqlndUhConnection get Last Insert Id $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection int get Last Insert Id	lidentifiant de la dernière insertion
MysqlndUhConnection int get Last Insert Id mysqlnd_connection $connection	retourne l'identifiant auto-g&eacute;n&eacute;r&eacute; utilis&eacute; dans la derni&egrave;re requ&ecirc;te
MysqlndUhConnection get Server Statistics $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection string get Server Statistics	le message décrivant le statut du système
MysqlndUhConnection string get Server Statistics mysqlnd_connection $connection	r&eacute;cup&egrave;re le statut du syst&egrave;me courant
MysqlndUhConnection get Statistics $connection	le gestionnaire de connexion mysql
MysqlndUhConnection array get Statistics	les statistiques de connexion collectées par mysqlnd
MysqlndUhConnection array get Statistics mysqlnd_connection $connection	retourne les statistiques sur la connexion cliente
MysqlndUhConnection get Thread Id $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection int get Thread Id	lidentifiant du thread de la connexion
MysqlndUhConnection int get Thread Id mysqlnd_connection $connection	retourne l'identifiant du thread pour la connexion courante
MysqlndUhConnection get Warning Count $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection int get Warning Count	le nombre dalertes
MysqlndUhConnection int get Warning Count mysqlnd_connection $connection	retourne le nombre d'alertes depuis la derni&egrave;re requ&ecirc;te
MysqlndUhConnection init $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection bool init	retourne true en cas de succès
MysqlndUhConnection bool init mysqlnd_connection $connection	initialise une connexion mysqlnd
MysqlndUhConnection kill Connection $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection kill Connection $pid	lidentifiant du thread de connexion à tuer
MysqlndUhConnection bool kill Connection	retourne true en cas de succès
MysqlndUhConnection bool kill Connection mysqlnd_connection $connection int $pid	demande au serveur de tuer un thread mysql
MysqlndUhConnection list Fields $connection	le gestionnaire de connexion mysqlnd
MysqlndUhConnection list Fields $table	le nom de la table à requêter
MysqlndUhConnection list Fields $pattern	masque pour le nom
MysqlndUhConnection array list Fields mysqlnd_connection $connection string $table string $achtung_wild	liste les champs d'une table mysql
MysqlndUhConnection list Method $query	commande show à exécuter
MysqlndUhConnection list Method $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection void list Method mysqlnd_connection $connection string $query string $achtung_wild string $par1	gestionnaire pour des commandes
MysqlndUhConnection next Result $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool next Result	retourne true en cas de succès
MysqlndUhConnection bool next Result mysqlnd_connection $connection	pr&eacute;pare le prochain r&eacute;sultat depuis multi_query
MysqlndUhConnection ping $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool ping	retourne true en cas de succès
MysqlndUhConnection bool ping mysqlnd_connection $connection	ping une connexion de serveur ou tente de se reconnecter si la connexion n'est plus disponible
MysqlndUhConnection query $query	la requête
MysqlndUhConnection query $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool query	retourne true en cas de succès
MysqlndUhConnection bool query mysqlnd_connection $connection string $query	ex&eacute;cute une requ&ecirc;te sur la base de donn&eacute;es
MysqlndUhConnection reap Query $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool reap Query	retourne true en cas de succès
MysqlndUhConnection bool reap Query mysqlnd_connection $connection	r&eacute;cup&egrave;re le r&eacute;sultat depuis une requ&ecirc;te asynchrone
MysqlndUhConnection refresh Server $options	ce que lon souhaite rafraîchir
MysqlndUhConnection refresh Server $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool refresh Server	retourne true en cas de succès
MysqlndUhConnection bool refresh Server mysqlnd_connection $connection int $options	rafra&icirc;chie ou r&eacute;initialise les tables et les caches
MysqlndUhConnection restart PSession $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool restart PSession	retourne true en cas de succès
MysqlndUhConnection bool restart PSession mysqlnd_connection $connection	red&eacute;marre une connexion mysqlnd persistante
MysqlndUhConnection select Db $database	le nom de la base de données
MysqlndUhConnection select Db $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool select Db	retourne true en cas de succès
MysqlndUhConnection bool select Db mysqlnd_connection $connection string $database	s&eacute;lectionne la base de donn&eacute;es par d&eacute;faut pour l'ex&eacute;cution des requ&ecirc;tes
MysqlndUhConnection send Query $query	la requête
MysqlndUhConnection send Query $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool send Query	returns true on success
MysqlndUhConnection bool send Query mysqlnd_connection $connection string $query	envoi une requ&ecirc;te &agrave; mysql
MysqlndUhConnection server Dump Debug Information $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool server Dump Debug Information	retourne true en cas de succès
MysqlndUhConnection bool server Dump Debug Information mysqlnd_connection $connection	extrait les informations de d&eacute;bogage dans les logs pour le serveur mysql
MysqlndUhConnection set Autocommit $mode	si lon doit activer ou désactiver lauto-commit
MysqlndUhConnection set Autocommit $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool set Autocommit	returns true on success
MysqlndUhConnection bool set Autocommit mysqlnd_connection $connection int $mode	active ou d&eacute;sactive l'auto-commit de la base de donn&eacute;es
MysqlndUhConnection set Charset $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection set Charset $charset	le jeu de caractères à définir
MysqlndUhConnection bool set Charset	retourne true en cas de succès
MysqlndUhConnection bool set Charset mysqlnd_connection $connection string $charset	d&eacute;finit le jeu de caract&egrave;res par d&eacute;faut du client
MysqlndUhConnection set Client Option $value	valeur de loption optionnelle si requise
MysqlndUhConnection set Client Option $option	loption à définir
MysqlndUhConnection set Client Option $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool set Client Option	retourne true en cas de succès
MysqlndUhConnection bool set Client Option mysqlnd_connection $connection int $option int $value	d&eacute;finit une option du client
MysqlndUhConnection set Server Option $option	loption à définir
MysqlndUhConnection set Server Option $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection void set Server Option mysqlnd_connection $connection int $option	d&eacute;finit une option serveur
MysqlndUhConnection simple Command $command	la commande com à envoyer
MysqlndUhConnection simple Command $ok_packet	le type du paquet ok
MysqlndUhConnection simple Command $arg	arguments optionnels de la commande com
MysqlndUhConnection simple Command $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection simple Command $silent	si mysqlnd doit émettre des erreurs ou non
MysqlndUhConnection simple Command $ignore_upsert_status	si les statuts update / insert doivent être ignorés ou non
MysqlndUhConnection bool simple Command	retourne true en cas de succès false sinon
MysqlndUhConnection bool simple Command mysqlnd_connection $connection int $command string $arg int $ok_packet bool $silent bool $ignore_upsert_status	envoi une commande com_*
MysqlndUhConnection simple Command Handle Response $ignore_upsert_status	si lon doit ignorer ou non les status update / insert
MysqlndUhConnection simple Command Handle Response $command	la commande com dont on doit analyser les résultats
MysqlndUhConnection simple Command Handle Response $ok_packet	le type de paquet ok
MysqlndUhConnection simple Command Handle Response $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection simple Command Handle Response $silent	si mysqlnd doit émettre des erreurs ou non
MysqlndUhConnection bool simple Command Handle Response	retorne true en cas de succès false sinon
MysqlndUhConnection bool simple Command Handle Response mysqlnd_connection $connection int $ok_packet bool $silent int $command bool $ignore_upsert_status	analyse une r&eacute;ponse d'une commande com_* envoy&eacute;e au client
MysqlndUhConnection stmt Init $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection resource stmt Init	une ressource de type mysqlnd prepared statement internal only - you must not modify it!)
MysqlndUhConnection resource stmt Init mysqlnd_connection $connection	initialise une requ&ecirc;te et retourne une ressource &agrave; utiliser avec mysqli_statement::prepare
MysqlndUhConnection store Result $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection resource store Result	une ressource de type mysqlnd resultset internal only - you must not modify it!)
MysqlndUhConnection resource store Result mysqlnd_connection $connection	transf&egrave;re un jeu de r&eacute;sultats depuis la derni&egrave;re requ&ecirc;te
MysqlndUhConnection tx Commit $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool tx Commit	retourne true en cas de succès false sinon
MysqlndUhConnection bool tx Commit mysqlnd_connection $connection	valide la transaction courante
MysqlndUhConnection tx Rollback $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection bool tx Rollback	retourne true en cas de succès false sinon
MysqlndUhConnection bool tx Rollback mysqlnd_connection $connection	annule la transaction courante
MysqlndUhConnection use Result $connection	gestionnaire de connexion mysqlnd
MysqlndUhConnection resource use Result	une ressource de type mysqlnd resultset internal only - you must not modify it!)
MysqlndUhConnection resource use Result mysqlnd_connection $connection	initialise un jeu de r&eacute;sultats r&eacute;cup&eacute;r&eacute;
MysqlndUhPreparedStatement prepare $statement	gestionnaire de requête préparée mysqlnd
MysqlndUhPreparedStatement prepare $query	la requête à préparer
MysqlndUhPreparedStatement bool prepare	retourne true en cas de succès false sinon
MysqlndUhPreparedStatement bool prepare mysqlnd_prepared_statement $statement string $query	pr&eacute;pare une requ&ecirc;te sql pour ex&eacute;cution
NoRewindIterator construct $iterator	litérateur à utiliser
NoRewindIterator Iterator construct	un objet norewinditerator() basé sur litérateur iterator fourni
NoRewindIterator Iterator construct Iterator $iterator	construit un nouvel objet norewinditerator
NoRewindIterator mixed current	la valeur courante
NoRewindIterator mixed current	r&eacute;cup&egrave;re la valeur courante
NoRewindIterator iterator get Inner Iterator	litérateur interne passé via le constructeur norewinditerator::__construct()
NoRewindIterator iterator get Inner Iterator	r&eacute;cup&egrave;re l'it&eacute;rateur interne
NoRewindIterator mixed key	la clé courante
NoRewindIterator mixed key	r&eacute;cup&egrave;re la cl&eacute; courante
NoRewindIterator void next	se d&eacute;place vers le prochain &eacute;l&eacute;ment
NoRewindIterator void rewind	r&eacute;initialise l'it&eacute;rateur interne
NoRewindIterator bool valid	cette fonction retourne true en cas de succès ou false si une erreur survient
NoRewindIterator bool valid	valide un it&eacute;rateur
OAuth construct $consumer_secret	le secret de lecture fourni par le fournisseur de services
OAuth construct $signature_method	ce paramètre optionnel définit la méthode de signature utilisée
OAuth construct $auth_type	ce paramètre optionnel définit la méthode de passage des paramètres oauth au fournisseur de services
OAuth construct $consumer_key	la clé de lecture fournie par le fournisseur de services
OAuth string construct string $consumer_key string $consumer_secret string $signature_method int $auth_type	cr&eacute;e un nouvel objet oauth
OAuth bool disable Debug	true
OAuth bool disable Debug	d&eacute;sactive les messages de d&eacute;boguage
OAuth bool enable Debug	true
OAuth bool enable Debug	active les messages de d&eacute;bogage
OAuth bool enable Redirects	true
OAuth bool enable Redirects	active les redirections
OAuth fetch $http_headers	les entêtes client http tels que user-agent accept etc
OAuth fetch $protected_resource_url	url de la ressource protégées par oauth
OAuth fetch $http_method	une des constantes oauth constants oauth_http_method_* incluant get post put head ou delete
OAuth fetch $extra_parameters	paramètres supplémentaires à envoyer avec la requête à la ressource
OAuth mixed fetch	cette fonction retourne true en cas de succès ou false si une erreur survient
OAuth mixed fetch string $protected_resource_url array $extra_parameters string $http_method array $http_headers	lit une ressource prot&eacute;g&eacute;e par oauth
OAuth generate Signature $extra_parameters	chaîne ou tableau de paramètres additionnels
OAuth generate Signature $url	url de la requête
OAuth generate Signature $http_method	méthode http pour la requête
OAuth string generate Signature	une chaîne contenant la signature générée ou false si une erreur survient
OAuth string generate Signature string $http_method string $url mixed $extra_parameters	g&eacute;n&egrave;re une signature
OAuth get Access Token $auth_session_handle	lidentifiant de session
OAuth get Access Token $access_token_url	lurl à utiliser
OAuth get Access Token $http_method	méthode http a utiliser par exemple get ou post
OAuth get Access Token $verifier_token	pour les fournisseurs de service qui supportent 1
OAuth array get Access Token	retourne un tableau contenant la réponse oauth analyse en cas de succès et false sinon
OAuth array get Access Token string $access_token_url string $auth_session_handle string $verifier_token string $http_method	r&eacute;cup&egrave;re un token d'acc&egrave;s
OAuth array get CAPath	un tableau dinformations sur le certificat de lautorité contenant entre autres les clés ca_path et ca_info
OAuth array get CAPath	r&eacute;cup&egrave;re l'information ca
OAuth array get Last Response Info	retourne un tableau contenant les informations de réponse de la dernière requête
OAuth array get Last Response Info	lit les informations http de la derni&egrave;re r&eacute;ponse
OAuth get Request Header $http_method	méthode http pour la demande
OAuth get Request Header $extra_parameters	paramètres additionnels chaîne de caractères ou tableau
OAuth get Request Header $url	url de la demande
OAuth string get Request Header	une chaîne de caractères contenant len-tête généré de la demande ou false si une erreur survient
OAuth string get Request Header string $http_method string $url mixed $extra_parameters	g&eacute;n&egrave;re une signature d'en-t&ecirc;te oauth
OAuth set Auth Type $OAUTH_AUTH_TYPE_FORM	ajoute les paramètres oauth au corps de la requête http post
OAuth set Auth Type $OAUTH_AUTH_TYPE_NONE	aucun
OAuth set Auth Type $OAUTH_AUTH_TYPE_AUTHORIZATION	passe les paramètres oauth dans lentête http authorization
OAuth set Auth Type $OAUTH_AUTH_TYPE_URI	ajoute les paramètres oauth à luri
OAuth set Auth Type $auth_type	auth_type peut être un des options suivantes elles sont classées par ordre décroissant de préférence tel que précisé dans oauth 1
OAuth mixed set Auth Type	retourne true si un paramètre est correctement défini false dans les autres cas
OAuth mixed set Auth Type int $auth_type	d&eacute;finit le type d'autorisation
OAuth set CAPath $ca_info	les informations du ca à définir
OAuth set CAPath $ca_path	le chemin du ca à définir
OAuth mixed set CAPath	retourne true en cas de succès ou false si ca_path ou ca_info sont considérés comme invalide
OAuth mixed set CAPath string $ca_path string $ca_info	d&eacute;finit le chemin et les informations du ca
OAuth set Nonce $nonce	la valeur de oauth_nonce
OAuth mixed set Nonce	retourne true en cas de succès ou false si le paramètre nonce est considéré comme invalide
OAuth mixed set Nonce string $nonce	configure le nonce oauth
OAuth set Request Engine $reqengine	le moteur de requêtes désiré
OAuth void set Request Engine int $reqengine	le but de setrequestengine
OAuth set RSACertificate $cert	le certificat rsa
OAuth mixed set RSACertificate	retourne true en cas de succès ou false si une erreur survient i
OAuth mixed set RSACertificate string $cert	d&eacute;finit le certificat rsa
OAuth set Timestamp $timestamp	le timestamp
OAuth mixed set Timestamp	retourne true ou false si timestamp est invalide
OAuth mixed set Timestamp string $timestamp	d&eacute;finit le timestamp
OAuth set Token $token	le token oauth
OAuth set Token $token_secret	le secret oauth
OAuth bool set Token	true
OAuth bool set Token string $token string $token_secret	configure le token et le secret
OAuth set Version $version	la version oauth et par défaut cest toujours 1
OAuth bool set Version	cette fonction retourne true en cas de succès ou false si une erreur survient
OAuth bool set Version string $version	configure la version oauth
OAuthProvider add Required Parameter $req_params	les paramètres requis
OAuthProvider bool add Required Parameter	cette fonction retourne true en cas de succès ou false si une erreur survient
OAuthProvider bool add Required Parameter string $req_params	ajoute des param&egrave;tres requis
OAuthProvider void callconsumer Handler	appelle la fonction de rappel consumernoncehandler
OAuthProvider void call Timestamp Nonce Handler	appelle la fonction de rappel timestampnoncehandler
OAuthProvider void calltoken Handler	appelle la fonction de rappel tokennoncehandler
OAuthProvider check OAuth Request $method	la méthode http
OAuthProvider check OAuth Request $uri	l uri optionnel ou un point final
OAuthProvider void check OAuth Request string $uri string $method	v&eacute;rifie une requ&ecirc;te oauth
OAuthProvider construct $params_array	le fait de définir des paramètres optionnels est limité au sapi cli
OAuthProvider array construct	un object oauthprovider
OAuthProvider array construct array $params_array	construit un nouvel objet oauthprovider
OAuthProvider consumer Handler $callback_function	le nom de la fonction de rappel de type callable
OAuthProvider void consumer Handler callable $callback_function	d&eacute;finit la fonction de rappel consumerhandler
OAuthProvider report Problem $oauthexception	lexception oauthexception
OAuthProvider string report Problem string $oauthexception bool $send_headers	rapporte un probl&egrave;me
OAuthProvider set Param $param_val	la valeur du paramètre ; optionnelle
OAuthProvider set Param $param_key	la clé du paramètre
OAuthProvider bool set Param	cette fonction retourne true en cas de succès ou false si une erreur survient
OAuthProvider bool set Param string $param_key mixed $param_val	d&eacute;finit un param&egrave;tre
OAuthProvider set Request Token Path $path	le chemin
OAuthProvider bool set Request Token Path	true
OAuthProvider bool set Request Token Path string $path	d&eacute;finit le chemin du jeton demand&eacute;
OAuthProvider timestamp Nonce Handler $callback_function	le nom de la fonction callback
OAuthProvider void timestamp Nonce Handler callable $callback_function	d&eacute;finit le gestionnaire de rappel timestampnoncehandler
OCI-Collection append $value	la valeur à ajouter à la collection
OCI-Collection bool append	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Collection bool append mixed $value	ajoute un &eacute;l&eacute;ment &agrave; une collection oracle
OCI-Collection assign $from	une instance oci-collection
OCI-Collection bool assign	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Collection bool assign OCI-Collection $from	assigne une valeur &agrave; une collection depuis une autre collection oracle
OCI-Collection bool free	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Collection bool free	lib&egrave;re les ressources associ&eacute;es avec un objet de collection
OCI-Collection int max	retourne le nombre maximal sous la forme dun entier ou false si une erreur survient
OCI-Collection int max	retourne le nombre maximal de valeurs d'une collection oracle
OCI-Collection int size	retourne le nombre déléments de la collection ou false si une erreur survient
OCI-Collection int size	retourne la taille d'une collection oracle
OCI-Lob append $lob_from	le lob copié
OCI-Lob bool append	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool append OCI-Lob $lob_from	ajoute des donn&eacute;es &agrave; un lob oracle
OCI-Lob bool eof	retourne true si le pointeur interne de lob a atteint la fin du lob et false sinon
OCI-Lob bool eof	test la fin du lob oracle
OCI-Lob int erase	retourne le nombre de caractères / octets effacés ou false si une erreur survient
OCI-Lob int erase int $offset int $length	&eacute;crase une partie d'un lob oracle
OCI-Lob export $start	indique la position à partir de laquelle lon doit commencer à exporter
OCI-Lob export $length	indique la taille des données à exporter
OCI-Lob export $filename	le chemin vers le fichier
OCI-Lob bool export	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool export string $filename int $start int $length	exporte un lob oracle dans un fichier
OCI-Lob flush $flag	par défaut les ressources ne sont pas libérées mais en utilisant loption flag avec la valeur oci_lob_buffer_free vous pouvez le faire explicitement
OCI-Lob bool flush	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool flush int $flag	&eacute;crit les lob oracle sur le disque
OCI-Lob bool free	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool free	d&eacute;truit un pointeur de lob oracle
OCI-Lob bool get Buffering	retourne false si la bufferisation des lob est désactivée et true si elle lest
OCI-Lob bool get Buffering	retourne l'&eacute;tat de bufferisation lob d'oracle
OCI-Lob string load	retourne le contenu de lobjet ou false si une erreur survient
OCI-Lob string load	retourne le contenu d'un lob
OCI-Lob read $length	la taille des données à lire en octets
OCI-Lob string read	retourne le contenu sous la forme dune chaîne de caractères ou false si une erreur survient
OCI-Lob string read int $length	lit une partie d'un lob oracle
OCI-Lob bool rewind	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool rewind	ram&egrave;ne le pointeur interne d'un lob oracle au d&eacute;but
OCI-Lob save $data	les données à sauvegarder
OCI-Lob save $offset	peut être utilisé pour indiquer la position depuis le début du lob
OCI-Lob bool save	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool save string $data int $offset	sauvegarde des donn&eacute;es dans un lob oracle
OCI-Lob seek $offset	indique la distance de déplacement
OCI-Lob seek $whence	peut être une constante parmi : oci_seek_set - déplace le pointeur à la position offset
OCI-Lob bool seek	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool seek int $offset int $whence	d&eacute;place le pointeur interne d'un lob oracle
OCI-Lob set Buffering $on_off	true pour lactiver et false pour le désactiver
OCI-Lob bool set Buffering	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool set Buffering bool $on_off	active / d&eacute;sactive la bufferisation des lob oracle
OCI-Lob int size	retourne la taille du lob ou false si une erreur survient
OCI-Lob int size	retourne la taille d'un lob oracle
OCI-Lob int tell	retourne la position courante du pointeur interne du lob ou bien false si une erreur survient
OCI-Lob int tell	retourne la position courante du pointeur de lob
OCI-Lob truncate $length	si length est fourni oci-lob->truncate() tronque le lob à length octets
OCI-Lob bool truncate	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool truncate int $length	tronque un lob oracle
OCI-Lob write $data	les données à écrire dans le lob
OCI-Lob write $length	si ce paramètre est fourni lécriture sarrêtera après length octets ou à la fin de la variable data
OCI-Lob int write	retourne le nombre doctets écrits ou false si une erreur survient
OCI-Lob int write string $data int $length	&eacute;crit des donn&eacute;es dans un lob oracle
OCI-Lob write Temporary $data	les données à écrire
OCI-Lob write Temporary $lob_type	peut prendre lune des valeurs suivantes : oci_temp_blob sert à créer un blob temporaire
OCI-Lob bool write Temporary	cette fonction retourne true en cas de succès ou false si une erreur survient
OCI-Lob bool write Temporary string $data int $lob_type	&eacute;crit un lob oracle temporaire
ParentIterator construct $iterator	litérateur sur lequel nous devons construire le nouvel objet
ParentIterator RecursiveIterator construct	lobjet parentiterator
ParentIterator RecursiveIterator construct RecursiveIterator $iterator	construit un nouvel objet parentiterator
ParentIterator ParentIterator get Children	un objet
ParentIterator ParentIterator get Children	retourne le fils de l'it&eacute;rateur interne contenu dans parentiterator
ParentIterator bool has Children	cette fonction retourne true en cas de succès ou false si une erreur survient
ParentIterator bool has Children	v&eacute;rifie si l'&eacute;l&eacute;ment courant de l'it&eacute;rateur interne a un fils
ParentIterator void next	d&eacute;place l'it&eacute;rateur &agrave; la position suivante
ParentIterator void rewind	replace l'it&eacute;rateur au d&eacute;but
PDO bool begin Transaction	cette fonction retourne true en cas de succès ou false si une erreur survient
PDO bool begin Transaction	d&eacute;marre une transaction
PDO bool commit	cette fonction retourne true en cas de succès ou false si une erreur survient
PDO bool commit	valide une transaction
PDO cubrid schema $table_name	la table dont vous souhaitez récupérer le schéma
PDO cubrid schema $schema_type	le type du schéma que vous souhaitez récupérer
PDO cubrid schema $col_name	la colonne dont vous souhaitez récupérer le schéma
PDO array cubrid schema	un tableau contenant les informations relatives au schéma lorsque le processus sest exécuté avec succès
PDO array cubrid schema int $schema_type string $table_name string $col_name	r&eacute;cup&egrave;re le sch&eacute;ma d'informations demand&eacute;
PDO exec $statement	la requête à préparer et à exécuter
PDO int exec	pdo::exec() retourne le nombre de lignes qui ont été modifiées ou effacées pour la requête sql qui vous exécutez
PDO int exec string $statement	ex&eacute;cute une requ&ecirc;te sql et retourne le nombre de lignes affect&eacute;es
PDO get Attribute $attribute	une des constantes pdo::attr_*
PDO mixed get Attribute	un appel réussi retourne la valeur de lattribut pdo demandé
PDO mixed get Attribute int $attribute	r&eacute;cup&egrave;re un attribut d'une connexion &agrave; une base de donn&eacute;es
PDO bool in Transaction	retourne true si une transaction est actuellement active false sinon
PDO bool in Transaction	v&eacute;rifie si nous sommes dans une transaction
PDO int pgsql Get Pid	le pid du serveur
PDO int pgsql Get Pid	r&eacute;cup&egrave;re le pid du serveur
PDO string pgsql LOBCreate	retourne le oid du nouvel objet large créé en cas de réussite ou false en cas déchec
PDO string pgsql LOBCreate	cr&eacute;e un nouvel objet large
PDO prepare $driver_options	ce tableau contient une ou plusieurs paires clé= > valeur pour définir les valeurs des attributs pour lobjet pdostatement que cette méthode retourne
PDO prepare $statement	doit être une template de requête sql valide pour le serveur de base de données cible
PDO PDOStatement prepare	si le serveur de base de données prépare avec succès cette requête pdo::prepare() retourne un objet pdostatement
PDO PDOStatement prepare string $statement array $driver_options	pr&eacute;pare une requ&ecirc;te &agrave; l'ex&eacute;cution et retourne un objet
PDO bool roll Back	cette fonction retourne true en cas de succès ou false si une erreur survient
PDO bool roll Back	annule une transaction
PDO bool set Attribute	cette fonction retourne true en cas de succès ou false si une erreur survient
PDO bool set Attribute int $attribute mixed $value	configure un attribut pdo
PDOStatement bind Column $param	nom de la variable php à laquelle la colonne doit être liée
PDOStatement bind Column $maxlen	une astuce pour la pré-allocation
PDOStatement bind Column $type	type du paramètre spécifié par les constantes pdo::param_* constants
PDOStatement bind Column $column	numéro de la colonne en commençant à 1 ou nom de la colonne dans le jeu de résultats
PDOStatement bind Column $driverdata	paramètres optionnels pour la bibliothèque
PDOStatement bool bind Column	cette fonction retourne true en cas de succès ou false si une erreur survient
PDOStatement bool bind Column mixed $column mixed $param int $type int $maxlen mixed $driverdata	lie une colonne &agrave; une variable php
PDOStatement bool close Cursor	cette fonction retourne true en cas de succès ou false si une erreur survient
PDOStatement bool close Cursor	ferme le curseur permettant &agrave; la requ&ecirc;te d'&ecirc;tre de nouveau ex&eacute;cut&eacute;e
PDOStatement int column Count	retourne le nombre de colonnes dans le jeu de résultats représenté par lobjet pdostatement
PDOStatement int column Count	retourne le nombre de colonnes dans le jeu de r&eacute;sultats
PDOStatement void debug Dump Params	d&eacute;taille une commande pr&eacute;par&eacute;e sql
PDOStatement execute $input_parameters	un tableau de valeurs avec autant déléments quil y a de paramètres à associer dans la requête sql qui sera exécutée
PDOStatement bool execute	cette fonction retourne true en cas de succès ou false si une erreur survient
PDOStatement bool execute array $input_parameters	ex&eacute;cute une requ&ecirc;te pr&eacute;par&eacute;e
PDOStatement fetch Column $column_number	numéro de la colonne que vous voulez récupérer depuis la ligne commençant à 0
PDOStatement mixed fetch Column	pdostatement::fetchcolumn() retourne une colonne depuis la ligne suivante dun jeu de résultats
PDOStatement mixed fetch Column int $column_number	retourne une colonne depuis la ligne suivante d'un jeu de r&eacute;sultats
PDOStatement fetch Object $ctor_args	éléments de ce tableau sont passés au constructeur
PDOStatement fetch Object $class_name	nom de la classe créée
PDOStatement mixed fetch Object	retourne une instance de la classe demandée avec les propriétés de noms qui correspondent aux noms des colonnes ou false si une erreur survient
PDOStatement mixed fetch Object string $class_name array $ctor_args	r&eacute;cup&egrave;re la prochaine ligne et la retourne en tant qu'objet
PDOStatement mixed get Attribute	retourne la valeur de lattribut
PDOStatement mixed get Attribute int $attribute	r&eacute;cup&egrave;re un attribut de requ&ecirc;te
PDOStatement bool set Attribute	cette fonction retourne true en cas de succès ou false si une erreur survient
PDOStatement bool set Attribute int $attribute mixed $value	d&eacute;finit un attribut de requ&ecirc;te
Phar string api Version	la version de lapi par exemple 1
Phar string api Version	retourne la version de l'api
Phar bool can Write	true si laccès en écriture est possible false sinon
Phar bool can Write	d&eacute;termine si l'extension phar supporte la cr&eacute;ation et l'&eacute;criture des phars
Phar convert To Data $format	ce doit être lun des formats phar::tar ou phar::zip
Phar convert To Data $compression	ce doit être phar::none pour aucune compression globale phar::gz la une compression basée sur zlib et phar::bz2 pour une compression basée sur bzip2
Phar convert To Data $extension	ce paramètre est utilisée pour écraser lextension par défaut dune archive convertie
Phar PharData convert To Data	la méthode retourne un objet phardata en cas de succès et émet une exception en cas déchec
Phar PharData convert To Data int $format int $compression string $extension	convertit une archive phar en un fichier non-ex&eacute;cutable
Phar mixed get Metadata	nimporte quelle variable php pouvant être sérialisée et qui est stockée comme méta-donnée de larchive phar ou null si aucune méta-donnée nest stockée
Phar mixed get Metadata	retourne les m&eacute;ta-donn&eacute;es de l'archive phar
Phar bool get Modified	true si le phar a été modifié depuis son ouverture false sinon
Phar bool get Modified	indique si le fichier phar a &eacute;t&eacute; modifi&eacute;
Phar array get Signature	un tableau avec la signature de larchive ouverte avec le hash en guise de clé et md5 sha-1 sha-256 ou sha-512 comme hash_type
Phar array get Signature	retourne la signature md5 / sha1 / sha256 / sha512 d'une archive phar
Phar bool has Metadata	retourne true si des méta-données sont présentes false sinon
Phar bool has Metadata	d&eacute;termine si le phar a ou non des m&eacute;ta-donn&eacute;es
Phar void intercept File Funcs	informe phar qu'il doit intercepter les fonctions de fichiers
Phar bool is Buffering	retourne true si les opérations décriture sont mises en tampons false sinon
Phar bool is Buffering	d&eacute;termine si les op&eacute;rations d'&eacute;criture du phar sont mises en tampons ou sont directement inscrites sur le disque
Phar is Valid Phar Filename $executable	ce paramètre détermine si le nom de fichier doit être traité comme celui dune archive phar exécutable ou comme une archive de données non exécutable
Phar is Valid Phar Filename $filename	le nom ou le chemin complet vers une archive phar non encore créée
Phar bool is Valid Phar Filename	retourne true si le nom de fichier est valide false sinon
Phar bool is Valid Phar Filename string $filename bool $executable	d&eacute;termine si le nom de fichier sp&eacute;cifi&eacute; est un nom de fichier valide pour une archive phar
Phar bool is Writable	retourne true si larchive phar peut être modifiée
Phar bool is Writable	retourne true si l'archive phar peut &ecirc;tre modifi&eacute;e
Phar map Phar $alias	lalias qui peut être utilisé dans lurl phar: / / pour se référer à larchive plutôt que dutiliser son chemin complet
Phar map Phar $dataoffset	variable inutilisée présente par souci de compatibilité avec la bibliothèque php_archive de pear
Phar bool map Phar	cette fonction retourne true en cas de succès ou false si une erreur survient
Phar bool map Phar string $alias int $dataoffset	lit le phar ex&eacute;cut&eacute; et charge son manifeste
Phar mount $externalpath	un chemin ou une url vers un fichier ou un répertoire externe à monter au sein de larchive
Phar mount $pharpath	le chemin interne au sein de larchive phar à utiliser en tant que point de montage
Phar void mount string $pharpath string $externalpath	monte un chemin ou un fichier externe &agrave; un emplacement virtuel au sein de l'archive phar
Phar mung Server $munglist	un tableau contenant nimporte laquelle des variables request_uri php_self script_name et script_filename en tant quindices de chaînes de caractères
Phar void mung Server array $munglist	d&eacute;finit une liste de maximum 4 variables $_server qui doivent &ecirc;tre modifi&eacute;es lors de l'ex&eacute;cution
Phar offset Exists $offset	le nom de fichier en chemin relatif à chercher dans le phar
Phar bool offset Exists	retourne true si le fichier existe dans le phar false sinon
Phar bool offset Exists string $offset	d&eacute;termine si un fichier existe dans le phar
Phar offset Get $offset	le nom de fichier en chemin relatif à chercher dans le phar
Phar int offset Get	un objet pharfileinfo est retourné et peut être utilisé pour intégrer le contenu dun fichier ou pour récupérer des informations sur le fichier courant
Phar int offset Get string $offset	obtient un objet pharfileinfo &agrave; partir d'un fichier
Phar running $retphar	si false le chemin complet sur le disque vers le phar est retourné
Phar string running	retourne le chemin de fichier si valide sinon une chaîne vide
Phar string running bool $retphar	retourne le chemin complet sur le disque ou l'url phar compl&egrave;te de l'archive phar couramment ex&eacute;cut&eacute;e
Phar void start Buffering	d&eacute;marre la mise en tampon de &eacute;critures phar ne modifie pas l'objet phar sur le disque
Phar void stop Buffering	arr&ecirc;te la mise en tampon des &eacute;critures phar et provoque l'&eacute;criture que le disque
Phar unlink Archive $archive	le chemin sur le disque vers larchive phar
Phar bool unlink Archive	cette fonction retourne true en cas de succès ou false si une erreur survient
Phar bool unlink Archive string $archive	efface compl&egrave;tement une archive phar du disque et de la m&eacute;moire
Phar web Phar $alias	lalias qui peut être utilisé dans lurl phar: / / pour se référer à larchive plutôt que son chemin complet
Phar web Phar $rewrites	la fonction de ré-écriture est passée prend comme seul paramètre une chaîne et doit retourner une chaîne de caractères ou false
Phar web Phar $f404	lemplacement du script à exécuter quand un fichier nest pas trouvé
Phar web Phar $index	lemplacement au sein de larchive de lindex de répertoire
Phar web Phar $mimetypes	un tableau faisant correspondre des extensions de fichier supplémentaires à des types mime
Phar void web Phar string $alias string $index string $f404 array $mimetypes callable $rewrites	mapphar pour les phars orient&eacute;s web
PharData add Empty Dir $dirname	le nom du répertoire vide à créer dans larchive phar
PharData bool add Empty Dir	aucune valeur de retour une exception est levée en cas déchec
PharData bool add Empty Dir string $dirname	ajoute un r&eacute;pertoire vide &agrave; l'archive tar / zip
Phar add File $file	chemin absolu ou relatif vers un fichier du disque à ajouter à larchive phar
Phar add File $localname	chemin où le fichier sera stocké dans larchive
Phar void add File string $file string $localname	ajoute un fichier du syst&egrave;me de fichiers &agrave; l'archive phar
PharData add From String $contents	le contenu du fichier à stocker
PharData add From String $localname	chemin vers lequel le fichier sera stocké au sein de larchive
PharData bool add From String	aucune valeur de retour une exception est levée en cas déchec
PharData bool add From String string $localname string $contents	ajoute un fichier du syst&egrave;me de fichiers &agrave; l'archive tar / zip
PharData build From Iterator $base_directory	pour les itérateurs qui retournent des objets splfileinfo la partie du chemin complet vers le fichier à enlever lors de lajout à larchive tar / zip
PharData build From Iterator $iter	nimporte quel itérateur qui fait correspondre de façon associative un fichier tar / zip ou qui retourne des objets splfileinfo
PharData array build From Iterator	phardata::buildfromiterator() retourne un tableau associatif faisant correspondre un chemin de fichier interne avec un chemin complet vers le fichier sur le système de fichiers
PharData array build From Iterator Iterator $iter string $base_directory	construit une archive tar ou zip &agrave; partir d'un it&eacute;rateur
PharData compress $extension	par défaut lextension est
PharData compress $compression	la compression doit être phar::gz ou phar::bz2 pour appliquer une compression ou phar::none pour lenlever
PharData object compress	un objet phardata est retourné
PharData object compress int $compression string $extension	compresse l'archive tar / zip compl&egrave;te en utilisant la compression gzip ou bzip2
PharData compress Files $compression	la compression doit être phar::gz ou phar::bz2 pour appliquer une compression ou phar::none pour lenlever
PharData bool compress Files	cette fonction retourne true en cas de succès ou false si une erreur survient
PharData bool compress Files int $compression	compresse tous les fichiers de l'archive tar / zip courante
PharData convert To Data $format	le format doit être phar::tar ou phar::zip
PharData convert To Data $extension	ce paramètre est utilisé pour écrase lextension de fichier par défaut de larchive convertie
PharData convert To Data $compression	la compression doit être phar::none pour éviter la compression de larchive complète phar::gz pour la compression basée sur zlib et phar::bz2 pour la compression basée sur bzip
PharData PharData convert To Data	cette méthode retourne un objet phardata en cas de succès et soulève une exception en cas déchec
PharData PharData convert To Data int $format int $compression string $extension	convertit une archive phar en une archive tar ou zip non-ex&eacute;cutable
PharData bool copy	retourne true en cas de succès mais il est plus sûr dencadrer lappel à la méthode dans un bloc try / catch est de considérer son succès si aucune exception nest levée
PharData bool copy string $oldfile string $newfile	copie un fichier un fichier interne &agrave; l'archive phar vers un autre fichier au sein de la m&ecirc;me archive
PharData decompress $extension	pour décompresser lextension par défaut est
PharData object decompress	un objet phardata est retourné
PharData object decompress string $extension	d&eacute;compresse l'archive phar enti&egrave;re
PharData delete $entry	chemin du fichier à effacer au sein de larchive
PharData bool delete	retourne true en cas de succès mais il est préférable de vérifier les exception soulevées et de considérer le succès si aucune ne lest
PharData bool delete string $entry	efface un fichier au sein de l'archive tar / zip
PharData extract To $overwrite	le passer à true pour activer lécrasement des fichiers déjà existants
PharData extract To $files	le nom dun fichier ou dun répertoire à extraire ou un tableau de fichiers / répertoires à extraire
PharData extract To $pathto	chemin où les fichiers seront extraits
PharData bool extract To	retourne true en cas de succès mais il est préférable de vérifier les exception soulevées et de considérer le succès si aucune ne lest
PharData bool extract To string $pathto string|array $files bool $overwrite	extrait le contenu d'une archive tar / zip vers un r&eacute;pertoire
PharData bool is Writable	retourne true si larchive tar / zip peut être modifiée
PharData bool is Writable	v&eacute;rifie si l'archive tar / zip peut &ecirc;tre modifi&eacute;e
PharData offset Unset $offset	le chemin relatif du fichier à modifier au sein de larchive tar ou zip
PharData bool offset Unset	cette fonction retourne true en cas de succès ou false si une erreur survient
PharData bool offset Unset string $offset	efface un fichier d'une archive tar / zip
PharData set Default Stub $index	chemin relatif au sein de larchive phar à exécuter en cas daccès à partir de la ligne de commande
PharData set Default Stub $webindex	chemin relatif au sein de larchive phar à exécuter en cas daccès à partir dun navigateur
PharData bool set Default Stub	cette fonction retourne true en cas de succès ou false si une erreur survient
PharData bool set Default Stub string $index string $webindex	fonction inutile phar::setdefaultstub n'est pas valide pour phardata
PharFileInfo chmod $permissions	les permissions voir chmod()
PharFileInfo void chmod int $permissions	fixe les bits de permission sp&eacute;cifiques aux fichiers
PharFileInfo bool compress	cette fonction retourne true en cas de succès ou false si une erreur survient
PharFileInfo bool compress int $compression	compresse l'entr&eacute;e phar courante avec une des compressions zlib ou bzip2
PharFileInfo construct $entry	lurl complète pour récupérer un fichier
PharFileInfo string construct string $entry	construit un objet d'entr&eacute;e phar
PharFileInfo bool decompress	cette fonction retourne true en cas de succès ou false si une erreur survient
PharFileInfo bool decompress	d&eacute;compresse l'entr&eacute;e phar courante au sein du phar
PharFileInfo bool del Metadata	retourne true en cas de succès false si lentrée ne possédait pas de métadonnées
PharFileInfo bool del Metadata	efface les m&eacute;tadonn&eacute;es de l'entr&eacute;e
PharFileInfo int get Compressed Size	la taille en octets du fichier au sein de larchive phar sur le disque
PharFileInfo int get Compressed Size	retourne la taille actuelle avec compression du fichier au sein de l'archive phar
PharFileInfo mixed get Metadata	nimporte quelle variable php qui peut être sérialisée et qui est stockée comme méta-données pour le fichier ou null si aucune méta-donnée nest stockée
PharFileInfo mixed get Metadata	retourne les m&eacute;ta-donn&eacute;es sp&eacute;cifiques attach&eacute;es &agrave; un fichier
PharFileInfo is Compressed $compression_type	une des compressions phar::gz ou phar::bz2 aucune compression par défaut
PharFileInfo bool is Compressed	true si le fichier au sein de larchive est compressé false sinon
PharFileInfo bool is Compressed int $compression_type	retourne si l'entr&eacute;e est compress&eacute;e
PharFileInfo bool is CRCChecked	true si le fichier a un crc vérifié false sinon
PharFileInfo bool is CRCChecked	d&eacute;termine si le fichier a un crc v&eacute;rifi&eacute;
PharFileInfo set Metadata $metadata	toute variable php contenant des informations à stocker à part du fichier
PharFileInfo void set Metadata mixed $metadata	fixe les m&eacute;tadonn&eacute;es sp&eacute;cifiques &agrave; un fichier
php_user_filter filter $in	le paramètre in est une ressource pointant vers un bucket brigade qui contient un ou plusieurs objets bucket contenant les données à filtrer
php_user_filter filter $closing	si le flux est dans un processus de fermeture et donc cest la dernière passe via la chaîne de filtrage le paramètre closing sera défini à true
php_user_filter filter $out	le paramètre out est une ressource pointant vers un second bucket brigade dans lequel vos bucket modifiés doivent être placés
php_user_filter filter $consumed	le paramètre consumed qui doit toujours être déclaré par référence doit être incrémenté par la longueur des données filtrés par votre filtre
php_user_filter int filter	la méthode filter() doit retourner au final une de ces trois valeurs
php_user_filter int filter resource $in resource $out int $consumed bool $closing	appel&eacute; lors de l'application d'un filtre
php_user_filter void on Close	appel&eacute; lors de la fermeture du filtre
php_user_filter bool on Create	votre implémentation de cette méthode doit retourner false si une erreur survient ou true en cas de succès
php_user_filter bool on Create	appel&eacute; lors de la cr&eacute;ation du filtre
Pool collect $collector	un collecteur
Pool void collect Callable $collector	collecte les r&eacute;f&eacute;rences des t&acirc;ches achev&eacute;es
Pool void shutdown	arr&ecirc;te tous les workers
QuickHashIntHash construct $size	le nombre de listes à configurer
QuickHashIntHash construct $options	les options disponibles sont: quickhashinthash::check_for_dupes qui vérifie quaucun doublon nest ajouté dans le hash; quickhashinthash::do_not_use_zend_alloc qui désactive le gestionnaire de mémoire interne de php et une des options quickhashinthash::hasher_no_hash quickhashinthash::hasher_jenkins1 ou quickhashinthash::hasher_jenkins2
QuickHashIntHash int construct	retourne un nouvel objet quickhashinthash
QuickHashIntHash int construct int $size int $options	cr&eacute;er un nouvel objet quickhashinthash
QuickHashIntHash delete $key	la clé de lentrée à supprimer
QuickHashIntHash bool delete	true si lentrée a été supprimée false sinon
QuickHashIntHash bool delete int $key	supprime une entr&eacute;e du hash
QuickHashIntHash exists $key	la clé de lentrée à vérifier
QuickHashIntHash bool exists	retourne true si lentrée est trouvée false sinon
QuickHashIntHash bool exists int $key	v&eacute;rifie qu'une cl&eacute; existe dans le hash
QuickHashIntHash get $key	la clé pour lentrée à récupérer
QuickHashIntHash int get	la valeur si la clé existe null sinon
QuickHashIntHash int get int $key	r&eacute;cup&egrave;re la valeur correspondant &agrave; une cl&eacute; dans le hash
QuickHashIntHash int get Size	le nombre déléments dans le hash
QuickHashIntHash int get Size	retourne le nombre d'&eacute;l&eacute;ments dans le hash
QuickHashIntHash load From File $filename	le fichier depuis lequel lire le hash
QuickHashIntHash load From File $options	les mêmes options que le constructeur de la classe accepte sauf loption de taille qui sera ignorée
QuickHashIntHash QuickHashIntHash load From File	retourne un nouveau quickhashinthash
QuickHashIntHash QuickHashIntHash load From File string $filename int $options	cr&eacute;er un hash depuis un fichier
QuickHashIntHash load From String $options	les mêmes options que le constructeur de la classe accepte sauf loption de taille qui sera ignorée
QuickHashIntHash load From String $contents	la chaine sérialisée du hash
QuickHashIntHash QuickHashIntHash load From String	retourne un nouveau quickhashinthash
QuickHashIntHash QuickHashIntHash load From String string $contents int $options	cr&eacute;er un hash depuis une chaine
QuickHashIntHash save To File $filename	le fichier dans lequel stocker le hash
QuickHashIntHash void save To File string $filename	stocke un hash sur le disque
QuickHashIntHash string save To String	retourne une version sérialisée du hash
QuickHashIntHash string save To String	retourne une version s&eacute;rialis&eacute;e du hash
QuickHashIntHash set $key	la clé de lentrée à mettre à jour
QuickHashIntHash set $value	la nouvelle valeur
QuickHashIntHash bool set	2 si lentrée est trouvée et mise à jour 1 si lentrée a été ajoutée ou 0 sil y a eu une erreur
QuickHashIntHash bool set int $key int $value	met &agrave; jour une entr&eacute;e dans le hash ou l'ajoute si elle n'existait pas
QuickHashIntHash update $key	la clé de lentrée à mettre à jour
QuickHashIntHash update $value	la nouvelle valeur
QuickHashIntHash bool update	true si lentrée est trouvée et mise à jour et false si lentrée na pas été trouvée
QuickHashIntHash bool update int $key int $value	met &agrave; jour une entr&eacute;e dans le hash
QuickHashIntSet construct $size	le nombre de listes à configurer
QuickHashIntSet construct $options	les options disponibles sont: quickhashintset::check_for_dupes qui vérifie quaucun doublon nest ajouté dans le hash; quickhashintset::do_not_use_zend_alloc qui désactive le gestionnaire de mémoire interne de php et une des options quickhashintset::hasher_no_hash quickhashintset::hasher_jenkins1 ou quickhashintset::hasher_jenkins2
QuickHashIntSet int construct	retourne un nouvel objet quickhashintset
QuickHashIntSet int construct int $size int $options	cr&eacute;er un nouvel objet quickhashintset
QuickHashIntSet delete $key	la clé de lentrée à supprimer
QuickHashIntSet bool delete	true si lentrée a été supprimée false sinon
QuickHashIntSet bool delete int $key	supprime une entr&eacute;e de l'ensemble
QuickHashIntSet exists $key	la clé de lentrée à vérifier
QuickHashIntSet bool exists	retourne true si lentrée est trouvée false sinon
QuickHashIntSet bool exists int $key	v&eacute;rifie qu'une cl&eacute; existe dans l'ensemble
QuickHashIntSet int get Size	le nombre déléments dans lensemble
QuickHashIntSet int get Size	retourne le nombre d'&eacute;l&eacute;ments dans l'ensemble
QuickHashIntSet load From File $filename	le fichier depuis lequel lire lensemble
QuickHashIntSet load From File $options	les mêmes options que le constructeur de la classe accepte sauf loption de taille qui sera ignorée
QuickHashIntSet load From File $size	le nombre de paquets à configurer
QuickHashIntSet QuickHashIntSet load From File	retourne un nouveau quickhashintset
QuickHashIntSet QuickHashIntSet load From File string $filename int $size int $options	cr&eacute;er un ensemble depuis un fichier
QuickHashIntSet load From String $contents	la chaine sérialisée de lensemble
QuickHashIntSet load From String $options	les mêmes options que le constructeur de la classe accepte sauf loption de taille qui sera ignorée
QuickHashIntSet load From String $size	le nombre de paquets à configurer
QuickHashIntSet QuickHashIntSet load From String	retourne un nouveau quickhashintset
QuickHashIntSet QuickHashIntSet load From String string $contents int $size int $options	cr&eacute;er un nouvel ensemble depuis une chaine
QuickHashIntSet string save To String	retourne une version sérialisée de lensemble
QuickHashIntSet string save To String	retourne une version s&eacute;rialis&eacute;e de l'ensemble
QuickHashIntStringHash add $key	la clé de lentrée à ajouter
QuickHashIntStringHash add $value	la valeur de lentrée à ajouter
QuickHashIntStringHash bool add	true lorsque lentrée a été ajoutée et false si lentrée na pas été ajoutée
QuickHashIntStringHash bool add int $key string $value	cette m&eacute;thode ajoute une nouvelle entr&eacute;e &agrave; la table de hachage
QuickHashIntStringHash construct $size	la quantité de listes à configurer
QuickHashIntStringHash int construct	retourne un nouvel objet quickhashintstringhash
QuickHashIntStringHash int construct int $size int $options	cr&eacute;e un nouvel objet quickhashintstringhash
QuickHashIntStringHash delete $key	la clé de lentrée à supprimer
QuickHashIntStringHash bool delete	true lorsque lentrée a été supprimée avec succès et false si lentrée na pas été supprimée
QuickHashIntStringHash bool delete int $key	supprime une entr&eacute;e de la table de hachage
QuickHashIntStringHash exists $key	la clé de lentrée dont on doit vérifier lexistance
QuickHashIntStringHash bool exists	retourne true lorsque lentrée a été trouvée ou false si lentrée na pas été trouvée
QuickHashIntStringHash bool exists int $key	v&eacute;rifie si une cl&eacute; existe dans la table de hachage
QuickHashIntStringHash get $key	la clé de lentrée à récupérer
QuickHashIntStringHash mixed get	la valeur si la clé existe ou null si la clé ne fait pas partie de la table de hachage
QuickHashIntStringHash mixed get int $key	r&eacute;cup&egrave;re une valeur depuis la table de hachage par sa cl&eacute;
QuickHashIntStringHash load From File $options	les mêmes options que le constructeur de la classe ; sauf loption taille qui sera ignorée
QuickHashIntStringHash load From File $filename	le nom du fichier depuis lequel la table de hachage sera lue
QuickHashIntStringHash load From File $size	la quantité de listes à créer
QuickHashIntStringHash QuickHashIntStringHash load From File	returns a new quickhashintstringhash
QuickHashIntStringHash QuickHashIntStringHash load From File string $filename int $size int $options	cr&eacute;e une table de hachage depuis un fichier
QuickHashIntStringHash load From String $options	les mêmes options que pour le constructeur de la classe ; sauf loption taille est ignorée
QuickHashIntStringHash load From String $contents	la chaîne contenant un format linéarisé de la table de hachage
QuickHashIntStringHash load From String $size	la quantité de liste à configurer
QuickHashIntStringHash QuickHashIntStringHash load From String	retourne un nouvel objet quickhashintstringhash
QuickHashIntStringHash QuickHashIntStringHash load From String string $contents int $size int $options	cr&eacute;e une table de hachage depuis une cha&icirc;ne
QuickHashIntStringHash set $value	la valeur de lentrée à ajouter ou mettre à jour
QuickHashIntStringHash set $key	la clé de lentrée à ajouter ou mettre à jour
QuickHashIntStringHash int set	retournera 2 si lentrée a été trouvée et mise à jour 1 si lentrée a été ajoutée ou 0 si une erreur survient
QuickHashIntStringHash int set int $key string $value	met &agrave; jour une entr&eacute;e depuis la table de hachage avec une nouvelle valeur ou l'ajoute si l'entr&eacute;e n'existe pas
QuickHashIntStringHash update $key	la clé de lentrée à mettre à jour
QuickHashIntStringHash update $value	la nouvelle valeur de lentrée
QuickHashIntStringHash bool update	true lorsque lentrée a été trouvée et mise à jour et false si lentrée ne fait pas partie de la table de hachage
QuickHashIntStringHash bool update int $key string $value	met &agrave; jour une entr&eacute;e de la table de hachage avec une nouvelle valeur
QuickHashStringIntHash construct $options	les options que vous pouvez passer sont : quickhashstringinthash::check_for_dupes qui sassure quaucun doublon ne sera ajouté à la table de hachage et quickhashstringinthash::do_not_use_zend_alloc pour ne pas utiliser le gestionnaire de mémoire interne à php
QuickHashStringIntHash construct $size	la quantité de listes à configurer
QuickHashStringIntHash int construct	retourne un nouvel objet quickhashstringinthash
QuickHashStringIntHash int construct int $size int $options	cr&eacute;e un nouvel objet quickhashstringinthash
QuickHashStringIntHash delete $key	la clé de lentrée à supprimer
QuickHashStringIntHash bool delete	true lorsque lentrée a été supprimée et false si elle ne la pas été
QuickHashStringIntHash bool delete string $key	supprime une entr&eacute;e de la table de hachage
QuickHashStringIntHash exists $key	la clé de lentrée dont on souhaite vérifier lexistance dans la table de hachage
QuickHashStringIntHash bool exists	retourne true lorsque lentrée a été trouvée ou false sinon
QuickHashStringIntHash bool exists string $key	v&eacute;rifie si une cl&eacute; fait partie de la table de hachage
QuickHashStringIntHash get $key	la clé de lentrée à récupérer
QuickHashStringIntHash mixed get	la valeur si la clé existe ou null si la clé ne fait pas partie de la table de hachage
QuickHashStringIntHash mixed get string $key	r&eacute;cup&egrave;re une valeur depuis la table de hachage par sa cl&eacute;
QuickHashStringIntHash load From File $options	les mêmes options que le constructeur de la classe ; sauf que loption sur la taille est ignoré
QuickHashStringIntHash load From File $filename	le nom du fichier à utiliser pour construire la table de hachage
QuickHashStringIntHash load From File $size	la quantité de listes à configurer
QuickHashStringIntHash QuickHashStringIntHash load From File	retourne un nouvel objet quickhashstringinthash
QuickHashStringIntHash QuickHashStringIntHash load From File string $filename int $size int $options	cr&eacute;e une table de hachage depuis un fichier
QuickHashStringIntHash load From String $options	les mêmes options que le constructeur de la classe ; sauf que loption relative à la taille sera ignorée
QuickHashStringIntHash load From String $contents	la chaîne contenant un format linéarisé de la table de hachage
QuickHashStringIntHash load From String $size	la quantité de listes à configurer
QuickHashStringIntHash QuickHashStringIntHash load From String	retourne un nouvel objet quickhashstringinthash
QuickHashStringIntHash QuickHashStringIntHash load From String string $contents int $size int $options	cr&eacute;e une table de hachage depuis une cha&icirc;ne
QuickHashStringIntHash string save To String	cette méthode retourne un format linéarisé dune table de hachage existante dans un format lisible par la fonction loadfromstring()
QuickHashStringIntHash string save To String	retourne une version lin&eacute;aris&eacute;e de la table de hachage
QuickHashStringIntHash set $value	la valeur de lentrée à ajouter ou mettre à jour
QuickHashStringIntHash set $key	la clé de lentrée à ajouter ou mettre à jour
QuickHashStringIntHash int set	2 si lentrée a été trouvée et mise à jour 1 si lentrée a été nouvellement ajoutée ou 0 si une erreur survient
QuickHashStringIntHash int set string $key int $value	met &agrave; jour une entr&eacute;e de la table de hachage avec une nouvelle valeur ou l'ajout si elle n'existe pas
RarArchive string to String	une représentation textuelle de lobjet rararchive
RarArchive string to String	r&eacute;cup&egrave;re une repr&eacute;sentation sous forme de texte
RarEntry extract $extended_data	si vaut true les informations étendues comme ntfs acls et les informations sur le propriétaire unix seront définies dans les fichiers extraits si ils sont bien définies dans larchives
RarEntry extract $password	le mot de passe à utiliser pour décrypter cette entrée
RarEntry extract $dir	chemin vers le dossier où le fichier extrait devra être créé
RarEntry extract $filepath	chemin relatif ou absolut contenant le dossier et le nom du fichier à extraire
RarEntry bool extract	cette fonction retourne true en cas de succès ou false si une erreur survient
RarEntry bool extract string $dir string $filepath string $password bool $extended_data	extrait une entr&eacute;e d'une archive
RarEntry int get Attr	retourne les attributs ou false si une erreur survient
RarEntry int get Attr	r&eacute;cup&egrave;re les attributs d'une entr&eacute;e
RarEntry string get File Time	retourne la date de dernière modification de lentrée sous la forme dune chaîne de caractères au format yyyy-mm-dd hh:ii:ss ou false si une erreur survient
RarEntry string get File Time	r&eacute;cup&egrave;re la date de derni&egrave;re modification d'une entr&eacute;e
RarEntry int get Host Os	retourne le code de los hôte dune entrée ou false si une erreur survient
RarEntry int get Host Os	r&eacute;cup&egrave;re le code de l'h&ocirc;te pour une entr&eacute;e
RarEntry int get Method	retourne le numéro de la méthode ou false si une erreur survient
RarEntry int get Method	r&eacute;cup&egrave;re la m&eacute;thode utilis&eacute;e pour l'ajout d'une entr&eacute;e
RarEntry int get Packed Size	retourne la taille compressée ou false si une erreur survient
RarEntry int get Packed Size	r&eacute;cup&egrave;re la taille compress&eacute;e d'une entr&eacute;e
RarEntry int get Unpacked Size	retourne la taille décompressée ou false si une erreur survient
RarEntry int get Unpacked Size	r&eacute;cup&egrave;re la taille d&eacute;compress&eacute;e d'une entr&eacute;e
RarEntry int get Version	retourne la version ou false si une erreur survient
RarEntry int get Version	r&eacute;cup&egrave;re la version minimale du logiciel rar &agrave; utiliser pour d&eacute;compresser une entr&eacute;e
RarEntry bool is Directory	retourne true si lentrée est un dossier false sinon
RarEntry bool is Directory	teste si l'entr&eacute;e courante est un dossier
RarEntry bool is Encrypted	retourne true si lentrée courante est crypté false sinon
RarEntry bool is Encrypted	teste si une entr&eacute;e est crypt&eacute;e
RarEntry string to String	une représentation textuelle de lentrée
RarEntry string to String	r&eacute;cup&egrave;re une repr&eacute;sentation sous forme de cha&icirc;ne de caract&egrave;res d'une entr&eacute;e
RarException set Using Exceptions $using_exceptions	doit valoir true pour active lémission dexceptions false pour le désactiver par défaut
RarException void set Using Exceptions bool $using_exceptions	active ou d&eacute;sactive les exceptions dans le gestionnaire d'erreurs
RecursiveArrayIterator RecursiveArrayIterator get Children	un itérateur pour lentrée courante si cest un tableau ou un objet
RecursiveArrayIterator RecursiveArrayIterator get Children	retourne un it&eacute;rateur pour l'entr&eacute;e courante
RecursiveCallbackFilterIterator bool has Children	returns true if the current element has children false otherwise
RecursiveCallbackFilterIterator bool has Children	v&eacute;rifie si l'&eacute;l&eacute;ment courant de l'it&eacute;rateur interne a un fils
RecursiveDirectoryIterator string get Sub Path	le sous-chemin le sous-dossier
RecursiveDirectoryIterator string get Sub Path	r&eacute;cup&egrave;re le sous-chemin
RecursiveFilterIterator RecursiveFilterIterator get Children	retourne un objet recursivefilteriterator contenant le fils de litérateur interne
RecursiveFilterIterator RecursiveFilterIterator get Children	retourne l'it&eacute;rateur interne contenu dans un objet recursivefilteriterator
RecursiveFilterIterator bool has Children	true si litérateur interne a un fils false sinon
RecursiveFilterIterator bool has Children	v&eacute;rifie si un fils existe pour l'it&eacute;rateur interne de l'&eacute;l&eacute;ment courant
RecursiveIterator RecursiveIterator get Children	litérateur pour lentrée courante
RecursiveIterator RecursiveIterator get Children	r&eacute;cup&egrave;re l'it&eacute;rateur de l'entr&eacute;e courante
RecursiveIterator bool has Children	retourne true si lentrée courante peut être parcouru false sinon
RecursiveIterator bool has Children	v&eacute;rifie si un it&eacute;rateur peut &ecirc;tre cr&eacute;&eacute; depuis l'entr&eacute;e courante
RecursiveIteratorIterator void begin Children	commence un fils
RecursiveIteratorIterator void begin Iteration	commence une it&eacute;ration
RecursiveIteratorIterator bool call Has Children	true si lélément a un fils false sinon
RecursiveIteratorIterator bool call Has Children	v&eacute;rifie si un fils existe
RecursiveIteratorIterator void end Children	termine un fils
RecursiveIteratorIterator void end Iteration	termine un it&eacute;rateur
RecursiveIteratorIterator iterator get Inner Iterator	le sous-itérateur courant
RecursiveIteratorIterator iterator get Inner Iterator	r&eacute;cup&egrave;re l'it&eacute;rateur interne
RecursiveIteratorIterator mixed get Max Depth	la profondeur maximale autorisée ou false si une profondeur infinie est autorisée
RecursiveIteratorIterator mixed get Max Depth	r&eacute;cup&egrave;re la profondeur maximale
RecursiveIteratorIterator void next Element	&eacute;l&eacute;ment suivant
RecursiveRegexIterator RecursiveRegexIterator get Children	un itérateur depuis lentrée courante sil peut être itéré par litérateur interne
RecursiveRegexIterator RecursiveRegexIterator get Children	retourne un it&eacute;rateur depuis l'entr&eacute;e courante
RecursiveTreeIterator void begin Children	d&eacute;but d'un fils
RecursiveTreeIterator RecursiveIterator begin Iteration	un objet recursiveiterator
RecursiveTreeIterator RecursiveIterator begin Iteration	d&eacute;but d'une it&eacute;ration
RecursiveTreeIterator construct $it	lobjet recursiveiterator ou lobjet iteratoraggregate sur lequel on doit itérer
RecursiveTreeIterator construct $mode	drapeaux qui affectent le comportement de la méthode recursiveiteratoriterator utilisée en interne
RecursiveTreeIterator construct $flags	les drapeaux fournis peuvent affecter le comportement de quelques méthodes
RecursiveTreeIterator construct $caching_it_flags	drapeaux qui affectent le comportement de la méthode recursivecachingiterator utilisée en interne
RecursiveTreeIterator RecursiveIterator|IteratorAggregate construct RecursiveIterator|IteratorAggregate $it int $flags int $cit_flags int $mode	construit un nouvel objet recursivetreeiterator
RecursiveTreeIterator string current	retourne lélément courant avec son préfixe et son suffixe
RecursiveTreeIterator string current	r&eacute;cup&egrave;re l'&eacute;l&eacute;ment courant
RecursiveTreeIterator void end Children	fin d'un fils
RecursiveTreeIterator void end Iteration	fin de l'it&eacute;ration
RecursiveTreeIterator string get Entry	retourne la partie de larbre construit pour lélément courant
RecursiveTreeIterator string get Entry	r&eacute;cup&egrave;re l'entr&eacute;e courante
RecursiveTreeIterator void get Postfix	r&eacute;cup&egrave;re le suffixe
RecursiveTreeIterator string get Prefix	retourne la chaîne à placer devant lélément courant
RecursiveTreeIterator string get Prefix	r&eacute;cup&egrave;re le pr&eacute;fixe
RecursiveTreeIterator string key	récupère la clé de lélément courant
RecursiveTreeIterator string key	r&eacute;cup&egrave;re la cl&eacute; de l'&eacute;l&eacute;ment courant
RecursiveTreeIterator void next Element	prochain &eacute;l&eacute;ment
RecursiveTreeIterator void rewind	r&eacute;initialise la position de l'it&eacute;rateur
RecursiveTreeIterator set Prefix Part $value	la valeur à assigner à la partie du préfixe spécifiée par le paramètre part
RecursiveTreeIterator set Prefix Part $part	une constante parmi les constantes recursivetreeiterator::prefix_*
RecursiveTreeIterator void set Prefix Part int $part string $value	d&eacute;finit une partie du pr&eacute;fixe
Reflection export $reflector	la réflection à exporter
Reflection export $return	le fait de le définir à true retournera lexport plutôt que lémission
Reflection string export	si le paramètre return est défini à true lexport sera retourné sous la forme dune chaîne de caractères sinon null sera retourné
Reflection string export Reflector $reflector bool $return	exportes
Reflection get Modifier Names $modifiers	le modificateur à récupérer sous forme numérique
Reflection array get Modifier Names	un tableau de noms de modificateurs
Reflection array get Modifier Names int $modifiers	r&eacute;cup&egrave;re le nom d'un modificateur
ReflectionClass construct $argument	soit une chaîne de caractères contenant le nom de la classe à refléter ou un objet
ReflectionClass mixed construct mixed $argument	construit une reflectionclass
ReflectionClass array get Constants	un tableau de constantes
ReflectionClass array get Constants	r&eacute;cup&egrave;re les constantes
ReflectionClass ReflectionMethod get Constructor	un objet reflectionmethod reflétant le constructeur de la classe ou null si la classe na pas de constructeur
ReflectionClass ReflectionMethod get Constructor	r&eacute;cup&egrave;re le constructeur d'une classe
ReflectionClass array get Default Properties	un array des propriétés par défaut dont la clé est le nom de la propriété et la valeur est la valeur par défaut de la propriété ou null si elle nen na pas
ReflectionClass array get Default Properties	r&eacute;cup&egrave;re les propri&eacute;t&eacute;s par d&eacute;faut
ReflectionClass string get Doc Comment	le commentaire si il existe false sinon
ReflectionClass string get Doc Comment	r&eacute;cup&egrave;re les commentaires
ReflectionClass int get End Line	le numéro de la dernière ligne depuis une définition de classe définie par lutilisateur ou false sil est inconnu
ReflectionClass int get End Line	r&eacute;cup&egrave;re la fin d'une ligne
ReflectionClass ReflectionExtension get Extension	un objet reflectionextension représentant lextension qui définit la classe ou null pour les classes définies par lutilisateur
ReflectionClass ReflectionExtension get Extension	r&eacute;cup&egrave;re un objet reflectionextension pour l'extension d&eacute;finissant la classe
ReflectionClass string get Extension Name	le nom de lextension qui définit la classe ou false pour les classes définies par lutilisateur
ReflectionClass string get Extension Name	r&eacute;cup&egrave;re le nom de l'extension qui d&eacute;finit la classe
ReflectionClass string get File Name	récupère le nom du fichier déclarant la classe considérée
ReflectionClass string get File Name	r&eacute;cup&egrave;re le nom du fichier d&eacute;clarant la classe consid&eacute;r&eacute;e
ReflectionClass array get Interface Names	un tableau numérique dont les valeurs sont les noms des interfaces
ReflectionClass array get Interface Names	r&eacute;cup&egrave;re les noms des interfaces
ReflectionClass array get Interfaces	un tableau associatif contenant les interfaces dont les clés sont les noms des interfaces et les valeurs les objets reflectionclass
ReflectionClass array get Interfaces	r&eacute;cup&egrave;re les interfaces
ReflectionClass get Method $name	le nom de la méthode à refléter
ReflectionClass ReflectionMethod get Method	un objet reflectionmethod
ReflectionClass ReflectionMethod get Method string $name	r&eacute;cup&egrave;re un objet reflectionmethod pour une m&eacute;thode d'une classe
ReflectionClass get Methods $filter	filtre les résultats pour inclure uniquement les méthodes avec certains attributs
ReflectionClass array get Methods	un tableau dobjets reflectionmethod reflétant chaque méthode
ReflectionClass array get Methods int $filter	r&eacute;cup&egrave;re un tableau de m&eacute;thodes
ReflectionClass int get Modifiers	retourne un masque de bits de constantes de modificateurs
ReflectionClass int get Modifiers	r&eacute;cup&egrave;re les modificateurs
ReflectionClass string get Namespace Name	lespace de noms
ReflectionClass string get Namespace Name	r&eacute;cup&egrave;re l'espace de noms
ReflectionClass get Properties $filter	le filtre optionnel pour filtrer les types de propriétés désirées
ReflectionClass array get Properties	un tableau dobjets reflectionproperty
ReflectionClass array get Properties int $filter	r&eacute;cup&egrave;re les propri&eacute;t&eacute;s
ReflectionClass string get Short Name	le nom court de la classe
ReflectionClass string get Short Name	r&eacute;cup&egrave;re le nom court d'une classe
ReflectionClass array get Static Properties	les propriétés statiques sous la forme dun tableau
ReflectionClass array get Static Properties	r&eacute;cup&egrave;re les propri&eacute;t&eacute;s statiques
ReflectionClass get Static Property Value $def_value	une valeur par défaut à retourner lorsque la classe ne déclare pas une propriété statique avec le nom fourni name
ReflectionClass get Static Property Value $name	le nom de la propriété statique pour laquelle nous souhaitons récupérer la valeur
ReflectionClass mixed get Static Property Value	la valeur de la propriété statique
ReflectionClass mixed get Static Property Value string $name mixed $def_value	r&eacute;cup&egrave;re la valeur d'une propri&eacute;t&eacute; statique
ReflectionClass has Constant $name	nom de la constante à vérifier
ReflectionClass bool has Constant	true si la constante est définie false sinon
ReflectionClass bool has Constant string $name	v&eacute;rifie si une constante est d&eacute;finie
ReflectionClass has Property $name	le nom de la propriété à vérifier
ReflectionClass bool has Property	true si la propriété est définie false sinon
ReflectionClass bool has Property string $name	v&eacute;rifie si une propri&eacute;t&eacute; est d&eacute;finie
ReflectionClass implements Interface $interface	le nom de linterface
ReflectionClass bool implements Interface	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool implements Interface string $interface	v&eacute;rifie si une classe impl&eacute;mente une interface
ReflectionClass bool in Namespace	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool in Namespace	v&eacute;rifie si une classe est d&eacute;finie dans un espace de noms
ReflectionClass bool is Abstract	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is Abstract	v&eacute;rifie si une classe est abstraite
ReflectionClass bool is Cloneable	renvoie true si la classe peut être clônée false sinon
ReflectionClass bool is Cloneable	renseigne &agrave; propos de la propri&eacute;t&eacute; de duplication de la classe
ReflectionClass bool is Final	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is Final	v&eacute;rifie si une classe est finale
ReflectionClass is Instance $object	lobjet utilisé pour comparer
ReflectionClass bool is Instance	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is Instance object $object	v&eacute;rifie si une classe est une instance d'une autre classe
ReflectionClass bool is Instantiable	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is Instantiable	v&eacute;rifie si une classe est instanciable
ReflectionClass bool is Interface	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is Interface	v&eacute;rifie si une classe est une interface
ReflectionClass bool is Iterateable	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is Iterateable	v&eacute;rifie si la classe est it&eacute;rable
ReflectionClass is Subclass Of $class	nom de la classe à vérifier
ReflectionClass bool is Subclass Of	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is Subclass Of string $class	v&eacute;rifie si la classe est une sous-classe
ReflectionClass bool is User Defined	cette fonction retourne true en cas de succès ou false si une erreur survient
ReflectionClass bool is User Defined	v&eacute;rifie si une classe a &eacute;t&eacute; d&eacute;finie dans l'espace utilisateur
ReflectionClass new Instance Args $args	accepte un nombre variable darguments passés au constructeur comme pour la fonction call_user_func()
ReflectionClass object new Instance Args	retourne une nouvelle instance de la classe
ReflectionClass object new Instance Args array $args	cr&eacute;er une nouvelle instance en utilisant les arguments fournis
ReflectionClass object new Instance Without Constructor	cr&eacute;e une nouvelle instance de la classe sans invoquer le constructeur
ReflectionClass set Static Property Value $name	le nom de la propriété
ReflectionClass set Static Property Value $value	la nouvelle valeur pour la propriété
ReflectionClass void set Static Property Value string $name string $value	d&eacute;finit la valeur d'une propri&eacute;t&eacute; statiques
ReflectionClass string to String	une représentation textuelle de linstance actuelle de reflectionclass
ReflectionClass string to String	cr&eacute;e une repr&eacute;sentation textuelle de l'objet
ReflectionExtension construct $name	nom de lextension
ReflectionExtension string construct	un nouvel objet reflectionextension
ReflectionExtension string construct string $name	construit un nouvel objet reflectionextension
ReflectionExtension array get Class Names	un tableau de noms de classes définies dans lextension
ReflectionExtension array get Class Names	r&eacute;cup&egrave;re les noms des classes
ReflectionExtension array get Constants	un tableau associatif dont les clés sont les noms des constantes
ReflectionExtension array get Constants	r&eacute;cup&egrave;re les constantes
ReflectionExtension array get Dependencies	un tableau associatif dont les clés sont les dépendances et comme valeurs soit required optional ou conflicts
ReflectionExtension array get Dependencies	r&eacute;cup&egrave;re les d&eacute;pendances
ReflectionExtension array get Functions	un tableau associatif dobjets reflectionfunction pour chaque fonction définie dans lextension dont les clés sont les noms des fonctions
ReflectionExtension array get Functions	r&eacute;cup&egrave;re les fonctions d'une extension
ReflectionExtension array get INIEntries	un tableau associatif dont les clés sont les entrées ini et les valeurs les contenus de ces entrées
ReflectionExtension array get INIEntries	r&eacute;cup&egrave;re les entr&eacute;es ini de l'extension
ReflectionExtension string get Name	le nom de lextension
ReflectionExtension string get Name	r&eacute;cup&egrave;re le nom de l'extension
ReflectionExtension string get Version	la version de lextension
ReflectionExtension string get Version	r&eacute;cup&egrave;re la version de l'extension
ReflectionExtension void info	affiche des informations sur l'extension
ReflectionFunction construct $name	le nom de la fonction à refléter ou une fermeture
ReflectionFunction mixed construct mixed $name	construit un nouvel objet reflectionfunction
ReflectionFunction export $name	la réflection à exporter
ReflectionFunction export $return	le fait de le définir à true retournera lexport plutôt que lémission
ReflectionFunction string export	si le paramètre return est défini à true lexport sera retourné sous la forme dune chaîne de caractères sinon null sera retourné
ReflectionFunction string export string $name string $return	exporte une fonction
ReflectionFunction invoke Args $args	les arguments à utiliser lors de linvocation de la même forme que pour call_user_func_array()
ReflectionFunction mixed invoke Args	retourne le résultat de la fonction invoquée
ReflectionFunction mixed invoke Args array $args	invoque les arguments d'une fonction
ReflectionFunction bool is Disabled	true si la fonction est désactivée false sinon
ReflectionFunction bool is Disabled	v&eacute;rifie si une fonction est d&eacute;sactiv&eacute;e
ReflectionFunction string to String	retourne une représentation textuelle semblable à reflectionfunction::export()
ReflectionFunction string to String	r&eacute;cup&egrave;re une repr&eacute;sentation textuelle
ReflectionFunctionAbstract string get Doc Comment	le commentaire sil existe false sinon
ReflectionFunctionAbstract string get Doc Comment	r&eacute;cup&egrave;re un commentaire
ReflectionFunctionAbstract string get Extension Name	le nom de lextension
ReflectionFunctionAbstract string get Extension Name	r&eacute;cup&egrave;re le nom de l'extension
ReflectionFunctionAbstract string get File Name	le nom du fichier
ReflectionFunctionAbstract string get File Name	r&eacute;cup&egrave;re le nom du fichier
ReflectionFunctionAbstract string get Namespace Name	le nom de lespace de noms
ReflectionFunctionAbstract string get Namespace Name	r&eacute;cup&egrave;re l'espace de noms
ReflectionFunctionAbstract int get Number Of Parameters	le nombre de paramètres
ReflectionFunctionAbstract int get Number Of Parameters	r&eacute;cup&egrave;re le nombre de param&egrave;tres
ReflectionFunctionAbstract int get Number Of Required Parameters	le nombre de paramètres requis
ReflectionFunctionAbstract int get Number Of Required Parameters	r&eacute;cup&egrave;re le nombre de param&egrave;tres requis
ReflectionFunctionAbstract array get Parameters	les paramètres sous la forme dobjets reflectionparameter
ReflectionFunctionAbstract array get Parameters	r&eacute;cup&egrave;re les param&egrave;tres
ReflectionFunctionAbstract string get Short Name	le nom court de la fonction
ReflectionFunctionAbstract string get Short Name	r&eacute;cup&egrave;re le nom court d'une fonction
ReflectionFunctionAbstract int get Start Line	le numéro de la ligne de départ
ReflectionFunctionAbstract int get Start Line	r&eacute;cup&egrave;re le num&eacute;ro de ligne de d&eacute;part
ReflectionFunctionAbstract bool in Namespace	true si la fonction est dans lespace de noms false sinon
ReflectionFunctionAbstract bool in Namespace	v&eacute;rifie si une fonction est dans un espace de noms
ReflectionFunctionAbstract bool is Deprecated	true si la fonction est obsolète false sinon
ReflectionFunctionAbstract bool is Deprecated	v&eacute;rifie si la fonction est obsol&egrave;te
ReflectionFunctionAbstract bool is Internal	true si la fonction est une fonction interne false sinon
ReflectionFunctionAbstract bool is Internal	v&eacute;rifie si la fonction est une fonction interne
ReflectionFunctionAbstract bool is User Defined	true si la fonction a été définie dans lespace utilisateur false sinon
ReflectionFunctionAbstract bool is User Defined	v&eacute;rifie si la fonction est d&eacute;finie dans l'espace utilisateur
ReflectionFunctionAbstract bool is Variadic	retourne true si la fonction est variadique false sinon
ReflectionFunctionAbstract bool is Variadic	v&eacute;rifie si la fonction est variadique
ReflectionFunctionAbstract bool returns Reference	true si la fonction retourne une référence false sinon
ReflectionFunctionAbstract bool returns Reference	v&eacute;rifie si la fonction retourne une r&eacute;f&eacute;rence
ReflectionFunctionAbstract void to String	r&eacute;cup&egrave;re une repr&eacute;sentation textuelle
ReflectionMethod construct $class	nom de classe -ou instance de celle-ci- qui contient la méthode
ReflectionMethod construct $class_method	nom de classe et de méthode délimités par ::
ReflectionMethod construct $name	nom de la méthode
ReflectionMethod mixed construct mixed $class string $name	construit un nouvel objet reflectionmethod
ReflectionMethod export $class	le nom de la classe
ReflectionMethod export $name	le nom de la méthode
ReflectionMethod export $return	le fait de le définir à true retournera lexport plutôt que lémission
ReflectionMethod string export	si le paramètre return est défini à true lexport sera retourné sous la forme dune chaîne de caractères sinon null sera retourné
ReflectionMethod string export string $class string $name bool $return	exportation d'une m&eacute;thode de reflection
ReflectionMethod int get Modifiers	une représentation numérique des modificateurs
ReflectionMethod int get Modifiers	r&eacute;cup&egrave;re les modificateurs de la m&eacute;thode
ReflectionMethod bool is Abstract	true si la méthode est abstraite false sinon
ReflectionMethod bool is Abstract	v&eacute;rifie si la m&eacute;thode est abstraite
ReflectionMethod bool is Constructor	true si la méthode est un constructeur; false sinon
ReflectionMethod bool is Constructor	v&eacute;rifie si la m&eacute;thode est un constructeur
ReflectionMethod bool is Destructor	true si la méthode est un destructeur false sinon
ReflectionMethod bool is Destructor	v&eacute;rifie si la m&eacute;thode est un destructeur
ReflectionMethod bool is Private	true si la méthode est privée false sinon
ReflectionMethod bool is Private	v&eacute;rifie si la m&eacute;thode est priv&eacute;e
ReflectionMethod bool is Public	true si la méthode est statique false sinon
ReflectionMethod bool is Public	v&eacute;rifie si la m&eacute;thode est publique
ReflectionMethod bool is Static	true si la méthode est statique false sinon
ReflectionMethod bool is Static	v&eacute;rifie si la m&eacute;thode est statique
ReflectionMethod set Accessible $accessible	true pour permettre laccessibilité ou false
ReflectionMethod void set Accessible bool $accessible	d&eacute;finit l'accessibilit&eacute; de la m&eacute;thode
ReflectionMethod string to String	une représentation textuelle de cet objet reflectionmethod
ReflectionMethod string to String	retourne une repr&eacute;sentation textuelle de la m&eacute;thode
ReflectionObject construct $argument	une instance de lobjet
ReflectionObject object construct object $argument	construit un nouvel objet reflectionobject
ReflectionObject export $argument	la réflection à exporter
ReflectionObject export $return	le fait de le définir à true retournera lexport plutôt que lémission
ReflectionObject string export	si le paramètre return est défini à true lexport sera retourné sous la forme dune chaîne de caractères sinon null sera retourné
ReflectionObject string export string $argument bool $return	exportation
ReflectionParameter construct $function	la fonction depuis laquelle les paramètres sont reflétés
ReflectionParameter construct $parameter	le paramètre
ReflectionParameter string construct string $function string $parameter	constructeur
ReflectionParameter ReflectionClass get Class	un objet reflectionclass
ReflectionParameter ReflectionClass get Class	r&eacute;cup&egrave;re la classe de typage d'objets
ReflectionParameter ReflectionClass get Declaring Class	un objet reflectionclass
ReflectionParameter ReflectionClass get Declaring Class	r&eacute;cup&egrave;re la classe d&eacute;clarante
ReflectionParameter int get Position	la position du paramètre depuis la gauche vers la droite et en commençant à la position #0
ReflectionParameter int get Position	r&eacute;cup&egrave;re la position d'un param&egrave;tre
ReflectionParameter bool is Array	true si le paramètre attend un tableau false sinon
ReflectionParameter bool is Array	v&eacute;rifie si le param&egrave;tre attend un tableau
ReflectionParameter bool is Default Value Available	true si une valeur par défaut est disponible pour le paramètre false sinon
ReflectionParameter bool is Default Value Available	v&eacute;rifie si une valeur par d&eacute;faut est disponible pour le param&egrave;tre
ReflectionParameter bool is Passed By Reference	true si le paramètre est passé par référence false sinon
ReflectionParameter bool is Passed By Reference	v&eacute;rifie si le param&egrave;tre est pass&eacute; par r&eacute;f&eacute;rence
ReflectionParameter string to String	r&eacute;cup&egrave;re une repr&eacute;sentation textuelle
ReflectionProperty string get Doc Comment	le commentaire
ReflectionProperty string get Doc Comment	r&eacute;cup&egrave;re un commentaire
ReflectionProperty int get Modifiers	une représentation numérique des modificateurs
ReflectionProperty int get Modifiers	r&eacute;cup&egrave;re les modificateurs
ReflectionProperty string get Name	le nom de la propriété reflétée
ReflectionProperty string get Name	r&eacute;cup&egrave;re le nom de la prori&eacute;t&eacute;
ReflectionProperty get Value $object	lobjet à utiliser dans le cas dune propriété non statique
ReflectionProperty mixed get Value	la valeur courante de la propriété
ReflectionProperty mixed get Value object $object	r&eacute;cup&egrave;re la valeur de la propri&eacute;t&eacute;
ReflectionProperty bool is Default	true si la propriété a été déclarée lors de la compilation ou false si elle a été déclarée au moment de lexécution
ReflectionProperty bool is Default	v&eacute;rifie si la propri&eacute;t&eacute; est celle par d&eacute;faut
ReflectionProperty bool is Private	true si la propriété est privée false sinon
ReflectionProperty bool is Private	v&eacute;rifie si la propri&eacute;t&eacute; est priv&eacute;e
ReflectionProperty bool is Protected	true si la propriété est protégée false sinon
ReflectionProperty bool is Protected	v&eacute;rifie si la propri&eacute;t&eacute; est prot&eacute;g&eacute;e
ReflectionProperty bool is Public	true si la propriété est publique false sinon
ReflectionProperty bool is Public	v&eacute;rifie si la propri&eacute;t&eacute; est publique
ReflectionProperty bool is Static	true si la propriété est statique false sinon
ReflectionProperty bool is Static	v&eacute;rifie si la propri&eacute;t&eacute; est statique
ReflectionProperty set Accessible $accessible	true pour permettre laccès ou false
ReflectionProperty void set Accessible bool $accessible	d&eacute;finit l'accessibilit&eacute; de la propri&eacute;t&eacute;
RegexIterator bool accept	true si une correspondance est trouvée false sinon
RegexIterator bool accept	r&eacute;cup&egrave;re le statut d'acceptation
RegexIterator int get Flags	retourne les drapeaux
RegexIterator int get Flags	r&eacute;cup&egrave;re les drapeaux
RegexIterator int get Mode	retourne le mode de lopération
RegexIterator int get Mode	retourne le mode de l'op&eacute;ration
RegexIterator int get Preg Flags	retourne les drapeaux de lexpression rationnelle
RegexIterator int get Preg Flags	retourne les drapeaux de l'expression rationnelle
RRDCreator add Archive $description	définition de larchive rra
RRDCreator void add Archive string $description	ajoute des valeurs de donn&eacute;es rra - archive pour chaque source de donn&eacute;es
RRDCreator add Data Source $description	définition de la source de données ds
RRDCreator void add Data Source string $description	ajoute une d&eacute;finition de source de donn&eacute;es pour la base de donn&eacute;es rrd
RRDCreator bool save	cette fonction retourne true en cas de succès ou false si une erreur survient
RRDCreator bool save	sauvegarde la base de donn&eacute;es rrd dans un fichier
RRDGraph construct $path	chemin complet pour la nouvelle image créée
RRDGraph string construct string $path	cr&eacute;e une nouvelle instance rrdgraph
RRDGraph array save	retourne un tableau contenant les informations sur limage générée ou false si une erreur survient
RRDGraph array save	sauvegarde le r&eacute;sultat d'une requ&ecirc;te dans une image
RRDGraph array save Verbose	retourne un tableau contenant les informations détaillées sur limage généré optionnellement incluant les données de limage ou false si une erreur survient
RRDGraph array save Verbose	sauvegarde une requ&ecirc;te de base de donn&eacute;es rrd dans l'image et retourne les informations verbeuses sur le graphique g&eacute;n&eacute;r&eacute;
RRDUpdater construct $path	chemin du système de fichiers vers le fichier de base de données rrd à mettre à jour
RRDUpdater string construct string $path	cr&eacute;e une nouvelle instance rrdupdater
RRDUpdater update $values	données à utiliser pour la mise à jour
RRDUpdater update $time	la date / heure pour la mise à jour de rrd avec une donnée particulière
RRDUpdater bool update	cette fonction retourne true en cas de succès ou false si une erreur survient
RRDUpdater bool update array $values string $time	met &agrave; jour un fichier de base de donn&eacute;es rrd
SAMConnection bool commit	cette méthode retourne false si une erreur survient
SAMConnection bool commit	valide le travail courant
SAMConnection bool disconnect	cette fonction retourne true en cas de succès ou false si une erreur survient
SAMConnection bool disconnect	d&eacute;connexion d'un serveur de messagerie
SAMConnection bool rollback	cette méthode retourne false si une erreur survient
SAMConnection bool rollback	annulation d'un travail
SAMConnection send $target	si lon envoie un message ce sera lidentité de la file dattente queue: / / queuename ou si on le publie à un sujet spécifique lidentité du sujet topic: / / topicname auquel le message doit être délivré
SAMConnection send $msg	le message à envoyer ou à publier
SAMConnection send $properties	un tableau associatif optionnel de propriétés décrivant les autres paramètres pour contrôler lopération
SAMConnection string send	un identifiant de corrélation qui peut être utilisé dans un appel de réception en tant que sélecteur pour obtenir toutes les réponses ou false si une erreur survient
SAMConnection string send string $target SAMMessage $msg array $properties	envoie un message &agrave; une file d'attente ou le publie sur un sujet
SAMConnection subscribe $targetTopic	lidentité du sujet topic: / / topicname à souscrire
SAMConnection string subscribe	un identifiant de souscription qui peut être utilisé dans une sous-séquence de réception en tant que sélecteur pour obtenir nimporte quelles données du sujet ou false si une erreur survient
SAMConnection string subscribe string $targetTopic	cr&eacute;e une souscription &agrave; un sujet sp&eacute;cifique
SAMConnection unsubscribe $subscriptionId	lidentifiant dune souscription existante tel que retourné par un appel à la méthode subscribe
SAMConnection bool unsubscribe	cette méthode retourne false si une erreur survient
SAMConnection bool unsubscribe string $subscriptionId string $targetTopic	annule une souscription &agrave; un sujet sp&eacute;cifique
SDO_DAS_XML_Document SDO_DataObject get Root Data Object	retourne la racine de sdo_dataobject
SDO_DAS_XML_Document SDO_DataObject get Root Data Object	retourne la racine de sdo_dataobject
SDO_DAS_XML_Document string get Root Element Name	retourne le nom de lélément racine
SDO_DAS_XML_Document string get Root Element Name	retourne le nom de l'&eacute;l&eacute;ment racine
SDO_DAS_XML_Document string get Root Element URI	retourne la chaîne de caractères uri de lélément racine
SDO_DAS_XML_Document string get Root Element URI	retourne la cha&icirc;ne de caract&egrave;res uri de l'&eacute;l&eacute;ment racine
SDO_DAS_XML_Document set Encoding $encoding	chaîne de caractères dencodage
SDO_DAS_XML_Document void set Encoding string $encoding	fixe l'encodage &agrave; l'aide d'une cha&icirc;ne de caract&egrave;res
SDO_DAS_XML_Document set XMLVersion $xmlVersion	version xml en chaîne de caractères
SDO_DAS_XML_Document void set XMLVersion string $xmlVersion	fixe la version xml &agrave; l'aide d'une cha&icirc;ne de caract&egrave;res
SDO_DAS_XML add Types $xsd_file	chemin du fichier schéma xsd
SDO_DAS_XML void add Types string $xsd_file	pour charger un second ou subs&eacute;quent fichier sch&eacute;ma &agrave; un objet sdo_das_xml
SDO_DAS_XML create $xsd_file	emplacement du fichier de schéma xsd
SDO_DAS_XML SDO_DAS_XML create	retourne un objet sdo_das_xml en cas de succès ou autrement elle émet une exception comme décrite ci-dessous
SDO_DAS_XML SDO_DAS_XML create mixed $xsd_file string $key	pour cr&eacute;er un objet sdo_das_xml pour un fichier de sch&eacute;ma donn&eacute;
SDO_DAS_XML load String $xml_string	chaînes de caractères xml
SDO_DAS_XML SDO_DAS_XML_Document load String	retourne un objet sdo_das_xml_document en cas de réussite ou émet une exception comme définie ci-dessous
SDO_DAS_XML SDO_DAS_XML_Document load String string $xml_string	retourne un sdo_das_xml_document pour une cha&icirc;ne de caract&egrave;res d'instance xml donn&eacute;e
SDO_DAS_XML save String $xdoc	objet sdo_das_xml_document
SDO_DAS_XML save String $indent	argument optionnel pour spécifier si le fichier xml devrait être formaté
SDO_DAS_XML string save String	chaîne de caractères xml
SDO_DAS_XML string save String SDO_XMLDocument $xdoc int $indent	sauvegarde l'objet sdo_das_xml_document vers une cha&icirc;ne de caract&egrave;res
SeekableIterator seek $position	la position à atteindre
SeekableIterator void seek int $position	recherche une position
Serializable string serialize	retourne la représentation de lobjet en chaîne de caractères ou bien null
Serializable string serialize	repr&eacute;sentation lin&eacute;aire de l'objet
Serializable unserialize $serialized	la représentation en chaîne de lobjet
Serializable void unserialize string $serialized	construit un objet
SessionHandler string create sid	un id de session valide pour le gestionnaire de session par défaut
SessionHandler string create sid	retourne un nouvel id de session
SessionHandler destroy $session_id	lid de la session à détruire
SessionHandler bool destroy	la valeur retournée habituellement true en cas de succès false si une erreur survient
SessionHandler bool destroy string $session_id	d&eacute;truit une session
SessionHandler gc $maxlifetime	les sessions qui nauront pas été mises à jour les dernières maxlifetime secondes seront supprimées
SessionHandler bool gc	la valeur retournée habituellement true en cas de succès false si une erreur survient
SessionHandler bool gc int $maxlifetime	nettoie les anciennes sessions
SessionHandler read $session_id	lid de la session depuis laquelle les données seront lues
SessionHandler string read	retourne les données lues sous forme encodée
SessionHandler string read string $session_id	lit les donn&eacute;es de session
SessionHandlerInterface destroy $session_id	lidentifiant de la session à détruire
SessionHandlerInterface bool destroy	la valeur retournée habituellement true en cas de succès false si une erreur survient
SessionHandlerInterface bool destroy string $session_id	d&eacute;truit une session
SessionHandlerInterface gc $maxlifetime	les sessions non mises à jour durant les maxlifetime dernières secondes seront supprimées
SessionHandlerInterface bool gc	la valeur retournée habituellement true en cas de succès false si une erreur survient
SessionHandlerInterface bool gc int $maxlifetime	nettoie les vieilles sessions
SessionHandlerInterface open $name	le nom de la session
SessionHandlerInterface open $save_path	le chemin de stockage des données de session
SessionHandlerInterface bool open	la valeur retournée habituellement true en cas de succès false si une erreur survient
SessionHandlerInterface bool open string $save_path string $name	initialise la session
SessionHandlerInterface read $session_id	lidentifiant de session
SessionHandlerInterface string read	retourne les données lues encodées ou une chaîne vide si rien nest lu
SessionHandlerInterface string read string $session_id	lit les donn&eacute;es de session
SimpleXMLElement add Attribute $namespace	si spécifié lespace de nom auquel lattribut appartient
SimpleXMLElement add Attribute $value	la valeur de lattribut
SimpleXMLElement add Attribute $name	le nom de lattribut à ajouter
SimpleXMLElement void add Attribute string $name string $value string $namespace	ajoute un attribut &agrave; l'&eacute;l&eacute;ment simplexml
SimpleXMLElement add Child $name	le nom de lélément enfant à ajouter
SimpleXMLElement add Child $namespace	si spécifié lespace de nom auquel lélément enfant appartient
SimpleXMLElement add Child $value	si spécifié la valeur de lélément enfant
SimpleXMLElement SimpleXMLElement add Child	la méthode addchild retourne un objet simplexmlelement représentant lenfant à ajouter au noeud xml
SimpleXMLElement SimpleXMLElement add Child string $name string $value string $namespace	ajoute un &eacute;l&eacute;ment enfant au noeud xml
SimpleXMLElement as XML $filename	si spécifié la fonction écrit les données au fichier au lieu de les retourner
SimpleXMLElement mixed as XML	si le paramètre filename nest pas spécifié la fonction retourne une chaîne de caractères en cas de succès et false en cas derreur
SimpleXMLElement mixed as XML string $filename	retourne une cha&icirc;ne xml bas&eacute;e sur un &eacute;l&eacute;ment simplexml
SimpleXMLElement string get Name	la méthode getname retourne un nom sous la forme de chaîne de caractères dune balise xml référencé par lobjet simplexmlelement
SimpleXMLElement string get Name	r&eacute;cup&egrave;re le nom d'un &eacute;l&eacute;ment xml
SimpleXMLElement register XPath Namespace $prefix	le préfixe despace de nom à utiliser dans la requête xpath pour lespace de nom donnée dans ns
SimpleXMLElement register XPath Namespace $ns	lespace de nom à utiliser pour la requête xpath
SimpleXMLElement bool register XPath Namespace	cette fonction retourne true en cas de succès ou false si une erreur survient
SimpleXMLElement bool register XPath Namespace string $prefix string $ns	cr&eacute;e un contexte pr&eacute;fixe / ns pour la prochaine requ&ecirc;te xpath
SimpleXMLElement string to String	retourne le contenu sous forme de chaine de caractères ou retourne une chaine vide en cas derreur
SimpleXMLElement string to String	retourne le contenu sous forme de chaine
SimpleXMLElement xpath $path	un chemin xpath
SimpleXMLElement array xpath	retourne un tableau dobjets simplexmlelement ou false si une erreur survient
SimpleXMLElement array xpath string $path	ex&eacute;cute une requ&ecirc;te xpath sur des donn&eacute;es xml
SimpleXMLIterator mixed current	retourne lélément courant comme un objet simplexmliterator ou null en cas déchec
SimpleXMLIterator mixed current	retourne l'entr&eacute;e courante
SimpleXMLIterator SimpleXMLIterator get Children	retourne un objet simplexmliterator contenant les sous-éléments de lobjet courant
SimpleXMLIterator SimpleXMLIterator get Children	retourne un it&eacute;rateur pour l'entr&eacute;e courante si c'est un objet simplexml
SimpleXMLIterator bool has Children	true si lentrée courante a des sous-éléments false sinon
SimpleXMLIterator bool has Children	indique si l'entr&eacute;e courante de simplexml est un objet
SimpleXMLIterator mixed key	retourne le nom de la balise xml dans lobjet courant de litéraeur simplexmliterator ou false
SimpleXMLIterator mixed key	retourne la cl&eacute; courante
SimpleXMLIterator void next	se d&eacute;place sur l'entr&eacute;e simplexml suivante
SimpleXMLIterator void rewind	replace le pointeur simplexml au d&eacute;but
SimpleXMLIterator bool valid	retourne true si lélément courant est valide false sinon
SimpleXMLIterator bool valid	v&eacute;rifie si une ressource simplexml contient d'autres entr&eacute;es
SNMP bool close	cette fonction retourne true en cas de succès ou false si une erreur survient
SNMP bool close	ferme une session snmp
SNMP int get Errno	retourne un des codes erreurs snmp décrits dans le chapitre sur les constantes
SNMP int get Errno	r&eacute;cup&egrave;re le dernier code erreur
SNMP string get Error	une chaîne de caractères décrivant lerreur depuis la dernière requête snmp
SNMP string get Error	r&eacute;cup&egrave;re le dernier message d'erreur
SNMP set $object_id	lidentifiant de lobjet snmp
SNMP set $type	le mib définit le type de chaque identifiant dobjets
SNMP set $value	la nouvelle valeur
SNMP bool set	cette fonction retourne true en cas de succès ou false si une erreur survient
SNMP bool set mixed $object_id mixed $type mixed $value	d&eacute;finitl a valeur d'un objet snmp
SoapClient mixed call string $function_name string $arguments	appelle une fonction soap obsol&egrave;te
SoapClient Soap Client $wsdl	uri du fichier wsdl ou null sil travaille en mode non-wsdl
SoapClient Soap Client $options	un tableau doptions
SoapClient mixed Soap Client mixed $wsdl array $options	constructeur soapclient
SoapClient array get Functions	le array de fonctions soap avec le type de retour le nom de la fonction et les types des paramètres quaccepte celle-ci
SoapClient array get Functions	retourne une liste de fonctions soap publi&eacute;es
SoapClient string get Last Request Headers	les dernieres entêtes soap
SoapClient string get Last Request Headers	retourne les en-t&ecirc;tes de la derni&egrave;re requ&ecirc;te soap
SoapClient string get Last Response Headers	les en-têtes de la dernière réponse soap
SoapClient string get Last Response Headers	retourne les en-t&ecirc;tes de la derni&egrave;re r&eacute;ponse soap
SoapClient set Cookie $value	la valeur du cookie
SoapClient set Cookie $name	le nom du cookie
SoapClient void set Cookie string $name string $value	d&eacute;finit le cookie qui sera envoy&eacute; avec la requ&ecirc;te soap
SoapClient set Soap Headers $soapheaders	len-tête à configurer
SoapClient bool set Soap Headers	cette fonction retourne true en cas de succès ou false si une erreur survient
SoapClient bool set Soap Headers mixed $soapheaders	ajoute un en-t&ecirc;te soap pour les requ&ecirc;tes suivantes
SoapClient soap Call $arguments	un tableau darguments à passer à la fonction
SoapClient soap Call $options	un tableau associatif doptions à passer au client
SoapClient soap Call $output_headers	si fourni ce tableau sera rempli avec les entêtes de la réponse soap retournée
SoapClient soap Call $input_headers	un tableau dentêtes à envoyer avec la requête soap
SoapClient soap Call $function_name	le nom de la fonction soap à appeler
SoapClient mixed soap Call	les fonctions soap retournent une ou plusieurs valeurs
SoapClient mixed soap Call string $function_name array $arguments array $options mixed $input_headers array $output_headers	appelle une fonction soap
SoapFault string construct string $faultcode string $faultstring string $faultactor string $detail string $faultname string $headerfault	constructeur soapfault
SoapFault Soap Fault $faultname	peut être utilisé pour sélectionner lencodage qui convient depuis wsdl
SoapFault Soap Fault $headerfault	peut être utilisé durant la gestion de lentête soap pour rapporter une erreur dans len-tête de réponse
SoapFault Soap Fault $faultcode	le code erreur de soapfault
SoapFault Soap Fault $faultactor	une chaîne identifiant lacteur qui a causé lerreur
SoapFault Soap Fault $faultstring	le message derreur de soapfault
SoapFault string Soap Fault string $faultcode string $faultstring string $faultactor string $detail string $faultname string $headerfault	soapfault constructor
SoapFault string to String	une chaîne décrivant lobjet soapfault
SoapFault string to String	produit une repr&eacute;sentation cha&icirc;ne d'un objet soapfault
SoapParam mixed construct mixed $data string $name	constructeur soapparam
SoapParam Soap Param $name	le nom du paramètre
SoapParam Soap Param $data	les données à passer ou à retourner
SoapParam mixed Soap Param mixed $data string $name	constructeur soapparam
SoapServer add Function $functions	pour exporter une seule fonction il faut passer son nom dans ce paramètre en tant que chaîne de caractères
SoapServer void add Function mixed $functions	ajoute une ou plusieurs fonctions qui vont g&eacute;rer les requ&ecirc;tes soap
SoapServer add Soap Header $object	len-tête à renvoyer
SoapServer void add Soap Header SoapHeader $object	ajoute un en-t&ecirc;te soap &agrave; une r&eacute;ponse
SoapServer mixed construct mixed $wsdl array $options	constructeur soapserver
SoapServer fault $code	le code derreur à retourner
SoapServer fault $name	le nom de lerreur
SoapServer fault $string	une description de lerreur
SoapServer fault $details	plus de détails sur la faute
SoapServer fault $actor	une chaîne identifiant lacteur en cause
SoapServer void fault string $code string $string string $actor string $details string $name	emet une erreur soapserver
SoapServer handle $soap_request	la requête soap
SoapServer void handle string $soap_request	traite une requ&ecirc;te soap
SoapServer set Class $class_name	le nom de la classe exportée
SoapServer set Class $args	ces paramètres optionnels seront passé par défaut au constructeur de la classe durant la phase de création de lobjet
SoapServer void set Class string $class_name mixed $args	configure la classe qui sera utilis&eacute;e pour g&eacute;rer les requ&ecirc;tes soap
SoapServer set Object $object	lobjet qui va gérer les requêtes
SoapServer void set Object object $object	configure l'objet qui sera utilis&eacute; pour g&eacute;rer les requ&ecirc;tes soap
SoapServer set Persistence $mode	une des constantes suivantes : soap_persistence_request - les données de soapserver ne sont pas persistantes entre les requêtes
SoapServer void set Persistence int $mode	active le mode persistant de soapserver
SoapServer Soap Server $wsdl	pour utiliser le mode wsdl il faut définir luri du fichier wsdl dans ce paramètre
SoapServer Soap Server $options	permet de définir une version soap par défaut soap_version un jeu de caractères dencodage interne encoding et un uri acteur actor
SoapServer mixed Soap Server mixed $wsdl array $options	constructeur soapserver
SolrClient add Document $commitWithin	nombre de millisecondes après lequel le document doit être valié
SolrClient add Document $doc	linstance solrinputdocument
SolrClient add Document $overwrite	si lon doit ou non écraser un document existant
SolrClient SolrUpdateResponse add Document	retourne un objet solrupdateresponse et lance une exception si une erreur survient
SolrClient SolrUpdateResponse add Document SolrInputDocument $doc bool $overwrite int $commitWithin	ajoute un document &agrave; l'index
SolrClient add Documents $docs	un tableau contenant la collection dinstances solrinputdocument
SolrClient add Documents $commitWithin	nombre de millisecondes dattente avant de valider automatiquement ce document
SolrClient add Documents $overwrite	si lon doit écraser les documents ou non
SolrClient void add Documents array $docs bool $overwrite int $commitWithin	ajoute une collection d'instances solrinputdocument &agrave; l'index
SolrClient commit $waitSearcher	attend jusquà ce quun nouvel objet de recherche soit ouvert et enregistré comme objet de recherche principal rendant visible les modifications
SolrClient commit $softCommit	va rafraîchir la vue de lindex dune façon plus performante mais sans aucune garantie dêtre sur le disque
SolrClient commit $expungeDeletes	supprime définitivement les effacements
SolrClient SolrUpdateResponse commit	retourne un objet solrupdateresponse en cas de succès et lance une exception si une erreur survient
SolrClient SolrUpdateResponse commit bool $softCommit bool $waitSearcher bool $expungeDeletes	commit tous les ajouts / modifications effectu&eacute;s sur l'index
SolrClient construct $clientOptions	tableau contenant les clés suivantes : - secure valeur booléen indiquant si lon doit se connecter en mode sécurisé) - hostname le nom dhôte du serveur solr - port le numéro du port - path le chemin vers solr - wt le nom du gestionnaire décriture i
SolrClient array construct array $clientOptions	constructeur de l'objet solrclient
SolrClient delete By Id $id	la valeur du champ uniquekey déclaré dans le schéma
SolrClient SolrUpdateResponse delete By Id	retourne un objet solrupdateresponse en cas de succès et lance une exception en cas déchec
SolrClient SolrUpdateResponse delete By Id string $id	effacement par id
SolrClient delete By Ids $ids	un tableau dids représentant le champ uniquekey déclaré dans le schéma de chaque document
SolrClient SolrUpdateResponse delete By Ids	retourne un objet solrupdateresponse en cas de succès et lance une exception en cas déchec
SolrClient SolrUpdateResponse delete By Ids array $ids	effacement par ids
SolrClient delete By Query $query	la requête
SolrClient SolrUpdateResponse delete By Query	retourne un objet solrupdateresponse en cas de succès et lance une exception en cas déchec
SolrClient SolrUpdateResponse delete By Query string $query	efface tous les documents correspondant &agrave; une requ&ecirc;te
SolrClient array get Options	retourne un tableau contenant toutes les options de lobjet solrclient définies en interne
SolrClient array get Options	r&eacute;cup&egrave;re les options clientes d&eacute;finies en interne
SolrClient optimize $waitSearcher	sinterrompt jusquà ce quun nouvel objet de recherche soit ouvert et enregistré comme objet principal rendant les modifications visibles
SolrClient optimize $maxSegments	optimise jusquà ce nombre de fragments
SolrClient optimize $softCommit	permet de rafraîchir la vue de lindex de manière plus performante mais sans garantie sur le disque
SolrClient SolrUpdateResponse optimize	retourne un objet solrupdateresponse en cas de succès ou lance une exception en cas déchec
SolrClient SolrUpdateResponse optimize int $maxSegments bool $softCommit bool $waitSearcher	d&eacute;fragmente l'index
SolrClient SolrPingResponse ping	retourne un objet solrpingresponse en cas de succès et lance une exception solrclientexception en cas déchec
SolrClient SolrPingResponse ping	v&eacute;rifie si le serveur solr est disponible
SolrClient query $query	un objet solrparams
SolrClient SolrQueryResponse query	retourne un objet solrqueryresponse en cas de succès et lance une exception en cas déchec
SolrClient SolrQueryResponse query SolrParams $query	envoi une requ&ecirc;te au serveur
SolrClient request $raw_request	une chaîne xml contenant la requête brute vers le serveur
SolrClient SolrUpdateResponse request	retourne un objet solrupdateresponse en cas de succès
SolrClient SolrUpdateResponse request string $raw_request	envoi une requ&ecirc;te brute de mise &agrave; jour
SolrClient set Servlet $type	une constante parmi : - solrclient::search_servlet_type - solrclient::update_servlet_type - solrclient::threads_servlet_type - solrclient::ping_servlet_type - solrclient::terms_servlet_type
SolrClient set Servlet $value	la nouvelle valeur du servlet
SolrClient bool set Servlet	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrClient bool set Servlet int $type string $value	modifie le type d'un servlet en une nouvelle valeur
SolrClientException array get Internal Info	retourne un tableau contenant des informations internes sur lendroit doù est lancée lexception
SolrClientException array get Internal Info	retourne des informations internes sur l'endroit d'o&ugrave; est lanc&eacute;e l'exception
SolrCollapseFunction string get Hint	returns collapse hint
SolrDocument add Field $fieldValue	la valeur du champ
SolrDocument add Field $fieldName	le nom du champ
SolrDocument bool add Field	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrDocument bool add Field string $fieldName string $fieldValue	ajoute un champ au document
SolrDocument void destruct	destructeur
SolrDocument field Exists $fieldName	le nom du champ
SolrDocument bool field Exists	retourne true si le champ est présent ou false sinon
SolrDocument bool field Exists string $fieldName	v&eacute;rifie si un champ existe dans le document
SolrDocument get Field $fieldName	nom du champ
SolrDocument SolrDocumentField get Field	retourne un objet solrdocumentfield en cas de succès ou false si une erreur survient
SolrDocument SolrDocumentField get Field string $fieldName	r&eacute;cup&egrave;re un champ par son nom
SolrDocument int get Field Count	retourne un entier en cas de succès false sinon
SolrDocument int get Field Count	r&eacute;cup&egrave;re le nombre de champs du document
SolrDocument array get Field Names	retourne un tableau contenant les noms des champs du document
SolrDocument array get Field Names	r&eacute;cup&egrave;re un tableau de noms de champs du document
SolrDocument string key	retourne la clé courante
SolrDocument string key	r&eacute;cup&egrave;re la cl&eacute; courante
SolrDocument merge $overwrite	si vaut true alors les champs dont les noms sont identiques dans le document destinataire seront écrasés
SolrDocument merge $sourceDoc	la source du document
SolrDocument bool merge	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrDocument bool merge SolrDocument $sourceDoc bool $overwrite	fusionne la source &agrave; l'objet solrdocument courant
SolrDocument offset Exists $fieldName	le nom du champ
SolrDocument bool offset Exists	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrDocument bool offset Exists string $fieldName	v&eacute;rifie si un champ particulier existe
SolrDocument offset Get $fieldName	le nom du champ
SolrDocument SolrDocumentField offset Get	retourne un objet solrdocumentfield
SolrDocument SolrDocumentField offset Get string $fieldName	r&eacute;cup&egrave;re un champ
SolrDocument offset Unset $fieldName	le nom du champ
SolrDocument void offset Unset string $fieldName	efface un champ
SolrDocument void rewind	r&eacute;initialise le pointeur interne au d&eacute;but
SolrDocument string serialize	retourne une chaîne de caractères représentant le document solr linéarisé
SolrDocument string serialize	utilis&eacute; pour une lin&eacute;arisation personnalis&eacute;e
SolrDocument set $fieldValue	valeur du champ
SolrDocument set $fieldName	nom du champ
SolrDocument bool set	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrDocument bool set string $fieldName string $fieldValue	ajoute un champ au document
SolrDocument array to Array	retourne un tableau représentant le document
SolrDocument array to Array	r&eacute;cup&egrave;re un tableau repr&eacute;sentant le document
SolrDocument unset $fieldName	le nom du champ
SolrDocument bool unset	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrDocument bool unset string $fieldName	efface un champ du document
SolrDocument bool valid	retourne true en cas de succès ou false si la position courante nest plus valide
SolrDocument bool valid	v&eacute;rifie si la position courant interne est toujours valide
SolrException array get Internal Info	retourne un tableau contenant des informations internes lorsquune exception a été lancée
SolrException array get Internal Info	r&eacute;cup&egrave;re des informations internes lorsqu'une exception a &eacute;t&eacute; lanc&eacute;e
SolrIllegalArgumentException array get Internal Info	retourne un tableau contenant des informations internes doù lexception a été émise
SolrIllegalArgumentException array get Internal Info	retourne des informations sur l'endroit d'o&ugrave; l'exception a &eacute;t&eacute; &eacute;mise
SolrInputDocument bool clear	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrInputDocument bool clear	r&eacute;initialise le document d'entr&eacute;e
SolrInputDocument void clone	cr&eacute;e une copie de l'objet solrdocument
SolrInputDocument delete Field $fieldName	le nom du champ
SolrInputDocument bool delete Field	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrInputDocument bool delete Field string $fieldName	efface un champ d'un document
SolrInputDocument field Exists $fieldName	le nom du champ
SolrInputDocument bool field Exists	retourne true si le champ existe et false sinon
SolrInputDocument bool field Exists string $fieldName	v&eacute;rifie si un champ existe
SolrInputDocument float get Boost	retourne la valeur du boost en cas de succès et false si une erreur survient
SolrInputDocument float get Boost	r&eacute;cup&egrave;re la valeur courante du boost pour le document
SolrInputDocument get Field Boost $fieldName	le nom du champ
SolrInputDocument float get Field Boost	retourne la valeur du boost pour le champ ou false si une erreur survient
SolrInputDocument float get Field Boost string $fieldName	r&eacute;cup&egrave;re la valeur du boost pour un champ donn&eacute;
SolrInputDocument int get Field Count	retourne un entier en cas de succès ou false si une erreur survient
SolrInputDocument int get Field Count	retourne le nombre de champs du document
SolrInputDocument array get Field Names	retourne un tableau en cas de succès et false si une erreur survient
SolrInputDocument array get Field Names	retourne un tableau contenant tous les champs du document
SolrInputDocument merge $sourceDoc	le document source
SolrInputDocument merge $overwrite	si vaut true il remplacera les champs correspondant dans le document cible
SolrInputDocument bool merge	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrInputDocument bool merge SolrInputDocument $sourceDoc bool $overwrite	fusionne un document d'entr&eacute;e dans un autre
SolrInputDocument set Boost $documentBoostValue	la valeur de boost pour ce document
SolrInputDocument bool set Boost	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrInputDocument bool set Boost float $documentBoostValue	d&eacute;finit la valeur de boost pour le document
SolrInputDocument set Field Boost $fieldBoostValue	la valeur de boost
SolrInputDocument set Field Boost $fieldName	le nom du champ
SolrInputDocument bool set Field Boost string $fieldName float $fieldBoostValue	d&eacute;finit la valeur de boost pour un champ
SolrInputDocument sort $sortDirection	la direction du tri
SolrInputDocument sort $sortOrderBy	le critère de tri
SolrInputDocument bool sort	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrInputDocument bool sort int $sortOrderBy int $sortDirection	tri les champs du document
SolrInputDocument array to Array	retourne une représentation sous forme de tableau des champs et false si une erreur survient
SolrInputDocument array to Array	retourne un repr&eacute;sentation sous forme de tableau du document d'entr&eacute;e
SolrObject void destruct	destructeur
SolrObject array get Property Names	retourne un tableau
SolrObject array get Property Names	r&eacute;cup&egrave;re un tableau contenant les noms de toutes les propri&eacute;t&eacute;s
SolrObject offset Exists $property_name	le nom de la propriété
SolrObject bool offset Exists	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrObject bool offset Exists string $property_name	v&eacute;rifie si une propri&eacute;t&eacute; existe
SolrObject offset Get $property_name	le nom de la propriété
SolrObject mixed offset Get	retourne la valeur de la propriété
SolrObject mixed offset Get string $property_name	r&eacute;cup&egrave;re une propri&eacute;t&eacute;
SolrObject offset Set $property_value	la nouvelle valeur
SolrObject offset Set $property_name	le nom de la propriété
SolrObject void offset Set string $property_name string $property_value	d&eacute;finit la valeur d'une propri&eacute;t&eacute;
SolrParams add Param $value	valeur du paramètre
SolrParams add Param $name	nom du paramètre
SolrParams SolrParams add Param	retourne un objet solrparam en cas de succès et false si une erreur survient
SolrParams SolrParams add Param string $name string $value	ajoute un param&egrave;tre &agrave; l'objet
SolrParams array get Params	retourne un tableau de paramètres non encodés url
SolrParams array get Params	retourne un tableau de param&egrave;tres non encod&eacute;s url
SolrParams array get Prepared Params	retourne un tableau de paramètres encodés url
SolrParams array get Prepared Params	retourne un tableau de param&egrave;tres encod&eacute;s url
SolrParams set Param $value	valeur du paramètre
SolrParams set Param $name	nom du paramètre
SolrParams SolrParams set Param	retourne un objet solrparam en cas de succès et false si une erreur survient
SolrParams SolrParams set Param string $name string $value	d&eacute;finit un param&egrave;tre &agrave; une valeur sp&eacute;cifique
SolrParams to String $url_encode	si lon doit retourner les valeurs encodées url
SolrParams string to String	retourne une chaîne de caractères en cas de succès et false si une erreur survient
SolrParams string to String bool $url_encode	retourne tous les param&egrave;tres de l'objet
SolrParams unserialize $serialized	la représentation linéarisée de lobjet
SolrParams void unserialize string $serialized	utilis&eacute; pour la lin&eacute;arisation personnalis&eacute;e
SolrPingResponse string get Response	retourne une chaîne vide
SolrPingResponse string get Response	r&eacute;cup&egrave;re la r&eacute;ponse du serveur
SolrQuery add Facet Date Other $field_override	le nom du champ pour lécrasement
SolrQuery add Facet Date Other $value	la valeur à utiliser
SolrQuery SolrQuery add Facet Date Other	retourne lobjet solrquery courant si la valeur retourné est utilisée
SolrQuery SolrQuery add Facet Date Other string $value string $field_override	ajoute une autre param&egrave;tre facet
SolrQuery add Facet Field $field	le nom du champ
SolrQuery SolrQuery add Facet Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery add Facet Field string $field	ajoute un autre champ &agrave; la facette
SolrQuery add Facet Query $facetQuery	la requête de facette
SolrQuery SolrQuery add Facet Query	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery add Facet Query string $facetQuery	ajoute une requ&ecirc;te de facette
SolrQuery add Field $field	le nom du champ
SolrQuery SolrQuery add Field	retourne lobjet solrquery courant
SolrQuery SolrQuery add Field string $field	sp&eacute;cifie quel champ doit retourner le r&eacute;sultat
SolrQuery add Filter Query $fq	le filtre de requête
SolrQuery SolrQuery add Filter Query	retourne lobjet solrquery courant
SolrQuery SolrQuery add Filter Query string $fq	sp&eacute;cifie un filtre de requ&ecirc;te
SolrQuery add Highlight Field $field	nom du champ
SolrQuery SolrQuery add Highlight Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery add Highlight Field string $field	lie un hl
SolrQuery add Mlt Field $field	le nom du champ
SolrQuery SolrQuery add Mlt Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery add Mlt Field string $field	sp&eacute;cifie un champ &agrave; utiliser pour les similitudes
SolrQuery add Mlt Query Field $boost	la valeur du renfort
SolrQuery add Mlt Query Field $field	le nom du champ
SolrQuery SolrQuery add Mlt Query Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery add Mlt Query Field string $field float $boost	lie un mlt
SolrQuery add Sort Field $order	la direction du tri
SolrQuery add Sort Field $field	le nom du champ
SolrQuery SolrQuery add Sort Field	retourne lobjet solrquery courant
SolrQuery SolrQuery add Sort Field string $field int $order	utilis&eacute; pour contr&ocirc;ler le tri du r&eacute;sultat
SolrQuery add Stats Field $field	le nom du champ
SolrQuery SolrQuery add Stats Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery add Stats Field string $field	lie un param&egrave;tre stats
SolrQuery bool get Facet	retourne un booléen en cas de succès et null si aucun paramètre nest défini
SolrQuery bool get Facet	retourne la valeur du param&egrave;tre de facette
SolrQuery get Facet Date End $field_override	le nom du champ
SolrQuery string get Facet Date End	retourne une chaîne de caractères en cas de succès et null si aucun paramètre nest défini
SolrQuery string get Facet Date End string $field_override	retourne la valeur du param&egrave;tre facet
SolrQuery array get Facet Date Fields	retourne tous les champs facet
SolrQuery array get Facet Date Fields	retourne tous les champs facet
SolrQuery get Facet Date Gap $field_override	le nom du champ
SolrQuery string get Facet Date Gap	retourne une chaîne de caractères en cas de succès et null sil nest pas défini
SolrQuery string get Facet Date Gap string $field_override	r&eacute;cup&egrave;re la valeur du param&egrave;tre facet
SolrQuery get Facet Date Hard End $field_override	le nom du champ
SolrQuery string get Facet Date Hard End	retourne une chaîne de caractères en cas de succès et null sil nest pas défini
SolrQuery string get Facet Date Hard End string $field_override	r&eacute;cup&egrave;re la valeur du param&egrave;tre facet
SolrQuery get Facet Date Other $field_override	le nom du champ
SolrQuery array get Facet Date Other	retourne une chaîne de caractères en cas de succès et null sil nest pas défini
SolrQuery array get Facet Date Other string $field_override	r&eacute;cup&egrave;re la valeur du param&egrave;tre facet
SolrQuery get Facet Offset $field_override	le nom du champ
SolrQuery int get Facet Offset	retourne un entier en cas de succès et null si aucun paramètre nest défini
SolrQuery int get Facet Offset string $field_override	r&eacute;cup&egrave;re la position dans la liste des contraintes &agrave; utiliser pour la pagination
SolrQuery get Facet Prefix $field_override	le nom du champ
SolrQuery string get Facet Prefix	retourne une chaîne de caractères en cas de succès et null si aucun paramètre nest défini
SolrQuery string get Facet Prefix string $field_override	r&eacute;cup&egrave;re le pr&eacute;fixe de la facette
SolrQuery array get Facet Queries	retourne un tableau en cas de succès et null si aucun paramètre na été défini
SolrQuery array get Facet Queries	r&eacute;cup&egrave;re toutes les facettes des requ&ecirc;tes
SolrQuery array get Filter Queries	retourne un tableau en cas de succès et null si aucun nest défini
SolrQuery array get Filter Queries	r&eacute;cup&egrave;re un tableau de filtres de requ&ecirc;tes
SolrQuery integer get Group Cache Percent	returns group cache percent value
SolrQuery array get Group Functions	returns group functions group
SolrQuery bool get Highlight	retourne un booléen en cas de succès et null si aucun nest défini
SolrQuery bool get Highlight	r&eacute;cup&egrave;re l'&eacute;tat du param&egrave;tre h1
SolrQuery array get Highlight Fields	retourne un tableau en cas de succès et null si aucun na été défini
SolrQuery array get Highlight Fields	r&eacute;cup&egrave;re tous les champs pour lesquels solr doit mettre en &eacute;vidence un extrait
SolrQuery get Highlight Formatter $field_override	le nom du champ
SolrQuery string get Highlight Formatter	retourne une chaîne de caractères en cas de succès et null si aucun nest défini
SolrQuery string get Highlight Formatter string $field_override	r&eacute;cup&egrave;re le formatage utilis&eacute; pour mettre en &eacute;vidence la sortie
SolrQuery get Highlight Fragmenter $field_override	le nom du champ
SolrQuery string get Highlight Fragmenter	retourne une chaîne de caractères en cas de succès et null si aucun nest défini
SolrQuery string get Highlight Fragmenter string $field_override	r&eacute;cup&egrave;re le g&eacute;n&eacute;rateur d'extrait de texte pour la mise en &eacute;vidence
SolrQuery get Highlight Fragsize $field_override	le nom du champ
SolrQuery int get Highlight Fragsize	retourne un entier en cas de succès et null si aucun nest défini
SolrQuery int get Highlight Fragsize string $field_override	retourne le nombre de caract&egrave;res des fragments &agrave; consid&eacute;rer pour la mise en &eacute;vidence
SolrQuery get Highlight Max Alternate Field Length $field_override	le nom du champ
SolrQuery int get Highlight Max Alternate Field Length	retourne un entier en cas de succès et null si aucun nest défini
SolrQuery int get Highlight Max Alternate Field Length string $field_override	retourne le nombre maximal de caract&egrave;res du champ &agrave; retourner
SolrQuery int get Highlight Max Analyzed Chars	retourne un entier en cas de succès et null si aucun nest défini
SolrQuery int get Highlight Max Analyzed Chars	retourne le nombre maximal de caract&egrave;res du document dans lequel les extraits seront cherch&eacute;s
SolrQuery get Highlight Merge Contiguous $field_override	le nom du champ
SolrQuery bool get Highlight Merge Contiguous	retourne un booléen en cas de succès et null si aucun nest défini
SolrQuery bool get Highlight Merge Contiguous string $field_override	retourne si l'on doit rassembler les fragments contigus en un seul fragment
SolrQuery string get Highlight Regex Pattern	retourne une chaîne de caractères en cas de succès et null si aucun nest défini
SolrQuery string get Highlight Regex Pattern	r&eacute;cup&egrave;re l'expression rationnelle utilis&eacute;e pour la fragmentation
SolrQuery get Highlight Simple Post $field_override	le nom du champ
SolrQuery string get Highlight Simple Post	retourne une chaîne de caractères en cas de succès et null si aucun nest défini
SolrQuery string get Highlight Simple Post string $field_override	r&eacute;cup&egrave;re le texte qui doit appara&icirc;tre apr&egrave;s le terme mise en &eacute;vidence
SolrQuery get Highlight Simple Pre $field_override	le nom du champ
SolrQuery string get Highlight Simple Pre	retourne une chaîne de caractères en cas de succès et null si aucun nest défini
SolrQuery string get Highlight Simple Pre string $field_override	retourne le texte qui doit appara&icirc;tre avant le terme mise en &eacute;vidence
SolrQuery get Highlight Snippets $field_override	le nom du champ
SolrQuery int get Highlight Snippets	retourne un entier en cas de succès et null si aucun nest défini
SolrQuery int get Highlight Snippets string $field_override	r&eacute;cup&egrave;re le nombre maximal d'extraits mis en &eacute;vidence &agrave; g&eacute;n&eacute;rer par champ
SolrQuery bool get Mlt Boost	retourne un booléen en cas de succès et null si aucun nest défini
SolrQuery bool get Mlt Boost	retourne si la requ&ecirc;te doit &ecirc;tre am&eacute;lior&eacute;e en utilisant la pertinence des termes
SolrQuery int get Mlt Count	retourne un entier en cas de succès et null si aucun nest défini
SolrQuery int get Mlt Count	r&eacute;cup&egrave;re le nombre de documents similaires &agrave; retourner pour chaque r&eacute;sultat
SolrQuery int get Mlt Max Num Query Terms	retourne un entier en cas de succès et null si le nombre maximal nest pas défini
SolrQuery int get Mlt Max Num Query Terms	retourne le nombre maximal de termes de requ&ecirc;te qui peuvent &ecirc;tre inclus lors de la g&eacute;n&eacute;ration d'une requ&ecirc;te
SolrQuery int get Mlt Max Num Tokens	retourne un entier en cas de succès et null si le nombre maximal de jokers nest pas défini
SolrQuery int get Mlt Max Num Tokens	retourne le nombre maximal de jokers &agrave; analyser dans chaque champ du document
SolrQuery int get Mlt Max Word Length	retourne un entier en cas de succès et null si la longueur nest pas définie
SolrQuery int get Mlt Max Word Length	retourne la longueur minimale des mots en de&ccedil;&agrave; de laquelle ils seront ignor&eacute;s
SolrQuery int get Mlt Min Doc Frequency	retourne un entier en cas de succès et null si le seuil nest pas défini
SolrQuery int get Mlt Min Doc Frequency	retourne le seuil de fr&eacute;quence d'apparition des mots
SolrQuery int get Mlt Min Term Frequency	retourne un entier en cas de succès et null si la fréquence nest pas définie
SolrQuery int get Mlt Min Term Frequency	retourne la fr&eacute;quence en de&ccedil;&agrave; duquel les termes doivent &ecirc;tre ignor&eacute;s dans le document source
SolrQuery int get Mlt Min Word Length	retourne un entier en cas de succès et null si la longueur nest pas définie
SolrQuery int get Mlt Min Word Length	retourne la longueur minimum d'un mot en de&ccedil;a duquel il sera ignor&eacute;
SolrQuery array get Mlt Query Fields	retourne un tableau en cas de succès et null si aucun champ nest défini
SolrQuery array get Mlt Query Fields	retourne les champs de la requ&ecirc;te ainsi que leurs boosts
SolrQuery string get Query	retourne une chaîne de caractères en cas de succès et null si indéfini
SolrQuery string get Query	retourne la requ&ecirc;te principale
SolrQuery int get Rows	retourne un entier en cas de succès et null si indéfini
SolrQuery int get Rows	retourne le nombre maximal de documents
SolrQuery array get Sort Fields	retourne un tableau en cas de succès et null si aucun paramètre nest défini
SolrQuery array get Sort Fields	retourne tous les champs de tri
SolrQuery bool get Stats	retourne un booléen en cas de succès et null si indéfini
SolrQuery bool get Stats	v&eacute;rifie si les statistiques sont actives ou non
SolrQuery array get Stats Facets	retourne un tableau en cas de succès et null si aucune nest définie
SolrQuery array get Stats Facets	retourne toutes les statistiques d&eacute;finies
SolrQuery array get Stats Fields	retourne un tableau en cas de succès et null si aucun nest défini
SolrQuery array get Stats Fields	retourne les statistiques des champs
SolrQuery string get Terms Field	retourne une chaîne de caractères en cas de succès et null si aucun champ nest défini
SolrQuery string get Terms Field	r&eacute;cup&egrave;re le champ depuis lequel les termes sont r&eacute;cup&eacute;r&eacute;s
SolrQuery bool get Terms Include Lower Bound	retourne un booléen en cas de succès et null si aucun nest défini
SolrQuery bool get Terms Include Lower Bound	v&eacute;rifie si l'on doit inclure ou non la limite inf&eacute;rieure dans le jeu de r&eacute;sultats
SolrQuery bool get Terms Include Upper Bound	retourne un booléen en cas de succès et null si aucun nest défini
SolrQuery bool get Terms Include Upper Bound	v&eacute;rifie si l'on doit inclure ou non la limite sup&eacute;rieure dans le jeu de r&eacute;sultats
SolrQuery int get Terms Limit	retourne un entier en cas de succès et null si aucun nombre nest défini
SolrQuery int get Terms Limit	retourne le nombre maximal de termes que solr peut retourner
SolrQuery string get Terms Lower Bound	retourne une chaîne de caractères en cas de succès et null si aucun terme nest défini
SolrQuery string get Terms Lower Bound	retourne le terme sur lequel on doit commencer
SolrQuery int get Terms Max Count	retourne un entier en cas de succès et null si aucune fréquence nest retournée
SolrQuery int get Terms Max Count	retourne la fr&eacute;quence maximale des documents
SolrQuery string get Terms Prefix	retourne une chaîne de caractères en cas de succès et null si aucun nest défini
SolrQuery string get Terms Prefix	retourne le pr&eacute;fixe du terme
SolrQuery bool get Terms Return Raw	retourne un booléen en cas de succès et null si aucun nest défini
SolrQuery bool get Terms Return Raw	si l'on doit retourner ou non les caract&egrave;res brutes
SolrQuery string get Terms Upper Bound	retourne une chaîne de caractères en cas de succès et null si aucun nest défini
SolrQuery string get Terms Upper Bound	retourne le terme sur lequel on doit s'arr&ecirc;ter
SolrQuery remove Facet Date Other $field_override	le nom du champ
SolrQuery remove Facet Date Other $value	la valeur
SolrQuery SolrQuery remove Facet Date Other	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Facet Date Other string $value string $field_override	supprime un param&egrave;tre facet
SolrQuery remove Facet Field $field	le nom du champ
SolrQuery SolrQuery remove Facet Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Facet Field string $field	supprime un param&egrave;tre facet
SolrQuery remove Facet Query $value	la valeur
SolrQuery SolrQuery remove Facet Query	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Facet Query string $value	supprime un param&egrave;tre facet
SolrQuery remove Field $field	nom du champ
SolrQuery SolrQuery remove Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Field string $field	efface un champ depuis la liste des champs
SolrQuery remove Highlight Field $field	le nom du champ
SolrQuery SolrQuery remove Highlight Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Highlight Field string $field	supprime un des champs utilis&eacute;s pour la mise en &eacute;vidence
SolrQuery remove Mlt Field $field	nom du champ
SolrQuery SolrQuery remove Mlt Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Mlt Field string $field	supprime un des champs morelikethis
SolrQuery remove Mlt Query Field $queryField	le champ de la requête
SolrQuery SolrQuery remove Mlt Query Field	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Mlt Query Field string $queryField	supprime un des champs morelikethis de la requ&ecirc;te
SolrQuery remove Stats Facet $value	la valeur
SolrQuery SolrQuery remove Stats Facet	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery remove Stats Facet string $value	supprime un param&egrave;tre stats
SolrQuery set Echo Handler $flag	true ou false
SolrQuery SolrQuery set Echo Handler	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Echo Handler bool $flag	bascule le param&egrave;tre echohandler
SolrQuery set Echo Params $type	le type de paramètres à inclure
SolrQuery SolrQuery set Echo Params	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Echo Params string $type	d&eacute;termine les param&egrave;tres &agrave; inclure dans la r&eacute;ponse
SolrQuery set Facet $value	true pour activer les facet false pour les désactiver
SolrQuery SolrQuery set Facet	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet bool $flag	lie un param&egrave;tre facet
SolrQuery set Facet Date Gap $field_override	le nom du champ
SolrQuery set Facet Date Gap $value	voir facet
SolrQuery SolrQuery set Facet Date Gap	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Date Gap string $value string $field_override	lie un facet
SolrQuery set Facet Date Hard End $field_override	le nom du champ
SolrQuery set Facet Date Hard End $value	voir facet
SolrQuery SolrQuery set Facet Date Hard End	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Date Hard End bool $value string $field_override	lie un facet
SolrQuery set Facet Enum Cache Min Default Frequency $field_override	le nom du champ
SolrQuery set Facet Enum Cache Min Default Frequency $value	la fréquence minimale
SolrQuery SolrQuery set Facet Enum Cache Min Default Frequency	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Enum Cache Min Default Frequency int $frequency string $field_override	d&eacute;finit la fr&eacute;quence minimale du document utilis&eacute;e pour d&eacute;terminer le comptage des termes
SolrQuery set Facet Method $field_override	le nom du champ
SolrQuery set Facet Method $method	la méthode à utiliser
SolrQuery SolrQuery set Facet Method	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Method string $method string $field_override	sp&eacute;cifie le type d'algorithme &agrave; utiliser pour un champ facet
SolrQuery set Facet Min Count $field_override	le nom du champ
SolrQuery set Facet Min Count $mincount	le nombre minimal
SolrQuery SolrQuery set Facet Min Count	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Min Count int $mincount string $field_override	lie un facet
SolrQuery set Facet Offset $field_override	le nom du champ
SolrQuery set Facet Offset $offset	la position
SolrQuery SolrQuery set Facet Offset	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Offset int $offset string $field_override	d&eacute;finit la position dans la liste des contraintes pour la pagination
SolrQuery set Facet Prefix $field_override	le nom du champ
SolrQuery set Facet Prefix $prefix	le préfixe
SolrQuery SolrQuery set Facet Prefix	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Prefix string $prefix string $field_override	sp&eacute;cifie un pr&eacute;fixe utilis&eacute; pour limiter les termes
SolrQuery set Facet Sort $facetSort	utilisez solrquery::facet_sort_index pour trier sur lindex ou solrquery::facet_sort_count pour trier sur le total
SolrQuery set Facet Sort $field_override	le nom du champ
SolrQuery SolrQuery set Facet Sort	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Facet Sort int $facetSort string $field_override	d&eacute;termine le tri des facet
SolrQuery set Highlight $flag	active ou désactive la coloration
SolrQuery SolrQuery set Highlight	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight bool $flag	active ou d&eacute;sactive la coloration
SolrQuery set Highlight Fragmenter $field_override	le nom du champ
SolrQuery set Highlight Fragmenter $fragmenter	le fragmenteur standard est gap
SolrQuery SolrQuery set Highlight Fragmenter	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Fragmenter string $fragmenter string $field_override	d&eacute;finit un g&eacute;n&eacute;rateur d'extraits de texte pour le texte coloris&eacute;
SolrQuery set Highlight Highlight Multi Term $flag	si lon doit utiliser ou non spanscorer pour coloriser les termes de la phrase uniquement lorsquils apparaissent dans la phrase de requête du document
SolrQuery SolrQuery set Highlight Highlight Multi Term	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Highlight Multi Term bool $flag	utilise spanscorer pour coloriser les termes d'une phrase
SolrQuery set Highlight Max Analyzed Chars $value	le nombre de caractères dans un document pour y chercher des extraites correspondants
SolrQuery SolrQuery set Highlight Max Analyzed Chars	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Max Analyzed Chars int $value	sp&eacute;cifie le nombre de caract&egrave;res dans un document pour y chercher des extraits correspondants
SolrQuery set Highlight Merge Contiguous $field_override	le nom du champ
SolrQuery set Highlight Merge Contiguous $value	si lon doit rassembler les fragments proches dans un seul fragment
SolrQuery SolrQuery set Highlight Merge Contiguous	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Merge Contiguous bool $flag string $field_override	si l'on doit rassembler les fragments proches dans un seul fragment
SolrQuery set Highlight Regex Max Analyzed Chars $maxAnalyzedChars	le nombre maximal de caractères à analyser dans un champ lors de lutilisateur du formatteur regex
SolrQuery SolrQuery set Highlight Regex Max Analyzed Chars	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Regex Max Analyzed Chars int $maxAnalyzedChars	sp&eacute;cifie le nombre maximal de caract&egrave;res &agrave; analyser
SolrQuery set Highlight Regex Pattern $value	lexpression rationnelle pour la fragmentation
SolrQuery SolrQuery set Highlight Regex Pattern	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Regex Pattern string $value	sp&eacute;cifie l'expression rationnelle pour la fragmentation
SolrQuery set Highlight Require Field Match $flag	true ou false
SolrQuery SolrQuery set Highlight Require Field Match	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Require Field Match bool $flag	champ correspondant requis lors de la colorisation
SolrQuery set Highlight Simple Post $field_override	le nom du champ
SolrQuery set Highlight Simple Post $simplePost	définit le texte qui doit apparaître après un terme colorisé
SolrQuery SolrQuery set Highlight Simple Post string $simplePost string $field_override	d&eacute;finit le texte qui doit appara&icirc;tre apr&egrave;s un terme coloris&eacute;
SolrQuery set Highlight Use Phrase Highlighter $value	si lon doit utiliser spanscorer pour coloriser les termes dune phrase uniquement si ils apparaissent dans la requête du document
SolrQuery SolrQuery set Highlight Use Phrase Highlighter	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Highlight Use Phrase Highlighter bool $flag	si l'on doit coloriser les termes d'une phrase uniquement si ils apparaissent dans la requ&ecirc;te
SolrQuery set Mlt $flag	true pour lactiver false pour le désactiver
SolrQuery SolrQuery set Mlt	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Mlt bool $flag	active ou d&eacute;sactive morelikethis
SolrQuery set Mlt Boost $value	à définir à true ou à false
SolrQuery SolrQuery set Mlt Boost	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Mlt Boost bool $flag	si la requ&ecirc;te doit &ecirc;tre stimul&eacute;e par la pertinence des termes
SolrQuery set Mlt Count $count	le nombre de documents similaires à retourner à chaque résultat
SolrQuery SolrQuery set Mlt Count	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Mlt Count int $count	d&eacute;finit le nombre de documents similaires &agrave; retourner &agrave; chaque r&eacute;sultat
SolrQuery set Mlt Max Num Tokens $value	le nombre maximal de motifs à analyser
SolrQuery SolrQuery set Mlt Max Num Tokens	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Mlt Max Num Tokens int $value	sp&eacute;cifie le nombre maximal de motifs &agrave; analyser
SolrQuery set Mlt Max Word Length $maxWordLength	la longueur maximale dun mot en dessus duquel les mots seront ignorés
SolrQuery SolrQuery set Mlt Max Word Length	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Mlt Max Word Length int $maxWordLength	d&eacute;finit la longueur maximale d'un mot
SolrQuery set Mlt Min Doc Frequency $minDocFrequency	la fréquence à partir de laquelle les mots seront ignorés si ils napparaissent pas dans les documents
SolrQuery SolrQuery set Mlt Min Doc Frequency	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Mlt Min Doc Frequency int $minDocFrequency	d&eacute;finit la fr&eacute;quence mltmindoc
SolrQuery set Mlt Min Term Frequency $minTermFrequency	la fréquence en dessous de laquelle les termes seront ignorés dans le document source
SolrQuery SolrQuery set Mlt Min Term Frequency	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Mlt Min Term Frequency int $minTermFrequency	d&eacute;finit la fr&eacute;quence en dessous de laquelle les termes seront ignor&eacute;s dans le document source
SolrQuery set Omit Header $flag	true pour exclure len-tête des résultats
SolrQuery SolrQuery set Omit Header	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Omit Header bool $flag	exclut l'en-t&ecirc;te des r&eacute;sultats retourn&eacute;s
SolrQuery set Query $query	la requête de recherche
SolrQuery SolrQuery set Query	retourne lobjet solrquery courant
SolrQuery SolrQuery set Query string $query	d&eacute;finit la requ&ecirc;te de recherche
SolrQuery set Rows $rows	le nombre maximal de lignes à retourner
SolrQuery SolrQuery set Rows	retourne lobjet solrquery courant
SolrQuery SolrQuery set Rows int $rows	sp&eacute;cifie le nombre maximal de lignes &agrave; retourner dans le r&eacute;sultat
SolrQuery set Show Debug Info $flag	si lon doit ou non afficher les informations de débogage
SolrQuery SolrQuery set Show Debug Info	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Show Debug Info bool $flag	drapeau pour afficher les informations de d&eacute;bogage
SolrQuery set Stats $flag	true pour activer le composant statistique false pour le désactiver
SolrQuery SolrQuery set Stats	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Stats bool $flag	active ou d&eacute;sactive le composant statistique
SolrQuery set Terms $flag	true pour lactiver false pour le désactiver
SolrQuery SolrQuery set Terms	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms bool $flag	active ou d&eacute;sactive le termscomponent
SolrQuery set Terms Include Lower Bound $flag	inclut le terme inférieure liée dans le jeu de résultat
SolrQuery SolrQuery set Terms Include Lower Bound	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms Include Lower Bound bool $flag	inclut le terme inf&eacute;rieure li&eacute;e dans le jeu de r&eacute;sultat
SolrQuery set Terms Include Upper Bound $flag	true ou false
SolrQuery SolrQuery set Terms Include Upper Bound	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms Include Upper Bound bool $flag	inclut le terme sup&eacute;rieure li&eacute;e dans le jeu de r&eacute;sultat
SolrQuery set Terms Limit $limit	le nombre maximal de termes à retourner
SolrQuery SolrQuery set Terms Limit	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms Limit int $limit	d&eacute;finit le nombre maximal de termes &agrave; retourner
SolrQuery set Terms Prefix $prefix	le préfixe
SolrQuery SolrQuery set Terms Prefix	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms Prefix string $prefix	restreint les termes correspondants qui commencent avec un pr&eacute;fixe donn&eacute;
SolrQuery set Terms Return Raw $value	true ou false
SolrQuery SolrQuery set Terms Return Raw	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms Return Raw bool $flag	retourne les caract&egrave;res brutes d'un terme index&eacute;
SolrQuery set Terms Sort $sortType	solrquery::terms_sort_index ou solrquery::terms_sort_count
SolrQuery SolrQuery set Terms Sort	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms Sort int $sortType	sp&eacute;cifie la fa&ccedil;on dont seront tri&eacute;s les termes retourn&eacute;s
SolrQuery set Terms Upper Bound $upperBound	le terme
SolrQuery SolrQuery set Terms Upper Bound	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Terms Upper Bound string $upperBound	d&eacute;finit le terme &agrave; partir duquel on doit stopper
SolrQuery set Time Allowed $timeAllowed	le temps allouée pour faire une recherche
SolrQuery SolrQuery set Time Allowed	retourne lobjet solrquery courant si la valeur retournée est utilisée
SolrQuery SolrQuery set Time Allowed int $timeAllowed	le temps allou&eacute;e pour faire une recherche
SolrResponse string get Digested Response	retourne la réponse xml sous la forme de données php linéarisées
SolrResponse string get Digested Response	r&eacute;cup&egrave;re la r&eacute;ponse xml sous la forme de donn&eacute;es php lin&eacute;aris&eacute;es
SolrResponse string get Http Status Message	retourne plus de détails sur le statut http
SolrResponse string get Http Status Message	r&eacute;cup&egrave;re plus de d&eacute;tails sur le statut http
SolrResponse string get Raw Response	retourne la réponse brute du serveur
SolrResponse string get Raw Response	r&eacute;cup&egrave;re la r&eacute;ponse brute du serveur
SolrResponse string get Raw Response Headers	retourne les en-têtes brutes de la réponse du serveur
SolrResponse string get Raw Response Headers	r&eacute;cup&egrave;re les en-t&ecirc;tes brutes de la r&eacute;ponse du serveur
SolrResponse string get Request Url	retourne lurl complète de la requête émise au serveur
SolrResponse string get Request Url	r&eacute;cup&egrave;re l'url compl&egrave;te de la requ&ecirc;te &eacute;mise au serveur
SolrResponse SolrObject get Response	retourne lobjet solrobject représentant la réponse xml du serveur
SolrResponse SolrObject get Response	r&eacute;cup&egrave;re l'objet solrobject repr&eacute;sentant la r&eacute;ponse xml du serveur
SolrResponse set Parse Mode $parser_mode	solrresponse::parse_solr_doc analyse les documents avec solrdocument
SolrResponse bool set Parse Mode	cette fonction retourne true en cas de succès ou false si une erreur survient
SolrResponse bool set Parse Mode int $parser_mode	d&eacute;finit le mode d'analyse
SolrServerException array get Internal Info	retourne un tableau contenant des informations internes sur le lieu où lexception a été émise
SolrServerException array get Internal Info	retourne des informations internes sur le lieu o&ugrave; l'exception a &eacute;t&eacute; &eacute;mise
SolrUtils digest Xml Response $xmlresponse	la réponse xml depuis le serveur solr
SolrUtils digest Xml Response $parse_mode	utilisez solrresponse::parse_solr_obj ou solrresponse::parse_solr_doc
SolrUtils SolrObject digest Xml Response	retourne lobjet solrobject représentant la réponse xml
SolrUtils SolrObject digest Xml Response string $xmlresponse int $parse_mode	analyse une r&eacute;ponse xml dans un solrobject
SolrUtils escape Query Chars $str	chaîne à protéger
SolrUtils string escape Query Chars	retourne la chaîne protégée ou false si une erreur survient
SolrUtils string escape Query Chars string $str	prot&egrave;ge une requ&ecirc;te
SphinxClient add Query $query	la chaîne de requête
SphinxClient add Query $index	un nom dindex ou des noms
SphinxClient int add Query	retourne un index dans le tableau de résultat qui sera retourné par sphinxclient::runqueries ou false sinon
SphinxClient int add Query string $query string $index string $comment	ajoute une requ&ecirc;te &agrave; un batch multiple
SphinxClient build Excerpts $words	les mots clés à mettre en valeur
SphinxClient build Excerpts $opts	un tableau associatif avec les options de mise en valeur
SphinxClient build Excerpts $docs	un tableau de chaînes avec le contenu des documents
SphinxClient build Excerpts $index	le nom dindex
SphinxClient array build Excerpts	retourne un tableau dextraits en cas de succès ou false si une erreur survient
SphinxClient array build Excerpts array $docs string $index string $words array $opts	construit les extraits de texte
SphinxClient build Keywords $query	une requête dont il faut extraire les mots-clés
SphinxClient build Keywords $hits	une option pour activer ou désactiver les statistiques de mots-clés
SphinxClient build Keywords $index	un index pour obtenir les configurations danalyse et les statistiques doccurrences
SphinxClient array build Keywords	retourne un tableau de tableaux associatifs avec les informations par mot-clé
SphinxClient array build Keywords string $query string $index bool $hits	extrait les mots-cl&eacute;s d'une requ&ecirc;te
SphinxClient bool close	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool close	ferme une connexion persistante ouverte
SphinxClient escape String $string	la chaîne à protéger
SphinxClient string escape String	retourne la chaîne protégée
SphinxClient string escape String string $string	prot&egrave;ge les caract&egrave;res sp&eacute;ciaux
SphinxClient string get Last Error	retourne le dernier message derreur ou une chaîne vide sil ny a pas eu derreur
SphinxClient string get Last Error	lit le dernier message d'erreur
SphinxClient string get Last Warning	retourne le dernier message dalerte ou une chaîne vide sil ny a pas eu dalerte
SphinxClient string get Last Warning	lit la derni&egrave;re alerte
SphinxClient bool open	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool open	&eacute;tablit une connexion persistante avec le serveur
SphinxClient void reset Filters	supprime tous les filtres
SphinxClient array run Queries	retourne false en cas déchec et un tableau de résultats sinon
SphinxClient array run Queries	ex&eacute;cute une s&eacute;rie de requ&ecirc;tes de recherche
SphinxClient set Field Weights $weights	un tableau associatif de noms de champ et leur poids
SphinxClient bool set Field Weights	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Field Weights array $weights	configure le poids des champs
SphinxClient set Filter $attribute	un nom dattribut
SphinxClient set Filter $exclude	sil vaut true les documents sont exclus du résultat
SphinxClient set Filter $values	un tableau de valeurs entières
SphinxClient bool set Filter	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Filter string $attribute array $values bool $exclude	ajoute un nouveau filtre entier
SphinxClient set Filter Float Range $min	valeur minimale
SphinxClient set Filter Float Range $attribute	un nom dattribut
SphinxClient set Filter Float Range $max	valeur maximale
SphinxClient set Filter Float Range $exclude	si cette option vaut true les documents associés seront exclus de la liste de résultats
SphinxClient bool set Filter Float Range	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Filter Float Range string $attribute float $min float $max bool $exclude	ajoute un nouveau filtre d&eacute;cimal
SphinxClient set Filter Range $min	valeur minimale
SphinxClient set Filter Range $attribute	un nom dattribut
SphinxClient set Filter Range $max	valeur maximale
SphinxClient set Filter Range $exclude	si cette option vaut true les documents associés seront exclus de la liste de résultats
SphinxClient bool set Filter Range	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Filter Range string $attribute int $min int $max bool $exclude	ajoute un nouveau filtre d'intervalle
SphinxClient set Geo Anchor $attrlong	nom de lattribut de longitude
SphinxClient set Geo Anchor $longitude	longitude dorigine en radians
SphinxClient set Geo Anchor $attrlat	nom de lattribut de latitude
SphinxClient set Geo Anchor $latitude	latitude dorigine en radians
SphinxClient bool set Geo Anchor	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Geo Anchor string $attrlat string $attrlong float $latitude float $longitude	configure le point d'origine pour les calculs g&eacute;ographiques
SphinxClient set Group By $attribute	une chaîne contenant le nom de lattribut de regroupement
SphinxClient set Group By $groupsort	une clause optionnelle qui contrôle le tri du groupe
SphinxClient set Group By $func	une constante qui choisit la fonction appliquée au groupe de résultats pour effectuer le regroupement
SphinxClient bool set Group By	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Group By string $attribute int $func string $groupsort	configure les attributs de regroupement
SphinxClient set Group Distinct $attribute	une chaîne contenant un nom dattribut de regroupement
SphinxClient bool set Group Distinct	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Group Distinct string $attribute	configure les calculs au niveau des valeurs distinctes
SphinxClient set IDRange $max	valeur maximale didentifiant
SphinxClient set IDRange $min	valeur minimale didentifiant
SphinxClient bool set IDRange	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set IDRange int $min int $max	configure l'intervalle de validit&eacute; des identifiants de document
SphinxClient set Index Weights $weights	un tableau associatif avec les noms des index comme clé et les poids comme valeur
SphinxClient bool set Index Weights	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Index Weights array $weights	configure les poids de chaque index
SphinxClient set Limits $limit	le nombre de résultats à retenir
SphinxClient set Limits $offset	loffset dans le résultat
SphinxClient set Limits $cutoff	utilisé pour des contrôles avancés de performances
SphinxClient set Limits $max_matches	contrôle le nombre de résultats que searchd va conserver en ram durant la recherche
SphinxClient bool set Limits	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Limits int $offset int $limit int $max_matches int $cutoff	configure l'offset et la limite du r&eacute;sultat
SphinxClient set Match Mode $mode	mode de recherche
SphinxClient bool set Match Mode	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Match Mode int $mode	configure le mode de recherche en texte int&eacute;gral
SphinxClient set Server $port	numéro de port
SphinxClient set Server $server	ip ou nom dhôte
SphinxClient bool set Server	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Server string $server int $port	configure l'h&ocirc;te et le port searchd
SphinxClient set Sort Mode $mode	mode de tri
SphinxClient bool set Sort Mode	cette fonction retourne true en cas de succès ou false si une erreur survient
SphinxClient bool set Sort Mode int $mode string $sortby	configure le mode de tri
SphinxClient array status	retourne un tableau associatif contenant les statistiques du serveur de recherche ou false si une erreur survient
SphinxClient array status	r&eacute;cup&egrave;re le statut de searchd
SphinxClient update Attributes $index	le nom de lindex à modifier
SphinxClient update Attributes $values	un tableau associatif contenant les identifiants de documents comme clé et un tableau dattribut avec le nom des attributs et leur valeur
SphinxClient update Attributes $attributes	un tableau de noms dattributs qui liste les attributs qui doivent être modifiées
SphinxClient int update Attributes	retourne le nombre de documents réellement modifiées 0 ou plus en cas de succès et false on failure
SphinxClient int update Attributes string $index array $attributes array $values bool $mva	modifie les attributs d'un document
SplDoublyLinkedList add $newval	la nouvelle valeur pour lindex index
SplDoublyLinkedList add $index	lindex où la nouvelle valeur doit être insérée
SplDoublyLinkedList void add mixed $index mixed $newval	ajoute / insert une nouvelle valeur &agrave; l'index sp&eacute;cifi&eacute;
SplDoublyLinkedList mixed current	la valeur du noeud courant
SplDoublyLinkedList mixed current	retourne l'entr&eacute;e courante du tableau
SplDoublyLinkedList mixed key	lindex du noeud courant
SplDoublyLinkedList mixed key	retourne l'index du noeud courant
SplDoublyLinkedList void next	se d&eacute;place &agrave; l'entr&eacute;e suivante
SplDoublyLinkedList offset Set $index	lindex à définir
SplDoublyLinkedList offset Set $newval	la nouvelle valeur pour l index
SplDoublyLinkedList void offset Set mixed $index mixed $newval	sp&eacute;cifie la nouvelle valeur de l'index
SplDoublyLinkedList offset Unset $index	lindex à effacer
SplDoublyLinkedList void offset Unset mixed $index	efface la valeur d'un index
SplDoublyLinkedList void prev	recule d'un &eacute;l&eacute;ment
SplDoublyLinkedList push $value	la valeur à ajouter
SplDoublyLinkedList void push mixed $value	ajoute un &eacute;l&eacute;ment &agrave; la fin de la liste
SplDoublyLinkedList void rewind	replace l'it&eacute;rateur au d&eacute;but
SplDoublyLinkedList unserialize $serialized	la chaine sérialisée
SplDoublyLinkedList void unserialize string $serialized	d&eacute;s&eacute;rialise la liste
SplDoublyLinkedList unshift $value	la valeur
SplDoublyLinkedList void unshift mixed $value	ajoute un &eacute;l&eacute;ment &agrave; la liste
SplDoublyLinkedList bool valid	retourne true si la liste contient encore des noeuds false sinon
SplDoublyLinkedList bool valid	v&eacute;rifie si la liste contient encore des noeuds
SplFileInfo construct $file_name	le chemin jusquau fichier
SplFileInfo string construct string $file_name	construit un nouvel objet splfileinfo
SplFileInfo int get ATime	retourne la date de dernier accès au fichier
SplFileInfo int get ATime	lit la date de dernier acc&egrave;s au fichier
SplFileInfo get Basename $suffix	un suffixe optionnel à omettre dans le nom de fichier retourné
SplFileInfo string get Basename	retourne le nom du fichier sans les informations de chemin
SplFileInfo string get Basename string $suffix	le le nom du fichier
SplFileInfo int get CTime	la date de dernier changement sous forme de timestamp unix
SplFileInfo int get CTime	lit la date de modification du fichier
SplFileInfo string get Extension	retourne une chaîne de caractères contenant lextension du fichier ou une chaîne vide si le fichier na pas dextension
SplFileInfo string get Extension	r&eacute;cup&egrave;re l'extension d'un fichier
SplFileInfo get File Info $class_name	le nom de la classe splfileinfo dérivée à utiliser
SplFileInfo SplFileInfo get File Info	un objet splfileinfo créé pour le fichier
SplFileInfo SplFileInfo get File Info string $class_name	obtient un objet splfileinfo pour un fichier
SplFileInfo string get Filename	le nom du fichier
SplFileInfo string get Filename	lit le nom du fichier
SplFileInfo int get Group	lidentifiant du groupe est un entier
SplFileInfo int get Group	lit le groupe d'appartenance du fichier
SplFileInfo int get Inode	retourne le numéro de inode du fichier
SplFileInfo int get Inode	lit le inode du fichier
SplFileInfo int get MTime	retourne au format timestamp unix
SplFileInfo int get MTime	lit la date de derni&egrave;re modification
SplFileInfo string get Path	retourne le chemin du fichier
SplFileInfo string get Path	le le chemin sans le nom de fichier
SplFileInfo int get Perms	retourne les droits dun fichier sous forme dentier
SplFileInfo int get Perms	lit les droits d'un fichier
SplFileInfo int get Size	la taille du fichier en octets
SplFileInfo int get Size	lit la taille d'un fichier
SplFileInfo string get Type	une string représentant le type de fichier
SplFileInfo string get Type	lit le type de fichier
SplFileInfo bool is Dir	retourne true si le fichier est un dossier et false sinon
SplFileInfo bool is Dir	indique si le fichier est un dossier
SplFileInfo bool is File	retourne true si le fichier existe et quil est un véritable fichier et non pas un lien et false sinon
SplFileInfo bool is File	indique si un fichier est un v&eacute;ritable fichier
SplFileInfo bool is Link	retourne true si le fichier est un lien et false sinon
SplFileInfo bool is Link	indique si un fichier est un lien
SplFileInfo bool is Readable	retourne true si le fichier est lisible et false sinon
SplFileInfo bool is Readable	indique si le fichier est lisible
SplFileInfo set File Class $class_name	le nom de la classe utilisée par splfileinfo::openfile()
SplFileInfo void set File Class string $class_name	configure la classe utilis&eacute;e avec splfileinfo::openfile
SplFileInfo set Info Class $class_name	le nom de la classe à utiliser
SplFileInfo void set Info Class string $class_name	configure la classe utilis&eacute;e par splfileinfo::getfileinfo et splfileinfo::getpathinfo
SplFileInfo void to String	retourne le chemin d'un fichier sous forme de cha&icirc;ne
SplFileObject string|array current	récupère la ligne courante dun fichier
SplFileObject string|array current	r&eacute;cup&egrave;re la ligne courante d'un fichier
SplFileObject bool fflush	cette fonction retourne true en cas de succès ou false si une erreur survient
SplFileObject bool fflush	&eacute;crit l'affichage dans le fichier
SplFileObject string fgetc	retourne une chaîne de caractères contenant un seul caractère lu depuis le fichier ou false si la fin du fichier a été atteinte
SplFileObject string fgetc	r&eacute;cup&egrave;re un caract&egrave;re depuis le fichier
SplFileObject fgetcsv $enclosure	le caractère utilisé pour entourer la valeur dun champ un seul caractère
SplFileObject fgetcsv $delimiter	le délimiteur de champs un seul caractère
SplFileObject fgetcsv $escape	le caractère déchappement un seul caractère
SplFileObject array fgetcsv	retourne un tableau indexé contenant tous les champs lus ou false si une erreur survient
SplFileObject array fgetcsv string $delimiter string $enclosure string $escape	r&eacute;cup&egrave;re une ligne depuis le fichier et l'analyse comme &eacute;tant des donn&eacute;es csv
SplFileObject string fgets	retourne une chaîne de caractères contenant la prochaine ligne dun fichier ou false si une erreur survient
SplFileObject string fgets	r&eacute;cup&egrave;re une ligne d'un fichier
SplFileObject fgetss $allowable_tags	paramètre optionnel pour spécifier les balises qui ne doivent pas être supprimées
SplFileObject string fgetss	retourne une chaîne de caractères contenant la prochaine ligne du fichier dont les balises html et php ont été supprimées ou false si une erreur survient
SplFileObject string fgetss string $allowable_tags	r&eacute;cup&egrave;re une ligne d'un fichier et supprime les balises html
SplFileObject flock $operation	le paramètre operation peut prendre une des constantes suivantes : lock_sh pour acquérir un verrou partagé lecture
SplFileObject flock $wouldblock	définit à true si le verrou doit être bloquant condition pour lerrno ewouldblock
SplFileObject bool flock	cette fonction retourne true en cas de succès ou false si une erreur survient
SplFileObject bool flock int $operation int $wouldblock	verrouille ou d&eacute;verrouille un fichier
SplFileObject int fpassthru	retourne le nombre de caractères lus et passés au buffer daffichage
SplFileObject int fpassthru	affiche toutes les donn&eacute;es en attente sur un pointeur de fichier
SplFileObject fputcsv $enclosure	le paramètre optionnel enclosure définit le caractère entourant le champ un seul caractère
SplFileObject fputcsv $escape	le paramètre optionnel escape définit le caractère déchappement un seul caractère
SplFileObject fputcsv $delimiter	le paramètre optionnel delimiter définit le délimiteur de champs un seul caractère
SplFileObject fputcsv $fields	un tableau de valeurs
SplFileObject int fputcsv	retourne la longueur de la chaîne écrite ou false si une erreur survient
SplFileObject int fputcsv array $fields string $delimiter string $enclosure string $escape	&eacute;crit un tableau sous la forme d'une ligne csv
SplFileObject fread $length	le nombre doctets à lire
SplFileObject string fread	retourne la chaîne lue depuis le fichier ou false si une erreur survient
SplFileObject string fread int $length	lit depuis un fichier
SplFileObject fseek $offset	la position
SplFileObject fseek $whence	les valeurs pour le paramètre whence sont : seek_set - la position sera égale à offset octets
SplFileObject int fseek	retourne 0 si le déplacement sest effectué avec succès -1 sinon
SplFileObject int fseek int $offset int $whence	se d&eacute;place &agrave; une position donn&eacute;e
SplFileObject array fstat	retourne un tableau contenant toutes les statistiques dun fichier ; le format de ce tableau est décrit en détail dans la page du manuel sur la fonction stat()
SplFileObject array fstat	r&eacute;cup&egrave;re les informations d'un fichier
SplFileObject int ftell	retourne la position du pointeur de fichier sous la forme dun entier ou false si une erreur survient
SplFileObject int ftell	retourne la position courant dans le fichier
SplFileObject ftruncate $size	la taille à couper
SplFileObject bool ftruncate	cette fonction retourne true en cas de succès ou false si une erreur survient
SplFileObject bool ftruncate int $size	coupe le fichier &agrave; une longueur donn&eacute;e
SplFileObject fwrite $length	si largument length est fourni lécriture sarrêtera après lécriture de length octets ou bien lorsque la fin de la chaîne de caractères sera atteinte ; suivant ce qui survient en premier
SplFileObject fwrite $str	la chaîne de caractères à écrire dans le fichier
SplFileObject int fwrite	retourne le nombre doctets écrits ou null si une erreur survient
SplFileObject int fwrite string $str int $length	&eacute;crit dans le fichier
SplFileObject array get Csv Control	retourne un tableau indexé contenant le caractère utilisé pour délimiter les champs ainsi que celui utilisé pour les entourer
SplFileObject array get Csv Control	r&eacute;cup&egrave;re les options pour csv
SplFileObject int get Flags	retourne un entier représentant les drapeaux
SplFileObject int get Flags	r&eacute;cup&egrave;re les drapeaux pour l'objet splfileobject
SplFileObject int get Max Line Len	retourne la longueur maximale dune ligne si elle a été définie avec la méthode splfileobject::setmaxlinelen() ; par défaut 0
SplFileObject int get Max Line Len	r&eacute;cup&egrave;re la longueur maximale d'une ligne
SplFileObject bool has Children	retourne toujours false
SplFileObject bool has Children	v&eacute;rifie si splfileobject a un fils
SplFileObject int key	retourne le numéro de la ligne courante
SplFileObject int key	r&eacute;cup&egrave;re le num&eacute;ro de la ligne courant
SplFileObject void rewind	r&eacute;initialise le fichier &agrave; la premi&egrave;re ligne
SplFileObject set Flags $flags	un masque de drapeaux à définir
SplFileObject void set Flags int $flags	d&eacute;finit les drapeaux pour l'objet splfileobject
SplFileObject set Max Line Len $max_len	la longueur maximale dune ligne
SplFileObject void set Max Line Len int $max_len	d&eacute;finit la longueur maximale d'une ligne
SplFileObject bool valid	retourne true si la fin nest pas atteinte false sinon
SplFileObject bool valid	v&eacute;rifie si la fin du fichier a &eacute;t&eacute; atteinte
SplFixedArray mixed current	la valeur de lélément courant
SplFixedArray mixed current	lit l'&eacute;l&eacute;ment courant du tableau &agrave; taille fixe
SplFixedArray from Array $array	la tableau à importer
SplFixedArray from Array $save_indexes	tente de préserver les index numérique du tableau original
SplFixedArray SplFixedArray from Array	retourne un objet splfixedarray avec le même contenu que le tableau passé en argument
SplFixedArray SplFixedArray from Array array $array bool $save_indexes	importe un tableau php dans un tableau &agrave; taille fixe
SplFixedArray int get Size	retourne la taille du tableau à taille fixe
SplFixedArray int get Size	lit la taille du tableau &agrave; taille fixe
SplFixedArray int key	lindex de la position courante
SplFixedArray int key	retourne l'index de la position courante
SplFixedArray void next	d&eacute;place l'it&eacute;rateur &agrave; l'&eacute;l&eacute;ment suivant
SplFixedArray offset Exists $index	lindex à vérifier
SplFixedArray bool offset Exists	true si lindex index existe sinon false
SplFixedArray bool offset Exists int $index	v&eacute;rifie si l'index demand&eacute; existe
SplFixedArray offset Unset $index	lindex de lélément à détruire
SplFixedArray void offset Unset int $index	d&eacute;truit l'&eacute;l&eacute;ment &agrave; un index donn&eacute;
SplFixedArray bool valid	retourne true si le tableau contient encore un élément false sinon
SplFixedArray bool valid	v&eacute;rifie si le tableau contient encore un &eacute;l&eacute;ment
SplHeap compare $value1	la valeur du premier noeud à comparer
SplHeap compare $value2	la valeur du second noeud à comparer
SplHeap int compare	le résultat de la comparaison ; un entier positif si value1 est plus grand que value2 0 sils sont égaux ou un entier négatif sinon
SplHeap int compare mixed $value1 mixed $value2	compare deux &eacute;l&eacute;ments
SplHeap insert $value	la valeur à insérer
SplHeap void insert mixed $value	ins&egrave;re un &eacute;l&eacute;ment dans le tas
SplHeap mixed key	lindex du noeud courant
SplHeap mixed key	retourne l'index du noeud courant
SplHeap void rewind	revient au d&eacute;but de l'it&eacute;rateur
SplHeap bool valid	retourne true si le tas contient encore des noeuds false sinon
SplHeap bool valid	v&eacute;rifie si le tas contient des noeuds
SplMaxHeap compare $value1	la valeur du premier noeud à comparer
SplMaxHeap compare $value2	la valeur du second noeud à comparer
SplMaxHeap int compare	le résultat de la comparaison ; un entier positif si la valeur value1 est plus grande que la valeur value2 0 si les valeurs sont égales et un entier négatif sinon
SplMaxHeap int compare mixed $value1 mixed $value2	compare deux &eacute;l&eacute;ments
SplObjectStorage attach $data	les données à associer avec l objet
SplObjectStorage attach $object	l objet à ajouter
SplObjectStorage void attach object $object mixed $data	ajoute un objet dans le stockage
SplObjectStorage contains $object	l objet à rechercher
SplObjectStorage bool contains	retourne true si l objet est dans le stockage et false sinon
SplObjectStorage bool contains object $object	v&eacute;rifie si un stockage contient un objet
SplObjectStorage int count	le nombre dobjets dans le stockage
SplObjectStorage int count	retourne le nombre d'objets dans le stockage
SplObjectStorage object current	l objet à la position courante
SplObjectStorage object current	retourne l'objet courant
SplObjectStorage get Hash $object	lobjet dont nous devons calculer lidentifiant
SplObjectStorage string get Hash	une chaîne de caractères représentant lidentifiant calculé
SplObjectStorage string get Hash object $object	calcule un identifiant unique pour les objets contenus
SplObjectStorage mixed get Info	les données associées avec la position courante
SplObjectStorage mixed get Info	retourne les donn&eacute;es associ&eacute;s &agrave; l'&eacute;l&eacute;ment en cours
SplObjectStorage int key	lindex de la position courante dans litérateur
SplObjectStorage int key	retourne l'index de l'objet courant
SplObjectStorage void next	passe au prochain &eacute;l&eacute;ment
SplObjectStorage offset Exists $object	l objet à rechercher
SplObjectStorage bool offset Exists	retourne true si lobjet existe et false sinon
SplObjectStorage bool offset Exists object $object	v&eacute;rifie si un objet existe dans le stockage
SplObjectStorage offset Get $object	l objet à rechercher
SplObjectStorage mixed offset Get	les données précédemment associées avec l objet
SplObjectStorage mixed offset Get object $object	retourne les donn&eacute;es associ&eacute;es &agrave; un objet
SplObjectStorage offset Unset $object	l objet à retirer
SplObjectStorage void offset Unset object $object	retire un objet du stockage
SplObjectStorage remove All $storage	le stockage contenant les éléments à retirer
SplObjectStorage void remove All SplObjectStorage $storage	retire les objets d'un stockage qui appartienne &agrave; un autre stockage
SplObjectStorage remove All Except $storage	le stockage contenant les éléments à ne pas supprimer du stockage courant
SplObjectStorage void remove All Except SplObjectStorage $storage	supprime tous les objets du stockage courant sauf ceux contenus dans d'autres stockages
SplObjectStorage void rewind	remet l'it&eacute;rateur au d&eacute;but
SplObjectStorage unserialize $serialized	la représentation linéarisée dun stockage
SplObjectStorage void unserialize string $serialized	d&eacute;lin&eacute;arise un stockage &agrave; partir de sa forme en cha&icirc;ne
SplObserver update $subject	lobjet splsubject notifiant lobservateur dune mise à jour
SplObserver void update SplSubject $subject	r&eacute;ception d'une mise &agrave; jour depuis un sujet
SplPriorityQueue insert $priority	la priorité associée
SplPriorityQueue insert $value	la valeur à insérer
SplPriorityQueue void insert mixed $value mixed $priority	ins&egrave;re un &eacute;l&eacute;ment dans la file d'attente
SplPriorityQueue mixed key	lindex du noeud courant
SplPriorityQueue mixed key	retourne l'index du noeud courant
SplPriorityQueue void next	se d&eacute;place sur le prochain noeud
SplPriorityQueue bool valid	retourne true si la file dattente contient encore des noeuds false sinon
SplPriorityQueue bool valid	v&eacute;rifie si la file d'attente contient encore des noeuds
SplQueue mixed dequeue	la valeur du noeud supprimé
SplQueue mixed dequeue	supprime un noeud de la file d'attente
SplQueue enqueue $value	la valeur à ajouter à la file dattente
SplQueue void enqueue mixed $value	ajoute un &eacute;l&eacute;ment &agrave; la file d'attente
SplSubject detach $observer	lobservateur splobserver à détacher
SplSubject void detach SplObserver $observer	d&eacute;tache un observateur
SQLite3 int changes	retourne un entier correspondant au nombre de lignes modifiées ou insérées effacées par la dernière requête sql
SQLite3 int changes	retourne le nombre de lignes modifi&eacute;es ou ins&eacute;r&eacute;es effac&eacute;es par la derni&egrave;re requ&ecirc;te sql
SQLite3 bool close	retourne true en cas de succès false si une erreur survient
SQLite3 bool close	ferme la connexion avec la base de donn&eacute;es
SQLite3 create Aggregate $argument_count	le nombre darguments pris par la fonction daggrégation sql
SQLite3 create Aggregate $step_callback	le nom de la fonction php ou de la fonction utilisateur à appliquer comme callback sur tous les éléments de laggrégation
SQLite3 create Aggregate $final_callback	le nom de la fonction php ou de la fonction utilisateur à appliquer comme callback à la fin des données de laggrégation
SQLite3 create Aggregate $name	nom de la fonction daggrégation sql à créer ou à redéfinir
SQLite3 bool create Aggregate	retourne true si la création réussie false si une erreur survient
SQLite3 bool create Aggregate string $name mixed $step_callback mixed $final_callback int $argument_count	enregistre une fonction php &agrave; utiliser comme fonction d'aggr&eacute;gation sqlite
SQLite3 create Collation $callback	le nom dune fonction php ou dune fonction définie par lutilisateur à appliquer comme fonction de rappel définissant le comportement du classement
SQLite3 create Collation $name	nom de la fonction de classement sql à créer ou à re-définir
SQLite3 bool create Collation	cette fonction retourne true en cas de succès ou false si une erreur survient
SQLite3 bool create Collation string $name callable $callback	enregistre une fonction php pour l'utiliser comme fonction de classement sql
SQLite3 create Function $name	nom de la fonction sql à créer ou à redéfinir
SQLite3 create Function $callback	le nom de la fonction php ou la fonction utilisateur à appliquer comme callback définissant le comportement de la fonction sql
SQLite3 create Function $argument_count	le nombre darguments que la fonction sql prend
SQLite3 bool create Function	retourne true si la fonction a été créée avec succès false si une erreur survient
SQLite3 bool create Function string $name mixed $callback int $argument_count	enregistre une fonction php &agrave; utiliser comme function scalaire sql
SQLite3 escape String $value	la chaîne à nettoyer
SQLite3 string escape String	retourne une chaîne nettoyée qui pourra être utilisée sans risque dans une requête sql
SQLite3 string escape String string $value	retourne une cha&icirc;ne nettoy&eacute;e
SQLite3 exec $query	la requête sql à exécuter typiquement une requête de type insert update ou delete
SQLite3 bool exec	retourne true si la requête a été exécutée avec succès false si une erreur survient
SQLite3 bool exec string $query	ex&eacute;cute une requ&ecirc;te sur une base de donn&eacute;es
SQLite3 int last Error Code	retourne un entier représentant le code erreur de la dernière requête ayant échouée
SQLite3 int last Error Code	retourne le code erreur de la derni&egrave;re requ&ecirc;te sql ayant &eacute;chou&eacute;e
SQLite3 string last Error Msg	retourne le message derreur en anglais de la dernière requête ayant échouée
SQLite3 string last Error Msg	retourne le message d'erreur en anglais de la derni&egrave;re requ&ecirc;te ayant &eacute;chou&eacute;e
SQLite3 int last Insert Row ID	retourne lidentifiant de la ligne corrspondant à la dernière requête de type insert effectuée sur la base de données
SQLite3 int last Insert Row ID	retourne l'identifiant de la ligne corrspondant &agrave; la derni&egrave;re requ&ecirc;te de type insert
SQLite3 prepare $query	la requête sql à préparer
SQLite3 SQLite3Stmt prepare	retourne un objet sqlite3stmt en cas de succès ou false si une erreur survient
SQLite3 SQLite3Stmt prepare string $query	pr&eacute;pare une requ&ecirc;te sql pour ex&eacute;cution
SQLite3 query $query	la requête sql à exécuter
SQLite3 SQLite3Result query	retourne un objet sqlite3result si la requête retourne des résultats
SQLite3 SQLite3Result query string $query	ex&eacute;cute une requ&ecirc;te sql
SQLite3 query Single $entire_row	par défaut cette fonction retourne la valeur de la première colonne retournée par la requête
SQLite3 query Single $query	la requête sql à exécuter
SQLite3 mixed query Single	retourne la valeur de la première colonne du résultat ou un tableau contenant toute la première ligne si le paramètre entire_row vaut true
SQLite3 mixed query Single string $query bool $entire_row	ex&eacute;cute une requ&ecirc;te et retourne un seul r&eacute;sultat
SQLite3 array version	retourne un tableau associatif contenant les clés versionstring et versionnumber
SQLite3 array version	retourne la version de la biblioth&egrave;que sqlite3
SQLite3Result fetch Array $mode	contrôle la façon dont la prochaine ligne doit être retournée à la fonction appelante
SQLite3Result array fetch Array	retourne une ligne du jeu de résultats sous la forme dun tableau associatif ou sous la forme dun tableau indexé ou les deux
SQLite3Result array fetch Array int $mode	r&eacute;cup&egrave;re un jeu de r&eacute;sultats sous la forme d'un tableau associatif
SQLite3Result bool finalize	retourne true
SQLite3Result bool finalize	ferme un jeu de r&eacute;sultats
SQLite3Result int num Columns	retourne le nombre de colonnes du jeu de résultats
SQLite3Result int num Columns	retourne le nombre de colonnes du jeu de r&eacute;sultats
SQLite3Result bool reset	retourne true si le jeu de résultats a été réinitialisé avec succès false si une erreur survient
SQLite3Result bool reset	repositionne le pointeur sur la premi&egrave;re ligne du jeu de r&eacute;sultats
SQLite3Stmt bind Param $type	le type de données du paramètre à lier
SQLite3Stmt bind Param $param	le paramètre à lier à la variable de requête
SQLite3Stmt bind Param $sql_param	une chaîne de caractères identifiant la variable de requête sur laquelle le paramètre doit être lié
SQLite3Stmt bool bind Param	retourne true si le paramètre est lié à la variable de requête false si une erreur survient
SQLite3Stmt bool bind Param string $sql_param mixed $param int $type	lie un param&egrave;tre &agrave; une variable de requ&ecirc;te
SQLite3Stmt bind Value $value	la valeur à lier à la variable de requête
SQLite3Stmt bind Value $sql_param	un chaîne de caractères identifiant la variable de requête sur laquelle la valeur doit être liée
SQLite3Stmt bind Value $type	le type de données de la valeur à lier
SQLite3Stmt bool bind Value	retourne true si la valeur a été liée à la variable de requête false si une erreur survient
SQLite3Stmt bool bind Value string $sql_param mixed $value int $type	lie la valeur d'un param&egrave;tre &agrave; une variable de requ&ecirc;te
SQLite3Stmt bool clear	retourne true si tous les paramètres actuellement liés ont été supprimés false si une erreur survient
SQLite3Stmt bool clear	supprime tous les param&egrave;tres actuellement li&eacute;s
SQLite3Stmt bool close	retourne true
SQLite3Stmt bool close	ferme une requ&ecirc;te pr&eacute;par&eacute;e
SQLite3Stmt SQLite3Result execute	retourne un objet sqlite3result si la requête préparée a été exécutée avec succès ou false si une erreur survient
SQLite3Stmt SQLite3Result execute	ex&eacute;cute une requ&ecirc;te pr&eacute;par&eacute;e
streamWrapper - construct	construit un nouveau gestionnaire de flux
streamWrapper bool dir rewinddir	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool dir rewinddir	remet au d&eacute;but une ressource de dossier
streamWrapper mkdir $mode	la valeur passée à mkdir()
streamWrapper mkdir $path	le dossier à créer
streamWrapper mkdir $options	un champ de valeurs telles que stream_mkdir_recursive
streamWrapper bool mkdir	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool mkdir string $path int $mode int $options	cr&eacute;e un dossier
streamWrapper rename $path_from	lurl du fichier en cours
streamWrapper rename $path_to	la nouvelle url path_from avec laquelle le fichier doit être renommé
streamWrapper bool rename	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool rename string $path_from string $path_to	renomme un fichier ou un dossier
streamWrapper rmdir $path	lurl du dossier à effacer
streamWrapper rmdir $options	un champ de bits telles que stream_mkdir_recursive
streamWrapper bool rmdir	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool rmdir string $path int $options	supprime un dossier
streamWrapper stream cast $cast_as	peut être une des valeurs parmi stream_cast_for_select si stream_select() est la fonction appelante stream_cast() ou stream_cast_as_stream si stream_cast() est appelée pour les autres cas
streamWrapper resource stream cast	doit retourner le flux sous-jacent utilisé par le gestionnaire et sinon false
streamWrapper resource stream cast int $cast_as	lit la ressource sous-jacente de flux
streamWrapper void stream close	ferme une ressource de flux
streamWrapper bool stream eof	doit retourner true si le curseur est à la fin du flux et que plus aucune donnée nest disponible et false sinon
streamWrapper bool stream eof	tests for end-of-file on a file pointer
streamWrapper bool stream flush	doit retourner true si les données en cache ont pu être sauvées correctement ou sil ny avait pas de données dans le cache ou false si les données nont pu être stockées
streamWrapper bool stream flush	exp&eacute;die le contenu
streamWrapper stream lock $operation	operation est une des suivantes : lock_sh pour obtenir le verrou partagé lecture lock_ex pour obtenir le verrou exclusif écriture lock_un pour lire le verrou partagé ou exclusif lock_nb si vous voulez que flock() bloque pour le verrouillage non supporté sur windows
streamWrapper bool stream lock	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool stream lock int $operation	verrouillage logique de fichiers
streamWrapper stream metadata $path	le chemin du fichier ou lurl pour laquelle changer les métadonnées
streamWrapper stream metadata $value	si option est stream_meta_touch : array consistant en deux arguments de la fonction touch()
streamWrapper bool stream metadata	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool stream metadata string $path int $option mixed $value	change les options du flux
streamWrapper stream open $options	contient les options supplémentaires pour le flux
streamWrapper stream open $opened_path	si le chemin path est ouvert correctement et que la constante stream_use_path est configurée via options alors opened_path doit contenir le chemin complet qui a été réellement ouvert
streamWrapper stream open $mode	le mode utilisée pour ouvrir le fichier tel que documenté pour fopen()
streamWrapper stream open $path	lurl qui est passée à la fonction originale
streamWrapper bool stream open	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool stream open string $path string $mode int $options string $opened_path	opens file or url
streamWrapper stream read $count	le nombre doctets qui ont pu être lus à partir de la position courante
streamWrapper string stream read	sil y a moins que count octets disponibles il faut en retourner autant que possible
streamWrapper string stream read int $count	lit dans le flux
streamWrapper stream seek $whence	les valeurs possibles sont : seek_set : la nouvelle position vaut offset octets
streamWrapper stream seek $offset	la position à rechercher dans le flux
streamWrapper bool stream seek	retourne true si la position a été mise à jour false sinon
streamWrapper bool stream seek int $offset int $whence	place le pointeur de flux &agrave; une position
streamWrapper stream set option $arg2	si option vaut stream_option_blocking : cette option nest pas active
streamWrapper stream set option $arg1	si option vaut stream_option_blocking : mode bloquant demandé 1 signifie bloquant 0 non-bloquant
streamWrapper stream set option $option	une des constantes parmi : stream_option_blocking cette méthode est appelée en réponse à stream_set_blocking() stream_option_read_timeout cette méthode est appelée en réponse à stream_set_timeout() stream_option_write_buffer cette méthode est appelée en réponse à stream_set_write_buffer()
streamWrapper bool stream set option	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool stream set option int $option int $arg1 int $arg2	change les options du flux
streamWrapper int stream tell	doit retourner la position courante dans le flux
streamWrapper int stream tell	lit la position courante dans un flux
streamWrapper unlink $path	lurl du fichier qui doit être effacé
streamWrapper bool unlink	cette fonction retourne true en cas de succès ou false si une erreur survient
streamWrapper bool unlink string $path	efface un fichier
streamWrapper url stat $path	le chemin du fichier ou lurl à analyser
streamWrapper url stat $flags	les options supplémentaires activées par lapi des flux
streamWrapper array url stat	doit retourne autant déléments que stat() retourne
streamWrapper array url stat string $path int $flags	lit les informations sur un fichier
SVM - construct	construit un nouvel objet svm
svm crossvalidate $number_of_folds	le nombre de jeux dans lequel les données doivent être divisées et testées
svm crossvalidate $problem	les données du problème
svm float crossvalidate	le pourcentage correct exprimé sous la forme dun nombre à virgule flottante dans lintervalle 0-1
svm float crossvalidate array $problem int $number_of_folds	test les param&egrave;tres d'entra&icirc;nement sur les sous-jeux de donn&eacute;es d&rsquo;entra&icirc;nement
SVM set Options $params	un tableau de paramètres dentraînement dont les clés sont les constantes svm
SVM bool set Options	retourne true en cas de succès et lance une exception svmexception si une erreur survient
SVM bool set Options array $params	d&eacute;finit des param&egrave;tres d'entra&icirc;nement
svm train $weights	les poids sont des ensembles optionnels de paramètres de pondération pour les différentes classes afin daider dans le comptage pour des jeux dentraînement déséquilibrés
svm train $problem	le problème peut être fourni de 3 façons
svm SVMModel train	retourne un modèle svmmodel qui peut être utilisé pour classificer les données précédemment non vues
svm SVMModel train array $problem array $weights	cr&eacute;e un mod&egrave;le svmmodel suivant les donn&eacute;es d'entra&icirc;nement
SVMModel bool check Probability Model	retourne un booléen
SVMModel bool check Probability Model	retourne true si le mod&egrave;le a des informations probablistes
SVMModel construct $filename	le nom du fichier pour le modèle sauvegardé à charger
SVMModel string construct	lance une exception svmexception si une erreur survient
SVMModel string construct string $filename	construit un nouvel objet svmmodel
SVMModel array get Labels	retourne un tableau de labels
SVMModel array get Labels	r&eacute;cup&egrave;re les labels utilis&eacute;s pour entra&icirc;ner le mod&egrave;le
SVMModel int get Nr Class	retourne le nombre de classes sous la forme dun entier
SVMModel int get Nr Class	retourne le nombre de classes utilis&eacute;es pour entra&icirc;ner le mod&egrave;le
SVMModel int get Svm Type	retourne le type svm sous la forme dun entier
SVMModel int get Svm Type	r&eacute;cup&egrave;re le type svm utilis&eacute; pour entra&icirc;ner le mod&egrave;le
SVMModel float get Svr Probability	retourne une valeur sigma
SVMModel float get Svr Probability	r&eacute;cup&egrave;re la valeur sigma pour les types de r&eacute;gression
SVMModel load $filename	le nom de fichier du modèle
SVMModel bool load	lance une exception svmexception en cas derreur
SVMModel bool load string $filename	charge un mod&egrave;le svm sauvegard&eacute;
SVMModel predict $data	le tableau à classifier
SVMModel float predict	retourne la valeur prédite
SVMModel float predict array $data	pr&eacute;dit une valeur pour des pr&eacute;c&eacute;dentes donn&eacute;es non vues
SVMModel save $filename	le fichier dans lequel nous souhaitons sauvegarder le modèle
SVMModel bool save	lance une exception svmexception si une erreur survient
SVMModel bool save string $filename	sauvegarde un mod&egrave;le dans un fichier
SWFVideoStream int get Num Frames	retourne le nombre de frames sous la forme dun entier
SWFVideoStream int get Num Frames	retourne le nombre de frames d'une vid&eacute;o
SyncEvent bool reset	true si lobjet a été réinitialisé avec succès false sinon
SyncEvent bool reset	r&eacute;initialise manuellement un &eacute;v&eacute;nement
SyncEvent wait $wait	le nombre de millisecondes à attendre que lévénement ne soit lancé
SyncEvent bool wait	un booléen valant true signifie que lévénement a été émis false sinon
SyncEvent bool wait integer $wait	attend que l'objet syncevent ne soit lanc&eacute;
SyncMutex lock $wait	le nombre de millisecondes à attendre pour lobtention du verrou exclusif
SyncMutex bool lock	un booléen ayant comme valeur true si le verrou est obtenu false sinon
SyncMutex bool lock integer $wait	obtient un verrou exclusif
SyncReaderWriter construct $autounlock	spécifie si lon doit déverrouiller automatiquement lobjet à la fin du script php
SyncReaderWriter construct $name	le nom de lobjet sil est nommé
SyncReaderWriter string construct	le nouvel objet syncreaderwriter
SyncReaderWriter string construct string $name bool $autounlock	construit un nouvel objet syncreaderwriter
SyncReaderWriter readlock $wait	le nombre de millisecondes à attente un verrou
SyncReaderWriter bool readlock	true si le verrou a été obtenu false sinon
SyncReaderWriter bool readlock integer $wait	obtiens un verrou de lecture
SyncReaderWriter bool readunlock	true si la libération du verrou a été un succès false sinon
SyncReaderWriter bool readunlock	lib&egrave;re un verrou de lecture
SyncReaderWriter writelock $wait	le nombre de millisecondes à attendre le verrou
SyncReaderWriter bool writelock	true si le verrou a été obtenu false sinon
SyncReaderWriter bool writelock integer $wait	obtiens un verrou d'&eacute;criture exclusif
SyncReaderWriter bool writeunlock	true si la libération a été un succès false sinon
SyncReaderWriter bool writeunlock	lib&egrave;re un verrou d'&eacute;criture
SyncSemaphore construct $autounlock	spécifie si lon doit ou non déverouiller automatiquement le sémaphore à la fin du script php
SyncSemaphore construct $name	le nom du sémaphore sil est nommé
SyncSemaphore construct $initialval	la valeur initiale du sémaphore
SyncSemaphore string construct	le nouvel objet syncsemaphore
SyncSemaphore string construct string $name integer $initialval bool $autounlock	construit un nouvel objet syncsemaphore
SyncSemaphore lock $wait	le nombre de millisecondes à attendre le sémaphore
SyncSemaphore bool lock	true si lopération de verouillage a été un succès false sinon
SyncSemaphore bool lock integer $wait	d&eacute;cr&eacute;mente le compteur de l'objet syncsemaphore ou attend
SyncSemaphore unlock $prevcount	retourne le compteur précédent du sémaphore
SyncSemaphore bool unlock	true si le déverouillage a été un succès false sinon
SyncSemaphore bool unlock integer $prevcount	incr&eacute;mente le compteur de l'objet syncsemaphore
Thread Thread get Current Thread	un objet représentant le thread actuellement en cours dexécution
Thread Thread get Current Thread	identification
Thread integer get Thread Id	une identité numérique
Thread integer get Thread Id	identification
Thread boolean is Joined	un booléen indiquant le statut de lopération
Thread boolean is Joined	d&eacute;tection de statut
Thread boolean is Started	un booléen indiquant le statut de lopération
Thread boolean is Started	d&eacute;tection de statut
Threaded integer count	manipulation
Threaded extend $class	la classe à étendre
Threaded bool extend	un booléen indiquant le succès de lopération
Threaded bool extend string $class	manipulation pendant l'ex&eacute;cution
Threaded from $args	les arguments à passer au constructeur
Threaded from $construct	le constructeur à utiliser pour lobjet anonyme
Threaded from $run	la closure à utiliser pour ::run
Threaded Threaded from	un nouvel objet anonyme threaded
Threaded Threaded from Closure $run Closure $construct array $args	cr&eacute;ation
Threaded array get Termination Info	un tableau contenant les informations de lerreur de lobjet référencé
Threaded array get Termination Info	d&eacute;tection d'erreur
Threaded boolean is Waiting	un booléen indiquant le statut
Threaded boolean is Waiting	d&eacute;tection de statut
Threaded boolean lock	un booléen indiquant le succès
Threaded boolean lock	synchronisation
Threaded merge $from	les données à fusionner
Threaded merge $overwrite	ecrase les clés existantes ; par défaut vaut true
Threaded boolean merge	un booléen indiquant le succès
Threaded boolean merge mixed $from bool $overwrite	manipulation
Threaded boolean notify	un booléen indiquant le succès
Threaded boolean notify	synchronisation
Threaded boolean pop	le dernier élément de la table des propriétés de lobjet
Threaded boolean pop	manipulation
Threaded synchronized	liste variable darguments à utiliser comme argument de la fonction
Threaded synchronized $block	le bloc de code à exécuter
Threaded mixed synchronized	la valeur retournée du bloc
Threaded mixed synchronized Closure $block	synchronisation
Threaded boolean unlock	un booléen indiquant le succès
Threaded boolean unlock	synchronisation
tidy construct $config	la configuration config peut être passée sous forme de tableau ou de chaîne de caractères
tidy construct $encoding	le paramètre encoding configure lencodage pour les documents dentrée et de sortie
tidy construct $use_include_path	indique sil faut rechercher le fichier dans l include_path
tidy construct $filename	si le paramètre filename est fourni cette fonction lira également ce fichier et initialisera lobjet avec ce fichier agissant de la même façon que la fonction tidy_parse_file()
tidy string construct	retourne un nouvel objet tidy
tidy string construct string $filename mixed $config string $encoding bool $use_include_path	construit un nouvel objet tidy
tidyNode tidyNode get Parent	retourne un tidynode si le noeud a un parent ou null sinon
tidyNode tidyNode get Parent	retourne le noeud parent du noeud courant
tidyNode bool has Children	retourne true si le noeud a des enfants false sinon
tidyNode bool has Children	indique si le noeud a des enfants
tidyNode bool has Siblings	retourne true si le noeud a des frères false sinon
tidyNode bool has Siblings	indique si le noeud a des fr&egrave;res
tidyNode bool is Asp	retourne true si le noeud est du code asp false sinon
tidyNode bool is Asp	v&eacute;rifie si le noeud est du code asp
tidyNode bool is Html	retourne true si le noeud est une partie de document html false sinon
tidyNode bool is Html	indique si le noeud est une partie d'un document html
tidyNode bool is Jste	retourne true si le noeud est du jste false sinon
tidyNode bool is Jste	indique si ce noeud est jste
tidyNode bool is Php	retourne true si le noeud courant est du code php false sinon
tidyNode bool is Php	indique si un noeud contient du code php
tidyNode bool is Text	retourne true si le noeud représente un texte false sinon
tidyNode bool is Text	indique si le noeud repr&eacute;sente du texte sans balise
TokyoTyrant add $increment	lincrément
TokyoTyrant add $type	la constante tokyotyrant::rdbrec_int ou la constante tokyotyrant::rdbrec_dbl
TokyoTyrant add $key	la clé
TokyoTyrant number add	retourne la nouvelle valeur en cas de succès
TokyoTyrant number add string $key number $increment int $type	ajoute une cl&eacute; num&eacute;rique
TokyoTyrant connect $options	les options de connexion : délai dexpiration par défaut 5
TokyoTyrant connect $port	le port
TokyoTyrant connect $host	le nom dhôte
TokyoTyrant TokyoTyrant connect	retourne lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrant connect string $host int $port array $options	connexion &agrave; une base de donn&eacute;es
TokyoTyrant connect Uri $uri	luri vers la base de données
TokyoTyrant TokyoTyrant connect Uri	retourne lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrant connect Uri string $uri	connexion &agrave; une base de donn&eacute;es en utilisant une uri
TokyoTyrant copy $path	chemin vers le dossier où sera copiée la base de données
TokyoTyrant TokyoTyrant copy	cette méthode retourne lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrant copy string $path	copie la base de donn&eacute;es
TokyoTyrant get $keys	une clé ou un tableau de clés
TokyoTyrant mixed get	retourne une chaîne de caractères ou un tableau basé sur les paramètres fournis
TokyoTyrant mixed get mixed $keys	le but de get
TokyoTyrant TokyoTyrantIterator get Iterator	cette méthode retourne un objet tokyotyrantiterator et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrantIterator get Iterator	r&eacute;cup&egrave;re un it&eacute;rateur
TokyoTyrant put $keys	une clé ou un tableau de paires clé-valeur
TokyoTyrant put $value	la valeur lorsquune seule clé est utilisée
TokyoTyrant TokyoTyrant put	cette méthode retourne une référence à lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrant put mixed $keys string $value	ins&egrave;re des valeurs
TokyoTyrant put Cat $value	la valeur si une seule clé est fournie
TokyoTyrant put Cat $keys	une clé ou un tableau de paires clé-valeur
TokyoTyrant TokyoTyrant put Cat	cette méthode retourne une référence à lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrant put Cat mixed $keys string $value	concat&egrave;ne un enregistrement
TokyoTyrant put Keep $value	la valeur sous la forme dune chaîne de caractères
TokyoTyrant put Keep $keys	une clé ou un tableau de paires clé-valeur
TokyoTyrant TokyoTyrant put Keep	cette méthode retourne une référence à lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrant put Keep mixed $keys string $value	enregistre un nouvel enregistrement
TokyoTyrant put Shl $key	une clé
TokyoTyrant put Shl $width	la taille de lenregistrement
TokyoTyrant put Shl $value	la valeur à concaténer
TokyoTyrant mixed put Shl	cette méthode retourne une référence à lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant mixed put Shl string $key string $value int $width	concat&egrave;ne un enregistrement
TokyoTyrant restore $timestamp	timestamp de départ en microsecondes
TokyoTyrant restore $check_consistency	si la consistance doit être vérifiée
TokyoTyrant restore $log_dir	dossier dans lequel se trouve le fichier log
TokyoTyrant mixed restore	cette méthode retourne lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant mixed restore string $log_dir int $timestamp bool $check_consistency	restaure la base de donn&eacute;es
TokyoTyrant set Master $host	nom dhôte du maître de réplication
TokyoTyrant set Master $check_consistency	si la consistance doit être vérifiée
TokyoTyrant set Master $port	le port du maître de réplication
TokyoTyrant set Master $timestamp	timestamp de départ en microsecondes
TokyoTyrant mixed set Master	cette méthode retourne lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant mixed set Master string $host int $port int $timestamp bool $check_consistency	d&eacute;finit le ma&icirc;tre de r&eacute;plication
TokyoTyrant mixed sync	cette méthode retourne lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant mixed sync	synchronise la base de donn&eacute;es
TokyoTyrant tune $timeout	la valeur du délai dexpiration
TokyoTyrant tune $options	masque doptions à régler
TokyoTyrant TokyoTyrant tune	cette méthode retourne une référence à lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrant TokyoTyrant tune float $timeout int $options	r&egrave;gle les valeurs de connexion
TokyoTyrantIterator mixed key	retourne la clé courante en cas de succès false si une erreur survient
TokyoTyrantIterator mixed key	retourne la cl&eacute; courante
TokyoTyrantIterator mixed next	retourne la prochaine valeur en cas de succès false si une erreur survient
TokyoTyrantIterator mixed next	se d&eacute;place sur la prochaine cl&eacute;
TokyoTyrantIterator void rewind	r&eacute;initialise l'it&eacute;rateur
TokyoTyrantIterator bool valid	retourne true si lélément courant est valide false sinon
TokyoTyrantIterator bool valid	r&eacute;initialise l'it&eacute;rateur
TokyoTyrantQuery construct $table	un objet tokyotyranttable avec une connexion active à une base de données
TokyoTyrantQuery TokyoTyrantTable construct	retourne un nouvel objet tokyotyrantquery et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrantQuery TokyoTyrantTable construct TokyoTyrantTable $table	construit une nouvelle requ&ecirc;te
TokyoTyrantQuery int count	retourne le nombre denregistrements quune requête retourne et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrantQuery int count	compte les enregistrements
TokyoTyrantQuery array current	retourne la ligne courante
TokyoTyrantQuery array current	retourne l'&eacute;l&eacute;ment courant
TokyoTyrantQuery string hint	cette méthode retourne toujours une chaîne de caractères
TokyoTyrantQuery string hint	r&eacute;cup&egrave;re les informations sur une requ&ecirc;te
TokyoTyrantQuery meta Search $type	une constante parmi les constantes tokyotyrant::rdbms_*
TokyoTyrantQuery meta Search $queries	un tableau dobjets tokyotyrantquery
TokyoTyrantQuery array meta Search	retourne les lignes correspondantes et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrantQuery array meta Search array $queries int $type	r&eacute;cup&egrave;re des enregistrements avec plusieurs requ&ecirc;tes
TokyoTyrantQuery array next	retourne la prochaine ligne et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrantQuery array next	d&eacute;place l'it&eacute;rateur sur la prochaine entr&eacute;e
TokyoTyrantQuery TokyoTyrantQuery out	cette méthode retourne lobjet courant et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrantQuery TokyoTyrantQuery out	supprime des enregistrements en se basant sur une requ&ecirc;te
TokyoTyrantQuery array search	retourne les lignes correspondantes et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrantQuery array search	cherche des enregistrements
TokyoTyrantQuery set Order $name	le nom de la colonne à utiliser pour définir lordre
TokyoTyrantQuery set Order $type	le paramètre type peut être une des constantes suivantes : tokyotyrant::rdbqo_strasc - chaîne de caractères croissant tokyotyrant::rdbqo_strdesc - chaîne de caractères décroissant tokyotyrant::rdbqo_numasc - numérique croissant tokyotyrant::rdbqo_numdesc - chaîne de caractères décroissant
TokyoTyrantQuery mixed set Order	cette méthode retourne lobjet courant
TokyoTyrantQuery mixed set Order string $name int $type	d&eacute;finit l'ordre des r&eacute;sultats
TokyoTyrantQuery bool valid	retourne true si lélément courant est valide false sinon
TokyoTyrantQuery bool valid	v&eacute;rifie la validit&eacute; de l'&eacute;l&eacute;ment courant
TokyoTyrantTable add $increment	lincrément
TokyoTyrantTable add $type	soit la constante tokyotyrant::rdb_recint soit la constante tokyotyrant::rdb_recdbl
TokyoTyrantTable add $key	la clé
TokyoTyrantTable void add string $key mixed $increment string $type	ajoute un enregistrement
TokyoTyrantTable get $keys	la clé primaire soit une chaîne de caractères soit un entier
TokyoTyrantTable array get	retourne la ligne sous la forme dun tableau
TokyoTyrantTable array get mixed $keys	r&eacute;cup&egrave;re une ligne
TokyoTyrantTable TokyoTyrantIterator get Iterator	cette méthode retourne un objet tokyotyrantiterator et lance une exception tokyotyrantexception si une erreur survient
TokyoTyrantTable TokyoTyrantIterator get Iterator	r&eacute;cup&egrave;re un it&eacute;rateur
TokyoTyrantTable out $keys	une clé ou un tableau de clés
TokyoTyrantTable void out mixed $keys	supprime un enregistement
TokyoTyrantTable put Cat $columns	tableau contenant les données des lignes
TokyoTyrantTable put Cat $key	la clé primaire de la ligne ou null
TokyoTyrantTable void put Cat string $key array $columns	concat&egrave;ne une ligne
TokyoTyrantTable put Keep $columns	tableau contenant les données de la ligne
TokyoTyrantTable put Keep $key	la clé primaire de la ligne ou null
TokyoTyrantTable void put Keep string $key array $columns	enregistre un nouvel enregistrement
TokyoTyrantTable put Nr $value	la valeur si une seule clé est utilisée
TokyoTyrantTable put Nr $keys	une clé ou un tableau de paires clé / valeur
TokyoTyrantTable void put Nr mixed $keys string $value	enregistre une valeur
TokyoTyrantTable put Shl $width	la taille de lenregistrement
TokyoTyrantTable put Shl $key	la clé
TokyoTyrantTable put Shl $value	la valeur à concaténer
TokyoTyrantTable void put Shl string $key string $value int $width	concat&egrave;ne un enregistrement
V8Js construct $object_name	le nom de lobjet passé à javascript
V8Js construct $extensions	liste des extensions enregistrées en utilisant la méthode v8js::registerextension() qui devraient être disponibles dans le contexte javascript de lobjet v8js créé
V8Js construct $report_uncaught_exceptions	contrôle si les exceptions javascript non attrapées sont reportées immédiatement ou non
V8Js construct $variables	une liste des variables php qui seront disponibles en javascript
V8Js string construct	retourne un nouvel objet de contexte v8js
V8Js string construct string $object_name array $variables array $extensions bool $report_uncaught_exceptions	construit un nouvel objet v8js
V8Js execute String $flags	drapeaux dexécution
V8Js execute String $script	la chaîne à exécuter
V8Js execute String $identifier	identifiant pour le code exécuté
V8Js mixed execute String	retourne la dernière variable instanciée dans le code javascript convertie en variable php de type correspondant
V8Js mixed execute String string $script string $identifier int $flags	ex&eacute;cute une cha&icirc;ne comme du code javascript
V8Js array get Extensions	retourne un tableau contenant les extensions enregistrées ou un tableau vide sil ny en a aucune
V8Js array get Extensions	retourne un tableau contenant les extensions enregistr&eacute;es
V8Js register Extension $auto_enable	si défini à true lextension sera activée automatiquement dans tous les contextes v8js
V8Js register Extension $extension_name	nom de lextension à enregistrer
V8Js register Extension $dependencies	un tableau de noms dextensions dont lextension en cours denregistrement dépend
V8Js register Extension $script	le code javascript à enregistrer
V8Js bool register Extension	retourne true si lextension a été enregistrée avec succès false sinon
V8Js bool register Extension string $extension_name string $script array $dependencies bool $auto_enable	enregistre des extensions javascript pour v8js
WeakMap - construct	construit un nouveau map
WeakMap mixed current	la valeur actuellement itérée
WeakMap mixed current	retourne la valeur courante de l'it&eacute;ration
WeakMap void next	avance jusqu'au prochain &eacute;l&eacute;ment du map
WeakMap offset Exists $object	lobjet à vérifier
WeakMap bool offset Exists	retourne true si lobjet est contenu dans le map false sinon
WeakMap bool offset Exists object $object	v&eacute;rifie si un objet est dans le map
WeakMap offset Unset $object	lobjet clé à supprimer depuis le map
WeakMap void offset Unset object $object	supprime une entr&eacute;e depuis le map
WeakMap void rewind	r&eacute;initialise l'it&eacute;rateur au d&eacute;but du map
Weakref bool acquire	retourne true si la référence est valide et peut être convertie en une référence forte false sinon
Weakref bool acquire	acqui&egrave;re une forte r&eacute;f&eacute;rence sur un objet
Weakref object get	retourne lobjet si la référence est toujours valide null sinon
Weakref object get	retourne l'objet point&eacute; par sa r&eacute;f&eacute;rence forte
Weakref bool release	retourne true si la référence a été précédemment acquise et ainsi a pu être libérée false sinon
Weakref bool release	lib&egrave;re une r&eacute;f&eacute;rence pr&eacute;c&eacute;demment acquise
Weakref bool valid	retourne true si lobjet existe toujours et ainsi est toujours accessibe via la méthode weakref::get() false sinon
Weakref bool valid	v&eacute;rifie si l'objet r&eacute;f&eacute;renc&eacute; existe toujours
Worker integer get Stacked	une valeur numérique
Worker integer get Stacked	analyse de pile
Worker boolean is Shutdown	un booléen indiquant le statut de lopération
Worker boolean is Shutdown	d&eacute;tection de statut
Worker boolean shutdown	synchronisation
Worker stack $work	un objet threadé à exécuter par le worker référencé
Worker integer stack	la nouvelle taille de la file
Worker integer stack Threaded $work	file d'attente
XMLDiff\Base construct $nsname	espace de noms personnalisé pour le document de différence
XMLDiff\Base string construct string $nsname	constructeur
XMLDiff\Base diff $from	document xml source
XMLDiff\Base diff $to	document xml cible
XMLDiff\Base mixed diff	dépend de limplémentation
XMLDiff\Base mixed diff mixed $from mixed $to	produit la diff&eacute;rence de deux documents xml
XMLDiff\DOM diff $to	objet cible domdocument
XMLDiff\DOM diff $from	objet source domdocument
XMLDiff\DOM DOMDocument diff	un nouvel objet domdocument contenant les informations de différence ou null
XMLDiff\DOM DOMDocument diff DOMDocument $from DOMDocument $to	trouve la diff&eacute;rence de deux objets domdocument
XMLDiff\File diff $to	chemin vers le document cible
XMLDiff\File diff $from	chemin vers le document source
XMLDiff\File string diff	une chaîne contenant la différence des deux documents xml ou null
XMLDiff\File string diff string $from string $to	effectue la diff&eacute;rence entre deux documents xml
XMLDiff\File merge $src	chemin vers le document xml source
XMLDiff\File merge $diff	chemin vers le document xml contenant les informations de différence
XMLDiff\File string merge	une chaîne de caractères représentant le nouveau document xml ou null
XMLDiff\File string merge string $src string $diff	fusionne un document xml
XMLDiff\Memory diff $from	document xml source
XMLDiff\Memory diff $to	document xml cible
XMLDiff\Memory string diff	une chaîne contenant la différence entre les deux documents xml ou null
XMLDiff\Memory string diff string $from string $to	diff&eacute;rence entre deux documents xml
XMLDiff\Memory merge $diff	document xml contenant les informations de différence
XMLDiff\Memory merge $src	document xml source
XMLDiff\Memory string merge	une chaîne contenant le nouveau document xml ou null
XMLDiff\Memory string merge string $src string $diff	fusionne un document xml
XMLReader get Attribute $name	le nom de lattribut
XMLReader string get Attribute	la valeur de lattribut ou null si lattribut avec le name donné nexiste pas ou nest pas positionné sur le nœud dun élément
XMLReader string get Attribute string $name	r&eacute;cup&egrave;re la valeur d'un attribut par nom
XMLReader get Attribute Ns $localName	le nom local
XMLReader get Attribute Ns $namespaceURI	lespace de nom uri
XMLReader string get Attribute Ns	la valeur de lattribut une chaîne de caractères vide avant php 5
XMLReader string get Attribute Ns string $localName string $namespaceURI	r&eacute;cup&egrave;re la valeur d'un attribut par nom local et uri
XMLReader get Parser Property $property	une des constantes danalyseur
XMLReader bool get Parser Property	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool get Parser Property int $property	indique si la propri&eacute;t&eacute; sp&eacute;cifi&eacute;e a &eacute;t&eacute; fix&eacute;e
XMLReader bool is Valid	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool is Valid	indique si le document analys&eacute; est valide
XMLReader lookup Namespace $prefix	chaînes de caractères contenant le préfixe
XMLReader string lookup Namespace	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader string lookup Namespace string $prefix	consulte l'espace de nom pour un pr&eacute;fixe
XMLReader move To Attribute $name	le nom de lattribut
XMLReader bool move To Attribute	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool move To Attribute string $name	d&eacute;place un curseur &agrave; un attribut nomm&eacute;
XMLReader move To Attribute No $index	la position de lattribut
XMLReader bool move To Attribute No	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool move To Attribute No int $index	d&eacute;place le curseur &agrave; un attribut par index
XMLReader bool move To First Attribute	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool move To First Attribute	positionne le curseur sur le premier attribut
XMLReader next $localname	le nom du prochaine noeud à se déplacer
XMLReader bool next	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool next string $localname	d&eacute;place le curseur au prochain noeud en sautant tous les sous arbres
XMLReader open $options	un masque de constante libxml_*
XMLReader open $URI	uri pointant vers le document
XMLReader open $encoding	lencodage du document ou null
XMLReader bool open	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool open string $URI string $encoding int $options	fixe le uri contenant le xml &agrave; analyser
XMLReader bool read	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool read	d&eacute;place le curseur sur le prochain noeud du document
XMLReader string read Outer XML	lit le code xml du noeud courant y compris lui-même sous forme de chaîne
XMLReader string read Outer XML	lit le code xml du noeud courant y compris lui-m&ecirc;me
XMLReader string read String	retourne le contenu du noeud courant sous forme de chaîne ou une chaîne vide si une erreur survient
XMLReader string read String	lit le contenu du noeud courant sous forme de cha&icirc;ne
XMLReader set Relax NGSchema $filename	nom du fichier ou uri pointant vers le schéma relaxng
XMLReader bool set Relax NGSchema	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool set Relax NGSchema string $filename	fixe le nom du fichier ou l'uri pour le sch&eacute;ma relaxng
XMLReader set Schema $filename	le nom du fichier de schéma xsd
XMLReader bool set Schema	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool set Schema string $filename	valide le document avec xsd
XMLReader xml $options	un masque de constantes libxml_*
XMLReader xml $source	chaîne de caractères contenant le xml à analyser
XMLReader xml $encoding	lencodage du document ou null
XMLReader bool xml	cette fonction retourne true en cas de succès ou false si une erreur survient
XMLReader bool xml string $source string $encoding int $options	fixe les donn&eacute;es contenant le xml &agrave; analyser
XSLTProcessor get Parameter $namespaceURI	luri de lespace de noms du paramètre xslt
XSLTProcessor get Parameter $localName	le nom local du paramètre xslt
XSLTProcessor string get Parameter	la valeur du paramètre sous la forme dune chaîne de caractères ou false sil nest pas défini
XSLTProcessor string get Parameter string $namespaceURI string $localName	r&eacute;cup&egrave;re la valeur d'un param&egrave;tre
XSLTProcessor bool has Exslt Support	cette fonction retourne true en cas de succès ou false si une erreur survient
XSLTProcessor bool has Exslt Support	indique si php utilise exslt
XSLTProcessor register PHPFunctions $restrict	utilisez ce paramètre pour restreindre les fonctions php accessibles depuis xslt
XSLTProcessor void register PHPFunctions mixed $restrict	active l'utilisation de php dans les feuilles de styles xslt
XSLTProcessor set Parameter $name	le nom local du paramètre xslt
XSLTProcessor set Parameter $value	la nouvelle valeur du paramètre xslt
XSLTProcessor set Parameter $namespace	luri de lespace de noms du paramètre xslt
XSLTProcessor set Parameter $options	un tableau de paire nom = > valeur
XSLTProcessor bool set Parameter	cette fonction retourne true en cas de succès ou false si une erreur survient
XSLTProcessor bool set Parameter string $namespace string $name string $value	d&eacute;finit la valeur d'un param&egrave;tre
XSLTProcessor transform To Doc $doc	le noeud à transformer
XSLTProcessor DOMDocument transform To Doc	le domdocument résultant ou false si une erreur survient
XSLTProcessor DOMDocument transform To Doc DOMNode $doc	transforme en un document dom
XSLTProcessor transform To XML $doc	lobjet domdocument ou simplexmlelement a transformer
XSLTProcessor string transform To XML	le résultat de la transformation en tant que chaîne de caractères ou false si une erreur survient
XSLTProcessor string transform To XML object $doc	transforme en xml
Yaf_Action_Abstract mixed execute mixed $arg	point d'entr&eacute;e de l'action
Yaf_Action_Abstract Yaf_Controller_Abstract get Controller	une instance de la classe yaf_controller_abstract
Yaf_Action_Abstract Yaf_Controller_Abstract get Controller	r&eacute;cup&egrave;re l'objet contr&ocirc;leur
Yaf_Application void app	r&eacute;cup&egrave;re une instance de l'application
Yaf_Application bootstrap $bootstrap	une instance yaf_bootstrap_abstract
Yaf_Application void bootstrap Yaf_Bootstrap_Abstract $bootstrap	appelle bootstrap
Yaf_Application construct $config	un chemin vers le fichier de configuration ini ou un tableau de configuration
Yaf_Application construct $envrion	la section à charger comme configuration finale
Yaf_Application mixed construct mixed $config string $envrion	constructeur de yaf_application
Yaf_Application execute	paramètres à passer à la fonction de rappel
Yaf_Application execute $entry	une fonction de rappel valide
Yaf_Application void execute callable $entry	ex&eacute;cute une fonction de rappel
Yaf_Application array get Modules	r&eacute;cup&egrave;re les noms des modules d&eacute;finis
Yaf_Application void run	d&eacute;marre yaf_application
Yaf_Config_Ini array to Array	retourne un tableau php
Yaf_Config_Simple array to Array	retourne un tableau php
Yaf_Controller_Abstract forward $module	nom du module de destination ; si null est fourni alors le nom du module par défaut sera utilisé
Yaf_Controller_Abstract forward $action	nom de laction de destination
Yaf_Controller_Abstract forward $controller	nom du contrôleur de destination
Yaf_Controller_Abstract forward $paramters	arguments dappel
Yaf_Controller_Abstract void forward string $action array $paramters	transf&egrave;re vers une autre action
Yaf_Controller_Abstract Yaf_Request_Abstract get Request	une instance de la classe yaf_request_abstract
Yaf_Controller_Abstract Yaf_Request_Abstract get Request	r&eacute;cup&egrave;re l'objet de la demande courante
Yaf_Controller_Abstract Yaf_Response_Abstract get Response	une instance de la classe yaf_response_abstract
Yaf_Controller_Abstract Yaf_Response_Abstract get Response	r&eacute;cup&egrave;re l'objet de la r&eacute;ponse courante
Yaf_Controller_Abstract Yaf_View_Interface get View	r&eacute;cup&egrave;re le moteur de visualisation
Yaf_Controller_Abstract redirect $url	une url
Yaf_Controller_Abstract bool redirect	retourne un booléen
Yaf_Controller_Abstract bool redirect string $url	redirige vers une url
Yaf_Dispatcher auto Render $flag	booléen note : depuis la version 2
Yaf_Dispatcher Yaf_Dispatcher auto Render bool $flag	active / d&eacute;sactive le rendu automatique
Yaf_Dispatcher catch Exception $flag	un booléen
Yaf_Dispatcher Yaf_Dispatcher catch Exception bool $flag	active / d&eacute;sactive la r&eacute;cup&eacute;ration des exceptions
Yaf_Dispatcher bool disable View	d&eacute;sactive le moteur de visualisation
Yaf_Dispatcher set Error Handler $callback	une fonction de rappel
Yaf_Dispatcher Yaf_Dispatcher set Error Handler call $callback int $error_types	d&eacute;finit un gestionnaire d'erreur personnalis&eacute;
Yaf_Dispatcher set View $view	une instance de la classe yaf_view_interface
Yaf_Dispatcher Yaf_Dispatcher set View Yaf_View_Interface $view	d&eacute;finit un moteur de visualisation personnalis&eacute;
Yaf_Dispatcher throw Exception $flag	un booléen
Yaf_Dispatcher Yaf_Dispatcher throw Exception bool $flag	active / d&eacute;sactive le lancement d'exceptions
Yaf_Loader register Local Namespace $prefix	une chaîne ou un tableau de noms de préfixe de classe
Yaf_Loader void register Local Namespace mixed $prefix	enregistre le pr&eacute;fixe local de la classe
Yaf_Plugin_Abstract void dispatch Loop Shutdown Yaf_Request_Abstract $request Yaf_Response_Abstract $response	le but de dispatchloopshutdown
Yaf_Plugin_Abstract void router Shutdown Yaf_Request_Abstract $request Yaf_Response_Abstract $response	le but de routershutdown
Yaf_Registry void del string $name	supprime un &eacute;l&eacute;ment du registre
Yaf_Registry mixed get string $name	r&eacute;cup&egrave;re un &eacute;l&eacute;ment depuis le registre
Yaf_Registry bool has string $name	v&eacute;rifie si un &eacute;l&eacute;ment existe
Yaf_Request_Abstract get Env $default	si ce paramètre est fourni la valeur sera retournée si la variable ne peut pas être récupérée
Yaf_Request_Abstract get Env $name	le nom de la variable
Yaf_Request_Abstract void get Env string $name string $default	r&eacute;cup&egrave;re une variable env
Yaf_Request_Abstract get Server $default	si ce paramètre est fourni la valeur sera retournée si la variable ne peut pas être récupérée
Yaf_Request_Abstract get Server $name	le nom de la variable
Yaf_Request_Abstract void get Server string $name string $default	r&eacute;cup&egrave;re une variable server
Yaf_Request_Abstract set Base Uri $uir	luri de base
Yaf_Request_Abstract bool set Base Uri	retourne un booléen
Yaf_Request_Abstract bool set Base Uri string $uir	d&eacute;fini l'uri de base
Yaf_Request_Http get Post $name	le nom de la variable
Yaf_Request_Http get Post $default	si ce paramètre est fourni la valeur sera retournée lorsque la variable ne peut être récupérée
Yaf_Request_Http mixed get Post string $name string $default	r&eacute;cup&egrave;re une variable post
Yaf_Request_Http get Query $default	si ce paramètre est fourni la valeur sera retournée si la variable ne peut être récupérée
Yaf_Request_Http get Query $name	le nom de la variable
Yaf_Request_Http mixed get Query string $name string $default	r&eacute;cup&egrave;re un param&egrave;tre de la requ&ecirc;te
Yaf_Request_Http bool is Xml Http Request	v&eacute;rifie s'il s'agit d'une requ&ecirc;te ajax
Yaf_Response_Abstract append Body $body	le contenu
Yaf_Response_Abstract append Body $key	la clé du contenu ; vous pouvez définir un contenu avec sa clé ; si vous nen spécifiez pas alors yaf_response_abstract::default_body sera utilisé
Yaf_Response_Abstract bool append Body	un booléen
Yaf_Response_Abstract bool append Body string $content string $key	ajoute le corps
Yaf_Response_Abstract get Body $key	la clé du contenu ; si vous nen spécifiez pas une alors yaf_response_abstract::default_body sera utilisé
Yaf_Response_Abstract mixed get Body string $key	r&eacute;cup&egrave;re un contenu existant
Yaf_Response_Abstract void response	envoi la r&eacute;ponse
Yaf_Route_Interface string assemble array $info array $query	assemble une requ&ecirc;te
Yaf_Route_Map string assemble array $info array $query	assemble une url
Yaf_Route_Regex string assemble array $info array $query	assemble une url
Yaf_Route_Rewrite string assemble array $info array $query	assemble une url
Yaf_Route_Simple string assemble array $info array $query	assemble une url
Yaf_Route_Simple construct $module_name	le nom de la clé dans les informations de module
Yaf_Route_Simple construct $action_name	le nom de la clé dans les informations de laction
Yaf_Route_Simple construct $controller_name	le nom de la clé dans les informations du contrôleur
Yaf_Route_Simple string construct	retourne toujours true
Yaf_Route_Simple string construct string $module_name string $controller_name string $action_name	constructeur de la classe yaf_route_simple
Yaf_Route_Simple bool route	retourne toujours true
Yaf_Route_Simple bool route Yaf_Request_Abstract $request	route une requ&ecirc;te
Yaf_Route_Supervar string assemble array $info array $query	assemble une url
Yaf_Route_Supervar construct $supervar_name	le nom de la clé
Yaf_Route_Supervar string construct string $supervar_name	le but de __construct
Yaf_Router bool add Config	une instance de la classe yaf_config_abstract qui doit contenir une ou plusieurs configurations de routes valides
Yaf_Router bool add Config Yaf_Config_Abstract $config	ajoute une route d&eacute;finie dans la configuration d'un routeur
Yaf_Router bool add Route string $name Yaf_Route_Abstract $route	ajoute une nouvelle route dans un routeur
Yaf_Router Yaf_Route_Interface get Route string $name	r&eacute;cup&egrave;re une route via son nom
Yaf_Router mixed get Routes	r&eacute;cup&egrave;re les routes enregistr&eacute;es
Yaf_View_Interface bool display string $tpl array $tpl_vars	construit et affiche un template
Yaf_View_Interface set Script Path $template_dir	un chemin absolu vers le dossier contenant les templates ; par défaut yaf_dispatcher utilise application
Yaf_View_Interface void set Script Path string $template_dir	le but de setscriptpath
Yaf_View_Simple assign $value	valeurs de différents types
Yaf_View_Simple assign $name	une chaîne de caractères ou un tableau
Yaf_View_Simple bool assign string $name mixed $value	assigne une ou plusieurs variables
Yaf_View_Simple bool display string $tpl array $tpl_vars	construit et affiche
Yaf_View_Simple eval $tpl_content	le template
Yaf_View_Simple string eval string $tpl_content array $tpl_vars	&eacute;value un template
Yaf_View_Simple get $name	le nom de la variable assignée
Yaf_View_Simple void get string $name	r&eacute;cup&egrave;re une variable assign&eacute;e
Yaf_View_Simple string render string $tpl array $tpl_vars	construit un template
Yaf_View_Simple set $value	différents types de valeur
Yaf_View_Simple set $name	le nom dune valeur sous forme de chaîne de caractères
Yaf_View_Simple void set string $name mixed $value	d&eacute;finit une valeur du moteur
Yar_Client call $method	nom de la méthode rpc distante
Yar_Client call $parameters	paramètres
Yar_Client void call string $method array $parameters	service d'appel
Yar_Client construct $url	url du serveur yar
Yar_Client string construct	une instance yar_client
Yar_Client string construct string $url	cr&eacute;e un client
Yar_Concurrent_Client call $parameters	paramètres
Yar_Concurrent_Client call $callback	une fonction de rappel qui sera appelée par le retour de la réponse
Yar_Concurrent_Client call $method	nom du service i
Yar_Concurrent_Client call $uri	luri du serveur rpc http tcp
Yar_Concurrent_Client int call	un id unique ; peut être utilisé pour identifier lappel
Yar_Concurrent_Client int call string $uri string $method array $parameters callable $callback	enregistre un appel concurrent
Yar_Concurrent_Client loop $error_callback	si la fonction de rappel est définie alors yar lappelera lorsquune erreur surviendra
Yar_Concurrent_Client loop $callback	si la fonction de rappel est définie alors yar appelera cette fonction de rappel après avoir envoyé tous les appels et avant le retour des réponses avec $callinfo vallant null
Yar_Concurrent_Client boolean loop callable $callback callable $error_callback	envoi tous les appels
Yar_Server_Exception string get Type	une chaîne de caractères
Yar_Server_Exception string get Type	le but de gettype
Yar_Server construct $obj	un objet
Yar_Server Object construct	une instance de la classe yar_server
Yar_Server Object construct Object $obj	enregistre un serveur
Yar_Server boolean handle	un booléen
Yar_Server boolean handle	d&eacute;marre un serveur rpc
ZipArchive add Empty Dir $dirname	le dossier à ajouter
ZipArchive bool add Empty Dir	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool add Empty Dir string $dirname	ajoute un nouveau dossier &agrave; une archive zip
ZipArchive add File $localname	si fourni ce sera le nom local dans larchive zip qui écrasera le contenu du paramètre filename
ZipArchive add File $length	ce paramètre nest pas utilisé mais est nécessaire pour étendre la classe ziparchive
ZipArchive add File $start	ce paramètre nest pas utilisé mais est nécessaire pour étendre la classe ziparchive
ZipArchive add File $filename	le chemin vers le fichier à ajouter
ZipArchive bool add File	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool add File string $filename string $localname int $start int $length	ajoute un fichier &agrave; l'archive zip depuis le chemin fourni
ZipArchive add From String $localname	le nom de lentrée à créer
ZipArchive add From String $contents	le contenu à utiliser pour créer lentrée
ZipArchive bool add From String	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool add From String string $localname string $contents	ajoute un fichier &agrave; une archive zip en utilisant son contenu
ZipArchive add Glob $pattern	un masque glob()
ZipArchive add Glob $flags	un masque doctets de drapeaux glob()
ZipArchive add Glob $options	un tableau associatif doptions
ZipArchive bool add Glob	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool add Glob string $pattern int $flags array $options	ajoute des fichiers d'un dossier en utilisant un masque glob
ZipArchive add Pattern $pattern	une expression régulière pcre
ZipArchive add Pattern $options	un tableau associatif doptions acceptés par la méthode ziparchive::addglob()
ZipArchive add Pattern $path	le dossier à analyser
ZipArchive bool add Pattern	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool add Pattern string $pattern string $path array $options	ajoute des fichiers d'un dossier en utilisant une expression r&eacute;guli&egrave;re pcre
ZipArchive delete Name $name	nom de lentrée à effacer
ZipArchive bool delete Name	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool delete Name string $name	efface une entr&eacute;e dans l'archive en utilisant son nom
ZipArchive get Archive Comment $flags	si ce paramètre est défini à ziparchive::fl_unchanged le commentaire original non modifié sera retourné
ZipArchive string get Archive Comment	retourne le commentaire de larchive zip ou false si une erreur survient
ZipArchive string get Archive Comment int $flags	retourne le commentaire de l'archive zip
ZipArchive get Comment Name $flags	si ce flag est défini à ziparchive::fl_unchanged le commentaire original est retourné
ZipArchive get Comment Name $name	nom de lentrée
ZipArchive string get Comment Name	retourne le commentaire en cas de succès ou false si une erreur survient
ZipArchive string get Comment Name string $name int $flags	retourne le commentaire d'une entr&eacute;e en utilisant le nom de l'entr&eacute;e
ZipArchive Get External Attributes Index $index	index de lentrée
ZipArchive Get External Attributes Index $attr	en cas de succès récupère les attributs étendus la valeur dépend du système dexploitation
ZipArchive Get External Attributes Index $opsys	en cas de succès récupère le code du système dexploitation défini par une des constantes ziparchive::opsys_
ZipArchive Get External Attributes Index $flags	si cet indicateur est positionné à ziparchive::fl_unchanged les valeurs originales sont retournées
ZipArchive bool Get External Attributes Index	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool Get External Attributes Index int $index int $opsys int $attr int $flags	r&eacute;cup&egrave;re les attributs &eacute;tendus d'une entr&eacute;e d&eacute;finie par son index
ZipArchive get External Attributes Name $name	nom de lentrée
ZipArchive get External Attributes Name $attr	en cas de succès récupère les attributs étendus la valeur dépend du système dexploitation
ZipArchive get External Attributes Name $opsys	en cas de succès récupère le code du système dexploitation défini par une des constantes ziparchive::opsys_
ZipArchive get External Attributes Name $flags	si cet indicateur est positionné à ziparchive::fl_unchanged les valeurs originales sont retournées
ZipArchive bool get External Attributes Name	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool get External Attributes Name string $name int $opsys int $attr int $flags	r&eacute;cup&egrave;re les attributs &eacute;tendus d'une entr&eacute;e d&eacute;finie par son nom
ZipArchive get From Index $index	index de lentrée
ZipArchive get From Index $length	la longueur à lire depuis lentrée
ZipArchive get From Index $flags	le flag à utiliser pour ouvrir larchive
ZipArchive string get From Index	retourne le contenu de lentrée en cas de succès ou false si une erreur survient
ZipArchive string get From Index int $index int $length int $flags	retourne le contenu d'une entr&eacute;e en utilisant son index
ZipArchive get From Name $name	nom de lentrée
ZipArchive get From Name $length	la longueur à lire depuis lentrée
ZipArchive get From Name $flags	le flag à utiliser pour trouver lentrée
ZipArchive string get From Name	retourne le contenu de lentrée en cas de succès ou false si une erreur survient
ZipArchive string get From Name string $name int $length int $flags	retourne le contenu de l'entr&eacute;e en utilisant son nom
ZipArchive get Name Index $index	index de lentrée
ZipArchive get Name Index $flags	si ce paramètre est défini à ziparchive::fl_unchanged le nom original non modifié sera retourné
ZipArchive string get Name Index	retourne le nom en cas de succès ou false si une erreur survient
ZipArchive string get Name Index int $index int $flags	retourne le nom d'une entr&eacute;e en utilisant son index
ZipArchive get Stream $name	le nom de lentrée à utiliser
ZipArchive resource get Stream	retourne un pointeur de fichier ressource en cas de succès ou false si une erreur survient
ZipArchive resource get Stream string $name	r&eacute;cup&egrave;re un gestionnaire de fichier pour l'entr&eacute;e d&eacute;finie par son nom lecture seule
ZipArchive locate Name $name	le nom de lentrée à chercher
ZipArchive locate Name $flags	la fonction retourne lindex du fichier dans larchive
ZipArchive int locate Name	retourne lindex de lentrée en cas de succès ou false si une erreur survient
ZipArchive int locate Name string $name int $flags	retourne l'index d'une entr&eacute;e de l'archive
ZipArchive rename Index $newname	nouveau nom
ZipArchive rename Index $index	index de lentrée à renommer
ZipArchive bool rename Index	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool rename Index int $index string $newname	renomme une entr&eacute;e d&eacute;finie par son index
ZipArchive set Password $password	le mot de passe à utiliser sur larchive
ZipArchive bool set Password	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool set Password string $password	d&eacute;fini le mot de passe de l'archive active
ZipArchive stat Index $index	index de lentrée
ZipArchive stat Index $flags	ziparchive::fl_unchanged permet dobtenir les informations du fichier original de larchive ignorant toutes les modifications effectuées
ZipArchive array stat Index	retourne un tableau contenant les détails de lentrée ou false si une erreur survient
ZipArchive array stat Index int $index int $flags	r&eacute;cup&egrave;re les d&eacute;tails d'une entr&eacute;e d&eacute;finie par son index
ZipArchive bool unchange Archive	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool unchange Archive	annule toutes les modifications globales faites sur l'archive
ZipArchive unchange Index $index	index de lentrée
ZipArchive bool unchange Index	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool unchange Index int $index	annule toutes les modifications faites sur une entr&eacute;e d&eacute;finie par nom index
ZipArchive unchange Name $name	nom de lentrée
ZipArchive bool unchange Name	cette fonction retourne true en cas de succès ou false si une erreur survient
ZipArchive bool unchange Name string $name	annule toutes les modifications faites sur une entr&eacute;e d&eacute;finie par son nom
ZMQContext construct $io_threads	nombre de io-threads dans le contexte
ZMQContext construct $is_persistent	si le contexte est persistent ou non
ZMQContext integer construct	lance une exception zmqcontextexception si linitialisation du contexte échoue
ZMQContext integer construct integer $io_threads boolean $is_persistent	construit un nouvel objet zmqcontext
ZMQContext get Opt $key	un entier représentant loption
ZMQContext mixed get Opt	retourne soit une chaîne de caractères ou un entier suivant le paramètre key
ZMQContext mixed get Opt string $key	r&eacute;cup&egrave;re une option de contexte
ZMQContext get Socket $on_new_socket	fonction de rappel qui sera exécutée lorsquune nouvelle structure de socket est créée
ZMQContext get Socket $type	une constante zmq::socket_* pour spécifier le type de socket
ZMQContext get Socket $persistent_id	si persistent_id est spécifié le socket sera persistent entre les différentes requêtes
ZMQContext ZMQSocket get Socket	retourne un objet zmqsocket en cas de succès
ZMQContext ZMQSocket get Socket integer $type string $persistent_id callback $on_new_socket	cr&eacute;e un nouveau socket
ZMQContext boolean is Persistent	retourne true si le contexte est persistent et false sil ne lest pas
ZMQContext boolean is Persistent	v&eacute;rifie si le contexte est persistent
ZMQContext set Opt $value	la valeur du paramètre
ZMQContext set Opt $key	une constante zmq::ctxopt_*
ZMQContext ZMQContext set Opt	retourne lobjet courant
ZMQContext ZMQContext set Opt integer $key mixed $value	d&eacute;fini une option de socket
ZMQDevice ZMQDevice get Idle Timeout	cette méthode retourne la valeur du délai dattente maximal de la fonction de rappel dinactivité
ZMQDevice ZMQDevice get Idle Timeout	r&eacute;cup&egrave;re le d&eacute;lai d'attente maximal d'inactivit&eacute;
ZMQDevice void run	ex&eacute;cute le nouveau p&eacute;riph&eacute;rique
ZMQDevice set Idle Callback $timeout	le délai dattente maximal avant dappeler la fonction de rappel en millisecondes
ZMQDevice set Idle Callback $cb_func	la fonction de rappel à appeler lorsque le périphérique est inactif
ZMQDevice set Idle Callback $user_data	données additionnelles à passer à la fonction de rappel
ZMQDevice ZMQDevice set Idle Callback	en cas de succès cette méthode retourne lobjet courant
ZMQDevice ZMQDevice set Idle Callback callable $cb_func integer $timeout mixed $user_data	d&eacute;fini la fonction de rappel d'inactivit&eacute;
ZMQDevice set Idle Timeout $timeout	la valeur du délai dattente maximal de la fonction de rappel dinactivité
ZMQDevice ZMQDevice set Idle Timeout	en cas de succès cette méthode retourne lobjet courant
ZMQDevice ZMQDevice set Idle Timeout integer $timeout	d&eacute;fini le d&eacute;lai d'attente maximal d'inactivit&eacute;
ZMQDevice set Timer Callback $user_data	données additionnelles à passer à la fonction de rappel
ZMQDevice set Timer Callback $cb_func	fonction de rappel à appeler lorsque le périphérique est inactif
ZMQDevice set Timer Callback $timeout	indique à partir de combien de temps la fonction de rappel dinactivité doit être appelée en millisecondes
ZMQDevice ZMQDevice set Timer Callback	en cas de succès cette méthode retourne lobjet courant
ZMQDevice ZMQDevice set Timer Callback callable $cb_func integer $timeout mixed $user_data	d&eacute;fini la fonction de rappel du timer
ZMQPoll ZMQPoll clear	retourne lobjet courant
ZMQPoll ZMQPoll clear	supprime tous les &eacute;l&eacute;ments du poll
ZMQPoll array get Last Errors	retourne un tableau contenant les ids des éléments qui ont des erreurs dans le dernier poll
ZMQPoll array get Last Errors	r&eacute;cup&egrave;re les erreurs du poll
ZMQPoll poll $readable	tableau contenant les zmqsockets / flux php retournés et accessible en lecture
ZMQPoll poll $timeout	délai maximal dattente de lopération
ZMQPoll poll $writable	tableau contenant les zmqsockets / flux php retournés et accessible en écriture
ZMQPoll integer poll	retourne un entier représentant la quantité déléments ayant une activité
ZMQPoll integer poll array $readable array $writable integer $timeout	sonde les &eacute;l&eacute;ments
ZMQPoll remove $item	lobjet zmqsocket le flux php ou une chaîne de caractères représentant lid de lélément
ZMQPoll boolean remove	retourne true si lélément a été supprimé et false si lobjet avec lid fourni nexiste pas dans le poll
ZMQPoll boolean remove mixed $item	supprime un &eacute;l&eacute;ment du poll
ZMQSocket bind $force	on tente le lien même si le socket a déjà été lié au point final donné
ZMQSocket bind $dsn	le dsn par exemple : transport: / / address
ZMQSocket ZMQSocket bind	retourne lobjet courant
ZMQSocket ZMQSocket bind string $dsn boolean $force	lie un socket
ZMQSocket connect $force	tente de se connecter même si le socket est déjà connecté au point final fourni
ZMQSocket connect $dsn	le dsn de connexion par exemple : transport: / / address
ZMQSocket ZMQSocket connect	retourne lobjet courant
ZMQSocket ZMQSocket connect string $dsn boolean $force	connecte le socket
ZMQSocket construct $persistent_id	si persistent_id est spécifié le socket sera persistent pendant plusieurs requêtes
ZMQSocket construct $type	le type de socket
ZMQSocket construct $on_new_socket	function de rappel qui sera exécuté lorsquune nouvelle structure de socket sera créée
ZMQSocket construct $context	objet zmqcontext
ZMQSocket ZMQContext construct	lance une exception zmqsocketexception en cas derreur
ZMQSocket ZMQContext construct ZMQContext $context int $type string $persistent_id callback $on_new_socket	construit un nouveau zmqsocket
ZMQSocket disconnect $dsn	le dsn de connexion par exemple : transport: / / address
ZMQSocket ZMQSocket disconnect	retourne lobjet courant
ZMQSocket ZMQSocket disconnect string $dsn	d&eacute;connecte un socket
ZMQSocket array get Endpoints	retourne un tableau contenant les éléments bind et connect
ZMQSocket array get Endpoints	r&eacute;cup&egrave;re la liste des points finaux
ZMQSocket string get Persistent Id	retourne lid persistent assigné à lobjet ou null si le socjet nest pas persistent
ZMQSocket string get Persistent Id	r&eacute;cup&egrave;re l'id persistent
ZMQSocket integer get Socket Type	retourne un entier représentant le type du socket
ZMQSocket integer get Socket Type	r&eacute;cup&egrave;re le type du socket
ZMQSocket get Sock Opt $key	un entier représentant loption
ZMQSocket mixed get Sock Opt	retourne soit une chaîne de caractères soit un entier suivant le paramètre key
ZMQSocket mixed get Sock Opt string $key	r&eacute;cup&egrave;re une option du socket
ZMQSocket boolean is Persistent	retourne un booléen suivant si le socket est persistent ou non
ZMQSocket boolean is Persistent	v&eacute;rifie si le socket est persistent
ZMQSocket recv Multi $mode	drapeaux de mode pour recevoir les messages multipart ou faire que lopération ne soit pas bloquante
ZMQSocket string recv Multi	retourne le tableau contenant les parties du message
ZMQSocket string recv Multi integer $mode	recoit un message multipart
ZMQSocket send $message	le message à envoyer
ZMQSocket send $mode	drapeaux du mode pour recevoir des messages multipart ou rendre lopération non-bloquante
ZMQSocket ZMQSocket send	retourne lobjet courant
ZMQSocket ZMQSocket send string $message integer $mode	envoi un message
ZMQSocket unbind $dsn	le dsn précédemment lié par exemple : transport: / / address
ZMQSocket ZMQSocket unbind	retourne lobjet courant
ZMQSocket ZMQSocket unbind string $dsn	d&eacute;-lie le socket
