function_name	configure la couleur ||| set image background color	count=1
function_name	tampon de sortie ||| ob get	count=1
arg_pair	à memcached::getdelayed() mais la ||| bool $with_cas callable $value_cb	count=1
function_name	positionne ||| move to	count=2
function_name	champs ||| fbsql fetch field	count=1
function_name	instance de la classe ||| sqlsrv fetch object	count=1
function_name	la trace ||| trace as string	count=1
function_name	l'objet slob ||| ifxus read slob	count=1
function_name	lit le dn ||| ldap get dn	count=1
function_name	définit ||| set color value	count=2
function_name	la méthode ||| end	count=1
function_name	[function_name] l'api ||| api [function_name]	count=3
arg_pair	valeur fournie ||| int $color float $value	count=1
function_name	que file_get_contents() ||| contents	count=1
function_name	algorithm [function_name] algorithme par ||| [function_name] block	count=1
function_name	curseur typiquement parcourt ||| batch	count=1
function_name	retourne la ||| get errno	count=1
return	un nombre ||| int	count=1
arg_pair	sur les caractères alphabétiques ||| string $string	count=1
function_name	trouvent ||| mailparse uudecode all	count=2
function_name	ignorant ||| str ireplace	count=2
namespace	les lignes de la ||| function	count=1
arg_pair	universal database ||| string $username	count=1
function_name	le type de la ||| type	count=1
function_name	utilisé pour diriger ||| set	count=1
arg_pair	username et ||| string $username	count=1
function_name	de couleurs ||| image	count=2
function_name	chaîne de ||| string	count=2
namespace	chaînes alphanumériques dans ||| arrayobject	count=1
namespace	courant ou ||| function	count=1
function_name	ou ||| posix	count=1
arg_pair	clic sur ||| resource $psdoc	count=1
return	métadonnées ||| mongodb	count=1
function_name	lit les droits ||| fileperms	count=1
function_name	[function_name_1] de modification ||| [function_name_2] [function_name_1]	count=1
function_name	service qui ||| service	count=1
function_name	évènement pour être ||| event set	count=2
arg_pair	un dossier qui pour ||| string $path	count=1
arg_pair	au format png ||| int $filters	count=1
function_name	couleur bleue ||| image blue primary	count=1
arg_pair	remplissage à un ||| resource $p float $g	count=1
function_name	elle prend plus ||| poll time	count=1
function_name	qui avaient été ||| form	count=1
arg_pair	pour ces données ||| resource $data	count=1
function_name	informations du dernier ||| info	count=1
function_name	variable est ||| is	count=1
function_name	cette fonction est ||| get element by	count=1
arg_pair	d'octets str ||| string $str	count=1
function_name	ligne précédente de ||| prev	count=1
function_name	si elle prend plus ||| max poll time	count=1
function_name	mode ||| mode	count=8
function_name	de ||| load string	count=4
function_name	printable créée suivant les ||| printable encode	count=1
function_name	prend plus de ||| eio set max poll time	count=1
function_name	le calendrier grégorien : ||| gregoriantojd	count=1
namespace	crée un fichier spécial ||| function	count=1
function_name	stoppe une [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	fourni par ||| eventbuffer	count=1
function_name	et envoyées [function_name] voir ||| [function_name] mppe	count=1
function_name	efface ||| remove	count=2
function_name	filtre entier à la ||| filter	count=2
function_name	une queue ou une ||| mqseries put	count=1
function_name	[function_name_1] le profil ||| [function_name_2] [function_name_1]	count=1
function_name	dossier d'archives spécifié ||| zip	count=1
arg_pair	valeur courante de ||| resource $stmt	count=1
function_name	forme et tous les ||| destroy	count=1
function_name	au ||| session trace socket	count=1
return	alphanumériques dans le ||| void	count=1
function_name	retourne un jeu ||| db2 procedure	count=1
arg_pair	de size avec ||| int $size	count=1
namespace	un ||| xmldiff\file	count=1
namespace	le ||| xmldiff\file	count=1
function_name	ajoute une tâche ||| add	count=4
function_name	elle ||| eio set max poll time	count=2
return	un fichier spécial ou ||| bool	count=1
function_name	au lieu d'être ||| user defined	count=1
arg_pair	basé sur des différences ||| string $diff	count=1
arg_pair	la pile ||| int $still_running	count=1
function_name	d'événements pour les événements ||| set	count=1
function_name	l'adresse ipv4 correspondant ||| gethostbyname	count=1
function_name	qui ne ||| set	count=1
arg_pair	clé key n'existe pas ||| string $key	count=1
arg_pair	chaîne str après ||| string $str	count=4
function_name	avec les ||| close	count=1
function_name	le logarithme base-10 pour ||| log10	count=1
function_name	typiquement parcourt ||| batch size	count=1
return	[return] section ||| [return]	count=1
function_name	à ||| images	count=1
arg_pair	cubrid_lob2_bind() est utilisée pour ||| string $bind_value_type	count=1
return	spécifiée avec un ||| bool	count=1
function_name	définit ||| qc set	count=1
namespace	base ||| mongodb	count=1
function_name	preg_replace() hormis le ||| preg replace callback	count=1
function_name	les composants qui avaient ||| newt form destroy	count=1
function_name	valeur de la ||| set include path	count=1
namespace	lit le numéro ||| splfileinfo	count=1
function_name	spécifique au vendeur ||| put vendor	count=1
function_name	sur le dossier ||| zip entry compressionmethod	count=1
return	[return] entier ||| [return]	count=2
function_name	de bloc ||| block	count=1
return	élément ||| bool	count=1
function_name	flux à utiliser ||| stream	count=1
function_name	du réseau neuronal ||| fann	count=1
function_name	char dont ||| ifx free char	count=1
function_name	à la prochaine image ||| next image	count=1
function_name	ms sql server ||| mssql	count=3
arg_pair	x509cert et retourne ||| mixed $x509cert	count=1
arg_pair	une image jpeg ||| string $jpeg_file_name	count=1
function_name	nombre de champs colonnes ||| numfields	count=1
function_name	lors ||| eregi	count=1
namespace	ou non le ||| function	count=1
function_name	hormis le fait qu'elle ||| proc	count=1
function_name	la base de données ||| db	count=1
function_name	document pdf ||| pdf get pdi	count=1
function_name	spanscorer pour [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	libère ||| free stmt	count=2
function_name	restaure le gestionnaire ||| restore	count=1
arg_pair	message d'erreur à l'historique ||| string $message	count=1
function_name	de caractères passée en ||| db2	count=1
function_name	libeio tant que les ||| event	count=1
namespace	fonction mktime() excepté le ||| function	count=1
function_name	contenu de l'objet blob ||| blob	count=1
function_name	les ||| push	count=1
return	nombre de fois où ||| int	count=2
function_name	profilage courant ||| profiling	count=1
arg_pair	position [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	la gestion des ||| odbc binmode	count=1
function_name	l'entrainement rprop ||| rprop	count=1
arg_pair	fonction mktime() ||| int $minute	count=1
function_name	array comme ||| push	count=1
function_name	placer un verrou de ||| lock read	count=1
function_name	[function_name_1] errno ||| [function_name_2] [function_name_1]	count=1
function_name	première ||| first	count=2
function_name	la profondeur maximale ||| max depth	count=2
function_name	s'interrompt si ||| max poll	count=1
function_name	http ||| apache	count=1
arg_pair	de modification d'une ||| int $type	count=1
function	certificat x509 [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	script en ||| include	count=1
function_name	sont sur des ||| form	count=1
function_name	récupère l'intance ||| get	count=1
arg_pair	résolution ||| float $xresolution	count=1
return	de la version ||| string	count=1
function_name	un ||| create	count=1
arg_pair	de remplacer le domaine ||| string $domain string $msgid1	count=1
function_name	en ||| include path	count=2
arg_pair	de données d'un ||| resource $statement	count=1
namespace	documents par ||| mongocursor	count=1
function_name	limite supérieure dans le ||| get terms include upper bound	count=1
function_name	prend plus ||| eio	count=1
function_name	la dernière erreur ||| errno	count=2
arg_pair	par le chemin path ||| string $path int $offset	count=1
function_name	appels distants ||| loop	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2] string $extracerts string $content	count=3
function_name	décompressée d'une ||| unpacked	count=1
function_name	pour ||| ibase set	count=1
function_name	ferme le fichier bzip2 ||| bzclose	count=1
function_name	retourne [function_name_2] ||| [function_name_1] cipher [function_name_2]	count=1
arg_pair	de la propriété ||| string $property_value	count=1
function_name	file de messages ||| msg remove queue	count=1
arg_pair	font ||| resource $pdfdoc int $font	count=1
arg_pair	de données database ||| string $database	count=1
function_name	élément avec ||| get	count=1
namespace	réponses dans une série ||| mongocursor	count=1
arg_pair	attend qu'elles changent ||| array $read array $write	count=1
arg_pair	longueur width ||| int $width	count=1
arg_pair	fichier ||| int $start	count=1
function_name	crée un [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] la file ||| [function_name_2] [function_name_1]	count=3
function_name	point de contrôle ||| gupnp control point	count=1
function_name	positionne le ||| move to	count=2
function_name	fonction geoip_country_code3_by_name() retourne les ||| country code3	count=1
function_name	attribut ||| attributes	count=1
return	exécution ou ||| void	count=1
function_name	cubrid_lob2_size64() ||| lob2 size64	count=2
arg_pair	watcher ||| callable $callback mixed $data	count=1
arg_pair	la fonction ||| int $month	count=1
function_name	niveau individuel [function_name] chaque pixel ||| adaptive threshold [function_name]	count=1
function_name	ligne [function_name_2] ||| string [function_name_2] [function_name_1]	count=3
return	curseur typiquement ||| mongocommandcursor	count=1
arg_pair	la base de ||| string $database_name resource $link_identifier	count=1
arg_pair	priorité de pid ||| int $pid	count=1
namespace	et les valeurs ||| arrayobject	count=1
namespace	vt_date ou similaire en ||| function	count=1
arg_pair	event_handler en tant ||| callable $event_handler	count=1
function_name	la qualité d'une image ||| image	count=1
function_name	référentiel ||| svn blame	count=2
return	fois ||| int	count=2
function_name	table de traduction ||| html translation table	count=1
namespace	[namespace] les ||| [namespace]	count=2
arg_pair	une variable ||| string $key mixed $value	count=1
function	[function_name_1] dict ||| [arg_pair_2] [function_name_1]	count=1
function_name	un objet simplexmliterator ||| children	count=1
namespace	contenu du buffer ||| eventbuffer	count=1
function_name	les deux pour ||| set watermark	count=2
function_name	avec une provenant ||| pop	count=1
function_name	de pagination taille ||| paged result	count=1
function_name	sans suivre le lien ||| sftp lstat	count=1
function_name	si ||| set max	count=1
namespace	fonction ferme la ressource ||| function	count=1
function_name	recode la chaîne ||| recode	count=1
return	récupère ||| string	count=5
return	la forme et tous ||| void	count=1
function_name	un sommaire de ||| fetch overview	count=1
namespace	la méthode ||| gearmanclient	count=1
function_name	récupère le ||| get	count=26
function_name	patch ||| xdiff string patch	count=1
function_name	récupère les ||| rrd	count=1
function_name	de transactions xa ||| ms xa gc	count=1
function_name	crée une paire de ||| create pair	count=1
function_name	la fonction dbplus_xlockrel() ||| xunlockrel	count=1
function_name	de transfert [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	date de ||| get	count=2
return	traitement appliqué à ||| bool	count=1
return	par output en ||| bool	count=1
function_name	jpeg depuis ||| imagejpeg	count=1
arg_pair	procédure stockée sur ||| bool $skip_results	count=1
arg_pair	vers un serveur ||| resource $session	count=1
function_name	est un ||| mcrypt module is	count=1
function_name	connexion persistante à ||| pconnect	count=4
function_name	définie dans la configuration ||| config	count=1
arg_pair	tableau associatif assoc_array ||| array $assoc_array int $options	count=1
return	chaîne de caractères ||| string	count=12
return	la base ||| int	count=1
function_name	position courante ||| current	count=1
function_name	identifiant ||| element by	count=1
function_name	retourne le type ||| variant get type	count=2
function_name	d'une image et la ||| image	count=1
return	sous ||| string	count=1
function_name	appelé une ||| set	count=1
function_name	retourne des informations sur ||| msg stat	count=1
function_name	est l'espace [function_name_2] ||| [function_name_1] default [function_name_2]	count=1
namespace	le numéro de ||| splfileinfo	count=1
function_name	une ||| stream socket shutdown	count=1
function_name	similaire à ||| mysql	count=1
function_name	message d'erreur de ||| error	count=2
function_name	fichier pdf généré, et ||| pdf	count=1
return	la fin de ||| bool	count=1
return	des ||| string	count=2
function_name	utilisée sur le ||| entry	count=1
arg_pair	sequence et retourne un ||| resource $imap_stream string $sequence	count=1
function_name	terme à ||| set terms upper bound	count=1
namespace	le retournera ||| function	count=1
namespace	fourni ||| eventbuffer	count=1
function_name	forcer ||| touch	count=1
return	extrait dans ||| array	count=1
return	erreur maxdb_connect_error() [return] représentative ||| [return]	count=1
arg_pair	lors de ||| array $server array $info	count=1
function_name	peut [function_name] ||| [function_name]	count=2
return	vérifie si la ||| bool	count=2
function_name	plus ||| max poll	count=1
function_name	qui réside à l'extérieur ||| runkit import	count=1
function_name	l'entier supérieur suivant pour ||| ceil	count=1
function_name	l'étape d'erreur sarprop ||| fann set sarprop step error	count=2
function_name	le jeu de caractères ||| iconv set	count=1
namespace	et que l'archive phar ||| phar	count=1
function_name	construit un arbre de ||| string	count=1
return	la base de données ||| mixed	count=2
arg_pair	la structure de ||| int $num_data	count=1
arg_pair	à memcached::set() hormis le ||| mixed $value int $expiration	count=1
namespace	la ||| mongogridfs	count=2
function_name	tous les fichiers encodés ||| mailparse uudecode	count=1
arg_pair	et y lit ||| int $flags	count=1
arg_pair	de résultats à ||| resource $result	count=1
function_name	défini l'endroit où ||| set error	count=1
function_name	fonction ||| fbsql field type	count=2
arg_pair	initialise ces paramètres ||| int $to_neuron	count=1
function_name	ligne courante ||| fetch row	count=1
namespace	numéro de ||| splfileinfo	count=1
function_name	réseau neuronal depuis ||| fann	count=1
arg_pair	caractères lors ||| string $string	count=1
arg_pair	à memcached::getmulti() mais la ||| int $flags	count=1
arg_pair	d'une variable ||| int $type	count=1
function_name	fonction est ||| element by	count=1
return	gearmanclient::setcontext() ||| string	count=1
function_name	statiques ||| static	count=2
arg_pair	définit un ||| resource $handle	count=1
return	représenté par l'identifiant ||| bool	count=1
function_name	rassemble ||| merge	count=1
function_name	à la forme ||| newt	count=1
function_name	dans un fichier temporaire ||| uudecode	count=1
function_name	la méthode de ||| entry compressionmethod	count=1
arg_pair	une ||| string $fontname	count=1
function_name	précision des nombres décimaux ||| environment	count=1
arg_pair	paramètre timestamp ||| int $timestamp int $format	count=1
function_name	utilisée pour envoyer ||| set	count=1
function_name	donnée ||| string	count=1
function_name	spécifiés ||| fetchbody	count=1
function_name	[function_name_1] le ||| [function_name_1] [function_name_2]	count=1
arg_pair	une méthode ||| string $key	count=1
function_name	celui de preg_replace() ||| preg	count=1
arg_pair	un préfixe utilisé ||| string $field_override	count=1
arg_pair	cubrid_lob2_bind() est ||| mixed $bind_value	count=1
function_name	[function_name_1] requête spécifiée ||| [function_name_2] [function_name_1]	count=9
function_name	depuis un socket ||| socket	count=1
function_name	de session curl ||| curl	count=1
return	retourne ||| array	count=5
function_name	allant de ||| strstr	count=1
return	libère les ||| void	count=1
function_name	un ||| merge	count=1
function_name	de la tâche ||| do background	count=1
function_name	valeur absolue ||| abs	count=1
namespace	d'une annotation ||| gmagickdraw	count=1
return	la forme d'une ||| int	count=1
arg_pair	colonnes à des ||| string $key	count=1
function_name	une seule [function_name] les ||| get nr [function_name]	count=1
function_name	la casse), et ||| grapheme stristr	count=1
function_name	couleur de peinture ||| stroking color space	count=3
function_name	modifie la ||| path	count=1
function_name	de traduction ||| html translation table	count=1
function_name	image sans lire toute ||| image	count=1
return	être utilisé ||| void	count=1
function_name	courant ||| current	count=4
function_name	la colonne d'offset ||| field table	count=2
function_name	[function_name_1] curl ||| [function_name_2] [function_name_1]	count=18
function_name	l'encodage du client ||| client encoding	count=1
function_name	groupe d'appartenance ||| get group	count=1
function_name	de gestionnaires curl ||| curl multi	count=1
namespace	un ||| tidynode	count=1
namespace	des objets splsubject depuis ||| splobserver	count=1
function_name	informations de connexion passées ||| connect	count=1
arg_pair	pour toutes les ||| resource $ann	count=1
arg_pair	la casse des caractères ||| string $pattern	count=1
namespace	forme et tous les ||| function	count=1
arg_pair	index d'une palette une ||| int $index	count=1
function_name	les liens ajoutés ||| set border style	count=1
function_name	correction gamma à ||| imagegammacorrect	count=1
function_name	eventbuffer ||| add buffer	count=2
function_name	déplace ||| add buffer	count=2
function_name	des informations sur l'utilisation ||| meminfo	count=1
return	libère une ||| bool	count=1
namespace	tableau utilisé par arrayobject::getiterator() ||| arrayobject	count=1
function_name	la configuration courante ||| config	count=1
function_name	élément avec un identifiant ||| element by id	count=1
namespace	appelé une ||| collectable	count=1
function_name	les ||| sort	count=1
function_name	des données ||| metadata	count=1
function_name	[function_name_1] des champs ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] abstraite ||| [function_name_1] [function_name_2]	count=5
function_name	un test sur ||| fann test data	count=1
function_name	couleur de remplissage ||| cmykstroke	count=1
arg_pair	microsoft sql server ||| array $connectioninfo	count=1
function_name	contexte ||| gupnp context	count=1
function	un nom [arg_pair_2] ||| [function_name_1] result [arg_pair_2]	count=1
namespace	texte à la ||| function	count=1
function_name	de flux et attend ||| stream	count=1
function_name	typiquement parcourt un ||| batch	count=1
arg_pair	une ||| string $connection_string	count=1
function_name	une miniature ||| thumbnail	count=1
function	[function_name_1] requête à ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	l'activation ||| mixed $condition	count=1
function_name	l'uri de l'espace ||| uri	count=1
arg_pair	fichiers ||| mongodb $db string $prefix	count=2
arg_pair	qui contient la ligne ||| resource $result int $row	count=1
function_name	verrou ||| lock read	count=2
function_name	gris pour toutes ||| ps setgray	count=1
arg_pair	le chemin est dirname ||| resource $context	count=1
function_name	multiples ||| udm alloc	count=1
function_name	de caractères passée ||| string	count=1
return	sein ||| bool	count=1
function_name	les valeurs ||| ldap get values	count=2
function_name	connexion persistante [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	parser ||| callable $handler	count=6
function_name	une exécution [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	désigné ||| xattr	count=3
function_name	convertir une archive non ||| convert to data	count=1
function_name	restaure la base de ||| restore	count=1
arg_pair	eol_style ||| int $eol_style	count=1
function_name	[function_name_1] pour tous ||| [function_name_2] [function_name_1]	count=3
namespace	d'une [namespace] le ||| [namespace]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] validate [arg_pair_2]	count=4
function_name	erreur de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] train from callback [arg_pair_2]	count=4
function_name	quoted [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	la ||| time	count=1
arg_pair	qui héberge la file ||| resource $queue	count=1
return	construit ||| sdo_das_xml_document	count=1
function_name	le contenu ||| from	count=1
arg_pair	identique à ||| string $pattern string $string	count=1
function_name	données d'entrainement depuis une ||| train from callback	count=1
function_name	protocole et de flux ||| stream wrapper register	count=1
arg_pair	contient le ||| mongodb $db	count=1
namespace	recursivetreeiterator::valid() retourne false pour ||| recursivetreeiterator	count=1
function_name	depuis le bytecode ||| bcompiler	count=1
function_name	le type d'octets ||| byte type	count=2
function_name	à memcached::prepend() mais la ||| prepend by	count=1
return	un serveur ||| resource	count=1
function_name	trace ||| trace as	count=1
arg_pair	de jours du calendrier ||| int $month int $day	count=1
function_name	[function_name_1] image le ||| [function_name_2] [function_name_1]	count=6
namespace	début du tampon ||| eventbuffer	count=2
function_name	retourne les [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	défini l'endroit ||| resource $errdat	count=1
function_name	champ du document lorsqu'il ||| unset	count=1
function	flux [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function	la classe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	à détruire ||| shmop delete	count=1
arg_pair	que les paramètres ||| int $second int $month	count=1
function_name	aux coordonnées ||| imagecopy	count=1
function_name	retourne la version échappée ||| cubrid real escape string	count=1
namespace	dans un document ||| sphinxclient	count=1
function_name	[function_name_1] de version ||| [function_name_2] [function_name_1]	count=2
arg_pair	au service daemon est ||| string $daemon string $address	count=1
function_name	le vecteur d'entrée ||| input	count=1
function_name	interne ||| iterator	count=1
arg_pair	ouvert et ||| resource $handle	count=1
function_name	par la fonction glob() ||| glob	count=1
function_name	en incluant les composants ||| newt form destroy	count=1
namespace	utilisant [namespace] ||| [namespace]	count=1
function_name	ou son référencement ||| garbage	count=1
function	image [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image channel [function_name_2]	count=6
function_name	parent d'un ||| parents	count=1
arg_pair	héberge ||| array $data	count=1
function_name	fois ||| set	count=1
function_name	pour tous ||| fann set	count=2
function_name	sarprop ||| sarprop	count=6
arg_pair	serveur avec les ||| array $config	count=1
namespace	déclenché par ||| function	count=1
function_name	[function_name_1] chiffrement ||| [function_name_2] list [function_name_1]	count=1
namespace	d'exécution ||| pharfileinfo	count=1
return	valeurs dans un tableau ||| array	count=1
arg_pair	spécifique [arg_pair] ||| [arg_pair]	count=2
function_name	nombre de ||| numfields	count=1
namespace	exclusif qui ||| function	count=1
return	cours ||| string	count=1
function_name	configuration include_path ||| set include	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] root element [function_name_2]	count=9
namespace	version courante ||| gmagick	count=1
function_name	[function_name_1] sortie ||| [function_name_1] cascade [function_name_2]	count=1
function_name	le document ||| merge	count=1
namespace	un [namespace] à partir ||| [namespace]	count=1
return	valeurs en provenance ||| bool	count=1
return	bruit ||| gmagick	count=1
function_name	temporaire tous les fichiers ||| mailparse uudecode	count=1
function_name	le socket ||| last socket error	count=1
function_name	le mois month ||| days in month	count=1
arg_pair	exécute une requête ||| resource $query	count=1
arg_pair	l'activation de ||| int $condition_type mixed $condition	count=1
arg_pair	cartes de ||| int $channel	count=1
function_name	blocs ou false si ||| block	count=1
arg_pair	les ||| string $buffer int $mode	count=1
arg_pair	similaire à ||| resource $result	count=2
function	définit les mots de [function_name_1] [arg_pair_2] le ||| bool set [function_name_1] [arg_pair_2]	count=1
function_name	sur le premier ||| to first	count=1
arg_pair	la première ||| mongodb $db	count=1
function_name	les bits de ||| connection	count=1
namespace	cette fonction est identique ||| function	count=1
function_name	clés ||| multi by key	count=2
arg_pair	une séquence de groupes ||| string $haystack int $size	count=1
function_name	de définir ||| set highlight	count=1
function_name	pour changer les ||| set	count=1
arg_pair	l'endroit où les ||| resource $errdat	count=1
function_name	est ||| proc	count=1
return	l' ||| bool	count=1
function_name	racine carrée ||| sqrt	count=3
return	lignes par ||| bool	count=1
return	que la base de ||| bool	count=1
function_name	à ||| id	count=1
function_name	une réponse en retour ||| handle	count=1
function_name	lien symbolique pour l'objet ||| symlink	count=1
namespace	le contenu du buffer ||| eventbuffer	count=1
function_name	informations concernant ||| curl getinfo	count=1
function_name	contenu courant du ||| ob get	count=1
function_name	un verrou de lecture ||| lock read	count=1
function_name	prochaine requête ||| next result	count=1
return	de données sur le ||| mixed	count=1
function_name	une ||| pdf setmiterlimit	count=1
arg_pair	base de données active ||| string $database_name resource $link_identifier	count=1
function_name	informations concernant le ||| curl getinfo	count=1
namespace	lorsque ||| collectable	count=1
arg_pair	au format champ= ||| resource $connection	count=1
function_name	est survenue) depuis ||| facility	count=1
function_name	de la ||| set include path	count=1
arg_pair	size ||| array $array int $size	count=1
arg_pair	event_handler en tant ||| string $event_name1	count=1
return	récupère la ||| string	count=1
function_name	la ||| numfields	count=1
namespace	la durée du script ||| function	count=1
function_name	l'échelle liquide ||| liquid rescale image	count=1
function_name	fréquence en deçà ||| min term frequency	count=1
function_name	les tailles de clés ||| supported key sizes	count=2
function_name	les ||| buffer	count=1
arg_pair	options d'analyseur ||| int $flags	count=1
arg_pair	calendrier calendar ||| int $calendar int $month	count=2
function_name	défini l'époque minimale candidate ||| set cascade min cand epochs	count=1
arg_pair	une chaîne dans un ||| string $content	count=1
namespace	de pixels ||| gmagick	count=1
function_name	extrait dans ||| uudecode all	count=1
function_name	tableaux avec des tests ||| uintersect assoc	count=1
namespace	spécifiée avec un ||| imagick	count=1
function_name	protège un identifiant exemple: ||| pg escape	count=1
function_name	tous les fichiers encodés ||| mailparse uudecode all	count=1
arg_pair	qui héberge la ||| resource $queue	count=1
arg_pair	les paramètres passés ||| int $day	count=1
function_name	similaire à ||| get element	count=1
function_name	[function_name_1] fond de ||| [function_name_2] [function_name_1]	count=1
function_name	spécifié) dans le flux ||| to stream	count=1
function_name	retourne la taille de ||| size	count=1
function_name	extrait une région ||| region	count=1
return	qu'elle ignore ||| int	count=1
function_name	[function_name_1] dernier ||| [function_name_1] [function_name_2]	count=3
function_name	recherche ||| imap search	count=1
function_name	tampon d'événement ssl dont ||| ssl filter	count=1
function_name	certain ||| immortal	count=1
function_name	défini [function_name] ||| fann set [function_name]	count=6
return	[return] nouvel objet ||| [return]	count=1
function_name	retourne le ||| get contents	count=1
function_name	qu'elle fonctionne ||| proc close	count=1
namespace	requête spécifiée par ||| function	count=1
function_name	[function_name_1] xml ||| [function_name_2] [function_name_1]	count=8
namespace	autorise le [namespace] ||| [namespace]	count=3
arg_pair	la signature ||| string $plaintext	count=1
return	cherche si un nom ||| bool	count=1
function_name	filtre ||| set filter	count=3
function_name	la ||| escape	count=1
namespace	valeurs d'une collection oracle ||| oci-collection	count=1
namespace	de caractères passée en ||| function	count=1
arg_pair	définit un générateur d'extraits ||| string $field_override	count=1
return	un fichier ||| resource	count=1
arg_pair	une erreur survient ||| resource $result int $field_offset	count=1
arg_pair	un ||| resource $connection mixed $object_id	count=1
arg_pair	avec une ||| resource $psdoc	count=3
function_name	de profilage de la ||| profiling level	count=1
return	symétrie verticale [return] créant ||| [return]	count=1
function_name	appelle ||| iterator apply	count=1
function_name	paramètre stats.facet ||| stats facet	count=2
function_name	[function_name_1] un objet ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=1
return	des ||| void	count=3
arg_pair	en mode wsdl ||| mixed $wsdl	count=1
function_name	ajoute les ||| add	count=1
arg_pair	des différences ||| string $src	count=1
function_name	le nom pour ||| name	count=1
arg_pair	tableau assoc_array dans la ||| array $assoc_array int $options	count=1
function_name	efface les lignes de ||| pg delete	count=1
function	[function_name_1] en une ||| [arg_pair_2] [function_name_1]	count=1
function_name	position courante du ||| show	count=1
function	[function_name_1] occurrence ||| [function_name_1] [arg_pair_2]	count=1
namespace	php d'un serveur ||| samconnection	count=1
function_name	[function_name_1] libère ||| [function_name_1] [function_name_2]	count=1
arg_pair	de colonnes et de ||| int $columns	count=1
return	précédemment définie ||| string	count=1
return	et optionnellement les ||| array	count=1
function_name	affectées par ||| affected	count=4
arg_pair	crée ||| string $src	count=1
function_name	les liens ajoutés ||| set border	count=2
function_name	[function_name] recursivetreeiterator ||| [function_name]	count=2
function_name	efface un flux ||| pdf delete	count=1
function_name	de l'image ||| set image	count=14
function_name	sert à détruire ||| shmop delete	count=1
arg_pair	16 octets en une ||| bool $short_format	count=1
function_name	les données du fichier ||| mailparse uudecode all	count=1
return	en coordonnées horizontales ||| bool	count=1
function_name	[function_name_1] similaires ||| [function_name_2] [function_name_1]	count=16
namespace	pas ||| pharfileinfo	count=2
arg_pair	à la fonction mktime() ||| int $minute	count=1
function_name	bibliothèque ucd ||| snmp set quick print	count=1
function_name	[function_name] décalage ||| date default timezone [function_name]	count=3
function_name	si elle prend plus ||| max	count=1
function_name	retourne la ||| get var	count=2
function_name	téléchargé par http post ||| uploaded	count=1
function_name	convertit ||| convert to mysqlnd	count=2
function_name	le résultat associé ||| result	count=1
arg_pair	la casse des caractères ||| string $pattern string $string	count=1
function_name	la colonne [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	l'attribut dans l'espace ||| attribute ns	count=1
return	interroge ||| array	count=1
arg_pair	une entrée avec une ||| string $key	count=1
function_name	le dictionnaire spécifié ||| crack	count=1
function_name	de transactions xa ||| xa	count=1
function_name	erreur d'une erreur survenue ||| cubrid error	count=1
namespace	de caractères de ||| serializable	count=1
return	les appels ||| boolean	count=1
function_name	connexion mysql ||| mysql	count=2
function_name	[function_name_1] informations de ||| [function_name_1] debug [function_name_2]	count=2
function_name	le dernier identifiant ||| last insert id	count=1
arg_pair	des filtres ||| string $attribute array $values	count=1
namespace	effectuer [namespace] ||| [namespace]	count=1
return	caractères contenant ||| string	count=2
namespace	requête ||| sqlite3	count=1
return	cette méthode implémente ||| void	count=1
return	position courante du ||| bool	count=1
return	crée un ||| bool	count=3
function_name	[function_name_1] document ||| [function_name_2] [function_name_1]	count=1
function_name	minimale du document ||| cache min	count=1
function_name	la valeur de ||| path	count=1
function_name	du texte à ||| ps	count=1
return	envoyer au client ||| bool	count=1
function_name	fragments proches dans ||| set highlight	count=1
arg_pair	retourne la position numérique ||| string $encoding	count=1
return	première ||| void	count=1
function_name	de newt_suspend() ||| newt resume	count=1
function_name	[function_name_1] [function_name_2] les valeurs ||| [function_name_1] [function_name_2]	count=3
arg_pair	hyperlien à une ||| float $lly	count=1
function_name	est marqué comme original ||| is original	count=1
function_name	de la première ||| dbplus first	count=1
function_name	sur ||| dbplus getlock	count=2
function_name	écrit ||| write	count=9
arg_pair	d'une commande ||| int $command	count=1
function_name	pcntl_sigwaitinfo() suspend ||| sigwaitinfo	count=1
function_name	blob ||| fbsql blob	count=1
arg_pair	paramètre oid de ||| string $oid	count=1
function_name	scan request sur ||| scan	count=1
arg_pair	la valeur de l'argument ||| callable $callback	count=1
arg_pair	première contient les métadonnées ||| string $prefix	count=1
arg_pair	jeu de ||| string $classname	count=1
function_name	la liste des bases ||| fbsql list dbs	count=1
function_name	msql et le place ||| msql data	count=1
function_name	la fonction ||| element by	count=1
function_name	champ [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	réalisation ||| gearmantask	count=2
arg_pair	d'un ||| int $page	count=1
function_name	nombre d'époques de stagnation ||| stagnation	count=2
arg_pair	dans la ||| resource $pdfdoc	count=1
return	représentant le jeu ||| sqlite3result	count=1
function_name	la bufferisation des ||| set buffering	count=1
function_name	service ||| win32 stop service	count=1
arg_pair	de ||| mongodb $db	count=1
function_name	la ||| rewind	count=1
function_name	résultats de la prochaine ||| next result	count=1
function_name	ferme le dictionnaire ||| closedict	count=1
function_name	requête préparée avec ||| execute	count=1
function_name	file d'attente s'interrompt si ||| eio set max poll time	count=1
function_name	similaire à la ||| get element by	count=1
function_name	[function_name_1] requête ||| [function_name_2] [function_name_1]	count=22
function_name	ajoute un ||| add	count=3
return	à pclose() hormis ||| int	count=1
function_name	la clé suivante ||| nextkey	count=1
namespace	ou non en plus ||| function	count=1
namespace	une fois par objet ||| collectable	count=1
return	dans ||| int	count=12
namespace	la corrélation ||| arrayobject	count=1
function_name	char dont l'identifiant ||| ifx free char	count=1
function_name	réseau neuronal ||| fann	count=1
function	[function_name_1] de résultat ||| [arg_pair_2] [function_name_1]	count=1
function_name	signal indiqué par ||| pcntl signal	count=1
arg_pair	fonction cubrid_bind() est utilisée ||| mixed $bind_value	count=1
arg_pair	base ||| string $database_name	count=2
arg_pair	une commande ||| resource $connection string $query	count=1
function_name	et attend [function_name] réponses ||| [function_name]	count=1
function_name	ou définir l'identifiant de ||| id	count=1
function_name	[function_name_1] des ||| [function_name_1] [function_name_2]	count=1
function_name	mois month ||| days in month	count=1
arg_pair	de la largeur ||| float $width	count=1
arg_pair	l'objet target avec ||| string $target	count=1
function_name	attribut dans ||| attributes	count=1
function	de numérotation [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	la fin ||| void	count=1
function_name	un ||| uudecode all	count=2
function_name	incrémente de 1 ||| ucache inc	count=1
arg_pair	avec une des fonctions ||| resource $psdoc float $red	count=1
return	les appels distants rpc ||| boolean	count=1
function_name	prend ||| eio	count=1
function_name	la ||| eregi	count=2
function_name	méthode est utile ||| get	count=1
function_name	dossier d'archives spécifié par ||| entry compressionmethod	count=1
arg_pair	event_handler en tant que ||| string $event_name1	count=1
namespace	nombre de ||| gmagickpixel	count=1
arg_pair	occurrence de needle ||| string $haystack string $needle	count=3
function_name	cette ||| form destroy	count=2
function_name	d'activation pour le neurone ||| activation	count=1
return	un tableau à ||| array	count=1
function_name	modifie la valeur de ||| set include	count=1
arg_pair	un préfixe ||| string $prefix	count=1
arg_pair	la chaîne data ||| string $data	count=1
function_name	[function_name_1] la taille ||| [function_name_1] algo key [function_name_2]	count=1
function	[function_name_1] la structure ||| [function_name_1] train from callback [arg_pair_2]	count=1
function_name	méthode statique create() ||| add types	count=1
function_name	en incluant ||| form	count=1
return	[return] représentative ||| [return]	count=1
function_name	dans la session courante ||| session	count=1
namespace	entier 64-bit number avec ||| mongoint64	count=1
arg_pair	avec ||| resource $image int $red	count=1
namespace	utilisé pour tracer ||| function	count=1
function_name	blob fourni ||| fbsql blob	count=1
function_name	image sans lire ||| ping image	count=1
return	retourne un objet contenant ||| object	count=1
arg_pair	gauche ||| array $left	count=1
arg_pair	de cartes de seuil ||| int $channel	count=1
function_name	d'entrainement en commençant à ||| train	count=1
function_name	tailles ||| sizes	count=2
arg_pair	une date donnée ||| string $format string $date	count=1
function_name	ajoutés à la ||| form destroy	count=1
function_name	mémoires utilisées ||| newt	count=1
function_name	avec une ||| get	count=1
return	fourni et ||| array	count=1
function_name	de colonnes ||| columns	count=1
function_name	passée ||| escape	count=1
function_name	du texte sans balise ||| text	count=1
arg_pair	caractères à l'archive tar/zip ||| string $localname string $contents	count=1
function_name	nouvelle csrcertificate signing ||| csr new	count=1
function_name	module ||| module close	count=2
function_name	l'échelle les entrées dans ||| fann scale input	count=1
function_name	est identique à ||| filter	count=1
function_name	choisit la couleur ||| setrgbcolor	count=1
return	false pour la première ||| void	count=1
function_name	à l'échelle les ||| scale input	count=1
function_name	champ de ||| get res field	count=1
function_name	peinture de l'espace courant ||| stroking	count=1
function_name	est similaire à la ||| type	count=2
function_name	par défaut [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	modifie la valeur de ||| string	count=1
function_name	la dernière requête insert ||| fbsql insert	count=1
namespace	particulière ou un résultat ||| function	count=1
return	un élément ||| bool	count=1
arg_pair	filename sous la forme ||| string $filename	count=1
function_name	les attributs dépendants ||| attr	count=1
arg_pair	pointeur interne de résultat ||| resource $result	count=1
arg_pair	spécial ||| string $pathname	count=1
function_name	[function_name_1] jokers à ||| [function_name_2] [function_name_1]	count=2
arg_pair	pour préparer l'environnement pour ||| string $passwd bool $new_link	count=1
function_name	segment du flux ||| stream set chunk	count=1
arg_pair	pour toutes les ||| resource $ann int $activation_function	count=1
function_name	contenant la dernière erreur ||| ingres error	count=1
return	lorsque la méthode recursivetreeiterator::valid() ||| void	count=1
function	[function_name_1] de seuil ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	fonction fournie par l'utilisateur ||| callable $user_function	count=1
arg_pair	utilisées par le shell ||| string $pattern int $flags	count=1
function_name	accès et ||| eio futime	count=1
function_name	miniatures de l'image spécifiée ||| preview images	count=1
function_name	file d'attente ||| time	count=1
function_name	jointure de ||| line join	count=1
arg_pair	valeur fournie ||| float $value	count=1
namespace	sqlstate ou null ||| function	count=1
function_name	pour insérer un seul ||| cubrid set	count=1
arg_pair	alpha degrés dans ||| resource $p float $alpha	count=1
function_name	le logo php ||| php logo guid	count=2
namespace	appelle les ||| soapserver	count=1
function_name	sous la forme de ||| to	count=1
function	xml [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	filtre ||| set filter range	count=2
function_name	à un marqueur ||| bind array by name	count=1
arg_pair	d'une ||| string $name	count=2
arg_pair	applique une correction ||| resource $image float $inputgamma	count=1
function_name	tri [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] par ||| [function_name_2] [function_name_1]	count=6
arg_pair	la première occurrence ||| string $haystack mixed $needle	count=1
function_name	[function_name_1] par thread ||| [function_name_1] [function_name_2]	count=1
function_name	deux collections : la ||| construct	count=1
return	l'image dans [return] de ||| [return]	count=1
function_name	la file d'attente ||| time	count=1
function_name	est ||| close	count=1
function_name	fois par objet ||| set	count=1
function_name	données ||| uudecode all	count=2
arg_pair	memcached::set() ||| int $expiration	count=1
function_name	qui représente le ||| mysql	count=1
function_name	pdf physique ||| pdf open pdi	count=1
function_name	token d'accès un ||| access token	count=1
function_name	sur ||| entry	count=1
function_name	crée un ||| posix	count=1
function_name	interface de rappel pour ||| callback handler install	count=1
function_name	version de la bibliothèque ||| version	count=2
namespace	qu'elle fonctionne avec les ||| function	count=1
function_name	est utilisée ||| cubrid	count=1
arg_pair	str à la ||| string $str	count=1
function_name	passées dans ||| getopt	count=1
function_name	texte à ||| ps	count=1
function_name	configuration include_path ||| include path	count=1
function_name	fin ||| add	count=1
function_name	un jste ||| jste	count=1
function_name	fichier exe ou auto-exécutable) ||| exe footer	count=1
namespace	une requête http ||| eventhttp	count=1
function_name	l'endroit où ||| log	count=1
arg_pair	générateur d'extraits de texte ||| string $fragmenter	count=1
function_name	obtient des ||| sybase	count=1
namespace	structure ou ||| function	count=1
function_name	statistiques sur chaque ||| statistics	count=1
function_name	la bibliothèque cliente ||| client	count=1
function_name	de stagnation candidates ||| candidate stagnation	count=1
function_name	bits d'exécution ||| chmod	count=1
function_name	la longueur ||| length	count=4
function_name	[function_name_1] [function_name_2] ||| [function_name_2] channel [function_name_1]	count=1
arg_pair	varname et ||| string $varname	count=1
function_name	méthode eventbase::stop() ||| got stop	count=1
namespace	libeio ||| function	count=1
function_name	est similaire à ||| fbsql field type	count=1
arg_pair	transformation avec xsltprocessor ||| string $namespace string $name	count=1
function_name	numéro de inode du ||| get inode	count=1
return	et si elle correspond ||| bool	count=1
function_name	un token d'accès un ||| access token	count=1
function_name	récupère ||| gupnp device info get	count=1
function_name	mémoires ||| destroy	count=1
function_name	[function_name_1] nom de ||| [function_name_1] [function_name_2]	count=2
function_name	flux ||| stream wrapper register	count=2
function_name	données postgresql et ||| pg	count=1
function_name	contenant la liste des ||| fbsql list	count=1
return	avaient ||| void	count=1
arg_pair	convertit une image png ||| string $pngname	count=1
function_name	la ||| mysql	count=1
function_name	si elle ||| eio set max poll	count=1
function_name	définit une fonction ||| ms set	count=1
arg_pair	[arg_pair_1] valeur entre ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	tableau ||| resource $ann	count=1
function_name	un certain ||| immortal	count=1
arg_pair	d'une ||| string $database_name	count=1
function_name	récupère les informations de ||| rrd	count=1
function_name	sur [function_name] ||| [function_name] blob	count=1
function_name	ressources persistantes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	une chaîne dans ||| string	count=1
namespace	timestamp timestamp ou ||| function	count=1
function_name	messages de débogage ||| debug	count=1
function_name	le ||| time allowed	count=1
function_name	[function_name_1] de sqlstate ||| [function_name_2] [function_name_1]	count=1
function_name	protège une chaîne de ||| escape	count=1
function_name	file ||| eio set	count=1
arg_pair	un verrou sur ||| resource $relation	count=1
function_name	valeur de la ||| set include	count=1
function_name	la quantité de mémoire ||| usage	count=1
return	la fonction rewinddir() seul ||| void	count=1
arg_pair	par son index field_number ||| int $field_number	count=1
function_name	forme et tous ||| form destroy	count=1
function_name	la clé key ||| key	count=2
function_name	recherche insensible à ||| sql regcase	count=1
function_name	champs ||| fetch field	count=3
function_name	une simple ligne ||| pdf fit textline	count=1
function_name	un ||| batch	count=2
function_name	que sybase va tenter ||| sybase	count=1
return	chaîne de caractères ||| sdo_das_xml_document	count=1
namespace	d'une [namespace] le nom ||| [namespace]	count=1
arg_pair	une commande et ||| resource $connection string $query	count=1
function_name	de l'objet slob ||| read slob	count=1
arg_pair	crée un fichier ||| int $mode	count=1
namespace	le dernier sqlstate ou ||| function	count=1
arg_pair	une ||| resource $stmt int $row_number	count=1
arg_pair	le fait qu'elle ignore ||| string $pattern	count=1
function_name	retourne la valeur ||| pdf get	count=1
arg_pair	image aux coordonnées ||| int $font	count=1
namespace	le nombre ||| gmagickpixel	count=1
function_name	la fréquence minimale du ||| facet enum cache min default frequency	count=1
function_name	présence d'événements ||| max dispatch interval	count=1
function	[function_name_1] envoyés par ||| [arg_pair_2] [function_name_1]	count=3
function_name	spécifie le ||| yaz	count=2
function_name	la liste des ||| list	count=2
function_name	est lisible ||| is readable	count=2
function_name	retourne des [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	message d'alerte ||| warning	count=1
function_name	contenu ||| ob	count=1
arg_pair	attend qu'elles changent ||| array $write	count=1
arg_pair	a et p ||| gmp $a gmp $p	count=1
arg_pair	paramètres passés ||| int $year	count=2
arg_pair	jeu de résultats à ||| resource $result	count=1
function	blob ibase [arg_pair_2] ||| [function_name_1] open resource $link_identifier [arg_pair_2]	count=1
function_name	composants qui sont ||| form destroy	count=1
function_name	[function_name_1] document fdf ||| [function_name_2] [function_name_1]	count=9
arg_pair	préparer l'environnement pour la ||| string $passwd bool $new_link	count=1
function_name	informations quant aux statistiques ||| statvfs	count=1
function	déplace le [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	une colonne données ||| mixed $param	count=1
namespace	requête émise au serveur ||| solrresponse	count=1
function_name	à ||| data	count=2
return	un autre élément ||| int	count=1
function_name	d'activation ||| fann set activation function	count=4
function_name	au champ spécifié par ||| field	count=1
function_name	socket socket ||| stream socket sendto	count=1
function_name	cache de ||| mysqlnd qc	count=1
namespace	[namespace] méthode ||| [namespace]	count=1
function_name	toutes ||| rzap	count=1
function_name	de sortie pour ||| fann set output scaling	count=1
function_name	[function_name_1] les objets ||| [function_name_2] [function_name_1]	count=1
function_name	non dans la session ||| in session	count=1
function_name	terme à partir ||| bound	count=1
function	mode de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	une ||| mixed	count=4
arg_pair	fichier handle et le ||| resource $handle	count=1
namespace	ferme le pointeur ||| function	count=1
function_name	attribut de l'entrée fournie ||| attribute	count=1
arg_pair	modifie les ||| array $options	count=1
function_name	page pour utilisation ||| pdi page	count=1
function_name	message d'erreur ||| get error message	count=2
arg_pair	la fonction mktime() ||| int $second int $month	count=1
arg_pair	la couleur de fond ||| mixed $background string $format	count=1
function_name	auto_increment ||| insert	count=1
function_name	la cubrid_drop() est utilisée ||| cubrid drop	count=1
function_name	rationnelle pour la fragmentation ||| highlight regex pattern	count=1
function_name	connexion ||| cubrid connect	count=1
function_name	méthode phar::startbuffering() peut ||| buffering	count=1
namespace	serveur ||| mongocursor	count=1
function_name	résultat [function_name] result_id ||| [function_name] field	count=1
function_name	connecte le dernier ||| ps closepath stroke	count=1
function_name	la colonne ||| field	count=1
function_name	pour ||| set metadata	count=2
arg_pair	fonction mktime() ||| int $day	count=1
function_name	un fichier chdb contenant ||| chdb	count=1
function_name	définit l'option de transfert ||| setopt	count=1
namespace	d'un serveur de ||| samconnection	count=1
function_name	utilisées ||| newt form	count=1
arg_pair	position de la ||| string $charset	count=1
function_name	une url suivant ||| assemble	count=1
return	dans l'archive courante ||| int	count=1
function_name	[function_name] de taille ||| crop [function_name]	count=2
function_name	la dernière erreur survenue ||| rrd error	count=1
function_name	style de tiret courant ||| dash	count=1
function_name	plus récentes détectées par ||| attr	count=1
function_name	copie exacte de ||| dbplus rcrtexact	count=1
function_name	courant de ||| current	count=3
function_name	résolution de l'image ||| getimageresolution	count=1
function_name	positionne le [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la valeur de la ||| set include path	count=1
function_name	pas ||| construct	count=1
arg_pair	rpc ||| callable $callback	count=1
function_name	virtuel nommé, en ||| pvf	count=1
function_name	include_once require ou require_once ||| included files	count=1
function_name	défaut ||| close	count=1
function_name	lignes de ||| rzap	count=1
arg_pair	en cas d'échec ||| mixed $options	count=1
arg_pair	l'image à la résolution ||| float $yresolution	count=1
function_name	connexion persistante ||| pconnect	count=6
return	au client ||| bool	count=1
function_name	une chaîne [function_name] ||| maxdb [function_name]	count=1
namespace	variables var ||| function	count=1
arg_pair	fusionne un document d'entrée ||| solrinputdocument $sourcedoc	count=1
function_name	un objet slob ||| slob	count=1
function_name	caractères blancs de fin ||| rtrim	count=1
return	la méthode de compression ||| string	count=1
arg_pair	et windows compris ||| int $operation	count=1
return	par la ||| void	count=1
arg_pair	certificat x509 dans ||| mixed $x509	count=1
function_name	envoie [function_name] le flux ||| sqlsrv send stream [function_name]	count=1
function	[function_name_1] colonne ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	ne sont pas attrappées ||| string $arg	count=1
function_name	similaire [function_name] avec une ||| [function_name]	count=1
function_name	les paramètres ||| params	count=3
namespace	le contexte déclenché par ||| function	count=1
function_name	de bézier ||| bezier	count=1
return	du script en cours ||| string	count=1
namespace	l'objet a terminé ||| collectable	count=1
arg_pair	fonction mktime() ||| int $second	count=1
return	de données en utilisant ||| bool	count=1
return	lit la date de ||| int	count=2
return	partagé [return] plusieurs applications ||| [return]	count=1
return	cette fonction analyse un ||| bool	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] mysqlnd_connection $connection [arg_pair_2]	count=6
arg_pair	méthode est obsolète ||| string $function_name	count=1
function_name	un tableau ||| get array	count=1
function_name	msql et le place ||| msql	count=1
function_name	récupère ||| get facet offset	count=2
function_name	recherche imposées ||| udm clear search limits	count=1
function_name	lit la qualité ||| quality	count=2
function_name	fichier ||| mknod	count=1
namespace	ou false si une ||| function	count=1
function_name	linejoin ||| pdf setlinejoin	count=1
function_name	champ à un ||| field	count=1
namespace	cette méthode ||| pharfileinfo	count=2
function_name	elle prend ||| max poll time	count=1
namespace	vérifie si la file ||| splpriorityqueue	count=1
arg_pair	dans l'argument result ||| mixed $fd int $pri	count=1
arg_pair	de l'étape est un ||| resource $ann	count=1
namespace	ou avec une ||| function	count=1
function_name	postgresql et sauvegarde son ||| pg	count=1
function_name	pour stocker ||| set metadata	count=1
function_name	tous les modes ||| modes	count=1
namespace	l'image depuis le flux ||| gmagick	count=1
arg_pair	envoie la requête query ||| resource $link_identifier	count=1
arg_pair	en cache une ||| string $key	count=2
return	fonction libère les ||| void	count=1
arg_pair	du calendrier julien en ||| int $juliandaycount	count=1
function_name	paramètre patch ||| xdiff file patch	count=1
function_name	mémoires utilisées par ||| form	count=1
function_name	[function_name] la ||| get [function_name]	count=3
function_name	distant sans suivre le ||| ssh2 sftp lstat	count=1
function_name	le long ||| shearimage	count=1
function_name	caractères d'instance xml donnée ||| string	count=1
function_name	données sqlite ou ||| sqlite factory	count=2
function_name	mémoires utilisées par ||| newt form	count=1
function_name	forcer la ||| touch	count=1
namespace	false pour la première ||| recursivetreeiterator	count=1
arg_pair	une fonction définie par ||| string $name	count=1
function_name	typiquement parcourt un lot ||| batch size	count=1
function_name	fréquence minimale [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	à la fonction closedir() ||| void	count=1
function_name	fonction openssl_get_cert_locations() retourne ||| get cert locations	count=1
function_name	de réalisation de ||| task	count=2
arg_pair	d'un vecteur x y ||| int $x int $y	count=1
return	pointeur de ||| void	count=1
function_name	spécifiant la police de ||| getfont	count=1
namespace	toutes les lignes ||| function	count=1
function_name	deux lettres du code ||| code	count=1
function_name	argument ||| string	count=1
function_name	code courant ||| http response code	count=1
return	un fichier qui ne ||| void	count=1
arg_pair	précédemment suspendu avec fam_suspend_monitor() ||| resource $fam_monitor	count=1
arg_pair	ou une fonction définie ||| string $name mixed $step_callback	count=1
function_name	secondes ||| set max poll time	count=2
return	ev::run() est entrée moins ||| int	count=1
arg_pair	de données database ||| resource $link_identifier	count=1
function_name	[function_name_1] termes de ||| [function_name_1] query [function_name_2]	count=1
arg_pair	fichier fd ||| int $mode	count=1
arg_pair	xml filename ||| string $filename	count=1
function_name	retourne la ||| get coding	count=1
namespace	requête émise au ||| solrresponse	count=1
function_name	champs utilisés pour ||| field	count=1
arg_pair	appeler à chaque réception ||| mixed $callback	count=1
function_name	retourne un ||| get iterator	count=2
arg_pair	une [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=5
function_name	un fichier existe et ||| file	count=1
function_name	réinitialise le numéro de ||| fann reset	count=1
function_name	décide si ||| qc set is select	count=1
function_name	fonction mysqli_get_links_stats() retourne ||| mysqli get links stats	count=1
namespace	les composants ||| function	count=2
function_name	prend ||| eio set max poll	count=1
return	d'attente s'interrompt si elle ||| void	count=1
namespace	dernière ||| sqlite3	count=1
arg_pair	la clé key ||| int $timeout	count=1
arg_pair	propriété hwnd ||| int $client_area	count=1
rest	et d'autres [function_2] ||| [return_1] ibase blob [function_2]	count=1
function_name	segment ||| set chunk	count=1
function_name	arguments d'une ||| args	count=1
function_name	file d'attente s'interrompt ||| max poll	count=1
return	déterminer si la ||| bool	count=1
function_name	un tableau qui ||| pg fetch array	count=1
function_name	retourne le dernier identifiant ||| last insert id	count=1
function_name	le [function_name] de ||| get [function_name]	count=1
function_name	include_path pour la ||| path	count=1
function_name	détruit la file ||| remove queue	count=1
function_name	détruit la file ||| queue	count=1
function_name	valeur ||| set	count=1
function	équivalence de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de rappel timestampnoncehandler ||| timestamp nonce	count=1
function_name	colonne ||| field	count=2
return	prépare un ||| bool	count=2
namespace	d'une [namespace] ||| [namespace]	count=4
return	à l'élément ||| void	count=1
function_name	[function_name_1] candidates ||| [function_name_2] [function_name_1]	count=8
function_name	texte intégral ||| match	count=1
function_name	[function_name_1] maximale de ||| [function_name_2] [function_name_1]	count=1
arg_pair	la valeur spécifiée ||| mixed $value	count=1
function_name	notification ||| service proxy add notify	count=2
function_name	consulte dans la portée ||| lookup namespace	count=1
function_name	la base repérée par ||| dba popen	count=1
return	paramètres passés ||| int	count=1
arg_pair	table table_name sous forme ||| resource $connection string $table_name	count=1
function_name	image et la ||| image	count=1
return	un tableau les contenant ||| array	count=1
function_name	libxml ||| libxml use internal errors	count=1
function_name	plugin de réplication et ||| mysqlnd	count=1
return	associée au ||| bool	count=1
function_name	agent ||| agent	count=1
function_name	teinte d'une ||| modulate	count=1
function_name	[function_name_1] remplit la ||| [function_name_2] [function_name_1]	count=3
function_name	libère la mémoire ||| free stmt	count=1
namespace	l'ensemble ||| quickhashintset	count=1
function_name	[function_name_1] finale ||| [function_name_2] [function_name_1]	count=1
arg_pair	le comptage des termes ||| int $frequency string $field_override	count=1
function	[function_name_1] de texte ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	locale ou distante ||| bool $is_output bool $is_null	count=1
arg_pair	dans le système ||| string $pathname	count=1
arg_pair	[arg_pair_1] bleu d'une ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	var ||| push	count=1
function_name	hormis le fait ||| close	count=1
function_name	les options associées à ||| fbsql field flags	count=1
return	l'objet a terminé son ||| void	count=1
namespace	le dossier d'archives spécifié ||| function	count=1
function_name	pour ||| set tag	count=2
function_name	termine la ||| monitor	count=1
namespace	dans un fichier ||| function	count=1
function_name	que pour ||| metadata	count=1
function_name	dernière erreur ||| last error	count=1
function_name	forcer la date ||| touch	count=1
function_name	textes qui correspondent ||| mb ereg	count=1
return	miniatures de ||| bool	count=1
function_name	à la fonction ||| element by	count=1
function_name	définit le ||| set capath	count=1
arg_pair	une entrée spécifique d'un ||| resource $link_identifier string $dn	count=1
arg_pair	collections : la première ||| string $prefix	count=1
function_name	calcule l'entier supérieur suivant ||| trader ceil	count=1
function_name	statut de la transaction ||| transaction status	count=1
function_name	linejoin à ||| pdf setlinejoin	count=1
arg_pair	dans ||| int $oid	count=1
function	[function_name_1] base de ||| [function_name_1] [arg_pair_2]	count=2
function_name	ajoutés ||| newt form destroy	count=2
return	toute ||| bool	count=1
function_name	[function_name_1] périphérique racine ||| [function_name_2] [function_name_1]	count=14
function_name	d'espace ||| elements by	count=1
return	chaîne de ||| sdo_das_xml_document	count=1
function_name	les ticks-par-seconde de l'image ||| image ticks per second	count=1
function_name	caractères alphabétiques ||| eregi	count=1
arg_pair	donné ||| int $fetch_flag	count=1
function_name	du réseau ||| fann	count=1
return	un secret et ||| array	count=1
function_name	cartographie en cache ||| wincache	count=1
function_name	méta pour les ||| metadata	count=1
function_name	ferme le pointeur de ||| closedir	count=1
function_name	le dernier identifiant autogénéré ||| last insert id	count=1
function_name	un élément ||| element by id	count=1
namespace	lit la ||| splfileinfo	count=2
function_name	la forme de ||| to string	count=1
function_name	retourne la méthode de ||| entry	count=1
return	valeurs ||| void	count=1
function_name	nom ||| name	count=11
function_name	émettant une exception) ||| send fail	count=1
function_name	l'itérateur courant interne ||| get iterator index	count=1
function_name	dictionnaire représenté ||| crack	count=1
function_name	écriture pour un évènement ||| event	count=1
function_name	lit ||| buffer read	count=1
function_name	qui sont sur ||| newt	count=1
function_name	est similaire ||| fbsql	count=1
namespace	les lignes de ||| function	count=1
function_name	longueur [function_name_2] ||| [function_name_2] [function_name_1] resource	count=1
return	[return] connexion n'est ||| [return]	count=1
function_name	la ||| fam cancel monitor	count=2
return	l'application précédemment ||| string	count=1
arg_pair	crée un fichier spécial ||| int $mode	count=1
arg_pair	images jpeg et tiff ||| bool $thumbnail	count=1
function_name	objet ||| pg fetch object	count=1
function_name	agent lance une alerte ||| warning callback	count=1
arg_pair	fieldname téléchargé par le ||| string $fieldname	count=1
return	l'élément ||| void	count=2
function_name	prend plus ||| eio set max poll time	count=1
function_name	[function_name] et s'identifie ||| [function_name] new	count=2
function_name	définit ||| set mlt min doc	count=1
arg_pair	les paramètres passés sont ||| int $year	count=2
function_name	types de ||| types	count=1
function_name	récupère la classe déclarante ||| get declaring class	count=1
function_name	souscription à ||| unsubscribe	count=1
arg_pair	des filtres courante ||| array $values	count=1
function_name	définit les drapeaux à ||| set flags	count=1
arg_pair	chaîne str ||| string $delimiter	count=1
function_name	paramètres de résultats mnogosearch ||| udm get res param	count=1
arg_pair	de transformation avec xsltprocessor ||| string $namespace string $name	count=1
function_name	un élément avec un ||| element by id	count=1
function_name	couche ||| layer	count=1
function_name	tampon de [function_name] associé avec ||| get [function_name]	count=1
return	doit être utilisée que ||| void	count=1
function_name	est similaire ||| element	count=1
arg_pair	calcule l'intersection ||| array $array2	count=3
function_name	readline de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	similaire ||| element	count=1
function_name	spécifie le nombre ||| num	count=1
function_name	pg_execute() ||| pg	count=1
namespace	recursivetreeiterator::valid() retourne ||| recursivetreeiterator	count=1
function_name	les données blob/clob ||| lob export	count=1
arg_pair	fichier filename ||| int $width	count=1
function_name	[function_name_1] retourne une ||| [function_name_2] [function_name_1]	count=4
function_name	les valeurs ||| values	count=2
function_name	à ||| db2	count=1
return	et que ||| bool	count=1
return	références à des ||| array	count=1
arg_pair	le point ||| float $x float $y	count=1
function_name	tracer ||| debug	count=1
namespace	être appelé une ||| collectable	count=1
function_name	version de la bibliothèque ||| rrd version	count=1
function_name	[function_name_1] classe déclarante ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] oracle ||| [function_name_2] [function_name_1]	count=16
arg_pair	si ||| string $user	count=1
function	le système [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	retourne les informations ||| stat	count=1
function_name	son utilisation ||| fcache fileinfo	count=1
arg_pair	données data en ||| string $data	count=1
namespace	un fichier temporaire tous ||| function	count=1
function_name	retourne un [function_name] ||| [function_name] special	count=2
function_name	partir d'une chaîne de ||| load string	count=1
function_name	durée du script en ||| path	count=1
function_name	memcached::prepend() ||| prepend by key	count=2
return	déplace ||| void	count=4
arg_pair	suppression d'un ||| array $deleteoptions	count=1
function_name	lit un token ||| token	count=1
arg_pair	fonction mktime() excepté le ||| int $second	count=1
function_name	à l'échelle les ||| fann scale output	count=1
arg_pair	nuls toutes les ||| resource $handle	count=1
arg_pair	les ||| array $authns	count=1
return	conservant la ||| void	count=1
namespace	lorsque l'objet a terminé ||| collectable	count=1
arg_pair	envoyés par le ||| int $format	count=1
function_name	caractères d'instance ||| string	count=1
arg_pair	structure qui héberge ||| array $data	count=1
function_name	l'uri de base utilisé ||| set base uri	count=1
function_name	version ||| rrd version	count=1
function_name	cette fonction récupère ||| get	count=1
function_name	d'erreur retourné ||| error	count=1
arg_pair	excepté ||| int $minute	count=1
function_name	crée un ||| images	count=1
function_name	a une image ||| image	count=1
function_name	une connexion persistante ||| odbc pconnect	count=1
return	défini ||| bool	count=1
function_name	à pclose() hormis ||| proc	count=1
function_name	pour la durée du ||| set include	count=1
arg_pair	une ||| float $height string $optlist	count=1
return	détruit l'analyseur ||| bool	count=1
arg_pair	key dans ||| mixed $key	count=1
function_name	fichier qui ne peuvent ||| metadata	count=1
function_name	le statut d'un travail ||| status	count=1
namespace	être ||| pharfileinfo	count=2
function_name	retourne ||| get supported key	count=1
arg_pair	avec xsltprocessor ||| string $namespace string $name	count=1
function_name	du document fdf ||| fdf	count=2
function_name	cache de requêtes ||| qc	count=1
function_name	été ||| form	count=1
arg_pair	stocke le résultat dans ||| mixed $key int $padding	count=1
function_name	instance inotify ||| inotify	count=2
function_name	l'itération lorsque la ||| end iteration	count=1
function_name	message d'erreur ||| errormsg	count=1
arg_pair	nth -ème racine ||| int $nth	count=1
namespace	l'élément courant ||| recursivetreeiterator	count=1
namespace	retourne ||| mongocursor	count=1
function_name	caractère depuis ||| fgetc	count=1
function_name	d'apparition ||| min doc	count=1
return	excepté ||| int	count=1
function_name	base ||| fbsql	count=1
arg_pair	fonction à fournir ||| int $status	count=1
function_name	fonction d'activation pour la ||| set activation function output	count=1
function_name	éléments descendants avec ||| elements by	count=2
function_name	commande préparée stmt ||| stmt	count=1
arg_pair	avec les définitions ||| resource $id	count=1
arg_pair	needle dans la ||| string $haystack string $needle	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] connection [function_name_2]	count=1
namespace	la frame ||| ktaglib_id3v2_frame	count=1
function_name	tampon fourni par ||| add buffer	count=1
function_name	tous les appels distants ||| loop	count=1
function_name	un marqueur oracle ||| oci bind array	count=1
function_name	est similaire ||| by id	count=1
function_name	von einer mime ||| mime encode	count=1
function_name	et une uri d'espace ||| elements by	count=1
function_name	[function_name] sinon ||| mcrypt module is [function_name]	count=1
return	assigné ||| string	count=1
namespace	certain délai ||| mongocursor	count=1
function_name	si elle ||| eio set	count=1
return	méthode implémente ||| void	count=1
arg_pair	qui contient le ||| int $dictionary_link	count=1
arg_pair	buffer buffer ||| string $buffer	count=1
arg_pair	du domaine domain ||| string $codeset	count=1
function	[function_name_1] chaîne ||| [function_name_1] [arg_pair_2]	count=2
function_name	leurs droits associés ||| columnprivileges	count=1
arg_pair	le calendrier calendar ||| int $calendar	count=2
function_name	noms [function_name_2] ||| [function_name_2] [function_name_1]	count=7
namespace	sql ||| sqlite3	count=2
return	id3v2 pour ||| ktaglib_id3v2_tag	count=1
function_name	reste ||| variant mod	count=2
arg_pair	l'activation de la ||| mixed $condition	count=1
arg_pair	résultats listant les ||| string $table_name	count=1
function_name	les fichiers encodés ||| uudecode all	count=1
function_name	[function_name_1] fichier rpm ||| [function_name_2] [function_name_1]	count=6
function_name	connexion à un jeu ||| get	count=1
function_name	méthode recursivetreeiterator::valid() ||| end	count=1
arg_pair	une séquence ||| string $haystack	count=1
namespace	chargement d'une archive phar ||| phar	count=1
function_name	affiche le texte ||| show text	count=6
arg_pair	dans un ||| string $dest int $flags	count=1
function_name	dernière requête ||| mysqli stmt error	count=2
arg_pair	les structures de ||| resource $pdfdoc int $textflow	count=1
arg_pair	xml filename ||| string $class_name	count=1
arg_pair	identique à la fonction ||| int $hour int $minute	count=1
function_name	un fichier temporaire ||| mailparse uudecode all	count=1
function_name	de 9 miniatures de ||| preview images	count=1
function_name	tous les fichiers ||| mailparse uudecode	count=1
arg_pair	username et le mot ||| resource $ftp_stream string $username	count=1
namespace	où ||| ev	count=2
function_name	von einer mime ||| mime	count=1
function_name	appelle la fonction de ||| call	count=1
function_name	de l'étape ||| fann get	count=1
function	d'activation [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	scan request sur ||| yaz scan	count=1
arg_pair	la chaîne str ||| string $character_mask	count=2
function_name	gamma à ||| imagegammacorrect	count=1
arg_pair	sous-chaîne depuis une chaîne ||| string $str	count=1
return	être ||| string	count=1
function_name	le dossier d'archives ||| zip	count=1
function_name	caractères d'instance xml donnée ||| load string	count=1
function_name	de composition de l'image ||| set image compose	count=1
return	la transaction en ||| bool	count=1
function_name	cubrid_drop() [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	snmp2_get() est ||| string $community	count=1
function	haystack allant [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] père que ||| [function_name_2] [function_name_1]	count=1
arg_pair	le domaine courant ||| string $domain string $msgid1	count=1
arg_pair	la séquence sequence et ||| string $sequence	count=1
arg_pair	à la ||| int $month	count=1
function_name	paramètre facet.date.hardend ||| facet date hard end	count=1
function_name	dossier d'archives ||| zip entry compressionmethod	count=1
function_name	la dernière tentative de ||| db2 conn error	count=1
function_name	qui s'y ||| mailparse uudecode all	count=1
function_name	la ||| poll time	count=2
function_name	bibliothèques clientes oracle ||| oci	count=1
function_name	représenté par l'identifiant ||| crack closedict	count=1
function_name	paramètres de ||| to	count=1
function_name	de compression utilisée ||| compressionmethod	count=1
function_name	tant que les ||| eio	count=1
function_name	issues de transactions xa ||| mysqlnd ms xa	count=1
function_name	compression ||| get compression	count=1
namespace	le curseur ||| mongocursorinterface	count=1
arg_pair	de la requête statement ||| resource $statement	count=1
function_name	dossier d'archives spécifié ||| entry compressionmethod	count=1
function_name	le nom de ||| by name	count=1
function_name	récupère la réponse du ||| get response	count=1
namespace	plus ||| mongocursorinterface	count=1
function_name	prochaine requête xpath ||| xpath	count=1
function_name	récupère le nom ||| get extension name	count=2
function_name	et pâques pour ||| easter days	count=1
arg_pair	une base de ||| string $servername	count=1
arg_pair	une connexion ||| resource $stream int $how	count=1
arg_pair	la position numérique ||| string $encoding	count=1
arg_pair	fonction cubrid_connect() est utilisée ||| bool $new_link	count=1
function_name	la fonction ||| get	count=1
function_name	ligne courant de ||| current line	count=2
function_name	xml donnée ||| string	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image border [function_name_2]	count=1
function_name	le [function_name] ||| [function_name]	count=7
namespace	ou déplace un ||| function	count=1
return	les lignes de ||| int	count=1
arg_pair	est similaire ||| resource $result	count=2
function_name	agent émet une exception ||| exception	count=1
function_name	cache de requêtes ||| mysqlnd qc	count=1
function_name	un lot d'objets ||| batch size	count=1
return	libeio tant ||| bool	count=1
namespace	libère un verrou ||| eventbuffer	count=1
function_name	l'étape pendant l'entrainement rprop ||| fann get rprop	count=1
function_name	mssql_connect() mais avec ||| mssql pconnect	count=1
arg_pair	le ||| int $second int $month	count=1
namespace	retourne le nombre de ||| sqlite3	count=1
return	que pour ||| void	count=1
namespace	éléments du poll courant ||| zmqpoll	count=1
namespace	cette ||| mongocursorinterface	count=1
function_name	est similaire à la ||| mysql field	count=1
function_name	content [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	de ||| splfileobject	count=1
arg_pair	partir d'un fichier log ||| string $log_dir int $timestamp	count=1
function_name	la valeur ||| include path	count=1
function_name	appelle la fonction ||| call	count=1
function_name	dernière erreur ||| error string	count=1
function_name	connexion persistante en cas ||| pg pconnect	count=1
arg_pair	depuis la représentation dom ||| domnode $node	count=1
arg_pair	une transaction distribuée/xa sur ||| mixed $connection	count=1
function_name	de pixel ||| unique image	count=1
function_name	une nouvelle csrcertificate signing ||| csr new	count=1
function_name	la qualité ||| quality	count=2
namespace	texte lors ||| gmagickdraw	count=1
function_name	identifiant donné ||| get	count=1
function_name	met à l'échelle ||| fann scale output	count=1
function_name	incluant les composants ||| form	count=1
arg_pair	event_handler ||| callable $event_handler	count=1
namespace	doit ||| collectable	count=1
arg_pair	nouveau contexte zmq ||| integer $io_threads boolean $is_persistent	count=1
function_name	d'erreur de ||| get error	count=1
arg_pair	le fichier filename dans ||| string $filename	count=1
function_name	antislashs devant ||| db2 escape	count=1
function_name	caractères ||| escape	count=2
function_name	de l' eventbuffer courant ||| buffer	count=1
function_name	une ressource de ||| resource	count=1
namespace	temporaire tous ||| function	count=1
return	méthode ev::run() ||| int	count=2
function_name	plus de ligne à ||| fetch	count=1
arg_pair	pour établir l'environnement ||| string $dbname	count=1
namespace	lors d'une annotation ||| gmagickdraw	count=1
arg_pair	table table_name sous forme ||| string $table_name	count=1
return	la chaîne de requête ||| string	count=1
return	et libère toutes les ||| void	count=2
arg_pair	résultats listant ||| string $schema string $table-name	count=5
return	s'interrompt ||| void	count=1
function_name	record ||| record	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] name resource $result [arg_pair_2]	count=8
function_name	configuration courante ||| config	count=1
function_name	fichier qui ne peuvent ||| set	count=1
namespace	l'événement est en attente ||| event	count=1
return	fonction peut être utilisée ||| void	count=1
return	requête soap appelle les ||| void	count=1
function_name	est utilisée pour lier ||| bind	count=1
function_name	complétée à ||| str pad	count=1
function_name	fichier fourni et ||| mailparse uudecode	count=1
function_name	ouvre un [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	month ||| month	count=1
function_name	de base de données ||| cubrid set db	count=1
function_name	appeler lorsqu'une ||| created	count=1
function_name	appelé alias [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	noms des interfaces ||| interface names	count=2
function_name	document ||| merge	count=2
function_name	[function_name_1] le code ||| [function_name_1] [function_name_2]	count=1
function_name	la valeur de la ||| include path	count=1
arg_pair	utilisateur php event_handler en ||| string $event_name1	count=1
function_name	remplace les textes ||| ereg replace	count=1
function_name	calcule le sinus de ||| trader sin	count=1
function_name	[function_name_1] d'erreur ||| [function_name_1] [function_name_2]	count=4
arg_pair	chemin path à ||| int $offset	count=1
arg_pair	une nouvelle définition ||| float $height	count=1
function_name	[function_name_1] peinture de ||| [function_name_2] [function_name_1]	count=2
function_name	garde ||| keepalive	count=1
return	courante ||| bool	count=2
arg_pair	de deux ||| mongodb $db	count=1
namespace	d'attente ||| splpriorityqueue	count=1
function_name	version courante de ||| version	count=1
arg_pair	de deux collections : ||| string $prefix	count=1
function_name	token d'accès ||| get access token	count=1
function_name	la présence d'événements ||| set max dispatch interval	count=1
arg_pair	ne tient pas compte ||| string $replacement	count=1
arg_pair	que les paramètres ||| int $second	count=1
return	configuration include_path ||| string	count=1
namespace	la version ||| gmagick	count=1
arg_pair	un document pdf ||| resource $fdf_document string $url	count=1
function_name	phar ||| map phar	count=2
function_name	classe personnalisée à ||| info class	count=1
function_name	défini l'époque [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	[function_name_1] résultat ||| [function_name_2] [function_name_1]	count=7
function_name	ldap situé ||| ldap connect	count=2
namespace	un élément avec ||| domdocument	count=1
function_name	qui empêchera même la ||| xlockrel	count=1
function_name	nom du groupe ||| filegroup	count=1
function_name	hormis le fait ||| proc	count=1
arg_pair	un index d'une palette ||| resource $image int $index	count=1
return	et vide les octets ||| string	count=1
function_name	pour ||| path	count=1
arg_pair	contenu dans un fichier ||| resource $connection int $oid	count=1
function_name	un champ facet ||| set facet	count=1
arg_pair	bcc ||| string $bcc string $rpath	count=1
arg_pair	une connexion dans le ||| int $to_neuron float $weight	count=1
arg_pair	xml et produit les ||| string $from string $to	count=1
function_name	[function_name_1] d'une ligne ||| [function_name_2] [function_name_1]	count=1
return	texte lors d'une ||| int	count=1
arg_pair	nom unique distinguished name ||| array $extraattribs	count=1
arg_pair	requête query ||| string $query	count=2
function_name	les liens ajoutés ||| ps set border color	count=1
function_name	été ||| newt form	count=1
function_name	élément avec ||| get element by id	count=1
function_name	scan ||| yaz scan result	count=2
function_name	image à partir ||| image	count=1
arg_pair	filtres en cours ||| bool $exclude	count=1
function_name	bcompiler ||| bcompiler	count=1
function_name	récupère les informations d'un ||| info get	count=1
function_name	fdf ||| fdf set	count=1
function_name	schéma d'entrelacement de l'objet ||| interlace scheme	count=1
return	l'objet ||| bool	count=7
function_name	récupère les blob/clob ||| get	count=1
arg_pair	de données database_name complète ||| string $database_name	count=1
return	objet contenant les informations ||| object	count=1
arg_pair	callback ||| mixed $parameter	count=1
function_name	slob ouvert ||| ifxus seek slob	count=1
arg_pair	le ||| int $minute	count=1
function_name	type nombre entier ||| int	count=1
function_name	fonction spécifie ||| yaz element	count=2
arg_pair	[arg_pair] au ||| [arg_pair]	count=2
function_name	groupe ||| posix getgrgid	count=1
function_name	token d'accès un secret ||| get access token	count=1
function_name	écrits [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	version échappée de la ||| cubrid real escape string	count=1
function_name	valeur de ||| set	count=2
arg_pair	similaire à sybase_fetch_array() ||| mixed $object	count=1
arg_pair	excepté le fait que ||| int $minute	count=1
function_name	retourne ||| to string	count=2
function_name	terme sur [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	crée un yar_client sur ||| yar_client	count=1
arg_pair	casse des ||| string $pattern string $string	count=1
function_name	l'octet [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	forme d'un nouvel ||| int $x	count=1
arg_pair	seconde contient le contenu ||| string $prefix	count=1
function_name	brute du ||| get raw	count=1
function_name	numéro de version du ||| set version	count=1
arg_pair	src_x src_y ||| int $src_x int $src_y	count=1
function_name	fréquence maximale des documents ||| terms max count	count=1
arg_pair	original définie par l'utilisateur ||| string $original string $alias	count=1
return	les commandes ||| bool	count=1
function_name	spécifie le [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	courant interne ||| get iterator	count=1
function_name	un nouveau filtre entier ||| set filter	count=2
arg_pair	dans la base de ||| resource $connection string $qualifier	count=1
function_name	le drm [function_name] actif ||| [function_name] protection	count=1
function_name	extrait dans ||| mailparse uudecode all	count=1
function_name	serveur de tâches à ||| server	count=1
function_name	une position donnée ||| offset	count=1
function_name	connexion à ||| ssh2 connect	count=1
arg_pair	jeu ||| resource $stmt	count=1
function_name	est abstraite ||| is abstract	count=4
function_name	lier des données ||| cubrid lob2 bind	count=1
arg_pair	l'écoute ||| int $numerator int $denominator	count=1
function_name	être utilisé pour tracer ||| maxdb debug	count=1
arg_pair	un attribut ||| array $values	count=1
function_name	[function_name_1] itérable ||| [function_name_1] [function_name_2]	count=4
function_name	nombre maximal [function_name_2] ||| [function_name_2] mlt [function_name_1]	count=1
function_name	est définie ||| is	count=1
function_name	construit ||| load string	count=2
function	test [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	fichiers encodés qui ||| function	count=1
function_name	lié à la ||| ldap	count=1
function_name	premier attribut de l'entrée ||| ldap first attribute	count=1
arg_pair	la fonction cubrid_bind() ||| mixed $bind_value	count=1
return	écrit ||| bool	count=1
function_name	pointer à une ligne ||| fetch	count=1
arg_pair	dans la boîte aux ||| int $options string $charset	count=1
function_name	contenu courant ||| ob get	count=1
function_name	similaire à la fonction ||| get element	count=1
return	en parallèle d'autres tâches ||| gearmantask	count=2
function_name	utilisateur ||| ucache	count=5
namespace	fois ||| ev	count=2
arg_pair	locale ou distante ||| bool $is_null	count=2
arg_pair	la chaîne needle dans ||| string $haystack string $needle	count=1
namespace	par sa ||| function	count=1
namespace	pour stocker des ||| pharfileinfo	count=1
function_name	remplace la brosse courante ||| imagesetbrush	count=1
function_name	indique si ||| is	count=4
function_name	la dernière tentative ||| db2 conn error	count=2
function	statut spécifié [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	dimensions ||| ps string geometry	count=2
function_name	le certificat pkcs#12 fourni ||| openssl pkcs12	count=1
arg_pair	si un ||| resource $dict	count=1
return	place les chaînes ||| void	count=1
function_name	est utilisée pour insérer ||| cubrid set add	count=1
function_name	dynamique ||| momentum	count=1
arg_pair	fonctions eio_* ||| int $pri	count=1
namespace	archive phar sous forme ||| phar	count=1
arg_pair	variable peut être appelée ||| bool $syntax_only	count=1
function_name	qui avaient été ajoutés ||| newt form destroy	count=1
function_name	instance de ||| object	count=1
arg_pair	une page [arg_pair_2] ||| [arg_pair_2] int $page [arg_pair_1]	count=3
function_name	poids de la police ||| getfontweight	count=1
namespace	requête snmp ||| snmp	count=2
function_name	logarithme naturel ||| trader ln	count=1
function_name	qui ||| mysql	count=1
function_name	la taille de ||| size	count=4
function_name	file ||| set max	count=1
function_name	le nom court d'une ||| short name	count=1
function_name	brute du serveur ||| get raw	count=1
function_name	police courante ||| current font	count=2
function_name	[function_name_1] [function_name_2] la frame spécialisée ||| [function_name_1] [function_name_2]	count=2
function_name	pcntl_sigwaitinfo() suspend son ||| pcntl sigwaitinfo	count=1
function_name	la représentation json ||| json encode	count=1
arg_pair	fonction cubrid_set_add() ||| string $set_element	count=1
function_name	mais dans l'ordre inverse ||| reverse	count=1
function_name	tâche en cours ||| do background	count=1
arg_pair	hyperlien à la position ||| float $lly float $urx	count=1
namespace	un itérateur ||| norewinditerator	count=1
namespace	sur le ||| function	count=1
function_name	le fichier exe ||| load exe	count=1
arg_pair	la nth -ème ||| gmp $a int $nth	count=1
function_name	dernière erreur survenue lors ||| error	count=1
function_name	dans une base filepro ||| filepro rowcount	count=1
function_name	tous les paramètres ||| string	count=1
arg_pair	couleurs image en image ||| bool $dither	count=1
namespace	qui sont sur ||| function	count=1
function_name	lignes du résultat ||| mysql	count=1
return	texte lors d'une annotation ||| int	count=1
function_name	du serveur racine ||| root device stop	count=1
namespace	ou null ||| function	count=1
function_name	une instance glo ||| save to glo	count=1
arg_pair	key ||| string $key	count=1
namespace	en mode i/o ||| gearmanworker	count=1
arg_pair	à une valeur ||| int $color float $value	count=1
function_name	ligne courante depuis ||| fetch row	count=1
function_name	envoie [function_name] ||| sqlsrv send stream [function_name]	count=2
function_name	à contacter ||| radius config	count=1
function_name	retourne la version échappée ||| cubrid real escape	count=1
function_name	[function_name] retournée ||| msql [function_name]	count=3
function_name	définir ||| set	count=1
arg_pair	reconstituée et ||| int $metric	count=1
function_name	chaque serveur ||| server by path	count=1
function	fonction extrait [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	l'exception ||| errorexception	count=1
function_name	[function_name_1] oracle ||| function resource [function_name_2] [function_name_1]	count=1
function_name	de l'espace ||| colorspace	count=1
function_name	sans attendre le ||| pg send	count=1
arg_pair	transforme en noeud ||| domnode $node string $class_name	count=1
function_name	[function_name_1] et ||| [function_name_2] create [function_name_1]	count=3
namespace	force l'écriture de tous ||| splfileobject	count=1
function_name	s'interrompt ||| eio set	count=1
function_name	formatage ultérieur [function_name_2] ||| [function_name_2] create [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] num [function_name_2]	count=8
function_name	nom d'hôte dns recherche ||| connect host	count=1
function_name	[function_name_1] longueur du ||| [function_name_1] [function_name_2]	count=1
namespace	cette ||| pharfileinfo	count=2
function_name	définit le ||| setthreadtitle	count=1
function	la taille [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	identifiant ||| by	count=1
return	et ||| resource	count=1
namespace	de l'itération du curseur ||| mongocursor	count=1
arg_pair	horizontale et verticale de ||| float $x float $y	count=1
function_name	width ||| pdf setlinewidth	count=2
arg_pair	l'hôte et le port ||| int $port	count=1
function	[function_name_1] identifié ||| [function_name_1] [arg_pair_2]	count=1
return	les appels distants ||| boolean	count=1
return	en interne pour stocker ||| bool	count=1
function_name	des ||| db2 escape	count=1
arg_pair	de mppe [arg_pair] ||| [arg_pair]	count=1
arg_pair	applique une matrice ||| resource $image array $matrix	count=1
namespace	dans une série de ||| mongocursor	count=1
function_name	l'identifiant de la ||| id	count=1
arg_pair	qui supportent [arg_pair] pages ||| [arg_pair]	count=1
arg_pair	date stockée dans ||| int $value	count=1
return	déplace [return] simplexmliterator ||| [return]	count=1
arg_pair	datetime pour une chaîne ||| string $value string $type	count=1
function_name	à la ||| mysql	count=1
function_name	courante pour le ||| imagesetbrush	count=1
function_name	être utilisée ||| metadata	count=1
function_name	construit un objet ||| construct	count=4
function_name	taille d'une ||| extent	count=1
arg_pair	fils soit terminé, ou ||| int $options	count=1
function_name	les fonctions de ||| buffer set	count=1
function_name	du champ numéro ||| mssql field	count=4
function_name	strpos() ||| mb strrpos	count=2
function_name	[function_name_1] jokers ||| [function_name_1] num [function_name_2]	count=1
arg_pair	page dans le même ||| float $ury int $page	count=1
arg_pair	dernière modification d'un fichier ||| float $mtime	count=1
function_name	courante de php ||| phpversion	count=1
namespace	du ||| gmagick	count=1
arg_pair	méthode yar_concurrent_client::loop() ||| callable $callback	count=1
return	la valeur de ||| string	count=1
function_name	retire un ||| multi remove	count=1
arg_pair	chaîne str ||| string $str	count=9
function_name	image le nombre ||| image	count=1
function_name	récupère la valeur globale ||| get	count=1
return	effectue ||| resource	count=1
function_name	être utilisée pour envoyer ||| set by key	count=1
function_name	la bibliothèque gd installée ||| gd info	count=1
arg_pair	espace ||| string $qualifiedname	count=1
arg_pair	fonction à appeler ||| mixed $arg	count=1
arg_pair	plusieurs ||| mixed $keys string $value	count=1
return	est identique ||| int	count=1
return	niveaux ||| bool	count=1
return	en attente d'être lues ||| bool	count=1
function_name	crée une nouvelle ||| create document	count=1
function_name	utilisées par la forme ||| newt	count=1
function	fenêtre [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	le nombre de ||| sqlite3	count=1
arg_pair	par le ||| string $pattern int $flags	count=1
function_name	des tests sur l'index ||| array uintersect assoc	count=1
function_name	[function_name_1] traduction ||| [function_name_2] [function_name_1]	count=1
arg_pair	les phars orientés web ||| string $f404 array $mimetypes	count=1
arg_pair	et ||| resource $result_id	count=1
arg_pair	les deux versions de ||| string $version2	count=1
function_name	mémoires utilisées ||| form destroy	count=1
namespace	du texte à la ||| function	count=1
function_name	lorsqu'il ||| unset	count=1
function_name	convertir une archive ||| convert to	count=1
function	une ligne [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	durée du script en ||| include	count=1
return	valeur ||| string	count=1
function_name	antislash devant tous les ||| preg quote	count=1
function_name	les ||| log	count=1
function_name	readline affiche le ||| readline	count=1
arg_pair	sur une date ||| string $date	count=1
function_name	classe personnalisée ||| set info class	count=1
function_name	méthode est [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	pour envoyer la ||| set by key	count=1
function_name	refaire l'affichage ||| redisplay	count=1
arg_pair	nombre fixe de couleurs ||| bool $dither	count=1
function_name	d'événement ssl dont les ||| ssl filter	count=1
function_name	ligne depuis ||| cubrid fetch	count=2
return	effectue une requête soap ||| void	count=1
arg_pair	sont pas attrappées par ||| string $arg	count=1
function_name	[function_name_1] ftp ||| function resource [function_name_2] [function_name_1]	count=1
function_name	crée un objet ||| create	count=4
function_name	paramètres ||| to	count=1
function_name	le et logique de ||| and	count=1
rest	et [function_2] ||| [return_1] ibase blob [function_2]	count=1
function_name	représentation yaml de la ||| yaml emit	count=1
arg_pair	fichier valide pour une ||| string $filename	count=1
arg_pair	fieldname ||| string $fieldname	count=1
function_name	retournant ||| win32 query	count=1
arg_pair	identique ||| int $year	count=2
arg_pair	fait que ||| int $second int $month	count=1
function_name	session courante ||| enchant dict is in session	count=1
function_name	définit la qualité ||| ms set	count=1
function_name	la fonction cubrid_execute() est ||| cubrid execute	count=1
function_name	le statut de ||| status	count=1
function_name	informations sur [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	change la taille ||| size	count=1
function_name	du cipher courant pour ||| cipher	count=1
namespace	le pointeur ||| function	count=1
arg_pair	pour ||| string $ca_path	count=1
return	de contrôle sur l'exécution ||| resource	count=1
arg_pair	mktime() excepté le fait ||| int $second int $month	count=1
arg_pair	le fichier remote_file présent ||| string $remote_file int $mode	count=1
return	collections : ||| mongodb	count=1
arg_pair	plusieurs éléments via items ||| array $items	count=1
arg_pair	fonction anonyme à ||| string $code	count=1
function_name	[function_name] pour ||| [function_name] packet	count=1
function_name	de grande taille de ||| lo export	count=1
function_name	filtre ||| filter range	count=2
function_name	lit un caractère de ||| read	count=1
function_name	ligne de départ de ||| start line	count=1
namespace	représentée par l'identifiant ||| function	count=1
function_name	radius consiste ||| radius create	count=1
namespace	le contenu courant du ||| function	count=1
function_name	retourne le [function_name_2] ||| [function_name_2] [function_name_1]	count=45
arg_pair	excepté le fait ||| int $second	count=1
arg_pair	indiqué dans set ||| array $set array $siginfo	count=1
function_name	dernière modification du contenu ||| get mtime	count=1
function_name	[function_name_1] xml associé ||| [function_name_2] [function_name_1]	count=2
return	en chaîne ||| string	count=1
function_name	colonnes de ||| dbase numfields	count=1
function_name	ferme la connexion ||| odbc close	count=1
return	qui sont sur des ||| void	count=1
function_name	définir les ||| module	count=1
function_name	couleur courante ||| gray fill	count=1
namespace	la recherche ||| function	count=1
function_name	document lorsqu'il est ||| unset	count=1
arg_pair	sur celui-ci ||| resource $psdoc	count=1
namespace	récupère les informations ||| function	count=1
namespace	d'un lob est à ||| oci-lob	count=1
function	[function_name_1] texte et ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	l' oid fournie ||| string $oid	count=2
function_name	résultat [function_name] ||| [function_name]	count=1
function_name	prochaine ligne d'une ||| fetch	count=1
arg_pair	dans l'argument ||| int $pri	count=1
arg_pair	occurrence ||| string $haystack	count=7
arg_pair	fichier remote_file présent ||| string $remote_file int $mode	count=1
function_name	s'interrompt si ||| time	count=1
function_name	url du référentiel ||| svn	count=1
namespace	de mettre ||| quickhashstringinthash	count=1
function_name	pour les événements ||| set	count=1
function_name	en cascade ||| set cascade	count=4
arg_pair	la première ||| string $prefix	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] facet date other [arg_pair_2]	count=1
return	spécifiée avec ||| bool	count=1
arg_pair	left_operand en utilisant modulus ||| string $left_operand string $modulus	count=1
function_name	de session curl ||| curl init	count=1
return	surveiller avec les ||| void	count=1
arg_pair	comme une ||| array $array	count=1
function_name	dont l'identifiant est ||| free	count=2
function_name	le terme à partir ||| upper bound	count=1
function_name	pour ||| set add	count=2
function_name	méthode ne ||| construct	count=1
namespace	à la ||| domdocument	count=1
function_name	la compression ||| compression	count=1
function_name	remplit la forme ||| fill	count=1
function_name	au serveur mysql ||| mysql	count=1
function_name	prend plus de ||| eio set	count=1
arg_pair	la fonction mktime() excepté ||| int $day	count=1
function_name	incluant ||| newt form	count=1
return	utilisée sur ||| string	count=1
function_name	fonction ||| field	count=2
function_name	de couleur de l'image ||| color	count=1
arg_pair	utiles ||| string $blob_id	count=1
function_name	aux lettres ||| imap get	count=1
function_name	une paire de sockets ||| pair	count=1
namespace	string par ||| function	count=1
function_name	crée une paire de ||| socket pair	count=1
function_name	retourne le nom ||| get	count=1
namespace	algorithme de ||| arrayobject	count=1
function_name	nouvelle csrcertificate signing request ||| new	count=1
return	de la ||| void	count=3
function_name	précédents intervalles clos ||| elapsed time	count=1
return	les composants qui sont ||| void	count=1
function_name	un verrou sur la ||| dbplus	count=1
function_name	cette fonction crée une ||| create attribute ns	count=1
function_name	script en ||| include path	count=1
arg_pair	d'un élément dans ||| string $attr_name	count=1
function_name	casse ||| key case	count=1
arg_pair	lot d'opérations insert ||| mongocollection $collection array $write_options	count=1
arg_pair	commence par =?iso-8859-1?... est ||| string $field_name string $field_value	count=1
arg_pair	l'environnement pour la ||| bool $new_link	count=1
namespace	[namespace] le processus ||| [namespace]	count=3
function_name	d'une ||| load string	count=2
namespace	[namespace] est un ||| [namespace]	count=3
function_name	distant en suivant ||| ssh2	count=1
function_name	d'exécution ||| chmod	count=1
namespace	valeur ||| function	count=1
namespace	binaire représenté par ||| function	count=1
namespace	un élément ||| splfixedarray	count=1
function_name	image à partir de ||| image	count=1
function_name	bleu ||| image blue	count=1
function	[function_name_1] connexion ||| [function_name_1] resource $connection [arg_pair_2]	count=2
function_name	classes ||| construct	count=1
function_name	du serveur racine ||| gupnp root	count=1
function_name	[function_name_1] [function_name_2] demandée dans le ||| [function_name_2] [function_name_1]	count=10
namespace	collection ||| mongocollection	count=1
arg_pair	donner à ann ||| array $input_vector	count=1
arg_pair	cubrid_connect() est ||| bool $new_link	count=1
function_name	stagnation candidates en cascade ||| cascade candidate stagnation epochs	count=1
arg_pair	dessin à un ||| resource $p float $g	count=1
function_name	récupère la distance depuis ||| get	count=1
function_name	la ||| eio set max poll time	count=2
return	un attribut dans un ||| int	count=1
namespace	indique si le ||| tidynode	count=1
function_name	fonction analyse ||| parse	count=2
function_name	diriger les clés de ||| key	count=1
function_name	l'échelle liquide ||| liquid rescale	count=1
arg_pair	cubrid_set_add() est ||| string $set_element	count=1
return	avaient été ajoutés ||| void	count=1
function_name	hormis ||| close	count=1
function_name	paramètres ||| query params	count=2
function_name	et éteint la temporisation ||| ob	count=1
arg_pair	terminé, ou qu'un signal ||| int $options	count=1
function_name	mots personnelle ||| to personal	count=1
arg_pair	variable_name dans ||| string $variable_name	count=1
function_name	d'erreurs libxml standard et ||| libxml use	count=1
arg_pair	plusieurs options pour ||| array $options	count=1
function_name	cette méthode ajoute ||| add	count=1
function_name	caractères brutes d'un ||| return raw	count=2
arg_pair	la valeur de la ||| string $variable string $value	count=1
arg_pair	héberge ||| resource $queue	count=1
arg_pair	requête query à ||| resource $link_identifier	count=1
arg_pair	une image png ||| string $pngname	count=1
function_name	d'essais que sybase ||| sybase	count=1
arg_pair	cartes ||| string $threshold_map	count=1
arg_pair	chaîne replacement ||| mixed $replacement	count=1
namespace	publiques dans l'objet arrayobject ||| arrayobject	count=1
function_name	contenant les [function_name] de ||| get [function_name]	count=2
arg_pair	calendrier julien en date ||| int $juliandaycount	count=1
function_name	le paramètre socket ||| socket	count=2
namespace	l'attribut ||| hw_api_object	count=1
namespace	délai sur ||| mongocursor	count=1
namespace	place ||| arrayobject	count=1
namespace	[namespace] le nom ||| [namespace]	count=1
arg_pair	la gamme des couleurs ||| float $white_point	count=1
arg_pair	destinataires cc ||| string $cc	count=1
function_name	l'objet ||| to	count=1
function_name	image sans lire ||| image	count=1
arg_pair	une connexion ||| string $username string $password	count=1
function_name	de service ||| win32	count=1
arg_pair	calendrier julien en ||| bool $hebrew	count=1
function_name	pour stocker des données ||| set	count=1
namespace	de caractères ||| sdo_das_xml	count=1
function_name	résultat comme pourrait le ||| mysql unbuffered query	count=1
function_name	des paramètres séparément ||| pg query params	count=1
function_name	toutes les valeurs de ||| ldap get values	count=1
namespace	appelé pour chaque élément ||| recursiveiteratoriterator	count=1
function_name	[function_name_1] la trace ||| [function_name_2] [function_name_1]	count=1
function_name	analyse une liste ||| rfc822 parse	count=1
function_name	prochaine ligne ||| next line	count=2
arg_pair	libre server_key peut être ||| string $server_key array $keys	count=1
function_name	[function_name_1] maximale des ||| [function_name_2] [function_name_1]	count=2
arg_pair	la largeur spécifiée ||| string $text float $width	count=2
function_name	les textes ||| ereg	count=1
function_name	courante de graphicsmagick ||| getreleasedate	count=1
arg_pair	collections : la ||| mongodb $db	count=1
return	de messagerie ||| bool	count=1
function_name	retourne une chaîne de ||| mysqli get	count=1
function_name	construit un arbre ||| string	count=1
function_name	de statut spécifié ||| status	count=1
arg_pair	avant de l'envoyer au ||| string $source_string	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=5
arg_pair	l'objet object ||| mixed $object	count=1
function_name	brutes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un patch [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	pspell ||| pspell	count=1
namespace	identique à evchild::__construct() ||| evchild	count=1
function_name	base interbase et la ||| ibase	count=1
function_name	données ||| set metadata	count=2
namespace	appels distants ||| yar_concurrent_client	count=1
function_name	spécifié est ||| is	count=1
arg_pair	du clic sur ||| resource $psdoc	count=1
arg_pair	de remplissage à un ||| resource $p float $g	count=1
arg_pair	casse des caractères lors ||| string $pattern string $string	count=1
namespace	déplace la position courante ||| harupage	count=1
function_name	à comparer ||| compare	count=1
namespace	de ||| recursivetreeiterator	count=2
namespace	objet ||| collectable	count=1
function_name	le certificat ||| openssl x509	count=1
arg_pair	bloc de mémoire partagée ||| int $shmid int $start	count=1
arg_pair	fois la fonction filter_input() ||| int $type mixed $definition	count=1
arg_pair	le uri contenant ||| string $uri	count=1
arg_pair	protège les ||| resource $link	count=1
function_name	commande d'exécution de postgresql ||| pg result	count=1
arg_pair	filter_input() ||| int $type mixed $definition	count=1
function_name	dont on connaît ||| fstat	count=1
return	le numéro de ligne ||| int	count=1
function_name	a été démarré ||| started	count=1
return	la ||| int	count=15
function_name	à un marqueur oracle ||| oci bind array by name	count=1
arg_pair	fieldname téléchargé ||| resource $fdf_document string $fieldname	count=1
function_name	invoque la fonction et ||| invoke	count=1
function_name	fonction crée une nouvelle ||| create	count=4
return	où ||| int	count=2
function_name	[function_name_1] d'un ||| [function_name_2] [function_name_1]	count=6
arg_pair	montage d'un périphérique externe ||| string $pharpath	count=1
arg_pair	alpha ||| resource $p float $alpha	count=1
return	méthode ||| int	count=2
function_name	un bloc de ||| shmop	count=1
arg_pair	lors ||| string $pattern string $string	count=1
function_name	où les ||| fann set error	count=1
arg_pair	héberge la ||| resource $queue	count=1
function_name	pour toutes [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	query_identifier ||| msql	count=1
function_name	retourne un sommaire de ||| fetch overview	count=1
function_name	[function_name_1] comme pourrait ||| [function_name_1] [function_name_2]	count=4
function_name	tangente pour ||| trader tan	count=1
arg_pair	donnés sans attendre le ||| string $stmtname	count=1
function_name	de l'objet ||| to	count=1
function_name	neurones des couches cachées ||| hidden	count=1
function_name	le logarithme naturel ||| ln	count=1
function_name	à l'image ||| image	count=2
namespace	de sortie ||| gmagick	count=1
function	définit les mots [function_name_1] [arg_pair_2] ||| bool [function_name_1] [arg_pair_2]	count=1
function_name	fonction ||| get element	count=2
function_name	de la ligne suivante ||| dbplus next	count=1
return	de l'image en ||| bool	count=1
function_name	convertir ||| convert to	count=1
arg_pair	lecture ||| resource $id	count=1
arg_pair	fusionne la source à ||| solrdocument $sourcedoc bool $overwrite	count=1
function_name	l'erreur survenue lors de ||| error	count=1
namespace	de la requête émise ||| solrresponse	count=1
function_name	[function_name_1] la fonction ||| [function_name_2] [function_name_1]	count=6
function_name	les ||| proc	count=1
arg_pair	pos ||| int $pos	count=1
function_name	d'une image [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	peut être utilisé pour ||| function	count=1
function_name	définir les modules ||| module	count=1
function_name	[function_name_1] [function_name_2] de ||| [function_name_1] [function_name_2]	count=26
function_name	dont ||| free	count=2
arg_pair	pointant vers un ||| float $ury string $filename	count=1
arg_pair	nombre prédéfini de cartes ||| string $threshold_map	count=1
namespace	ou pour ||| function	count=1
function_name	document pdf ||| pdf get pdi value	count=1
return	les quotas des boîtes ||| array	count=1
function_name	l'uri de la requête ||| uri	count=1
function_name	un ||| element by id	count=4
function_name	gearmanclient::do() est ||| do	count=1
function_name	tampon ||| ob get	count=1
function_name	la file ||| set max poll time	count=1
function_name	nombre de ||| db2 num	count=1
function_name	les modules ||| set module	count=1
arg_pair	dirname ||| string $dirname resource $context	count=1
namespace	la chaîne string par ||| function	count=1
function	[function_name_1] dictionnaire dict ||| [arg_pair_2] [function_name_1]	count=2
function_name	ligne ressemblent ||| ps setlinecap	count=1
function_name	encodés qui s'y ||| uudecode all	count=1
function_name	[function_name_1] numéro d'erreur ||| [function_name_1] last [function_name_2]	count=1
namespace	contient le contenu ||| mongogridfs	count=1
function_name	l'espace de noms ||| start namespace	count=1
arg_pair	une chaîne ||| string $type	count=1
arg_pair	le texte text aux ||| resource $p string $text	count=1
function_name	retourne le dernier ||| pg last	count=1
function_name	un document ||| update attributes	count=1
namespace	avec la ||| gearmanclient	count=1
arg_pair	nom unique distinguished name ||| array $configargs array $extraattribs	count=1
function_name	de 9 miniatures ||| preview images	count=1
function_name	par le ||| buffer	count=1
function_name	l'écriture ou les deux ||| watermark	count=1
namespace	moins le nombre de ||| ev	count=1
namespace	point courant ||| harupage	count=1
function_name	la valeur de la ||| path	count=1
function_name	minimale du document utilisée ||| cache min	count=1
function_name	pdi ||| get pdi parameter	count=2
arg_pair	empile les ||| array $array mixed $value1	count=1
function_name	la file de ||| msg queue	count=1
function_name	pour tous les ||| fann set	count=2
function_name	[function_name_1] du contexte ||| [function_name_2] [function_name_1]	count=2
function_name	retourne la version courante ||| get version	count=1
namespace	ou d'un dossier ||| function	count=1
arg_pair	que contrairement à strcmp() ||| string $str1	count=1
arg_pair	colonne correspondant à ||| resource $result int $field_offset	count=1
arg_pair	spécifié par son index ||| int $field_offset	count=1
function_name	niveau de profilage ||| profiling level	count=1
function_name	calendrier français républicain ||| frenchtojd	count=1
function_name	[function_name_1] de noms ||| [function_name_1] default [function_name_2]	count=1
function_name	page courante ||| page	count=1
function_name	fond [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	statut du ||| status	count=1
function_name	données ||| buffer	count=1
namespace	convertit tout ou partie ||| function	count=1
function_name	appelé lors de ||| end	count=1
function_name	einer mime kopfzeile ||| iconv mime	count=1
function_name	appels systèmes opendir readdir ||| eio readdir	count=1
function_name	chaîne de caractères d'instance ||| string	count=1
arg_pair	mot word ||| string $word	count=1
function_name	inode du fichier ||| inode	count=1
arg_pair	propriétaire du fichier filename ||| string $filename	count=1
function_name	et extrait ||| mailparse uudecode all	count=1
function_name	qu'elle ignore ||| eregi	count=1
function_name	temporisation ||| ob end	count=1
function_name	la clé metaphone de ||| metaphone	count=1
function_name	du paramètre de facette ||| facet	count=1
function_name	les fonctions de rappel ||| event buffer set callback	count=1
function_name	l'événement de buffer que ||| buffer event	count=1
return	sur le document source ||| string	count=1
namespace	serveur de ||| memcache	count=1
function_name	de données postgresql et ||| pg	count=1
return	applique un ||| gmagick	count=1
arg_pair	à cette méthode ||| string $function_name	count=1
arg_pair	générateur d'extraits ||| string $fragmenter	count=1
function_name	du point vert ||| set image green primary	count=1
return	sert à déterminer si ||| bool	count=1
function_name	le contenu des fichiers ||| construct	count=1
return	données du ||| bool	count=1
function_name	schéma d'entrelacement de ||| interlace scheme	count=1
arg_pair	un hyperlien ||| float $lly	count=2
function_name	fonction pdf_get_value() avec le ||| get majorversion	count=1
function_name	récupère [function_name_2] ||| [function_name_1] connection [function_name_2]	count=1
function_name	mime kopfzeile dans l'exemple ||| iconv mime	count=1
arg_pair	unescaped_string ||| string $unescaped_string	count=1
function_name	retourne tous les paramètres ||| to	count=1
return	une ||| tokyotyrant	count=2
function_name	placer un verrou ||| cubrid lock	count=1
arg_pair	un dossier qui pour ||| string $path resource $context	count=1
return	sur le serveur le ||| mongocursor	count=1
function_name	des canaux ||| channel	count=1
function_name	requête préparée et retourne ||| execute	count=1
function_name	de colonne courant de ||| current column	count=1
return	totalité de ||| resource	count=1
function_name	résultat de la dernière ||| fetch	count=1
namespace	noeuds ||| splpriorityqueue	count=1
function_name	la signature sha-256 de ||| getimagesignature	count=1
function_name	de rappel timestamp handler ||| timestamp	count=1
function_name	de statut ||| add task status	count=1
return	[return] de ||| [return]	count=2
return	ferme le pointeur ||| void	count=1
function_name	champ spécifié par ||| field flags	count=1
arg_pair	paramètre variable_name dans ||| string $variable_name	count=1
function_name	un serveur informix ||| ifx	count=1
function_name	retourne sous ||| get	count=1
return	méthode est utile uniquement ||| array	count=1
function_name	deux pour ||| set watermark	count=2
arg_pair	le shell en général ||| string $pattern	count=1
arg_pair	pile __autoload() fournie ||| bool $throw	count=1
function_name	[function_name_1] texte à ||| [function_name_2] [function_name_1]	count=1
function_name	à différents niveaux ||| images	count=1
return	[return] du ||| [return]	count=1
function_name	la fonction oci_result() soit ||| oci	count=1
arg_pair	la ligne tuple ||| string $tuple	count=1
function_name	file d'attente s'interrompt si ||| poll time	count=1
return	un autre ||| int	count=1
function_name	document dom et ||| import dom	count=1
function_name	la fonction ||| rewind	count=1
function_name	cette ||| put cat	count=2
function_name	[function_name_1] documents ||| [function_name_2] [function_name_1]	count=5
arg_pair	génère une signature ||| string $http_method	count=1
function_name	lit un caractère ||| readline callback read	count=1
function_name	et son utilisation ||| fcache fileinfo	count=1
function_name	partir ||| string	count=1
arg_pair	définie par l'objet gmagickpixel ||| gmagickpixel $color int $width	count=1
namespace	s'interrompt si ||| function	count=1
arg_pair	les ||| resource $fd	count=1
return	prend plus ||| void	count=1
arg_pair	: la ||| mongodb $db string $prefix	count=1
function_name	la dernière opération ||| errno	count=3
function_name	la page sous ||| image page	count=1
function_name	version [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	chaîne est [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	un [function_name] ||| [function_name] foreign	count=2
function_name	l'id réel ||| getgid	count=1
function	schéma contenu [arg_pair_2] ||| [function_name_1] validate [arg_pair_2]	count=2
return	[return] ajustant la ||| [return]	count=3
function_name	le message d'erreur lié ||| ldap error	count=1
function_name	[function_name] actuellement ||| get last used [function_name]	count=3
function_name	avec un identifiant donné ||| element by id	count=1
arg_pair	par msglist ||| resource $imap_stream string $msglist	count=1
function_name	fonction eio_poll() ||| eio nreqs	count=1
function_name	les mots seront ||| word	count=1
function_name	ouvre une [function_name] une ||| [function_name]	count=1
arg_pair	str en ||| array $convmap	count=1
arg_pair	des filtres en court ||| bool $exclude	count=1
function_name	champ field donné ||| oci field	count=1
namespace	serveur ||| samconnection	count=1
function_name	construit l'objet ||| construct	count=4
return	métadonnées et la ||| mongodb	count=1
function_name	verrou de lecture ||| cubrid lock	count=1
function_name	cette fonction ||| by id	count=1
function_name	la [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=18
return	d'objets résultants ||| mongocommandcursor	count=1
function_name	décrivant ||| list tables	count=2
function_name	sous ||| to string	count=2
return	[return] du code ||| [return]	count=1
function_name	la page courante et ||| page	count=1
function_name	un identifiant unique pour ||| hash	count=1
arg_pair	paramètre timestamp ||| int $timestamp	count=1
function	la syntaxe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	les données ||| int $dbase_identifier array $record	count=1
function_name	une simple ligne de ||| fit textline	count=1
arg_pair	chemin path à ||| string $path	count=1
function_name	de peinture de l'espace ||| stroking	count=1
arg_pair	sur le nombre de ||| int $length string $encoding	count=1
function_name	de la ||| dbase	count=1
namespace	au système ou ||| function	count=1
function_name	si le noeud courant ||| is	count=1
return	pour passer ||| string	count=1
arg_pair	une valeur ||| string $server_key	count=2
arg_pair	permettant ainsi d'être manipulé ||| int $oid	count=1
function_name	supprime ||| unregister	count=1
arg_pair	un ||| array $array	count=1
namespace	définit la position courante ||| harupage	count=1
arg_pair	fonction à fournir ||| string $contents	count=1
function_name	du texte à la ||| ps show	count=1
function_name	lien fort ||| eio link	count=2
function_name	et à ajouter les ||| add	count=1
function_name	si [function_name] a un ||| get [function_name]	count=1
return	méthode est utile ||| array	count=1
namespace	métadonnées et la seconde ||| mongogridfs	count=1
function_name	boucle libeio tant que ||| eio event	count=1
function_name	dernière erreur imap si ||| imap	count=1
arg_pair	examine le ||| array $cainfo string $untrustedfile	count=1
arg_pair	pour ||| string $column_key	count=1
arg_pair	mode d'accès donné ||| int $mode	count=1
function_name	ressource ||| cancel	count=1
function_name	paire ||| stream socket pair	count=2
function_name	le ||| ftp	count=1
function_name	fonction d'activation pour la ||| fann set activation function output	count=1
function_name	en incluant les ||| newt form destroy	count=1
function_name	[function_name_1] image ||| [function_name_1] [function_name_2]	count=9
namespace	en cours ||| function	count=1
arg_pair	modifie les ||| resource $p	count=1
function_name	a été envoyé en ||| message	count=1
arg_pair	une variable au ||| string $key	count=1
function_name	objet slob ouvert ||| seek slob	count=1
function_name	traitement appliqué ||| preview	count=1
function_name	crée un ||| preview	count=1
arg_pair	choisit le ||| int $dictionary_link	count=1
function_name	utilisée sur le dossier ||| entry	count=1
return	stocker des ||| void	count=1
arg_pair	sert à ||| resource $fd int $pos	count=1
function_name	incrémente ||| ucache inc	count=1
function_name	retourne la chaîne de ||| get	count=1
function_name	bézier ||| bezier	count=1
function_name	mode bytea ||| bytea	count=1
function_name	sert à ||| shmop delete	count=1
function_name	file d'attente s'interrompt ||| eio	count=1
arg_pair	de contenu ||| int $contents	count=1
function_name	la ||| construct	count=2
arg_pair	utiliser mapreduce ||| array $pipeline	count=1
arg_pair	et empile les ||| array $array mixed $value1	count=1
function_name	tag id3v1 ||| id3v1 tag	count=2
function_name	méthode recursivetreeiterator::valid() retourne false ||| end	count=1
function_name	de la requête ||| mlt query	count=1
return	être utilisée que pour ||| void	count=1
function_name	la classe déclarante ||| declaring class	count=2
arg_pair	qui héberge ||| resource $queue array $data	count=1
arg_pair	un document pdf ||| resource $fdf_document	count=1
function_name	similaire ||| fbsql field	count=1
arg_pair	fonction est prévue ||| string $file_extensions	count=1
function_name	prend plus de ||| time	count=1
arg_pair	affiche le prompt ||| string $prompt	count=1
function	depuis [arg_pair_2] ||| [function_name_1] fetch [arg_pair_2]	count=3
namespace	vous craignez de ||| function	count=1
function_name	la fin de ||| add	count=1
function	assigne [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	un schéma contenu ||| schema	count=1
arg_pair	clic sur ||| resource $psdoc float $llx	count=1
function_name	supprime un [function_name_2] ||| [function_name_1] highlight [function_name_2]	count=3
namespace	de l'objet imagick ||| imagick	count=2
namespace	premiers octets [namespace] ||| [namespace]	count=2
function_name	de buffer que la ||| buffer	count=1
return	excepté le fait ||| int	count=1
namespace	l'image ||| haruimage	count=2
function_name	condition pour une ||| condition	count=1
function_name	connexion donnée ||| yaz	count=1
arg_pair	le domaine courant ||| string $msgid1	count=1
function_name	de configuration include_path pour ||| set include path	count=1
function_name	fonction d'activation pour la ||| fann set activation	count=1
arg_pair	message d'erreur ||| string $message	count=1
function_name	d'octets dans ||| byte	count=1
function_name	nombre de champs colonnes ||| dbase	count=1
function_name	fonction est similaire ||| get element by	count=1
function_name	un ||| from	count=2
function_name	pour placer un verrou ||| lock read	count=1
function_name	cette fonction est similaire ||| by	count=1
function_name	d'activation pour le neurone ||| activation function	count=1
namespace	une police ||| harufont	count=1
function_name	position courante ||| tell	count=1
function_name	requête ||| handle	count=1
arg_pair	avoir à utiliser mapreduce ||| array $pipeline	count=1
arg_pair	les paramètres ||| int $month	count=1
function_name	avec les processus ||| close	count=1
function_name	retourne le dernier ||| db2 last insert	count=1
function_name	choisit ||| setrgbcolor	count=1
function_name	fonction interne au lieu ||| internal	count=1
function_name	sémaphore associé au champ ||| field flags	count=1
arg_pair	cubrid et sauvegarde leurs ||| resource $conn_identifier resource $lob_identifier	count=1
return	définit ||| bool	count=1
function_name	l'étape d'erreur [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	écrase la partie ||| erase	count=1
arg_pair	le fait ||| int $second	count=1
function_name	est utilisée pour ||| cubrid	count=2
return	sur le serveur ||| mongocursor	count=1
function_name	ligne ||| fbsql fetch	count=1
arg_pair	une ||| string $new_data2 string $error	count=1
function_name	un identifiant ||| get element by id	count=1
namespace	l'itérateur à l'élément ||| spldoublylinkedlist	count=1
function_name	[function_name_1] maximale candidate ||| [function_name_1] [function_name_2]	count=1
function_name	la couleur ||| color as	count=1
function_name	au sein de l'archive ||| compressed	count=1
function_name	statistiques sur la ||| statistics	count=1
arg_pair	de jours ||| int $day int $year	count=1
function_name	verrou sur ||| lock	count=1
arg_pair	service daemon est permis ||| string $daemon	count=1
arg_pair	une base ||| string $database_name	count=1
function_name	nombre entier ||| int	count=1
function_name	bibliothèque rrdtool ||| rrd	count=1
arg_pair	les caractères alphabétiques ||| string $pattern string $string	count=1
arg_pair	du calendrier julien en ||| int $juliandaycount bool $hebrew	count=1
namespace	se ||| norewinditerator	count=1
arg_pair	chaîne str depuis ||| string $str	count=1
arg_pair	séparateur delimiter ||| string $delimiter	count=1
function_name	champs colonnes ||| dbase numfields	count=1
function_name	la police courante ||| current font	count=2
namespace	caractères passée ||| function	count=1
function_name	utilisée sur le ||| zip entry	count=1
return	premier appel à la ||| void	count=1
arg_pair	old_file ||| string $old_file	count=1
function_name	le lien fort ||| eio link	count=2
namespace	stocker une ||| memcached	count=1
function_name	[function_name_1] devrait être ||| [function_name_2] [function_name_1]	count=2
function_name	valide toutes les transactions ||| commit	count=1
namespace	evstat watcher mais ||| evstat	count=1
function	ax || [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	fonction peut être utilisée ||| module	count=1
function_name	récupère ||| info get	count=1
function	[function_name_1] str ||| [arg_pair_2] [function_name_1]	count=5
function_name	à width ||| pdf setlinewidth	count=1
arg_pair	le fait ||| int $second int $month	count=1
namespace	et sur le ||| xmldiff\file	count=1
function_name	la densité totale d'encre ||| total ink density	count=1
arg_pair	données ||| resource $connection string $data	count=1
function_name	similaire à la ||| element by id	count=1
function_name	de la version ||| version	count=1
function_name	[function_name] étendus d'une ||| get external [function_name]	count=2
function_name	objet ainsi ||| fetch object	count=1
return	connexion décrite ||| bool	count=1
function_name	paramètres de ||| to string	count=1
return	la ||| float	count=5
function_name	température sarprop ||| sarprop temperature	count=2
arg_pair	de données cubrid et ||| resource $conn_identifier	count=1
function_name	rassemble ||| array merge	count=1
return	de toutes les ||| array	count=1
namespace	à un jeu ||| mongoclient	count=1
function_name	le champ ||| field	count=2
function_name	ibase_pconnect() ||| ibase drop	count=1
function_name	levée [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	sur un objet syncreaderwriter ||| syncreaderwriter	count=3
function_name	la durée du script ||| set include	count=1
function_name	défaut $this ||| close	count=1
function_name	oracle connection ||| oci	count=1
function_name	seule image ||| image	count=1
function_name	la durée ||| set include path	count=1
arg_pair	cas d'échec ||| mixed $options	count=1
return	optionnellement les ||| array	count=1
function_name	du résultat ||| result	count=1
arg_pair	collection de documents ||| array $docs	count=1
arg_pair	une variable ||| string $name string $default	count=2
function_name	curseur oracle statement ||| oci	count=1
namespace	evchild::__construct() mais ne démarre ||| evchild	count=1
arg_pair	le fait ||| int $minute	count=1
arg_pair	la colonne indiquée ||| resource $stmt mixed $column	count=2
arg_pair	pointant vers un ||| string $filename	count=1
function_name	première ligne de la ||| dbplus first	count=1
function_name	fonction utilisateur) ||| restore error	count=1
function_name	du thread ||| mysqli thread	count=1
function_name	courante de l'échelle horizontale ||| horizontal scaling	count=1
function_name	[function_name_1] commentaire ||| [function_name_1] [function_name_2]	count=1
namespace	et la seconde contient ||| mongogridfs	count=1
function_name	récupère le nombre de ||| get num	count=1
function_name	un lot d'objets résultants ||| batch	count=1
return	recherche ||| int	count=1
function_name	si elle ||| eio set max	count=1
function_name	un identifiant donné ||| element by id	count=1
function_name	préfixe de l'espace ||| prefix	count=1
function	repère la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	la ligne ||| resource $result int $row	count=1
function_name	la géométrie de l'objet ||| page	count=1
arg_pair	le ||| string $pattern	count=2
arg_pair	de rappel ||| resource $proxy mixed $callback	count=1
namespace	est spécifiée par le ||| function	count=1
arg_pair	dans un fichier ||| string $dest	count=1
arg_pair	d'une ||| int $type	count=1
function_name	[function_name_1] d'occurrences de ||| [function_name_2] [function_name_1]	count=2
function_name	codage vectoriel de ||| imagepsencodefont	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] begin [function_name_1]	count=4
arg_pair	significations spéciales [arg_pair] html ||| [arg_pair]	count=1
function_name	fait que file_get_contents() ||| contents	count=1
return	d'exécution des ||| void	count=1
rest	informations de [function_2] ||| [return_1] [function_2]	count=3
function_name	socket [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de zéro) de ||| position	count=1
function_name	arbre ||| load string	count=2
arg_pair	une ou plusieurs ||| mixed $keys string $value	count=1
namespace	une [namespace] de données ||| [namespace]	count=1
function_name	les ||| module	count=2
arg_pair	éléments d'un ||| int $page	count=1
arg_pair	paramètre type ||| string $type	count=1
function_name	syntaxe ||| php check syntax	count=2
function	un test [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	choisit la ||| pdf setrgbcolor	count=1
namespace	requête http ||| eventhttp	count=1
return	include_path pour la durée ||| string	count=1
function_name	un verrou d'écriture sur ||| lock	count=1
function_name	socket créé ||| socket accept	count=1
arg_pair	version plurielle ||| string $msgid1 string $msgid2	count=1
arg_pair	un voisin immédiat ||| mixed $bordercolor	count=1
return	lors ||| array	count=1
function_name	bufferisées dans le fichier ||| fflush	count=1
arg_pair	calcule l'intersection de ||| array $array1 array $array2	count=3
function_name	en évidence ||| highlight	count=3
namespace	au système ou non ||| function	count=1
function_name	construit un arbre ||| load	count=1
namespace	du fichier ||| function	count=2
function_name	sur ||| zip	count=1
function_name	à une ligne ||| fetch	count=1
arg_pair	event_handler en ||| callable $event_handler string $event_name1	count=1
function_name	la fonction d'activation pour ||| fann set activation	count=3
namespace	du tampon fourni par ||| eventbuffer	count=1
arg_pair	utilisateur [arg_pair] ||| [arg_pair]	count=1
function_name	en utilisant [function_name] crochets ||| offset [function_name]	count=1
function_name	postgresql associée au ||| pg	count=1
function_name	sauvegarde ||| fann save	count=2
function_name	jeu de résultats ||| db2 procedure columns	count=1
arg_pair	angle en degrés ||| float $angle	count=1
function_name	base de données ||| dbase	count=1
function_name	écrase ||| erase	count=1
function_name	le nombre maximal ||| highlight max	count=1
function	type d'octets [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	contenu des ||| construct	count=1
function_name	appelle ||| handle	count=1
function_name	abstraite ||| abstract	count=2
arg_pair	str ||| int $phonemes	count=1
function_name	indique si ||| is shutdown	count=1
function_name	la position indiquée ||| newt draw root text	count=1
function_name	passée en argument ||| string	count=1
arg_pair	équivalente à memcached::set() ||| int $expiration	count=1
function_name	ligne de données ||| ibase fetch row	count=1
function_name	réinitialise le numéro ||| reset	count=1
function_name	réalisation de la ||| task	count=2
function_name	toutes les lignes ||| dbplus rzap	count=1
function_name	les textes qui correspondent ||| mb ereg	count=1
arg_pair	un document ||| array $attributes	count=1
arg_pair	format csv ||| string $escape	count=1
return	cette fonction peut être ||| void	count=1
function_name	erreur ||| cubrid error	count=1
arg_pair	son identifiant packet_id ||| resource $packet_id mixed $var_name	count=1
function_name	[function_name_1] la compression ||| [function_name_2] [function_name_1]	count=6
arg_pair	applique une ||| resource $image	count=2
function_name	contenant ||| db2	count=1
function_name	remplace les ||| dbase replace record	count=1
function_name	quoted printable créée suivant ||| quoted printable encode	count=1
return	sous forme de tableau ||| array	count=1
function_name	informations ||| info	count=7
arg_pair	du domaine ||| string $domain string $directory	count=1
function_name	de lignes affectées par ||| affected rows	count=2
function_name	dans la session courante ||| dict is in session	count=1
function_name	à la couleur d'arrière-plan ||| trim	count=1
return	dans le système de ||| int	count=1
arg_pair	nom donné par address ||| resource $socket string $address	count=1
function_name	toutes les entrées de ||| cat	count=1
function_name	jeu [function_name] ||| add [function_name]	count=1
namespace	interne d'un lob ||| oci-lob	count=1
function	linejoin à [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	champ de résultat uodbc ||| mixed $field	count=1
function	[function_name_1] une ||| [function_name_1] ccitt [arg_pair_2]	count=1
arg_pair	première occurrence ||| mixed $needle	count=1
arg_pair	remplit avec ||| resource $image int $x	count=1
return	tous ||| string	count=1
arg_pair	la première contient ||| mongodb $db string $prefix	count=1
namespace	les modules ||| mongolog	count=1
function_name	connexion à un serveur ||| connect	count=3
function_name	de 9 ||| images	count=1
function_name	sinus de chaque valeur ||| sin	count=1
arg_pair	attrappées par des ||| string $cb string $arg	count=1
function_name	la [function_name] courante ||| get [function_name]	count=1
arg_pair	à la méthode yar_concurrent_client::loop() ||| array $parameters callable $callback	count=1
function_name	lignes ||| dbplus rzap	count=2
function	linejoin [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	une ||| string $format	count=1
function_name	classe ||| info class	count=1
function_name	retourne ||| entry compressionmethod	count=2
function_name	la taille décompressée d'une ||| packed size	count=1
function_name	tests sur ||| array uintersect uassoc	count=1
function	mode [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	qualité ||| gmagick	count=1
function_name	clé privée ||| openssl private	count=1
namespace	les réponses ||| mongocursor	count=1
function_name	readline [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	du champ ||| field	count=15
arg_pair	suppression ||| array $deleteoptions	count=1
arg_pair	: soapfault::soapfault() ||| string $detail	count=1
function_name	virtuel nommé, ||| pvf	count=1
function_name	champ numéro ||| mssql field	count=1
arg_pair	fonction mktime() ||| int $month	count=1
function_name	à ||| form	count=1
function	système [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	sur des ||| void	count=1
function_name	sans attendre le ||| send query	count=1
function_name	à partir d'une ||| string	count=1
function_name	jointure ||| line join	count=1
function_name	la fonction ||| element by id	count=1
arg_pair	src_x src_y ||| int $src_y	count=1
arg_pair	envoie une commande ||| string $query	count=2
function_name	retourne un identifiant unique ||| spl object hash	count=1
function_name	nouvelle instance ||| new	count=1
arg_pair	si name0 ||| string $name0	count=1
namespace	force l'écriture ||| splfileobject	count=1
arg_pair	shm_identifier et libère ||| resource $shm_identifier	count=1
function_name	choisit la couleur utilisée ||| setrgbcolor	count=1
function_name	de version ||| set version	count=2
function_name	fuseau horaire ||| time zone	count=1
function_name	du cache pour ||| wincache	count=1
function	analyse [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	résultats result ||| int $index	count=1
arg_pair	identique à la fonction ||| int $day int $year	count=1
function_name	statut ||| status message	count=1
function_name	données du fichier ||| uudecode all	count=1
arg_pair	taille de size avec ||| int $size	count=1
function_name	de gris pour toutes ||| ps setgray	count=1
function	le schéma [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	à l'échelle les données ||| scale	count=2
function_name	jusqu'au point ||| close path	count=1
namespace	antislashs devant les caractères ||| function	count=1
function_name	dans ||| mailparse uudecode	count=1
arg_pair	mktime() ||| int $hour int $minute	count=1
return	cette fonction peut ||| void	count=1
function_name	fichier exe ou ||| write exe footer	count=1
namespace	efface le ||| function	count=1
function_name	types de ||| cubrid column types	count=1
arg_pair	le uri contenant ||| string $encoding	count=1
function_name	jeu de ||| set	count=1
arg_pair	structure ||| int $num_data	count=1
function_name	grands objets binaires ||| lob read	count=1
function_name	balise donné ||| elements	count=1
function_name	affectées par la dernière ||| mysqli affected	count=1
arg_pair	fonction est prévue pour ||| string $file_extensions	count=1
function_name	un traitement appliqué ||| preview	count=1
function_name	le gestionnaire curl ||| curl	count=1
function_name	email formatée correctement selon ||| write address	count=1
arg_pair	une pile ||| array $array	count=1
function_name	la liste des modules ||| modules	count=1
return	données associée au ||| bool	count=1
function_name	classe personnalisée ||| info class	count=1
return	à surveiller ||| void	count=1
function_name	un test sur un ||| test data	count=1
arg_pair	les paramètres ||| int $hour int $minute	count=1
function_name	notification de ||| proxy add notify	count=1
function_name	sinus de ||| sin	count=1
function_name	[function_name_1] de réponse ||| [function_name_2] [function_name_1]	count=8
return	fichier ||| int	count=4
function_name	similaire ||| mysql field type	count=2
function_name	une fonction de rappel ||| callback	count=2
function_name	retourne le fuseau horaire ||| geoip time zone	count=1
function_name	des liens ||| border dash	count=1
function_name	de mémoire ||| usage	count=1
function_name	variables var .. ||| push	count=1
function_name	contient les paires de ||| pspell config repl	count=1
function_name	le système de ||| eio fstatvfs	count=1
arg_pair	du clic sur celui-ci ||| resource $psdoc float $llx	count=1
function_name	de travaux ||| handle	count=1
arg_pair	lit les données ||| array $addtl	count=1
function_name	les caractères ||| db2	count=1
arg_pair	dernière occurrence de needle ||| string $needle	count=1
function_name	similaire à ||| mysql field type	count=1
function_name	les informations d'un ||| info	count=1
function_name	les bits [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	des fichiers ||| void	count=1
function_name	succès ou false ||| cubrid	count=1
function_name	l'os hôte d'une ||| host os	count=1
function_name	[function_name] représentée ||| [function_name]	count=3
arg_pair	lors de la ||| array $server	count=2
function_name	d'entrée avant de les ||| input	count=1
function_name	récupère ||| get string	count=2
function_name	terminer le processus courant ||| pcntl wait	count=1
function_name	par la ||| form destroy	count=1
function_name	sein d'une archive phar ||| is	count=1
namespace	méthode ||| arrayobject	count=1
function_name	connexion ingres ||| ingres	count=1
arg_pair	d'un ||| resource $result	count=2
function_name	cosinus hyperbolique est ||| acosh	count=1
function_name	connexion à un ||| ssh2 connect	count=1
function_name	facet qui doit ||| facet	count=1
function_name	de la machine maître ||| yp master	count=1
arg_pair	tag ||| string $tag	count=1
function_name	est un destructeur ||| is destructor	count=2
namespace	[namespace] fournissent des ||| [namespace]	count=3
return	et ||| float	count=1
function_name	spécifié) dans le flux ||| copy to stream	count=1
return	avec le ||| string	count=1
arg_pair	brush ||| resource $image resource $brush	count=1
arg_pair	les ||| string $string	count=1
namespace	page ||| harudestination	count=1
function_name	[function_name_1] minuscules ||| [function_name_1] [function_name_2]	count=2
function_name	spécifié par ||| entry compressionmethod	count=1
return	ne doit être utilisée ||| void	count=1
function_name	[function_name_1] le module ||| [function_name_1] [function_name_2]	count=1
namespace	nouveau mutex pour ||| mutex	count=1
return	rrdtool ||| string	count=1
function_name	de champs colonnes ||| fields	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] color [function_name_2]	count=6
function_name	[function_name] résultat d'une ||| [function_name]	count=1
function_name	ingres ||| ingres unbuffered query	count=2
function_name	est un alias de ||| set	count=1
arg_pair	une base ||| string $database_name resource $link_identifier	count=1
function_name	l'itérateur interne passé via ||| inner iterator	count=1
arg_pair	sql pour ||| string $name mixed $callback	count=1
function_name	à différents niveaux ||| preview	count=1
function_name	colonnes et ||| column	count=1
function_name	temporaire tous les ||| mailparse uudecode	count=1
arg_pair	src_w et ||| int $src_w	count=1
arg_pair	index spécifié ||| int $field_index	count=1
function_name	crée une nouvelle instance ||| new	count=1
arg_pair	des lignes par ||| resource $image	count=1
function	fonction spécifie [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	l'archive ||| ziparchive	count=2
return	argument au ||| bool	count=1
function_name	timer à utiliser avec ||| timer set	count=1
function_name	du tampon fourni ||| add buffer	count=1
namespace	bouclage d'un ||| recursiveiteratoriterator	count=1
function_name	cette ||| put nr	count=2
namespace	libère un ||| eventbuffer	count=1
function_name	des tests sur ||| array uintersect uassoc	count=1
function	[function_name_1] l'algorithme spécifié ||| [function_name_1] [arg_pair_2]	count=3
function_name	avec les processus ||| proc close	count=1
function_name	de ||| eio set	count=1
arg_pair	données par défaut ||| mysqlnd_connection $connection	count=1
function_name	donnée en ||| gzcompress	count=1
function_name	digest disponibles ||| md	count=1
function_name	être utilisé pour tracer ||| maxdb	count=1
function_name	une pile ||| array	count=1
namespace	oauth pour ||| oauth	count=3
function_name	dans un fichier qui ||| set	count=1
arg_pair	une chaîne de caractères ||| string $localname	count=1
function_name	spécifiant la ||| getfont	count=1
function_name	l'url complète de la ||| url	count=1
function_name	similaires à retourner à ||| mlt	count=1
function_name	peinture de ||| stroking	count=1
return	et recherche les ||| array	count=1
function_name	de stagnation [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	libère les ||| newt form	count=1
function_name	nombre maximal de jokers ||| max num tokens	count=1
function_name	retourne le ||| file get	count=1
return	supprime un ||| bool	count=1
function_name	et ||| newt form destroy	count=2
function_name	variables ||| array	count=1
function_name	[function_name] revno ||| [function_name]	count=2
arg_pair	dossier qui pour ||| string $path	count=1
function_name	[function_name_1] clob ||| [function_name_2] [function_name_1]	count=4
arg_pair	cette fonction url-encode ||| resource $ch string $str	count=1
function_name	enregistrement dans le ||| yaz record	count=1
function_name	définit ||| set mlt min term	count=1
arg_pair	address à ||| string $address	count=1
arg_pair	cette fonction est identique ||| string $string	count=1
function_name	mktime() excepté le fait ||| gmmktime	count=1
function_name	délai maximal ||| cubrid set query timeout	count=1
function_name	par la forme et ||| form	count=1
function_name	les fichiers ||| mailparse uudecode	count=1
arg_pair	une ||| string $haystack	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] mixed $replace [arg_pair_2]	count=16
namespace	l'image depuis ||| gmagick	count=1
arg_pair	champ ||| string $fieldname	count=2
arg_pair	le flag spécifié aux ||| string $flag	count=1
namespace	la file d'attente ||| splqueue	count=1
arg_pair	variable libre server_key peut ||| string $server_key	count=6
function_name	utilisées par la forme ||| newt form	count=1
function_name	champ de ||| res field	count=1
function_name	retourne le nom de ||| get filename	count=1
arg_pair	détaillées sur une ||| string $format	count=1
function_name	seule image représentant la ||| stereo image	count=1
function_name	en incluant les composants ||| form	count=1
function_name	recule le pointeur ||| prev	count=1
function_name	file ||| msg remove queue	count=2
function_name	clientes oracle après un ||| oci	count=1
function_name	d'une requête ||| query	count=1
function_name	limite supérieure dans ||| include upper bound	count=1
function_name	de socket valide créée ||| socket	count=1
namespace	la couleur ||| function	count=1
function_name	toutes les données du ||| buffer	count=1
namespace	ou 128 bit ||| function	count=1
function_name	avec ||| preview	count=1
function_name	initialise une requête et ||| init	count=1
function_name	blob ibase pour ||| ibase blob	count=2
function_name	prochaine ||| next result	count=2
function_name	retourne la trace ||| get trace	count=1
return	est similaire à ||| string	count=2
function_name	sélectionne ||| msql select db	count=2
function_name	définit la [function_name_2] ||| [function_name_1] cache min [function_name_2]	count=1
arg_pair	crée un ||| string $pathname	count=1
return	lit le contenu courant ||| string	count=1
function_name	facteur ||| threshold factor	count=2
arg_pair	un tag ||| array $tag	count=1
arg_pair	les définitions ||| resource $id array $config	count=1
function_name	d'attente ||| max	count=1
function_name	de modification ||| ctime	count=1
function_name	document ||| document	count=2
function_name	retourne la [function_name_2] ||| [function_name_1] [function_name_2]	count=37
function_name	récupère la valeur ||| fdf get	count=1
function_name	police de ||| font	count=2
function_name	lors de la ||| eregi	count=1
namespace	les informations ||| function	count=1
function_name	[function_name_1] depuis une ||| [function_name_1] [function_name_2]	count=2
arg_pair	en retourne les dimensions ||| array $imageinfo	count=1
return	des ||| mongodb	count=1
namespace	tar ou zip à ||| phardata	count=1
arg_pair	un préfixe utilisé ||| string $prefix	count=1
function_name	qui sera ||| handler	count=1
return	la configuration courant de ||| void	count=1
function_name	la fin ||| eof	count=1
namespace	les chaînes ||| arrayobject	count=1
function_name	snmpwalk/snmpget etc ||| snmp set enum print	count=1
function	fonction d'activation [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
function_name	un événement de signal ||| signal event	count=1
function_name	l'étape d'erreur ||| step error threshold	count=2
function_name	typiquement parcourt ||| size	count=1
function_name	analyse ||| rfc822 parse	count=2
return	avertissement cette ||| bool	count=2
function_name	le terme à ||| upper bound	count=1
function_name	long d'un champs ||| long	count=1
function_name	sortie de la ||| output	count=1
arg_pair	ignore ||| string $string	count=1
arg_pair	le ton qui doit ||| resource $psdoc int $shadingid	count=1
arg_pair	envoyées [arg_pair] ||| [arg_pair]	count=1
function_name	session curl ||| curl setopt array	count=1
arg_pair	couleurs image en image ||| resource $image bool $dither	count=1
function_name	session curl à utiliser ||| curl	count=1
function	lie un tableau [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
arg_pair	contient le contenu des ||| string $prefix	count=1
function_name	contrôle de pagination taille ||| control paged result	count=1
function_name	les paramètres [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	oauth pour les appels ||| oauth	count=1
function	[function_name_1] sur la ||| [function_name_1] [arg_pair_2]	count=2
function_name	retourne ||| get mlt	count=3
function_name	courant du tampon de ||| get	count=1
arg_pair	une source ||| string $password	count=1
function_name	définit le terme à ||| bound	count=1
return	dans une ||| bool	count=1
namespace	crée un nouveau timestamp ||| mongotimestamp	count=1
arg_pair	créer ou ||| int $size	count=1
function_name	diriger la clé key ||| delayed by key	count=1
function_name	[function_name_1] fréquence minimale ||| [function_name_1] cache [function_name_2]	count=1
return	caractères ||| string	count=15
function_name	le nom du module ||| module name	count=1
function_name	minimum de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	effectue une équivalence ||| eqv	count=1
arg_pair	fonction cubrid_bind() est ||| mixed $bind_value	count=1
function_name	si elle ||| time	count=1
arg_pair	considère ||| array $array	count=1
arg_pair	julien en date ||| int $juliandaycount bool $hebrew	count=1
function_name	à la fonction ||| element by id	count=1
function_name	curseur ||| immortal	count=1
function_name	lit la miniature ||| exif thumbnail	count=1
function_name	session [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	libxml standard et ||| libxml	count=1
function_name	un fichier qui ||| set	count=1
function_name	à l'échelle ||| fann scale train	count=1
return	données du fichier fourni ||| array	count=1
arg_pair	lit ou définit le ||| resource $link_identifier	count=1
arg_pair	effectue une vérification ||| resource $dictionary	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] background [function_name_1]	count=1
namespace	ressources mémoires utilisées ||| function	count=1
function_name	paramètre ||| buffer	count=1
function_name	sommaire ||| overview	count=1
function_name	retourne le ||| introspection get state	count=1
arg_pair	la dernière occurrence de ||| string $haystack	count=2
function_name	pour la ||| include	count=1
function_name	de sévérité ||| min message severity	count=1
namespace	serveur de cache ||| memcache	count=1
function_name	image dans ||| image	count=1
function	[function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] mime d'une ||| [function_name_2] [function_name_1]	count=2
function_name	la dernière ||| errno	count=3
function_name	curl ||| curl multi	count=1
function_name	copie vide ||| rcrtlike	count=1
function	[function_name_1] x509cert ||| [function_name_1] [arg_pair_2]	count=1
function_name	décompressée d'une entrée ||| packed	count=1
function_name	les champs facet ||| set facet	count=1
arg_pair	données du jeu ||| resource $stmt	count=1
function_name	[function_name_1] résultat de ||| [function_name_1] [function_name_2]	count=4
function_name	la trace de ||| trace as	count=1
function_name	un nouveau filtre ||| filter range	count=1
return	un tableau multidimensionnel ||| array	count=1
arg_pair	le jambage du texte ||| string $text	count=1
arg_pair	fusionne ||| solrdocument $sourcedoc bool $overwrite	count=1
function_name	à précharger ||| prefetch	count=1
function_name	similaire à la fonction ||| fbsql	count=1
return	nombre de champs ||| int	count=1
return	la casse des ||| int	count=1
function_name	f ||| f	count=1
function_name	mime kopfzeile dans ||| mime	count=1
function_name	par [function_name] ||| mcrypt module is [function_name]	count=3
function_name	nombre maximal de motifs ||| set mlt max num tokens	count=1
arg_pair	à l'écoute ||| int $denominator	count=1
namespace	cette ||| mongolog	count=1
function_name	de la fin ||| end	count=1
arg_pair	offset ||| int $offset	count=3
function_name	fork dans le ||| fork	count=1
function	à [arg_pair_2] ||| [function_name_1] seek [arg_pair_2]	count=2
namespace	retourné par ||| function	count=3
function_name	[function_name_1] remplit ||| [function_name_1] [function_name_2]	count=3
function_name	de connexion spécifié ||| mysql create db	count=1
arg_pair	size avec ||| int $size	count=1
return	affiche toute les ||| bool	count=1
function_name	passe de ||| fbsql database password	count=1
function_name	de caractères d'instance ||| load	count=1
function_name	libère un résultat ||| free	count=2
function_name	renvoie la position ||| ftell	count=1
function_name	fichiers ||| all	count=1
function_name	prépare ||| prepare	count=1
arg_pair	passés ||| int $year	count=2
namespace	file ||| splpriorityqueue	count=1
function_name	les champs lus ||| str getcsv	count=1
function_name	retourne la largeur ||| stringwidth	count=1
function_name	fréquence en ||| frequency	count=2
function_name	schéma de ||| schema	count=1
arg_pair	pour l'activation de ||| int $condition_type mixed $condition	count=1
return	pour le dessin des ||| bool	count=1
arg_pair	pas attrappées par ||| string $arg	count=1
function_name	liens ||| pdf set border dash	count=2
arg_pair	une ||| resource $pdfdoc	count=2
namespace	série ||| mongocursor	count=1
function_name	filtre entier ||| set filter	count=2
function_name	bloc de ||| shmop delete	count=1
arg_pair	avec [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	caractères d'instance xml donnée ||| load	count=1
arg_pair	entre des tableaux avec ||| array $array1	count=1
function_name	point ||| point	count=2
namespace	contient le ||| mongogridfs	count=1
function_name	d'une chaîne ||| load string	count=1
function_name	classe personnalisée à utiliser ||| class	count=1
namespace	.. ||| function	count=1
function_name	avaient ||| newt form destroy	count=2
function_name	dom et la transforme ||| import dom	count=1
function_name	l'attribut ||| ldap mod	count=2
function_name	sinus hyperbolique est ||| asinh	count=1
function_name	le terme à partir ||| bound	count=1
arg_pair	défini ||| resource $ann float $quickprop_mu	count=1
function_name	dernière requête ||| stmt errno	count=1
function_name	récupère l'url ||| get request url	count=1
namespace	ou similaire en un ||| function	count=1
return	fichier spécial ||| bool	count=1
function_name	libère toute la ||| free	count=2
arg_pair	prédéfini de cartes de ||| int $channel	count=1
arg_pair	tableau rows dans ||| array $rows	count=1
return	tar ||| phardata	count=1
function	le bytecode [arg_pair_2] ||| [function_name_1] class [arg_pair_2]	count=1
return	mktime() excepté ||| int	count=1
arg_pair	service daemon ||| string $daemon string $address	count=1
function_name	pour les événements ||| set event	count=1
function_name	de rendu de l'image ||| get image rendering intent	count=1
return	comme une pile et ||| int	count=1
function_name	verrou ||| dbplus	count=1
arg_pair	de rappel si le ||| resource $proxy mixed $callback	count=1
arg_pair	la connexion spécifiée ||| resource $connection bool $value	count=1
return	lors de la recherche ||| int	count=1
namespace	par les données ||| function	count=1
function_name	partir d'une chaîne ||| load	count=1
return	en cours ||| bool	count=5
function_name	configure l'orientation de l'image ||| image orientation	count=1
function_name	ressource ouverte par bbcode_create() ||| bbcode destroy	count=1
arg_pair	fait que les paramètres ||| int $hour	count=1
arg_pair	requête statement ||| resource $statement mixed $field	count=1
function_name	retourne la méthode ||| get	count=2
arg_pair	données ||| string $data	count=1
arg_pair	d'utilisateur username et le ||| resource $ftp_stream string $username	count=1
function_name	de sortie pour ||| set output scaling	count=1
function_name	temporaire tous les fichiers ||| mailparse	count=1
function	[function_name_1] données database ||| [function_name_1] [arg_pair_2]	count=5
function_name	les fichiers encodés ||| mailparse uudecode	count=1
arg_pair	prédéfini de cartes ||| string $threshold_map int $channel	count=1
namespace	crée un ||| function	count=1
namespace	de se reconnecter ||| mysqlnduhconnection	count=1
function_name	présence ||| set max dispatch interval	count=2
function_name	configuration ||| tidy config	count=1
function_name	le reste ||| variant mod	count=1
namespace	par défaut de ||| function	count=1
return	position ||| bool	count=1
arg_pair	filtres en cours ||| float $max bool $exclude	count=1
arg_pair	une requête ||| string $query string $dbpath	count=1
arg_pair	certains éléments d'un ||| int $page string $optlist	count=1
arg_pair	un hyperlien à la ||| float $lly float $urx	count=1
arg_pair	de type substr() basée ||| int $start	count=1
arg_pair	exécute la commande ||| string $command	count=1
function_name	gestionnaire curl sous la ||| curl	count=1
function_name	[function_name] file ||| [function_name]	count=3
arg_pair	données database_name complète sur ||| string $database_name	count=1
function_name	termine la ||| fam cancel monitor	count=1
function_name	ligne du ||| fetch assoc	count=1
arg_pair	[arg_pair_1] buffer buf ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	éléments descendants [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	ajoutés à la forme ||| function	count=1
arg_pair	les ||| int $day int $year	count=1
arg_pair	l'environnement pour la connexion ||| bool $new_link	count=1
arg_pair	applique une correction ||| resource $image	count=1
arg_pair	remplacer le domaine courant ||| string $domain string $msgid1	count=1
function_name	flux ||| copy to stream	count=2
function_name	service ||| gupnp service proxy action	count=1
function_name	gestion des ||| odbc binmode	count=1
arg_pair	l'hôte host ||| string $host	count=1
function_name	le nom du champ ||| field name	count=3
function_name	[function_name_1] une trace ||| [function_name_2] [function_name_1]	count=1
arg_pair	saturation ||| float $brightness float $saturation	count=1
arg_pair	les données fournies dans ||| int $dbase_identifier array $record	count=1
function_name	extrait dans un fichier ||| uudecode all	count=1
function_name	retourne un booléen ||| get	count=1
function_name	liste de serveurs ||| servers	count=1
function_name	ligne d'une ||| oci fetch	count=1
return	pour la ||| void	count=1
function_name	calendrier grégorien : 4714 ||| gregoriantojd	count=1
namespace	la base de ||| mongocursorinterface	count=1
arg_pair	clé ||| int $expiration	count=1
function_name	du [function_name_2] ||| [function_name_2] [function_name_1]	count=16
namespace	retourne le ||| function	count=1
function_name	feature demandée [function_name] version ||| [function_name]	count=1
arg_pair	fichier resolv.conf et y ||| string $filename	count=1
namespace	contours ||| gmagickdraw	count=1
function_name	l'esclave ||| mysqlnd ms	count=1
return	termes la ||| int	count=1
function_name	drapeaux ||| flags	count=1
arg_pair	les structures ||| resource $pdfdoc int $textflow	count=1
function_name	de surveillance en cours ||| watch	count=1
function_name	retourne [function_name_2] ||| [function_name_1] train stop [function_name_2]	count=1
return	en utilisant ||| bool	count=13
namespace	applique un ||| gmagick	count=1
function_name	la requête ||| mlt query	count=1
function_name	une région ||| region	count=2
function_name	retourne ||| eio get	count=1
function_name	à ||| by id	count=2
return	à une relation dans ||| int	count=1
arg_pair	être utilisé avec ||| resource $radius_handle string $hostname	count=1
function_name	diriger les clés de ||| multi by key	count=1
namespace	d'enregistrements qu'une requête ||| tokyotyrantquery	count=1
return	caractères lors de ||| int	count=1
namespace	nombre ||| function	count=1
arg_pair	lit nbytes octets ||| int $nbytes	count=1
namespace	le paramètre ||| eventbuffer	count=1
namespace	avec la méthode gearmanclient::setcontext() ||| gearmanclient	count=1
function_name	[function_name] chemin ||| gupnp root device [function_name] relative	count=1
function_name	écrit le ||| write	count=1
function_name	une ou [function_name] de ||| set [function_name]	count=1
function_name	sur le socket ||| last socket error	count=1
function_name	un [function_name] ||| [function_name] column	count=2
arg_pair	la chaîne str depuis ||| string $str	count=1
function_name	au service exposé ||| gupnp service proxy	count=1
function_name	libère de la ||| free	count=1
namespace	base ||| function	count=1
namespace	fait qu'elle ignore la ||| function	count=1
return	métadonnées et la seconde ||| mongodb	count=1
arg_pair	collections : ||| mongodb $db	count=1
arg_pair	une date stockée dans ||| resource $pxdoc	count=1
function_name	l'url complète ||| request url	count=1
function_name	la ||| entry	count=1
function_name	l'aide de deux ||| construct	count=1
function_name	schéma rng [function_name] dans ||| relax ngvalidate [function_name]	count=1
function_name	de caractères ||| db2 escape	count=1
function_name	[function_name_1] de rappel ||| [function_name_2] [function_name_1]	count=2
function_name	par son nodename ||| named item	count=1
function_name	identique à [function_name] avec une ||| [function_name] fetch	count=1
function_name	affiche le texte ||| text	count=1
function_name	à ||| db2 escape	count=1
namespace	le gestionnaire d'exceptions par ||| function	count=1
function_name	restaure ||| restore	count=4
namespace	l'objet rararchive ||| rararchive	count=1
function_name	[function_name_1] [function_name_2] avec un objet imagick ||| [function_name_1] [function_name_2]	count=1
function_name	la fonction rewinddir() seul ||| rewind	count=1
function_name	retourne ||| mysqlnd memcache get	count=1
function_name	d'un [function_name] résultat d'une ||| [function_name]	count=1
function_name	libère toutes les ressources ||| free	count=1
namespace	collectées par le ||| function	count=1
function_name	génère la signature sha-256 ||| getimagesignature	count=1
function_name	la carte de couleurs ||| colormap image	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image pixel [function_name_2]	count=1
rest	supprime un [function_2] ||| [return_1] [function_2]	count=1
arg_pair	chromacité du point ||| float $x float $y	count=1
arg_pair	incrémente une valeur ||| string $server_key string $key	count=1
function_name	de configuration include_path pour ||| path	count=1
return	ferme le ||| void	count=1
function_name	à partir d'une ||| load	count=1
namespace	précédemment définie avec ||| gearmanclient	count=1
function_name	: la première ||| construct	count=1
function_name	du résultat sybase associé ||| sybase	count=1
function	[function_name_1] x509cert ||| [arg_pair_2] [function_name_1]	count=3
function_name	depuis la dernière ||| error	count=1
function_name	serveur qui ||| server	count=1
function_name	est une [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	d'activation pour ||| activation function	count=3
namespace	ou plusieurs ||| function	count=1
function_name	geoip_country_code3_by_name() ||| geoip country code3 by	count=1
function_name	de lignes affectées ||| affected rows	count=1
function_name	les modules à ||| set	count=1
arg_pair	spotname et comme couleur ||| string $spotname	count=1
function_name	flux ||| to stream	count=2
rest	au début [function_2] ||| [function_2] [return_1]	count=1
function_name	comparaison insensible à ||| strcasecmp	count=1
namespace	sur les caractères alphabétiques ||| function	count=1
function_name	du script en cours ||| set include path	count=1
function_name	l'attribut dans l'espace ||| attribute	count=1
function	[function_name_1] pour le ||| [arg_pair_2] [function_name_1]	count=1
function	la largeur [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	d'extraits ||| string $fragmenter	count=1
namespace	[namespace] le paramètre ||| [namespace]	count=3
namespace	en conservant la ||| arrayobject	count=1
function_name	la trace de ||| trace	count=2
function_name	le schéma d'entrelacement de ||| interlace scheme	count=1
function_name	exe ou auto-exécutable) ||| write exe footer	count=1
function_name	de rappel pour ||| buffer set callback	count=1
function	insère [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	méthode de compression ||| string	count=1
function_name	récupère [function_name_2] ||| [function_name_1] max [function_name_2]	count=1
function_name	de configuration include_path ||| set include	count=1
function_name	zéro) de l'itérateur interne ||| position	count=1
function_name	libère la ||| free	count=2
function_name	version échappée ||| cubrid real escape	count=1
function_name	[function_name_1] file de ||| [function_name_2] [function_name_1]	count=2
arg_pair	d'une couleur avec ||| resource $image int $red	count=1
arg_pair	données d'un ||| resource $statement	count=1
return	domnodelist contenant tous ||| domnodelist	count=1
function_name	[function_name_1] l'octet courant ||| [function_name_1] [function_name_2]	count=1
arg_pair	de la clé /status ||| resource $fdf_document	count=1
arg_pair	socket un ||| mixed $socket	count=1
arg_pair	en la valeur spécifiée ||| mixed $value	count=1
function_name	tracer la ||| maxdb	count=1
namespace	le pointeur interne ||| solrdocument	count=1
function_name	devient disponible ||| element	count=1
return	allouée en interne ||| bool	count=1
function_name	est utilisé pour changer ||| set	count=1
function_name	la couleur ||| color value	count=1
function_name	la fonction geoip_country_code3_by_name() ||| geoip country code3	count=1
arg_pair	une ||| resource $imap_stream	count=1
function_name	fourni ||| all	count=1
arg_pair	document xml basé sur ||| string $src string $diff	count=1
function_name	la couleur courante de ||| gray fill	count=1
return	sortie en ||| bool	count=1
function_name	sqlstate retournée par ||| stmt error	count=1
arg_pair	génère une chaîne de ||| string $http_method	count=1
return	[return] associatif ||| [return]	count=4
function_name	retourne [function_name_2] ||| [function_name_1] last [function_name_2]	count=3
function_name	lecture sur les secondaires ||| get slave okay	count=1
function_name	tangente pour chaque ||| tan	count=1
arg_pair	condamnations ||| int $revision_no	count=1
arg_pair	de résultats à une ||| resource $result	count=1
function_name	de session curl à ||| curl init	count=1
namespace	courant simplexmliterator a ||| simplexmliterator	count=1
function_name	la forme et ||| form	count=1
function_name	exception lorsqu'une erreur survient ||| exception	count=1
arg_pair	req_identifier ||| resource $req_identifier	count=1
arg_pair	variable libre server_key peut ||| string $server_key array $keys	count=2
function_name	fichiers encodés qui ||| mailparse	count=1
arg_pair	première ||| string $prefix	count=1
function_name	ajoute un lien ||| pdf add	count=1
function_name	à la ||| fbsql field	count=1
function_name	miniatures de ||| preview	count=1
arg_pair	la position ||| resource $psdoc	count=1
function_name	tous les ||| newt form destroy	count=1
function_name	transformation ||| trans matrix	count=1
arg_pair	fait que les paramètres ||| int $hour int $minute	count=1
function_name	lecture ||| chmod	count=1
function_name	la méthode de compression ||| entry	count=1
return	les clé et les ||| void	count=1
arg_pair	est au format champ= ||| resource $connection	count=1
return	un ||| array	count=3
namespace	de la [namespace] une ||| [namespace]	count=1
function_name	rappel timestamp ||| timestamp	count=1
return	méthode ev::run() est sortie ||| int	count=1
function_name	maximale d'une ligne ||| max line len	count=1
function_name	peut être ||| set module	count=1
function_name	document xml ||| save xml	count=1
function_name	contenant les tailles ||| sizes	count=1
function_name	de l'image spécifiée avec ||| preview images	count=1
function_name	ajoutés à la forme ||| destroy	count=1
function_name	spécifiée ||| preview images	count=2
function_name	[function_name_1] instanciable ||| [function_name_2] [function_name_1]	count=4
function_name	type possible d'image ||| image type	count=1
return	caractères lors ||| int	count=1
function_name	licence imagemagick ||| image magick license	count=1
namespace	nouveau map ||| weakmap	count=1
function_name	alphabétiques ||| eregi	count=1
return	et envoie ||| void	count=1
function_name	cette fonction ||| eregi	count=1
function_name	prépare une page pour ||| pdf open pdi page	count=1
arg_pair	dans un fichier donné ||| string $filename int $flags	count=1
function_name	délai ||| timeout	count=1
function_name	memcached::prepend() mais ||| prepend	count=1
function_name	retourne la longueur ||| length	count=1
function_name	de ||| dbplus rzap	count=2
arg_pair	de la recherche sur ||| string $pattern string $string	count=1
function_name	boite ||| bh	count=1
namespace	représenté par l'identifiant ||| function	count=1
function_name	plus de détails sur [function_name_1] [function_name_2] ||| solrresponse string [function_name_1] http [function_name_2]	count=1
function_name	requête préparée ||| execute	count=1
function_name	informations sur ||| msg stat	count=1
return	donné ||| resource	count=1
function_name	est un alias ||| is nick	count=1
function_name	récupère ||| fdf get	count=1
return	détruire un ||| bool	count=1
arg_pair	requête ||| string $query	count=1
namespace	nouvelle itération ||| tokyotyrantiterator	count=1
function_name	fraction de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	mémoires utilisées par ||| newt form destroy	count=1
function_name	d'activation pour le ||| activation	count=1
function_name	attribut par nom ||| attribute ns	count=1
arg_pair	une base [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	mktime() ||| int $second	count=1
namespace	4 mb ||| mongocursor	count=1
function_name	numérateur du taux de ||| task numerator	count=1
function_name	lit un ||| read	count=1
function_name	la ||| mysql field	count=1
function_name	contrôle de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	fournie par l'utilisateur ||| int $num_output callable $user_function	count=1
arg_pair	caractères alphabétiques ||| string $pattern	count=1
function_name	fonctionne ||| close	count=1
function_name	les [function_name] ||| [function_name] refresh if	count=2
function_name	le nombre de couches ||| num	count=1
function_name	elle prend ||| eio set max poll time	count=1
function_name	flux de ||| stream	count=1
function	facteur de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	du champ depuis la ||| field	count=1
arg_pair	la requête request ||| string $request string $string	count=1
namespace	par morceaux de ||| function	count=1
function_name	définit la fréquence à ||| set mlt min doc frequency	count=1
function_name	gnupg_addencryptkey auparavant [function_name] ||| [function_name]	count=1
function_name	taux de ||| connection rate	count=1
function_name	retourne l'id de l'utilisateur ||| posix getuid	count=1
arg_pair	dans la base dbase_identifier ||| int $dbase_identifier	count=1
function_name	méthode ||| compressionmethod	count=1
arg_pair	récupère une section particulière ||| string $section	count=1
function_name	une ||| set	count=1
return	[return] connexion ||| [return]	count=1
function_name	[function_name_1] brutes ||| [function_name_2] response [function_name_1]	count=2
function_name	définit la qualité de ||| set	count=1
function_name	serveur sans attendre ||| send query	count=1
function_name	document pdf importé ||| pdf process pdi	count=2
arg_pair	et ||| string $class_name	count=1
arg_pair	le chemin du domaine ||| string $domain string $directory	count=1
function	et logique [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	cubrid_bind() est ||| mixed $bind_value	count=1
function_name	spécifié est une nom ||| is valid	count=1
function_name	la ||| mb	count=2
arg_pair	les fichiers ||| string $prefix	count=1
function_name	ftp et le sauve ||| ftp	count=1
function_name	indique si le noeud ||| is	count=1
function_name	insère le ||| pg insert	count=1
function_name	définit ||| set facet enum	count=1
function_name	la dernière opération db++ ||| dbplus errno	count=1
function_name	la chaîne de caractères ||| db2 escape	count=1
function_name	logarithme naturel pour ||| trader ln	count=1
arg_pair	du jeu de ||| string $classname	count=1
function_name	appel à mysqli_connect() ||| mysqli connect	count=1
namespace	requêtes sql ||| sqlite3	count=1
function_name	cette fonction est similaire ||| get	count=1
function_name	lit le schéma d'entrelacement ||| get interlace scheme	count=1
return	taille initialie ||| returntype	count=1
function_name	méthode retourne [function_name_2] ||| [function_name_1] compressed [function_name_2]	count=2
function_name	[function_name] texte ||| [function_name]	count=1
function_name	geoip_country_code3_by_name() retourne ||| country code3 by	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=1
return	une ligne dans la ||| int	count=1
function_name	la version cliente ||| client info	count=1
function_name	temporaire tous les ||| mailparse	count=1
namespace	sous la forme ||| solrparams	count=1
arg_pair	les attributs du ||| array $options	count=1
arg_pair	seuil ||| int $channel	count=1
function_name	alphabétiques en majuscules ||| strtoupper	count=1
function_name	attribut avec l'espace ||| attribute	count=1
function_name	l'arc sinus ||| trader asin	count=1
function_name	dossier ldap ||| ldap	count=1
function_name	elle prend plus de ||| max poll	count=1
function_name	canal de la couleur ||| color value	count=1
function_name	la clé key sur ||| get delayed by key	count=1
function_name	solr placera le nom ||| echo handler	count=1
function_name	coloriser les ||| highlight highlight multi	count=2
function_name	gmt greenwich mean time ||| gmdate	count=1
function_name	est similaire à ||| type	count=2
function_name	de statut ||| imap status	count=1
function_name	complétée jusqu'à ||| array pad	count=1
function_name	analyse une ||| rfc822 parse addresses	count=1
function_name	cette fonction peut ||| module	count=1
function_name	la dernière commande ||| errno	count=2
namespace	[namespace] de données ||| [namespace]	count=1
function_name	memcached::append() mais ||| append	count=1
function_name	messages d'alerte [function_name] générés ||| [function_name]	count=1
arg_pair	la valeur d'une ||| string $name string $value	count=1
arg_pair	méthode factorielle crée une ||| int $size	count=1
namespace	la ligne ||| splfileobject	count=1
return	tous ||| boolean	count=1
arg_pair	efface le dossier directory ||| string $directory	count=1
function_name	la fonction ||| field type	count=2
function_name	terme mise en évidence ||| highlight	count=2
arg_pair	attribute à la ||| string $attribute	count=1
function_name	lit ||| ob get	count=1
function_name	définir les modules à ||| module	count=1
function_name	tampon ||| ob	count=1
return	fait qu'elle fonctionne avec ||| int	count=1
return	appels distants rpc ||| boolean	count=1
function_name	chaîne d'entités html ||| decode numericentity	count=1
function_name	configure l'orientation ||| orientation	count=1
arg_pair	texte text en ||| resource $p string $text	count=1
function_name	est nettoyée ||| is tainted	count=2
function_name	true s'il existe ||| exists	count=1
return	appliqué ||| bool	count=1
namespace	fichier qui ||| pharfileinfo	count=1
function_name	la trace de ||| trace as string	count=1
function_name	messages [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	hormis ||| int	count=2
function	[function_name_1] la chaîne ||| [function_name_1] [arg_pair_2]	count=2
function_name	fonction retourne [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la fin de ||| buffer	count=1
function_name	ressources mémoires utilisées par ||| destroy	count=1
arg_pair	un seul fragment ||| string $field_override	count=1
function_name	type strpos() en tenant ||| mb strrpos	count=1
function_name	convertir une ||| convert to data	count=1
function_name	protocole mysql utilisé ||| proto	count=1
return	valeur du ||| int	count=1
function_name	[function_name_1] un destructeur ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] père que ||| [function_name_1] [function_name_2]	count=1
return	retourne une ||| mixed	count=1
function_name	configure l'échelle du document ||| scale	count=1
function_name	dernière requête de scan ||| yaz scan result	count=1
function_name	array comme ||| array	count=1
function_name	plus récente rapportée par ||| ssl	count=1
function_name	le fait qu'elle ||| close	count=1
arg_pair	identique à la fonction ||| int $second int $month	count=1
namespace	elle prend plus de ||| function	count=1
namespace	ou un résultat de ||| function	count=1
arg_pair	par address à l'interface ||| string $address	count=1
function_name	socket ||| stream socket	count=2
function_name	retourne l'index [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	le domaine courant ||| string $domain	count=2
function_name	pour diriger les ||| set	count=1
function_name	[function_name_1] le contrôle ||| [function_name_2] [function_name_1]	count=2
arg_pair	dans certaines requêtes ||| int $field_offset	count=1
namespace	nombre de champs ||| function	count=1
function_name	variable donnée est ||| is numeric	count=1
arg_pair	basant sur les paramètres ||| resource $ann	count=1
return	virtual...-- > [return] ssi ||| [return]	count=1
arg_pair	la fonction ||| int $hour int $minute	count=1
namespace	la chaîne de ||| function	count=1
arg_pair	de alpha degrés ||| float $alpha	count=1
function_name	termine ||| fam cancel monitor	count=2
function_name	minimale [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	avec le serveur d'administration ||| kadm5 destroy	count=1
arg_pair	au service daemon est ||| string $address	count=1
function_name	de connexion persistante ||| pconnect	count=1
function_name	la rfc2045 section 6.8) ||| imap binary	count=1
namespace	si la propriété ||| reflectionproperty	count=4
namespace	sémaphore ||| syncsemaphore	count=1
function_name	retourne ||| get named item	count=1
function_name	du corps de ||| body	count=1
function_name	[function_name_1] certificat x509 ||| [function_name_2] [function_name_1]	count=2
function_name	de résultat [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	non des méta-données ||| has metadata	count=1
function_name	text vont être imprimables ||| ctype print	count=1
arg_pair	la structure ||| int $num_input	count=1
return	une pile et ||| int	count=1
function_name	s'interrompt si elle prend ||| eio set	count=1
function_name	[function_name_1] protocole ||| [function_name_2] [function_name_1]	count=2
function_name	fichier temporaire ||| all	count=1
function_name	la hauteur ||| imagesy	count=1
function_name	par [function_name] c'est un ||| mcrypt module is [function_name]	count=1
arg_pair	une colonne ||| mixed $column	count=1
arg_pair	avec les définitions ||| array $config	count=1
function_name	décrivant la base de ||| list tables	count=1
namespace	le code javascript ||| v8js	count=1
function_name	effectue un test sur ||| module self test	count=1
function_name	ajouter ||| append	count=1
function_name	types de colonnes du ||| types	count=1
function_name	cosinue pour ||| cos	count=1
function_name	où ||| error log	count=2
function_name	son ||| set	count=1
function_name	de champs [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cache [function_name_2]	count=7
function_name	statut ||| task status	count=2
function	[function_name_1] valeur courante ||| [function_name_1] [arg_pair_2]	count=1
function_name	les ||| chmod	count=1
return	un objet contenant les ||| object	count=1
namespace	ajoutés ||| function	count=1
namespace	son ||| collectable	count=1
function	[function_name_1] en ligne/hors ||| [function_name_1] [arg_pair_2]	count=3
function_name	couleur spécifiée sous la ||| color	count=1
arg_pair	au service daemon ||| string $address	count=1
namespace	fait qu'elle fonctionne avec ||| function	count=1
arg_pair	de src_w ||| int $src_w	count=1
arg_pair	unique distinguished name ||| array $extraattribs	count=1
arg_pair	de needle dans ||| string $haystack string $needle	count=1
arg_pair	depuis ||| string $filename int $options	count=1
function_name	serveur de travaux ||| handle	count=1
function_name	ouvre [function_name_2] ||| [function_name_1] pdi [function_name_2]	count=1
function_name	une variable est ||| is	count=1
arg_pair	chemin du domaine ||| string $directory	count=1
function_name	retourne le titre ||| get	count=1
function_name	plus de ||| eio set max poll	count=1
function_name	[function_name_1] courante ||| [function_name_2] [function_name_1]	count=10
arg_pair	par value ||| int $value	count=1
arg_pair	données cubrid et sauvegarde ||| resource $conn_identifier	count=1
function_name	[function_name] sur ||| mysql [function_name]	count=3
return	été ||| void	count=1
function_name	définit ||| action set	count=2
function_name	de needle ||| mb strstr	count=1
function_name	d'activation pour la ||| fann set activation function	count=1
function_name	nombre de paramètres dans ||| ibase num params	count=1
function_name	dictionnaire spécifié ||| crack check	count=1
namespace	l'image spécifiée ||| imagick	count=1
arg_pair	listant ||| string $table_name	count=1
namespace	simplexmliterator au ||| simplexmliterator	count=1
function_name	einer mime kopfzeile dans ||| mime	count=1
function_name	long ||| frame long	count=1
function_name	la différence ||| array diff uassoc	count=1
function_name	la fonction d'activation pour ||| fann set activation function output	count=1
function_name	informations de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	place un hyperlien à ||| float $lly	count=2
function_name	boîtes aux lettres ||| imap get	count=1
return	fait qu'elle fonctionne ||| int	count=1
function_name	délai maximal ||| query timeout	count=1
function	facteur de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	d'un élément ||| string $attr_name	count=1
function_name	composants qui avaient ||| newt form destroy	count=1
function_name	rappel pour [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	ajoute une balise à ||| bbcode add	count=1
function_name	méthode de compression ||| zip entry	count=1
arg_pair	fait qu'elle ignore la ||| string $pattern string $string	count=1
function_name	trace [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] retourne une ||| [function_name_1] [function_name_2]	count=4
function_name	les ||| gmmktime	count=1
function_name	preg_replace() hormis le fait ||| preg	count=1
arg_pair	retourne ||| int $count	count=1
function_name	à placer devant l'élément ||| prefix	count=1
namespace	phar a ||| phar	count=1
function_name	réside à l'extérieur ||| runkit import	count=1
function_name	couleur d'arrière-plan [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	variable [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	et ||| newt	count=1
function_name	l'échelle les entrées ||| fann scale	count=1
arg_pair	autres fonctions eio_* ||| callable $execute	count=1
return	mktime() excepté le ||| int	count=1
arg_pair	et ||| resource $conn_identifier string $oid	count=1
namespace	tous les ||| function	count=2
function_name	requête xpath ||| xpath	count=1
function_name	calcule la racine carrée ||| sqrt	count=2
function_name	transaction interbase ||| ibase trans	count=1
function_name	mémoires utilisées par la ||| newt form	count=1
function_name	[function_name_1] du client ||| [function_name_1] [function_name_2]	count=1
function_name	la ||| by id	count=2
function_name	écrit du texte à ||| show	count=1
function_name	les ||| error log	count=2
namespace	paramètres passés sont ||| function	count=1
arg_pair	colonnes et ||| int $columns	count=1
function_name	attribut avec ||| attribute ns	count=1
function_name	apache [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	l'échelle les données dans ||| fann scale	count=1
function_name	pour lier des ||| cubrid lob2 bind	count=1
arg_pair	la chaîne str après ||| string $str	count=4
function_name	ferme ||| crack	count=1
function_name	table courante ||| fbsql table	count=1
function_name	forme ||| form	count=2
arg_pair	d'un nouvel ||| int $x	count=1
function_name	la forme et ||| form destroy	count=1
function_name	elle prend ||| set max poll time	count=1
function_name	le contrôle [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	début de la prochaine ||| next	count=1
arg_pair	signaux indiqué dans set ||| array $set	count=1
function_name	l'année d'un tag id3 ||| year	count=1
function_name	retourne la ||| get coding type	count=1
function_name	la ligne ||| line	count=1
function_name	clair ||| ssh2 auth	count=1
function_name	fonction libère ||| newt form	count=1
function_name	minimale [function_name_2] ||| [function_name_2] [function_name_1]	count=10
namespace	identifiant ||| domdocument	count=1
function	md5 [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	détaillées sur [function_name] caractères ||| pdf info [function_name]	count=1
return	écrit du texte à ||| bool	count=1
function_name	le code de contrôle ||| control	count=1
function_name	donnée est un tableau ||| is array	count=1
arg_pair	et la ||| mongodb $db	count=1
function_name	fils d'une collection ||| children	count=1
function_name	retourne un entier représentant ||| mysqli get	count=1
function_name	de vérifier la présence ||| set max dispatch interval	count=1
function_name	à ||| proc close	count=2
function_name	par la forme et ||| newt form	count=1
return	un élément avec ||| domelement	count=1
arg_pair	identique à la fonction ||| int $year	count=2
arg_pair	de 2 nombres gmp ||| gmp $a gmp $b	count=2
function_name	périphérique racine ||| gupnp device	count=1
function_name	sortie en cascade ||| fann set cascade output	count=1
function_name	retourne ||| dict get	count=1
arg_pair	sont pas attrappées ||| string $cb string $arg	count=1
function_name	[function_name_1] trace ||| [function_name_1] query [function_name_2]	count=1
function_name	l'objet ||| to string	count=2
arg_pair	document xml filename ||| string $class_name	count=1
function_name	[function_name] voir ||| get [function_name]	count=1
function_name	copie vide de la ||| dbplus rcrtlike	count=1
return	partagé [return] plusieurs ||| [return]	count=1
function_name	décide ||| qc set is	count=1
return	les caractères ||| int	count=1
function_name	associé au champ ||| mysql field flags	count=1
namespace	archive phar du ||| phar	count=1
function_name	fait qu'elle ||| close	count=1
function_name	la fonction pdf_get_value() avec ||| pdf get majorversion	count=1
namespace	objet evstat watcher mais ||| evstat	count=1
arg_pair	anonyme à ||| string $args string $code	count=1
function_name	le serveur ftp et ||| ftp	count=1
return	forme d'un tableau associatif ||| array	count=1
function_name	couleur de peinture ||| stroking color	count=1
function_name	deux [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	le dessin ||| resource $image	count=1
arg_pair	la résolution désirée ||| float $yresolution	count=1
return	est similaire ||| int	count=1
function_name	est similaire à la ||| mysql	count=1
return	fichier au sein d'une ||| bool	count=1
function_name	tous les ||| newt form	count=1
return	code ||| string	count=1
function_name	protège les caractères de ||| pg escape	count=1
function_name	prend plus ||| set max poll time	count=1
function_name	nom du curseur actif ||| cursor	count=1
function_name	ligne du jeu ||| db2 fetch assoc	count=3
function_name	ligne lue ||| mysql fetch	count=2
function_name	serveur ftp et ||| ftp	count=1
function_name	d'une ||| is	count=1
function_name	pagination taille de la ||| paged result	count=1
function_name	modifie les permissions ||| fchmod	count=1
namespace	active ou ||| function	count=2
namespace	les données du ||| function	count=1
function_name	phar ||| is	count=1
function_name	les clés ||| primary keys	count=1
function_name	la fonction closedir() seul ||| close	count=1
function_name	instance glo ||| from glo	count=1
function_name	valide un document selon ||| validate	count=1
function_name	mémoires utilisées ||| destroy	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] name resource $fdf_document [arg_pair_2]	count=1
namespace	tri qui ||| arrayobject	count=1
function_name	limite supérieure dans ||| terms include upper bound	count=1
function_name	délai de l'image ||| get image delay	count=2
function_name	au ||| apd set session trace socket	count=1
function_name	l'identifiant ||| id	count=4
function_name	condition pour une mise ||| condition	count=1
function_name	préfixe ||| prefix	count=2
function_name	message d'erreur ||| ifx errormsg	count=1
function_name	le nombre de ||| mysqli num	count=2
function_name	calcule les paramètres ||| scaling params	count=1
namespace	fin de l' ||| eventbuffer	count=1
function_name	fonction extrait ||| extract	count=1
return	date de sortie ||| string	count=1
function_name	entrées de ||| yp cat	count=1
function_name	récupère [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=1
return	par documents par ||| bool	count=1
return	l' eventbuffer courant ||| bool	count=1
namespace	retourne l'entrée ||| spldoublylinkedlist	count=1
function_name	la fonction cubrid_execute() est ||| cubrid	count=1
namespace	et ||| arrayobject	count=1
function_name	avec un ||| element by id	count=1
function_name	exécute ||| db2 exec	count=1
function_name	ftp et le ||| ftp get	count=1
function_name	l'identifiant de ||| row id	count=1
return	des fichiers ||| mongodb	count=1
return	de ||| gmagick	count=1
function_name	une ligne depuis ||| read line	count=1
function_name	pour la durée ||| set	count=1
arg_pair	un petit ||| float $rprop_delta_min	count=1
function_name	[function_name_1] trace ||| [function_name_2] [function_name_1]	count=2
function_name	serveur ldap [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	sans la refermer ||| ret	count=1
function_name	que pour ||| set metadata	count=1
namespace	callable utilisée par ||| function	count=4
function_name	pdf [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	la fonction mktime() ||| gmmktime	count=1
arg_pair	fichier déjà ouvert et ||| resource $handle	count=1
function_name	plus ||| set max poll	count=1
arg_pair	la méthode yar_concurrent_client::loop() ||| array $parameters callable $callback	count=1
function_name	la taille interne ||| size	count=1
function	le type [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	de lecture ||| resource $id string $schema	count=1
arg_pair	à appeler ||| mixed $callback	count=1
function_name	contexte de flux pour ||| context	count=1
arg_pair	par l'objet gmagickpixel ||| gmagickpixel $color	count=1
arg_pair	que contrairement à strcmp() ||| string $str2	count=1
function_name	dans une queue ||| mqseries	count=1
function_name	connexion persistante vers un ||| pconnect	count=1
function_name	copie de la ||| copy	count=1
arg_pair	de cartes ||| int $channel	count=1
arg_pair	horizontale et verticale ||| float $y	count=1
function_name	supprime tous les ||| remove all	count=1
namespace	hash et retourne ||| quickhashinthash	count=1
function_name	fréquence [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function	le socket [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	composants qui avaient ||| form destroy	count=1
arg_pair	configure une ||| int $index	count=1
namespace	être ||| mongolog	count=1
function_name	l'échelle les ||| scale input	count=1
function_name	un ||| posix	count=1
function_name	morelikethis ||| mlt	count=2
function_name	dans un fichier temporaire ||| mailparse	count=1
return	dans les ||| array	count=1
function_name	timer à ||| timer	count=1
function_name	[function_name_1] taux de ||| [function_name_2] [function_name_1]	count=1
arg_pair	remplit avec la ||| resource $image int $x	count=1
arg_pair	à une colonne ||| mixed $param	count=1
function_name	devant ||| escape string	count=2
function_name	réponse ||| handle	count=1
namespace	cette méthode ne doit ||| pharfileinfo	count=1
function_name	l'échelle horizontale ||| horizontal scaling	count=1
function_name	dans ||| tidy save	count=1
function_name	élément avec ||| element by id	count=1
function_name	transaction ||| commit	count=1
function_name	l'esclave ou ||| mysqlnd ms	count=1
namespace	réalisation de la tâche ||| gearmantask	count=2
namespace	données du document ||| harudoc	count=1
function_name	une autre fonction utilisateur) ||| restore	count=1
function	[function_name_1] imagetype_xxx fournie ||| [function_name_1] int $imagetype [arg_pair_2]	count=1
return	xml donnée ||| sdo_das_xml_document	count=1
arg_pair	place un hyperlien ||| float $lly float $urx	count=2
function_name	qui avaient été ||| destroy	count=1
function_name	méthode unsubscribe ||| unsubscribe	count=1
arg_pair	src_w ||| int $src_w	count=1
function_name	[function_name_1] région ||| [function_name_2] [function_name_1]	count=2
function_name	du résultat comme pourrait ||| mysql unbuffered query	count=1
function_name	libxml standard ||| libxml use internal errors	count=1
function_name	document pdi ||| pdf get pdi	count=1
function_name	test sur ||| fann test	count=1
function_name	et à ajouter ||| add	count=1
function_name	l'élément suivant est ||| next element	count=2
function_name	la fonction eio_poll() ||| eio nreqs	count=1
function_name	fonctions de ||| buffer set	count=1
arg_pair	utilisée pour établir ||| string $dbname	count=1
function_name	de l'image pour ||| shade image	count=1
function_name	qui ||| set metadata	count=2
function_name	blocs ||| block	count=1
return	si plusieurs requêtes sql ||| bool	count=1
function_name	l'étape d'erreur sarprop ||| sarprop step error shift	count=1
arg_pair	avec la [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	limitations de ||| resource $agent int $var	count=1
arg_pair	connexion ||| bool $value	count=1
function_name	à l'extérieur ||| runkit import	count=1
return	la ||| mongodb	count=2
function	souscrit [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	pour le ||| resource $image	count=1
function_name	un destructeur ||| destructor	count=1
function_name	vérifie si ||| query is	count=1
arg_pair	fonction est identique ||| string $pattern string $string	count=1
function_name	diriger la clé key ||| multi by key	count=1
function_name	[function_name] valeur ||| [function_name]	count=2
arg_pair	partir d'une source aléatoire ||| int $size int $source	count=1
function_name	une simple ligne de ||| pdf fit textline	count=1
function_name	pkcs#12 ||| pkcs12 export	count=1
function_name	ressource de connexion en ||| yaz connect	count=1
function_name	message d'erreur associé ||| errormsg	count=1
return	fichier qui ne peuvent ||| void	count=1
namespace	l'exception sous la ||| exception	count=1
return	une relation dans ||| int	count=1
function_name	cette fonction crée une ||| create entity	count=1
function_name	si elle prend plus ||| set max poll	count=1
function_name	retourne le statut de ||| get	count=1
function_name	à cette méthode est ||| call	count=1
namespace	plusieurs objets snmp spécifiés ||| snmp	count=1
function_name	et extrait dans un ||| mailparse uudecode	count=1
function_name	la méthode de compression ||| zip entry compressionmethod	count=1
function_name	dans [function_name] ||| db2 [function_name]	count=1
return	qui s'y trouvent ||| array	count=1
function_name	de 9 ||| preview	count=1
arg_pair	l'encodage pour les données ||| string $encoding	count=1
function_name	lors ||| end	count=1
function_name	d'attente ||| poll time	count=2
return	que la base ||| bool	count=1
function_name	supprime [function_name_2] ||| [function_name_1] highlight [function_name_2]	count=2
function_name	le numéro ||| get	count=1
arg_pair	l'uid uid ||| int $uid	count=1
arg_pair	son contenu dans ||| resource $connection int $oid	count=1
function_name	de la ligne précédente ||| prev	count=1
function_name	partant de zéro) de ||| position	count=1
function_name	l'url complète de ||| get request url	count=1
function_name	et logique ||| and	count=1
namespace	objet lorsque l'objet ||| collectable	count=1
function_name	la syntaxe ||| syntax	count=1
arg_pair	descripteur fd ||| mixed $fd	count=1
arg_pair	excepté le fait ||| int $year	count=2
arg_pair	représentation dom ||| domnode $node	count=1
function_name	le ||| to doc	count=1
function_name	de travaux fourni ||| job	count=1
function_name	les [function_name] fournis pour ||| new instance [function_name]	count=1
namespace	par leur équivalent hexadécimal ||| function	count=1
function_name	[function_name_1] à l'image ||| [function_name_1] [function_name_2]	count=3
namespace	de la fin ||| recursivetreeiterator	count=1
function_name	la taille de la ||| mb strwidth	count=1
function_name	file d'attente s'interrompt ||| eio set	count=1
return	une fois par ||| void	count=1
function_name	rrdtool ||| rrd	count=1
arg_pair	gestionnaire de queues ||| array $connoptions	count=1
function_name	crée un fichier spécial ||| mknod	count=1
function_name	la fonction openssl_get_cert_locations() retourne ||| get cert locations	count=1
function_name	la longueur du contenu ||| length	count=1
function_name	script ||| set include path	count=2
return	d'une ||| sdo_das_xml_document	count=1
function_name	et extrait ||| all	count=1
function_name	demande radius consiste ||| radius	count=1
function_name	retourne [function_name_2] ||| [function_name_2] [function_name_1]	count=164
arg_pair	passés sont ||| int $hour	count=1
return	lorsque la méthode ||| void	count=1
namespace	l' eventbuffer ||| eventbuffer	count=2
function_name	définit la [function_name_1] [function_name_2] page ||| [function_name_2] [function_name_1]	count=1
arg_pair	hash depuis un fichier ||| int $size	count=1
function_name	facteurs d'échantillonnage de l'image ||| sampling factors	count=1
arg_pair	event_base avec event ||| resource $event resource $event_base	count=1
arg_pair	être invoquées avant ||| int $max_interval int $max_callbacks	count=1
return	une occurrence de fin ||| mixed	count=1
return	qui s'y ||| array	count=1
arg_pair	collections : ||| mongodb $db string $prefix	count=1
function_name	fréquence ||| min doc frequency	count=1
arg_pair	établir l'environnement pour une ||| string $dbname	count=1
function_name	efface les ||| delete	count=2
function_name	[function_name_1] connexion au ||| [function_name_2] [function_name_1]	count=1
function_name	le statut en ||| status	count=1
function_name	socket créé précédemment ||| socket	count=1
function_name	fonction cubrid_lob2_tell64() est ||| cubrid lob2 tell64	count=1
function_name	la ligne précédente ||| dbplus prev	count=1
function_name	un sommaire ||| overview	count=1
function_name	élément enfant au ||| child	count=1
arg_pair	une matrice ||| resource $image array $matrix	count=1
function_name	forme en ||| newt	count=1
function_name	un arbre ||| load	count=1
namespace	pour définir les modules ||| mongolog	count=1
function_name	à ajouter les ||| add	count=1
function_name	de buffer ||| buffer	count=1
function_name	retire un profil ||| profile	count=1
function_name	initialise ||| init	count=3
function_name	[function_name_1] chargés ||| [function_name_1] [function_name_2]	count=1
function_name	toutes ||| buffer	count=1
function_name	récupère l'itérateur ||| iterator	count=1
function_name	liste des ||| list	count=2
function_name	fonctionnellement équivalent à memcached::prepend() ||| prepend by	count=1
arg_pair	haystack et retourne ||| string $encoding	count=2
function_name	est ||| mysql field	count=1
function_name	à la position ||| show	count=1
arg_pair	table table_name qui vérifient ||| string $table_name	count=1
function_name	écrit du texte ||| ps show	count=1
function_name	sont sur ||| newt	count=1
function_name	fonction est similaire à ||| get element by id	count=1
function_name	position suivante ||| next	count=1
function_name	http de la ||| apache request	count=1
arg_pair	cache une variable ||| string $key mixed $var	count=1
function_name	[function_name_1] erreur ||| [function_name_2] [function_name_1]	count=12
function_name	serveurs connus la ||| reset server	count=1
function_name	[function_name_1] de ||| [function_name_1] [function_name_2]	count=3
function_name	divise ||| variant div	count=2
function_name	[function_name_1] l'octet ||| [function_name_2] [function_name_1]	count=1
function_name	fichiers encodés ||| uudecode	count=1
arg_pair	le contenu des fichiers ||| string $prefix	count=1
function_name	décide ||| qc	count=1
arg_pair	[arg_pair_1] dans le ||| [arg_pair_2] int $page [arg_pair_1]	count=3
function_name	élément avec un ||| get element by	count=1
function_name	stagnation ||| stagnation	count=2
arg_pair	la priorité de pid ||| int $pid	count=1
arg_pair	attribute à ||| string $attribute	count=1
function_name	pour placer un verrou ||| lock	count=1
arg_pair	de la ||| resource $ann	count=2
function_name	s'interrompt si elle prend ||| set	count=1
namespace	arrête partiellement ou ||| function	count=1
arg_pair	name qui ||| string $name	count=1
function_name	retourne un tableau ||| array	count=2
namespace	l'application précédemment ||| gearmanclient	count=1
function_name	classe et revient ||| parse class	count=1
return	références à des bases ||| array	count=1
function_name	[function_name_1] [function_name_2] la ||| [function_name_2] [function_name_1]	count=4
function_name	issues de transactions xa ||| mysqlnd ms xa gc	count=1
function_name	de compression ||| compressionmethod	count=1
function_name	serveur sybase associé à ||| sybase	count=1
namespace	retour ||| soapserver	count=1
return	adobe pour ||| string	count=1
return	liste toutes les ||| array	count=1
function_name	ajoutés à ||| form destroy	count=1
arg_pair	suivant le paramètre req_identifier ||| resource $req_identifier	count=1
namespace	ou désactive l'affichage ||| function	count=1
function_name	être utilisée que pour ||| metadata	count=1
namespace	fichiers ||| function	count=1
arg_pair	les paramètres passés sont ||| int $month	count=1
arg_pair	xml depuis ||| int $options	count=1
function_name	champ spécifié ||| fbsql field	count=1
namespace	de deux collections : ||| mongogridfs	count=1
function_name	retourne la méthode de ||| get coding type	count=1
namespace	la fonction rewinddir() ||| directory	count=1
function_name	fréquence à partir ||| mlt min doc frequency	count=1
function_name	alias appelé alias basé ||| alias	count=1
namespace	imagick ||| imagick	count=8
function_name	bloc de ||| shmop	count=1
function_name	remplit le ||| fill	count=2
arg_pair	d'extraits de ||| string $field_override	count=1
function	écrit [arg_pair_2] ||| [function_name_1] slob [arg_pair_2]	count=3
arg_pair	colonne données dans le ||| mixed $column	count=1
arg_pair	la casse ||| string $string	count=1
function_name	de filtres de requêtes ||| filter queries	count=1
function_name	sans attendre le s ||| pg send query	count=1
return	les composants ||| void	count=2
function_name	réalisation ||| task	count=2
function_name	[function_name_1] texte ||| [function_name_2] [function_name_1]	count=3
arg_pair	colonne données ||| mixed $column mixed $param	count=1
function_name	variable character_set de ||| client encoding	count=1
function_name	arc dans ||| arc	count=1
function_name	script ||| script	count=1
function_name	fréquence d'apparition des mots ||| mlt min doc frequency	count=1
return	définit le ||| void	count=1
function_name	profondeur [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
arg_pair	fait que les ||| int $minute	count=1
function_name	récupère [function_name_2] ||| [function_name_1] unicode [function_name_2]	count=1
return	résultants et ||| mongocommandcursor	count=1
arg_pair	utilisée pour insérer un ||| string $attr_name	count=1
function_name	regroupements distincts ||| group distinct	count=1
function_name	retourne [function_name] logs ||| get normalized query [function_name]	count=1
function_name	l'identifiant de processus ||| pid	count=1
namespace	objet evstat watcher ||| evstat	count=1
function_name	remet la connexion ||| commit	count=1
return	la boucle ||| evloop	count=1
function_name	retourne [function_name_2] ||| [function_name_1] iv [function_name_2]	count=2
function_name	l'entier supérieur suivant ||| ceil	count=1
arg_pair	les structures de données ||| int $textflow	count=1
arg_pair	commande ||| string $command	count=1
function_name	le premier attribut de ||| first attribute	count=1
arg_pair	paramètre req_identifier de ||| resource $req_identifier	count=1
arg_pair	excepté le fait que ||| int $day int $year	count=1
function	[function_name_1] les ||| [arg_pair_2] [function_name_1]	count=5
function_name	prend ||| set max poll	count=1
arg_pair	la fonction callback ||| array $array callable $callback	count=1
function_name	bits d'exécution des fichiers ||| chmod	count=1
function	[function_name_1] en ligne/hors ||| [arg_pair_2] [function_name_1]	count=3
function_name	récupère l'objet [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	exécution ou ||| collectable	count=1
function_name	ligne d'un ||| fgets	count=1
arg_pair	propriété ||| string $property_name	count=1
function_name	de la prochaine requête ||| cubrid next result	count=1
function_name	est ||| fbsql field type	count=2
function_name	définit les drapeaux ||| set flags	count=2
function_name	protège une ||| pg escape	count=1
arg_pair	le fichier remote_file ||| string $remote_file int $mode	count=1
namespace	pointée [namespace] ||| [namespace]	count=3
function_name	les ||| fann	count=1
namespace	retourne ||| gearmantask	count=2
function_name	charge une image pour ||| open image	count=1
function_name	l'échelle les ||| scale output	count=1
function_name	profils ||| profiles	count=1
function_name	fourni par ||| add buffer	count=1
return	de la totalité de ||| resource	count=1
arg_pair	csv ||| string $enclosure string $escape	count=2
function_name	nouvelle connexion ||| connect	count=1
function_name	incluant les composants qui ||| newt	count=1
namespace	écrit ||| function	count=1
return	compteur de l'objet ||| bool	count=1
function_name	pendant l'entrainement rprop ||| get rprop	count=1
arg_pair	une chaîne nommée ||| mixed $priv_key string $pass	count=1
arg_pair	envoie une ||| resource $connection string $query	count=2
return	affiche ||| bool	count=1
function_name	sont ||| form destroy	count=2
function_name	de session curl à ||| curl	count=1
function_name	champs utilisés ||| field	count=1
namespace	à ||| eventbuffer	count=1
function_name	propriétaire ||| owner	count=1
function_name	fonction retourne ||| enc get	count=1
namespace	de l'archive phar ||| pharfileinfo	count=1
arg_pair	cette ||| string $pattern	count=1
function_name	l'itérateur ||| iterator	count=2
function_name	associé avec ||| string	count=1
function_name	un ||| get	count=3
function_name	include_path pour la durée ||| include path	count=1
namespace	d'autres ||| ev	count=1
function_name	de la première ligne ||| first	count=1
function_name	de résultats mnogosearch ||| udm get res param	count=1
namespace	uniquement avec une ||| mongoclient	count=1
function_name	jeu de backends ||| backends	count=1
arg_pair	msglist ||| string $msglist	count=1
arg_pair	du jeu de résultats ||| resource $result	count=1
function_name	la méthode phar::startbuffering() peut ||| buffering	count=1
function_name	prochaine image ||| next image	count=2
function_name	[function_name_1] un document ||| [function_name_1] pdi [function_name_2]	count=1
function_name	est de type numérique ||| is	count=1
namespace	sur un objet syncmutex ||| syncmutex	count=1
arg_pair	depuis le fichier fourni ||| resource $mimemail mixed $filename	count=1
function	[function_name_1] chaîne ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	méthode n'importe quel fichier ||| string $file	count=1
arg_pair	d'un élément ||| int $index	count=1
function_name	utilisées ||| form	count=1
function_name	le cosinue pour ||| trader cos	count=1
function_name	et libère toutes les ||| base free	count=1
namespace	tampon d'événements ||| eventbufferevent	count=1
return	à l'aide ||| mongodb	count=1
function_name	identifiant ||| element by id	count=2
namespace	s'interrompt ||| function	count=1
function_name	retourne un tableau qui ||| pg fetch array	count=1
function_name	fonction libère les ressources ||| newt	count=1
arg_pair	fichier filename dans ||| string $filename	count=1
function_name	la couleur courante ||| gray fill	count=1
function_name	lier des données blob/clob ||| bind	count=1
function_name	précisé et libère ||| buffer free	count=1
function_name	true si ||| mcrypt module is	count=1
function_name	configure la couleur ||| image background color	count=1
function_name	des couches cachées ||| hidden	count=1
function_name	l'analyseur xml [function_name_2] ||| [function_name_1] error [function_name_2]	count=2
function_name	ldap pour la ||| ldap	count=1
function_name	utilisateur) ||| restore error	count=1
return	plus ||| void	count=1
namespace	par splfileinfo ||| splfileinfo	count=1
function_name	serveur cyrus imap ||| cyrus query	count=1
function_name	base interbase ||| ibase	count=1
function_name	spécifie le nombre maximal ||| max	count=1
function_name	version curl ||| curl version	count=2
function_name	chaîne de caractères passée ||| db2	count=1
arg_pair	transformation avec xsltprocessor ||| string $namespace	count=1
function_name	trace pour chaque requête ||| query trace log	count=1
function_name	vide dans ||| empty	count=1
return	libeio tant que les ||| bool	count=1
function_name	couleur de remplissage ||| filling color	count=1
arg_pair	générateur d'extraits ||| string $fragmenter string $field_override	count=1
function_name	modifie la ||| include path	count=1
return	place ||| string	count=1
function_name	des liens ||| set border	count=1
function_name	chaîne ||| db2 escape	count=1
function_name	distant et lui alloue ||| ssh2	count=1
function_name	le nombre total d'éléments ||| total count	count=1
function_name	méthode de ||| entry compressionmethod	count=1
function_name	pour placer un verrou ||| cubrid lock read	count=1
function_name	localise ||| locate	count=1
return	plus de résultats ||| bool	count=1
namespace	vérifie si la ||| spldoublylinkedlist	count=1
function_name	diriger les clés ||| by key	count=1
function_name	geoip_country_code3_by_name() ||| country code3	count=1
function_name	de ||| chmod	count=2
arg_pair	incrémente une ||| string $key	count=1
function_name	[function_name_1] contrôle ||| [function_name_2] [function_name_1]	count=2
function_name	objet [function_name_2] ||| [function_name_2] fetch [function_name_1]	count=1
namespace	par leur ||| function	count=1
namespace	la ||| sqlite3	count=3
namespace	crée ||| imagick	count=1
arg_pair	l'activation de la mise ||| mixed $condition	count=1
function_name	termine la ||| cancel	count=1
namespace	par défaut ||| directory	count=2
function_name	et définit ||| set	count=1
function_name	de la page sous ||| page	count=1
arg_pair	à appeler à ||| mixed $callback	count=1
function_name	fonction crée une ||| create cdatasection	count=1
arg_pair	mktime() excepté le fait ||| int $day	count=1
function_name	socket socket ||| socket sendto	count=1
function_name	[function_name_1] algorithmes de ||| [function_name_2] [function_name_1]	count=1
function_name	la chaîne ||| db2	count=1
function_name	fonction ||| eregi	count=1
return	la position dans la ||| int	count=1
function_name	utilisée pour envoyer ||| set by key	count=1
function_name	contenant la représentation ||| hexdec	count=1
function_name	les données du fichier ||| mailparse	count=1
function_name	a plus de ligne ||| fetch	count=1
function_name	requête ||| filter query	count=1
arg_pair	la valeur ||| string $value	count=2
function_name	utilisée pour récupérer ||| cubrid	count=1
namespace	avec un identifiant donné ||| domdocument	count=1
function_name	cette méthode décompresse ||| decompress	count=1
return	une chaîne avec la ||| string	count=1
namespace	ou d'un ||| function	count=1
function_name	type d'octets dans le ||| byte type	count=1
function_name	lier des ||| bind	count=1
function_name	convertit un guid ||| guid	count=1
function_name	et extrait dans ||| uudecode	count=1
function_name	enregistrements de la ||| out	count=1
function_name	la première paire ||| first	count=1
function_name	caractères passée ||| escape string	count=1
function_name	décoration à appliquer à ||| gettextdecoration	count=1
arg_pair	le ||| int $chunk_size	count=1
function_name	ignorant la casse ont ||| ireplace	count=1
function_name	l'uri de base ||| uri	count=1
return	une référence ||| bool	count=1
function_name	un nouveau [function_name] ||| ibase [function_name]	count=3
namespace	les données du fichier ||| function	count=1
return	considère array ||| int	count=1
function_name	définit l'image ||| set mask	count=1
function_name	retourne la ||| dict get	count=1
function_name	point chromatique primaire vert ||| getimagegreenprimary	count=1
function_name	les variables ||| array push	count=1
function_name	spécial fifo qui existe ||| posix mkfifo	count=1
function_name	fonction d'activation pour la ||| activation function output	count=1
function_name	chaîne ||| load	count=1
function_name	gestionnaires d'entités non déclarées ||| unparsed entity decl	count=1
arg_pair	la ||| int $hour int $minute	count=1
namespace	de mémoire ||| function	count=1
return	la méthode ||| int	count=2
function_name	[function_name_1] thread ||| [function_name_2] [function_name_1]	count=1
function_name	à l'échelle les données ||| fann scale	count=2
return	à la fonction ||| void	count=2
function_name	chiffrement ||| encryption	count=1
function_name	et l'application ||| disc	count=1
function_name	plus ||| set	count=1
function_name	représentation yaml de ||| yaml emit	count=1
function_name	[function_name_1] profil ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] type d'éléments ||| [arg_pair_2] [function_name_1]	count=2
function_name	effectue une équivalence ||| variant eqv	count=1
function_name	posix qui ||| posix	count=1
function_name	méthode gearmanclient::do() ||| do	count=1
function_name	d'arrière-plan ||| trim	count=1
function_name	base ||| numfields	count=1
function_name	l'entrainement rprop ||| get rprop	count=1
function_name	par la méthode oauthprovider::consumerhandler() ||| callconsumer	count=1
function_name	récupère la ||| get value	count=1
return	tampon de ||| string	count=1
arg_pair	l'objet [arg_pair] ||| [arg_pair]	count=1
function_name	variant ||| variant	count=1
namespace	les éléments pointés par ||| function	count=1
function_name	jour la plus récente ||| last	count=1
function_name	transfert curl ||| curl setopt	count=1
function_name	de serveurs de tâches ||| servers	count=1
function_name	que gestionnaire d'événements ||| event handler	count=1
return	à l'intérieur [return] ||| [return]	count=1
arg_pair	à un fichier ||| string $destination	count=1
function_name	[function_name_1] avec ||| [function_name_1] error [function_name_2]	count=3
function_name	le nombre ||| mysqli num	count=2
namespace	différences et ||| xmldiff\file	count=1
function_name	la pagination ldap ||| ldap	count=1
namespace	fonction reflétée ||| reflectionfunction	count=1
function_name	déplace le pointeur ||| seek	count=3
return	requête sql ||| int	count=1
function_name	le prochain résultat ||| next result	count=4
function_name	est un alias de ||| set flags	count=1
function_name	[function_name_1] asynchrone ||| [function_name_2] [function_name_1]	count=2
function_name	demandée [function_name] version version ||| [function_name]	count=1
function_name	la méthode d'entrelacement ||| interlace scheme	count=1
function_name	utilisée que pour ||| set metadata	count=1
function_name	composants qui avaient ||| newt form	count=1
return	affiche toute les commandes ||| bool	count=1
function_name	le nombre ||| dbase numfields	count=1
function_name	cette méthode est obsolète ||| call	count=1
function_name	fonction retourne le nombre ||| ifx num	count=1
namespace	retournée [namespace] le serveur ||| [namespace]	count=1
function_name	les pages ||| pages	count=1
arg_pair	original définie par ||| string $original	count=1
function_name	contient la ligne ||| mysql fetch	count=1
function_name	dans un fichier ||| mailparse uudecode all	count=1
arg_pair	original définie ||| string $original	count=1
function_name	uri de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	fichiers ainsi ||| pharfileinfo	count=1
function_name	retire ||| remove handle	count=2
function_name	de ||| ps set	count=2
return	extraire les ||| array	count=1
arg_pair	recherche sur ||| string $pattern string $string	count=1
arg_pair	lecture/écriture nommé ou ||| bool $autounlock	count=1
function_name	est l'espace de ||| is	count=1
function_name	le message d'erreur de ||| error message	count=1
function_name	racine pour toutes les ||| set	count=1
function_name	une nouvelle image ||| new pseudo image	count=1
arg_pair	fonction anonyme à partir ||| string $code	count=1
function_name	les éléments descendants ||| elements by tag	count=4
arg_pair	les ||| int $hour int $minute	count=1
function_name	les bibliothèques clientes oracle ||| oci	count=1
namespace	les clé et ||| arrayobject	count=1
return	longueur minimum [return] mot en ||| [return]	count=1
function_name	champs morelikethis ||| mlt field	count=2
function_name	d'entrelacement de ||| set image interlace scheme	count=1
function_name	initialise un nouveau pattern ||| pattern	count=1
function_name	[function_name] chiffré ||| [function_name]	count=3
namespace	timestamp ou l'heure ||| function	count=1
function_name	suspend la page ||| pdf suspend page	count=3
function_name	le serveur ftp ||| ftp	count=5
namespace	fait ||| function	count=3
function_name	possibilité de lecture ||| oci cancel	count=1
arg_pair	original définie par l'utilisateur ||| string $original	count=1
function_name	à la ||| id	count=1
function_name	lorsqu'un [function_name] ||| set [function_name]	count=1
function_name	durée ||| set include	count=1
function_name	avec un patch ||| xdiff string patch	count=1
namespace	est donné par ||| function	count=1
function_name	ne doit pas ||| construct	count=1
function_name	retourne le nombre ||| mysql num	count=1
arg_pair	au format ||| resource $connection string $table_name	count=1
return	sur ||| void	count=2
function_name	de la ||| task	count=2
function_name	protocole ||| proto	count=1
function_name	à un serveur informix ||| ifx	count=1
namespace	argument ||| function	count=1
function_name	pour lier des données ||| cubrid lob2 bind	count=1
namespace	eventbuffer lui ||| eventbuffer	count=1
function_name	sont présentes dans tous ||| intersect	count=1
arg_pair	value1 et la ||| mixed $value1	count=1
function_name	à ||| by	count=1
function_name	l'utiliser ||| dbx	count=1
function_name	fonction geoip_country_code3_by_name() retourne ||| geoip country code3 by	count=1
function_name	commentaire [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	la ||| int $second	count=1
arg_pair	retourne un ||| resource $id	count=1
arg_pair	couleur color dans ||| int $y2 int $color	count=1
arg_pair	par le shell en ||| string $pattern int $flags	count=1
arg_pair	haystack et retourne la ||| bool $before_needle	count=1
function_name	temporaire tous ||| uudecode all	count=1
function_name	l'image ||| image compose	count=2
arg_pair	depuis un fichier vers ||| string $filename	count=1
return	un jeu ||| array	count=1
namespace	avaient été ajoutés à ||| function	count=1
function_name	depuis ||| from	count=1
function_name	script en cours ||| set	count=1
arg_pair	yar_concurrent_client::loop() ||| array $parameters callable $callback	count=1
return	tous les paramètres ||| string	count=1
return	les quotas des ||| array	count=1
namespace	toutes les ||| xmldiff\base	count=1
function_name	avec un identifiant ||| get	count=1
return	liste ||| bool	count=1
function_name	active le tri ||| sort	count=1
function_name	composition de l'image ||| set image	count=1
arg_pair	utilisée pour insérer un ||| string $attr_name int $index	count=1
arg_pair	oid de l'instance ||| string $oid	count=1
namespace	texte à ||| function	count=1
function_name	base repérée par ||| dba popen	count=1
arg_pair	la largeur ||| float $width	count=3
arg_pair	left et right en ||| mixed $right	count=1
function_name	var_array [function_name] ||| oci [function_name]	count=1
namespace	a été réservé par ||| function	count=1
function	[function_name_1] identifié ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] de l'octet ||| [function_name_1] current [function_name_2]	count=1
function_name	forme et ||| form	count=1
arg_pair	attribut ||| array $attributes	count=1
function	[function_name_1] un ||| [function_name_1] result [arg_pair_2]	count=2
function_name	elle prend plus ||| eio set max poll	count=1
function_name	la fréquence à partir ||| min doc frequency	count=1
function_name	taille de la ||| size	count=1
arg_pair	variable_name dans ||| resource $introspection string $variable_name	count=1
function_name	de transactions xa ||| mysqlnd ms xa gc	count=1
function_name	en incluant les ||| newt form	count=1
function_name	l'aide ||| construct	count=1
function_name	actuelle utilise l'autocommit ||| ingres autocommit state	count=1
arg_pair	paramètre script comme ||| string $extension_name string $script	count=1
function_name	copie exacte ||| rcrtexact	count=1
function_name	jour ||| update	count=2
function_name	de définir à true ||| set	count=1
function_name	sommaire de leur contenu ||| fetch overview	count=1
arg_pair	[arg_pair] le ||| [arg_pair]	count=1
arg_pair	indexé ou associatif query_data ||| mixed $query_data	count=1
return	de la recherche sur ||| int	count=1
function_name	snmp ||| snmp2	count=3
function_name	jacobi de a ||| gmp jacobi	count=1
function_name	s'interrompt si elle prend ||| set max poll	count=1
namespace	par défaut des ||| function	count=2
return	un fichier régulier décrit ||| resource	count=1
function_name	cours ||| set include path	count=2
function_name	localise une entrée ||| locate	count=1
arg_pair	une chaîne binaire ||| string $data	count=1
function_name	bits d'exécution des ||| chmod	count=1
function_name	flux ||| stream select	count=2
function_name	le serveur le ||| immortal	count=1
arg_pair	de caractères vide si ||| string $localname	count=1
function_name	[function_name_1] bases ||| [function_name_2] [function_name_1]	count=6
namespace	données ||| mongocursorinterface	count=1
function_name	s'il existe ||| exists	count=1
namespace	caractère par ||| function	count=1
namespace	code javascript passé par ||| v8js	count=1
return	elle prend plus ||| void	count=1
arg_pair	clé passées ||| string $data	count=1
namespace	de ||| gearmanclient	count=1
arg_pair	queues ||| array $connoptions	count=1
function	définit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	les ||| mixed	count=1
arg_pair	cartes de ||| string $threshold_map	count=1
arg_pair	domaine courant ||| string $domain	count=2
arg_pair	paramètres ||| int $hour	count=1
namespace	émise au ||| solrresponse	count=1
function_name	[function_name_1] profondeur ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] du corps ||| [function_name_2] [function_name_1]	count=2
function_name	l'échelle les entrées dans ||| scale input	count=1
function_name	le termscomponent ||| set terms	count=1
function_name	du document ||| cache	count=1
namespace	de la tâche ||| gearmantask	count=2
function_name	[function_name_1] les algorithmes ||| [function_name_1] [function_name_2]	count=1
namespace	utilisée en interne par ||| function	count=1
namespace	de deux ||| mongogridfs	count=1
arg_pair	la clé key sur ||| mixed $value	count=1
return	à l'intérieur [return] spécifiant ||| [return]	count=1
arg_pair	est une ||| string $key mixed $value	count=1
function_name	paramètre facet.date.gap ||| facet date gap	count=1
namespace	l'image de ||| gmagick	count=1
function_name	transformation [function_name_2] ||| harupage bool [function_name_2] [function_name_1]	count=2
function_name	candidates en cascade ||| fann set cascade candidate	count=1
function_name	ou plusieurs ||| add function	count=1
arg_pair	arguments ||| string $name	count=1
function_name	champ à la ||| field	count=1
function_name	sur ||| newt	count=1
function_name	pixels ||| pixels	count=1
function_name	tentative de ||| db2 conn	count=1
return	est sortie ||| int	count=1
return	le fait que ||| int	count=1
function_name	la cubrid_drop() ||| drop	count=1
arg_pair	le démarre automatiquement ||| int $priority	count=1
function_name	à surveiller ||| set module	count=1
function_name	élément avec un identifiant ||| element	count=1
return	cette fonction est identique ||| int	count=1
function_name	retourne l'année ||| get year	count=2
arg_pair	résolution désirée ||| float $yresolution	count=1
namespace	à la forme en ||| function	count=1
arg_pair	options d'analyseur ||| resource $bbcode_container	count=1
namespace	déplace ||| norewinditerator	count=1
arg_pair	xsltprocessor ||| string $namespace string $name	count=1
function_name	sortie en octets ||| ob	count=1
function_name	[function_name_1] brutes de ||| [function_name_2] response [function_name_1]	count=2
namespace	code du jeu de ||| gmagickdraw	count=1
function_name	de dernière modification ||| get mtime	count=1
arg_pair	dans l'argument result de ||| mixed $fd int $pri	count=1
function_name	la mémoire occupée ||| imagepsfreefont	count=1
function_name	des informations à ||| info	count=1
return	dans le cas d'une ||| int	count=1
arg_pair	dans un ||| array $values	count=1
function_name	tracer la ||| maxdb debug	count=1
arg_pair	donnée dans un résultat ||| resource $result int $row_number	count=1
arg_pair	original définie par ||| string $original string $alias	count=1
namespace	la méthode ||| function	count=1
function_name	d'erreur utilisée ||| train error	count=2
function_name	importer ||| import	count=1
function_name	libère toute ||| ldap free result	count=1
arg_pair	listant les paramètres ||| string $schema	count=1
function_name	à la fin ||| eof	count=1
function_name	niveau de gris ||| pdf setgray	count=1
function_name	récupérer ||| ingres	count=1
function_name	ajoute ||| add element	count=1
return	la forme d'un entier ||| int	count=1
function_name	d'activation pour la couche ||| activation	count=1
arg_pair	nom d'utilisateur username et ||| resource $ftp_stream string $username	count=1
function_name	la représentation en chaîne ||| serialize	count=1
namespace	boucle libeio tant que ||| function	count=1
function_name	encodés qui ||| uudecode all	count=1
function_name	pour un dictionnaire ||| enchant broker set	count=1
function_name	la puissance ||| pow	count=2
function_name	lit un caractère ||| callback read	count=1
function_name	tableau contient encore ||| valid	count=1
namespace	ne doit être ||| pharfileinfo	count=1
function_name	filtre numérique qui améliore ||| median filter	count=1
function_name	est similaire à la ||| get element by id	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] class [arg_pair_2]	count=3
arg_pair	structure de ||| int $num_data int $num_input	count=1
function_name	fonction est obsolète ||| is deprecated	count=2
function_name	avec un traitement appliqué ||| images	count=1
function_name	préparée et retourne un ||| execute	count=1
function_name	[function_name_1] la couche ||| [function_name_2] [function_name_1]	count=1
function_name	retourne une url suivant ||| assemble	count=1
arg_pair	de texte avec ||| string $blockname string $text	count=1
namespace	une ||| gearmanclient	count=3
function_name	des ||| mlt max	count=1
function_name	la brosse courante ||| imagesetbrush	count=1
function_name	colonnes de la ||| dbase	count=1
namespace	du document ||| solrinputdocument	count=2
namespace	identique à la ||| directory	count=1
arg_pair	à la résolution désirée ||| float $yresolution	count=1
function_name	selon le ||| lookup	count=1
function_name	de rappel à ||| callback	count=2
arg_pair	installe ||| mysqli $mysqli_connection	count=1
arg_pair	address à ||| resource $socket string $address	count=1
return	la première contient ||| mongodb	count=1
function_name	retourne le nom d'un ||| get	count=1
namespace	une connexion à un ||| mongoclient	count=1
function_name	agent a besoin d'envoyer ||| workload	count=1
arg_pair	filename sous la forme ||| string $mode	count=1
function_name	le retour de statut ||| add task status	count=1
namespace	défini ||| function	count=1
return	les ||| void	count=19
return	cette méthode ne doit ||| string	count=1
namespace	date de sortie ||| gmagick	count=1
namespace	tableau ||| splfixedarray	count=1
function_name	mode de rendu courant ||| rendering mode	count=1
function_name	et l'application ||| mqseries disc	count=1
arg_pair	résultat dans ||| int $flags	count=1
namespace	de l' ||| eventbuffer	count=1
function_name	retourne la méthode ||| entry compressionmethod	count=1
function_name	nouveau [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	dans ||| merge	count=1
function_name	la définition de ||| pg meta data	count=1
function_name	version [function_name_2] ||| [function_name_2] set [function_name_1]	count=2
namespace	une nouvelle expression rationnelle ||| mongoregex	count=1
return	lors d'une ||| int	count=1
arg_pair	d'une ||| int $size	count=1
function_name	réponse xml ||| xml response	count=2
return	l'image dans [return] ||| [return]	count=1
function_name	liste des noms de ||| class names	count=1
arg_pair	de la recherche sur ||| string $string	count=1
function_name	la ligne précédente de ||| dbplus prev	count=1
function_name	un ||| load string	count=2
function_name	parcourt ||| size	count=1
arg_pair	collections : ||| string $prefix	count=1
function_name	détruit toutes les ||| unset	count=1
function_name	retourne [function_name_2] ||| [function_name_1] algo block [function_name_2]	count=2
arg_pair	structures de données associées ||| resource $pdfdoc int $textflow	count=1
function_name	positionne le curseur ||| move to	count=2
function_name	la fonction d'activation ||| activation	count=3
function_name	à un ||| get	count=1
function_name	de ligne [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	alpha [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	sqlstate ||| stmt error	count=2
function_name	[function_name_1] l'image ||| [function_name_1] [function_name_2]	count=16
function_name	retourne la taille du ||| size	count=2
return	chaîne ||| sdo_das_xml_document	count=1
function_name	valeur de stride ||| stride	count=1
function_name	un serveur ms sql ||| mssql	count=2
arg_pair	index d'une palette une ||| resource $image int $index	count=1
arg_pair	pointée par [arg_pair] ||| [arg_pair]	count=2
function_name	à memcached::append() mais ||| append	count=1
arg_pair	la première occurrence ||| mixed $needle	count=1
function_name	signal indiqué par ||| signal	count=1
function_name	un arc dans ||| arc	count=1
function_name	sinus de ||| trader sin	count=1
function_name	de la bibliothèque cliente ||| client info	count=1
arg_pair	l'appel direct à cette ||| string $function_name string $arguments	count=1
function_name	[function_name_1] solr placera ||| [function_name_2] [function_name_1]	count=1
function_name	ajoutés à ||| newt	count=1
function_name	[function_name] file localement ||| [function_name]	count=3
function	le blob [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	du cache ||| function	count=1
namespace	la file ||| splpriorityqueue	count=1
function_name	partielle ||| imagearc	count=1
function_name	mémoires utilisées par la ||| newt	count=1
namespace	d'exceptions par ||| function	count=1
function	[function_name_1] large_object ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	soit terminé, ou ||| int $status	count=1
arg_pair	en mode wsdl ou ||| array $options	count=1
function_name	long d'un ||| frame long	count=1
function_name	envoi tous les appels ||| loop	count=1
function_name	définit ||| xml set	count=2
function_name	les fichiers ||| all	count=1
namespace	les paramètres passés sont ||| function	count=1
function_name	pays et une ||| by country and	count=2
function_name	binaire et enregistre ||| binary	count=1
function_name	d'être ||| user defined	count=1
arg_pair	une date stockée dans ||| resource $pxdoc int $value	count=1
arg_pair	pour l'activation de la ||| int $condition_type	count=1
function_name	va protéger tous les ||| mysql escape	count=1
function_name	retourne le contenu ||| get	count=1
function_name	colonne [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	time() ||| get timestamp	count=1
function_name	lit un token d'accès ||| get access token	count=1
function_name	la fréquence ||| mlt min term frequency	count=2
arg_pair	le paramètre str à ||| string $str	count=1
function_name	de connexion en ||| connect	count=1
function_name	[function_name_1] un ||| [function_name_2] [function_name_1]	count=6
function	ajoute une ||| add int $key	count=1
function_name	de forte priorité ||| task high	count=1
function_name	récupère la valeur ||| get	count=18
function_name	de documents supérieures ||| dead	count=1
function_name	[function_name_1] de termes ||| [function_name_1] num query [function_name_2]	count=1
function_name	la file d'attente ||| max poll	count=1
arg_pair	rpc enregistrés ||| callable $callback callable $error_callback	count=1
function_name	qui ||| uudecode all	count=2
function_name	xml brutes ||| xml	count=1
function_name	un jeu de ||| db2 field	count=1
function_name	table ||| table	count=2
arg_pair	qui héberge ||| resource $queue	count=1
arg_pair	nouvelles colonnes à des ||| string $key	count=1
arg_pair	résultats donné ||| int $fetch_flag	count=1
function_name	de colonne [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	extrait dans un ||| all	count=1
function_name	les objets d'un stockage ||| all	count=1
function_name	de l'espace de couleur ||| color space	count=1
arg_pair	passés ||| int $minute	count=1
arg_pair	statue un ||| string $path	count=2
namespace	caractères passée en argument ||| function	count=1
function_name	sur ||| form destroy	count=2
function_name	est similaire à la ||| by	count=1
function_name	évènement pour ||| event set	count=2
return	fois où la ||| int	count=2
function_name	cette fonction crée ||| create element	count=1
arg_pair	la brosse courante ||| resource $image	count=1
function_name	un document ||| merge	count=1
function_name	tous les composants ||| destroy	count=1
arg_pair	que la valeur ||| string $value	count=1
arg_pair	aux options qui ||| resource $link array $options	count=1
namespace	les ressources qui y ||| function	count=1
return	est à la ||| bool	count=1
function_name	jeu de ||| db2 field	count=1
function_name	d'instance xml ||| load string	count=1
arg_pair	l'argument [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	file d'attente ||| set max poll time	count=1
function_name	classe est itérable ||| is iterateable	count=2
function_name	elle ||| poll	count=1
arg_pair	du résultat result ou ||| int $type	count=1
arg_pair	qu'elle ignore la casse ||| string $string	count=1
function_name	commence une unité de ||| mqseries begin	count=1
function_name	assigne ||| priority set	count=2
function_name	minimale du document ||| facet enum cache min	count=1
function_name	qui avaient été ||| newt form destroy	count=1
function_name	sous la forme ||| fetch	count=1
function_name	requête spécifiée ||| sqlsrv	count=1
arg_pair	colonne indiquée ||| mixed $column	count=2
function_name	les champs facet ||| facet	count=1
function_name	[function_name_1] compressé avec ||| [function_name_2] [function_name_1]	count=4
function_name	des différences ||| merge	count=1
namespace	les fichiers encodés ||| function	count=1
function_name	schéma relaxng à ||| relax ngschema	count=1
arg_pair	alpha degrés ||| resource $p float $alpha	count=1
function_name	les variables ||| push	count=1
function_name	libère ||| free	count=13
function_name	avec vérification ||| array udiff assoc	count=1
function_name	est utilisé pour ||| set tag	count=1
function_name	en cascade ||| cascade	count=4
function_name	[function_name_1] retourne sous ||| [function_name_2] [function_name_1]	count=10
return	l'image spécifiée ||| bool	count=1
function_name	marqueur oracle ||| oci bind array by	count=1
function_name	dans un fichier ||| uudecode	count=1
function_name	snmp2_walk() est utilisée ||| walk	count=1
function_name	composants qui sont sur ||| form destroy	count=1
function_name	fonction loadfromstring() ||| save to	count=1
function_name	[function_name_1] [function_name_2] déclarant la classe considérée ||| [function_name_1] [function_name_2]	count=2
function_name	trace pour chaque ||| trace	count=1
return	fois par objet lorsque ||| void	count=1
namespace	fonction peut ||| mongolog	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] describe	count=1
return	curseur ||| mongocursor	count=1
function_name	libère ||| free descriptor	count=2
arg_pair	place un point de ||| resource $p	count=1
function_name	mime d'un fichier en ||| mime	count=1
function_name	la temporisation de sortie ||| ob end clean	count=1
function_name	de connexion en ||| yaz connect	count=1
arg_pair	position numérique ||| string $encoding	count=1
return	lors de la ||| int	count=1
function	récupère [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	retourne un tableau ||| array	count=25
function_name	si elle prend plus ||| eio set max poll time	count=1
return	cette fonction ||| bool	count=2
function_name	l'historique d'erreur [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	l'itérateur courant interne ||| iterator	count=1
function	méthode ajoute [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	de résultat mnogosearch ||| udm get res	count=1
arg_pair	une colonne dans ||| resource $stmt mixed $column	count=1
return	les modules à surveiller ||| void	count=1
function_name	du fichier ||| uudecode all	count=1
arg_pair	ou une fonction ||| string $name	count=1
function_name	tous les ||| all	count=2
function_name	pays et [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	ouvre ||| pdf open	count=2
function_name	spécifie le [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	valeur ||| set include path	count=2
arg_pair	dans la ||| string $source int $flags	count=1
arg_pair	nom de domaine ||| int $options	count=1
arg_pair	la seconde contient ||| string $prefix	count=1
function_name	fonction libère les ||| newt form destroy	count=1
function_name	utilisé pour diriger ||| set multi	count=1
function_name	signature de vérification d'une ||| signature	count=1
function_name	l'élément [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	déplace sur ||| splpriorityqueue	count=1
function_name	configuration de l'objet ||| config	count=1
function_name	[function_name_1] du jeu ||| [function_name_2] [function_name_1]	count=4
arg_pair	et namespaceuri afin ||| string $namespaceuri	count=1
arg_pair	d'extraits de ||| string $fragmenter	count=1
arg_pair	affecte le flag spécifié ||| int $options	count=1
rest	au [function_2] ||| [function_2] [return_1]	count=2
return	avec les ||| void	count=1
function_name	de postgresql associée au ||| pg result	count=1
return	à cette ||| mixed	count=1
function_name	tableau associatif ||| fetch array	count=1
function	d'autres informations [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	couleur avec ||| resource $image	count=1
function_name	dénominateur du taux de ||| task denominator	count=1
function_name	via le socket socket ||| socket	count=1
function_name	[function_name_1] sous la ||| [function_name_1] [function_name_2]	count=3
function_name	tableau associatif ou ||| fetch array	count=1
function_name	classe donnée ou a ||| a	count=1
return	à détruire un ||| bool	count=1
arg_pair	vérifie si l'objet object ||| object $object	count=1
return	du tableau array en ||| bool	count=1
namespace	sous la ||| solrparams	count=1
function_name	la transaction en cours ||| pg transaction	count=1
arg_pair	yaf_route_static comme ||| yaf_route_abstract $route	count=1
return	de fichier ou un ||| string	count=1
function_name	de needle dans ||| mb strstr	count=1
function_name	fonctionne avec les ||| close	count=1
namespace	ainsi ||| pharfileinfo	count=1
function_name	ferme le [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function	[function_name_1] dictionnaire dict ||| [function_name_1] [arg_pair_2]	count=2
function_name	de la tâche ||| task	count=2
function	[function_name_1] transfert ch ||| [arg_pair_2] [function_name_1]	count=1
function_name	exception de ||| set	count=1
arg_pair	de contexte log_cmd_delete lors ||| array $server	count=1
function_name	[function_name_1] pour ||| [function_name_1] [function_name_2]	count=1
function_name	statut spécifié ||| task status	count=1
namespace	document ||| xmldiff\file	count=2
function_name	pour envoyer ||| set by	count=1
function_name	un élément avec un ||| get element	count=1
function_name	types de colonnes ||| cubrid column types	count=1
arg_pair	fonction memcache::connect() avec ||| string $host int $port	count=1
function_name	les connexions ouvertes et ||| connections	count=1
function_name	défini le facteur ||| threshold factor	count=1
function_name	peut ||| maxdb	count=1
function_name	pour stocker ||| set	count=1
arg_pair	s'identifie ||| string $connection_string string $character_set	count=1
function_name	pspell ||| pspell new	count=2
function_name	utilisée pour convertir une ||| convert to data	count=1
function_name	tous les en-têtes de ||| headers	count=1
function	crée un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	verrou acquis avec ||| bool	count=1
return	par objet lorsque ||| void	count=1
function_name	[function_name_1] module de ||| function resource [function_name_1] [function_name_2]	count=1
namespace	seed ou ||| function	count=1
return	db2_lob_read() pour passer ||| string	count=1
function_name	forme et ||| destroy	count=1
function_name	fait qu'elle ignore la ||| eregi	count=1
function	informations [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	champ de type auto_increment ||| insert id	count=1
function_name	libère les ressources ||| form	count=1
function_name	[function_name_1] des données ||| [function_name_2] [function_name_1]	count=4
function_name	cette fonction libère les ||| destroy	count=1
arg_pair	crée un document ||| resource $fdf_document string $url	count=1
function_name	une [function_name] de la ||| is [function_name]	count=1
arg_pair	[arg_pair] et liée ||| [arg_pair]	count=2
function	[function_name_1] d'un ||| [arg_pair_2] [function_name_1]	count=7
function_name	minimale du document utilisée ||| enum cache min default	count=1
function_name	les mots ||| word space	count=1
namespace	pour toutes les classes ||| xmldiff\base	count=1
function_name	une police ||| load font	count=1
return	associé à une ||| string	count=1
function_name	une trace pour ||| trace	count=1
function_name	données personnalisées dans un ||| set metadata	count=1
arg_pair	première contient ||| mongodb $db string $prefix	count=1
function_name	utilisant l'algorithme uuencode ||| convert uuencode	count=1
function_name	résultat ibase ||| ibase	count=1
arg_pair	fusionne la source à ||| solrdocument $sourcedoc	count=1
namespace	méthode vérifie si ||| mongocursorinterface	count=1
function_name	tronque ||| eio ftruncate	count=2
return	true si le ||| bool	count=2
arg_pair	mktime() excepté le ||| int $minute	count=1
function_name	méthode retourne une ressource ||| get resource	count=1
arg_pair	boîte aux lettres mailbox ||| string $username	count=1
arg_pair	des caractères lors ||| string $pattern string $string	count=1
function_name	récupère les ||| lob get	count=1
return	avec la méthode gearmanclient::setcontext() ||| string	count=1
function_name	[function_name_1] l'intervalle quantique ||| [function_name_2] [function_name_1]	count=1
function_name	du fichier rpm ||| rpm get	count=2
arg_pair	génère une chaîne ||| string $http_method string $uri	count=1
function_name	partir d'une ||| string	count=1
function_name	selon ||| lookup	count=1
function_name	gabarit [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	exporte l'objet arrayobject ||| arrayobject	count=1
arg_pair	un ||| string $filename	count=1
function_name	mémoire partagée ||| shmop	count=1
function_name	dossier ||| zip	count=1
arg_pair	contenu ||| mongodb $db string $prefix	count=1
namespace	pour ||| pharfileinfo	count=1
function_name	remplit le chemin construit ||| fill	count=1
function_name	retourne les informations disponibles ||| get meta data	count=1
function	l'écrit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la ||| to	count=1
arg_pair	pour ces données ||| resource $ann resource $data	count=1
arg_pair	établir l'environnement pour ||| string $dbname string $userid	count=1
namespace	doit être appelé ||| collectable	count=1
function_name	avaient ||| newt	count=1
arg_pair	que ||| int $month	count=1
arg_pair	dans le fichier identifié ||| resource $ftp_stream	count=1
function_name	pour les événements ||| ibase set event	count=1
return	la casse ||| int	count=1
function_name	de fréquence d'apparition des ||| mlt min doc frequency	count=1
return	d'une ||| gmagick	count=1
arg_pair	la clé key ||| mixed $key	count=1
arg_pair	mélange la couleur ||| mixed $colorize mixed $opacity	count=1
function_name	toutes les ||| add	count=1
namespace	de lecture seule ||| pharfileinfo	count=1
function_name	au champ spécifié ||| mysql field flags	count=1
return	caractères contenant le ||| string	count=2
function_name	[function_name_1] maximale d'un ||| [function_name_2] word [function_name_1]	count=2
function_name	déconditionne ||| unpack	count=1
function_name	termine [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	snmp spécifié ||| snmp2 get	count=1
return	extrait ||| array	count=1
namespace	gestionnaire de travaux ||| gearmanjob	count=1
function_name	vers [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	examine ||| array $cainfo string $untrustedfile	count=1
function_name	[function_name_1] dernière ||| [function_name_2] [function_name_1]	count=13
return	la qualité d'une image ||| gmagick	count=1
return	s'interrompt si elle ||| void	count=1
function_name	envoyer des erreurs soap ||| soap fault	count=1
function_name	code d'erreur comme paramètre ||| strerror	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $servername [arg_pair_2]	count=1
function_name	dom ||| import dom	count=1
return	et extrait dans un ||| array	count=1
function_name	le nombre maximal de ||| highlight max	count=1
namespace	la première contient les ||| mongogridfs	count=1
return	libère une référence ||| bool	count=1
function_name	retour de statut spécifié ||| add task status	count=1
function_name	le ||| buffer	count=1
function_name	le délai [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	définit ||| set mask	count=1
function_name	à la fonction ||| id	count=1
arg_pair	copie des données entre ||| string $data	count=1
function_name	[function_name_1] les pages ||| [function_name_2] [function_name_1]	count=3
arg_pair	métadonnées et la seconde ||| mongodb $db string $prefix	count=1
return	peut ||| void	count=2
arg_pair	la base de ||| resource $link_identifier	count=1
function_name	la méthode statique create() ||| add types	count=1
function_name	mysql courante ||| mysql	count=2
arg_pair	distants rpc enregistrés ||| callable $callback callable $error_callback	count=1
function_name	flou radial d'une image ||| radial blur image	count=1
arg_pair	filename sous la forme ||| string $filename string $mode	count=1
function_name	cette méthode supprime ||| delete	count=1
function_name	[function_name] sera retourné ||| [function_name] last	count=3
namespace	la fin ||| eventbuffer	count=1
arg_pair	hyperlien à une position ||| float $lly float $urx	count=1
function_name	einer mime ||| iconv mime encode	count=1
function_name	comme pourrait le ||| unbuffered query	count=1
function_name	valeur de sqlstate retournée ||| stmt error	count=1
function_name	sur le socket ||| last socket	count=1
arg_pair	de la colonne correspondant ||| resource $result int $field_offset	count=1
function_name	nom d'hôte ||| by name	count=1
function_name	protéger tous ||| mysql escape string	count=1
function_name	implémenter ||| eio poll	count=1
return	en largeur ||| bool	count=1
function_name	la fréquence en ||| mlt min term frequency	count=2
namespace	méthode ev::run() est entrée ||| ev	count=1
function_name	mémoires utilisées ||| newt form destroy	count=1
arg_pair	avec la fonction ||| resource $radius_handle	count=1
namespace	algorithme ||| arrayobject	count=1
function_name	nouvelle connexion ||| new connect	count=2
function_name	ajoute l'attribut ||| mod add	count=1
arg_pair	un espace de ||| string $qualifiedname	count=1
function_name	a eu survenue lors ||| error	count=1
function_name	pour coloriser [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	par sa majuscule ||| function	count=1
arg_pair	une correction ||| resource $image	count=1
function_name	les ressources mémoires utilisées ||| form destroy	count=1
arg_pair	excepté le fait que ||| int $month	count=1
function_name	l'octet ||| byte index	count=1
function_name	forte priorité ||| task high	count=1
function_name	décide si ||| qc set is	count=1
function_name	de blocs ||| algo block	count=1
function_name	la fonction ||| id	count=1
namespace	détermine si ||| pharfileinfo	count=1
function_name	[function_name_1] bases ||| [function_name_1] [function_name_2]	count=6
function_name	configuration [function_name_2] ||| [function_name_2] load [function_name_1]	count=1
namespace	par documents par réponse ||| mongocursor	count=1
namespace	pour la ||| function	count=1
function_name	l'identifiant de la ligne ||| row id	count=1
function_name	le numéro de ligne ||| line	count=1
function_name	dans un ||| uudecode all	count=1
namespace	les métadonnées et ||| mongogridfs	count=1
arg_pair	résultat à destfp ||| resource $destfp	count=1
function_name	[function_name_1] sous copyright ||| [function_name_1] [function_name_2]	count=1
arg_pair	à fournir à ob_start() ||| string $contents	count=1
function_name	brute du ||| raw	count=1
namespace	antislashs devant les ||| function	count=1
function_name	tri [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	les bits [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	retourne ||| get attribute	count=1
function_name	fréquence ||| doc frequency	count=1
function_name	client pour ||| client	count=1
function_name	d'un objet snmp spécifié ||| snmp2 get	count=1
arg_pair	données database_name ||| string $database_name	count=1
namespace	le fait qu'elle fonctionne ||| function	count=1
function_name	fonctionnellement équivalent à memcached::append() ||| append by key	count=1
arg_pair	grâce à gearmanclient::setstatuscallback() ||| string $job_handle	count=1
function_name	de déboguage ||| internal debug	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] block [function_name_2]	count=1
function_name	ligne de résultat d'une ||| fetch	count=2
arg_pair	la casse des ||| string $pattern string $string	count=1
arg_pair	fait ||| int $second	count=1
function_name	données d'entrainement depuis une ||| train from	count=1
function_name	dernière erreur associée avec ||| last error	count=1
return	à la fin et ||| bool	count=1
function_name	dossier ||| entry compressionmethod	count=2
arg_pair	dossier qui pour ||| string $path resource $context	count=1
function_name	retourne un booléen indiquant ||| get terms	count=1
function_name	utilisée pour ||| cubrid	count=1
return	le fait qu'elle ignore ||| int	count=1
arg_pair	de queues ||| string $qmanagername resource $hconn	count=1
arg_pair	vérifier si ||| string $user bool $nodns	count=1
arg_pair	: soapfault::soapfault() ||| string $faultactor string $detail	count=1
function_name	de ||| zip entry compressionmethod	count=2
function	dns associées [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	les attributs du terminal ||| array $options	count=1
function_name	résultat sybase associé à ||| sybase data	count=1
function_name	l'entier supérieur suivant pour ||| trader ceil	count=1
arg_pair	à la fonction mysql_field_name() ||| int $field_offset	count=1
arg_pair	les deux versions de ||| string $version1	count=1
function_name	élément ||| by	count=1
namespace	qualité d'une image contenant ||| gmagick	count=1
function_name	groupe d'appartenance du fichier ||| group	count=1
arg_pair	une et ||| string $new_data2 string $error	count=1
function_name	région d'une image ||| image region	count=3
namespace	pour le dessin ||| function	count=1
function_name	les précédents intervalles ||| elapsed	count=1
function_name	instance de la ||| fetch object	count=1
arg_pair	fichier identifié par handle ||| resource $ftp_stream resource $handle	count=1
function_name	métadonnées et la seconde ||| construct	count=1
function_name	devant les caractères ||| db2	count=1
function_name	à ||| form destroy	count=2
function_name	fourni par le ||| add	count=1
function_name	ligne précédente ||| prev	count=1
function_name	d'entrelacement de l'image ||| set image interlace scheme	count=1
return	[return] la bibliothèque ||| [return]	count=1
function_name	la hauteur ||| getimageheight	count=1
arg_pair	avec un ||| string $mode string $lib_dir	count=1
function_name	l'endroit où ||| error log	count=1
function_name	de caractères courant et ||| iconv set encoding	count=1
function_name	d'activation ||| activation	count=9
function_name	souscrit ||| imap subscribe	count=2
function_name	des antislashs devant les ||| escape string	count=1
namespace	par défaut des objets ||| function	count=1
function_name	fusionne une séquence ||| flatten	count=1
function	insère le [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	réponses ||| bool	count=1
namespace	première contient les ||| mongogridfs	count=1
return	en sautant ||| bool	count=1
function_name	un fichier temporaire ||| all	count=1
namespace	lieu de stocker ||| memcached	count=1
arg_pair	la fonction memcache::connect() ||| int $port	count=1
arg_pair	par path ||| string $path	count=1
function_name	de données d'entrainement depuis ||| train from	count=1
arg_pair	lisant ses en-têtes ||| int $subjectlength	count=1
function_name	la position courante du ||| ps	count=1
function_name	la base ||| dbase numfields	count=1
return	un ||| gmagick	count=1
function	l'objet com [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	ignore la casse ||| int	count=1
function_name	le type d'une ||| type	count=1
function_name	retourne l'index ||| get	count=1
function_name	nombre maximal de caractères ||| max	count=1
arg_pair	contient les ||| string $prefix	count=1
function_name	pour fermer ||| close	count=1
function_name	qui ||| sybase fetch	count=1
arg_pair	qu'elle ignore la casse ||| string $pattern	count=1
function_name	de la dernière requête ||| last	count=2
return	sont ||| int	count=1
return	l'identifiant ||| bool	count=1
arg_pair	et ||| string $filename mixed $data	count=1
function_name	défini ||| fann set	count=1
function_name	par la forme ||| form	count=1
arg_pair	l'environnement pour la ||| string $passwd	count=1
function_name	pour définir les modules ||| module	count=1
function_name	compare une ||| compare	count=1
function_name	définit la position ||| set	count=1
function_name	utilisée sur le ||| zip	count=1
function_name	cette fonction ferme ||| close	count=1
function_name	événement timer à ||| event timer	count=1
function_name	retourne [function_name_2] ||| [function_name_1] algo key [function_name_2]	count=1
function_name	de ||| db2 escape string	count=2
function_name	être utilisée pour ||| set by	count=1
function_name	uniquement ||| get	count=1
arg_pair	élever le nombre left_operand ||| string $left_operand	count=1
arg_pair	un mot existe ou ||| string $word	count=1
function_name	de données [function_name_2] ||| [function_name_2] [function_name_1]	count=8
rest	[return_1] [function_2] ||| [return_1] [function_2]	count=166
namespace	similaire à ||| domdocument	count=1
function	retourne [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	[arg_pair_1] et bcc ||| [arg_pair_1] [arg_pair_2]	count=4
function	texte [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	retourne un contexte de ||| context	count=1
function_name	un ||| oid numeric print	count=1
function_name	connexion en ||| connect	count=1
arg_pair	l'aide ||| mongodb $db string $prefix	count=1
function_name	ou plusieurs serveurs de ||| servers	count=1
function_name	associé à l'identifiant ||| sybase	count=1
arg_pair	et la ||| resource $conn_identifier string $oid	count=1
function_name	ajoute une tâche d'arrière-plan ||| add	count=1
return	connexion ||| array	count=1
namespace	d'attente s'interrompt si ||| function	count=1
return	l'itérateur à la position ||| void	count=1
function_name	avec un traitement ||| preview images	count=1
arg_pair	par le paramètre eol_style ||| int $eol_style	count=1
function_name	type d'octets dans ||| byte type	count=2
function_name	un verrou ||| cubrid lock read	count=1
function_name	cette fonction libère les ||| newt form destroy	count=1
function_name	l'élément suivant est disponible ||| next element	count=1
namespace	fonction closedir() seul le ||| directory	count=1
arg_pair	casse ||| string $string	count=1
function_name	[function_name_1] de contrôle ||| [function_name_1] last [function_name_2]	count=1
return	envoie une réponse ||| void	count=1
function_name	patch binaire ||| string patch binary	count=1
return	avaient été ||| void	count=1
namespace	seed ou avec ||| function	count=1
namespace	la forme de ||| solrparams	count=1
function_name	basé sur ||| shading	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] parse [arg_pair_2]	count=8
function_name	sert à comparer ||| compare	count=1
arg_pair	contient le contenu ||| string $prefix	count=1
function_name	plusieurs images en ||| images	count=1
function_name	de queues et l'application ||| mqseries disc	count=1
namespace	un bloc de mémoire ||| function	count=1
function_name	fonction d'activation ||| activation function output	count=1
arg_pair	de : soapfault::soapfault() ||| string $detail	count=1
function_name	du point vert ||| green primary	count=1
namespace	http associées avec la ||| eventhttprequest	count=1
function_name	vérifie si le champ ||| oci field is	count=1
function_name	classes depuis le bytecode ||| bcompiler	count=1
function_name	de sortie pour une ||| fann set output	count=1
function_name	utilisée pour [function_name_2] ||| [function_name_1] [function_name_2] resource $req_identifier	count=1
function_name	une ou [function_name] ||| remove [function_name]	count=1
arg_pair	colonne données dans ||| mixed $column mixed $param	count=1
arg_pair	la relation en name ||| string $name	count=1
function_name	dernière opération ||| errno	count=3
function_name	première contient ||| construct	count=1
arg_pair	la structure qui héberge ||| resource $queue array $data	count=1
function	yaml de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la position ||| show	count=1
arg_pair	les données fournies ||| array $record	count=1
namespace	objet ||| ktaglib_mpeg_file	count=1
function_name	présence d'événements de haute ||| set max dispatch interval	count=1
function_name	de l' ||| buffer	count=1
return	dans une boucle personnalisée ||| int	count=1
function_name	pour les événements ||| ibase set	count=1
arg_pair	et retourne la ||| bool $part	count=1
arg_pair	une ||| string $feature string $version	count=1
function_name	du tampon de ||| ob get	count=1
arg_pair	fonction de rappel callback ||| callable $callback	count=8
function_name	serveur de tâches ||| server	count=1
arg_pair	gearmanclient::setstatuscallback() ||| string $job_handle	count=1
function_name	libère ||| buffer free	count=1
return	utilisée sur le dossier ||| string	count=1
namespace	fonctions xslt ||| xsltprocessor	count=1
function_name	court ||| frame short	count=1
return	archive ||| bool	count=1
function_name	retourne le statut de ||| get state variable	count=1
function_name	prépare une page pour ||| page	count=1
function_name	la ||| field	count=2
return	lorsque ||| void	count=2
function_name	fichiers distant ||| ssh2 sftp	count=4
function_name	uri d'espace de noms ||| elements by tag	count=1
arg_pair	change la priorité de ||| int $priority	count=1
return	9 miniatures ||| bool	count=1
function_name	nommé à l'objet ||| setimageprofile	count=1
function_name	dans un ||| update	count=1
function_name	suivante de ||| next	count=1
arg_pair	une ||| string $repos_url int $revision_no	count=1
arg_pair	à la ||| int $second	count=1
function_name	récupère le statut d'un ||| status	count=1
function	ajoute une ||| add resource $grp	count=1
function_name	d'échelle de sortie pour ||| fann set output scaling	count=1
arg_pair	à strcmp() ||| string $str1	count=1
function_name	une position précise ||| pdf fit	count=1
function_name	récupère la réponse ||| response	count=1
function_name	de l' eventbuffer ||| add	count=1
function_name	est accessible en lecture ||| is readable	count=1
function_name	quitte le ||| decl	count=1
function_name	à pclose() ||| proc close	count=1
return	se bloque si ||| bool	count=1
function_name	[function_name_1] une interface ||| [function_name_1] [function_name_2]	count=1
arg_pair	indique si ||| bool $flag	count=1
function_name	[function_name_1] le nom ||| [function_name_1] font [function_name_2]	count=1
function_name	écrit une image ou ||| write	count=1
function	json [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	lit/modifie le langage courant ||| language	count=1
function_name	la forme qui ||| form	count=1
function_name	mise à jour d'un ||| update	count=1
function_name	retourne [function_name_2] ||| [function_name_1] genre [function_name_2]	count=3
function_name	nouveau filtre entier ||| set filter range	count=1
function_name	hormis le ||| eregi	count=1
function	[function_name_1] str en ||| [arg_pair_2] [function_name_1]	count=3
function_name	la couleur ||| color mask	count=1
arg_pair	identique à la fonction ||| int $hour	count=1
function_name	fichier temporaire tous les ||| mailparse uudecode	count=1
return	données uniquement si elle ||| bool	count=1
arg_pair	envoyés par ||| string $url int $format	count=1
return	php ||| bool	count=1
function	ajoute [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=20
arg_pair	la recherche sur ||| string $pattern string $string	count=1
function_name	fuseau horaire correspondant à ||| geoip time zone	count=1
function_name	[function_name_1] image dans ||| [function_name_2] [function_name_1]	count=4
arg_pair	connexion spécifiée ||| resource $connection bool $value	count=1
function_name	le dessin des ||| imagesetbrush	count=1
arg_pair	fichier filename dans une ||| string $filename	count=1
function_name	retourne l'intervalle quantique ||| get quantum range	count=2
function_name	l'url complète ||| url	count=1
function_name	récupère ||| get facet	count=1
function_name	lié ||| ldap	count=1
function_name	est la plus proche ||| imagecolorclosest	count=1
function_name	fichiers distant ||| ssh2	count=6
function_name	filtre ||| filter remove	count=1
arg_pair	sur une [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	cette fonction extrait ||| grapheme extract	count=1
function_name	[function_name_1] réservée par ||| [function_name_2] [function_name_1]	count=2
function_name	invoque la ||| invoke	count=1
function_name	à la ||| string	count=1
function_name	bibliothèque [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	certain délai sur ||| immortal	count=1
function_name	supprime [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	si un mot ||| resource $dict string $word	count=1
function_name	place ||| db2 escape string	count=2
return	: la ||| mongodb	count=1
arg_pair	spécial ||| string $pathname int $mode	count=1
function_name	groupe de requêtes ||| eio grp	count=1
namespace	représentant un fichier ou ||| function	count=1
arg_pair	un document ||| resource $fdf_document string $url	count=1
function_name	la rfc2045 section 6.8) ||| binary	count=1
function_name	eventbuffer courant ||| buffer	count=1
function_name	un des champs ||| field	count=1
arg_pair	de la donnée data ||| mixed $data int $encoding	count=1
arg_pair	de texte avec des ||| string $blockname string $text	count=1
function_name	balise donné ||| elements by tag	count=1
function_name	personnalisées dans un fichier ||| metadata	count=1
function_name	récupère le [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=1
namespace	termine ||| function	count=1
arg_pair	[arg_pair] valeur ||| [arg_pair]	count=1
function_name	jeu de ||| set encoding	count=1
arg_pair	spécifié local_socket ||| string $local_socket int $errno	count=1
function_name	un document html contenu ||| load htmlfile	count=1
function_name	classe spécifiée ||| class	count=1
function_name	cette ||| module	count=1
arg_pair	un traçage ||| resource $connection string $action_name	count=1
arg_pair	au ||| resource $link	count=2
arg_pair	alpha degrés ||| float $alpha	count=1
return	d'objets résultants et les ||| mongocommandcursor	count=1
function_name	la bibliothèque cliente ||| client info	count=1
function	champ [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	l'utilisation de l'api cubrid ||| cubrid	count=2
arg_pair	les phars orientés web ||| array $mimetypes	count=1
arg_pair	et produit un ||| domdocument $to	count=1
function_name	ligne à width ||| setlinewidth	count=1
function_name	les buffers d'affichage dans ||| fflush	count=1
function_name	rassemble les éléments de ||| array merge	count=1
return	sein d'une ||| bool	count=1
function_name	efface ||| pdf delete textflow	count=2
namespace	ou du disque ||| function	count=1
function_name	script en cours ||| path	count=1
arg_pair	clé donnée ||| int $expiration	count=1
function_name	éléments avec un nom ||| by tag name	count=1
function_name	un bloc de mémoire ||| delete	count=1
namespace	avaient été ajoutés ||| function	count=1
arg_pair	de contenu avec des ||| int $contents	count=1
namespace	4 ||| mongocursor	count=1
namespace	courant de [namespace] ||| [namespace]	count=1
namespace	les paramètres actuellement liés ||| sqlite3stmt	count=1
arg_pair	clé key ||| mixed $value	count=2
namespace	soapfault sert à envoyer ||| soapfault	count=1
arg_pair	à ||| int $day	count=1
arg_pair	retourne une ||| string $domain	count=1
function_name	snmp2_walk() est ||| walk	count=1
function_name	est similaire à pclose() ||| proc close	count=1
function_name	similaire à la ||| element by	count=1
arg_pair	zp ||| resource $zp	count=1
function_name	dernier identifiant autogénéré par ||| db2 last	count=1
arg_pair	pour le texte text ||| string $text	count=1
function_name	spanscorer pour ||| set	count=1
arg_pair	valeur entre 0 ||| int $value	count=1
function_name	liste tous les algorithmes ||| list algorithms	count=1
return	sert à ||| bool	count=1
arg_pair	fichier remote_file depuis ||| int $mode	count=2
function_name	entrants ||| num input	count=1
namespace	crée un fichier ||| function	count=1
function_name	que setcookie() excepté que ||| setrawcookie	count=1
function_name	de la dernière tentative ||| connect errno	count=1
function_name	fonction openssl_get_cert_locations() ||| cert locations	count=1
function_name	gravité courante de l'image ||| image gravity	count=1
function_name	avec un identifiant ||| element	count=1
function_name	fichiers encodés ||| mailparse	count=1
return	des ||| int	count=1
arg_pair	attrappées par ||| string $cb string $arg	count=1
function_name	de travail ||| svn	count=1
arg_pair	de mémoire partagée ||| int $shmid int $start	count=1
function_name	du flou à une ||| gaussian blur	count=1
return	un autre ||| bool	count=1
function_name	fonction met à jour ||| update	count=1
function_name	sélectionne ||| mysql db	count=1
function_name	le fait que ||| gmmktime	count=1
function_name	complétée à droite ||| str pad	count=1
function	schéma contenu [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	d'une matrice affine ||| affine	count=1
arg_pair	prompt et retourne ||| callable $callback	count=1
function_name	dossier d'archives ||| zip entry	count=1
function_name	de postgresql ||| pg result	count=1
function_name	à la ||| field	count=2
function_name	clé [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	du texte lors ||| int	count=1
function_name	est similaire ||| element by id	count=1
namespace	une ou plusieurs procédures ||| function	count=1
namespace	définie par l'utilisateur ||| function	count=2
function_name	memcached::prepend() ||| prepend by	count=1
function_name	fonction geoip_country_code3_by_name() retourne les ||| country code3 by	count=1
namespace	reçu pour une tâche ||| gearmanclient	count=1
function_name	types ||| types	count=1
function_name	la fonction ||| close	count=1
function_name	la connexion ssl courante ||| ssl	count=1
arg_pair	result_identifier jusqu'à ||| resource $result_identifier	count=1
function_name	les paramètres de l'objet ||| string	count=1
return	toutes les ||| array	count=5
function_name	retourne la ||| get to	count=1
function_name	noms selon le ||| lookup namespace	count=2
function_name	les connexions sont effectuées ||| local port	count=1
return	base de ||| mixed	count=1
return	verrou acquis ||| bool	count=1
arg_pair	partir de [arg_pair] ||| [arg_pair]	count=1
function_name	un identifiant ||| get element	count=1
function_name	non les caractères brutes ||| return raw	count=1
arg_pair	template et affiche immédiatement ||| string $tpl array $tpl_vars	count=1
function_name	définit ||| mysqlnd ms set	count=2
function_name	gestionnaires curl ||| curl multi	count=1
arg_pair	la requête query ||| resource $link_identifier	count=1
arg_pair	informations détaillées sur une ||| string $format	count=1
function_name	à détruire un ||| shmop	count=1
function_name	définit une ||| set	count=4
function	[function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=2
namespace	d'une ||| gmagickdraw	count=1
function	[function_name_1] l'algorithme spécifié ||| [arg_pair_2] [function_name_1]	count=3
return	cette méthode implémente un ||| void	count=1
function_name	[function_name_1] l'identifiant ||| [function_name_1] thread [function_name_2]	count=1
arg_pair	les métadonnées ||| string $prefix	count=1
namespace	l'itération du curseur ||| mongocursor	count=1
function_name	nombre de ||| mysqli num	count=2
function_name	source de données odbc ||| odbc	count=1
function_name	retourne l'état de bufferisation ||| get buffering	count=1
namespace	l'objet arrayobject ||| arrayobject	count=2
function_name	élevé à la puissance ||| pow	count=1
function_name	si algorithm [function_name] ||| [function_name] block	count=1
namespace	la ||| eventbuffer	count=2
return	lit le ||| resource	count=1
function_name	région ||| region	count=3
function_name	recherche imposées ||| clear search limits	count=1
function_name	place une image ||| image	count=1
arg_pair	les données ||| string $optlist	count=1
function_name	désactive les alertes frontbase ||| fbsql warnings	count=1
function_name	interrompt l'hébergement d'un fichier ||| gupnp context unhost path	count=1
function_name	file d'attente s'interrompt ||| time	count=1
arg_pair	l' oid fourni ||| string $oid	count=1
function_name	jusqu'au prochain élément ||| next	count=1
function_name	de backends ||| backends	count=1
namespace	des antislashs ||| function	count=1
arg_pair	envoie une commande au ||| resource $connection string $query	count=1
function_name	le message d'erreur associé ||| result error	count=1
function_name	[function_name_1] posix ||| [function_name_2] [function_name_1]	count=1
function_name	comme une pile et ||| array push	count=1
function_name	xml ||| xml set character data	count=1
return	forme d'un tableau de ||| array	count=1
function_name	de la ||| set include	count=1
function_name	est [function_name_2] ||| [function_name_1] default [function_name_2]	count=1
function_name	plus de détails sur [function_name_1] [function_name_2] ||| solrresponse string [function_name_1] [function_name_2]	count=1
function_name	d'instance xml donnée ||| load string	count=1
arg_pair	un ||| string $pathname	count=1
arg_pair	la chaîne str après ||| string $from	count=1
function_name	tampon ||| add buffer	count=2
function_name	devant les caractères ||| string	count=1
function_name	retourne sous la forme ||| get	count=1
arg_pair	chaîne ||| string $image string $filename	count=1
function_name	mois month de ||| month	count=1
function_name	décimal ||| float range	count=2
namespace	de mémoire utilisée par ||| function	count=1
arg_pair	à appeler à chaque ||| mixed $callback	count=1
function_name	à la chaîne de ||| escape	count=1
namespace	champs colonnes ||| function	count=1
arg_pair	du tableau array et ||| array $array	count=1
function_name	la ||| monitor	count=1
function_name	plus de ||| set max poll time	count=1
function_name	gestionnaire de travaux fourni ||| job	count=1
function_name	ajoute un nouveau filtre ||| set filter	count=2
function_name	du document utilisée pour ||| cache	count=1
function_name	[function_name_1] maximale ||| [function_name_2] word [function_name_1]	count=2
function_name	définie dans la rfc2822 ||| adrlist	count=1
function_name	la variable repérée par ||| var	count=1
return	supprime un ||| resource	count=1
function_name	[function_name_1] maximale candidate ||| [function_name_2] [function_name_1]	count=1
return	le ||| mixed	count=1
namespace	en ||| serializable	count=1
function_name	dictionnaire ||| crack	count=2
return	si elle prend plus ||| void	count=1
function_name	avec vérification des index ||| udiff assoc	count=1
arg_pair	sur une base de ||| string $servername	count=1
arg_pair	le domaine courant pour ||| string $msgid1	count=1
arg_pair	source ||| string $src	count=1
function_name	fonction readgzfile() excepté qu'elle ||| gzfile	count=1
arg_pair	avec un espace de ||| string $qualifiedname	count=1
arg_pair	cubrid_bind() est ||| mixed $bind_value string $bind_value_type	count=1
return	et ||| array	count=7
function_name	méthode [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	spécifié local_socket ||| string $local_socket	count=1
function_name	geoip_org_by_name() ||| org by	count=1
function_name	subscribe est utilisée pour ||| subscribe	count=1
function_name	page ||| page	count=8
function_name	récupère ||| get parameter	count=2
return	fait que la ||| mixed	count=1
function_name	les caractères brutes ||| terms return raw	count=1
function_name	[function_name_1] accessible en ||| [function_name_1] [function_name_2]	count=1
namespace	du tampon d'événement ||| eventbufferevent	count=1
function_name	une queue ||| mqseries	count=1
return	même façon que sqlite_open() ||| sqlitedatabase	count=1
function_name	est utilisé pour ||| set	count=1
arg_pair	sql pour l'activation ||| mixed $condition	count=1
function_name	[function_name] de l'expression ||| get [function_name]	count=1
function_name	gravité courante ||| gravity	count=1
function_name	la brosse courante pour ||| imagesetbrush	count=1
arg_pair	service daemon est ||| string $address	count=1
return	cette ||| array	count=1
function_name	court d'une fonction sans ||| short	count=1
function_name	transforme ||| transform image	count=2
namespace	par le descripteur ||| function	count=1
namespace	un ||| eventbuffer	count=1
function_name	le nom du ||| field name	count=2
function	[function_name_1] d'une série ||| [arg_pair_2] [function_name_1]	count=2
function_name	une requête préparée ||| execute	count=1
return	retourne true si ||| bool	count=4
function_name	la séparation lecture/écriture ||| user pick server	count=1
function_name	un document xml depuis ||| xml	count=1
namespace	la chaîne de caractères ||| function	count=1
arg_pair	d'un élément ||| string $key	count=1
function_name	le champ field ||| oci field	count=1
namespace	la qualité d'une image ||| gmagick	count=1
function_name	incluant ||| destroy	count=1
arg_pair	str ||| string $str	count=4
return	cherche si ||| bool	count=1
function_name	des informations internes ||| internal info	count=1
function_name	envoyées [function_name] ||| [function_name] mppe	count=1
function_name	différences et ||| merge	count=1
function_name	[function_name_1] utilisateur ||| [function_name_1] [function_name_2]	count=5
function_name	facet qui doit ||| set facet	count=1
function_name	la variable ||| ucache	count=1
function_name	retourne [function_name_2] ||| [function_name_1] short [function_name_2]	count=1
arg_pair	le ||| int $second	count=1
function_name	ne doit ||| construct	count=1
arg_pair	la ||| int $type int $limit	count=1
arg_pair	filename ||| string $filename string $class_name	count=1
arg_pair	l'url suivant la requête ||| array $query	count=1
function_name	eventbuffer courant ||| add	count=1
function_name	gestionnaire d'erreurs libxml ||| libxml	count=1
function_name	ajouter les données ||| append	count=1
arg_pair	oid de l'instance ||| resource $conn_identifier string $oid	count=1
return	où la ||| int	count=2
return	d'un fichier ||| int	count=1
function_name	file ||| poll time	count=2
function_name	fichier chdb contenant ||| chdb	count=1
namespace	pointée par ||| function	count=3
function_name	md5 de la chaîne ||| md5	count=1
function_name	de message d'erreur ||| result error	count=1
namespace	les modules à ||| mongolog	count=1
function_name	[function_name_1] chemin ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $algorithm string $algorithm_directory	count=2
arg_pair	ligne de la largeur ||| string $text float $width	count=1
function_name	récupère [function_name_2] ||| [function_name_1] cipher [function_name_2]	count=1
function_name	[function_name_1] attribut de ||| [function_name_2] [function_name_1]	count=3
function_name	sur le document ||| merge	count=1
function_name	racine [function_name_2] ||| [function_name_1] device [function_name_2]	count=1
arg_pair	récupère une section ||| string $section int $options	count=1
function_name	julien ||| to jd	count=2
function_name	la tâche en ||| do background	count=1
namespace	retourner au client à ||| solrquery	count=1
function_name	et se prolongeant ||| eio fallocate	count=1
function_name	fichier fourni ||| mailparse uudecode all	count=1
arg_pair	et un endroit donnés ||| float $zenith float $gmt_offset	count=1
function_name	le terme à partir ||| terms upper bound	count=1
namespace	de mettre ||| quickhashintstringhash	count=1
function_name	simple ligne de ||| pdf fit textline	count=1
function_name	récupère la couleur courante ||| get gray	count=1
arg_pair	réseau complet ||| resource $ann string $configuration_file	count=1
return	première contient ||| mongodb	count=1
function_name	imap ||| imap	count=4
namespace	les appels ||| yar_concurrent_client	count=1
function_name	définit la valeur du ||| set color value	count=1
namespace	colonnes de ||| function	count=1
function_name	pente [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] steepness	count=4
function_name	qu'elle fonctionne avec ||| proc	count=1
function_name	fonction est similaire à ||| id	count=1
arg_pair	données data au ||| string $data	count=1
arg_pair	dans un document ||| array $values	count=1
arg_pair	connexion ||| int $function	count=1
arg_pair	de contenu avec ||| string $blockname int $contents	count=1
function_name	libère un descripteur ||| free descriptor	count=1
arg_pair	cubrid_connect() ||| string $passwd bool $new_link	count=1
arg_pair	le paramètre link ||| resource $link	count=1
function_name	la durée ||| path	count=1
arg_pair	première occurrence ||| string $haystack mixed $needle	count=1
function_name	[function_name_1] l'entrée utilisateur ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] de sqlstate ||| [function_name_1] [function_name_2]	count=1
function_name	terminer le processus courant ||| pcntl	count=1
function_name	document selon un ||| validate	count=1
arg_pair	une matrice de ||| resource $image	count=1
function_name	la taille ||| mb strwidth	count=2
function_name	selon [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	en haut ||| bool	count=1
arg_pair	identique ||| int $hour	count=1
arg_pair	mktime() excepté ||| int $year	count=2
function_name	équivalent à memcached::append() ||| append by	count=1
namespace	code du jeu ||| gmagickdraw	count=1
function_name	la définition ||| pg meta data	count=1
function_name	retourne ||| entry	count=1
function	[function_name_1] original définie ||| [function_name_1] alias [arg_pair_2]	count=4
arg_pair	dans la fonction fann_read_train_from_file() ||| string $file_name	count=1
function_name	[function_name_1] php en ||| [function_name_2] [function_name_1]	count=8
function_name	gettimeofday ||| gettimeofday	count=1
function_name	les composants ||| newt form	count=2
function_name	tous les ||| destroy	count=1
arg_pair	[arg_pair_1] une ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	par le ||| function	count=8
arg_pair	x509cert ||| bool $shortnames	count=1
return	si cette ||| bool	count=1
function_name	paramètres de résultats mnogosearch ||| udm get res	count=1
function_name	fragmentation ||| set highlight regex pattern	count=2
function_name	définit l'image à ||| set mask image	count=1
arg_pair	attrappées ||| string $cb string $arg	count=1
return	xpath pour ||| string	count=1
arg_pair	lot d'opérations delete ||| mongocollection $collection array $write_options	count=1
namespace	ainsi que ceux ||| pharfileinfo	count=1
function_name	sémaphore associé au champ ||| mysql field	count=1
function_name	retourne la méthode ||| zip	count=1
function	[function_name_1] la structure ||| [arg_pair_2] [function_name_1]	count=1
function_name	clés de ||| multi by key	count=1
namespace	d'une ||| pharfileinfo	count=1
arg_pair	par le serveur ||| string $cookie	count=1
function_name	crée une nouvelle ||| new	count=3
function_name	[function_name_1] mysql ||| [function_name_2] [function_name_1]	count=14
arg_pair	correspondant à la ||| int $type	count=1
return	dictionnaire représenté par ||| bool	count=1
function_name	du client utilisé ||| client	count=1
arg_pair	la première occurrence de ||| string $haystack string $needle	count=1
function_name	associé au champ spécifié ||| field flags	count=1
function_name	[function_name_1] module de ||| [function_name_2] [function_name_1]	count=1
arg_pair	désirées avec un filtre ||| int $filter float $blur	count=1
function	contrôle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	la méthode de compression ||| zip	count=1
function_name	la licence imagemagick ||| image magick license	count=1
function_name	à ||| field	count=2
function_name	de clé ||| firstkey	count=1
namespace	de l'image depuis ||| gmagick	count=1
function_name	synchronise la base de ||| dba sync	count=1
arg_pair	position offset et ||| int $offset	count=1
return	de l'objet sous ||| string	count=1
return	la fonction ||| void	count=3
arg_pair	crée un ||| string $prefix	count=1
function_name	et retaille et ||| chop	count=1
return	fonction est identique ||| int	count=1
namespace	vérifie ||| mongocursorinterface	count=1
namespace	libère ||| weakref	count=1
arg_pair	uri contenant ||| string $uri	count=1
function_name	la dynamique ||| momentum	count=1
function_name	la session courante ||| in session	count=1
function_name	pour lier des données ||| bind	count=1
function_name	craignez de consommer trop ||| mssql free statement	count=1
function_name	le processus ||| pcntl	count=1
arg_pair	changement de ||| resource $ann float $sarprop_step_error_shift	count=1
function_name	commentaire de l'archive zip ||| archive comment	count=1
namespace	sont sur ||| function	count=1
namespace	[namespace] timeout ||| [namespace]	count=1
function_name	[function_name_1] toutes ||| [function_name_2] [function_name_1]	count=1
function_name	tous ||| destroy	count=1
function_name	de l'image pour ||| image	count=1
return	la première fois) ||| void	count=1
return	gestionnaire de travaux ||| string	count=1
arg_pair	destinataires cc [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	fourni par le ||| add buffer	count=1
function_name	de ||| shmop delete	count=2
arg_pair	publier à ||| string $target sammessage $msg	count=1
function_name	document pdf ||| pdf	count=3
function_name	à zend pour affichage ||| debug zval dump	count=1
function_name	le tag ||| set picture	count=1
function_name	utilisées par la ||| form	count=1
function	tables [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	connexion passées avec ||| connect	count=1
function_name	le paramètre patch et ||| patch	count=1
arg_pair	calcul des ||| int $accuracy	count=1
namespace	utile uniquement avec une ||| mongoclient	count=1
namespace	d'une entrée ||| rarentry	count=1
arg_pair	avec [arg_pair] ||| [arg_pair]	count=2
namespace	mktime() excepté le fait ||| function	count=1
function_name	bufferisation des ||| set buffering	count=1
rest	[return_1] en-têtes envoyés ||| [return_1] get [function_2]	count=1
function_name	variables var ||| array	count=1
function_name	déplace toutes les données ||| buffer	count=1
function_name	les drapeaux d'une classe ||| uopz flags	count=1
namespace	d'exceptions par défaut si ||| function	count=1
function_name	en cascade ||| fann set cascade	count=4
return	en utilisant la ||| gmagickdraw	count=1
function	[function_name_1] les données ||| [function_name_1] [arg_pair_2]	count=1
function_name	plus ||| eio set max	count=1
function_name	fait que les ||| gmmktime	count=1
namespace	splsubject ||| splobserver	count=1
function_name	est similaire à pclose() ||| close	count=1
function_name	compare une ou ||| compare	count=1
namespace	première ||| mongogridfs	count=1
arg_pair	qui commence par =?iso-8859-1?... ||| string $field_value	count=1
function_name	retourne la valeur de ||| yaz get	count=1
function_name	des mots personnelle du ||| to personal	count=1
function_name	définir l'identifiant de session ||| id	count=1
arg_pair	de l'envoyer ||| string $source_string	count=1
return	une classification ou une ||| bool	count=1
function_name	le nom d'hôte associé ||| host	count=1
function_name	de backends supportés ||| backends	count=1
return	texte à la position ||| bool	count=1
function_name	ldap en [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	une ||| is select	count=1
arg_pair	une ||| string $uri string $method	count=1
function_name	retourne le nombre ||| dbase	count=1
arg_pair	condamnations ||| string $repository_url int $revision_no	count=1
arg_pair	d'un fichier faisant que ||| int $pri	count=1
arg_pair	par le tableau keys ||| array $keys	count=1
function_name	la fonction openssl_get_cert_locations() ||| cert locations	count=1
function_name	appeler lorsqu'un [function_name] ||| set [function_name]	count=1
function_name	la valeur ||| set include	count=1
function_name	un bloc de mémoire ||| shmop delete	count=1
function_name	contenant les tailles de ||| supported key sizes	count=1
function_name	fonction ||| by	count=2
arg_pair	la valeur ||| mixed $value	count=3
arg_pair	en une et ||| string $error	count=1
arg_pair	caractères alphabétiques ||| string $pattern string $string	count=1
return	première contient les ||| mongodb	count=1
arg_pair	les paramètres ||| int $second	count=1
namespace	élément avec ||| domdocument	count=1
arg_pair	les ||| int $day	count=1
function_name	type objet ||| object	count=1
arg_pair	un fichier vers ||| string $filename	count=1
arg_pair	une matrice de la ||| resource $image	count=1
arg_pair	espace de noms ||| string $namespaceuri	count=1
function_name	[function_name_1] maximale ||| [function_name_2] key [function_name_1]	count=1
namespace	des fichiers ||| mongogridfs	count=1
function_name	des antislashs ||| escape string	count=1
function_name	avoir de conteneur de ||| set default stub	count=1
function	champs [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	l'utilisateur qui [return] ||| [return]	count=1
arg_pair	les paramètres passés sont ||| int $hour int $minute	count=1
function_name	lui est passée ||| newt run	count=1
arg_pair	occurrence ||| string $haystack mixed $needle	count=1
arg_pair	base de données ||| resource $connection string $data	count=1
namespace	du texte ||| function	count=1
arg_pair	similaire à sybase_fetch_array() avec ||| mixed $object	count=1
function_name	ajoutés à la forme ||| newt	count=1
function_name	retourne la méthode de ||| zip	count=1
return	de plusieurs fonctions en ||| bool	count=1
function_name	tampon fourni par ||| buffer	count=1
function_name	les messages ||| imap	count=1
return	gestionnaire de ||| string	count=1
namespace	include_path pour ||| function	count=1
return	si un fichier ||| bool	count=1
function_name	[function_name_1] nombre entier ||| [function_name_2] [function_name_1]	count=2
return	de réalisation ||| int	count=2
arg_pair	le ||| int $day	count=1
function_name	par la forme ||| newt form	count=1
function_name	tentative ||| connect	count=1
function_name	par le cache ||| wincache	count=1
function_name	par ||| add buffer	count=2
function_name	[function_name_1] socket ||| [function_name_2] [function_name_1]	count=2
namespace	l'image tout en ||| gmagick	count=1
function_name	le logarithme base-10 ||| trader log10	count=1
function_name	le mode bytea ||| bytea	count=1
function_name	[function_name_1] d'une classe ||| [function_name_1] [function_name_2]	count=3
function_name	sur le ||| compressionmethod	count=1
namespace	dans une ||| mongocursor	count=1
function_name	[function_name_1] spécifiés ||| [function_name_1] [function_name_2]	count=4
return	date de ||| string	count=1
arg_pair	system v ||| int $auto_release	count=1
function_name	classe personnalisée qui ||| class	count=1
arg_pair	: left top ||| float $top	count=1
return	qu'elle ignore la ||| int	count=1
function_name	un traitement appliqué à ||| preview	count=1
function_name	champ de résultat ||| get res field	count=1
return	personnalisées dans un fichier ||| void	count=1
function_name	[function_name] erreur ||| [function_name]	count=1
arg_pair	casse ||| string $pattern string $string	count=1
function_name	instance inotify ou modifie ||| inotify	count=1
arg_pair	pour récupérer le ||| int $schema_type string $table_name	count=1
function_name	le codage vectoriel ||| imagepsencodefont	count=1
function_name	cette ||| put	count=2
namespace	l'attribut ||| hw_api_attribute	count=1
function_name	utilisée pour lier ||| lob2 bind	count=1
namespace	contexte déclenché par ||| function	count=1
namespace	les fichiers ||| mongogridfs	count=1
function_name	phar::startbuffering() peut ||| start buffering	count=1
function_name	les fichiers encodés qui ||| all	count=1
namespace	récupère la date ||| gmagick	count=1
function_name	casse des caractères lors ||| eregi	count=1
return	un tableau associatif ||| array	count=3
function_name	complétée jusqu'à la taille ||| array pad	count=1
function_name	la durée du ||| path	count=1
function_name	pour stocker les itérateurs ||| array	count=1
function_name	des tests sur l'index ||| array uintersect uassoc	count=1
function_name	page pour utilisation ultérieure ||| pdi page	count=1
function_name	forte priorité à ||| task high	count=1
namespace	envoi tous les appels ||| yar_concurrent_client	count=1
function_name	un nouvel ||| construct	count=3
arg_pair	offset et ||| resource $lob_identifier int $offset	count=1
arg_pair	milieu àx y ||| float $y float $radius	count=1
function_name	lit la dernière erreur ||| last error	count=1
function_name	qui est retourné à ||| sybase fetch	count=1
function_name	affiche le ||| pdf show	count=1
function_name	parcourt un lot d'objets ||| size	count=1
function_name	dimensions contenant la ||| geometry	count=1
arg_pair	écrit ||| resource $psdoc	count=1
namespace	sur le ||| splpriorityqueue	count=1
return	retourne le ||| array	count=2
function_name	dernier message d'erreur ||| db2 stmt errormsg	count=1
function_name	lignes à précharger par ||| prefetch	count=1
function_name	file de ||| msg queue	count=1
function_name	police actuellement utilisée ||| current font	count=1
function_name	tampon de sortie ||| get	count=1
function_name	gettext() ||| ngettext	count=1
arg_pair	métadonnées et la ||| mongodb $db string $prefix	count=1
arg_pair	clé key ||| string $key	count=1
function_name	entrées ||| yp cat	count=2
namespace	par l'utilisateur ||| function	count=2
function_name	flux de ||| fetch stream	count=1
rest	informations [function_2] ||| [return_1] [function_2]	count=3
function_name	composants ||| form destroy	count=4
function_name	stocke le bytecode et ||| bcompiler	count=1
function_name	définit le terme ||| set terms upper bound	count=1
namespace	tampon d'événements de réussir ||| eventbuffer	count=1
function_name	ferme la connexion avec ||| close	count=1
function_name	police et ||| pdf load font	count=1
function_name	les en-têtes de tous ||| headers	count=1
function_name	courant ||| key	count=1
function_name	mime ||| mime	count=4
function_name	bbcode_create() ||| bbcode	count=1
return	insensible à la ||| void	count=1
arg_pair	de la chaîne str ||| string $str string $encoding	count=1
function_name	résolution ||| getimageresolution	count=1
function_name	décrémente de ||| dec	count=1
function_name	tous les fichiers encodés ||| uudecode	count=1
arg_pair	et attend qu'elles changent ||| array $read	count=1
arg_pair	déjà ouvert et ||| resource $handle	count=1
function_name	cette fonction ||| form destroy	count=1
function_name	[function_name_1] minimale ||| [function_name_2] [function_name_1]	count=1
function_name	identique à la ||| gmmktime	count=1
namespace	pour tracer ||| function	count=1
function	une classe [arg_pair_2] ||| [function_name_1] alias [arg_pair_2]	count=3
arg_pair	un ||| resource $ann	count=1
function_name	l'archive ||| writable	count=1
function_name	la ||| dbplus	count=2
function_name	la sévérité ||| severity	count=1
function_name	stocke le bytecode ||| bcompiler write	count=1
function_name	cette fonction analyse ||| parse	count=2
function_name	par la forme ||| form destroy	count=1
function_name	d'erreurs libxml ||| libxml use internal errors	count=1
function_name	vide est créé ||| empty	count=1
namespace	pas être ||| pharfileinfo	count=1
return	se déplace sur le ||| void	count=1
function_name	documents similaires à ||| mlt count	count=4
return	retourne un noeud ||| domnode	count=1
function_name	le serveur d'administration ||| kadm5 destroy	count=1
function_name	cosinue ||| cos	count=1
namespace	l'objet observateur evidle ||| evidle	count=1
arg_pair	dans un ||| int $oid	count=1
arg_pair	hyperlien à une position ||| float $urx	count=1
function_name	valeur d'une propriété ||| property	count=1
function_name	algorithmes de division exacte ||| divexact	count=1
function_name	de ||| rrd	count=2
arg_pair	par son identifiant object_id ||| mixed $type	count=1
arg_pair	terminé, ou qu'un ||| int $status	count=1
arg_pair	la chaîne str ||| string $from	count=1
function_name	l'échelle les données d'entrée ||| scale	count=1
function_name	algorithmes de division exacte ||| gmp divexact	count=1
function_name	cache ||| mysqlnd qc	count=1
function_name	entwerfen von einer mime ||| mime encode	count=1
function_name	gearmanclient::do() ||| do	count=1
function_name	[function_name_1] nettoyée ||| [function_name_1] [function_name_2]	count=4
function_name	frames d'un swfvideostream ||| num frames	count=1
function_name	interne de clé ||| firstkey	count=1
function_name	trouvent ||| mailparse uudecode	count=1
function_name	la taille décompressée ||| filesize	count=1
function_name	à celui de preg_replace() ||| preg replace callback	count=1
function_name	de recherche imposées ||| clear search limits	count=1
function_name	sur ||| destroy	count=1
return	dans une ||| int	count=2
function_name	récupère l'extension du ||| get extension	count=2
arg_pair	avec [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
return	[return] qui décrit ||| [return]	count=1
function_name	un modèle 3d ||| 3ddata	count=1
return	un nom depuis le ||| resource	count=1
function_name	son canal ||| imagecolorexactalpha	count=1
function_name	demande un verrou sur ||| dbplus	count=1
function_name	retourne ||| get terms return	count=1
function_name	utilisée pour fermer ||| cubrid lob2 close	count=1
function_name	classe est [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	fonction ||| type	count=2
function_name	crée une image ||| image	count=1
function_name	antislashs ||| string	count=1
function_name	suspend la page courante ||| suspend page	count=1
function_name	crée une nouvelle instance ||| create document	count=1
arg_pair	colonne correspondant à la ||| int $field_offset	count=1
return	pour restreindre ||| string	count=1
namespace	serveur le curseur ||| mongocursor	count=1
arg_pair	base de données database ||| string $database	count=1
function_name	fichier fourni ||| uudecode all	count=1
function_name	la dernière requête ||| last	count=2
arg_pair	retourne la chaîne str ||| string $str string $from	count=1
arg_pair	dans le calendrier calendar ||| int $month	count=1
function_name	l'étape ||| step	count=2
arg_pair	une table ||| string $owner string $table_name	count=1
return	sur les caractères ||| int	count=1
function_name	à l'échelle liquide ||| liquid rescale image	count=1
arg_pair	la fonction memcache::connect() avec ||| string $host int $port	count=1
function_name	une image pour ||| open image file	count=1
function_name	l'id effectif ||| getegid	count=1
arg_pair	lors de [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	exclusion logique sur ||| variant xor	count=1
function_name	s'interrompt ||| poll time	count=2
function_name	à l'identifiant ||| data	count=1
arg_pair	xml basé sur ||| string $src string $diff	count=1
function_name	retourne true s'il existe ||| key exists	count=1
function_name	du paramètre facet.date.gap ||| facet date gap	count=1
function_name	courante de l'extension sous ||| solr	count=1
function_name	les [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	classe et ||| class	count=2
function_name	récupère le nombre ||| fann get num	count=3
function	[function_name_1] msg_number pour ||| [function_name_1] [arg_pair_2]	count=3
function_name	temporaire tous les ||| uudecode	count=1
function_name	considère array ||| array push	count=1
function_name	encodés qui ||| uudecode	count=1
arg_pair	dernière modification d'un ||| float $mtime	count=1
arg_pair	utilisée pour insérer ||| string $attr_name	count=1
function_name	seule ligne ||| fetch	count=1
function_name	pointeur de résultat ||| fbsql	count=1
function_name	connexion persistante en ||| pg pconnect	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] alias [arg_pair_2]	count=12
function_name	le nombre maximal de ||| set	count=1
arg_pair	base de données database ||| resource $link_identifier	count=1
return	l'appel à la ||| bool	count=1
function_name	ajoute la ||| multi add handle	count=1
return	par la forme ||| void	count=1
function_name	rewinddir() ||| rewind	count=1
function_name	ajoute la ||| multi add	count=1
function_name	que file_get_contents() retourne ||| file get contents	count=2
return	un attribut dans ||| int	count=1
function	[function_name_1] name afin ||| [function_name_1] [arg_pair_2]	count=1
function_name	prochaine requête ||| cubrid next result	count=1
function_name	met à l'échelle ||| scale	count=4
namespace	et extrait dans un ||| function	count=1
function_name	par ||| rewind	count=1
function_name	taille ||| strwidth	count=1
function_name	décrémente ||| wincache ucache dec	count=1
namespace	d'adresses 32 bit ou ||| function	count=1
function_name	valeur qui [function_name] trop grande ||| [function_name]	count=1
function_name	cette ||| entity	count=1
namespace	de fois où la ||| ev	count=2
function_name	de 9 ||| preview images	count=1
function_name	preg_replace() hormis ||| preg replace	count=1
function	shell [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	du résultat result ou ||| resource $result	count=1
arg_pair	nbytes octets de l'objet ||| int $nbytes	count=1
function_name	défini l'endroit ||| set error	count=1
function_name	associatif avec les statistiques ||| stats	count=1
arg_pair	du texte ||| resource $psdoc string $text	count=2
arg_pair	fichier ||| bool $all_frames	count=1
function_name	chaîne de caractères d'instance ||| load string	count=1
function_name	la fonction time() ||| get timestamp	count=1
arg_pair	la nth -ème ||| int $nth	count=1
function_name	l'extension stomp ||| stomp	count=1
function_name	de message d'erreur qui ||| pg result error	count=1
arg_pair	soit terminé, ou ||| int $options	count=1
function_name	version du ||| version	count=1
arg_pair	interne de résultat ||| resource $result	count=1
function_name	session.cache_expire ||| session cache expire	count=2
namespace	à différents ||| imagick	count=1
function_name	changement décroissant du ||| decay shift	count=1
function_name	du blob ||| blob	count=1
arg_pair	attribut dans un document ||| array $values	count=1
function_name	système ||| eio fstatvfs	count=2
function_name	classe est une ||| is	count=1
arg_pair	noeud avec un espace ||| string $qualifiedname	count=1
return	en provenance d'ingres ||| bool	count=1
return	verrou sur ||| int	count=1
function_name	serveur sans attendre ||| pg send query	count=1
return	méthode de ||| string	count=1
function_name	prend plus de ||| max	count=1
function_name	les informations de version ||| version	count=1
namespace	remplace la ||| function	count=1
function_name	courant interne ||| iterator	count=1
arg_pair	la gamme des ||| float $black_point float $white_point	count=1
function_name	supprimant tous les champs ||| clear	count=1
arg_pair	clients à l'écoute ||| int $numerator int $denominator	count=1
function_name	avec des tests ||| uintersect uassoc	count=1
return	forme et tous les ||| void	count=1
return	en incluant les composants ||| void	count=1
function_name	fichier au sein ||| compressed	count=1
arg_pair	générateur d'extraits de texte ||| string $fragmenter string $field_override	count=1
arg_pair	contenu ||| string $prefix	count=1
return	avec une connexion à ||| array	count=1
arg_pair	spécifié par son index ||| resource $result int $field_offset	count=1
function_name	token ||| token	count=1
function_name	à ||| gmmktime	count=1
function_name	[function_name_1] nettoyée ||| [function_name_2] [function_name_1]	count=4
namespace	l'itérateur à ||| spldoublylinkedlist	count=1
function_name	récupère le statut ||| status	count=1
arg_pair	la longueur width ||| int $width	count=1
function_name	dernier ||| last errors	count=1
function_name	ne doit être ||| set metadata	count=1
namespace	de réalisation de ||| gearmantask	count=2
arg_pair	fils soit terminé, ou ||| int $status	count=1
function_name	retourne la définition ||| pg meta data	count=1
function_name	transfert [function_name_2] ||| [function_name_2] [function_name_1] resource	count=1
function_name	la température [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	un ||| sdo_das_xml_document	count=1
function_name	générée par ce socket ||| socket	count=1
return	les modules ||| void	count=1
arg_pair	fichier spécial ou ||| string $pathname	count=1
namespace	par la [namespace] ||| [namespace]	count=2
namespace	du ||| splfileinfo	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_2] first [function_name_1]	count=1
namespace	si la file ||| splpriorityqueue	count=1
function_name	facteur décroissant quickprop ||| set quickprop decay	count=1
function_name	modification de sortie ||| output	count=1
arg_pair	collections : la première ||| mongodb $db string $prefix	count=1
function_name	contrôle de pagination ||| control paged result	count=3
function_name	peut être ||| debug	count=1
function_name	jacobi ||| gmp jacobi	count=2
arg_pair	left et right ||| mixed $right	count=1
return	le serveur le ||| mongocursor	count=1
function_name	d'occurrences de la chaîne ||| mb substr	count=1
function_name	socket errno ||| socket errno	count=1
return	le ||| int	count=39
arg_pair	doit apparaître après un ||| string $simplepost	count=1
function_name	pour spécifier un jeu [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	nouvelle [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	première occurrence de needle ||| string $needle	count=2
return	dessin des lignes par ||| bool	count=1
arg_pair	construit un objet d'événement ||| eventbase $base	count=1
function_name	remplit la ||| fill stroke	count=1
function_name	son référencement ||| set garbage	count=1
function_name	décrémente la ||| decrement	count=1
function	lien symbolique [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	d'entrelacement de ||| image interlace scheme	count=1
function	[function_name_1] en ||| [arg_pair_2] [function_name_1]	count=1
function_name	l'url ||| request url	count=1
function_name	ferme [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	place les chaînes alphanumériques ||| void	count=1
function_name	retourne une url ||| assemble	count=1
function_name	à ||| proc	count=1
function_name	de type nombre ||| int	count=1
function	[function_name_1] connexion spécifiée ||| [arg_pair_2] [function_name_1]	count=2
namespace	l'appel à la méthode ||| samconnection	count=1
function_name	gestionnaire curl sous ||| curl	count=1
function_name	notification de modification ||| service proxy add notify	count=1
function_name	sous-jeu ||| subset	count=1
arg_pair	à un ||| resource $result	count=1
function_name	la fonction geoip_country_code3_by_name() retourne ||| country code3	count=1
function_name	le type [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
function_name	pclose() hormis ||| proc close	count=1
arg_pair	un fichier ||| string $pathname	count=1
arg_pair	fichier filename ||| string $filename int $width	count=1
return	domnodelist de ||| domnodelist	count=1
function_name	test ||| mcrypt module self test	count=2
arg_pair	jusqu'à la catégorie ||| resource $agent string $category	count=1
function_name	affiche des informations sur ||| info	count=1
function_name	[function_name_1] serveur postgresql ||| [function_name_2] get [function_name_1]	count=1
return	retour ||| void	count=1
function_name	bords et remplit la ||| pdf closepath fill	count=1
function_name	du segment ||| set chunk	count=1
function_name	toutes les options pprésentes ||| resolv conf	count=1
function_name	[function_name_1] des mots ||| [function_name_2] [function_name_1]	count=8
function_name	supprimée ou ||| delete	count=1
arg_pair	du résultat result ||| resource $result	count=1
function_name	libxml ||| libxml	count=2
function_name	maximale des [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	la position courante ||| ps show	count=1
return	date ||| string	count=1
arg_pair	et namespaceuri afin qu'il ||| string $namespaceuri	count=1
function_name	et une région ||| and region	count=3
arg_pair	valeur de la propriété ||| string $property_value	count=1
function_name	valeur d'un attribut par ||| attribute ns	count=1
arg_pair	colonne données dans le ||| mixed $param	count=1
function_name	cas de succès ou ||| cubrid	count=1
arg_pair	dans un autre ||| string $alias	count=1
function_name	retourne ||| get terms	count=1
function_name	le statut d'un ||| status	count=1
function_name	initialiser le phar quand ||| map phar	count=1
arg_pair	le fichier filename dans ||| string $filename bool $use_include_path	count=1
namespace	référence forte ||| weakref	count=1
function_name	méthodes négociées ||| ssh2 methods negotiated	count=1
function_name	dernier intervalle ||| last	count=1
function_name	les ||| multi	count=1
arg_pair	un certificat x509 ||| mixed $x509	count=1
function_name	forme en incluant les ||| form destroy	count=1
arg_pair	ajoute le ||| int $read_write	count=1
return	de la recherche ||| int	count=1
arg_pair	class ||| bool $autoload	count=1
function_name	tous ||| form destroy	count=2
function_name	encodés ||| all	count=1
return	un identifiant donné ||| domelement	count=1
arg_pair	chiffre les ||| array $pub_key_ids	count=1
return	méthode ne ||| string	count=1
namespace	la fin ||| recursivetreeiterator	count=1
function_name	le nombre maximal ||| max num	count=2
return	le nombre de classes ||| int	count=1
function_name	liens ajoutés ||| set border	count=2
function_name	l'espacement des lignes ||| text leading	count=1
function_name	ressource de connexion persistante ||| pconnect	count=1
function_name	l'identifiant du thread ||| thread id	count=3
arg_pair	document xml depuis ||| int $options	count=1
arg_pair	memcached::set() hormis ||| int $expiration	count=1
function_name	pixels de l'image ||| image pixels	count=1
function_name	lit toutes les valeurs ||| ldap get values	count=2
function_name	ou ||| set	count=1
function_name	confort pour émettre ||| header	count=1
function_name	paramètre facet.date.end ||| facet date end	count=1
function_name	file d'attente s'interrompt ||| poll	count=1
function_name	lance une alerte ||| warning callback	count=1
function_name	le nom long d'un ||| long name	count=1
function_name	retourne la propriété de ||| get	count=1
function_name	de facon numérique ||| array values	count=1
return	des caractères ||| int	count=1
function_name	image et ||| image	count=3
function_name	paramètre ||| param	count=1
function_name	un fichier ||| mailparse uudecode all	count=1
function_name	et extrait dans ||| mailparse uudecode all	count=1
function_name	courant ||| setproctitle	count=1
function_name	du serveur racine ||| root device	count=1
function_name	utilisées par la forme ||| form	count=1
arg_pair	position x y ||| int $x int $y	count=1
function_name	d'instance xml donnée ||| string	count=1
arg_pair	table table_name sous ||| resource $connection string $table_name	count=1
arg_pair	memcached::getmulti() mais la variable ||| int $flags	count=1
function_name	elle prend plus de ||| eio	count=1
function_name	variables var ||| array push	count=1
function_name	un ||| file	count=1
function_name	fonction crée une nouvelle ||| create attribute ns	count=1
arg_pair	contenu d'un élément ||| string $attr_name	count=1
rest	change [function_2] ||| [function_2] [return_1]	count=1
arg_pair	paramètre length ||| int $length	count=1
namespace	une ou ||| function	count=1
arg_pair	contenu dans un ||| resource $connection int $oid	count=1
function_name	pagination ldap ||| ldap	count=1
function_name	suivante dans ||| nextimage	count=1
function_name	avaient été ||| form destroy	count=1
return	méthode ||| array	count=1
arg_pair	sur ||| resource $psdoc float $llx	count=1
function_name	mémoire maximale ||| peak usage	count=2
function_name	la fonction ||| get element by	count=1
function_name	passe ||| password	count=1
function_name	instance de la classe ||| object	count=1
namespace	été ajoutés à ||| function	count=1
namespace	pour toutes ||| xmldiff\base	count=1
function	lie [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
arg_pair	le type d'éléments à ||| string $elementset	count=1
function_name	les clés étrangères ||| foreign keys	count=1
function_name	caractères passée en ||| escape	count=1
function_name	compare chaque image avec ||| compare	count=1
arg_pair	à une valeur fournie ||| float $value	count=1
function_name	antislashs ||| db2 escape string	count=2
function_name	pour terminer le processus ||| pcntl	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] principal [arg_pair_2]	count=1
function_name	de configuration include_path ||| include	count=1
function_name	associé au champ spécifié ||| mysql field flags	count=1
return	de ||| sdo_das_xml_document	count=2
namespace	lot d'objets résultants ||| mongocommandcursor	count=1
function_name	de [function_name_2] ||| [function_name_1] [function_name_2]	count=19
arg_pair	passés sont ||| int $minute	count=1
function_name	du fichier fourni ||| mailparse uudecode	count=1
function_name	de ||| set default stub	count=2
arg_pair	qui permettra d'accéder à ||| int $key int $memsize	count=1
function_name	est [function_name] ||| stream is [function_name]	count=2
function_name	la liste des bases ||| list dbs	count=1
return	d'une chaîne de caractères ||| string	count=2
function_name	liste tous ||| mcrypt list	count=1
function_name	fonction libère les ressources ||| newt form	count=1
function_name	[function_name_1] préparée ||| [function_name_2] [function_name_1]	count=1
function_name	utilisée ||| set metadata	count=2
namespace	effectue une ||| soapserver	count=1
function_name	contrôle ||| gupnp control point new	count=2
function_name	champs ||| fields	count=9
function_name	retourne ||| zip	count=1
function_name	clob fourni ||| fbsql clob	count=1
namespace	un nouveau mutex ||| mutex	count=1
function_name	de ce gestionnaire curl ||| curl	count=1
function_name	statistiques sur ||| statistics	count=1
arg_pair	fonction fournie par l'utilisateur ||| int $num_output callable $user_function	count=1
function_name	différence ||| diff	count=6
function_name	types de colonnes ||| types	count=1
arg_pair	est utilisée pour insérer ||| string $attr_name int $index	count=1
arg_pair	les paramètres passés sont ||| int $hour	count=1
function_name	l'échelle les entrées dans ||| fann scale	count=1
function_name	mois month de ||| in month	count=1
function	[function_name_1] result_identifier jusqu'à ||| [arg_pair_2] [function_name_1]	count=4
return	fonction ||| domelement	count=2
function_name	haystack allant de ||| strstr	count=1
function_name	à ingres_query() ||| ingres num	count=1
function	exécute une [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] pagination taille ||| [function_name_2] [function_name_1]	count=6
function_name	définit ||| xml set start	count=1
function_name	de recherche ||| search	count=2
function_name	libère ||| destroy	count=1
namespace	transparence de l'image ||| haruimage	count=1
arg_pair	la table table_name qui ||| resource $connection string $table_name	count=1
function_name	effectue alors ||| idiv	count=1
return	tant que ||| bool	count=1
function_name	ftp et le ||| ftp	count=1
function_name	[function_name_1] [function_name_2] l'algorithme et ||| function resource [function_name_2] [function_name_1] string $algorithm string $algorithm_directory	count=1
function_name	première contient les ||| construct	count=1
function_name	d'objets résultants ||| batch	count=1
function_name	de la base de ||| set	count=1
arg_pair	réseau complet ||| string $configuration_file	count=1
namespace	le ||| eventbuffer	count=1
function_name	et logique ||| gmp and	count=1
arg_pair	établir l'environnement pour une ||| string $userid	count=1
arg_pair	occurrence de ||| string $haystack mixed $needle	count=1
function_name	utilisée pour définir les ||| set module	count=1
function_name	contient le ||| construct	count=1
return	la chaîne à ||| string	count=1
function_name	le processus ||| pcntl wait	count=1
function_name	interne ||| inner	count=1
arg_pair	[arg_pair_1] bcc ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	les modules à ||| set module	count=1
namespace	le cache fichiers ou ||| function	count=1
function_name	sur ||| form	count=1
return	algorithme de ||| void	count=1
function_name	marqueur ||| bind array by name	count=2
return	si vous avez demandé ||| bool	count=1
function_name	mysql ||| mysql	count=11
function_name	est obsolète ||| call	count=1
return	fois) ||| void	count=1
function_name	première ligne de la ||| first	count=1
arg_pair	statue un lien ||| string $path	count=1
function_name	place des ||| db2 escape string	count=1
function_name	retourne le dernier ||| db2 last insert id	count=1
return	lit le ||| int	count=2
function_name	modification ||| ctime	count=1
namespace	splsubject depuis lequel l'observateur ||| splobserver	count=1
arg_pair	les paramètres passés sont ||| int $second int $month	count=1
function_name	court d'un champs ||| short	count=1
function_name	le premier ||| ldap first	count=1
function_name	les en-têtes d'entrée ||| input headers	count=2
function_name	version ||| version	count=14
arg_pair	texte text en ||| string $text	count=2
function_name	[function_name_1] le contenu ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] termes de ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] ou ||| [function_name_1] [function_name_2]	count=3
function_name	récupère l'itérateur [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	instance glo ||| glo	count=2
function_name	renomme ||| eio rename	count=1
arg_pair	calendrier calendar ||| int $calendar	count=2
function_name	court d'une ||| short	count=1
arg_pair	valeurs du tableau array1 ||| array $array1 array $array2	count=1
function_name	dernière fonction [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	défaut ||| directory	count=2
function	[function_name_1] la base ||| [function_name_1] mysqlnd_connection $connection [arg_pair_2]	count=1
function_name	méthode est utilisée pour ||| set resource	count=1
arg_pair	de str ||| string $str	count=1
arg_pair	passés sont ||| int $second	count=1
function_name	ajoutés à la ||| newt form destroy	count=1
function_name	les liens ajoutés ||| border	count=2
function_name	calcule le sinus ||| sin	count=1
function_name	les informations disponibles ||| meta data	count=1
function_name	méthode de compression utilisée ||| zip entry compressionmethod	count=1
function_name	dictionnaire représenté par ||| closedict	count=1
function_name	chaîne de caractères d'instance ||| load	count=1
arg_pair	local ||| string $local_file	count=1
arg_pair	coefficient div et l'excentrage ||| float $div	count=1
function_name	[function_name_1] commence ||| [function_name_2] [function_name_1]	count=6
function_name	et attend [function_name] réponses depuis ||| [function_name]	count=1
function_name	lit ||| read data	count=2
function_name	crée [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	terme ||| terms	count=1
function_name	msql et le ||| msql	count=1
function_name	de [function_name] de ||| set [function_name]	count=1
function_name	cubrid_error_code() [function_name] ||| [function_name] error	count=1
return	les classes ||| string	count=1
function_name	paramètre socket ||| socket	count=2
return	toutes les ||| bool	count=1
arg_pair	à un ||| string $country_code string $region_code	count=1
function_name	fichier ||| export to file	count=2
arg_pair	reconstituée et les différences ||| int $metric	count=1
arg_pair	une colonne dans ||| mixed $column	count=1
function_name	utilisée pour envoyer ||| set by	count=1
namespace	ignore la casse des ||| function	count=1
function_name	plugin [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	attribut dans un ||| attributes	count=1
namespace	avait été invoquée) ||| evwatcher	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] set [function_name_1]	count=15
function_name	le parent d'un ||| parents	count=1
arg_pair	texte ||| resource $psdoc	count=1
namespace	commandes de ||| imagick	count=1
return	est à ||| bool	count=1
return	utile ||| array	count=1
return	l'image spécifiée avec ||| bool	count=1
arg_pair	index ||| int $index int $flags	count=1
function_name	de labels utilisés pour ||| labels	count=1
function_name	analyse une liste ||| mailparse rfc822 parse	count=1
arg_pair	le tableau keys ||| array $keys	count=1
function_name	des champs ||| fields	count=1
arg_pair	de colonne représentant une ||| resource $stmt	count=1
return	soap ||| void	count=1
function_name	cette fonction ||| get element by	count=1
function_name	de [function_name_2] ||| [function_name_2] [function_name_1]	count=31
function_name	bcompiler stocke le bytecode ||| bcompiler	count=1
arg_pair	sont pas attrappées par ||| string $cb	count=1
function_name	de jointure de lignes ||| line join	count=1
function_name	à ||| load	count=1
function_name	récupère la [function_name_2] ||| [function_name_2] [function_name_1]	count=41
function_name	insère l'entrée ||| insert	count=1
function_name	[function_name_1] ip utilisée ||| [function_name_2] [function_name_1]	count=2
arg_pair	left_operand en utilisant modulus ||| string $modulus	count=1
function_name	identifiant permettant ainsi ||| set id	count=1
function_name	le code erreur ||| cubrid error code	count=2
function_name	identifiant permettant ||| set id	count=1
function_name	types or selon la ||| or	count=1
function	une [arg_pair_2] ||| [function_name_1] string $servername [arg_pair_2]	count=1
function_name	attribut avec l'espace ||| attribute ns	count=1
arg_pair	lors de [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
namespace	méthode est ||| mongoclient	count=1
function_name	en attente d'une notification ||| waiting	count=1
function_name	recursivetreeiterator::valid() retourne ||| end	count=1
function_name	maximal de lignes à ||| set rows	count=1
function_name	modifie la ||| set include path	count=1
function_name	variable d'environnement ||| getenv	count=1
arg_pair	les données fournies ||| int $dbase_identifier	count=1
function_name	est similaire à ||| mysql	count=1
namespace	classes de ||| xmldiff\base	count=1
namespace	tri qui place les ||| arrayobject	count=1
arg_pair	un ||| string $value	count=1
namespace	requête soap appelle ||| soapserver	count=1
function_name	résultats mnogosearch ||| udm get res	count=1
function_name	spécifiée avec un ||| preview images	count=1
return	envoyer ||| bool	count=1
arg_pair	requête sql query ||| string $query resource $link_identifier	count=1
function_name	cherche la ||| strrpos	count=1
arg_pair	de : soapfault::soapfault() ||| string $faultactor string $detail	count=1
function_name	imap si elle existe ||| imap	count=1
function_name	[function_name_1] refermer ||| [function_name_1] [function_name_2]	count=1
function_name	équivalent à memcached::prepend() ||| prepend by key	count=1
namespace	le ||| directory	count=2
function_name	fonction geoip_org_by_name() ||| geoip org	count=1
function_name	blob dont l'identifiant ||| ifx free blob	count=1
function_name	incluant ||| form destroy	count=2
function_name	un tableau [function_name_2] ||| [function_name_2] [function_name_1]	count=6
return	associé [return] protocole name ||| [return]	count=1
function_name	retourne le statut de ||| introspection get	count=1
return	dans un tableau ||| array	count=4
function_name	crée un ||| create	count=12
function_name	le jeu de ||| set encoding	count=1
function_name	améliore le contraste ||| contrast stretch	count=1
arg_pair	excepté ||| int $day int $year	count=1
return	ferme le pointeur de ||| void	count=1
function_name	la chaîne de ||| string	count=1
function_name	[function_name_1] fils de ||| [function_name_2] [function_name_1]	count=1
arg_pair	avec event_add() ||| resource $event mixed $fd	count=1
arg_pair	différents composants du ||| string $dn int $with_attrib	count=1
function_name	xml associé [function_name_2] ||| [function_name_1] error [function_name_2]	count=2
function_name	appelé lors de la ||| end	count=1
function_name	l'api ssl ||| ssl	count=1
arg_pair	table table_name qui ||| string $table_name	count=1
function_name	blob ||| blob	count=7
function_name	de fichier spécifié est ||| is	count=1
function_name	tailles ||| enc get supported key sizes	count=1
function_name	la forme ||| to string	count=1
function_name	connexion ||| get	count=1
function_name	récupère l'extension ||| get extension	count=4
function_name	libeio tant que les ||| eio	count=1
arg_pair	texte à la position ||| string $text	count=1
arg_pair	suivant la requête ||| array $info array $query	count=1
function_name	value du haut ||| dequeue	count=1
return	terminé son exécution ou ||| void	count=1
namespace	serveur le ||| mongocursor	count=1
function_name	équivalence de bits ||| eqv	count=1
function_name	[function_name_1] ou ||| [function_name_2] [function_name_1]	count=3
namespace	par l'option de contexte ||| function	count=4
arg_pair	les ||| array $config	count=1
function_name	la liste des ||| fbsql list	count=1
function_name	une courbe de bézier ||| bezier	count=1
function_name	durée ||| set	count=1
arg_pair	à la fonction mysql_field_name() ||| resource $result int $field_offset	count=1
arg_pair	la requête ||| array $query	count=1
function_name	retourne ||| mcrypt enc get algorithms	count=1
namespace	dom ||| domdocument	count=1
arg_pair	condamnations svn pour un ||| int $revision_no	count=1
function_name	algorithme par bloc ||| block algorithm	count=1
function_name	afficher le logo ||| logo guid	count=2
function_name	plus de ||| set	count=1
namespace	seul le ||| directory	count=2
arg_pair	mémoire partagée ||| int $start	count=1
arg_pair	resolv.conf et y lit ||| int $flags	count=1
function_name	fonction d'activation pour la ||| fann set activation function	count=1
function_name	l'extension pour ||| extension	count=1
arg_pair	de ||| string $prefix	count=1
function_name	minimum ||| mssql min error	count=1
namespace	rpc ||| yar_concurrent_client	count=1
namespace	où ||| function	count=1
function_name	au maître à l'esclave ||| mysqlnd ms	count=1
function_name	à fbsql_fetch_array() à la ||| fbsql fetch	count=1
function_name	par le [function_name] ||| [function_name] get normalized query	count=2
function_name	du champ qui ||| pg field	count=1
function_name	contenant la [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	messages organisés par thread ||| imap thread	count=1
return	noeud courant est ||| bool	count=1
function_name	processus ||| pcntl	count=2
function_name	nombre d'erreurs ||| session pgsql	count=1
function_name	interfaces ||| interface	count=1
arg_pair	le contenu ||| mongodb $db	count=1
namespace	l'espacement entre ||| harupage	count=1
function_name	contient encore des noeuds ||| valid	count=3
return	[return] d'un seul ||| [return]	count=2
function_name	lignes affectées par la ||| affected rows	count=2
arg_pair	alphabétiques ||| string $pattern string $string	count=1
arg_pair	de la suppression ||| array $deleteoptions array $protocoloptions	count=1
function_name	diff binaire entre les ||| xdiff file diff binary	count=1
function_name	le champ spécifié par ||| mysql field seek	count=1
namespace	de la ||| gmagick	count=1
function_name	certificat pkcs#12 ||| openssl pkcs12	count=2
return	la forme de ||| string	count=1
arg_pair	fait que les paramètres ||| int $day int $year	count=1
function_name	contenu du fichier ||| get	count=1
function_name	nouveau filtre ||| filter	count=2
function_name	nombres décimaux ||| environment	count=1
function_name	un élément ||| element	count=1
arg_pair	une ||| string $key	count=5
return	définir ||| void	count=1
function_name	des valeurs correspondantes dans ||| into struct	count=1
arg_pair	prompt et retourne ||| string $prompt	count=1
function_name	fourni est la clé ||| key	count=1
namespace	le fait que ||| function	count=1
arg_pair	d'une série de ||| int $first_page	count=1
arg_pair	set ||| array $set array $siginfo	count=1
function_name	un nom ||| name	count=3
function_name	les ||| dbplus rzap	count=2
arg_pair	le fait ||| int $month	count=1
arg_pair	prompt ||| string $prompt callable $callback	count=1
namespace	toutes ||| xmldiff\base	count=1
function_name	la fonction est variadique ||| is variadic	count=1
function_name	synchronise la base ||| sync	count=1
arg_pair	au format png en ||| int $quality int $filters	count=1
function_name	la transaction [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	été invoquée) ||| evwatcher	count=1
function_name	file ||| max	count=1
function_name	pente [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	informations verbeuses sur ||| verbose	count=1
function_name	affiche ||| pdf show	count=1
function_name	collections : la première ||| construct	count=1
function_name	[function_name_1] la température ||| [function_name_1] sarprop [function_name_2]	count=1
function_name	centre [function_name] où ||| swirl [function_name]	count=1
namespace	les composants qui ||| function	count=2
function_name	invoque la fonction ||| invoke	count=1
arg_pair	message ||| int $message_type	count=1
function_name	preg_replace() mais ||| preg	count=1
function_name	retourne tous les ||| to	count=1
function_name	un nom ||| tag name	count=1
function_name	dernière commande mysql ||| mysql errno	count=2
function_name	clés de ||| by key	count=1
function_name	la méthode de ||| zip	count=1
namespace	javascript passé ||| v8js	count=1
function_name	si la fonction est ||| is	count=4
namespace	un objet syncreaderwriter ||| syncreaderwriter	count=3
function_name	les options associées ||| fbsql field flags	count=1
function_name	défini l'uri de base ||| uri	count=1
function_name	déplace toutes ||| add buffer	count=1
return	une propagation ||| resource	count=1
function_name	tri ||| add sort	count=1
function_name	récupère l'url complète ||| request url	count=1
function_name	image avec du ||| image	count=1
arg_pair	utilisé avec un ||| string $mode string $lib_dir	count=1
arg_pair	excepté ||| int $second int $month	count=1
return	d'objets résultants et ||| mongocommandcursor	count=1
return	est similaire à ||| domelement	count=1
function_name	en ||| path	count=1
function_name	l'adresse [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	élément à la fin ||| push	count=1
function_name	retourne un objet représentant ||| get	count=1
arg_pair	une ||| resource $pdfdoc string $name	count=1
function_name	à surveiller avec les ||| module	count=1
arg_pair	pluriel d'un ||| int $n	count=1
return	méthode ev::run() est entrée ||| int	count=1
namespace	l'instance pointée par ||| function	count=2
arg_pair	différences et sur ||| string $src	count=1
function_name	de configuration include_path pour ||| set include	count=1
arg_pair	de rappel callback ||| callable $callback	count=8
namespace	arrayobject ||| arrayobject	count=1
arg_pair	la ||| resource $psdoc	count=1
function_name	sont sur ||| newt form destroy	count=1
return	dans un fichier temporaire ||| array	count=1
arg_pair	chaîne de caractères vide ||| string $localname	count=1
return	un tableau contenant les ||| array	count=7
arg_pair	un espace de noms ||| string $namespaceuri string $qualifiedname	count=1
arg_pair	de la sequence donnée ||| resource $imap_stream string $sequence	count=1
arg_pair	mktime() excepté le fait ||| int $hour int $minute	count=1
function_name	précisé et libère les ||| free	count=1
function_name	associé à l'identifiant de ||| sybase	count=1
function_name	de compression ||| zip entry	count=1
function_name	fins [function_name] déboguage : ||| [function_name] echo	count=1
function_name	une nouvelle connexion ||| connect	count=1
function_name	de sortir via ||| got exit	count=2
function_name	de haystack ||| mb strrichr	count=1
function_name	fonction ||| id	count=2
return	représentant la raison pour ||| string	count=1
function_name	de l'itérateur [function_name] ||| [function_name]	count=2
function	blob [arg_pair_2] ||| [function_name_1] add [arg_pair_2]	count=1
function_name	des paramètres séparément de ||| pg query params	count=1
return	lors de ||| int	count=1
function_name	enregistrements ||| out	count=1
return	être appelée dans une ||| int	count=1
function_name	fichiers distant ||| ssh2 sftp stat	count=1
function_name	des informations ||| info read	count=1
function_name	nouvelle connexion [function_name_2] ||| function resource [function_name_2] [function_name_1]	count=1
arg_pair	les attributs ||| array $options	count=1
function_name	document xml depuis ||| save xml	count=1
namespace	se déplace sur ||| splpriorityqueue	count=1
function_name	d'une archive phar ||| is	count=1
function_name	la base de ||| dbase	count=1
function_name	bibliothèque ||| rrd	count=1
function_name	retourne le titre ||| cli get	count=1
arg_pair	analyse une ||| mysqlnd_connection $connection	count=1
arg_pair	occurrence de ||| string $haystack	count=7
namespace	tous ||| yar_concurrent_client	count=1
function_name	miniature de l'image ||| exif thumbnail	count=1
return	tous les appels ||| boolean	count=1
function_name	configuration include_path pour ||| path	count=1
arg_pair	clés keys du serveur ||| int $time	count=1
function_name	champs facet qui doit ||| set facet	count=1
function_name	identifiant ||| get	count=1
function_name	page sous la forme ||| page	count=1
arg_pair	du buffer buf ||| resource $socket string $buf	count=1
function_name	retourne la requête principale ||| get query	count=1
namespace	interroge chaque serveur memcache ||| memcached	count=1
arg_pair	un ||| int $mode	count=1
arg_pair	profile [arg_pair] use of ||| [arg_pair]	count=1
function_name	[function_name_1] est ||| [function_name_2] [function_name_1]	count=6
function	[function_name_1] à une ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	pour insérer un élément ||| string $attr_name int $index	count=1
return	seconde ||| mongodb	count=1
function_name	possibilité ||| oci cancel	count=2
return	ne doit ||| string	count=1
function_name	[function_name_1] d'erreur retourné ||| [function_name_2] [function_name_1]	count=1
arg_pair	patche une chaîne str ||| string $str string $patch	count=1
function_name	compare la variable associée ||| ucache cas	count=1
arg_pair	paramètre variable_name dans ce ||| string $variable_name	count=1
arg_pair	le fait que les ||| int $hour	count=1
arg_pair	modification d'une ||| int $type	count=1
function_name	d'écriture ||| writing	count=1
function_name	similaire à la ||| fbsql field type	count=1
function_name	remplace ||| replace record	count=2
function_name	verrou ||| cubrid lock read	count=2
function_name	configure la couleur de ||| color	count=2
function_name	d'erreur [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	plus ||| function	count=1
function_name	maximal ||| mlt max	count=2
function_name	retourne [function_name_2] ||| [function_name_1] long [function_name_2]	count=1
function_name	grands objets binaires de ||| lob read	count=1
function_name	réinitialise ||| fann reset	count=1
namespace	le ||| gearmantask	count=2
namespace	similaire à pclose() ||| function	count=1
function_name	analyseur ||| parser	count=1
namespace	objet . ||| arrayiterator	count=1
arg_pair	jpeg dans le ||| int $height	count=1
arg_pair	domaine courant pour ||| string $msgid1	count=1
function_name	concatène la matrice de ||| concat	count=1
function_name	informations de débogage ||| debug info	count=3
function_name	file ||| eio set max poll time	count=2
return	utilisé pour ||| void	count=1
function_name	configuration actuelle de session.cache_expire ||| session cache expire	count=1
return	les paramètres de l'objet ||| string	count=1
return	données sur ||| mixed	count=1
function_name	valeur d'un attribut ||| attribute ns	count=1
return	raison pour ||| string	count=2
function_name	l'identifiant de connexion spécifié ||| mysql create db	count=1
function_name	afficher [function_name_2] ||| [function_name_1] debug [function_name_2]	count=2
namespace	prend plus ||| function	count=1
function_name	une ligne sur l'image ||| line	count=1
function_name	méthode affiche ||| display	count=1
function_name	construit un ||| construct	count=5
function_name	fichier compressé ||| gzclose	count=1
function_name	de données d'entrainement ||| train	count=2
function_name	sauvegarde l'image attachée dans ||| save picture	count=1
function_name	d'instructions exécutables ||| processing instruction	count=1
function_name	sémaphore associé au champ ||| field	count=1
function_name	avec la méthode oauthprovider::callconsumerhandler() ||| consumer handler	count=1
function_name	[function_name_1] oracle ||| function resource [function_name_2] new [function_name_1]	count=1
function_name	la base de données ||| dbase numfields	count=1
function_name	copie de ||| copy	count=1
function_name	retourne des informations sur ||| get	count=1
namespace	couleur ||| gmagickpixel	count=1
arg_pair	les ||| resource $errdat	count=1
function_name	cette ||| get element	count=1
function_name	éteint la temporisation ||| ob end flush	count=1
function_name	les entrées de la ||| yp cat	count=1
namespace	de configuration include_path pour ||| function	count=1
arg_pair	d'extraits de ||| string $fragmenter string $field_override	count=1
function_name	du texte à ||| text	count=1
return	à 4 ||| bool	count=1
arg_pair	permettra d'accéder à ||| int $key int $memsize	count=1
function_name	définit la fréquence ||| set mlt min term frequency	count=1
namespace	fichiers temporaires [namespace] ||| [namespace]	count=1
function_name	à travers ||| weights	count=1
function_name	[function_name_1] traduction ||| [function_name_1] [function_name_2]	count=1
arg_pair	pluriel d'un message ||| int $n	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] algo block [function_name_2]	count=2
function_name	phar::startbuffering() peut fournir un ||| start buffering	count=1
function_name	est utilisé pour changer ||| set tag	count=1
arg_pair	les donner à ann ||| array $input_vector	count=1
function_name	la méthode oauthprovider::timestampnoncehandler() ||| nonce	count=1
function_name	nombre d'erreurs ||| pgsql	count=1
function_name	[function_name_1] lié à ||| [function_name_2] [function_name_1]	count=6
function	allant [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	assigne ||| event buffer priority set	count=1
return	donné ||| int	count=3
function_name	l'extension pour la constante ||| type to extension	count=1
namespace	alphanumériques dans le ||| arrayobject	count=1
function_name	la file ||| max poll time	count=1
function_name	[function_name_1] de traduction ||| [function_name_2] [function_name_1]	count=1
arg_pair	dans un seul fragment ||| string $field_override	count=1
function_name	[function_name_1] d'instructions exécutables ||| [function_name_2] [function_name_1]	count=6
function_name	ligne ||| line len	count=2
return	le nombre de paramètres ||| int	count=1
return	première fois) ||| void	count=1
return	curseur est ||| bool	count=1
function_name	d'activation dans ||| fann set activation	count=1
function_name	être utilisée ||| module	count=1
function_name	pour stocker des données ||| metadata	count=1
function_name	un nouveau contexte ||| context	count=1
arg_pair	chaîne address tel ||| string $address	count=1
function_name	la première entrée du ||| ldap first entry	count=1
function_name	retourne un objet ||| get	count=1
function_name	d'autres fonctions pspell ||| pspell new	count=1
function_name	ignore la casse des ||| eregi	count=1
function_name	une base interbase et ||| ibase	count=1
function_name	cache realpath ||| realpath cache size	count=1
function_name	défini la fonction d'activation ||| activation	count=3
function_name	visualisation ||| view	count=1
function_name	fait ||| close	count=1
namespace	une seule tâche ||| gearmanclient	count=1
function_name	month ||| days in month	count=2
function_name	s'y ||| mailparse	count=1
function_name	supprime ||| dbplus	count=1
return	délai sur le serveur ||| mongocursor	count=1
function_name	retourne la taille associée ||| get size	count=1
function_name	le phar quand il ||| map phar	count=1
function_name	qui sont sur des ||| newt form destroy	count=1
arg_pair	envoie une ||| string $query	count=2
return	du script en ||| string	count=1
return	le code du ||| string	count=1
arg_pair	du mode à ||| string $mode_directory	count=1
function_name	von einer mime kopfzeile ||| mime	count=1
namespace	chaînes alphanumériques ||| arrayobject	count=1
function_name	la réponse xml ||| response	count=1
function_name	d'instructions exécutables [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	memcached::append() ||| append	count=1
function_name	scan ||| yaz scan	count=3
arg_pair	fichier ||| string $filename int $flags	count=1
return	lit le contenu ||| resource	count=1
function_name	position courante ||| ps show	count=1
function_name	un élément avec un ||| get element by	count=1
function_name	l'endroit ||| set error	count=1
function_name	connexions à de multiples ||| udm alloc	count=1
function_name	un verrou ||| lock	count=1
function_name	méthode anime ||| animate images	count=1
arg_pair	un hyperlien à ||| float $urx	count=2
function_name	[function_name_1] des ||| [function_name_2] [function_name_1]	count=9
arg_pair	fichier spécial ||| int $major	count=1
arg_pair	cette fonction est ||| string $pattern string $string	count=1
function_name	les ||| event	count=1
function_name	à ||| get element by	count=1
function_name	l'instance haruencoder de ||| encoder	count=1
arg_pair	contenu dans ||| resource $connection int $oid	count=1
function_name	en retour ||| handle	count=1
function_name	la valeur de l'attribut ||| attribute ns	count=1
arg_pair	fieldname téléchargé par le ||| resource $fdf_document string $fieldname	count=1
function_name	xbm ||| imagexbm	count=1
arg_pair	dessine le ||| int $y int $color	count=1
arg_pair	alpha degrés dans le ||| float $alpha	count=1
arg_pair	vérifier si ||| string $user	count=1
arg_pair	une chaîne php ||| string $type	count=1
function_name	des nombres décimaux ||| environment	count=1
function_name	[function_name_1] action ||| [function_name_2] [function_name_1]	count=1
arg_pair	dans subject ||| mixed $subject	count=1
function_name	à memcached::prepend() mais ||| prepend by key	count=1
arg_pair	son index field_number ||| resource $result int $field_number	count=1
function_name	chromacité du point vert ||| set image green primary	count=1
arg_pair	cubrid et sauvegarde ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	libère la ||| free stmt	count=1
return	les noms de ||| array	count=1
return	des ||| array	count=6
return	caractères à ||| string	count=1
function_name	minimale du ||| cache min	count=1
function_name	ligne depuis le début ||| read line	count=1
function_name	[function_name_1] récupéré ||| [function_name_2] [function_name_1]	count=8
function_name	retourne la première paire ||| first	count=1
function_name	les ||| eio event	count=1
function	analyse le [arg_pair_2] ||| [function_name_1] resolv conf [arg_pair_2]	count=2
function_name	mktime() excepté ||| gmmktime	count=1
namespace	par la forme et ||| function	count=1
function_name	pour stocker les itérateurs ||| array iterator	count=1
function_name	être utilisée ||| set	count=2
return	[return] qui ||| [return]	count=1
function_name	liste ||| list	count=4
function_name	une trace pour ||| trace log	count=1
namespace	à la fin de ||| eventbuffer	count=1
function_name	enfant ||| child	count=1
arg_pair	substr() basée ||| string $str int $start	count=1
function_name	similaire à ||| field	count=2
function_name	l'entier supérieur suivant ||| trader ceil	count=1
function_name	qui s'y trouvent ||| mailparse uudecode all	count=1
arg_pair	contrairement à strcmp() ||| string $str1	count=1
function_name	récupère l'instance haruencoder ||| get encoder	count=2
function_name	file ||| eio set max	count=1
namespace	par le gestionnaire de ||| function	count=1
return	un verrou acquis ||| bool	count=1
arg_pair	à une source de ||| string $password	count=1
function_name	trace une ligne ||| line	count=1
namespace	sur le ||| mongocursor	count=1
function_name	retourne ||| offset get	count=2
function	de statut [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	[function_name_1] clonable ||| [function_name_1] [function_name_2]	count=1
arg_pair	la gamme des couleurs ||| float $black_point float $white_point	count=1
function_name	synchronise ||| sync	count=1
function_name	d'activation pour le neurone ||| fann set activation function	count=1
function_name	lignes affectées ||| affected rows	count=1
function_name	la réponse [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	met à jour la ||| update	count=1
function_name	dernière opération [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	le pointeur de ||| closedir	count=1
function_name	vide ||| empty	count=1
arg_pair	memcache::connect() avec ||| string $host	count=1
arg_pair	avec la ||| resource $image int $x	count=1
namespace	utilisée sur ||| function	count=1
arg_pair	avec le même nom ||| resource $connection	count=1
function	allant [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	selon un ||| validate	count=1
function_name	messages ||| imap	count=2
function_name	bits ||| chmod	count=1
arg_pair	xml depuis ||| string $filename	count=1
function_name	sommaire de ||| fetch overview	count=1
function_name	si ||| time	count=1
arg_pair	un document xml depuis ||| int $options	count=1
function_name	avec ||| get	count=2
arg_pair	fichier filename ||| string $filename bool $use_include_path	count=1
return	la corrélation entre ||| void	count=1
arg_pair	de résultats ||| resource $result	count=1
arg_pair	la fonction fann_read_train_from_file() ||| resource $data string $file_name	count=1
function_name	l'extension qui définit ||| extension	count=1
function_name	est similaire à la ||| element by	count=1
arg_pair	de la séquence sequence ||| resource $imap_stream string $sequence	count=1
function_name	include_path pour la ||| include	count=1
return	sortie normalement ||| int	count=1
function_name	protège les caractères qui ||| escape	count=1
function_name	fichier spécial ||| posix	count=1
function_name	fonction d'activation pour ||| set activation function	count=3
return	partie entière et le ||| array	count=1
function_name	de l'image qui ||| image	count=2
function_name	remplit [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	fin de l'itération lorsque ||| end iteration	count=1
function_name	[function_name_1] ldap pour ||| [function_name_2] [function_name_1]	count=6
function_name	un traitement ||| preview images	count=1
arg_pair	src_x [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	secondes ||| max poll	count=1
function_name	par ||| set	count=1
arg_pair	une ||| string $domain	count=1
arg_pair	établir ||| string $userid	count=1
function_name	en ||| db2	count=1
function_name	avec la connexion fournie ||| database	count=1
return	depuis le ||| string	count=2
namespace	casse des ||| function	count=1
arg_pair	l'environnement pour la connexion ||| string $passwd	count=1
function_name	[function_name_1] température ||| [function_name_2] [function_name_1]	count=1
return	un identifiant ||| resource	count=1
function_name	test sur un ||| test data	count=1
function_name	libère de la mémoire ||| free result	count=1
arg_pair	méthode factorielle ||| int $size	count=1
arg_pair	valeur courante de la ||| resource $stmt	count=1
function_name	la session ||| dict is in session	count=1
function_name	oauthprovider::callconsumerhandler() ||| consumer handler	count=2
namespace	opération d'écriture dans ||| mongowritebatch	count=1
function_name	nombre de champs ||| mysqli num fields	count=3
function_name	brutes de [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	une nouvelle entrée à ||| int $key string $value	count=1
function_name	le nom [function_name_2] ||| [function_name_2] [function_name_1] int $token	count=6
namespace	de sortie ||| function	count=1
function_name	retourne la méthode de ||| get coding	count=1
namespace	les ressources mémoires ||| function	count=1
function_name	elle ||| time	count=1
return	casse ||| int	count=1
arg_pair	paramètres passés ||| int $day	count=1
function_name	formatage d'une ligne ||| pdf info textline	count=1
return	été ajoutés ||| void	count=1
function_name	un dossier dans la ||| mkdir	count=1
function	ou [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	utile lors ||| urlencode	count=1
function_name	champ spécifié ||| field flags	count=1
function_name	que file_get_contents() retourne le ||| file get contents	count=1
function_name	brutes de la réponse ||| get raw response	count=1
arg_pair	une colonne données ||| mixed $column mixed $param	count=1
function_name	modifie le numéro de ||| set	count=1
function_name	fonction getimagesize() excepté ||| getimagesizefromstring	count=1
function_name	lit la ||| get	count=2
arg_pair	structure ||| int $num_data int $num_input	count=1
arg_pair	de caractères ||| gmagickdraw $draw string $text	count=1
function_name	à la fin ||| add buffer	count=1
return	sur ||| string	count=2
function_name	[function_name_1] [function_name_2] de l'image présente dans ||| [function_name_2] [function_name_1]	count=2
arg_pair	le paramètre filename sous ||| string $filename	count=1
function_name	annule la transaction ||| rollback	count=1
arg_pair	buffer buf via le ||| resource $socket string $buf	count=1
function_name	une définition de police ||| font	count=1
function_name	certificat x509 ||| openssl x509	count=1
function_name	mime kopfzeile ||| mime	count=1
function_name	trace une ligne sur ||| line	count=1
function_name	paramètre patch et ||| file patch	count=1
function_name	[function_name_1] [function_name_2] algorithm ||| [function_name_2] [function_name_1]	count=1
function_name	du cache [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	à différents niveaux ||| preview images	count=1
function_name	à la ||| get element	count=1
function_name	avec un identifiant ||| id	count=1
arg_pair	en référence numérique ||| bool $is_hex	count=1
namespace	vérifie ||| splfixedarray	count=1
function_name	récupérer les données blob/clob ||| lob	count=1
arg_pair	valeur fournie qui doit ||| float $value	count=1
function_name	sur ||| newt form	count=1
namespace	nouvel attribut hyperwave ||| hw_api_object	count=1
function_name	retourne [function_name_1] [function_name_2] valeur d'un token php ||| [function_name_2] [function_name_1]	count=1
function_name	pour tous les neurones ||| fann set	count=2
function_name	base64 ||| base64	count=1
function_name	la prochaine ligne ||| fetch object	count=1
function_name	requête z39.50 scan request ||| yaz scan	count=1
function_name	lignes ||| dbplus	count=1
function_name	caractères brutes des ||| raw	count=1
function_name	[function_name_1] depuis le ||| string [function_name_2] [function_name_1]	count=3
namespace	récupère la date de ||| gmagick	count=1
namespace	de ||| gmagickpixel	count=1
arg_pair	remplacer le domaine courant ||| string $msgid1	count=1
namespace	le nombre ||| ev	count=2
arg_pair	xml depuis la ||| string $filename	count=1
arg_pair	à l'aide de deux ||| mongodb $db	count=1
arg_pair	variables var .. ||| array $array	count=1
function_name	assigne ||| buffer base set	count=1
function_name	de ||| buffer set	count=1
function_name	[function_name_1] l'intervalle pour ||| [function_name_1] image channel [function_name_2]	count=1
function_name	depuis le cache apc ||| apc	count=1
arg_pair	de l'élément par value ||| int $value	count=1
return	par le serveur de ||| string	count=1
function_name	arguments d'une fonction sous ||| args	count=1
arg_pair	php event_handler ||| callable $event_handler string $event_name1	count=1
namespace	spécifié ||| domnamednodemap	count=1
return	raison pour laquelle la ||| string	count=2
function_name	xml depuis la ||| save xml	count=1
namespace	dernier sqlstate ou null ||| function	count=1
arg_pair	un index d'une palette ||| int $index	count=1
arg_pair	dans ||| int $storage	count=1
return	ressources prises ||| void	count=1
function_name	transforme ||| transform	count=2
function_name	d'activation dans la ||| activation	count=1
arg_pair	en combinant plusieurs images ||| imagickdraw $draw string $tile_geometry	count=1
namespace	cette ||| mongoclient	count=1
arg_pair	de la chaîne fournie ||| string $str string $encoding	count=1
function_name	gestionnaire à appeler ||| handler	count=2
arg_pair	de couleur color dans ||| int $color	count=1
arg_pair	fonction cubrid_connect() [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	ou jpeg dans le ||| int $imagetype	count=1
function_name	page pour ||| pdi page	count=1
function_name	réseau neuronal depuis ||| fann create	count=1
function_name	l'analyseur xml ||| xml	count=2
arg_pair	termine la surveillance d'une ||| resource $fam_monitor	count=1
arg_pair	vérifier si l'accès ||| bool $nodns	count=1
function_name	[function_name_1] d'équilibrage de ||| [function_name_2] [function_name_1]	count=1
function_name	termine la souscription ||| unsubscribe	count=1
namespace	fichier spécifié par ||| function	count=1
function_name	la couleur ||| color as string	count=1
function_name	socket socket ||| socket	count=3
function_name	ajouter les données de ||| append	count=1
function_name	l'arc de remous autour ||| swirlimage	count=1
namespace	de la ||| recursivetreeiterator	count=1
function_name	libère un descripteur ||| oci free	count=1
return	dans ||| array	count=1
function_name	retourne le statut de ||| status	count=1
arg_pair	image aux coordonnées spécifiées ||| int $font	count=1
function_name	en ||| newt form	count=1
namespace	similaire à ||| function	count=3
function_name	transforme une image ||| transform	count=1
function_name	dns associées à ||| dns	count=1
namespace	[namespace] a ||| [namespace]	count=1
function_name	un filtre d'un flux ||| stream filter	count=1
namespace	retourne le ||| gearmanjob	count=1
namespace	remplacée par ||| function	count=1
return	constructeur ||| string	count=1
function_name	données ||| send	count=1
function_name	récupère l'élément courant ||| current	count=2
function_name	la couleur spécifiée ||| color value	count=1
arg_pair	différences ||| string $src	count=1
arg_pair	spécifie un rappel ||| string $function_name	count=1
function	test [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	ne peuvent pas ||| set	count=1
function_name	champ ||| fbsql field	count=2
function_name	dans un fichier ||| set metadata	count=1
function_name	labels utilisés pour entraîner ||| labels	count=1
return	détermine ||| bool	count=1
function_name	schéma relaxng ||| relax ngschema	count=1
arg_pair	la fonction mktime() excepté ||| int $minute	count=1
return	retourne la dernière ||| int	count=1
return	à la ||| void	count=6
arg_pair	le paramètre eol_style ||| int $start int $eol_style	count=1
function_name	défini la fonction d'activation ||| activation function output	count=1
arg_pair	strcmp() elle ||| string $str2	count=1
return	qui [return] ||| [return]	count=1
function	fonction d'activation [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
rest	toutes les [function_2] ||| [return_1] get [function_2]	count=1
arg_pair	dans un document ||| string $index array $attributes	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] client [function_name_2]	count=10
function_name	et extrait dans un ||| uudecode all	count=1
return	serveur le curseur ||| mongocursor	count=1
function_name	maximale d'une ||| max	count=2
namespace	bit ou 128 bit ||| function	count=1
namespace	un attribut dans un ||| sphinxclient	count=1
arg_pair	à un ||| string $region_code	count=1
function_name	le logarithme naturel pour ||| ln	count=1
namespace	position ||| recursivetreeiterator	count=1
arg_pair	le chemin path ||| int $offset	count=1
function_name	survenue sur le socket ||| last socket error	count=1
function_name	gris pour toutes les ||| ps setgray	count=1
function_name	nombre de colonnes ||| ifx num fields	count=1
function_name	déboguage php ||| debug backtrace	count=1
function_name	un marqueur oracle ||| oci bind array by name	count=1
function_name	protocole mysql utilisé par ||| proto	count=1
function_name	est supportée par la ||| is supported	count=1
function	[function_name_1] gearmanclient::setstatuscallback() ||| [function_name_1] [arg_pair_2]	count=1
function_name	le dictionnaire représenté par ||| closedict	count=1
function_name	base sqlite identifiée ||| sqlite close	count=1
function_name	prochaine image dans la ||| next image	count=1
function_name	un ||| pdf makespotcolor	count=1
function_name	détruire ||| shmop	count=1
function_name	fait qu'elle fonctionne ||| close	count=1
function	définit les mots de [function_name_1] [arg_pair_2] le ||| [function_name_1] [arg_pair_2]	count=1
function_name	ajoute le ||| dict add	count=1
return	en une chaîne ||| string	count=1
function_name	identique à ||| eregi	count=1
function_name	extrêmes pour [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	xml depuis un ||| xml	count=1
function_name	un document [function_name_2] ||| [function_name_2] open pdi [function_name_1]	count=1
function_name	de sortie ||| output	count=3
arg_pair	représentant une ||| resource $stmt	count=2
function_name	fait que file_get_contents() retourne ||| get contents	count=1
function_name	par la forme ||| destroy	count=1
arg_pair	caractères à l'archive tar/zip ||| string $contents	count=1
namespace	l'image sur ||| imagick	count=1
function_name	d'activation candidate [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	paramètre de facette ||| facet	count=1
function_name	page sous ||| image page	count=1
namespace	la [namespace] de données ||| [namespace]	count=1
function_name	statut ||| status	count=14
return	le code ||| string	count=1
function_name	colonnes ||| numfields	count=1
arg_pair	qui permettra d'accéder ||| int $key int $memsize	count=1
arg_pair	et lui associe un ||| int $cols	count=1
namespace	et ||| mongogridfs	count=1
function_name	jeu de réplication ||| hosts	count=1
arg_pair	à un index ||| resource $image int $index	count=1
function_name	un verrou ||| getlock	count=1
arg_pair	principal ||| string $principal	count=2
return	le fichier ||| void	count=1
function_name	fonction est similaire ||| get	count=1
namespace	la proriété ||| reflectionproperty	count=1
arg_pair	position offset ||| int $offset	count=3
function_name	boîte aux lettres ||| imap	count=1
function_name	miniature ||| thumbnail	count=1
arg_pair	retourne ||| int $offset int $count	count=1
function_name	utilisée ||| set	count=2
arg_pair	la surveillance d'une ||| resource $fam_monitor	count=1
arg_pair	cubrid_connect() ||| bool $new_link	count=1
function_name	l' ||| buffer	count=1
function_name	définit la ||| set mlt min doc	count=1
function_name	lit le bytecode ||| bcompiler write	count=1
function_name	une requête soap ||| handle	count=1
namespace	l'écriture de tous les ||| splfileobject	count=1
function_name	l'identifiant de la ||| row id	count=1
arg_pair	se comporte comme ||| string $username	count=2
function_name	tailles ||| key sizes	count=3
return	de fois où la ||| int	count=2
arg_pair	avec la [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	sybase ||| sybase unbuffered	count=1
function_name	représentant le statut ||| status	count=1
return	différences ||| string	count=1
arg_pair	fonction fann_read_train_from_file() ||| resource $data string $file_name	count=1
function_name	[function_name_1] les connexions ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] préfixe ||| [function_name_2] [function_name_1]	count=1
function_name	traitement ||| preview images	count=2
function_name	9 miniatures de ||| images	count=1
function_name	jeu ||| db2 columns	count=1
return	être utilisé pour tracer ||| void	count=1
arg_pair	saturation et ||| float $brightness float $saturation	count=1
function_name	retourne ||| tidy get error	count=1
function_name	passe à la prochaine ||| next	count=1
function_name	tailles de ||| enc get supported key sizes	count=1
namespace	données retourne ||| mongocursor	count=1
function_name	trouve la colonne ||| field	count=1
function_name	[function_name_1] depuis le ||| [function_name_2] [function_name_1]	count=3
return	et ||| string	count=4
function_name	de frames d'un swfvideostream ||| num frames	count=1
function_name	convertir une archive non ||| convert to	count=1
function_name	la version du ||| info	count=1
namespace	la ||| samconnection	count=1
function_name	et la retourne ||| get	count=1
function_name	à surveiller avec les ||| set	count=1
arg_pair	précédemment suspendu avec fam_suspend_monitor() ||| resource $fam resource $fam_monitor	count=1
arg_pair	php ou une fonction ||| string $name	count=1
function_name	recode la chaîne string ||| recode	count=1
function_name	bibliothèque ucd snmp ||| snmp set quick print	count=1
function_name	données postgresql et sauvegarde ||| pg	count=1
function_name	pour les événements spécifiés ||| ibase set event	count=1
function_name	la limite supérieure dans ||| get terms include upper bound	count=1
arg_pair	séquence d'octets str ||| string $str	count=1
function_name	réception d'une notification ||| proxy add notify	count=1
function_name	fonction pcntl_sigwaitinfo() ||| pcntl sigwaitinfo	count=1
function_name	du script en cours ||| include path	count=1
rest	[return_1] [function_2] ||| [return_1] get [function_2]	count=14
function_name	caractères spéciaux ||| escape string	count=1
function_name	composants qui ||| form destroy	count=2
function_name	propriétés statiques ||| static properties	count=2
function_name	typiquement parcourt un ||| batch size	count=1
function_name	fraction [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	de gris [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	pclose() ||| int	count=1
arg_pair	rouge vert ||| int $r	count=1
function_name	yaml de ||| yaml emit	count=2
function_name	donnée par ||| yaz	count=1
function_name	de statut spécifié grâce ||| status	count=1
return	recherche en ||| bool	count=1
function_name	cette méthode ne doit ||| construct	count=1
function_name	du texte ||| text	count=8
arg_pair	excepté le fait ||| int $month	count=1
arg_pair	la fonction snmp2_get() est ||| string $community	count=1
function_name	est utilisée pour fermer ||| close	count=1
namespace	spécifiées par le ||| function	count=1
function_name	[function_name_1] l'élément racine ||| [function_name_2] [function_name_1]	count=8
function_name	processus père que ||| pcntl fork	count=2
arg_pair	la séquence d'octets str ||| string $str	count=1
return	d'un des ||| int	count=1
function_name	réponse [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	[function_name_1] un ||| [function_name_1] [function_name_2]	count=5
function_name	d'un attribut ||| attribute ns	count=1
arg_pair	les octets nuls ||| int $length	count=1
function_name	l'encodage mime d'une ||| preferred mime	count=1
function_name	redimensionne ||| resize	count=1
function_name	classe personnalisée qui sera ||| class	count=1
arg_pair	du domaine domain retourné ||| string $codeset	count=1
function_name	fonction est similaire à ||| by id	count=1
namespace	remplacées par ||| function	count=2
namespace	ignore la casse ||| function	count=1
arg_pair	pour l'uid uid ||| resource $imap_stream int $uid	count=1
function_name	à placer devant ||| prefix	count=1
arg_pair	modifie les ||| resource $fd array $options	count=1
function_name	d'époques de stagnation ||| stagnation epochs	count=2
function_name	retourne tous ||| to	count=1
function_name	un ||| create from	count=1
function_name	tampon fourni ||| add	count=1
function_name	ldap [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	le fdf importé ||| fdf	count=1
arg_pair	la ressource filehandle ||| resource $filehandle	count=1
function_name	coloriser [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	champs ||| dbase	count=1
function_name	fonction openssl_get_cert_locations() retourne ||| openssl get cert locations	count=1
function_name	à ||| construct	count=1
function	[function_name_1] représentation dom ||| [function_name_1] [arg_pair_2]	count=2
function_name	ligne retournée par ||| mysql fetch	count=1
function_name	d'un objet snmp ||| snmp2 get	count=1
namespace	libeio tant que les ||| function	count=1
function_name	les données du premier ||| first	count=1
function_name	paramètres de résultats mnogosearch ||| udm get	count=1
function_name	une ou [function_name] de l'agent ||| remove [function_name]	count=1
arg_pair	un mot existe ||| string $word	count=1
function_name	[function_name_1] les drapeaux ||| [function_name_2] [function_name_1]	count=1
function_name	bbcode_create() ||| bbcode destroy	count=2
function_name	taille de ||| strwidth	count=1
function_name	place ||| escape	count=1
namespace	temporaire ||| function	count=1
namespace	un objet ||| ktaglib_mpeg_file	count=1
function_name	include_path pour la durée ||| path	count=1
function_name	les ticks ||| ticks	count=1
arg_pair	les données ||| string $data	count=1
function_name	retour du réseau ||| fann create	count=1
function_name	la hauteur ||| height	count=1
return	à la position ||| void	count=1
function_name	de données frontbase ||| fbsql	count=1
function_name	vérifie si le champ ||| field exists	count=1
namespace	fichier temporaire tous ||| function	count=1
function_name	extrait et décode ||| extract part file	count=1
arg_pair	[arg_pair_1] examine la ||| [arg_pair_1] [arg_pair_2] string $extracerts string $content	count=1
arg_pair	cubrid_set_add() est utilisée ||| string $set_element	count=1
arg_pair	partagée ||| int $shmid	count=1
function_name	fichier mesurée en octets ||| fseek	count=1
arg_pair	la priorité ||| int $priority	count=1
arg_pair	au format ascii pem ||| array $configargs	count=1
function	syntaxe du [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	pour changer ||| set	count=1
function_name	ultérieure avec pg_execute() ||| pg	count=1
function_name	a terminé son exécution ||| set	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] result [arg_pair_2]	count=4
namespace	plusieurs attributs qui ||| function	count=1
function	[function_name_1] d'un jeu ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	attribut ||| array $values	count=1
function_name	champ spécifié par ||| field seek	count=1
function_name	dernier identifiant ||| last	count=1
function_name	noms ||| start namespace	count=1
function_name	fourni ||| buffer	count=1
function_name	sur les caractères alphabétiques ||| eregi	count=1
function_name	tant que gestionnaire ||| event handler	count=1
function_name	calcule le sinus hyperbolique ||| sinh	count=1
function_name	la fonction sqlsrv_prepare() ||| sqlsrv	count=1
function_name	[function_name_1] [function_name_2] avec un objet imagick ||| imagick array [function_name_1] [function_name_2]	count=1
function	liens ajoutés [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
namespace	séquence ||| gmagick	count=1
arg_pair	memcached::set() hormis ||| mixed $value int $expiration	count=1
arg_pair	de données ||| resource $connection string $data	count=1
namespace	tar cette méthode ||| phardata	count=1
function	[function_name_1] texte ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	grand degré de contrôle ||| array $pipes string $cwd	count=1
return	remplace ||| bool	count=1
arg_pair	depuis la représentation ||| string $filename int $options	count=1
function_name	xa ||| mysqlnd ms xa	count=1
function_name	donné ||| by	count=1
function_name	fréquence ||| mlt min term frequency	count=3
function_name	l'échelle les sorties dans ||| scale	count=1
return	méthode ne doit pas ||| string	count=1
function_name	et le serveur postgresql ||| pg	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=3872
return	les chaînes ||| void	count=1
arg_pair	php event_handler en ||| callable $event_handler	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pattern [arg_pair_2]	count=1
arg_pair	le flag spécifié ||| int $options	count=1
return	un tableau identique ||| array	count=1
function_name	le type d'algorithme à ||| method	count=1
return	qui avaient ||| void	count=1
function_name	fonctions de ||| event buffer set	count=1
arg_pair	est au format champ= ||| resource $connection string $table_name	count=1
function_name	fonction closedir() seul le ||| close	count=1
namespace	représentation dom ||| domdocument	count=1
function_name	en ||| newt	count=1
function_name	canal [function_name_2] ||| [function_name_2] [function_name_1]	count=10
return	est un ||| bool	count=1
function_name	incluant les composants qui ||| destroy	count=1
arg_pair	la casse ||| string $pattern string $string	count=1
function_name	l'erreur est survenue) depuis ||| facility	count=1
function_name	d'événements pour les événements ||| set event	count=1
return	file d'attente ||| bool	count=1
return	si elle correspond lui ||| bool	count=1
function_name	données du fichier ||| uudecode	count=1
function_name	de noms selon ||| lookup namespace	count=2
return	toutes les lignes ||| int	count=1
function_name	similaire à ||| mysql field	count=1
return	deux ||| mongodb	count=1
function_name	fichier ||| openssl csr export to file	count=1
namespace	être utilisée que ||| pharfileinfo	count=1
function_name	données dbase spécifiée ||| dbase	count=1
arg_pair	fonction snmp2_get() ||| string $community	count=1
arg_pair	de remplacer le domaine ||| string $msgid1	count=1
function_name	retourne [function_name] de l'expression ||| get [function_name]	count=1
namespace	opération d'écriture dans un ||| mongowritebatch	count=1
function_name	à la fonction ||| element	count=1
function_name	solr placera le ||| echo handler	count=1
function_name	seule [function_name] les modèles ||| get nr [function_name]	count=1
function_name	liste de noms ||| list	count=1
namespace	dans le stockage ||| splobjectstorage	count=1
function_name	de lecture seule ||| chmod	count=1
function_name	de la compression ||| compression	count=1
function_name	du fichier rrd ||| rrd	count=1
function_name	ingres_query() dans ||| ingres	count=1
function_name	nom d'hôte dns recherche ||| host	count=1
function_name	rappel ||| callback	count=5
function_name	fermer ||| close	count=2
arg_pair	basé sur ||| string $diff	count=2
function_name	un jeu de ||| db2 procedure columns	count=1
function_name	[function_name_1] serveur informix ||| [function_name_2] [function_name_1]	count=4
rest	insère une [function_2] ||| [return_1] [function_2]	count=2
return	pour passer à travers ||| string	count=1
arg_pair	filename sous ||| string $filename string $mode	count=1
arg_pair	mélange la couleur de ||| mixed $colorize mixed $opacity	count=1
function_name	l'événement [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	libère les ||| newt	count=1
function_name	la limite inférieure dans ||| include lower bound	count=1
function_name	deux collections : ||| construct	count=1
function_name	du script en cours ||| path	count=1
function_name	retourne des ||| get	count=2
return	jeu de résultats ||| sqlite3result	count=1
arg_pair	ajoute un message dans ||| resource $compcode resource $reason	count=1
function_name	mémoire ||| usage	count=1
namespace	un document ||| sphinxclient	count=1
function_name	la ||| max poll time	count=2
arg_pair	cette fonction url-encode la ||| resource $ch string $str	count=1
function_name	un serveur ldap ||| ldap	count=1
function_name	minimale de ||| min	count=2
arg_pair	attribut dans un ||| array $attributes	count=1
arg_pair	structure vide ||| int $num_data int $num_input	count=1
namespace	un fichier qui ||| pharfileinfo	count=1
arg_pair	peut être utilisé avec ||| resource $radius_handle	count=1
arg_pair	ingres_fetch_array() avec une ||| int $result_type	count=1
arg_pair	et windows compris ||| resource $handle int $operation	count=1
function_name	diriger la clé key ||| by key	count=2
function_name	l'échelle du ||| pdf scale	count=1
arg_pair	casse des ||| string $pattern	count=1
function_name	la valeur de ||| set include path	count=1
arg_pair	la seconde contient ||| mongodb $db	count=1
function_name	s'y trouvent ||| mailparse	count=1
arg_pair	listant les tables ||| string $table_name	count=1
function_name	prend ||| max poll time	count=2
function_name	fuseau horaire correspondant à ||| time zone	count=1
function_name	un filtre ||| filter	count=2
function_name	include_path pour la ||| set include	count=1
function_name	[function_name_1] coloriser ||| [function_name_2] [function_name_1]	count=3
namespace	a des messages ou ||| function	count=1
arg_pair	base de données database_name ||| string $database_name	count=1
function_name	de l'image spécifiée ||| images	count=1
function_name	de sqlstate retournée par ||| stmt error	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $stmt [arg_pair_2]	count=3
function_name	combine une ||| combine	count=1
namespace	place des antislashs ||| function	count=1
function_name	ssh2 ||| ssh2 fetch	count=1
namespace	paramètres de ||| solrparams	count=1
function_name	dictionnaire spécifié ||| crack	count=1
return	en conservant ||| void	count=1
function_name	définit le timestamp ||| set timestamp	count=3
function_name	profil [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	rappel timestampnoncehandler ||| timestamp nonce	count=1
arg_pair	une valeur ||| float $value	count=1
function_name	les caractères ||| eregi	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] activation steepness [function_name_2]	count=2
function	[function_name_1] une ||| [function_name_1] env [arg_pair_2]	count=1
function_name	le plugin de ||| mysqlnd	count=1
function_name	ligne du jeu de ||| db2 fetch	count=2
function_name	maxdb_multi_query() ||| maxdb more results	count=2
arg_pair	la première contient les ||| mongodb $db	count=1
return	en ajustant les ||| bool	count=1
function_name	placer un verrou de ||| lock	count=1
arg_pair	sur une date donnée ||| string $date	count=1
function_name	compte ||| iterator count	count=1
function_name	libère ||| free result	count=8
arg_pair	signature ||| string $plaintext	count=1
function_name	défini l'endroit ||| set	count=1
function_name	boucle libeio tant ||| eio event	count=1
function_name	[function_name_1] preg_replace() ||| [function_name_2] [function_name_1]	count=6
function	[function_name_1] base ||| [function_name_1] mysqlnd_connection $connection [arg_pair_2]	count=1
arg_pair	parties de ||| string $blob_id	count=1
namespace	sqlite3 ||| sqlite3	count=1
function_name	la sortie standard ||| output	count=1
function_name	et ||| merge	count=1
return	jeu de caractères à ||| string	count=1
arg_pair	factorielle crée une nouvelle ||| int $size	count=1
arg_pair	en ||| int $juliandaycount bool $hebrew	count=1
arg_pair	le résultat de ||| resource $result	count=1
return	les noms de colonnes ||| array	count=1
arg_pair	par =?iso-8859-1?... est ||| string $field_name string $field_value	count=1
return	vérifie les informations ||| object	count=1
function_name	de tous les ||| set	count=1
function_name	dans un ||| set metadata	count=1
function_name	mnogosearch ||| udm get	count=2
function_name	la file ||| msg remove queue	count=1
arg_pair	pour vérifier si l'accès ||| bool $nodns	count=1
function_name	[function_name_1] de couleur ||| [function_name_2] [function_name_1]	count=6
namespace	d'autres termes ||| ev	count=1
function_name	cette fonction ||| destroy	count=1
function_name	canal ||| image channel	count=1
return	l'objet ||| yaf_controller_abstract	count=1
return	array comme ||| int	count=1
function_name	de fréquence d'apparition ||| min doc frequency	count=2
arg_pair	depuis un fichier ||| string $filename	count=2
function_name	maximale de clé ||| algo key	count=3
function_name	[function_name_1] base interbase ||| [function_name_2] [function_name_1]	count=4
function_name	facteur quickprop mu ||| set quickprop mu	count=1
return	sauvegarde dans ||| int	count=1
arg_pair	le ||| resource $parser callable $handler	count=1
namespace	caractères ||| sdo_das_xml	count=1
namespace	méthode ev::run() est ||| ev	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] namespace [function_name_2]	count=2
arg_pair	de la valeur value ||| mixed $value int $options	count=1
function_name	retourne le dernier identifiant ||| last insert	count=1
function_name	flux à ||| stream	count=1
return	décharge ||| bool	count=1
namespace	l'événement ||| event	count=1
function_name	analyse la ||| rfc822 parse	count=1
function_name	peut être ||| module	count=1
arg_pair	la sequence ||| string $sequence	count=1
function_name	toutes les ||| dbplus	count=1
arg_pair	l'appel direct à cette ||| string $arguments	count=1
arg_pair	ignore la ||| string $pattern	count=1
function_name	gamma à l'image ||| imagegammacorrect	count=1
function_name	met à l'échelle les ||| scale input	count=1
function_name	uri d'espace de noms ||| elements by	count=1
function_name	si elle prend plus ||| eio set max poll	count=1
function_name	crypte le contenu ||| encrypt	count=1
arg_pair	de la base ||| string $database	count=1
function_name	le système ||| eio fstatvfs	count=1
arg_pair	chaîne needle dans ||| string $needle	count=1
function_name	la fonction cubrid_error_msg() est ||| msg	count=1
function_name	préférence pour un dictionnaire ||| enchant broker	count=1
function_name	supprime [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	pour croitre la ||| increase factor	count=1
arg_pair	et ||| string $fontfile	count=1
function_name	la variable character_set de ||| client encoding	count=1
namespace	où l'exception a été ||| exception	count=1
function_name	survenue) depuis [function_name_2] ||| [function_name_2] [function_name_1]	count=10
return	entre les clé ||| void	count=1
function_name	la fonction cubrid_connect_with_url() est ||| with url	count=1
function	enregistrées [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	police ||| load font	count=2
function_name	de la syntaxe du ||| syntax	count=1
function_name	dessin des lignes ||| imagesetbrush	count=1
function_name	comme pourrait ||| unbuffered	count=1
function_name	crée une ||| string	count=1
function_name	et sur le document ||| merge	count=1
arg_pair	envoie une commande ||| resource $connection string $query	count=2
namespace	spécifiée par le ||| function	count=1
function_name	utilisée ||| zip entry	count=1
function_name	une demande radius consiste ||| radius	count=1
function_name	de peinture courante ||| rgbstroke	count=1
function_name	fonction sqlsrv_prepare() ou ||| sqlsrv	count=1
function_name	fin de l'itération ||| end iteration	count=1
function_name	antislashs ||| db2	count=1
namespace	l'archive phar actuelle ||| phar	count=1
function_name	du champ ||| field length	count=1
return	caractères ||| int	count=2
function_name	fonction crée ||| create comment	count=1
function_name	vérifie si ||| exists	count=1
namespace	point courant vers le ||| harupage	count=1
namespace	de tri qui ||| arrayobject	count=1
namespace	verrou acquis avec la ||| eventbuffer	count=1
namespace	retourné par la fonction ||| function	count=1
namespace	pour le dessin des ||| function	count=1
function_name	l'index de l'octet courant ||| current byte index	count=1
function_name	réception d'une notification ||| service proxy add notify	count=1
namespace	attributs qui ||| function	count=1
namespace	l'objet imagickpixel sous ||| imagickpixel	count=1
function_name	jeu de ||| db2	count=22
function_name	connexion spécifiée ||| sqlsrv	count=1
function_name	serveur racine ||| root	count=1
return	pour pouvoir passer en ||| bool	count=1
function_name	un ||| frame image	count=1
function_name	précharger ||| prefetch	count=1
function_name	un dictionnaire à utiliser ||| enchant broker set	count=1
arg_pair	sql pour l'activation ||| int $condition_type	count=1
function_name	ou désactive le termscomponent ||| terms	count=1
function_name	la chaîne à guillemets ||| imap qprint	count=1
return	[return] méthode ||| [return]	count=3
namespace	méthode est utile ||| mongoclient	count=1
return	incluant ||| void	count=1
arg_pair	partir d'une ressource fichier ||| string $filename	count=1
namespace	nombre de ||| function	count=1
function_name	cette fonction retourne ||| enc get	count=1
function_name	la recherche ||| eregi	count=1
arg_pair	envoyés par le serveur ||| string $url int $format	count=1
namespace	pour la première ||| recursivetreeiterator	count=1
function_name	effectue une recherche ||| imap search	count=1
function_name	décide si ||| mysqlnd qc	count=1
return	partir ||| sdo_das_xml_document	count=1
arg_pair	les ||| int $hour	count=1
function_name	d'attente contient encore des ||| valid	count=1
return	et envoie une ||| void	count=1
arg_pair	associatif assoc_array ||| int $options	count=1
function_name	[function_name_1] sortie ||| [function_name_1] num [function_name_2]	count=1
function_name	attribut avec ||| set attribute	count=1
arg_pair	fonction fbsql_field_name() ||| resource $result int $field_offset	count=1
function_name	sommaire de ||| overview	count=1
function_name	caractères passée en argument ||| escape string	count=1
namespace	le pointeur de ||| function	count=1
arg_pair	la fonction mktime() ||| int $month	count=1
arg_pair	courante du texte ||| string $text	count=1
return	assigné par ||| string	count=1
function_name	gestionnaires d'entités non déclarées ||| unparsed entity	count=1
function_name	plusieurs serveurs de travaux ||| servers	count=1
arg_pair	excepté le fait que ||| int $day	count=1
function_name	[function_name_1] le type ||| [function_name_1] byte [function_name_2]	count=1
function_name	actuelle de session.cache_expire ||| session cache expire	count=1
return	tienne [return] ||| [return]	count=4
function_name	ressources ||| newt	count=1
return	bloque si ||| bool	count=1
arg_pair	des parties ||| string $blob_id	count=1
arg_pair	et la retourne ||| string $class_name	count=1
arg_pair	dans le système de ||| int $mode	count=1
arg_pair	src_y [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
return	regexiterator::key() [return] ||| [return]	count=3
return	informations ||| object	count=3
namespace	une réponse en retour ||| soapserver	count=1
namespace	commentaire d'une [namespace] ||| [namespace]	count=1
function_name	de compression utilisée sur ||| zip entry	count=1
arg_pair	une ||| string $repos_url	count=1
return	cette ||| void	count=3
function_name	pour modifier ||| set	count=1
function_name	[function_name_1] les informations ||| [function_name_2] [function_name_1]	count=6
function	[function_name_1] [arg_pair_2] ||| [function_name_1] field [arg_pair_2]	count=2
namespace	appelé ||| recursivetreeiterator	count=1
function_name	la température sarprop ||| sarprop temperature	count=2
function	assigne [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	jeu ||| db2 procedure	count=1
function_name	définit [function_name_2] ||| [function_name_1] namespace [function_name_2]	count=2
function_name	restaure la base ||| restore	count=1
function_name	le contrôle de ||| control	count=1
function_name	données dba ouverts ||| dba	count=1
function_name	efface un ||| delete textflow	count=1
function_name	plusieurs options ||| options	count=3
function_name	un arbre de ||| load string	count=1
function_name	la ||| db2 escape	count=1
arg_pair	dans un ||| resource $connection int $oid	count=1
function_name	le socket ||| socket server	count=1
return	mémoire allouée en ||| bool	count=1
arg_pair	d'un entier ou ||| mixed $number int $base	count=1
function_name	l'échelle les données ||| scale	count=2
function_name	code erreur ||| cubrid error code	count=2
function_name	est ||| is supported	count=1
return	un tableau associatif à ||| array	count=1
function_name	base de données ||| numfields	count=1
return	collections : la première ||| mongodb	count=1
function_name	de la convolution 3x3 ||| imageconvolution	count=1
function_name	définit ||| proxy action set	count=1
function_name	crée un document xml ||| save xml	count=1
function_name	lieu d'être ||| user defined	count=1
function_name	diriger la clé key ||| get delayed by key	count=1
function	[function_name_1] un ||| [function_name_1] facet date other [arg_pair_2]	count=1
function_name	dernière requête ||| stmt error	count=1
function_name	dans le fichier ||| export to file	count=1
function_name	9 miniatures de ||| preview	count=1
function_name	la fonction pdostatement::columncount() ||| column count	count=1
arg_pair	de documents à ||| array $docs	count=1
arg_pair	nécessaire à la ||| string $connection_string string $character_set	count=1
function_name	du profile ||| getimageprofile	count=1
arg_pair	le ||| string $prefix	count=1
arg_pair	sur la [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	récupère un chemin ||| get	count=1
function_name	[function_name_1] message d'alerte ||| [function_name_1] [function_name_2]	count=2
function_name	arguments d'une fonction ||| args	count=1
arg_pair	en une et retourne ||| string $error	count=1
function_name	d'activation ||| activation function	count=4
namespace	passés ||| function	count=1
arg_pair	génère une signature d'en-tête ||| string $http_method string $url	count=1
function_name	[function_name_1] une ||| [function_name_2] [function_name_1]	count=3
function_name	cette fonction libère ||| newt	count=1
namespace	le document ||| xmldiff\file	count=1
arg_pair	les paramètres passés ||| int $second int $month	count=1
function_name	associé ||| pg result	count=1
arg_pair	de cartes de ||| int $channel	count=1
function_name	évalue le ||| eval	count=1
function_name	de haystack allant de ||| strstr	count=1
function_name	hash ||| mhash count	count=1
namespace	[namespace] une ||| [namespace]	count=1
arg_pair	une et retourne ||| string $new_data2 string $error	count=1
function_name	une demande radius ||| radius create	count=1
function_name	un fichier temporaire tous ||| uudecode all	count=1
function_name	lignes autour des liens ||| set border	count=1
namespace	entrée moins ||| ev	count=1
arg_pair	domaine ||| string $domain	count=3
function_name	l'intensité [function_name] chaque ||| threshold [function_name]	count=1
function_name	de ||| add buffer	count=2
namespace	spécifié par le descripteur ||| function	count=1
function_name	sauve dans le fichier ||| file	count=1
arg_pair	et empile les variables ||| mixed $value1	count=1
arg_pair	un ||| string $src	count=1
function_name	si elle ||| set	count=1
function_name	le champ spécifié par ||| field seek	count=1
function_name	toutes ||| dbplus rzap	count=2
function_name	à ||| shmop delete	count=2
arg_pair	listant les procédures d'enregistrement ||| string $procedure	count=1
arg_pair	lors de la recherche ||| string $pattern string $string	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] text [function_name_2]	count=4
function_name	définit une ||| ms set	count=1
arg_pair	une ||| string $iptcdata string $jpeg_file_name	count=1
function_name	une ||| bind value	count=1
function	rappel pour [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	défini l'époque minimale ||| set cascade min	count=1
function_name	remplace les textes qui ||| ereg replace callback	count=1
return	sur [return] objet ||| [return]	count=1
function_name	séparation lecture/écriture ||| user pick server	count=1
arg_pair	[arg_pair] index ||| [arg_pair]	count=3
function_name	d'archives ||| zip entry compressionmethod	count=2
arg_pair	dans un ||| string $alias	count=1
arg_pair	montage d'un périphérique externe ||| string $externalpath	count=1
function_name	du ||| mailparse	count=1
function_name	version courante ||| version	count=1
arg_pair	la valeur de ||| string $value	count=1
arg_pair	la seconde ||| string $prefix	count=1
function_name	retourne la quantité ||| get	count=2
function_name	du point vert ||| image green primary	count=1
namespace	en incluant les ||| function	count=1
function_name	strpos() en ||| mb strrpos	count=1
arg_pair	nombre de jours ||| int $day int $year	count=1
function_name	connecte le ||| closepath	count=1
function_name	la valeur d'un attribut ||| attribute ns	count=1
arg_pair	la table table_name spécifiées ||| string $table_name	count=1
arg_pair	symbolique filename par ||| string $filename	count=1
function_name	[function_name_1] est disponible ||| [function_name_1] device [function_name_2]	count=1
function_name	fichier au sein ||| is	count=1
return	pour toutes les ||| string	count=1
return	des antislashs devant les ||| string	count=1
arg_pair	array comme une pile ||| array $array	count=1
function_name	pagination ldap [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	précisé et libère les ||| event buffer free	count=1
function_name	des antislashs devant ||| db2 escape	count=1
return	si un ou ||| bool	count=1
function_name	à la ||| show	count=1
namespace	du curseur ||| mongocursor	count=1
function_name	[function_name_1] des champs ||| [function_name_1] highlight [function_name_2]	count=1
function_name	[function_name_1] termes ||| [function_name_1] query [function_name_2]	count=1
function_name	le dossier d'archives spécifié ||| entry compressionmethod	count=1
arg_pair	target avec le ||| string $target	count=1
arg_pair	modifie les attributs du ||| resource $fd array $options	count=1
function_name	[function_name_1] contrôle ||| [function_name_1] last [function_name_2]	count=1
function_name	distant ||| ssh2 sftp mkdir	count=2
arg_pair	passés ||| int $second	count=1
function_name	[function_name_1] d'un flux ||| [function_name_2] [function_name_1]	count=6
arg_pair	nombre prédéfini de cartes ||| string $threshold_map int $channel	count=1
namespace	travaux assigné par ||| gearmanjob	count=1
function_name	bytecode et initialise ||| bcompiler	count=1
arg_pair	suppression ||| array $protocoloptions	count=1
function_name	mois month de ||| cal days in month	count=1
return	utilisez db2_lob_read() pour passer ||| string	count=1
function_name	texte à la position ||| ps show	count=1
return	fichier spécial ou ||| bool	count=1
function_name	la différence ||| diff	count=3
arg_pair	la fonction ||| int $day int $year	count=1
arg_pair	plus grand degré de ||| string $cwd	count=1
function_name	vérifie si les ||| get	count=1
arg_pair	remplissage à un niveau ||| resource $p float $g	count=1
function_name	stocker des données personnalisées ||| set	count=1
arg_pair	la séquence sequence ||| string $sequence	count=1
function_name	retourne le fils ||| get children	count=2
arg_pair	la liste des filtres ||| string $attribute array $values	count=1
function_name	[function_name_1] affectées ||| [function_name_2] [function_name_1]	count=8
function_name	le dernier ||| last insert	count=1
function_name	est une ||| is	count=4
function_name	l'attribut dans ||| attribute	count=1
namespace	composants ||| function	count=2
function_name	classes de ||| construct	count=1
function_name	elle prend plus ||| set max poll time	count=1
function_name	fonction libère ||| destroy	count=1
function_name	place ||| place	count=1
function_name	uri d'espace de ||| elements by tag	count=1
function_name	utilisé pour ||| set	count=2
namespace	stocker des ||| pharfileinfo	count=1
namespace	le dictionnaire représenté par ||| function	count=1
function_name	la [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] décompressée d'une ||| [function_name_2] [function_name_1]	count=4
arg_pair	petit ||| resource $ann float $rprop_delta_min	count=1
arg_pair	courbe de ||| float $x3 float $y3	count=1
return	entre les clé et ||| void	count=1
function_name	classe personnalisée à ||| set info class	count=1
function_name	de retour du réseau ||| fann	count=1
function_name	des statistiques de serveurs ||| extended stats	count=1
function_name	si elle prend plus ||| eio set max	count=1
return	lit les ||| array	count=3
return	de configuration ||| string	count=1
function_name	la ||| get element	count=1
function_name	image représentant la fusion ||| image	count=1
function	sélectionne [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=12
namespace	au sein d'une ||| pharfileinfo	count=1
function_name	mis [function_name] générer par ||| get [function_name]	count=1
function_name	pour une position donnée ||| offset	count=1
function_name	soit ||| oci	count=1
function_name	un token d'accès ||| token	count=1
function_name	décompressée d'une entrée ||| unpacked	count=1
arg_pair	la chaîne ||| string $str	count=1
function_name	[function_name] logs d'une ||| get normalized query [function_name]	count=2
namespace	un traitement appliqué ||| imagick	count=1
function_name	informations sur la ||| stat	count=1
arg_pair	colonne particulière d'une ressource ||| int $column	count=1
arg_pair	retourne le fichier ||| string $filename int $use_include_path	count=1
arg_pair	par le shell ||| int $flags	count=1
function_name	un jeu de résultats ||| db2 procedure columns	count=1
function	ligne de [arg_pair_2] ||| [function_name_1] object resource $result [arg_pair_2]	count=1
function	efface [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
return	soap appelle ||| void	count=1
function_name	paramètre est [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	une trace ||| trace log	count=2
function_name	sur le dossier ||| zip	count=1
function_name	devant ||| db2 escape string	count=2
function_name	un document ||| attributes	count=1
function_name	ou ibase_pconnect() ||| drop	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] stream [function_name_2]	count=1
namespace	ont été remplacées par ||| function	count=1
function_name	[function_name_1] textes qui ||| [function_name_2] [function_name_1]	count=2
function_name	regroupements distincts ||| set group distinct	count=2
function_name	à la ||| ps	count=1
function_name	l'encodage utilisé par ||| encoding	count=1
arg_pair	listes d'élements à créer ||| int $size int $options	count=2
function_name	pour récupérer ||| cubrid	count=1
function_name	est similaire ||| get element	count=1
arg_pair	fin d'un élément ||| string $key	count=1
return	pour l'appelant ||| long	count=1
namespace	rewinddir() seul ||| directory	count=1
function_name	base64 ||| imap base64	count=2
function_name	événements de l'objet com ||| com event	count=1
function_name	préfixe [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	résultat de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	noms de ||| field names	count=1
namespace	l'objet sous la ||| solrparams	count=1
function_name	indexé par nom ||| both	count=1
function_name	[function_name_1] la refermer ||| [function_name_1] commit [function_name_2]	count=1
return	pour ||| string	count=16
function_name	compression ||| zip entry compressionmethod	count=2
function_name	vérifie si [function_name] ||| [function_name] is	count=2
arg_pair	recherche ||| string $string	count=1
return	le nombre maximal ||| int	count=2
namespace	avec une connexion ||| mongoclient	count=1
function_name	taille décompressée ||| entry filesize	count=1
arg_pair	le ||| int $color	count=1
arg_pair	gestionnaire multiple ||| resource $mh	count=1
function_name	la limite inférieure dans ||| terms include lower bound	count=1
function_name	de champs du ||| fields	count=1
namespace	processus courant ||| function	count=1
function_name	pour la séparation lecture/écriture ||| user pick server	count=1
function_name	instance ||| fetch object	count=2
function_name	fichiers encodés ||| mailparse uudecode	count=1
function_name	récupère le nom de ||| name	count=3
arg_pair	text à la ||| resource $p string $text	count=1
arg_pair	résultat dans ||| int $rownumber	count=1
function_name	ajoutés à la forme ||| newt form	count=1
function_name	place des antislashs ||| escape	count=1
namespace	ou un résultat ||| function	count=1
function_name	de rappel pour ||| callback	count=1
function_name	informations de version disponibles ||| version	count=1
function_name	au lieu d'être une ||| user defined	count=1
function_name	par le paramètre socket ||| socket	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] peak [function_name_2]	count=4
function_name	position ||| ps	count=1
function_name	à la fin ||| add	count=1
function_name	détruire un bloc de ||| shmop	count=1
return	sur l'exécution du ||| resource	count=1
namespace	tous les ||| splfileobject	count=1
arg_pair	dans ||| string $source int $flags	count=1
function_name	taille pour ||| size	count=1
return	à envoyer au ||| bool	count=1
function_name	[function_name_1] réponse ||| [function_name_2] [function_name_1]	count=6
arg_pair	une chaîne dans ||| string $content	count=1
arg_pair	font et ||| float $fontsize	count=1
function_name	documents supérieures ||| dead	count=1
function_name	des informations issus ||| curl multi info read	count=1
arg_pair	fichier filename dans une ||| bool $use_include_path	count=1
return	du tampon ou en ||| bool	count=1
function_name	configuration de ||| tidy config	count=1
arg_pair	le nom d'utilisateur username ||| resource $ftp_stream string $username	count=1
arg_pair	les ||| string $buffer	count=1
return	les ||| bool	count=5
namespace	chaîne de caractères ||| sdo_das_xml	count=1
function_name	déboguage ||| internal debug	count=2
function_name	s'il existe ||| key exists	count=1
return	demande un verrou ||| int	count=1
return	de compression utilisée ||| string	count=1
function_name	marqueur oracle ||| oci bind	count=1
function_name	code d'erreur ||| socket strerror	count=1
return	série ||| bool	count=1
arg_pair	la requête sql query ||| string $query	count=1
function_name	la taille compressée d'un ||| zip entry compressedsize	count=1
function_name	définit la ||| set mlt min term	count=1
function_name	tableau associatif ou indexé ||| fetch array	count=1
arg_pair	contenu ||| string $blockname int $contents	count=1
function_name	fonction est ||| element	count=1
function_name	d'un [function_name] ||| xml set [function_name] decl	count=1
arg_pair	dans la ||| string $source	count=1
function_name	du ||| mailparse uudecode all	count=2
arg_pair	sont pas attrappées par ||| string $cb string $arg	count=1
function_name	elle ||| poll time	count=2
namespace	d'archives spécifié ||| function	count=1
function_name	correction gamma [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	à la fonction imap_header() ||| imap rfc822	count=1
arg_pair	un document xml ||| string $src	count=1
arg_pair	un autre format ||| int $format	count=1
return	données retourne ||| bool	count=1
function_name	la première contient les ||| construct	count=1
function_name	les composants qui avaient ||| destroy	count=1
function_name	maximale d'une ||| set max	count=1
function_name	de postgresql associée ||| pg	count=1
function_name	analyse une liste d'adresses ||| mailparse rfc822 parse	count=1
function_name	ce service ||| gupnp service	count=1
return	une série ||| bool	count=1
function	[function_name_1] g ||| [function_name_1] [arg_pair_2]	count=4
namespace	tente de se reconnecter ||| mysqlnduhconnection	count=1
return	qualité d'une ||| gmagick	count=1
function_name	le gestionnaire d'entité externe ||| external entity ref handler	count=1
function_name	la dernière [function_name_2] ||| [function_name_2] [function_name_1]	count=22
arg_pair	de l'élément par value ||| string $key int $value	count=1
function_name	existante suivant si le ||| cat	count=1
function_name	la commande ftp list ||| ftp rawlist	count=1
namespace	classe définie par ||| reflectionclass	count=1
function_name	à la fonction rewinddir() ||| rewind	count=1
function_name	nombre de lignes ||| num rows	count=5
function_name	document [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	une chaîne nommée ||| string $pass	count=1
function	[function_name_1] par address ||| [function_name_1] [arg_pair_2]	count=1
function_name	retourne la méthode de ||| compressionmethod	count=1
function_name	nouveau pattern ||| pattern	count=1
function_name	où les ||| set error	count=1
function_name	en ||| newt form destroy	count=2
function_name	[function_name_1] coloriser ||| [function_name_1] [function_name_2]	count=3
function_name	file de ||| queue	count=2
function_name	[function_name_1] un nom ||| [function_name_1] [function_name_2]	count=1
function_name	selon le ||| validate source	count=1
function_name	ressources mémoires utilisées par ||| newt form	count=1
arg_pair	temporairement le ||| resource $fam resource $fam_monitor	count=1
function_name	[function_name_1] la version ||| [function_name_1] [function_name_2]	count=6
function_name	fonction ingres_query() ||| ingres fetch	count=1
function_name	résultats de la prochaine ||| cubrid next	count=1
arg_pair	du tableau array1 ||| array $array1 array $array2	count=1
function_name	l'extension pour ||| to extension	count=1
function_name	la largeur ||| stringwidth	count=1
function_name	stagnation [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	un nouveau gabarit ||| pdf begin template	count=1
function_name	été ajoutés à la ||| destroy	count=1
function_name	un fichier spécial ou ||| posix	count=1
namespace	composants qui ||| function	count=2
function_name	postgresql créée en ||| pg	count=1
function_name	nom de l'espace ||| space	count=1
namespace	recursivetreeiterator::valid() ||| recursivetreeiterator	count=1
return	id3v2 ||| ktaglib_id3v2_tag	count=1
namespace	mktime() excepté le ||| function	count=1
return	un verrou sur la ||| int	count=1
return	être partagé [return] plusieurs ||| [return]	count=1
function_name	tous ||| to string	count=2
arg_pair	espace de noms ||| string $namespaceuri string $qualifiedname	count=1
return	transaction en cours ||| bool	count=1
arg_pair	contient le contenu des ||| mongodb $db string $prefix	count=1
function	[function_name_1] sur ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	de needle ||| string $haystack string $needle	count=1
function_name	la fonction c localtime ||| localtime	count=1
function_name	récupère le nombre de ||| num	count=1
arg_pair	apparaître après un ||| string $field_override	count=1
return	l'aide de deux collections ||| mongodb	count=1
function_name	fonction est [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	memcached::append() mais la ||| append by key	count=1
function	l'attribut [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	à utiliser mapreduce ||| array $pipeline	count=1
function_name	les ressources mémoires ||| newt form	count=1
function_name	chaîne de ||| db2	count=1
function_name	de ligne ressemblent ||| ps setlinecap	count=1
arg_pair	sql pour l'activation de ||| mixed $condition	count=1
function_name	entier correspondant au type ||| type	count=1
function_name	dénominateur du taux de ||| denominator	count=1
namespace	méthode ev::run() est sortie ||| ev	count=1
function_name	fréquence [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] privée ||| [function_name_2] [function_name_1]	count=2
function_name	compile un ||| compile	count=1
namespace	de [namespace] ||| [namespace]	count=37
return	récupère les informations de ||| string	count=1
return	méthode ||| string	count=3
function	sélectionne la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=14
arg_pair	d'utilisateur username et le ||| string $username	count=1
namespace	mb par ||| mongocursor	count=1
function_name	instanciable ||| instantiable	count=1
function_name	et la ||| construct	count=1
arg_pair	fichier fieldname téléchargé par ||| string $fieldname	count=1
arg_pair	gestionnaire font ||| resource $pdfdoc int $font	count=1
arg_pair	fonction callback aux éléments ||| callable $callback	count=1
function_name	un élément ||| by id	count=1
function_name	un dossier dans ||| mkdir	count=1
arg_pair	paramètre filename sous la ||| string $filename string $mode	count=1
function_name	nom d'hôte ou ||| by name	count=1
function_name	le numérateur du taux ||| numerator	count=1
function_name	un itérateur ||| iterator	count=2
function_name	caractères passée en ||| db2	count=1
function_name	récupère le nom ||| get file name	count=2
function_name	retourne le ||| dbase	count=1
arg_pair	de montage d'un périphérique ||| string $externalpath	count=1
return	un fichier ||| bool	count=2
function_name	un ||| preview	count=2
function_name	[function_name_1] maximale d'une ||| [function_name_1] [function_name_2]	count=1
function_name	de version du ||| set version	count=2
return	les composants qui ||| void	count=2
function_name	être utilisé ||| debug	count=1
function_name	limite de l'anglet ||| miter	count=1
namespace	peut être utilisé ||| function	count=1
function_name	récupère le nombre de ||| fann get num	count=1
function_name	la couleur [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	le tag image ||| set picture	count=1
function_name	support ipv6) humainement lisible ||| inet pton	count=1
function_name	depuis le ||| read	count=1
function_name	être utilisée que ||| set	count=1
return	du jeu de caractères ||| string	count=1
function_name	valeur du paramètre facet.date.gap ||| facet date gap	count=1
arg_pair	cette méthode ||| string $function_name	count=1
function_name	attribut spécifique au vendeur ||| put vendor	count=1
function_name	compression ||| entry compressionmethod	count=2
return	termine ||| bool	count=1
arg_pair	du ||| int $julianday	count=1
function_name	elle prend plus ||| set	count=1
namespace	de données ||| tokyotyrant	count=1
function_name	[function_name_1] posix qui ||| [function_name_2] [function_name_1]	count=1
namespace	virtuel ou du ||| function	count=1
function_name	pour l'extension qui définit ||| extension	count=1
namespace	[namespace] log_reply ||| [namespace]	count=1
function_name	définit l'image ||| setimagescene	count=1
function_name	[function_name_1] timer à ||| [function_name_1] [function_name_2]	count=1
return	[return] valeur ||| [return]	count=1
function_name	des tests ||| array uintersect assoc	count=1
return	si un nom ||| bool	count=1
function_name	cette fonction ||| element	count=3
function_name	compile un script php ||| opcache compile file	count=1
arg_pair	rappel si ||| resource $proxy mixed $callback	count=1
function_name	avec les en-têtes ||| headers	count=1
function_name	personnalisées dans ||| set	count=1
function_name	qui décide ||| mysqlnd qc set is select	count=1
function_name	le ||| add	count=1
namespace	simplexmliterator a ||| simplexmliterator	count=1
function_name	des ||| string	count=1
namespace	tant que fonctions xslt ||| xsltprocessor	count=1
return	la configuration courant ||| void	count=1
arg_pair	fusionne un ||| bool $overwrite	count=1
function_name	alpha [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
arg_pair	condamnations svn pour un ||| string $repository_url	count=1
function_name	à ||| field type	count=4
function_name	[function_name_1] de couleurs ||| [function_name_1] [function_name_2]	count=3
arg_pair	le chemin path à ||| string $path int $offset	count=1
arg_pair	les structures de ||| int $textflow	count=1
function_name	nombre maximal de ||| max	count=1
arg_pair	à appeler à ||| mixed $arg	count=1
function_name	modèle 3d ||| 3ddata	count=1
arg_pair	couleur border ||| int $y int $border	count=1
function_name	élément avec ||| get element	count=1
function_name	les composants ||| destroy	count=2
function_name	contenant les extensions ||| extensions	count=1
rest	[return_1] en-têtes envoyés ||| [function_2] [return_1]	count=1
function_name	sauvegarde le résultat d'une ||| save	count=1
function_name	qui sont sur ||| form destroy	count=1
function_name	appelle ||| apply	count=1
function_name	compression ||| zip	count=1
function_name	s'interrompt si elle prend ||| eio set max poll time	count=1
arg_pair	est utilisée pour récupérer ||| string $table_name	count=1
function_name	liste pointée par son ||| setimageindex	count=1
return	tous les composants ||| void	count=1
return	un ||| string	count=8
function_name	paramètre ||| add buffer	count=2
namespace	est sortie normalement ||| ev	count=1
arg_pair	fichier local local_file ||| resource $ftp_stream string $local_file	count=1
return	bibliothèque ||| array	count=1
arg_pair	une ||| resource $p float $x1	count=1
arg_pair	yaf_route_simple récupère ||| string $controller_name	count=1
function_name	totalité de l'écran ||| imagegrabscreen	count=1
function	[function_name_1] name ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	la fonction cubrid_lob2_bind() est ||| string $bind_value_type	count=1
function_name	l'itération lorsque ||| end iteration	count=1
function_name	z39.50 scan ||| yaz scan	count=1
function_name	tables ||| tables	count=1
return	utilisée pour ||| void	count=1
function_name	[function_name_1] récupérer ||| [function_name_2] [function_name_1]	count=6
function_name	retourne le [function_name_2] ||| mysqli [function_name_1] [function_name_2]	count=2
namespace	une ou plusieurs ||| function	count=1
namespace	tous les ||| yar_concurrent_client	count=1
function_name	fonction d'activation ||| set activation	count=3
function_name	récupère le ||| get error	count=1
function_name	efface ||| svn delete	count=1
function_name	le md5 ||| md5 file	count=1
function_name	partir ||| load	count=1
function_name	base de données fbsql ||| fbsql	count=1
function_name	nombre d'erreurs et optionnellement ||| session pgsql	count=1
arg_pair	les autres fonctions eio_* ||| callable $execute	count=1
arg_pair	cartes de seuil de ||| string $threshold_map	count=1
function_name	de lignes ||| set rows	count=2
arg_pair	d'une exception oauthexception ||| string $oauthexception	count=1
function_name	les composants ||| form destroy	count=2
function_name	les ||| db2	count=1
function_name	une pile ||| array push	count=1
function_name	affiche toutes les lignes ||| all	count=1
arg_pair	copie des données ||| string $data	count=1
function_name	sur le prochain ||| next	count=2
function_name	un fichier ||| uudecode	count=1
return	ligne en ||| bool	count=1
function_name	[function_name_1] privée ||| [function_name_1] [function_name_2]	count=2
function_name	s'interrompt si ||| eio set max poll	count=1
function_name	être utilisé pour diriger ||| set	count=1
return	pour stocker des données ||| void	count=1
function	[function_name_1] deux variants ||| [arg_pair_2] [function_name_1]	count=3
function_name	associé au champ ||| field flags	count=1
namespace	de réalisation ||| gearmantask	count=2
function_name	et libère les ||| free	count=1
function_name	une correction gamma à ||| gamma	count=1
function_name	le parent d'un objet ||| parents	count=1
function_name	numéro de inode du ||| inode	count=1
rest	et d'autres [function_2] ||| [function_2] [return_1]	count=1
function_name	choisit la ||| setrgbcolor	count=1
function_name	utilisée sur le dossier ||| zip entry	count=1
function_name	multiplie les ||| gmp mul	count=1
function_name	ajoute une tâche ||| add task	count=2
return	le fait que les ||| int	count=1
function_name	réalisation de ||| task	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] resource $result int $index	count=2
function_name	est ||| element	count=1
function_name	qui décide ||| mysqlnd qc	count=1
arg_pair	le gestionnaire multiple s'il ||| resource $mh	count=1
arg_pair	l'objet sdo_das_xml_document vers ||| sdo_xmldocument $xdoc int $indent	count=1
arg_pair	[arg_pair_1] en une ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	d'un attribut par ||| attribute ns	count=1
function_name	boucle libeio tant que ||| event	count=1
function_name	verrou ||| lock	count=2
function_name	nombre maximal ||| max	count=1
arg_pair	une utilisation ultérieure ||| string $stringparam	count=1
function_name	du document utilisée pour ||| facet enum cache	count=1
function_name	entités html ||| html entity	count=1
arg_pair	log_cmd_delete lors [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	fréquence ||| term frequency	count=3
arg_pair	connexion dans le ||| int $to_neuron	count=1
arg_pair	ces données ||| resource $data	count=1
function_name	stoppe une base de ||| stop db	count=1
function_name	[function_name_1] les bases ||| [function_name_1] [function_name_2]	count=2
function_name	preg_replace() hormis le fait ||| preg replace callback	count=1
function_name	attribut de ||| attribute	count=1
function_name	défini la fonction d'activation ||| set activation function output	count=1
arg_pair	paramètre req_identifier ||| resource $req_identifier	count=1
function_name	fonction peut être utilisée ||| set module	count=1
function_name	données depuis un socket ||| stream socket	count=1
function_name	une nouvelle csrcertificate signing ||| new	count=1
namespace	page de l'objet imagick ||| imagick	count=1
function_name	valeur ||| include path	count=2
function_name	l'uri de base utilisé ||| uri	count=1
function_name	le nombre de lignes ||| mysql num rows	count=1
function_name	initialise un nouveau pattern ||| pdf begin pattern	count=1
function_name	statut ||| add task status	count=2
function_name	sans attendre le s ||| send query	count=1
arg_pair	est similaire à sybase_fetch_array() ||| mixed $object	count=1
namespace	bootstrap dans le dossier ||| yaf_application	count=1
function_name	d'attente s'interrompt si ||| set max poll time	count=1
function_name	fichier spécial ou ||| mknod	count=1
arg_pair	chemin fourni ||| int $length	count=1
function_name	les données blob/clob depuis ||| cubrid lob	count=1
arg_pair	la page cookie ... ||| int $pagesize	count=1
function_name	requête xpath ||| register xpath	count=1
namespace	l'événement est en ||| event	count=1
return	et détruit toutes les ||| void	count=1
function_name	[function_name_1] dernière erreur ||| [function_name_1] [function_name_2]	count=3
function_name	d'exécution de postgresql ||| pg	count=1
function_name	paramètres graphiques ||| pdf initgraphics	count=1
namespace	sur le ||| tokyotyrant	count=1
function_name	dans un fichier ||| set	count=1
function_name	méthode est ||| get	count=1
namespace	sur ||| mongocursor	count=1
function_name	le nombre de champs ||| num fields	count=2
function_name	présence d'événements ||| set max dispatch interval	count=1
function_name	d'attente s'interrompt si ||| set max	count=1
function_name	la ||| eio set max poll	count=1
namespace	par la forme ||| function	count=1
arg_pair	un préfixe utilisé pour ||| string $prefix string $field_override	count=1
function_name	retourne l'année d'un tag ||| get year	count=1
function_name	liste les [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	après un ||| mongocursor	count=1
function_name	le nom du champ ||| pg field name	count=1
function_name	les caractères spéciaux ||| escape string	count=2
function_name	courant du tampon de ||| ob	count=1
arg_pair	la transforme en noeud ||| domnode $node string $class_name	count=1
arg_pair	de dessin à un ||| resource $p	count=1
arg_pair	la chaîne address tel ||| string $address string $default_host	count=1
function_name	l'échelle ||| scale input	count=1
function_name	utilisateur ||| bin dump	count=2
function_name	par ||| supported	count=1
function_name	code erreur de la ||| error code	count=1
function_name	la création du blob ||| ibase blob	count=1
return	les mots-clés ||| array	count=1
function_name	sélectionne la base ||| select db	count=1
arg_pair	la fonction snmp2_get() est ||| string $host string $community	count=1
function	[function_name_1] les ||| [function_name_1] create string $pathname [arg_pair_2]	count=3
function_name	une uri d'espace de ||| elements	count=1
function_name	spécifié par ||| zip entry compressionmethod	count=1
arg_pair	local local_file ||| string $local_file	count=1
function_name	maximale d'un ||| max	count=1
return	au code de résultat ||| string	count=1
arg_pair	messages de la sequence ||| string $sequence	count=1
return	en une couleur ||| bool	count=3
function_name	algorithme ||| mcrypt	count=1
function	lie un tableau [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
return	un certain délai sur ||| mongocursor	count=1
arg_pair	depuis les données ||| string $optlist	count=1
return	tar [return] méthode ||| [return]	count=1
function_name	[function_name_1] les méta-données ||| [function_name_1] [function_name_2]	count=1
function_name	fonction ||| field type	count=4
arg_pair	[arg_pair_1] première occurrence ||| [arg_pair_2] int $offset [arg_pair_1]	count=1
namespace	exporte toute ||| soapserver	count=1
function_name	ligne du jeu ||| db2 fetch	count=4
arg_pair	notoirement lent ||| array $constants	count=1
function_name	connexion persistante vers ||| cubrid pconnect	count=1
function_name	iv vecteur d'initialisation) à ||| iv	count=1
function_name	de statut spécifié grâce ||| add task status	count=1
return	en haut à ||| bool	count=1
function_name	cette ||| element by	count=1
namespace	ressources qui ||| function	count=1
function_name	base de ||| numfields	count=1
function_name	diff binaire ||| xdiff file diff binary	count=1
function_name	gestionnaire curl donné ||| curl	count=1
arg_pair	fonction cubrid_bind() est ||| mixed $bind_value string $bind_value_type	count=1
namespace	demande un verrou ||| function	count=1
return	utilisée pour définir ||| void	count=1
namespace	la ||| directory	count=2
function	définition [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	fait que les paramètres ||| int $year	count=2
function_name	false pour ||| end	count=1
return	fichiers ainsi que ceux ||| void	count=1
return	s'y ||| array	count=1
function_name	portée de l'espace de ||| lookup	count=1
function_name	ressources ||| form destroy	count=2
arg_pair	tableau keys ||| array $keys	count=1
function_name	récupère la prochaine ligne ||| fetch	count=1
arg_pair	listant les ||| string $schema string $table_name	count=1
function_name	un élément avec ||| by	count=1
arg_pair	un plus grand degré ||| string $cwd	count=1
function_name	sans suivre ||| lstat	count=1
arg_pair	chaîne str après avoir ||| string $from	count=1
function_name	un nouveau filtre entier ||| filter range	count=1
namespace	[namespace] est ||| [namespace]	count=3
return	une occurrence de ||| mixed	count=1
return	d'objets ||| mongocommandcursor	count=1
function_name	le ||| dbase	count=1
function_name	le champ ||| oci field	count=1
function_name	et envoyées [function_name] ||| [function_name] mppe	count=1
namespace	$from[$n] est remplacée par ||| function	count=1
function_name	été ajoutés ||| newt form	count=1
function_name	sans attendre le s ||| send	count=1
function_name	les ||| newt form	count=3
function_name	nombre de colonnes ||| ifx num	count=1
return	lit la date ||| int	count=2
return	comme une pile ||| int	count=1
function_name	à la forme ||| form destroy	count=1
function_name	de champs colonnes de ||| numfields	count=1
arg_pair	dossier sur le système ||| resource $sftp string $dirname	count=1
arg_pair	l'image reconstituée et ||| int $metric	count=1
arg_pair	d'un ||| int $x	count=1
return	dossier ||| string	count=1
function_name	fonction vérifie si un ||| opcache is	count=1
arg_pair	d'un fichier faisant ||| int $pri	count=1
function_name	ligne d'une requête ||| oci fetch	count=1
function_name	les drapeaux d'une classe ||| flags	count=1
arg_pair	paramètres passés ||| int $day int $year	count=1
function_name	un fichier spécial ou ||| posix mknod	count=1
arg_pair	par l'objet gmagickpixel ou ||| gmagickpixel $color int $width	count=1
function_name	mode de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	la ligne ||| int $row	count=2
function_name	id3v1 qui pourra ||| id3v1	count=1
return	spécifiée ||| bool	count=1
function_name	avance ||| next	count=1
arg_pair	une ressource de fichier ||| int $flags	count=1
function_name	socket socket les ||| socket	count=1
arg_pair	dernière occurrence de needle ||| string $haystack string $needle	count=1
function_name	sera démarré lors du ||| ps add launchlink	count=1
arg_pair	ouvre ||| string $username	count=1
arg_pair	sauvegarde une ||| resource $image string $filename	count=1
function_name	cette fonction ||| get	count=1
function_name	vecteur d'initialisation ||| iv	count=1
function_name	couleur courante ||| gray	count=1
rest	[return_1] xml parser ||| [return_1] [function_2]	count=3
function_name	récupère le délai ||| get	count=1
function_name	logarithme base-10 ||| log10	count=1
function	active [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	l'étape [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	intervalles ||| elapsed time	count=2
function_name	prend plus ||| set	count=1
function_name	tri les champs peuvent ||| sort	count=1
function_name	qui sera appelé ||| handler	count=1
function_name	caractères brutes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	requête ||| stmt	count=2
return	les mots-clés de la ||| array	count=1
function_name	configure la couleur de ||| background color	count=2
namespace	la requête émise ||| solrresponse	count=1
function_name	transaction courante initiée par ||| roll back	count=1
return	en cours pointée ||| bool	count=1
arg_pair	fonction anonyme ||| string $args string $code	count=1
function_name	[function_name_1] l'extension sous ||| [function_name_2] [function_name_1]	count=8
function_name	dessine un point ||| point	count=1
arg_pair	fusionne ||| bool $overwrite	count=1
arg_pair	texte à la ||| string $text	count=1
function_name	retourne la valeur à ||| get	count=2
return	appelle les ||| void	count=1
function_name	retourne ||| mcrypt enc get	count=2
function_name	devant ||| escape	count=1
arg_pair	listant les ||| string $schema	count=4
function_name	gestionnaire d'événements pour les ||| ibase set event handler	count=1
function_name	guid binaire de ||| mssql guid	count=1
function_name	ou une séquence d'images ||| images	count=1
function_name	un token d'accès un ||| token	count=1
function_name	dernier message d'erreur de ||| error	count=1
function_name	date de modification du ||| ctime	count=1
arg_pair	fait que ||| int $hour	count=1
arg_pair	mktime() excepté le ||| int $hour	count=1
arg_pair	paramètre object_id ||| string $timeout	count=1
function_name	cette fonction est similaire ||| element by id	count=1
namespace	pour une ou ||| function	count=1
namespace	dans l'espace utilisateur au ||| reflectionfunctionabstract	count=1
function_name	de flux ||| stream wrapper	count=1
function_name	la réponse brute ||| get raw response	count=2
namespace	être comprise entre 0 ||| imagickpixel	count=1
function_name	jeu de [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	le nombre ||| dbase	count=1
arg_pair	fonction cubrid_lob2_bind() est utilisée ||| mixed $bind_value string $bind_value_type	count=1
function_name	zend ||| zend	count=1
function_name	identifiant donné ||| by id	count=1
return	méthode est obsolète ||| mixed	count=1
function_name	table courante de ||| table	count=1
function_name	paramètres ||| to string	count=2
arg_pair	[arg_pair_1] microsoft ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	un verrou de lecture ||| cubrid lock read	count=1
function_name	l'ajout ||| method	count=1
function_name	les clés ||| multi by key	count=1
function_name	un fichier paradox en ||| px	count=1
arg_pair	est utilisée pour établir ||| string $userid	count=1
namespace	paramètres passés ||| function	count=1
arg_pair	d'un entier ou d'une ||| mixed $number int $base	count=1
function_name	chaîne de ||| escape string	count=1
namespace	que ||| function	count=2
function	[function_name_1] chaîne address ||| [function_name_1] adrlist [arg_pair_2]	count=1
function_name	un ||| attributes	count=2
function_name	à l'élément précédent ||| prev	count=1
arg_pair	le prompt et retourne ||| string $prompt callable $callback	count=1
function_name	active ||| enable	count=1
namespace	à la fonction rewinddir() ||| directory	count=1
arg_pair	[arg_pair_1] avec ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	longueur du contenu ||| length	count=1
arg_pair	la ||| resource $image	count=1
function_name	de jacobi de a ||| gmp jacobi	count=1
return	[return] rétablissement des ||| [return]	count=3
arg_pair	certificat x509 [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	les fournisseurs [function_name_2] ||| [function_name_2] [function_name_1] describe	count=1
function_name	tailles de ||| supported key sizes	count=2
arg_pair	cubrid_lob2_bind() est utilisée pour ||| mixed $bind_value string $bind_value_type	count=1
return	alphanumériques ||| void	count=1
function_name	du client utilisé par ||| client	count=1
function_name	au serveur sans attendre ||| send query	count=1
function_name	retourne un [function_name] ||| [function_name] foreign	count=2
namespace	vérifie si la ||| splpriorityqueue	count=1
function_name	retourne le titre du ||| get	count=1
function_name	include_path ||| set include	count=1
function_name	caractères alphabétiques en minuscules ||| strtolower	count=2
arg_pair	résultat à destfp ||| resource $sourcefp resource $destfp	count=1
function_name	l'endroit où ||| set error	count=1
return	implémente un algorithme ||| void	count=1
return	de tri qui place ||| void	count=1
function_name	l'uri de la ||| uri	count=1
function_name	elle ||| eio	count=1
arg_pair	msg_number pour ||| resource $imap_stream int $msg_number	count=1
function_name	bords et remplit ||| pdf closepath fill stroke	count=1
namespace	place les chaînes alphanumériques ||| arrayobject	count=1
function_name	publiées décrites dans ||| functions	count=1
rep	fin de [rest_2] ||| [namespace_1] [rest_2]	count=4
function_name	le protocole mysql ||| mysql get proto	count=1
function_name	calcule l'entier le plus ||| trader floor	count=1
function_name	sans attendre le ||| send	count=1
return	deux collections : la ||| mongodb	count=1
function_name	0.0 et ||| hsl	count=1
function_name	un token ||| token	count=1
namespace	lot ||| mongocommandcursor	count=1
function_name	pdf ||| pdf	count=7
return	la fonction mktime() ||| int	count=1
function_name	publiques ||| count	count=1
function_name	gmp ||| gmp	count=1
function_name	à ||| element	count=1
function_name	à memcached::append() ||| append by	count=1
function_name	buffer [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ajoutés ||| destroy	count=1
function_name	écrit ||| fwrite	count=1
return	retourne une chaîne contenant ||| string	count=4
arg_pair	left et right ||| mixed $left mixed $right	count=1
function_name	première fois) ||| end	count=1
function	un tableau php var_array [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	chaîne str1 ||| string $str1	count=1
arg_pair	x509cert et retourne les ||| bool $shortnames	count=1
function_name	[function_name_1] champs du ||| [function_name_2] [function_name_1]	count=3
function_name	retourne la valeur ||| snmp get	count=1
function_name	[function_name_1] sous ||| [function_name_2] [function_name_1]	count=3
arg_pair	la clé passées ||| string $data string $method	count=1
arg_pair	dossier directory ||| string $directory	count=1
arg_pair	détermine si pspell_save_wordlist() doit ||| bool $flag	count=1
function_name	une connexion persistante ||| pconnect	count=3
function_name	connexion en ||| yaz connect	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] mode [arg_pair_2]	count=1
arg_pair	str dans le fichier ||| string $str int $length	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] step [function_name_1]	count=2
arg_pair	cookie ... ||| resource $link int $pagesize	count=1
return	représentant [return] ||| [return]	count=2
arg_pair	un ||| eventbase $base bool $initialize	count=1
function_name	prend plus de ||| set max poll	count=1
namespace	champs ||| function	count=1
function_name	sont sur des ||| destroy	count=1
function_name	enregistre le ||| register local namespace	count=1
arg_pair	index ainsi que ||| mixed $index	count=1
function_name	[function_name_1] déchargement ||| [function_name_1] [function_name_2]	count=2
arg_pair	une nouvelle entrée ||| int $key string $value	count=1
function_name	effectue un test sur ||| fann test data	count=1
arg_pair	[arg_pair] la mémoire ||| [arg_pair]	count=1
function_name	sert à détruire ||| delete	count=1
function_name	gabarit [function_name_2] ||| [function_name_2] begin [function_name_1]	count=1
function_name	erreur d'une erreur ||| error	count=1
return	les données du ||| array	count=1
function_name	md5 de la ||| md5	count=1
function_name	qu'elle fonctionne avec les ||| close	count=1
function_name	forme et ||| form destroy	count=1
function_name	session qui ||| session	count=1
function_name	serveur ||| sqlsrv server	count=1
namespace	les requêtes http ||| oauth	count=1
function_name	les alertes ||| warnings	count=1
function_name	de connexion passées ||| cubrid connect	count=1
function_name	la syntaxe du ||| check syntax	count=1
arg_pair	des caractères lors ||| string $string	count=1
function_name	paramètres de l'objet sous ||| to string	count=1
namespace	nombre de fois ||| ev	count=2
return	résultats à envoyer ||| bool	count=1
arg_pair	condamnations svn pour ||| int $revision_no	count=1
namespace	la brosse ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] contents [arg_pair_2]	count=5
function_name	[function_name_1] php ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] le nom ||| [function_name_1] cipher [function_name_2]	count=2
namespace	de 9 ||| imagick	count=1
function_name	efface une entrée dans ||| delete	count=1
namespace	courant du tampon de ||| function	count=1
return	passés ||| int	count=1
function_name	coucher du soleil pour ||| date sunset	count=1
function_name	cette ||| is	count=1
arg_pair	des caractères ||| string $pattern	count=1
return	la méthode ev::run() ||| int	count=2
namespace	de l' eventbuffer courant ||| eventbuffer	count=1
function_name	oauthprovider::timestampnoncehandler() ||| nonce handler	count=1
function_name	retourne l'uri ||| get uri	count=2
function_name	et extrait dans un ||| mailparse	count=1
arg_pair	le tableau des ||| resource $ann array $cascade_activation_functions	count=1
function_name	de l'objet com ||| com event sink	count=1
return	dans un fichier ||| array	count=1
return	similaire à la ||| domelement	count=1
arg_pair	et ||| resource $connection_id	count=1
function_name	peut être utilisé pour ||| debug	count=1
namespace	par ||| mongocursor	count=2
function_name	sortie puis l'efface ||| get clean	count=1
function	déchiffre [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	envoie ||| proxy send action	count=2
function_name	une ligne de ||| fetch	count=2
function_name	logo php en utilisant ||| php logo guid	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] open pdi [function_name_1]	count=2
namespace	phar a ou ||| phar	count=1
arg_pair	contenu dans un ||| resource $connection	count=1
function_name	cette ||| entity reference	count=2
function_name	les ||| array push	count=2
function_name	brute ||| raw	count=1
function_name	connexion à une ||| connect	count=1
function_name	un jeu ||| db2 procedure columns	count=1
arg_pair	event ||| mixed $readcb	count=1
function_name	la requête ||| query	count=3
namespace	frame ||| ktaglib_id3v2_frame	count=2
function_name	stockées dans [function_name] ||| [function_name] ucache	count=1
function_name	la requête courante radius ||| radius	count=1
arg_pair	sont un voisin immédiat ||| int $x	count=1
arg_pair	retourne un tableau représentant ||| array $a	count=2
function_name	xml depuis ||| save xml	count=1
arg_pair	est ||| resource $result	count=2
function_name	sur le premier attribut ||| first attribute	count=1
function_name	et libère toutes ||| base free	count=1
arg_pair	sequence et retourne un ||| string $sequence	count=1
function_name	va changer ||| dbplus rrename	count=1
function_name	la fréquence ||| doc frequency	count=1
namespace	appel d'une seule fonction ||| pdo	count=1
arg_pair	spécial ou ordinaire ||| int $minor	count=1
namespace	gearmanclient::setcontext() ||| gearmanclient	count=1
return	de ||| void	count=8
function_name	[function_name_1] pour le ||| [function_name_2] [function_name_1]	count=2
namespace	des ||| function	count=4
function_name	un document xml depuis ||| save xml	count=1
return	en comptant la couche ||| bool	count=3
function_name	crée ||| merge	count=1
function_name	mise à l'échelle liquide ||| liquid rescale image	count=1
function_name	[function_name_1] chargés ||| [function_name_2] [function_name_1]	count=1
function_name	la taille maximale ||| max body size	count=1
function_name	efface l'entrée spécifiée par ||| delete	count=1
function_name	fonction retourne le ||| get	count=2
function_name	liens ajoutés ||| set border color	count=1
function	[function_name_1] lecture ||| [arg_pair_2] [function_name_1]	count=6
function_name	fonction cubrid_connect_with_url() ||| with url	count=1
function_name	pour formatage ultérieur ||| textflow	count=1
function_name	de l'octet courant de ||| current byte index	count=1
function_name	un identifiant unique pour ||| spl object hash	count=1
function_name	[function_name_1] de contrôle ||| [function_name_2] [function_name_1]	count=1
function_name	disposition courante [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	rappel pour readline affiche ||| readline callback	count=1
return	cette fonction est ||| int	count=1
function_name	exécute ||| exec	count=2
arg_pair	valeurs aux options qui ||| array $options	count=1
namespace	contenu d'une [namespace] en utilisant ||| [namespace]	count=2
function_name	ou ||| posix mknod	count=2
rest	informations [function_2] ||| [function_2] [return_1]	count=3
arg_pair	la requête query à ||| string $query	count=1
function_name	[function_name_1] mu ||| [function_name_1] [function_name_2]	count=2
function_name	fonction retourne [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	de l'attribut dans ||| attribute ns	count=1
function_name	page pour utilisation ultérieure ||| pdf open pdi page	count=1
function_name	dans un ||| apd	count=1
function_name	si elle prend plus ||| poll time	count=1
namespace	libeio tant que ||| function	count=1
arg_pair	aux options qui affectent ||| resource $link array $options	count=1
function_name	retourne [function_name_2] ||| imagick array [function_name_1] [function_name_2]	count=1
function_name	si elle ||| poll time	count=1
return	tableau associatif ||| array	count=4
function_name	[function_name_1] paramètre facet.date.gap ||| [function_name_1] [function_name_2]	count=1
namespace	un jeu de ||| mongoclient	count=1
function_name	tous ||| form	count=1
function_name	limite de l'anglet ||| miter limit	count=1
function_name	[function_name_1] les attributs ||| [function_name_1] external [function_name_2]	count=1
function_name	méthode ||| end	count=1
function_name	[function_name_1] statut http ||| solrresponse string [function_name_1] [function_name_2]	count=1
function_name	transforme une image à ||| transform	count=1
function_name	entre 0.0 ||| hsl	count=1
function_name	de sqlstate ||| stmt error	count=1
function_name	un nouvel object ||| construct	count=1
function_name	la hauteur de l'image ||| image height	count=1
namespace	à la ||| eventbuffer	count=1
arg_pair	sous la forme d'un ||| int $x	count=1
return	fonctions en ||| bool	count=1
namespace	de la version ||| gmagick	count=1
function_name	que racine pour ||| set	count=1
arg_pair	excepté ||| int $hour int $minute	count=1
function_name	de fils aussi cette ||| has children	count=1
function_name	énumère [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	qu'elle fonctionne avec les ||| int	count=1
function_name	résultat comme pourrait ||| mysql unbuffered	count=1
return	un identifiant ||| string	count=1
function_name	une référence précédemment acquise ||| release	count=1
arg_pair	à la position x ||| int $x	count=1
arg_pair	avec les définitions de ||| resource $id	count=1
function_name	sur le dossier d'archives ||| zip	count=1
function_name	[function_name_1] couleurs de ||| [function_name_2] [function_name_1]	count=4
arg_pair	par la couleur border ||| int $border	count=1
arg_pair	fonction cubrid_set_add() est ||| string $set_element	count=1
return	> [return] ssi fichiers ||| [return]	count=1
function_name	méthode ||| call	count=1
function_name	la machine maître ||| master	count=1
function	[function_name_1] propriété hwnd ||| [function_name_1] [arg_pair_2]	count=4
function_name	de remplissage ||| cmykstroke	count=1
arg_pair	propriété hwnd ||| int $window_handle int $client_area	count=1
return	teste si ||| bool	count=1
function_name	efface une entrée ||| delete	count=1
function_name	d'activation [function_name_2] ||| [function_name_2] [function_name_1] steepness	count=4
function_name	socket spécifié par socket ||| socket	count=1
function_name	composants ||| newt form destroy	count=4
namespace	lot d'objets ||| mongocommandcursor	count=1
namespace	messagerie ||| samconnection	count=1
function_name	secondes ||| eio set max poll	count=1
function_name	de disposition ||| setimagedispose	count=1
function_name	base ||| dbase	count=1
function_name	appliqué à différents ||| preview	count=1
function_name	compare une ou ||| compare image channels	count=1
function_name	fonction ||| set module	count=2
function_name	fichier paradox ||| px	count=1
function_name	[function_name] variable de ||| [function_name]	count=1
function_name	mise à l'échelle liquide ||| liquid rescale	count=1
function_name	message d'erreur survenue lors ||| error	count=1
function_name	un tableau php var_array [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	que les structures ||| resource $pdfdoc int $textflow	count=1
return	change les fonctions ||| bool	count=1
arg_pair	surveillance d'une ressource ||| resource $fam resource $fam_monitor	count=1
function_name	minimale candidate ||| min cand epochs	count=2
function_name	id ||| set id	count=3
function_name	pour [function_name_2] ||| [function_name_1] [function_name_2]	count=8
arg_pair	entrées toutes de ||| int $start_index	count=1
namespace	d'une chaîne de ||| sdo_das_xml	count=1
arg_pair	par l'argument offset et ||| resource $lob_identifier int $offset	count=1
arg_pair	fixe le uri contenant ||| string $uri string $encoding	count=1
arg_pair	chaîne d'une façon ||| string $str	count=1
function_name	être ||| maxdb	count=1
function_name	lequel ||| file	count=1
namespace	de données sur le ||| tokyotyrant	count=1
function_name	réseau neuronal depuis un ||| fann create	count=1
function_name	[function_name_1] pour ||| [function_name_2] [function_name_1] steepness	count=1
return	l'appel ||| bool	count=1
function_name	[function_name_1] fichiers ||| [function_name_2] [function_name_1]	count=2
function	sélectionne [arg_pair_2] ||| [function_name_1] mysqlnd_connection $connection [arg_pair_2]	count=3
function_name	type strpos() en ||| strrpos	count=1
function_name	identique à ||| filter	count=1
function_name	requête ||| request	count=1
function_name	marqueur ||| bind	count=1
arg_pair	sequence et ||| resource $imap_stream string $sequence	count=1
function_name	appliqué à ||| preview	count=1
arg_pair	terminé, ou ||| int $status	count=1
function_name	algorithme ||| mcrypt module	count=1
function_name	identique à datetime::getlasterrors() ||| get last errors	count=1
arg_pair	créer ||| int $mode int $size	count=1
function_name	retourne la valeur ||| ini get	count=1
return	dans ||| bool	count=1
arg_pair	avec une des ||| resource $psdoc float $red	count=1
function_name	en incluant les composants ||| destroy	count=1
function_name	dernière modification du contenu ||| mtime	count=1
function_name	niveau de profilage de ||| profiling level	count=1
arg_pair	envoyés ||| int $format	count=1
return	si elle prend ||| void	count=1
namespace	les lob oracle ||| oci-lob	count=1
function_name	la méthode ||| zip entry compressionmethod	count=1
function_name	composition de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	retourne le nombre ||| db2 num	count=1
function_name	chaque pixels implosé par ||| implode	count=1
function_name	page sous la forme ||| reset image page	count=1
function_name	code erreur d'une erreur ||| cubrid error code	count=1
function_name	tâche en ||| background	count=1
function_name	la ligne suivante ||| next	count=1
arg_pair	dans la ||| int $flags	count=1
function_name	un [function_name_1] [function_name_2] d'un ||| [function_name_2] [function_name_1]	count=1
namespace	include_path ||| function	count=1
function_name	retourne le ||| udm get	count=1
function_name	configuration ||| set	count=1
return	le nombre de canaux ||| int	count=1
function_name	filtre entier à la ||| set filter	count=2
function_name	pour stocker des ||| metadata	count=1
arg_pair	distants rpc ||| callable $callback	count=1
function_name	une ||| set is select	count=1
function	[function_name_1] path avec ||| [arg_pair_2] [function_name_1]	count=2
function_name	le fait qu'elle ignore ||| eregi	count=1
function_name	mémoire partagée de ||| shm	count=1
return	interroge l'url ||| array	count=1
namespace	le ||| tokyotyrant	count=1
function_name	de fichier spécifié est ||| is valid	count=1
function_name	similaire ||| fbsql field type	count=2
return	trouvent ||| array	count=1
function_name	levée ||| rise	count=1
arg_pair	un ||| call $callback int $error_types	count=1
function_name	test sur un jeu ||| fann test	count=1
function_name	les ressources ||| destroy	count=1
function_name	le socket ||| last socket	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $fdf_document [arg_pair_2]	count=1
function_name	la direction du tri ||| sort	count=1
function	les tables [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	avaient été ||| destroy	count=1
function_name	exe ||| write exe	count=1
arg_pair	horizontale et verticale ||| float $x float $y	count=1
function_name	de ||| poll time	count=2
function_name	un patch ||| patch	count=1
function_name	la conversion automatique entre ||| encoding	count=1
namespace	spécifié par le ||| function	count=3
function_name	liens ajoutés ||| ps set border style	count=1
function_name	cette méthode ne ||| construct	count=1
arg_pair	l'attribut attribute à la ||| string $attribute	count=1
arg_pair	au format champ= > ||| resource $connection string $table_name	count=1
namespace	l'espace utilisateur au ||| reflectionfunctionabstract	count=1
function_name	la page sous la ||| reset image page	count=1
function_name	le champ spécifié ||| mysql field	count=1
function_name	base de ||| db	count=2
function_name	recode ||| recode	count=2
function_name	compression ||| compression	count=3
arg_pair	représentation dom ||| domnode $node int $options	count=1
return	sur le dossier d'archives ||| string	count=1
return	4 mb par documents ||| bool	count=1
function_name	extrait une ligne depuis ||| read line	count=1
function_name	[function_name_1] fils ||| [function_name_1] [function_name_2]	count=1
arg_pair	spécial ou ||| string $pathname int $mode	count=1
function_name	qui ||| uudecode	count=1
function_name	un service de ||| gupnp service	count=1
arg_pair	de fichiers local vers ||| string $local_file	count=1
function_name	informations du ||| pdf info	count=1
function_name	les données blob/clob depuis ||| cubrid lob export	count=1
function_name	appelé alias basé sur ||| alias	count=1
function_name	lot d'objets résultants et ||| size	count=1
arg_pair	le ton qui doit ||| int $shadingid	count=1
return	pour stocker ||| void	count=1
arg_pair	l'envoyer au serveur ||| string $source_string	count=1
arg_pair	par =?iso-8859-1?... est la ||| string $field_value	count=1
function_name	une page ||| pdi page	count=1
function_name	le gestionnaire [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	la tâche ||| task	count=2
function_name	courante ||| ps	count=1
function_name	[function_name] chemin relatif ||| gupnp root device [function_name] relative	count=1
arg_pair	fonction de rappel si ||| resource $proxy mixed $callback	count=1
arg_pair	dans la chaîne ||| string $source int $flags	count=1
function_name	retourne [function_name_2] ||| [function_name_1] image matte [function_name_2]	count=1
namespace	l'itérateur directoryiterator ||| directoryiterator	count=1
function_name	prend ||| poll	count=1
function_name	configuration include_path pour la ||| include	count=1
function_name	définit ||| set capath	count=2
function_name	quantité de mémoire maximale ||| peak usage	count=1
arg_pair	fichier remote_file depuis ||| string $remote_file	count=2
return	array comme une pile ||| int	count=1
arg_pair	première contient les métadonnées ||| mongodb $db string $prefix	count=1
arg_pair	les ||| array $pub_key_ids	count=1
function_name	couleur ||| ncurses color	count=1
return	la ||| string	count=14
namespace	une connexion à ||| mongoclient	count=1
function_name	caractères passée en argument ||| db2	count=1
function_name	ressources mémoires utilisées par ||| newt form destroy	count=1
function_name	[function_name_1] arguments d'une ||| [function_name_1] [function_name_2]	count=1
function_name	libère un résultat ||| free result	count=1
arg_pair	la priorité de ||| int $priority	count=1
function_name	calcule l'entier le ||| trader floor	count=1
function_name	[function_name] le ||| [function_name] get active	count=3
arg_pair	catégorie courante ||| resource $agent string $category	count=1
function_name	lire les données ||| cubrid send	count=1
arg_pair	paramètres font et ||| float $fontsize	count=1
arg_pair	la forme d'un ||| int $x	count=1
function_name	[function_name_1] la couleur ||| [function_name_1] [function_name_2]	count=2
arg_pair	[arg_pair_1] occurrence ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	fonction cubrid_connect() est utilisée ||| string $passwd bool $new_link	count=1
namespace	le numéro ||| splfileinfo	count=1
return	le noeud courant est ||| bool	count=1
function_name	forme et tous ||| newt form	count=1
arg_pair	un espace ||| string $namespaceuri	count=1
return	transaction en ||| bool	count=1
function_name	ou [function_name] associées ||| get [function_name]	count=1
function_name	avec des tests sur ||| array uintersect uassoc	count=1
arg_pair	de coordonnées de alpha ||| resource $p float $alpha	count=1
function_name	durée du script en ||| set	count=1
function_name	[function_name_1] la largeur ||| [function_name_2] [function_name_1]	count=6
arg_pair	depuis une chaîne d'une ||| int $start	count=1
namespace	réponse ||| soapserver	count=1
function_name	dans ||| write	count=1
namespace	du contenu du fichier ||| splfileinfo	count=1
namespace	closedir() seul ||| directory	count=1
function_name	tests sur ||| uintersect assoc	count=1
namespace	l'exception ||| exception	count=4
function_name	protège une chaîne de ||| pg escape string	count=1
namespace	la ||| arrayobject	count=1
arg_pair	les ||| resource $stmt	count=1
arg_pair	[arg_pair] et ||| [arg_pair]	count=4
function_name	fin de ||| end	count=1
return	méthode déplace [return] simplexmliterator à ||| [return]	count=1
return	objet lorsque ||| void	count=1
rest	au début [function_2] ||| [return_1] show text [function_2]	count=1
arg_pair	address ||| resource $socket string $address	count=1
function_name	extrêmes d'une ||| extrema	count=1
return	un document ||| int	count=1
return	la seconde contient le ||| mongodb	count=1
arg_pair	être utilisé avec la ||| resource $radius_handle string $hostname	count=1
function	[function_name_1] exp ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	fin d'un élément existant ||| string $key	count=1
arg_pair	mktime() excepté le ||| int $hour int $minute	count=1
namespace	première contient ||| mongogridfs	count=1
arg_pair	depuis la représentation ||| int $options	count=1
function_name	de caractères passée ||| db2 escape string	count=1
return	sqlite3 ||| array	count=1
function_name	un fichier qui ne ||| metadata	count=1
arg_pair	n'importe quel fichier ou ||| string $file	count=1
function_name	postgresql supporte la ||| pg	count=1
return	include_path pour la ||| string	count=1
arg_pair	la chaîne fournie ||| string $str string $encoding	count=1
return	force ||| bool	count=1
function_name	dossier d'archives spécifié ||| entry	count=1
arg_pair	une chaîne binaire ||| string $data integer $word_size	count=1
function_name	être utilisée que ||| metadata	count=1
arg_pair	et ||| mongodb $db string $prefix	count=1
arg_pair	champs de la ligne ||| int $row	count=1
function_name	postgresql supporte ||| pg	count=1
return	de caractères de l'objet ||| string	count=1
function_name	de labels utilisés ||| labels	count=1
function_name	xml ||| xml set character	count=1
function_name	durée du ||| include	count=1
function_name	logo php en ||| php logo guid	count=2
function_name	crée ||| create	count=16
arg_pair	que les paramètres passés ||| int $day	count=1
arg_pair	une matrice ||| resource $image	count=1
namespace	fonction est en phase ||| function	count=2
function_name	filtre décimal à la ||| set filter float range	count=1
function_name	pcntl_sigwaitinfo() suspend son exécution ||| pcntl sigwaitinfo	count=1
arg_pair	soapserver en mode wsdl ||| array $options	count=1
function_name	incrémente de 1 ou ||| ucache inc	count=1
function_name	les textes qui ||| mb ereg	count=1
function_name	de sortie ||| get	count=1
function_name	file d'attente s'interrompt ||| set	count=1
namespace	lors ||| function	count=1
function_name	la base sqlite identifiée ||| sqlite	count=1
namespace	lorsqu'un agent émet une ||| gearmanclient	count=1
arg_pair	le domaine courant pour ||| string $domain	count=1
function_name	la chaîne d'entités html ||| decode numericentity	count=1
function_name	pour tracer la ||| maxdb	count=1
function_name	les fonctions de ||| event buffer set	count=1
arg_pair	ou associatif query_data ||| mixed $query_data	count=1
arg_pair	fonction callback aux ||| callable $callback	count=1
function_name	geoip_country_code3_by_name() retourne ||| geoip country code3 by	count=1
function_name	revient au début ||| rewind	count=1
function	décrivant la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	spécifié est une nom ||| is	count=1
function_name	minimale ||| min default	count=1
function_name	configure ||| ncurses color set	count=1
arg_pair	une version améliorée ||| resource $result int $result_type	count=2
function_name	service ||| win32 set service	count=1
function_name	dans le cache ||| wincache	count=2
arg_pair	transformation avec xsltprocessor ||| string $name	count=1
arg_pair	invoquées avant de ||| int $max_interval int $max_callbacks	count=1
function_name	qui ||| fetch	count=1
function_name	retourne la configuration actuelle ||| get	count=1
function_name	si la classe est ||| is	count=2
function_name	construit un arbre ||| load string	count=1
arg_pair	memcached::getdelayed() mais ||| callable $value_cb	count=1
return	retourne false pour ||| void	count=1
function_name	pas ||| set	count=1
arg_pair	échantillon depuis le ||| int $raaindex	count=1
return	flux de ||| string	count=1
arg_pair	la valeur de ||| string $variable string $value	count=1
function_name	la ligne lue ||| mysql fetch	count=2
function_name	placer un verrou de ||| cubrid lock read	count=1
namespace	la méthode ||| recursivetreeiterator	count=1
function_name	et active le tri ||| sort	count=1
function_name	translation de ||| pdf translate	count=1
function_name	a un crc vérifié ||| is crcchecked	count=1
function_name	si un fils est ||| call has children	count=1
arg_pair	et retourne ||| bool $before_needle	count=1
function_name	configure les couleurs ||| ncurses color set	count=1
arg_pair	cc et [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
namespace	tampon d'entrée ||| eventbufferevent	count=1
namespace	déclenché par morceaux ||| function	count=1
return	un nom depuis ||| resource	count=1
namespace	à ||| imagick	count=1
function_name	serveurs de ||| servers	count=2
arg_pair	plusieurs paires clé-valeur dans ||| mixed $keys string $value	count=1
arg_pair	parties de données ||| string $blob_id	count=1
arg_pair	sql pour ||| string $name	count=1
function_name	pclose() hormis le fait ||| proc	count=1
function_name	noeud courant est ||| is	count=1
function_name	d'activation pour le ||| fann set activation function	count=1
arg_pair	datetime pour une chaîne ||| string $value	count=1
function_name	une chaîne [function_name] utilisée dans ||| maxdb [function_name]	count=1
arg_pair	courante ||| resource $psdoc	count=1
function_name	définit la [function_name_1] [function_name_2] la page ||| [function_name_2] [function_name_1]	count=1
arg_pair	nombre left_operand ||| string $left_operand	count=1
function_name	[function_name] longueur minimum ||| [function_name] mlt min word	count=1
function_name	réception d'une notification de ||| proxy add notify	count=1
function_name	terme à partir duquel ||| upper bound	count=1
return	plus ||| bool	count=1
return	identique à ||| void	count=1
return	pour laquelle la dernière ||| string	count=1
function_name	non dans le cache ||| wincache	count=1
namespace	différents niveaux ||| imagick	count=1
function_name	posix qui a ||| posix	count=1
function_name	partir ||| load string	count=2
function_name	libère la mémoire occupée ||| imagepsfreefont	count=1
function_name	prend plus de ||| set max	count=1
function	champs [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	le ||| close	count=2
function_name	un point ||| point	count=1
function_name	exécute la ||| execute	count=1
function_name	fonction est ||| eregi	count=1
return	de base pour toutes ||| string	count=1
function_name	caractères ||| iconv	count=1
namespace	evchild::__construct() mais ne ||| evchild	count=1
arg_pair	surveillance d'une ||| resource $fam resource $fam_monitor	count=1
function_name	similaire à la ||| element	count=1
arg_pair	la recherche ||| string $string	count=1
function_name	de champs ||| fields	count=3
function	[function_name_1] needle dans ||| [function_name_1] count [arg_pair_2]	count=2
namespace	pour définir ||| mongolog	count=1
function_name	un bloc ||| delete	count=1
function_name	mémoires ||| newt	count=1
arg_pair	[arg_pair_1] src_y ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	le paramètre est ||| is	count=1
function_name	style de tiret ||| dash	count=1
function_name	lier des données ||| bind	count=1
arg_pair	valeurs rvg ||| int $bmin int $bmax	count=1
function_name	le socket socket ||| socket	count=3
return	base de données ||| mixed	count=1
function_name	avec un identifiant ||| get element by	count=1
arg_pair	fonction mktime() excepté ||| int $minute	count=1
function_name	libère de ||| free result	count=1
function_name	à la ||| newt form	count=1
function_name	bibliothèque exslt ||| has exslt support	count=1
namespace	dans le noeud simplexml ||| simplexmlelement	count=1
function_name	souscrit à ||| imap subscribe	count=1
function_name	le dernier message d'erreur ||| last error	count=1
function_name	scan request sur la ||| yaz scan	count=1
function_name	oracle après un ||| oci	count=1
function_name	autour des liens ||| border dash	count=1
function_name	attribut par nom ||| attribute	count=1
function_name	sous copyright ||| copyrighted	count=1
function_name	l'esclave ou bien au ||| mysqlnd ms	count=1
function_name	récupérer ||| get	count=1
function_name	défini la fonction d'activation ||| fann set activation function output	count=1
function	retourne [arg_pair_2] ||| [function_name_1] contents [arg_pair_2]	count=2
arg_pair	jours du ||| int $month int $day	count=1
return	l'image ||| string	count=1
namespace	9 miniatures de ||| imagick	count=1
function_name	est ||| field	count=2
function_name	correction gamma à l'image ||| imagegammacorrect	count=1
return	de l'objet ||| bool	count=3
function_name	serveurs connus la rendant ||| reset server	count=1
function_name	[function_name_1] long d'un ||| [function_name_2] [function_name_1]	count=2
namespace	des différences et sur ||| xmldiff\file	count=1
function_name	d'activation dans la ||| fann set activation	count=1
function_name	ouvre une connexion persistante ||| odbc pconnect	count=1
return	le nombre de champs ||| int	count=1
namespace	encodés qui s'y ||| function	count=1
function_name	des champs morelikethis ||| mlt field	count=2
function_name	[function_name_1] la retourne ||| [function_name_2] [function_name_1]	count=10
function_name	charge la police ||| load ttc	count=1
arg_pair	change les ||| mixed $target mixed $fill	count=1
function_name	chaîne de caractères passée ||| string	count=1
namespace	le ||| mongogridfs	count=1
function_name	que gestionnaire d'événements pour ||| set event handler	count=1
function_name	du préfixe utilisé ||| prefix	count=1
return	le contenu ||| string	count=1
function_name	portée de l'espace ||| lookup namespace	count=1
arg_pair	chaîne str ||| string $character_mask	count=2
arg_pair	calcul des ||| int $unique int $accuracy	count=1
arg_pair	autres fonctions eio_* ||| callable $execute int $pri	count=1
function_name	récupère la largeur de ||| get width	count=1
namespace	les requêtes sql ||| sqlite3	count=1
return	typiquement ||| mongocommandcursor	count=1
function_name	calcule le logarithme base-10 ||| trader log10	count=1
arg_pair	une nouvelle définition de ||| float $height string $optlist	count=1
function_name	méthode ||| zip	count=1
namespace	le ||| gmagick	count=3
function_name	donnée par le ||| yaz	count=1
arg_pair	l'hôte hostname ||| string $hostname int $type	count=1
return	: la première ||| mongodb	count=1
function_name	[function_name_1] [function_name_2] avec l'hôte host ||| function resource [function_name_2] [function_name_1]	count=1
arg_pair	y ||| float $x float $y	count=1
function_name	annule la transaction ||| tx rollback	count=1
function_name	[function_name_1] mnogosearch ||| [function_name_2] [function_name_1]	count=2
function_name	est clonable ||| is cloneable	count=2
function_name	du ||| ob	count=1
arg_pair	dans la ||| resource $connection string $qualifier	count=1
function_name	nombre [function_name_2] ||| [function_name_2] [function_name_1]	count=18
function_name	retourne une chaîne ||| mysqli get	count=1
return	caractères d'instance xml ||| sdo_das_xml_document	count=1
arg_pair	une ||| resource $connection string $query	count=1
return	fonction ||| void	count=4
function_name	[function_name_1] [function_name_2] ||| [function_name_1] steepness [function_name_2]	count=3
function_name	fonction cubrid_error_code() [function_name] ||| [function_name] error	count=1
arg_pair	de la donnée data ||| mixed $data	count=1
function_name	[function_name] avec ||| [function_name]	count=3
arg_pair	associatif query_data ||| mixed $query_data	count=1
return	extrait les mots-clés ||| array	count=1
namespace	peut être ||| mongolog	count=1
function_name	délai ||| delay	count=1
function_name	exécution en parallèle d'autres ||| task	count=1
function_name	les modules à ||| module	count=1
arg_pair	lors du clic sur ||| resource $psdoc float $llx	count=1
namespace	phar sauvera ||| phar	count=1
function_name	nombre maximal ||| max num	count=4
function_name	avec les statistiques du ||| stats	count=1
function_name	utilisée pour définir les ||| module	count=1
arg_pair	table table_name ||| string $table_name	count=4
arg_pair	commence par =?iso-8859-1?... ||| string $field_name string $field_value	count=1
function_name	d'un [function_name] ||| [function_name]	count=2
function_name	rappel timestamp handler ||| timestamp	count=1
namespace	objet splfileobject ne peut ||| splfileobject	count=1
function_name	première ||| yp first	count=2
function_name	l'attribut spécifié ||| attribute	count=2
function_name	file d'attente s'interrompt ||| set max poll	count=1
namespace	vérifie si ||| splpriorityqueue	count=1
function_name	[function_name_1] qui sera ||| [function_name_1] [function_name_2]	count=4
function_name	d'activation ||| set activation	count=4
return	change ||| bool	count=1
function_name	de type strpos() en ||| mb strrpos	count=1
arg_pair	watcher associé avec ||| callable $callback mixed $data	count=1
return	non ||| bool	count=1
return	objet reflectionextension ||| reflectionextension	count=1
arg_pair	une image ||| string $iptcdata string $jpeg_file_name	count=1
function_name	processus ||| expect	count=1
function_name	si les [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	supportent [arg_pair] pages ||| [arg_pair]	count=1
function_name	les composants qui sont ||| form destroy	count=1
namespace	des ||| splpriorityqueue	count=1
function_name	récupère la date de ||| get	count=1
function_name	première ligne ||| first	count=1
namespace	fourni et ||| function	count=1
function_name	la page sous la ||| page	count=1
function_name	de ||| db2	count=1
function_name	définit une fonction de ||| mysqlnd ms set	count=1
function_name	retourne ||| zip entry	count=1
namespace	utilisées ||| function	count=1
function_name	fonction cubrid_list_dbs() ||| cubrid db	count=1
function_name	sélectionne ||| mssql select db	count=2
arg_pair	le fait ||| int $day	count=1
function_name	dans une instance glo ||| save to glo	count=1
arg_pair	cc et bcc ||| string $bcc	count=1
function_name	en ||| db2 escape	count=1
arg_pair	et ||| string $src	count=1
function_name	l'échelle les ||| fann scale output	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] last [function_name_2]	count=11
function_name	la convolution 3x3 ||| imageconvolution	count=1
function_name	et son utilisation ||| fcache	count=1
function_name	au champ spécifié ||| field flags	count=1
return	distants ||| boolean	count=1
namespace	place les ||| arrayobject	count=1
function_name	associatif qui [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la fonction geoip_country_code3_by_name() ||| country code3 by	count=1
arg_pair	une requête aql brute ||| string $dbpath	count=1
function_name	ferme le ||| closedict	count=1
namespace	spécifiée par ||| function	count=3
arg_pair	génère une signature ||| string $http_method string $url	count=1
function_name	le numéro de ||| get	count=1
namespace	[namespace] une interface ||| [namespace]	count=1
function_name	si elle prend plus ||| set max	count=1
return	un groupe ||| resource	count=1
function_name	segment de mémoire partagée ||| shm	count=2
arg_pair	de la connexion spécifiée ||| resource $connection	count=1
function_name	l'époque maximale ||| cascade max out epochs	count=1
function_name	pour le neurone numéro ||| set	count=1
function_name	[function_name] résultat ||| [function_name]	count=2
namespace	identique ||| directory	count=1
function_name	textes qui ||| ereg	count=1
function_name	exécute ||| execute	count=3
arg_pair	de couleurs représentant ||| bool $dither	count=1
function_name	liée au socket ||| socket name	count=1
return	les réponses dans ||| bool	count=1
function	depuis [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	définit ||| setproctitle	count=1
function_name	été envoyé en ||| message	count=1
function_name	fonction get_defined_vars() ||| defined vars	count=1
function_name	mode de ||| mode	count=2
function	du [arg_pair_2] ||| [function_name_1] name resource $fdf_document [arg_pair_2]	count=1
arg_pair	la fonction ||| resource $result	count=2
function_name	l'image spécifiée avec ||| preview	count=1
function_name	valeur de la ||| path	count=1
function_name	dessous de la dernière ||| ps continue	count=1
function_name	d'événements pour les ||| set event	count=1
function_name	récupère les [function_name_2] ||| [function_name_2] [function_name_1]	count=12
namespace	réponse en ||| soapserver	count=1
namespace	bibliothèque sqlite3 ||| sqlite3	count=1
function_name	[function_name_1] un constructeur ||| [function_name_2] [function_name_1]	count=1
arg_pair	données cubrid et sauvegarde ||| resource $lob_identifier	count=1
arg_pair	qui satisfont un modèle ||| string $pattern bool $only_names	count=1
function_name	dans le flux ||| stream	count=1
function_name	d'activation pour le ||| set activation function	count=1
function_name	crée ||| pdf create	count=4
return	au sein d'une archive ||| bool	count=1
function_name	appelle ||| call	count=1
function_name	retourne true s'il existe ||| array key exists	count=1
arg_pair	entraîne une machine ||| array $weights	count=1
function_name	propriété ||| property value	count=1
function_name	ou les deux ||| watermark	count=1
function_name	de noms est déclaré ||| namespace decl	count=1
function_name	termes ||| terms	count=2
arg_pair	les erreurs seront historisées ||| resource $errdat string $log_file	count=1
return	image contenant ||| gmagick	count=1
function_name	dernière [function_name_2] ||| [function_name_2] get [function_name_1]	count=3
function_name	trace pour [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] nom ||| [function_name_2] [function_name_1]	count=4
namespace	courante ||| function	count=2
function_name	dans le mois month ||| month	count=1
return	par le ||| bool	count=1
function_name	facteur quickprop [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	classe et revient à ||| class	count=1
return	l'interface de connexion décrite ||| bool	count=1
function_name	retourne le serveur qui ||| get server	count=1
function_name	à guillemets string en ||| imap qprint	count=1
function_name	pour toutes [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	d'un objet snmp spécifié ||| snmp2	count=1
arg_pair	excepté le fait ||| int $day int $year	count=1
function_name	variable character_set ||| client encoding	count=1
function_name	d'interpolation de ||| set image interpolate	count=1
namespace	noeud courant ||| tidynode	count=1
arg_pair	a et p ||| gmp $p	count=1
function_name	[function_name_1] type d'octets ||| [function_name_1] [function_name_2]	count=1
function_name	la position courante ||| tell	count=1
function_name	noms de champs du ||| field names	count=1
arg_pair	basé sur les différences ||| string $src string $diff	count=1
function_name	le [function_name] depuis ||| get terms [function_name]	count=1
arg_pair	envoie une commande et ||| string $query	count=1
function	readline affiche [arg_pair_2] ||| [function_name_1] callback handler install [arg_pair_2]	count=3
function_name	image ||| set image	count=3
arg_pair	domaine courant domain ||| string $domain	count=1
function_name	le dossier d'archives spécifié ||| zip	count=1
arg_pair	[arg_pair_1] flags ||| [arg_pair_2] [arg_pair_1]	count=4
return	courant du ||| string	count=1
function_name	seule ||| open	count=1
function_name	type insert effectuée ||| insert	count=1
function_name	et tous les composants ||| form	count=1
function_name	du résultat [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] mémoire maximale ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] colonne ||| [arg_pair_2] [function_name_1]	count=1
namespace	représentée par ||| function	count=1
return	où la méthode ||| int	count=2
arg_pair	de domaine ||| int $options	count=1
function_name	avaient été ajoutés à ||| form	count=1
namespace	configuration include_path ||| function	count=1
function_name	le dénominateur du taux ||| task denominator	count=1
function_name	schéma d'entrelacement [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	retourne [function_name_2] ||| [function_name_1] image border [function_name_2]	count=1
function_name	version de la ||| rrd version	count=1
return	fichier compressé [return] bzip2 ||| [return]	count=1
function_name	processus qui fonctionnent ||| win32 ps list procs	count=1
function_name	[function_name_1] objet char ||| [function_name_1] [function_name_2]	count=1
function_name	qui sont sur ||| form	count=1
arg_pair	centrée sur les coordonnées ||| int $cy int $width	count=1
namespace	méthode vérifie si le ||| mongocursorinterface	count=1
arg_pair	alias de : soapfault::soapfault() ||| string $detail	count=1
function_name	nombre de ||| num	count=11
arg_pair	de jours ||| int $year	count=1
function_name	retourne la valeur ||| get errno	count=1
function_name	distant ||| ssh2 scp send	count=1
function_name	incrémente de 1 ||| wincache ucache inc	count=1
function	schéma [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	vérifie une ||| string $uri	count=1
namespace	qu'elle ignore la ||| function	count=1
arg_pair	rouge vert et ||| int $r	count=1
return	courant ||| string	count=1
arg_pair	un fichier de ||| array $options	count=1
function_name	sauve dans le fichier ||| export to file	count=1
function_name	geoip_country_code3_by_name() ||| geoip country code3	count=1
return	une chaîne dans un ||| string	count=1
function_name	représentation en chaîne ||| serialize	count=1
function_name	retourne sous la ||| get	count=1
function	affiche [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	connexion donnée par ||| yaz	count=1
arg_pair	première occurrence de needle ||| string $haystack mixed $needle	count=1
arg_pair	première occurrence de needle ||| string $haystack	count=1
function_name	fonction getimagesize() excepté le ||| getimagesizefromstring	count=1
function_name	file d'attente s'interrompt si ||| set	count=1
namespace	file d'attente s'interrompt si ||| function	count=1
function_name	complétée ||| str pad	count=2
function_name	dans le blob ||| blob	count=1
function_name	tronque ||| truncate	count=2
function_name	filtre [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	à ||| preview images	count=2
function_name	la méthode ||| entry compressionmethod	count=1
return	champs colonnes de ||| int	count=1
arg_pair	terminé, ou qu'un signal ||| int $status	count=1
namespace	doit pas être ||| pharfileinfo	count=1
namespace	retournés par ||| function	count=1
function_name	[function_name] utilisée ||| maxdb [function_name]	count=3
function_name	modules à surveiller ||| set	count=1
arg_pair	de données cubrid et ||| resource $conn_identifier resource $lob_identifier	count=1
function	l'attribut [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	récupère la profondeur ||| getimagedepth	count=1
namespace	s'y ||| function	count=1
namespace	d'instance xml donnée ||| sdo_das_xml	count=1
arg_pair	les paramètres ||| int $day	count=1
arg_pair	résultats listant ||| string $schema	count=8
arg_pair	la ||| int $type	count=1
namespace	les clé et les ||| arrayobject	count=1
function_name	exécuter ||| execute	count=1
function_name	adaptativement ||| adaptive	count=1
arg_pair	julien en date ||| int $juliandaycount	count=1
function_name	est similaire à ||| close	count=1
namespace	travaux à l'agent ||| gearmanworker	count=1
arg_pair	fonction mysql_field_name() ||| resource $result int $field_offset	count=1
function_name	crée [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	serveur ldap ||| ldap	count=1
function_name	de caractères pour ||| string	count=1
function_name	serveur d'administration ||| kadm5 destroy	count=1
function_name	connexion en cas de ||| connect	count=1
function_name	avec une connexion à ||| get	count=1
function_name	un ||| children	count=4
function_name	l'extension pour la ||| to extension	count=1
function_name	signature ||| verify	count=1
return	et seule ||| void	count=1
function_name	qui décide si ||| qc set is select	count=1
arg_pair	size ||| int $size	count=1
arg_pair	tente une ||| resource $session	count=1
namespace	[namespace] de ||| [namespace]	count=2
function_name	dans la configuration ||| config	count=1
function_name	données dbase ||| dbase	count=2
function_name	toutes les ||| dbplus rzap	count=1
function_name	couche de sortie ||| output	count=1
function_name	pointeur interne de clé ||| dba firstkey	count=1
function_name	z39.50 scan request ||| yaz scan	count=1
function_name	l'espace de couleur ||| color space	count=3
function_name	[function_name] courante ||| get [function_name]	count=2
arg_pair	l'événement de connexion et ||| mixed $arg	count=1
arg_pair	de résultats listant les ||| string $schema string $table_name	count=1
return	rpc ||| boolean	count=1
function_name	crée un dossier dans ||| mkdir	count=1
function_name	boucle ||| event	count=1
namespace	attribut dans un ||| sphinxclient	count=1
namespace	connecte à searchd ||| sphinxclient	count=1
function_name	[function_name_1] les modificateurs ||| [function_name_2] [function_name_1]	count=1
arg_pair	par l' oid ||| string $oid	count=1
function_name	crée un dossier ||| mkdir	count=1
namespace	flux de ||| gmagick	count=1
namespace	9 ||| imagick	count=1
namespace	élément ||| splfixedarray	count=1
function_name	en-têtes http de ||| apache request headers	count=2
function_name	[function_name_1] avec pg_execute() ||| [function_name_2] [function_name_1]	count=6
function_name	les liens ajoutés ||| border dash	count=1
function_name	l'arc sinus ||| asin	count=1
function_name	file d'attente s'interrompt ||| eio set max poll	count=1
arg_pair	listant les procédures ||| string $schema	count=1
function_name	si le périphérique racine ||| gupnp root device set	count=1
function_name	modules à surveiller ||| module	count=1
arg_pair	msg_number ||| resource $imap_stream int $msg_number	count=1
function_name	l'itération lorsque la méthode ||| iteration	count=1
function_name	un élément avec un ||| element	count=1
arg_pair	moifie un ||| array $values bool $mva	count=1
function_name	la fréquence ||| default frequency	count=1
function_name	hormis le ||| proc	count=1
function_name	labels utilisés pour ||| labels	count=1
function_name	retourne la variable character_set ||| client encoding	count=1
arg_pair	de données d'un ||| resource $statement mixed $field	count=1
function_name	les extensions ||| extensions	count=1
function_name	msql query_identifier ||| msql result	count=1
function_name	et ||| array push	count=2
function_name	de conteneur de chargement ||| set default	count=1
function_name	compile un script ||| opcache compile	count=1
arg_pair	trouve la première occurrence ||| string $haystack	count=1
function_name	pdf importé ||| pdf process pdi	count=2
namespace	d'une image contenant du ||| gmagick	count=1
arg_pair	le contenu d'un élément ||| int $index	count=1
arg_pair	le fait que les ||| int $day int $year	count=1
function_name	attribut par nom et ||| attribute	count=1
function_name	tant que données sources ||| import	count=1
arg_pair	depuis le fichier ||| mixed $filename	count=1
namespace	imagickpixel sous ||| imagickpixel	count=1
arg_pair	position courante ||| resource $psdoc	count=1
function_name	fonction geoip_country_code3_by_name() ||| country code3 by	count=1
arg_pair	xml depuis la ||| string $filename int $options	count=1
function_name	sortie [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	connexions ouvertes et ||| connections	count=1
function_name	est ||| get element by id	count=2
function_name	connexion interbase ||| ibase	count=1
function_name	pour ||| set by key	count=2
function_name	et tous ||| form destroy	count=1
namespace	[namespace] que ||| [namespace]	count=2
function_name	identifiant permettant ainsi ||| id	count=1
rest	argument au [function_2] ||| [function_2] [return_1]	count=1
function_name	représentation yaml ||| yaml emit	count=1
arg_pair	la chaîne str à ||| string $str	count=1
function_name	la variable ||| wincache ucache	count=1
function	de gris [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	curseur typiquement parcourt ||| mongocommandcursor	count=1
namespace	ou sauvegarde une image ||| function	count=1
arg_pair	texte ||| string $blockname string $text	count=1
arg_pair	cubrid_connect() est utilisée pour ||| bool $new_link	count=1
function_name	la carte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	script comme ||| string $extension_name string $script	count=1
return	déplace toutes les ||| bool	count=1
function_name	guid ||| guid	count=1
arg_pair	str dans le fichier ||| string $str	count=1
function_name	un fichier exe ou ||| exe footer	count=1
return	et le reste ||| array	count=1
return	l'analyseur ||| bool	count=7
namespace	dossier ||| directoryiterator	count=1
arg_pair	et sur [arg_pair] ||| [arg_pair]	count=1
arg_pair	moifie ||| array $values bool $mva	count=1
namespace	différences et sur le ||| xmldiff\file	count=1
function_name	ibase sans [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	modifie ||| bool	count=1
arg_pair	avec la ||| resource $radius_handle string $hostname	count=1
arg_pair	est identique à ||| string $string	count=1
function_name	du fichier ||| file	count=2
namespace	la fin de ||| eventbuffer	count=1
namespace	informations [namespace] de ||| [namespace]	count=1
function_name	fait ||| proc	count=1
function_name	réinitialise ||| rewind	count=2
function_name	slob ||| read slob	count=2
namespace	un [namespace] à ||| [namespace]	count=1
function_name	classe ||| class	count=10
function_name	nombre de colonnes ||| num fields	count=1
arg_pair	la classe class ||| string $class	count=2
function_name	puissance ||| pow	count=2
function_name	compare ||| version compare	count=2
arg_pair	utilisée pour établir l'environnement ||| string $dbname	count=1
function_name	un modèle 3d depuis ||| pdf load 3ddata	count=1
function_name	configure l'espace ||| colorspace	count=1
function_name	appelle la [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	lit toutes les valeurs ||| values	count=2
function_name	calcule le logarithme naturel ||| trader ln	count=1
namespace	retourne la ||| gmagickdraw	count=1
function_name	à width ||| setlinewidth	count=1
return	ne doit ||| void	count=1
function_name	curseur typiquement ||| batch size	count=1
namespace	[namespace] distante ||| [namespace]	count=1
arg_pair	dans l'image destination ||| resource $destination	count=1
function_name	ferme le dictionnaire représenté ||| crack closedict	count=1
function_name	à ||| string	count=2
arg_pair	identique à ||| string $string	count=1
arg_pair	une image jpeg ||| string $iptcdata string $jpeg_file_name	count=1
function_name	issues de transactions xa ||| xa	count=1
function	[function_name_1] needle ||| [function_name_1] count [arg_pair_2]	count=1
function_name	d'objets résultants et ||| batch size	count=1
function_name	du timer ||| timer	count=1
namespace	au ||| mongocursorinterface	count=1
arg_pair	les paramètres mask ||| int $mask	count=1
function_name	cette fonction est ||| element by id	count=1
return	fait que les paramètres ||| int	count=1
arg_pair	considère array ||| array $array	count=1
function_name	schéma relaxng à ||| set relax ngschema	count=1
function_name	de surveillance ||| watch	count=1
arg_pair	contenu d'un élément dans ||| string $attr_name	count=1
function_name	boucle libeio ||| eio	count=1
namespace	à partir d'une ||| sdo_das_xml	count=1
function_name	lignes autour des liens ||| pdf set border	count=1
arg_pair	couleur de fond ||| mixed $background string $format	count=1
function_name	configuration include_path ||| set include path	count=1
function_name	de [function_name] associé ||| get [function_name]	count=1
function_name	restaure la ||| ini restore	count=1
function_name	[function_name_1] serveur oracle ||| function resource [function_name_2] [function_name_1]	count=1
arg_pair	cible ||| resource $context string $target	count=1
return	file ||| bool	count=1
arg_pair	sur ||| resource $imap_stream	count=1
function_name	composants ||| newt form	count=2
function_name	[function_name_1] pkcs#12 fourni ||| [function_name_2] [function_name_1]	count=2
namespace	de récursion ||| ev	count=1
function_name	être utilisé pour ||| set multi	count=1
function_name	un patch binaire ||| patch binary	count=1
function_name	complétion ||| readline completion	count=1
function_name	sur la ||| dbplus	count=1
namespace	que l'archive phar ||| phar	count=1
return	contient le ||| mongodb	count=1
function_name	qui sera démarré lors ||| add launchlink	count=1
function_name	des tests sur l'index ||| uintersect uassoc	count=1
function_name	modifie le mode ||| mode	count=1
namespace	bloc de ||| function	count=1
function_name	com ||| com event	count=1
namespace	l'objet imagick ||| imagick	count=3
function_name	un verrou ||| cubrid lock	count=1
arg_pair	que les ||| int $hour	count=1
function_name	de données d'entrainement depuis ||| train from callback	count=1
return	envoie ||| void	count=1
arg_pair	l'url repos_url ou l'historique ||| string $repos_url	count=1
arg_pair	gestionnaire de queues ||| string $qmanagername	count=2
arg_pair	par la ressource fd ||| resource $fd	count=1
return	cette méthode ||| array	count=1
function	[function_name_1] occurrence de ||| [function_name_1] [arg_pair_2]	count=1
function_name	cette ||| set module	count=2
function_name	un jeu [function_name] ||| [function_name]	count=1
function_name	fonction de rappel ||| callback	count=4
arg_pair	vers un programme ||| float $ury string $filename	count=1
function_name	radius_get_attr() radius_get_tagged_attr_data() va retourner ||| get tagged attr data	count=1
function_name	php ||| phpversion	count=1
arg_pair	haystack et retourne ||| bool $part string $encoding	count=1
function_name	prend plus de ||| poll	count=1
function_name	statique ||| static	count=2
function_name	données de déboguage ||| internal debug	count=1
function_name	puis l'efface ||| ob get clean	count=1
arg_pair	fonctions eio_* ||| callable $execute	count=1
function_name	[function_name_1] une image ||| [function_name_2] [function_name_1]	count=3
function_name	la taille du ||| size	count=8
return	résultants et les ||| mongocommandcursor	count=1
function_name	[function_name_1] les connexions ||| [function_name_1] [function_name_2]	count=1
function_name	l'élément ||| element	count=1
function_name	de queues et l'application ||| disc	count=1
function_name	forme en incluant les ||| newt form	count=1
function	crée un [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=1
function_name	les résultats ainsi que ||| complete	count=1
function_name	transaction en ||| transaction	count=1
function_name	[function_name_1] informations disponibles ||| [function_name_1] [function_name_2]	count=1
return	lors ||| int	count=2
return	php d'un serveur de ||| bool	count=1
function_name	d'attente ||| time	count=1
arg_pair	à une valeur entre ||| resource $p int $value	count=1
function_name	valeur de l'attribut dans ||| attribute ns	count=1
function_name	à l'esclave ou ||| mysqlnd ms	count=1
namespace	nouveau filteriterator ||| filteriterator	count=1
function_name	peinture de l'espace ||| stroking	count=1
arg_pair	détermine si pspell_save_wordlist() ||| int $dictionary_link bool $flag	count=1
arg_pair	signature1 et la signature2 ||| string $signature1 string $signature2	count=1
function_name	des ||| imagesetbrush	count=1
namespace	identique à la fonction ||| function	count=1
arg_pair	des caractères lors de ||| string $pattern	count=1
arg_pair	attribut dans un document ||| string $index	count=1
function	[function_name_1] la valeur ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	le chemin fourni ||| int $length	count=1
function_name	champ spécifié par ||| mysql field flags	count=1
function_name	les extrêmes ||| extrema	count=1
function_name	écrit ||| dio write	count=1
function_name	rassemble les éléments ||| merge	count=1
function_name	de grande taille à ||| pg lo	count=1
arg_pair	fbsql_field_name() ||| resource $result int $field_offset	count=1
function_name	transactions xa ||| mysqlnd ms xa	count=1
arg_pair	la couleur border ||| int $y int $border	count=1
function_name	mime d'une ||| mime	count=1
arg_pair	catégorie ||| resource $agent string $category	count=1
arg_pair	des ||| string $string	count=1
function_name	liste tous les fichiers ||| list	count=1
function_name	filtre décimal à la ||| set filter float	count=1
arg_pair	la base de ||| string $database	count=2
arg_pair	requête query à ||| string $query	count=1
namespace	lit le ||| function	count=1
function_name	un sommaire de ||| imap fetch overview	count=1
arg_pair	un tableau comme argument ||| array $args	count=1
namespace	un ||| arrayobject	count=1
function_name	du fichier fourni et ||| uudecode all	count=1
arg_pair	de la chaîne str ||| string $delimiter	count=1
function_name	première ligne de ||| first	count=1
function_name	données d'entrainement à ||| input train data	count=1
function_name	du champ ||| pg field	count=1
function_name	la ||| eio set	count=1
function	[function_name_1] base ||| [arg_pair_2] [function_name_1]	count=3
function_name	les fichiers ||| uudecode	count=1
function_name	variables [function_name] ||| [function_name]	count=1
namespace	défini l'endroit ||| function	count=1
function_name	[function_name_1] cipher ||| [function_name_2] iv [function_name_1]	count=3
arg_pair	la couleur de fond ||| mixed $background	count=1
function_name	l'espace de noms selon ||| lookup namespace	count=1
namespace	d'instance xml ||| sdo_das_xml	count=1
function_name	image sans lire toute ||| ping image	count=1
function_name	la mise à jour ||| update	count=1
function_name	récupère les blob/clob ||| lob get	count=1
namespace	lob ||| oci-lob	count=5
function_name	extrait ||| uudecode all	count=2
function_name	la méthode est ||| is	count=1
function_name	[function_name_1] informations d'un ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] si une ||| [function_name_1] field len [arg_pair_2]	count=2
function_name	et retourne un sommaire ||| imap fetch overview	count=1
function_name	racine carrée ||| trader sqrt	count=1
function_name	champ spécifié par sa ||| mysql field	count=1
function_name	trace de la ||| trace as string	count=1
function_name	préfixe de ||| prefix	count=2
arg_pair	une ||| resource $image string $filename	count=1
function_name	annule ||| rollback	count=1
function_name	brutes ||| get raw	count=1
function_name	supprime ||| remove facet	count=1
function	xml [arg_pair_2] ||| [function_name_1] set default handler [arg_pair_2]	count=1
function_name	seront ||| set	count=1
namespace	du générateur ||| generator	count=1
function_name	test sur un ||| fann test	count=1
function_name	l'attribut spécifié par ||| attribute	count=2
function_name	modèle 3d depuis ||| load 3ddata	count=1
arg_pair	du résultat result ou ||| resource $result int $type	count=1
function_name	tri du ||| add sort field	count=2
namespace	l'image ||| imagick	count=3
return	minimum [return] mot ||| [return]	count=1
namespace	déplace l'itérateur à l'élément ||| spldoublylinkedlist	count=1
function_name	constantes définies ||| constants	count=1
function_name	liens ajoutés ||| ps set border	count=2
function_name	est disponible ||| set available	count=1
arg_pair	et lui associe un ||| int $rows	count=1
return	fichiers encodés qui ||| array	count=1
function_name	le ||| doc javascript	count=2
function_name	lorsque l'objet ||| set	count=1
function_name	paramètre facet.date.other ||| facet date other	count=2
arg_pair	de la gamme des ||| float $white_point	count=1
function_name	fichiers encodés ||| all	count=1
arg_pair	entre la signature1 et ||| string $signature1	count=1
arg_pair	passées ||| string $method	count=1
arg_pair	le document xml filename ||| string $filename string $class_name	count=1
function_name	la couleur d'arrière-plan ||| trim	count=1
namespace	méthode vérifie ||| mongocursorinterface	count=1
arg_pair	de travaux [arg_pair] ||| [arg_pair]	count=1
function_name	ressource de socket valide ||| socket	count=1
function_name	caractères blancs ||| rtrim	count=1
arg_pair	une chaîne ||| int $bid	count=1
function_name	de caractères ||| db2 escape string	count=1
function_name	résultat de la requête ||| result	count=1
arg_pair	la chaîne str après ||| string $character_mask	count=2
function_name	spécifié ||| mysql	count=1
function_name	[function_name_1] la variable ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] de ||| session [function_name]	count=1
function_name	filtres ||| filter queries	count=1
function_name	[function_name] générer par ||| get [function_name]	count=1
function_name	toutes les bases de ||| dbs	count=1
arg_pair	un document ||| string $index	count=1
function_name	strpos() en ||| strrpos	count=1
function_name	[function_name_1] fréquence ||| [function_name_2] [function_name_1]	count=1
return	niveau dans lequel l'erreur ||| int	count=1
namespace	vers le ||| norewinditerator	count=1
function_name	lit un [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	le facteur ||| factor	count=1
function_name	utilisées ||| newt	count=1
function_name	$to[$n] où $n est ||| strtr	count=1
function_name	sont sur des ||| newt	count=1
arg_pair	une requête ||| string $dbpath	count=1
function_name	issues de transactions xa ||| xa gc	count=1
function_name	[function_name_1] une image ||| [function_name_1] [function_name_2]	count=3
arg_pair	xml depuis la ||| int $options	count=1
arg_pair	son contenu dans un ||| resource $connection int $oid	count=1
function_name	en ignorant ||| str ireplace	count=1
function_name	doit être ||| set	count=2
function_name	récupère la couleur courante ||| get gray stroke	count=1
namespace	à la fin ||| mongocursorinterface	count=1
function_name	non les caractères brutes ||| terms return raw	count=1
function_name	marque les messages ||| imap	count=1
arg_pair	les appels distants ||| callable $callback	count=1
return	de la ||| int	count=5
function_name	un shell ||| shell	count=1
function_name	champ spécifié par ||| mysql field seek	count=1
namespace	jeu de ||| gmagickdraw	count=1
function_name	définit le terme ||| terms upper bound	count=1
namespace	d'une classe ||| reflectionclass	count=3
arg_pair	à sybase_fetch_array() avec une ||| mixed $object	count=1
function	[function_name_1] une ||| [function_name_1] [arg_pair_2]	count=16
function_name	retourne ||| compressionmethod	count=1
arg_pair	str en ||| string $str	count=1
arg_pair	[arg_pair_1] bleu d'une ||| [arg_pair_1] [arg_pair_2]	count=1
return	mémoires utilisées ||| void	count=1
arg_pair	mémoire partagée ||| int $shmid	count=1
function_name	et extrait ||| uudecode	count=1
return	bits d'exécution ||| void	count=1
function_name	d'activation ||| set activation function	count=4
function	yaml [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	protocol comme [return] /etc/services ||| [return]	count=1
function_name	si les [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	cubrid_drop() est utilisée pour ||| cubrid drop	count=1
arg_pair	bcc ||| string $bcc	count=1
arg_pair	xml filename ||| string $filename string $class_name	count=1
namespace	recursivetreeiterator::valid() retourne false ||| recursivetreeiterator	count=1
arg_pair	à l'aide ||| string $prefix	count=1
arg_pair	source dans l'image destination ||| resource $source	count=1
function_name	elle prend plus de ||| eio set max poll time	count=1
function_name	d'une ligne ||| line len	count=1
function_name	un fichier qui ||| set metadata	count=1
function_name	image par miroir horizontal ||| flop image	count=1
function_name	un identifiant unique ||| hash	count=1
arg_pair	partir d'une ressource fichier ||| resource $filehandle string $filename	count=1
function_name	flou à [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de jokers à ||| tokens	count=1
function_name	par ||| dbplus	count=1
function_name	notification ||| notify	count=1
arg_pair	que les ||| int $minute	count=1
arg_pair	de la table table_name ||| string $table_name	count=3
namespace	l'image depuis le ||| gmagick	count=1
arg_pair	de mppe [arg_pair] clés ||| [arg_pair]	count=1
function_name	interbase ||| ibase	count=3
function_name	les attributs ||| attributes index	count=1
arg_pair	l'aide ||| string $prefix	count=1
return	à différents niveaux ||| bool	count=1
arg_pair	plate-forme unix et windows ||| int $operation	count=1
function_name	une simple ligne de ||| textline	count=1
function_name	odbc ||| odbc	count=5
function	[function_name_1] une valeur ||| [function_name_1] [arg_pair_2]	count=6
namespace	l'objet sous la forme ||| solrparams	count=1
function_name	sein d'une ||| is	count=1
arg_pair	du texte ||| string $text	count=2
function_name	mb_substr() mais opère ||| mb strcut	count=1
arg_pair	verrouille ou déverrouille un ||| int $wouldblock	count=1
arg_pair	ligne/hors ||| int $port	count=1
function_name	fonction ||| cubrid field	count=1
function_name	de résultats mysql ||| mysql result	count=2
arg_pair	à strcmp() elle n'est ||| string $str1 string $str2	count=1
function_name	un attribut dans ||| attributes	count=1
function_name	défini l'endroit où les ||| set error log	count=1
function_name	par son nom ||| name	count=1
function_name	dessin des ||| imagesetbrush	count=1
arg_pair	...) ||| resource $broker	count=1
function_name	crée ||| images	count=1
namespace	corrélation entre les clé ||| arrayobject	count=1
function_name	le système de ||| eio unlink	count=1
function_name	file d'attente ||| eio set	count=1
return	fois ||| void	count=1
function	[function_name_1] sur le ||| [function_name_1] [arg_pair_2]	count=3
function_name	dernière tentative de ||| connect errno	count=2
function_name	multiplie ||| mul	count=1
function_name	retourne tous les paramètres ||| to string	count=1
arg_pair	de la chaîne data ||| string $data	count=1
function_name	associé à ||| sybase	count=1
function_name	spécial ||| posix mknod	count=2
function_name	connexion avec la ||| ingres connect	count=1
function_name	méthode détermine ||| is	count=1
function_name	libère un ||| oci free descriptor	count=1
function_name	de statut de la ||| status	count=1
arg_pair	une date donnée ||| string $date	count=1
function_name	lit les extrêmes ||| extrema	count=1
return	en mémoire ||| bool	count=1
function_name	nom d'hôte ||| name	count=1
arg_pair	[arg_pair_1] key dans ||| [arg_pair_2] string $outfilename [arg_pair_1]	count=3
arg_pair	un modèle ||| string $pattern	count=1
return	fichiers encodés qui s'y ||| array	count=1
function_name	retourne un jeu ||| db2	count=4
function_name	dans un format ||| string	count=1
arg_pair	l'appel direct à ||| string $function_name string $arguments	count=1
function_name	nouveau [function_name] pour pouvoir ||| [function_name] packet	count=1
function_name	définit la [function_name_2] ||| [function_name_1] cache [function_name_2]	count=1
function_name	d'objets reflectionparameter ||| parameters	count=1
function_name	array ||| push	count=1
function_name	[function_name_1] objet ||| [function_name_2] [function_name_1]	count=2
function_name	ou ||| add function	count=1
return	associé [return] protocole ||| [return]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] encoding [function_name_2]	count=2
function_name	ssl ||| ssl	count=1
return	la base ||| void	count=1
function_name	le certificat pkcs#12 ||| openssl pkcs12	count=2
function_name	pour ||| maxdb debug	count=2
function_name	méthode recursivetreeiterator::valid() retourne ||| end	count=1
function_name	de l'objet sous ||| to	count=1
function_name	la fonction imap_header() ||| imap rfc822	count=1
function_name	valeur du paramètre facet.date.hardend ||| facet date hard end	count=1
arg_pair	par le ||| int $flags	count=1
function_name	cosinus hyperbolique pour chaque ||| cosh	count=1
namespace	: la première contient ||| mongogridfs	count=1
function_name	d'une chaîne de ||| load string	count=1
function_name	définit le tag image ||| set picture	count=1
function_name	une ligne depuis le ||| read line	count=1
namespace	méthode gearmanclient::setcontext() ||| gearmanclient	count=1
function_name	pour le ||| set	count=1
namespace	soapfault sert à ||| soapfault	count=1
function_name	à partir d'une ||| load string	count=1
return	composants qui avaient ||| void	count=1
arg_pair	dans la page courante ||| resource $pdfdoc int $image	count=1
function_name	d'activation pour le ||| set activation	count=2
function_name	variadique ||| variadic	count=1
function	nom à [arg_pair_2] ||| [function_name_1] result [arg_pair_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] count [arg_pair_2]	count=13
arg_pair	table table_name spécifiées ||| resource $connection string $table_name	count=1
namespace	la ||| gearmanclient	count=1
function_name	modules à ||| module	count=1
function_name	d'exécution des fichiers ainsi ||| chmod	count=1
arg_pair	statue un ||| resource $sftp string $path	count=2
function_name	d'environnement apache spécifiée ||| apache setenv	count=1
function_name	retourne un identifiant unique ||| object hash	count=1
function_name	façon synchrone et définit ||| set	count=1
function_name	sur le dossier d'archives ||| entry compressionmethod	count=1
arg_pair	utilisant le paramètre oid ||| resource $conn_identifier string $oid	count=1
return	l'aide ||| mongodb	count=1
function_name	positionne le curseur sur ||| move to	count=1
arg_pair	le tableau des ||| array $cascade_activation_functions	count=1
arg_pair	au ||| resource $connection string $table_name	count=1
function_name	la file d'attente s'interrompt ||| poll	count=1
arg_pair	fichier spécial ||| int $mode	count=1
arg_pair	en cache une variable ||| string $key mixed $var	count=1
arg_pair	de ce fichier ||| int $offset	count=1
arg_pair	noeud ||| domnode $node	count=1
function_name	charge ||| load	count=5
arg_pair	image png ||| string $pngname	count=1
rest	change [function_2] ||| [return_1] [function_2]	count=1
return	de ||| array	count=3
function_name	remplace les données ||| replace	count=1
function_name	par ||| form	count=1
namespace	la valeur courante de ||| harupage	count=1
arg_pair	l'url repos_url du ||| string $repos_url	count=1
arg_pair	la recherche ||| string $pattern	count=1
function_name	dans le référentiel ||| svn commit	count=1
function_name	à ||| preview	count=1
arg_pair	tous les appels distants ||| callable $callback	count=1
arg_pair	de remplissage courants ||| float $y1	count=1
function_name	retourne un ||| mysqli get	count=1
arg_pair	les ||| string $pattern	count=1
arg_pair	prompt et retourne immédiatement ||| callable $callback	count=1
function_name	termine la souscription à ||| unsubscribe	count=1
arg_pair	fonction filter_input() ||| mixed $definition	count=1
arg_pair	suppression d'un ||| array $protocoloptions	count=1
arg_pair	nth -ème racine ||| gmp $a int $nth	count=1
function_name	indique ||| is	count=1
namespace	statistiques collectées par le ||| function	count=1
namespace	9 miniatures de l'image ||| imagick	count=1
function_name	compare chaque image ||| compare	count=1
namespace	un ||| gmagick	count=1
function_name	du cache de ||| wincache	count=1
function_name	qui avaient ||| form	count=1
function	[function_name_1] une ||| [function_name_1] field len [arg_pair_2]	count=1
function_name	caractères courant ||| iconv	count=1
function_name	racine ||| gupnp root device	count=1
function_name	récupère le [function_name] depuis ||| get terms [function_name]	count=1
namespace	fourni ||| function	count=1
arg_pair	par la chaîne str ||| string $str mixed $encoding_list	count=1
function_name	cette ||| by	count=1
function_name	[function_name_1] comme pourrait ||| [function_name_2] [function_name_1]	count=4
arg_pair	passés sont ||| int $day int $year	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] int $font [arg_pair_2]	count=3
function_name	[function_name_1] de l'attribut ||| [function_name_1] [function_name_2]	count=1
arg_pair	fonction cubrid_lob_send() lit ||| resource $lob_identifier	count=1
function_name	si ||| mcrypt module is	count=1
function_name	[function_name_1] modification du ||| [function_name_1] [function_name_2]	count=1
arg_pair	collections ||| mongodb $db string $prefix	count=1
arg_pair	cartes ||| int $channel	count=1
function_name	fonction ingres_query() dans ||| ingres	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string string $binary [arg_pair_2]	count=7
function_name	retourne la largeur ||| pdf stringwidth	count=1
function_name	la bibliothèque ucd snmp ||| snmp set quick print	count=1
return	être utilisée pour ||| void	count=1
namespace	un fichier spécial ou ||| function	count=1
namespace	force ||| splfileobject	count=1
arg_pair	les attributs du terminal ||| resource $fd	count=1
function_name	elle ||| set	count=1
function_name	rappel timestampnoncehandler [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	des ||| pharfileinfo	count=2
function_name	protéger tous les caractères ||| escape	count=1
arg_pair	cette méthode factorielle crée ||| int $size	count=1
rest	une [function_2] ||| [function_2] [return_1]	count=2
namespace	du lob ||| oci-lob	count=1
function_name	en-têtes http de la ||| apache request headers	count=1
arg_pair	nombre de jours du ||| int $day	count=1
function_name	données de déboguage oracle ||| oci internal debug	count=1
function_name	similaire ||| field type	count=4
arg_pair	des caractères ||| string $pattern string $string	count=1
function_name	vérifie ||| is	count=1
function_name	crée ||| posix mknod	count=2
namespace	la [namespace] de l'élément ||| [namespace]	count=1
function_name	statut d'un travail en ||| status	count=1
arg_pair	=?iso-8859-1?... est la valeur ||| string $field_value	count=1
arg_pair	domaine courant pour ||| string $domain	count=1
function_name	un verrou sur la ||| getlock	count=1
function_name	dernière erreur de la ||| error string	count=1
function_name	boucle libeio tant ||| event	count=1
function_name	de sortie en cascade ||| set cascade output	count=1
function_name	fichier ||| to file	count=2
function_name	le nœud ||| node path	count=1
function_name	seconde contient ||| construct	count=1
arg_pair	fonction mktime() excepté ||| int $second int $month	count=1
arg_pair	données du jeu ||| string $classname	count=1
function_name	s'interrompt si elle ||| eio set max	count=1
function_name	la fonction d'erreur ||| error function	count=2
function_name	d'attente s'interrompt si ||| set max poll	count=1
namespace	ou pas pour ||| function	count=1
function_name	les clés ||| by key	count=1
return	modifie la valeur ||| string	count=1
arg_pair	du fichier dans ||| string $path	count=1
function_name	les colonnes ||| odbc	count=1
function_name	algorithmes de chiffrement de ||| algorithms	count=1
arg_pair	boîtes ||| string $ref	count=1
function_name	différents ||| preview images	count=2
function_name	la fréquence à ||| frequency	count=1
return	en utilisant des ||| bool	count=1
return	de travaux assigné par ||| string	count=1
arg_pair	ou false si une ||| resource $result int $field_offset	count=1
function_name	fichier spécial ||| mknod	count=1
function_name	les appels ||| loop	count=1
arg_pair	première contient les ||| mongodb $db	count=1
arg_pair	une [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=5
function_name	[function_name_1] binaire ||| [function_name_2] [function_name_1]	count=4
function_name	pour envoyer ||| set by key	count=1
function_name	données ou [function_name] associées avec ||| get [function_name]	count=1
function_name	dictionnaire en_us de_de ||| enchant broker request dict	count=1
function_name	encode ||| encode mimeheader	count=1
function_name	stoppe une base ||| stop	count=1
function_name	de configuration [function_name_2] ||| [function_name_2] load [function_name_1]	count=1
function_name	contrôle ||| control	count=2
function_name	retourne la couleur ||| get color	count=3
function_name	tampon de sortie ||| ob	count=2
function_name	de passe de ||| fbsql database password	count=1
function_name	et ||| destroy	count=1
function_name	récupère la ||| openssl get	count=2
function_name	les données ||| uudecode all	count=1
function_name	un verrou sur la ||| dbplus getlock	count=1
function_name	ssl voir la page ||| ssl	count=1
arg_pair	dans un fichier ||| int $oid	count=1
function_name	la dernière erreur de ||| error string	count=1
function_name	nouvelle instance de document ||| ps new	count=1
function_name	[function_name_1] ligne ||| [function_name_1] [function_name_2]	count=9
return	les fonctions liées à ||| array	count=1
function	[function_name_1] la base ||| [arg_pair_2] [function_name_1]	count=3
function_name	dernière requête appelée ||| mysqli stmt errno	count=2
function_name	informations disponibles ||| meta data	count=1
function_name	objet slob ||| seek slob	count=1
function_name	traitement appliqué à différents ||| preview	count=1
namespace	méthode recursivetreeiterator::valid() retourne false ||| recursivetreeiterator	count=1
return	que ||| void	count=2
function_name	retourne ||| numfields	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] iv [function_name_1]	count=3
function_name	insérer un ||| cubrid	count=1
function_name	numéro de ligne ||| line	count=1
function_name	en arrière plan et ||| high	count=1
function_name	début de celui-ci ||| gzrewind	count=1
function_name	plusieurs canaux [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	déplace ||| seek	count=4
function_name	les itérateurs ajoutés avec ||| array	count=1
function_name	de profilage ||| profiling level	count=1
function_name	les drapeaux ||| uopz flags	count=1
arg_pair	échappe ||| mysqlnd_connection $connection string $escape_string	count=1
arg_pair	en mode wsdl ||| mixed $wsdl array $options	count=1
function_name	julien pour une date ||| cal to jd	count=1
return	que la sortie d'un ||| int	count=1
function_name	liste des noms ||| class names	count=1
function_name	antislashs devant ||| db2 escape string	count=1
function_name	stagnation candidates [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la ||| fam	count=1
function_name	appelé ||| end	count=1
function_name	formatage ultérieur [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	personnalisées dans un ||| set	count=1
arg_pair	est un petit ||| resource $ann float $rprop_delta_min	count=1
arg_pair	à la valeur ||| float $value	count=1
function_name	type d'octets ||| byte type	count=2
function_name	agent émet une exception ||| exception callback	count=1
function_name	fonction ||| mysql field type	count=2
function	de l'image [arg_pair_2] ||| [function_name_1] properties [arg_pair_2]	count=1
function_name	retourne la trace ||| get trace as	count=1
function_name	la base [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la largeur ||| pdf stringwidth	count=1
function_name	ligne ||| fetch column	count=2
function_name	d'alerte [function_name] générés depuis ||| [function_name]	count=1
function_name	la fraction ||| change fraction	count=1
function_name	les lignes ||| dbplus	count=1
function_name	de méthodes ||| methods	count=1
return	retourne ||| void	count=1
function_name	toutes les entrées ||| cat	count=1
function_name	le flux ||| stream copy to stream	count=1
function_name	noms selon ||| lookup namespace	count=2
function	[function_name_1] name afin ||| [arg_pair_2] [function_name_1]	count=1
function	avec [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	de données sqlite ||| sqlite factory	count=2
function_name	sauve ||| pdf save	count=1
function_name	crée un nouveau contexte ||| context new	count=1
function_name	qui décide si ||| mysqlnd qc set is select	count=1
function_name	ligne de ||| fetch row	count=3
arg_pair	mppe [arg_pair] clés ||| [arg_pair]	count=1
function_name	seconde libmcrypt 2.4.x ||| mcrypt cfb	count=1
function_name	de la base ||| dbase	count=1
function_name	[function_name_1] dernière erreur ||| [function_name_2] [function_name_1]	count=3
function_name	phar quand il ||| phar	count=1
function_name	le socket est ||| is	count=1
function_name	utf-8 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	envoyés par le serveur ||| string $url	count=1
function_name	[function_name] actuellement pointée ||| get last used [function_name]	count=3
namespace	le ||| samconnection	count=1
arg_pair	analyse subject ||| mixed $subject int $limit	count=1
function_name	mémoires utilisées par ||| form destroy	count=1
arg_pair	de spotname et comme ||| string $spotname	count=1
arg_pair	de modification d'une variable ||| int $type	count=1
function_name	arguments ||| args	count=1
return	renvoie un tableau ||| array	count=1
return	suivant les liens symboliques ||| array	count=1
function_name	le nom symbolique correspondant ||| token name	count=1
function_name	résultat mnogosearch ||| udm get res	count=1
function_name	un ||| images	count=2
arg_pair	à ||| int $second	count=1
function_name	mots personnelle du ||| to personal	count=1
function_name	d'une image ||| image channel distortion	count=1
arg_pair	occurrence de needle ||| string $needle	count=3
function_name	couleur de remplissage ||| filling color space	count=3
function_name	phar::startbuffering() peut fournir un ||| buffering	count=1
function_name	fréquence en deçà duquel ||| term frequency	count=1
arg_pair	requête ||| string $index	count=1
function_name	l'identifiant unique ||| unique	count=2
function_name	simple ligne ||| pdf fit textline	count=1
function_name	enregistre ||| register	count=1
arg_pair	[arg_pair_1] coordonnées x ||| [arg_pair_1] [arg_pair_2]	count=2
return	un élément ||| boolean	count=1
function_name	dernier ||| last insert	count=1
function_name	efface une collection de ||| delete by	count=1
function_name	le nombre ||| numfields	count=1
function_name	pour lier des ||| lob2 bind	count=1
function_name	lecture aux secondaires ||| slave okay	count=2
function_name	retourne les données de ||| get	count=1
function_name	exécute ||| multi exec	count=1
arg_pair	reconstituée et les ||| int $metric	count=1
arg_pair	un champ ||| string $fieldname	count=1
namespace	termine la ||| function	count=1
namespace	bits ||| pharfileinfo	count=1
function_name	tests ||| uintersect uassoc	count=2
function_name	prend ||| poll time	count=2
function_name	à utiliser ||| set soap	count=1
return	contenu courant du ||| string	count=1
namespace	image ||| gmagick	count=4
namespace	de ||| sqlite3	count=2
function_name	similaire à la ||| fbsql field	count=1
function	[function_name_1] dans ||| [function_name_1] [arg_pair_2]	count=1
namespace	passés sont ||| function	count=1
return	et libère ||| void	count=2
return	contenu du fichier ||| int	count=1
function_name	événements de l'objet com ||| com event sink	count=1
namespace	cette méthode vérifie ||| mongocursorinterface	count=1
function_name	des ||| set info	count=1
arg_pair	le publier à ||| string $target sammessage $msg	count=1
arg_pair	aux coordonnées x y ||| float $x float $y	count=1
function_name	données rrd sous la ||| rrd fetch	count=1
arg_pair	préparer l'environnement pour ||| bool $new_link	count=1
function_name	affectées par la ||| mysqli affected	count=1
function_name	ligne de ||| ibase fetch row	count=1
function_name	la couleur courante de ||| gray	count=1
function_name	les entrées de ||| cat	count=1
function_name	d'erreurs libxml standard et ||| libxml use internal	count=1
arg_pair	permettra d'accéder ||| int $key int $memsize	count=1
function_name	efface une collection ||| delete	count=1
function_name	caractères ||| db2 escape string	count=4
namespace	retourne le code ||| gmagickdraw	count=1
function_name	le serveur ||| immortal	count=1
namespace	un nouveau mutex pour ||| mutex	count=1
function_name	spanscorer pour coloriser les ||| set highlight highlight multi	count=1
function_name	prochain élément ||| next	count=6
function_name	région d'une [function_name_2] ||| [function_name_2] [function_name_1]	count=14
namespace	un curseur typiquement parcourt ||| mongocommandcursor	count=1
function_name	serveur associé à ||| sybase	count=1
namespace	les formats définis ||| cairoimagesurface	count=1
function_name	[function_name] version version ||| [function_name]	count=1
function_name	appel [function_name] ||| [function_name]	count=1
function_name	le fait de définir ||| set highlight	count=1
function_name	plus simple de définir ||| set	count=1
function_name	les appels distants ||| loop	count=1
arg_pair	la table tablename ||| string $tablename	count=1
function_name	[function_name_1] l'uri de ||| [function_name_1] [function_name_2]	count=1
function_name	en argument ||| escape string	count=1
namespace	4 mb par ||| mongocursor	count=1
function_name	chaîne de caractères ||| string	count=2
return	identique à la fonction ||| int	count=1
arg_pair	du message msg_number ||| int $msg_number	count=1
return	sur le ||| void	count=1
namespace	searchd ||| sphinxclient	count=2
function_name	être ||| debug	count=1
namespace	pour la [namespace] ||| [namespace]	count=2
return	avec les processus ||| int	count=1
function_name	snmp spécifié ||| snmpset	count=1
function_name	les caractères brutes d'un ||| return raw	count=1
function_name	calcule la tangente ||| tan	count=1
function_name	priorité basse et ||| do low	count=1
function_name	tant que les ||| event	count=1
function_name	le fichier est ||| open	count=1
namespace	indique ||| tidynode	count=1
arg_pair	fonction memcache::connect() avec la ||| string $host int $port	count=1
function_name	représentation textuelle ||| to	count=1
function_name	mime kopfzeile dans ||| mime encode	count=1
namespace	le ||| mongocursor	count=2
function_name	mssql_connect() mais avec deux ||| mssql	count=1
function_name	[function_name_1] [function_name_2] ||| mongogridfsfile resource [function_name_1] [function_name_2]	count=12
namespace	evstat watcher mais ne ||| evstat	count=1
namespace	si le [namespace] ||| [namespace]	count=4
arg_pair	les métadonnées ||| mongodb $db string $prefix	count=1
function_name	l'encodage du client ||| set client encoding	count=1
function_name	la profondeur ||| getimagedepth	count=1
function_name	l'étape [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	est utilisée pour convertir ||| convert to	count=1
arg_pair	la classe mongodbref ||| mixed $document_or_id	count=1
function_name	à ||| mysql field type	count=2
function_name	curseur oracle ||| oci	count=1
function_name	commence une ||| mqseries begin	count=1
function_name	message d'erreur de la ||| error message	count=1
function_name	[function_name_1] modification ||| [function_name_1] [function_name_2]	count=1
function_name	met à l'échelle ||| scale input	count=1
function_name	chaîne [function_name] ||| maxdb [function_name]	count=1
function_name	premier attribut ||| to first attribute	count=2
namespace	ou l'heure ||| function	count=1
arg_pair	tableau array1 ||| array $array1	count=3
function_name	snmp2_walk() ||| walk	count=1
function_name	fonction ||| get	count=2
arg_pair	verrou sur la ||| resource $relation	count=1
function_name	dimensions contenant ||| ps string geometry	count=1
function_name	une ||| push	count=1
function_name	uri ||| uri	count=1
function_name	le numéro de ||| set	count=1
function_name	libère [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	connexion à ||| connect	count=6
function_name	protéger ||| mysql escape	count=1
namespace	compression utilisée sur le ||| function	count=1
function_name	configure la méthode d'interpolation ||| interpolate method	count=1
function_name	noeud ||| is	count=1
arg_pair	comme une pile ||| array $array	count=1
return	première contient les métadonnées ||| mongodb	count=1
function	succès [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	dessine les bords et ||| pdf closepath	count=1
function_name	définit le terme à ||| upper bound	count=1
function_name	ldap [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	que les ||| int $hour int $minute	count=1
function	[function_name_1] si une ||| [arg_pair_2] [function_name_1]	count=2
function_name	de contrôle ||| gupnp control point	count=1
arg_pair	avec le coefficient slant ||| resource $font_index float $slant	count=1
function_name	détermine le type ||| type	count=2
function_name	le certificat rsa ||| set rsacertificate	count=1
function_name	dessine une ellipse partielle ||| imagearc	count=1
function_name	stride ||| stride	count=1
function_name	à la forme ||| newt form destroy	count=1
arg_pair	pour une chaîne php ||| string $type	count=1
return	doit être appelé ||| void	count=1
namespace	configuration ||| function	count=1
function_name	bibliothèque ucd ||| set quick print	count=1
function_name	[function_name_1] textes ||| [function_name_2] [function_name_1]	count=2
namespace	sur le serveur le ||| mongocursor	count=1
function_name	retourne le contenu ||| stream get	count=1
arg_pair	avec le coefficient ||| resource $font_index	count=1
function_name	pour toutes ||| construct	count=1
function_name	nom de l'artiste ||| artist	count=1
namespace	l'appel à la ||| samconnection	count=1
function_name	supprime la variable ||| unregister	count=1
return	déplace l'itérateur à l'élément ||| void	count=1
arg_pair	ignore la casse ||| string $string	count=1
function_name	un arbre ||| string	count=1
arg_pair	fois la fonction filter_input() ||| mixed $definition	count=1
return	pour la création de ||| string	count=1
arg_pair	[arg_pair_1] établir ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	récupère le délai d'expiration ||| context get	count=1
function_name	types or selon ||| variant or	count=1
return	définir les modules à ||| void	count=1
function_name	fichier fourni et extrait ||| all	count=1
arg_pair	à l'url repos_url ou ||| string $repos_url	count=1
function_name	la page courante du ||| current page	count=1
arg_pair	l'évènement bufferisé spécifié ||| resource $bevent int $events	count=2
function_name	passée en ||| db2	count=1
function	[function_name_1] un seul ||| [function_name_1] bool $flag [arg_pair_2]	count=1
function_name	du résultat [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name] type ||| [function_name]	count=3
return	méthode ev::run() est ||| int	count=2
function_name	dans un document pour ||| set	count=1
arg_pair	pile et empile ||| array $array mixed $value1	count=1
function_name	déplace le curseur ||| move	count=1
function_name	image et la retourne ||| get image	count=1
function_name	la ||| fbsql	count=1
function_name	[function_name_1] un nom ||| [function_name_1] tag [function_name_2]	count=1
arg_pair	au format png ||| int $quality int $filters	count=1
function_name	du boost pour ||| boost	count=1
function_name	est similaire ||| type	count=2
namespace	utile ||| mongoclient	count=1
function_name	délai d'attente ||| timeout	count=1
function	syntaxe [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	mktime() excepté le fait ||| int $minute	count=1
arg_pair	que les ||| int $month	count=1
function_name	de l'itérateur courant interne ||| get iterator index	count=1
function_name	une exclusion logique sur ||| variant xor	count=1
function_name	bordure ||| image border	count=1
function_name	pour la durée du ||| set	count=1
function_name	lit le certificat pkcs#12 ||| openssl pkcs12 read	count=1
function_name	de définir à ||| set	count=1
function_name	retourne l'identifiant ||| id	count=2
namespace	obsolète ||| soapclient	count=1
return	la chaîne ||| void	count=1
arg_pair	offset ||| int $initial_value	count=2
function	écrit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
function_name	s'y trouvent ||| mailparse uudecode all	count=1
function_name	et tous les composants ||| destroy	count=1
function_name	lignes autour des liens ||| set border dash	count=1
arg_pair	src_w et la ||| int $src_w	count=1
return	la méthode recursivetreeiterator::valid() retourne ||| void	count=1
return	par la forme et ||| void	count=1
function_name	oauthprovider::callconsumerhandler() ||| consumer	count=1
arg_pair	nth -ème racine de ||| int $nth	count=1
arg_pair	seconde ||| mongodb $db	count=1
function_name	un ||| set	count=1
namespace	lorsqu'un agent émet ||| gearmanclient	count=1
arg_pair	le rrd ||| string $file	count=1
function_name	sortie de la requête ||| output	count=1
function_name	cette ||| form	count=1
function_name	[function_name_1] déclarante ||| [function_name_2] [function_name_1]	count=4
arg_pair	le réseau complet dans ||| resource $ann string $configuration_file	count=1
function_name	retourne ||| get length	count=1
function_name	défini ||| set	count=1
function_name	fonctionne avec les processus ||| proc close	count=1
function_name	persistante au serveur mysql ||| mysql	count=1
arg_pair	est ||| string $function_name	count=1
return	à ||| int	count=3
function_name	base pour toutes ||| construct	count=1
function_name	souscription à ||| imap unsubscribe	count=1
function_name	de la syntaxe du ||| check syntax	count=1
arg_pair	valeur value1 et ||| mixed $value1	count=1
function_name	contient encore ||| valid	count=4
arg_pair	les deux versions ||| string $version2	count=1
namespace	retourne le ||| gmagickpixel	count=1
function_name	fonction d'activation ||| activation	count=3
function_name	le champ ||| field seek	count=1
function_name	le client pour ||| client	count=1
function_name	à l'identifiant de ||| data	count=1
function_name	[function_name_1] de débogage ||| [function_name_2] [function_name_1]	count=4
namespace	d'une archive phar avec ||| phar	count=1
function_name	notification ||| gupnp service proxy add notify	count=2
function_name	les données ||| uudecode	count=1
namespace	typiquement parcourt ||| mongocommandcursor	count=1
function_name	avec un nom ||| by tag name	count=1
function_name	un ||| create from date string	count=2
function_name	d'extraits mis [function_name] générer ||| get [function_name]	count=1
function_name	passée ||| string	count=1
function_name	retourne des informations sur ||| get internal info	count=1
function_name	[function_name_1] errno ||| [function_name_1] [function_name_2]	count=1
return	ajoutés à la ||| void	count=1
function_name	prochain résultat ||| next	count=1
return	en utilisant les ||| gmagickdraw	count=1
function_name	numéro de colonne courant ||| current column	count=1
arg_pair	des ||| string $src	count=1
arg_pair	fichier ||| string $pathname	count=1
function_name	ligne insérée ||| last oid	count=1
function_name	s'interrompt si ||| set	count=1
function_name	un jeu d'images ||| images	count=1
function_name	ajoute la ||| add	count=1
function_name	code erreur de ||| error code	count=2
function_name	de ligne à width ||| pdf setlinewidth	count=1
arg_pair	la chaîne str ||| string $str int $start	count=1
return	crée une propagation ||| resource	count=1
function_name	ibase sans ||| ibase	count=1
arg_pair	caractères lors de la ||| string $pattern string $string	count=1
arg_pair	contient le contenu des ||| mongodb $db	count=1
function_name	serveur sans attendre le ||| send	count=1
function_name	racine pour ||| set	count=1
return	les paramètres passés sont ||| int	count=1
return	toutes ||| bool	count=1
arg_pair	un ||| resource $result	count=4
function_name	dans la session ||| session	count=1
function	la table [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	un objet syncmutex ||| syncmutex	count=1
function_name	le ||| entry compressionmethod	count=2
arg_pair	d'une carte ||| string $domain string $map	count=1
function_name	pour gérer les ||| set	count=1
function_name	le meilleur encodage pour ||| mailparse determine best xfer encoding	count=1
function_name	erreur survenue lors ||| error	count=1
function_name	définit la qualité ||| set	count=1
function_name	sur le dossier d'archives ||| zip entry compressionmethod	count=1
function_name	[function_name_1] la couleur ||| [function_name_1] image border [function_name_2]	count=1
return	closedir() seul ||| void	count=1
return	tous les paramètres de ||| string	count=1
function_name	vérifie si l'on ||| is	count=1
namespace	où l'exception ||| exception	count=1
function_name	liste de [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	liste les colonnes ||| odbc	count=1
function_name	mime kopfzeile dans l'exemple ||| mime encode	count=1
function_name	la ||| max	count=1
function_name	la file d'attente ||| set max poll	count=1
function_name	[function_name_1] tous les ||| [function_name_1] [function_name_2] except splobjectstorage $storage	count=1
function_name	[function_name_1] rappel à ||| [function_name_1] created [function_name_2]	count=1
namespace	valeur vt_date ou ||| function	count=1
function_name	commence une ||| begin	count=2
function_name	testant les erreurs ||| runkit	count=1
function_name	gestionnaire d'erreurs libxml ||| libxml use internal	count=1
function_name	protéger tous les ||| escape string	count=1
namespace	base ||| tokyotyrant	count=1
return	dans lequel l'erreur est ||| int	count=1
function_name	un arc dans un ||| arc	count=1
arg_pair	dans un document ||| string $index	count=1
function_name	[function_name_1] refaire l'affichage ||| [function_name_2] [function_name_1]	count=3
arg_pair	la seconde contient le ||| mongodb $db	count=1
function_name	suspend ||| suspend monitor	count=2
function	un test [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	clé ||| key	count=4
namespace	construit ||| sdo_das_xml	count=1
return	du fichier ||| array	count=1
function_name	utilisée sur ||| zip entry compressionmethod	count=1
function_name	test sur un ||| test	count=1
namespace	en conservant la corrélation ||| arrayobject	count=1
function_name	révision spécifique si ||| svn log	count=1
arg_pair	l'environnement pour ||| bool $new_link	count=1
function_name	du document utilisée pour ||| enum cache	count=1
function_name	des éléments principaux ||| principals	count=1
namespace	un lot d'objets résultants ||| mongocommandcursor	count=1
function_name	version courante [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	dernière erreur survenue sous ||| error	count=1
arg_pair	le descripteur fd à ||| mixed $fd	count=1
return	file_put_contents() si ||| bool	count=1
namespace	la [namespace] une ||| [namespace]	count=1
function_name	être utilisée pour envoyer ||| set	count=1
namespace	objet imagick ||| imagick	count=1
arg_pair	la position x y ||| int $y	count=1
function_name	spécifié ||| mysql create	count=1
function_name	pour afficher [function_name_2] ||| [function_name_1] debug [function_name_2]	count=2
function_name	élément avec un identifiant ||| get	count=1
arg_pair	rows dans ||| string $delimiter	count=1
function_name	accéder ||| nl langinfo	count=2
function_name	utilisée ||| compressionmethod	count=1
function_name	les données ||| add	count=1
function_name	poids de la ||| getfontweight	count=1
arg_pair	rpc enregistrés ||| callable $error_callback	count=1
function_name	copie de la base ||| copy	count=1
arg_pair	cache une variable ||| string $key	count=1
arg_pair	de rappel callback pour ||| callable $callback mixed $parameter	count=1
return	uniquement ||| array	count=1
function_name	de ||| add	count=1
return	du texte à la ||| bool	count=1
function_name	de résultats mnogosearch ||| udm get	count=1
function_name	exception de ||| set using exceptions	count=1
namespace	de la bibliothèque sqlite3 ||| sqlite3	count=1
arg_pair	sur la relation relation ||| resource $relation	count=1
function_name	succès ||| cubrid	count=2
function_name	[function_name_1] fréquence minimale ||| [function_name_2] [function_name_1]	count=1
namespace	le ||| function	count=17
return	excepté le ||| int	count=1
function_name	instance ||| sqlsrv fetch object	count=2
function_name	[function_name_1] parser ||| [function_name_1] [function_name_2]	count=1
function_name	ibase sans [function_name_2] ||| [function_name_1] commit [function_name_2]	count=1
return	détermine si un fichier ||| bool	count=1
function_name	tailles de clés supportées ||| supported key sizes	count=2
namespace	ressources ||| function	count=1
arg_pair	contient les métadonnées ||| mongodb $db string $prefix	count=1
function_name	de mémoire ||| shmop delete	count=1
function_name	de la requête ||| query field	count=1
function	en_us de_de [arg_pair_2] ||| [function_name_1] dict [arg_pair_2]	count=1
function_name	serveur qui [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	l'échelle les ||| fann scale	count=4
function_name	libère de ||| free	count=1
function_name	une page pour utilisation ||| pdi page	count=1
function_name	retourne une [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	entre 0.0 et 1.0 ||| hsl	count=1
function_name	[function_name_1] statut de ||| [function_name_1] [function_name_2]	count=1
function_name	efface un ||| delete	count=1
function_name	du fichier fourni et ||| mailparse uudecode all	count=1
return	le nombre ||| int	count=17
arg_pair	initialise ces paramètres ||| int $from_neuron	count=1
function_name	va protéger tous ||| escape string	count=1
return	différences et sur le ||| string	count=1
namespace	partie du lob oracle ||| oci-lob	count=1
namespace	le contenu ||| mongogridfs	count=1
function	[function_name_1] base de ||| [function_name_1] mysqlnd_connection $connection [arg_pair_2]	count=1
function_name	exporte [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	modifie la ||| set	count=1
function_name	de configuration include_path ||| include path	count=1
function_name	dernière commande ||| errno	count=2
function_name	l'identifiant ||| row id	count=1
namespace	de travaux assigné ||| gearmanjob	count=1
function_name	récupère [function_name_2] ||| [function_name_1] current [function_name_2]	count=2
arg_pair	en ||| resource $image	count=1
function_name	fichiers ||| uudecode all	count=2
function_name	les champs facet qui ||| facet	count=1
function_name	[function_name] d'un ||| ingres field [function_name]	count=2
function_name	crée un ||| mknod	count=1
arg_pair	fichier fieldname téléchargé ||| resource $fdf_document string $fieldname	count=1
function_name	[function_name_1] en utf-16 ||| [function_name_1] [function_name_2]	count=1
function_name	les lignes de la ||| dbplus	count=1
function_name	lecture seule ||| chmod	count=1
return	un tableau avec le ||| array	count=1
arg_pair	ajoute un [arg_pair] dans le ||| [arg_pair]	count=1
function_name	décide si ||| mysqlnd qc set is select	count=1
function_name	définit la ||| set	count=11
arg_pair	à une ||| resource $imap_stream	count=1
function_name	excepté ||| gmmktime	count=1
function_name	[function_name_1] gabarit ||| [function_name_2] [function_name_1]	count=1
arg_pair	tableau assoc_array dans ||| array $assoc_array int $options	count=1
function_name	route [function_name] dans ||| add [function_name]	count=1
namespace	une connexion ||| mongoclient	count=1
function_name	ligne lue dans le ||| mysql fetch	count=1
function_name	liste des serveurs connus ||| reset server list	count=1
function_name	les ||| add buffer	count=2
function_name	connexion ftp ||| ftp connect	count=1
arg_pair	un serveur avec les ||| resource $id array $config	count=1
function_name	définit la [function_name_2] ||| [function_name_1] max word [function_name_2]	count=1
arg_pair	statue un lien symbolique ||| string $path	count=1
return	modifie des ||| bool	count=1
return	les fonctions htmlspecialchars() ||| array	count=1
function_name	la clé suivante ||| dba nextkey	count=1
namespace	la forme et ||| function	count=1
return	conservant la corrélation ||| void	count=1
arg_pair	une ||| string $host	count=1
function_name	des données de déboguage ||| internal debug	count=1
function_name	survenue) depuis le code ||| code facility	count=1
function_name	passe ||| fbsql database password	count=2
function_name	région ||| geoip region	count=1
function_name	[function_name_1] courant de ||| [function_name_2] [function_name_1]	count=22
arg_pair	utilisateur php event_handler ||| callable $event_handler	count=1
function_name	peut être utilisée pour ||| set	count=1
arg_pair	une valeur fournie qui ||| int $color float $value	count=1
return	pclose() hormis le fait ||| int	count=1
arg_pair	à memcached::getdelayed() mais ||| callable $value_cb	count=1
function_name	recode la ||| recode	count=1
arg_pair	espace ||| string $namespaceuri string $qualifiedname	count=1
function_name	libère toutes les ressources ||| event base free	count=1
arg_pair	base de [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	un ||| mongocursor	count=1
function_name	de transformation ||| trans matrix	count=1
return	similaire à la ||| string	count=2
function_name	algorithme par [function_name] ||| mcrypt module is [function_name]	count=3
function_name	durée ||| set include path	count=2
function_name	les informations ||| info	count=3
arg_pair	appels distants rpc enregistrés ||| callable $error_callback	count=1
arg_pair	le paramètre tag ||| string $tag	count=1
function_name	la [function_name] de ||| set text [function_name]	count=1
function_name	le serveur ||| sqlsrv server	count=1
function_name	objet lorsque l'objet ||| set	count=1
function_name	compressé gzip représenté ||| gzread	count=1
return	à la position ||| bool	count=1
return	supprime un nom ||| resource	count=1
namespace	méthode ne ||| pharfileinfo	count=1
function_name	un fichier spécial ou ||| mknod	count=1
rest	l'analyseur [function_2] ||| [function_2] [return_1]	count=3
function_name	retourne la propriété ||| get	count=1
function_name	s'interrompt ||| set max poll	count=1
function_name	composants qui ||| form	count=2
function_name	d'attente s'interrompt ||| eio	count=1
arg_pair	d'exécution de seconds secondes ||| int $seconds	count=1
function_name	postgresql associée ||| pg	count=1
arg_pair	une base de ||| string $database_name resource $link_identifier	count=1
arg_pair	de résultats result ||| int $index	count=1
function_name	test sur ||| module self test	count=1
function_name	remplace les textes qui ||| ereg replace	count=1
function_name	retourne la taille décompressée ||| filesize	count=1
function_name	vérifie si l'on doit ||| query is select	count=1
function_name	correspondant au nom de ||| by name	count=1
namespace	par défaut $this ||| directory	count=2
return	comme une ||| int	count=1
namespace	ou similaire ||| function	count=1
function_name	fichiers distant en ||| ssh2 sftp	count=1
function_name	l'image spécifiée avec un ||| preview	count=1
function_name	avec [function_name] right_operand et ||| [function_name]	count=1
arg_pair	sur le nombre ||| int $offset string $encoding	count=1
function_name	les droits d'un fichier ||| perms	count=1
return	change les ||| bool	count=1
function_name	la première ligne de ||| first	count=1
function_name	la position courante ||| ps	count=1
namespace	mémoires utilisées ||| function	count=1
arg_pair	l'accès au service daemon ||| string $daemon string $address	count=1
function_name	facteurs d'échantillonnage ||| set sampling factors	count=1
function_name	précision des nombres décimaux ||| set environment	count=1
arg_pair	vérifier si l'accès ||| string $user bool $nodns	count=1
function_name	dossier d'archives spécifié par ||| zip entry compressionmethod	count=1
function_name	version ||| info	count=1
return	du fichier fourni ||| array	count=1
function_name	envoyant le contrôle ||| control	count=1
function_name	l'échelle les sorties dans ||| fann scale	count=1
arg_pair	les caractères alphabétiques ||| string $pattern	count=1
return	crée ||| string	count=1
function_name	en base64 ||| imap base64	count=1
function	[function_name_1] sur ||| [arg_pair_2] [function_name_1]	count=5
return	[return] stoppe ||| [return]	count=3
namespace	par le ||| gearmanjob	count=1
function_name	le contenu ||| ob get	count=1
arg_pair	de la connexion ||| bool $value	count=1
function_name	un bloc de mémoire ||| shmop	count=1
arg_pair	les clients à l'écoute ||| int $denominator	count=1
function_name	patch et enregistre le ||| xdiff file patch	count=1
function_name	[function_name_1] statut de ||| [function_name_2] [function_name_1]	count=1
function_name	champs colonnes ||| dbase	count=1
function_name	l'on quitte ||| decl	count=1
arg_pair	configure la largeur ||| float $width	count=1
arg_pair	nécessaire à ||| string $character_set	count=1
function_name	place une image ou ||| image	count=1
function_name	la taille de ||| mb strwidth	count=2
arg_pair	le style de ||| int $type float $disp_time	count=1
function_name	sur la prochaine ||| next	count=1
arg_pair	document xml basé sur ||| string $diff	count=1
function_name	l'espacement entre les mots ||| word space	count=1
arg_pair	le contenu d'un élément ||| string $attr_name	count=1
function_name	avec un identifiant ||| by id	count=1
function_name	un ||| update	count=2
function_name	avec d'autres fonctions pspell ||| pspell	count=1
arg_pair	connexion existante à ||| int $close_type	count=1
return	données en utilisant le ||| bool	count=1
function_name	métadonnées ||| construct	count=1
arg_pair	identique à ||| int $minute	count=1
function_name	à l'échelle les ||| fann scale train	count=1
function_name	cette fonction est ||| by	count=1
function_name	file ||| max poll time	count=2
function_name	indiquent l'arc de remous ||| swirlimage	count=1
function_name	est similaire à la ||| element	count=1
function_name	soap ||| soap fault	count=2
arg_pair	de texte ||| string $blockname string $text	count=1
function_name	nouveau filtre entier à ||| set filter range	count=1
arg_pair	hyperlien ||| float $lly float $urx	count=2
return	les données ||| bool	count=1
namespace	courant ou pour ||| function	count=1
arg_pair	[arg_pair] numérique d'un ||| [arg_pair]	count=3
return	entière et ||| array	count=1
return	un jeu de ||| array	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2338
function_name	pour ||| set resource	count=1
function_name	fichiers encodés qui ||| mailparse uudecode	count=1
return	secret et ||| array	count=1
namespace	l'instance imagick ||| imagick	count=1
return	de champs colonnes ||| int	count=1
arg_pair	l'hôte et le port ||| string $server int $port	count=1
arg_pair	valeur ||| float $value	count=1
function_name	groupe d'appartenance du ||| get group	count=1
function_name	récupère l'intance de ||| get	count=1
function_name	fichiers encodés qui s'y ||| all	count=1
arg_pair	l'algorithme spécifié ||| string $algorithm string $lib_dir	count=1
function_name	implosé par un ||| implode image	count=1
function_name	[function_name_1] inspectée ||| [function_name_2] [function_name_1]	count=7
function_name	à guillemets ||| imap qprint	count=1
return	le code erreur de ||| int	count=1
arg_pair	une boîte aux lettres ||| resource $imap_stream string $mailbox	count=1
function	ax || [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	de rappel ||| mixed $pattern	count=1
function_name	et tous les ||| form	count=1
arg_pair	affiche le prompt ||| callable $callback	count=1
function_name	pdf [function_name_2] ||| [function_name_1] open [function_name_2]	count=1
function_name	est de type numérique ||| is numeric	count=1
function_name	à ||| escape	count=1
function_name	[function_name_1] afficher ||| [function_name_2] [function_name_1]	count=1
function_name	retourne ||| tidy get	count=1
function_name	recherche le premier ||| first	count=1
function_name	un certain délai sur ||| immortal	count=1
arg_pair	par fopen() [arg_pair] file_get_contents() ||| [arg_pair]	count=1
arg_pair	anonyme à partir ||| string $args string $code	count=1
function_name	l'anglet ||| miter limit	count=1
function_name	retourne l'id ||| posix getuid	count=1
arg_pair	par =?iso-8859-1?... est la ||| string $field_name string $field_value	count=1
function_name	cette fonction analyse la ||| parse	count=2
return	nombre de ||| int	count=5
function_name	avaient été ajoutés ||| form	count=1
function_name	cosinus hyperbolique pour ||| trader cosh	count=1
return	en interne ||| bool	count=1
function_name	seconde libmcrypt 2.4.x ||| mcrypt ofb	count=1
function_name	ressources mémoires utilisées ||| form	count=1
arg_pair	à un niveau ||| resource $p float $g	count=2
function_name	qui ne peuvent pas ||| metadata	count=1
arg_pair	de caractères str en ||| string $str	count=1
arg_pair	contextes v8js ||| bool $auto_enable	count=1
function_name	sous la forme ||| to	count=1
return	termine la ||| bool	count=1
function_name	retourne un identifiant unique ||| hash	count=1
function_name	en priorité basse ||| do low	count=2
function_name	à la chaîne de ||| db2	count=1
function_name	été ajoutés à ||| newt form	count=1
function_name	qui sera démarré ||| add launchlink	count=1
arg_pair	un attribut dans un ||| array $attributes	count=1
arg_pair	paramètre variable_name ||| resource $introspection string $variable_name	count=1
function	dom et [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	données du ||| all	count=1
function_name	nombre ||| int	count=1
namespace	durée ||| function	count=1
arg_pair	le fichier filename ||| bool $use_include_path	count=1
function_name	remplit un bloc ||| pdf fill textblock	count=1
function_name	ou plusieurs fonctions ||| add function	count=1
arg_pair	jours ||| int $year	count=1
function_name	clé [function_name_2] ||| [function_name_2] [function_name_1]	count=7
return	d'une ||| string	count=3
function_name	retourne le statut de ||| get state	count=1
function_name	les entités html de ||| html entity decode	count=1
function_name	informations concernant le transfert ||| getinfo	count=1
function_name	configure l'orientation de ||| orientation	count=1
function_name	la taille de ||| set	count=1
function_name	fichier ||| metadata	count=2
arg_pair	contexte log_cmd_delete lors de ||| array $server	count=1
function_name	verrou d'écriture sur ||| cubrid lock write	count=1
function_name	[function_name_1] enfant ||| [function_name_2] [function_name_1]	count=1
function_name	contient le contenu ||| construct	count=1
function_name	un serveur mysql ||| mysql	count=1
arg_pair	offset et dans la ||| int $offset	count=1
function_name	avoir de conteneur de ||| set	count=1
arg_pair	donnés sans attendre ||| string $stmtname	count=1
function_name	translation ||| translate	count=1
function_name	einer mime ||| iconv mime	count=1
function_name	la police de caractère ||| setfont	count=1
function_name	symbolique correspondant ||| token	count=1
arg_pair	établir l'environnement pour une ||| string $dbname string $userid	count=1
function_name	ouvre un document ||| open pdi document	count=2
arg_pair	résultats listant les paramètres ||| string $schema	count=1
function_name	si elle prend ||| eio set max poll	count=1
arg_pair	deux collections ||| mongodb $db string $prefix	count=1
function_name	désigné par le paramètre ||| xattr set	count=1
function_name	est une nom de ||| is valid	count=1
function_name	un fichier ||| posix	count=1
namespace	avec ||| function	count=1
function_name	récupère l'expression ||| get	count=1
function_name	[function_name_1] [function_name_2] l'algorithme et ||| [function_name_2] [function_name_1]	count=1
namespace	la dernière requête sql ||| sqlite3	count=1
function_name	la fonction cubrid_query() ||| cubrid	count=1
function_name	annule la ||| rollback	count=1
namespace	configuration include_path pour la ||| function	count=1
function_name	lit ||| fdf get file	count=1
function_name	sqlite identifiée par la ||| sqlite	count=1
function_name	spécifié en unicode ||| get unicode	count=1
arg_pair	modifie les ||| resource $fd	count=1
function_name	connexions ouvertes ||| connections	count=1
function_name	lit l'orientation de l'image ||| get image orientation	count=1
function_name	active le suivi des ||| trace	count=1
return	$this ||| void	count=2
return	des bases ||| array	count=1
function_name	connexion à une ||| connect uri	count=1
function_name	l'événement de ||| event	count=1
namespace	réponses ||| mongocursor	count=1
namespace	un certain ||| mongocursor	count=1
function_name	de sévérité ||| severity	count=1
function	[function_name_1] texte text ||| [function_name_1] [arg_pair_2]	count=1
function_name	arrière plan et ||| high	count=1
function_name	fonction mktime() excepté le ||| gmmktime	count=1
function_name	une route [function_name] ||| add [function_name]	count=1
function_name	[function_name_1] id3v1 ||| [function_name_2] [function_name_1]	count=2
function_name	mémoires utilisées par la ||| form destroy	count=1
namespace	considère ||| function	count=1
function_name	les données ||| mailparse uudecode all	count=1
function_name	position courante [function_name_2] ||| [function_name_1] text [function_name_2]	count=1
return	du document en coordonnées ||| bool	count=1
arg_pair	grand degré ||| string $cwd	count=1
arg_pair	données database_name complète ||| string $database_name	count=1
function_name	retourne des résultats ||| get	count=1
return	appelé une ||| void	count=1
function_name	pour afficher [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	statut en [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	: la ||| mongogridfs	count=1
function_name	efface les ||| delete file	count=1
function_name	avec un identifiant donné ||| get element by id	count=1
return	informations de ||| string	count=1
function_name	si ||| eio	count=1
namespace	recherche sur les caractères ||| function	count=1
arg_pair	d'un ||| int $x int $y	count=1
arg_pair	un hyperlien à la ||| float $urx	count=1
function_name	correspondant au type ||| type	count=1
return	la file ||| bool	count=1
arg_pair	paramètres mask ||| int $mask	count=1
return	effectue une ||| resource	count=1
function_name	serveur sans attendre le ||| send query	count=1
return	les fichiers encodés ||| array	count=1
function_name	d'attente s'interrompt si elle ||| max poll	count=1
arg_pair	listant les ||| string $table-name	count=1
namespace	numéro de la ligne ||| splfileobject	count=1
function_name	boîtes aux lettres ||| imap getmailboxes	count=1
arg_pair	le fait que les ||| int $year	count=2
namespace	être comprise entre ||| imagickpixel	count=1
function_name	retourne le nombre ||| get	count=2
function	[function_name_1] spécifié local_socket ||| [arg_pair_2] [function_name_1]	count=2
function_name	la police [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	sont ||| int $year	count=2
return	effectue une ||| void	count=1
function_name	timestampnoncehandler ||| timestamp nonce	count=1
function_name	nouveau ||| new	count=1
arg_pair	première occurrence de ||| string $haystack string $needle	count=1
namespace	l'instance yaf_application ||| yaf_application	count=1
rest	un [function_2] ||| [return_1] [function_2]	count=2
arg_pair	par l'argument offset et ||| int $offset	count=1
function_name	qui sont ||| destroy	count=1
function_name	connexion à un serveur ||| ssh2 connect	count=1
function_name	[function_name_1] attributs ||| [function_name_1] external [function_name_2]	count=1
arg_pair	soapserver en mode wsdl ||| mixed $wsdl	count=1
namespace	supprime ||| function	count=1
return	incluant les composants ||| void	count=1
arg_pair	dans l'argument result ||| int $pri	count=2
function_name	si le prochain élément ||| next	count=1
return	de tous ||| bool	count=1
function_name	la [function_name] ||| cubrid [function_name]	count=3
function_name	est similaire à la ||| field	count=2
arg_pair	spécifié par son ||| resource $result int $field_offset	count=1
arg_pair	démarre une transaction distribuée/xa ||| mixed $connection	count=1
function_name	envoi ||| loop	count=1
function_name	fonction ingres_query() ||| ingres	count=1
return	modules ||| void	count=1
function_name	[function_name_1] connexions ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] algorithmes ||| [function_name_1] [function_name_2]	count=1
arg_pair	lui associe un ||| int $cols	count=1
function_name	la largeur [function_name_2] ||| [function_name_2] [function_name_1]	count=8
namespace	uniquement avec une connexion ||| mongoclient	count=1
arg_pair	une entrée spécifique d'un ||| resource $link_identifier	count=1
function_name	[function_name_1] décrivant ||| [function_name_1] [function_name_2]	count=4
return	fonction est ||| domelement	count=1
function	jacobi de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	file_get_contents() retourne [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	de ligne ||| fetch	count=1
function_name	fichier fourni et ||| uudecode all	count=1
function_name	les ressources mémoires ||| newt	count=1
arg_pair	sont ||| int $second int $month	count=1
function_name	de données rrd ||| rrd	count=5
function_name	exécution en parallèle d'autres ||| task background	count=1
namespace	chargés par l'application ||| function	count=1
function_name	dans ||| attributes	count=1
function_name	socket ||| stream socket accept	count=1
arg_pair	d'attributs étendus d'un fichier ||| int $flags	count=1
function_name	couleur d'arrière-plan de l'image ||| trim image	count=1
function_name	de consommer trop ||| mssql free statement	count=1
arg_pair	chaîne str ||| string $encoding	count=1
arg_pair	si une ||| resource $result	count=1
function_name	description du cipher ||| cipher info	count=1
function_name	seule la liste ||| ps open	count=1
function_name	pour récupérer le nombre ||| cubrid num	count=1
function_name	connexion au ||| connect	count=1
function_name	[function_name_1] id3v1 qui ||| [function_name_2] [function_name_1]	count=2
namespace	à l'élément ||| spldoublylinkedlist	count=1
function_name	retourne le texte ||| gnupg	count=1
function_name	le fichier pdf généré, ||| pdf	count=1
function_name	la méthode oauthprovider::callconsumerhandler() ||| consumer	count=1
function_name	requête ||| query	count=9
function_name	au ||| set session trace socket	count=1
function_name	niveaux ||| preview images	count=2
arg_pair	packet_id ||| resource $packet_id mixed $var_name	count=1
namespace	par l'objet pdostatement ||| pdostatement	count=1
function_name	ligne suivante ||| next	count=1
namespace	valeur de ||| function	count=1
function_name	l'objet slob ||| read slob	count=1
function_name	[function_name_1] enfant au ||| [function_name_2] [function_name_1]	count=1
function_name	en-têtes de ||| headers	count=2
arg_pair	la taille de size ||| array $array int $size	count=1
function_name	la prochaine requête ||| next	count=1
function_name	nombre de lignes dans ||| msql num rows	count=1
function_name	gamma ||| imagegammacorrect	count=1
function_name	[function_name_1] depuis ||| string [function_name_2] [function_name_1]	count=3
namespace	l'exception émise par le ||| yar_server_exception	count=1
function_name	un jeu [function_name] ||| add [function_name]	count=1
return	pclose() hormis ||| int	count=1
function_name	sous la ||| to string	count=1
function_name	libère la mémoire ||| free	count=3
arg_pair	valeur ||| int $value	count=1
return	avec ||| string	count=2
function_name	[function_name_1] [function_name_2] requête ||| [function_name_2] [function_name_1] resource $result int $index	count=2
function_name	affectées ||| mysqli affected	count=1
function_name	supprime un [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	pour la dernière ||| errno	count=1
namespace	les verrous qui ont ||| function	count=1
function_name	l'arbre construit ||| entry	count=1
arg_pair	fait ||| int $hour	count=1
function_name	[function_name_1] la longueur ||| [function_name_1] max word [function_name_2]	count=1
function_name	[function_name_1] l'extension ||| [function_name_2] [function_name_1]	count=4
function_name	lier des données ||| lob2 bind	count=1
function_name	verrou exclusif sur ||| lock	count=1
function_name	au niveau de gris ||| setgray	count=1
arg_pair	tableau associatif assoc_array ||| array $assoc_array	count=1
arg_pair	au gestionnaire multiple mh ||| resource $mh	count=1
return	document xml ||| string	count=1
function_name	de couleur ||| color	count=1
function_name	clé suivante ||| dba nextkey	count=1
function_name	[function_name_1] [function_name_2] résultat d'une requête ||| [function_name_2] [function_name_1] resource $result int $index	count=2
arg_pair	spéciales [arg_pair] html ||| [arg_pair]	count=1
function_name	caractères passée en argument ||| escape	count=1
function_name	parent ||| parent	count=1
namespace	réalisation de ||| gearmantask	count=2
arg_pair	verrouille ou déverrouille un ||| int $operation int $wouldblock	count=1
function_name	le groupe d'appartenance du ||| group	count=1
arg_pair	largeur de src_w ||| int $src_w	count=1
function_name	des ||| metadata	count=1
function_name	[function_name_1] un dossier ||| [function_name_2] [function_name_1]	count=5
function_name	phar::startbuffering() peut fournir ||| start buffering	count=1
arg_pair	préparer l'environnement pour la ||| string $passwd	count=1
function_name	un fichier temporaire tous ||| mailparse uudecode	count=1
namespace	retourne ||| solrparams	count=1
function_name	de gris ||| ps setgray	count=1
namespace	méthode ev::run() ||| ev	count=2
function_name	la version [function_name_2] ||| [function_name_2] [function_name_1]	count=7
return	vérifie ||| bool	count=4
function_name	[function_name_1] courante du ||| [function_name_2] [function_name_1]	count=4
namespace	fonctionne ||| function	count=1
return	à la chaîne ||| string	count=1
namespace	du document d'entrée ||| solrinputdocument	count=1
function_name	[function_name_1] frontbase ||| [function_name_2] [function_name_1]	count=6
function_name	pour insérer un ||| cubrid set	count=1
function_name	détruit l'élément ||| offset unset	count=1
function_name	retourne l'index de ||| get	count=1
arg_pair	memcached::set() hormis le ||| mixed $value int $expiration	count=1
arg_pair	identique à ||| int $second int $month	count=1
arg_pair	à memcached::getmulti() mais ||| int $flags	count=1
arg_pair	héberge la file de ||| array $data	count=1
function_name	la ||| ps	count=1
arg_pair	options d'analyseur ||| resource $bbcode_container int $flags	count=1
namespace	le ||| splfileinfo	count=2
function_name	la syntaxe ||| php check syntax	count=1
function_name	spécifiée avec un traitement ||| preview images	count=1
return	convertit un nom ||| string	count=1
function_name	de deux ||| construct	count=1
function_name	nombre de champs du ||| sybase num fields	count=1
function_name	en ignorant la ||| ireplace	count=1
function_name	de la réponse du ||| response	count=1
arg_pair	base event_base avec event ||| resource $event resource $event_base	count=1
function_name	succès ou false si ||| cubrid	count=1
function_name	a ||| msql	count=1
function_name	d'un blob ||| blob	count=1
function_name	nouvelle instance ||| ps new	count=1
arg_pair	req_identifier de la valeur ||| resource $req_identifier	count=1
function_name	de type objet ||| object	count=1
function_name	typiquement parcourt un ||| size	count=1
function_name	code de contrôle ||| control	count=1
arg_pair	proches dans un ||| string $field_override	count=1
function_name	identique à la fonction ||| close	count=1
arg_pair	la seconde contient le ||| mongodb $db string $prefix	count=1
return	curseur ||| mongocommandcursor	count=1
function_name	défini la fonction d'activation ||| set activation function	count=3
function_name	statut spécifié grâce à ||| task status	count=1
function_name	de mysql ||| mysql	count=1
function_name	le pid du serveur ||| pid	count=1
function_name	retourne ||| get number	count=1
arg_pair	remplit avec ||| resource $image	count=1
function_name	le premier [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	sortir via la ||| got exit	count=2
namespace	distants ||| yar_concurrent_client	count=1
function_name	facette ||| facet	count=2
arg_pair	attribut de l'entrée dn ||| resource $link_identifier string $dn	count=1
function_name	[function_name] avec un ||| get [function_name]	count=1
function_name	la ||| destroy	count=2
arg_pair	chaîne str ||| string $str string $delimiter	count=1
function_name	la première ||| strpos	count=1
function_name	commande sql à la ||| exec	count=1
function_name	la bibliothèque exslt ||| has exslt support	count=1
function_name	attention : cette ||| get bytes	count=1
function_name	un attribut ||| attributes	count=1
namespace	jeu de caractères ||| gmagickdraw	count=1
arg_pair	fichiers dans l'argument result ||| int $pri	count=2
function_name	traitement appliqué à ||| preview images	count=1
function_name	copie exacte ||| dbplus rcrtexact	count=1
function	fonction extrait [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	du texte ||| gmagickdraw	count=1
function_name	désactive la temporisation de ||| ob end clean	count=1
function_name	la connexion donnée par ||| yaz	count=1
function_name	tous les composants qui ||| newt form destroy	count=1
function_name	toutes les entrées de ||| yp cat	count=1
function_name	la dernière réponse ||| last response	count=2
function_name	élément avec un identifiant ||| get element by	count=1
arg_pair	utilisant le gestionnaire font ||| resource $pdfdoc int $font	count=1
return	qui avaient été ||| void	count=1
return	valeurs à une ||| tokyotyrant	count=1
arg_pair	retourne le fichier dans ||| int $use_include_path	count=1
function_name	feof() ||| stream eof	count=1
namespace	le nombre ||| sqlite3	count=1
function_name	depuis une instance glo ||| cubrid load from glo	count=1
arg_pair	mode wsdl ou non-wsdl ||| mixed $wsdl array $options	count=1
function_name	[function_name_1] sqlstate ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] variable ||| [function_name]	count=1
function_name	les données du tampon ||| add	count=1
function_name	l'itération ||| iteration	count=3
function	une ligne [arg_pair_2] ||| [function_name_1] object [arg_pair_2]	count=1
function_name	fréquence à ||| min doc frequency	count=1
function_name	dans le vecteur d'entrée ||| input	count=1
function_name	ibase sans la ||| ibase	count=1
function_name	cette fonction vérifie si ||| is	count=1
function_name	si ||| max poll time	count=2
arg_pair	ou ordinaire ||| int $major int $minor	count=1
function_name	la portée ||| lookup namespace	count=1
function_name	diriger la clé key ||| key	count=2
function_name	pour définir ||| set	count=3
arg_pair	l'entrée dn ||| resource $link_identifier string $dn	count=5
function_name	requête ||| mlt query	count=1
arg_pair	à des enregistrements existantes ||| string $key array $columns	count=1
function_name	de ||| images	count=2
function_name	tronque à ||| ftruncate	count=1
function_name	libère ||| newt form destroy	count=2
function_name	compile ||| opcache compile file	count=2
function	[function_name_1] le résultat ||| [arg_pair_2] [function_name_1]	count=5
function_name	[function_name_1] requête odbc ||| [function_name_2] fetch [function_name_1]	count=1
function_name	récupérer ou définir l'identifiant ||| id	count=1
arg_pair	fonction memcache::connect() ||| int $port	count=1
function_name	à un marqueur ||| bind array	count=1
function_name	socket créé précédemment avec ||| socket	count=1
arg_pair	ignore la casse des ||| string $pattern	count=1
function_name	[function_name_1] termes de ||| [function_name_1] num query [function_name_2]	count=1
function_name	courante pour l'affichage ||| current text pos	count=1
arg_pair	l'élément par value ||| int $value	count=1
function_name	du résultat ||| field	count=1
namespace	qui ne peuvent ||| pharfileinfo	count=1
function_name	des caractères ||| eregi	count=1
function	ligne de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	dictionnaire représenté par l'identifiant ||| crack closedict	count=1
function_name	à l'échelle ||| scale input	count=1
namespace	à envoyer ||| mongocursorinterface	count=1
namespace	serveur de messagerie ||| samconnection	count=1
function_name	récupère l'url complète de ||| url	count=1
arg_pair	sont pas attrappées ||| string $cb	count=1
function_name	du script en ||| include	count=1
function_name	db2_connect() ||| db2	count=1
arg_pair	de rappel pour l'événement ||| mixed $arg	count=1
arg_pair	les métadonnées et ||| mongodb $db string $prefix	count=1
arg_pair	condamnations svn pour ||| string $repository_url int $revision_no	count=1
function_name	dernière tentative ||| db2 conn error	count=2
arg_pair	cartes de seuil de ||| string $threshold_map int $channel	count=1
function_name	est ||| proc close	count=2
arg_pair	d'un élément dans une ||| string $attr_name int $index	count=1
function_name	les bords et ||| pdf closepath	count=1
function_name	récupère le délai d'expiration ||| gupnp context get	count=1
function_name	détermine si un ||| is	count=1
namespace	entrée moins le nombre ||| ev	count=1
function_name	conversion automatique entre le ||| encoding	count=1
arg_pair	la position courante du ||| resource $psdoc	count=1
function_name	logarithme naturel pour chaque ||| trader ln	count=1
function_name	retourne un ||| get children	count=5
return	courant du tampon de ||| string	count=1
function	[function_name_1] de résultat ||| [function_name_1] [arg_pair_2]	count=1
function_name	printable créée suivant ||| printable	count=1
namespace	de l'image ||| gmagick	count=2
function_name	les méta-données de ||| metadata	count=1
function_name	un identifiant ||| get	count=1
arg_pair	jeu de résultats donné ||| int $fetch_flag	count=1
function_name	de données paradox ||| px numfields	count=1
function_name	document dom ||| import dom	count=1
function_name	pour convertir ||| convert to data	count=1
return	le flux de pixels ||| string	count=1
namespace	si l'objet courant simplexmliterator ||| simplexmliterator	count=1
function_name	qui avaient été ajoutés ||| form destroy	count=1
function_name	retourne ||| get coding	count=1
function_name	un identifiant ||| by	count=1
arg_pair	si l'accès au ||| bool $nodns	count=1
function_name	libeio ||| eio	count=1
function_name	efface un flux de ||| pdf delete	count=1
function_name	cours ||| include	count=1
function_name	une équivalence ||| variant eqv	count=1
function_name	[function_name_1] en-têtes ||| [function_name_1] [function_name_2]	count=1
namespace	verrou exclusif qui a ||| function	count=1
return	fonction est identique à ||| int	count=1
namespace	sur l'instance pointée par ||| function	count=1
namespace	seule tâche ||| gearmanclient	count=1
function_name	la ||| element	count=1
function_name	file_get_contents() retourne le ||| file get contents	count=2
arg_pair	d'un entier ou ||| mixed $number	count=1
function_name	contexte de l'application ||| context	count=1
function_name	cette fonction libère ||| newt form	count=1
function_name	similaire à la fonction ||| mysql	count=1
function_name	l'image ||| type	count=1
return	en ajustant ||| bool	count=1
function_name	vers un tableau ||| get array copy	count=2
arg_pair	fonction memcache::connect() avec la ||| string $host	count=1
function	[function_name_1] spécifié par ||| [function_name_1] name [arg_pair_2]	count=1
namespace	par ||| collectable	count=1
function_name	mysqli_connect() ||| mysqli	count=1
function_name	supprime toutes ||| rzap	count=1
arg_pair	base de ||| string $database	count=2
function_name	distance ||| pixel similar	count=1
return	tampon fourni ||| bool	count=1
function_name	service ||| set service	count=1
function_name	une route [function_name] dans ||| add [function_name]	count=1
function_name	pour stocker des ||| set metadata	count=1
function_name	ligne sur l'image ||| line	count=1
arg_pair	lecture de ce fichier ||| int $offset	count=1
function_name	recode ||| recode string	count=2
function_name	données du tampon fourni ||| buffer	count=1
namespace	php d'un ||| samconnection	count=1
function_name	statistiques des [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	les informations de différence ||| diff	count=1
arg_pair	log_cmd_delete lors ||| array $server	count=1
function_name	la fonction ingres_query() dans ||| ingres fetch	count=1
function_name	[function_name_1] demande ||| [function_name_2] [function_name_1]	count=1
function_name	ligne depuis ||| line	count=1
return	d'un ||| bool	count=1
arg_pair	php event_handler en tant ||| string $event_name1	count=1
function_name	récupère le nombre de ||| get field count	count=1
function_name	sous la ||| fetch	count=1
arg_pair	fichier identifié ||| resource $ftp_stream	count=1
function_name	définit le nombre ||| set	count=2
function_name	du champ [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	une fonction définie ||| string $name	count=1
function_name	elle ||| eio set max	count=1
function_name	qui décide ||| mysqlnd qc set is	count=1
return	si elle ne ||| bool	count=1
function_name	de type strpos() en ||| strrpos	count=1
function_name	xml ||| xml set element	count=1
arg_pair	lit ou définit ||| resource $link_identifier	count=1
function_name	l'itération lorsque ||| iteration	count=1
return	retourne le ||| int	count=11
arg_pair	memcache::connect() avec ||| string $host int $port	count=1
return	taille fixe ||| splfixedarray	count=1
function_name	profondeur ||| depth	count=5
arg_pair	crée un document xml ||| string $src	count=1
function_name	timestampnoncehandler qui sera ||| timestamp nonce handler	count=2
arg_pair	fonction est ||| string $pattern	count=1
function_name	alias basé [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de l'étape d'erreur sarprop ||| fann set sarprop step error	count=2
function	clé metaphone [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	objet ||| set	count=1
function_name	durée du script ||| include path	count=1
namespace	ou datetime ||| function	count=1
arg_pair	fichier remote_file présent sur ||| string $remote_file	count=1
namespace	les ||| function	count=14
arg_pair	vérifie une ||| string $uri string $method	count=1
arg_pair	[arg_pair] cache ||| [arg_pair]	count=1
arg_pair	à un ||| string $country_code	count=1
function_name	les ||| loop	count=1
function_name	de remous autour ||| swirlimage	count=1
arg_pair	place un point ||| resource $p	count=1
return	du tampon ||| string	count=1
arg_pair	une chaîne ||| string $content	count=1
function_name	phar est ||| is	count=1
function_name	à l'esclave ou bien ||| mysqlnd ms	count=1
arg_pair	le ||| int $year	count=2
function_name	multiplie les ||| mul	count=1
function_name	récupère la ||| get facet	count=1
arg_pair	d'astuces sql pour l'activation ||| int $condition_type	count=1
return	en d'autres termes la ||| int	count=1
function_name	la syntaxe du ||| php check syntax	count=1
function_name	preg_replace() hormis ||| preg replace callback	count=1
function_name	position donnée ||| offset	count=1
function_name	du profile de l'image ||| getimageprofile	count=1
function_name	de gris ||| setgray	count=2
function_name	tâche en priorité basse ||| low	count=1
function_name	efface un flux ||| delete	count=1
arg_pair	une requête aql ||| string $query	count=1
return	une ||| void	count=4
function_name	objet contenant la ||| object	count=1
namespace	objet reflectionmethod ||| reflectionmethod	count=1
function_name	demande un ||| getlock	count=1
return	la brosse courante pour ||| bool	count=1
function_name	un certain délai ||| immortal	count=1
function_name	include_path ||| path	count=1
arg_pair	la forme d'un nouvel ||| int $x int $y	count=1
function_name	[function_name] envoyées ||| ldap [function_name]	count=3
arg_pair	des caractères ||| string $string	count=1
arg_pair	la commande command ||| string $command	count=1
arg_pair	le gestionnaire de queues ||| string $qmanagername resource $hconn	count=1
function_name	[function_name_1] le nombre ||| [function_name_1] [function_name_2]	count=1
function_name	la fréquence ||| frequency	count=4
function_name	mémoire ||| shmop	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] response string $xmlresponse [arg_pair_2]	count=1
function_name	[function_name] pour pouvoir ||| [function_name] packet	count=1
arg_pair	à cert ||| mixed $cert	count=1
function_name	le nom d'hôte dns ||| host	count=1
function_name	de conteneur de ||| set	count=1
arg_pair	à la fonction fbsql_field_name() ||| int $field_offset	count=1
function_name	valeurs de ||| ldap get values	count=1
function_name	de needle dans ||| strstr	count=1
function_name	un élément enfant au ||| child	count=1
return	lignes ||| int	count=1
function	[function_name_1] le résultat ||| [function_name_1] fetch [arg_pair_2]	count=1
function_name	ressource de connexion ||| connect	count=1
return	par défaut ||| void	count=2
function_name	régulier ||| gupnp context timeout	count=1
function_name	en incluant ||| destroy	count=1
function_name	de connexion ||| cubrid connect	count=1
function_name	message d'erreur qui ||| result error	count=1
function_name	blob dont l'identifiant est ||| ifx free blob	count=1
arg_pair	les [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	essaie ||| fbsql drop db	count=1
function_name	peuvent pas ||| set metadata	count=1
function_name	référencé à la file ||| stack	count=1
rest	[return_1] xml parser ||| [function_2] [return_1]	count=3
return	en crée ||| bool	count=1
function_name	requêtes ||| eio grp	count=1
function_name	définit la qualité ||| mysqlnd ms set	count=1
arg_pair	une connexion ||| resource $stream	count=1
arg_pair	de résultats listant ||| string $schema	count=8
function_name	[function_name_1] schéma de ||| [function_name_2] [function_name_1]	count=1
function_name	à ||| close	count=2
arg_pair	définit l'acl pour ||| string $id string $rights	count=1
function_name	encodés qui ||| mailparse uudecode all	count=1
function_name	de résultats ||| cubrid result	count=1
function_name	français républicain en nombre ||| frenchtojd	count=1
function_name	émet une exception ||| exception	count=1
function_name	vérification des ||| udiff assoc	count=1
arg_pair	en lisant ses en-têtes ||| int $subjectlength	count=1
function_name	couleur courante de ||| gray	count=1
function_name	lit ||| callback read	count=1
arg_pair	pour établir l'environnement ||| string $dbname string $userid	count=1
function_name	encodé en base64 ||| base64	count=1
return	retourne ||| int	count=11
namespace	modèle ||| svmmodel	count=2
function_name	un traitement appliqué à ||| preview images	count=1
function_name	avec la méthode oauthprovider::callconsumerhandler() ||| consumer	count=1
function_name	compression individuelle des fichiers ||| compress files	count=1
return	similaire à la fonction ||| string	count=2
namespace	caractères d'instance xml ||| sdo_das_xml	count=1
function_name	drm [function_name] actif pour ||| [function_name] protection	count=1
function_name	extrait une région d'une ||| region	count=1
function_name	récupère la résolution ||| getimageresolution	count=1
function_name	différents niveaux ||| preview images	count=1
function_name	fonction spécifie le ||| yaz element	count=2
function_name	la file ||| stack	count=1
function_name	nombre de documents ||| count	count=2
return	cette méthode ||| bool	count=3
function_name	flux ||| stream	count=13
function_name	l'échelle ||| scale train	count=1
namespace	du dossier directoryiterator ||| directoryiterator	count=1
arg_pair	séquence sequence ||| string $sequence	count=1
function_name	sybase associé à ||| sybase	count=1
function_name	de version mineure de ||| minorversion	count=1
namespace	récupère la ||| gmagick	count=2
function_name	dernière requête insert ||| insert id	count=1
function_name	s'interrompt si elle prend ||| poll	count=1
function_name	une url ||| assemble	count=1
function_name	[function_name_1] demande ||| [function_name_1] [function_name_2]	count=1
namespace	syncmutex ||| syncmutex	count=1
function_name	configure l'échelle du ||| pdf scale	count=1
function_name	pour fermer ||| cubrid lob2 close	count=1
namespace	courant ||| harupage	count=1
function_name	documents ||| count	count=3
arg_pair	sur le ||| resource $session string $term_type	count=1
function_name	liste tous les bases ||| list dbs	count=1
function_name	[function_name_1] d'équilibrage de ||| [function_name_1] [function_name_2]	count=1
function_name	la ||| end	count=3
function_name	code d'erreur comme ||| strerror	count=1
function_name	de chaque [function_name] ||| [function_name]	count=3
function_name	canal alpha de l'image ||| set image alpha channel	count=1
return	sur les caractères alphabétiques ||| int	count=1
arg_pair	est au format ||| resource $connection string $table_name	count=1
return	la méthode ev::run() est ||| int	count=2
function_name	de passe de la ||| fbsql database password	count=1
arg_pair	l'argument offset ||| resource $lob_identifier int $offset	count=1
function_name	termscomponent ||| terms	count=1
function_name	msql_fetch_array() ||| msql	count=1
arg_pair	une requête au groupe ||| resource $grp resource $req	count=1
arg_pair	qu'elle ignore la ||| string $pattern string $string	count=1
function_name	un ||| facet query	count=1
function_name	auparavant [function_name] chiffré ||| [function_name]	count=1
arg_pair	de rappel callback ||| mixed $pattern callable $callback	count=1
function_name	le système ||| posix uname	count=1
arg_pair	de src_w et la ||| int $src_w	count=1
return	[return] flux représenté ||| [return]	count=1
arg_pair	chaîne d'une ||| int $start	count=1
function_name	[function_name_1] avec ||| [function_name_1] [function_name_2]	count=3
function_name	retourne le nombre de ||| numfields	count=1
function_name	protège les caractères ||| escape string	count=1
arg_pair	à la résolution ||| float $yresolution	count=1
function_name	en un timestamp unix ||| timestamp	count=1
function_name	seule la liste ||| open	count=1
return	mémoire ||| bool	count=1
function_name	[function_name_1] police ||| [function_name_1] [function_name_2]	count=2
namespace	fonction prépare php ||| function	count=1
function_name	des différences et ||| merge	count=1
function_name	message ||| message	count=1
return	déplace de la ||| void	count=1
arg_pair	demande un ||| resource $relation	count=1
function_name	informations du dernier tableau ||| pdf info	count=1
function_name	calcule l'entier ||| floor	count=1
arg_pair	envoi un message d'erreur ||| string $message	count=1
function_name	libère ||| event base free	count=2
function_name	à ||| add	count=3
function_name	transaction ibase [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] statut en ||| [function_name_2] [function_name_1]	count=1
function_name	pour fermer ||| lob2 close	count=1
function_name	un jeu ||| db2 field	count=1
function_name	de noms ||| namespace	count=6
arg_pair	dans le calendrier calendar ||| int $calendar	count=1
function_name	[function_name_1] le nombre ||| [function_name_2] [function_name_1]	count=1
function_name	le dessin ||| imagesetbrush	count=1
return	tous les fichiers encodés ||| array	count=1
return	une ||| bool	count=14
function_name	requête appelée ||| mysqli stmt	count=1
arg_pair	brosse ||| resource $image	count=1
return	défini l'endroit où les ||| void	count=1
function_name	chaîne ||| escape	count=1
function_name	t61 ||| t61	count=1
function_name	ressources mémoires utilisées ||| newt form	count=1
function_name	le client pour certains ||| client	count=1
function_name	nombre de couches du ||| num	count=1
function_name	retourne ||| task	count=2
arg_pair	l' oid fournie ||| resource $conn_identifier string $oid	count=2
function	bytecode [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	terminé son exécution ||| collectable	count=1
function_name	nombre de lignes dans ||| num rows	count=2
function_name	s'interrompt si elle ||| set max	count=1
function_name	ajoutés à ||| destroy	count=1
function_name	la couleur ||| set image background color	count=1
function_name	si ||| poll time	count=2
function_name	qui ||| form	count=2
function_name	serveur ||| immortal	count=1
arg_pair	unique distinguished name qui ||| array $extraattribs	count=1
arg_pair	le résultat de la ||| resource $result	count=1
function_name	définit l'image à utiliser ||| set mask	count=1
function_name	fonction [function_name] rappel à ||| [function_name]	count=1
function_name	prochaine [function_name_2] ||| [function_name_1] [function_name_2]	count=5
namespace	donné ||| domdocument	count=1
arg_pair	point milieu àx y ||| float $y float $radius	count=1
function_name	l'espace de couleurs ||| colorspace	count=2
function_name	les options ||| flags	count=1
arg_pair	la fonction cubrid_set_add() ||| string $set_element	count=1
return	des paramètres au ||| bool	count=1
function_name	la session ||| enchant dict is in session	count=1
function_name	gestionnaire d'erreurs libxml ||| libxml use internal errors	count=1
function_name	[function_name_1] numéro d'erreur ||| [function_name_2] [function_name_1]	count=1
function_name	l'image dans ||| image	count=1
function_name	un ||| update attributes	count=4
arg_pair	envoyés par le ||| string $url int $format	count=1
function_name	cache percent value ||| cache percent	count=1
function_name	une exception) ||| send fail	count=1
return	en d'autres ||| int	count=1
function_name	nombre de ||| ifx num	count=1
function_name	[function_name_1] version ||| mysqli [function_name_1] client [function_name_2] mysqli $link	count=1
return	contenu des ||| mongodb	count=1
arg_pair	changé en la valeur ||| mixed $value	count=1
namespace	contenu courant ||| function	count=1
function_name	connecte le dernier point ||| closepath stroke	count=1
function_name	spécifié par ||| zip entry	count=1
return	de la totalité ||| resource	count=1
function_name	au service exposé ||| gupnp service	count=1
function_name	retourne le numéro ||| pdf get	count=1
function_name	est utilisée pour lier ||| cubrid lob2 bind	count=1
function_name	définit la fréquence ||| set mlt min doc frequency	count=1
function_name	un jeu d'images dans ||| images	count=1
arg_pair	occurrence de ||| mixed $needle	count=1
function_name	non dans la session ||| session	count=1
function_name	données ||| uudecode	count=1
arg_pair	mode wsdl ou non-wsdl ||| array $options	count=1
function_name	pdflib de type texte ||| pdf set	count=1
function_name	minimale du document ||| enum cache min default	count=1
arg_pair	un autre format ||| int $format int $compression	count=1
function_name	du texte ||| ps	count=1
arg_pair	le fichier remote_file depuis ||| string $remote_file	count=2
function_name	données d'entrainement à ||| output train data	count=1
return	des serveurs ||| bool	count=1
arg_pair	x509cert et ||| mixed $x509cert	count=1
function_name	peut être utilisée ||| set module	count=1
function_name	terminé son ||| set	count=1
function_name	les valeurs de ||| values	count=1
function_name	un bloc d'image ||| imageblock	count=1
return	un verrou sur ||| int	count=1
namespace	si la ||| spldoublylinkedlist	count=1
namespace	pool à collecter les ||| pool	count=1
function_name	message d'erreur ||| error	count=12
arg_pair	excepté le fait que ||| int $year	count=2
function_name	retourne le ||| get	count=37
function_name	valeur d'un attribut dans ||| langdepvalue	count=1
function_name	erreur une exception de ||| set using exceptions	count=1
arg_pair	qu'elle ignore ||| string $string	count=1
function_name	tous les fichiers ||| uudecode	count=1
arg_pair	le texte text ||| string $fontfile string $text	count=1
function_name	d'attente s'interrompt si elle ||| time	count=1
arg_pair	d'une base de ||| string $database	count=1
return	les fichiers ||| mongodb	count=1
function_name	fonction time() ||| get timestamp	count=1
function_name	sauvegarde la ||| save	count=2
function_name	est similaire à ||| mysql field type	count=1
return	modifie la ||| string	count=1
function_name	champ field [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function	[function_name_1] x509cert et ||| [arg_pair_2] [function_name_1]	count=3
function_name	sur le système ||| posix uname	count=1
function_name	objet lorsque l'objet a ||| set	count=1
function_name	est similaire à ||| by	count=1
namespace	lieu de stocker une ||| memcached	count=1
return	que les paramètres ||| int	count=1
function_name	documents supérieures à 4 ||| dead	count=1
function_name	des antislashs devant ||| db2	count=1
function_name	durée du ||| set	count=1
function_name	définit la ||| mysqlnd ms set	count=1
arg_pair	pour le ||| int $mode int $key_len	count=1
function_name	à ||| fetch	count=1
function_name	un élément avec ||| element by id	count=1
function_name	un identifiant ||| by id	count=1
arg_pair	strcmp() elle n'est ||| string $str2	count=1
function_name	dimensions [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la police type1 ||| type1	count=1
function_name	de dernière modification ||| file time	count=1
arg_pair	les données ||| callable $callback mixed $data	count=1
arg_pair	deux collections : ||| mongodb $db string $prefix	count=1
rest	insère une [function_2] ||| [function_2] [return_1]	count=2
function_name	et retourne un sommaire ||| fetch overview	count=1
function_name	cubrid_drop() ||| drop	count=1
function_name	dictionnaire ||| crack closedict	count=2
function_name	liste contient encore ||| valid	count=1
arg_pair	et retourne la ||| bool $before_needle string $encoding	count=1
namespace	serveur memcache avec ||| memcached	count=1
arg_pair	l'objet ||| int $rows	count=1
function_name	fonction [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	des informations ||| multi info read	count=1
function_name	éteint la temporisation de ||| ob end flush	count=1
function_name	une action qui ||| action	count=1
namespace	par ||| directory	count=2
function_name	récupère le ||| pdf get	count=1
function_name	dans un fichier temporaire ||| all	count=1
function_name	récupère le nombre de ||| mysql num	count=1
return	retourne si ||| bool	count=1
function_name	d'entrelacement ||| image interlace scheme	count=2
function_name	retourne ||| end	count=1
function_name	décroissant ||| decay	count=1
arg_pair	chaîne str [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	l'extérieur de fonction ||| runkit import	count=1
return	partir d'une chaîne ||| sdo_das_xml_document	count=1
function_name	un élément avec un ||| by id	count=1
function_name	antislashs devant les ||| db2	count=1
function_name	de preg_replace() ||| preg	count=1
function_name	patch et enregistre ||| file patch	count=1
function_name	si elle prend plus ||| eio set	count=1
function_name	du serveur racine ||| gupnp root device	count=1
arg_pair	pour établir ||| string $dbname string $userid	count=1
function_name	sarprop ||| fann get sarprop	count=1
function_name	utilisée pour ||| set by	count=1
arg_pair	username et le ||| string $username	count=1
function_name	retournant un tableau d'informations ||| query	count=1
function_name	tant ||| eio	count=1
return	et ||| int	count=1
arg_pair	page cookie ... ||| resource $link int $pagesize	count=1
function_name	pour ||| set	count=21
function_name	possède des [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	à preg_replace() ||| preg filter	count=2
namespace	un verrou sur la ||| function	count=1
function_name	et extrait dans ||| mailparse	count=1
function_name	de fond [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	lors [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
return	normalement ||| int	count=1
function_name	libère toutes les ||| event base free	count=1
arg_pair	fait que les ||| int $second	count=1
function_name	à la chaîne ||| escape	count=1
function_name	processus [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	compris entre 0.0 et ||| hsl	count=1
arg_pair	spécifie un préfixe ||| string $prefix string $field_override	count=1
function_name	valeur de ||| include	count=1
function_name	incluant les composants qui ||| newt form destroy	count=1
return	mise en ||| bool	count=1
function_name	identifiant donné ||| get element by id	count=1
namespace	à la forme ||| function	count=1
function_name	retire un gestionnaire ||| curl multi remove	count=1
function_name	d'occurrences de la chaîne ||| substr	count=1
function_name	retourne la dernière erreur ||| dict get error	count=1
function_name	base [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	spécifié en ||| bool	count=1
arg_pair	espace de noms associé ||| string $namespaceuri string $qualifiedname	count=1
arg_pair	retourne la chaîne str ||| string $str	count=4
function	[function_name_1] rouge ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	chaîne str1 en str2 ||| string $str2	count=1
function_name	l'image dans [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	à ||| shmop	count=1
function_name	est privée ||| is private	count=4
function_name	la fonction geoip_org_by_name() ||| org by	count=1
arg_pair	php event_handler en ||| callable $event_handler string $event_name1	count=1
function_name	nombre maximal [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	sur le serveur le ||| immortal	count=1
function_name	de rappel à appeler ||| callback	count=1
arg_pair	son contenu dans un ||| int $oid	count=1
function_name	le dernier identifiant ||| db2 last insert id	count=1
function_name	numérateur du taux ||| task numerator	count=1
arg_pair	paramètre filename sous ||| string $filename string $mode	count=1
function_name	tâche est ||| is	count=1
function_name	dont on connaît le ||| fstat	count=1
function_name	revient au début de ||| rewind	count=1
function	de linejoin [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
arg_pair	le pointeur du fichier ||| int $length	count=1
namespace	boucle ||| function	count=1
function_name	schéma depuis la ||| cubrid schema	count=1
function_name	de l'étape initiale ; ||| fann set rprop delta zero	count=1
function_name	modifie la valeur ||| set include	count=1
arg_pair	une ||| string $feature	count=1
function_name	à la forme en ||| form destroy	count=1
function_name	la version échappée ||| cubrid real escape	count=1
function_name	de déboguage php ||| debug backtrace	count=1
arg_pair	est une méthode ||| string $key mixed $value	count=1
function_name	chaque valeur ||| trader	count=1
function_name	[function_name_1] de l'entrée ||| [function_name_1] [function_name_2]	count=1
function_name	la syntaxe ||| check syntax	count=1
arg_pair	dans ||| int $length	count=1
function_name	données du ||| uudecode	count=1
function_name	à la chaîne ||| string	count=1
function_name	image le nombre de ||| set image	count=1
function_name	dénominateur du taux ||| task denominator	count=1
arg_pair	et ses voisins immédiats ||| mixed $bordercolor	count=2
namespace	retourne le ||| gearmantask	count=2
function_name	et envoie ||| handle	count=1
namespace	pointeur interne au ||| solrdocument	count=1
return	a ||| void	count=1
return	la bibliothèque ||| array	count=1
function_name	de l'analyseur xml ||| xml	count=1
function_name	sortie de ||| output	count=1
function_name	n'a plus ||| dead	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] lo export [arg_pair_2]	count=10
return	la fin et ||| bool	count=1
function_name	eio_chmod() modifie ||| eio chmod	count=1
arg_pair	dans un fichier ||| resource $connection	count=1
arg_pair	dernière occurrence de ||| string $haystack	count=2
function_name	transactions xa ||| xa	count=1
arg_pair	message pour l'uid uid ||| resource $imap_stream int $uid	count=1
function_name	file_get_contents() retourne le ||| get contents	count=1
arg_pair	dans ||| resource $pdfdoc int $image	count=1
function_name	de l'anglet ||| miter	count=1
function_name	objet slob ouvert ||| ifxus seek slob	count=1
function_name	réception d'une notification de ||| gupnp service proxy add notify	count=1
arg_pair	unix et windows compris ||| int $operation	count=1
function_name	associé [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	à memcached::append() mais ||| append by	count=1
return	retourne le code du ||| string	count=1
function_name	lieu d'être une fonction ||| user defined	count=1
function_name	depuis ||| read	count=1
function_name	le gestionnaire d'erreurs libxml ||| libxml	count=1
namespace	la base de données ||| tokyotyrant	count=1
return	où la méthode ev::run() ||| int	count=2
function_name	parcourt un lot ||| batch	count=1
namespace	caractères passée en ||| function	count=1
function_name	[function_name_1] et une ||| [function_name_1] [function_name_2]	count=1
function_name	une instance ||| construct	count=1
arg_pair	ou à un fichier ||| string $destination	count=1
arg_pair	une ||| string $uri	count=1
function_name	le [function_name_2] ||| function resource [function_name_1] [function_name_2]	count=2
function_name	longueur [function_name_2] ||| [function_name_2] word [function_name_1]	count=4
arg_pair	fonction yaz_record() retourne un ||| resource $id	count=1
arg_pair	tracage ||| resource $connection string $module_name	count=1
function_name	étant inactif ||| stop	count=1
arg_pair	autres fonctions eio_* ||| int $pri	count=1
return	seul le ||| void	count=2
namespace	le document source ||| xmldiff\file	count=1
arg_pair	tous ||| callable $callback	count=1
function_name	récupère le nombre de ||| get	count=2
return	[return] depuis ||| [return]	count=1
namespace	un élément ||| domdocument	count=1
function_name	retourne le type d'une ||| get type	count=1
function_name	[function_name_1] d'erreur utilisée ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] bases de ||| [function_name_1] [function_name_2]	count=6
function_name	ouvre une connexion persistante ||| pconnect	count=2
function_name	informations concernant ||| getinfo	count=1
arg_pair	résultat dans un ||| resource $result	count=1
function_name	quoted printable créée suivant ||| quoted printable	count=1
arg_pair	un ||| array $array int $sort_flags	count=1
function_name	avaient été ajoutés à ||| newt form	count=1
function_name	l'extension pour ||| image type to extension	count=1
arg_pair	table table_name qui ||| resource $connection string $table_name	count=1
function_name	nouveau filtre décimal à ||| set filter float	count=1
arg_pair	cubrid_bind() ||| mixed $bind_value	count=1
function_name	la fréquence ||| min doc frequency	count=1
function_name	texte à la ||| ps show	count=1
function_name	retourne la ||| zip	count=1
function_name	analyse [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	à ajouter ||| add	count=1
function_name	utilisant les [function_name] fournis ||| new instance [function_name]	count=1
namespace	par le paramètre ||| function	count=3
function_name	la ||| by	count=1
function_name	needle ||| mb strstr	count=2
function_name	récupère la [function_name_2] ||| [function_name_1] page [function_name_2]	count=3
return	à la position courante ||| bool	count=1
function_name	julien pour une date ||| to jd	count=1
namespace	un nouveau document xml ||| xmldiff\memory	count=1
function	extrait [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	x et ||| int $x	count=1
function_name	établit [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	tous ||| uudecode all	count=2
return	données personnalisées dans ||| void	count=1
function_name	dernier accès au fichier ||| atime	count=1
function_name	considère array ||| array	count=1
function_name	préparée pour une exécution ||| prepare	count=1
function_name	connexion spécifié ||| mysql create	count=1
function_name	flux et attend que ||| stream select	count=1
function_name	libère les ressources ||| newt	count=1
namespace	active ou désactive l'affichage ||| function	count=1
arg_pair	une ||| string $servername	count=1
return	d'un serveur de messagerie ||| bool	count=1
function_name	les composants ||| newt form destroy	count=2
function_name	similaire à la fonction ||| field	count=2
function_name	à la fonction ||| get element by id	count=1
function_name	la largeur ||| getimagewidth	count=1
namespace	retourne le gestionnaire de ||| gearmanjob	count=1
function_name	gestionnaire de rappel timestampnoncehandler ||| timestamp nonce	count=1
function_name	modules à surveiller ||| set module	count=1
function_name	met à l'échelle ||| scale output	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] error [function_name_2]	count=12
arg_pair	cette ||| string $function_name	count=1
namespace	les données du document ||| harudoc	count=1
function_name	d'activation pour le neurone ||| fann set activation	count=2
function_name	z39.50 scan request sur ||| yaz scan	count=1
function_name	[function_name] le ||| [function_name]	count=6
function_name	une représentation yaml ||| yaml emit file	count=1
function_name	la largeur ||| width	count=8
function_name	retourne un ||| get image	count=1
arg_pair	basant sur les ||| resource $ann	count=1
function_name	protéger tous les caractères ||| mysql escape string	count=1
namespace	la position courante ||| function	count=1
arg_pair	entraîne une machine vectorielle ||| array $weights	count=1
function_name	antislashs devant les ||| db2 escape	count=1
namespace	forme en incluant ||| function	count=1
function	[function_name_1] une ||| [function_name_1] outline [arg_pair_2]	count=1
function_name	un arbre de ||| string	count=1
arg_pair	l'appel direct ||| string $arguments	count=1
arg_pair	principal avec ||| string $principal	count=1
namespace	du début du tampon ||| eventbuffer	count=1
function_name	retourne le ||| pgsql get	count=1
function_name	du tampon de sortie ||| ob get	count=1
namespace	la base ||| mongocursor	count=1
namespace	phar ||| phar	count=5
function_name	données ||| factory	count=1
function_name	récupère l'url complète ||| get request url	count=1
return	annotation ||| int	count=1
function_name	jeu de caractères courant ||| iconv set	count=1
function_name	de transformation [function_name_2] ||| harupage bool [function_name_2] [function_name_1]	count=2
arg_pair	retourne les dimensions le ||| array $imageinfo	count=1
namespace	bloc ||| function	count=1
arg_pair	la valeur du cookie ||| string $name string $value	count=1
namespace	[namespace] que vous ||| [namespace]	count=2
function_name	charge une image ||| image file	count=1
function_name	la valeur de ||| set include	count=1
function_name	en ||| set	count=1
function_name	fonction mktime() ||| gmmktime	count=1
function_name	fichier rrd ||| rrd	count=1
function_name	similaire à la ||| get element	count=1
function_name	[function_name_1] largeur ||| [function_name_1] [function_name_2]	count=1
arg_pair	la valeur value ||| mixed $value int $options	count=1
function_name	par ibase_connect() ou ibase_pconnect() ||| ibase drop	count=1
namespace	corrélation entre les ||| arrayobject	count=1
return	du tampon de ||| string	count=1
return	pour passer à ||| string	count=1
function_name	de rappel pour readline ||| readline callback handler install	count=1
function_name	fichier mesurée en ||| fseek	count=1
function_name	d'entrainement en commençant ||| train	count=1
arg_pair	fournir ||| int $status	count=1
function_name	police de ||| setfont	count=1
function_name	et ||| set timeout	count=1
function_name	une nouvelle csrcertificate ||| new	count=1
arg_pair	la chaîne address ||| string $address	count=1
arg_pair	à fournir ||| int $status	count=1
function_name	connecte le ||| ps closepath	count=1
function_name	champs facet qui ||| set facet	count=1
function_name	casse ||| array change key case	count=1
return	donc cette ||| bool	count=1
function_name	connue sur le serveur ||| known	count=1
arg_pair	[arg_pair] avec ||| [arg_pair]	count=1
function_name	qui est retourné ||| sybase fetch	count=1
function_name	survenue lors de ||| error	count=2
arg_pair	un bloc ||| int $key	count=1
return	de 9 miniatures ||| bool	count=1
namespace	entrée ||| ev	count=1
arg_pair	fusionne 3 chaînes ||| string $old_data string $new_data1	count=1
return	un bloc de mémoire ||| bool	count=1
return	mktime() excepté le fait ||| int	count=1
arg_pair	la clé key ||| mixed $value	count=2
function_name	passées dans la ligne ||| getopt	count=1
namespace	tampon d'événements ||| eventbuffer	count=1
arg_pair	les définitions ||| array $config	count=1
rest	[return_1] [function_2] ||| [return_1] show text [function_2]	count=4
function_name	un identifiant donné ||| get element by id	count=1
function_name	contenu du cache ||| wincache	count=1
function_name	la profondeur de l'image ||| set image depth	count=1
function	une classe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	fréquence ||| mlt min doc frequency	count=1
function	[function_name_1] les arguments ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	de la clé /status ||| resource $fdf_document string $status	count=1
return	à la ||| int	count=1
arg_pair	fonction fbsql_field_name() ||| int $field_offset	count=1
function_name	ou ||| put	count=2
arg_pair	name ||| string $name	count=1
function_name	file_get_contents() retourne ||| file get contents	count=2
function_name	utilisé ||| maxdb	count=1
arg_pair	snmp2_get() ||| string $community	count=1
namespace	suivant les formats définis ||| cairoimagesurface	count=1
function_name	la ||| set image bias	count=1
function_name	composants qui ||| destroy	count=2
function_name	modification du fichier ||| ctime	count=1
function_name	forcer la date de ||| touch	count=1
function_name	lit ||| odbc cursor	count=1
arg_pair	réseau ||| resource $ann int $from_neuron	count=1
return	une chaîne et commençant ||| string	count=1
arg_pair	str en chaîne ||| array $convmap	count=1
return	script php ||| bool	count=1
function_name	d'activation dans [function_name_2] ||| [function_name_1] steepness [function_name_2]	count=1
arg_pair	la résolution désirée ||| float $xresolution float $yresolution	count=1
arg_pair	de texte et ||| string $text	count=1
arg_pair	de rappel à appeler ||| mixed $callback	count=1
arg_pair	julien en ||| int $juliandaycount bool $hebrew	count=1
arg_pair	y applique diverses options ||| string $optlist	count=1
arg_pair	pour l'activation de la ||| mixed $condition	count=1
function_name	retire un filtre ||| filter	count=1
function_name	db2_connect() et libère ||| db2	count=1
arg_pair	du jeu ||| resource $stmt string $classname	count=1
function_name	nouveau filtre entier à ||| filter	count=2
function_name	peut être utilisé pour ||| maxdb	count=1
return	sur le ||| mongocursor	count=1
arg_pair	nombre gmp a ||| gmp $a	count=1
arg_pair	value ||| int $value	count=1
return	> [return] ssi ||| [return]	count=1
arg_pair	d'un fichier ||| int $length int $pri	count=1
function_name	uri d'espace ||| elements by tag	count=1
arg_pair	de la ||| string $pattern	count=1
function_name	un attribut dans ||| update attributes	count=1
rest	un tableau [function_2] ||| [return_1] get [function_2]	count=4
function_name	[function_name_1] sqlstate retournée ||| [function_name_2] [function_name_1]	count=1
namespace	réservé par ||| function	count=1
function_name	des boîtes aux lettres ||| imap	count=1
function_name	l'entier le plus ||| trader floor	count=1
function_name	image pour ||| ps open image file	count=1
function_name	et ||| form destroy	count=2
arg_pair	la fonction mysql_field_name() ||| resource $result int $field_offset	count=1
namespace	d'archives ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=12
function_name	un élément ||| get element by id	count=1
function_name	[function_name] de tous ||| get [function_name]	count=3
return	initialie ||| returntype	count=1
namespace	hash dans ||| quickhashinthash	count=1
arg_pair	memcached::set() hormis le fait ||| mixed $value int $expiration	count=1
function_name	un ||| save to file	count=1
function_name	ldap pour ||| ldap	count=1
function_name	si le noeud ||| is	count=1
function_name	maximale candidate ||| max cand epochs	count=2
function_name	[function_name] associée ||| [function_name]	count=6
function_name	annule la possibilité ||| oci cancel	count=1
function_name	effectue alors une division ||| idiv	count=1
function_name	les commentaires depuis ||| doc comment	count=1
function_name	crée une paire ||| socket pair	count=1
function_name	un fichier temporaire tous ||| mailparse uudecode all	count=1
function_name	[function_name_1] page ||| [function_name_2] [function_name_1]	count=4
function_name	flou à une ||| gaussian blur	count=1
function_name	fonction geoip_country_code3_by_name() retourne ||| country code3 by	count=1
function_name	verrou de lecture sur ||| cubrid lock	count=1
function_name	dans un ||| update attributes	count=1
function_name	de l'intensité de l'image ||| image	count=1
arg_pair	de contexte log_killcursor lors ||| array $server array $info	count=1
function_name	prend plus ||| max poll	count=1
function_name	d'entités html ||| mb decode numericentity	count=1
return	à la fin de ||| bool	count=1
return	identifiant ||| domelement	count=1
return	position courant [return] flux ||| [return]	count=1
function_name	sur le premier ||| first	count=1
function_name	paire de ||| socket pair	count=1
function_name	extrait dans un fichier ||| mailparse uudecode	count=1
arg_pair	pour préparer l'environnement pour ||| bool $new_link	count=1
function_name	détruit la file de ||| msg remove queue	count=1
function_name	où ||| set error log	count=2
function_name	en cache ||| wincache	count=1
arg_pair	et initialise ces paramètres ||| int $from_neuron	count=1
function_name	place des ||| db2 escape	count=1
function_name	ajoute du flou ||| gaussian blur	count=1
function_name	[function_name_1] une région ||| [function_name_1] [function_name_2]	count=2
arg_pair	défini le tableau ||| resource $ann	count=1
function_name	spécifié) dans le flux ||| stream copy to stream	count=1
return	fichier dans le ||| int	count=1
function_name	d'attente s'interrompt ||| set	count=1
arg_pair	vers le point spécifié ||| float $x float $y	count=1
function_name	[function_name_1] de lignes ||| [function_name_1] [function_name_2]	count=9
function_name	le serveur ftp ||| ftp get	count=1
function	numéro [arg_pair_2] ||| [function_name_1] field name [arg_pair_2]	count=1
function_name	est similaire à ||| element	count=1
function_name	spécifiques à fdf ||| fdf	count=1
function_name	une ligne ||| fetch row	count=1
function_name	sur le socket ||| socket error	count=1
function_name	l'espace ||| space	count=1
function_name	taille d'une image le ||| set image extent	count=1
function_name	le dernier identifiant ||| db2 last insert	count=1
function_name	contient les métadonnées ||| construct	count=1
function_name	défaut de tidy ||| tidy	count=1
return	[return] slash final ||| [return]	count=3
function_name	mois month de l'année ||| month	count=1
function_name	des ||| newt form	count=1
function_name	contenant la ||| hexdec	count=1
return	un tableau de paramètres ||| array	count=1
function_name	un traitement appliqué à ||| images	count=1
function_name	l'uri de ||| base uri	count=1
function_name	clé ||| put	count=1
arg_pair	évalue une expression pour ||| string $expression	count=1
function_name	les [function_name] de toutes ||| get [function_name]	count=1
arg_pair	et ||| string $filename	count=1
function_name	requête xpath ||| xpath namespace	count=1
function_name	que setcookie() excepté ||| setrawcookie	count=1
function_name	indexé, suivant ||| set	count=1
arg_pair	la requête statement ||| mixed $field	count=1
function_name	dernière modification ||| file time	count=1
namespace	modifie la valeur de ||| function	count=1
arg_pair	offset ||| int $offset int $initial_value	count=2
function_name	identique à preg_replace() mais ||| preg filter	count=1
return	si un fichier au ||| bool	count=1
arg_pair	à ||| string $pattern	count=1
arg_pair	base de ||| string $database_name	count=2
arg_pair	dans ||| resource $connection	count=2
namespace	par la [namespace] et retourne ||| [namespace]	count=1
function_name	ressource ||| fam cancel monitor	count=2
arg_pair	d'un élément dans ||| string $attr_name int $index	count=1
return	le contenu ||| mongodb	count=1
return	informations de la ||| object	count=1
function_name	soap ||| handle	count=1
return	recursivetreeiterator::valid() retourne false pour ||| void	count=1
namespace	un ||| splfixedarray	count=1
return	lorsque l'objet a terminé ||| void	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] debug [function_name_2]	count=8
namespace	les ||| splfileobject	count=1
function_name	fréquence ||| frequency	count=5
function_name	numéro de version ||| set version	count=2
arg_pair	à l'historique système ||| string $ident int $option	count=1
function_name	nouveau [function_name] automatiquement ||| session regenerate [function_name]	count=1
arg_pair	variable libre server_key peut ||| array $keys	count=2
arg_pair	la surveillance d'une ||| resource $fam resource $fam_monitor	count=1
arg_pair	un mot ||| string $word	count=1
arg_pair	buffer buf ||| resource $socket string $buf	count=1
arg_pair	de caractères ||| string $text	count=1
function_name	pour convertir une archive ||| convert to data	count=1
arg_pair	être utilisé avec ||| resource $radius_handle	count=1
function_name	méthode de disposition ||| setimagedispose	count=1
arg_pair	des fichiers et des ||| array $files	count=1
return	ressource ||| bool	count=1
function_name	véritable ||| file	count=1
arg_pair	fonction socket_create() ||| resource $socket	count=1
return	utilisé ||| void	count=1
return	retournera un tableau ||| array	count=1
function_name	le contexte ||| context	count=2
function_name	définit le certificat rsa ||| rsacertificate	count=1
arg_pair	ajoute un [arg_pair] dans ||| [arg_pair]	count=1
return	en utilisant ||| gmagickdraw	count=3
function_name	phar.readonly ||| writable	count=1
arg_pair	de texte et récupère ||| resource $pdfdoc string $text	count=1
function_name	est toujours valide ||| valid	count=1
function_name	document fdf courant ||| fdf	count=1
function_name	analyse une liste ||| rfc822 parse addresses	count=1
function_name	utilisée pour lier des ||| lob2 bind	count=1
namespace	des ||| spldoublylinkedlist	count=1
function_name	que ||| eio event	count=1
function_name	sélectionne la ||| mssql select db	count=1
function	représentation json [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] original définie ||| [arg_pair_2] [function_name_1]	count=8
function_name	retourne [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] int $token	count=3
arg_pair	une requête sql ||| string $statement	count=2
function_name	les ||| batch size	count=2
arg_pair	le flag spécifié aux ||| int $options	count=1
function_name	remplace la ||| imagesetbrush	count=1
rest	les informations [function_2] ||| [function_2] [return_1]	count=3
function_name	retourne [function_name_2] ||| [function_name_1] root element [function_name_2]	count=3
function_name	ou [function_name] ||| remove [function_name]	count=2
return	une connexion ||| array	count=1
function_name	la méthode de compression ||| zip entry	count=1
function_name	pour les ||| ibase set event	count=1
return	fonction retourne un tableau ||| array	count=2
arg_pair	ligne ||| resource $result int $row	count=1
return	appelée dans une ||| int	count=1
arg_pair	une ||| string $name	count=5
arg_pair	position offset ||| int $pri	count=1
function	autocommit de [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=1
function_name	synchronise la ||| dba sync	count=1
function_name	doit être utilisée que ||| set	count=1
function_name	calcule le cosinue pour ||| cos	count=1
namespace	include_path pour la durée ||| function	count=1
arg_pair	le chemin path à ||| int $offset	count=1
function_name	les paramètres ||| to string	count=1
function_name	fichier exe ou ||| exe footer	count=1
function_name	de la requête ||| mlt query field	count=1
function_name	transforme une image ||| transform image	count=1
return	forme de ||| string	count=1
function	[function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=2
function_name	plus ||| max poll time	count=2
arg_pair	contient le contenu ||| mongodb $db string $prefix	count=1
function_name	sur ||| zip entry	count=1
function_name	à utiliser dans les ||| set soap	count=1
arg_pair	le chemin server_path ||| resource $context string $server_path	count=1
function_name	ajoute ||| curl multi add handle	count=2
function_name	stagnation ||| stagnation epochs	count=4
function_name	textes qui correspondent avec ||| ereg	count=1
namespace	vous craignez ||| function	count=1
return	modifie ||| string	count=1
function_name	[function_name] retourne ||| [function_name] get vendor	count=1
arg_pair	la ||| int $second int $month	count=1
arg_pair	tableau array1 ||| array $array1 array $array2	count=2
return	si ||| void	count=1
function_name	tampon de ||| get	count=1
namespace	méthode ||| soapclient	count=1
function_name	donnée est de type ||| is numeric	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] ccitt [arg_pair_2]	count=1
namespace	contenu du fichier ||| splfileinfo	count=1
namespace	filesystemiterator configuré avec ||| filesystemiterator	count=1
arg_pair	une erreur ||| resource $result	count=1
function_name	facteur quickprop mu ||| fann set quickprop mu	count=1
namespace	mettre à ||| quickhashintstringhash	count=1
function_name	préfixe utilisé ||| prefix	count=1
arg_pair	les paramètres ||| int $hour	count=1
arg_pair	une page [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	à ||| int $month	count=1
arg_pair	structure ||| int $num_input	count=1
function_name	profondeur maximale ||| max depth	count=2
arg_pair	un segment de ||| mixed $start mixed $length	count=1
arg_pair	gestionnaire de la pile ||| int $still_running	count=1
function_name	de statut ||| task status	count=1
function_name	connexion persistante vers un ||| cubrid pconnect	count=1
function_name	lignes à ||| rows	count=1
return	alphabétiques ||| int	count=1
function_name	à l'échelle les sorties ||| scale	count=1
function_name	caractères) de ||| ltrim	count=1
function_name	active la pagination ldap ||| ldap	count=1
arg_pair	un serveur ||| resource $session	count=1
namespace	fonction peut être ||| mongolog	count=1
arg_pair	pour le dessin ||| resource $image	count=1
arg_pair	la fonction memcache::connect() avec ||| string $host	count=1
return	d'une annotation ||| int	count=1
return	en coordonnées relatives ||| bool	count=1
return	fonction est similaire à ||| domelement	count=1
namespace	archive tar/zip ||| phardata	count=1
function_name	dans les regroupements ||| group	count=1
function_name	si une classe est ||| is	count=2
function_name	un jeu ||| db2	count=5
function_name	[function_name_1] l'extension du ||| [function_name_2] [function_name_1]	count=1
function_name	jeu ||| db2 field	count=1
namespace	composants qui avaient ||| function	count=1
function_name	définit le nom de ||| set	count=1
function_name	de tri ||| set sort	count=2
namespace	enregistrements [namespace] assoc_array ||| [namespace]	count=1
namespace	chaîne de caractères ||| function	count=1
function_name	informations sur [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	sur le dictionnaire spécifié ||| crack check	count=1
function_name	d'entrainement en ||| train data	count=1
function_name	met à l'échelle les ||| fann scale train	count=1
function_name	ligne ||| mysql fetch	count=2
function_name	les caractères ||| escape	count=1
namespace	l'archive zip ||| ziparchive	count=1
function_name	zend en ||| zend	count=1
return	lot d'objets résultants et ||| mongocommandcursor	count=1
namespace	le serveur le curseur ||| mongocursor	count=1
arg_pair	de l'attribut attribute à ||| string $attribute	count=1
return	uniquement si ||| bool	count=2
arg_pair	fichier ||| int $flags	count=1
function_name	fonction retourne la version ||| get version	count=1
function	[function_name_1] cert ||| [function_name_1] key [arg_pair_2]	count=1
namespace	dossier directoryiterator ||| directoryiterator	count=1
function_name	récupère le nombre ||| get num	count=1
namespace	l'espace du noeud ||| domnode	count=1
return	différents niveaux ||| bool	count=1
namespace	[namespace] la ||| [namespace]	count=14
function_name	effectue alors ||| variant idiv	count=1
function_name	le numéro de version ||| version	count=2
function_name	la version de ||| version	count=4
namespace	repositionne ||| sqlite3result	count=1
return	n'est utile que si ||| bool	count=1
namespace	fait qu'elle ||| function	count=2
function_name	tests ||| array uintersect assoc	count=2
function_name	cette fonction ||| get element by id	count=1
arg_pair	une entrée avec une ||| int $key	count=2
function_name	id de genre ||| genre	count=1
function_name	charge la ||| load	count=1
function_name	le sinus hyperbolique ||| trader sinh	count=1
function_name	le premier attribut ||| first attribute	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $cas_tokens [arg_pair_1]	count=4
namespace	contenu ||| function	count=1
function_name	à la fonction maxdb_multi_query() ||| maxdb more results	count=1
arg_pair	est ||| string $pattern	count=1
function_name	[function_name_1] conversion automatique ||| [function_name_2] [function_name_1]	count=1
function_name	les fichiers ||| uudecode all	count=1
function_name	bibliothèque sqlite ||| sqlite libversion	count=2
namespace	comme une ||| function	count=1
namespace	avec l'objet imagick ||| imagick	count=1
return	attribut dans un ||| int	count=1
function_name	mots personnelle du dictionnaire ||| to personal	count=1
function_name	tests sur l'index ||| array uintersect uassoc	count=1
function_name	remet la [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	après un fork dans ||| fork	count=1
namespace	vérification d'une archive phar ||| phar	count=1
function_name	maximale des ||| max	count=2
arg_pair	la position x y ||| int $x int $y	count=1
function_name	dictionnaire à utiliser pour ||| enchant broker	count=1
namespace	efface ||| function	count=1
arg_pair	le fait que ||| int $hour	count=1
function_name	retourne le type ||| type	count=4
function	basé sur [arg_pair_2] ||| [function_name_1] pattern [arg_pair_2]	count=1
function_name	défini ||| log	count=1
function_name	grande taille à la ||| pg lo	count=1
arg_pair	str dans le fichier ||| int $length	count=1
function_name	[function_name_1] rappel ||| [function_name_1] [function_name_2]	count=4
arg_pair	cubrid_connect() est utilisée ||| bool $new_link	count=1
function_name	fonction geoip_country_code3_by_name() retourne ||| geoip country code3	count=1
function_name	extrait dans un ||| uudecode all	count=1
function_name	d'entrainement ||| train data	count=2
function_name	en-têtes exif ||| exif	count=1
arg_pair	la transparence ||| float $alpha	count=1
function_name	la teinte d'une ||| modulate	count=1
function_name	supprime toutes ||| dbplus rzap	count=1
namespace	défini l'endroit où les ||| function	count=1
function_name	est utilisée pour lier ||| lob2 bind	count=1
arg_pair	le paramètre variable_name dans ||| string $variable_name	count=1
function_name	[function_name_1] plusieurs images ||| [function_name_2] [function_name_1]	count=1
arg_pair	de flux de texte ||| resource $pdfdoc string $text	count=1
function_name	efface les fichiers ||| apc delete	count=1
function_name	sinus de chaque ||| trader sin	count=1
namespace	un curseur typiquement ||| mongocommandcursor	count=1
function_name	une queue [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	un fichier ||| uudecode all	count=1
function_name	certificat ||| openssl x509 checkpurpose	count=2
function_name	qu'elle ||| proc	count=1
function_name	prochaine image dans ||| next image	count=2
function_name	la configuration de ||| tidy config	count=1
arg_pair	des filtres ||| array $values	count=1
function_name	fonction ||| newt form	count=1
function_name	de différence à ||| diff	count=1
namespace	avec ||| mongolog	count=1
function_name	le périphérique racine ||| gupnp root device set	count=1
arg_pair	des valeurs rvg ||| int $bmax	count=1
function_name	une queue ou ||| mqseries put	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] short [function_name_2]	count=3
function_name	eventbuffer ||| add	count=1
function_name	l'échelle les entrées ||| fann scale input	count=1
function_name	le dossier d'archives ||| compressionmethod	count=1
arg_pair	contenu des ||| mongodb $db string $prefix	count=1
function_name	elle prend plus ||| poll	count=1
function_name	fichier mesurée ||| fseek	count=1
namespace	le code ||| gmagickdraw	count=1
namespace	fonction est en ||| function	count=2
namespace	extension ||| reflectionextension	count=1
function_name	le champ field donné ||| oci field	count=1
function_name	retourne ||| ini get	count=2
function_name	soap publiées décrites dans ||| functions	count=1
function_name	remplace les données ||| replace record	count=1
function_name	la file d'attente ||| eio set max poll	count=1
function_name	maximale [function_name] chaque ||| compare [function_name]	count=1
namespace	domprocessinginstruction ||| domprocessinginstruction	count=1
function_name	gestion des colonnes de ||| odbc binmode	count=1
function_name	la file ||| set max	count=1
function_name	[function_name_1] passé par ||| [function_name_2] [function_name_1]	count=4
arg_pair	lit un ||| resource $res	count=1
namespace	observateur evidle et ||| evidle	count=1
function_name	les connexions ouvertes ||| connections	count=1
function_name	utilisée pour insérer un ||| cubrid set add	count=1
arg_pair	cette méthode est une ||| string $key	count=1
namespace	d'une chaîne de caractères ||| sdo_das_xml	count=1
function_name	fonction sqlsrv_prepare() ||| sqlsrv	count=1
return	pour retourner le nombre ||| int	count=1
arg_pair	script comme ||| string $script	count=1
function	fonction retourne true si [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	avec ||| proc close	count=2
function_name	[function_name_1] le certificat ||| [function_name_2] pkcs12 [function_name_1]	count=1
function_name	qui empêchera même ||| xlockrel	count=1
function	[function_name_1] en une ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	le contenu des ||| mongodb $db string $prefix	count=1
function_name	les itérateurs ajoutés ||| array iterator	count=1
function_name	ignore ||| eregi	count=1
arg_pair	fichier filename dans une ||| string $filename bool $use_include_path	count=1
function_name	socket ||| last socket error	count=2
arg_pair	incrémente une valeur ||| string $key	count=1
function_name	les méta-données de l'archive ||| metadata	count=1
function_name	retourne [function_name_2] ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=4
arg_pair	search [arg_pair_2] ||| [arg_pair_1] mixed $replace [arg_pair_2]	count=4
function_name	place des antislashs ||| escape string	count=1
return	de données sur ||| mixed	count=1
arg_pair	depuis une sauvegarde xml ||| string $xml_file string $rrd_file	count=1
function_name	désactive le termscomponent ||| terms	count=1
return	curseur est à la ||| bool	count=1
namespace	arrayobject::getiterator() ||| arrayobject	count=1
namespace	noeud ||| xmlreader	count=1
function_name	fonction glob() de la ||| glob	count=1
function_name	fond de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function	crée [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	d'attente s'interrompt si elle ||| eio	count=1
function_name	d'activation ||| fann set activation function output	count=2
function_name	gravité courante [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	entrées du cache realpath ||| realpath cache	count=1
function	le blob [arg_pair_2] ||| [function_name_1] add [arg_pair_2]	count=1
function_name	envoie ||| send query	count=2
function_name	dans ||| update attributes	count=2
function_name	de ||| set oid numeric	count=1
namespace	fonction configure l'analyseur ccl ||| function	count=1
function_name	une image reconstruite ||| image	count=1
return	dans ||| mixed	count=1
arg_pair	listant les paramètres pour ||| string $schema	count=1
namespace	courant du dossier directoryiterator ||| directoryiterator	count=1
function_name	l'étape pendant l'entrainement rprop ||| rprop	count=1
arg_pair	document ||| array $values	count=1
return	forme ||| string	count=1
function_name	une réponse en ||| handle	count=1
function_name	lit le contenu ||| ob	count=1
function_name	avec la bibliothèque exslt ||| has exslt support	count=1
function_name	la racine carrée de ||| trader sqrt	count=1
function_name	le ||| zip entry compressionmethod	count=2
namespace	par la fonction pdf_load_font() ||| function	count=1
arg_pair	être invoquées avant ||| int $max_callbacks	count=1
function_name	[function_name] courante de ||| get [function_name]	count=2
arg_pair	permettra d'accéder à la ||| int $key int $memsize	count=1
function_name	les [function_name] ||| db2 [function_name]	count=1
function_name	l'endroit ||| log	count=1
function_name	dictionnaire à ||| enchant broker	count=1
function_name	sur [function_name] caractères ||| pdf info [function_name]	count=1
function_name	libère un résultat ibase ||| ibase free result	count=1
namespace	une classe est définie ||| reflectionclass	count=1
return	tous les ||| string	count=1
arg_pair	utilisateur php event_handler en ||| callable $event_handler	count=1
function_name	et le client ||| client	count=1
arg_pair	à la position ||| resource $psdoc	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] byte [function_name_2]	count=2
function_name	une paire de ||| stream socket pair	count=1
function_name	contenant les en-têtes d'entrée ||| input headers	count=1
arg_pair	des tableaux ||| array $array1	count=1
return	défini ||| void	count=1
function_name	rappel pour ||| callback handler install	count=1
arg_pair	la suppression ||| array $deleteoptions array $protocoloptions	count=1
function_name	de caractères d'instance xml ||| string	count=1
arg_pair	position de ||| string $encoding	count=1
function_name	sur le dictionnaire ||| crack check	count=1
function_name	retourne le nombre de ||| mysqli num	count=2
function_name	interne de clé ||| dba firstkey	count=1
function_name	du tri les champs ||| sort	count=1
function_name	retourne une chaîne ||| get	count=4
namespace	forme et tous ||| function	count=1
arg_pair	de cartes ||| string $threshold_map int $channel	count=1
function_name	[function_name_1] [function_name_2] de l'image présente dans ||| [function_name_1] [function_name_2]	count=2
function_name	paramètres de l'objet ||| to string	count=1
arg_pair	julien en date ||| bool $hebrew	count=1
function_name	cette fonction ||| id	count=1
function_name	supprime toutes les ||| rzap	count=1
function_name	dernière erreur de ||| error string	count=1
namespace	et envoie ||| soapserver	count=1
function_name	depuis ||| load from	count=3
return	domnodelist de tous les ||| domnodelist	count=1
function_name	de ||| set encoding	count=2
function_name	efface un flux de ||| pdf delete textflow	count=1
function_name	retourne la ||| ini get	count=1
function_name	les classes de ||| construct	count=1
function_name	supprime tous les objets ||| remove all	count=1
function_name	le bytecode [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	ne peuvent pas ||| void	count=1
function_name	socket ||| last socket	count=2
function_name	avaient été ||| form	count=1
function_name	retourne le nombre de ||| sybase num	count=1
arg_pair	une méthode avancée et ||| string $key mixed $value	count=1
function_name	maximal de [function_name_2] ||| [function_name_1] num query [function_name_2]	count=4
function_name	de caractères passée en ||| escape	count=1
arg_pair	pour event ||| resource $event	count=1
function_name	façon synchrone et définit ||| proxy action set	count=1
arg_pair	pour insérer ||| string $attr_name	count=1
function_name	de caractères ||| escape	count=1
function_name	[function_name_1] suivant ||| [function_name_2] [function_name_1]	count=3
function_name	alerte ||| warning	count=1
function_name	file d'attente s'interrompt ||| eio set max poll time	count=1
function_name	maximale des en-têtes ||| max headers	count=2
return	connexion à un ||| array	count=1
function_name	[function_name_1] a été ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] la profondeur ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] source ||| [function_name_1] [arg_pair_2]	count=4
namespace	est ||| mongoclient	count=1
namespace	sur des ||| function	count=1
arg_pair	vérifier si l'accès au ||| bool $nodns	count=1
function_name	[function_name_1] l'octet courant ||| [function_name_2] [function_name_1]	count=1
function_name	peut être utilisée pour ||| module	count=1
function_name	[function_name_1] de couleurs ||| [function_name_2] [function_name_1]	count=5
function_name	récupère le [function_name_2] ||| [function_name_1] facet [function_name_2]	count=3
function_name	qui sont sur ||| newt form	count=1
function_name	rmdir() ||| rmdir	count=1
arg_pair	démarre une transaction ||| mixed $connection	count=1
function_name	extrait le pid ||| get pid	count=1
namespace	en chaîne de caractères ||| serializable	count=1
return	qu'elle ||| int	count=2
return	d'une ||| int	count=4
function_name	ferme le pointeur ||| closedir	count=1
arg_pair	le système de ||| resource $sftp	count=1
function_name	du texte à la ||| show	count=1
function_name	un dictionnaire ||| enchant	count=1
function_name	lie le nom donné ||| bind	count=1
function_name	ajoute ||| curl multi add	count=1
function_name	préparée ||| execute	count=2
function_name	identique ||| close	count=1
function_name	erreur imap si elle ||| imap	count=1
function_name	dossier ||| zip entry	count=1
function_name	équivalence de ||| eqv	count=1
return	l'image en ||| bool	count=1
function_name	arrière plan ||| do high	count=1
return	une réponse en ||| void	count=1
function_name	l'extension sous la ||| solr	count=1
function_name	incluant les ||| form destroy	count=1
function_name	ibase [function_name_2] ||| [function_name_1] commit [function_name_2]	count=1
arg_pair	deux versions de ||| string $version1	count=1
function_name	numéro ||| mssql	count=3
return	caractères représentant la ||| string	count=3
function_name	afficher les informations ||| show debug info	count=2
arg_pair	et bcc ||| string $bcc	count=1
arg_pair	nom d'utilisateur username ||| resource $ftp_stream string $username	count=1
function	[function_name_1] lui associe ||| [arg_pair_2] [function_name_1]	count=1
function_name	numérotation ||| add page label	count=1
function_name	serveur d'administration et libère ||| kadm5 destroy	count=1
function_name	la ||| get element by	count=1
function_name	à ||| module	count=1
function_name	tampon ||| add	count=1
function_name	ligne dans ||| fetch	count=1
return	de l'analyseur ||| bool	count=1
arg_pair	attribut dans ||| string $index	count=1
arg_pair	[arg_pair_1] longueur width ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	révision ||| svn	count=5
function_name	d'attente s'interrompt si elle ||| max poll time	count=1
function	contrôle [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	code de ||| code	count=1
function_name	[function_name_1] court ||| [function_name_2] [function_name_1]	count=2
function_name	récupère le nom ||| get	count=1
function_name	la lecture aux secondaires ||| slave okay	count=1
arg_pair	fonction de rappel si ||| mixed $callback	count=1
namespace	objet lorsque l'objet a ||| collectable	count=1
function_name	informations du dernier ||| pdf info table	count=1
return	la ||| mixed	count=2
function_name	colonnes ||| columns	count=1
function_name	récupère [function_name_2] ||| [function_name_1] byte [function_name_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] properties [arg_pair_2]	count=2
function_name	un filtre d'un flux ||| stream filter remove	count=1
function_name	de définir à true ||| set highlight	count=1
arg_pair	paramètre filename à ||| string $filename	count=1
function_name	le nombre ||| mysql num	count=2
function_name	fichier spécifié est ||| is	count=1
function_name	maximale d'une [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	l'accès au service daemon ||| string $address	count=1
namespace	observateur evidle ||| evidle	count=1
arg_pair	générateur d'extraits de ||| string $fragmenter	count=1
return	colonnes ||| int	count=1
function_name	retourne la première ||| first	count=1
arg_pair	le résultat dans ||| int $flags	count=1
namespace	toute les ||| imagick	count=1
function_name	de champs colonnes ||| numfields	count=1
function	lie un tableau php [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
arg_pair	condamnations svn pour un ||| string $repository_url int $revision_no	count=1
return	tableau de ||| array	count=2
function_name	recherche le dernier ||| last	count=1
arg_pair	convertit left et right ||| mixed $left mixed $right	count=1
function_name	informations sur le protocole ||| proto info	count=1
return	ressources mémoires utilisées ||| void	count=1
function_name	fichiers encodés qui ||| mailparse uudecode all	count=1
function_name	certificat ||| openssl x509	count=2
return	sortie ||| int	count=1
function_name	durée du script en ||| set include	count=1
function_name	de lignes affectées ||| mysqli affected rows	count=2
return	crée un tableau indexé ||| array	count=1
function_name	[function_name_1] la session ||| [function_name_2] [function_name_1]	count=2
function_name	exporte le ||| export	count=1
arg_pair	par value ||| string $key int $value	count=1
function_name	la souscription ||| unsubscribe	count=1
function_name	la position du neurone ||| from neuron	count=1
function_name	[function_name_1] en cours ||| [function_name_2] [function_name_1]	count=12
function_name	la file d'attente s'interrompt ||| eio	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] highlight [function_name_2]	count=9
function_name	établit une [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] l'analyseur xml ||| [function_name_2] [function_name_1]	count=8
arg_pair	num entrées toutes ||| int $num	count=1
arg_pair	et retourne ||| bool $part	count=1
function_name	les textes qui ||| ereg	count=1
function_name	tous les ||| to	count=1
arg_pair	du lien symbolique filename ||| string $filename	count=1
function_name	marqueur ||| bind array	count=1
arg_pair	caractères ||| string $text	count=1
function_name	fichiers encodés qui ||| all	count=1
function_name	similaire à la fonction ||| type	count=2
function_name	ajoutés à la forme ||| newt form destroy	count=1
function_name	recherche ldap ||| ldap	count=1
function_name	dernier ||| pg last	count=1
namespace	ou partie d'un ||| function	count=1
function_name	l'itération lorsque la ||| iteration	count=1
function_name	défini l'endroit où les ||| error log	count=1
function_name	de compression de l'image ||| get image compression	count=1
function_name	largeur du texte en ||| text width	count=1
function_name	calcule les paramètres d'échelle ||| scaling params	count=1
arg_pair	dans le résultat ||| resource $result	count=1
arg_pair	x par y ||| float $y	count=1
function_name	la première ||| first	count=2
function	[function_name_1] et ||| [arg_pair_2] [function_name_1]	count=13
return	verrou ||| bool	count=1
function_name	html contenu ||| load htmlfile	count=1
function_name	lit ||| fbsql read	count=2
return	sur ||| bool	count=3
arg_pair	les définitions de ||| resource $id array $config	count=1
function_name	retourne la variable repérée ||| get var	count=1
namespace	à partir ||| sdo_das_xml	count=1
arg_pair	une commande et sépare ||| resource $connection string $query	count=1
function_name	pour ||| ps open	count=1
arg_pair	la structure de ||| int $num_data int $num_input	count=1
function_name	l'échelle de la ||| scale	count=1
function_name	hash ||| mhash	count=1
arg_pair	sur l'algorithme ||| string $lib_dir	count=1
namespace	retourne la méthode ||| function	count=1
function_name	remplit un bloc de ||| pdf fill pdfblock	count=1
arg_pair	fixe ||| resource $connection string $encoding	count=1
function_name	crée une paire de ||| pair	count=1
namespace	de configuration ||| function	count=1
function_name	queue ou une liste ||| mqseries put	count=1
function_name	à ||| set	count=1
arg_pair	[arg_pair_1] par défaut ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	closedir() seul le ||| close	count=1
function_name	[function_name_1] [function_name_2] de ||| [function_name_2] [function_name_1]	count=2
function_name	modifie l'action ||| action	count=1
return	cette ||| bool	count=20
function_name	un descripteur de fichier ||| file	count=1
function_name	[function_name_1] nombre de ||| [function_name_2] [function_name_1]	count=1
function_name	de la requête spécifiée ||| sqlsrv	count=1
function_name	fichier exe ou auto-exécutable) ||| write exe	count=1
function_name	active ||| event buffer enable	count=1
arg_pair	la suppression d'un ||| array $deleteoptions array $protocoloptions	count=1
arg_pair	trie le tableau array ||| array $array int $sort_flags	count=1
arg_pair	insérer un ||| int $index	count=1
function_name	avaient été ajoutés ||| form destroy	count=1
arg_pair	verrou sur ||| resource $relation	count=1
namespace	après ||| mongocursor	count=1
function_name	[function_name_1] géométrie ||| [function_name_1] [function_name_2]	count=1
function_name	cette fonction retourne la ||| get	count=2
arg_pair	si une erreur ||| resource $result	count=1
function_name	nouvelle instance haruoutline ||| outline	count=1
function_name	xml donnée ||| load string	count=1
arg_pair	socket ||| mixed $socket	count=1
function_name	message d'erreur associé à ||| errormsg	count=1
function	[function_name_1] colonne correspondant ||| [arg_pair_2] [function_name_1]	count=1
function_name	miniature ||| exif thumbnail	count=2
return	fonctionne ||| int	count=1
function_name	fonction est similaire ||| by id	count=1
function_name	mois month de l'année ||| days in month	count=1
arg_pair	d'un fichier ||| int $flags	count=1
namespace	les réponses dans ||| mongocursor	count=1
function_name	calculate la ||| trader exp	count=1
function_name	trouvent ||| all	count=1
namespace	l' eventbuffer lui permettant ||| eventbuffer	count=1
function_name	la ||| maxdb	count=1
namespace	attribut dans ||| sphinxclient	count=1
return	contenu ||| int	count=1
function_name	le cosinus hyperbolique ||| cosh	count=1
function_name	de needle dans haystack ||| mb strstr	count=1
function_name	ouvre le ||| open	count=1
arg_pair	valeurs du [arg_pair] ||| [arg_pair]	count=3
namespace	un algorithme ||| arrayobject	count=1
function_name	mémoires utilisées ||| form	count=1
arg_pair	pour une chaîne ||| string $value	count=1
return	clé et ||| void	count=1
function_name	la tangente pour ||| trader tan	count=1
function_name	lit ||| read	count=11
function_name	retourne [function_name] ||| [function_name]	count=1
function_name	erreur imap ||| imap	count=1
function_name	le ||| ftp rmdir	count=2
function_name	retourne la quantité ||| memory get	count=2
function_name	dernière erreur survenue ||| error	count=1
function	lie un tableau [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2]	count=1
function_name	et envoyées [function_name] voir la ||| [function_name] mppe	count=1
namespace	de l'objet sous la ||| solrparams	count=1
function_name	d'attente s'interrompt ||| max poll	count=1
function_name	de la prochaine ||| next	count=2
function_name	la première ligne ||| dbplus first	count=1
function_name	et à ajouter les ||| add vars	count=1
function_name	les informations de ||| info	count=1
arg_pair	retourne ||| int $offset	count=1
function_name	données rrd ||| rrd	count=5
function_name	stagnation candidates en cascade ||| set cascade candidate stagnation epochs	count=1
function_name	peut ||| set	count=1
namespace	la ||| function	count=23
return	remplace la brosse ||| bool	count=1
function_name	avec gettimeofday 2 ||| gettimeofday	count=1
arg_pair	les métadonnées et la ||| mongodb $db	count=1
function_name	retourne la ||| snmp get	count=1
function_name	[function_name_1] alpha de ||| [function_name_2] [function_name_1]	count=2
function	d'octets [arg_pair_2] ||| [function_name_1] type [arg_pair_2]	count=1
function_name	récupère ||| eio get	count=1
function_name	est un jste ||| jste	count=1
function_name	prend ||| max	count=1
function_name	attente) depuis les ||| sys getloadavg	count=1
function_name	dans la session courante ||| is in session	count=1
function_name	facteur décroissant quickprop ||| fann set quickprop decay	count=1
function_name	local au ||| local	count=1
function_name	précédente de ||| dbplus prev	count=1
arg_pair	dans un ||| string $field_override	count=1
namespace	gestionnaire ||| gearmanjob	count=1
arg_pair	imagetype_xxx ||| bool $include_dot	count=1
function_name	les bits ||| chmod	count=1
return	retourne si cette ||| bool	count=1
function_name	fréquence à partir ||| doc frequency	count=1
function_name	avec la fonction sqlsrv_prepare() ||| sqlsrv execute	count=1
function_name	le fait ||| proc close	count=1
function_name	elle prend ||| eio	count=1
function_name	longueur du contenu du ||| length	count=1
arg_pair	le paramètre filename ||| string $filename	count=2
function	crée [arg_pair_2] ||| [function_name_1] train from callback [arg_pair_2]	count=2
function_name	taille d'un blob ibase ||| ibase blob	count=1
function_name	d'activation dans la couche ||| activation	count=1
function_name	passée en argument ||| escape	count=1
function_name	verrou sur ||| dbplus getlock	count=1
return	vérifie si la liste ||| bool	count=1
arg_pair	résultats listant ||| string $table-name	count=5
namespace	dans un ||| pharfileinfo	count=1
function_name	les ressources mémoires utilisées ||| form	count=1
function	le statut [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
return	une chaîn edécrivant ||| string	count=1
function_name	nom depuis le système ||| eio unlink	count=1
arg_pair	requête sql query à ||| string $query resource $link_identifier	count=1
arg_pair	avec la cible spécifiée ||| string $target	count=1
arg_pair	passées ||| string $data string $method	count=1
arg_pair	passés sont ||| int $month	count=1
function_name	phar ||| phar	count=2
arg_pair	résultat uodbc ||| mixed $field	count=1
arg_pair	réponse au client ||| string $actor string $details	count=1
arg_pair	de données database_name ||| string $database_name	count=1
function_name	[function_name_1] [function_name_2] classe considérée ||| [function_name_2] [function_name_1]	count=2
function_name	message d'erreur de ||| get error message	count=2
arg_pair	needle ||| string $haystack string $needle	count=1
function_name	être utilisée pour définir ||| set	count=1
function_name	tous les champs lus ||| str getcsv	count=1
namespace	à la position ||| function	count=1
arg_pair	propriété hwnd de ||| int $window_handle int $client_area	count=1
function_name	le ||| fann get	count=1
function_name	avec un patch ||| string patch	count=1
function_name	assigne ||| base set	count=1
function_name	ccl ||| ccl	count=1
function_name	cette ||| set	count=1
return	que les ||| int	count=1
function_name	le statut ||| result status	count=1
arg_pair	un certificat x509 dans ||| mixed $x509	count=1
function_name	écrits [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	catégorie courante ||| string $category	count=1
arg_pair	paramètres x et ||| int $x	count=1
function_name	de forte priorité ||| high	count=1
arg_pair	ressource filehandle ||| resource $filehandle	count=1
arg_pair	un ||| string $index array $attributes	count=2
function_name	par la ||| form	count=1
function_name	de l'objet sous la ||| to string	count=1
function_name	sans sauver les données ||| abort	count=1
function_name	dernière erreur ou null ||| error	count=1
function_name	liste de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	la fonction callback aux ||| array $array callable $callback	count=1
function_name	récupère ||| lob get	count=2
function_name	ferme ||| crack closedict	count=2
function_name	à la base sqlite ||| sqlite close	count=1
function_name	niveau de gris ||| setgray	count=1
function_name	passée ||| db2 escape string	count=2
function_name	de bordure ||| border	count=1
function_name	mssql_connect() mais avec deux ||| mssql pconnect	count=1
function_name	snmp spécifié par ||| snmpset	count=1
namespace	forme en incluant les ||| function	count=1
function_name	erreur émettant une exception) ||| send fail	count=1
namespace	texte ||| function	count=1
return	et sur le document ||| string	count=1
return	retourne false pour la ||| void	count=1
function_name	enregistre ||| register local namespace	count=2
function_name	et se prolongeant ||| fallocate	count=1
arg_pair	source et retourne les ||| int $blocksize	count=1
arg_pair	cette fonction est prévue ||| string $file_extensions	count=1
function_name	de sortir [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function	[function_name_1] ...) ||| [arg_pair_2] [function_name_1]	count=3
function_name	à ||| eregi	count=1
namespace	fonction rewinddir() seul le ||| directory	count=1
arg_pair	documents à ||| array $docs	count=1
function_name	configure la couleur de ||| set image background color	count=1
function_name	de positions ||| cycle	count=1
function_name	morelikethis ||| set mlt	count=2
function_name	[function_name_1] [function_name_2] ||| function resource [function_name_1] [function_name_2]	count=1
function_name	postgresql ||| pg field	count=1
return	[return] d'un ||| [return]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $filename [arg_pair_2]	count=2
function_name	maximale d'un mot ||| max	count=1
function_name	[function_name_1] pagination ||| [function_name_1] [function_name_2]	count=6
function_name	d'images ||| images	count=1
arg_pair	héberge la ||| resource $queue array $data	count=1
arg_pair	résolution désirée ||| float $xresolution	count=1
namespace	un yar_client sur un ||| yar_client	count=1
function_name	forte priorité à effectuer ||| high	count=1
namespace	retourne false ||| recursivetreeiterator	count=1
function_name	fichier temporaire ||| mailparse	count=1
arg_pair	à fournir ||| string $contents	count=1
namespace	qui ||| pharfileinfo	count=1
function_name	récupère tous les en-têtes ||| headers	count=2
function_name	compression utilisée sur ||| zip entry compressionmethod	count=1
function_name	de fichier rpm ||| rpm close	count=1
arg_pair	la catégorie courante ||| string $category	count=1
function_name	version xbm de l'image ||| imagexbm	count=1
function_name	similaire ||| type	count=2
function_name	fonction ||| destroy	count=1
arg_pair	se basant sur ||| resource $ann	count=1
function_name	un fichier exe ou ||| exe	count=1
function_name	priorité basse et retourne ||| do low	count=1
arg_pair	une chaîne d'une ||| string $str	count=1
namespace	à pclose() hormis le ||| function	count=1
function_name	les options associées ||| field flags	count=1
function_name	données du ||| add buffer	count=1
function_name	dernier ||| db2 last insert	count=1
function_name	[function_name_1] lisible ||| [function_name_1] [function_name_2]	count=4
namespace	array comme une pile ||| function	count=1
function_name	éléments avec un nom ||| tag name	count=1
function_name	été ||| newt	count=1
return	est utile uniquement ||| array	count=1
function_name	[function_name_1] de jokers ||| [function_name_1] [function_name_2]	count=1
arg_pair	une requête à ||| string $query string $index	count=1
function_name	rappel utilisateurs ||| allowed	count=1
namespace	un algorithme de ||| arrayobject	count=1
return	dans un tableau associatif ||| array	count=1
arg_pair	l'url suivant la requête ||| array $info array $query	count=1
function_name	analyse une ||| parse	count=1
function_name	ne peuvent pas ||| metadata	count=1
return	le nombre maximal de ||| int	count=2
namespace	dans l'espace ||| reflectionfunctionabstract	count=1
function_name	objet graphique ||| pdf set gstate	count=1
return	dans l'archive ||| int	count=1
arg_pair	de résultats listant ||| string $schema string $table_name	count=1
function_name	la bibliothèque ucd snmp ||| set quick print	count=1
function_name	restaure le fichier ||| restore	count=1
function_name	la taille décompressée ||| entry filesize	count=1
arg_pair	une ressource ||| resource $large_object int $size	count=1
function_name	initialise un nouveau gabarit ||| pdf begin template	count=1
function_name	retourne une chaîne décrivant ||| get	count=1
function_name	flou à [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	contexte de l'application précédemment ||| context	count=1
function_name	[function_name_1] remplit la ||| [function_name_1] [function_name_2]	count=3
function_name	détruit ||| unset	count=1
namespace	partir d'une chaîne de ||| sdo_das_xml	count=1
function_name	[function_name_1] serveur mysql ||| [function_name_2] [function_name_1]	count=2
return	true si ||| bool	count=4
function_name	les options de la ||| options	count=1
function_name	le composant statistique ||| set stats	count=1
arg_pair	fusionne la ||| bool $overwrite	count=1
function_name	de flux à ||| stream wrapper register	count=1
function_name	l'étape d'erreur sarprop ||| fann set sarprop step error shift	count=1
function_name	[function_name] avec l'hôte ||| [function_name]	count=1
function_name	dans une base interbase ||| ibase	count=1
namespace	des fichiers ainsi que ||| pharfileinfo	count=1
function_name	fonction libère ||| newt form destroy	count=1
arg_pair	position [arg_pair_2] ||| [arg_pair_2] int $offset [arg_pair_1]	count=1
arg_pair	trois paramètres : left ||| float $left	count=1
function_name	les modules à surveiller ||| module	count=1
arg_pair	prévue pour être ||| string $file_extensions	count=1
return	[return] associatif avec ||| [return]	count=1
return	durée ||| string	count=1
namespace	du jeu ||| gmagickdraw	count=1
namespace	libère une ||| weakref	count=1
namespace	constructeur de ||| xmldiff\base	count=1
return	compression utilisée sur ||| string	count=1
function_name	de paramètres requis par ||| number of required parameters	count=1
function_name	ignorant la ||| ireplace	count=1
arg_pair	la position offset ||| int $offset	count=3
function_name	spécifiée avec un ||| preview	count=1
function_name	retourne le dernier ||| last insert	count=1
function_name	oracle ||| oci new	count=1
function_name	de l'élément racine ||| root element	count=2
function_name	d'internationalisation appelée ||| intl	count=1
function_name	à différents ||| preview images	count=1
arg_pair	évalue une expression pour ||| string $expression int $channel	count=1
function_name	les [function_name] ||| get [function_name]	count=1
function_name	peuvent pas ||| metadata	count=1
function_name	pertinence à travers ||| weights	count=1
arg_pair	spécial ou ||| int $mode	count=1
function	la table d'un ||| table resource $result	count=1
function_name	plus proche ||| imagecolorclosest	count=1
function_name	libère [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	tous les en-têtes ||| headers	count=2
function_name	et ||| all	count=1
function_name	serveur ||| server by	count=1
return	crée un fichier spécial ||| bool	count=1
function_name	efface les lignes ||| pg delete	count=1
function_name	de l'erreur survenue lors ||| error	count=1
function_name	[function_name_1] de connexion ||| [function_name_1] [function_name_2]	count=1
function_name	un nouveau contexte ||| gupnp context	count=1
function_name	de base de données ||| set db	count=1
function_name	si la tâche est ||| is	count=1
arg_pair	à la position courante ||| resource $psdoc	count=1
function_name	être utilisée pour définir ||| module	count=1
function_name	couleur spécifiée sous ||| color	count=1
arg_pair	dans le fichier filename ||| string $filename	count=1
function_name	la transaction en ||| transaction	count=1
function_name	durée ||| include path	count=2
function_name	de caractères passée ||| db2	count=1
function_name	fonction d'activation pour ||| set activation function output	count=1
function_name	ligne depuis une ||| line	count=1
namespace	ev::run() est sortie normalement ||| ev	count=1
namespace	tous les appels ||| yar_concurrent_client	count=1
function_name	les données du tampon ||| add buffer	count=1
arg_pair	la seconde ||| mongodb $db	count=1
function_name	analyse une ||| mailparse rfc822 parse addresses	count=1
function_name	le mois month de ||| in month	count=1
function	[function_name_1] la cible ||| [function_name_1] [arg_pair_2]	count=3
function_name	de rappel pour ||| event buffer set callback	count=1
function_name	retourne le commentaire ||| get comment	count=2
function_name	[function_name] demandée ||| [function_name]	count=3
arg_pair	les ||| resource $id array $config	count=1
function_name	racine carrée de ||| trader sqrt	count=1
arg_pair	examine le ||| array $cainfo	count=1
function_name	le fait qu'elle fonctionne ||| proc close	count=1
function_name	qui sont sur des ||| form destroy	count=1
function	[function_name_1] réseau ||| [function_name_1] [arg_pair_2]	count=1
function_name	la recherche sur les ||| eregi	count=1
function_name	celui de preg_replace() hormis ||| preg	count=1
namespace	de caractères ||| gmagickdraw	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] file [function_name_2]	count=2
arg_pair	créer ou ||| int $mode int $size	count=1
function_name	la première ligne de ||| dbplus first	count=1
function_name	nouveau contexte ||| gupnp context	count=1
return	utilisée pour définir les ||| void	count=1
function_name	fichier qui ne ||| set	count=1
return	script en ||| string	count=1
function_name	position ||| show	count=1
arg_pair	dans un ||| resource $result_id	count=1
function_name	du document lorsqu'il ||| unset	count=1
function_name	désactive la bufferisation des ||| set buffering	count=1
function_name	nombre maximal de ||| highlight max	count=1
rest	retourne [function_2] ||| [return_1] [function_2]	count=1
function_name	message d'erreur ||| result error	count=1
namespace	dans un fichier qui ||| pharfileinfo	count=1
arg_pair	structure de ||| int $num_data	count=1
arg_pair	dans haystack et retourne ||| bool $before_needle	count=1
namespace	élément de structure ou ||| function	count=1
function_name	document pdi ||| get pdi parameter	count=1
arg_pair	paramètres passés ||| int $minute	count=1
arg_pair	de spotname ||| string $spotname	count=1
namespace	chaîne de ||| serializable	count=1
function_name	données ou [function_name] associées ||| get [function_name]	count=1
function_name	la ||| get	count=3
arg_pair	texte et ||| string $text	count=1
arg_pair	une requête ||| string $index	count=1
function_name	méthodes ||| methods	count=2
namespace	nouveau mutex ||| mutex	count=1
return	les en-têtes des ||| array	count=1
function_name	fermer ||| shmop close	count=1
arg_pair	un nouveau ||| resource $handle	count=1
function_name	bloc ||| shmop	count=1
namespace	fichier ou ||| function	count=1
function_name	cette méthode récupère l'intance ||| get	count=1
arg_pair	un ||| resource $id	count=1
function_name	julien ||| cal to jd	count=2
return	dans une série ||| bool	count=1
arg_pair	le paramètre variable_name ||| string $variable_name	count=1
return	une chaîn edécrivant la ||| string	count=1
function_name	[function_name_1] mu ||| [function_name_2] [function_name_1]	count=2
namespace	et envoie une réponse ||| soapserver	count=1
arg_pair	tableau des ||| resource $ann array $cascade_activation_functions	count=1
arg_pair	l'agent snmp spécifié ||| int $timeout	count=1
function_name	rfc 2045 section 6.7) ||| imap 8bit	count=1
namespace	la direction définie par ||| function	count=1
arg_pair	de subject ||| string $subject	count=1
namespace	ferme ||| function	count=2
arg_pair	fichier fieldname ||| string $fieldname	count=1
function_name	ou [function_name] de ||| set [function_name]	count=1
namespace	données du ||| function	count=1
function	de linejoin [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	les paramètres d'échelle ||| scaling params	count=1
function_name	pdf utilisé ||| pdf	count=1
return	source ||| string	count=1
arg_pair	est similaire à ||| resource $result	count=2
namespace	entrée ||| rarentry	count=2
namespace	l'identifiant ||| function	count=1
function_name	est ||| is	count=59
function_name	affiche le [function_name_2] ||| [function_name_1] [function_name_2]	count=5
return	: ||| mongodb	count=1
function_name	noms de champs du ||| names	count=1
function_name	imap si ||| imap	count=1
arg_pair	fonction memcache::connect() avec ||| string $host	count=1
arg_pair	boost pour un champ ||| string $fieldname float $fieldboostvalue	count=1
function_name	[function_name_1] mémoire ||| [function_name_2] [function_name_1]	count=1
return	d'une archive ||| bool	count=1
function_name	de la bibliothèque ucd ||| snmp set quick print	count=1
arg_pair	de ||| string $pattern string $string	count=1
function_name	s'il n'y a ||| row	count=1
function_name	retourne le premier attribut ||| ldap first attribute	count=1
function_name	ferme ||| odbc close	count=2
function_name	lier des données blob/clob ||| lob2 bind	count=1
function_name	les variables var ||| array	count=1
function_name	à la file ||| stack	count=1
function	récupère [arg_pair_2] ||| [function_name_1] field [arg_pair_2]	count=2
arg_pair	de la requête request ||| string $string	count=1
function_name	tous ||| string	count=1
function_name	[function_name_1] afficher ||| [function_name_1] [function_name_2]	count=1
function_name	méthode ||| method	count=1
arg_pair	str ||| string $str int $phonemes	count=1
function_name	dernier identifiant ||| last insert	count=1
function_name	l'endroit où les ||| error	count=1
function_name	la longueur [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	la fonction mktime() ||| int $hour int $minute	count=1
function_name	existe dans ||| exists	count=1
function_name	utilisée pour fermer ||| close	count=1
arg_pair	à utiliser mapreduce ||| array $pipeline array $options	count=1
return	similaire à ||| domelement	count=1
function_name	record ||| dbase delete record	count=2
function_name	[function_name] sinon elle ||| mcrypt module is [function_name]	count=1
function_name	le ||| entry	count=1
return	par le serveur ||| string	count=1
function_name	définit à [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	include_path pour la ||| set include path	count=1
arg_pair	premier segment de subject ||| string $subject	count=1
arg_pair	seconde ||| string $prefix	count=1
function_name	un nouveau [function_name] automatiquement ||| session regenerate [function_name]	count=1
arg_pair	paramètres passés ||| int $second int $month	count=1
arg_pair	les paramètres ||| int $second int $month	count=1
function_name	définit la valeur ||| set color	count=1
namespace	iidentique à ||| directory	count=1
return	arc [return] ||| [return]	count=2
function_name	lit ||| fetch	count=1
return	contient les ||| mongodb	count=1
function_name	lignes affectées par la ||| mysqli affected rows	count=1
function_name	est similaire à ||| get element by id	count=1
function_name	chaîne de ||| escape	count=1
function_name	change la couleur ||| color	count=1
arg_pair	à la ||| resource $psdoc	count=1
function_name	remplit un bloc ||| pdf fill pdfblock	count=1
arg_pair	spécial ou ||| string $pathname	count=1
function_name	place ||| escape string	count=2
return	peut être utilisé pour ||| void	count=1
function	[function_name_1] et ||| [function_name_1] [arg_pair_2]	count=13
arg_pair	les ||| int $dbase_identifier	count=1
return	méthode vérifie si le ||| bool	count=1
function_name	résultat sybase associé ||| sybase	count=1
function_name	de ||| set using exceptions	count=1
function_name	au vendeur ||| put vendor	count=1
rest	une représentation [function_2] ||| [function_2] [return_1]	count=1
return	de lecture seule ||| void	count=1
function_name	un alias appelé alias ||| alias	count=1
arg_pair	pile et ||| array $array	count=1
function_name	zend en utilisant ||| zend	count=1
function	numérotation [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	la configuration du cookie ||| get cookie params	count=1
function	la table [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	eio_chmod() modifie les ||| eio chmod	count=1
function_name	pour récupérer le nombre ||| num	count=1
namespace	gestionnaire de travaux assigné ||| gearmanjob	count=1
function_name	d'une url du référentiel ||| svn	count=1
namespace	travail coordonnée par ||| function	count=1
function_name	éléments du document ||| document	count=1
function	l'échelle [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	retourne le nombre de ||| dbase numfields	count=1
function_name	du champ à ||| field	count=1
arg_pair	filename à la ||| string $filename	count=1
arg_pair	propriété ||| string $property_name string $property_value	count=1
function_name	socket ||| socket error	count=2
namespace	du fichier d'image ||| function	count=1
function_name	dernier ||| last insert id	count=2
arg_pair	[arg_pair_1] d'un ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	nouvelle ligne ||| new line	count=2
namespace	fournis par ||| function	count=1
function_name	est obsolète ||| is deprecated	count=2
function_name	[function_name_1] d'interpolation ||| [function_name_2] [function_name_1]	count=6
arg_pair	et initialise ces paramètres ||| int $from_neuron int $to_neuron	count=1
arg_pair	et y lit toutes ||| int $flags	count=1
function_name	fonction crée ||| create attribute ns	count=1
function_name	pour un dictionnaire ||| enchant	count=1
function_name	à ||| mysql field	count=1
arg_pair	identifié ||| resource $ftp_stream	count=1
arg_pair	julien en ||| int $juliandaycount	count=1
return	tous les fichiers ||| array	count=1
arg_pair	à ||| string $pattern string $string	count=1
arg_pair	le nom et ||| string $name	count=1
function_name	attente) depuis les dernières ||| sys getloadavg	count=1
function_name	secondes ||| poll time	count=2
arg_pair	crée une ||| resource $pdfdoc string $name	count=1
namespace	que pour stocker des ||| pharfileinfo	count=1
function_name	[function_name_1] abstraite ||| [function_name_2] [function_name_1]	count=5
function_name	présentes dans tous les ||| array intersect	count=1
function_name	la racine carrée de ||| sqrt	count=1
namespace	l'aide de deux ||| mongogridfs	count=1
arg_pair	position x y le ||| int $y	count=1
function_name	affectées par la ||| affected	count=4
function_name	gestionnaires d'entités non déclarées ||| unparsed entity decl handler	count=1
function_name	terminer le processus ||| pcntl	count=1
function_name	ibase pour ||| ibase	count=1
function_name	gestionnaire d'événements pour ||| set event handler	count=1
return	libère les ressources mémoires ||| void	count=1
arg_pair	mktime() excepté le fait ||| int $month	count=1
arg_pair	sont gmt ||| int $year int $is_dst	count=1
namespace	ev::run() est entrée ||| ev	count=1
return	fichier temporaire ||| array	count=1
function_name	résultat comme pourrait ||| mysql unbuffered query	count=2
namespace	du tampon ||| eventbuffer	count=4
arg_pair	csv ||| string $escape	count=2
function_name	xml ||| xml set notation decl	count=1
arg_pair	ordinaire ||| int $major int $minor	count=1
function_name	d'un objet snmp ||| snmp2	count=1
function_name	à memcached::append() mais la ||| append by	count=1
function_name	objet blob ||| blob	count=1
function_name	s'interrompt si ||| set max poll time	count=1
function_name	dont l'identifiant ||| free	count=2
arg_pair	chaîne str à ||| string $str int $start	count=1
return	la base d'événement ||| void	count=1
function_name	classe est [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	les clés d'une ||| primary keys	count=1
arg_pair	les structures ||| int $textflow	count=1
function_name	des lettres minuscule ||| xheight	count=1
function_name	surveiller avec ||| set	count=1
return	le fait qu'elle fonctionne ||| int	count=1
arg_pair	liste des filtres ||| string $attribute array $values	count=1
function_name	toutes ||| stmt	count=1
function_name	brute ccitt ||| ccitt	count=1
function_name	[function_name_1] curseur utilisé ||| [function_name_2] [function_name_1]	count=4
namespace	vous ||| function	count=1
function_name	[function_name_1] content ||| [function_name_2] [function_name_1]	count=2
function_name	champ dans le ||| field	count=1
return	un élément ||| domelement	count=1
function_name	de fenêtre ||| imagegrabwindow	count=1
arg_pair	le ||| string $file	count=1
function_name	contexte [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la portée de l'espace ||| lookup namespace	count=1
function_name	de l'extension qui définit ||| extension	count=1
function_name	tâche ||| do background	count=2
namespace	la base ||| mongocursorinterface	count=1
function_name	révision ||| svn cat	count=1
function_name	possibilité de ||| oci cancel	count=1
return	acquis avec la ||| bool	count=1
function_name	xml ||| xml set notation decl handler	count=2
function_name	et de flux à ||| stream wrapper	count=1
arg_pair	qui est au ||| resource $connection	count=1
function_name	d'archives ||| zip	count=1
function_name	l'esclave ou bien ||| mysqlnd ms query	count=1
function_name	racine carrée de ||| sqrt	count=2
function_name	mime kopfzeile ||| iconv mime encode	count=1
function_name	la méthode unsubscribe ||| unsubscribe	count=1
function_name	de la prochaine ||| cubrid next	count=1
function_name	similaire à ||| by	count=1
function_name	la tâche en cours ||| background	count=1
function_name	[function_name_1] décrivant la ||| [function_name_1] [function_name_2]	count=4
arg_pair	[arg_pair] deux ||| [arg_pair]	count=3
function_name	retourne le nom de ||| name	count=3
namespace	un ||| sphinxclient	count=2
return	: la première contient ||| mongodb	count=1
function_name	ne doit ||| set metadata	count=1
function_name	crée un objet blob ||| ifx create blob	count=1
arg_pair	la colonne correspondant ||| int $field_offset	count=1
function_name	élément avec ||| get element by	count=1
return	supprime toutes les lignes ||| int	count=1
arg_pair	signaux indiqué dans set ||| array $siginfo	count=1
function_name	symbole de jacobi de ||| jacobi	count=1
function_name	espace de noms ||| namespace	count=1
function_name	spécifiée ||| apache	count=1
namespace	première fois) ||| recursivetreeiterator	count=1
arg_pair	l'index d'une couleur avec ||| resource $image int $red	count=1
function_name	[function_name_1] un ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=1
function_name	champ ||| res field	count=1
function_name	affiche [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	de sortie pour ||| fann set output	count=1
namespace	un document ||| domdocument	count=1
function_name	pour le neurone numéro ||| fann set	count=1
function_name	[function_name_1] pour être ||| [function_name_2] [function_name_1]	count=1
function_name	dbase_identifier [function_name] ||| dbase [function_name] record with	count=3
function_name	bases de données ||| dbs	count=3
function_name	utilisée sur le dossier ||| compressionmethod	count=1
function_name	tous les fichiers ||| uudecode all	count=1
function_name	retourne [function_name_1] [function_name_2] valeur d'un token php ||| [function_name_2] [function_name_1] int $token	count=1
return	un arc [return] ||| [return]	count=2
return	de travaux assigné ||| string	count=1
namespace	supprime ||| event	count=1
function_name	[function_name_1] document ||| [function_name_1] pdi [function_name_2]	count=1
function_name	précédents intervalles ||| elapsed	count=1
function_name	équivalent à memcached::prepend() ||| prepend by	count=1
return	à la ||| bool	count=4
return	sert à détruire ||| bool	count=1
function_name	un [function_name] ||| eio get event [function_name]	count=3
function_name	d'entrelacement de l'image ||| image interlace scheme	count=1
function_name	la largeur de la ||| width	count=1
function_name	sqlite ou ||| sqlite	count=1
function_name	[function_name_1] lié ||| [function_name_2] [function_name_1]	count=6
function_name	la connexion interbase ||| ibase	count=1
function_name	évènement ||| event	count=2
function_name	d'attente s'interrompt ||| poll	count=1
function_name	des antislashs devant les ||| db2 escape	count=1
function_name	appeler lorsqu'une tâche ||| created	count=1
namespace	fonction est ||| domdocument	count=1
function_name	l'uri ||| uri	count=3
arg_pair	point spécifié ||| float $x float $y	count=1
namespace	curseur ||| mongocursorinterface	count=1
arg_pair	les ||| resource $id	count=1
arg_pair	fichier fieldname téléchargé par ||| resource $fdf_document string $fieldname	count=1
return	caractères passée en ||| string	count=1
function_name	stocker les ||| array	count=1
function_name	fichier ||| uudecode	count=2
function_name	si elle prend ||| max	count=1
namespace	avec un objet gmagick ||| gmagick	count=1
function_name	suspend ||| pdf suspend	count=1
arg_pair	deux versions ||| string $version1 string $version2	count=1
arg_pair	ou le publier à ||| string $target sammessage $msg	count=1
function_name	serveur virtuel sous iis ||| iis get server by	count=1
function_name	pays [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	processus ||| int	count=1
arg_pair	un fichier spécial ou ||| string $pathname int $mode	count=1
function_name	document pdi ||| get pdi	count=1
arg_pair	un segment de ||| mixed $length	count=1
function_name	l'image suivante dans la ||| nextimage	count=1
return	des bases de ||| array	count=1
function_name	[function_name_1] le nom ||| [function_name_1] long [function_name_2]	count=1
function_name	crée une ||| create stopped	count=1
namespace	réponses dans ||| mongocursor	count=1
function_name	de la fermeture ||| close	count=1
function_name	le nom [function_name_2] ||| [function_name_2] [function_name_1]	count=82
function_name	d'activation pour ||| set activation function	count=3
return	les informations ||| object	count=2
namespace	composants qui sont ||| function	count=1
function_name	lettres du code ||| code	count=1
return	[return] responsable de ||| [return]	count=1
function_name	[function_name_1] la largeur ||| [function_name_1] text [function_name_2]	count=1
arg_pair	mysql_field_name() ||| int $field_offset	count=1
function_name	données du tampon fourni ||| add buffer	count=1
function_name	tri ||| sort	count=6
function_name	terme sur [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	une liste de méthodes ||| methods	count=1
function_name	par la forme et ||| form destroy	count=1
function_name	timestamp handler qui a ||| timestamp	count=1
function_name	la fonction d'activation pour ||| activation	count=3
function_name	de version du client ||| client version	count=1
function_name	points d'accès ccl qualifiers ||| yaz ccl conf	count=1
arg_pair	la fonction ||| int $hour	count=1
namespace	contenu des fichiers ||| mongogridfs	count=1
arg_pair	la ||| string $string	count=2
function_name	fonction libère les ||| newt form	count=1
function_name	fichiers ||| mailparse	count=1
arg_pair	à la fonction ||| int $day int $year	count=1
namespace	fichier qui ne ||| pharfileinfo	count=1
function_name	erreur imap si ||| imap	count=1
function_name	remplace les [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	table courante de fonction ||| table	count=1
function	[function_name_1] à un ||| [arg_pair_2] [function_name_1]	count=2
function_name	de la ||| dbplus	count=1
arg_pair	index d'une palette ||| resource $image int $index	count=1
function_name	données ||| repair	count=1
function_name	de rappel pour ||| callback handler install	count=1
namespace	de base ||| xmldiff\base	count=1
function_name	informations de ||| eio stat	count=1
function_name	méthode eventbuffer::lock() ||| unlock	count=1
arg_pair	rappel ||| mixed $callback	count=1
function_name	libère toute ||| mysql free	count=1
arg_pair	la ressource de la ||| int $type int $limit	count=1
function_name	retire ||| multi remove handle	count=2
arg_pair	[arg_pair] unix) et ||| [arg_pair]	count=3
function_name	erreur pour la dernière ||| errno	count=1
function_name	compare une ou plusieurs ||| compare image	count=1
namespace	données du fichier ||| function	count=1
function_name	le code [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	fonction vérifie si ||| is	count=1
function_name	faible priorité à ||| task low	count=1
function_name	un jeu de réplication ||| get hosts	count=1
function_name	prend plus ||| max poll time	count=1
function_name	la tangente pour ||| tan	count=1
function	un nom [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	caractères ? représentant les ||| resource $connection	count=1
function_name	pour définir ||| module	count=1
function_name	la dernière erreur ||| last error	count=1
arg_pair	de spotname et ||| string $spotname	count=1
arg_pair	=?iso-8859-1?... est la ||| string $field_name string $field_value	count=1
function_name	valeurs ||| ldap get values	count=3
function_name	forme et tous les ||| newt form destroy	count=1
function_name	l'image ||| set	count=1
function_name	schéma relaxng ||| set relax ngschema	count=1
function	d'un champ [arg_pair_2] ||| [function_name_1] name resource $result [arg_pair_2]	count=1
function_name	synchrone et définit ||| set	count=1
arg_pair	domaine ||| int $options	count=1
function_name	les bases de données ||| dbs	count=1
arg_pair	xml et produit les ||| string $to	count=1
function_name	courante du résultat ||| result	count=1
function_name	script en cours ||| set include	count=1
function_name	puis l'efface ||| clean	count=1
function_name	existante suivant ||| cat	count=1
function_name	la fonction mysqli_get_links_stats() retourne ||| mysqli get links stats	count=1
function_name	utilisateur uniquement ||| ucache	count=1
arg_pair	ne tient pas compte ||| string $pattern string $replacement	count=1
return	db2_lob_read() pour ||| string	count=1
function_name	la clé key sur ||| delayed by key	count=1
arg_pair	strcmp() elle n'est pas ||| string $str1	count=1
function_name	d'objets résultants et les ||| size	count=1
function_name	le [function_name] ||| apd get [function_name]	count=3
function_name	caractères passée en ||| db2 escape	count=1
function_name	modifie le jeu de ||| set	count=1
function	récupère [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=9
function_name	de compression utilisée ||| zip	count=1
function_name	retourne la ||| compressionmethod	count=1
return	construit un arbre de ||| sdo_das_xml_document	count=1
function	[function_name_1] la ligne ||| [arg_pair_2] [function_name_1]	count=1
function_name	un ||| mailparse uudecode all	count=2
function_name	identifiant de connexion ||| oci connect	count=3
arg_pair	le résultat à destfp ||| resource $destfp	count=1
namespace	entrée en utilisant ||| ziparchive	count=1
function_name	retourne la longueur ||| get length	count=3
function_name	sur ||| dbplus	count=1
namespace	dessin des lignes ||| function	count=1
function_name	[function_name_1] protégée ||| [function_name_2] [function_name_1]	count=1
arg_pair	apparaître après un terme ||| string $field_override	count=1
namespace	ou enregistre une fonction ||| function	count=1
namespace	est utile uniquement ||| mongoclient	count=1
arg_pair	un tableau comme ||| array $args	count=1
namespace	stocker ||| pharfileinfo	count=1
function_name	extrait ||| mailparse	count=1
function_name	lit une image depuis ||| read image	count=1
function_name	fichier exe ou auto-exécutable) ||| write exe footer	count=1
return	cette ||| mixed	count=1
arg_pair	à l'aide de deux ||| string $prefix	count=1
arg_pair	sur les paramètres ||| resource $ann	count=1
function_name	logo [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	le dictionnaire représenté ||| crack closedict	count=1
function_name	la ligne ||| mysql fetch	count=1
function_name	les entrées de la ||| cat	count=1
function_name	chromacité du point vert ||| image green primary	count=1
function_name	retourne true si ||| module is	count=1
function_name	les arguments d'une ||| args	count=1
function_name	de l'api cubrid ||| cubrid	count=2
arg_pair	la fonction mktime() ||| int $day	count=1
function_name	retour ||| wexitstatus	count=1
function_name	dernière tentative de connexion ||| connect errno	count=1
arg_pair	la suppression d'un document ||| array $deleteoptions	count=1
arg_pair	tableau des ||| array $cascade_activation_functions	count=1
function_name	de résultats mnogosearch ||| udm get res	count=1
arg_pair	statue un lien ||| resource $sftp string $path	count=1
function_name	crée une action qui ||| pdf create action	count=1
arg_pair	depuis la ||| string $filename int $options	count=1
function_name	un sommaire ||| imap fetch overview	count=1
function_name	pointeur interne de clé ||| firstkey	count=1
function_name	l'extension pour la constante ||| image type to extension	count=1
return	base ||| int	count=1
namespace	chaîne de caractères d'instance ||| sdo_das_xml	count=1
function_name	xml associé ||| xml	count=1
return	le ||| array	count=1
return	encodés ||| array	count=1
namespace	i/o ||| gearmanworker	count=2
function	premier [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	les informations de pagination ||| control paged result	count=1
arg_pair	fieldname ||| resource $fdf_document string $fieldname	count=1
function_name	prend plus de ||| eio	count=1
return	d'un fichier pour une ||| string	count=1
namespace	objets splsubject depuis lequel ||| splobserver	count=1
function_name	comparaison insensible ||| strcasecmp	count=1
function_name	le gestionnaire ||| handler	count=3
function_name	détruit la file de ||| queue	count=1
function_name	la génération d'une requête ||| query	count=1
arg_pair	indexé par ||| int $row_number	count=1
arg_pair	document xml depuis ||| string $filename	count=1
namespace	à la fonction mktime() ||| function	count=1
function_name	paramètres ||| string	count=1
function_name	de la ligne précédente ||| dbplus prev	count=1
function_name	crée un fichier spécial ||| posix mknod	count=1
function_name	l'échelle les données ||| fann scale	count=2
function_name	service nommé ||| service	count=1
function_name	écrit du texte ||| show	count=1
function_name	le nombre de ||| mysql num	count=2
function_name	s'interrompt ||| max poll	count=1
function_name	propriétés ||| properties	count=5
function_name	fonction glob() de ||| glob	count=1
function_name	associe l'image suivante dans ||| nextimage	count=1
function_name	couleur d'arrière-plan ||| trim	count=1
function_name	vérifie si le ||| is	count=1
arg_pair	de cartes de ||| string $threshold_map	count=1
function_name	à la fonction ||| close	count=1
function_name	cyrus imap ||| cyrus	count=1
function_name	retourne ||| yaz get	count=1
arg_pair	la ressource handle et ||| resource $handle	count=1
function_name	signature sha-256 de ||| getimagesignature	count=1
arg_pair	envoi un message ||| int $message_type	count=1
function_name	méthode d'entrelacement ||| image interlace scheme	count=1
arg_pair	défini ||| resource $ann float $quickprop_decay	count=1
namespace	le fichier ||| splfileobject	count=1
function_name	ou a ||| a	count=1
function	lie un tableau [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] compressed [function_name_2]	count=6
return	une requête ||| void	count=1
return	la ||| bool	count=11
function_name	la durée du script ||| include path	count=1
function_name	la base sqlite ||| sqlite	count=1
function_name	une nouvelle instance ||| new	count=1
function_name	une équivalence de bits ||| variant eqv	count=1
function_name	fréquence à partir de ||| frequency	count=1
arg_pair	num entrées toutes ||| int $start_index int $num	count=1
function_name	ajoute le ||| enchant dict add	count=1
arg_pair	point ||| float $y	count=1
arg_pair	le gestionnaire mutex ||| boolean $destroy	count=1
function_name	caractères d'instance xml ||| load string	count=1
return	colonnes de la ||| int	count=1
arg_pair	mémoire partagée ||| int $shmid int $start	count=1
function_name	sqlstate retournée par une ||| stmt error	count=1
function_name	s'interrompt si ||| eio set max	count=1
return	à détruire ||| bool	count=1
namespace	plus de résultats ||| mongocursorinterface	count=1
arg_pair	fixe la ||| resource $psdoc	count=1
function_name	la fréquence à ||| doc frequency	count=1
arg_pair	la fonction cubrid_connect() est ||| bool $new_link	count=1
arg_pair	une transaction distribuée/xa ||| mixed $connection	count=1
arg_pair	avec les ||| resource $id	count=1
function_name	sybase associé [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	canal de la couleur ||| color	count=1
function_name	spécifié est une ||| is	count=1
function_name	les caractères brutes des ||| return raw	count=1
function_name	une police et ||| font	count=1
function_name	liste [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	récupère la méthode utilisée ||| get	count=1
function	ouvre un ||| open resource $connection	count=1
return	fonction closedir() seul ||| void	count=1
function_name	[function_name_1] informations ||| [function_name_1] debug [function_name_2]	count=2
namespace	bits d'exécution des fichiers ||| pharfileinfo	count=1
function_name	filtre ||| stream filter	count=2
function_name	de compression utilisée sur ||| entry	count=1
arg_pair	un point de ||| resource $p	count=1
namespace	cette méthode ||| mongocursorinterface	count=1
return	retourne les informations ||| array	count=1
function_name	elle prend plus ||| max poll	count=1
arg_pair	séquence sequence et ||| string $sequence	count=1
namespace	le flux de ||| gmagick	count=1
function_name	cette méthode ||| call	count=1
arg_pair	fbsql_field_name() ||| int $field_offset	count=1
function_name	de peinture ||| stroking	count=1
function_name	fonction retourne la ||| get	count=2
arg_pair	utilisant le séparateur delimiter ||| string $delimiter	count=1
function_name	donné ||| get	count=1
rest	[return_1] informations utiles ||| [function_2] [return_1]	count=1
function_name	configuration ||| reset config	count=1
function_name	sauve dans le fichier ||| openssl csr export to file	count=1
function_name	les données d'entrainement à ||| input train data	count=1
function_name	courante du ||| show	count=1
function_name	prend plus ||| eio set	count=1
arg_pair	dans ||| resource $handle	count=1
arg_pair	le comptage des termes ||| int $frequency	count=1
function_name	textes qui correspondent avec ||| mb ereg	count=1
function_name	division exacte ||| gmp divexact	count=1
function_name	son exécution ou ||| set	count=1
return	dans un fichier donné ||| int	count=1
function_name	pour diriger ||| set	count=1
function_name	bits de types or ||| variant or	count=1
function_name	[function_name_1] élément enfant ||| [function_name_1] [function_name_2]	count=1
function	déplace le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	filtre entier à la ||| set filter range	count=1
function	[function_name_1] event ||| [function_name_1] [arg_pair_2]	count=4
function_name	lot d'objets résultants ||| size	count=1
arg_pair	l'aide de deux collections ||| string $prefix	count=1
function_name	la fonction getimagesize() ||| getimagesizefromstring	count=1
function_name	et libère toutes les ||| event base free	count=1
function_name	un tableau qui contient ||| fetch array	count=1
function	[function_name_1] chaîne str ||| [arg_pair_2] [function_name_1]	count=3
return	le dossier d'archives ||| string	count=1
arg_pair	base dbase_identifier ||| int $dbase_identifier	count=1
function_name	rassemble les éléments ||| array merge	count=1
arg_pair	écrit du texte à ||| resource $psdoc	count=1
function_name	script courant ||| exit	count=1
function_name	d'équilibrage de charge ||| ms	count=1
arg_pair	options qui ||| resource $link array $options	count=1
function_name	einer mime kopfzeile dans ||| iconv mime encode	count=1
function_name	tailles de clés ||| enc get supported key sizes	count=1
function_name	l'extérieur de fonction ou ||| runkit import	count=1
arg_pair	filename ||| string $mode	count=1
function_name	le nom de ||| name	count=11
function_name	tableaux avec des tests ||| array uintersect assoc	count=1
function_name	en ||| form destroy	count=2
arg_pair	fait qu'elle ||| string $pattern	count=1
function_name	fonction geoip_country_code3_by_name() ||| geoip country code3 by	count=1
namespace	cette fonction est similaire ||| domdocument	count=1
function_name	les erreurs ||| get error	count=1
function_name	gestionnaire [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	de [function_name_2] ||| [function_name_1] cascade [function_name_2]	count=1
namespace	extrait ||| function	count=1
namespace	de compression ||| function	count=1
function_name	valeurs correspondantes ||| into struct	count=1
function_name	pour modifier ||| set resource	count=1
function_name	similaire à la fonction ||| mysql field type	count=1
function_name	l'intervalle quantique ||| quantum range	count=1
function_name	recherche le prochain ||| next	count=1
function_name	compte ||| count	count=1
function_name	utilisées par la forme ||| newt form destroy	count=1
function_name	désigné par ||| xattr set	count=1
arg_pair	les deux versions ||| string $version1	count=1
function_name	données du fichier fourni ||| uudecode all	count=1
return	synchronise la ||| mixed	count=1
function_name	le nom du groupe ||| filegroup	count=1
function_name	lit le groupe d'appartenance ||| group	count=1
arg_pair	chemin path ||| string $path	count=2
arg_pair	fixe ||| int $fontid	count=1
return	objet contenant les ||| object	count=1
arg_pair	brosse courante pour ||| resource $image	count=1
function_name	[function_name_1] affectées par ||| [function_name_2] [function_name_1]	count=12
function_name	va échouer ||| replace	count=1
function_name	chaîne de caractères passée ||| escape	count=1
namespace	détermine ||| pharfileinfo	count=1
function_name	verrou sur la ||| getlock	count=1
arg_pair	spécifié par l'argument offset ||| resource $lob_identifier int $offset	count=1
function_name	sans attendre le ||| pg send query	count=1
function_name	modifie la valeur de ||| include	count=1
arg_pair	comptage des termes ||| int $frequency string $field_override	count=1
arg_pair	lit les options ||| array $longopts	count=1
function_name	demande à readline de ||| readline	count=1
function_name	une ou [function_name] ||| set [function_name]	count=1
function_name	que pour stocker ||| set metadata	count=1
function_name	fils aussi cette méthode ||| has children	count=1
namespace	valeur de la ||| function	count=1
arg_pair	lui associe un ||| int $rows	count=1
function_name	[function_name_1] de version ||| mysqli [function_name_1] client [function_name_2] mysqli $link	count=1
return	d'un ||| int	count=14
arg_pair	sont un voisin immédiat ||| mixed $bordercolor	count=1
function	[function_name_1] l'index spécifié ||| [function_name_1] name resource $result [arg_pair_2]	count=1
function_name	[function_name_1] file ||| [function_name_1] [function_name_2]	count=2
function_name	de flux à utiliser ||| stream	count=1
function_name	serveur mysql ||| server	count=1
function_name	l'algorithme de chiffrement ||| mcrypt	count=1
namespace	le serveur de ||| memcache	count=1
arg_pair	mysql_field_name() ||| resource $result int $field_offset	count=1
function_name	d'erreur à l'historique d'erreur ||| error	count=1
function_name	retaille et déplace le ||| chop	count=1
arg_pair	la clé key ||| string $key	count=2
function_name	avec un traitement appliqué ||| preview images	count=1
function_name	demande ||| request	count=1
arg_pair	vérifie si un ||| resource $dict	count=1
arg_pair	initialise ces paramètres ||| int $from_neuron int $to_neuron	count=1
return	[return] la ||| [return]	count=2
arg_pair	avec la ||| resource $radius_handle	count=1
function_name	ajoute le code javascript ||| add doc	count=1
function_name	identique à [function_name] avec ||| [function_name] fetch	count=1
function_name	un ||| posix mknod	count=2
arg_pair	à fournir à ob_start() ||| string $contents int $status	count=1
arg_pair	document ||| string $index	count=1
arg_pair	centrée sur ||| int $cy int $width	count=1
function_name	timer à utiliser ||| timer set	count=1
function_name	de la ||| dbase numfields	count=1
arg_pair	php ou une ||| string $name mixed $step_callback	count=1
function_name	informations du dernier tableau ||| info table	count=1
function_name	[function_name_1] distincts ||| [function_name_1] [function_name_2]	count=4
arg_pair	modifie l'entrée dn ||| string $dn	count=1
function_name	à l'échelle ||| scale train	count=1
arg_pair	à une colonne ||| mixed $column mixed $param	count=1
function_name	libère la mémoire des ||| free stmt	count=1
arg_pair	le fichier remote_file depuis ||| int $mode	count=2
function_name	l'échelle ||| scale output	count=1
function_name	signal ||| signal	count=2
function_name	clob ||| fbsql clob	count=1
return	donne la valeur ||| mixed	count=1
function_name	extension à utiliser dans ||| register extension	count=1
arg_pair	rappel si ||| mixed $callback	count=1
function_name	compile ||| compile	count=1
function_name	fait que les paramètres ||| gmmktime	count=1
return	dernière ||| int	count=1
function_name	en xml ||| xml	count=1
function_name	associatif contenant ||| assoc	count=1
arg_pair	nth -ème ||| int $nth	count=1
namespace	de données ||| function	count=1
function_name	détruire un bloc de ||| delete	count=1
function	compare les [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	rassemble les éléments de ||| merge	count=1
function_name	est de [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	en cours ||| string	count=1
function_name	numéro ||| get	count=1
namespace	forme ||| function	count=2
function_name	à la fonction ||| get element	count=1
function_name	l'index de l'octet ||| byte index	count=1
arg_pair	et en retourne les ||| array $imageinfo	count=1
namespace	de résultats ||| mongocursorinterface	count=1
function_name	un patch [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	9 ||| images	count=1
arg_pair	àx y ||| float $y	count=1
arg_pair	fonction est identique à ||| string $pattern	count=1
function_name	protège les caractères qui ||| escape string	count=1
namespace	dossier ||| function	count=1
return	de l'application ||| string	count=1
function_name	à détruire ||| shmop	count=1
namespace	pour la ||| recursivetreeiterator	count=1
function_name	pour la première ||| end	count=1
namespace	le curseur est à ||| mongocursorinterface	count=1
function_name	non dans la session ||| dict is in session	count=1
function_name	modifie la gestion des ||| odbc binmode	count=1
function_name	calendrier grégorien ||| gregoriantojd	count=1
function_name	de la transaction ||| transaction	count=1
function_name	charge ||| workload	count=1
function_name	document html ||| save html	count=1
function_name	de caractères ||| iconv set	count=1
function_name	la ligne [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] d'un attribut ||| [function_name_2] [function_name_1]	count=1
function_name	le nom de l'organisation ||| by name	count=1
function_name	nombre ||| num	count=14
function_name	décrémente la valeur numérique ||| decrement	count=1
return	tableau associatif avec ||| array	count=1
arg_pair	recherche sur ||| string $pattern	count=1
arg_pair	=?iso-8859-1?... ||| string $field_name string $field_value	count=1
arg_pair	[arg_pair_1] un serveur ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	nombre maximal ||| mlt max num	count=4
function_name	remplit ||| fill	count=3
function_name	décide si ||| qc	count=1
arg_pair	un hyperlien à une ||| float $lly float $urx	count=1
function_name	définition ||| meta data	count=2
arg_pair	vers le chemin path ||| string $path	count=1
function_name	classe ||| set info class	count=1
arg_pair	mode à utiliser ||| string $mode_directory	count=1
namespace	[namespace] en lecture ||| [namespace]	count=2
function_name	pour ||| set file	count=1
function_name	et est soit ||| is dot	count=1
arg_pair	entrées toutes ||| int $start_index	count=1
function_name	champ ||| field	count=15
namespace	pointeur interne d'un lob ||| oci-lob	count=1
function	[function_name_1] needle dans ||| [arg_pair_2] [function_name_1]	count=3
function_name	calcule le sinus de ||| sin	count=1
arg_pair	cubrid et sauvegarde ||| resource $conn_identifier	count=1
arg_pair	les contextes v8js ||| array $dependencies bool $auto_enable	count=1
return	verrou acquis avec la ||| bool	count=1
function	décrivant la [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	prochain résultat ||| next result	count=4
function_name	de transfert [function_name_2] ||| [function_name_2] [function_name_1] resource	count=1
arg_pair	que timestamp ||| int $timestamp	count=1
function	[function_name_1] un fichier ||| [function_name_1] pvf [arg_pair_2]	count=1
arg_pair	filtres en court ||| int $max bool $exclude	count=1
arg_pair	la fonction radius_config() ||| string $secret	count=1
function_name	caractères lors ||| eregi	count=1
arg_pair	par le paramètre pos ||| int $pos	count=1
function_name	base de données msql ||| msql	count=1
namespace	la bibliothèque ||| sqlite3	count=1
function_name	la fréquence à partir ||| mlt min doc frequency	count=1
function_name	le fait qu'elle ||| proc close	count=1
function_name	événement timer à ||| event timer set	count=2
arg_pair	des ||| string $pattern	count=1
function_name	au champ spécifié par ||| mysql field	count=1
function_name	prochain élément devient disponible ||| next element	count=1
function_name	de ||| max	count=1
function_name	cette ||| destroy	count=1
function_name	avaient été ||| newt form	count=1
return	d'erreurs et optionnellement les ||| array	count=1
function_name	la fonction cubrid_connect_with_url() ||| with url	count=1
function_name	file d'attente s'interrompt si ||| poll	count=1
function_name	une ligne dans une ||| fetch	count=1
return	cette fonction libère ||| void	count=1
return	le coin en haut ||| bool	count=1
function_name	couleur de ||| color	count=3
function_name	mysql courante ou sur ||| mysql	count=1
function_name	fonction retourne une instance ||| get	count=1
function_name	xa ||| ms xa gc	count=2
function_name	remplace ||| substr replace	count=1
function_name	d'activation pour ||| fann set activation	count=8
function_name	valeurs de ||| values	count=1
function_name	exe ||| write exe footer	count=2
return	une réponse en retour ||| void	count=1
arg_pair	chaîne needle dans la ||| string $needle	count=1
return	un bloc ||| bool	count=1
arg_pair	sert ||| resource $fd int $pos	count=1
arg_pair	object_id ||| string $type	count=1
return	utilisées par ||| void	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] attribute [function_name_2]	count=1
function_name	[function_name_1] court d'un ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] fond de ||| [function_name_1] high [function_name_2]	count=1
function_name	lie un socket ||| bind	count=1
function_name	configure la couleur de ||| set background color	count=1
namespace	place ||| function	count=1
return	de la fin ||| void	count=1
function_name	pour la durée ||| include	count=1
function_name	excepté le fait que ||| gmmktime	count=1
function_name	processus courant ||| pcntl	count=1
function_name	insère l'entrée décrite ||| dba insert	count=1
function_name	tâche en cours ||| background	count=1
arg_pair	l'évènement bevent ||| resource $bevent	count=1
arg_pair	fonction mktime() excepté le ||| int $hour	count=1
arg_pair	fourni et l'enregistre dans ||| string $afmfile string $pfmfile	count=1
function_name	à la position ||| ps	count=1
namespace	de données ||| mongocursorinterface	count=1
function	lie [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
arg_pair	dans un résultat ||| resource $result	count=1
function	[function_name_1] à cert ||| [function_name_1] [arg_pair_2]	count=4
function_name	avec la licence imagemagick ||| image magick license	count=1
function_name	dernier accès ||| eio futime	count=1
function_name	un document ||| document	count=1
function_name	un marqueur ||| bind array by	count=1
function_name	geoip_country_code3_by_name() retourne les ||| geoip country code3	count=1
arg_pair	réseau complet dans un ||| string $configuration_file	count=1
function_name	une représentation yaml de ||| yaml emit	count=1
function_name	implosé par ||| implode image	count=1
function_name	termine le script ||| exit	count=1
function_name	mois month de l'année ||| cal days in month	count=1
function	définit les [function_name_1] [arg_pair_2] ||| bool [function_name_1] [arg_pair_2]	count=1
arg_pair	cette ||| bool $preserve_cloned_files	count=1
return	acquis avec ||| bool	count=1
function_name	utilisée sur ||| zip entry	count=1
function_name	curseur typiquement ||| size	count=1
function_name	est un tableau ||| is array	count=2
return	pas ||| void	count=1
function_name	[function_name_1] terme sur ||| [function_name_2] [function_name_1]	count=1
arg_pair	nombre left_operand à ||| string $left_operand	count=1
function_name	données restantes ||| gzpassthru	count=1
function_name	[function_name_1] ftp ||| [function_name_2] [function_name_1]	count=1
function_name	une représentation yaml ||| yaml emit	count=1
arg_pair	par défaut ||| mysqlnd_connection $connection	count=1
namespace	extrait dans un fichier ||| function	count=1
function_name	[function_name_1] maximale ||| [function_name_1] [function_name_2]	count=1
function_name	depuis un ||| load from	count=4
arg_pair	d'une base ||| string $database resource $link_identifier	count=1
function_name	la ||| string	count=2
function_name	l'identifiant [function_name_2] ||| [function_name_2] [function_name_1]	count=12
namespace	la première ||| recursivetreeiterator	count=1
return	vérifie si la file ||| bool	count=1
function_name	facon numérique ||| values	count=1
function_name	un arc ||| arc	count=1
function_name	l'état de bufferisation ||| buffering	count=1
namespace	incluant les composants qui ||| function	count=1
function_name	retourne la valeur courante ||| snmp get	count=1
function_name	avaient été ajoutés ||| newt form	count=1
arg_pair	à ||| int $second int $month	count=1
function_name	s'interrompt si elle ||| set max poll time	count=1
arg_pair	lecture ||| int $lob_mode	count=1
function_name	caractères ||| escape string	count=4
function_name	doit pas être ||| construct	count=1
function_name	fragmentation ||| highlight regex pattern	count=3
return	l'image ||| gmagick	count=1
function_name	la méthode recursivetreeiterator::valid() retourne ||| end	count=1
function_name	l'endroit où ||| fann set	count=1
function_name	compression ||| entry	count=1
arg_pair	mot word est correctement ||| string $word	count=1
function_name	permissions ||| eio fchmod	count=1
namespace	contexte ||| zmqcontext	count=1
namespace	l'objet ||| collectable	count=1
function_name	utilise spanscorer pour coloriser ||| set highlight highlight	count=1
function_name	encode ||| encode	count=1
function_name	composants qui sont ||| newt form destroy	count=1
namespace	première ligne ||| splfileobject	count=1
namespace	curseur est à la ||| mongocursorinterface	count=1
function_name	les attributs ||| attributes	count=2
function_name	à l'échelle les données ||| fann scale train	count=1
arg_pair	un préfixe ||| string $prefix string $field_override	count=1
function_name	mysqli_thread_id() retourne l'identifiant ||| id	count=1
arg_pair	envoi tous les ||| callable $callback	count=1
arg_pair	et propriétaire pour ||| string $owner_password	count=1
arg_pair	de alpha degrés ||| resource $p float $alpha	count=1
namespace	dans l'objet arrayobject ||| arrayobject	count=1
function_name	guid ||| mssql guid	count=1
function_name	le référentiel ||| svn commit	count=1
arg_pair	un générateur d'extraits de ||| string $fragmenter string $field_override	count=1
arg_pair	dans ||| string $map int $storage	count=1
function_name	dans la portée de ||| lookup namespace	count=1
function_name	est similaire ||| mysql field type	count=1
function_name	de gabarit [function_name_2] ||| [function_name_2] begin [function_name_1]	count=1
function_name	configure les couleurs ||| color set	count=1
function_name	calcule les paramètres d'échelle ||| params	count=1
function_name	socket créé ||| stream socket accept	count=1
arg_pair	: left top ||| float $left float $top	count=1
arg_pair	le paramètre filename à ||| string $filename	count=1
function_name	avaient ||| form	count=1
return	boucle libeio tant que ||| bool	count=1
function_name	de l'étape d'erreur sarprop ||| set sarprop step error shift	count=1
function_name	à l'échelle les ||| scale	count=4
return	le verrou exclusif ||| int	count=1
function_name	surveillance en cours ||| watch	count=1
function_name	que les paramètres ||| gmmktime	count=1
function_name	requête appelée dans ||| stmt	count=1
function_name	typiquement ||| batch size	count=2
function_name	si elle prend ||| set max poll time	count=1
function_name	chaîne est [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	tous ||| domnodelist	count=1
function_name	dernière requête ayant ||| last	count=1
arg_pair	et empile ||| array $array mixed $value1	count=1
function_name	récupérer le nombre de ||| num	count=1
function_name	le nom ||| by name	count=1
namespace	la page ||| harupage	count=3
return	a échoué de façon ||| bool	count=1
function_name	fonction cubrid_current_oid() est utilisée ||| cubrid current oid	count=1
function_name	connecte ||| ps closepath	count=1
function_name	valeur ||| include	count=1
function_name	la base de ||| numfields	count=1
function	le texte [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	vérifie si l'on doit ||| query is	count=1
function_name	existe et est accessible ||| is readable	count=1
function_name	représentant la métrique pour ||| queryfontmetrics	count=1
arg_pair	une chaîne d'un ||| string $from	count=1
namespace	à la chaîne ||| function	count=1
arg_pair	aux coordonnées x ||| float $x	count=1
function_name	l'endroit où les ||| log	count=1
function_name	retourne la fréquence en ||| get mlt min term frequency	count=1
function_name	d'activation pour ||| fann set activation function	count=3
arg_pair	de la ||| string $pattern string $string	count=1
function_name	champ de ||| field	count=1
arg_pair	les occurrences de search ||| mixed $search	count=2
function_name	deux collections ||| construct	count=1
arg_pair	messages de la sequence ||| resource $imap_stream string $sequence	count=1
function_name	passe de la base ||| fbsql database password	count=1
function_name	la fonction d'activation ||| activation function output	count=1
arg_pair	prompt ||| string $prompt	count=1
function_name	taille d'un blob ||| blob	count=1
function_name	est utilisée en conjonction ||| stop	count=1
function_name	données postgresql ||| pg	count=3
arg_pair	un [arg_pair] dans le ||| [arg_pair]	count=1
function_name	est utilisée pour ||| set add	count=1
function_name	utilisées par ||| destroy	count=1
function_name	ne ||| set metadata	count=4
function_name	n'a ||| dead	count=1
function_name	prochain résultat du jeu ||| next	count=1
function	image [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	sélectionne une ||| db	count=1
arg_pair	des différences et ||| string $src	count=1
function_name	être utilisée pour ||| set by key	count=1
return	identique ||| int	count=2
function_name	[function_name_1] de tri ||| [function_name_2] [function_name_1]	count=2
arg_pair	les attributs ||| resource $fd	count=1
function_name	intervalles clos ||| elapsed time	count=1
function_name	la fréquence minimale du ||| cache min default frequency	count=1
function_name	méthode ev::backend() mais pour ||| backend	count=1
function_name	celui-ci ||| gzrewind	count=1
function_name	retourne un sommaire ||| overview	count=1
function_name	dossier d'archives spécifié ||| zip entry compressionmethod	count=1
function_name	optimise la ||| optimize	count=1
function_name	compression utilisée ||| zip entry compressionmethod	count=1
function_name	si elle prend ||| max poll	count=1
function	[function_name_1] un objet ||| [arg_pair_2] [function_name_1]	count=2
function_name	spécifié) dans le flux ||| stream	count=1
arg_pair	applique une ||| resource $image array $matrix	count=1
arg_pair	un ||| resource $fdf_document	count=1
function_name	données ||| all	count=1
arg_pair	défini le ||| resource $ann float $quickprop_mu	count=1
function_name	accès et de ||| eio futime	count=1
function_name	de données ||| factory	count=1
namespace	fonction libère les ressources ||| function	count=1
arg_pair	rappel callback qui ||| callable $callback	count=1
return	sql ||| int	count=1
function_name	utilisant la fonction ingres_query() ||| ingres fetch	count=1
function	taille [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	facet qui doit être ||| facet	count=1
arg_pair	pour l'uid uid ||| int $uid	count=1
function_name	processus ||| pcntl wait	count=2
function_name	point courant jusqu'au point ||| close path	count=1
arg_pair	l'image reconstituée ||| int $metric	count=1
function_name	[function_name_1] du texte ||| [function_name_2] [function_name_1]	count=20
function	lie un tableau [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	l'époque minimale de ||| cascade min out epochs	count=1
arg_pair	sert à modifier ||| int $pos	count=1
namespace	afin de [namespace] ||| [namespace]	count=2
function_name	le délai de l'image ||| image delay	count=1
function_name	fait ||| gmmktime	count=1
function_name	l'expression régulière pattern ||| pattern	count=1
function_name	courant du ||| get	count=1
function_name	remplace ||| replace	count=4
arg_pair	soit terminé, ou qu'un ||| int $status	count=1
function_name	shell ||| shell	count=1
function_name	en argument ||| db2	count=1
function_name	signal ||| pcntl signal	count=1
function_name	script ||| include path	count=2
function_name	postgresql ||| pg fetch result	count=2
return	l'écriture de tous ||| bool	count=1
arg_pair	affecte le flag spécifié ||| string $flag	count=1
arg_pair	le démarre automatiquement ||| mixed $data int $priority	count=1
function_name	la fonction ||| fbsql field	count=1
return	requête si ||| bool	count=1
function_name	déplace le curseur ||| field seek	count=1
arg_pair	qui commence par =?iso-8859-1?... ||| string $field_name string $field_value	count=1
function_name	paramètres au serveur ||| query params	count=1
namespace	une nouvelle instance rrdgraph ||| rrdgraph	count=1
function_name	remplit ||| pdf fill pdfblock	count=2
function_name	spécifiée ||| sqlsrv	count=2
function_name	lien ||| link	count=1
return	dans une chaîne ||| int	count=1
function_name	[function_name_1] le schéma ||| [function_name_1] [function_name_2]	count=1
function_name	le nombre de champs ||| field count	count=2
return	que ceux de ||| void	count=1
function_name	ajoute ||| ps add	count=1
function_name	retire un gestionnaire ||| multi remove handle	count=1
function_name	les entités html de ||| html entity	count=1
function_name	prochaine [function_name_2] ||| [function_name_2] [function_name_1]	count=5
return	méthode ||| mixed	count=1
function_name	cette fonction est ||| element	count=1
function_name	connexion en cas de ||| yaz connect	count=1
function_name	évènement [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	nom de domaine unicode ||| string $domain	count=1
arg_pair	des filtres courante ||| string $attribute array $values	count=1
function_name	associé ||| result	count=2
namespace	les clé ||| arrayobject	count=1
function_name	[function_name_1] le nom ||| [function_name_1] [function_name_2]	count=4
function_name	retourne la valeur ||| get	count=10
arg_pair	seconde contient le contenu ||| mongodb $db	count=1
arg_pair	et la ||| mongodb $db string $prefix	count=1
function_name	sauvegarde la requête de ||| save	count=1
function_name	la [function_name_1] [function_name_2] ||| [function_name_2] get [function_name_1]	count=7
function_name	enregistrement dans le jeu ||| yaz record	count=1
function_name	blob ibase pour récupérer ||| ibase blob	count=1
arg_pair	mode wsdl ou non-wsdl ||| mixed $wsdl	count=1
arg_pair	ajoute un message dans ||| resource $reason	count=1
function_name	gabarit ||| template	count=1
function_name	donnée ||| offset set	count=2
arg_pair	la fonction socket_create() ||| resource $socket string $address	count=1
function_name	à la fonction ||| fbsql field	count=1
function_name	[function_name_1] taux de ||| [function_name_1] [function_name_2]	count=1
namespace	a terminé ||| collectable	count=1
function_name	valeur de sqlstate ||| stmt error	count=1
function	[function_name_1] une séquence ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	seconds secondes ||| int $seconds	count=1
function_name	le dossier d'archives spécifié ||| zip entry compressionmethod	count=1
function_name	[function_name_1] police courante ||| [function_name_2] [function_name_1]	count=4
return	modules à ||| void	count=1
function	[function_name_1] d'un ||| [function_name_1] [arg_pair_2]	count=7
function_name	jeu de résultats ||| db2 columns	count=1
arg_pair	chaîne str ||| string $str string $from	count=1
function_name	taux de connexion lorsque ||| connection rate	count=1
namespace	à 4 ||| mongocursor	count=1
function_name	l'octet courant de ||| current byte index	count=2
function_name	[function_name_1] trace de ||| [function_name_2] [function_name_1]	count=1
function_name	un fichier temporaire tous ||| all	count=1
return	tableau associatif contenant ||| array	count=1
arg_pair	identifié par handle ||| resource $ftp_stream resource $handle	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=5
namespace	hash ||| quickhashinthash	count=4
function	[function_name_1] un fichier ||| [arg_pair_2] [function_name_1]	count=1
return	la ||| gmagick	count=1
function_name	libère un descripteur ||| oci free descriptor	count=1
function_name	depuis la liste des ||| list	count=1
function_name	définit le ||| setproctitle	count=1
function_name	regroupements [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	si cela correspond parfaitement ||| tremove	count=1
function_name	fichier temporaire tous les ||| uudecode all	count=1
function_name	le nombre de champs ||| count	count=2
arg_pair	résultats result ||| resource $result int $index	count=1
return	en utilisant la couleur ||| gmagickdraw	count=1
arg_pair	pour un traçage ||| resource $connection string $action_name	count=1
function_name	tag [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	requête query à la ||| resource $link_identifier	count=1
function_name	la forme et ||| newt form destroy	count=1
namespace	représentant [namespace] ||| [namespace]	count=1
function_name	le sinus de ||| trader sin	count=1
return	un fichier qui ||| void	count=1
function	[function_name_1] le ||| [function_name_1] namespace decl handler [arg_pair_2]	count=1
function_name	la fin de l'itération ||| end iteration	count=1
function_name	première ||| strpos	count=1
namespace	le fichier ||| pharfileinfo	count=1
arg_pair	taille de size avec ||| array $array int $size	count=1
function_name	fichier paradox en ||| px	count=1
function_name	de l'attribut dans l'espace ||| attribute ns	count=1
function_name	de noms ||| field names	count=1
function_name	liste tous les ||| list	count=3
function	un tableau [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	paire de sockets ||| socket pair	count=1
arg_pair	paramètre variable_name dans ||| resource $introspection string $variable_name	count=1
function_name	de rappel [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	stoppe une base de ||| stop	count=1
function_name	la ||| zip	count=1
function_name	construit un nouvel objet ||| construct	count=7
function_name	détruire ||| delete	count=1
function_name	casse ||| change key case	count=1
return	de ||| string	count=22
function_name	retourne des informations sur ||| stat	count=1
function_name	met à l'échelle les ||| scale output	count=1
function	[function_name_1] fichier identifié ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	le tableau associatif assoc_array ||| array $assoc_array	count=1
function_name	libère ||| newt	count=1
function_name	le content ||| content type	count=2
function_name	une région d'une ||| region	count=1
arg_pair	équivalente à memcached::set() hormis ||| int $expiration	count=1
arg_pair	username et le ||| resource $ftp_stream string $username	count=1
function_name	du [function_name] ||| [function_name] fetch	count=2
function_name	alias de ||| set	count=1
function_name	stmt ||| stmt	count=1
namespace	qui ||| function	count=9
function_name	la résolution de l'image ||| getimageresolution	count=1
function_name	enregistrement dans le ||| record	count=1
function	[function_name_1] du mode ||| [function_name_1] string $mode [arg_pair_2]	count=1
function_name	le mois month ||| month	count=1
namespace	la ||| spldoublylinkedlist	count=1
function_name	serveur sans attendre le ||| pg send query	count=1
namespace	méthode ||| ev	count=2
arg_pair	ou ordinaire ||| int $minor	count=1
arg_pair	de str ||| int $phonemes	count=1
function_name	résultats mnogosearch ||| udm get res param	count=1
arg_pair	rouge [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	de fond de ||| background	count=1
arg_pair	espace de noms ||| string $qualifiedname	count=1
function_name	le premier ||| to first	count=1
function_name	accès à ||| dio	count=1
function_name	image [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	la fonction est une ||| is	count=1
function_name	trouve la colonne d'offset ||| field table	count=1
function_name	la police actuellement utilisée ||| current font	count=1
namespace	caractères lors de ||| function	count=1
return	lors d'une annotation ||| int	count=1
arg_pair	casse des caractères ||| string $string	count=1
function_name	l'anglet ||| miter	count=1
arg_pair	retourne une ressource de ||| string $connection_string int $connect_type	count=1
function_name	dans un fichier ||| mailparse	count=1
function_name	fréquence à partir de ||| mlt min doc frequency	count=1
return	où ||| void	count=1
namespace	contient le contenu des ||| mongogridfs	count=1
arg_pair	avec xsltprocessor ||| string $namespace	count=1
function_name	ingres_query() ||| ingres fetch	count=1
function	[function_name_1] x509cert ||| [function_name_1] parse [arg_pair_2]	count=2
function_name	[function_name_1] en-têtes ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] couleur de ||| [function_name_2] [function_name_1]	count=6
function_name	la temporisation de ||| ob end flush	count=1
arg_pair	défini l'endroit où ||| resource $errdat	count=1
namespace	représenté par ||| function	count=4
arg_pair	seconde ||| mongodb $db string $prefix	count=1
function_name	charge une image pour ||| open image file	count=1
arg_pair	de mémoire partagée ||| int $start	count=1
arg_pair	une fonction anonyme à ||| string $code	count=1
function_name	grande taille de ||| lo	count=1
function_name	une ligne ||| fetch	count=4
arg_pair	champs au format csv ||| string $escape	count=1
function_name	une exception de ||| set using	count=1
function_name	informations de déboguage ||| debug	count=1
function_name	calcule le et logique ||| gmp and	count=1
arg_pair	result ||| resource $result int $index	count=1
function_name	couleur ||| color space	count=2
function_name	le dictionnaire représenté ||| crack	count=1
arg_pair	en retourne les ||| array $imageinfo	count=1
arg_pair	listant les procédures d'enregistrement ||| string $schema string $procedure	count=1
function_name	[function_name_1] lier ||| [function_name_1] [function_name_2] resource $req_identifier	count=3
return	du fichier fourni et ||| array	count=1
function_name	de la méthode event::del() ||| del signal	count=1
function_name	messages de déboguage ||| debug	count=1
namespace	synchronise la base de ||| tokyotyrant	count=1
arg_pair	et y ||| int $flags	count=1
return	objet représentant le jeu ||| sqlite3result	count=1
arg_pair	par le paramètre filename ||| string $filename	count=1
function_name	courante [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	le noeud ||| node	count=1
arg_pair	caractères ||| string $string	count=2
function_name	date ||| date	count=1
namespace	ce travail ||| gearmanjob	count=2
function_name	image ou un gabarit ||| image	count=1
function_name	script en ||| set include	count=1
function_name	la clé key ||| get multi by key	count=1
function_name	retourne les en-têtes ||| headers	count=1
namespace	méthode recursivetreeiterator::valid() ||| recursivetreeiterator	count=1
arg_pair	supprime les espaces ||| string $character_mask	count=1
function_name	composition de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	système ou ||| function	count=1
function_name	serveur sybase associé ||| sybase	count=1
arg_pair	buf via le ||| resource $socket string $buf	count=1
namespace	de ||| gmagick	count=7
function_name	des antislashs devant ||| db2 escape string	count=1
arg_pair	sur le nombre de ||| int $offset	count=1
function_name	passé par [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	incluant les composants ||| form destroy	count=1
function_name	de l'encodage ||| encoding	count=1
function_name	ajoute une ||| add task	count=2
function_name	de la compression ||| get compression	count=1
arg_pair	fourni ||| int $length	count=1
function_name	dn dn ||| dn	count=1
function_name	équivalent à memcached::append() mais ||| append by key	count=1
function_name	par ibase_connect() ou ibase_pconnect() ||| drop	count=1
arg_pair	fusionne 3 chaînes ||| string $old_data	count=1
arg_pair	nombre prédéfini de cartes ||| int $channel	count=1
arg_pair	qu'elle ||| string $string	count=1
return	un lot d'objets résultants ||| mongocommandcursor	count=1
function_name	ne peuvent ||| set metadata	count=1
function_name	utilisé pour tracer la ||| maxdb	count=1
function_name	[function_name_1] erreur d'une ||| [function_name_2] [function_name_1]	count=10
function_name	d'affichage ||| mb http output	count=2
arg_pair	un message dans ||| resource $compcode	count=1
return	un fichier régulier ||| resource	count=1
function_name	profil ||| profile	count=2
function_name	l'échelle les données ||| scale train	count=1
function_name	position indiquée ||| newt draw root text	count=1
return	d'archives ||| string	count=1
function_name	recherche le précédent ||| prev	count=1
function_name	lorsque l'espace de noms ||| namespace	count=1
function_name	[function_name_1] un service ||| [function_name_2] [function_name_1]	count=2
arg_pair	la colonne correspondant à ||| int $field_offset	count=1
rest	les [function_2] ||| [return_1] get [function_2]	count=1
function_name	retourne [function_name_2] ||| [function_name_1] image pixel [function_name_2]	count=1
namespace	à partir d'une chaîne ||| sdo_das_xml	count=1
function_name	définit [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=1
function_name	le ||| get	count=9
namespace	retourner au ||| solrquery	count=1
namespace	un ||| sdo_das_xml	count=1
function_name	openssl_get_cert_locations() retourne ||| get cert locations	count=1
namespace	quickhashstringinthash ||| quickhashstringinthash	count=1
arg_pair	à l'hôte hostname ||| string $hostname int $type	count=1
function_name	configure les ||| set auth type	count=1
function_name	objet depuis une requête ||| object	count=1
function_name	format ||| format	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] packed [function_name_2]	count=1
function_name	[function_name_1] le statut ||| [function_name_1] server [function_name_2]	count=1
return	ev::run() est sortie ||| int	count=1
function_name	avec une provenant de ||| pop	count=1
function_name	patch binaire et enregistre ||| file patch binary	count=1
arg_pair	cc ||| string $cc	count=1
namespace	valeur d'un ||| spldoublylinkedlist	count=1
arg_pair	la miter limit ||| float $miter	count=1
arg_pair	de contenu avec ||| int $contents	count=1
function_name	de serveurs de ||| servers	count=1
function_name	diriger la clé key ||| get multi by key	count=1
function_name	[function_name_1] schéma contenu ||| [function_name_2] [function_name_1]	count=6
function_name	d'entrelacement de ||| interlace scheme	count=1
function_name	le md5 de la ||| md5	count=1
function_name	définit ||| set query	count=2
function_name	retourne ||| enc get	count=2
function_name	génère une nouvelle csrcertificate ||| csr new	count=1
namespace	iidentique à la fonction ||| directory	count=1
arg_pair	d'une requête ||| string $name int $type	count=1
return	parcourt un lot ||| mongocommandcursor	count=1
function_name	terme à ||| bound	count=1
namespace	libère ||| eventbuffer	count=1
function_name	méthode oauthprovider::callconsumerhandler() ||| consumer	count=1
return	en utilisant les paramètres ||| gmagickdraw	count=1
arg_pair	mktime() excepté ||| int $month	count=1
namespace	lit le ||| splfileinfo	count=2
function_name	retire un filtre ||| filter remove	count=1
function_name	réside à l'extérieur de ||| runkit import	count=1
function_name	spécifiée avec ||| images	count=1
function_name	dimensions ||| geometry	count=1
function_name	la signature ||| signature	count=1
function_name	la ||| ps show	count=2
function_name	terme à partir ||| set terms upper bound	count=1
function_name	limite supérieure dans le ||| terms include upper bound	count=1
function_name	include_path pour la durée ||| set include	count=1
function_name	déplace le curseur ||| seek	count=1
function_name	crée un document xml ||| xml	count=1
namespace	tente de mettre à ||| quickhashstringinthash	count=1
function_name	détruire un ||| shmop delete	count=1
function_name	[function_name_1] texte à ||| [function_name_1] [function_name_2]	count=1
function_name	ajoute une [function_name_2] ||| [function_name_1] high [function_name_2]	count=2
function_name	l'échelle [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	un tableau à indices ||| array	count=1
return	contenu courant du tampon ||| string	count=1
function_name	[function_name_1] courant ||| [function_name_2] [function_name_1]	count=22
function_name	contenant la version de ||| version	count=1
function_name	de déboguage ||| memcache debug	count=1
namespace	contenu du ||| splfileinfo	count=1
function_name	fonction crée une ||| create comment	count=1
function_name	fréquence d'apparition des ||| mlt min doc frequency	count=1
function_name	ligne ||| line	count=7
function_name	version du client sous ||| client version	count=1
function_name	chaîne de caractères pour ||| to string	count=1
function_name	méthode de compression ||| entry	count=1
function_name	chromacité du point vert ||| image green	count=1
rep	de [rest_2] ||| [namespace_1] [rest_2]	count=4
function	[function_name_1] une variable ||| [function_name_1] [arg_pair_2]	count=2
return	méthode détermine si un ||| bool	count=1
function_name	qui s'y trouvent ||| mailparse	count=1
arg_pair	lit le fichier remote_file ||| int $mode	count=1
function_name	la méthode recursivetreeiterator::valid() ||| end	count=1
function_name	connecte ||| closepath	count=1
function_name	d'erreur ||| get error	count=1
arg_pair	les ||| int $year	count=2
arg_pair	à la valeur ||| int $color float $value	count=1
function_name	pour un service de ||| gupnp service proxy	count=1
function_name	php var_array [function_name] ||| oci [function_name]	count=1
function_name	source ||| merge	count=1
function_name	d'attente s'interrompt ||| max	count=1
function_name	retourne la description attachée ||| get	count=1
function_name	[function_name_1] de l'attribut ||| [function_name_2] [function_name_1]	count=1
function_name	une trace dans les ||| trace log	count=1
function_name	d'attente s'interrompt si ||| eio set max poll	count=1
arg_pair	en une ||| string $new_data2 string $error	count=1
return	de la mise en ||| bool	count=1
function_name	taille de l'étape initiale ||| fann set rprop delta zero	count=1
function_name	la méthode gearmanclient::do() est ||| do	count=1
function_name	tronque le ||| truncate	count=1
arg_pair	nombre de colonnes et ||| int $columns	count=1
function_name	slob ||| ifxus read slob	count=2
arg_pair	les données ||| mixed $data	count=1
function_name	à la position ||| ps show	count=1
function_name	ajoute le ||| add doc	count=1
arg_pair	attribute ||| string $attribute	count=1
function_name	peut être utilisée pour ||| set module	count=1
return	implémente un ||| void	count=1
function_name	noeud courant ||| is	count=1
function_name	les fournisseurs ||| broker	count=1
function	d'octets dans [arg_pair_2] ||| [function_name_1] type [arg_pair_2]	count=1
function_name	les tailles de ||| mcrypt enc get supported key sizes	count=1
function_name	cette fonction est ||| get element	count=1
function_name	d'attente s'interrompt si ||| eio set max	count=1
arg_pair	avec ||| resource $image int $x	count=1
function_name	multiplicateur ||| multiplier	count=1
namespace	texte ||| gmagickdraw	count=1
arg_pair	ligne tuple ||| resource $relation string $tuple	count=1
return	la méthode ||| string	count=2
arg_pair	méthode est une méthode ||| string $key mixed $value	count=1
arg_pair	se basant sur les ||| resource $ann	count=1
return	du contenu ||| int	count=1
function_name	lit ||| proc get status	count=1
namespace	par morceaux de hachages ||| function	count=1
function_name	protège un identifiant ||| escape	count=1
return	constructeur de ||| string	count=1
function_name	verrou d'écriture sur un ||| writeunlock	count=1
function_name	propriétés de l'image qui ||| image properties	count=1
arg_pair	stockée dans un ||| resource $pxdoc	count=1
function_name	verrou de lecture ||| cubrid lock read	count=1
function_name	les ressources mémoires ||| form destroy	count=1
function_name	données odbc ||| odbc	count=1
namespace	php ||| samconnection	count=1
return	déterminer si ||| bool	count=1
function_name	un ||| by path	count=1
function_name	recode la chaîne string ||| recode string	count=1
function_name	rendu courant ||| rendering	count=1
function_name	de résultat ||| fbsql	count=1
arg_pair	collections ||| mongodb $db	count=1
function_name	ligne courante depuis le ||| fetch row	count=1
function_name	défini l'époque ||| set cascade	count=2
function_name	place des antislashs ||| db2 escape string	count=1
function_name	[function_name_1] un script ||| [function_name_1] [function_name_2]	count=3
arg_pair	est identique ||| string $pattern	count=1
arg_pair	clé donnée ||| array $query	count=1
arg_pair	variable libre server_key qui ||| string $server_key	count=1
function_name	tous les composants qui ||| newt	count=1
function_name	de la ||| set	count=3
function_name	et tous ||| newt form	count=1
function_name	à memcached::prepend() ||| prepend by key	count=1
function_name	un élément avec un ||| element by	count=1
function_name	[function_name_1] maximale ||| [function_name_2] [function_name_1]	count=17
function_name	module ||| module	count=3
function_name	pcntl_sigwaitinfo() ||| pcntl sigwaitinfo	count=2
function_name	commence une définition ||| begin	count=1
function	un tableau php var_array [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
namespace	spécifiée par le paramètre ||| function	count=1
arg_pair	à memcached::set() hormis ||| mixed $value int $expiration	count=1
arg_pair	dans haystack et retourne ||| bool $before_needle string $encoding	count=1
namespace	du map ||| weakmap	count=2
namespace	normalement en d'autres ||| ev	count=1
function_name	une ou [function_name] de ||| remove [function_name]	count=1
arg_pair	invoquées avant ||| int $max_interval	count=1
function_name	base ||| db	count=2
function_name	retourne [function_name_1] [function_name_2] token php ||| [function_name_2] [function_name_1] int $token	count=1
arg_pair	les ||| array $data	count=1
function_name	récupère l'url complète de ||| request url	count=1
function_name	annule roll back la ||| rollback	count=1
arg_pair	empile les variables var ||| mixed $value1	count=1
function_name	de hash ||| mhash count	count=1
arg_pair	une commande et ||| string $query	count=1
arg_pair	pour insérer un élément ||| string $attr_name	count=1
namespace	du bruit ||| gmagick	count=1
function	supprime [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	ajoutés ||| newt	count=1
return	l'itérateur à la ||| void	count=1
return	l'appel à ||| bool	count=1
namespace	ressource ||| function	count=1
function_name	de composition de l'image ||| set image	count=1
arg_pair	dirname ||| string $dirname	count=1
function_name	les en-têtes [function_name_2] ||| [function_name_2] [function_name_1]	count=22
function_name	et une uri d'espace ||| elements by tag	count=1
function_name	nombre de propriétés publiques ||| count	count=1
function_name	[function_name_1] ou une ||| [function_name_1] [function_name_2]	count=3
namespace	appliqué à différents niveaux ||| imagick	count=1
namespace	surveiller avec ||| mongolog	count=1
function_name	drm [function_name] actif ||| [function_name] protection	count=1
function_name	délai maximum d'attente ||| timeout	count=1
function_name	l'os hôte d'une entrée ||| host os	count=1
function_name	[function_name] avec un ||| [function_name]	count=1
function_name	remet la connexion à ||| pgsql reset	count=1
namespace	l'option memcached ||| memcached	count=1
function_name	modifie l'identifiant d'utilisateur réel ||| seteuid	count=1
arg_pair	recherche ||| string $pattern string $string	count=1
namespace	la couleur utilisée pour ||| function	count=1
arg_pair	retourne les dimensions ||| array $imageinfo	count=1
function_name	texte à la ||| show	count=1
function_name	va protéger ||| mysql escape	count=1
return	4 ||| bool	count=1
namespace	ou false en cas ||| function	count=1
function_name	la prochaine ligne ||| fetch	count=3
function_name	retourne les en-têtes de ||| headers	count=1
arg_pair	résultat ||| resource $result	count=1
function_name	tronque le ||| eio truncate	count=1
function_name	ne ||| metadata	count=2
function	[function_name_1] dans un ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	identifiant qui permettra d'accéder ||| int $memsize	count=1
function_name	des données personnalisées dans ||| set metadata	count=1
arg_pair	un message dans ||| resource $compcode resource $reason	count=1
function_name	un pointeur de résultat ||| fbsql	count=1
arg_pair	le prompt et ||| callable $callback	count=1
function_name	canonique absolu ainsi trouvé ||| realpath	count=1
function_name	valeurs de ||| get values	count=1
arg_pair	paramètres passés sont ||| int $hour	count=1
arg_pair	paramètre oid de l'instance ||| string $oid	count=1
function_name	ligne depuis le ||| string read line	count=1
function_name	incluant les ||| newt	count=1
function_name	à memcached::append() mais la ||| append	count=1
function_name	une page ||| page	count=1
return	retourne les informations de ||| object	count=1
arg_pair	jpeg dans le ||| int $imagetype	count=1
function_name	travaux fourni ||| job	count=1
function_name	connexion ssl ||| ssl	count=2
function_name	la dernière erreur de ||| error	count=3
function_name	[function_name_1] cours ||| [function_name_2] [function_name_1]	count=12
arg_pair	le type d'éléments ||| resource $id string $elementset	count=1
function_name	fonction est ||| by id	count=1
arg_pair	que les paramètres ||| int $hour int $minute	count=1
return	dans une série de ||| bool	count=1
function_name	le groupe d'appartenance du ||| get group	count=1
function_name	uri d'espace de noms ||| elements	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] unicode [function_name_2]	count=2
function_name	crée un flux ||| stream	count=1
function_name	base ||| dbase numfields	count=2
function_name	devant les ||| escape	count=1
return	un tableau de statistiques ||| array	count=1
function_name	[function_name_1] traduction des ||| [function_name_2] [function_name_1]	count=1
function_name	jacobi ||| jacobi	count=1
namespace	de travaux à l'agent ||| gearmanworker	count=1
arg_pair	d'une ||| string $class string $callback	count=1
function_name	déplace le curseur du ||| field seek	count=1
function_name	s'interrompt si elle ||| poll time	count=1
function_name	fréquence ||| min term frequency	count=3
function_name	densité totale d'encre ||| total ink density	count=1
arg_pair	suivant la requête ||| array $query	count=1
function_name	si ||| max	count=1
arg_pair	les paramètres passés sont ||| int $day	count=1
function_name	façon synchrone et définit ||| action set	count=1
function_name	rend actif le prochain ||| next	count=1
arg_pair	et produit une chaîne ||| string $to	count=1
return	9 miniatures de ||| bool	count=1
function_name	attention : ||| get bytes	count=1
function_name	lignes à retourner ||| rows	count=1
function_name	.. ||| array	count=1
function_name	de l'espace [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	caractères pour ||| string	count=1
return	à des bases ||| array	count=1
namespace	l'itérateur ||| limititerator	count=1
function	efface [arg_pair_2] ||| [function_name_1] principal [arg_pair_2]	count=1
function_name	code ||| response code	count=1
namespace	moins ||| ev	count=1
function_name	du champ qui occupe ||| field	count=1
function_name	à la ||| escape string	count=1
function_name	[function_name_1] d'octets dans ||| [function_name_2] [function_name_1]	count=4
function_name	une instance glo ||| load from glo	count=1
namespace	données représentée par ||| function	count=1
function_name	liste des noms ||| names	count=1
function_name	à un marqueur oracle ||| oci bind array	count=1
function_name	le fichier ||| to file	count=2
namespace	bits d'exécution des ||| pharfileinfo	count=1
function_name	du tampon fourni par ||| add	count=1
namespace	utilisant son ||| ziparchive	count=1
function_name	point vert ||| set image green	count=1
arg_pair	xml depuis la représentation ||| string $filename int $options	count=1
namespace	script ||| samconnection	count=1
function_name	une uri d'espace ||| elements by tag	count=1
function_name	associatif qui contient ||| assoc	count=1
arg_pair	sont ||| int $day	count=1
arg_pair	stocke l'élément ||| int $expire	count=1
function_name	courant interne ||| get iterator index	count=1
function_name	shell pattern ||| fnmatch	count=1
function_name	produit une seule image ||| stereo image	count=1
function_name	xa ||| mysqlnd ms xa gc	count=2
function_name	des ||| mlt	count=1
return	retourne une chaîne ||| string	count=17
function_name	si ||| eio set max poll	count=1
arg_pair	dans le [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	iv vecteur d'initialisation) ||| iv	count=1
namespace	fonction prépare ||| function	count=1
arg_pair	filename ||| string $class_name	count=1
namespace	délai sur le serveur ||| mongocursor	count=1
namespace	numéro ||| splfileinfo	count=1
function_name	intialise le support ||| start color	count=1
function_name	une route [function_name] dans la ||| add [function_name]	count=1
function_name	défaut ||| rewind	count=1
namespace	retourner ||| solrquery	count=1
return	au code de ||| string	count=1
function_name	le message ||| message	count=1
function_name	fonction est ||| by	count=1
function_name	geoip_setup_custom_directory() va modifier le ||| geoip setup custom directory	count=1
function_name	retourne des informations ||| get	count=1
namespace	documents ||| mongocursor	count=1
function_name	compile ||| compile file	count=2
function_name	le ||| shearimage	count=1
function_name	php du paramètre ||| php	count=1
function_name	du ||| all	count=1
function_name	enregistre ||| register local	count=1
function_name	d'une chaîne de ||| load	count=1
arg_pair	suppression d'un document ||| array $deleteoptions array $protocoloptions	count=1
arg_pair	invoquées avant de vérifier ||| int $max_interval int $max_callbacks	count=1
function_name	par ||| destroy	count=1
function_name	défini ||| fann set error	count=1
return	la sauvegarde dans un ||| int	count=1
function_name	un profil ||| profile	count=1
arg_pair	image au format png ||| int $quality int $filters	count=1
namespace	envoyer les requêtes http ||| oauth	count=1
function_name	plus de ||| eio set max	count=1
arg_pair	=?iso-8859-1?... est ||| string $field_value	count=1
namespace	l'objet ||| yaf_controller_abstract	count=1
return	commandes ||| bool	count=1
arg_pair	une ||| resource $stmt	count=2
return	bloc de mémoire ||| bool	count=1
arg_pair	lot d'opérations ||| mongocollection $collection array $write_options	count=3
namespace	personnalisées dans un ||| pharfileinfo	count=1
arg_pair	identique à la ||| int $second int $month	count=1
function_name	termine une définition de ||| end	count=1
function_name	jpeg depuis l'image ||| imagejpeg	count=1
function_name	profondeur ||| getimagedepth	count=1
function_name	flux et ||| stream	count=1
return	à surveiller avec ||| void	count=1
arg_pair	contenu avec des données ||| string $blockname int $contents	count=1
namespace	l'exécution du générateur ||| generator	count=1
return	si vous avez ||| bool	count=1
return	un ||| boolean	count=1
function_name	des antislashs ||| db2 escape string	count=1
function_name	[function_name_1] en cascade ||| [function_name_2] [function_name_1]	count=28
function_name	du tampon ||| ob get	count=1
function_name	qui ne peuvent ||| set metadata	count=1
namespace	exécute une tâche ||| gearmanclient	count=1
arg_pair	et retourne la portion ||| bool $before_needle string $encoding	count=1
function_name	fichier rpm ||| rpm	count=2
namespace	la casse des caractères ||| function	count=1
function_name	majuscules ||| upper	count=1
arg_pair	pile et empile les ||| mixed $value1	count=1
function_name	où ||| fann set	count=1
return	en utilisant la ressource ||| bool	count=1
function_name	la table courante dans ||| fbsql table	count=1
function_name	les éléments ||| all	count=1
function_name	flou ||| gaussian blur	count=1
function_name	informations de connexion passées ||| cubrid connect	count=1
function_name	configure l'espace de couleurs ||| colorspace	count=1
namespace	la base de données ||| mongocursor	count=1
function_name	file ||| remove queue	count=2
function_name	depuis une ||| from callback	count=1
function_name	d'attente de connexions ||| connection	count=1
function_name	le nom pour un ||| name	count=1
function_name	erreur survenue lors de ||| error	count=1
function_name	caractères uri de ||| uri	count=1
arg_pair	résolution ||| float $yresolution	count=1
return	le curseur est ||| bool	count=1
function	statut [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=7
function_name	les itérateurs ||| array	count=1
function_name	[function_name] les modèles ||| get nr [function_name]	count=1
return	être appelé une ||| void	count=1
function_name	[function_name] avec une ||| [function_name]	count=1
function_name	une instance glo ||| to glo	count=1
function	d'entités html [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	dans un espace ||| in	count=1
return	composants qui sont sur ||| void	count=1
function_name	[function_name_1] d'offset ||| [function_name_1] [function_name_2]	count=4
function_name	file d'attente ||| set	count=1
namespace	jeu de ||| mongoclient	count=1
function_name	la taille de la ||| size	count=3
function_name	mise à jour d'un ||| log cmd update	count=1
function_name	un ||| metadata	count=1
function_name	[function_name_1] la file ||| [function_name_1] [function_name_2]	count=3
function_name	objet de grande taille ||| lo	count=1
function_name	défini la fonction d'activation ||| fann set activation function	count=3
function_name	fin de l' eventbuffer ||| add	count=1
function_name	d'archives spécifié ||| zip entry	count=1
function_name	stocker des données personnalisées ||| set metadata	count=1
namespace	attribut ||| hw_api_attribute	count=2
function	les tables [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	paire ||| pair	count=2
namespace	les appels distants ||| yar_concurrent_client	count=1
function_name	commence la recherche ||| control point browse start	count=1
function_name	la fonction [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	prompt et retourne immédiatement ||| string $prompt callable $callback	count=1
arg_pair	depuis une chaîne binaire ||| string $data	count=1
function_name	à l'esclave ou ||| mysqlnd ms query	count=1
function_name	désigné par ||| xattr	count=3
function_name	récupère [function_name] pour ||| get [function_name]	count=2
function	[function_name_1] base ||| [function_name_1] [arg_pair_2]	count=2
function_name	et éteint la temporisation ||| ob end flush	count=1
arg_pair	une méthode ||| string $key mixed $value	count=1
arg_pair	log_cmd_delete lors [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
return	conservant la corrélation entre ||| void	count=1
arg_pair	structure vide de ||| int $num_input	count=1
function	[function_name_1] table table_name ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	du calendrier julien en ||| bool $hebrew	count=1
return	et ||| mongodb	count=1
function_name	en base64 ||| base64	count=1
namespace	similaire à la fonction ||| function	count=2
return	de sortie en ||| bool	count=1
return	dessin ||| bool	count=1
function_name	un champ lors de ||| set	count=1
function_name	le tampon [function_name] associé ||| get [function_name]	count=1
function_name	[function_name_1] du cipher ||| [function_name_2] [function_name_1]	count=2
function_name	fichier est un dossier ||| is dir	count=1
function_name	argument ||| escape string	count=2
return	une ||| string	count=9
arg_pair	cartes de seuil de ||| int $channel	count=1
function_name	au sein de ||| compressed	count=1
namespace	l'entrée ||| spldoublylinkedlist	count=2
function_name	commence ||| gupnp control point browse start	count=1
function_name	efface les métadonnées de ||| del metadata	count=1
function_name	encodés qui s'y trouvent ||| all	count=1
function_name	chaque serveur ||| server by	count=1
return	similaire à pclose() hormis ||| int	count=1
namespace	le tableau ||| splfixedarray	count=1
arg_pair	un message en ||| string $message	count=1
namespace	ou avec ||| function	count=1
arg_pair	chemin path à une ||| string $path int $offset	count=1
function_name	est similaire ||| mysql	count=1
arg_pair	document xml depuis la ||| string $filename int $options	count=1
namespace	méthode de compression utilisée ||| function	count=1
return	déplace ||| bool	count=1
function_name	crée une copie d'un ||| clone	count=1
arg_pair	str dans le ||| int $length	count=1
arg_pair	la fonction mktime() excepté ||| int $day int $year	count=1
arg_pair	le fait qu'elle ||| string $pattern	count=1
function_name	d'activation pour le neurone ||| set activation function	count=1
return	si le curseur ||| bool	count=1
return	sur un serveur local ||| bool	count=1
function_name	de définir à ||| set highlight	count=1
function_name	les drapeaux à ||| flags	count=1
function_name	de conteneur de chargement ||| set default stub	count=1
namespace	qu'elle ignore ||| function	count=1
function_name	une page ||| open pdi page	count=1
function_name	variables var ||| push	count=1
function_name	les lignes de ||| dbplus rzap	count=1
function_name	fichiers distant ||| ssh2 sftp mkdir	count=1
return	la session en ||| bool	count=1
function_name	une représentation yaml de ||| yaml emit file	count=1
namespace	les fichiers ||| function	count=1
function_name	les composants qui ||| newt form	count=2
function_name	où les ||| fann set	count=1
function_name	liens ajoutés ||| border style	count=1
function_name	le schéma relaxng ||| relax ngschema	count=1
return	données sur le ||| mixed	count=1
function_name	flux représentant ||| stream	count=1
namespace	ignore ||| function	count=1
function_name	session courante ||| is in session	count=1
namespace	appelé ||| collectable	count=1
function_name	être ||| set metadata	count=2
function_name	[function_name_1] la réponse ||| [function_name_2] [function_name_1]	count=3
function_name	mémoire ||| shmop delete	count=2
function_name	le fichier pdf ||| pdf	count=1
function_name	le type de ||| type	count=4
namespace	éléments du poll ||| zmqpoll	count=1
function_name	la ||| mysql field type	count=2
function_name	verrou de ||| cubrid lock read	count=1
function_name	selon l'uri de l'espace ||| lookup	count=1
function_name	stocker des données personnalisées ||| metadata	count=1
function_name	fermer ||| cubrid lob2 close	count=1
arg_pair	base de données ||| string $data	count=1
function_name	utilisées par la ||| newt	count=1
function_name	[function_name_1] décrivant la ||| [function_name_2] [function_name_1]	count=4
namespace	les métadonnées et la ||| mongogridfs	count=1
function_name	du serveur racine ||| root	count=1
arg_pair	une fonction ||| string $class string $function	count=1
arg_pair	un préfixe ||| string $field_override	count=1
arg_pair	la base ||| string $database_name	count=2
function_name	retourne tous les ||| string	count=1
arg_pair	mktime() excepté ||| int $second	count=1
function_name	identifiant de ||| oci	count=1
namespace	autre classe ||| reflectionclass	count=1
return	retourne la méthode ||| string	count=1
function_name	le contexte est ||| is	count=1
return	fichier ||| void	count=2
namespace	par la ||| function	count=2
namespace	cette ||| arrayobject	count=1
namespace	train d'être analysé ||| xmlreader	count=1
function_name	du script en ||| path	count=1
function_name	données personnalisées ||| set metadata	count=1
arg_pair	de résultats donné ||| int $fetch_flag	count=1
function_name	la configuration ||| config	count=3
arg_pair	données database ||| string $database resource $link_identifier	count=1
arg_pair	crée un fichier spécial ||| string $pathname	count=1
return	demande un ||| int	count=1
return	brosse courante pour le ||| bool	count=1
function_name	du tampon fourni par ||| buffer	count=1
function_name	données interbase ||| ibase	count=1
arg_pair	cubrid et ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	fichier qui ||| set	count=1
function_name	fonction pcntl_sigwaitinfo() suspend son ||| sigwaitinfo	count=1
function_name	le paramètre patch ||| xdiff file patch	count=1
function_name	php ||| php	count=1
function_name	[function_name_1] de statut ||| [function_name_2] [function_name_1]	count=1
function_name	à l'échelle les ||| fann scale input	count=1
function_name	[function_name_1] fragments ||| [function_name_2] [function_name_1]	count=2
return	la bibliothèque ||| string	count=1
function_name	définit l'identifiant ||| set	count=1
function_name	des données personnalisées dans ||| metadata	count=1
namespace	de travaux assigné par ||| gearmanjob	count=1
function_name	pour la fragmentation ||| set highlight regex pattern	count=1
function_name	à la forme en ||| newt form	count=1
return	une propagation de ||| resource	count=1
arg_pair	passés ||| int $hour	count=1
function_name	maître à l'esclave ou ||| mysqlnd ms	count=1
function_name	[function_name_1] d'une colonne ||| [function_name_2] [function_name_1]	count=2
function_name	couleur de la carte ||| colormap color	count=1
arg_pair	un fichier spécial ||| string $pathname int $mode	count=1
arg_pair	par le paramètre timestamp ||| int $timestamp int $format	count=1
function_name	gestionnaire d'erreurs libxml standard ||| libxml use internal errors	count=1
namespace	date de ||| splfileinfo	count=2
return	les ||| int	count=5
namespace	d'une archive phar ||| phar	count=3
function_name	des tests sur ||| uintersect uassoc	count=1
function_name	fonction est identique ||| eregi	count=1
function_name	image et retaille ||| chop image	count=3
function_name	tronque le fichier ||| truncate	count=1
namespace	lob oracle commençant à ||| oci-lob	count=1
function_name	file d'attente s'interrompt ||| max	count=1
namespace	qu'elle fonctionne ||| function	count=1
function_name	ou une liste ||| put	count=1
function_name	document pdf d'entrée ||| pdf	count=1
function_name	fait qu'elle ignore ||| eregi	count=1
function_name	dossier d'archives spécifié ||| zip entry	count=1
arg_pair	de montage d'un périphérique ||| string $pharpath string $externalpath	count=1
namespace	splsubject depuis lequel ||| splobserver	count=1
arg_pair	len octets ||| int $len	count=1
function_name	[function_name_1] distincts ||| [function_name_2] [function_name_1]	count=4
function_name	sortir via ||| got exit	count=2
namespace	avec une connexion à ||| mongoclient	count=1
function_name	n'a plus de résultats ||| dead	count=1
function_name	tailles de clés ||| supported key sizes	count=2
namespace	similaire à pclose() hormis ||| function	count=1
arg_pair	chaîne str à la ||| string $str int $start	count=1
function_name	des propriétés ||| vars	count=1
function_name	l'historique d'erreur du serveur ||| error log	count=1
function_name	statistiques sont actives ou ||| stats	count=1
function_name	l'itération [function_name_2] ||| [function_name_2] [function_name_1]	count=14
namespace	classes définies dans l'extension ||| reflectionextension	count=1
function_name	le jeu de ||| set	count=1
return	une valeur sigma s'il ||| float	count=1
function_name	qui ne peuvent ||| set	count=1
namespace	de travaux ||| gearmanjob	count=1
arg_pair	remplit avec la ||| resource $image	count=1
namespace	archive phar ||| pharfileinfo	count=1
arg_pair	fonction ||| string $pattern	count=1
return	à ||| domelement	count=1
namespace	après un ||| mongocursor	count=1
namespace	ligne ||| splfileobject	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_1] pdi [function_name_2]	count=2
return	un fichier au ||| bool	count=1
return	dans le système ||| int	count=1
arg_pair	accomplir ||| int $port	count=1
function_name	incluant ||| form	count=1
function_name	point de surveillance en ||| watch	count=1
function	[function_name_1] donnée data ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	spécifié grâce à gearmanclient::setstatuscallback() ||| string $job_handle	count=1
arg_pair	avec ||| resource $imap_stream	count=1
return	entière et le reste ||| array	count=1
function_name	cette fonction crée ||| create attribute ns	count=1
arg_pair	une requête ||| string $query string $index	count=1
function_name	si elle ||| eio set max poll time	count=1
function_name	facet ||| set facet	count=4
function_name	[function_name_1] par thread ||| [function_name_2] [function_name_1]	count=1
function_name	le résultat oracle ||| oci	count=1
arg_pair	de configuration varname et ||| string $varname	count=1
function_name	à comparer ||| ldap compare	count=1
function_name	serveurs de tâches qui ||| servers	count=1
namespace	[namespace] fournissent ||| [namespace]	count=3
function_name	s'interrompt si elle prend ||| max	count=1
function_name	les ||| all	count=3
function_name	lorsque l'on quitte ||| decl	count=1
namespace	entre les clé ||| arrayobject	count=1
function_name	sans suivre le ||| sftp lstat	count=1
function_name	est l'espace [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	de cloner l'exception ||| exception	count=1
function_name	en envoyant le contrôle ||| control	count=1
arg_pair	la clé /status ||| resource $fdf_document string $status	count=1
function_name	l'attribut [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	commande ||| array $options	count=1
function_name	du processus courant ||| posix	count=1
function_name	[function_name_1] condition pour ||| [function_name_2] [function_name_1]	count=1
arg_pair	envoyés par le serveur ||| int $format	count=1
function_name	d'attente s'interrompt si elle ||| poll	count=1
function_name	par ||| crack	count=1
arg_pair	mktime() excepté le ||| int $day	count=1
namespace	false pour la ||| recursivetreeiterator	count=1
function_name	et ||| batch size	count=2
return	positif déterminant [return] ||| [return]	count=1
function_name	[function_name_1] du champ ||| [function_name_2] [function_name_1]	count=18
function_name	réseau neuronal depuis un ||| fann	count=1
function_name	service exposé ||| gupnp service proxy action	count=1
function_name	retourne l'itérateur interne ||| get inner iterator	count=4
arg_pair	msglist ||| resource $imap_stream string $msglist	count=1
arg_pair	fonctionnellement équivalente à memcached::set() ||| mixed $value int $expiration	count=1
arg_pair	une erreur survient ||| resource $result	count=1
arg_pair	requête ||| array $info array $query	count=1
arg_pair	lors [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	de stagnation candidates ||| candidate stagnation epochs	count=2
function_name	accéder à chaque élément ||| nl langinfo	count=1
function_name	identifiant ||| by id	count=2
arg_pair	un socket ||| mixed $socket	count=1
return	et que la base ||| bool	count=1
function_name	termine une définition ||| end	count=1
function_name	récupère un ||| func get	count=1
arg_pair	coefficient slant ||| float $slant	count=1
namespace	modules à surveiller ||| mongolog	count=1
function_name	plus ||| eio set	count=1
function	table [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	chaîne address tel que ||| string $address string $default_host	count=1
function_name	le dossier ||| entry compressionmethod	count=1
function_name	record pour l'effacement dans ||| delete record	count=1
return	la durée du ||| string	count=1
function_name	est similaire ||| get	count=1
namespace	un document xml ||| xmldiff\file	count=1
return	un autre ||| void	count=1
namespace	la ||| domdocument	count=1
arg_pair	préparer l'environnement pour la ||| bool $new_link	count=1
arg_pair	dans une chaîne nommée ||| mixed $priv_key string $pass	count=1
function_name	désactive ||| buffer disable	count=1
arg_pair	yaf_route_simple récupère les informations ||| string $controller_name	count=1
return	d'un fichier sur la ||| int	count=1
function_name	des liens ||| pdf set border	count=1
function_name	clair ||| auth password	count=2
namespace	vérifie si un itérateur ||| norewinditerator	count=1
function_name	va protéger tous les ||| escape	count=1
arg_pair	mode wsdl ou ||| mixed $wsdl	count=1
namespace	la méthode ev::run() est ||| ev	count=2
function_name	de l'écran ||| imagegrabscreen	count=1
namespace	par objet lorsque ||| collectable	count=1
function_name	utilisé pour ||| maxdb debug	count=1
function_name	[function_name_1] de peinture ||| [function_name_2] [function_name_1]	count=2
arg_pair	en référence numérique html ||| string $encoding bool $is_hex	count=1
function_name	à ||| get element	count=1
function_name	récupère le dernier ||| get	count=1
function_name	fin de l' ||| buffer	count=1
function_name	include_path pour la durée ||| include	count=1
function_name	extrait et décode ||| extract part	count=1
function_name	disposition courante de ||| layout	count=1
function_name	qu'elle ignore la ||| eregi	count=1
function_name	attribut dans un ||| update attributes	count=1
return	paramètres passés sont ||| int	count=1
function_name	la durée du script ||| set	count=1
function_name	un test sur ||| mcrypt module self test	count=1
function_name	un ||| kadm5 chpass principal	count=1
arg_pair	avec les ||| array $config	count=1
function_name	fichier exe ||| write exe	count=1
return	de l'image spécifiée ||| bool	count=1
namespace	un fichier qui ne ||| pharfileinfo	count=1
function_name	données ||| add	count=1
function_name	carte de couleurs ||| colormap	count=1
function_name	de inode du ||| get inode	count=1
function_name	la file ||| remove queue	count=1
function_name	de [function_name_2] ||| [function_name_1] num [function_name_2]	count=1
namespace	utilisée que pour stocker ||| pharfileinfo	count=1
arg_pair	le jambage du texte ||| resource $psdoc string $text	count=1
function_name	le cosinus hyperbolique pour ||| cosh	count=1
namespace	un verrou sur ||| function	count=1
return	vérifie si le curseur ||| bool	count=1
arg_pair	message depuis le fichier ||| mixed $filename	count=1
arg_pair	pointeur interne de résultat ||| int $row_number	count=1
arg_pair	de b ||| array $b	count=1
function_name	caractères ||| string	count=3
function_name	uniques des ||| special columns	count=1
function_name	d'un champ ||| fbsql field	count=1
function_name	fonction d'activation ||| fann set activation function output	count=1
function_name	devant ||| string	count=1
arg_pair	de texte ||| resource $pdfdoc string $text	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] close [function_name_1]	count=4
arg_pair	sur l'algorithme spécifié ||| string $algorithm	count=1
function_name	le serveur associé à ||| sybase	count=1
function_name	numéro de version ||| version	count=2
function_name	d'activation pour tous les ||| fann set activation	count=2
function_name	fixe ||| set info	count=1
arg_pair	stockée dans ||| resource $pxdoc int $value	count=1
function_name	des erreurs soap ||| soap	count=1
return	false s'il ||| bool	count=1
function_name	la profondeur de récursion ||| depth	count=1
function_name	associé au champ ||| mysql field	count=1
arg_pair	un voisin immédiat ||| int $x	count=1
function_name	le dernier message d'erreur ||| stmt errormsg	count=1
function_name	position courante [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	canal alpha [function_name_2] ||| [function_name_2] [function_name_1]	count=5
return	un tableau contenant l'image ||| array	count=1
function_name	résultat ||| fetch	count=1
function_name	le terme ||| upper bound	count=1
function_name	courant du ||| ob get	count=1
namespace	domelement ||| domelement	count=1
arg_pair	identique à la fonction ||| int $second	count=1
function_name	le cache [function_name_2] ||| [function_name_1] [function_name_2] exists	count=1
function	définit [arg_pair_2] ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=3
function_name	des données ||| data	count=2
arg_pair	avec les données ||| mixed $data	count=1
function_name	url du référentiel ||| svn blame	count=1
return	objet ||| object	count=1
arg_pair	avec ms-chapv2 les ||| resource $radius_handle string $mangled	count=1
function_name	de multiples ||| udm alloc	count=1
function_name	retourne la variable ||| get var	count=2
arg_pair	spécifiés par msglist ||| string $msglist	count=1
function_name	sinus de chaque ||| sin	count=1
function_name	l'objet sous ||| to string	count=1
function_name	du tampon ||| add buffer	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] mime [function_name_2]	count=2
arg_pair	est identique ||| string $string	count=1
function_name	les ressources ||| newt form destroy	count=1
function_name	l'uri de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	ou require_once ||| included files	count=1
namespace	à libevent ||| eventconfig	count=1
return	du texte ||| int	count=1
function_name	var_array [function_name] ||| [function_name]	count=1
function_name	le cache utilisateur ||| wincache ucache	count=3
arg_pair	ajuste ||| float $blackpoint	count=1
function_name	remplace les textes qui ||| mb ereg replace	count=1
namespace	depuis le flux ||| gmagick	count=1
arg_pair	une utilisation future ||| float $new_output_min float $new_output_max	count=1
function_name	longueur du ||| length	count=1
function_name	de la dernière ||| errno	count=2
function_name	entités html de ||| html entity decode	count=1
function_name	requête et ||| query	count=1
function_name	prend plus de ||| max poll	count=1
function_name	précédent ||| prev	count=4
function_name	au ||| is	count=1
function_name	l'entrée utilisateur ||| char	count=1
function_name	sommaire de leur ||| overview	count=1
function_name	bleu ||| blue	count=1
function_name	le système ||| eio unlink	count=1
function_name	connexion persistante ||| odbc pconnect	count=1
function_name	l'entier le ||| trader floor	count=1
function_name	le ||| set time allowed	count=1
arg_pair	tableau rows ||| array $rows	count=1
namespace	comprise entre ||| imagickpixel	count=1
namespace	contenu courant du tampon ||| function	count=1
function_name	[function_name_1] tidy ||| [function_name_2] load [function_name_1]	count=2
arg_pair	une ||| resource $session	count=1
function_name	police type1 ||| type1	count=1
function_name	commence une définition ||| pdf begin	count=1
function_name	postgresql [function_name_2] ||| [function_name_1] client [function_name_2]	count=1
function_name	un ||| dbplus getlock	count=2
function	yaml [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	preg_replace() ||| preg replace callback	count=2
arg_pair	/etc/hosts.deny pour vérifier si ||| bool $nodns	count=1
function_name	insère un nouvel ||| insert	count=1
namespace	fonction permet ||| function	count=1
function_name	combine une [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	crée un ||| pdf create	count=3
function_name	mémoire partagée ||| shm attach	count=1
function_name	de composition associé avec ||| getimagecompose	count=1
function_name	d'erreurs libxml standard ||| libxml use internal	count=1
arg_pair	le fait ||| int $year	count=2
return	d'un serveur ||| bool	count=1
namespace	en chaîne ||| serializable	count=1
function_name	[function_name_1] accessible en ||| [function_name_2] [function_name_1]	count=1
function_name	connexion mysql courante ou ||| mysql	count=2
arg_pair	à memcached::set() ||| mixed $value int $expiration	count=1
function_name	parcourt un lot d'objets ||| batch	count=1
namespace	si un [namespace] est un ||| [namespace]	count=1
function_name	à la fonction ||| field	count=2
arg_pair	stockée dans ||| resource $pxdoc	count=1
function_name	la présence d'événements de ||| max dispatch interval	count=1
function_name	[function_name_1] variadique ||| [function_name_2] [function_name_1]	count=4
function_name	boucle ||| eio	count=1
return	à la chaîne de ||| string	count=1
return	définir les modules ||| void	count=1
function_name	[function_name] préfixé, basé ||| [function_name]	count=1
function	[function_name_1] une variable ||| [function_name_1] post [arg_pair_2]	count=1
function_name	données sqlite ou tente ||| sqlite factory	count=1
function_name	le numéro d'erreur ||| error	count=1
function	mots personnelle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	l'objet ||| serializable	count=1
function_name	par défaut $this ||| close	count=1
function_name	dossier ||| zip entry compressionmethod	count=2
function_name	ajoute la ||| curl multi add handle	count=1
arg_pair	une entrée spécifique ||| string $dn	count=1
function_name	plusieurs valeurs au hasard ||| array rand	count=1
function_name	permet de ||| chmod	count=1
function_name	message d'erreur associé ||| pg result error	count=2
function_name	d'entrelacement ||| set image interlace scheme	count=2
arg_pair	type substr() basée ||| string $str int $start	count=1
function_name	ou plusieurs images ||| images	count=1
function_name	la taille d'une image ||| image extent	count=1
function_name	document ||| attributes	count=1
function_name	libère la mémoire ||| free result	count=1
arg_pair	pour le calendrier calendar ||| int $month	count=1
function_name	phar quand ||| map phar	count=1
function_name	lignes à retourner dans ||| rows	count=1
return	ne ||| void	count=2
function_name	liste les ||| list	count=2
arg_pair	séquence sequence et retourne ||| resource $imap_stream string $sequence	count=1
arg_pair	récupérer des parties ||| string $blob_id	count=1
namespace	$this ||| directory	count=2
function_name	les ||| fann set	count=1
function_name	récupère le [function_name_2] ||| [function_name_1] [function_name_2]	count=23
function_name	de la ||| dbplus rzap	count=1
arg_pair	applique un vecteur ||| mixed $tint mixed $opacity	count=1
function_name	est ||| call	count=1
function_name	identifiant unique ||| object hash	count=1
function_name	avec une provenant de ||| newt pop	count=1
function_name	toutes les classes de ||| construct	count=1
function_name	correction gamma [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	représentée par l'identifiant de ||| function	count=1
function_name	méthode ||| entry	count=1
function_name	interne passé via ||| inner	count=1
arg_pair	pointant vers un programme ||| float $ury string $filename	count=1
function_name	grande taille ||| lo export	count=1
arg_pair	dans l'image image ||| int $y2	count=1
arg_pair	hash depuis un fichier ||| string $filename int $size	count=1
arg_pair	liste des filtres ||| array $values	count=1
function_name	spécial ou ||| posix	count=1
arg_pair	contient le ||| mongodb $db string $prefix	count=1
namespace	données sur ||| tokyotyrant	count=1
function_name	le fichier ||| metadata	count=1
namespace	de résultats à envoyer ||| mongocursorinterface	count=1
function_name	dossier d'archives ||| compressionmethod	count=1
function_name	annule la requête ||| query	count=1
arg_pair	avec une des ||| resource $psdoc float $black	count=1
namespace	fonction closedir() seul ||| directory	count=1
function_name	l'url complète de ||| request url	count=1
return	première ||| mongodb	count=1
namespace	un noeud ||| domnode	count=1
return	le fait ||| int	count=3
return	un tableau avec les ||| array	count=1
function_name	ressources du résultat ingres ||| ingres	count=1
function_name	retourne le nombre de ||| get	count=2
arg_pair	mssql locale ou distante ||| bool $is_null int $maxlen	count=1
function_name	par défaut ||| default	count=5
arg_pair	indexé ou associatif query_data ||| mixed $query_data string $numeric_prefix	count=1
function_name	fonctionnellement équivalent à memcached::prepend() ||| prepend by key	count=1
namespace	fonction ||| directory	count=2
arg_pair	détermine le ||| int $facetsort	count=1
function_name	les données du fichier ||| uudecode all	count=1
function_name	d'une image et ||| image	count=1
namespace	requêtes soap ||| soapclient	count=1
function_name	caractères passée en ||| escape string	count=1
namespace	hormis le fait qu'elle ||| function	count=2
function_name	sous la ||| to	count=1
function_name	quitte le contexte ||| decl	count=1
arg_pair	ou distante ||| int $maxlen	count=1
arg_pair	source ||| resource $source	count=1
function_name	sinus hyperbolique pour ||| sinh	count=1
function_name	la casse des ||| eregi	count=1
function_name	valeur de la ||| include path	count=1
function_name	change la couleur ||| color floodfill image	count=1
return	tous les composants qui ||| void	count=1
namespace	élément du poll ||| zmqpoll	count=1
function_name	les variables var .. ||| array	count=1
namespace	bruit ||| gmagick	count=1
function_name	cipher ||| openssl cipher	count=1
function_name	[function_name] cairoimagesuface de ||| [function_name]	count=1
arg_pair	hormis ||| string $pattern string $string	count=1
arg_pair	clé key et ||| string $key	count=1
function_name	une police et ||| load font	count=1
function_name	la temporisation de sortie ||| ob end	count=1
function_name	[function_name_1] stats.facet ||| [function_name_2] [function_name_1]	count=2
arg_pair	type d'éléments ||| resource $id string $elementset	count=1
function_name	la colonne [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	des informations sur ||| internal info	count=2
function_name	récupérer le nombre ||| cubrid num	count=1
arg_pair	remplacer le domaine ||| string $domain string $msgid1	count=1
namespace	les ressources mémoires utilisées ||| function	count=1
function_name	portée ||| lookup namespace	count=1
function_name	postgresql ||| pg fetch	count=1
namespace	de l'espace du noeud ||| domnode	count=1
function_name	fichier qui ne ||| set metadata	count=1
function_name	données ||| add buffer	count=2
function_name	la file d'attente ||| eio set max poll time	count=1
function_name	traitement appliqué à différents ||| preview images	count=1
arg_pair	fichier resolv.conf et y ||| int $flags string $filename	count=1
function_name	tâche de faible priorité ||| task low	count=1
function_name	nombre d'erreurs et optionnellement ||| pgsql	count=1
function_name	file de messages représenté ||| msg queue	count=1
return	caractères alphabétiques ||| int	count=1
function_name	du fichier fourni ||| uudecode all	count=1
arg_pair	server_path ||| string $server_path	count=1
function_name	dernière ||| error	count=2
function_name	elle prend ||| poll	count=1
function_name	sinus de chaque valeur ||| trader sin	count=1
function_name	de lignes à retourner ||| set rows	count=1
arg_pair	requête query à ||| string $query resource $link_identifier	count=1
function_name	couleurs associées avec cette ||| getcolorcount	count=1
arg_pair	à ||| resource $result	count=2
function_name	retire un gestionnaire ||| multi remove	count=1
function_name	rewinddir() seul le ||| rewind	count=1
function_name	fréquence en deçà ||| term frequency	count=1
function_name	lorsque l'itération commence après ||| begin iteration	count=2
arg_pair	le résultat dans un ||| string $dest	count=1
return	qui ne peuvent ||| void	count=1
namespace	la corrélation entre ||| arrayobject	count=1
function_name	fichier spécial ||| posix mknod	count=1
function_name	similaire à pclose() hormis ||| close	count=1
function_name	la fonction ||| by id	count=1
namespace	permis ou pas pour ||| function	count=1
function_name	configure les paramètres ||| set	count=1
function_name	l'uri de ||| uri	count=3
arg_pair	fonction filter_var() ||| mixed $definition	count=1
function_name	propriétaire du fichier courant ||| owner	count=1
function_name	image ||| image file	count=4
return	des serveurs de base ||| bool	count=1
function_name	la fonction geoip_country_code3_by_name() retourne ||| geoip country code3	count=1
function_name	exécution ultérieure [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	l'application ||| disc	count=1
function_name	verrou sur la ||| dbplus	count=1
function_name	associatif en utilisant les ||| assoc	count=1
function_name	sens des abscisses et ||| pdf skew	count=1
arg_pair	couleur avec ||| resource $image int $red	count=1
function_name	partie d'un document yaml ||| yaml	count=1
return	protocole associé [return] protocole ||| [return]	count=1
arg_pair	sauvegarde son contenu dans ||| int $oid	count=1
return	définit le ||| bool	count=1
function_name	durée du ||| set include	count=1
function_name	chaîne ||| string	count=4
function_name	encodés qui s'y ||| all	count=1
function_name	glob() de ||| glob	count=1
namespace	pour ||| xmldiff\base	count=1
function_name	requête z39.50 scan ||| yaz scan	count=1
function_name	compare la variable ||| ucache	count=1
function_name	[function_name_1] toutes ||| [function_name_1] [function_name_2]	count=1
namespace	valeur de l'option memcached ||| memcached	count=1
namespace	tous ||| splfileobject	count=1
function_name	un motif basé sur ||| ps shading pattern	count=1
return	est similaire à ||| int	count=1
function_name	liste de méthodes ||| methods	count=1
function_name	toutes les ||| buffer	count=1
function_name	représentant ||| to	count=1
arg_pair	dans le ||| int $height	count=1
arg_pair	interne de résultat ||| int $row_number	count=1
function_name	ingres_query() dans ||| ingres fetch	count=1
function_name	génère une représentation yaml ||| yaml emit	count=1
function_name	les ||| handle	count=1
namespace	libère une référence ||| weakref	count=1
function_name	une image pour ||| ps open image file	count=1
namespace	processus ||| function	count=2
function_name	similaire à la ||| mysql	count=1
function_name	réservée par ||| ibase	count=1
arg_pair	représentée par l' oid ||| resource $conn_identifier string $oid	count=1
function	[function_name_1] toutes les ||| [arg_pair_2] [function_name_1]	count=3
function_name	la ||| add	count=1
function_name	et une [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	un ||| resource	count=16
arg_pair	attend qu'elles changent ||| array $read	count=1
arg_pair	spécial ou ordinaire ||| int $major int $minor	count=1
function	[function_name_1] les ||| [function_name_1] [arg_pair_2]	count=1
function_name	s'interrompt ||| max poll time	count=2
arg_pair	bcc ||| string $rpath	count=1
function_name	la session ||| is in session	count=1
function_name	verrou exclusif sur un ||| lock	count=1
function_name	extension ||| extension	count=1
function_name	d'entrée avant ||| input	count=1
namespace	oauth pour les ||| oauth	count=3
function_name	de l' eventbuffer ||| buffer	count=1
function_name	de version mineure ||| minorversion	count=1
arg_pair	affecte ||| mixed $writecb mixed $errorcb	count=1
function_name	[function_name] décalage horaire ||| date default timezone [function_name]	count=3
function_name	[function_name_1] longueur ||| [function_name_1] max word [function_name_2]	count=1
return	extrait les mots-clés de ||| array	count=1
arg_pair	fichier fieldname ||| resource $fdf_document string $fieldname	count=1
rest	les informations [function_2] ||| [return_1] [function_2]	count=3
arg_pair	espace de ||| string $namespaceuri string $qualifiedname	count=1
function_name	configuration ||| set include path	count=2
arg_pair	substr() basée ||| int $start	count=1
arg_pair	documents ||| array $docs	count=1
function_name	élément à la fin ||| append	count=1
arg_pair	utilisée pour récupérer le ||| int $schema_type string $table_name	count=1
function_name	la méthode de compression ||| entry compressionmethod	count=1
function_name	[function_name_1] clé ||| [function_name_2] [function_name_1]	count=1
function_name	répétée ||| str repeat	count=1
function_name	fonction geoip_org_by_name() ||| org	count=1
function	[function_name_1] temporairement le ||| [arg_pair_2] [function_name_1]	count=1
namespace	eventbufferevent ||| eventbufferevent	count=1
function_name	socket valide ||| socket	count=1
return	valeur ||| mixed	count=4
function_name	noms est déclaré ||| namespace decl	count=1
function_name	[function_name_1] [function_name_2] ||| mysqli [function_name_1] client [function_name_2] mysqli $link	count=4
namespace	pour ||| function	count=3
namespace	post ou par ||| function	count=1
function_name	rappel pour ||| callback	count=2
function_name	émet une exception ||| exception callback	count=1
arg_pair	des caractères lors ||| string $pattern	count=1
function_name	de l'étape d'erreur ||| step error threshold	count=2
function_name	la fonction de rappel ||| callback	count=1
function_name	[function_name_1] fonction crée ||| [function_name_2] [function_name_1]	count=2
function_name	cache utilisateur ||| wincache ucache exists	count=1
function_name	fichier qui ||| set metadata	count=1
namespace	date ||| splfileinfo	count=2
function_name	supprime toutes les lignes ||| dbplus rzap	count=1
function_name	détruit toutes ||| unset	count=1
return	de la bibliothèque rrdtool ||| string	count=1
function_name	de rappel timestampnoncehandler qui ||| timestamp nonce handler	count=1
arg_pair	dans le calendrier calendar ||| int $calendar int $month	count=1
arg_pair	factorielle ||| int $size	count=1
function_name	prochaine ligne ||| continue	count=1
return	au ||| string	count=1
arg_pair	et la clé passées ||| string $data string $method	count=1
function_name	retourne le ||| numfields	count=1
return	génère ||| string	count=1
function_name	contient du code php ||| php	count=1
function_name	en ||| include	count=1
function_name	classe est ||| is	count=4
arg_pair	distants ||| callable $callback	count=1
arg_pair	php event_handler en ||| string $event_name1	count=1
function_name	utilisée pour envoyer la ||| set by key	count=1
arg_pair	de la suppression d'un ||| array $deleteoptions array $protocoloptions	count=1
return	dans le ||| int	count=5
function_name	compare une ou plusieurs ||| compare	count=1
arg_pair	chaîne address tel que ||| string $address	count=1
arg_pair	les ||| array $options	count=1
arg_pair	[arg_pair_1] paramètre str ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	script en cours ||| function	count=1
function_name	à la ||| type	count=2
arg_pair	métadonnées et la seconde ||| string $prefix	count=1
function_name	méta pour les champs ||| field metadata	count=1
function_name	correction gamma ||| imagegammacorrect	count=1
function_name	instance glo ||| to glo	count=1
arg_pair	de needle ||| string $needle	count=1
function_name	fonction d'activation pour ||| set activation	count=3
function_name	demandée [function_name] version ||| [function_name]	count=1
function_name	donné ||| element	count=1
function_name	configure les ||| set	count=2
function_name	serveurs de travaux à ||| servers	count=1
function_name	partie de document html ||| html	count=1
function_name	[function_name] texte de ||| [function_name]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] error [function_name_1]	count=9
function_name	le champ spécifié ||| mysql field seek	count=1
arg_pair	mktime() excepté le ||| int $year	count=2
function_name	élément avec un identifiant ||| element by	count=1
arg_pair	de noms namespaceuri ||| string $namespaceuri	count=1
function_name	fonction est définie dans ||| is	count=1
arg_pair	et empile les variables ||| array $array mixed $value1	count=1
arg_pair	fait que ||| int $second	count=1
function_name	[function_name_1] le nom ||| [function_name_1] extension [function_name_2]	count=2
return	de sortie de ||| string	count=1
function_name	le ||| imagesetbrush	count=1
function_name	prépare une page pour ||| pdi page	count=1
function_name	permissions ||| fchmod	count=1
function	[function_name_1] prompt ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	d'une colonne particulière d'une ||| int $column	count=1
function_name	tous ||| all	count=1
return	chaîne ||| string	count=7
function_name	un élément ||| get	count=1
arg_pair	des données encodées raw/gzip/zlib ||| string $data string $max_decoded_len	count=1
function_name	[function_name_1] données fbsql ||| [function_name_2] [function_name_1]	count=2
function_name	vérifie si ||| is	count=3
function_name	textes qui correspondent ||| ereg	count=1
function_name	un fichier ||| from	count=1
namespace	que pour ||| pharfileinfo	count=1
arg_pair	et la seconde contient ||| mongodb $db	count=1
function_name	ligne de données ||| fetch row	count=4
namespace	toutes les données ||| eventbuffer	count=1
function_name	durée du ||| set include path	count=1
namespace	objet arrayobject ||| arrayobject	count=1
function_name	retourne [function_name_2] ||| mysqli [function_name_1] client [function_name_2] mysqli $link	count=1
function_name	en-têtes http ||| apache request headers	count=2
arg_pair	que ||| int $year	count=2
function_name	cette fonction est similaire ||| get element by	count=1
function_name	méthode phar::startbuffering() peut ||| start buffering	count=1
function_name	défini ||| fann set error log	count=2
function_name	similaire ||| by	count=1
function_name	minimale de l'étape ||| min	count=1
function_name	libxml standard et ||| libxml use internal errors	count=1
function	[function_name_1] source ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	dans la chaîne ||| string $source	count=1
arg_pair	d'un ||| int $length int $pri	count=1
function_name	définit la ||| set query	count=1
function_name	de ||| zip	count=1
function_name	document yaml ||| yaml	count=1
function_name	la fonction wincache_lock() ||| wincache unlock	count=1
function	définit les mots de [function_name_1] [arg_pair_2] ||| bool set [function_name_1] [arg_pair_2]	count=1
function_name	essaie de supprimer la ||| drop db	count=1
namespace	sortie de la ||| gmagick	count=1
return	terminé son exécution ||| void	count=1
arg_pair	d'autorité ca pour à ||| string $ca_path string $ca_info	count=1
function_name	l'étape d'erreur sarprop ||| set sarprop step error threshold	count=1
arg_pair	un fichier vers le ||| string $filename resource $context	count=1
function_name	de l'option magic_quotes_gpc ||| magic quotes gpc	count=1
function_name	de caractères d'instance ||| string	count=1
function_name	compte les ||| iterator count	count=1
return	les lignes ||| int	count=1
function_name	vérifie si le champ ||| exists	count=1
function_name	depuis la base de ||| fbsql set	count=1
function_name	pour une exécution ultérieure ||| prepare	count=1
function_name	bytecode d'une classe ||| bcompiler write class	count=2
function_name	la signature ||| verify	count=1
arg_pair	le style ||| int $type	count=1
return	fichier qui ||| void	count=1
function_name	fourni ||| add buffer	count=2
arg_pair	à ||| int $day int $year	count=1
function_name	les deux ||| watermark	count=1
function_name	[function_name_1] pagination taille ||| [function_name_1] [function_name_2]	count=6
function_name	un token d'accès ||| access token	count=1
function_name	[function_name_1] géométrie de ||| [function_name_1] [function_name_2]	count=1
arg_pair	opcode spécifié avec ||| int $opcode	count=1
function_name	avec un patch binaire ||| string patch binary	count=1
function_name	ftell() pour déterminer la ||| stream tell	count=1
arg_pair	buffer buf ||| string $buf	count=1
function_name	lance une alerte ||| warning	count=1
arg_pair	dans set ||| array $set array $siginfo	count=1
function_name	de configuration ||| include path	count=1
function_name	cherche ||| strrpos	count=1
function	exécute [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	l'identité du ||| integer	count=1
function_name	à [function_name] avec une ||| [function_name] fetch	count=1
function_name	courante de la levée ||| rise	count=1
function_name	position du neurone de ||| to neuron	count=1
return	utilisée sur le ||| string	count=1
namespace	recherche ||| judy	count=2
return	similaire ||| string	count=2
arg_pair	avoir à utiliser mapreduce ||| array $pipeline array $options	count=1
function	l'encodage utilisé [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	que ceux ||| chmod	count=1
namespace	commentaire d'une [namespace] le nom ||| [namespace]	count=1
function_name	incrémente de 1 ||| inc	count=1
function_name	fin de ||| push	count=1
namespace	est entrée moins ||| ev	count=1
function_name	retourne le premier ||| ldap first	count=1
arg_pair	dans subject ont ||| mixed $subject	count=1
function_name	de requête ||| add filter query	count=1
function_name	crée une nouvelle ||| new pseudo	count=1
return	sous la forme d'un ||| int	count=1
return	eventbuffer courant ||| bool	count=1
arg_pair	memcache::connect() avec la ||| string $host int $port	count=1
namespace	le nombre de fois ||| ev	count=2
function_name	informations d'un ||| info	count=1
arg_pair	un tableau ||| array $except int $tv_sec	count=2
arg_pair	largeur de src_w et ||| int $src_w	count=1
function	autocommit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	utilisé ||| maxdb debug	count=2
function_name	et libère les ||| buffer free	count=1
arg_pair	src_x ||| int $src_x	count=1
function	lie le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	d'attente ||| max poll	count=1
arg_pair	[arg_pair_1] examine ||| [arg_pair_1] [arg_pair_2] string $extracerts string $content	count=1
function_name	la dernière erreur imap ||| imap	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] extent [arg_pair_2]	count=6
function_name	dans un ||| mailparse uudecode	count=1
return	la forme en incluant ||| void	count=1
function_name	avec des tests ||| array uintersect uassoc	count=1
namespace	rrdtool ||| function	count=1
function_name	du thread de ||| thread	count=2
function_name	cette méthode détermine si ||| is	count=1
function_name	filtre décimal à la ||| filter float range	count=1
return	terminé son ||| void	count=1
namespace	document ||| harudoc	count=7
arg_pair	lors de ||| string $string	count=1
function_name	fichier ||| is	count=1
namespace	courantes ||| samconnection	count=1
arg_pair	et p ||| gmp $a gmp $p	count=1
namespace	être appelé une fois ||| collectable	count=1
return	synchronise ||| mixed	count=1
function_name	contenant la représentation ||| octdec	count=1
function_name	affectées par la dernière ||| cubrid affected	count=1
function_name	fourni et extrait ||| mailparse	count=1
function	mémoire partagée [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	documents supérieures à ||| dead	count=1
function_name	include_path ||| include	count=1
function_name	caractères) de début ||| ltrim	count=1
namespace	bibliothèque ||| sqlite3	count=1
function_name	valeurs dans les regroupements ||| group	count=1
namespace	domnodelist ||| domnodelist	count=1
function_name	un élément avec ||| get element	count=1
function_name	champ lors de ||| set	count=1
function_name	en ||| destroy	count=1
arg_pair	l'étape est un ||| resource $ann	count=1
arg_pair	un espace de noms ||| string $qualifiedname	count=1
function_name	options dans un formulaire ||| fieldgroup	count=1
namespace	la méthode gearmanclient::setcontext() ||| gearmanclient	count=1
function_name	le lien [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	été ajoutés ||| form	count=1
arg_pair	l'algorithme ||| string $algorithm string $lib_dir	count=1
function_name	un ||| get element by id	count=4
function_name	selon ||| validate source	count=2
function_name	à la ||| newt	count=1
namespace	base de ||| mongocursor	count=1
namespace	fichier ||| splfileinfo	count=6
function_name	[function_name] d'un ||| set submit form [function_name]	count=1
function_name	défini l'endroit ||| fann set error log	count=1
function_name	définit la valeur du ||| set	count=1
function_name	[function_name_1] de ligne ||| [function_name_2] [function_name_1]	count=1
function_name	de l'image ||| images	count=1
function_name	de l'image ||| type	count=1
function_name	l'image ||| setimagescene	count=1
namespace	fonctionne avec datetimeimmutable ||| datetimeimmutable	count=1
arg_pair	la requête sql query ||| resource $link_identifier	count=1
function_name	d'une ||| distortion	count=1
function_name	est ||| by id	count=2
function_name	à ||| add buffer	count=2
namespace	défini l'endroit où ||| function	count=1
function_name	du dernier accès et ||| eio futime	count=1
function_name	déplace sur la prochaine ||| next	count=1
return	les données concernant le ||| array	count=1
function_name	lors de ||| end	count=1
return	la chaîne de caractères ||| string	count=2
arg_pair	une ||| int $index imagickpixel $color	count=1
namespace	le noeud courant est ||| tidynode	count=1
arg_pair	fichiers dans l'argument ||| mixed $fd int $pri	count=1
function_name	groupe d'appartenance du fichier ||| get group	count=1
function_name	le fait ||| eregi	count=1
function_name	est une nom de ||| is	count=1
return	différences et ||| string	count=1
function_name	utile lors de ||| urlencode	count=1
function_name	les clés d'une table ||| primary keys	count=1
function_name	suivante ||| next	count=3
function_name	[function_name_1] fils ||| [function_name_2] [function_name_1]	count=1
arg_pair	value1 et ||| mixed $value1	count=1
function_name	de recherche imposées ||| udm clear search limits	count=1
function_name	la couleur [function_name_2] ||| [function_name_2] background [function_name_1]	count=1
function_name	ferme [function_name] ||| pdf close pdi [function_name]	count=3
function_name	supprime toutes les ||| dbplus rzap	count=1
return	uniquement avec une connexion ||| array	count=1
function_name	informations du dernier tableau ||| info	count=1
function_name	la position courante ||| show	count=1
function_name	fonctions de [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	envoie ||| pg send	count=1
function_name	du jeu de résultats ||| db2	count=2
arg_pair	utilisant le séparateur delimiter ||| string $string	count=1
function_name	le vecteur d'entrée avant ||| input	count=1
function_name	[function_name_1] de l'encodage ||| [function_name_2] [function_name_1]	count=2
function_name	utilisées ||| newt form destroy	count=2
function_name	mais dans l'ordre inverse ||| array reverse	count=1
function_name	nom de l'artiste d'un ||| artist	count=1
function_name	clé metaphone de ||| metaphone	count=1
function_name	décide si ||| qc set	count=1
arg_pair	un fichier ||| string $filename array $options	count=1
function_name	[function_name_1] au lieu ||| [function_name_2] [function_name_1]	count=1
return	décrite ||| bool	count=1
namespace	et ||| soapserver	count=1
function_name	pour l'affichage du texte ||| text pos	count=1
arg_pair	la première contient les ||| mongodb $db string $prefix	count=1
function_name	noms de champs ||| names	count=1
arg_pair	similaire à ingres_fetch_array() ||| int $result_type	count=1
arg_pair	multiple s'il ||| resource $mh	count=1
function_name	la méthode d'entrelacement de ||| image interlace scheme	count=1
function_name	[function_name_1] l'entrée utilisateur ||| [function_name_1] [function_name_2]	count=1
function_name	profondeur de l'image ||| set image depth	count=2
function_name	de 9 miniatures de ||| preview	count=1
function_name	[function_name] type rarexception ||| [function_name]	count=3
function_name	afficher ||| show	count=1
arg_pair	len octets issus du ||| int $len int $flags	count=1
arg_pair	assoc_array ||| int $options	count=1
function_name	les en-têtes de ||| headers	count=2
function_name	de bordure de ||| set border	count=1
return	noeud ||| bool	count=1
function_name	supprime ||| remove	count=12
function_name	[function_name] l'instance ||| [function_name]	count=1
return	à la fonction ||| domelement	count=1
namespace	de sortie de ||| gmagick	count=1
namespace	indique si le noeud ||| tidynode	count=1
function_name	inspectée ||| mysqlnd qc	count=1
return	durée du ||| string	count=1
function_name	de la connexion ||| set	count=1
function_name	un guid binaire ||| guid	count=1
arg_pair	un fichier spécial ||| int $mode	count=1
return	a ||| bool	count=1
namespace	qui s'y trouvent ||| function	count=1
return	défaut $this ||| void	count=2
function_name	et les ||| batch	count=1
function_name	sont sur ||| form destroy	count=1
arg_pair	à l'historique système ||| string $ident	count=1
function_name	ajoutés à ||| newt form destroy	count=1
function_name	contient encore un élément ||| valid	count=1
arg_pair	fonction cubrid_connect() ||| bool $new_link	count=1
namespace	délinéarise un [namespace] à partir ||| [namespace]	count=1
function_name	informations ||| eio stat	count=1
function_name	[function_name_1] d'équilibrage ||| [function_name_1] [function_name_2]	count=1
function_name	boîtes à cocher ||| newt checkbox	count=1
return	d'une requête sql ||| string	count=1
arg_pair	par le paramètre variable_name ||| resource $introspection string $variable_name	count=1
namespace	courante ||| gmagick	count=1
function_name	à l'huile ||| oil paint image	count=1
arg_pair	police de caractères ||| string $text	count=1
function_name	d'activation pour tous ||| fann set activation	count=3
function_name	brutes de ||| raw	count=1
function_name	est similaire à ||| proc close	count=1
function_name	vérifie si ||| opcache is	count=1
namespace	base ||| xmldiff\base	count=1
return	minimum [return] mot en ||| [return]	count=1
namespace	affiche ou sauvegarde une ||| function	count=1
function_name	termine une définition ||| pdf end	count=1
function_name	crée une action qui ||| create action	count=1
function_name	arc dans un ||| arc	count=1
arg_pair	message d'erreur à l'historique ||| int $message_type	count=1
arg_pair	fichier fd pour ||| mixed $fd int $mode	count=1
function_name	cette fonction ||| element by	count=1
return	seconde contient ||| mongodb	count=1
return	envoi tous ||| boolean	count=1
function_name	compression utilisée sur ||| zip	count=1
function_name	la dernière erreur ||| get last error	count=1
function_name	paramètres séparément de ||| pg query params	count=1
function_name	composants qui sont ||| form	count=1
function_name	courant ||| add buffer	count=2
function_name	retourne le nombre ||| mysqli num	count=2
arg_pair	le gestionnaire font ||| int $font	count=1
function_name	[function_name] repéré ||| ifx update [function_name]	count=3
function_name	de l'objet blob ||| blob	count=1
function_name	la couche ||| layer	count=1
function_name	la méthode gearmanclient::do() ||| do	count=1
function_name	jeu de résultats ||| db2	count=23
return	chambre noire [return] exposant ||| [return]	count=1
arg_pair	toutes les ||| resource $ann	count=1
function_name	la clé key ||| get delayed by key	count=1
function_name	[function_name_1] page courante ||| [function_name_1] [function_name_2]	count=1
function_name	einer mime ||| mime	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] tag [function_name_2]	count=3
namespace	qui avaient ||| function	count=1
namespace	le ||| mongocursorinterface	count=1
function_name	[function_name_1] script ||| [function_name_2] [function_name_1]	count=2
function_name	colonnes de la base ||| numfields	count=1
function_name	format pkcs#12 ||| pkcs12 export	count=1
function_name	les méta-données ||| metadata	count=1
arg_pair	de résultats listant ||| string $table-name	count=5
function_name	sous la forme d'un ||| fetch	count=1
function_name	et tous les composants ||| newt form	count=1
function_name	socket ||| socket create	count=2
function_name	processus courant ||| pcntl wait	count=1
function_name	récupère les blob/clob ||| cubrid lob get	count=1
function_name	une connexion à un ||| connect	count=2
arg_pair	une méthode avancée ||| string $key mixed $value	count=1
namespace	fin et que ||| mongocursorinterface	count=1
function_name	dernière ||| errno	count=3
namespace	uniquement ||| mongoclient	count=1
function_name	[function_name_1] les ||| [function_name_1] connection [function_name_2]	count=1
function_name	complétion ||| readline completion function	count=2
function_name	base identifiée ||| dba	count=2
arg_pair	descripteur de fichier fd ||| int $mode	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] outline [arg_pair_2]	count=1
arg_pair	et le démarre automatiquement ||| mixed $data int $priority	count=1
function_name	son nom ||| name	count=1
function_name	de requête ||| query	count=1
function_name	passée en ||| db2 escape	count=1
namespace	avec la méthode ||| gearmanclient	count=1
function_name	true si ||| is	count=1
function_name	retournant un tableau d'informations ||| win32 query	count=1
function_name	tailles de ||| mcrypt enc get supported key sizes	count=1
function_name	profils [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	si ||| eio set max	count=1
return	du tampon ||| bool	count=1
arg_pair	dans un ||| resource $pxdoc int $value	count=1
function_name	retire un gestionnaire ||| remove	count=1
namespace	implémente un algorithme de ||| arrayobject	count=1
namespace	position courante ||| harupage	count=3
function_name	ajoute la session ||| multi add	count=1
return	date de ||| int	count=2
arg_pair	structure vide ||| int $num_data	count=1
function_name	fréquence ||| default frequency	count=2
function_name	la configuration de ||| config	count=1
function_name	valeur de l'attribut ||| attribute ns	count=1
arg_pair	la fonction mysql_field_name() ||| int $field_offset	count=1
function_name	modifie ||| set	count=1
return	serveur de ||| string	count=1
namespace	à evchild::__construct() mais ne ||| evchild	count=1
function_name	l'image attachée ||| picture	count=1
arg_pair	memcached::getdelayed() mais ||| bool $with_cas callable $value_cb	count=1
arg_pair	correspondant à ||| int $type	count=1
arg_pair	avant de l'envoyer ||| string $source_string	count=1
function_name	flou à une image ||| gaussian blur image	count=1
return	itérateur ||| traversable	count=1
function_name	est similaire à ||| proc	count=1
function_name	un agent snmp spécifié ||| snmp2	count=1
arg_pair	[arg_pair_1] table table_name ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	sybase ||| sybase	count=1
function_name	nouveau contexte ||| context new	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] dict [arg_pair_2]	count=1
namespace	objets arrayobject ||| arrayobject	count=1
function_name	s'interrompt si ||| eio	count=1
function_name	le numérateur du taux ||| task numerator	count=1
return	tampon fourni par ||| bool	count=1
arg_pair	dans ||| int $flags	count=2
function_name	composants qui avaient été ||| form destroy	count=1
rep	ou [rest_2] ||| [namespace_1] [rest_2]	count=2
function_name	cette fonction ||| form	count=1
function_name	depuis le fichier exe ||| load exe	count=1
namespace	envoie une ||| soapserver	count=1
function_name	et tous ||| newt	count=1
return	similaire à ||| string	count=2
namespace	lorsque la méthode ||| recursivetreeiterator	count=1
arg_pair	les paramètres passés ||| int $year	count=2
function_name	la ||| zip entry compressionmethod	count=2
namespace	des caractères lors ||| function	count=1
return	une réponse ||| void	count=1
namespace	parcourt un lot ||| mongocommandcursor	count=1
arg_pair	pour un ||| string $servicename	count=1
namespace	serveur ||| memcache	count=2
function_name	l'intervalle pour [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	terminé son exécution ou ||| set	count=1
function_name	lot d'objets ||| batch size	count=1
namespace	des lob oracle ||| oci-lob	count=1
function	de autocommit [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	[arg_pair] clés ||| [arg_pair]	count=1
function_name	message d'erreur ||| error message	count=1
function_name	quitte ||| decl	count=1
function_name	le fichier ||| export to file	count=2
return	entière et le ||| array	count=1
function_name	ligne depuis le ||| read line	count=1
arg_pair	au paramètre pattern puis ||| string $pattern	count=1
function_name	à l'échelle ||| scale	count=4
function_name	le flux ||| to stream	count=1
arg_pair	la position ||| string $encoding	count=1
function_name	les ||| construct	count=3
function_name	les ||| size	count=1
function_name	d'erreurs libxml standard et ||| libxml use internal errors	count=1
function_name	image pour ||| open image	count=1
function_name	la fin de ||| push	count=1
function_name	de noms ||| start namespace	count=1
function_name	gd2 ||| imagecreatefromgd2part	count=1
function_name	nombre ||| ifx num fields	count=2
function_name	lignes affectées ||| mysqli affected rows	count=2
function_name	caractères brutes des termes ||| raw	count=1
arg_pair	bleu d'une ||| int $b	count=1
namespace	de la recherche sur ||| function	count=1
function_name	la durée ||| set	count=1
arg_pair	pour le ||| int $mode	count=1
function_name	retourne ||| file get	count=1
function_name	ou ||| function	count=1
namespace	tampon d'événement ||| eventbufferevent	count=3
function_name	qu'elle ignore la casse ||| eregi	count=1
arg_pair	base [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	commence une unité ||| mqseries begin	count=1
function_name	document lorsqu'il ||| unset	count=1
function_name	antislashs devant les caractères ||| db2	count=1
function_name	[function_name_1] [function_name_2] résultat d'une requête ||| [function_name_2] [function_name_1]	count=2
function_name	de caractères d'instance xml ||| load string	count=1
function_name	champ spécifié ||| mysql field flags	count=1
function_name	la file d'attente ||| set max	count=1
function_name	casse), et ||| grapheme stristr	count=1
function_name	celles du ||| ukey	count=1
arg_pair	être invoquées avant de ||| int $max_interval	count=1
function_name	[function_name_1] termes ||| [function_name_2] [function_name_1]	count=2
function_name	remplace les données ||| dbase replace record	count=1
function_name	libère les ||| form destroy	count=1
function_name	d'autres caractères) de début ||| ltrim	count=1
return	une chaîne contenant la ||| string	count=2
function_name	requête ||| mlt query field	count=1
function_name	patch binaire et ||| patch binary	count=1
namespace	bibliothèque ||| function	count=1
function_name	plus récente rapportée par ||| ssl error	count=1
function_name	prépare une page ||| page	count=1
function_name	demande radius ||| radius	count=1
function_name	s'interrompt si ||| eio set max poll time	count=1
function_name	méthode d'entrelacement de ||| image interlace scheme	count=1
arg_pair	fusionne la source ||| solrdocument $sourcedoc	count=1
function_name	ré-initialise toutes les options ||| reset	count=1
arg_pair	ainsi d'être manipulé ||| int $oid	count=1
function_name	en utf-16 ||| to utf16	count=2
function_name	faible priorité ||| low	count=1
arg_pair	dans un résultat ||| resource $result int $row_number	count=1
arg_pair	attribute à la valeur ||| string $attribute	count=1
function_name	la file d'attente ||| set	count=1
return	sein d'une archive phar ||| bool	count=1
function_name	de ||| load	count=2
arg_pair	attend qu'elles changent de ||| array $read array $write	count=1
function_name	fixe l'uid effective ||| posix setuid	count=1
arg_pair	place un hyperlien ||| float $urx	count=2
rest	toutes les [function_2] ||| [function_2] [return_1]	count=1
arg_pair	un verrou sur la ||| resource $relation	count=1
arg_pair	x et y ||| int $x int $y	count=1
function_name	connecte le dernier point ||| ps closepath	count=2
arg_pair	le profile [arg_pair] use of ||| [arg_pair]	count=1
function_name	gris ||| ps setgray	count=2
return	méthode est ||| mixed	count=1
function_name	[function_name_1] avec la ||| [function_name_1] error [function_name_2]	count=3
arg_pair	fonction callback ||| array $array callable $callback	count=1
namespace	l'exception sous forme ||| exception	count=1
arg_pair	génère une chaîne ||| string $http_method	count=1
arg_pair	texte text en utilisant ||| string $text	count=2
arg_pair	de rappel callback ||| callable $callback string $data	count=1
arg_pair	recodage request ||| string $request	count=1
namespace	ferme le ||| function	count=2
return	de l'image spécifiée avec ||| bool	count=1
arg_pair	dans le résultat result ||| int $field_offset	count=1
function_name	[function_name_1] à l'image ||| [function_name_2] [function_name_1]	count=3
arg_pair	et ||| string $text	count=1
arg_pair	les données fournies ||| string $data string $optlist	count=1
arg_pair	texte avec des ||| string $text	count=1
arg_pair	à l'hôte hostname ||| string $hostname	count=1
function_name	à memcached::prepend() ||| prepend by	count=1
function_name	définit [function_name] ||| set data [function_name]	count=1
arg_pair	et un endroit donnés ||| float $gmt_offset	count=1
function_name	absolu canonisé ||| eio realpath	count=1
function_name	méthode oauthprovider::consumerhandler() ||| callconsumer handler	count=1
function_name	[function_name_1] group ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] importé ||| [function_name_1] [function_name_2]	count=2
function_name	de dernière modification du ||| get mtime	count=1
function_name	temporisation de sortie ||| ob end	count=1
function_name	tentative de ||| connect	count=1
arg_pair	fait ||| int $day	count=1
return	sera utilisée [return] ||| [return]	count=3
arg_pair	à une page ||| string $dest	count=1
function_name	de autocommit de ||| db2 autocommit	count=1
return	retourne le nombre ||| int	count=4
namespace	un alias de ||| event	count=1
arg_pair	dirname ||| resource $context	count=1
arg_pair	données database ||| resource $link_identifier	count=1
arg_pair	sur le système ||| resource $sftp	count=1
return	d'archives spécifié ||| string	count=1
function_name	imagemagick ||| home url	count=1
namespace	écrit du texte ||| function	count=1
function_name	la mise à jour ||| log cmd update	count=1
return	jeu de ||| sqlite3result	count=1
function_name	[function_name_1] contenu ||| [function_name_1] [function_name_2]	count=1
function_name	la ||| show	count=1
function_name	la fonction popen() ||| pclose	count=1
arg_pair	chaîne d'une façon similaire ||| int $start	count=1
arg_pair	la constante imagetype_xxx ||| bool $include_dot	count=1
namespace	appels ||| yar_concurrent_client	count=1
namespace	du document ||| solrdocument	count=3
function_name	les alertes [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	paramètres font ||| float $fontsize	count=1
return	méthode gearmanclient::setcontext() ||| string	count=1
namespace	fonction prépare php à ||| function	count=1
arg_pair	position offset et ||| resource $context int $offset	count=1
function	[function_name_1] cible ||| [function_name_1] [arg_pair_2]	count=2
function_name	la fréquence en deçà ||| min term frequency	count=1
function_name	dernier message d'erreur ||| stmt errormsg	count=1
arg_pair	empile les variables var ||| array $array mixed $value1	count=1
namespace	écrit du ||| function	count=1
namespace	l'image ||| gmagick	count=9
arg_pair	l'objet object ||| object $object	count=1
function_name	utilisées par ||| form	count=1
function_name	verrou de lecture sur ||| lock	count=1
function_name	champ spécifié ||| mysql field seek	count=1
function	mots personnelle [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] statique ||| [function_name_2] [function_name_1]	count=2
function_name	est similaire à ||| get element by	count=1
return	la forme ||| string	count=1
function_name	champs facet.date ||| facet date fields	count=2
arg_pair	à une colonne données ||| mixed $column mixed $param	count=1
function_name	d'attente s'interrompt si elle ||| set max	count=1
return	les fonctions liées ||| array	count=1
function_name	regex ||| regex	count=1
arg_pair	: left ||| float $left	count=1
namespace	à la première ligne ||| splfileobject	count=1
function_name	à l'échelle les ||| scale output	count=1
function_name	contenant la valeur de ||| db2	count=1
function_name	texte pour formatage ultérieur ||| textflow	count=1
return	une chaîne contenant le ||| string	count=1
return	base ||| mixed	count=1
function_name	à memcached::prepend() mais ||| prepend by	count=1
function_name	termine le script courant ||| exit	count=1
return	ligne dans ||| int	count=1
function_name	la file ||| msg queue	count=1
arg_pair	fichier ||| string $name	count=1
function_name	récupère les ||| cubrid lob get	count=1
function_name	de flux à utiliser ||| stream wrapper register	count=1
function_name	qui décide ||| qc set is	count=1
function_name	d'un [function_name] résultat ||| [function_name]	count=1
function_name	associatif qui ||| assoc	count=1
function_name	ligne de ||| fetch	count=5
arg_pair	stocke ||| int $expire	count=1
function_name	délai de l'image ||| image delay	count=1
function_name	de l'espace de ||| space	count=1
function_name	des antislashs ||| db2 escape	count=1
return	uniquement avec ||| array	count=1
namespace	d'une ||| sdo_das_xml	count=1
return	sortie ||| string	count=2
function_name	récupère le nombre de ||| fann get	count=1
namespace	la position ||| limititerator	count=1
arg_pair	caractères ||| gmagickdraw $draw string $text	count=1
namespace	appliqué à ||| imagick	count=1
function_name	en-têtes d'entrée ||| input headers	count=2
function_name	est utile uniquement ||| get	count=1
function_name	une chaîne [function_name] utilisée ||| maxdb [function_name]	count=1
function_name	le contenu ||| get	count=1
function_name	nouvelle connexion [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	nouvelle instance harudestination ||| destination	count=1
namespace	le script ||| samconnection	count=1
arg_pair	à la ||| int $year	count=2
function_name	retourne un [function_name] ||| [function_name]	count=2
function_name	une fois [function_name] ||| [function_name] add doc	count=2
function_name	similaire à la fonction ||| element	count=1
function_name	le nombre de ||| dbase	count=1
namespace	les requêtes soap ||| soapclient	count=1
arg_pair	un nom de domaine ||| string $domain int $options	count=1
arg_pair	gmp a ||| gmp $a	count=1
function_name	phar::startbuffering() peut fournir ||| buffering	count=1
namespace	la recherche sur les ||| function	count=1
function_name	de mémoire partagée ||| shmop	count=1
return	requête soap ||| void	count=1
arg_pair	dans ||| string $index array $attributes	count=1
function_name	le paramètre patch ||| patch	count=1
arg_pair	prompt et ||| callable $callback	count=1
arg_pair	les ||| array $array	count=2
function_name	ligne précédente de ||| dbplus prev	count=1
arg_pair	le texte text en ||| string $text	count=1
arg_pair	un serveur avec les ||| array $config	count=1
return	sur le fichier ||| resource	count=1
function_name	dernier code gearman retourné ||| return code	count=1
namespace	array comme ||| function	count=1
arg_pair	depuis un fichier ||| int $size	count=1
return	avec la ||| resource	count=1
function_name	ce gestionnaire curl sous ||| curl	count=1
function_name	défini l'époque [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	événement timer ||| event timer set	count=2
function_name	[function_name_1] dans ||| [function_name_2] [function_name_1]	count=6
arg_pair	structures de ||| int $textflow	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] declaring [function_name_2]	count=2
function_name	configure le contexte de ||| context	count=1
namespace	qui ||| arrayobject	count=1
function_name	retourne le statut ||| status	count=2
namespace	réponse ||| mongocursor	count=1
namespace	de l'archive ||| ziparchive	count=1
function_name	ajoute ||| udm add	count=1
namespace	temps [namespace] ||| [namespace]	count=1
function_name	des abscisses et de ||| pdf skew	count=1
function_name	alphabétiques en minuscules ||| mb strtolower	count=1
namespace	configuration ||| eventdnsbase	count=1
function	crée [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=8
function_name	conteneur de chargement ||| set default	count=1
function_name	blanc ||| set image white	count=1
function_name	version [function_name_2] ||| [function_name_2] [function_name_1]	count=15
function_name	utf-8 en utf-16 ||| utf8 to utf16	count=1
function_name	retourne la première ||| yp first	count=1
namespace	d'un serveur de messagerie ||| samconnection	count=1
function_name	champs colonnes de la ||| numfields	count=1
function_name	pkcs#12 ||| openssl pkcs12 export	count=1
return	en chaîne de ||| string	count=1
function_name	bloc de ||| delete	count=1
function_name	la fonction d'activation ||| set activation function	count=3
function_name	champ spécifié par ||| mysql field	count=2
function_name	sévérité des messages ||| min message severity	count=1
arg_pair	qui permettra d'accéder ||| int $memsize	count=1
return	sur le fichier spécifié ||| resource	count=1
arg_pair	joignent [arg_pair] petit ||| [arg_pair]	count=1
namespace	par l'identifiant de processus ||| function	count=1
function_name	retourne la valeur à ||| offset get	count=1
function_name	calcule la clé metaphone ||| metaphone	count=1
function_name	couleurs [function_name] ||| recolor [function_name]	count=1
function_name	de forte priorité à ||| high	count=1
function_name	récupérer une seule ligne ||| fetch	count=1
function_name	les [function_name] fournis ||| new instance [function_name]	count=1
function_name	mots de [function_name] utilisateur ||| set [function_name]	count=1
function_name	le [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	retourne une nouvelle instance ||| get	count=1
function_name	antislashs devant ||| db2	count=1
arg_pair	un fichier spécial ou ||| int $major	count=1
arg_pair	défini l'endroit où les ||| resource $errdat	count=1
arg_pair	fonction callback ||| callable $callback	count=1
function_name	remplit le chemin ||| fill stroke	count=3
arg_pair	clé key sur ||| mixed $value	count=1
arg_pair	à ||| int $hour int $minute	count=1
function_name	couleur courante ||| gray stroke	count=1
namespace	un certain délai ||| mongocursor	count=1
function_name	nombre ||| mysqli num	count=2
arg_pair	en un autre format ||| int $format	count=1
return	utilisées ||| void	count=1
function_name	fragments proches dans ||| highlight	count=1
namespace	retourne le ||| sqlite3	count=1
function_name	s'il existe ||| array key exists	count=1
function_name	du groupe ||| filegroup	count=1
arg_pair	d'une fonction à l'exécution ||| string $class string $function	count=1
function_name	[function_name_1] d'entité externe ||| [function_name_2] [function_name_1]	count=6
return	utilisée ||| void	count=2
function_name	ajoutés ||| form	count=1
arg_pair	crée un fichier ||| int $major	count=1
function_name	précisé et libère ||| free	count=1
namespace	d'exécution des fichiers ainsi ||| pharfileinfo	count=1
arg_pair	la méthode yar_concurrent_client::loop() ||| callable $callback	count=1
function_name	cette fonction est ||| get element by id	count=1
function_name	du ||| set	count=1
function_name	document html depuis une ||| html	count=1
arg_pair	len octets de ||| int $len int $flags	count=1
function_name	source php du paramètre ||| php	count=1
namespace	sqlstate ou null si ||| function	count=1
arg_pair	à ingres_fetch_array() avec ||| int $result_type	count=1
arg_pair	chemin server_path ||| resource $context string $server_path	count=1
function_name	modification du ||| ctime	count=1
function_name	la forme de ||| string	count=1
function_name	composants qui avaient été ||| form	count=1
function_name	fourni et ||| uudecode	count=1
function_name	les valeurs de ||| ldap get values	count=1
namespace	fichier qui ne peuvent ||| pharfileinfo	count=1
function_name	de la levée ||| rise	count=1
function_name	équivalence ||| variant eqv	count=1
function_name	ou plusieurs images en ||| images	count=1
arg_pair	[arg_pair_1] valeur ||| [arg_pair_1] [arg_pair_2]	count=3
namespace	l'image tout ||| gmagick	count=1
function_name	retourne la température sarprop ||| get sarprop temperature	count=1
function_name	uri de l'élément racine ||| root element uri	count=1
function_name	l'opérande ||| bccomp	count=1
arg_pair	une ||| string $error	count=1
function_name	à partir ||| string	count=1
function_name	configure les paramètres ||| set auth	count=1
function_name	configuration include_path pour ||| set include path	count=1
namespace	alphanumériques dans ||| arrayobject	count=1
arg_pair	dans un ||| string $dest	count=1
function_name	afficher les ||| show	count=1
return	les fichiers ||| array	count=1
function_name	group [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] le texte ||| [function_name_2] [function_name_1]	count=2
function_name	la bibliothèque [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	l'en-tête du ||| get	count=1
function_name	retourne ||| get error	count=1
function_name	précédente ||| prev	count=1
namespace	paramètre ||| reflectionparameter	count=1
return	curseur typiquement parcourt ||| mongocommandcursor	count=1
return	résultats ||| bool	count=1
arg_pair	l'image à la résolution ||| float $xresolution	count=1
function_name	pour spécifier un jeu [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
function	le facteur [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	plus de ||| time	count=1
function_name	le nom d'un ||| name	count=1
function_name	le nom de l'extension ||| extension name	count=1
function_name	couleurs de l'image ||| set image	count=4
return	et le reste du ||| array	count=1
arg_pair	de l'envoyer au serveur ||| string $source_string	count=1
function_name	fonction maxdb_multi_query() ||| maxdb more results	count=1
namespace	identique à la fonction ||| directory	count=1
arg_pair	un ||| string $country_code string $region_code	count=1
function_name	composants ||| content	count=1
function_name	si cela correspond parfaitement ||| dbplus tremove	count=1
function_name	[function_name_1] l'image ||| [function_name_2] [function_name_1]	count=16
function_name	file ||| msg queue	count=1
arg_pair	fichiers dans l'argument ||| int $pri	count=1
function_name	l'huile ||| oil paint image	count=2
function_name	et de flux ||| stream	count=1
namespace	doit être comprise entre ||| imagickpixel	count=1
arg_pair	y applique diverses options ||| resource $pdfdoc string $optlist	count=1
function_name	cette fonction est ||| get	count=1
function_name	la file d'attente s'interrompt ||| poll time	count=1
function_name	sélectionne une base de ||| mysql db	count=1
function_name	récupère les méta-données de ||| get metadata	count=1
arg_pair	[arg_pair] pointe vers ||| [arg_pair]	count=1
return	script ||| bool	count=1
function_name	cette méthode [function_name_1] [function_name_2] ||| simplexmliterator simplexmliterator [function_name_1] [function_name_2]	count=4
arg_pair	fieldname téléchargé ||| string $fieldname	count=1
function_name	similaire à ||| fbsql field	count=1
function_name	la ||| set	count=4
function_name	image la plus proche ||| imagecolorclosestalpha	count=1
namespace	élément ||| domdocument	count=1
function_name	[function_name_1] [function_name_2] requête ||| [function_name_2] [function_name_1]	count=2
function_name	obtient ||| sybase	count=1
function_name	propriétaire du fichier ||| owner	count=1
function_name	l'endroit où les ||| fann set error log	count=1
function_name	la ||| maxdb debug	count=2
function_name	rectangle ||| pdf rect	count=1
function_name	dans un document ||| update	count=1
namespace	spécifiée avec ||| imagick	count=1
arg_pair	et ||| string $prefix	count=1
function_name	défini ||| error	count=1
namespace	l'aide de deux collections ||| mongogridfs	count=1
function_name	d'instance xml donnée ||| load	count=1
function_name	ligne ||| fetch assoc	count=1
function_name	le sinus hyperbolique est ||| asinh	count=1
namespace	courante pour le ||| function	count=1
function_name	prochain résultat [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] l'attribut ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] d'offset ||| [function_name_2] [function_name_1]	count=4
function_name	définit ||| set start	count=1
function_name	résultat associé ||| result	count=1
function	lie [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	le dossier ||| entry	count=1
function_name	pclose() hormis le ||| proc close	count=1
arg_pair	la valeur courante de ||| resource $stmt	count=1
function_name	utilisé pour ||| set tag	count=1
function_name	la taille du segment ||| chunk size	count=1
function_name	du texte ||| show	count=1
function_name	retourne le dernier identifiant ||| db2 last insert	count=1
arg_pair	en une ||| string $new_data2	count=1
function_name	copie vide de la ||| rcrtlike	count=1
arg_pair	de seconds secondes et ||| int $seconds	count=1
arg_pair	la chaîne str ||| string $encoding	count=1
function_name	à l'échelle ||| fann scale input	count=1
function_name	contenu courant ||| get	count=1
namespace	série de ||| mongocursor	count=1
function	[function_name_1] large_object ||| [function_name_1] [arg_pair_2]	count=3
function_name	l'attribut ||| attribute ns	count=2
function_name	départ ||| start line	count=1
function_name	d'espace de noms ||| elements by	count=1
function_name	sélectionne ||| pg select	count=1
function_name	uniquement avec une ||| get	count=1
function_name	retire un gestionnaire ||| curl multi remove handle	count=1
arg_pair	sur ||| string $pattern	count=1
namespace	un fichier ou ||| function	count=1
function_name	pour stocker des ||| set	count=1
namespace	à ||| limititerator	count=1
function_name	s'interrompt si elle ||| eio	count=1
arg_pair	un tableau ||| array $args	count=1
namespace	mktime() excepté ||| function	count=1
namespace	moins le nombre ||| ev	count=1
arg_pair	identique ||| int $second	count=1
function_name	de l'octet [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	mb_substr() mais opère sur ||| mb strcut	count=1
arg_pair	utilisé avec la fonction ||| resource $radius_handle	count=1
arg_pair	et bcc ||| string $bcc string $rpath	count=1
arg_pair	couleurs représentant ||| bool $dither	count=1
function_name	translation ||| pdf translate	count=1
return	encodés qui s'y trouvent ||| array	count=1
arg_pair	str ce ||| string $str	count=1
function_name	postgresql ||| pg result	count=1
function_name	la configuration de l'objet ||| tidy config	count=1
function_name	exe ou auto-exécutable) est ||| exe footer	count=1
function	système de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	ainsi que ||| pharfileinfo	count=1
function_name	du jeton demandé ||| request token path	count=1
function_name	objet slob ||| ifxus seek slob	count=1
function_name	paramètres de la ||| parameter	count=1
return	la méthode ||| void	count=1
function_name	cette fonction ||| by	count=1
function_name	ajoute ||| multi add	count=1
function_name	affectées par la requête ||| affected	count=1
function_name	paramètres de l'objet sous ||| string	count=1
function_name	bords et ||| pdf closepath	count=1
function_name	[function_name_1] est annulable ||| [function_name_1] [function_name_2]	count=1
function_name	maximale en octets qui ||| peak	count=1
function_name	sont ||| gmmktime	count=1
function_name	système de fichiers ||| eio fstatvfs	count=1
arg_pair	les ||| array $env_keys	count=1
function_name	avec un identifiant donné ||| element	count=1
namespace	l'image spécifiée avec ||| imagick	count=1
function_name	d'activation pour la ||| activation function output	count=1
function_name	spécifie le schéma de ||| yaz schema	count=1
namespace	que les paramètres passés ||| function	count=1
function_name	pour convertir une ||| convert to	count=1
arg_pair	peut être utilisé avec ||| resource $radius_handle string $hostname	count=1
arg_pair	dans un ||| resource $psdoc	count=1
return	s'interrompt si elle prend ||| void	count=1
function_name	le contrôle [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	rappel [function_name] ||| set [function_name]	count=1
function_name	avec la fonction popen() ||| pclose	count=1
function_name	retourne ||| get state	count=1
namespace	cette méthode ||| mongoclient	count=1
arg_pair	base de ||| string $database_name resource $link_identifier	count=1
function_name	socket valide créée ||| socket	count=1
function_name	caractères invisibles ||| trim	count=1
namespace	sortie ||| ev	count=1
arg_pair	fichier identifié par handle ||| resource $handle	count=1
arg_pair	et retourne la ||| bool $before_needle	count=1
function_name	du champ de ||| mysql field	count=1
return	le numéro de la ||| int	count=2
namespace	le fichier est ||| function	count=1
function	jacobi de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	données blob/clob depuis ||| cubrid lob	count=1
function_name	méthode détermine si un ||| is	count=1
function_name	comme pourrait le faire ||| unbuffered	count=1
namespace	fois par objet lorsque ||| collectable	count=1
function_name	met à jour ||| update	count=3
function	[function_name_1] fichier identifié ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	cette méthode est ||| string $function_name	count=1
namespace	fonction ||| function	count=28
arg_pair	font ||| float $fontsize	count=1
function_name	tous les ||| mailparse	count=1
function_name	statut ||| imap status	count=1
return	entière [return] paramètre ||| [return]	count=1
arg_pair	fonctions eio_* ||| callable $execute int $pri	count=1
return	condition et [return] ||| [return]	count=1
function_name	[function_name_1] relation ||| [function_name_2] [function_name_1]	count=2
function_name	valeur ||| set include	count=1
function	la syntaxe [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	instance de ||| sqlsrv fetch object	count=1
function_name	une police de ||| font	count=1
namespace	vérifie la [namespace] de l'élément ||| [namespace]	count=1
function_name	certificat [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	et si ||| bool	count=1
namespace	l'endroit où ||| function	count=1
function_name	fbsql ||| fbsql	count=1
arg_pair	comptage des termes ||| string $field_override	count=1
function_name	qui sont ||| form	count=1
arg_pair	crée un contexte préfixe/ns ||| string $ns	count=1
function_name	dans un ||| mailparse uudecode all	count=1
function_name	documents similaires à retourner ||| mlt count	count=2
function_name	watcher comme [function_name] ||| [function_name]	count=1
function_name	retourne ||| get algorithms	count=1
function_name	d'attente ||| set max poll	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=2
function_name	sommaire de leur contenu ||| overview	count=1
arg_pair	passés sont ||| int $year	count=2
function_name	sont ||| newt form	count=1
function_name	utilisée pour ||| set add	count=1
function_name	erreur ||| error	count=2
function_name	elle prend plus de ||| poll time	count=1
function_name	envoie une réponse en ||| handle	count=1
arg_pair	paramètres ||| int $month	count=1
function_name	couleurs de ||| set	count=2
function_name	contexte de déboguage php ||| debug backtrace	count=1
return	qu'elle fonctionne ||| int	count=1
function_name	résultat [function_name_2] ||| [function_name_1] [function_name_2]	count=7
return	contient ||| mongodb	count=2
function_name	configure l'échelle ||| pdf scale	count=1
arg_pair	sauvegarde une ||| string $filename	count=1
return	bloc de ||| bool	count=1
return	utilisées par la forme ||| void	count=1
function_name	le logo zend en ||| zend logo guid	count=1
arg_pair	query_data ||| mixed $query_data string $numeric_prefix	count=1
function_name	verrou sur ||| getlock	count=1
arg_pair	valeur ||| int $color float $value	count=1
arg_pair	le fichier remote_file ||| int $mode	count=1
function_name	des paramètres requis ||| required	count=1
arg_pair	prévue ||| string $file_extensions	count=1
function_name	est similaire [function_name_1] [function_name_2] avec une différence : ||| [function_name_2] [function_name_1]	count=1
function_name	texte ||| ps show	count=2
function_name	sybase va tenter ||| sybase	count=1
function_name	est similaire ||| proc	count=1
return	crée un fichier ||| bool	count=1
arg_pair	le ||| mongodb $db	count=1
function_name	couleur de [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	est utilisée pour établir ||| string $dbname	count=1
return	d'un ||| string	count=1
arg_pair	eio_* ||| callable $execute int $pri	count=1
return	fonction cubrid_column_types() récupère les ||| array	count=1
function_name	nombre ||| pgsql	count=1
arg_pair	requête request ||| string $string	count=1
function_name	une chaîne ||| string	count=2
function_name	la fréquence ||| terms	count=1
return	db2_lob_read() pour passer à ||| string	count=1
arg_pair	à l'exécution ||| string $class string $function	count=2
return	les liens symboliques ||| array	count=1
return	seconde contient le ||| mongodb	count=1
function_name	du ||| path	count=1
function_name	la fonction ||| function	count=3
function_name	cette fonction crée ||| create entity reference	count=2
function_name	informations du ||| info	count=1
arg_pair	utilisateur php event_handler ||| callable $event_handler string $event_name1	count=1
function_name	[function_name_1] de ligne ||| [function_name_1] current [function_name_2]	count=1
function_name	récupère la hauteur ||| getimageheight	count=1
function_name	logarithme base-10 pour ||| log10	count=1
function_name	zéro) de l'itérateur ||| position	count=1
function_name	mémoires utilisées par la ||| destroy	count=1
function_name	serveur ldap [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] l'attribut dans ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] déclarant ||| get [function_name]	count=2
function_name	post ||| post	count=1
namespace	défaut $this ||| directory	count=2
function	un shell [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	de la dernière occurrence ||| string $haystack	count=1
namespace	plus de ||| mongocursorinterface	count=1
namespace	observateur evidle et démarre ||| evidle	count=1
arg_pair	par msglist ||| string $msglist	count=1
function	le facteur [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function	[function_name_1] dans la ||| [function_name_1] [arg_pair_2]	count=1
namespace	ne doit ||| pharfileinfo	count=2
return	la dernière ||| int	count=1
function_name	crée un ||| ifx create	count=2
arg_pair	fichier filename et retourne ||| string $filename bool $process_sections	count=1
arg_pair	la classe class en ||| string $class	count=1
return	un arbre ||| sdo_das_xml_document	count=1
arg_pair	envoie la requête query ||| string $query resource $link_identifier	count=1
function_name	plus de ligne ||| fetch column	count=1
function_name	informations de connexion ||| cubrid connect	count=1
function_name	le type du champ ||| field type	count=1
function_name	pour le neurone ||| set	count=1
function_name	contenant [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	définit l'image à ||| set	count=1
function_name	une ||| pdf setlinecap	count=1
return	les ||| string	count=4
function_name	définit à true ||| set	count=1
function_name	elle prend ||| set	count=1
arg_pair	dans le système de ||| string $pathname	count=1
function	[function_name_1] requête ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	gauche ||| array $a array $left	count=1
function_name	fuseau horaire correspondant ||| time zone	count=1
return	en comptant la ||| bool	count=3
arg_pair	assoc_array dans [arg_pair_2] ||| [arg_pair_2] array $assoc_array [arg_pair_1]	count=1
function_name	instance inotify ||| inotify init	count=1
function_name	à la position indiquée ||| newt draw root text	count=1
function_name	extrait une ligne ||| line	count=1
function_name	retourne un tableau qui ||| array	count=2
function_name	valeurs soit conservée ||| arsort	count=1
arg_pair	assoc_array dans la ||| int $options	count=1
arg_pair	correspondant ||| int $type	count=1
function_name	[function_name_1] l'archive zip ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $xmlresponse [arg_pair_2]	count=1
function_name	recherche sur ||| eregi	count=1
function_name	utilisée sur le ||| compressionmethod	count=1
function_name	du profile de ||| getimageprofile	count=1
arg_pair	dans le système de ||| string $pathname int $mode	count=1
function_name	width ||| setlinewidth	count=1
function_name	des informations issus des ||| multi info read	count=1
namespace	travaux ||| gearmanjob	count=1
function_name	vérifie si ||| query is select	count=1
function_name	être appelé une fois ||| set	count=1
function_name	l'entrée ||| char	count=1
arg_pair	ne sont pas attrappées ||| string $cb	count=1
arg_pair	texte et ||| resource $pdfdoc string $text	count=1
return	récupère [return] ||| [return]	count=3
return	des caractères lors ||| int	count=1
function_name	version du client utilisé ||| client info	count=1
namespace	imagick a ||| imagick	count=1
function_name	l'url complète de la ||| get request url	count=1
return	retourne le ||| string	count=2
function_name	la taille du fichier ||| size	count=1
function_name	d'attente s'interrompt ||| poll time	count=1
function_name	session ||| in session	count=2
function_name	du script en cours ||| include	count=1
function_name	analyse ||| rfc822 parse addresses	count=2
function_name	fork dans ||| fork	count=1
function_name	vérifie si un script ||| is script	count=1
arg_pair	cette fonction ||| string $string	count=1
function_name	cette fonction crée ||| create	count=3
function_name	sortir [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	une cartographie en cache ||| wincache	count=1
function_name	mnogosearch ||| udm get res	count=2
function_name	l'endroit ||| error log	count=2
function_name	champ dans ||| field	count=1
arg_pair	les données ||| array $authns	count=1
function_name	lors de la ||| end	count=1
function_name	sinus ||| sin	count=1
return	parallèle d'autres tâches ||| gearmantask	count=2
arg_pair	les paramètres ||| int $day int $year	count=1
function	autocommit de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	d'un nouvel ||| int $x int $y	count=1
function_name	tous les composants ||| newt	count=1
function_name	retourne le message d'erreur ||| error	count=3
function_name	lit la qualité de ||| quality	count=1
arg_pair	à ||| string $prefix	count=1
function_name	pour coloriser ||| set highlight highlight	count=2
function_name	de succès ou ||| cubrid	count=1
return	un champ de ||| int	count=2
function_name	lot ||| size	count=1
namespace	déplace toutes ||| eventbuffer	count=1
function_name	pour tracer la ||| maxdb debug	count=1
function_name	le prochain élément n'existe ||| next	count=1
function_name	méthode détermine si ||| is	count=1
function_name	message d'erreur [function_name_2] ||| [function_name_2] [function_name_1]	count=15
function_name	exe ou auto-exécutable) ||| write exe	count=1
function_name	strpos() ||| strrpos	count=1
arg_pair	variable peut être ||| bool $syntax_only	count=1
function_name	qui avaient été ajoutés ||| newt	count=1
function_name	[function_name_1] le chemin ||| [function_name_1] [function_name_2]	count=1
function_name	auparavant [function_name] chiffré et ||| [function_name]	count=1
arg_pair	le fait que ||| int $minute	count=1
namespace	si le noeud courant ||| tidynode	count=1
function_name	associé ||| sybase	count=1
arg_pair	un niveau de ||| resource $p float $g	count=2
return	courant est un ||| bool	count=1
function_name	si une fonction est ||| is	count=1
function_name	script en cours ||| include path	count=1
function_name	retourne le ||| introspection get	count=1
function	[function_name_1] ligne/hors ||| [arg_pair_2] [function_name_1]	count=3
function_name	dernier identifiant autogénéré ||| db2 last insert	count=1
function_name	survenue sur le socket ||| socket error	count=1
function_name	[function_name_1] [function_name_2] et ||| [function_name_2] [function_name_1]	count=1
return	miniatures de l'image ||| bool	count=1
function_name	avec vérification des ||| udiff assoc	count=1
arg_pair	la seconde contient ||| mongodb $db string $prefix	count=1
function_name	connexion avec ||| connect	count=1
function_name	nombre de colonnes ||| num	count=1
function_name	en parallèle d'autres ||| task background	count=1
function_name	tests sur l'index compare ||| array uintersect assoc	count=1
function_name	commence une unité de ||| begin	count=1
function_name	quantité de mémoire ||| usage	count=1
arg_pair	seul depuis les données ||| string $optlist	count=1
function_name	en-têtes exif des images ||| exif	count=1
function_name	fourni ||| uudecode	count=1
function	[function_name_1] fichier filename ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	courante du ||| resource $psdoc	count=1
function_name	pour le fichier mpeg ||| id3v2 tag	count=1
function_name	message d'erreur de la ||| get error message	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=2
function_name	cours ||| include path	count=2
function_name	la fonction d'activation ||| fann set activation	count=3
namespace	d'un ||| samconnection	count=1
function_name	tâche en priorité basse ||| do low	count=1
return	serveur le ||| mongocursor	count=1
arg_pair	requête ||| string $query string $index	count=1
arg_pair	dans le ||| int $encoding int $linebreak	count=1
function_name	serveur mysql ||| mysql	count=2
arg_pair	fichiers ||| int $pri	count=1
return	crée un groupe ||| resource	count=1
namespace	utilisée pour définir ||| mongolog	count=1
arg_pair	un document ||| string $src	count=1
arg_pair	connexion existante à la ||| int $close_type	count=1
function_name	les drapeaux à utiliser ||| flags	count=1
function_name	sur le dossier d'archives ||| zip entry	count=1
namespace	sur ||| splpriorityqueue	count=1
arg_pair	sybase_fetch_array() avec une ||| mixed $object	count=1
function_name	génère une nouvelle csrcertificate ||| new	count=1
arg_pair	ré-initialise une session existante ||| string $save_path string $name	count=1
rest	un tableau [function_2] ||| [function_2] [return_1]	count=4
function_name	le et logique ||| and	count=1
function_name	condition pour ||| condition	count=1
function_name	améliore le contraste d'une ||| contrast	count=1
function_name	dans un ||| uudecode	count=1
return	au chemin ||| bool	count=4
arg_pair	établir ||| string $dbname string $userid	count=1
arg_pair	et la sauvegarde ||| resource $conn_identifier string $oid	count=1
function_name	de déboguage ||| debug	count=3
function_name	déplace sur le prochain ||| next	count=1
function_name	les [function_name_2] ||| [function_name_2] [function_name_1]	count=15
arg_pair	y ||| float $y	count=1
function_name	minimale du document utilisée ||| facet enum cache min	count=1
function_name	couleurs de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	méthode est ||| call	count=1
function_name	tous les ||| uudecode all	count=1
function_name	courant est ||| is	count=1
function_name	retourne l'itérateur interne courant ||| get inner iterator	count=1
function_name	champ field donné de ||| oci field	count=1
function_name	fait qu'elle ||| proc	count=1
function_name	forme en incluant ||| form destroy	count=1
function_name	s'interrompt ||| set max poll time	count=2
function_name	dans la session ||| dict is in session	count=1
function_name	une fonction est ||| is	count=1
function_name	serveur associé à l'identifiant ||| sybase	count=1
return	le dossier d'archives spécifié ||| string	count=1
function_name	retourne un objet ||| get children	count=1
function	construit un [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=6
function_name	dernier ||| db2 last insert id	count=2
function_name	un fichier exe ||| write exe footer	count=1
arg_pair	chaîne input ||| string $input	count=1
return	classe ou de la ||| float	count=1
function_name	statistiques des ||| stats	count=1
function_name	fonction d'activation pour le ||| activation	count=1
function_name	[function_name_1] sous la ||| [function_name_2] [function_name_1]	count=3
arg_pair	une valeur ||| string $name mixed $value	count=1
function_name	temporaire ||| all	count=1
arg_pair	[arg_pair_1] service daemon ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	nombre de champs ||| dbase numfields	count=1
function_name	sur ||| immortal	count=1
function_name	dernier identifiant ||| db2 last insert	count=1
arg_pair	buf via le ||| string $buf	count=1
arg_pair	excepté le ||| int $month	count=1
function	[function_name_1] à gearmanclient::setstatuscallback() ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	une chaîne ||| string $str	count=1
function_name	récupère le nombre ||| get field count	count=1
function_name	oracle statement ||| oci	count=1
function_name	les lignes de la ||| dbplus rzap	count=1
function_name	sera démarré lors ||| ps add launchlink	count=1
function_name	modifie la valeur ||| include path	count=1
return	dans les opérations de ||| array	count=1
namespace	un identifiant ||| domdocument	count=1
arg_pair	une chaîne ||| string $from	count=1
function_name	champ ||| oci field	count=1
namespace	pour la page ||| harupage	count=2
function_name	modifie les paramètres ||| params	count=2
function_name	à détruire un ||| shmop delete	count=1
function_name	le délai maximal ||| query timeout	count=1
function_name	n'a plus de ||| dead	count=1
function_name	textes ||| ereg	count=1
return	le ||| mongodb	count=1
function_name	décompressée d'une ||| packed	count=1
namespace	le curseur ||| mongocursor	count=1
arg_pair	paramètres passés sont ||| int $minute	count=1
arg_pair	vert et bleu d'une ||| int $b	count=1
function_name	utilisée pour ||| set	count=4
function_name	tant ||| event	count=1
function_name	lit le ||| mssql get	count=1
namespace	courant ou pour appeler ||| function	count=1
function_name	fonction cubrid_current_oid() est ||| cubrid current oid	count=1
function_name	aux fins [function_name] déboguage ||| [function_name] echo	count=1
function_name	définit ||| set action	count=1
return	tri qui place ||| void	count=1
namespace	des données ||| pharfileinfo	count=1
namespace	mémoires utilisées par la ||| function	count=1
function_name	xml ||| load string	count=2
function_name	ferme le ||| crack closedict	count=1
arg_pair	un fichier de la ||| int $operation	count=1
arg_pair	destinataires cc et ||| string $cc	count=1
function_name	json de ||| json encode	count=1
return	le fichier ||| bool	count=1
namespace	ainsi que ceux de ||| pharfileinfo	count=1
function_name	sqlite identifiée par ||| sqlite	count=1
function_name	db++ ||| dbplus	count=2
arg_pair	lignes par brush ||| resource $image resource $brush	count=1
function_name	après un ||| immortal	count=1
namespace	de la [namespace] en ||| [namespace]	count=2
function_name	les regroupements distincts ||| group distinct	count=1
arg_pair	les définitions de ||| array $config	count=1
return	caractères passée en argument ||| string	count=1
namespace	méthode ||| function	count=1
arg_pair	classe class en ||| string $class	count=1
arg_pair	un bloc de texte ||| string $text	count=1
function_name	spécifique au vendeur à ||| put vendor	count=1
function_name	sous ||| string	count=1
arg_pair	le paramètre oid de ||| resource $conn_identifier string $oid	count=1
function_name	analyse ||| mb parse	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] mlt [function_name_1]	count=4
function_name	de l'itération ||| iteration	count=1
function_name	à cocher ||| newt checkbox	count=1
function_name	similaire ||| close	count=1
function_name	avec ||| images	count=1
arg_pair	le texte text aux ||| string $text	count=1
arg_pair	position de [arg_pair_2] ||| [arg_pair_2] int $offset [arg_pair_1]	count=1
arg_pair	depuis une chaîne d'une ||| string $str	count=1
function_name	variable donnée est ||| is	count=4
namespace	fichier spécial ||| function	count=1
function_name	incluant les ||| destroy	count=1
function_name	portion de haystack ||| mb strrichr	count=1
return	les entrées des ||| array	count=1
arg_pair	crée ||| int $major	count=1
function_name	retourne le ||| get state	count=1
arg_pair	les attributs du ||| resource $fd array $options	count=1
function_name	seule la ||| ps open	count=1
namespace	en argument ||| function	count=1
arg_pair	de rappel si le ||| mixed $callback	count=1
function_name	la méthode oauthprovider::callconsumerhandler() ||| consumer handler	count=1
function_name	statut de la tâche ||| background	count=2
function_name	objet ainsi que ||| pg fetch object	count=1
arg_pair	utilisée pour insérer ||| string $attr_name int $index	count=1
function_name	cette méthode est ||| call	count=1
function_name	la réponse du serveur ||| response	count=1
function_name	contenant les tailles de ||| sizes	count=1
function_name	le code javascript ||| doc	count=1
return	de l'image ||| bool	count=2
function_name	nombre ||| cubrid num	count=1
namespace	l'objet imagickpixel sous la ||| imagickpixel	count=1
return	d'autres termes ||| int	count=1
arg_pair	rename() ||| string $path_to	count=1
function_name	d'apparition [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	en tant que gestionnaire ||| event handler	count=1
function_name	protège une chaîne ||| escape string	count=1
function_name	noms par défaut ||| default namespace	count=2
function_name	du ||| buffer	count=1
arg_pair	à une source de ||| string $password int $cursor_type	count=1
namespace	excepté le fait que ||| function	count=1
arg_pair	passés sont ||| int $day	count=1
return	pour les archives ||| object	count=1
function_name	associatif qui contient la ||| assoc	count=1
function_name	pour ||| construct	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] object resource $result [arg_pair_2]	count=6
function_name	remplace les textes ||| mb ereg replace	count=1
namespace	à surveiller ||| mongolog	count=1
function_name	sur le dossier ||| entry	count=1
function_name	rappel pour readline ||| readline callback handler	count=1
function_name	[function_name] mime-type à ||| image type to [function_name]	count=2
function_name	remplace les ||| replace record	count=1
function_name	repère ||| strpos	count=1
return	antislashs devant ||| string	count=1
function_name	le document source ||| merge	count=1
function_name	[function_name_1] paramètre facet.date.hardend ||| [function_name_2] [function_name_1]	count=1
namespace	été remplacées par ||| function	count=2
function_name	la position ||| ps	count=1
function_name	liens ||| pdf set border	count=1
function_name	récupère [function_name_2] ||| [function_name_1] font [function_name_2]	count=3
function_name	[function_name_1] taux ||| [function_name_1] [function_name_2]	count=1
function_name	retourne des ||| get internal	count=2
arg_pair	de [arg_pair] ||| [arg_pair]	count=1
function	[function_name_1] à gearmanclient::setstatuscallback() ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	lit ||| resource $statement mixed $field	count=1
function_name	méthode retourne ||| get	count=3
arg_pair	erreurs seront historisées ||| string $log_file	count=1
function_name	[function_name_1] statut ||| solrresponse string [function_name_1] http [function_name_2]	count=1
arg_pair	considère array comme une ||| array $array	count=1
arg_pair	méthode est ||| string $function_name	count=1
function_name	retaille et ||| chop	count=1
return	dans [return] ||| [return]	count=1
function_name	la clé ||| key	count=5
function_name	les ressources mémoires utilisées ||| newt form destroy	count=1
function_name	par thread ||| thread	count=1
namespace	fonction permet de basculer ||| function	count=1
function_name	schéma d'entrelacement de ||| get interlace scheme	count=1
arg_pair	paramètre str dans le ||| int $length	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] resource	count=8
arg_pair	hyperlien à une ||| float $urx	count=1
arg_pair	date ||| string $format	count=1
arg_pair	un ||| int $key	count=1
arg_pair	si l'accès ||| bool $nodns	count=1
arg_pair	un autre format ||| int $compression	count=1
return	un ||| bool	count=16
function_name	planéité ||| flatness	count=1
function_name	exception) ||| send fail	count=1
function_name	une paire de sockets ||| stream socket pair	count=1
function_name	utilisée sur le ||| zip entry compressionmethod	count=1
function_name	du document ||| enum cache	count=1
arg_pair	une fonction définie ||| string $name mixed $step_callback	count=1
return	cette méthode ||| string	count=1
namespace	s'agit d'une requête ajax ||| yaf_request_http	count=1
arg_pair	de la requête query ||| string $query	count=1
function_name	devrait être ||| by	count=1
function_name	[function_name] appeler lorsqu'un ||| [function_name] workload	count=1
function_name	définir l'identifiant de ||| id	count=1
arg_pair	efface ||| resource $ftp_stream	count=1
function_name	afin qu'elle tienne ||| fit	count=1
function_name	[function_name_1] attributs ||| [function_name_1] [function_name_2]	count=1
arg_pair	queues ||| resource $hconn	count=1
namespace	clé et ||| arrayobject	count=1
function_name	représenté ||| crack closedict	count=2
function_name	ajoute un filtre de ||| image	count=1
function_name	l'événement de buffer ||| buffer event	count=3
function_name	un curseur typiquement ||| batch size	count=1
namespace	vt_date ou similaire ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] key [function_name_1]	count=2
function_name	crée un nouvel itérateur ||| iterator	count=1
return	lot ||| mongocommandcursor	count=1
function_name	d'activation pour la couche ||| set activation function output	count=1
return	l'objet sous la ||| string	count=1
function_name	cette [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	données du premier ||| first	count=1
arg_pair	fixe la position ||| float $x	count=1
function_name	est itérable ||| is iterateable	count=2
arg_pair	avec la ||| resource $image	count=2
function_name	blob ibase ||| ibase blob	count=4
function_name	dans un ||| all	count=1
arg_pair	un message d'erreur ||| string $message	count=1
function_name	code de la réponse ||| response code	count=1
function_name	lit ||| shmop read	count=2
function_name	[function_name_1] nom ||| [function_name_1] tag [function_name_2]	count=1
function_name	avec vérification des index ||| array udiff assoc	count=1
function_name	d'archives spécifié ||| zip entry compressionmethod	count=1
return	la brosse ||| bool	count=1
function_name	que file_get_contents() [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	récupère la largeur ||| get text width	count=2
function_name	lit un [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	les options associées ||| flags	count=1
namespace	vérifie si le ||| mongocursorinterface	count=1
function_name	dossier d'archives spécifié par ||| zip entry	count=1
function_name	données dns associées à ||| dns get	count=1
function_name	en attente) depuis ||| sys getloadavg	count=1
function_name	l'espace [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	est disponible ||| available	count=1
function_name	month ||| cal days in month	count=2
arg_pair	l'activation de la ||| int $condition_type mixed $condition	count=1
function_name	tangente pour chaque ||| trader tan	count=1
namespace	paramètres ||| function	count=1
arg_pair	l' oid ||| string $oid	count=4
function_name	le statut ||| status	count=6
function_name	retourne la [function_name_2] ||| [function_name_2] [function_name_1]	count=41
return	des caractères lors de ||| int	count=1
function_name	pour ||| create dbref	count=1
return	traitement ||| bool	count=1
return	pile et ||| int	count=1
arg_pair	caractères lors de ||| string $pattern	count=1
function_name	fonction déplace ||| cubrid field seek	count=1
function_name	remplit le chemin ||| ps fill	count=1
function_name	ne doit être utilisée ||| metadata	count=1
arg_pair	target avec ||| string $target	count=1
return	appelé ||| void	count=2
namespace	la méthode ||| ev	count=2
function_name	sélectionne une ||| mysql db	count=1
function_name	avaient été ajoutés ||| destroy	count=1
function_name	variable associée ||| ucache cas	count=1
function_name	interne ||| get iterator index	count=1
return	fichier pour une ||| string	count=1
return	la première ||| mongodb	count=1
function_name	l' eventbuffer courant ||| buffer	count=1
function_name	série de documents supérieures ||| dead	count=1
function_name	la variable ||| var	count=1
arg_pair	de size ||| int $size	count=1
function_name	les en-têtes de réponse ||| response headers	count=1
arg_pair	contenu avec ||| string $blockname int $contents	count=1
function_name	memcached::prepend() mais la ||| prepend by	count=1
namespace	l'objet a terminé son ||| collectable	count=1
arg_pair	supprime les espaces ||| string $str string $character_mask	count=1
arg_pair	retourne une ressource de ||| string $connection_string	count=1
arg_pair	moifie un attribut dans ||| array $values bool $mva	count=1
function_name	pour ||| metadata	count=1
function_name	dans [function_name] ||| [function_name] ucache	count=1
return	serveur de ||| bool	count=1
function_name	la portée de ||| lookup namespace	count=1
arg_pair	liste des filtres courante ||| string $attribute array $values	count=1
namespace	de données représentée par ||| function	count=1
return	fonction rewinddir() seul le ||| void	count=1
function_name	fonction glob() ||| glob	count=1
arg_pair	statue un lien symbolique ||| resource $sftp string $path	count=1
function_name	s'interrompt si ||| set max	count=1
function_name	testant les erreurs de ||| runkit	count=1
function_name	considère array comme ||| array	count=1
function_name	[function_name_1] la largeur ||| [function_name_1] image [function_name_2]	count=1
namespace	la base de données ||| function	count=1
return	fourni par ||| bool	count=1
return	pour toutes les classes ||| string	count=1
arg_pair	message d'erreur ||| string $message int $message_type	count=1
arg_pair	paramètre str à la ||| mixed $fd string $str	count=1
function_name	qui avaient ||| newt	count=1
function_name	l'identifiant de [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
arg_pair	les colonnes et ||| resource $connection_id	count=1
function_name	de ||| end	count=2
arg_pair	domaine courant ||| string $domain string $msgid1	count=1
function_name	[function_name_1] transaction en ||| [function_name_2] [function_name_1]	count=4
arg_pair	julien en ||| bool $hebrew	count=1
function_name	retourne la trace de ||| get trace	count=1
function_name	les données du ||| add buffer	count=1
function_name	erreurs soap ||| soap fault	count=1
function_name	retourne ||| get highlight	count=1
function_name	de preg_replace() hormis ||| preg	count=1
function_name	local ||| set local	count=1
arg_pair	qui est au format ||| resource $connection string $table_name	count=1
function_name	[function_name_1] de l'octet ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] requête ||| [function_name_1] [arg_pair_2]	count=1
function_name	filtre entier ||| filter	count=2
namespace	pile ||| function	count=1
function_name	l'intensité [function_name] chaque pixel ||| threshold [function_name]	count=1
function	statut en [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	0.0 ||| hsl	count=1
function_name	de type strpos() ||| mb strrpos	count=1
function_name	phar ||| valid phar filename	count=1
arg_pair	identique ||| string $pattern	count=1
function_name	jeu de caractères courant ||| iconv set encoding	count=1
function_name	le nombre de ||| ifx num fields	count=1
arg_pair	mktime() excepté ||| int $day int $year	count=1
return	9 miniatures de l'image ||| bool	count=1
function_name	translation de l'origine ||| translate	count=1
arg_pair	assoc_array dans [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	du texte ||| ps show	count=1
namespace	si ||| splfixedarray	count=1
function_name	[function_name_1] requête principale ||| [function_name_2] [function_name_1]	count=1
return	flux de pixels ||| string	count=1
return	pas ||| string	count=1
function_name	le délai ||| delay	count=1
arg_pair	par le paramètre callback ||| mixed $parameter	count=1
function_name	avec les ||| proc	count=1
function_name	fonction ré-initialise toutes ||| reset	count=1
function_name	de lignes ||| rows	count=9
namespace	à la fonction ||| domdocument	count=1
function_name	[function_name_1] documents similaires ||| [function_name_2] [function_name_1]	count=2
function_name	courante [function_name_2] ||| [function_name_1] text [function_name_2]	count=1
function_name	détruit ||| destroy	count=4
arg_pair	cartes ||| string $threshold_map int $channel	count=1
namespace	algorithme de tri ||| arrayobject	count=1
arg_pair	la surveillance d'une ressource ||| resource $fam resource $fam_monitor	count=1
function_name	matrice de transformation ||| matrix	count=2
namespace	tout ou ||| function	count=1
function_name	retourne la date ||| get	count=1
function_name	du cache pour les ||| wincache	count=1
arg_pair	changé en la valeur ||| int $type mixed $value	count=1
function_name	crée un [function_name_2] ||| [function_name_1] [function_name_2]	count=4
namespace	de sortie de la ||| gmagick	count=1
arg_pair	le ||| int $day int $year	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $link_identifier [arg_pair_2]	count=2
function_name	la durée ||| include	count=1
namespace	boucle par défaut ||| ev	count=3
function_name	la taille [function_name_2] ||| [function_name_2] key [function_name_1]	count=2
function_name	extension à utiliser ||| extension	count=1
arg_pair	grâce à gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
function_name	cubrid_connect_with_url() est utilisée pour ||| with url	count=1
function_name	[function_name_1] lignes ||| [function_name_2] [function_name_1]	count=13
function	un tableau php var_array [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
arg_pair	résultat dans un ||| string $dest int $flags	count=1
function_name	un tableau ||| to array	count=1
function_name	en-têtes de tous ||| headers	count=1
function_name	meilleur encodage pour le ||| mailparse determine best xfer encoding	count=1
namespace	la forme en incluant ||| function	count=1
function_name	nombre de ||| mysql num	count=2
arg_pair	la chaîne input ||| string $input	count=1
arg_pair	exécute une requête ||| resource $query mixed $bind_arg	count=1
function	efface [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	elle prend plus de ||| set max poll time	count=1
function_name	statistiques [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	[arg_pair_1] données microsoft ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	include_path pour la ||| function	count=1
return	qui avaient été ajoutés ||| void	count=1
function_name	connexion ||| connect uri	count=2
function_name	incluant ||| newt form destroy	count=2
function_name	trace ||| trace as string	count=1
function_name	blanc ||| white	count=1
function_name	contient le contenu des ||| construct	count=1
return	le contenu courant ||| string	count=1
arg_pair	: la première contient ||| string $prefix	count=1
function_name	l'échelle les sorties dans ||| scale output	count=1
return	caractères ||| sdo_das_xml_document	count=1
return	réalisation de la ||| int	count=2
function_name	prochain élément n'existe pas ||| next	count=1
function_name	message [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	du ||| show	count=2
function_name	[function_name] nombre maximal ||| [function_name] highlight	count=2
function_name	recule ||| prev	count=1
return	les informations de ||| object	count=2
function_name	de l'archive zip ||| archive	count=1
function_name	agent snmp ||| snmp2	count=1
function_name	de connexion persistante en ||| pconnect	count=1
namespace	imagickpixel sous la ||| imagickpixel	count=1
function_name	ou dans le référentiel ||| svn	count=1
namespace	un ||| domdocument	count=3
function_name	la connexion fournie ||| fbsql database	count=1
function_name	une classe est instanciable ||| is instantiable	count=1
function_name	retourne ||| memory get	count=2
function_name	un test sur un ||| test	count=1
return	en chaîne de caractères ||| string	count=1
function_name	dernière tentative ||| connect errno	count=2
function_name	signature sha-256 ||| getimagesignature	count=1
arg_pair	resolv.conf et y ||| int $flags	count=1
function_name	fichier fourni et extrait ||| mailparse	count=1
function_name	retourne la racine ||| get root data object	count=1
arg_pair	basé sur des ||| string $src string $diff	count=1
function_name	retourne ||| id3 get frame	count=2
return	retourne un tableau contenant ||| array	count=2
function	readline [arg_pair_2] ||| [function_name_1] callback handler install [arg_pair_2]	count=2
arg_pair	dans ||| resource $pdfdoc	count=1
function_name	le dernier ||| db2 last	count=1
namespace	antislashs devant ||| function	count=1
arg_pair	représentant une ||| resource $stmt int $row_number	count=1
function_name	les ||| set error	count=1
function_name	[function_name_1] du pattern ||| [function_name_1] [function_name_2]	count=1
function_name	sommaire de ||| imap fetch overview	count=1
function_name	décompressée d'une entrée d'une ||| unpacked	count=1
function_name	libère toutes ||| free stmt	count=1
namespace	une requête soap appelle ||| soapserver	count=1
function_name	fonction récupère ||| get	count=1
function_name	zend pour affichage ||| debug zval dump	count=1
function_name	les données ||| cubrid send	count=1
arg_pair	avec [arg_pair] et ||| [arg_pair]	count=1
function_name	la connexion donnée ||| yaz	count=1
arg_pair	un segment ||| mixed $length	count=1
arg_pair	montage d'un périphérique externe ||| string $pharpath string $externalpath	count=1
arg_pair	retourne la position ||| string $encoding	count=1
function_name	portée de ||| lookup	count=1
function_name	type id ||| set id	count=3
arg_pair	chaîne str après avoir ||| string $str string $character_mask	count=2
function_name	memcached::prepend() mais ||| prepend by key	count=1
namespace	script php d'un serveur ||| samconnection	count=1
function_name	défini l'époque maximale candidate ||| fann set cascade max cand	count=1
arg_pair	sur ||| resource $session	count=1
return	teste le statut d'une ||| int	count=1
arg_pair	d'une fonction à l'exécution ||| string $function	count=1
function	[function_name_1] les paires ||| [function_name_1] create string $pathname [arg_pair_2]	count=3
function_name	temporisation de ||| ob	count=1
return	session en ||| bool	count=1
function_name	retourne la hauteur ||| imagesy	count=1
function_name	qualité [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	valeur d'un attribut par ||| attribute	count=1
arg_pair	le flag spécifié ||| string $flag int $options	count=1
arg_pair	dans ||| int $value	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] high [function_name_2]	count=7
arg_pair	convertit left et right ||| mixed $right	count=1
function_name	la durée ||| set include	count=1
function_name	le dernier ||| pg last	count=1
function_name	de caractères passée en ||| db2 escape	count=1
function_name	le long des ||| shearimage	count=1
arg_pair	la largeur de src_w ||| int $src_w	count=1
namespace	l'objet imagick et ||| imagick	count=1
arg_pair	à définir la valeur ||| mixed $value	count=1
function_name	d'attente s'interrompt si elle ||| eio set max poll	count=1
function_name	un curseur ||| batch size	count=1
function	compare [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	données ||| array	count=1
arg_pair	soit terminé, ||| int $status int $options	count=1
arg_pair	sur ||| string $string	count=1
return	à l'aide de deux ||| mongodb	count=1
arg_pair	est ||| string $string	count=1
function_name	mime d'un fichier ||| mime	count=1
function_name	un [function_name] ||| [function_name] primary	count=2
arg_pair	priorité ||| int $priority	count=1
arg_pair	par object_id ||| string $object_id string $type	count=1
function	[function_name_1] utiles ||| [function_name_1] [arg_pair_2]	count=2
function_name	la première fois) ||| end iteration	count=1
function_name	termine ||| fam cancel	count=1
function_name	fonction crée une ||| create attribute	count=1
arg_pair	grand degré ||| array $pipes string $cwd	count=1
arg_pair	needle dans la ||| string $needle	count=2
arg_pair	envoyés par ||| int $format	count=1
function_name	définit la police ||| set font	count=3
arg_pair	un espace de ||| string $namespaceuri string $qualifiedname	count=1
return	identifié par output en ||| bool	count=1
function_name	prochain ||| next	count=7
arg_pair	l'évènement bevent à ||| resource $bevent	count=1
function_name	dans un fichier ||| mailparse uudecode	count=1
function_name	vérifie si ||| is select	count=1
function	[function_name_1] de lecture ||| [function_name_1] [arg_pair_2]	count=6
function_name	configuration include_path ||| path	count=1
return	entrée ||| int	count=1
function_name	récupère la couleur courante ||| get gray fill	count=1
namespace	retourné par la ||| function	count=1
function_name	toutes les valeurs ||| ldap get values	count=2
function	composants [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	jour ||| px update	count=1
namespace	champs colonnes de ||| function	count=1
function_name	du texte à la ||| ps	count=1
namespace	sein ||| pharfileinfo	count=1
function_name	décrémente ||| decrement	count=1
function_name	si le socket est ||| is	count=1
function_name	sqlite identifiée par ||| sqlite close	count=1
return	effectue une capture de ||| resource	count=1
function_name	copie un fichier interne ||| copy	count=1
function	définit les [function_name_1] [arg_pair_2] le ||| bool [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] un ||| [function_name_1] [arg_pair_2]	count=4
function_name	les caractères brutes des ||| terms return raw	count=1
arg_pair	du ||| resource $psdoc	count=2
function_name	sélectionne ||| select db	count=6
function_name	appeler lorsqu'une tâche est ||| created	count=1
function_name	propriété [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de rappel pour ||| set callback	count=1
function_name	représentation yaml de ||| yaml emit file	count=1
arg_pair	de flux de texte ||| string $text	count=1
return	ajoutés à ||| void	count=1
function_name	fonction d'activation pour la ||| activation function	count=1
namespace	xslt dans les ||| xsltprocessor	count=1
function_name	préparée stmt ||| mysqli stmt	count=1
arg_pair	terminé, ou ||| int $options	count=1
function_name	d'échelle de sortie pour ||| set output scaling	count=1
namespace	validité d'un sous-itérateur ||| multipleiterator	count=1
function_name	mime kopfzeile dans l'exemple ||| iconv mime encode	count=1
function_name	temporisation ||| ob end flush	count=1
function_name	termine la souscription ||| imap unsubscribe	count=1
function_name	d'un champ à un ||| fbsql field	count=1
function_name	le logarithme base-10 ||| log10	count=1
arg_pair	connexion dans le ||| int $to_neuron float $weight	count=1
function_name	fichiers encodés ||| uudecode all	count=1
arg_pair	appeler ||| mixed $arg	count=1
function_name	un dictionnaire à ||| enchant	count=1
function_name	configuration de ||| config	count=1
return	variables ||| int	count=1
arg_pair	envoie la requête query ||| string $query	count=1
arg_pair	l'argument offset et ||| int $offset	count=1
arg_pair	jeu de résultats result ||| resource $result int $index	count=1
function_name	effectue une ||| handle	count=1
function_name	généré ||| id	count=1
namespace	retourne tous les ||| solrparams	count=1
function_name	le termscomponent ||| terms	count=1
function_name	la levée du texte ||| text rise	count=1
namespace	retourne ||| sqlite3	count=2
function_name	suspend [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] existante suivant ||| [function_name_1] [function_name_2]	count=1
function_name	à ||| call	count=1
function_name	curseur utilisé ||| db2 cursor	count=1
function_name	lignes ||| rows	count=11
function_name	s'interrompt si elle prend ||| set max	count=1
function_name	survenue sur le socket ||| last socket	count=1
function_name	action ||| action	count=1
function_name	une image pour ||| open image	count=1
arg_pair	identifiant packet_id ||| resource $packet_id	count=1
function	d'un champ [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	le dictionnaire représenté par ||| bool	count=1
function_name	met l'octet ||| gmp clrbit	count=1
function_name	sur le document source ||| merge	count=1
arg_pair	fichiers ||| mongodb $db	count=2
arg_pair	pour établir l'environnement pour ||| string $dbname string $userid	count=1
function_name	la version curl ||| curl version	count=2
function_name	tentative ||| db2 conn	count=1
namespace	les informations [namespace] de ||| [namespace]	count=1
return	personnalisées dans ||| void	count=1
function	[function_name_1] colonnes et ||| [arg_pair_2] [function_name_1]	count=4
function_name	spécifiée ||| images	count=1
function_name	toutes les transactions ||| commit	count=1
function_name	tracer ||| maxdb	count=1
return	plusieurs fonctions en ||| bool	count=1
function_name	include_path pour ||| path	count=1
function_name	radius consiste ||| radius	count=1
arg_pair	haystack et retourne la ||| bool $part string $encoding	count=1
function_name	liste contient encore des ||| valid	count=1
function_name	la couleur courante ||| gray stroke	count=1
function_name	les coordonnées spécifiées ||| imagefilledellipse	count=1
function_name	les liens ajoutés ||| set border dash	count=1
return	ou ||| bool	count=1
arg_pair	pour insérer un ||| string $attr_name	count=1
function_name	sélectionne la ||| maxdb select db	count=1
function_name	a un fils ||| has children	count=1
function_name	toutes les lignes ||| rzap	count=1
function_name	les fichiers encodés qui ||| mailparse uudecode	count=1
arg_pair	qu'elle ||| string $pattern string $string	count=1
function_name	ouvre le module ||| mcrypt module open	count=1
function_name	exécute la forme qui ||| form	count=1
namespace	conservant la ||| arrayobject	count=1
function_name	retourne la clé suivante ||| nextkey	count=1
function_name	bloc de mémoire ||| shmop delete	count=1
function_name	que ||| metadata	count=1
function_name	du texte en utilisant ||| text	count=1
arg_pair	fonction ||| int $year	count=2
function_name	de lignes à précharger ||| prefetch	count=1
function_name	la représentation ||| serialize	count=1
function_name	en arrière plan ||| do high	count=1
namespace	l'utilisateur spécifié par ||| function	count=1
function_name	les méta-données qui ||| metadata	count=1
arg_pair	service daemon est permis ||| string $address	count=1
function	[function_name_1] une requête ||| [function_name_1] resource $connection [arg_pair_2]	count=1
arg_pair	bloc de contenu avec ||| string $blockname int $contents	count=1
function_name	propriété spécifiée est définie ||| has property	count=1
function_name	une [function_name] de ||| is [function_name]	count=1
return	des données personnalisées dans ||| void	count=1
function_name	récupéré ||| use	count=1
function_name	les ressources mémoires ||| newt form destroy	count=1
function_name	fonction posix qui ||| posix	count=1
function_name	[function_name_1] enchant ||| [function_name_2] [function_name_1] describe	count=2
function_name	paramètres de l'objet ||| string	count=1
namespace	un document xml ||| domdocument	count=1
function_name	[function_name_1] colonne courant ||| [function_name_1] [function_name_2]	count=1
function_name	à [function_name] ||| add [function_name]	count=1
function_name	est utilisée pour fermer ||| lob2 close	count=1
function_name	le terme à partir ||| set terms upper bound	count=1
function_name	pente [function_name_1] [function_name_2] ||| [function_name_1] steepness [function_name_2]	count=1
function_name	qualité de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	utile uniquement avec ||| get	count=1
namespace	et sur ||| xmldiff\file	count=1
namespace	de la ligne ||| splfileobject	count=1
arg_pair	où ||| resource $errdat	count=1
arg_pair	l'uid uid ||| resource $imap_stream int $uid	count=1
namespace	syncsemaphore ||| syncsemaphore	count=2
function_name	[function_name_1] devient disponible ||| [function_name_2] [function_name_1]	count=2
namespace	flux de pixels ||| gmagick	count=1
namespace	à la ||| samconnection	count=1
arg_pair	dans le ||| int $encoding	count=1
function_name	configuration du cookie ||| cookie params	count=1
function_name	lit le numéro de ||| get	count=1
namespace	casse des caractères lors ||| function	count=1
function_name	appelé une fois ||| set	count=1
arg_pair	l'argument [arg_pair_2] ||| [arg_pair_2] int $pri [arg_pair_1]	count=1
arg_pair	le résultat ||| resource $result	count=1
function_name	minimum [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	paramètre object_id ||| string $object_id string $timeout	count=1
function_name	le système ||| fstatvfs	count=1
namespace	retourne le nombre de ||| function	count=1
function_name	extrait et ||| extract part	count=1
return	fois où la méthode ||| int	count=2
rest	une [function_2] ||| [return_1] [function_2]	count=2
function_name	labels utilisés ||| labels	count=1
function_name	[function_name_1] [function_name_2] et s'identifie ||| function resource [function_name_2] [function_name_1]	count=3
return	récupère le ||| string	count=2
function_name	[function_name_1] [function_name_2] d'une requête ||| [function_name_2] [function_name_1] resource $result int $index	count=2
function_name	[function_name] c'est un ||| mcrypt module is [function_name]	count=1
function_name	de sortie pour une ||| set output	count=1
function_name	calcule les paramètres ||| params	count=1
arg_pair	dans la base ||| resource $connection string $qualifier	count=1
function_name	qui [function_name] trop ||| [function_name]	count=1
namespace	qui ont été posés ||| function	count=1
function_name	taille décompressée ||| zip entry filesize	count=1
arg_pair	filename par l'utilisateur user ||| mixed $user	count=1
function_name	les options de ||| options	count=1
function_name	défini l'endroit où ||| log	count=1
return	que ceux ||| void	count=1
function_name	[function_name_1] vi ||| [function_name_2] [function_name_1]	count=2
function_name	cette méthode ||| get	count=1
return	et ajoute la chaîne ||| string	count=1
function_name	similaire à pclose() ||| proc close	count=1
return	les données concernant ||| array	count=1
arg_pair	à l'aide ||| mongodb $db string $prefix	count=1
function_name	système de ||| eio unlink	count=1
namespace	noeud ||| tidynode	count=2
function_name	représentation json ||| json encode	count=1
return	file d'attente ||| void	count=1
function_name	[function_name_1] informations sur ||| [function_name_1] [function_name_2]	count=2
function_name	la position ||| ps show	count=1
function_name	la fréquence ||| min term frequency	count=2
function_name	bytecode ||| bcompiler write	count=2
namespace	ou l'heure courante ||| function	count=1
arg_pair	le shell en ||| string $pattern	count=1
function_name	affectées par ||| ifx affected	count=1
return	retourne un ||| resource	count=2
arg_pair	indexé par nom de ||| int $row_number	count=1
function	autocommit [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de ||| eio	count=1
function_name	équivalent à memcached::prepend() ||| prepend	count=1
function_name	antislashs devant les ||| escape string	count=1
function_name	dimensions ||| string geometry	count=2
function_name	un guid binaire ||| mssql guid	count=1
function_name	donné ||| element by id	count=2
function_name	un nouveau filtre ||| set filter range	count=1
return	en utilisant les ||| bool	count=2
function_name	du paramètre facet.date.end ||| facet date end	count=1
arg_pair	depuis les données fournies ||| string $data string $optlist	count=1
function_name	une uri d'espace ||| elements by	count=1
arg_pair	un niveau de ||| resource $p	count=2
function_name	opération d'encodage/décodage json ||| json	count=1
return	de l' ||| bool	count=1
function_name	la couleur ||| image background color	count=1
function_name	les tailles de ||| get supported key sizes	count=1
arg_pair	la clé key existe ||| mixed $value	count=1
function	[function_name_1] structure ||| [function_name_1] train from callback [arg_pair_2]	count=1
function	[function_name_1] une erreur ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	document xml depuis ||| string $filename int $options	count=1
namespace	oauth ||| oauth	count=6
namespace	les ||| mongogridfs	count=2
function_name	ajoute une balise ||| bbcode add	count=1
function_name	de conteneur de chargement ||| set	count=1
function_name	décide ||| mysqlnd qc set is select	count=1
namespace	être utilisé pour ||| function	count=1
function_name	défini ||| set error	count=1
arg_pair	envoi un message d'erreur ||| string $message int $message_type	count=1
return	parcourt un lot d'objets ||| mongocommandcursor	count=1
arg_pair	de la propriété ||| string $property_name	count=1
function_name	maximale ||| set max	count=1
arg_pair	rouge vert [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
return	contraste de l'image en ||| bool	count=1
function_name	la fonction mktime() excepté ||| gmmktime	count=1
function_name	du thread ||| thread	count=2
arg_pair	de search [arg_pair_2] ||| [arg_pair_1] mixed $replace [arg_pair_2]	count=4
return	la taille initialie ||| returntype	count=1
arg_pair	cette méthode ||| bool $preserve_cloned_files	count=1
function_name	temporaire tous ||| all	count=1
function_name	libxml ||| libxml use	count=1
function_name	caractères passée en ||| db2 escape string	count=1
function_name	s'interrompt si ||| set max poll	count=1
function_name	[function_name_1] tri ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] maximale en ||| [function_name_2] [function_name_1]	count=8
function_name	définit la ||| set mlt	count=3
function_name	lier ||| bind	count=2
function_name	casse des caractères ||| eregi	count=1
return	qu'elle tienne [return] ||| [return]	count=4
function	mode [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	retourne ||| get size	count=2
function_name	celui de output_encoding ||| ob iconv handler	count=1
function_name	différences et sur ||| merge	count=1
namespace	lob oracle commençant ||| oci-lob	count=1
function_name	la miniature de ||| exif thumbnail	count=1
function_name	à partir ||| load	count=1
namespace	ev::run() ||| ev	count=2
namespace	de réalisation de la ||| gearmantask	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] add [arg_pair_2]	count=3
function_name	méthode d'entrelacement de l'image ||| image interlace scheme	count=1
return	extrait dans un ||| array	count=1
function_name	retourne l'identifiant du thread ||| thread id	count=1
function	[function_name_1] dans un ||| [function_name_1] bool $flag [arg_pair_2]	count=1
arg_pair	un programme ||| float $ury	count=1
arg_pair	msg_number pour ||| int $msg_number	count=1
function_name	ou défini les drapeaux ||| uopz flags	count=1
function_name	qui est retourné ||| fetch	count=1
function_name	fin ||| add buffer	count=2
arg_pair	et la clé passées ||| string $method	count=1
function_name	un ||| id	count=2
function_name	pour initialiser le phar ||| map phar	count=1
function_name	fichier est [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	à pclose() hormis ||| close	count=1
arg_pair	paramètres [arg_pair] ||| [arg_pair]	count=2
arg_pair	object_id ||| string $timeout	count=1
function_name	extrêmes d'une image ||| image extrema	count=2
function_name	geoip_country_code3_by_name() retourne les ||| country code3	count=1
function_name	données d'entrainement depuis ||| train from	count=1
function_name	oauthprovider::consumerhandler() ||| callconsumer	count=1
function_name	retourne la couleur ||| get color as string	count=1
arg_pair	serveur avec les définitions ||| resource $id array $config	count=1
function_name	dans un ||| metadata	count=1
function_name	d'attente s'interrompt si elle ||| set max poll	count=1
function_name	définit une [function_name_2] ||| [function_name_1] created [function_name_2]	count=2
function_name	les caractères alphabétiques ||| eregi	count=1
function_name	le champ ||| mysql field	count=1
namespace	nombre binaire représenté par ||| function	count=1
return	récupère la date de ||| string	count=1
return	résultats à envoyer au ||| bool	count=1
return	un tableau ||| array	count=42
function_name	définies ||| get defined	count=1
function_name	brutes de la réponse ||| raw response	count=1
function_name	mode d'écriture ||| writing mode	count=1
arg_pair	input ||| string $input	count=1
function_name	insensible à ||| strcasecmp	count=1
arg_pair	la ligne récupérée ||| int $row	count=1
function_name	version du ||| info	count=1
function_name	police ||| font	count=8
arg_pair	les [arg_pair_2] ||| [arg_pair_2] string $sealed_data [arg_pair_1]	count=3
arg_pair	suppression d'un ||| array $deleteoptions array $protocoloptions	count=1
function	[function_name_1] fichier ||| [function_name_1] pvf [arg_pair_2]	count=1
arg_pair	une nouvelle ||| float $height string $optlist	count=1
return	d'exécution des fichiers ||| void	count=1
function_name	gestionnaire ||| event handler	count=2
namespace	la fin et que ||| mongocursorinterface	count=1
arg_pair	un document ||| string $index array $attributes	count=1
function_name	l' eventbuffer ||| add buffer	count=1
return	chaînes alphanumériques dans le ||| void	count=1
function_name	forme et tous ||| newt form destroy	count=1
namespace	ou déplace ||| function	count=1
function_name	array complétée jusqu'à ||| array pad	count=1
function_name	cours ||| set	count=1
function_name	retourne le dernier ||| get last	count=4
function_name	include_path pour ||| include path	count=1
function_name	la durée du ||| include path	count=1
namespace	un fichier spécial ||| function	count=1
function_name	est similaire à ||| by id	count=1
function_name	entrées ||| cat	count=1
arg_pair	l'algorithme ||| string $algorithm	count=1
namespace	été ||| function	count=1
function_name	commande préparée stmt ||| mysqli stmt	count=1
function_name	d'occurrences de la ||| mb substr	count=1
return	erreur maxdb_connect_error() [return] ||| [return]	count=1
return	objet contenant ||| object	count=2
arg_pair	type d'éléments à ||| string $elementset	count=1
function_name	méthode ne doit pas ||| construct	count=1
function_name	une ||| array push	count=2
function_name	nom de ||| by name	count=1
function_name	cette fonction libère ||| form destroy	count=1
function_name	de l'étape d'erreur sarprop ||| set sarprop step error threshold	count=1
arg_pair	génère une chaîne de ||| string $http_method string $uri	count=1
arg_pair	la largeur de ligne ||| resource $p float $width	count=1
arg_pair	listant ||| string $schema string $table_name	count=1
function_name	pour lire les données ||| cubrid send	count=1
function_name	file d'attente s'interrompt si ||| eio	count=1
function_name	d'une image avec ||| image	count=1
return	des fichiers ainsi ||| void	count=1
function_name	version du [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	ouvre ||| eio open	count=1
namespace	peuvent pas ||| pharfileinfo	count=1
function_name	libère ||| oci free	count=1
function_name	directives ||| policies	count=1
arg_pair	un message message ||| string $message	count=1
namespace	d'une classe incluant ||| reflectionclass	count=1
function_name	[function_name_1] chemin ||| [function_name_2] [function_name_1]	count=1
function_name	la file de messages ||| msg remove queue	count=1
function_name	contient les métadonnées et ||| construct	count=1
arg_pair	fixe de couleurs représentant ||| int $treedepth bool $dither	count=1
function_name	les données ||| all	count=1
function_name	retourne le nom long ||| id3 get frame long name	count=1
function_name	chaîne ||| escape string	count=2
function_name	fonction mysqli_get_links_stats() retourne des ||| mysqli get links stats	count=1
arg_pair	héberge la file ||| resource $queue array $data	count=1
function_name	du résultat comme pourrait ||| mysql unbuffered	count=1
function_name	retourne [function_name_2] ||| [function_name_1] train error [function_name_2]	count=1
function_name	équivalent à memcached::prepend() mais ||| prepend by key	count=1
function_name	méthode d'interpolation [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
namespace	cairoimagesurface ||| cairoimagesurface	count=1
namespace	judy ||| judy	count=1
function_name	[function_name_1] [function_name_2] les valeurs ||| [function_name_1] [function_name_2] resource $req_identifier	count=3
function_name	similaire ||| proc	count=1
function_name	une uri d'espace de ||| elements by tag	count=1
arg_pair	un message dans ||| resource $reason	count=1
return	de caractères représentant ||| string	count=3
arg_pair	un objet ||| resource $connection	count=2
arg_pair	texte text ||| string $fontfile string $text	count=1
function_name	message d'erreur lié au ||| error	count=1
arg_pair	fieldname téléchargé par ||| resource $fdf_document string $fieldname	count=1
return	du jeu de ||| string	count=1
return	une fois par objet ||| void	count=1
function_name	passé par référence ||| passed by reference	count=2
function_name	associé au champ spécifié ||| mysql field	count=1
function_name	d'événements pour ||| ibase set	count=1
function_name	[function_name_1] la ||| [function_name_1] [function_name_2]	count=1
function_name	du client sous la ||| client	count=1
function_name	colonnes de ||| dbase	count=1
function_name	résultat de la ||| fetch	count=1
function_name	preg_replace() hormis ||| preg	count=1
arg_pair	à une ||| string $password int $cursor_type	count=1
arg_pair	à la valeur spécifiée ||| float $value	count=1
function_name	dernière modification ||| mtime	count=1
namespace	de la fin de ||| recursivetreeiterator	count=1
function_name	distorsion spécifiée ||| distortions	count=1
arg_pair	vérifie si name0 ||| string $name0	count=1
function_name	utilisée pour lier ||| bind	count=1
function	[function_name_1] et la ||| [arg_pair_2] [function_name_1]	count=7
function_name	fait que ||| gmmktime	count=1
function_name	les ressources ||| form	count=1
function_name	[function_name] les ||| get nr [function_name]	count=1
arg_pair	équivalente à memcached::get() hormis ||| callable $cache_cb float $cas_token	count=1
return	protocole associé [return] protocole name ||| [return]	count=1
function_name	ferme la ||| odbc close	count=1
arg_pair	de seuil de ||| float $sarprop_step_error_threshold_factor	count=1
namespace	xml ||| xmldiff\file	count=1
function_name	incluant les ||| newt form	count=1
function_name	est instanciable ||| is instantiable	count=2
namespace	lecture seule ||| pharfileinfo	count=1
arg_pair	retourne le fichier ||| int $use_include_path	count=1
function_name	message d'erreur qui sont ||| error	count=1
arg_pair	fonction mktime() excepté le ||| int $second int $month	count=1
arg_pair	établir l'environnement ||| string $dbname string $userid	count=1
function_name	retourne la [function_name_2] ||| [function_name_1] peak [function_name_2]	count=1
return	de lecture ||| void	count=1
arg_pair	autre format ||| int $format	count=1
namespace	synchronise la ||| tokyotyrant	count=1
arg_pair	la chaîne data avec ||| resource $connection string $data	count=1
return	déterminer si la connexion ||| bool	count=1
function	de succès [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	crée une [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	défaut des propriétés ||| vars	count=1
function_name	fonction met à jour ||| px update	count=1
arg_pair	que la valeur du ||| string $value	count=1
arg_pair	de fond ||| string $format	count=1
function_name	déplace la carte ||| colormap	count=1
function_name	du ||| mailparse uudecode	count=1
function_name	pour les ||| set	count=1
function_name	ferme le socket socket ||| socket close	count=1
return	informations de ||| object	count=2
return	boucle libeio ||| bool	count=1
arg_pair	la police truetype fontfile ||| string $fontfile	count=1
arg_pair	les paramètres ||| int $minute	count=1
arg_pair	tant que timestamp ||| int $timestamp	count=1
return	données ||| void	count=1
arg_pair	original définie par l'utilisateur ||| string $alias	count=1
return	les caractères ||| string	count=1
function_name	le nombre de lignes ||| rows	count=2
function_name	la portion de haystack ||| mb strrichr	count=1
function_name	hormis le fait qu'elle ||| proc close	count=1
arg_pair	document ||| array $attributes	count=1
function_name	[function_name_1] physique ||| [function_name_2] [function_name_1]	count=1
function_name	geoip_country_code3_by_name() retourne ||| geoip country code3	count=1
function_name	l'uri ||| base uri	count=2
return	compile et ||| mixed	count=1
function_name	récupère [function_name_2] ||| [function_name_1] last elapsed [function_name_2]	count=1
function_name	vérifie si ||| field exists	count=1
function_name	une exécution ||| prepare	count=1
arg_pair	sql pour l'activation de ||| int $condition_type	count=1
function_name	[function_name] fichier courant ||| get [function_name]	count=2
function_name	jste ||| jste	count=1
namespace	le stockage ||| splobjectstorage	count=1
arg_pair	retourne la ||| int $count	count=1
function_name	pclose() hormis le fait ||| close	count=1
function_name	contenant les données d'entrainement ||| train from	count=1
function_name	du cache de fichiers ||| wincache	count=1
function_name	pour la durée ||| path	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] page [function_name_2]	count=5
function_name	des informations issus ||| info read	count=1
function_name	le facteur de ||| factor	count=1
arg_pair	universal database ||| string $database string $username	count=1
function_name	combine une ou plusieurs ||| combine	count=1
return	base de données ||| bool	count=2
function_name	la couleur bleue ||| image blue primary	count=1
function_name	la commande préparée stmt ||| stmt	count=1
return	de puissance 4 en ||| bool	count=1
arg_pair	du domaine ||| string $directory	count=1
function_name	retourne le [function_name_2] ||| [function_name_1] client [function_name_2]	count=1
function_name	niveau individuel [function_name] chaque ||| adaptive threshold [function_name]	count=1
arg_pair	paramètre onoff ||| bool $onoff	count=1
function_name	pour ||| set event	count=1
function_name	file ||| set max poll time	count=2
function	crée la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	configuration include_path pour la ||| path	count=1
return	à des bases de ||| array	count=1
arg_pair	descripteur fd à ||| mixed $fd	count=1
function_name	le plugin de réplication ||| mysqlnd	count=1
function_name	appliqué ||| preview	count=1
function_name	configure la couleur ||| color	count=3
namespace	document xml ||| xmldiff\memory	count=1
namespace	totalité de ||| function	count=1
function_name	file_get_contents() retourne ||| get contents	count=1
namespace	de mettre à jour ||| quickhashstringinthash	count=1
namespace	de structure ou ||| function	count=1
arg_pair	durant l'exécution ||| bool $status callable $failure_callback	count=1
return	de bézier [return] ||| [return]	count=1
function_name	accomplit ||| dbplus rquery	count=2
return	par documents ||| bool	count=1
arg_pair	colonne correspondant ||| resource $result int $field_offset	count=1
function_name	ligne depuis ||| read line	count=1
arg_pair	une boîte aux lettres ||| string $mailbox	count=1
arg_pair	priorité de pid à ||| int $pid	count=1
function_name	tableau ||| iterator to array	count=1
arg_pair	envoie une ||| resource $connection	count=1
arg_pair	de la séquence sequence ||| string $sequence	count=1
arg_pair	modification d'une variable ||| int $type	count=1
function_name	la profondeur de ||| depth	count=1
return	argument ||| string	count=1
return	de base ||| string	count=1
function_name	algorithme par [function_name] c'est ||| mcrypt module is [function_name]	count=1
arg_pair	est obsolète ||| string $function_name	count=1
arg_pair	relation en name ||| string $name	count=1
arg_pair	dans la page ||| resource $pdfdoc	count=1
arg_pair	lui associe un objet ||| int $cols int $rows	count=1
function_name	de la prochaine requête ||| next	count=1
arg_pair	générateur d'extraits ||| string $field_override	count=1
function_name	de données ||| dbase	count=1
function_name	[function_name_1] nis ||| [function_name_2] [function_name_1]	count=6
function_name	la ||| dbase	count=1
arg_pair	paramètres passés ||| int $hour int $minute	count=1
return	au début ||| bool	count=1
namespace	doit être utilisée que ||| pharfileinfo	count=1
namespace	fonctionne avec ||| function	count=1
function_name	filtre décimal à ||| filter float	count=1
function_name	de gabarit ||| template ext	count=1
arg_pair	de la requête statement ||| resource $statement mixed $field	count=1
arg_pair	hyperlien à la position ||| float $lly	count=1
arg_pair	la largeur ||| string $text float $width	count=2
arg_pair	un segment de la ||| mixed $length	count=1
return	4 en ||| bool	count=1
function_name	tag image ||| set picture	count=1
arg_pair	du jeu ||| resource $stmt	count=1
function_name	considère ||| array push	count=2
function_name	soit de type id ||| id	count=1
namespace	par la [namespace] et ||| [namespace]	count=1
function_name	fait ||| eregi	count=1
function_name	fonction ||| by id	count=4
arg_pair	éléments d'un document ||| int $page	count=1
namespace	encodés qui ||| function	count=1
function_name	tailles de ||| sizes	count=2
function	lie un tableau php [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	la relation ||| resource $relation	count=1
arg_pair	métadonnées ||| mongodb $db	count=1
namespace	délai sur le ||| mongocursor	count=1
function_name	la pagination ldap en ||| ldap	count=1
arg_pair	windows compris ||| resource $handle int $operation	count=1
function_name	récupère [function_name_2] ||| [function_name_1] block [function_name_2]	count=1
return	le style de ||| int	count=1
function_name	teinte d'une [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	utilisateur d'apc ||| apc bin loadfile	count=1
function_name	d'erreur ||| error shift	count=2
namespace	à l'aide de ||| mongogridfs	count=1
return	est utile ||| array	count=1
function_name	casse d'ordre naturel ||| natcasesort	count=1
function_name	le ||| add buffer	count=2
function_name	[function_name_1] instanciable ||| [function_name_1] [function_name_2]	count=4
return	considère array comme une ||| int	count=1
function_name	complétée jusqu'à ||| pad	count=1
function_name	mime ||| mime encode	count=2
function_name	[function_name] algorithme ||| [function_name] block	count=1
function_name	recule le ||| prev	count=1
function_name	récupère la valeur ||| get value	count=1
function_name	version wbmp de ||| imagewbmp	count=1
function_name	mime kopfzeile ||| iconv mime	count=1
function_name	postgresql supporte [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	en noeud ||| domnode $node string $class_name	count=1
namespace	courante du lob ||| oci-lob	count=1
namespace	ou enregistre une ||| function	count=1
function_name	type strpos() en tenant ||| strrpos	count=1
function_name	retourne la définition de ||| pg meta data	count=1
function_name	à la prochaine ||| next	count=1
return	retourne un tableau avec ||| array	count=3
function_name	vérifie si l'on doit ||| is	count=1
function_name	une fois ||| set	count=1
arg_pair	depuis la représentation dom ||| domnode $node int $options	count=1
return	l'objet a terminé ||| void	count=1
function_name	associé ||| mysql	count=1
function_name	défini l'endroit où ||| fann set error	count=1
function_name	ainsi que leurs boosts ||| mlt	count=1
return	les en-têtes des courriers ||| array	count=1
namespace	de mettre à ||| quickhashstringinthash	count=1
function_name	retourne la ||| enchant dict get	count=1
return	ne doit être ||| void	count=1
function_name	objet de grande taille ||| pg lo	count=2
function_name	le dernier identifiant autogénéré ||| db2 last insert id	count=1
function_name	schéma relaxng à utiliser ||| relax ngschema	count=1
arg_pair	chemin fourni ||| int $start int $length	count=1
arg_pair	listes d'élements à créer ||| int $size	count=2
function_name	configuration include_path ||| set	count=1
function_name	données du tampon ||| buffer	count=1
function_name	lit [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	verrou de lecture ||| lock read	count=1
function_name	filtre digital qui améliore ||| enhanceimage	count=1
arg_pair	un attribut dans ||| string $index array $attributes	count=1
arg_pair	tous les appels ||| callable $callback	count=1
arg_pair	paramètres passés ||| int $hour	count=1
arg_pair	signature1 et ||| string $signature1	count=1
namespace	est entrée ||| ev	count=1
arg_pair	lot d'opérations update ||| mongocollection $collection array $write_options	count=1
function_name	associatif en utilisant ||| fetch assoc	count=1
function_name	lignes supprimées ajoutées mises ||| rows	count=1
arg_pair	lit ||| resource $fdf_document	count=1
function_name	caractères passée en ||| string	count=1
namespace	prochain ||| memcached	count=1
function_name	[function_name_1] documents ||| [function_name_1] [function_name_2]	count=3
arg_pair	dans un fichier local ||| int $oid	count=1
namespace	si une classe ||| reflectionclass	count=5
function_name	pdi ||| pdf get pdi	count=1
function_name	comme ||| array push	count=2
namespace	acquis avec la ||| eventbuffer	count=1
arg_pair	listant ||| string $schema	count=8
arg_pair	un générateur d'extraits ||| string $fragmenter	count=1
function_name	réplication et d'équilibrage de ||| ms	count=1
function_name	l'année d'un tag ||| year	count=1
function_name	fonction pcntl_sigwaitinfo() suspend ||| pcntl sigwaitinfo	count=1
function_name	du document ||| facet enum cache	count=1
function_name	l'attribut dans l'espace de ||| attribute	count=1
function_name	de la bibliothèque ||| libversion	count=1
arg_pair	résultat dans un ||| resource $result int $rownumber	count=1
namespace	conservant ||| arrayobject	count=1
function_name	la ||| debug	count=1
function_name	du ||| ps show	count=4
arg_pair	retourne la chaîne str ||| string $str string $character_mask	count=2
function_name	entières et effectue alors ||| variant idiv	count=1
function_name	numéro d'erreur retourné ||| error	count=1
arg_pair	de couleurs représentant ||| int $treedepth bool $dither	count=1
function_name	rectangle ||| rect	count=1
function_name	synchronise la base de ||| sync	count=1
function_name	effectue un test sur ||| mcrypt module self test	count=1
function_name	au serveur sans attendre ||| send	count=1
function_name	taille compressée d'un ||| compressedsize	count=1
arg_pair	une commande au ||| resource $connection	count=1
namespace	données sur le ||| tokyotyrant	count=1
function_name	[function_name_1] un tableau ||| [function_name_1] [function_name_2]	count=4
function_name	l'appel de newt_suspend() ||| newt resume	count=1
function_name	fonction est utile lors ||| urlencode	count=1
function	image le [arg_pair_2] ||| [function_name_1] extent [arg_pair_2]	count=1
function_name	[function_name] gearmantask représentant ||| [function_name]	count=2
function_name	dans un fichier temporaire ||| uudecode all	count=1
function_name	récupère les routes enregistrées ||| get routes	count=1
function_name	à l'échelle les ||| fann scale	count=4
function_name	geoip_country_code3_by_name() retourne les ||| country code3 by	count=1
function_name	sans attendre ||| send query	count=1
namespace	courant de l'itérateur directoryiterator ||| directoryiterator	count=1
arg_pair	cubrid_bind() est utilisée ||| mixed $bind_value string $bind_value_type	count=1
function_name	retourne le ||| pdf get	count=1
return	un tableau des ||| array	count=1
namespace	observateur evfork et démarre ||| evfork	count=1
function_name	les appels distants rpc ||| loop	count=1
function_name	la position suivante ||| next	count=1
function_name	sqlite identifiée par la ||| sqlite close	count=1
function_name	définit ||| setthreadtitle	count=1
return	pile ||| int	count=1
function_name	un élément avec un ||| get	count=1
arg_pair	unescaped_string en ||| string $unescaped_string	count=1
arg_pair	[arg_pair] les ||| [arg_pair]	count=2
arg_pair	avec les définitions ||| resource $id array $config	count=1
function_name	récupère la page ||| get current page	count=2
function_name	contenant les tailles de ||| key sizes	count=1
arg_pair	la fonction socket_create() ||| string $address	count=1
arg_pair	excepté ||| int $month	count=1
arg_pair	fait ||| int $year	count=2
function_name	crée ||| fbsql create	count=1
arg_pair	le point spécifié ||| float $x float $y	count=1
function_name	fréquence ||| terms	count=1
arg_pair	excepté le fait ||| int $minute	count=1
namespace	de messagerie ||| samconnection	count=1
function_name	[function_name_1] documents ||| [function_name_1] mlt [function_name_2]	count=2
function_name	le dictionnaire représenté par ||| crack closedict	count=1
namespace	instance imagick ||| imagick	count=1
function_name	définit une fonction de ||| set	count=2
function_name	le script courant ||| exit	count=1
function_name	[function_name_1] dernière ||| [function_name_2] error [function_name_1]	count=1
function_name	cette ||| newt form	count=1
function_name	récupère le nombre ||| fann get	count=1
function	analyse le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	retourne le nombre de ||| udm get	count=1
namespace	la fin de ||| recursivetreeiterator	count=1
function	complétée jusqu'à [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de l'extension sous la ||| solr	count=1
function_name	fichier ||| posix mknod	count=2
namespace	qui sont ||| function	count=1
arg_pair	les données ||| array $record	count=1
function_name	cocher ||| newt checkbox	count=1
function_name	[function_name] de la ||| [function_name]	count=2
return	sur [return] objet qui ||| [return]	count=1
function_name	de graphicsmagick ||| getreleasedate	count=1
arg_pair	distante ||| bool $is_output bool $is_null	count=1
function_name	et de flux à ||| stream wrapper register	count=1
return	dictionnaire représenté ||| bool	count=1
function_name	compare une ou ||| compare image	count=1
function_name	cette fonction crée une ||| create comment	count=1
arg_pair	la chaîne address tel ||| string $address	count=1
namespace	contenant du bruit ||| gmagick	count=1
function_name	[function_name_1] de l'espace ||| [function_name_1] [function_name_2]	count=1
return	recherche sur ||| int	count=1
return	retourne un tableau listant ||| array	count=1
function_name	soit conservée ||| arsort	count=1
arg_pair	l'argument offset et ||| resource $lob_identifier int $offset	count=1
arg_pair	watcher associé avec ||| callable $callback	count=1
function_name	tant que gestionnaire d'événements ||| event handler	count=1
function_name	antislashs devant ||| string	count=1
return	ceux ||| void	count=1
namespace	de l'image ||| haruimage	count=1
function_name	le socket ||| socket	count=2
arg_pair	du buffer buf via ||| resource $socket string $buf	count=1
return	un objet reflectionextension ||| reflectionextension	count=1
arg_pair	un message d'erreur à ||| string $message	count=1
arg_pair	[arg_pair_1] radius_config() ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	gestionnaire font retourné ||| resource $pdfdoc int $font	count=1
return	la durée du script ||| string	count=1
function_name	[function_name_1] retourne ||| [function_name_2] [function_name_1]	count=30
function_name	rfc2045 section 6.8) ||| binary	count=1
namespace	retourne ||| gmagickpixel	count=1
function_name	une image pour ||| ps open image	count=1
arg_pair	centrée sur les ||| int $width	count=1
function_name	sous la forme de ||| to string	count=1
function_name	snmp de définir ||| set	count=1
function_name	affectées par la dernière ||| affected	count=2
function_name	taille de ||| size	count=1
function_name	récupère la longueur ||| get	count=1
function_name	connecte le dernier ||| closepath	count=1
function_name	la ||| db2	count=1
namespace	des noeuds ||| splpriorityqueue	count=1
function_name	résultat ||| result	count=4
function_name	informations sur le protocole ||| get proto info	count=1
arg_pair	un fichier ||| string $filename int $size	count=1
function_name	la méthode statique create() ||| types	count=1
function_name	récupère le nom ||| get cipher name	count=1
arg_pair	username ||| resource $ftp_stream string $username	count=1
arg_pair	contrairement à strcmp() elle ||| string $str1 string $str2	count=1
function_name	résultats ||| result	count=3
function_name	simple ligne de ||| fit textline	count=1
function_name	l'octet courant ||| current byte index	count=2
function_name	une instance glo ||| from glo	count=1
return	avec un identifiant ||| domelement	count=1
arg_pair	à l'hôte host ||| string $host	count=1
arg_pair	configuration varname et ||| string $varname	count=1
arg_pair	une ||| string $style	count=1
namespace	champs du document ||| solrinputdocument	count=2
function_name	statut http ||| http status	count=1
function_name	depuis ||| cubrid	count=1
function_name	utilisée pour définir ||| set	count=1
function_name	données ||| numfields	count=1
return	de données ||| bool	count=2
arg_pair	terminé, ou qu'un ||| int $status int $options	count=1
function_name	forme en incluant ||| form	count=1
arg_pair	fait ||| int $minute	count=1
arg_pair	une chaîne d'une façon ||| int $start	count=1
function_name	de consommer trop de ||| mssql free statement	count=1
namespace	crée une instance imagick ||| imagick	count=1
function_name	des ||| merge	count=1
arg_pair	colonne données dans ||| mixed $param	count=1
function_name	au vendeur à ||| put vendor	count=1
arg_pair	résolution désirée ||| float $xresolution float $yresolution	count=1
function_name	la géométrie ||| page	count=3
namespace	[namespace] en ||| [namespace]	count=6
function_name	un ||| element	count=2
function_name	lie un socket à ||| bind	count=1
arg_pair	fonction est identique ||| string $string	count=1
function_name	ou plusieurs canaux d'une ||| channel distortion	count=1
function_name	à guillemets string en ||| qprint	count=1
function_name	exe ou auto-exécutable) est ||| write exe	count=1
function_name	définit la ||| ms set	count=1
namespace	archive [namespace] partir ||| [namespace]	count=1
namespace	configuration du ||| hw_api	count=1
function_name	seuil de fréquence d'apparition ||| min doc frequency	count=1
arg_pair	radius_config() ||| int $port string $secret	count=1
arg_pair	un ||| resource $fdf_document string $url	count=1
function	[function_name_1] sur le ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	attrappées ||| string $arg	count=1
return	que ||| int	count=1
arg_pair	commande de base de ||| array $options	count=1
function_name	tangente de ||| tan	count=1
return	comme ||| int	count=1
function_name	utilisée pour ||| module	count=1
arg_pair	casse des caractères ||| string $pattern string $string	count=1
function_name	le ||| eregi	count=1
function_name	sans attendre ||| pg send query	count=1
return	au code ||| string	count=1
function_name	à surveiller ||| set	count=1
namespace	est similaire ||| domdocument	count=1
function_name	un traitement appliqué ||| preview images	count=1
function_name	racine de a ||| root	count=1
arg_pair	forme d'une exception oauthexception ||| string $oauthexception	count=1
function_name	incluant ||| newt	count=1
function_name	temporaire tous les fichiers ||| uudecode	count=1
function_name	être ||| maxdb debug	count=2
return	de la bibliothèque ||| string	count=1
function_name	courant jusqu'au point de ||| close path	count=1
function_name	en anglais de la ||| msg	count=1
arg_pair	event_handler en tant ||| callable $event_handler string $event_name1	count=1
function_name	création du blob ||| blob	count=1
namespace	sortie normalement en d'autres ||| ev	count=1
function_name	la casse des caractères ||| eregi	count=1
function_name	retourne un entier ||| mysqli get	count=1
function_name	avec un identifiant donné ||| id	count=1
function_name	prend plus ||| poll	count=1
namespace	archive [namespace] partir d'un ||| [namespace]	count=1
function_name	shell ||| fnmatch	count=1
return	en image ||| bool	count=2
return	symétrie verticale [return] créant la ||| [return]	count=1
function_name	ceux ||| chmod	count=1
function_name	[function_name_1] hauteur ||| [function_name_1] image [function_name_2]	count=1
namespace	du script ||| function	count=1
function_name	de la première ||| first	count=1
namespace	envoi tous les ||| yar_concurrent_client	count=1
arg_pair	les colonnes et ||| resource $connection_id string $qualifier	count=1
function_name	qui ||| newt form destroy	count=4
function_name	et effectue alors une ||| variant idiv	count=1
function_name	précise ||| pdf fit	count=1
return	la fonction ||| string	count=2
arg_pair	utilisé avec un ||| string $lib_dir	count=1
function_name	désactive ||| event buffer disable	count=1
function_name	temporaire ||| mailparse uudecode	count=1
arg_pair	le paramètre variable_name dans ||| resource $introspection string $variable_name	count=1
function	lien symbolique [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	fonction mktime() ||| int $year	count=2
function_name	plus ||| time	count=1
arg_pair	pour l'événement de ||| mixed $arg	count=1
function_name	geoip_setup_custom_directory() va modifier ||| setup custom directory	count=1
arg_pair	fonction anonyme à partir ||| string $args string $code	count=1
function_name	commence une unité ||| begin	count=1
return	d'un tableau associatif avec ||| array	count=1
function_name	à la forme en ||| destroy	count=1
return	query sur le ||| resource	count=1
arg_pair	attrappées par ||| string $cb	count=1
function_name	position précise ||| pdf fit	count=1
function_name	retourne [function_name] voir la ||| get [function_name]	count=1
function_name	et retaille et déplace ||| chop	count=1
function_name	définit la ||| set facet	count=2
arg_pair	de jours du ||| int $month int $day	count=1
arg_pair	en cache une ||| string $key mixed $var	count=1
arg_pair	qui contient la ligne ||| int $row	count=1
function_name	dossier dans ||| mkdir	count=1
arg_pair	résultats listant les ||| string $schema string $table-name	count=1
function_name	si elle ||| max	count=1
arg_pair	résultat ||| resource $result int $row_number	count=1
namespace	référencé par splfileinfo ||| splfileinfo	count=1
arg_pair	une fonction à appeler ||| mixed $arg	count=1
arg_pair	invoquées avant ||| int $max_interval int $max_callbacks	count=1
function_name	de l'api ssl ||| ssl	count=1
function_name	les caractères blancs ||| rtrim	count=1
arg_pair	à fournir à ob_start() ||| int $status	count=1
function_name	setcookie() excepté que ||| setrawcookie	count=1
function_name	lignes affectées par ||| affected rows	count=3
function_name	pour un service ||| gupnp service proxy	count=2
function_name	un objet simplexmliterator contenant ||| children	count=1
function_name	définit la [function_name] ||| set text [function_name]	count=1
function_name	libeio tant ||| eio	count=1
return	cette ||| string	count=1
namespace	la position courant interne ||| solrdocument	count=1
arg_pair	un ||| string $pathname int $mode	count=1
namespace	[namespace] partir d'un ||| [namespace]	count=1
function_name	radius chaque réponse ||| radius	count=1
function_name	toutes les lignes ||| dbplus	count=1
function_name	le nombre de lignes ||| mysqli num rows	count=1
function_name	des tests ||| uintersect assoc	count=1
function_name	court d'un ||| frame short	count=1
function_name	le flux ou ||| stream	count=1
function_name	document xml depuis la ||| save xml	count=1
function_name	erreur d'une ||| cubrid error	count=1
function_name	l'étape d'erreur sarprop ||| set sarprop step error shift	count=1
function_name	le nom d'un champ ||| fbsql field name	count=1
namespace	crée ||| function	count=1
arg_pair	la colonne correspondant à ||| resource $result int $field_offset	count=1
function_name	fonction ||| newt form destroy	count=2
return	retourne ||| string	count=6
return	la configuration ||| void	count=1
function_name	à la fonction closedir() ||| close	count=1
function	blob ibase [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	met à l'échelle les ||| scale	count=4
function_name	errno ||| errno	count=1
arg_pair	créé avec [arg_pair] ||| [arg_pair]	count=1
arg_pair	[arg_pair] deux mots ||| [arg_pair]	count=3
function_name	d'essais que sybase va ||| sybase	count=1
arg_pair	une ressource de fichier ||| string $filename	count=1
function_name	efface le ||| rmdir	count=1
function_name	fichier de relation ||| dbplus	count=2
arg_pair	filename sous la ||| string $filename string $mode	count=1
function_name	ajoutés ||| form destroy	count=2
function	et logique [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	ou avec une valeur ||| function	count=1
function_name	représenté par ||| crack	count=1
function_name	convertit ||| convert to	count=1
function_name	un fork dans le ||| fork	count=1
function_name	fréquence à partir de ||| doc frequency	count=1
function_name	évalue ||| eval	count=2
function_name	la position du neurone ||| neuron	count=2
return	appelée dans une boucle ||| int	count=1
arg_pair	la police de caractères ||| gmagickdraw $draw string $text	count=1
function_name	pour chaque requête ||| query	count=1
namespace	splfileobject ne peut pas ||| splfileobject	count=1
namespace	du fichier fourni ||| function	count=1
function_name	retire un filtre d'un ||| filter	count=1
function_name	un socket ||| socket	count=1
function_name	choisit la fonction ||| handler	count=1
function_name	du segment ||| chunk	count=1
function_name	description du cipher courant ||| cipher info	count=1
arg_pair	fonction mktime() excepté ||| int $hour	count=1
function_name	recule le pointeur courant ||| prev	count=1
function_name	des ||| max	count=1
return	un identifiant de ressource ||| resource	count=1
function_name	l'url complète ||| get request url	count=1
function_name	noeud est [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	ressource fd ||| resource $fd	count=1
namespace	acquis ||| eventbuffer	count=1
arg_pair	fonction radius_config() ||| int $port string $secret	count=1
function_name	le [function_name_2] ||| solrresponse string [function_name_1] http [function_name_2]	count=1
function_name	temporisation de sortie ||| ob end flush	count=1
function_name	raw ||| raw	count=1
arg_pair	result ||| resource $result	count=1
function_name	les fonctions de ||| set	count=1
function_name	brutes de ||| get raw	count=1
function_name	des données personnalisées ||| set metadata	count=1
return	le serveur ||| mongocursor	count=1
return	pour ||| bool	count=1
function_name	types or ||| variant or	count=1
function_name	méthode oauthprovider::callconsumerhandler() ||| consumer handler	count=1
namespace	extrait une [namespace] de données ||| [namespace]	count=1
arg_pair	une base de données ||| string $database_name resource $link_identifier	count=1
arg_pair	clé key existe déjà ||| string $key	count=1
return	un objet contenant ||| object	count=1
function_name	tous ||| newt form	count=1
function_name	le groupe d'appartenance ||| get group	count=1
function_name	de ligne courant de ||| current line	count=1
arg_pair	dans la ||| int $options	count=1
namespace	implémente un ||| arrayobject	count=1
namespace	un fichier ||| function	count=2
function_name	tableau ||| to array	count=1
namespace	variables var .. ||| function	count=1
return	des informations ||| object	count=1
function_name	sur ||| merge	count=1
return	peut être utilisée ||| void	count=1
function_name	[function_name] recursivetreeiterator depuis ||| [function_name]	count=2
arg_pair	dans le texte ||| string $text int $index	count=1
function_name	configure ||| set auth	count=1
function_name	un fichier temporaire ||| uudecode all	count=1
namespace	utilisées par la ||| function	count=1
function_name	affiche ||| show	count=3
function_name	doit être ||| metadata	count=1
function_name	les composants qui avaient ||| form destroy	count=1
namespace	d'attente s'interrompt si elle ||| function	count=1
arg_pair	espace de noms associé ||| string $namespaceuri	count=1
function_name	backends supportés ||| backends	count=1
arg_pair	depuis un fichier ||| string $filename int $size	count=1
function_name	ftp ||| ftp	count=6
function_name	et envoie une ||| handle	count=1
function_name	libxml standard ||| libxml	count=1
arg_pair	la sequence donnée ||| resource $imap_stream string $sequence	count=1
return	tableau ||| bool	count=1
function_name	toutes ||| dbplus	count=1
arg_pair	du mode ||| string $mode_directory	count=1
function_name	bibliothèque ucd snmp ||| quick print	count=1
arg_pair	processus fils soit terminé, ||| int $status	count=1
function_name	direction du tri ||| sort	count=1
arg_pair	à l'entrée dn ||| resource $link_identifier string $dn	count=1
function_name	caractère depuis le fichier ||| fgetc	count=1
function_name	genre spécifié ||| genre	count=1
arg_pair	lui associe ||| int $cols int $rows	count=1
arg_pair	un ||| resource $pdfdoc	count=1
function_name	fonction ||| fbsql	count=1
arg_pair	de rappel si ||| resource $proxy mixed $callback	count=1
function_name	base des lettres minuscule ||| xheight	count=1
arg_pair	crée un ||| resource $fdf_document string $url	count=1
function_name	l'instance haruencoder de l'encodage ||| encoder	count=1
function_name	lot d'objets résultants et ||| batch size	count=1
arg_pair	le paramètre oid de ||| string $oid	count=1
function_name	passée ||| escape string	count=2
return	avec la méthode ||| void	count=1
function_name	envoi tous les ||| loop	count=1
function_name	similaire à la fonction ||| get element by id	count=1
function_name	des canaux de l'image ||| get image channel	count=1
function_name	du ||| get	count=8
function_name	bleu ||| set image blue	count=1
function_name	spécifié ||| mysql create db	count=1
function_name	fonction d'activation ||| set activation function	count=3
function_name	une liste des noms ||| class names	count=1
function_name	la clé metaphone ||| metaphone	count=1
function_name	le gestionnaire d'erreurs libxml ||| libxml use internal	count=1
function_name	maximale de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	fichiers encodés qui s'y ||| uudecode all	count=1
function_name	retourne le ||| get value	count=1
arg_pair	séquence sequence et retourne ||| string $sequence	count=1
function_name	l'url complète de la ||| request url	count=1
function_name	dimensions de la ||| metrics	count=1
return	données retourne les réponses ||| bool	count=1
function_name	programme qui sera démarré ||| ps add launchlink	count=1
function_name	dictionnaire représenté ||| closedict	count=1
namespace	fonction ferme la ||| function	count=1
arg_pair	: la ||| mongodb $db	count=1
function_name	d'un document yaml ||| yaml	count=1
function_name	et la seconde contient ||| construct	count=1
function_name	sqlstate retournée ||| stmt error	count=1
function_name	de ||| time	count=1
function_name	l'endroit où les ||| set error	count=1
function_name	le taux ||| rate	count=1
function_name	maximale des documents ||| max count	count=2
function_name	où ||| error	count=1
function_name	dessin des lignes par ||| imagesetbrush	count=1
function_name	le noeud courant ||| is	count=1
function_name	[function_name_1] du résultat ||| [function_name_2] [function_name_1]	count=1
arg_pair	défini le ||| resource $ann	count=2
function_name	liste des [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	depuis une chaîne ||| string $str int $start	count=1
function_name	exe ||| load exe	count=2
arg_pair	mktime() ||| int $hour	count=1
function_name	méthodes http ||| methods	count=1
function_name	où ||| set	count=1
return	de deux ||| mongodb	count=1
function_name	fonctions d'activation ||| activation functions	count=2
namespace	d'un lob oracle ||| oci-lob	count=1
function_name	[function_name] entre des ||| [function_name] rplist	count=3
arg_pair	définit un générateur d'extraits ||| string $fragmenter	count=1
arg_pair	le paramètre timestamp ||| int $timestamp int $format	count=1
function_name	qu'elle fonctionne ||| close	count=1
function_name	la taille d'une ||| extent	count=1
arg_pair	memcached::get() hormis ||| callable $cache_cb float $cas_token	count=1
function	du premier [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	en argument ||| db2 escape	count=1
function_name	pattern ||| pdf begin pattern	count=2
arg_pair	de la première occurrence ||| string $haystack mixed $needle	count=1
function_name	un timestamp unix ||| to timestamp	count=1
function_name	la configuration ||| tidy config	count=1
return	lit les en-têtes ||| array	count=1
function_name	[function_name_1] jeu de ||| [function_name_2] [function_name_1]	count=8
arg_pair	[arg_pair_1] dans subject ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	change la transparence ||| float $fuzz	count=1
function_name	gestionnaire de ||| stream	count=1
function_name	extrait dans un fichier ||| mailparse uudecode all	count=1
function_name	re-initialise l'événement ||| re init	count=1
namespace	javascript passé par ||| v8js	count=1
function_name	objet ainsi ||| object	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] int $offset [arg_pair_1]	count=5
return	la durée ||| string	count=1
arg_pair	une ||| resource $grp	count=1
return	fonction ||| string	count=2
function_name	données du ||| uudecode all	count=1
function_name	du code ||| code	count=1
arg_pair	la forme d'un ||| int $x int $y	count=1
arg_pair	noeud ||| domnode $node string $class_name	count=1
function_name	un champ facet ||| facet	count=1
function_name	le md5 de ||| md5	count=1
function_name	de la ligne courante ||| fetch row	count=1
function_name	rappel timestampnoncehandler qui sera ||| timestamp nonce handler	count=1
function_name	[function_name_1] de ||| [function_name_2] mlt [function_name_1]	count=4
function_name	les fichiers ||| apc	count=1
namespace	une [namespace] de ||| [namespace]	count=1
function_name	dans ce service ||| gupnp service introspection	count=1
namespace	ou d'autres ||| function	count=1
namespace	par son ||| function	count=1
function_name	défini l'endroit où les ||| fann set error	count=1
function	[function_name_1] identifiant packet_id ||| [function_name_1] add vars [arg_pair_2]	count=1
arg_pair	limitations ||| resource $agent int $var	count=1
function_name	données paradox ||| px	count=3
function_name	données ||| mailparse	count=1
namespace	des lignes ||| function	count=1
function_name	miniature de l'image tiff ||| exif thumbnail	count=1
function_name	hauteur ||| getimageheight	count=1
arg_pair	[arg_pair] petit ||| [arg_pair]	count=1
function_name	temporisation de ||| ob end clean	count=1
function_name	déplace ||| data seek	count=2
function_name	retourne ||| get supported	count=1
function_name	ssl voir ||| ssl	count=1
return	mais ||| array	count=1
arg_pair	paramètres ||| int $day int $year	count=1
function	[function_name_1] envoyés par ||| [function_name_1] [arg_pair_2]	count=3
return	un verrou ||| bool	count=1
function	retourne le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	la largeur spécifiée ||| float $width	count=2
namespace	méthode implémente ||| arrayobject	count=1
function_name	sévérité des ||| min message severity	count=1
function_name	requête asynchrone ||| reap query	count=2
function_name	liste les tables ||| list tables	count=2
function_name	composants qui avaient été ||| newt form	count=1
namespace	d'un serveur ||| samconnection	count=1
arg_pair	une ||| string $title	count=1
function_name	miniatures ||| images	count=1
function_name	maximal [function_name_2] ||| [function_name_2] mlt [function_name_1]	count=1
function_name	dernière erreur ou ||| error	count=1
function_name	utile uniquement ||| get	count=1
function_name	de sévérité des ||| min message severity	count=1
arg_pair	identique à la ||| int $day	count=1
function_name	clé suivante ||| nextkey	count=1
function_name	erreur de la ||| error	count=1
function_name	images scannées où ||| deskew image	count=1
function_name	objet contenant ||| object	count=1
function_name	un ||| numeric print	count=1
function_name	un attribut dans un ||| attributes	count=1
function_name	[function_name_1] de l'extension ||| [function_name_2] [function_name_1]	count=2
function_name	le module ||| mcrypt module	count=1
function_name	retourne la valeur de ||| ini get	count=1
function	[function_name_1] première occurrence ||| [function_name_1] [arg_pair_2]	count=2
function_name	stocker des ||| metadata	count=1
function_name	doit ||| metadata	count=1
function_name	postgresql créée en appelant ||| pg	count=1
function_name	le préfixe de la ||| prefix	count=1
function_name	élément avec un ||| by	count=1
return	retourne le nombre de ||| int	count=4
namespace	lors de la ||| recursivetreeiterator	count=1
arg_pair	fait ||| int $second int $month	count=1
function_name	flou [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	le fichier [return] ||| [return]	count=1
function_name	[function_name_1] remplissage ||| [function_name_2] [function_name_1]	count=2
function_name	compile ||| opcache compile	count=1
function_name	serveur distant ||| ssh2	count=1
function_name	la forme de ||| to	count=1
function_name	[function_name_1] d'erreur retourné ||| [function_name_1] last [function_name_2]	count=1
function_name	fait qu'elle fonctionne ||| proc	count=1
function_name	retourne ||| mysqli get	count=2
function_name	récupère le contexte ||| context	count=1
function_name	[function_name_1] la page ||| [function_name_1] [function_name_2]	count=1
arg_pair	d'un élément ||| string $attr_name int $index	count=1
function_name	base sqlite identifiée ||| sqlite	count=1
function_name	retourne ||| get image	count=2
arg_pair	configure le paramètre linecap ||| int $linecap	count=1
function_name	fonction libère les ressources ||| form	count=1
function_name	plus ||| set max	count=1
function_name	retourne ||| enc get algorithms	count=1
function_name	récupère la [function_name_2] ||| [function_name_1] declaring [function_name_2]	count=1
function_name	fichier exe ou ||| exe	count=1
function_name	liens ||| set border	count=1
return	include_path pour ||| string	count=1
function_name	ligne de données ||| ifx fetch row	count=1
function_name	le message d'erreur de ||| get error message	count=1
return	et [return] ||| [return]	count=1
return	sauvegarde dans un ||| int	count=1
function_name	paramètres de la base ||| db parameter	count=1
function_name	[function_name_1] forte priorité ||| [function_name_2] [function_name_1]	count=6
function_name	patch binaire et enregistre ||| xdiff file patch binary	count=1
namespace	interne est ||| solrdocument	count=1
function_name	[function_name] avec ||| get [function_name]	count=1
function_name	fonction retourne le nom ||| name	count=1
return	les ressources mémoires utilisées ||| void	count=1
arg_pair	la valeur spécifiée ||| int $type mixed $value	count=1
function_name	crée ||| create stopped	count=2
arg_pair	soapserver en mode wsdl ||| mixed $wsdl array $options	count=1
arg_pair	sur les ||| string $pattern	count=1
arg_pair	un nouveau contexte zmq ||| integer $io_threads boolean $is_persistent	count=1
namespace	à ||| domdocument	count=1
namespace	courant vers ||| harupage	count=1
function_name	toutes les ressources persistantes ||| dump persistent resources	count=1
function_name	selon l'uri ||| lookup	count=1
namespace	peuvent ||| pharfileinfo	count=1
function_name	fonction crée une nouvelle ||| create attribute	count=1
namespace	de caractères ||| serializable	count=1
function_name	désactive les alertes ||| warnings	count=1
arg_pair	choisit ||| string $file	count=1
namespace	et les ||| mongocommandcursor	count=1
function_name	bibliothèque cliente ||| client info	count=1
function_name	9 miniatures de l'image ||| preview	count=1
namespace	cache fichiers ou ||| function	count=1
function_name	retourne le nombre ||| dbase numfields	count=1
function_name	récupère les ||| get	count=5
arg_pair	la chaîne str après ||| string $encoding	count=1
function_name	taille d'une image le ||| image extent	count=1
function_name	[function_name_1] taux ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] le nom ||| [function_name_1] genre [function_name_2]	count=1
namespace	fonctions xslt dans ||| xsltprocessor	count=1
function_name	preg_replace() ||| preg	count=2
function_name	survenue lors de la ||| error	count=2
function_name	s'interrompt si elle prend ||| eio set max poll	count=1
function_name	limite supérieure dans le ||| include upper bound	count=1
return	[return] depuis la ||| [return]	count=1
function_name	ligne suivante de la ||| dbplus next	count=1
arg_pair	requête sql query ||| string $query	count=1
arg_pair	de transformation avec xsltprocessor ||| string $namespace	count=1
function_name	lors de la recherche ||| eregi	count=1
return	est obsolète ||| mixed	count=1
function_name	être utilisée que pour ||| set	count=1
function_name	l'intensité de l'image ||| image	count=1
arg_pair	la recherche sur ||| string $pattern	count=1
function_name	service ||| service	count=4
arg_pair	vérifie si un mot ||| resource $dict string $word	count=1
arg_pair	message d'erreur à ||| int $message_type	count=1
arg_pair	la résolution ||| float $xresolution float $yresolution	count=1
arg_pair	similaire ||| resource $result	count=2
return	chaîne de caractères de ||| string	count=1
function_name	boucle libeio ||| eio event	count=1
arg_pair	x509cert pour ||| mixed $x509cert	count=1
arg_pair	appels ||| callable $callback	count=1
arg_pair	données cubrid et ||| resource $conn_identifier	count=1
return	méthode vérifie ||| bool	count=1
function_name	[function_name_1] version ||| [function_name_2] [function_name_1]	count=12
namespace	être ||| collectable	count=1
namespace	texte lors d'une annotation ||| gmagickdraw	count=1
function_name	méthode de compression ||| compressionmethod	count=1
return	caractères contenant le dernier ||| string	count=1
return	caractères représentant ||| string	count=3
function_name	[function_name_1] de l'image ||| [function_name_2] [function_name_1]	count=118
return	tant que les ||| bool	count=1
function_name	[function_name] de l'image ||| [function_name]	count=1
function_name	[function_name_1] l'on quitte ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] clic sur ||| [function_name_1] [arg_pair_2]	count=1
function_name	libère les ressources ||| newt form destroy	count=1
function_name	crée un nouveau contexte ||| gupnp context	count=1
namespace	tampon fourni par le ||| eventbuffer	count=1
arg_pair	que la valeur du ||| string $name string $value	count=1
function_name	à ||| set module	count=2
namespace	closedir() ||| directory	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] filter [function_name_2]	count=3
return	en largeur dans ||| bool	count=1
function_name	pour le schéma relaxng ||| relax ngschema	count=1
arg_pair	variable_name dans ce ||| resource $introspection string $variable_name	count=1
function	d'activation pour [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	les paramètres passés ||| int $second	count=1
arg_pair	des lignes par brush ||| resource $image resource $brush	count=1
function_name	forme en incluant ||| newt form destroy	count=1
function_name	en utilisant l'algorithme uuencode ||| convert uuencode	count=1
function_name	de transformation ||| matrix	count=2
function_name	point vert ||| image green	count=1
namespace	vérifie si ||| mongocursorinterface	count=1
function_name	méthodes http supportées ||| methods	count=1
arg_pair	changement ||| resource $ann float $sarprop_step_error_shift	count=1
function_name	token ||| access token	count=1
function_name	les images scannées où ||| deskew image	count=1
function_name	fonction de rappel à ||| fann set callback	count=1
arg_pair	calcule l'intersection de ||| array $array2	count=3
function_name	précédente de la ||| prev	count=1
function_name	image ou ||| image	count=1
function_name	configuration courante dans ||| save config	count=1
function_name	résultat de ||| fetch	count=1
arg_pair	fichier ||| int $major	count=1
function_name	de la base ||| set	count=1
function_name	extrait ||| mailparse uudecode all	count=2
namespace	ou l'heure courante si ||| function	count=1
function_name	terme à partir ||| upper bound	count=1
namespace	contient ||| mongogridfs	count=2
arg_pair	signature1 et la ||| string $signature1	count=1
function_name	commentaire de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sera démarré lors du ||| launchlink	count=1
function	[function_name_1] str ||| [function_name_1] [arg_pair_2]	count=5
function_name	généré ||| end document	count=2
function_name	lit le ||| get	count=5
function_name	de l'image ||| get image	count=10
arg_pair	équivalent à memcached::getmulti() mais ||| int $flags	count=1
arg_pair	excepté le ||| int $day int $year	count=1
function_name	bloc d'image ||| imageblock	count=1
arg_pair	descripteur de fichier fd ||| mixed $fd int $mode	count=2
function_name	un élément ||| get element	count=1
function_name	ne peuvent ||| set	count=1
return	une fois ||| void	count=1
function_name	dernière [function_name_2] ||| [function_name_2] [function_name_1]	count=25
arg_pair	de alpha degrés dans ||| float $alpha	count=1
function_name	les options pprésentes ||| resolv conf	count=1
arg_pair	liste les colonnes et ||| resource $connection_id string $qualifier	count=1
arg_pair	cette méthode est obsolète ||| string $function_name	count=1
function_name	tampon de sortie en ||| ob	count=1
function_name	[function_name_1] et retaille ||| [function_name_2] [function_name_1]	count=2
namespace	si elle ||| function	count=2
function_name	[function_name_1] contenu ||| [function_name_2] [function_name_1]	count=1
arg_pair	domaine ||| string $domain int $options	count=1
arg_pair	le fait que les ||| int $day	count=1
function_name	ligne retournée ||| fetch	count=1
return	la mise en ||| bool	count=1
function_name	seule ligne [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	résultants ||| batch size	count=2
function_name	annule la ||| tx rollback	count=1
arg_pair	de l'argument [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	nouveau pattern ||| pdf begin pattern	count=1
arg_pair	que les paramètres passés ||| int $minute	count=1
namespace	le timestamp timestamp ou ||| function	count=1
namespace	documents xml locaux ||| xmldiff\file	count=1
function_name	événement timer ||| event timer	count=1
return	tableau de deux ||| array	count=1
arg_pair	de résultats listant les ||| string $table_name	count=1
return	pour accéder à un ||| resource	count=1
arg_pair	seconde contient ||| string $prefix	count=1
return	de la bibliothèque ||| array	count=1
namespace	splfileinfo pour ||| splfileinfo	count=1
function_name	libère toute la ||| ldap free result	count=1
function_name	au socket ||| socket name	count=1
arg_pair	rappel callback ||| callable $callback mixed $parameter	count=1
return	par le ||| string	count=1
arg_pair	uri contenant ||| string $uri string $encoding	count=1
arg_pair	serveur avec les définitions ||| array $config	count=1
function_name	faible priorité à effectuer ||| task low	count=1
function_name	est de type nombre ||| is int	count=1
function_name	sur [function_name] ||| [function_name]	count=2
function_name	sélectionne la ||| select db	count=3
arg_pair	trouve la position de ||| string $charset	count=1
function_name	qualité de la ||| quality	count=1
namespace	l'index du noeud ||| splheap	count=1
namespace	exécute une seule tâche ||| gearmanclient	count=1
return	lit les quotas ||| array	count=1
arg_pair	le comptage des termes ||| string $field_override	count=1
function_name	une chaîne de ||| string	count=1
function_name	encodés qui ||| mailparse	count=1
arg_pair	ignore ||| string $pattern	count=1
function_name	de document html ||| html	count=1
function_name	types or ||| or	count=1
arg_pair	lisant ses en-têtes ||| int $fromlength int $subjectlength	count=1
function_name	de la tâche ||| background	count=2
function	prépare une requête ||| prepare string $statement	count=1
function_name	pile et ||| push	count=1
function_name	la file ||| eio set max poll	count=1
function_name	recursivetreeiterator::valid() retourne false pour ||| end	count=1
function_name	[function_name_1] serveur qui ||| [function_name_1] [function_name_2]	count=1
function_name	l'uri [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	le jeu de backends ||| backends	count=1
function_name	le sinus de ||| sin	count=1
function_name	forme de chaîne ||| string	count=1
function_name	de ||| setimagescene	count=1
function_name	radius_get_attr() ||| radius	count=1
function_name	sélectionne une base ||| db query	count=1
return	synchronise la base de ||| mixed	count=1
arg_pair	contenu dans un fichier ||| int $oid	count=1
namespace	dans une série ||| mongocursor	count=1
function_name	group ||| group	count=1
function_name	parcourt un ||| batch	count=1
namespace	les caractères ||| function	count=2
function_name	retourne la largeur et ||| get	count=1
arg_pair	première occurrence ||| string $haystack string $needle	count=2
function_name	file ||| eio	count=1
function_name	une url suivant les ||| assemble	count=1
arg_pair	pas attrappées ||| string $cb	count=1
function_name	appliqué ||| images	count=1
function_name	par [function_name] c'est ||| mcrypt module is [function_name]	count=1
function_name	lit la dernière erreur ||| get last error	count=1
function_name	la ||| fbsql field	count=1
namespace	travail ||| gearmanjob	count=1
function_name	évalue le code ||| eval	count=1
function_name	le serveur de travaux ||| handle	count=1
function_name	retourne le nombre de ||| dbase	count=1
function_name	comportement de autocommit de ||| db2 autocommit	count=1
function_name	d'espace ||| elements	count=1
function_name	spécifié est une ||| is valid	count=1
function_name	combine une ou ||| combine	count=1
namespace	le nombre de ||| ev	count=2
return	utile uniquement avec une ||| array	count=1
function_name	énumère [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] describe	count=1
namespace	fin ||| recursivetreeiterator	count=1
function_name	maximale en octets ||| peak	count=1
function_name	lorsque la méthode ||| end	count=1
return	dans la liste des ||| int	count=1
function_name	ibase_pconnect() ||| drop	count=1
arg_pair	chaîne needle dans la ||| string $haystack string $needle	count=1
arg_pair	au ||| resource $socket	count=1
function_name	[function_name_1] coloriser les ||| [function_name_2] [function_name_1]	count=3
arg_pair	mktime() excepté le fait ||| int $day int $year	count=1
function_name	file d'attente ||| max poll	count=1
arg_pair	comme ||| array $array	count=1
function_name	la file d'attente ||| poll	count=1
function_name	l'aide de ||| construct	count=1
function_name	codage vectoriel ||| imagepsencodefont	count=1
function_name	les variables ||| variables	count=1
function_name	[function_name_1] odbc à ||| [function_name_2] close [function_name_1]	count=1
arg_pair	entre des tableaux ||| array $array1	count=1
arg_pair	crée un document pdf ||| resource $fdf_document	count=1
function	du champ [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	chaîne str à ||| string $str	count=1
function_name	code d'erreur comme paramètre ||| socket strerror	count=1
function_name	du flou [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	un ||| uudecode	count=1
namespace	l'archive phar ||| pharfileinfo	count=1
function_name	les fournisseurs enchant ||| enchant broker	count=1
arg_pair	lit ou ||| resource $link_identifier	count=1
function_name	libeio tant que les ||| eio event	count=1
function_name	du serveur d'administration kerberos ||| kadm5 flush	count=1
arg_pair	l'image image ||| string $filename	count=1
function_name	champs colonnes de ||| dbase	count=1
function_name	schéma d'entrelacement ||| get interlace scheme	count=1
return	du contenu du ||| int	count=1
function_name	chaîne ||| load string	count=2
return	jusqu'à la réception d'un ||| int	count=1
arg_pair	fonction cubrid_bind() est utilisée ||| mixed $bind_value string $bind_value_type	count=1
function_name	les tailles de ||| key sizes	count=2
function_name	à la fonction ||| fbsql	count=1
arg_pair	copie des données entre ||| callable $callback string $data	count=1
namespace	données ||| tokyotyrant	count=1
return	à cette méthode ||| mixed	count=1
return	la ||| domelement	count=1
arg_pair	la clé passées ||| string $data	count=1
arg_pair	fonction mktime() excepté le ||| int $minute	count=1
arg_pair	fournir ||| string $contents int $status	count=1
return	permet de ||| void	count=1
function_name	retourné ||| yaz	count=1
function_name	et la seconde ||| construct	count=1
function_name	serveur virtuel sous iis ||| iis get server by path	count=1
function_name	variables ||| variables	count=1
namespace	les ressources ||| function	count=1
function	l'attribut name afin ||| attribute string $name	count=1
function_name	crée un lien symbolique ||| symlink	count=1
function_name	coloriser [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	avec un espace ||| string $namespaceuri string $qualifiedname	count=1
function	la définition [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	un arbre ||| sdo_das_xml	count=1
function_name	le dictionnaire représenté par ||| crack	count=1
arg_pair	fonction fann_read_train_from_file() ||| string $file_name	count=1
function_name	la séquence d'images de ||| set	count=1
function_name	fréquence en deçà ||| frequency	count=1
function_name	associé [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	temporaire tous les ||| uudecode all	count=1
return	à un ||| array	count=1
function_name	à détruire un bloc ||| delete	count=1
rest	cette [function_2] ||| [function_2] [return_1]	count=4
namespace	le registre ||| yaf_registry	count=1
arg_pair	que les ||| int $second	count=1
namespace	gmagick ||| gmagick	count=5
function_name	la base de ||| fbsql set	count=2
function_name	courante ||| show	count=1
function_name	à différents ||| images	count=1
function_name	libeio tant que ||| event	count=1
namespace	contenu ||| mongogridfs	count=1
arg_pair	tableau array1 qui contiennent ||| array $array1 array $array2	count=1
function_name	dans la session ||| enchant dict is in session	count=1
function_name	contenant les [function_name] de tous ||| get [function_name]	count=1
function_name	le facteur de ||| threshold factor	count=1
function_name	la date de ||| get	count=2
arg_pair	par object_id ||| string $object_id	count=1
function_name	termine ||| cancel	count=1
function_name	de compression de l'image ||| image compression	count=1
namespace	http ||| oauth	count=2
function	gris [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	avaient été ajoutés ||| newt form destroy	count=1
function_name	retire un ||| curl multi remove	count=1
arg_pair	strcmp() elle n'est ||| string $str1	count=1
function_name	soap appelle les ||| handle	count=1
function_name	est supportée par ||| is supported	count=1
function_name	[function_name_1] la police ||| [function_name_2] [function_name_1]	count=12
function_name	[function_name_1] modification ||| [function_name_2] [function_name_1]	count=1
function_name	le dossier ||| zip entry compressionmethod	count=1
function	[function_name_1] d'une ||| [arg_pair_2] [function_name_1]	count=5
function_name	au format idna ascii-compatible ||| idn to ascii	count=1
function_name	données du fichier fourni ||| mailparse uudecode	count=1
namespace	retourne le code du ||| gmagickdraw	count=1
function_name	dernière fonction ||| last	count=1
function_name	d'attente ||| set max poll time	count=2
namespace	l'élément identifié par ||| memcache	count=2
return	base de données retourne ||| bool	count=1
function_name	d'un objet ||| object	count=1
function_name	fragments contigus ||| highlight	count=1
namespace	seconde contient le contenu ||| mongogridfs	count=1
function_name	spécifiée ||| insert	count=1
function_name	de l'image qui correspondent ||| image	count=1
function_name	est utilisée pour modifier ||| set	count=1
arg_pair	qui contient ||| string $file	count=1
function_name	avec des tests sur ||| array uintersect assoc	count=1
function_name	les tailles ||| sizes	count=2
function_name	recherche une police ||| load font	count=1
namespace	du document ||| harudoc	count=1
arg_pair	couleurs ||| bool $dither	count=1
function_name	chaîne de caractères passée ||| escape string	count=1
namespace	un ||| imagick	count=2
function_name	ressources mémoires utilisées ||| newt form destroy	count=1
namespace	file d'attente ||| splpriorityqueue	count=1
function	[function_name_1] seuil ||| [arg_pair_2] [function_name_1]	count=3
function_name	point vert ||| green primary	count=1
function_name	connexion avec la base ||| connect	count=1
arg_pair	mktime() ||| int $month	count=1
arg_pair	classe mongodbref ||| mixed $document_or_id	count=1
function	certificat x509 [arg_pair_2] ||| [function_name_1] parse [arg_pair_2]	count=4
function_name	brosse courante pour ||| imagesetbrush	count=1
function_name	contenant la valeur ||| db2	count=1
return	réception d'un des ||| int	count=1
arg_pair	sur le nombre de ||| int $length	count=1
namespace	la [namespace] et retourne ||| [namespace]	count=1
function_name	donnée ||| load string	count=2
function_name	un fichier existe ||| file	count=1
function_name	curseur typiquement parcourt un ||| batch	count=1
function_name	et tous les ||| newt form destroy	count=1
namespace	collections ||| mongogridfs	count=1
arg_pair	les ||| mongodb $db	count=2
function_name	base sqlite ||| sqlite	count=1
arg_pair	identique à ||| int $month	count=1
function_name	hormis le ||| proc close	count=1
return	remplace la brosse courante ||| bool	count=1
arg_pair	imap_open() pour le ||| resource $imap_stream	count=1
function_name	encodés ||| mailparse	count=1
function_name	filtre décimal à ||| filter float range	count=1
function_name	elle prend ||| max	count=1
return	contient le contenu ||| mongodb	count=1
arg_pair	[arg_pair_1] valeur entre ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	la fonction ||| type	count=2
namespace	du ||| eventbuffer	count=1
function_name	forme et tous les ||| form destroy	count=1
return	utilisé en entrée ||| bool	count=1
function_name	des ||| destroy	count=1
function_name	[function_name_1] sous ||| [function_name_1] [function_name_2]	count=3
return	supprime toutes ||| int	count=1
return	à un ||| resource	count=1
function_name	est ||| cubrid	count=1
function_name	premier attribut ||| first attribute	count=2
namespace	phar actuelle sur le ||| phar	count=1
function_name	valeur du paramètre facet.date.other ||| facet date other	count=1
function_name	la méthode de ||| entry	count=1
namespace	déplace toutes les données ||| eventbuffer	count=1
function_name	[function_name_1] retourne le ||| [function_name_2] [function_name_1]	count=8
arg_pair	indiqué dans set ||| array $set	count=1
function_name	bibliothèque openssl ||| openssl	count=1
namespace	fichier temporaire tous les ||| function	count=1
arg_pair	une image jpeg ||| string $iptcdata	count=1
function_name	l'écrit dans le fichier ||| fget	count=1
arg_pair	un fichier ||| string $filename	count=6
arg_pair	génère une ||| string $http_method string $url	count=1
namespace	de données sur ||| tokyotyrant	count=1
arg_pair	prompt et retourne ||| string $prompt callable $callback	count=1
function_name	suivante de la ||| dbplus next	count=1
function_name	récupère ||| func get	count=2
function_name	élément avec un ||| get	count=1
function_name	détruire un ||| shmop	count=1
function_name	état lui permettant d'être ||| close cursor	count=1
function_name	libère la mémoire ||| free query	count=1
function_name	version cliente ||| client info	count=1
return	de sortie de la ||| string	count=1
arg_pair	le contenu ||| mongodb $db string $prefix	count=1
arg_pair	filename ||| string $filename string $mode	count=1
function_name	le noeud courant ||| attribute node	count=1
arg_pair	les attributs du terminal ||| resource $fd array $options	count=1
function_name	notification de modification ||| gupnp service proxy add notify	count=1
function_name	spécifiée et ||| db2	count=1
function_name	avec ||| module	count=1
return	son exécution ou ||| void	count=1
function_name	dns associées ||| dns get record	count=1
function_name	un marqueur ||| bind array by name	count=1
function_name	recherche sur les ||| eregi	count=1
function_name	buffers d'affichage dans ||| fflush	count=1
function_name	image dans la ||| image	count=1
function_name	seule image représentant ||| stereo image	count=1
function_name	configuration ||| set include	count=1
function_name	un nouvel objet ||| construct	count=8
arg_pair	hyperlien à une position ||| float $lly	count=1
function_name	le type d'algorithme ||| method	count=1
function_name	une séquence d'images ||| images	count=1
arg_pair	est utilisée pour insérer ||| string $attr_name	count=1
arg_pair	identique à ||| int $hour int $minute	count=1
function_name	récupère l'instance haruencoder de ||| get encoder	count=1
function_name	exécute ||| curl multi exec	count=1
function_name	un dictionnaire à ||| enchant broker set	count=1
rest	statistiques sur [function_2] ||| [function_2] [return_1]	count=3
function_name	ressources mémoires ||| newt form	count=1
function_name	de configuration include_path pour ||| set	count=1
return	[return] paramètre ||| [return]	count=1
function_name	retourne la chromacité ||| get	count=1
function	guid binaire [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	au nom ||| name	count=1
arg_pair	de ||| string $string	count=1
function_name	initialiser le phar quand ||| phar	count=1
function_name	pointeur de fichier rpm ||| rpm close	count=1
function_name	retourne le statut ||| get	count=1
function_name	l'encodage ||| encoding	count=6
function_name	variable donnée est de ||| is	count=3
function_name	fonction peut ||| module	count=1
function_name	requête de scan ||| yaz scan	count=1
function_name	.. ||| array push	count=2
function_name	la plus récente ||| last	count=1
arg_pair	pour l'activation ||| mixed $condition	count=1
arg_pair	str en chaîne ||| string $str	count=1
function_name	d'une chaîne ||| load	count=1
function_name	dans un ||| set	count=1
function_name	récupère une [function_name] ||| msql [function_name]	count=3
namespace	domentityreference ||| domentityreference	count=1
function_name	liste [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	spécifie ||| yaz	count=3
function_name	charge la ||| load ttc	count=1
return	indique si ||| bool	count=5
function_name	mise à jour ||| cmd update	count=1
namespace	caractères ||| serializable	count=1
function_name	le ||| merge	count=1
arg_pair	log_killcursor lors de la ||| array $server array $info	count=1
function_name	remplace la brosse ||| imagesetbrush	count=1
function_name	postgresql ||| pg	count=14
function_name	cette fonction est ||| id	count=1
function_name	[function_name_1] trace ||| [function_name_1] [function_name_2]	count=1
function_name	en cours ||| pg	count=1
arg_pair	une ||| array $array	count=1
return	.. ||| int	count=1
arg_pair	du jeu de résultats ||| resource $stmt	count=1
function_name	le délai maximal ||| set query timeout	count=1
arg_pair	le fichier remote_file ||| string $remote_file	count=1
function_name	les fichiers encodés ||| mailparse	count=1
arg_pair	de la première occurrence ||| string $haystack string $needle	count=1
function_name	fonction est similaire à ||| element by id	count=1
function_name	le cosinus hyperbolique est ||| acosh	count=1
function	[function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2]	count=2
function_name	bytecode et ||| bcompiler write	count=1
function_name	sans attendre ||| pg send	count=1
function_name	un identifiant unique ||| object hash	count=1
return	utilisées par la ||| void	count=1
function	le bytecode [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	une requête à ||| string $query	count=1
function_name	erreur d'une ||| error	count=1
function_name	une paire ||| socket pair	count=1
function_name	de modification du fichier ||| ctime	count=1
function_name	liste des bases de ||| list dbs	count=1
function	d'autres informations [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	le publier à ||| sammessage $msg	count=1
return	dessin des ||| bool	count=1
function_name	pour définir des drapeaux ||| set	count=1
namespace	compression ||| function	count=1
namespace	les paramètres ||| function	count=1
function_name	représenté par ||| crack closedict	count=1
arg_pair	lors de la recherche ||| string $pattern	count=1
function_name	définir le délai maximal ||| cubrid set query timeout	count=1
function_name	la [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	snmp spécifiés ||| snmp	count=1
function_name	les composants qui ||| form destroy	count=2
function_name	police ||| query font	count=1
function_name	ouvre le module de ||| mcrypt module open	count=1
function_name	un lot ||| batch	count=1
function_name	la fonction pcntl_sigwaitinfo() suspend ||| pcntl sigwaitinfo	count=1
function_name	sqlite identifiée ||| sqlite	count=1
arg_pair	event_handler ||| string $event_name1	count=1
function_name	implémente ||| uopz	count=1
function_name	[function_name_1] paramètre facet.date.end ||| [function_name_1] [function_name_2]	count=1
namespace	chaîne string par ||| function	count=1
return	et crée un tableau ||| array	count=1
namespace	à pclose() hormis ||| function	count=1
function_name	chaîne à guillemets ||| imap qprint	count=1
function_name	algorithmes de chiffrement ||| algorithms	count=1
arg_pair	exp ||| number $exp	count=1
arg_pair	automatiquement sa localisation ||| string $location	count=1
function	ligne [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=9
return	de ||| mongodb	count=1
function_name	liste les [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	une uri d'espace ||| elements	count=1
arg_pair	=?iso-8859-1?... ||| string $field_value	count=1
function_name	l'identifiant de ||| pid	count=1
return	d'attente ||| void	count=1
return	capture de la totalité ||| resource	count=1
arg_pair	à des enregistrements existantes ||| array $columns	count=1
function_name	qui s'y ||| mailparse uudecode	count=1
return	d'une chaîne de caractères ||| sdo_das_xml_document	count=1
function_name	élément avec un ||| element by	count=1
function_name	session ||| session get	count=1
function_name	à un serveur mysql ||| mysql	count=1
function_name	couleur bleue ||| blue primary	count=1
return	en ||| void	count=3
function_name	l'endroit où les ||| fann	count=1
return	à envoyer au client ||| bool	count=1
namespace	des objets splsubject ||| splobserver	count=1
function_name	la racine ||| root data	count=1
function_name	dictionnaire à utiliser pour ||| enchant	count=1
function_name	résultat mnogosearch ||| udm get	count=1
function_name	format pkcs#12 ||| openssl pkcs12 export	count=1
namespace	dans le tampon ||| eventbuffer	count=1
function_name	patch et ||| xdiff file patch	count=1
function_name	serveur sans attendre le ||| pg send	count=1
arg_pair	champ donné ||| string $fieldname	count=1
function_name	base de données interbase ||| ibase	count=1
function_name	document xml ||| merge	count=1
function_name	à ajouter les variables ||| add vars	count=1
function	noeuds [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	champs colonnes de la ||| dbase	count=1
arg_pair	image depuis un fichier ||| string $filename	count=1
function_name	sybase va ||| sybase	count=1
arg_pair	dans subject en ||| mixed $subject	count=1
function_name	de la [function_name] ||| [function_name]	count=2
function_name	noms ||| names	count=2
namespace	phar sauvera ses ||| phar	count=1
function_name	est ||| element by id	count=2
return	cette fonction analyse ||| bool	count=1
function_name	secondes ||| max poll time	count=2
arg_pair	choisit le fichier qui ||| int $dictionary_link	count=1
function_name	de l'étape [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	session curl ||| curl setopt	count=1
return	est similaire ||| string	count=2
function_name	appelant la fonction eio_poll() ||| eio nreqs	count=1
function_name	vecteur d'entrée ||| input	count=1
function_name	[function_name_1] à l'identifiant ||| [function_name_1] [function_name_2]	count=1
return	forme en ||| void	count=1
return	retourne ||| bool	count=1
function_name	de chargement ||| set default	count=1
function_name	clé soundex de la ||| soundex	count=1
function_name	alerte ||| warning callback	count=2
return	cette méthode vérifie ||| bool	count=1
function_name	par ||| entry compressionmethod	count=2
function_name	cette fonction peut ||| set module	count=1
function_name	définit le [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	un ||| by id	count=4
function_name	la géométrie de la ||| page	count=1
function_name	connexion en cas ||| connect	count=1
namespace	curseur est ||| mongocursorinterface	count=1
return	le client ||| int	count=1
return	une ||| int	count=2
arg_pair	et ||| resource $connection_id string $qualifier	count=1
function_name	maximale en ||| peak	count=1
function_name	le bytecode d'une classe ||| bcompiler write class	count=1
function_name	le suivi ||| trace	count=1
function_name	sert ||| shmop	count=1
function_name	de connexion en cas ||| yaz connect	count=1
function_name	les en-têtes [function_name_2] ||| [function_name_2] response [function_name_1]	count=2
function_name	la méthode de ||| compressionmethod	count=1
function_name	code d'erreur comme ||| socket strerror	count=1
function_name	de mémoire ||| shmop	count=1
arg_pair	propriété hwnd de ||| int $client_area	count=1
arg_pair	seconde contient le contenu ||| mongodb $db string $prefix	count=1
arg_pair	dans subject ont été ||| mixed $subject int $count	count=1
function_name	pour définir ||| set module	count=1
arg_pair	l' index à la ||| mixed $index	count=1
function_name	l'identifiant de ||| id	count=2
function_name	la fréquence en ||| term frequency	count=2
function_name	erreurs ||| error code	count=1
function_name	- ax || ||| least squares by factorisation	count=1
function_name	les composants qui sont ||| newt form	count=1
function_name	motif ||| ps begin pattern	count=1
return	jeu de ||| string	count=1
rest	au [function_2] ||| [return_1] [function_2]	count=1
function_name	de ||| eio set max poll time	count=2
arg_pair	dernière modification d'un ||| float $mtime int $pri	count=1
arg_pair	paramètres font et size ||| float $fontsize	count=1
function_name	ouvre [function_name_2] ||| function resource [function_name_2] module [function_name_1] string $algorithm string $algorithm_directory	count=1
namespace	être utilisée ||| pharfileinfo	count=1
function_name	[function_name_1] les ||| [function_name_2] [function_name_1]	count=6
function_name	fois) ||| end	count=1
return	composants qui avaient été ||| void	count=1
function_name	une peinture à l'huile ||| oil paint image	count=1
function_name	assigne ||| event buffer base set	count=1
function_name	cette fonction ré-initialise toutes ||| reset	count=1
namespace	ou d'un dossier sur ||| function	count=1
namespace	ou pas pour un ||| function	count=1
return	de l'itérateur ||| void	count=1
arg_pair	à un niveau de ||| resource $p	count=2
function_name	de la syntaxe ||| check syntax	count=1
function_name	dossier dans la copie ||| mkdir	count=1
function_name	dans un fichier ||| metadata	count=1
arg_pair	seconde contient le ||| string $prefix	count=1
namespace	tous les composants qui ||| function	count=1
function_name	retourne la définition ||| meta data	count=1
function_name	première paire clé/valeur de ||| first	count=1
function_name	la ||| cancel monitor	count=2
function_name	retourne la clé suivante ||| dba nextkey	count=1
function_name	toutes les valeurs de ||| get values	count=1
return	de 9 miniatures de ||| bool	count=1
arg_pair	propriété hwnd de ||| int $window_handle	count=1
function_name	phar quand il est ||| map phar	count=1
function_name	[function_name_1] schéma de ||| [function_name_1] [function_name_2]	count=1
arg_pair	que ||| int $day int $year	count=1
function_name	à la ||| db2 escape string	count=1
return	l'appelant ||| long	count=2
function_name	tous les composants qui ||| newt form	count=1
return	ressources mémoires ||| void	count=1
function_name	timer à utiliser ||| timer	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] create string $pathname [arg_pair_2]	count=12
function_name	le fichier ||| set metadata	count=1
return	fichiers encodés ||| array	count=1
function_name	retourne la valeur de ||| get errno	count=1
function_name	crée une paire de ||| stream socket pair	count=1
function_name	ajoute une balise ||| add	count=1
function_name	tests sur l'index ||| uintersect assoc	count=1
function_name	effectue une équivalence de ||| variant eqv	count=1
function_name	fonction ||| mysql	count=1
function_name	protéger tous les caractères ||| escape string	count=1
function_name	et extrait dans ||| mailparse uudecode	count=1
function_name	fourni par ||| add	count=1
function_name	est ||| id	count=1
function_name	la sous-chaîne spécifiée ||| substring data	count=1
function_name	récupère la résolution de ||| getimageresolution	count=1
function_name	défini ||| error log	count=2
arg_pair	/status ||| string $status	count=1
function_name	de forcer la date ||| touch	count=1
function_name	type [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	avec les ||| set	count=1
function_name	à la forme ||| newt form	count=1
return	tableau associatif avec les ||| array	count=1
function_name	[function_name] générer ||| get [function_name]	count=1
arg_pair	remplissage à un ||| resource $p	count=1
function_name	de rappel ||| event buffer set callback	count=1
arg_pair	choisit le fichier ||| int $dictionary_link string $file	count=1
function_name	paramètres du serveur ||| set server params	count=2
namespace	les données ||| eventbuffer	count=1
function_name	des informations issus ||| multi info read	count=1
arg_pair	parties ||| string $blob_id	count=1
arg_pair	une sauvegarde xml ||| string $xml_file	count=1
function_name	à l'historique d'erreur ||| error	count=1
function_name	pour la fragmentation ||| highlight regex pattern	count=1
namespace	[namespace] null ||| [namespace]	count=1
function_name	d'instance xml ||| load	count=1
function_name	chaque requête [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	l'échelle du document ||| scale	count=1
function	[function_name_1] la ligne ||| [function_name_1] [arg_pair_2]	count=1
return	caractères de ||| string	count=1
arg_pair	une base [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	qui sera démarré ||| ps add launchlink	count=1
function_name	une page ||| pdf open pdi page	count=1
namespace	des différences ||| xmldiff\file	count=1
function_name	prend plus ||| max	count=1
namespace	est identique à ||| function	count=1
function_name	restaure la valeur originale ||| restore	count=1
function_name	compressé ||| gzclose	count=1
namespace	la forme en ||| function	count=1
arg_pair	depuis un évènement bufferisé ||| int $data_size	count=1
function_name	fonction cubrid_lob2_tell64() est utilisée ||| cubrid lob2 tell64	count=1
function_name	compression utilisée sur le ||| entry compressionmethod	count=1
function_name	retourne ||| px get	count=1
arg_pair	un fichier de base ||| array $options	count=1
function_name	mate de l'image ||| image matte	count=2
namespace	de la [namespace] ||| [namespace]	count=3
function_name	les caractères spéciaux d'une ||| escape	count=1
arg_pair	centrée sur les coordonnées ||| int $width	count=1
function_name	valeur de ||| path	count=1
function_name	possède des ||| has	count=1
namespace	fois où ||| ev	count=2
arg_pair	jours ||| int $day	count=1
function_name	lorsque ||| set	count=1
function_name	récupère les [function_name_2] ||| [function_name_1] external [function_name_2]	count=1
return	toute les commandes de ||| bool	count=1
arg_pair	des données entre ||| callable $callback string $data	count=1
function_name	[function_name_1] serveur qui ||| [function_name_2] [function_name_1]	count=1
function_name	utilisé pour tracer ||| maxdb debug	count=1
function_name	enregistre le ||| register	count=1
function_name	protège les caractères de ||| escape	count=1
function_name	lit le certificat ||| openssl pkcs12 read	count=2
arg_pair	racine jusqu'à la catégorie ||| string $category	count=1
function_name	en ||| form	count=1
function_name	fichier fourni et ||| mailparse uudecode all	count=1
function_name	pour être utilisé ||| set	count=1
arg_pair	event_add() ||| mixed $fd	count=1
arg_pair	la fonction cubrid_lob2_bind() ||| string $bind_value_type	count=1
arg_pair	nécessaire à la plupart ||| string $character_set	count=1
function_name	gestionnaire d'instructions exécutables de ||| set processing instruction handler	count=1
arg_pair	/etc/hosts.deny pour vérifier si ||| string $user bool $nodns	count=1
function_name	si elle ||| poll	count=1
return	valeur de la ||| string	count=1
arg_pair	la position numérique de ||| string $encoding	count=1
function_name	une ||| socket shutdown	count=1
function_name	d'arrière-plan de l'image ||| trim image	count=2
function_name	par la fonction dbplus_xlockrel() ||| xunlockrel	count=1
function_name	s'y trouvent ||| all	count=1
function_name	retourne la taille décompressée ||| zip entry filesize	count=1
function_name	analyseur à ||| bbcode set arg parser	count=1
namespace	avaient ||| function	count=1
function_name	à la forme ||| form	count=1
function_name	[function_name_1] genre ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] lignes à ||| [function_name_2] [function_name_1]	count=4
arg_pair	pour un ||| mixed $callback mixed $arg	count=1
function_name	[function_name_1] alpha ||| [function_name_2] [function_name_1]	count=4
function_name	group cache percent value ||| group cache percent	count=1
function_name	l'historique d'erreur [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de caractères pour ||| to string	count=1
function_name	à ||| escape string	count=2
function_name	configuration du cookie de ||| get cookie params	count=1
function_name	la classe est itérable ||| is iterateable	count=1
function_name	les bits d'exécution des ||| chmod	count=1
function_name	d'activation pour la couche ||| activation function	count=1
function_name	un dictionnaire ||| enchant broker	count=1
function_name	gestionnaire ||| handler	count=7
function_name	plusieurs serveurs ||| servers	count=1
function_name	phar est compressé avec ||| is compressed	count=1
function_name	un ||| load	count=1
function_name	définit [function_name_2] ||| [function_name_1] [function_name_2]	count=17
function_name	statistiques ||| stats	count=4
function	[function_name_1] exp ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	exécute la commande command ||| string $command	count=1
function_name	calcule l'arc sinus de ||| asin	count=1
function_name	retourne la chromacité ||| get image	count=1
namespace	fait que ||| function	count=1
function_name	passé à une nouvelle ||| new	count=1
return	lorsque la ||| void	count=1
function_name	exe ou ||| exe footer	count=1
namespace	paramètre ||| eventbuffer	count=1
return	d'un serveur de ||| bool	count=1
namespace	fonction est identique ||| function	count=1
function_name	de la méthode exception::__construct() ||| previous	count=1
function_name	couches cachées ||| hidden	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] fetch object [arg_pair_2]	count=2
function_name	de flux à ||| stream	count=1
function_name	de ||| set using	count=1
function_name	sybase associé à l'identifiant ||| sybase	count=1
namespace	pour l'utilisateur spécifié par ||| function	count=1
function_name	format de l'image ||| format	count=1
return	false ||| void	count=1
arg_pair	la fonction filter_var() ||| array $data mixed $definition	count=1
function_name	de conteneur de ||| set default	count=1
function_name	contient la ligne ||| fetch	count=2
arg_pair	value ||| string $key int $value	count=1
return	force l'écriture ||| bool	count=1
return	retourne l'identifiant généré ||| int	count=1
function_name	[function_name_1] mémoire ||| [function_name_1] peak [function_name_2]	count=1
function	[function_name_1] la connexion ||| [function_name_1] resource $connection [arg_pair_2]	count=3
arg_pair	la position de ||| string $charset	count=1
arg_pair	en cache une variable ||| string $key	count=1
namespace	une ||| weakref	count=1
arg_pair	contenu des ||| string $prefix	count=1
function_name	version formatée du nombre ||| money format	count=1
arg_pair	couleur color dans l'image ||| int $color	count=1
namespace	vérifie ||| spldoublylinkedlist	count=1
arg_pair	boost pour un champ ||| float $fieldboostvalue	count=1
function_name	avec un ||| get element by id	count=1
function_name	[function_name] associée au ||| [function_name]	count=3
function_name	[function_name_1] [function_name_2] ||| [function_name_2] fetch [function_name_1]	count=4
function_name	couleur de peinture courante ||| rgbstroke	count=1
function_name	la dernière erreur associée ||| last error	count=1
function_name	et libère toutes ||| event base free	count=1
function_name	la couleur de fond ||| image background color	count=1
function_name	retourne la chaîne ||| get	count=1
function_name	est un alias de ||| is	count=1
function_name	geoip_setup_custom_directory() va modifier ||| geoip setup custom directory	count=1
function_name	instance harufont ||| font	count=1
function_name	rappel à [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	fonction est variadique ||| is variadic	count=2
return	un algorithme ||| void	count=1
function_name	au sein ||| compressed	count=1
function_name	dessous ||| ps continue	count=1
arg_pair	sur le serveur ||| resource $session	count=1
return	libeio tant que ||| bool	count=1
function_name	lit le bytecode ||| bcompiler	count=1
function_name	utf-8 ||| pdf utf8	count=1
namespace	chemin d'un fichier ||| splfileinfo	count=1
function_name	[function_name] où ||| swirl [function_name]	count=1
function_name	nombre de lignes dans ||| odbc num rows	count=1
arg_pair	transformer la chaîne str1 ||| string $str1	count=1
function_name	réseau neuronal ||| fann create	count=1
arg_pair	le chemin path ||| int $flags	count=1
function_name	un test sur ||| fann test	count=1
arg_pair	fichiers local ||| string $local_file	count=1
arg_pair	une source de données ||| string $password int $cursor_type	count=1
function_name	route ||| add route	count=1
function_name	infile [function_name] précédemment définit ||| [function_name] infile	count=1
arg_pair	/status ||| resource $fdf_document string $status	count=1
function_name	eventbuffer ||| buffer	count=1
function_name	du tampon ||| add	count=1
function_name	cette ||| call	count=1
namespace	evstat watcher ||| evstat	count=2
function_name	transaction en [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	le paramètre patch et ||| xdiff file patch	count=1
function_name	suivante de la ||| next	count=1
function_name	ce gestionnaire curl ||| curl	count=1
function_name	geoip_country_code3_by_name() retourne les ||| geoip country code3 by	count=1
function_name	[function_name] d'exécution d'une ||| [function_name]	count=3
function_name	canal ||| channel	count=2
function_name	une image ||| image file	count=1
function_name	[function_name_1] est annulable ||| [function_name_2] [function_name_1]	count=1
function_name	et [function_name] ||| [function_name]	count=1
function_name	système ||| fstatvfs	count=1
function_name	pdf d'entrée ||| pdf get pdi value	count=1
function_name	méthode phar::startbuffering() peut fournir ||| buffering	count=1
arg_pair	un bloc de contenu ||| string $blockname int $contents	count=1
function_name	de chargement ||| set default stub	count=1
arg_pair	les ||| int $dbase_identifier array $record	count=1
function_name	rewinddir() ||| dir rewinddir	count=1
return	à envoyer ||| bool	count=1
arg_pair	la colonne ||| resource $stmt mixed $column	count=2
function_name	la première ligne ||| first	count=1
function_name	session ||| enchant dict is in session	count=2
namespace	le pointeur interne au ||| solrdocument	count=1
arg_pair	fonction cubrid_lob2_bind() ||| string $bind_value_type	count=1
function_name	[function_name_1] la variable ||| [function_name_2] [function_name_1]	count=1
function_name	cubrid_error_msg() ||| msg	count=1
function_name	le flux ||| copy to stream	count=1
function_name	tag image ||| picture	count=1
function_name	[function_name_1] [function_name_2] étendus d'une entrée définie ||| [function_name_1] external [function_name_2]	count=2
return	fonction rewinddir() ||| void	count=1
arg_pair	défini le changement de ||| resource $ann float $sarprop_step_error_shift	count=1
function_name	de la base ||| dbase numfields	count=1
namespace	nouveau timestamp ||| mongotimestamp	count=1
return	qui ne diffère du ||| int	count=1
function_name	carte de couleurs ||| image colormap	count=2
namespace	sur le serveur de ||| memcache	count=1
function_name	une ||| apc add	count=1
function_name	[function_name_1] l'intervalle ||| [function_name_1] image channel [function_name_2]	count=1
function	le texte [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	search [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
return	excepté le fait que ||| int	count=1
arg_pair	chemin pathname ||| resource $inotify_instance string $pathname	count=1
arg_pair	un nom de domaine ||| string $domain	count=1
function_name	crée un ||| merge	count=1
function_name	à cette ||| call	count=1
function_name	incluant les composants qui ||| newt form	count=1
namespace	à l'échelle les images ||| imagick	count=1
arg_pair	nécessaire à la ||| string $character_set	count=1
return	donné ||| domelement	count=1
function_name	à ||| type	count=2
function_name	sert à fermer ||| shmop close	count=1
namespace	fichier ||| splfileobject	count=3
namespace	les composants qui sont ||| function	count=1
function_name	d'erreur [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	[function_name_1] commentaire ||| [function_name_2] [function_name_1]	count=1
function_name	la valeur ||| include	count=1
function_name	retourne le nombre de ||| ifx num fields	count=1
arg_pair	sequence donnée ||| resource $imap_stream string $sequence	count=1
function_name	http ||| http	count=1
function_name	courante pour ||| imagesetbrush	count=1
function_name	de division exacte ||| gmp divexact	count=1
function_name	la fonction loadfromstring() ||| save to	count=1
function_name	contrôle avec la ||| gupnp control point new	count=1
function_name	de version ||| version	count=3
arg_pair	ajoute un profile ||| string $name string $profile	count=1
arg_pair	sont ||| int $second	count=1
function_name	[function_name_1] classe ||| [function_name_1] declaring [function_name_2]	count=1
function_name	compare les ||| version compare	count=1
return	dans ||| string	count=1
namespace	cette fonction est en ||| function	count=2
arg_pair	de résultat dans un ||| resource $result int $rownumber	count=1
function_name	de l'objet sous la ||| to	count=1
function_name	avec un patch binaire ||| patch binary	count=1
function_name	lue dans ||| mysql	count=1
namespace	base de données ||| mongocursor	count=1
function_name	plus de ||| eio set max poll time	count=1
function_name	récupère la valeur ||| get parameter	count=1
arg_pair	des fichiers ||| mongodb $db	count=1
function_name	l'échelle les sorties ||| scale output	count=1
function_name	plus de ||| max poll	count=1
function_name	le nombre de champs ||| sybase num fields	count=1
function_name	s'interrompt si elle ||| set max poll	count=1
function_name	fonction ||| rewind	count=1
function_name	texte à la ||| ps	count=1
function_name	des messages [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	donné ||| element by	count=1
arg_pair	l'accès au service daemon ||| string $daemon	count=1
arg_pair	basé sur ||| string $src string $diff	count=2
function_name	schéma d'entrelacement de l'image ||| image interlace scheme	count=1
arg_pair	une fonction de rappel ||| resource $proxy mixed $callback	count=1
function_name	dn dn ||| explode dn	count=1
return	méthode implémente un ||| void	count=1
function_name	si elle prend ||| poll	count=1
function_name	encodés ||| mailparse uudecode	count=1
namespace	xml ||| sdo_das_xml	count=1
function_name	serveur qui [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	exe ou ||| write exe	count=1
function_name	un format lisible par ||| string	count=1
arg_pair	connexion à l'historique système ||| string $ident	count=1
arg_pair	similaire à ingres_fetch_array() avec ||| int $result_type	count=1
function_name	un fichier qui ne ||| set metadata	count=1
function_name	binaire ||| blob	count=1
function_name	paramètres du ||| get params	count=2
function_name	les processus ||| proc	count=1
function_name	test sur un ||| fann test data	count=1
rest	et [function_2] ||| [function_2] [return_1]	count=3
function_name	geoip_country_code3_by_name() retourne les trois ||| country code3 by	count=1
function_name	le timestamp ||| timestamp	count=1
function_name	définit la valeur de ||| offset set	count=1
function_name	crée un nouveau contexte ||| context	count=1
function_name	[function_name_1] passé par ||| [function_name_1] [function_name_2]	count=4
function_name	parcourt un lot ||| size	count=1
function_name	les classes ||| construct	count=1
function_name	lit ||| get	count=8
namespace	assigné par le serveur ||| gearmanjob	count=1
function_name	la forme et tous ||| destroy	count=1
namespace	pour stocker des données ||| pharfileinfo	count=1
function_name	paramètres au ||| params	count=1
function_name	stocker les itérateurs ||| array iterator	count=1
namespace	similaire ||| function	count=3
function_name	méthode d'interpolation ||| interpolate method	count=2
function_name	retourne le nombre de ||| get field count	count=1
namespace	doit être ||| collectable	count=1
function_name	retourne [function_name_2] ||| [function_name_1] [function_name_2]	count=109
namespace	ceux de lecture seule ||| pharfileinfo	count=1
namespace	une capture ||| function	count=1
function_name	à de nouvelles coordonnées ||| moveto	count=1
function_name	un patch ||| xdiff string patch	count=1
function_name	crée un objet char ||| create char	count=1
function_name	openssl_get_cert_locations() retourne ||| openssl get cert locations	count=1
function_name	crée un objet blob ||| create blob	count=1
function_name	un ||| is	count=2
arg_pair	paramètre link ||| resource $link	count=1
function_name	dernier accès au fichier ||| get atime	count=1
arg_pair	la colonne indiquée ||| mixed $column	count=2
return	base de données ||| int	count=1
function_name	document dom et la ||| import dom	count=1
function_name	le socket socket les ||| socket	count=1
function_name	précharger par les ||| prefetch	count=1
function_name	script ||| include	count=1
arg_pair	principal ||| resource $handle string $principal	count=1
return	le niveau de ||| int	count=1
function_name	récupère ||| get field	count=2
function_name	récupère ||| fann get	count=4
arg_pair	jeu de résultats sous ||| string $classname	count=1
namespace	du fichier fourni et ||| function	count=1
function_name	[function_name_1] document fdf ||| [function_name_2] set [function_name_1]	count=1
return	et les ||| mongocommandcursor	count=1
arg_pair	paramètre oid ||| resource $conn_identifier string $oid	count=1
return	tampon de sortie ||| string	count=1
function_name	résultants et les ||| batch	count=1
arg_pair	d'octets str ce qui ||| string $str	count=1
function_name	[function_name_1] de rappel ||| [function_name_1] created [function_name_2]	count=1
function_name	similaire ||| get element	count=1
function_name	plus proche ||| imagecolorclosestalpha	count=1
function_name	crée une paire ||| create pair	count=1
function_name	mois month de ||| days in month	count=1
arg_pair	seuil ||| resource $ann float $sarprop_step_error_threshold_factor	count=1
arg_pair	que ||| int $hour int $minute	count=1
arg_pair	en une ||| bool $exclusive	count=1
namespace	contenu des ||| mongogridfs	count=1
function_name	comme une pile ||| array	count=1
function_name	chaîne de ||| set xmlversion	count=1
function_name	le type du ||| get type	count=2
arg_pair	dans un ||| string $index	count=1
namespace	jeu ||| gmagickdraw	count=1
function_name	les éléments de ||| all	count=1
function_name	la version [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	toutes les connexions ouvertes ||| connections	count=1
function_name	la valeur ||| set include path	count=1
function_name	ligne de résultat ||| fetch	count=3
function_name	réinitialise ||| reset	count=1
function_name	effectue une recherche ||| search	count=2
arg_pair	valeur entière ou double ||| number $increment	count=1
function_name	d'activation pour le ||| activation function	count=1
function_name	tous les fichiers ||| all	count=1
function_name	avec des tests ||| array uintersect assoc	count=1
function_name	pour croitre ||| increase factor	count=1
function_name	bases ||| dbs	count=3
arg_pair	au format csv ||| string $escape	count=1
arg_pair	fonction cubrid_lob2_bind() ||| mixed $bind_value	count=1
return	et tous les ||| void	count=1
function_name	la fonction ||| fbsql field type	count=1
function_name	[function_name] à ||| set [function_name]	count=1
arg_pair	sur ||| string $pattern string $string	count=1
function_name	dernière opération nis ||| yp errno	count=2
function_name	de l'attribut dans l'espace ||| attribute	count=1
arg_pair	de fichiers ||| int $pri	count=1
function_name	sybase va tenter lorsqu'il ||| sybase	count=1
function_name	protège ||| pg escape string	count=2
function_name	retourne la hauteur ||| get image height	count=2
function_name	elle ||| set max poll	count=1
function_name	sans attendre ||| send	count=1
function_name	tri du résultat ||| sort field	count=1
function_name	retourne ||| pdf get	count=2
function	instance glo [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	cette fonction crée ||| create entity	count=1
return	le code de ||| int	count=1
function_name	image ||| ping image	count=1
arg_pair	une colonne ||| mixed $column mixed $param	count=1
function_name	spécifié ||| uopz overload	count=1
arg_pair	page dans le ||| float $ury int $page	count=1
function_name	différence à implémenter par ||| diff	count=1
return	méthode ||| bool	count=3
function_name	a plus de ligne ||| fetch column	count=1
return	query sur ||| resource	count=1
arg_pair	[arg_pair_1] données data ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	les options ||| string $options	count=1
function_name	la taille ||| size	count=17
function	[function_name_1] ch ||| [function_name_1] resource $ch [arg_pair_2]	count=1
arg_pair	seuil ||| float $sarprop_step_error_threshold_factor	count=1
return	pour ||| void	count=4
function_name	vérifier la présence d'événements ||| set max dispatch interval	count=1
function	[function_name_1] [arg_pair_2] mémoire ||| [function_name_1] remove var [arg_pair_2]	count=3
function_name	réponse ||| response	count=4
function_name	à la fonction ||| mysql field type	count=1
function_name	le groupe d'appartenance ||| group	count=1
function_name	complétée jusqu'à la ||| array pad	count=1
arg_pair	à memcached::set() ||| int $expiration	count=1
function_name	pour gérer les ||| set error	count=1
function_name	son utilisation ||| fcache	count=1
return	cette fonction ||| int	count=1
arg_pair	dans la largeur spécifiée ||| string $text float $width	count=1
arg_pair	spécifié par path ||| string $path	count=1
namespace	champs colonnes de la ||| function	count=1
function_name	sur ||| compressionmethod	count=1
return	retourne la dernière erreur ||| int	count=1
function_name	classe personnalisée ||| file class	count=1
function_name	les données ||| send	count=1
function_name	cette fonction ||| element ns	count=1
function_name	plus de ||| max poll time	count=1
function_name	analyse une liste d'adresses ||| rfc822 parse	count=1
function_name	l'on doit rassembler les ||| merge contiguous	count=1
namespace	en-têtes ||| eventhttprequest	count=1
function_name	colonnes de la ||| numfields	count=1
function_name	premier ||| ldap first	count=1
function_name	sarprop ||| fann set sarprop	count=3
function_name	lit le ||| ob get	count=1
namespace	un arbre de ||| sdo_das_xml	count=1
arg_pair	caractères ? ||| resource $connection	count=1
return	le supporte et ||| string	count=1
function_name	comparaison insensible à la ||| strcasecmp	count=1
namespace	fonctionne avec les processus ||| function	count=1
arg_pair	flux imap ||| string $criteria	count=1
namespace	définir les ||| mongolog	count=1
namespace	du ||| gmagickdraw	count=2
arg_pair	fonction filter_var() ||| array $data mixed $definition	count=1
namespace	sein d'une archive ||| pharfileinfo	count=1
namespace	date ||| gmagick	count=1
function_name	options pprésentes ||| resolv conf	count=1
function_name	[function_name_1] images en ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] de mémoire ||| [function_name_1] peak [function_name_2]	count=1
function_name	une ligne sur ||| line	count=1
function_name	le sinus ||| sin	count=1
function_name	libère les ||| destroy	count=1
function_name	[function_name_1] [function_name_2] page ||| harupage bool [function_name_2] [function_name_1]	count=2
function	[function_name_1] l'encodage pour ||| [arg_pair_2] [function_name_1]	count=1
function_name	libère un ||| free res	count=1
namespace	traitement appliqué à différents ||| imagick	count=1
function_name	de tri ||| sort	count=1
arg_pair	cette fonction est identique ||| string $pattern string $string	count=1
function_name	chaîne à guillemets string ||| qprint	count=1
function_name	est l'espace [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	d'attente s'interrompt ||| set max poll	count=1
function_name	défini la dynamique ||| momentum	count=1
function_name	demande radius consiste ||| radius create	count=1
function_name	ligne précédente de la ||| dbplus prev	count=1
arg_pair	occurrence de needle ||| string $haystack	count=1
function_name	la compression ||| get compression	count=1
function_name	des informations ||| curl multi info read	count=1
function_name	être ||| set module	count=2
namespace	messages retournés par ||| function	count=1
function_name	méthode de ||| zip entry compressionmethod	count=1
function_name	renvoie la ||| ftell	count=1
return	a terminé ||| void	count=1
arg_pair	réponse au client de ||| string $details	count=1
function_name	connection ||| pg connection	count=1
function_name	préférence pour un dictionnaire ||| enchant broker set	count=1
arg_pair	définir la valeur de ||| mixed $value	count=1
function_name	si un ||| is	count=1
arg_pair	copie des données ||| callable $callback string $data	count=1
arg_pair	ou le publier à ||| sammessage $msg	count=1
function_name	antislashs devant ||| escape	count=1
arg_pair	pour établir l'environnement pour ||| string $dbname	count=1
function_name	par objet ||| set	count=1
return	l'écriture de tous les ||| bool	count=1
arg_pair	la fonction cubrid_bind() est ||| mixed $bind_value string $bind_value_type	count=1
function_name	un fichier qui ||| metadata	count=1
function_name	seule image ||| stereo image	count=1
namespace	forme de ||| solrparams	count=1
function	[function_name_1] index spécifié ||| [function_name_1] resource $result [arg_pair_2]	count=1
arg_pair	la table tablename ||| string $database string $tablename	count=1
arg_pair	fait que les paramètres ||| int $day	count=1
function_name	écrits ||| write	count=1
namespace	tidy ||| tidy	count=1
function_name	défini la fraction ||| change fraction	count=1
function_name	le nom du ||| name	count=1
function_name	blob à remplir avec ||| blob	count=1
function_name	memcached::append() mais ||| append by	count=1
arg_pair	db2 universal database ibm ||| string $username	count=1
function_name	la ||| escape string	count=2
return	déplace vers ||| void	count=1
arg_pair	d'une requête ||| string $name	count=1
function_name	bibliothèques clientes oracle après ||| oci	count=1
arg_pair	à ||| int $minute	count=1
arg_pair	un fichier de ||| int $operation	count=1
arg_pair	en tant qu'options ||| resource $pdfdoc string $tag	count=1
function_name	les bords et remplit ||| pdf closepath fill stroke	count=1
function_name	différence à implémenter ||| diff	count=1
function_name	identifiant permettant ||| id	count=1
function_name	les ressources ||| form destroy	count=1
function_name	dernier [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function	[function_name_1] [arg_pair_2] de ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	cubrid et sauvegarde leurs ||| resource $lob_identifier	count=1
function_name	les métadonnées et ||| construct	count=1
return	méthode vérifie si ||| bool	count=1
function_name	[function_name_1] sur l'attribut ||| [function_name_2] [function_name_1]	count=1
arg_pair	sequence donnée ||| string $sequence	count=1
function_name	la commande préparée stmt ||| mysqli stmt	count=1
function_name	la file d'attente ||| poll time	count=1
namespace	place des ||| function	count=1
namespace	fois où la ||| ev	count=2
arg_pair	la suppression ||| array $deleteoptions	count=1
function	[function_name_1] donnée data ||| [arg_pair_2] [function_name_1]	count=1
function_name	retourne la largeur ||| get image width	count=1
function_name	crée un fichier ||| mknod	count=1
function_name	retire les objets d'un ||| remove all	count=1
function_name	de l'objet slob ||| slob	count=1
function_name	récupérer les données blob/clob ||| cubrid lob	count=1
function_name	fonction geoip_org_by_name() ||| org by	count=1
function_name	une connexion à ||| get	count=1
arg_pair	[arg_pair_1] la suppression ||| [arg_pair_1] [arg_pair_2]	count=3
namespace	une seule tâche en ||| gearmanclient	count=1
function_name	insère l'entrée décrite par ||| insert	count=1
arg_pair	prépare une ||| int $trans_args resource $link_identifier	count=1
return	classe domnodelist contenant tous ||| domnodelist	count=1
function	un tableau php var_array [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	d'erreur de la dernière ||| errno	count=1
function_name	contexte actif ||| active symbols	count=1
function_name	composants qui ||| newt	count=2
arg_pair	vérifier si [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] statut http ||| [function_name_2] [function_name_1]	count=1
return	numéro de ||| int	count=1
arg_pair	depuis les données fournies ||| string $optlist	count=1
arg_pair	sur le système de ||| resource $sftp	count=1
function_name	le paramètre patch et ||| file patch	count=1
function_name	été ajoutés à la ||| newt	count=1
namespace	dans l'archive ||| ziparchive	count=1
arg_pair	d'une base ||| string $database	count=1
function_name	arbre de ||| load	count=1
namespace	la base de ||| tokyotyrant	count=1
arg_pair	à la ||| int $day int $year	count=1
function_name	ferme ||| ps close	count=1
arg_pair	que les paramètres passés ||| int $hour int $minute	count=1
namespace	déplace ||| eventbuffer	count=1
function_name	de tidy ||| tidy	count=1
function_name	définit la position haute ||| set	count=1
function_name	curseur typiquement parcourt ||| size	count=1
function_name	[function_name] et ||| [function_name]	count=3
function	flux [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	d'un nouvel ||| int $y	count=1
namespace	si le curseur ||| mongocursorinterface	count=1
function_name	la variable associée ||| ucache cas	count=1
return	être appelé une fois ||| void	count=1
namespace	une ||| collectable	count=1
arg_pair	que les ||| int $second int $month	count=1
namespace	de ||| samconnection	count=1
return	de pixels ||| string	count=1
function_name	bytecode [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	à la ||| domelement	count=1
function_name	fonction d'activation pour la ||| set activation function	count=1
function_name	à la fonction ||| fbsql field type	count=1
function_name	verrou ||| cubrid lock	count=1
function	[function_name_1] class ||| [arg_pair_2] [function_name_1]	count=3
function_name	timestamp unix ||| date to timestamp	count=1
function_name	et une uri d'espace ||| elements	count=1
function_name	agent émet une exception ||| set exception	count=1
arg_pair	résultats à une ||| resource $result	count=1
function_name	crée une ||| socket create	count=1
function_name	les processus ||| close	count=1
function_name	[function_name_1] tri ||| [function_name_2] [function_name_1]	count=3
function_name	durée ||| include	count=1
namespace	des caractères lors de ||| function	count=1
function_name	désigné par le ||| xattr	count=3
function_name	paramètre ||| facet	count=1
namespace	[namespace] un ||| [namespace]	count=6
arg_pair	de fichiers dans l'argument ||| mixed $fd int $pri	count=1
function_name	du cipher ||| cipher	count=1
function_name	z39.50 scan ||| scan	count=1
function_name	niveaux ||| preview	count=1
function_name	la prochaine [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	la fonction ||| gmmktime	count=1
function_name	mémoire occupée ||| imagepsfreefont	count=1
function_name	9 ||| preview images	count=2
function_name	l'on quitte le contexte ||| decl	count=1
function_name	suspend la [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	la requête request ||| string $request	count=1
function_name	retourne la trace de ||| get trace as	count=1
function_name	prochaine requête xpath ||| register xpath namespace	count=1
return	fin et que la ||| bool	count=1
function_name	selon l'uri de ||| lookup	count=1
function_name	dans le fichier ||| file	count=1
function_name	caractères brutes des termes ||| terms return raw	count=1
function_name	configuration tidy ||| tidy load config	count=1
function_name	[function_name] l'algorithme ||| mcrypt [function_name]	count=1
function_name	retourne un booléen ||| get terms	count=1
function	[function_name_1] le texte ||| [arg_pair_2] [function_name_1]	count=4
function_name	la longueur du ||| length	count=1
arg_pair	un tableau ||| array $except	count=2
function_name	du contenu du ||| get	count=1
function_name	d'une [function_name] tous les ||| strip [function_name]	count=1
function_name	un fichier ||| all	count=1
function_name	sont ||| newt form destroy	count=2
function	[function_name_1] x509cert et ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	des données entre ||| string $data	count=1
function_name	données blob/clob depuis la ||| lob	count=1
function_name	fonction retourne une référence ||| returns reference	count=1
function_name	le préfixe [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	d'un jeu de ||| resource $stmt	count=1
arg_pair	peuvent être invoquées avant ||| int $max_callbacks	count=1
namespace	tar ou zip ||| phardata	count=1
arg_pair	une commande et sépare ||| string $query	count=1
function_name	récupère le nom ||| get encoding name	count=1
function_name	[function_name_1] thread ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] crée ||| [function_name_2] [function_name_1]	count=2
function_name	le mode doit être ||| mode	count=1
function_name	contenant le ||| ingres	count=1
function_name	timestamp unix ||| timestamp	count=1
function_name	d'objets résultants ||| batch size	count=1
function_name	utilisé pour tracer ||| maxdb	count=1
function_name	statut de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	retourne un sommaire ||| imap fetch overview	count=1
arg_pair	que contrairement à strcmp() ||| string $str1 string $str2	count=1
arg_pair	image ||| resource $image string $filename	count=1
namespace	miniatures de l'image ||| imagick	count=1
namespace	fonction ||| domdocument	count=2
arg_pair	str ce qui n'est ||| string $str	count=1
function	[function_name_1] temporairement le ||| [function_name_1] [arg_pair_2]	count=1
function_name	récupère la valeur du ||| get	count=2
arg_pair	de la connexion mysql_connection ||| mixed $mysql_connection	count=1
function_name	recherche une police et ||| font	count=1
arg_pair	une ||| resource $connection	count=3
return	la première contient les ||| mongodb	count=1
function	[function_name_1] rouge vert ||| [arg_pair_2] [function_name_1]	count=3
function_name	pour gérer ||| set	count=1
function_name	recherche insensible à la ||| sql regcase	count=1
namespace	générateur ||| generator	count=2
function_name	de retour du réseau ||| fann create	count=1
namespace	paramètres ||| solrparams	count=1
function	[function_name_1] x509cert et ||| [function_name_1] parse [arg_pair_2]	count=2
function_name	tailles de clés supportées ||| mcrypt enc get supported key sizes	count=1
return	un tableau indexé ||| array	count=1
function_name	les entrées de ||| yp cat	count=1
arg_pair	un fichier vers le ||| string $filename	count=1
return	si le tableau ||| bool	count=1
function	[function_name_1] dans ||| [arg_pair_2] [function_name_1]	count=1
function_name	en incluant ||| form destroy	count=1
return	sur le ||| mixed	count=1
function_name	[function_name_1] [function_name_2] ||| string [function_name_2] [function_name_1]	count=9
return	qu'elle ignore la casse ||| int	count=1
arg_pair	l'activation de ||| mixed $condition	count=1
function_name	plusieurs canaux d'une image ||| image channel distortion	count=1
arg_pair	strcmp() elle ||| string $str1	count=1
function_name	clés ||| by key	count=2
arg_pair	deux ||| string $prefix	count=1
arg_pair	de la [arg_pair] ||| [arg_pair]	count=1
function_name	de la dernière commande ||| errno	count=1
namespace	de la classe ||| reflectionclass	count=1
function	image [arg_pair_2] ||| [function_name_1] resource $psdoc [arg_pair_2]	count=1
arg_pair	system v ||| int $perm int $auto_release	count=1
function	[function_name_1] path avec ||| [function_name_1] [arg_pair_2]	count=2
function_name	crée un document ||| merge	count=1
function_name	de facon numérique ||| values	count=1
function_name	serveur postgresql ||| pg	count=2
function_name	fonction imap_header() ||| imap rfc822	count=1
function_name	retourne la couleur ||| get color as	count=1
return	pour le dernier ||| int	count=1
function_name	retour de statut ||| status	count=1
namespace	détruire un bloc ||| function	count=1
arg_pair	de lecture/écriture nommé ou ||| bool $autounlock	count=1
function_name	un filtre de ||| image	count=1
return	boucle ||| bool	count=1
function_name	du script ||| set	count=1
function_name	segment du ||| chunk	count=1
arg_pair	message depuis le fichier ||| resource $mimemail mixed $filename	count=1
function_name	associatif en ||| assoc	count=1
return	ne doit pas ||| string	count=1
namespace	la valeur courante ||| harupage	count=1
function_name	récupère le [function_name_2] ||| [function_name_2] [function_name_1]	count=39
return	sauvegarde dans un fichier ||| int	count=1
arg_pair	un document ||| resource $fdf_document	count=1
function_name	définit le type ||| set type	count=2
arg_pair	une et retourne le ||| string $new_data2	count=1
function_name	maître à l'esclave ou ||| mysqlnd ms query	count=1
function_name	crée un ||| preview images	count=1
namespace	l'objet a ||| collectable	count=1
function_name	que ||| event	count=1
function_name	numérique qui améliore la ||| median	count=1
namespace	stocker une seule paire ||| memcached	count=1
namespace	constructeur de base ||| xmldiff\base	count=1
function_name	[function_name_1] d'une image ||| [function_name_2] [function_name_1]	count=6
function_name	script en cours ||| include	count=1
function_name	par la ||| newt form	count=1
arg_pair	une ||| resource $conn	count=1
function_name	sur le périphérique physique ||| sync	count=1
function_name	informations de version ||| rrd version	count=1
function_name	dénominateur du taux ||| denominator	count=1
function_name	définition de police de ||| font	count=1
function_name	pour changer les ||| set tag	count=1
arg_pair	une nouvelle ||| string $value	count=1
function_name	pour diriger ||| set multi	count=1
function_name	les statistiques du serveur ||| stats	count=1
namespace	forme et ||| function	count=1
namespace	les variables var ||| function	count=1
function_name	prend ||| set	count=1
return	toutes les fonctions liées ||| array	count=1
function_name	dernier identifiant autogénéré par ||| last insert	count=1
function_name	dictionnaire à utiliser ||| enchant broker	count=1
function_name	vérifier la présence ||| set max dispatch interval	count=1
function_name	de l'objet sous ||| to string	count=1
function_name	forme et tous ||| newt	count=1
return	retourne la ||| int	count=2
function_name	un token d'accès un ||| get access token	count=1
return	de l'image depuis le ||| string	count=1
function_name	spécifique ||| virtual	count=1
function_name	comme ||| push	count=1
function_name	bibliothèque ucd snmp ||| set quick print	count=1
function_name	nombre maximal de jokers ||| mlt max num tokens	count=1
function_name	pdf ||| pdf get	count=1
function_name	fonction est définie ||| is	count=1
arg_pair	fournir à ob_start() ||| string $contents int $status	count=1
function_name	pour définir ||| set file	count=1
function_name	forme ||| to	count=1
arg_pair	contient les métadonnées ||| string $prefix	count=1
function_name	nom de l'espace de ||| space	count=1
return	similaire à ||| int	count=1
function_name	un ||| string	count=2
namespace	phar actuelle sur ||| phar	count=1
function_name	du fichier ||| uudecode	count=1
function_name	fréquence maximale des ||| terms max	count=2
namespace	dans l'archive zip ||| ziparchive	count=1
function_name	spécifiées ||| imagefilledellipse	count=1
return	qui ||| void	count=5
function_name	fichier temporaire tous les ||| uudecode	count=1
function_name	ferme le ||| crack	count=1
function_name	la [function_name] ||| set text [function_name]	count=1
function_name	token d'accès un secret ||| access token	count=1
arg_pair	d'un fichier faisant que ||| int $length	count=1
function_name	l'endroit où ||| error	count=1
arg_pair	fusionne 3 chaînes en ||| string $new_data1	count=1
function_name	des fichiers ainsi que ||| chmod	count=1
namespace	le contenu courant ||| function	count=1
function_name	un fork dans ||| fork	count=1
function_name	ouvre le fichier ||| open	count=1
function	la puissance [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	transforme une ||| transform image	count=1
function_name	caractères courant et ||| iconv	count=1
return	file ||| void	count=1
namespace	que la base ||| mongocursorinterface	count=1
function_name	lit toutes les valeurs ||| get values	count=2
function_name	des informations ||| multi info	count=1
arg_pair	chaîne str après avoir ||| string $str string $encoding	count=1
function_name	récupère un ||| get method	count=1
namespace	courant ||| eventbuffer	count=1
function_name	fichier est [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la fréquence ||| term frequency	count=2
function_name	par ||| zip entry	count=1
arg_pair	[arg_pair_1] un ||| [arg_pair_2] [arg_pair_1]	count=6
function	spécifie [arg_pair_2] ||| [function_name_1] element [arg_pair_2]	count=2
arg_pair	à memcached::getdelayed() mais ||| bool $with_cas callable $value_cb	count=1
function_name	patch binaire ||| patch binary	count=2
function_name	retourne le code ||| get	count=1
arg_pair	de la valeur ||| resource $stmt	count=1
function_name	du texte à ||| show	count=1
namespace	objet gmagick ||| gmagick	count=1
function_name	ou non des méta-données ||| has metadata	count=1
function_name	caractères uri de l'élément ||| uri	count=1
function_name	commande sql ||| exec	count=1
return	simule la ||| void	count=1
function_name	objet depuis une ||| object	count=1
function_name	méthode ||| zip entry compressionmethod	count=2
function_name	analyse le [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	le ||| proc close	count=2
function_name	d'exécution des ||| chmod	count=1
function_name	et logique de ||| and	count=1
function	sauvegarde [arg_pair_2] ||| [function_name_1] string [arg_pair_2]	count=1
function_name	ajoute une tâche à ||| add	count=1
return	avec les ||| int	count=1
namespace	tar ou ||| phardata	count=1
namespace	l'espace ||| reflectionfunctionabstract	count=1
arg_pair	le rrd spécifié ||| string $file	count=1
arg_pair	dans un fichier local ||| resource $connection	count=1
namespace	de ||| splheap	count=1
function_name	le logo ||| logo guid	count=2
function_name	[function_name_1] preg_replace() mais ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] page courante ||| [function_name_2] [function_name_1]	count=1
return	d'une chaîne ||| sdo_das_xml_document	count=1
function_name	la prochaine requête xpath ||| register xpath namespace	count=1
function_name	les ticks-par-seconde [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] clientes oracle ||| [function_name_2] [function_name_1]	count=1
function_name	le mode ||| mode	count=2
return	incluant les ||| void	count=1
function_name	du tampon fourni ||| add	count=1
arg_pair	paramètre filename ||| string $mode	count=1
function_name	la limite inférieure dans ||| get terms include lower bound	count=1
function_name	les composants qui ||| newt	count=2
function_name	la clé soundex de ||| soundex	count=1
function_name	tampon de [function_name] associé ||| get [function_name]	count=1
namespace	récursion ||| ev	count=1
arg_pair	par le paramètre timestamp ||| int $format	count=1
arg_pair	windows ||| resource $handle int $operation	count=1
function_name	le fait qu'elle fonctionne ||| close	count=1
function_name	sqlite identifiée ||| sqlite close	count=1
namespace	est définie comme ||| function	count=1
function_name	grégorien : 4714 ||| gregoriantojd	count=1
function_name	dans un objet slob ||| slob	count=1
namespace	est à la fin ||| mongocursorinterface	count=1
arg_pair	nuls ||| int $length	count=1
namespace	une image ||| imagick	count=1
namespace	ou false si ||| function	count=2
namespace	en ||| ev	count=1
function_name	ligne ||| fetch object	count=2
function_name	exe ou auto-exécutable) ||| exe	count=1
function_name	utilisée ||| entry compressionmethod	count=2
function_name	tronque le fichier ||| eio truncate	count=1
arg_pair	différents composants du ||| int $with_attrib	count=1
return	délai sur le ||| mongocursor	count=1
function_name	casse ||| case	count=1
function_name	le ||| construct	count=1
function_name	oracle après un appel ||| oci	count=1
function_name	recherche sur les caractères ||| eregi	count=1
arg_pair	contient les métadonnées et ||| mongodb $db string $prefix	count=1
function_name	en incluant les composants ||| form destroy	count=1
namespace	la méthode ||| reflectionmethod	count=7
return	de fois ||| int	count=2
namespace	verrous qui ont été ||| function	count=1
function	[function_name_1] cert ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	un ||| resource $relation	count=1
return	jeu de ||| array	count=1
function_name	un jste ||| is jste	count=1
function_name	détruit les ||| fann destroy	count=1
arg_pair	les ||| resource $pdfdoc	count=2
arg_pair	caractères vide ||| string $localname	count=1
function_name	décrémente ||| dec	count=1
function	[function_name_1] par address ||| [arg_pair_2] [function_name_1]	count=1
return	texte à la ||| bool	count=1
arg_pair	[arg_pair_1] suppression ||| [arg_pair_1] [arg_pair_2]	count=2
namespace	une ||| function	count=2
function_name	à surveiller avec les ||| set module	count=1
arg_pair	lecture/écriture ||| bool $autounlock	count=1
return	fichier ||| array	count=2
function_name	true solr placera le ||| echo handler	count=1
function_name	définit ||| xml set end	count=1
arg_pair	de lecture/écriture nommé ||| bool $autounlock	count=1
function_name	au ||| trace socket	count=1
arg_pair	filtres en court ||| bool $exclude	count=1
return	et envoie une réponse ||| void	count=1
function_name	ferme le dictionnaire représenté ||| closedict	count=1
function_name	[function_name_1] devrait être ||| [function_name_1] [function_name_2]	count=2
return	chaîne de caractères représentant ||| string	count=3
return	les informations ||| string	count=1
function_name	s'interrompt ||| eio set max	count=1
function_name	variable ||| wincache ucache	count=1
function_name	à la chaîne de ||| db2 escape string	count=1
function_name	contient encore un ||| valid	count=1
function_name	filtre d'un flux ||| stream filter	count=1
return	du contenu du fichier ||| int	count=1
function_name	en arrière plan ||| high	count=1
arg_pair	un générateur d'extraits de ||| string $field_override	count=1
function_name	où les ||| fann set error log	count=1
arg_pair	de jours ||| int $day	count=1
function_name	les textes ||| mb ereg	count=1
function_name	de la couleur ||| color value	count=1
function_name	d'erreur ||| error threshold	count=1
return	documents par réponse ||| bool	count=1
function_name	action qui peut être ||| action	count=1
arg_pair	ajuste ||| float $blackpoint float $gamma	count=1
return	de ||| mixed	count=1
function_name	du fichier fourni et ||| all	count=1
function_name	de traduction des entités ||| html translation table	count=1
arg_pair	texte text aux ||| string $text	count=1
return	le compteur de l'objet ||| bool	count=1
function	image et [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	statistiques sur le ||| resource	count=1
function_name	des données personnalisées ||| metadata	count=1
namespace	verrou acquis ||| eventbuffer	count=1
namespace	tas ||| splheap	count=1
function_name	l'encodage utilisé par la ||| encoding	count=1
function_name	retourne un tableau ||| fetch array	count=1
function_name	associé ||| msql	count=2
function_name	retourne [function_name] ||| get [function_name]	count=3
function_name	protège une chaîne de ||| pg escape	count=1
function_name	autour des liens ||| border	count=1
function_name	un verrou de ||| cubrid lock read	count=1
function_name	code pays correspondant au ||| geoip country code by	count=1
namespace	fichier fourni ||| function	count=1
function_name	écrit ||| ps show	count=2
arg_pair	le profile [arg_pair] use ||| [arg_pair]	count=1
function	[function_name_1] les données ||| [function_name_1] field [arg_pair_2]	count=1
function_name	[function_name_1] de connexion ||| [function_name_2] [function_name_1]	count=1
arg_pair	est identique ||| string $pattern string $string	count=1
arg_pair	un tableau de sockets ||| array $except int $tv_sec	count=1
function_name	police de caractère à ||| setfont	count=1
arg_pair	occurrence ||| mixed $needle	count=1
function_name	correspondant au nom ||| name	count=1
function_name	la base [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	cubrid_drop() est ||| cubrid drop	count=2
arg_pair	par le shell en ||| int $flags	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] train error [function_name_2]	count=1
function_name	l'échelle les sorties ||| fann scale	count=1
arg_pair	la fonction cubrid_lob2_bind() ||| mixed $bind_value string $bind_value_type	count=1
function_name	les bases de ||| dbs	count=1
arg_pair	que les paramètres ||| int $day int $year	count=1
function_name	un test sur ||| test data	count=1
arg_pair	donné par address à ||| string $address	count=1
function_name	le socket errno ||| last socket errno	count=1
function	[function_name_1] une chaîne ||| [arg_pair_2] [function_name_1]	count=1
function_name	d'erreurs libxml ||| libxml use	count=1
function_name	session courante ||| in session	count=1
arg_pair	excepté le ||| int $hour int $minute	count=1
arg_pair	la fonction à fournir ||| string $contents	count=1
arg_pair	avec une ||| resource $psdoc string $style	count=1
arg_pair	cc et [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	boîte aux lettres mailbox ||| string $mailbox	count=2
function_name	caractères lors de ||| eregi	count=1
arg_pair	rappel callback pour ||| callable $callback	count=1
function_name	exporte le ||| openssl spki export	count=1
function_name	fonction d'activation pour le ||| set activation function	count=1
arg_pair	du tableau rows ||| array $rows	count=1
function_name	chaîne de caractères ||| db2	count=1
function_name	champs utilisés pour la ||| field	count=1
return	antislashs devant les ||| string	count=1
arg_pair	mktime() excepté ||| int $day	count=1
function_name	terme ||| set terms upper bound	count=2
function_name	crée un groupe ||| create	count=1
function_name	pour coloriser [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	est un ||| module is	count=1
namespace	l'objet observateur evfork et ||| evfork	count=1
return	la recherche ||| int	count=1
arg_pair	la ressource fd ||| resource $fd	count=1
function_name	messages d'alerte [function_name] générés depuis ||| [function_name]	count=1
arg_pair	alphabétiques ||| string $string	count=1
function_name	de ||| dbase numfields	count=6
function_name	l'itérateur courant interne ||| iterator index	count=1
function_name	la carte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	rappel callback ||| callable $callback mixed $data	count=5
namespace	lignes de la ||| function	count=1
namespace	svmmodel ||| svmmodel	count=1
function_name	coloriser ||| highlight highlight	count=1
function_name	token d'accès un ||| get access token	count=1
function_name	message d'erreur de ||| error message	count=1
function_name	récupère le [function_name] depuis lequel ||| get terms [function_name]	count=1
function_name	interface avec gettimeofday 2 ||| gettimeofday	count=1
namespace	la fonction rewinddir() seul ||| directory	count=1
arg_pair	le fait ||| string $string	count=1
function_name	analyse une liste ||| parse	count=1
arg_pair	identique à la ||| int $day int $year	count=1
namespace	cette fonction peut être ||| mongolog	count=1
function_name	fenêtre ||| imagegrabwindow	count=1
arg_pair	métadonnées et la ||| mongodb $db	count=1
function_name	les composants qui ||| destroy	count=2
arg_pair	replacement ||| mixed $replacement	count=1
namespace	les messages ||| oauth	count=1
function_name	l'encodage [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	lit/modifie le langage courant ||| mb language	count=1
function_name	sauvegarde ||| backup	count=1
arg_pair	le ||| resource $image	count=1
namespace	sous la forme de ||| solrparams	count=1
namespace	mb par documents par ||| mongocursor	count=1
function_name	curseur ||| batch	count=1
function_name	spécifie le nombre maximal ||| max num	count=1
namespace	de ||| pharfileinfo	count=2
return	une connexion à ||| array	count=1
function_name	et extrait dans un ||| all	count=1
function	messages [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
return	qui ne peuvent pas ||| void	count=1
namespace	l'itérateur à la position ||| limititerator	count=1
function_name	file_get_contents() [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	efface ||| ftp rmdir	count=2
arg_pair	pas attrappées par des ||| string $cb string $arg	count=1
function_name	de needle dans haystack ||| strstr	count=1
arg_pair	mktime() excepté le ||| int $day int $year	count=1
function_name	d'époques de stagnation ||| stagnation	count=2
function_name	retourne la fréquence ||| get mlt min term frequency	count=1
function_name	bloc de mémoire ||| delete	count=1
return	la bibliothèque sqlite3 ||| array	count=1
function_name	classe et ||| parse class	count=1
function_name	un attribut ||| update	count=1
function_name	socket est ||| is	count=1
function_name	ou [function_name] de l'agent ||| remove [function_name]	count=1
function_name	depuis la base ||| fbsql	count=1
return	à la forme ||| void	count=1
function_name	position du champ fourni ||| cubrid field	count=1
function_name	le fichier est lisible ||| is readable	count=1
function_name	compression utilisée sur ||| entry compressionmethod	count=1
function_name	change le codage vectoriel ||| imagepsencodefont	count=1
function_name	tests sur l'index compare ||| array uintersect uassoc	count=1
return	forme d'une ||| int	count=1
function_name	personnalisées dans un fichier ||| set	count=1
function_name	un nouvel object oauthprovider ||| construct	count=1
function_name	[function_name] svm prêt ||| [function_name]	count=1
function_name	trace de la pile ||| trace	count=2
arg_pair	qui héberge la file ||| array $data	count=1
function	[function_name_1] deux variants ||| [function_name_1] [arg_pair_2]	count=3
function_name	refermer ||| ret	count=1
function_name	[function_name_1] de buffer ||| [function_name_2] [function_name_1]	count=2
function_name	ftp et le sauve ||| ftp get	count=1
function_name	et une ||| and	count=1
function_name	les entrées ||| yp cat	count=1
arg_pair	msg_number pour l'effacement ||| int $msg_number	count=1
function_name	les options associées à ||| field flags	count=1
return	un autre bloc de ||| void	count=1
namespace	de stocker ||| memcached	count=1
function_name	brutes ||| raw	count=1
arg_pair	contient ||| mongodb $db	count=2
return	pointeur ||| void	count=1
arg_pair	la suppression d'un ||| array $protocoloptions	count=1
function_name	nom du paquet graphicsmagick ||| getpackagename	count=1
namespace	par ||| gearmanjob	count=1
namespace	vérifie si un noeud ||| domnode	count=1
return	déplace [return] simplexmliterator à ||| [return]	count=1
arg_pair	vers un programme qui ||| float $ury string $filename	count=1
function_name	pente [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	retourne les ||| stream get	count=1
return	indique si le noeud ||| bool	count=1
function_name	la dernière réponse ||| last response headers	count=1
function_name	corps des messages spécifiés ||| imap fetchbody	count=1
return	la date ||| string	count=1
function_name	du texte sans ||| text	count=1
return	fois où ||| int	count=2
function_name	version échappée de ||| cubrid real escape	count=1
arg_pair	lors ||| string $string	count=1
function_name	à la position courante ||| ps show	count=1
function_name	d'objets ||| size	count=1
arg_pair	et produit les informations ||| string $to	count=1
function_name	configuration ||| path	count=1
function_name	identifiant unique ||| uniqid	count=1
function_name	un tableau qui contient ||| pg fetch array	count=1
namespace	date de ||| gmagick	count=1
function_name	configure la couleur ||| background color	count=2
function_name	du client ||| set client	count=1
arg_pair	de fichier ||| int $flags	count=1
arg_pair	de deux collections : ||| mongodb $db string $prefix	count=1
function_name	lit la profondeur ||| depth	count=2
function_name	[function_name_1] ligne ||| [function_name_2] [function_name_1]	count=12
function_name	les données du tampon ||| buffer	count=1
arg_pair	rename() ||| string $path_from	count=1
function_name	l'orientation de l'image ||| set image orientation	count=1
arg_pair	les paramètres x et ||| int $x	count=1
arg_pair	le uri contenant ||| string $uri string $encoding	count=1
function_name	les modules ||| module	count=1
arg_pair	spécifié par object_id ||| string $type	count=1
function_name	récupère la classe ||| get declaring class	count=2
arg_pair	dans la ||| resource $connection	count=1
return	sous la forme ||| string	count=1
function_name	les caractères ||| db2 escape	count=1
arg_pair	de type substr() basée ||| string $str int $start	count=1
arg_pair	cc et ||| string $cc	count=1
function_name	champ ||| set field	count=1
return	format champ= > valeur ||| mixed	count=1
namespace	classe reflectionparameter ||| reflectionparameter	count=1
arg_pair	xml ||| string $src	count=1
function_name	suivant est ||| next	count=1
function_name	résultat ||| mysql	count=1
return	qui ||| array	count=1
return	libère ||| void	count=1
function_name	représentant la version ||| info	count=1
return	méthode recursivetreeiterator::valid() ||| void	count=1
function_name	tampon [function_name] associé ||| get [function_name]	count=1
function_name	[function_name_1] candidate ||| [function_name_2] [function_name_1]	count=4
function_name	la prochaine [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	composants qui avaient été ||| newt form destroy	count=1
function	[function_name_1] prompt et ||| [function_name_1] [arg_pair_2]	count=3
function_name	remplace [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	gris pour ||| setgray	count=1
function_name	est ||| fbsql	count=1
function_name	l'endroit ||| set	count=1
function_name	ligne de résultat ||| fbsql fetch	count=1
function_name	contexte actif et non ||| active symbols	count=1
function_name	remplit ||| ps fill	count=2
function_name	lit un caractère de ||| readline callback read	count=1
function_name	être utilisée pour ||| set	count=2
arg_pair	texte à ||| string $text	count=1
function	le socket [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	sur [function_name] caractères chargée ||| pdf info [function_name]	count=1
function_name	s'interrompt si elle ||| eio set	count=1
function	[function_name_1] propriété hwnd ||| [arg_pair_2] [function_name_1]	count=4
function_name	d'arrêt utilisée pendant ||| train stop	count=1
arg_pair	affiche le prompt et ||| string $prompt	count=1
function_name	efface ||| rmdir	count=2
function_name	de l'analyseur xml associé ||| xml	count=1
function_name	socket ||| socket server	count=2
function_name	métadonnées et la ||| construct	count=1
function_name	utilisée sur ||| entry compressionmethod	count=1
function	[function_name_1] le ||| [arg_pair_2] [function_name_1]	count=1
function_name	le dictionnaire en_us de_de ||| enchant broker request dict	count=1
function_name	[function_name] revision ||| [function_name]	count=2
function_name	[function_name_1] pour être ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name] entre ||| [function_name] rplist	count=3
function_name	[function_name_1] paire de ||| [function_name_1] [function_name_2]	count=1
function_name	fonction est similaire à ||| get	count=1
function_name	passés ||| gmmktime	count=1
function_name	à la fonction ||| rewind	count=1
function_name	avec des tests sur ||| uintersect uassoc	count=1
return	paramètres de l'objet sous ||| string	count=1
namespace	invoquée) ||| evwatcher	count=1
function_name	des informations issus des ||| curl multi info read	count=1
function_name	fonction est similaire à ||| get element	count=1
function_name	une notification ||| notify	count=1
function_name	statique create() ||| add types	count=1
function_name	fichier temporaire tous les ||| mailparse uudecode all	count=1
function_name	les alertes frontbase ||| fbsql warnings	count=2
arg_pair	un ||| resource $result string $name	count=1
arg_pair	cubrid_connect() est utilisée ||| string $passwd bool $new_link	count=1
function_name	fonction cubrid_execute() est ||| cubrid	count=1
function_name	fragments ||| set highlight	count=1
function_name	ajoute ||| bbcode add	count=1
function_name	l'entier ||| floor	count=1
function_name	supprime la ||| unregister	count=1
arg_pair	fonction socket_create() ||| string $address	count=1
function_name	similaire à la fonction ||| by	count=1
return	tar ou zip ||| phardata	count=1
return	de configuration include_path pour ||| string	count=1
function_name	pour diriger les ||| set multi	count=1
function_name	similaire à la fonction ||| element by	count=1
return	implémente ||| void	count=1
return	du bruit ||| gmagick	count=1
arg_pair	les données data au ||| resource $socket string $data	count=1
function_name	et tous les composants ||| newt form destroy	count=1
return	les mots-clés de ||| array	count=1
function_name	le ||| crack closedict	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] object [arg_pair_2]	count=8
arg_pair	correcte des destinataires cc ||| string $cc	count=1
namespace	une série ||| mongocursor	count=1
function_name	termine ||| fam	count=1
function_name	retourne ||| get frame	count=3
function_name	un tableau qui ||| array	count=2
function_name	commence une définition de ||| pdf begin	count=1
arg_pair	la fonction filter_input() ||| mixed $definition	count=1
arg_pair	contenu d'un élément dans ||| string $attr_name int $index	count=1
function_name	des informations sur ||| stat	count=1
function_name	pour la durée ||| set include path	count=1
arg_pair	que ||| int $minute	count=1
function_name	tidy ||| tidy	count=2
function	[function_name_1] table table_name ||| [arg_pair_2] [function_name_1]	count=2
function_name	insérer un seul ||| cubrid	count=1
function_name	brosse courante pour le ||| imagesetbrush	count=1
function_name	donnée ||| yaz	count=1
function_name	trouvent ||| mailparse	count=1
function_name	[function_name_1] le nom ||| [function_name_1] encoding [function_name_2]	count=1
function_name	classe et pour ||| class	count=1
function_name	syntaxe de lecture des ||| syntax	count=1
function_name	plugin [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] contenu dans ||| [function_name_1] lo export [arg_pair_2]	count=1
function_name	par défaut de ||| set default	count=2
function_name	xbm de ||| imagexbm	count=1
namespace	reconnecter ||| mysqlnduhconnection	count=1
function	de contrôle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	efface les métadonnées ||| del metadata	count=1
function_name	le périphérique physique ||| sync	count=1
function_name	[function_name_1] l'année d'un ||| [function_name_2] [function_name_1]	count=1
function_name	maximale du corps ||| max body	count=4
return	requête soap appelle ||| void	count=1
namespace	dernière requête sql ||| sqlite3	count=1
namespace	et que la base ||| mongocursorinterface	count=1
function	schéma de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	le cache apc ||| apc	count=1
function_name	un moteur [function_name] visualisation personnalisé ||| [function_name]	count=1
return	à extraire les ||| array	count=1
function_name	le pointeur ||| closedir	count=1
function_name	défini l'endroit où les ||| set	count=1
function_name	fonction cubrid_lob2_size64() est ||| cubrid lob2 size64	count=1
namespace	avec un traitement ||| imagick	count=1
function_name	analyse la ||| parse	count=4
function_name	de output_encoding ||| ob iconv handler	count=1
arg_pair	sur un socket ||| mixed $socket	count=1
return	a échoué de ||| bool	count=1
namespace	position courante ||| function	count=1
arg_pair	retourne le fichier dans ||| string $filename int $use_include_path	count=1
arg_pair	fonction à fournir à ||| int $status	count=1
namespace	à détruire un ||| function	count=1
function_name	trace dans les ||| trace log	count=1
namespace	evchild ||| evchild	count=1
function_name	d'archives spécifié ||| zip	count=1
function_name	configuration include_path pour la ||| set include	count=1
function_name	nombre de ||| sybase num	count=1
function_name	décrivant [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	tous ||| uudecode	count=1
function_name	dernier identifiant autogénéré ||| last insert id	count=1
function_name	le code javascript ||| doc javascript	count=1
arg_pair	le ||| string $src	count=1
namespace	9 miniatures ||| imagick	count=1
function_name	récupère le nombre ||| session pgsql get error	count=1
function	com [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] les données ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	pour le calendrier calendar ||| int $calendar int $month	count=1
function_name	données blob/clob depuis ||| lob	count=1
function_name	pour toutes les ||| set	count=1
arg_pair	eol_style ||| int $start int $eol_style	count=1
namespace	la base de ||| function	count=1
function_name	variable associée ||| wincache ucache cas	count=2
function_name	tailles de clés ||| sizes	count=2
arg_pair	sert à modifier ||| resource $fd int $pos	count=1
return	des statistiques sur le ||| resource	count=1
return	et la seconde contient ||| mongodb	count=1
function_name	positionne [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de la recherche sur ||| eregi	count=1
namespace	utilisé pour tracer la ||| function	count=1
function_name	couleur ||| color value	count=2
function_name	la clé key ||| delayed by key	count=1
function_name	du cache utilisateur ||| wincache ucache delete	count=2
function_name	la création du blob ||| blob cancel	count=1
function_name	facteur quickprop ||| quickprop	count=1
function_name	sur le ||| entry compressionmethod	count=1
function	d'octets dans [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	apparaître après un terme ||| string $simplepost	count=1
function	[function_name_1] pour le ||| [function_name_1] mode [arg_pair_2]	count=1
function_name	cette méthode est utile ||| get	count=1
function_name	serveur qui devrait être ||| server by	count=1
function_name	schéma contenu ||| schema	count=1
arg_pair	haystack et retourne la ||| string $encoding	count=2
arg_pair	des ||| string $prefix	count=1
namespace	bit ou 128 ||| function	count=1
function_name	pour ||| ibase set event	count=1
arg_pair	l'environnement pour la ||| string $passwd bool $new_link	count=1
function_name	motif basé sur ||| ps shading pattern	count=1
arg_pair	chaîne address ||| string $address	count=1
function_name	client pour certains ||| client	count=1
return	documents ||| bool	count=1
arg_pair	ajoute un message message ||| string $message string $options	count=1
function_name	le champ field a ||| msql field	count=1
function_name	définit la [function_name_1] [function_name_2] page ||| harupage bool [function_name_2] [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] add vars [arg_pair_2]	count=3
namespace	devant les ||| function	count=1
function_name	http spécifiques à fdf ||| fdf	count=1
function_name	pixels [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	les ressources qui ||| function	count=1
function_name	est annulable ||| nullable	count=1
namespace	verrou exclusif qui ||| function	count=1
function_name	détruit toutes les variables ||| unset	count=1
function_name	requêtes avec sphinxclient::addquery obtient ||| queries	count=1
function_name	du tampon de sortie ||| ob	count=2
function_name	s'interrompt si ||| eio set	count=1
function_name	est ||| get	count=2
function_name	une image [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	exe ou ||| exe	count=1
function_name	socket créé précédemment avec ||| stream socket	count=1
arg_pair	d'extraits ||| string $fragmenter string $field_override	count=1
function_name	version cliente ||| get client info	count=1
arg_pair	une chaîne dans un ||| int $bid string $content	count=1
function_name	déplace le curseur du ||| seek	count=1
function_name	de sortir ||| exit	count=1
function_name	a un crc vérifié ||| crcchecked	count=1
return	le pointeur de ||| void	count=1
function_name	selon le schéma ||| schema validate source	count=3
function_name	les données [function_name] ||| [function_name]	count=4
function_name	les lignes ||| rzap	count=1
function	[function_name_1] de seuil ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	angle en degrés ||| resource $image float $angle	count=1
return	appliqué à différents ||| bool	count=1
namespace	comme une pile ||| function	count=1
namespace	est à ||| mongocursorinterface	count=1
function_name	la bibliothèque ucd ||| quick print	count=2
arg_pair	la table table_name spécifiées ||| resource $connection string $table_name	count=1
function_name	première ligne de ||| dbplus first	count=1
namespace	interne d'un lob est ||| oci-lob	count=1
namespace	statistiques collectées par ||| function	count=1
arg_pair	filename sous la ||| string $mode	count=1
function_name	les requêtes s'exécutent ||| event loop	count=1
arg_pair	une procédure stockée sur ||| resource $stmt bool $skip_results	count=1
function_name	encodés qui ||| all	count=1
function_name	lorsque ||| end	count=1
arg_pair	le nombre left_operand ||| string $left_operand	count=1
function_name	la fonction d'activation ||| activation function	count=3
return	dictionnaire ||| bool	count=1
function_name	données personnalisées dans un ||| set	count=1
function_name	cette ||| by id	count=2
function_name	de la réponse ||| response	count=2
return	passée en argument ||| string	count=1
function_name	bbcode ||| bbcode set flags	count=2
function_name	fonction d'activation pour le ||| fann set activation	count=1
function_name	style ||| style	count=1
function_name	récupère le nombre ||| num	count=1
arg_pair	et retourne ||| bool $before_needle string $encoding	count=1
function_name	représentation textuelle de l'objet ||| to	count=1
function_name	compression utilisée ||| entry compressionmethod	count=1
function_name	document pdi ||| pdi parameter	count=1
function_name	[function_name_1] ingres ||| [function_name_2] [function_name_1]	count=2
arg_pair	une date stockée dans ||| int $value	count=1
function_name	dernier ||| db2 last	count=1
function_name	une instance inotify ||| inotify	count=1
return	pas être ||| string	count=1
function_name	retourne ||| get mlt min term	count=1
function_name	retourne la valeur d'un ||| get	count=1
function_name	deux ||| watermark	count=1
function_name	configuration courante dans ||| tidy save config	count=2
function_name	le cache [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	consommer trop ||| mssql free statement	count=1
function_name	établit une connexion persistante ||| pconnect with url	count=1
function_name	chaque réception d'une notification ||| service proxy add notify	count=1
function_name	fonction est ||| id	count=1
function_name	le blob ||| blob	count=1
function_name	supportées par cette version ||| supported	count=1
arg_pair	deux versions ||| string $version2	count=1
arg_pair	type d'éléments ||| string $elementset	count=1
function_name	la session [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	chaîne str ||| string $str mixed $encoding_list	count=1
function_name	représentation json de ||| json encode	count=1
arg_pair	fonction filter_input() ||| int $type mixed $definition	count=1
function_name	tronque ||| eio truncate	count=2
function_name	fois par objet lorsque ||| set	count=1
function_name	[function_name_1] type nombre ||| [function_name_2] [function_name_1]	count=3
function_name	exclusion logique sur ||| xor	count=1
function_name	similaire à ||| type	count=2
arg_pair	caractères ||| resource $connection	count=1
function_name	la fonction pcntl_sigwaitinfo() ||| sigwaitinfo	count=1
function_name	l' ||| add buffer	count=2
arg_pair	la ||| int $day	count=1
function_name	récupère la valeur de ||| fdf get	count=1
function_name	ajoute la session ||| multi add handle	count=1
arg_pair	à strcmp() ||| string $str2	count=1
namespace	de caractères ||| function	count=1
function_name	pour le neurone ||| fann set	count=1
function_name	décide ||| qc set is select	count=1
function_name	protéger tous les ||| mysql escape string	count=1
namespace	données du tampon fourni ||| eventbuffer	count=1
arg_pair	nom d'utilisateur username et ||| string $username	count=1
return	réponse ||| void	count=1
arg_pair	[arg_pair_1] microsoft sql ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	paramètres [function_name_2] ||| [function_name_2] [function_name_1]	count=12
function_name	que les requêtes s'exécutent ||| loop	count=1
function_name	qui s'y ||| uudecode all	count=1
function_name	un service ||| gupnp service	count=1
function_name	par ||| form destroy	count=2
function_name	cinétique ||| motionblurimage	count=1
return	recursivetreeiterator::valid() retourne ||| void	count=1
function_name	seuil de fréquence ||| frequency	count=1
function_name	données du ||| buffer	count=1
arg_pair	la fonction fann_read_train_from_file() ||| string $file_name	count=1
namespace	d'une [namespace] en ||| [namespace]	count=2
arg_pair	options qui affectent l'affichage ||| array $options	count=1
function_name	les données du ||| mailparse uudecode all	count=1
function_name	la ||| task	count=2
function_name	service ||| gupnp service proxy	count=2
function_name	racine pour [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	un script particulier depuis ||| string $script	count=1
function_name	[function_name] à ||| get [function_name]	count=3
function_name	libère toute la ||| free result	count=2
arg_pair	offset du résultat result ||| resource $result int $offset	count=1
arg_pair	image au format png ||| int $filters	count=1
function_name	en-têtes de tous les ||| headers	count=1
function_name	ajoute le code ||| add doc	count=1
namespace	spécial ||| function	count=1
function_name	définit ||| mysqlnd qc set	count=1
arg_pair	envoyés par ||| string $url	count=1
function_name	si ||| eio set max poll time	count=2
function_name	tâche de fond ||| background	count=1
function_name	nouvelle image ||| new pseudo image	count=1
function_name	méthode d'entrelacement de l'image ||| set image interlace scheme	count=1
return	pour retourner le ||| int	count=1
function_name	accès à un fichier ||| dio	count=1
arg_pair	vérifie si un mot ||| string $word	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image background [function_name_2]	count=1
function_name	la temporisation de ||| ob end	count=1
namespace	métadonnées et la ||| mongogridfs	count=1
function_name	[function_name_1] importé ||| [function_name_2] [function_name_1]	count=2
function_name	nouvelle page ||| page	count=1
function_name	tableau ||| array	count=2
namespace	courant interne ||| solrdocument	count=1
function	[function_name_1] la chaîne ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	le tableau ||| resource $ann	count=1
function_name	[function_name_1] couleur courante ||| [function_name_2] [function_name_1]	count=2
arg_pair	segment de subject ||| string $subject	count=1
arg_pair	et lui associe ||| int $cols int $rows	count=1
function_name	à la fonction ||| type	count=2
function_name	de ||| set idle	count=1
function_name	[function_name_1] région ||| [function_name_1] [function_name_2]	count=2
function_name	retourne ||| get state variable	count=2
namespace	le dossier ||| function	count=1
function_name	tous les paramètres de ||| string	count=1
function_name	[function_name_1] utilisateur ||| [function_name_2] [function_name_1]	count=9
arg_pair	attrappées par des fonctions ||| string $cb	count=1
return	un objet qui ||| ktaglib_mpeg_file	count=1
function_name	d'occurrences ||| mb substr	count=1
function_name	la qualité [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	rappel timestampnoncehandler qui ||| timestamp nonce handler	count=2
function_name	liste des [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	la forme ||| destroy	count=2
function_name	libère un ||| free	count=3
function_name	curseur sur le premier ||| first	count=1
function_name	précharger par [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	la chaîne str ||| string $str string $encoding	count=2
function_name	fonction cubrid_error_msg() est ||| msg	count=1
return	du tampon de sortie ||| string	count=1
function_name	la forme ||| to	count=1
function_name	[function_name_1] les textes ||| [function_name_2] [function_name_1]	count=2
arg_pair	de rappel si ||| mixed $callback	count=1
function_name	devant ||| db2 escape	count=1
function_name	la session ||| in session	count=1
function_name	actuellement activés ||| get level	count=1
function_name	d'entrainement en ||| train	count=1
arg_pair	chaîne str après ||| string $str string $from	count=1
function_name	l'attribut ||| id	count=1
function_name	d'archives spécifié par ||| compressionmethod	count=1
arg_pair	le paramètre oid ||| string $oid	count=1
function_name	retourne la ||| yaz get	count=1
return	champs colonnes ||| int	count=1
function_name	de mémoire partagée ||| shm	count=2
return	modules à surveiller ||| void	count=1
function_name	de l'espacement des lignes ||| text leading	count=1
function_name	convolution 3x3 ||| imageconvolution	count=1
function_name	de type id ||| id	count=3
function_name	ajoute ||| add	count=29
arg_pair	entraîne ||| array $problem	count=1
function_name	page sous la ||| image page	count=1
arg_pair	[arg_pair_1] examine ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	à l'aide ||| construct	count=1
namespace	l'itérateur ||| splheap	count=1
arg_pair	paramètre filename à la ||| string $filename	count=1
return	en conservant la ||| void	count=1
arg_pair	libre server_key peut ||| array $keys	count=1
arg_pair	une chaîne ||| int $start	count=1
namespace	nouvelle instance rrdgraph ||| rrdgraph	count=1
function_name	le statut http ||| get http status message	count=1
arg_pair	pour vérifier si l'accès ||| string $user	count=1
namespace	yar_client sur ||| yar_client	count=1
function_name	objet slob ||| slob	count=2
function_name	une trace dans ||| trace	count=1
function_name	la couleur bleue ||| blue primary	count=1
function_name	champs colonnes ||| numfields	count=1
namespace	différents ||| imagick	count=1
arg_pair	sur le ||| string $src	count=1
arg_pair	séquence d'octets str ce ||| string $str	count=1
function_name	session courante ||| session	count=5
arg_pair	calcule l'intersection de deux ||| array $array2	count=3
namespace	retourne ||| gearmanjob	count=1
arg_pair	left ||| float $left	count=1
function_name	fréquence minimale du document ||| cache min default frequency	count=1
return	tracer la ||| void	count=1
function_name	commandes de dessins précédentes ||| render	count=1
function_name	nom d'hôte associé à ||| host	count=1
function_name	[function_name] tableau ||| array diff [function_name]	count=2
function_name	recherche une police et ||| pdf load font	count=1
function_name	convertit les entités html ||| html entity decode	count=1
arg_pair	assemble 2 images ||| int $compose	count=1
function_name	colonne courant ||| current column	count=2
arg_pair	colonne données ||| mixed $column	count=1
namespace	l'élément identifié ||| memcache	count=2
namespace	taille du tampon ||| eventbuffer	count=1
function_name	un ||| data source	count=1
function_name	peut être utilisée ||| module	count=1
return	la valeur du ||| int	count=1
arg_pair	ignore la ||| string $pattern string $string	count=1
function_name	un nouveau contexte ||| context new	count=1
function_name	les données blob/clob ||| cubrid lob	count=1
function_name	attribut par nom et ||| attribute ns	count=1
namespace	construit un arbre de ||| sdo_das_xml	count=1
function_name	fichier pdf généré, ||| pdf	count=1
arg_pair	données microsoft sql ||| array $connectioninfo	count=1
function_name	dimensions contenant la ||| string geometry	count=1
function_name	similaire ||| id	count=1
function_name	l'id persistant ||| persistent id	count=1
function_name	le retour de statut ||| status	count=1
arg_pair	à strcmp() elle ||| string $str1 string $str2	count=1
function_name	indique si le ||| is	count=1
arg_pair	sequence ||| resource $imap_stream string $sequence	count=2
function_name	de réponse [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	le type mime ||| mime type	count=4
arg_pair	caractères vide si l'attribut ||| string $localname	count=1
arg_pair	par la clé key ||| int $timeout	count=1
function_name	route par défaut ||| route	count=1
return	déplace sur le ||| void	count=1
arg_pair	flou ||| float $sigma	count=1
function_name	le gestionnaire curl donné ||| curl	count=1
function_name	[function_name] d'un ||| set end namespace [function_name]	count=2
function_name	efface ||| delete	count=14
namespace	fichier du tampon d'événement ||| eventbufferevent	count=1
namespace	similaire à la ||| domdocument	count=1
function_name	importe ||| import	count=1
return	le code ||| int	count=2
function_name	identique à la fonction ||| gmmktime	count=1
arg_pair	la fonction fbsql_field_name() ||| int $field_offset	count=1
function_name	la prochaine ligne ||| cubrid fetch	count=1
function_name	plusieurs canaux d'une ||| channel distortion	count=2
function_name	vérifie si le ||| exists	count=1
function_name	retourne le numéro de ||| get	count=6
function_name	date de dernière modification ||| mtime	count=1
function_name	connexions ouvertes et des ||| connections	count=1
function_name	[function_name] i.e ||| [function_name]	count=1
arg_pair	à la fonction ||| int $hour	count=1
arg_pair	dans la page ||| resource $pdfdoc int $image	count=1
namespace	s'interrompt si elle ||| function	count=1
function_name	à un serveur oracle ||| oci	count=1
function_name	l'époque minimale de sortie ||| cascade min out epochs	count=1
namespace	sur la ||| function	count=1
function_name	style de l'icône de ||| set icon	count=1
function_name	verrou de lecture ||| lock	count=1
arg_pair	à ||| string $string	count=1
function_name	copie un fichier ||| copy	count=1
return	seulement si cette clé ||| bool	count=1
arg_pair	ou jpeg dans le ||| int $height int $imagetype	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] open string $mailbox [arg_pair_2]	count=1
function_name	de clé ||| key	count=1
function_name	le certificat ||| openssl	count=1
arg_pair	un dossier du système ||| resource $sftp string $dirname	count=1
function_name	cette ||| newt	count=1
function_name	patch et enregistre ||| patch	count=1
function_name	la taille décompressée d'une ||| unpacked size	count=1
return	le code du jeu ||| string	count=1
function_name	annule la possibilité de ||| oci cancel	count=1
function_name	traitement appliqué à différents ||| images	count=1
arg_pair	la valeur ||| resource $stmt	count=1
arg_pair	lien symbolique filename par ||| string $filename	count=1
namespace	boucle d'événement ||| evloop	count=1
function_name	remplace les textes ||| ereg replace callback	count=1
return	uniquement si elle ne ||| bool	count=1
return	réalisation de ||| int	count=2
function_name	array comme une pile ||| array	count=1
namespace	utilisée sur le ||| function	count=1
arg_pair	page dans le ||| int $page	count=1
arg_pair	la suppression ||| array $protocoloptions	count=1
function_name	récupère le nom ||| get font name	count=1
function_name	connexion fournie ||| database	count=1
function_name	identifiant ||| id	count=2
function_name	route par ||| add route	count=1
arg_pair	une nouvelle ||| float $height	count=1
return	utilisée que pour ||| void	count=1
function_name	indexé, suivant s'ils sont ||| set	count=1
function_name	paquet repéré par ||| wddx	count=1
function_name	d'arrière-plan [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	jeu de ||| get	count=1
return	l'application précédemment définie ||| string	count=1
function_name	l'extension du fichier ||| extension	count=1
arg_pair	avec le chemin path ||| int $flags	count=1
function_name	la méthode phar::startbuffering() ||| start buffering	count=1
function_name	retourne le ||| introspection get state variable	count=1
arg_pair	l'expression xpath expression ||| domnode $contextnode	count=1
function_name	autocommit ||| db2 autocommit	count=1
namespace	l'espace utilisateur ||| reflectionfunctionabstract	count=1
function_name	temporisation de sortie ||| ob end clean	count=1
arg_pair	chaine de ||| int $options	count=1
function_name	[function_name_1] colonne ||| [function_name_1] current [function_name_2]	count=1
function_name	la couleur ||| set background color	count=1
function_name	false s'il n'y a ||| row	count=1
function_name	d'attente s'interrompt ||| eio set	count=1
function_name	fils d'une collection ou ||| children	count=1
function_name	mémoire maximale en ||| peak usage	count=2
arg_pair	la fonction cubrid_set_add() est ||| string $attr_name string $set_element	count=1
function_name	pour insérer ||| cubrid set	count=1
function_name	image représentant la ||| image	count=1
function_name	la classe [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	pour définir les ||| mongolog	count=1
function_name	[function_name] caractères chargée ||| pdf info [function_name]	count=2
function_name	prend plus de ||| set max poll time	count=1
return	[return] le mode ||| [return]	count=1
namespace	appelé pour chaque ||| recursiveiteratoriterator	count=1
arg_pair	fait que les paramètres ||| int $second int $month	count=1
arg_pair	depuis le fichier ||| resource $mimemail mixed $filename	count=1
function_name	wbmp ||| imagewbmp	count=1
function_name	ligne insérée ||| pg last oid	count=1
namespace	lot d'objets résultants et ||| mongocommandcursor	count=1
namespace	un nouveau timestamp ||| mongotimestamp	count=1
return	interroge l'url du ||| array	count=1
namespace	cette méthode ||| arrayobject	count=1
function_name	de 9 miniatures ||| preview	count=1
function_name	récupère la ||| offset get	count=1
function_name	array comme une ||| push	count=1
function_name	un jeu ||| get	count=1
arg_pair	propriété hwnd ||| int $window_handle	count=1
arg_pair	sur le document source ||| string $src	count=1
return	les paramètres de ||| string	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] train [function_name_2]	count=1
function_name	le ||| set	count=1
namespace	tampon de sortie ||| function	count=1
function_name	[function_name_1] morelikethis ||| [function_name_2] [function_name_1]	count=4
function_name	xa ||| ms xa	count=1
return	fichier temporaire tous ||| array	count=1
arg_pair	strcmp() elle n'est pas ||| string $str2	count=1
arg_pair	fonction utilisateur php event_handler ||| callable $event_handler string $event_name1	count=1
namespace	méthode est ||| soapclient	count=1
function_name	à ||| fbsql field type	count=2
arg_pair	résultats result ||| resource $result	count=1
function_name	retourne l'id de ||| posix getuid	count=1
arg_pair	strcmp() elle ||| string $str1 string $str2	count=1
function_name	création du blob ||| ibase blob	count=1
arg_pair	la résolution ||| float $yresolution	count=1
function	partir [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	geoip_country_code3_by_name() retourne les trois ||| geoip country code3	count=1
function_name	valeur d'un objet snmp ||| snmp2 get	count=1
function_name	pour le dessin ||| imagesetbrush	count=1
function_name	char dont l'identifiant est ||| ifx free char	count=1
namespace	fonction est identique à ||| function	count=1
function_name	message d'erreur qui ||| error	count=1
return	dans un ||| array	count=1
function_name	strpos() en tenant compte ||| strrpos	count=1
namespace	la forme et tous ||| function	count=1
function_name	[function_name_1] flux ||| [function_name_2] [function_name_1]	count=16
arg_pair	filename par l'utilisateur user ||| string $filename mixed $user	count=1
arg_pair	peut créer ou ||| int $mode int $size	count=1
namespace	notify envoyé par ||| function	count=1
arg_pair	du domaine domain ||| string $domain	count=2
function_name	différents niveaux ||| images	count=1
function_name	disposition courante ||| layout	count=1
function_name	types de ||| column types	count=1
function_name	une connexion ||| connect	count=2
function_name	du ||| uudecode all	count=2
return	un tableau contenant un ||| array	count=1
arg_pair	seconde contient le ||| mongodb $db string $prefix	count=1
function_name	suspend la page ||| suspend page	count=1
function_name	[function_name_1] de ||| [function_name_2] image [function_name_1]	count=13
function_name	[function_name_1] mémoire maximale ||| [function_name_2] [function_name_1]	count=1
function_name	d'événements pour les ||| set	count=1
arg_pair	le changement de ||| resource $ann float $sarprop_step_error_shift	count=1
function	[function_name_1] de texte ||| [function_name_1] [arg_pair_2]	count=2
function_name	retourne une instance ||| get	count=1
function_name	les drapeaux définis ||| flags	count=1
namespace	capture de la totalité ||| function	count=1
function_name	elle prend plus de ||| eio set max	count=1
arg_pair	occurrence de needle dans ||| string $needle	count=1
function_name	de sortie en cascade ||| fann set cascade output	count=1
function_name	session ||| session	count=6
function_name	jeu de ||| db2 columns	count=1
function_name	sévérité ||| severity	count=2
return	un certain délai ||| mongocursor	count=1
function_name	est utilisée pour fermer ||| cubrid lob2 close	count=1
function_name	la couleur mate ||| matte color	count=2
arg_pair	rappel si le paramètre ||| resource $proxy mixed $callback	count=1
arg_pair	extrait le fichier fieldname ||| resource $fdf_document string $fieldname	count=1
function_name	options clientes définies en ||| options	count=1
function_name	terme à partir ||| terms upper bound	count=1
function_name	la fin de l' ||| add buffer	count=1
namespace	courant ||| function	count=2
return	cette fonction est similaire ||| domelement	count=1
return	dans les opérations ||| array	count=1
arg_pair	première occurrence de ||| string $haystack	count=5
function_name	retourne [function_name_2] ||| [function_name_1] mime [function_name_2]	count=1
arg_pair	une source de ||| string $password	count=1
function_name	[function_name_1] paire de ||| [function_name_2] [function_name_1]	count=1
function_name	pour afficher le logo ||| logo guid	count=2
function_name	clé pour ||| key	count=1
return	en utilisant 2 coordonnées ||| gmagickdraw	count=1
arg_pair	la miter limit à ||| float $miter	count=1
function_name	du jeu ||| db2	count=2
arg_pair	image ||| int $font	count=2
arg_pair	utiliser mapreduce ||| array $options	count=1
function_name	classe déclarante ||| declaring class	count=2
arg_pair	depuis le chemin fourni ||| int $length	count=1
return	ferme ||| bool	count=1
function_name	[function_name_1] profil ||| [function_name_1] image [function_name_2]	count=1
function_name	tampon fourni par le ||| buffer	count=1
function_name	la valeur de ||| set	count=2
function_name	record pour l'effacement dans ||| dbase delete record	count=1
function_name	transaction ibase sans ||| ibase commit	count=2
arg_pair	table tablename ||| string $database string $tablename	count=1
function_name	la file d'attente s'interrompt ||| max	count=1
function_name	un [function_name] ||| [function_name] special	count=2
function_name	été ajoutés ||| form destroy	count=1
function_name	ms sql ||| mssql	count=2
function_name	récupère le ||| fann get	count=4
function_name	la méthode ||| method	count=1
namespace	méthode ||| pharfileinfo	count=2
function_name	retourne la trace ||| get trace as string	count=1
function_name	boîtes aux lettres ||| imap get quota	count=1
function_name	re-initialise l'événement de base ||| re init	count=1
function_name	[function_name_1] la page ||| [function_name_2] [function_name_1]	count=6
function_name	l'intervalle quantique de ||| quantum range	count=1
namespace	d'une image ||| gmagick	count=1
arg_pair	et ||| resource $connection string $qualifier	count=1
arg_pair	système ||| resource $sftp	count=1
function_name	méthode de ||| compressionmethod	count=1
function_name	libère la mémoire des ||| free	count=1
function_name	récupère la longueur ||| length	count=1
function_name	est l'espace ||| is	count=1
function_name	avec un identifiant ||| element by	count=1
function_name	un ||| mailparse uudecode	count=1
namespace	à un jeu de ||| mongoclient	count=1
function_name	l'analyseur xml associé ||| xml	count=1
namespace	définir les modules ||| mongolog	count=1
return	alphanumériques dans ||| void	count=1
function_name	retourne false ||| end	count=1
function_name	spécifié par ||| zip	count=1
arg_pair	une variable au ||| string $key mixed $value	count=1
arg_pair	toutes les ||| resource $ann int $activation_function	count=1
function_name	le mois month de ||| cal days in month	count=1
namespace	assigné par ||| gearmanjob	count=1
function_name	calcule l'entier le ||| floor	count=1
namespace	fonction rewinddir() ||| directory	count=1
function_name	est similaire à ||| get	count=1
function_name	combine [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	antislashs devant les caractères ||| escape string	count=1
namespace	classes ||| xmldiff\base	count=1
function_name	la présence d'événements de ||| set max dispatch interval	count=1
function_name	valeurs correspondantes dans ||| into struct	count=1
namespace	cette méthode vérifie si ||| mongocursorinterface	count=1
function_name	chaîne de caractères ||| db2 escape	count=1
function_name	récupère ||| get server	count=1
function_name	retourne ||| mysqlnd ms get	count=2
namespace	et ||| mongocommandcursor	count=1
function_name	via la méthode eventbase::exit() ||| got	count=1
function_name	méthode est obsolète ||| call	count=1
function_name	clone ||| assign	count=1
arg_pair	plusieurs paires clé-valeur dans ||| mixed $keys	count=1
namespace	vt_date ou ||| function	count=1
arg_pair	recherche sur les caractères ||| string $string	count=1
return	utilisé en ||| bool	count=1
arg_pair	la base de données ||| string $database_name resource $link_identifier	count=1
function_name	msql ||| msql	count=2
function_name	mémoire partagée de type ||| shm attach	count=1
function_name	remous autour duquel ||| swirlimage	count=1
arg_pair	caractères lors de ||| string $string	count=1
function_name	de message d'erreur qui ||| result error	count=1
arg_pair	une et retourne ||| string $error	count=1
function_name	retourne ||| zip entry compressionmethod	count=2
function_name	[function_name_1] l'encodage ||| [function_name_2] [function_name_1]	count=2
function_name	document pdf d'entrée ||| pdf get	count=1
function_name	dictionnaire personnel ||| pspell config personal	count=1
function_name	fonction ||| close	count=1
arg_pair	comptage des termes ||| int $frequency	count=1
function_name	les composants qui sont ||| newt form destroy	count=1
arg_pair	la recherche sur les ||| string $pattern	count=1
function_name	à un marqueur ||| bind	count=1
namespace	durée du script ||| function	count=1
function_name	du pattern ||| pattern	count=1
arg_pair	chiffre les ||| array $env_keys array $pub_key_ids	count=1
arg_pair	ordinaire ||| int $minor	count=1
function_name	dans un formulaire ||| fieldgroup	count=1
function_name	bibliothèque gd installée ||| gd info	count=1
function_name	à la chaîne de ||| db2 escape	count=1
arg_pair	recherche sur ||| string $string	count=1
arg_pair	et attend qu'elles changent ||| array $read array $write	count=1
function_name	d'octets ||| byte	count=1
function_name	dernière erreur ||| error	count=6
function_name	[function_name_1] le module ||| [function_name_2] [function_name_1] string $algorithm string $algorithm_directory	count=1
function_name	ou désactive le termscomponent ||| set terms	count=1
function_name	la fonction get_defined_vars() ||| defined vars	count=1
arg_pair	la police de caractères ||| string $text	count=1
arg_pair	l'index spécifié ||| int $field_offset	count=1
function_name	supprime le [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	la ligne actuellement sélectionnée ||| int $fieldindex	count=1
function_name	fins [function_name] déboguage ||| [function_name] echo	count=1
arg_pair	fonction à l'exécution ||| string $class	count=2
function	[function_name_1] texte text ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	fonction cubrid_lob2_bind() est utilisée ||| string $bind_value_type	count=1
function_name	négation logique sur ||| neg	count=1
function_name	et la teinte d'une ||| modulate	count=1
namespace	déplace l'itérateur à ||| spldoublylinkedlist	count=1
function_name	socket socket ||| stream socket	count=1
arg_pair	identique à ||| int $hour	count=1
namespace	de ||| eventbuffer	count=1
namespace	rewinddir() ||| directory	count=1
function_name	le document pdf ||| pdf	count=1
arg_pair	xsltprocessor ||| string $name	count=1
return	en retour ||| void	count=1
arg_pair	apparaître après un ||| string $simplepost	count=1
function_name	programme qui sera démarré ||| add launchlink	count=1
namespace	descripteur numérique de ||| eventutil	count=1
function_name	les liens ajoutés ||| ps set border style	count=1
function_name	sous-jeu [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	uri d'espace de ||| elements by	count=1
function_name	informations [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	appelé une fois par ||| collectable	count=1
function_name	[function_name_1] attribut par ||| [function_name_1] [function_name_2]	count=1
function_name	calcule la tangente pour ||| tan	count=1
function_name	les métadonnées ||| construct	count=1
arg_pair	génère une ||| string $http_method	count=1
function_name	classe et revient à ||| parse class	count=1
return	libère ||| bool	count=3
arg_pair	avec la fonction pdf_open_image() ||| int $image	count=1
function_name	[function_name_1] la trace ||| [function_name_1] [function_name_2]	count=1
arg_pair	xsltprocessor ||| string $namespace	count=1
arg_pair	la séquence sequence ||| resource $imap_stream string $sequence	count=1
function_name	requêtes s'exécutent ||| loop	count=1
function_name	signature de ||| signature	count=1
function_name	document html depuis ||| html	count=1
namespace	pclose() hormis le fait ||| function	count=1
function_name	la prochaine ligne ||| continue	count=1
function_name	d'attente s'interrompt si elle ||| max	count=1
function_name	issues de transactions xa ||| ms xa gc	count=1
function_name	[function_name_1] par défaut ||| [function_name_2] [function_name_1]	count=14
function	ou [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	courante pour le ||| resource $image	count=1
function_name	dans la session courante ||| in session	count=1
function_name	pour les événements spécifiés ||| ibase set	count=1
function_name	toutes les données ||| add buffer	count=1
arg_pair	base de données ||| string $database	count=2
arg_pair	chaîne address tel ||| string $address string $default_host	count=1
return	être ||| void	count=4
namespace	de champs colonnes de ||| function	count=1
arg_pair	contenu avec ||| int $contents	count=1
function_name	informations de ||| info	count=1
function_name	de lecture aux secondaires ||| slave okay	count=1
arg_pair	le ||| int $chunk_size int $type	count=1
arg_pair	à destfp ||| resource $destfp	count=1
return	toutes les lignes de ||| int	count=1
function_name	méthode de compression utilisée ||| entry compressionmethod	count=1
function_name	s'interrompt si elle ||| eio set max poll time	count=1
return	le dossier ||| string	count=1
function_name	du ||| include path	count=2
function_name	paire clé/valeur courante du ||| each	count=1
return	l'application précédemment définie avec ||| string	count=1
arg_pair	remplacer le domaine courant ||| string $domain	count=2
function_name	récupère la largeur ||| get unicode width	count=2
function	[function_name_1] la colonne ||| [function_name_1] [arg_pair_2]	count=2
function_name	le dernier identifiant autogénéré ||| db2 last	count=1
arg_pair	nom de la colonne ||| mixed $column	count=1
arg_pair	la raideur de la ||| resource $ann	count=2
namespace	toute les commandes ||| imagick	count=1
namespace	pointeur interne ||| solrdocument	count=1
function_name	secondes ||| max	count=1
function_name	est similaire ||| field type	count=2
namespace	position courante du lob ||| oci-lob	count=1
function_name	erreur d'une erreur survenue ||| error	count=1
function_name	taille d'une [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	un dictionnaire à utiliser ||| enchant	count=1
function_name	retire [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	ligne ||| fgets	count=1
namespace	avec un ||| domdocument	count=1
function_name	la fréquence en ||| frequency	count=2
arg_pair	le calendrier calendar ||| int $month	count=2
namespace	de tri qui place ||| arrayobject	count=1
function_name	remplit ||| fill stroke	count=2
namespace	raison ||| hw_api_reason	count=1
function	[function_name_1] spécifié par ||| [function_name_1] [arg_pair_2]	count=3
function_name	nouvelle instance de ||| ps new	count=1
function_name	en fonctionnement ||| running	count=1
function_name	id ||| by id	count=1
function_name	de réplication et d'équilibrage ||| ms	count=1
function_name	utilisé pour ||| maxdb	count=1
arg_pair	passés sont gmt ||| int $year int $is_dst	count=1
return	similaire à la fonction ||| domelement	count=1
function_name	la ||| add buffer	count=2
arg_pair	un fichier spécial ||| string $pathname	count=1
arg_pair	paramètre filename sous la ||| string $filename	count=1
function_name	memcached::prepend() mais la ||| prepend	count=1
function_name	clé metaphone ||| metaphone	count=1
function_name	de ||| rzap	count=1
function_name	libeio ||| eio event	count=1
function_name	utilisée pour convertir ||| convert to	count=1
function_name	libère les ressources ||| free result	count=1
function_name	uri d'espace ||| elements	count=1
function_name	utilisé pour changer ||| set	count=1
function_name	doit ||| set	count=2
function_name	copie vide de ||| dbplus rcrtlike	count=1
arg_pair	valeur ||| mixed $value	count=1
function_name	plus récentes détectées ||| attr	count=1
namespace	ou sauvegarde une ||| function	count=1
function_name	le style ||| style	count=1
function_name	recherche une police et ||| load font	count=1
function_name	police ||| setfont	count=1
return	un champ ||| int	count=2
return	9 ||| bool	count=1
arg_pair	active un ||| resource $pdfdoc int $gstate	count=1
function_name	fonction geoip_setup_custom_directory() va modifier ||| setup custom directory	count=1
arg_pair	première contient les ||| string $prefix	count=1
function_name	retourne le nombre de ||| mysql num	count=1
function_name	[function_name_1] xml depuis ||| [function_name_2] [function_name_1]	count=2
function_name	de statut ||| status	count=3
function_name	un fichier exe ||| exe footer	count=1
function_name	nombre de colonnes dans ||| num	count=1
arg_pair	dans la chaîne ||| int $flags	count=1
return	implémente un algorithme de ||| void	count=1
function_name	la liste contient encore ||| valid	count=1
function_name	[function_name_1] est déclaré ||| [function_name_2] [function_name_1]	count=4
function_name	de mémoire maximale en ||| peak usage	count=1
function_name	exe ou auto-exécutable) est ||| exe	count=1
namespace	si le tableau ||| splfixedarray	count=1
function_name	peuvent ||| set metadata	count=2
function_name	retourne [function_name_2] ||| [function_name_1] current [function_name_2]	count=3
return	en utilisant le ||| bool	count=5
arg_pair	filename sous ||| string $filename	count=1
function_name	champ facet ||| facet	count=1
function_name	par la méthode oauthprovider::timestampnoncehandler() ||| nonce handler	count=1
namespace	chaque serveur memcache ||| memcached	count=1
function_name	de la couleur bleue ||| image blue primary	count=1
namespace	cette ||| soapclient	count=1
arg_pair	gestionnaire font retourné ||| int $font	count=1
arg_pair	dessine ||| float $x	count=1
function_name	crée le lien fort ||| eio link	count=1
arg_pair	false si une ||| resource $result int $field_offset	count=1
function_name	crée une nouvelle instance ||| create	count=1
namespace	normalement en ||| ev	count=1
return	en se basant sur ||| bool	count=1
function_name	racine ||| root	count=7
function_name	trace dans ||| trace	count=1
function_name	tailles de clés ||| get supported key sizes	count=1
function_name	delete [function_name] ||| [function_name] affected	count=2
arg_pair	ou ||| string $pathname int $mode	count=1
namespace	si un ||| pharfileinfo	count=1
namespace	données retourne les ||| mongocursor	count=1
function_name	[function_name_1] la fonction ||| [function_name_1] train stop [function_name_2]	count=1
function_name	configure les couleurs actives ||| ncurses color set	count=1
arg_pair	cette ||| string $pattern string $string	count=1
function_name	récemment [function_name] ||| get [function_name]	count=1
function_name	protège une chaîne ||| escape	count=1
function_name	lit le message d'erreur ||| error message	count=1
function_name	postgresql associée ||| pg result	count=1
function_name	de caractères ||| set	count=2
function_name	instance de la classe ||| fetch object	count=1
arg_pair	à un niveau ||| resource $p	count=2
function_name	retourne les mesures ||| get	count=1
function_name	à ||| get	count=2
return	sont sur ||| void	count=1
function	autocommit de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	nom ||| tag name	count=1
function_name	grande taille de ||| lo export	count=1
arg_pair	fusionne la source ||| bool $overwrite	count=1
function_name	recode la chaîne ||| recode string	count=1
function_name	a terminé son ||| set	count=1
function_name	[function_name] javascript ||| get [function_name]	count=2
namespace	dessin des lignes par ||| function	count=1
arg_pair	une colonne dans un ||| mixed $column	count=1
return	la forme ||| void	count=2
arg_pair	universal database ibm ||| string $database string $username	count=1
function_name	fonction libère les ressources ||| destroy	count=1
function_name	au nom de ||| name	count=1
arg_pair	nom de spotname et ||| string $spotname	count=1
function_name	de noms [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	: la première ||| mongodb $db	count=1
function_name	la file d'attente ||| eio	count=1
function_name	définit la fréquence en ||| set mlt min term frequency	count=1
arg_pair	str en ||| string $str array $convmap	count=1
arg_pair	colonne particulière d'une ||| int $column	count=1
function_name	événement timer à utiliser ||| event timer set	count=1
namespace	défini par ||| function	count=1
arg_pair	un attribut dans ||| array $attributes	count=1
function_name	de l'itérateur courant interne ||| iterator index	count=1
return	pour le ||| string	count=1
function_name	[function_name_1] spécifie ||| [function_name_2] [function_name_1]	count=2
namespace	capture de ||| function	count=1
arg_pair	le descripteur fd ||| mixed $fd	count=1
namespace	et extrait dans ||| function	count=1
function_name	l'objet a ||| set	count=1
namespace	certain délai sur ||| mongocursor	count=1
function_name	enregistrement dans ||| record	count=1
function_name	de l'attribut ||| attribute ns	count=1
return	la valeur ||| float	count=2
function_name	taux de connexion ||| connection rate	count=1
namespace	exécution ||| collectable	count=1
function_name	avec pg_execute() ||| pg	count=1
arg_pair	le flag spécifié ||| string $flag	count=1
arg_pair	un index d'une ||| int $index	count=1
function_name	de police ||| font	count=1
arg_pair	du texte ||| resource $psdoc	count=1
arg_pair	du tableau array1 ||| array $array1	count=1
function_name	la racine carrée ||| sqrt	count=2
function_name	ajoute ||| pdf add locallink	count=2
function_name	à utiliser dans ||| set soap	count=1
function_name	frame id3v2.x ||| description	count=1
function_name	éléments descendants [function_name_2] ||| [function_name_1] tag [function_name_2]	count=1
function_name	tag ||| picture	count=1
function_name	[function_name_1] statut en ||| [function_name_1] server [function_name_2]	count=1
function_name	serveur et le client ||| client	count=1
arg_pair	dessin des lignes ||| resource $image	count=1
function_name	feature demandée [function_name] ||| [function_name]	count=3
function_name	retourne le genre ||| get genre	count=2
namespace	des fichiers ||| pharfileinfo	count=1
arg_pair	dans set ||| array $siginfo	count=1
function_name	s'interrompt si ||| max poll time	count=1
function_name	récupère le taux ||| fann get connection rate	count=1
arg_pair	ou une ||| string $name mixed $step_callback	count=1
function_name	sur [function_name] ||| [function_name] insert	count=2
function_name	large ||| pg lo	count=1
function	spécifie le [arg_pair_2] ||| [function_name_1] element [arg_pair_2]	count=3
function_name	cette fonction est ||| element by	count=1
function_name	données dns associées ||| dns get	count=1
function_name	flux à utiliser avec ||| stream wrapper	count=1
arg_pair	réseau complet dans ||| string $configuration_file	count=1
namespace	requête ||| soapserver	count=1
function_name	les tables ||| tables	count=1
function_name	d'objets ||| batch	count=1
arg_pair	log_cmd_delete lors de la ||| array $server	count=1
arg_pair	de la ligne récupérée ||| array $ctorparams int $row	count=1
arg_pair	et empile les ||| mixed $value1	count=1
arg_pair	flux de texte ||| string $text	count=1
arg_pair	listes d'élements à créer ||| int $options	count=2
function_name	le code erreur d'une ||| error code	count=1
arg_pair	de colonnes et ||| int $columns	count=1
function_name	profilage de la base ||| profiling level	count=1
arg_pair	fusionne la ||| solrdocument $sourcedoc	count=1
arg_pair	l'image reconstituée et les ||| int $metric	count=1
function_name	document selon [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	image depuis un fichier ||| string $filename array $options	count=1
arg_pair	une ||| string $name mixed $step_callback	count=1
function_name	commençant aux coordonnées ||| imagecopy	count=1
function_name	similaire ||| element by	count=1
arg_pair	rappel callback qui sera ||| callable $callback	count=1
function_name	file de messages identifiée ||| msg remove queue	count=1
arg_pair	un ||| int $attribute	count=1
function_name	d'une archive ||| is	count=1
namespace	méthode recursivetreeiterator::valid() retourne ||| recursivetreeiterator	count=1
function_name	récupère le délai ||| gupnp context get	count=1
function_name	détruit la file ||| msg remove queue	count=1
function_name	d'internationalisation appelée ||| intl get	count=1
function_name	l'échelle les données d'entrée ||| scale train	count=1
return	encodés qui s'y ||| array	count=1
function_name	couleur de ||| color space	count=2
arg_pair	à un ||| resource $p	count=2
function_name	données personnalisées dans ||| set	count=1
function_name	[function_name_1] version mineure ||| [function_name_1] [function_name_2]	count=1
arg_pair	données du jeu de ||| resource $stmt	count=1
function_name	avec la ||| string	count=1
namespace	tous les paramètres de ||| solrparams	count=1
function_name	la fonction ||| fbsql	count=1
function_name	include_path ||| set	count=1
namespace	splfileinfo pour le nom ||| splfileinfo	count=1
function_name	une recherche ||| search	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $ann [arg_pair_2]	count=3
function_name	xml [function_name_2] ||| [function_name_1] error [function_name_2]	count=2
function_name	glob() de la libc ||| glob	count=1
return	du texte lors d'une ||| int	count=1
namespace	tracer ||| function	count=1
arg_pair	la résolution désirée ||| float $xresolution	count=1
arg_pair	traite certains éléments d'un ||| int $page	count=1
function	allant de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	lit la miniature de ||| exif thumbnail	count=1
return	défaut ||| void	count=2
function	[function_name_1] cible ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	base de données ||| string $database_name resource $link_identifier	count=1
function	[function_name_1] event ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	à une ||| resource $p	count=1
function_name	rpm valide ||| rpm	count=1
namespace	nombre ||| gmagickpixel	count=1
namespace	sauvegarde [namespace] de données ||| [namespace]	count=1
function_name	tailles de clés ||| key sizes	count=2
function	[function_name_1] un ||| [function_name_1] bool $flag [arg_pair_2]	count=1
arg_pair	mppe [arg_pair] clés reçues ||| [arg_pair]	count=1
function_name	base interbase et ||| ibase	count=1
function_name	exporte ||| openssl pkey export	count=2
arg_pair	chaîne str après avoir ||| string $str	count=4
arg_pair	résultats listant les ||| string $schema	count=4
return	pour laquelle ||| string	count=2
arg_pair	la première contient ||| string $prefix	count=1
arg_pair	dans le ||| int $height int $imagetype	count=1
function_name	la chaîne ||| string	count=1
return	de l'image ||| array	count=1
function_name	utilisé pour ||| set multi by	count=1
return	l'image de ||| gmagick	count=1
arg_pair	la chaîne str ||| string $str	count=9
function_name	le [function_name] depuis lequel ||| get terms [function_name]	count=1
function_name	la ||| newt form destroy	count=4
namespace	formats définis par ||| cairoimagesurface	count=1
namespace	résultats à ||| mongocursorinterface	count=1
function_name	maximal de [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	du contenu du fichier ||| get	count=1
function_name	la taille décompressée ||| packed size	count=2
function_name	le contenu courant ||| get	count=1
function_name	convertit un guid binaire ||| guid	count=1
function	le mode [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	en ||| int $juliandaycount	count=1
function_name	largeur ||| stringwidth	count=1
function	de définir une ||| set string $name	count=1
function_name	exception lorsqu'une erreur ||| exception	count=1
arg_pair	la fonction callback ||| callable $callback	count=1
namespace	xslt dans les feuilles ||| xsltprocessor	count=1
arg_pair	en lisant ses en-têtes ||| int $fromlength int $subjectlength	count=1
function	d'activation pour [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
arg_pair	préparer l'environnement pour ||| string $passwd	count=1
function_name	récupère la réponse brute ||| get raw response	count=1
function_name	l'entier ||| trader floor	count=1
arg_pair	une valeur entre 0 ||| resource $p int $value	count=1
function_name	vérification ||| array udiff assoc	count=1
function_name	cette fonction crée un ||| create element ns	count=1
namespace	temporaires [namespace] ||| [namespace]	count=1
arg_pair	contexte log_cmd_delete lors ||| array $server	count=1
arg_pair	utilisant le séparateur delimiter ||| string $delimiter string $string	count=1
function_name	le nom du fichier ||| file name	count=2
return	des références à des ||| array	count=1
namespace	l'archive phar ||| phar	count=2
function_name	xbm de l'image image ||| imagexbm	count=1
function_name	base de ||| fbsql set	count=2
function_name	paramètres passés sont ||| gmmktime	count=1
arg_pair	de couleur color dans ||| int $y2 int $color	count=1
return	à la fin ||| bool	count=2
function_name	de la tâche en ||| background	count=1
function_name	pclose() hormis ||| close	count=1
function_name	clé existante suivant si ||| put cat	count=1
return	tableau contenant ||| array	count=1
arg_pair	construit un objet d'événement ||| eventbase $base int $signum	count=1
return	les métadonnées et ||| mongodb	count=1
function_name	choisit la fonction ||| error handler	count=1
function	[function_name_1] représentation dom ||| [arg_pair_2] [function_name_1]	count=2
function_name	efface ||| delete textflow	count=2
arg_pair	configure la largeur ||| resource $p float $width	count=1
return	pour définir les modules ||| void	count=1
arg_pair	fonction ||| int $day	count=1
function_name	le facteur ||| threshold factor	count=1
arg_pair	données data en utilisant ||| string $data	count=1
arg_pair	la table table_name ||| resource $connection string $table_name	count=4
return	les entrées des éléments ||| array	count=1
function_name	le texte à ||| text	count=1
function_name	paramètres requis qu'optionnels ||| number of parameters	count=1
function_name	première paire ||| first	count=1
arg_pair	que les ||| int $day int $year	count=1
arg_pair	substr() basée [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function	[function_name_1] avec event_add() ||| [arg_pair_2] [function_name_1]	count=2
namespace	collectées par ||| function	count=1
namespace	avec la ||| eventbuffer	count=1
arg_pair	: la première contient ||| mongodb $db string $prefix	count=1
function_name	lue ||| mysql	count=1
function_name	extrait ||| mailparse uudecode	count=1
namespace	en d'autres termes ||| ev	count=1
function_name	un nouveau périphérique racine ||| gupnp root device new	count=1
function_name	cosinue pour chaque valeur ||| trader cos	count=1
function_name	suivi ||| trace	count=1
arg_pair	la base ||| string $database	count=2
function_name	décrémente la valeur ||| decrement	count=1
function_name	le fichier ||| set	count=1
function_name	considère ||| push	count=1
arg_pair	non annonce sa présence) ||| resource $root_device bool $available	count=1
function_name	pour tracer la ||| debug	count=1
function_name	résultats ||| rows	count=1
function_name	options clientes définies ||| options	count=1
arg_pair	la valeur ||| string $name string $value	count=1
function_name	serveur racine ||| gupnp root device	count=1
function_name	de données dbase spécifiée ||| dbase	count=1
function_name	première ligne ||| dbplus first	count=1
arg_pair	données encodées raw/gzip/zlib ||| string $max_decoded_len	count=1
function_name	qui est retourné à ||| fetch	count=1
namespace	interne par ||| function	count=1
function_name	le bytecode et ||| bcompiler write	count=1
arg_pair	combinant plusieurs images ||| imagickdraw $draw string $tile_geometry	count=1
function_name	est supportée par ||| is	count=1
function_name	des mots ||| mlt	count=1
function_name	les dimensions [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	xml ||| string	count=1
arg_pair	large_object ||| resource $large_object	count=1
arg_pair	prompt et ||| string $prompt	count=1
function_name	[function_name_1] informations de ||| [function_name_2] [function_name_1]	count=2
function_name	commentaire ||| comment	count=2
function	[function_name_1] une fonction ||| [arg_pair_2] [function_name_1]	count=1
namespace	l'appel à ||| samconnection	count=1
function_name	cosinue pour chaque valeur ||| cos	count=1
function_name	exception ||| set exception	count=1
function_name	ax || ||| least squares by factorisation	count=1
function_name	un fichier exe ||| write exe	count=1
arg_pair	une chaîne d'une ||| string $str int $start	count=1
function_name	interface de rappel pour ||| callback	count=1
function_name	la chaîne ||| escape string	count=1
function_name	fonction snmp2_walk() est ||| walk	count=1
function_name	qui ||| all	count=1
namespace	composants qui avaient été ||| function	count=1
function_name	caractères pour l'utiliser ||| dbx	count=1
function_name	portée de ||| lookup namespace	count=1
arg_pair	colonne données dans le ||| mixed $column mixed $param	count=1
arg_pair	le prompt ||| string $prompt callable $callback	count=1
function_name	tentative de connexion ||| connect	count=1
return	fichier temporaire tous les ||| array	count=1
function_name	distant en suivant ||| ssh2 sftp	count=1
function_name	fichier ||| set	count=2
arg_pair	texte à ||| resource $psdoc	count=1
arg_pair	memcached::getdelayed() mais la ||| callable $value_cb	count=1
namespace	l'extension ||| reflectionextension	count=4
arg_pair	[arg_pair_1] une ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	en incluant les composants ||| function	count=1
function	les messages [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	trace pour chaque ||| trace log	count=1
return	avec le numéro de ||| string	count=1
namespace	similaire à la fonction ||| domdocument	count=1
function_name	connexion donnée par le ||| yaz	count=1
function_name	pcos ||| pdf pcos	count=1
namespace	retourne les ||| mongocursor	count=1
namespace	fait que les paramètres ||| function	count=1
function_name	de numérotation ||| add page label	count=1
arg_pair	contenu ||| mongodb $db	count=1
function_name	la disposition courante ||| layout	count=1
arg_pair	la chaîne c dans ||| string $c	count=1
function_name	nouvelle csrcertificate ||| new	count=1
namespace	la [namespace] ||| [namespace]	count=11
function_name	test sur ||| test	count=1
return	la raison pour laquelle ||| string	count=2
function_name	les messages ||| imap delete	count=1
function_name	[function_name_1] module ||| [function_name_2] [function_name_1]	count=3
return	et tous ||| void	count=1
return	nombre de fois ||| int	count=2
function_name	certificat ||| openssl x509 fingerprint	count=1
function_name	où les ||| error log	count=1
arg_pair	les paramètres passés ||| int $day int $year	count=1
function_name	en ignorant ||| ireplace	count=1
function_name	la ||| poll	count=1
function_name	fichier temporaire tous ||| uudecode	count=1
function_name	fonction ||| form	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] proto [function_name_2]	count=2
return	sur le ||| resource	count=3
arg_pair	dernière modification d'un fichier ||| int $pri	count=1
function_name	les variables définies dans ||| apd	count=1
function_name	[function_name_1] la longueur ||| [function_name_1] [function_name_2]	count=1
function_name	gestionnaire curl donné en ||| curl	count=1
arg_pair	les paramètres passés ||| int $month	count=1
arg_pair	définit un générateur d'extraits ||| string $fragmenter string $field_override	count=1
namespace	retourne l'index du noeud ||| splpriorityqueue	count=1
return	sont sur des ||| void	count=1
arg_pair	par brush ||| resource $brush	count=1
arg_pair	cartes de ||| string $threshold_map int $channel	count=1
function_name	propriétés publiques ||| count	count=1
arg_pair	fonction à l'exécution ||| string $function	count=2
arg_pair	partir d'une ressource ||| resource $filehandle	count=1
arg_pair	de données database ||| string $database resource $link_identifier	count=1
function_name	défini l'endroit où les ||| error	count=1
function_name	les données du fichier ||| all	count=1
function_name	ajoutés à la ||| form	count=1
arg_pair	left top ||| float $top	count=1
arg_pair	fann_read_train_from_file() ||| resource $data string $file_name	count=1
function_name	message d'erreur associé ||| ifx errormsg	count=1
arg_pair	fonction ||| string $pattern string $string	count=1
arg_pair	fonction de rappel ||| mixed $callback	count=1
function_name	nombre de champs du ||| num fields	count=1
function	lie [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	ligne de données dans ||| fbsql fetch row	count=1
namespace	un attribut ||| sphinxclient	count=1
function_name	[function_name_1] accessible ||| [function_name_2] [function_name_1]	count=1
function_name	appliqué à ||| images	count=1
function_name	un objet ||| children	count=1
function_name	spécifié par socket ||| socket	count=1
function_name	timer ||| timer	count=2
function_name	jeu de backends supportés ||| backends	count=1
function_name	insère l'entrée ||| dba insert	count=1
arg_pair	service daemon ||| string $daemon	count=1
function_name	des antislashs ||| string	count=1
arg_pair	fichier fd pour ||| int $mode	count=1
return	se déplace sur ||| void	count=1
namespace	la classe ||| reflectionclass	count=1
function_name	minimum de sévérité ||| mssql min error severity	count=1
function_name	envoi une notification ||| notify	count=1
function_name	des ||| chmod	count=1
function_name	est ||| mcrypt module is	count=1
arg_pair	__autoload() fournie ||| bool $throw	count=1
function_name	sélectionne une base de ||| mysql db query	count=1
function_name	un serveur oracle ||| oci	count=1
namespace	et ||| mongocursorinterface	count=1
function_name	utilisant [function_name] crochets d'accès ||| offset [function_name]	count=1
function_name	candidates en cascade ||| cascade candidate	count=1
namespace	d'attente ||| function	count=1
function_name	ftp et ||| ftp	count=1
function_name	fichiers encodés ||| mailparse uudecode all	count=1
function_name	d'erreurs depuis la dernière ||| error	count=1
return	d'un tableau associatif ||| array	count=1
function_name	utilisées par la ||| destroy	count=1
function_name	format de ||| format	count=1
function_name	ouvre le fichier de ||| open	count=1
namespace	ne doit être utilisée ||| pharfileinfo	count=1
function_name	une fois par objet ||| set	count=1
return	chaîne de caractères passée ||| string	count=1
return	pour la création ||| string	count=1
function_name	toutes les bases ||| dbs	count=1
function_name	miniatures de l'image ||| images	count=1
function_name	est identique ||| eregi	count=1
arg_pair	vers un ||| string $filename	count=1
return	fonction libère ||| void	count=1
function_name	et tous les ||| newt	count=1
function_name	group [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	pour l'affichage ||| pos	count=1
namespace	le dictionnaire représenté ||| function	count=1
arg_pair	contient la ligne ||| resource $result int $row	count=1
function_name	chaîne text sont des ||| ctype	count=2
arg_pair	de la sequence ||| resource $imap_stream string $sequence	count=1
function_name	désactive la bufferisation ||| set buffering	count=1
function_name	supporte les verrous via ||| supports	count=1
function	d'activation [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=1
rest	prépare un [function_2] ||| [function_2] [return_1]	count=1
arg_pair	à un niveau de ||| resource $p float $g	count=2
function_name	de configuration ||| config	count=1
arg_pair	position ||| string $charset	count=1
function_name	exécution ou son référencement ||| garbage	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] server [function_name_2]	count=4
namespace	serveur memcache ||| memcached	count=2
function_name	returns group ||| get group	count=2
arg_pair	seconds secondes et ||| int $seconds	count=1
function_name	l'itération commence ||| begin iteration	count=2
function_name	month de ||| days in month	count=1
function_name	suspend la [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	cette ||| get element by	count=1
function_name	du serveur ||| server	count=2
return	déplace l'itérateur ||| void	count=2
arg_pair	non annonce sa présence) ||| bool $available	count=1
return	noeuds ||| bool	count=2
namespace	en utilisant son ||| ziparchive	count=2
function_name	queue ||| mqseries put1	count=2
return	fonction closedir() ||| void	count=1
function_name	les regroupements distincts ||| set group distinct	count=2
function_name	le ||| doc	count=2
function_name	de flux et ||| stream	count=1
function_name	apache [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	utilisées ||| destroy	count=1
function_name	un sommaire de leur ||| overview	count=1
return	les noms et ||| array	count=1
function_name	fichier temporaire tous les ||| all	count=1
return	d'attente s'interrompt si ||| void	count=1
function_name	l'algorithme d'entrainement ||| training algorithm	count=1
function	[function_name_1] texte et ||| [function_name_1] [arg_pair_2]	count=1
function_name	données personnalisées ||| set	count=1
function_name	utilisée pour insérer ||| cubrid set add	count=2
namespace	d'une image contenant ||| gmagick	count=1
arg_pair	au service daemon ||| string $daemon	count=1
arg_pair	entrées du [arg_pair] ||| [arg_pair]	count=3
arg_pair	et le démarre automatiquement ||| int $priority	count=1
function_name	personnalisées dans un ||| set metadata	count=1
function_name	ligne ||| odbc fetch	count=1
return	du ||| gmagick	count=1
function_name	termine la session ||| session	count=1
function_name	des champs utilisés pour ||| field	count=1
return	par objet ||| void	count=1
function_name	[function_name_1] version ||| [function_name_1] client [function_name_2]	count=1
function_name	élément avec un ||| get element by id	count=1
function_name	pour la dernière requête ||| stmt errno	count=1
arg_pair	une colonne dans un ||| resource $stmt mixed $column	count=1
namespace	normalement ||| ev	count=1
function_name	champ fdf ||| fdf	count=1
function_name	identique à ||| close	count=1
function_name	le dernier identifiant ||| last	count=1
function_name	récupère ||| kadm5 get principal	count=2
function_name	spécial ou ||| mknod	count=1
return	closedir() ||| void	count=1
arg_pair	considère array comme ||| array $array	count=1
function_name	dns associées à ||| dns get record	count=1
function_name	la cubrid_drop() est ||| cubrid drop	count=2
function_name	donné ||| get element	count=1
namespace	la [namespace] en cours ||| [namespace]	count=1
function_name	fréquence à partir ||| min doc frequency	count=1
function_name	chemin absolu du dossier ||| posix getcwd	count=1
function_name	de connexion en cas ||| connect	count=1
arg_pair	l' index à ||| mixed $index	count=1
function_name	écrit du texte ||| ps	count=1
function_name	au socket ||| socket	count=1
function	[function_name_1] prompt et ||| [function_name_1] callback handler install [arg_pair_2]	count=1
arg_pair	clients à l'écoute ||| int $denominator	count=1
function_name	un verrou de ||| lock	count=1
function	[function_name_1] champ ||| [function_name_1] name resource $fdf_document [arg_pair_2]	count=1
namespace	de l'itérateur directoryiterator ||| directoryiterator	count=1
function_name	la forme en incluant ||| form destroy	count=1
function_name	crée un document xml ||| merge	count=1
arg_pair	à analyser ||| string $encoding	count=1
function_name	chromacité du point vert ||| green primary	count=1
function_name	nouveau pattern ||| begin pattern	count=1
arg_pair	un message d'erreur ||| string $message int $message_type	count=1
arg_pair	rappel à appeler à ||| mixed $callback	count=1
arg_pair	contenu dans un fichier ||| resource $connection	count=1
arg_pair	les paires ||| array $data	count=1
arg_pair	condamnations svn pour ||| string $repository_url	count=1
function_name	pour définir les modules ||| set module	count=1
function_name	être utilisé pour tracer ||| debug	count=1
function_name	de grande taille ||| pg lo seek	count=1
function	gris [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	retourne la valeur du ||| get	count=3
namespace	appeler lorsqu'un agent ||| gearmanclient	count=1
arg_pair	un nom de domaine ||| int $options	count=1
function_name	[function_name_1] déchargement ||| [function_name_2] [function_name_1]	count=2
function_name	fichier au sein d'une ||| is	count=1
function_name	lorsque l'on quitte le ||| decl	count=1
return	précédemment définie avec ||| string	count=1
function_name	phar quand il ||| map phar	count=1
function_name	fichiers ||| construct	count=2
rest	[return_1] [function_2] ||| [return_1] ftp [function_2]	count=2
function_name	liens ajoutés ||| ps set border color	count=1
function_name	un dossier ||| mkdir	count=1
arg_pair	size avec ||| array $array int $size	count=1
return	contenu du ||| int	count=1
arg_pair	les variables ||| array $array	count=1
function_name	événements de l'objet com ||| com	count=1
function_name	associée ||| cas	count=1
arg_pair	fait que ||| int $hour int $minute	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cache min [function_name_2]	count=2
function_name	est utile ||| get	count=1
function_name	similaire à ||| close	count=1
function_name	fonction d'activation pour ||| activation	count=3
namespace	mémoire utilisée par ||| function	count=1
function_name	une instance glo ||| cubrid save to glo	count=1
function_name	valide un document selon ||| validate source	count=1
function_name	protège un ||| pg escape	count=1
function_name	ou désactive la bufferisation ||| buffering	count=1
function_name	élément ||| by id	count=2
function_name	dom et la ||| import dom	count=1
function_name	est similaire à ||| get element	count=1
function_name	la fonction openssl_get_cert_locations() retourne ||| openssl get cert locations	count=1
namespace	passée en argument ||| function	count=1
function_name	équivalent à memcached::prepend() mais ||| prepend	count=1
function_name	un fichier ||| posix mknod	count=1
function_name	la dernière requête ||| mysqli stmt errno	count=2
namespace	à la fin et ||| mongocursorinterface	count=1
function_name	parcourt ||| batch size	count=2
function_name	la mémoire utilisée par ||| memory usage	count=1
function_name	d'archives spécifié ||| entry	count=1
return	sur un fichier ||| resource	count=1
function_name	enfant au noeud ||| child	count=1
return	ne diffère du ||| int	count=1
function_name	cette méthode retourne ||| get	count=3
function_name	le précédent ||| prev	count=1
function_name	la forme et tous ||| newt	count=1
function_name	connexion à [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	demande un verrou ||| dbplus	count=1
function_name	les bords et remplit ||| pdf closepath fill	count=1
function_name	client pour certains jeux ||| client	count=1
function_name	type strpos() ||| strrpos	count=1
function_name	d'une chaîne de caractères ||| load string	count=1
function_name	lorsque l'objet a ||| set	count=1
namespace	javascript ||| v8js	count=2
arg_pair	index ||| mixed $index	count=1
function_name	du script ||| include	count=1
namespace	contenu ||| splfileinfo	count=1
arg_pair	oauthexception ||| string $oauthexception	count=1
function_name	compression utilisée ||| zip	count=1
arg_pair	subject qui ||| string $subject	count=1
namespace	image en balançant ||| gmagick	count=1
function_name	une ressource de flux ||| resource	count=1
arg_pair	le dossier directory ||| string $directory	count=1
function_name	la ||| set max poll time	count=2
function_name	caractères brutes des ||| terms return raw	count=1
function_name	[function_name_1] un document ||| [function_name_2] [function_name_1]	count=1
function_name	la longueur [function_name_2] ||| [function_name_2] word [function_name_1]	count=4
function_name	stoppe ||| stop	count=1
function_name	nouvelles coordonnées ||| moveto	count=1
arg_pair	la police de caractères ||| gmagickdraw $draw	count=1
function_name	le type [function_name_2] ||| string image type to [function_name_2] [function_name_1]	count=1
function_name	le mois month de ||| month	count=1
function_name	[function_name_1] représentation textuelle ||| [function_name_2] [function_name_1]	count=2
function_name	cette fonction retourne le ||| get value	count=1
arg_pair	avec gestionnaire de queues ||| string $qmanagername	count=1
return	virtual...-- > [return] ssi fichiers ||| [return]	count=1
function_name	des nombres décimaux ||| set environment	count=1
function_name	assigne ||| event priority set	count=1
namespace	par son ||| ziparchive	count=2
function_name	gestionnaire d'événements pour ||| ibase set event handler	count=1
function_name	dans un espace de ||| in	count=1
function_name	compte le nombre ||| count	count=1
return	force l'écriture de ||| bool	count=1
function_name	numérique ||| cubrid	count=1
function_name	transactions xa ||| ms xa gc	count=1
function_name	récupère [function_name] pour parcourir ||| get [function_name]	count=2
arg_pair	le chemin path ||| string $path	count=3
return	mémoire allouée en interne ||| bool	count=1
function_name	la file de ||| remove queue	count=1
namespace	que ceux ||| pharfileinfo	count=1
function_name	récupère le nombre ||| mysql num	count=1
arg_pair	clé passées ||| string $method	count=1
return	sur un fichier spécifié ||| resource	count=1
namespace	qui place les chaînes ||| arrayobject	count=1
arg_pair	un hyperlien à ||| float $lly	count=2
function_name	true si [function_name] a ||| get [function_name]	count=1
return	la valeur courante ||| float	count=1
function_name	peinture ||| stroking	count=1
function_name	une action ||| action	count=1
namespace	assigné ||| gearmanjob	count=1
function_name	la fraction [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	du soleil ||| date	count=2
function_name	antislash devant tous ||| preg quote	count=1
arg_pair	png ||| string $pngname	count=1
function_name	fichiers distant en suivant ||| ssh2	count=1
function_name	les paramètres ||| gmmktime	count=1
function_name	d'interpolation [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	les métadonnées et ||| string $prefix	count=1
function_name	texte à la position ||| text	count=1
arg_pair	avec ||| resource $radius_handle	count=1
function_name	exe ou auto-exécutable) est ||| write exe footer	count=1
function_name	l'uri de base ||| base uri	count=1
function_name	liste ||| publickey list	count=1
function_name	constructeur ||| construct	count=1
return	permet ||| void	count=1
function_name	de la base de ||| db	count=1
function_name	une page pour ||| open pdi page	count=1
function_name	et envoie une réponse ||| handle	count=1
function_name	champ à ||| field	count=2
arg_pair	une archive zip ||| string $localname	count=1
arg_pair	pointant vers un programme ||| string $filename	count=1
function_name	un ||| size	count=2
function_name	crée un nouveau noeud ||| create	count=1
namespace	le [namespace] ||| [namespace]	count=13
function_name	image et [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	récupère les informations sur ||| hint	count=1
arg_pair	sous-chaîne depuis une chaîne ||| int $start	count=1
function_name	d'entrainement en commençant à ||| train data	count=1
function_name	distants rpc ||| loop	count=1
function_name	tâche est connue sur ||| is known	count=1
function_name	[function_name_1] le type ||| [function_name_1] mime [function_name_2]	count=2
namespace	nombre ||| ev	count=2
function_name	queues et l'application ||| disc	count=1
function_name	de preg_replace() hormis le ||| preg replace	count=1
function_name	extrait dans ||| mailparse	count=1
return	plus de ||| bool	count=1
arg_pair	par la chaîne str ||| string $str	count=1
arg_pair	dans un ||| array $attributes	count=1
return	réponses dans une ||| bool	count=1
function_name	qui sont sur des ||| form	count=1
return	construit un ||| sdo_das_xml_document	count=1
function_name	doit être appelé une ||| set	count=1
function_name	résultats de la prochaine ||| cubrid next result	count=1
return	file d'attente s'interrompt ||| void	count=1
function	définit [arg_pair_2] ||| [function_name_1] namespace decl handler [arg_pair_2]	count=1
function_name	les caractères ||| db2 escape string	count=1
function_name	timestamp unix ||| variant date to timestamp	count=1
function_name	ignorant ||| ireplace	count=1
function_name	de ||| set	count=50
function_name	la valeur ||| path	count=1
function_name	réinitialise le numéro ||| fann reset	count=1
function_name	forme ||| string	count=1
function_name	[function_name_1] taille de ||| [function_name_1] current font [function_name_2]	count=1
function_name	[function_name_1] couche ||| [function_name_1] [function_name_2]	count=1
arg_pair	déplace le pointeur interne ||| int $type	count=1
function_name	le noeud courant ||| attribute node ns	count=1
function_name	les ||| dbplus	count=1
function_name	ou curseur oracle ||| oci	count=1
function_name	miniature de ||| exif thumbnail	count=1
arg_pair	méthode ||| string $function_name	count=1
function_name	le ||| ob	count=1
function_name	attribut avec comme ||| attribute	count=1
function_name	lit ||| event buffer read	count=1
function_name	[function_name] demandée dans ||| [function_name]	count=3
function_name	la forme et ||| newt form	count=1
function_name	similaire à la fonction ||| id	count=1
arg_pair	la structure ||| int $num_data	count=1
function_name	des paramètres requis ||| required parameter	count=1
function_name	où ||| fann set error	count=1
function_name	champ est annulable ||| ingres field nullable	count=2
arg_pair	un message ||| string $message int $message_type	count=1
function_name	un lot ||| batch size	count=1
function_name	point vert ||| image green primary	count=1
function_name	un ||| delete	count=1
function_name	élément ||| get	count=1
function_name	inode du fichier ||| get inode	count=1
function	[function_name_1] clic sur ||| [arg_pair_2] [function_name_1]	count=1
return	le dessin des ||| bool	count=1
arg_pair	la surveillance d'une ressource ||| resource $fam_monitor	count=1
function_name	nombres décimaux ||| set environment	count=1
function_name	présentes dans tous ||| intersect	count=1
function_name	depuis une fonction ||| from	count=1
function_name	qui sont sur ||| newt form destroy	count=1
namespace	tout ou partie ||| function	count=1
return	fois par objet ||| void	count=1
arg_pair	l'historique système ||| string $ident	count=1
return	boucle ||| evloop	count=1
namespace	données personnalisées dans un ||| pharfileinfo	count=1
return	> valeur ||| mixed	count=1
return	en hauteur dans ||| bool	count=1
function_name	synchronise ||| dba sync	count=1
arg_pair	fichier remote_file depuis le ||| int $mode	count=2
function_name	si une chaîne est ||| is	count=1
return	réponse ||| bool	count=1
function_name	l'objet com ||| com event sink	count=1
namespace	classe définie par l'utilisateur ||| reflectionclass	count=1
return	retourne un tableau associatif ||| array	count=2
function_name	les tailles de clés ||| key sizes	count=2
function_name	définit les itérations ||| setimageiterations	count=1
function_name	un élément avec un ||| id	count=1
function_name	compare une ||| compare image channels	count=1
arg_pair	boîte aux lettres donnée ||| resource $imap_stream string $mailbox	count=1
function_name	base de données référencée ||| header	count=1
function_name	une police et la ||| pdf load font	count=1
arg_pair	la suppression d'un ||| array $deleteoptions	count=1
arg_pair	message dans ||| resource $compcode	count=2
function_name	données [function_name] ||| [function_name]	count=4
arg_pair	factorielle crée ||| int $size	count=1
return	avec un identifiant donné ||| domelement	count=1
function_name	ou ||| mknod	count=1
function_name	s'interrompt si elle prend ||| max poll	count=1
function_name	gestionnaire ||| stream	count=1
namespace	à ||| mongogridfs	count=1
function_name	data infile [function_name] précédemment définit ||| [function_name] infile	count=1
function_name	pays et ||| by country and	count=2
function_name	méthode de ||| entry	count=1
arg_pair	format csv ||| string $enclosure string $escape	count=1
namespace	s'y trouvent ||| function	count=1
function_name	un élément avec ||| get element by id	count=1
namespace	fonction permet de ||| function	count=1
arg_pair	les paramètres passés sont ||| int $day int $year	count=1
return	un tableau associatif avec ||| array	count=1
function	[function_name_1] constante imagetype_xxx ||| [function_name_1] int $imagetype [arg_pair_2]	count=1
return	lot d'objets résultants ||| mongocommandcursor	count=1
arg_pair	à la fonction mktime() ||| int $day int $year	count=1
return	le fait qu'elle ||| int	count=2
namespace	verrou sur ||| function	count=1
namespace	une fonction définie par ||| function	count=2
function_name	des données personnalisées dans ||| set	count=1
namespace	hash et ||| quickhashinthash	count=1
function_name	connexion persistante à un ||| pconnect	count=2
namespace	caractères de l'objet ||| serializable	count=1
namespace	document source ||| xmldiff\file	count=1
arg_pair	l'image image ||| int $font	count=1
return	chaînes ||| void	count=1
function_name	allant de la ||| strstr	count=1
namespace	particulière ou ||| function	count=1
function_name	[function_name] dans ||| add [function_name]	count=3
function_name	marqueur ||| bind array by	count=1
function_name	choisit la couleur utilisée ||| pdf setrgbcolor	count=1
arg_pair	dans l'argument result de ||| int $pri	count=2
arg_pair	un hyperlien à la ||| float $lly	count=1
function_name	numéro de ligne courant ||| current line	count=1
arg_pair	une ||| string $class	count=2
function_name	objet lorsque ||| set	count=1
return	un fichier ||| void	count=1
function_name	ligne du [function_name_2] ||| [function_name_2] [function_name_1]	count=12
return	avec file_put_contents() si ||| bool	count=1
arg_pair	sauvegarde son contenu dans ||| resource $connection	count=1
function_name	[function_name_1] de l'espace ||| [function_name_2] [function_name_1]	count=2
function_name	readline [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	méthode de compression ||| zip	count=1
function_name	content mime d'un ||| mime content	count=2
arg_pair	document ||| string $src	count=2
function_name	appliqué à différents niveaux ||| preview images	count=1
namespace	appeler lorsqu'un ||| gearmanclient	count=1
function_name	spécifiée et commence ||| db2	count=1
function_name	la couleur ||| color floodfill image	count=1
function_name	la prochaine requête xpath ||| xpath	count=1
function_name	[function_name_1] insérer un ||| [function_name_2] [function_name_1]	count=6
function_name	verrou exclusif ||| lock	count=1
function_name	terminé son exécution ||| set	count=1
function_name	de transfert curl ||| curl setopt resource	count=1
function_name	[function_name_1] une action ||| [function_name_2] [function_name_1]	count=1
function_name	du fichier ||| all	count=1
return	[return] processus ||| [return]	count=4
function_name	nombre maximal de ||| max num	count=2
namespace	son exécution ou ||| collectable	count=1
function_name	référentiel ||| svn commit	count=1
namespace	d'entraînement ||| svm	count=1
function_name	le [function_name] poll ||| get [function_name]	count=1
namespace	les réponses dans une ||| mongocursor	count=1
function_name	ligne ||| oci fetch	count=1
function_name	la chaîne de ||| db2	count=1
arg_pair	le paramètre timestamp ||| int $format	count=1
function_name	d'une notification de ||| proxy add notify	count=1
namespace	du script en cours ||| function	count=1
function_name	décrémente ||| ucache dec	count=1
namespace	retourne false pour ||| recursivetreeiterator	count=1
function_name	défini l'endroit où ||| fann	count=1
function_name	verrou d'écriture sur l'instance ||| cubrid lock write	count=1
function_name	paramètre patch et enregistre ||| file patch	count=1
return	du ||| string	count=3
arg_pair	procédure stockée sur un ||| bool $skip_results	count=1
return	que chaîne et ||| string	count=1
function_name	depuis la dernière requête ||| stmt error	count=1
arg_pair	requête query ||| string $query resource $link_identifier	count=1
function_name	fichiers ||| mailparse uudecode all	count=2
arg_pair	fonction anonyme à ||| string $args string $code	count=1
function_name	définit l'identifiant [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	seconde contient le ||| mongodb $db	count=1
function_name	associé à ||| mysql data	count=1
arg_pair	mode wsdl ou ||| mixed $wsdl array $options	count=1
function_name	à l'échelle les sorties ||| fann scale	count=1
arg_pair	filename sous la ||| string $filename	count=1
function_name	retaille et déplace ||| chop	count=1
function_name	méthode de compression utilisée ||| entry	count=1
function_name	libère de la ||| free result	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] current font [function_name_2]	count=6
function_name	statut du tampon ||| status	count=1
function_name	syntaxe de ||| syntax	count=1
return	base de ||| bool	count=2
function_name	l'image dans la ||| image	count=1
function_name	pagination ldap en ||| ldap	count=1
return	une pile ||| int	count=1
return	tâches ||| gearmantask	count=3
function_name	de sortie en cascade ||| cascade output	count=1
arg_pair	hyperlien à ||| float $urx	count=2
function_name	si le noeud est ||| is	count=1
function_name	met à l'échelle les ||| scale train	count=1
arg_pair	par son identifiant object_id ||| mixed $object_id	count=1
function_name	agent snmp spécifié ||| snmp2	count=1
function_name	[function_name_1] suivant ||| [function_name_1] [function_name_2]	count=1
function_name	la temporisation de sortie ||| ob	count=1
function_name	spécifié par ||| compressionmethod	count=1
function_name	traduction des ||| html translation table	count=1
function_name	délai sur le ||| immortal	count=1
function_name	elle prend plus de ||| eio set	count=1
function_name	blob à remplir ||| blob	count=1
function_name	connexion ||| commit	count=1
arg_pair	pour event ||| mixed $readcb	count=1
function_name	sert ||| delete	count=1
arg_pair	paramètre filename sous ||| string $mode	count=1
arg_pair	définir la valeur ||| mixed $value	count=1
function_name	tableau associatif ||| array	count=1
function_name	code erreur d'une ||| error code	count=1
arg_pair	équivalent à memcached::getdelayed() mais ||| callable $value_cb	count=1
arg_pair	contenu avec des ||| string $blockname int $contents	count=1
arg_pair	que les paramètres ||| int $hour	count=1
function_name	[function_name_1] de mémoire ||| [function_name_2] [function_name_1]	count=1
return	un document ||| string	count=1
function_name	défini l'uri de base ||| base uri	count=1
function_name	fonction retourne le ||| get value	count=1
function_name	une connexion persistante à ||| pconnect	count=2
arg_pair	attrappées par des ||| string $arg	count=1
function	cette fonction retourne [function_name_1] [arg_pair_2] ||| function bool mcrypt module [function_name_1] [arg_pair_2]	count=1
namespace	et retourne une image ||| imagick	count=1
function_name	informations sur le système ||| posix uname	count=1
function_name	sélectionne une base ||| mysql db query	count=1
function_name	connecte le dernier point ||| closepath	count=1
arg_pair	en une et retourne ||| string $new_data2	count=1
function_name	filtre décimal à la ||| filter float	count=1
function_name	champ facet ||| set facet	count=1
function_name	les en-têtes ||| headers	count=6
namespace	et tous les ||| function	count=1
function_name	affiche le texte à ||| show text	count=1
arg_pair	les définitions ||| resource $id	count=1
function_name	thread ||| thread	count=2
arg_pair	dans ||| resource $pxdoc	count=1
function_name	retourne le ||| get attribute	count=1
function_name	d'erreurs libxml standard et ||| libxml	count=1
namespace	est similaire ||| function	count=3
namespace	stocker des données personnalisées ||| pharfileinfo	count=1
function_name	retourne la taille ||| size	count=4
arg_pair	colonne représentant une ||| resource $stmt	count=1
arg_pair	avec ||| resource $radius_handle string $hostname	count=1
function_name	pour toutes ||| set	count=1
function_name	la dernière tentative ||| connect errno	count=2
namespace	dans le ||| arrayobject	count=1
namespace	balise xml ||| simplexmliterator	count=1
function_name	premier ||| to first	count=1
return	par l'identifiant ||| bool	count=1
arg_pair	affecte ||| mixed $errorcb	count=1
function_name	translation de l'origine du ||| pdf translate	count=1
function_name	la plus proche ||| imagecolorclosestalpha	count=1
arg_pair	object_id ||| string $object_id string $timeout	count=1
function	[function_name_1] la colonne ||| [arg_pair_2] [function_name_1]	count=2
function_name	calcule la tangente pour ||| trader tan	count=1
arg_pair	commande command ||| string $command	count=1
return	requête ||| int	count=1
function_name	convertit un guid ||| mssql guid	count=1
function_name	verrou sur le ||| lock	count=1
return	un verrou acquis avec ||| bool	count=1
function_name	la chaîne de ||| escape string	count=1
arg_pair	fait qu'elle ignore ||| string $pattern string $string	count=1
function_name	format de l'image suivant ||| format	count=1
function_name	fonction est [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	les statistiques du ||| stats	count=1
function_name	le tag ||| picture	count=1
namespace	ascii est donné par ||| function	count=1
function_name	maximale ||| peak	count=1
function_name	dernière erreur survenue ||| rrd error	count=1
namespace	appelé lors de la ||| recursivetreeiterator	count=1
arg_pair	object_id ||| string $object_id string $type	count=1
namespace	cette méthode détermine si ||| pharfileinfo	count=1
function_name	s'y trouvent ||| uudecode	count=1
arg_pair	la donnée data ||| mixed $data	count=1
function_name	hormis le fait ||| eregi	count=1
return	constructeur de base ||| string	count=1
function_name	base de données kerberos ||| kadm5	count=1
function	système de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	lob retourné par ||| function	count=1
function_name	la chaîne de caractères ||| db2	count=1
function_name	fait qu'elle ||| proc close	count=1
function_name	par ||| zip entry compressionmethod	count=2
function_name	[function_name_1] group ||| [function_name_2] [function_name_1]	count=1
function_name	une nouvelle [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	texte à ||| bool	count=1
return	supprime un nom depuis ||| resource	count=1
function_name	flux ||| stream set	count=1
function_name	est de ||| is numeric	count=1
function_name	nom d'hôte associé ||| host	count=1
function_name	lecture sur les secondaires ||| slave okay	count=1
function_name	sarprop ||| set sarprop	count=3
function	[function_name_1] et p ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	text à la ||| string $text	count=1
function_name	la fonction eio_chmod() modifie ||| eio chmod	count=1
namespace	tampon ||| eventbuffer	count=2
function_name	positions ||| cycle	count=1
function_name	la ||| eio set max	count=1
function_name	[function_name_1] clé ||| [function_name_1] [function_name_2]	count=1
return	qualité d'une image contenant ||| gmagick	count=1
arg_pair	correspondant à un ||| string $region_code	count=1
function	puissance [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	souscrit à ||| subscribe	count=1
return	en utilisant 2 ||| gmagickdraw	count=1
arg_pair	mode à ||| string $mode_directory	count=1
namespace	la première ||| mongogridfs	count=1
arg_pair	connexion existante ||| int $close_type	count=1
arg_pair	d'extraits ||| string $field_override	count=1
function_name	supprime le profil ||| remove image profile	count=2
arg_pair	dans la base de ||| resource $connection	count=1
arg_pair	un fichier ||| string $filename bool $all_frames	count=1
arg_pair	un espace ||| string $qualifiedname	count=1
function_name	cosinue ||| trader cos	count=1
function_name	similaires à retourner pour ||| mlt	count=1
function_name	récupère l'objet de la ||| get	count=1
arg_pair	chemin path à une ||| string $path	count=1
namespace	permet de ||| pharfileinfo	count=1
function_name	[function_name_1] maximale d'une ||| [function_name_2] [function_name_1]	count=1
function_name	sous-jeu de ||| fann subset	count=2
function_name	les en-têtes http ||| apache request headers	count=2
arg_pair	caractères ||| string $pattern string $string	count=2
function_name	compte les éléments dans ||| count	count=1
function_name	à la fonction ||| gmmktime	count=1
arg_pair	avec les bases de ||| string $key	count=1
arg_pair	field ||| resource $statement mixed $field	count=1
function_name	charge la police truetype ||| load	count=1
arg_pair	contenu ||| int $contents	count=1
return	si elle correspond ||| bool	count=1
function_name	composants qui sont ||| newt form	count=1
return	être utilisée pour définir ||| void	count=1
function_name	la fonction socket_recv() reçoit ||| recv	count=1
function_name	d'attente ||| eio set max	count=1
return	les opérations ||| array	count=1
function_name	avec une provenant ||| newt pop	count=1
namespace	d'autres termes la ||| ev	count=1
namespace	à la ||| mongocursorinterface	count=1
namespace	sortie ||| gmagick	count=1
function_name	pour ||| module	count=1
arg_pair	fonction à fournir à ||| string $contents	count=1
function_name	pkcs#12 ||| pkcs12	count=1
function_name	protège une chaîne de ||| escape string	count=1
namespace	ou un lien ||| function	count=1
function_name	de sortie en ||| ob	count=1
function_name	les ||| form	count=3
function_name	instance ||| construct	count=1
function_name	analyse ||| mailparse rfc822 parse	count=1
namespace	méthode ||| mongodb	count=1
arg_pair	prédéfini de cartes de ||| string $threshold_map	count=1
arg_pair	jeu de résultats result ||| resource $result	count=1
function_name	spl ||| spl	count=1
function_name	document pdi ||| pdi	count=1
arg_pair	spécifié grâce à gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
function_name	fichier au ||| is	count=1
function_name	sortie ||| ob	count=2
function_name	récupère les connexions ||| fann get connection array	count=1
function_name	est utile uniquement avec ||| get	count=1
function_name	composants qui ||| newt form	count=2
function_name	contrôle ||| gupnp control point	count=1
function_name	de l'itérateur courant interne ||| get iterator	count=1
return	appelé lors de ||| void	count=1
function_name	les valeurs soit conservée ||| arsort	count=1
function_name	nouvelle définition d'interface ||| pdf define layer	count=1
function_name	regroupements ||| set group	count=1
function_name	document source ||| merge	count=1
function_name	écrit les données de ||| write	count=1
return	la qualité ||| gmagick	count=1
function_name	dans un fichier qui ||| metadata	count=1
function_name	[function_name_1] certificat ||| [function_name_2] [function_name_1]	count=1
function_name	ne peuvent pas ||| set metadata	count=1
function_name	attend [function_name] réponses depuis ||| [function_name]	count=1
arg_pair	type ||| string $type	count=1
function_name	pour la ||| include path	count=1
function_name	page courante et ||| page	count=1
function_name	d'interpolation de l'image ||| set image interpolate	count=2
function_name	utilisée pour lier ||| cubrid bind	count=1
function_name	de la bibliothèque cliente ||| client	count=1
function_name	carte [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	l'index d'une couleur avec ||| resource $image	count=1
namespace	indique si ||| tidynode	count=1
function_name	est similaire à ||| mysql field	count=1
arg_pair	de texte avec des ||| string $text	count=1
namespace	des fichiers ainsi ||| pharfileinfo	count=1
function_name	[function_name_1] [function_name_2] étendus d'une entrée définie ||| [function_name_1] [function_name_2]	count=2
function_name	et une [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	échantillon depuis le ||| string $file int $raaindex	count=1
namespace	définir ||| mongolog	count=1
function	[function_name_1] un seul ||| [arg_pair_2] [function_name_1]	count=1
function_name	nombres décimaux ||| ingres set environment	count=1
arg_pair	la chaîne str1 en ||| string $str1	count=1
function_name	retourne la géométrie ||| get page	count=3
arg_pair	ibm db2 universal database ||| string $database string $username	count=1
arg_pair	qui héberge la file ||| resource $queue array $data	count=1
arg_pair	la fonction snmp2_get() ||| string $host string $community	count=1
namespace	le ||| arrayobject	count=1
arg_pair	dans ||| resource $handle int $length	count=1
function_name	par l'identifiant ||| closedict	count=1
namespace	une réponse en ||| soapserver	count=1
function_name	fichiers ainsi que ||| chmod	count=1
arg_pair	spécifié par object_id ||| string $object_id	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $psdoc [arg_pair_2]	count=1
function_name	à la puissance ||| pow	count=2
namespace	applique ||| gmagick	count=1
function_name	retourne le dernier identifiant ||| db2 last	count=1
arg_pair	dans un fichier ||| string $filename	count=1
function_name	donnée ou a ||| a	count=1
arg_pair	pour vérifier si ||| bool $nodns	count=1
arg_pair	cubrid_set_add() ||| string $set_element	count=1
function_name	nombre maximal de ||| set	count=1
arg_pair	de résultats listant ||| string $schema string $table-name	count=5
return	métrique adobe pour ||| string	count=1
function_name	récupère un ||| get	count=4
namespace	sert à détruire ||| function	count=1
function_name	d'une notification de modification ||| proxy add notify	count=1
function_name	page afin qu'elle tienne ||| fit	count=1
function_name	compare la variable associée ||| wincache ucache cas	count=1
function_name	encodés ||| mailparse uudecode all	count=2
return	détruire un bloc ||| bool	count=1
function_name	l'arc sinus de ||| asin	count=1
function_name	spécifiée avec un ||| images	count=1
function_name	mémoires ||| form destroy	count=2
return	série de ||| bool	count=1
function_name	est utilisée pour récupérer ||| cubrid	count=2
function_name	charge une image pour ||| ps open image	count=1
function	compare les [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	maximal de ||| set	count=1
arg_pair	cubrid_bind() ||| mixed $bind_value string $bind_value_type	count=1
function_name	champ spécifié ||| field seek	count=1
namespace	ou partie d'un document ||| function	count=1
function_name	[function_name_1] timer à ||| [function_name_2] [function_name_1]	count=1
function_name	récupérer un champ ||| get	count=1
function_name	un fichier temporaire tous ||| mailparse	count=1
function_name	mis [function_name] ||| get [function_name]	count=2
return	ferme ||| void	count=1
arg_pair	transfert ch ||| int $opt	count=1
function_name	durée du ||| path	count=1
namespace	ceux de ||| pharfileinfo	count=1
function_name	géométrie de la page ||| page	count=1
return	les informations de la ||| object	count=1
function_name	[function_name_1] type d'octets ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] segment du ||| [function_name_2] [function_name_1]	count=4
function_name	retourne le noeud ||| get	count=1
arg_pair	mktime() excepté ||| int $hour int $minute	count=1
namespace	un verrou acquis ||| eventbuffer	count=1
arg_pair	depuis une chaîne d'une ||| string $str int $start	count=1
function_name	s'y trouvent ||| mailparse uudecode	count=1
return	ou regexiterator::key() [return] ||| [return]	count=3
function	fenêtre [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	courant de l'objet directoryiterator [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=6
arg_pair	une colonne données dans ||| mixed $column mixed $param	count=1
arg_pair	sybase_fetch_array() avec ||| mixed $object	count=1
arg_pair	message d'erreur à ||| string $message int $message_type	count=1
arg_pair	si un mot existe ||| string $word	count=1
function_name	[function_name_1] nombre ||| [function_name_2] [function_name_1]	count=5
arg_pair	une connexion sur une ||| string $servername	count=1
arg_pair	pour le dessin des ||| resource $image	count=1
function_name	fonction libère les ||| form	count=1
function_name	utiliser pour les annotations ||| gettextencoding	count=1
namespace	déplace vers le ||| norewinditerator	count=1
arg_pair	héberge la file de ||| resource $queue	count=1
return	le flux ||| string	count=1
arg_pair	effectue une vérification du ||| resource $dictionary	count=1
function_name	dans la session ||| is in session	count=1
function_name	sinus hyperbolique pour ||| trader sinh	count=1
arg_pair	cubrid et ||| resource $lob_identifier	count=1
namespace	est ||| function	count=4
arg_pair	fonction ||| resource $result	count=2
function_name	sinus hyperbolique pour chaque ||| trader sinh	count=1
function_name	qui avaient ||| form destroy	count=1
namespace	appliqué ||| imagick	count=1
namespace	supprimer [namespace] ||| [namespace]	count=1
namespace	passée en ||| function	count=1
function_name	identifiant permettant ainsi qu'il ||| id	count=1
function_name	d'activation candidate en cascade ||| cascade activation	count=1
return	de la ||| array	count=1
function_name	minimale du client pour ||| min error	count=1
arg_pair	la première occurrence ||| string $needle	count=2
function_name	avec ||| get element	count=1
namespace	annotation ||| gmagickdraw	count=1
function_name	représentation yaml de la ||| yaml emit file	count=1
function_name	local ||| mysqli set local	count=1
function_name	la résolution ||| getimageresolution	count=1
function_name	d'activation dans [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] préfixe de ||| [function_name_2] [function_name_1]	count=1
arg_pair	ou jpeg dans le ||| int $height	count=1
function_name	tri des ||| sort	count=1
return	suivant les ||| array	count=1
arg_pair	chaîne ||| string $str	count=2
arg_pair	se joignent [arg_pair] petit angle ||| [arg_pair]	count=1
function	image et [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	lecture/écriture nommé ou non ||| bool $autounlock	count=1
arg_pair	à la fonction ||| int $hour int $minute	count=1
namespace	dans un ||| sphinxclient	count=1
function_name	et retaille ||| chop	count=1
function_name	résultants et ||| batch	count=1
function_name	le et logique de ||| gmp and	count=1
function_name	les données d'entrainement à ||| output train data	count=1
namespace	du tampon ||| function	count=1
function_name	iidentique à la fonction ||| rewind	count=1
function_name	d'entité externe de ||| set external entity ref	count=1
function_name	insère ||| dba insert	count=1
function_name	plusieurs canaux ||| channel	count=4
function_name	jeu de résultats récupéré ||| use result	count=1
function_name	vérification des index ||| array udiff assoc	count=1
function_name	fonction retourne une chaîne ||| cubrid get	count=2
function_name	serveur informix ||| ifx	count=1
arg_pair	deux versions de php ||| string $version2	count=1
function_name	d'activation [function_name_2] ||| [function_name_2] [function_name_1]	count=22
arg_pair	de rappel callback qui ||| mixed $pattern callable $callback	count=1
function_name	similaire ||| fbsql	count=1
function_name	[function_name_1] action ||| [function_name_1] [function_name_2]	count=1
function_name	conteneur de chargement donc ||| set default	count=1
function	[function_name_1] de needle ||| [arg_pair_2] [function_name_1]	count=1
function_name	la fréquence à partir ||| doc frequency	count=1
return	chaîne de ||| string	count=3
arg_pair	le prompt et retourne ||| string $prompt	count=1
function_name	d'activation pour la couche ||| fann set activation function	count=1
arg_pair	x509cert pour voir s'il ||| mixed $x509cert	count=1
function_name	demande un ||| dbplus getlock	count=1
function_name	celui de preg_replace() hormis ||| preg replace	count=1
function_name	la mise à jour ||| cmd update	count=1
function	[function_name_1] une fonction ||| [function_name_1] [arg_pair_2]	count=1
function_name	crée une ||| create	count=7
arg_pair	et tiff ||| bool $thumbnail	count=1
arg_pair	une source ||| string $password int $cursor_type	count=1
function_name	consommer trop de mémoire ||| mssql free statement	count=1
function_name	liste des bases de ||| fbsql list dbs	count=1
function_name	[function_name_1] obsolète ||| [function_name_2] [function_name_1]	count=4
arg_pair	path avec le ||| string $path	count=1
function_name	encodé en base64 ||| imap base64	count=1
function_name	élément enfant au noeud ||| child	count=1
namespace	objet arrayobject linéarisé ||| arrayobject	count=1
arg_pair	cache une ||| string $key	count=2
return	de l'objet ||| string	count=2
function_name	la dernière requête ayant ||| last	count=1
namespace	le tableau passé en ||| function	count=1
namespace	entrée moins le ||| ev	count=1
function_name	pays et une région ||| by country and region	count=1
function_name	la prochaine requête xpath ||| xpath namespace	count=1
function_name	[function_name_1] de colonne ||| [function_name_1] current [function_name_2]	count=1
function_name	retourne la configuration ||| get	count=1
arg_pair	needle dans la chaîne ||| string $haystack string $needle	count=2
namespace	algorithme de tri qui ||| arrayobject	count=1
function_name	insensible à la casse ||| strcasecmp	count=1
namespace	de la bibliothèque ||| function	count=1
namespace	sur les ||| function	count=1
namespace	fichier phar ||| phar	count=1
function_name	mois month ||| month	count=1
function_name	symbolique correspondant à la ||| token	count=1
arg_pair	paramètre old correspond ||| int $old	count=1
function_name	similaire à la ||| mysql field	count=1
function_name	de flux et ||| stream select	count=1
function_name	noms des directives ||| policies	count=1
arg_pair	l'activation de la ||| int $condition_type	count=1
function_name	de sortie pour une ||| set output scaling	count=1
arg_pair	object_id ||| string $object_id	count=2
function_name	pour afficher les ||| set show	count=2
function_name	décrivant la [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	mémoires ||| function	count=1
namespace	la ||| gmagick	count=5
arg_pair	chiffre les [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	forme qui ||| form	count=1
arg_pair	mktime() excepté le fait ||| int $year	count=2
function_name	l'image ||| images	count=1
function_name	d'attente ||| eio set max poll	count=1
namespace	déplace l'itérateur ||| spldoublylinkedlist	count=1
function_name	taille de la ||| strwidth	count=1
function_name	la syntaxe du ||| syntax	count=1
return	fait que la variable ||| mixed	count=1
function_name	de rappel ||| set callback	count=1
arg_pair	principal avec le ||| string $principal	count=1
arg_pair	username et ||| resource $ftp_stream string $username	count=1
function_name	de caractères passée ||| db2 escape	count=1
namespace	remplace ||| function	count=1
function_name	[function_name_1] nombre ||| [function_name_1] [function_name_2]	count=3
arg_pair	fonction cubrid_set_add() est utilisée ||| string $set_element	count=1
function_name	options à ||| add options	count=2
function_name	récupère ||| offset get	count=1
function_name	l'identifiant du thread de ||| thread id	count=2
function_name	couleur ||| color	count=7
arg_pair	seconde contient ||| mongodb $db	count=1
function_name	[function_name_1] la fréquence ||| [function_name_1] cache min [function_name_2]	count=1
function_name	un sommaire de ||| overview	count=1
function_name	contacter ||| radius config	count=2
arg_pair	première occurrence ||| string $needle	count=2
function_name	[function_name_1] du résultat ||| [function_name_1] [function_name_2]	count=1
function_name	de ||| include path	count=4
function_name	hauteur ||| height	count=1
return	lit ||| int	count=4
arg_pair	un objet de ||| resource $connection mixed $object_id	count=1
function_name	fonction libère la ||| cubrid free	count=1
namespace	nombre de ||| sqlite3	count=1
function_name	de ||| numfields	count=3
function_name	[function_name_1] condition pour ||| [function_name_1] cache [function_name_2]	count=1
arg_pair	result ||| int $index	count=1
arg_pair	défragmente l'index afin de ||| int $maxsegments	count=1
function_name	comme une pile ||| array push	count=1
function_name	le facteur quickprop ||| fann set quickprop	count=1
arg_pair	qu'elle ignore ||| string $pattern	count=1
arg_pair	valeur de la propriété ||| string $property_name string $property_value	count=1
namespace	deux documents xml locaux ||| xmldiff\file	count=1
return	[return] flux du ||| [return]	count=1
function_name	[function_name] l'instance de ||| [function_name]	count=1
function_name	un curseur ||| batch	count=1
function_name	vérifie si la file ||| msg queue	count=1
function_name	le contrôle ||| control	count=1
function_name	de connexion ||| yaz connect	count=1
arg_pair	b ||| array $b	count=1
namespace	[namespace] extrait ||| [namespace]	count=1
function_name	est une [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] requête appelée ||| [function_name_2] [function_name_1]	count=8
arg_pair	la clé key ||| string $key int $timeout	count=1
function_name	include_path pour la ||| include path	count=1
arg_pair	excepté ||| int $year	count=2
arg_pair	tant qu'options ||| resource $pdfdoc string $tag	count=1
arg_pair	collections : la ||| string $prefix	count=1
arg_pair	par la ressource filehandle ||| resource $filehandle	count=1
function_name	la méthode ||| compressionmethod	count=1
function_name	est survenue lors ||| error	count=1
function_name	précédent de ||| prev	count=1
function_name	[function_name_1] la fonction ||| [function_name_1] train error [function_name_2]	count=1
function_name	[function_name_1] l'entrée ||| [function_name_1] [function_name_2]	count=1
function_name	délai maximal ||| timeout	count=1
function_name	utile lors de l'encodage ||| urlencode	count=1
function_name	émet une exception ||| set exception	count=1
function_name	courant est un jste ||| jste	count=1
function_name	le fait qu'elle ||| proc	count=1
function_name	hormis ||| eregi	count=1
function_name	accessible ||| readable	count=1
return	appelé une fois ||| void	count=1
namespace	ignore la ||| function	count=1
function_name	identique ||| eregi	count=1
return	file d'attente s'interrompt si ||| void	count=1
function_name	elle prend ||| time	count=1
namespace	du hash dans ||| quickhashinthash	count=1
return	à la méthode ||| bool	count=1
function_name	mémoire ||| delete	count=1
function_name	retourne le statut ||| introspection get state	count=1
arg_pair	pour établir l'environnement pour ||| string $userid	count=1
function_name	la fonction d'activation ||| fann set activation function	count=3
arg_pair	par son identifiant packet_id ||| resource $packet_id	count=1
function_name	de la ligne suivante ||| next	count=1
function_name	lit la date ||| get	count=2
arg_pair	gmt ||| int $is_dst	count=1
function_name	système de fichiers ||| fstatvfs	count=1
arg_pair	la fonction mktime() excepté ||| int $hour int $minute	count=1
function_name	du texte de la ||| text	count=1
namespace	terminée par ||| function	count=1
namespace	spécial ou ||| function	count=1
function_name	donné de positions ||| cycle	count=1
arg_pair	la chaîne str après ||| string $str string $encoding	count=1
arg_pair	tente une identification ||| resource $session string $username	count=1
function_name	[function_name_1] et d'équilibrage ||| [function_name_2] [function_name_1]	count=2
function_name	être ||| construct	count=1
function_name	être appelé ||| set	count=1
arg_pair	par défaut pour l'exécution ||| mysqlnd_connection $connection	count=1
function_name	efface une collection de ||| delete by ids	count=1
function_name	d'entités html ||| decode numericentity	count=1
namespace	l'objet ||| splobjectstorage	count=1
function_name	libère la ||| free result	count=1
function_name	l'extension pour la ||| image type to extension	count=1
function_name	modifie ||| include	count=1
namespace	chaîne de caractères passée ||| function	count=1
function_name	fils aussi cette ||| has children	count=1
arg_pair	avec une des ||| resource $psdoc	count=3
arg_pair	horizontale et verticale de ||| float $y	count=1
function_name	pas de délai d'attente ||| timeout	count=1
arg_pair	occurrence de needle needle ||| string $needle	count=1
function_name	le ||| closedir	count=1
function_name	et tous ||| destroy	count=1
function_name	mesurée en octets depuis ||| fseek	count=1
function_name	prochain résultat de ||| next result	count=2
function_name	des ||| set	count=1
function_name	d'une ligne ||| line	count=1
arg_pair	chemin du domaine ||| string $domain	count=1
function_name	pour tracer ||| maxdb debug	count=1
arg_pair	associatif query_data ||| string $numeric_prefix	count=1
namespace	contenu d'une archive tar/zip ||| phardata	count=1
function_name	la ||| element by id	count=2
namespace	réponses dans une ||| mongocursor	count=1
function_name	en priorité basse en ||| low	count=1
function_name	à la ||| escape	count=1
function_name	limite inférieure dans ||| include lower bound	count=1
arg_pair	par le paramètre timestamp ||| int $timestamp	count=1
function_name	qui ||| last	count=1
function_name	ressources mémoires utilisées par ||| form	count=1
arg_pair	: ||| mongodb $db	count=1
function	composants [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	de caractères vide ||| string $localname	count=1
function_name	configure la taille d'une ||| extent	count=1
function_name	ou plusieurs canaux d'une ||| channel	count=1
function_name	configure les couleurs ||| set	count=1
namespace	objet lob retourné par ||| function	count=1
function_name	d'objets résultants et ||| size	count=1
arg_pair	num entrées toutes de ||| int $start_index int $num	count=1
function	analyse la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	les paramètres du serveur ||| server params	count=1
function_name	[function_name_1] la réponse ||| [function_name_1] [function_name_2]	count=1
function_name	similaire à pclose() ||| close	count=1
namespace	appelé pour ||| recursiveiteratoriterator	count=1
function_name	si elle prend ||| time	count=1
function_name	déchiffre ||| public decrypt	count=2
function_name	à surveiller avec ||| set module	count=1
namespace	affiche ou ||| function	count=4
function_name	le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	statut d'un travail ||| status	count=1
function_name	les ressources mémoires utilisées ||| destroy	count=1
function_name	long d'un ||| long	count=1
function_name	exécution ||| set	count=1
function_name	des informations de déboguage ||| debug	count=1
namespace	appelé lors de ||| recursivetreeiterator	count=1
arg_pair	commence par =?iso-8859-1?... est ||| string $field_value	count=1
function_name	connexion ||| connect	count=15
function_name	sybase associé à ||| sybase data	count=2
arg_pair	le ||| int $month	count=1
function_name	le blob ||| ibase blob	count=1
namespace	attribut ||| sphinxclient	count=1
function_name	bleu ||| set image blue primary	count=1
return	les variables var .. ||| int	count=1
function_name	et ||| newt form	count=1
function_name	base de ||| dbase	count=1
function_name	prochaine requête xpath ||| register xpath	count=1
namespace	l'image sur un ||| imagick	count=1
function_name	itérateur ||| from iterator	count=1
function_name	fdf [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	facet qui ||| facet	count=1
return	tous les appels distants ||| boolean	count=1
function_name	valeur de ||| set include	count=1
arg_pair	fonction imap_open() pour ||| resource $imap_stream	count=1
function_name	un token d'accès ||| get access token	count=1
function_name	forme en ||| form	count=1
arg_pair	contenu des ||| mongodb $db	count=1
namespace	le fait qu'elle ||| function	count=2
function_name	et définit ||| proxy action set	count=1
function_name	de la base de ||| dbase	count=1
function_name	optionnellement à la révision ||| svn cat	count=1
arg_pair	à des ||| string $key	count=1
arg_pair	données dans ||| int $offset	count=1
arg_pair	cette fonction url-encode la ||| resource $ch	count=1
function_name	recherche de type strpos() ||| mb strrpos	count=1
function_name	sqlite ou tente de ||| sqlite	count=1
function_name	session curl ||| curl	count=2
function_name	partir d'une chaîne ||| string	count=1
function_name	récupère le nom de ||| get	count=1
arg_pair	requête query ||| resource $link_identifier	count=1
function_name	texte ||| ps	count=1
return	en provenance d'ingres telles ||| bool	count=1
function_name	de noms selon le ||| lookup namespace	count=1
arg_pair	première occurrence de ||| mixed $needle	count=1
function_name	terme inférieure liée dans ||| set terms include lower bound	count=1
function_name	[function_name_1] trace pour ||| [function_name_1] query [function_name_2]	count=1
function_name	cache [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	radius chaque ||| radius	count=1
function_name	lien symbolique ||| lstat	count=1
function_name	chaque pixels implosé par ||| implode image	count=1
function_name	page sous ||| page	count=1
arg_pair	mktime() excepté le ||| int $second	count=1
function_name	[function_name] spécifique ||| db2 [function_name]	count=3
function_name	lit un token d'accès ||| access token	count=1
namespace	phar sauvera ses changements ||| phar	count=1
arg_pair	chemin du domaine ||| string $domain string $directory	count=1
function	la [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	dans ||| string $index	count=1
arg_pair	défini le changement de ||| float $sarprop_step_error_shift	count=1
arg_pair	dans le ||| int $to_neuron float $weight	count=1
return	lignes ||| bool	count=1
arg_pair	source vers ||| resource $source	count=1
namespace	un ||| event	count=2
namespace	être utilisé pour tracer ||| function	count=1
namespace	l'aide de ||| mongogridfs	count=1
function_name	protéger ||| escape string	count=1
function	[function_name_1] des parties ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	à cette ||| string $function_name	count=1
arg_pair	est prévue pour ||| string $file_extensions	count=1
function_name	ferme le dictionnaire représenté ||| crack	count=1
function_name	décrémente de ||| wincache ucache dec	count=1
namespace	ceux ||| pharfileinfo	count=1
arg_pair	par address ||| resource $socket string $address	count=1
arg_pair	raideur de la ||| resource $ann	count=2
function_name	les deux [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	qui décide si ||| qc set	count=1
function_name	ressources ||| form	count=1
function_name	fonction mktime() excepté ||| gmmktime	count=1
function_name	le nombre de ||| cubrid num	count=1
arg_pair	cubrid_connect() est [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	est de ||| is	count=3
arg_pair	filter_input() ||| mixed $definition	count=1
function_name	le ||| is	count=1
arg_pair	un document xml depuis ||| string $filename int $options	count=1
arg_pair	field ||| mixed $field	count=1
function_name	paramètres requis par une ||| number of required parameters	count=1
arg_pair	ingres_fetch_array() ||| int $result_type	count=1
function_name	les [function_name] ||| save [function_name]	count=2
function_name	[function_name_1] connue sur ||| [function_name_2] [function_name_1]	count=4
function_name	la méthode ||| zip	count=1
arg_pair	type substr() basée ||| int $start	count=1
function_name	définit le ||| set	count=6
arg_pair	listant les ||| string $table_name	count=1
function_name	la connexion fournie ||| database	count=1
function_name	[function_name] c'est ||| mcrypt module is [function_name]	count=1
return	utilisée ||| string	count=1
namespace	l'itérateur à ||| limititerator	count=1
function_name	position ||| ps show	count=2
arg_pair	fichier fieldname téléchargé ||| string $fieldname	count=1
function_name	à de multiples ||| udm alloc	count=1
namespace	false pour ||| recursivetreeiterator	count=1
function_name	une exception ||| set exception callback	count=1
namespace	chargés par l'application php ||| function	count=1
namespace	la position ||| harupage	count=1
arg_pair	fait ||| string $string	count=1
function_name	des nombres décimaux ||| ingres set environment	count=1
function_name	preg_replace() hormis le fait ||| preg replace	count=1
function_name	needle dans ||| mb strstr	count=1
function_name	le protocole ||| get proto	count=1
function_name	fonction est ||| is	count=5
function_name	instance glo ||| save to glo	count=1
function_name	[function_name_1] retaille et ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] au sein ||| [function_name_2] [function_name_1]	count=2
function_name	suivante dans la ||| nextimage	count=1
function_name	retourne le noeud ||| get attribute	count=1
namespace	en écriture ou ||| function	count=1
namespace	génère ||| gmagick	count=1
function_name	le processus courant ||| pcntl	count=1
arg_pair	invoquées avant de ||| int $max_interval	count=1
function	json de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	contenant du ||| gmagick	count=1
function_name	par défaut ||| close	count=1
function_name	selon ||| validate	count=1
function_name	retour ||| handle	count=1
function_name	un identifiant ||| element by id	count=1
function	de définir [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	l'orientation de ||| set image orientation	count=1
function_name	transfert ||| setopt	count=1
function_name	[function_name_1] [function_name_2] mime-type à utiliser ||| [function_name_2] [function_name_1]	count=2
function_name	service fam ||| fam	count=1
function_name	par bbcode_create() ||| bbcode destroy	count=1
function_name	représentant la version cliente ||| client info	count=1
function_name	écrit le contenu du ||| fwrite	count=1
arg_pair	une base ||| string $servername	count=1
arg_pair	la ||| int $minute	count=1
arg_pair	paramètres : left ||| float $left	count=1
function_name	crée une représentation textuelle ||| to string	count=1
return	position courant [return] ||| [return]	count=1
function_name	dernière modification du ||| get mtime	count=1
function_name	[function_name_1] sévérité ||| [function_name_2] [function_name_1]	count=1
function_name	avec un nom ||| name	count=2
function_name	statut de la connexion ||| status	count=1
return	retourne tous les ||| string	count=1
function_name	depuis le début ||| read	count=1
function_name	vérifie si [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	dans la portée ||| lookup	count=1
function_name	tous les ||| loop	count=1
function_name	jeu complet de résultats ||| rows	count=1
function_name	session curl ||| curl init	count=1
function_name	coordonnées spécifiées ||| imagefilledellipse	count=1
function_name	le fichier est ||| is	count=2
function_name	ftp ||| ftp get	count=2
function_name	l'indexe de facon numérique ||| array values	count=1
function_name	forme et ||| newt	count=1
return	pour tracer la ||| void	count=1
function_name	[function_name_1] d'apparition ||| [function_name_2] [function_name_1]	count=6
arg_pair	réseau ||| int $from_neuron	count=1
function	machine maître [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	les ||| imagick	count=1
function_name	fonction vérifie si ||| opcache is	count=1
function_name	la configuration ||| reset config	count=1
function_name	les attributs dépendants de ||| attr	count=1
function_name	un jeu de résultats ||| db2 field	count=1
namespace	une tâche et retourne ||| gearmanclient	count=1
function_name	fonction libère les ressources ||| form destroy	count=1
function_name	secondes ||| eio set	count=1
namespace	fichiers ||| pharfileinfo	count=1
function_name	extrait ||| all	count=1
arg_pair	la position offset et ||| int $offset	count=1
return	de la fin de ||| void	count=1
function_name	type insert effectuée ||| insert row	count=1
function_name	posix ||| posix	count=2
function_name	[function_name_1] les méta-données ||| [function_name_2] [function_name_1]	count=1
return	retourne la ||| string	count=2
function_name	fichier fourni et ||| all	count=1
namespace	d'une archive ||| pharfileinfo	count=1
arg_pair	d'une série de pages ||| int $first_page	count=1
function_name	analyse une liste d'adresses ||| parse addresses	count=1
function_name	true si [function_name] ||| is block algorithm [function_name]	count=1
arg_pair	de résultat result sur ||| resource $result	count=1
return	courant [return] ||| [return]	count=1
function_name	de l'étape initiale ||| fann set rprop delta zero	count=1
function_name	requête de scan ||| yaz scan result	count=1
function_name	compte les éléments ||| iterator count	count=1
function_name	fonction snmp2_walk() ||| walk	count=1
namespace	a ||| collectable	count=1
arg_pair	de fond ||| mixed $background	count=1
function_name	d'un attribut dans ||| langdepvalue	count=1
function_name	est ||| type	count=2
arg_pair	attribut dans un document ||| string $index array $attributes	count=1
function_name	commande ||| exec	count=1
return	similaire à pclose() ||| int	count=1
return	la seconde ||| mongodb	count=1
function_name	d'activation pour la ||| set activation function output	count=1
function_name	le bytecode et ||| bcompiler	count=1
function_name	hauteur de l'image ||| image height	count=2
function_name	l'objet a terminé son ||| set	count=1
return	méthode est ||| array	count=1
arg_pair	établir l'environnement ||| string $userid	count=1
function_name	la prochaine ligne ||| pdf continue	count=1
namespace	un alias de la ||| event	count=1
arg_pair	chemin path ||| string $path int $offset	count=1
function_name	nouveau filtre entier ||| set filter	count=2
arg_pair	par ||| resource $image	count=1
function_name	base de données n'a ||| dead	count=1
function	de numérotation [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	vers l'encodage ||| encoding	count=1
return	erreur pour le dernier ||| int	count=1
function_name	[function_name_1] readline ||| [function_name_2] [function_name_1]	count=6
arg_pair	retourne la chaîne str ||| string $encoding	count=1
function_name	pour placer un verrou ||| cubrid lock	count=1
function_name	déplace le curseur sur ||| move to	count=1
return	toute les commandes ||| bool	count=1
namespace	document dans la ||| harudoc	count=1
function_name	fonction ||| mysql field	count=1
return	corrélation entre les clé ||| void	count=1
function_name	comportement de autocommit ||| db2 autocommit	count=1
namespace	identique à la ||| function	count=1
function_name	la forme en incluant ||| newt form destroy	count=1
function_name	et tous les ||| newt form	count=1
function_name	pays [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	retour de statut spécifié ||| task status	count=1
function_name	prépare une page ||| pdi page	count=1
function_name	la dernière requête insert ||| insert id	count=1
function_name	include_path pour ||| set include path	count=1
return	de caractères passée ||| string	count=1
function_name	un ou plusieurs canaux ||| channel	count=3
function_name	la file de ||| msg remove queue	count=1
function_name	des tests ||| uintersect uassoc	count=1
function_name	fraction de ||| change fraction	count=1
function_name	logo php ||| php logo guid	count=2
function_name	vérification des index compare ||| udiff assoc	count=1
arg_pair	appeler à ||| mixed $callback	count=1
function_name	le ||| setthreadtitle	count=1
function_name	du blob ||| blob cancel	count=1
function_name	blanc ||| image white	count=1
arg_pair	multiple s'il y a ||| resource $mh	count=1
function_name	mime kopfzeile dans l'exemple ||| mime	count=1
function_name	exécution [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	si un [namespace] est ||| [namespace]	count=1
function_name	serveur associé ||| sybase	count=1
arg_pair	dessin ||| resource $image	count=1
function	[function_name_1] l'index spécifié ||| [arg_pair_2] [function_name_1]	count=1
function_name	du ||| set include path	count=2
function_name	le code de retour ||| wexitstatus	count=1
function_name	à memcached::prepend() ||| prepend	count=1
return	avec la méthode ||| string	count=1
function_name	les données blob/clob ||| cubrid lob export	count=1
function_name	un tableau ||| array	count=6
function	analyse la [arg_pair_2] ||| [function_name_1] adrlist [arg_pair_2]	count=3
namespace	le nombre de ||| gmagickpixel	count=1
arg_pair	ces données ||| resource $ann resource $data	count=1
arg_pair	de rappel ||| mixed $callback	count=1
function_name	filtres de requêtes ||| filter queries	count=1
return	un autre élément de ||| int	count=1
return	cette méthode est obsolète ||| mixed	count=1
function_name	génère une nouvelle ||| new	count=1
function_name	pour envoyer la ||| set	count=1
namespace	un objet gmagick ||| gmagick	count=1
namespace	à ||| soapclient	count=1
return	champs ||| int	count=1
return	un identifiant de ||| string	count=1
function_name	interbase et la ||| ibase	count=1
function_name	une réponse ||| handle	count=1
function_name	les composants ||| form	count=2
namespace	eventbuffer ||| eventbuffer	count=3
function_name	un fichier temporaire ||| uudecode	count=1
function_name	code erreur ||| error code	count=3
function_name	la dernière requête ||| stmt errno	count=1
function_name	un [function_name] ||| end namespace decl [function_name]	count=3
arg_pair	statue un fichier ||| resource $sftp	count=1
return	les opérations de type ||| array	count=1
function_name	configure la méthode ||| method	count=1
function	xml [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	la fonction cubrid_connect() ||| string $passwd bool $new_link	count=1
function_name	objet ainsi que ||| fetch object	count=1
function_name	de noms est déclaré ||| start namespace decl	count=1
function_name	restaure la valeur ||| ini restore	count=1
function_name	y écrit ||| write	count=1
function_name	niveaux [function_name] gris ||| separate [function_name]	count=1
function_name	schéma relaxng à utiliser ||| set relax ngschema	count=1
function_name	la ||| zip entry	count=1
function_name	les algorithmes de ||| algorithms	count=1
function_name	racine pour [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de l'image spécifiée ||| preview images	count=1
arg_pair	est dirname ||| resource $context	count=1
function_name	une ligne de données ||| fetch row	count=1
function_name	d'erreur [function_name_2] ||| [function_name_2] step [function_name_1]	count=2
function	nom [arg_pair_2] ||| [function_name_1] result [arg_pair_2]	count=1
return	spécifié ||| int	count=2
function_name	phar ||| phar filename	count=1
function_name	valeurs correspondantes dans le ||| into struct	count=1
function_name	à la ||| mysql field	count=1
return	sur les ||| int	count=1
function_name	carte de [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	connexion spécifié ||| mysql create db	count=1
function_name	demande un verrou sur ||| getlock	count=1
function_name	crée ||| construct	count=1
namespace	représentation de [namespace] ||| [namespace]	count=3
arg_pair	deux collections ||| string $prefix	count=1
return	génère une représentation ||| string	count=1
function_name	la trace de la ||| trace as string	count=1
arg_pair	la colonne ||| mixed $column	count=2
return	avec un ||| bool	count=1
function_name	retourne le premier attribut ||| first attribute	count=1
arg_pair	log_cmd_delete lors de la ||| array $server array $writeoptions	count=1
function_name	informations de ||| rrd	count=1
function_name	la forme ||| newt	count=2
function_name	memcached::prepend() mais ||| prepend by	count=1
function	[function_name_1] requête à ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	une page dans le ||| int $page string $dest	count=1
function_name	du fichier fourni ||| mailparse	count=1
namespace	base ||| mongocursor	count=1
function_name	récupère un élément de ||| get	count=1
arg_pair	condamnations svn ||| string $repository_url int $revision_no	count=1
function_name	les champs facet qui ||| set facet	count=1
arg_pair	local vers un ||| resource $session string $local_file	count=1
arg_pair	les clients à l'écoute ||| int $numerator int $denominator	count=1
arg_pair	du point ||| float $x float $y	count=1
return	position ||| void	count=1
function_name	file de messages ||| remove queue	count=1
arg_pair	partagée ||| int $start	count=1
function_name	tous les fichiers encodés ||| mailparse	count=1
function_name	plus de ||| set max poll	count=1
function_name	[function_name_1] depuis ||| [function_name_2] [function_name_1]	count=19
arg_pair	la requête statement ||| resource $statement	count=1
function_name	session [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	détruire ||| shmop delete	count=2
function_name	[function_name_1] le document ||| [function_name_2] [function_name_1]	count=1
function_name	l'aide de deux collections ||| construct	count=1
function_name	les bases ||| dbs	count=1
function_name	contrôle avec ||| gupnp control point new	count=1
function_name	[function_name_1] en anglais ||| [function_name_2] [function_name_1]	count=3
function_name	par le paramètre patch ||| xdiff file patch	count=1
function_name	formatage d'une ligne de ||| pdf info textline	count=1
return	place des ||| string	count=1
function_name	[function_name_1] http de ||| [function_name_2] [function_name_1]	count=8
function_name	libeio tant que ||| eio	count=1
arg_pair	du résultat result ||| int $type	count=1
return	le verrou ||| int	count=1
function_name	de type insert effectuée ||| insert row	count=1
function_name	utilisées par la ||| newt form destroy	count=1
arg_pair	récupérée ||| array $ctorparams	count=1
function_name	calcule le sinus ||| trader sin	count=1
function_name	contenant la représentation décimale ||| octdec	count=1
arg_pair	racine jusqu'à la catégorie ||| resource $agent string $category	count=1
function_name	une exception de ||| set using exceptions	count=1
function_name	une exception ||| exception callback	count=1
arg_pair	un message ||| string $message	count=2
function_name	est utilisée pour lier ||| cubrid bind	count=1
namespace	avec un traitement appliqué ||| imagick	count=1
function_name	dans ce service ||| gupnp service	count=1
function_name	ajoute une tâche de ||| add task	count=2
function_name	chaque réception d'une notification ||| proxy add notify	count=1
function_name	l'objet ||| item	count=1
function_name	rprop ||| fann set rprop	count=1
function_name	du serveur ||| set server	count=1
function_name	notification de ||| service proxy add notify	count=1
function_name	un nouveau ||| new	count=1
arg_pair	plus grand degré ||| string $cwd	count=1
arg_pair	une valeur fournie ||| int $color float $value	count=1
arg_pair	d'un ||| int $pri	count=1
function_name	similaire à la ||| type	count=2
function_name	avec un identifiant ||| element by id	count=1
namespace	à ||| spldoublylinkedlist	count=1
function_name	l'échelle du document ||| pdf scale	count=1
arg_pair	défini la ||| resource $ann	count=3
function_name	[function_name_1] images ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2] exists	count=4
function_name	l'époque maximale de sortie ||| cascade max out epochs	count=1
function_name	memcached::prepend() mais la ||| prepend by key	count=1
function_name	verrou sur ||| dbplus	count=1
function_name	socket [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	la fonction cubrid_bind() ||| mixed $bind_value string $bind_value_type	count=1
return	la corrélation ||| void	count=1
function_name	récupère le nombre ||| session pgsql get	count=1
function_name	intercepter les ||| connection	count=1
function_name	include_path pour ||| set include	count=1
function_name	service nommé ||| win32 stop service	count=1
function_name	[function_name_1] la taille ||| [function_name_1] packed [function_name_2]	count=1
function_name	paramètre à ||| bind param	count=2
function_name	retourne le dernier identifiant ||| last	count=1
return	noeud courant est un ||| bool	count=1
arg_pair	seconde contient ||| mongodb $db string $prefix	count=1
function_name	fraction ||| change fraction	count=2
function_name	suivi des communications entre ||| trace	count=1
function_name	[function_name_1] tables ||| [function_name_2] [function_name_1]	count=1
namespace	collections : la ||| mongogridfs	count=1
function_name	des informations sur le ||| info	count=1
namespace	dans un stockage ||| splobjectstorage	count=1
function	[function_name_1] chaîne fournie ||| [function_name_1] [arg_pair_2]	count=2
function_name	annule ||| tx rollback	count=2
namespace	le fait que les ||| function	count=1
function_name	le message d'erreur ||| get error message	count=2
arg_pair	mktime() excepté le ||| int $second int $month	count=1
function_name	français républicain ||| frenchtojd	count=1
function_name	les caractères brutes ||| return raw	count=1
function_name	retourne les informations ||| eio stat	count=1
namespace	et extrait ||| function	count=1
return	libère les ressources ||| void	count=1
function	[function_name_1] colonnes et ||| [function_name_1] extent [arg_pair_2]	count=1
function_name	supprimant tous les ||| clear	count=1
function_name	intervalles clos ||| elapsed	count=1
arg_pair	le fait que ||| int $second int $month	count=1
namespace	objet syncreaderwriter ||| syncreaderwriter	count=4
arg_pair	fonction callback aux éléments ||| array $array callable $callback	count=1
function_name	chromacité du point vert ||| set image green	count=1
namespace	à la ||| function	count=6
function_name	mois month ||| cal days in month	count=1
function_name	[function_name_1] de l'analyseur ||| [function_name_2] [function_name_1]	count=2
return	en coordonnées horizontales et ||| bool	count=1
function	d'occurrences [arg_pair_2] ||| [function_name_1] count [arg_pair_2]	count=3
return	un fichier spécial ||| bool	count=1
function_name	nouveau tampon d'événement ssl ||| ssl filter	count=1
function_name	champs à ||| add field	count=1
function_name	de chargement donc ||| set default stub	count=1
function_name	un fichier ||| file	count=1
function_name	archive phar ||| is	count=1
function_name	[function_name_1] maximal ||| [function_name_2] [function_name_1]	count=10
function_name	créé par bbcode_create() ||| bbcode	count=1
function_name	le cosinue ||| cos	count=1
arg_pair	resolv.conf et ||| int $flags	count=1
arg_pair	et la ||| string $class_name	count=1
function_name	positionne [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	le fait ||| int $day int $year	count=1
function_name	sauvegarde la requête ||| save	count=1
function_name	le message [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	en une et retourne ||| string $new_data2 string $error	count=1
arg_pair	[arg_pair_1] une et ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	les arguments d'une fonction ||| args	count=1
function_name	fournie ||| fbsql database	count=1
function_name	retourne des informations sur ||| info	count=1
function_name	retourne la couche ||| get layer	count=3
function_name	cette fonction crée une ||| create entity reference	count=1
return	certain délai ||| mongocursor	count=1
function_name	d'espace ||| elements by tag	count=1
function_name	cette fonction [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function	définit les mots [function_name_1] [arg_pair_2] le ||| bool [function_name_1] [arg_pair_2]	count=1
return	document source ||| string	count=1
return	vers ||| void	count=1
function_name	le cosinue pour chaque ||| cos	count=1
function_name	geoip_setup_custom_directory() va modifier le ||| setup custom directory	count=1
function_name	[function_name_1] importer ||| [function_name_2] [function_name_1]	count=6
function_name	de la police courante ||| current font	count=1
function_name	chaîne de ||| load string	count=1
function_name	[function_name_1] l'extension stomp ||| [function_name_2] [function_name_1]	count=6
namespace	se connecte à searchd ||| sphinxclient	count=1
function_name	la version de la ||| version	count=2
arg_pair	générateur d'extraits de texte ||| string $field_override	count=1
arg_pair	en référence numérique html ||| bool $is_hex	count=1
arg_pair	image aux ||| int $font	count=1
namespace	méthode tente de mettre ||| quickhashintstringhash	count=1
function_name	compression utilisée sur le ||| zip	count=1
namespace	moteur ||| yaf_view_simple	count=1
function_name	récupère [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
function_name	protège un ||| escape	count=1
function_name	retourne la quantité de ||| get	count=2
function_name	tant que gestionnaire d'événements ||| handler	count=1
function_name	sur des ||| form destroy	count=1
arg_pair	cubrid_lob2_bind() ||| string $bind_value_type	count=1
function_name	retourne un tableau qui ||| fetch array	count=1
function_name	utilisé pour stocker les ||| array	count=1
function	ajoute une [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	la connexion mysql_connection ||| mixed $mysql_connection	count=1
return	la forme d'un tableau ||| array	count=4
function_name	des informations sur ||| msg stat	count=1
return	méthode détermine ||| bool	count=1
function_name	du script en ||| set include	count=1
function_name	à l'échelle ||| fann scale output	count=1
function_name	utilisé pendant ||| factor	count=1
function_name	est similaire à la ||| get element by	count=1
function_name	[function_name_1] et d'équilibrage ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name] et ||| [function_name] fetch	count=1
namespace	génère la ||| gmagick	count=1
function_name	place des ||| string	count=1
namespace	qui sont sur des ||| function	count=1
return	est similaire à la ||| string	count=2
function_name	array ||| array	count=1
namespace	tampon ||| eventbufferevent	count=2
function_name	base de données dbase ||| dbase	count=2
namespace	les formats définis par ||| cairoimagesurface	count=1
arg_pair	celles utilisées par le ||| string $pattern int $flags	count=1
function_name	text sont des minuscules ||| ctype lower	count=1
arg_pair	par l'objet gmagickpixel ||| gmagickpixel $color int $width	count=1
function_name	[function_name] valeur d'un ||| [function_name]	count=2
function_name	valeur de la ||| include	count=1
function	accomplit [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	données ||| data	count=1
arg_pair	le fait que les ||| int $minute	count=1
function_name	dernière modification du ||| mtime	count=1
function_name	mssql_connect() mais avec ||| mssql	count=1
function	[function_name_1] envoyés ||| [arg_pair_2] [function_name_1]	count=3
function_name	de résultats récupéré ||| use result	count=2
arg_pair	à strcmp() elle n'est ||| string $str1	count=1
function_name	dans un document ||| update attributes	count=1
function_name	pour un champ facet ||| set facet	count=1
function_name	protéger tous ||| escape string	count=1
function_name	une ||| create aggregate	count=1
function_name	uri de ||| uri	count=1
function_name	depuis une fonction fournie ||| from	count=1
function_name	script ||| exit	count=1
arg_pair	un attribut ||| array $attributes	count=1
function_name	défini le facteur de ||| factor	count=1
return	certain délai sur le ||| mongocursor	count=1
arg_pair	nom de la colonne ||| resource $stmt mixed $column	count=1
return	fichiers ||| void	count=1
function_name	les liens ajoutés ||| ps set border	count=2
function_name	si ||| poll	count=1
return	peut être utilisée pour ||| void	count=1
arg_pair	jours ||| int $day int $year	count=1
function_name	lie le ||| bind	count=1
return	dans un document ||| int	count=1
function_name	de caractères ||| load string	count=1
function_name	affectées par la requête ||| ifx affected	count=1
function_name	[function_name_1] de champs ||| [function_name_2] [function_name_1]	count=6
function_name	délai d'attente maximal ||| timeout	count=2
arg_pair	envoi un message d'erreur ||| int $message_type	count=1
function_name	éteint la temporisation ||| ob	count=1
function_name	needle ||| strstr	count=1
function_name	file d'attente ||| eio set max	count=1
arg_pair	une ||| string $optlist	count=1
function_name	[function_name_1] ibase pour ||| [function_name_2] [function_name_1]	count=2
function_name	fonction posix qui a ||| posix	count=1
arg_pair	de résultat dans ||| int $rownumber	count=1
namespace	ne doit pas être ||| pharfileinfo	count=1
function_name	pour définir les ||| set module	count=1
function_name	paramètre patch ||| patch	count=1
arg_pair	pour ||| resource $image	count=1
function_name	définit l'apparence de ||| set	count=4
function_name	la dernière erreur ou ||| error	count=1
function_name	est similaire à la ||| field type	count=2
namespace	lignes de ||| function	count=1
function_name	de fond ||| image background	count=2
function_name	définit ||| oci set	count=1
return	niveau dans ||| int	count=1
function_name	newt_suspend() ||| newt resume	count=1
function_name	de ||| eregi	count=1
return	en ||| gmagickdraw	count=2
function_name	le premier attribut de ||| ldap first attribute	count=1
namespace	identique ||| function	count=2
function_name	partant de zéro) ||| position	count=1
function_name	bytecode et initialise ||| bcompiler write	count=1
arg_pair	nombre fixe de couleurs ||| int $treedepth bool $dither	count=1
function_name	est protégée ||| is protected	count=2
function_name	la hauteur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	et extrait dans ||| array	count=1
return	base pour toutes ||| string	count=1
arg_pair	fin d'un ||| string $key	count=1
function_name	priorité basse en arrière-plan ||| low	count=1
function_name	une police et ||| pdf load font	count=1
arg_pair	brush ||| resource $brush	count=1
return	l'itérateur ||| void	count=6
function_name	fonction retourne true si ||| is	count=1
arg_pair	mktime() excepté ||| int $minute	count=1
function_name	de données ingres ||| ingres	count=1
namespace	appelé ||| recursiveiteratoriterator	count=1
namespace	ou pour appeler un ||| function	count=1
function_name	préfixe de la ||| prefix	count=1
function_name	fait de définir à ||| set highlight	count=1
function_name	curseur ||| size	count=1
arg_pair	si un mot ||| string $word	count=1
function_name	d'une chaîne de ||| string	count=1
return	bézier [return] ||| [return]	count=1
function_name	surveiller avec les ||| set module	count=1
function_name	définition de la ||| meta data	count=1
arg_pair	accepte [arg_pair] ||| [arg_pair]	count=3
function_name	protéger tous les caractères ||| mysql escape	count=1
function_name	à ||| show	count=1
function_name	noeud à importer ||| import node	count=2
function_name	tronque le fichier régulier ||| eio truncate	count=1
function_name	ou la position courante ||| ifxus tell	count=1
function_name	pour diriger les clés ||| set multi by key	count=1
return	plus de ||| void	count=1
function_name	de forcer la ||| touch	count=1
function_name	affiche ||| show xy	count=2
function_name	retourne l'identifiant ||| row id	count=1
arg_pair	deux collections ||| mongodb $db	count=1
arg_pair	texte ||| string $text	count=7
namespace	données ||| mongocursor	count=1
return	ainsi que ||| void	count=1
arg_pair	le chemin fourni ||| int $start int $length	count=1
return	retourne le code ||| string	count=1
namespace	miniatures de ||| imagick	count=1
return	et que la ||| bool	count=1
namespace	entier 32-bit avec ||| mongoint32	count=1
function_name	un nouveau contexte ||| gupnp context new	count=1
function_name	premier [function_name_2] ||| [function_name_1] [function_name_2]	count=5
namespace	du contenu du ||| splfileinfo	count=1
function_name	d'événements pour ||| ibase set event	count=1
return	peut être utilisé ||| void	count=1
function_name	équivalence de bits de ||| eqv	count=1
return	données ||| bool	count=3
function_name	d'une ||| load	count=1
function_name	une page pour utilisation ||| open pdi page	count=1
arg_pair	colonne indiquée ||| resource $stmt mixed $column	count=2
function_name	celui de preg_replace() hormis ||| preg replace callback	count=1
namespace	par l'application php ||| function	count=1
arg_pair	chemin est dirname ||| resource $context	count=1
arg_pair	lui associe ||| int $rows	count=1
function_name	en cours ||| set	count=1
namespace	de l'instance imagick ||| imagick	count=1
arg_pair	la donnée data ||| mixed $data int $encoding	count=1
arg_pair	à la fonction ||| int $minute	count=1
return	courante pour le ||| bool	count=1
namespace	résultats par ||| function	count=1
function_name	paramètres requis par ||| number of required parameters	count=1
arg_pair	la largeur de ||| resource $p float $width	count=1
return	la première ||| void	count=1
function_name	contenu ||| mysqlnd qc clear	count=1
function_name	nouveau filtre décimal à ||| filter float range	count=1
return	document ||| int	count=1
namespace	d'archives spécifié par ||| function	count=1
namespace	est permis ou pas ||| function	count=1
function_name	élément ||| get element	count=1
namespace	étendus d'une [namespace] ||| [namespace]	count=1
return	par réponse ||| bool	count=1
function_name	geoip_org_by_name() ||| geoip org by	count=1
function_name	script en cours ||| set include path	count=1
arg_pair	remplace la brosse ||| resource $image	count=1
function_name	les mots seront ignorés ||| word	count=1
function_name	stagnation candidates en cascade ||| fann set cascade candidate stagnation epochs	count=1
function_name	[function_name_1] sur l'attribut ||| [function_name_1] [function_name_2]	count=1
return	la fonction rewinddir() ||| void	count=1
function_name	paramètres requis ||| required	count=1
namespace	ferme le pointeur de ||| function	count=1
function_name	le processus courant ||| pcntl wait	count=1
function_name	fichier ||| posix	count=1
function	[function_name_1] envoyés ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	résolution ||| float $xresolution float $yresolution	count=1
return	requête ||| void	count=1
namespace	de ||| tokyotyrant	count=1
function_name	dernière requête insert ||| fbsql insert id	count=1
function_name	spécifie [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	la position courante du ||| function	count=1
function_name	définir les ||| set	count=1
function_name	document selon ||| validate	count=1
function_name	elle prend plus ||| max	count=1
function_name	une paire de ||| socket pair	count=1
return	dossier d'archives spécifié par ||| string	count=1
return	une représentation ||| string	count=1
function_name	l'api ssl voir ||| ssl	count=1
function_name	$to[$n] où $n ||| strtr	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] font [arg_pair_2]	count=1
arg_pair	en tant que timestamp ||| int $timestamp	count=1
namespace	définie comme ||| function	count=1
function_name	dernier identifiant ||| db2 last	count=1
function_name	chaque [function_name] ||| [function_name]	count=3
function_name	le dernier ||| db2 last insert	count=1
arg_pair	de fichiers ||| string $path	count=1
function_name	memcached::prepend() ||| prepend	count=1
function	type d'octets [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	s'interrompt si elle prend ||| max poll time	count=1
arg_pair	.. ||| array $array	count=1
function_name	supprime les antislashs d'une ||| stripslashes	count=1
function_name	une nouvelle [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	basé sur les ||| string $diff	count=1
arg_pair	un ||| resource $p float $g	count=2
arg_pair	ligne tuple ||| string $tuple	count=1
arg_pair	dans la largeur ||| float $width	count=1
return	est ||| array	count=1
function_name	définit l'identifiant ||| oci set	count=1
function_name	la variable donnée est ||| is	count=4
return	maxdb_connect_error() [return] représentative ||| [return]	count=1
function_name	privée ||| openssl private	count=1
function_name	un nouvel itérateur ||| iterator	count=1
function_name	éléments avec un nom ||| name	count=1
function_name	base de données ||| dbase numfields	count=1
return	représenté ||| bool	count=1
return	lit les quotas des ||| array	count=1
arg_pair	la requête query à ||| resource $link_identifier	count=1
function_name	liste tous les algorithmes ||| mcrypt list algorithms	count=1
arg_pair	calendrier julien en date ||| bool $hebrew	count=1
return	un groupe de ||| resource	count=1
namespace	objets splsubject depuis ||| splobserver	count=1
function_name	les permissions d'un ||| perms	count=1
function_name	la forme ||| string	count=1
function_name	été ajoutés ||| newt form destroy	count=1
function_name	décide ||| qc set	count=1
function_name	de réalisation de la ||| task	count=2
function_name	attribut avec ||| attribute	count=2
namespace	envoi tous ||| yar_concurrent_client	count=1
function_name	de colonne ||| column	count=1
namespace	sert à ||| function	count=1
function_name	résultat ||| fbsql	count=1
function_name	définir les modules à ||| set module	count=1
arg_pair	crée un ||| int $mode	count=1
function_name	qui peuvent être inclus ||| measure text	count=1
arg_pair	sur ||| resource $relation	count=1
arg_pair	est au ||| resource $connection string $table_name	count=1
function_name	les permissions d'un fichier ||| perms	count=1
namespace	méthode ne doit ||| pharfileinfo	count=1
function_name	méthode d'interpolation de l'image ||| set image interpolate method	count=1
namespace	chargés par ||| function	count=1
function_name	returns group [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	selon le [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	contrôle sur l'exécution du ||| resource	count=1
function_name	[function_name_1] coloriser les ||| [function_name_1] [function_name_2]	count=3
function_name	[function_name_1] zend ||| [function_name_2] [function_name_1]	count=8
function_name	cette fonction ||| set	count=1
function_name	champs ||| field	count=8
function_name	stocker des ||| set	count=1
function_name	une police ||| font	count=2
function_name	pdf d'entrée ||| pdf	count=1
function_name	feuilles de style xsl ||| register phpfunctions	count=1
namespace	à la fonction ||| directory	count=2
namespace	écrit du texte à ||| function	count=1
function_name	courante du ||| ps	count=1
arg_pair	une requête au ||| resource $grp resource $req	count=1
namespace	peut ||| mongolog	count=1
function_name	de bordure de l'image ||| image border	count=1
function_name	où les ||| fann	count=1
function_name	demande ||| dbplus getlock	count=2
arg_pair	stocke l'élément ||| int $flag int $expire	count=1
function_name	toutes les frames d'un ||| images	count=1
return	une valeur ||| mixed	count=1
arg_pair	d'analyseur ||| resource $bbcode_container int $flags	count=1
function_name	les requêtes s'exécutent ||| eio event loop	count=1
function	[function_name_1] un ||| [arg_pair_2] [function_name_1]	count=9
return	version ||| string	count=1
return	indique si le ||| bool	count=1
function_name	minimale du ||| min	count=2
arg_pair	une requête sql directement ||| string $statement	count=1
function_name	de [function_name] de la ||| set [function_name]	count=1
function_name	[function_name_1] itérable ||| [function_name_2] [function_name_1]	count=4
arg_pair	envoi un message ||| integer $mode	count=1
function	[function_name_1] une nouvelle ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	la cible spécifiée ||| string $target	count=1
function_name	composants qui sont sur ||| newt	count=1
function_name	simple ligne de ||| textline	count=1
arg_pair	commande de base ||| array $options	count=1
function_name	retourne le dernier ||| last insert id	count=1
function_name	nombre ||| mysql num	count=2
function_name	configuration include_path pour ||| include	count=1
function_name	fonction d'activation pour le ||| activation function	count=1
namespace	effectue ||| soapserver	count=1
namespace	connexion à un jeu ||| mongoclient	count=1
function_name	configuration de l'objet ||| tidy config	count=1
function_name	où ||| fann	count=1
return	le script php d'un ||| bool	count=1
function_name	désactive la bufferisation ||| buffering	count=1
function	[function_name_1] et la ||| [function_name_1] [arg_pair_2]	count=7
return	au sein d'une ||| bool	count=1
function_name	msql ||| msql data	count=1
arg_pair	depuis un fichier ||| array $options	count=1
arg_pair	avec la fonction ||| resource $radius_handle string $hostname	count=1
function_name	si elle prend ||| set	count=1
function_name	[function_name_1] d'interpolation de ||| [function_name_2] [function_name_1]	count=6
function_name	jpeg depuis l'image fournie ||| imagejpeg	count=1
function_name	défini l'endroit où les ||| fann set	count=1
function_name	d'erreur de la ||| error	count=1
function_name	de rappel ||| buffer set callback	count=1
function_name	élément avec ||| id	count=1
arg_pair	structures de ||| resource $pdfdoc int $textflow	count=1
arg_pair	envoie une commande et ||| resource $connection string $query	count=1
function_name	la fonction d'activation pour ||| set activation function output	count=1
namespace	lit la date de ||| splfileinfo	count=2
return	un fichier temporaire tous ||| array	count=1
function_name	résultants et ||| batch size	count=1
function_name	ajoute un élément ||| add	count=1
function_name	spécifiés et [function_name] ||| [function_name]	count=1
function_name	et [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	récupère la position ||| get	count=1
function	[function_name_1] seuil de ||| [function_name_1] [arg_pair_2]	count=3
return	et retourne ||| string	count=1
function_name	tag ||| tag	count=2
function	la taille [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	nombre ||| ifx num	count=1
arg_pair	pour récupérer ||| string $table_name	count=1
return	base ||| bool	count=2
arg_pair	prédéfini de cartes de ||| string $threshold_map int $channel	count=1
function_name	objet dans lequel ||| object	count=1
arg_pair	le paramètre object_id ||| string $object_id	count=1
namespace	evstat watcher et démarre ||| evstat	count=1
return	retourne les ||| bool	count=1
arg_pair	la séquence sequence et ||| resource $imap_stream string $sequence	count=1
function_name	boucle d'événements de sortir ||| exit	count=1
arg_pair	la ||| string $pattern string $string	count=2
function_name	phar est [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	demande ||| int	count=1
function_name	modules à surveiller avec ||| set module	count=1
function_name	plus de détails sur [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	facteur ||| factor	count=1
return	brosse ||| bool	count=1
namespace	utilisée que ||| pharfileinfo	count=1
function_name	les précédents intervalles clos ||| elapsed time	count=1
function_name	la méthode exception::__construct() ||| previous	count=1
function_name	composants qui avaient ||| form	count=1
function_name	l'arc sinus de chaque ||| asin	count=1
function_name	déchiffre ||| gnupg decrypt	count=1
function_name	[function_name_1] les ticks ||| [function_name_2] [function_name_1]	count=1
arg_pair	de la chaîne unescaped_string ||| string $unescaped_string	count=1
function_name	[function_name_1] [function_name_2] s'identifie ||| [function_name_2] [function_name_1]	count=2
function	le type [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	utilisé par arrayobject::getiterator() ||| arrayobject	count=1
return	acquis ||| bool	count=1
function_name	rappel à appeler ||| callback	count=1
function	sélectionne la [arg_pair_2] ||| [function_name_1] mysqlnd_connection $connection [arg_pair_2]	count=3
function_name	le contenu ||| construct	count=1
function_name	demande ||| dbplus	count=1
function_name	la qualité de la ||| quality	count=1
namespace	la fin ||| mongocursorinterface	count=1
function_name	de caractères courant ||| iconv set encoding	count=2
function_name	ajoute une ||| bbcode add	count=1
function_name	crée une miniature ||| thumbnail	count=1
function_name	vérifier la présence ||| max dispatch interval	count=1
function_name	champ dans ||| ingres field	count=1
function_name	sans invoquer son constructeur ||| without constructor	count=1
function_name	informations du ||| info table	count=1
function_name	les drapeaux d'une ||| uopz flags	count=1
function_name	similaires à retourner ||| mlt	count=2
function_name	schéma ||| schema	count=4
function_name	incrémente de 1 ou ||| wincache ucache inc	count=1
function_name	flux et attend que ||| stream	count=1
function_name	le type d'une image ||| type	count=1
function_name	[function_name] une ||| [function_name] subclass	count=3
function_name	vecteur d'entrée avant ||| input	count=1
arg_pair	et tiff ||| bool $arrays bool $thumbnail	count=1
function_name	termscomponent ||| set terms	count=2
function_name	notification de ||| gupnp service proxy add notify	count=1
function_name	php var_array [function_name] ||| [function_name]	count=1
function_name	jeu de ||| db2 procedure	count=1
function_name	de gabarit [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] utilisée dans ||| maxdb [function_name]	count=3
function_name	la réponse brute ||| raw response	count=1
function	[function_name_1] à un ||| [function_name_1] result [arg_pair_2]	count=2
namespace	spécifié ||| function	count=1
arg_pair	la valeur value ||| mixed $value	count=2
function_name	fonction analyse la ||| parse	count=2
arg_pair	colonnes et de ||| int $columns	count=1
function_name	configuration du cookie de ||| cookie params	count=1
function_name	champ field a ||| msql field	count=2
arg_pair	charge le fichier filename ||| bool $process_sections	count=1
namespace	est permis ou ||| function	count=1
arg_pair	une commande et sépare ||| resource $connection	count=1
function_name	log actuellement activés ||| get level	count=1
function_name	z39.50 scan request sur ||| scan	count=1
function_name	par ||| close	count=1
function	[function_name_1] une requête ||| [arg_pair_2] [function_name_1]	count=5
function_name	casse ||| eregi	count=1
function_name	de ||| set include	count=2
function_name	retourne la longueur du ||| get length	count=1
arg_pair	fonction mktime() excepté ||| int $year	count=2
function_name	la clé privée ||| openssl private	count=1
function_name	de jacobi de ||| gmp jacobi	count=1
namespace	déplace l'itérateur à la ||| limititerator	count=1
function_name	actuelle utilise l'autocommit ou ||| ingres autocommit state	count=1
return	array comme une ||| int	count=1
function_name	caractères uri [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	partir [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	à l'échelle les entrées ||| scale	count=1
return	fin ||| void	count=1
arg_pair	dans ||| resource $pxdoc int $value	count=1
function_name	à readline ||| readline	count=1
function_name	des ||| pdf set info	count=1
return	les fonctions htmlspecialchars() et ||| array	count=1
return	de la session en ||| bool	count=1
arg_pair	terminé, ||| int $options	count=1
function_name	l'url ||| get request url	count=1
namespace	nombre de fois où ||| ev	count=2
function_name	utilisées par ||| newt form	count=1
function_name	maximale d'un mot en ||| max	count=1
namespace	utilisée pour ||| mongolog	count=1
return	qui sont ||| void	count=1
arg_pair	métadonnées et la ||| string $prefix	count=1
return	retourne les informations ||| object	count=1
function_name	facteurs d'échantillonnage de l'image ||| set sampling factors	count=1
return	déplace l'itérateur à ||| void	count=2
function_name	objet snmp spécifié ||| snmp2 get	count=1
function_name	paramètres séparément de la ||| pg query params	count=1
function_name	peinture à l'huile ||| oil paint image	count=1
function_name	rpc ||| loop	count=1
arg_pair	pour ||| string $path	count=1
function_name	protéger ||| mysql escape string	count=1
function_name	cette méthode [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	une une requête en ||| bool	count=1
function_name	l'aide d'une matrice affine ||| affine	count=1
arg_pair	[arg_pair_1] dans le ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	et retourne ||| bool $part string $encoding	count=1
arg_pair	clé /status ||| resource $fdf_document	count=1
arg_pair	le paramètre str ||| string $str	count=1
function_name	nom de relation ||| dbplus	count=1
function_name	de fichiers distant en ||| ssh2	count=1
function_name	caractères) de début de ||| ltrim	count=1
function_name	images scannées où le ||| deskew image	count=1
return	des ||| bool	count=5
function_name	exe ||| exe	count=1
function_name	qui contient la ligne ||| fetch	count=2
function_name	durée du script ||| set include	count=1
arg_pair	l'argument ||| callable $callback	count=1
function_name	fourni et extrait dans ||| uudecode	count=1
arg_pair	de x par y ||| float $y	count=1
function_name	incluant les composants ||| newt form	count=1
return	en argument au ||| bool	count=1
function	[function_name_1] parser ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	hormis le ||| string $string	count=1
function_name	de caractères ||| set xmlversion	count=1
function_name	sur l'intensité [function_name] chaque pixel ||| threshold [function_name]	count=1
function_name	élément ||| get element by id	count=2
arg_pair	de remplissage à un ||| resource $p	count=1
arg_pair	couleur border ||| int $border	count=1
return	à détruire un bloc ||| bool	count=1
function_name	en ||| ps	count=1
function_name	de ligne ressemblent ||| setlinecap	count=1
function_name	le profil de l'image ||| image profile	count=1
return	l'aide de ||| mongodb	count=1
arg_pair	courante pour ||| resource $image	count=1
function_name	la bibliothèque sqlite ||| sqlite libversion	count=2
function_name	connexion ssl courante ||| ssl	count=1
arg_pair	structure qui héberge ||| resource $queue	count=1
function_name	sauvegarde le document dans ||| save	count=1
namespace	capture de la ||| function	count=1
function_name	entrées de ||| cat	count=1
function_name	[function_name_1] noms ||| [function_name_1] [function_name_2]	count=1
function_name	change la taille du ||| size	count=1
function_name	fichier rpm ||| rpm close	count=1
arg_pair	la variable libre server_key ||| string $server_key	count=1
function_name	la page et libère ||| page	count=1
function_name	des ||| internal	count=1
function	[function_name_1] une nouvelle ||| [arg_pair_2] [function_name_1]	count=3
function_name	position du neurone ||| to neuron	count=1
function_name	transaction globale qui appartient ||| last gtid	count=1
return	fait ||| mixed	count=1
function_name	encodés qui s'y ||| mailparse uudecode	count=1
function_name	de configuration include_path ||| path	count=1
return	et ||| void	count=7
function_name	survenue lors [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	mysqlnd persistante ||| mysqlnduhconnection	count=1
arg_pair	la fonction filter_var() ||| mixed $definition	count=1
function_name	au serveur sans attendre ||| pg send	count=1
function_name	repère [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sert à comparer ||| ldap compare	count=1
function_name	enfant au ||| child	count=1
arg_pair	alphabétiques ||| string $pattern	count=1
function_name	des tests ||| array uintersect uassoc	count=1
function_name	à la fonction ||| by	count=1
arg_pair	le fichier filename et ||| string $filename	count=1
return	de la ||| resource	count=1
function_name	ligne suivante de ||| dbplus next	count=1
return	connexion à un jeu ||| array	count=1
return	définie avec la ||| string	count=1
function_name	le mode de ||| mode	count=1
namespace	représentant l'image ||| gmagick	count=1
return	de tri qui ||| void	count=1
function_name	[function_name_1] interfaces ||| [function_name_2] [function_name_1]	count=2
arg_pair	/etc/hosts.deny pour vérifier si ||| string $user	count=1
arg_pair	utilisant les paramètres font ||| float $fontsize	count=1
function_name	les [function_name] ||| set allowed [function_name]	count=3
function_name	une interface avec gettimeofday ||| gettimeofday	count=1
namespace	méthode ||| mongocursorinterface	count=1
function_name	nombre de documents similaires ||| mlt count	count=2
namespace	du document dans ||| harudoc	count=1
return	un tableau de ||| array	count=13
namespace	termes ||| ev	count=1
arg_pair	casse des ||| string $string	count=1
function_name	tous les ||| form	count=1
return	compressé [return] bzip2 ||| [return]	count=1
arg_pair	par l'objet gmagickpixel ou ||| gmagickpixel $color	count=1
arg_pair	fonction mktime() excepté le ||| int $month	count=1
function_name	regroupements [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	la fonction est définie ||| is	count=1
function_name	couleur de la ||| color	count=1
arg_pair	chaîne data avec le ||| resource $connection string $data	count=1
namespace	méthode détermine si ||| pharfileinfo	count=1
namespace	le nombre ||| function	count=1
function_name	si un fichier au ||| is	count=1
arg_pair	jpeg et tiff ||| bool $thumbnail	count=1
function_name	apache ||| apache	count=1
function_name	tangente ||| tan	count=2
function_name	sémaphore ||| sem	count=1
return	durée du script ||| string	count=1
arg_pair	cubrid_lob2_bind() est utilisée pour ||| mixed $bind_value	count=1
function	[function_name_1] path ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	en la valeur ||| int $type mixed $value	count=1
return	en suivant les ||| array	count=1
namespace	verrouille un nouveau mutex ||| mutex	count=1
function_name	précédemment supprimé avec stream_wrapper_unregister() ||| stream wrapper	count=1
function_name	importe un ||| import	count=1
arg_pair	yar_concurrent_client::loop() ||| callable $callback	count=1
function_name	facteur quickprop ||| set quickprop	count=1
function_name	retourne un ||| get terms	count=1
function_name	retourne la dernière erreur ||| error string	count=1
function_name	[function_name_1] type ||| [function_name_1] byte [function_name_2]	count=1
namespace	s'interrompt si elle prend ||| function	count=1
function_name	objet ainsi ||| pg fetch object	count=1
return	le flux de ||| string	count=1
function_name	retour de statut ||| add task status	count=1
function_name	bibliothèque sous-jacente imagemagick ||| limit	count=1
function_name	tampon ||| get	count=1
namespace	d'une autre classe ||| reflectionclass	count=1
arg_pair	dictionnaire dict ||| resource $dict	count=1
function_name	ftell() pour déterminer ||| stream tell	count=1
function	[function_name_1] une requête ||| [function_name_1] [arg_pair_2]	count=4
return	en cours sur la ||| bool	count=4
function_name	pdi ||| pdi parameter	count=2
function_name	la configuration de l'objet ||| config	count=1
function_name	données mysql ||| mysql	count=1
arg_pair	retourne une ressource ||| string $connection_string int $connect_type	count=1
arg_pair	méthode est une ||| string $key	count=1
arg_pair	x509cert ||| mixed $x509cert	count=2
function_name	serveur le ||| immortal	count=1
arg_pair	les phars orientés web ||| string $f404	count=1
arg_pair	l'activation ||| int $condition_type mixed $condition	count=1
namespace	dans ||| mongocursor	count=1
arg_pair	de texte et ||| resource $pdfdoc string $text	count=1
namespace	la requête émise au ||| solrresponse	count=1
function_name	similaire à pclose() hormis ||| proc close	count=1
arg_pair	position courante du texte ||| string $text	count=1
function_name	l'option de transfert ||| setopt	count=1
function_name	déclarante ||| declaring	count=1
function_name	l'échelle ||| pdf scale	count=2
function_name	à la ||| field type	count=2
function_name	sont sur des ||| newt form destroy	count=1
function_name	de départ de ||| start line	count=1
function_name	courant ||| buffer	count=1
arg_pair	au ||| resource $connection	count=1
function_name	taille de ||| strlen	count=1
namespace	cette méthode est ||| mongoclient	count=1
function_name	[function_name_1] fond ||| [function_name_1] high [function_name_2]	count=1
function_name	serveurs connus ||| reset server	count=1
function_name	exécution ou ||| set	count=1
return	en l'augmentant au niveau ||| bool	count=1
arg_pair	que les paramètres ||| int $year	count=2
arg_pair	de résultats result ||| resource $result	count=1
function_name	récupère [function_name_2] ||| [function_name_1] facet [function_name_2]	count=3
function_name	à ||| set soap	count=1
namespace	la méthode de compression ||| function	count=1
function_name	étire la saturation de ||| linear stretch	count=1
function_name	fread() ||| stream	count=1
return	détruire ||| bool	count=1
function_name	document ||| update	count=1
arg_pair	si l'accès au ||| string $user bool $nodns	count=1
namespace	méthode recursiveiteratoriterator::rewind() ||| recursiveiteratoriterator	count=1
namespace	méthode implémente un ||| arrayobject	count=1
function_name	inutile la méthode phar::startbuffering() ||| buffering	count=1
return	fichier qui ne ||| void	count=1
namespace	lit ||| splfileinfo	count=4
arg_pair	termine la ||| resource $fam	count=1
arg_pair	la ||| string $prefix	count=2
function_name	être utilisé pour ||| debug	count=1
function_name	[function_name_1] est déclaré ||| [function_name_1] [function_name_2]	count=4
arg_pair	demande un verrou ||| resource $relation	count=1
function_name	prochain résultat du ||| next	count=1
arg_pair	la fonction ||| array $array	count=1
arg_pair	requête à ||| string $index	count=1
arg_pair	de a et p ||| gmp $p	count=1
function	informations [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	image depuis ||| image file	count=1
namespace	file d'attente s'interrompt ||| function	count=1
return	les composants qui avaient ||| void	count=1
arg_pair	du dictionnaire dict ||| resource $dict	count=1
function_name	fragments proches ||| highlight	count=1
namespace	document xml ||| xmldiff\file	count=1
return	la base de ||| int	count=1
arg_pair	lors ||| array $server	count=3
return	précédemment définie avec la ||| string	count=1
function_name	secondes ||| eio set max	count=1
function_name	configure l'échelle ||| scale	count=1
function_name	des [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	dans un fichier ||| int	count=1
arg_pair	un préfixe utilisé pour ||| string $prefix	count=1
function_name	page sous ||| reset image page	count=1
arg_pair	un ||| call $callback	count=1
arg_pair	[arg_pair] clés reçues ||| [arg_pair]	count=1
function_name	est statique ||| is static	count=4
return	script php d'un ||| bool	count=1
function_name	résultants et les ||| batch size	count=1
function_name	de l'étape d'erreur sarprop ||| fann set sarprop step error shift	count=1
function_name	crée une nouvelle image ||| new pseudo image	count=1
function_name	[function_name_1] blob ||| [function_name_2] [function_name_1]	count=5
function_name	type d'algorithme à utiliser ||| method	count=1
return	traitement appliqué à différents ||| bool	count=1
function_name	la trace ||| trace as	count=1
function_name	version de ||| rrd version	count=1
function_name	spécifié ||| compressionmethod	count=1
function_name	méthode est abstraite ||| is abstract	count=2
arg_pair	filename sous ||| string $mode	count=1
function_name	retourne la largeur de ||| width	count=1
arg_pair	une source de ||| string $password int $cursor_type	count=1
function_name	dont l'identifiant est fourni ||| free	count=2
arg_pair	spécifié par l'argument offset ||| int $offset	count=1
namespace	snmp spécifié par ||| function	count=1
function	l'écrit dans [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	déplace le ||| field seek	count=1
arg_pair	ou distante ||| bool $is_output bool $is_null	count=1
arg_pair	str à la ||| mixed $fd string $str	count=1
return	méthode du ||| int	count=1
function	en_us de_de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	courbe de bézier ||| bezier	count=1
function_name	sur le gestionnaire curl ||| curl	count=1
namespace	lors de ||| function	count=1
function_name	la fin ||| end	count=1
function_name	fonction [function_name] rappel ||| [function_name]	count=1
function_name	du document utilisée ||| cache	count=1
function_name	un verrou ||| lock read	count=1
function_name	canal alpha de l'image ||| image alpha channel	count=1
arg_pair	la priorité de pid ||| int $priority int $pid	count=1
function_name	[function_name_1] classe ||| [function_name_2] [function_name_1]	count=3
function_name	retour de statut ||| task status	count=1
function_name	la base sqlite identifiée ||| sqlite close	count=1
return	indique si la ||| bool	count=1
function_name	tailles de clés supportées ||| sizes	count=2
return	d'un tableau ||| array	count=4
namespace	fonctionnement en mode i/o ||| gearmanworker	count=1
arg_pair	la sequence donnée ||| string $sequence	count=1
function_name	[function_name_1] la facette ||| [function_name_2] [function_name_1]	count=4
function_name	efface un flux de ||| delete textflow	count=1
arg_pair	du domaine domain retourné ||| string $domain	count=1
function_name	le nombre de colonnes ||| ifx num fields	count=1
function_name	de version [function_name_2] ||| [function_name_2] [function_name_1]	count=10
return	une ligne dans ||| int	count=1
arg_pair	octets nuls ||| int $length	count=1
return	fait qu'elle ignore ||| int	count=1
function_name	les images scannées où ||| deskew	count=1
arg_pair	cc et bcc ||| string $cc string $bcc	count=1
arg_pair	identifiant packet_id ||| resource $packet_id mixed $var_name	count=1
function_name	tri du résultat ||| add sort field	count=2
function_name	exe ||| exe footer	count=2
namespace	contenu courant du ||| function	count=1
function_name	clair ||| ssh2 auth password	count=2
function_name	différents ||| preview	count=1
arg_pair	dans les contextes v8js ||| array $dependencies bool $auto_enable	count=1
return	lit le contenu ||| string	count=1
function_name	identifiant donné ||| element by id	count=1
return	toutes ||| int	count=1
function_name	à partir d'une chaîne ||| string	count=1
arg_pair	envoyés par le ||| string $url	count=1
function_name	un bloc ||| shmop delete	count=1
arg_pair	requête de recodage request ||| string $request	count=1
return	arbre ||| sdo_das_xml_document	count=1
function_name	concatène la matrice ||| concat	count=1
arg_pair	si un mot existe ||| resource $dict string $word	count=1
function_name	fixe ||| ps set info	count=1
function_name	à la fin de ||| add	count=1
arg_pair	la pile __autoload() fournie ||| bool $throw	count=1
function	l'échelle de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	retourne une ||| get resource	count=1
function_name	colonne ||| column	count=1
function_name	needle dans haystack ||| strstr	count=1
arg_pair	crée un ||| resource $fdf_document	count=1
function_name	les caractères ||| escape string	count=1
arg_pair	établir ||| string $dbname	count=1
return	à la forme en ||| void	count=1
function_name	la méthode d'entrelacement ||| image interlace scheme	count=1
arg_pair	sont ||| int $hour	count=1
function_name	la réponse brute du ||| get raw response	count=1
namespace	l'objet sous ||| solrparams	count=1
function_name	cette fonction ||| cubrid	count=4
function_name	défini l'uri ||| set base uri	count=1
arg_pair	par le descripteur fd ||| mixed $fd	count=1
namespace	effectue une requête ||| soapserver	count=1
function_name	[function_name] le ||| get [function_name]	count=2
function_name	les paramètres ||| string	count=1
function_name	id ||| id	count=4
arg_pair	statue un fichier sur ||| resource $sftp string $path	count=1
return	temporaire ||| array	count=1
function_name	champs facet qui ||| facet	count=1
function_name	valeur de l'attribut ||| attribute	count=1
return	à une ||| string	count=1
arg_pair	donné par address à ||| resource $socket string $address	count=1
function_name	points d'accès ccl qualifiers ||| ccl conf	count=1
function_name	jpeg ||| imagejpeg	count=1
function_name	l'objet a terminé ||| set	count=1
function_name	libère les ressources prises ||| free	count=1
arg_pair	fixe la ||| float $x	count=1
arg_pair	statue ||| resource $sftp string $path	count=1
function_name	de la ||| include	count=1
function_name	noms est déclaré ||| start namespace decl	count=2
function_name	afficher [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	fichier remote_file présent ||| int $mode	count=1
function_name	socket créé précédemment ||| stream socket	count=1
function_name	nouvelle csrcertificate signing ||| new	count=1
function_name	recherche ||| eregi	count=1
arg_pair	applique un vecteur de ||| mixed $tint mixed $opacity	count=1
function_name	a terminé ||| set	count=1
return	est à la fin ||| bool	count=1
function_name	efface ||| pdf delete	count=1
function_name	place ||| string	count=1
function_name	cubrid_connect_with_url() est utilisée ||| with url	count=1
return	un tableau avec ||| array	count=2
arg_pair	la sequence ||| resource $imap_stream string $sequence	count=1
arg_pair	de a et b ||| gmp $b	count=3
function_name	ajoute la session ||| curl multi add	count=1
function_name	record pour l'effacement ||| record	count=1
function_name	première entrée du ||| ldap first entry	count=1
arg_pair	centrée sur les coordonnées ||| int $cy	count=1
arg_pair	haystack et retourne ||| bool $before_needle	count=1
namespace	si un fichier au ||| pharfileinfo	count=1
function_name	ceux de lecture ||| chmod	count=1
namespace	verrou ||| function	count=1
namespace	deux objets eventbufferevent ||| eventbufferevent	count=1
function_name	qui s'y ||| uudecode	count=1
arg_pair	valeur de l'argument ||| callable $callback	count=1
return	de deux collections : ||| mongodb	count=1
namespace	contenu existant ||| yaf_response_abstract	count=1
function	[function_name_1] fichiers ||| [function_name_1] [arg_pair_2]	count=3
function_name	sert à détruire un ||| delete	count=1
function_name	libère les ||| event buffer free	count=1
arg_pair	un hyperlien ||| float $urx	count=2
function_name	le nom de l'encodage ||| encoding name	count=1
function	[function_name_1] gearmanclient::setstatuscallback() ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	clé key existe déjà ||| mixed $value	count=1
function_name	[function_name_1] température sarprop ||| [function_name_2] [function_name_1]	count=1
function_name	étire ||| linear stretch	count=1
return	métadonnées et ||| mongodb	count=1
function_name	à ||| from	count=2
arg_pair	enregistre une ou plusieurs ||| mixed $keys	count=1
function_name	commence ||| pdf begin	count=1
function_name	version wbmp de l'image ||| imagewbmp	count=1
function_name	array complétée jusqu'à la ||| array pad	count=1
arg_pair	stockée dans un ||| int $value	count=1
arg_pair	est utilisée pour établir ||| string $dbname string $userid	count=1
function_name	présence ||| max dispatch interval	count=2
namespace	encodés qui s'y trouvent ||| function	count=1
return	d'oracle ||| bool	count=1
function_name	avec la connexion fournie ||| fbsql database	count=1
arg_pair	similaire à la fonction ||| resource $result	count=2
return	des différences et ||| string	count=1
arg_pair	la casse ||| string $pattern	count=1
function_name	candidate ||| cand epochs	count=4
return	la file d'attente ||| void	count=1
function_name	récupérer les données blob/clob ||| lob export	count=1
function_name	point vert ||| green	count=1
function_name	le nom de relation ||| dbplus	count=1
function_name	noeud à [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	archive phar est ||| is	count=1
function_name	pour ||| set by	count=1
function_name	des données blob/clob et ||| cubrid lob send	count=1
function_name	résout le nom d'hôte ||| host	count=1
function_name	uri [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	dimensions de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	moifie un attribut dans ||| bool $mva	count=1
arg_pair	length ||| int $length	count=1
return	en une couleur de ||| bool	count=3
arg_pair	depuis l' oid ||| string $oid	count=1
function_name	ouverte par bbcode_create() ||| bbcode destroy	count=1
function_name	l'élément précédent ||| prev	count=1
function_name	gestionnaire par défaut de ||| set default handler	count=1
function_name	un document selon ||| validate	count=1
function_name	utilisée pour récupérer ||| cubrid column	count=1
arg_pair	tente de créer une ||| string $database_name	count=1
return	à un jeu de ||| array	count=1
namespace	considère array comme ||| function	count=1
namespace	d'exécution des ||| pharfileinfo	count=1
function_name	fréquence en deçà duquel ||| mlt min term frequency	count=1
arg_pair	l'endroit ||| resource $errdat	count=1
function_name	bordure ||| border	count=3
function_name	défini l'époque maximale ||| set cascade max	count=1
function_name	boucle libeio tant ||| eio	count=1
function_name	prochain [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	[function_name_1] du fichier ||| [function_name_2] [function_name_1]	count=4
function_name	l'espace de couleur de ||| color space	count=1
arg_pair	les métadonnées et ||| mongodb $db	count=1
arg_pair	de résultat ||| resource $result	count=1
namespace	file ||| function	count=1
function_name	à la mémoire partagée ||| shm attach	count=1
namespace	paramètres de l'objet sous ||| solrparams	count=1
function_name	différents niveaux ||| preview	count=1
return	méthode implémente un algorithme ||| void	count=1
function_name	[function_name_1] odbc ||| [function_name_2] close [function_name_1]	count=1
namespace	trouvent ||| function	count=1
function_name	position partant de zéro) ||| position	count=1
function_name	fonction libère la ||| cubrid free result	count=2
return	toute les ||| bool	count=1
function_name	canal alpha ||| alpha channel	count=4
arg_pair	la clé /status ||| resource $fdf_document	count=1
function_name	de la requête ||| query	count=2
arg_pair	données cubrid et sauvegarde ||| resource $conn_identifier resource $lob_identifier	count=1
arg_pair	stockée dans ||| int $value	count=1
function_name	cosinus hyperbolique ||| trader cosh	count=1
arg_pair	et ||| resource $connection	count=1
function_name	un traitement ||| preview	count=1
arg_pair	clé key existe déjà ||| string $key mixed $value	count=1
function_name	données personnalisées dans un ||| metadata	count=1
arg_pair	cubrid et sauvegarde ||| resource $lob_identifier	count=1
function_name	la ligne d'aide courante ||| help line	count=1
function_name	par ||| closedict	count=1
function_name	implosé par un pourcentage ||| implode	count=1
function_name	récupère ||| get query	count=1
namespace	evstat watcher et ||| evstat	count=1
function_name	récupérer le nombre ||| num	count=1
function_name	un jeu de résultats ||| db2	count=5
function_name	la fin ||| append	count=1
function_name	spécial ou ||| posix mknod	count=1
function_name	lit une ligne dans ||| fetch	count=1
function_name	l'endroit ||| fann set	count=1
namespace	que la ||| mongocursorinterface	count=1
function_name	où ||| log	count=1
arg_pair	needle ||| string $needle	count=1
return	doit ||| void	count=2
function_name	récupère la valeur associée ||| get	count=1
function_name	requête principale ||| query	count=1
function_name	les regroupements ||| set group	count=1
function_name	récupère le [function_name_2] ||| [function_name_1] byte [function_name_2]	count=1
function_name	composant statistique ||| stats	count=1
arg_pair	annonce sa présence) ||| resource $root_device bool $available	count=1
arg_pair	à un index d'une ||| int $index	count=1
namespace	peut être utilisée pour ||| mongolog	count=1
function_name	désactive ||| disable	count=1
namespace	place les chaînes ||| arrayobject	count=1
function_name	[function_name_1] sqlite ||| [function_name_2] [function_name_1]	count=14
return	des noeuds ||| bool	count=2
function_name	crée un nouveau ||| new	count=1
arg_pair	détermine si pspell_save_wordlist() ||| bool $flag	count=1
function_name	autour des liens ||| set border	count=1
function_name	[function_name_1] l'instance haruencoder ||| [function_name_2] [function_name_1]	count=1
function_name	fin de ||| buffer	count=1
function_name	lignes autour des liens ||| border	count=1
function_name	cubrid_connect_with_url() ||| with url	count=2
function_name	qui sont ||| form destroy	count=1
function_name	la file ||| eio set max	count=1
function_name	un attribut dans un ||| update attributes	count=1
function_name	les ||| form destroy	count=6
arg_pair	par object_id ||| string $type	count=1
function_name	un résultat ibase ||| ibase	count=1
namespace	contenu d'une [namespace] en ||| [namespace]	count=2
function_name	appliqué à différents niveaux ||| preview	count=1
function_name	associatif [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	elle prend plus de ||| poll	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] last elapsed [function_name_2]	count=1
function_name	où les ||| log	count=1
function_name	ibase [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	à ||| rewind	count=1
arg_pair	et ses voisins immédiats ||| int $x	count=2
function_name	conteneur de chargement donc ||| set default stub	count=1
function_name	clientes oracle après ||| oci	count=1
function_name	[function_name_1] [function_name_2] la classe considérée ||| [function_name_2] [function_name_1]	count=2
namespace	verrou ||| eventbuffer	count=1
function_name	patch ||| file patch	count=3
arg_pair	dans un ||| resource $pxdoc	count=1
function_name	devant les caractères ||| escape	count=1
return	le gestionnaire de ||| string	count=1
function_name	des informations issus ||| info	count=1
function_name	[function_name_1] accessible ||| [function_name_1] [function_name_2]	count=1
function_name	dernier identifiant autogénéré ||| db2 last	count=1
function_name	le logo php en ||| php logo guid	count=1
return	objet ||| void	count=1
function_name	symbole de jacobi ||| gmp jacobi	count=1
function_name	l'objet sous la forme ||| to	count=1
namespace	des antislashs devant les ||| function	count=1
function_name	fonction getimagesize() ||| getimagesizefromstring	count=1
function_name	de transfert curl ||| curl setopt	count=1
function_name	présentes dans tous les ||| intersect	count=1
function_name	à guillemets string ||| imap qprint	count=1
arg_pair	pour récupérer des parties ||| string $blob_id	count=1
arg_pair	attrappées ||| string $cb	count=1
function_name	recherche ||| search	count=4
function_name	maximale d'une ligne ||| set max line	count=1
function_name	de fréquence ||| frequency	count=1
function_name	retourne la dernière erreur ||| enchant dict get error	count=1
function_name	de linejoin ||| pdf setlinejoin	count=1
function_name	avec des tests sur ||| uintersect assoc	count=1
arg_pair	la position offset et ||| resource $context int $offset	count=1
function_name	distant sans suivre ||| ssh2 sftp lstat	count=1
function_name	[function_name_1] majuscules ||| [function_name_2] [function_name_1]	count=2
namespace	fois par objet ||| collectable	count=1
function_name	de la demande courante ||| request	count=1
function_name	réplication et d'équilibrage ||| ms	count=1
function_name	hauteur de l'image ||| imagesy	count=1
function_name	libère toutes ||| event base free	count=1
function_name	déboguage ||| debug	count=3
function_name	[function_name_1] de traduction ||| [function_name_1] [function_name_2]	count=1
function_name	un identifiant donné ||| element by	count=1
function_name	tests sur l'index compare ||| uintersect assoc	count=1
function_name	alias ||| alias	count=1
function	enregistrées [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	est ||| domelement	count=1
arg_pair	de données cubrid et ||| resource $lob_identifier	count=1
function_name	gestionnaire de fichier ||| stream	count=1
function_name	de ||| set type	count=2
arg_pair	la requête query ||| string $query resource $link_identifier	count=1
arg_pair	le tracage ||| resource $connection string $module_name	count=1
arg_pair	la fonction mktime() ||| int $hour	count=1
namespace	elle prend plus ||| function	count=1
return	ainsi que ceux de ||| void	count=1
namespace	sémaphore nommé ou ||| syncsemaphore	count=1
return	donne la valeur de ||| mixed	count=1
function_name	la fin ||| buffer	count=1
function_name	xml [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	et ||| and	count=1
function_name	des données blob/clob ||| cubrid lob	count=1
namespace	corrélation ||| arrayobject	count=1
function_name	pour ||| set include	count=1
function_name	sybase associé [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	courant simplexmliterator a des ||| simplexmliterator	count=1
function_name	mot de passe ||| fbsql database password	count=1
arg_pair	gestionnaire de queues ||| resource $hconn	count=1
function_name	bibliothèque ucd ||| quick print	count=2
function_name	curseur typiquement parcourt ||| batch size	count=1
function_name	les paramètres d'échelle ||| params	count=1
function_name	des antislashs ||| escape	count=1
namespace	de données retourne les ||| mongocursor	count=1
function_name	jeu ||| get	count=1
function_name	notification de modification ||| proxy add notify	count=1
function_name	utilisée ||| zip entry compressionmethod	count=2
function_name	la fonction ||| handler	count=1
return	diffère du ||| int	count=1
function_name	exécute le ||| execute	count=1
arg_pair	les ||| int $second int $month	count=1
function_name	mesurée ||| fseek	count=1
function_name	phar::startbuffering() peut ||| buffering	count=1
function_name	un identifiant unique pour ||| object hash	count=1
function_name	de méthodes négociées ||| ssh2 methods negotiated	count=1
arg_pair	rouge ||| int $r	count=1
return	de caractères représentant la ||| string	count=3
function_name	optimise la base ||| optimize	count=1
function_name	données blob/clob ||| lob	count=1
function_name	les composants ||| content	count=1
function_name	d'une [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	et bcc ||| string $rpath	count=1
function_name	défini la fonction d'activation ||| fann set activation	count=3
function_name	lignes ||| rzap	count=1
arg_pair	au format champ= > ||| resource $connection	count=1
function_name	du document utilisée ||| enum cache	count=1
function_name	la ||| include path	count=6
arg_pair	database ibm cloudscape ||| string $database	count=1
return	crée un tableau ||| array	count=1
function_name	mise à jour ||| log cmd update	count=1
arg_pair	un hyperlien à une ||| float $urx	count=1
function_name	de la ||| eregi	count=1
function_name	stocker des données ||| set metadata	count=1
arg_pair	invoquées avant de vérifier ||| int $max_callbacks	count=1
return	noire [return] exposant des ||| [return]	count=1
function_name	les ||| db2 escape	count=1
function_name	suivi des ||| trace	count=1
namespace	une tâche et ||| gearmanclient	count=1
function_name	de l'os hôte d'une ||| host os	count=1
arg_pair	depuis la représentation ||| string $filename	count=1
function_name	> récupère le ||| get	count=1
function_name	les drapeaux ||| flags	count=4
namespace	le [namespace] le ||| [namespace]	count=1
function_name	transforme ||| transform to	count=1
function_name	récupère le nombre d'erreurs ||| pgsql get	count=1
arg_pair	name afin ||| string $name	count=1
function_name	comme pourrait le ||| unbuffered	count=1
function_name	buffer de [function_name] ||| get [function_name]	count=3
function_name	connexion passées ||| cubrid connect	count=1
function_name	maximal [function_name_2] ||| [function_name_1] num query [function_name_2]	count=3
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $format [arg_pair_2]	count=1
function_name	snmp spécifié ||| snmp2	count=2
function_name	par la forme ||| newt	count=1
function_name	enchant ||| enchant	count=1
function_name	les données du ||| all	count=1
arg_pair	nom de spotname ||| string $spotname	count=1
function_name	elle prend plus de ||| max poll time	count=1
function_name	si elle ||| set max	count=1
namespace	la [namespace] en utilisant ||| [namespace]	count=1
function_name	d'attente s'interrompt si ||| eio set max poll time	count=1
function_name	d'entité externe de ||| external entity ref	count=1
arg_pair	passés ||| int $day int $year	count=1
arg_pair	et ||| int $options	count=1
function_name	testant ||| runkit	count=1
function_name	paramètres ||| parameter	count=2
function_name	paramètre est ||| is	count=1
arg_pair	convertit left et ||| mixed $left	count=1
return	d'un tableau de ||| array	count=1
function_name	lit le contenu courant ||| ob get	count=1
arg_pair	avec ||| resource $image array $style	count=1
return	délai sur ||| mongocursor	count=1
function_name	[function_name_1] la taille ||| [function_name_2] [function_name_1]	count=7
function_name	l'itérateur [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	la recherche sur ||| string $string	count=1
namespace	la valeur ||| harupage	count=1
function_name	est un ||| is nick	count=1
function_name	spécifiée avec un traitement ||| images	count=1
function	[function_name_1] de fichiers ||| [function_name_1] [arg_pair_2]	count=4
return	contenu ||| mongodb	count=1
function_name	de l'image ||| set image compose	count=2
namespace	ou du ||| function	count=2
function_name	fonction est une fonction ||| is	count=1
function_name	un ||| preview images	count=4
namespace	des noeuds ||| spldoublylinkedlist	count=1
function_name	logarithme base-10 pour chaque ||| log10	count=1
function_name	de configuration tidy ||| tidy load config	count=1
function_name	identifiant unique pour l'objet ||| object hash	count=1
arg_pair	une valeur ||| resource $p int $value	count=1
function_name	dictionnaire ||| enchant	count=1
function_name	défaut de tidy ||| tidy reset	count=1
function_name	crée le lien ||| link	count=1
function_name	gris pour toutes les ||| setgray	count=1
arg_pair	ressource handle et ||| resource $handle	count=1
arg_pair	depuis le fichier fourni ||| mixed $filename	count=1
arg_pair	retourne la ||| int $offset int $count	count=1
return	pixel [return] ||| [return]	count=3
function_name	l'échelle les sorties ||| scale	count=1
function_name	du premier ||| first	count=1
function_name	limite inférieure dans ||| get terms include lower bound	count=1
arg_pair	boîte aux lettres ||| resource $imap_stream string $mailbox	count=2
function_name	[function_name_1] du serveur ||| [function_name_1] [function_name_2]	count=4
return	un élément avec un ||| domelement	count=1
function_name	[function_name_1] insérer ||| [function_name_2] [function_name_1]	count=6
arg_pair	hormis le fait qu'elle ||| string $pattern	count=1
function_name	retourne la dernière erreur ||| get error	count=1
function_name	minimale du ||| enum cache min default	count=1
function_name	le contenu courant ||| ob	count=1
function_name	une classe ||| class	count=1
function_name	readline de ||| readline	count=1
arg_pair	valeur entière ||| number $increment	count=1
arg_pair	qu'elle ignore la casse ||| string $pattern string $string	count=1
namespace	le dessin des ||| function	count=1
function_name	messages organisés [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	chemin server_path ||| string $server_path	count=1
function_name	l'esclave ou ||| mysqlnd ms query	count=1
function_name	[function_name_1] file ||| [function_name_2] [function_name_1]	count=2
arg_pair	len octets issus ||| int $len int $flags	count=1
function_name	un ||| mailparse	count=1
arg_pair	à la ||| int $second int $month	count=1
arg_pair	clic sur celui-ci ||| resource $psdoc	count=1
function_name	la casse), et jusqu'à ||| grapheme stristr	count=1
function_name	d'attente s'interrompt si elle ||| eio set	count=1
return	appel à la ||| void	count=1
namespace	appels distants rpc ||| yar_concurrent_client	count=1
return	le moteur de ||| yaf_view_interface	count=1
namespace	un verrou ||| function	count=1
function_name	de résultat mnogosearch ||| udm get	count=1
namespace	chaîne ||| function	count=1
function_name	une classe est une ||| is	count=1
function_name	été ajoutés à ||| form	count=1
function_name	la configuration courante dans ||| tidy save config	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] pkcs12 [function_name_1]	count=2
function_name	avec ||| proc	count=1
return	partir d'une chaîne de ||| sdo_das_xml_document	count=1
arg_pair	parser ||| resource $parser callable $handler	count=6
namespace	sur ||| xmldiff\file	count=1
function_name	classe est instanciable ||| is instantiable	count=2
function_name	retourne une référence ||| returns reference	count=1
return	des valeurs en provenance ||| bool	count=1
function_name	la brosse ||| imagesetbrush	count=1
function_name	entrées du cache ||| wincache	count=1
function_name	crée la ||| fann create	count=1
function_name	fichier fourni et ||| uudecode	count=1
return	sur ||| mixed	count=1
function_name	du centre [function_name] ||| swirl [function_name]	count=1
function_name	les valeurs ||| get values	count=2
arg_pair	en utilisant l'image image ||| resource $image string $filename	count=1
return	un ||| domelement	count=2
function_name	fait de définir ||| set highlight	count=1
function_name	pour les événements spécifiés ||| set	count=1
function_name	et ||| mailparse uudecode	count=1
function_name	calculate la constante ||| trader exp	count=1
function_name	[function_name_1] schéma ||| [function_name_1] [function_name_2]	count=1
function_name	est similaire à ||| field type	count=2
arg_pair	et produit les ||| string $from string $to	count=1
function_name	vérifie si l'on ||| query is	count=1
arg_pair	chaîne unescaped_string ||| string $unescaped_string	count=1
arg_pair	la cible ||| string $target	count=1
arg_pair	hormis le fait ||| string $pattern string $string	count=1
function	[function_name_1] et p ||| [arg_pair_2] [function_name_1]	count=2
function_name	définit ||| set mlt	count=3
function_name	à ||| get element by id	count=2
function_name	et la retourne sous ||| get	count=1
function_name	initialisée avec db2_connect() et ||| db2	count=1
arg_pair	ressource de fichier ||| int $flags	count=1
function_name	forme qui [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	du noeud courant sous ||| xmlreader	count=1
arg_pair	de la suppression d'un ||| array $protocoloptions	count=1
function_name	définit ||| set mask image	count=1
namespace	des différences et ||| xmldiff\file	count=1
function_name	ajoutés à la forme ||| form destroy	count=1
function_name	d'une classe ||| class	count=1
function_name	[function_name_1] trace de ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] champ ||| [function_name_1] resource $fdf_document [arg_pair_2]	count=1
function_name	à la ||| by id	count=1
arg_pair	fonction cubrid_connect() ||| string $passwd bool $new_link	count=1
function_name	record ||| delete record	count=2
arg_pair	sequence et retourne ||| resource $imap_stream string $sequence	count=1
namespace	en ||| function	count=3
function_name	globale de l'espace ||| colorspace	count=1
arg_pair	par =?iso-8859-1?... ||| string $field_name string $field_value	count=1
function_name	en ignorant la casse ||| str ireplace	count=1
namespace	la méthode ev::run() ||| ev	count=2
function_name	retourne le fils de ||| get children	count=1
function_name	représenté ||| closedict	count=1
function_name	paramètres de ||| parameter	count=1
arg_pair	à ||| int $year	count=2
function_name	connexions sont effectuées ||| local port	count=1
arg_pair	le séparateur delimiter ||| string $delimiter	count=1
function_name	retourne le fuseau horaire ||| time zone	count=1
function_name	cosinus hyperbolique pour ||| cosh	count=1
function_name	de l' eventbuffer courant ||| add buffer	count=1
return	des fichiers ainsi que ||| void	count=1
arg_pair	et position représentant une ||| resource $stmt	count=1
function_name	ouvre [function_name_2] ||| [function_name_2] [function_name_1] string $algorithm string $algorithm_directory	count=2
function_name	ne fait rien mise ||| eio nop	count=1
return	réalisation ||| int	count=2
function_name	typiquement parcourt un lot ||| size	count=1
arg_pair	une ||| string $password int $client_flags	count=1
function_name	serveur ||| server by path	count=1
function_name	curseur typiquement ||| batch	count=1
namespace	les paramètres de l'objet ||| solrparams	count=1
namespace	référence ||| weakref	count=1
arg_pair	fonction snmp2_get() est utilisée ||| string $host string $community	count=1
function_name	[function_name_1] ip utilisée ||| [function_name_1] [function_name_2]	count=2
function_name	définit l'apparence d'une ||| set xyz	count=1
namespace	un fichier temporaire ||| function	count=1
function_name	du champ fourni ||| field	count=1
function_name	de résultat décrivant la ||| fbsql list tables	count=1
function_name	une fonction [function_name] rappel ||| [function_name]	count=1
arg_pair	la chaîne str1 ||| string $str1	count=1
namespace	le gestionnaire de ||| gearmanjob	count=1
return	spécial ||| bool	count=1
function_name	partir d'une chaîne de ||| string	count=1
function_name	qui ne peuvent pas ||| set metadata	count=1
return	de connexion avec ||| int	count=1
function_name	fin de l'itération lorsque ||| iteration	count=1
function_name	le ||| immortal	count=2
namespace	archive [namespace] ||| [namespace]	count=3
function_name	de la distorsion spécifiée ||| distortions	count=1
function	[function_name_1] ligne/hors ||| [function_name_1] [arg_pair_2]	count=3
function_name	retourne la géométrie de ||| get page	count=1
function_name	est publique ||| is public	count=4
function_name	le nombre de champs ||| numfields	count=1
namespace	modules à surveiller avec ||| mongolog	count=1
function_name	si algorithm [function_name] algorithme ||| [function_name] block	count=1
function_name	identifiants uniques des ||| special columns	count=1
function_name	l'espace de noms depuis ||| namespace name	count=1
function_name	la valeur de la ||| include	count=1
namespace	verrouillage de l' eventbuffer ||| eventbuffer	count=1
function_name	lit une ligne ||| odbc fetch	count=1
namespace	la ||| gearmantask	count=2
function_name	définir les modules à ||| set	count=1
arg_pair	filter_var() ||| array $data mixed $definition	count=1
function_name	un verrou d'écriture sur ||| cubrid lock write	count=1
function_name	un [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] resource $parser callable $handler	count=6
namespace	tableau judy ||| judy	count=2
return	est utile uniquement avec ||| array	count=1
function_name	de division exacte ||| divexact	count=1
function_name	champs de la requête ||| query fields	count=1
return	fichier fourni et ||| array	count=1
function_name	mongoclient::close() [function_name] ||| [function_name]	count=1
function_name	remplissage ||| rgbfill	count=1
namespace	javascript passé par le ||| v8js	count=1
function_name	élément avec ||| by	count=1
function_name	données blob/clob depuis ||| lob export	count=1
function_name	l'itérateur [function_name] ||| [function_name]	count=2
function_name	filtre décimal à ||| set filter float range	count=1
function_name	utilisées par la forme ||| destroy	count=1
function	pour être [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de couleurs de ||| set	count=2
return	texte ||| int	count=1
function_name	été ||| destroy	count=1
function	contrôle avec [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	cela correspond parfaitement à ||| tremove	count=1
function_name	la variable associée ||| wincache ucache cas	count=2
namespace	ressources mémoires utilisées par ||| function	count=1
function_name	un ||| by	count=2
function_name	[function_name_1] lier ||| [function_name_2] [function_name_1]	count=3
function_name	fonction d'internationalisation appelée ||| intl get	count=1
namespace	courant du ||| function	count=1
arg_pair	[arg_pair_1] fonction radius_config() ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	unicode ||| get unicode	count=2
arg_pair	en noeud ||| domnode $node	count=1
arg_pair	fonction ||| int $minute	count=1
namespace	dans ||| pharfileinfo	count=1
function_name	prochaine requête xpath ||| xpath namespace	count=1
namespace	place le ||| function	count=1
arg_pair	dans ||| array $values	count=1
arg_pair	un message d'erreur à ||| string $message int $message_type	count=1
namespace	du lob oracle commençant ||| oci-lob	count=1
function_name	autre fonction utilisateur) ||| restore error	count=1
function_name	la machine maître ||| yp master	count=1
arg_pair	lit le fichier remote_file ||| string $remote_file	count=1
function_name	classe personnalisée à utiliser ||| set info class	count=1
return	l'objet a ||| void	count=1
namespace	retourne ||| recursivetreeiterator	count=1
function_name	le nom court d'un ||| short name	count=1
function_name	de documents [function_name_2] ||| [function_name_2] [function_name_1]	count=16
arg_pair	grand degré de ||| array $pipes string $cwd	count=1
return	avec un traitement ||| bool	count=1
namespace	à ||| sdo_das_xml	count=1
function_name	cette ||| get element by id	count=2
function_name	brosse ||| imagesetbrush	count=1
function_name	[function_name_1] avec ||| [function_name_2] [function_name_1]	count=6
function_name	libère les ressources mémoires ||| form destroy	count=1
arg_pair	les paramètres passés sont ||| int $second	count=1
namespace	elle prend ||| function	count=1
return	brosse courante pour ||| bool	count=1
return	le nombre de ||| int	count=11
function_name	le périphérique racine ||| gupnp root device	count=1
function_name	représentant le type du ||| type	count=1
arg_pair	avec la dernière occurrence ||| string $haystack	count=1
function_name	retire ||| curl multi remove	count=1
function_name	[function_name_1] image ||| [function_name_2] [function_name_1]	count=30
function_name	partir d'une chaîne de ||| load	count=1
function_name	0 signifiant qu'il n'y ||| subscription	count=1
function_name	l'itération lorsque la méthode ||| end iteration	count=1
function	[function_name_1] name ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=6
namespace	des données personnalisées dans ||| pharfileinfo	count=1
function_name	mysql courante ou sûr ||| mysql	count=1
return	test si ||| bool	count=1
arg_pair	position de la première ||| string $encoding	count=1
function_name	avec les ||| module	count=1
arg_pair	pour insérer un ||| string $attr_name int $index	count=1
function_name	le dictionnaire ||| crack	count=2
function_name	cette mise à jour ||| update	count=1
return	la fonction ||| int	count=1
namespace	une requête soap ||| soapserver	count=1
function_name	s'interrompt ||| eio set max poll	count=1
arg_pair	attribut dans ||| string $index array $attributes	count=1
function_name	modules ||| set module	count=2
return	rewinddir() seul ||| void	count=1
function_name	un jeu de résultats ||| cubrid result	count=1
function_name	minimum [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	son exécution ||| void	count=1
arg_pair	la ||| resource $fam	count=1
return	si le drapeau regexiterator::use_key ||| bool	count=1
return	les ||| array	count=53
arg_pair	dans un ||| resource $psdoc float $value	count=1
function_name	a ||| a	count=1
function_name	lorsque la méthode recursivetreeiterator::valid() ||| end	count=1
namespace	un dossier [namespace] ||| [namespace]	count=3
function_name	est une instance d'une ||| is	count=1
function_name	récupère le [function_name_2] ||| [function_name_1] color [function_name_2]	count=2
arg_pair	est similaire à ingres_fetch_array() ||| int $result_type	count=1
function_name	asynchrone ||| reap	count=1
arg_pair	lit ||| resource $link_identifier	count=1
function_name	place des ||| escape string	count=1
function_name	mysqli_connect() ||| mysqli connect	count=1
function_name	ajoute une tâche de ||| add	count=2
namespace	récupère ||| function	count=1
function	[function_name_1] index spécifié ||| [function_name_1] name resource $result [arg_pair_2]	count=2
arg_pair	de angle en degrés ||| resource $image float $angle	count=1
function_name	timestamp handler ||| timestamp	count=1
function_name	rassembler les [function_name] ||| get [function_name] merge	count=2
arg_pair	fait que les paramètres ||| int $second	count=1
arg_pair	son ||| string $warning	count=2
arg_pair	de la première occurrence ||| string $needle	count=1
namespace	fait qu'elle fonctionne ||| function	count=1
arg_pair	détaillées sur une date ||| string $format string $date	count=1
function	récupère [arg_pair_2] ||| [function_name_1] font [arg_pair_2]	count=1
function_name	d'équilibrage ||| ms	count=1
namespace	informe [namespace] d'intercepter ||| [namespace]	count=1
arg_pair	mktime() excepté ||| int $second int $month	count=1
function_name	bleu ||| image blue primary	count=1
arg_pair	le texte text ||| resource $p string $text	count=1
function_name	définit la ||| set color value	count=1
return	se déplace vers ||| void	count=1
function_name	un [function_name] ||| [function_name]	count=10
namespace	libevent ||| eventconfig	count=1
function_name	un token ||| access token	count=1
return	mb ||| bool	count=1
function_name	à ||| ps show	count=2
return	l'écriture de ||| bool	count=1
function_name	[function_name_1] odbc ||| [function_name_2] fetch [function_name_1]	count=1
function_name	de nouvelles coordonnées ||| ps moveto	count=1
arg_pair	données du jeu ||| resource $stmt string $classname	count=1
return	retourne un tableau identique ||| array	count=1
namespace	du texte à ||| function	count=1
function_name	du point vert ||| green	count=1
function_name	d'activation dans la couche ||| fann set activation	count=1
function_name	document pdf utilisé ||| pdf	count=1
function_name	avec l'écouteur d'événements ||| base	count=1
arg_pair	chaîne d'une ||| string $str int $start	count=1
return	fichier associé à une ||| string	count=1
function_name	demande un verrou ||| getlock	count=1
function_name	de colonnes ||| fields	count=1
function_name	sont ||| destroy	count=1
arg_pair	cartes de seuil ||| string $threshold_map int $channel	count=1
function_name	la ||| cancel	count=1
arg_pair	le contenu des ||| mongodb $db	count=1
function_name	du tampon de ||| ob	count=1
arg_pair	caractères ||| string $pattern	count=2
function_name	gnupg_addencryptkey auparavant [function_name] chiffré et ||| [function_name]	count=1
function_name	retourne [function_name_2] ||| [function_name_1] thread [function_name_2]	count=1
return	chaîne de caractères d'instance ||| sdo_das_xml_document	count=1
function_name	socket créé précédemment avec ||| stream socket accept	count=1
function_name	la tâche est ||| is	count=1
function_name	méthode de ||| zip entry	count=1
function_name	récupère le nombre d'erreurs ||| pgsql get error	count=1
return	une requête en cours ||| bool	count=1
function_name	serveur distant ||| ssh2 scp send	count=1
function_name	cette méthode détermine ||| is	count=1
arg_pair	paramètre variable_name ||| string $variable_name	count=1
namespace	nombre de champs ou ||| function	count=1
arg_pair	applique diverses options ||| string $optlist	count=1
function_name	champs ||| msql fetch field	count=1
function_name	prend plus de ||| max poll time	count=1
arg_pair	filename à ||| string $filename	count=1
function_name	persistante ||| pconnect	count=1
arg_pair	le fait que les ||| int $second int $month	count=1
function_name	lit ||| get file	count=1
function_name	sélectionne ||| db	count=2
return	lit le numéro de ||| int	count=1
function_name	d'un attribut par nom ||| attribute ns	count=1
function	pour être [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	un espace de ||| string $namespaceuri	count=1
arg_pair	localisation ||| string $location	count=1
function_name	la position courante ||| ifxus tell	count=1
return	contenant ||| gmagick	count=1
function_name	bases de ||| dbs	count=3
namespace	de base pour ||| xmldiff\base	count=1
namespace	xml donnée ||| sdo_das_xml	count=1
function_name	délai sur le serveur ||| immortal	count=1
function	facteur [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	change la transparence ||| float $alpha float $fuzz	count=1
function_name	données du champ depuis ||| field	count=1
arg_pair	les paramètres passés sont ||| int $minute	count=1
function_name	ajoute un lien ||| add	count=1
function_name	mémoire partagée de ||| shm attach	count=1
function_name	définit ||| set flags	count=2
function_name	la version échappée de ||| cubrid real escape string	count=1
function_name	constantes ||| constants	count=2
function_name	à utiliser dans ||| soap	count=1
arg_pair	de deux collections ||| string $prefix	count=1
function_name	dans le mois month ||| days in month	count=1
function_name	de fichier ||| file	count=1
arg_pair	hormis le ||| string $pattern	count=1
function_name	la trace de la ||| trace as	count=1
function_name	écrit ||| bcompiler write	count=1
arg_pair	excepté le ||| int $second	count=1
function_name	[function_name_1] d'un champ ||| [function_name_2] [function_name_1]	count=2
function_name	le résultat stmt ||| mysqli stmt	count=1
return	définit ||| void	count=1
function_name	cache apc ||| apc	count=1
arg_pair	trouve la dernière occurrence ||| string $haystack	count=1
function_name	retourne le préfixe de ||| prefix	count=1
function_name	initialise une requête ||| init	count=1
function_name	récupère les drapeaux définis ||| get flags	count=1
function_name	à la fin de ||| add buffer	count=1
arg_pair	fonction mktime() ||| int $hour int $minute	count=1
function_name	dans ||| set metadata	count=2
arg_pair	doit apparaître après un ||| string $simplepost string $field_override	count=1
return	l'itérateur à l'élément ||| void	count=1
function_name	lit un token ||| access token	count=1
function_name	correspondant au nom de ||| name	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $sealed_data [arg_pair_1]	count=6
function_name	par le paramètre patch ||| patch	count=1
function_name	avec ||| set module	count=2
function_name	la bibliothèque ucd de ||| quick print	count=1
function_name	vers le prochain élément ||| next	count=2
function_name	de la bibliothèque sqlite ||| sqlite libversion	count=1
return	relation dans ||| int	count=1
namespace	conservant la corrélation ||| arrayobject	count=1
function_name	données ingres ||| ingres	count=1
function_name	similaire [function_name] avec ||| [function_name]	count=1
function_name	pour la durée du ||| path	count=1
function_name	remplit le ||| ps fill	count=1
arg_pair	qui pour ||| string $path resource $context	count=1
arg_pair	de la pile ||| int $still_running	count=1
function_name	[function_name_1] l'espace de ||| [function_name_1] color [function_name_2]	count=1
arg_pair	xml depuis ||| string $filename int $options	count=1
namespace	la qualité ||| gmagick	count=1
arg_pair	saturation et la ||| float $saturation	count=1
function_name	sans suivre le lien ||| lstat	count=1
function_name	include_path pour la durée ||| set	count=1
function_name	l'itération ||| end iteration	count=1
function_name	les paramètres ||| scaling params	count=1
function_name	est similaire ||| fbsql field	count=1
return	les bits d'exécution ||| void	count=1
arg_pair	forme d'un ||| int $y	count=1
function_name	via le socket socket ||| socket sendto	count=1
function_name	signal ||| signal event	count=2
arg_pair	l'hôte hostname ||| string $hostname	count=2
function_name	le nombre de ||| sybase num	count=1
function_name	cette fonction est ||| by id	count=1
function_name	une [function_name] une ||| [function_name]	count=1
function_name	un flux ||| stream	count=1
function_name	les ||| set	count=3
function_name	contenu du cache de ||| wincache	count=1
function_name	- ax || ||| least squares by svd	count=1
function_name	page sous la ||| page	count=1
function_name	pagination ||| control paged result	count=1
function_name	et extrait ||| mailparse	count=1
arg_pair	fichier old_file ||| string $old_file	count=1
function	[function_name_1] le prompt ||| [arg_pair_2] [function_name_1]	count=4
namespace	est similaire à ||| domdocument	count=1
function_name	a été modifié ||| modify	count=1
function_name	donnée est ||| is numeric	count=1
function_name	statut [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la forme ||| newt form destroy	count=2
function_name	la levée [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sortir via la méthode ||| got exit	count=1
arg_pair	la casse des caractères ||| string $string	count=1
function_name	blob à ||| blob	count=1
namespace	supprime toutes les lignes ||| function	count=1
function_name	[function_name_1] pkcs#12 ||| [function_name_2] [function_name_1]	count=2
function_name	noms configurés ||| count nameservers	count=1
arg_pair	de la colonne indiquée ||| mixed $column	count=2
function_name	plus de ||| poll time	count=1
arg_pair	données d'un ||| resource $statement mixed $field	count=1
return	un verrou ||| int	count=1
return	deux collections ||| mongodb	count=1
function_name	vi ||| iv	count=1
function_name	la clé courante ||| key	count=2
function_name	pile et ||| array	count=1
arg_pair	la valeur courante ||| resource $stmt	count=1
function_name	est finale ||| is final	count=2
function_name	compile un ||| opcache compile file	count=1
function_name	stocker ||| set metadata	count=2
function_name	processus ||| setproctitle	count=1
function_name	une nouvelle ||| new pseudo	count=1
arg_pair	le prompt et ||| string $prompt	count=1
arg_pair	une chaîne dans ||| int $bid string $content	count=1
return	l'image depuis le flux ||| string	count=1
function_name	modèle 3d depuis ||| pdf load 3ddata	count=2
function_name	réception d'une notification de ||| service proxy add notify	count=1
function	de rappel [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	d'activation candidate en cascade ||| set cascade activation	count=1
function_name	chaîne de caractères uri ||| uri	count=1
function_name	pour le [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	retourne ||| mcrypt module get	count=1
namespace	de l'image ||| imagick	count=2
arg_pair	un verrou ||| resource $relation	count=1
function_name	contenant les [function_name] ||| get [function_name]	count=1
function_name	sur la connexion mysql ||| mysql	count=1
arg_pair	une ||| string $key mixed $var	count=1
arg_pair	fonction cubrid_lob_send() lit ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	la ||| id	count=1
namespace	affiche toute les ||| imagick	count=1
function_name	de inode du ||| inode	count=1
arg_pair	une version ||| resource $image	count=1
namespace	le noeud courant ||| tidynode	count=1
return	sur l'exécution du programme ||| resource	count=1
function_name	est du code asp ||| is asp	count=1
function_name	solr placera ||| echo handler	count=1
namespace	de fin de ||| function	count=3
function_name	à la mémoire partagée ||| shm	count=1
arg_pair	le réseau complet ||| resource $ann string $configuration_file	count=1
function_name	séquence d'images de ||| set	count=1
return	les ||| mongocommandcursor	count=1
function_name	connexion fournie ||| fbsql database	count=1
function_name	la révision ||| svn	count=3
function_name	méthode oauthprovider::consumerhandler() ||| callconsumer	count=1
function_name	socket créé précédemment ||| stream socket accept	count=1
arg_pair	retourne ||| int $connect_type	count=1
function_name	month de ||| in month	count=1
arg_pair	couleur color dans ||| int $color	count=1
function_name	retourne le nombre de ||| ifx num	count=1
arg_pair	la valeur ||| mixed $value int $timeout	count=1
function_name	dans un format lisible ||| string	count=1
arg_pair	format ||| int $format	count=1
function_name	similaire ||| get	count=1
function_name	la file ||| queue	count=2
function_name	un timestamp unix ||| variant date to timestamp	count=1
function_name	configure la méthode d'entrelacement ||| image interlace scheme	count=1
function_name	vide ||| flush	count=1
function_name	crée une nouvelle instance ||| create document fragment	count=1
arg_pair	sert à modifier la ||| int $pos	count=1
arg_pair	et retourne la portion ||| bool $before_needle	count=1
function_name	objet ||| object	count=6
arg_pair	est similaire à la ||| resource $result	count=2
function_name	sources ||| import	count=1
function_name	que ||| set	count=1
function_name	compare ||| compare image	count=1
function_name	de style xsl ||| register phpfunctions	count=1
arg_pair	un ||| resource $handle	count=2
function_name	commence une ||| pdf begin	count=1
arg_pair	une chaîne ||| string $value string $type	count=1
function_name	un script ||| script	count=1
function_name	leurs droits associés ||| odbc columnprivileges	count=1
arg_pair	correspondant à l'hôte host ||| string $host	count=1
arg_pair	la première contient ||| mongodb $db	count=1
function	chdb contenant [arg_pair_2] ||| [function_name_1] create string $pathname [arg_pair_2]	count=4
namespace	filesystemiterator configuré ||| filesystemiterator	count=1
arg_pair	le prompt ||| callable $callback	count=1
namespace	fonction définie par ||| function	count=2
function_name	dictionnaire représenté par l'identifiant ||| closedict	count=1
arg_pair	les paramètres font et ||| float $fontsize	count=1
function_name	similaire à ||| field type	count=2
function_name	db2 initialisée avec db2_connect() ||| db2	count=1
function	[function_name_1] le réseau ||| [arg_pair_2] [function_name_1]	count=1
function_name	ibase pour récupérer des ||| ibase	count=1
function_name	définit le gestionnaire d'exceptions ||| set	count=1
function_name	jeu de résultats et ||| db2	count=1
namespace	de données retourne ||| mongocursor	count=1
arg_pair	dans la ||| resource $pdfdoc int $image	count=1
arg_pair	de contenu avec des ||| string $blockname int $contents	count=1
function_name	des messages [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	le dernier identifiant autogénéré ||| last insert	count=1
namespace	dans ||| sphinxclient	count=1
function_name	chaîne à guillemets string ||| imap qprint	count=1
function_name	représenté ||| crack	count=1
namespace	charge pour ce travail ||| gearmanjob	count=1
function_name	avec ||| element by	count=1
function_name	nombre ||| dbase	count=1
function_name	parcourt un ||| size	count=1
function_name	champ ||| ingres field	count=2
function_name	un bloc de ||| delete	count=1
arg_pair	pattern puis ||| string $pattern	count=1
function_name	des informations issus des ||| info read	count=1
function_name	s'interrompt ||| eio	count=1
arg_pair	colonnes et de lignes ||| int $columns int $rows	count=1
function_name	de l'anglet ||| miter limit	count=1
function_name	levée du texte ||| text rise	count=2
function_name	la transaction ||| transaction	count=1
function_name	l'identifiant de connexion spécifié ||| mysql	count=1
namespace	à détruire ||| function	count=1
function_name	ouvre le [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de fichiers distant ||| ssh2	count=6
function_name	[function_name_1] bases de ||| [function_name_2] [function_name_1]	count=6
namespace	position courant interne ||| solrdocument	count=1
arg_pair	de la première occurrence ||| mixed $needle	count=1
namespace	le curseur est ||| mongocursorinterface	count=1
function_name	charge la police ||| load	count=1
function_name	[function_name_1] [function_name_2] l'algorithme et ||| [function_name_1] [function_name_2]	count=1
return	fichier ou un ||| string	count=1
arg_pair	l'aide ||| mongodb $db	count=1
function_name	maximale ||| max	count=7
arg_pair	convertit la chaîne str ||| string $str	count=1
function_name	la temporisation de ||| ob end clean	count=1
function_name	une ressource de socket ||| socket	count=1
function_name	absolu canonisé ||| realpath	count=1
function_name	de l'extension stomp ||| stomp	count=1
arg_pair	dessine une ||| resource $p	count=1
function_name	depuis le système ||| eio unlink	count=1
arg_pair	centrée sur les ||| int $cy int $width	count=1
arg_pair	invoquées avant de vérifier ||| int $max_interval	count=1
function_name	utilisé pour croitre ||| increase factor	count=1
arg_pair	un voisin immédiat ||| mixed $bordercolor int $x	count=1
function_name	liens ||| set border dash	count=2
function_name	s'interrompt ||| max	count=1
function_name	false pour la ||| end	count=1
arg_pair	de la colonne correspondant ||| int $field_offset	count=1
function_name	commande ftp list et ||| ftp rawlist	count=1
namespace	au lieu de stocker ||| memcached	count=1
function_name	la fonction sqlsrv_prepare() ou ||| sqlsrv	count=1
namespace	quickhashintstringhash ||| quickhashintstringhash	count=1
function_name	le tri ||| sort	count=1
function_name	tous les composants ||| newt form	count=1
function_name	nombre d'essais que sybase ||| sybase	count=1
function_name	dernier identifiant autogénéré par ||| db2 last insert id	count=1
arg_pair	excepté le ||| int $second int $month	count=1
arg_pair	sur la ligne tuple ||| resource $relation string $tuple	count=1
function	[function_name_1] le texte ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	fournir à ||| string $contents int $status	count=1
function_name	pour ||| set multi	count=1
function_name	le type du ||| type	count=1
return	données du tampon fourni ||| bool	count=1
function_name	de la bibliothèque openssl ||| openssl	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] commit [function_name_2]	count=3
return	fourni par le paramètre ||| bool	count=1
function_name	fichier exe ou auto-exécutable) ||| exe	count=1
namespace	tant que les ||| function	count=1
function_name	fonction d'activation ||| set activation function output	count=1
function_name	en un timestamp unix ||| variant date to timestamp	count=1
function_name	le nombre de ||| num	count=11
arg_pair	par le chemin path ||| string $path	count=1
arg_pair	requête statement ||| resource $statement	count=1
return	a échoué ||| bool	count=1
function_name	fréquence à ||| frequency	count=1
arg_pair	sur le nombre ||| int $offset	count=1
return	chargement donc cette ||| bool	count=1
function_name	les ||| mailparse	count=2
arg_pair	fils soit terminé, ||| int $status	count=1
namespace	et la ||| mongogridfs	count=1
arg_pair	base de données ||| string $database_name	count=2
return	de la tâche ||| int	count=2
function_name	à l'échelle ||| fann scale	count=4
return	lignes de la ||| int	count=1
namespace	et chargés par ||| function	count=1
function_name	le ||| rmdir	count=1
function_name	serveur cyrus imap ||| cyrus	count=3
function_name	chaque serveur ||| server	count=1
function_name	ferme le dictionnaire ||| crack	count=1
function	d'occurrences de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	indexé ||| int $row_number	count=1
function_name	retourne les données précédemment ||| get	count=1
function_name	le numéro de version ||| set version	count=1
arg_pair	du buffer buf ||| string $buf	count=1
function_name	précédente ||| dbplus prev	count=2
function_name	efface ||| delete by	count=3
arg_pair	hyperlien à la ||| float $urx	count=1
return	parcourt ||| mongocommandcursor	count=1
function_name	détermine ||| is	count=1
function_name	l'endroit où ||| fann	count=1
function_name	extension à utiliser ||| register extension	count=1
arg_pair	et ||| string $fontfile bool $embed	count=1
function_name	utilisée pour modifier les ||| set	count=1
function_name	[function_name_1] ldap ||| [function_name_2] [function_name_1]	count=6
function_name	similaire ||| by id	count=2
function_name	rappel pour ||| callback handler	count=1
arg_pair	donné par address ||| string $address	count=1
arg_pair	nbytes octets ||| int $nbytes	count=1
arg_pair	ligne/hors ||| string $host int $port	count=1
namespace	seed ou avec une ||| function	count=1
function_name	indexé, suivant s'ils ||| set	count=1
arg_pair	[arg_pair_1] fonction radius_config() ||| [arg_pair_1] [arg_pair_2]	count=3
return	et ||| bool	count=3
function_name	par miroir horizontal ||| flop	count=1
function_name	avec un ||| get element by	count=1
arg_pair	paramètres passés sont gmt ||| int $year int $is_dst	count=1
function_name	une image ou ||| image	count=1
arg_pair	texte ||| resource $pdfdoc string $text	count=2
function_name	seule la liste des ||| ps open	count=1
arg_pair	fichier remote_file présent sur ||| string $remote_file int $mode	count=1
function_name	ou une ||| put	count=1
arg_pair	utilisant l'image image ||| resource $image string $filename	count=1
return	ajoutés ||| void	count=1
namespace	de travail coordonnée par ||| function	count=1
return	crée ||| bool	count=2
return	l'objet d'observateur ||| int	count=1
namespace	de tous ||| splfileobject	count=1
arg_pair	résultats listant les procédures ||| string $schema	count=1
function_name	von einer mime kopfzeile ||| iconv mime encode	count=1
namespace	est ||| ev	count=2
arg_pair	la clé key sous ||| mixed $key	count=1
namespace	alphabétiques ||| function	count=1
arg_pair	paramètre variable_name dans ce ||| resource $introspection string $variable_name	count=1
function_name	le champ spécifié par ||| field	count=1
function_name	nombre de ||| cubrid num	count=1
function_name	le curseur sur l'attribut ||| attribute	count=1
return	hormis le ||| int	count=2
function_name	les ||| eio	count=1
namespace	le script php d'un ||| samconnection	count=1
function_name	content mime d'un fichier ||| mime content	count=1
function_name	la retourne sous la ||| get	count=1
return	recursivetreeiterator::valid() ||| void	count=1
arg_pair	des parties de ||| string $blob_id	count=1
function_name	jeu de résultats ||| db2 procedure	count=1
function_name	retourne une ||| get	count=8
function_name	est similaire à ||| field	count=2
arg_pair	être invoquées avant ||| int $max_interval	count=1
function_name	champs lus ||| str getcsv	count=1
function_name	de ||| escape	count=1
function_name	grande taille ||| pg lo seek	count=1
return	en une chaîne contenant ||| string	count=1
function_name	défini l'époque maximale candidate ||| fann set cascade max cand epochs	count=1
arg_pair	et attend qu'elles changent ||| array $write	count=1
function_name	à la forme en ||| form	count=1
function_name	facon numérique ||| array values	count=1
function_name	avec un ||| element	count=1
function_name	à la ||| fbsql	count=1
function_name	analyse une liste ||| parse addresses	count=1
function	chiffrement [arg_pair_2] ||| [function_name_1] mode [arg_pair_2]	count=1
function	[function_name_1] seuil ||| [function_name_1] [arg_pair_2]	count=3
function_name	événement [function_name_2] ||| [function_name_1] [function_name_2]	count=4
return	les métadonnées et la ||| mongodb	count=1
arg_pair	ainsi que les structures ||| int $textflow	count=1
function_name	un des champs utilisés ||| field	count=1
function_name	champs de tri ||| sort fields	count=3
function_name	ressource ||| monitor	count=1
namespace	ou similaire en ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] bytea [arg_pair_2]	count=4
return	le ||| yaf_view_interface	count=1
function_name	patch [function_name_2] ||| [function_name_2] [function_name_1]	count=5
return	place des antislashs devant ||| string	count=1
function_name	avec un identifiant donné ||| get	count=1
function_name	retourne le ||| stream get contents	count=1
return	être appelé ||| void	count=1
function_name	les données du fichier ||| mailparse uudecode	count=1
return	dans le ||| void	count=1
arg_pair	une variable ||| string $key mixed $var	count=1
namespace	fichier ||| pharfileinfo	count=3
arg_pair	fichier fd pour l'intervalle ||| mixed $fd	count=1
return	contrôle sur ||| resource	count=1
arg_pair	le paramètre req_identifier de ||| resource $req_identifier	count=1
function_name	référence précédemment acquise ||| release	count=1
function_name	retourne le nom court ||| id3 get frame short name	count=1
function_name	ldap en [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	grande taille de la ||| lo	count=1
function_name	remet ||| pgsql reset	count=1
function_name	s'interrompt si elle ||| set	count=1
function_name	à la ||| fbsql field type	count=1
arg_pair	le ||| int $first_num	count=1
function_name	du corps pour la ||| body	count=1
function_name	retourne la racine ||| get root	count=1
arg_pair	la catégorie ||| resource $agent string $category	count=1
function_name	fonction déplace le ||| cubrid field seek	count=1
function_name	spécifique d'un [function_name] ||| [function_name] lob	count=3
arg_pair	tampon d'événement ||| eventbase $base	count=1
return	courant [return] flux ||| [return]	count=1
function_name	images ||| images	count=1
arg_pair	fait qu'elle ignore la ||| string $pattern	count=1
function_name	le phar quand ||| phar	count=1
namespace	réponse en retour ||| soapserver	count=1
namespace	classe ||| reflectionclass	count=17
arg_pair	vérifier si l'accès ||| string $user	count=1
function_name	les clés de ||| multi by key	count=1
function_name	attributs ||| attributes index	count=2
namespace	le serveur ||| memcache	count=1
function_name	pointeur de ||| closedir	count=1
function_name	fonction geoip_country_code3_by_name() ||| country code3	count=1
arg_pair	binaire ||| integer $word_size	count=1
function_name	le contenu courant du ||| ob	count=1
arg_pair	cet agent ||| int $port	count=1
function_name	en cours ||| include path	count=1
function_name	distant en suivant ||| ssh2 sftp stat	count=1
function_name	pid du serveur ||| pid	count=1
arg_pair	calendrier julien en date ||| int $juliandaycount bool $hebrew	count=1
namespace	les paramètres passés ||| function	count=1
function_name	une ||| resource	count=1
function_name	remplace les données associées ||| dbase replace record	count=1
arg_pair	le système de fichiers ||| resource $sftp	count=1
function_name	traitement appliqué ||| images	count=1
function_name	base sqlite identifiée par ||| sqlite	count=1
return	à ||| string	count=4
arg_pair	php ou une fonction ||| string $name mixed $step_callback	count=1
function_name	lit une ligne de ||| fetch	count=2
function_name	récupère l'adresse [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	définit ||| gmagick	count=1
function_name	objet snmp ||| snmp2	count=1
arg_pair	de résultat dans un ||| resource $result	count=1
function_name	de champs ||| numfields	count=1
function_name	la présence ||| max dispatch interval	count=1
arg_pair	utilisé avec la fonction ||| resource $radius_handle string $hostname	count=1
function_name	de dernière modification ||| mtime	count=1
function_name	l'objet sous ||| to	count=1
function_name	bleu ||| blue primary	count=1
function_name	syntaxe lint sur ||| lint file	count=1
function_name	antislashs devant ||| escape string	count=1
function_name	[function_name_1] d'une classe ||| [function_name_2] [function_name_1]	count=3
arg_pair	une des fonctions telles ||| string $style	count=1
function_name	supprimée ou non ||| delete	count=1
function_name	[function_name_1] sqlite ou ||| [function_name_2] [function_name_1]	count=6
function_name	minimum de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	annule la transaction courante ||| tx rollback	count=1
return	retourne les ||| array	count=1
function_name	d'un champ à un ||| field	count=1
function_name	connue sur ||| known	count=1
function_name	timer à ||| timer set	count=1
function_name	le ||| gmmktime	count=1
arg_pair	messages du domaine domain ||| string $codeset	count=1
function_name	[function_name] de ||| set [function_name]	count=1
function_name	seront triés ||| set	count=1
function_name	ajoute un [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	[arg_pair_1] pour établir ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	le dessin ||| function	count=1
arg_pair	des valeurs rvg ||| int $bmin int $bmax	count=1
namespace	méthode détermine ||| pharfileinfo	count=1
function_name	placer devant l'élément courant ||| prefix	count=1
function	[function_name_1] target avec ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] qui ||| [function_name_2] [function_name_1]	count=4
function_name	résultats de la prochaine ||| next	count=1
function_name	nombre d'erreurs et ||| session pgsql	count=1
function_name	fichier pdf ||| pdf	count=1
function_name	cache utilisateur ||| wincache ucache	count=3
return	raison pour laquelle ||| string	count=2
return	fonction peut ||| void	count=1
arg_pair	à gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
return	false s'il ne ||| bool	count=1
function_name	défini la taille de ||| set	count=1
function_name	mois month de l'année ||| in month	count=1
return	défini l'endroit ||| void	count=1
function_name	[function_name_1] la refermer ||| [function_name_2] [function_name_1]	count=2
arg_pair	spécifié par son ||| int $field_offset	count=1
function	[function_name_1] [arg_pair_2] la mémoire ||| [function_name_1] [arg_pair_2]	count=3
namespace	à la position courante ||| harupage	count=1
function_name	le nombre ||| field count	count=2
function_name	prépare une page ||| open pdi page	count=1
function_name	la file ||| set max poll	count=1
function_name	avaient été ||| newt	count=1
return	courante de ||| string	count=1
arg_pair	l'aide de deux ||| mongodb $db string $prefix	count=1
function_name	protège un identifiant exemple: ||| escape	count=1
return	var .. ||| int	count=1
function_name	openssl_get_cert_locations() ||| cert locations	count=1
function_name	fonction déplace le curseur ||| cubrid field seek	count=1
arg_pair	que les structures ||| int $textflow	count=1
function_name	[function_name_1] de chiffrement ||| [function_name_2] [function_name_1]	count=3
return	processus courant ||| void	count=1
function_name	lignes par ||| imagesetbrush	count=1
function_name	[function_name_1] l'année d'un ||| [function_name_1] [function_name_2]	count=1
arg_pair	cubrid_lob_send() lit ||| resource $lob_identifier	count=1
function_name	trace de la ||| trace	count=2
function_name	deux ||| construct	count=1
function_name	von einer mime ||| iconv mime	count=1
function_name	la dernière erreur survenue ||| error	count=1
arg_pair	chaîne d'une façon ||| int $start	count=1
function_name	la fonction d'activation ||| fann set activation function output	count=1
function_name	tous les appels ||| loop	count=1
function_name	est similaire à ||| element by	count=1
function_name	si elle ||| max poll time	count=1
arg_pair	une chaîne d'une façon ||| string $str	count=1
function_name	ajoute une balise ||| add element	count=1
function_name	place une simple ligne ||| textline	count=1
function_name	de ||| max poll	count=1
arg_pair	pour une chaîne php ||| string $value string $type	count=1
function_name	en incluant les ||| destroy	count=1
function_name	le facteur quickprop ||| quickprop	count=1
function_name	qu'elle ||| proc close	count=2
function_name	array comme une pile ||| array push	count=1
arg_pair	n'importe quel fichier ||| string $file	count=1
arg_pair	domaine unicode ||| int $options	count=1
function_name	connexion persistante en ||| pconnect	count=1
function	système [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	petit ||| float $rprop_delta_min	count=1
function_name	l'esclave ||| mysqlnd ms query	count=1
function_name	d'événements pour ||| set	count=1
arg_pair	gestionnaire multiple s'il y ||| resource $mh	count=1
arg_pair	cet index ||| mixed $index	count=1
namespace	utilisée pour définir les ||| mongolog	count=1
function_name	retourne le nombre de ||| num fields	count=1
arg_pair	identique ||| int $minute	count=1
namespace	code javascript ||| v8js	count=2
arg_pair	gestionnaire pour des commandes ||| string $achtung_wild string $par1	count=1
arg_pair	message dans ||| resource $reason	count=1
function_name	[function_name_1] requête principale ||| [function_name_1] [function_name_2]	count=1
arg_pair	structures de données ||| int $textflow	count=1
function_name	d'attente s'interrompt ||| set max	count=1
function_name	décrivant la ||| list tables	count=1
function_name	charge le fichier ||| load	count=1
namespace	lorsqu'un ||| gearmanclient	count=1
function_name	l'espace de [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	définit le [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=1
return	document ||| string	count=2
function_name	parcourt un ||| batch size	count=1
function_name	division exacte ||| divexact	count=1
function_name	effectue un test ||| mcrypt module self test	count=1
arg_pair	le fichier remote_file depuis ||| string $remote_file int $mode	count=2
arg_pair	offset et dans la ||| resource $lob_identifier int $offset	count=1
function_name	requête appelée dans le ||| stmt	count=1
function_name	commence ||| begin	count=6
namespace	le serveur le ||| mongocursor	count=1
return	le niveau ||| int	count=1
function	[function_name_1] fichier filename ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	la chaîne str à ||| string $str int $start	count=1
function_name	définit ||| set facet	count=2
function_name	récupère ||| openssl get	count=2
namespace	par php ||| function	count=1
function_name	oracle ||| oci	count=18
return	ligne dans la ||| int	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] long [function_name_2]	count=1
arg_pair	un mot existe ||| resource $dict string $word	count=1
function_name	retourne les informations de ||| stat	count=1
arg_pair	chaîne d'un jeu ||| string $from	count=1
arg_pair	vers un programme ||| string $filename	count=1
arg_pair	pour vérifier si l'accès ||| string $user bool $nodns	count=1
arg_pair	la requête query à ||| string $query resource $link_identifier	count=1
function_name	[function_name_1] le timestamp ||| [function_name_1] [function_name_2]	count=1
function_name	du référentiel ||| svn blame	count=1
return	de l'application précédemment définie ||| string	count=1
function_name	pdf ||| pdf get pdi	count=1
function_name	d'attente s'interrompt si ||| poll	count=1
return	configuration ||| string	count=1
namespace	méthode rrdcreator::__construct() ||| rrdcreator	count=1
arg_pair	contenu dans ||| int $oid	count=1
function_name	à la chaîne ||| db2 escape string	count=1
arg_pair	deux versions de php ||| string $version1 string $version2	count=1
function_name	de ||| set flags	count=2
arg_pair	choisit le fichier ||| int $dictionary_link	count=1
return	cette méthode ||| void	count=3
function_name	cela correspond parfaitement ||| tremove	count=1
function_name	[function_name_1] action qui ||| [function_name_2] [function_name_1]	count=1
function	lie un tableau php [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	paramètres ||| int $hour int $minute	count=1
function_name	dans la rfc2822 ||| adrlist	count=1
arg_pair	la boîte aux lettres ||| resource $imap_stream string $mailbox	count=2
function_name	filtre entier ||| set filter range	count=1
function_name	l' eventbuffer ||| add	count=1
return	tableau contenant toutes ||| array	count=1
function_name	priorité basse en arrière-plan ||| do low	count=1
return	sortie de ||| string	count=1
namespace	peut ||| function	count=1
namespace	ou null si ||| function	count=1
return	méthode ne doit ||| string	count=1
return	retourne le gestionnaire de ||| string	count=1
arg_pair	à strcmp() ||| string $str1 string $str2	count=1
function_name	à ajouter les ||| add vars	count=1
function_name	périphérique physique ||| sync	count=1
function_name	iidentique à la ||| rewind	count=1
arg_pair	l'algorithme spécifié ||| string $lib_dir	count=1
function_name	de départ de la ||| start line	count=1
arg_pair	lors du clic sur ||| resource $psdoc	count=1
function_name	: la ||| construct	count=1
namespace	de champs du document ||| solrdocument	count=2
function_name	de caractères courant ||| iconv set	count=1
function_name	par bbcode_create() ||| bbcode	count=1
function_name	conversion automatique ||| encoding	count=1
function_name	le gestionnaire d'erreurs libxml ||| libxml use internal errors	count=1
arg_pair	paramètres passés sont ||| int $day	count=1
function_name	de caractères pour l'utiliser ||| dbx	count=1
function_name	variables ||| push	count=1
function_name	l'objet de grande taille ||| pg lo	count=1
function_name	verrou d'écriture sur ||| lock	count=1
namespace	ou ||| collectable	count=1
arg_pair	yaf_route_simple récupère les ||| string $controller_name	count=1
arg_pair	structure qui héberge la ||| resource $queue	count=1
function_name	lors de la fin ||| end	count=1
arg_pair	images jpeg et tiff ||| bool $arrays bool $thumbnail	count=1
function_name	notification ||| proxy add notify	count=2
function_name	[function_name_1] maximale ||| [function_name_2] body [function_name_1]	count=1
arg_pair	dans la ||| int $options string $charset	count=1
function_name	l'entier le plus petit ||| trader floor	count=1
arg_pair	la chromacité du point ||| float $x float $y	count=1
function_name	l'attribut auto_increment ||| insert id	count=1
function_name	de déboguage oracle ||| oci internal debug	count=1
arg_pair	se joignent [arg_pair] ||| [arg_pair]	count=1
arg_pair	chaîne str [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	spécifié par [arg_pair] ||| [arg_pair]	count=1
function_name	[function_name_1] pkcs#12 ||| [function_name_1] [function_name_2]	count=2
function_name	charge une image ||| image	count=1
arg_pair	invoquées avant ||| int $max_callbacks	count=1
function_name	récupère la taille ||| get unpacked size	count=1
function_name	tri les champs ||| sort	count=1
function_name	fichier ||| file	count=5
function_name	interbase et ||| ibase	count=1
arg_pair	le shell ||| string $pattern	count=1
function_name	fourni par le paramètre ||| buffer	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] query [function_name_2]	count=13
function_name	par le ||| add buffer	count=1
function_name	jacobi de ||| jacobi	count=1
function_name	plus ||| eio set max poll	count=1
function_name	elle prend ||| eio set	count=1
function_name	fichier spécifié est une ||| is	count=1
function_name	interne ||| get iterator	count=1
function_name	d'exécution de postgresql ||| pg result	count=1
function_name	doit pas ||| construct	count=1
arg_pair	fonction mktime() excepté ||| int $day	count=1
function_name	qui avaient été ajoutés ||| form	count=1
arg_pair	false si une erreur ||| resource $result	count=1
function_name	extrait ||| extract	count=1
function_name	[function_name_1] la classe ||| [function_name_1] declaring [function_name_2]	count=1
function_name	si elle ||| max poll	count=1
arg_pair	de la ||| string $string	count=1
arg_pair	courbe de ||| float $y3	count=1
function_name	retourne ||| get field	count=2
function_name	insère l'entrée décrite ||| insert	count=1
function_name	les paires ||| pspell config repl	count=1
function_name	ldap en envoyant ||| ldap	count=1
function_name	à pclose() hormis le ||| proc close	count=1
namespace	fonction configure ||| function	count=1
function_name	définit la valeur de ||| set	count=2
function_name	suspend la ||| suspend	count=1
function_name	retourne [function_name] logs d'une ||| get normalized query [function_name]	count=1
arg_pair	de l'argument [arg_pair_2] ||| [arg_pair_2] int $pri [arg_pair_1]	count=1
function_name	tests sur l'index ||| array uintersect assoc	count=1
function_name	spécial ||| posix	count=1
function	[function_name_1] une base ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	dans la page courante ||| resource $pdfdoc	count=1
function_name	résultat mnogosearch ||| udm	count=2
function_name	si elle prend plus ||| max poll	count=1
arg_pair	rappel ||| resource $proxy mixed $callback	count=1
arg_pair	une fonction ||| string $name callable $function	count=1
function_name	sous ||| to	count=1
function_name	de sortie puis l'efface ||| get clean	count=1
namespace	si ||| mongocursorinterface	count=1
function_name	un nouvel itérateur à ||| iterator	count=1
arg_pair	le fait qu'elle ||| string $string	count=1
function_name	des valeurs correspondantes ||| into struct	count=1
arg_pair	en tant qu'options ||| string $tag	count=1
function_name	révision spécifique si ||| svn	count=1
function_name	définit la ||| set facet offset	count=1
arg_pair	si ||| bool $nodns	count=1
function_name	fin ||| buffer	count=1
function_name	est une fonction ||| is	count=1
function_name	la connexion ||| commit	count=1
namespace	si ||| function	count=2
function	ajoute une [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	stocker des données ||| metadata	count=1
arg_pair	de queues ||| array $connoptions	count=1
function_name	la date ||| get	count=2
function_name	temporisation de sortie ||| ob	count=1
namespace	d'une valeur vt_date ou ||| function	count=1
namespace	nouveau document xml ||| xmldiff\memory	count=1
arg_pair	place un hyperlien à ||| float $urx	count=2
function_name	la fonction snmp2_walk() est ||| walk	count=1
function_name	fonctions de rappel pour ||| set callback	count=1
function_name	comparer ||| compare	count=1
function_name	cela correspond parfaitement à ||| dbplus tremove	count=1
function_name	un fichier spécial ||| posix	count=1
arg_pair	la dernière occurrence ||| string $haystack	count=2
function_name	messages organisés par ||| imap	count=1
function_name	est similaire ||| by	count=1
return	récupérer les ||| array	count=1
namespace	l'appel ||| samconnection	count=1
arg_pair	lui associe ||| int $cols	count=1
function_name	données personnalisées dans ||| set metadata	count=1
arg_pair	une fonction de rappel ||| mixed $pattern	count=1
arg_pair	event_handler en tant que ||| callable $event_handler	count=1
function_name	les en-têtes http de ||| apache request headers	count=1
function_name	de ||| dbase	count=3
function_name	méthode ||| entry compressionmethod	count=2
function_name	nouvelle [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	un test sur ||| module self test	count=1
function_name	de ||| dbplus	count=1
function_name	base de ||| dbase numfields	count=1
function_name	une police et la ||| load font	count=1
function_name	l'échelle les entrées ||| scale input	count=1
arg_pair	arrête un ||| string $servicename string $machine	count=1
namespace	splfileobject ne ||| splfileobject	count=1
function_name	fond ||| background	count=2
function_name	xml ||| xml set element handler	count=2
return	la valeur du ||| float	count=1
return	du serveur ||| int	count=1
function_name	connexion à une base ||| connect uri	count=1
function_name	d'un [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	qu'elle fonctionne avec ||| function	count=1
function_name	la configuration du cookie ||| cookie params	count=1
function_name	du flou [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	une requête pour l'exécution ||| string $query	count=1
function_name	lit le message d'erreur ||| get error message	count=1
namespace	constructeur ||| xmldiff\base	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] unpacked [function_name_2]	count=1
arg_pair	exception oauthexception ||| string $oauthexception	count=1
arg_pair	descripteur fd à la ||| mixed $fd	count=1
namespace	les lectures ||| mongo	count=1
function_name	sein ||| is	count=1
function_name	compression utilisée sur le ||| zip entry compressionmethod	count=1
function_name	utilisée pour convertir une ||| convert to	count=1
arg_pair	en ||| bool $hebrew	count=1
function_name	ou curseur oracle statement ||| oci	count=1
namespace	[namespace] et retourne ||| [namespace]	count=1
function_name	la recherche sur ||| eregi	count=1
function_name	affectées ||| affected	count=1
function_name	réponse ||| simple command handle response	count=1
function_name	action qui ||| action	count=1
return	configuration include_path pour ||| string	count=1
arg_pair	par l'argument offset ||| resource $lob_identifier int $offset	count=1
namespace	est entrée moins le ||| ev	count=1
function_name	en un timestamp unix ||| date to timestamp	count=1
function_name	l'erreur survenue lors ||| error	count=1
function_name	récupère [function_name_2] ||| [function_name_1] socket [function_name_2]	count=2
function_name	pour un dictionnaire à ||| enchant broker set	count=1
arg_pair	statut du fichier dans ||| string $path	count=1
return	l'itérateur à ||| void	count=2
function_name	configure l'orientation ||| image orientation	count=1
function_name	des ||| escape	count=1
function_name	crée un nouvel objet ||| construct	count=3
function	ligne depuis [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	rendu ||| rendering intent	count=1
arg_pair	basé sur les ||| string $src string $diff	count=1
function_name	informations de différence ||| diff	count=2
return	le style ||| int	count=1
namespace	la casse des ||| function	count=1
return	de ||| bool	count=12
return	en utilisant trois ||| bool	count=2
function_name	modifié ||| modify	count=1
function_name	si ||| eio set	count=1
function_name	correspondant au nom ||| by name	count=1
namespace	la ||| solrparams	count=1
namespace	deux collections : la ||| mongogridfs	count=1
function_name	une instance glo ||| cubrid load from glo	count=1
return	fichiers ||| mongodb	count=2
arg_pair	utilisée pour établir l'environnement ||| string $dbname string $userid	count=1
function_name	version échappée de la ||| cubrid real escape	count=1
function_name	représentant la version du ||| info	count=1
arg_pair	deux versions de ||| string $version2	count=1
function_name	restaure la ||| restore	count=2
return	données ||| int	count=1
arg_pair	le gestionnaire font retourné ||| int $font	count=1
function_name	code d'erreur ||| strerror	count=1
function_name	va protéger tous ||| mysql escape	count=1
function_name	court d'un ||| short	count=1
namespace	les messages de ||| oauth	count=1
function_name	filtre entier à ||| set filter	count=2
function	succès ou [arg_pair_2] ||| [function_name_1] field len [arg_pair_2]	count=2
function	la définition [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	l'instance haruencoder ||| encoder	count=1
function_name	par le paramètre ||| buffer	count=1
arg_pair	mktime() excepté le fait ||| int $second	count=1
function_name	fréquence à partir de ||| min doc frequency	count=1
function_name	affectées par ||| cubrid affected	count=1
function_name	schéma d'entrelacement de l'image ||| get image interlace scheme	count=1
function_name	chaque requête ||| query	count=1
arg_pair	une fonction à l'exécution ||| string $class string $function	count=2
function_name	[function_name_1] classe déclarante ||| [function_name_1] [function_name_2]	count=1
arg_pair	envoi un message ||| string $message int $message_type	count=1
function_name	pour une exécution ||| prepare	count=1
arg_pair	structures de données associées ||| int $textflow	count=1
function_name	fonctionne avec les processus ||| close	count=1
function_name	le contenu ||| ob	count=1
arg_pair	le séparateur delimiter ||| string $delimiter string $string	count=1
function_name	ssl ||| ssl filter	count=1
arg_pair	database ||| string $database	count=1
function_name	les requêtes s'exécutent ||| loop	count=1
arg_pair	entraîne une ||| array $weights	count=1
function_name	contrôle de [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	selon un [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	sur le serveur ||| mongocursor	count=1
arg_pair	stockée dans un ||| resource $pxdoc int $value	count=1
function_name	dernier identifiant autogénéré par ||| last	count=1
arg_pair	et bleu d'une ||| int $b	count=1
function_name	le fait ||| close	count=1
function_name	attribut avec comme ||| set attribute	count=1
function_name	parser ||| parser free	count=2
function_name	de fréquence [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	[function_name_1] mime ||| [function_name_2] [function_name_1]	count=6
namespace	partir ||| sdo_das_xml	count=1
function_name	données blob/clob depuis la ||| lob export	count=1
function_name	la température ||| temperature	count=1
function_name	[function_name_1] clob fourni ||| [function_name_2] [function_name_1]	count=4
function_name	de types or selon ||| variant or	count=1
function_name	première fois) ||| end iteration	count=1
function_name	définir le délai maximal ||| set query timeout	count=1
arg_pair	cubrid_bind() est utilisée ||| string $bind_value_type	count=1
function_name	l'enregistrement [function_name] ||| dbase get [function_name] with	count=1
namespace	sur le document ||| xmldiff\file	count=1
return	elle ||| void	count=1
function_name	des ||| newt	count=1
function_name	zéro) de ||| position	count=1
function_name	l'image spécifiée ||| preview	count=1
arg_pair	paramètre filename sous ||| string $filename	count=1
function_name	configuration include_path pour la ||| include path	count=1
function_name	9 ||| preview	count=1
function_name	l'étape d'erreur sarprop ||| set sarprop step error	count=2
function_name	genre ||| genre	count=2
function_name	à la ||| get element by	count=1
function_name	image le nombre de ||| image	count=1
arg_pair	efface le dossier directory ||| resource $ftp_stream string $directory	count=1
arg_pair	data [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	[function_name] l'utilisateur ||| [function_name] highlight regex max	count=3
arg_pair	autre format ||| int $compression	count=1
arg_pair	collections ||| string $prefix	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] type [arg_pair_2]	count=5
function_name	contenant la version ||| version	count=1
namespace	cette méthode est ||| soapclient	count=1
arg_pair	parser ||| resource $parser	count=6
function_name	prochain élément n'existe ||| next	count=1
function_name	retire les objets ||| remove all	count=2
function_name	d'un [function_name] ||| [function_name] lob	count=3
arg_pair	fonction cubrid_lob2_bind() est utilisée ||| mixed $bind_value	count=1
arg_pair	par son identifiant packet_id ||| mixed $var_name	count=1
function_name	un guid ||| mssql guid	count=1
function_name	un identifiant ||| id	count=1
function_name	de compression utilisée sur ||| compressionmethod	count=1
return	de l' eventbuffer courant ||| bool	count=1
function_name	l'extérieur ||| runkit import	count=2
function_name	sur la ||| getlock	count=1
namespace	spécifie ou ||| function	count=1
function_name	élément avec un ||| element	count=1
arg_pair	de la première occurrence ||| string $haystack	count=4
namespace	définir les modules à ||| mongolog	count=1
arg_pair	recherche sur les caractères ||| string $pattern	count=1
function_name	à de nouvelles coordonnées ||| ps moveto	count=1
function_name	retourne [function_name] ||| token [function_name]	count=1
function_name	colonnes ||| dbase	count=1
function_name	ajoute un nouvel attribut ||| set attribute	count=1
function_name	tangente pour ||| tan	count=1
arg_pair	le résultat à destfp ||| resource $sourcefp resource $destfp	count=1
function_name	calcule le cosinue ||| trader cos	count=1
arg_pair	cette fonction est identique ||| string $pattern	count=1
namespace	la file d'attente ||| function	count=1
function_name	fraction de modification ||| change fraction	count=1
return	lors ||| void	count=1
function_name	serveur ftp et le ||| ftp	count=1
function_name	en incluant ||| newt form destroy	count=1
function_name	en-têtes de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	le serveur ||| gearmanjob	count=1
arg_pair	image [arg_pair] ||| [arg_pair]	count=3
function_name	configure les ||| color set	count=1
function_name	début si le prochain ||| next	count=1
function	crypte [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	types ||| column types	count=2
function_name	utilise spanscorer pour ||| set	count=1
arg_pair	clé passées ||| string $data string $method	count=1
function_name	récupère ||| cubrid lob get	count=2
arg_pair	format ||| int $width	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] word [function_name_1]	count=8
arg_pair	la chaîne str après ||| string $str string $from	count=1
return	l'objet sous la forme ||| string	count=1
function_name	pour ||| imagesetbrush	count=1
function_name	du champ donné par ||| field	count=1
function_name	événement de signal ||| signal event	count=1
namespace	noeuds ||| spldoublylinkedlist	count=1
function_name	champ à ||| fbsql field	count=1
namespace	sérialisée du hash dans ||| quickhashinthash	count=1
function_name	de visualisation ||| view	count=1
function_name	d'échelle de sortie pour ||| set output	count=1
function_name	plus ||| eio	count=1
namespace	crée un ||| imagick	count=1
return	réception d'un des signaux ||| int	count=1
namespace	libère un verrou acquis ||| eventbuffer	count=1
arg_pair	var ||| array $array	count=1
return	l'image spécifiée avec un ||| bool	count=1
function_name	session curl à utiliser ||| curl init	count=1
arg_pair	le résultat dans un ||| string $dest int $flags	count=1
arg_pair	remplacer le domaine ||| string $domain	count=2
function_name	pour lier ||| cubrid bind	count=1
function_name	fond de forte priorité ||| task high background	count=1
arg_pair	un ||| string $key	count=1
namespace	de fois ||| ev	count=2
function_name	l'uri de ||| set base uri	count=1
function_name	einer mime kopfzeile ||| mime encode	count=1
function_name	fichiers encodés qui ||| uudecode all	count=1
return	tâche ||| int	count=2
function_name	ou ibase_pconnect() ||| ibase drop	count=1
function_name	[function_name_1] retaille ||| [function_name_2] [function_name_1]	count=2
function_name	fonction de rappel à ||| callback	count=2
function_name	clair ||| auth	count=1
function_name	termine la souscription à ||| imap unsubscribe	count=1
return	les opérations de ||| array	count=1
function_name	le nombre de ||| db2 num	count=1
function_name	racine pour toutes ||| set	count=1
function_name	tous les paramètres de ||| to string	count=1
function_name	[function_name] cairoimagesuface ||| [function_name]	count=1
namespace	du jeu de caractères ||| gmagickdraw	count=1
arg_pair	vérifier si l'accès au ||| string $user	count=1
function_name	d'images de ||| set	count=1
function_name	une pile et ||| push	count=1
function_name	fourni et extrait ||| all	count=1
return	fonctionne avec ||| int	count=1
arg_pair	distante ||| int $maxlen	count=1
namespace	considère array ||| function	count=1
function_name	connue sur le ||| known	count=1
function_name	la durée du ||| include	count=1
return	en sautant tous les ||| bool	count=1
arg_pair	mse pour ces données ||| resource $ann resource $data	count=1
function_name	de haystack allant ||| strstr	count=1
function_name	place des antislashs ||| string	count=1
function_name	[function_name_1] l'intervalle pour ||| [function_name_2] [function_name_1]	count=1
function_name	la durée du script ||| include	count=1
function_name	similaire à la ||| by	count=1
function_name	les ||| escape string	count=2
arg_pair	attribut dans un ||| string $index array $attributes	count=1
rest	argument au [function_2] ||| [return_1] [function_2]	count=1
arg_pair	packet_id ||| mixed $var_name	count=1
function_name	du fichier fourni ||| mailparse uudecode all	count=1
function_name	la chaîne de ||| escape	count=1
function_name	racine [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	similaire à la ||| mysql field type	count=1
function_name	pdf d'entrée ||| pdf get	count=1
function_name	de ||| event buffer set	count=1
function_name	du document fdf courant ||| fdf	count=1
arg_pair	défini le changement ||| resource $ann float $sarprop_step_error_shift	count=1
function_name	liste de serveurs de ||| servers	count=1
function_name	[function_name_1] terme ||| [function_name_1] [function_name_2]	count=1
function_name	la teinte d'une image ||| modulate image	count=1
function_name	scan request ||| yaz scan	count=1
function_name	à la fonction ||| mysql field	count=1
arg_pair	moifie un ||| bool $mva	count=1
arg_pair	de fichier ||| string $filename int $flags	count=1
arg_pair	d'un ||| resource $stmt	count=1
function_name	toutes les lignes de ||| dbplus	count=1
function_name	définir l'identifiant ||| id	count=1
function_name	si la file ||| msg queue	count=1
namespace	l'image spécifiée avec un ||| imagick	count=1
function_name	d'un blob ibase ||| ibase blob	count=2
function_name	service ||| gupnp service introspection	count=1
namespace	identique à ||| directory	count=1
function_name	analyse le certificat x509 ||| openssl x509 parse	count=1
function_name	les ||| fann set error log	count=2
function_name	avec ||| id	count=1
return	archive phar ||| bool	count=1
function_name	[function_name_1] attributs ||| [function_name_2] [function_name_1]	count=2
function_name	texte à ||| text	count=1
arg_pair	dans ||| resource $result int $field_offset	count=1
arg_pair	depuis une chaîne ||| string $str	count=1
function_name	fonction cubrid_error_msg() est utilisée ||| msg	count=1
function_name	lignes de la ||| dbplus	count=1
function_name	la file d'attente s'interrompt ||| set max poll	count=1
namespace	lors de ||| recursivetreeiterator	count=1
function_name	la méthode d'entrelacement ||| set image interlace scheme	count=1
namespace	un bloc de ||| function	count=1
function_name	[function_name_1] lui est ||| [function_name_2] [function_name_1]	count=6
function_name	trouvent ||| uudecode all	count=2
namespace	fois par ||| collectable	count=1
function_name	dans le [function_name] poll ||| get [function_name]	count=1
function_name	survenue) depuis ||| facility	count=1
arg_pair	fixe de couleurs ||| bool $dither	count=1
function_name	décide si ||| mysqlnd qc set	count=1
arg_pair	ch ||| int $opt	count=1
arg_pair	à sybase_fetch_array() ||| mixed $object	count=1
arg_pair	les ||| resource $fd array $options	count=1
namespace	par défaut si une ||| function	count=1
function_name	[function_name] l'enregistrement ||| dbase [function_name] record with	count=1
function_name	dictionnaire ||| enchant broker set	count=1
function_name	méthode récupère ||| get	count=3
arg_pair	le fait qu'elle ignore ||| string $string	count=1
function_name	tri du ||| sort field	count=1
function_name	[function_name_1] serveurs connus ||| [function_name_2] [function_name_1]	count=6
return	la date de sortie ||| string	count=1
arg_pair	forme d'un ||| int $x int $y	count=1
return	tableau d'éléments ||| array	count=1
arg_pair	[arg_pair_1] bcc ||| [arg_pair_1] [arg_pair_2]	count=3
arg_pair	le changement ||| float $sarprop_step_error_shift	count=1
function_name	la fonction geoip_country_code3_by_name() retourne ||| geoip country code3 by	count=1
function	[function_name_1] temporairement ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	alpha ||| float $alpha	count=1
arg_pair	de dessin à un ||| resource $p float $g	count=1
function_name	attribut dans ||| update	count=1
function_name	limite inférieure dans le ||| terms include lower bound	count=1
arg_pair	de domaine unicode ||| int $options	count=1
function_name	le contenu courant du ||| get	count=1
arg_pair	fonction cubrid_lob2_bind() est ||| mixed $bind_value	count=1
function	[function_name_1] occurrence de ||| [arg_pair_2] [function_name_1]	count=1
namespace	get post ou par ||| function	count=1
function_name	de ||| buffer	count=1
function_name	récupère l'url ||| url	count=1
function_name	connexion persistante ||| cubrid pconnect	count=1
arg_pair	tente de créer ||| resource $link_identifier	count=1
function	[function_name_1] colonne indiquée ||| [arg_pair_2] [function_name_1]	count=2
function_name	de différence à implémenter ||| diff	count=1
function_name	met à l'échelle ||| fann scale	count=4
function_name	la ||| fbsql field type	count=2
function_name	caractères lors de la ||| eregi	count=1
arg_pair	pour vérifier si ||| string $user	count=1
function_name	code ||| code	count=6
function_name	memcached::append() mais la ||| append	count=1
arg_pair	ligne de la largeur ||| float $width	count=1
function_name	les caractères invisibles ||| trim	count=1
return	interroge l'url du référentiel ||| array	count=1
function_name	données du ||| add	count=1
namespace	similaire ||| domdocument	count=1
arg_pair	memcached::set() ||| mixed $value int $expiration	count=1
function_name	dictionnaire représenté par l'identifiant ||| crack	count=1
namespace	de ||| splfileinfo	count=3
namespace	le nombre de ||| function	count=1
function_name	de l'étape d'erreur sarprop ||| set sarprop step error	count=2
function_name	[function_name_1] résultat ||| [function_name_1] [function_name_2]	count=7
function_name	un ||| add data source	count=1
function_name	méthode retourne l'itérateur interne ||| get inner iterator	count=1
function_name	lorsque l'objet a terminé ||| set	count=1
function_name	lorsqu'il est accessible sous ||| unset	count=1
function_name	indexé numériquement ||| row	count=1
function_name	accéder à ||| nl langinfo	count=1
function_name	fichier ||| set metadata	count=4
function_name	récupère les informations ||| info get	count=6
function_name	supprime d'une [function_name] tous ||| strip [function_name]	count=1
function_name	libère un descripteur ||| free	count=1
function_name	caractères uri ||| uri	count=1
function	[function_name_1] cert ||| [arg_pair_2] [function_name_1]	count=5
function_name	clonable ||| cloneable	count=1
arg_pair	le [arg_pair] ||| [arg_pair]	count=3
function_name	route [function_name] ||| add [function_name]	count=1
namespace	retourne le nombre de ||| gmagickpixel	count=1
namespace	de stocker une seule ||| memcached	count=1
namespace	en place le ||| function	count=1
function_name	dernière erreur ||| get last error	count=1
return	l'intérieur [return] spécifiant ||| [return]	count=1
function_name	numéro d'erreur ||| error	count=1
function_name	passée en argument ||| db2 escape	count=1
arg_pair	contenu des fichiers ||| string $prefix	count=1
arg_pair	empile ||| array $array mixed $value1	count=1
function_name	mémoires utilisées par la ||| form	count=1
function	[function_name_1] champ ||| [arg_pair_2] [function_name_1]	count=2
namespace	par ||| function	count=82
function_name	méthode de compression utilisée ||| compressionmethod	count=1
function_name	[function_name_1] fichier pdf ||| [function_name_2] [function_name_1]	count=2
return	définie avec la méthode ||| string	count=1
namespace	pointeur de ||| function	count=1
function_name	ligne courant ||| current line	count=2
function_name	libère les ||| form	count=1
function_name	retourne l'identifiant de la ||| id	count=1
function_name	obsolète ||| call	count=1
namespace	et tous les composants ||| function	count=1
function_name	désactive la temporisation ||| ob end clean	count=1
function_name	client ||| client	count=2
function_name	un test sur ||| test	count=1
arg_pair	une fonction ||| string $name	count=2
function_name	elle prend plus de ||| time	count=1
namespace	la fonction mktime() ||| function	count=1
function_name	contenant la [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	souscrit ||| subscribe	count=1
arg_pair	filename ||| string $filename	count=4
function_name	retourne ||| enchant dict get	count=1
function_name	une autre fonction utilisateur) ||| restore error handler	count=1
function_name	des antislashs devant les ||| db2 escape string	count=1
function_name	à ||| destroy	count=1
function	schéma de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	l'application ||| string	count=1
return	la corrélation entre les ||| void	count=1
function_name	conteneur de chargement ||| set default stub	count=1
arg_pair	php event_handler en tant ||| callable $event_handler string $event_name1	count=1
namespace	la date de ||| gmagick	count=1
return	cette méthode est ||| array	count=1
namespace	tar cette ||| phardata	count=1
function_name	rappel timestamp handler qui ||| timestamp	count=1
namespace	une capture de la ||| function	count=1
namespace	utilisée ||| function	count=1
function_name	depuis une instance glo ||| from glo	count=1
function_name	d'entité externe ||| external entity ref	count=1
function_name	document pdf d'entrée ||| pdf get pdi	count=1
namespace	valeur vt_date ou similaire ||| function	count=1
namespace	existant ||| yaf_response_abstract	count=1
arg_pair	fils soit terminé, ou ||| int $status int $options	count=1
return	un nom ||| resource	count=1
function_name	champs colonnes de ||| dbase numfields	count=1
function_name	en argument ||| escape	count=1
function_name	forme ||| newt form destroy	count=4
function	[function_name_1] pour event ||| [function_name_1] [arg_pair_2]	count=4
namespace	gestionnaire d'exceptions par ||| function	count=1
function_name	la session courante ||| dict is in session	count=1
function_name	chaîne de caractères passée ||| db2 escape	count=1
function	[function_name_1] lot d'opérations ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	incrémente une ||| string $server_key string $key	count=1
arg_pair	clé key sur un ||| mixed $value	count=1
function_name	dessin ||| imagesetbrush	count=1
arg_pair	tracage ||| string $module_name	count=1
function_name	de filtres de ||| filter queries	count=1
function_name	par le paramètre ||| add buffer	count=1
namespace	envoie ||| soapserver	count=1
return	caractères passée ||| string	count=1
arg_pair	du clic sur celui-ci ||| resource $psdoc	count=1
function_name	modifie le jeu de ||| set encoding	count=1
function_name	appelé une fois par ||| set	count=1
function_name	en priorité basse et ||| low	count=1
function_name	recherche une police ||| font	count=1
arg_pair	le fichier filename dans ||| bool $use_include_path	count=1
function_name	en argument ||| string	count=1
function_name	serveur racine ||| root device	count=1
function	sera démarré [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	patch ||| patch	count=3
namespace	caractère par sa majuscule ||| function	count=1
arg_pair	assemble 2 images à ||| gmagick $source int $compose	count=1
function	bytecode [arg_pair_2] ||| [function_name_1] class [arg_pair_2]	count=1
return	ev::run() est entrée ||| int	count=1
namespace	l'expression rationnelle utilisée ||| solrquery	count=1
function_name	l'encodage du client ||| pg set client encoding	count=1
function_name	restaure la configuration ||| reset config	count=1
function_name	[function_name_1] l'espace de ||| [function_name_2] [function_name_1]	count=1
function_name	la dernière opération nis ||| yp errno	count=1
function_name	envoie ||| handle	count=1
arg_pair	une pile et ||| array $array	count=1
arg_pair	le nombre de jours ||| int $day int $year	count=1
function_name	la méthode subscribe ||| subscribe	count=1
function_name	style de jointure ||| line join	count=1
function_name	cosinus hyperbolique ||| cosh	count=1
function_name	les statistiques ||| stats	count=1
function_name	calcule l'arc sinus ||| trader asin	count=1
function_name	nombre de lignes ||| rows	count=2
arg_pair	le fait que les ||| int $month	count=1
return	le curseur ||| bool	count=1
arg_pair	le tableau assoc_array dans ||| array $assoc_array int $options	count=1
function_name	mysql courante ou ||| mysql	count=2
return	processus ||| void	count=1
function_name	syntaxe du ||| syntax	count=1
arg_pair	identique à la fonction ||| int $day	count=1
arg_pair	nécessaire à la plupart ||| string $connection_string string $character_set	count=1
arg_pair	que les paramètres passés ||| int $second	count=1
arg_pair	memcached::set() hormis le fait ||| int $expiration	count=1
function_name	de pagination taille de ||| paged result	count=1
return	sortie de la ||| string	count=1
arg_pair	efface le ||| resource $ftp_stream	count=1
function_name	se trouve la colonne ||| field	count=1
function_name	divise ||| div	count=1
function_name	si elle prend ||| poll time	count=1
return	serveur ||| string	count=1
namespace	à searchd ||| sphinxclient	count=1
namespace	à détruire un bloc ||| function	count=1
function_name	les paramètres ||| to	count=1
function_name	insère ||| pg insert	count=2
function_name	sélectionne ||| fbsql db	count=1
function_name	caractères brutes des termes ||| return raw	count=1
arg_pair	rename() ||| string $path_from string $path_to	count=1
return	algorithme ||| void	count=1
function_name	utilisateurs connectés ||| userlist	count=1
function_name	configuration ||| include path	count=2
arg_pair	identique ||| int $hour int $minute	count=1
function_name	la taille décompressée ||| zip entry filesize	count=1
function_name	est utilisée pour convertir ||| convert to data	count=1
return	doit être ||| void	count=2
function_name	[function_name_1] arguments d'une ||| [function_name_2] [function_name_1]	count=1
namespace	données ||| function	count=2
function_name	[function_name_1] les drapeaux ||| [function_name_1] [function_name_2]	count=1
function_name	d'erreur lisible pour ||| string	count=1
function_name	traitement appliqué ||| preview images	count=1
arg_pair	set ||| array $set	count=1
arg_pair	carte map ||| string $map	count=1
arg_pair	le nom de spotname ||| string $spotname	count=1
function	du champ [arg_pair_2] ||| [function_name_1] name [arg_pair_2]	count=3
function_name	les lignes de la ||| rzap	count=1
function_name	d'entité externe ||| set external entity ref	count=1
function_name	l'uri de base utilisé ||| base uri	count=1
return	active ||| bool	count=4
function_name	la couleur de ||| set background color	count=1
function_name	d'une chaîne de caractères ||| load	count=1
return	une variable ||| bool	count=1
function_name	[function_name_1] bibliothèque openssl ||| [function_name_2] [function_name_1]	count=2
function_name	spécifiant ||| getfont	count=1
function_name	les données ||| mailparse uudecode	count=1
arg_pair	un document ||| array $values	count=1
arg_pair	des caractères lors de ||| string $string	count=1
function_name	testant les ||| runkit	count=1
arg_pair	hormis le fait qu'elle ||| string $pattern string $string	count=1
namespace	utile uniquement avec ||| mongoclient	count=1
namespace	du texte lors ||| gmagickdraw	count=1
arg_pair	si une erreur ||| resource $result int $field_offset	count=1
namespace	brosse courante ||| function	count=1
namespace	à cette méthode est ||| soapclient	count=1
function_name	qui ||| mailparse	count=1
namespace	lors de la fin ||| recursivetreeiterator	count=1
function_name	la date ||| date	count=1
arg_pair	dans le système ||| int $mode	count=1
function_name	au serveur frontbase ||| fbsql	count=1
rest	sur [function_2] ||| [return_1] [function_2]	count=3
return	[return] délinéarisation ||| [return]	count=3
namespace	à appeler lorsqu'un agent ||| gearmanclient	count=1
function_name	et ||| uudecode all	count=2
function_name	types de colonnes du ||| column types	count=1
function_name	date de dernière modification ||| get mtime	count=1
namespace	par défaut si ||| function	count=1
function_name	résultat de la ||| result	count=1
function_name	jokers ||| tokens	count=1
return	en argument ||| string	count=1
arg_pair	pour ||| string $column_key int $flags	count=1
function_name	[function_name_1] pg_execute() ||| [function_name_2] [function_name_1]	count=4
return	réponses dans ||| bool	count=1
function_name	de l'itération lorsque la ||| end iteration	count=1
namespace	qui avaient été ajoutés ||| function	count=1
namespace	caractères lors ||| function	count=1
function_name	s'y ||| uudecode	count=1
function_name	d'écriture sur un ||| writeunlock	count=1
arg_pair	forme d'un nouvel ||| int $y	count=1
function_name	dom et ||| import dom	count=1
arg_pair	mppe [arg_pair] ||| [arg_pair]	count=1
function_name	utilisée pour ||| set resource	count=1
function_name	les paramètres de ||| string	count=1
function_name	maximale ||| algo	count=1
return	une chaîne avec ||| string	count=1
function_name	file d'attente contient encore ||| valid	count=1
function_name	des tests sur l'index ||| uintersect assoc	count=1
function_name	true si ||| module is	count=1
namespace	libère les ressources mémoires ||| function	count=1
function_name	utilisée pour insérer un ||| cubrid set	count=1
function_name	[function_name] opcode ||| [function_name] ocache	count=3
arg_pair	les données data ||| string $data	count=2
function_name	tous les ||| mailparse uudecode	count=1
function_name	[function_name] du stockage ||| [function_name]	count=1
return	la position ||| void	count=1
function_name	erreur de ||| error	count=1
function_name	fournisseurs enchant ||| enchant broker	count=1
function_name	sauvegarde le résultat ||| save	count=1
function_name	format d'une image dans ||| image format	count=1
arg_pair	et la ||| resource $conn_identifier	count=1
function_name	de couleur de ||| color	count=1
function_name	buffer que la connexion ||| buffer	count=1
function_name	efface les lignes de ||| delete	count=1
arg_pair	des caractères lors de ||| string $pattern string $string	count=1
function_name	erreurs ||| error	count=1
arg_pair	pour les données data ||| string $data	count=1
function_name	l'objet parent en xml ||| xml	count=1
namespace	xslt ||| xsltprocessor	count=1
function_name	la file d'attente s'interrompt ||| set max poll time	count=1
function_name	un filtre d'un ||| filter remove	count=1
function_name	connexion au serveur frontbase ||| fbsql	count=1
function_name	[function_name_1] le type ||| [function_name_1] socket [function_name_2]	count=1
function_name	qui ne ||| metadata	count=1
arg_pair	avec ||| resource $image	count=4
function_name	identifiant de session curl ||| curl	count=1
function_name	lit les données de ||| read	count=2
function_name	connexion au [function_name_2] ||| function resource [function_name_2] new [function_name_1]	count=1
function_name	ferme [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	dimensions contenant ||| string geometry	count=1
function_name	à une image ||| image	count=1
function_name	lit les itérations ||| iterations	count=1
function_name	la portée de ||| lookup	count=1
function_name	serveur à contacter ||| radius config	count=1
function_name	de documents supérieures à ||| dead	count=1
function_name	sous la forme ||| string	count=1
function	[function_name_1] l'évènement bevent ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	un ||| mixed $callback	count=2
function_name	le ||| compressionmethod	count=1
arg_pair	de résultats result ||| resource $result int $index	count=1
function_name	la base de ||| db	count=1
function_name	un test sur un ||| fann test	count=1
arg_pair	multiple ||| resource $mh	count=1
arg_pair	tableau rows dans ||| array $rows string $delimiter	count=1
function_name	détruire un bloc de ||| shmop delete	count=1
arg_pair	fonction à l'exécution ||| string $class string $function	count=2
namespace	récupère les informations de ||| function	count=1
arg_pair	d'extraits de texte pour ||| string $field_override	count=1
function_name	lit les droits d'un ||| get perms	count=1
function_name	des données blob/clob ||| cubrid lob send	count=1
function_name	la distance ||| pixel similar	count=1
function_name	pour ||| cubrid	count=1
namespace	assigne ||| arrayaccess	count=1
namespace	mb par documents ||| mongocursor	count=1
function_name	[function_name_1] libère la ||| [function_name_2] [function_name_1]	count=1
arg_pair	l'encodage pour ||| string $encoding	count=1
function	équivalence de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	du ||| int	count=11
arg_pair	à ||| mongodb $db string $prefix	count=1
arg_pair	de lecture ||| resource $result int $lob_mode	count=1
function_name	base [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] connect [arg_pair_2]	count=3
function_name	d'un document dom et ||| import dom	count=1
function_name	vecteur d'entrée avant de ||| input	count=1
arg_pair	système de fichiers local ||| string $local_file	count=1
function_name	[function_name_1] noms ||| [function_name_2] [function_name_1]	count=4
function_name	intialise le ||| start color	count=1
arg_pair	si l'accès ||| string $user	count=1
return	cette méthode vérifie si ||| bool	count=1
function_name	la forme en ||| newt form destroy	count=1
arg_pair	excepté le ||| int $day	count=1
arg_pair	le chemin path ||| string $path int $offset	count=1
function_name	autre fonction utilisateur) ||| restore error handler	count=1
function_name	le déchargement ||| mcrypt generic deinit	count=2
function_name	retourne un [function_name] ||| [function_name] column	count=2
function_name	file d'attente ||| poll time	count=1
arg_pair	la gamme des ||| float $white_point	count=1
function_name	[function_name] en mode ||| [function_name]	count=3
function_name	inode du ||| get inode	count=1
function_name	route via son ||| route	count=1
arg_pair	à la fonction mktime() ||| int $hour int $minute	count=1
namespace	constructeur de base pour ||| xmldiff\base	count=1
function_name	et logique de ||| gmp and	count=1
function_name	remplace ||| replace callback	count=1
function_name	des informations issus des ||| info	count=1
function_name	exécution ultérieure avec ||| prepare	count=1
arg_pair	le gestionnaire font ||| resource $pdfdoc int $font	count=1
function_name	[function_name] retourne radius_vendor_specific ||| [function_name] get vendor	count=1
arg_pair	fonction anonyme ||| string $code	count=1
function_name	d'archives spécifié par ||| zip entry	count=1
function_name	s'interrompt ||| set	count=1
function_name	débogage ||| debug	count=2
return	pour le dernier appel ||| int	count=1
arg_pair	configure la miter limit ||| float $miter	count=1
arg_pair	fait qu'elle ||| string $pattern string $string	count=1
function_name	de champs contenus ||| fields	count=1
namespace	classe spécifiée ||| reflectionclass	count=1
function	définit les mots [function_name_1] [arg_pair_2] le ||| [function_name_1] [arg_pair_2]	count=1
function_name	définit l'image ||| set	count=1
function_name	crée la ||| create	count=1
return	la fonction mktime() excepté ||| int	count=1
arg_pair	fixe de couleurs ||| int $treedepth bool $dither	count=1
namespace	de champs ||| function	count=1
function_name	lier des données blob/clob ||| cubrid lob2 bind	count=1
function_name	retourne la méthode de ||| zip entry	count=1
function_name	efface le ||| ftp	count=1
namespace	ajoutés à la ||| function	count=1
arg_pair	la chaîne str ||| string $delimiter	count=1
arg_pair	l'objet target avec le ||| string $target	count=1
return	noeud ||| void	count=1
arg_pair	hormis le fait ||| string $string	count=1
return	bits d'exécution des ||| void	count=1
function_name	[function_name_1] objet blob ||| [function_name_1] [function_name_2]	count=1
function_name	méthode retourne une url ||| assemble	count=1
function	[function_name_1] prompt et ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	fonction mktime() excepté le ||| int $day	count=1
function_name	retourne la ||| get mlt min	count=1
function_name	court ||| short	count=1
arg_pair	ajoute un message dans ||| resource $compcode	count=1
function_name	des caractères lors de ||| eregi	count=1
return	qui place les chaînes ||| void	count=1
function_name	masque des fonctionalités supportées ||| features	count=1
arg_pair	police de caractères ||| gmagickdraw $draw	count=1
function_name	pour ||| proxy	count=1
function_name	ligne de résultat retournée ||| fbsql fetch	count=1
function_name	affiche le ||| show xy	count=1
function_name	l'étape d'erreur sarprop ||| sarprop step error threshold	count=1
function_name	que ||| eio	count=1
function_name	excepté le ||| gmmktime	count=1
function_name	décrivant la base ||| list tables	count=1
function_name	trace pour chaque requête ||| query trace	count=1
namespace	est utile uniquement avec ||| mongoclient	count=1
function_name	identique à ||| gmmktime	count=1
function_name	qu'elle fonctionne avec les ||| proc close	count=1
function_name	de syntaxe lint sur ||| lint file	count=1
return	[return] non ||| [return]	count=2
arg_pair	un document xml depuis ||| string $filename	count=1
function_name	la fréquence en deçà ||| frequency	count=1
function_name	précédent de valeurs ||| prev	count=1
function_name	nouvel attribut ||| attribute	count=1
return	appelé une fois par ||| void	count=1
function_name	envoie une réponse ||| handle	count=1
function_name	[function_name_1] l'uri de ||| [function_name_2] [function_name_1]	count=1
function_name	de réponse ||| response	count=1
function_name	terme à ||| terms upper bound	count=1
function_name	elle ||| set max	count=1
function_name	retourne un booléen ||| get terms return	count=1
function_name	un ||| create from date	count=1
arg_pair	de fichiers ||| string $path int $pri	count=1
arg_pair	une nouvelle ||| string $optlist	count=1
namespace	: finfo_set_flags() ||| finfo	count=1
function_name	utilisée pour lier des ||| bind	count=1
return	de caractères ||| sdo_das_xml_document	count=1
return	sur ||| mongocursor	count=1
function_name	avec un serveur ldap ||| ldap	count=1
function_name	fréquence minimale ||| min default frequency	count=1
function_name	[function_name_1] la taille ||| [function_name_1] algo block [function_name_2]	count=1
return	courant ||| void	count=1
namespace	version ||| gmagick	count=1
arg_pair	gestionnaire de queues ||| string $qmanagername array $connoptions	count=1
arg_pair	la boîte aux lettres ||| string $mailbox	count=2
function_name	de ||| type	count=1
arg_pair	fonction mktime() ||| int $day int $year	count=1
function_name	ligne précédente ||| dbplus prev	count=1
function_name	l'espace ||| colorspace	count=2
function_name	version du client en ||| client version	count=1
return	travaux ||| string	count=1
function_name	tampon d'événement ssl ||| ssl filter	count=1
return	retourne un tableau de ||| array	count=4
function_name	afin qu'elle tienne dans ||| fit	count=1
function_name	base de données sqlite ||| sqlite factory	count=1
arg_pair	d'un jeu ||| resource $stmt	count=1
arg_pair	un attribut dans un ||| string $index array $attributes	count=1
function_name	au champ spécifié par ||| field flags	count=1
namespace	cours pointée par ||| function	count=1
namespace	ou datetime pour ||| function	count=1
function_name	dossier dans la ||| mkdir	count=1
arg_pair	mélange la ||| mixed $colorize mixed $opacity	count=1
function_name	long d'un champs ||| frame long	count=1
function_name	similaire à ||| id	count=1
arg_pair	sur les paramètres précédemment ||| resource $ann	count=1
function	[function_name_1] une base ||| [arg_pair_2] [function_name_1]	count=1
return	dans un fichier qui ||| void	count=1
return	des antislashs ||| string	count=1
function_name	ligne dans [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	elle ||| eio set max poll	count=1
return	dans lequel l'erreur ||| int	count=1
function_name	données paradox ||| px numfields	count=1
function_name	true solr placera ||| echo handler	count=1
function_name	pagination ldap en envoyant ||| ldap	count=1
function_name	[function_name_1] brute du ||| [function_name_2] [function_name_1]	count=4
arg_pair	excepté le fait ||| int $day	count=1
namespace	[namespace] a été ||| [namespace]	count=1
function_name	entités html de la ||| html entity decode	count=1
namespace	au sein ||| pharfileinfo	count=1
function_name	considère array comme ||| array push	count=1
function_name	afin qu'elle tienne dans ||| fit r	count=1
function_name	requête soap appelle les ||| handle	count=1
namespace	est similaire à ||| function	count=3
arg_pair	paramètre str dans le ||| string $str int $length	count=1
function_name	base de données ||| factory	count=1
function_name	connexion avec la ||| connect	count=1
namespace	détruire un bloc de ||| function	count=1
function_name	la temporisation de ||| ob	count=1
namespace	vérifie si ||| splfixedarray	count=1
return	libère un verrou acquis ||| bool	count=1
arg_pair	commande de ||| array $options	count=1
arg_pair	paramètres passés sont ||| int $month	count=1
function_name	l'extension du ||| extension	count=1
function_name	est identique à preg_replace() ||| preg filter	count=1
arg_pair	fonction php ou une ||| string $name	count=1
function_name	un document xml ||| xml	count=1
function_name	requête z39.50 scan ||| scan	count=1
function_name	à l'esclave ||| mysqlnd ms query	count=1
arg_pair	fonction snmp2_get() est utilisée ||| string $community	count=1
function_name	ajoute une [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] d'activation candidate ||| [function_name_2] [function_name_1]	count=2
function_name	l'espace de [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	arc ||| arc	count=1
namespace	les appels distants rpc ||| yar_concurrent_client	count=1
function	mode de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	cubrid_bind() est utilisée ||| mixed $bind_value	count=1
namespace	de ||| gearmanjob	count=2
function_name	du fichier fourni et ||| mailparse uudecode	count=1
return	supprime toutes les ||| int	count=1
function_name	le nombre de ||| num fields	count=1
function_name	la fonction geoip_org_by_name() ||| org	count=1
arg_pair	un programme qui ||| float $ury	count=1
function_name	lignes [function_name_2] ||| [function_name_2] [function_name_1]	count=14
arg_pair	l'algorithme et [arg_pair] ||| [arg_pair]	count=3
function_name	la base de données ||| numfields	count=1
arg_pair	fonction snmp2_get() est ||| string $host string $community	count=1
function_name	appelé lorsque l'on termine ||| end	count=1
function_name	terme à partir duquel ||| terms upper bound	count=1
function_name	utilisées par ||| newt	count=1
function_name	file d'attente s'interrompt ||| set max poll time	count=1
arg_pair	deux collections : ||| mongodb $db	count=1
function_name	de complétion ||| readline completion function	count=1
function	[function_name_1] d'un entier ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	position ||| resource $psdoc	count=1
return	données en ||| bool	count=1
function_name	libère les ||| buffer free	count=1
function_name	bibliothèque ucd de l'option ||| quick print	count=1
function_name	gestionnaire à ||| handler	count=2
arg_pair	spécifie un préfixe utilisé ||| string $prefix	count=1
function_name	plus de ||| eio	count=1
arg_pair	plusieurs paires clé-valeur ||| mixed $keys	count=1
function_name	liste des ||| fbsql list	count=1
function_name	renomme ||| rename	count=1
return	données du tampon ||| bool	count=1
function	[function_name_1] résultat dans ||| [arg_pair_2] [function_name_1]	count=3
return	en attente d'être ||| bool	count=1
function_name	personnalisées ||| set	count=1
arg_pair	une ||| resource $large_object	count=1
namespace	lecture ||| pharfileinfo	count=1
namespace	[namespace] à ||| [namespace]	count=3
function_name	pkcs#12 fourni ||| pkcs12	count=1
function_name	le mois month de ||| days in month	count=1
namespace	le ||| gearmanclient	count=1
arg_pair	l'encodage pour les ||| string $encoding	count=1
function_name	compression ||| zip entry	count=1
arg_pair	différences et ||| string $src	count=1
namespace	valeurs ||| arrayobject	count=1
function_name	fichier exe ||| write exe footer	count=1
namespace	le serveur de ||| gearmanjob	count=1
function_name	tronque le fichier régulier ||| truncate	count=1
function_name	[function_name_1] statut ||| [function_name_1] server [function_name_2]	count=1
function_name	toutes les données du ||| add buffer	count=1
function_name	[function_name_1] blocs ||| [function_name_2] [function_name_1]	count=2
function_name	été ajoutés à la ||| form destroy	count=1
function_name	utilisées par la forme ||| form destroy	count=1
function_name	document html contenu ||| load htmlfile	count=1
function_name	utilisée que pour ||| metadata	count=1
arg_pair	jambage du texte ||| string $text	count=1
function_name	[function_name_1] fort ||| [function_name_2] [function_name_1]	count=6
arg_pair	timestamp ||| int $format	count=1
function_name	antislashs devant les caractères ||| db2 escape string	count=1
function_name	du thread de ||| mysqli thread	count=1
arg_pair	prépare ||| resource $link_identifier	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] load [function_name_1]	count=2
function_name	retourne le nombre ||| count	count=1
function_name	représentation textuelle de ||| to	count=1
function_name	[function_name_1] police de ||| [function_name_2] [function_name_1]	count=1
function_name	la ligne suivante de ||| dbplus next	count=1
function_name	dossier d'archives ||| entry	count=1
arg_pair	fichier fd pour l'intervalle ||| int $mode	count=1
function_name	image sans ||| ping image	count=1
function_name	ligne du jeu de ||| db2 fetch assoc	count=1
arg_pair	la fonction cubrid_lob2_bind() est ||| mixed $bind_value	count=1
arg_pair	résultat result sur le ||| resource $result	count=1
function_name	long ||| long	count=1
arg_pair	à la fonction memcache::connect() ||| int $port	count=1
function_name	durée du script ||| path	count=1
arg_pair	fonction de rappel callback ||| callable $callback mixed $parameter	count=1
return	mb par documents ||| bool	count=1
function_name	nouveau périphérique racine ||| gupnp root device new	count=1
return	fonction closedir() seul le ||| void	count=1
arg_pair	fusionne la source à ||| bool $overwrite	count=1
function_name	un ||| shmop	count=1
namespace	récupère l'instance yaf_application ||| yaf_application	count=1
function_name	à ||| element by	count=1
function_name	avec ||| preview images	count=2
function_name	si le ||| is	count=1
namespace	var .. ||| function	count=1
arg_pair	condamnations ||| string $repository_url	count=1
function_name	d'entrainement ||| train	count=1
arg_pair	paramètres ||| int $second	count=1
arg_pair	l'élément par value ||| string $key int $value	count=1
return	si plusieurs ||| bool	count=1
function_name	pour la ||| set include path	count=1
function_name	convertit les entités html ||| html entity	count=1
arg_pair	et initialise ces paramètres ||| int $to_neuron	count=1
namespace	récupère le ||| gmagick	count=2
namespace	ferme le dictionnaire ||| function	count=1
function_name	calcule le md5 de ||| md5	count=1
arg_pair	de la signature ||| string $plaintext	count=1
function_name	la fonction cubrid_lob2_size64() est ||| cubrid lob2 size64	count=1
function_name	syntaxe lint sur ||| lint	count=1
namespace	que fonctions xslt dans ||| xsltprocessor	count=1
arg_pair	la ||| int $color	count=1
function_name	libère un résultat mnogosearch ||| udm free	count=1
namespace	un lot ||| mongocommandcursor	count=1
function_name	colonne [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	surveiller ||| void	count=1
arg_pair	la connexion spécifiée ||| resource $connection	count=1
function_name	similaire à la fonction ||| element by id	count=1
function_name	fichiers ainsi ||| chmod	count=1
function	haystack allant [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	la fonction cubrid_set_add() ||| string $attr_name string $set_element	count=1
namespace	bzip2 représenté par ||| function	count=1
function_name	base filepro ||| filepro rowcount	count=1
function_name	caractères alphabétiques en majuscules ||| strtoupper	count=1
return	sur l'exécution ||| resource	count=1
return	la méthode ||| bool	count=1
function_name	le sinus de chaque ||| trader sin	count=1
function_name	à ||| add function	count=1
arg_pair	de résultat uodbc ||| mixed $field	count=1
function_name	nombre de champs ||| sybase num fields	count=3
function_name	[function_name] d'exécution ||| [function_name]	count=3
namespace	la taille du tampon ||| eventbuffer	count=1
function_name	de faible priorité à ||| low	count=1
function_name	test ||| module self test	count=2
namespace	ou plusieurs attributs qui ||| function	count=1
function_name	la taille du vi ||| iv size	count=1
function_name	champ field ||| oci field	count=1
arg_pair	de vérité suivante ||| mixed $left mixed $right	count=1
function_name	id3v1 ||| id3v1	count=1
function_name	de résultat [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	passés ||| int $day	count=1
namespace	cherche dans le tampon ||| eventbuffer	count=1
function_name	de texte ||| set text	count=1
function_name	définit [function_name_2] ||| [function_name_2] [function_name_1]	count=27
namespace	version courante de ||| gmagick	count=1
function_name	retourne le nom ||| name	count=7
arg_pair	d'un ||| resource $conn_identifier	count=1
function_name	de message d'erreur ||| error	count=1
namespace	lit le contenu courant ||| function	count=1
return	d'observateur ||| int	count=1
function_name	lisible ||| readable	count=1
function_name	racine de ||| root	count=1
function_name	l'attribut dans l'espace de ||| attribute ns	count=1
namespace	rewinddir() seul le ||| directory	count=1
function_name	spécifié ||| entry	count=1
namespace	identique à evchild::__construct() mais ||| evchild	count=1
return	en cours sur ||| bool	count=4
function_name	backends supportés par ||| supported backends	count=2
function_name	connexion spécifié ||| mysql	count=1
function_name	récupère ||| current	count=1
arg_pair	pour l'activation de ||| int $condition_type	count=1
function_name	verrou deadlocks ||| deadlock retry count	count=1
return	fourni par le ||| bool	count=1
namespace	sortie de ||| gmagick	count=1
function_name	file ||| time	count=1
function_name	tous les objets ||| all	count=1
return	déplace toutes les données ||| bool	count=1
function_name	attribut ||| attribute ns	count=4
function_name	une exclusion logique sur ||| xor	count=1
function_name	baud du port série ||| dio tcsetattr	count=1
function_name	forme en incluant les ||| newt form destroy	count=1
arg_pair	exécute la commande command ||| string $command array $output	count=1
function_name	pays correspondant au nom ||| by name	count=1
function_name	crypte ||| blenc encrypt	count=2
namespace	la propriété ||| reflectionproperty	count=6
function_name	tableau ||| fetch array	count=1
function_name	génération d'une requête ||| query	count=1
namespace	les ||| mongocommandcursor	count=1
function_name	exécute le lot ||| execute	count=1
return	des valeurs en ||| bool	count=1
function_name	nombre de champs ||| dbase	count=1
arg_pair	l' oid fourni ||| resource $conn_identifier string $oid	count=1
function_name	de statut de ||| status	count=1
function_name	définit ||| gupnp service action set	count=1
return	un lot ||| mongocommandcursor	count=1
function_name	[function_name_1] taille de ||| [function_name_2] [function_name_1]	count=3
function_name	crée une ||| create document	count=1
function_name	est une instance ||| is	count=1
function_name	l'endroit où ||| fann set error	count=1
function_name	une instance inotify ou ||| inotify	count=1
function_name	classe [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	défini l'endroit où ||| error log	count=1
arg_pair	à un index ||| int $index	count=1
function_name	configuration du cookie ||| cookie	count=1
arg_pair	la largeur de ligne ||| float $width	count=1
function_name	du ||| include	count=1
arg_pair	analyse subject ||| mixed $subject	count=1
function_name	compare chaque ||| layers	count=1
function_name	noms ||| field names	count=1
arg_pair	attend qu'elles changent de ||| array $read	count=1
function_name	qui ||| destroy	count=2
function_name	les algorithmes ||| algorithms	count=1
namespace	fichier mpeg ||| ktaglib_mpeg_audioproperties	count=4
arg_pair	texte à la ||| resource $psdoc	count=1
arg_pair	texte avec des données ||| string $text	count=1
arg_pair	paramètres passés sont ||| int $second int $month	count=1
arg_pair	résultat dans un fichier ||| string $dest	count=1
namespace	toutes les données du ||| eventbuffer	count=1
arg_pair	une base de données ||| string $servername	count=1
function_name	d'activation dans la couche ||| set activation	count=1
arg_pair	le séparateur delimiter ||| string $string	count=1
function_name	forme en ||| newt form	count=1
arg_pair	cubrid_lob2_bind() est utilisée ||| mixed $bind_value	count=1
function_name	connecte ||| closepath stroke	count=1
function_name	le numéro de colonne ||| column	count=1
return	nouvelle ||| object	count=1
arg_pair	dans la chaîne donnée ||| string $source int $flags	count=1
arg_pair	x509cert et retourne les ||| mixed $x509cert	count=1
function_name	équivalence de ||| variant eqv	count=1
namespace	forme ||| solrparams	count=1
function_name	la forme et ||| newt	count=1
function_name	le facteur quickprop mu ||| fann set quickprop mu	count=1
function_name	de la prochaine ligne ||| next line	count=1
function_name	php en utilisant une ||| php	count=1
arg_pair	data avec le ||| resource $connection string $data	count=1
arg_pair	le fait ||| int $hour int $minute	count=1
function_name	d'attente ||| poll	count=1
arg_pair	image ||| string $filename	count=1
namespace	les paramètres ||| solrparams	count=1
function_name	ne peuvent ||| metadata	count=1
function_name	synchrone et définit ||| action set	count=1
function_name	[function_name] algorithm ||| [function_name] module get supported	count=3
function_name	récupère le type d'octets ||| get byte type	count=1
namespace	des ||| xmldiff\file	count=1
function_name	la file d'attente ||| eio set	count=1
function_name	[function_name_1] script ||| [function_name_1] [function_name_2]	count=2
namespace	détruit l'objet judy ||| judy	count=1
arg_pair	text à ||| resource $p string $text	count=1
function_name	appeler lorsque l'on quitte ||| decl	count=1
function_name	à la chaîne de ||| escape string	count=1
namespace	descripteur numérique ||| eventutil	count=1
function_name	si la méthode est ||| is	count=1
arg_pair	un espace ||| string $namespaceuri string $qualifiedname	count=1
return	à partir d'une chaîne ||| sdo_das_xml_document	count=1
function_name	est similaire à la ||| mysql field type	count=1
function_name	xml donnée ||| load	count=1
function_name	charge une image pour ||| ps open image file	count=1
function_name	première contient les métadonnées ||| construct	count=1
function_name	libère toutes ||| base free	count=1
function_name	sont sur des ||| form destroy	count=1
function_name	temporaire tous les fichiers ||| uudecode all	count=1
function	méthode ajoute [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
namespace	par le serveur de ||| gearmanjob	count=1
function_name	clés ||| key	count=1
arg_pair	point ||| float $x float $y	count=2
function_name	brute ||| get raw	count=1
function_name	depuis ||| from callback	count=2
arg_pair	stocke le résultat dans ||| int $padding	count=1
function	affiche [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	[function_name] l'api du ||| api [function_name]	count=3
function_name	priorité basse et retourne ||| low	count=1
function_name	de champs colonnes de ||| dbase numfields	count=1
function_name	[function_name_1] interbase et ||| [function_name_2] [function_name_1]	count=2
function_name	de données référencée ||| header	count=1
namespace	callable utilisée par l'option ||| function	count=4
function_name	d'un attribut ||| attribute	count=1
function_name	qui s'y trouvent ||| uudecode	count=1
function	premier [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	hauteur de l'image image ||| imagesy	count=1
function_name	un ||| batch size	count=4
return	définie avec ||| string	count=1
namespace	la file ||| function	count=1
arg_pair	entre le fichier old_file ||| string $old_file	count=1
function_name	déplace le ||| seek	count=4
return	en l'augmentant au ||| bool	count=1
arg_pair	à l'aide ||| mongodb $db	count=1
function_name	va protéger tous ||| mysql escape string	count=1
function_name	de connexion passées avec ||| connect	count=1
function_name	libère les [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	éteint la temporisation de ||| ob end	count=1
namespace	dernier sqlstate ou ||| function	count=1
return	à pclose() hormis le ||| int	count=1
function_name	de l'itérateur courant interne ||| iterator	count=1
function_name	récupère les en-têtes ||| headers	count=1
namespace	de mettre à ||| quickhashintstringhash	count=1
function_name	queue ||| mqseries	count=1
function_name	les tailles ||| enc get supported key sizes	count=1
arg_pair	le fichier filename ||| string $filename	count=1
arg_pair	en référence numérique ||| string $encoding bool $is_hex	count=1
namespace	toute les commandes de ||| imagick	count=1
function_name	longueur maximale d'une ||| max	count=1
function_name	[function_name_1] du corps ||| [function_name_1] [function_name_2]	count=2
arg_pair	utilisé avec ||| resource $radius_handle string $hostname	count=1
function_name	récupère [function_name_2] ||| [function_name_1] image channel [function_name_2]	count=4
namespace	dictionnaire représenté par l'identifiant ||| function	count=1
return	classes de ||| string	count=1
function_name	une ||| fx image	count=1
function_name	[function_name] gearmantask ||| [function_name]	count=2
function_name	repère la ||| mb strpos	count=2
function_name	[function_name_1] hauteur ||| [function_name_2] [function_name_1]	count=1
function_name	le type d'octets dans ||| byte type	count=1
function_name	la ||| entry compressionmethod	count=2
namespace	simplexmliterator a des sous-éléments ||| simplexmliterator	count=1
arg_pair	fait ||| int $day int $year	count=1
arg_pair	peut créer ||| int $size	count=1
function_name	identifiant ||| get element	count=1
function_name	à jour ||| px update	count=1
return	est similaire à pclose() ||| int	count=1
namespace	vérifie ||| splpriorityqueue	count=1
function_name	[function_name_1] taille de ||| [function_name_1] [function_name_2]	count=2
arg_pair	à ann ||| array $input_vector	count=1
return	moins le nombre de ||| int	count=1
return	contrôle sur l'exécution ||| resource	count=1
function_name	plus proche de ||| imagecolorclosest	count=1
return	des boîtes ||| array	count=1
arg_pair	à ||| resource $psdoc	count=1
return	totalité ||| resource	count=1
arg_pair	à une colonne données ||| mixed $param	count=1
function_name	libère toute la ||| mysql free	count=1
namespace	la fonction closedir() seul ||| directory	count=1
function_name	définit des ||| set flags	count=1
function_name	connexion persistante ||| pg pconnect	count=1
rest	un [function_2] ||| [function_2] [return_1]	count=2
function_name	été modifié ||| modify	count=1
function_name	un patch ||| string patch	count=1
function_name	exporte ||| pkey export	count=2
function_name	récupère le nom ||| get name	count=4
arg_pair	le paramètre oid ||| resource $conn_identifier string $oid	count=1
function_name	la fonction cubrid_query() ||| cubrid query	count=1
function_name	liste des mots personnelle ||| to personal	count=1
function_name	et y écrit ||| write	count=1
arg_pair	du texte à ||| resource $psdoc	count=1
return	depuis ||| void	count=1
arg_pair	etend la classe class ||| string $class string $parent	count=1
namespace	nouveau filteriterator qui ||| filteriterator	count=1
function_name	libère toute la mémoire ||| ldap free	count=1
function_name	[function_name_1] code ||| [function_name_2] [function_name_1]	count=4
function_name	comme une pile ||| push	count=1
function_name	utilisées par ||| form destroy	count=1
function_name	une valeur de stride ||| stride	count=1
function_name	tous ||| mailparse uudecode	count=1
arg_pair	la clé /status ||| string $status	count=1
function_name	une ligne [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	de compression utilisée ||| zip entry compressionmethod	count=1
function	[function_name_1] un objet ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	les ||| resource $p int $doc	count=1
function_name	index ||| set index	count=1
namespace	fichier au sein ||| pharfileinfo	count=1
arg_pair	est une méthode avancée ||| string $key mixed $value	count=1
function_name	de l' ||| add buffer	count=1
function_name	fonctions de rappel ||| set callback	count=1
return	tableau de ressources ||| array	count=1
function_name	existante suivant si ||| cat	count=1
function_name	popen() ||| pclose	count=1
arg_pair	pile et empile ||| mixed $value1	count=1
function	champs [arg_pair_2] ||| [function_name_1] resource $result [arg_pair_2]	count=2
arg_pair	connexion mysql_connection ||| mixed $mysql_connection	count=1
function_name	dictionnaire représenté par ||| crack	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] body [function_name_1]	count=1
function_name	initialiser le phar ||| map phar	count=1
function_name	soap appelle ||| handle	count=1
namespace	[namespace] pour ||| [namespace]	count=3
function_name	l'orientation ||| set image orientation	count=2
return	si elle ne s'y ||| bool	count=1
function_name	trace de ||| trace as	count=1
function_name	cette fonction libère ||| destroy	count=1
arg_pair	sur un socket un ||| mixed $socket	count=1
function_name	du tampon de ||| get	count=1
arg_pair	recherche sur les ||| string $pattern	count=1
namespace	la ||| limititerator	count=1
function_name	de jointure de ||| line join	count=1
arg_pair	structure qui héberge la ||| array $data	count=1
function_name	d'occurrences de la ||| substr	count=1
function_name	tronque à la ||| ftruncate	count=1
arg_pair	qu'elle ignore la ||| string $pattern	count=1
namespace	soap appelle ||| soapserver	count=1
function_name	un marqueur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	délai maximal d'attente ||| timeout	count=1
function_name	libère un résultat ||| free res	count=1
arg_pair	une chaîne d'une ||| int $start	count=1
namespace	que ceux de ||| pharfileinfo	count=1
function_name	pcntl_sigwaitinfo() suspend son exécution ||| sigwaitinfo	count=1
arg_pair	fonction cubrid_bind() est ||| string $bind_value_type	count=1
function_name	surveiller avec ||| set module	count=1
function_name	noms des méthodes ||| methods	count=1
function_name	gestionnaire à [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	données ||| set	count=1
arg_pair	coordonnées x y ||| float $x float $y	count=1
function_name	crée une action ||| create action	count=1
return	passée ||| string	count=1
function_name	caractères ||| db2 escape	count=2
function_name	bibliothèque cliente ||| client	count=1
function_name	timestamp unix ||| to timestamp	count=1
function_name	la ligne courante depuis ||| fetch row	count=1
function_name	chdb contenant ||| chdb	count=1
arg_pair	fournir à ob_start() ||| int $status	count=1
function_name	informations sur la version ||| version	count=1
function_name	données du fichier fourni ||| all	count=1
arg_pair	requête sql query à ||| string $query	count=1
function_name	similaire [function_name] ||| [function_name]	count=3
function_name	retournant ||| query	count=1
arg_pair	de needle dans la ||| string $haystack string $needle	count=1
function_name	graphique ||| pdf	count=1
function_name	[function_name_1] nombre maximal ||| [function_name_1] [function_name_2]	count=1
arg_pair	de alpha ||| float $alpha	count=1
arg_pair	une requête ||| resource $grp resource $req	count=1
function_name	d'attente s'interrompt si ||| time	count=1
function_name	de transactions xa ||| ms xa	count=1
function_name	[function_name] le ||| sqlsrv send stream [function_name]	count=1
namespace	de caractères passée ||| function	count=1
namespace	les bits d'exécution des ||| pharfileinfo	count=1
function	[function_name_1] une variable ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	chemin pathname ||| string $pathname	count=1
arg_pair	paramètre str à la ||| string $str	count=1
arg_pair	ses voisins immédiats ||| mixed $bordercolor int $x	count=2
function_name	fonction crée ||| create cdatasection	count=1
arg_pair	si une erreur survient ||| resource $result int $field_offset	count=1
arg_pair	la fonction à fournir ||| int $status	count=1
arg_pair	le tableau associatif assoc_array ||| array $assoc_array int $options	count=1
function_name	le tag image en ||| picture	count=1
arg_pair	assemble 2 images ||| gmagick $source int $compose	count=1
function_name	statistiques des [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	et retourne la portion ||| bool $part string $encoding	count=1
namespace	le point courant ||| harupage	count=1
namespace	contenant du ||| gmagick	count=1
return	sur la ||| int	count=1
arg_pair	[arg_pair_1] valeur ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	spécifié par ||| int $field_offset	count=1
arg_pair	chaîne unescaped_string en ||| string $unescaped_string	count=1
function_name	récupère [function_name_2] ||| [function_name_1] current font [function_name_2]	count=3
arg_pair	req_identifier de ||| resource $req_identifier	count=1
function_name	les transactions ||| commit	count=1
function_name	composants qui sont ||| newt	count=1
function_name	[function_name_1] ms sql ||| [function_name_2] [function_name_1]	count=2
function_name	entwerfen von einer mime ||| mime	count=1
function_name	[function_name_1] module ||| function resource [function_name_1] [function_name_2]	count=1
function_name	la couleur courante ||| gray	count=1
function_name	de ||| entry	count=1
function_name	de dessins précédentes ||| render	count=1
function_name	ligne ressemblent ||| setlinecap	count=1
arg_pair	ignore la casse ||| string $pattern	count=1
function_name	au niveau de gris ||| pdf setgray	count=1
function_name	supprime ||| delete	count=1
function_name	version courante de graphicsmagick ||| getreleasedate	count=1
function_name	clé soundex ||| soundex	count=1
return	et les valeurs ||| void	count=1
namespace	fin de l' eventbuffer ||| eventbuffer	count=1
function_name	données du fichier ||| all	count=1
arg_pair	chemin path ||| int $offset	count=1
function_name	ainsi que ||| chmod	count=1
function_name	ligne de départ ||| start line	count=1
function_name	recursivetreeiterator::valid() ||| end	count=1
function_name	minimale du ||| facet enum cache min default	count=1
function_name	toutes les ||| rzap	count=1
arg_pair	ascii pem ||| string $passphrase array $configargs	count=1
function_name	la durée du ||| set	count=1
function_name	version décodée ||| gzdecode	count=1
function_name	forme ||| destroy	count=2
arg_pair	une requête ||| string $query	count=2
namespace	fichiers ||| mongogridfs	count=2
function_name	à l'échelle les données ||| scale train	count=1
function_name	chaque requête [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	retourne les [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	de données du jeu ||| string $classname	count=1
function_name	dans ||| save	count=1
function_name	instance de la ||| sqlsrv fetch object	count=1
function_name	tant que racine pour ||| set	count=1
function_name	les ||| uudecode all	count=4
function_name	liste tous les modes ||| list modes	count=1
function_name	taux ||| rate	count=1
function_name	[function_name_1] de termes ||| [function_name_2] [function_name_1]	count=2
function_name	libère un descripteur alloué ||| free descriptor	count=1
arg_pair	suppression d'un document ||| array $deleteoptions	count=1
arg_pair	d'octets str ce ||| string $str	count=1
return	script en cours ||| string	count=1
arg_pair	pas attrappées ||| string $arg	count=1
function_name	mssql_connect() mais ||| mssql pconnect	count=1
arg_pair	fichier filename ||| bool $use_include_path	count=1
function_name	une [function_name] ||| add [function_name]	count=2
function	[function_name_1] temporairement ||| [function_name_1] [arg_pair_2]	count=1
namespace	contenant ||| gmagick	count=1
arg_pair	mktime() ||| int $second int $month	count=1
function_name	le long des axes ||| shearimage	count=1
namespace	déplace ||| spldoublylinkedlist	count=1
arg_pair	un ||| resource $result int $index	count=1
function_name	message d'erreur lié à ||| ldap error	count=1
arg_pair	rappel à appeler ||| mixed $callback	count=1
arg_pair	un socket un ||| mixed $socket	count=1
return	fonction est similaire ||| domelement	count=1
function_name	d'activation ||| set activation function output	count=2
function_name	de dernière modification du ||| mtime	count=1
function_name	détruire un bloc ||| delete	count=1
return	le contenu des fichiers ||| mongodb	count=1
function_name	utilisée pour définir ||| set module	count=1
function_name	la tâche ||| background	count=2
function	analyse [arg_pair_2] ||| [function_name_1] resolv conf [arg_pair_2]	count=1
return	fin de l' eventbuffer ||| bool	count=1
function	[function_name_1] text à ||| [arg_pair_2] [function_name_1]	count=3
function_name	suspend la page courante ||| pdf suspend page	count=1
rest	[return_1] statut sur ||| [return_1] [function_2]	count=3
function_name	analyseur ||| bbcode set arg parser	count=2
function_name	les itérateurs ||| array iterator	count=1
function_name	trace de la ||| trace as	count=1
arg_pair	le paramètre req_identifier ||| resource $req_identifier	count=1
arg_pair	la table table_name sous ||| resource $connection string $table_name	count=1
function	l'encodage utilisé [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	contient le contenu ||| mongodb $db	count=1
function_name	identifiant ||| element	count=1
function	une ligne [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	flux à ||| stream wrapper	count=1
function_name	les entrées ||| cat	count=1
function_name	mysql ||| mysql get	count=1
function_name	file d'attente s'interrompt si ||| time	count=1
arg_pair	log_killcursor lors ||| array $server array $info	count=1
arg_pair	nbytes octets de ||| int $nbytes	count=1
arg_pair	à strcmp() elle ||| string $str2	count=1
function_name	largeur [function_name_2] ||| [function_name_2] [function_name_1]	count=6
namespace	données du fichier fourni ||| function	count=1
function	noeuds [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	correction gamma à l'image ||| gamma image	count=1
function_name	le gestionnaire d'instructions exécutables ||| processing instruction handler	count=1
function_name	modules ||| set	count=1
function_name	avec un patch ||| patch	count=1
function_name	faible priorité à effectuer ||| low	count=1
return	à 4 mb par ||| bool	count=1
function_name	bytecode et initialise un ||| bcompiler write	count=1
function_name	de connexion persistante en ||| pg pconnect	count=1
arg_pair	depuis le chemin fourni ||| int $start int $length	count=1
return	applique ||| gmagick	count=1
arg_pair	la fonction cubrid_bind() est ||| string $bind_value_type	count=1
function_name	traitement ||| images	count=1
function_name	surveiller ||| module	count=1
function_name	d'espace de noms ||| elements by tag	count=1
function_name	le dictionnaire spécifié ||| crack check	count=1
arg_pair	et la retourne en ||| string $class_name	count=1
function_name	couleur courante de ||| gray fill	count=1
return	déplace vers le ||| void	count=1
return	si cette clé ||| bool	count=1
namespace	l'apparence d'une page ||| harudestination	count=1
return	le ||| string	count=9
arg_pair	terminé, ||| int $status	count=1
function_name	la version du serveur ||| server info	count=1
function_name	récupère le délai ||| context get	count=1
rest	les [function_2] ||| [function_2] [return_1]	count=1
function_name	canal alpha [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	réponse http ||| apache response	count=2
return	suivant les liens ||| array	count=1
function_name	défini la fonction d'activation ||| set activation	count=3
function_name	ligne d'un fichier ||| fgets	count=1
function_name	est ||| is numeric	count=2
function_name	retourne le numéro ||| fann get	count=1
arg_pair	de texte ||| string $text	count=3
namespace	retourne le nombre ||| function	count=1
function_name	[function_name_1] de termes ||| [function_name_1] query [function_name_2]	count=1
function_name	passer des paramètres séparément ||| pg query params	count=1
function_name	modules à surveiller avec ||| module	count=1
function_name	fonction peut être utilisée ||| set	count=1
function_name	représentation binaire de l'entier ||| decbin	count=1
function_name	socket ||| socket	count=12
function_name	suspend [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	l'environnement pour ||| string $passwd bool $new_link	count=1
function_name	objet ainsi que ses ||| object	count=1
arg_pair	d'un élément dans ||| int $index	count=1
function_name	[function_name_1] type objet ||| [function_name_2] [function_name_1]	count=3
return	ferme le dictionnaire représenté ||| bool	count=1
function_name	var ||| array	count=1
function_name	la variable [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	tests ||| uintersect assoc	count=2
arg_pair	accepte un tableau de ||| array $except	count=2
arg_pair	fournir à ||| int $status	count=1
function_name	[function_name_1] du ||| [function_name_1] [function_name_2]	count=1
function_name	élément ||| element by id	count=2
namespace	les lignes ||| function	count=1
arg_pair	chaine ||| int $options	count=1
return	au chemin courant ||| bool	count=4
namespace	d'erreur le [namespace] le ||| [namespace]	count=1
function_name	jusqu'au point de ||| close path	count=1
function_name	fichier temporaire ||| mailparse uudecode	count=1
arg_pair	éléments d'un itérateur dans ||| traversable $iterator	count=1
arg_pair	un ||| int $error_types	count=1
function_name	[function_name] envoie ||| [function_name]	count=2
return	certain ||| mongocursor	count=1
function_name	protocole ||| get proto	count=1
function_name	utilisant la fonction wincache_lock() ||| wincache unlock	count=1
function_name	nombre de colonnes dans ||| ifx num fields	count=1
arg_pair	de la colonne ||| mixed $column	count=2
function_name	la page sous ||| reset image page	count=1
namespace	xslt dans ||| xsltprocessor	count=1
namespace	les ||| arrayobject	count=3
return	encodés qui ||| array	count=1
namespace	stocker une seule ||| memcached	count=1
function_name	de statut spécifié ||| add task status	count=1
arg_pair	buf ||| resource $socket string $buf	count=1
arg_pair	une clé primaire ||| string $owner	count=1
namespace	noeud ||| domnode	count=1
function_name	dans ||| uudecode	count=1
function_name	suivi des communications ||| trace	count=1
namespace	le ||| pharfileinfo	count=1
function_name	data infile [function_name] précédemment ||| [function_name] infile	count=1
function_name	lorsque la ||| end	count=1
function_name	ferme le ||| closedir	count=1
function_name	fonction crée une nouvelle ||| create cdatasection	count=1
function_name	périphérique racine est disponible ||| gupnp root device set available	count=1
arg_pair	recherche sur les caractères ||| string $pattern string $string	count=1
arg_pair	fichier spécial ou ordinaire ||| int $major int $minor	count=1
function_name	l'adresse ip utilisée ||| host ip	count=2
arg_pair	unique distinguished name ||| array $configargs array $extraattribs	count=1
function_name	défini l'époque minimale ||| fann set cascade min	count=1
function_name	syntaxe du ||| php check syntax	count=1
function_name	qui sont ||| newt	count=1
function_name	identifie le flux ftp ||| ftp login	count=1
function_name	arbre ||| load	count=1
arg_pair	une chaîne dans ||| int $bid	count=1
function_name	mémoires utilisées par la ||| newt form destroy	count=1
function_name	dbplus_xlockrel() ||| xunlockrel	count=1
function_name	hauteur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	et envoie une ||| soapserver	count=1
function_name	les ||| rzap	count=1
function_name	méthode de compression utilisée ||| zip	count=1
function_name	attribut ||| update	count=1
function_name	entrées ini ||| inientries	count=1
function_name	du ||| ps	count=2
arg_pair	une nouvelle définition de ||| float $height	count=1
function_name	contenu ||| clear	count=1
function_name	encodés qui s'y ||| mailparse	count=1
function_name	éteint la temporisation de ||| ob	count=1
return	la méthode recursivetreeiterator::valid() ||| void	count=1
function_name	une connexion persistante vers ||| pconnect	count=1
function_name	fin de l' eventbuffer ||| buffer	count=1
function_name	fonction ||| element by id	count=4
function_name	placer devant ||| prefix	count=1
function_name	les ticks-par-seconde ||| ticks per second	count=1
function_name	texte utf-7 modifié ||| imap utf7	count=1
function_name	définir les modules ||| set	count=1
function_name	paquet repéré ||| wddx	count=1
function_name	décrivant la dernière erreur ||| stomp connect error	count=1
arg_pair	enregistrés ||| callable $callback callable $error_callback	count=1
function_name	paire de ||| pair	count=2
function_name	nouveau filtre décimal à ||| filter float	count=1
arg_pair	dessine le ||| int $y	count=1
namespace	retourne la ||| sqlite3	count=1
arg_pair	spécifié par ||| resource $result int $field_offset	count=1
function_name	maximale d'un mot ||| mlt max	count=1
arg_pair	plusieurs ||| mixed $keys	count=1
namespace	où les ||| function	count=1
function_name	ferme le dictionnaire ||| crack closedict	count=1
namespace	l'itérateur ||| apciterator	count=1
namespace	coordonnée par ||| function	count=1
function_name	de type id ||| set id	count=3
function_name	la fonction sqlsrv_prepare() ||| sqlsrv execute	count=1
arg_pair	lit ||| resource $statement	count=1
function_name	un document [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	notoirement lent ||| string $key array $constants	count=1
function_name	tailles de clés ||| mcrypt enc get supported key sizes	count=1
function_name	récupère [function_name_2] ||| [function_name_1] extension [function_name_2]	count=4
function_name	avec un ||| get element	count=1
function_name	taille de ||| set	count=1
function_name	queue [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	de données microsoft ||| array $connectioninfo	count=1
function_name	la [function_name] courante de ||| get [function_name]	count=1
function_name	d'attente s'interrompt ||| time	count=1
function_name	pour l'affichage [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	taille de [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	affectées par la précédente ||| affected	count=1
arg_pair	chaîne ||| string $image	count=1
arg_pair	par son identifiant object_id ||| mixed $object_id mixed $type	count=1
namespace	résultants et ||| mongocommandcursor	count=1
arg_pair	le nombre left_operand à ||| string $left_operand	count=1
arg_pair	nom de domaine unicode ||| int $options	count=1
function_name	rassemble les ||| array merge	count=1
function_name	de chargement ||| set	count=1
function_name	variables définies dans ||| apd	count=1
function_name	valeur de ||| include path	count=1
namespace	yar_client sur un serveur ||| yar_client	count=1
function	[function_name_1] à cert ||| [function_name_1] key [arg_pair_2]	count=1
function_name	pointeur de fichier rpm ||| rpm	count=1
function_name	son référencement ||| garbage	count=1
function_name	dernière requête appelée dans ||| stmt errno	count=1
function_name	si le fichier est ||| is	count=2
function_name	retourne le contenu ||| stream get contents	count=1
function_name	service exposé par le ||| gupnp service	count=1
arg_pair	le tracage ||| string $module_name	count=1
function_name	[function_name_1] la fréquence ||| [function_name_2] [function_name_1]	count=1
function_name	un nouveau pattern ||| pdf begin pattern	count=1
return	les quotas ||| array	count=1
function_name	à la ||| add buffer	count=1
function_name	affiche le [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	bzip2 ||| bzclose	count=1
function_name	équivalence de bits ||| variant eqv	count=1
arg_pair	indexé ou associatif query_data ||| string $numeric_prefix	count=1
function_name	caractères passée en argument ||| db2 escape	count=1
function_name	fonction retourne ||| cubrid get	count=6
arg_pair	récupérer des parties de ||| string $blob_id	count=1
function_name	script en ||| set	count=1
arg_pair	réseau complet dans un ||| resource $ann string $configuration_file	count=1
function_name	de zéro) ||| position	count=1
function	file_get_contents() retourne [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	fonction est ||| get element	count=1
function_name	cette fonction crée une ||| create attribute	count=1
namespace	la position ||| function	count=1
arg_pair	fichier qui contient le ||| int $dictionary_link	count=1
function_name	chaîne est ||| is	count=1
arg_pair	précédente à cet index ||| mixed $index	count=1
arg_pair	relation ||| resource $relation	count=1
function_name	[function_name_1] un tableau ||| [function_name_2] [function_name_1]	count=6
function_name	la demande ||| request	count=1
namespace	octets [namespace] ||| [namespace]	count=2
function_name	dernier accès et de ||| eio futime	count=1
arg_pair	la brosse courante pour ||| resource $image	count=1
function_name	numéro de ||| get	count=1
return	à surveiller avec les ||| void	count=1
function_name	l'échelle du ||| scale	count=1
arg_pair	soit liée [arg_pair] ||| [arg_pair]	count=2
function_name	[function_name_1] [function_name_2] et s'identifie ||| function resource [function_name_2] new [function_name_1]	count=3
return	sortie normalement en d'autres ||| int	count=1
function_name	9 miniatures de l'image ||| images	count=1
arg_pair	une ||| string $filename	count=2
function_name	ou plusieurs ||| function	count=1
namespace	de l'option memcached ||| memcached	count=1
function_name	l'on quitte le ||| decl	count=1
function_name	définit une ||| mysqlnd qc set	count=1
function_name	des lignes ||| imagesetbrush	count=1
function_name	la tâche en cours ||| do background	count=1
function_name	gestionnaire d'événements ||| event handler	count=1
function_name	taille compressée d'un ||| entry compressedsize	count=1
return	de données ||| mixed	count=1
namespace	de l'objet ||| serializable	count=1
function_name	récupère les blob/clob en ||| cubrid lob get	count=1
return	depuis laquelle une ||| string	count=1
function_name	pclose() hormis le ||| close	count=1
arg_pair	fonction utilisateur php event_handler ||| string $event_name1	count=1
function_name	von einer mime kopfzeile ||| mime encode	count=1
function_name	elle ||| max poll time	count=2
function_name	le nombre de ||| numfields	count=1
arg_pair	retourne les ||| array $imageinfo	count=1
function_name	de message d'erreur ||| pg result error	count=1
namespace	valeurs ||| evstat	count=1
arg_pair	moifie ||| bool $mva	count=1
namespace	la fonction ||| directory	count=2
function_name	une page pour ||| pdf open pdi page	count=1
function_name	récupère un élément ||| get	count=1
arg_pair	l'analyseur parser utilisable depuis ||| resource $parser object $object	count=1
return	iidentique à la fonction ||| void	count=1
namespace	position courante du ||| function	count=1
function_name	similaire à la ||| by id	count=1
namespace	entre les clé et ||| arrayobject	count=1
function_name	email formatée correctement selon ||| imap rfc822 write address	count=1
arg_pair	attribut ||| string $index array $attributes	count=1
function_name	envoie ||| pg send query	count=2
function	le mode [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	le téléchargement ||| ftp nb	count=1
function_name	oauthprovider::consumerhandler() ||| callconsumer handler	count=1
function_name	en argument ||| db2 escape string	count=1
function_name	bibliothèque sous-jacente imagemagick ||| resource limit	count=1
namespace	depuis le tampon ||| eventbuffer	count=1
function_name	flux et attend ||| stream select	count=1
function_name	fdf ||| fdf set ap	count=2
function_name	retourne le nom long ||| get frame long name	count=1
function_name	en-têtes de réponse http ||| apache response headers	count=1
function	complétée jusqu'à [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	boîte aux lettres donnée ||| string $mailbox	count=1
namespace	le ||| sqlite3	count=1
function_name	en un timestamp unix ||| to timestamp	count=1
namespace	courante de la page ||| harupage	count=1
return	4 en coordonnées ||| bool	count=1
function_name	lorsqu'il est ||| unset	count=1
function_name	active le suivi ||| trace	count=1
function_name	représenté par l'identifiant ||| closedict	count=1
function_name	page et libère ||| page	count=1
arg_pair	oid de ||| resource $conn_identifier string $oid	count=1
return	forme de tableau ||| array	count=1
arg_pair	chaîne str après ||| string $character_mask	count=2
function_name	rappel pour readline ||| readline callback	count=1
namespace	toutes les ressources qui ||| function	count=1
function_name	month de ||| month	count=1
namespace	descripteur numérique de fichier ||| eventutil	count=1
function_name	retourne les [function_name] ||| save [function_name]	count=2
function_name	server_key peut [function_name] ||| [function_name]	count=2
namespace	si le ||| mongocursorinterface	count=1
function_name	d'erreurs ms sql server ||| mssql	count=1
function_name	l'endroit où ||| fann set error log	count=1
return	associé [return] ||| [return]	count=3
function_name	courante radius ||| radius	count=1
function_name	les ||| to	count=1
namespace	envoi ||| yar_concurrent_client	count=1
function_name	informations quant aux statistiques ||| eio statvfs	count=1
function_name	[function_name_1] remplit ||| [function_name_2] [function_name_1]	count=3
function_name	retour du réseau neuronal ||| fann	count=1
function_name	libère les ressources mémoires ||| form	count=1
function_name	l'endroit où les ||| error log	count=1
function_name	de police de ||| font	count=1
function_name	d'attente ||| max poll time	count=2
return	base pour toutes les ||| string	count=1
arg_pair	fonction cubrid_set_add() est utilisée ||| string $attr_name string $set_element	count=1
function_name	de caractères uri de ||| uri	count=1
arg_pair	une nouvelle ||| int $key string $value	count=1
function_name	ou défini les drapeaux ||| flags	count=1
arg_pair	par la fonction socket_create() ||| string $address	count=1
arg_pair	connexion connection et retourne ||| resource $connection	count=1
function_name	einer mime kopfzeile dans ||| iconv mime	count=1
return	[return] l'élément courant ||| [return]	count=1
function_name	forme en incluant ||| newt	count=1
function_name	l'étape d'erreur sarprop ||| fann set sarprop step error threshold	count=1
arg_pair	occurrence de needle incluse ||| string $haystack mixed $needle	count=1
function_name	interne ||| iterator index	count=1
function	[function_name_1] dans l'argument ||| [function_name_1] [arg_pair_2]	count=2
namespace	se déplace ||| splpriorityqueue	count=1
namespace	cette méthode implémente un ||| arrayobject	count=1
arg_pair	ou false si une ||| resource $result	count=1
arg_pair	[arg_pair_1] occurrence ||| [arg_pair_2] int $offset [arg_pair_1]	count=1
function_name	[function_name_1] pkcs#12 fourni ||| [function_name_1] [function_name_2]	count=2
function	affiche le [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	la file d'attente s'interrompt ||| max poll time	count=1
namespace	de la liste ||| spldoublylinkedlist	count=1
namespace	un attribut dans ||| sphinxclient	count=1
arg_pair	principal avec le mot ||| resource $handle string $principal	count=1
function_name	paramètres du [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	une ||| string $jpeg_file_name	count=1
return	partie entière et ||| array	count=1
function_name	de signal ||| signal event	count=1
function_name	mémoire utilisée par ||| memory usage	count=1
arg_pair	service daemon ||| string $address	count=1
arg_pair	de contenu ||| string $blockname int $contents	count=1
return	à ||| mixed	count=1
function_name	à la fonction getimagesize() ||| getimagesizefromstring	count=1
function_name	ajoute le ||| add	count=1
arg_pair	mode ||| string $mode_directory	count=1
function_name	cli_set_process_title() ||| process title	count=1
function_name	peut ||| debug	count=1
function_name	à surveiller avec ||| module	count=1
return	jeu ||| string	count=1
function_name	distant vers ||| ssh2 scp recv	count=1
arg_pair	snmp2_get() ||| string $host string $community	count=1
function_name	[function_name_1] d'erreur de ||| [function_name_2] [function_name_1]	count=6
namespace	fichier référencé par splfileinfo ||| splfileinfo	count=1
function_name	[function_name] l'algorithme et ||| mcrypt [function_name]	count=1
function_name	base ms sql server ||| mssql	count=1
return	représenté ||| int	count=1
arg_pair	spécifié par object_id ||| string $object_id string $type	count=1
function_name	ou plusieurs des canaux ||| channel	count=1
arg_pair	fichier ||| resource $pdfdoc string $filename	count=2
arg_pair	domaine unicode ||| string $domain	count=1
namespace	la brosse courante pour ||| function	count=1
arg_pair	un générateur d'extraits ||| string $field_override	count=1
function_name	fichier est ||| open	count=1
function_name	évènement pour être utilisé ||| event set	count=1
function_name	traitement appliqué à ||| preview	count=1
function_name	: ||| construct	count=1
function_name	text sont des lettres ||| ctype alpha	count=1
function_name	énumère [function_name] ||| enchant [function_name]	count=1
namespace	ainsi que [namespace] ||| [namespace]	count=1
function_name	fragments ||| highlight	count=2
function_name	en_us de_de ||| broker request	count=1
function_name	codage vectoriel de la ||| imagepsencodefont	count=1
arg_pair	cette fonction url-encode ||| resource $ch	count=1
arg_pair	l'environnement pour ||| string $passwd	count=1
function_name	la largeur de l'image ||| image width	count=1
arg_pair	fichiers ||| string $prefix	count=2
function_name	niveaux ||| images	count=1
return	lorsque l'objet ||| void	count=1
function_name	valeurs ||| get values	count=3
function	informations concernant [arg_pair_2] ||| [function_name_1] resource $ch [arg_pair_2]	count=1
arg_pair	les variables var ||| array $array	count=1
arg_pair	un ||| string $name	count=1
namespace	acquis avec ||| eventbuffer	count=1
namespace	place des antislashs devant ||| function	count=1
function	linejoin [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	cubrid_connect() [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	décide ||| mysqlnd qc set	count=1
function_name	s'y trouvent ||| uudecode all	count=1
namespace	timestamp ou l'heure courante ||| function	count=1
function_name	la ||| max poll	count=1
arg_pair	un hyperlien à ||| float $lly float $urx	count=2
return	tracer ||| void	count=1
arg_pair	la première occurrence de ||| string $needle	count=1
arg_pair	mélange ||| mixed $colorize mixed $opacity	count=1
function_name	file d'attente s'interrompt si ||| max	count=1
function_name	fait de définir ||| set	count=1
arg_pair	un tableau de ||| array $except int $tv_sec	count=2
return	une instance ||| object	count=1
arg_pair	chemin path à ||| string $path int $offset	count=1
function_name	la connexion ssl ||| ssl	count=2
function_name	le codage vectoriel de ||| imagepsencodefont	count=1
function_name	effectue alors une ||| variant idiv	count=1
function_name	si elle prend plus ||| set	count=1
function_name	définit ||| set color	count=1
function_name	détermine si ||| is	count=1
function_name	démarre le déboguage de ||| set	count=1
function_name	seule image représentant la ||| image	count=1
function_name	pixels implosé par un ||| implode	count=1
function_name	fdf suivant ||| fdf next	count=2
arg_pair	d'un document ||| int $page string $optlist	count=1
function_name	forme et tous les ||| newt	count=1
function_name	slob ||| slob	count=5
function_name	de postgresql associée au ||| pg	count=1
function_name	[function_name_1] le chemin ||| [function_name_2] [function_name_1]	count=1
function_name	initialise toutes les variables ||| variables	count=1
function_name	ligne dans une ||| fetch	count=1
function_name	du flou ||| gaussian blur	count=1
function_name	de tidy ||| tidy reset	count=1
function_name	auto_increment ||| mysqli insert	count=1
function_name	l'objet ||| string	count=1
return	personnalisées ||| void	count=1
return	un identifiant de ||| resource	count=1
function_name	liste des bases ||| fbsql list dbs	count=2
function_name	une paire de ||| pair	count=1
return	définit l'image ||| gmagick	count=1
function_name	celui de preg_replace() ||| preg replace callback	count=1
arg_pair	d'un ||| string $key	count=1
function_name	courante ||| current	count=3
function_name	associatif ||| assoc	count=3
function_name	bruit ||| addnoiseimage	count=1
arg_pair	grand degré de contrôle ||| string $cwd	count=1
function_name	schéma depuis ||| cubrid schema	count=1
function_name	test sur un jeu ||| test data	count=1
namespace	méthode ||| samconnection	count=1
function	[function_name_1] ...) ||| [function_name_1] dict [arg_pair_2]	count=1
function_name	flux représentant une variable ||| stream	count=1
function_name	patch binaire ||| xdiff string patch binary	count=1
namespace	caractère par sa ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] created [function_name_2]	count=7
arg_pair	du paramètre type ||| string $type	count=1
function_name	configuration du cookie ||| get cookie params	count=1
function_name	nouvelle ||| csr new	count=2
arg_pair	le fait qu'elle ||| string $pattern string $string	count=1
function_name	images scannées où le ||| deskew	count=1
arg_pair	en combinant plusieurs images ||| string $tile_geometry	count=1
return	pclose() hormis le ||| int	count=1
function_name	hachage [function_name] ||| save to [function_name]	count=3
function_name	statut de la tâche ||| do background	count=1
function_name	[function_name_1] carte ||| [function_name_2] [function_name_1]	count=2
namespace	imagickpixel ||| imagickpixel	count=1
function_name	extrêmes pour l'un ou ||| extrema	count=1
function_name	sont présentes dans tous ||| array intersect	count=1
arg_pair	colonnes et de lignes ||| int $rows	count=1
function_name	des informations ||| curl multi info	count=1
arg_pair	métadonnées et la seconde ||| mongodb $db	count=1
return	à une ||| tokyotyrant	count=1
function_name	matrice affine ||| affine	count=1
namespace	fonctionne avec les ||| function	count=1
function_name	[function_name_1] tous les ||| [function_name_2] [function_name_1]	count=1
function_name	base identifiée ||| dba fetch	count=1
arg_pair	de search ||| mixed $search	count=2
function_name	[function_name_1] zend en ||| [function_name_2] [function_name_1]	count=8
return	julien en une chaîne ||| string	count=1
function_name	mémoires utilisées par ||| destroy	count=1
function_name	avec ||| get element by	count=1
arg_pair	haystack et retourne la ||| bool $before_needle string $encoding	count=1
function_name	retourne la ||| get image	count=1
function_name	valeur de ||| set include path	count=1
return	libère un ||| bool	count=1
arg_pair	xml depuis la représentation ||| int $options	count=1
namespace	crée ||| xmldiff\file	count=1
arg_pair	la colonne correspondant ||| resource $result int $field_offset	count=1
function_name	commence la ||| control point browse start	count=1
function_name	durée du script ||| set	count=1
arg_pair	cette fonction url-encode ||| string $str	count=1
function_name	fonction cubrid_error_msg() ||| msg	count=1
function_name	est déclaré ||| decl	count=1
namespace	définies dans l'extension ||| reflectionextension	count=1
arg_pair	de caractères ||| gmagickdraw $draw	count=1
function	[function_name_1] needle ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	de queues ||| resource $hconn	count=1
function	[function_name_1] source vers ||| [arg_pair_2] [function_name_1]	count=4
function_name	du cache ||| wincache	count=4
arg_pair	gestionnaire mutex ||| boolean $destroy	count=1
function_name	lier ||| lob2 bind	count=2
arg_pair	convertit une chaîne ||| string $from	count=1
namespace	la qualité d'une ||| gmagick	count=1
function_name	forme et ||| newt form	count=1
function_name	donnée en utilisant ||| gzcompress	count=1
function_name	avaient ||| destroy	count=1
function_name	tampon ||| buffer	count=1
function_name	combine ||| combine	count=1
function_name	cette fonction retourne une ||| cubrid get	count=2
function_name	synchronise la base ||| dba sync	count=1
function_name	fort ||| eio	count=1
function_name	[function_name_1] largeur ||| [function_name_2] [function_name_1]	count=3
return	fin de ||| void	count=1
function_name	[function_name_1] publique ||| [function_name_1] [function_name_2]	count=2
function_name	contenu courant du tampon ||| get	count=1
function_name	les regroupements [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	base de données active ||| string $database_name	count=2
function_name	en ||| set include path	count=2
function_name	dernière fonction d'internationalisation appelée ||| intl get	count=1
function_name	tampon fourni ||| buffer	count=1
namespace	devant ||| function	count=1
function_name	élément enfant ||| child	count=1
function_name	grande taille ||| pg lo	count=3
function_name	nouveau filtre ||| set filter	count=2
function_name	effectue alors une ||| idiv	count=1
arg_pair	à la résolution ||| float $xresolution float $yresolution	count=1
arg_pair	rows ||| string $delimiter	count=1
function_name	la méthode eventbuffer::lock() ||| unlock	count=1
function_name	fait que file_get_contents() retourne ||| file get contents	count=1
function_name	encodés ||| uudecode	count=1
function_name	vérification des ||| array udiff assoc	count=1
return	[return] méthode statique ||| [return]	count=3
namespace	l'image sur un serveur ||| imagick	count=1
arg_pair	hormis le ||| string $pattern string $string	count=1
function_name	pages ||| pages	count=1
return	de l'image ||| string	count=1
function_name	lit le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	et lui associe un ||| int $cols int $rows	count=1
namespace	de caractères de l'objet ||| serializable	count=1
arg_pair	ajoute un message message ||| string $message	count=1
arg_pair	sql pour l'activation de ||| int $condition_type mixed $condition	count=1
arg_pair	position x y le ||| int $x int $y	count=1
function_name	[function_name_1] en utf-16 ||| [function_name_2] [function_name_1]	count=1
function_name	le bytecode ||| bcompiler write	count=2
function_name	directoryiterator [function_name] ||| [function_name]	count=3
arg_pair	excepté le fait que ||| int $hour int $minute	count=1
function_name	retourne la méthode de ||| get	count=1
function_name	que ||| set metadata	count=2
function_name	synchronise la ||| sync	count=1
function_name	du champ qui occupe ||| pg field	count=1
function_name	est similaire [function_name] avec ||| [function_name]	count=1
function_name	défini l'époque minimale candidate ||| set cascade min cand	count=1
function_name	[function_name_1] jokers à ||| [function_name_1] [function_name_2]	count=1
arg_pair	la casse des ||| string $pattern	count=1
arg_pair	[arg_pair_1] d'un fichier ||| [arg_pair_2] [arg_pair_1]	count=6
arg_pair	rappel ||| mixed $pattern	count=1
return	mémoires utilisées par la ||| void	count=1
namespace	ou désactive l'affichage des ||| function	count=1
function_name	la géométrie de ||| page	count=2
function_name	affecte le gestionnaire ||| handler	count=3
arg_pair	la ||| mongodb $db string $prefix	count=2
arg_pair	utilisant l'image image ||| string $filename	count=1
function_name	curseur sur l'attribut ||| attribute	count=1
function_name	[function_name] nombre ||| [function_name] highlight	count=2
function_name	ou plusieurs canaux ||| channel	count=4
function_name	sur des ||| destroy	count=1
namespace	champs ou ||| function	count=1
function_name	retourne false pour ||| end	count=1
function_name	efface une ||| delete by	count=1
arg_pair	sur une date ||| string $format string $date	count=1
function_name	fournie ||| database	count=1
function_name	protégée ||| protected	count=1
arg_pair	dans ||| array $attributes	count=1
function_name	supprime ||| remove server	count=1
function_name	résultat stmt ||| mysqli stmt	count=1
function_name	de autocommit de la ||| db2 autocommit	count=1
function_name	fonctions d'activation [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	du script en ||| set include path	count=1
function_name	closedir() seul ||| close	count=1
function_name	valeur [function_name] ||| [function_name]	count=3
return	fait en ||| bool	count=1
namespace	les chaînes alphanumériques ||| arrayobject	count=1
function_name	minimale du ||| cache min default	count=1
namespace	résultants ||| mongocommandcursor	count=1
return	une ||| float	count=1
namespace	les processus ||| function	count=1
return	du nombre ||| number	count=1
function_name	associatif ||| fetch assoc	count=2
return	les données ||| array	count=3
arg_pair	une chaîne php ||| string $value string $type	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] font [function_name_2]	count=3
return	un curseur ||| mongocommandcursor	count=1
function_name	filtre entier à la ||| filter range	count=1
function_name	constructeur de base pour ||| construct	count=1
function_name	retourne [function_name_2] ||| mysqli [function_name_1] [function_name_2]	count=2
return	des bases de données ||| array	count=1
function_name	de ||| snmp set oid numeric	count=1
namespace	verrous qui ont ||| function	count=1
function_name	profils de l'image qui ||| image profiles	count=1
namespace	définit ou ||| function	count=1
namespace	d'une archive phar ||| pharfileinfo	count=1
return	fin ||| bool	count=2
return	s'il ||| bool	count=2
arg_pair	[arg_pair_1] table table_name ||| [arg_pair_2] array $assoc_array [arg_pair_1]	count=1
function_name	d'une notification de ||| service proxy add notify	count=1
namespace	nombre de champs colonnes ||| function	count=1
arg_pair	sert ||| int $pos	count=1
function_name	fonction retourne true si ||| module is	count=1
function_name	sortie ||| ob get	count=1
return	la tâche ||| int	count=2
arg_pair	en un autre format ||| int $format int $compression	count=1
return	[return] protocole name ||| [return]	count=1
function_name	et libère ||| free	count=2
function_name	un document ||| update	count=1
return	[return] l'entrée a ||| [return]	count=3
function_name	libxml standard et ||| libxml use	count=1
function_name	va protéger tous ||| escape	count=1
function_name	est un alias de ||| is nick	count=1
function_name	efface une collection ||| delete by	count=1
return	si le curseur est ||| bool	count=1
function_name	[function_name_1] spécifiés ||| [function_name_2] [function_name_1]	count=4
function_name	autre fonction utilisateur) ||| restore	count=1
function_name	odbc à des ||| odbc	count=1
function_name	défini le facteur de ||| threshold factor	count=1
function_name	avec un patch binaire ||| xdiff string patch binary	count=1
namespace	à différents niveaux ||| imagick	count=1
namespace	est ||| tidynode	count=1
arg_pair	l'activation de la mise ||| int $condition_type mixed $condition	count=1
namespace	depuis le registre ||| yaf_registry	count=1
function_name	code [function_name] ||| cubrid [function_name]	count=2
arg_pair	le paramètre onoff ||| resource $connection_id bool $onoff	count=1
function_name	oauthprovider::timestampnoncehandler() ||| nonce	count=1
function_name	plus proche de ||| imagecolorclosestalpha	count=1
arg_pair	la couleur border ||| int $border	count=1
arg_pair	un fichier ||| resource $pdfdoc string $filename	count=2
function_name	retourne le dernier ||| last	count=2
function_name	connexion à un ||| get	count=1
function_name	libère un ||| oci free	count=1
arg_pair	les métadonnées et la ||| mongodb $db string $prefix	count=1
arg_pair	gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
return	de données uniquement si ||| bool	count=1
function_name	la fonction est obsolète ||| is deprecated	count=1
function_name	comme pourrait ||| unbuffered query	count=1
arg_pair	accepte un tableau ||| array $except int $tv_sec	count=2
arg_pair	une erreur ||| resource $result int $field_offset	count=1
namespace	iidentique ||| directory	count=1
function_name	distant ||| ssh2 sftp	count=4
function_name	de types or selon ||| or	count=1
return	de données associée au ||| bool	count=1
function_name	la forme en incluant ||| form	count=1
function_name	de noms ||| names	count=1
function_name	point de surveillance ||| watch	count=1
namespace	l'objet courant ||| splobjectstorage	count=1
function_name	et libère ||| base free	count=1
function_name	compression utilisée ||| zip entry	count=1
function_name	miniatures de l'image ||| preview	count=1
arg_pair	base ||| string $database_name resource $link_identifier	count=1
function_name	la police de ||| setfont	count=1
function_name	fonction retourne le nombre ||| num fields	count=1
return	le dessin ||| bool	count=1
return	est sortie normalement ||| int	count=1
function_name	libère toute ||| free	count=2
function_name	la fonction d'activation ||| set activation function output	count=1
function_name	une pile ||| push	count=1
function_name	base de données paradox ||| px	count=3
namespace	une capture de ||| function	count=1
arg_pair	sur l'algorithme ||| string $algorithm	count=1
function_name	du tri ||| sort	count=1
function_name	devant ||| db2	count=1
function_name	de l'itération ||| end iteration	count=1
arg_pair	nécessaire à ||| string $connection_string string $character_set	count=1
function_name	utilisée que ||| set metadata	count=1
function_name	spanscorer pour coloriser ||| set highlight highlight	count=2
function_name	la fonction d'activation pour ||| activation function output	count=1
namespace	avec ||| mongoclient	count=1
function_name	retourne le numéro ||| get	count=7
namespace	serveur ||| gearmanjob	count=1
function_name	[function_name_1] le profil ||| [function_name_1] image [function_name_2]	count=1
function	les composants [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	variable character_set [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	sequence ||| string $sequence	count=2
arg_pair	depuis les données fournies ||| string $data	count=1
function_name	les ||| eregi	count=1
function_name	entités html de la ||| html entity	count=1
function_name	la file d'attente ||| eio set max	count=1
function_name	événement [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	change la transparence ||| float $alpha	count=1
function_name	l'option magic_quotes_gpc ||| magic quotes gpc	count=1
function_name	retourne le nombre ||| get field count	count=1
return	la méthode du ||| int	count=1
function	sauvegarde le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	de mémoire [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	le type mime d'une ||| mime type	count=1
return	[return] position ||| [return]	count=3
function_name	document selon ||| validate source	count=1
namespace	une fois par ||| collectable	count=1
return	lit le ||| string	count=1
function_name	l'époque minimale ||| cascade min out epochs	count=1
function	syntaxe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	fonctions de rappel ||| buffer set callback	count=1
arg_pair	si l'accès [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	écrit du texte à ||| ps show	count=1
function_name	dans ||| update	count=1
arg_pair	datetime pour une chaîne ||| string $type	count=1
arg_pair	chaîne str ||| string $from	count=1
function_name	depuis [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ainsi que ceux de ||| chmod	count=1
function_name	dernier message d'erreur ||| last error	count=3
function_name	texte ||| text	count=6
function_name	[function_name_1] numéro ||| [function_name_2] [function_name_1]	count=14
arg_pair	l'argument offset et dans ||| resource $lob_identifier int $offset	count=1
function_name	posix qui a échoué ||| posix	count=1
arg_pair	excepté ||| int $second	count=1
function_name	filtre d'un ||| filter	count=1
return	fonctionne avec les ||| int	count=1
arg_pair	position numérique de ||| string $encoding	count=1
namespace	avec ||| imagick	count=1
function_name	en anglais ||| msg	count=1
arg_pair	mktime() excepté le fait ||| int $hour	count=1
return	l'image depuis le ||| string	count=1
function_name	champ field donné ||| field	count=1
function_name	un tableau qui ||| fetch array	count=1
function_name	bibliothèque ucd de ||| quick print	count=1
function_name	retourne ||| string	count=1
function_name	miniatures ||| preview images	count=2
function_name	lit les composants ||| content	count=1
function_name	fonctionne avec les processus ||| proc	count=1
arg_pair	chaîne str1 en str2 ||| string $str1 string $str2	count=1
namespace	à 4 mb par ||| mongocursor	count=1
function_name	interne au lieu ||| internal	count=1
arg_pair	fonction mysql_field_name() ||| int $field_offset	count=1
arg_pair	une page dans le ||| int $page	count=1
function_name	et retourne [function_name] ||| [function_name]	count=1
arg_pair	caractères str en ||| string $str	count=1
namespace	connexion à un ||| mongoclient	count=1
namespace	met en place le ||| function	count=1
function_name	arrête ||| shutdown	count=1
function_name	retourne l'index [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	php en ||| php	count=1
namespace	les variables var .. ||| function	count=1
return	après ||| mongocursor	count=1
function_name	crée une paire ||| socket create pair	count=2
function_name	[function_name_1] de police ||| [function_name_2] [function_name_1]	count=1
function_name	utilisé pour diriger les ||| set multi	count=1
function_name	[function_name_1] largeur ||| [function_name_1] unicode [function_name_2]	count=1
function_name	depuis une fonction ||| from callback	count=1
arg_pair	un segment ||| mixed $start mixed $length	count=1
arg_pair	la signature1 et ||| string $signature1	count=1
function_name	de l'itération lorsque la ||| iteration	count=1
namespace	les valeurs ||| arrayobject	count=1
arg_pair	de fichiers local ||| string $local_file	count=1
function_name	récupère l'adresse [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de l'objet ||| to string	count=1
arg_pair	en une et ||| string $new_data2	count=1
function_name	document xml ||| xml	count=1
function_name	les données ||| buffer	count=1
function_name	cache [function_name_2] ||| [function_name_1] [function_name_2] exists	count=1
function_name	[function_name_1] à ||| [function_name_1] [function_name_2]	count=4
function_name	elle prend plus de ||| max	count=1
function_name	retourne la version de ||| version	count=2
function_name	un identifiant donné ||| element	count=1
function_name	accès et de la ||| eio futime	count=1
function_name	dossier d'archives spécifié ||| compressionmethod	count=1
function_name	écrit les données ||| write	count=1
function_name	la ligne précédente ||| prev	count=1
function_name	compression utilisée ||| compressionmethod	count=1
function_name	d'activation pour la couche ||| fann set activation	count=1
function	[function_name_1] chaîne str ||| [function_name_1] [arg_pair_2]	count=3
return	hormis le fait qu'elle ||| int	count=2
function_name	[function_name_1] schéma ||| [function_name_2] [function_name_1]	count=7
arg_pair	en la valeur ||| mixed $value	count=1
function_name	ne fait rien mise ||| nop	count=1
function_name	segment du ||| set chunk	count=1
function_name	l'identifiant du client utilisé ||| client	count=1
function_name	ouvre un shell ||| shell	count=1
arg_pair	la recherche ||| string $pattern string $string	count=1
function_name	de continuer ||| loop	count=1
function_name	placer un verrou de ||| cubrid lock	count=1
function_name	miniatures de ||| preview images	count=1
arg_pair	accepte un tableau de ||| array $except int $tv_sec	count=2
function_name	fin de l' ||| add buffer	count=1
return	qui sont sur ||| void	count=1
function_name	un élément ||| element by	count=1
function_name	stocker ||| metadata	count=1
function_name	compte le nombre d'occurrences ||| mb substr count	count=1
function_name	date formée par les ||| checkdate	count=1
namespace	si ||| splpriorityqueue	count=1
function_name	attribut avec l'espace de ||| attribute	count=1
function_name	priorité basse en ||| do low	count=1
arg_pair	le fichier fieldname ||| resource $fdf_document string $fieldname	count=1
function_name	plusieurs canaux d'une image ||| channel	count=1
function_name	maximale [function_name] chaque pixel ||| compare [function_name]	count=1
function_name	fonction est similaire ||| get element by id	count=1
return	s'il est ||| bool	count=1
arg_pair	le fichier qui contient ||| string $file	count=1
return	si ||| solrquery	count=1
arg_pair	bloc de contenu ||| int $contents	count=1
arg_pair	crée un fichier ||| string $pathname int $mode	count=1
function_name	le langage courant ||| language	count=1
function_name	mesurée en ||| fseek	count=1
function_name	stoppe une ||| stop db	count=1
arg_pair	watcher associé ||| callable $callback mixed $data	count=1
arg_pair	des données encodées raw/gzip/zlib ||| string $max_decoded_len	count=1
function_name	de données interbase ||| ibase	count=1
function_name	la connexion sera persistante ||| pconnect	count=1
return	de l'objet sous la ||| string	count=1
arg_pair	hyperlien à une ||| float $lly float $urx	count=1
function_name	commence un objet texte ||| begin	count=1
return	ou en crée ||| bool	count=1
function_name	sur ||| eregi	count=1
function	cette fonction retourne true [function_name_1] [arg_pair_2] ||| function bool mcrypt module [function_name_1] [arg_pair_2]	count=1
function_name	système de fichiers distant ||| ssh2 sftp	count=2
return	sert à extraire les ||| array	count=1
arg_pair	une ||| string $password int $cursor_type	count=1
function_name	pour la connexion ssl ||| ssl	count=1
function_name	libère les ||| newt form destroy	count=1
return	les bits ||| void	count=1
namespace	des messages ou ||| function	count=1
arg_pair	document xml filename ||| string $filename	count=1
arg_pair	et ||| resource $result_id int $length	count=1
return	allouée en interne pour ||| bool	count=1
function_name	définit le nom de ||| set action	count=1
function_name	du script en ||| include path	count=1
arg_pair	la structure de ||| int $num_input	count=1
function_name	[function_name_1] [function_name_2] ||| imagick array [function_name_1] [function_name_2]	count=1
namespace	un traitement appliqué à ||| imagick	count=1
function_name	lève ||| dbplus	count=1
arg_pair	retourne la chaîne str ||| string $character_mask	count=2
return	la version courante ||| string	count=1
arg_pair	cible spécifiée ||| resource $context string $target	count=1
function	[function_name_1] à une ||| [function_name_1] [arg_pair_2]	count=5
function_name	retourne le type de ||| type	count=3
function_name	fichier fourni ||| all	count=1
namespace	poll ||| zmqpoll	count=1
function_name	fichiers et son utilisation ||| fcache	count=1
function_name	et ||| mailparse	count=1
arg_pair	alias de : soapfault::soapfault() ||| string $faultactor string $detail	count=1
function_name	[function_name_1] l'attribut dans ||| [function_name_2] [function_name_1]	count=1
return	le tableau ||| bool	count=1
function_name	retourne un identifiant ||| get	count=1
return	un attribut ||| int	count=1
function_name	de la fonction ||| function	count=1
function_name	est connue sur ||| is known	count=2
namespace	que l'archive phar actuelle ||| phar	count=1
function_name	rfc 3986 ||| rawurlencode	count=1
function_name	l'itération commence après le ||| begin iteration	count=2
namespace	la bibliothèque ||| function	count=1
arg_pair	windows compris ||| int $operation	count=1
function	[function_name_1] du mode ||| [function_name_1] [arg_pair_2]	count=1
function_name	récupère le nombre ||| get	count=2
function_name	au nom ||| by name	count=1
function_name	à un marqueur oracle ||| oci bind	count=1
arg_pair	du fichier filename pour ||| string $filename	count=1
function_name	valeurs dans les regroupements ||| set group	count=1
function	postgresql et [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	retourne l'id persistant du ||| get persistent id	count=1
function_name	est une ||| is valid	count=1
namespace	valide un document ||| domdocument	count=1
function_name	retourne le statut de ||| introspection get state	count=1
arg_pair	l'argument offset ||| int $offset	count=1
return	eventbuffer ||| bool	count=1
function_name	qui ||| mailparse uudecode	count=1
return	dans ||| void	count=2
function_name	crée un objet char ||| ifx create char	count=1
function_name	algorithmes ||| algorithms	count=1
namespace	d'objets résultants et les ||| mongocommandcursor	count=1
arg_pair	cubrid_set_add() est ||| string $attr_name string $set_element	count=1
function_name	le phar quand il ||| phar	count=1
function_name	de noms de champs ||| names	count=1
function_name	choisit ||| pdf setrgbcolor	count=1
function_name	combine une [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	données n'a ||| dead	count=1
arg_pair	de résultats listant ||| string $table_name	count=1
namespace	utilisée ||| solrquery	count=1
function_name	similaire à ||| fbsql field type	count=1
function_name	résultat de [function_name_2] ||| [function_name_2] next [function_name_1]	count=1
arg_pair	qui héberge la ||| array $data	count=1
function_name	des antislashs devant les ||| db2	count=1
function_name	si elle prend ||| max poll time	count=1
function_name	à précharger par ||| prefetch	count=1
function_name	champ ||| mysql field flags	count=2
function_name	noeuds ||| c14 n	count=1
arg_pair	données cubrid et ||| resource $lob_identifier	count=1
function	champs d'une ||| fields string $database_name	count=1
function_name	de champs à ||| add field	count=1
function_name	de résultats mnogosearch ||| udm	count=1
function_name	objet ainsi que ses ||| pg fetch object	count=1
function_name	la méthode oauthprovider::timestampnoncehandler() ||| nonce handler	count=1
function_name	à l'échelle les entrées ||| fann scale input	count=1
arg_pair	et namespaceuri ||| string $namespaceuri	count=1
namespace	par sa majuscule si ||| function	count=1
function_name	méthode récupère l'intance ||| get	count=1
namespace	régression suivant le modèle ||| svmmodel	count=1
function_name	champ field a été ||| msql field	count=1
arg_pair	log_cmd_delete lors de ||| array $server array $writeoptions	count=1
function_name	de l'extension sous ||| solr	count=1
function_name	remplit le chemin construit ||| ps fill	count=1
function_name	de ||| snmp set	count=1
function_name	décimal ||| float	count=1
function_name	argument ||| escape	count=1
function	crypte [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	définit une fonction à ||| set	count=1
namespace	été ajoutés ||| function	count=1
arg_pair	fichier fd pour ||| mixed $fd	count=1
function_name	définit la [function_name_1] [function_name_2] la page ||| harupage bool [function_name_2] [function_name_1]	count=1
function_name	du document lorsqu'il est ||| unset	count=1
arg_pair	message dans ||| resource $compcode resource $reason	count=1
namespace	ou plusieurs procédures ||| function	count=1
function_name	plus ||| poll time	count=2
function_name	contexte de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	le texte à la ||| text	count=1
arg_pair	un générateur d'extraits ||| string $fragmenter string $field_override	count=1
function_name	type strpos() ||| mb strrpos	count=1
function_name	page pour utilisation ultérieure ||| open pdi page	count=1
function_name	serveur ftp et le ||| ftp get	count=1
function_name	la temporisation ||| ob end clean	count=1
function_name	similaire à la fonction ||| by id	count=1
namespace	une tâche ||| gearmanclient	count=2
function_name	hauteur de ||| imagesy	count=1
function_name	suspend ||| fam suspend	count=1
function_name	alias appelé alias ||| alias	count=1
function_name	crée un groupe de ||| create	count=1
function_name	requête xpath ||| register xpath namespace	count=1
function_name	méthode de compression utilisée ||| zip entry	count=1
return	typiquement parcourt un ||| mongocommandcursor	count=1
arg_pair	ou ||| string $pathname	count=1
function_name	une seule image ||| image	count=1
function_name	définit le nom ||| set action	count=1
arg_pair	à l'entrée dn ||| string $dn	count=1
arg_pair	l'hôte hostname et ||| string $hostname	count=1
function_name	à ||| delete	count=1
namespace	par réponse ||| mongocursor	count=1
function_name	un marqueur ||| bind array	count=1
arg_pair	les données fournies ||| string $data	count=1
function_name	du flux ||| stream	count=3
namespace	excepté ||| function	count=1
arg_pair	caractères lors de la ||| string $pattern	count=1
function_name	spécifiant la police ||| getfont	count=1
function_name	kerberos ||| kadm5	count=1
arg_pair	pour trouver l'expression pattern ||| string $pattern	count=1
function_name	d'erreur de la dernière ||| get error	count=1
function_name	paire de sockets ||| stream socket pair	count=1
function_name	cette fonction est similaire ||| get element by id	count=1
function_name	un alias de ||| set flags	count=1
function_name	ligne sur l'image en ||| line	count=1
function_name	[function_name_1] colonne ||| [function_name_2] [function_name_1]	count=3
function_name	celui de preg_replace() ||| preg replace	count=1
arg_pair	[arg_pair_1] réseau ||| [arg_pair_2] [arg_pair_1]	count=6
namespace	à evchild::__construct() ||| evchild	count=1
function_name	gestionnaire de fenêtre ||| imagegrabwindow	count=1
namespace	base pour ||| xmldiff\base	count=1
return	laquelle une ||| string	count=1
function_name	la session [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	les réponses dans une ||| bool	count=1
return	fonction rewinddir() seul ||| void	count=1
function_name	accès ||| eio futime	count=2
arg_pair	document ||| string $index array $attributes	count=1
function_name	sauvegarde le ||| fann save	count=1
function_name	fichier fourni et extrait ||| uudecode all	count=1
namespace	pclose() hormis le ||| function	count=1
return	synchronise la base ||| mixed	count=1
return	retourne un ||| string	count=1
function_name	de la bibliothèque ucd ||| set quick print	count=1
arg_pair	hyperlien à ||| float $lly	count=2
function_name	appelé lorsque l'itération ||| iteration	count=2
function_name	une trace pour chaque ||| trace log	count=1
function_name	un bloc de ||| shmop delete	count=1
function_name	retourne l'uri de ||| get uri	count=2
arg_pair	passés sont gmt ||| int $is_dst	count=1
namespace	tracer la ||| function	count=1
arg_pair	sur ||| resource $psdoc	count=1
arg_pair	fils soit terminé, ||| int $options	count=1
function_name	système ||| posix uname	count=1
function	le statut [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	composant statistique ||| set stats	count=1
function_name	à pclose() hormis ||| proc close	count=1
return	un traitement appliqué à ||| bool	count=1
function_name	qui s'y ||| all	count=1
return	lit le numéro ||| int	count=1
function	compare [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	définie par ||| function	count=3
function_name	tests sur l'index ||| uintersect uassoc	count=1
function_name	le bytecode ||| bcompiler parse	count=1
function_name	la police ||| font	count=5
function_name	readline affiche ||| readline	count=1
function_name	définit la qualité de ||| mysqlnd ms set	count=1
function_name	cosinus hyperbolique pour chaque ||| trader cosh	count=1
arg_pair	[arg_pair] pointe ||| [arg_pair]	count=1
return	à utiliser en ||| bool	count=1
arg_pair	le texte ||| int $index	count=1
return	que ||| bool	count=2
function_name	bytecode et ||| bcompiler	count=1
function_name	appelé lorsque l'itération commence ||| begin iteration	count=1
function_name	désactive le termscomponent ||| set terms	count=1
function_name	de données odbc ||| odbc	count=1
function_name	[function_name_1] requête spécifiée ||| [function_name_2] next [function_name_1]	count=1
function_name	cours ||| set include	count=1
function	spécifie le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	composants qui avaient ||| destroy	count=1
function_name	entités html de ||| html entity	count=1
function	définition de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	récupère la charge ||| workload	count=1
function_name	page et libère toutes ||| page	count=1
function_name	les drapeaux définis pour ||| flags	count=1
function_name	limite supérieure dans ||| get terms include upper bound	count=1
function_name	une région [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	similaire à la fonction ||| mysql field	count=1
return	phar ||| bool	count=1
function_name	identifiant ||| get element by	count=1
return	récupère ||| array	count=2
function_name	retourne le ||| get state variable	count=1
function_name	lors de ||| eregi	count=1
function_name	le logo zend ||| zend logo guid	count=2
function_name	script en ||| set include path	count=1
function_name	ajoute un nouveau filtre ||| filter	count=2
function_name	le champ spécifié par ||| mysql field	count=1
function	évènement pour [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	à appeler lorsqu'une ||| created	count=1
function_name	de documents similaires à ||| mlt count	count=2
return	les en-têtes ||| array	count=1
function_name	détails ||| describe	count=1
function_name	commande sql à ||| exec	count=1
namespace	crée un document xml ||| xmldiff\file	count=1
arg_pair	l'étape est un ||| resource $ann float $rprop_delta_max	count=1
return	fichier [return] ||| [return]	count=3
return	utilisez db2_lob_read() pour ||| string	count=1
function_name	et pâques pour une ||| easter days	count=1
function_name	de l'image spécifiée avec ||| preview	count=1
function_name	document pour ||| set	count=1
function_name	traduction des entités utilisée ||| html translation table	count=1
arg_pair	données par défaut pour ||| mysqlnd_connection $connection	count=1
function_name	certificat [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	statistiques du serveur ||| stats	count=1
namespace	supprime toutes ||| function	count=1
function_name	émet une exception ||| set exception callback	count=1
namespace	ev::run() est entrée moins ||| ev	count=1
function_name	compression utilisée sur le ||| entry	count=1
function_name	fonctionne avec ||| proc close	count=1
namespace	tout ou partie d'un ||| function	count=1
arg_pair	être utilisé avec event_add() ||| resource $event mixed $fd	count=1
function_name	libère un descripteur alloué ||| free	count=1
function_name	les clés de ||| by key	count=1
function_name	liste les ||| fbsql list	count=1
function_name	crée un fichier ||| posix	count=1
function_name	rendu courant [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	false ||| recursivetreeiterator	count=1
function_name	token d'accès un ||| token	count=1
return	utilisée que ||| void	count=1
namespace	active ou désactive ||| function	count=1
function_name	création de différence à ||| diff	count=1
return	différents ||| bool	count=1
function_name	l'extension sous ||| solr	count=1
function_name	fonctions [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la fonction ingres_query() ||| ingres	count=1
function_name	[function_name] pour ||| set [function_name]	count=1
namespace	elle ||| function	count=1
function_name	en attente) depuis les ||| sys getloadavg	count=1
arg_pair	caractères ||| gmagickdraw $draw	count=1
function_name	filtre entier à ||| filter	count=2
arg_pair	surcharge l' opcode ||| callable $callable	count=1
function_name	[function_name_1] afficher les ||| [function_name_1] [function_name_2]	count=1
function_name	envoyant le contrôle de ||| control	count=1
arg_pair	paramètre oid de l'instance ||| resource $conn_identifier string $oid	count=1
function_name	d'activation pour ||| fann set activation function output	count=1
function_name	la tâche ||| do background	count=1
function_name	système de fichiers distant ||| ssh2	count=4
function_name	fonction peut être ||| set module	count=1
function_name	utilisateur) ||| restore error handler	count=1
namespace	représenté ||| function	count=1
function_name	retire ||| multi remove	count=1
function_name	l'itérateur à l'élément précédent ||| prev	count=1
function	lie un tableau [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	courante du ||| current	count=1
function_name	le champ field ||| field	count=2
function_name	connexion sera persistante ||| pconnect	count=1
function_name	du ||| ob get	count=1
arg_pair	qu'elle ignore ||| string $pattern string $string	count=1
function_name	le sinus ||| trader sin	count=1
function_name	la définition de la ||| pg meta data	count=1
function_name	month de ||| cal days in month	count=1
function_name	un identifiant donné ||| get element by	count=1
function_name	cette ||| eregi	count=1
function_name	cette fonction crée ||| create comment	count=1
function_name	retourne une représentation textuelle ||| to string	count=1
arg_pair	envoyés ||| string $url	count=1
function_name	à l'échelle ||| scale output	count=1
arg_pair	à l'aide de deux ||| mongodb $db string $prefix	count=1
arg_pair	fieldname téléchargé par ||| string $fieldname	count=1
function_name	de caractères passée en ||| string	count=1
arg_pair	plus grand degré de ||| array $pipes string $cwd	count=1
arg_pair	une ||| resource $large_object int $size	count=1
arg_pair	dans une chaîne nommée ||| mixed $priv_key	count=1
arg_pair	un fichier ||| array $options	count=2
arg_pair	à la fonction fbsql_field_name() ||| resource $result int $field_offset	count=1
arg_pair	classe yaf_route_static comme ||| yaf_route_abstract $route	count=1
arg_pair	les ||| callable $callback	count=1
function_name	utilisant la fonction ingres_query() ||| ingres	count=1
function_name	[function_name_1] refaire l'affichage ||| [function_name_1] [function_name_2]	count=3
return	définit [return] rappel ||| [return]	count=1
arg_pair	solr dans un ||| int $parse_mode	count=1
function_name	curseur sur le prochain ||| next	count=1
function	d'occurrences [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	d'attente ||| set max	count=1
function_name	tente de forcer ||| touch	count=1
arg_pair	un bloc de texte ||| string $blockname string $text	count=1
function_name	fonction peut être ||| module	count=1
function_name	toutes les données ||| buffer	count=1
function_name	est de type objet ||| is object	count=1
function_name	chaque serveur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ne doit ||| set	count=1
arg_pair	la couleur ||| float $fuzz	count=1
function_name	place des antislashs devant ||| escape string	count=1
function_name	l'option de transfert curl ||| curl setopt	count=1
arg_pair	automatiquement sa localisation ||| resource $context string $location	count=1
function_name	d'événement ssl ||| ssl filter	count=1
function_name	arbre ||| string	count=1
namespace	utilisées par ||| function	count=1
return	passée en ||| string	count=1
function_name	en tant que gestionnaire ||| handler	count=1
function_name	d'événements pour les événements ||| ibase set	count=1
function_name	sur le ||| immortal	count=1
arg_pair	fichiers local [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	verrou d'écriture sur l'instance ||| lock	count=1
function_name	à ||| newt form	count=1
arg_pair	chaîne str depuis l'encodage ||| string $str	count=1
function_name	retourne la représentation en ||| serialize	count=1
function_name	[function_name_1] curl ||| [function_name_2] [function_name_1] resource	count=4
function_name	[function_name_1] informix ||| [function_name_2] [function_name_1]	count=2
namespace	tente de mettre ||| quickhashstringinthash	count=1
arg_pair	l'objet à la valeur ||| float $value	count=1
function_name	la requête spécifiée ||| sqlsrv	count=1
arg_pair	analyse subject pour ||| mixed $subject	count=1
function_name	la taille d'une image ||| set image extent	count=1
function_name	gestion ||| odbc binmode	count=2
namespace	une nouvelle instance rrdupdater ||| rrdupdater	count=1
arg_pair	message ||| string $message	count=1
return	noeud courant ||| bool	count=1
function_name	se prolongeant ||| fallocate	count=1
function_name	analyse le ||| parse	count=2
function	[function_name_1] g ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	et produit les informations ||| string $from string $to	count=1
return	d'autres ||| int	count=1
arg_pair	paramètres : left top ||| float $left float $top	count=1
function	contrôle avec [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	retourne ||| introspection get state variable	count=2
arg_pair	identifiant qui permettra d'accéder ||| int $key int $memsize	count=1
function_name	lit une ligne ||| fetch	count=3
function_name	retourne une [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	dernier ||| last	count=8
function_name	ajoute la session ||| curl multi add handle	count=1
function_name	première paire clé/valeur ||| first	count=1
function_name	[function_name_1] géométrie ||| [function_name_2] [function_name_1]	count=1
function_name	incluant les ||| newt form destroy	count=1
function_name	considère array ||| push	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] mlt [function_name_2]	count=8
namespace	verrou sur la ||| function	count=1
arg_pair	entraîne une ||| array $problem array $weights	count=1
function_name	les variables var .. ||| push	count=1
arg_pair	de queues ||| string $qmanagername	count=2
function_name	record dans ||| record	count=1
function_name	de succès ou false ||| cubrid	count=1
function_name	numéro d'erreur ||| errno	count=1
function_name	statistiques des champs ||| stats fields	count=3
arg_pair	à l'url repos_url ||| string $repos_url	count=1
arg_pair	configure la largeur de ||| float $width	count=1
function_name	et ||| size	count=1
arg_pair	empile ||| mixed $value1	count=1
arg_pair	d'astuces sql pour l'activation ||| mixed $condition	count=1
namespace	http ||| eventhttprequest	count=1
function_name	champs facet ||| facet	count=1
function_name	et sur ||| merge	count=1
namespace	la fonction ||| domdocument	count=1
arg_pair	une matrice de ||| resource $image array $matrix	count=1
function_name	de mémoire ||| delete	count=1
arg_pair	diverses options ||| resource $pdfdoc string $optlist	count=1
function_name	contrôle [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	pour un évènement ||| event	count=1
function_name	[function_name_1] la refermer ||| [function_name_1] [function_name_2]	count=1
function	instance glo [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	méthode ||| reflectionmethod	count=1
function_name	utilisée ||| module	count=1
namespace	spécifiée avec un traitement ||| imagick	count=1
function_name	méthode décompresse ||| decompress	count=1
namespace	l'exception sous ||| exception	count=2
arg_pair	fonction snmp2_get() ||| string $host string $community	count=1
arg_pair	lors de la ||| array $server array $writeoptions	count=1
return	appliqué à ||| bool	count=1
function	chiffrement [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	modules ||| module	count=1
function_name	même que setcookie() excepté ||| setrawcookie	count=1
function_name	protège les ||| escape	count=2
function_name	crée une paire ||| stream socket pair	count=1
function_name	une condition pour une ||| condition	count=1
function_name	géométrie de ||| page	count=2
function	les messages [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	où les ||| error	count=1
return	contient les métadonnées ||| mongodb	count=1
arg_pair	la fonction imap_open() pour ||| resource $imap_stream	count=1
function_name	compte les éléments dans ||| iterator count	count=1
function_name	tableau associatif ou ||| array	count=1
arg_pair	pour un ||| mixed $callback	count=1
function_name	finale ||| final	count=1
function_name	que pour stocker des ||| set	count=1
return	le verrou exclusif obtenu ||| int	count=1
function	[function_name_1] une séquence ||| [arg_pair_2] [function_name_1]	count=3
function_name	pclose() ||| proc	count=1
function_name	par la ||| newt form destroy	count=1
function_name	l'objet com ||| com event	count=1
function_name	l'url complète de ||| url	count=1
namespace	déplace l'itérateur à ||| limititerator	count=1
function_name	retourne la valeur courante ||| get	count=1
function_name	l'endroit ||| fann set error	count=1
function_name	largeur ||| width	count=4
function_name	avec une image reconstruite ||| image	count=1
return	données du ||| array	count=1
function_name	survenue lors ||| error	count=2
function_name	d'activation pour la couche ||| set activation function	count=1
arg_pair	de la suppression ||| array $protocoloptions	count=1
function_name	la page sous la ||| image page	count=1
function_name	la ||| getlock	count=1
function_name	toutes les valeurs ||| get values	count=2
function_name	[function_name_1] obsolète ||| [function_name_1] [function_name_2]	count=4
function_name	le nom court d'un ||| frame short name	count=1
function_name	un identifiant donné ||| get element	count=1
arg_pair	type d'éléments à ||| resource $id string $elementset	count=1
arg_pair	destfp ||| resource $destfp	count=1
arg_pair	le chemin du domaine ||| string $directory	count=1
function_name	pour ||| set include path	count=2
function_name	fonction cubrid_lob2_size64() est utilisée ||| cubrid lob2 size64	count=1
function_name	contenant la ||| octdec	count=1
arg_pair	installe un objet ||| mysqli $mysqli_connection	count=1
function_name	un identifiant donné ||| by	count=1
function_name	numérique qui améliore ||| median	count=1
function_name	ou plusieurs fonctions pour ||| function	count=1
namespace	traitement appliqué ||| imagick	count=1
function_name	statistiques de ||| stats	count=1
arg_pair	service daemon est permis ||| string $daemon string $address	count=1
function_name	valeur ||| value	count=2
function_name	l'image spécifiée avec ||| preview images	count=1
function_name	[function_name_1] la couleur ||| [function_name_2] [function_name_1]	count=6
function_name	contexte actif et ||| active symbols	count=1
function_name	libère les ressources mémoires ||| destroy	count=1
arg_pair	méthode est une ||| string $key mixed $value	count=1
function_name	retourne false pour la ||| end	count=1
function_name	un squelette ||| construct	count=1
function	du champ [arg_pair_2] ||| [function_name_1] name resource $result [arg_pair_2]	count=1
function_name	retourne un entier ||| get	count=1
function_name	tous les composants ||| form destroy	count=1
function_name	a ||| set	count=1
function_name	chiffrement de ||| mcrypt	count=1
arg_pair	voir la classe mongodbref ||| mixed $document_or_id	count=1
arg_pair	fusionne la ||| solrdocument $sourcedoc bool $overwrite	count=1
function_name	document xml depuis la ||| xml	count=1
function_name	memcached::append() ||| append by key	count=2
arg_pair	temporairement le monitoring d'une ||| resource $fam resource $fam_monitor	count=1
function_name	de complétion ||| readline completion	count=1
namespace	la base de ||| mongocursor	count=1
namespace	tous les paramètres ||| solrparams	count=1
namespace	sur ||| function	count=4
namespace	d'une chaîne ||| sdo_das_xml	count=1
arg_pair	de cartes ||| string $threshold_map	count=1
namespace	méthode ne doit pas ||| pharfileinfo	count=1
namespace	le fichier représenté par ||| function	count=1
namespace	de la bibliothèque rrdtool ||| function	count=1
function_name	document pdf pour ||| set file	count=1
function_name	à guillemets string ||| qprint	count=1
function_name	dans un fichier ||| uudecode all	count=1
return	ev::run() ||| int	count=2
function_name	erreur d'une erreur ||| cubrid error	count=1
function_name	met à l'échelle ||| fann scale input	count=1
function_name	surveillance ||| watch	count=1
function_name	récupère ||| get property	count=1
function_name	durée du ||| include path	count=1
arg_pair	modifie les attributs ||| resource $fd	count=1
function_name	documents similaires ||| mlt count	count=4
namespace	utilisées par la forme ||| function	count=1
arg_pair	par =?iso-8859-1?... est ||| string $field_value	count=1
return	de caractères ||| string	count=13
arg_pair	de domaine unicode ||| string $domain int $options	count=1
arg_pair	aux options qui ||| array $options	count=1
function_name	s'interrompt si elle prend ||| eio set max	count=1
arg_pair	caractères ||| string $localname	count=1
function_name	similaire à pclose() ||| proc	count=1
namespace	tous les fichiers encodés ||| function	count=1
function_name	msql et ||| msql data	count=1
function_name	défini l'uri de base ||| set base uri	count=1
function_name	sauve ||| save	count=1
function_name	réponse ||| command handle response	count=1
function_name	la prochaine ||| cubrid next result	count=1
function_name	la fréquence à partir ||| frequency	count=1
function_name	image représentant la ||| stereo image	count=1
arg_pair	le chemin path à ||| string $path	count=2
arg_pair	nombre de jours ||| int $year	count=1
function_name	au lieu ||| internal	count=1
arg_pair	de fichier fd ||| mixed $fd	count=2
function	le md5 [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	supprime le ||| remove	count=1
function_name	page ||| open pdi page	count=2
function_name	lignes de ||| dbplus rzap	count=1
namespace	un fichier au sein ||| pharfileinfo	count=1
function_name	écrit le [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	qui sont sur ||| destroy	count=1
arg_pair	message d'erreur à l'historique ||| string $message int $message_type	count=1
function_name	retourne une nouvelle ||| get	count=1
function_name	le serveur postgresql ||| pg	count=1
function_name	données fbsql ||| fbsql	count=1
namespace	d'un lob est ||| oci-lob	count=1
function_name	récupère les blob/clob en ||| get	count=1
function_name	[function_name_1] trace pour ||| [function_name_2] [function_name_1]	count=1
function_name	la limite supérieure dans ||| include upper bound	count=1
function_name	printable créée suivant les ||| printable	count=1
function_name	l'échelle d'une colonne ||| field scale	count=3
arg_pair	statue un fichier sur ||| string $path	count=1
function_name	paramètre ||| add	count=1
function_name	retourne la méthode de ||| entry compressionmethod	count=1
function_name	l'évènement précisé et libère ||| buffer free	count=1
arg_pair	hyperlien à la ||| float $lly float $urx	count=1
function_name	un point de surveillance ||| watch	count=1
return	à la fonction ||| string	count=2
function_name	retourne le nombre ||| num fields	count=1
function_name	le serveur distant et ||| ssh2	count=1
arg_pair	temporairement ||| resource $fam resource $fam_monitor	count=1
function_name	l'étape d'erreur ||| step error	count=2
namespace	modifie la ||| function	count=1
arg_pair	position représentant une ||| resource $stmt	count=1
namespace	la base de données ||| mongocursorinterface	count=1
function_name	point vert ||| set image green primary	count=1
namespace	de l'application ||| gearmanclient	count=1
function_name	retourne la ||| memory get	count=2
function_name	un ||| element by	count=2
function_name	les fichiers encodés qui ||| uudecode all	count=1
arg_pair	la fonction mktime() excepté ||| int $year	count=2
function_name	essaie de supprimer ||| drop db	count=1
function_name	rappel à appeler lorsqu'une ||| created callback	count=1
function_name	localtime ||| localtime	count=1
function_name	reste ||| mod	count=1
namespace	dans ||| arrayobject	count=1
function_name	réplication ||| get hosts	count=1
function_name	lequel on doit s'arrêter ||| upper bound	count=1
function_name	de la bibliothèque rrdtool ||| rrd	count=1
function_name	dessous de la ||| ps continue	count=1
namespace	cette fonction peut ||| mongolog	count=1
function_name	détaillées sur [function_name] caractères chargée ||| pdf info [function_name]	count=1
arg_pair	needle dans la chaîne ||| string $needle	count=2
arg_pair	identique ||| string $pattern string $string	count=1
function_name	couleur spécifiée sous ||| color value	count=1
function_name	version courante de php ||| phpversion	count=1
function_name	en incluant les composants ||| newt	count=1
function_name	les composants qui sont ||| form	count=1
arg_pair	à la ||| int $minute	count=1
function_name	crée un fichier spécial ||| posix	count=1
function_name	premier ||| first	count=5
function_name	moteur de visualisation ||| view	count=1
function_name	annule ||| event del	count=1
arg_pair	fichier remote_file ||| string $remote_file	count=1
arg_pair	cette fonction ||| string $pattern	count=1
arg_pair	établit une ||| string $host	count=1
function_name	précisé et libère les ||| buffer free	count=1
return	fois par ||| void	count=1
function_name	dns associées à ||| dns get	count=1
namespace	la valeur ||| function	count=1
function_name	méthode phar::startbuffering() ||| start buffering	count=1
arg_pair	les métadonnées ||| mongodb $db	count=1
function_name	la fonction glob() ||| glob	count=1
function_name	de transformation [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	protéger tous ||| escape	count=1
arg_pair	établir l'environnement ||| string $dbname	count=1
function_name	la ligne lue dans ||| mysql fetch	count=1
arg_pair	fait ||| string $pattern	count=1
function_name	[function_name] héritage de ||| [function_name]	count=1
function_name	[function_name_1] de sortie ||| [function_name_1] steepness [function_name_2]	count=1
function_name	de l'itération lorsque ||| iteration	count=1
return	4 mb par ||| bool	count=1
function_name	récupère les méta-données ||| get metadata	count=2
function_name	contexte ||| context new	count=2
function_name	chaque réception d'une notification ||| gupnp service proxy add notify	count=1
arg_pair	paramètre old correspond à ||| int $old	count=1
return	tous les ||| array	count=5
arg_pair	un ||| array $values	count=2
function_name	détails sur [function_name] ||| [function_name]	count=1
arg_pair	le calendrier calendar ||| int $calendar int $month	count=2
arg_pair	cette méthode crée une ||| bool $preserve_cloned_files	count=1
function	rappel [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] racine ||| [function_name_2] [function_name_1]	count=7
function_name	le dictionnaire ||| closedict	count=1
function_name	type auto_increment ||| insert id	count=1
function_name	du document utilisée ||| facet enum cache	count=1
function_name	de stagnation ||| stagnation epochs	count=2
return	corrélation entre les ||| void	count=1
return	une requête soap ||| void	count=1
return	soap appelle les ||| void	count=1
function_name	méthode ne doit ||| construct	count=1
arg_pair	héberge la file ||| resource $queue	count=1
return	sur un serveur ||| bool	count=1
function_name	réponse xml depuis ||| xml response	count=2
function_name	à partir d'une chaîne ||| load string	count=1
arg_pair	mktime() excepté le ||| int $month	count=1
function_name	pour ||| set multi by	count=1
function_name	fonction d'activation pour la ||| set activation	count=1
return	écrit du texte ||| bool	count=1
namespace	et les ||| arrayobject	count=1
function_name	d'instance xml ||| string	count=1
function_name	d'espace de ||| elements by tag	count=1
return	attribut dans ||| int	count=1
function_name	pendant l'entrainement rprop ||| fann get rprop	count=1
return	normalement en d'autres ||| int	count=1
function_name	méthode statique create() ||| types	count=1
function_name	par la dernière commande ||| errno	count=1
namespace	son exécution ||| collectable	count=1
namespace	les données du tampon ||| eventbuffer	count=1
function_name	paramètres au serveur ||| params	count=1
function	exécute une [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	le fichier ||| function	count=1
return	l'endroit ||| void	count=1
return	la position ||| bool	count=1
arg_pair	dans ||| int $options string $charset	count=1
function_name	depuis une fonction fournie ||| from callback	count=1
function_name	sélectionne ||| fbsql db query	count=2
function_name	maximale d'une [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	dans un fichier ||| string $dest int $flags	count=1
arg_pair	document xml depuis la ||| int $options	count=1
arg_pair	ou plusieurs ||| mixed $keys	count=1
function_name	[function_name_1] de ||| [function_name_2] [function_name_1]	count=42
function_name	qui avaient été ajoutés ||| newt form	count=1
function_name	du champ de ||| field	count=1
function_name	gris ||| setgray	count=2
return	le document ||| string	count=1
function_name	récupère l'extension du fichier ||| get extension	count=1
function_name	ligne ||| fetch row	count=6
function_name	couleur spécifiée ||| color	count=1
function_name	fichier spécial ou ||| posix	count=1
arg_pair	enregistre le résultat dans ||| int $flags	count=1
function_name	un lot d'objets résultants ||| batch size	count=1
namespace	lorsque la ||| recursivetreeiterator	count=1
namespace	ressources qui y ||| function	count=1
namespace	les informations de ||| function	count=1
function_name	la couleur de ||| image background color	count=2
arg_pair	page cookie ... ||| int $pagesize	count=1
function_name	de dernier accès au ||| atime	count=1
arg_pair	x509cert et ||| bool $shortnames	count=1
function_name	pile ||| array	count=1
function_name	récupère les connexions ||| get connection array	count=1
namespace	imagick a été ||| imagick	count=1
function_name	le formatage d'une ligne ||| pdf info textline	count=1
function_name	trace dans les ||| trace	count=1
function_name	returns group [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	sur l'intensité [function_name] chaque ||| threshold [function_name]	count=1
function_name	la fin ||| add buffer	count=1
namespace	de l'objet ||| solrparams	count=1
function_name	maximale d'une ligne ||| max line	count=1
namespace	été réservé par ||| function	count=1
arg_pair	la propriété ||| string $property_name string $property_value	count=1
return	ou une ||| bool	count=1
arg_pair	anonyme ||| string $code	count=1
function_name	de sortie puis l'efface ||| ob get clean	count=1
function_name	est utilisée pour récupérer ||| cubrid column names	count=1
arg_pair	chaîne c dans l'image ||| string $c	count=1
function_name	ou les deux pour ||| set watermark	count=1
arg_pair	son identifiant bid ||| int $bid	count=2
function_name	avec vérification des ||| array udiff assoc	count=1
function_name	à la casse), et ||| grapheme stristr	count=1
arg_pair	le réseau complet dans ||| string $configuration_file	count=1
function_name	crée un ||| create stopped	count=4
function_name	le schéma relaxng à ||| set relax ngschema	count=1
function_name	recherche une police ||| pdf load font	count=1
arg_pair	donnée pointant vers un ||| string $filename	count=1
function_name	retourne [function_name_2] ||| [function_name_1] image [function_name_2]	count=3
function_name	fichier qui ne peuvent ||| set metadata	count=1
function_name	être utilisée pour ||| set module	count=1
namespace	une instance imagick ||| imagick	count=1
function_name	insert effectuée ||| insert row	count=1
function_name	pclose() ||| close	count=1
function_name	[function_name_1] ou une ||| [function_name_2] [function_name_1]	count=3
function_name	s'interrompt si elle prend ||| poll time	count=1
function_name	un sommaire de leur ||| fetch overview	count=1
function_name	retourne le statut ||| result status	count=1
function_name	extrait dans un fichier ||| mailparse	count=1
function_name	champ fdf ||| fdf set	count=1
arg_pair	src_y [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	l'époque maximale de ||| cascade max out epochs	count=1
arg_pair	nom de domaine unicode ||| string $domain int $options	count=1
function_name	libère un résultat mnogosearch ||| udm free res	count=1
namespace	pool à collecter ||| pool	count=1
return	une valeur ||| float	count=1
arg_pair	une connexion full-duplex ||| resource $stream	count=1
arg_pair	cartes de seuil ||| int $channel	count=1
function_name	la base de données ||| dbase	count=1
function_name	de rappel timestamp ||| timestamp	count=1
function_name	compile un ||| opcache compile	count=1
function_name	forme en incluant les ||| destroy	count=1
function_name	est à la fin ||| eof	count=1
arg_pair	chaîne str1 en ||| string $str1	count=1
arg_pair	etend la classe class ||| string $parent	count=1
return	bibliothèque ||| string	count=1
function_name	la tangente ||| trader tan	count=1
arg_pair	à une colonne ||| mixed $column	count=1
function_name	lit [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	travers ||| weights	count=1
function_name	distant en ||| ssh2 sftp	count=1
arg_pair	une ||| float $height	count=1
namespace	pclose() ||| function	count=1
return	courant ||| bool	count=2
function_name	les ||| tag	count=2
function_name	extensions ||| extensions	count=1
function_name	la file d'attente s'interrompt ||| max poll	count=1
namespace	la dernière requête snmp ||| snmp	count=1
function_name	valeur globale de l'espace ||| colorspace	count=1
function_name	sont ||| form	count=1
namespace	si [namespace] ||| [namespace]	count=3
return	de compression utilisée sur ||| string	count=1
function_name	des informations issus ||| curl multi info	count=1
arg_pair	descripteur de fichier fd ||| mixed $fd	count=2
arg_pair	: la ||| string $prefix	count=1
return	la réception d'un des ||| int	count=1
function_name	les données du ||| buffer	count=1
return	consiste en ||| bool	count=1
return	peuvent ||| void	count=1
function_name	pour insérer un ||| cubrid set add	count=2
function	[function_name_1] d'un entier ||| [function_name_1] [arg_pair_2]	count=1
return	la seconde contient ||| mongodb	count=1
arg_pair	strcmp() ||| string $str1	count=1
arg_pair	le paramètre object_id ||| string $object_id string $timeout	count=1
function_name	est passé par ||| is passed by	count=2
function_name	identique à [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	position de la ||| string $encoding	count=1
function_name	récupère des informations internes ||| get internal info	count=1
namespace	fonction est similaire ||| domdocument	count=1
function_name	différence ||| array diff uassoc	count=2
function_name	un [function_name] ||| add [function_name]	count=3
function_name	récupère les [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	informations de version de ||| rrd version	count=1
function_name	[function_name_1] gabarit ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] un constructeur ||| [function_name_1] [function_name_2]	count=1
function_name	déchargement ||| generic deinit	count=2
function_name	les caractères invisibles en ||| trim	count=1
function_name	la ||| fam cancel	count=1
function_name	du jeu ||| db2 field	count=4
function_name	retourne la taille de ||| get size	count=1
function_name	file de messages ||| msg queue	count=1
function	ligne depuis [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	de la [namespace] en utilisant ||| [namespace]	count=1
function_name	[function_name_1] maximale de ||| [function_name_2] key [function_name_1]	count=1
function_name	la chaîne d'entités html ||| mb decode numericentity	count=1
function_name	seconde contient le ||| construct	count=1
arg_pair	une chaîne str ||| string $str	count=1
function_name	envoie [function_name] le ||| sqlsrv send stream [function_name]	count=1
function_name	taille ||| strlen	count=1
function_name	postgresql associée au résultat ||| pg	count=1
function_name	libère les ||| free result	count=1
function_name	le système de ||| fstatvfs	count=1
function_name	retourne la méthode ||| get coding	count=1
function_name	température ||| temperature	count=1
function_name	cubrid_error_msg() est ||| msg	count=1
function_name	les informations ||| eio stat	count=1
namespace	entrée définie par son ||| ziparchive	count=2
function_name	[function_name_1] caractères uri ||| [function_name_1] root element [function_name_2]	count=1
function_name	déplace le curseur sur ||| move	count=1
function_name	une équivalence de bits ||| eqv	count=1
function_name	trace de ||| trace as string	count=1
return	doit être appelé une ||| void	count=1
arg_pair	listant ||| string $schema string $table-name	count=5
function_name	version mineure ||| minorversion	count=1
function_name	la forme et tous ||| newt form	count=1
namespace	est identique ||| function	count=1
function_name	réalisation de la tâche ||| task	count=2
function_name	zéro) ||| position	count=1
function_name	détermine si un fichier ||| is	count=1
function_name	écrase la ||| erase	count=1
function_name	[function_name_1] court d'une ||| [function_name_2] [function_name_1]	count=2
function_name	prochaine ligne ||| cubrid fetch	count=1
arg_pair	dans set ||| array $set	count=1
arg_pair	xml basé sur des ||| string $src string $diff	count=1
function_name	instance glo ||| cubrid load from glo	count=1
arg_pair	attribut dans ||| array $attributes	count=1
arg_pair	et ||| array $array	count=1
function_name	des antislashs devant ||| string	count=1
function_name	sert à fermer ||| close	count=1
return	cherche si un ||| bool	count=1
namespace	s'est terminée ce travail ||| gearmanjob	count=1
arg_pair	alpha degrés dans ||| float $alpha	count=1
function_name	informations du dernier ||| info table	count=1
function_name	pour stocker ||| metadata	count=1
arg_pair	fichiers et des ||| array $files	count=1
function_name	avec la rfc 3986 ||| rawurlencode	count=1
function_name	sert à détruire un ||| shmop delete	count=1
arg_pair	interne de résultat ||| resource $result int $row_number	count=1
function_name	[function_name_1] associée ||| [function_name_2] [function_name_1]	count=3
return	d'un des signaux ||| int	count=1
arg_pair	la ||| resource $relation	count=1
function_name	forme ||| form destroy	count=4
function_name	[function_name_1] base ||| [function_name_2] [function_name_1]	count=2
function_name	une nouvelle instance de ||| new	count=1
namespace	de la [namespace] de ||| [namespace]	count=1
function_name	retaille ||| chop	count=1
function_name	type d'algorithme à ||| method	count=1
namespace	de champs du document ||| solrinputdocument	count=1
return	pour récupérer les ||| array	count=1
arg_pair	fournis en tant qu'options ||| resource $pdfdoc string $tag	count=1
function_name	écrase la partie du ||| erase	count=1
function_name	afficher [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	dans la boîte ||| int $options string $charset	count=1
function_name	[function_name_1] de l'entrée ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] la température ||| [function_name_2] [function_name_1]	count=1
return	les paramètres ||| int	count=1
function_name	retourne un jeu de ||| db2 procedure columns	count=1
namespace	tampon fourni ||| eventbuffer	count=1
function_name	de la base ||| db	count=1
function_name	réinitialise le ||| reset	count=1
function_name	définit le [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	identique à ||| string $pattern	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] max word [function_name_2]	count=2
namespace	définit le ||| function	count=2
function_name	ligne ||| ibase fetch row	count=1
arg_pair	original définie ||| string $alias	count=1
function_name	retire un gestionnaire ||| remove handle	count=1
function_name	récupère la ||| get class	count=1
arg_pair	universal database ibm ||| string $username	count=1
function_name	centre [function_name] ||| swirl [function_name]	count=1
function_name	requête ||| add filter query	count=1
function_name	à l'esclave ou bien ||| mysqlnd ms query	count=1
function_name	le md5 ||| md5	count=2
arg_pair	contient le ||| string $prefix	count=1
namespace	le ||| tidynode	count=1
function_name	le dossier d'archives spécifié ||| zip entry	count=1
function_name	postgresql et sauvegarde ||| pg	count=1
function_name	la taille du flux ||| stream size	count=1
arg_pair	d'un entier ||| mixed $number int $base	count=1
function_name	mssql_connect() ||| mssql	count=1
function_name	[function_name_1] apache ||| [function_name_2] get [function_name_1]	count=2
namespace	la fin de l' ||| eventbuffer	count=1
function_name	effectue un test sur ||| test data	count=1
function_name	la position courante du ||| ps show	count=1
function_name	fonction geoip_setup_custom_directory() va modifier ||| geoip setup custom directory	count=1
function_name	remplit un ||| pdf fill pdfblock	count=1
namespace	tampon fourni par ||| eventbuffer	count=1
function_name	tailles de clés supportées ||| enc get supported key sizes	count=1
function_name	ressources mémoires utilisées ||| destroy	count=1
function_name	les itérateurs ajoutés avec ||| array iterator	count=1
function_name	[function_name_1] le ||| function resource [function_name_2] module [function_name_1] string $algorithm string $algorithm_directory	count=1
arg_pair	à la fonction mktime() ||| int $month	count=1
function_name	connexion à ||| connect uri	count=1
function_name	linéarise ||| serialize	count=1
function_name	radius ||| radius create	count=1
namespace	de résultats à ||| mongocursorinterface	count=1
function	com [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	rationnelle utilisée ||| solrquery	count=1
function_name	associatif contenant les en-têtes ||| headers	count=1
function_name	le type de donnée ||| type	count=1
return	en sautant tous ||| bool	count=1
arg_pair	une valeur fournie ||| float $value	count=1
function_name	verrou de lecture sur ||| lock read	count=1
function_name	au début de celui-ci ||| gzrewind	count=1
arg_pair	le gestionnaire font retourné ||| resource $pdfdoc int $font	count=1
arg_pair	un message message dans ||| string $message	count=1
return	d'un fichier sur ||| int	count=1
function_name	son exécution ||| set	count=1
arg_pair	la fonction mktime() ||| int $minute	count=1
function_name	fichier fourni ||| uudecode	count=1
function_name	les ||| error	count=1
function_name	un jeu de réplication ||| hosts	count=1
namespace	terminée ce travail ||| gearmanjob	count=1
function_name	prochaine ||| ingres next	count=1
function_name	récupère ||| get line	count=1
function_name	filtre d'un ||| filter remove	count=1
function_name	la ||| dbase numfields	count=2
return	pour tracer ||| void	count=1
function_name	[function_name_1] mime ||| string image type to [function_name_2] [function_name_1]	count=2
arg_pair	de seconds secondes ||| int $seconds	count=1
arg_pair	bloc de mémoire partagée ||| int $start	count=1
namespace	objet lorsque ||| collectable	count=1
function_name	serveur racine ||| root device stop	count=1
function_name	à la ||| ps show	count=1
return	typiquement parcourt un lot ||| mongocommandcursor	count=1
arg_pair	paramètres passés sont ||| int $year	count=2
namespace	qu'elle ignore la casse ||| function	count=1
function_name	la représentation en ||| serialize	count=1
function_name	des messages spécifiés ||| imap fetchbody	count=2
function_name	un caractère de l'entrée ||| char	count=1
function_name	récupère la distance ||| get	count=1
function_name	pdf pour ||| set	count=1
arg_pair	segment de subject qui ||| string $subject	count=1
arg_pair	clé key existe ||| mixed $value	count=1
return	le ||| mongocursor	count=2
function_name	le statut de la ||| status	count=1
function_name	retourne toutes ||| get	count=2
arg_pair	à une ressource bbcode_container ||| resource $bbcode_container	count=1
function_name	est passé par référence ||| is passed by reference	count=1
function_name	récupérer les données blob/clob ||| cubrid lob export	count=1
return	tri ||| void	count=1
function_name	à la position suivante ||| next	count=1
arg_pair	les caractères ||| string $string	count=1
function_name	ajoute ||| bbcode add element	count=1
function_name	les tailles de clés ||| sizes	count=2
function_name	région d'une ||| region	count=1
function_name	définit des ||| set	count=1
function_name	et retourne un sommaire ||| overview	count=1
namespace	[namespace] en octets ||| [namespace]	count=2
arg_pair	le paramètre pos ||| int $pos	count=1
function_name	[function_name_1] page ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] dernière requête ||| [function_name_2] [function_name_1]	count=9
arg_pair	[arg_pair] l'instance ||| [arg_pair]	count=1
function_name	[function_name_1] images en ||| [function_name_1] [function_name_2]	count=1
function_name	forme en incluant les ||| newt	count=1
function_name	le [function_name_2] ||| solrresponse string [function_name_1] [function_name_2]	count=1
function_name	la gravité courante ||| gravity	count=1
function_name	conteneur de ||| set default stub	count=1
arg_pair	à ||| string $function_name	count=1
function_name	flux à utiliser avec ||| stream wrapper register	count=1
arg_pair	son contenu dans un ||| resource $connection	count=1
function_name	extrait et ||| extract part file	count=1
function_name	pagination taille de ||| paged result	count=1
function_name	l'itérateur [function_name_2] ||| [function_name_2] first [function_name_1]	count=1
function_name	[function_name_1] libère ||| [function_name_2] [function_name_1]	count=1
return	élément avec un ||| domelement	count=1
arg_pair	empile les variables ||| mixed $value1	count=1
function_name	subscribe ||| subscribe	count=1
arg_pair	la chaîne str ||| string $str string $from	count=1
arg_pair	format ascii pem ||| array $configargs	count=1
function_name	si solrquery::terms_sort_count les ||| sort	count=1
arg_pair	correspondant à la position ||| resource $result	count=1
function_name	les liens ajoutés ||| border color	count=1
namespace	la base ||| tokyotyrant	count=1
function_name	route par ||| route	count=1
function_name	sera démarré ||| launchlink	count=1
function_name	récupère la réponse brute ||| raw response	count=1
arg_pair	sont ||| int $minute	count=1
namespace	file d'attente ||| function	count=1
return	contenant du bruit ||| gmagick	count=1
function_name	calendrier grégorien : ||| gregoriantojd	count=1
function_name	d'attente s'interrompt si ||| max	count=1
function_name	fonction crée ||| create	count=4
function_name	de compression ||| entry	count=1
function_name	[function_name_1] attribut ||| [function_name_2] [function_name_1]	count=8
arg_pair	du résultat result ||| resource $result int $type	count=1
function_name	fonctions d'une ||| functions	count=1
function_name	les modificateurs ||| modifiers	count=1
return	tableau array en ||| bool	count=1
function_name	[function_name] digitale ||| openssl pkcs7 [function_name]	count=1
function_name	indexé numériquement contenant ||| row	count=1
function_name	le nom [function_name_2] ||| [function_name_2] [function_name_1] resource $result int $index	count=4
function_name	[function_name_1] mssql_fetch_array() ||| [function_name_2] [function_name_1]	count=1
function	allant de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	le script php ||| samconnection	count=1
function_name	fichier fourni et extrait ||| mailparse uudecode	count=1
function_name	par ce socket ||| socket	count=1
arg_pair	à cet ||| int $port	count=1
function_name	ligne de données dans ||| fetch row	count=1
arg_pair	résultat result sur ||| resource $result	count=1
namespace	cette méthode implémente ||| arrayobject	count=1
function_name	nouvelle csrcertificate ||| csr new	count=1
arg_pair	son nom ||| string $name	count=1
namespace	se déplace vers ||| norewinditerator	count=1
function_name	une base filepro ||| filepro rowcount	count=1
namespace	ajoutés à ||| function	count=1
function_name	d'espace de ||| elements	count=1
function_name	est similaire à pclose() ||| proc	count=1
function_name	les composants qui ||| form	count=2
namespace	lorsqu'un des objets splsubject ||| splobserver	count=1
arg_pair	la fonction cubrid_lob_send() lit ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	des antislashs devant ||| escape	count=1
function_name	méthode retourne [function_name_2] ||| mongogridfsfile resource [function_name_1] [function_name_2]	count=4
function_name	connexion [function_name_2] ||| function resource [function_name_2] new [function_name_1]	count=1
function_name	l'événement de [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la distorsion spécifiée ||| distortions	count=1
return	spécifiée ||| resource	count=1
namespace	serveur de ||| gearmanjob	count=1
namespace	le code du ||| gmagickdraw	count=1
function_name	seul le ||| rewind	count=1
arg_pair	supportent [arg_pair] pages compressées ||| [arg_pair]	count=1
function_name	partir ||| init	count=1
arg_pair	=?iso-8859-1?... est la valeur ||| string $field_name string $field_value	count=1
function_name	sphinxclient::addquery obtient ||| queries	count=1
function_name	month de l'année ||| in month	count=1
arg_pair	query_data ||| string $numeric_prefix	count=1
function_name	l' ||| add	count=1
function_name	annule roll back ||| rollback	count=1
function_name	collections ||| construct	count=1
arg_pair	src_w et la hauteur ||| int $src_w	count=1
namespace	ou false ||| function	count=1
arg_pair	donnée pointant vers un ||| float $ury string $filename	count=1
function_name	la première paire ||| yp first	count=1
function_name	ou désactive la bufferisation ||| set buffering	count=1
function_name	maximale de ||| algo	count=1
return	les chaînes alphanumériques dans ||| void	count=1
namespace	version sérialisée du hash ||| quickhashinthash	count=1
function_name	valeur d'un attribut ||| attribute	count=1
function_name	à ||| mysql	count=1
function_name	s'y ||| mailparse uudecode all	count=2
function_name	au sein d'une archive ||| is	count=1
function_name	frontbase ||| fbsql	count=3
return	été ajoutés à ||| void	count=1
return	domnodelist ||| domnodelist	count=1
return	fichiers ||| array	count=1
return	fichier fourni ||| array	count=1
function_name	fonction ré-initialise toutes les ||| reset	count=1
function_name	le référentiel ||| svn	count=2
function_name	définit la valeur du ||| set color	count=1
arg_pair	une ||| resource $image float $inputgamma	count=1
function_name	propriété statiques ||| static property value	count=2
function_name	ignorant la casse ||| ireplace	count=1
namespace	de ||| function	count=20
function_name	logo zend ||| zend logo guid	count=2
function_name	similaire ||| element by id	count=2
arg_pair	champ ||| resource $fdf_document string $fieldname	count=1
function_name	ligne suivante de la ||| next	count=1
return	la base ||| mixed	count=2
function_name	un verrou sur ||| getlock	count=1
namespace	totalité ||| function	count=1
function_name	le noeud courant ||| node	count=1
namespace	si elle a ||| function	count=1
namespace	http associées ||| eventhttprequest	count=1
function_name	de gris ||| pdf setgray	count=1
arg_pair	la chaîne needle dans ||| string $needle	count=1
function_name	le message d'erreur de ||| error	count=1
rep	courante [rest_2] ||| [namespace_1] [rest_2]	count=2
arg_pair	de lecture ||| resource $id	count=1
function_name	d'extraits mis [function_name] générer par ||| get [function_name]	count=1
function_name	la fonction cubrid_list_dbs() ||| cubrid db	count=1
function_name	est ||| is valid	count=1
arg_pair	modifie les attributs du ||| array $options	count=1
function_name	chaîne de caractères ||| escape string	count=1
namespace	format de [namespace] ||| [namespace]	count=1
arg_pair	fait qu'elle ignore ||| string $string	count=1
function_name	redirections automatiquement ; c'est ||| enable redirects	count=1
function_name	processus ||| proc	count=1
arg_pair	un objet ||| int $bid	count=1
namespace	l'inclure sans risque dans ||| sqlite3	count=1
function_name	tous les composants ||| newt form destroy	count=1
namespace	yar_client sur un ||| yar_client	count=1
function_name	fichier dont on connaît ||| fstat	count=1
namespace	dernière requête ||| sqlite3	count=1
namespace	le fait ||| function	count=3
arg_pair	son identifiant packet_id ||| resource $packet_id	count=1
arg_pair	de la recherche ||| string $string	count=1
arg_pair	l'aide de deux ||| mongodb $db	count=1
function_name	privée ||| private	count=2
function_name	peut être utilisé pour ||| maxdb debug	count=1
arg_pair	fonction indique si ||| bool $flag	count=1
function_name	commence ||| mqseries begin	count=2
function_name	socket créé précédemment avec ||| socket accept	count=1
function_name	[function_name_1] racine ||| [function_name_1] [function_name_2]	count=1
namespace	fin ||| mongocursorinterface	count=1
function_name	récupère [function_name_2] ||| [function_name_1] stream [function_name_2]	count=1
function_name	avec les statistiques ||| stats	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] int $pri [arg_pair_1]	count=4
function_name	dans ||| langdepvalue	count=1
arg_pair	indiqué dans set ||| array $siginfo	count=1
function_name	libxml standard et ||| libxml use internal	count=1
function	[function_name_1] avec event_add() ||| [function_name_1] [arg_pair_2]	count=2
function_name	la prochaine ||| ingres next	count=1
arg_pair	un niveau ||| resource $p	count=2
function_name	[function_name_1] la largeur ||| [function_name_1] [function_name_2]	count=3
function_name	les tailles de ||| sizes	count=2
function_name	spécifié du fichier rrd ||| rrd	count=1
arg_pair	si [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	lors de ||| string $pattern	count=1
function	du premier [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	identique à la ||| close	count=1
function_name	d'erreur ||| error	count=10
function_name	[function_name_1] informations sur ||| [function_name_2] [function_name_1]	count=2
function_name	le contrôle de pagination ||| control paged result	count=1
arg_pair	deux variants ||| mixed $left mixed $right	count=2
function_name	trouvent ||| uudecode	count=1
arg_pair	pour l'activation de ||| mixed $condition	count=1
function_name	la page ||| page	count=4
function_name	prochain noeud ||| next	count=1
arg_pair	fonction de rappel ||| resource $proxy mixed $callback	count=1
arg_pair	str à ||| mixed $fd string $str	count=1
function	[function_name_1] contenu dans ||| [arg_pair_2] [function_name_1]	count=1
function_name	efface les ||| pg delete	count=1
function	méthode ajoute une ||| add int $key	count=1
arg_pair	envoi un message ||| string $message	count=1
function_name	sortie ||| output	count=8
function_name	plus ||| eio set max poll time	count=2
function_name	retire [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	elle ||| max poll	count=1
arg_pair	contrairement à strcmp() ||| string $str1 string $str2	count=1
arg_pair	de la valeur courante ||| resource $stmt	count=1
function_name	sqlite ou tente ||| sqlite	count=1
arg_pair	une ressource ||| resource $large_object	count=1
function_name	d'objets résultants et les ||| batch size	count=1
arg_pair	contient ||| string $prefix	count=2
namespace	courant simplexmliterator ||| simplexmliterator	count=1
arg_pair	ignore la casse des ||| string $string	count=1
namespace	l'événement est ||| event	count=1
function_name	un traitement appliqué ||| images	count=1
function_name	du script ||| include path	count=1
return	closedir() seul le ||| void	count=1
function_name	met à jour ||| px update	count=1
return	fin et que ||| bool	count=1
function_name	[function_name_1] le noeud ||| [function_name_2] [function_name_1]	count=1
function_name	moyenne d'un jeu ||| average	count=1
function_name	wddx ||| wddx deserialize	count=2
function_name	le sinus de chaque ||| sin	count=1
function_name	image avec du bruit ||| image	count=1
function_name	données ||| dbase	count=1
function_name	contexte de ||| context	count=3
arg_pair	localisation ||| resource $context string $location	count=1
namespace	données du ||| eventbuffer	count=1
function_name	de vérifier la présence ||| max dispatch interval	count=1
namespace	domattr ||| domattr	count=1
function	[function_name_1] imagetype_xxx ||| [arg_pair_2] [function_name_1]	count=1
function_name	de base ||| construct	count=1
function_name	sauvegarde ||| uopz backup	count=1
return	cette ||| domelement	count=1
function_name	[function_name] caractères ||| pdf info [function_name]	count=2
function_name	cette fonction libère les ||| form destroy	count=1
function_name	messages organisés [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	la version échappée de ||| cubrid real escape	count=1
return	serveur ||| mongocursor	count=1
function_name	récupère le nombre ||| pgsql get error	count=1
arg_pair	un ||| float $ury	count=1
function_name	rprop ||| fann get rprop	count=2
arg_pair	vers un programme qui ||| string $filename	count=1
arg_pair	le transfert ch ||| int $opt	count=1
return	une ||| array	count=1
function_name	le prochain [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	[function_name_1] l'identifiant ||| [function_name_2] [function_name_1]	count=1
function_name	définition de ||| meta data	count=1
arg_pair	des ||| string $key	count=1
function_name	les ressources ||| newt form	count=1
function_name	données ||| cubrid send	count=1
return	des statistiques sur ||| resource	count=1
function	[function_name_1] transfert ch ||| [function_name_1] resource $ch [arg_pair_2]	count=1
function_name	efface ||| pg delete	count=2
namespace	sqlstate ou ||| function	count=1
function_name	fichier ||| get	count=4
function_name	entrées de la ||| yp cat	count=1
function_name	logo zend en utilisant ||| zend logo guid	count=1
function_name	récupère [function_name_2] ||| [function_name_2] [function_name_1]	count=138
function_name	retourne le préfixe ||| prefix	count=1
function_name	image depuis ||| image	count=1
function_name	toutes les données du ||| add	count=1
function_name	stoppe une base ||| stop db	count=1
rest	[return_1] [function_2] ||| [return_1] ibase blob [function_2]	count=2
function_name	fonction extrait ||| grapheme extract	count=1
function_name	est utilisée pour modifier ||| set resource	count=1
function_name	fichiers encodés qui ||| uudecode	count=1
function_name	verrou d'écriture sur l'instance ||| cubrid lock	count=1
function_name	données dns associées ||| dns	count=1
namespace	et chargés par l'application ||| function	count=1
namespace	doit être appelé une ||| collectable	count=1
arg_pair	nombre left_operand à la ||| string $left_operand	count=1
function_name	la forme et tous ||| form destroy	count=1
function_name	un fichier ||| mknod	count=1
function_name	retourne un sommaire de ||| overview	count=1
function_name	retourne l'intervalle quantique de ||| get quantum range	count=1
arg_pair	de fond ||| mixed $background string $format	count=1
function_name	récupère [function_name_2] ||| [function_name_1] file [function_name_2]	count=2
function_name	est utile lors ||| urlencode	count=1
function_name	texte à la position ||| show	count=1
function_name	dns associées ||| dns	count=1
function_name	les précédents intervalles ||| elapsed time	count=1
arg_pair	cette fonction est ||| string $pattern	count=1
function_name	algorithmes de ||| algorithms	count=1
function_name	défini l'endroit ||| error	count=1
namespace	après un certain ||| mongocursor	count=1
arg_pair	envoi tous ||| callable $callback	count=1
function_name	par ||| add	count=1
function_name	0.0 et 1.0 ||| hsl	count=1
function_name	le statut ||| do status	count=1
arg_pair	que les paramètres passés ||| int $day int $year	count=1
namespace	iidentique à la ||| directory	count=1
return	false pour la ||| void	count=1
function	jacobi [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	envoi ||| boolean	count=1
function_name	être utilisée pour définir ||| set module	count=1
function	[function_name_1] occurrence ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	durant l'exécution ||| callable $failure_callback	count=1
function_name	et ||| form	count=1
function_name	[function_name_1] libère la ||| [function_name_1] [function_name_2]	count=1
function_name	de noms [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	est [function_name_2] ||| [function_name_2] [function_name_1]	count=40
arg_pair	cubrid_bind() ||| string $bind_value_type	count=1
function_name	classe ||| file class	count=1
arg_pair	de la propriété ||| string $property_name string $property_value	count=1
function_name	[function_name_1] préfixe de ||| [function_name_1] facet [function_name_2]	count=1
arg_pair	une requête aql brute ||| string $query string $dbpath	count=1
function_name	de caractères ||| string	count=2
function_name	résultats [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	la file d'attente s'interrompt ||| eio set max poll	count=1
arg_pair	une nouvelle définition de ||| string $optlist	count=1
arg_pair	calcule l'intersection ||| array $array1 array $array2	count=3
arg_pair	le fait que ||| int $day	count=1
function_name	qui avaient été ajoutés ||| destroy	count=1
return	elle prend ||| void	count=1
function_name	aux lettres ||| imap get quota	count=1
arg_pair	var .. ||| array $array	count=1
function_name	ajoute un [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	l'agent ||| gearmanworker	count=2
function_name	supprime toutes ||| dbplus	count=1
function_name	statistiques [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	cette fonction extrait ||| extract	count=1
function_name	le fichier de relation ||| dbplus	count=2
function_name	la portée de l'espace ||| lookup	count=1
arg_pair	objet ||| object $object	count=1
return	en se basant ||| bool	count=2
function_name	serveur distant et lui ||| ssh2	count=1
function_name	retourne le nombre ||| numfields	count=1
function_name	la fin de l' ||| buffer	count=1
function_name	la méthode phar::startbuffering() ||| buffering	count=1
return	typiquement parcourt ||| mongocommandcursor	count=1
function_name	s'y ||| uudecode all	count=2
arg_pair	utilisée pour exécuter une ||| resource $conn_identifier string $sql	count=1
function_name	colonnes de la ||| dbase numfields	count=1
function_name	une équivalence ||| eqv	count=1
function_name	fichiers ||| chmod	count=1
arg_pair	ressource de la ||| int $type	count=1
function_name	la dernière requête ||| stmt error	count=1
function_name	compile un script ||| opcache compile file	count=1
arg_pair	address à l'interface de ||| string $address	count=1
namespace	élément avec un ||| domdocument	count=1
function_name	image ||| stereo image	count=2
function_name	à preg_replace() mais ||| preg filter	count=2
function_name	minimale du ||| enum cache min	count=1
function_name	la méthode d'entrelacement de ||| set image interlace scheme	count=1
function	autocommit [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=1
function_name	fonction closedir() seul ||| close	count=1
function_name	sommaire ||| imap fetch overview	count=2
function_name	qui avaient ||| newt form	count=1
function_name	nouvelle instance de la ||| new	count=1
arg_pair	[arg_pair_1] key dans ||| [arg_pair_2] [arg_pair_1]	count=3
arg_pair	métadonnées et ||| mongodb $db	count=1
arg_pair	une réponse au client ||| string $actor string $details	count=1
function_name	[function_name_1] dans un ||| [function_name_2] [function_name_1]	count=6
function_name	tag ||| set picture	count=1
function_name	le fuseau horaire ||| time zone	count=1
function_name	identifiant donné ||| element	count=1
function_name	taille [function_name] ||| extent [function_name]	count=1
namespace	exclusif qui a été ||| function	count=1
arg_pair	offset ||| resource $lob_identifier int $offset	count=1
arg_pair	cubrid_lob2_bind() est ||| string $bind_value_type	count=1
function_name	noms ||| property names	count=1
arg_pair	avec ||| resource $id array $args	count=1
function_name	pour [function_name_2] ||| [function_name_1] [function_name_2] resource $req_identifier	count=1
arg_pair	dans un fichier donné ||| string $filename	count=1
function_name	de compression ||| zip entry compressionmethod	count=1
namespace	les classes de ||| xmldiff\base	count=1
function_name	[function_name_1] objet ||| [function_name_1] [function_name_2]	count=2
function_name	c localtime ||| localtime	count=1
function_name	insérer ||| cubrid	count=1
arg_pair	contient les ||| mongodb $db string $prefix	count=1
function_name	récupère la fonction de ||| get	count=1
namespace	lignes ||| function	count=2
function_name	curseur ||| batch size	count=2
function_name	avec ||| string	count=1
function_name	extrait [function_name] ||| wincache ocache [function_name]	count=1
function_name	restaure ||| ini restore	count=2
function_name	récupère la [function_name_2] ||| [function_name_1] text [function_name_2]	count=1
function_name	et libère ||| event buffer free	count=1
namespace	image dans un ||| imagick	count=1
function_name	d'affichage ||| http output	count=2
function	champ à [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	modifie la valeur de ||| set include path	count=1
function_name	code de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un socket ||| stream socket	count=1
function_name	à memcached::append() mais ||| append by key	count=1
function_name	d'attente s'interrompt si ||| eio set	count=1
function_name	forme en ||| newt form destroy	count=1
function_name	de l'espace de ||| colorspace	count=1
function_name	prochain élément [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	fond de forte priorité ||| high background	count=1
namespace	la dernière ||| sqlite3	count=1
function_name	recursivetreeiterator::valid() retourne false ||| end	count=1
function_name	geoip_org_by_name() ||| geoip org	count=1
return	objet contenant différents ||| object	count=1
function_name	à la ||| by	count=1
arg_pair	à sybase_fetch_array() avec ||| mixed $object	count=1
arg_pair	l'évènement bevent à la ||| resource $bevent	count=1
function_name	retourne le [function_name_2] ||| mysqli [function_name_1] client [function_name_2] mysqli $link	count=1
function_name	en incluant les ||| form destroy	count=1
function_name	plus récente de ||| last	count=1
return	miniatures de l'image spécifiée ||| bool	count=1
arg_pair	coupe la chaîne str ||| string $str	count=1
namespace	nouvelle instance rrdupdater ||| rrdupdater	count=1
function_name	courant ||| get	count=1
return	une occurrence ||| mixed	count=1
function_name	pour [function_name_2] ||| [function_name_2] [function_name_1]	count=21
function_name	données méta pour les ||| metadata	count=1
arg_pair	à gearmanclient::setstatuscallback() ||| string $context	count=1
namespace	de ||| gearmantask	count=4
function_name	odbc à ||| odbc	count=1
function_name	à la forme ||| destroy	count=1
arg_pair	à la fonction mktime() ||| int $hour	count=1
function_name	écrit ||| ifxus write	count=1
namespace	fonction libère ||| function	count=1
function_name	mémoires utilisées par ||| newt	count=1
function_name	de la ||| end	count=1
function_name	[function_name] voir ||| [function_name] mppe	count=1
function_name	maître à l'esclave ||| mysqlnd ms	count=1
arg_pair	identique ||| int $month	count=1
return	tableau contenant toutes les ||| array	count=1
namespace	ou non ||| function	count=5
function_name	agent émet une exception ||| set exception callback	count=1
function_name	récupère ||| context get	count=3
return	base ||| string	count=1
arg_pair	bleu d'une ||| int $g int $b	count=1
function_name	réponse ||| handle response	count=1
function_name	de 9 miniatures de ||| images	count=1
arg_pair	enregistre une ou plusieurs ||| mixed $keys string $value	count=1
return	fonction mktime() ||| int	count=1
function_name	à memcached::prepend() mais ||| prepend	count=1
arg_pair	données microsoft sql server ||| array $connectioninfo	count=1
function_name	l'entier le ||| floor	count=1
function_name	un sommaire ||| fetch overview	count=1
function_name	un jeu de ||| db2	count=5
arg_pair	éléments du tableau rows ||| array $rows string $delimiter	count=1
arg_pair	attrappées par des fonctions ||| string $arg	count=1
function_name	pointer à une ligne ||| fetch row	count=1
arg_pair	dessin des ||| resource $image	count=1
arg_pair	valeurs du tableau array1 ||| array $array1	count=1
arg_pair	format ||| int $format int $compression	count=1
function_name	lecture aux secondaires ||| get slave okay	count=2
function_name	déplace le ||| data seek	count=1
function_name	défini les drapeaux ||| uopz flags	count=1
arg_pair	les métadonnées et la ||| string $prefix	count=1
function_name	le nombre ||| sybase num	count=1
arg_pair	gestionnaire de queues ||| string $qmanagername resource $hconn	count=1
arg_pair	identique à la ||| int $hour	count=1
return	de tri ||| void	count=1
arg_pair	une et ||| string $new_data2	count=1
function_name	complet de résultats ||| rows	count=1
namespace	effectue ||| function	count=1
function_name	l'intervalle pour un ou ||| range	count=1
function_name	d'une [function_name_2] ||| [function_name_2] channel [function_name_1]	count=1
function_name	retourne le ||| task	count=2
function	[function_name_1] index spécifié ||| [arg_pair_2] [function_name_1]	count=3
function	taille de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	identique ||| string $string	count=1
function_name	des erreurs soap ||| soap fault	count=1
function_name	supporte les verrous via ||| supports lock	count=1
return	convertit un nombre ||| int	count=1
arg_pair	à ||| mongodb $db	count=1
namespace	un ||| pharfileinfo	count=2
arg_pair	les ||| resource $p	count=1
function_name	associée avec l'écouteur d'événements ||| base	count=1
namespace	de l'archive phar exécutée ||| phar	count=1
function_name	suspend ||| fam suspend monitor	count=2
function_name	les noms des directives ||| policies	count=1
namespace	terminé ||| collectable	count=1
function_name	de réponse http ||| apache response	count=2
arg_pair	[arg_pair_1] dans subject ||| [arg_pair_1] mixed $replace [arg_pair_2]	count=4
function_name	fonction retourne ||| get	count=8
namespace	utilisée par ||| function	count=5
function_name	de contrôle avec la ||| gupnp control point new	count=1
namespace	qui ne peuvent pas ||| pharfileinfo	count=1
arg_pair	la fonction cubrid_lob_send() lit ||| resource $lob_identifier	count=1
function_name	écrit le contenu ||| fwrite	count=1
function_name	mime kopfzeile dans ||| iconv mime	count=1
function_name	prend ||| max poll	count=1
arg_pair	timestamp ||| int $timestamp	count=2
function_name	la seconde contient ||| construct	count=1
arg_pair	certificat x509 [arg_pair_2] ||| [arg_pair_1] string $out [arg_pair_2]	count=1
arg_pair	la représentation dom ||| domnode $node	count=1
function_name	cette méthode récupère ||| get	count=3
namespace	si ||| spldoublylinkedlist	count=1
function_name	et ||| push	count=1
arg_pair	des destinataires cc et ||| string $cc	count=1
function_name	tableau array complétée jusqu'à ||| array pad	count=1
arg_pair	caractères vide si ||| string $localname	count=1
rest	statistiques sur [function_2] ||| [return_1] [function_2]	count=3
function_name	de caractères courant et ||| iconv set	count=1
function_name	processus ||| close	count=1
function_name	pour le ||| mcrypt	count=1
function_name	courante pour le dessin ||| imagesetbrush	count=1
arg_pair	de deux ||| mongodb $db string $prefix	count=1
function_name	élément avec un identifiant ||| id	count=1
function_name	var .. ||| array	count=1
function_name	[function_name] caractère ||| newt checkbox [function_name]	count=3
function_name	[function_name_1] [function_name_2] la page ||| harupage bool [function_name_2] [function_name_1]	count=2
function_name	9 miniatures ||| images	count=1
arg_pair	héberge la file ||| array $data	count=1
function_name	caractères brutes ||| return raw	count=1
arg_pair	jusqu'à la catégorie courante ||| resource $agent string $category	count=1
arg_pair	joignent [arg_pair] petit angle ||| [arg_pair]	count=1
function_name	seul le ||| close	count=1
function_name	le schéma d'entrelacement ||| get interlace scheme	count=1
function_name	une ligne depuis ||| string read line	count=1
arg_pair	coordonnées de alpha degrés ||| float $alpha	count=1
arg_pair	propriété hwnd de l'instance ||| int $window_handle	count=1
arg_pair	le réseau ||| resource $ann	count=1
function_name	à ||| newt	count=1
function_name	virtuel sous iis ||| iis get	count=1
function_name	les drapeaux ||| preg flags	count=1
function_name	similaire à ||| proc close	count=1
return	instance ||| object	count=1
function_name	retourne [function_name_2] ||| [function_name_1] peak [function_name_2]	count=1
function_name	l'identifiant ||| closedict	count=1
function_name	encodages supportés ||| mb list encodings	count=1
return	un jeu de ||| resource	count=1
arg_pair	le fait que les ||| int $hour int $minute	count=1
function_name	courante [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	paramètre est passé par ||| is passed by	count=1
function_name	la session courante ||| enchant dict is in session	count=1
namespace	avec ||| domdocument	count=1
function_name	récupère le taux de ||| fann get connection rate	count=1
arg_pair	une ||| string $query	count=1
function_name	retourne la ||| get	count=45
function_name	avec des tests ||| uintersect assoc	count=1
function_name	fait qu'elle ||| eregi	count=1
function_name	commentaire de ||| comment	count=1
function_name	ou [function_name] de l'agent ||| set [function_name]	count=1
function_name	compris entre 0.0 ||| hsl	count=1
function_name	fdf [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	recode la ||| recode string	count=1
return	iidentique à ||| void	count=1
arg_pair	équivalente à memcached::set() ||| mixed $value int $expiration	count=1
arg_pair	le document ||| string $src	count=1
arg_pair	éléments d'un ||| int $page string $optlist	count=1
function_name	le contenu du tampon ||| get buffer	count=1
function_name	clé existante suivant ||| put cat	count=2
function_name	ajoute ||| pdf add	count=2
function_name	grande taille dans ||| pg lo	count=1
function_name	une instance glo ||| glo	count=2
function_name	de transactions xa ||| mysqlnd ms xa	count=1
function_name	connexion persistante vers ||| pconnect	count=1
namespace	se reconnecter ||| mysqlnduhconnection	count=1
arg_pair	principal avec le mot ||| string $principal	count=1
function_name	version de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	version [function_name_2] ||| [function_name_2] [function_name_1] mysqli $link	count=2
namespace	connexion ||| mongoclient	count=1
function_name	formatage ultérieur ||| textflow	count=1
arg_pair	à une colonne données ||| mixed $column	count=1
return	utilisée que pour stocker ||| void	count=1
function_name	commande d'exécution de postgresql ||| pg	count=1
namespace	format de [namespace] qui sera ||| [namespace]	count=1
arg_pair	une nouvelle définition ||| string $optlist	count=1
function_name	record pour ||| record	count=1
function_name	présentes dans tous ||| array intersect	count=1
return	méthode peut ||| void	count=1
return	est ||| bool	count=4
return	tous les ||| void	count=2
return	thread ||| bool	count=1
arg_pair	utilisation future ||| float $new_output_min float $new_output_max	count=1
function_name	cosinue pour ||| trader cos	count=1
function	[function_name_1] des parties ||| [function_name_1] open resource $link_identifier [arg_pair_2]	count=1
function_name	le préfixe de ||| prefix	count=2
arg_pair	cubrid_lob2_bind() est utilisée ||| mixed $bind_value string $bind_value_type	count=1
function_name	au service ||| gupnp service	count=1
return	leur donne la valeur ||| mixed	count=1
function_name	un fichier ||| is	count=1
namespace	tant que ||| function	count=1
function_name	avec sphinxclient::addquery obtient ||| queries	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] fetch [arg_pair_2]	count=3
function_name	par ||| entry	count=1
function_name	[function_name_1] crée un ||| [function_name_2] [function_name_1]	count=2
function_name	de la ||| include path	count=1
function_name	prend plus ||| eio set max	count=1
namespace	serveur memcache avec la ||| memcached	count=1
function_name	court d'un champs ||| frame short	count=1
function_name	de la couleur bleue ||| blue primary	count=1
namespace	demande un verrou sur ||| function	count=1
function_name	un identifiant ||| element	count=1
function_name	configure les couleurs actives ||| set	count=1
function_name	postgresql créée ||| pg	count=1
arg_pair	partir d'une source ||| int $size int $source	count=1
function_name	[function_name] utilisateur ||| [function_name] ucache	count=1
return	aql [return] ||| [return]	count=2
function_name	un document selon le ||| validate source	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] list [function_name_1]	count=4
function	[function_name_1] fichiers ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	messages du domaine domain ||| string $domain	count=1
function_name	[function_name_1] la largeur ||| [function_name_1] unicode [function_name_2]	count=1
function_name	un marqueur oracle ||| oci bind array by	count=1
function_name	pour la ||| path	count=1
function_name	récupère l'intance de la ||| get	count=1
function_name	[function_name_1] refermer ||| [function_name_1] commit [function_name_2]	count=1
namespace	à la chaîne de ||| function	count=1
function_name	[function_name_1] chiffrement ||| [function_name_2] [function_name_1]	count=3
function_name	prépare une page pour ||| open pdi page	count=1
arg_pair	se basant sur les ||| resource $ann resource $train_data	count=1
namespace	d'attente s'interrompt ||| function	count=1
function_name	transactions xa ||| mysqlnd ms xa gc	count=1
namespace	le fait qu'elle ignore ||| function	count=1
return	fonction est ||| int	count=1
function_name	distant vers le système ||| ssh2 scp recv	count=1
arg_pair	envoie len octets issus ||| int $len int $flags	count=1
arg_pair	bloc de texte ||| string $blockname string $text	count=1
function_name	code erreur d'une erreur ||| error code	count=1
function_name	maximale d'un mot en ||| mlt max	count=1
arg_pair	tableau rows ||| array $rows string $delimiter	count=1
function	[function_name_1] une ||| [arg_pair_2] [function_name_1]	count=22
arg_pair	de cartes de seuil ||| string $threshold_map int $channel	count=1
arg_pair	ne sont pas attrappées ||| string $cb string $arg	count=1
namespace	ev::run() est sortie ||| ev	count=1
namespace	la recherche sur ||| function	count=1
return	caractères de l'objet ||| string	count=1
function_name	von einer mime ||| iconv mime encode	count=1
arg_pair	fixe ||| resource $psdoc	count=1
function_name	retourne tous ||| to string	count=1
function_name	lit ||| fann read	count=1
function_name	pour l'utiliser ||| dbx	count=1
namespace	du script en ||| function	count=1
return	fichier au sein ||| bool	count=1
function_name	par le résultat associé ||| result	count=1
arg_pair	recherche sur les ||| string $string	count=1
namespace	interne d'un lob oracle ||| oci-lob	count=1
arg_pair	rappel callback pour ||| callable $callback mixed $parameter	count=1
function_name	des données ||| set metadata	count=1
arg_pair	jusqu'à maxlength octets de ||| int $maxlength	count=1
function_name	de noms de ||| field names	count=1
arg_pair	la clé passées ||| string $method	count=1
return	code erreur niveau dans ||| int	count=1
function_name	[function_name_1] image ||| [function_name_2] channel [function_name_1]	count=1
namespace	document ||| solrdocument	count=6
function_name	données dns associées ||| dns get record	count=1
arg_pair	database ibm ||| string $database	count=1
function_name	retourne le statut ||| get state variable	count=1
function_name	commence ||| control point browse start	count=1
return	déplace toutes ||| bool	count=1
return	un tableau de toutes ||| array	count=1
arg_pair	en un autre format ||| int $compression	count=1
arg_pair	entraîne ||| array $problem array $weights	count=1
function_name	insensible ||| strcasecmp	count=1
function_name	met à l'échelle les ||| fann scale input	count=1
arg_pair	l'activation ||| int $condition_type	count=1
function_name	la classe ||| class	count=2
function_name	mois month ||| in month	count=1
function_name	les ||| destroy	count=3
namespace	spécifiées par ||| function	count=1
arg_pair	de résultats listant les ||| string $table-name	count=1
function_name	couleur de peinture de ||| stroking color	count=1
function_name	pour rechercher manuellement ||| spl autoload call	count=1
function_name	libère toute la ||| ldap free	count=1
function_name	configuration include_path pour la ||| set include path	count=1
function_name	de l'objet com ||| com event	count=1
return	paramètres ||| int	count=1
arg_pair	insérer ||| int $index	count=1
function_name	données rrd [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	le délai maximal ||| cubrid set query timeout	count=1
function_name	le dénominateur du taux ||| denominator	count=1
function_name	session curl à ||| curl init	count=1
return	les noms ||| array	count=2
function_name	représentation en ||| serialize	count=1
namespace	non encodés url ||| solrparams	count=1
namespace	dictionnaire ||| function	count=1
function_name	d'archives spécifié par ||| entry	count=1
function_name	document selon le schéma ||| schema validate source	count=1
function_name	configure les ||| set auth	count=1
return	chaîne de requête à ||| string	count=1
function_name	serveur ||| server	count=5
arg_pair	assoc_array [arg_pair] ||| [arg_pair]	count=2
return	base de ||| int	count=1
function_name	noms ||| end namespace	count=1
function_name	[function_name_1] de blocs ||| [function_name_2] [function_name_1]	count=2
return	crée un ||| string	count=1
namespace	clé et les valeurs ||| arrayobject	count=1
function_name	d'activation candidate ||| activation	count=1
function_name	jokers à analyser ||| tokens	count=1
arg_pair	pour l'activation ||| int $condition_type	count=1
arg_pair	montage d'un périphérique ||| string $pharpath string $externalpath	count=1
arg_pair	page avec les données ||| mixed $data	count=1
function_name	de ||| image	count=6
arg_pair	le gestionnaire multiple ||| resource $mh	count=1
function_name	l' eventbuffer ||| buffer	count=1
function_name	un curseur typiquement parcourt ||| batch size	count=1
function_name	colonnes de la base ||| dbase	count=1
function	html contenu [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	est similaire à la ||| element by id	count=1
namespace	du contenu ||| splfileinfo	count=1
function_name	le facteur décroissant quickprop ||| quickprop decay	count=1
namespace	les commandes ||| imagick	count=1
arg_pair	de la connexion spécifiée ||| resource $connection bool $value	count=1
arg_pair	le principal ||| string $principal	count=1
arg_pair	est ||| string $pattern string $string	count=1
function_name	d'arrière-plan [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	message d'erreur de la ||| error	count=1
arg_pair	hash depuis un fichier ||| string $filename	count=1
function_name	détruire un ||| delete	count=1
function_name	définit ||| set mlt min	count=2
function_name	les variables var ||| array push	count=1
function_name	ressource de socket ||| socket	count=1
namespace	requête sql ||| sqlite3	count=2
function_name	une exception de ||| set	count=1
arg_pair	trouve la position ||| string $charset	count=1
arg_pair	cette fonction ||| string $pattern string $string	count=1
arg_pair	de la valeur value ||| mixed $value	count=1
function_name	protège les caractères ||| pg escape	count=1
function_name	[function_name_1] d'entrée ||| [function_name_2] [function_name_1]	count=10
function_name	transforme une image à ||| transform image	count=1
function_name	utilisé pour tracer la ||| debug	count=1
function_name	[function_name_1] variadique ||| [function_name_1] [function_name_2]	count=4
function_name	de l'échelle horizontale ||| horizontal scaling	count=1
function_name	fonction pdf_get_value() avec le ||| pdf get majorversion	count=1
function_name	retourne ||| get mode	count=1
function_name	d'autres caractères) de ||| ltrim	count=1
return	en provenance ||| bool	count=1
namespace	été ajoutés à la ||| function	count=1
return	à déterminer si la ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] default [function_name_2]	count=3
namespace	lorsque ||| recursivetreeiterator	count=1
function_name	la fonction geoip_country_code3_by_name() ||| geoip country code3 by	count=1
function_name	terme inférieure liée dans ||| terms include lower bound	count=1
function_name	d'activation pour le neurone ||| set activation	count=2
arg_pair	défini le tableau des ||| resource $ann array $cascade_activation_functions	count=1
arg_pair	construit un objet d'événement ||| eventbase $base callable $cb	count=1
function_name	pour envoyer ||| set	count=1
function_name	la signature de vérification ||| signature	count=1
arg_pair	fichier remote_file ||| string $remote_file int $mode	count=1
function_name	de la syntaxe du ||| php check syntax	count=1
function_name	nombre maximal [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	forte priorité ||| high	count=1
function_name	retourne l'échelle ||| scale	count=1
arg_pair	par address à ||| string $address	count=1
function_name	nombre de [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	efface l'entrée ||| delete	count=1
function_name	contenant la ||| ingres	count=1
namespace	reprend l'exécution du générateur ||| generator	count=1
function_name	qui décide si ||| mysqlnd qc set	count=1
function_name	met l'octet ||| clrbit	count=1
function_name	pour convertir une archive ||| convert to	count=1
function_name	nombre [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	région d'une image et ||| image region	count=1
function_name	pour récupérer ||| cubrid column	count=1
function_name	être utilisée ||| set module	count=1
function_name	connecte le ||| ps closepath stroke	count=1
return	fonction mktime() excepté ||| int	count=1
function_name	l'archive zip ||| archive	count=1
namespace	seule tâche en ||| gearmanclient	count=1
function_name	le terme ||| set terms upper bound	count=1
arg_pair	chaîne d'un ||| string $from	count=1
function_name	comme une pile et ||| array	count=1
namespace	la valeur de la ||| function	count=1
function_name	de transfert ||| setopt	count=1
namespace	domcomment ||| domcomment	count=1
return	méthode recursivetreeiterator::valid() retourne ||| void	count=1
arg_pair	bloc de texte avec ||| string $blockname string $text	count=1
function_name	cette fonction peut être ||| set	count=1
function_name	si une variable est ||| is	count=1
function_name	la présence d'événements ||| max dispatch interval	count=1
arg_pair	seuil de ||| resource $ann float $sarprop_step_error_threshold_factor	count=1
function_name	une interface ||| interface	count=1
function_name	month de l'année ||| month	count=1
function_name	les droits d'un ||| perms	count=1
function_name	lier des ||| lob2 bind	count=1
function_name	durée du script en ||| include path	count=1
function_name	pour ||| string	count=1
function_name	est similaire ||| get element by id	count=1
function_name	d'activation ||| activation function output	count=2
function_name	retourne le terme sur ||| get terms	count=1
function_name	en ||| handle	count=1
arg_pair	à strcmp() elle ||| string $str1	count=1
return	du tampon fourni par ||| bool	count=1
function_name	au sein d'une ||| is	count=1
function_name	la valeur de la ||| set include	count=1
function_name	demandée [function_name] ||| [function_name]	count=3
function_name	[function_name_1] la taille ||| [function_name_1] [function_name_2]	count=2
function_name	des lignes par ||| imagesetbrush	count=1
function_name	d'autres informations ||| info	count=1
arg_pair	fichier qui contient ||| string $file	count=1
function_name	etc ||| set	count=1
function_name	l'heure du dernier accès ||| eio futime	count=1
function	document xml [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	héberge la file de ||| resource $queue array $data	count=1
function_name	vi de l'algorithme désigné ||| iv	count=1
function_name	stats.facet ||| stats	count=1
function_name	remplace les ||| dbase replace	count=1
arg_pair	à l'historique système ||| int $option	count=1
function_name	sert à détruire un ||| shmop	count=1
arg_pair	paramètres x et y ||| int $x int $y	count=1
arg_pair	une chaîne ||| string $str int $start	count=1
function_name	[function_name_1] et une ||| [function_name_2] [function_name_1]	count=1
function_name	est ||| mysql field type	count=2
arg_pair	soit terminé, ||| int $status	count=1
function_name	ligne ||| mssql fetch row	count=1
function_name	associé au champ spécifié ||| field	count=1
function	dom et [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	est un alias ||| is	count=1
return	les ressources ||| void	count=1
arg_pair	excepté ||| int $hour	count=1
function_name	stocke le bytecode et ||| bcompiler write	count=1
arg_pair	change les ||| mixed $fill	count=1
function_name	dernière requête ||| mysqli stmt errno	count=2
namespace	si un [namespace] ||| [namespace]	count=4
return	par défaut $this ||| void	count=2
namespace	l'exception sous la forme ||| exception	count=1
function_name	la seconde ||| construct	count=1
function_name	d'erreur de ||| error	count=1
function_name	php en utilisant ||| php	count=1
namespace	du poll ||| zmqpoll	count=2
function_name	[function_name] voir la ||| get [function_name]	count=1
return	en se ||| bool	count=2
function_name	retourne le statut ||| get server status	count=2
arg_pair	le contenu des ||| string $prefix	count=1
function_name	la file d'attente ||| max poll time	count=1
function_name	[function_name_1] spécifiée ||| [function_name_2] next [function_name_1]	count=1
arg_pair	et libère ses ressources ||| int $imageid	count=1
function_name	alpha ||| alpha	count=2
arg_pair	s'identifie ||| string $character_set	count=1
arg_pair	sont pas attrappées ||| string $arg	count=1
function_name	minimum de ||| mssql min error	count=1
function_name	hormis le ||| close	count=1
function_name	fréquence à ||| mlt min doc frequency	count=1
function_name	le message d'erreur ||| error message	count=1
function_name	incluant les composants qui ||| form destroy	count=1
function_name	tag image en ||| set picture	count=1
function_name	lit la date de ||| get	count=2
function_name	compile un script php ||| compile file	count=1
arg_pair	fournis en tant qu'options ||| string $tag	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] decl [function_name_1]	count=2
arg_pair	les erreurs seront historisées ||| string $log_file	count=1
arg_pair	place un hyperlien ||| float $lly	count=2
function_name	ligne du serveur ||| server	count=1
arg_pair	de la suppression ||| array $deleteoptions	count=1
function_name	chaîne de ||| load	count=1
namespace	la forme ||| function	count=2
function_name	à la chaîne ||| db2	count=1
function_name	l'espace de ||| space	count=1
arg_pair	la requête statement ||| resource $statement mixed $field	count=1
namespace	contient les métadonnées ||| mongogridfs	count=1
function_name	une ou plusieurs images ||| images	count=1
namespace	cette fonction libère les ||| function	count=1
namespace	extrait dans ||| function	count=1
arg_pair	empile les variables ||| array $array mixed $value1	count=1
function_name	[function_name_1] images ||| [function_name_1] [function_name_2]	count=1
function_name	résultat [function_name_2] ||| [function_name_2] next [function_name_1]	count=1
function_name	compare ||| compare image channels	count=2
function_name	définit la valeur ||| set color value	count=1
arg_pair	fonction mktime() excepté le ||| int $day int $year	count=1
function_name	une uri d'espace de ||| elements by	count=1
function_name	pixels implosé par un ||| implode image	count=1
arg_pair	la base [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	à un jeu de ||| get	count=1
function_name	mnogosearch ||| udm	count=3
function_name	true s'il existe ||| key exists	count=1
arg_pair	retourne la ||| int $offset	count=1
function_name	système de ||| eio fstatvfs	count=1
function_name	code erreur d'une ||| cubrid error code	count=2
function_name	doit être utilisée que ||| metadata	count=1
function_name	plus de ||| set max	count=1
return	en utilisant la méthode ||| bool	count=1
function_name	récupère l'adresse ||| gupnp context get host	count=1
arg_pair	spotname et ||| string $spotname	count=1
arg_pair	[arg_pair_1] fichier filename ||| [arg_pair_2] [arg_pair_1]	count=6
namespace	moins le ||| ev	count=1
return	ajoute la chaîne ||| string	count=1
arg_pair	fichier spécial ||| string $pathname	count=1
function_name	en arrière plan et ||| do high	count=1
function_name	[function_name_1] l'espace ||| [function_name_1] color [function_name_2]	count=1
function_name	s'interrompt ||| eio set max poll time	count=2
function_name	d'entrelacement de l'image ||| interlace scheme	count=1
namespace	courante ||| harupage	count=3
arg_pair	microsoft sql ||| array $connectioninfo	count=1
namespace	interne ||| solrdocument	count=2
namespace	appelé une fois ||| collectable	count=1
function_name	diriger les clés ||| multi by key	count=1
arg_pair	fait que les ||| int $month	count=1
return	position dans la ||| int	count=1
function_name	elle prend ||| eio set max	count=1
return	entrée moins le nombre ||| int	count=1
function_name	[function_name_1] utilisée ||| [function_name_2] [function_name_1]	count=4
namespace	paramètres pour une ou ||| function	count=1
function_name	déplace toutes les données ||| add buffer	count=1
arg_pair	une fonction à l'exécution ||| string $class	count=1
namespace	mettre à jour ||| quickhashintstringhash	count=1
function_name	un élément avec ||| element	count=1
function_name	copie ||| copy	count=2
function_name	de ||| closedir	count=1
return	a terminé son ||| void	count=1
function_name	la ||| image bias	count=1
function_name	prend plus ||| poll time	count=1
function_name	retourne l'échelle de la ||| scale	count=1
function_name	elle prend plus ||| eio set max	count=1
function_name	fait qu'elle fonctionne ||| proc close	count=1
function_name	fichier ||| mailparse uudecode all	count=4
function_name	récupère la ||| get parameter	count=1
return	un chemin xpath pour ||| string	count=1
function_name	les algorithmes de chiffrement ||| algorithms	count=1
return	et libère toutes ||| void	count=2
function_name	rrd ||| rrd	count=1
function_name	les ||| set module	count=4
function_name	le contexte de l'application ||| context	count=1
arg_pair	des fichiers ||| mongodb $db string $prefix	count=1
function_name	[function_name_1] associé ||| [function_name_2] [function_name_1]	count=6
namespace	cette fonction est ||| domdocument	count=1
function_name	une ou [function_name] de l'agent ||| set [function_name]	count=1
function_name	retourne la valeur ||| value	count=2
function	[function_name_1] parties de ||| [arg_pair_2] [function_name_1]	count=1
function_name	champ spécifié ||| field	count=3
function_name	de type nombre entier ||| int	count=1
function_name	numéro de version mineure ||| minorversion	count=1
function	l'écrit [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	dimensions de ||| metrics	count=1
function	construit un [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
namespace	supprime un ||| event	count=1
namespace	nombre ||| sqlite3	count=1
function_name	serveur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	aux options qui affectent ||| array $options	count=1
function_name	déplace toutes les ||| buffer	count=1
function_name	le noeud courant est ||| is	count=1
function_name	protège une ||| escape string	count=1
arg_pair	la ||| mongodb $db	count=2
function_name	le dernier identifiant autogénéré ||| last	count=1
arg_pair	applique une matrice de ||| resource $image array $matrix	count=1
function_name	caractère depuis le ||| fgetc	count=1
arg_pair	fichier fd ||| mixed $fd	count=2
function_name	message d'erreur lié ||| error	count=1
function_name	temporaire ||| uudecode all	count=2
function_name	socket errno ||| last socket errno	count=1
arg_pair	de deux ||| string $prefix	count=1
function_name	forme ||| newt	count=2
function_name	le terme ||| bound	count=2
namespace	ev::run() est ||| ev	count=2
arg_pair	fonction de rappel callback ||| mixed $pattern callable $callback	count=1
function_name	les [function_name] ||| get [function_name] merge	count=2
function_name	retourne la table ||| get	count=1
namespace	a terminé son ||| collectable	count=1
function_name	la file ||| max poll	count=1
function_name	en anglais [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	du buffer ||| eventbuffer	count=2
function	xml depuis [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	données du tampon ||| eventbuffer	count=1
function_name	[function_name_1] terme ||| [function_name_2] [function_name_1]	count=1
function_name	retourne un sommaire ||| fetch overview	count=1
arg_pair	de subject qui ne ||| string $subject	count=1
function_name	l'étape d'erreur sarprop ||| sarprop step error	count=2
function_name	depuis une ||| from	count=1
function_name	est survenue lors de ||| error	count=1
function_name	de ||| set default	count=1
function_name	proxy pour intercepter les ||| mysqlnd uh set connection proxy	count=1
namespace	pour la durée ||| function	count=1
arg_pair	ibm db2 universal database ||| string $username	count=1
arg_pair	index ||| int $index	count=3
function_name	et tous les ||| destroy	count=1
function_name	binaire et enregistre le ||| binary	count=1
function_name	définit l'identifiant [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	avec ||| by id	count=2
function	affiche le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	surveiller avec les ||| set	count=1
function_name	s'interrompt si elle ||| time	count=1
namespace	lors ||| recursivetreeiterator	count=1
function_name	caractères brutes ||| terms return raw	count=1
namespace	ferme le dictionnaire représenté ||| function	count=1
namespace	fait que les ||| function	count=1
function_name	openssl_get_cert_locations() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	forme et tous ||| destroy	count=1
arg_pair	nom de domaine ||| string $domain int $options	count=1
arg_pair	pour l'activation de la ||| int $condition_type mixed $condition	count=1
function_name	le plugin [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	width ||| int $width	count=1
function_name	ping ||| ping	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] post [arg_pair_2]	count=2
function_name	seule ||| chmod	count=1
function_name	la possibilité ||| oci cancel	count=1
arg_pair	la chaîne str en ||| string $str	count=1
function_name	à la fonction mktime() ||| gmmktime	count=1
function_name	et tous ||| newt form destroy	count=1
return	une chaîn ||| string	count=1
function_name	analyseur à ||| arg parser	count=1
namespace	précédemment définie avec la ||| gearmanclient	count=1
arg_pair	requête request ||| string $request	count=1
return	remplace la ||| bool	count=1
function_name	ignorant la casse ||| str ireplace	count=1
function_name	lorsque l'itération [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	attribut par ||| attribute	count=1
namespace	tâche en ||| gearmanclient	count=1
function_name	l'élément suivant ||| next element	count=2
function_name	sur le dossier d'archives ||| compressionmethod	count=1
function_name	le nombre de lignes ||| num rows	count=3
arg_pair	identique à la ||| int $hour int $minute	count=1
arg_pair	fichier spécial ou ||| int $major	count=1
function_name	avec ||| set	count=1
function_name	la résolution de ||| getimageresolution	count=1
function_name	fonction closedir() ||| close	count=1
function_name	version mineure de ||| minorversion	count=1
arg_pair	de fichiers dans l'argument ||| int $pri	count=1
namespace	sortie normalement ||| ev	count=1
function_name	tous les ||| newt	count=1
function_name	lot d'objets résultants ||| batch	count=1
function_name	pour les ||| set event	count=1
arg_pair	la requête request ||| string $string	count=1
return	documents par ||| bool	count=1
function_name	image le nombre ||| set image	count=1
arg_pair	fois la fonction filter_var() ||| mixed $definition	count=1
function_name	actualise les [function_name] ||| [function_name] refresh if	count=2
arg_pair	collections : la ||| mongodb $db string $prefix	count=1
function_name	l'image spécifiée avec un ||| images	count=1
arg_pair	la structure qui héberge ||| array $data	count=1
arg_pair	de recodage request ||| string $request	count=1
return	fait ||| int	count=3
arg_pair	fonction mktime() ||| int $hour	count=1
function_name	service qui ||| set service	count=1
function_name	multiplicateur de ||| multiplier	count=1
function_name	la base sqlite ||| sqlite close	count=1
function_name	fichier exe ||| exe	count=1
function_name	de la première ligne ||| dbplus first	count=1
function_name	retire un ||| remove handle	count=1
return	coin en ||| bool	count=1
function_name	id3 ||| id3	count=2
function_name	dans les regroupements distincts ||| group distinct	count=1
namespace	qui place les ||| arrayobject	count=1
function_name	prend ||| eio set max poll time	count=2
arg_pair	destfp ||| resource $sourcefp resource $destfp	count=1
return	que les ||| bool	count=1
arg_pair	et ||| mongodb $db	count=1
arg_pair	tiff ||| bool $arrays bool $thumbnail	count=1
function_name	nombre ||| numfields	count=1
function_name	miniatures de l'image spécifiée ||| images	count=1
arg_pair	si ||| bool $flag	count=1
namespace	alphanumériques ||| arrayobject	count=1
arg_pair	cette fonction url-encode la ||| string $str	count=1
function_name	l'on termine ||| end children	count=1
arg_pair	chaîne d'une façon similaire ||| string $str int $start	count=1
function_name	d'objets résultants ||| size	count=1
function_name	pour la première fois) ||| end	count=1
return	qui place ||| void	count=1
function_name	la première ||| dbplus first	count=1
function_name	modules à surveiller avec ||| set	count=1
function_name	fréquence à ||| doc frequency	count=1
function_name	place des antislashs devant ||| db2 escape	count=1
function_name	éléments descendants avec un ||| elements by	count=1
function_name	plugin ||| mysqlnd	count=1
arg_pair	avec les ||| string $key	count=1
function_name	de l'en-tête du ||| get	count=1
namespace	à propos ||| function	count=1
function_name	la mémoire occupée par ||| imagepsfreefont	count=1
function_name	configure les ||| ncurses color set	count=1
function_name	plusieurs serveurs de ||| servers	count=1
function_name	caractères invisibles en ||| trim	count=1
function_name	retourne la méthode ||| compressionmethod	count=1
function_name	[function_name_1] et ||| [function_name_2] [function_name_1]	count=4
function_name	la fin de l' ||| add	count=1
function_name	[function_name_1] utilisateur ||| [function_name_1] [function_name_2] exists	count=4
arg_pair	dans ||| string $alias	count=1
function_name	incluant les composants qui ||| form	count=1
function_name	est valide ||| valid	count=2
function_name	image ||| label image	count=1
return	s'interrompt si ||| void	count=1
function_name	les ||| array iterator	count=1
function_name	retourne l'identifiant de la ||| row id	count=1
function_name	couleur courante de remplissage ||| gray	count=1
function_name	de contrôle avec ||| gupnp control point new	count=1
arg_pair	d'extraits de texte pour ||| string $fragmenter	count=1
namespace	délai ||| mongocursor	count=1
function_name	serveurs de tâches ||| servers	count=1
function_name	cette fonction retourne une ||| get	count=2
namespace	le serveur de cache ||| memcache	count=1
function_name	indexé par nom de ||| both	count=1
function_name	de ||| eio set max	count=1
function_name	informations de déboguage ||| memcache debug	count=1
function_name	fonction d'internationalisation appelée ||| intl	count=1
function_name	informations sur ||| info	count=3
function_name	ssh2 ||| ssh2	count=2
function_name	record pour l'effacement dans ||| record	count=1
function_name	fonction ||| element	count=3
arg_pair	applique diverses options ||| resource $pdfdoc string $optlist	count=1
function_name	portée ||| lookup	count=1
function_name	de socket valide ||| socket	count=1
function_name	est accessible en ||| is readable	count=1
function_name	sortie ||| get	count=1
return	extrait [return] région d'une ||| [return]	count=1
function_name	de filtres ||| filter queries	count=1
function_name	[function_name] session ||| [function_name]	count=1
function_name	l'attribut ||| attribute	count=6
function_name	retourne un objet simplexmliterator ||| get children	count=1
arg_pair	de search [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	être ||| function	count=1
function_name	le nombre de colonnes ||| ifx num	count=1
function	l'objet com [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	au type ||| type	count=1
function_name	récupérer un ||| get	count=1
function_name	à la fonction ||| mysql	count=1
namespace	des lob oracle en ||| oci-lob	count=1
function_name	dans ||| uudecode all	count=2
return	fourni ||| array	count=1
function_name	composants qui avaient ||| newt	count=1
function_name	déplace ||| add	count=1
arg_pair	str ||| array $convmap	count=1
return	ressources mémoires utilisées par ||| void	count=1
namespace	caractères alphabétiques ||| function	count=1
function_name	dans la sortie standard ||| output	count=1
function_name	plugin de ||| mysqlnd	count=1
arg_pair	dans la largeur spécifiée ||| float $width	count=1
function	insère le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	déboguage de ||| set	count=1
arg_pair	prépare une ||| int $trans_args	count=1
function_name	une requête ||| handle	count=1
function	pour [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	ssl voir la ||| ssl	count=1
function_name	le nom long ||| long name	count=1
return	été ||| bool	count=1
function_name	de ||| eio set max poll	count=1
arg_pair	la fonction mktime() ||| int $day int $year	count=1
arg_pair	une entrée ||| string $dn	count=1
function_name	encodés qui s'y ||| uudecode	count=1
function_name	l'échelle ||| scale	count=8
return	élément avec ||| domelement	count=1
function	[function_name_1] fichier filename ||| [function_name_1] contents [arg_pair_2]	count=1
return	l'appel à la méthode ||| bool	count=1
function_name	bytecode ||| bcompiler	count=3
function_name	récupère ||| rrd	count=1
function_name	que gestionnaire d'événements pour ||| ibase set event handler	count=1
function_name	retourne le code de ||| get	count=1
function_name	opération strripos() basée ||| mb strripos	count=1
function	écrit [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	priorité de pid ||| int $priority int $pid	count=1
arg_pair	pour l'activation ||| int $condition_type mixed $condition	count=1
arg_pair	le paramètre str ||| mixed $fd string $str	count=1
arg_pair	par l'url repos_url du ||| string $repos_url	count=1
function_name	[function_name_1] fond ||| [function_name_1] [function_name_2]	count=1
function_name	une ||| handle	count=2
return	un fichier ||| array	count=1
function_name	wbmp de l'image ||| imagewbmp	count=1
function_name	algorithm [function_name] ||| [function_name] block	count=1
return	fait que ||| mixed	count=1
function_name	un alias de ||| set	count=1
namespace	de champs ou ||| function	count=1
function_name	retourne le nom court ||| get frame short name	count=1
arg_pair	une connexion dans le ||| int $to_neuron	count=1
function_name	le fait que file_get_contents() ||| contents	count=1
return	à un jeu ||| array	count=1
arg_pair	termine ||| resource $fam	count=1
function_name	essaie de supprimer la ||| fbsql drop db	count=1
namespace	un fichier ||| pharfileinfo	count=2
function_name	[function_name_1] un destructeur ||| [function_name_1] [function_name_2]	count=1
function_name	pas ||| metadata	count=1
arg_pair	structure vide de ||| int $num_data int $num_input	count=1
arg_pair	l'objet à la valeur ||| int $color float $value	count=1
namespace	le tampon ||| eventbuffer	count=2
function_name	d'objets résultants et les ||| batch	count=1
function_name	un tableau ||| fetch array	count=1
namespace	cette fonction est ||| function	count=3
function_name	termine la ||| fam	count=1
function_name	objet dans ||| object	count=1
arg_pair	log_cmd_delete lors de ||| array $server	count=1
namespace	le modèle ||| svmmodel	count=1
namespace	et la seconde ||| mongogridfs	count=1
arg_pair	à une source ||| string $password	count=1
arg_pair	la catégorie ||| string $category	count=1
arg_pair	change ||| mixed $fill	count=1
function_name	un fichier exe ||| exe	count=1
function_name	configure la méthode d'entrelacement ||| interlace scheme	count=1
function_name	qu'elle ||| eregi	count=1
arg_pair	sur les ||| string $string	count=1
function_name	après ||| immortal	count=1
arg_pair	lien symbolique filename ||| string $filename	count=1
function_name	placer devant l'élément ||| prefix	count=1
arg_pair	attend qu'elles changent de ||| array $write	count=1
namespace	http ||| eventhttp	count=2
function_name	blocs ||| algo block	count=1
function_name	fonction crée une nouvelle ||| create comment	count=1
function_name	qui ne peuvent ||| metadata	count=1
return	si le noeud courant ||| bool	count=1
arg_pair	une requête ||| string $statement	count=2
function_name	[function_name_1] pour tous ||| [function_name_2] [function_name_1] steepness	count=1
return	la forme et ||| void	count=1
function_name	extrêmes d'une [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	lot ||| batch size	count=2
return	la valeur de la ||| string	count=1
function_name	d'une date formée par ||| checkdate	count=1
return	de caractères contenant le ||| string	count=2
function_name	analyse une ||| parse addresses	count=1
namespace	typage d'objets pour ||| reflectionparameter	count=1
namespace	où la méthode ||| ev	count=2
function_name	de preg_replace() hormis ||| preg replace	count=1
function_name	créer un agent ||| agent	count=1
function_name	récupère ||| get body	count=1
arg_pair	lors ||| string $pattern	count=1
function_name	du haut ||| dequeue	count=1
function_name	le schéma de ||| schema	count=1
arg_pair	dans ||| resource $connection string $qualifier	count=1
function_name	accessible en ||| readable	count=1
function_name	vérifie si un script ||| opcache is script	count=1
function_name	retourne des résultats de ||| get	count=1
function_name	de inode du fichier ||| inode	count=1
function_name	fonction geoip_org_by_name() ||| geoip org by	count=1
arg_pair	et windows ||| resource $handle int $operation	count=1
arg_pair	d'utilisateur username ||| string $username	count=1
function_name	agent lance une alerte ||| warning	count=1
arg_pair	donnée dans un résultat ||| resource $result	count=1
function_name	pour la durée ||| set include	count=1
function_name	[function_name_1] conversion automatique ||| [function_name_1] client [function_name_2]	count=1
function_name	une action qui peut ||| action	count=1
arg_pair	chaîne address ||| string $address string $default_host	count=1
return	est entrée moins le ||| int	count=1
function_name	un nouveau pattern ||| pattern	count=1
arg_pair	index ||| int $flags	count=2
function_name	obsolète ||| deprecated	count=1
function_name	nombre de couches ||| num	count=1
arg_pair	partagée ||| int $shmid int $start	count=1
function_name	être utilisée que ||| set metadata	count=1
function_name	défini l'époque minimale candidate ||| fann set cascade min cand	count=1
namespace	la couleur de ||| harupage	count=1
function_name	filtres de ||| filter queries	count=1
namespace	contient les ||| mongogridfs	count=1
function_name	la fonction pcntl_sigwaitinfo() suspend ||| sigwaitinfo	count=1
function_name	du document ||| document	count=1
arg_pair	dans un autre script ||| string $alias	count=1
arg_pair	colonnes et ||| resource $connection_id	count=1
function_name	file ||| set max poll	count=1
function_name	avec [function_name] right_operand ||| [function_name]	count=1
function_name	sera démarré ||| ps add launchlink	count=1
function_name	la plus proche de ||| imagecolorclosest	count=1
return	et seule la liste ||| void	count=1
function_name	curl fourni ||| curl	count=1
function_name	définit le terme à ||| terms upper bound	count=1
return	de configuration include_path ||| string	count=1
function	setcookie() excepté [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
namespace	spécifié par le paramètre ||| function	count=1
function_name	désactive la bufferisation des ||| buffering	count=1
function_name	de chaîne ||| string	count=2
arg_pair	définie par l'objet gmagickpixel ||| gmagickpixel $color	count=1
arg_pair	buffer buf via ||| string $buf	count=1
function_name	dimensions contenant la ||| ps string geometry	count=1
arg_pair	tente de créer une ||| string $database_name resource $link_identifier	count=1
function_name	les fournisseurs [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	personnalisées dans ||| set metadata	count=1
namespace	de ||| mongocursorinterface	count=2
return	statistiques sur ||| resource	count=1
arg_pair	le document source ||| string $src	count=1
function_name	la position courante du ||| show	count=1
namespace	de l'application précédemment définie ||| gearmanclient	count=1
function_name	chaîne de caractères ||| escape	count=1
function_name	classe personnalisée à ||| class	count=1
arg_pair	de la chaîne str ||| string $str string $delimiter	count=1
arg_pair	applique une ||| resource $image float $inputgamma	count=1
function_name	déplace ||| move to	count=1
function	pour [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	lecture/écriture nommé ||| bool $autounlock	count=1
function_name	le dernier identifiant autogénéré ||| db2 last insert	count=1
arg_pair	index ainsi ||| mixed $index	count=1
function_name	[function_name] déclarant la ||| get [function_name]	count=2
return	date ||| int	count=2
function_name	composants qui avaient été ||| newt	count=1
arg_pair	autre format ||| int $format int $compression	count=1
function_name	d'attente s'interrompt si elle ||| set	count=1
arg_pair	caractères lors ||| string $pattern	count=1
namespace	les modules à surveiller ||| mongolog	count=1
function	grande taille [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	données encodées raw/gzip/zlib ||| string $data string $max_decoded_len	count=1
arg_pair	xml depuis la représentation ||| string $filename	count=1
function_name	du fichier fourni et ||| uudecode	count=1
arg_pair	cubrid_lob_send() lit ||| resource $conn_identifier resource $lob_identifier	count=1
arg_pair	une séquence de ||| string $haystack	count=1
function_name	dans un fichier qui ||| set metadata	count=1
function_name	fournisseurs [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	comobject sur un l'objet ||| variant $comobject	count=1
function_name	informix ||| ifx	count=1
function_name	les données ||| mailparse	count=1
function_name	les liens ajoutés ||| border style	count=1
function_name	couleur ||| color floodfill	count=1
return	toutes les données du ||| bool	count=1
function_name	sauvegarde le ||| save	count=2
return	si elle ||| void	count=1
function_name	fichier temporaire ||| mailparse uudecode all	count=1
function_name	test sur ||| fann test data	count=1
function_name	libxml ||| libxml use internal	count=1
function_name	données sources ||| import	count=1
function_name	est supportée ||| is supported	count=1
function_name	délai [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	yaf_route_simple récupère ||| string $module_name string $controller_name	count=1
arg_pair	: la première contient ||| mongodb $db	count=1
function_name	des champs ||| field	count=2
arg_pair	une chaîne str avec ||| string $str	count=1
function_name	la temporisation ||| ob	count=1
arg_pair	donnés sans attendre le ||| resource $connection string $stmtname	count=1
function_name	retourne la description ||| get	count=1
function_name	extrait dans ||| mailparse uudecode	count=1
namespace	extrait dans un ||| function	count=1
function_name	retourne ||| get stats	count=1
function_name	variables var .. ||| array	count=1
function_name	dernière opération curl ||| curl errno	count=2
arg_pair	fichiers local vers ||| string $local_file	count=1
function_name	l'objet ||| set	count=1
arg_pair	dans subject ||| mixed $subject int $count	count=1
function_name	[function_name_1] résultat ibase ||| [function_name_2] [function_name_1]	count=2
function_name	fichiers ||| apc	count=1
function_name	l'évènement précisé et libère ||| event buffer free	count=1
function_name	à readline [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de ||| escape string	count=2
function_name	déplace ||| buffer	count=1
function_name	d'une image ||| image	count=2
function_name	postgresql [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	résultats à ||| bool	count=1
function_name	entrées du cache pour ||| wincache	count=1
function_name	tampon fourni par ||| add	count=1
function_name	retourne la ||| fann get	count=1
return	envoi tous les ||| boolean	count=1
arg_pair	contenu avec des ||| int $contents	count=1
function_name	définir les ||| set module	count=1
function_name	fréquence en deçà duquel ||| min term frequency	count=1
namespace	recherche sur les ||| function	count=1
function_name	de sortie ||| fann num output	count=1
function_name	détermine le type du ||| get type	count=1
function_name	[function_name_1] solr placera ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] deux versions ||| [arg_pair_2] [function_name_1]	count=1
function_name	transactions xa ||| xa gc	count=1
arg_pair	l' oid ||| resource $conn_identifier string $oid	count=3
function_name	le dernier identifiant ||| db2 last	count=1
function_name	liste de toutes les ||| list	count=1
function_name	corps des messages ||| imap	count=1
function_name	est connue sur le ||| is known	count=1
function_name	[function_name_1] afficher les ||| [function_name_2] [function_name_1]	count=1
function_name	d'occurrences par mot-clé ||| build keywords	count=1
function_name	l'échelle les sorties dans ||| fann scale output	count=1
function_name	la forme ||| form destroy	count=2
arg_pair	que ||| int $day	count=1
arg_pair	pour récupérer le ||| int $schema_type	count=1
function_name	seconde libmcrypt 2.4.x ||| mcrypt ecb	count=1
arg_pair	php event_handler en tant ||| callable $event_handler	count=1
function_name	la session ||| session	count=4
arg_pair	calendrier julien en ||| int $juliandaycount	count=1
arg_pair	de fichier fd pour ||| mixed $fd int $mode	count=1
function_name	établit une connexion à ||| connect	count=2
arg_pair	fichier resolv.conf et ||| string $filename	count=1
function_name	noeud à ||| node	count=1
arg_pair	du domaine domain retourné ||| string $domain string $codeset	count=1
arg_pair	une réponse au client ||| string $actor	count=1
function_name	de deux collections : ||| construct	count=1
function_name	sur le dossier d'archives ||| entry	count=1
namespace	la ||| mongocursor	count=1
function_name	un nouveau filtre entier ||| set filter range	count=1
function	socket [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	ajoute une balise à ||| add	count=1
return	pour le ||| bool	count=1
function_name	qui ||| metadata	count=1
function_name	curl de façon ||| curl multi	count=1
function_name	fonction est similaire à ||| by	count=1
arg_pair	le contenu des fichiers ||| mongodb $db string $prefix	count=1
return	chaîne de requête ||| string	count=1
arg_pair	une version améliorée de ||| resource $result int $result_type	count=2
function_name	au champ ||| mysql field	count=1
function_name	la dernière tentative de ||| connect errno	count=1
function_name	la fonction d'activation ||| set activation	count=3
return	réception d'un ||| int	count=1
function_name	de la page sous ||| reset image page	count=1
return	entière [return] paramètre sparse_method ||| [return]	count=1
rest	sur le [function_2] ||| [return_1] [function_2]	count=3
function_name	données n'a plus de ||| dead	count=1
function_name	un nouveau filtre entier ||| filter	count=2
function_name	que données sources ||| import	count=1
arg_pair	universal database ibm cloudscape ||| string $username	count=1
function_name	fonction dbplus_xlockrel() ||| xunlockrel	count=1
function_name	fonction d'activation pour le ||| fann set activation function	count=1
function_name	antislashs devant les ||| escape	count=1
rest	[return_1] informations utiles ||| [return_1] ibase blob [function_2]	count=1
return	le code erreur ||| int	count=1
arg_pair	la suppression d'un document ||| array $deleteoptions array $protocoloptions	count=1
function_name	de l'étape d'erreur sarprop ||| sarprop step error threshold	count=1
function_name	est variadique ||| is variadic	count=2
function_name	couleur de l'image ||| color	count=1
function_name	lit les ||| read	count=1
function_name	la fréquence à ||| mlt min doc frequency	count=1
function_name	retourne un identifiant qui ||| get	count=1
function_name	code ||| strerror	count=1
function_name	niveau ||| level	count=1
function_name	[function_name_1] [function_name_2] la page ||| [function_name_2] [function_name_1]	count=2
function_name	de session ||| session	count=1
function	définit les mots de [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	peut être ||| maxdb	count=1
function_name	la session courante ||| is in session	count=1
namespace	plus de résultats à ||| mongocursorinterface	count=1
arg_pair	sur la ||| resource $imap_stream	count=1
arg_pair	fixées avec gnupg_adddecryptkey auparavant ||| string $text	count=1
function_name	d'attente s'interrompt si elle ||| set max poll time	count=1
function_name	ne doit pas être ||| construct	count=1
function_name	ajoute une balise à ||| add element	count=1
function_name	[function_name_1] champs utilisés ||| [function_name_2] [function_name_1]	count=1
return	vérifie si le tableau ||| bool	count=1
arg_pair	à cet index ||| mixed $index	count=1
arg_pair	message ||| string $message int $message_type	count=1
function_name	direction du tri les ||| sort	count=1
function_name	retourne la valeur ||| offset get	count=1
arg_pair	base de données microsoft ||| array $connectioninfo	count=1
function_name	un test ||| module self test	count=1
return	similaire ||| domelement	count=1
return	la fonction de ||| void	count=1
function_name	nom d'hôte ||| connect host	count=1
function_name	sous-chaîne de haystack allant ||| strstr	count=1
function_name	l'identifiant de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	le certificat [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	défini les drapeaux ||| flags	count=1
function_name	fonction libère ||| form destroy	count=1
function_name	base de données qui ||| db	count=1
return	script php d'un serveur ||| bool	count=1
return	est ||| mixed	count=1
function_name	été ajoutés à la ||| form	count=1
function_name	lors de l'ajout ||| method	count=1
function	[function_name_1] d'une série ||| [function_name_1] [arg_pair_2]	count=2
function_name	toutes les connexions ||| all	count=1
arg_pair	sont gmt ||| int $is_dst	count=1
function_name	définit la couleur de ||| set color mask	count=1
function_name	dimensions contenant la largeur ||| string geometry	count=1
arg_pair	fichier spécial ou ||| int $mode	count=1
function	représentation json [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	met en cache une ||| string $key	count=2
function_name	dans un ||| mailparse	count=1
function_name	peut ||| maxdb debug	count=2
namespace	la tâche ||| gearmantask	count=2
arg_pair	un ||| eventbase $base	count=3
arg_pair	par la fonction socket_create() ||| resource $socket string $address	count=1
function_name	prochaine requête ||| next	count=1
function	[function_name_1] le texte ||| [function_name_1] type [arg_pair_2]	count=1
arg_pair	un bloc de ||| int $key	count=1
namespace	être utilisée pour définir ||| mongolog	count=1
function_name	ferme la connexion avec ||| odbc close	count=1
arg_pair	fonction à fournir ||| string $contents int $status	count=1
function_name	référence ||| reference	count=1
function	retourne le [arg_pair_2] ||| [function_name_1] contents [arg_pair_2]	count=3
function_name	à readline [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	lie un tableau php [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	un tableau multidimensionnel contenant ||| array	count=1
function_name	dernière fonction [function_name_2] ||| [function_name_2] get [function_name_1]	count=4
arg_pair	de couleurs ||| int $treedepth bool $dither	count=1
function_name	champ spécifié par sa ||| mysql field seek	count=1
function_name	un nouveau [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] dict ||| [function_name_1] [arg_pair_2]	count=1
namespace	est ||| mongocursorinterface	count=1
function_name	équivalent à memcached::prepend() mais ||| prepend by	count=1
return	avec un ||| domelement	count=1
function_name	remplace l'attribut ||| mod replace	count=1
arg_pair	service daemon est ||| string $daemon	count=1
function_name	efface un ||| pdf delete	count=1
function_name	méthode ||| construct	count=1
arg_pair	cc [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	qu'elle ignore la ||| string $string	count=1
function_name	chaîne de caractères pour ||| string	count=1
function_name	de la dernière réponse ||| last response headers	count=1
arg_pair	stocke un certificat x509 ||| mixed $x509	count=1
function_name	libère les ressources mémoires ||| newt form destroy	count=1
function_name	[function_name_1] les objets ||| [function_name_1] [function_name_2]	count=1
function_name	service exposé par le ||| gupnp service proxy	count=1
return	demandé est nécessaire pour ||| string	count=1
namespace	affiche ou sauvegarde ||| function	count=3
arg_pair	sur une ||| string $servername	count=1
arg_pair	mode wsdl ||| mixed $wsdl	count=1
namespace	que pour stocker ||| pharfileinfo	count=1
return	à la fonction rewinddir() ||| void	count=1
namespace	l'endroit où les ||| function	count=1
function_name	d'entrainement en commençant ||| train data	count=1
function_name	termine ||| end children	count=1
namespace	envoyer au ||| mongocursorinterface	count=1
return	la file ||| void	count=1
function	[function_name_1] prompt ||| [function_name_1] callback handler install [arg_pair_2]	count=1
function_name	une demande radius consiste ||| radius create	count=1
namespace	si elle a été ||| function	count=1
arg_pair	ligne récupérée ||| int $row	count=1
function_name	clé soundex de ||| soundex	count=1
function_name	fonctionnement ||| running	count=1
function_name	à cette méthode ||| call	count=1
function_name	[function_name_1] la demande ||| [function_name_2] [function_name_1]	count=1
function_name	courant est un jste ||| is jste	count=1
function_name	sémaphore associé au champ ||| mysql field flags	count=1
function_name	[function_name_1] sarprop ||| [function_name_2] [function_name_1]	count=14
function_name	les composants qui avaient ||| newt form	count=1
return	crée une propagation de ||| resource	count=1
function_name	termine ||| cancel monitor	count=2
function_name	fonction ferme la ||| close	count=1
function_name	une connexion [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de fichiers distant ||| ssh2 sftp	count=4
namespace	dessin ||| function	count=1
arg_pair	la dernière modification d'un ||| int $pri	count=1
arg_pair	un tableau de sockets ||| array $except	count=1
arg_pair	fixe ||| float $x	count=2
function_name	le bytecode ||| bcompiler	count=3
return	clé et les ||| void	count=1
function_name	[function_name_1] connexion persistante ||| [function_name_2] [function_name_1]	count=2
function_name	l'orientation ||| orientation	count=1
function_name	avec un ||| get	count=1
arg_pair	de texte avec ||| string $text	count=1
arg_pair	le ||| int $type float $disp_time	count=1
arg_pair	à la méthode yar_concurrent_client::loop() ||| array $parameters	count=1
function_name	utilisé pour diriger les ||| set multi by	count=1
function_name	de gris pour ||| setgray	count=1
arg_pair	date stockée dans ||| resource $pxdoc int $value	count=1
function_name	tâche ||| background	count=2
function_name	pour récupérer ||| cubrid column names	count=1
function_name	première ||| construct	count=1
function_name	racine ||| root device stop	count=2
namespace	enregistre le code javascript ||| v8js	count=1
arg_pair	du ||| string $dn	count=1
arg_pair	change la priorité ||| int $priority	count=1
function_name	lit le bytecode ||| bcompiler parse	count=1
function_name	script ||| set	count=1
namespace	temps écoulé ||| hrtime\stopwatch	count=1
arg_pair	la largeur de ||| float $width	count=1
arg_pair	lie ||| mixed $param	count=1
function_name	est similaire ||| mysql field	count=1
function_name	de connexion passées avec ||| cubrid connect	count=1
arg_pair	l'algorithme ||| string $lib_dir	count=1
namespace	attribut dans un document ||| sphinxclient	count=1
namespace	émise ||| solrresponse	count=1
function_name	[function_name_1] version mineure ||| [function_name_2] [function_name_1]	count=1
function_name	contenu des fichiers ||| construct	count=1
arg_pair	constante imagetype_xxx fournie ||| bool $include_dot	count=1
function_name	l'intervalle quantique de l'instance ||| quantum range	count=1
arg_pair	résultats ||| resource $result	count=1
function_name	met à l'échelle ||| scale train	count=1
function_name	contenant ||| ingres	count=2
function_name	récupère la version ||| get version	count=1
function_name	informations d'un [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	des données personnalisées ||| set	count=1
namespace	à la position courante ||| function	count=1
return	avaient été ajoutés à ||| void	count=1
arg_pair	choisit le ||| int $dictionary_link string $file	count=1
function_name	fonction d'activation pour le ||| set activation	count=1
arg_pair	peut créer ou ||| int $size	count=1
function_name	utilisée pour lier ||| cubrid lob2 bind	count=1
function_name	la [function_name] ||| get [function_name]	count=1
return	dans la ||| int	count=3
function_name	champs de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
return	sous la ||| string	count=1
function_name	est ||| module is	count=1
function_name	queues et l'application ||| mqseries disc	count=1
function_name	ligne de résultat retournée ||| fetch	count=1
function_name	de compression ||| entry compressionmethod	count=1
function_name	ajoute ||| add facet	count=1
function_name	méthode oauthprovider::timestampnoncehandler() ||| nonce	count=1
return	[return] l'entrée ||| [return]	count=3
arg_pair	target avec le nom ||| string $target	count=1
function_name	de ligne à width ||| setlinewidth	count=1
function_name	retourne [function_name_2] ||| [function_name_1] client [function_name_2]	count=1
function_name	données du fichier ||| mailparse uudecode all	count=1
arg_pair	la fonction socket_create() ||| int $backlog	count=1
function_name	récupère une ||| get class	count=1
function_name	[function_name_1] d'un attribut ||| [function_name_1] [function_name_2]	count=1
function	en-têtes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	forme d'un nouvel ||| int $x int $y	count=1
function_name	depuis un agent snmp ||| snmp2	count=1
return	toujours false ||| bool	count=1
namespace	prend plus de ||| function	count=1
function_name	du thread de la ||| thread	count=2
function_name	une connexion persistante ||| cubrid pconnect	count=1
arg_pair	mktime() ||| int $year	count=2
return	miniatures ||| bool	count=1
arg_pair	accepte un tableau ||| array $except	count=2
function_name	crée une nouvelle connexion ||| connect	count=1
function_name	retourne le type ||| get mime type	count=1
arg_pair	sauvegarde une version ||| resource $image string $filename	count=1
function_name	de ||| include	count=2
arg_pair	plus grand degré ||| array $pipes string $cwd	count=1
function_name	spécifié ||| zip	count=1
arg_pair	en mode wsdl ou ||| mixed $wsdl	count=1
function_name	les données du ||| uudecode all	count=1
function_name	création du blob ||| ibase blob cancel	count=1
function_name	exécuter la fonction time() ||| get timestamp	count=1
function_name	qui représente le numéro ||| mysql	count=1
function_name	bibliothèque ||| libversion	count=1
arg_pair	récupère la nth -ème ||| gmp $a int $nth	count=1
arg_pair	en date ||| int $juliandaycount bool $hebrew	count=1
function_name	place des antislashs devant ||| string	count=1
function_name	secondes ||| set max poll	count=1
function_name	rendu courant du texte ||| text rendering	count=1
arg_pair	et la seconde contient ||| string $prefix	count=1
function_name	spécifiée et commence une ||| db2	count=1
function_name	est un jste ||| is jste	count=1
function_name	retourne la taille décompressée ||| entry filesize	count=1
return	courant du tampon ||| string	count=1
function_name	le serveur ftp et ||| ftp get	count=1
function_name	libère toute la mémoire ||| mysql free	count=1
function_name	des données de déboguage ||| debug	count=1
arg_pair	nombre de jours ||| int $day	count=1
function_name	utilisez la fonction pdostatement::columncount() ||| column count	count=1
function_name	[function_name_1] ligne ||| [function_name_1] current [function_name_2]	count=1
function_name	récupère [function_name_2] ||| [function_name_1] packed [function_name_2]	count=1
arg_pair	prompt et retourne immédiatement ||| string $prompt	count=1
namespace	du tampon augmente ||| eventbuffer	count=1
function_name	type ||| type	count=3
function_name	dictionnaire représenté par ||| crack closedict	count=1
function_name	l'objet sous la ||| to string	count=1
function_name	de bordure ||| image border	count=1
arg_pair	flags ||| int $flags	count=1
function_name	sous ||| fetch	count=1
function_name	couleur d'arrière-plan [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	temporaire tous les ||| all	count=1
function_name	[function_name_1] commence après ||| [function_name_2] [function_name_1]	count=12
function_name	l'arc sinus de chaque ||| trader asin	count=1
return	travaux assigné ||| string	count=1
function_name	la profondeur de l'image ||| image depth	count=1
namespace	extrait une [namespace] de ||| [namespace]	count=1
function_name	une ressource ||| resource	count=1
namespace	par le paramètre ||| eventbuffer	count=1
function_name	[function_name_1] d'équilibrage ||| [function_name_2] [function_name_1]	count=1
arg_pair	son index field_number ||| int $field_number	count=1
function_name	graphème ||| grapheme	count=1
function_name	les options associées à ||| flags	count=1
function_name	décale ||| roll	count=1
namespace	splsubject depuis ||| splobserver	count=1
namespace	spécifiée ||| imagick	count=1
arg_pair	retourne un tableau ||| array $a	count=2
function_name	crée une nouvelle surface ||| create	count=1
function_name	ajoute ||| dict add	count=1
arg_pair	pas attrappées ||| string $cb string $arg	count=1
function_name	doit être utilisée ||| metadata	count=1
return	ajoute la chaîne de ||| string	count=1
function_name	[function_name_1] géométrie de ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] à cert ||| [arg_pair_2] [function_name_1]	count=5
function_name	récupère la valeur courante ||| get	count=3
arg_pair	une ressource bbcode_container existante ||| resource $bbcode_container string $tag_name	count=1
function_name	calcule le sinus hyperbolique ||| trader sinh	count=1
function_name	spécifié par ||| entry	count=1
function_name	coordonnées ||| imagecopy	count=1
function_name	retourne la [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=1
function_name	ou delete [function_name] ||| [function_name] affected	count=2
function_name	nouveau filtre entier ||| filter	count=2
function_name	donnée est ||| is	count=4
function_name	l'échelle ||| fann scale output	count=1
arg_pair	domaine courant pour une ||| string $domain	count=1
function_name	une seule ligne depuis ||| cubrid fetch	count=1
function_name	un tableau ||| iterator to array	count=1
function_name	conteneur de chargement ||| set	count=1
function_name	la clé key ||| multi by key	count=1
function_name	contenu courant du ||| ob	count=1
function_name	pâques pour une ||| easter days	count=1
function_name	que ||| gmmktime	count=1
arg_pair	est identique à ||| string $pattern	count=1
return	le numéro ||| int	count=4
function_name	retourne ||| dbase numfields	count=2
namespace	l'objet imagick et libère ||| imagick	count=1
arg_pair	le nombre de jours ||| int $year	count=1
function_name	la clé key sur ||| key	count=2
function_name	envoyées [function_name] voir la ||| [function_name] mppe	count=1
function_name	configuration include_path pour ||| set include	count=1
function_name	yaml ||| yaml	count=1
function_name	ajoute le code javascript ||| add doc javascript	count=1
function	[function_name_1] chaîne address ||| [arg_pair_2] [function_name_1]	count=1
function_name	récupère le type ||| get byte type	count=2
function_name	de l' eventbuffer ||| add buffer	count=1
function_name	la trace de la ||| trace	count=2
function_name	nouveau gabarit ||| pdf begin template	count=1
return	sortie normalement en ||| int	count=1
function_name	retourne le noeud ||| get attribute node	count=1
arg_pair	sur le ||| resource $session	count=1
function_name	une ||| string	count=1
function_name	fonction est similaire ||| get element	count=1
function_name	la version ||| info	count=1
arg_pair	contenu d'un élément dans ||| int $index	count=1
function_name	les [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	fonction [function_name] ||| [function_name]	count=3
function_name	fonction ||| get element by	count=2
arg_pair	de la requête request ||| string $request string $string	count=1
function_name	extension à ||| register extension	count=1
function_name	qui ||| form destroy	count=4
function_name	la prochaine ligne d'une ||| fetch	count=1
function_name	[function_name_1] champs du ||| [function_name_1] [function_name_2]	count=3
namespace	document ||| sphinxclient	count=1
function_name	ibase_connect() ou ibase_pconnect() ||| drop	count=1
function_name	arbre de ||| load string	count=1
function_name	bbcode ||| bbcode	count=1
function	[function_name_1] msg_number ||| [arg_pair_2] [function_name_1]	count=3
namespace	être appelé ||| collectable	count=1
function_name	contenu ||| qc clear	count=1
function_name	la souscription ||| imap unsubscribe	count=1
return	un algorithme de ||| void	count=1
arg_pair	le document xml filename ||| string $filename	count=1
namespace	objet syncmutex ||| syncmutex	count=1
arg_pair	la clé key et ||| string $key	count=1
function_name	[function_name_1] champs ||| [function_name_2] [function_name_1]	count=13
function_name	prépare une page ||| pdf open pdi page	count=1
arg_pair	fait que les ||| int $year	count=2
return	si une ||| bool	count=1
arg_pair	utilisées par le ||| int $flags	count=1
function_name	cette fonction peut être ||| set module	count=1
function_name	analyseur à ||| parser	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=3
function_name	en cours ||| include	count=1
namespace	fonction libère les ||| function	count=1
function_name	à utiliser dans les ||| soap	count=1
function_name	forme et tous les ||| newt form	count=1
function_name	tous les fichiers encodés ||| all	count=1
return	[return] position courant ||| [return]	count=3
return	se déplace ||| void	count=2
arg_pair	locale ou distante ||| int $maxlen	count=1
arg_pair	enregistrés ||| callable $error_callback	count=1
arg_pair	le style de ||| int $type	count=1
function_name	passée ||| db2	count=1
function	[function_name_1] fichier ||| [arg_pair_2] [function_name_1]	count=1
function_name	est similaire ||| get element by	count=1
function_name	d'attente s'interrompt ||| max poll time	count=1
function_name	paquet ||| wddx	count=1
function_name	alias basé sur ||| alias	count=1
arg_pair	position ||| string $encoding	count=2
function_name	supprime [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
namespace	de la [namespace] en cours ||| [namespace]	count=1
function_name	avec db2_connect() ||| db2	count=1
function_name	les informations ||| stat	count=1
function_name	de l'image pour créer ||| image	count=1
function_name	de remous autour duquel ||| swirlimage	count=1
function_name	[function_name_1] demande courante ||| [function_name_1] [function_name_2]	count=1
return	les modules à ||| void	count=1
function_name	données ||| dbase numfields	count=2
arg_pair	carte map ||| string $domain string $map	count=1
function_name	[function_name_1] référence ||| [function_name_1] [function_name_2]	count=5
namespace	la date ||| gmagick	count=1
function_name	route ||| route	count=2
function_name	xml ||| xml set character data handler	count=2
arg_pair	à la fonction mktime() ||| int $second	count=1
function_name	et retourne le texte ||| gnupg	count=1
function_name	contrôle de ||| control	count=1
function_name	sybase associé ||| sybase	count=2
arg_pair	l'endroit où ||| resource $errdat	count=1
namespace	dans un ||| function	count=1
function_name	toutes les valeurs de ||| values	count=1
namespace	le tableau passé ||| function	count=1
function_name	fonction pcntl_sigwaitinfo() suspend ||| sigwaitinfo	count=1
function_name	position du neurone de ||| from neuron	count=1
function_name	terme ||| upper bound	count=2
function_name	la session courante ||| session	count=3
function_name	composants qui sont sur ||| destroy	count=1
function_name	variables var .. ||| array push	count=1
function	[function_name_1] le résultat ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	les données ||| string $data string $optlist	count=1
function_name	ressources mémoires ||| newt form destroy	count=1
arg_pair	avec une ||| resource $psdoc float $red	count=1
function_name	un guid binaire de ||| mssql guid	count=1
return	à des ||| array	count=1
function_name	lit l'orientation ||| orientation	count=1
function_name	retourne [function_name_2] ||| [function_name_1] image background [function_name_2]	count=1
function_name	récupère la taille ||| get packed size	count=1
namespace	la première fois) ||| recursivetreeiterator	count=1
arg_pair	index d'une ||| int $index	count=1
function_name	récupère un élément de ||| func get	count=1
return	en commençant ||| bool	count=1
function_name	de champs ||| dbase	count=1
function_name	pour tous les neurones ||| set	count=2
function_name	la forme en ||| newt	count=1
function_name	l'extension pour la ||| extension	count=1
return	génère la ||| string	count=1
function_name	formatage ultérieur et ||| pdf create textflow	count=1
function_name	configure l'espace de ||| colorspace	count=1
namespace	convertit tout ou ||| function	count=1
arg_pair	sur une base ||| string $servername	count=1
namespace	le ||| gearmanjob	count=2
return	de la base de ||| int	count=1
arg_pair	la couleur de fond ||| string $format	count=1
arg_pair	installe un ||| mysqli $mysqli_connection	count=1
arg_pair	la valeur value1 et ||| mixed $value1	count=1
arg_pair	position représentant une ||| resource $stmt int $row_number	count=1
function_name	est un ||| is	count=3
arg_pair	la ligne tuple ||| resource $relation string $tuple	count=1
arg_pair	la base de données ||| string $database	count=2
function_name	effectue une équivalence de ||| eqv	count=1
arg_pair	offset et dans ||| resource $lob_identifier int $offset	count=1
function_name	le facteur décroissant quickprop ||| set quickprop decay	count=1
function_name	si une exception ||| exception	count=1
function_name	$this ||| close	count=1
function_name	la fin de ||| end	count=1
function_name	typiquement parcourt un lot ||| batch	count=1
namespace	utilisée que pour ||| pharfileinfo	count=1
function_name	sur des ||| newt	count=1
arg_pair	dans le système ||| string $pathname int $mode	count=1
arg_pair	à la fonction mktime() ||| int $second int $month	count=1
function_name	fonction retourne une nouvelle ||| get	count=1
function_name	image raw ||| raw	count=1
arg_pair	ligne récupérée ||| array $ctorparams int $row	count=1
function_name	pour ||| set error	count=1
namespace	un jeu ||| mongoclient	count=1
function_name	cette fonction est similaire ||| get element	count=1
return	clé ||| void	count=1
function_name	une paire de sockets ||| socket pair	count=1
function_name	du ||| facet enum cache	count=1
return	utile uniquement ||| array	count=1
namespace	l'annotation ||| haruannotation	count=2
function_name	d'attente s'interrompt ||| set max poll time	count=1
function_name	essaie de ||| fbsql drop db	count=1
arg_pair	identique ||| int $day	count=1
namespace	rappel avait été invoquée) ||| evwatcher	count=1
function_name	dans une instance glo ||| to glo	count=1
function_name	[function_name_1] paramètre facet.date.gap ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] brutes de ||| [function_name_2] [function_name_1]	count=2
function_name	seront triés par leur ||| set	count=1
arg_pair	à une [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	de nouvelles coordonnées ||| moveto	count=1
function_name	image depuis le ||| image file	count=1
function_name	prend plus ||| set max poll	count=1
function_name	de caractères passée ||| escape	count=1
return	d'une chaîne de ||| sdo_das_xml_document	count=1
arg_pair	contenant l'argument number représenté ||| int $frombase	count=1
function_name	référentiel ||| svn	count=3
function_name	efface ||| sftp rmdir	count=1
arg_pair	texte text aux ||| resource $p string $text	count=1
function_name	candidates ||| candidate	count=1
function_name	candidates [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	les données du ||| mailparse uudecode	count=1
arg_pair	le ||| int $timestamp bool $check_consistency	count=1
function_name	retourne [function_name] voir ||| get [function_name]	count=1
function_name	[function_name_1] champs ||| [function_name_1] [function_name_2]	count=8
function_name	une ||| sqlsrv connect	count=1
namespace	descripteur ||| eventutil	count=1
function_name	d'une classe existante nommée ||| class	count=1
function_name	statut spécifié grâce ||| status	count=1
arg_pair	la première contient les ||| string $prefix	count=1
function_name	jeu ||| db2	count=22
return	tar [return] méthode soulève ||| [return]	count=1
namespace	vérifie si le tableau ||| splfixedarray	count=1
return	retourne la méthode de ||| string	count=1
function	ouvre [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	dossier d'archives spécifié par ||| function	count=1
function_name	ou plusieurs fonctions pour ||| add function	count=1
function_name	de compression utilisée sur ||| zip	count=1
function_name	de compression ||| zip	count=1
return	appelle ||| void	count=1
function_name	dernière commande [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	partir d'une ||| sdo_das_xml_document	count=1
function_name	id3v1 qui pourra être ||| id3v1	count=1
function_name	ou retire un profil ||| profile	count=1
arg_pair	qui héberge ||| array $data	count=1
function_name	traduction ||| html translation table	count=2
function_name	de l'espace de noms ||| namespace	count=1
function_name	la ||| eio	count=1
return	en coordonnées ||| bool	count=2
arg_pair	avec gnupg_adddecryptkey auparavant ||| string $text	count=1
arg_pair	xml basé sur des ||| string $diff	count=1
function_name	le dossier d'archives spécifié ||| entry	count=1
function_name	informations sur la file ||| stat queue	count=1
function_name	commence un objet ||| begin	count=1
arg_pair	un message message ||| string $message string $options	count=1
function_name	contenu du ||| get	count=1
function_name	clé pour un ||| key	count=1
arg_pair	différence entre des tableaux ||| array $array1	count=1
function_name	sqlite ||| sqlite close	count=2
function_name	s'interrompt si elle prend ||| time	count=1
function_name	avec un traitement ||| images	count=1
function_name	prend plus ||| eio set max poll	count=1
namespace	ou désactive ||| function	count=2
function_name	de preg_replace() hormis le ||| preg replace callback	count=1
return	toutes les ||| int	count=1
arg_pair	dn ||| resource $link_identifier string $dn	count=3
function_name	libère toute ||| mysql free result	count=1
function_name	informations sur la file ||| msg stat queue	count=1
function_name	[function_name_1] de ||| [function_name_2] first [function_name_1]	count=1
function_name	d'erreur ||| sqlite error	count=1
function_name	la ||| newt form	count=2
arg_pair	le fait que ||| int $month	count=1
function_name	le facteur quickprop mu ||| quickprop mu	count=1
arg_pair	en la valeur spécifiée ||| int $type mixed $value	count=1
function_name	[function_name_1] type nombre ||| [function_name_1] [function_name_2]	count=3
arg_pair	une pile et empile ||| array $array mixed $value1	count=1
function_name	stoppe ||| stop db	count=2
function_name	champ ||| field seek	count=1
function_name	contenant les tailles ||| supported key sizes	count=1
arg_pair	résultats listant les tables ||| string $schema string $table_name	count=1
function_name	temporisation ||| ob end clean	count=1
function_name	confort pour émettre les ||| header	count=1
arg_pair	métadonnées ||| string $prefix	count=1
function_name	du ||| field	count=5
function_name	base pour toutes les ||| construct	count=1
namespace	poll courant ||| zmqpoll	count=1
function_name	d'attente s'interrompt si ||| max poll	count=1
arg_pair	que la valeur ||| string $name string $value	count=1
function_name	de sortie ||| ob get	count=1
function_name	récupère la valeur d'un ||| get	count=1
function_name	bytecode et initialise un ||| bcompiler	count=1
function_name	de colonne courant ||| current column	count=2
arg_pair	chaîne ||| string $from	count=1
arg_pair	cette ||| string $string	count=1
namespace	est sortie normalement en ||| ev	count=1
function_name	les fonctions de rappel ||| buffer set callback	count=1
function_name	non dans la session ||| enchant dict is in session	count=1
arg_pair	et produit les ||| string $to	count=1
namespace	image dans ||| imagick	count=1
arg_pair	les paramètres passés ||| int $hour	count=1
function_name	le code erreur ||| error code	count=1
namespace	virtuel ou du disque ||| function	count=1
arg_pair	une nouvelle entrée à ||| string $value	count=1
arg_pair	utiliser pendant l'entrainement ||| resource $ann	count=1
return	avec une ||| array	count=1
function_name	libère un ||| free descriptor	count=1
function_name	paramètre patch et ||| patch	count=1
function_name	dans une séquence ||| filename	count=1
namespace	si elle prend ||| function	count=1
function	[function_name_1] l'hôte hostname ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	date stockée dans un ||| resource $pxdoc int $value	count=1
function_name	tailles de clés supportées ||| key sizes	count=2
function	[function_name_1] lot d'opérations ||| [function_name_1] [arg_pair_2]	count=3
namespace	soap ||| soapserver	count=1
function_name	la fonction est ||| is	count=4
function_name	du champ à ||| field length	count=1
function_name	dictionnaire ||| dict	count=1
namespace	d'objets ||| mongocommandcursor	count=1
namespace	seulement supprimer [namespace] ||| [namespace]	count=1
function	[function_name_1] valeur courante ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] algorithm ||| [function_name_2] module get [function_name_1]	count=1
arg_pair	fonction ||| array $array	count=1
function_name	avec d'autres fonctions pspell ||| pspell new	count=1
namespace	l'index du noeud ||| splpriorityqueue	count=1
namespace	l'archive phar actuelle sur ||| phar	count=1
function_name	la forme ||| newt form	count=2
namespace	curseur ||| mongocommandcursor	count=1
arg_pair	event ||| resource $event	count=1
function_name	par [function_name] applications pour ||| [function_name]	count=1
function_name	[function_name_1] lue ||| [function_name_2] [function_name_1]	count=10
function_name	la ||| set include path	count=6
arg_pair	[arg_pair] php en ||| [arg_pair]	count=1
namespace	[namespace] de tous ||| [namespace]	count=1
function_name	à la forme en ||| newt form destroy	count=1
function_name	fonction libère ||| form	count=1
namespace	libeio tant ||| function	count=1
arg_pair	jeu de résultats ||| resource $stmt string $classname	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] strpos [arg_pair_2]	count=1
function_name	opérateurs ||| unset	count=1
function_name	nouveau contexte ||| context	count=1
function_name	fourni et ||| all	count=1
function_name	un verrou ||| dbplus	count=1
arg_pair	la ligne récupérée ||| array $ctorparams int $row	count=1
function_name	l'écrit ||| fget	count=1
function_name	du réseau neuronal ||| fann create	count=1
function	blob [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	lit nbytes octets de ||| int $nbytes	count=1
function_name	par la forme ||| newt form destroy	count=1
return	en retourne si ||| bool	count=1
function_name	date de modification ||| ctime	count=1
function_name	incrémente ||| inc	count=1
arg_pair	spécifié local_socket ||| int $errno	count=1
arg_pair	de la recherche ||| string $pattern	count=1
function_name	chaîne à guillemets ||| qprint	count=1
arg_pair	une commande ||| string $query	count=1
return	ignore la casse des ||| int	count=1
function_name	cache ||| qc	count=1
function_name	sur le dossier ||| compressionmethod	count=1
function_name	imap vers ||| imap	count=1
function_name	l'encodage utilisé ||| encoding	count=1
function_name	[function_name_1] éléments descendants ||| [function_name_2] [function_name_1]	count=4
function_name	seul ||| close	count=1
namespace	d'exceptions par défaut ||| function	count=1
arg_pair	et le ||| string $server	count=1
return	une variable de requête ||| bool	count=1
return	passer en ||| bool	count=1
namespace	vérifie si une classe ||| reflectionclass	count=5
function_name	antislashs ||| db2 escape	count=1
function_name	cosinue pour chaque ||| cos	count=1
function_name	[function_name_1] de champs ||| [function_name_1] [function_name_2]	count=6
arg_pair	utilisée pour établir ||| string $dbname string $userid	count=1
function_name	fréquence en ||| term frequency	count=2
function_name	qui ||| mailparse uudecode all	count=2
arg_pair	=?iso-8859-1?... est la ||| string $field_value	count=1
namespace	seconde ||| mongogridfs	count=1
arg_pair	avec un espace ||| string $qualifiedname	count=1
function_name	xml associé avec ||| xml error string	count=2
function_name	bloc de mémoire ||| shmop	count=1
arg_pair	coordonnées de alpha ||| float $alpha	count=1
arg_pair	position courante du ||| resource $psdoc	count=1
function_name	propriété de la police ||| font	count=1
function_name	des informations issus ||| multi info	count=1
return	la brosse courante ||| bool	count=1
function_name	pour croitre la taille ||| increase factor	count=1
function_name	remplace les données associées ||| replace	count=1
function_name	méthode d'entrelacement ||| set image interlace scheme	count=1
function_name	vérification de la syntaxe ||| php check syntax	count=1
function_name	qui avaient été ||| newt	count=1
function_name	trace pour ||| trace	count=1
function_name	à propos ||| win32 ps stat	count=1
arg_pair	lors de ||| string $pattern string $string	count=1
arg_pair	fichier fd pour l'intervalle ||| mixed $fd int $mode	count=1
function_name	lot d'objets ||| batch	count=1
function_name	taux ||| connection rate	count=2
function_name	et ||| ns	count=1
function_name	ajoute un nouveau filtre ||| set filter range	count=1
arg_pair	position x ||| int $x	count=1
function_name	liste ||| ssh2 publickey list	count=1
function_name	pclose() hormis le fait ||| proc close	count=1
function_name	les bits d'exécution ||| chmod	count=1
function_name	infile [function_name] précédemment ||| [function_name] infile	count=1
arg_pair	une ||| string $title object $parent_outline	count=1
arg_pair	pour ||| string $name mixed $callback	count=1
arg_pair	des données ||| string $data	count=1
namespace	classe définie ||| reflectionclass	count=1
arg_pair	un ||| mixed $callback mixed $arg	count=2
return	chaîne à ||| string	count=1
function_name	la signature de ||| signature	count=1
function_name	résultat décrivant la base ||| fbsql list tables	count=1
function_name	place des antislashs devant ||| escape	count=1
arg_pair	que ||| int $hour	count=1
namespace	requête émise ||| solrresponse	count=1
function_name	utilisant [function_name] crochets ||| offset [function_name]	count=1
function_name	prochaine ligne ||| pdf continue	count=1
arg_pair	les appels distants rpc ||| callable $callback	count=1
namespace	interne au ||| solrdocument	count=1
namespace	de la balise xml ||| simplexmliterator	count=1
function_name	remplit la forme ||| fill stroke	count=1
function_name	une autre fonction utilisateur) ||| restore error	count=1
function_name	schéma depuis la base ||| cubrid schema	count=1
function_name	[function_name_1] champ field ||| [function_name_2] [function_name_1]	count=2
function_name	nombre de ||| dbase numfields	count=1
function_name	de délai d'attente ||| timeout	count=1
function_name	de la session courante ||| session	count=1
arg_pair	sauvegarde son contenu dans ||| resource $connection int $oid	count=1
function_name	police et la prépare ||| pdf load font	count=1
function_name	[function_name_1] [function_name_2] le ||| [function_name_2] [function_name_1]	count=10
function_name	retourne ||| openssl get	count=1
arg_pair	attribut ||| string $index	count=1
function_name	qualité de ||| quality	count=1
function_name	encodés qui s'y trouvent ||| mailparse uudecode	count=1
function_name	la version courante de ||| version	count=1
function_name	pour envoyer la ||| set by	count=1
function_name	socket créé ||| socket	count=1
arg_pair	un ||| string $field_override	count=2
function_name	exe ou auto-exécutable) ||| exe footer	count=1
function_name	à détruire un bloc ||| shmop delete	count=1
arg_pair	du jeu ||| string $classname	count=1
return	caractères représentant la version ||| string	count=1
return	prend plus de ||| void	count=1
arg_pair	l'aide de deux ||| string $prefix	count=1
function_name	chaîne [function_name] utilisée ||| maxdb [function_name]	count=1
function_name	mate [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	le paramètre eol_style ||| int $eol_style	count=1
arg_pair	à memcached::getdelayed() mais la ||| callable $value_cb	count=1
namespace	déplace vers ||| norewinditerator	count=1
function_name	timestampnoncehandler qui sera appelé ||| timestamp nonce handler	count=1
function_name	la clé soundex ||| soundex	count=1
arg_pair	une clé primaire de ||| string $owner	count=1
namespace	à un ||| mongoclient	count=1
arg_pair	en ligne/hors ||| string $host int $port	count=1
arg_pair	rouge [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	[function_name_1] lignes ||| [function_name_1] [function_name_2]	count=13
arg_pair	fait qu'elle ignore ||| string $pattern	count=1
function_name	remplace ||| dbase replace record	count=2
function_name	vérifie si le ||| field exists	count=1
return	d'instance xml donnée ||| sdo_das_xml_document	count=1
return	fait que ||| int	count=1
function_name	rappel pour readline ||| readline callback handler install	count=1
function_name	xml parser ||| xml parser free	count=2
namespace	que la base de ||| mongocursorinterface	count=1
function_name	si ||| module is	count=1
function_name	tests ||| array uintersect uassoc	count=2
arg_pair	à strcmp() elle n'est ||| string $str2	count=1
function_name	avec un traitement appliqué ||| preview	count=1
namespace	affiche toute les commandes ||| imagick	count=1
function_name	de ||| poll	count=1
arg_pair	jusqu'à la catégorie ||| string $category	count=1
namespace	cette méthode ||| soapclient	count=1
function_name	[function_name_1] situé ||| [function_name_2] [function_name_1]	count=4
arg_pair	d'être manipulé ||| int $oid	count=1
arg_pair	suppression ||| array $deleteoptions array $protocoloptions	count=1
function_name	[function_name] pour ||| get [function_name]	count=2
function_name	construit un ||| string	count=1
function_name	accessible en lecture ||| readable	count=1
function_name	de confort pour émettre ||| header	count=1
function_name	le dossier ||| zip entry	count=1
function_name	[function_name_1] fragments proches ||| [function_name_2] [function_name_1]	count=2
return	de l'application précédemment ||| string	count=1
namespace	par l'application php courante ||| function	count=1
function_name	que pour stocker ||| metadata	count=1
function_name	facteur de ||| factor	count=1
function_name	[function_name_1] profondeur ||| [function_name_1] max [function_name_2]	count=1
arg_pair	que les structures de ||| int $textflow	count=1
function_name	[function_name_1] version du ||| [function_name_2] [function_name_1]	count=4
arg_pair	les ||| array $env_keys array $pub_key_ids	count=1
function_name	si elle prend plus ||| set max poll time	count=1
arg_pair	lors ||| array $server array $writeoptions	count=1
function_name	de termes de requête ||| terms	count=1
return	à une ligne dans ||| int	count=1
return	spécifiée avec un traitement ||| bool	count=1
namespace	de 9 miniatures ||| imagick	count=1
return	ferme le ||| bool	count=1
arg_pair	jours du calendrier ||| int $day	count=1
namespace	seconde contient le ||| mongogridfs	count=1
arg_pair	terminé, ou qu'un signal ||| int $status int $options	count=1
namespace	implémente ||| arrayobject	count=1
function_name	l'image ||| image	count=15
namespace	retournée [namespace] le ||| [namespace]	count=1
namespace	dans une police ||| harufont	count=1
namespace	le ||| splfileobject	count=1
arg_pair	à utiliser mapreduce ||| array $options	count=1
arg_pair	le flux imap courant ||| string $criteria	count=1
function_name	complétée jusqu'à la taille ||| pad	count=1
function_name	pays correspondant au nom ||| name	count=1
namespace	l' eventbuffer lui ||| eventbuffer	count=1
function_name	la chaîne de caractères ||| db2 escape string	count=1
function_name	seconde ||| construct	count=1
namespace	closedir() seul le ||| directory	count=1
arg_pair	colonne ||| mixed $column mixed $param	count=1
function_name	conjonction ||| stop	count=1
arg_pair	une chaîne ||| int $bid string $content	count=1
function	[function_name_1] réseau complet ||| [arg_pair_2] [function_name_1]	count=1
function_name	extrait dans un ||| mailparse uudecode	count=1
arg_pair	str ||| string $str array $convmap	count=1
arg_pair	utilisées par le shell ||| int $flags	count=1
function_name	readgzfile() excepté qu'elle ||| gzfile	count=1
function_name	récupère ||| get	count=187
function_name	liste des modules ||| modules	count=1
function_name	utilisées par la ||| form destroy	count=1
function_name	mis [function_name] générer ||| get [function_name]	count=1
function_name	patch et ||| file patch	count=1
arg_pair	partir d'une source aléatoire ||| int $source	count=1
rest	supprime un [function_2] ||| [function_2] [return_1]	count=1
function_name	des ||| eregi	count=1
return	flux ||| string	count=1
arg_pair	fichier remote_file depuis ||| string $remote_file int $mode	count=2
function_name	si un fils ||| call has children	count=1
function_name	vérifie si le champ ||| field is	count=1
function_name	image avec une image ||| image	count=1
function_name	copie un ||| copy	count=1
function_name	attribut dans ||| update attributes	count=1
function_name	du corps pour ||| body	count=1
arg_pair	le texte text en ||| string $fontfile string $text	count=1
arg_pair	paramètres ||| int $day	count=1
function_name	la fonction ||| by	count=1
arg_pair	rouge vert [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	fonction vérifie si un ||| is	count=1
function_name	tous les fichiers ||| mailparse uudecode all	count=1
arg_pair	retourne la chaîne str ||| string $str string $encoding	count=1
function_name	[function_name_1] l'intervalle ||| [function_name_2] [function_name_1]	count=1
function_name	tous les fichiers ||| mailparse	count=1
function_name	le client ||| client	count=2
function_name	queue [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	a terminé son exécution ||| void	count=1
namespace	fichiers encodés qui s'y ||| function	count=1
return	[return] les connexions ||| [return]	count=3
function_name	par la forme et ||| newt form destroy	count=1
function_name	de refaire l'affichage ||| redisplay	count=1
arg_pair	paramètres passés sont ||| int $hour int $minute	count=1
arg_pair	str dans le ||| string $str	count=1
function_name	les entités html ||| html entity decode	count=1
function_name	de termes ||| terms	count=1
return	crée une ||| resource	count=2
function_name	l'objet [function_name] qui ||| [function_name]	count=1
arg_pair	puis ||| string $delimiter	count=1
function	[function_name_1] sur l'algorithme ||| [function_name_1] [arg_pair_2]	count=3
function_name	spécial ||| mknod	count=1
function	lie [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
function_name	ajoute une balise à ||| bbcode add element	count=1
function_name	la couleur de ||| color	count=2
function_name	à [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	forte priorité à effectuer ||| task high	count=1
function	un shell [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	une image ||| string $jpeg_file_name	count=1
function_name	récupère la profondeur ||| get max depth	count=2
arg_pair	contrairement à strcmp() ||| string $str2	count=1
function_name	décimal compris entre 0.0 ||| hsl	count=1
function_name	sur la version curl ||| curl version	count=1
function_name	de ||| set max	count=1
arg_pair	lit nbytes octets ||| int $bid int $nbytes	count=1
function_name	de pagination ||| control paged result	count=1
arg_pair	lors de la recherche ||| string $string	count=1
function_name	var ||| array push	count=2
function_name	peut être ||| set	count=1
function_name	la bibliothèque ucd snmp ||| quick print	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] adrlist [arg_pair_2]	count=5
function_name	point de contrôle ||| gupnp control point new	count=1
function	[function_name_1] avec une ||| [arg_pair_2] [function_name_1]	count=5
function_name	image png ||| png	count=1
function_name	[function_name_1] protégée ||| [function_name_1] [function_name_2]	count=1
namespace	première ||| recursivetreeiterator	count=1
function_name	gestionnaire d'entité externe de ||| external entity ref handler	count=1
arg_pair	mask ||| int $mask	count=1
function_name	[function_name_1] transaction ||| [function_name_2] [function_name_1]	count=4
arg_pair	avec un ||| string $lib_dir	count=1
function_name	mise à jour d'un ||| cmd update	count=1
function_name	précharger par ||| prefetch	count=1
function_name	l'orientation de l'image ||| orientation	count=1
function_name	de ||| set oid numeric print	count=1
namespace	ne doit pas ||| pharfileinfo	count=1
function_name	[function_name_1] une ||| mongogridfsfile resource [function_name_1] [function_name_2]	count=3
function_name	le nom symbolique ||| token name	count=1
function_name	file d'attente s'interrompt si ||| eio set max	count=1
function_name	[function_name_1] de jokers ||| [function_name_1] num [function_name_2]	count=1
return	[return] les ||| [return]	count=3
return	au sein ||| bool	count=1
function_name	l'échelle de ||| scale	count=1
function_name	[function_name_1] version du ||| [function_name_1] [function_name_2]	count=4
function	fonction spécifie [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	9 miniatures de ||| preview images	count=1
function_name	du réseau neuronal depuis ||| fann	count=1
function_name	snmp ||| snmp2 get	count=2
return	de recherche en ||| bool	count=1
return	son ||| void	count=1
function_name	nom de balise ||| name	count=1
return	de résultats à ||| bool	count=1
namespace	script php d'un ||| samconnection	count=1
function_name	d'espace de noms ||| elements	count=1
function_name	change la couleur ||| color floodfill	count=1
function_name	supprime ||| rzap	count=1
function	[function_name_1] str en ||| [function_name_1] [arg_pair_2]	count=3
function_name	avance jusqu'au prochain élément ||| next	count=1
arg_pair	sur la ligne tuple ||| string $tuple	count=1
arg_pair	avec les définitions de ||| resource $id array $config	count=1
function_name	préparée et ||| execute	count=1
namespace	simplexmliterator ||| simplexmliterator	count=2
arg_pair	objet à une valeur ||| int $color float $value	count=1
arg_pair	certains éléments d'un document ||| int $page	count=1
function_name	code ||| http response code	count=1
namespace	seule ||| pharfileinfo	count=1
function_name	connecte le ||| closepath stroke	count=1
function_name	une ligne ||| line	count=2
arg_pair	au format champ= ||| resource $connection string $table_name	count=1
arg_pair	de alpha ||| resource $p float $alpha	count=1
function_name	la charge ||| workload	count=1
function_name	les ressources mémoires ||| form	count=1
function_name	de l'image ||| preview	count=1
return	sur le dossier ||| string	count=1
return	par ||| void	count=5
arg_pair	depuis un fichier ||| string $filename array $options	count=1
function_name	nombre de champs ||| num fields	count=2
namespace	peut être ||| function	count=1
function_name	utilisée que ||| metadata	count=1
function_name	retour de statut spécifié ||| status	count=1
function_name	la cubrid_drop() [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	une nouvelle entrée ||| string $value	count=1
function_name	fonction sqlsrv_prepare() ||| sqlsrv execute	count=1
function_name	local ||| local	count=2
function	sera démarré [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	à un ||| resource $result string $name	count=1
function_name	de buffer que ||| buffer	count=1
function_name	remet la connexion ||| pgsql reset	count=1
function_name	fonction est similaire ||| element	count=1
arg_pair	mktime() ||| int $day int $year	count=1
function_name	[function_name_1] du document ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] facette ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] de size ||| [arg_pair_2] [function_name_1]	count=1
function_name	l'intervalle ||| range	count=1
namespace	un objet domdocument ||| domdocument	count=1
arg_pair	lit un ||| resource $res int $row	count=1
function_name	profilage de ||| profiling level	count=1
function_name	algorithm [function_name] algorithme ||| [function_name] block	count=1
arg_pair	signaux indiqué dans set ||| array $set array $siginfo	count=1
function_name	code courant ||| response code	count=1
function_name	brute du serveur ||| raw	count=1
function_name	devrait être sélectionné par ||| by	count=1
function_name	l'objet sous ||| string	count=1
function_name	où les ||| set error log	count=1
function_name	incluant les composants ||| newt form destroy	count=1
function_name	informations de version ||| version	count=1
namespace	tous ||| function	count=2
arg_pair	à fournir à ||| int $status	count=1
function_name	à readline de ||| readline	count=1
function_name	fichier ||| uudecode all	count=4
function_name	sinus hyperbolique pour chaque ||| sinh	count=1
namespace	l'écriture ||| splfileobject	count=1
function_name	cette méthode ||| construct	count=1
function_name	[function_name_1] [function_name_2] d'une requête ||| [function_name_2] [function_name_1]	count=2
arg_pair	l'algorithme spécifié ||| string $algorithm	count=1
arg_pair	la propriété ||| string $property_value	count=1
namespace	récupère le sous-chemin ||| recursivedirectoryiterator	count=1
arg_pair	x509cert et ||| mixed $x509cert bool $shortnames	count=1
namespace	appelé lors ||| recursivetreeiterator	count=1
arg_pair	calendrier calendar ||| int $month	count=2
function	[function_name_1] seuil de ||| [arg_pair_2] [function_name_1]	count=3
function	[function_name_1] cible spécifiée ||| [arg_pair_2] [function_name_1]	count=2
function_name	racine ||| gupnp root	count=1
function_name	décide ||| mysqlnd qc	count=1
arg_pair	log_cmd_delete lors ||| array $server array $writeoptions	count=1
arg_pair	rappel pour l'événement de ||| mixed $arg	count=1
function	[function_name_1] réseau complet ||| [function_name_1] [arg_pair_2]	count=1
function_name	devant les caractères ||| db2 escape	count=1
arg_pair	ajoute un champ ||| string $fieldname string $fieldvalue	count=1
function	l'écrit dans [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	retourne la dernière erreur ||| error	count=2
namespace	soapfault sert ||| soapfault	count=1
function_name	utilisée en conjonction ||| stop	count=1
arg_pair	exécute une requête ||| mixed $bind_arg	count=1
function_name	similaire à ||| element by	count=1
function_name	un événement de signal ||| signal	count=1
function_name	le dernier ||| last	count=3
namespace	résultats ||| mongocursorinterface	count=1
function_name	sur une classe ||| class	count=1
function_name	processus ||| proc close	count=2
arg_pair	espace de noms namespaceuri ||| string $namespaceuri	count=1
function_name	la page courante ||| page	count=1
function_name	définit une [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	à l'échelle les sorties ||| fann scale output	count=1
arg_pair	remplissage courants ||| float $y1	count=1
function_name	require_once ||| included files	count=1
return	mémoires ||| void	count=1
function_name	le dernier message d'erreur ||| pg last error	count=1
function_name	d'apparition des mots en ||| mlt min doc	count=1
arg_pair	moifie un attribut ||| bool $mva	count=1
function_name	formats supportés par imagick ||| query formats	count=1
namespace	l'objet courant simplexmliterator ||| simplexmliterator	count=1
function_name	patch ||| xdiff file patch	count=3
function_name	retourne [function_name_1] [function_name_2] d'un token php ||| [function_name_2] [function_name_1] int $token	count=1
function_name	ajoute [function_name_2] ||| [function_name_1] high [function_name_2]	count=1
function_name	à une position précise ||| pdf fit	count=1
function_name	forte priorité à ||| high	count=1
function_name	met à l'échelle ||| fann scale train	count=1
function_name	la ligne courante ||| fetch row	count=1
function_name	défini l'époque minimale candidate ||| fann set cascade min cand epochs	count=1
function_name	d'offset ||| table	count=1
function_name	de la classe ||| class	count=1
return	la dernière requête sql ||| int	count=1
function_name	chaîne [function_name] utilisée dans ||| maxdb [function_name]	count=1
function_name	retourne le contenu ||| get contents	count=1
function_name	de stagnation ||| stagnation	count=2
function_name	lorsqu'il est accessible ||| unset	count=1
return	[return] ajoute ||| [return]	count=3
function_name	supprime ||| dbplus rzap	count=2
function_name	récupère les permissions d'un ||| get perms	count=1
arg_pair	... ||| int $pagesize	count=1
function_name	libère toutes ||| sqlsrv free stmt	count=2
function_name	valeur ||| path	count=1
function_name	ce socket ||| socket	count=1
function_name	un identifiant unique ||| spl object hash	count=1
return	en d'autres termes ||| int	count=1
function_name	retourne [function_name_2] ||| [function_name_1] query [function_name_2]	count=3
namespace	doit être utilisée ||| pharfileinfo	count=1
function_name	récupère ||| kadm5 get	count=2
arg_pair	si ||| string $user bool $nodns	count=1
function_name	include_path pour la ||| set	count=1
return	document en coordonnées ||| bool	count=1
arg_pair	un nouveau mot de ||| resource $handle	count=1
function_name	ajoute le ||| add doc javascript	count=2
function	tables [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	tâche en ||| do background	count=1
function_name	composants qui sont sur ||| newt form	count=1
arg_pair	yaz_record() retourne un ||| resource $id	count=1
function_name	plus récente ||| last	count=1
namespace	éléments pointés par ||| function	count=1
namespace	qui s'y ||| function	count=1
function_name	style xsl ||| register phpfunctions	count=1
arg_pair	chaîne d'une façon similaire ||| string $str	count=1
namespace	fonction ferme ||| function	count=1
function_name	contient ||| construct	count=2
function	récupère [arg_pair_2] ||| [function_name_1] env [arg_pair_2]	count=1
namespace	chaîne de ||| sdo_das_xml	count=1
function_name	retourne le dernier identifiant ||| db2 last insert id	count=1
namespace	l'objet courant simplexmliterator a ||| simplexmliterator	count=1
function_name	différence ||| array diff	count=4
return	chaîne et ||| string	count=1
function_name	caractères passée ||| db2	count=1
function_name	temporisation de ||| ob end	count=1
arg_pair	une ||| resource $result int $field_offset	count=1
function_name	priorité basse ||| do low	count=2
return	verrou ||| int	count=1
function_name	définit l'image à utiliser ||| set mask image	count=1
arg_pair	un petit ||| resource $ann float $rprop_delta_min	count=1
function_name	termine ||| monitor	count=1
function_name	minimale du client pour ||| min	count=2
arg_pair	sa localisation ||| resource $context string $location	count=1
return	tampon ||| bool	count=1
arg_pair	dans l'image image en ||| int $y2	count=1
function_name	qui ||| newt	count=2
function_name	s'interrompt si ||| max	count=1
function_name	classe ||| parse class	count=1
function_name	variable donnée est de ||| is numeric	count=1
namespace	et sur le document ||| xmldiff\file	count=1
namespace	lit le numéro de ||| splfileinfo	count=1
function_name	la fonction ||| mysql	count=1
function_name	d'activation pour le ||| fann set activation	count=3
function	spécifie [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	objet contenant différents éléments ||| object	count=1
function_name	temporaire tous les ||| mailparse uudecode all	count=1
function_name	nombre de lignes ||| mysqli num rows	count=3
return	la valeur du canal ||| float	count=1
return	mb par ||| bool	count=1
function	définit les mots [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	les ||| escape	count=1
return	requête en cours ||| bool	count=1
namespace	splfileobject ne peut ||| splfileobject	count=1
arg_pair	jambage du texte ||| resource $psdoc string $text	count=1
function_name	remplit ||| pdf fill textblock	count=2
function	[function_name_1] name qui ||| [arg_pair_2] [function_name_1]	count=6
function_name	[function_name] qui respectera ||| [function_name] for	count=3
return	le code erreur du ||| int	count=1
function_name	contient encore des ||| valid	count=3
function_name	mémoires ||| newt form destroy	count=2
arg_pair	une chaîne terminée ||| resource $connection	count=1
arg_pair	pour le texte text ||| string $fontfile string $text	count=1
function	[function_name_1] avec une ||| [function_name_1] [arg_pair_2]	count=5
function_name	[function_name_1] certificat pkcs#12 ||| [function_name_2] [function_name_1]	count=2
function_name	chiffrement ||| mcrypt	count=2
function_name	pour ||| open	count=1
arg_pair	sa localisation ||| string $location	count=1
function_name	de la dernière erreur ||| errno	count=2
function_name	de données dba ouverts ||| dba	count=1
function_name	de l'espace ||| space	count=1
arg_pair	et sur ||| string $src	count=1
function_name	fonction libère les ||| form destroy	count=1
arg_pair	du jeu de ||| resource $stmt	count=1
function_name	le plugin ||| mysqlnd	count=1
return	la dernière requête ||| int	count=1
function	[function_name_1] lecture ||| [function_name_1] [arg_pair_2]	count=6
function_name	connexion passées avec des ||| cubrid connect	count=1
function_name	fourni ||| mailparse uudecode	count=1
function_name	de compression utilisée ||| entry	count=1
arg_pair	sur ||| resource $session string $term_type	count=1
function_name	terminé ||| set	count=1
arg_pair	peuvent être invoquées avant ||| int $max_interval	count=1
function_name	exception lorsqu'une ||| exception	count=1
function_name	le script ||| exit	count=1
function_name	la bibliothèque ucd ||| snmp set quick print	count=1
function_name	définit une [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	la nth -ème racine ||| int $nth	count=1
return	bibliothèque rrdtool ||| string	count=1
function_name	ajoute un fichier à ||| add from string	count=1
return	les processus ||| int	count=1
return	numéro ||| int	count=1
arg_pair	length octets depuis ||| int $length	count=1
function_name	forme de ||| to	count=1
namespace	au sein d'une archive ||| pharfileinfo	count=1
arg_pair	sur les caractères ||| string $pattern	count=1
function_name	être utilisé ||| maxdb	count=1
function_name	modifie ||| set include	count=1
arg_pair	le dessin des ||| resource $image	count=1
function_name	ressources ||| newt form destroy	count=2
namespace	ou partie ||| function	count=1
return	passées en argument au ||| bool	count=1
return	du script ||| string	count=1
function_name	champ de résultat ||| field	count=1
function_name	ajoute la ||| add handle	count=1
return	le paramètre ||| bool	count=1
function_name	clé privée qui correspond ||| openssl x509 check private key	count=1
function_name	lit le message d'erreur ||| error	count=1
namespace	modules à ||| mongolog	count=1
function_name	[function_name_1] statut ||| [function_name_2] [function_name_1]	count=3
return	pour laquelle la ||| string	count=2
function_name	verrou d'écriture sur ||| cubrid lock	count=1
namespace	et tous ||| function	count=1
function_name	[function_name_1] la couleur ||| [function_name_1] image background [function_name_2]	count=1
function_name	efface les [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ou de continuer ||| loop	count=1
function_name	un attribut ||| update attributes	count=1
arg_pair	plusieurs paires clé-valeur ||| mixed $keys string $value	count=1
arg_pair	couleurs représentant ||| int $treedepth bool $dither	count=1
function_name	images en ||| images	count=1
arg_pair	une ressource de fichier ||| string $filename int $flags	count=1
arg_pair	chaîne str en ||| string $str	count=1
arg_pair	de ||| mongodb $db string $prefix	count=1
arg_pair	type d'éléments à lire ||| string $elementset	count=1
function_name	retourne ||| pgsql get	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resource $ch [arg_pair_2]	count=3
function_name	fonction d'activation pour ||| fann set activation	count=3
function_name	retourne le [function_name_2] ||| [function_name_1] current [function_name_2]	count=2
function_name	chargés ||| get	count=1
function_name	carte ||| colormap	count=3
return	d'une image contenant ||| gmagick	count=1
function_name	avec celles du ||| ukey	count=1
function_name	le paramètre ||| add	count=1
function_name	noms [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	fréquence minimale du document ||| enum cache min default frequency	count=1
function_name	récupère l'expression rationnelle ||| get	count=1
function_name	la miniature ||| exif thumbnail	count=1
namespace	tous les fichiers ||| function	count=1
function_name	si ||| set	count=1
function_name	résultats mnogosearch ||| udm get	count=1
function_name	type d'algorithme ||| method	count=1
function_name	ferme [function_name_2] ||| [function_name_2] [function_name_1] resource	count=1
function_name	ressources mémoires ||| destroy	count=1
function_name	retourne [function_name_1] [function_name_2] d'un token php ||| [function_name_2] [function_name_1]	count=1
function_name	supprimée ||| delete	count=1
function_name	un verrou de ||| lock read	count=1
function_name	sélectionne la base de ||| select db	count=1
namespace	le ||| gmagickpixel	count=1
arg_pair	de la chaîne str ||| string $str	count=1
function_name	de fils aussi ||| has children	count=1
function_name	service exposé ||| gupnp service	count=2
function_name	requête ||| sqlsrv query	count=2
arg_pair	le paramètre timestamp ||| int $timestamp	count=1
function_name	du référentiel ||| svn	count=1
arg_pair	microsoft ||| array $connectioninfo	count=1
arg_pair	suppression d'un document ||| array $protocoloptions	count=1
function_name	du navigateur client ||| get	count=1
function_name	spanscorer pour [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	est initialement affichée ouverte ||| opened	count=1
namespace	avec ||| gearmanclient	count=1
function_name	ressources mémoires utilisées ||| newt	count=1
namespace	vérifie si la liste ||| spldoublylinkedlist	count=1
function_name	les identifiants uniques des ||| special columns	count=1
namespace	yaf_application ||| yaf_application	count=2
namespace	fichier temporaire ||| function	count=1
function_name	connexion à ||| get	count=1
return	définit l'image de ||| gmagick	count=1
function	un tableau php var_array [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name] logs ||| get normalized query [function_name]	count=2
function_name	maximal [function_name_2] ||| [function_name_1] num [function_name_2]	count=3
namespace	de lecture ||| pharfileinfo	count=1
function_name	stmt ||| mysqli stmt	count=2
arg_pair	spécifie un préfixe ||| string $prefix	count=1
function	test sur [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	remous autour duquel les ||| swirlimage	count=1
arg_pair	fonction cubrid_bind() ||| mixed $bind_value	count=1
return	iidentique ||| void	count=1
function_name	connexion persistante à la ||| pconnect	count=1
function_name	geoip_country_code3_by_name() retourne les trois ||| geoip country code3 by	count=1
function_name	retourne un jeu ||| db2 procedure columns	count=1
arg_pair	travaux [arg_pair] ||| [arg_pair]	count=1
arg_pair	à la résolution désirée ||| float $xresolution	count=1
function_name	retourne ||| get channels	count=1
return	[return] l'option ||| [return]	count=3
arg_pair	fixe le ||| float $x	count=1
function_name	/etc/services ||| getservbyport	count=1
function_name	remplit le chemin ||| fill	count=1
arg_pair	de l'entrée dn ||| resource $link_identifier string $dn	count=3
return	assigné par le serveur ||| string	count=1
function_name	la forme ||| form	count=2
function_name	exécute une requête préparée ||| execute	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] image [function_name_1]	count=21
arg_pair	dbase_identifier ||| int $dbase_identifier	count=1
arg_pair	catégorie ||| string $category	count=1
function_name	en cours ||| path	count=1
return	bits d'exécution des fichiers ||| void	count=1
function_name	définit le terme à ||| set terms upper bound	count=1
function_name	[function_name_1] la profondeur ||| [function_name_1] max [function_name_2]	count=1
function_name	le nombre ||| count	count=3
namespace	fonction mktime() excepté ||| function	count=1
function_name	tous ||| mailparse	count=1
arg_pair	chaîne str ||| string $str string $encoding	count=2
namespace	construit un ||| sdo_das_xml	count=1
arg_pair	définit l'acl pour la ||| string $id string $rights	count=1
arg_pair	ses voisins immédiats ||| mixed $bordercolor	count=2
function_name	lit [function_name_2] ||| [function_name_2] pkcs12 [function_name_1]	count=1
function_name	similaire à la ||| field type	count=2
arg_pair	la base ||| string $database_name resource $link_identifier	count=1
arg_pair	un ||| string $key array $columns	count=1
function_name	la ||| set include	count=3
arg_pair	rappel callback ||| mixed $pattern callable $callback	count=1
arg_pair	noeud avec un espace ||| string $namespaceuri	count=1
function_name	données du ||| mailparse uudecode all	count=1
function_name	[function_name_1] du socket ||| [function_name_2] [function_name_1]	count=2
function_name	le ||| proc	count=1
function_name	fils d'une ||| children	count=1
namespace	partir d'une chaîne ||| sdo_das_xml	count=1
function_name	qui contient la ligne ||| mysql fetch	count=1
function_name	libère un descripteur alloué ||| oci free	count=1
function_name	lit un ||| readline callback read	count=1
function_name	[function_name_1] de fond ||| [function_name_1] high [function_name_2]	count=1
function_name	fichier spécifié est une ||| is valid	count=1
function_name	de l'étape d'erreur ||| step error	count=2
function_name	au maître à l'esclave ||| mysqlnd ms query	count=1
arg_pair	name0 ||| string $name0	count=1
arg_pair	le fichier filename et ||| string $filename bool $process_sections	count=1
function_name	certificat pkcs#12 fourni ||| openssl pkcs12	count=2
return	indique ||| bool	count=1
function_name	retire les ||| remove all	count=2
return	des serveurs de ||| bool	count=1
function_name	cette fonction ferme la ||| close	count=1
function_name	le nombre de champs ||| dbase	count=1
function_name	jokers à ||| tokens	count=1
function_name	d'une propriété ||| property	count=1
return	la totalité ||| resource	count=1
function_name	configure ||| color set	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] thread [function_name_2]	count=1
arg_pair	de la colonne ||| resource $stmt mixed $column	count=2
function_name	configure l'orientation de ||| set image orientation	count=1
function_name	définit ||| set	count=42
function_name	pour ||| include path	count=2
arg_pair	le chemin est dirname ||| string $dirname	count=1
function_name	en ignorant la ||| str ireplace	count=1
function_name	oracle après ||| oci	count=1
function_name	plugin de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	survenue sur le socket ||| socket	count=1
function_name	[function_name_1] le code ||| [function_name_2] [function_name_1]	count=7
function_name	similaire ||| mysql field	count=1
return	ceux de lecture seule ||| void	count=1
function_name	syntaxe de lecture ||| syntax	count=1
namespace	curseur typiquement ||| mongocommandcursor	count=1
return	ses valeurs en ||| bool	count=1
function_name	d'activation dans ||| activation	count=1
arg_pair	texte avec ||| string $text	count=1
function_name	annule la transaction courante ||| rollback	count=1
namespace	utilisée sur le dossier ||| function	count=1
function_name	fonction d'activation pour ||| fann set activation function	count=3
return	le curseur ||| mongocursor	count=1
function_name	pour insérer ||| cubrid set add	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] element ns [arg_pair_2]	count=3
arg_pair	métadonnées et ||| mongodb $db string $prefix	count=1
return	la liste ||| bool	count=1
function_name	qui s'y trouvent ||| all	count=1
function_name	de résultats [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	un hyperlien ||| float $lly float $urx	count=2
function_name	fréquence d'apparition ||| min doc frequency	count=2
function_name	avoir de fils aussi ||| has children	count=1
function_name	contenu courant du tampon ||| ob get	count=1
arg_pair	eio_* ||| callable $execute	count=1
function_name	un agent ||| agent	count=1
arg_pair	lors de la ||| string $string	count=1
namespace	avec les ||| mongolog	count=1
arg_pair	oid de ||| string $oid	count=1
arg_pair	d'une série ||| int $first_page	count=1
function_name	affectées par la ||| cubrid affected	count=1
function_name	jeu de ||| db2 procedure columns	count=1
arg_pair	en date ||| bool $hebrew	count=1
function_name	alpha de ||| set image alpha	count=1
arg_pair	associatif query_data ||| mixed $query_data string $numeric_prefix	count=1
function_name	une ligne [function_name_2] ||| string [function_name_2] [function_name_1]	count=3
function_name	tableau array complétée jusqu'à ||| pad	count=1
function_name	de la ||| rrd	count=1
arg_pair	dans le même ||| float $ury	count=1
function_name	statut d'un ||| status	count=1
return	objet lorsque l'objet ||| void	count=1
function_name	vérification de la syntaxe ||| syntax	count=1
function_name	ligne d'une ||| fetch	count=2
arg_pair	utilisée pour établir ||| string $userid	count=1
function_name	[function_name_1] longueur ||| [function_name_1] [function_name_2]	count=1
return	le résultat dans le ||| int	count=1
namespace	le jeu ||| function	count=1
function_name	à la ||| element	count=1
function_name	la chaîne de caractères ||| escape string	count=1
arg_pair	colonne correspondant à ||| int $field_offset	count=1
function_name	résultat de ||| result	count=1
arg_pair	comme une pile et ||| array $array	count=1
function_name	calcule le md5 ||| md5	count=2
function_name	un modèle 3d depuis ||| load 3ddata	count=1
function_name	texte courant ||| text	count=1
namespace	la [namespace] de ||| [namespace]	count=2
function_name	de genre spécifié ||| genre	count=1
function_name	la méthode est abstraite ||| is abstract	count=1
function_name	les extrêmes pour ||| extrema	count=1
arg_pair	d'extraits de texte ||| string $fragmenter string $field_override	count=1
function_name	préférence pour un dictionnaire ||| enchant	count=1
function_name	tests sur l'index compare ||| uintersect uassoc	count=1
function	image le [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	propriétaire du ||| owner	count=1
function_name	objet ainsi que ses ||| fetch object	count=1
function_name	la fonction rewinddir() ||| rewind	count=1
namespace	d'objets résultants et ||| mongocommandcursor	count=1
namespace	la forme ||| solrparams	count=1
return	les archives ||| object	count=1
namespace	si une classe est ||| reflectionclass	count=1
arg_pair	fusionne un document d'entrée ||| solrinputdocument $sourcedoc bool $overwrite	count=1
rest	un nom [function_2] ||| [function_2] [return_1]	count=1
arg_pair	résultat dans un ||| string $dest	count=1
function_name	un [function_name_1] [function_name_2] d'un ||| [function_name_2] [function_name_1] resource $parser callable $handler	count=1
function_name	fonction geoip_country_code3_by_name() retourne les ||| geoip country code3 by	count=1
function_name	désigné par le paramètre ||| xattr	count=3
arg_pair	du fichier filename en ||| string $filename	count=2
function_name	de l'analyseur xml ||| xml set	count=3
function_name	la position du champ ||| cubrid field	count=1
arg_pair	l'url repos_url ou ||| string $repos_url	count=1
function_name	récupère le type ||| get type	count=1
function_name	la ||| rrd	count=1
function_name	tracer ||| maxdb debug	count=2
function_name	le champ spécifié ||| field	count=1
function_name	teinte d'une [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	centrée sur ||| int $width	count=1
function_name	les processus qui fonctionnent ||| win32 ps list procs	count=1
return	recherche sur les caractères ||| int	count=1
return	fonction mktime() excepté le ||| int	count=1
function_name	la largeur de ||| width	count=2
arg_pair	paramètres ||| int $year	count=2
function_name	de ||| path	count=2
namespace	en d'autres termes la ||| ev	count=1
function_name	désigné par le ||| xattr set	count=1
namespace	eventbuffer courant ||| eventbuffer	count=1
arg_pair	de la clé /status ||| string $status	count=1
function_name	[function_name_1] de colonne ||| [function_name_2] [function_name_1]	count=1
function_name	le certificat ||| openssl x509 checkpurpose	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image [function_name_2]	count=9
function_name	interne passé via la ||| get inner	count=1
function_name	une ||| create db	count=2
function_name	typiquement parcourt ||| batch	count=1
namespace	texte lors d'une ||| gmagickdraw	count=1
namespace	retourne les réponses ||| mongocursor	count=1
function_name	le préfixe ||| prefix	count=2
arg_pair	rappel si le ||| resource $proxy mixed $callback	count=1
arg_pair	sequence et retourne ||| string $sequence	count=1
arg_pair	valeur courante ||| resource $stmt	count=1
namespace	du lob oracle ||| oci-lob	count=1
function_name	retourne un sommaire de ||| imap fetch overview	count=1
function_name	[function_name] de l'image ||| get [function_name]	count=1
return	la ||| array	count=3
function_name	[function_name] vide s'il ||| get dns error [function_name]	count=3
return	brosse courante ||| bool	count=1
arg_pair	peut créer ||| int $mode int $size	count=1
function_name	à mysqli_connect() ||| mysqli connect	count=1
arg_pair	watcher ||| callable $callback	count=1
arg_pair	trouve la première occurrence ||| string $haystack string $needle	count=1
function	ouvre un ||| open resource $link_identifier	count=1
function_name	[function_name] sur ||| [function_name]	count=2
function_name	retourne ||| get frame list	count=1
function_name	ligne ||| fbsql fetch row	count=1
arg_pair	ou plusieurs ||| mixed $keys string $value	count=1
namespace	si la file d'attente ||| splpriorityqueue	count=1
function	évènement pour [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	partir d'une ||| sdo_das_xml	count=1
function_name	pour définir les ||| set	count=1
function_name	pagination ||| paged result	count=2
namespace	observateur evfork et ||| evfork	count=1
function_name	profondeur de l'image ||| image depth	count=1
function_name	requête soap appelle ||| handle	count=1
arg_pair	le système ||| resource $sftp	count=1
function_name	le nombre ||| num fields	count=1
return	fait qu'elle ignore la ||| int	count=1
function_name	la fonction d'erreur utilisée ||| train error function	count=1
function_name	de champs colonnes ||| dbase numfields	count=1
arg_pair	une ||| resource $connection_id int $data_type	count=1
return	récupère le ||| array	count=1
arg_pair	définir la valeur ||| mixed $value int $timeout	count=1
function_name	une seule image représentant ||| image	count=1
function_name	lit le schéma d'entrelacement ||| interlace scheme	count=2
function	[function_name_1] path ||| [function_name_1] [arg_pair_2]	count=2
function_name	fréquence minimale du ||| facet enum cache min default frequency	count=1
arg_pair	le fait que ||| int $hour int $minute	count=1
function_name	de serveurs ||| servers	count=1
arg_pair	texte ||| resource $psdoc string $text	count=2
arg_pair	ouvre ||| string $server string $username	count=1
function_name	les tailles ||| supported key sizes	count=2
function_name	objet depuis [function_name_2] ||| [function_name_2] fetch [function_name_1]	count=1
function_name	les ||| set error log	count=2
function_name	la tangente pour chaque ||| tan	count=1
function_name	[function_name_1] l'intervalle quantique ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] d'un jeu ||| [arg_pair_2] [function_name_1]	count=3
namespace	deux ||| mongogridfs	count=1
namespace	archive phar sous ||| phar	count=1
return	chaînes alphanumériques ||| void	count=1
arg_pair	examine ||| string $outfilename array $cainfo	count=1
function_name	la file d'attente s'interrompt ||| time	count=1
arg_pair	yaf_route_simple récupère les informations ||| string $module_name string $controller_name	count=1
return	à différents ||| bool	count=1
return	corrélation ||| void	count=1
arg_pair	la requête ||| array $info array $query	count=1
arg_pair	les fichiers ||| mongodb $db	count=1
function_name	d'un champ à ||| fbsql field	count=1
function_name	composition de ||| set	count=1
function_name	fonction d'activation pour ||| fann set activation function output	count=1
function_name	extrait dans un ||| uudecode	count=1
function_name	protège ||| pg escape	count=3
function_name	fourni par ||| buffer	count=1
namespace	noeud simplexml ||| simplexmlelement	count=1
function_name	du réseau neuronal depuis ||| fann create	count=1
function_name	le nom de l'élément ||| name	count=1
function_name	retourne [function_name_2] ||| mongogridfsfile resource [function_name_1] [function_name_2]	count=4
function_name	types de colonnes du ||| cubrid column types	count=1
return	de tableau ||| array	count=1
function_name	id de genre spécifié ||| genre	count=1
function_name	d'activation pour tous les ||| set activation	count=2
arg_pair	fichier spécial ou ||| string $pathname int $mode	count=1
function_name	d'entrée avant de ||| input	count=1
function_name	retourne le nom ||| get filename	count=2
arg_pair	créé avec [arg_pair] et ||| [arg_pair]	count=1
function_name	couleur [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	après un certain délai ||| immortal	count=1
function_name	gestionnaire curl ||| curl	count=2
return	courante pour le dessin ||| bool	count=1
function_name	est survenue) depuis le ||| facility	count=1
arg_pair	utilisé avec ||| resource $radius_handle	count=1
return	puissance 4 en ||| bool	count=1
function_name	doit être utilisée ||| set metadata	count=1
function_name	forme en incluant ||| newt form	count=1
function_name	position du champ ||| field	count=1
arg_pair	est une méthode avancée ||| string $key	count=1
return	les clé ||| void	count=1
function_name	[function_name_1] de chiffrement ||| [function_name_2] list [function_name_1]	count=1
function_name	eio_chmod() modifie les permissions ||| eio chmod	count=1
function_name	prend plus de ||| set	count=1
function_name	avec ||| get element by id	count=2
return	prises ||| void	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] create [function_name_1]	count=3
function_name	la fin de ||| add buffer	count=1
function_name	maximale ||| mlt max	count=1
function_name	la présence ||| set max dispatch interval	count=1
function_name	d'encadrement maximale [function_name] chaque pixel ||| compare [function_name]	count=1
function_name	fourni et extrait ||| uudecode all	count=1
function_name	d'une notification ||| proxy add notify	count=1
function_name	dans ||| pcntl exec	count=1
arg_pair	et lui associe ||| int $rows	count=1
function_name	composants ||| form	count=2
return	convertit un nom de ||| string	count=1
function_name	spécifie le type d'algorithme ||| method	count=1
arg_pair	les paramètres font ||| float $fontsize	count=1
function_name	champs de ||| fields	count=2
function_name	appelé alias basé ||| alias	count=1
namespace	courante de ||| gmagick	count=1
namespace	image dans ||| ktaglib_id3v2_attachedpictureframe	count=1
namespace	sortie ||| function	count=1
function_name	de documents similaires ||| mlt count	count=4
return	la position courante ||| bool	count=1
return	vers le ||| void	count=1
function_name	ajouter les ||| append	count=1
function_name	fichier exe ||| exe footer	count=1
function_name	de sortie ||| ob	count=2
namespace	les bits ||| pharfileinfo	count=1
function_name	pour être ||| set	count=1
namespace	les ||| eventbuffer	count=1
return	pour le dessin ||| bool	count=1
function_name	glob() ||| glob	count=1
function	l'échelle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	attributs ||| attributes	count=3
return	à déterminer si ||| bool	count=1
arg_pair	cubrid_lob2_bind() ||| mixed $bind_value	count=1
function_name	utilisant celui de output_encoding ||| ob iconv handler	count=1
function_name	page courante et peut ||| page	count=1
function_name	en priorité basse et ||| do low	count=1
function_name	le dossier d'archives ||| entry compressionmethod	count=1
namespace	l'encodeur ||| haruencoder	count=2
function_name	plus de ||| eio set	count=1
function_name	tant que les ||| eio event	count=1
function_name	tableau associatif ou indexé ||| array	count=1
function_name	variable post ||| post	count=1
function_name	valeur d'un objet snmp ||| snmp2	count=1
function_name	similaire à la fonction ||| field type	count=2
return	modifie des options ||| bool	count=1
namespace	[namespace] extrait depuis ||| [namespace]	count=1
function_name	image avec ||| image	count=1
return	variables var .. ||| int	count=1
function_name	établit une connexion ||| connect	count=2
function_name	paramètres du contexte ||| context get params	count=3
function_name	l'entrée courante est crypté ||| is encrypted	count=1
function_name	correspondantes ||| into struct	count=2
function_name	recherche l'enregistrement dns ||| checkdnsrr	count=1
function_name	d'autres caractères) ||| ltrim	count=1
function_name	pcntl_sigwaitinfo() ||| sigwaitinfo	count=1
function_name	en-têtes ||| headers	count=6
arg_pair	la position ||| string $charset	count=1
arg_pair	une ||| string $default	count=1
function_name	[function_name_1] l'année ||| [function_name_1] [function_name_2]	count=1
function_name	un nom ||| by tag name	count=1
namespace	comprise entre 0 et ||| imagickpixel	count=1
return	en commençant aux ||| bool	count=1
function_name	facet.date ||| facet date	count=1
arg_pair	le paramètre filename ||| string $filename string $mode	count=1
arg_pair	de fichier fd pour ||| mixed $fd	count=1
arg_pair	apparaître après un ||| string $simplepost string $field_override	count=1
rest	change les [function_2] ||| [return_1] [function_2]	count=1
return	détermine si ||| bool	count=1
function_name	extrait dans ||| all	count=1
function_name	[function_name_1] fonction posix ||| [function_name_2] [function_name_1]	count=1
function_name	récupère l'adresse ||| get host	count=1
function_name	des champs utilisés ||| field	count=1
function	le schéma [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	similaire à la ||| function	count=2
function	[function_name_1] identifiant packet_id ||| [arg_pair_2] [function_name_1]	count=1
function_name	le serveur à contacter ||| radius config	count=1
function_name	un lien symbolique ||| symlink	count=1
function_name	de données ||| dbase numfields	count=1
arg_pair	en mode wsdl ||| array $options	count=1
arg_pair	les données ||| int $dbase_identifier	count=1
return	caractères représentant la vesion ||| string	count=1
function_name	région [function_name_2] ||| [function_name_2] [function_name_1]	count=14
function_name	ainsi que ceux ||| chmod	count=1
function_name	de la syntaxe ||| syntax	count=1
function_name	si un fichier ||| is	count=1
function_name	élément avec un ||| get element	count=1
arg_pair	attaché, ou écrites sur ||| resource $in resource $out	count=1
function_name	valeur de l'attribut dans ||| attribute	count=1
function_name	définit ||| set facet offset	count=1
function_name	le contenu du cache ||| wincache	count=1
namespace	direction définie par ||| function	count=1
function_name	la version cliente ||| get client info	count=1
function_name	importé ||| process pdi	count=2
function_name	un fichier ||| metadata	count=1
arg_pair	en une et ||| string $new_data2 string $error	count=1
namespace	fonction est ||| function	count=4
arg_pair	la table table_name sous ||| string $table_name	count=1
arg_pair	database ibm cloudscape ou ||| string $database	count=1
function_name	modifie la ||| set include	count=1
function_name	objet snmp ||| snmp2 get	count=1
function_name	le logo [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	récupère le nom ||| name	count=3
function_name	la ||| get element by id	count=2
function_name	protéger tous les ||| escape	count=1
function_name	[function_name_1] publique ||| [function_name_2] [function_name_1]	count=2
function_name	courante du ||| ps show	count=1
function_name	[function_name_1] est disponible ||| [function_name_2] [function_name_1]	count=1
function_name	l'élément racine ||| root element	count=2
return	et ||| mongocommandcursor	count=1
arg_pair	pour l'événement de connexion ||| mixed $arg	count=1
function_name	de contrôle ||| gupnp control point new	count=1
namespace	un bloc ||| function	count=1
function_name	[function_name_1] ibase ||| [function_name_2] [function_name_1]	count=14
function_name	méthode est utile uniquement ||| get	count=1
function_name	avec ||| fill	count=1
function_name	configuration ||| config	count=4
function_name	version wbmp ||| imagewbmp	count=1
function_name	le schéma relaxng à ||| relax ngschema	count=1
function_name	[function_name_1] [function_name_2] du stockage courant sauf ||| [function_name_1] [function_name_2] except splobjectstorage $storage	count=1
function_name	composants qui sont sur ||| form	count=1
function_name	fichier fourni ||| mailparse	count=1
function_name	un lot d'objets ||| batch	count=1
function_name	un verrou ||| dbplus getlock	count=1
function_name	[function_name_1] version ||| [function_name_1] [function_name_2]	count=10
function_name	des ||| construct	count=1
arg_pair	fonction cubrid_lob2_bind() ||| mixed $bind_value string $bind_value_type	count=1
function_name	paramètres requis ||| required parameter	count=1
function_name	/etc/protocols ||| getprotobyname	count=1
arg_pair	une procédure stockée sur ||| bool $skip_results	count=1
function_name	vide est ||| empty	count=1
namespace	le contenu des ||| mongogridfs	count=1
function_name	un ||| shmop delete	count=2
function_name	lit le [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	la ligne suivante de ||| next	count=1
function_name	devant les ||| escape string	count=1
function_name	de la dernière ||| last	count=4
function_name	réseau ||| fann	count=1
function_name	incrémente de ||| wincache ucache inc	count=1
function_name	l'itérateur de ||| set first iterator	count=1
function_name	[function_name_1] l'entrée ||| [function_name_2] [function_name_1]	count=1
function_name	le profil [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	retourne le dernier ||| db2 last	count=1
function_name	donnée est [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	tronque à la taille ||| ftruncate	count=1
function_name	mémoire par le cache ||| wincache	count=1
function_name	retourne le statut ||| introspection get	count=1
arg_pair	ascii pem ||| array $configargs	count=1
function_name	charge un modèle 3d ||| 3ddata	count=1
function_name	[function_name_1] rappel timestamp ||| [function_name_1] [function_name_2]	count=1
function_name	court d'une fonction ||| short	count=1
function_name	à ajouter les variables ||| add	count=1
return	dossier d'archives spécifié ||| string	count=1
arg_pair	nécessaire ||| string $connection_string string $character_set	count=1
function_name	concatène ||| concat	count=1
function_name	compare ||| compare	count=4
function_name	date formée par ||| checkdate	count=1
function_name	cette méthode ||| is	count=1
namespace	que [namespace] ||| [namespace]	count=1
function_name	fait qu'elle fonctionne avec ||| close	count=1
namespace	chaîne ||| sdo_das_xml	count=1
function_name	résultat [function_name_1] [function_name_2] résultat ||| [function_name_1] [function_name_2]	count=2
function	[function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=2
function_name	récupère la [function_name_2] ||| [function_name_1] unicode [function_name_2]	count=1
function_name	la première paire clé/valeur ||| yp first	count=1
function_name	la file d'attente ||| max	count=1
namespace	parcourt ||| mongocommandcursor	count=1
arg_pair	remplissage à un niveau ||| resource $p	count=1
function_name	champ [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	sur le chemin server_path ||| string $server_path	count=1
return	certain délai sur ||| mongocursor	count=1
namespace	courant ||| tidynode	count=1
function_name	de balise donné ||| elements	count=1
function_name	de deux collections ||| construct	count=1
function_name	et tous les composants ||| newt	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] algo key [function_name_2]	count=1
function_name	[function_name_1] la géométrie ||| [function_name_1] [function_name_2]	count=1
namespace	déplace sur le ||| splpriorityqueue	count=1
function_name	cette fonction est similaire ||| id	count=1
arg_pair	processus fils soit terminé, ||| int $options	count=1
arg_pair	snmp2_get() est ||| string $host string $community	count=1
function_name	buffer d'entrée ||| input buffer	count=2
function_name	facteur quickprop [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	des lignes ||| resource $image	count=1
function_name	restaure la valeur ||| restore	count=1
function_name	d'activation ||| fann set activation	count=4
function_name	périphérique racine ||| gupnp root device set	count=1
function_name	récupère la méthode ||| get	count=1
arg_pair	une ||| string $owner	count=2
function	[function_name_1] la base ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	dn ||| string $dn	count=3
arg_pair	texte avec ||| string $blockname string $text	count=1
arg_pair	d'un vecteur x ||| int $x	count=1
function_name	par ||| newt	count=1
arg_pair	fonction est identique à ||| string $pattern string $string	count=1
function_name	page ||| pdf open pdi page	count=2
function_name	tâche de fond de ||| background	count=1
function_name	bufferisées dans ||| fflush	count=1
arg_pair	lit nbytes octets de ||| int $bid int $nbytes	count=1
function_name	utilisée pour envoyer la ||| set	count=1
function_name	lit le dernier ||| get last	count=1
function_name	méthode de compression ||| zip entry compressionmethod	count=1
function_name	les données ||| add buffer	count=1
function_name	typiquement ||| batch	count=1
function_name	récupère [function_name_2] ||| [function_name_1] text [function_name_2]	count=1
return	dernière requête sql ||| int	count=1
namespace	de l'image spécifiée avec ||| imagick	count=1
namespace	cours ||| function	count=1
arg_pair	courant du fichier filename ||| string $filename	count=1
namespace	position ||| function	count=1
function_name	secondes ||| poll	count=1
arg_pair	libre server_key peut ||| string $server_key array $keys	count=1
function_name	des liens ||| border	count=1
namespace	mettre ||| quickhashintstringhash	count=1
function_name	via la méthode ||| got	count=1
namespace	à l'aide ||| mongogridfs	count=1
arg_pair	courante pour le dessin ||| resource $image	count=1
arg_pair	de résultat ||| resource $result int $row_number	count=1
function_name	noeud est [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	dans un fichier ||| pharfileinfo	count=1
return	version courante de ||| string	count=1
arg_pair	fait que les ||| int $day int $year	count=1
function_name	ferme toutes les connexions ||| close all	count=1
function_name	un fichier ||| set	count=1
return	après un certain délai ||| mongocursor	count=1
function_name	débit binaire d'un ||| bitrate	count=1
function_name	données ||| metadata	count=1
arg_pair	pour insérer ||| string $attr_name int $index	count=1
arg_pair	un fichier ||| int $mode	count=1
arg_pair	le fichier fieldname téléchargé ||| string $fieldname	count=1
function_name	identifiant ||| oci	count=1
namespace	les ||| soapserver	count=1
function_name	lie le nom ||| bind	count=1
arg_pair	données microsoft ||| array $connectioninfo	count=1
arg_pair	première occurrence de needle ||| string $haystack string $needle	count=2
namespace	les composants qui avaient ||| function	count=1
arg_pair	d'une base de données ||| string $database resource $link_identifier	count=1
function_name	la première fois) ||| end	count=1
namespace	retourner au client ||| solrquery	count=1
function_name	de l'octet courant ||| current byte index	count=2
function_name	ajoute la session ||| add	count=1
namespace	cette fonction ||| domdocument	count=1
return	le serveur le curseur ||| mongocursor	count=1
arg_pair	le texte text ||| string $text	count=2
function	[function_name_1] d'une ||| [function_name_1] [arg_pair_2]	count=2
function_name	fonction ||| set	count=1
function_name	ou plusieurs serveurs ||| servers	count=1
function_name	nombre de ||| dbase	count=1
return	référence ||| bool	count=1
arg_pair	la base de données ||| string $database_name	count=2
function_name	effectue une requête ||| handle	count=1
function_name	retourne le nombre de ||| num	count=8
function_name	[function_name_1] l'adresse ||| [function_name_2] [function_name_1]	count=1
function_name	libère toute la mémoire ||| free	count=2
function_name	[function_name_1] [function_name_2] et ||| function resource [function_name_2] [function_name_1] string $algorithm string $algorithm_directory	count=1
function_name	[function_name_1] type ||| [function_name_2] [function_name_1]	count=1
function_name	phar ||| valid phar	count=1
arg_pair	une commande ||| resource $connection	count=2
arg_pair	par =?iso-8859-1?... ||| string $field_value	count=1
arg_pair	fonction ||| string $string	count=1
namespace	déplace toutes les ||| eventbuffer	count=1
namespace	ne peuvent ||| pharfileinfo	count=1
arg_pair	par l' oid fourni ||| resource $conn_identifier string $oid	count=1
arg_pair	envoie une commande au ||| string $query	count=1
function_name	de noms de ||| names	count=1
function_name	yaz_connect() ||| yaz	count=1
function_name	code courant ||| code	count=1
arg_pair	tableau array1 qui ||| array $array1	count=2
return	les commandes de ||| bool	count=1
arg_pair	une chaîne php ||| string $value	count=1
arg_pair	date stockée dans un ||| int $value	count=1
function_name	champ field ||| field	count=2
arg_pair	surveillance d'une ressource ||| resource $fam_monitor	count=1
arg_pair	utiles ||| resource $link_identifier string $blob_id	count=1
function_name	dans une instance glo ||| cubrid save to glo	count=1
namespace	page ||| harupage	count=1
function_name	le premier ||| first	count=3
function_name	elle prend ||| poll time	count=1
arg_pair	un ||| resource $p	count=3
arg_pair	fonction de rappel ||| mixed $pattern	count=1
function_name	extraits seront cherchés ||| analyzed chars	count=1
function_name	plus récemment [function_name] ||| get [function_name]	count=1
function_name	nouvelles coordonnées ||| ps moveto	count=1
function_name	nombre de lignes affectées ||| mysqli affected rows	count=1
function_name	radius chaque réponse doit ||| radius	count=1
function_name	la file d'attente s'interrompt ||| set max	count=1
function_name	lit ||| ob	count=1
function_name	une fois par ||| set	count=1
function_name	recherche insensible ||| sql regcase	count=1
function_name	identifiant donné ||| get element by	count=1
function_name	une nouvelle ligne ||| new line	count=2
namespace	evchild::__construct() mais ||| evchild	count=1
namespace	permis ou pas ||| function	count=1
arg_pair	données data ||| string $data	count=1
function_name	de configuration ||| include	count=1
function_name	définit la valeur ||| set	count=2
function_name	service qui ||| win32 set service	count=1
function_name	modifie la valeur ||| include	count=1
function_name	autour des liens ||| pdf set border	count=1
function_name	lit un caractère de ||| callback read	count=1
function_name	[function_name_1] la géométrie ||| [function_name_2] [function_name_1]	count=1
function_name	caractère spécifié en unicode ||| get unicode	count=1
function_name	[function_name] de ||| set text [function_name]	count=2
arg_pair	et la seconde contient ||| mongodb $db string $prefix	count=1
function_name	configure la couleur ||| set background color	count=1
return	des différences ||| string	count=1
arg_pair	x509cert ||| mixed $x509cert bool $shortnames	count=1
function_name	indiquée ||| newt draw root text	count=2
arg_pair	base de données utilisée ||| string $database	count=1
return	appelée sur [return] objet ||| [return]	count=1
function_name	ldap en ||| ldap	count=1
function_name	qu'elle fonctionne avec ||| close	count=1
namespace	la méthode recursivetreeiterator::valid() retourne ||| recursivetreeiterator	count=1
function_name	typiquement ||| size	count=1
arg_pair	pour une chaîne php ||| string $value	count=1
arg_pair	de rappel callback pour ||| callable $callback	count=1
function_name	image ou un ||| image	count=1
namespace	lorsque l'objet a ||| collectable	count=1
return	xml ||| sdo_das_xml_document	count=1
return	[return] sorte ||| [return]	count=1
function_name	appliqué à ||| preview images	count=1
function_name	le certificat x509 ||| openssl x509	count=1
function_name	prochaine ligne d'une requête ||| fetch	count=1
function_name	sur le premier attribut ||| to first attribute	count=1
function_name	queue ou ||| mqseries put	count=2
function_name	ferme la connexion ||| close	count=2
function_name	[function_name_1] de pagination ||| [function_name_2] [function_name_1]	count=8
namespace	un véritable fichier ||| splfileinfo	count=1
function_name	à la fonction cubrid_list_dbs() ||| cubrid db	count=1
function_name	la différence ||| diff uassoc	count=1
function_name	[function_name_1] depuis une ||| [function_name_2] [function_name_1]	count=2
arg_pair	pour préparer l'environnement pour ||| string $passwd	count=1
function_name	une connexion persistante à ||| odbc pconnect	count=1
function_name	l'objet [function_name] qui suit ||| [function_name]	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] add [function_name_2]	count=1
namespace	pointés par ||| function	count=1
arg_pair	colonne données dans ||| mixed $column	count=1
function_name	[function_name_1] pour l'affichage ||| [function_name_1] text [function_name_2]	count=2
arg_pair	imap_open() pour le format ||| resource $imap_stream	count=1
function_name	profondeur de ||| set image depth	count=1
arg_pair	qui est au format ||| resource $connection	count=1
namespace	par la fonction ||| function	count=1
function_name	l'échelle les données dans ||| scale	count=1
function_name	un nouveau [function_name] automatiquement tout ||| session regenerate [function_name]	count=1
function_name	à memcached::prepend() mais la ||| prepend by key	count=1
function_name	poids de ||| getfontweight	count=1
function_name	spécifiée avec un traitement ||| preview	count=1
function_name	com ||| com event sink	count=2
function_name	[function_name_1] l'itérateur interne ||| [function_name_1] [function_name_2]	count=4
function_name	le noeud est ||| is	count=1
function_name	retourne ||| snmp get	count=1
return	un curseur typiquement parcourt ||| mongocommandcursor	count=1
function_name	du fichier fourni ||| all	count=1
function	[function_name_1] l'algorithme ||| [arg_pair_2] [function_name_1]	count=3
function_name	liste tous les ||| msql list	count=1
function_name	sur le ||| merge	count=1
arg_pair	une ||| int $key	count=1
arg_pair	address à l'interface de ||| resource $socket string $address	count=1
function_name	s'y ||| mailparse uudecode	count=1
function_name	mime kopfzeile dans ||| iconv mime encode	count=1
function_name	définir ||| module	count=1
function_name	de texte ||| ps set text	count=2
return	erreur niveau dans lequel ||| int	count=1
function_name	champs facet qui doit ||| facet	count=1
function_name	fin ||| end	count=1
function_name	et extrait dans ||| all	count=1
return	d'un des signaux indiqué ||| int	count=1
function_name	[function_name_1] un script ||| [function_name_2] [function_name_1]	count=3
function_name	connexion au serveur ingres ||| ingres	count=1
arg_pair	un index ||| resource $image int $index	count=1
return	de la base ||| int	count=1
function_name	à l'échelle les entrées ||| scale input	count=1
arg_pair	la valeur de ||| mixed $value int $timeout	count=1
namespace	bouclage ||| recursiveiteratoriterator	count=1
function_name	[function_name_1] nombre entier ||| [function_name_1] [function_name_2]	count=2
function_name	travail ||| svn	count=1
arg_pair	chaîne str ||| string $str int $start	count=1
namespace	méthode est obsolète ||| soapclient	count=1
return	utilisée pour ||| string	count=1
function_name	longueur [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	image reconstruite ||| image	count=1
return	la sauvegarde dans ||| int	count=1
arg_pair	avec la clé key ||| string $key	count=4
function_name	lorsque l'espace de noms ||| start namespace	count=1
arg_pair	l'entrée dn ||| string $dn	count=5
arg_pair	par l'utilisateur ||| callable $user_function	count=1
arg_pair	position courante du texte ||| resource $psdoc string $text	count=1
arg_pair	pour une chaîne ||| string $value string $type	count=1
function_name	la taille [function_name_2] ||| [function_name_2] body [function_name_1]	count=1
function_name	protocole et de flux ||| stream	count=1
function_name	fois [function_name] ||| [function_name] add doc	count=2
function_name	la ||| buffer	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get [function_name_1]	count=30
function_name	au service exposé par ||| gupnp service	count=1
function_name	de ||| set oid	count=1
function_name	maximale de ||| max	count=1
function_name	précisé et libère ||| event buffer free	count=1
function_name	en cours ||| set include path	count=1
function_name	tangente pour chaque valeur ||| trader tan	count=1
namespace	utilisée ||| pharfileinfo	count=1
function_name	le schéma d'entrelacement de ||| get interlace scheme	count=1
namespace	courant interne est toujours ||| solrdocument	count=1
namespace	la liste ||| spldoublylinkedlist	count=2
namespace	paramètre attend ||| reflectionparameter	count=1
arg_pair	en mode wsdl ou ||| mixed $wsdl array $options	count=1
function_name	réponse xml depuis un ||| xml response	count=1
function_name	version de l'extension stomp ||| stomp version	count=1
function_name	depuis la dernière requête ||| mysqli stmt error	count=1
function_name	préfixe de l'espace du ||| prefix	count=1
arg_pair	la valeur ||| string $variable string $value	count=1
arg_pair	le prompt et ||| string $prompt callable $callback	count=1
function_name	demande un ||| dbplus	count=1
function	active [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	nom de la table ||| table	count=1
function_name	méthode ||| get	count=1
function_name	curseur sur le premier ||| to first	count=1
arg_pair	de alpha degrés dans ||| resource $p float $alpha	count=1
namespace	par défaut ||| function	count=5
function_name	résultats mysql ||| mysql result	count=2
function_name	file d'attente s'interrompt ||| max poll time	count=1
function_name	que ceux de ||| chmod	count=1
function_name	de version de la ||| version	count=1
function_name	a probablement des informations ||| check probability model	count=1
function_name	classe personnalisée à utiliser ||| info class	count=1
namespace	définie avec ||| gearmanclient	count=1
function_name	[function_name_1] de ||| [function_name_2] background [function_name_1]	count=1
function_name	retourne une instance de ||| get	count=1
return	du jeu ||| string	count=1
namespace	le dossier d'archives ||| function	count=1
function_name	signal indiqué ||| pcntl signal	count=1
function_name	jeu de caractères ||| iconv set	count=1
function_name	tronque ||| ftruncate	count=2
return	rewinddir() ||| void	count=1
function_name	array comme une pile ||| push	count=1
function_name	scan request sur la ||| scan	count=1
arg_pair	[arg_pair_1] coordonnées x ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	de la ligne ||| line	count=1
function_name	récupère les blob/clob en ||| lob get	count=1
namespace	tampon d'événements de ||| eventbuffer	count=1
arg_pair	fonction est ||| string $string	count=1
function_name	un identifiant donné ||| get	count=1
arg_pair	de résultats listant les ||| string $schema	count=4
function_name	un marqueur oracle ||| oci bind	count=1
arg_pair	rappel pour l'événement ||| mixed $arg	count=1
function_name	de la prochaine requête ||| next result	count=1
function_name	libère les ressources du ||| free	count=1
arg_pair	fixe de couleurs représentant ||| bool $dither	count=1
arg_pair	memcached::set() hormis le ||| int $expiration	count=1
function_name	de configuration include_path pour ||| include	count=1
return	effectue une requête ||| void	count=1
function_name	le système de fichiers ||| fstatvfs	count=1
function_name	cette fonction ||| module	count=1
function_name	élément avec un ||| element by id	count=1
function_name	garde la boucle ||| keepalive	count=1
function_name	[function_name_1] [function_name_2] déclarant la classe considérée ||| [function_name_2] [function_name_1]	count=2
return	dans la liste ||| int	count=1
function_name	code erreur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	crypte le contenu ||| blenc encrypt	count=1
arg_pair	retourne la chaîne str ||| string $from	count=1
function_name	le fait qu'elle fonctionne ||| proc	count=1
function_name	[function_name_1] minimale ||| [function_name_1] [function_name_2]	count=1
namespace	et ||| xmldiff\file	count=1
function_name	fin de la ||| push	count=1
function_name	suivante de ||| dbplus next	count=1
function_name	tous ||| newt	count=1
function_name	du champ depuis ||| field	count=1
function_name	analyse une liste d'adresses ||| parse	count=1
function_name	paramètre de linejoin à ||| pdf setlinejoin	count=1
function_name	d'instructions exécutables de ||| set processing instruction	count=2
arg_pair	contenu d'un élément ||| string $attr_name int $index	count=1
function_name	true si [function_name] a un ||| get [function_name]	count=1
arg_pair	brosse courante pour le ||| resource $image	count=1
function_name	de gris pour toutes ||| setgray	count=1
function_name	la portée ||| lookup	count=1
function_name	fourni par le ||| buffer	count=1
function_name	[function_name] svm ||| [function_name]	count=1
function_name	jokers à analyser dans ||| tokens	count=1
function_name	script ||| path	count=1
function_name	dernière erreur de ||| error	count=3
namespace	de l'image spécifiée ||| imagick	count=1
function_name	message d'erreur qui sont ||| result error	count=1
return	compression utilisée sur le ||| string	count=1
function_name	par la ||| destroy	count=1
namespace	à ||| function	count=11
function_name	ressources mémoires ||| form destroy	count=1
function_name	sert à détruire ||| shmop	count=1
function_name	prend ||| time	count=1
function_name	d'archives ||| zip entry	count=1
function_name	du texte en ||| text	count=1
function_name	une chaîne est nettoyée ||| is tainted	count=1
function_name	transforme une ||| transform	count=1
function_name	utilisé ||| debug	count=1
function_name	aux lettres ||| imap	count=2
function_name	options [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	la demande courante ||| request	count=1
arg_pair	variable_name dans ce ||| string $variable_name	count=1
function_name	un arbre de ||| load	count=1
namespace	tâche ||| gearmantask	count=4
function_name	un guid binaire de ||| guid	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] train stop [function_name_2]	count=1
function_name	efface une collection ||| delete by ids	count=1
arg_pair	ouvre [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	par la clé key ||| string $key int $timeout	count=1
function_name	informations d'attribut d'un objet ||| object	count=1
function_name	de la tâche en ||| do background	count=1
namespace	lob oracle dans ||| oci-lob	count=1
function_name	algorithme par [function_name] c'est un ||| mcrypt module is [function_name]	count=1
function_name	souscription ||| imap unsubscribe	count=2
function_name	la réponse ||| response	count=6
return	la date ||| int	count=2
arg_pair	partir d'une source ||| int $source	count=1
function_name	temporaire tous ||| mailparse	count=1
function_name	associé au paramètre ||| msql	count=1
arg_pair	cookie ... ||| int $pagesize	count=1
arg_pair	x509cert et retourne les ||| mixed $x509cert bool $shortnames	count=1
arg_pair	texte text en ||| string $fontfile string $text	count=1
function_name	au ||| ingres result seek	count=1
function_name	tous les paramètres ||| to string	count=1
function_name	retourne ||| memcache get	count=1
namespace	noeud courant est ||| tidynode	count=1
function_name	du ||| uudecode	count=1
function_name	la couleur ||| background color	count=2
arg_pair	à cette méthode est ||| string $function_name	count=1
namespace	méthode de ||| function	count=1
function_name	résultants et ||| size	count=1
arg_pair	dessine le ||| int $color	count=1
function_name	la fréquence maximale des ||| terms max	count=1
return	devant ||| string	count=1
function_name	patch et enregistre le ||| file patch	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] array $assoc_array [arg_pair_1]	count=2
arg_pair	xml basé sur ||| string $diff	count=1
function_name	[function_name_1] tables ||| [function_name_1] [function_name_2]	count=1
function_name	fonctionne avec les ||| proc close	count=1
function_name	collections : la ||| construct	count=1
arg_pair	haystack et retourne la ||| bool $part	count=1
function	json de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	peuvent être invoquées avant ||| int $max_interval int $max_callbacks	count=1
function_name	fonctions pspell ||| pspell	count=1
function_name	une opération strripos() basée ||| mb strripos	count=1
function_name	syntaxe ||| check syntax	count=2
arg_pair	la brosse ||| resource $image	count=1
arg_pair	donnés sans attendre ||| resource $connection string $stmtname	count=1
function_name	array comme ||| array push	count=1
namespace	ou 128 ||| function	count=1
function_name	l'objet blob ||| blob	count=1
arg_pair	log_killcursor lors de ||| array $server array $info	count=1
function_name	tailles de ||| key sizes	count=2
function_name	haystack allant ||| strstr	count=1
function_name	pour le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function	ligne [arg_pair_2] ||| [function_name_1] object [arg_pair_2]	count=1
arg_pair	si l'accès au ||| string $user	count=1
return	de l'image depuis ||| string	count=1
function_name	fréquence d'apparition [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	sortie ||| output scaling	count=1
function_name	est accessible ||| is readable	count=1
function	la puissance [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	avaient été ajoutés à ||| newt	count=1
arg_pair	fonction ||| int $month	count=1
function_name	sélectionne ||| db query	count=4
function_name	désigné ||| xattr set	count=2
function_name	[function_name_1] la taille ||| [function_name_1] current font [function_name_2]	count=1
function_name	que pour ||| set	count=1
return	doit pas être ||| string	count=1
function_name	de type strpos() ||| strrpos	count=1
function_name	nouvelle définition de gabarit ||| template ext	count=1
function_name	passée en ||| string	count=1
namespace	qui a été obtenu ||| function	count=1
function_name	récupère la clé ||| key	count=2
arg_pair	memcache::connect() avec la ||| string $host	count=1
function_name	[function_name_1] la requête ||| [function_name_2] [function_name_1]	count=2
function_name	xml ||| merge	count=1
namespace	déplace ||| limititerator	count=1
function_name	par la méthode oauthprovider::consumerhandler() ||| callconsumer handler	count=1
function_name	connexion mysql courante ||| mysql	count=2
arg_pair	src_x src_y [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function	[function_name_1] structure de ||| [function_name_1] train from callback [arg_pair_2]	count=1
function_name	sans suivre ||| sftp lstat	count=1
function_name	à la fin ||| push	count=1
function_name	lit le ||| ob	count=1
function_name	l'objet de la demande ||| request	count=1
function_name	liste tous [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	record pour ||| delete record	count=1
function_name	de postgresql ||| pg	count=1
arg_pair	une utilisation ultérieure ||| string $filename string $stringparam	count=1
function_name	la connexion mysql ||| mysql	count=2
function_name	la limite de l'anglet ||| miter	count=1
function_name	image depuis le ||| image	count=1
function_name	tous les composants ||| form	count=1
function_name	données blob/clob depuis la ||| cubrid lob	count=1
function_name	modifie le mode de ||| mode	count=1
namespace	map ||| weakmap	count=1
return	méthode recursivetreeiterator::valid() retourne false ||| void	count=1
function_name	mode d'écriture de ||| writing mode	count=1
function_name	a été joint ||| joined	count=1
arg_pair	un ||| string $country_code	count=1
function	lie un tableau [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	avec un identifiant ||| get element by id	count=1
function_name	de hachage [function_name] ||| save to [function_name]	count=3
function_name	été ajoutés à ||| form destroy	count=1
arg_pair	pas attrappées par ||| string $cb string $arg	count=1
function_name	des informations ||| info	count=2
function_name	utilisée pour modifier les ||| set resource	count=1
return	la chaîne de ||| void	count=1
namespace	sur le dossier ||| function	count=1
arg_pair	une fonction anonyme à ||| string $args string $code	count=1
return	envoyer au ||| bool	count=1
arg_pair	temporairement le monitoring ||| resource $fam_monitor	count=1
function_name	fourni et extrait ||| uudecode	count=1
function_name	efface les fichiers ||| apc delete file	count=3
function_name	est similaire à ||| fbsql field	count=1
function_name	nouveau [function_name] pour ||| [function_name] packet	count=1
function_name	sauvegarde la base ||| save	count=1
arg_pair	une colonne données dans ||| mixed $column	count=1
function_name	d'archives spécifié par ||| entry compressionmethod	count=1
return	spécial ou ||| bool	count=1
arg_pair	avec un ||| string $mode	count=1
arg_pair	[arg_pair_1] première occurrence ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	len octets ||| int $len int $flags	count=1
namespace	thread ||| thread	count=2
function_name	champs [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
function_name	connexion passées avec des ||| connect	count=1
arg_pair	un ||| resource $ann float $rprop_delta_max	count=1
function_name	le sinus hyperbolique ||| sinh	count=1
arg_pair	de la gamme des ||| float $black_point float $white_point	count=1
namespace	conservant la corrélation entre ||| arrayobject	count=1
arg_pair	universal database ibm cloudscape ||| string $database string $username	count=1
namespace	jeu ||| mongoclient	count=1
function_name	des abscisses et ||| pdf skew	count=1
function_name	où ||| fann set error log	count=2
arg_pair	la forme d'un nouvel ||| int $y	count=1
function	rappel pour [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	libère les ||| function	count=1
return	d'une image contenant du ||| gmagick	count=1
function_name	d'exécution des fichiers ||| chmod	count=1
function	ajoute [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=20
arg_pair	la valeur de ||| mixed $value	count=1
arg_pair	la signature1 et la ||| string $signature1	count=1
function_name	[function_name_1] plusieurs images ||| [function_name_1] [function_name_2]	count=1
function_name	fonction snmp2_walk() est utilisée ||| walk	count=1
function_name	[function_name_1] du pattern ||| [function_name_2] [function_name_1]	count=1
namespace	cette méthode détermine ||| pharfileinfo	count=1
return	est similaire à la ||| domelement	count=1
arg_pair	ignore la casse des ||| string $pattern string $string	count=1
arg_pair	collections : la première ||| mongodb $db	count=1
arg_pair	dessin des lignes par ||| resource $image	count=1
function_name	la ||| form	count=2
arg_pair	son contenu dans ||| int $oid	count=1
function_name	verrou ||| getlock	count=1
function_name	nouveau modèle ||| ps begin template	count=1
namespace	toutes les ||| eventbuffer	count=1
function_name	éléments descendants ||| elements by	count=2
function_name	[function_name_1] [function_name_2] s'identifie ||| function resource [function_name_2] [function_name_1]	count=2
arg_pair	lit les options ||| string $options array $longopts	count=1
function_name	ajoute du flou à ||| gaussian blur	count=1
namespace	requête soap ||| soapclient	count=1
return	un arbre de ||| sdo_das_xml_document	count=1
namespace	en interne par ||| function	count=1
function_name	la dernière requête appelée ||| mysqli stmt errno	count=1
function_name	termine une [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	durée du script en ||| set include path	count=1
function_name	nombre de ||| ifx num fields	count=1
arg_pair	la chaîne str ||| string $str string $character_mask	count=2
function_name	connexion ||| ingres connect	count=1
function_name	récupère le préfixe ||| get facet prefix	count=2
function_name	http ||| apache request	count=1
function_name	de données msql ||| msql	count=1
return	de champs colonnes de ||| int	count=1
function_name	retourne ||| id3 get	count=3
arg_pair	le fait que ||| int $second	count=1
function_name	patch binaire ||| file patch binary	count=1
arg_pair	les deux versions de ||| string $version1 string $version2	count=1
function_name	la taille associée ||| size	count=1
function_name	de types or ||| or	count=1
function_name	connexion actuelle utilise l'autocommit ||| ingres autocommit state	count=1
function_name	est similaire à la ||| id	count=1
arg_pair	montage d'un périphérique ||| string $externalpath	count=1
return	sous la forme de ||| string	count=1
function_name	définir le délai maximal ||| timeout	count=1
function_name	la fréquence [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] blob fourni ||| [function_name_2] [function_name_1]	count=4
function_name	données du fichier fourni ||| mailparse uudecode all	count=1
function_name	session ||| dict is in session	count=2
arg_pair	occurrence de needle incluse ||| string $haystack	count=1
arg_pair	de la sequence ||| string $sequence	count=1
function_name	libère ||| form	count=1
function_name	filtre d'un flux ||| stream filter remove	count=3
arg_pair	sont ||| int $month	count=1
arg_pair	les données fournies ||| string $optlist	count=1
function_name	utile ||| get	count=1
function_name	du fichier fourni et ||| mailparse	count=1
function	mémoire partagée [arg_pair_2] ||| [function_name_1] remove var [arg_pair_2]	count=3
arg_pair	est prévue pour être ||| string $file_extensions	count=1
function_name	gris pour ||| ps setgray	count=1
function_name	autocommit de la ||| db2 autocommit	count=1
arg_pair	texte ||| int $index	count=1
namespace	de [namespace] qui sera ||| [namespace]	count=1
function_name	déplace le ||| move	count=1
arg_pair	fonction cubrid_connect() est ||| bool $new_link	count=1
function_name	récupère ||| sqlsrv get	count=1
namespace	bit ou ||| function	count=1
function_name	nombre ||| db2 num	count=1
arg_pair	dans ||| resource $reason	count=1
function_name	calcule l'arc sinus de ||| trader asin	count=1
function_name	gamma à l'image gd ||| imagegammacorrect	count=1
function_name	table courante dans ||| fbsql table	count=1
function_name	un élément avec ||| get	count=1
function_name	être utilisé pour ||| set multi by	count=1
arg_pair	génère une signature d'en-tête ||| string $http_method	count=1
function_name	représenté ||| dio read	count=1
arg_pair	[arg_pair_1] et bcc ||| [arg_pair_2] [arg_pair_1]	count=4
arg_pair	la fonction ||| int $minute	count=1
function_name	facteur quickprop mu ||| quickprop mu	count=1
function_name	une seule image ||| stereo image	count=1
function_name	de la page ||| page	count=1
function_name	contexte ||| gupnp context new	count=2
namespace	la ||| splfileinfo	count=2
function	numérotation [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
namespace	à envoyer au ||| mongocursorinterface	count=1
function_name	pour le dessin des ||| imagesetbrush	count=1
namespace	tous les ||| solrparams	count=1
arg_pair	par [arg_pair] ||| [arg_pair]	count=3
function_name	sélectionne la ||| msql select db	count=1
arg_pair	utilisant l'image image ||| resource $image	count=1
return	position courant [return] flux du ||| [return]	count=1
namespace	où la méthode ev::run() ||| ev	count=2
function_name	lit le ||| read	count=2
function_name	récupère le nombre d'erreurs ||| session pgsql get error	count=1
namespace	travaux assigné par le ||| gearmanjob	count=1
return	un champ de bits ||| int	count=1
function_name	événement ||| event	count=1
namespace	base de ||| mongocursorinterface	count=1
function_name	fonction popen() ||| pclose	count=1
function_name	la couche de sortie ||| output	count=1
arg_pair	serveur avec les définitions ||| resource $id	count=1
namespace	peut être utilisée ||| mongolog	count=1
function_name	rassemble les ||| merge	count=1
function_name	patch binaire et ||| file patch binary	count=1
function_name	pour définir les ||| module	count=1
function_name	récupère le type ||| get socket type	count=1
function_name	connecte le dernier ||| closepath stroke	count=1
function_name	dans un fichier temporaire ||| mailparse uudecode	count=1
return	un traitement appliqué ||| bool	count=1
function_name	dernier [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	avoir à utiliser mapreduce ||| array $options	count=1
function_name	[function_name_1] vi de ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] lisible ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] de statut ||| [function_name_1] [function_name_2]	count=1
namespace	est un ||| tidynode	count=1
arg_pair	contenu dans ||| resource $connection	count=1
arg_pair	seuil de ||| float $sarprop_step_error_threshold_factor	count=1
return	sur un ||| resource	count=1
function_name	au groupe de requêtes ||| eio grp	count=1
return	les clé et ||| void	count=1
function_name	ingres ||| ingres unbuffered	count=1
function_name	mssql_fetch_array() ||| mssql	count=1
function_name	paramètres ||| scaling params	count=1
function_name	à la position courante ||| show	count=1
function_name	ajoute [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	la prochaine ||| next	count=6
function_name	variable [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	du noeud ||| splpriorityqueue	count=1
function_name	est ||| variant	count=1
function_name	le fichier compressé ||| gzclose	count=1
function_name	de configuration ||| set	count=1
function_name	de la prochaine ||| cubrid next result	count=1
function_name	convertir une archive ||| convert to data	count=1
function_name	configure l'espace [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	une ligne de données ||| ifx fetch row	count=1
function_name	données [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	[function_name_1] [function_name_2] ||| [function_name_1] iv [function_name_2]	count=4
function_name	récupère la date et ||| get	count=1
arg_pair	dernière occurrence ||| string $haystack	count=2
function_name	configure le style ||| style	count=1
arg_pair	la représentation dom ||| domnode $node int $options	count=1
namespace	les bits d'exécution ||| pharfileinfo	count=1
namespace	personnalisées dans ||| pharfileinfo	count=1
return	ou de la ||| float	count=1
function_name	serveurs de travaux ||| servers	count=1
arg_pair	cubrid_connect() est utilisée pour ||| string $passwd bool $new_link	count=1
function_name	l'uri ||| set base uri	count=2
function	[function_name_1] de str ||| [function_name_1] [arg_pair_2]	count=3
return	chaque pixel [return] ||| [return]	count=3
namespace	avec un identifiant ||| domdocument	count=1
namespace	le point courant vers ||| harupage	count=1
function_name	profilage de la ||| profiling level	count=1
arg_pair	valeurs rvg ||| int $bmax	count=1
function_name	détruit ||| offset unset	count=1
function_name	de grande taille de ||| lo	count=1
function_name	[function_name_1] le préfixe ||| [function_name_1] facet [function_name_2]	count=1
return	l'image ||| array	count=1
function_name	images ||| compare images	count=1
function_name	prochaine requête ||| cubrid next	count=1
function_name	les caractères ||| string	count=1
function_name	ré-initialise toutes ||| reset	count=1
return	entière [return] ||| [return]	count=2
function_name	champ spécifié par sa ||| field seek	count=1
return	travaux assigné par ||| string	count=1
function_name	de champs colonnes de ||| dbase	count=1
arg_pair	entraîne une machine ||| array $problem array $weights	count=1
function_name	crée une action ||| pdf create action	count=3
function_name	retire un ||| multi remove handle	count=1
arg_pair	la casse des ||| string $string	count=1
function_name	[function_name_1] le type ||| [function_name_1] [function_name_2]	count=5
function_name	[function_name] algorithme par ||| [function_name] block	count=1
function	[function_name_1] données database ||| [arg_pair_2] [function_name_1]	count=5
return	si un ||| bool	count=3
function_name	les paires de remplacement ||| pspell config repl	count=1
function_name	une connexion à ||| connect	count=2
namespace	excepté le fait ||| function	count=1
function_name	page pour utilisation ||| pdf open pdi page	count=1
arg_pair	contient les métadonnées et ||| string $prefix	count=1
arg_pair	mktime() ||| int $day	count=1
function_name	définit ||| ms set	count=2
function_name	stocker les itérateurs ajoutés ||| array	count=1
function_name	préfixe de la facette ||| facet prefix	count=1
function_name	distants ||| loop	count=1
function_name	cache [function_name] ||| wincache [function_name]	count=1
function_name	à fermer ||| close	count=1
rest	l'analyseur [function_2] ||| [return_1] [function_2]	count=3
function_name	l'endroit où ||| set error log	count=1
namespace	fonction peut être utilisée ||| mongolog	count=1
arg_pair	séparateur delimiter ||| string $delimiter string $string	count=1
arg_pair	d'extraits de texte ||| string $field_override	count=1
namespace	données du document dans ||| harudoc	count=1
function_name	la ||| db2 escape string	count=2
arg_pair	le nombre de jours ||| int $day	count=1
function_name	la fonction geoip_country_code3_by_name() ||| country code3	count=1
function_name	mémoires utilisées ||| newt form	count=1
namespace	d'une ||| gmagick	count=1
return	puissance 4 en coordonnées ||| bool	count=1
namespace	se ||| splpriorityqueue	count=1
function_name	l'échelle les ||| fann scale input	count=1
function_name	par ||| imagesetbrush	count=1
rest	une représentation [function_2] ||| [return_1] [function_2]	count=1
namespace	écrit les lob oracle ||| oci-lob	count=1
function_name	des canaux de l'image ||| image channel	count=1
namespace	image en balançant les ||| gmagick	count=1
function_name	se prolongeant ||| eio fallocate	count=1
function_name	dernière requête insert ||| insert	count=1
return	stocker des données personnalisées ||| void	count=1
function_name	similaires à ||| mlt	count=2
function_name	police [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] fréquence ||| [function_name_1] cache min [function_name_2]	count=1
arg_pair	basant sur ||| resource $ann	count=1
function_name	la pertinence des termes ||| set mlt boost	count=1
function_name	un curseur ||| size	count=1
function_name	l'orientation ||| image orientation	count=2
function_name	déplace toutes les ||| add buffer	count=1
function_name	retourne une ressource ||| get resource	count=1
function_name	données ||| mailparse uudecode all	count=2
function_name	méthodes http supportées et ||| methods	count=1
namespace	terminé son exécution ou ||| collectable	count=1
namespace	où la ||| ev	count=2
function_name	pour le schéma relaxng ||| set relax ngschema	count=1
return	la forme en ||| void	count=1
function	ligne [arg_pair_2] ||| [function_name_1] object resource $result [arg_pair_2]	count=1
function_name	mémoire partagée ||| shm	count=4
arg_pair	fixe le uri contenant ||| string $uri	count=1
arg_pair	msg_number pour l'effacement ||| resource $imap_stream int $msg_number	count=1
function_name	ligne suivante de ||| next	count=1
namespace	formats définis par cairoformat ||| cairoimagesurface	count=1
function_name	de connexion persistante ||| pg pconnect	count=1
function_name	calcule l'entier ||| trader floor	count=1
function_name	à l'échelle liquide ||| liquid rescale	count=1
function_name	dessous de ||| ps continue	count=1
return	un tableau de deux ||| array	count=1
namespace	curseur est à ||| mongocursorinterface	count=1
function_name	calcule le md5 ||| md5 file	count=1
function_name	paramètres de l'objet sous ||| to	count=1
namespace	est ||| domdocument	count=1
arg_pair	équivalente à memcached::set() hormis ||| mixed $value int $expiration	count=1
return	spécifié par ||| string	count=1
function_name	vérifie si un ||| opcache is	count=1
return	recursivetreeiterator::valid() retourne false ||| void	count=1
function_name	écrit ||| show	count=1
function_name	l'objet sous la ||| to	count=1
function_name	retourne ||| get named	count=1
arg_pair	d'une base de données ||| string $database	count=1
function_name	d'archives ||| compressionmethod	count=1
function_name	statut http ||| http status message	count=2
function_name	qu'elle ||| close	count=1
function_name	si ||| set max poll time	count=2
function_name	une [function_name] ||| [function_name]	count=5
arg_pair	appeler à ||| mixed $arg	count=1
arg_pair	texte text [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	compression utilisée sur ||| zip entry	count=1
namespace	fonction rewinddir() seul ||| directory	count=1
function_name	avec un identifiant donné ||| element by	count=1
function_name	calcule le cosinue ||| cos	count=1
function_name	retourne true si ||| is	count=1
function_name	hormis le fait qu'elle ||| close	count=1
function_name	à la ||| get	count=1
arg_pair	la fonction filter_input() ||| int $type mixed $definition	count=1
function	[function_name_1] réseau ||| [arg_pair_2] [function_name_1]	count=1
function_name	écrit du ||| ps	count=1
function_name	fichier ||| mailparse	count=2
function_name	de l'étape d'erreur sarprop ||| fann set sarprop step error threshold	count=1
function_name	la valeur de ||| include path	count=1
function_name	sert à ||| delete	count=1
arg_pair	de domaine unicode ||| string $domain	count=1
arg_pair	dans un ||| string $index array $attributes	count=1
function	[function_name_1] parties ||| [function_name_1] open resource $link_identifier [arg_pair_2]	count=1
function	crée un ||| construct eventbase $base	count=1
function_name	libère ||| newt form	count=1
arg_pair	principal avec ||| resource $handle string $principal	count=1
function_name	analyse une ||| rfc822 parse	count=1
function_name	fait qu'elle fonctionne avec ||| proc	count=1
function_name	d'un ||| return	count=1
namespace	récupère les ||| function	count=1
function_name	[function_name_1] requête inspectée ||| [function_name_2] [function_name_1]	count=4
arg_pair	fusionne 3 chaînes en ||| string $old_data string $new_data1	count=1
arg_pair	collection de documents à ||| array $docs	count=1
arg_pair	occurrence de needle incluse ||| mixed $needle	count=1
arg_pair	défini le changement ||| float $sarprop_step_error_shift	count=1
function_name	nombre ||| session pgsql	count=1
function_name	suivante ||| dbplus next	count=2
function_name	propriétés de l'image ||| image properties	count=2
function_name	du jeu de ||| db2 field	count=4
function_name	connexion avec ||| ingres connect	count=1
arg_pair	depuis les données ||| string $data	count=1
function_name	pour insérer un seul ||| cubrid set add	count=1
return	la position dans ||| int	count=1
function_name	de la transaction en ||| transaction	count=1
function_name	d'activation pour la ||| fann set activation	count=1
arg_pair	prompt ||| callable $callback	count=1
arg_pair	une colonne ||| mixed $param	count=1
arg_pair	left_operand à ||| string $left_operand	count=1
function_name	définit une fonction ||| set	count=3
namespace	boucle libeio ||| function	count=1
arg_pair	ouvre [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	dernière commande ldap pour ||| ldap errno	count=1
function_name	élément avec ||| by id	count=1
function_name	la dernière requête appelée ||| stmt errno	count=1
function_name	utf-8 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	priorité de pid à ||| int $priority int $pid	count=1
function_name	spécifiée ||| preview	count=1
function_name	à l'échelle les sorties ||| scale output	count=1
namespace	les commandes de ||| imagick	count=1
function_name	connexion au serveur ||| connect	count=1
function_name	de l'octet ||| byte index	count=1
return	une chaîne de caractères ||| string	count=7
function_name	champ ||| fetch field	count=1
arg_pair	search ||| mixed $search	count=2
arg_pair	d'autorité ca pour à ||| string $ca_info	count=1
namespace	splfileinfo pour le ||| splfileinfo	count=1
arg_pair	l'envoyer ||| string $source_string	count=1
arg_pair	lors de la ||| string $pattern string $string	count=1
function_name	[function_name_1] température sarprop ||| [function_name_1] [function_name_2]	count=1
function	de fenêtre [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	strcmp() elle n'est ||| string $str1 string $str2	count=1
function_name	un agent snmp ||| snmp2	count=1
function_name	carte de [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	faible priorité à ||| low	count=1
function_name	retourne le type mime ||| get mime type	count=1
function_name	de termes de ||| terms	count=1
function_name	écrit ||| ps	count=1
function_name	la valeur ||| set	count=1
arg_pair	socket_create() ||| int $backlog	count=1
arg_pair	fait que les ||| int $day	count=1
function_name	chaîne de ||| db2 escape string	count=1
function_name	ressource ||| fam cancel	count=1
function_name	documents [function_name_2] ||| [function_name_2] [function_name_1]	count=16
arg_pair	gestionnaire pour des commandes ||| string $par1	count=1
arg_pair	le type d'éléments à ||| resource $id string $elementset	count=1
namespace	validité ||| appenditerator	count=1
function_name	calcule la clé soundex ||| soundex	count=1
return	sortie d'un ||| int	count=1
arg_pair	ou distante ||| bool $is_null int $maxlen	count=1
function_name	utilisée pour ||| set by key	count=1
arg_pair	cc [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
namespace	32 bit ou ||| function	count=1
function_name	de version ||| rrd version	count=1
function_name	messages [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	temporaire tous les ||| function	count=1
function_name	distant ||| ssh2	count=8
function_name	protège les ||| escape string	count=1
arg_pair	statue un ||| resource $sftp	count=1
function_name	écrit du ||| show	count=1
function_name	initialise une ||| init	count=1
function_name	instance glo ||| load from glo	count=1
return	les bits d'exécution des ||| void	count=1
function_name	miniatures de ||| images	count=1
function_name	paramètres passés ||| gmmktime	count=1
function_name	fichier temporaire ||| uudecode	count=1
return	l'url ||| string	count=1
function_name	à ||| ps	count=1
function_name	cours ||| pg	count=1
function_name	le ||| mcrypt	count=2
namespace	un [namespace] ||| [namespace]	count=7
arg_pair	mot word est ||| string $word	count=1
function_name	de la police ||| font	count=4
function_name	extrait et décode ||| extract	count=1
arg_pair	génère une chaîne ||| string $uri	count=1
arg_pair	statue un fichier sur ||| resource $sftp	count=1
namespace	l'élément ||| spldoublylinkedlist	count=1
function_name	classe personnalisée qui ||| file class	count=1
function_name	ne doit être ||| metadata	count=1
function_name	récupère la valeur d'un ||| get parameter	count=1
function_name	composants ||| destroy	count=2
namespace	pour ce travail ||| gearmanjob	count=1
arg_pair	la fonction cubrid_set_add() est ||| string $set_element	count=1
function_name	sommaire de leur ||| imap fetch overview	count=1
function_name	la fonction d'activation pour ||| activation function	count=3
arg_pair	db2 universal database ||| string $username	count=1
function_name	[function_name] l'algorithme ||| [function_name]	count=2
function_name	lorsque l'itération commence ||| begin iteration	count=2
arg_pair	récupère les ||| resource $pdfdoc int $table	count=1
function_name	de l'image spécifiée ||| preview	count=1
return	le serveur de ||| string	count=1
function_name	la possibilité de ||| oci cancel	count=1
function_name	retourne ||| get mlt min	count=1
function_name	les statistiques sont actives ||| get stats	count=1
return	variable en ||| bool	count=1
arg_pair	à la fonction ||| int $second	count=1
arg_pair	dans haystack et retourne ||| string $encoding	count=1
return	courant est ||| bool	count=1
function_name	serveur ftp ||| ftp	count=4
function_name	nombre de colonnes dans ||| num fields	count=1
namespace	que ||| mongocursorinterface	count=1
function_name	tant que ||| eio	count=1
return	de tous les ||| bool	count=1
function_name	qualité de la compression ||| get compression quality	count=1
function_name	[function_name_1] résultat de ||| [function_name_2] [function_name_1]	count=4
return	antislashs ||| string	count=1
function_name	[function_name_1] sortie ||| [function_name_2] [function_name_1]	count=4
arg_pair	libre server_key peut être ||| array $keys	count=1
function_name	base de données postgresql ||| pg	count=3
function_name	base sqlite ||| sqlite close	count=1
function_name	create() ||| types	count=1
function_name	de connexion spécifié ||| mysql create	count=1
arg_pair	fonction est ||| string $pattern string $string	count=1
arg_pair	cartes de seuil ||| string $threshold_map	count=1
function_name	considère array comme une ||| push	count=1
function_name	[function_name_1] de fond ||| [function_name_2] [function_name_1]	count=3
arg_pair	la catégorie courante ||| resource $agent string $category	count=1
function_name	champs colonnes de la ||| dbase numfields	count=1
function_name	connexion avec la base ||| ingres connect	count=1
function_name	extrêmes pour ||| extrema	count=1
return	lit les en-têtes des ||| array	count=1
namespace	position ||| limititerator	count=1
namespace	oauth pour les prochaines ||| oauth	count=1
arg_pair	retourne le fichier dans ||| string $filename	count=1
function_name	avec ||| close	count=1
function_name	le champ field donné ||| field	count=1
function_name	par le paramètre patch ||| file patch	count=1
function	setcookie() excepté [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	utilisée que pour stocker ||| set	count=1
function_name	un contexte ||| context	count=1
function_name	modifie la gestion ||| odbc binmode	count=1
function	ouvre [arg_pair_2] ||| [function_name_1] ccitt [arg_pair_2]	count=1
function_name	la représentation json de ||| json encode	count=1
return	ainsi que ceux ||| void	count=1
function_name	identique à preg_replace() ||| preg filter	count=2
arg_pair	par son identifiant packet_id ||| resource $packet_id mixed $var_name	count=1
arg_pair	bloc de contenu ||| string $blockname int $contents	count=1
arg_pair	la table table_name ||| string $table_name	count=4
function_name	dans un ||| attributes	count=1
function_name	si ||| max poll	count=1
function_name	récupère le nombre d'erreurs ||| session pgsql get	count=1
function_name	la fonction maxdb_multi_query() ||| maxdb more results	count=1
arg_pair	qui est au ||| resource $connection string $table_name	count=1
function_name	de types or ||| variant or	count=1
function_name	objet dans lequel chaque ||| object	count=1
return	les lignes de la ||| int	count=1
function_name	modules à ||| set	count=1
namespace	des antislashs devant ||| function	count=1
function_name	suspend ||| suspend	count=2
arg_pair	récupère une section particulière ||| string $section int $options	count=1
namespace	un verrou exclusif qui ||| function	count=1
function_name	lui est ||| newt run	count=1
function_name	false ||| end	count=1
function_name	et sur le ||| merge	count=1
function_name	un curseur typiquement parcourt ||| batch	count=1
namespace	cette méthode est utile ||| mongoclient	count=1
function_name	la seconde contient le ||| construct	count=1
function_name	include_path pour la durée ||| set include path	count=1
function_name	similaire à ||| get element by	count=1
function_name	les données du ||| add	count=1
namespace	de ||| imagick	count=5
arg_pair	prévue pour être utilisée ||| string $file_extensions	count=1
function_name	compte le nombre d'occurrences ||| substr count	count=1
return	cette méthode détermine si ||| bool	count=1
function_name	du script ||| set include path	count=1
return	le script ||| bool	count=1
function_name	de données n'a ||| dead	count=1
namespace	les ||| mongolog	count=2
function_name	d'activation pour ||| set activation	count=6
function_name	gestionnaire d'entité externe de ||| set external entity ref handler	count=1
namespace	cette ||| function	count=2
function_name	la ||| dbplus rzap	count=2
arg_pair	ligne actuellement sélectionnée ||| int $fieldindex	count=1
function_name	symbolique correspondant à ||| token	count=1
function_name	la page sous ||| page	count=1
function	définit les [function_name_1] [arg_pair_2] le ||| [function_name_1] [arg_pair_2]	count=1
return	représentant le jeu de ||| sqlite3result	count=1
function_name	xbm de l'image ||| imagexbm	count=1
function	classe [arg_pair_2] ||| [function_name_1] parents mixed $class [arg_pair_2]	count=1
function_name	dans le référentiel ||| svn	count=2
function	[function_name_1] la cible ||| [arg_pair_2] [function_name_1]	count=3
function_name	ne doit être utilisée ||| set metadata	count=1
return	l'affichage des valeurs en ||| bool	count=1
function_name	tous les ||| to string	count=1
namespace	cette méthode ne ||| pharfileinfo	count=1
function_name	geoip_org_by_name() ||| org	count=1
arg_pair	dossier sur le système ||| string $dirname	count=1
return	curseur est à ||| bool	count=1
function_name	[function_name_1] le champ ||| [function_name_2] [function_name_1]	count=2
function_name	le document pdf utilisé ||| pdf	count=1
arg_pair	de texte et récupère ||| string $text	count=1
namespace	array comme une ||| function	count=1
function_name	champ ||| field flags	count=2
function_name	affiche [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	fournie par l'utilisateur ||| callable $user_function	count=1
arg_pair	fonction cubrid_bind() ||| mixed $bind_value string $bind_value_type	count=1
function_name	le serveur le curseur ||| immortal	count=1
function_name	fonction libère les ||| newt	count=1
function_name	taille de la police ||| font size	count=1
function_name	nouvelle instance de ||| new	count=1
arg_pair	la commande command ||| array $output	count=1
function_name	surveiller ||| set module	count=2
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=239
namespace	hormis le fait ||| function	count=2
function_name	retourne la version ||| get version	count=7
function	[function_name_1] première occurrence ||| [arg_pair_2] [function_name_1]	count=2
return	caractères lors de la ||| int	count=1
arg_pair	address à l'interface ||| string $address	count=1
function_name	fonction rewinddir() seul le ||| rewind	count=1
namespace	sous ||| solrparams	count=1
namespace	ou pour appeler ||| function	count=1
arg_pair	un index d'une ||| resource $image int $index	count=1
function_name	liste les champs ||| list fields	count=1
arg_pair	la cible spécifiée ||| resource $context string $target	count=1
function_name	résultats récupéré ||| use result	count=2
function_name	un [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name_1] enfant ||| [function_name_1] [function_name_2]	count=1
function_name	est supportée ||| is	count=1
arg_pair	un tag ||| string $filename array $tag	count=1
return	le moteur ||| yaf_view_interface	count=1
arg_pair	un ||| array $attributes	count=2
arg_pair	sur l'algorithme spécifié ||| string $algorithm string $lib_dir	count=1
namespace	imagickpixel sous la forme ||| imagickpixel	count=1
return	en utilisant le gestionnaire ||| bool	count=1
function_name	temporaire tous ||| mailparse uudecode all	count=1
function_name	lit les ticks-par-seconde ||| ticks per second	count=1
function_name	utilisateur au lieu d'être ||| user defined	count=1
function_name	table de traduction des ||| html translation table	count=1
namespace	le code du jeu ||| gmagickdraw	count=1
function_name	pour tracer ||| debug	count=1
function_name	maître à l'esclave ||| mysqlnd ms query	count=1
arg_pair	valeur de la propriété ||| string $property_name	count=1
function_name	colonne oracle ||| oci field	count=2
namespace	fait qu'elle ignore ||| function	count=1
function_name	considère ||| array	count=1
function_name	un verrou sur ||| dbplus	count=1
return	par objet lorsque l'objet ||| void	count=1
function_name	base ||| construct	count=1
return	et ||| mixed	count=3
function_name	les bits ||| connection	count=1
function_name	verrou de lecture sur ||| cubrid lock read	count=1
function_name	exception ||| exception	count=3
function_name	une simple ligne ||| textline	count=1
function_name	[function_name_1] [function_name_2] représentée ||| function resource [function_name_2] [function_name_1]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] hidden [arg_pair_2]	count=7
return	secondes ||| void	count=1
function_name	valeur de la ||| set	count=1
arg_pair	le domaine ||| string $domain string $msgid1	count=1
function_name	strpos() en tenant ||| strrpos	count=1
function_name	définit une [function_name_2] ||| [function_name_1] cache [function_name_2]	count=3
function_name	physique ||| pdi	count=1
function_name	plus récente de la ||| last	count=1
function_name	connexion à un ||| connect	count=3
function_name	est la clé ||| key	count=1
function_name	sur ||| zip entry compressionmethod	count=2
return	réalisation de la tâche ||| int	count=2
function_name	le nombre de ||| count	count=2
function_name	la profondeur ||| depth	count=5
function_name	indexé numériquement contenant la ||| row	count=1
arg_pair	offset et ||| int $offset	count=1
function_name	possibilité de lecture depuis ||| oci cancel	count=1
arg_pair	de la sequence donnée ||| string $sequence	count=1
function_name	les ticks-par-seconde de l'image ||| get image ticks per second	count=1
arg_pair	x509cert et retourne ||| mixed $x509cert bool $shortnames	count=1
arg_pair	sur le nombre ||| int $length string $encoding	count=1
namespace	retourne false pour la ||| recursivetreeiterator	count=1
function_name	statut ||| do status	count=1
return	valeurs en provenance d'ingres ||| bool	count=1
arg_pair	une ||| resource $image array $matrix	count=1
function_name	la durée du ||| set include	count=1
arg_pair	une valeur entre ||| resource $p int $value	count=1
function_name	caractères blancs de ||| rtrim	count=1
function_name	le [function_name] ||| [function_name] get normalized query	count=2
arg_pair	matches dans l'ordre spécifié ||| array $matches	count=1
function_name	du blob ||| ibase blob	count=1
arg_pair	gestionnaire font ||| int $font	count=1
return	lors de la ||| void	count=2
function_name	implosé par ||| implode	count=1
function_name	[function_name_1] objet blob ||| [function_name_2] [function_name_1]	count=1
function_name	compare une ||| compare image	count=1
function_name	libxml ||| libxml set	count=1
namespace	gestionnaire d'exceptions par défaut ||| function	count=1
arg_pair	boîte aux lettres ||| string $mailbox	count=2
function_name	à l'échelle les entrées ||| fann scale	count=1
function_name	où les ||| set	count=1
function_name	de jokers ||| tokens	count=1
function_name	cette fonction peut ||| set	count=1
function_name	dans un ||| string	count=1
function_name	la définition de la ||| meta data	count=1
function_name	le phar quand ||| map phar	count=1
arg_pair	définit un nouveau ||| resource $handle	count=1
arg_pair	au flux stream ||| resource $stream	count=2
arg_pair	la fonction socket_create() ||| resource $socket	count=1
return	un algorithme de tri ||| void	count=1
function_name	dictionnaire à ||| enchant broker set	count=1
arg_pair	fichiers dans l'argument result ||| mixed $fd int $pri	count=1
function_name	liste de ||| list	count=2
arg_pair	doit apparaître après un ||| string $field_override	count=1
function_name	de caractères ||| db2	count=1
arg_pair	path avec ||| string $path	count=1
return	est nécessaire pour le ||| string	count=1
function_name	localise une ||| locate	count=1
function_name	get_defined_vars() ||| defined vars	count=1
namespace	fois) ||| recursivetreeiterator	count=1
namespace	d'objets dans le stockage ||| splobjectstorage	count=1
function_name	de l'ajout ||| method	count=1
function_name	sortir ||| exit	count=1
function_name	contenu courant du tampon ||| ob	count=1
function_name	à la ||| element by	count=1
function_name	ligne d'une requête ||| fetch	count=2
function_name	file d'attente de connexions ||| connection	count=1
function_name	récupère l'espace de noms ||| get namespace name	count=2
namespace	requête préparée ||| sqlite3stmt	count=1
arg_pair	la première occurrence de ||| string $haystack mixed $needle	count=1
arg_pair	le ||| resource $ftp_stream	count=1
function_name	termes la profondeur de ||| depth	count=1
function_name	file_get_contents() ||| contents	count=1
function_name	rfc2045 section 6.8) ||| imap binary	count=1
function_name	fonction ||| module	count=1
arg_pair	utiliser pendant l'entrainement ||| resource $ann collable $callback	count=1
function_name	comme ||| array	count=1
return	4 en coordonnées relatives ||| bool	count=1
function_name	la gestion des colonnes ||| odbc binmode	count=1
return	à ||| mongodb	count=1
function_name	nouveau filtre ||| filter range	count=1
function_name	lignes de ||| dbplus	count=1
function_name	un traitement ||| images	count=1
arg_pair	[arg_pair_1] src_y ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	résolution de ||| getimageresolution	count=1
return	retourne tous les paramètres ||| string	count=1
function_name	pour diriger ||| set multi by	count=1
arg_pair	paramètres : left top ||| float $top	count=1
function_name	la longueur [function_name_2] ||| [function_name_2] [function_name_1] resource	count=1
function_name	fonction ||| error handler	count=1
function_name	génère une nouvelle ||| csr new	count=1
function	ligne de [arg_pair_2] ||| [function_name_1] object [arg_pair_2]	count=1
function_name	le nombre de champs ||| mysqli num fields	count=1
namespace	directoryiterator ||| directoryiterator	count=2
function_name	lit le dernier ||| mssql get last	count=2
arg_pair	par défaut pour ||| mysqlnd_connection $connection	count=1
function_name	début ||| prepend	count=1
function	la [arg_pair_2] ||| [function_name_1] strpos [arg_pair_2]	count=1
return	l'image depuis ||| string	count=1
arg_pair	data avec ||| resource $connection string $data	count=1
function_name	lit le contenu courant ||| ob	count=1
return	un certain ||| mongocursor	count=1
function_name	calcule le cosinus hyperbolique ||| cosh	count=1
arg_pair	variables ||| array $array	count=1
function_name	courant ||| ob get	count=1
function_name	une exception ||| exception	count=2
function_name	défini l'époque ||| fann set cascade	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string [arg_pair_2]	count=1
arg_pair	fichier filename et retourne ||| string $filename	count=1
function_name	donné ||| id	count=1
function_name	au champ ||| field	count=1
arg_pair	récupérera ||| int $tagnum	count=1
arg_pair	à définir la valeur ||| mixed $value int $timeout	count=1
function_name	par l'identifiant ||| crack	count=1
arg_pair	par la clé key ||| string $key	count=1
function_name	un nouvel attribut ||| attribute	count=1
function_name	file de ||| msg remove queue	count=1
function_name	[function_name_1] l'extension ||| [function_name_1] [function_name_2]	count=2
function_name	est ||| eregi	count=1
return	ou en crée une ||| bool	count=1
arg_pair	données ||| resource $data	count=1
function_name	des [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	le sinus hyperbolique pour ||| sinh	count=1
return	fichier dans le système ||| int	count=1
function_name	jste ||| is jste	count=1
arg_pair	paramètre filename sous la ||| string $mode	count=1
function_name	de différence ||| diff	count=2
function_name	la variable character_set ||| client encoding	count=1
function_name	de ||| compressionmethod	count=1
function_name	de données postgresql ||| pg	count=3
function_name	fréquence minimale du ||| cache min default frequency	count=1
arg_pair	le fichier old_file ||| string $old_file	count=1
function_name	maximal de ||| mlt max	count=2
arg_pair	ré-initialise une session existante ||| string $name	count=1
namespace	var ||| function	count=1
function_name	point de contrôle avec ||| gupnp control point new	count=1
function_name	la description du cipher ||| cipher info	count=1
return	verticale [return] créant la ||| [return]	count=1
function_name	le ||| slide show	count=1
function_name	éteint la temporisation ||| ob end	count=1
namespace	dossier de [namespace] ||| [namespace]	count=1
function_name	crée un ||| posix mknod	count=1
namespace	si la liste ||| spldoublylinkedlist	count=1
function_name	test sur un jeu ||| test	count=1
function_name	toutes les lignes de ||| dbplus rzap	count=1
return	et retourne le oid ||| string	count=1
function	[function_name_1] structure ||| [arg_pair_2] [function_name_1]	count=1
return	un jeu de résultats ||| resource	count=1
return	lit ||| resource	count=1
arg_pair	méthode yar_concurrent_client::loop() ||| array $parameters callable $callback	count=1
function_name	var .. ||| push	count=1
arg_pair	par address à ||| resource $socket string $address	count=1
function_name	définit la [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	de grande taille ||| lo export	count=1
function_name	[function_name_1] socket socket ||| [function_name_2] [function_name_1]	count=2
arg_pair	du tableau rows dans ||| array $rows	count=1
arg_pair	espace ||| string $namespaceuri	count=1
function_name	est utilisée pour ||| set resource	count=1
arg_pair	plusieurs options ||| array $options	count=1
function_name	des données depuis ||| data	count=1
return	les variables var ||| int	count=1
function_name	du dernier accès au ||| atime	count=1
namespace	de ||| solrparams	count=2
function_name	prend plus ||| set max	count=1
arg_pair	avec un espace de ||| string $namespaceuri	count=1
function_name	l'identifiant de connexion spécifié ||| mysql create	count=1
namespace	de caractères d'instance xml ||| sdo_das_xml	count=1
function_name	de transactions xa ||| xa gc	count=1
namespace	parcourt un lot d'objets ||| mongocommandcursor	count=1
arg_pair	la fonction mktime() ||| int $second	count=1
function_name	définit l'apparence de la ||| set	count=4
return	temporaire tous ||| array	count=1
return	[return] slash ||| [return]	count=3
arg_pair	sont un voisin immédiat ||| mixed $bordercolor int $x	count=1
return	classification ou une ||| bool	count=1
namespace	socket ||| zmqsocket	count=2
return	casse des caractères lors ||| int	count=1
function_name	[function_name_1] jokers ||| [function_name_1] [function_name_2]	count=1
function_name	meilleur encodage pour ||| mailparse determine best xfer encoding	count=1
function_name	chaîne de ||| set	count=1
function_name	d'activation pour la ||| set activation	count=1
function_name	einer mime ||| mime encode	count=1
function_name	cette méthode est ||| get	count=1
arg_pair	dans l'argument result de ||| string $path int $pri	count=1
function_name	solrquery::terms_sort_count les ||| sort	count=1
function_name	seconde contient le contenu ||| construct	count=1
function_name	retourne un [function_name] ||| [function_name] primary	count=2
function	d'octets [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	fichier paradox en un ||| px	count=1
namespace	la méthode de ||| function	count=1
arg_pair	flux de texte ||| resource $pdfdoc string $text	count=1
function_name	être utilisée pour envoyer ||| set by	count=1
arg_pair	place dans un pseudo ||| int $fetch_flag	count=1
function_name	ou la position courante ||| tell	count=1
arg_pair	deux collections : la ||| mongodb $db string $prefix	count=1
function_name	d'activation pour la ||| set activation function	count=1
function_name	de grande taille ||| lo	count=1
function_name	donné ||| get element by	count=1
arg_pair	correspondant ||| resource $result	count=1
function_name	le symbole de jacobi ||| jacobi	count=1
function	crée [arg_pair_2] ||| [function_name_1] outline [arg_pair_2]	count=1
arg_pair	fait que les paramètres ||| int $month	count=1
function_name	utilisé pour tracer la ||| maxdb debug	count=1
return	données y compris si ||| bool	count=1
function_name	la racine carrée ||| trader sqrt	count=1
function_name	et ||| handle	count=1
namespace	bootstrap dans ||| yaf_application	count=1
function_name	les noms des méthodes ||| methods	count=1
function_name	pour coloriser les ||| set highlight highlight multi	count=1
function_name	l'endroit où les ||| set error log	count=1
function_name	effectue un test ||| module self test	count=1
function	[function_name_1] de fichiers ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	diverses options ||| string $optlist	count=1
function_name	de ||| max poll time	count=2
function_name	un ||| getlock	count=1
arg_pair	fond ||| mixed $background string $format	count=1
function_name	[function_name_1] xmlrpc base64 ||| [function_name_2] set [function_name_1]	count=1
namespace	différences ||| xmldiff\file	count=1
function_name	dn dn ||| ldap explode dn	count=1
function_name	gestionnaire d'événements pour les ||| set event handler	count=1
return	messagerie ||| bool	count=1
function_name	contrainte posée par dbplus_find() ||| dbplus unselect	count=1
return	le dictionnaire représenté ||| bool	count=1
function_name	définit ||| px set	count=2
function_name	récupère l'objet ||| get	count=1
function_name	place des antislashs devant ||| db2 escape string	count=1
function_name	calcule l'entier le plus ||| floor	count=1
namespace	les classes ||| xmldiff\base	count=1
function_name	dans les regroupements distincts ||| set group distinct	count=1
function_name	remplace les textes ||| mb ereg replace callback	count=1
function_name	si elle ||| set max poll time	count=1
function_name	[function_name_1] [function_name_2] et s'identifie ||| [function_name_2] [function_name_1]	count=6
arg_pair	sur l'algorithme ||| string $algorithm string $lib_dir	count=1
function_name	équivalent à memcached::append() ||| append by key	count=1
arg_pair	domdocument et produit un ||| domdocument $to	count=1
function_name	à la ||| mysql field type	count=1
function_name	les composants qui avaient ||| form	count=1
function_name	teinte d'une image ||| modulate image	count=2
function_name	via ||| got	count=1
function_name	qualité ||| quality	count=2
function_name	toutes les ||| add buffer	count=1
arg_pair	fonction socket_create() ||| resource $socket string $address	count=1
function_name	la méthode d'interpolation ||| interpolate method	count=2
function_name	est similaire ||| fbsql field type	count=1
function	[function_name_1] d'une base ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	requête query à la ||| string $query resource $link_identifier	count=1
function_name	d'un champ numéro ||| mssql field	count=1
function_name	la taille [function_name_2] ||| [function_name_2] [function_name_1]	count=37
function_name	identifiant unique pour ||| hash	count=1
function_name	tri les ||| sort	count=1
function_name	définit le terme ||| bound	count=1
function_name	[function_name_1] minimale candidate ||| [function_name_1] [function_name_2]	count=1
function_name	fichier exe ou ||| write exe	count=1
function_name	la date de modification ||| ctime	count=1
namespace	exécute une tâche et ||| gearmanclient	count=1
return	été ajoutés à la ||| void	count=1
return	et si elle ||| bool	count=1
function_name	9 miniatures ||| preview	count=1
function_name	cette fonction ||| newt form destroy	count=1
arg_pair	une clé ||| string $owner	count=1
namespace	bootstrap ||| yaf_application	count=1
return	position dans la liste ||| int	count=1
function_name	et effectue alors ||| idiv	count=1
function_name	serveur frontbase ||| fbsql	count=1
arg_pair	fournir ||| string $contents	count=1
return	iidentique à la ||| void	count=1
function_name	informations du dernier tableau ||| pdf info table	count=1
function_name	forme ||| to string	count=2
namespace	hash et retourne des ||| quickhashinthash	count=1
function_name	être utilisé pour ||| maxdb debug	count=1
namespace	le serveur ||| mongocursor	count=1
function_name	un élément avec ||| id	count=1
function_name	jusqu'au point de départ ||| close path	count=1
arg_pair	la commande ||| string $command	count=1
function_name	limite inférieure dans ||| terms include lower bound	count=1
function_name	de caractères uri ||| uri	count=1
function_name	[function_name] nsapi qui ||| nsapi [function_name]	count=1
namespace	l'écriture de ||| splfileobject	count=1
arg_pair	str dans le ||| string $str int $length	count=1
function_name	configure le contexte ||| context	count=1
function_name	d'erreurs libxml standard ||| libxml	count=1
function_name	donnée ||| gzcompress	count=1
function_name	retourne la chromacité de ||| get	count=1
function_name	retourne ||| get named item ns	count=2
function_name	fourni et extrait ||| mailparse uudecode	count=1
function	socket [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	depuis la ||| string $filename	count=1
arg_pair	fonction cubrid_bind() ||| string $bind_value_type	count=1
return	les entrées ||| array	count=1
function_name	tant que gestionnaire ||| handler	count=1
function_name	assombrissant les bords ||| raise	count=1
arg_pair	récupère les ||| resource $pdfdoc	count=1
arg_pair	index d'une ||| resource $image int $index	count=1
function_name	flux à utiliser ||| stream wrapper register	count=1
function_name	qualité d'une image ||| image	count=1
function_name	la version ||| version	count=10
function_name	exporte [function_name_2] ||| imagick array [function_name_1] [function_name_2]	count=1
function_name	appliqué ||| preview images	count=2
function_name	l'endroit où les ||| fann set error	count=1
arg_pair	le type d'éléments ||| string $elementset	count=1
function_name	fichiers encodés qui s'y ||| mailparse uudecode	count=1
function_name	fonctions d'activation candidate ||| activation functions	count=2
function_name	nouvelle connexion au serveur ||| new connect	count=1
function_name	marqueur oracle ||| oci bind array by name	count=1
arg_pair	format ascii pem ||| string $passphrase array $configargs	count=1
function_name	attribut dans un ||| update	count=1
function_name	le type [function_name_2] ||| [function_name_2] [function_name_1]	count=26
return	identifiant donné ||| domelement	count=1
function_name	une requête soap appelle ||| handle	count=1
function_name	récupère la ||| get	count=45
function_name	connexion à une base ||| connect	count=1
function_name	qui décide ||| qc	count=1
function_name	puis l'efface ||| get clean	count=1
function_name	caractères passée en argument ||| string	count=1
function_name	pas ||| set metadata	count=2
function_name	retourne le statut ||| get state	count=1
function_name	le jeu [function_name] ||| [function_name]	count=2
function_name	d'instance ||| load string	count=2
function_name	de résultats ||| rows	count=1
arg_pair	appels distants ||| callable $callback	count=1
arg_pair	en une ||| string $error	count=1
function_name	dans [function_name] utilisateur ||| [function_name] ucache	count=1
function_name	numéro de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	timestampnoncehandler [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] les paires ||| [arg_pair_2] [function_name_1]	count=3
namespace	périphérique ||| zmqdevice	count=1
return	de caractères d'instance xml ||| sdo_das_xml_document	count=1
namespace	récupère ||| gmagick	count=4
namespace	par leur équivalent ||| function	count=1
arg_pair	à une valeur fournie ||| int $color float $value	count=1
function_name	fonctions ||| functions	count=2
namespace	et de fin de ||| function	count=3
function_name	extrait ||| uudecode	count=1
arg_pair	jeu de résultats ||| string $classname	count=1
function_name	ajoutés à ||| form	count=1
function_name	et ||| batch	count=1
function_name	toutes les entrées ||| yp cat	count=1
function_name	création du blob ||| blob cancel	count=1
function_name	valeur value du haut ||| dequeue	count=1
arg_pair	défini le tableau des ||| array $cascade_activation_functions	count=1
function_name	s'interrompt si elle ||| eio set max poll	count=1
namespace	fois ||| collectable	count=1
return	variables var ||| int	count=1
function_name	toutes les classes ||| construct	count=1
arg_pair	chemin path à une ||| int $offset	count=1
namespace	arbre ||| sdo_das_xml	count=1
function_name	sommaire ||| fetch overview	count=2
function_name	[function_name_1] noms selon ||| [function_name_2] [function_name_1]	count=2
arg_pair	sur le document ||| string $src	count=1
return	fournies en ||| bool	count=1
arg_pair	les ||| int $month	count=1
function_name	table courante dans le ||| fbsql table	count=1
function_name	[function_name_1] une région ||| [function_name_2] [function_name_1]	count=2
function_name	différences et sur le ||| merge	count=1
arg_pair	gestionnaire multiple s'il ||| resource $mh	count=1
function_name	tailles ||| get supported key sizes	count=1
function_name	[function_name_1] xmlrpc base64 ||| [function_name_2] [function_name_1]	count=3
function_name	requête soap ||| handle	count=1
return	include_path ||| string	count=1
return	fichier fourni et extrait ||| array	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] string $out [arg_pair_2]	count=5
namespace	flux ||| gmagick	count=1
function_name	partir d'une chaîne ||| load string	count=1
namespace	cette fonction libère ||| function	count=1
function_name	pattern ||| pattern	count=1
function_name	fichiers distant en suivant ||| ssh2 sftp	count=1
function_name	similaire à la fonction ||| fbsql field	count=1
function_name	et libère toutes ||| free	count=1
arg_pair	le gestionnaire de queues ||| string $qmanagername	count=1
function_name	vérification des index compare ||| array udiff assoc	count=1
arg_pair	l'expression xpath expression et ||| domnode $contextnode	count=1
function_name	utilisé pour changer les ||| set tag	count=1
arg_pair	les paramètres passés ||| int $hour int $minute	count=1
arg_pair	image depuis un fichier ||| array $options	count=1
arg_pair	variable_name ||| string $variable_name	count=1
namespace	splfileinfo ||| splfileinfo	count=2
function_name	image de ||| image	count=1
function_name	une [function_name] ||| msql [function_name]	count=3
arg_pair	échappe ||| string $escape_string	count=1
function_name	schéma depuis la ||| schema	count=1
function_name	associatif en utilisant les ||| fetch assoc	count=1
function	les composants [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	champs ||| dbase numfields	count=2
namespace	sein d'une ||| pharfileinfo	count=1
arg_pair	chemin est dirname ||| string $dirname resource $context	count=1
function_name	document selon le ||| validate source	count=1
function_name	lignes autour des liens ||| border dash	count=1
function_name	caractères ||| load	count=1
namespace	tous les verrous qui ||| function	count=1
function_name	retourne l'uri de la ||| get uri	count=1
arg_pair	éléments du tableau rows ||| array $rows	count=1
arg_pair	crée ||| string $pathname	count=1
function_name	inutile la méthode phar::startbuffering() ||| start buffering	count=1
arg_pair	fichier remote_file depuis le ||| string $remote_file int $mode	count=2
function_name	de needle ||| strstr	count=1
function_name	caractères courant et remplace ||| iconv	count=1
function_name	pour ||| set module	count=2
namespace	dans un fichier temporaire ||| function	count=1
function_name	cubrid_error_msg() est utilisée ||| msg	count=1
function_name	ou une chaîne ||| string	count=1
function_name	après l'appel de newt_suspend() ||| newt resume	count=1
function_name	retourne le numéro de ||| pdf get	count=1
function_name	après un certain ||| immortal	count=1
namespace	soapfault ||| soapfault	count=1
function_name	tant que ||| event	count=1
arg_pair	texte text [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	excepté le ||| int $year	count=2
function_name	une trace [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	paramètre ||| bool	count=1
arg_pair	métadonnées et ||| string $prefix	count=1
arg_pair	héberge ||| resource $queue array $data	count=1
function	de rappel [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	avec la méthode eventbuffer::lock() ||| unlock	count=1
function_name	mu ||| mu	count=1
function_name	require ou require_once ||| included files	count=1
function_name	[function_name_1] cipher ||| [function_name_2] [function_name_1]	count=3
function_name	geoip_country_code3_by_name() ||| country code3 by	count=1
arg_pair	à la fonction ||| resource $result	count=2
function_name	caractères passée ||| string	count=1
function_name	est utilisée pour ||| set	count=2
return	position dans ||| int	count=1
function_name	[function_name_1] contrôle de ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] associé avec ||| [function_name_1] error [function_name_2]	count=3
function_name	avec ||| radius add server	count=1
function_name	rappel à ||| callback	count=2
namespace	avec les processus ||| function	count=1
arg_pair	une ||| string $name string $default	count=2
function_name	remplissage ||| filling	count=1
function_name	un ||| iterator	count=1
return	en l'augmentant ||| bool	count=1
arg_pair	d'un itérateur dans un ||| traversable $iterator	count=1
arg_pair	une requête aql ||| string $dbpath	count=1
function_name	départ de ||| start line	count=1
function_name	mémoire maximale en octets ||| peak usage	count=1
function_name	l'échelle d'une ||| scale	count=1
namespace	écoulés ||| hrtime\performancecounter	count=1
arg_pair	ignore ||| string $pattern string $string	count=1
return	à cette méthode est ||| mixed	count=1
function_name	stagnation candidates ||| candidate stagnation epochs	count=2
arg_pair	de rappel callback ||| callable $callback mixed $parameter	count=1
function_name	du point vert ||| set image green	count=1
arg_pair	calendrier julien en ||| int $juliandaycount bool $hebrew	count=1
return	caractères contenant le numéro ||| string	count=1
function_name	colonnes ||| fields	count=1
arg_pair	une chaîne ||| string $value	count=1
function_name	essaie ||| drop db	count=1
function_name	que les ||| eio	count=1
arg_pair	le coefficient slant ||| float $slant	count=1
function_name	sélectionne une base ||| db	count=1
function_name	statistiques sont actives ||| stats	count=1
function_name	analyseur ||| arg parser	count=2
namespace	fichiers ou ||| function	count=1
function_name	des ||| newt form destroy	count=2
namespace	caractères de ||| serializable	count=1
function_name	type strpos() en ||| mb strrpos	count=1
function_name	[function_name_1] interbase ||| [function_name_2] [function_name_1]	count=2
function_name	position du neurone ||| neuron	count=2
arg_pair	crée un ||| int $major	count=1
function_name	document pdi ||| pdf get pdi parameter	count=1
function_name	[function_name] les ||| [function_name]	count=3
function_name	élément avec un ||| id	count=1
return	seconde contient le contenu ||| mongodb	count=1
function_name	correspondantes dans le ||| into struct	count=1
function_name	jeu ||| db2 procedure columns	count=2
arg_pair	contenant l'argument number ||| int $frombase	count=1
function_name	sélectionne une ||| db query	count=1
arg_pair	dans un ||| resource $connection	count=1
function_name	la racine ||| root data object	count=1
function_name	considère array comme une ||| array push	count=1
function_name	récupère une ||| get	count=1
function	[function_name_1] name qui ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=6
function_name	retire ||| curl multi remove handle	count=2
namespace	la méthode recursivetreeiterator::valid() ||| recursivetreeiterator	count=1
function_name	maximale d'un ||| mlt max	count=1
return	le ||| eventbuffer	count=2
function_name	appelé ||| set	count=1
return	rewinddir() seul le ||| void	count=1
arg_pair	deux versions de php ||| string $version1	count=1
arg_pair	fonction cubrid_set_add() ||| string $attr_name string $set_element	count=1
arg_pair	à la fonction ||| int $day	count=1
namespace	est obsolète ||| soapclient	count=1
function_name	une page pour ||| page	count=1
function_name	du corps ||| body	count=2
namespace	comme une pile et ||| function	count=1
function_name	mise à jour ||| update	count=3
function_name	de ||| set max poll	count=1
function_name	passée en argument ||| escape string	count=1
function_name	readline de refaire l'affichage ||| readline redisplay	count=1
function_name	fourni et extrait ||| mailparse uudecode all	count=1
function_name	le ||| get by	count=1
arg_pair	la clé key existe ||| string $key mixed $value	count=1
return	d'accès un secret et ||| array	count=1
function_name	appliqué à différents ||| images	count=1
namespace	de base pour toutes ||| xmldiff\base	count=1
return	tampon ||| string	count=1
function_name	la forme en incluant ||| newt	count=1
function_name	décode ||| decode	count=1
arg_pair	un message ||| int $message_type	count=1
function_name	si elle prend ||| eio set	count=1
function_name	informations du ||| pdf info table	count=1
function_name	[function_name_1] noms ||| [function_name_1] default [function_name_2]	count=1
function_name	similaire à ||| element	count=1
function_name	déplace le curseur ||| move to	count=1
return	de contrôle sur ||| resource	count=1
function_name	utilisée pour fermer ||| lob2 close	count=1
function_name	maximal de ||| max	count=2
function_name	[function_name] pour parcourir ||| get [function_name]	count=2
function_name	[function_name_1] plusieurs canaux ||| [function_name_2] [function_name_1]	count=4
function_name	dans le fichier ||| csr export to file	count=1
arg_pair	à la fonction ||| int $year	count=2
function_name	sont sur ||| newt form	count=1
namespace	la totalité de ||| function	count=1
namespace	qu'elle ||| function	count=2
function_name	nombre de [function_name_2] ||| [function_name_1] [function_name_2]	count=7
function_name	session courante ||| session status	count=1
function_name	chaîne de caractères ||| load string	count=1
return	attribut dans un document ||| int	count=1
function_name	gris ||| pdf setgray	count=2
function_name	par objet lorsque l'objet ||| set	count=1
function_name	extrait et ||| extract	count=1
function_name	flux ||| fetch stream	count=1
function_name	[function_name_1] pages ||| [function_name_1] [function_name_2]	count=2
arg_pair	event ||| resource $event mixed $readcb	count=1
function_name	[function_name_1] les informations ||| [function_name_1] debug [function_name_2]	count=2
function_name	[function_name] nsapi ||| nsapi [function_name]	count=1
function_name	comme une ||| array push	count=1
arg_pair	plusieurs options pour une ||| resource $ch array $options	count=1
function_name	extrait dans un ||| mailparse uudecode all	count=1
namespace	demande ||| function	count=1
function_name	depuis ||| load	count=6
function_name	la dernière opération curl ||| curl errno	count=1
function_name	ajoutés à ||| newt form	count=1
return	une valeur sigma ||| float	count=1
function_name	les ||| disable	count=1
function_name	serveur d'administration et ||| kadm5 destroy	count=1
arg_pair	la ||| int $month	count=1
function_name	dessins précédentes ||| render	count=1
function_name	à la chaîne ||| escape string	count=1
return	toutes les classes de ||| string	count=1
return	tampon ou en ||| bool	count=1
arg_pair	mode ||| int $mode	count=1
arg_pair	[arg_pair_1] suppression d'un ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	dernier accès au ||| atime	count=2
function_name	définit l'image à utiliser ||| set	count=1
function_name	transformation [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	src_y ||| int $src_y	count=1
return	est ||| string	count=2
function_name	les fichiers ||| mailparse uudecode all	count=1
arg_pair	liste les colonnes et ||| resource $connection_id	count=1
function_name	envoie ||| proxy send	count=1
arg_pair	unix et windows compris ||| resource $handle int $operation	count=1
function_name	la version échappée ||| cubrid real escape string	count=1
namespace	php d'un serveur de ||| samconnection	count=1
function_name	de peinture de ||| stroking	count=1
function_name	la largeur du texte ||| text width	count=1
function_name	la chaîne ||| escape	count=1
return	casse des caractères ||| int	count=1
return	un tableau contenant tous ||| array	count=3
arg_pair	structure vide ||| int $num_input	count=1
function_name	de paramètres encodés url ||| prepared params	count=1
function_name	d'archives ||| entry compressionmethod	count=2
function_name	intialise ||| start color	count=1
arg_pair	de fichier ||| string $filename	count=1
function_name	requête ||| dbx query	count=2
function_name	de noms de champs ||| field names	count=1
function_name	archive ||| is	count=1
arg_pair	table de vérité suivante ||| mixed $left mixed $right	count=1
arg_pair	un attribut dans un ||| string $index	count=1
function_name	privée qui correspond à ||| openssl x509 check private	count=1
function_name	libère ||| base free	count=2
function_name	à utiliser ||| soap	count=1
arg_pair	au service daemon est ||| string $daemon	count=1
return	le dictionnaire ||| bool	count=1
function_name	une ||| get	count=1
function_name	calendrier français républicain en ||| frenchtojd	count=1
function_name	hormis ||| proc close	count=2
function	[function_name_1] de needle ||| [function_name_1] count [arg_pair_2]	count=1
function_name	la fonction closedir() ||| close	count=1
function_name	afficher le logo zend ||| zend logo guid	count=1
function_name	fichier spécifié est ||| is valid	count=1
namespace	d'y effectuer [namespace] ||| [namespace]	count=1
return	algorithme insensible à la ||| void	count=1
arg_pair	les ||| int $minute	count=1
function_name	connexion ||| yaz connect	count=1
function_name	[function_name_1] connue sur ||| [function_name_1] [function_name_2]	count=4
arg_pair	la première occurrence de ||| mixed $needle	count=1
function_name	la trace ||| trace	count=2
function_name	plugin de [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	collections ||| mongodb	count=1
arg_pair	listant les tables ||| string $schema string $table_name	count=1
function_name	paramètres encodés url ||| prepared params	count=1
arg_pair	message ||| resource $compcode	count=1
return	l'objet sous ||| string	count=1
function_name	racine ||| root data object	count=1
function_name	des liens ||| pdf set border dash	count=1
arg_pair	ressource de fichier ||| string $filename int $flags	count=1
function_name	d'un champ ||| field	count=1
function_name	ressource ||| fam	count=1
function_name	termine la ||| fam cancel	count=1
function_name	de passe ||| fbsql database password	count=1
function_name	qui sera appelé plus ||| handler	count=1
return	document en coordonnées horizontales ||| bool	count=1
function_name	données d'entrainement depuis ||| train from callback	count=2
function_name	sur les caractères ||| eregi	count=1
namespace	d'une extension ||| reflectionextension	count=1
function_name	remplace les données associées ||| dbase replace	count=1
function_name	retourne le nombre ||| num	count=8
function_name	composants qui sont sur ||| newt form destroy	count=1
namespace	verrous qui ||| function	count=1
return	courante ||| string	count=1
function_name	la fréquence ||| mlt min doc frequency	count=1
function_name	dernier accès et ||| eio futime	count=1
arg_pair	une date ||| string $date	count=1
arg_pair	séquence sequence ||| resource $imap_stream string $sequence	count=1
arg_pair	de la suppression d'un ||| array $deleteoptions	count=1
function_name	données dns associées à ||| dns	count=1
arg_pair	de jours du ||| int $day	count=1
function_name	parcourt un lot ||| batch size	count=1
function_name	supprime un ||| remove	count=1
function_name	retourne true si ||| mcrypt module is	count=1
function_name	temporaire ||| mailparse	count=1
namespace	informations ||| function	count=1
arg_pair	ignore la casse ||| string $pattern string $string	count=1
namespace	devant les caractères ||| function	count=1
arg_pair	affiche le prompt et ||| string $prompt callable $callback	count=1
arg_pair	par la fonction socket_create() ||| resource $socket	count=1
return	méthode ||| void	count=3
namespace	se déplace vers le ||| norewinditerator	count=1
return	dans un fichier ||| void	count=1
function_name	[function_name_1] de l'image ||| [function_name_1] [function_name_2]	count=6
function_name	identifiant donné ||| element by	count=1
function_name	[function_name] opérations ||| [function_name]	count=1
function	le nom [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	dans une boite de ||| b	count=1
function_name	gestionnaire d'erreurs libxml ||| libxml use	count=1
function_name	le nombre maximal ||| max	count=1
function_name	à ||| db2 escape string	count=2
return	à créer un ||| resource	count=1
namespace	sont sur des ||| function	count=1
function_name	à précharger par les ||| prefetch	count=1
function_name	le champ spécifié ||| field seek	count=1
function_name	de la couleur spécifiée ||| color	count=1
function_name	[function_name_1] [function_name_2] ||| mysqli [function_name_1] [function_name_2]	count=8
return	la base d'événement associée ||| void	count=1
arg_pair	un ||| resource $connection	count=2
function_name	la méthode d'entrelacement de ||| interlace scheme	count=1
function_name	preg_replace() hormis le ||| preg	count=1
function	informations concernant [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	l'appel direct à ||| string $arguments	count=1
arg_pair	en utilisant l'image image ||| resource $image	count=1
return	image contenant du ||| gmagick	count=1
function_name	le statut [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	des informations internes sur ||| internal info	count=2
arg_pair	d'un fichier dans ||| string $path	count=1
return	le script php ||| bool	count=1
arg_pair	mssql locale ou distante ||| bool $is_null	count=2
function_name	enregistre le ||| register local	count=1
arg_pair	chaine ||| int $size	count=1
function_name	de gettext() ||| ngettext	count=1
function_name	fonction libère la mémoire ||| cubrid free result	count=1
function_name	la variable [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	matrice ||| lapack	count=1
function_name	utilisé pour stocker les ||| array iterator	count=1
function_name	[function_name_1] du ||| [function_name_2] [function_name_1]	count=15
function_name	de l'image ||| shade image	count=1
namespace	toutes les ||| function	count=1
function_name	élément ||| id	count=1
function_name	la file de messages ||| queue	count=2
function_name	fonction sqlsrv_prepare() ou la ||| sqlsrv	count=1
function_name	l'identifiant de la ligne ||| id	count=1
namespace	fonction définie par l'utilisateur ||| function	count=2
function_name	méthode d'entrelacement de ||| set image interlace scheme	count=1
arg_pair	de mppe [arg_pair] clés reçues ||| [arg_pair]	count=1
function_name	informations sur ||| stat	count=1
function_name	temporisation de ||| ob end flush	count=1
function_name	liens ||| border	count=1
function_name	de ingres ||| ingres	count=1
function_name	si les ||| get	count=1
function_name	la moyenne d'un jeu ||| average	count=1
function_name	récupère l'url complète de ||| get request url	count=1
function_name	month de l'année ||| days in month	count=1
arg_pair	tous les octets nuls ||| int $length	count=1
arg_pair	caractères à l'archive tar/zip ||| string $localname	count=1
function_name	l'image spécifiée avec un ||| preview images	count=1
function	[function_name_1] la connexion ||| [arg_pair_2] [function_name_1]	count=3
function_name	et tous les ||| form destroy	count=1
function_name	avec ||| element by id	count=2
function_name	retourne la largeur ||| get	count=1
return	dans une chaîne et ||| string	count=1
arg_pair	par l' oid ||| resource $conn_identifier string $oid	count=1
function_name	false pour la première ||| end	count=1
function_name	avec une connexion ||| get	count=1
function_name	ne ||| construct	count=1
function_name	crée ||| mknod	count=1
function_name	différents ||| images	count=1
function_name	la ligne ||| fetch	count=4
function_name	courant ||| add	count=1
namespace	si ||| pharfileinfo	count=1
return	avec la ||| string	count=1
function_name	de jacobi ||| gmp jacobi	count=1
arg_pair	dict ||| resource $dict	count=1
namespace	corrélation entre ||| arrayobject	count=1
namespace	les ||| oauth	count=1
return	retourne les réponses dans ||| bool	count=1
arg_pair	haystack et retourne ||| bool $before_needle string $encoding	count=1
function_name	la possibilité de lecture ||| oci cancel	count=1
function_name	caractères passée en argument ||| db2 escape string	count=1
function_name	ferme ||| closedict	count=1
function_name	sur le dossier ||| zip entry	count=1
function_name	du serveur ||| log	count=1
namespace	régression suivant le ||| svmmodel	count=1
function_name	établit une connexion persistante ||| cubrid pconnect with url	count=1
function_name	fichier fourni et extrait ||| mailparse uudecode all	count=1
function_name	un élément ||| get element by	count=1
function_name	écrit du ||| ps show	count=1
function_name	entrées de la ||| cat	count=1
function_name	prochain résultat de la ||| next result	count=1
return	pour la ||| string	count=4
return	lignes de ||| int	count=1
return	la date de ||| int	count=2
function_name	[function_name_1] pdf ||| [function_name_2] open pdi [function_name_1]	count=2
function_name	[function_name_1] auto_increment ||| [function_name_2] [function_name_1]	count=2
arg_pair	chiffre les ||| array $env_keys	count=1
function_name	et ||| stream set timeout	count=1
function_name	l'échelle d'une [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	d'activation pour la couche ||| fann set activation function output	count=1
function	grande taille [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	d'une boîte aux lettres ||| imap	count=1
arg_pair	à l'aide de ||| mongodb $db	count=1
function_name	tampon de ||| ob	count=1
arg_pair	ann ||| array $input_vector	count=1
function_name	[function_name_1] minimale candidate ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] les arguments ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	depuis les données ||| string $data string $optlist	count=1
function_name	ressources mémoires ||| newt	count=1
return	la méthode gearmanclient::setcontext() ||| string	count=1
function_name	fonction d'activation ||| fann set activation function	count=3
function_name	lignes affectées par ||| mysqli affected rows	count=2
function_name	dbase_identifier [function_name] l'enregistrement ||| dbase [function_name] record with	count=1
arg_pair	avec une des ||| resource $psdoc string $style	count=1
arg_pair	héberge la ||| array $data	count=1
function_name	temporisation ||| ob	count=1
function	[function_name_1] source vers ||| [function_name_1] [arg_pair_2]	count=4
function_name	si elle prend plus ||| poll	count=1
arg_pair	une source de données ||| string $password	count=1
namespace	envoie une réponse en ||| soapserver	count=1
function_name	de données kerberos ||| kadm5	count=1
namespace	synchronise ||| tokyotyrant	count=1
function_name	argument ||| db2	count=1
return	retournera toujours false ||| bool	count=1
function_name	la création du blob ||| ibase blob cancel	count=1
function_name	fonction ||| callable	count=1
function_name	[function_name_1] base de ||| [function_name_2] [function_name_1]	count=2
arg_pair	fonction mktime() excepté le ||| int $year	count=2
function_name	à la fin de ||| buffer	count=1
function_name	caractères passée ||| db2 escape string	count=1
arg_pair	fusionne 3 chaînes en ||| string $old_data	count=1
arg_pair	appels distants rpc enregistrés ||| callable $callback callable $error_callback	count=1
function_name	groupe ||| filegroup	count=1
function_name	système de ||| fstatvfs	count=1
namespace	cette ||| domdocument	count=1
function_name	distincts ||| distinct	count=1
function_name	l'identifiant de session ||| id	count=1
function_name	le [function_name_2] ||| [function_name_2] [function_name_1]	count=15
return	les fonctions ||| array	count=2
function_name	[function_name_1] attribut ||| [function_name_1] [function_name_2]	count=8
function_name	facteurs d'échantillonnage de ||| set sampling factors	count=1
function_name	minimale candidate ||| min cand	count=1
arg_pair	hyperlien ||| float $lly	count=2
return	fait qu'elle ||| int	count=2
function_name	extrait dans un ||| mailparse	count=1
function_name	a été lu ||| msql	count=1
function_name	tâche ||| task	count=2
arg_pair	ou ||| int $mode	count=1
function_name	le fuseau horaire correspondant ||| geoip time zone	count=1
function_name	pays et [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name] préfixé, ||| [function_name]	count=1
namespace	le début du tampon ||| eventbuffer	count=1
function_name	calculate ||| trader exp	count=2
function_name	tous les précédents intervalles ||| elapsed	count=1
function_name	l'itérateur courant interne ||| get iterator	count=1
namespace	mktime() ||| function	count=1
return	du ||| bool	count=3
return	retourne ||| mixed	count=2
arg_pair	memcached::getdelayed() mais la ||| bool $with_cas callable $value_cb	count=1
function_name	[function_name_1] attribut de ||| [function_name_1] [function_name_2]	count=3
function_name	ligne de ||| odbc fetch	count=1
return	définir les ||| void	count=1
function_name	[function_name_1] posix ||| [function_name_2] get [function_name_1]	count=1
namespace	demandé ||| eventhttprequest	count=1
function_name	une alerte ||| warning callback	count=1
arg_pair	une ||| string $new_data2	count=1
function_name	[function_name_1] en anglais ||| [function_name_1] [function_name_2]	count=3
function_name	message d'erreur associé ||| result error	count=1
function_name	similaire à la fonction ||| get	count=1
function_name	crée un objet ||| ifx create	count=1
return	qu'elle fonctionne avec ||| int	count=1
function_name	un attribut dans un ||| update	count=1
function_name	d'attente s'interrompt ||| eio set max	count=1
return	place des antislashs ||| string	count=1
arg_pair	à la résolution ||| float $xresolution	count=1
function_name	lignes à précharger ||| prefetch	count=1
function_name	l'attribut auto_increment ||| mysqli insert id	count=2
return	le jeu de résultats ||| sqlite3result	count=1
arg_pair	buffer buf via le ||| string $buf	count=1
return	composants qui ||| void	count=2
function_name	transaction ibase sans la ||| ibase commit	count=1
function_name	qui sont sur des ||| newt	count=1
return	l'endroit où les ||| void	count=1
function_name	protéger tous les ||| mysql escape	count=1
arg_pair	pointeur interne de résultat ||| resource $result int $row_number	count=1
arg_pair	contient la ligne ||| int $row	count=1
return	police métrique adobe pour ||| string	count=1
namespace	est utile ||| mongoclient	count=1
namespace	mettre à jour ||| quickhashstringinthash	count=1
function_name	configuration de l'objet object ||| config	count=1
function_name	[function_name] associée à ||| [function_name]	count=3
function_name	la souscription à ||| unsubscribe	count=1
function_name	forme de ||| string	count=1
function_name	à ||| fbsql	count=1
arg_pair	fait qu'elle ||| string $string	count=1
arg_pair	utilisé pour contrôler le ||| string $field int $order	count=1
arg_pair	examine la ||| string $outfilename array $cainfo	count=1
function_name	wbmp de ||| imagewbmp	count=1
function_name	intercepter les méthodes ||| connection	count=1
function_name	imap vers la ||| imap	count=1
return	conservant ||| void	count=1
function_name	la ||| dbplus getlock	count=2
function_name	représentation en chaîne de ||| serialize	count=1
function_name	dns associées ||| dns get	count=1
function_name	prochain [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	pour lier ||| cubrid lob2 bind	count=1
function_name	la copie de travail ||| svn	count=1
arg_pair	de la position offset ||| resource $context int $offset	count=1
function_name	le texte ||| gnupg	count=1
arg_pair	mot word est ||| resource $dict string $word	count=1
arg_pair	au format csv ||| string $enclosure string $escape	count=1
function_name	ajoutés à la ||| newt	count=1
function_name	ignorant la casse ont ||| str ireplace	count=1
function	[function_name_1] deux versions ||| [function_name_1] [arg_pair_2]	count=1
function_name	le nom de la ||| name	count=3
function	d'occurrences de [arg_pair_2] ||| [function_name_1] count [arg_pair_2]	count=5
function_name	spécifiée ||| db2	count=1
function_name	exporte le ||| spki export	count=1
arg_pair	avec ||| resource $connection	count=2
function_name	si algorithm [function_name] algorithme par ||| [function_name] block	count=1
function	[function_name_1] une entrée ||| [function_name_1] resource $link_identifier [arg_pair_2]	count=1
function_name	la couleur spécifiée ||| color	count=1
function_name	récupère [function_name] ||| get [function_name]	count=2
arg_pair	l'objet object a la ||| mixed $object	count=1
arg_pair	le domaine courant domain ||| string $domain	count=1
function_name	une trace dans ||| trace log	count=1
function_name	consulte dans la portée ||| lookup	count=1
arg_pair	[arg_pair_1] longueur width ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	[function_name_1] définies ||| [function_name_1] [function_name_2]	count=1
arg_pair	dans le fichier filename ||| string $filename int $options	count=1
return	lors de ||| void	count=1
arg_pair	snmp2_get() est utilisée ||| string $community	count=1
function_name	prend plus ||| time	count=1
function_name	les tailles ||| mcrypt enc get supported key sizes	count=1
arg_pair	ascii pem [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] binaire et ||| [function_name_2] [function_name_1]	count=1
namespace	un [namespace] est un ||| [namespace]	count=1
function_name	minimale du document utilisée ||| facet enum cache min default	count=1
arg_pair	l'historique système ||| int $option	count=1
return	la fin de l' ||| bool	count=1
namespace	la fonction ||| function	count=3
arg_pair	une fonction définie par ||| string $name mixed $step_callback	count=1
function_name	propriétés ||| vars	count=1
function_name	analyseur ||| set arg parser	count=2
function_name	récupère [function_name_2] ||| [function_name_1] unpacked [function_name_2]	count=1
return	la forme d'un ||| int	count=2
function_name	champs colonnes de ||| numfields	count=1
function_name	du serveur postgresql ||| pg	count=1
function_name	fréquence en ||| min term frequency	count=2
arg_pair	requête sql query à ||| resource $link_identifier	count=1
namespace	fin et que la ||| mongocursorinterface	count=1
namespace	à cette ||| soapclient	count=1
function_name	la file d'attente s'interrompt ||| eio set	count=1
return	une chaîne contenant ||| string	count=3
function	une ligne [arg_pair_2] ||| [function_name_1] object resource $result [arg_pair_2]	count=1
function_name	crée et [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	dimensions de la police ||| query font metrics	count=1
function_name	la [function_name] ||| posix get [function_name]	count=1
function_name	l'espace [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	s'y ||| all	count=1
function_name	la prochaine ligne ||| next line	count=2
function_name	depuis [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	une connexion à un ||| array	count=1
function_name	hormis ||| proc	count=1
return	être utilisé pour ||| void	count=1
function_name	[function_name_1] est utilisée ||| [function_name_2] [function_name_1]	count=4
function_name	de preg_replace() ||| preg replace callback	count=1
function_name	le nombre de documents ||| count	count=2
arg_pair	prévue pour ||| string $file_extensions	count=1
function_name	conteneur de ||| set default	count=1
function_name	retourne la ||| entry compressionmethod	count=1
function_name	la prochaine ||| next result	count=1
function	paquet repéré [arg_pair_2] ||| [function_name_1] add vars [arg_pair_2]	count=1
function_name	libère toute la ||| mysql free result	count=1
function_name	du segment du ||| chunk	count=1
arg_pair	crée ||| string $pathname int $mode	count=1
function_name	données personnalisées dans ||| metadata	count=1
function_name	récupère la [function_name_2] ||| [function_name_1] current font [function_name_2]	count=3
function_name	crée une instance ||| construct	count=1
function_name	les caractères blancs de ||| rtrim	count=1
function	classe [arg_pair_2] ||| [function_name_1] alias [arg_pair_2]	count=3
namespace	méthode rrdgraph::__construct() ||| rrdgraph	count=1
function_name	statut du tampon d'affichage ||| status	count=1
arg_pair	str ||| mixed $fd string $str	count=1
function_name	de caractères d'instance ||| load string	count=1
function_name	avec un identifiant ||| get element	count=1
function_name	[function_name_1] température ||| [function_name_1] sarprop [function_name_2]	count=1
namespace	à appeler lorsqu'un ||| gearmanclient	count=1
function_name	la connexion spécifiée ||| sqlsrv	count=1
function_name	été ||| form destroy	count=2
function_name	retourne un ||| get terms return	count=1
function_name	est similaire à la ||| fbsql field	count=1
namespace	ou un lien symbolique ||| function	count=1
function_name	termine une ||| end	count=1
arg_pair	dernière modification d'un ||| int $pri	count=1
arg_pair	un nouveau mot ||| resource $handle	count=1
arg_pair	ajoute le ||| int $read_write mixed $params	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] socket [function_name_2]	count=2
namespace	un alias ||| event	count=1
return	[return] rétablissement ||| [return]	count=3
function_name	retourne le ||| dbase numfields	count=1
arg_pair	x509cert et retourne ||| bool $shortnames	count=1
arg_pair	et le ||| mixed $data	count=1
function_name	ftp et ||| ftp get	count=1
function_name	la miniature de l'image ||| exif thumbnail	count=1
arg_pair	user ||| string $user	count=1
function_name	retire un ||| remove	count=1
namespace	le [namespace] de ||| [namespace]	count=1
namespace	commencée par ||| function	count=1
arg_pair	que les paramètres ||| int $minute	count=1
function_name	[function_name_1] spécifiée ||| [function_name_2] [function_name_1]	count=9
namespace	en retour ||| soapserver	count=1
function	[function_name_1] utiles ||| [arg_pair_2] [function_name_1]	count=2
function_name	boucle libeio ||| event	count=1
function_name	si ||| set max poll	count=1
function_name	lit la prochaine ||| next	count=1
namespace	avaient été ||| function	count=1
arg_pair	document xml depuis la ||| string $filename	count=1
function_name	protège un identifiant ||| pg escape	count=1
function_name	l'itérateur interne courant ||| inner iterator	count=1
function_name	ajoute ||| enchant dict add	count=1
function_name	[function_name_1] décompressée ||| [function_name_2] [function_name_1]	count=2
function_name	de sortie ||| set cascade output	count=1
function_name	[function_name_1] le noeud ||| [function_name_1] attribute [function_name_2]	count=1
function_name	d'archives spécifié par ||| zip entry compressionmethod	count=1
function_name	preg_replace() hormis le ||| preg replace	count=1
return	tar ou ||| phardata	count=1
function_name	connecte le dernier ||| ps closepath	count=1
function_name	le dessin des lignes ||| imagesetbrush	count=1
function_name	d'encadrement maximale [function_name] chaque ||| compare [function_name]	count=1
namespace	la position courante ||| harupage	count=3
function_name	ingres_query() ||| ingres	count=2
return	si vous ||| bool	count=1
function_name	mot de passe de ||| fbsql database password	count=1
function_name	grande taille dans la ||| pg lo	count=1
arg_pair	proches dans un seul ||| string $field_override	count=1
function_name	l'extension pour la constante ||| extension	count=1
function_name	fonction d'activation pour la ||| activation	count=1
namespace	de ||| mongoclient	count=1
arg_pair	identique à ||| int $second	count=1
namespace	l'itérateur ||| spldoublylinkedlist	count=1
function_name	classes spl actuellement disponibles ||| spl classes	count=1
function_name	l'itérateur interne passé via ||| get inner iterator	count=1
function_name	avaient été ||| newt form destroy	count=1
function_name	autocommit de ||| db2 autocommit	count=1
function_name	caractère de l'entrée ||| char	count=1
namespace	courante pour le dessin ||| function	count=1
arg_pair	strcmp() elle n'est pas ||| string $str1 string $str2	count=1
function_name	seule la liste des ||| open	count=1
function_name	récupère la les ||| get	count=1
return	d'une image ||| gmagick	count=1
function_name	segment ||| chunk	count=1
function_name	l'échelle les données d'entrée ||| fann scale train	count=1
arg_pair	de la ||| int $type	count=1
arg_pair	utilisé avec [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	les données d'entrainement à ||| train data	count=2
function_name	les informations de version ||| rrd version	count=1
namespace	toutes ||| eventbuffer	count=1
function_name	guid binaire ||| guid	count=1
arg_pair	base de données ||| resource $link_identifier	count=2
function_name	les permissions ||| eio fchmod	count=1
arg_pair	memcache::connect() ||| int $port	count=1
arg_pair	sur celui-ci ||| resource $psdoc float $llx	count=1
function_name	alpha de l'image ||| image alpha	count=2
return	de 9 ||| bool	count=1
return	obsolète ||| mixed	count=1
namespace	traitement appliqué à ||| imagick	count=1
function_name	la signature sha-256 ||| getimagesignature	count=1
arg_pair	de la recherche ||| string $pattern string $string	count=1
arg_pair	clé /status ||| resource $fdf_document string $status	count=1
arg_pair	flou ||| float $radius float $sigma	count=1
function_name	avec les ||| proc close	count=1
function_name	contenant la représentation json ||| json encode	count=1
namespace	bibliothèque rrdtool ||| function	count=1
function_name	parent d'un objet ||| parents	count=1
function_name	réinitialise le numéro de ||| reset	count=1
namespace	certain délai sur le ||| mongocursor	count=1
namespace	verrou acquis avec ||| eventbuffer	count=1
function_name	méthode subscribe est ||| subscribe	count=1
return	dans un ||| int	count=2
function_name	analyse ||| mailparse rfc822 parse addresses	count=2
function_name	effectue ||| handle	count=1
function_name	d'échelle de sortie pour ||| fann set output	count=1
function_name	re-initialise l'événement de ||| re init	count=1
namespace	point courant vers ||| harupage	count=1
arg_pair	ou associatif query_data ||| string $numeric_prefix	count=1
namespace	informations de ||| function	count=1
function_name	rfc2822 ||| adrlist	count=1
function_name	peut être ||| maxdb debug	count=1
function_name	d'alerte [function_name] générés ||| [function_name]	count=1
function_name	[function_name_1] de police ||| [function_name_1] [function_name_2]	count=1
function_name	mise en évidence ||| highlight	count=3
arg_pair	cache une ||| string $key mixed $var	count=1
arg_pair	l'image image ||| resource $image	count=1
arg_pair	une colonne données dans ||| mixed $param	count=1
namespace	demande à libevent ||| eventconfig	count=1
function_name	les connexions ||| connection array	count=2
function	document xml [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	fichier est lisible ||| is readable	count=2
function_name	et tous les composants ||| form destroy	count=1
arg_pair	l'aide de deux collections ||| mongodb $db string $prefix	count=1
function_name	requête ||| query field	count=1
function_name	oracle ||| oci internal	count=1
arg_pair	contenu des fichiers ||| mongodb $db	count=1
function_name	transactions ||| commit	count=1
function_name	retourne la définition de ||| meta data	count=1
arg_pair	le fichier local local_file ||| resource $ftp_stream string $local_file	count=1
return	le serveur ||| string	count=1
function_name	du résultat ingres ||| ingres	count=1
function_name	retourne la représentation ||| serialize	count=1
function_name	ajoute un point de ||| add	count=1
arg_pair	buf via ||| string $buf	count=1
function_name	les données du ||| mailparse	count=1
function_name	eventbuffer courant ||| add buffer	count=1
function_name	laquelle la dernière tentative ||| db2 conn error	count=1
arg_pair	vers un ||| float $ury string $filename	count=1
function_name	la fonction ||| element	count=1
function_name	retourne la valeur de ||| get	count=3
function_name	police de caractère ||| setfont	count=1
function_name	la prochaine image dans ||| next image	count=1
namespace	cette fonction ||| mongolog	count=1
function_name	précharger par les bibliothèques ||| prefetch	count=1
function_name	d'instance ||| load	count=1
namespace	métadonnées et ||| mongogridfs	count=1
function_name	maximale du corps de ||| max body	count=1
return	détruire un bloc de ||| bool	count=1
function_name	entre 0.0 et ||| hsl	count=1
return	l'écriture ||| bool	count=1
arg_pair	équivalent à memcached::getdelayed() mais ||| bool $with_cas callable $value_cb	count=1
arg_pair	dossier directory ||| resource $ftp_stream string $directory	count=1
namespace	paramètres non encodés url ||| solrparams	count=1
arg_pair	la ressource de la ||| int $type	count=1
arg_pair	lecture ||| resource $id string $schema	count=1
function_name	lit l'orientation de l'image ||| image orientation	count=1
arg_pair	le ||| int $first_num string $prefix	count=1
function_name	d'activation pour ||| activation function output	count=1
function_name	transfert [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	du socket ||| socket	count=1
function_name	retourne tous les ||| to string	count=1
arg_pair	un ||| int $major	count=1
function_name	du tampon ||| buffer	count=1
function_name	dimensions contenant ||| geometry	count=1
function_name	ajoute ||| add query	count=2
function	basé sur [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	un mot existe ou ||| resource $dict string $word	count=1
arg_pair	lors ||| array $server array $info	count=1
function_name	version du serveur ||| server info	count=2
arg_pair	mssql locale ou distante ||| int $maxlen	count=1
namespace	la file d'attente ||| splpriorityqueue	count=1
function_name	sous la ||| string	count=1
namespace	recherche ||| function	count=1
namespace	phar ||| pharfileinfo	count=2
namespace	d'une collection oracle ||| oci-collection	count=1
arg_pair	fonctionnellement équivalente à memcached::set() ||| int $expiration	count=1
function_name	profilage ||| profiling level	count=1
arg_pair	fils soit terminé, ||| int $status int $options	count=1
namespace	après un certain délai ||| mongocursor	count=1
function_name	données blob/clob depuis la ||| cubrid lob export	count=1
function_name	d'attente s'interrompt si elle ||| eio set max	count=1
function_name	le plugin [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	d'entrer ou de continuer ||| loop	count=1
arg_pair	appeler à chaque ||| mixed $callback	count=1
function_name	termine la définition ||| pdf end	count=1
namespace	se déplace sur le ||| splpriorityqueue	count=1
function_name	lisible pour ||| string	count=1
return	[return] magasin ||| [return]	count=1
function_name	le flux [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	fopen() [arg_pair] file_get_contents() ||| [arg_pair]	count=1
return	traitement appliqué ||| bool	count=1
namespace	vérifie la [namespace] ||| [namespace]	count=1
return	temporaire tous les fichiers ||| array	count=1
function_name	laquelle la dernière ||| error	count=1
arg_pair	tente une identification ||| string $username	count=1
function_name	d'une classe existante ||| class	count=1
function_name	en unicode ||| get unicode	count=1
function_name	fonction ingres_query() dans ||| ingres fetch	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] max [function_name_2]	count=2
namespace	que ||| pharfileinfo	count=2
arg_pair	commande command ||| string $command array $output	count=1
function	marqueur oracle [arg_pair_2] ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=4
function_name	elle prend ||| max poll	count=1
namespace	par morceaux ||| function	count=1
function_name	des antislashs devant les ||| escape	count=1
function	[function_name_1] lui associe ||| [function_name_1] [arg_pair_2]	count=1
namespace	données ||| eventbuffer	count=1
function_name	blocs ou ||| block	count=1
function_name	temporaire tous les fichiers ||| mailparse uudecode all	count=1
function_name	mesurée en octets ||| fseek	count=1
function	[function_name_1] original définie ||| [function_name_1] [arg_pair_2]	count=4
namespace	4 mb par documents ||| mongocursor	count=1
function_name	fichiers encodés qui s'y ||| uudecode	count=1
return	si la file ||| bool	count=1
namespace	définie ||| gearmanclient	count=1
function_name	version échappée de ||| cubrid real escape string	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] open resource $link_identifier [arg_pair_2]	count=9
function_name	mémoire [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	boucle libeio tant ||| bool	count=1
function_name	délai maximal ||| set query timeout	count=1
function_name	précédemment acquise ||| release	count=1
function_name	déchiffre ||| openssl public decrypt	count=2
arg_pair	une ||| string $key mixed $value	count=2
function	de contrôle [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	xml ||| save xml	count=1
arg_pair	name qui ||| resource $statement string $name	count=1
return	tableau associatif contenant les ||| array	count=1
function_name	buffer que ||| buffer	count=1
function	[function_name_1] parser ||| [arg_pair_2] [function_name_1]	count=4
function_name	informations de connexion ||| connect	count=1
return	est nécessaire pour ||| string	count=1
arg_pair	statue ||| resource $sftp	count=1
arg_pair	lit les ||| array $addtl	count=1
arg_pair	jeu de résultats ||| resource $stmt	count=1
function_name	extrêmes pour l'un ||| extrema	count=1
function_name	identifiant unique pour ||| object hash	count=1
function_name	closedir() ||| close	count=1
function_name	à une instance inotify ||| inotify	count=1
namespace	lors de la recherche ||| function	count=1
function_name	sommaire de leur ||| fetch overview	count=1
function_name	signature sha-256 de l'image ||| getimagesignature	count=1
arg_pair	une correction ||| resource $image float $inputgamma	count=1
function_name	[function_name_1] la classe ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] la version ||| [function_name_2] [function_name_1]	count=6
function_name	nom ||| by name	count=2
function_name	[function_name_1] l'itérateur interne ||| [function_name_2] [function_name_1]	count=4
return	libère un verrou ||| bool	count=1
function_name	la souscription à ||| imap unsubscribe	count=1
arg_pair	utilisé avec la ||| resource $radius_handle string $hostname	count=1
function_name	une équivalence de ||| variant eqv	count=1
function_name	place des antislashs devant ||| db2	count=1
arg_pair	event_handler en ||| string $event_name1	count=1
function_name	va protéger ||| escape string	count=1
function_name	chaîne de ||| db2 escape	count=1
function_name	[function_name_1] fonction posix ||| [function_name_2] get [function_name_1]	count=1
arg_pair	place un ||| resource $p	count=1
function_name	optimise la base de ||| optimize	count=1
function_name	logarithme naturel pour ||| ln	count=1
function_name	traitement ||| preview	count=1
function_name	élément ||| element by	count=1
function_name	les lignes ||| dbplus rzap	count=1
function_name	de faible priorité à ||| task low	count=1
arg_pair	de lecture/écriture ||| bool $autounlock	count=1
arg_pair	crée un fichier ||| string $pathname	count=1
function_name	données d'entrainement à ||| train data	count=2
arg_pair	paramètre str à ||| mixed $fd string $str	count=1
function_name	[function_name_1] http ||| [function_name_2] [function_name_1]	count=22
function_name	remplit [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	seul ||| directory	count=2
function_name	contenu ||| get	count=2
function_name	avec un identifiant donné ||| get element by	count=1
arg_pair	sauvegarde une version ||| resource $image	count=1
function_name	sélectionne ||| maxdb select db	count=2
function_name	sous la forme ||| to string	count=1
function_name	taille ||| size	count=2
function_name	[function_name_1] rappel ||| [function_name_2] [function_name_1]	count=5
function_name	libère ||| ifx free	count=1
function_name	fonction libère ||| newt	count=1
arg_pair	cubrid et sauvegarde leurs ||| resource $conn_identifier	count=1
namespace	ne ||| pharfileinfo	count=3
return	et tous les composants ||| void	count=1
function_name	wincache_lock() ||| wincache unlock	count=1
namespace	classe spécifiée ou implémente ||| reflectionclass	count=1
arg_pair	fait que ||| int $month	count=1
function_name	retourne la valeur du ||| pdf get	count=1
function_name	ouvre [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	traitement ||| imagick	count=1
function_name	la fonction cubrid_error_msg() ||| msg	count=1
function_name	demandant au kernel ; ||| now	count=1
arg_pair	le document xml filename ||| string $class_name	count=1
return	et seule la ||| void	count=1
function_name	copie exacte de la ||| dbplus rcrtexact	count=1
function_name	l'entier le plus ||| floor	count=1
function_name	le type du socket ||| socket type	count=1
function_name	de réalisation ||| task	count=2
function_name	l'endroit où les ||| set	count=1
function_name	été ajoutés ||| newt	count=1
function_name	résultats ||| db2	count=2
namespace	base de données ||| mongocursorinterface	count=1
return	mb par documents par ||| bool	count=1
return	le ||| bool	count=10
arg_pair	options qui ||| array $options	count=1
function_name	fourni et extrait dans ||| all	count=1
function_name	[function_name_1] fils de ||| [function_name_1] [function_name_2]	count=1
namespace	fonction est similaire à ||| domdocument	count=1
arg_pair	position de [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	par mot-clé ||| build keywords	count=1
function_name	retourne ||| get loaded extensions	count=2
arg_pair	est un petit ||| float $rprop_delta_min	count=1
function	html contenu [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	insère [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	avec un ||| element by	count=1
arg_pair	utilisant des valeurs rvg ||| int $bmax	count=1
function_name	récupère le nom ||| get short name	count=2
function_name	retourne l'identifiant [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	trace ||| trace log	count=2
function_name	tous les caractères blancs ||| rtrim	count=1
function_name	pays ||| by country	count=1
namespace	différences et sur ||| xmldiff\file	count=1
function_name	essaie de supprimer ||| fbsql drop db	count=1
namespace	typage d'objets pour le ||| reflectionparameter	count=1
function_name	prend ||| eio set max	count=1
namespace	la chaîne ||| function	count=1
function_name	geoip_country_code3_by_name() retourne ||| country code3	count=1
function_name	les lignes de ||| rzap	count=1
function_name	de stride ||| stride	count=1
namespace	si la ||| splpriorityqueue	count=1
function_name	les ressources mémoires utilisées ||| newt form	count=1
arg_pair	excepté le fait ||| int $second int $month	count=1
function_name	défini l'endroit ||| fann set error	count=1
namespace	l'argument ||| yaf_route_interface	count=1
function_name	que sybase ||| sybase	count=1
arg_pair	ce fichier ||| int $offset	count=1
function_name	retourne un entier représentant ||| get	count=1
function_name	la ||| type	count=2
function_name	charge ||| load hosts	count=1
arg_pair	détermine le ||| int $facetsort string $field_override	count=1
function_name	[function_name_1] paire ||| [function_name_2] [function_name_1]	count=1
function_name	d'apparition des mots ||| mlt min doc	count=2
function_name	avec db2_connect() et libère ||| db2	count=1
function_name	à propos de ||| win32 ps stat	count=1
function_name	d'erreurs libxml ||| libxml use internal	count=1
function_name	déplace ||| field seek	count=2
namespace	noeud courant est un ||| tidynode	count=1
function_name	fonction d'activation ||| activation function	count=3
namespace	modification d'une archive phar ||| phar	count=1
function_name	les modules à surveiller ||| set	count=1
arg_pair	de la colonne indiquée ||| resource $stmt mixed $column	count=2
function_name	charge ||| load ttc	count=2
function_name	priorité basse et ||| low	count=1
function_name	nombre d'époques de stagnation ||| stagnation epochs	count=2
return	l'image ||| bool	count=2
function_name	[function_name_1] préfixe ||| [function_name_1] facet [function_name_2]	count=1
function_name	remplissage ||| cmykstroke	count=1
arg_pair	valeur entre 0 et ||| int $value	count=1
function_name	les ||| fann set error	count=1
arg_pair	d'un entier ||| mixed $number	count=1
return	de caractères passée en ||| string	count=1
function_name	file d'attente ||| eio set max poll time	count=1
arg_pair	dessin à un niveau ||| resource $p	count=1
function_name	la dernière erreur ||| error string	count=1
arg_pair	oid ||| string $oid	count=1
function	prochaine ligne [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=5
return	retourne un tableau des ||| array	count=1
function_name	multiplie ||| gmp mul	count=1
return	l'endroit où ||| void	count=1
function_name	les liens ajoutés ||| set border color	count=1
function_name	fonction est similaire à ||| get element by	count=1
function	[function_name_1] texte ||| [function_name_1] type [arg_pair_2]	count=1
function_name	à ajouter ||| add vars	count=1
function_name	texte ||| gnupg	count=1
function_name	nouveau [function_name] ||| ibase [function_name]	count=3
function_name	place ||| ps place	count=1
arg_pair	[arg_pair_1] microsoft sql ||| [arg_pair_1] [arg_pair_2]	count=1
namespace	source ||| xmldiff\file	count=1
function_name	le contenu courant du ||| ob get	count=1
function_name	similaire à la fonction ||| get element by	count=1
function_name	données dns associées à ||| dns get record	count=1
function_name	arbre de ||| string	count=1
function_name	la plus proche ||| imagecolorclosest	count=1
arg_pair	configure une ||| int $index imagickpixel $color	count=1
function_name	est ||| element by	count=1
function_name	maximal de ||| set mlt max	count=1
arg_pair	sur les caractères alphabétiques ||| string $pattern	count=1
function_name	configure l'orientation de l'image ||| orientation	count=1
function_name	un fichier paradox ||| px	count=1
function_name	données blob/clob ||| lob export	count=1
function_name	dernier message d'alerte ||| last warning	count=2
arg_pair	une variable ||| string $name	count=2
return	array en ||| bool	count=1
return	[return] sorte qu'une ||| [return]	count=1
arg_pair	anonyme à ||| string $code	count=1
function_name	cette fonction retourne ||| get	count=8
function_name	document [function_name_2] ||| [function_name_2] open pdi [function_name_1]	count=1
function_name	profondeur de l'image ||| get image depth	count=2
function_name	forme ||| newt form	count=2
function_name	copie vide ||| dbplus rcrtlike	count=1
namespace	miniatures de l'image spécifiée ||| imagick	count=1
arg_pair	dans un seul ||| string $field_override	count=1
function_name	graphicsmagick ||| getreleasedate	count=1
function_name	l'extension ||| extension	count=3
function_name	pcntl_sigwaitinfo() suspend son ||| sigwaitinfo	count=1
function_name	le dictionnaire ||| crack check	count=1
namespace	comme ||| function	count=3
function_name	le paramètre de linejoin ||| pdf setlinejoin	count=1
arg_pair	établir l'environnement pour ||| string $userid	count=1
function_name	fin ||| push	count=1
return	caractères d'instance xml donnée ||| sdo_das_xml_document	count=1
arg_pair	l'événement de connexion ||| mixed $arg	count=1
return	un tableau de chaînes ||| array	count=1
function_name	couleur ||| color floodfill image	count=2
function_name	instance inotify ou ||| inotify	count=1
arg_pair	la base ||| resource $link_identifier	count=1
arg_pair	fichier remote_file présent ||| string $remote_file	count=1
function_name	preg_replace() mais elle ||| preg	count=1
arg_pair	offset et dans ||| int $offset	count=1
arg_pair	d'une ||| int $g	count=1
arg_pair	fixe la position pour ||| float $x	count=1
function_name	la ||| path	count=3
function_name	postgresql associée au ||| pg result	count=1
function_name	fonction est similaire ||| element by	count=1
return	stocker ||| void	count=1
function_name	associé avec la ||| string	count=1
function_name	la chaîne à guillemets ||| qprint	count=1
arg_pair	de subject qui ||| string $subject	count=1
namespace	date de sortie de ||| gmagick	count=1
arg_pair	contenu avec des données ||| int $contents	count=1
function_name	à la révision ||| svn cat	count=1
namespace	la [namespace] en ||| [namespace]	count=2
arg_pair	hyperlien ||| float $urx	count=2
arg_pair	la ||| int $year	count=2
function_name	fonction mysqli_thread_id() retourne l'identifiant ||| id	count=1
return	chaînes alphanumériques dans ||| void	count=1
function_name	connexion à ||| dbx connect	count=1
arg_pair	dans un fichier local ||| resource $connection int $oid	count=1
function_name	socket créé ||| stream socket	count=1
arg_pair	une base de ||| string $database_name	count=1
function_name	récupère la valeur de ||| get	count=5
arg_pair	son contenu dans ||| resource $connection	count=1
arg_pair	données ||| mixed $data	count=1
arg_pair	[arg_pair] au protocole ||| [arg_pair]	count=2
function_name	retourne la ||| offset get	count=1
function_name	crée un groupe ||| pdf create	count=1
rest	change les [function_2] ||| [function_2] [return_1]	count=1
function_name	ajoute ||| variant add	count=2
return	le nombre de fois ||| int	count=2
arg_pair	pour le calendrier calendar ||| int $calendar	count=1
function_name	s'interrompt si ||| poll time	count=1
namespace	détruire un ||| function	count=1
function_name	sert à ||| shmop	count=1
function_name	com ||| com	count=1
function_name	curl de façon asynchrone ||| curl multi	count=1
arg_pair	depuis un fichier vers ||| string $filename resource $context	count=1
function_name	le nombre de colonnes ||| num	count=1
function_name	décrivant la ||| stomp connect	count=1
function_name	crée et retourne ||| create	count=1
arg_pair	fonction ||| int $hour	count=1
function_name	dernière commande ldap ||| ldap errno	count=2
function	[function_name_1] msg_number ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	première occurrence ||| string $haystack	count=5
arg_pair	domaine unicode ||| string $domain int $options	count=1
arg_pair	texte avec des données ||| string $blockname string $text	count=1
return	un fichier temporaire ||| array	count=1
function_name	à la fonction ||| get	count=1
arg_pair	la clé key ||| string $key mixed $value	count=1
function_name	[function_name_1] la racine ||| [function_name_2] [function_name_1]	count=1
function_name	lorsque l'on termine ||| end	count=1
namespace	hormis le ||| function	count=2
function_name	disposition courante de la ||| layout	count=1
function_name	[function_name_1] définies ||| [function_name_2] [function_name_1]	count=3
function_name	incrémente de ||| inc	count=1
arg_pair	est un ||| resource $ann	count=1
arg_pair	yaf_route_simple récupère les ||| string $module_name string $controller_name	count=1
function_name	de ||| ob get	count=1
function_name	[function_name_1] serveur oracle ||| function resource [function_name_2] new [function_name_1]	count=1
function_name	associatif en ||| fetch assoc	count=1
function_name	noms de ||| names	count=1
function_name	crypte ||| openssl encrypt	count=1
arg_pair	vert et bleu d'une ||| int $g int $b	count=1
arg_pair	via items ||| array $items	count=1
arg_pair	contient les ||| mongodb $db	count=1
function_name	dimensions ||| metrics	count=1
function_name	mime ||| iconv mime	count=1
function_name	de ligne de départ ||| start line	count=1
arg_pair	le contenu des fichiers ||| mongodb $db	count=1
function_name	téléchargé par http post ||| move uploaded	count=1
function_name	succès ou ||| cubrid	count=1
function_name	noms ||| namespace	count=6
function_name	calcule le cosinue pour ||| trader cos	count=1
function_name	des informations de déboguage ||| memcache debug	count=1
function_name	fonction oci_result() soit ||| oci	count=1
function_name	avec un identifiant donné ||| by id	count=1
arg_pair	par address à l'interface ||| resource $socket string $address	count=1
namespace	fin de ||| recursivetreeiterator	count=1
function_name	identifiant de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	y écrit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	une commande et ||| resource $connection	count=1
function_name	du ||| add buffer	count=2
function_name	file ||| set	count=1
function_name	d'événements pour les ||| ibase set event	count=1
function_name	cette fonction ||| element by id	count=1
function_name	contexte est ||| is	count=1
return	cette méthode détermine ||| bool	count=1
function_name	parallèle d'autres ||| task	count=1
return	commandes de ||| bool	count=1
function_name	[function_name_1] de pagination ||| [function_name_1] [function_name_2]	count=8
function_name	pour ||| fann set	count=3
function_name	en-têtes de réponse ||| response headers	count=3
arg_pair	établir l'environnement pour ||| string $dbname	count=1
function_name	utilisées par la ||| newt form	count=1
function_name	fonction retourne ||| mcrypt enc get	count=1
function_name	le premier attribut ||| ldap first attribute	count=2
function_name	champs contenus ||| fields	count=1
arg_pair	clé key n'existe pas ||| string $key mixed $value	count=1
function_name	écrit ||| write temporary	count=2
arg_pair	résultats listant les ||| string $schema string $table_name	count=1
function_name	thread ||| setthreadtitle	count=1
function_name	version échappée ||| cubrid real escape string	count=1
arg_pair	listant ||| string $table-name	count=5
namespace	la seconde ||| mongogridfs	count=1
return	le curseur est à ||| bool	count=1
function_name	de sortir via la ||| got exit	count=1
function	lie un tableau php [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
arg_pair	analyse subject pour trouver ||| mixed $subject	count=1
function_name	base sqlite identifiée par ||| sqlite close	count=1
namespace	lorsque l'objet ||| collectable	count=1
function_name	[function_name_1] devient disponible ||| [function_name_1] [function_name_2]	count=2
function_name	le nom d'hôte ||| host	count=1
arg_pair	caractères ? représentant ||| resource $connection	count=1
function_name	de données ||| numfields	count=1
arg_pair	une chaîne d'un jeu ||| string $from	count=1
arg_pair	les données data qui ||| string $data	count=1
arg_pair	est une ||| resource $result	count=2
function_name	une exécution ultérieure ||| prepare	count=1
arg_pair	paramètre eol_style ||| int $eol_style	count=1
namespace	lit l'élément ||| splfixedarray	count=1
arg_pair	requête sql query ||| resource $link_identifier	count=1
arg_pair	défini le ||| resource $ann float $quickprop_decay	count=1
arg_pair	contrairement à strcmp() elle ||| string $str1	count=1
function_name	du noeud à ||| node	count=1
function_name	shell bourne et ouvre ||| expect popen	count=1
function_name	un tableau qui contient ||| array	count=2
function_name	tous les ||| uudecode	count=1
function_name	de ||| to string	count=4
function_name	d'attente s'interrompt si ||| set	count=1
function_name	fichier temporaire tous ||| mailparse uudecode	count=1
function_name	image à ||| image	count=1
function	[function_name_1] valeur ||| [function_name_1] [arg_pair_2]	count=1
function_name	mime d'un ||| mime	count=1
arg_pair	avec [arg_pair] et liée ||| [arg_pair]	count=1
function_name	les ||| db2 escape string	count=2
return	vérifie si le ||| bool	count=2
arg_pair	table tablename ||| string $tablename	count=1
function_name	messages spécifiés ||| imap fetchbody	count=2
function_name	statut spécifié ||| status	count=1
arg_pair	l'étape est un petit ||| resource $ann float $rprop_delta_min	count=1
arg_pair	[arg_pair] numérique ||| [arg_pair]	count=3
arg_pair	un script particulier ||| string $script	count=1
function_name	de données n'a plus ||| dead	count=1
function_name	un élément avec ||| by id	count=1
return	supporte et ||| string	count=1
arg_pair	occurrence de needle ||| mixed $needle	count=1
function_name	similaire à la ||| get	count=1
arg_pair	sert à modifier la ||| resource $fd int $pos	count=1
return	des données ||| void	count=1
function_name	le schéma relaxng ||| set relax ngschema	count=1
function_name	avec db2_connect() et ||| db2	count=1
function_name	que les requêtes s'exécutent ||| event loop	count=1
function_name	paramètres ||| gmmktime	count=1
function_name	de la dernière opération ||| errno	count=2
function_name	exécution ou son référencement ||| set garbage	count=1
function_name	pâques pour ||| easter days	count=1
namespace	sémaphore nommé ||| syncsemaphore	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=2
function_name	fichier temporaire ||| uudecode all	count=1
return	appelée sur [return] objet qui ||| [return]	count=1
arg_pair	un attribut ||| string $index array $attributes	count=1
return	demande un verrou sur ||| int	count=1
arg_pair	pile ||| array $array	count=1
function_name	miniatures de l'image ||| preview images	count=1
function_name	le prochain élément ||| next	count=3
function_name	retourne ||| ms get	count=2
function_name	exécute une ||| execute	count=1
function_name	à appeler lorsqu'une tâche ||| created	count=1
function_name	l'espace de noms ||| namespace name	count=2
function_name	qui décide si ||| qc set is	count=1
function_name	définit [function_name_2] ||| [function_name_1] mime [function_name_2]	count=1
function_name	brosse courante ||| imagesetbrush	count=1
function_name	retourne le nombre ||| sybase num	count=1
arg_pair	utilisant le paramètre oid ||| string $oid	count=1
function	de succès [arg_pair_2] ||| [function_name_1] field len [arg_pair_2]	count=1
function_name	un lot d'objets résultants ||| size	count=1
function_name	un patch binaire ||| string patch binary	count=1
function_name	sans suivre le ||| lstat	count=1
return	false ||| bool	count=2
function_name	du script ||| path	count=1
function_name	doit ||| proc	count=1
function_name	de la couleur ||| color	count=1
return	[return] stoppe la ||| [return]	count=3
function_name	pattern ||| begin pattern	count=2
function_name	[function_name_1] champs ||| [function_name_1] highlight [function_name_2]	count=1
return	à ||| sdo_das_xml_document	count=1
function	yaml de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	à celui de preg_replace() ||| preg	count=1
function_name	fragments contigus en ||| highlight	count=1
function_name	xa ||| xa	count=1
function_name	message d'erreur qui ||| pg result error	count=1
return	en attente ||| bool	count=1
return	travaux assigné par le ||| string	count=1
function_name	récupère le [function_name_2] ||| [function_name_1] idle [function_name_2]	count=1
function_name	lien [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	examine ||| array $cainfo	count=2
arg_pair	name ||| resource $statement string $name	count=1
function_name	affiche le ||| show	count=3
function_name	active ||| buffer enable	count=1
function_name	un élément avec un ||| by	count=1
function_name	la tangente ||| tan	count=1
arg_pair	radius_config() ||| string $secret	count=1
function	de définir [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	sur les caractères ||| string $string	count=1
function_name	les options ||| options	count=1
function_name	va protéger ||| escape	count=1
function_name	noms des ||| names	count=1
return	gestionnaire ||| string	count=1
function_name	de conteneur de ||| set default stub	count=1
return	ressources ||| void	count=1
arg_pair	texte text en utilisant ||| resource $p string $text	count=1
function	[function_name_1] colonne correspondant ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	dans subject ont été ||| mixed $subject	count=1
arg_pair	une ||| string $haystack int $size	count=1
function_name	brutes [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	cette fonction peut être ||| module	count=1
function_name	setcookie() excepté ||| setrawcookie	count=1
return	tous ||| bool	count=1
function_name	connexion passées ||| connect	count=1
namespace	pour ||| mongolog	count=1
function_name	champ spécifié par sa ||| field	count=1
function_name	du corps des messages ||| imap	count=1
arg_pair	contexte log_killcursor lors de ||| array $server array $info	count=1
namespace	écriture ou ||| function	count=1
arg_pair	que ||| int $second	count=1
function_name	définition de police ||| font	count=1
function_name	similaire ||| get element by	count=1
function_name	commence la recherche ||| gupnp control point browse start	count=1
function_name	sous-classe ||| subclass of	count=1
function_name	fraction de modification de ||| change fraction	count=1
arg_pair	un socket un flux ||| mixed $socket	count=1
function_name	protège ||| escape string	count=4
return	coin en haut à ||| bool	count=1
function_name	si ||| is	count=3
return	affiche toute ||| bool	count=1
function_name	connecte le dernier point ||| ps closepath stroke	count=1
arg_pair	d'échec ||| mixed $options	count=1
function_name	un ||| to file	count=1
function_name	d'un blob [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	fichier spécial ||| string $pathname int $mode	count=1
arg_pair	symbolique filename ||| string $filename	count=1
function	un tableau php var_array [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	fonction cubrid_query() ||| cubrid	count=1
function_name	a été envoyé ||| message	count=1
function_name	libère les ressources du ||| free result	count=1
namespace	jday ou false si ||| function	count=1
function_name	intervalles ||| elapsed	count=1
arg_pair	moifie un attribut ||| array $values bool $mva	count=1
function_name	xml associé [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	position courante du ||| ps show	count=1
arg_pair	filter_var() ||| mixed $definition	count=1
function_name	l'identifiant maximal de hash ||| mhash count	count=1
arg_pair	soit terminé, ou qu'un ||| int $status int $options	count=1
arg_pair	anonyme à partir des ||| string $args string $code	count=1
namespace	par objet lorsque l'objet ||| collectable	count=1
function_name	serveur ldap situé ||| ldap connect	count=2
return	utile uniquement avec ||| array	count=1
return	données en utilisant ||| bool	count=1
function_name	xmlrpc base64 ||| xmlrpc	count=1
function_name	fichiers distant en ||| ssh2	count=1
function_name	pour définir des ||| set	count=1
return	si plusieurs requêtes ||| bool	count=1
function_name	les fichiers encodés qui ||| mailparse	count=1
return	configuration include_path pour la ||| string	count=1
namespace	un curseur ||| mongocommandcursor	count=1
function_name	dans la session ||| in session	count=1
arg_pair	stocke ||| int $flag int $expire	count=1
function_name	[function_name_1] file de ||| [function_name_1] [function_name_2]	count=2
function_name	du tampon de sortie ||| get	count=1
function_name	le cache [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	par miroir horizontal à ||| flop	count=1
function_name	dans un fichier ||| all	count=1
function_name	le cosinue pour chaque ||| trader cos	count=1
function_name	timer à utiliser avec ||| timer	count=1
arg_pair	spécial ||| int $mode	count=1
function_name	fichier fourni et extrait ||| uudecode	count=1
function_name	fin de l' eventbuffer ||| add buffer	count=1
function_name	passée en ||| db2 escape string	count=1
return	avec la fonction ||| resource	count=1
function_name	dictionnaire représenté ||| crack closedict	count=1
function_name	terme à ||| upper bound	count=1
namespace	méthode implémente un algorithme ||| arrayobject	count=1
function_name	met à l'échelle les ||| fann scale	count=4
function_name	propriétés par défaut ||| default properties	count=2
function_name	[function_name_1] de clé ||| [function_name_2] [function_name_1]	count=1
arg_pair	pour établir ||| string $userid	count=1
namespace	un verrou ||| eventbuffer	count=1
arg_pair	lui associe un ||| int $cols int $rows	count=1
function_name	la fonction ingres_query() ||| ingres fetch	count=1
arg_pair	les attributs du ||| resource $fd	count=1
function_name	actuelle de l'option magic_quotes_gpc ||| magic quotes gpc	count=1
return	avec ||| int	count=2
function_name	et effectue alors ||| variant idiv	count=1
function_name	si [function_name] ||| is block algorithm [function_name]	count=1
namespace	contexte déclenché par morceaux ||| function	count=1
arg_pair	du domaine domain ||| string $domain string $codeset	count=1
arg_pair	au service daemon ||| string $daemon string $address	count=1
function_name	flux à utiliser avec ||| stream	count=1
function_name	pour modifier les ||| set	count=1
arg_pair	multiple s'il y ||| resource $mh	count=1
arg_pair	une des fonctions ||| string $style	count=1
arg_pair	[arg_pair_1] microsoft ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	réinitialise le ||| fann reset	count=1
function_name	arrière plan et retourne ||| do high	count=1
function_name	parser ||| parser	count=1
function_name	sur le dictionnaire ||| crack	count=1
function	d'entités html [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	liste tous les bases ||| msql list dbs	count=1
function_name	minimale de sortie ||| min	count=1
function_name	[function_name] d'un ||| mssql field [function_name]	count=2
function_name	utilisée que pour ||| set	count=1
return	de résultats ||| bool	count=1
function_name	$this ||| rewind	count=1
function_name	pclose() hormis le ||| proc	count=1
arg_pair	analyse subject pour ||| int $limit	count=1
namespace	serveur de ||| samconnection	count=1
function_name	fonction retourne [function_name_2] ||| [function_name_1] iv [function_name_2]	count=1
namespace	police ||| harufont	count=1
function_name	ce bloc [function_name] ||| oci [function_name] implicit	count=3
function_name	vérification ||| udiff assoc	count=1
function_name	configure l'orientation de ||| image orientation	count=1
arg_pair	sous-chaîne depuis une chaîne ||| string $str int $start	count=1
function_name	ligne lue dans ||| mysql fetch	count=2
function_name	sinus ||| trader sin	count=1
function_name	[function_name_1] une ressource ||| [function_name_2] [function_name_1]	count=3
return	s'y trouvent ||| array	count=1
arg_pair	apache solr dans un ||| int $parse_mode	count=1
arg_pair	paramètre str dans le ||| string $str	count=1
function_name	le retour de statut ||| task status	count=1
function_name	des fichiers ainsi ||| chmod	count=1
arg_pair	fait ||| int $month	count=1
function_name	[function_name_1] sqlstate ||| [function_name_1] [function_name_2]	count=1
function_name	fonction de rappel timestamp ||| timestamp	count=1
return	nécessaire pour ||| string	count=1
return	arbre de ||| sdo_das_xml_document	count=1
function_name	dans le flux ||| to stream	count=1
function_name	courant est un ||| is	count=1
return	appels distants ||| boolean	count=1
function_name	fichier ||| csr export to file	count=1
function_name	[function_name_1] apache ||| [function_name_2] [function_name_1]	count=2
return	code du jeu de ||| string	count=1
function_name	champ de résultat mnogosearch ||| udm get res field	count=1
arg_pair	ressource de fichier ||| string $filename	count=1
function_name	lien symbolique ||| symlink	count=2
function_name	[function_name_1] odbc ||| [function_name_2] [function_name_1]	count=4
return	cubrid_column_types() récupère les ||| array	count=1
function_name	la dernière commande ldap ||| ldap errno	count=1
arg_pair	mode wsdl ou ||| array $options	count=1
arg_pair	obsolète ||| string $function_name	count=1
arg_pair	et sur le ||| string $src	count=1
return	un identifiant ||| domelement	count=1
namespace	de string défini par ||| function	count=1
function_name	de noms par défaut ||| default namespace	count=1
namespace	classe spécifiée ou ||| reflectionclass	count=1
arg_pair	de la base de ||| string $database	count=1
function_name	les informations de connexion ||| connect	count=1
function_name	tous les ||| mailparse uudecode all	count=1
function_name	lit la clé ||| key	count=1
function_name	la fraction de modification ||| change fraction	count=1
function_name	un jeu de résultats ||| result	count=2
arg_pair	la fonction cubrid_lob2_bind() est ||| mixed $bind_value string $bind_value_type	count=1
function_name	: la première contient ||| construct	count=1
function_name	la fonction d'activation pour ||| set activation function	count=3
function_name	configuration ||| include	count=1
function_name	conteneur de chargement donc ||| set	count=1
namespace	lors de la ||| function	count=1
return	retourne les réponses ||| bool	count=1
function_name	[function_name] et déplace ||| [function_name] fetch	count=1
arg_pair	une fonction à ||| string $class string $function	count=1
namespace	compression utilisée ||| function	count=1
arg_pair	distante ||| bool $is_null	count=2
arg_pair	set ||| array $siginfo	count=1
function_name	sur le ||| zip entry compressionmethod	count=1
arg_pair	le paramètre filename sous ||| string $mode	count=1
function_name	retourne le statut ||| introspection get state variable	count=1
function_name	le noeud courant ||| node ns	count=1
function_name	un bloc ||| shmop	count=1
function_name	excepté le fait ||| gmmktime	count=1
function_name	tâche de faible priorité ||| low	count=1
arg_pair	paramètres passés ||| int $second	count=1
return	d'un entier ||| int	count=1
function_name	de la fin de ||| end	count=1
function_name	récupérer le nombre de ||| cubrid num	count=1
function_name	xml depuis la ||| xml	count=1
return	assigné par le ||| string	count=1
function_name	avec un identifiant ||| by	count=1
function_name	champs ||| numfields	count=1
arg_pair	retourne ||| resource $imap_stream	count=1
function_name	parcourt un lot d'objets ||| batch size	count=1
arg_pair	limitations de ||| resource $agent	count=1
function_name	la bibliothèque openssl ||| openssl	count=1
arg_pair	utilisé avec [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	la forme en incluant ||| newt form	count=1
function_name	[function_name_1] la hauteur ||| [function_name_2] [function_name_1]	count=1
arg_pair	paramètre object_id ||| string $object_id	count=1
function_name	de la police ||| query font	count=1
return	la méthode de ||| string	count=1
function_name	dans ||| mailparse	count=1
function_name	la révision ||| svn cat	count=1
arg_pair	anonyme ||| string $args string $code	count=1
function_name	priorité basse ||| low	count=2
return	méthode peut être ||| void	count=1
return	supprime tous les ||| void	count=1
function_name	service qui fonctionne ||| set service	count=1
function_name	[function_name_1] de clé ||| [function_name_1] [function_name_2]	count=1
arg_pair	un message d'erreur à ||| int $message_type	count=1
function_name	avaient été ajoutés à ||| form destroy	count=1
return	par ||| string	count=2
return	plus de résultats à ||| bool	count=1
namespace	se déplace ||| norewinditerator	count=1
namespace	colonnes ||| function	count=1
arg_pair	dans subject ont ||| mixed $subject int $count	count=1
function_name	[function_name_1] erreurs ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] phar filename [arg_pair_2]	count=1
function_name	variable env ||| env	count=1
namespace	l'itérateur à la ||| limititerator	count=1
function_name	récupère la classe ||| get class	count=1
arg_pair	hormis le fait qu'elle ||| string $string	count=1
function_name	retourne l'index [function_name_2] ||| [function_name_1] current [function_name_2]	count=1
function_name	les ressources ||| newt	count=1
function_name	est ||| field type	count=4
namespace	fonction ||| mongolog	count=1
function_name	[function_name_1] paire ||| [function_name_1] [function_name_2]	count=1
arg_pair	des données ||| callable $callback string $data	count=1
function_name	paquet repéré par son ||| wddx	count=1
function_name	[function_name_1] l'on quitte ||| [function_name_2] [function_name_1] resource $parser callable $handler	count=1
function_name	des informations sur la ||| stat	count=1
function_name	les paramètres requis qu'optionnels ||| number of parameters	count=1
function_name	en incluant les composants ||| newt form	count=1
arg_pair	avec un espace de ||| string $namespaceuri string $qualifiedname	count=1
return	statut d'une ||| int	count=1
return	pour toutes ||| string	count=1
namespace	élément depuis le registre ||| yaf_registry	count=1
function_name	[function_name_1] binaire ||| [function_name_1] [function_name_2]	count=4
arg_pair	des options d'analyseur ||| resource $bbcode_container int $flags	count=1
arg_pair	un hyperlien à une ||| float $lly	count=1
function_name	colonnes ||| column	count=1
function_name	action qui peut ||| action	count=1
function_name	date de dernière modification ||| file time	count=1
namespace	tente de mettre ||| quickhashintstringhash	count=1
function_name	la première ||| construct	count=1
arg_pair	propriété hwnd de l'instance ||| int $client_area	count=1
namespace	où l'exception a ||| exception	count=1
function_name	classe et revient ||| class	count=1
arg_pair	ingres_fetch_array() avec ||| int $result_type	count=1
arg_pair	spécifie un préfixe utilisé ||| string $prefix string $field_override	count=1
function_name	est une interface ||| is interface	count=2
function_name	carte [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	retourne le fichier ||| string $filename	count=1
function_name	tampon fourni par le ||| add	count=1
function_name	constructeur de ||| construct	count=1
function_name	service exposé par ||| gupnp service	count=2
arg_pair	vérité suivante ||| mixed $left mixed $right	count=1
function_name	courant du tampon ||| ob	count=1
arg_pair	à la ||| int $hour	count=1
function_name	utilisateur ||| ucache delete	count=2
function_name	ligne de ||| fbsql fetch	count=1
function_name	recherche l'enregistrement dns de ||| checkdnsrr	count=1
function_name	la mémoire partagée ||| shm attach	count=1
function_name	une police et la ||| font	count=1
function_name	souscription ||| unsubscribe	count=1
arg_pair	messages du domaine domain ||| string $domain string $codeset	count=1
function_name	à celui de preg_replace() ||| preg replace	count=1
function_name	d'interpolation [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	à la fin de ||| push	count=1
function_name	récupère les informations ||| rrd	count=1
function_name	[function_name_1] de flux ||| [function_name_2] [function_name_1]	count=10
function_name	une page pour ||| pdi page	count=1
function_name	utilisée que pour stocker ||| set metadata	count=1
return	toutes les ||| string	count=1
function_name	[function_name_1] une interface ||| [function_name_2] [function_name_1]	count=1
arg_pair	spéciales [arg_pair] html et ||| [arg_pair]	count=1
return	classe depuis laquelle une ||| string	count=1
function_name	jeu de résultats ||| result	count=3
arg_pair	fichiers dans l'argument result ||| string $path int $pri	count=1
function_name	police et la ||| load font	count=1
arg_pair	unix et windows ||| resource $handle int $operation	count=1
arg_pair	structure de ||| int $num_input	count=1
function_name	est ||| get element by	count=1
function_name	données kerberos ||| kadm5	count=1
function_name	un document selon un ||| validate	count=1
namespace	en chaîne de ||| serializable	count=1
function	[function_name_1] connexion ||| [arg_pair_2] [function_name_1]	count=2
function_name	qui est ||| sybase fetch	count=1
function_name	grande taille ||| lo	count=1
arg_pair	configure la largeur de ||| resource $p float $width	count=1
function_name	récupère ||| get class	count=2
function_name	et extrait ||| uudecode all	count=1
function_name	du tampon ||| ob	count=1
function_name	returns [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	[return] nouvel ||| [return]	count=1
namespace	registre ||| yaf_registry	count=1
function_name	à pclose() hormis le ||| close	count=1
function_name	d'être une fonction interne ||| user defined	count=1
function_name	d'activation pour tous ||| set activation	count=2
function_name	de scan ||| yaz scan	count=1
return	niveau dans lequel ||| int	count=1
function_name	est similaire ||| id	count=1
arg_pair	gearmanclient::setstatuscallback() ||| string $context	count=1
function_name	pour terminer le processus ||| pcntl wait	count=1
function_name	include_path pour ||| include	count=1
function_name	[function_name_1] connexion au ||| [function_name_1] [function_name_2]	count=1
namespace	string défini par ||| function	count=1
function_name	supprime ||| remove mlt	count=1
function_name	la profondeur [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	interface avec gettimeofday ||| gettimeofday	count=1
function_name	le ||| metadata	count=1
return	algorithme de tri ||| void	count=1
function_name	récupère les arguments d'une ||| func get args	count=1
function_name	elle prend ||| eio set max poll	count=1
function_name	de ||| db2 escape	count=1
function_name	remplace les textes qui ||| mb ereg replace callback	count=1
function_name	dictionnaire à utiliser ||| enchant	count=1
function_name	statut spécifié grâce ||| add task status	count=1
function_name	privée qui correspond ||| openssl x509 check private	count=1
arg_pair	options qui affectent l'affichage ||| resource $link array $options	count=1
function_name	de l'itération lorsque ||| end iteration	count=1
return	méthode peut être utilisée ||| void	count=1
return	seule ||| void	count=1
function_name	retour du réseau neuronal ||| fann create	count=1
function_name	pour toutes les ||| construct	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] env [arg_pair_2]	count=1
function_name	d'exécution de postgresql associée ||| pg	count=1
function_name	existante ||| modify batch	count=1
namespace	à surveiller avec ||| mongolog	count=1
namespace	configuration ||| hw_api	count=1
return	jeu ||| array	count=1
function_name	memcached::append() ||| append by	count=1
function_name	d'attente s'interrompt ||| eio set max poll time	count=1
function_name	pour afficher [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	et ||| int $flags	count=1
return	de la ||| string	count=3
function_name	définit la ||| set mlt min	count=2
function_name	fichier fourni et ||| mailparse	count=1
function_name	pour le calendrier grégorien ||| gregoriantojd	count=1
return	utilisé pour tracer ||| void	count=1
function_name	définit la [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	... ||| resource $link int $pagesize	count=1
arg_pair	les données fournies dans ||| int $dbase_identifier	count=1
namespace	l'aide ||| mongogridfs	count=1
function_name	numérateur du taux ||| numerator	count=1
arg_pair	requête ||| array $query	count=1
function_name	[function_name] résultat ||| mysql [function_name]	count=1
arg_pair	retourne un ||| resource $result	count=1
function_name	la mémoire partagée de ||| shm	count=1
function_name	supprime toutes les ||| dbplus	count=1
return	doit être utilisée ||| void	count=1
function_name	remplace l'attribut ||| ldap mod replace	count=2
return	avec un traitement appliqué ||| bool	count=1
function_name	écrit le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	que file_get_contents() retourne le ||| get contents	count=1
function_name	sont sur ||| form	count=1
function_name	retourne ||| get loaded	count=1
function_name	affectées par la ||| ifx affected	count=1
arg_pair	les ||| mongodb $db string $prefix	count=2
function_name	le serveur sybase associé ||| sybase	count=1
function_name	l'espace de noms ||| namespace	count=3
function_name	par l'identifiant ||| crack closedict	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] parents mixed $class [arg_pair_2]	count=3
arg_pair	destinataires cc et bcc ||| string $bcc	count=1
namespace	d'un fichier mpeg ||| ktaglib_mpeg_audioproperties	count=1
function_name	d'une colonne oracle ||| oci field	count=2
function_name	enregistrement ||| record	count=1
function	prépare [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
return	un tableau de timestamp ||| array	count=1
function_name	un élément avec ||| get element by	count=1
namespace	ou pas ||| function	count=1
arg_pair	array ||| array $array	count=1
function_name	maximal ||| max	count=3
arg_pair	choisit le fichier qui ||| int $dictionary_link string $file	count=1
function_name	personnalisées ||| metadata	count=1
function_name	met à jour le ||| update	count=1
arg_pair	fichier qui contient le ||| int $dictionary_link string $file	count=1
function_name	syntaxe ||| syntax	count=2
function_name	retourne une [function_name_2] ||| [function_name_1] query [function_name_2]	count=3
arg_pair	left et right en ||| mixed $left mixed $right	count=1
return	récupère la date ||| string	count=1
arg_pair	cubrid_bind() est ||| string $bind_value_type	count=1
function_name	ignore la casse ||| eregi	count=1
arg_pair	avec les ||| resource $id array $config	count=1
function_name	ceux de ||| chmod	count=1
function_name	surveillance en cours vers ||| watch	count=1
function_name	un élément enfant ||| child	count=1
arg_pair	une version ||| resource $image string $filename	count=1
function_name	l'échelle les ||| scale train	count=1
function_name	méthode d'entrelacement de l'image ||| interlace scheme	count=1
function_name	xml depuis un serveur ||| xml	count=1
namespace	requête sql ayant échouée ||| sqlite3	count=1
function_name	l'entrainement rprop ||| fann get rprop	count=1
function_name	toutes ||| add buffer	count=2
function_name	enregistrement dans ||| yaz record	count=1
arg_pair	dans ||| int $options	count=1
arg_pair	depuis ||| int $options	count=1
arg_pair	les arguments ||| resource $action string $name	count=1
function_name	avec vérification ||| udiff assoc	count=1
function_name	mssql_connect() mais ||| mssql	count=1
return	un ||| int	count=8
function_name	délai maximal d'attente peut ||| timeout	count=1
namespace	temps [namespace] timeout ||| [namespace]	count=1
arg_pair	fond ||| mixed $background	count=1
function_name	défaut $this ||| rewind	count=1
function_name	paramètre [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	le terme à ||| bound	count=1
function_name	équivalent à memcached::append() ||| append	count=1
function_name	des boîtes aux lettres ||| imap get	count=1
function_name	rprop ||| get rprop	count=2
return	la ||| resource	count=1
function_name	demande un verrou ||| dbplus getlock	count=1
return	d'un tableau de ressources ||| array	count=1
function_name	assigne ||| set	count=1
function_name	le module de ||| mcrypt module	count=1
function_name	apache spécifiée ||| apache setenv	count=1
arg_pair	la chaîne unescaped_string en ||| string $unescaped_string	count=1
function_name	travaux ||| handle	count=1
function_name	cette méthode retourne une ||| get resource	count=1
return	et la seconde ||| mongodb	count=1
function_name	exception de ||| set using	count=1
arg_pair	index ||| int $length	count=1
function_name	certificat rsa ||| rsacertificate	count=1
namespace	fonction mktime() ||| function	count=1
function_name	utilisé pour ||| set multi	count=1
function_name	de noms configurés ||| count nameservers	count=1
arg_pair	address à l'interface ||| resource $socket string $address	count=1
namespace	stocker ||| memcached	count=1
function_name	la fréquence minimale ||| min default frequency	count=1
function_name	schéma depuis ||| schema	count=1
function_name	depuis une instance glo ||| load from glo	count=1
function_name	non dans la session ||| is in session	count=1
return	de données ||| int	count=1
function_name	définit la ||| set color	count=1
function_name	l'échelle les ||| fann scale train	count=1
arg_pair	fichier remote_file ||| int $mode	count=1
function_name	hauteur ||| imagesy	count=1
function_name	la plus récente de ||| last	count=1
return	extrait [return] région ||| [return]	count=1
function_name	le facteur décroissant quickprop ||| fann set quickprop decay	count=1
function_name	gestionnaire à appeler lorsque ||| handler	count=2
function	crée [arg_pair_2] ||| [function_name_1] pvf [arg_pair_2]	count=1
function_name	la fonction ||| error handler	count=1
arg_pair	utilisé avec la ||| resource $radius_handle	count=1
namespace	caractères ||| function	count=4
function_name	plusieurs canaux de l'image ||| get image channel	count=1
function_name	attribut par ||| attribute ns	count=1
function_name	configuration de l'objet object ||| tidy config	count=1
namespace	tri ||| arrayobject	count=1
arg_pair	de résultats listant les ||| string $schema string $table-name	count=1
function_name	parent ||| parents	count=1
function_name	[function_name_1] sous copyright ||| [function_name_2] [function_name_1]	count=1
function_name	ibase [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	les données fournies dans ||| array $record	count=1
function_name	compte les ||| count	count=1
namespace	la ||| tokyotyrant	count=1
arg_pair	un ||| resource $link_identifier	count=1
arg_pair	fonction ||| int $day int $year	count=1
function_name	police et la prépare ||| load font	count=1
arg_pair	qui héberge la ||| resource $queue array $data	count=1
arg_pair	remplace la brosse courante ||| resource $image	count=1
function_name	[function_name_1] [function_name_2] ||| function resource [function_name_2] module [function_name_1] string $algorithm string $algorithm_directory	count=1
arg_pair	paramètre str ||| string $str	count=1
arg_pair	de documents ||| array $docs	count=1
arg_pair	le chemin du domaine ||| string $domain	count=1
function_name	les paires de ||| pspell config repl	count=1
namespace	image contenant du bruit ||| gmagick	count=1
function_name	procédure stockée [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	connexion ||| ssh2 connect	count=1
function_name	l'échelle ||| fann scale	count=4
function_name	[function_name_1] taille ||| [function_name_1] [function_name_2]	count=2
return	classes ||| string	count=1
namespace	d'objets résultants ||| mongocommandcursor	count=1
function_name	[function_name_1] maximal de ||| [function_name_2] [function_name_1]	count=10
function_name	ligne courante du résultat ||| result	count=1
return	au ||| bool	count=14
function_name	à la fin ||| append	count=1
function_name	du corps de la ||| body	count=1
arg_pair	fichier filename et ||| string $filename bool $process_sections	count=1
function_name	[function_name_1] colonne oracle ||| [function_name_2] [function_name_1]	count=2
arg_pair	celles utilisées par le ||| int $flags	count=1
function_name	proxy pour intercepter les ||| set connection proxy	count=1
function_name	[function_name_1] [function_name_2] ||| function resource [function_name_2] [function_name_1]	count=3
function_name	mate ||| matte	count=1
arg_pair	exécute la commande command ||| array $output	count=1
namespace	par le serveur ||| gearmanjob	count=1
function_name	attribut dans ||| langdepvalue	count=1
function_name	document pdf d'entrée ||| pdf get pdi value	count=1
namespace	incluant les composants ||| function	count=1
function_name	text sont des chiffres ||| ctype digit	count=1
arg_pair	dans la fonction fann_read_train_from_file() ||| resource $data string $file_name	count=1
function_name	moteur [function_name] visualisation ||| [function_name]	count=1
arg_pair	memcached::getmulti() mais ||| int $flags	count=1
function	xml depuis [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de profilage de ||| profiling level	count=1
function_name	vérifie si l'on doit ||| is select	count=1
arg_pair	de seuil ||| resource $ann float $sarprop_step_error_threshold_factor	count=1
namespace	au client ||| mongocursorinterface	count=1
function_name	accéder à chaque ||| nl langinfo	count=1
function_name	par ||| newt form	count=1
function_name	ligne sur ||| line	count=1
arg_pair	courbe ||| float $x3 float $y3	count=1
arg_pair	avec une des fonctions ||| resource $psdoc string $style	count=1
function_name	les modules à surveiller ||| set module	count=1
function_name	la base ||| fbsql	count=1
function_name	bits de types or ||| or	count=1
namespace	mettre à ||| quickhashstringinthash	count=1
return	pour la durée du ||| string	count=1
arg_pair	à un index d'une ||| resource $image int $index	count=1
arg_pair	à une ||| string $password	count=1
function_name	le serveur distant ||| ssh2	count=1
function_name	langage courant ||| language	count=1
function_name	balise donné ||| elements by	count=1
function_name	nombre maximal ||| highlight max	count=1
return	coin en haut ||| bool	count=1
arg_pair	dans un fichier ||| string $filename int $flags	count=1
function_name	le fichier ||| openssl csr export to file	count=1
function_name	complétée à droite à ||| str pad	count=1
function_name	du champ ||| mysql field	count=1
arg_pair	jeu ||| string $classname	count=1
function_name	de la ||| numfields	count=1
function_name	informations de ||| stat	count=1
function_name	avec un traitement ||| preview	count=1
function_name	récupère la ||| get facet offset	count=1
function_name	[function_name_1] algorithmes de ||| [function_name_1] [function_name_2]	count=1
function_name	spécifie le schéma ||| yaz schema	count=3
function_name	le terminal supporte les ||| ncurses has colors	count=1
function_name	à ||| load string	count=2
arg_pair	src_x [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	efface l'entrée spécifiée ||| delete	count=1
arg_pair	couleur de fond ||| mixed $background	count=1
function_name	cette fonction est ||| eregi	count=1
function_name	défini l'uri ||| uri	count=1
function_name	utilisée ||| zip	count=1
function_name	forme de ||| to string	count=1
function_name	à une nouvelle ||| new	count=1
function_name	récupère le taux de ||| get connection rate	count=1
arg_pair	de needle dans ||| string $needle	count=1
function_name	de sortie pour ||| set output	count=1
arg_pair	résultats listant les tables ||| string $schema	count=1
arg_pair	[arg_pair_1] flags ||| [arg_pair_2] int $pri [arg_pair_1]	count=4
function_name	la forme et tous ||| newt form destroy	count=1
function_name	boucle ||| eio event	count=1
namespace	libère ||| function	count=1
namespace	de caractères d'instance ||| sdo_das_xml	count=1
function_name	retourne la couleur ||| get	count=1
function_name	caractères du document fdf ||| fdf	count=1
arg_pair	auparavant ||| string $text	count=1
function_name	la ||| gmmktime	count=1
function_name	stagnation candidates en cascade ||| fann set cascade candidate stagnation	count=1
function_name	page pour utilisation ||| open pdi page	count=1
arg_pair	de seuil ||| float $sarprop_step_error_threshold_factor	count=1
arg_pair	la chaîne str ||| string $str mixed $encoding_list	count=1
function_name	[function_name] une ||| [function_name]	count=1
function_name	fonction [function_name_2] ||| [function_name_1] [function_name_2]	count=12
namespace	qui place ||| arrayobject	count=1
function_name	[function_name_1] lue dans ||| [function_name_2] [function_name_1]	count=10
function_name	la chaîne de ||| db2 escape	count=1
function_name	l'événement ||| event	count=2
function_name	compile un script php ||| opcache compile	count=1
function_name	fonction ||| gmmktime	count=1
return	la fonction closedir() ||| void	count=1
namespace	la totalité ||| function	count=1
function_name	révision spécifique ||| svn	count=1
function_name	toutes ||| construct	count=1
function_name	erreur de la dernière ||| errno	count=1
function_name	contenant ||| hexdec	count=1
function_name	devant les ||| string	count=1
namespace	par le gestionnaire ||| function	count=1
function	de fenêtre [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	est une fonction interne ||| is	count=1
namespace	de statistiques collectées par ||| function	count=1
function_name	l'échelle les données d'entrée ||| fann scale	count=1
arg_pair	jusqu'à maxlength octets ||| int $maxlength	count=1
function_name	le périphérique racine ||| gupnp root device get	count=1
arg_pair	est dirname ||| string $dirname resource $context	count=1
function_name	[function_name_1] résultat mnogosearch ||| [function_name_2] [function_name_1]	count=2
function_name	récupère la clé courante ||| key	count=2
arg_pair	d'un fichier faisant ||| int $length int $pri	count=1
function_name	retourne ||| get	count=251
return	une chaîne ||| string	count=15
function_name	évalue le code fourni ||| eval	count=1
function_name	qu'elle fonctionne avec ||| proc close	count=1
arg_pair	fait ||| string $pattern string $string	count=1
function_name	un lien symbolique pour ||| symlink	count=1
function_name	[function_name_1] de noms ||| [function_name_1] [function_name_2]	count=3
function_name	ressources mémoires utilisées par ||| form destroy	count=1
function_name	de mémoire maximale ||| peak usage	count=2
arg_pair	et retourne la ||| bool $part string $encoding	count=1
namespace	a terminé son exécution ||| collectable	count=1
function_name	utilisée lors de l'ajout ||| method	count=1
namespace	de la totalité de ||| function	count=1
namespace	la première ligne ||| splfileobject	count=1
function_name	minimale de l'étape peut ||| min	count=1
function_name	d'époques de stagnation candidates ||| candidate stagnation	count=1
function_name	fichier au sein de ||| compressed	count=1
function_name	la fréquence [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	le serveur ||| string $cookie	count=1
function	sélectionne [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=15
function_name	remous ||| swirlimage	count=1
arg_pair	une chaîne dans un ||| int $bid	count=1
namespace	fonction configure l'analyseur ||| function	count=1
function_name	[function_name_1] taille ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] le nom ||| [function_name_2] [function_name_1]	count=18
function_name	bords et remplit la ||| pdf closepath fill stroke	count=1
function_name	[function_name] de l'agent ||| remove [function_name]	count=1
function_name	révision spécifique ||| svn log	count=1
arg_pair	propriété hwnd de l'instance ||| int $window_handle int $client_area	count=1
function_name	[function_name_1] [function_name_2] l'algorithme et ||| function resource [function_name_1] [function_name_2]	count=1
function	[function_name_1] l'algorithme ||| [function_name_1] [arg_pair_2]	count=3
namespace	à ||| samconnection	count=1
function_name	retourne ||| variant get	count=1
function_name	objet ||| fetch object	count=1
function_name	gestionnaire d'événements ||| handler	count=1
arg_pair	[arg_pair] de ||| [arg_pair]	count=4
function_name	filtre entier à ||| set filter range	count=1
return	récupère des ||| array	count=1
function_name	maximale [function_name_2] ||| [function_name_2] [function_name_1]	count=9
arg_pair	centrée sur ||| int $cy	count=1
function	sauvegarde le [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
arg_pair	d'un itérateur dans ||| traversable $iterator	count=1
function_name	du champ qui ||| field	count=1
arg_pair	tableau array1 qui ||| array $array1 array $array2	count=1
function_name	méthode gearmanclient::do() est ||| do	count=1
function_name	détruit ||| fann destroy	count=1
arg_pair	dans ||| resource $result_id	count=1
function_name	vérifier la présence d'événements ||| max dispatch interval	count=1
arg_pair	clé key existe ||| string $key mixed $value	count=1
function_name	paire de ||| stream socket pair	count=1
arg_pair	chaîne data [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	méthode retourne une ||| get resource	count=1
function_name	est de type ||| is	count=3
function_name	protéger tous ||| mysql escape	count=1
function_name	récupère [function_name_2] ||| [function_name_1] declaring [function_name_2]	count=1
function_name	fonctionne avec ||| close	count=1
function_name	[function_name_1] connexion ||| [function_name_2] [function_name_1]	count=2
arg_pair	path ||| string $path	count=2
function_name	retourne la chromacité de ||| get image	count=1
function_name	sélectionne une base de ||| db query	count=1
function_name	supprimé les caractères invisibles ||| trim	count=1
arg_pair	packet_id ||| resource $packet_id	count=1
namespace	de la base de ||| function	count=1
function_name	de ligne ||| line	count=1
arg_pair	à fournir à ||| string $contents int $status	count=1
return	en entrée ||| bool	count=1
arg_pair	d'un ||| int $length	count=1
function_name	[function_name_1] associée ||| [function_name_1] [function_name_2]	count=3
function_name	de l' eventbuffer courant ||| add	count=1
namespace	retourne tous ||| solrparams	count=1
function_name	pour gérer ||| set error	count=1
namespace	fourni par le ||| eventbuffer	count=1
function_name	doit être ||| set metadata	count=1
function_name	nombre ||| sybase num	count=1
arg_pair	link ||| resource $link	count=1
function_name	de départ ||| start line	count=1
function_name	un nom à ||| name	count=1
function_name	lit ||| get status	count=2
function_name	le composant statistique ||| stats	count=1
namespace	définie dans l'espace ||| reflectionfunctionabstract	count=1
function_name	retourne la ||| pdf get	count=1
function_name	dossier d'archives spécifié par ||| compressionmethod	count=1
arg_pair	sur les ||| string $pattern string $string	count=1
namespace	simplexmliterator a des ||| simplexmliterator	count=1
function_name	stoppe une ||| stop	count=1
function_name	par ||| compressionmethod	count=1
function_name	[function_name_1] disposition courante ||| [function_name_1] page [function_name_2]	count=1
arg_pair	le ||| int $hour int $minute	count=1
function_name	interne passé via la ||| inner	count=1
arg_pair	php ou une ||| string $name	count=1
function_name	garde la ||| keepalive	count=1
function_name	page pour utilisation ||| page	count=1
function_name	version xbm ||| imagexbm	count=1
arg_pair	cubrid_set_add() est utilisée ||| string $attr_name string $set_element	count=1
function_name	d'octets dans le ||| byte	count=1
return	tous les ||| boolean	count=1
function_name	[function_name_1] ligne courant ||| [function_name_1] [function_name_2]	count=1
return	d'exécution ||| void	count=1
function_name	la définition de ||| meta data	count=1
function_name	complétée jusqu'à la ||| pad	count=1
function_name	maximale de sortie ||| max	count=1
function_name	[function_name_1] candidate ||| [function_name_1] [function_name_2]	count=4
function_name	eventbufferevent::connecthost() ou une chaîne ||| string	count=1
arg_pair	spécial ||| int $major	count=1
function_name	nis ||| yp	count=1
function_name	memcached::append() mais la ||| append by	count=1
function_name	du thread de la ||| mysqli thread	count=1
arg_pair	paramètre eol_style ||| int $start int $eol_style	count=1
function_name	ferme la ||| close	count=1
namespace	pixels ||| gmagick	count=1
function_name	sur la ||| dbplus getlock	count=1
function_name	attribut avec l'espace de ||| attribute ns	count=1
function_name	supprime un des ||| remove	count=1
arg_pair	la valeur du ||| string $value	count=1
function_name	d'erreurs libxml standard ||| libxml use	count=1
function_name	pour tracer ||| maxdb	count=1
function_name	une ligne de ||| odbc fetch	count=1
namespace	pointeur ||| function	count=1
function_name	binaire ||| binary	count=2
function_name	objet slob ouvert ||| slob	count=1
arg_pair	un fichier ||| int $major	count=1
function	[function_name_1] d'une carte ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	une commande au serveur ||| resource $connection	count=1
function_name	les ||| proc close	count=2
function_name	fonction de rappel à ||| set callback	count=1
function_name	le fait que les ||| gmmktime	count=1
function_name	à un marqueur oracle ||| oci bind array by	count=1
function_name	message d'erreur [function_name_2] ||| [function_name_1] [function_name_2]	count=3
namespace	de données ||| mongocursor	count=1
return	depuis ||| string	count=2
arg_pair	la position courante ||| resource $psdoc	count=1
function_name	l'identifiant ||| crack	count=1
function_name	un dossier ||| dir	count=2
arg_pair	[arg_pair_1] la suppression ||| [arg_pair_2] [arg_pair_1]	count=3
namespace	spécifié par son ||| function	count=1
function_name	en utilisant [function_name] crochets d'accès ||| offset [function_name]	count=1
namespace	simplexmliterator au premier élément ||| simplexmliterator	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] string $outfilename [arg_pair_1]	count=6
function_name	d'objets résultants et ||| batch	count=1
namespace	mutex pour ||| mutex	count=1
return	capture de ||| resource	count=1
function_name	le socket ||| socket error	count=1
arg_pair	connexion sur une base ||| string $servername	count=1
return	utile que si ||| bool	count=1
function_name	[function_name_1] mate ||| [function_name_2] [function_name_1]	count=2
function_name	les ||| newt form destroy	count=6
function_name	couches cachées ||| function hidden	count=1
arg_pair	est dirname ||| string $dirname	count=1
namespace	[namespace] en utilisant ||| [namespace]	count=2
arg_pair	la fonction callback aux ||| callable $callback	count=1
namespace	la dernière requête ||| sqlite3	count=1
function_name	xml parser ||| xml parser	count=1
return	distants rpc ||| boolean	count=1
namespace	externe ||| iteratoraggregate	count=1
function_name	ingres_query() ||| ingres num	count=1
return	précédemment ||| bool	count=1
function_name	verrou de ||| cubrid lock	count=1
function_name	de jointure ||| line join	count=1
function_name	[function_name_1] suivant est ||| [function_name_2] [function_name_1]	count=2
function_name	un dictionnaire ||| enchant broker set	count=1
function_name	remous autour ||| swirlimage	count=1
return	est similaire ||| domelement	count=1
namespace	de l'objet sous ||| solrparams	count=1
function_name	de rendu courant ||| rendering	count=1
function_name	requête appelée dans le ||| mysqli stmt	count=1
function_name	ou plusieurs fonctions ||| function	count=1
function_name	récupère les arguments d'une ||| get args	count=1
arg_pair	une ||| resource $image	count=3
namespace	partiellement ou ||| function	count=1
namespace	ou d'une ||| function	count=1
function_name	faible priorité ||| task low	count=1
namespace	l'échelle les images ||| imagick	count=1
function_name	secondes ||| eio set max poll time	count=2
function_name	minimale du client ||| min	count=2
arg_pair	jours du calendrier julien ||| int $month int $day	count=1
function_name	récupère la prochaine ligne ||| fetch object	count=1
function_name	fonction eio_chmod() modifie les ||| eio chmod	count=1
arg_pair	socket un flux ou ||| mixed $socket	count=1
function_name	que les ||| event	count=1
function_name	les composants ||| newt	count=2
arg_pair	définit un nouveau mot ||| resource $handle	count=1
function_name	le dernier ||| db2 last insert id	count=1
function_name	tracer la ||| debug	count=1
function_name	le nom du cipher ||| cipher name	count=1
return	la file d'attente s'interrompt ||| void	count=1
function_name	ligne précédente de la ||| prev	count=1
rep	[namespace_1] [rest_2] ||| [namespace_1] [rest_2]	count=26
function_name	doit ||| construct	count=1
function_name	lit le contenu ||| ob get	count=1
return	profil 8bim [return] présent ||| [return]	count=1
function_name	prépare le prochain résultat ||| next result	count=1
function_name	l'extension pour la constante ||| to extension	count=1
arg_pair	ou ||| int $major	count=1
function_name	image ||| image	count=33
function_name	enregistrements de ||| out	count=1
function	extrait [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	un fichier spécial ||| posix mknod	count=1
function_name	les textes qui correspondent ||| ereg	count=1
function_name	alias basé sur une ||| alias	count=1
return	un document xml ||| string	count=1
function	dns associées [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	première contient ||| mongodb $db	count=1
namespace	pour ||| recursivetreeiterator	count=1
function_name	[function_name_1] police ||| [function_name_2] [function_name_1]	count=12
function_name	z39.50 scan request ||| scan	count=1
function_name	[function_name_1] terme sur ||| [function_name_1] [function_name_2]	count=1
arg_pair	l'écoute ||| int $denominator	count=1
return	données retourne les ||| bool	count=1
function_name	returns [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	autour des liens ||| set border dash	count=1
arg_pair	colonne correspondant ||| int $field_offset	count=1
function_name	de jacobi de a ||| jacobi	count=1
return	peut être ||| void	count=2
function_name	devant les ||| db2 escape	count=1
function_name	système de fichiers distant ||| ssh2 sftp stat	count=1
function_name	la réponse courante ||| response	count=1
namespace	un verrou acquis avec ||| eventbuffer	count=1
function_name	le ||| type	count=1
arg_pair	commence par =?iso-8859-1?... ||| string $field_value	count=1
return	depuis le php ||| string	count=1
arg_pair	excepté le fait que ||| int $second	count=1
function_name	[function_name_1] élément enfant ||| [function_name_2] [function_name_1]	count=1
function_name	valeur qui [function_name] trop ||| [function_name]	count=1
function_name	ajoutés à la ||| newt form	count=1
function_name	compression utilisée sur le ||| compressionmethod	count=1
function_name	[function_name_1] les bases ||| [function_name_2] [function_name_1]	count=2
return	de résultats à envoyer ||| bool	count=1
arg_pair	crée un fichier ||| string $filename	count=1
function_name	en ||| string	count=1
function_name	[function_name_1] du thread ||| [function_name_2] [function_name_1]	count=10
arg_pair	php event_handler ||| string $event_name1	count=1
function_name	la durée du script ||| set include path	count=1
function_name	version courante [function_name_2] ||| [function_name_2] get [function_name_1]	count=2
function_name	les ||| uudecode	count=2
function_name	de [function_name] ||| set [function_name]	count=1
function_name	en évidence à ||| highlight	count=1
arg_pair	des filtres en cours ||| bool $exclude	count=1
function_name	les clés ||| key	count=1
arg_pair	utilisé avec event_add() ||| resource $event mixed $fd	count=1
function_name	l'api cubrid ||| cubrid	count=2
function_name	la couleur spécifiée sous ||| color value	count=1
function_name	message d'erreur de l'analyseur ||| error	count=1
arg_pair	récupère la nth -ème ||| int $nth	count=1
function_name	un curseur typiquement ||| size	count=1
namespace	par l'option de ||| function	count=4
function_name	s'interrompt ||| set max	count=1
namespace	du ||| function	count=7
namespace	la direction spécifiée par ||| function	count=1
namespace	des ||| mongogridfs	count=1
function_name	de l'objet sous ||| string	count=1
arg_pair	immédiatement l'objet [arg_pair] ||| [arg_pair]	count=1
return	parfois avec file_put_contents() si ||| bool	count=1
arg_pair	significations spéciales [arg_pair] html et ||| [arg_pair]	count=1
arg_pair	modifie les ||| resource $p string $key	count=1
namespace	lit le contenu ||| function	count=1
function	[function_name_1] class ||| [function_name_1] parents mixed $class [arg_pair_2]	count=3
function_name	une chaîne de caractères ||| string	count=1
function_name	durée ||| path	count=1
function_name	délai maximum ||| timeout	count=1
namespace	avec ||| eventbuffer	count=1
function_name	de ||| snmp set oid	count=1
function_name	fichier spécial ou ||| posix mknod	count=1
function_name	arrière plan ||| high	count=1
arg_pair	un point ||| resource $p	count=1
namespace	normalement en d'autres termes ||| ev	count=1
namespace	[namespace] null au ||| [namespace]	count=1
namespace	colonnes de la ||| function	count=1
arg_pair	un niveau ||| resource $p float $g	count=2
function_name	l'échelle les sorties ||| fann scale output	count=1
namespace	gestionnaire de ||| gearmanjob	count=1
namespace	un fichier au ||| pharfileinfo	count=1
function_name	yaml de la ||| yaml emit file	count=1
function_name	compare la variable ||| wincache ucache	count=1
function_name	pour stocker les ||| array iterator	count=1
namespace	à surveiller avec les ||| mongolog	count=1
function_name	statut spécifié grâce à ||| add task status	count=1
function_name	définit l'image à ||| set mask	count=1
function_name	phar::startbuffering() ||| buffering	count=1
arg_pair	une méthode avancée et ||| string $key	count=1
return	données du fichier ||| array	count=1
function_name	définit l'image de ||| setimagescene	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2] except splobjectstorage $storage	count=1
function_name	fourni et extrait dans ||| mailparse uudecode	count=1
function_name	l'échelle les entrées ||| scale	count=1
function_name	plus de ||| max	count=1
function_name	de caractères passée ||| escape string	count=1
function_name	les mots ||| word	count=1
function_name	[function_name_1] genre ||| [function_name_2] [function_name_1]	count=1
function_name	qui décide ||| mysqlnd qc set	count=1
function_name	cette fonction vérifie si ||| opcache is	count=1
arg_pair	memcache::connect() avec la différence ||| string $host	count=1
function_name	serveur distant et ||| ssh2	count=1
namespace	timestamp timestamp ou l'heure ||| function	count=1
function_name	contenant la ||| db2	count=1
function_name	sélectionne ||| mysql db query	count=2
function_name	peuvent ||| metadata	count=1
namespace	evchild::__construct() ||| evchild	count=1
function_name	copie exacte de ||| rcrtexact	count=1
namespace	connexion ||| eventhttpconnection	count=1
arg_pair	la base de données ||| resource $link_identifier	count=1
function_name	matrice de transformation ||| trans matrix	count=1
function_name	été ajoutés à ||| destroy	count=1
namespace	des messages retournés par ||| function	count=1
function_name	signal indiqué ||| signal	count=1
arg_pair	un attribut ||| string $index	count=1
function_name	du client ||| client	count=3
function_name	grégorien ||| gregoriantojd	count=1
function_name	attend [function_name] réponses ||| [function_name]	count=1
function_name	ouvre [function_name_2] ||| function resource [function_name_2] [function_name_1] string $algorithm string $algorithm_directory	count=2
function_name	caractère de l'entrée utilisateur ||| char	count=1
function_name	file de messages ||| queue	count=2
function_name	que pour stocker des ||| metadata	count=1
return	vérifie les informations de ||| object	count=1
function	récupère [arg_pair_2] ||| [function_name_1] post [arg_pair_2]	count=2
function_name	caractères d'instance ||| load	count=1
namespace	l'espace utilisateur au lieu ||| reflectionfunctionabstract	count=1
function_name	un patch binaire ||| xdiff string patch binary	count=1
function_name	la création du blob ||| blob	count=1
return	le dessin des lignes ||| bool	count=1
function_name	est de [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	php d'un ||| bool	count=1
function_name	préfixe de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	sert ||| shmop delete	count=2
arg_pair	sur la [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	retourne ||| to	count=3
function_name	ajoutés à la forme ||| form	count=1
function_name	fichier fourni ||| mailparse uudecode	count=1
function_name	données n'a plus ||| dead	count=1
function_name	allant ||| strstr	count=1
arg_pair	grand degré de ||| string $cwd	count=1
arg_pair	correspondant à la ||| resource $result	count=1
function_name	retourne ||| get contents	count=2
function_name	l'ensemble des fonctions gettext() ||| bind textdomain codeset	count=1
namespace	timestamp ||| mongotimestamp	count=1
arg_pair	original définie ||| string $original string $alias	count=1
function_name	peut ||| set module	count=2
function_name	appelle la [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	messages ou ||| function	count=1
function_name	va protéger ||| mysql escape string	count=1
function	du [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	efface le ||| bool	count=1
function_name	avec un ||| by id	count=1
function_name	effectue alors une division ||| variant idiv	count=1
arg_pair	envoie une requête ||| resource $connection string $query	count=1
function_name	ressource de connexion ||| yaz connect	count=1
function_name	et [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	la base de ||| bool	count=2
function_name	tests sur ||| uintersect uassoc	count=1
function_name	afficher les [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	jeu de ||| resource $stmt string $classname	count=1
arg_pair	affiche le prompt et ||| callable $callback	count=1
namespace	dictionnaire représenté par ||| function	count=1
function_name	msql et le ||| msql data	count=1
function_name	distant ||| ssh2 sftp stat	count=2
function_name	connexion persistante en cas ||| pconnect	count=1
arg_pair	une ||| string $name callable $function	count=1
arg_pair	sur le nombre de ||| int $offset string $encoding	count=1
function_name	soap ||| soap	count=2
arg_pair	un fichier vers ||| string $filename resource $context	count=1
namespace	collections : ||| mongogridfs	count=1
function_name	d'occurrences ||| substr	count=2
function_name	obtient ||| sybase fetch	count=1
function_name	statut en ||| status	count=1
namespace	méthode ||| recursivetreeiterator	count=1
return	gestionnaire de travaux assigné ||| string	count=1
function_name	récupère la [function_name_2] ||| [function_name_1] max [function_name_2]	count=1
function_name	[function_name_1] associé avec ||| [function_name_1] [function_name_2]	count=3
function_name	qui s'y ||| mailparse	count=1
function_name	libère toute ||| ldap free	count=1
function_name	tag image en ||| picture	count=1
arg_pair	fonction mktime() ||| int $second int $month	count=1
function_name	candidates en cascade ||| set cascade candidate	count=1
function_name	fenêtre ||| v	count=1
return	ignore la ||| int	count=1
function_name	les ||| close	count=1
function	définition de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	mnogosearch ||| udm get res param	count=2
function	désactive [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	de la position offset ||| int $offset	count=2
function_name	initialisée avec db2_connect() ||| db2	count=1
function_name	une région d'une image ||| image region	count=1
function_name	une demande radius ||| radius	count=1
function_name	[function_name_1] chiffrement de ||| [function_name_2] [function_name_1]	count=3
function_name	ferme ||| close	count=12
function_name	fonctions de [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	défini ||| resource $errdat	count=1
arg_pair	donnée data ||| mixed $data	count=1
function_name	fonctions de ||| set	count=1
arg_pair	sur ||| resource $ann	count=1
function_name	libère toutes les ||| base free	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] int $page [arg_pair_1]	count=9
function_name	d'interpolation ||| interpolate	count=1
function_name	du service fam ||| fam	count=1
function_name	parent en xml ||| xml	count=1
function_name	récupère la ||| get string	count=1
namespace	réponse à ||| streamwrapper	count=1
function_name	qui représente ||| mysql	count=1
function_name	carte de ||| colormap	count=1
function_name	fond de ||| background	count=1
function_name	sortie en cascade ||| cascade output	count=1
function_name	des mots en deçà ||| mlt	count=1
arg_pair	fonction est identique ||| string $pattern	count=1
namespace	courant interne est ||| solrdocument	count=1
function_name	implosé par un pourcentage ||| implode image	count=1
function_name	scan request ||| scan	count=1
function_name	le parent ||| parents	count=1
function_name	défini l'uri de ||| base uri	count=1
function_name	les variables ||| array	count=1
function_name	les regroupements ||| group	count=1
arg_pair	anonyme à partir des ||| string $code	count=1
function_name	donné sur le dictionnaire ||| crack check	count=1
namespace	xsltprocessor::setparameter() ||| xsltprocessor	count=1
arg_pair	identique ||| int $second int $month	count=1
function_name	le reste ||| mod	count=1
function_name	les informations de ||| rrd	count=1
namespace	code ||| gmagickdraw	count=1
namespace	objet yaf_application ||| yaf_application	count=1
function_name	par objet lorsque ||| set	count=1
function_name	fonctions pspell ||| pspell new	count=1
arg_pair	fonction cubrid_connect() est ||| string $passwd bool $new_link	count=1
namespace	à la position ||| limititerator	count=1
function_name	dossier ||| mkdir	count=1
function_name	utilisée sur ||| entry	count=1
function_name	elle prend plus de ||| set max poll	count=1
return	au début de la ||| bool	count=1
function_name	l'url ||| url	count=1
function_name	page et ||| page	count=1
arg_pair	dans la largeur ||| string $text float $width	count=1
arg_pair	sur le serveur ||| resource $session string $term_type	count=1
function_name	numéro de [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	cette fonction crée une ||| create cdatasection	count=1
function_name	la file de messages ||| msg queue	count=1
namespace	longueur est spécifiée par ||| function	count=1
function_name	[function_name_1] attribut par ||| [function_name_2] [function_name_1]	count=1
function_name	socket créé précédemment ||| socket accept	count=1
return	[return] le ||| [return]	count=5
arg_pair	affecte le flag spécifié ||| string $flag int $options	count=1
function_name	en anglais de ||| msg	count=1
arg_pair	font retourné ||| resource $pdfdoc int $font	count=1
arg_pair	la fonction cubrid_bind() est ||| mixed $bind_value	count=1
return	se déplace de la ||| void	count=1
arg_pair	saturation ||| float $saturation	count=1
function_name	la file ||| eio	count=1
function_name	stocker des données ||| set	count=1
namespace	exclusif qui a ||| function	count=1
namespace	un identifiant donné ||| domdocument	count=1
function_name	le ||| dbase numfields	count=2
arg_pair	une méthode avancée ||| string $key	count=1
arg_pair	d'un ||| int $y	count=1
function_name	[function_name_1] l'attribut ||| [function_name_2] [function_name_1]	count=6
namespace	de l'archive phar ||| phar	count=1
namespace	définie avec la méthode ||| gearmanclient	count=1
arg_pair	définit le ||| int $first_num	count=1
function_name	facteur de ||| threshold factor	count=1
return	sur ||| int	count=2
function	puissance [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	ibase_connect() ou ibase_pconnect() ||| ibase drop	count=1
function_name	[function_name_1] mssql_fetch_array() ||| [function_name_2] [function_name_1] object resource $result	count=1
arg_pair	de size ||| array $array int $size	count=1
function_name	serveur racine ||| gupnp root device stop	count=1
return	à ||| array	count=1
arg_pair	de cartes de seuil ||| string $threshold_map	count=1
namespace	données représentée par l'identifiant ||| function	count=1
namespace	vérifie si le curseur ||| mongocursorinterface	count=1
arg_pair	spotname ||| string $spotname	count=1
arg_pair	nbytes octets de ||| int $bid int $nbytes	count=1
arg_pair	les arguments ||| resource $action	count=1
function_name	une exécution ultérieure avec ||| prepare	count=1
function_name	retire un ||| curl multi remove handle	count=1
namespace	par documents par ||| mongocursor	count=1
namespace	déplace l'itérateur ||| limititerator	count=1
function_name	pdf [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	par brush ||| resource $image resource $brush	count=1
namespace	comprise entre 0 ||| imagickpixel	count=1
function_name	considère array comme ||| push	count=1
function_name	qui décide si ||| qc	count=1
arg_pair	et produit une chaîne ||| string $from string $to	count=1
function_name	statut spécifié grâce à ||| status	count=1
function_name	[function_name_1] symbolique ||| [function_name_2] [function_name_1] int $token	count=1
namespace	le code javascript passé ||| v8js	count=1
arg_pair	windows ||| int $operation	count=1
return	les valeurs ||| void	count=1
function_name	un fichier spécial ||| mknod	count=1
function_name	timestamp handler qui ||| timestamp	count=1
return	en haut à gauche ||| bool	count=1
arg_pair	le fichier fieldname téléchargé ||| resource $fdf_document string $fieldname	count=1
namespace	par arrayobject::getiterator() ||| arrayobject	count=1
arg_pair	l'aide de ||| string $prefix	count=1
return	être partagé [return] plusieurs applications ||| [return]	count=1
function_name	pour afficher ||| set show	count=2
function_name	dernière ||| last	count=8
function_name	le ||| crack	count=1
function_name	le premier [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	[function_name_1] [function_name_2] du stockage courant sauf ||| [function_name_1] [function_name_2]	count=1
function_name	retourne [function_name_2] ||| [function_name_1] train [function_name_2]	count=1
function_name	l'échelle les ||| scale	count=4
namespace	affiche ||| imagick	count=1
function_name	de l'image pour créer ||| shade image	count=1
namespace	mode i/o ||| gearmanworker	count=1
namespace	locale ou ||| function	count=1
function_name	les ||| apd	count=1
function_name	carte de couleurs ||| colormap image	count=2
function_name	attente) depuis ||| sys getloadavg	count=1
arg_pair	du domaine ||| string $domain	count=1
function_name	retourne le contenu ||| get from	count=3
function_name	copie de travail ||| svn	count=1
namespace	distants rpc ||| yar_concurrent_client	count=1
function_name	[function_name_1] la police ||| [function_name_1] [function_name_2]	count=2
function_name	facteurs d'échantillonnage de ||| sampling factors	count=1
function_name	preg_replace() ||| preg replace	count=1
function_name	un guid ||| guid	count=1
function_name	un timestamp unix ||| timestamp	count=1
function_name	dernier message d'erreur ||| error	count=1
function_name	trace de ||| trace	count=2
function_name	pdi ||| pdi	count=1
arg_pair	attrappées par ||| string $arg	count=1
function_name	à la ||| get element by id	count=1
function_name	l'endroit ||| fann	count=1
function_name	configuration [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	l'attribut attribute à ||| string $attribute	count=1
function_name	un document xml ||| save xml	count=1
function_name	de configuration ||| set include	count=1
function_name	autour des liens ||| pdf set border dash	count=1
function_name	personnalisées dans un ||| metadata	count=1
arg_pair	le fichier resolv.conf et ||| int $flags string $filename	count=1
namespace	caractères ||| gmagickdraw	count=1
namespace	tar cette méthode compresse ||| phardata	count=1
function_name	identifiant unique pour l'objet ||| spl object hash	count=1
namespace	texte à la position ||| function	count=1
function_name	le nombre ||| cubrid num	count=1
arg_pair	un point de couleur ||| resource $p	count=1
function_name	sauve la configuration courante ||| config	count=1
function	[function_name_1] rouge vert ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	par son index field_number ||| resource $result int $field_number	count=1
function_name	la fonction ||| get element	count=1
function_name	statistiques définies ||| stats facets	count=2
function_name	include_path pour ||| set	count=1
function_name	fonction pdf_get_value() avec ||| get majorversion	count=1
function_name	sera persistante ||| pconnect	count=1
function_name	ssl dont les ||| ssl filter	count=1
arg_pair	à une valeur ||| float $value	count=1
function_name	terminal supporte les ||| ncurses has colors	count=1
function_name	de rappel ||| callback	count=4
function_name	efface un flux ||| delete textflow	count=1
namespace	donnée ||| sdo_das_xml	count=1
function_name	devrait être sélectionné ||| by	count=1
function_name	modifie ||| set include path	count=2
function_name	la fréquence minimale du ||| enum cache min default frequency	count=1
function_name	date ||| get	count=2
function_name	fonction eio_chmod() modifie ||| eio chmod	count=1
function_name	gestionnaire d'instructions exécutables ||| processing instruction handler	count=2
function_name	flux à utiliser ||| stream wrapper	count=1
namespace	antislashs ||| function	count=1
function_name	remplace les ||| replace	count=2
function_name	cache ||| wincache	count=7
function_name	les données blob/clob depuis ||| lob export	count=1
function	déchiffre [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	fichiers local vers un ||| resource $session string $local_file	count=1
function_name	serveur sans attendre ||| send	count=1
function_name	utilisé pour croitre la ||| increase factor	count=1
function_name	place une simple ligne ||| pdf fit textline	count=1
function_name	page pour ||| page	count=1
function_name	un résultat mnogosearch ||| udm	count=1
function_name	un filtre [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	un ||| resource $dict	count=1
function_name	un verrou de lecture ||| lock	count=1
arg_pair	l'un d'entre eux change ||| array $read	count=1
arg_pair	dans le texte ||| int $index	count=1
function_name	ne doit ||| metadata	count=1
arg_pair	les variables var .. ||| array $array	count=1
function_name	postgresql ||| pg field prtlen	count=1
function_name	la fonction ||| mysql field type	count=1
function_name	qui décide ||| qc set is select	count=1
function_name	de l'étape ||| step	count=2
function_name	commence la ||| gupnp control point browse start	count=1
function_name	paramètre de linejoin ||| pdf setlinejoin	count=1
function_name	la police ||| setfont	count=1
function_name	la clé key ||| by key	count=2
arg_pair	d'analyseur ||| resource $bbcode_container	count=1
function_name	requête de ||| facet query	count=1
namespace	une référence ||| weakref	count=1
function	[function_name_1] une entrée ||| [arg_pair_2] [function_name_1]	count=1
function_name	de données dbase ||| dbase	count=2
function_name	la base ||| db	count=1
function_name	récupère le taux ||| get connection rate	count=1
function_name	position ||| offset	count=1
arg_pair	2 nombres gmp ||| gmp $a gmp $b	count=2
function_name	retourne le numéro de ||| fann get	count=1
function_name	dernière erreur ||| errno	count=2
function	exporte [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	source et ||| int $blocksize	count=1
function_name	numéro de colonne ||| column	count=1
arg_pair	chaîne data avec ||| resource $connection string $data	count=1
arg_pair	être invoquées avant de ||| int $max_interval int $max_callbacks	count=1
arg_pair	à cet agent ||| int $port	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=266
function_name	cette ||| id	count=1
namespace	qui ont ||| function	count=1
arg_pair	signature1 et la signature2 ||| string $signature2	count=1
function	[function_name_1] msg_number pour ||| [arg_pair_2] [function_name_1]	count=3
function_name	de jacobi de ||| jacobi	count=1
function_name	ou définir l'identifiant ||| id	count=1
namespace	[namespace] le ||| [namespace]	count=14
function_name	similaire à ||| by id	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] genre [function_name_2]	count=3
function_name	ajoute le code ||| add doc javascript	count=2
function	[function_name_1] [arg_pair_2] mémoire ||| [function_name_1] [arg_pair_2]	count=3
function_name	méthode subscribe est utilisée ||| subscribe	count=1
function_name	de l'image ||| image	count=30
function	clé metaphone [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] contexte ||| [function_name_2] [function_name_1]	count=6
arg_pair	système de fichiers ||| resource $sftp	count=1
arg_pair	nom de domaine ||| string $domain	count=1
function_name	éléments principaux ||| principals	count=1
namespace	sur le serveur ||| memcache	count=1
function_name	dbms_sql.return_result [function_name] ||| [function_name] get implicit	count=1
arg_pair	[arg_pair_1] données microsoft ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	à la base sqlite ||| sqlite	count=1
function_name	[function_name_1] ligne lue ||| [function_name_2] [function_name_1]	count=2
arg_pair	occurrence de ||| string $needle	count=1
namespace	du jeu de ||| gmagickdraw	count=1
arg_pair	dans la boîte aux ||| int $options	count=1
arg_pair	est une méthode ||| string $key	count=1
function_name	méthode mongoclient::close() [function_name] ||| [function_name]	count=1
return	pour ||| int	count=2
function_name	fonction retourne true si ||| mcrypt module is	count=1
function_name	supprime le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	la recherche sur les ||| string $pattern string $string	count=1
return	[return] flux ||| [return]	count=2
arg_pair	une image ||| resource $image	count=1
arg_pair	ou distante ||| bool $is_null	count=2
function_name	liens ajoutés ||| border color	count=1
namespace	par l'application ||| function	count=1
arg_pair	depuis la ||| int $options	count=1
function_name	par la forme et ||| destroy	count=1
function_name	bords et remplit ||| pdf closepath fill	count=1
function_name	déplace le ||| move to	count=1
function_name	la file ||| max	count=1
arg_pair	réponse au client de ||| string $actor	count=1
arg_pair	structures de données ||| resource $pdfdoc int $textflow	count=1
arg_pair	index ||| resource $image int $index	count=1
function_name	effectue une requête soap ||| handle	count=1
arg_pair	recherche sur les ||| string $pattern string $string	count=1
function_name	données d'entrainement ||| train	count=2
function_name	la temporisation de sortie ||| ob end flush	count=1
arg_pair	les données ||| resource $stmt	count=1
function_name	[function_name] héritage ||| [function_name]	count=1
function_name	méthode retourne [function_name_2] ||| [function_name_1] [function_name_2]	count=5
namespace	de stocker une ||| memcached	count=1
namespace	une réponse ||| soapserver	count=1
return	de caractères de ||| string	count=1
function_name	ccl ||| yaz ccl	count=1
arg_pair	l'historique système ||| string $ident int $option	count=1
namespace	retourne ||| gmagickdraw	count=2
function_name	la taille de blocs ||| algo block size	count=1
arg_pair	les paires clé-valeur spécifiées ||| array $data	count=1
function_name	fin ||| eof	count=1
return	en ||| int	count=1
function_name	caractères brutes ||| raw	count=2
function_name	paramètres au ||| query params	count=1
function_name	la fonction d'activation pour ||| fann set activation function	count=3
namespace	fichier représenté par ||| function	count=1
function_name	la fonction geoip_country_code3_by_name() retourne ||| country code3 by	count=1
function_name	l'écrit dans le ||| fget	count=1
function_name	écrit une ||| write	count=1
function_name	récupère le nombre ||| pgsql get	count=1
function_name	de la bibliothèque ucd ||| quick print	count=1
function_name	pâques pour une année ||| easter days	count=1
return	image contenant du bruit ||| gmagick	count=1
namespace	courant vers le ||| harupage	count=1
function_name	page sous la ||| reset image page	count=1
namespace	par l'identifiant ||| function	count=3
namespace	caractères d'instance xml donnée ||| sdo_das_xml	count=1
function_name	lorsque l'on termine ||| end children	count=1
arg_pair	la clé key existe ||| string $key	count=1
function_name	longueur [function_name_2] ||| [function_name_2] iv [function_name_1]	count=1
function_name	spécifié, ||| ssh2 sftp chmod	count=2
function_name	les ||| string	count=2
function_name	passée en argument ||| db2 escape string	count=1
function_name	pour changer ||| set tag	count=1
arg_pair	une réponse au client ||| string $details	count=1
function_name	une fonction [function_name] rappel à ||| [function_name]	count=1
function	readline [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	local [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
namespace	identique à ||| function	count=2
namespace	la ||| splpriorityqueue	count=1
function_name	la chaîne de caractères ||| string	count=1
return	fin de ||| bool	count=1
namespace	la fin et ||| mongocursorinterface	count=1
function_name	feature demandée [function_name] version version ||| [function_name]	count=1
function_name	serveur ftp ||| ftp get	count=1
arg_pair	une base de données ||| string $database_name	count=1
function_name	mars et pâques pour ||| easter days	count=1
namespace	sein d'une archive phar ||| pharfileinfo	count=1
function_name	est utilisé pour croitre ||| increase factor	count=1
function_name	des mots en ||| mlt	count=1
arg_pair	d'un entier ou d'une ||| mixed $number	count=1
arg_pair	de l'étape est un ||| resource $ann float $rprop_delta_max	count=1
return	tableau ||| array	count=12
function	table [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	à l'aide de deux ||| mongogridfs	count=1
return	différences et sur ||| string	count=1
arg_pair	temporairement le monitoring d'une ||| resource $fam_monitor	count=1
arg_pair	la fonction ||| int $day	count=1
return	pour la durée ||| string	count=1
return	php d'un serveur ||| bool	count=1
function	[function_name_1] d'une base ||| [function_name_1] [arg_pair_2]	count=2
function_name	phar est [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	l'échelle les données ||| fann scale train	count=1
namespace	données binaires ||| mongobindata	count=1
function_name	fichiers encodés qui s'y ||| mailparse uudecode all	count=1
namespace	: ||| mongogridfs	count=1
function_name	ligne de ||| fbsql fetch row	count=1
arg_pair	une séquence de ||| string $haystack int $size	count=1
function_name	la méthode phar::startbuffering() peut ||| start buffering	count=1
namespace	l'espacement ||| harupage	count=1
function_name	du dernier accès ||| eio futime	count=1
arg_pair	cubrid_lob2_bind() est utilisée ||| string $bind_value_type	count=1
function_name	les fichiers encodés qui ||| mailparse uudecode all	count=1
function_name	record pour l'effacement ||| dbase delete record	count=1
function_name	flux ||| stream wrapper	count=1
function_name	retourne la largeur ||| width	count=1
arg_pair	un ||| int $operation	count=1
arg_pair	première contient les ||| mongodb $db string $prefix	count=1
function_name	[function_name_1] débogage ||| [function_name_2] [function_name_1]	count=4
namespace	la durée ||| function	count=1
namespace	l'exception émise par ||| yar_server_exception	count=1
function_name	champ à un ||| fbsql field	count=1
function_name	patch binaire et enregistre ||| patch binary	count=1
function_name	messages organisés ||| imap	count=1
function_name	dernière erreur de connexion ||| error	count=1
function_name	une nouvelle ||| new	count=5
function	analyse [arg_pair_2] ||| [function_name_1] adrlist [arg_pair_2]	count=2
function_name	service qui fonctionne ||| service	count=1
return	de caractères contenant ||| string	count=2
function_name	vérifie ||| is xml http request	count=1
function_name	oci_result() soit ||| oci	count=1
return	par le paramètre ||| bool	count=1
function_name	définit le tag image ||| picture	count=1
function_name	défini l'endroit où ||| set error log	count=1
arg_pair	un ||| eventbase $base eventdnsbase $dns_base	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] current [function_name_2]	count=15
function_name	configure ||| set	count=2
arg_pair	de données du jeu ||| resource $stmt string $classname	count=1
function_name	position du neurone de ||| neuron	count=2
function_name	sans attendre le s ||| pg send	count=1
function_name	fonction peut être ||| set	count=1
function	[function_name_1] l'évènement bevent ||| [arg_pair_2] [function_name_1]	count=1
function_name	image dans la liste ||| image	count=1
function_name	code de retour ||| wexitstatus	count=1
function_name	valeur du paramètre facet.date.end ||| facet date end	count=1
function_name	[function_name_1] les fichiers ||| [function_name_2] [function_name_1]	count=2
namespace	archive phar ||| phar	count=5
function_name	dernière opération d'encodage/décodage json ||| json last	count=1
function_name	de grande taille ||| pg lo	count=3
arg_pair	le fichier resolv.conf et ||| string $filename	count=1
function_name	réservée par une requête ||| ibase	count=1
function_name	file d'attente s'interrompt si ||| set max poll time	count=1
function_name	peut ||| module	count=1
return	un tableau identique à ||| array	count=1
function_name	fils aussi ||| has children	count=1
function_name	phar quand il est ||| phar	count=1
function_name	minimale du ||| facet enum cache min	count=1
function_name	pointeur de résultat décrivant ||| fbsql list tables	count=1
function_name	maximale candidate ||| max cand	count=1
namespace	véritable fichier ||| splfileinfo	count=1
function_name	la bufferisation des ||| buffering	count=1
function_name	à la ||| newt form destroy	count=1
return	clé et les valeurs ||| void	count=1
function_name	incrémente de ||| ucache inc	count=1
namespace	premier caractère par sa ||| function	count=1
arg_pair	procédure stockée sur ||| resource $stmt bool $skip_results	count=1
arg_pair	une priorité à bevent ||| resource $bevent int $priority	count=1
function_name	retourne le ||| stream get	count=1
function_name	de [function_name] ||| get [function_name]	count=7
arg_pair	vérifier si l'accès au ||| string $user bool $nodns	count=1
function_name	spécifié est ||| is valid	count=1
function_name	comme une ||| push	count=1
return	version courante ||| string	count=1
arg_pair	l'aide de ||| mongodb $db string $prefix	count=1
arg_pair	colonne données ||| mixed $param	count=1
function_name	si le périphérique racine ||| gupnp root device	count=1
function_name	[function_name_1] profondeur maximale ||| [function_name_1] [function_name_2]	count=1
function_name	protège les ||| pg escape	count=1
function_name	de l'attribut dans ||| attribute	count=1
arg_pair	le ||| int $read_write	count=2
function_name	référencée ||| header	count=1
arg_pair	analyse subject ||| int $limit	count=1
function_name	le paramètre patch ||| file patch	count=1
function_name	la fonction ||| get element by id	count=1
function_name	définit [function_name_2] ||| [function_name_1] max word [function_name_2]	count=1
function_name	code ||| curl multi strerror	count=1
namespace	[namespace] un cookie ||| [namespace]	count=3
return	en interne pour ||| bool	count=1
namespace	le noeud ||| tidynode	count=1
function_name	un filtre d'un ||| filter	count=1
namespace	de ||| sdo_das_xml	count=2
function_name	la file d'attente ||| set max poll time	count=1
namespace	documents par réponse ||| mongocursor	count=1
arg_pair	caractères alphabétiques ||| string $string	count=1
return	et d'autres ||| array	count=1
function_name	remplit un bloc de ||| pdf fill textblock	count=1
function_name	priorité basse en ||| low	count=1
arg_pair	identique à ||| int $day int $year	count=1
return	après un certain ||| mongocursor	count=1
namespace	brosse courante pour ||| function	count=1
namespace	le gestionnaire ||| gearmanjob	count=1
arg_pair	sybase_fetch_array() ||| mixed $object	count=1
function_name	retourne la méthode ||| zip entry	count=1
namespace	à la fonction closedir() ||| directory	count=1
function_name	retourne l'uid effectif ||| posix geteuid	count=1
arg_pair	retourne une ||| string $connection_string int $connect_type	count=1
return	parcourt un ||| mongocommandcursor	count=1
arg_pair	police de caractères ||| gmagickdraw $draw string $text	count=1
function_name	d'archives spécifié par ||| zip	count=1
function_name	[function_name_1] caractères uri ||| [function_name_2] [function_name_1]	count=1
function_name	de log actuellement activés ||| get level	count=1
function_name	des informations issus des ||| curl multi info	count=1
namespace	d'instance ||| sdo_das_xml	count=1
arg_pair	une page ||| string $dest	count=1
function_name	[function_name_1] la ligne ||| [function_name_2] [function_name_1]	count=4
arg_pair	de l'entrée dn ||| string $dn	count=3
return	la base de données ||| bool	count=2
function_name	élément ||| get element by	count=1
return	reconstruite et ||| float	count=1
namespace	la corrélation entre les ||| arrayobject	count=1
arg_pair	du jeu de résultats ||| string $classname	count=1
function_name	récupère l'adresse ip utilisée ||| get host ip	count=1
function_name	[function_name_1] de l'espace ||| [function_name_1] color [function_name_2]	count=1
function_name	curseur typiquement parcourt un ||| batch size	count=1
function_name	serveur oracle ||| oci	count=2
function_name	produit une seule image ||| image	count=1
function_name	méthode oauthprovider::timestampnoncehandler() ||| nonce handler	count=1
function_name	du contexte ||| context get	count=2
return	de réalisation de la ||| int	count=2
function_name	nouveau filtre décimal à ||| set filter float range	count=1
arg_pair	éléments d'un document ||| int $page string $optlist	count=1
function_name	lit un token ||| get access token	count=1
function_name	méthode phar::startbuffering() ||| buffering	count=1
function	souscrit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	version plurielle de ||| string $msgid1 string $msgid2	count=1
function_name	pointeur ||| closedir	count=1
function_name	[function_name_1] selon le ||| [function_name_2] [function_name_1]	count=10
function_name	analyse ||| parse addresses	count=2
return	[return] l'option flags ||| [return]	count=3
namespace	l'application précédemment définie ||| gearmanclient	count=1
function_name	absent qui est inférieur ||| empty	count=1
return	appliqué à différents niveaux ||| bool	count=1
arg_pair	nom ||| string $name	count=1
return	du tampon fourni ||| bool	count=1
namespace	reflectionextension ||| reflectionextension	count=1
function	les en-têtes [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
return	un noeud ||| domnode	count=2
function_name	est similaire à la ||| fbsql	count=1
function_name	identifiant [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	que fonctions xslt ||| xsltprocessor	count=1
function_name	tente de forcer la ||| touch	count=1
function_name	fichier temporaire tous ||| all	count=1
function_name	un tableau ||| pg fetch array	count=1
function	[function_name_1] en ||| [function_name_1] [arg_pair_2]	count=1
function_name	conversion automatique entre ||| encoding	count=1
function_name	et libère ||| buffer free	count=1
function_name	un fichier exe ou ||| write exe	count=1
function	lie un tableau php [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] une ressource ||| mongogridfsfile resource [function_name_1] [function_name_2]	count=3
function_name	déplace toutes ||| add	count=1
namespace	base ||| mongocursorinterface	count=1
arg_pair	pour vérifier si ||| string $user bool $nodns	count=1
function	taille [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	uniquement avec ||| get	count=1
function_name	[function_name_1] du segment ||| [function_name_2] [function_name_1]	count=4
function_name	sur la connexion ingres ||| ingres	count=1
namespace	récupère ||| solrdocument	count=1
return	se ||| void	count=2
function_name	les variables var ||| push	count=1
namespace	méthode ||| mongoclient	count=1
arg_pair	fourni ||| int $start int $length	count=1
function_name	représentation ||| serialize	count=1
function_name	les dimensions de la ||| metrics	count=1
arg_pair	première ||| mongodb $db string $prefix	count=1
function_name	ferme le fichier pdf ||| pdf close	count=1
function_name	un jeu ||| db2 procedure	count=1
arg_pair	la table table_name qui ||| string $table_name	count=1
return	colonnes de ||| int	count=1
function	lie un tableau php [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	affiche ||| pdf show xy	count=2
function_name	jeu de caractères ||| iconv set encoding	count=2
function_name	[function_name_1] [function_name_2] mime-type à utiliser ||| string image type to [function_name_2] [function_name_1]	count=2
function_name	l'identifiant du thread de ||| mysqli thread id	count=1
function_name	les objets ||| all	count=1
arg_pair	hormis ||| string $pattern	count=1
function_name	l'indexe de facon numérique ||| values	count=1
function_name	ou [function_name] de ||| remove [function_name]	count=1
function_name	par défaut est ||| is default	count=2
function_name	un fichier temporaire tous ||| uudecode	count=1
function_name	[function_name_1] les ticks ||| [function_name_1] last elapsed [function_name_2]	count=1
namespace	plus de ||| function	count=1
function_name	de celui-ci ||| gzrewind	count=1
function_name	qui ne ||| set metadata	count=1
function_name	casse), et jusqu'à la ||| grapheme stristr	count=1
function_name	dans le mois month ||| in month	count=1
function_name	[function_name_1] profondeur maximale ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] paramètre facet.date.hardend ||| [function_name_1] [function_name_2]	count=1
arg_pair	sur [arg_pair] ||| [arg_pair]	count=1
namespace	fonctions xslt dans les ||| xsltprocessor	count=1
namespace	par ||| eventbuffer	count=1
function_name	commence après ||| begin	count=2
arg_pair	de lecture ||| int $lob_mode	count=1
arg_pair	générateur d'extraits de ||| string $fragmenter string $field_override	count=1
function_name	chemin ||| stroke	count=1
function_name	[function_name_1] certificat ||| [function_name_2] pkcs12 [function_name_1]	count=1
function_name	et libère les ||| event buffer free	count=1
function_name	différences ||| merge	count=1
function_name	une exception ||| set exception	count=1
arg_pair	depuis une chaîne ||| int $start	count=1
namespace	tous les appels distants ||| yar_concurrent_client	count=1
function_name	referme le fichier compressé ||| gzclose	count=1
function_name	la clé [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	identique à la ||| int $second	count=1
function_name	récupère l'url ||| request url	count=1
return	base de données sur ||| mixed	count=1
function_name	retourne la couleur hsl ||| get	count=1
function_name	de toutes les bases ||| dbs	count=1
function_name	en priorité basse ||| low	count=2
arg_pair	identifiant packet_id ||| mixed $var_name	count=1
namespace	de l'application précédemment ||| gearmanclient	count=1
namespace	la bibliothèque rrdtool ||| function	count=1
return	de connexion décrite ||| bool	count=1
function_name	groupe d'appartenance ||| group	count=1
namespace	archive phar du disque ||| phar	count=1
function_name	json ||| json encode	count=1
function_name	la conversion automatique ||| encoding	count=1
function_name	l'entier ||| decbin	count=1
function_name	statut de ||| status	count=3
function_name	utilisée ||| train	count=1
function_name	au serveur ingres ||| ingres	count=1
arg_pair	spécial ou ||| int $major	count=1
function_name	noms de champs ||| field names	count=1
arg_pair	première contient ||| string $prefix	count=1
namespace	l'écriture de tous ||| splfileobject	count=1
function_name	définit la qualité de ||| ms set	count=1
namespace	du tampon fourni ||| eventbuffer	count=1
arg_pair	à la fonction mktime() ||| int $day	count=1
function_name	la chaîne de ||| db2 escape string	count=1
function_name	fonction ||| handler	count=1
function_name	pour la première fois) ||| end iteration	count=1
arg_pair	[arg_pair_1] [arg_pair_2] et sur ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	définir la valeur de ||| mixed $value int $timeout	count=1
function_name	qui avaient été ||| newt form	count=1
return	de la version courante ||| string	count=1
arg_pair	modifie les attributs ||| resource $fd array $options	count=1
function_name	ne doit être ||| set	count=1
arg_pair	ignore la ||| string $string	count=1
function_name	défini l'endroit où ||| error	count=1
function_name	été ajoutés à ||| newt form destroy	count=1
function_name	elle ||| set max poll time	count=2
return	les liens ||| array	count=1
function_name	la méthode de ||| zip entry	count=1
function_name	le dossier ||| zip	count=1
function_name	améliore le contraste ||| contrast	count=1
function_name	iidentique ||| rewind	count=1
function_name	de fonctions ||| set	count=1
function_name	évènement [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	si le ||| splfixedarray	count=1
return	un lot d'objets ||| mongocommandcursor	count=1
function_name	le bytecode et initialise ||| bcompiler	count=1
function_name	yaml ||| yaml emit	count=2
function_name	contexte de flux ||| context	count=1
function_name	einer mime kopfzeile dans ||| mime encode	count=1
arg_pair	pour ||| string $path resource $context	count=1
function_name	nouvelle ||| new pseudo	count=1
namespace	capture ||| function	count=1
function_name	courant interne ||| iterator index	count=1
function_name	utilisée que pour stocker ||| metadata	count=1
function_name	fréquence minimale du document ||| facet enum cache min default frequency	count=1
function_name	stagnation candidates ||| candidate stagnation	count=1
function_name	le jeu de caractères ||| iconv set encoding	count=1
function_name	la classe est ||| is	count=2
function_name	dernière erreur oracle ||| oci error	count=1
function_name	[function_name_1] qui sera ||| [function_name_2] [function_name_1]	count=4
function_name	de rendu de l'image ||| image rendering intent	count=1
function_name	continuer ||| loop	count=1
arg_pair	fonction ||| int $second int $month	count=1
function_name	boîtes aux lettres ||| imap	count=1
return	sur le ||| string	count=2
function_name	et tous ||| form	count=1
function_name	être utilisé pour ||| set	count=1
arg_pair	[arg_pair_1] établir l'environnement ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	paramètre oid ||| string $oid	count=1
function_name	[function_name_1] statut ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] number ||| [arg_pair_2] [function_name_1]	count=1
function_name	et ||| pdf	count=2
function_name	à ||| newt form destroy	count=2
arg_pair	fonction snmp2_get() est ||| string $community	count=1
namespace	un objet splfileobject ne ||| splfileobject	count=1
return	à l'aide de ||| mongodb	count=1
function_name	avec un ||| preview images	count=1
arg_pair	date stockée dans un ||| resource $pxdoc	count=1
arg_pair	fonction php ou une ||| string $name mixed $step_callback	count=1
return	4 mb ||| bool	count=1
namespace	courant est un ||| tidynode	count=1
namespace	à [namespace] ||| [namespace]	count=3
arg_pair	au format png en ||| int $filters	count=1
function_name	de backends supportés par ||| supported backends	count=1
namespace	élément avec un identifiant ||| domdocument	count=1
function_name	les ||| newt	count=3
function_name	au nom de ||| by name	count=1
function_name	le ||| zip	count=1
function_name	résultat décrivant ||| fbsql list tables	count=2
namespace	le contenu ||| function	count=1
function_name	[function_name_1] de sévérité ||| [function_name_2] [function_name_1]	count=1
function_name	minimale du document utilisée ||| enum cache min	count=1
namespace	toutes les classes de ||| xmldiff\base	count=1
function_name	des antislashs ||| db2	count=1
namespace	dossier d'archives ||| function	count=1
function_name	un évènement ||| event	count=1
namespace	doit ||| pharfileinfo	count=2
function_name	mémoire occupée par ||| imagepsfreefont	count=1
function_name	les regroupements [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	requête de ||| query	count=1
function_name	libeio ||| event	count=1
function_name	avec un identifiant donné ||| get element	count=1
arg_pair	[arg_pair_1] radius_config() ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	paramètres de [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	fermer ||| lob2 close	count=1
function_name	la fonction ||| mysql field	count=1
namespace	déclenché par morceaux de ||| function	count=1
function_name	xml ||| xml set	count=4
arg_pair	transforme en noeud ||| domnode $node	count=1
function_name	chaîne est nettoyée ||| is tainted	count=2
return	une variable de ||| bool	count=1
function_name	une alerte ||| warning	count=1
function_name	un fichier au ||| is	count=1
function_name	pour toutes les pages ||| set pages	count=1
function_name	récupère le document ||| get document	count=2
arg_pair	colonne ||| mixed $column	count=3
function_name	du paramètre facet.date.other ||| facet date other	count=1
arg_pair	la ||| int $hour	count=1
function_name	retourne le nombre maximal ||| get highlight max	count=1
function_name	socket_recv() reçoit ||| recv	count=1
function_name	déboguage ||| memcache debug	count=1
function_name	retourne le titre du ||| cli get	count=1
function_name	pas être ||| construct	count=1
arg_pair	queues ||| string $qmanagername resource $hconn	count=1
function_name	comme pourrait le faire ||| unbuffered query	count=1
arg_pair	depuis ||| string $filename	count=1
return	si elle ||| bool	count=2
function_name	[function_name_1] apache chargés ||| [function_name_2] [function_name_1]	count=4
arg_pair	pointant à une page ||| string $dest	count=1
function_name	taille [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	le fichier identifié ||| resource $ftp_stream	count=1
function_name	slob ouvert ||| slob	count=2
arg_pair	sur le nombre ||| int $length	count=1
arg_pair	et la ||| string $prefix	count=1
function_name	dernier message d'erreur ||| pg last error	count=2
function_name	l'étape d'erreur ||| step error shift	count=2
function_name	[function_name_1] texte ||| [function_name_1] [function_name_2]	count=3
arg_pair	cible spécifiée ||| string $target	count=1
namespace	direction spécifiée par ||| function	count=1
function_name	et extrait ||| mailparse uudecode	count=1
return	terminé ||| void	count=1
arg_pair	basé sur les différences ||| string $diff	count=1
return	du fichier ||| int	count=2
function_name	crée un objet ||| create stopped	count=3
function_name	paquet wddx ||| wddx	count=2
function_name	le content [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	qui est ||| fetch	count=1
function_name	la ||| form destroy	count=4
arg_pair	espace de ||| string $namespaceuri	count=1
namespace	à ||| mongoclient	count=1
function_name	les itérateurs ajoutés ||| array	count=1
function_name	données blob/clob ||| cubrid lob	count=1
function_name	le schéma ||| schema	count=2
function_name	[function_name_1] maximale des ||| [function_name_1] [function_name_2]	count=2
function_name	connexion persistante à ||| odbc pconnect	count=1
function_name	remplace ||| dbase replace	count=1
function	marqueur oracle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	paramètres d'échelle ||| scaling params	count=1
function_name	la ||| to string	count=2
function_name	les permissions ||| fchmod	count=1
function_name	page [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	créer ||| int $size	count=1
arg_pair	watcher associé ||| callable $callback	count=1
function_name	retourne le nom ||| get cipher name	count=1
function_name	au service ||| gupnp service proxy	count=1
function_name	document lorsqu'il est accessible ||| unset	count=1
function_name	champ est annulable ||| field nullable	count=1
function_name	filtre ||| filter prepend	count=2
return	colonnes de la base ||| int	count=1
function_name	de connexion ||| connect	count=4
arg_pair	en ||| string $encoding	count=2
function_name	liste tous les ||| mcrypt list	count=1
function_name	libeio tant que ||| eio event	count=1
arg_pair	document xml filename ||| string $filename string $class_name	count=1
function_name	d'activation pour ||| activation	count=3
namespace	nouvelle expression rationnelle ||| mongoregex	count=1
return	en suivant les liens ||| array	count=1
function_name	nouveau [function_name] automatiquement tout ||| session regenerate [function_name]	count=1
return	la mémoire allouée en ||| bool	count=1
namespace	domdocument ||| domdocument	count=1
function_name	retire un filtre d'un ||| filter remove	count=1
namespace	l'objet judy ||| judy	count=1
namespace	les fichiers encodés qui ||| function	count=1
function_name	sur la connexion spécifiée ||| sqlsrv	count=1
return	code du jeu ||| string	count=1
arg_pair	ajoute un profile ||| string $profile	count=1
function_name	de jokers à analyser ||| tokens	count=1
function_name	[function_name_1] chaque requête ||| [function_name_2] [function_name_1]	count=4
arg_pair	récupère une section ||| string $section	count=1
function_name	version xbm de ||| imagexbm	count=1
function_name	précharger par [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
function_name	de champs colonnes ||| dbase	count=1
function_name	présence d'événements de ||| max dispatch interval	count=1
namespace	régression suivant ||| svmmodel	count=1
function_name	de syntaxe lint sur ||| lint	count=1
function_name	service nommé ||| stop service	count=1
arg_pair	de la largeur ||| string $text float $width	count=1
function	liens ajoutés [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=6
function_name	le système de fichiers ||| eio fstatvfs	count=1
function_name	forme et tous ||| form	count=1
function_name	nom à ||| name	count=1
arg_pair	fichier filename dans ||| bool $use_include_path	count=1
return	que pour stocker ||| void	count=1
function_name	[function_name_1] pdf ||| [function_name_2] [function_name_1]	count=10
return	mktime() ||| int	count=1
function_name	socket socket les données ||| socket	count=1
return	compression utilisée ||| string	count=1
arg_pair	basé sur des différences ||| string $src string $diff	count=1
function_name	processus de service ||| win32	count=1
return	sqlcode représentant [return] ||| [return]	count=2
function_name	données depuis un socket ||| socket	count=1
function_name	certificat rsa ||| set rsacertificate	count=1
arg_pair	fonction callback aux ||| array $array callable $callback	count=1
function_name	stagnation candidates en cascade ||| set cascade candidate stagnation	count=1
function	[function_name_1] constante imagetype_xxx ||| [arg_pair_2] [function_name_1]	count=1
namespace	fichier fourni et ||| function	count=1
return	capture ||| resource	count=1
arg_pair	traçage ||| string $action_name	count=1
function_name	d'époques de stagnation candidates ||| candidate stagnation epochs	count=1
function_name	le socket socket ||| socket sendto	count=1
function_name	include_path ||| set include path	count=2
return	forme et ||| void	count=1
function_name	modules à ||| set module	count=1
namespace	est ||| soapclient	count=1
function_name	effectue un test sur ||| test	count=1
arg_pair	src_x src_y [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	les structures de données ||| resource $pdfdoc int $textflow	count=1
function_name	de fichiers distant en ||| ssh2 sftp	count=1
function_name	gestionnaire d'erreur ||| error handler	count=2
namespace	une ||| soapserver	count=2
arg_pair	l'objet object a ||| mixed $object	count=1
function_name	crypte le ||| blenc encrypt	count=1
function_name	du jeu de ||| db2	count=2
function_name	du tri les ||| sort	count=1
function_name	le préfixe de l'espace ||| prefix	count=1
function_name	retourne le ||| fann get	count=2
arg_pair	cet ||| int $port	count=1
function_name	fonctionne avec les ||| proc	count=1
function_name	le nom long d'un ||| frame long name	count=1
return	code du ||| string	count=1
function_name	la seconde libmcrypt 2.4.x ||| mcrypt ofb	count=1
function_name	similaire à ||| proc	count=1
arg_pair	le fait que les ||| int $second	count=1
function_name	retourne la ||| get mlt min term	count=1
function_name	retourne le [function_name_2] ||| [function_name_1] last [function_name_2]	count=3
function_name	propriété ||| property	count=1
arg_pair	verrou ||| resource $relation	count=1
function_name	des tests sur ||| array uintersect assoc	count=1
function_name	libxml standard ||| libxml use	count=1
namespace	courante pour ||| function	count=1
function_name	de l'analyseur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	la première occurrence de ||| string $haystack	count=5
namespace	que ceux de lecture ||| pharfileinfo	count=1
function_name	[function_name_1] odbc à ||| [function_name_2] [function_name_1]	count=3
function_name	les paramètres passés sont ||| gmmktime	count=1
function_name	la requête principale ||| query	count=1
function_name	le flux [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	données d'entrainement [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	améliore le contraste d'une ||| contrast stretch	count=1
function_name	vecteur d'initialisation vi ||| iv	count=1
function_name	vérifie si l'on ||| query is select	count=1
function_name	roulement en attente) depuis ||| sys getloadavg	count=1
function_name	pour lier ||| lob2 bind	count=1
function_name	contexte ||| context	count=5
namespace	la seconde contient ||| mongogridfs	count=1
arg_pair	paramètres passés ||| int $month	count=1
return	avec une connexion ||| array	count=1
arg_pair	avec la ||| resource $image array $style	count=1
function_name	la prochaine requête ||| next result	count=1
function_name	sauve dans le fichier ||| csr export to file	count=1
function_name	applique une correction gamma ||| gamma	count=1
return	objet lorsque l'objet a ||| void	count=1
function_name	liste les champs ||| fbsql list fields	count=2
function_name	champs [function_name_2] ||| [function_name_2] [function_name_1]	count=11
namespace	ou stream_filter_append() ||| function	count=1
namespace	précédemment définie ||| gearmanclient	count=1
namespace	nouveau filteriterator qui consiste ||| filteriterator	count=1
function	shell [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	surveiller ||| set	count=1
namespace	pour toutes les ||| xmldiff\base	count=1
namespace	métadonnées ||| mongogridfs	count=1
function_name	incluant les ||| form	count=1
arg_pair	données data au ||| resource $socket string $data	count=1
function_name	fichier qui ne ||| metadata	count=1
arg_pair	la chaîne address ||| string $address string $default_host	count=1
return	pour la première ||| void	count=1
arg_pair	une ||| string $fontname string $encoding	count=1
arg_pair	contexte log_cmd_delete lors ||| array $server array $writeoptions	count=1
namespace	image ||| imagick	count=2
function_name	script en ||| path	count=1
function_name	du script ||| set include	count=1
arg_pair	passés ||| int $hour int $minute	count=1
namespace	de l'itérateur ||| splheap	count=1
arg_pair	le contenu ||| string $prefix	count=1
function_name	file ||| max poll	count=1
function_name	existe ||| key exists	count=1
arg_pair	sauvegarde une ||| resource $image	count=1
return	et extrait ||| array	count=1
return	données personnalisées ||| void	count=1
function_name	grégorien : ||| gregoriantojd	count=1
function_name	[function_name] de ||| crop [function_name]	count=2
function_name	des ||| db2	count=1
function_name	contenu ||| ob get	count=1
function_name	fichiers ainsi que ceux ||| chmod	count=1
return	rectangle arrondi [return] ||| [return]	count=3
function_name	l'image spécifiée ||| preview images	count=1
function_name	[function_name_1] compression ||| [function_name_2] [function_name_1]	count=4
function_name	certain délai sur le ||| immortal	count=1
function_name	[function_name_1] de remplissage ||| [function_name_2] [function_name_1]	count=2
function_name	la dernière requête insert ||| fbsql insert id	count=1
namespace	miniatures ||| imagick	count=1
return	du texte ||| bool	count=1
function_name	pour la ||| set	count=1
return	code erreur pour le ||| int	count=1
arg_pair	spécifie un préfixe ||| string $field_override	count=1
arg_pair	contient les métadonnées ||| mongodb $db	count=1
function_name	délai sur ||| immortal	count=1
namespace	retourne tous les paramètres ||| solrparams	count=1
function_name	un fichier exe ou ||| write exe footer	count=1
function_name	bytecode ||| bcompiler parse	count=1
function	exécute [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=3
function_name	vérifie si [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	afficher le logo php ||| php logo guid	count=1
arg_pair	commande command ||| array $output	count=1
function_name	colonnes ||| dbase numfields	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] callback handler install [arg_pair_2]	count=9
function_name	connexion ||| dbx connect	count=2
function_name	taille compressée d'un ||| zip entry compressedsize	count=1
arg_pair	l'aide de ||| mongodb $db	count=1
function_name	liste de toutes ||| list	count=1
namespace	courant est ||| tidynode	count=1
function_name	lit le contenu ||| read	count=1
arg_pair	chaîne str après avoir ||| string $character_mask	count=2
arg_pair	détermine si pspell_save_wordlist() doit ||| int $dictionary_link bool $flag	count=1
function_name	la valeur de l'attribut ||| attribute	count=1
function_name	[function_name_1] de lignes ||| [function_name_2] [function_name_1]	count=9
arg_pair	données du jeu de ||| string $classname	count=1
function_name	retourne la trace de ||| get trace as string	count=1
arg_pair	paramètres ||| int $second int $month	count=1
function	ouvre [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
function_name	extension ||| register extension	count=2
arg_pair	d'une fonction à l'exécution ||| string $class	count=1
function_name	la définition ||| meta data	count=1
function_name	génère une représentation yaml ||| yaml emit file	count=1
arg_pair	sur l'algorithme spécifié ||| string $lib_dir	count=1
function_name	julien pour une ||| to jd	count=1
return	tant que chaîne et ||| string	count=1
namespace	être utilisée pour ||| mongolog	count=1
function_name	fonction utilisateur) ||| restore	count=1
function_name	ajoute une ||| bbcode add element	count=1
function_name	fonction ||| newt	count=1
function_name	[function_name_1] à ||| [function_name_2] [function_name_1]	count=10
return	dossier d'archives ||| string	count=1
function_name	à différents ||| preview	count=1
function_name	d'activation pour la ||| fann set activation function output	count=1
function_name	est similaire à ||| fbsql	count=1
function_name	timestamp ou la date ||| date	count=1
arg_pair	des ||| mongodb $db	count=1
function_name	dans le blob ||| ibase blob	count=1
function_name	fréquence en deçà duquel ||| frequency	count=1
function_name	un contexte [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	les données blob/clob ||| lob	count=1
function_name	le prochain résultat de ||| next result	count=1
function_name	fourni et ||| uudecode all	count=1
arg_pair	de couleurs ||| bool $dither	count=1
function_name	[function_name_1] statiques ||| [function_name_2] [function_name_1]	count=4
function_name	résout le nom d'hôte ||| connect host	count=1
function_name	équivalent à memcached::append() mais ||| append by	count=1
namespace	[namespace] un dossier ||| [namespace]	count=3
function_name	trace de la pile ||| trace as string	count=1
arg_pair	le ||| resource $parser	count=1
function_name	xml [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	étire la ||| linear stretch	count=1
function_name	si elle prend ||| eio	count=1
function_name	tous ||| newt form destroy	count=2
function_name	décrivant l'erreur survenue lors ||| mysqli error	count=1
namespace	à ||| mongocursor	count=1
function_name	cette fonction est similaire ||| by id	count=1
function_name	dernier identifiant ||| db2 last insert id	count=1
function_name	la [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	la méthode de disposition ||| setimagedispose	count=1
arg_pair	fonction utilisateur php event_handler ||| callable $event_handler	count=1
function_name	un arbre ||| load string	count=1
function_name	la bibliothèque ||| libversion	count=1
function_name	similaire à ||| element by id	count=1
function_name	yaml de ||| yaml emit file	count=1
function_name	liste tous [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	fonction à fournir à ||| string $contents int $status	count=1
arg_pair	object_id spécifié ||| string $object_id	count=1
function_name	données ||| mailparse uudecode	count=1
namespace	pour une ou plusieurs ||| function	count=1
arg_pair	si une ||| resource $result int $field_offset	count=1
function_name	exécution ultérieure ||| prepare	count=1
return	la transaction en cours ||| bool	count=1
arg_pair	que les paramètres passés ||| int $month	count=1
function_name	subscribe est ||| subscribe	count=1
function_name	le ||| numfields	count=1
namespace	de la ||| function	count=6
function_name	libxml standard ||| libxml use internal	count=1
function_name	peuvent pas ||| set	count=1
namespace	le gestionnaire de travaux ||| gearmanjob	count=1
return	caractères d'instance ||| sdo_das_xml_document	count=1
namespace	depuis le ||| gmagick	count=1
arg_pair	une pile et empile ||| mixed $value1	count=1
arg_pair	définit le ||| int $first_num string $prefix	count=1
function_name	le prochain noeud ||| next	count=1
arg_pair	la valeur value avec ||| mixed $value	count=1
function_name	champ dans le ||| ingres field	count=1
function_name	des informations à propos ||| info	count=1
function_name	de clé ||| dba firstkey	count=1
arg_pair	identique à la fonction ||| int $month	count=1
function_name	du noeud à importer ||| import node	count=1
function_name	à guillemets ||| qprint	count=1
function_name	version de ||| version	count=5
function_name	d'événements pour ||| set event	count=1
arg_pair	à l'aide de ||| mongodb $db string $prefix	count=1
function_name	[function_name] de ||| get [function_name]	count=19
arg_pair	fonction mktime() excepté ||| int $day int $year	count=1
function_name	texte ||| show	count=1
function_name	ajoute un ||| pdf add	count=1
function_name	et effectue alors une ||| idiv	count=1
function_name	nouveau filtre ||| set filter range	count=1
function_name	clé ||| firstkey	count=1
arg_pair	font retourné ||| int $font	count=1
arg_pair	convertit une chaîne d'un ||| string $from	count=1
function_name	supprime toutes les lignes ||| dbplus	count=1
arg_pair	courbe ||| float $y3	count=1
function_name	[function_name_1] rappel ||| [function_name_1] created [function_name_2]	count=1
function_name	un verrou de lecture ||| cubrid lock	count=1
function_name	aux fins [function_name] déboguage : ||| [function_name] echo	count=1
function_name	de résultats ||| db2	count=2
function_name	retourne true s'il existe ||| exists	count=1
function_name	fonctionnellement équivalent à memcached::append() ||| append	count=1
function_name	par [function_name] applications ||| [function_name]	count=1
function_name	appelé alias ||| alias	count=1
namespace	par documents ||| mongocursor	count=1
namespace	encodés ||| function	count=1
arg_pair	par l'argument offset ||| int $offset	count=1
function_name	gestionnaire d'entité externe ||| external entity ref handler	count=1
function_name	[function_name_1] couleur ||| [function_name_2] [function_name_1]	count=6
function_name	erreur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	une et retourne ||| string $new_data2	count=1
arg_pair	une requête à ||| string $index	count=1
arg_pair	de transformation avec xsltprocessor ||| string $name	count=1
function_name	les erreurs ||| get error code	count=2
function_name	l'endroit ||| fann set error log	count=2
function_name	affectées par ||| mysqli affected	count=1
namespace	sont ||| function	count=2
arg_pair	fait que ||| int $day int $year	count=1
function_name	vers ||| copy	count=1
function_name	une paire ||| stream socket pair	count=1
function	messages [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	des fichiers ||| string $prefix	count=1
arg_pair	priorité de ||| int $priority	count=1
arg_pair	la ||| resource $result	count=2
function_name	utilisées ||| form destroy	count=2
function_name	retourne un tableau ||| pg fetch array	count=1
function_name	serveurs de noms configurés ||| count nameservers	count=1
arg_pair	sur la connexion link_identifier ||| resource $link_identifier	count=1
namespace	est un véritable fichier ||| splfileinfo	count=1
arg_pair	date stockée dans ||| resource $pxdoc	count=1
function_name	[function_name_1] la transaction ||| [function_name_2] [function_name_1]	count=6
function_name	une nouvelle ||| csr new	count=1
function_name	fonction cubrid_connect_with_url() est ||| with url	count=1
arg_pair	sont ||| int $day int $year	count=1
function_name	le ||| setproctitle	count=1
function_name	ou la date ||| date	count=1
arg_pair	condamnations svn ||| string $repository_url	count=1
function_name	allant de la première ||| strstr	count=1
function_name	la mise en évidence ||| highlight	count=1
function_name	tester si un fils ||| call has children	count=1
function_name	du calendrier français républicain ||| frenchtojd	count=1
function_name	de connexion passées ||| connect	count=1
arg_pair	crée un document ||| string $src	count=1
function_name	fonction cubrid_execute() est ||| cubrid execute	count=1
function_name	d'attente ||| eio set max poll time	count=2
arg_pair	mysql_connection ||| mixed $mysql_connection	count=1
function_name	la taille compressée d'un ||| entry compressedsize	count=1
function_name	cette fonction ||| newt form	count=1
namespace	particulière ou un ||| function	count=1
function_name	protéger ||| escape	count=1
return	lorsque l'objet a ||| void	count=1
return	forme d'un tableau ||| array	count=4
function	ouvre un objet ||| open resource $connection	count=1
return	à ||| void	count=6
function_name	placer un verrou ||| lock	count=1
function_name	[function_name_1] d'octets ||| [function_name_2] [function_name_1]	count=4
function_name	vérifie ||| is xml http	count=1
arg_pair	le paramètre onoff ||| bool $onoff	count=1
function_name	schéma d'entrelacement ||| interlace scheme	count=2
arg_pair	texte et récupère la ||| resource $pdfdoc string $text	count=1
function_name	[function_name_1] l'extension du ||| [function_name_1] [function_name_2]	count=1
function_name	sinus hyperbolique ||| sinh	count=1
arg_pair	demande un verrou sur ||| resource $relation	count=1
namespace	retourne la ||| serializable	count=1
function_name	[function_name_1] les algorithmes ||| [function_name_2] [function_name_1]	count=1
function_name	page pour utilisation ultérieure ||| page	count=1
arg_pair	str ce qui ||| string $str	count=1
function_name	accès à un ||| dio	count=1
function_name	liens ||| border dash	count=2
return	sur ||| resource	count=7
function_name	retourne un jeu de ||| db2	count=4
return	forme en incluant ||| void	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] next [function_name_1]	count=4
arg_pair	fait que les paramètres ||| int $minute	count=1
namespace	termes la ||| ev	count=1
namespace	[namespace] qui ||| [namespace]	count=1
function_name	file d'attente s'interrompt si ||| max poll time	count=1
arg_pair	terminé, ou ||| int $status int $options	count=1
namespace	qui ne ||| pharfileinfo	count=1
function_name	selon un schéma contenu ||| schema validate	count=1
arg_pair	la dernière modification d'un ||| float $mtime int $pri	count=1
function_name	suivant est disponible ||| next	count=1
function_name	dessine un arc dans ||| arc	count=1
function_name	élément ||| element	count=1
function_name	fonction est ||| get	count=1
arg_pair	l'image à la résolution ||| float $xresolution float $yresolution	count=1
function_name	ajoute l'attribut ||| ldap mod add	count=2
return	de l' eventbuffer ||| bool	count=1
function_name	libère toute ||| free result	count=2
function_name	compare chaque ||| compare	count=1
function_name	tampon de ||| ob get	count=1
arg_pair	mot word ||| resource $dict string $word	count=1
function_name	calcule la racine carrée ||| trader sqrt	count=1
arg_pair	fichier ||| string $filename string $name	count=1
function_name	composants qui sont ||| destroy	count=1
function_name	par ||| buffer	count=1
namespace	le contenu des fichiers ||| mongogridfs	count=1
function_name	les lignes du résultat ||| mysql	count=1
return	et de sortie en ||| bool	count=1
arg_pair	document source ||| string $src	count=1
function_name	un ||| dbplus	count=1
arg_pair	imap_open() pour ||| resource $imap_stream	count=1
function_name	équivalence de bits de ||| variant eqv	count=1
function_name	de l'objet ||| string	count=1
function	postgresql et [arg_pair_2] ||| [function_name_1] lo export [arg_pair_2]	count=1
function_name	paramètres séparément ||| pg query params	count=1
function_name	[function_name_1] d'occurrences ||| [function_name_2] [function_name_1]	count=2
namespace	résultats à envoyer au ||| mongocursorinterface	count=1
arg_pair	un serveur avec les ||| resource $id	count=1
function_name	ou son référencement ||| set garbage	count=1
namespace	donné par ||| function	count=1
function_name	fonction libère ||| cubrid free	count=1
function_name	filtre ||| stream filter prepend	count=2
function_name	d'erreurs libxml standard ||| libxml use internal errors	count=1
function_name	fonction ||| fbsql field	count=1
function_name	image pour ||| ps open image	count=1
arg_pair	une transaction ||| mixed $connection	count=1
function_name	informations du dernier ||| pdf info	count=1
namespace	dossier [namespace] ||| [namespace]	count=3
function_name	l'évènement précisé et libère ||| free	count=1
namespace	rectangle [namespace] ||| [namespace]	count=1
function_name	le curseur ||| immortal	count=1
function_name	retourne le terme ||| get terms	count=2
function_name	[function_name_1] la taille ||| [function_name_1] unpacked [function_name_2]	count=1
return	chemin xpath pour ||| string	count=1
function_name	pclose() hormis ||| proc	count=1
namespace	worker après l'exécution ||| worker	count=1
function	md5 [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	de lignes modifiées ||| rows	count=1
arg_pair	les paires clé-valeur ||| array $data	count=1
function_name	des antislashs devant les ||| string	count=1
function_name	msql et ||| msql	count=1
function_name	vt_date ||| date	count=1
function_name	serveur ingres ||| ingres	count=1
namespace	soap ||| soapclient	count=4
arg_pair	pdf_open_image() ||| int $image	count=1
function_name	statique create() ||| types	count=1
namespace	d'une [namespace] en utilisant ||| [namespace]	count=2
return	arrondi [return] ||| [return]	count=3
function_name	contenant le [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	l'objet directoryiterator ||| directoryiterator	count=3
function_name	array comme une ||| array push	count=1
function_name	[function_name] étendus ||| get external [function_name]	count=2
return	ne doit pas être ||| string	count=1
arg_pair	avec une des fonctions ||| resource $psdoc	count=3
function_name	lit une ligne de ||| odbc fetch	count=1
arg_pair	cette fonction indique si ||| bool $flag	count=1
arg_pair	avec le nom filename ||| resource $image string $filename	count=1
namespace	toute ||| imagick	count=1
function_name	le champ ||| mysql field seek	count=1
return	place ||| void	count=1
function_name	que les ||| gmmktime	count=1
function_name	db2_connect() et ||| db2	count=1
function_name	ligne retournée ||| mysql fetch	count=1
return	les ressources prises ||| void	count=1
function	table d'un ||| table resource $result	count=1
function_name	une tâche de fond ||| background	count=1
function_name	niveau [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	de l' eventbuffer ||| eventbuffer	count=2
function_name	champ spécifié ||| mysql field	count=2
return	jeu de caractères ||| string	count=1
arg_pair	le ||| mongodb $db string $prefix	count=1
namespace	ou par ||| function	count=1
function_name	backends ||| backends	count=1
arg_pair	taille de size ||| array $array int $size	count=1
function_name	[function_name_1] de noms ||| [function_name_2] [function_name_1]	count=6
function_name	les fichiers ||| mailparse	count=1
return	finissant [return] sommet inférieur ||| [return]	count=1
function_name	compression utilisée sur ||| entry	count=1
namespace	base pour toutes ||| xmldiff\base	count=1
function_name	[function_name_1] type objet ||| [function_name_1] [function_name_2]	count=3
function_name	la taille des données ||| data size	count=1
namespace	commentaire d'une [namespace] le ||| [namespace]	count=1
function_name	seront triés par ||| set	count=1
arg_pair	destinataires cc et bcc ||| string $cc string $bcc	count=1
namespace	par le ||| eventbuffer	count=1
arg_pair	de la requête request ||| string $request	count=1
return	une capture de la ||| resource	count=1
function_name	utilisée pour rechercher manuellement ||| spl autoload call	count=1
function_name	du client en ||| client	count=1
function_name	file d'attente s'interrompt si ||| max poll	count=1
function_name	définit le nom ||| set	count=1
arg_pair	à partir d'une source ||| int $size int $source	count=1
function_name	par ||| newt form destroy	count=2
arg_pair	imagetype_xxx fournie ||| bool $include_dot	count=1
function_name	[function_name_1] depuis ||| [function_name_1] [function_name_2]	count=2
arg_pair	affiche le prompt ||| string $prompt callable $callback	count=1
function_name	pertinence des termes ||| set mlt boost	count=1
function_name	avec un ||| preview	count=1
function_name	dernière requête insert ||| fbsql insert	count=1
arg_pair	base ||| string $database	count=2
function_name	configure l'orientation ||| set image orientation	count=1
namespace	courant du tampon ||| function	count=1
arg_pair	entraîne une ||| array $problem	count=1
arg_pair	len octets de ||| int $len	count=1
function_name	commence un ||| begin	count=1
function_name	associé à l'identifiant de ||| mysql data	count=1
function_name	[function_name_1] à ||| [function_name_2] [function_name_1] string $field	count=2
function_name	si elle prend ||| set max	count=1
function_name	tous les précédents intervalles ||| elapsed time	count=1
function_name	retourne les ||| get	count=5
arg_pair	fichier filename dans ||| string $filename bool $use_include_path	count=1
function_name	[function_name_1] la ||| [function_name_2] [function_name_1]	count=3
function_name	la base ||| numfields	count=1
function_name	needle dans ||| strstr	count=1
function_name	l'objet de grande taille ||| pg lo seek	count=1
namespace	boucle d'événement courant ||| evloop	count=1
namespace	une série de ||| mongocursor	count=1
function_name	timestampnoncehandler qui ||| timestamp nonce handler	count=2
function	[function_name_1] toutes les ||| [function_name_1] hidden [arg_pair_2]	count=3
return	cette fonction est ||| domelement	count=1
function_name	le fait ||| gmmktime	count=1
return	effectue ||| void	count=1
arg_pair	utilisation future ||| float $new_output_max	count=1
function_name	[function_name_1] sarprop ||| [function_name_2] step [function_name_1]	count=2
function_name	sera démarré lors ||| launchlink	count=1
namespace	image en ||| gmagick	count=1
function_name	fonction est ||| get element by id	count=1
arg_pair	g ||| float $g	count=1
return	de données retourne les ||| bool	count=1
function_name	filtre de ||| image	count=1
function_name	de fichier rpm ||| rpm	count=1
function_name	définie par son nom ||| name	count=1
arg_pair	de rappel callback ||| callable $callback mixed $data	count=5
function_name	le content mime d'un ||| mime content type	count=1
function_name	l'arc de remous ||| swirlimage	count=1
function_name	le chemin ||| stroke	count=1
function_name	lit le numéro ||| get	count=1
function_name	racine de a et ||| root	count=1
namespace	[namespace] méthode event::add() ||| [namespace]	count=1
arg_pair	fonction mktime() excepté le ||| int $hour int $minute	count=1
function_name	efface un flux de ||| delete	count=1
return	de la ||| float	count=1
namespace	de ||| serializable	count=2
function_name	résultats mnogosearch ||| udm	count=1
namespace	du hash ||| quickhashinthash	count=1
rest	sur le [function_2] ||| [function_2] [return_1]	count=3
return	de champs ||| int	count=1
arg_pair	la résolution ||| float $xresolution	count=1
function_name	que file_get_contents() retourne ||| get contents	count=1
function_name	la clé key sur ||| get multi by key	count=1
function_name	peut être utilisée ||| set	count=1
function_name	appels distants rpc ||| loop	count=1
function_name	disposition ||| setimagedispose	count=1
function_name	souscription à la ||| unsubscribe	count=1
function_name	liste tous ||| list	count=2
function_name	valeurs ||| values	count=2
function_name	de la base de ||| numfields	count=1
function_name	tampon fourni ||| add buffer	count=1
return	valeur de ||| mixed	count=1
function_name	termine ||| close	count=1
arg_pair	requête query à la ||| string $query	count=1
function_name	file ||| poll	count=1
function_name	retournant un ||| win32 query	count=1
function	le système [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	les données fournies ||| int $dbase_identifier array $record	count=1
arg_pair	le nom filename ||| string $filename	count=1
function_name	les [function_name] de tous ||| get [function_name]	count=1
function_name	bords et [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	dernière tentative de ||| db2 conn error	count=2
function_name	les tailles ||| key sizes	count=2
namespace	de la [namespace] de données ||| [namespace]	count=1
function_name	le dernier identifiant ||| last insert	count=1
arg_pair	le ||| int $type	count=1
function_name	distant en ||| ssh2	count=1
return	le jeu de ||| sqlite3result	count=1
function_name	la connexion ingres ||| ingres	count=1
function_name	du segment du ||| set chunk	count=1
namespace	vérifie si la propriété ||| reflectionproperty	count=4
function_name	nombre de ||| num fields	count=1
function_name	prend plus de ||| eio set max poll	count=1
namespace	temps écoulé pour ||| hrtime\stopwatch	count=1
arg_pair	d'extraits de texte ||| string $fragmenter	count=1
function_name	pdi ||| get pdi	count=1
function_name	serveur ms sql ||| mssql	count=2
arg_pair	tableau values ||| array $values	count=1
function_name	pour la durée du ||| include	count=1
arg_pair	msg_number ||| int $msg_number	count=1
function_name	dernière erreur associée ||| last error	count=1
function_name	qui [function_name] trop grande ||| [function_name]	count=1
namespace	qualité d'une image ||| gmagick	count=1
function_name	la version courante ||| version	count=1
arg_pair	paramètres passés sont ||| int $day int $year	count=1
namespace	récupère ||| gearmanclient	count=1
namespace	de caractères à ||| gmagickdraw	count=1
arg_pair	sans le paramètre onoff ||| resource $connection_id bool $onoff	count=1
function_name	pdf d'entrée ||| pdf get pdi	count=1
arg_pair	la valeur du ||| string $name string $value	count=1
function_name	configuration include_path pour ||| set	count=1
namespace	[namespace] qui sera ||| [namespace]	count=1
arg_pair	un fichier spécial ou ||| string $pathname	count=1
function_name	caractères alphabétiques en minuscules ||| mb strtolower	count=1
function_name	retourne la quantité de ||| memory get	count=2
function_name	retourne la méthode ||| entry	count=1
arg_pair	temporairement le monitoring ||| resource $fam resource $fam_monitor	count=1
arg_pair	username ||| string $username	count=1
arg_pair	username et le mot ||| string $username	count=1
function_name	objet [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	efface une ||| delete by ids	count=1
function_name	chaîne de caractères passée ||| db2 escape string	count=1
return	la chaîne de ||| string	count=2
function_name	alias de ||| set flags	count=1
rest	informations de [function_2] ||| [function_2] [return_1]	count=3
function_name	[function_name_1] db++ ||| [function_name_2] [function_name_1]	count=6
function_name	le déboguage de ||| set	count=1
function_name	[function_name_1] la couche ||| [function_name_1] [function_name_2]	count=1
return	identique ||| void	count=1
namespace	de 9 miniatures de ||| imagick	count=1
return	la casse des caractères ||| int	count=1
function_name	retourne ||| get params	count=1
function_name	transfert curl ||| curl setopt resource	count=1
function_name	méthode de compression ||| entry compressionmethod	count=1
function_name	première paire clé/valeur de ||| yp first	count=1
function_name	le nom d'hôte ||| connect host	count=1
function_name	une équivalence de ||| eqv	count=1
return	ceux de lecture ||| void	count=1
namespace	la valeur de ||| function	count=1
function_name	fonction pdf_get_value() avec ||| pdf get majorversion	count=1
arg_pair	gmt ||| int $year int $is_dst	count=1
function_name	ce service ||| gupnp service introspection	count=1
function_name	du client ||| pg set client	count=1
namespace	retourne une image ||| imagick	count=1
function_name	à ||| filter	count=1
function_name	de l'objet slob ||| ifxus read slob	count=1
function_name	ldap ||| ldap	count=8
function_name	types de colonnes ||| column types	count=1
function_name	de compression utilisée ||| entry compressionmethod	count=1
return	[return] délinéarisation de ||| [return]	count=3
function_name	guid binaire ||| mssql guid	count=1
function_name	le ||| set metadata	count=2
function_name	données d'entrainement [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	une ||| resource $stream int $how	count=1
return	qualité ||| gmagick	count=1
function_name	[function_name_1] selon ||| [function_name_2] [function_name_1]	count=10
function_name	ibase pour récupérer ||| ibase	count=1
return	système le supporte et ||| string	count=1
function_name	l'extension sous la forme ||| solr	count=1
function_name	être ||| module	count=1
function_name	par socket ||| socket	count=2
function_name	seule [function_name] les ||| get nr [function_name]	count=1
function_name	à la ||| db2 escape	count=1
function_name	calcule l'arc sinus ||| asin	count=1
function_name	à la ||| element by id	count=1
function_name	diriger les clés de ||| by key	count=1
function_name	[function_name_1] et ||| [function_name_1] [function_name_2]	count=1
function_name	retourne un booléen indiquant ||| get	count=1
function_name	l'action ||| action	count=1
function	[function_name_1] parties ||| [arg_pair_2] [function_name_1]	count=1
function_name	le mot de passe ||| fbsql database password	count=1
function_name	le protocole ||| proto	count=1
namespace	base de ||| function	count=1
function_name	configuration include_path pour la ||| set	count=1
function_name	un fichier temporaire ||| mailparse uudecode	count=1
arg_pair	jours du ||| int $day	count=1
arg_pair	ligne/hors ||| string $host	count=1
function_name	un ||| all	count=1
arg_pair	locale ou distante ||| bool $is_null int $maxlen	count=1
namespace	supprime toutes les ||| function	count=1
function_name	dans les regroupements ||| set group	count=1
function_name	résultat comme pourrait le ||| mysql unbuffered	count=1
function_name	de version [function_name_2] ||| [function_name_2] [function_name_1] mysqli $link	count=2
namespace	représenté par l'objet pdostatement ||| pdostatement	count=1
arg_pair	rouge vert et ||| int $color int $r	count=1
return	les ||| mongodb	count=2
function_name	a été ||| msql	count=1
function_name	rappel pour readline affiche ||| readline callback handler	count=1
arg_pair	permettra d'accéder à ||| int $memsize	count=1
namespace	d'en-tête oauth ||| oauth	count=1
function_name	de l'image spécifiée avec ||| images	count=1
namespace	des données personnalisées ||| pharfileinfo	count=1
function_name	géométrie de la ||| page	count=1
function_name	utile uniquement avec une ||| get	count=1
function_name	et extrait dans un ||| mailparse uudecode all	count=1
arg_pair	avec une ||| resource $psdoc float $black	count=1
return	à [return] ||| [return]	count=1
namespace	variables ||| function	count=1
arg_pair	la transparence ||| float $fuzz	count=1
function_name	le tag image ||| picture	count=1
function_name	composants qui ||| newt form destroy	count=2
function_name	à la ||| rewind	count=1
function_name	libère les ressources ||| form destroy	count=1
function_name	fonction c localtime ||| localtime	count=1
return	crée un ||| resource	count=4
function_name	récupère le ||| context get	count=2
function_name	passées dans la ||| getopt	count=1
function_name	version du client ||| client version	count=2
function_name	l'échelle d'une colonne oracle ||| oci field scale	count=1
function_name	curseur typiquement parcourt un ||| size	count=1
namespace	du noeud ||| domnode	count=1
return	si un nom de ||| bool	count=1
arg_pair	apparaître après un terme ||| string $simplepost string $field_override	count=1
return	des lignes ||| bool	count=1
function_name	la fréquence en deçà ||| term frequency	count=1
function_name	une condition pour ||| condition	count=1
function_name	classe personnalisée ||| class	count=2
function_name	buffer que la ||| buffer	count=1
function_name	individuel [function_name] chaque pixel ||| adaptive threshold [function_name]	count=1
arg_pair	données ||| resource $ann resource $data	count=1
function_name	[function_name_1] carte de ||| [function_name_2] [function_name_1]	count=2
function_name	ajoute ||| multi add handle	count=2
arg_pair	fichiers ||| string $path	count=1
function_name	blob [function_name_2] ||| [function_name_2] [function_name_1]	count=10
arg_pair	lignes ||| resource $image	count=1
function_name	file ||| eio set max poll	count=1
function_name	est ||| by	count=1
function_name	est similaire ||| close	count=1
arg_pair	occurrences de search ||| mixed $search	count=2
function_name	mise à jour ou ||| update	count=1
function_name	cette fonction retourne ||| cubrid get	count=6
return	le jeu ||| sqlite3result	count=1
arg_pair	de données microsoft sql ||| array $connectioninfo	count=1
return	d'instance xml ||| sdo_das_xml_document	count=1
function_name	[function_name_1] nombre de ||| [function_name_1] [function_name_2]	count=1
function_name	lit le contenu ||| get	count=1
arg_pair	données dans un ||| string $data	count=1
function_name	est un constructeur ||| is constructor	count=2
function_name	résultat [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	la couleur ||| color	count=12
function_name	[function_name_1] termes ||| [function_name_1] num query [function_name_2]	count=1
namespace	être utilisée que pour ||| pharfileinfo	count=1
function	[function_name_1] texte ||| [function_name_1] [arg_pair_2]	count=4
function	efface [arg_pair_2] ||| [function_name_1] resource $link_identifier [arg_pair_2]	count=2
arg_pair	occurrence de ||| string $haystack string $needle	count=1
function_name	un élément ||| by	count=1
function_name	incluant les composants ||| newt	count=1
function_name	définition de gabarit ||| template ext	count=1
function_name	la ||| close	count=1
arg_pair	cert ||| mixed $cert	count=1
arg_pair	valeur entre ||| int $value	count=1
function_name	clé ||| dba firstkey	count=1
arg_pair	un plus grand degré ||| array $pipes string $cwd	count=1
function_name	les paramètres du serveur ||| set server params	count=1
arg_pair	fichier filename ||| string $filename	count=2
function_name	serveur le curseur ||| immortal	count=1
function_name	colonne courant de ||| current column	count=2
function_name	un fichier ||| mailparse uudecode	count=1
function_name	libère les ressources ||| newt form	count=1
function_name	fonctionne ||| proc close	count=2
namespace	soap appelle les ||| soapserver	count=1
return	la fin et que ||| bool	count=1
function_name	que gestionnaire d'événements ||| handler	count=1
arg_pair	cubrid et ||| resource $conn_identifier	count=1
function_name	sortie standard ||| output	count=1
function_name	libère ||| form destroy	count=2
function_name	messages ||| imap delete	count=2
function_name	paramètres du serveur ||| server params	count=1
function_name	true s'il existe ||| array key exists	count=1
namespace	vérifie si ||| spldoublylinkedlist	count=1
function_name	ajoute une ||| add query	count=1
function_name	[function_name] de l'agent ||| set [function_name]	count=1
function_name	requête et ||| dbx query	count=1
namespace	personnalisées ||| pharfileinfo	count=1
return	appelé lors de la ||| void	count=2
function_name	dans le fichier ||| to file	count=1
function_name	partie de [function_name] ||| get [function_name]	count=1
function_name	bufferisation des ||| buffering	count=1
function_name	récupère ||| get value	count=2
arg_pair	la nth -ème racine ||| gmp $a int $nth	count=1
function_name	d'une notification ||| service proxy add notify	count=1
namespace	une [namespace] ||| [namespace]	count=1
return	le statut d'une ||| int	count=1
namespace	le dessin des lignes ||| function	count=1
function_name	séquence d'images ||| images	count=1
function_name	incrémente de 1 ou ||| inc	count=1
return	utilisé pour tracer la ||| void	count=1
function_name	le logarithme naturel ||| trader ln	count=1
function_name	le suivi des ||| trace	count=1
function_name	et d'équilibrage de ||| ms	count=1
function_name	[function_name_1] long ||| [function_name_2] [function_name_1]	count=2
function_name	la file d'attente s'interrompt ||| set	count=1
function_name	enregistrements de la base ||| out	count=1
function_name	qui décide ||| qc set	count=1
function	[function_name_1] base de ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	à [arg_pair] ||| [arg_pair]	count=2
return	que pour stocker des ||| void	count=1
function_name	définit ||| set xyz	count=2
return	paramètres ||| string	count=1
arg_pair	la fonction mktime() excepté ||| int $hour	count=1
function_name	en cours ||| set include	count=1
function	[function_name_1] [arg_pair_2] la mémoire ||| [function_name_1] remove var [arg_pair_2]	count=3
namespace	tâche ||| gearmanclient	count=2
function_name	une ||| array	count=1
function_name	décide si ||| mysqlnd qc set is	count=1
return	les ||| boolean	count=1
function_name	d'attente ||| set	count=1
function_name	présence d'événements de haute ||| max dispatch interval	count=1
return	en hauteur ||| bool	count=1
function_name	month ||| in month	count=2
arg_pair	le dossier directory ||| resource $ftp_stream string $directory	count=1
function_name	de la base de ||| dbase numfields	count=1
function_name	implosé par un ||| implode	count=1
function_name	[function_name_1] timer ||| [function_name_2] [function_name_1]	count=1
namespace	chaîne de caractères ||| serializable	count=1
function_name	et désactive la temporisation ||| ob end clean	count=1
arg_pair	assemble 2 images à ||| int $compose	count=1
arg_pair	à une valeur ||| string $value	count=1
namespace	de compression utilisée ||| function	count=1
function_name	une page pour utilisation ||| pdf open pdi page	count=1
function_name	[function_name_1] de documents ||| [function_name_1] mlt [function_name_2]	count=2
arg_pair	le rrd spécifié du ||| string $file	count=1
function_name	humainement lisible ||| date2string	count=1
function_name	ou une liste de ||| put	count=1
function_name	service ||| stop service	count=1
function_name	est similaire à la ||| get	count=1
function_name	ou [function_name] associées avec ||| get [function_name]	count=1
function_name	[function_name_1] segment ||| [function_name_2] [function_name_1]	count=4
function_name	de bordure ||| set image border	count=1
function_name	retournant un tableau ||| query	count=1
function_name	courant du tampon de ||| ob get	count=1
arg_pair	needle dans ||| string $needle	count=2
function_name	dernier identifiant autogénéré par ||| last insert id	count=1
function_name	contient la ligne lue ||| mysql fetch	count=1
return	depuis le flux de ||| string	count=1
namespace	effectue une ||| function	count=1
function_name	unsubscribe ||| unsubscribe	count=1
return	les données du fichier ||| array	count=1
function_name	ouvre un [function_name_2] ||| [function_name_1] pdi [function_name_2]	count=1
function_name	extrait dans un fichier ||| uudecode	count=1
arg_pair	surcharge l' opcode spécifié ||| int $opcode callable $callable	count=1
function_name	caractères ||| eregi	count=2
function_name	de configuration include_path ||| set	count=1
arg_pair	à memcached::set() hormis ||| int $expiration	count=1
arg_pair	le domaine ||| string $msgid1	count=1
function_name	fréquence à partir ||| frequency	count=1
arg_pair	à la fonction mktime() ||| int $year	count=2
function_name	configure ||| set auth type	count=2
function_name	afficher les [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	collections : la première ||| mongogridfs	count=1
function_name	rewinddir() seul ||| rewind	count=1
function_name	9 miniatures de l'image ||| preview images	count=1
arg_pair	fixe le uri contenant ||| string $encoding	count=1
arg_pair	left_operand à la ||| string $left_operand	count=1
function_name	fréquence en ||| mlt min term frequency	count=2
function_name	de facette ||| facet	count=1
function_name	l'on termine ||| end	count=1
function_name	fonction crée une ||| create	count=4
namespace	mysqlnd ||| mysqlnduhconnection	count=2
namespace	paramètres actuellement liés ||| sqlite3stmt	count=1
arg_pair	une valeur fournie qui ||| float $value	count=1
namespace	caractères à ||| gmagickdraw	count=1
function_name	retourne la méthode ||| get coding type	count=1
namespace	qualité d'une ||| gmagick	count=1
function_name	le symbole de jacobi ||| gmp jacobi	count=1
function_name	plus ||| max	count=1
function_name	fonction crée une ||| create attribute ns	count=1
namespace	splfileobject ||| splfileobject	count=1
namespace	dernière requête snmp ||| snmp	count=1
arg_pair	bits de deux variants ||| mixed $left mixed $right	count=1
function_name	[function_name_1] associé avec ||| [function_name_2] [function_name_1]	count=6
function_name	facteurs d'échantillonnage ||| sampling factors	count=1
arg_pair	temporairement ||| resource $fam_monitor	count=1
return	de deux collections ||| mongodb	count=1
function_name	le nom court ||| frame short name	count=2
function_name	dictionnaire ||| enchant broker	count=1
arg_pair	fusionne 3 chaînes ||| string $new_data1	count=1
arg_pair	une nouvelle définition ||| float $height string $optlist	count=1
arg_pair	du [arg_pair] ||| [arg_pair]	count=6
function_name	et ||| uudecode	count=1
function_name	premier attribut de ||| first attribute	count=1
namespace	compression utilisée sur ||| function	count=1
function_name	connexion [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	a et b ||| gmp $b	count=3
function	lie un tableau php [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	données du tampon ||| add buffer	count=1
function_name	racine ||| gupnp root device stop	count=2
arg_pair	pour l'objet target avec ||| string $target	count=1
arg_pair	à un index spécifié ||| int $field_index	count=1
function_name	tant ||| eio event	count=1
arg_pair	contient les métadonnées et ||| mongodb $db	count=1
function_name	pclose() ||| proc close	count=2
namespace	précédemment ||| gearmanclient	count=1
namespace	données personnalisées ||| pharfileinfo	count=1
function_name	qui s'y trouvent ||| uudecode all	count=1
function_name	jeu [function_name] ||| [function_name]	count=3
arg_pair	jours du calendrier julien ||| int $day	count=1
function_name	retourne les informations disponibles ||| stream get meta data	count=1
arg_pair	déplace le pointeur ||| int $type	count=1
arg_pair	mot word est correctement ||| resource $dict string $word	count=1
return	nombre de champs colonnes ||| int	count=1
arg_pair	et retourne la portion ||| string $encoding	count=2
function_name	rng [function_name] dans ||| relax ngvalidate [function_name]	count=1
function_name	[function_name] de ||| [function_name]	count=37
function_name	événement de signal ||| signal	count=1
function_name	en-têtes [function_name_2] ||| [function_name_2] [function_name_1]	count=14
arg_pair	retourne l'arbre ||| resource $imap_stream int $options	count=1
function_name	et extrait dans un ||| uudecode	count=1
namespace	un ||| mongocommandcursor	count=2
arg_pair	extrait le fichier fieldname ||| string $fieldname	count=1
function_name	construit un ||| load string	count=1
return	fonction peut être ||| void	count=1
namespace	détruire ||| function	count=1
namespace	timestamp ou ||| function	count=1
return	déterminant [return] ||| [return]	count=1
arg_pair	avec le même ||| resource $connection	count=1
function_name	liste de méthodes négociées ||| ssh2 methods negotiated	count=1
function_name	sur le serveur ftp ||| ftp	count=2
function_name	la fonction cubrid_current_oid() est ||| cubrid current oid	count=1
arg_pair	le ||| mixed $data	count=1
arg_pair	fonction ||| int $second	count=1
function_name	document ||| update attributes	count=2
return	contenu des fichiers ||| mongodb	count=1
function_name	résultat oracle ||| oci	count=1
function_name	efface une collection de ||| delete	count=1
function_name	haystack ||| mb strrichr	count=2
function_name	le tableau contient encore ||| valid	count=1
function_name	du code asp ||| asp	count=1
arg_pair	sequence du flux imap ||| string $sequence	count=1
arg_pair	à la ||| int $day	count=1
arg_pair	fonction cubrid_lob2_bind() est ||| mixed $bind_value string $bind_value_type	count=1
function_name	demande à readline ||| readline	count=1
function_name	gestionnaire d'erreurs libxml standard ||| libxml use internal	count=1
function_name	la table ||| table	count=1
function_name	similaire à la ||| get element by id	count=1
function_name	méthode de ||| zip	count=1
function_name	base pour ||| construct	count=1
function_name	entre les mots ||| word space	count=1
function_name	récupère [function_name_2] ||| [function_name_1] encoding [function_name_2]	count=2
function_name	récupère la date ||| get	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] idle [function_name_2]	count=1
namespace	avec une ||| mongoclient	count=1
namespace	la balise xml ||| simplexmliterator	count=1
function_name	les ||| array	count=3
return	qui place les ||| void	count=1
return	hormis le fait ||| int	count=2
return	dans une boucle ||| int	count=1
namespace	curseur ||| mongocursor	count=2
namespace	vérifie si la méthode ||| reflectionmethod	count=5
arg_pair	server_path ||| resource $context string $server_path	count=1
rest	prépare un [function_2] ||| [return_1] [function_2]	count=1
function_name	termine une définition de ||| pdf end	count=1
function_name	renvoie ||| ftell	count=1
function_name	peinture courante ||| rgbstroke	count=1
function_name	définit ||| setimagescene	count=1
function_name	ouvre une [function_name] ||| [function_name]	count=4
function_name	cubrid_connect_with_url() est ||| with url	count=1
arg_pair	nom donné par address ||| string $address	count=1
function_name	[function_name_1] le document ||| [function_name_1] [function_name_2]	count=1
return	un ||| mongocursor	count=1
function_name	la connexion mysql courante ||| mysql	count=2
function_name	avec ||| element	count=1
function_name	à une ligne ||| fetch row	count=1
arg_pair	: la première ||| mongodb $db string $prefix	count=1
function_name	si elle prend ||| set max poll	count=1
function_name	récupère le ||| trader get	count=1
function_name	de la fonction get_defined_vars() ||| defined vars	count=1
return	déplace sur ||| void	count=1
function_name	un id de genre ||| genre	count=1
arg_pair	l'activation de la mise ||| int $condition_type	count=1
function	paquet repéré [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	à la méthode yar_concurrent_client::loop() ||| callable $callback	count=1
function_name	des fichiers ||| construct	count=1
function_name	la méthode subscribe est ||| subscribe	count=1
function_name	récupère la position ||| get facet offset	count=1
function_name	lever du soleil pour ||| date sunrise	count=1
arg_pair	analyse automatiquement sa localisation ||| resource $context string $location	count=1
function_name	message d'erreur qui sont ||| pg result error	count=1
function_name	sont effectuées ||| local port	count=1
function_name	position des valeurs correspondantes ||| into struct	count=1
return	moins le nombre ||| int	count=1
function_name	modifie ||| include path	count=2
function_name	[function_name_1] un nom ||| [function_name_2] [function_name_1]	count=2
function_name	curl de ||| curl multi	count=1
return	la recherche sur ||| int	count=1
namespace	sortie de la version ||| gmagick	count=1
function_name	d'une notification de modification ||| gupnp service proxy add notify	count=1
function_name	patch binaire et ||| xdiff file patch binary	count=1
arg_pair	pas attrappées par des ||| string $arg	count=1
function_name	détruit la file de ||| remove queue	count=1
function_name	dernier identifiant autogénéré ||| db2 last insert id	count=1
function_name	paramètres d'échelle ||| params	count=1
function_name	compile un script ||| compile file	count=1
function_name	sélectionne la base ||| maxdb select db	count=1
function_name	identifiant permettant ainsi qu'il ||| set id	count=1
function_name	gestionnaire d'erreurs libxml standard ||| libxml use	count=1
return	précédemment ||| string	count=1
namespace	par objet ||| collectable	count=1
namespace	clé ||| arrayobject	count=1
function_name	haute en arrière plan ||| high	count=1
return	est sortie normalement en ||| int	count=1
arg_pair	des lignes par brush ||| resource $brush	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] set default handler [arg_pair_2]	count=1
function_name	fonction ||| cubrid	count=6
arg_pair	l'appel direct ||| string $function_name string $arguments	count=1
function_name	identifiant donné ||| by	count=1
namespace	qui avaient été ||| function	count=1
namespace	est à la ||| mongocursorinterface	count=1
function_name	le nom court ||| short name	count=1
function_name	compressé avec ||| compressed	count=1
function_name	de flux ||| stream select	count=1
arg_pair	data ||| int $encoding	count=1
namespace	une fois ||| collectable	count=1
arg_pair	memcached::getmulti() mais la ||| int $flags	count=1
namespace	lit ||| function	count=1
function_name	processus [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	à la chaîne ||| db2 escape	count=1
arg_pair	de rappel callback qui ||| callable $callback	count=1
arg_pair	sur une [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
return	en utilisant la ||| bool	count=2
arg_pair	processus fils soit terminé, ||| int $status int $options	count=1
function_name	en ||| escape	count=1
function_name	de l'analyseur ||| set	count=1
return	envoie une réponse en ||| void	count=1
arg_pair	fonction mktime() excepté ||| int $hour int $minute	count=1
function_name	de caractères passée en ||| escape string	count=1
arg_pair	une valeur entière ou ||| string $key number $increment	count=1
function_name	sévérité des messages d'erreurs ||| min message severity	count=1
arg_pair	chaîne needle dans ||| string $haystack string $needle	count=1
function	souscrit à [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	fonction libère les ressources ||| newt form destroy	count=1
function_name	des fichiers ||| chmod	count=1
function_name	utilisé pour tracer ||| debug	count=1
function_name	de ||| to	count=2
function_name	dernière modification ||| get mtime	count=1
function_name	cette fonction libère les ||| newt form	count=1
arg_pair	des options d'analyseur ||| int $flags	count=1
function_name	sur des ||| newt form	count=1
function_name	subscribe est utilisée ||| subscribe	count=1
arg_pair	dans l'image ||| int $y2	count=1
function_name	similaire ||| mysql	count=1
function_name	toutes les ||| construct	count=1
function_name	crypte ||| encrypt	count=2
function_name	fonction pdostatement::columncount() ||| column count	count=1
return	compression ||| string	count=1
arg_pair	nbytes octets ||| int $bid int $nbytes	count=1
namespace	cette fonction configure ||| function	count=1
function_name	toutes les données ||| add	count=1
namespace	d'une archive phar sous ||| phar	count=1
return	une capture ||| resource	count=1
return	si le ||| bool	count=4
function_name	fdf importé ||| fdf	count=1
function_name	serveur ftp et ||| ftp get	count=1
arg_pair	trouve la première occurrence ||| string $needle	count=1
function_name	du champ fourni ||| cubrid field	count=1
arg_pair	local vers [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	retourne la table de ||| get	count=1
function_name	définit le certificat rsa ||| set rsacertificate	count=1
return	élément ||| domelement	count=1
function_name	réponse en ||| handle	count=1
return	la totalité de ||| resource	count=1
arg_pair	domaine ||| string $msgid1	count=1
arg_pair	bloc de texte avec ||| string $text	count=1
namespace	travaux à ||| gearmanworker	count=1
function_name	un filtre ||| filter remove	count=1
arg_pair	le paramètre script comme ||| string $script	count=1
function_name	un fichier ||| set metadata	count=1
function_name	constructeur de base ||| construct	count=1
function_name	informations ||| stat	count=1
arg_pair	type d'éléments à lire ||| resource $id string $elementset	count=1
function_name	tous les fichiers encodés ||| uudecode all	count=1
arg_pair	le nombre gmp a ||| gmp $a	count=1
function	jacobi [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	de lignes affectées par ||| mysqli affected rows	count=1
function_name	dans une queue ou ||| mqseries put	count=1
function_name	caractères ||| load string	count=2
function_name	racine ||| root device	count=1
function_name	boost pour ||| boost	count=1
function_name	lié à ||| ldap	count=1
arg_pair	retourne une ressource ||| string $connection_string	count=1
function_name	de données sqlite ou ||| sqlite factory	count=1
function_name	retourne le [function_name_2] ||| [function_name_1] server [function_name_2]	count=2
function_name	terme ||| bound	count=2
namespace	les données du ||| eventbuffer	count=1
function_name	[function_name_1] de sortie ||| [function_name_2] [function_name_1]	count=5
function_name	fonction geoip_country_code3_by_name() ||| geoip country code3	count=1
arg_pair	avec ms-chapv2 les ||| resource $radius_handle	count=1
function_name	remplit le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	comme une ||| array	count=1
arg_pair	jpeg et tiff ||| bool $arrays bool $thumbnail	count=1
function_name	l'identifiant du thread ||| mysqli thread id	count=2
function_name	eu survenue lors de ||| error	count=1
function_name	enregistrer et à ajouter ||| add vars	count=1
arg_pair	border ||| int $border	count=1
arg_pair	une fonction ||| string $name mixed $step_callback	count=1
function_name	et de flux à ||| stream	count=1
function_name	la chaîne ||| db2 escape	count=1
function_name	de flux ||| stream wrapper register	count=1
arg_pair	mais accepte [arg_pair] ||| [arg_pair]	count=3
function_name	de composition de ||| set	count=1
arg_pair	de deux variants ||| mixed $left mixed $right	count=1
function_name	flux et ||| stream select	count=1
arg_pair	tableau array1 qui contiennent ||| array $array1	count=2
arg_pair	résultats listant les ||| string $table-name	count=1
namespace	de la recherche ||| function	count=1
arg_pair	needle dans ||| string $haystack string $needle	count=2
return	les variables ||| int	count=1
namespace	la ||| serializable	count=1
function_name	version de la bibliothèque ||| libversion	count=1
function_name	le tag image en ||| set picture	count=1
namespace	entre les ||| arrayobject	count=1
function_name	uri d'espace de ||| elements	count=1
arg_pair	être utilisé avec la ||| resource $radius_handle	count=1
function_name	des canaux [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	un fichier au sein ||| is	count=1
function_name	ajoute ||| add archive	count=1
function_name	si elle ||| eio	count=1
function_name	devant les ||| db2 escape string	count=1
function_name	ssl_cipher_description de l'api ssl ||| ssl	count=1
function_name	à memcached::append() ||| append	count=1
function	supprime [arg_pair_2] ||| [function_name_1] facet date other [arg_pair_2]	count=1
arg_pair	contenu des fichiers ||| mongodb $db string $prefix	count=1
arg_pair	fixe ||| resource $connection	count=1
function_name	rationnelle pour la fragmentation ||| set highlight regex pattern	count=1
function_name	[function_name_1] facet.date ||| [function_name_2] [function_name_1]	count=2
function_name	configure l'orientation de l'image ||| set image orientation	count=1
function_name	déboguage oracle ||| oci internal debug	count=1
return	avec le numéro ||| string	count=1
arg_pair	occurrence ||| string $haystack string $needle	count=2
arg_pair	chaîne str après avoir ||| string $str string $from	count=1
function_name	retourne tous les paramètres ||| string	count=1
function_name	fonctionnellement équivalent à memcached::prepend() ||| prepend	count=1
arg_pair	cible ||| string $target	count=1
function_name	patch binaire ||| xdiff file patch binary	count=1
function_name	gnupg_addencryptkey auparavant [function_name] chiffré ||| [function_name]	count=1
return	méthode détermine si ||| bool	count=1
arg_pair	que les paramètres ||| int $month	count=1
return	composants qui sont ||| void	count=1
arg_pair	un segment de la ||| mixed $start mixed $length	count=1
function_name	un nouveau filtre ||| filter	count=2
function_name	les ||| mailparse uudecode	count=2
return	crée un document xml ||| string	count=1
function	souscrit à [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	retourne le gestionnaire ||| gearmanjob	count=1
return	ceux de ||| void	count=1
return	la base ||| bool	count=2
function_name	[function_name_1] d'erreur ||| [function_name_2] [function_name_1]	count=15
function_name	s'interrompt ||| poll	count=1
function_name	dans le mois month ||| cal days in month	count=1
function_name	nombre maximal de lignes ||| set rows	count=1
function_name	plusieurs images ||| images	count=1
arg_pair	valeur fournie qui doit ||| int $color float $value	count=1
function_name	réservée par une ||| ibase	count=1
function_name	[function_name_1] peinture ||| [function_name_2] [function_name_1]	count=2
function_name	casse), et jusqu'à ||| grapheme stristr	count=1
arg_pair	un message ||| integer $mode	count=1
function_name	champ fdf ||| fdf set ap	count=1
function_name	fins de ligne ressemblent ||| ps setlinecap	count=1
function_name	[function_name_1] le timestamp ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] champ ||| [function_name_2] [function_name_1]	count=4
function_name	plugin de réplication ||| mysqlnd	count=1
namespace	appelle ||| soapserver	count=1
function_name	défini le facteur ||| factor	count=1
arg_pair	taille de size ||| int $size	count=1
namespace	une ||| mongoclient	count=1
namespace	détermine si un ||| pharfileinfo	count=1
function_name	modifie la valeur de ||| path	count=1
function_name	est similaire à ||| element by id	count=1
function_name	qui sont ||| newt form destroy	count=1
function_name	similaire ||| get element by id	count=2
arg_pair	le fichier filename ||| bool $process_sections	count=1
function_name	[function_name] appeler ||| [function_name] workload	count=1
function_name	descripteur de fichier ||| file	count=1
namespace	fichier au ||| pharfileinfo	count=1
arg_pair	rouge ||| int $color int $r	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] facet [function_name_2]	count=6
function_name	eio_poll() ||| eio nreqs	count=1
function_name	la table courante ||| fbsql table	count=1
namespace	fichier fourni et extrait ||| function	count=1
function_name	termes de requête qui ||| terms	count=1
function_name	déplace ||| move	count=2
function_name	[function_name_1] dernière modification ||| [function_name_2] [function_name_1]	count=1
return	résultat dans le ||| int	count=1
function_name	l'image suivante dans ||| nextimage	count=1
function_name	[function_name_1] retourne ||| [function_name_1] [function_name_2]	count=6
arg_pair	local local_file ||| resource $ftp_stream string $local_file	count=1
arg_pair	résultat ||| int $row_number	count=2
return	casse des ||| int	count=1
arg_pair	eio_* ||| int $pri	count=1
namespace	effectue une requête soap ||| soapserver	count=1
function_name	libère ||| event buffer free	count=1
namespace	fichier spécial ou ||| function	count=1
function_name	une trace dans les ||| trace	count=1
function_name	stagnation candidates en cascade ||| cascade candidate stagnation	count=1
function_name	similaire à ||| fbsql	count=1
return	peuvent pas ||| void	count=1
function_name	demande radius ||| radius create	count=1
arg_pair	attribut dans ||| array $values	count=1
arg_pair	texte et récupère ||| resource $pdfdoc string $text	count=1
return	lecture seule ||| void	count=1
arg_pair	lit ||| resource $result	count=1
arg_pair	envoi tous les appels ||| callable $callback	count=1
arg_pair	paramètre filename ||| string $filename string $mode	count=1
function_name	méthode d'entrelacement ||| interlace scheme	count=1
function_name	slob ouvert ||| seek slob	count=1
function_name	un document selon ||| validate source	count=1
return	durée du script en ||| string	count=1
function_name	défini l'endroit ||| error log	count=1
function_name	liste des bases ||| list dbs	count=1
function_name	temporaire tous les fichiers ||| all	count=1
function_name	partir d'une ||| load string	count=1
return	normalement en d'autres termes ||| int	count=1
arg_pair	[arg_pair] petit angle ||| [arg_pair]	count=1
function_name	de connexion spécifié ||| mysql	count=1
return	capture de la ||| resource	count=1
function_name	serveur d'administration kerberos ||| kadm5 flush	count=1
function_name	connexion au [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	si un ou plusieurs ||| bool	count=1
function_name	permet ||| chmod	count=1
arg_pair	occurrence de needle dans ||| string $haystack string $needle	count=1
arg_pair	dernière modification d'un fichier ||| float $mtime int $pri	count=1
function_name	donnée est de ||| is numeric	count=1
function_name	avaient ||| newt form	count=1
arg_pair	d'utilisateur username ||| resource $ftp_stream string $username	count=1
function_name	représenté par l'identifiant ||| crack	count=1
function_name	vide est créé avec ||| empty	count=1
function	[function_name_1] en noeud ||| [arg_pair_2] [function_name_1]	count=1
function_name	cette ||| get	count=2
arg_pair	paramètre pos ||| int $pos	count=1
function_name	une ellipse partielle ||| imagearc	count=1
function_name	paramètres ||| params	count=5
function_name	à l'esclave ||| mysqlnd ms	count=1
function_name	code ||| multi strerror	count=1
return	cette méthode ne ||| string	count=1
arg_pair	fonction pdf_open_image() ||| int $image	count=1
function_name	forme et tous les ||| form	count=1
function	sélectionne la [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=11
function_name	sur des ||| form	count=1
arg_pair	utilisé avec un ||| string $mode	count=1
function_name	moteur [function_name] visualisation personnalisé ||| [function_name]	count=1
arg_pair	envoyés ||| string $url int $format	count=1
namespace	configuration include_path pour ||| function	count=1
function_name	plusieurs canaux de l'image ||| image channel	count=2
arg_pair	le gestionnaire de queues ||| resource $hconn	count=1
function_name	utilisée que ||| set	count=1
function_name	sur [function_name] ||| pdf info [function_name]	count=2
function_name	de la mémoire partagée ||| shm	count=1
namespace	force l'écriture de ||| splfileobject	count=1
function_name	pour stocker les ||| array	count=1
namespace	watcher ||| evwatcher	count=1
function_name	retourne l'identifiant de ||| row id	count=1
function_name	calcule le et logique ||| and	count=1
function_name	été ajoutés ||| destroy	count=1
arg_pair	source dans l'image destination ||| resource $destination resource $source	count=1
function_name	par le paramètre ||| add	count=1
function_name	supporte la conversion automatique ||| encoding	count=1
return	décode une ||| string	count=1
return	fonctionne avec les processus ||| int	count=1
namespace	à l'élément ||| splfixedarray	count=1
return	rgb ||| int	count=1
function_name	composition associé avec ||| getimagecompose	count=1
function_name	file d'attente s'interrompt ||| set max	count=1
function_name	croitre la ||| increase factor	count=1
function_name	retourne ||| get number images	count=1
function_name	pagination taille ||| paged result	count=1
function_name	sur le ||| zip entry	count=1
function_name	de l'image ||| set image scene	count=2
function_name	la souscription à la ||| unsubscribe	count=1
function_name	intercepter les méthodes des ||| connection	count=1
namespace	le dictionnaire ||| function	count=1
function_name	antislashs ||| escape string	count=2
arg_pair	noms namespaceuri ||| string $namespaceuri	count=1
arg_pair	structure vide de ||| int $num_data	count=1
function_name	supprime le [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
function_name	plusieurs valeurs au hasard ||| rand	count=1
namespace	en incluant ||| function	count=1
function_name	du ||| add	count=1
function_name	lignes modifiées ||| rows	count=1
namespace	colonnes de la base ||| function	count=1
function_name	minimale du document ||| facet enum cache min default	count=1
function_name	de couleurs de l'image ||| set image	count=2
arg_pair	que ||| int $second int $month	count=1
arg_pair	casse ||| string $pattern	count=1
return	sortie de la version ||| string	count=1
function	passe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
return	nombre ||| int	count=5
arg_pair	fichier ||| int $size	count=1
namespace	les images ||| imagick	count=1
function_name	défini ||| fann	count=1
return	la base de données ||| int	count=1
function_name	page pour ||| pdf open pdi page	count=1
namespace	simplexmliterator au premier ||| simplexmliterator	count=1
arg_pair	les appels ||| callable $callback	count=1
function_name	construit un arbre de ||| load string	count=1
function_name	patch et enregistre ||| xdiff file patch	count=1
function_name	remplace les ||| replace callback	count=1
function_name	[function_name_1] tentative ||| [function_name_2] [function_name_1]	count=14
arg_pair	et [arg_pair] ||| [arg_pair]	count=4
arg_pair	fait qu'elle ignore la ||| string $string	count=1
arg_pair	données du jeu de ||| resource $stmt string $classname	count=1
function	retourne l'échelle [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	l'esclave ou bien au ||| mysqlnd ms query	count=1
rep	position courante [rest_2] ||| [namespace_1] [rest_2]	count=2
function_name	fonction cubrid_query() ||| cubrid query	count=1
function_name	caractères spéciaux ||| escape	count=1
function_name	dictionnaire ||| crack check	count=2
function_name	à l'aide de ||| construct	count=1
function_name	une page pour utilisation ||| page	count=1
return	contient le contenu des ||| mongodb	count=1
namespace	qui a ||| function	count=1
function_name	fils ||| children	count=2
return	bibliothèque sqlite3 ||| array	count=1
arg_pair	et empile ||| mixed $value1	count=1
function_name	définies ||| facets	count=1
return	curseur ||| bool	count=1
arg_pair	image ||| resource $image	count=1
function_name	données du ||| mailparse uudecode	count=1
arg_pair	fonction mktime() excepté ||| int $month	count=1
function_name	du timer ||| set timer	count=1
arg_pair	system v ||| int $perm	count=1
return	récupère la ||| array	count=1
function_name	l'os hôte ||| host os	count=1
return	qualité d'une image ||| gmagick	count=1
function_name	retourne les données ||| get	count=2
function_name	[function_name_1] résultat ingres ||| [function_name_2] [function_name_1]	count=2
arg_pair	à une [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
namespace	les requête sql ||| sqlite3	count=1
function_name	de compression utilisée ||| zip entry	count=1
function_name	de données mysql ||| mysql	count=1
function_name	[function_name_1] référence ||| [function_name_2] [function_name_1]	count=5
arg_pair	fichier fd ||| mixed $fd int $mode	count=2
function_name	boucle libeio tant que ||| eio	count=1
function_name	supprime un [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	construit un arbre ||| sdo_das_xml_document	count=1
arg_pair	réponse au client de ||| string $actor string $details	count=1
return	dans [return] de ||| [return]	count=1
arg_pair	une table ||| string $table_name	count=1
function_name	si la file de ||| msg queue	count=1
arg_pair	chiffre les [arg_pair_2] ||| [arg_pair_2] string $sealed_data [arg_pair_1]	count=3
function_name	configuration include_path ||| include	count=1
function_name	retourne ||| stream get contents	count=2
function	un tableau php var_array [function_name_1] [arg_pair_2] un tableau pl/sql ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
function_name	ne doit être utilisée ||| set	count=1
function_name	minimale du client ||| min client	count=2
function_name	facteur décroissant quickprop ||| quickprop decay	count=1
return	retourne true si le ||| bool	count=2
function_name	l'application ||| mqseries disc	count=2
function_name	contient du code php ||| is php	count=1
function_name	fonction ferme ||| close	count=1
function_name	de statut spécifié grâce ||| task status	count=1
function_name	ressource de connexion en ||| connect	count=1
function_name	ferme ||| closedir	count=1
arg_pair	variable_name ||| resource $introspection string $variable_name	count=1
function_name	des mots personnelle ||| to personal	count=1
arg_pair	fait que ||| int $year	count=2
return	et le ||| array	count=1
return	de caractères à ||| string	count=1
arg_pair	nuls toutes les ||| resource $handle int $length	count=1
arg_pair	attrappées par des ||| string $cb	count=1
function_name	de débogage ||| debug	count=2
function_name	diff binaire entre ||| xdiff file diff binary	count=1
function_name	machine maître ||| yp master	count=1
function_name	[function_name_1] majuscules ||| [function_name_1] [function_name_2]	count=2
function_name	session courante ||| dict is in session	count=1
function_name	noeud d'un document dom ||| import dom	count=1
arg_pair	à memcached::get() hormis ||| callable $cache_cb float $cas_token	count=1
function_name	première ||| dbplus first	count=2
function_name	la file ||| eio set max poll time	count=1
namespace	fourni et extrait ||| function	count=1
function_name	passée en ||| escape string	count=1
function_name	fonctionnellement équivalent à memcached::append() ||| append by	count=1
return	le ||| void	count=8
function_name	cette fonction [function_name_2] ||| [function_name_2] [function_name_1]	count=17
arg_pair	coordonnées de alpha ||| resource $p float $alpha	count=1
function_name	retourne ||| get last	count=2
function	[function_name_1] text à ||| [function_name_1] [arg_pair_2]	count=3
function_name	inode du ||| inode	count=1
function_name	la première ||| end	count=1
function_name	départ de la ||| start line	count=1
function_name	ligne du ||| fetch	count=2
function_name	le paramètre ||| buffer	count=1
arg_pair	une ressource bbcode_container ||| resource $bbcode_container	count=1
namespace	image dans un descripteur ||| imagick	count=1
arg_pair	désirées avec un filtre ||| int $filter	count=1
function_name	défini la fonction d'activation ||| activation function	count=3
function_name	miniatures de l'image spécifiée ||| preview	count=1
function_name	la bibliothèque ||| rrd	count=1
arg_pair	chaîne str après ||| string $encoding	count=1
arg_pair	une chaîne d'une façon ||| string $str int $start	count=1
arg_pair	en utilisant l'image image ||| string $filename	count=1
arg_pair	à appeler ||| mixed $arg	count=1
namespace	les ||| mongocursor	count=1
function_name	cette fonction retourne le ||| get	count=2
arg_pair	classe class en utilisant ||| string $class	count=1
function_name	datetime::getlasterrors() ||| get last errors	count=1
function_name	père que ||| fork	count=1
function_name	position du champ ||| cubrid field	count=1
return	donnée ||| sdo_das_xml_document	count=1
arg_pair	requête statement ||| mixed $field	count=1
function_name	être utilisé ||| maxdb debug	count=1
function_name	ligne retournée par ||| fetch	count=1
function_name	qui sera démarré ||| launchlink	count=1
arg_pair	: ||| string $prefix	count=1
function_name	d'événements pour les ||| ibase set	count=1
namespace	si le curseur est ||| mongocursorinterface	count=1
function_name	résultat ingres ||| ingres	count=1
function_name	dictionnaire ||| closedict	count=1
function_name	de postgresql associée ||| pg result	count=1
function_name	une base interbase ||| ibase	count=1
arg_pair	0 en cas d'échec ||| mixed $options	count=1
function_name	différence ||| diff uassoc	count=2
function_name	la valeur d'un attribut ||| attribute	count=1
function_name	l'échelle ||| fann scale input	count=1
arg_pair	paramètres passés sont gmt ||| int $is_dst	count=1
function	[function_name_1] cible spécifiée ||| [function_name_1] [arg_pair_2]	count=2
namespace	persistante ouverte ||| sphinxclient	count=1
arg_pair	chaîne fournie ||| string $str string $encoding	count=1
function_name	croitre la taille ||| increase factor	count=1
function_name	tag id3v1 qui ||| id3v1 tag	count=2
function_name	rfc 2045 section 6.7) ||| 8bit	count=1
arg_pair	est une version améliorée ||| resource $result int $result_type	count=2
function	facteur [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	décide ||| mysqlnd qc set is	count=1
namespace	l'utilisateur spécifié par son ||| function	count=1
function_name	définit [function_name_2] ||| [function_name_1] created [function_name_2]	count=1
arg_pair	la position offset ||| resource $context int $offset	count=1
arg_pair	de jours du calendrier ||| int $day	count=1
namespace	sur ||| tokyotyrant	count=1
function_name	le ||| get by key	count=2
namespace	doit être ||| pharfileinfo	count=1
arg_pair	retourne la chaîne input ||| string $input	count=1
arg_pair	la valeur ||| int $type mixed $value	count=1
return	entrée moins le ||| int	count=1
arg_pair	contenu d'un élément ||| int $index	count=1
return	la file d'attente ||| bool	count=1
return	[return] ajustant ||| [return]	count=3
function_name	les paramètres passés ||| gmmktime	count=1
arg_pair	courante du texte ||| resource $psdoc string $text	count=1
function_name	une [function_name] ||| catch [function_name]	count=3
function_name	construit un arbre de ||| load	count=1
function_name	nombre de champs ||| numfields	count=1
arg_pair	un générateur d'extraits de ||| string $fragmenter	count=1
function_name	une simple ligne ||| fit textline	count=1
function_name	connexion [function_name_2] ||| function resource [function_name_2] [function_name_1]	count=3
function_name	via la ||| got	count=1
function_name	de requêtes ||| eio grp	count=1
arg_pair	et de remplissage courants ||| float $y1	count=1
function_name	retourne [function_name_2] ||| [function_name_1] server [function_name_2]	count=2
function_name	module de ||| module	count=1
arg_pair	correspondant à la ligne ||| int $type	count=1
namespace	à la fin ||| eventbuffer	count=1
return	un ||| mongocommandcursor	count=2
arg_pair	listant les tables ||| string $schema	count=1
function_name	analyse une ||| mailparse rfc822 parse	count=1
function_name	récupère l'adresse ||| context get host	count=1
arg_pair	donné par address ||| resource $socket string $address	count=1
function_name	en ||| set include	count=1
arg_pair	casse des caractères lors ||| string $string	count=1
namespace	ou false en ||| function	count=1
function_name	maximal de hash ||| mhash count	count=1
arg_pair	memcache::connect() avec la différence ||| string $host int $port	count=1
function_name	variable character_set de mysql ||| mysql client encoding	count=1
arg_pair	str en chaîne ||| string $str array $convmap	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] device [function_name_2]	count=1
function	retourne l'échelle [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	fonction retourne une ||| cubrid get	count=4
arg_pair	à une valeur ||| resource $p int $value	count=1
arg_pair	d'utilisateur username et ||| string $username	count=1
arg_pair	une ||| string $iptcdata	count=1
arg_pair	réponse au client ||| string $details	count=1
arg_pair	crée un fichier ||| resource $image string $filename	count=1
function_name	9 miniatures ||| preview images	count=1
function_name	retourne la ||| get from	count=1
function_name	présence d'événements de ||| set max dispatch interval	count=1
function_name	dernier identifiant ||| last insert id	count=1
function_name	lui est passée en ||| newt run	count=1
function_name	le phar ||| map phar	count=1
function_name	en priorité basse en ||| do low	count=1
return	champs colonnes de la ||| int	count=1
function_name	.. ||| push	count=1
arg_pair	à la ||| int $hour int $minute	count=1
function_name	par la forme et ||| newt	count=1
function_name	profondeur de ||| depth	count=1
function_name	tant que thread safety ||| maxdb thread safe	count=1
function_name	[function_name_1] objet char ||| [function_name_2] [function_name_1]	count=1
function_name	ligne [function_name_2] ||| [function_name_2] [function_name_1]	count=29
function_name	message d'erreur ||| pg result error	count=1
function_name	les dimensions de ||| metrics	count=1
namespace	image contenant ||| gmagick	count=1
arg_pair	retourne l'arbre ||| int $options	count=1
function_name	wddx ||| wddx	count=1
arg_pair	première contient les métadonnées ||| mongodb $db	count=1
function_name	compression utilisée ||| entry	count=1
function_name	en-têtes exif des ||| exif	count=1
namespace	la ||| gmagickdraw	count=1
function_name	minimale du document utilisée ||| cache min default	count=1
arg_pair	dans le fichier filename ||| int $options	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
function_name	retour du réseau ||| fann	count=1
function_name	[function_name_1] clonable ||| [function_name_2] [function_name_1]	count=1
function_name	les tailles de clés ||| get supported key sizes	count=1
arg_pair	défragmente l'index afin ||| int $maxsegments	count=1
arg_pair	variable libre server_key ||| string $server_key	count=1
function_name	de ||| snmp set oid numeric print	count=1
function_name	nom d'hôte ou ||| name	count=1
function_name	vers un tableau ||| array copy	count=1
function_name	et y écrit ||| write temporary	count=1
function_name	bufferisation ||| buffering	count=1
namespace	un document ||| xmldiff\file	count=1
function_name	de session.cache_expire ||| session cache expire	count=1
function_name	nom d'hôte dns ||| connect host	count=1
function	[function_name_1] colonne indiquée ||| [function_name_1] [arg_pair_2]	count=2
namespace	si elle prend plus ||| function	count=1
arg_pair	une utilisation future ||| float $new_output_max	count=1
function_name	de l'image ||| set	count=2
function_name	jacobi de a ||| jacobi	count=1
function_name	ce processus de service ||| win32	count=1
return	chaîne de caractères contenant ||| string	count=2
arg_pair	identique à la ||| int $year	count=2
arg_pair	annonce sa présence) ||| bool $available	count=1
arg_pair	border ||| int $y int $border	count=1
function_name	est utile lors de ||| urlencode	count=1
function_name	au champ spécifié par ||| mysql field flags	count=1
namespace	être utilisée ||| mongolog	count=1
arg_pair	la suppression d'un document ||| array $protocoloptions	count=1
function_name	filtre décimal à ||| set filter float	count=1
function_name	de champs ||| dbase numfields	count=1
function_name	bordure ||| set image border	count=1
function_name	objet graphique ||| gstate	count=1
function_name	retourne la valeur ||| yaz get	count=1
function_name	libère les ressources mémoires ||| newt form	count=1
return	d'une ||| bool	count=1
function_name	le logarithme base-10 pour ||| trader log10	count=1
function_name	les ||| get	count=3
function_name	colonnes d'une base filepro ||| filepro fieldcount	count=1
function_name	fourni et ||| mailparse	count=1
function_name	compression ||| compressionmethod	count=1
arg_pair	le style ||| int $type float $disp_time	count=1
function	[function_name_1] d'une carte ||| [arg_pair_2] [function_name_1]	count=3
function_name	liste des noms de ||| names	count=1
function_name	la fragmentation ||| set highlight regex pattern	count=1
function_name	modifie la valeur de ||| set	count=1
return	considère array comme ||| int	count=1
arg_pair	dans le ||| int $to_neuron	count=1
namespace	crée un document ||| xmldiff\file	count=1
namespace	retourne le [namespace] ||| [namespace]	count=1
function_name	patch et ||| patch	count=1
function_name	retourne des [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	colonnes de ||| numfields	count=1
function_name	xa ||| xa gc	count=2
function_name	arc dans un rectangle ||| arc	count=1
function_name	[function_name_1] une action ||| [function_name_1] [function_name_2]	count=1
function_name	du ||| enum cache	count=1
function_name	flou [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	j.c ||| juliantojd	count=1
arg_pair	par le paramètre eol_style ||| int $start int $eol_style	count=1
function_name	pile et ||| array push	count=1
function_name	définit [function_name_2] ||| [function_name_1] cache [function_name_2]	count=3
function	prépare [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	lecture ||| resource $result int $lob_mode	count=1
arg_pair	joignent [arg_pair] ||| [arg_pair]	count=1
function_name	à fbsql_fetch_array() à ||| fbsql fetch	count=1
function_name	lignes autour des liens ||| pdf set border dash	count=1
function_name	toutes les valeurs ||| values	count=2
function_name	libeio tant ||| eio event	count=1
arg_pair	une ||| resource $p	count=2
return	doit pas ||| string	count=1
function_name	un verrou d'écriture sur ||| lock write	count=1
return	si la liste ||| bool	count=1
return	cette fonction ||| domelement	count=1
function_name	équivalent à memcached::append() mais ||| append	count=1
function_name	de fond ||| background	count=1
function_name	position courante ||| ifxus tell	count=1
arg_pair	une requête aql brute ||| string $query	count=1
function_name	tâche est [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	sein d'une archive ||| bool	count=1
function_name	la mémoire partagée de ||| shm attach	count=1
arg_pair	sur une date donnée ||| string $format string $date	count=1
function_name	à ingres_query() ||| ingres	count=1
function_name	l' eventbuffer courant ||| add buffer	count=1
function_name	la méthode ||| entry	count=1
function_name	document pdf pour ||| set	count=1
arg_pair	les caractères alphabétiques ||| string $string	count=1
arg_pair	crée un document pdf ||| resource $fdf_document string $url	count=1
arg_pair	identique ||| int $day int $year	count=1
function_name	donnée est [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	similaire ||| proc close	count=2
function_name	encodés ||| uudecode all	count=2
arg_pair	address ||| string $address	count=1
function_name	id3v1 qui ||| id3v1	count=1
function_name	pour le ||| fann set	count=1
function_name	ajoute la session ||| add handle	count=1
arg_pair	identique à la ||| int $month	count=1
namespace	curseur typiquement parcourt un ||| mongocommandcursor	count=1
function_name	[function_name_1] champ à ||| [function_name_2] [function_name_1]	count=2
function_name	champs de la ||| fields	count=1
return	la fonction closedir() seul ||| void	count=1
function_name	code de l'os hôte ||| host os	count=1
function_name	limite inférieure dans le ||| get terms include lower bound	count=1
function_name	types or selon ||| or	count=1
namespace	du tampon de ||| function	count=1
return	le contenu courant du ||| string	count=1
function_name	elle prend plus ||| time	count=1
function_name	identifiant [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	un objet splfileobject ||| splfileobject	count=1
arg_pair	structure qui héberge ||| resource $queue array $data	count=1
function_name	la table de traduction ||| html translation table	count=1
arg_pair	surveillance d'une ||| resource $fam_monitor	count=1
function_name	bloc de mémoire partagée ||| shmop	count=1
function_name	[function_name_1] sqlstate retournée ||| [function_name_1] [function_name_2]	count=1
arg_pair	contexte log_killcursor lors ||| array $server array $info	count=1
function_name	fichier est ||| is	count=2
arg_pair	appel le gestionnaire multiple ||| resource $mh	count=1
function_name	hormis le fait ||| proc close	count=1
arg_pair	dans la chaîne donnée ||| string $source	count=1
function_name	positionne le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	fichiers ainsi que ||| void	count=1
arg_pair	de résultat ||| int $row_number	count=1
arg_pair	lit le fichier remote_file ||| string $remote_file int $mode	count=1
function_name	crée une nouvelle ||| create document fragment	count=1
function	définition [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	retourne la méthode de ||| zip entry compressionmethod	count=1
function_name	compile un script ||| compile	count=1
function	[function_name_1] connexion spécifiée ||| [function_name_1] [arg_pair_2]	count=2
function_name	de configuration [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	tableaux avec des tests ||| array uintersect uassoc	count=1
function_name	extension à utiliser dans ||| extension	count=1
function_name	défini l'endroit où ||| fann set	count=1
function_name	la ||| newt	count=2
function_name	[function_name_1] readline affiche ||| [function_name_2] [function_name_1]	count=6
function_name	la table de hachage [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	décompresse ||| decompress	count=2
function_name	définies ||| defined	count=1
function	[function_name_1] pour event ||| [arg_pair_2] [function_name_1]	count=4
function_name	défini l'endroit ||| fann	count=1
function_name	si le fichier est ||| open	count=1
function_name	nom de l'entrée ||| filename	count=1
function_name	exécution ||| prepare	count=1
function_name	l'image ||| set type	count=2
function_name	le flux ||| stream	count=3
function_name	trace ||| trace	count=4
function_name	fourni et ||| mailparse uudecode	count=1
function_name	flux ||| stream copy to stream	count=2
function_name	avec un identifiant donné ||| by	count=1
arg_pair	l'aide de deux collections ||| mongodb $db	count=1
function_name	retourne ||| get from	count=1
function_name	demande un verrou sur ||| dbplus getlock	count=1
arg_pair	data ||| string $data	count=1
function_name	les tailles de ||| enc get supported key sizes	count=1
function_name	le code ||| doc javascript	count=1
namespace	pool ||| pool	count=2
function_name	protège une chaîne ||| pg escape	count=1
return	verrou sur la ||| int	count=1
namespace	le flux de pixels ||| gmagick	count=1
function_name	[function_name_1] la couleur ||| [function_name_1] image matte [function_name_2]	count=1
function_name	pour toutes les classes ||| construct	count=1
arg_pair	une ||| int $index	count=1
arg_pair	subject qui ne ||| string $subject	count=1
function_name	lit le contenu courant ||| get	count=1
function_name	définir le délai maximal ||| query timeout	count=1
namespace	remplace la brosse ||| function	count=1
function_name	dernière requête ||| last	count=2
function_name	page courante du ||| current page	count=2
function_name	la file de messages ||| remove queue	count=1
function_name	méthode event::del() ||| del signal	count=1
function_name	[function_name_1] situé ||| [function_name_1] [function_name_2]	count=4
function_name	s'interrompt si elle ||| max poll	count=1
return	forme ||| void	count=2
function_name	l' eventbuffer courant ||| add	count=1
function_name	la mémoire partagée ||| shm	count=2
function_name	comparer ||| ldap compare	count=2
function_name	le ||| rewind	count=1
function_name	[function_name_1] de modification ||| [function_name_1] [function_name_2]	count=1
namespace	appeler lorsqu'un agent émet ||| gearmanclient	count=1
return	à la fonction mktime() ||| int	count=1
function_name	individuel [function_name] chaque ||| adaptive threshold [function_name]	count=1
namespace	bouclage d'un niveau ||| recursiveiteratoriterator	count=1
arg_pair	buf ||| string $buf	count=1
arg_pair	texte text en utilisant ||| string $fontfile string $text	count=1
return	en utilisant trois points ||| bool	count=1
function_name	du contenu ||| get	count=1
function_name	définit l'image ||| set mask image	count=1
arg_pair	du tableau rows dans ||| array $rows string $delimiter	count=1
function_name	les ||| to string	count=2
function_name	écrit ||| eio write	count=2
function_name	du point vert ||| image green	count=1
function_name	résultants ||| batch	count=1
arg_pair	et lui associe ||| int $cols	count=1
namespace	incluant ||| function	count=1
arg_pair	bloc de texte ||| string $text	count=1
function_name	depuis un socket ||| stream socket	count=1
function_name	crée ||| posix	count=1
return	forme d'un ||| int	count=2
function_name	prochaine ||| cubrid next result	count=2
arg_pair	de deux collections ||| mongodb $db	count=1
arg_pair	la base de données ||| resource $connection string $data	count=1
function_name	[function_name_1] version courante ||| [function_name_2] [function_name_1]	count=3
namespace	de tri ||| arrayobject	count=1
arg_pair	lignes par ||| resource $image	count=1
return	si la connexion ||| bool	count=1
function_name	[function_name_1] existante suivant ||| [function_name_2] [function_name_1]	count=1
arg_pair	temporairement le ||| resource $fam_monitor	count=1
function_name	optionnellement à la révision ||| svn	count=1
namespace	contenu d'une [namespace] ||| [namespace]	count=2
function_name	une connexion à un ||| get	count=1
function_name	récupère la largeur ||| getimagewidth	count=1
function_name	ajoute ||| add task	count=2
function_name	doit être utilisée que ||| set metadata	count=1
function_name	les clés de ||| key	count=1
function_name	que gestionnaire ||| handler	count=1
namespace	d'une page ||| harudestination	count=1
function_name	la tangente pour chaque ||| trader tan	count=1
function_name	un identifiant donné ||| id	count=1
function_name	d'activation pour la ||| activation function	count=1
function_name	file de ||| remove queue	count=1
function_name	la dernière commande mysql ||| mysql errno	count=1
function_name	de lignes à ||| set rows	count=2
arg_pair	espace de noms associé ||| string $qualifiedname	count=1
function_name	readline ||| readline	count=2
function_name	dans ||| yaz database	count=1
function_name	[function_name_1] modification du ||| [function_name_2] [function_name_1]	count=1
function_name	lot d'objets résultants ||| batch size	count=1
function_name	prend ||| eio set	count=1
arg_pair	colonne ||| resource $stmt mixed $column	count=2
return	récupère les ||| array	count=2
function_name	d'entrelacement ||| interlace scheme	count=2
function_name	bytecode [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	pendant l'entrainement rprop ||| rprop	count=1
function_name	chaîne de caractères ||| set xmlversion	count=1
function_name	de résultat mnogosearch ||| udm	count=1
return	cette ||| int	count=1
function_name	la fin de l'itération ||| iteration	count=1
arg_pair	sur une ||| string $format	count=1
function_name	[function_name_1] posix qui ||| [function_name_2] get [function_name_1]	count=1
function_name	de la dernière réponse ||| last response	count=1
function_name	la disposition courante de ||| layout	count=1
function_name	précédente de la ||| dbplus prev	count=1
function_name	retourne un contexte ||| context	count=1
namespace	délinéarise un [namespace] à ||| [namespace]	count=1
function_name	[function_name_1] nombre d'erreurs ||| [function_name_2] [function_name_1]	count=2
arg_pair	un objet ||| resource $connection mixed $object_id	count=1
function_name	token ||| get access token	count=1
function_name	en anglais [function_name_2] ||| [function_name_2] error [function_name_1]	count=2
function_name	initialiser le phar ||| phar	count=1
function_name	[function_name_1] avec la ||| [function_name_1] [function_name_2]	count=3
function_name	logo ||| logo guid	count=2
return	un bloc de ||| bool	count=1
function_name	ajoute un nouveau filtre ||| filter range	count=1
arg_pair	d'un fichier ||| int $length	count=1
function_name	un document xml ||| merge	count=1
function_name	la temporisation ||| ob end	count=1
function_name	l'objet a une image ||| image	count=1
function_name	variable d'environnement apache spécifiée ||| apache setenv	count=1
function_name	courant du tampon ||| ob get	count=1
function_name	à jour ||| update	count=2
arg_pair	à fournir à ||| string $contents	count=1
function_name	utf-8 en utf-16 ||| pdf utf8 to utf16	count=1
function_name	marqueur [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	paramètre timestamp ||| int $format	count=1
return	au début de ||| bool	count=1
return	corrélation entre ||| void	count=1
function_name	délai ||| immortal	count=1
function_name	libère les ressources ||| destroy	count=1
function_name	de la première ||| strpos	count=1
function_name	est similaire [function_name] avec une ||| [function_name]	count=1
arg_pair	et p ||| gmp $p	count=1
function_name	définit l'apparence d'une ||| set	count=1
function_name	l'image ||| preview	count=1
function_name	la ||| element by	count=1
function_name	la bufferisation ||| set buffering	count=1
function_name	de surveillance en ||| watch	count=1
arg_pair	queues ||| string $qmanagername array $connoptions	count=1
function_name	le schéma d'entrelacement ||| interlace scheme	count=2
arg_pair	chaîne str ||| string $str string $character_mask	count=2
function_name	retourne la ||| zip entry	count=1
function_name	que pour stocker des ||| set metadata	count=1
function_name	le message d'erreur ||| error	count=4
arg_pair	satisfont un modèle ||| string $pattern bool $only_names	count=1
arg_pair	à l'exécution ||| string $function	count=2
return	représenté par ||| bool	count=1
namespace	d'erreur le [namespace] ||| [namespace]	count=1
namespace	thread ||| function	count=1
function_name	renvoie la position du ||| ftell	count=1
function_name	les informations de connexion ||| cubrid connect	count=1
function_name	la limite de l'anglet ||| miter limit	count=1
namespace	caractères d'instance ||| sdo_das_xml	count=1
function_name	le fichier ||| csr export to file	count=1
function_name	caractères invisibles en début ||| trim	count=1
arg_pair	à une valeur spécifique ||| string $value	count=1
function_name	un dictionnaire à utiliser ||| enchant broker	count=1
function_name	[function_name_1] les ||| [function_name_1] [function_name_2]	count=5
function_name	plusieurs canaux d'une ||| channel	count=1
function_name	queue ou une ||| mqseries put	count=2
return	la raison pour ||| string	count=2
arg_pair	d'une ||| string $class	count=1
namespace	l'application précédemment définie avec ||| gearmanclient	count=1
function_name	slob ||| ifxus seek slob	count=2
arg_pair	dans le fichier filename ||| int $flags	count=1
function_name	variable ||| ucache	count=1
namespace	que les paramètres ||| function	count=1
function_name	yaml de la ||| yaml emit	count=2
function_name	protège une chaîne ||| pg escape string	count=1
return	pour une ||| string	count=2
arg_pair	crée un fichier spécial ||| int $major	count=1
function_name	image le ||| set image	count=1
function_name	connexion passées avec ||| cubrid connect	count=1
namespace	cette fonction configure l'analyseur ||| function	count=1
namespace	les variables ||| function	count=1
function_name	si [function_name] ||| [function_name] is	count=2
function_name	données rrd [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	de ||| set max poll time	count=2
arg_pair	event_handler en ||| callable $event_handler	count=1
arg_pair	statue un fichier ||| string $path	count=1
function_name	nombre maximal [function_name_2] ||| [function_name_1] query [function_name_2]	count=3
function_name	la première paire clé/valeur ||| first	count=1
function_name	modifie ||| path	count=1
function_name	ressources ||| destroy	count=1
function_name	à la chaîne de ||| string	count=1
function_name	miniatures ||| preview	count=1
namespace	bloc de mémoire ||| function	count=1
function_name	les ||| rrd	count=1
function_name	[function_name_1] le nom ||| [function_name_1] short [function_name_2]	count=3
function_name	crée une paire de ||| socket create pair	count=1
return	la qualité d'une ||| gmagick	count=1
arg_pair	envoie une requête ||| string $query	count=1
function_name	la valeur de la ||| set	count=1
function_name	3x3 ||| imageconvolution	count=1
function_name	plus ||| poll	count=1
function_name	remplit le [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	de queues ||| string $qmanagername array $connoptions	count=1
function	lie un tableau [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2] array $var_array int $max_table_length	count=1
arg_pair	requête à ||| string $query string $index	count=1
function_name	temporaire tous ||| mailparse uudecode	count=1
function_name	transaction ibase [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	résultants ||| size	count=1
function_name	récupère l'url complète ||| url	count=1
function_name	le terme à ||| terms upper bound	count=1
arg_pair	première ||| mongodb $db	count=1
function_name	plusieurs des canaux ||| channel	count=1
function_name	efface un ||| pdf delete textflow	count=1
function_name	une image ||| image	count=7
namespace	rappel callable utilisée par ||| function	count=4
function_name	[function_name_1] tentative de ||| [function_name_2] [function_name_1]	count=14
function_name	contenu ||| construct	count=1
function_name	document pdf [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	passée en ||| escape	count=1
function_name	socket ||| socket accept	count=1
return	tous les ||| bool	count=1
return	ferme le dictionnaire ||| bool	count=1
function_name	la valeur de sqlstate ||| stmt error	count=1
function_name	le fuseau horaire ||| geoip time zone	count=1
function_name	lue dans le ||| mysql	count=1
arg_pair	centrée sur les ||| int $cy	count=1
arg_pair	par l'utilisateur ||| int $num_output callable $user_function	count=1
arg_pair	fait ||| int $hour int $minute	count=1
function_name	readline de [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	caractère \x00 pour indiquer ||| footer	count=1
function_name	d'erreur du serveur ||| error log	count=2
function_name	[function_name_1] rappel pour ||| [function_name_1] [function_name_2]	count=3
function_name	nouveau filtre entier à ||| filter range	count=1
function_name	utilisée pour lier des ||| cubrid lob2 bind	count=1
function_name	peuvent ||| set	count=1
function_name	de l'objet sous la ||| string	count=1
arg_pair	domaine ||| string $domain string $msgid1	count=1
arg_pair	l'un d'entre eux change ||| array $read array $write	count=1
function_name	crypte le ||| encrypt	count=1
return	connexion à ||| array	count=1
arg_pair	fichier ||| string $filename int $size	count=1
function_name	calcule le logarithme base-10 ||| log10	count=1
return	similaire ||| int	count=1
function_name	les ||| add	count=1
function_name	à partir d'une chaîne ||| load	count=1
function_name	correspondantes dans ||| into struct	count=1
namespace	à ||| gmagickdraw	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] field name [arg_pair_2]	count=1
namespace	de deux collections ||| mongogridfs	count=1
arg_pair	commande command ||| int $return_var	count=1
arg_pair	chaîne d'une ||| string $str	count=1
namespace	ressources mémoires ||| function	count=1
function_name	place des antislashs ||| db2	count=1
function	[function_name_1] l'hôte hostname ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	les caractères ||| string $pattern	count=1
function_name	spécifiée ||| pg query	count=1
namespace	données ||| pharfileinfo	count=1
function_name	le dossier d'archives spécifié ||| compressionmethod	count=1
arg_pair	de la recherche sur ||| string $pattern	count=1
function_name	placer un verrou ||| cubrid lock read	count=1
function_name	lors de ||| set	count=1
arg_pair	fonction ||| int $hour int $minute	count=1
arg_pair	messages spécifiés par msglist ||| resource $imap_stream string $msglist	count=1
arg_pair	dans ||| string $map	count=1
function_name	pour lier des ||| bind	count=1
return	le contenu des ||| mongodb	count=1
function_name	pour ||| maxdb	count=1
function_name	crée et ||| create	count=1
arg_pair	les ||| string $prefix	count=2
function_name	profondeur [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	de faible priorité ||| low	count=1
arg_pair	envoie une ||| object $link_identifier	count=1
arg_pair	la fonction cubrid_lob2_bind() ||| mixed $bind_value	count=1
function_name	tailles de ||| get supported key sizes	count=1
function_name	un marqueur ||| bind	count=1
namespace	un [namespace] est ||| [namespace]	count=1
function_name	libère toute la mémoire ||| mysql free result	count=1
arg_pair	de a et p ||| gmp $a gmp $p	count=1
return	ou en ||| bool	count=2
function_name	d'une ||| string	count=1
function_name	informations d'un périphérique racine ||| gupnp device info	count=1
function_name	méthode est utilisée pour ||| set	count=1
function_name	cette fonction ||| get element	count=1
function_name	et annule la possibilité ||| oci cancel	count=1
function_name	xml ||| load	count=1
function_name	les composants qui sont ||| newt	count=1
return	fourni et extrait ||| array	count=1
arg_pair	et la seconde ||| mongodb $db string $prefix	count=1
function_name	être utilisé pour diriger ||| set multi by	count=1
function_name	paramètres de l'objet ||| to	count=1
function_name	chaîne de caractères ||| set	count=1
function_name	sarprop ||| get sarprop	count=1
arg_pair	valeur entière ou ||| number $increment	count=1
arg_pair	valeur fournie qui ||| int $color float $value	count=1
arg_pair	[arg_pair] la ||| [arg_pair]	count=1
function_name	précédente de ||| prev	count=1
function_name	alias basé ||| alias	count=1
function_name	regroupements ||| group	count=1
return	[return] paramètre sparse_method ||| [return]	count=1
arg_pair	par la couleur border ||| int $y int $border	count=1
arg_pair	des ||| mongodb $db string $prefix	count=1
namespace	mutex ||| mutex	count=1
arg_pair	basé sur des ||| string $diff	count=1
function_name	de compression utilisée sur ||| zip entry compressionmethod	count=1
namespace	identifiant donné ||| domdocument	count=1
function	[function_name_1] de lecture ||| [arg_pair_2] [function_name_1]	count=6
arg_pair	caractères lors ||| string $pattern string $string	count=1
arg_pair	la largeur ||| resource $p float $width	count=1
arg_pair	générateur d'extraits de ||| string $field_override	count=1
function_name	code [function_name_2] ||| [function_name_2] [function_name_1]	count=18
function_name	libère de la mémoire ||| free	count=1
arg_pair	variable ||| bool $syntax_only	count=1
arg_pair	entraîne une machine ||| array $problem	count=1
arg_pair	saturation et ||| float $saturation	count=1
arg_pair	créé avec [arg_pair] et liée ||| [arg_pair]	count=1
return	pour la première fois) ||| void	count=1
namespace	travaux assigné ||| gearmanjob	count=1
arg_pair	fann_read_train_from_file() ||| string $file_name	count=1
arg_pair	utilisateur php event_handler en ||| callable $event_handler string $event_name1	count=1
function_name	est de type ||| is numeric	count=1
function_name	de type insert effectuée ||| insert	count=1
function_name	uniquement avec une connexion ||| get	count=1
function_name	le prochain ||| next	count=6
function_name	[function_name_1] rappel à ||| [function_name_2] [function_name_1]	count=1
function_name	retourne ||| introspection get	count=1
function_name	caractères brutes des ||| return raw	count=1
return	d'exécution des fichiers ainsi ||| void	count=1
function_name	la dernière requête ||| mysqli stmt error	count=2
function_name	défini l'endroit où les ||| set error	count=1
function_name	la taille interne de ||| size	count=1
arg_pair	méthode factorielle crée ||| int $size	count=1
function_name	text sont des majuscules ||| ctype upper	count=1
function_name	le ||| task	count=2
return	lit le contenu complet ||| resource	count=1
arg_pair	ressource ||| resource $fam	count=1
function_name	jacobi de ||| gmp jacobi	count=1
function_name	[function_name_1] d'activation ||| [function_name_2] [function_name_1]	count=2
return	du texte à ||| bool	count=1
function_name	la clé key sur ||| multi by key	count=1
function_name	à la ||| buffer	count=1
arg_pair	certains éléments d'un document ||| int $page string $optlist	count=1
function_name	informations verbeuses sur le ||| verbose	count=1
function_name	[function_name_1] serveur oracle ||| [function_name_2] [function_name_1]	count=4
function_name	les informations [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	va protéger tous les ||| escape string	count=1
namespace	la méthode ||| samconnection	count=1
function_name	utilisée pour modifier ||| set	count=1
function_name	valide ||| valid	count=3
return	récupère les ||| string	count=1
function_name	utilisée sur le dossier ||| zip	count=1
function_name	méthode phar::startbuffering() peut fournir ||| start buffering	count=1
function_name	largeur du texte ||| text width	count=2
function_name	la bibliothèque ucd ||| set quick print	count=1
namespace	fin de ||| eventbuffer	count=1
function_name	snmp ||| snmpset	count=1
function_name	du fichier ||| mailparse uudecode	count=1
arg_pair	position x y ||| int $y	count=1
function	[function_name_1] sur la ||| [arg_pair_2] [function_name_1]	count=2
function_name	utilisée pour [function_name_2] ||| [function_name_2] [function_name_1]	count=9
function_name	est similaire à la ||| by id	count=1
namespace	bits d'exécution ||| pharfileinfo	count=1
arg_pair	paramètre onoff ||| resource $connection_id bool $onoff	count=1
function_name	la variable donnée est ||| is numeric	count=1
arg_pair	où les ||| resource $errdat	count=1
arg_pair	modifie les attributs du ||| resource $fd	count=1
function_name	paramètre est [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	espace de noms ||| end namespace	count=1
function	en-têtes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	dans le cache utilisateur ||| wincache ucache	count=2
return	identique à la ||| void	count=1
function	[function_name_1] type d'éléments ||| [function_name_1] element [arg_pair_2]	count=1
function_name	requêtes s'exécutent ||| event loop	count=1
function_name	choisit la couleur ||| pdf setrgbcolor	count=1
function_name	caractères pour ||| to string	count=1
function_name	fonction est une ||| is	count=1
function_name	file ||| queue	count=2
function_name	via la méthode eventbase::stop() ||| got stop	count=1
function_name	contenant [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	sortie en cascade ||| set cascade output	count=1
function_name	défini l'endroit où ||| fann set error log	count=1
arg_pair	dans ||| resource $compcode resource $reason	count=1
arg_pair	hormis ||| string $string	count=1
function_name	le sinus hyperbolique pour ||| trader sinh	count=1
function_name	avec gettimeofday ||| gettimeofday	count=1
namespace	taille du tampon augmente ||| eventbuffer	count=1
function_name	pour définir les modules ||| set	count=1
arg_pair	méthode est une méthode ||| string $key	count=1
function_name	couleur spécifiée sous la ||| color value	count=1
namespace	l' eventbuffer courant ||| eventbuffer	count=1
function_name	contient les paires ||| pspell config repl	count=1
arg_pair	une matrice de la ||| resource $image array $matrix	count=1
arg_pair	ressource de la ||| int $type int $limit	count=1
function_name	des ||| escape string	count=2
function_name	de ||| string	count=5
function_name	fonction utilisateur) ||| restore error handler	count=1
function_name	plus ||| set max poll time	count=2
function_name	sur le ||| zip	count=1
function_name	toutes les pages ||| pages	count=1
function_name	[function_name_1] le protocole ||| [function_name_2] [function_name_1]	count=2
return	retourne le gestionnaire ||| string	count=1
namespace	les ||| pharfileinfo	count=1
function_name	appelé lorsque l'on termine ||| end children	count=1
function_name	de recherche ldap ||| ldap	count=1
namespace	données retourne les réponses ||| mongocursor	count=1
function_name	de champs ||| field	count=1
arg_pair	de l'envoyer au ||| string $source_string	count=1
function_name	identifiant ||| get element by id	count=2
function_name	rprop ||| set rprop	count=1
function_name	ajoute la ||| curl multi add	count=1
function_name	des directives ||| policies	count=1
function_name	rappel à appeler lorsqu'un ||| callback	count=1
function_name	pdi ||| pdf get pdi parameter	count=2
function_name	crypte le contenu et ||| blenc encrypt	count=1
function_name	personnalisées dans ||| metadata	count=1
function_name	prochaine ligne ||| fetch	count=3
function_name	actuellement en fonctionnement ||| running	count=1
function_name	texte à ||| ps show	count=1
function	[function_name_1] l'encodage pour ||| [function_name_1] targetencoding resource $pxdoc [arg_pair_2]	count=1
arg_pair	texte avec des ||| string $blockname string $text	count=1
function_name	minimale du ||| min error	count=1
function_name	méthode exception::__construct() ||| previous	count=1
function_name	un ||| immortal	count=1
function_name	par la méthode oauthprovider::timestampnoncehandler() ||| nonce	count=1
arg_pair	mode wsdl ||| mixed $wsdl array $options	count=1
function_name	la fin de la ||| push	count=1
function_name	données blob/clob depuis ||| cubrid lob export	count=1
arg_pair	index ainsi que toutes ||| mixed $index	count=1
function_name	s'interrompt si elle ||| max	count=1
function_name	remplace ||| imagesetbrush	count=1
function_name	la couleur de ||| set image background color	count=1
return	vérifie si ||| bool	count=5
function_name	nom de ||| name	count=3
function_name	retourne les caractères brutes ||| raw	count=1
function_name	tous les en-têtes http ||| apache request headers	count=1
arg_pair	text à ||| string $text	count=1
function_name	mémoires ||| form	count=1
function_name	insérer un seul élément ||| cubrid	count=1
function_name	être utilisé pour ||| maxdb	count=1
function_name	antislashs devant les caractères ||| db2 escape	count=1
function_name	retourne ||| get errno	count=1
namespace	un ||| mongoclient	count=1
function_name	dernière requête de scan ||| yaz scan	count=1
function_name	tous ||| mailparse uudecode all	count=2
function_name	obtient des ||| sybase fetch	count=1
function_name	arrière plan et retourne ||| high	count=1
function_name	[function_name] bcompiler ||| bcompiler [function_name]	count=3
function_name	dernier accès au ||| get atime	count=1
function_name	ajoute ||| add locallink	count=2
function_name	[function_name_1] brutes ||| [function_name_2] [function_name_1]	count=2
function_name	d'apparition des ||| mlt min doc	count=2
function_name	de ||| preview	count=2
function_name	récupère la taille décompressée ||| get packed size	count=1
return	de travaux ||| string	count=1
function_name	requêtes s'exécutent ||| eio event loop	count=1
function_name	[function_name] de ||| remove [function_name]	count=1
function_name	nom d'hôte ou une ||| by name	count=1
function_name	d'attente s'interrompt si elle ||| eio set max poll time	count=1
function_name	[function_name] chiffré et ||| [function_name]	count=3
function_name	script ||| set include	count=1
arg_pair	fonction imap_open() pour le ||| resource $imap_stream	count=1
function_name	identifiant de session curl ||| curl init	count=1
function_name	une chaîne est ||| is	count=1
arg_pair	passés ||| int $month	count=1
arg_pair	variables var ||| array $array	count=1
function_name	de l'encodage mime d'une ||| preferred mime	count=1
namespace	effectue une capture ||| function	count=1
return	où les ||| void	count=1
function_name	si radius_get_attr() ||| radius	count=1
function_name	flou à ||| gaussian blur	count=1
function_name	le prochain résultat ||| next	count=1
function_name	fonction pcntl_sigwaitinfo() suspend son ||| pcntl sigwaitinfo	count=1
function_name	avec un nom ||| tag name	count=1
function_name	patch [function_name_2] ||| [function_name_1] [function_name_2]	count=5
function_name	nouveau point de contrôle ||| gupnp control point new	count=1
function_name	le cosinus hyperbolique ||| trader cosh	count=1
function_name	déplace toutes ||| buffer	count=1
function_name	dimensions contenant la largeur ||| ps string geometry	count=1
function_name	d'instance ||| string	count=1
namespace	base de données sur ||| tokyotyrant	count=1
namespace	assigné par le ||| gearmanjob	count=1
arg_pair	une connexion ||| string $username	count=1
arg_pair	jpeg dans le ||| int $height int $imagetype	count=1
function_name	lors de la fermeture ||| close	count=1
function_name	définit la valeur pour ||| set	count=1
function_name	vaut null ||| null	count=1
arg_pair	les données passées avec ||| string $data	count=1
function_name	sauve dans le fichier ||| to file	count=1
function_name	les fichiers encodés qui ||| uudecode	count=1
return	récupère les informations ||| string	count=1
function_name	sur le serveur ||| immortal	count=1
return	une requête en ||| bool	count=1
function_name	sélectionne la base de ||| maxdb select db	count=1
function_name	dans le flux ||| copy to stream	count=1
return	cette fonction libère les ||| void	count=1
arg_pair	certains éléments d'un ||| int $page	count=1
function_name	coupe ||| ftruncate	count=1
function_name	un identifiant ||| element by	count=1
arg_pair	le fait que ||| int $year	count=2
function_name	plusieurs canaux [function_name_2] ||| [function_name_2] [function_name_1]	count=5
namespace	les caractères alphabétiques ||| function	count=1
function_name	copie du noeud à ||| node	count=1
function_name	[function_name_1] code erreur ||| [function_name_2] [function_name_1]	count=4
return	les fichiers encodés qui ||| array	count=1
arg_pair	dans l'argument result ||| string $path int $pri	count=1
function_name	données du tampon ||| add	count=1
namespace	à cette méthode ||| soapclient	count=1
function_name	défini la fraction de ||| change fraction	count=1
return	avec ||| array	count=1
function_name	la forme en ||| form destroy	count=1
function_name	[function_name_1] le ||| [function_name_2] [function_name_1]	count=2
function_name	et à ajouter ||| add vars	count=1
namespace	lignes par ||| function	count=1
function_name	image pour ||| open image file	count=1
function	chdb contenant [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	un fichier ||| string $pathname int $mode	count=1
function_name	noms des éléments principaux ||| principals	count=1
arg_pair	rappel si le paramètre ||| mixed $callback	count=1
function_name	défaut si une exception ||| exception	count=1
function_name	haute en arrière plan ||| do high	count=1
namespace	sémaphore nommé ou non ||| syncsemaphore	count=1
function_name	bloc [function_name] ||| oci [function_name] implicit	count=3
function_name	functions ||| functions	count=1
arg_pair	une fonction anonyme ||| string $args string $code	count=1
function_name	fork dans le fils ||| fork	count=1
function_name	ressources mémoires ||| form	count=1
function_name	[function_name_1] l'espace ||| [function_name_2] [function_name_1]	count=1
function_name	de l'entrée ||| char	count=1
return	entrée moins ||| int	count=1
arg_pair	local vers un serveur ||| resource $session string $local_file	count=1
rest	un nom [function_2] ||| [return_1] [function_2]	count=1
function_name	seule ligne depuis ||| cubrid fetch	count=2
function_name	de caractères ||| load	count=1
function_name	base de données paradox ||| px numfields	count=1
namespace	mb ||| mongocursor	count=1
function_name	retourne le nombre ||| ifx num	count=1
return	[return] utilisant ||| [return]	count=3
function_name	lie un ||| bind	count=1
function_name	array complétée jusqu'à la ||| pad	count=1
return	output en ||| bool	count=1
namespace	crée un ||| xmldiff\file	count=1
arg_pair	si l'accès ||| string $user bool $nodns	count=1
arg_pair	la requête query ||| string $query	count=2
function_name	portée de l'espace de ||| lookup namespace	count=1
arg_pair	à un ||| resource $p float $g	count=2
arg_pair	opcode spécifié avec une ||| int $opcode	count=1
function_name	à [function_name] avec ||| [function_name] fetch	count=1
function_name	rappel [function_name] pour ||| set [function_name]	count=1
function_name	crée une ||| create document fragment	count=1
return	un tableau de fonctions ||| array	count=1
function	exécute [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	serveurs ||| servers	count=3
function_name	compare les ||| compare	count=1
function_name	retourne ||| get field names	count=1
function_name	[function_name_1] via la ||| [function_name_2] [function_name_1]	count=8
function_name	la facette ||| facet	count=1
return	cette méthode est utile ||| array	count=1
function_name	de curseur utilisé ||| db2 cursor	count=1
return	la valeur ||| mixed	count=3
function_name	périphérique racine ||| gupnp root device	count=3
function_name	en ||| escape string	count=2
return	toutes les données ||| bool	count=1
function_name	cubrid_current_oid() ||| current oid	count=2
function_name	[function_name_1] l'instance haruencoder ||| [function_name_1] [function_name_2]	count=1
function_name	libère les ressources prises ||| ifx free	count=1
function_name	champ de résultat ||| res field	count=1
function_name	[function_name_1] erreurs ||| [function_name_2] [function_name_1]	count=1
arg_pair	qui permettra d'accéder à ||| int $memsize	count=1
function_name	transaction ||| transaction	count=1
function_name	[function_name_1] [function_name_2] page ||| [function_name_2] [function_name_1]	count=2
function_name	considère array comme une ||| array	count=1
function_name	dans un fichier temporaire ||| mailparse uudecode all	count=1
return	les chaînes alphanumériques ||| void	count=1
arg_pair	le fait ||| int $hour	count=1
function_name	de ||| fann set	count=1
namespace	hormis ||| function	count=2
function_name	fonction ||| element by	count=2
namespace	temporaire ||| harudoc	count=2
return	false s'il ne sort ||| bool	count=1
function_name	la fonction ||| field	count=2
function_name	attribut dans un document ||| update attributes	count=1
function_name	compression utilisée sur le ||| zip entry	count=1
arg_pair	et position représentant une ||| resource $stmt int $row_number	count=1
function_name	définition ||| pg meta data	count=2
arg_pair	entraîne ||| array $weights	count=1
namespace	excepté le ||| function	count=1
function_name	l'itérateur interne ||| inner iterator	count=2
function_name	champs du ||| fields	count=1
namespace	arbre de ||| sdo_das_xml	count=1
function_name	file de messages identifiée ||| queue	count=2
arg_pair	échantillon depuis le rrd ||| string $file int $raaindex	count=1
function_name	d'extraits mis [function_name] ||| get [function_name]	count=2
function_name	record pour ||| dbase delete record	count=1
function_name	pour ||| include	count=1
function_name	termes de requête ||| terms	count=1
function_name	envoie ||| send	count=3
arg_pair	à la ||| resource $result	count=2
arg_pair	la chaîne unescaped_string ||| string $unescaped_string	count=1
function_name	sauvegarde ||| save	count=6
function_name	[function_name] du ||| [function_name]	count=1
namespace	le ||| ev	count=2
namespace	script en ||| function	count=1
function_name	l'en-tête du [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	place ||| db2 escape	count=1
arg_pair	lit les données ||| array $authns array $addtl	count=1
function_name	erreur une exception de ||| set	count=1
function_name	de modification de sortie ||| output	count=1
function_name	à la ||| form destroy	count=1
function_name	retourne les entêtes ||| get	count=1
return	d'une archive phar ||| bool	count=1
function_name	applique un filtre ||| filter	count=1
arg_pair	[arg_pair_1] en une ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	[function_name_1] serveur postgresql ||| [function_name_2] [function_name_1]	count=1
function_name	données msql ||| msql	count=1
function_name	et éteint la temporisation ||| ob end	count=1
namespace	[namespace] partir ||| [namespace]	count=1
arg_pair	de deux collections ||| mongodb $db string $prefix	count=1
arg_pair	une chaîne nommée ||| mixed $priv_key	count=1
namespace	les ||| xmldiff\base	count=1
function_name	pdostatement::columncount() ||| column count	count=1
arg_pair	la valeur de la ||| string $value	count=1
function_name	modifie la valeur ||| path	count=1
arg_pair	le fichier remote_file présent ||| string $remote_file	count=1
namespace	nombre de ||| ev	count=2
arg_pair	[arg_pair] avec le ||| [arg_pair]	count=1
return	base pour ||| string	count=1
arg_pair	dessin à un niveau ||| resource $p float $g	count=1
arg_pair	ingres_fetch_array() avec une différence ||| int $result_type	count=1
function_name	d'occurrences de ||| mb substr	count=1
return	spécifié ||| string	count=1
function_name	est ||| open	count=1
return	mémoires utilisées par ||| void	count=1
arg_pair	g ||| resource $p float $g	count=1
arg_pair	de la ||| int $type int $limit	count=1
function_name	donné ||| by id	count=2
function_name	sévérité ||| min message severity	count=1
arg_pair	au format ascii pem ||| string $passphrase array $configargs	count=1
function_name	la bufferisation ||| buffering	count=1
function_name	[function_name_1] lignes à ||| [function_name_1] [function_name_2]	count=4
arg_pair	en ligne/hors ||| int $port	count=1
function_name	courant du tampon ||| get	count=1
function_name	un ||| mknod	count=1
function_name	les fonctions de rappel ||| set callback	count=1
function_name	l'image ||| set image	count=1
arg_pair	détaillées sur une date ||| string $date	count=1
function_name	de lecture ||| chmod	count=1
function_name	objet graphique ||| set gstate	count=1
function_name	toutes les variables ||| variables	count=1
function_name	une police ||| pdf load font	count=1
function_name	qui s'y trouvent ||| mailparse uudecode	count=1
function_name	la fonction geoip_org_by_name() ||| geoip org	count=1
function_name	qui ||| handler	count=1
arg_pair	fournir à ob_start() ||| string $contents	count=1
function_name	retourne [function_name_1] [function_name_2] token php ||| [function_name_2] [function_name_1]	count=1
arg_pair	l'url repos_url ||| string $repos_url	count=1
function_name	d'activation pour ||| set activation function output	count=1
return	ainsi ||| void	count=1
function_name	courant ||| is	count=1
function_name	l'image dans la séquence ||| image	count=1
function	[function_name_1] sur l'algorithme ||| [arg_pair_2] [function_name_1]	count=3
function_name	termes de ||| terms	count=1
function_name	de définir ||| set	count=3
function_name	[function_name_1] une classe ||| [function_name_2] [function_name_1]	count=4
namespace	émise au serveur ||| solrresponse	count=1
function_name	de ||| set xmlversion	count=2
namespace	phar exécutée ||| phar	count=1
arg_pair	service service et ||| string $service	count=1
function_name	sur les ||| eregi	count=1
function_name	le fait ||| proc	count=1
function_name	parallèle d'autres ||| task background	count=1
return	fin de l' ||| bool	count=1
function_name	retourne ||| dbase get	count=1
namespace	en conservant ||| arrayobject	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] slob [arg_pair_2]	count=3
function_name	d'une colonne [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	requête [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	la file ||| eio set	count=1
function_name	[function_name_1] un contexte ||| [function_name_2] [function_name_1]	count=2
function_name	qu'elle fonctionne avec les ||| proc	count=1
function_name	texte à la position ||| ps	count=1
arg_pair	occurrence ||| string $needle	count=2
function_name	d'une notification de modification ||| service proxy add notify	count=1
function_name	fonctions de rappel ||| event buffer set callback	count=1
function_name	les fichiers encodés ||| all	count=1
namespace	les métadonnées ||| mongogridfs	count=1
function_name	retourne la taille interne ||| size	count=1
return	modules à surveiller avec ||| void	count=1
return	antislashs devant les caractères ||| string	count=1
arg_pair	que les paramètres passés ||| int $second int $month	count=1
function_name	et les ||| size	count=1
function_name	le et logique ||| gmp and	count=1
function_name	einer mime kopfzeile ||| iconv mime encode	count=1
arg_pair	nécessaire ||| string $character_set	count=1
function_name	contrôle [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	l'itération commence après ||| begin iteration	count=4
function_name	affiche le ||| pdf show xy	count=1
function_name	ingres ||| ingres query	count=2
function_name	ligne de données ||| fbsql fetch row	count=1
arg_pair	lie un ||| string $sql_param	count=1
function_name	trace pour ||| trace log	count=1
function_name	l'identifiant de processus du ||| pid	count=1
function_name	blob dont ||| ifx free blob	count=1
arg_pair	le nom d'utilisateur username ||| string $username	count=1
function_name	profondeur de récursion ||| depth	count=1
function_name	d'un champ à ||| field	count=1
arg_pair	table table_name sous ||| string $table_name	count=1
return	la base de ||| mixed	count=2
function_name	à la fin ||| buffer	count=1
namespace	code du ||| gmagickdraw	count=1
function_name	[function_name_1] pagination ||| [function_name_2] [function_name_1]	count=6
return	requête en cours sur ||| bool	count=1
function_name	fonction est similaire ||| id	count=1
arg_pair	et bleu d'une ||| int $g int $b	count=1
namespace	[namespace] et ||| [namespace]	count=4
arg_pair	sauvegarde une version ||| string $filename	count=1
function_name	nettoyée ||| tainted	count=1
function_name	définit une fonction de ||| ms set	count=1
function_name	file d'attente ||| poll	count=1
function_name	ainsi ||| chmod	count=1
function_name	à ||| element by id	count=2
namespace	la date de ||| splfileinfo	count=2
function_name	termes la profondeur ||| depth	count=1
function_name	composition de l'image ||| set image compose	count=2
namespace	pour le ||| function	count=1
function	[function_name_1] un ||| [function_name_1] principal [arg_pair_2]	count=1
namespace	ont été sauvegardées ||| pharfileinfo	count=1
function_name	cours ||| path	count=1
return	[return] processus fils ||| [return]	count=4
function_name	une paire ||| pair	count=1
return	valeur de ||| string	count=1
function_name	type id ||| id	count=3
arg_pair	valeurs aux options qui ||| resource $link array $options	count=1
function	suspend [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	de pagination ||| paged result	count=1
function_name	secondes ||| set max	count=1
function_name	fixe l'uid effective de ||| posix setuid	count=1
function_name	plus de ||| poll	count=1
function_name	flou radial d'une image ||| radial blur	count=1
function_name	déplace toutes les ||| add	count=1
function_name	utilisée pour convertir ||| convert to data	count=1
function_name	ressources mémoires utilisées par ||| newt	count=1
namespace	mémoires utilisées par ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1] mysqli $link	count=8
function_name	statut spécifié ||| add task status	count=1
function_name	apache chargés ||| apache get	count=2
namespace	le ||| norewinditerator	count=1
namespace	de notify envoyé par ||| function	count=1
function_name	police et la prépare ||| font	count=1
return	la fin de ||| void	count=1
function_name	décompressée ||| packed	count=1
function_name	si elle prend ||| eio set max poll time	count=1
namespace	uniquement avec ||| mongoclient	count=1
function_name	route via ||| route	count=1
function_name	remplit la ||| fill	count=1
function_name	des messages ||| imap	count=1
function_name	lit le délai ||| delay	count=1
return	méthode retournera toujours false ||| bool	count=1
function_name	de remous ||| swirlimage	count=1
return	d'autres tâches ||| gearmantask	count=2
arg_pair	analyse subject pour ||| mixed $subject int $limit	count=1
arg_pair	fond ||| string $format	count=1
function_name	[function_name_1] d'images de ||| [function_name_2] [function_name_1]	count=2
function_name	retourne l'échelle de ||| scale	count=1
arg_pair	paramètres passés sont ||| int $second	count=1
function_name	fréquence minimale du ||| enum cache min default frequency	count=1
function_name	[function_name_1] nom ||| [function_name_1] [function_name_2]	count=3
function_name	décrémente de ||| ucache dec	count=1
function_name	l'analyseur xml [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	à pclose() hormis le ||| proc	count=1
function_name	premier [function_name_2] ||| [function_name_2] [function_name_1]	count=5
function_name	des informations sur ||| info	count=2
arg_pair	db2 universal database ||| string $database string $username	count=1
namespace	interne est toujours ||| solrdocument	count=1
function_name	md5 ||| md5	count=2
function_name	le calendrier grégorien ||| gregoriantojd	count=1
function_name	fichiers distant en ||| ssh2 sftp stat	count=1
function_name	casse des ||| eregi	count=1
function_name	définit le type ||| set mime type	count=1
arg_pair	avec gestionnaire de queues ||| string $qmanagername array $connoptions	count=1
function_name	première ||| end	count=1
function_name	[function_name_1] caractères courant ||| [function_name_2] [function_name_1]	count=8
return	délai ||| mongocursor	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] key [arg_pair_2]	count=2
function_name	[function_name_1] message d'erreur ||| [function_name_1] [function_name_2]	count=6
namespace	la date ||| splfileinfo	count=2
function_name	pour le ||| imagesetbrush	count=1
function_name	un élément avec ||| element by	count=1
arg_pair	paramètre req_identifier de la ||| resource $req_identifier	count=1
function_name	représentation yaml ||| yaml emit file	count=1
function	avec [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	tant que ||| eio event	count=1
function_name	devant les caractères ||| escape string	count=1
function_name	synchrone et définit ||| proxy action set	count=1
arg_pair	le fichier local local_file ||| string $local_file	count=1
function_name	qui ne peuvent pas ||| set	count=1
function_name	verrou sur le buffer ||| lock	count=1
function_name	vérification de la syntaxe ||| check syntax	count=1
function_name	gestionnaire par défaut ||| default handler	count=2
function_name	retourne ||| stream get	count=2
function_name	l'image spécifiée avec ||| images	count=1
arg_pair	pour une chaîne ||| string $type	count=1
function	[function_name_1] [arg_pair_2] cache ||| [function_name_1] [arg_pair_2]	count=2
function	[function_name_1] structure de ||| [arg_pair_2] [function_name_1]	count=1
function_name	le cosinue pour ||| cos	count=1
namespace	chaîne de ||| function	count=1
function_name	message d'erreur en anglais ||| error msg	count=1
function_name	de base pour toutes ||| construct	count=1
function_name	cette fonction crée une ||| create	count=3
function_name	fin ||| append	count=1
function_name	les processus ||| proc close	count=1
return	envoi tous les appels ||| boolean	count=1
namespace	par les ||| function	count=1
function_name	type nombre ||| int	count=1
function_name	[function_name_1] buffer ||| [function_name_2] [function_name_1]	count=2
arg_pair	remplacer le domaine ||| string $msgid1	count=1
arg_pair	propriété ||| string $property_value	count=1
namespace	retourne ||| imagick	count=1
function_name	fonction ||| form destroy	count=2
function_name	réponse en retour ||| handle	count=1
function_name	la pertinence à travers ||| weights	count=1
function_name	d'une colonne ||| field	count=1
function_name	qui ||| set	count=1
function_name	du cache utilisateur ||| wincache ucache	count=3
function_name	attribut dans un document ||| attributes	count=1
function_name	les données du fichier ||| uudecode	count=1
function_name	définit la police ||| setfont	count=1
function	[function_name_1] number ||| [function_name_1] string $format [arg_pair_2]	count=1
namespace	à la ||| limititerator	count=1
arg_pair	remplace ||| resource $image	count=1
namespace	pool à ||| pool	count=1
namespace	formats définis ||| cairoimagesurface	count=1
function_name	instance de la ||| object	count=1
function_name	mime ||| iconv mime encode	count=2
arg_pair	gnupg_adddecryptkey auparavant ||| string $text	count=1
function_name	retourne le type ||| get type	count=4
arg_pair	fichier filename pour ||| string $filename	count=1
function_name	est similaire ||| proc close	count=1
namespace	retourne les réponses dans ||| mongocursor	count=1
function	de statut [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	le nombre de ||| dbase numfields	count=1
namespace	chaîne ||| serializable	count=1
arg_pair	à la fonction ||| int $second int $month	count=1
arg_pair	la base de données ||| string $data	count=1
function_name	alphabétiques en minuscules ||| strtolower	count=2
return	avec ||| void	count=2
function_name	et extrait dans ||| uudecode all	count=1
arg_pair	sur le chemin server_path ||| resource $context string $server_path	count=1
function_name	cette fonction crée ||| create attribute	count=1
return	l'aide de deux ||| mongodb	count=1
namespace	certain ||| mongocursor	count=1
function_name	y écrit ||| write temporary	count=1
function_name	une correction gamma ||| gamma	count=1
arg_pair	colonne ||| mixed $param	count=1
arg_pair	dans la classe class ||| string $class	count=1
namespace	tente de mettre à ||| quickhashintstringhash	count=1
function_name	avaient été ajoutés à ||| destroy	count=1
function_name	et d'équilibrage ||| ms	count=1
arg_pair	flux imap courant ||| string $criteria	count=1
arg_pair	analyse subject pour trouver ||| int $limit	count=1
function_name	largeur ||| getimagewidth	count=1
arg_pair	des filtres en court ||| int $max bool $exclude	count=1
function_name	fait qu'elle fonctionne avec ||| proc close	count=1
arg_pair	la ||| int $day int $year	count=1
function_name	une connexion ||| get	count=1
function_name	le dernier message d'erreur ||| db2 stmt errormsg	count=1
function_name	service exposé ||| gupnp service proxy	count=2
arg_pair	que les ||| int $year	count=2
arg_pair	les caractères ||| string $pattern string $string	count=1
function_name	retourne [function_name_2] ||| [function_name_1] compressed [function_name_2]	count=2
arg_pair	/status ||| resource $fdf_document	count=1
function_name	passée en argument ||| db2	count=1
function_name	de propriétés publiques ||| count	count=1
arg_pair	left_operand ||| string $left_operand	count=1
function_name	qualité d'une image avec ||| image	count=1
function_name	d'attente s'interrompt ||| eio set max poll	count=1
arg_pair	correspondant à l'url repos_url ||| string $repos_url	count=1
namespace	interne au début ||| solrdocument	count=1
function_name	message d'erreur associé à ||| ifx errormsg	count=1
function_name	candidate ||| cand	count=2
function_name	var .. ||| array push	count=1
function_name	modifie les permissions ||| eio fchmod	count=1
function_name	définir les modules ||| set module	count=1
return	devant les caractères ||| string	count=1
arg_pair	colonne correspondant à la ||| resource $result int $field_offset	count=1
arg_pair	index d'une palette ||| int $index	count=1
function_name	champ field donné de ||| field	count=1
namespace	utilisée par l'option ||| function	count=4
function_name	traitement appliqué à ||| images	count=1
arg_pair	est un ||| resource $ann float $rprop_delta_max	count=1
function	de autocommit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
namespace	son ||| ziparchive	count=3
function_name	jeu de résultats ||| cubrid result	count=1
function	[function_name_1] une erreur ||| [function_name_1] field len [arg_pair_2]	count=1
function_name	[function_name_1] rappel timestamp ||| [function_name_2] [function_name_1]	count=1
return	entière existante si ||| bool	count=1
function_name	statistiques du ||| stats	count=1
function_name	crée un fichier ||| posix mknod	count=1
function_name	pour la dernière requête ||| mysqli stmt errno	count=1
arg_pair	un ||| string $value string $field_override	count=1
function_name	ajoute un point ||| add	count=1
function_name	fichier temporaire tous les ||| mailparse	count=1
arg_pair	deux versions de ||| string $version1 string $version2	count=1
function_name	méthode ||| is	count=1
arg_pair	avec les bases ||| string $key	count=1
function_name	de compression utilisée sur ||| entry compressionmethod	count=1
function_name	informations sur le ||| info	count=1
function_name	contenant les [function_name] de toutes ||| get [function_name]	count=1
function_name	avec une image ||| image	count=1
function_name	poids ||| getfontweight	count=1
arg_pair	dans ||| resource $connection int $oid	count=1
arg_pair	message d'erreur à ||| string $message	count=1
arg_pair	dans subject en ||| int $count	count=1
arg_pair	dessin à un ||| resource $p	count=1
arg_pair	dans subject en ||| mixed $subject int $count	count=1
function_name	[function_name_1] algorithmes ||| [function_name_2] [function_name_1]	count=1
namespace	de [namespace] qui ||| [namespace]	count=1
arg_pair	identique à la ||| int $minute	count=1
arg_pair	courante du paramètre type ||| string $type	count=1
function_name	ms sql server qui ||| mssql	count=1
function	nom à [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	[arg_pair] pente ||| [arg_pair]	count=3
namespace	lors ||| gmagickdraw	count=1
function_name	[function_name_1] message d'erreur ||| [function_name_2] [function_name_1]	count=6
function_name	définit ||| service action set	count=1
function_name	le facteur quickprop ||| set quickprop	count=1
namespace	retourne le nombre ||| sqlite3	count=1
namespace	dictionnaire représenté ||| function	count=1
arg_pair	contrairement à strcmp() elle ||| string $str2	count=1
function_name	définit à ||| set	count=1
function_name	de sortie pour une ||| fann set output scaling	count=1
arg_pair	une et ||| string $error	count=1
function_name	croitre la taille de ||| increase factor	count=1
function_name	lit ||| readline callback read	count=1
function_name	élément avec un identifiant ||| by	count=1
namespace	32 bit ou 128 ||| function	count=1
namespace	le noeud simplexml ||| simplexmlelement	count=1
arg_pair	chaîne str après ||| string $str string $encoding	count=1
arg_pair	le tableau values ||| array $values	count=1
return	existante si ||| bool	count=1
arg_pair	par le chemin path ||| int $offset	count=1
function_name	retourne [function_name_2] ||| [function_name_1] sarprop [function_name_2]	count=1
return	d'archives spécifié par ||| string	count=1
namespace	que si [namespace] ||| [namespace]	count=3
arg_pair	préparer l'environnement pour ||| string $passwd bool $new_link	count=1
return	avec ses valeurs en ||| bool	count=1
arg_pair	jeu de résultats ||| resource $result	count=1
function_name	[function_name] version ||| [function_name]	count=1
arg_pair	message pour l'uid uid ||| int $uid	count=1
arg_pair	de la requête statement ||| mixed $field	count=1
function	rappel [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	file d'attente s'interrompt ||| eio set max	count=1
function_name	taille d'une image ||| set image extent	count=2
function_name	carte [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
arg_pair	permettra d'accéder à la ||| int $memsize	count=1
function_name	nouvelle csrcertificate signing request ||| csr new	count=1
function_name	output_encoding ||| ob iconv handler	count=2
function_name	le contexte de ||| context	count=2
function_name	serveur de ||| server	count=1
function_name	erreurs soap ||| soap	count=1
arg_pair	se comporte comme ||| string $servername string $username	count=2
arg_pair	une requête sql à ||| string $statement	count=1
function_name	trace dans ||| trace log	count=1
arg_pair	saturation et la ||| float $brightness float $saturation	count=1
return	à la ||| string	count=3
namespace	chaînes alphanumériques dans le ||| arrayobject	count=1
arg_pair	des filtres en cours ||| float $max bool $exclude	count=1
function_name	la file ||| poll	count=1
namespace	caractères lors de la ||| function	count=1
arg_pair	construit et affiche immédiatement ||| string $tpl array $tpl_vars	count=1
function_name	spécifié ||| zip entry	count=1
function_name	fonction n'est pas documentée ||| ps setflat	count=1
function_name	tailles ||| mcrypt enc get supported key sizes	count=1
function_name	configure la profondeur ||| depth	count=1
function_name	oracle pl/sql ||| oci	count=1
arg_pair	la commande command ||| string $command array $output	count=1
function_name	récupère la valeur correspondant ||| get	count=1
function_name	associé au ||| msql	count=1
function_name	à la ||| db2	count=1
function_name	informations de pagination ||| control paged result	count=1
function_name	lit un token d'accès ||| token	count=1
function_name	convertir une ||| convert to	count=1
function_name	le statut http ||| get http status	count=1
function_name	contexte de flux ||| stream context	count=3
function_name	logarithme base-10 pour ||| trader log10	count=1
function_name	les modules ||| set	count=1
namespace	deux collections : ||| mongogridfs	count=1
arg_pair	un attribut dans un ||| array $values	count=1
function_name	ajoutés à la ||| destroy	count=1
arg_pair	fonction cubrid_bind() est utilisée ||| string $bind_value_type	count=1
arg_pair	la valeur du cookie ||| string $value	count=1
function_name	données blob/clob ||| cubrid lob export	count=1
function_name	tableau ||| get delayed	count=1
return	est entrée ||| int	count=1
function_name	s'interrompt si elle ||| max poll time	count=1
function_name	de preg_replace() ||| preg replace	count=1
function_name	fonction rewinddir() seul ||| rewind	count=1
namespace	configuration du serveur ||| hw_api	count=1
arg_pair	à l'exécution ||| string $class	count=2
function_name	de réplication ||| get hosts	count=1
function_name	service exposé par ||| gupnp service proxy	count=2
function_name	du tampon fourni par ||| add buffer	count=1
function_name	est utilisée pour supprimer ||| cubrid	count=1
function_name	couleur de peinture de ||| stroking color space	count=1
function_name	retourne ||| fann get	count=5
function_name	timestamp a été modifié ||| modify	count=1
namespace	du tampon augmente de ||| eventbuffer	count=1
function_name	de données paradox ||| px	count=3
namespace	dans l'espace utilisateur ||| reflectionfunctionabstract	count=1
function_name	caractères ||| db2	count=2
function_name	[function_name_1] caractères ||| [function_name_2] [function_name_1]	count=8
function_name	l'historique d'erreur ||| error	count=1
function_name	forme et ||| newt form destroy	count=1
function	[function_name_1] colonnes et ||| [function_name_1] [arg_pair_2]	count=3
function_name	récupère un chemin xpath ||| get	count=1
function_name	et libère ||| event base free	count=1
arg_pair	zmq ||| integer $io_threads boolean $is_persistent	count=1
function_name	analyse une liste d'adresses ||| mailparse rfc822 parse addresses	count=1
function_name	existe dans la ||| exists	count=1
arg_pair	le paramètre callback ||| mixed $parameter	count=1
function_name	lieu d'être une ||| user defined	count=1
function_name	ip utilisée ||| ip	count=1
function_name	qui sont sur des ||| newt form	count=1
function_name	vi de l'algorithme ||| iv	count=1
function_name	l'uri de l'espace de ||| uri	count=1
function_name	lit les données ||| read	count=2
function_name	retire ||| remove	count=3
function_name	dossier d'archives spécifié par ||| zip	count=1
function_name	retourne les mesures de ||| get	count=1
function_name	[function_name_1] compressé avec ||| [function_name_1] [function_name_2]	count=4
arg_pair	objet à une valeur ||| float $value	count=1
arg_pair	boîte aux lettres mailbox ||| resource $imap_stream string $mailbox	count=1
function_name	retourne le nombre ||| ifx num fields	count=1
function_name	l'objet directoryiterator [function_name] ||| [function_name]	count=3
function_name	[function_name] d'un formulaire ||| set submit form [function_name]	count=1
function	lie [function_name_1] [arg_pair_2] pointe vers un tableau ||| [function_name_1] [arg_pair_2]	count=1
function_name	publique ||| public	count=2
namespace	une pile et ||| function	count=1
return	de fois où ||| int	count=2
arg_pair	pour ||| string $name	count=1
function_name	avec les processus ||| proc	count=1
arg_pair	la forme d'un nouvel ||| int $x	count=1
function_name	fichier ||| mailparse uudecode	count=2
return	paramètres au ||| bool	count=1
namespace	le premier caractère par ||| function	count=1
function_name	l'adresse ||| host	count=1
function_name	[function_name_1] traduction des ||| [function_name_1] [function_name_2]	count=1
function_name	d'un périphérique racine ||| gupnp device	count=1
arg_pair	un fichier spécial ou ||| int $mode	count=1
function_name	d'activation pour la ||| activation	count=1
function_name	[function_name] fichier ||| get [function_name]	count=2
function_name	[function_name] qui ||| [function_name] for	count=3
namespace	récupère le ||| gearmanclient	count=1
function_name	spécifie [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	document html depuis une ||| save html	count=1
return	si le noeud ||| bool	count=1
function_name	liens ajoutés ||| border	count=2
namespace	lob oracle ||| oci-lob	count=6
return	bloc ||| bool	count=1
function_name	du paramètre facet.date.hardend ||| facet date hard end	count=1
namespace	objet splfileobject ||| splfileobject	count=1
function_name	à fdf ||| fdf	count=1
function_name	le gestionnaire d'erreurs libxml ||| libxml use	count=1
function_name	donnée est de type ||| is	count=3
function_name	extrait dans un fichier ||| all	count=1
function_name	ou [function_name] ||| set [function_name]	count=1
function_name	méthode est ||| is	count=1
function_name	le suivi des communications ||| trace	count=1
function_name	message d'erreur ||| strerror	count=1
arg_pair	du mode à utiliser ||| string $mode_directory	count=1
function_name	la différence ||| array diff	count=3
function_name	d'une url du référentiel ||| svn blame	count=1
function_name	fournisseurs [function_name_2] ||| [function_name_2] [function_name_1] describe	count=1
arg_pair	données dans un ||| string $data int $offset	count=1
return	fin et ||| bool	count=1
namespace	bootstrap dans le ||| yaf_application	count=1
function_name	d'activation pour la couche ||| set activation	count=1
arg_pair	champ donné ||| resource $fdf_document string $fieldname	count=1
namespace	définie dans l'espace utilisateur ||| reflectionfunctionabstract	count=1
function_name	le code ||| doc	count=1
return	les données du ||| bool	count=1
return	définit ||| gmagick	count=1
function_name	[function_name_1] informations disponibles ||| [function_name_2] [function_name_1]	count=1
function_name	est utilisée pour récupérer ||| cubrid column	count=1
function_name	clés de ||| key	count=1
arg_pair	à analyser ||| string $source	count=1
arg_pair	le fichier filename ||| string $filename bool $use_include_path	count=1
function_name	surveillance en ||| watch	count=1
function_name	définit le nombre de ||| set	count=2
function_name	les ressources mémoires ||| destroy	count=1
function_name	copie vide de ||| rcrtlike	count=1
function_name	fonction socket_recv() reçoit ||| recv	count=1
arg_pair	fournir à ||| string $contents	count=1
return	un autre bloc ||| void	count=1
function_name	qui est survenue lors ||| error	count=1
arg_pair	une fonction anonyme ||| string $code	count=1
function_name	un verrou d'écriture sur ||| cubrid lock	count=1
arg_pair	occurrence de needle ||| string $haystack mixed $needle	count=1
arg_pair	envoie [arg_pair] ||| [arg_pair]	count=2
function_name	pour convertir ||| convert to	count=1
function_name	les extraits seront cherchés ||| analyzed chars	count=1
function_name	l'extension pour la ||| type to extension	count=1
function_name	dernière requête appelée ||| stmt errno	count=1
function_name	avec un ||| id	count=1
arg_pair	un rappel ||| string $function_name	count=1
function_name	récupère la ||| fdf get	count=1
return	avec ||| domelement	count=1
function_name	requête [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	de la table tablename ||| string $tablename	count=1
arg_pair	être invoquées avant de ||| int $max_callbacks	count=1
function_name	les drapeaux d'une ||| flags	count=1
function_name	durée du script ||| include	count=1
arg_pair	base de ||| resource $link_identifier	count=2
arg_pair	l'attribut attribute ||| string $attribute	count=1
arg_pair	base ||| resource $link_identifier	count=2
function_name	restaure le ||| restore	count=2
function_name	identique ||| gmmktime	count=1
function_name	nouvelle connexion au ||| new connect	count=2
function_name	les paramètres de l'objet ||| to string	count=1
return	à utiliser avec ||| resource	count=1
arg_pair	deux versions ||| string $version1	count=1
function_name	d'équilibrage de ||| ms	count=1
arg_pair	représentée par l' oid ||| string $oid	count=1
function_name	retourne le nom ||| get name	count=2
function_name	de preg_replace() hormis ||| preg replace callback	count=1
function_name	fichiers encodés qui s'y ||| mailparse	count=1
namespace	retourne ||| serializable	count=1
namespace	xml ||| xmldiff\memory	count=1
arg_pair	deux collections : la ||| mongodb $db	count=1
arg_pair	event_handler ||| callable $event_handler string $event_name1	count=1
function_name	champ ||| mssql fetch field	count=1
arg_pair	la fonction ||| int $second int $month	count=1
function_name	spécifiée avec ||| preview	count=1
function_name	est similaire à la ||| fbsql field type	count=1
function_name	[function_name_1] pour ||| [function_name_2] [function_name_1]	count=20
return	noire [return] exposant ||| [return]	count=1
function_name	[function_name_1] image dans ||| [function_name_1] [function_name_2]	count=4
arg_pair	caractères lors de ||| string $pattern string $string	count=1
arg_pair	chaîne ||| int $start	count=1
arg_pair	identifié par handle ||| resource $handle	count=1
namespace	la seconde contient le ||| mongogridfs	count=1
function_name	alpha de l'image ||| set image alpha	count=2
arg_pair	spotname et comme ||| string $spotname	count=1
arg_pair	remplace la ||| resource $image	count=1
return	indique si un ||| bool	count=1
function_name	propriétés [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	radius_get_attr() radius_get_tagged_attr_data() va retourner ||| tagged attr data	count=1
function_name	ajoute un nouvel attribut ||| attribute	count=1
function_name	la base de ||| dbase numfields	count=1
return	spécifiés ||| mixed	count=1
function_name	db2_connect() et libère les ||| db2	count=1
function_name	détermine le type mime ||| mime type	count=1
function_name	de la gravité courante ||| gravity	count=1
namespace	ou enregistre ||| function	count=1
function_name	par ||| zip	count=1
function_name	un formulaire ||| fieldgroup	count=1
function_name	[function_name_1] champs utilisés ||| [function_name_1] highlight [function_name_2]	count=1
return	d'attente s'interrompt ||| void	count=1
function_name	libère un résultat ibase ||| ibase free	count=1
function_name	verrou de ||| lock	count=1
function_name	d'une [function_name] tous ||| strip [function_name]	count=1
function_name	l'année d'un ||| year	count=1
function_name	issue ||| errno	count=1
function_name	type inversion large object ||| pg lo	count=1
function_name	[function_name] voir la ||| [function_name] mppe	count=1
function_name	socket ||| socket name	count=2
function_name	requête z39.50 scan request ||| scan	count=1
function_name	du serveur d'administration kerberos ||| kadm5	count=1
return	incluant les composants qui ||| void	count=1
return	d'attente ||| bool	count=1
arg_pair	mse pour ces données ||| resource $data	count=1
arg_pair	des destinataires cc ||| string $cc	count=1
arg_pair	lors de la ||| string $pattern	count=1
function_name	défini l'endroit où les ||| fann	count=1
namespace	dossier d'archives spécifié ||| function	count=1
function_name	la [function_name] ||| oci [function_name]	count=1
function	[function_name_1] chaîne fournie ||| [arg_pair_2] [function_name_1]	count=2
function_name	de l'étape d'erreur ||| step error shift	count=2
function_name	dossier ||| compressionmethod	count=1
function_name	service exposé par ||| gupnp service proxy action	count=1
arg_pair	cette fonction est ||| string $string	count=1
return	surveiller avec ||| void	count=1
function_name	données du fichier fourni ||| uudecode	count=1
function_name	token d'accès ||| token	count=1
namespace	d'exécution des fichiers ||| pharfileinfo	count=1
function_name	l'image image ||| image	count=1
function_name	personnalisées dans un fichier ||| set metadata	count=1
function_name	est ||| fbsql field	count=1
function_name	appels ||| loop	count=1
function_name	police et ||| load font	count=1
arg_pair	à cet index ainsi ||| mixed $index	count=1
return	et vide ||| string	count=1
function_name	caractères d'instance ||| load string	count=1
function	succès ou [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	l'orientation de ||| image orientation	count=1
function_name	stocker les itérateurs ||| array	count=1
function_name	le délai maximal ||| timeout	count=1
arg_pair	lui associe un objet ||| int $rows	count=1
function_name	fourni ||| uudecode all	count=2
return	de compression ||| string	count=1
function_name	les tailles de clés ||| mcrypt enc get supported key sizes	count=1
function_name	quoted [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	une identification ||| resource $session string $username	count=1
function_name	lieu ||| internal	count=1
function_name	que ceux de lecture ||| chmod	count=1
return	erreur pour le ||| int	count=1
function_name	[function_name_1] fond ||| [function_name_2] [function_name_1]	count=2
function_name	termine la définition du ||| pdf end	count=1
namespace	surveiller avec les ||| mongolog	count=1
function_name	les tailles de clés ||| enc get supported key sizes	count=1
arg_pair	recherche ||| string $pattern	count=1
function_name	le lien ||| link	count=1
function_name	position courante [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	la taille maximale ||| algo key size	count=1
return	le seuil ||| int	count=1
function_name	analyse une liste d'adresses ||| rfc822 parse addresses	count=1
namespace	la [namespace] une interface ||| [namespace]	count=1
function_name	xml depuis ||| xml	count=2
arg_pair	anonyme à partir ||| string $code	count=1
function_name	les objets d'un ||| all	count=1
arg_pair	un attribut dans ||| string $index	count=1
function_name	que sybase va ||| sybase	count=1
arg_pair	paramètre str ||| mixed $fd string $str	count=1
arg_pair	left top ||| float $left float $top	count=1
arg_pair	avec les définitions de ||| array $config	count=1
function_name	modifie la valeur de ||| include path	count=1
function_name	pour la durée ||| include path	count=1
function_name	la longueur [function_name_2] ||| [function_name_2] iv [function_name_1]	count=1
function_name	eu survenue lors ||| error	count=1
arg_pair	utiliser les effets libgd ||| resource $image int $effect	count=1
arg_pair	fonction mktime() excepté ||| int $second	count=1
namespace	objet splfileobject ne ||| splfileobject	count=1
function_name	informations concernant le transfert ||| curl getinfo	count=1
arg_pair	texte ||| string $text int $index	count=1
namespace	matrice a ||| lapack	count=1
function_name	fonctions de [function_name] ||| set [function_name]	count=1
function_name	recherche de type strpos() ||| strrpos	count=1
function_name	du client sous ||| client	count=1
arg_pair	avec ||| string $key	count=1
namespace	définit ||| function	count=2
function_name	les éléments descendants avec ||| elements by tag	count=2
function_name	secondes ||| eio	count=1
function_name	du flux ||| stream set	count=1
function_name	la réponse xml du ||| response	count=1
arg_pair	rouge vert ||| int $color int $r	count=1
function_name	blocage de verrou deadlocks ||| deadlock retry count	count=1
function	json [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	des parties de données ||| string $blob_id	count=1
namespace	première contient les métadonnées ||| mongogridfs	count=1
function_name	document html ||| html	count=2
namespace	du fichier ||| splfileinfo	count=2
arg_pair	la fonction pdf_open_image() ||| int $image	count=1
function_name	suspend la ||| pdf suspend	count=1
function	y écrit [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	[function_name_1] de str ||| [arg_pair_2] [function_name_1]	count=3
function_name	forme qui lui est ||| newt run form	count=1
function_name	dernière erreur de la ||| error	count=2
return	y compris si ||| bool	count=1
arg_pair	est au ||| resource $connection	count=1
function_name	[function_name_1] du client ||| [function_name_2] [function_name_1]	count=11
function_name	uri de l'élément ||| uri	count=1
function_name	surveiller avec ||| module	count=1
return	fourni ||| bool	count=1
function_name	enregistrer et à ajouter ||| add	count=1
namespace	casse ||| function	count=1
function_name	certificat ||| openssl	count=1
function_name	la prochaine requête ||| cubrid next result	count=1
function_name	les données blob/clob depuis ||| lob	count=1
function_name	l'extension pour ||| type to extension	count=1
return	que si ||| bool	count=1
function_name	de ||| zip entry	count=1
arg_pair	chaîne d'une façon ||| string $str int $start	count=1
return	fichier ||| bool	count=3
function_name	ligne d'une requête dans ||| fetch	count=1
function_name	efface ||| delete file	count=2
function_name	timestampnoncehandler [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	fichiers et son utilisation ||| fcache fileinfo	count=1
namespace	le nombre de champs ||| function	count=1
arg_pair	le flag spécifié aux ||| string $flag int $options	count=1
function_name	objet char ||| char	count=1
function_name	ignorant la ||| str ireplace	count=1
return	forme et tous ||| void	count=1
arg_pair	la chaîne str ||| string $str string $delimiter	count=1
return	un jeu ||| resource	count=1
function_name	le nombre maximal de ||| max	count=1
arg_pair	de fichier fd ||| mixed $fd int $mode	count=2
function_name	d'autres termes la profondeur ||| depth	count=1
arg_pair	est au format ||| resource $connection	count=1
function_name	retourne un booléen indiquant ||| get terms return	count=1
namespace	détermine si un fichier ||| pharfileinfo	count=1
function_name	transaction [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	le dossier d'archives ||| entry	count=1
arg_pair	excepté le fait ||| int $hour	count=1
function_name	décrivant la [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	copie jusqu'à maxlength octets ||| int $maxlength	count=1
function_name	liste des modules définis ||| modules	count=1
namespace	tant ||| function	count=1
arg_pair	correspondant à un ||| string $country_code string $region_code	count=1
function_name	position courante du ||| ps	count=1
function_name	compile un script php ||| compile	count=1
function	crée la [arg_pair_2] ||| [function_name_1] train from callback [arg_pair_2]	count=2
arg_pair	la fonction mktime() excepté ||| int $second	count=1
function_name	de version de ||| version	count=1
function_name	[function_name] mime-type ||| image type to [function_name]	count=2
function_name	méthode récupère l'intance de ||| get	count=1
function_name	supprime d'une [function_name] tous les ||| strip [function_name]	count=1
function_name	libère ||| free res	count=2
function_name	de caractères d'instance xml ||| load	count=1
arg_pair	par le shell ||| string $pattern int $flags	count=1
namespace	composants qui sont sur ||| function	count=1
function_name	radius ||| radius	count=3
function_name	l'adresse ipv4 correspondant à ||| gethostbyname	count=1
arg_pair	format ||| int $compression	count=1
function_name	fonction mb_substr() mais opère ||| mb strcut	count=1
function_name	file d'attente ||| set max poll	count=1
arg_pair	dans un document ||| array $attributes	count=1
function_name	la fraction de ||| change fraction	count=1
function_name	la clé key sur ||| by key	count=2
arg_pair	d'extraits de texte pour ||| string $fragmenter string $field_override	count=1
function_name	l'objet sous la ||| string	count=1
return	est entrée moins ||| int	count=1
function_name	l'extérieur de ||| runkit import	count=1
function_name	dessine un arc ||| arc	count=1
function_name	sera démarré lors du ||| add launchlink	count=1
function_name	crée ||| preview	count=1
function_name	[function_name] le flux ||| sqlsrv send stream [function_name]	count=1
namespace	commandes ||| imagick	count=1
arg_pair	à memcached::set() hormis le ||| int $expiration	count=1
arg_pair	x509cert pour voir ||| mixed $x509cert	count=1
arg_pair	à ingres_fetch_array() avec une ||| int $result_type	count=1
function_name	schéma d'entrelacement de l'objet ||| get interlace scheme	count=1
function_name	le fdf ||| fdf	count=1
function_name	lot ||| batch	count=1
arg_pair	array comme ||| array $array	count=1
namespace	l' ||| eventbuffer	count=1
function_name	appliqué à différents ||| preview images	count=1
arg_pair	dans le résultat result ||| resource $result	count=3
arg_pair	pour établir ||| string $dbname	count=1
function_name	de sortie [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	lors de ||| array $server array $writeoptions	count=1
function_name	maximale du corps pour ||| max body	count=1
return	du document en ||| bool	count=1
function_name	types ||| cubrid column types	count=2
function_name	donné sur le dictionnaire ||| crack	count=1
function_name	prépare le prochain ||| next	count=1
function_name	de autocommit ||| db2 autocommit	count=1
function_name	erreur une exception de ||| set using	count=1
function_name	dossier d'archives ||| zip	count=1
function_name	à memcached::prepend() mais la ||| prepend	count=1
function_name	racine carrée de chaque ||| sqrt	count=1
function_name	texte à ||| show	count=1
function_name	existe ||| array key exists	count=1
arg_pair	qui contient le ||| int $dictionary_link string $file	count=1
arg_pair	paramètre callback ||| mixed $parameter	count=1
function_name	configure l'espace [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	nombre d'erreurs et ||| pgsql	count=1
namespace	tri qui place ||| arrayobject	count=1
function_name	est similaire [function_name_1] [function_name_2] avec une différence : ||| [function_name_2] [function_name_1] object resource $result	count=1
namespace	libère les ressources ||| function	count=1
arg_pair	la fonction mktime() excepté ||| int $second int $month	count=1
function_name	termine [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	le paramètre str à ||| mixed $fd string $str	count=1
return	retourne false ||| void	count=1
arg_pair	termine la surveillance d'une ||| resource $fam resource $fam_monitor	count=1
function_name	interne passé via ||| get inner	count=1
arg_pair	à la résolution désirée ||| float $xresolution float $yresolution	count=1
function_name	[function_name_1] de rappel ||| [function_name_1] [function_name_2]	count=1
arg_pair	php event_handler ||| callable $event_handler	count=1
return	la fonction ||| domelement	count=1
function	statut spécifié [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	dernier identifiant autogénéré par ||| db2 last insert	count=1
function_name	image le ||| image	count=1
function_name	[function_name_1] contrôle de ||| [function_name_1] [function_name_2]	count=1
arg_pair	fait que les ||| int $hour	count=1
arg_pair	fixe ||| resource $psdoc string $name	count=1
function_name	la durée du script ||| path	count=1
namespace	système ou non ||| function	count=1
function_name	contenant la représentation décimale ||| hexdec	count=1
arg_pair	des ||| string $pattern string $string	count=1
function_name	méthode retourne [function_name_2] ||| [function_name_2] [function_name_1]	count=11
namespace	les chaînes alphanumériques dans ||| arrayobject	count=1
function_name	la fonction pcntl_sigwaitinfo() ||| pcntl sigwaitinfo	count=1
return	des boîtes à ||| array	count=1
function_name	identifiant donné ||| get element	count=1
function_name	crée une [function_name_2] ||| [function_name_1] [function_name_2]	count=8
function_name	de fichiers distant ||| ssh2 sftp mkdir	count=1
function	[function_name_1] une ||| [function_name_1] font [arg_pair_2]	count=1
return	fonction ||| int	count=2
arg_pair	de coordonnées de alpha ||| float $alpha	count=1
function_name	correction gamma ||| gamma	count=1
return	serveur ||| bool	count=1
arg_pair	deux collections : la ||| string $prefix	count=1
return	réponse en ||| void	count=1
function_name	à propos ||| ps stat	count=1
function_name	l'adresse [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	mkdir() ||| mkdir	count=1
function_name	utilisée pour insérer ||| cubrid set	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] bytea resource $connection [arg_pair_2]	count=2
function_name	de ||| get	count=5
arg_pair	données database ||| string $database	count=1
function_name	[function_name_1] taille ||| [function_name_1] current font [function_name_2]	count=1
arg_pair	et windows ||| int $operation	count=1
arg_pair	une et retourne le ||| string $new_data2 string $error	count=1
function_name	vérifie si l'on ||| is select	count=1
function_name	de la bibliothèque ||| rrd	count=1
function_name	fonction libère les ||| destroy	count=1
function_name	protocole et de flux ||| stream wrapper	count=1
arg_pair	la connexion connection et ||| resource $connection	count=1
function_name	effectue un test sur ||| fann test	count=1
function_name	blob ||| ibase blob	count=2
function_name	est définie dans ||| is	count=1
function_name	l'arc sinus de ||| trader asin	count=1
arg_pair	de cartes de ||| string $threshold_map int $channel	count=1
return	la valeur courante du ||| float	count=1
return	d'instance ||| sdo_das_xml_document	count=1
function_name	définit le gestionnaire ||| set	count=1
arg_pair	statue un fichier ||| resource $sftp string $path	count=1
function_name	nouvel ||| construct	count=1
return	maxdb_connect_error() [return] ||| [return]	count=1
function_name	départ de la fonction ||| start line	count=1
return	informations ||| string	count=1
function_name	le nombre de colonnes ||| num fields	count=1
function_name	associatif contenant la ||| assoc	count=1
return	ev::run() est ||| int	count=2
function_name	au serveur sans attendre ||| pg send query	count=1
function_name	de configuration include_path pour ||| include path	count=1
namespace	de mettre à jour ||| quickhashintstringhash	count=1
function_name	un fichier ||| mailparse	count=1
arg_pair	un fichier ||| int $size	count=1
namespace	fonction closedir() ||| directory	count=1
function_name	est similaire à la ||| get element	count=1
function_name	[function_name_1] statique ||| [function_name_1] [function_name_2]	count=2
function_name	tableaux avec des tests ||| uintersect uassoc	count=1
function_name	par l'algorithme de chiffrement ||| mcrypt	count=1
function_name	efface une ||| delete	count=2
arg_pair	sur les caractères ||| string $pattern string $string	count=1
function_name	les ||| batch	count=1
namespace	l'itérateur interne iterator ||| limititerator	count=1
function_name	précédents intervalles ||| elapsed time	count=1
function_name	images scannées où ||| deskew	count=1
function_name	été ajoutés à la ||| newt form destroy	count=1
arg_pair	nom d'utilisateur username ||| string $username	count=1
function_name	[function_name] session depuis ||| [function_name]	count=1
function_name	imap si elle ||| imap	count=1
return	utilisez cette méthode ||| void	count=1
function_name	[function_name_1] disposition courante ||| [function_name_2] [function_name_1]	count=1
return	tri qui ||| void	count=1
arg_pair	chaîne str après avoir ||| string $encoding	count=1
function	cette fonction retourne true [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	crée un document ||| string	count=1
arg_pair	les attributs ||| resource $fd array $options	count=1
function_name	pixels implosé par ||| implode	count=1
function_name	à [function_name_2] ||| [function_name_2] [function_name_1] object resource $result	count=1
arg_pair	jeu de résultats sous ||| resource $stmt	count=1
return	en utilisant les variables ||| bool	count=1
function_name	lier ||| cubrid lob2 bind	count=2
return	une requête soap appelle ||| void	count=1
function_name	un jeu de résultats ||| db2 procedure	count=1
arg_pair	bloc de contenu avec ||| int $contents	count=1
function_name	possède des attributs ||| has attributes	count=2
function_name	lettres minuscule ||| xheight	count=1
return	si ||| bool	count=37
function_name	récupère ||| get principal	count=2
function_name	pour un dictionnaire à ||| enchant	count=1
function_name	[function_name_1] le schéma ||| [function_name_2] [function_name_1]	count=9
function_name	ldap en envoyant le ||| ldap	count=1
return	ou un ||| string	count=1
arg_pair	pour établir l'environnement ||| string $userid	count=1
function_name	construit ||| string	count=1
function_name	appelle les ||| handle	count=1
arg_pair	connexion à l'historique système ||| string $ident int $option	count=1
function_name	classe personnalisée qui sera ||| file class	count=1
function_name	noms des [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] le nom ||| [function_name_1] file [function_name_2]	count=2
function_name	xml ||| xml set notation	count=1
function_name	avec un ||| images	count=1
arg_pair	rappel callback ||| callable $callback string $data	count=1
function_name	récupère le ||| gupnp context get	count=2
namespace	prend ||| function	count=1
function_name	de la syntaxe ||| php check syntax	count=1
function_name	d'archives spécifié ||| entry compressionmethod	count=1
function_name	base de données ||| db	count=2
namespace	fin de ||| function	count=3
arg_pair	attribut dans un document ||| array $attributes	count=1
function_name	maximal [function_name_2] ||| [function_name_2] [function_name_1]	count=7
arg_pair	rappel callback qui sera ||| mixed $pattern callable $callback	count=1
function_name	retourne [function_name] ||| get normalized query [function_name]	count=3
arg_pair	condamnations svn ||| int $revision_no	count=1
namespace	fichier ||| function	count=3
function_name	la valeur ||| value	count=2
function_name	ressource de connexion persistante ||| pg pconnect	count=1
arg_pair	dans la base ||| resource $connection	count=1
return	fait que les ||| int	count=1
function_name	scan ||| scan	count=1
function_name	[function_name_1] a ||| [function_name_2] [function_name_1]	count=4
function_name	la méthode de compression ||| compressionmethod	count=1
function_name	[function_name_1] jokers ||| [function_name_2] [function_name_1]	count=2
arg_pair	un objet de ||| resource $connection	count=2
function_name	[function_name_1] blob ||| [function_name_1] [function_name_2]	count=1
namespace	paramètres de l'objet ||| solrparams	count=1
function_name	position du champ fourni ||| field	count=1
function_name	donnée ||| load	count=1
function_name	les tailles ||| get supported key sizes	count=1
arg_pair	les définitions de ||| resource $id	count=1
arg_pair	les fichiers ||| mongodb $db string $prefix	count=1
function_name	est similaire à ||| id	count=1
arg_pair	classe depuis l' oid ||| string $oid	count=1
function_name	contient les ||| construct	count=1
function_name	verrou d'écriture sur l'instance ||| lock write	count=1
function_name	[function_name_1] le contenu ||| [function_name_1] [function_name_2]	count=1
function_name	un contexte de ||| context	count=1
function_name	[function_name_1] enchant ||| [function_name_2] [function_name_1]	count=2
arg_pair	attribut dans un ||| string $index	count=1
arg_pair	16 octets en ||| bool $short_format	count=1
function_name	données personnalisées ||| metadata	count=1
function_name	memcached::append() mais ||| append by key	count=1
function_name	fonction crée ||| create attribute	count=1
return	domnodelist de tous ||| domnodelist	count=1
function_name	de noms ||| end namespace	count=1
function_name	ceux de lecture seule ||| chmod	count=1
function_name	de la table ||| table	count=1
function_name	est ||| is nick	count=2
return	le noeud ||| bool	count=1
arg_pair	avec ||| resource $fam	count=1
function_name	objet depuis [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	d'événements de sortir via ||| got exit	count=1
arg_pair	en date ||| int $juliandaycount	count=1
namespace	objets eventbufferevent ||| eventbufferevent	count=1
arg_pair	fichier ||| int $mode	count=1
function_name	définit ||| set end	count=1
function	[function_name_1] le réseau ||| [function_name_1] [arg_pair_2]	count=1
function_name	backends supportés [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	modifie la valeur ||| function	count=1
function_name	event::addtimer() ||| timer	count=1
arg_pair	local vers ||| string $local_file	count=1
function_name	libère un ||| free result	count=1
arg_pair	oid ||| resource $conn_identifier string $oid	count=1
function_name	[function_name_1] d'une ligne ||| [function_name_1] [function_name_2]	count=1
function_name	récupère l'adresse ip utilisée ||| gupnp context get host ip	count=1
function_name	de l'objet com ||| com	count=1
namespace	reflectionmethod ||| reflectionmethod	count=1
function_name	et retourne un contexte ||| context	count=1
return	courant [return] flux du ||| [return]	count=1
function_name	ferme une ||| close	count=1
arg_pair	utilisateur php event_handler ||| string $event_name1	count=1
function_name	l'identifiant ||| crack closedict	count=2
namespace	requête soap ||| soapserver	count=1
namespace	qui a été ||| function	count=1
namespace	l'image tout en conservant ||| gmagick	count=1
function_name	l'objet sous la forme ||| to string	count=1
return	le nombre d'image ||| int	count=1
arg_pair	cubrid_set_add() ||| string $attr_name string $set_element	count=1
function_name	et ||| mailparse uudecode all	count=2
function_name	et ||| ini file	count=1
function_name	nombre maximal de ||| mlt max num	count=4
function_name	tous les composants qui ||| form	count=1
function_name	prochaine ||| cubrid next	count=1
function_name	retourne le ||| cli get	count=1
function_name	identifiant unique pour l'objet ||| hash	count=1
function_name	une seule [function_name] les modèles ||| get nr [function_name]	count=1
function_name	de linejoin à ||| pdf setlinejoin	count=1
function_name	caractères passée ||| db2 escape	count=1
function_name	du ||| cache	count=1
function_name	[function_name_1] sévérité ||| [function_name_1] [function_name_2]	count=1
function_name	de résultat décrivant ||| fbsql list tables	count=2
arg_pair	soit terminé, ||| int $options	count=1
arg_pair	bufferisé spécifié ||| int $events	count=2
return	avec ||| bool	count=2
arg_pair	cette méthode crée ||| bool $preserve_cloned_files	count=1
function_name	marqueur oracle ||| oci bind array	count=1
function_name	récupère la classe ||| get	count=1
function_name	les informations de débogage ||| debug info	count=1
function_name	connexion au [function_name_2] ||| function resource [function_name_2] [function_name_1]	count=2
function_name	modifie la valeur ||| set include path	count=1
arg_pair	principal avec le ||| resource $handle string $principal	count=1
function_name	définit à [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	cubrid_lob2_bind() est ||| mixed $bind_value string $bind_value_type	count=1
arg_pair	si une erreur survient ||| resource $result	count=1
arg_pair	un ||| string $region_code	count=1
function_name	logarithme naturel pour chaque ||| ln	count=1
arg_pair	le domaine ||| string $domain	count=2
arg_pair	par le paramètre variable_name ||| string $variable_name	count=1
return	le nombre d'image d'un ||| int	count=1
namespace	fichiers ainsi que ceux ||| pharfileinfo	count=1
namespace	la bibliothèque sqlite3 ||| sqlite3	count=1
arg_pair	service daemon est ||| string $daemon string $address	count=1
function_name	si elle ||| set max poll	count=1
function_name	une image ou un ||| image	count=1
function	de jacobi [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	de la bibliothèque sqlite3 ||| array	count=1
function_name	par la ||| newt	count=1
function_name	retourne une ressource de ||| get resource	count=1
function_name	l'image ||| image scene	count=2
function_name	de grande taille dans ||| pg lo	count=1
function_name	calculate la constante e ||| trader exp	count=1
function_name	données du tampon fourni ||| add	count=1
function_name	[function_name_1] refermer ||| [function_name_2] [function_name_1]	count=2
function_name	la taille du segment ||| set chunk size	count=1
function_name	ferme le ||| close	count=2
function_name	charge le ||| load	count=1
function_name	[function_name_1] police de ||| [function_name_1] [function_name_2]	count=1
arg_pair	sous la forme d'un ||| int $y	count=1
function_name	statut ||| result status	count=2
namespace	des caractères ||| function	count=1
function_name	de dernier accès au ||| get atime	count=1
function_name	pour lier ||| bind	count=1
arg_pair	de la largeur spécifiée ||| string $text float $width	count=1
return	méthode de compression utilisée ||| string	count=1
return	en conservant la corrélation ||| void	count=1
namespace	tous ||| solrparams	count=1
arg_pair	des ||| resource $image	count=1
return	utilisée [return] ||| [return]	count=3
namespace	à envoyer au client ||| mongocursorinterface	count=1
function_name	sur la version ||| version	count=1
function_name	procédure stockée ingres ||| ingres fetch proc return	count=1
function_name	translation de l'origine ||| pdf translate	count=1
arg_pair	forme d'un ||| int $x	count=1
function_name	temporaire tous ||| uudecode	count=1
function_name	patch ||| string patch	count=1
namespace	d'une classe incluant l'héritage) ||| reflectionclass	count=1
arg_pair	les données data au ||| string $data	count=1
arg_pair	qui pour ||| string $path	count=1
arg_pair	à fournir ||| string $contents int $status	count=1
return	le gestionnaire de travaux ||| string	count=1
arg_pair	d'un élément dans une ||| int $index	count=1
arg_pair	différences et sur le ||| string $src	count=1
arg_pair	identique à ||| int $year	count=2
namespace	si le noeud ||| tidynode	count=1
function_name	nouvelle ||| new	count=7
function_name	record pour l'effacement ||| delete record	count=1
function_name	configure la méthode d'entrelacement ||| set image interlace scheme	count=1
function_name	appliqué à différents niveaux ||| images	count=1
namespace	evloop courant ||| evloop	count=1
function_name	sur ||| getlock	count=1
function_name	cette fonction crée ||| create element ns	count=2
function_name	déplace le pointeur interne ||| seek	count=3
arg_pair	de la table table_name ||| resource $connection string $table_name	count=3
function_name	mémoire partagée de type ||| shm	count=1
arg_pair	dans le même document ||| float $ury	count=1
function_name	incluant les composants ||| destroy	count=1
arg_pair	le ||| string $string	count=1
return	données ||| mixed	count=1
function_name	utilisant les [function_name] fournis pour ||| new instance [function_name]	count=1
function_name	pertinence des termes ||| mlt boost	count=2
return	depuis le flux ||| string	count=1
function_name	après j.c ||| juliantojd	count=1
function_name	utilisée pour récupérer ||| cubrid column names	count=1
arg_pair	db2 universal database ibm ||| string $database string $username	count=1
arg_pair	écrit du ||| resource $psdoc	count=1
function_name	instance glo ||| cubrid save to glo	count=1
arg_pair	fonction de rappel callback ||| callable $callback string $data	count=1
function_name	fonctions maxdb_options() et maxdb_real_connect() ||| maxdb init	count=1
function_name	flux représentant une ||| stream	count=1
function_name	détruit les ||| destroy	count=1
namespace	résultats à envoyer ||| mongocursorinterface	count=1
namespace	pour tracer la ||| function	count=1
function_name	le numéro d'erreur retourné ||| error	count=1
function_name	est ||| get element	count=1
namespace	à ||| mongolog	count=1
function_name	[function_name_1] dernière modification ||| [function_name_1] [function_name_2]	count=1
function	définit les [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	retourne le code ||| int	count=2
arg_pair	utilisateur [arg_pair] le ||| [arg_pair]	count=1
arg_pair	base de données active ||| resource $link_identifier	count=1
function_name	fourni ||| mailparse	count=1
arg_pair	réseau complet dans ||| resource $ann string $configuration_file	count=1
function_name	les tailles de ||| supported key sizes	count=2
function_name	modifie la valeur ||| set	count=1
function_name	un identifiant ||| get element by	count=1
function_name	image et retaille et ||| chop image	count=1
function_name	le fichier mpeg ||| id3v2 tag	count=1
function_name	utilisé par [function_name] applications ||| [function_name]	count=1
arg_pair	insérer un élément dans ||| int $index	count=1
arg_pair	en une chaîne de ||| bool $exclusive	count=1
arg_pair	dans l'argument ||| mixed $fd int $pri	count=1
function_name	longueur ||| length	count=4
function_name	fonction d'activation pour ||| activation function output	count=1
arg_pair	structures ||| resource $pdfdoc int $textflow	count=1
arg_pair	limitations ||| resource $agent	count=1
namespace	construit un arbre ||| sdo_das_xml	count=1
function_name	[function_name_1] dernier ||| [function_name_2] [function_name_1]	count=3
function_name	les paramètres de ||| to string	count=1
namespace	toutes les classes ||| xmldiff\base	count=1
namespace	les verrous qui ||| function	count=1
function_name	la fermeture ||| close	count=1
return	élément avec un identifiant ||| domelement	count=1
arg_pair	table table_name qui vérifient ||| resource $connection string $table_name	count=1
return	uniquement avec une ||| array	count=1
function	taille de [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	gettimeofday 2 ||| gettimeofday	count=1
function_name	utilisée pour modifier ||| set resource	count=1
function_name	être appelé une ||| set	count=1
arg_pair	sur les caractères alphabétiques ||| string $pattern string $string	count=1
function_name	retourne ||| kadm5 get	count=1
function_name	de la base ||| numfields	count=1
function_name	à la ||| destroy	count=1
function_name	retourne la première paire ||| yp first	count=1
function_name	tous les ||| form destroy	count=1
return	lecture ||| void	count=1
function_name	filtre entier ||| filter range	count=1
return	[return] spécifiant ||| [return]	count=3
function_name	[function_name_1] via ||| [function_name_2] [function_name_1]	count=8
function_name	colonnes ||| odbc	count=1
arg_pair	un fichier spécial ||| int $major	count=1
function_name	nom d'hôte dns ||| host	count=1
function	readline affiche [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	utilisée pour envoyer la ||| set by	count=1
function_name	des liens ||| set border dash	count=1
return	l'intérieur [return] ||| [return]	count=1
arg_pair	strcmp() ||| string $str2	count=1
function_name	actif le prochain résultat ||| next result	count=1
function_name	place ||| db2	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] remove var [arg_pair_2]	count=3
function_name	les entités html ||| html entity	count=1
function_name	place des ||| escape	count=1
arg_pair	pile et empile les ||| array $array mixed $value1	count=1
function_name	libère les ||| free	count=4
function_name	défini l'uri de ||| set base uri	count=1
function_name	doit être appelé ||| set	count=1
arg_pair	un index ||| int $index	count=1
function_name	avec ||| add server	count=1
function_name	la fin ||| push	count=1
function_name	file d'attente ||| set max	count=1
function_name	[function_name] opérations de ||| [function_name]	count=1
function_name	croitre ||| increase factor	count=2
function_name	le nombre [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	elle prend ||| set max	count=1
function_name	fichiers ||| mailparse uudecode	count=1
function	prochaine ligne [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
arg_pair	hyperlien à ||| float $lly float $urx	count=2
function_name	antislashs devant les ||| db2 escape string	count=1
function_name	[function_name_1] au lieu ||| [function_name_1] [function_name_2]	count=1
function_name	libère les ressources mémoires ||| newt	count=1
function_name	ajoute un fichier à ||| add from	count=1
function_name	le ||| closedict	count=1
function_name	associatif en utilisant ||| assoc	count=1
function_name	le fait de définir ||| set	count=1
arg_pair	chemin est dirname ||| string $dirname	count=1
function_name	taille de la ||| strlen	count=1
namespace	avec un ||| imagick	count=1
function_name	un nouveau filtre ||| set filter	count=2
namespace	déplace ||| splpriorityqueue	count=1
return	à partir d'une ||| sdo_das_xml_document	count=1
function	[function_name_1] une valeur ||| [arg_pair_2] [function_name_1]	count=6
function_name	portée de l'espace ||| lookup	count=1
arg_pair	attaché, ou écrites sur ||| resource $in	count=1
arg_pair	un préfixe utilisé ||| string $prefix string $field_override	count=1
function_name	le contenu des ||| construct	count=1
function_name	de retour ||| wexitstatus	count=1
function_name	month de l'année ||| cal days in month	count=1
function_name	le gestionnaire par défaut ||| default handler	count=1
arg_pair	octets nuls toutes les ||| resource $handle int $length	count=1
function_name	[function_name_1] clientes oracle ||| [function_name_2] set [function_name_1]	count=1
arg_pair	result_identifier jusqu'à la ||| resource $result_identifier	count=1
return	en utilisant le paramètre ||| bool	count=2
function_name	distant vers le ||| ssh2 scp recv	count=1
arg_pair	factorielle crée une ||| int $size	count=1
arg_pair	fichier filename et ||| string $filename	count=1
function_name	de profilage courant de ||| set profiling	count=1
function_name	vi de ||| iv	count=1
function_name	service ||| gupnp service	count=5
arg_pair	la transforme en noeud ||| domnode $node	count=1
namespace	niveaux ||| imagick	count=1
function_name	transformation ||| matrix	count=2
function_name	la taille d'un blob ||| blob	count=1
function_name	pour la ||| set include	count=1
return	[return] valeur de ||| [return]	count=1
function_name	la ligne suivante ||| dbplus next	count=1
function_name	la ||| compressionmethod	count=1
function_name	insère ||| insert	count=5
arg_pair	la propriété ||| string $property_name	count=1
return	d'une requête ||| string	count=1
arg_pair	unix et windows ||| int $operation	count=1
function_name	calcule la tangente ||| trader tan	count=1
function_name	la retourne ||| get	count=1
function_name	signature ||| signature	count=1
function_name	définition de ||| pg meta data	count=1
arg_pair	table table_name spécifiées ||| string $table_name	count=1
function_name	été ajoutés à la ||| newt form	count=1
arg_pair	opcode spécifié ||| int $opcode	count=1
arg_pair	crée un contexte préfixe/ns ||| string $prefix string $ns	count=1
arg_pair	sous la forme d'un ||| int $x int $y	count=1
arg_pair	dans le ||| float $ury	count=1
namespace	qui ont été ||| function	count=1
function_name	le bytecode et initialise ||| bcompiler write	count=1
arg_pair	lit ||| resource $conn_identifier	count=1
function_name	crée ||| preview images	count=2
function_name	cache ||| opcache	count=1
arg_pair	place dans un pseudo ||| resource $result_id int $fetch_flag	count=1
function_name	la position du neurone ||| to neuron	count=1
return	[return] l'élément ||| [return]	count=1
return	qui ne ||| void	count=1
function_name	le point de contrôle ||| gupnp control point	count=1
function_name	mime kopfzeile ||| mime encode	count=1
function_name	fonctions de rappel pour ||| event buffer set callback	count=1
return	et la ||| mongodb	count=1
namespace	ou un ||| function	count=2
arg_pair	la structure ||| int $num_data int $num_input	count=1
function_name	crée ||| fann create	count=2
return	la partie entière et ||| array	count=1
arg_pair	à gearmanclient::setstatuscallback() ||| string $job_handle	count=1
return	détermine si un ||| bool	count=1
function_name	les dimensions ||| metrics	count=1
function_name	possède des [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	facteur quickprop ||| fann set quickprop	count=1
function_name	machine maître ||| master	count=1
function_name	sortie puis l'efface ||| clean	count=1
function_name	premier attribut ||| ldap first attribute	count=2
function_name	de version de ||| rrd version	count=1
function_name	julien pour ||| cal to jd	count=1
return	requête si plusieurs requêtes ||| bool	count=1
function_name	et les ||| batch size	count=1
function_name	termine une ||| pdf end	count=1
return	dictionnaire représenté par l'identifiant ||| bool	count=1
function_name	[function_name_1] la dernière ||| [function_name_2] error [function_name_1]	count=1
function_name	dans ||| mailparse uudecode all	count=2
function_name	va protéger tous les ||| mysql escape string	count=1
arg_pair	de 16 octets en ||| bool $short_format	count=1
function_name	liens ajoutés ||| set border style	count=1
function_name	des données blob/clob et ||| cubrid lob	count=1
function_name	objet ainsi que ||| object	count=1
arg_pair	occurrence de needle needle ||| string $haystack string $needle	count=1
arg_pair	place un hyperlien à ||| float $lly float $urx	count=2
function_name	qui sont ||| newt form	count=1
function_name	d'activation pour la couche ||| activation function output	count=1
arg_pair	avec event ||| resource $event	count=1
function_name	hormis le fait qu'elle ||| eregi	count=1
function_name	liée au socket ||| socket	count=1
function_name	données sqlite ||| sqlite factory	count=2
arg_pair	une requête aql ||| string $query string $dbpath	count=1
function_name	paramètre patch ||| file patch	count=1
function	guid binaire [arg_pair_2] ||| [function_name_1] string string $binary [arg_pair_2]	count=1
function_name	du blob ||| ibase blob cancel	count=1
function	nom [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	des enregistrements existantes ||| array $columns	count=1
function_name	fonction est similaire à ||| element by	count=1
function_name	[function_name_1] symbolique ||| [function_name_2] [function_name_1]	count=1
function_name	ssl dont ||| ssl filter	count=1
function_name	fourni et ||| mailparse uudecode all	count=1
function_name	l'image de ||| setimagescene	count=1
arg_pair	mode wsdl ||| array $options	count=1
return	de récursion ||| int	count=1
function_name	la méthode ||| zip entry	count=1
function_name	file d'attente ||| max	count=1
namespace	demande un ||| function	count=1
function_name	un curseur typiquement ||| batch	count=1
arg_pair	casse des caractères lors ||| string $pattern	count=1
function_name	d'activation candidate en cascade ||| fann set cascade activation	count=1
namespace	cette [namespace] ||| [namespace]	count=1
arg_pair	avec ||| resource $id	count=1
function_name	individuelle des fichiers ||| compress files	count=1
function_name	d'environnement ||| getenv	count=1
arg_pair	filename par ||| string $filename	count=1
namespace	fichier bzip2 représenté par ||| function	count=1
arg_pair	cette méthode est une ||| string $key mixed $value	count=1
function_name	sybase ||| sybase unbuffered query	count=1
function_name	mémoire occupée par une ||| imagepsfreefont	count=1
function_name	commence après le ||| begin	count=2
function_name	la dernière requête insert ||| insert	count=1
function_name	de l'image ||| set type	count=1
namespace	un algorithme de tri ||| arrayobject	count=1
function_name	la racine ||| root	count=1
function_name	style de jointure de ||| line join	count=1
namespace	dans les requêtes soap ||| soapclient	count=1
return	si la ||| bool	count=7
namespace	d'erreurs ||| hw_api_error	count=1
function_name	utilisées par ||| newt form destroy	count=1
namespace	sur le ||| xmldiff\file	count=1
function_name	le mois month ||| cal days in month	count=1
function_name	[function_name_1] finale ||| [function_name_1] [function_name_2]	count=1
function_name	l'esclave ou bien ||| mysqlnd ms	count=1
function_name	socket valide créée par ||| socket	count=1
arg_pair	identique à la fonction ||| int $minute	count=1
function_name	définit le terme ||| upper bound	count=1
function_name	est utilisée pour insérer ||| cubrid set	count=1
arg_pair	appels distants rpc ||| callable $callback	count=1
function_name	retourne le [function_name_2] ||| [function_name_1] [function_name_2]	count=34
arg_pair	[arg_pair_1] suppression ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	req_identifier de la ||| resource $req_identifier	count=1
function_name	la police ||| query font	count=1
arg_pair	requête à ||| string $query	count=1
function_name	[function_name_1] couleur courante ||| [function_name_1] [function_name_2]	count=2
function_name	dernière erreur imap ||| imap	count=1
arg_pair	le chemin server_path ||| string $server_path	count=1
function_name	simple de définir ||| set	count=1
function_name	à ||| bind	count=1
function_name	retourne la hauteur de ||| imagesy	count=1
function_name	de succès ||| cubrid	count=2
function_name	retourne l'identifiant du thread ||| mysqli thread id	count=1
arg_pair	analyse automatiquement sa localisation ||| string $location	count=1
arg_pair	les deux versions ||| string $version1 string $version2	count=1
arg_pair	mutex ||| boolean $destroy	count=1
function_name	libère toutes les ||| free	count=1
function_name	de connexions ||| connection	count=1
arg_pair	une date ||| string $format string $date	count=1
function_name	tag id3v1 qui pourra ||| id3v1 tag	count=1
namespace	considère array comme une ||| function	count=1
function_name	[function_name] en ||| [function_name]	count=3
function_name	tâche est [function_name_2] ||| [function_name_1] [function_name_2]	count=3
return	informe en retourne si ||| bool	count=1
arg_pair	détermine ||| string $field_override	count=1
function_name	processus du serveur postgresql ||| pg	count=1
function_name	à la ||| gmmktime	count=1
arg_pair	le paramètre filename sous ||| string $filename string $mode	count=1
function_name	contenant les tailles ||| key sizes	count=1
namespace	format de [namespace] qui ||| [namespace]	count=1
function_name	einer mime kopfzeile ||| mime	count=1
function_name	l'endroit ||| error	count=1
function_name	[function_name_1] le statut ||| [function_name_2] [function_name_1]	count=1
namespace	liste ||| spldoublylinkedlist	count=2
function_name	être utilisé pour diriger ||| set multi	count=1
namespace	la date de sortie ||| gmagick	count=1
function_name	lit ||| fbsql password	count=1
function_name	la chaîne de caractères ||| escape	count=1
arg_pair	nom de la base ||| string $database	count=1
namespace	vérifie si le ||| splfixedarray	count=1
function_name	array complétée jusqu'à ||| pad	count=1
function	champ [arg_pair_2] ||| [function_name_1] name resource $result [arg_pair_2]	count=1
function_name	avec les ||| set module	count=1
arg_pair	le fait que ||| int $day int $year	count=1
arg_pair	fois la fonction filter_var() ||| array $data mixed $definition	count=1
function_name	où ||| set error	count=1
namespace	script php ||| samconnection	count=1
namespace	pointeur interne au début ||| solrdocument	count=1
arg_pair	dessine une ||| resource $p float $x1	count=1
function_name	au champ spécifié ||| mysql field	count=1
function_name	pour modifier les limites ||| set	count=1
arg_pair	un fichier ||| int $operation	count=1
return	de données retourne ||| bool	count=1
function_name	utilisée sur ||| zip	count=1
function_name	[function_name_1] la hauteur ||| [function_name_1] image [function_name_2]	count=1
return	moins ||| int	count=1
arg_pair	couleurs ||| int $treedepth bool $dither	count=1
function_name	pour les événements spécifiés ||| set event	count=1
function_name	de forte priorité à ||| task high	count=1
namespace	méthode est utile uniquement ||| mongoclient	count=1
function_name	fichier pdf généré et ||| pdf end document	count=1
function_name	lit l'orientation [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	fourni et extrait dans ||| mailparse uudecode all	count=1
arg_pair	une ||| resource $stream	count=1
function_name	fourni ||| mailparse uudecode all	count=2
namespace	forme en ||| function	count=1
function	suspend [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	un verrou de ||| cubrid lock	count=1
arg_pair	mktime() ||| int $minute	count=1
function_name	que racine pour toutes ||| set	count=1
function_name	sélectionne une ||| mysql db query	count=1
function_name	elle ||| max	count=1
function	[function_name_1] dans la ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	contient ||| mongodb $db string $prefix	count=2
function_name	méthode supprime ||| delete	count=1
arg_pair	dans ||| resource $compcode	count=1
namespace	la couleur courante de ||| harupage	count=1
function_name	d'événements de sortir ||| exit	count=1
return	fonction libère les ressources ||| void	count=1
function_name	de flux à utiliser ||| stream wrapper	count=1
function_name	un sommaire de leur ||| imap fetch overview	count=1
function_name	de faible priorité ||| task low	count=1
arg_pair	à l'aide de ||| string $prefix	count=1
function_name	[function_name] et ||| [function_name] new	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cipher [function_name_2]	count=2
return	récursion ||| int	count=1
function_name	ligne à width ||| pdf setlinewidth	count=1
function_name	des antislashs devant ||| escape string	count=1
arg_pair	colonnes et ||| resource $connection_id string $qualifier	count=1
function_name	d'un attribut par nom ||| attribute	count=1
arg_pair	reconstituée ||| int $metric	count=1
function_name	fuseau horaire ||| geoip time zone	count=1
function_name	version du [function_name_2] ||| [function_name_2] set [function_name_1]	count=2
arg_pair	les données passées avec ||| string $data string $method	count=1
arg_pair	options qui affectent ||| resource $link array $options	count=1
function_name	écrit le ||| fwrite	count=1
function_name	dans ||| set	count=1
function_name	schéma ||| cubrid schema	count=2
namespace	utilisé ||| function	count=1
function_name	position courante ||| ps	count=1
function_name	concatène la ||| concat	count=1
namespace	de deux objets eventbufferevent ||| eventbufferevent	count=1
function_name	dans le flux ||| stream copy to stream	count=1
function_name	distant et ||| ssh2	count=1
function_name	la qualité de ||| quality	count=1
arg_pair	un [arg_pair] dans ||| [arg_pair]	count=1
namespace	fichier au sein d'une ||| pharfileinfo	count=1
return	[return] non compressée ||| [return]	count=2
function_name	stocke le bytecode ||| bcompiler	count=1
function_name	de la facette ||| facet	count=1
function_name	dans un document ||| attributes	count=1
arg_pair	coordonnées de alpha degrés ||| resource $p float $alpha	count=1
return	la date de ||| string	count=1
arg_pair	une ||| resource $result	count=3
function_name	strpos() en tenant compte ||| mb strrpos	count=1
namespace	dans ||| function	count=1
function_name	d'espace de ||| elements by	count=1
function_name	fonctions définies ||| get defined functions	count=2
arg_pair	array comme une ||| array $array	count=1
arg_pair	chaîne de caractères ||| string $localname	count=1
function_name	la forme en ||| newt form	count=1
function_name	termine la ||| cancel monitor	count=1
function_name	les paramètres de l'objet ||| to	count=1
function_name	et de flux ||| stream wrapper	count=1
function_name	tous les paramètres de ||| to	count=1
arg_pair	fichier spécifié par path ||| string $path	count=1
function_name	attribut de l'entrée ||| attribute	count=1
function_name	strpos() en tenant ||| mb strrpos	count=1
function_name	message d'erreur du ||| error	count=1
arg_pair	message dans une ||| resource $compcode	count=1
arg_pair	passés ||| int $second int $month	count=1
function_name	nouveau contexte ||| gupnp context new	count=1
function_name	existe ||| exists	count=5
arg_pair	profile [arg_pair] use ||| [arg_pair]	count=1
function_name	la couleur de ||| background color	count=2
function_name	la lecture aux secondaires ||| get slave okay	count=1
function_name	libère un [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	tenter de cloner l'exception ||| exception	count=1
namespace	archive ||| pharfileinfo	count=1
function_name	court d'une classe c'est-à-dire ||| short	count=1
function	[function_name_1] résultat dans ||| [function_name_1] object resource $result [arg_pair_2]	count=3
function_name	cette fonction retourne ||| mcrypt enc get	count=1
arg_pair	un bloc de contenu ||| int $contents	count=1
function_name	demande ||| getlock	count=1
function_name	fin de ||| add	count=1
function_name	de flux à ||| stream wrapper	count=1
arg_pair	passés sont ||| int $second int $month	count=1
arg_pair	prédéfini de cartes ||| int $channel	count=1
function_name	définit le certificat ||| set	count=1
function_name	[function_name_1] jeu ||| [function_name_2] [function_name_1]	count=8
rest	[return_1] statut sur ||| [function_2] [return_1]	count=3
function_name	texte intégral ||| set match	count=1
function_name	[function_name_1] client ||| [function_name_2] [function_name_1]	count=2
arg_pair	partir d'un fichier log ||| string $log_dir	count=1
namespace	terminé son ||| collectable	count=1
function_name	cette fonction ||| newt	count=1
arg_pair	soit terminé, ou qu'un ||| int $options	count=1
return	seulement si cette ||| bool	count=1
function_name	défini l'endroit ||| fann set	count=1
arg_pair	[arg_pair_1] données data ||| [arg_pair_2] string $sealed_data [arg_pair_1]	count=2
function_name	logo zend en ||| zend logo guid	count=2
return	contenu courant ||| string	count=1
function_name	gestion des colonnes ||| odbc binmode	count=1
function_name	si le contexte est ||| is	count=1
function_name	défini ||| source	count=1
arg_pair	rappel callback ||| callable $callback	count=8
function_name	caractères) ||| ltrim	count=1
function_name	informations concernant le ||| getinfo	count=1
function_name	brutes de [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	envoyé par ||| function	count=1
arg_pair	les effets libgd ||| resource $image int $effect	count=1
function_name	nom d'hôte ou une ||| name	count=1
return	le noeud courant ||| bool	count=1
function_name	qui avaient été ||| form destroy	count=1
function_name	[function_name_1] dernière requête ||| [function_name_2] error [function_name_1]	count=1
arg_pair	cubrid_connect() est ||| string $passwd bool $new_link	count=1
function_name	définit l'apparence ||| set xyz	count=1
arg_pair	d'utilisateur username et ||| resource $ftp_stream string $username	count=1
return	jeu ||| sqlite3result	count=1
function_name	position courante ||| show	count=1
function_name	configure la couleur de ||| image background color	count=1
function_name	du script en cours ||| set	count=1
function_name	réseau ||| fann create	count=1
function_name	le phar ||| phar	count=1
function_name	un test sur un ||| fann test data	count=1
return	false pour ||| void	count=1
function_name	d'erreur de la ||| get error	count=1
return	d'autres termes la ||| int	count=1
function_name	du script en ||| set	count=1
function_name	l'uri de base ||| set base uri	count=1
arg_pair	à destfp ||| resource $sourcefp resource $destfp	count=1
namespace	tous les composants ||| function	count=1
function_name	la chaîne ||| db2 escape string	count=1
function_name	fonction libère la mémoire ||| cubrid free	count=1
namespace	la ||| mongocursorinterface	count=2
function_name	de l'image ||| preview images	count=1
arg_pair	contexte zmq ||| integer $io_threads boolean $is_persistent	count=1
function_name	fichier temporaire tous ||| mailparse	count=1
function_name	définit le ||| set action	count=1
function_name	dans la portée de ||| lookup	count=1
function_name	élément avec un identifiant ||| get element	count=1
function_name	de chiffrement ||| mcrypt	count=2
return	déplace l'itérateur à la ||| void	count=1
function_name	programme qui sera démarré ||| launchlink	count=1
function_name	a des noeuds frères ||| has siblings	count=1
function	[function_name_1] spécifié local_socket ||| [function_name_1] [arg_pair_2]	count=2
function_name	être utilisée pour ||| module	count=1
function_name	flux à ||| stream wrapper register	count=1
function_name	bufferisées dans le ||| fflush	count=1
function_name	iidentique à ||| rewind	count=1
function_name	l'orientation de ||| orientation	count=1
arg_pair	une fonction à l'exécution ||| string $function	count=1
function_name	le nombre ||| ifx num	count=1
arg_pair	métadonnées ||| mongodb $db string $prefix	count=1
return	indique si un ou ||| bool	count=1
return	identique à ||| int	count=2
return	dernière requête ||| int	count=1
function_name	analyse ||| imap rfc822 parse	count=1
namespace	l'écoute) pour ce travail ||| gearmanjob	count=1
function_name	met à l'échelle les ||| fann scale output	count=1
function_name	[function_name_1] le contrôle ||| [function_name_1] [function_name_2]	count=2
function_name	similaire à la ||| field	count=2
namespace	script ||| function	count=1
function_name	identifiant unique ||| hash	count=1
function_name	calcule l'entier supérieur suivant ||| ceil	count=1
arg_pair	texte à la position ||| resource $psdoc	count=1
arg_pair	chaîne d'un jeu de ||| string $from	count=1
function_name	utilisée sur ||| compressionmethod	count=1
function_name	est dans un espace ||| in	count=1
function_name	qui décide si ||| mysqlnd qc set is	count=1
function_name	fonction spécifique ||| virtual	count=1
function_name	de configuration include_path ||| set include path	count=1
function_name	stocker des ||| set metadata	count=1
return	dessin des lignes ||| bool	count=1
namespace	valide du document ||| solrdocument	count=1
namespace	la représentation dom ||| domdocument	count=1
function_name	paire de sockets ||| pair	count=2
function_name	la fonction d'activation pour ||| set activation	count=3
return	l'objet ||| void	count=1
function	[function_name_1] parties de ||| [function_name_1] open resource $link_identifier [arg_pair_2]	count=1
arg_pair	caractères lors de la ||| string $string	count=1
arg_pair	utilisée pour récupérer ||| string $table_name	count=1
function_name	que les requêtes s'exécutent ||| eio event loop	count=1
arg_pair	envoie une commande ||| resource $connection	count=1
arg_pair	plate-forme unix et windows ||| resource $handle int $operation	count=1
namespace	d'octets ou ||| function	count=1
arg_pair	le texte ||| string $text	count=1
function_name	retourne une ||| mysqli get	count=1
arg_pair	en ligne/hors ||| string $host	count=1
function_name	à fermer ||| shmop close	count=1
arg_pair	la fonction cubrid_connect() ||| bool $new_link	count=1
function_name	distant et lui ||| ssh2	count=1
arg_pair	le ||| int $hour	count=1
function_name	le message d'erreur associé ||| pg result error	count=1
function_name	[function_name] dans la ||| add [function_name]	count=3
function_name	sélectionne une base ||| mysql db	count=1
arg_pair	d'une base de ||| string $database resource $link_identifier	count=1
arg_pair	original définie par ||| string $alias	count=1
namespace	memcached ||| memcached	count=1
function_name	le noeud ||| is	count=1
arg_pair	que les paramètres ||| int $day	count=1
function_name	grande taille à ||| pg lo	count=1
arg_pair	identique à ||| int $day	count=1
function_name	le dossier d'archives ||| zip entry	count=1
namespace	sauvegarde [namespace] ||| [namespace]	count=1
function_name	et ||| oci parse	count=1
function_name	donnée par le paramètre ||| yaz	count=1
namespace	si un itérateur ||| norewinditerator	count=1
function_name	diriger les clés ||| key	count=1
arg_pair	lors de ||| array $server	count=3
rest	cette [function_2] ||| [return_1] [function_2]	count=4
namespace	l'archive phar exécutée ||| phar	count=1
function_name	options ||| options	count=1
function_name	préparée et retourne ||| execute	count=1
namespace	la base ||| function	count=1
function_name	ligne de données depuis ||| ibase fetch row	count=1
function_name	au vendeur à la ||| put vendor	count=1
return	cette fonction ||| void	count=2
function_name	la pertinence des termes ||| mlt boost	count=2
function_name	retourne un ||| get	count=6
function_name	page pour ||| open pdi page	count=1
function_name	alias [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	lie [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	ellipse partielle ||| imagearc	count=1
function_name	retourne [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	au serveur oracle ||| oci	count=1
function_name	temporaire ||| uudecode	count=1
namespace	parcourt un ||| mongocommandcursor	count=1
function_name	retourne [function_name] de ||| get [function_name]	count=1
function_name	décrivant ||| stomp connect	count=1
function_name	limite inférieure dans le ||| include lower bound	count=1
function	[function_name_1] le prompt ||| [function_name_1] [arg_pair_2]	count=3
function_name	de résultats ||| result	count=3
function_name	instance de ||| fetch object	count=1
arg_pair	écrit du texte ||| resource $psdoc	count=1
namespace	la couleur utilisée ||| function	count=1
function_name	[function_name_1] le client ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] [function_name_2] ||| [function_name_1] num query [function_name_2]	count=7
arg_pair	le prompt ||| string $prompt	count=1
function_name	soit de type id ||| set id	count=1
function_name	de balise donné ||| elements by tag	count=1
return	de base pour ||| string	count=1
function_name	les extrêmes pour l'un ||| extrema	count=1
arg_pair	fichiers ||| string $path int $pri	count=1
namespace	l'endroit ||| function	count=1
function_name	courant ||| ob	count=1
function_name	première entrée du résultat ||| ldap first entry	count=1
arg_pair	grâce à gearmanclient::setstatuscallback() ||| string $context	count=1
function_name	le comportement de autocommit ||| db2 autocommit	count=1
function_name	configuration include_path pour ||| include path	count=1
arg_pair	alpha degrés dans le ||| resource $p float $alpha	count=1
arg_pair	et ses voisins immédiats ||| mixed $bordercolor int $x	count=2
function_name	définit une ||| mysqlnd ms set	count=1
arg_pair	résultats listant ||| string $table_name	count=1
arg_pair	l'environnement pour la connexion ||| string $passwd bool $new_link	count=1
function_name	déplace le pointeur ||| data seek	count=1
function_name	patch et enregistre le ||| patch	count=1
function_name	le dictionnaire représenté ||| closedict	count=1
arg_pair	système de ||| resource $sftp	count=1
function_name	[function_name_1] décrivant ||| [function_name_2] [function_name_1]	count=4
function_name	calcule le cosinus hyperbolique ||| trader cosh	count=1
return	fichiers ainsi ||| void	count=1
function_name	le nom long ||| frame long name	count=2
namespace	sert à détruire un ||| function	count=1
function_name	utilisé par [function_name] applications pour ||| [function_name]	count=1
arg_pair	chaîne ||| string $str int $start	count=1
function_name	lit le groupe d'appartenance ||| get group	count=1
arg_pair	un attribut dans ||| array $values	count=1
arg_pair	socket un flux ||| mixed $socket	count=1
function_name	protège ||| escape	count=4
function_name	copie exacte de la ||| rcrtexact	count=1
function	[function_name_1] en noeud ||| [function_name_1] [arg_pair_2]	count=1
function_name	les fichiers encodés ||| uudecode	count=1
arg_pair	de la chaîne ||| string $str	count=1
arg_pair	une valeur ||| int $color float $value	count=1
function_name	la fonction cubrid_lob2_tell64() est ||| cubrid lob2 tell64	count=1
function_name	nouveau filtre entier ||| filter range	count=1
function_name	crypte le contenu et ||| encrypt	count=1
function_name	ligne depuis ||| string read line	count=1
function_name	langage courant ||| mb language	count=1
function	[function_name_1] ch ||| [arg_pair_2] [function_name_1]	count=1
return	retourne [return] ||| [return]	count=6
function_name	et assombrissant les bords ||| raise	count=1
arg_pair	des enregistrements existantes ||| string $key array $columns	count=1
function_name	comme [function_name] ||| [function_name]	count=1
function_name	une pile et ||| array push	count=1
arg_pair	la taille de size ||| int $size	count=1
function_name	un fichier qui ne ||| set	count=1
return	comme [return] /etc/services ||| [return]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] int $imagetype [arg_pair_2]	count=6
arg_pair	le réseau complet ||| string $configuration_file	count=1
function_name	[function_name_1] erreur de ||| [function_name_2] [function_name_1]	count=2
return	des lignes par ||| bool	count=1
arg_pair	de mémoire partagée ||| int $shmid	count=1
namespace	fichiers encodés ||| function	count=1
function_name	efface le ||| ftp rmdir	count=1
function_name	maximal de lignes ||| set rows	count=2
function_name	des informations issus des ||| multi info	count=1
namespace	remplace la brosse courante ||| function	count=1
function_name	similaire à pclose() hormis ||| proc	count=1
function	[function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=2
function_name	des données ||| set	count=1
return	utiliser en ||| bool	count=1
arg_pair	la fonction ||| int $second	count=1
function_name	à la ||| add	count=1
function_name	rappel pour readline affiche ||| readline callback handler install	count=1
arg_pair	avec xsltprocessor ||| string $name	count=1
function_name	récupère toutes ||| get	count=1
namespace	par l'identifiant de ||| function	count=2
function_name	détruire un bloc ||| shmop delete	count=1
arg_pair	méthode yar_concurrent_client::loop() ||| array $parameters	count=1
arg_pair	dans une chaîne nommée ||| string $pass	count=1
function_name	[function_name_1] brute ||| [function_name_2] [function_name_1]	count=4
function_name	envoyer des erreurs soap ||| soap	count=1
function_name	une connexion persistante vers ||| cubrid pconnect	count=1
namespace	lob oracle en ||| oci-lob	count=1
arg_pair	ascii pem [arg_pair_2] ||| [arg_pair_2] string $outfilename [arg_pair_1]	count=2
function_name	l'endroit où ||| set	count=1
return	courante pour ||| bool	count=1
function_name	bases de données disponibles ||| dbs	count=2
return	la version ||| string	count=1
return	[return] rappel ||| [return]	count=1
function_name	[function_name_1] un dossier ||| [function_name_1] [function_name_2]	count=5
namespace	temps écoulé pour tous ||| hrtime\stopwatch	count=1
namespace	implémente un algorithme ||| arrayobject	count=1
function	[function_name_1] d'une ||| [function_name_1] class [arg_pair_2]	count=3
return	texte lors ||| int	count=1
function_name	en ignorant la casse ||| ireplace	count=1
function_name	bloc ||| delete	count=1
function_name	pour la ||| end	count=1
function_name	du texte à ||| ps show	count=1
function_name	à true solr placera ||| echo handler	count=1
function_name	arrière plan et ||| do high	count=1
function_name	situé ||| connect	count=1
arg_pair	left et ||| mixed $left	count=1
function_name	caractères passée ||| escape	count=1
namespace	les ||| solrparams	count=1
function_name	avec ||| by	count=1
function_name	construit un ||| load	count=1
function_name	sont séchées ||| radius demangle	count=1
function_name	l'en-tête du fichier rpm ||| rpm get	count=1
return	tous ||| void	count=1
function_name	simple ligne ||| fit textline	count=1
function_name	l'objet sous la forme ||| string	count=1
function_name	la fonction getimagesize() excepté ||| getimagesizefromstring	count=1
function_name	de type auto_increment ||| insert id	count=1
function_name	une nouvelle csrcertificate ||| csr new	count=1
function	[function_name_1] dans l'argument ||| [arg_pair_2] [function_name_1]	count=2
namespace	le [namespace] de cache ||| [namespace]	count=1
namespace	sur le document source ||| xmldiff\file	count=1
function_name	pdf pour ||| set file	count=1
function_name	sous la forme de ||| string	count=1
arg_pair	texte text ||| string $text	count=3
function_name	termine ||| pdf end	count=1
return	en crée une ||| bool	count=1
arg_pair	des tableaux avec ||| array $array1	count=1
function_name	[function_name_1] tidy ||| [function_name_2] [function_name_1]	count=2
namespace	base de données ||| tokyotyrant	count=1
function_name	cela correspond parfaitement ||| dbplus tremove	count=1
arg_pair	avec un espace ||| string $namespaceuri	count=1
function_name	[function_name] du ||| remove [function_name]	count=1
function_name	à la ||| form	count=1
function_name	fonction retourne le nombre ||| num	count=1
arg_pair	connexion connection et ||| resource $connection	count=1
function_name	précédents intervalles clos ||| elapsed	count=1
function_name	retourne l'identifiant du thread ||| get thread id	count=1
function_name	envoie une ||| handle	count=1
function_name	défini l'endroit ||| log	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] open [function_name_2]	count=1
function_name	les liens ajoutés ||| ps set border dash	count=1
namespace	imagick a été compilé ||| imagick	count=1
function_name	retourne l'identifiant de ||| id	count=1
function_name	résultat associé à ||| mysql data	count=1
arg_pair	l'activation de ||| int $condition_type	count=1
return	la recherche sur les ||| int	count=1
function_name	courant du ||| ob	count=1
arg_pair	le paramètre length ||| int $length	count=1
function_name	minimale ||| min error	count=1
function_name	le langage courant ||| mb language	count=1
arg_pair	prédéfini de cartes ||| string $threshold_map	count=1
function_name	définit la couleur de ||| set color	count=1
namespace	base de données ||| function	count=1
function_name	pour modifier les ||| set resource	count=1
function_name	à preg_replace() mais elle ||| preg filter	count=1
function_name	de flux ||| stream	count=3
function_name	[function_name_1] documents similaires ||| [function_name_1] [function_name_2]	count=2
function_name	noeud courant est un ||| is	count=1
function_name	[function_name_1] rendu courant ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] extension [function_name_2]	count=4
function_name	associé à l'identifiant ||| mysql data	count=1
return	sur un ||| bool	count=1
function_name	de fichiers distant en ||| ssh2 sftp stat	count=1
namespace	le ||| splpriorityqueue	count=1
return	est ||| int	count=4
function_name	requête appelée ||| stmt	count=1
function_name	champ ||| mysql field	count=2
return	en incluant les ||| void	count=1
function_name	fonction est identique à ||| eregi	count=1
namespace	contient les métadonnées et ||| mongogridfs	count=1
function_name	ferme ||| zip close	count=1
arg_pair	attrappées par des fonctions ||| string $cb string $arg	count=1
function_name	un format ||| string	count=1
function_name	ligne suivante ||| dbplus next	count=1
return	en ||| string	count=3
function_name	retourne l'année d'un ||| get year	count=2
arg_pair	cet index ainsi ||| mixed $index	count=1
namespace	est similaire à la ||| function	count=2
function_name	souscription à la ||| imap unsubscribe	count=1
function_name	retournant un tableau ||| win32 query	count=1
return	défini l'endroit où ||| void	count=1
return	de ||| resource	count=2
function_name	compare une ou plusieurs ||| compare image channels	count=1
function_name	retourne les attributs dépendants ||| get attr	count=1
arg_pair	au service service et ||| string $service	count=1
return	un fichier au sein ||| bool	count=1
namespace	réalisation de la ||| gearmantask	count=2
function_name	la profondeur de ||| set image depth	count=1
function_name	affine ||| affine	count=1
function_name	l'image spécifiée ||| images	count=1
function_name	cette fonction [function_name] ||| [function_name]	count=3
function_name	tableau contient encore un ||| valid	count=1
function_name	sont sur des ||| newt form	count=1
return	identique à la ||| int	count=1
namespace	stocker des données ||| pharfileinfo	count=1
function_name	un format lisible ||| string	count=1
function_name	ne ||| set	count=2
function_name	la carte ||| colormap	count=1
namespace	noeud ||| splpriorityqueue	count=2
arg_pair	à la longueur width ||| int $width	count=1
function_name	à la session ||| session	count=1
function_name	au champ spécifié ||| field	count=1
function_name	de remplissage ||| filling	count=1
namespace	chaîne de caractères de ||| serializable	count=1
arg_pair	d'un fichier ||| int $pri	count=1
return	personnalisées dans un ||| void	count=1
function_name	au champ ||| mysql field flags	count=1
namespace	permis ou ||| function	count=1
function_name	elle prend plus ||| eio set max poll time	count=1
function_name	remet la ||| pgsql reset	count=1
function_name	à créer un agent ||| agent	count=1
function_name	est un dossier ||| is dir	count=4
return	lot d'objets ||| mongocommandcursor	count=1
return	lors de la fin ||| void	count=1
function_name	le paramètre ||| add buffer	count=1
arg_pair	source vers le ||| resource $source	count=1
return	texte ||| bool	count=1
function_name	à la forme en ||| newt	count=1
function_name	[function_name_1] le préfixe ||| [function_name_2] [function_name_1]	count=1
function_name	pour ||| end	count=1
function_name	la forme en incluant ||| destroy	count=1
function_name	police et ||| font	count=1
function_name	en ||| db2 escape string	count=2
function_name	elle prend plus ||| eio set	count=1
function_name	la totalité de l'écran ||| imagegrabscreen	count=1
function_name	mode [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	parcourt ||| batch	count=1
arg_pair	hormis le fait ||| string $pattern	count=1
function_name	défini l'endroit ||| set error log	count=1
function_name	les bits de statut ||| connection status	count=1
function_name	[function_name_1] de sévérité ||| [function_name_1] [function_name_2]	count=1
function_name	méthode ajoute ||| add	count=1
function_name	libeio tant ||| event	count=1
return	la réception d'un ||| int	count=1
namespace	informe [namespace] d'intercepter fopen() ||| [namespace]	count=1
function_name	[function_name] le wsdl ||| get [function_name]	count=2
function_name	définit une ||| qc set	count=1
function_name	devant les ||| db2	count=1
return	fournies en mémoire ||| bool	count=1
function_name	de caractères ||| escape string	count=1
return	la chaîne ||| string	count=3
function_name	préparée stmt ||| stmt	count=1
return	la valeur ||| string	count=1
function_name	de la ||| path	count=1
function_name	l'orientation de l'image ||| image orientation	count=1
namespace	en ||| soapserver	count=1
return	est identique à ||| int	count=1
function_name	bloc ||| shmop delete	count=2
function_name	le nombre de ||| ifx num	count=1
arg_pair	le texte ||| string $text int $index	count=1
arg_pair	str à ||| string $str	count=1
function_name	fin de l' ||| add	count=1
function_name	yaml ||| yaml emit file	count=2
function_name	elle ||| eio set	count=1
namespace	un stockage ||| splobjectstorage	count=1
function_name	qui sont sur des ||| destroy	count=1
function_name	on doit s'arrêter ||| upper bound	count=1
function_name	les composants qui sont ||| destroy	count=1
function_name	route [function_name] dans la ||| add [function_name]	count=1
function_name	l'attribut ||| mod	count=2
namespace	permet ||| pharfileinfo	count=1
return	la sortie d'un ||| int	count=1
function_name	pixels implosé par ||| implode image	count=1
return	les ressources mémoires ||| void	count=1
function_name	de l'étape d'erreur sarprop ||| sarprop step error shift	count=1
return	uniquement si elle ||| bool	count=1
arg_pair	event_handler en tant que ||| callable $event_handler string $event_name1	count=1
function_name	la couleur spécifiée sous ||| color	count=1
function_name	[function_name_1] les pages ||| [function_name_1] [function_name_2]	count=3
namespace	retourne la méthode de ||| function	count=1
function_name	libère toute la mémoire ||| ldap free result	count=1
namespace	du tampon de sortie ||| function	count=1
function_name	pour les ||| ibase set	count=1
return	avec ||| resource	count=5
function_name	le serveur d'administration et ||| kadm5 destroy	count=1
return	en comptant ||| bool	count=3
namespace	ou non le gestionnaire ||| function	count=1
arg_pair	à ||| int $hour	count=1
arg_pair	attribut dans un ||| array $values	count=1
arg_pair	une valeur entière ||| string $key number $increment	count=1
arg_pair	du jeu de ||| resource $stmt string $classname	count=1
function_name	phar quand ||| phar	count=1
function_name	forme en ||| destroy	count=1
function_name	retourne la ||| entry	count=1
function_name	du navigateur ||| get	count=1
arg_pair	paramètre tag ||| string $tag	count=1
arg_pair	clic sur celui-ci ||| resource $psdoc float $llx	count=1
arg_pair	du buffer buf via ||| string $buf	count=1
function_name	encodés qui s'y trouvent ||| uudecode	count=1
return	retourne le code d'erreur ||| int	count=2
namespace	tampon de ||| function	count=1
arg_pair	clé /status ||| string $status	count=1
return	stocker des données ||| void	count=1
function_name	crée une nouvelle ||| create	count=3
function_name	[function_name_1] rappel pour ||| [function_name_2] [function_name_1]	count=3
arg_pair	statue ||| string $path	count=1
function_name	cette fonction libère les ||| form	count=1
arg_pair	paramètre filename ||| string $filename	count=2
function_name	contenant ||| octdec	count=1
function_name	ligne dans une base ||| fetch	count=1
namespace	cette méthode est obsolète ||| soapclient	count=1
function	[function_name_1] une chaîne ||| [function_name_1] slob [arg_pair_2]	count=1
function_name	image ||| pseudo image	count=2
return	le gestionnaire ||| string	count=1
arg_pair	coordonnées x ||| float $x	count=1
function_name	proxy pour intercepter les ||| uh set connection proxy	count=1
function_name	enregistrées ||| procedures	count=1
function_name	libère ||| sqlsrv free	count=1
function_name	[function_name_1] d'une ||| [function_name_1] [function_name_2]	count=3
function_name	tangente ||| trader tan	count=1
function_name	données du fichier fourni ||| mailparse	count=1
function_name	avoir de conteneur de ||| set default	count=1
function_name	le serveur mysql ||| server	count=1
function_name	les composants qui ||| newt form destroy	count=2
arg_pair	distante ||| bool $is_null int $maxlen	count=1
function_name	un antislash devant tous ||| preg quote	count=1
function_name	de message d'erreur qui ||| error	count=1
function_name	simple ligne ||| textline	count=1
function_name	la fréquence en deçà ||| mlt min term frequency	count=1
arg_pair	la fonction mktime() ||| int $year	count=2
return	composants ||| void	count=2
namespace	en ||| arrayobject	count=1
namespace	par l'option ||| function	count=4
function_name	l'image ||| preview images	count=2
return	moins le ||| int	count=1
function_name	fonction cubrid_connect_with_url() est utilisée ||| with url	count=1
function_name	transaction ibase ||| ibase commit	count=2
function_name	le fuseau horaire correspondant ||| time zone	count=1
function	sauvegarde [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=8
function_name	remplace les données associées ||| replace record	count=1
function_name	accomplit ||| rquery	count=1
function_name	méthode subscribe ||| subscribe	count=1
namespace	vers ||| norewinditerator	count=1
arg_pair	si l'objet object ||| object $object	count=1
namespace	sortie normalement en ||| ev	count=1
return	utiliser avec ||| resource	count=1
function_name	base de données rrd ||| rrd	count=5
arg_pair	fonction cubrid_set_add() est ||| string $attr_name string $set_element	count=1
function_name	exécution à l'extinction ou ||| register shutdown function	count=1
arg_pair	fichier local local_file ||| string $local_file	count=1
return	lit ||| string	count=1
function_name	français républicain en ||| frenchtojd	count=1
function_name	définit le certificat ||| set capath	count=1
function_name	pour la durée du ||| set include path	count=1
function_name	verrou ||| dbplus getlock	count=2
function_name	d'un attribut par ||| attribute	count=1
function_name	passée ||| db2 escape	count=1
function_name	nombre de colonnes dans ||| ifx num	count=1
namespace	l'entrée définie par son ||| ziparchive	count=1
arg_pair	de l'attribut attribute ||| string $attribute	count=1
return	définie ||| string	count=1
arg_pair	changement ||| float $sarprop_step_error_shift	count=1
arg_pair	texte text ||| resource $p string $text	count=2
function_name	assigne ||| buffer priority set	count=1
arg_pair	utilisée pour établir l'environnement ||| string $userid	count=1
return	bits ||| void	count=1
function_name	antislashs devant les caractères ||| escape	count=1
arg_pair	et retourne ||| string $encoding	count=2
arg_pair	assoc_array dans ||| int $options	count=1
function_name	elle prend plus de ||| eio set max poll	count=1
function_name	position du neurone ||| from neuron	count=1
function_name	sont ||| newt	count=1
function_name	[function_name_1] d'une ||| [function_name_2] [function_name_1]	count=3
function_name	de lignes [function_name_2] ||| [function_name_2] [function_name_1]	count=14
arg_pair	entre left_operand en utilisant ||| string $left_operand	count=1
function_name	le dernier [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	dans ||| apd	count=1
function_name	indexé, ||| set	count=1
function_name	file d'attente s'interrompt si ||| set max	count=1
function_name	de zéro) de l'itérateur ||| position	count=1
function_name	ajoute ||| add handle	count=2
function_name	[function_name_1] paramètre facet.date.end ||| [function_name_2] [function_name_1]	count=1
function_name	de fonctions ||| ps set	count=1
function_name	d'événement ssl dont ||| ssl filter	count=1
arg_pair	un fichier ||| string $destination	count=1
namespace	méthode tente de mettre ||| quickhashstringinthash	count=1
function_name	suivant ||| next	count=4
function_name	contenu ||| from	count=2
function	le nom [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	pour l'événement ||| mixed $arg	count=1
function_name	de ||| task	count=4
return	crée un groupe de ||| resource	count=1
function_name	prend ||| set max	count=1
function_name	[function_name_1] nombre maximal ||| [function_name_2] [function_name_1]	count=1
function_name	une trace ||| trace	count=2
function_name	à partir ||| load string	count=1
arg_pair	de domaine ||| string $domain	count=1
function_name	du champ donné ||| field	count=1
namespace	objets snmp spécifiés ||| snmp	count=1
namespace	définit l'image ||| gmagick	count=1
function_name	et libère toutes les ||| free	count=1
function_name	la retourne sous ||| get	count=1
arg_pair	l'étape est un petit ||| float $rprop_delta_min	count=1
function_name	ressources ||| newt form	count=1
function_name	modifie la ||| include	count=1
arg_pair	qu'elle ||| string $pattern	count=1
function_name	écrit une image ||| write	count=1
arg_pair	passées ||| string $data	count=1
function_name	ligne de données depuis ||| fetch row	count=2
return	de réalisation de ||| int	count=2
function_name	du centre [function_name] où ||| swirl [function_name]	count=1
function_name	représentant le type ||| type	count=1
namespace	toutes ||| function	count=1
namespace	plus récemment survenu sur ||| eventutil	count=1
function_name	paramètres de résultats mnogosearch ||| udm	count=1
function_name	retourne la version ||| version	count=2
function_name	lier des ||| cubrid lob2 bind	count=1
function_name	la fréquence à ||| min doc frequency	count=1
function_name	racine ||| root data	count=1
arg_pair	d'astuces sql pour l'activation ||| int $condition_type mixed $condition	count=1
function_name	secondes ||| set	count=1
function_name	récupère un élément ||| func get	count=1
namespace	array ||| function	count=1
function_name	de chargement donc ||| set default	count=1
function_name	de gris pour ||| ps setgray	count=1
function_name	défini les drapeaux d'une ||| uopz flags	count=1
function	texte [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	est une nom ||| is valid	count=1
function_name	la rfc 3986 ||| rawurlencode	count=1
function_name	array comme une ||| array	count=1
function	[function_name_1] la valeur ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	dans ||| string $source	count=1
function_name	la forme en ||| form	count=1
function_name	file d'attente ||| max poll time	count=1
return	retourne des statistiques sur ||| resource	count=1
function_name	retourne la [function_name_2] ||| [function_name_1] root element [function_name_2]	count=1
function_name	convertit un guid binaire ||| mssql guid	count=1
arg_pair	et spécifie un rappel ||| string $function_name	count=1
function_name	révision ||| svn log	count=2
namespace	la fonction mktime() excepté ||| function	count=1
function_name	mémoires ||| newt form	count=1
function_name	pdf ||| pdf get pdi value	count=2
function_name	ajoute ||| append	count=3
return	dans lequel ||| int	count=1
function_name	index ||| index	count=1
function_name	d'une notification de ||| gupnp service proxy add notify	count=1
function_name	stocker ||| set	count=1
function_name	insère le ||| insert	count=1
arg_pair	paramètre pattern puis ||| string $pattern	count=1
arg_pair	listant les ||| string $schema string $table-name	count=1
function_name	si le paramètre est ||| is	count=1
arg_pair	crée une ||| resource $pdfdoc	count=1
namespace	de champs colonnes ||| function	count=1
function_name	ressources mémoires utilisées ||| form destroy	count=1
function_name	de la recherche ||| eregi	count=1
function_name	d'activation dans la ||| set activation	count=1
return	[return] protocole ||| [return]	count=1
return	être utilisée ||| void	count=2
namespace	synchronise la base ||| tokyotyrant	count=1
arg_pair	serveur avec les ||| resource $id array $config	count=1
function_name	grande taille de la ||| lo export	count=1
return	par documents par réponse ||| bool	count=1
namespace	d'un objet imagick ||| imagick	count=1
function_name	route par défaut ||| add route	count=1
function_name	est compressé avec ||| is compressed	count=2
function_name	peut être utilisé ||| debug	count=1
function_name	le texte ||| text	count=3
function_name	verrou d'écriture sur ||| lock write	count=1
function_name	bords et [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	seul depuis les données ||| string $data string $optlist	count=1
return	le numéro de ||| int	count=4
function_name	de ||| ob	count=1
return	données uniquement si ||| bool	count=1
function_name	un identifiant donné ||| by id	count=1
return	sur tar [return] méthode ||| [return]	count=1
function_name	requête courante radius ||| radius	count=1
arg_pair	sont ||| int $hour int $minute	count=1
arg_pair	ligne ||| int $row	count=2
function_name	couleurs de [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	un fichier dans le ||| int	count=1
function_name	insert effectuée ||| insert	count=1
namespace	depuis le flux de ||| gmagick	count=1
function_name	sur ||| entry compressionmethod	count=2
function_name	le dictionnaire ||| crack closedict	count=1
function_name	contenant la liste des ||| list	count=1
function_name	les ressources persistantes ||| dump persistent resources	count=1
function_name	[function_name_1] minuscules ||| [function_name_2] [function_name_1]	count=2
namespace	filtrage ||| php_user_filter	count=1
function_name	du cache [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	crée un ||| mcrypt create	count=1
function_name	de configuration ||| set include path	count=1
arg_pair	fichier remote_file présent sur ||| int $mode	count=1
function_name	taille décompressée ||| filesize	count=1
function_name	similaire à la fonction ||| fbsql field type	count=1
return	script ||| string	count=1
function_name	chaîne de caractères ||| db2 escape string	count=1
function_name	[function_name_1] pdf physique ||| [function_name_2] [function_name_1]	count=4
namespace	pile et ||| function	count=1
function_name	données de déboguage ||| debug	count=1
arg_pair	un ||| string $index	count=2
function_name	et le client pour ||| client	count=1
function_name	fins de ligne ressemblent ||| setlinecap	count=1
function_name	[function_name_1] demande courante ||| [function_name_2] [function_name_1]	count=1
function_name	définit le tag ||| picture	count=1
namespace	durée du script en ||| function	count=1
function_name	le dernier [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	fichier filename ||| bool $process_sections	count=1
arg_pair	une variable ||| string $key	count=2
function_name	récupère les commentaires depuis ||| get doc comment	count=1
arg_pair	fonction socket_create() ||| int $backlog	count=1
function_name	une requête odbc ||| odbc	count=1
function_name	d'attente s'interrompt si elle ||| poll time	count=1
function_name	de la couleur spécifiée ||| color value	count=1
arg_pair	au format ||| resource $connection	count=1
function_name	buffers d'affichage dans le ||| fflush	count=1
function_name	les éléments de la ||| all	count=1
function_name	qui avaient ||| newt form destroy	count=1
function_name	envoie [function_name] seule ||| [function_name]	count=1
arg_pair	montage d'un périphérique ||| string $pharpath	count=1
function	la classe [arg_pair_2] ||| [function_name_1] parents mixed $class [arg_pair_2]	count=1
function_name	les fichiers ||| construct	count=1
function_name	lot d'objets ||| size	count=1
function_name	envoyées [function_name] voir ||| [function_name] mppe	count=1
function_name	retourne un jeu de ||| db2 procedure	count=1
function_name	une pile et ||| array	count=1
function_name	invoque ||| invoke	count=1
arg_pair	de la ligne récupérée ||| int $row	count=1
function_name	sur le dictionnaire spécifié ||| crack	count=1
function_name	de modification du ||| ctime	count=1
return	en utilisant trois paramètres ||| bool	count=1
function_name	gestionnaire d'entité externe ||| set external entity ref handler	count=1
function_name	d'archives ||| entry	count=1
return	appels ||| boolean	count=1
function_name	l'objet com ||| com	count=1
function_name	le certificat rsa ||| rsacertificate	count=1
function_name	garde la boucle active ||| keepalive	count=1
function_name	test sur ||| mcrypt module self test	count=1
function_name	courante ||| imagesetbrush	count=1
function_name	image représentant la fusion ||| stereo image	count=1
function_name	basé sur une classe ||| class	count=1
arg_pair	nbytes octets de l'objet ||| int $bid int $nbytes	count=1
function_name	une requête préparée et ||| execute	count=1
function_name	sont sur ||| destroy	count=1
function_name	[function_name_1] le type ||| [function_name_2] [function_name_1]	count=9
arg_pair	dans le tableau values ||| array $values	count=1
function_name	paramètre patch et ||| xdiff file patch	count=1
function_name	résultat ou curseur oracle ||| oci	count=1
arg_pair	du tableau rows ||| array $rows string $delimiter	count=1
function_name	événement timer à utiliser ||| event timer	count=1
function_name	défini l'époque maximale ||| fann set cascade max	count=1
arg_pair	de l'argument ||| callable $callback	count=1
function_name	[function_name_1] [function_name_2] avec l'hôte host ||| [function_name_2] [function_name_1]	count=1
function_name	écrit les ||| write	count=1
function_name	stocker les ||| array iterator	count=1
function_name	file de messages identifiée ||| remove queue	count=1
namespace	de ||| gmagickdraw	count=1
arg_pair	le fichier fieldname ||| string $fieldname	count=1
function_name	définit le tag ||| set picture	count=1
return	retourne tous ||| string	count=1
function_name	[function_name_1] une trace ||| [function_name_1] query [function_name_2]	count=1
function_name	couleur spécifiée ||| color value	count=1
function_name	le cosinus hyperbolique pour ||| trader cosh	count=1
function_name	sinus hyperbolique ||| trader sinh	count=1
namespace	et que la ||| mongocursorinterface	count=1
function_name	dans une boite ||| b	count=1
function_name	libère toutes les ressources ||| base free	count=1
function_name	l'un ou plusieurs canaux ||| channel	count=1
arg_pair	queues ||| string $qmanagername	count=2
arg_pair	génère une chaîne de ||| string $uri	count=1
function_name	[function_name_1] image et ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name] sur la ||| [function_name]	count=2
function_name	fonction est similaire ||| element by id	count=1
function_name	elle prend plus de ||| set	count=1
function_name	d'archives spécifié ||| compressionmethod	count=1
function_name	identifiant de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	xml ||| xml	count=18
function_name	insensible à la ||| strcasecmp	count=1
function_name	fin de l'itération ||| iteration	count=1
function_name	le nom de l'organisation ||| name	count=1
return	sert à détruire un ||| bool	count=1
return	efface ||| bool	count=1
function_name	forme en incluant les ||| form	count=1
function_name	à ||| buffer	count=1
namespace	effectue une capture de ||| function	count=1
arg_pair	domaine courant pour une ||| string $msgid1	count=1
function_name	[function_name_1] buffer que ||| [function_name_2] [function_name_1]	count=2
function_name	définit les [function_name] ||| set allowed [function_name]	count=3
arg_pair	base de données database ||| string $database resource $link_identifier	count=1
arg_pair	rappel callback qui ||| mixed $pattern callable $callback	count=1
return	à partir ||| sdo_das_xml_document	count=1
function_name	mktime() excepté le ||| gmmktime	count=1
namespace	définit l'image de ||| gmagick	count=1
function_name	nombre de lignes affectées ||| affected rows	count=1
arg_pair	fonction de rappel callback ||| callable $callback mixed $data	count=5
namespace	du poll courant ||| zmqpoll	count=1
function_name	de la version de ||| version	count=1
function_name	fonctions de rappel pour ||| buffer set callback	count=1
function_name	protège les caractères ||| escape	count=2
arg_pair	variable peut ||| bool $syntax_only	count=1
function_name	protocole mysql ||| mysql get proto	count=1
function_name	l'endroit où les ||| fann set	count=1
arg_pair	avec gestionnaire de queues ||| array $connoptions	count=1
function_name	cas de succès ||| cubrid	count=2
namespace	par le descripteur de ||| function	count=1
function_name	défini le taux ||| rate	count=1
arg_pair	demande ||| resource $relation	count=1
function_name	auparavant [function_name] ||| [function_name]	count=1
function_name	ajoute une balise ||| bbcode add element	count=1
arg_pair	uri contenant ||| string $encoding	count=1
function_name	message d'erreur lié ||| ldap error	count=2
function_name	curl ||| curl	count=7
arg_pair	la première ||| mongodb $db string $prefix	count=1
function_name	requête préparée et ||| execute	count=1
arg_pair	jusqu'à la catégorie courante ||| string $category	count=1
arg_pair	la fonction cubrid_bind() ||| string $bind_value_type	count=1
function_name	lorsque l'itération ||| iteration	count=2
function_name	tangente pour chaque valeur ||| tan	count=1
return	place les ||| void	count=1
function_name	récupère la taille ||| mb strlen	count=2
namespace	données personnalisées dans ||| pharfileinfo	count=1
function_name	de balise donné ||| elements by	count=1
function_name	compile un ||| compile file	count=1
function_name	définit la [function_name] de ||| set text [function_name]	count=1
function_name	l'année ||| year	count=1
function_name	dictionnaire à utiliser pour ||| enchant broker set	count=1
function_name	paramètres de ||| string	count=1
function_name	symbole de jacobi de ||| gmp jacobi	count=1
return	retourne l'identifiant généré par ||| int	count=1
function	l'extension pour [arg_pair_2] ||| [function_name_1] int $imagetype [arg_pair_2]	count=2
function_name	de signal ||| signal	count=1
arg_pair	attribut de l'entrée dn ||| string $dn	count=1
function_name	données du fichier ||| mailparse uudecode	count=1
function_name	bbcode ||| bbcode set	count=1
function_name	intialise le support des ||| start color	count=1
namespace	secondes ||| function	count=1
function	le md5 [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	rappel si le ||| mixed $callback	count=1
function_name	la [function_name] ||| [function_name]	count=3
return	fichier au ||| bool	count=1
arg_pair	=?iso-8859-1?... est ||| string $field_name string $field_value	count=1
function_name	à l'échelle les ||| scale train	count=1
function_name	de traduction des ||| html translation table	count=1
function_name	retourne [function_name_2] ||| [function_name_1] attribute [function_name_2]	count=1
return	connexion avec ||| int	count=1
function_name	processus courant ||| setproctitle	count=1
arg_pair	des options d'analyseur ||| resource $bbcode_container	count=1
function_name	de l'entrée utilisateur ||| char	count=1
return	libeio ||| bool	count=1
arg_pair	les ||| array $array int $sort_flags	count=1
function_name	pour tous ||| set	count=2
return	dans une chaîne ||| string	count=1
arg_pair	empile les ||| mixed $value1	count=1
function_name	image représentant ||| stereo image	count=1
function_name	récupère [function_name_2] ||| [function_name_1] [function_name_2]	count=86
return	insère une ||| tokyotyrant	count=1
function_name	pour un dictionnaire ||| enchant broker	count=1
function_name	que les ||| eio event	count=1
arg_pair	false si une erreur ||| resource $result int $field_offset	count=1
return	cette méthode est ||| mixed	count=1
function_name	récupère [function_name_2] ||| [function_name_1] short [function_name_2]	count=2
return	que les paramètres passés ||| int	count=1
arg_pair	avec la cible ||| string $target	count=1
arg_pair	vérifier si ||| bool $nodns	count=1
function_name	exécution ultérieure avec pg_execute() ||| pg prepare	count=1
function_name	document pdf [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	prend plus de ||| eio set max	count=1
arg_pair	modifie l'entrée dn ||| resource $link_identifier string $dn	count=1
arg_pair	l'événement ||| mixed $arg	count=1
function_name	du ||| set include	count=1
function_name	la prochaine ||| cubrid next	count=1
function_name	dernier identifiant autogénéré ||| last insert	count=1
arg_pair	page dans le même ||| int $page	count=1
namespace	avec les ||| function	count=1
return	temporaire tous les ||| array	count=1
arg_pair	: la première ||| string $prefix	count=1
function_name	sélectionne une base de ||| db	count=1
arg_pair	fixe plusieurs options pour ||| array $options	count=1
arg_pair	crée un ||| string $src	count=1
function_name	la taille du blob ||| fbsql blob size	count=1
return	ressource à utiliser avec ||| resource	count=1
namespace	[namespace] log_reply lors ||| [namespace]	count=1
arg_pair	classe class ||| string $class	count=2
function_name	un moteur [function_name] visualisation ||| [function_name]	count=1
namespace	les champs du document ||| solrinputdocument	count=1
function_name	md5 de ||| md5	count=1
function_name	doit être utilisée ||| set	count=1
function_name	lit un caractère ||| read	count=1
function_name	tous ||| loop	count=1
namespace	de l' eventbuffer lui ||| eventbuffer	count=1
arg_pair	jeu de résultats sous ||| resource $stmt string $classname	count=1
function_name	à memcached::append() mais la ||| append by key	count=1
function_name	liste de noms d'attributs ||| list	count=1
function_name	geoip_country_code3_by_name() retourne les trois ||| country code3	count=1
function_name	pour tous les ||| set	count=2
function_name	[function_name_1] inspectée ||| [function_name_2] get [function_name_1]	count=5
arg_pair	défini ||| resource $ann	count=2
return	seul ||| void	count=2
function_name	de l'espace de couleurs ||| colorspace	count=1
namespace	incluant les ||| function	count=1
return	paramètres de l'objet ||| string	count=1
function_name	distant en ||| ssh2 sftp stat	count=1
function_name	la refermer ||| ret	count=1
function_name	fourni et extrait dans ||| uudecode all	count=1
function_name	avaient ||| form destroy	count=2
function_name	texte à la ||| text	count=1
function_name	nom d'hôte ||| host	count=1
arg_pair	résultats à ||| resource $result	count=1
function_name	la seconde libmcrypt 2.4.x ||| mcrypt cfb	count=1
arg_pair	spécifié grâce à gearmanclient::setstatuscallback() ||| string $context	count=1
arg_pair	première occurrence de ||| string $needle	count=1
arg_pair	et la seconde ||| mongodb $db	count=1
namespace	images ||| imagick	count=1
function_name	en incluant ||| newt form	count=1
function_name	[function_name_1] physique ||| [function_name_1] open [function_name_2]	count=1
return	allouée en ||| bool	count=1
function_name	à mssql_fetch_array() ||| mssql fetch	count=1
function_name	phar::startbuffering() ||| start buffering	count=1
function_name	xml ||| string	count=1
arg_pair	sert à ||| int $pos	count=1
function_name	minimale du client ||| min error	count=1
function_name	un test ||| mcrypt module self test	count=1
function_name	le tampon [function_name] associé avec ||| get [function_name]	count=1
arg_pair	le ||| int $read_write mixed $params	count=2
arg_pair	la fonction snmp2_get() ||| string $community	count=1
namespace	code javascript passé ||| v8js	count=1
return	image ||| gmagick	count=1
function_name	avaient été ajoutés à ||| newt form destroy	count=1
namespace	de ||| arrayobject	count=1
arg_pair	lit les ||| array $authns array $addtl	count=1
function_name	calcule le logarithme naturel ||| ln	count=1
arg_pair	deux ||| mongodb $db	count=1
function_name	d'image ||| imageblock	count=1
function_name	quoted ||| quoted	count=1
namespace	sur les caractères ||| function	count=1
function	[function_name_1] une ||| [function_name_1] post [arg_pair_2]	count=1
function_name	récupère les modificateurs ||| get modifiers	count=2
function_name	la valeur de ||| include	count=1
function_name	pour lire les données ||| send	count=1
function_name	[function_name_1] réponse http ||| [function_name_2] [function_name_1]	count=6
arg_pair	la fonction ||| int $year	count=2
function_name	plus proche de la ||| imagecolorclosestalpha	count=1
function_name	dans la portée ||| lookup namespace	count=1
function_name	placer un verrou ||| lock read	count=1
function_name	colonne d'offset ||| field table	count=2
function_name	le cache utilisateur ||| wincache ucache exists	count=1
return	dans un ||| void	count=1
arg_pair	brosse courante ||| resource $image	count=1
function_name	si elle prend ||| eio set max	count=1
function_name	une seule [function_name] ||| get nr [function_name]	count=2
function_name	itérable ||| iterateable	count=1
function_name	retourne le premier ||| first	count=1
arg_pair	que les structures de ||| resource $pdfdoc int $textflow	count=1
function_name	prochaine ||| next	count=6
arg_pair	valeur ||| resource $stmt	count=1
function_name	définition de la ||| pg meta data	count=1
arg_pair	[arg_pair_1] avec le ||| [arg_pair_2] [arg_pair_1]	count=8
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $mode [arg_pair_2]	count=3
return	[return] l'autorise) ||| [return]	count=3
function_name	ligne ||| fetch	count=19
function_name	du fichier ||| get	count=2
function_name	si elle prend plus ||| time	count=1
function_name	include_path ||| include path	count=2
function_name	de l' ||| add	count=1
arg_pair	clé key existe ||| string $key	count=1
function_name	de rappel pour ||| callback handler	count=1
function_name	absent qui est égal ||| empty	count=1
arg_pair	police truetype fontfile ||| string $fontfile	count=1
function_name	de genre ||| genre	count=1
function_name	de données rrd sous ||| rrd fetch	count=1
function	[function_name_1] spécifié par ||| [arg_pair_2] [function_name_1]	count=4
namespace	si ||| tidynode	count=1
function_name	dans une instance glo ||| glo	count=1
function_name	qui contient les paires ||| pspell config repl	count=1
function_name	champ ||| get res field	count=1
function_name	ajoute ||| add record	count=2
function_name	prochain élément [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	charge la police truetype ||| load ttc	count=1
function_name	termine une [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	des ||| form destroy	count=2
function_name	la requête ||| query field	count=1
arg_pair	une et retourne le ||| string $error	count=1
function_name	des ||| set metadata	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] field len [arg_pair_2]	count=19
function	statut [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=7
function_name	la méthode [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	pour convertir une ||| convert to data	count=1
arg_pair	par le paramètre link ||| resource $link	count=1
function_name	file d'attente s'interrompt si ||| eio set max poll	count=1
function_name	logarithme base-10 ||| trader log10	count=1
function_name	von einer mime kopfzeile ||| iconv mime	count=1
return	ne peuvent ||| void	count=1
function_name	connexion en cas ||| yaz connect	count=1
return	en crée une nouvelle ||| bool	count=1
arg_pair	modifie les attributs ||| array $options	count=1
function_name	document xml depuis ||| xml	count=1
function_name	sera démarré ||| add launchlink	count=1
function_name	conteneur de ||| set	count=1
function_name	utilisée sur le ||| entry compressionmethod	count=1
function_name	extension à ||| extension	count=1
return	forme d'un entier ||| int	count=1
function_name	[function_name_1] un objet ||| [function_name_2] [function_name_1]	count=1
return	effectue une capture ||| resource	count=1
namespace	définie par son ||| ziparchive	count=2
arg_pair	première occurrence de ||| string $haystack mixed $needle	count=1
arg_pair	blob_handle créé avec ibase_blob_create() ||| resource $blob_handle	count=1
function	[function_name_1] type d'éléments ||| [function_name_1] [arg_pair_2]	count=1
function_name	que ||| chmod	count=1
return	normalement en ||| int	count=1
namespace	à la fonction ||| function	count=3
function_name	à datetime::getlasterrors() ||| get last errors	count=1
function_name	requête appelée dans ||| mysqli stmt	count=1
arg_pair	subject ||| string $subject	count=1
return	des différences et sur ||| string	count=1
function_name	connexion à la session ||| session	count=1
namespace	la ||| ev	count=3
arg_pair	vers un ||| resource $session	count=1
function_name	police ||| pdf load font	count=2
function_name	local au système ||| local	count=1
function_name	fourni par le paramètre ||| add buffer	count=1
arg_pair	nth -ème ||| gmp $a int $nth	count=1
arg_pair	réseau ||| resource $ann	count=2
arg_pair	la [arg_pair] ||| [arg_pair]	count=2
namespace	expression rationnelle ||| mongoregex	count=1
function_name	numéro de la version ||| version	count=1
namespace	et ||| function	count=3
namespace	un certain délai sur ||| mongocursor	count=1
function_name	s'interrompt ||| time	count=1
function_name	données du champ ||| field	count=1
function_name	été ||| newt form destroy	count=2
arg_pair	entraîne une machine vectorielle ||| array $problem array $weights	count=1
return	ev::run() est sortie normalement ||| int	count=1
function_name	défini l'endroit où ||| set	count=1
arg_pair	et la sauvegarde ||| resource $conn_identifier	count=1
function_name	délai maximum d'attente peut ||| timeout	count=1
function_name	ingres ||| ingres	count=8
function_name	la rfc2822 ||| adrlist	count=1
function_name	est ||| mysql	count=1
namespace	base de données retourne ||| mongocursor	count=1
namespace	tampon ||| function	count=1
function_name	à surveiller avec ||| set	count=1
function_name	est similaire ||| element by	count=1
arg_pair	fixe plusieurs options ||| array $options	count=1
function_name	par ||| crack closedict	count=2
function_name	d'attente s'interrompt si ||| poll time	count=1
return	à la fonction ||| int	count=1
function_name	instance ||| object	count=1
function_name	à détruire ||| delete	count=1
arg_pair	user ||| resource $link_identifier string $user	count=1
function_name	centrée sur [function_name] ||| [function_name]	count=1
function_name	du script en cours ||| set include	count=1
function_name	défini l'uri ||| base uri	count=1
arg_pair	la liste des filtres ||| array $values	count=1
arg_pair	mktime() excepté ||| int $hour	count=1
function_name	fonction posix ||| posix	count=1
arg_pair	se joignent [arg_pair] petit ||| [arg_pair]	count=1
function_name	de la table courante ||| fbsql table	count=1
function_name	retourne ||| get children	count=2
function_name	sortie puis l'efface ||| ob get clean	count=1
namespace	utilisée ||| mongolog	count=1
function_name	nouveau filtre entier à ||| set filter	count=2
arg_pair	procédure stockée sur un ||| resource $stmt bool $skip_results	count=1
arg_pair	dans ||| resource $result	count=1
function_name	signal indiqué par le ||| signal	count=1
function_name	peut être utilisé ||| maxdb debug	count=1
arg_pair	sur les ||| resource $ann	count=1
return	et retourne le ||| string	count=1
function_name	utilisé pour ||| debug	count=1
arg_pair	avec le ||| resource $connection	count=2
function_name	donné ||| get element by id	count=2
arg_pair	la structure qui héberge ||| resource $queue	count=1
arg_pair	un fichier ||| resource $image string $filename	count=1
arg_pair	d'un fichier faisant que ||| int $length int $pri	count=1
function_name	toutes les lignes de ||| rzap	count=1
function_name	composants qui avaient été ||| destroy	count=1
return	supprime ||| bool	count=2
function_name	un constructeur ||| constructor	count=1
function_name	retourne l'identifiant ||| get thread id	count=1
arg_pair	structure qui héberge la ||| resource $queue array $data	count=1
return	tant ||| bool	count=1
arg_pair	du jeu de résultats ||| resource $stmt string $classname	count=1
namespace	affiche toute ||| imagick	count=1
function_name	les métadonnées et la ||| construct	count=1
namespace	une ||| mongocursor	count=1
function_name	du serveur racine ||| gupnp root device stop	count=1
function_name	[function_name_1] longueur ||| [function_name_2] [function_name_1]	count=2
function_name	récupère l'objet de ||| get	count=1
function_name	les [function_name] de ||| get [function_name]	count=2
function_name	premier attribut de l'entrée ||| first attribute	count=1
function_name	la réponse brute du ||| raw response	count=1
function_name	de scan ||| yaz scan result	count=1
function_name	image sans ||| image	count=1
function_name	la ligne précédente de ||| prev	count=1
function_name	argument ||| db2 escape string	count=2
namespace	à 4 mb ||| mongocursor	count=1
function_name	de statut spécifié ||| task status	count=1
namespace	la durée du ||| function	count=1
function	[function_name_1] de size ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	[arg_pair_1] une et ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	stockées dans [function_name] utilisateur ||| [function_name] ucache	count=1
function	l'extension pour [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	méthode [function_name] ||| [function_name]	count=3
function_name	similaires ||| mlt	count=2
function_name	les composants qui avaient ||| newt	count=1
function_name	sqlite ||| sqlite	count=3
arg_pair	de la table tablename ||| string $database string $tablename	count=1
function_name	l'élément courant ||| current	count=2
arg_pair	ou une fonction définie ||| string $name	count=1
arg_pair	le fait qu'elle ignore ||| string $pattern string $string	count=1
function_name	le nom ||| name	count=32
function_name	ignore la ||| eregi	count=1
arg_pair	les paramètres passés ||| int $minute	count=1
arg_pair	le paramètre object_id ||| string $timeout	count=1
function_name	donnée est de ||| is	count=3
namespace	de la [namespace] une interface ||| [namespace]	count=1
namespace	fourni par le paramètre ||| eventbuffer	count=1
function_name	définies dans ||| apd	count=1
function_name	tailles ||| supported key sizes	count=3
function_name	lit le [function_name_2] ||| [function_name_2] pkcs12 [function_name_1]	count=1
function_name	attribut ||| set attribute	count=2
function_name	version mineure de pdflib ||| minorversion	count=1
namespace	passée ||| function	count=1
function_name	place des antislashs ||| db2 escape	count=1
function_name	par le ||| add	count=1
function_name	par défaut ||| rewind	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] seek [arg_pair_2]	count=8
function_name	retourne la ||| get mlt	count=1
function_name	needle dans haystack ||| mb strstr	count=1
function_name	l'intervalle pour ||| range	count=1
function_name	un lot ||| size	count=1
function_name	identifiant unique pour ||| spl object hash	count=1
namespace	résultants et les ||| mongocommandcursor	count=1
function_name	à l'aide de deux ||| construct	count=1
function_name	survenue) depuis le ||| facility	count=1
function_name	ou désactive les alertes ||| warnings	count=1
function_name	[function_name_1] l'adresse ||| [function_name_1] [function_name_2]	count=1
arg_pair	: ||| mongodb $db string $prefix	count=1
function_name	efface [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	qui sera démarré lors ||| launchlink	count=1
arg_pair	spécifiés par msglist ||| resource $imap_stream string $msglist	count=1
arg_pair	résultats listant les tables ||| string $table_name	count=1
function_name	la prochaine requête ||| cubrid next	count=1
function	repère la [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	la page et ||| page	count=1
function_name	un ||| get element	count=2
function_name	à surveiller ||| module	count=1
function_name	numérateur du taux de ||| numerator	count=1
function_name	et d'équilibrage de charge ||| ms	count=1
function_name	ibase préparée ||| ibase execute	count=2
function_name	exporte ||| export	count=6
function_name	commencer ||| lower	count=1
function_name	cette fonction libère les ||| newt	count=1
return	pour définir les ||| void	count=1
function_name	returns ||| get	count=1
function_name	attribut dans un document ||| update	count=1
return	données personnalisées dans un ||| void	count=1
function_name	dans la session courante ||| enchant dict is in session	count=1
function_name	s'interrompt si ||| poll	count=1
namespace	eventutil est ||| eventutil	count=1
function_name	[function_name_1] connexion ||| [function_name_1] [function_name_2]	count=2
return	l'image à utiliser en ||| bool	count=1
arg_pair	la seconde ||| mongodb $db string $prefix	count=1
function_name	à pclose() ||| proc	count=1
function_name	objet de grande taille ||| lo export	count=1
return	sont ||| void	count=1
function_name	dimensions contenant la largeur ||| geometry	count=1
function_name	de la prochaine ||| next result	count=1
arg_pair	ses voisins immédiats ||| int $x	count=2
function_name	d'une image avec du ||| image	count=1
function_name	pour initialiser le phar ||| phar	count=1
function_name	le nom d'hôte dns ||| connect host	count=1
return	les classes de ||| string	count=1
namespace	est similaire à la ||| domdocument	count=1
function_name	l'objet slob ||| slob	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image matte [function_name_2]	count=1
function_name	retourne la ||| zip entry compressionmethod	count=1
function	[function_name_1] le prompt ||| [function_name_1] callback handler install [arg_pair_2]	count=1
arg_pair	crée un document ||| resource $fdf_document	count=1
function_name	passé par ||| passed by	count=1
arg_pair	num entrées toutes de ||| int $num	count=1
arg_pair	que les paramètres passés ||| int $hour	count=1
function_name	pour un dictionnaire à ||| enchant broker	count=1
function	[function_name_1] target avec ||| [arg_pair_2] [function_name_1]	count=1
function_name	la plus proche de ||| imagecolorclosestalpha	count=1
arg_pair	valeur value1 et la ||| mixed $value1	count=1
arg_pair	exécute l'expression xpath expression ||| domnode $contextnode	count=1
function_name	[function_name_1] version courante ||| [function_name_1] [function_name_2]	count=3
return	requête en ||| bool	count=1
function_name	julien pour une ||| cal to jd	count=1
function_name	déchiffre ||| decrypt	count=2
arg_pair	du clic sur ||| resource $psdoc float $llx	count=1
function_name	[function_name_1] couleurs de ||| [function_name_2] image [function_name_1]	count=4
function_name	pile ||| array push	count=2
arg_pair	le dessin des lignes ||| resource $image	count=1
function_name	réception d'une notification ||| gupnp service proxy add notify	count=1
function_name	élément avec ||| element by	count=1
function_name	le nombre ||| ifx num fields	count=1
arg_pair	serveur avec les ||| resource $id	count=1
arg_pair	le fait ||| string $pattern string $string	count=1
namespace	un ||| function	count=4
return	que la ||| bool	count=1
arg_pair	distants rpc enregistrés ||| callable $error_callback	count=1
function_name	défini l'endroit où les ||| fann set error log	count=1
arg_pair	la méthode yar_concurrent_client::loop() ||| array $parameters	count=1
namespace	de tous les ||| splfileobject	count=1
function_name	un fichier temporaire ||| mailparse	count=1
namespace	si le ||| tidynode	count=1
function_name	dans la bibliothèque ucd ||| quick print	count=1
function	linejoin à [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
return	les données du tampon ||| bool	count=1
function_name	[function_name_1] ligne courant ||| [function_name_2] [function_name_1]	count=1
function_name	été envoyé ||| message	count=1
arg_pair	envoi ||| callable $callback	count=1
namespace	la casse ||| function	count=1
rest	sur [function_2] ||| [function_2] [return_1]	count=3
function_name	surveiller avec les ||| module	count=1
function_name	fichiers distant en suivant ||| ssh2 sftp stat	count=1
function_name	de requête ||| filter query	count=1
function_name	à la fonction ||| field type	count=2
function_name	> récupère ||| get	count=1
function_name	le facteur quickprop mu ||| set quickprop mu	count=1
return	document en ||| bool	count=1
arg_pair	les ||| int $second	count=1
arg_pair	excepté le fait ||| int $hour int $minute	count=1
function_name	la forme et tous ||| form	count=1
function_name	jeu de réplication ||| get hosts	count=1
function_name	[function_name_1] protocole mysql ||| [function_name_2] [function_name_1]	count=2
arg_pair	timestamp ||| int $timestamp int $format	count=1
arg_pair	haystack et retourne ||| bool $part	count=1
arg_pair	données cubrid et ||| resource $conn_identifier resource $lob_identifier	count=1
function_name	pour diriger les ||| set multi by	count=1
function_name	le logarithme naturel pour ||| trader ln	count=1
namespace	est remplacée par ||| function	count=1
arg_pair	et sur le document ||| string $src	count=1
arg_pair	clé key ||| string $key mixed $value	count=1
arg_pair	subject qui ne contient ||| string $subject	count=1
arg_pair	l'envoyer au ||| string $source_string	count=1
arg_pair	sql pour l'activation ||| int $condition_type mixed $condition	count=1
function_name	de la page sous ||| image page	count=1
function_name	tous ||| to	count=1
function_name	terme sur lequel ||| terms	count=1
arg_pair	fait que les ||| int $second int $month	count=1
function_name	d'autres fonctions pspell ||| pspell	count=1
function_name	chaîne ||| db2	count=1
arg_pair	query_data ||| mixed $query_data	count=1
arg_pair	change ||| mixed $target mixed $fill	count=1
function_name	fonction openssl_get_cert_locations() [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	encodés qui ||| mailparse uudecode	count=1
function_name	sur des ||| newt form destroy	count=1
arg_pair	correspondant à un ||| string $country_code	count=1
arg_pair	les ||| resource $link	count=1
function_name	[function_name_1] timestamp ||| [function_name_1] [function_name_2]	count=1
function_name	paramètre patch et enregistre ||| patch	count=1
function_name	[function_name_1] d'apparition des ||| [function_name_2] [function_name_1]	count=6
function_name	fonction peut ||| set module	count=1
namespace	pdostatement ||| pdostatement	count=1
arg_pair	nth -ème racine de ||| gmp $a int $nth	count=1
function	exporte [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	à un jeu ||| get	count=1
arg_pair	flags ||| string $path int $flags	count=1
return	toutes les fonctions ||| array	count=1
arg_pair	les données [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	récupère la largeur ||| get width	count=7
return	verticale [return] créant ||| [return]	count=1
namespace	la fonction closedir() ||| directory	count=1
function_name	depuis une instance glo ||| glo	count=1
function_name	utilisé pour changer les ||| set	count=1
function_name	du cipher courant ||| cipher	count=1
arg_pair	deux collections : ||| string $prefix	count=1
namespace	document ||| solrinputdocument	count=4
function_name	cette fonction libère ||| newt form destroy	count=1
function_name	dernière fonction d'internationalisation appelée ||| intl	count=1
function_name	md5 ||| md5 file	count=2
arg_pair	de ||| string $pattern	count=1
return	position courante ||| bool	count=1
namespace	requêtes http ||| oauth	count=1
function_name	définit l'apparence ||| set	count=5
function_name	à memcached::append() ||| append by key	count=1
namespace	position courant interne est ||| solrdocument	count=1
arg_pair	par address ||| string $address	count=1
function_name	à la position courante ||| ps	count=1
return	une propagation de retour ||| resource	count=1
function_name	un fichier ||| from string	count=1
function_name	en parallèle d'autres ||| task	count=1
function_name	de [function_name] utilisateur ||| set [function_name]	count=1
function_name	de documents ||| count	count=2
arg_pair	la cible ||| resource $context string $target	count=1
function_name	que les paramètres passés ||| gmmktime	count=1
return	créer un ||| resource	count=1
namespace	d'une archive tar/zip ||| phardata	count=1
namespace	méthode ||| gearmanclient	count=1
function_name	du texte de ||| text	count=1
arg_pair	de données du jeu ||| resource $stmt	count=1
function_name	d'une chaîne de caractères ||| string	count=1
namespace	collection oracle ||| oci-collection	count=1
function_name	identifiant ||| set id	count=1
function_name	cache [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	devant les ||| string	count=1
namespace	la version courante ||| gmagick	count=1
function_name	elle prend ||| set max poll	count=1
arg_pair	pas attrappées par des ||| string $cb	count=1
function_name	les lignes de ||| dbplus	count=1
namespace	le ||| splfixedarray	count=1
return	et vide les ||| string	count=1
function_name	tests sur ||| array uintersect assoc	count=1
function_name	des ||| db2 escape string	count=2
function_name	de pixel ||| image	count=1
return	les réponses ||| bool	count=1
arg_pair	excepté ||| int $day	count=1
function_name	pour lier des données ||| lob2 bind	count=1
arg_pair	par l' oid fourni ||| string $oid	count=1
arg_pair	chaîne data ||| string $data	count=1
arg_pair	buf via ||| resource $socket string $buf	count=1
function_name	la fonction glob() de ||| glob	count=1
namespace	reprennent la [namespace] ||| [namespace]	count=1
function_name	détruire un bloc ||| shmop	count=1
function_name	fonctionne ||| proc	count=1
function_name	fonction d'activation pour ||| activation function	count=3
return	à 4 mb ||| bool	count=1
function_name	de ||| delete	count=1
function_name	fuseau horaire correspondant ||| geoip time zone	count=1
function_name	version de la ||| version	count=3
arg_pair	position offset ||| resource $context int $offset	count=1
return	appelé lors ||| void	count=1
arg_pair	associatif [arg_pair] ||| [arg_pair]	count=3
function_name	de [function_name] associé avec ||| get [function_name]	count=1
arg_pair	tant qu'options ||| string $tag	count=1
arg_pair	la classe yaf_route_static comme ||| yaf_route_abstract $route	count=1
function_name	crée et retourne un ||| create	count=1
function_name	slob ||| seek slob	count=2
function_name	courante ||| ps show	count=2
function_name	[function_name_1] message d'alerte ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] qui ||| [function_name_1] [function_name_2]	count=4
function_name	à une nouvelle ligne ||| new line	count=1
return	un ||| void	count=4
function_name	un ||| get element by	count=2
function_name	utf-8 ||| utf8	count=1
function_name	sélectionne ||| select	count=1
function_name	données référencée ||| header	count=1
function_name	maximale d'une ligne ||| set max line len	count=1
return	pour retourner ||| int	count=1
namespace	la première contient ||| mongogridfs	count=1
function_name	transaction en cours ||| pg transaction	count=3
arg_pair	number ||| float $number	count=1
function_name	la base ||| dbase	count=1
function_name	[function_name_1] la racine ||| [function_name_1] [function_name_2]	count=1
function_name	retourne les informations de ||| eio stat	count=1
arg_pair	table table_name ||| resource $connection string $table_name	count=4
return	base de données en ||| bool	count=1
namespace	à la ||| directory	count=2
function_name	la ||| set max	count=1
function_name	la ||| imagesetbrush	count=1
function_name	la dernière erreur ||| error	count=5
namespace	mettre ||| quickhashstringinthash	count=1
arg_pair	de seuil de ||| resource $ann float $sarprop_step_error_threshold_factor	count=1
function_name	combine [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	afficher les [function_name_2] ||| [function_name_1] debug [function_name_2]	count=2
function_name	de l'api ssl voir ||| ssl	count=1
namespace	eventbuffer lui permettant ainsi ||| eventbuffer	count=1
arg_pair	la transparence ||| float $alpha float $fuzz	count=1
namespace	canaux d'un fichier mpeg ||| ktaglib_mpeg_audioproperties	count=1
namespace	fichier spécifié par le ||| function	count=1
function_name	numéro de ||| set	count=1
function_name	ce ||| router	count=1
arg_pair	espace de ||| string $qualifiedname	count=1
function_name	du jeu de résultats ||| db2 field	count=2
arg_pair	contexte log_cmd_delete lors de ||| array $server array $writeoptions	count=1
namespace	durée du ||| function	count=1
arg_pair	d'un élément existant ||| string $key	count=1
function_name	les informations ||| rrd	count=1
function_name	les informations de ||| eio stat	count=1
namespace	un élément avec un ||| domdocument	count=1
function_name	d'entrée ||| input	count=4
function_name	[function_name_1] la page ||| [function_name_1] current [function_name_2]	count=1
function_name	fait de définir à ||| set	count=1
function_name	le ||| zip entry	count=1
function_name	récupère le délai d'expiration ||| get	count=1
function	lie [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
namespace	requête soap appelle les ||| soapserver	count=1
arg_pair	key dans le ||| mixed $key	count=1
namespace	l'itérateur interne ||| parentiterator	count=1
function_name	fonction libère ||| cubrid free result	count=2
function_name	les données du ||| uudecode	count=1
function_name	verrou sur la ||| dbplus getlock	count=1
function_name	terme à partir duquel ||| bound	count=1
arg_pair	de deux collections : ||| mongodb $db	count=1
return	se déplace vers le ||| void	count=1
function_name	create() ||| add types	count=1
function_name	qui avaient ||| destroy	count=1
function_name	groupe d'appartenance du ||| group	count=1
function_name	ressources persistantes dans un ||| apd dump persistent resources	count=1
arg_pair	la page cookie ... ||| resource $link int $pagesize	count=1
arg_pair	position de ||| string $charset	count=1
function_name	[function_name] longueur ||| [function_name] mlt min word	count=1
function_name	[function_name_1] symbolique correspondant ||| [function_name_2] [function_name_1] int $token	count=1
function_name	protège une ||| escape	count=1
function_name	au sein ||| is	count=1
function_name	pour un champ facet ||| facet	count=1
return	une capture de ||| resource	count=1
arg_pair	[arg_pair_1] vers un ||| [arg_pair_2] [arg_pair_1]	count=8
function_name	convertir ||| convert to data	count=2
arg_pair	crée un fichier spécial ||| string $pathname int $mode	count=1
function_name	dans ||| metadata	count=1
function_name	définie dans un espace ||| in	count=1
function_name	[function_name_1] d'écriture ||| [function_name_2] [function_name_1]	count=2
arg_pair	un tableau de ||| array $except	count=2
namespace	définie avec la ||| gearmanclient	count=1
function_name	utf-7 ||| imap utf7	count=1
function_name	transactions xa ||| ms xa	count=1
function_name	token d'accès un secret ||| token	count=1
function_name	un jeu de ||| get	count=1
namespace	retourne la ||| function	count=1
function_name	de forcer ||| touch	count=1
arg_pair	évalue une expression ||| string $expression int $channel	count=1
function_name	à l'extérieur de ||| runkit import	count=1
function_name	les messages de débogage ||| debug	count=1
return	tous ||| array	count=2
namespace	chaînes ||| arrayobject	count=1
function_name	text sont des ||| ctype	count=2
function_name	de chargement donc ||| set	count=1
function_name	dernière opération db++ ||| dbplus errno	count=2
function_name	d'attente ||| eio set	count=1
function	de autocommit [arg_pair_2] ||| [function_name_1] resource $connection [arg_pair_2]	count=1
return	termes ||| int	count=1
namespace	lob oracle en fonction ||| oci-lob	count=1
function_name	traduction des entités ||| html translation table	count=1
return	une chaîne et ||| string	count=1
namespace	fois où la méthode ||| ev	count=2
function_name	d'erreurs libxml ||| libxml	count=1
function_name	la page [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	d'analyseur ||| int $flags	count=1
function_name	efface ||| delete by ids	count=2
function_name	[function_name_1] de mysql ||| [function_name_2] [function_name_1]	count=6
function_name	haystack allant de la ||| strstr	count=1
function	[function_name_1] prompt ||| [function_name_1] [arg_pair_2]	count=3
function_name	connecte ||| ps closepath stroke	count=1
function_name	résultat [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	de version de la ||| rrd version	count=1
arg_pair	à la fonction ||| int $month	count=1
function_name	analyseur à ||| set arg parser	count=1
function_name	par défaut $this ||| rewind	count=1
function_name	données du ||| mailparse	count=1
namespace	de fois où ||| ev	count=2
function_name	une seule image représentant ||| stereo image	count=1
function_name	printable créée suivant ||| printable encode	count=1
function_name	maximale de [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	avec un ||| by	count=1
arg_pair	casse des caractères ||| string $pattern	count=1
namespace	un lot d'objets ||| mongocommandcursor	count=1
return	ajoutés à la forme ||| void	count=1
function_name	serveur racine ||| gupnp root	count=1
return	toutes ||| string	count=1
function_name	vérifie si un ||| is	count=1
function_name	gabarit ||| template ext	count=2
function_name	données frontbase ||| fbsql	count=1
namespace	lorsqu'un agent ||| gearmanclient	count=1
function_name	[function_name_1] avec la ||| [function_name_2] [function_name_1]	count=6
arg_pair	connexion à l'historique système ||| int $option	count=1
function_name	document pdf ||| pdf get	count=1
function_name	cette fonction est identique ||| eregi	count=1
return	un curseur typiquement ||| mongocommandcursor	count=1
function_name	lot d'objets résultants et ||| batch	count=1
return	couleur ||| int	count=1
namespace	un rectangle [namespace] ||| [namespace]	count=1
arg_pair	le prompt et retourne ||| callable $callback	count=1
function_name	les variables var .. ||| array push	count=1
function_name	déplace le pointeur interne ||| data seek	count=1
function_name	d'attribut d'un objet ||| object	count=1
namespace	l'objet observateur evfork ||| evfork	count=1
function_name	une seule ligne ||| fetch	count=1
function_name	fonction est ||| element by id	count=1
return	des antislashs devant ||| string	count=1
function_name	du tampon ||| get	count=1
return	la version courante de ||| string	count=1
namespace	eventbuffer lui permettant ||| eventbuffer	count=1
function	[function_name_1] imagetype_xxx fournie ||| [arg_pair_2] [function_name_1]	count=1
namespace	surveiller ||| mongolog	count=1
function_name	elle prend plus ||| set max poll	count=1
namespace	objets splsubject ||| splobserver	count=1
function_name	dimensions de la police ||| font metrics	count=1
function_name	la file d'attente s'interrompt ||| eio set max poll time	count=1
function_name	un token ||| get access token	count=1
function_name	à la révision ||| svn	count=3
namespace	le ||| gmagickdraw	count=1
function_name	les caractères brutes ||| raw	count=2
function_name	le code ||| code	count=1
namespace	cette fonction ||| function	count=13
function_name	en incluant les ||| form	count=1
function_name	entières et effectue alors ||| idiv	count=1
function_name	récupère ||| device info get	count=1
function_name	supprime toutes les lignes ||| rzap	count=1
return	du ||| array	count=1
namespace	de la ||| gearmantask	count=2
arg_pair	avec les données ||| callable $callback mixed $data	count=1
return	le pointeur ||| void	count=1
return	que ceux de lecture ||| void	count=1
arg_pair	contenu dans un ||| int $oid	count=1
arg_pair	détruit le gestionnaire mutex ||| boolean $destroy	count=1
function_name	récupère ||| get method	count=2
function_name	fonction d'activation ||| fann set activation	count=3
namespace	pour la première fois) ||| recursivetreeiterator	count=1
namespace	la version courante de ||| gmagick	count=1
function_name	de inode du fichier ||| get inode	count=1
return	toutes les classes ||| string	count=1
function_name	les paramètres de ||| to	count=1
namespace	base pour toutes les ||| xmldiff\base	count=1
function_name	des champs [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	actuellement pointée [namespace] ||| [namespace]	count=3
function_name	schéma depuis la base ||| schema	count=1
arg_pair	l'image image ||| resource $image string $filename	count=1
function_name	la requête ||| mlt query field	count=1
function_name	token d'accès ||| access token	count=1
arg_pair	lignes par brush ||| resource $brush	count=1
function_name	noeud est ||| is	count=1
function_name	maximale des [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	travaux ||| gearmanworker	count=2
function_name	tampon fourni par le ||| add buffer	count=1
function_name	la taille du clob ||| fbsql clob size	count=1
namespace	appliqué à différents ||| imagick	count=1
function_name	[function_name_1] à l'identifiant ||| [function_name_2] [function_name_1]	count=1
arg_pair	terminé, ||| int $status int $options	count=1
return	les paramètres passés ||| int	count=1
function_name	à pclose() ||| close	count=1
arg_pair	analyse subject pour trouver ||| mixed $subject int $limit	count=1
function_name	décrivant [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	premier caractère par ||| function	count=1
function_name	de ligne courant ||| current line	count=2
function_name	remplace les données ||| dbase replace	count=1
function_name	[function_name_1] de jokers ||| [function_name_2] [function_name_1]	count=2
function_name	être utilisée ||| set metadata	count=1
arg_pair	utilisant le gestionnaire font ||| int $font	count=1
function_name	attribut ||| attribute	count=6
function_name	types or selon la ||| variant or	count=1
namespace	si un noeud ||| domnode	count=1
namespace	la couleur ||| harupage	count=1
function_name	la temporisation ||| ob end flush	count=1
arg_pair	utilisée pour exécuter une ||| string $sql	count=1
arg_pair	l'image image [arg_pair] ||| [arg_pair]	count=3
arg_pair	tous les ||| callable $callback	count=1
function	passe [arg_pair_2] ||| bool set [function_name_1] [arg_pair_2]	count=2
function_name	textes qui ||| mb ereg	count=1
function_name	la hauteur de ||| imagesy	count=1
namespace	observateur evfork ||| evfork	count=1
arg_pair	dans la chaîne donnée ||| int $flags	count=1
function_name	crée une ||| pdf create	count=1
function_name	l'api ssl voir la ||| ssl	count=1
function_name	géométrie ||| page	count=3
function_name	[function_name_1] l'octet ||| [function_name_1] current [function_name_2]	count=1
function_name	jointure de lignes ||| line join	count=1
arg_pair	son identifiant packet_id ||| mixed $var_name	count=1
function_name	utilisée pour définir les ||| set	count=1
function_name	résultat décrivant la ||| fbsql list tables	count=2
arg_pair	éléments via items ||| array $items	count=1
arg_pair	de données ||| string $data	count=1
arg_pair	la chaîne str après ||| string $str string $character_mask	count=2
function_name	lit ||| fdf get status	count=1
arg_pair	unique distinguished name qui ||| array $configargs array $extraattribs	count=1
function	une [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	définit [function_name_2] ||| [function_name_1] cache min [function_name_2]	count=1
function_name	serveur virtuel sous iis ||| iis get server	count=1
arg_pair	message d'erreur ||| int $message_type	count=1
function_name	supprime [function_name_2] ||| [function_name_1] [function_name_2] except splobjectstorage $storage	count=2
function_name	chaîne de caractères ||| load	count=1
function_name	à la fonction ||| get element by	count=1
return	compris si ||| bool	count=1
function_name	jeu de résultats ||| db2 field	count=1
namespace	au ||| pharfileinfo	count=1
namespace	typiquement ||| mongocommandcursor	count=1
function_name	cette fonction crée un ||| create element	count=1
function_name	marque les messages ||| imap delete	count=1
arg_pair	filename à la date ||| string $filename	count=1
arg_pair	l'un d'entre eux change ||| array $write	count=1
function_name	des caractères lors ||| eregi	count=1
namespace	la ||| harupage	count=5
arg_pair	la recherche sur les ||| string $string	count=1
function_name	sauvegarde la base de ||| save	count=1
arg_pair	utilisant des valeurs rvg ||| int $bmin int $bmax	count=1
function_name	temporaire ||| mailparse uudecode all	count=2
namespace	de configuration include_path ||| function	count=1
function_name	timer ||| set timer	count=1
arg_pair	à la position offset ||| int $pri	count=1
function_name	gris pour toutes ||| setgray	count=1
function_name	de la demande ||| request	count=1
function_name	du fichier ||| mailparse	count=1
arg_pair	crée un ||| string $pathname int $mode	count=1
arg_pair	ainsi que les structures ||| resource $pdfdoc int $textflow	count=1
function_name	dans le fichier ||| openssl csr export to file	count=1
arg_pair	et déplace le pointeur ||| int $type	count=1
function	[function_name_1] parser ||| [function_name_1] set default handler [arg_pair_2]	count=1
function_name	à l'extérieur de fonction ||| runkit import	count=1
function_name	fourni par le paramètre ||| add	count=1
function_name	document fdf ||| fdf	count=3
arg_pair	utilisées par le ||| string $pattern int $flags	count=1
function_name	étire la saturation ||| linear stretch	count=1
function_name	rappel timestampnoncehandler [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	dossier d'archives ||| entry compressionmethod	count=1
function_name	pour stocker des données ||| set metadata	count=1
function_name	à ||| soap	count=1
return	attribut ||| int	count=1
function_name	construit ||| load	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=3316
function_name	la dernière ||| last	count=5
function_name	cette fonction est similaire ||| element by	count=1
return	la fin ||| bool	count=2
function_name	[function_name_1] la base ||| [function_name_2] [function_name_1]	count=2
function_name	du segment du flux ||| stream set chunk	count=1
function_name	construit ||| construct	count=5
function_name	dossier d'archives spécifié par ||| entry	count=1
function_name	s'interrompt si elle ||| poll	count=1
function_name	content ||| content	count=1
function_name	retourne le nombre ||| udm get	count=1
arg_pair	liste des filtres courante ||| array $values	count=1
function_name	[function_name] vide ||| get dns error [function_name]	count=3
function_name	[function_name_1] d'erreur ||| [function_name_1] last [function_name_2]	count=1
arg_pair	entraîne une machine vectorielle ||| array $problem	count=1
namespace	dans l'extension ||| reflectionextension	count=1
function_name	[function_name_1] timer ||| [function_name_1] [function_name_2]	count=1
function_name	au ||| result seek	count=1
namespace	ou désactive le ||| function	count=1
function_name	la levée ||| rise	count=1
function_name	attribut ||| update attributes	count=2
function_name	l'espace de ||| colorspace	count=2
function_name	retourne ||| ifx get	count=1
arg_pair	la première occurrence ||| string $haystack	count=5
function_name	le cosinue ||| trader cos	count=1
arg_pair	la forme d'un ||| int $y	count=1
return	liste les ||| array	count=1
function	les en-têtes [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	ajoutés ||| newt form	count=1
function_name	libère toute la mémoire ||| free result	count=2
arg_pair	de src_w et ||| int $src_w	count=1
function_name	bufferisation ||| set buffering	count=2
function_name	dernier identifiant autogénéré ||| last	count=1
arg_pair	depuis une chaîne binaire ||| string $data integer $word_size	count=1
function_name	fournisseurs ||| broker	count=1
arg_pair	applique une matrice de ||| resource $image	count=1
return	array ||| int	count=1
return	de ||| int	count=17
function_name	d'un document dom ||| import dom	count=1
arg_pair	fichier remote_file depuis le ||| string $remote_file	count=2
function_name	tous les ||| string	count=1
arg_pair	domaine courant pour une ||| string $domain string $msgid1	count=1
arg_pair	la dernière modification d'un ||| float $mtime	count=1
function_name	lit un ||| callback read	count=1
function_name	lit la prochaine ligne ||| fetch	count=1
arg_pair	courante ||| resource $image	count=1
function_name	fonction pcntl_sigwaitinfo() ||| sigwaitinfo	count=1
function_name	extrait ||| grapheme extract	count=1
function	de jacobi [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	options qui affectent ||| array $options	count=1
return	contient les métadonnées et ||| mongodb	count=1
return	tri qui place les ||| void	count=1
arg_pair	de caractères ||| string $localname	count=1
namespace	stoppé evcheck ||| evcheck	count=1
function_name	paramètre facet.date ||| facet field	count=1
return	si le drapeau ||| bool	count=1
function_name	lire les données ||| send	count=1
namespace	récupère ||| splfileobject	count=2
arg_pair	dans un fichier ||| resource $connection int $oid	count=1
function_name	définit la police de ||| setfont	count=1
function_name	analyse une liste ||| mailparse rfc822 parse addresses	count=1
return	convertit ||| string	count=1
function_name	été ajoutés à ||| newt	count=1
function_name	minimale ||| min	count=8
function_name	d'activation dans ||| set activation	count=1
function_name	le prochain [function_name_2] ||| [function_name_1] [function_name_2]	count=5
return	exécution ||| void	count=1
function_name	variables ||| array push	count=2
function_name	fonction wincache_lock() ||| wincache unlock	count=1
function_name	filtre ||| filter	count=6
function	[function_name_1] result_identifier jusqu'à ||| [function_name_1] seek [arg_pair_2]	count=4
function_name	utilisée ||| set module	count=2
function_name	profil de l'image ||| image profile	count=2
function_name	la réponse du ||| response	count=1
function_name	gestionnaire à [function_name_2] ||| [function_name_2] [function_name_1] resource $parser callable $handler	count=1
function_name	courante du boost pour ||| boost	count=1
function_name	système ||| eio unlink	count=2
namespace	lorsque la méthode recursivetreeiterator::valid() ||| recursivetreeiterator	count=1
function_name	terminal supporte les couleurs ||| ncurses has colors	count=1
function_name	preg_replace() mais elle ne ||| preg	count=1
function_name	de l'os hôte ||| host os	count=1
function_name	le certificat [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	protocole associé [return] ||| [return]	count=3
function_name	passé par [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] pages ||| [function_name_2] [function_name_1]	count=2
function_name	le document ||| document	count=1
function_name	détaillées sur [function_name] ||| pdf info [function_name]	count=2
namespace	fourni et extrait dans ||| function	count=1
arg_pair	les ||| resource $pdfdoc string $glyphname	count=1
function_name	comme une pile et ||| push	count=1
function_name	une recherche ||| imap search	count=1
function_name	sur l'attribut ||| attribute	count=1
namespace	de la bibliothèque ||| sqlite3	count=1
function_name	passe de la ||| fbsql database password	count=1
function_name	un curseur typiquement parcourt ||| size	count=1
function_name	à détruire un bloc ||| shmop	count=1
function_name	un attribut dans ||| update	count=1
function_name	l'endroit ||| set error log	count=2
function_name	défini l'époque maximale candidate ||| set cascade max cand epochs	count=1
arg_pair	que les paramètres passés ||| int $year	count=2
function_name	table courante ||| table	count=1
arg_pair	de montage d'un périphérique ||| string $pharpath	count=1
return	finissant [return] sommet ||| [return]	count=1
namespace	de la frame ||| ktaglib_id3v2_frame	count=1
function_name	fichier temporaire tous ||| uudecode all	count=1
return	recherche sur les ||| int	count=1
function_name	être ||| set	count=3
arg_pair	fichier ||| string $filename	count=7
function_name	requête odbc ||| odbc	count=1
function_name	associé au champ ||| field	count=1
return	doit ||| string	count=1
function_name	d'être une ||| user defined	count=1
arg_pair	liée [arg_pair] ||| [arg_pair]	count=2
function_name	la limite supérieure dans ||| terms include upper bound	count=1
arg_pair	à analyser ||| string $source string $encoding	count=1
arg_pair	d'un élément dans une ||| string $attr_name	count=1
arg_pair	une ||| string $password	count=2
arg_pair	traite certains éléments d'un ||| int $page string $optlist	count=1
function	ligne [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=7
function_name	définit une fonction ||| mysqlnd ms set	count=1
function	succès [arg_pair_2] ||| [function_name_1] field len [arg_pair_2]	count=1
function_name	entwerfen von einer mime ||| iconv mime	count=1
function_name	durée du script ||| set include path	count=1
arg_pair	la seconde contient le ||| string $prefix	count=1
function_name	en incluant les ||| newt	count=1
namespace	client ||| mongocursorinterface	count=1
function_name	dans ||| all	count=1
arg_pair	valeur fournie qui ||| float $value	count=1
arg_pair	de données par défaut ||| mysqlnd_connection $connection	count=1
function_name	champs colonnes ||| fields	count=1
function_name	connexions ||| connection	count=3
function_name	fermeture ||| close	count=1
function_name	l'intervalle pour un ||| range	count=1
return	longueur minimum [return] mot ||| [return]	count=1
arg_pair	le flux imap ||| string $criteria	count=1
return	les valeurs ||| array	count=1
return	par ||| bool	count=5
function_name	le dossier d'archives ||| zip entry compressionmethod	count=1
function_name	la fonction pdf_get_value() avec ||| get majorversion	count=1
namespace	brosse courante pour le ||| function	count=1
function_name	le type ||| type	count=16
namespace	virtuel ou ||| function	count=1
function_name	dernier appel à mysqli_connect() ||| mysqli connect	count=1
function_name	dernière erreur [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	des boîtes aux lettres ||| imap get quota	count=1
function_name	[function_name_1] le nom ||| [function_name_1] root element [function_name_2]	count=1
namespace	fourni par ||| function	count=1
function_name	retourne ||| introspection get state	count=1
return	chambre noire [return] exposant des ||| [return]	count=1
return	force l'écriture de tous ||| bool	count=1
function_name	fichiers distant sans suivre ||| ssh2 sftp lstat	count=1
function_name	issues de transactions xa ||| ms xa	count=1
function_name	ajoute une ||| add element	count=1
arg_pair	la première occurrence ||| string $haystack string $needle	count=2
namespace	l'objet observateur evidle et ||| evidle	count=1
arg_pair	résultats listant ||| string $schema string $table_name	count=1
function_name	et définit ||| action set	count=1
namespace	méthode détermine si un ||| pharfileinfo	count=1
arg_pair	à partir d'une source ||| int $source	count=1
function_name	sur le prochain noeud ||| next	count=1
function_name	récupère ||| gupnp context get	count=3
return	des données personnalisées ||| void	count=1
namespace	en d'autres ||| ev	count=1
namespace	de l'image depuis le ||| gmagick	count=1
function_name	retourne l'uid effectif de ||| posix geteuid	count=1
arg_pair	de angle en degrés ||| float $angle	count=1
function_name	élément avec ||| element	count=1
arg_pair	avec la cible spécifiée ||| resource $context string $target	count=1
function_name	statistiques d'occurrences par mot-clé ||| build keywords	count=1
return	sur la ||| bool	count=1
namespace	que les ||| function	count=2
arg_pair	le contenu d'un élément ||| string $attr_name int $index	count=1
function_name	de ||| set include path	count=4
function_name	pour la durée du ||| include path	count=1
function_name	essaie de ||| drop db	count=1
arg_pair	paramètre str à ||| string $str	count=1
function_name	antislashs devant les caractères ||| string	count=1
function_name	crée une paire ||| pair	count=1
return	courante du ||| bool	count=1
arg_pair	du texte à la ||| resource $psdoc	count=1
function_name	sera démarré lors ||| add launchlink	count=1
function_name	lignes de la ||| dbplus rzap	count=1
arg_pair	sur le flux imap ||| resource $imap_stream string $criteria	count=1
namespace	à pclose() ||| function	count=1
namespace	d'un lob ||| oci-lob	count=1
return	en coordonnées relatives à ||| bool	count=1
function_name	contient l' ||| contains	count=1
function_name	logarithme base-10 pour chaque ||| trader log10	count=1
function_name	élément avec un ||| by id	count=1
namespace	image contenant du ||| gmagick	count=1
function_name	[function_name_1] timestamp ||| [function_name_2] [function_name_1]	count=1
function_name	la taille compressée d'un ||| compressedsize	count=1
function_name	[function_name_1] spécifie le ||| [function_name_2] [function_name_1]	count=2
namespace	un traitement ||| imagick	count=1
arg_pair	pas attrappées par ||| string $cb	count=1
function	à [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	et ||| resource $conn_identifier	count=1
arg_pair	un espace de noms ||| string $namespaceuri	count=1
function_name	fonction est similaire à ||| element	count=1
function_name	minimale du document ||| cache min default	count=1
function_name	élément avec un identifiant ||| get element by id	count=1
arg_pair	et la clé passées ||| string $data	count=1
function_name	lecture pour les secondaires ||| set slave okay	count=1
function_name	racine ||| root element	count=2
function_name	le fait qu'elle ||| eregi	count=1
function_name	la durée du ||| set include path	count=1
namespace	les ||| yar_concurrent_client	count=1
namespace	agent snmp spécifié par ||| function	count=1
function_name	retourne la température sarprop ||| fann get sarprop temperature	count=1
function_name	objet depuis ||| object	count=1
function_name	[function_name_1] similaires à ||| [function_name_2] [function_name_1]	count=16
function_name	ré-initialise toutes les ||| reset	count=1
arg_pair	document xml ||| string $src	count=1
function_name	spécifiée avec ||| preview images	count=1
function_name	retourne la [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
function_name	le serveur associé ||| sybase	count=1
function_name	retourne ||| get coding type	count=1
arg_pair	une séquence de groupes ||| string $haystack	count=1
function_name	fois par ||| set	count=1
function_name	déplace toutes les données ||| add	count=1
function_name	mssql_connect() ||| mssql pconnect	count=2
function_name	fichier ||| all	count=2
arg_pair	l'hôte hostname et port ||| string $hostname int $port	count=1
return	valeurs en ||| bool	count=2
namespace	si la méthode ||| reflectionmethod	count=5
namespace	ou ||| function	count=58
function_name	géométrie de l'objet ||| page	count=1
function_name	appelle la ||| call	count=1
function_name	être ||| metadata	count=1
function_name	fréquence en deçà ||| mlt min term frequency	count=1
function_name	uri d'espace ||| elements by	count=1
function_name	nouvel objet paradox ||| px new	count=1
function_name	identifiant unique ||| spl object hash	count=1
function_name	du fichier fourni ||| uudecode	count=1
function_name	prend ||| set max poll time	count=2
rest	retourne [function_2] ||| [function_2] [return_1]	count=1
function_name	spécifié ||| zip entry compressionmethod	count=2
return	elle prend plus de ||| void	count=1
function_name	facet qui doit être ||| set facet	count=1
arg_pair	seul depuis les données ||| string $data	count=1
function_name	maximal de [function_name_2] ||| [function_name_2] [function_name_1]	count=12
arg_pair	erreurs seront historisées ||| resource $errdat string $log_file	count=1
arg_pair	de fichier fd pour ||| int $mode	count=1
return	fonction retournera un tableau ||| array	count=1
arg_pair	une ||| mysqlnd_connection $connection	count=1
function_name	test sur ||| test data	count=1
arg_pair	l'argument offset et dans ||| int $offset	count=1
function_name	test sur un jeu ||| fann test data	count=1
namespace	l'objet référencé existe toujours ||| weakref	count=1
return	résultants ||| mongocommandcursor	count=1
function_name	représentant la version cliente ||| get client info	count=1
function_name	transforme le ||| transform to doc	count=1
namespace	pour stocker ||| pharfileinfo	count=1
namespace	fichiers ainsi que ||| pharfileinfo	count=1
arg_pair	et retourne la portion ||| bool $part	count=1
function_name	cubrid_lob2_tell64() ||| lob2 tell64	count=2
function_name	envoie [function_name] seule requête ||| [function_name]	count=1
function_name	de données fbsql ||| fbsql	count=1
arg_pair	le paramètre variable_name ||| resource $introspection string $variable_name	count=1
return	fourni et extrait dans ||| array	count=1
namespace	de la ||| sqlite3	count=1
arg_pair	se comporte comme ||| string $servername	count=2
function_name	un document pour ||| set	count=1
function_name	est sous copyright ||| is copyrighted	count=2
function_name	argument ||| db2 escape	count=1
arg_pair	fonction à appeler à ||| mixed $arg	count=1
function_name	une classe est ||| is	count=2
arg_pair	lui associe un objet ||| int $cols	count=1
function_name	envoi ||| send	count=1
function_name	forme en ||| form destroy	count=1
namespace	par le paramètre hostname ||| function	count=1
return	8bim [return] présent ||| [return]	count=1
function_name	[function_name] javascript enregistrées ||| get [function_name]	count=2
function_name	julien pour ||| to jd	count=1
arg_pair	fichier spécial ou ordinaire ||| int $minor	count=1
function_name	retourne la racine ||| get root data	count=1
function_name	serveur sans attendre ||| pg send	count=1
arg_pair	une séquence ||| string $haystack int $size	count=1
function_name	mktime() ||| gmmktime	count=1
function_name	à la fonction ||| by id	count=1
function_name	cubrid ||| cubrid	count=1
function_name	vérification des index ||| udiff assoc	count=1
function_name	doit ||| set metadata	count=2
arg_pair	la fonction fbsql_field_name() ||| resource $result int $field_offset	count=1
arg_pair	cette méthode factorielle ||| int $size	count=1
arg_pair	qui supportent [arg_pair] pages compressées ||| [arg_pair]	count=1
function_name	utilisée ||| metadata	count=1
function_name	attention : cette fonction ||| get bytes	count=1
function_name	récupère la profondeur maximale ||| get max depth	count=1
function_name	des différences et sur ||| merge	count=1
arg_pair	la ||| string $pattern	count=2
function_name	fragments proches ||| set highlight	count=1
function_name	[function_name_1] appeler lorsqu'une ||| [function_name_2] [function_name_1]	count=6
return	plusieurs valeurs à une ||| tokyotyrant	count=1
function_name	virtuel nommé, en lecture ||| pvf	count=1
return	en une ||| bool	count=3
function_name	récupère l'adresse ip utilisée ||| context get host ip	count=1
function_name	la file ||| time	count=1
function_name	pour ||| create function	count=1
function_name	[function_name_1] [function_name_2] dans le ||| [function_name_2] [function_name_1]	count=10
arg_pair	hyperlien à la position ||| float $urx	count=1
return	la bibliothèque rrdtool ||| string	count=1
function_name	configure l'échelle du ||| scale	count=1
return	extrait dans un fichier ||| array	count=1
function_name	bibliothèque cliente oracle c ||| oci client	count=1
arg_pair	effets libgd ||| resource $image int $effect	count=1
function_name	de rappel pour readline ||| readline callback	count=1
function_name	la prochaine image ||| next image	count=2
function_name	[function_name_1] enfant au ||| [function_name_1] [function_name_2]	count=1
function_name	cache de ||| qc	count=1
namespace	base de ||| tokyotyrant	count=1
namespace	utilisé pour ||| function	count=1
function_name	utilisateur) ||| restore	count=1
return	sur le document ||| string	count=1
function_name	qui ||| newt form	count=2
namespace	le jeu de ||| function	count=1
function_name	qui sera démarré lors ||| ps add launchlink	count=1
function_name	sein d'une archive ||| is	count=1
arg_pair	structures ||| int $textflow	count=1
arg_pair	snmp2_get() est utilisée ||| string $host string $community	count=1
function_name	erreur de la dernière ||| last error	count=1
function_name	un contexte de flux ||| stream context	count=1
function_name	d'un flux ||| stream	count=1
function_name	clientes oracle ||| oci	count=1
function_name	fournisseurs enchant ||| enchant broker describe	count=1
function_name	chromacité du point vert ||| green	count=1
namespace	entre ||| arrayobject	count=1
namespace	connexion à ||| mongoclient	count=1
return	champ= > valeur ||| mixed	count=1
function_name	la ||| var	count=1
arg_pair	les ||| resource $pdfdoc int $table	count=1
return	tampon fourni par le ||| bool	count=1
function_name	l'identifiant ||| pid	count=1
return	un tableau contenant ||| array	count=9
function_name	elle prend plus ||| set max	count=1
function_name	méthode d'interpolation [function_name_2] ||| [function_name_2] [function_name_1]	count=3
arg_pair	d'une table fournie ||| string $database_name string $table_name	count=1
arg_pair	correspondant à ||| resource $result	count=1
arg_pair	strcmp() ||| string $str1 string $str2	count=1
function_name	syntaxe du ||| check syntax	count=1
function_name	de fichiers distant ||| ssh2 sftp stat	count=1
function_name	de 9 miniatures ||| images	count=1
function_name	dossier ||| entry	count=1
function_name	récupère la valeur ||| offset get	count=1
arg_pair	avec la cible ||| resource $context string $target	count=1
namespace	ou sauvegarde ||| function	count=3
function_name	lignes ||| imagesetbrush	count=1
function_name	verrou de ||| lock read	count=1
return	s'il est présent ||| bool	count=1
arg_pair	l'événement de ||| mixed $arg	count=1
return	collections : la ||| mongodb	count=1
function_name	retourne ||| dbase	count=1
function_name	taille d'une image ||| image extent	count=1
namespace	l'objet ||| solrparams	count=1
function_name	les informations de ||| stat	count=1
function_name	de version disponibles ||| version	count=1
arg_pair	la ||| resource $ann	count=2
function_name	la tâche en ||| background	count=1
function_name	un nouvel attribut ||| set attribute	count=1
namespace	sérialisée du hash ||| quickhashinthash	count=1
function_name	du réseau ||| fann create	count=1
namespace	qui y ||| function	count=1
namespace	l'objet pdostatement ||| pdostatement	count=1
function_name	fin de ||| add buffer	count=1
function_name	utilisée ||| entry	count=1
function_name	file d'attente s'interrompt ||| poll time	count=1
function_name	contenant les en-têtes ||| headers	count=1
return	en ||| bool	count=92
function_name	svm utilisé, ie svm::c_svc ||| svm	count=1
function_name	signal indiqué par le ||| pcntl signal	count=1
arg_pair	paramètre oid de ||| resource $conn_identifier string $oid	count=1
function_name	les ||| search	count=1
function_name	l'écrit dans ||| fget	count=1
function_name	statut de la ||| status	count=3
return	la position courante du ||| bool	count=1
function_name	de verrou deadlocks ||| deadlock retry count	count=1
namespace	brosse ||| function	count=1
arg_pair	une ||| resource $connection_id	count=1
return	retourne l'identifiant ||| int	count=1
function_name	utilisée sur le dossier ||| entry compressionmethod	count=1
function_name	plus proche de la ||| imagecolorclosest	count=1
function_name	la méthode oauthprovider::consumerhandler() ||| callconsumer handler	count=1
function_name	et ||| array	count=1
function_name	un nouveau pattern ||| begin pattern	count=1
function_name	la ||| field type	count=4
function_name	buffer ||| buffer	count=2
return	réponses dans une série ||| bool	count=1
function_name	incrémente ||| wincache ucache inc	count=1
function_name	retourne la date de ||| get	count=1
function_name	de session ||| session get	count=1
return	passés sont ||| int	count=1
function_name	de sqlstate retournée ||| stmt error	count=1
function_name	le fichier ||| file	count=3
namespace	lit la date ||| splfileinfo	count=2
function_name	qu'elle fonctionne ||| proc	count=1
arg_pair	chaine de ||| int $size	count=1
return	écrit du ||| bool	count=1
function_name	ouvre ||| open	count=12
function	[function_name_1] les ||| [function_name_1] field [arg_pair_2]	count=1
return	l'objet ||| string	count=2
arg_pair	spécifie un préfixe utilisé ||| string $field_override	count=1
function_name	symbolique ||| token	count=1
function_name	efface un flux ||| pdf delete textflow	count=1
function_name	suivante dans la liste ||| nextimage	count=1
arg_pair	position numérique de la ||| string $encoding	count=1
arg_pair	libre server_key peut ||| string $server_key	count=2
function_name	antislashs devant les ||| string	count=1
return	les informations de ||| string	count=1
arg_pair	yar_concurrent_client::loop() ||| array $parameters	count=1
function_name	caractères d'instance xml ||| load	count=1
arg_pair	fusionne la source ||| solrdocument $sourcedoc bool $overwrite	count=1
function_name	écrit du texte à ||| ps	count=1
function_name	méthode est [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	jeu de caractères à ||| gmagickdraw	count=1
namespace	courante du ||| function	count=1
arg_pair	[arg_pair] unix) ||| [arg_pair]	count=3
arg_pair	page avec les données ||| callable $callback mixed $data	count=1
function_name	le terme à ||| set terms upper bound	count=1
arg_pair	cet index ainsi que ||| mixed $index	count=1
arg_pair	chaîne avant de l'envoyer ||| string $source_string	count=1
function_name	gestionnaire d'erreurs libxml standard ||| libxml	count=1
arg_pair	la connexion ||| bool $value	count=1
function_name	les ressources mémoires utilisées ||| newt	count=1
function_name	du ||| info	count=1
function_name	terminer le processus ||| pcntl wait	count=1
function_name	la fonction snmp2_walk() ||| walk	count=1
function_name	zend en utilisant l'image ||| zend	count=1
function_name	similaire à ||| get element by id	count=1
arg_pair	texte et récupère la ||| string $text	count=1
return	envoie une ||| void	count=1
arg_pair	séparateur delimiter ||| string $string	count=1
function_name	libère toutes ||| free	count=1
function_name	la largeur de l'image ||| width	count=1
function_name	objet snmp spécifié ||| snmp2	count=1
namespace	l'élément directoryiterator ||| directoryiterator	count=1
function_name	lien symbolique pour ||| symlink	count=1
namespace	pclose() hormis ||| function	count=1
function_name	service qui fonctionne ||| win32 set service	count=1
function_name	similaire à ||| get	count=1
function_name	les fichiers encodés ||| mailparse uudecode all	count=1
function_name	prochaine ligne ||| fetch object	count=1
function_name	le ||| ob get	count=1
function_name	la fréquence en ||| min term frequency	count=2
function_name	d'événements pour les événements ||| ibase set event	count=1
function_name	rprop ||| rprop	count=3
function_name	nom de ||| filename	count=1
arg_pair	le paramètre filename ||| string $mode	count=1
function_name	cosinue pour chaque ||| trader cos	count=1
function_name	cette ||| element by id	count=2
namespace	les paramètres de ||| solrparams	count=1
function_name	de socket ||| socket	count=1
namespace	les données ||| function	count=1
return	avec la ||| bool	count=1
function_name	la casse ||| eregi	count=1
arg_pair	dans le ||| int $imagetype	count=1
function_name	le terme ||| terms upper bound	count=1
function_name	tous les modes de ||| modes	count=1
arg_pair	[arg_pair] à ||| [arg_pair]	count=1
arg_pair	dans le texte ||| string $text	count=1
namespace	stockage ||| splobjectstorage	count=5
function_name	ajoute [function_name_2] ||| [function_name_1] [function_name_2]	count=5
arg_pair	la fonction radius_config() ||| int $port string $secret	count=1
function_name	array ||| array push	count=2
namespace	à ||| mongocursorinterface	count=2
arg_pair	fichier ||| string $pathname int $mode	count=1
namespace	le fichier spécifié par ||| function	count=1
function_name	[function_name_1] parser ||| [function_name_2] [function_name_1]	count=1
function_name	pour ||| debug	count=1
function_name	similaire ||| field	count=2
function_name	nouveau [function_name] ||| [function_name] packet	count=1
arg_pair	de size avec ||| array $array int $size	count=1
arg_pair	est identique à ||| string $pattern string $string	count=1
function_name	pcntl_sigwaitinfo() suspend ||| pcntl sigwaitinfo	count=1
function_name	est similaire ||| field	count=2
function_name	libère les ressources ||| free	count=3
return	pouvoir passer en ||| bool	count=1
function_name	sur ||| newt form destroy	count=2
arg_pair	une version ||| string $filename	count=1
arg_pair	de fichier fd ||| int $mode	count=1
function_name	le nombre [function_name_2] ||| [function_name_1] [function_name_2]	count=6
function_name	identifiant donné ||| id	count=1
function_name	établit une ||| with url	count=1
function_name	de flux et attend ||| stream select	count=1
return	l' eventbuffer ||| bool	count=1
arg_pair	object_id spécifié ||| string $object_id string $timeout	count=1
function_name	la couleur ||| color floodfill	count=1
function_name	page ||| pdi page	count=2
function_name	libère ||| oci free descriptor	count=2
function_name	récupère la position ||| get facet	count=1
arg_pair	jeu ||| resource $stmt string $classname	count=1
function_name	[function_name_1] les attributs ||| [function_name_2] [function_name_1]	count=1
function_name	crée un groupe de ||| pdf create	count=1
function_name	est supportée par la ||| is	count=1
return	sert à créer un ||| resource	count=1
arg_pair	texte et récupère ||| string $text	count=1
function_name	minimale du document ||| enum cache min	count=1
arg_pair	indexé par nom ||| int $row_number	count=1
function_name	sortie en ||| ob	count=1
arg_pair	invoquées avant de ||| int $max_callbacks	count=1
arg_pair	passés sont ||| int $hour int $minute	count=1
arg_pair	la fonction à fournir ||| string $contents int $status	count=1
function_name	postgresql associée au résultat ||| pg result	count=1
arg_pair	vers le point ||| float $x float $y	count=1
function_name	la profondeur de l'image ||| get image depth	count=1
function_name	le nombre ||| db2 num	count=1
return	constructeur de base pour ||| string	count=1
function_name	fonction geoip_country_code3_by_name() retourne ||| country code3	count=1
function_name	si elle prend plus ||| eio	count=1
namespace	depuis ||| gmagick	count=1
namespace	sauvegarde [namespace] de ||| [namespace]	count=1
function_name	cette fonction crée ||| create cdatasection	count=1
function_name	de la machine maître ||| master	count=1
function_name	dictionnaire à utiliser ||| enchant broker set	count=1
arg_pair	et retourne la ||| string $encoding	count=2
function	sauvegarde [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=7
function_name	définit le type mime ||| set mime type	count=1
function_name	par la dernière opération ||| errno	count=1
namespace	pour la durée du ||| function	count=1
function_name	efface les lignes ||| delete	count=1
function_name	réplication ||| hosts	count=1
function_name	la première ||| yp first	count=1
function_name	[function_name_1] jokers à ||| [function_name_1] num [function_name_2]	count=1
function_name	les ||| mailparse uudecode all	count=4
function_name	chaîne ||| db2 escape string	count=2
arg_pair	d'une ||| string $name int $type	count=1
function_name	[function_name_1] du serveur ||| [function_name_2] [function_name_1]	count=16
function_name	file d'attente ||| eio	count=1
function_name	extrait dans ||| uudecode	count=1
function_name	termine ||| end	count=3
namespace	dessin des ||| function	count=1
arg_pair	chaîne c dans ||| string $c	count=1
arg_pair	applique une matrice ||| resource $image	count=1
function	lie le [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] la demande ||| [function_name_1] [function_name_2]	count=1
return	sur tar [return] méthode soulève ||| [return]	count=1
arg_pair	fait que ||| int $minute	count=1
function_name	depuis une requête odbc ||| odbc	count=1
return	être utilisée que ||| void	count=1
function_name	fixe l'encodage ||| encoding	count=1
arg_pair	octets nuls toutes les ||| resource $handle	count=1
return	à pclose() ||| int	count=1
function_name	le fichier bzip2 ||| bzclose	count=1
arg_pair	d'un ||| int $page string $optlist	count=1
function_name	maximale [function_name_2] ||| [function_name_1] [function_name_2]	count=9
function_name	remplit un ||| pdf fill textblock	count=1
function_name	supprime ||| remove facet query	count=1
function_name	des informations sur la ||| msg stat	count=1
function_name	radius_get_attr() radius_get_tagged_attr_data() va retourner ||| radius get tagged attr data	count=1
arg_pair	fichier ||| int $offset	count=1
function_name	postgresql et ||| pg	count=1
function_name	vers l'élément suivant ||| next	count=1
function_name	données du fichier ||| mailparse	count=1
function_name	de l'étape [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	si la file d'attente ||| bool	count=1
return	une série de ||| bool	count=1
namespace	être utilisé ||| function	count=1
namespace	à evchild::__construct() mais ||| evchild	count=1
function_name	ressource ||| cancel monitor	count=2
function_name	à ||| fbsql field	count=1
arg_pair	certificat x509 ||| mixed $x509	count=1
function_name	[function_name_1] l'année ||| [function_name_2] [function_name_1]	count=1
arg_pair	appeler ||| mixed $callback	count=1
function_name	[function_name_1] contexte de ||| [function_name_2] [function_name_1]	count=2
function_name	la durée ||| include path	count=1
arg_pair	excepté le fait que ||| int $hour	count=1
function_name	de l'extension ||| extension	count=1
function_name	de champs [function_name_2] ||| [function_name_2] [function_name_1] string $field	count=1
function_name	l'échelle ||| fann scale train	count=1
namespace	de la totalité ||| function	count=1
function_name	s'interrompt si elle prend ||| eio	count=1
function_name	logarithme naturel ||| ln	count=1
function_name	récupère la fonction ||| get	count=1
arg_pair	chaîne str après ||| string $str string $character_mask	count=2
function_name	de sortie puis l'efface ||| clean	count=1
function_name	un timestamp unix ||| date to timestamp	count=1
function_name	utilisée pour ||| set module	count=1
function_name	utilisé pour diriger les ||| set	count=1
arg_pair	champs au format csv ||| string $enclosure string $escape	count=1
function_name	drapeaux d'une ||| flags	count=1
function	[function_name_1] ...) ||| [function_name_1] [arg_pair_2]	count=2
function_name	cette fonction libère ||| form	count=1
return	date de sortie de ||| string	count=1
function_name	le premier attribut ||| to first attribute	count=2
namespace	ou non en ||| function	count=1
arg_pair	un préfixe utilisé pour ||| string $field_override	count=1
arg_pair	en ||| bool $exclusive	count=1
namespace	de ||| mongogridfs	count=1
namespace	lors d'une ||| gmagickdraw	count=1
arg_pair	une identification ||| string $username	count=1
function_name	métadonnées et ||| construct	count=1
function_name	commence après le premier ||| begin	count=2
function_name	les précédents intervalles clos ||| elapsed	count=1
function_name	si le prochain ||| next	count=1
function_name	[function_name_1] le certificat ||| [function_name_2] [function_name_1]	count=1
function_name	insère l'entrée décrite par ||| dba insert	count=1
function_name	de ||| entry compressionmethod	count=2
function_name	une ligne dans ||| fetch	count=1
function_name	retourne la méthode ||| zip entry compressionmethod	count=1
function_name	les caractères spéciaux d'une ||| escape string	count=1
function_name	restaure la valeur originale ||| ini restore	count=1
function_name	lit le message ||| message	count=1
function_name	[function_name_1] nom de ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] la longueur ||| [function_name_2] [function_name_1]	count=2
arg_pair	ou une fonction ||| string $name mixed $step_callback	count=1
function_name	timer ||| timer set	count=2
function_name	le serveur ||| server	count=1
function_name	compression utilisée sur ||| compressionmethod	count=1
arg_pair	calcule l'intersection de deux ||| array $array1 array $array2	count=3
namespace	une classe est ||| reflectionclass	count=1
function_name	actif le prochain ||| next	count=1
function_name	récupère [function_name_2] ||| [function_name_1] page [function_name_2]	count=2
function	[function_name_1] rouge ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	utiliser mapreduce ||| array $pipeline array $options	count=1
function	syntaxe du [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	fichier qui ||| metadata	count=1
function_name	[function_name_1] la dernière ||| [function_name_2] [function_name_1]	count=15
return	le document source ||| string	count=1
arg_pair	noeud avec un espace ||| string $namespaceuri string $qualifiedname	count=1
function_name	analyse ||| parse	count=9
function_name	informations ||| rrd	count=1
return	et sur le ||| string	count=1
function_name	similaire à la ||| id	count=1
arg_pair	les autres fonctions eio_* ||| int $pri	count=1
return	contenu ||| string	count=1
arg_pair	et la seconde ||| string $prefix	count=1
function_name	flux et attend ||| stream	count=1
return	ignore ||| int	count=1
function_name	de preg_replace() hormis le ||| preg	count=1
function_name	prend plus de ||| poll time	count=1
function_name	dernière requête ayant échouée ||| last	count=1
return	à ||| bool	count=8
arg_pair	un message message dans ||| string $message string $options	count=1
function_name	[function_name_1] l'uri ||| [function_name_1] [function_name_2]	count=1
namespace	: la première ||| mongogridfs	count=1
function_name	image représentant ||| image	count=1
function_name	retourne ||| mcrypt get	count=1
namespace	méthode de compression ||| function	count=1
arg_pair	étendus d'un fichier ||| int $flags	count=1
function_name	cette fonction est similaire ||| element	count=1
function_name	la ||| set max poll	count=1
function_name	de l'attribut ||| attribute	count=1
function_name	requête ||| facet query	count=1
arg_pair	une ou plusieurs ||| mixed $keys	count=1
arg_pair	à la valeur spécifiée ||| int $color float $value	count=1
arg_pair	et ||| string $text float $word_space	count=1
function_name	champs facet ||| set facet	count=1
arg_pair	la base dbase_identifier ||| int $dbase_identifier	count=1
arg_pair	fait que ||| int $day	count=1
function_name	d'attente contient encore ||| valid	count=1
function_name	requête ||| mysqli stmt	count=2
return	les caractères alphabétiques ||| int	count=1
function_name	entwerfen von einer mime ||| iconv mime encode	count=1
return	serveur de messagerie ||| bool	count=1
function_name	composants ||| newt	count=2
arg_pair	met en cache une ||| string $key mixed $var	count=1
namespace	personnalisées dans un fichier ||| pharfileinfo	count=1
return	de sortie ||| string	count=2
arg_pair	les ||| string $pattern string $string	count=1
function_name	plus de ligne ||| fetch	count=1
namespace	de ||| xmldiff\base	count=2
function_name	filtre d'un [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	excepté le fait que ||| int $second int $month	count=1
namespace	l'application ||| gearmanclient	count=1
function_name	récupère le contexte de ||| context	count=1
namespace	document dans ||| harudoc	count=1
function_name	nombre ||| num fields	count=2
function_name	configure l'échelle du document ||| pdf scale	count=1
function	désactive [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	tous les composants qui ||| form destroy	count=1
function_name	la bibliothèque rrdtool ||| rrd	count=1
arg_pair	le ||| string $pattern string $string	count=1
function_name	translation de ||| translate	count=1
function_name	du résultat ||| mysql	count=1
function_name	police et la ||| pdf load font	count=1
function_name	un ||| chpass principal	count=1
namespace	précisé par ||| function	count=1
function_name	ouvre un ||| open	count=1
function_name	la souscription à la ||| imap unsubscribe	count=1
arg_pair	une image ||| string $iptcdata	count=1
arg_pair	en une chaîne ||| bool $exclusive	count=1
arg_pair	ou associatif query_data ||| mixed $query_data string $numeric_prefix	count=1
function	classe [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
return	convertit un ||| string	count=1
return	pour le ||| int	count=1
arg_pair	la position x ||| int $x	count=1
namespace	est similaire à pclose() ||| function	count=1
function_name	le contexte de flux ||| context	count=1
function_name	fdf ||| fdf	count=5
function_name	encodés qui s'y trouvent ||| mailparse uudecode all	count=1
arg_pair	le fichier remote_file présent ||| int $mode	count=1
function_name	spécifié ||| entry compressionmethod	count=2
function_name	la variable repérée ||| var	count=1
function_name	un lot d'objets ||| size	count=1
function_name	informations de version de ||| version	count=1
function_name	correction gamma à ||| gamma	count=1
function_name	ajoute une ||| add	count=6
function_name	de configuration ||| path	count=1
namespace	sein de l'archive phar ||| pharfileinfo	count=1
arg_pair	object_id spécifié ||| string $timeout	count=1
function_name	par la fonction loadfromstring() ||| save to	count=1
namespace	de ||| mongocursor	count=2
return	les informations ||| array	count=1
function_name	consommer trop de ||| mssql free statement	count=1
arg_pair	le paramètre script comme ||| string $extension_name string $script	count=1
function_name	l'entier le plus petit ||| floor	count=1
arg_pair	des différences et sur ||| string $src	count=1
namespace	d'image d'un objet imagick ||| imagick	count=1
arg_pair	chaîne str après ||| string $from	count=1
function_name	fichier bzip2 ||| bzclose	count=1
function_name	le délai de l'image ||| get image delay	count=1
function_name	version disponibles ||| version	count=1
namespace	typiquement parcourt un ||| mongocommandcursor	count=1
function_name	fonction retourne le nombre ||| ifx num fields	count=1
function_name	précision des nombres décimaux ||| ingres set environment	count=1
function_name	défini l'uri de ||| uri	count=1
function_name	crée un nouveau contexte ||| gupnp context new	count=1
function_name	les caractères brutes des ||| raw	count=1
function_name	place une simple ligne ||| fit textline	count=1
function_name	de ||| construct	count=3
arg_pair	permettra d'accéder ||| int $memsize	count=1
function_name	la profondeur [function_name_2] ||| [function_name_2] image [function_name_1]	count=1
function_name	d'occurrences de ||| substr	count=2
arg_pair	le ||| int $timestamp	count=1
namespace	envoyer ||| mongocursorinterface	count=1
function_name	un élément avec un ||| get element by id	count=1
function_name	file d'attente s'interrompt si ||| set max poll	count=1
arg_pair	retourne une ||| string $connection_string	count=1
function_name	la fonction ingres_query() dans ||| ingres	count=1
function_name	minuscules ||| lower	count=1
arg_pair	de l'index spécifié ||| int $field_offset	count=1
arg_pair	un ||| resource $session	count=1
arg_pair	évalue une expression ||| string $expression	count=1
arg_pair	la position de la ||| string $charset	count=1
function_name	fonction est ||| get element by	count=1
function_name	postgresql supporte [function_name_2] ||| [function_name_1] client [function_name_2]	count=2
function_name	nouveau motif ||| ps begin pattern	count=1
function_name	restaure la configuration ||| config	count=1
arg_pair	fichier ||| resource $image string $filename	count=1
function_name	nom ||| filename	count=1
return	le seuil de ||| int	count=1
function_name	[function_name_1] l'extension sous ||| [function_name_2] get [function_name_1]	count=2
function_name	procédure stockée ||| fetch proc return	count=1
namespace	tar ||| phardata	count=3
function_name	méthode ||| zip entry	count=1
function_name	textes ||| mb ereg	count=1
function_name	lie ||| bind	count=2
function_name	un élément ||| id	count=1
return	méthode déplace [return] simplexmliterator ||| [return]	count=1
function_name	options odbc ||| odbc	count=1
function_name	fichier exe ||| load exe	count=1
function_name	[function_name_1] informations ||| [function_name_2] [function_name_1]	count=6
arg_pair	fait que les ||| int $hour int $minute	count=1
function_name	et ||| construct	count=1
function_name	depuis le système de ||| eio unlink	count=1
function_name	mime d'une image ||| mime	count=1
function_name	une ligne ||| odbc fetch	count=1
function_name	entités html ||| html entity decode	count=1
namespace	retourne ||| function	count=2
function	cette fonction retourne [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name_1] l'uri ||| [function_name_2] [function_name_1]	count=1
arg_pair	examine la ||| array $cainfo	count=1
function_name	file d'attente ||| eio set max poll	count=1
function_name	modificateurs d'accès pour cette ||| modifiers	count=1
arg_pair	substr() basée [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	libre server_key peut être ||| string $server_key	count=2
function_name	un jeu de ||| db2 procedure	count=1
arg_pair	constante imagetype_xxx ||| bool $include_dot	count=1
function_name	de ||| shmop	count=1
function_name	symbole de jacobi ||| jacobi	count=1
function_name	efface l'objet ||| delete	count=1
arg_pair	définit un ||| string $param_key	count=1
function_name	différence à ||| diff	count=1
function_name	récupère [function_name_2] ||| [function_name_1] external [function_name_2]	count=1
arg_pair	une des ||| string $style	count=1
function_name	une queue [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	d'une couleur avec ||| resource $image	count=1
function_name	exe ou ||| write exe footer	count=1
function_name	la forme en ||| destroy	count=1
arg_pair	le domaine courant pour ||| string $domain string $msgid1	count=1
function_name	racine carrée de chaque ||| trader sqrt	count=1
function_name	http de la requête ||| apache request	count=1
function_name	le bytecode [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	insérer un élément ||| int $index	count=1
namespace	retourne le nombre ||| gmagickpixel	count=1
function_name	s'interrompt si elle prend ||| set max poll time	count=1
arg_pair	utilisée pour récupérer le ||| int $schema_type	count=1
function_name	cubrid_error_msg() est utilisée pour ||| msg	count=1
arg_pair	nombre de jours du ||| int $month int $day	count=1
function_name	certain délai ||| immortal	count=1
arg_pair	une connexion full-duplex ||| resource $stream int $how	count=1
arg_pair	connexion particulière ||| int $function	count=1
arg_pair	une colonne données ||| mixed $column	count=1
function_name	tidy ||| tidy reset	count=1
function_name	accès ||| dio	count=1
function_name	utilisé pour changer ||| set tag	count=1
return	si une variable ||| bool	count=1
function_name	dictionnaire à ||| enchant	count=1
arg_pair	donnée data ||| mixed $data int $encoding	count=1
function_name	crée un nouveau ||| create	count=1
namespace	l'inclure sans risque ||| sqlite3	count=1
function_name	tailles de clés supportées ||| get supported key sizes	count=1
function_name	blocs ou false ||| block	count=1
function_name	la prochaine requête xpath ||| register xpath	count=1
function_name	paramètre patch et enregistre ||| xdiff file patch	count=1
function_name	configuration courante [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	commande ftp list ||| ftp rawlist	count=1
function	[function_name_1] valeur ||| [arg_pair_2] [function_name_1]	count=1
function_name	odbc à des sources ||| odbc	count=1
function_name	en cas de succès ||| cubrid	count=2
function_name	bcompiler stocke le bytecode ||| bcompiler write	count=1
function_name	la fragmentation ||| highlight regex pattern	count=2
namespace	toutes les lignes de ||| function	count=1
function_name	[function_name_1] page ||| [function_name_1] current [function_name_2]	count=1
function_name	défini l'endroit où les ||| log	count=1
arg_pair	une fonction de rappel ||| mixed $callback	count=1
arg_pair	connexion sur une ||| string $servername	count=1
arg_pair	dans ||| int $y2	count=1
function_name	la forme et ||| destroy	count=1
function_name	globale de l'espace de ||| colorspace	count=1
function_name	chaîne d'entités html ||| mb decode numericentity	count=1
return	entre ||| void	count=1
function_name	un dictionnaire à ||| enchant broker	count=1
return	tableau de deux objets ||| array	count=1
function_name	file d'attente s'interrompt si ||| eio set	count=1
function	[function_name_1] needle dans ||| [function_name_1] [arg_pair_2]	count=1
function_name	et ||| parse ini file	count=1
function_name	le dossier ||| compressionmethod	count=1
arg_pair	envoie une commande et ||| resource $connection	count=1
function_name	efface ||| ftp	count=1
function_name	le gestionnaire d'entité externe ||| set external entity ref handler	count=1
namespace	fonction à appeler lorsqu'un ||| gearmanclient	count=1
arg_pair	un mot ||| resource $dict string $word	count=1
function_name	libère les ressources ||| ifx free	count=1
function_name	toujours valide ||| valid	count=1
return	forme en incluant les ||| void	count=1
return	une ||| resource	count=4
function_name	[function_name_1] le texte ||| [function_name_1] [function_name_2]	count=2
function_name	[function_name_1] maximale d'un ||| [function_name_2] [function_name_1]	count=2
function_name	collections : ||| construct	count=1
namespace	de la version courante ||| gmagick	count=1
arg_pair	prompt et ||| string $prompt callable $callback	count=1
function_name	retourne les entêtes de ||| get	count=1
function_name	récupère l'objet [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	les clés étrangères d'une ||| foreign keys	count=1
function_name	de sortie en octets ||| ob	count=1
return	est utilisée pour ||| string	count=1
return	pour définir ||| void	count=1
function_name	du flou à ||| gaussian blur	count=1
function_name	enregistrement dans le jeu ||| record	count=1
function_name	de tous ||| set	count=1
arg_pair	fichier resolv.conf et ||| int $flags string $filename	count=1
namespace	casse des caractères ||| function	count=1
function_name	température [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	est sortie ||| ev	count=1
namespace	utilisée par l'option de ||| function	count=4
arg_pair	paramètres ||| int $minute	count=1
arg_pair	échantillon depuis le rrd ||| int $raaindex	count=1
return	ou ||| void	count=1
function_name	lit le parent d'un ||| parents	count=1
function_name	en conjonction ||| stop	count=1
namespace	ceux de lecture ||| pharfileinfo	count=1
arg_pair	de domaine ||| string $domain int $options	count=1
function_name	depuis ||| pdf load	count=1
function_name	dernière requête appelée dans ||| mysqli stmt errno	count=1
arg_pair	combinant plusieurs images ||| string $tile_geometry	count=1
function_name	le cache ||| wincache	count=4
return	pour stocker des ||| void	count=1
function_name	imagemagick ||| home	count=1
function_name	de base pour ||| construct	count=1
function_name	fichier temporaire tous ||| mailparse uudecode all	count=1
arg_pair	de remplacer le domaine ||| string $domain	count=2
function_name	nombre ||| dbase numfields	count=2
function_name	qui décide si ||| mysqlnd qc	count=1
function_name	la file ||| poll time	count=1
function_name	ressources persistantes ||| dump persistent resources	count=1
function_name	un gestionnaire de fenêtre ||| imagegrabwindow	count=1
return	est une ||| int	count=1
arg_pair	fusionne ||| solrdocument $sourcedoc	count=1
function_name	si [function_name] a ||| get [function_name]	count=1
namespace	temporaire tous les fichiers ||| function	count=1
arg_pair	clé ||| array $query	count=1
arg_pair	une chaîne ||| resource $connection	count=1
namespace	modifie ||| function	count=1
namespace	de la base ||| function	count=1
function_name	de relation ||| dbplus	count=3
function_name	courant jusqu'au point ||| close path	count=1
arg_pair	le chemin est dirname ||| string $dirname resource $context	count=1
function_name	retourne ||| module get	count=2
return	en ajustant les couleurs ||| bool	count=1
namespace	la brosse courante ||| function	count=1
function	numéro [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	est prévue ||| string $file_extensions	count=1
namespace	http associées avec ||| eventhttprequest	count=1
arg_pair	première occurrence de needle ||| mixed $needle	count=1
function_name	et de flux ||| stream wrapper register	count=1
namespace	doit pas ||| pharfileinfo	count=1
arg_pair	résultat dans un fichier ||| string $dest int $flags	count=1
namespace	à l'agent ||| gearmanworker	count=1
function_name	[function_name_1] requête odbc ||| [function_name_2] [function_name_1]	count=1
function_name	signature de vérification ||| signature	count=1
function_name	retourne le nombre de ||| db2 num	count=1
arg_pair	un message d'erreur ||| int $message_type	count=1
function_name	fourni ||| add	count=1
function_name	la méthode eventbase::stop() ||| got stop	count=1
function_name	de ||| preview images	count=4
function_name	message d'erreur lisible pour ||| string	count=1
namespace	vérifie la [namespace] de ||| [namespace]	count=1
arg_pair	le fait ||| string $pattern	count=1
function_name	sur le socket ||| socket	count=1
function_name	d'être une fonction ||| user defined	count=1
arg_pair	séquence sequence et ||| resource $imap_stream string $sequence	count=1
function_name	nombre de lignes ||| mysql num rows	count=3
namespace	l'objet soapfault ||| soapfault	count=1
function_name	retourne ||| udm get	count=1
function_name	utilisé pour diriger ||| set multi by	count=1
function	accomplit [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	retourne le statut de ||| introspection get state variable	count=1
return	la ||| void	count=30
return	le ||| boolean	count=1
function_name	nom ||| by tag name	count=1
namespace	typiquement parcourt un lot ||| mongocommandcursor	count=1
function_name	itérateur ||| build from iterator	count=1
function_name	de l'étape d'erreur sarprop ||| sarprop step error	count=2
function_name	retourne la taille ||| get size	count=4
function_name	fonction ||| get element by id	count=4
namespace	sert ||| function	count=1
function_name	de ||| fann	count=3
function_name	[function_name_1] pour l'affichage ||| [function_name_2] [function_name_1]	count=2
function_name	similaire à la ||| fbsql	count=1
namespace	est spécifiée par ||| function	count=1
arg_pair	requête request ||| string $request string $string	count=1
function_name	des tests sur ||| uintersect assoc	count=1
arg_pair	est une ||| string $key	count=1
function_name	[function_name_1] chiffrement de ||| [function_name_2] list [function_name_1]	count=1
namespace	champs du document ||| solrdocument	count=2
function_name	devant les caractères ||| db2 escape string	count=1
function_name	binaire de l'entier ||| decbin	count=1
function_name	contenu courant ||| ob	count=1
function_name	candidate en cascade ||| fann set cascade	count=1
function_name	analyse la ||| imap rfc822 parse	count=1
function_name	[function_name] du stockage ||| remove [function_name]	count=1
arg_pair	left_operand en utilisant ||| string $left_operand	count=1
function_name	de lecture aux secondaires ||| get slave okay	count=1
return	[return] ressources ||| [return]	count=1
function_name	maximal de [function_name_2] ||| [function_name_1] num [function_name_2]	count=4
function_name	[function_name_1] mime d'un ||| [function_name_2] [function_name_1]	count=4
function_name	facet ||| facet	count=3
function_name	[function_name_1] contrôle ||| [function_name_1] [function_name_2]	count=1
return	entre les ||| void	count=1
function_name	[function_name_1] de relation ||| [function_name_2] [function_name_1]	count=2
function_name	de la ||| rzap	count=1
arg_pair	un seul ||| string $field_override	count=1
function_name	du tampon fourni ||| buffer	count=1
function_name	la longueur maximale d'une ||| max	count=1
arg_pair	domaine courant pour ||| string $domain string $msgid1	count=1
function_name	la dernière ||| error	count=2
namespace	seconde contient ||| mongogridfs	count=1
function_name	le prochain résultat du ||| next	count=1
arg_pair	publier à ||| sammessage $msg	count=1
return	les métadonnées ||| mongodb	count=1
arg_pair	pour event ||| resource $event mixed $readcb	count=1
return	de caractères d'instance ||| sdo_das_xml_document	count=1
function_name	équivalence ||| eqv	count=1
function_name	[function_name_1] pdf ||| [function_name_2] begin [function_name_1]	count=4
function_name	trace de la pile ||| trace as	count=1
function_name	cubrid_drop() est utilisée ||| cubrid drop	count=2
function_name	à détruire un ||| delete	count=1
return	considère ||| int	count=1
function_name	terme ||| terms upper bound	count=2
namespace	le flux ||| gmagick	count=1
function_name	une trace pour chaque ||| trace	count=1
function_name	[function_name_1] couche ||| [function_name_2] [function_name_1]	count=1
function_name	utilisée sur le dossier ||| zip entry compressionmethod	count=1
return	extrait les ||| array	count=1
arg_pair	une variable ||| string $default	count=1
function_name	relation ||| dbplus	count=3
function	le flux [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	statut spécifié grâce ||| task status	count=1
function_name	la file de ||| queue	count=2
arg_pair	que les ||| int $day	count=1
function_name	appelé lors ||| end	count=1
function_name	terme à partir duquel ||| set terms upper bound	count=1
function_name	de l'entier ||| decbin	count=1
function_name	tous les paramètres ||| to	count=1
function_name	ferme ||| cubrid close	count=1
rest	et [function_2] ||| [return_1] ftp [function_2]	count=2
function_name	qualité de la compression ||| compression quality	count=1
function_name	[function_name_1] largeur ||| [function_name_1] text [function_name_2]	count=1
function_name	document html depuis ||| save html	count=1
function_name	lit le parent ||| parents	count=1
function_name	fonction retourne une ||| get	count=2
arg_pair	la base de ||| string $database_name	count=2
function_name	de contrôle ||| control	count=1
function_name	modèle 3d [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	et sur ||| string	count=1
arg_pair	la fonction mktime() excepté ||| int $month	count=1
arg_pair	font ||| int $font	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] element [arg_pair_2]	count=5
function_name	pour modifier les limites ||| set resource	count=1
function_name	représenté par ||| closedict	count=1
function_name	première paire clé/valeur ||| yp first	count=1
function_name	la méthode event::del() ||| del signal	count=1
arg_pair	chaîne str à la ||| string $str	count=1
return	cette méthode ||| mixed	count=1
arg_pair	avec une des fonctions ||| resource $psdoc float $black	count=1
namespace	du document dans la ||| harudoc	count=1
function_name	est similaire [function_name] ||| [function_name]	count=3
function_name	fourni et extrait dans ||| mailparse	count=1
arg_pair	jeu de résultats result ||| int $index	count=1
return	curseur typiquement parcourt un ||| mongocommandcursor	count=1
function_name	police et la ||| font	count=1
arg_pair	la requête sql query ||| string $query resource $link_identifier	count=1
function_name	filtre entier à ||| filter range	count=1
function_name	configure les couleurs actives ||| color set	count=1
function_name	récupère la [function_name_2] ||| [function_name_1] current [function_name_2]	count=2
namespace	cloner l'exception ||| exception	count=1
arg_pair	crée ||| int $mode	count=1
function_name	http de ||| apache request	count=1
function_name	l'étape pendant l'entrainement rprop ||| get rprop	count=1
arg_pair	domaine courant ||| string $msgid1	count=1
function_name	[function_name_1] de version ||| [function_name_1] client [function_name_2]	count=1
function_name	ibase ||| ibase	count=7
namespace	fin et ||| mongocursorinterface	count=1
function_name	la position du champ ||| field	count=1
function_name	fichiers ||| uudecode	count=1
arg_pair	tiff ||| bool $thumbnail	count=1
return	pixels ||| string	count=1
namespace	à la méthode ||| samconnection	count=1
function_name	seul ||| rewind	count=1
function_name	sur le dossier ||| entry compressionmethod	count=1
namespace	clé et les ||| arrayobject	count=1
arg_pair	réponse au client ||| string $actor	count=1
function_name	[function_name_1] préparée ||| [function_name_1] [function_name_2]	count=1
arg_pair	[arg_pair] l'instance de ||| [arg_pair]	count=1
function_name	[function_name_1] la couleur ||| [function_name_1] image pixel [function_name_2]	count=1
return	appelle cette fonction ||| bool	count=1
function_name	avaient été ajoutés ||| newt	count=1
function_name	retourne ||| get to	count=1
namespace	si un fichier ||| pharfileinfo	count=1
function_name	vérifie ||| is xml	count=1
function_name	seule la ||| open	count=1
function_name	d'une chaîne ||| string	count=1
arg_pair	[arg_pair] php ||| [arg_pair]	count=1
namespace	la file d'attente s'interrompt ||| function	count=1
function_name	session ||| is in session	count=2
function_name	l'écran ||| imagegrabscreen	count=1
function_name	nom de l'entrée courante ||| filename	count=1
return	deux collections : ||| mongodb	count=1
function_name	encodés qui s'y ||| mailparse uudecode all	count=1
arg_pair	sur le flux imap ||| resource $imap_stream	count=1
function_name	ajoute un élément enfant ||| add child	count=1
namespace	spécifié par ||| function	count=6
arg_pair	de la ligne ||| int $row	count=1
namespace	la [namespace] et ||| [namespace]	count=1
namespace	de ||| ev	count=3
function_name	candidate en cascade ||| cascade	count=1
function	champ à [arg_pair_2] ||| [function_name_1] name resource $result [arg_pair_2]	count=1
function_name	décrivant l'erreur survenue lors ||| error	count=1
function_name	du texte à 0 ||| text	count=1
function_name	d'objets ||| batch size	count=2
arg_pair	sur ||| string $src	count=1
function_name	[function_name_1] [function_name_2] représentée ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] symbolique correspondant ||| [function_name_2] [function_name_1]	count=1
function_name	demande courante ||| request	count=1
function_name	le code erreur d'une ||| cubrid error code	count=1
function_name	peut être utilisé ||| maxdb	count=1
namespace	une classe ||| reflectionclass	count=6
function_name	une ||| msql create db	count=1
arg_pair	paramètre script comme ||| string $script	count=1
function_name	profils de l'image ||| image profiles	count=2
arg_pair	false si une ||| resource $result	count=1
function_name	des variables [function_name] ||| [function_name]	count=1
return	retourne la ||| array	count=1
function_name	de sévérité des messages ||| min message severity	count=1
namespace	utile uniquement ||| mongoclient	count=1
arg_pair	une ||| string $server_key	count=2
arg_pair	similaire à la ||| resource $result	count=2
function_name	avec ||| modify principal	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] bool $flag [arg_pair_2]	count=8
function_name	le nombre de ||| field count	count=2
function_name	extrêmes ||| extrema	count=1
function_name	informations sur la ||| msg stat	count=1
return	en incluant ||| void	count=1
arg_pair	hyperlien à la ||| float $lly	count=1
function_name	fonction est similaire ||| by	count=1
function_name	page sous la forme ||| image page	count=1
function_name	est actuellement en fonctionnement ||| running	count=1
arg_pair	sur la ||| resource $relation	count=1
arg_pair	la constante imagetype_xxx fournie ||| bool $include_dot	count=1
arg_pair	fonction cubrid_lob2_bind() est ||| string $bind_value_type	count=1
namespace	modules ||| mongolog	count=1
function_name	ax || ||| least squares by svd	count=1
arg_pair	l'action pour un traçage ||| resource $connection string $action_name	count=1
function_name	[function_name_1] des champs ||| [function_name_1] [function_name_2]	count=1
function	[function_name_1] imagetype_xxx ||| [function_name_1] int $imagetype [arg_pair_2]	count=1
function_name	à un marqueur ||| bind array by	count=1
function	de l'image [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	la fin ||| add	count=1
function_name	la méthode de ||| zip entry compressionmethod	count=1
function_name	elle prend plus de ||| set max	count=1
function_name	stocker les itérateurs ajoutés ||| array iterator	count=1
function_name	fonction peut ||| set	count=1
function_name	fonction rewinddir() ||| rewind	count=1
function_name	formulaire ||| fieldgroup	count=1
function_name	la gestion ||| odbc binmode	count=1
function_name	encodés qui s'y trouvent ||| mailparse	count=1
function_name	sous-chaîne spécifiée ||| substring data	count=1
return	les paramètres ||| string	count=1
function_name	[function_name] et ||| run [function_name]	count=3
namespace	un yar_client sur ||| yar_client	count=1
return	sert ||| bool	count=1
arg_pair	[arg_pair] index et ||| [arg_pair]	count=3
function_name	de caractères ||| iconv set encoding	count=2
function_name	est [function_name_2] ||| [function_name_1] [function_name_2]	count=39
function_name	bytecode d'une classe existante ||| bcompiler write class	count=1
function_name	fait ||| proc close	count=2
function_name	lignes de la ||| rzap	count=1
namespace	envoyer au client ||| mongocursorinterface	count=1
arg_pair	lie un ||| string $sql_param mixed $param	count=1
function_name	loadfromstring() ||| save to	count=1
function_name	ligne d'aide courante ||| help line	count=1
function_name	nombre de champs colonnes ||| dbase numfields	count=1
function_name	récupère la taille de ||| mb strlen	count=1
arg_pair	à une source ||| string $password int $cursor_type	count=1
arg_pair	dans un ||| int $value	count=1
function_name	le drm [function_name] actif pour ||| [function_name] protection	count=1
arg_pair	le changement ||| resource $ann float $sarprop_step_error_shift	count=1
function_name	exception ||| exception callback	count=2
function_name	de php ||| phpversion	count=1
namespace	retourne le ||| gmagickdraw	count=1
arg_pair	deux ||| mongodb $db string $prefix	count=1
function_name	la hauteur de l'image ||| imagesy	count=1
function_name	le nombre ||| num	count=12
arg_pair	le changement de ||| float $sarprop_step_error_shift	count=1
namespace	fin ||| eventbuffer	count=1
function_name	le contenu courant ||| ob get	count=1
return	algorithme de tri qui ||| void	count=1
function_name	va changer ||| rrename	count=1
namespace	opération d'écriture ||| mongowritebatch	count=1
function_name	forme en incluant ||| destroy	count=1
function_name	libère les ||| ifx free	count=1
function_name	pile ||| push	count=1
function_name	distant snmp de définir ||| set	count=1
arg_pair	mode d'accès ||| int $mode	count=1
function_name	email formatée correctement selon ||| rfc822 write address	count=1
function_name	optimise ||| optimize	count=1
function_name	toutes ||| add	count=1
function_name	cette ||| newt form destroy	count=2
function	l'échelle de [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	transaction en cours pointée ||| bool	count=1
function_name	récupère la [function_name_2] ||| [function_name_1] [function_name_2]	count=29
function_name	elle prend plus ||| max poll time	count=1
function_name	définit la ||| set facet enum	count=1
function_name	contenant le [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	secondes ||| time	count=1
function_name	session curl à ||| curl	count=1
arg_pair	exp ||| number $base number $exp	count=1
function_name	personnalisées ||| set metadata	count=2
function_name	du champ ||| cubrid field	count=1
function	schéma [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	élément avec un identifiant ||| by id	count=1
function_name	est une nom ||| is	count=1
arg_pair	jours du calendrier ||| int $month int $day	count=1
arg_pair	mssql locale ou distante ||| bool $is_output bool $is_null	count=1
function_name	ouvre [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	envoie ||| send action	count=2
arg_pair	fonction radius_config() ||| string $secret	count=1
function_name	d'attente s'interrompt si ||| max poll time	count=1
function_name	l'attribut dans ||| attribute ns	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] response [function_name_1]	count=4
function_name	translation de l'origine du ||| translate	count=1
function_name	le dernier ||| last insert id	count=1
return	supprime ||| int	count=1
return	lit la ||| int	count=2
arg_pair	jeu de ||| resource $stmt	count=1
function_name	seule ||| ps open	count=1
function_name	rappel [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	l'échelle les entrées dans ||| scale	count=1
return	la valeur de ||| mixed	count=1
function_name	cette ||| element	count=1
function_name	d'une notification ||| gupnp service proxy add notify	count=1
return	retourne un tableau d'erreurs ||| array	count=1
return	accéder à un ||| resource	count=1
function	un tableau [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	la ||| rzap	count=1
namespace	ne peuvent pas ||| pharfileinfo	count=1
function_name	fonction geoip_country_code3_by_name() retourne les ||| geoip country code3	count=1
namespace	l'exception sous forme d'une ||| exception	count=1
arg_pair	la position offset ||| int $pri	count=1
function_name	service ||| win32	count=1
function_name	premier attribut de ||| ldap first attribute	count=2
function_name	envoi tous ||| loop	count=1
return	réponse en retour ||| void	count=1
arg_pair	d'un document ||| int $page	count=1
arg_pair	couleur de fond ||| string $format	count=1
function_name	de ligne ||| fetch column	count=1
namespace	une requête ||| soapserver	count=1
arg_pair	un index spécifié ||| int $field_index	count=1
function_name	[function_name_1] action qui ||| [function_name_1] [function_name_2]	count=1
arg_pair	les paramètres ||| int $year	count=2
arg_pair	de str ||| string $str int $phonemes	count=1
function_name	les caractères spéciaux ||| escape	count=2
function_name	la méthode oauthprovider::consumerhandler() ||| callconsumer	count=1
function_name	sur le ||| entry	count=1
function	le flux [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	[arg_pair_1] examine la ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	du fichier filename ||| string $filename	count=2
function_name	au service exposé par ||| gupnp service proxy	count=1
function_name	d'attente s'interrompt si ||| eio	count=1
function_name	passés sont ||| gmmktime	count=1
function_name	guid binaire de ||| guid	count=1
function_name	partir d'une ||| load	count=1
arg_pair	fonction est identique à ||| string $string	count=1
function_name	le profil ||| profile	count=1
function_name	[function_name_1] colonne courant ||| [function_name_2] [function_name_1]	count=1
function_name	sommaire de leur contenu ||| imap fetch overview	count=1
function_name	serveur d'administration kerberos ||| kadm5	count=1
function_name	encodés qui s'y trouvent ||| uudecode all	count=1
arg_pair	excepté le ||| int $hour	count=1
function_name	de rappel pour readline ||| readline callback handler	count=1
function_name	facet qui ||| set facet	count=1
function_name	retourne tous ||| string	count=1
function_name	le mois month ||| in month	count=1
function_name	un ||| set metadata	count=2
namespace	deux collections ||| mongogridfs	count=1
return	client ||| bool	count=1
arg_pair	de contexte log_cmd_delete lors ||| array $server array $writeoptions	count=1
function_name	une liste des noms ||| names	count=1
function_name	lit les extrêmes pour ||| extrema	count=1
function_name	pour le déchargement ||| mcrypt generic deinit	count=2
arg_pair	cubrid_lob2_bind() ||| mixed $bind_value string $bind_value_type	count=1
function_name	de réplication ||| hosts	count=1
function_name	d'exécution de postgresql associée ||| pg result	count=1
function_name	la fonction geoip_org_by_name() ||| geoip org by	count=1
return	[return] responsable ||| [return]	count=1
function_name	bloc ||| block	count=1
function_name	protège une ||| pg escape string	count=1
function_name	une ||| mysql query	count=1
arg_pair	buffer buf via ||| resource $socket string $buf	count=1
arg_pair	changement de ||| float $sarprop_step_error_shift	count=1
function_name	utilisée pour définir ||| module	count=1
function_name	récupère les ||| func get	count=1
function_name	couleur courante de remplissage ||| gray fill	count=1
function_name	en incluant ||| newt	count=1
function_name	configure les paramètres ||| set auth type	count=1
namespace	envoie une réponse ||| soapserver	count=1
function_name	d'une archive phar est ||| is	count=1
function_name	écrit le ||| bcompiler write	count=1
namespace	boucle libeio tant ||| function	count=1
function_name	non les caractères brutes ||| raw	count=1
function_name	[function_name_1] les modificateurs ||| [function_name_1] [function_name_2]	count=1
arg_pair	de needle dans la ||| string $needle	count=1
return	de données en ||| bool	count=1
function_name	résultants et les ||| size	count=1
function_name	la requête [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	de jacobi ||| jacobi	count=1
return	et les ||| void	count=1
function_name	tampon [function_name] associé avec ||| get [function_name]	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] resolv conf [arg_pair_2]	count=3
return	prend ||| void	count=1
arg_pair	à ingres_fetch_array() ||| int $result_type	count=1
namespace	recherche sur ||| function	count=1
function_name	cache ||| cache	count=1
return	le coin en ||| bool	count=1
function_name	cette ||| construct	count=1
return	définit [return] ||| [return]	count=2
arg_pair	à l'écoute ||| int $numerator int $denominator	count=1
namespace	mémoire ||| function	count=1
function_name	retourne une chaîne de ||| get	count=3
function_name	établit ||| with url	count=2
namespace	méthode ||| phardata	count=1
return	un traitement ||| bool	count=1
arg_pair	sans le paramètre onoff ||| bool $onoff	count=1
function_name	récupère la valeur ||| get string	count=1
function_name	être utilisée que pour ||| set metadata	count=1
function_name	un serveur ldap situé ||| ldap connect	count=1
function	la largeur [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	de la largeur spécifiée ||| float $width	count=1
function_name	données rrd sous ||| rrd fetch	count=2
function_name	que pour stocker ||| set	count=1
return	paramètres de ||| string	count=1
function_name	les valeurs de ||| get values	count=1
namespace	régression ||| svmmodel	count=4
arg_pair	ou une ||| string $name	count=1
namespace	du texte lors d'une ||| gmagickdraw	count=1
arg_pair	les autres fonctions eio_* ||| callable $execute int $pri	count=1
function_name	d'erreur de la dernière ||| error	count=1
namespace	une pile ||| function	count=1
function_name	des ||| form	count=1
function_name	résultats ||| cubrid result	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] namespace decl handler [arg_pair_2]	count=1
function	test sur [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	paire ||| socket pair	count=2
function_name	interface de rappel pour ||| callback handler	count=1
function_name	cipher ||| cipher	count=1
namespace	signature d'en-tête oauth ||| oauth	count=1
function_name	[function_name_1] de documents ||| [function_name_2] [function_name_1]	count=2
function	un tableau php var_array [function_name_1] [arg_pair_2] vers un tableau pl/sql ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	dans la boîte ||| int $options	count=1
function_name	seule image représentant ||| image	count=1
function_name	transaction remet la connexion ||| commit	count=1
function_name	retournant un ||| query	count=1
function_name	cette fonction ||| set module	count=1
function_name	[function_name] sera ||| [function_name] last	count=3
function_name	commence une définition de ||| begin	count=1
function_name	au champ ||| field flags	count=1
function_name	la file ||| set	count=1
arg_pair	soit terminé, ou ||| int $status int $options	count=1
return	requête si plusieurs ||| bool	count=1
return	[return] nouveau ||| [return]	count=3
arg_pair	la fonction cubrid_connect() est ||| string $passwd bool $new_link	count=1
function_name	à la ||| close	count=1
return	nécessaire pour le ||| string	count=1
function_name	est identique à ||| eregi	count=1
function_name	défini l'époque maximale candidate ||| set cascade max cand	count=1
arg_pair	sequence et ||| string $sequence	count=1
namespace	la ||| recursivetreeiterator	count=3
function_name	terme sur ||| terms	count=1
arg_pair	terminé, ou qu'un ||| int $options	count=1
return	de mémoire ||| bool	count=1
function_name	la file d'attente s'interrompt ||| eio set max	count=1
return	var ||| int	count=1
namespace	des lignes par ||| function	count=1
function_name	contenu courant du ||| get	count=1
function_name	récupère la ||| mb	count=1
namespace	de compression utilisée sur ||| function	count=1
return	ne ||| string	count=1
namespace	par les données de ||| function	count=1
arg_pair	messages spécifiés par msglist ||| string $msglist	count=1
function_name	libère un descripteur alloué ||| oci free descriptor	count=1
function_name	du fichier ||| mailparse uudecode all	count=1
function_name	colonnes de la base ||| dbase numfields	count=1
function_name	la première contient ||| construct	count=1
function_name	un verrou sur ||| dbplus getlock	count=1
function_name	champ ||| mysql field seek	count=1
function_name	d'attente ||| eio	count=1
namespace	phar actuelle ||| phar	count=1
function_name	largeur ||| pdf stringwidth	count=2
function_name	antislashs ||| escape	count=1
function_name	tous les composants qui ||| destroy	count=1
arg_pair	destinataires cc [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	dans subject ||| int $count	count=2
arg_pair	d'un fichier faisant ||| int $length	count=1
function_name	candidate en cascade ||| set cascade	count=1
function_name	binaire et ||| binary	count=1
function_name	initialise un nouveau pattern ||| begin pattern	count=1
function_name	exception ||| set exception callback	count=2
function_name	timestamp ||| timestamp	count=2
function_name	place des ||| db2	count=1
arg_pair	length octets depuis le ||| int $length	count=1
arg_pair	l'url repos_url du référentiel ||| string $repos_url	count=1
function_name	méthode d'entrelacement de ||| interlace scheme	count=1
function_name	fonction retourne le type ||| type	count=1
function_name	la ||| include	count=3
function_name	fils de ||| children	count=1
namespace	à ||| directory	count=2
return	erreur niveau dans ||| int	count=1
function_name	première paire ||| yp first	count=1
arg_pair	excepté le ||| int $minute	count=1
function_name	[function_name_1] longueur du ||| [function_name_2] [function_name_1]	count=1
rest	au [function_2] ||| [return_1] show text [function_2]	count=1
namespace	ou d'une url ||| function	count=1
function_name	elle prend plus ||| eio	count=1
function_name	nouvel attribut ||| set attribute	count=1
function_name	la configuration courante dans ||| save config	count=1
arg_pair	font et size ||| float $fontsize	count=1
function_name	détruit l'élément ||| unset	count=1
function_name	de chiffrement de ||| mcrypt	count=1
namespace	le tableau ||| function	count=1
function_name	défini les drapeaux d'une ||| flags	count=1
return	un descripteur ||| bool	count=1
arg_pair	source et retourne ||| int $blocksize	count=1
namespace	sur le dossier d'archives ||| function	count=1
function_name	glob() de la ||| glob	count=1
function_name	pagination ldap [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	que gestionnaire ||| event handler	count=1
function	machine maître [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	bloc de mémoire partagée ||| int $shmid	count=1
arg_pair	puis ||| string $delimiter string $enclosure	count=1
return	identique à la fonction ||| void	count=1
function_name	seule [function_name] ||| get nr [function_name]	count=2
function_name	définir ||| set module	count=2
function_name	[function_name_1] binaire et ||| [function_name_1] [function_name_2]	count=1
function_name	caractères d'instance xml ||| string	count=1
arg_pair	[arg_pair_1] suppression d'un ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	le nom d'un champ ||| field name	count=1
function_name	[function_name_1] ibase sans ||| [function_name_2] [function_name_1]	count=2
function_name	de caractères passée en ||| db2 escape string	count=1
function_name	champ spécifié par ||| field	count=2
arg_pair	horizontale et ||| float $x	count=1
function_name	le nombre de champs ||| dbase numfields	count=1
arg_pair	connexion spécifiée ||| resource $connection	count=1
arg_pair	les ||| array $record	count=1
arg_pair	couleur color dans l'image ||| int $y2 int $color	count=1
function_name	défini ||| set error log	count=2
function_name	de la prochaine requête ||| cubrid next	count=1
namespace	et que ||| mongocursorinterface	count=1
function_name	[function_name] et retourne ||| run [function_name]	count=3
function_name	fonctionne avec ||| proc	count=1
function_name	compte les éléments ||| count	count=1
