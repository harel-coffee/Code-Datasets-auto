ArrayAccess offset Get $konum	değerin döndürüleceği konum
ArrayAccess mixed offset Get	her türde değer dönebilir
ArrayAccess mixed offset Get mixed $konum	konumdaki değeri d&ouml;nd&uuml;r&uuml;r
ArrayAccess offset Unset $konum	boşaltılacak konum
ArrayAccess void offset Unset mixed $konum	konum boşaltılır
DateInterval create From Date String $zaman	tarihe göreli kısımlar
DateInterval DateInterval create From Date String	başarılıysa yeni bir dateinterval nesnesi döndürür
DateInterval DateInterval create From Date String string $zaman	dizgenin g&ouml;reli kısımlarından bir dateinterval nesnesi d&ouml;nd&uuml;r&uuml;r
DOMAttr construct $değer	özniteliğin değeri
DOMAttr construct $isim	özniteliğin ismi
DOMAttr string construct string $isim string $değer	yeni bir domattr nesnesi oluşturur
DOMCharacterData append Data $veri	eklenecek dizge
DOMCharacterData void append Data string $veri	d&uuml;ğ&uuml;m&uuml;n karakter verisinin sonuna bir dizge ekler
DOMCharacterData delete Data $başlangıç	silinecek alt dizgenin başlangıcı
DOMCharacterData delete Data $uzunluk	silinecek karakter sayısı
DOMCharacterData void delete Data int $başlangıç int $uzunluk	d&uuml;ğ&uuml;mden belirtilen alt dizgeyi siler
DOMCharacterData insert Data $başlangıç	veri dizgesinin yerleştirileceği konum
DOMCharacterData insert Data $veri	yerleştirilecek alt dizge
DOMCharacterData void insert Data int $başlangıç string $veri	16 bitlik birimlerle belirtilen konuma bir dizge yerleştirir
DOMDocument construct $kodlama	xml bildiriminin encoding özniteliğinin değeri
DOMDocument construct $sürüm	xml bildiriminin version özniteliğinin değeri
DOMDocument string construct string $sürüm string $kodlama	yeni bir domdocument nesnesi oluşturur
DOMDocument create Attribute NS $uri	isim alanını betimleyen adres
DOMDocument create Attribute NS $önekliAd	önek:öznitelik biçeminde etiket ismi
DOMDocument DOMAttr create Attribute NS	bir hata oluşursa false yoksa yeni bir domattr nesnesi döner
DOMDocument DOMAttr create Attribute NS string $uri string $önekliAd	yeni bir isim alanlı &ouml;znitelik d&uuml;ğ&uuml;m&uuml; oluşturur
DOMDocument create CDATASection $veri	cdata içeriği
DOMDocument DOMCDATASection create CDATASection	bir hata oluşursa false yoksa yeni bir domcdatasection nesnesi döner
DOMDocument DOMCDATASection create CDATASection string $veri	yeni bir cdata d&uuml;ğ&uuml;m&uuml; oluşturur
DOMDocument create Comment $veri	açıklamanın içeriği
DOMDocument DOMComment create Comment	bir hata oluşursa false yoksa yeni bir domcomment nesnesi döner
DOMDocument DOMComment create Comment string $veri	yeni bir a&ccedil;ıklama d&uuml;ğ&uuml;m&uuml; oluşturur
DOMDocument DOMDocumentFragment create Document Fragment	bir hata oluşursa false yoksa yeni bir domdocumentfragment nesnesi döner
DOMDocument DOMDocumentFragment create Document Fragment	yeni bir belge b&ouml;l&uuml;t&uuml; oluşturur
DOMDocument create Element NS $uri	isim alanını betimleyen adres
DOMDocument create Element NS $değer	elemanın değeri
DOMDocument create Element NS $önekliAd	önek:etiket biçeminde etiket ismi
DOMDocument DOMElement create Element NS	bir hata oluşursa false yoksa yeni bir domelement nesnesi döner
DOMDocument DOMElement create Element NS string $uri string $önekliAd string $değer	isim alanlı bir eleman d&uuml;ğ&uuml;m&uuml; oluşturur
DOMDocument create Entity Reference $isim	öğe gönderiminin içeriği
DOMDocument DOMEntityReference create Entity Reference	bir hata oluşursa false yoksa yeni bir domentityreference nesnesi döner
DOMDocument DOMEntityReference create Entity Reference string $isim	yeni bir &ouml;ğe bildirimi d&uuml;ğ&uuml;m&uuml; oluşturur
DOMDocument create Processing Instruction $veri	işlem komutunun içeriği
DOMDocument create Processing Instruction $hedef	işlem komutunun hedefi
DOMDocument DOMProcessingInstruction create Processing Instruction	bir hata oluşursa false yoksa yeni bir domprocessinginstruction nesnesi döner
DOMDocument DOMProcessingInstruction create Processing Instruction string $hedef string $veri	yeni bir işlem komutu d&uuml;ğ&uuml;m&uuml; oluşturur
DOMDocument create Text Node $içerik	metnin içeriği
DOMDocument DOMText create Text Node	bir hata oluşursa false yoksa yeni bir domtext nesnesi döner
DOMDocument DOMText create Text Node string $içerik	yeni bir metin d&uuml;ğ&uuml;m&uuml; oluşturur
DOMDocument get Element By Id $id	elemanın eşsiz idsi
DOMDocument DOMElement get Element By Id	aranan eleman yoksa null varsa bir domelement nesnesi döner
DOMDocument DOMElement get Element By Id string $id	id'si belirtilen elemanı d&ouml;nd&uuml;r&uuml;r
DOMDocument import Node $düğüm	belgeye dahil edilecek düğüm
DOMDocument import Node $içiçe	true belirtiliği takdirde düğüm alt düğümleriyle birlikte belgeye dahil edilir
DOMDocument DOMNode import Node	düğüm kopyalanamazsa false yoksa kopyalanan düğümü döndürür
DOMDocument DOMNode import Node DOMNode $düğüm bool $içiçe	belgeye bir d&uuml;ğ&uuml;m dahil eder
DOMDocument load $dosya	xml belgenin dosya yolu
DOMDocument load $seçenekler	bit seviyesinde veya lanmış olarak libxml sabitleri
DOMDocument mixed load	başarı durumunda true başarısızlık durumunda false döner
DOMDocument mixed load string $dosya int $seçenekler	xml belgeyi bir dosyadan y&uuml;kler
DOMDocument load HTML $dizge	html belgeyi içeren dizge
DOMDocument bool load HTML	başarı durumunda true başarısızlık durumunda false döner
DOMDocument bool load HTML string $dizge	html belgeyi bir dizgeden y&uuml;kler
DOMDocument load HTMLFile $dosya	html belgeyi içeren dosyanın yolu
DOMDocument bool load HTMLFile	başarı durumunda true başarısızlık durumunda false döner
DOMDocument bool load HTMLFile string $dosya	html belgeyi bir dosyadan y&uuml;kler
DOMDocument load XML $dizge	xml belgeyi içeren dizge
DOMDocument load XML $seçenekler	bit seviyesinde veya lanmış olarak libxml sabitleri
DOMDocument mixed load XML	başarı durumunda true başarısızlık durumunda false döner
DOMDocument mixed load XML string $dizge int $seçenekler	xml belgeyi bir dizgeden y&uuml;kler
DOMDocument save $seçenekler	ek seçenekler
DOMDocument save $dosya	xml belgenin kaydedileceği dosyanın yolu
DOMDocument int save	bir hata oluşmuşsa false yoksa yazılan bayt sayısı döner
DOMDocument int save string $dosya int $seçenekler	dahili xml ağacını bir dizge olarak dosyaya yazar
DOMDocument save XML $seçenekler	ek seçenekler
DOMDocument save XML $düğüm	xml belgenin tamamını değil de sadece bir düğümünü xml bildirimi olmaksızın çıktılamak için kullanılır
DOMDocument string save XML	bir hata oluşursa false yoksa xml belge döner
DOMDocument string save XML DOMNode $düğüm int $seçenekler	dahili xml ağacını bir dizge olarak &ccedil;ıktılar
DOMDocument schema Validate $dosya	şema dosyasının yolu
DOMDocument bool schema Validate	başarı durumunda true başarısızlık durumunda false döner
DOMDocument bool schema Validate string $dosya	belgeyi bir şema dosyasına g&ouml;re doğrular
DOMDocument schema Validate Source $şema	şemayı içeren dizge
DOMDocument bool schema Validate Source	başarı durumunda true başarısızlık durumunda false döner
DOMDocument bool schema Validate Source string $şema	belgeyi bir şema dizgesine g&ouml;re doğrular
DOMDocument bool validate	başarı durumunda true başarısızlık durumunda false döner
DOMDocument bool validate	belgeyi dtd'sine g&ouml;re doğrular
DOMDocument xinclude $seçenekler	libxml sabitleri
DOMDocument int xinclude	belgeye dahil edilen dosyaların sayısı
DOMDocument int xinclude int $seçenekler	bir domdocument nesnesindeki xinclude dosyalarını belgeye dahil eder
DOMElement get Attribute $isim	özniteliğin ismi
DOMElement string get Attribute	isim özniteliği yoksa boş bir dizge varsa öznitelik değerini içeren bir dizge döner
DOMElement string get Attribute string $isim	ismi belirtilen &ouml;zniteliğin değerini d&ouml;nd&uuml;r&uuml;r
DOMElement get Attribute Node NS $uri	isim alanını betimleyen adres
DOMElement get Attribute Node NS $isim	önek:öznitelik biçeminde öznitelik ismi
DOMElement DOMAttr get Attribute Node NS	öznitelik düğümü
DOMElement DOMAttr get Attribute Node NS string $uri string $isim	ismi ve isim alanı belirtilen &ouml;znitelik d&uuml;ğ&uuml;m&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
DOMElement get Attribute NS $uri	isim alanını betimleyen adres
DOMElement get Attribute NS $isim	önek:öznitelik biçeminde öznitelik ismi
DOMElement string get Attribute NS	isim özniteliği yoksa boş bir dizge varsa öznitelik değerini içeren bir dizge döner
DOMElement string get Attribute NS string $uri string $isim	ismi ve isim alanı belirtilen &ouml;zniteliğin değerini d&ouml;nd&uuml;r&uuml;r
DOMElement get Elements By Tag Name NS $önekli_isim	önek:etiket biçeminde eleman ismi
DOMElement get Elements By Tag Name NS $uri	isim alanını betimleyen adres
DOMElement DOMNodeList get Elements By Tag Name NS	eşleşen tüm elemanları içeren yeni bir domnodelist nesnesi döner
DOMElement DOMNodeList get Elements By Tag Name NS string $uri string $önekli_isim	ismi ve isim alanı belirtilen elemanları d&ouml;nd&uuml;r&uuml;r
DOMElement has Attribute $isim	özniteliğin ismi
DOMElement bool has Attribute	başarı durumunda true başarısızlık durumunda false döner
DOMElement bool has Attribute string $isim	ismi belirtilen &ouml;znitelik mevcut mu diye bakar
DOMElement has Attribute NS $uri	isim alanını betimleyen adres
DOMElement has Attribute NS $önekli_isim	önek:etiket biçeminde öznitelik ismi
DOMElement bool has Attribute NS	başarı durumunda true başarısızlık durumunda false döner
DOMElement bool has Attribute NS string $uri string $önekli_isim	belirtilen isim alanlı &ouml;znitelik var mı diye bakar
DOMElement remove Attribute $isim	silinecek özniteliğin ismi
DOMElement bool remove Attribute	başarı durumunda true başarısızlık durumunda false döner
DOMElement bool remove Attribute string $isim	ismi belirtilen &ouml;zniteliği siler
DOMElement remove Attribute Node $öznitelik	silinecek öznitelik düğümü
DOMElement bool remove Attribute Node	başarı durumunda true başarısızlık durumunda false döner
DOMElement bool remove Attribute Node DOMAttr $öznitelik	belirtilen &ouml;znitelik d&uuml;ğ&uuml;m&uuml;n&uuml; siler
DOMElement set Attribute $değer	özniteliğin değeri
DOMElement set Attribute $isim	özniteliğin ismi
DOMElement DOMAttr set Attribute	bir hata durumunda false aksi takdirde yeni bir domattr nesnesi döner
DOMElement DOMAttr set Attribute string $isim string $değer	yeni bir &ouml;znitelik ekler
DOMElement set Attribute Node NS $öznitelik	eklenecek öznitelik düğümü
DOMElement DOMAttr set Attribute Node NS	öznitelik mevcut olanla değiştirilmişse eski düğümü yoksa null döndürür
DOMElement DOMAttr set Attribute Node NS DOMAttr $öznitelik	elemana isim alanlı yeni bir &ouml;znitelik d&uuml;ğ&uuml;m&uuml; ekler
DOMElement set Attribute NS $uri	isim alanını betimleyen adres
DOMElement set Attribute NS $değer	özniteliğin değeri
DOMElement set Attribute NS $önekli_isim	önek:öznitelik biçeminde öznitelik ismi
DOMElement void set Attribute NS string $uri string $önekli_isim string $değer	isim alanlı yeni bir &ouml;znitelik ekler
DOMElement set Id Attribute $isId	isim özniteliği bir id özniteliği olarak bildiriliyorsa true aksi takdirde false olmalıdır
DOMElement set Id Attribute $isim	özniteliğin ismi
DOMElement void set Id Attribute string $isim bool $id_olarak	ismi belirtilen &ouml;zniteliği bir id &ouml;zniteliği olarak tanımlar
DOMElement set Id Attribute Node $öznitelik	öznitelik düğümü
DOMElement set Id Attribute Node $id_olarak	isim özniteliği bir id özniteliği olarak bildiriliyorsa true aksi takdirde false olmalıdır
DOMElement void set Id Attribute Node DOMAttr $öznitelik bool $id_olarak	belirtilen &ouml;znitelik d&uuml;ğ&uuml;m&uuml;n&uuml; id t&uuml;r&uuml;nde bir &ouml;znitelik d&uuml;ğ&uuml;m&uuml; haline getirir
DOMElement set Id Attribute NS $isim	önek:öznitelik biçeminde özniteliğin ismi
DOMElement set Id Attribute NS $id_olarak	isim özniteliği bir id özniteliği olarak bildiriliyorsa true aksi takdirde false olmalıdır
DOMElement set Id Attribute NS $uri	özniteliğin isim alanını betimleyen adres
DOMElement void set Id Attribute NS string $uri string $isim bool $id_olarak	ismi ve isim alanı belirtilen &ouml;zniteliği bir id &ouml;zniteliği olarak tanımlar
DOMImplementation create Document $uri	oluşturulacak belge elemanının isim alanını betimleyen adres
DOMImplementation create Document $önekliAd	oluşturulacak belge elemanının isim alanı önekli ismi
DOMImplementation create Document $belgeTürü	oluşturulacak belgenin türü veya null
DOMImplementation DOMDocument create Document	yeni bir domdocument nesnesi
DOMImplementation DOMDocument create Document string $uri string $önekliAd DOMDocumentType $belgeTürü	belge elemanı belirtilen domdocument nesnesini oluşturur
DOMImplementation create Document Type $systemId	harici alt kümenin sistem betimleyicisi
DOMImplementation create Document Type $belgeAdı	oluşturulacak belgenin nitelikli adı
DOMImplementation create Document Type $publicId	harici alt kümenin genel betimleyicisi
DOMImplementation DOMDocumentType create Document Type	ownerdocument özelliği null olmak üzere yeni bir domdocumenttype nesnesi döner
DOMImplementation DOMDocumentType create Document Type string $belgeAdı string $publicId string $systemId	boş bir domdocumenttype nesnesi oluşturur
DOMImplementation has Feature $özellik	varlığı sınanacak özellik
DOMImplementation has Feature $sürüm	varlığı sınanacak özelliğin sürümü
DOMImplementation bool has Feature	başarı durumunda true başarısızlık durumunda false döner
DOMImplementation bool has Feature string $özellik string $sürüm	dom ger&ccedil;eklenimi belirtilen &ouml;zelliğe sahip mi diye bakar
DOMNamedNodeMap get Named Item $isim	döndürülecek düğümün ismi
DOMNamedNodeMap DOMNode get Named Item	belirtilen düğüm yoksa null varsa düğümü döndürür
DOMNamedNodeMap DOMNode get Named Item string $isim	ismi belirtilen d&uuml;ğ&uuml;m&uuml; d&ouml;nd&uuml;r&uuml;r
DOMNamedNodeMap item $indis	eşlemdeki indis
DOMNamedNodeMap DOMNode item	geçerli bir indis belirtilmemişse indis düğüm sayısına eşit veya ondan büyükse null aksi takdirde listedeki indis inci düğümü döndürür
DOMNamedNodeMap DOMNode item int $indis	indisi belirtilen d&uuml;ğ&uuml;m&uuml; d&ouml;nd&uuml;r&uuml;r
DOMNode append Child $yeni	listeye eklenecek çocuk
DOMNode DOMNode append Child	eklenen düğüm
DOMNode DOMNode append Child DOMNode $yeni	listenin sonuna yeni bir &ccedil;ocuk ekler
DOMNode bool has Attributes	başarı durumunda true başarısızlık durumunda false döner
DOMNode bool has Attributes	d&uuml;ğ&uuml;m&uuml;n &ouml;znitelikleri var mı diye bakar
DOMNode bool has Child Nodes	başarı durumunda true başarısızlık durumunda false döner
DOMNode bool has Child Nodes	d&uuml;ğ&uuml;m&uuml;n &ccedil;ocuk d&uuml;ğ&uuml;mleri var mı diye bakar
DOMNode insert Before $yeni	yeni çocuk düğüm
DOMNode insert Before $mevcut	mevcut çocuk düğüm
DOMNode DOMNode insert Before	yerleştirilen düğüm
DOMNode DOMNode insert Before DOMNode $yeni DOMNode $mevcut	yeni &ccedil;ocuğu belirtilen &ccedil;ocuğun &ouml;ncesine yerleştirir
DOMNode is Default Namespace $uri	bakılacak isim alanını betimleyen adres
DOMNode bool is Default Namespace	uri öntanımlı isim alanını betimliyorsa true aksi takdirde false döner
DOMNode bool is Default Namespace string $uri	belirtilen isim alanının &ouml;ntanımlı olup olmadığına bakar
DOMNode is Same Node $düğüm	karşılaştırılacak düğüm
DOMNode bool is Same Node	başarı durumunda true başarısızlık durumunda false döner
DOMNode bool is Same Node DOMNode $düğüm	iki d&uuml;ğ&uuml;m aynı mı diye bakar
DOMNode is Supported $sürüm	sınanacak özellik özelliğinin sürüm numarası
DOMNode is Supported $özellik	sınanacak özellik
DOMNode bool is Supported	başarı durumunda true başarısızlık durumunda false döner
DOMNode bool is Supported string $özellik string $sürüm	&ouml;zelliğin belirtilen s&uuml;r&uuml;m&uuml;n&uuml;n desteklenip desteklenmediğine bakar
DOMNode lookup Namespace URI $önek	isim alanı öneki
DOMNode string lookup Namespace URI	isim alanını betimleyen adres
DOMNode string lookup Namespace URI string $önek	isim alanı &ouml;neki belirtilen d&uuml;ğ&uuml;m&uuml;n isim alanı betimleyicisini d&ouml;nd&uuml;r&uuml;r
DOMNode lookup Prefix $uri	isim alanını betimleyen adres
DOMNode string lookup Prefix	isim alanı öneki
DOMNode string lookup Prefix string $uri	belirtilen isim alanıyla ilişkili d&uuml;ğ&uuml;m&uuml;n isim alanı &ouml;nekini d&ouml;nd&uuml;r&uuml;r
DOMNode void normalize	d&uuml;ğ&uuml;m&uuml; normalleştirir
DOMNode remove Child $eski	silinecek çocuk
DOMNode DOMNode remove Child	belirtilen çocuk silinebilmişse silinen çocuğu döndürür
DOMNode DOMNode remove Child DOMNode $eski	listeden belirtilen &ccedil;ocuğu siler
DOMNode replace Child $yeni	yeni düğüm
DOMNode replace Child $eski	eski düğüm
DOMNode DOMNode replace Child	bir hata oluşursa false yoksa eski düğüm
DOMNode DOMNode replace Child DOMNode $yeni DOMNode $eski	bir &ccedil;ocuk d&uuml;ğ&uuml;m&uuml; yenisi ile değiştirir
DOMText split Text $konum	bölme yeri
DOMText DOMText split Text	konum konumundan sonraki parçayı içeren yeni bir düğüm döner
DOMText DOMText split Text int $konum	d&uuml;ğ&uuml;m&uuml; belirtilen konumda iki d&uuml;ğ&uuml;me b&ouml;ler
DOMXPath evaluate $ifade	değerlenderelecek xpath ifadesi
DOMXPath evaluate $bağlamsal_düğüm	seçimlik olarak göreli xpath sorguları yapmak içindir
DOMXPath mixed evaluate	mümkünse sonucu bir dizge orarak döndürür değilse belirtilen xpath ifadesi ile eşleşen tüm düğümleri içeren bir domnodelist nesnesi döner
DOMXPath mixed evaluate string $ifade DOMNode $bağlamsal_düğüm	belirtilen xpath ifadesini &ccedil;&ouml;z&uuml;mler ve m&uuml;mk&uuml;nse yazılı bir sonu&ccedil; verir
DOMXPath query $ifade	değerlendirilecek xpath ifadesi
DOMXPath query $bağlamsal_düğüm	seçimlik olarak göreli xpath sorguları yapmak içindir
DOMXPath DOMNodeList query	belirtilen xpath ifade si ile eşleşen tüm düğümleri içeren bir domnodelist nesnesi döner
DOMXPath DOMNodeList query string $ifade DOMNode $bağlamsal_düğüm	belirtilen xpath ifadesini değerlendirir
ErrorException int get Severity	istisnanın önem derecesini döndürür
ErrorException int get Severity	istisnanın &ouml;nem derecesi ile d&ouml;ner
Exception void clone	istisna kopyası
Exception int get Code	istisna numarası bir integer olarak döner
Exception int get Code	istisnanın numarası ile d&ouml;ner
Exception string get File	istisnanın oluştuğu dosyanın adı ile döner
Exception string get File	istisnanın oluştuğu dosyanın adı ile d&ouml;ner
Exception string get Message	istisna iletisi bir dizge olarak döner
Exception string get Message	istisna iletisi ile d&ouml;ner
Exception Exception get Previous	mümkünse önceki exception nesnesi yoksa null döner
Exception Exception get Previous	&ouml;nceki istisnayı d&ouml;nd&uuml;r&uuml;r
Exception string get Trace As String	istisna yığıtının izini bir dizge olarak döndürür
Exception string get Trace As String	yığıt izini bir dizge olarak d&ouml;nd&uuml;r&uuml;r
Exception string to String	istisnanın string türündeki gösterimiyle döner
Exception string to String	istisnanın dizgesel g&ouml;sterimiyle d&ouml;ner
function addslashes $dizge	öncelenecek dizge
function string addslashes	öncelemli dizge
function string addslashes string $dizge	&ouml;zel karakterlerin &ouml;n&uuml;ne tersb&ouml;l&uuml; yerleştirir
function bool apache child terminate	php bir apache 1 modülü olarak çalışıyorsa apache sürümü çok evreli değilse ve child_terminate php yönergesi etkinse öntanımlı olarak etkin değildir ise true döndürür
function bool apache child terminate	bu istekten sonra apache s&uuml;recini sonlandırır
function array apache get modules	yüklü apache modülleri dizisi
function array apache get modules	y&uuml;kl&uuml; apache mod&uuml;llerinin listesini verir
function apache lookup uri $dosya_adı	istenen dosyanın ismi uri
function object apache lookup uri	url bilgisiyle ilgili nesne
function object apache lookup uri string $dosya_adı	verilen uri i&ccedil;in kısmi bir istekte bulunur ve hakkındaki t&uuml;m bilgileri d&ouml;nd&uuml;r&uuml;r
function apache note $not_adı	notun adı
function apache note $not_değeri	notun değeri
function string apache note	tek değiştirge ile çağrılırsa not_adı notunun o anki değerini döndürür
function string apache note string $not_adı string $not_değeri	apache istek notlarını alır veya atar
function array apache response headers	başarı halinde apache yanıt başlıklarını içeren bir dizi; aksi halde false döndürür
function array apache response headers	t&uuml;m http yanıt başlıklarını alır
function apache setenv $değer	değişken in yeni değeri
function apache setenv $tepe_seviye	değişkenin tüm apache katmanlarına kullanılabilen tepe seviyeye atanıp atanmayacağını belirler
function apache setenv $değişken	atanmak istenen çevre değişkeni
function bool apache setenv	başarı durumunda true başarısızlık durumunda false döner
function bool apache setenv string $değişken string $değer bool $tepe_seviye	bir apache ortam değişkeni atar
function apc cache info $sınırlı	eğer limited true ise önbellek girdilerinin bir bölümünü listelemeyecektir
function apc cache info $önbellek_türü	eğer önbellek_türü user ise kullanıcı önbellek bilgisi geri dönecektir
function array apc cache info	önbelleğe alınmış veri ve tanımlayıcı veriler dizisi; hata durumunda false
function array apc cache info string $önbellek_türü bool $sınırlı	apc'nin veri deposundan &ouml;nbellek bilgisini g&ouml;sterir
function apc clear cache $önbellek_türü	eğer önbellek_türü user ise kullanıcı önbelleği temizlenecektir aksi durumda sistem önbelleği önbelleğe alınmış dosyalar temizlenecektir
function bool apc clear cache	başarı durumunda true başarısızlık durumunda false döner
function bool apc clear cache string $önbellek_türü	apc &ouml;nbelleğini temizler
function apc compile file $dosyaadi	derlenip arakod önbelleğinde depolanacak bir php dosyasının mutlak veya göreli yol bilgisi
function bool apc compile file	başarı durumunda true başarısızlık durumunda false döner
function bool apc compile file string $dosyaadi	bir dosyayı s&uuml;zge&ccedil;lere aldırmadan arakod bytecode &ouml;nbelleğinde depolar
function apc fetch $durum	başarı durumunda true aksi durumda false değerini alır
function apc fetch $anahtar	apc_store() işlevi ile değeri depolamak için kullanılan anahtar
function mixed apc fetch	başarı durumda depolanmış değişken aksi durumda false
function mixed apc fetch string $anahtar bool $durum	depolanmış bir değişkeni &ouml;nbellekten alır
function apc store $degisken	saklanacak değişken
function apc store $anahtar	değişken depoda bu isimle saklanacaktır
function apc store $yasam_suresi	yaşam süresi ttl ; degisken yasam_suresi saniye süresince depoda saklanacaktır
function bool apc store	başarı durumunda true başarısızlık durumunda false döner
function bool apc store string $anahtar mixed $degisken int $yasam_suresi	bir değişkeni veri deposunda saklar
function apd breakpoint $hata_ayıklama_düzeyi	xxx_trace sabitlerinin toplamından veyalanmasından oluşan bir tamsayı
function bool apd breakpoint	başarı durumunda true başarısızlık durumunda false döner
function bool apd breakpoint int $hata_ayıklama_seviyesi	yorumlayıcıyı durdurur ve soketten bir satırbaşı bekler
function apd clunk $uyarı	verilecek uyarı
function apd clunk $ayraç	ayraç
function void apd clunk string $uyarı string $delimiter	bir uyarı ve yordam d&ouml;k&uuml;m&uuml; verip &ccedil;ıkar
function apd continue $hata_ayıklama_düzeyi	xxx_trace sabitlerinin toplamından veyalanmasından oluşan bir tamsayı
function bool apd continue	başarı durumunda true başarısızlık durumunda false döner
function bool apd continue int $hata_ayıklama_seviyesi	yorumlayıcıyı yeniden başlatır
function apd croak $hata_iletisi	verilecek hatanın iletisi
function apd croak $ayraç	ayraç
function void apd croak string $hata_iletisi string $ayraç	bir hata ve yordam d&ouml;k&uuml;m&uuml; verip &ccedil;ıkar
function void apd dump function table	ge&ccedil;erli işlev tablosunu &ccedil;ıktılar
function array apd dump persistent resources	geçerli çağrı yığınını içeren bir dizi
function array apd dump persistent resources	t&uuml;m kalıcı &ouml;zkaynakları bir dizi i&ccedil;inde d&ouml;nd&uuml;r&uuml;r
function array apd dump regular resources	geçerli normal özkaynakları içeren bir dizi
function array apd dump regular resources	ge&ccedil;erli normal &ouml;zkaynakların t&uuml;m&uuml;n&uuml; bir dizi olarak d&ouml;nd&uuml;r&uuml;r
function array apd get active symbols	tüm değişkenleri içeren çok boyutlu bir dizi
function array apd get active symbols	yerel etki alanında ge&ccedil;erli değişken isimlerinden oluşan bir dizi d&ouml;nd&uuml;r&uuml;r
function apd set pprof trace $döküm_dizini	profil döküm dosyasının kaydedileceği dizin
function apd set pprof trace $önek	dosya ismi için önek; pprof öntanımlıdır
function string apd set pprof trace	hedef dosyanın dosya yolunu döndürür
function string apd set pprof trace string $döküm_dizini string $önek	hata ayıklama oturumunu başlatır
function apd set session trace socket $tcp_sunucusu	tcp sunucunun ipsi ya da unix alanı bağlantı noktası bir dosya olarak
function apd set session trace socket $soket_türü	dosya tabanlı bağlantı noktaları için af_unix ya da standart tcp / ip için apd_af_inet olabilir
function apd set session trace socket $hata_ayıklama_düzeyi	xxx_trace sabitlerinin toplamından veyalanmasından oluşan bir tamsayı
function apd set session trace socket $port	herhangi bir portu kullanabilirsiniz fakat 1024ten büyük sayıları kullanmanız küçük sayıların diğer sistem tarafından kullanılıyor olma olasılığı nedeniyle daha iyidir
function bool apd set session trace socket	başarı durumunda true başarısızlık durumunda false döner
function bool apd set session trace socket string $tcp_sunucusu int $soket_türü int $port int $hata_ayıklama_seviyesi	uzaktan oturumla hata ayıklamayı başlatır
function apd set session trace $hata_ayıklama_düzeyi	xxx_trace sabitlerinin toplamından veyalanmasından oluşan bir tamsayı
function apd set session trace $döküm_dizini	profil döküm dosyasının kaydedileceği dizin
function void apd set session trace int $hata_ayıklama_seviyesi string $döküm_dizini	hata ayıklama oturumunu başlatır
function apd set session $hata_ayıklama_düzeyi	xxx_trace sabitlerinin toplamından veyalanmasından oluşan bir tamsayı
function void apd set session int $hata_ayıklama_seviyesi	ge&ccedil;erli hata ayıklama seviyesini belirtir ya da değiştirir
function array change key case $dizi	üzerinde işlem yapılacak dizi
function array change key case $büyüklük	büyük harfe dönüşüm için case_upper küçük harfe dönüşüm için case_lower öntanımlı) belirtilebilir
function array array change key case	anahtarların büyük harflerden veya küçük harflerden oluştuğu bir dizi döner
function array array change key case array $dizi int $büyüklük	bir dizideki t&uuml;m anahtarların harf b&uuml;y&uuml;kl&uuml;ğ&uuml;n&uuml; değiştirir
function array chunk $dizi	parçalanacak dizi
function array chunk $boyut	her parçanın uzunluğu
function array chunk $anahtarları_koru	true ise anahtarlar korunur
function array array chunk	her biri sıfır indisiyle başlayan boyut elemanlı dizilerden oluşan sayısal indisli çok boyutlu bir dizi döner
function array array chunk array $dizi int $boyut bool $anahtarları_koru	bir diziyi belli uzunlukta b&ouml;l&uuml;mlere ayırır
function array combine $anahtarlar	anahtar olarak kullanılacak elemanları içeren dizi
function array combine $değerler	değer olarak kullanılacak elemanları içeren dizi
function array array combine	dizilerdeki eleman sayısı aynı değilse false aksi takdirde oluşturulan ilişkisel dizi döner
function array array combine array $anahtarlar array $değerler	anahtarlar i&ccedil;in bir dizi değerler i&ccedil;in ise başka bir dizi kullanarak bir ilişkisel dizi oluşturur
function array count values $dizi	değerleri sayılacak dizi
function array array count values	dizi dizisindeki değerlerin anahtarları değerlerin sayısının ise değerleri oluşturduğu bir ilişkisel dizi döner
function array array count values array $dizi	bir dizideki t&uuml;m değerleri sayar
function array diff assoc $dizi1	karşılaştırılacak dizi
function array diff assoc	karşılaştırılacak diğer diziler
function array diff assoc $dizi2	karşılaştırılacak diğer dizi
function array array diff assoc	diğer tüm değiştirgelerde mevcut olmayan dizi1 girdilerinden oluşan bir dizi döner
function array array diff assoc array $dizi1 array $dizi2	dizilerin farkını hesaplarken ek olarak indisleri de karşılaştırır
function array diff uassoc $dizi1	karşılaştırılacak dizi
function array diff uassoc	karşılaştırılacak diğer diziler
function array diff uassoc $dizi2	karşılaştırılacak diğer dizi
function array diff uassoc $anh_karş_işlevi	karşılaştırma işlevinin ilk bileşeninin ikinci bileşenden küçük eşit veya büyük olması durumunda sıfırdan küçük eşit veya büyük bir tamsayı döndürmesi gerekir
function array array diff uassoc	diğer tüm değiştirgelerde mevcut olmayan dizi1 girdilerinden oluşan bir dizi döner
function array array diff uassoc array $dizi1 array $dizi2 callable $anh_karş_işlevi	dizilerin farkını hesaplarken ek olarak bir geri&ccedil;ağırım işlevi &uuml;zerinden indisleri de karşılaştırır
function array diff ukey $dizi1	karşılaştırılacak dizi
function array diff ukey	karşılaştırılacak diğer diziler
function array diff ukey $dizi2	karşılaştırılacak diğer dizi
function array diff ukey $anh_karş_işlevi	karşılaştırma işlevinin ilk bileşeninin ikinci bileşenden küçük eşit veya büyük olması durumunda sıfırdan küçük eşit veya büyük bir tamsayı döndürmesi gerekir
function array array diff ukey	diğer tüm değiştirgelerde mevcut olmayan dizi1 girdilerinden oluşan bir dizi döner
function array array diff ukey array $dizi1 array $dizi2 callable $anh_karş_işlevi	karşılaştırma i&ccedil;in bir geri&ccedil;ağırım işlevi kullanarak dizilerin farkını hesaplar
function array fill keys $anahtarlar	değerleri anahtar olarak kullanılacak dizi
function array fill keys $dolgu	dolgu için kullanılacak değer
function array array fill keys	doldurulmuş dizi döner
function array array fill keys array $anahtarlar mixed $dolgu	anahtarları belirtilen diziyi değerlerle doldurur
function array fill $başlangıç	döndürülecek dizinin ilk indisi
function array fill $dolgu	dolgu için kullanılacak değer
function array fill $miktar	diziye yerleştirilecek eleman sayısı
function array array fill	doldurulmuş diziyi döndürür
function array array fill int $başlangıç int $miktar mixed $dolgu	bir diziyi değerlerle doldurur
function array flip $dizi	anahtarları ile değerleri yer değiştirilecek dizi
function array array flip	bir hata oluşmuşsa null aksi takdirde belirtilen dizinin anahtarlarını değer değerlerini anahtar olarak içeren bir dizi döndürür
function array array flip array $dizi	bir dizideki anahtarlarla değerleri yer değiştirir
function array intersect uassoc $dizi2	değerleri ilk dizi ile karşılaştırılacak dizi
function array intersect uassoc $anh_karş_işlevi	karşılaştırma işlevinin ilk bileşeninin ikinci bileşenden küçük eşit veya büyük olması durumunda sıfırdan küçük eşit veya büyük bir tamsayı döndürmesi gerekir
function array intersect uassoc $dizi1	diğer dizilerin karşılaştırılacağı ilk dizi
function array intersect uassoc	değerleri ilk dizi ile karşılaştırılacak diğer dizilerin değişkenlerinin listesi
function array array intersect uassoc	tüm değiştirgelerde mevcut dizi1 değerlerini içeren bir dizi döndürür
function array array intersect uassoc array $dizi1 array $dizi2 callable $anh_karş_işlevi	dizilerin kesişimini hesaplarken ek olarak bir geri&ccedil;ağırım işlevi &uuml;zerinden indisleri de karşılaştırır
function array intersect	değerleri dizi1 dizisindeki değerlerle karşılaştırılacak diğer dizilerin değişkenlerinin listesi
function array intersect $array2	değerleri dizi1 dizisindeki değerlerle karşılaştırılacak ilk dizi
function array intersect $dizi1	aranacak ana değerleri içeren dizi
function array array intersect	tüm değiştirgelerde mevcut olan dizi1 değerlerini içeren bir dizi döner
function array array intersect array $dizi1 array $dizi2	dizilerin kesişimini hesaplar
function array key exists $anahtar	aranacak anahtar veya indis
function array key exists $dizi	anahtarın aranacağı dizi
function bool array key exists	başarı durumunda true başarısızlık durumunda false döner
function bool array key exists mixed $anahtar array $dizi	belirtilen anahtar veya indis dizide var mı diye bakar
function array keys $aynısı	arama sırasında tam karşılaştırma === yapılır
function array keys $dizi	döndürülecek anahtarları içeren dizi
function array keys $arama_değeri	belirtilmişse sadece bu değeri içeren anahtarlar döndürülür
function array array keys	dizi dizisindeki anahtarları içeren bir dizi döndürür
function array array keys array $dizi mixed $arama_değeri bool $aynısı	bir dizideki t&uuml;m anahtarları veya bir anahtar altk&uuml;mesini d&ouml;nd&uuml;r&uuml;r
function array map $işlev	her dizinin her elemanına uygulanacak geri çağırım işlevi
function array map $dizi1	elemanları işlev tarafından işlenecek ilk dizi
function array map $array	elemanları işlev tarafından işlenecek diğer diziler
function array array map	belirtilen dizilerin elemanlarının her birine işlev işlevini uyguladıktan sonra oluşan diziyi döndürür
function array array map callable $işlev array $dizi1	belirtilen dizilerin elemanlarına geri&ccedil;ağırım işlevini uygular
function array merge recursive $dizi1	diğerlerinin ardına ekleneceği dizi
function array merge recursive	kendinden öncekinin ardına eklenecek diziler
function array array merge recursive	elde edilen diziyi döndürür
function array array merge recursive array $dizi1	iki veya daha fazla sayıda diziyi ardarda ekleyerek yeni bir dizi oluşturur
function array merge $dizi1	diğerlerinin ardına ekleneceği dizi
function array merge $dizi2	katıştırılacak diğer dizilerin değişkenlerinin listesi
function array array merge	elde edilen diziyi döndürür
function array array merge array $dizi1	belirtilen dizileri ardarda ekleyerek yeni bir dizi oluşturur
function array pad $yeni_boyut	dizinin yeni boyutu
function array pad $girdi	değer eklenecek dizi
function array pad $dolgu	girdi dizisinin eleman sayısı yeni_boyut tan kısa ise eklenecek elemanların değeri
function array array pad	girdi dizisinin yeni elemanlarına dolgu değeri yerleştirilerek elde edilen yeni_boyut elemanlı yeni bir dizi ile döner
function array array pad array $girdi int $yeni_boyut mixed $dolgu	dizi boyutunu belirtilen boyuta &ccedil;ıkarırken yeni elemanlara belirtilen değeri yerleştirir
function array replace recursive $dizi	elemanları güncellenecek dizi
function array replace recursive $dizi1	ilk diziyi güncelleyecek dizi
function array array replace recursive	bir hata durumunda null aksi takdirde bir dizi döner
function array array replace recursive array $disi array $dizi1 array $dizi2	ilk dizinin elemanlarını aktarılan dizilerden ardışık olarak g&uuml;nceller
function array reverse $dizi	girdi olarak alınan dizi
function array reverse $anahtarları_koru	true belirtilirse dizideki anahtarlar korunur
function array array reverse	tersine sıralanmış diziyi döndürür
function array array reverse array $dizi bool $anahtarları_koru	diziyi tersine sıralayıp d&ouml;nd&uuml;r&uuml;r
function array slice $girdi	girdi dizisi
function array slice $indisleri_koru	array_slice() öntanımlı olarak dizi indislerini sıfırdan itbaren yeniden oluşturur
function array slice $başlangıç	başlangıç pozitif bir değerse silinecek kısmın başlangıcı girdi dizisinin başlangıcından itibaren sayılır
function array slice $uzunluk	uzunluk verilmezse başlangıç tan dizi sonuna kadar herşey silinir
function array array slice	dizinin istenen parçasıyla döner
function array array slice array $girdi int $başlangıç int $uzunluk bool $indisleri_koru	bir dizinin belli bir b&ouml;l&uuml;m&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
function array udiff assoc $veri_karş_işlevi	veri karşılaştırması için geriçağırım işlevi
function array udiff assoc $dizi1	ilk dizi
function array udiff assoc $dizi2	ikinci dizi
function array array udiff assoc	diğer değiştirgelerin hiçbirinde mevcut olmayan tüm dizi1 değerlerini içeren bir dizi ile döner
function array array udiff assoc array $dizi1 array $dizi2 callback $veri_karş_işlevi	veri karşılaştırması i&ccedil;in bir geri&ccedil;ağırım işlevi kullanarak diziler arasındaki farkı indislerine de bakarak bulur
function array udiff uassoc $veri_karş_işlevi	veri karşılaştırması için geriçağırım işlevi
function array udiff uassoc $dizi1	ilk dizi
function array udiff uassoc $anh_karş_işlevi	anahtarları indisleri ayrıca karşılaştırmak için bu işlev kullanılır
function array udiff uassoc $dizi2	ikinci dizi
function array array udiff uassoc	diğer değiştirgelerin hiçbirinde mevcut olmayan tüm dizi1 değerlerini içeren bir dizi ile döner
function array array udiff uassoc array $dizi1 array $dizi2 callback $veri_karş_işlevi callback $anh_karş_işlevi	veri ve indis karşılaştırması i&ccedil;in bir geri&ccedil;ağırım işlevi kullanarak diziler arasındaki farkı indislerine de bakarak bulur
function array udiff $veri_karş_işlevi	veri karşılaştırması için geriçağırım işlevi
function array udiff $dizi1	ilk dizi
function array udiff $dizi2	ikinci dizi
function array array udiff	diğer değiştirgelerin hiçbirinde mevcut olmayan tüm dizi1 değerlerini içeren bir dizi ile döner
function array array udiff array $dizi1 array $dizi2 callback $veri_karş_işlevi	veri karşılaştırması i&ccedil;in bir geri&ccedil;ağırım işlevi kullanarak diziler arasındaki farkı bulur
function array uintersect uassoc $dizi1	ilk dizi
function array uintersect uassoc $anh_karş_işlevi	anahtarları karşılaştırmak için geriçağırım işlevi
function array uintersect uassoc $dizi2	ikinci dizi
function array uintersect uassoc $veri_karş_işlevi	karşılaştırma için kullanıcı tarafından sağlanan bir geriçağırım işlevi kullanılır
function array array uintersect uassoc	tüm değiştirgeleri ifade etmek üzere dizi1 in tüm değerlerini içeren bir dizi ile döner
function array array uintersect uassoc array $dizi1 array $dizi2 callback $veri_karş_işlevi callback $anh_karş_işlevi	veriyi ve indisleri bir geri&ccedil;ağırım işleviyle karşılaştırarak dizilerin kesişimini hesaplarken ek olarak indislere de bakar
function array uintersect $dizi1	ilk dizi
function array uintersect $işlev	karşılaştırma için geriçağırım işlevi
function array uintersect $dizi2	ikinci dizi
function array array uintersect	tüm değiştirgeleri ifade etmek üzere dizi1 in tüm değerlerini içeren bir dizi ile döner
function array array uintersect array $dizi1 array $dizi2 callback $işlev	veriyi bir geri&ccedil;ağırım işleviyle karşılaştırarak dizilerin kesişimini hesaplar
function array unique $dizi	üzerinde işlem yapılacak dizi
function array unique $seçenekler	isteğe bağlı bu değiştirge ile işlevin davranışını değiştirebilirsiniz
function array array unique	yinelenen değerler içermeyen bir dizi döner
function array array unique array $dizi int $seçenekler	diziden yinelenen değerleri siler
function array unshift $dizi	işleme sokulacak dizi
function array unshift $dğş	diziye eklenecek değişken
function int array unshift	dizeye eklenen üye sayısı ile döner
function int array unshift array $dizi mixed $dğş	bir dizinin başlangıcına bir veya daha fazla eleman ekler
function array	burada indis = > değerler sözdizimi virgüllerle ayrılarak indis ve değerler tanımlanır
function array array	değiştirgelerle tanımlanan diziyi döndürür
function array array	bir dizi oluşturur
function arsort $seçenekler	bu değiştirge ile sıralamayı değiştirebilirsiniz
function arsort $dizi	sıralanacak dizi
function bool arsort	başarı durumunda true başarısızlık durumunda false döner
function bool arsort array $dizi int $seçenekler	bir dizinin değerlerini anahtarlarıyla ilişkilerini bozmadan tersine sıralar
function assert options $değer	seçenek için isteğe bağlı yeni değer
function assert options $seçenek	sav seçenekleri seçenek ini değiştirgesi öntanımlı açıklama assert_active assert
function mixed assert options	hata oluşursa false aksi takdirde belirtilen seçeneğin özgün değeri döner
function mixed assert options int $seçenek mixed $değer	&ccedil;eşitli kararlılık denetim se&ccedil;eneklerini a&ccedil;ar / kapar
function base64 decode $titiz	girdi base64 karakterleri dışında karakterler içeriyorsa işlev false döndürür
function base64 decode $veri	kodlaması kaldırılacak veri
function string base64 decode	başarısızlık durumunda false aksi takdirde özgün veriyi döndürür
function string base64 decode string $veri bool $titiz	mime base64 ile kodlanmış verinin kodunu a&ccedil;ar
function base64 encode $veri	kodlanacak veri
function string base64 encode	kodlanmış veri bir dizge olarak döner
function string base64 encode string $veri	veriye mime base64 kodlaması uygular
function basename $uzantı	dönen bileşenden kaldırılacak dosya uzantısı
function basename $yol	dosya yolu
function string basename	belirtilen dosya yolunun dosya ismi bileşenini döndürür
function string basename string $yol string $uzantı	dosya yolunun dosya ismi bileşenini d&ouml;nd&uuml;r&uuml;r
function bbcode add smiley $bbcode_havuzu	bbcode_create() işlevinden dönen bbcode_havuzu özkaynağı
function bbcode add smiley $kaynak	bulunduğu zaman değiştirilecek gülen surat dizgesi
function bbcode add smiley $hedef	gülen surat ile değişitirilecek dizge
function bool bbcode add smiley	başarı durumunda true başarısızlık durumunda false döner
function bool bbcode add smiley resource $bbcode_havuzu string $kaynak string $hedef	&ccedil;&ouml;z&uuml;mleyiciye g&uuml;len surat ekler
function bbcode set arg parser $bbcode_havuzu	bbcode_create() işlevinden dönen bbcode_havuz özkaynağı
function bbcode set arg parser $bbcode_degistirge_havuzu	sadece değiştirge çözümlemesi için kullanılacak olan bbcode_create() işlevinden dönen bbcode_havuz özkaynağı
function bool bbcode set arg parser	başarı durumunda true başarısızlık durumunda false döner
function bool bbcode set arg parser resource $bbcode_havuzu resource $bbcode_degistirge_havuzu	&ouml;zkaynağa değiştirge &ccedil;&ouml;z&uuml;mlemesi i&ccedil;in farklı bir kural k&uuml;mesi kullanan başka bir &ccedil;&ouml;z&uuml;mleyici ekler
function bcadd $sag_terim	dizge olarak sağ terim
function bcadd $bölüntü	bu seçimlik değiştirge ondalık iminin sağında kaç hane gösterileceğini belirler
function bcadd $sol_terim	dizge olarak sol terim
function string bcadd	iki terimin toplamını dizge olarak verir
function string bcadd string $sol_terim string $sag_terim int $olcek	iki keyfi duyarlıklı sayıyı toplar
function bccomp $sag_terim	dizge olarak sağ terim
function bccomp $olcek	seçime bağlı olcek değiştirgesi karşılaştırmada dikkate alınacak ondalık bölümden sonraki hane sayısını ayarlar
function bccomp $sol_terim	dizge olarak sol terim
function int bccomp	eğer iki terim eşitse 0 döndürür sol_terim sag_terim den büyükse 1 değilse -1 döndürür
function int bccomp string $sol_terim string $sag_terim int $olcek	iki keyfi duyarlıklı sayıyı karşılaştırır
function bcdiv $sag_terim	dizge olarak sağ terim
function bcdiv $bölüntü	bu seçimlik değiştirge ondalık iminin sağında kaç hane gösterileceğini belirler
function bcdiv $sol_terim	dizge olarak sol terim
function string bcdiv	bölme sonucunu dizge olarak hesaplar
function string bcdiv string $sol_terim string $sag_terim int $olcek	iki keyfi duyarlıklı sayıyı b&ouml;ler
function bcmul $sag_terim	dizge olarak sağ terim
function bcmul $bölüntü	bu seçimlik değiştirge ondalık iminin sağında kaç hane gösterileceğini belirler
function bcmul $sol_terim	dizge olarak sol terim
function string bcmul	sonucu dizge olarak döndürür
function string bcmul string $sol_terim string $sag_terim int $olcek	iki keyfi duyarlıklı sayıyı &ccedil;arpar
function bcompiler load exe $dosyaadi	dizge olarak exe dosya yolu
function bool bcompiler load exe	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler load exe string $dosyaadi	bcompiler exe dosyasından sınıfları okur ve oluşturur
function bcompiler load $dosyaadi	dizge olarak bz sıkıştırılmış dosya yolu
function bool bcompiler load	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler load string $dosyaadi	bz bi&ccedil;iminde sıkıştırılmış dosyadan sınıfları okur ve oluşturur
function bcompiler read $dosyatanitici	fopen() işlevinden elde edilmiş bir tanıtıcı
function bool bcompiler read	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler read resource $dosyatanitici	bir dosya tanıtıcısından sınıfları okur ve oluşturur
function bcompiler write class $dosyatanitici	fopen() işlevinden elde edilmiş bir tanıtıcı
function bcompiler write class $sinifadi	dizge olarak sınıf adı
function bool bcompiler write class	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler write class resource $dosyatanitici string $sinifadi string $genisletme	tanımlanmış bir sınıfı dosyaya yazar
function bcompiler write constant $sabitadi	dizge olarak tanımlanmış sabitin adı
function bcompiler write constant $dosyatanitici	fopen() işlevinden elde edilmiş bir tanıtıcı
function bool bcompiler write constant	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler write constant resource $dosyatanitici string $sabitadi	tanımlanmış sabiti dosyaya yazar
function bcompiler write exe footer $dosyatanitici	fopen() işlevinden elde edilmiş bir tanıtıcı
function bcompiler write exe footer $baslangickonum	derlenmiş kodun başladığı dosya konum bilgisi ftell() işlevi kullanılarak elde edilebilir
function bool bcompiler write exe footer	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler write exe footer resource $dosyatanitici int $baslangickonum	derlenmiş kodun başlangı&ccedil; konumunu ve imzasını exe t&uuml;r&uuml; bir dosyanın sonuna yazar
function bcompiler write file $dosyatanitici	fopen() işlevinden dönen bir tanıtıcı
function bcompiler write file $dosyaadi	dizge olarak kaynak dosya yolu
function bool bcompiler write file	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler write file resource $dosyatanitici string $dosyaadi	bir php kaynak dosyasını derleyerek yazar
function bcompiler write function $dosyatanitici	fopen() işlevinden dönen tanıtıcı
function bcompiler write function $islevAdi	dizge olarak işlev adı
function bool bcompiler write function	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler write function resource $dosyatanitici string $islevAdi	tanımlı bir işlevi derlenmiş olarak yazar
function bcompiler write functions from file $dosyatanitici	fopen() işlevinden dönen tanıtıcı
function bcompiler write functions from file $dosyaAdi	derlenecek dosya bu dosyayı daima include veya require deyimleri ile eklemelisiniz
function bool bcompiler write functions from file	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler write functions from file resource $dosyatanitici string $dosyaAdi	bir dosya i&ccedil;inde tanımlanmış b&uuml;t&uuml;n işlevleri derleyerek yazar
function bcompiler write header $surum	derlenmiş kodu bcompilerın eski sürümleri ile birlikte kullanabilmek için dosyayı yazarken önceki sürüm biçimi seçeneği kullanılabilir
function bcompiler write header $dosyatanitici	fopen() işlevinden dönen tanıtıcı
function bool bcompiler write header	başarı durumunda true başarısızlık durumunda false döner
function bool bcompiler write header resource $dosyatanitici string $surum	bcompiler dosya başlığını yazar
function bcpow $sag_terim	dizge olarak sağ terim
function bcpow $bölüntü	bu seçimlik değiştirge ondalık iminin sağında kaç hane gösterileceğini belirler
function bcpow $sol_terim	dizge olarak sol terim
function string bcpow	sonucu dizge olarak döndürür
function string bcpow string $sol_terim string $sag_terim int $olcek	keyfi duyarlıklı sayılar i&ccedil;in &uuml;s alma işlemi yapar
function bcpowmod $sag_terim	dizge olarak sağ terim
function bcpowmod $modul	dizge olarak modül
function bcpowmod $bölüntü	bu seçimlik değiştirge ondalık iminin sağında kaç hane gösterileceğini belirler
function bcpowmod $sol_terim	dizge olarak sol terim
function string bcpowmod	dizge olarak sonucu veya modul 0 ise null döndürür
function string bcpowmod string $sol_terim string $sag_terim string $modul int $olcek	&ouml;nce bir keyfi duyarlıklı sayının diğerine g&ouml;re &uuml;s alma işlemini yapar sonra sonucun mod&uuml;le g&ouml;re kalanını bulur
function bcscale $olcek	ölçek katsayısı
function bool bcscale	başarı durumunda true başarısızlık durumunda false döner
function bool bcscale int $olcek	b&uuml;t&uuml;n bc matematik işlevleri i&ccedil;in &ouml;ntanımlı &ouml;l&ccedil;ek değiştirgesini ayarlar
function bcsqrt $bölüntü	bu seçimlik değiştirge ondalık iminin sağında kaç hane gösterileceğini belirler
function bcsqrt $terim	dizge olarak terim
function string bcsqrt	dizge olarak karekökü veya terim negatifse null döndürür
function string bcsqrt string $terim int $olcek	keyfi duyarlıklı bir sayının karek&ouml;k alma işlemini yapar
function bind textdomain codeset $karküm	karakter kümesi
function bind textdomain codeset $uygulama_adı	gettext iletileri için uygulama veya paket adı
function string bind textdomain codeset	başarılı olursa bir dizge ile döner
function string bind textdomain codeset string $uygulama_adı string $karküm	belli bir uygulamanın iletileri i&ccedil;in karakter kodlaması tanımlar
function bzclose $bz	dosya tanıtıcı
function int bzclose	başarı durumunda true başarısızlık durumunda false döner
function int bzclose resource $bz	bzip2 dosyasını kapatır
function bzcompress $kaynak	sıkıştırılacak dizgi
function bzcompress $blokboyu	sıkıştırma esnasında kullanılacak blok boyu belirtilir
function bzcompress $katsayı	bu değer verilen sıkıştırma aşamasının en kötü senaryo durumunda nasıl davranacağını belirtir
function mixed bzcompress	bir hata oluşmamışsa sıkıştırılmış dizgi ile aksi takdirde hata numarası ile döner
function mixed bzcompress string $kaynak int $blokboyu int $katsayı	verilen dizgiyi bzip2 kodlamalı olarak sıkıştırır
function bzdecompress $ufak	eğer true ise farklı bir açma algoritması uygulanır ve işlem sırasında daha az bellek kullanılır ancak işlem hızı yarıya düşer
function bzdecompress $kaynak	sıkıştırılmış haldeki dizge
function mixed bzdecompress	hata oluşmamışsa sıkıştırması açılmış dizgeyle aksi takdirde hata numarası ile döner
function mixed bzdecompress string $kaynak int $ufak	bzip2 ile sıkıştırılmış veriyi a&ccedil;ar
function bzerrno $bz	dosya tanıtıcı
function int bzerrno	hata numarası bir tamsayı olarak döner
function int bzerrno resource $bz	bzip2 hata numarası ile d&ouml;ner
function bzerror $bz	dosya tanıtıcısı
function array bzerror	geriye bir ilişkisel dizi döndürür
function array bzerror resource $bz	bzip2 hata numarasını ve hata iletisini bir dizi i&ccedil;erisinde d&ouml;nd&uuml;r&uuml;r
function bzflush $bz	dosya tanıtıcısı
function int bzflush	başarı durumunda true başarısızlık durumunda false döner
function int bzflush resource $bz	tampondaki bilginin tamamını yazmaya zorlar
function bzopen $dosyaadı	açılacak dosyanın adı
function bzopen $kip	fopen() işlevine benzer şekilde sadece okuma amaçlı ise r sadece yazma amaçlı ise w desteklenir
function resource bzopen	eğer dosya açma işlemi başarılamazsa bzopen() geriye false döndürür
function resource bzopen string $dosyaadı string $kip	bzip2 sıkıştırmalı bir dosyayı a&ccedil;ar
function bzread $uzunluk	eğer belirtilmemişse bzread() her seferinde 1024 baytlık sıkıştırması açılmış veri okuyacaktır
function bzread $bz	dosya tanıtıcısı
function string bzread	sıkıştırması açılmış veriyi veya hata durumunda false döndürür
function string bzread resource $bz int $uzunluk	bzip2 dosyasını ikil olarak okur
function bzwrite $bz	dosya tanıtıcı
function bzwrite $uzunluk	eğer belirtilmişse belirtilen uzunluk bayta erişilince açılmış halde veya belirtilen veri nin sonuna gelinmişse yazma işlemi sona erer
function bzwrite $veri	yazılacak veri
function int bzwrite	yazılan baytların sayısı ile veya hata durumunda false ile döner
function int bzwrite resource $bz string $veri int $uzunluk	bzip2 dosyasını ikil olarak yazar
function cal days in month $ay	seçilen takvimdeki ay
function cal days in month $takvim	hesaplama yapılacak takvim
function cal days in month $yil	seçilen takvimdeki yıl
function int cal days in month	değiştirge olarak verilen takvimde seçilen aydaki gün sayısı
function int cal days in month int $takvim int $ay int $yil	se&ccedil;ilen takvime ve yıla g&ouml;re istenen aydaki g&uuml;n sayısını geri d&ouml;nd&uuml;r&uuml;r
function cal from jd $takvim	istenen takvim
function cal from jd $jg	tamsayı olarak jülyen gün sayısı
function array cal from jd	ay gün yıl haftanın günü gün ve ayın kısa ve uzun isimleri ay / gün / yıl biçiminde tarih dizgesi öğelerini içeren dizi değişken döner
function array cal from jd int $jg int $takvim	j&uuml;lyen g&uuml;n sayısını istenen takvim bi&ccedil;imine &ccedil;evirir
function cal info $takvim	bilgi verilecek takvim
function array cal info int $takvim	değiştirge olarak verilen takvim hakkında bilgi d&ouml;ner
function call user func array $değiştirge_dizisi	işleve aktarılacak indisli dizi şeklinde değiştirgeler
function call user func array $işlev	çağrılacak işlev
function mixed call user func array	bir hata oluşmamışsa işlevin sonucunu aksi takdirde false döndürür
function mixed call user func array callback $işlev array $değiştirge_dizisi	değiştirgelerin bir dizi olarak verildiği kullanıcı işlevini &ccedil;ağırır
function call user func $değiştirge	işleve sıfır veya daha fazla sayıda değiştirge aktarılabilir
function call user func $işlev	çağırılacak işlev
function mixed call user func	hata oluşmamışsa işlevin sonucunu aksi takdirde false döndürür
function mixed call user func callback $işlev mixed $değiştirge	ilk değiştirgede belirtilen kullanıcı işlevini &ccedil;ağırır
function chdir $dizin	yeni geçerli dizin
function bool chdir	başarı durumunda true başarısızlık durumunda false döner
function bool chdir string $dizin	dizin değiştirir
function checkdate $ay	ay 1 ve 12 arasında olmalıdır
function checkdate $gün	gün verilen ay ın gün sayıları içerisinde olmalıdır
function checkdate $yıl	yıl 1 ve 32767 arasında olmalıdır
function bool checkdate	verilen tarih geçerli ise true değeriyle değilse false değeriyle döner
function bool checkdate int $ay int $gün int $yıl	miladi tarihi doğrular
function checkdnsrr $konak	konak noktalı sayısal gösterimli bir ip adresi veya bir konak ismi olabilir
function checkdnsrr $tür	tür değeri şunlardan biri olabilir: a mx ns soa ptr cname aaaa a6 srv naptr txt veya any
function bool checkdnsrr	kayıtlar bulunduğu takdirde true hiç kayıt yoksa veya bir hata oluşmuşsa false döner
function bool checkdnsrr string $konak string $tür	belirtilen bir konak adı veya ip adresi i&ccedil;in dns sorgusu yapar
function chgrp $dosyaismi	dosya yolu
function chgrp $grup	grup ismi veya numarası
function bool chgrp	başarı durumunda true başarısızlık durumunda false döner
function bool chgrp string $dosyaismi mixed $grup	dosya grubunu değiştirir
function chmod $kip	kip ile belirtilen değerin özdevinimli olarak sekizlik bir değer olduğu varsayılmamaktadır bu bakımdan değerin önüne 0 getirmeniz gerekir
function chmod $dosyaismi	dosya yolu
function bool chmod	başarı durumunda true başarısızlık durumunda false döner
function bool chmod string $dosyaismi int $kip	dosya kipini değiştirir
function chr $ascii	karakterin ascii kodu
function string chr	belirtilen karakter
function string chr int $ascii	kodu belirtilen karakteri d&ouml;nd&uuml;r&uuml;r
function chroot $dizin	yeni kök dizin
function bool chroot	başarı durumunda true başarısızlık durumunda false döner
function bool chroot string $dizin	k&ouml;k dizini değiştirir
function class exists $sınıf	sınıf ismi
function class exists $özdevinimli_yükle	öntanımlı olarak __autoload çağrısı yapılıp yapılmayacağı
function bool class exists	sınıf tanımlı bir sınıfın ismi ise true aksi takdirde false döner
function bool class exists string $sınıf bool $özdevinimli_yükle	sınıf tanımlı mı diye bakar
function bool closelog	başarı durumunda true başarısızlık durumunda false döner
function bool closelog	sistem g&uuml;nl&uuml;k&ccedil;&uuml;s&uuml; bağlantısını kapatır
function string com create guid	dizge olarak guid döner
function string com create guid	evrensel tanımlayıcı globally unique identifier &uuml;retir
function com get active object $progid	erişmek istediğiniz nesne için örneğin word
function com get active object $kodSayfasi	tam olarak com sınıfındaki gibi rol oynar
function variant com get active object	istenen nesne çalışıyorsa betiğinizdeki herhangi bir com nesnesi gibi döndürülecektir
function variant com get active object string $progid int $kodSayfasi	com nesnesinin &ccedil;alışan bir &ouml;rneği i&ccedil;in tanıtıcı d&ouml;ner
function com message pump $zaman_asimi	milisaniye cinsinden zaman aşımı
function bool com message pump	eğer mesaj veya mesajlar zaman aşımından önce gelirse işlenecektir ve işlev true döndürecektir
function bool com message pump int $zaman_asimi	com iletilerini işler zaman_asimi s&uuml;resince uykudadır
function com print typeinfo $baglama	true olarak düzelenirse karşılık gelen bağlama arayüzü gösterilecektir
function com print typeinfo $comNesne	comnesne değiştirgesi ya com nesnesinin bir örneği ya da tür kütüphane adı com_load_typelib() işlevinde gösterilen kurallara göre çözümlenecektir olmalıdır
function com print typeinfo $arayuz	göstermek istediğiniz idispatch türevinden arayüz adı
function bool com print typeinfo	başarı durumunda true başarısızlık durumunda false döner
function bool com print typeinfo object $comNesne string $arayuz bool $baglama	incelenebilecek şekilde php sınıf tanımını yazar
function compact $değişken	compact() işlevi bu değiştirgeden sınırsız sayıda kabul edebilir
function array compact	belirtilen değişkenlerin tanımlı olanlarını içeren bir dizi ile döner
function array compact mixed $değişken	değişkenlerle değerlerinden oluşan bir dizi oluşturur
function int connection aborted	istemci bağlantıyı terketmişse 1 yoksa 0 döner
function int connection aborted	istemcinin bağlantıyı terkedip terketmediğine bakar
function int connection status	bağlantı durumu bit maskesini döndürür
function int connection status	bağlantı durumu bit maskesini d&ouml;nd&uuml;r&uuml;r
function convert cyr string $dizge	dönüştürülecek dizge
function convert cyr string $hedef	tek bir karakter olarak hedef dizgenin kril karakter kümesi
function convert cyr string $kaynak	tek bir karakter olarak kaynak dizgenin kril karakter kümesi
function string convert cyr string	dönüştürülen dizge
function string convert cyr string string $dizge string $kaynak string $hedef	bir kril karakter k&uuml;mesini bir diğerine &ccedil;evirir
function convert uudecode $veri	kodu çözülecek dizge
function string convert uudecode	kodu çözülmüş veriyi bir dizge olarak döndürür
function string convert uudecode string $veri	uuencoded ile kodlanmış bir dizgeyi eski haline getirir
function copy $bağlam	stream_context_create() işlevi tarafından oluşturulmuş geçerli bir bağlam
function copy $kaynak	kaynak dosyanın yolu
function copy $hedef	hedef dosyanın yolu
function bool copy	başarı durumunda true başarısızlık durumunda false döner
function bool copy string $kaynak string $hedef resource $bağlam	dosya kopyalar
function crack check $sözlük	cracklib sözlüğü
function crack check $parola	sınanacak parola
function bool crack check	parola güçlü ise true değilse false döndürür
function bool crack check resource $sözlük string $parola	belirtilen parola &uuml;zerinde &ccedil;apraşık bir sınama yapar
function crack closedict $sözlük	kapatılacak sözlük
function bool crack closedict	başarı durumunda true başarısızlık durumunda false döner
function bool crack closedict resource $sözlük	a&ccedil;ık bir cracklib s&ouml;zl&uuml;ğ&uuml;n&uuml; kapatır
function string crack getlastmessage	henüz yapılmış bin sınama yoksa false varsa son sınamanın sonucu ile ilgili bir ileti döner
function string crack getlastmessage	son sınamanın sonucuyla ilgili bir ileti d&ouml;nd&uuml;r&uuml;r
function crack opendict $sözlük	cracklib sözlük dosyasının yolu
function resource crack opendict	başarısızlık durumunda false yoksa bir sözlük özkaynağı tanıtıcısı döndürür
function resource crack opendict string $sözlük	yeni bir cracklib s&ouml;zl&uuml;ğ&uuml; a&ccedil;ar
function crc32 $dizge	veri
function int crc32	dizge dizgesinin crc32 sağlamasını bir tamsayı olarak döndürür
function int crc32 string $dizge	bir dizgenin crc32 &ccedil;ok terimlisini hesaplar
function create function $kod	işlevin kodu
function create function $değiştirgeler	işlevin değiştirgeleri
function string create function	hata oluşmamışsa bir dizge olarak işleve eşsiz bir isim aksi takdirde false döndürür
function string create function string $değiştirgeler string $kod	bir anonim lamda tarzı) işlev oluşturur
function crypt $dizge	şifrelenecek dizge
function crypt $tuz	şifrelemeye göre değişen isteğe bağlı tuz dizgesi
function string crypt	şifrelenmiş dizge
function string crypt string $dizge string $tuz	tek y&ouml;nl&uuml; dizge şifrelemesi yapar
function ctype alpha $metin	sınanacak dizge
function bool ctype alpha	belirtilen metin içindeki karakterlerin hepsi geçerli yerele göre birer harf ise true değilse false döner
function bool ctype alpha string $metin	sınama abecesel karakterler i&ccedil;in yapılır
function ctype cntrl $metin	sınanacak dizge
function bool ctype cntrl	belirtilen metin içindeki karakterlerin hepsi birer denetim karakteri ise true değilse false döner
function bool ctype cntrl string $metin	sınama denetim karakterleri i&ccedil;in yapılır
function ctype graph $metin	sınanacak dizge
function bool ctype graph	belirtilen metin içindeki karakterlerin hepsi basılabilirse ve birer görsel çıktı oluşturuyorlarsa boşluk karakterleri değilseler true aksi takdirde false döner
function bool ctype graph string $metin	sınama boşluk karakterleri hari&ccedil; basılabilir karakterler i&ccedil;in yapılır
function ctype lower $metin	sınanacak metin
function bool ctype lower	belirtilen metin içindeki karakterlerin hepsi geçerli yerele göre birer küçük harf ise true döner
function bool ctype lower string $metin	sınama k&uuml;&ccedil;&uuml;k harfler i&ccedil;in yapılır
function ctype print $metin	sınanacak metin
function bool ctype print	belirtilen metin içindeki karakterlerin hepsi basılabilir karakterlerden boşluklar dahil oluşuyorsa true döner
function bool ctype print string $metin	sınama basılabilir karakterler i&ccedil;in yapılır
function ctype punct $metin	sınanacak dizge
function bool ctype punct	belirtilen metin içindeki karakterlerin hepsi birer noktalama karakteri harf rakam ve boşluklar dışında kalan basılabilir karakterler ise true aksi takdirde false döner
function bool ctype punct string $metin	sınama birer alfasayısal veya boşluk karakteri olmayan basılabilir karakterler i&ccedil;in yapılır
function ctype upper $metin	sınanacak dizge
function bool ctype upper	belirtilen metin içindeki karakterlerin hepsi geçerli yerele göre birer büyük harf ise true döner
function bool ctype upper string $metin	sınama b&uuml;y&uuml;k harfler i&ccedil;in yapılır
function curl copy handle $ct	curl_init() işlevinden dönen bir curl tanıtıcısı
function resource curl copy handle	yeni bir curl tanıtıcısı döner
function resource curl copy handle resource $ct	bir curl tanıtıcısını t&uuml;m tercihleriyle kopyalar
function curl errno $ct	curl_init() işlevinden dönen bir curl tanıtıcısı
function int curl errno	bir hata yoksa 0 varsa hatanın kodunu döndürür
function int curl errno resource $ct	belirtilen oturumdaki son hatanın kodunu d&ouml;nd&uuml;r&uuml;r
function curl error $ct	curl_init() işlevinden dönen bir curl tanıtıcısı
function string curl error	bir hata yoksa boş bir dizge bir hata varsa hata dizgesini döndürür
function string curl error resource $ct	belirtilen oturumdaki son hatayı i&ccedil;eren bir dizge d&ouml;nd&uuml;r&uuml;r
function curl exec $ct	curl_init() işlevinden dönen bir curl tanıtıcısı
function mixed curl exec	başarı durumunda true başarısızlık durumunda false döner
function mixed curl exec resource $ct	bir curl oturumunu işleme sokar
function curl init $url	belirtilmişse değer curlopt_url seçeneğine atanır
function resource curl init	başarı durumunda bir curl tanıtıcısı yoksa false döner
function resource curl init string $url	bir curl oturumunu ilklendirir
function curl multi add handle $ct	curl_init() işlevinden dönen bir curl tanıtıcısı
function curl multi add handle $cct	curl_multi_init() işlevinden dönen çoklu curl tanıtıcısı
function int curl multi add handle	başarı durumunda 0 hata oluşursa curlm_xxx sabitlerinden biri döner
function int curl multi add handle resource $cct resource $ct	tekil curl tanıtıcısını &ccedil;oklu curl tanıtıcısına ekler
function curl multi exec $cct	curl_multi_init() işlevinden dönen çoklu curl tanıtıcısı
function curl multi exec $hala_çalışıyor	işlemin hala sürüp sürmediğini belirten bir seçeneğe gönderimdir
function int curl multi exec	bir curl sabiti döner
function int curl multi exec resource $cct int $hala_çalışıyor	ge&ccedil;erli curl tanıtıcısının alt bağlantılarını &ccedil;alıştırır
function curl multi getcontent $ct	curl_init() işlevinden dönen bir curl tanıtıcısı
function string curl multi getcontent	curl tanıtıcısının içeriği bir dizge olarak döner
function string curl multi getcontent resource $ct	curlopt_returntransfer etkinse bir curl tanıtıcısının i&ccedil;eriği d&ouml;ner
function curl multi info read $iletiler	kuyrukta bekleyen iletilerin sayısı
function curl multi info read $cct	curl_multi_init() işlevinden dönen çoklu curl tanıtıcısı
function array curl multi info read	başarı durumunda ileti için bir ilişkili dizi yoksa false döner
function array curl multi info read resource $cct int $iletiler	ge&ccedil;erli oturum hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function curl multi select $cct	curl_multi_init() işlevinden dönen çoklu curl tanıtıcısı
function curl multi select $zamanaşımı	yanıt için beklenecek azami süre
function int curl multi select	başarı durumunda tanıtıcı sayısını select sistem çağrısından kaynaklanan bir zaman aşımı veya bir başarısızlık durumunda ise -1 döndürür
function int curl multi select resource $cct float $zamanaşımı	&ccedil;oklu curl bağlantısında bir etkinlik olsun diye bekler
function curl setopt $ct	curl_init() işlevinden dönen bir curl tanıtıcısı
function curl setopt $seçenek	atanacak curlopt_xxx seçeneği
function curl setopt $değer	atanacak seçenek değeri
function bool curl setopt	başarı durumunda true başarısızlık durumunda false döner
function bool curl setopt resource $ct int $seçenek mixed $değer	bir curl aktarım se&ccedil;eneği tanımlar
function array curl version int $dönem	curl s&uuml;r&uuml;m bilgilerini d&ouml;nd&uuml;r&uuml;r
function current $dizi	üzerinde işlem yapılacak dizi
function mixed current	current() işlevi dizinin dahili göstericinin işaret ettiği elemanı döndürür
function mixed current array $dizi	bir diziden g&ouml;sterici konumundaki elemanı d&ouml;nd&uuml;r&uuml;r
function string date default timezone get	string türünde geri döner
function string date default timezone get	betik i&ccedil;erisindeki t&uuml;m tarih / zaman işlevleri tarafından kullanılan &ouml;ntanımlı zaman dilimini getirir
function date default timezone set $zamandilimi_belirteci	zaman dilimi belirteci utc ya da europe / istanbul gibi bir değer olabilir
function bool date default timezone set	bu işlev zamandilimi_belirteci geçersizse false aksi takdirde true döndürür
function bool date default timezone set string $zamandilimi_belirteci	betik i&ccedil;erisindeki t&uuml;m tarih / zaman işlevleri tarafından kullanılan &ouml;ntanımlı zaman dilimini ayarlar
function date sunrise $biçim	biçim sabitleri sabit açıklama örnek sunfuncs_ret_string sonucu dizge olarak döndürür
function date sunrise $enlem	kuzey yarımküre öntanımlıdır
function date sunrise $gmt_farkı	saat cinsinden belirtilir
function date sunrise $boylam	doğu yarımküre öntanımlıdır
function date sunrise $başucu	öntanımlı: date
function date sunrise $zamandamgası	şafak zamanı öğrenilecek günün zamandamgası
function mixed date sunrise	başarılı olduğunda biçim değiştirgesiyle belirlenen biçimde şafak zamanını başarız olduğunda false değerini döndürür
function mixed date sunrise int $zamandamgası int $biçim float $enlem float $boylam float $başucu float $gmt_farkı	belirtilen g&uuml;n ve konum i&ccedil;in şafak zamanını d&ouml;nd&uuml;r&uuml;r
function dcgettext $yerel	yerel kategorisi
function dcgettext $ileti	özgün ileti
function dcgettext $uygulama_adı	gettext iletileri için uygulama veya paket adı
function string dcgettext	başarılı olursa bir dizge ile döner
function string dcgettext string $uygulama_adı string $ileti int $yerel	belirtilen arama i&ccedil;in ge&ccedil;erli uygulama adını değiştirir
function debug backtrace $nesne_sağla	dönen dizide object anahtarının bulunup bulunmayacağı belirtilir
function array debug backtrace	bir ilişkisel dizi döner
function array debug backtrace bool $nesne_sağla	hata izleme raporunu bir dizi olarak &uuml;retir
function debug zval dump $değişken	işleme alınacak değişken
function void debug zval dump mixed $değişken	dahili bir zend değerinin dizgesel g&ouml;sterimini &ccedil;ıktıya d&ouml;k&uuml;mler
function void define syslog variables	syslog ile ilgili t&uuml;m değişkenleri ilklendirir
function define $değer	sabitin değeri
function define $harf_büyüklüğüne_duyarsız	true belirtilirse tanımlanan sabitin ismi harf büyüklüğüne duyarsız olarak tanımlanır
function define $isim	sabitin ismi
function bool define	başarı durumunda true başarısızlık durumunda false döner
function bool define string $isim mixed $değer bool $harf_büyüklüğüne_duyarsız	bir isimli sabit tanımlar
function void delete	unlink veya unset işlevine bakınız
function dgettext $ileti	özgün ileti
function dgettext $uygulama_adı	gettext iletileri için uygulama veya paket adı
function string dgettext	başarılı olursa bir dizge ile döner
function string dgettext string $uygulama_adı string $ileti	ge&ccedil;erli uygulama adını değiştirir
function dio fcntl $dt	dio_open() işlevinden dönmüş bir dosya tanıtıcısı
function dio fcntl $değiştirgeler	değiştirgeler bir ilişkisel dizi olup komut olarak f_setlk veya f_setllw belirtildiğinde aşağıdaki anahtarlar belirtilebilir: start - kilidin başlangıç konumu length - kilitli alanın boyu; sıfır dosyanın sonuna kadar demektir
function dio fcntl $komut	aşağıdaki işlemlerden biri belirtilebilir: f_setlk - dosya kilidi tanımlar veya siler
function mixed dio fcntl	c çağrısının sonucu ile döner
function mixed dio fcntl resource $dt int $komut mixed $değiştirgeler	belirtilen dosya tanıtıcısı &uuml;zerinde komut &ccedil;alıştırır
function dio open $seçenekler	aşağıdaki seçeneklerin bir birleşimi bit seviyesinde veyalanmışı) olarak belirtilebilir
function dio open $dosyaismi	açılacak dosyanın yolu
function dio open $kip	seçenekler değiştirgesine o_creat atanmışsa dosya kipi oluşturma izinleri kip değiştirgesinde belirtildiği gibi ayarlanır
function resource dio open	bir hata oluşmuşsa false aksi takdirde dosya tanıtıcısı döner
function resource dio open string $dosyaismi int $seçenekler int $kip	belirtilen dosyayı a&ccedil;ar ve bu dosya i&ccedil;in bir dosya tanıtıcısı d&ouml;nd&uuml;r&uuml;r
function dio stat $dt	dio_open() işlevinden dönmüş bir dosya tanıtıcısı
function array dio stat resource $dt	belirtilen dosya tanıtıcısı hakkında durum bilgisi d&ouml;nd&uuml;r&uuml;r
function dio tcsetattr $dt	dio_open() işlevinden dönmüş bir dosya tanıtıcısı
function dio tcsetattr $seçenekler	olası seçenekler: baud - saniyede bit bayısı olarak veri hızı - 38400 19200 9600 4800 2400 1800 1200 600 300 200 150 134 110 75 veya 50 olabilir; 9600 öntanımlıdır
function bool dio tcsetattr resource $dt array $seçenekler	bir seri portun veri hızını ve u&ccedil;birim &ouml;zniteliklerini tanımlar
function dio truncate $uzunluk	bayt cinsinden kırpma uzunluğu
function dio truncate $dt	dio_open() işlevinden dönmüş bir dosya tanıtıcısı
function bool dio truncate	başarı durumunda true başarısızlık durumunda false döner
function bool dio truncate resource $dt int $uzunluk	dosya tanıtıcısındaki bayt sayısını sınırlar
function dio write $dt	dio_open() işlevinden dönmüş bir dosya tanıtıcısı
function dio write $uzunluk	bayt cinsinden yazılacak verinin uzunluğu
function dio write $veri	yazılacak veri
function int dio write	dt dosya tanıtıcısına yazılan baytların sayısı
function int dio write resource $dt string $veri int $uzunluk	veriyi uzunluğunu isteğe bağlı olarak kırparak dosya tanıtıcısına yazar
function disk free space $dizin	bir dosya sisteminin veya disk bölümünün bir dizini
function float disk free space	hata oluşmuşsa false yoksa kullanılabilir toplam bayt sayısını bir gerçek sayı olarak döndürür
function float disk free space string $dizin	dizindeki kullanılabilir bayt sayısını d&ouml;nd&uuml;r&uuml;r
function disk total space $dizin	bir dosya sisteminin veya disk bölümünün bir dizini
function float disk total space	hata durumunda false yoksa toplam bayt sayısını bir gerçek sayı olarak döndürür
function float disk total space string $dizin	bir dizinin toplam boyunu d&ouml;nd&uuml;r&uuml;r
function dl $eklenti	bu değiştirge ile eklentinin platforma özgü kütüphane dosyasının ismi belirtilir
function int dl	başarı durumunda true başarısızlık durumunda false döner
function int dl string $kütüphane	belirtilen php eklentisini &ccedil;alışma anında y&uuml;kler
function dngettext $uygulama_adı	gettext iletileri için uygulama veya paket adı
function string dngettext	başarılı olursa bir dizge döndürür
function string dngettext string $uygulama_adı string $msgid1 string $msgid2 int $n	dgettext işlevinin &ccedil;oğul bi&ccedil;emli s&uuml;r&uuml;m&uuml;
function dns get record $ek_kayıtlar	gönderimli aktarılır
function dns get record $konakadı	konakadı www
function dns get record $yetkili_enesler	gönderimli aktarılır
function dns get record $tür	dns_get_record() öntanımlı olarak konakadı ile ilgili bütün özkaynak kayıtlarını arayacaktır
function array dns get record	bu işlev ilişkisel diziler içeren bir dizi ile döner
function array dns get record string $konakadı int $tür array $yetkili_enesler array $ek_kayıtlar	belirtilen konak adı ile ilgili dns &ouml;zkaynak kayıtlarını getirir
function dom import simplexml $düğüm	bir simplexmlelement düğümü
function DOMElement dom import simplexml	başarısız olursa false yoksa bir domelement nesnesi döndürür
function DOMElement dom import simplexml SimpleXMLElement $düğüm	bir simplexmlelement d&uuml;ğ&uuml;m&uuml; alıp bir domelement d&uuml;ğ&uuml;m&uuml; d&ouml;nd&uuml;r&uuml;r
function easter days $yontem	cal_easter_roman sabiti verildiği zaman 1582 - 1752 yılları için gregoryen takvimi temel alınarak hesaplama yapar
function easter days $yil	pozitif sayı olarak yıl
function int easter days	verilen yil değiştirgesi için paskalya zamanına 21 marttan sonraki kalan gün sayısını verir
function int easter days int $yil int $yontem	verilen yıl i&ccedil;in paskalya zamanına 21 marttan sonraki kalan g&uuml;n sayısını verir
function empty $değişken	sınanacak değişken bilginize : empty() işlevi sadece bir çözümleme hatasına yol açmayan değişkenleri sınar
function bool empty	belirtilen değişken boş değilse ve değeri sıfırdan farklıysa false döner
function bool empty mixed $değişken	bir değişkenin boş olup olmadığını saptar
function eregi replace $yenisi	eğer şablon parantezli gruplar içeriyorsa yenisi değiştirgesi \\ rakam biçeminde bir dizge içerebilir
function eregi replace $dizge	girdi dizgesi
function eregi replace $şablon	bir posix gelişkin düzenli ifadesi
function string eregi replace	değiştirilen dizgeyi döndürür
function string eregi replace string $şablon string $yenisi string $dizge	d&uuml;zenli ifadeye g&ouml;re dizgede harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak değişiklik yapar
function eregi $gruplar	şablon içindeki parantezli alt gruplarla eşleşme sağlanırsa ve işlev bu değiştirge belirtilerek çağrılmışsa eşleşen gruplar gruplar dizisinin elemanlarına yerleştirilir
function eregi $dizge	girdi dizgesi
function eregi $şablon	harf büyüklüğüne duyarsız düzenli ifade
function int eregi	şablon dizge içinde bulunmuşsa eşleşen dizgenin uzunluğu eşleşme sağlanamazsa veya bir hata oluşursa false döner
function int eregi string $şablon string $dizge array $gruplar	d&uuml;zenli ifadeyi harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak eşleştirir
function escapeshellarg $değiştirge	öncelenecek değiştirge
function string escapeshellarg	öncelenmiş dizge
function string escapeshellarg string $değiştirge	bir komutun değiştirge dizgesini &ouml;nceler
function exec $komut	çalıştırılacak komut
function exec $çıktı	bu değiştirge belirtilmişse dizinin her elemanına komut çıktısının bir satırı yazılır
function exec $dönüş_değeri	çıktı değiştirgesinin yanında bir dönüş_değeri değiştirgesi belirtilmişse komutun çıkış durumu bu değiştirgeye yazılır
function string exec	komut çıktısının son satırı
function string exec string $komut array $çıktı int $dönüş_değeri	bir komut &ccedil;alıştırır
function exif imagetype $dosya	içerdiği resim türü saptanacak dosya
function int exif imagetype	doğru imza bulunduğu takdirde uygun sabitin değeri döndürülür aksi takdirde false döner
function int exif imagetype string $dosya	bir resmin t&uuml;r&uuml;n&uuml; saptar
function exif read data $dosya	okunacak resim dosyasının ismi
function exif read data $küçük_örnek	true belirtilmişse küçük resim örneğinin kendisi okunur
function exif read data $diziler	her bölümün bir dizi haline getirilip getirilmeyeceğini belirler
function exif read data $bölümler	sonuç dizisinin üretiminde kullanılmak üzere dosyadaki başlıkların virgül ayraçlı listesi
function array exif read data	dönen değer bir dizi olup dizi indisleri başlık isimlerini değerler bu başlıklarla ilgili verileri içerir
function array exif read data string $dosya string $bölümler bool $diziler bool $küçük_örnek	bir jpeg veya tiff resminden exif başlıklarını okur
function explode $dizge	alt dizgelerine ayrılacak dizge
function explode $ayraç	dizgeleri ayırmak için kullanılacak dizge
function explode $sınır	sınır pozitifse dizi en çok sınır sayıda eleman içerir ve dizgenin kalanı son elemana yerleştirilir
function array explode	ayraç boş bir dizge ise explode() false döndürür
function array explode string $ayraç string $dizge int $sınır	bir dizgeyi bir ayraca g&ouml;re b&ouml;l&uuml;p bir dizi haline getirir
function extension loaded $eklenti	eklentinin ismi
function bool extension loaded	ismi belirtilen eklenti yüklü ise true değilse false döner
function bool extension loaded string $eklenti	belirtilen eklenti y&uuml;kl&uuml; m&uuml; diye bakar
function extract $EXTR_OVERWRITE	bir çakışma varsa mevcut değişkenin üzerine yazılır
function extract $EXTR_SKIP	bir çakışma varsa mevcut değişkenin üzerine yazılmaz
function extract $EXTR_PREFIX_ALL	tüm değişken isimlerinin başına önek konur
function extract $EXTR_IF_EXISTS	sadece simge tablosunda mevcut değişkenlerin üzerine yazılır bunun dışında bir şey yapılmaz
function extract $önek	bu değiştirge sadece çıkarım_türü olarak extr_prefix_same extr_prefix_all extr_prefix_invalid veya extr_prefix_if_exists belirtilmişse anlamlıdır
function extract $EXTR_PREFIX_SAME	bir çakışma varsa değişken isminin başına önek konur
function extract $EXTR_PREFIX_IF_EXISTS	sadece simge tablosunda öneksiz sürümü bulunan değişkenlerin önekli sürümleri oluşturulur
function extract $EXTR_PREFIX_INVALID	sadece geçersiz veya sayısal indisli değişkerlerin başına önek konur
function extract $çıkarım_türü	geçersiz veya sayısal anahtarların ve çakışmaların ele alınma yöntemini belirtmek için kullanılır
function extract $EXTR_REFS	değişkenler gönderimli olarak çıkarılır
function extract $dizi	bir ilişkisel dizi
function int extract	simge tablosuna başarıyla eklenen değişkenlerin sayısı
function int extract array $dizi int $çıkarım_türü string $önek	bir dizideki değişkenleri simge tablosuna dahil eder
function fclose $dt	dosya tanıtıcısı geçerli olmalı ve fopen() veya fsockopen() tarafından başarıyla açılmış bir dosya için döndürülmüş olmalıdır ve henüz fclose() tarafından kapatılmamış olmalıdır
function bool fclose	başarı durumunda true başarısızlık durumunda false döner
function bool fclose resource $dt	a&ccedil;ık bir dosya tanıtıcısını kapatır
function feof $dt	dosya tanıtıcısı geçerli olmalı ve fopen() veya fsockopen() tarafından başarıyla açılmış bir dosya için döndürülmüş olmalıdır ve henüz fclose() tarafından kapatılmamış olmalıdır
function bool feof	eğer dosya sonu eof saptanmışsa veya bir hata oluşmuşsa soketin zaman aşımına uğraması gibi true aksi takdirde false döner
function bool feof resource $dt	bir dosya tanıtıcısı &uuml;zerinde konum dosya sonunda mı diye bakar
function fflush $dt	dosya tanıtıcısı geçerli olmalı ve fopen() veya fsockopen() tarafından başarıyla açılmış bir dosya için döndürülmüş olmalıdır ve henüz fclose() tarafından kapatılmamış olmalıdır
function bool fflush	başarı durumunda true başarısızlık durumunda false döner
function bool fflush resource $dt	&ccedil;ıktıyı bir dosyaya boşaltır
function fgetc $dt	dosya tanıtıcısı geçerli olmalı ve fopen() veya fsockopen() tarafından başarıyla açılmış bir dosya için döndürülmüş olmalıdır ve henüz fclose() tarafından kapatılmamış olmalıdır
function string fgetc	dosya tanıtıcısı dt ile belirtilen bir dosyadan tek bir karakter içeren bir dizge döndürür
function string fgetc resource $dt	dosya tanıtıcısından bir karakter d&ouml;nd&uuml;r&uuml;r
function fgetcsv $uzunluk	csv dosyasındaki en uzun satırdan satırsonu karakterleri dahil daha büyük bir değer içermelidir
function fgetcsv $escape	önceleme karakteri belirtilir tek bir karakter
function fgetcsv $ayraç	isteğe bağlı bu değiştirge ile tek karakterlik alan ayracı belirtilir
function fgetcsv $dt	fopen() popen() veya fsockopen() tarafından başarıyla açılmış geçerrli bir dosyanın tanıtıcısı
function fgetcsv $sınırlayıcı	isteğe bağlı bu değiştirge ile tek karakterlik alan sınırlayıcı belirtilir
function array fgetcsv	okunan alanları içeren indisli bir dizi döner
function array fgetcsv resource $dt int $uzunluk string $ayraç string $sınırlayıcı string $öncelem	dosya tanıtıcısından csv alanlarını &ccedil;&ouml;z&uuml;mleyerek bir satır d&ouml;nd&uuml;r&uuml;r
function file exists $dosyaismi	dosya veya dizinin yolu
function bool file exists	dosyaismi ile belirtilen dosya veya dizin mevcutsa true değilse false
function bool file exists string $dosyaismi	bir dosya veya dizinin mevcut olup olmadığına bakar
function file get contents $uzunluk	okunacak verinin azami uzunluğu
function file get contents $başlangıç	okumaya başlanacak konum
function file get contents $dosyaismi	içeriği okunacak dosyanın ismi
function file get contents $seçenekler	bilginize : php 6dan önceki sürümlerde bu değiştirge include_path_kullan olarak adlandırılır ve bool türünde bir değer alırdı
function file get contents $bağlam	stream_context_create() işlevi tarafından oluşturulmuş geçerli bir bağlam özkaynağı
function string file get contents	hata durumunda false aksi takdirde dosyadan okunan veriyi döndürür
function string file get contents string $dosyaismi int $seçenekler resource $bağlam int $başlangıç int $uzunluk	dosya i&ccedil;eriğinin tamamını bir dizge olarak d&ouml;nd&uuml;r&uuml;r
function file put contents $veri	yazılacak veri
function file put contents $dosyaismi	verinin yazılacağı dosyanın yolu
function file put contents $seçenekler	isteğe bağlı bu değiştirgede bazı kısıtlamalarla şu sabitlerden bir veya daha fazlasını ikil veya |) ile birleştirerek belirtebilirsiniz: belirtilebilecek seçenekler seçenet açıklama file_use_include_path dosya include_path yönergesinde belirtilen yollarda aranır
function file put contents $bağlam	stream_context_create() ile oluşturulmuş geçerli bir bağlam özkaynağı
function int file put contents	işlev başarısızlık durumunda false aksi takdirde dosyaya yazılan baytların sayısı ile döner
function int file put contents string $dosyaismi mixed $veri int $seçenekler resource $bağlam	bir dizgeyi bir dosyaya yazar
function filectime $dosyaismi	dosya yolu
function int filectime	belirtilen dosyanın son dosya düğümü değişiklik zamanını döndürür
function int filectime string $dosyaismi	dosyanın dosya d&uuml;ğ&uuml;m&uuml; değişiklik zamanını d&ouml;nd&uuml;r&uuml;r
function filegroup $dosyaismi	dosya yolu
function int filegroup	hata durumunda false aksi takdirde dosyanın sahibi olan grubu döndürür
function int filegroup string $dosyaismi	dosyanın sahibi olan grubu d&ouml;nd&uuml;r&uuml;r
function fileinode $filename	dosya yolu
function int fileinode	hata durumunda false aksi takdirde dosyanın düğüm numarasını döndürür
function int fileinode string $dosyaismi	dosyanın d&uuml;ğ&uuml;m numarasını d&ouml;nd&uuml;r&uuml;r
function filemtime $dosyaismi	dosya yolu
function int filemtime	hata durumunda false aksi takdirde dosyanın son değişiklik zamanını döndürür
function int filemtime string $dosyaismi	dosyanın değişiklik zamanını d&ouml;nd&uuml;r&uuml;r
function fileowner $dosyaismi	dosya yolu
function int fileowner	hata durumunda false aksi takdirde dosyanın sahibinin kullanıcı kimliği döner
function int fileowner string $dosyaismi	dosya sahibini d&ouml;nd&uuml;r&uuml;r
function fileperms $dosyaismi	dosya yolu
function int fileperms	bir hata durumunda false aksi takdirde dosyanın izinlerini döndürür
function int fileperms string $dosyaismi	dosya izinlerini d&ouml;nd&uuml;r&uuml;r
function filetype $dosyaismi	dosya yolu
function string filetype	dosyanın türünü döndürür
function string filetype string $dosyaismi	dosya t&uuml;r&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
function flock $dt	dosya tanıtıcısı geçerli olmalı ve fopen() veya fsockopen() tarafından başarıyla açılmış bir dosya için döndürülmüş olmalıdır ve henüz fclose() tarafından kapatılmamış olmalıdır
function flock $işlem	işlem şunlardan biri olabilir: paylaşımlı bir kilit okuyucu edinmek için lock_sh
function flock $engellesin	kilidin engellemesi için isteğe bağlı üçüncü değiştirgeye true atanır ewouldblock errno kuralı)
function bool flock	başarı durumunda true başarısızlık durumunda false döner
function bool flock resource $dt int $işlem int $engellensin	taşınabilir tavsiye niteliğinde dosya kilitleme
function fprintf $dt	bir dosya tanıtıcısı
function fprintf $biçem	biçem dizgesinin açıklaması için sprintf() işlevine bakınız
function int fprintf	akıma yazılan dizgenin uzunluğunu döndürür
function int fprintf resource $dt string $biçem mixed $değiştirgeler	bi&ccedil;emli dizgeyi bir akıma yazar
function frenchtojd $yil	1 ile 14 arasında yıl değeri
function frenchtojd $ay	1den vendémiaire için 13e her yılın sonundaki 5-6 gün için kadar sayı olarak ay değeri
function frenchtojd $gun	1den 30a kadar sayı olarak gün değeri
function int frenchtojd	tamsayı olarak verilmiş fransız ihtilali tarihine karşılık gelen jülyen gün sayısı
function int frenchtojd int $ay int $gun int $yil	fransız ihtilali takvim tarihini j&uuml;lyen g&uuml;n sayısına &ccedil;evirir
function fseek $nereye	mevcut konumun nasıl yorumlanacağı belirtilir: seek_set - nereye konumunun dosya başlangıcına göre belirtildiği varsayılır
function fseek $nereye	yeni konum
function fseek $dt	bir dosya tanıtıcısı
function int fseek	başarı durumunda 0 aksi takdirde -1 döner
function int fseek resource $dt int $nereye int $nereden	dosya tanıtıcısında konumu bir yerden başka bir yere taşır
function fsockopen $hata_iletisi	bir dizge olarak hata iletisi
function fsockopen $hatanum	bir değiştirge sağlanmışsa sistem seviyesi connect() çağrısında oluşan sistem seviyesi hata numarası bu değiştirgeye yerleştirilir
function fsockopen $zaman_aşımı	saniye cinsinden bağlantı zaman aşımı
function fsockopen $konakadı	derleme sırasında openssl desteği vermişseniz uzak konağa tcp / ip üzerinden bir ssl veya tls istemci bağlantısı açmak için konakadı belirtirken ssl: / / veya tls: / / önekini kullanabilirsiniz
function fsockopen $port	port numarası
function resource fsockopen	fsockopen() diğer dosya işlevleriyle fgets() fgetss() fwrite() fclose() ve feof() gibi kullanmak üzere bir dosya tanıtıcısı ile döner
function resource fsockopen string $konakadı int $port int $hatanum string $hata_iletisi float $zaman_aşımı	bir internet veya unix alan soketi bağlantısı a&ccedil;ar
function fstat $dt	bir dosya tanıtıcısı
function array fstat	dosya ile ilgili istatistikleri içeren bir dizi döndürür
function array fstat resource $dt	bir a&ccedil;ık dosya tanıtıcısı kullanarak bir dosya hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function ftp alloc $sonuç	değiştirge belirtildiği takdirde sunucunun yanıtıyla ilgili ileti bu değiştirgeye yerleştirilir
function ftp alloc $dosyaboyu	ayrılacak bayt sayısı
function ftp alloc $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function bool ftp alloc	başarı durumunda true başarısızlık durumunda false döner
function bool ftp alloc resource $ftp_akımı int $dosyaboyu string $sonuç	karşıya dosya y&uuml;klemek i&ccedil;in bir ftp sunucusuna yer ayırma isteği yapar
function ftp chdir $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp chdir $dizin	yeni çalışma dizini
function bool ftp chdir	başarı durumunda true başarısızlık durumunda false döner
function bool ftp chdir resource $ftp_akımı string $dizin	ftp sunucusundaki &ccedil;alışma dizinini değiştirir
function ftp chmod $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp chmod $dosya	dosyanın ftp sunucusundaki yolu
function ftp chmod $kip	sekizlik bir değer olarak erişim izinleri
function int ftp chmod	hata durumunda false yoksa yeni dosya erişim izinleri döner
function int ftp chmod resource $ftp_akımı int $kip string $dosya	ftp &uuml;zerinden bir dosyanın erişim izinlerini değiştirir
function ftp close $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function bool ftp close	başarı durumunda true başarısızlık durumunda false döner
function bool ftp close resource $ftp_akımı	bir ftp bağlantısını kapatır
function ftp connect $zamanaşımı	bu değiştirgede her türlü ağ işlemi için zaman aşımı belirtilir
function ftp connect $port	bu değiştirge normal portun dışında bir port belirtmek için kullanılır
function ftp connect $adres	ftp sunucusunun adresi
function resource ftp connect	hata durumunda false yoksa bir ftp akımı döner
function resource ftp connect string $adres int $port int $zamanaşımı	bir ftp bağlantısı a&ccedil;ar
function ftp delete $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp delete $dosya	silinecek dosyanın yolu
function bool ftp delete	başarı durumunda true başarısızlık durumunda false döner
function bool ftp delete resource $ftp_akımı string $dosya	belirtilen dosyayı ftp sunucusundan siler
function ftp fget $devam_yeri	indirmenin başlatılacağı bayt konumu
function ftp fget $kip	aktarım kipi
function ftp fget $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp fget $dt	verinin saklanacağı açık dosya tanıtıcısı
function ftp fget $uzak_dosya	dosyanın ftp sunucusundaki yolu
function bool ftp fget	başarı durumunda true başarısızlık durumunda false döner
function bool ftp fget resource $ftp_akımı resource $dt string $uzak_dosya int $kip int $devam_yeri	ftp sunucusundan dosyayı indirip bir dosya tanıtıcısına yazar
function ftp get option $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp get option $seçenek	şimdilik aşağıdaki seçenekler desteklenmektedir: desteklenen çalışma anı ftp seçenekleri ftp_timeout_sec ağ ile ilgili işlevlerde kullanılan zaman aşımını döndürür
function mixed ftp get option	hata durumunda false döner ve bir uyarı çıktılanır yoksa seçeneğin değeri döner
function mixed ftp get option resource $ftp_akımı int $seçenek	bir &ccedil;alışma anı se&ccedil;eneğinin değerini d&ouml;nd&uuml;r&uuml;r
function ftp login $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp login $parola	parola ftp komutu: pass
function ftp login $kullanıcı	kullanıcı adı ftp komutu: user
function bool ftp login	başarı durumunda true başarısızlık durumunda false döner
function bool ftp login resource $ftp_akımı string $kullanıcı string $parola	ftp bağlantısında kullanıcı oturumu a&ccedil;ar
function ftp mdtm $uzak_dosya	son değişiklik zamanı sorgulanacak dosya
function ftp mdtm $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function int ftp mdtm	hata durumunda -1 yoksa belirtilen dosyanın son değişiklik zamanını bir unix zaman damgası olarak döndürür
function int ftp mdtm resource $ftp_akımı string $uzak_dosya	belirtilen dosyanın son değişiklik zamanını d&ouml;nd&uuml;r&uuml;r
function ftp nb continue $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function int ftp nb continue	ftp_failed veya ftp_finished ya da ftp_moredata döner
function int ftp nb continue resource $ftp_akımı	dosya alımını / g&ouml;nderimini engellenmeyen kipte kaldığı yerden devam ettirir
function ftp nb put $uzak_dosya	ftp sunucundaki dosya yolu
function ftp nb put $kip	aktarım kipi
function ftp nb put $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp nb put $yerel_dosya	yerel dosya yolu
function int ftp nb put	ftp_failed veya ftp_finished ya da ftp_moredata döner
function int ftp nb put resource $ftp_akımı string $uzak_dosya string $yerel_dosya int $kip int $başlama_yeri	bir dosyayı ftp sunucusuna engellenmeyen kipte y&uuml;kler
function ftp put $uzak_dosya	ftp sunucundaki dosya yolu
function ftp put $kip	aktarım kipi
function ftp put $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp put $yerel_dosya	yerel dosya yolu
function bool ftp put	başarı durumunda true başarısızlık durumunda false döner
function bool ftp put resource $ftp_akımı string $uzak_dosya string $yerel_dosya int $kip int $başlama_yeri	ftp sunucusuna bir dosya y&uuml;kler
function ftp rawlist $ardışık	true belirtilirse list -r komutu çalıştırılır ve listeleme için alt dizinlere inilir
function ftp rawlist $dizin	içeriği listelenecek dizinin yolu
function ftp rawlist $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function array ftp rawlist	elemanları komuta verilen yanıt metninin bir satırına karşılık gelen bir dizi döner
function array ftp rawlist resource $ftp_akımı string $dizin bool $ardışık	belirtilen dizindeki dosyaların ayrıntılı bir listesini d&ouml;nd&uuml;r&uuml;r
function ftp rename $eskisi	eski dosya / dizin ismi
function ftp rename $ftp_akımı	ftp bağlantısının bağlantı tanıtıcısı
function ftp rename $yenisi	yeni dosya / dizin ismi
function bool ftp rename	başarı durumunda true başarısızlık durumunda false döner
function bool ftp rename resource $ftp_akımı string $eskisi string $yenisi	ftp sunucusundaki bir dosya veya dizinin adını değiştirir
function ftp ssl connect $zamanaşımı	bu değiştirgede her türlü ağ işlemi için zaman aşımı belirtilir
function ftp ssl connect $port	bu değiştirge normal portun dışında bir port belirtmek için kullanılır
function ftp ssl connect $adres	ftp sunucusunun adresi
function resource ftp ssl connect	hata durumunda false yoksa bir ssl-ftp akımı döner
function resource ftp ssl connect string $adres int $port int $zamanaşımı	g&uuml;venli bir ssl-ftp bağlantısı a&ccedil;ar
function ftruncate $dt	dosya tanıtıcısı
function ftruncate $boyut	budama boyu
function bool ftruncate	başarı durumunda true başarısızlık durumunda false döner
function bool ftruncate resource $dt int $boyut	bir dosyayı belli bir uzunlukta budar
function array func get args	her elemanı mevcut kullanıcı tanımlı işlevin değiştirge listesinin birer kopyası olan bir dizi döndürür
function array func get args	işleve aktarılan değiştirgelerin listesini dizi olarak d&ouml;nd&uuml;r&uuml;r
function array gd info	bir ilişkisel dizi döner
function array gd info	kurulu gd k&uuml;t&uuml;phanesi hakkında bilgi verir
function get browser $dizi_döndür	true atandığı takdirde bu işlev bir nesne yerine bir dizi döndürür
function get browser $tarayıcı	araştırılacak tarayıcı
function mixed get browser	döndürülen nesne veya dizi tarayıcının sürüm numarası kimlik dizgesi gibi bilgilerin yanında çerçeveleri çerezleri javascriptleri kabul edip etmediği gibi bilgiller true / false değerleriyle içerilir
function mixed get browser string $tarayıcı bool $dizi_döndür	kullanıcının tarayıcısının neler yapabildiğini s&ouml;yler
function string get called class	çağrıldığı sınıfın ismini döndürür
function string get called class	&ccedil;ağrıldığı duruk y&ouml;ntemin sınıf ismini d&ouml;nd&uuml;r&uuml;r
function get cfg var $yönerge	yapılandırma yönergesinin ismi
function string get cfg var	bir hata oluşursa false aksi takdirde belirtilen php yapılandırma yönergesinin değerini döndürür
function string get cfg var string $yönerge	belirtilen php y&ouml;nergesinin değerini d&ouml;nd&uuml;r&uuml;r
function get class methods $sınıf	sınıf veya nesne ismi
function array get class methods	sınıf yöntemlerinin isimlerini bir dizi olarak döndürür
function array get class methods mixed $sınıf	sınıf y&ouml;ntemlerinin isimlerini d&ouml;nd&uuml;r&uuml;r
function get class $nesne	sınanacak nesne
function string get class	belirtilen nesne nesnesinin ait olduğu sınıfın ismini bir dizge olarak döndürür
function string get class object $nesne	bir nesnenin ait olduğu sınıfın ismini d&ouml;nd&uuml;r&uuml;r
function array get declared classes	betikte tanımlanmış sınıfların isimlerini içeren bir dizi döner
function array get declared classes	tanımlı sınıfların isimlerini bir dizi olarak d&ouml;nd&uuml;r&uuml;r
function array get declared interfaces	betikte bildirilmiş arayüzlerin isimlerini içeren bir dizi döner
function array get declared interfaces	bildirilmiş t&uuml;m aray&uuml;zleri bir dizi olarak d&ouml;nd&uuml;r&uuml;r
function array get defined functions	hem kullanıcı tanımlı hem de yerleşik dahili bütün tanımlanmış işlevlerin listesini bir çok boyutlu dizi olarak döndürür
function array get defined functions	tanımlanmış b&uuml;t&uuml;n işlevleri i&ccedil;eren bir dizi d&ouml;nd&uuml;r&uuml;r
function array get defined vars	tüm tanımlı değişkenleri içeren çok boyutlu bir dizi
function array get defined vars	t&uuml;m tanımlı değişkenleri i&ccedil;eren bir dizi d&ouml;nd&uuml;r&uuml;r
function get loaded extensions $zend_eklentileri	öntanımlı değeri false olup bu durumda zend eklentilerini listelemez
function array get loaded extensions	tüm modül isimlerini içeren indisli bir dizi ile döner
function array get loaded extensions bool $zend_eklentileri	derlenmiş ve y&uuml;klenmiş t&uuml;m mod&uuml;llerin isimlerini i&ccedil;eren bir dizi d&ouml;nd&uuml;r&uuml;r
function get meta tags $include_path_kullan	bu değiştirgeye true belirtildiği takdirde php html dosyayı include_path yönergesinde belirtilen yollarda arar
function get meta tags $dosya	html dosyasının yolu
function array get meta tags	bütün meta etiketlerinden ayrıştırılan öznitelikleri içeren bir dizi döner
function array get meta tags string $dosya bool $include_path_kullan	bir html dosyanın meta etiketlerindeki &ouml;znitelikleri &ccedil;ıkarıp bir dizi olarak d&ouml;nd&uuml;r&uuml;r
function get parent class $nesne	sınanacak sınıf veya nesne ismi
function string get parent class	belirtilen nesne nesnesinin veya sınıfının ebeveyn sınıfının ismini bir dizge olarak döndürür
function string get parent class mixed $nesne	nesne veya sınıfın ebeveyn sınıfının ismini d&ouml;nd&uuml;r&uuml;r
function get resource type $tanıtıcı	sınanacak özkaynak
function string get resource type	belirtilen tanıtıcı bir özkaynak ise bu işlev bu özkaynağın türünü belirten bir dizge döndürür
function string get resource type resource $tanıtıcı	&ouml;zkaynak t&uuml;r&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
function array getallheaders	herşey yolunda gitmişse mevcut isteğe ait tüm http başlıklarını içeren bir ilişkili dizi döndürür aksi takdirde false döndürür
function array getallheaders	t&uuml;m http istek başlıklarını getirir
function string getcwd	başarılı olursa geçerli çalışma dizinini aksi takdirde false döndürür
function string getcwd	ge&ccedil;erli &ccedil;alışma dizinini d&ouml;nd&uuml;r&uuml;r
function getdate $zaman_damgası	seçimlik zaman_damgası değiştirgesi integer türünde bir unix zaman damgası olup belirtilmediği takdirde yerel zaman kullanılır
function array getdate	zaman_damgası na karşılık olan tarih bilgisini bir ilişkisel dizi olarak döndürür
function array getdate int $zaman_damgası	tarih / zaman bilgisi getirir
function getenv $değişken	ortam değişkeninin ismi
function string getenv	bir hata oluşursa false aksi takdirde değişken ile belirtilen ortam değişkeninin değerini döndürür
function string getenv string $değişken	bir ortam değişkeninin değerini d&ouml;nd&uuml;r&uuml;r
function gethostbyaddr $ip_adresi	konağın ip adresi
function string gethostbyaddr	başarısızlık durumunda ip_adresi ile aksi takdirde konak ismi ile döner
function string gethostbyaddr string $ip_adresi	belirtilen ip adresine &ccedil;&ouml;z&uuml;mlenen konak ismini d&ouml;nd&uuml;r&uuml;r
function gethostbyname $konakadı	konak adı
function string gethostbyname	başarı durumunda bir dizge olarak ipv4 adresiyle aksi takdirde konakadı ile döner
function string gethostbyname string $konakadı	belirtilen konak adına ait ipv4 adresini d&ouml;nd&uuml;r&uuml;r
function gethostbynamel $konakadı	konak adı
function array gethostbynamel	konakadı çözümlenemezse false aksi takdirde ipv4 adreslerinin listesini döndürür
function array gethostbynamel string $konakadı	belirtilen konak adına ait ipv4 adreslerini d&ouml;nd&uuml;r&uuml;r
function string gethostname	başarısızlık durumunda false
function string gethostname	konak ismini d&ouml;nd&uuml;r&uuml;r
function getmxrr $önem	mx konaklarının isteklere yanıt verme sırasını belirleyen bilginin yerleştirileceği dizi seçimlik
function getmxrr $emiksler	bulunan mx kayıtlarının yerleştirileceği dizi
function getmxrr $konakadı	ağ konak adı
function bool getmxrr	bir mx kaydı bulunmuşsa true bir kayıt yoksa veya bir hata oluşmuşsa false döner
function bool getmxrr string $konakadı array $emiksler array $önem	belirtilen konak adı ile ilgili mx kaydını d&ouml;nd&uuml;r&uuml;r
function int getmyinode	hata oluşursa false aksi takdirde çalışan betiğin dosya düğümü numarasını bir tamsayı olarak döndürür
function int getmyinode	&ccedil;alışan betiğin dosya d&uuml;ğ&uuml;m&uuml; numarasını d&ouml;nd&uuml;r&uuml;r
function int getmypid	hata oluşursa false aksi takdirde php süreç kimliği döner
function int getmypid	php'nin s&uuml;re&ccedil; kimliğini pid d&ouml;nd&uuml;r&uuml;r
function getprotobyname $ad	protokolün adı
function int getprotobyname	protokol ismini bulamazsa -1 aksi takdirde protokol numarası ile döner
function int getprotobyname string $ad	protokol ismine karşılık d&uuml;şen protokol numarasını verir
function gettext $ileti	çevrilecek ileti
function string gettext	çevrilmişse çevrilmiş iletiyle çevrilmemişse belirtilen iletiyle döner
function string gettext string $ileti	ge&ccedil;erli uygulama alanında bir iletiyi arar
function glob $kalıp	dosya eşleştirme kalıbı
function glob $seçenekler	geçerli seçenekler: glob_mark - dönen her dizine bir bölü çizgisi ekler
function array glob	eşleşen dosya ve dizinleri içeren bir dizi döndürür
function array glob string $kalıp int $seçenekler	bir kalıpla eşleşen dosya yollarını bulur
function gmdate $biçim	zaman çıktısının biçimi string türündendir
function gmdate $zaman_damgası	seçimlik zaman_damgası değiştirgesi integer türünde bir unix zaman damgası olup belirtilmediği takdirde yerel zaman kullanılır
function string gmdate	biçimlendirilmiş tarih dizgesi döndürür
function string gmdate string $biçem int $zaman_damgası	bir tarih / saati gmt / utc tarih / saati olarak bi&ccedil;emler
function gmstrftime $zaman_damgası	seçimlik zaman_damgası değiştirgesi integer türünde bir unix zaman damgası olup belirtilmediği takdirde yerel zaman kullanılır
function gmstrftime $biçem	açıklama için strftime() işlevine bakınız
function string gmstrftime	istenilen biçime göre verilen zaman_damgası değiştirgesini ya da zaman damgası değiştirgesi kullanılmamışsa yerel zamanı; biçimlendirilmiş dizge olarak döndürür
function string gmstrftime string $biçem int $zaman_damgası	yerel ayarlara g&ouml;re tarih ve saati gmt / utc t&uuml;r&uuml;ne &ccedil;evirir
function grapheme extract $birim	boyut değiştirgesini oluşturacak birim türü: grapheme_extr_count öntanımlı) - boyut döndürülecek öntanımlı sesletim kümesi sayısıdır
function grapheme extract $boyut	döndürülecek azami birim sayısı
function grapheme extract $başlangıç	bayt cinsinden aramanın başlatılacağı konum
function grapheme extract $sonraki	sonraki aramanın başlangıç konumu
function grapheme extract $samanlık	aramanın yapılacağı dizge
function string grapheme extract	belirtilen başlangıç konumunda başlayıp boyut ve birim değiştirgelerine göre uzunluğu belirlenen bir öntanımlı sesletim kümesini içeren bir dizge ile döner
function string grapheme extract string $samanlık int $boyut int $birim int $başlangıç int $sonraki	utf-8 kodlanmış bir metin tamponundan &ouml;ntanımlı sesletim k&uuml;melerinden oluşan bir dizilimi d&ouml;nd&uuml;r&uuml;r
function grapheme stristr $iğne	aranacak dizge
function grapheme stristr $ilk_parça	true ise iğne nin bulunduğu ilk konuma göre samanlık dizgesinin ilk parçası döner
function grapheme stristr $samanlık	aramanın yapılacağı dizge
function string grapheme stristr	iğne bulunamazsa false aksi takdirde dizge parçası ile döner
function string grapheme stristr string $samanlık string $iğne bool $ilk_parça	harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak bir dizgedeki ilk sesletim birimine g&ouml;re ilk veya ikinci par&ccedil;a ile d&ouml;ner
function grapheme strlen $dizge	uzunluğu sesletim birimi cinsinden ölçülecek dizge
function int grapheme strlen	dizge boşsa 0 değilse dizgenin uzunluğu
function int grapheme strlen string $dizge	dizgenin sesletim birimi cinsinden uzunluğunu d&ouml;nd&uuml;r&uuml;r
function grapheme strstr $iğne	aranacak dizge
function grapheme strstr $ilk_parça	true ise iğne nin bulunduğu ilk konuma göre samanlık dizgesinin ilk parçası döner
function grapheme strstr $samanlık	aramanın yapılacağı dizge
function string grapheme strstr	iğne bulunamazsa false aksi takdirde dizge parçası ile döner
function string grapheme strstr string $samanlık string $iğne bool $ilk_parça	bir dizgedeki ilk sesletim birimine g&ouml;re ilk veya ikinci par&ccedil;a ile d&ouml;ner
function gregoriantojd $yil	-4714 ile 9999 arasında yıl değeri
function gregoriantojd $gun	1 ile 31 arasında gün değeri
function gregoriantojd $ay	1den ocak 12ye aralık kadar ay değeri
function int gregoriantojd	gregoryen tarihine karşılık tamsayı olarak jülyen gün sayısı
function int gregoriantojd int $ay int $gun int $yil	gregoryen tarihini j&uuml;lyen g&uuml;n sayısına &ccedil;evirir
function gzdeflate $seviye	sıkıştırma seviyesi
function gzdeflate $kodlama	zlib_encoding_* sabitlerinden biri
function gzdeflate $data	sıkıştırılacak veri
function string gzdeflate	bir hata oluşursa false aksi takdirde sıkıştırılmış dizgeyi döndürür
function string gzdeflate string $veri int $seviye int $kodlama	bir dizgeyi deflate bi&ccedil;eminde sıkıştırır
function gzeof $dt	gzipli dosya tanıtıcısı
function int gzeof	gzipli dosya tanıtıcısında dosya sonuna gelinmişse veya bir hata oluşmuşsa true aksi takdirde false döndürür
function int gzeof resource $dt	gzipli dosya tanıtıcında dosya sonunu sınar
function gzgetc $dt	gzipli dosya tanıtıcısı
function string gzgetc	sıkıştırılmamış karakteri veya gzeof() tan farklı olarak dosya sonuna gelinmişse false döndürür
function string gzgetc resource $dt	gzipli dosya g&ouml;stericisindeki karakteri d&ouml;nd&uuml;r&uuml;r
function gzgets $dt	gzipli dosya tanıtıcısı
function gzgets $uzunluk	okunacak verinin uzunluğu
function string gzgets	bir hata oluşursa false aksi takdirde sıkıştırılmamış dizgeyi döndürür
function string gzgets resource $dt int $uzunluk	gzipli dosya tanıtıcısından bir satır d&ouml;nd&uuml;r&uuml;r
function gzgetss $dt	gzipli dosya tanıtıcısı
function gzgetss $izinli_etiketler	bu isteğe bağlı değiştirgede ayıklanmayacak etiketleri belirtebilirsiniz
function gzgetss $uzunluk	okunacak verinin uzunluğu
function string gzgetss	bir hata oluşursa false aksi takdirde sıkıştırılmamış ve etiketleri ayıklanmış dizgeyi döndürür
function string gzgetss resource $dt int $uzunluk string $izinli_etiketler	gzipli dosya tanıtıcısından bir satır okuyup html etiketlerinden arındırır
function gzinflate $uzunluk	kodu çözülecek verinin azami uzunluğu
function gzinflate $veri	gzdeflate() tarafından sıkıştırılmış veri
function string gzinflate	bir hata durumunda false aksi takdirde verinin sıkıştırılmamış halini döndürür
function string gzinflate string $veri int $uzunluk	deflate sıkıştırmalı bir verinin sıkıştırmasını a&ccedil;ar
function gzopen $kip	fopen() işlevindeki gibi rb veya wb olmakla birlikte ayrıca bir sıkıştırma seviyesiyle wb9 gibi birlikte bir strateji de belirtilebilir: wb6f örneğindeki gibi süzgeçli veri için f ; wb1h örneğindeki gibi sadece huffman sıkıştırması için h
function gzopen $dosyaismi	gzipli dosyanın ismi
function gzopen $include_path_kullan	bu isteğe bağlı değiştirgeye 1 belirtirseniz dosya ayrıca include_path yönergesinde belirtilen yolarda da aranır
function resource gzopen	açılan dosyaya bir dosya tanıtıcısı döndürür
function resource gzopen string $dosyaismi string $kip int $include_path_kullan	bir gzipli dosya a&ccedil;ar
function gzpassthru $dt	gzipli dosya tanıtıcısı
function int gzpassthru	belirtilen dosya tanıtıcısından okunan sıkıştırılmamış bayt sayısı veya bir hata oluşmuşsa false döner
function int gzpassthru resource $dt	gzipli dosya tanıtıcısında kalan verinin tamamını &ccedil;ıktılar
function gzread $uzunluk	okunacak sıkıştırılmamış bayt sayısı
function gzread $dt	gzipli dosya tanıtıcısı
function string gzread	okunan veri ile döner
function string gzread resource $dt int $uzunluk	gzipli dosyayı ikil kipte okur
function gzseek $dt	gzipli dosya tanıtıcısı
function gzseek $konum	göstericinin götürüleceği konum
function gzseek $nereye	olası nereye değerleri: seek_set - gösterici tam konum uncu bayta yerleştirilir
function int gzseek	başarı durumunda 0 aksi takdirde -1 döner
function int gzseek resource $dt int $konum int $nereye	gzipli dosya g&ouml;stericisini konumlar
function gztell $dt	gzipli dosya tanıtıcısı
function int gztell	dosya göstericisinin yeri veya bir hata oluşmuşsa false döner
function int gztell resource $dt	gzipli dosya tanıtıcısının okuma / yazma konumunu d&ouml;nd&uuml;r&uuml;r
function gzuncompress $uzunluk	kodu çözülecek verinin azami uzunluğu
function gzuncompress $veri	gzcompress() tarafından sıkıştırılmış veri
function string gzuncompress	verinin sıkıştırılmamış halini veya bir hata oluşması halinde false döndürür
function string gzuncompress string $veri int $uzunluk	sıkıştırılmış bir dizgenin sıkıştırmasını a&ccedil;ar
function gzwrite $dt	gzipli dosya tanıtıcısı
function gzwrite $uzunluk	yazılacak sıkıştırılmamış bayt sayısı
function gzwrite $dizge	sıkıştırılarak dosyaya yazılacak dizge
function int gzwrite	belirtilen sıkıştırılmış dosya akımına yazılan sıkıştırılmamış bayt sayısı ile döner
function int gzwrite resource $dt string $dizge int $uzunluk	bir dizgeyi bir gzipli dosyaya ikil kipte yazar
function void halt compiler	derleyicinin &ccedil;alışmasını durdurur
function array hash algos	desteklenen özetleme algoritmalarını içeren sayısal indisli bir dizi döndürür
function array hash algos	kayıtlı &ouml;zetleme algoritmalarının bir listesini d&ouml;nd&uuml;r&uuml;r
function hash copy $bağlam	hash_init() tarafından döndürülmüş özetleme bağlamı
function resource hash copy	özetleme bağlamı özkaynağının bir kopyasını döndürür
function resource hash copy resource $bağlam	&ouml;zetleme bağlamını kopyalar
function hash final $bağlam	hash_init() tarafından döndürülmüş özetleme bağlamı
function hash final $ham_çıktı	true olduğu takdirde ham ikil veri çıktılanır aksi takdirde false küçük harfli onaltılıklar çıktılanır
function string hash final	hesaplanan ileti özetini ham_çıktı için true belirtilmedikçe küçük harfli onaltılıklardan oluşan bir dizge olarak aksi takdirde ham ikil gösterimi içeren bir dizge olarak çıktılar
function string hash final resource $bağlam bool $ham_çıktı	bir ardışık &ouml;zetleme işlemini bitirip &uuml;retilen &ouml;zeti d&ouml;nd&uuml;r&uuml;r
function hash hmac file $dosya	özeti hesaplanacak dosyanın yeri; fopen() sarmalayıcıları desteklenir
function hash hmac file $ham_çıktı	true olduğu takdirde ham ikil veri çıktılanır aksi takdirde false küçük harfli onaltılıklar çıktılanır
function hash hmac file $algo	özetleme algoritmasının ismi md5 sha256 haval160 4 ve benzerleri
function hash hmac file $anahtar	hmac ileti özetinin üretiminde kullanılacak paylaşımlı gizli anahtar
function string hash hmac file	hesaplanan ileti özetini ham_çıktı için true belirtilmedikçe küçük harfli onaltılıklardan oluşan bir dizge olarak aksi takdirde ham ikil gösterimi içeren bir dizge olarak çıktılar
function string hash hmac file string $algo string $dosya string $anahtar bool $ham_çıktı	bir dosyanın i&ccedil;eriğinden hmac y&ouml;ntemini kullanarak bir anahtarlı ileti &ouml;zeti &uuml;retir
function hash update file $dosya	özeti hesaplanacak dosyanın yeri; fopen() sarmalayıcıları desteklenir
function hash update file $bağlam	hash_init() tarafından döndürülmüş özetleme bağlamı
function hash update file $akım	stream_context_create() ile oluşturulmuş bir akım bağlamı
function bool hash update file	başarı durumunda true başarısızlık durumunda false döner
function bool hash update file resource $bağlam string $dosya resource $akım	veriyi bir dosyadan etkin bir &ouml;zetleme bağlamına dahil eder
function hash update stream $bağlam	hash_init() tarafından döndürülmüş özetleme bağlamı
function hash update stream $dt	bir akım oluşturma işlevi tarafından oluşturulmuş bir dosya tanıtıcısı
function hash update stream $uzunluk	akımdan özetleme bağlamına kopyalanacak azami karakter sayısı
function int hash update stream	dt den bağlam a eklenebilen bayt sayısı
function int hash update stream resource $bağlam resource $dt int $uzunluk	veriyi a&ccedil;ık bir akımdan etkin bir &ouml;zetleme bağlamına dahil eder
function hash $ham_çıktı	true olduğu takdirde ham ikil veri çıktılanır aksi takdirde false küçük harfli onaltılıklar çıktılanır
function hash $algo	özetleme algoritmasının ismi md5 sha256 haval160 4 ve benzerleri
function hash $veri	özeti çıkarılacak ileti
function string hash	hesaplanan ileti özetini ham_çıktı için true belirtilmedikçe küçük harfli onaltılıklardan oluşan bir dizge olarak aksi takdirde ham ikil gösterimi içeren bir dizge olarak çıktılar
function string hash string $algo string $veri bool $ham_çıktı	bir ileti &ouml;zeti &uuml;retir
function header $http_yanıt_kodu	http yanıt kodunun belirtilen değer olması için zorlanır
function header $değiştir	değiştir değiştirgesi isteğe bağlı olup önceki bir başlığın mı değiştireceğini yoksa aynı türde ikinci bir başlık daha mı ekleneceğini belirtilir
function header $dizge	başlık dizgesi
function void header string $dizge bool $değiştir int $http_yanıt_kodu	ham bir http başlığı g&ouml;nderir
function array headers list	başlıkları içeren sayısal indisli bir dizi döndürür
function array headers list	g&ouml;nderilmiş veya g&ouml;nderilmeye hazır yanıt başlıklarının listesiyle d&ouml;ner
function headers sent $satır	çıktının başlatılacağı satır numarası
function headers sent $dosya	isteğe bağlı dosya ve satır değiştirgeleri kullanılırsa headers_sent() işlevi çıktının başlatılacağı php kaynak dosyası ismi ve satır numarasını dosya ve satır değiştirgelerine yerleştirir
function bool headers sent	henüz hiçbir başlık gönderilmemişse headers_sent() işlevi false ile döner aksi takdirde true döndürür
function bool headers sent string $dosya int $satır	başlıklar g&ouml;nderilmiş mi g&ouml;nderilmişse nerede g&ouml;nderilmiş diye bakar
function hebrev $ibranice_metin	ibranice girdi dizgesi
function hebrev $satırdaki_azami_krk_sayısı	isteğe bağlı bu değiştirge ile her satırda bulunabilecek azami karakter sayısı belirtilebilir
function string hebrev	görsel dizge
function string hebrev string $ibranice_metin int $satırdaki_azami_krk_sayısı	mantıksal ibranice metni g&ouml;rsel metne d&ouml;n&uuml;şt&uuml;r&uuml;r
function hebrevc $ibranice_metin	ibranice girdi dizgesi
function hebrevc $satırdaki_azami_krk_sayısı	isteğe bağlı bu değiştirge ile her satırda bulunabilecek azami karakter sayısı belirtilebilir
function string hebrevc	görsel dizge
function string hebrevc string $ibranice_metin int $satırdaki_azami_krk_sayısı	mantıksal ibranice metni satırsonlarıyla birlikte g&ouml;rsel metne d&ouml;n&uuml;şt&uuml;r&uuml;r
function highlight file $döndür	vurgulanmış dizgeyi çıktılamak yerine döndürmesini isterseniz bu değiştirgeyle işleve true aktarın
function highlight file $dosya	vurgulanacak php kodunu içeren dosyanın yolu
function mixed highlight file	döndür değiştirgesi true ise elde edilen dizge basılmaz sadece döndürülür
function mixed highlight file string $dosya bool $döndür	bir dosyadaki s&ouml;zdizimini vurgular
function html entity decode $karküm	dönüşümde kullanılacak karakter kümesi
function html entity decode $dizge	girdi dizgesi
function html entity decode $öncelem_türü	seçimlik öncelem_türü değiştirgesi ile çift ve tek tırnaklar için işlevin nasıl davranacağını belirleyebilirsiniz
function string html entity decode	kodlaması çözülmüş dizge
function string html entity decode string $dizge int $öncelem_türü string $karküm	d&ouml;n&uuml;şt&uuml;r&uuml;lebilecek t&uuml;m html &ouml;ğelerini karakter haline getirir
function htmlspecialchars $karküm	dönüşümde kullanılacak karakter kümesi
function htmlspecialchars $dizge	dönüştürülecek dizge
function htmlspecialchars $çifte_kodlama	bu değiştirgede false belirtilirse zaten kodlanmış html öğeleri tekrar kodlanmaz
function htmlspecialchars $öncelem_türü	belirtilmesi isteğe bağlı olan bu değiştirgede tek ve çift tırnaklar için işlevin nasıl işlem yapacağı belirtilir
function string htmlspecialchars	dönüştürülen dizge
function string htmlspecialchars string $dizge int $öncelem_türü string $karküm bool $çifte_kodlama	&ouml;zel karakterleri html &ouml;ğeleri haline getirir
function http build query $form_verisi	özellikleri içeren bir dizi veya nesne belirtilebilir
function http build query $ayraç	bu değiştirgede bir ayraç belirtilmezse değiştirge ayracı olarak arg_separator
function http build query $sayısal_önek	temel dizide sayısal indisler kullanılmışsa sayısal indislerin her birinin önüne bu değiştirgede belirtilen değer getirilir ve bu sadece temel dizinin indislerine uygulanır
function string http build query	url kodlamalı bir dizge döner
function string http build query array $form_verisi string $sayısal_önek string $ayraç	url kodlamalı sorgu dizgesi &uuml;retir
function iconv get encoding $tür	isteğe bağlı type değiştirgesi ile şunlardan biri belirtilebilir: hepsi için all girdi karakter kodlaması için input_encoding çıktı karakter kodlaması için output_encoding dahili karakter kodlaması için internal_encoding
function mixed iconv get encoding	başarısızlık durumunda false aksi takdirde dahili yapılandırma değişkeninin değeri döner
function mixed iconv get encoding string $tür	iconv eklentisinin dahili yapılandırma değişkenlerini d&ouml;nd&uuml;r&uuml;r
function iconv mime decode $kip	kip değiştirgesi işlev bozuk bir mime başlık alanı saptadığı takdirde işlevin davranışını belirler
function iconv mime decode $karküm	isteğe bağlı karküm değiştirgesi elde edilecek dizgenin karakter kümesini belirler
function iconv mime decode $kodlanmış_başlık	bir dizge olarak kodlanmış başlık
function string iconv mime decode	başarı durumunda kodu çözülmüş mime alanı aksi takdirde false döner
function string iconv mime decode string $kodlanmış_başlık int $kip string $karküm	bir mime başlık alanının kodunu &ccedil;&ouml;zer
function iconv mime encode $alan_değeri	alanın değeri
function iconv mime encode $alan_adı	alan ismi
function iconv mime encode $tercihler	isteğe bağlı tercihler değiştirgesinde yapılandırma öğelerini içeren bir dizi belirterek iconv_mime_encode() işlevinin davranışını belirleyebilirsiniz
function string iconv mime encode	başarı durumunda kodlanmış mime alanı aksi takdirde false döner
function string iconv mime encode string $alan_adı string $alan_değeri array $tercihler	bir mime başlık alanı tertipler
function iconv set encoding $türü	bir dizge olarak şunlardan biri olabilir: input_encoding output_encoding internal_encoding
function iconv set encoding $karküm	karakter kümesi
function bool iconv set encoding	başarı durumunda true başarısızlık durumunda false döner
function bool iconv set encoding string $türü string $karküm	karakter kodlaması d&ouml;n&uuml;ş&uuml;m&uuml; i&ccedil;in ge&ccedil;erli karakter k&uuml;mesini tanımlar
function iconv strlen $karküm	eğer karküm belirtilmezse dizgenin karakter kodlamasının iconv
function iconv strlen $dizge	karakter sayısı hesaplanacak dizge
function int iconv strlen	dizge dizgesinin karakter sayısını bir tamsayı olarak döndürür
function int iconv strlen string $dizge string $karküm	dizgenin karakter sayısı ile d&ouml;ner
function iconv strpos $karküm	eğer karküm belirtilmezse dizgenin karakter kodlamasının iconv
function iconv strpos $başlangıç	aramanın başlatılacağı konum seçimlik
function iconv strpos $iğne	aranacak alt dizge
function iconv strpos $samanlık	aramanın yapılacağı dizge
function int iconv strpos	ilk iğne nin samanlık içinde bulunduğu yerin indisi ile döner
function int iconv strpos string $samanlık string $iğne int $başlangıç string $karküm	samanlıktakı ilk iğneyi bulur
function iconv $dizge	dönüştürülecek dizge
function iconv $kodlamaya	çıktı karakter kümesi
function iconv $kodlamadan	girdi karakter kümesi
function string iconv	dönüşüm başarılı olursa dönüştürülen dizge aksi takdirde false döner
function string iconv string $kodlamadan string $kodlamaya string $dizge	dizgenin karakter kodlamasını d&ouml;n&uuml;şt&uuml;r&uuml;r
function idate $zaman_damgası	seçimlik zaman_damgası değiştirgesi integer türünde bir unix zaman damgası olup belirtilmediği takdirde yerel zaman kullanılır
function int idate	integer türünde bir değer döner
function int idate string $biçem int $zaman_damgası	yerel zamanı / tarihi tamsayı olarak bi&ccedil;imlendirir
function idn to ascii $alan	dönüştürülecek alan adı
function idn to ascii $seçenekler	idna_* sabitlerinden oluşan dönüşüm seçenekleri
function string idn to ascii	ascii uyumlu kodlanmış alan adı
function string idn to ascii string $alan int $seçenekler	alan adını idna ascii bi&ccedil;imine d&ouml;n&uuml;şt&uuml;r&uuml;r
function idn to utf8 $alan	kodlaması evrenkoda dönüştürülecek idna ascii kodlu alan adı
function idn to utf8 $seçenekler	idna_* sabitlerinden oluşan dönüşüm seçenekleri
function string idn to utf8	evrenkod ile kodlanmış alan adı
function string idn to utf8 string $alan int $seçenekler	alan adı kodlamasını idna ascii'den evrenkoda d&ouml;n&uuml;şt&uuml;r&uuml;r
function ignore user abort $değer	bu değiştirge belirtilmişse değiştirge değeri ignore_user_abort yönergesinin değeri olarak kullanılır
function int ignore user abort	önceki değeri bir tamsayı olarak döndürür
function int ignore user abort string $değer	bir istemci bağlantıyı terkettiğinde betiğin sonlandırılıp sonlandırılmayacağını belirler
function image type to mime type $resimtürü	imagetype_xxx sabitlerinden biri
function string image type to mime type int $resimtürü	getimagesize exif_read_data exif_thumbnail exif_imagetype ile d&ouml;nd&uuml;r&uuml;len resim t&uuml;r&uuml; ile ilgili mime t&uuml;r&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
function image2wbmp $dosyaismi	resmin kaydedileceği dosyanın yolu
function image2wbmp $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function image2wbmp $eşik	eşik değeri; 0-255 aralığında bir değerdir
function bool image2wbmp	başarı durumunda true başarısızlık durumunda false döner
function bool image2wbmp resource $resim string $dosyaismi int $eşik	bir dosyaya veya tarayıcıya bir wbmp resmi &ccedil;ıktılar
function imagealphablending $etkin	harmanlama kipinin etkin olup olmayacağı; false öntanımlıdır
function imagealphablending $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function bool imagealphablending	başarı durumunda true başarısızlık durumunda false döner
function bool imagealphablending resource $resim bool $etkin	bir resim i&ccedil;in harmanlama kipini etkinleştirir
function imageantialias $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imageantialias $etkin	kenar yumuşatma uygulanıp uygulanmayacağı
function bool imageantialias	başarı durumunda true başarısızlık durumunda false döner
function bool imageantialias resource $resim bool $etkin	kenar yumuşatma işlevlerini uygulatır
function imagearc $renk	imagecolorallocate() ile oluşturulan bir renk tanıtıcısı
function imagearc $son	derece cinsinden yayın bitiş açısı
function imagearc $my	merkezin y konumu
function imagearc $baş	derece cinsinden yayın başlangıç açısı
function imagearc $genişlik	yay genişliği
function imagearc $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagearc $yükseklik	yay yüksekliği
function imagearc $mx	merkezin x konumu
function bool imagearc	başarı durumunda true başarısızlık durumunda false döner
function bool imagearc resource $resim int $mx int $my int $genişlik int $yükseklik int $baş int $son int $renk	bir yay &ccedil;izer
function imagechar $renk	imagecolorallocate() ile oluşturulmuş bir rengin tanıtıcısı
function imagechar $yazıtipi	belirtilecek değer latin2 kodlamalı yerleşik yazı tipleri için 1 2 3 4 5 daha büyük numara daha yüksek yazı tipine karşılıktır veya imageloadfont() ile tanımlanmış kendi yazı tipi betimleyicilerinizden biri olabilir
function imagechar $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagechar $y	başlangıç y koordinatı
function imagechar $x	başlangıç x koordinatı
function imagechar $karakter	çizilecek karakter
function bool imagechar	başarı durumunda true başarısızlık durumunda false döner
function bool imagechar resource $resim int $yazıtipi int $x int $y string $karakter int $renk	yatay olarak bir karakter &ccedil;izer
function imagecharup $renk	imagecolorallocate() ile oluşturulmuş bir rengin tanıtıcısı
function imagecharup $yazıtipi	belirtilecek değer latin2 kodlamalı yerleşik yazı tipleri için 1 2 3 4 5 daha büyük numara daha yüksek yazı tipine karşılıktır veya imageloadfont() ile tanımlanmış kendi yazı tipi betimleyicilerinizden biri olabilir
function imagecharup $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecharup $y	başlangıç y koordinatı
function imagecharup $x	başlangıç x koordinatı
function imagecharup $karakter	çizilecek karakter
function bool imagecharup	başarı durumunda true başarısızlık durumunda false döner
function bool imagecharup resource $image int $font int $x int $y string $c int $color	d&uuml;şey olarak bir karakter &ccedil;izer
function imagecolorallocate $yeşil	rengin yeşil bileşeninin değeri
function imagecolorallocate $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorallocate $mavi	rengin mavi bileşeninin değeri
function imagecolorallocate $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorallocate	renk ayrılamamışsa false aksi takdirde renk inidisi ile döner
function int imagecolorallocate resource $resim int $kırmızı int $yeşil int $mavi	bir resim i&ccedil;in bir renk ayırır
function imagecolorat $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorat $x	pikselin x konumu
function imagecolorat $y	pikselin y konumu
function int imagecolorat	renk indisini döndürür
function int imagecolorat resource $resim int $x int $y	bir pikselin renk indisini d&ouml;nd&uuml;r&uuml;r
function imagecolorclosest $yeşil	rengin yeşil bileşeninin değeri
function imagecolorclosest $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorclosest $mavi	rengin mavi bileşeninin değeri
function imagecolorclosest $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorclosest	paletteki en yakın rengin indisi döner
function int imagecolorclosest resource $resim int $kırmızı int $yeşil int $mavi	belirtilen rengin en yakın benzerinin indisini d&ouml;nd&uuml;r&uuml;r
function imagecolorclosestalpha $alfa	0-127 arasında belirtilebilir
function imagecolorclosestalpha $yeşil	rengin yeşil bileşeninin değeri
function imagecolorclosestalpha $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorclosestalpha $mavi	rengin mavi bileşeninin değeri
function imagecolorclosestalpha $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorclosestalpha	paletteki en yakın rengin indisi döner
function int imagecolorclosestalpha resource $resim int $kırmızı int $yeşil int $mavi int $alfa	alfası ile birlikte belirtilen rengin en yakın benzerinin renk indisini verir
function imagecolorclosesthwb $yeşil	rengin yeşil bileşeninin değeri
function imagecolorclosesthwb $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorclosesthwb $mavi	rengin mavi bileşeninin değeri
function imagecolorclosesthwb $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorclosesthwb	en yakın renk sıcaklığına beyaz ve siyahlığa sahip renk indisini döndürür
function int imagecolorclosesthwb resource $resim int $kırmızı int $yeşil int $mavi	en yakın renk sıcaklığına beyaz ve siyahlığa sahip renk indisini verir
function imagecolordeallocate $renk	renk tanıtıcısı
function imagecolordeallocate $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function bool imagecolordeallocate	başarı durumunda true başarısızlık durumunda false döner
function bool imagecolordeallocate resource $resim int $renk	bir rengi tanımsız yapar
function imagecolorexact $yeşil	rengin yeşil bileşeninin değeri
function imagecolorexact $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorexact $mavi	rengin mavi bileşeninin değeri
function imagecolorexact $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorexact	renk palette mevcut değilse -1 aksi takdirde rengin indisini döndürür
function int imagecolorexact resource $resim int $kırmızı int $yeşil int $mavi	belirtilen rengin indisini d&ouml;nd&uuml;r&uuml;r
function imagecolorexactalpha $alfa	0-127 arasında belirtilebilir
function imagecolorexactalpha $yeşil	rengin yeşil bileşeninin değeri
function imagecolorexactalpha $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorexactalpha $mavi	rengin mavi bileşeninin değeri
function imagecolorexactalpha $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorexactalpha	renk palette mevcut değilse -1 aksi takdirde rengin indisini döndürür
function int imagecolorexactalpha resource $resim int $kırmızı int $yeşil int $mavi int $alfa	alfası ile birlikte belirtilen rengin indisini verir
function imagecolormatch $resim1	resmin gerçek renkli sürümünün tanıtıcısı
function imagecolormatch $resim2	renkleri resim1 ile aynı yapılacak paletli sürümün tanıtıcısı
function bool imagecolormatch	başarı durumunda true başarısızlık durumunda false döner
function bool imagecolormatch resource $resim1 resource $resim2	bir resmin paletli s&uuml;r&uuml;m&uuml;n&uuml;n renklerini ger&ccedil;ek renkli s&uuml;r&uuml;m&uuml;n&uuml;n renkleriyle aynı yapar
function imagecolorresolve $yeşil	rengin yeşil bileşeninin değeri
function imagecolorresolve $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorresolve $mavi	rengin mavi bileşeninin değeri
function imagecolorresolve $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorresolve	bir renk indisi döndürür
function int imagecolorresolve resource $resim int $kırmızı int $yeşil int $mavi	belirtilen rengin veya en yakın benzerinin indisini d&ouml;nd&uuml;r&uuml;r
function imagecolorresolvealpha $alfa	0-127 arasında belirtilebilir
function imagecolorresolvealpha $yeşil	rengin yeşil bileşeninin değeri
function imagecolorresolvealpha $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorresolvealpha $mavi	rengin mavi bileşeninin değeri
function imagecolorresolvealpha $kırmızı	rengin kırmızı bileşeninin değeri
function int imagecolorresolvealpha	bir renk indisi döner
function int imagecolorresolvealpha resource $resim int $kırmızı int $yeşil int $mavi int $alfa	alfası ile birlikte belirtilen rengin veya en yakın benzerinin renk indisini verir
function imagecolorset $indis	palet içinde bir indis
function imagecolorset $yeşil	rengin yeşil bileşeninin değeri
function imagecolorset $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagecolorset $mavi	rengin mavi bileşeninin değeri
function imagecolorset $kırmızı	rengin kırmızı bileşeninin değeri
function void imagecolorset resource $resim int $indis int $kırmızı int $yeşil int $mavi	bir palet indisi i&ccedil;in renk tanımlar
function imagecolorsforindex $indis	renk indisi
function imagecolorsforindex $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function array imagecolorsforindex	belirtilen renk indisi ile ilişkili red green blue ve alpha kırmızı yeşil mavi ve alfa anahtarlarını içeren bir ilişkisel dizi döndürür
function array imagecolorsforindex resource $resim int $indis	bir renk indisinin renk bilgisini d&ouml;nd&uuml;r&uuml;r
function imagecolorstotal $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function int imagecolorstotal	paletli resimler için paletteki renk sayısını gerçek renkli resimler için ise 0 döndürür
function int imagecolorstotal resource $resim	bir resim paletindeki renk sayısını d&ouml;nd&uuml;r&uuml;r
function imagecopy $kyn_x	kaynak resimdeki x koordinatı
function imagecopy $kyn_x	kaynak resimdeki y koordinatı
function imagecopy $hedef	hedef resmin tanıtıcısı
function imagecopy $hdf_y	hedef resimdeki y koordinatı
function imagecopy $kyn_gnş	kaynak resimdeki parça genişliği
function imagecopy $kyn_yks	kaynak resimdeki parça yüksekliği
function imagecopy $hdf_x	hedef resimdeki x koordinatı
function imagecopy $kaynak	kaynak resmin tanıtıcısı
function bool imagecopy	başarı durumunda true başarısızlık durumunda false döner
function bool imagecopy resource $hedef resource $kaynak int $hdf_x int $hdf_y int $kyn_x int $kyn_y int $kyn_gnş int $kyn_yks	bir resim par&ccedil;asını kopyalar
function imagecreatefromgd $dosyaismi	gd resmin dosya yolu
function resource imagecreatefromgd	başarı durumunda resim dosya tanıtıcısı hata durumunda false döner
function resource imagecreatefromgd string $dosyaismi	bir gd dosyasından veya url'sinden yeni bir resim oluşturur
function imagecreatefromgd2part $genişlik	kaynak genişliği
function imagecreatefromgd2part $dosyaismi	gd2 resmin dosya yolu
function imagecreatefromgd2part $yükseklik	kaynak yüksekliği
function imagecreatefromgd2part $Y	parçanın y konumu
function imagecreatefromgd2part $X	parçanın x konumu
function resource imagecreatefromgd2part	başarı durumunda resim dosya tanıtıcısı hata durumunda false döner
function resource imagecreatefromgd2part string $dosyaismi int $X int $Y int $genişlik int $yükseklik	bir gd2 par&ccedil;a dosyasından veya url'sinden yeni bir resim oluşturur
function imagecreatefromgif $dosyaismi	gif resmin dosya yolu
function resource imagecreatefromgif	başarı durumunda resim dosya tanıtıcısı hata durumunda false döner
function resource imagecreatefromgif string $dosyaismi	bir dosya veya url'den yeni bir resim oluşturur
function imagecreatefromjpeg $dosyaismi	jpeg resmin dosya yolu
function resource imagecreatefromjpeg	başarı durumunda resim dosya tanıtıcısı hata durumunda false döner
function resource imagecreatefromjpeg string $dosyaismi	bir dosya veya url'den yeni bir resim oluşturur
function imagecreatefromstring $veri	resim verisini içeren dizge
function resource imagecreatefromstring	resim dosya biçemi desteklenmiyorsa veri biçemi tanınmıyorsa veya resim bozuksa ya da yükenemiyorsa false aksi takdirde bir resim tanıtıcısı döndürür
function resource imagecreatefromstring string $veri	belirtilen dizgeden yeni bir resim oluşturur
function imagecreatefromxbm $dosyaismi	xbm resmin dosya yolu
function resource imagecreatefromxbm	başarı durumunda resim dosya tanıtıcısı hata durumunda false döner
function resource imagecreatefromxbm string $dosyaismi	bir dosya veya url'den yeni bir resim oluşturur
function imagecreatetruecolor $genişlik	resmin genişliği
function imagecreatetruecolor $yükseklik	resmin yüksekliği
function resource imagecreatetruecolor	hata oluşursa false aksi takdirde bir resim tanıtıcısı döndürür
function resource imagecreatetruecolor int $genişlik int $yükseklik	yeni bir ger&ccedil;ek renkli resim oluşturur
function imagedashedline $x1	sol üst köşenin x konumu
function imagedashedline $y2	sağ alt köşenin y konumu
function imagedashedline $renk	dolgu rengi
function imagedashedline $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagedashedline $y1	sol üst köşenin y konumu
function imagedashedline $x2	sağ alt köşenin x konumu
function bool imagedashedline	daima true döner
function bool imagedashedline resource $resim int $x1 int $y1 int $x2 int $y2 int $renk	kesikli &ccedil;izgi &ccedil;izer
function imageellipse $renk	elipsin rengi
function imageellipse $my	merkezin y konumu
function imageellipse $yükseklik	elipsin yüksekliği
function imageellipse $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imageellipse $genişlik	elipsin genişliği
function imageellipse $mx	merkezin x konumu
function bool imageellipse	başarı durumunda true başarısızlık durumunda false döner
function bool imageellipse resource $resim int $mx int $my int $genişlik int $yükseklik int $renk	bir elips &ccedil;izer
function imagefill $x	başlangıç noktasının x konumu
function imagefill $renk	dolgu rengi
function imagefill $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagefill $y	başlangıç noktasının y konumu
function bool imagefill	başarı durumunda true başarısızlık durumunda false döner
function bool imagefill resource $resim int $x int $y int $renk	resmi boyar
function imagefilledellipse $my	merkezin y konumu
function imagefilledellipse $yükseklik	elipsin yüksekliği
function imagefilledellipse $renk	dolgu rengi
function imagefilledellipse $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagefilledellipse $genişlik	elipsin genişliği
function imagefilledellipse $mx	merkezin x konumu
function bool imagefilledellipse	başarı durumunda true başarısızlık durumunda false döner
function bool imagefilledellipse resource $resim int $mx int $my int $genişlik int $yükseklik int $renk	i&ccedil;i dolu bir elips &ccedil;izer
function imagefilledpolygon $nokta_sayısı	kırılma noktalarının sayısı; 3ten büyük olmalıdır
function imagefilledpolygon $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagefilledpolygon $renk	dolgu rengi
function imagefilledpolygon $noktalar	çokgeni oluşturan kırık çizginin kırılma noktalarının x ve y koordinatlarını çizilme sırasıyla içeren dizi
function bool imagefilledpolygon	başarı durumunda true başarısızlık durumunda false döner
function bool imagefilledpolygon resource $resim array $noktalar int $nokta_sayısı int $renk	i&ccedil;i dolu bir &ccedil;okgen &ccedil;izer
function imagefilledrectangle $x2	2
function imagefilledrectangle $y1	1
function imagefilledrectangle $y2	2
function imagefilledrectangle $x1	1
function imagefilledrectangle $renk	dolgu rengi
function imagefilledrectangle $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function bool imagefilledrectangle	başarı durumunda true başarısızlık durumunda false döner
function bool imagefilledrectangle resource $resim int $x1 int $y1 int $x2 int $y2 int $renk	i&ccedil;i dolu bir dikd&ouml;rtgen &ccedil;izer
function imagefilltoborder $kenar	kenar rengi
function imagefilltoborder $x	başlangıç noktasının x konumu
function imagefilltoborder $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagefilltoborder $dolgu	dolgu rengi
function imagefilltoborder $y	başlangıç noktasının y konumu
function bool imagefilltoborder	başarı durumunda true başarısızlık durumunda false döner
function bool imagefilltoborder resource $resim int $x int $y int $kenar int $dolgu	belli bir b&ouml;lgeyi belli bir renge boyar
function imagefilter $süzgeç	süzgeç şunlardan biri olabilir: img_filter_negate : resimdeki tüm renkleri zıt renge dönüştürür
function imagefilter $d1	img_filter_brightness : parlaklık seviyesi
function imagefilter $d4	img_filter_colorize : alfa kanalı
function imagefilter $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagefilter $d3	img_filter_colorize : mavi bileşenin seviyesi
function imagefilter $d2	img_filter_colorize : yeşil bileşenin seviyesi
function bool imagefilter	başarı durumunda true başarısızlık durumunda false döner
function bool imagefilter resource $resim int $süzgeç int $d1 int $d2 int $d3 int $d4	bir resme bir s&uuml;zge&ccedil; uygular
function imagefontheight $yazıtipi	belirtilecek değer latin2 kodlamalı yerleşik yazı tipleri için 1 2 3 4 5 daha büyük numara daha yüksek yazı tipine karşılıktır veya imageloadfont() ile tanımlanmış kendi yazı tipi betimleyicilerinizden biri olabilir
function int imagefontheight	piksel cinsinden yükseklik döner
function int imagefontheight int $yazıtipi	yazı tipi y&uuml;ksekliğini d&ouml;nd&uuml;r&uuml;r
function imagefontwidth $yazıtipi	belirtilecek değer latin2 kodlamalı yerleşik yazı tipleri için 1 2 3 4 5 daha büyük numara daha yüksek yazı tipine karşılıktır veya imageloadfont() ile tanımlanmış kendi yazı tipi betimleyicilerinizden biri olabilir
function int imagefontwidth	piksel cinsinden genişlik döndürür
function int imagefontwidth int $yazıtipi	yazı tipi genişliğini d&ouml;nd&uuml;r&uuml;r
function imagegammacorrect $girdigamma	girdi gamması
function imagegammacorrect $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagegammacorrect $çıktıgamma	çıktı gamması
function bool imagegammacorrect	başarı durumunda true başarısızlık durumunda false döner
function bool imagegammacorrect resource $resim float $girdigamma float $çıktıgamma	bir gd resmine gamma d&uuml;zeltmesi uygular
function imagegif $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagegif $dosyaismi	gif resminin kaydedileceği dosyanın yolu
function bool imagegif	başarı durumunda true başarısızlık durumunda false döner
function bool imagegif resource $resim string $dosyaismi	bir dosyaya veya tarayıcıya bir gif resmi &ccedil;ıktılar
function imagegrabwindow $pencere	görüntüsü yakalanacak pencerenin com örneğinin hwnd özelliği
function imagegrabwindow $istemci_alanı	pencerenin istemci alanı
function resource imagegrabwindow	hata oluşursa false aksi takdirde bir resim tanıtıcısı ile döner
function resource imagegrabwindow int $pencere int $istemci_alanı	bir pencereyi yakalar
function imageinterlace $geçişim	sıfırdan farklıysa resim geçişimli olur aksi takdirde geçişim biti kapatılır
function imageinterlace $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function int imageinterlace	geçişim biti ayarlanabilmişse 1 aksi takdirde 0 döner
function int imageinterlace resource $resim int $geçişim	ge&ccedil;işimliliği a&ccedil;ıp kapar
function imageistruecolor $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function bool imageistruecolor	resim gerçek renkli ise true aksi takdirde false döner
function bool imageistruecolor resource $resim	bir resmin ger&ccedil;ek renkli olup olmadığını bulur
function imagejpeg $dosyaismi	resmin kaydedileceği dosyanın yolu
function imagejpeg $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagejpeg $kalite	kalite isteğe bağlı olup 0dan en kötü kalite en küçük dosya 100e en yüksek kalite en büyük dosya kadar bir değer belirtilebilir
function bool imagejpeg	başarı durumunda true başarısızlık durumunda false döner
function bool imagejpeg resource $resim string $dosyaismi int $kalite	tarayıcıya veya bir dosyaya bir jpeg resmi &ccedil;ıktılar
function imagelayereffect $IMG_EFFECT_NORMAL	img_effect_alphablend ile aynı
function imagelayereffect $IMG_EFFECT_REPLACE	piksel değiştirme etkisi kullanılır imagealphablending() işlevine true aktarmaya eşdeğerdir
function imagelayereffect $IMG_EFFECT_OVERLAY	siyah pikseller siyah beyaz pikseller beyaz olarak kalırken gri artalan pikselleri önalan pikselinin rengini alırlar
function imagelayereffect $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagelayereffect $etki	şu sabitlerden biri olabilir: img_effect_replace piksel değiştirme etkisi kullanılır imagealphablending() işlevine true aktarmaya eşdeğerdir
function imagelayereffect $IMG_EFFECT_ALPHABLEND	normal piksel harmanlaması kullanılır( imagealphablending() işlevine false aktarmaya eşdeğerdir
function bool imagelayereffect	başarı durumunda true başarısızlık durumunda false döner
function bool imagelayereffect resource $image int $etki	php ile gelen libgd'nin katmanlama etkisini kullanmak i&ccedil;in alfa harmanlama se&ccedil;eneğini ayarlar
function imagepalettecopy $hedef	paletin kopyalanacağı resmin tanıtıcısı
function imagepalettecopy $source	kopyalanacak paleti içeren resmin tanıtıcısı
function void imagepalettecopy resource $hedef resource $kaynak	paleti bir resimden diğerine kopyalar
function imagepng $dosyaismi	resmin kaydedileceği dosyanın yolu
function imagepng $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagepng $kalite	sıkıştırma düzeyi: 0dan sıkıştırma yok 9a kadar
function imagepng $süzgeçler	png dosyasının boyutunu küçültme imkanı sağlar
function bool imagepng	başarı durumunda true başarısızlık durumunda false döner
function bool imagepng resource $resim string $dosyaismi int $kalite int $süzgeçler	tarayıcıya veya bir dosyaya bir png resmi &ccedil;ıktılar
function imagepsbbox $boşluk	bir yazı tipi içindeki bir boşluğun öntanımlı değerini belirtmek için kullanılır
function imagepsbbox $açı	derece olarak açı
function imagepsbbox $sıkışıklık	karakterler arasındaki boşluk miktarını belirtmek için kullanılır
function imagepsbbox $metin	resme yazılacak metin
function imagepsbbox $boyut	piksel olarak yazı tipi yüksekliği
function imagepsbbox $yazıtipi	imagepsloadfont() tarafından döndürülen bir yazı tipi özkaynağı
function array imagepsbbox	aşağıdaki elemanlardan oluşan bir dizi döner: 0 sol kenarın x konumu 1 üst kenarın y konumu 2 sağ kenarın x konumu 3 alt kenarın y konumu
function array imagepsbbox string $metin resource $yazıtipi int $boyut	bir postscript type1 yazı tipi ile yazılan bir metnin &ccedil;er&ccedil;evesini d&ouml;nd&uuml;r&uuml;r
function imagepsencodefont $kodlama_dosyası	bu dosyanın biçemi t1libs belgelerinde açıklanmaktadır
function imagepsencodefont $yazıtipi	imagepsloadfont() tarafından döndürülen bir yazı tipi özkaynağı
function bool imagepsencodefont	başarı durumunda true başarısızlık durumunda false döner
function bool imagepsencodefont resource $yazıtipi string $kodlama_dosyası	bir yazı tipinin karakter kodlamasını değiştirir
function imagepsextendfont $katsayı	yazı tipi genişlik çarpanı
function imagepsextendfont $yazıtipi	imagepsloadfont() tarafından döndürülen bir yazı tipi özkaynağı
function bool imagepsextendfont	başarı durumunda true başarısızlık durumunda false döner
function bool imagepsextendfont resource $yazıtipi float $katsayı	bir ps yazı tipini genişletir veya daraltır
function imagepsfreefont $yazıtipi	imagepsloadfont() tarafından döndürülen bir yazı tipi özkaynağı
function bool imagepsfreefont	başarı durumunda true başarısızlık durumunda false döner
function bool imagepsfreefont resource $font_index	bir postscript type 1 yazı tipi tarafından kullanılan belleği serbest bırakır
function imagepsloadfont $dosyaismi	postscript yazı tipi dosyasının yolu
function resource imagepsloadfont	herşey yolunda giderse geçerli bir yazıtipi tanıtıcısı döndürür
function resource imagepsloadfont string $dosyaismi	bir dosyadan bir postscript type 1 yazı tipi y&uuml;kler
function imagepsslantfont $eğim	eğiklik derecesi
function imagepsslantfont $yazıtipi	imagepsloadfont() tarafından döndürülen bir yazı tipi özkaynağı
function bool imagepsslantfont	başarı durumunda true başarısızlık durumunda false döner
function bool imagepsslantfont resource $yazıtipi float $eğim	bir yazı tipini eğer
function imagerectangle $color	imagecolorallocate() ile oluşturulan bir renk tanıtıcısı
function imagerectangle $x1	sol üst köşenin x konumu
function imagerectangle $y2	sağ alt köşenin y konumu
function imagerectangle $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagerectangle $y1	sol üst köşenin y konumu
function imagerectangle $x2	sağ alt köşenin x konumu
function bool imagerectangle	başarı durumunda true başarısızlık durumunda false döner
function bool imagerectangle resource $resim int $x1 int $y1 int $x2 int $y2 int $renk	bir dikd&ouml;rtgen &ccedil;izer
function imagerotate $açı	derece olarak dönüş açısı
function imagerotate $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagerotate $artalan	döndürme işleminden sonra boşta kalan yerin rengi
function imagerotate $şeffaflığı_yoksay	sıfırdan farklı bir değer belirtildiğinde şeffaf renkler yok sayılır
function resource imagerotate resource $resim float $açı int $artalan int $şeffaflığı_yoksay	bir resmi belirtilen a&ccedil;ıya g&ouml;re d&ouml;nd&uuml;r&uuml;r
function imagesavealpha $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagesavealpha $alfa_kaydet	alfa kanalının kaydedilip kaydedilmeyeceği belirtilir; false öntanımlıdır
function bool imagesavealpha	başarı durumunda true başarısızlık durumunda false döner
function bool imagesavealpha resource $resim bool $alfa_kaydet	png resimleri kaydederken tek renkli şeffaflığın tersine alfa kanalı bilgisinin kaydedilip kaydedilmeyeceğini belirtir
function imagesetbrush $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagesetbrush $fırça	bir resim özkaynağı
function bool imagesetbrush	başarı durumunda true başarısızlık durumunda false döner
function bool imagesetbrush resource $resim resource $fırça	&ccedil;izgi &ccedil;izmek i&ccedil;in fır&ccedil;a resmi oluşturur
function imagesetpixel $renk	imagecolorallocate() ile oluşturulmuş bir renk tanıtıcısı
function imagesetpixel $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagesetpixel $x	pikselin x konumu
function imagesetpixel $y	pikselin y konumu
function bool imagesetpixel	başarı durumunda true başarısızlık durumunda false döner
function bool imagesetpixel resource $resim int $x int $y int $renk	bir pikselin rengini değiştirir
function imagesettile $karo	bir karo olarak kullanılacak resim özkaynağı
function imagesettile $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function bool imagesettile	başarı durumunda true başarısızlık durumunda false döner
function bool imagesettile resource $image resource $karo	resmi doldurmak i&ccedil;in d&ouml;şemeyi etkin kılar
function imagestring $x	üst sol köşenin x konumu
function imagestring $y	üst sol köşenin y konumu
function imagestring $yazıtipi	belirtilecek değer latin2 kodlamalı yerleşik yazı tipleri için 1 2 3 4 5 daha büyük numara daha yüksek yazı tipine karşılıktır veya imageloadfont() ile tanımlanmış kendi yazı tipi betimleyicilerinizden biri olabilir
function imagestring $dizge	çizilecek dizge
function imagestring $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagestring $renk	imagecolorallocate() tarafından oluşturulmuş bir renk tanıtıcısı
function bool imagestring	başarı durumunda true başarısızlık durumunda false döner
function bool imagestring resource $resim int $yazıtipi int $x int $y string $dizge int $renk	bir dizgeyi yatay olarak yazar
function imagesx $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function int imagesx	hata oluşmuşsa false aksi takdirde belirtilen resmin genişliğini döndürür
function int imagesx resource $resim	resmin genişliğini d&ouml;nd&uuml;r&uuml;r
function imagesy $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function int imagesy	hata oluşmuşsa false aksi takdirde belirtilen resmin yüksekliğini döndürür
function int imagesy resource $resim	resmin y&uuml;ksekliğini d&ouml;nd&uuml;r&uuml;r
function imagetruecolortopalette $renk_sayısı	palette bulunacak azami renk sayısı
function imagetruecolortopalette $titrek	resmin titrek olup olmayacağı belirtilir
function imagetruecolortopalette $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function bool imagetruecolortopalette	başarı durumunda true başarısızlık durumunda false döner
function bool imagetruecolortopalette resource $resim bool $titrek int $renk_sayısı	bir ger&ccedil;ek renkli resmi bir paletli resme d&ouml;n&uuml;şt&uuml;r&uuml;r
function imagewbmp $dosyaismi	resmin kaydedileceği dosyanın yolu
function imagewbmp $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagewbmp $artalan	imagecolorallocate() tarafından sağlanmış bir tanıtıcı ile bir artalan rengi tanımlayabilirsiniz
function bool imagewbmp	başarı durumunda true başarısızlık durumunda false döner
function bool imagewbmp resource $resim string $dosyaismi int $artalan	resmi bir dosyaya veya tarayıcıya &ccedil;ıktılar
function imagexbm $dosyaismi	resmin kaydedileceği dosyanın yolu
function imagexbm $resim	imagecreatetruecolor() gibi bir resim oluşturma işlevinden dönen bir resim verisi
function imagexbm $artalan	imagecolorallocate() tarafından sağlanmış bir tanıtıcı ile bir artalan rengi tanımlayabilirsiniz
function bool imagexbm	başarı durumunda true başarısızlık durumunda false döner
function bool imagexbm resource $resim string $dosyaismi int $artalan	bir xbm resmini tarayıcıya veya dosyaya &ccedil;ıktılar
function array imap alerts	üretilmiş tüm uyarı iletilerini içeren bir dizi döner
function array imap alerts	oluşan t&uuml;m imap uyarı iletilerini d&ouml;nd&uuml;r&uuml;r
function imap body $seçenekler	şunlardan gerekenleri içeren bir bit maskesidir: ft_uid - iletinum bir eşsiz kimliktir
function imap body $iletinum	ileti numarası
function imap body $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function string imap body	belirtilen iletinin gövdesi bir dizge olarak döner
function string imap body resource $imap_akımı int $iletinum int $seçenekler	ileti g&ouml;vdesini okur
function imap bodystruct $bölüm	okunacak gövde bölümü
function imap bodystruct $iletinum	ileti numarası
function imap bodystruct $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function object imap bodystruct	bilgi bir nesne içinde döndürülür
function object imap bodystruct resource $imap_akımı int $iletinum string $bölüm	belirtilen iletinin bir g&ouml;vde b&ouml;l&uuml;m&uuml;n&uuml;n yapısını okur
function imap check $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function object imap check	şu özelliklere sahip bir nesne döner: date - rfc 2822 ye uygun olarak biçemlenmiş sistem zamanı
function object imap check resource $imap_akımı	posta kutusu bilgilerini d&ouml;nd&uuml;r&uuml;r
function imap clearflag full $aralık	ileti numaraları aralığı
function imap clearflag full $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap clearflag full $imler	rfc 2060 ta belirtildiği gibi silinecek imleri \\seen okundu \\answered yanıtlandı) \\flagged imli \\deleted silindi \\draft taslak olarak belirtebilirsiniz
function imap clearflag full $seçenekler	şunlardan gerekenleri içeren bir bit maskesidir: st_uid - aralık değiştirgesinin eşsiz kimlikleri içerdiği varsayılır
function bool imap clearflag full	başarı durumunda true başarısızlık durumunda false döner
function bool imap clearflag full resource $imap_akımı string $aralık string $imler int $seçenekler	iletilerdeki imleri temizler
function imap createmailbox $pk	posta kutusu ismi; daha fazla bilgi için imap_open() işlevine bakınız
function imap createmailbox $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function bool imap createmailbox	başarı durumunda true başarısızlık durumunda false döner
function bool imap createmailbox resource $imap_akımı string $pk	yeni bir posta kutusu oluşturur
function imap delete $seçenekler	bu değiştirgede ft_uid sabiti belirtilirse iletinum değiştirgesinin eşsiz kimlikleri içerdiği varsayılır
function imap delete $iletinum	ileti numarası
function imap delete $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function bool imap delete	true döner
function bool imap delete resource $imap_akımı int $iletinum int $seçenekler	belirtilen iletiyi silindi olarak imler
function imap expunge $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function bool imap expunge	true döner
function bool imap expunge resource $imap_akımı	silindi imli t&uuml;m iletileri ger&ccedil;ekten siler
function imap fetch overview $aralık	ileti numaraları aralığı
function imap fetch overview $seçenekler	bu değiştirgede ft_uid sabiti belirtilirse aralık değiştirgesi ileti numaralarını veya eşsiz kimlikleri içerebilir
function imap fetch overview $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function array imap fetch overview	her biri belli bir iletiye ait nesnelerden oluşan bir dizi döner
function array imap fetch overview resource $imap_akımı string $aralık int $seçenekler	belirtilen iletinin başlıklarından belli bilgileri toplar
function imap fetchheader $iletinum	ileti numarası
function imap fetchheader $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap fetchheader $seçenekler	olası seçenekler : ft_uid - the iletinum değiştirgesinin bir eşsiz kimlik olarak ele alınmasını sağlar
function string imap fetchheader	belirtilen iletinin başlığını içeren bir dizge döner
function string imap fetchheader resource $imap_akımı int $iletinum int $seçenekler	bir iletinin başlığını d&ouml;nd&uuml;r&uuml;r
function imap gc $önbellek_türü	silinecek önbellek türü
function imap gc $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function string imap gc	true döner
function string imap gc resource $imap_akımı int $önbellek_türü	imap &ouml;nbelleğini temizler
function imap get quota $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap get quota $quota_root	genelde user
function array imap get quota	belirtilen posta kutusunun kapasitesi ile ilgili bilgileri bir ilişkisel dizi içinde döndürür
function array imap get quota resource $imap_akımı string $kullanıcı	belirtilen kullanıcının kota ayarlarını d&ouml;nd&uuml;r&uuml;r
function imap get quotaroot $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap get quotaroot $pk	normalde posta kutusunun ismidir örneğin inbox)
function array imap get quotaroot	belirtilen posta kutusunun kapasitesi ile ilgili bilgileri bir ilişkisel dizi içinde döndürür
function array imap get quotaroot resource $imap_akımı string $pk	kullanıcının kendi kota ayarlarını d&ouml;nd&uuml;r&uuml;r
function imap getacl $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap getacl $pk	posta kutusunun ismi; bilgi için imap_open() işlevine bakınız
function array imap getacl	dizin = > izinler çiftlerinden oluşan bir ilişkisel dizi döner
function array imap getacl resource $imap_akımı string $pk	belirtilen posta kutusunun erişim izinlerini d&ouml;nd&uuml;r&uuml;r
function imap getmailboxes $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap getmailboxes $pattern	posta kutusu hiyerarşisi içine aramanın başlayacağı yeri belirtir
function imap getmailboxes $hedef	imap_open() işlevinde açıklandığı gibi normal olarak bir sunucu belirtimi olmalıdır
function array imap getmailboxes	posta kutusu bilgilerini içeren nesnelerden oluşan bir dizi döner
function array imap getmailboxes resource $imap_akımı string $hedef string $kalıp	posta kutuları hakkında ayrıntılı bilgi d&ouml;nd&uuml;r&uuml;r
function imap headerinfo $konu_uzunluğu	fetchsubject özelliği için karakter sayısı
function imap headerinfo $uzunluk	fetchfrom özelliği için karakter sayısı
function imap headerinfo $iletinum	ileti numarası
function imap headerinfo $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function object imap headerinfo	aşağıdaki özelliklere sahip bir nesne döner: toaddress - to: satırının tamamı en fazla 1024 karakter
function object imap headerinfo resource $imap_akımı int $iletinum int $uzunluk int $konu_uzunluğu string $öntanımlı_konak	belirtilen iletinin başlığını okur
function imap headers $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function array imap headers	başlık bilgisiyle biçemlenmiş dizgelerden oluşan bir dizi döner
function array imap headers resource $imap_akımı	bir posta kutusu i&ccedil;indeki t&uuml;m iletilerin başlıklarını d&ouml;nd&uuml;r&uuml;r
function string imap last error	ortada bir hata iletisi yoksa false varsa son imap hatasının açıklamasını içeren bir dizge döndürür
function string imap last error	ge&ccedil;erli sayfa isteği sırasında oluşan son imap hatasının a&ccedil;ıklamasını d&ouml;nd&uuml;r&uuml;r
function imap listscan $kalıp	posta kutusu hiyerarşisi içine aramanın başlayacağı yeri belirtir
function imap listscan $içerik	aranacak dizge
function imap listscan $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap listscan $hedef	imap_open() işlevinde açıklandığı gibi normal olarak bir sunucu belirtimi olmalıdır
function array imap listscan	posta kutusu metninde içerik dizgesi geçen posta kutusu isimlerini bir dizi içinde döndürür
function array imap listscan resource $imap_akımı string $hedef string $kalıp string $içerik	belirtilen metin ile eşleşen posta kutularını listeler
function imap lsub $kalıp	posta kutusu hiyerarşisi içine aramanın başlayacağı yeri belirtir
function imap lsub $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap lsub $hedef	imap_open() işlevinde açıklandığı gibi normal olarak bir sunucu belirtimi olmalıdır
function array imap lsub	üye olunan tüm posta kutularını bir dizi içinde döndürür
function array imap lsub resource $imap_akımı string $hedef string $kalıp	&uuml;yesi olunan t&uuml;m posta kutularını listeler
function imap mail compose $zarf	başlıkları içeren bir ilişkisel dizi
function imap mail compose $gövde	gövdeleri içeren bir ilişkisel dizi
function string imap mail compose	mime iletisi döner
function string imap mail compose array $zarf array $gövde	zarfı ve g&ouml;vdesi belirtilen mime iletisini oluşturur
function imap mime header decode $dizge	mime kodlu metin
function array imap mime header decode	kodu açılan başlıklar bir nesne dizisi olarak döndürülür
function array imap mime header decode string $dizge	mime başlık elemanlarının kodlamasını a&ccedil;ar
function imap msgno $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap msgno $uid	iletinin eşsiz kimliği
function int imap msgno	iletinin sıra numarası bir tamsayı olarak döner
function int imap msgno resource $imap_akımı int $uid	belirtilen eşsiz kimlik i&ccedil;in ileti numarasını d&ouml;nd&uuml;r&uuml;r
function imap num msg $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function int imap num msg	ileti sayısı bir tamsayı olarak döner
function int imap num msg resource $imap_akımı	posta kutusundaki ileti sayısını d&ouml;nd&uuml;r&uuml;r
function imap num recent $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function int imap num recent	son gelen ileti sayısını bir tamsayı olarak döndürür
function int imap num recent resource $imap_akımı	posta kutusuna en son gelen ileti sayısını d&ouml;nd&uuml;r&uuml;r
function imap open $pk	bir posta kutusu ismi bir sunucu ve sunucu üzerindeki bir posta kutusu yolundan oluşur
function imap open $Parola	kullanıcı ile ilişkili parola
function imap open $kullanıcı	kullanıcı ismi
function imap open $dnm_sayısı	azami bağlantı denemesi sayısı
function imap open $seçenekler	aşağıdakilerden bir veya birkaçını içeren bir bit maskesidir: op_readonly - posta kutusu salt-okunu açılır
function resource imap open	hata durumunda false yoksa bir imap akımı döner
function resource imap open string $pk string $kullanıcı string $parola int $seçenekler int $dnm_sayısı	belirtilen posta kutusuna yeni bir imap akımı a&ccedil;ar
function imap ping $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function bool imap ping	akım hala etkinse true diğer tüm durumlarda false döner
function bool imap ping resource $imap_akımı	belirtilen imap akımı hala etkin mi diye bakar
function imap reopen $pk	posta kutusu adı; ayrıntılar için imap_open() işlevine bakınız
function imap reopen $seçenekler	aşağıdakilerden gerekenleri içeren bir bit maskesi olarak belirtilir: op_readonly - posta kutusunu salt-okunur açar op_anonymous - haberler sadece nntp için
function imap reopen $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap reopen $dnm_sayısı	azama bağlantı denemesi sayısı
function bool imap reopen	başarı durumunda true başarısızlık durumunda false döner
function bool imap reopen resource $imap_akımı string $pk int $seçenekler int $dnm_sayısı	imap akımını yeni posta kutusunda yeniden a&ccedil;ar
function imap rfc822 parse headers $başlıklar	çözümlenecek başlık verisi
function imap rfc822 parse headers $konakadı	öntanımlı konak adı
function object imap rfc822 parse headers	imap_header() işlevindeki gibi bir nesne döndürür farklı olarak imap sunucusundan gelen diğer özellikler ve imler hariç tutulur
function object imap rfc822 parse headers string $başlıklar string $konakadı	bir dizgedeki eposta başlıklarını &ccedil;&ouml;z&uuml;mler
function imap rfc822 write address $alan_adı	eposta adresinin alan adı parçası
function imap rfc822 write address $posta_kutusu	posta kutusu ismi; daha fazla bilgi için imap_open() işlevine bakınız
function imap rfc822 write address $adı_soyadı	eposta adresi sahibinin adı ve soyadı
function string imap rfc822 write address	rfc 2822 de tanımlandığı gibi düzgün olarak biçemlenmiş bir eposta adresi döner
function string imap rfc822 write address string $posta_kutusu string $alan_adı string $adı_soyadı	posta kutusu alan adı ve kişisel bilgi ile gerektiği gibi bi&ccedil;emlenmiş bir eposta adresi d&ouml;n&uuml;r&uuml;r
function imap savebody $dosya	bir dizge olarak ileti parçasının kaydedileceği dosyanın yolu veya fopen() tarafından döndürülmüş geçerli bir dosya tanıtıcısı
function imap savebody $parçanum	parça numarası
function imap savebody $iletinum	ileti numarası
function imap savebody $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap savebody $seçenekler	şunlardan gerekenleri içeren bir bit maskesidir: ft_uid - iletinum bir eşsiz kimliktir
function bool imap savebody	başarı durumunda true başarısızlık durumunda false döner
function bool imap savebody resource $imap_akımı mixed $dosya int $iletinum string $parçanum int $seçenekler	belirtilen iletinin g&ouml;vdesini bir dosyaya kaydeder
function imap search $karküm	karakter kümesi
function imap search $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap search $seçenekler	tek geçerli değer iletilerin dizi içinde ileti numaralarıyla değil eşsiz kimlikleriyle dönmesini sağlayan se_uid sabitidir
function imap search $kural	boşluk ayraçlı bir dizge olup aşağıdaki anahtar sözcüklere izin verilir
function array imap search	ileti numaralarını veya eşsiz kimlikleri içeren bir dizi döner
function array imap search resource $imap_akımı string $kural int $seçenekler string $karküm	belirtilen kurala uyan iletileri bir dizi i&ccedil;inde d&ouml;nd&uuml;r&uuml;r
function imap set quota $posta_kutusu	kotası tanımlanacak posta kutusu
function imap set quota $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap set quota $kota_sınırı	posta_kutusu nun azami boyu kb olarak
function bool imap set quota	başarı durumunda true başarısızlık durumunda false döner
function bool imap set quota resource $imap_akımı string $posta_kutusu int $kota_sınırı	belirtilen posta kutusu i&ccedil;in bir kota tanımlar
function imap status $seçenekler	geçerli seçenekler: sa_messages - posta kutusundaki ileti sayısını $durum->messages yapar
function imap status $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap status $posta_kutusu	posta kutusu ismi; daha fazla bilgi için imap_open() işlevine bakınız
function object imap status	durum bilgisini içeren bir nesne döndürür
function object imap status resource $imap_akımı string $posta_kutusu int $seçenekler	bir posta kutusunun durum bilgisini d&ouml;nd&uuml;r&uuml;r
function imap uid $iletinum	ileti numarası
function imap uid $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function int imap uid	belirtilen iletinin eşsiz kimliği döner
function int imap uid resource $imap_akımı int $iletinum	numarası belirtilen iletiyle ilgili eşsiz kimliği d&ouml;nd&uuml;r&uuml;r
function imap undelete $iletinum	ileti numarası
function imap undelete $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function bool imap undelete	başarı durumunda true başarısızlık durumunda false döner
function bool imap undelete resource $imap_akımı int $iletinum int $seçenekler	silindi diye imlenmiş bir iletinin imini kaldırır
function imap unsubscribe $imap_akımı	imap_open() işlevinden dönen bir imap akımı
function imap unsubscribe $posta_kutusu	posta kutusu ismi; daha fazla bilgi için imap_open() işlevine bakınız
function bool imap unsubscribe	başarı durumunda true başarısızlık durumunda false döner
function bool imap unsubscribe resource $imap_akımı string $posta_kutusu	bir posta kutusundan &uuml;yeliği sonlandırır
function imap utf7 decode $metin	rfc 2060 ın 5
function string imap utf7 decode	metin geçersiz takviyeli utf-7 kodları veya iso-8859-1de bulunmayan karakterler içeriyorsa false yoksa dönüştürülmüş dizge döner
function string imap utf7 decode string $metin	bir dizgenin karakter kodlamasını takviyeli utf-7'den iso-8859-1'e d&ouml;n&uuml;şt&uuml;r&uuml;r
function imap utf7 encode $veri	iso-8859-1 kodlu bir dizge
function string imap utf7 encode	veri dizgesinin rfc 2060 ın 5
function string imap utf7 encode string $veri	iso-8859-1 kodlu bir dizgenin kodlamasını takviyeli utf-7'ye d&ouml;n&uuml;şt&uuml;r&uuml;r
function imap utf8 $mimeli_metin	mime kodlu dizge
function string imap utf8	utf-8 kodlanmış bir dizge
function string imap utf8 string $mimeli_metin	mime kodlu metni utf-8'e d&ouml;n&uuml;şt&uuml;r&uuml;r
function implode $parçalar	dizge haline getirilecek dizi
function implode $yapıştırıcı	öntanımlı olarak boş bir dizgedir
function string implode	her eleman arasına yapıştırıcı dizge yerleştirilmiş olarak dizi elemanlarını aynı sırada içeren bir dizge döner
function string implode string $yapıştırıcı array $parçalar	dizi elemanlarını birleştirip bir dizge elde eder
function import request variables $önek	küresel etki alanına dahil edilen tüm değişken isimlerinin önüne getirilecek dizge
function import request variables $türler	türler değiştirgesini kullanarak küresel etki alanına dahil edeceğiniz istek değişkenlerini belirtebilirsiniz
function bool import request variables	başarı durumunda true başarısızlık durumunda false döner
function bool import request variables string $türler string $önek	get / post / &ccedil;erez değişkenlerini k&uuml;resel etki alanına dahil eder
function in array $iğne	aranan değer
function in array $samanlık	dizi
function in array $türüne_de_bak	bu değiştirgede true belirtilmişse in_array() işlevi samanlık içindeki iğne nin türüne de bakacaktır
function bool in array	iğne bulunursa true aksi takdirde false döner
function bool in array mixed $iğne array $samanlık bool $strict	bir dizide bir değerin varlığını araştırır
function inet pton $ip_adresi	bir insan okuyabilir ipv4 veya ipv6 adresi
function string inet pton	belirtilen ip_adresi nin in_addr gösterimiyle döner
function string inet pton string $ip_adresi	insan okuyabilir bir ip adresini in_addr g&ouml;sterimine d&ouml;n&uuml;şt&uuml;r&uuml;r
function ini set $yönerge	ini_set() işlevi ile tüm yapılandırma yönergelerine değer atanamaz
function ini set $değer	yönergeye atanacak yeni değer
function string ini set	atama işlemi başarılı olursa eski değer aksi takdirde false döner
function string ini set string $yönerge string $değer	bir yapılandırma y&ouml;nergesine değer atar
function interface exists $özdevinimli_yükle	__autoload çağrısı yapılıp yapılmayacağı
function interface exists $arayüz	arayüzün ismi
function bool interface exists	belirtilen arayüz tanımlıysa true aksi takdirde false döner
function bool interface exists string $arayüz bool $özdevinimli_yükle	aray&uuml;z tanımlı mı diye bakar
function intl error name $error_code	icu hata kodu
function string intl error name	hata kodu sabitinin ismi
function string intl error name int $error_code	belirtilen hata kodunun simgesel ismini d&ouml;nd&uuml;r&uuml;r
function int intl get error code	son api işlevi çağrısından dönen hata kodu
function int intl get error code	son hatanın kodunu d&ouml;nd&uuml;r&uuml;r
function ip2long $ip_adresi	noktalı gösterimle bir ipv4 adresi
function int ip2long	belirtilen ip_adresi geçirsizse false aksi takdirde ipv4 adresi ile döner
function int ip2long string $ip_adresi	noktalı ip adresi g&ouml;sterimini i&ccedil;eren bir dizgeyi sayısal adrese d&ouml;n&uuml;şt&uuml;r&uuml;r
function iptcembed $kuyruk	kuyruk seçeneği; 2den büyükse jpeg bir dizge olarak döner
function iptcembed $iptcverisi	yazılacak veri
function iptcembed $jpeg_dosya_ismi	jpeg resminin dosya yolu
function mixed iptcembed	bir hata oluşursa false döner
function mixed iptcembed string $iptcverisi string $jpeg_dosya_ismi int $kuyruk	ikil iptc verisini bir jpeg resminin i&ccedil;ine g&ouml;mer
function iptcparse $iptcbloğu	bir ikil iptc bloğu
function array iptcparse	indis olarak etiket imleyici ve değer olarak değeri kullanan bir dizi döndürür
function array iptcparse string $iptcbloğu	bir ikil iptc bloğunu tekil etiketlere b&ouml;ler
function is a $sınıf	olası ebeveyn veya çocuk sınıf ismi
function is a $nesne	sınanacak nesne
function bool is a	nesne nesnesi sınıf sınıfının alt veya üst sınıflarından birinin nesnesi ise true değilse false döner
function bool is a object $nesne string $sınıf	nesne ile sınıf arasında ebeveyn / &ccedil;ocuk ilişkisi var mı diye bakar
function is array $değişken	sınanacak değişken
function bool is array	belirtilen değişken bir dizi içeriyorsa true aksi takdirde false döner
function bool is array mixed $değişken	değişkenin bir dizi i&ccedil;erip i&ccedil;ermediğine bakar
function is bool $değişken	sınanacak değişken
function bool is bool	belirtilen değişken boolean türündeyse true aksi takdirde false döner
function bool is bool mixed $değişken	değişken boolean t&uuml;r&uuml;nde mi diye bakar
function is callable $işlev	bir işlev ismi veya aşağıdaki gibi bir nesne ve nesne içinde bir yöntem ismi olabilir: array($birnesne yöntemismi
function is callable $sözdizimsel	true atanırsa işlev değiştirgesinde bir işlev veya yöntem ismi belirtildiği varsayımıyla doğrulama yapılmaya çalışılır
function is callable $isim	işlev veya yöntemin çağrılabilir ismi
function bool is callable	belirtilen işlev bir işlev olarak çağrılabiliyorsa true aksi takdirde false döner
function bool is callable callback $işlev bool $sözdizimsel string $isim	bir değişkenin i&ccedil;eriğinin bir işlev olarak &ccedil;ağrılabilirliğini doğrular
function is dir $dosyaismi	dosyanın yolu
function bool is dir	dosyaismi ile belirtilen dosya mevcutsa ve bir dizin ise true aksi takdirde false döndürür
function bool is dir string $dosyaismi	bir dosyanın bir dizin olup olmadığını s&ouml;yler
function is executable $dosyaismi	dosyanın yolu
function bool is executable	dosyaismi ile belirtilen dosya mevcutsa ve çalıştırılabilir bir dosya ise true aksi takdirde false döndürür
function bool is executable string $dosyaismi	bir dosyanın &ccedil;alıştırılabilir bir dosya olup olmadığını s&ouml;yler
function is file $dosyaismi	dosyanın yolu
function bool is file	dosyaismi ile belirtilen dosya mevcutsa ve sıradan bir dosya ise true aksi takdirde false döndürür
function bool is file string $dosyaismi	bir dosyanın sıradan bir dosya olup olmadığını s&ouml;yler
function is float $değişken	sınanacak değişken
function bool is float	belirtilen değişken float türündeyse true aksi takdirde false döner
function bool is float mixed $değişken	değişken float t&uuml;r&uuml;nde mi diye bakar
function is int $değişken	sınanacak değişken
function bool is int	belirtilen değişkenin değeri tamsayı ise true aksi takdirde false döndürür
function bool is int mixed $değişken	değişken bir tamsayı mı diye bakar
function is null $değişken	sınanacak değişken
function bool is null	belirtilen değişkenin değeri null ise true aksi takdirde false döndürür
function bool is null mixed $değişken	bir değişkenin değerinin null olup olmadığına bakar
function is object $değişken	sınanacak değişken
function bool is object	belirtilen değişken object türündeyse true aksi takdirde false döner
function bool is object mixed $değişken	değişken object t&uuml;r&uuml;nde mi diye bakar
function is readable $dosyaismi	dosyanın yolu
function bool is readable	dosyaismi ile belirtilen dosya mevcutsa ve okunabilirse true aksi takdirde false döndürür
function bool is readable string $dosyaismi	bir dosyanın mevcut ve okunabilir olup olmadığını s&ouml;yler
function is resource $değişken	sınanacak değişken
function bool is resource	belirtilen değişken resource türündeyse true aksi takdirde false döner
function bool is resource mixed $değişken	değişken resource t&uuml;r&uuml;nde mi diye bakar
function is scalar $değişken	sınanacak değişken
function bool is scalar	belirtilen değişkenin değeri sayıl türlerden biri ise true aksi takdirde false döner
function bool is scalar mixed $değişken	bir değişken sayıl mı diye bakar
function is string $değişken	sınanacak değişken
function bool is string	belirtilen değişken string türündeyse true aksi takdirde false döner
function bool is string mixed $değişken	değişken string t&uuml;r&uuml;nde mi diye bakar
function is subclass of $sınıf	olası ebeveynin ismi
function is subclass of $nesne	çocuk sınıf veya nesne ismi
function bool is subclass of	nesne nesnesi sınıf sınıfının alt sınıflarından birinin nesnesi ise true değilse false döner
function bool is subclass of mixed $nesne string $sınıf	belirtilen sınıfın belirtilen nesnenin ebeveynlerinden biri olup olmadığına bakar
function is uploaded file $dosyaismi	sınanacak dosyanın ismi
function bool is uploaded file	başarı durumunda true başarısızlık durumunda false döner
function bool is uploaded file string $dosyaismi	bir dosya http post &uuml;zerinden karşıya y&uuml;klenebilecekse bunu s&ouml;yler
function is writable $dosyaismi	sınanacak dosya ismi
function bool is writable	dosyaismi ile belirtilen dosya mevcutsa ve yazılabilirse true aksi takdirde false döndürür
function bool is writable string $dosyaismi	bir dosyanın yazılabilir olup olmadığını s&ouml;yler
function isset $değişken	başka bir değişken
function isset	daha başka değişkenler
function isset $değişken	sınanacak değişken
function bool isset	belirtilen değişken tanımlıysa ve null dan farklı bir değere sahipse true aksi takdirde false döner
function bool isset mixed $değişken mixed $değişken	değişken tanımlı mı diye bakar
function jdmonthname $julyengunu	üzerinde işlem yapılacak jülyen günü
function jdmonthname $takvim	ay adının alınacağı takvim
function string jdmonthname	verilen jülyen günü ve takvim değiştirgesine göre ay adı
function string jdmonthname int $julyengunu int $takvim	ay adını geri d&ouml;ner
function jdtojulian $julyengunu	tamsayı olarak jülyen gün sayısı
function string jdtojulian	ay / gün / yıl biçiminde dizge olarak jülyen takvimi tarihi
function string jdtojulian int $julyengunu	j&uuml;lyen g&uuml;n sayısını j&uuml;lyen takvim tarihine &ccedil;evirir
function jewishtojd $yil	1 ile 9999 aralığında sayı olarak yıl
function jewishtojd $gun	1 ile 30 aralığında sayı olarak gün
function jewishtojd $ay	1 ile 13 aralığında sayı olarak ay
function int jewishtojd	yahudi tarihine karşılık gelen jülyen gün sayısı
function int jewishtojd int $ay int $gun int $yil	yahudi takvimindeki bir tarihi j&uuml;lyen g&uuml;n sayısına &ccedil;evirir
function json encode $secenekler	oluşturulabilen bit maske tipleri json_hex_quot json_hex_tag json_hex_amp json_hex_apos json_force_object
function json encode $deger	eger kaynağa göre beklenen şekilde şifrelenir
function string json encode	başarıyla kodlanmış json dizgesi döndürür
function string json encode mixed $deger int $secenekler	değerin json karşılığını verir
function juliantojd $ay	1 ocak ile 12 aralık aralığında sayı olarak ay
function juliantojd $gun	1 ile 31 aralığında sayı olarak gün
function juliantojd $yil	-4713 ile 9999 aralığında sayı olarak yıl değeri
function int juliantojd	verilen jülyen tarihine karşılık gelen jülyen gün sayısı
function int juliantojd int $ay int $gun int $yil	j&uuml;lyen takvimindeki tarihi j&uuml;lyen g&uuml;n sayısına &ccedil;evirir
function key $dizi	anahtarın alınacağı dizi
function mixed key	dahili göstericinin üzerinde bulunduğu elemanın anahtarını döndürür
function mixed key array $dizi	bir diziden g&ouml;sterici konumundaki anahtarı d&ouml;nd&uuml;r&uuml;r
function krsort $seçenekler	isteğe bağlı bu değiştirge ile sıralama türünü değiştirebilirsiniz
function krsort $dizi	sıralanacak dizi
function bool krsort	başarı durumunda true başarısızlık durumunda false döner
function bool krsort array $dizi int $seçenekler	bir diziyi anahtarlarına g&ouml;re tersine sıralar
function ksort $seçenekler	isteğe bağlı bu değiştirge ile sıralama türünü değiştirebilirsiniz
function ksort $dizi	sıralanacak dizi
function bool ksort	başarı durumunda true başarısızlık durumunda false döner
function bool ksort array $dizi int $seçenekler	bir diziyi anahtarlarına g&ouml;re sıralar
function lcfirst $dizge	girdi dizgesi
function string lcfirst	elde edilen dizgeyi döndürür
function string lcfirst string $dizge	bir dizgenin ilk karakterini k&uuml;&ccedil;&uuml;k harf yapar
function lchgrp $dosyaismi	sembolik bağın yolu
function lchgrp $grup	grup ismi veya numarası
function bool lchgrp	başarı durumunda true başarısızlık durumunda false döner
function bool lchgrp string $dosyaismi mixed $grup	bir sembolik bağın grubunu değiştirir
function lchown $dosyaismi	sembolik bağın yolu
function lchown $kullanıcı	kullanıcı ismi veya numarası
function bool lchown	başarı durumunda true başarısızlık durumunda false döner
function bool lchown string $dosyaismi mixed $kullanıcı	bir sembolik bağın sahibini değiştirir
function levenshtein $yerleştirme_bedeli	yerleştirme maliyetini tanımlar
function levenshtein $d2	levenştayn mesafesi değerlendirilecek dizgelerden biri
function levenshtein $değiştirme_bedeli	değiştirme maliyetini tanımlar
function levenshtein $silme_bedeli	silme maliyetini tanımlar
function levenshtein $d1	levenştayn mesafesi değerlendirilecek dizgelerden biri
function int levenshtein	belirtilen diziler 255 karakterlik üst sınırdan uzunsa -1 değilse levenştayn mesafesi döner
function int levenshtein string $d1 string $d2	iki dizge arasındaki levenştayn mesafesini hesaplar
function array libxml get errors	tamponda bir hata oluşmuşsa libxmlerror nesnelerinden oluşan bir dizi yoksa boş bir dizi döner
function array libxml get errors	hataları i&ccedil;eren bir dizi d&ouml;nd&uuml;r&uuml;r
function LibXMLError libxml get last error	tamponda bir hata oluşmuşsa bir libxmlerror nesnesi yoksa false döner
function LibXMLError libxml get last error	libxml'den son hatayı d&ouml;nd&uuml;r&uuml;r
function link $bağ	bağ dosyası ismi
function link $hedef	bağın hedefi
function bool link	başarı durumunda true başarısızlık durumunda false döner
function bool link string $bağ string $hedef	sabit bir bağ oluşturur
function list $değişken	bir değişken
function array list	atanan dizi döner
function array list mixed $değişken	değişkenlere bir dizi gibi atama yapar
function localtime $zaman_damgası	seçimlik zaman_damgası değiştirgesi integer türünde bir unix zaman damgası olup belirtilmediği takdirde yerel zaman kullanılır
function localtime $ilişkisel_mi	eğer değiştirge false olarak ayarlanmış ya da kullanılmamışsa sayısal indisli bir dizi döndürür
function array localtime int $zamandamgası bool $ilişkisel_mi	yerel zamanı getirir
function long2ip $özel_adres	özel ağ adresi gösterimi
function string long2ip	ip adresini bir dizge olarak döndürür
function string long2ip string $özel_adres	bir ipv4 sayısal ağ adresini noktalı g&ouml;sterimi i&ccedil;eren bir dizgeye d&ouml;n&uuml;şt&uuml;r&uuml;r
function lstat $dosyaismi	bir dosya veya sembolik bağın yolu
function array lstat	lstat() işlevinin döndürdüğü dizinin yapısı hakkında bilgi edinmek için stat() sayfasına bakınız
function array lstat string $dosyaismi	bir dosya veya sembolik bağ hakkında bilgi verir
function ltrim $dizge	budanacak dizge
function ltrim $karakterler	seçimlik olarak karakterler değiştirgesi kullanılarak budanacak karakterler belirlenebilir
function string ltrim	bu işlev dizge nin başındaki boşlukları budar
function string ltrim string $dizge string $karakterler	dizgenin başındaki boşlukları veya diğer karakterleri budar
function lzf compress $veri	sıkıştırılmak istenen dizge
function string lzf compress	hata oluşmuşsa false yoksa sıkıştırılmış veriyi döndürür
function string lzf compress string $veri	lzf sıkıştırma işlemi
function lzf decompress $veri	sıkıştırılmış haldeki dizgi
function string lzf decompress	hata oluşursa false oluşmazsa verinin sıkıştırılmamış halini döndürür
function string lzf decompress string $veri	lzf sıkıştırmasını a&ccedil;ma işlemi
function int lzf optimized for	eğer lzf hız için eniyilenmişse 1 daha çok sıkıştırması için eniyilenmişse 0 ile döner
function int lzf optimized for	lzf eklentisinin neye g&ouml;re en iyilendirildiğini bildirir
function mb check encoding $kodlama	umulan kodlama
function mb check encoding $dizge	sınanacak bayt dizilimi
function bool mb check encoding	başarı durumunda true başarısızlık durumunda false döner
function bool mb check encoding string $dizge string $kodlama	dizgenin belirtilen kodlama i&ccedil;in ge&ccedil;erli olup olmadığını sınar
function mb convert case $dizge	dönüştürülecek dizge
function mb convert case $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function mb convert case $kip	dönüşüm kipi
function string mb convert case	kip ile belirtilen şekilde büyük-küçük harf dönüşümü yapılmış dizge
function string mb convert case string $dizge int $kip string $kodlama	bir dizgeye b&uuml;y&uuml;k-k&uuml;&ccedil;&uuml;k harf d&ouml;n&uuml;ş&uuml;m&uuml; uygular
function mb convert encoding $dizge	kodlaması dönüştürülecek dizge
function mb convert encoding $kodlamaya	dizgenin dönüştürüleceği kodlama
function mb convert encoding $from_encoding	kodlamadan değiştirgesinde dizge kodlamasını algılamak için kullanılacak karakter kodlamaları bir dizi veya virgül ayraçlı liste olarak belirtilir
function string mb convert encoding	kodlaması dönüştürülen dizge
function string mb convert encoding string $dizge string $kodlamaya mixed $kodlamadan	karakter kodlaması d&ouml;n&uuml;ş&uuml;m&uuml; yapar
function mb convert kana $dizge	dönüştürülecek dizge
function mb convert kana $seçenek	dönüşüm seçeneği
function mb convert kana $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function string mb convert kana	dönüştürülen dizge
function string mb convert kana string $dizge string $seçenek string $kodlama	bir kana dizgeyi diğerine zen-kaku han-kaku vs
function mb convert variables $kodlamadan	kodlamadan değiştirgesinde dizge kodlamasını algılamak için kullanılacak karakter kodlamaları bir dizi veya virgül ayraçlı liste olarak belirtilir
function mb convert variables	diğer değişkenler
function mb convert variables $kodlamaya	dizgenin dönüştürüleceği karakter kodlaması
function mb convert variables $değişkenler	kodlaması değiştirilecek değişkenler belirtilir
function string mb convert variables	başarı durumunda dönüşüm öncesi karakter kodlaması aksi takdirde false döner
function string mb convert variables string $kodlamaya mixed $kodlamadan mixed $değişkenler	değişken i&ccedil;eriğinin karakter kodlamasını d&ouml;n&uuml;şt&uuml;r&uuml;r
function mb decode mimeheader $dizge	dönüştürülecek dizge
function string mb decode mimeheader	kodlaması dahili karakter kodlamasına dönüştürülmüş dizge
function string mb decode mimeheader string $dizge	mime başlık alanındaki dizgeyi d&ouml;n&uuml;şt&uuml;r&uuml;r
function mb decode numericentity $dizge	html karakter kodlaması kaldırılacak dizge
function mb decode numericentity $bölge	dönüşüm yapılacak kod bölgesini içeren dizi
function mb decode numericentity $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function string mb decode numericentity	dönüştürülen dizge
function string mb decode numericentity string $dizge array $bölge string $kodlama	html sayısal karakter g&ouml;sterimini karaktere d&ouml;n&uuml;şt&uuml;r&uuml;r
function mb detect order $kodlama_listesi	kodlama_listesi bir dizi veya karakter kodlamalarının virgül ayraçlı listesi ya da auto olarak belirtilir
function mixed mb detect order	başarı durumunda true başarısızlık durumunda false döner
function mixed mb detect order mixed $kodlama_listesi	karakter kodlaması algılama sırasını tanımlar / d&ouml;nd&uuml;r&uuml;r
function mb ereg match $şablon	düzenli ifade şablonu
function mb ereg match $dizge	şablonun aranacağı dizge
function bool mb ereg match string $şablon string $dizge string $seçenek	&ccedil;ok baytlı dizge i&ccedil;in d&uuml;zenli ifadeyi eşleştirir
function mb ereg search init $seçenek	arama seçeneği
function mb ereg search init $dizge	şablonun aranacağı dizge
function mb ereg search init $şablon	aranacak şablon
function bool mb ereg search init string $dizge string $şablon string $seçenek	&ccedil;ok baytlı d&uuml;zenli ifade eşleşmesi i&ccedil;in kullanılacak dizge ve d&uuml;zenli ifadeyi tanımlar
function mb ereg search $seçenek	arama seçeneği
function mb ereg search $şablon	aranacak şablon
function bool mb ereg search string $şablon string $seçenek	evvelce tanımlanmış &ccedil;ok baytlı dizge i&ccedil;in &ccedil;ok baytlı d&uuml;zenli ifade eşleştirmesi yapar
function mb http output $kodlama	belirtilmişse işlev http çıktı karakter kodlamasını tanımlar
function mixed mb http output	kodlama belirtilmemişse işlev http çıktı karakter kodlamasını döndürür
function mixed mb http output string $kodlama	http &ccedil;ıktı karakter kodlamasını tanımlar / d&ouml;nd&uuml;r&uuml;r
function mb language $dil	eposta iletilerini kodlamak için kullanılır
function mixed mb language	dil belirtilmiş ve geçerli ise true yoksa false döner
function mixed mb language string $dil	ge&ccedil;erli dili tanımlar / d&ouml;nd&uuml;r&uuml;r
function array mb list encodings	sayısal indisli bir dizi döndürür
function array mb list encodings	desteklenen kodlamaların tamamını bir dizi olarak d&ouml;nd&uuml;r&uuml;r
function mb output handler $durum	çıktı tamponunun durumu
function mb output handler $içerik	çıktı tamponunun içeriği
function string mb output handler	dönüştürülen dizge
function string mb output handler string $içerik int $durum	&ccedil;ıktı tamporundaki karakter kodlamasını d&ouml;n&uuml;şt&uuml;ren geri&ccedil;ağırım işlevi
function mb parse str $sonuç	çözümlenip karakter kodlaması dönüştürülmüş değerleri içeren bir dizi
function mb parse str $kodlu_dizge	url kodlu veri
function bool mb parse str	başarı durumunda true başarısızlık durumunda false döner
function bool mb parse str string $kodlu_dizge array $sonuç	get / post / cookie verisini &ccedil;&ouml;z&uuml;mler ve k&uuml;resel değişkenleri tanımlar
function mb preferred mime name $kodlama	karakter kodlaması
function string mb preferred mime name	kodlama ile belirtilen karakter kodlaması için mime charset dizgesini döndürür
function string mb preferred mime name string $kodlama	mime karakter k&uuml;mesi dizgesini d&ouml;nd&uuml;r&uuml;r
function mb regex encoding $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function mixed mb regex encoding string $kodlama	mbregex işlevleri i&ccedil;in ge&ccedil;erli kodlamayı dizge olarak d&ouml;nd&uuml;r&uuml;r
function mb send mail $kime	epostanın gönderileceği adres
function mb send mail $ileti	postalanacak ileti
function mb send mail $ek_değiştirge	ek_değiştirge bir posta sunucusu komut satırı değiştirgesidir
function mb send mail $ek_başlıklar	ek_başlıklar başlığın sonuna yerleştirilir
function mb send mail $konu	epostanın konusu
function bool mb send mail	başarı durumunda true başarısızlık durumunda false döner
function bool mb send mail string $kime string $konu string $ileti string $ek_başlıklar string $ek_değiştirge	kodlanmış olarak posta g&ouml;nderir
function mb strcut $dizge	parça çıkarılacak dizge
function mb strcut $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function mb strcut $başlangıç	çıkarılacak parçanın başlangıç konumu
function mb strcut $uzunluk	çıkarılacak parçanın uzunluğu
function string mb strcut	mb_strcut() işlevi str dizgesinden başlangıç ve uzunluk ile belirtilen parçayı döndürür
function string mb strcut string $dizge int $başlangıç int $uzunluk string $kodlama	dizgenin başlangıcı ve uzunluğu belirtilen par&ccedil;ası ile d&ouml;ner
function mb strimwidth $başlangıç	kırpma genişliğinin başlatılacağı konum
function mb strimwidth $dizge	kırpılacak dizge
function mb strimwidth $kırpıcı	dizge kırpılırken dizgenin sonuna eklenen bir dizge
function mb strimwidth $genişlik	kırpma genişliği
function mb strimwidth $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function string mb strimwidth	kırpılmış dizge ile döner
function string mb strimwidth string $dizge int $başlangıç int $genişlik string $kırpıcı string $kodlama	dizgeyi belirtilen genişlikte kırpar
function mb stripos $konum	samanlık içinde aramanın başlatılacağı konum
function mb stripos $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function mb stripos $needle	samanlık içinde ilki aranacak dizge
function mb stripos $samanlık	ilk iğne nin aranacağı dizge
function int mb stripos	ilk iğne nin samanlık içinde bulunduğu yerin indisi ile döner
function int mb stripos string $samanlık string $iğne int $konum string $kodlama	harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak bir dizgenin i&ccedil;inde başka bir dizgeye ilk rastlanılan noktanın indisini d&ouml;nd&uuml;r&uuml;r
function mb strlen $dizge	karakter sayısı öğrenilmek istenen dizge
function mb strlen $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function int mb strlen	dizge değiştirgesi ile belirtilen dizgenin karakter sayısını döndürür
function int mb strlen string $dizge string $kodlama	dizge uzunluğu ile d&ouml;ner
function mb strrichr $samanlık	sonuncu iğne nin aranacağı dizge
function mb strrichr $ilk_parça	samanlık dizgesinin hangi parçasının döndürüleceğini belirler
function mb strrichr $iğne	samanlık içinde aranacak karakter
function mb strrichr $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function string mb strrichr	eğer samanlık içinde iğne yoksa false aksi takdirde ilk veya son samanlık parçası ile döner
function string mb strrichr string $samanlık string $iğne bool $ilk_parça string $kodlama	harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak bir dizgenin i&ccedil;inde bulunan bir karaktere g&ouml;re dizgenin ilk veya son b&ouml;l&uuml;m&uuml; ile d&ouml;ner
function mb strstr $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function mb strstr $iğne	samanlık içinde aranacak dizge
function mb strstr $ilk_parça	samanlık dizgesinin hangi parçasının döndürüleceğini belirler
function mb strstr $samanlık	ilk iğne nin aranacağı dizge
function string mb strstr	eğer samanlık içinde iğne yoksa false aksi takdirde ilk veya son samanlık parçası ile döner
function string mb strstr string $samanlık string $iğne bool $ilk_parça string $kodlama	bir dizgenin i&ccedil;inde başka bir dizgeye ilk rastlanılan noktaya g&ouml;re dizgenin ilk veya son b&ouml;l&uuml;m&uuml; ile d&ouml;ner
function mb strtolower $encoding	kodlama değiştirgesinde karakter kodlaması belirtilir
function mb strtolower $dizge	küçük harfli yapılacak dizge
function string mb strtolower	içindeki abecesel karakterlerin tamamı küçük harfe çevrilmiş olarak dizge
function string mb strtolower string $dizge string $kodlama	dizgeyi k&uuml;&ccedil;&uuml;k harfli yapar
function mb strtoupper $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function mb strtoupper $dizge	büyük harfli yapılacak dizge
function string mb strtoupper	içindeki abecesel karakterlerin tamamı büyük harfe çevrilmiş olarak dizge
function string mb strtoupper string $dizge string $kodlama	dizgeyi b&uuml;y&uuml;k harfli yapar
function mb strwidth $dizgi	genişliği hesaplanacak dizge
function mb strwidth $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function int mb strwidth	dizge dizgesinin genişliği
function int mb strwidth string $dizge string $kodlama	dizge genişliğini d&ouml;nd&uuml;r&uuml;r
function mb substitute character $ikamekrk	bir integer olarak bir evrenkod değeri veya bir string olarak aşağıdaki dizgelerden biri belirtilir: none: hiçbir şey çıktılanmaz long: geçersiz karakterin kod değeri çıktılanır örnek: u+3000 jis+7e7e
function mixed mb substitute character	eğer ikamekrk atanabilmişse true aksi takdirde false döner
function mixed mb substitute character mixed $ikamekrk	ikame karakteri atar / d&ouml;nd&uuml;r&uuml;r
function mb substr count $samanlık	içinde arama yapılacak dizge
function mb substr count $needle	aranacak dizge
function mb substr count $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function int mb substr count	samanlık ile belirtilen dizge içinde iğne ile belirtilen dizgelerden kaç tane bulunduğu
function int mb substr count string $samanlık string $iğne string $kodlama	mevcut alt dizgelerin sayısı ile d&ouml;ner
function mb substr $kodlama	kodlama değiştirgesinde karakter kodlaması belirtilir
function mb substr $başlangıç	alt dizgenin dizge içindeki başlangıç konumu
function mb substr $uzunluk	istenen alt dizgenin azami uzunluğu
function mb substr $dizge	alt dizge başlangıcının aranacağı dizge
function string mb substr	mb_substr() işlevi yeri başlangıç ve uzunluk değiştirgeleri ile belirtilen dizge parçası ile döner
function string mb substr string $dizge int $başlangıç int $uzunluk string $kodlama	dizgenin bir alt dizgesini alır
function string mcrypt cfb int $şifre string $tuz string $veri int $kip string $iv	&ouml;nerilmiyor: veriyi cfb kipinde şifreler / &ccedil;&ouml;zer
function mcrypt decrypt $iv	cbc cfb ofb kiplerini ve stream kipindeki bazı algoritmaları ilklendirmek için kullanılan ilklendirme vektörü iv
function mcrypt decrypt $mode	mcrypt_kip_adı sabitlerinden biri veya bir dizge olarak şunlardan biri: ecb cbc cfb ofb nofb stream
function mcrypt decrypt $key	veriyi şifrelemekte kullanılan anahtar
function mcrypt decrypt $şifre	mcrypt_şifre_adı sabitlerinden biri veya bir dizge olarak bir algoritma ismi
function mcrypt decrypt $data	belirtilen şifre ve kip ile şifresi çözülecek veri
function string mcrypt decrypt	şifresi çözülmüş veriyi bir dizge olarak döndürür
function string mcrypt decrypt string $şifre string $anahtar string $veri string $kip string $iv	belirtilen değiştirgelerle şifreli bir metnin şifresini &ccedil;&ouml;zer
function string mcrypt ecb int $şifre string $tuz string $veri int $kip	&ouml;nerilmiyor: veriyi ecb kipinde şifreler / &ccedil;&ouml;zer
function mcrypt enc get algorithms name $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function string mcrypt enc get algorithms name	açık algoritmanın adını içeren bir dizge döndürür
function string mcrypt enc get algorithms name resource $şt	a&ccedil;ık algoritmanın adını d&ouml;nd&uuml;r&uuml;r
function mcrypt enc get block size $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function int mcrypt enc get block size	açık algoritmanın küme boyunu bayt sayısı olarak döndürür
function int mcrypt enc get block size resource $şt	a&ccedil;ık algoritmanın k&uuml;me boyunu d&ouml;nd&uuml;r&uuml;r
function mcrypt enc get iv size $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function int mcrypt enc get iv size	açık algoritma tarafından iv yok sayılıyorsa 0 aksi takdirde iv boyunu döndürür
function int mcrypt enc get iv size resource $şt	a&ccedil;ık algoritmanın ilklendirme vekt&ouml;r&uuml; uzunluğunu d&ouml;nd&uuml;r&uuml;r
function mcrypt enc get key size $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function int mcrypt enc get key size	açık kipin desteklediği azami anahtar uzunluğunu bayt sayısı olarak döndürür
function int mcrypt enc get key size resource $şt	a&ccedil;ık kipin desteklediği azami anahtar uzunluğunu d&ouml;nd&uuml;r&uuml;r
function mcrypt enc is block algorithm mode $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function bool mcrypt enc is block algorithm mode	kip küme algoritmaları kullanmak için ise true değilse false döner
function bool mcrypt enc is block algorithm mode resource $şt	a&ccedil;ık kipte şifreleme k&uuml;meler halinde mi yapılıyor diye bakar
function mcrypt enc is block algorithm $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function bool mcrypt enc is block algorithm	algoritma bir küme algoritması ise true bir akım algoritması ise false döner
function bool mcrypt enc is block algorithm resource $şt	a&ccedil;ık kipin algoritması bir k&uuml;me algoritması mı diye bakar
function mcrypt enc self test $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function int mcrypt enc self test	sınama başarılı olursa true yoksa false döner
function int mcrypt enc self test resource $şt	şifreleme tanıtıcısı ile belirtilen mod&uuml;l&uuml;n kendi kendini sınamasını sağlar
function mcrypt encrypt $veri	belirtilen şifre ve kip ile şifrelenecek veri
function mcrypt encrypt $kip	mcrypt_mode_kip_adı sabitlerinden veya şu dizgelerden biri: ecb cbc cfb ofb nofb stream
function mcrypt encrypt $anahtar	verinin şifreleneceği anahtar
function mcrypt encrypt $şifre	mcrypt_şifre_adı sabitlerinden biri veya bir dizge olarak bir algoritma ismi
function mcrypt encrypt $iv	cbc cfb ofb kiplerini ve bazı akım kiplerini ilklendirmek için kullanılır
function string mcrypt encrypt	şifrelenmiş veriyi bir dizge olarak döndürür
function string mcrypt encrypt string $şifre string $anahtar string $veri string $kip string $iv	salt metin veriyi belirtilen değiştirgelerle şifreler
function mcrypt generic deinit $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function bool mcrypt generic deinit	başarı durumunda true başarısızlık durumunda false döner
function bool mcrypt generic deinit resource $şt	bir şifreleme tanıtıcısını yeniden ilklendirir
function mcrypt generic init $iv	normalde algoritma küme uzunluğundadır fakat gerçek boyu mcrypt_enc_get_iv_size() işleviyle de öğrenebilirsiniz
function mcrypt generic init $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function mcrypt generic init $anahtar	azami anahtar uzunluğu mcrypt_enc_get_key_size() işlevi ile öğrenilebilir; işlevin döndürdüğü değer ve daha küçük her değer geçerlidir
function int mcrypt generic init	işlev bir hata durumunda negatif bir değer döndürür
function int mcrypt generic init resource $şt string $anahtar string $iv	şifreleme i&ccedil;in gerekli t&uuml;m tamponları ilklendirir
function mcrypt generic $veri	şifrelenecek veri
function mcrypt generic $şt	mcrypt_module_open() tarafından döndürülmüş bir şifreleme tanıtıcısı
function string mcrypt generic	şifrelenmiş veriyi döndürür
function string mcrypt generic resource $şt string $veri	veriyi şifreler
function mcrypt get block size $şifre	bir dizge olarak kullanılacak algoritmanın ismi veya mcrypt_şifre_adı sabitlerinden biri
function mcrypt get block size $kip	kip
function int mcrypt get block size	blok uzunluğunu bayt sayısı olarak döndürür
function int mcrypt get block size int $şifre	belirtilen şifrenin k&uuml;me uzunluğunu d&ouml;nd&uuml;r&uuml;r
function mcrypt get cipher name $cipher	mcrypt_şifre_adı sabitlerinden biri veya bir dizge olarak bir algoritma ismi
function string mcrypt get cipher name	belirtilen şifre yoksa false aksi takdirde şifre ismini içeren bir dizge döndürür
function string mcrypt get cipher name int $şifre	belirtilen şifrenin ismini d&ouml;nd&uuml;r&uuml;r
function mcrypt get iv size $şifre	bir dizge olarak kullanılacak algoritmanın ismi veya mcrypt_şifre_adı sabitlerinden biri
function mcrypt get iv size $kip	mcrypt_mode_kipadı sabitlerinden biri veya şu isimlerden biri: ecb cbc cfb ofb nofb veya stream
function int mcrypt get iv size	ilklendirme vektörünün iv uzunluğu bayt sayısı olarak döner
function int mcrypt get iv size string $şifre string $kip	belirtilen şifre ve kipe &ouml;zg&uuml; iv uzunluğunu d&ouml;nd&uuml;r&uuml;r
function mcrypt get key size $kip	kullanılacak kip
function mcrypt get key size $şifre	kullanılacak şifre
function int mcrypt get key size int $şifre	belirtilen şifrenin anahtar uzunluğunu d&ouml;nd&uuml;r&uuml;r
function mcrypt list algorithms $lib_dir	belirtilmesi isteğe bağlı olup algoritma modülünün sistemdeki yerini belirtmek için kullanılır
function array mcrypt list algorithms	desteklenen algoritmaları içeren bir dizi döner
function array mcrypt list algorithms string $lib_dir	desteklenen şifreleri listeler
function mcrypt list modes $lib_dir	belirtilmesi isteğe bağlı olup algoritma modülünün sistemdeki yerini belirtmek için kullanılır
function array mcrypt list modes	desteklenen kipleri içeren bir dizi döner
function array mcrypt list modes string $lib_dir	desteklenen kiplerin listesini d&ouml;nd&uuml;r&uuml;r
function mcrypt module get algo block size $lib_dir	belirtilmesi isteğe bağlı olup algoritma modülünün sistemdeki yerini belirtmek için kullanılır
function mcrypt module get algo block size $algoritma	kullanılacak algoritma
function int mcrypt module get algo block size	belirtilen algoritmanın küme boyunu bayt sayısı olarak döndürür
function int mcrypt module get algo block size string $algoritma string $lib_dir	belirtilen algoritmanın k&uuml;me boyunu d&ouml;nd&uuml;r&uuml;r
function mcrypt module get supported key sizes $lib_dir	belirtilmesi isteğe bağlı olup algoritma modülünün sistemdeki yerini belirtmek için kullanılır
function mcrypt module get supported key sizes $algoritma	kullanılacak algoritma
function array mcrypt module get supported key sizes	belirtilen algoritmanın desteklediği anahtar boyutlarını içeren bir dizi döndürür
function array mcrypt module get supported key sizes string $algoritma string $lib_dir	belirtilen algoritmanın desteklediği anahtar boyutlarını listeler
function mcrypt module is block mode $kip	çıktılama kipine bakılacak kip
function mcrypt module is block mode $lib_dir	belirtilmesi isteğe bağlı olup algoritma modülünün sistemdeki yerini belirtmek için kullanılır
function bool mcrypt module is block mode	belirtilen kip bayt kümeleri çıktılıyorsa true sadece bir bayt dizisi çıktılıyorsa false döner örneğin cbc ve icb için true vfb ve akım için false döndürür
function bool mcrypt module is block mode string $kip string $lib_dir	belirtilen kip bir k&uuml;me kipi mi diye bakar
function mcrypt module open $kip	kullanılacak kip
function mcrypt module open $algoritma_dizini	algorithm_dizini ve mode_dizini şifreleme modüllerinin yerlerini belirtmek için kullanılır
function mcrypt module open $algoritma	kullanılacak algoritma
function resource mcrypt module open	bir hata durumunda false yoksa bir şifreleme tanıtıcısı döndürür
function resource mcrypt module open string $algoritma string $algoritma_dizini string $kip string $kip_dizini	kullanılacak kipi ve algoritma mod&uuml;l&uuml;n&uuml; a&ccedil;ar
function mcrypt module self test $algoritma	sınanacak algoritma
function mcrypt module self test $lib_dir	belirtilmesi isteğe bağlı olup algoritma modülünün sistemdeki yerini belirtmek için kullanılır
function bool mcrypt module self test	sınama başarılı olursa true yoksa false döner
function bool mcrypt module self test string $algoritma string $lib_dir	belirtilen mod&uuml;l&uuml;n kendini kendini sınamasını sağlar
function string mcrypt ofb int $şifre string $tuz string $veri int $kip string $iv	&ouml;nerilmiyor: veriyi ofb kipinde şifreler / &ccedil;&ouml;zer
function md5 file $dosya	dosya ismi
function md5 file $ham_çıktı	isteğe bağlı bu değiştirgede true belirtirseniz md5 özeti 16 bayt uzunlukta ham ikil biçemli bir dizge olarak döner
function string md5 file	başarıli bir işlem sonunda bir dizge aksi takdirde false dördürür
function string md5 file string $dosya bool $ham_çıktı	belirtilen dosyanın md5 &ouml;zetini hesaplar
function md5 $dizge	özeti hesaplanacak dizge
function md5 $ham_çıktı	isteğe bağlı bu değiştirgede true belirtirseniz md5 özeti 16 bayt uzunlukta ham ikil biçemli bir dizge olarak döner
function string md5	ileti özetini 32 haneli onaltılık bir sayı dizgesi olarak olarak döndürür
function string md5 string $dizge bool $ham_çıktı	bir dizgenin md5 &ouml;zetini hesaplar
function memory get peak usage $gerçek_kullanım	true olduğu takdirde sistem tarafından phpye ayrılan gerçek bellek miktarı false olduğunda veya değiştirge belirtilmediğinde emalloc() tarafından kullanılan bellek miktarı raporlanır
function int memory get peak usage	ayrılan azami belleğin bayt cinsinden miktarı
function int memory get peak usage bool $gerçek_kullanım	php'ye ayrılan belleğin azami miktarını d&ouml;nd&uuml;r&uuml;r
function metaphone $dizge	girdi dizgesi
function string metaphone	metafonu bir dizge olarak döndürür
function string metaphone string $dizge int $sesler	bir dizgenin metafon anahtarını hesaplar
function method exists $sınıf	sınanacak nesne veya sınıfın ismi
function method exists $yöntem	aranacak yöntemin ismi
function bool method exists	belirtilen sınıf sınıfı belirtilen yöntem yöntemine sahipse true değilse false döner
function bool method exists mixed $sınıf string $yöntem	bir sınıf y&ouml;ntemi mevcut mu diye bakar
function int mhash count	kullanılabilecek en büyük algoritma numarasını döndürür
function int mhash count	kullanılabilecek en y&uuml;ksek algoritma kimliğini d&ouml;nd&uuml;r&uuml;r
function mhash get block size $algoritma	mhash_xxx sabitlerinden biri olarak kullanılacak algoritma
function int mhash get block size	algoritma mevcut değilse false varsa bayt cinsinden küme uzunluğu döner
function int mhash get block size int $algoritma	belirtilen algoritmanın k&uuml;me boyunu d&ouml;nd&uuml;r&uuml;r
function mhash get hash name $algoritma	mhash_xxx sabitlerinden biri olarak kullanılacak algoritma
function string mhash get hash name	algoritma mevcut değilse false varsa algoritmanın ismini döndürür
function string mhash get hash name int $algoritma	belirtilen algoritmanın ismini d&ouml;nd&uuml;r&uuml;r
function microtime $gerçek_sayı	işlev isteğe bağlı olarak değiştirgesiz çağırıldığında; msan
function mixed microtime bool $gerçek_sayı	ge&ccedil;erli unix zaman damgasını mikrosaniye olarak d&ouml;nd&uuml;r&uuml;r
function mktime $yıl	yıl sayısı iki ya da dört hane olabilir
function mktime $saniye	son dakikanın geçen saniye sayısı
function mktime $gün	gün sayısı
function mktime $saat	saat sayısı
function mktime $ay	ay sayısı
function mktime $dakika	dakika sayısı
function mktime $ysu_var	bu değiştirge yaz saati uygulaması varsa 1e yoksa 0a ya da yaz saati uygulması olup olmadığının bilinmediği durumlarda varsayılan değere yani -1e ayarlanmalıdır
function int mktime	mktime() işlevi verilen değiştirgelerden elde edilen unix zaman damgası döndürür
function int mktime int $saat int $dakika int $saniye int $ay int $gün int $yıl int $ysu_var	bir tarih i&ccedil;in unix zaman damgasını d&ouml;nd&uuml;r&uuml;r
function money format $i	sayı yerelin uluslararası para birimine göre biçemlenir örn en_us yereli için: usd 1 234
function money format $w	en küçük alan genişliğini belirten onluk bir rakam
function money format $sayı	biçemlenecek sayı
function money format $^	geçerli yerelde tanımlı binlik ayracını iptal eder
function money format $+veya(	pozitif ve negatif sayılar için biçemleme tarzını belirler
function money format $n	sayı yerelin ulusal para birimine göre biçemlenir örn de_de yereli için: dm1
function money format $-	belirtilmesi halinde bütün alanlar sola yanaştırılır sağ tarafa dolgu yapılır
function money format $biçem	biçem belirtimleri şu dizilimlerden oluşur: % karakteri seçimlik seçenekler seçimlik alan genişlikleri seçimlik sol taraf hassasiyeti seçimlik sağ taraf hassasiyeti gerekli bir dönüşüm karakteri seçenekler aşağıdaki seçeneklerden bir veya daha fazlası kullanılabilir: = f = iminden sonra gelen bir tek baytlık karakter sayısal dolgu karakteri olarak kullanılır
function money format $#n	ondalık ayracın sol tarafındaki hanelerin azami sayısı n
function money format $%	% karakteri döner
function money format $.p	ondalık ayracın sağındaki hane sayısı p
function money format $!	çıktı dizgesinde para biriminin bulunmamasını sağlar
function money format f $	= iminden sonra gelen bir tek baytlık karakter sayısal dolgu karakteri olarak kullanılır
function string money format	biçemlenmiş dizge döner
function string money format string $biçem float $sayı	bir sayıyı para olarak bi&ccedil;emler
function move uploaded file $dosyaismi	karşıya yüklenen dosyanın ismi
function move uploaded file $hedef	dosyanın taşınacağı adres
function bool move uploaded file	eğer dosyaismi karşıya yüklenen geçerli bir dosya değilse işlem gerçekleşmez ve işlev false ile döner
function bool move uploaded file string $dosyaismi string $hedef	karşıya y&uuml;klenen bir dosyayı yeni bir yere taşır
function mysql affected rows $bağlantı_belirteci	mysql bağlantısı
function int mysql affected rows	son sorgunun başarılı olması durumunda etkilenen satırların sayısını döndürür; başarısız olması durumunda -1 döndürür
function int mysql affected rows resource $bağlantı_belirteci	&ouml;nceki mysql işleminde etkilenen satırların sayısını al
function mysql client encoding $bağlantı_belirteci	mysql bağlantısı
function string mysql client encoding	geçerli bağlantı için öntanımlı karakter kümesini döndürür
function string mysql client encoding resource $bağlantı_belirteci	karakter k&uuml;mesinin adını d&ouml;nd&uuml;r&uuml;r
function mysql close $bağlantı_belirteci	mysql bağlantısı
function bool mysql close	başarı durumunda true başarısızlık durumunda false döner
function bool mysql close resource $bağlantı_belirteci	mysql bağlantısını kapatır
function mysql connect $yeni_bağlantı	eğer mysql_connect() aynı değiştirgelerle ikinci kez çağrılırsa yeni bir bağlantı kurulmaz zaten açık olan bağlantının belirteci döndürülür
function mysql connect $sunucu	mysql sunucusu
function mysql connect $kullanıcı_adı	kullanıcı adı
function mysql connect $parola	parola
function mysql connect $istemci_seçenekleri	istemci_seçenekleri değiştirgesi şu sabitlerin bir karışımı olabilir: 128 load data local tutamağı etkin mysql_client_ssl mysql_client_compress mysql_client_ignore_space veya mysql_client_interactive
function resource mysql connect	başarı durumunda bir mysql bağlantı belirteci döndürür hata durumunda false döndürür
function resource mysql connect string $sunucu string $kullanıcı_adı string $parola bool $yeni_bağlantı int $istemci_seçenekleri	mysql sunucusuna bir bağlantı a&ccedil;ar
function mysql create db $veritabanı_adı	oluşturulacak veritabanının adı
function mysql create db $bağlantı_belirteci	mysql bağlantısı
function bool mysql create db	başarı durumunda true başarısızlık durumunda false döner
function bool mysql create db string $veritabanı_adı resource $bağlantı_belirteci	bir mysql veritabanı oluşturur
function mysql db query $sorgu	mysql sorgusu
function mysql db query $veritabanı	seçilecek veritabanının adı
function mysql db query $bağlantı_belirteci	mysql bağlantısı
function resource mysql db query	başarı durumunda sorgu sonucuna olumlu bir mysql sonuç göstericisi hata durumunda false döndürür
function resource mysql db query string $veritabanı string $sorgu resource $bağlantı_belirteci	bir mysql sorgusu g&ouml;nderir
function mysql fetch lengths $sonuç	resource türünde sorgu sonucu
function array mysql fetch lengths	başarı durumunda bir uzunluklar dizisi hata durumunda false döndürür
function array mysql fetch lengths resource $sonuç	bir sonu&ccedil;taki her bir &ccedil;ıktının uzunluğunu al
function mysql field seek $alan_konumu	alanın sayısal konumu
function mysql field seek $sonuç	resource türünde sorgu sonucu
function bool mysql field seek	başarı durumunda true başarısızlık durumunda false döner
function bool mysql field seek resource $sonuç int $alan_konumu	sonu&ccedil; g&ouml;stericisini belirtilen alan konumuna ayarla
function mysql free result $sonuç	resource türünde sorgu sonucu
function bool mysql free result	başarı durumunda true başarısızlık durumunda false döner
function bool mysql free result resource $sonuç	sonu&ccedil; belleğini serbest bırakır
function string mysql get client info	mysql istemci sürümü
function string mysql get client info	mysql istemci s&uuml;r&uuml;m bilgisini al
function mysql get host info $bağlantı_belirteci	mysql bağlantısı
function string mysql get host info	başarı durumunda bağlantı için kullanılmakta olan mysql bağlantısının türünü içeren bir dizge hata durumunda false döndürür
function string mysql get host info resource $bağlantı_belirteci	mysql konak bilgisini al
function mysql get proto info $bağlantı_belirteci	mysql bağlantısı
function int mysql get proto info	başarı durumunda mysql protokol sürümünü hata durumunda false döndürür
function int mysql get proto info resource $bağlantı_belirteci	mysql protokol s&uuml;r&uuml;m bilgisini al
function mysql list fields $veritabanı_adı	sorgulanan veritabanının adı
function mysql list fields $tablo_adı	sorgulanan tablonun adı
function mysql list fields $bağlantı_belirteci	mysql bağlantısı
function resource mysql list fields	başarı durumunda resource türünde bir sonuç göstericisi hata durumunda false döndürür
function resource mysql list fields string $veritabanı_adı string $tablo_adı resource $bağlantı_belirteci	mysql tablosunun alanlarını listeler
function mysql list processes $bağlantı_belirteci	mysql bağlantısı
function resource mysql list processes	başarı durumunda resource türünde bir sonuç göstericisi hata durumunda false döner
function resource mysql list processes resource $bağlantı_belirteci	mysql s&uuml;re&ccedil;lerini listeler
function mysql num fields $sonuç	resource türünde sorgu sonucu
function int mysql num fields	başarı durumunda resource türündeki sonuç kümesinde bulunan alanların sayısını hata durumunda false döndürür
function int mysql num fields resource $sonuç	sonu&ccedil;taki alan sayısını al
function mysql num rows $sonuç	resource türünde sorgu sonucu
function int mysql num rows	başarı durumunda sonuç kümesindeki satırların sayısını hata durumunda false döndürür
function int mysql num rows resource $sonuç	sonu&ccedil;taki satır sayısını al
function mysql ping $bağlantı_belirteci	mysql bağlantısı
function bool mysql ping	mysql sunucusuyla bağlantı çalışıyorsa true çalışmıyorsa false döndürür
function bool mysql ping resource $bağlantı_belirteci	bir sunucu bağlantısına ping at bağlantı yoksa tekrar bağlan
function mysql select db $veritabanı_adı	seçilecek veritabanının adı
function mysql select db $bağlantı_belirteci	mysql bağlantısı
function bool mysql select db	başarı durumunda true başarısızlık durumunda false döner
function bool mysql select db string $veritabanı_adı resource $bağlantı_belirteci	bir mysql veritabanı se&ccedil;er
function natcasesort $dizi	sıralanacak dizi
function bool natcasesort	başarı durumunda true başarısızlık durumunda false döner
function bool natcasesort array $dizi	bir diziyi harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız doğal sıralama algoritmasıyla sıralar
function natsort $dizi	sıralanacak dizi
function bool natsort	başarı durumunda true başarısızlık durumunda false döner
function bool natsort array $array	bir diziyi doğal sıralama algoritmasıyla sıralar
function next $dizi	göstericisi konumlanacak dizi
function mixed next	dizinin dahili göstericisinin bulunduğu konumun bir sonrasında eleman varsa o elemanın değeri döner yoksa false döner
function mixed next array $dizi	dahili dizi g&ouml;stericisini bir ilerletir
function string ngettext	n sayısı için msgid1 ve msgid2 ile betimlenen doğru çoğul biçemli iletiyi döndürür
function string ngettext string $msgid1 string $msgid2 int $n	gettext işlevinin &ccedil;oğul bi&ccedil;emli s&uuml;r&uuml;m&uuml;
function void ob clean	&ccedil;ıktı tamponunu temizler siler
function bool ob end clean	başarı durumunda true başarısızlık durumunda false döner
function bool ob end clean	&ccedil;ıktı tamponunu temizler siler ve tamponu kapatır
function string ob get clean	çıktı tamponlaması etkin değilse false aksi takdirde çıktı tamponunun içeriğini döndürür
function string ob get clean	ge&ccedil;erli &ccedil;ıktı tamponun i&ccedil;eriğini d&ouml;nd&uuml;r&uuml;p tamponu siler
function string ob get flush	çıktı tamponlaması etkin değilse false aksi takdirde çıktı tamponunun içeriğini döndürür
function string ob get flush	&ccedil;ıktı tamponunu boşaltır i&ccedil;eriğini bir dizge olarak d&ouml;nd&uuml;r&uuml;r ve &ccedil;ıktı tamponlamasını kapatır
function int ob get length	çıktı tamponu etkin değilse false aksi takdirde bayt cinsinden çıktı tamponunundaki içeriğin uzunluğunu döndürür
function int ob get length	&ccedil;ıktı tamponunundaki i&ccedil;eriğin uzunluğunu d&ouml;nd&uuml;r&uuml;r
function ob get status $tam_durum	true her seviyeden etkin çıktı tamponlarının tamamının durumunu false ise veya belirtilmezse sadece üst seviye çıktı tamponunun durumunu döndürür
function array ob get status bool $tam_durum	&ccedil;ıktı tamponlarının durumu ile d&ouml;ner
function string ob gzhandler string $tampon int $kip	&ccedil;ıktı tamponunu gziplemek i&ccedil;in ob_start geri&ccedil;ağırım işlevi
function string ob iconv handler	dönüş değerleri için ob_start() işlevine bakınız
function string ob iconv handler string $içerik int $durum	&ccedil;ıktı tamponu eylemcisi olarak karakter kodlaması d&ouml;n&uuml;ş&uuml;m&uuml; yapar
function ob implicit flush $seçenek	true ise örtük boşaltma açılır false ise kapatılır
function void ob implicit flush int $seçenek	&ouml;rt&uuml;k boşaltmayı a&ccedil;ar / kapar
function ob start $tampon	çıktı tamponunun içeriği
function ob start $çıktı_geriçağırıcı	bu değiştirge ile isteğe bağlı bir çıktı eylemcisi işlev belirtilebilir
function ob start $kip	kip çıktı tamponuna uygulanabilecek işlemleri denetleyen bir bitmaskesidir
function ob start $parça_boyu	isteğe bağlı parça_boyu belirtildiği takdirde parça_boyu nu aşan veya tamponun tam dolmasına sebep olan bir çıktılama çağrısından sonra tampon boşaltılır
function ob start $kip	php_output_handler_* sabitlerinin bit maskesi
function bool ob start	başarı durumunda true başarısızlık durumunda false döner
function bool ob start callable $çıktı_geriçağırıcı int $parça_boyu int $seçenekler	&ccedil;ıktı tamponlamasını başlatır
function ob tidyhandler $kip	tamponun kipi
function ob tidyhandler $tampon	tampon
function string ob tidyhandler	onarılmış tamponu içeren bir dizge döner
function string ob tidyhandler string $tampon int $kip	tampon onarımı i&ccedil;in ob_start geri&ccedil;ağırım işlevi
function void odbc close all	t&uuml;m odbc bağlantılarını kapatır
function odbc close $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function void odbc close resource $bağlantı_kimliği	bir odbc bağlantısını kapatır
function odbc columnprivileges $sütun_ismi	sütun_ismi değiştirgesinde arama şablonları belirtilebilir sıfır veya daha fazla karakterle eşleşmek üzere % ve tek bir karakterle eşleşmek üzere _
function odbc columnprivileges $sahibi	sahibi
function odbc columnprivileges $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc columnprivileges $tablo_ismi	tablo ismi
function odbc columnprivileges $niteleyici	niteleyici
function resource odbc columnprivileges	başarısızlık durumunda false yoksa bir odbc sonuç tanıtıcısı döner
function resource odbc columnprivileges resource $bağlantı_kimliği string $niteleyici string $sahibi string $tablo_ismi string $sütun_ismi	belirtilen tablo ile ilgili izinleri ve s&uuml;tunları listeler
function odbc columns $sütun_ismi	sütun ismi
function odbc columns $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc columns $tablo_ismi	tablo ismi
function odbc columns $niteleyici	niteleyici
function odbc columns $şema	sahibi
function resource odbc columns	başarısızlık durumunda false yoksa bir odbc sonuç tanıtıcısı döner
function resource odbc columns resource $bağlantı_kimliği string $niteleyici string $şema string $tablo_ismi string $sütun_ismi	belirtilen tablolardaki s&uuml;tun isimlerini listeler
function odbc commit $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function bool odbc commit	başarı durumunda true başarısızlık durumunda false döner
function bool odbc commit resource $bağlantı_kimliği	bir odbc hareket listesi g&ouml;nderir
function odbc cursor $sonuç_kimliği	sonuç tanıtıcısı
function string odbc cursor	imleç ismini bir dizge olarak döndürür
function string odbc cursor resource $sonuç_kimliği	imle&ccedil; ismini d&ouml;nd&uuml;r&uuml;r
function odbc data source $alım_türü	şu iki sabitten biri olabilir: sql_fetch_first ve sql_fetch_next
function odbc data source $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function array odbc data source	bir hata oluşmuşsa false yoksa bir dizi döner
function array odbc data source resource $bağlantı_kimliği int $alım_türü	belirtilen bağlantı hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function odbc exec $seçenekler	şimdilik kullanılmamaktadır
function odbc exec $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc exec $sorgu_dizgesi	sql deyimi
function resource odbc exec	sql deyimi çalıştırılabilmişse bir odbc sonuç tanıtıcısı yoksa false döner
function resource odbc exec resource $bağlantı_kimliği string $sorgu_dizgesi int $seçenekler	bir sql deyimini hazırlar veya &ccedil;alıştırır
function odbc execute $sonuç_kimliği	odbc_prepare() işlevinden dönen bir sonuç tanıtıcısı
function odbc execute $değiştirgeler	değiştirgeler dizisindeki değiştirgelerin hazırlanmış deyimler için birer yer tutucu olduğu varsayılır
function bool odbc execute	başarı durumunda true başarısızlık durumunda false döner
function bool odbc execute resource $sonuç_kimliği array $değiştirgeler	bir hazır deyimi &ccedil;alıştırır
function odbc fetch object $sonuç_kimliği	odbc_exec() ile döndürülmüş bir sonuç tanıtıcısı
function odbc fetch object $satırnum	döndürülecek satırın numarası; belirtilmesi isteğe bağlıdır
function object odbc fetch object	istenen satırı içeren bir nesne döner
function object odbc fetch object resource $sonuç_kimliği int $satırnum	sonu&ccedil; satırını bir nesne olarak d&ouml;nd&uuml;r&uuml;r
function odbc fetch row $satırnum	satırnum belirtilmişse işlev sonuç kümesindeki sonraki satırı döndürmeye çalışır
function odbc fetch row $sonuç_kimliği	odbc_exec() ile döndürülmüş bir sonuç tanıtıcısı
function bool odbc fetch row	bir satır varsa true aksi takdirde false döner
function bool odbc fetch row resource $sonuç_kimliği int $satırnum	bir satır d&ouml;nd&uuml;r&uuml;r
function odbc gettypeinfo $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc gettypeinfo $veri_türü	bilgi döndürülecek veri türü
function resource odbc gettypeinfo	hata durumunda false yoksa istenen bilgiyi içeren bir odbc sonuç tanıtıcısı döner
function resource odbc gettypeinfo resource $bağlantı_kimliği int $veri_türü	veri kaynağınca desteklenen veri t&uuml;rleri hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function odbc longreadlen $sonuç_kimliği	odbc_exec() ile döndürülmüş bir sonuç tanıtıcısı
function odbc longreadlen $uzunluk	phpye döndürülecek bayt sayısı
function bool odbc longreadlen	başarı durumunda true başarısızlık durumunda false döner
function bool odbc longreadlen resource $sonuç_kimliği int $uzunluk	long s&uuml;tunlarla &ccedil;alışmayı etkin kılar
function odbc num rows $sonuç_kimliği	odbc_exec() ile döndürülmüş bir sonuç tanıtıcısı
function int odbc num rows	belirtilen odbc sonucundakı satırların sayısını döndürür
function int odbc num rows resource $sonuç_kimliği	bir sonu&ccedil;taki satır sayısını d&ouml;nd&uuml;r&uuml;r
function odbc prepare $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc prepare $sorgu_dizgesi	hazırlanan deyimi içeren sorgu dizgesi
function resource odbc prepare	hata durumunda false yoksa sql komutu hazırlanabilmişse istenen bilgiyi içeren bir odbc sonuç tanıtıcısı döner
function resource odbc prepare resource $bağlantı_kimliği string $sorgu_dizgesi	&ccedil;alıştırılmak &uuml;zere bir deyim hazırlar
function odbc primarykeys $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function resource odbc primarykeys	hata durumunda false yoksa istenen bilgiyi içeren bir odbc sonuç tanıtıcısı döner
function resource odbc primarykeys resource $bağlantı_kimliği string $niteleyici string $sahibi string $tablo	bir tablonun birincil anahtarlarını d&ouml;nd&uuml;r&uuml;r
function odbc procedures $sahibi	sahibi
function odbc procedures $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc procedures $niteleyici	niteleyici
function odbc procedures $isim	isim
function resource odbc procedures	hata durumunda false yoksa istenen bilgiyi içeren bir odbc sonuç tanıtıcısı döner
function resource odbc procedures resource $bağlantı_kimliği	belirtilen veri kaynağında saklı yordamların listesini d&ouml;nd&uuml;r&uuml;r
function odbc result all $sonuç_kimliği	sonuç tanıtıcısı
function odbc result all $biçem	tablo biçemi
function int odbc result all	bir hata durumunda false yoksa satır sayısı döner
function int odbc result all resource $sonuç_kimliği string $biçem	sonucu bir html tablosu olarak basar
function odbc result $alan	veri döndürülecek alan ismi
function odbc result $sonuç_kimliği	bir odbc sonuç tanıtıcısı
function mixed odbc result	hata durumunda false null veri için null ikil veri için true aksi takdirde alanı içeren bir dizge döner
function mixed odbc result resource $sonuç_kimliği mixed $alan	sonu&ccedil;tan veri d&ouml;nd&uuml;r&uuml;r
function odbc rollback $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function bool odbc rollback	başarı durumunda true başarısızlık durumunda false döner
function bool odbc rollback resource $bağlantı_kimliği	bir hareketi başa d&ouml;nd&uuml;r&uuml;r
function odbc setoption $seçenek	değeri ayarlanacak seçenek
function odbc setoption $işlev	odbc işlevi kullanılacak mı?
function odbc setoption $kimlik	ayar değişikliği yapılacak bağlantı veya sonuç kimliği
function odbc setoption $değer	ayarlanacak seçeneğin değeri
function bool odbc setoption	başarı durumunda true başarısızlık durumunda false döner
function bool odbc setoption resource $kimlik int $işlev int $seçenek int $değer	odbc ayarlarını yapar
function odbc specialcolumns $niteleyici	niteliyici
function odbc specialcolumns $tablo	tablo
function odbc specialcolumns $boş	nullable özniteliği
function odbc specialcolumns $sahibi	sahibi
function odbc specialcolumns $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc specialcolumns $türü	sql_best_rowid belirtilirse tablodaki her satırı eşsiz olarak betimleyin sütun veya sütunlar döner
function odbc specialcolumns $kapsam	sonuç kümesinin kapsamı
function resource odbc specialcolumns	hata durumunda false yoksa istenen bilgiyi içeren bir odbc sonuç tanıtıcısı döner
function resource odbc specialcolumns resource $bağlantı_kimliği int $türü string $niteleyici string $sahibi string $tablo int $kapsam int $boş	&ouml;zel s&uuml;tunları d&ouml;nd&uuml;r&uuml;r
function odbc statistics $eşsiz	unique özniteliği
function odbc statistics $doğruluk	doğruluk
function odbc statistics $niteleyici	niteleyici
function odbc statistics $sahibi	sahibi
function odbc statistics $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc statistics $tablo_ismi	tablo ismi
function resource odbc statistics	hata durumunda false yoksa istenen bilgiyi içeren bir odbc sonuç tanıtıcısı döner
function resource odbc statistics resource $bağlantı_kimliği string $niteleyici string $sahibi string $tablo_ismi int $eşsiz int $doğruluk	bir tablo hakkındaki istatistikleri d&ouml;nd&uuml;r&uuml;r
function odbc tables $sahibi	sahibi
function odbc tables $bağlantı_kimliği	odbc bağlantı tanıtıcısı; ayrıntılar için odbc_connect() işlevine bakınız
function odbc tables $tablo_türü	tablo_türü boş bir dizge değilse tablo türlerinden oluşan virgül ayraçlı bir liste olmalıdır
function odbc tables $niteleyici	niteleyici
function odbc tables $isim	isim
function resource odbc tables	hata durumunda false yoksa istenen bilgiyi içeren bir odbc sonuç tanıtıcısı döner
function resource odbc tables resource $bağlantı_kimliği string $niteleyici string $sahibi string $isim string $tablo_türü	belli bir veri kaynağında bulunan tablo isimlerini d&ouml;nd&uuml;r&uuml;r
function opendir $dizin	açılacak dizinin yolu
function opendir $bağlam	bağlam değiştirgesinin açıklaması için akımlar bölümüne bakınız
function resource opendir	başarılı olduğunda dizin tanıtıcısı ile aksi takdirde false değeriyle döner
function resource opendir string $dizin resource $bağlam	belirtilen dizin i&ccedil;in bir tanıtıcı d&ouml;nd&uuml;r&uuml;r
function openlog $kimlik	kimlik dizgesi her iletiye eklenir
function openlog $seçenek	seçenek değiştirgesi bir günlük iletisi üretilirken hangi günlük seçeneğinin kullanılacağını belirtmek için kullanılır
function openlog $oluşum	oluşum değiştirgesi iletiyi günlüğe kaydedecek program türünü belirtmek için kullanılır
function bool openlog	başarı durumunda true başarısızlık durumunda false döner
function bool openlog string $kimlik int $seçenek int $oluşum	sistem g&uuml;nl&uuml;k&ccedil;&uuml;s&uuml;ne erişim i&ccedil;in bağlantı a&ccedil;ar
function openssl csr export to file $metinsiz	belirtilmesi isteğe bağlı olan metinsiz değiştirgesi çıktının ayrıntı seviyesini belirler
function openssl csr export to file $dosya	çıktı dosyasının yolu
function bool openssl csr export to file	başarı durumunda true başarısızlık durumunda false döner
function bool openssl csr export to file resource $csr string $dosya bool $metinsiz	belirtilen csr'yi bir dosyaya kaydeder
function openssl csr export $metinsiz	belirtilmesi isteğe bağlı olan metinsiz değiştirgesi çıktının ayrıntı seviyesini belirler
function bool openssl csr export	başarı durumunda true başarısızlık durumunda false döner
function bool openssl csr export resource $csr string $çıktı bool $metinsiz	belirtilen csr'yi bir dizge olarak d&ouml;nd&uuml;r&uuml;r
function openssl csr new $ayarlar	isteği ilklendirmek için öntanımlı olarak sisteminizdeki openssl
function openssl csr new $dn	sertifika için kullanılacak ayırt edilebilir isim
function openssl csr new $gizanh	openssl_pkey_new() veya başka bir openssl_pkey işlevi ile üretilmiş bir gizli anahtar
function openssl csr new $ek_seçenekler	csr için kullanılacak ek seçenekleri belirtmek için kullanılır
function mixed openssl csr new	üretilen csryi döndürür
function mixed openssl csr new array $dn resource $gizanh array $ayarlar array $ek_seçenekler	bir sertifika imzalama isteği csr &uuml;retir
function openssl csr sign $gün	üretilen sertifikanın kaç gün geçerli kalacağı belirtilir
function openssl csr sign $CA_sert	üretilen sertifikayı imzalamak için kullanılacak sertifika
function openssl csr sign $sıranum	üretilen sertifikanın sıra numarası
function openssl csr sign $gizanh	ca_sert ile ilişkili gizli anahtar
function openssl csr sign $ayarlar	üretilen sertifikanın ince ayarları için kullanılır
function openssl csr sign $csr	openssl_csr_new() tarafından üretilmiş bir sertifika imzalama isteği file: / / bir / yol / csr biçeminde bir dizge olarak pem kodlamalı bir csrnin dosya yolu veya openssl_csr_export() işlevinden dönen bir dizge olabilir
function resource openssl csr sign	işlem başarısız olursa false yoksa bir x509 sertifika özkaynağı döner
function resource openssl csr sign mixed $csr mixed $CA_sert mixed $gizanh int $gün array $ayarlar int $sıranum	bir csr'yi başka bir sertifika veya kendisi ile imzalayıp bir sertifika &uuml;retir
function openssl decrypt $veri	şifresi çözülecek veri
function openssl decrypt $ham_girdi	true belirtilirse veri değiştirgesinde ham bir dizge false belirtilirse base64 kodlu bir dizge bulunduğu varsayılır
function openssl decrypt $parola	parola
function openssl decrypt $yöntem	şifreleme yöntemi
function string openssl decrypt	işlem başarısız olursa false yoksa şifresi çözülmüş veriyi bir dizge olarak döndürür
function string openssl decrypt string $veri string $yöntem string $parola string $ham_girdi	verinin şifresini &ccedil;&ouml;zer
function openssl digest $veri	özeti hesaplanacak veri
function openssl digest $yöntem	özet yöntemi
function openssl digest $ham_çıktı	çıktı ham dizge olacaksa true onaltılık kodlu dizge olacaksa false olmalıdır
function string openssl digest	işlem başarısız olursa false yoksa özet dizgesi döner
function string openssl digest string $veri string $yöntem bool $ham_çıktı	bir &ouml;zet hesaplar
function openssl encrypt $veri	şifrelenecek veri
function openssl encrypt $ham_çıktı	çıktı ham olarak döndürülecekse true base64 kodlanmış olarak döndürülecekse false olmalıdır
function openssl encrypt $parola	parola
function openssl encrypt $yöntem	şifreleme yöntemi
function string openssl encrypt	işlem başarısız olursa false yoksa şifrelenmiş veri dizgesi döner
function string openssl encrypt string $veri string $yöntem string $parola bool $ham_çıktı	veriyi şifreler
function void openssl free key resource $ankim	anahtar &ouml;zkaynağını serbest bırakır
function openssl get cipher methods $rumuzlar	şifre rumuzları dönen diziye dahil edilecekse true olmalıdır
function array openssl get cipher methods	kullanılabilecek şifreleme yöntemlerini içeren bir dizi
function array openssl get cipher methods bool $rumuzlar	kullanılabilecek şifreleme y&ouml;ntemlerini d&ouml;nd&uuml;r&uuml;r
function openssl get md methods $rumuzlar	özet rumuzları dönen diziye dahil edilecekse true olmalıdır
function array openssl get md methods	kullanılabilecek özet yöntemlerini içeren bir dizi
function array openssl get md methods bool $rumuzlar	kullanılabilecek &ouml;zet y&ouml;ntemlerini d&ouml;nd&uuml;r&uuml;r
function openssl open $veri	işlem başarılı olursa çözümlenen veri bu değiştirgeye konur
function bool openssl open	başarı durumunda true başarısızlık durumunda false döner
function bool openssl open string $mühürlü_veri string $veri string $zarf_anahtarı mixed $gizankim	m&uuml;h&uuml;rl&uuml; veriyi a&ccedil;ar
function openssl pkcs12 export to file $gizli_anh	pkcs#12 dosyasının gizli anahtar bileşeni
function openssl pkcs12 export to file $parola	pkcs#12 dosyasının şifreleme / çözme parolası
function openssl pkcs12 export to file $dosya	çıktı dosyasının yolu
function bool openssl pkcs12 export to file	başarı durumunda true başarısızlık durumunda false döner
function bool openssl pkcs12 export to file mixed $x509 string $dosya mixed $gizli_anh string $parola array $değiştirgeler	bir pkcs#12 uyumlu sertifika deposunu bir dosyaya kaydeder
function openssl pkcs12 read $parola	pkcs#12 dosyasının şifresini açmak için parola
function openssl pkcs12 read $pkcs12	pkcs#12 sertifika deposunu içeren dosyanın yolu
function openssl pkcs12 read $sertifikalar	işlem başarılı olursa sertifikalar bu diziye konur
function bool openssl pkcs12 read	başarı durumunda true başarısızlık durumunda false döner
function bool openssl pkcs12 read string $pkcs12 array $sertifikalar string $parola	bir pkcs#12 sertifika deposunu bir diziye &ccedil;&ouml;z&uuml;mler
function openssl pkcs7 sign $ek_sertifikalar	alıcının imzayı doğrulamasına yardımcı olması için imzaya eklenecek sertifikaları içeren dosyanın yolu
function openssl pkcs7 sign $seçenekler	çıktıda değişiklik yapmak için kullanılır
function openssl pkcs7 sign $başlıklar	ileti imzalandıktan sonra hazırlanan başlıkları içeren bir dizidir
function bool openssl pkcs7 sign	başarı durumunda true başarısızlık durumunda false döner
function bool openssl pkcs7 sign string $girdi_dosyası string $çıktı_dosyası mixed $imza_sertifikası mixed $gizli_anahtar array $başlıklar int $seçenekler string $ek_sertifikalar	bir s / mime iletiyi imzalar
function openssl pkey export to file $parolası	belirtilen anahtar bir parola ile korunuyorsa bu parola burada belirtilir
function openssl pkey export to file $ayarlar	ihraç işlemine ince ayar çekmek için ve / veya openssl yapılandırma dosyasındaki seçenekleri geçersiz kılmak için kullanılabilir
function openssl pkey export to file $dosya	ascii zırhlı anahtarın kaydedileceği dosyanın yolu
function bool openssl pkey export to file	başarı durumunda true başarısızlık durumunda false döner
function bool openssl pkey export to file mixed $anahtar string $dosya string $parolası array $ayarlar	bir anahtarın ihra&ccedil; edilebilir g&ouml;sterimini bir dosyaya kaydeder
function openssl pkey export $parolası	belirtilen anahtar bir parola ile korunuyorsa bu parola burada belirtilir
function openssl pkey export $ayarlar	ihraç işlemine ince ayar çekmek için ve / veya openssl yapılandırma dosyasındaki seçenekleri geçersiz kılmak için kullanılabilir
function bool openssl pkey export	başarı durumunda true başarısızlık durumunda false döner
function bool openssl pkey export mixed $anahtar string $çıktı string $parolası array $ayarlar	bir anahtarın ihra&ccedil; edilebilir g&ouml;sterimini bir dizge olarak d&ouml;nd&uuml;r&uuml;r
function openssl pkey free $anahtar	anahtarı betimleyin özkaynak
function void openssl pkey free resource $anahtar	bir gizli anahtarı serbest bırakır
function openssl pkey get details $anahtar	anahtarı betimleyen özkaynak
function array openssl pkey get details	işlem başarısız olursa false yoksa anahtarın ayrıntılarını içeren bir dizi döner
function array openssl pkey get details resource $anahtar	anahtarla ilgili ayrıntıları bir dizi i&ccedil;inde d&ouml;nd&uuml;r&uuml;r
function openssl pkey get private $anahtar	şunlardan biri olabilir: file: / / bir / yol / dosya
function openssl pkey get private $parolası	belirtilen anahtar bir parola ile korunuyorsa bu parola burada belirtilir
function resource openssl pkey get private	işlem başarısız olursa false yoksa gizli anahtar için bir özkaynak tanıtıcısı döner
function resource openssl pkey get private mixed $anahtar string $parolası	bir gizli anahtar d&ouml;nd&uuml;r&uuml;r
function openssl pkey get public $sertifika	şunlardan biri olabilir: bir x
function resource openssl pkey get public	işlem başarısız olursa false yoksa genel anahtar için bir özkaynak tanıtıcısı döner
function resource openssl pkey get public mixed $sertifika	genel anahtarı sertifikadan elde edip kullanıma hazırlar
function openssl pkey new $ayarlar	anahtar üretimine ince ayar çekmek için bit sayısını belirtmek gibi kullanılabilir
function resource openssl pkey new	işlem başarısız olursa false yoksa anahtar çifti için bir özkaynak tanıtıcısı döner
function resource openssl pkey new array $ayarlar	yeni bir anahtar &ccedil;ifti &uuml;retir
function openssl private decrypt $dolgu	openssl_pkcs1_padding öntanımlı olup yerine şunlardan biri belirtilebilir: openssl_sslv23_padding openssl_pkcs1_oaep_padding openssl_no_padding
function openssl private decrypt $anahtar	veriyi şifrelemekte kullanılan genel anahtarın karşılığı olan gizli anahtar
function bool openssl private decrypt	başarı durumunda true başarısızlık durumunda false döner
function bool openssl private decrypt string $şifreli_veri string $veri mixed $anahtar int $dolgu	genel anahtarla şifrelenmiş verinin şifresini gizli anahtarla &ccedil;&ouml;zer
function openssl public encrypt $dolgu	openssl_pkcs1_padding öntanımlı olup yerine şunlardan biri belirtilebilir: openssl_sslv23_padding openssl_pkcs1_oaep_padding openssl_no_padding
function openssl public encrypt $veri	şifrelenecek veri
function openssl public encrypt $şifreli_veri	şifrelenen veri bu değişkene konur
function openssl public encrypt $anahtar	genel anahtar
function bool openssl public encrypt	başarı durumunda true başarısızlık durumunda false döner
function bool openssl public encrypt string $veri string $şifreli_veri mixed $anahtar int $dolgu	veriyi genel anahtarla şifreler
function openssl seal $genankim_dizisi	genel anahtar kimliklerini içeren dizi
function openssl seal $mühürlü_veri	mühürlenen veri bu değiştirgeye konur
function openssl seal $veri	genel anahtarlarla şifrelenip zarf anahtarları ile mühürlenecek veri
function int openssl seal	işlem başarılı olursa mühürlü veri mühürlü_veri değiştirgesine zarf anahtarları zarf_mühürleri değiştirgesine konup mühürlü verinin uzunluğu döndürülür
function int openssl seal string $veri string $mühürlü_veri array $zarf_mühürleri array $genankim_dizisi	veriyi m&uuml;h&uuml;rler
function openssl sign $imza	işlem başarılı olursa imza bu değiştirgeye konur
function openssl sign $algoritma	openssl_algo_sha1 öntanımlıdır
function openssl sign $gizankim	imza bu anahtar kullanılarak oluşturulur
function openssl sign $veri	imzalanacak veri
function bool openssl sign	başarı durumunda true başarısızlık durumunda false döner
function bool openssl sign string $veri string $imza mixed $gizankim int $algoritma	imza &uuml;retir
function openssl verify $imza	doğrulama için kullanılacak imza
function openssl verify $algoritma	openssl_algo_sha1 öntanımlıdır
function openssl verify $genankim	genel anahtarı tanımlayıcı kimlik
function openssl verify $veri	imzalı veri
function int openssl verify	imza doğruysa 1 yanlışsa 0 hata oluşmuşsa -1 döner
function int openssl verify string $veri string $imza mixed $genankim int $algoritma	imzayı doğrular
function openssl x509 check private key $x509sert	openssl_x509_read() tarafından döndürülen bir x509 sertifika özkaynağı
function openssl x509 check private key $anahtar	gizli anahtar
function bool openssl x509 check private key	gizli anahtar x509sert in karşılığı ise true yoksa false döner
function bool openssl x509 check private key mixed $x509sert mixed $anahtar	bir gizli anahtarın bir sertifikaya karşılık olup olmadığına bakar
function openssl x509 checkpurpose $x509sert	openssl_x509_read() tarafından döndürülen bir x509 sertifika özkaynağı
function openssl x509 checkpurpose $CA_bilgisi	sertifika doğrulama bölümünde açıklandığı gibi güvenilir yetkili sertifika dosya ve dizinlerini içeren bir dizi olmalıdır
function openssl x509 checkpurpose $güvencesiz_dosya	belirtildiği takdirde sertifikayı doğrulamaya yardımcı olacak sertifikaların bulunduğu pem kodlamalı dosyanın bu dosyadan gelen sertifikalara güvenilmez ise de ismi olmalıdır
function int openssl x509 checkpurpose	sertifika belirtilen amaç için kullanılabiliyorsa true kullanılamıyorsa false bir hata oluşmuşsa -1 döner
function int openssl x509 checkpurpose mixed $x509sert int $amaç array $CA_bilgisi string $güvencesiz_dosya	sertifikanın belli bir ama&ccedil;la kulanılıp kullanılmayacağına bakar
function openssl x509 export $x509sert	openssl_x509_read() tarafından döndürülen bir x509 sertifika özkaynağı
function openssl x509 export $çıktı	pem kodlamalı dizgenin konulacağı değişken
function openssl x509 export $metinsiz	belirtilmesi isteğe bağlı olan metinsiz değiştirgesi çıktının ayrıntı seviyesini belirler
function bool openssl x509 export	başarı durumunda true başarısızlık durumunda false döner
function bool openssl x509 export mixed $x509sert string $çıktı bool $metinsiz	belirtilen sertifikayı bir dizge olarak d&ouml;nd&uuml;r&uuml;r
function openssl x509 free $x509sert	openssl_x509_read() tarafından döndürülen bir x509 sertifika özkaynağı
function void openssl x509 free resource $x509sert	sertifika &ouml;zkaynağını serbest bırakır
function openssl x509 parse $x509sert	openssl_x509_read() tarafından döndürülen bir x509 sertifika özkaynağı
function openssl x509 parse $kısa_adlar	dizi içinde verinin nasıl indisleneceği belirtilir
function array openssl x509 parse	dönen verinin yapısında değişiklik yapılma ihtimali olduğundan yapı ihtiyaten henüz belgelenmemiştir
function array openssl x509 parse mixed $x509sert bool $kısa_adlar	bir x509 sertifikasını &ccedil;&ouml;z&uuml;mleyip bilgileri bir dizi i&ccedil;inde d&ouml;nd&uuml;r&uuml;r
function resource openssl x509 read	başarısızlık durumunda false yoksa bir özkaynak tanıtıcısı döner
function resource openssl x509 read mixed $x509srtfk_verisi	bir x
function ord $dizge	bir karakter
function int ord	ascii değeri bir tamsayı olarak döndürür
function int ord string $dizge	karakterin ascii değerini d&ouml;nd&uuml;r&uuml;r
function bool output reset rewrite vars	başarı durumunda true başarısızlık durumunda false döner
function bool output reset rewrite vars	url yeniden yazma değerlerini sıfırlar
function override function $işlev_ismi	geçersiz kılınacak işlev
function override function $işlev_kodu	işlevin yeni kodu
function override function $işlev_değiştirgeleri	virgülle ayrılmış dizgeler halinde işlev değiştirgeleri
function bool override function	başarı durumunda true başarısızlık durumunda false döner
function bool override function string $işlev_ismi string $işlev_değiştirgeleri string $işlev_kodu	yerleşik işlevleri ge&ccedil;ersiz kılar
function parse ini file $bölümleri_işle	bu değiştirgeye true atanırsa bölüm isimlerini ve içerdikleri ayarları içeren çok boyutlu bir dizi döner
function parse ini file $tarama_kipi	değeri ini_scanner_normal öntanımlıdır veya ini_scanner_raw olabilir
function parse ini file $dosyaismi	çözümlenecek yapılandırma dosyası
function array parse ini file	başarısızlık durumunda false aksi takdirde ayarları bir ilişkisel dizi içinde döndürür
function array parse ini file string $dosyaismi bool $bölümleri_işle int $tarama_kipi	bir yapılandırma dosyasını &ccedil;&ouml;z&uuml;mler
function parse str $dizi	seçimlik olan bu değiştirge kullanılmışsa değişkenler etki alanında tanımlanmak yerine bu dizinin elemanlarına yerleştirilir
function parse str $dizge	girdi dizgesi
function void parse str string $dizge array $dizi	dizge i&ccedil;indeki değişkenleri &ccedil;&ouml;z&uuml;mler
function passthru $komut	çalıştırılacak komut
function passthru $dönüş_değeri	bu değiştirge belirtilmişse unix komutunun çıkış değeri bu değişkene yazılır
function void passthru string $komut int $dönüş_değeri	harici bir programı &ccedil;alıştırır ve &ccedil;ıktısını ham olarak g&ouml;sterir
function pathinfo $seçenekler	isteğe bağlı seçenekler değiştirgesinde hangi bileşenlerin döndürüleceğini pathinfo_dirname pathinfo_basename pathinfo_extension ve pathinfo_filename seçeneklerinin birleşimi olarak belirtebilirsiniz
function pathinfo $yol	bilgi toplanacak yol
function mixed pathinfo	ilişkisel dizide dönen bileşenler: dirname dizin ismi basename uzantısız isim extension uzantı) ve filename dosya ismi
function mixed pathinfo string $yol int $seçenekler	bir dosya yolu hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function pclose $dt	dosya tanıtıcısı geçerli olmalı ve başarılı bir popen() çağrısından dönmüş olmalıdır
function int pclose	çalışan sürecin sonlandırma çıkış kodu ile döner
function int pclose resource $dt	bir s&uuml;re&ccedil; tanıtıcısını kapatır
function pcntl alarm $saniye	sinyal gönderilene kadar beklenecek süre
function int pcntl alarm	devreye girmeden geçersiz hale getirilmiş önceki çağrının süresini döndürür
function int pcntl alarm int $saniye	belli bir s&uuml;re sonra sigalrm sinyali g&ouml;nderir
function pcntl exec $değiştirgeler	programa komut satırında aktarılacak değiştirgeleri içeren dizi
function pcntl exec $ortam	programa ortam olarak aktarılacak dizgelerden oluşan bir dizi
function pcntl exec $yol	ikil bir çalıştırılabilirin veya ilk satırında kendini çalıştıracak yorumlayıcının #! / usr / local / bin / perl gibi belirtildiği bir betiğin dosya yolu
function void pcntl exec string $yol array $değiştirgeler array $ortam	belirtilen programı ge&ccedil;erli s&uuml;re&ccedil; ortamında &ccedil;alıştırır
function int pcntl fork	başarı durumunda ana sürecin icra evresinde çocuk sürecin süreç kimliği çocuk sürecin icra evresinde ise 0 döner
function int pcntl fork	&ccedil;alışan s&uuml;reci &ccedil;atallar
function pcntl setpriority $pid	belirtilmezse işlevi çağıran sürecin süreç kimliği kullanılır
function pcntl setpriority $öncelik	genelde -20 ile 20 arasında bir değerdir
function pcntl setpriority $süreç_türü	prio_pgrp prio_user ve prio_process sabitlerinden biri
function bool pcntl setpriority	başarı durumunda true başarısızlık durumunda false döner
function bool pcntl setpriority int $öncelik int $pid int $süreç_türü	s&uuml;recin &ouml;nceliğini değiştirir
function pcntl signal $yeniden_syscalls	bu sinyal geldiğinde yeniden sistem çağrısı yapılıp yapılmayacağını belirler
function pcntl signal $sinyal	sinyal numarası
function pcntl signal $eylemci	kullanıcı tarafından oluşturulmuş bir işlevin veya yöntemin ismi ya da şu iki küresel sabitten biri: sig_ign sig_dfl
function bool pcntl signal	başarı durumunda true başarısızlık durumunda false döner
function bool pcntl signal int $sinyal callback $eylemci bool $yeniden_syscalls	bir sinyal eylemci belirtir
function pcntl sigprocmask $sinyaller	sinyal listesi
function pcntl sigprocmask $nasıl	pcntl_sigprocmask() işlevinin davranışını belirler
function pcntl sigprocmask $eskiler	işlev çağrılmadan önce engellenmekte olan sinyallerin listesi
function bool pcntl sigprocmask	başarı durumunda true başarısızlık durumunda false döner
function bool pcntl sigprocmask int $nasıl array $sinyaller array $eskiler	sinyalleri ekler siler veya engeller
function pcntl sigtimedwait $saniye	saniye cinsinden zaman aşımı
function pcntl sigtimedwait $nanoseconds	nano saniye cinsinden zaman aşımı
function pcntl sigtimedwait $bilgi	sinyallerle ilgili bilgilerin saklandığı dizi
function pcntl sigtimedwait $sinyaller	beklenecek sinyalleri içeren dizi
function int pcntl sigtimedwait	başarı durumunda sinyal numarasını döndürür
function int pcntl sigtimedwait array $sinyaller array $bilgi int $saniye int $nanosaniye	sinyalleri zaman aşımı dolana kadar bekler
function pcntl wait $durum	pcntl_wait() işlevi durum değiştirgesinde durum bilgisini şu işlevler ile değerendirilmek üzere saklar: pcntl_wifexited() pcntl_wifstopped() pcntl_wifsignaled() pcntl_wexitstatus() pcntl_wtermsig() ve pcntl_wstopsig()
function pcntl wait $seçenekler	sisteminizde wait3 kullanılabiliyorsa geneldde bsd sistemlerinde bulunur isteğe bağlı olan seçenekler değişirgesini kullanabilirsiniz
function int pcntl wait	çocuk süreç çıkmışsa süreç kimliği hata oluşmuşsa -1 wait3 bulunan sistemlerde wnohang kullanılmış ama ortada bir çocuk süreç yoksa 0 ile döner
function int pcntl wait int $durum int $seçenekler	&ccedil;atallanmış bir &ccedil;ocuğun durum kodu i&ccedil;in bekler
function pcntl wexitstatus $durum	durum değiştirgesi başarılı bir pcntl_waitpid() çağrısından dönen durum değiştirgesidir
function int pcntl wexitstatus	dönüş kodunu bir tamsayı olarak döndürür
function int pcntl wexitstatus int $durum	sonlanmış &ccedil;ocuk s&uuml;recin d&ouml;n&uuml;ş kodunu d&ouml;nd&uuml;r&uuml;r
function pcntl wifexited $durum	durum değiştirgesi başarılı bir pcntl_waitpid() çağrısından dönen durum değiştirgesidir
function bool pcntl wifexited	çocuk sürecin durum kodu normal bir çıkış anlamına geliyorsa true diğer tüm durumlarda false döner
function bool pcntl wifexited int $durum	durum kodunun normal bir &ccedil;ıkışı mı işaret ettiğine bakar
function pcntl wifsignaled $durum	durum değiştirgesi başarılı bir pcntl_waitpid() çağrısından dönen durum değiştirgesidir
function bool pcntl wifsignaled	çocuk süreç yakalanmayan bir sinyal sebebiyle çıkmışsa true diğer tüm durumlarda false döner
function bool pcntl wifsignaled int $status	durum kodunun bir sinyal sebebiyle bir sonlanmayı mı işaret ettiğine bakar
function pcntl wifstopped $durum	durum değiştirgesi başarılı bir pcntl_waitpid() çağrısından dönen durum değiştirgesidir
function bool pcntl wifstopped	çocuk süreç durdurulmuşsa true diğer durumlarda false döner
function bool pcntl wifstopped int $durum	&ccedil;ocuk s&uuml;recin durmuş olup olmadığına bakar
function pcntl wstopsig $durum	durum değiştirgesi başarılı bir pcntl_waitpid() çağrısından dönen durum değiştirgesidir
function int pcntl wstopsig	sinyal numarası döner
function int pcntl wstopsig int $status	&ccedil;ocuk s&uuml;recin durmasına sebep olan sinyali d&ouml;nd&uuml;r&uuml;r
function pcntl wtermsig $durum	durum değiştirgesi başarılı bir pcntl_waitpid() çağrısından dönen durum değiştirgesidir
function int pcntl wtermsig	sinyal numarasını bir tamsayı olarak döndürür
function int pcntl wtermsig int $durum	&ccedil;ocuk s&uuml;recin sonlanmasına sebep olan sinyali d&ouml;nd&uuml;r&uuml;r
function resource pfsockopen string $konakadı int $port int $hatanum string $hata_iletisi float $zaman_aşımı	kalıcı bir internet veya unix alan soketi bağlantısı a&ccedil;ar
function php check syntax $hata_iletisi	bu değiştirgede bir dizge belirtilmişse sözdizimi denetimi tarafından üretilen hata iletisine bu dizge dahil edilir
function php check syntax $betik	söz dizimi sınanacak dosyanın yolu
function bool php check syntax	sözdizimi denetiminde hata bulunamamışsa true hata bulunmuşsa veya betik dosyası açılamamışsa false döner
function bool php check syntax string $betik string $hata_iletisi	belirtilen veya &ccedil;alışan dosyanın php s&ouml;zdizimini denetler
function string php logo guid	phpe9568f34-d428-11d2-a769-00aa001acf42 döner
function string php logo guid	php logo kimliğini d&ouml;nd&uuml;r&uuml;r
function php strip whitespace $dosya	php dosyasının yolu
function string php strip whitespace	işlev başarılı olursa ayıklanmış kaynak kodunu aksi takdirde boş bir dizge döndürür
function string php strip whitespace string $dosya	boşlukları ve a&ccedil;ıklamaları ayıklanmış kaynak kodla d&ouml;ner
function php uname $kip	kip döndürülecek bilgi çeşidini belirtmek için kullanılan tek bir karakter içerebilir
function string php uname	bilgiyi bir dizge olarak döndürür
function string php uname string $kip	php'nin &ccedil;alıştığı işletim sistemi hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function phpcredits $seçenek	bu değiştirgeyi sayfayı özelleştirmek için kullanabilirsiniz
function bool phpcredits	başarı durumunda true başarısızlık durumunda false döner
function bool phpcredits int $seçenek	php'ya katkıda bulunanları g&ouml;sterir
function phpinfo $ne	isteğe bağlı bu değiştirgede aşağıdaki sabitlerin bitsel değerlerinin toplamı belirtilerek işlevin çıktısı özelleştirilebilir
function bool phpinfo	başarı durumunda true başarısızlık durumunda false döner
function bool phpinfo int $ne	php'nin o anki durumu hakkında b&uuml;y&uuml;k miktarda bilgi &ccedil;ıktılar
function png2wbmp $hdf_genş	hedef resmin genişliği
function png2wbmp $pngdosya	png dosyasının yolu
function png2wbmp $eşik	0dan 8e kadar eşik değer
function png2wbmp $wbmpdosya	hedef wbmp dosyasının yolu
function png2wbmp $hdf_yüks	hedef resmin yüksekliği
function bool png2wbmp	başarı durumunda true başarısızlık durumunda false döner
function bool png2wbmp string $pngdosya string $wbmpdosya int $hdf_yüks int $hdf_genş int $eşik	bir png dosyasını wbmp dosyasına d&ouml;n&uuml;şt&uuml;r&uuml;r
function popen $komut	komut
function popen $kip	kip
function resource popen	fopen() işlevi tarafından döndürülenden farklı olarak hem okuma hem de yazma için kullanılabilen ve pclose() ile kapatılması gereken bir dosya tanıtıcısı ile döner
function resource popen string $komut string $kip	bir s&uuml;re&ccedil; tanıtıcısı a&ccedil;ar
function string posix getcwd	işlem sırasında bir hata oluşursa posix_get_last_error() işlevi ile öğrenilmek üzere bir hata numarası atanır ve false döner yoksa mutlak dizin yolunu içeren bir dizge döner
function string posix getcwd	&ccedil;alışılan dizinin tam yolunu d&ouml;nd&uuml;r&uuml;r
function int posix geteuid	kullanıcı kimliği bir tamsayı olarak döner
function int posix geteuid	&ccedil;alışan s&uuml;recin etkin kullanıcı kimliğini d&ouml;nd&uuml;r&uuml;r
function int posix getgid	gerçek grup kimliği bir tamsayı olarak döner
function int posix getgid	&ccedil;alışan s&uuml;recin ger&ccedil;ek grup kimliğini d&ouml;nd&uuml;r&uuml;r
function posix getgrgid $gid	grup kimliği
function array posix getgrgid	dönen dizinin elemanları: grup bilgileri dizisi anahtar açıklama name grubun ismi
function array posix getgrgid int $gid	grup kimliği belirtilen grup hakkında bilgi verir
function posix getgrnam $isim	grubun ismi
function array posix getgrnam	dönen dizinin elemanları: grup bilgileri dizisi anahtar açıklama name grubun ismi
function array posix getgrnam string $isim	ismi belirtilen grup hakkında bilgi verir
function array posix getgroups	çalışan sürecin üyesi olduğu grupların grup kimliklerini tamsayı olarak içeren bir dizi döner
function array posix getgroups	&ccedil;alışan s&uuml;recin &uuml;yesi olduğu grupları d&ouml;nd&uuml;r&uuml;r
function posix getpgid $pid	süreç kimliği
function int posix getpgid	süreç grup kimliği bir tamsayı olarak döner
function int posix getpgid int $pid	s&uuml;re&ccedil; kimliği belirtilen s&uuml;recin s&uuml;re&ccedil; grup kimliğini d&ouml;nd&uuml;r&uuml;r
function int posix getpgrp	süreç grup kimliği bir tamsayı olarak döner
function int posix getpgrp	&ccedil;alışan s&uuml;recin s&uuml;re&ccedil; grup kimliğini d&ouml;nd&uuml;r&uuml;r
function int posix getpid	süreç kimliği bir tamsayı olarak döner
function int posix getpid	&ccedil;alışan s&uuml;recin s&uuml;re&ccedil; kimliğini d&ouml;nd&uuml;r&uuml;r
function int posix getppid	süreç kimliği bir tamsayı olarak döner
function int posix getppid	&uuml;st s&uuml;re&ccedil; kimliğini d&ouml;nd&uuml;r&uuml;r
function posix getpwuid $uid	kullanıcı kimliği
function array posix getpwuid	şu elemanları içeren bir ilişkisel dizi döner: kullanıcı bilgileri dizisi anahtar açıklama name kullanıcının kullanıcı ismi
function array posix getpwuid int $uid	kullanıcı kimliği belirtilen kullanıcı hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function posix getsid $pid	süreç kimliği
function int posix getsid	oturum kimliği bir tamsayı olarak döndürülür
function int posix getsid int $pid	ge&ccedil;erli s&uuml;recin oturum kimliğini d&ouml;nd&uuml;r&uuml;r
function posix initgroups $isim	kullanıcı ismi
function posix initgroups $ana_gid	genelde passwd dosyasındaki grup numarasıdır
function bool posix initgroups	başarı durumunda true başarısızlık durumunda false döner
function bool posix initgroups string $isim int $ana_gid	grup erişim listesini hesaplar
function posix mknod $büyük	büyük aygıt numarası s_ifchr veya s_ifblk belirtirken gerekir
function posix mknod $küçük	küçük aygıt numarası öntanımlı değer: 0
function posix mknod $kip	izinlerle şu sabitleren biri bitsel veyalanarak belirtilir: posix_s_ifreg posix_s_ifchr posix_s_ifblk posix_s_ififo posix_s_ifsock
function posix mknod $yol	oluşturulacak dosyanın yolu
function bool posix mknod	başarı durumunda true başarısızlık durumunda false döner
function bool posix mknod string $yol int $kip int $büyük int $küçük	&ouml;zel veya sıralı posix
function posix setegid $gid	grup kimliği
function bool posix setegid	başarı durumunda true başarısızlık durumunda false döner
function bool posix setegid int $gid	ge&ccedil;erli s&uuml;recin etkin grup kimliğini belirler
function posix seteuid $uid	kullanıcı kimliği
function bool posix seteuid	başarı durumunda true başarısızlık durumunda false döner
function bool posix seteuid int $uid	ge&ccedil;erli s&uuml;recin etkin kullanıcı kimliğini belirler
function posix setgid $gid	grup kimliği
function bool posix setgid	başarı durumunda true başarısızlık durumunda false döner
function bool posix setgid int $gid	ge&ccedil;erli s&uuml;recin grup kimliğini tanımlar
function posix setpgid $pid	süreç kimliği
function posix setpgid $pgid	süreç grubu kimliği
function bool posix setpgid	başarı durumunda true başarısızlık durumunda false döner
function bool posix setpgid int $pid int $pgid	iş denetimi i&ccedil;in s&uuml;re&ccedil; grup kimliğini tanımlar
function int posix setsid	hata durumunda -1 yoksa oturum kimliği döner
function int posix setsid	ge&ccedil;erli s&uuml;reci bir oturumun lider s&uuml;reci haline getirir
function posix setuid $uid	kullanıcı kimliği
function bool posix setuid	başarı durumunda true başarısızlık durumunda false döner
function bool posix setuid int $uid	ge&ccedil;erli s&uuml;recin kullanıcı kimliğini tanımlar
function posix strerror $hatanum	posix_get_last_error() işlevinden dönmüş bir posix hata numarası
function string posix strerror	hata iletisini bir dizge olarak döndürür
function string posix strerror int $hatanum	belirtilen hatanum ile ilgili sistem hata iletisini d&ouml;nd&uuml;r&uuml;r
function array posix times	o an ki işlemci kullanımı hakkındaki bilgileri indisli bir dizge olarak döndürür
function array posix times	s&uuml;re&ccedil;le ilgili işlemci zamanlarını d&ouml;nd&uuml;r&uuml;r
function posix ttyname $dt	dosya tanıtıcısı
function string posix ttyname	işlem başarısız olursa false yoksa dt tanıtıcısının mutlak dosya yolunu bir dizge olarak döndürür
function string posix ttyname int $dt	u&ccedil;birim aygıt ismini belirler
function array posix uname	sistem hakkında özet bilgiyi bir dizge olarak döndürür
function array posix uname	sistem hakkında bilgi verir
function mixed preg filter	konu değiştirgesi bir dizi ise bir dizi döndürür aksi takdirde bir dizge döner
function mixed preg filter mixed $şablon mixed $yenisi mixed $konu int $sınır int $sayı	bir d&uuml;zenli ifade arama ve değiştirmesi yapar
function preg grep $şablon	bir dizge olarak aranacak şablon
function preg grep $girdi	girdi dizisi
function preg grep $seçenekler	preg_grep_invert belirtilirse şablon ile eşleşmeyen girdi dizisinin elemanlarından oluşan bir dizi ile döner
function array preg grep	girdi dizisindeki anahtarları kullanan bir dizi ile döner
function array preg grep string $şablon array $girdi int $seçenekler	d&uuml;zenli ifadeyle eşleşenleri i&ccedil;eren bir dizi d&ouml;nd&uuml;r&uuml;r
function int preg last error	aşağıdaki sabitlerden biri döner: preg_no_error preg_internal_error preg_backtrack_limit_error ayrıca bkz: pcre
function int preg last error	son pcre d&uuml;zenli ifade aramasından d&ouml;nen hatayı d&ouml;nd&uuml;r&uuml;r
function preg match all $başlangıç	konu dizgesinde aramanın başlatılacağı konum; isteğe bağlı olup bayt cinsinden belirtilir
function preg match all $PREG_OFFSET_CAPTURE	bu seçenek etkin olduğunda her eşleşme bulunduğunda sonraki arama başlangıcı da döner
function preg match all $şablon	bir dizge olarak aranacak şablon
function preg match all $konu	şablonla eşleşeceği düşünülen dizge
function preg match all $PREG_PATTERN_ORDER	$eşleşmeler 0 şablonun tamamıyla eşleşen dizgeyi $eşleşmeler 1 ve sonrakiler alt şablonlarla eşleşen alt dizgeleri içermek üzere sonuçları sıralar
function preg match all $seçenekler	aşağıdaki seçeneklerin bir birleşimi belirtilebilir dikkat: preg_pattern_order ve preg_set_order birlikte beklenen yararı sağlamaz
function preg match all $PREG_SET_ORDER	$eşleşmeler 0 ilk eşleşme kümesini $matches 1 ve sonrakiler sonraki eşleşme kümelerini içermek üzere çıktıyı sıralar
function preg match all $eşleşmeler	seçenekler değiştirgesine göre sıralanmış olarak tüm eşleşenleri içerecek dizi
function int preg match all	hata oluşmuşsa false aksi takdirde şablonun tamamıyla eşleşenlerin sayısını 0 olabilir döndürür
function int preg match all string $şablon string $konu array $eşleşmeler int $seçenekler int $başlangıç	kapsamlı bir d&uuml;zenli ifade eşleştirmesi yapar
function preg match $başlangıç	konu dizgesinde aramanın başlatılacağı konum; isteğe bağlı olup bayt cinsinden belirtilir
function preg match $PREG_OFFSET_CAPTURE	bu seçenek etkin olduğunda her eşleşme bulunduğunda sonraki arama başlangıcı da döner
function preg match $seçenekler	bu değiştirgede şu seçenekler belirtilebilir: preg_offset_capture bu seçenek etkin olduğunda her eşleşme bulunduğunda sonraki arama başlangıcı da döner
function preg match $şablon	bir dizge olarak aranacak şablon
function preg match $konu	şablonla eşleşeceği düşünülen dizge
function preg match $eşleşmeler	belirtildiği takdirde sonuçları içerecek dizi
function int preg match	preg_match() işlevi şablon ile eşleşme sayısını döndürür
function int preg match string $şablon string $konu array $eşleşenler int $seçenekler int $başlangıç	bir d&uuml;zenli ifadeyi eşleştirmeye &ccedil;alışır
function preg quote $im	belirtilmesi isteğe bağlı olup gerekirse bu im de öncelenecektir
function preg quote $dizge	girdi dizgesi
function string preg quote	öncelenmiş dizge ile döner
function string preg quote string $dizge string $im	d&uuml;zenli ifadelerin &ouml;zel karakterlerini &ouml;nceler
function preg replace callback $sayı	belirtildiği takdirde yapılan yer değiştirmelerin sayısı bu değiştirgeye konur
function preg replace callback $geriçağırım	konu dizgesiyle eşleşen elemanlardan oluşan bir dizi ile çağrılıp yer değiştirilecek dizgeleri içeren bir dizi döndüren bir geriçağırım işlevinin ismi
function preg replace callback $sınır	her konu dizgesinde her şablon için olası azami yer değiştirme sayısı
function preg replace callback $şablon	aranacak şablon
function preg replace callback $konu	şablonun aranacağı yer değiştirmeye konu dizge veya dizi
function mixed preg replace callback	konu değiştirgesi bir dizi ise preg_replace_callback() de bir dizi döndürür aksi takdirde bir dizge döner
function mixed preg replace callback mixed $şablon callback $geriçağırım mixed $konu int $sınır int $sayı	geri&ccedil;ağırım işlevi kullanarak d&uuml;zenli ifadeye g&ouml;re dizgede değişiklik yapar
function print r $ifade	gösterimi basılacak ifade
function print r $döndür	bu değiştirgeye true atarsanız print_r() çıktısını basmak yerine bir bilgi döndürür
function mixed print r	eğer belirtilen değer string integer veya float türündeyse değerin kendi basılır; array türündeyse anahtarların ve elemanların gösterileceği biçemde basılır
function mixed print r mixed $ifade bool $döndür	bir değişkenin insanlarca okunabilecek g&ouml;sterimini basar
function print $dizge	girdi dizgesi
function int print	daima 1 döner
function int print string $dizge	bir dizge &ccedil;ıktılar
function proc get status $süreç	hakkında bilgi döndürülecek proc_open() özkaynağı
function array proc get status	başarısızlık durumunda false aksi takdirde toplanan verileri içeren bir dizi döner
function array proc get status resource $süreç	proc_open tarafından a&ccedil;ılmış bir s&uuml;re&ccedil; hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function proc nice $fark	önceliği değiştirecek fark
function bool proc nice	başarı durumunda true başarısızlık durumunda false döner
function bool proc nice int $fark	&ccedil;alışan s&uuml;recin &ouml;nceliğini değiştirir
function proc open $dizin	komutun ilk çalıştırılacağı dizin
function proc open $cmd	çalıştırılacak komut
function proc open $tanıtıcılar	indisli bir dizi olup indisler tanıtıcı numaralarını değerler ise phpnin çocuk süreçlere bu tanıtıcıları nasıl aktaracağını gösterir
function proc open $seçenekler	ek seçenekler belirtme imkanı sunar
function proc open $ortam	çalıştırılacak komutun ortamına aktarılacak ortam değişkenleri dizisi
function proc open $borular	phpnin oluşturduğu boru uçlarına karşılık gelen dosya tanıtıcılarını içeren indisli bir dizi
function resource proc open	süreci ifade eden bir özkaynak döner
function resource proc open string $komut array $tanıtıcılar array $borular string $dizin array $ortam array $seçenekler	bir komutu &ccedil;alıştırır ve g / &ccedil; i&ccedil;in bir dosya tanıtıcı a&ccedil;ar
function proc terminate $sinyal	isteğe bağlı bu değiştirge sadece posix sistemlerde kullanışlıdır
function proc terminate $süreç	proc_open() tarafından açılmış bir süreç özkaynağı
function bool proc terminate	sürecin sonlanma durumu ile döner
function bool proc terminate resource $süreç int $sinyal	proc_open ile a&ccedil;ılmış bir s&uuml;reci &ouml;ld&uuml;r&uuml;r
function property exists $özellik	aranacak özelliğin ismi
function property exists $sınıf	sınanacak sınıf veya nesne
function bool property exists	özellik mevcutsa true değilse false bir hata durumunda null döner
function bool property exists mixed $sınıf string $özellik	bir nesne veya sınıfın belirtilen &ouml;zelliğe sahip olup olmadığına bakar
function putenv $atama_dizgesi	foo=bar gibi bir atama dizgesi
function bool putenv	başarı durumunda true başarısızlık durumunda false döner
function bool putenv string $atama_dizgesi	bir ortam değişkenine değer atar
function quoted printable decode $dizge	girdi dizgesi
function string quoted printable decode	8 bitlik ikil dizge döner
function string quoted printable decode string $dizge	ascii olarak basılabilir quoted-printable bir dizgenin 8 bitlik s&uuml;r&uuml;m&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
function quoted printable encode $dizge	girdi dizgesi
function string quoted printable encode	kodlanmış dizgeyi döndürür
function string quoted printable encode string $dizge	8 bitlik bir dizgenin ascii olarak basılabilir quoted-printable s&uuml;r&uuml;m&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
function range $yüksek	yüksek değer
function range $düşük	düşük değer
function range $adım	bu değiştirge belirtilmişse eleman sırası artış değerini belirler
function array range	düşük - yüksek aralığındaki elemanlardan oluşan bir dizi döner
function array range mixed $düşük mixed $yüksek number $adım	belli bir eleman aralığını i&ccedil;eren bir dizi oluşturur
function rawurldecode $dizge	kodlaması kaldırılacak url
function string rawurldecode	kodlaması kaldırılmış urlyi bir dizge olarak döndürür
function string rawurldecode string $dizge	url kodlamalı dizgenin kodlamasını kaldırır
function rawurlencode $dizge	kodlanacak url
function string rawurlencode	belirtilen dizge içindeki karakterlerden -_
function string rawurlencode string $dizge	rfc 1738'e uygun url kodlaması yapar
function readfile $include_path_kullan	dosyanın include_path yolunda da aranmasını istiyorsanız bu isteğe bağlı değiştirgeye true atamalısınız
function readfile $bağlam	bir bağlam akımı özkaynağı
function readfile $dosyaismi	okunacak dosya
function int readfile	bir hata oluşmuşsa false döner ve işlev @ readfile() şeklinde çağrılmamışsa bir hata iletisi basılır
function int readfile string $dosyaismi bool $include_path_kullan resource $bağlan	bir dosyayı &ccedil;ıktılar
function readgzfile $dosyaismi	dosya sisteminden okunup içeriği standart çıktıya yazılacak dosya
function readgzfile $use_include_path	bu isteğe bağlı değiştirgeyle 1 değerini aktarırsanız dosyanın include_path yönergesindeki yollarda da aranmasını sağlamış olursunuz
function int readgzfile	dosyadan okunan sıkıştırılmamış) bayt sayısı ile döner
function int readgzfile string $dosyaismi int $include_path_kullan	bir
function readlink $yol	sembolik bağ yolu
function string readlink	hata durumunda false aksi takdirde sembolik bağın içeriğini döndürür
function string readlink string $yol	bir sembolik bağın hedefi ile d&ouml;ner
function realpath $yol	sınanacak dosya yolu
function string realpath	başarı durumunda normalleştirilmiş mutlak dosya yolunu döndürür
function string realpath string $yol	normalleştirilmiş mutlak dosya yolunu d&ouml;nd&uuml;r&uuml;r
function recode file $çıktı	çıktı olarak bir yerel dosya tanıtıcısı
function recode file $girdi	girdi olarak bir yerel dosya tanıtıcısı
function recode file $istek	yeniden kodlama isteği türü
function bool recode file	işlemi başaramazsa false aksi takdirde true döner
function bool recode file string $istek resource $girdi resource $çıktı	dosyadan dosyaya karakter kodlaması d&ouml;n&uuml;ş&uuml;m&uuml; yapar
function register shutdown function $işlev	tanımlanacak kapatma işlevinin ismi
function register shutdown function $değiştirge	register_shutdown_function() işlevi üzerinden kapatma işlevine ek değiştirgeler aktarılabilmektedir
function void register shutdown function callback $işlev mixed $değiştirge	betiğin işi bittiğinde &ccedil;alıştırılacak işlevi tanımlar
function rename $context	bilginize : bağlamsal destek php 5
function rename $yeni_isim	yeni isim
function rename $eski_isim	bilginize : eski isim
function bool rename	başarı durumunda true başarısızlık durumunda false döner
function bool rename string $eski_isim string $yeni_isim resource $bağlam	bir dosya veya dizinin ismini değiştirir
function bool restore error handler	bu işlev daima true döndürür
function bool restore error handler	bir &ouml;nceki hata eylemcisini devreye sokar
function bool restore exception handler	bu işlev daima true döndürür
function bool restore exception handler	bir &ouml;nceki istisna eylemcisini devreye sokar
function rewind $dt	dosya tanıtıcısı geçerli olmalı ve fopen() tarafından başarıyla açılmış bir dosyayı göstermelidir
function bool rewind	başarı durumunda true başarısızlık durumunda false döner
function bool rewind resource $dt	bir dosya tanıtıcısında konumu başa taşır
function rewinddir $dizin_tanıtıcıcı	opendir() işlevinden dönmüş bir dizin tanıtıcısı
function void rewinddir resource $dizin_tanıtıcısı	dizin tanıtıcısını dizin başlangıcına konumlar
function rmdir $dizinismi	dizinin yolu
function rmdir $context	bilginize : bağlamsal destek php 5
function bool rmdir	başarı durumunda true başarısızlık durumunda false döner
function bool rmdir string $dizinismi resource $bağlam	dizin siler
function rsort $seçenekler	bu değiştirge ile sıralamayı değiştirebilirsiniz
function rsort $dizi	sıralanacak dizi
function bool rsort	başarı durumunda true başarısızlık durumunda false döner
function bool rsort array $dizi int $seçenekler	bir diziyi tersine sıralar
function rtrim $dizge	budanacak dizge
function rtrim $karakterler	seçimlik olarak karakterler değiştirgesi kullanılarak budanacak karakterler belirlenebilir
function string rtrim	budanmış dizge
function string rtrim string $dizge string $karakterler	dizgenin sonundaki boşlukları veya diğer karakterleri budar
function scandir $dizin	içeriği taranacak dizin
function scandir $sıralama_türü	abecesel olarak küçükten büyüğe sıralama öntanımlıdır
function scandir $bağlam	bağlam değiştirgesinin açıklaması için akımlar bölümüne bakınız
function array scandir	başarılı olduğunda dosya ve dizin isimlerini içeren bir dizi ile aksi takdirde false değeriyle döner
function array scandir string $dizin int $sıralama_türü resource $bağlam	belirtilen dizindeki alt dizinleri ve dosyaları listeler
function serialize $değer	dizgeleştirilecek değer
function string serialize	belirtilen değerin herhangi bir yerde saklanabilecek akımlar üzerinden aktarılabilen bir gösterimini döndürür
function string serialize mixed $değer	bir değerin saklanabilir bir g&ouml;sterimini &uuml;retir
function session cache limiter $sınırlayıcı	belirtildiği takdirde geçerli önbellek sınırlayıcı ismi yeni değerle değiştirilir
function string session cache limiter	geçerli önbellek sınırlayıcısının ismini döndürür
function string session cache limiter string $sınırlayıcı	ge&ccedil;erli &ouml;nbellek sınırlayıcısını d&ouml;nd&uuml;r&uuml;r ve / veya tanımlar
function session decode $veri	saklanmak üzere dizge olarak kodlanmış veri
function bool session decode	başarı durumunda true başarısızlık durumunda false döner
function bool session decode string $veri	oturum verisini bir dizgeden elde eder
function string session encode	geçerli oturumun içeriğini kodlanmış bir dizge olarak döndürür
function string session encode	ge&ccedil;erli oturum verisini bir dizge olarak kodlar
function array session get cookie params	geçerli oturum çerezi bilgisini içeren bir dizi döndürür
function array session get cookie params	oturum &ccedil;erezi değiştirgelerini d&ouml;nd&uuml;r&uuml;r
function session id $id	id belirtilmişse geçerli oturum kimliğinin yerini alır
function string session id	session_id() işlevi geçerli oturumun oturum kimliğini veya geçerli bir oturum yoksa boş bir dizge döndürür
function string session id string $id	ge&ccedil;erli oturum kimliğini d&ouml;nd&uuml;r&uuml;r ve / veya tanımlar
function session is registered $isim	değişkenin ismi
function bool session is registered	geçerli oturumda isim adında kayıtlı bir değişken varsa true yoksa false döner
function bool session is registered string $isim	bir k&uuml;resel değişkenin oturumda kayıtlı olup olmadığına bakar
function session register $isim	tek bir değişkenin ismini içeren bir dizge veya değişken isimlerinden ve diğer dizilerden oluşan bir dizi
function bool session register	başarı durumunda true başarısızlık durumunda false döner
function bool session register mixed $isim	ge&ccedil;erli oturuma bir veya daha fazla k&uuml;resel değişkeni kaydeder
function session set cookie params $lifetime	oturum çerezinin ömrünü saniye cinsinden tanımlar
function session set cookie params $httponly	true ise php oturum çerezini sadece http protokolü üzerinden göndermeye çalışır
function session set cookie params $domain	www
function session set cookie params $path	çerezin çalışacağı alandaki dosya yolunu tanımlar
function session set cookie params $secure	true olduğu takdirde çerez sadece güvenli bağlantılar üzerinden gönderilir
function void session set cookie params int $lifetime string $path string $domain bool $secure bool $httponly	oturum &ccedil;erezi değiştirgelerini tanımlar
function bool session start	oturum başarıyla başlatılabilmişse true aksi takdirde false döner
function bool session start	oturum verisini ilklendirir
function void session write close	oturum verisini yazıp oturumu kapatır
function set error handler $hata_bağlamı	hatanın oluştuğu noktada etkin simge tablosuna işaret eden bir diziyi kabul eden belirtilmesi isteğe bağlı beşinci değiştirge
function set error handler $ileti	hata iletisini içeren bir dizge
function set error handler $hata_eylemci	kullanıcının tanımlayacağı bu işlev iki değiştirge kabul etmelidir: hata kodu ve hatayı açıklayan bir dizge
function set error handler $hatano	oluşan hatanın seviyesini içeren bir tamsayı
function set error handler $hata_satırı	hatanın oluştuğu deyimin satır numarasını bir tamsayı olarak içeren belirtilmesi isteğe bağlı dördüncü değiştirge
function set error handler $hata_türü	hata_eylemci işlevini tetikleyecek hatalar sabitleriyle error_reporting yönergesine gösterilecek hataların değerleri belirtilirken yapıldığı gibi bir bit maskesi olarak belirtilebilir
function set error handler $betik_adı	hatanın oluştuğu betik dosyasının ismini bir dizge olarak içeren belirtilmesi isteğe bağlı üçüncü değiştirge
function mixed set error handler	varsa evvelce tanımlanmış hata eylemcisinin ismini bir dizge olarak döndürür
function mixed set error handler callback $hata_eylemci int $hata_türü	kullanıcı tanımlı bir hata eylemcisi bildirir
function set exception handler $istisna_eylemcisi	yakalanmamış bir istisna olduğunda çağrılacak işlevin ismi
function callback set exception handler	hata durumunda null aksi takdirde evvelce tanımlanmış istisna eylemcisinin ismini döndürür
function callback set exception handler callback $istisna_eylemcisi	kullanıcı tanımlı bir istisna eylemcisi bildirir
function set include path $yeni_değer	include_path yönergesini yeni değeri
function string set include path	başarısızlık durumunda false aksi takdirde include_path yönergesinin eski değeriyle döner
function string set include path string $yeni_değer	include_path y&ouml;nergesinin &ccedil;alışma anı değerini belirler
function set magic quotes runtime $yeni_değer	off için false
function bool set magic quotes runtime	başarı durumunda true başarısızlık durumunda false döner
function bool set magic quotes runtime bool $yeni_değer	magic_quotes_runtime y&ouml;nergesinin &ccedil;alışma anı değerini belirler
function set time limit $saniye	betiğin çalıştırılabileceği azami süre saniye cinsinden
function void set time limit int $saniye	azami &ccedil;alıştırma s&uuml;resini sınırlar
function setcookie $zaman_aşımı	çerezin zaman aşımına uğrama süresi
function setcookie $sadece_http	true olduğu takdirde çerez sadece http protokolü üzerinden erişilebilir olacaktır
function setcookie $güvenli	çerezin istemciye güvenli bir https bağlantısı üzerinden mi aktarılması gerektiğini belirtmek için kullanılır
function setcookie $yol	çerezin üzerinde etkin olacağı sunucudaki yol
function setcookie $alan	çerezin kullanılabileceği alan
function setcookie $değer	çerezin değeri
function setcookie $isim	çerezin ismi
function bool setcookie	bu işlev çağrılmadan önce yapılmış çıktı varsa setcookie() başarısız olup false döndürür
function bool setcookie string $isim string $değer int $zaman_aşımı string $yol string $alan bool $güvenli bool $sadece_http	bir &ccedil;erez g&ouml;nderir
function bool setrawcookie	başarı durumunda true başarısızlık durumunda false döner
function bool setrawcookie string $isim string $değer int $zaman_aşımı string $yol string $alan bool $güvenli bool $sadece_http	bir &ccedil;erezi değerini url kodlamasından ge&ccedil;irmeden g&ouml;nderir
function settype $değişken	türü belirlenecek değişken
function settype $tür	olası tür değerleri: boolean veya php 4
function bool settype	başarı durumunda true başarısızlık durumunda false döner
function bool settype mixed $değişken string $tür	bir değişkenin t&uuml;r&uuml;n&uuml; belirler
function shell exec $komut	çalıştırılacak komut
function string shell exec	çalıştırılan komutun çıktısı bir dizge olarak döner
function string shell exec string $komut	komutu kabukta &ccedil;alıştırır ve &ccedil;ıktısının tamamını bir dizge olarak d&ouml;nd&uuml;r&uuml;r
function shuffle $dizi	karılacak dizi
function bool shuffle	başarı durumunda true başarısızlık durumunda false döner
function bool shuffle array $dizi	bir diziyi karar
function simplexml import dom $sınıfAdı	isteğe bağlı bu değiştirge ile bir nesne döndürmek üzere simplexmlelement sınıfından türetilmiş bir sınıf ismi belirtilebilir
function simplexml import dom $düğüm	bir dom eleman düğümü
function SimpleXMLElement simplexml import dom	başarısız olursa false yoksa bir simplexmlelement nesnesi döndürür
function SimpleXMLElement simplexml import dom DOMNode $düğüm string $sınıfAdı	bir dom d&uuml;ğ&uuml;m&uuml; alıp bir simplexmlelement nesnesi d&ouml;nd&uuml;r&uuml;r
function simplexml load file $seçenekler	php 5
function simplexml load file $sınıfAdı	isteğe bağlı bu değiştirge ile bir nesne döndürmek üzere simplexmlelement sınıfından türetilmiş bir sınıf ismi belirtilebilir
function simplexml load file $dosya	xml dosyanın yolu
function object simplexml load file	xml belgedeki veriyi içeren simplexmlelement sınıfından türetilmiş bir nesne döndürür
function object simplexml load file string $dosya string $sınıfAdı int $seçenekler string $isimalanı bool $önek_var	bir xml dosyasının i&ccedil;eriğini bir nesne haline getirir
function socket bind $port(seçimlik)	bu değiştirge sadece ve zorunlu olarak bir af_inet veya af_inet6 sokete bağlanırken gerekir ve bağlantının yapılacağı uzak konak üzerinde bir port belirtir
function socket bind $address	soket af_inet türündeyse noktalı dördül gösterimle 127
function socket bind $soket	socket_create() ile oluşturulmuş geçerli bir soket özkaynağı
function bool socket bind	başarı durumunda true başarısızlık durumunda false döner
function bool socket bind resource $soket string $adres int $port	soketi bir isimle ilişkilendirir
function socket clear error $soket	socket_create() ile oluşturulmuş geçerli bir soket özkaynağı
function void socket clear error resource $soket	soket &uuml;zerindeki hatayı veya son hata kodunu siler
function socket close $soket	socket_create() veya socket_accept() ile oluşturulmuş geçerli bir soket özkaynağı
function void socket close resource $socket	bir soket &ouml;zkaynağını serbest bırakır
function socket connect $port	bu değiştirge sadece ve zorunlu olarak bir af_inet veya af_inet6 sokete bağlanırken gerekir ve bağlantının yapılacağı uzak konak üzerinde bir port belirtir
function socket connect $adres	soket af_inet türündeyse noktalı dördül gösterimle 127
function socket connect $soket	socket_create() ile oluşturulmuş geçerli bir soket özkaynağı
function bool socket connect	başarı durumunda true başarısızlık durumunda false döner
function bool socket connect resource $soket string $adres int $port	soket &uuml;zerinde bir bağlantıyı ilklendirir
function socket create listen $port	tüm arabirimlerde dinlenecek port
function socket create listen $backlog	işlem için kuyruğa alınacak azami gelen bağlantı sayısı
function resource socket create listen	hata durumunda false yoksa yeni bir soket özkaynağı döner
function resource socket create listen int $port int $kuyruk	bağlantı kabul etmek i&ccedil;in port &uuml;zerinde bir soket a&ccedil;ar
function socket get option $soket	socket_create() veya socket_accept() ile oluşturulmuş geçerli bir soket özkaynağı
function socket get option $seçenek	olası soket seçenekleri seçenek açıklama türü so_debug hata ayıklama bilgilerinin kaydelip kaydedilmeyeceğini belirtir
function socket get option $seviye	seçeneğin geçerli olacağı protokol seviyesi
function mixed socket get option	hata durumunda false yoksa belirtilen seçeneğin değerini döndürür
function mixed socket get option resource $soket int $seviye int $seçenek	soketle ilgili bir se&ccedil;eneğin değerini d&ouml;nd&uuml;r&uuml;r
function socket getpeername $soket	socket_create() veya socket_accept() ile oluşturulmuş geçerli bir soket özkaynağı
function socket getpeername $port	belirtilmişse ilgili port değeri bu değiştirgeye konur
function socket getpeername $adres	belirtilen soket af_inet veya af_inet6 türündeyse socket_getsockname() işlevi bu değiştirgede bir ip adresi 127
function bool socket getpeername	başarı durumunda true başarısızlık durumunda false döner
function bool socket getpeername resource $soket string $adres int $port	belirtilen soketin yerel tarafını sorgulayıp soket t&uuml;r&uuml;ne g&ouml;re ya bir konak / port &ccedil;ifti ya da bir unix dosya yolu d&ouml;nd&uuml;r&uuml;r
function socket last error $soket	socket_create() ile oluşturulmuş geçerli bir soket özkaynağı
function int socket last error	bir soket hata kodu döner
function int socket last error resource $soket	soket &uuml;zerindeki son hatanın kodunu d&ouml;nd&uuml;r&uuml;r
function socket read $soket	socket_create() veya socket_accept() ile oluşturulmuş geçerli bir soket özkaynağı
function socket read $tür	belirtilmesi isteğe bağlı olup şu sabitlerden biri olabilir: php_binary_read öntanımlı) - sistemin recv() işlevi kullanılır
function socket read $uzunluk	okunacak azami bayt sayısını belirler
function string socket read	başarı durumunda veriyi bir dizge olarak döndürür aksi takdirde false ile döner
function string socket read resource $soket int $uzunluk int $tür	bir soketten belli sayıda bayta kadar okuma yapar
function socket recv $tampon	verinin alınacağı değişken burada belirtilir
function socket recv $seçenekler	aşağıdaki seçeneklerin bitsel veyalanmış bir birleşimi
function socket recv $socket	socket_create() ile oluşturulmuş geçerli bir soket özkaynağı
function socket recv $uzunluk	okunacak azami bayt sayısını belirler
function int socket recv	bir hata oluşmuşsa false yoksa alınan bayt sayısını döndürür
function int socket recv resource $soket string $tampon int $uzunluk int $seçenekler	bağlı bir soketten veri alır
function socket select $oku	karakterlerin okunmaya hazır hale gelmesine kadar başka bir deyişle okumanın engellenmediği görülene kadar dinlenecek soket özkaynakları dizisi
function socket select $tv_sec	saniye cinsinden zaman aşımı
function socket select $yaz	yazmanın engellenmediği görülene kadar soket yazmaya hazır hale gelene kadar dinlenecek soket özkaynakları dizisi
function socket select $tv_usec	mikrosaniye cinsinden zaman aşımı
function socket select $diğer	bu dizideki soketler olağan dışı durumlara göre denetlenir
function int socket select	başarı durumunda socket_select() değişiklik yapılan soketlerin sayısını döndürür
function int socket select array $oku array $yaz array $diğer int $tv_sec int $tv_usec	belirtilen soket dizileri &uuml;zerinde belirtilen zaman aşımı ile select() sistem &ccedil;ağrısını &ccedil;alıştırır
function socket send $soket	socket_create() veya socket_accept() ile oluşturulmuş geçerli bir soket özkaynağı
function socket send $uzunluk	uzak konağa gönderilecek bayt sayısı
function socket send $tampon	uzak konağa gönderilecek veriyi içeren tampon
function socket send $seçenekler	aşağıdaki seçeneklerin bitsel veyalanmış bir birleşimi
function int socket send	bir hata oluşursa false yoksa gönderilen bayt sayısı döner
function int socket send resource $soket string $tampon int $uzunluk int $seçenekler	bağlı bir sokete veri g&ouml;nderir
function socket sendto $soket	socket_create() ile oluşturulmuş geçerli bir soket özkaynağı
function socket sendto $seçenekler	aşağıdaki seçeneklerin bitsel veyalanmış bir birleşimi
function socket sendto $tampon	veri bu tampondan gönderilir
function socket sendto $port	verinin gönderileceği uzak portun numarası
function socket sendto $uzunluk	gönderilecek bayt sayısı
function socket sendto $adres	uzak konağın ip adresi
function int socket sendto	bir hata oluşmuşsa false yoksa gönderilen bayt sayısı döner
function int socket sendto resource $soket string $tampon int $uzunluk int $seçenekler string $adres int $port	bağlı olsun olmasın bir sokete ileti g&ouml;nderir
function socket set nonblock $soket	socket_create() veya socket_accept() ile oluşturulmuş geçerli bir soket özkaynağı
function bool socket set nonblock	başarı durumunda true başarısızlık durumunda false döner
function bool socket set nonblock resource $soket	belirtilen dosya tanıtıcısı i&ccedil;in beklememe kipini etkinleştirir
function socket shutdown $kip	aşağıdaki değerlerden biri olabilir: olası kip değerleri 0 soket okumaya kapatılır
function socket shutdown $soket	socket_create() ile oluşturulmuş geçerli bir soket özkaynağı
function bool socket shutdown	başarı durumunda true başarısızlık durumunda false döner
function bool socket shutdown resource $scket int $kip	bir soketi kapatır
function socket strerror $hatanum	socket_last_error() işlevinden dönen bir hata numarası
function string socket strerror	hatanum ile ilgili hata iletisini döndürür
function string socket strerror int $hatanum	bir soket hatasıyla ilgili a&ccedil;ıklamayı d&ouml;nd&uuml;r&uuml;r
function sort $dizi	sıralanacak dizi
function sort $seçenekler	isteğe bağlı seçenekler değiştirgesinde aşağıdaki değerler kullanılarak sıralama kuralı değiştirilebilir: sıralama türü seçenekleri: sort_regular - elemanlar normal olarak sıralanır öntanımlı) sort_numeric - elemanlar sayısal olarak sıralanır sort_string - elemanlar dizgesel olarak sıralanır sort_locale_string - yerele göre dizgesel sıralama yapılır
function bool sort	başarı durumunda true başarısızlık durumunda false döner
function bool sort array $dizi int $seçenekler	bir diziyi sıralar
function spliti $dizge	girdi dizgesi
function spliti $şablon	harf büyüklüğüne duyarsız düzenli ifade
function spliti $sınır	bu değiştirge belirtilmişse son elemanında dizge nin kalanını içermek üzere en fazla sınır sayıda eleman içeren bir dizi dönecektir
function array spliti	her elemanında dizge dizgesinin sınırları harf büyüklüğüne duyarsız şablon düzenli ifadesine göre belirlenen alt dizgelerini içeren bir dizi döner
function array spliti string $şablon string $dizge int $sınır	belirtilen dizgeyi harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak d&uuml;zenli ifadeye g&ouml;re dizi elemanlarına b&ouml;ler
function sprintf $biçem	biçem dizgesi sıfır veya daha fazla sayıda yönergeden oluşur: sıradan karakterler % hariç) doğrudan çıktıya kopyalanır
function string sprintf	biçem dizgesine göre biçemlendirilerek üretilen bir dizge döner
function string sprintf string $biçem mixed $değiştirgeler	bi&ccedil;emli bir dizge d&ouml;nd&uuml;r&uuml;r
function sql regcase $dizge	girdi dizgesi
function string sql regcase	dizge ile harf büyüklüğüne duyarsız olarak eşleşecek bir düzenli ifade döndürür
function string sql regcase string $dizge	harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız eşleşme i&ccedil;in d&uuml;zenli ifade oluşturur
function sqlite close $db	sqlite veritabanı özkaynağı
function void sqlite close resource $db	a&ccedil;ık bir sqlite veritabanını kapatır
function sqlite has more $sonuç	sqlite sonuç özkaynağı
function bool sqlite has more	başka satır varsa true yoksa false döner
function bool sqlite has more resource $sonuç	sonu&ccedil; k&uuml;mesinde başka satır kaldı mı diye bakar
function string sqlite libencoding	kütüphanenin karakter kodlamasını bir dizge olarak döndürür
function string sqlite libencoding	ilintili sqlite k&uuml;t&uuml;phanesinin karakter kodlamasını d&ouml;nd&uuml;r&uuml;r
function string sqlite libversion	sürüm numarasını bir dizge olarak döndürür
function string sqlite libversion	ilintili sqlite k&uuml;t&uuml;phanesinin s&uuml;r&uuml;m numarasını d&ouml;nd&uuml;r&uuml;r
function sqlite udf decode binary $veri	sqlite_udf_encode_binary() veya sqlite_escape_string() tarafından kodlanmış ikil veri
function string sqlite udf decode binary	kodu çözülmüş dizge
function string sqlite udf decode binary string $veri	kullanıcı tanımlı bir işleve değiştirge olarak aktarılacak ikil veriyi &ccedil;&ouml;z&uuml;mler
function sscanf	çözümlenen değerleri içermek üzere aktarımı isteğe bağlı gönderimli değişkenler
function sscanf $dizge	yorumlanacak dizge
function sscanf $biçem	girdi dizgesinin yorumlanmasında kullanılacak dizge
function mixed sscanf	işleve sadece iki değiştirge aktarılmışsa çözümlenen değerler bir dizi içinde döndürülür
function mixed sscanf string $dizge string $biçem	girdi dizgesini belli bir bi&ccedil;eme g&ouml;re yorumlar
function ssh2 auth none $kullanıcı	uzak kullanıcı adı
function ssh2 auth none $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function mixed ssh2 auth none	sunucu bir kimlik doğrulama yöntemi olarak none kabul ediyorsa true etmiyorsa kabul edilen kimlik doğrulama yöntemlerini içeren bir dizi döner
function mixed ssh2 auth none resource $oturum string $kullanıcı	none kimlik doğrulaması yapar
function ssh2 auth password $kullanıcı	uzak konaktaki kullanıcı ismi
function ssh2 auth password $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function ssh2 auth password $parola	kullanıcı için parola
function bool ssh2 auth password	başarı durumunda true başarısızlık durumunda false döner
function bool ssh2 auth password resource $oturum string $kullanıcı string $parola	parola kullanarak kimlik doğrulaması yapar
function ssh2 auth pubkey file $anh_parolası	gizli_anh_dosyası için bir parola kullanılmışsa bu parola bu değiştirgede belirtilmelidir
function ssh2 auth pubkey file $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function bool ssh2 auth pubkey file	başarı durumunda true başarısızlık durumunda false döner
function bool ssh2 auth pubkey file resource $oturum string $kullanıcı string $genel_anh_dosyası string $gizli_anh_dosyası string $anh_parolası	bir genel anahtar kullanarak kimlik doğrulaması yapar
function ssh2 exec $yükseklik	sanal uçbirim yüksekliği
function ssh2 exec $width_height_type	ssh2_term_unit_chars veya ssh2_term_unit_pixels olabilir
function ssh2 exec $genişlik	sanal uçbirim genişliği
function ssh2 exec $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function ssh2 exec $ortam	hedef ortamda atanacak ortam değişkenlerini isim-değer çiftleri olarak içeren bir ilişkisel dizi
function resource ssh2 exec	başarısızlık durumunda false yoksa bir akım özkaynağı döndürür
function resource ssh2 exec resource $oturum string $komut string $pty array $ortam int $genişlik int $yükseklik int $enboy_türü	uzak sunucu &uuml;zerinde bir komut &ccedil;alıştırır
function ssh2 fetch stream $dt	bir ssh2 kanal akımı
function resource ssh2 fetch stream	istenen akım özkaynağı ile döner
function resource ssh2 fetch stream resource $kanal int $dt	başka bir veri akımı d&ouml;nd&uuml;r&uuml;r
function ssh2 fingerprint $seçenekler	ssh2_fingerprint_md5 veya ssh2_fingerprint_sha1 ile ssh2_fingerprint_hex veya ssh2_fingerprint_raw bitsel olarak veyalanabilir
function ssh2 fingerprint $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function string ssh2 fingerprint	konak anahtarı özetini bir dizge olarak döndürür
function string ssh2 fingerprint resource $oturum int $seçenekler	uzak sunucunu parmakizini d&ouml;nd&uuml;r&uuml;r
function ssh2 methods negotiated $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function array ssh2 methods negotiated resource $oturum	m&uuml;zakere y&ouml;ntemlerini listeler
function ssh2 publickey init $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function resource ssh2 publickey init	başarısızlık durumunda false aksi takdirde diğer ssh2_publickey_*() işlevleriyle kullanmak üzere bir ssh2 genel anahtar altsistemi özkaynağı döner
function resource ssh2 publickey init resource $oturum	genel anahtar alt sistemini ilklendirir
function ssh2 publickey list $özkaynak	ssh2_publickey_init() tarafından döndürülen bir genel anahtar alt sistemi özkaynağı
function array ssh2 publickey list	herbiri name blob ve attrs elemanlarından oluşan bir ilişkisel dizi içeren elemanlardan oluşan sayısal indisli bir dizi döndürür
function array ssh2 publickey list resource $özkaynak	yetkili genel anahtarları listeler
function ssh2 scp recv $uzak_dosya	uzak dosyanın yolu
function ssh2 scp recv $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function ssh2 scp recv $yerel_dosya	yerel dosyanın yolu
function bool ssh2 scp recv	başarı durumunda true başarısızlık durumunda false döner
function bool ssh2 scp recv resource $oturum string $uzak_dosya string $yerel_dosya	scp &uuml;zerinden bir dosya alır
function ssh2 scp send $yerel_dosya	yerel dosyanın yolu
function ssh2 scp send $kip	dosya oluşturulurken atanacak erişim izinleri
function ssh2 scp send $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function ssh2 scp send $uzak_dosya	uzak dosyanın yolu
function bool ssh2 scp send	başarı durumunda true başarısızlık durumunda false döner
function bool ssh2 scp send resource $oturum string $yerel_dosya string $uzak_dosya int $kip	scp &uuml;zerinden bir dosya g&ouml;nderir
function ssh2 sftp lstat $sftp	ssh2_sftp() tarafından açılmış bir ssh2 sftp özkaynağı
function ssh2 sftp lstat $bağ	uzak sembolik bağın yolu
function array ssh2 sftp lstat	dönen değerlerle ilgili ayrıntılı bilgi edinmek için stat() işlevinin açıklamasına bakınız
function array ssh2 sftp lstat resource $sftp string $bağ	uzak sunucudaki bir sembolik bağın durum bilgisini d&ouml;nd&uuml;r&uuml;r
function ssh2 sftp mkdir $sftp	ssh2_sftp() tarafından açılmış bir ssh2 sftp özkaynağı
function ssh2 sftp mkdir $dizin	oluşturulacak dizinin yolu
function ssh2 sftp mkdir $ardışık	true belirtilirse özdevinimli olarak dizin için gerekli üst dizinler de oluşturulur
function ssh2 sftp mkdir $kip	yeni dizinin erişim izinleri
function bool ssh2 sftp mkdir	başarı durumunda true başarısızlık durumunda false döner
function bool ssh2 sftp mkdir resource $sftp string $dizin int $kip bool $ardışık	uzak konakta bir dizin oluşturur
function ssh2 sftp readlink $sftp	ssh2_sftp() tarafından açılmış bir ssh2 sftp özkaynağı
function ssh2 sftp readlink $bağ	sembolik bağın yolu
function string ssh2 sftp readlink	sembolik bağ ın hedefini döndürür
function string ssh2 sftp readlink resource $sftp string $bağ	bir sembolik bağın hedefini d&ouml;nd&uuml;r&uuml;r
function ssh2 sftp realpath $sftp	ssh2_sftp() tarafından açılmış bir ssh2 sftp özkaynağı
function string ssh2 sftp realpath	asıl yolu bir dizge olarak döndürür
function string ssh2 sftp realpath resource $sftp string $yol	belirtilen dosya yolu dizgesinden ger&ccedil;ek yolu elde eder
function ssh2 sftp rename $sftp	ssh2_sftp() tarafından açılmış bir ssh2 sftp özkaynağı
function ssh2 sftp rename $yenisi	dosyanın yeni ismi
function ssh2 sftp rename $eskisi	ismi değiştirilecek dosyanın yolu
function bool ssh2 sftp rename	başarı durumunda true başarısızlık durumunda false döner
function bool ssh2 sftp rename resource $sftp string $eskisi string $yenisi	bir uzak dosyanın ismini değiştirir
function ssh2 sftp stat $sftp	ssh2_sftp() tarafından açılmış bir ssh2 sftp özkaynağı
function array ssh2 sftp stat	dönen değerlerle ilgili ayrıntılı bilgi edinmek için stat() işlevinin açıklamasına bakınız
function array ssh2 sftp stat resource $sftp string $dosya	uzak dosya sistemindeki bir dosyanın durum bilgisini d&ouml;nd&uuml;r&uuml;r
function ssh2 sftp unlink $sftp	ssh2_sftp() tarafından açılmış bir ssh2 sftp özkaynağı
function ssh2 sftp unlink $dosya	silinecek dosyanın yolu
function bool ssh2 sftp unlink	başarı durumunda true başarısızlık durumunda false döner
function bool ssh2 sftp unlink resource $sftp string $dosya	bir dosyayı siler
function ssh2 shell $enboy_türü	ssh2_term_unit_chars veya ssh2_term_unit_pixels olabilir
function ssh2 shell $env	hedef ortamında tanımlanacak ortam değişkenlerini isim-değer çiftleri olarak içeren bir ilişkisel dizi
function ssh2 shell $genişlik	sanal uçbirim genişliği
function ssh2 shell $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function ssh2 shell $yükseklik	sanal uçbirim yüksekliği
function ssh2 shell $uçbirim_türü	hedef sistemin / etc / termcap dosyasındaki girdilerden biri olmalıdır
function resource ssh2 shell resource $oturum string $uçbirim_türü array $ortam int $genişlik int $yükseklik int $enboy_türü	bir etkileşimli kabuk isteği yapar
function ssh2 tunnel $oturum	ssh2_connect() ile sağlanan bir ssh bağlantı tanıtıcısı
function resource ssh2 tunnel resource $oturum string $konak int $port	uzak bir sunucuya doğru bir t&uuml;nel a&ccedil;ar
function stat $dosyaismi	dosyanın yolu
function array stat	stat() and fstat() sonuç biçemi indis anahtar php 4
function array stat string $dosyaismi	bir dosya hakkında bilgi d&ouml;nd&uuml;r&uuml;r
function str getcsv $sarmalayıcı	alanı sarmalayan karakterler tek bir karakter
function str getcsv $girdi	ayrıştırılacak dizge
function str getcsv $öncelem	önceleme karakteri tek bir karakter
function str getcsv $ayraç	alanlar arasında kullanılan ayraç tek bir karakter
function array str getcsv	okunan alanları içeren bir dizi döner
function array str getcsv string $girdi string $ayraç string $sarmalayıcı string $öncelem	bir csv dizgesinin girdilerini bir dizinin elemanlarına paylaştırır
function str ireplace $sayı	eğer belirtilirse yer değiştirilen dizgelerin sayısı bu değiştirgede döndürülür
function str ireplace $eski	bilginize : eski dizisindeki her yer değiştirme önceki yer değiştirme sonucunun üzerine uygulanır
function str ireplace $konu	eğer konu bir dizi ise arama ve değiştirme her eleman için ayrı ayrı yapılır ve dönen değer de bir dizi olur
function mixed str ireplace	yer değiştirmeler yapılmış dizge veya diziyi döndürür
function mixed str ireplace mixed $eski mixed $yeni mixed $konu int $sayı	bir alt dizgenin b&uuml;t&uuml;n &ouml;rneklerini yenisiyle değiştirirken harf b&uuml;y&uuml;kl&uuml;klerini dikkate almaz
function str repeat $çarpan	dizgenin yinelenme sayısı
function str repeat $girdi	yinelenecek dizge
function string str repeat	yinelenmiş dizge döner
function string str repeat string $girdi int $çarpan	bir dizgeyi yineler
function str replace $sayı	bilginize : eğer belirtilirse yer değiştirilen dizgelerin sayısı bu değiştirgede döndürülür
function str replace $yeni	yeni değer; çok sayıda değer belirtmek için dizi kullanılabilir
function str replace $eski	aranacak değer; çok sayıda değer belirtmek için dizi kullanılabilir
function str replace $konu	bir dizge veya dizi belirtilebilir
function mixed str replace	yer değiştirmeler yapılmış dizge veya diziyi döndürür
function mixed str replace mixed $eski mixed $yeni mixed $konu int $sayı	bir alt dizgenin b&uuml;t&uuml;n &ouml;rneklerini yenisiyle değiştirir
function str rot13 $dizge	girdi dizgesi
function string str rot13	belirtilen dizgenin rot13 sürümü döner
function string str rot13 string $dizge	bir dizgeye rot13 d&ouml;n&uuml;ş&uuml;m&uuml; uygular
function str split $dizge	girdi dizgesi
function str split $parça_uzunluğu	azami parça uzunluğu
function array str split	seçimlik parça_uzunluğu değiştirgesi belirtilmişse dönen dizi parça_uzunluğu karakterlik parçalar içerir aksi takdirde tek karakterlik parçalar içerir
function array str split string $dizge int $parça_uzunluğu	bir dizgeyi bir diziye d&ouml;n&uuml;şt&uuml;r&uuml;r
function strcasecmp $d1	ilk dizge
function strcasecmp $d2	ikinci dizge
function int strcasecmp	d1 dizgesi d2 dizgesinden küçükse sıfırdan küçük bir değer; d1 dizgesi d2 dizgesinden büyükse sıfırdan büyük bir değer; d1 dizgesi ile d2 dizgesi aynıysa sıfır döndürür
function int strcasecmp string $d1 string $d2	ikil olarak g&uuml;venilir ve harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız dizge karşılaştırması yapar
function strcoll $d1	ilk dizge
function strcoll $d2	ikinci dizge
function int strcoll	d1 dizgesi d2 dizgesinden küçükse sıfırdan küçük bir değer; d1 dizgesi d2 dizgesinden büyükse sıfırdan büyük bir değer; d1 dizgesi ile d2 dizgesi aynıysa sıfır döndürür
function int strcoll string $d1 string $d2	yerele g&ouml;re dizge karşılaştırma
function strcspn $dizge	maskenin eşleşmeyeceği dizge
function strcspn $maske	dizge ile eşleşmeyecek maske
function strcspn $uzunluk	eşleşmemenin aranacağı alt dizge uzunluğu
function strcspn $başlangıç	eşleştirmenin başlatılacağı konum
function int strcspn	parça uzunluğunu bir tamsayı olarak döndürür
function int strcspn string $dizge string $maske int $başlangıç int $uzunluk	maske ile eşleşmeyen ilk par&ccedil;anın uzunluğunu bulur
function stream context create $seçenekler	seçenekler dizisi üyeleri $seçenekler[sarmalayıcı][seçenek] = $değer olan bir ilişkisel dizi olmalıdır
function stream context create $değiştirgeler	değiştirgeler dizisi üyeleri $değiştirgeler[değiştirge_adı] = değer; olan bir ilişkisel dizi olmalıdır
function resource stream context create	akım bağlamı özkaynağı
function resource stream context create array $seçenekler array $değiştirgeler	bir akım bağlamı oluşturur
function stream context get params $akım_veya_bağlam	bir akım veya bağlam özkaynağı
function array stream context get params	tüm bağlam seçeneklerini ve değiştirgelerini içeren bir ilişkisel dizi döner
function array stream context get params resource $akım_veya_bağlam	bir bağlamın değiştirgelerini d&ouml;nd&uuml;r&uuml;r
function stream copy to stream $başlangıç	kopyalanacak verinin başlangıç konumu
function stream copy to stream $kaynak	kaynak akım
function stream copy to stream $uzunluk	kopyalanacak azami bayt sayısı
function stream copy to stream $hedef	hedef akım
function int stream copy to stream	kopyalanan toplam bayt sayısını döndürür
function int stream copy to stream resource $kaynak resource $hedef int $uzunluk int $başlangıç	veriyi bir akımdan diğerine kopyalar
function stream filter prepend $akım	hedef akım
function stream filter prepend $oku_yaz	stream_filter_prepend() işlevi öntanımlı olarak dosya okumak için r veya r+ kipi açılmışsa süzgeci okuma süzgeci zinciri ne ekler
function stream filter prepend $süzgeç	eklenecek süzgecin ismi
function stream filter prepend $değiştirgeler	süzgeç belirtilen değiştirgeler ile listenin başlangıcına eklenir ve akım işlemlerinde ilk çağrılan süzgeç olur
function resource stream filter prepend	stream_filter_remove() çağrısına aktarılmak üzere bir özkaynak döndürür
function resource stream filter prepend resource $akım string $süzgeç int $oku_yaz mixed $değiştirgeler	s&uuml;zge&ccedil; zincirinin başına bir s&uuml;zge&ccedil; ekler
function stream filter remove $süzgeç	kaldırılacak akım süzgeci
function bool stream filter remove	başarı durumunda true başarısızlık durumunda false döner
function bool stream filter remove resource $süzgeç	akımdan bir s&uuml;zgeci kaldırır
function stream get contents $akım	fopen() gibi bir işlevden döndürülmüş bir akım özkaynağı
function stream get contents $uzunluk	okunacak azami bayt sayısı
function stream get contents $konum	okuma işlemine başlamadan önce gösterici buraya konumlanır
function string stream get contents	başarısızlık durumunda false aksi takdirde bir dizge döner
function string stream get contents resource $akım int $uzunluk int $konum	akımdan kalanı bir dizgeye okur
function stream get meta data $akım	fopen() fsockopen() veya pfsockopen() tarafından oluşturulmuş bir akım
function array stream get meta data	elde edilen dizi şu elemanları içerir:
function array stream get meta data resource $akım	akımdan başlıkları / meta verileri d&ouml;nd&uuml;r&uuml;r
function array stream get wrappers	kurulu sistemdeki kullanılabilir akımların listesini içeren indisli bir dizi döndürür
function array stream get wrappers	etkin akımların listesini d&ouml;nd&uuml;r&uuml;r
function stream is local $akım_veya_url	sınanacak akım özkaynağı veya url
function bool stream is local	başarı durumunda true başarısızlık durumunda false döner
function bool stream is local mixed $akım_veya_url	akım bir yerel akımsa true d&ouml;ner
function stream notification callback $azami_bayt_sayısı	uygulanabilirse aktarılacak baytların azami sayısı
function stream notification callback $bayt_sayısı	uygulanabilirse aktarılacak baytların sayısı
function stream notification callback $ileti_kodu	olay için kullanılabilecek açıklayıcı bir ileti kodu
function stream notification callback $ileti	olayı açıklayan bir ileti
function stream notification callback $önem	stream_notify_severity_* bildirim sabitlerinden biri
function stream notification callback $bildirim_kodu	stream_notify_* bildirim sabitlerinden biri
function void stream notification callback int $bildirim_kodu int $önem string $ileti int $ileti_kodu int $bayt_sayısı int $azami_bayt_sayısı	notification bağlam değiştirgesi i&ccedil;in bir geri &ccedil;ağırım işlevi
function stream set blocking $akım	dosya tanıtıcı
function stream set blocking $kip	0 belirtilirse engellenmeyen kipe 1 belirtilirse engellenen kipe geçilir
function bool stream set blocking	başarı durumunda true başarısızlık durumunda false döner
function bool stream set blocking resource $akım int $kip	akımın engelleme kipini ayarlar
function stream set timeout $akım	hedef akım
function stream set timeout $mikrosaniye	zaman aşımı süresinin son saniyesinden sonraki mikrosaniyelerin sayısı
function stream set timeout $saniye	zaman aşımı süresinin saniye sayısı
function bool stream set timeout	başarı durumunda true başarısızlık durumunda false döner
function bool stream set timeout resource $akım int $saniye int $mikrosaniye	akımın zaman aşımı s&uuml;resini ayarlar
function stream socket client $ileti	bağlantı başarısız olursa sistem seviyesindeki hatanın açıklaması bu değiştirgeye atanır
function stream socket client $bağlam	stream_context_create() ile oluşturulmuş geçerli bir bağlam özkaynağı
function stream socket client $hatanum	bağlantı başarısız olursa sistem seviyesindeki hatanın numarası bu değiştirgeye atanır
function stream socket client $süre	connect() sistem çağrısının zaman aşımına uğrayacağı saniye sayısı
function stream socket client $seçenekler	bağlantı seçeneklerinin birleşimi olarak bir bit maskesi
function stream socket client $uzak_soket	bağlanılacak soketin adresi
function resource stream socket client	başarısızlık durumunda false aksi takdirde fgets() fgetss() fwrite() fclose() ve feof() gibi diğer dosya işlevleri ile kullanılmak üzere bir akım özkaynağı döner
function resource stream socket client string $uzak_soket int $hatanum string $ileti float $süre int $seçenekler resource $bağlam	bir genel ağ veya unix alan soketi bağlantısı a&ccedil;ar
function stream socket recvfrom $uzunluk	soket tan alınacak bayt sayısı
function stream socket recvfrom $soket	uzak soket
function stream socket recvfrom $adres	belirtildiği takdirde uzak soketin adresi olarak ele alınır
function stream socket recvfrom $seçenekler	seçenekler şunların bir birleşimi olarak belirtilebilir: seçenekler için olası değerler stream_oob band dışı veri alınır
function string stream socket recvfrom	okunan veriyi dizge olarak döndürür
function string stream socket recvfrom resource $soket int $uzunluk int $seçenekler string $adres	bağlı olsun ya da olmasın bir soketten veri alır
function stream socket sendto $soket	verinini gönderileceği soket
function stream socket sendto $adres	bu değiştirgede bir adres belirtilmezse soket akımı oluşturulurken belirtilen adres kullanılır
function stream socket sendto $veri	gönderilecek veri
function stream socket sendto $seçenekler	seçenekler değeri aşağıdakilerin bir birleşimi olabilir: seçenekler değiştirgesi için olası değerler stream_oob band-dışı veri gönderir
function int stream socket sendto	sonuçlanan kod bir tamsayı olarak döner
function int stream socket sendto resource $soket string $veri int $seçenekler string $adres	bir sokete bağlı olsun ya da olmasın bir ileti g&ouml;nderir
function stream socket server $ileti	hatanum değiştirgesinin açıklamasına bakınız
function stream socket server $hatanum	seçimlik hatanum ve ileti değiştirgeleri belirtilmişse bunlara socket() bind() ve listen() sistem çağrılarında oluşan sistem seviyesindeki hatanın bilgisi atanır
function stream socket server $seçenekler	soket oluşturma seçeneklerinden oluşan bir bit maskesi
function stream socket server $bağlam	stream_context_create() ile oluşturulmuş geçerli bir bağlam özkaynağı
function stream socket server $yerel_soket	oluşturulacak soketin türü standart url biçemi kullanılarak belirtilir: şema: / / hedef
function resource stream socket server	bir hata durumunda false aksi takdirde oluşturulan soketi döndürür
function resource stream socket server string $yerel_soket int $hatanum string $ileti int $seçenekler resource $bağlam	bir genel ağ veya unix alan sunucusu soketi oluşturur
function stream wrapper restore $protokol	etkin kılınacak yerleşik sarmalayıcı
function bool stream wrapper restore	başarı durumunda true başarısızlık durumunda false döner
function bool stream wrapper restore string $protokol	iptal edilmiş yerleşik bir sarmalayıcıyı tekrar etkin kılar
function stripcslashes $dizge	öncelemleri ayıklanacak dizge
function string stripcslashes	öncelemsiz dizgeyle döner
function string stripcslashes string $dizge	addcslashes ile &ouml;ncelenmiş dizgeyi eski haline getirir
function stripos $iğne	iğne bir dizge değilse önce bir tamsayıya dönüştürülür ve bu tamsayı karakterin kodu olarak ele alınır
function stripos $başlangıç	seçimlik başlangıç değiştirgesiyle aramanın samanlık içinde kaçıncı karakterden başlayacağını belirtebilirsiniz
function stripos $samanlık	aramanın yapılacağı dizge
function int stripos	konumu bir tamsayı olarak döndürür
function int stripos string $samanlık mixed $iğne int $başlangıç	harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak bir alt dizgenin ilkinin konumunu bulur
function stripslashes $dizge	girdi dizgesi
function string stripslashes	tersbölüleri ayıklanmış bir dizge döndürür
function string stripslashes string $str	bir dizgeden tersb&ouml;l&uuml;leri ayıklar
function strlen $dizge	uzunluğu ölçülecek dizge
function int strlen	dizge boşsa 0 değilse dizgenin uzunluğu ile döner
function int strlen string $dizge	dizge uzunluğunu d&ouml;nd&uuml;r&uuml;r
function strnatcasecmp $d1	ilk dizge
function strnatcasecmp $d2	ikinci dizge
function int strnatcasecmp	d1 dizgesi d2 dizgesinden küçükse sıfırdan küçük bir değer; d1 dizgesi d2 dizgesinden büyükse sıfırdan büyük bir değer; d1 dizgesi ile d2 dizgesi aynıysa sıfır döndürür
function int strnatcasecmp string $d1 string $d2	doğal sıralama algoritmasını kullanarak dizgeleri harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak karşılaştırır
function strnatcmp $d1	ilk dizge
function strnatcmp $d2	ikinci dizge
function int strnatcmp	d1 dizgesi d2 dizgesinden küçükse sıfırdan küçük bir değer; d1 dizgesi d2 dizgesinden büyükse sıfırdan büyük bir değer; d1 dizgesi ile d2 dizgesi aynıysa sıfır döndürür
function int strnatcmp string $d1 string $d2	doğal sıralama algoritmasını kullanarak dizgeleri karşılaştırır
function strncmp $uzunluk	karşılaştırmada kullanılacak karakter sayısı
function strncmp $d1	ilk dizge
function strncmp $d2	ikinci dizge
function int strncmp	d1 dizgesi d2 dizgesinden küçükse sıfırdan küçük bir değer; d1 dizgesi d2 dizgesinden büyükse sıfırdan büyük bir değer; d1 dizgesi ile d2 dizgesi aynıysa sıfır döndürür
function int strncmp string $d1 string $d2 int $uzunluk	ilk n karakteri ikil olarak karşılaştırır
function strpbrk $dizge	karakterlerin aranacağı dizge
function strpbrk $karakterler	karakterler harf büyüklüğüne duyarlı olarak aranır
function string strpbrk	bulunan karakterle başlayan dizgeyi döndürür aranan hiçbir karakter bulunamazsa false döner
function string strpbrk string $dizge string $karakterler	belirtilen karakterleri bir dizge i&ccedil;inde arar
function strpos $iğne	iğne bir dizge değilse önce bir tamsayıya dönüştürülür ve bu tamsayı karakterin kodu olarak ele alınır
function strpos $başlangıç	seçimlik başlangıç değiştirgesiyle aramanın samanlık içinde kaçıncı karakterden başlayacağını belirtebilirsiniz
function strpos $samanlık	aramanın yapılacağı dizge
function int strpos	konumu bir tamsayı olarak döndürür
function int strpos string $samanlık mixed $iğne int $başlangıç	bir alt dizgenin ilkinin konumunu bulur
function strptime $tarih	çözümlenen dizge ör
function strptime $biçim	tarih değiştirgesinde kullanılan biçim ör
function array strptime	dizi döndürür
function array strptime string $tarih string $biçim	strftime işleviyle &uuml;retilen zaman ve tarihleri &ccedil;&ouml;z&uuml;mler
function strrchr $iğne	iğne birden fazla karakter içeriyorsa ilki kullanılır
function strrchr $samanlık	girdi dizgesi
function string strrchr	iğne bulunamazsa false aksi takdirde dizge parçası ile döner
function string strrchr string $samanlık mixed $iğne	bir dizgede belli bir karakterin sonuncusuna g&ouml;re dizgenin bir par&ccedil;asıyla d&ouml;ner
function strrev $dizge	ters çevrilecek dizge
function string strrev	ters çevrilen dizge döner
function string strrev string $dizge	bir dizgeyi ters &ccedil;evirir
function strripos $samanlık	iğnenin aranacağı dizge
function strripos $needle	samanlıkta aranacak dizge
function strripos $başlangıç	başlangıç ile aramanın başlatılacağı konum belirtilir
function int strripos	iğne dizgesine son rastlanılan yerin konumunu döndürür
function int strripos string $samanlık string $iğne int $başlangıç	bir dizgede harf b&uuml;y&uuml;kl&uuml;ğ&uuml;ne duyarsız olarak bir alt dizgenin sonuncusunu bulur
function strrpos $samanlık	iğnenin aranacağı dizge
function strrpos $iğne	samanlıkta aranacak karakter
function strrpos $başlangıç	aramanın başlatılacağı veya durdurulacağı konum
function int strrpos string $samanlık string $iğne int $başlangıç	bir dizgede bir karakterin sonuncusunu bulur
function strspn $maske	dizge ile eşleştirilecek karakterleri içeren maske
function strspn $uzunluk	eşleşmenin aranacağı alt dizge uzunluğu
function strspn $dizge	maskenin eşleştirileceği dizge
function strspn $başlangıç	dizge içinde eşleştirmenin başlatılacağı konum
function int strspn	dizge dizgesinin maske maskesindeki karakterlerden oluşan ilk parçasının uzunluğunu döndürür
function int strspn string $dizge string $maske int $başlangıç int $uzunluk	dizgenin maskenin tam karakterleri ile eşleşen ilk par&ccedil;asının uzunluğunu bulur
function strtolower $dizge	girdi dizgesi
function string strtolower	küçük harfli dizgeyle döner
function string strtolower string $dizge	bir dizgenin harflerini k&uuml;&ccedil;&uuml;k harfe &ccedil;evirir
function strtr $eski	yerine yenisi konacak dizge
function strtr $yeni	eskisinin yerine konacak dizge
function strtr $eski_yeni	array( eski = > yeni
function strtr $dizge	karakterleri dönüştürülecek dizge
function string strtr	dizge dizgesindeki her eski dizgesinin yerine yeni dizgesi yerleştirilerek elde edilen dizgeyle döner
function string strtr string $dizge string $eski string $yeni	belli karakterleri d&ouml;n&uuml;şt&uuml;r&uuml;r
function substr compare $uzunluk	karşılaştırılacak uzunluk
function substr compare $büyüklük_duyarsız	büyüklük_duyarsız true ise karşılaştırmada harf büyüklükleri dikkade alınmaz
function substr compare $başlangıç	karşılaştırmanın başlayacağı konum
function int substr compare	eğer ana_dizge dizgesinin başlangıç konumundan başlayan parçası dizge dizgesinden küçükse sıfırdan küçük bir değer büyükse sıfırdan büyük bir değer ikisi eşitse sıfır döner
function int substr compare string $ana_dizge string $dizge int $başlangıç int $uzunluk bool $büyüklük_duyarsız	iki dizgenin belli bir konumdan itibaren belli uzunluktaki par&ccedil;alarını bayt bayt karşılaştırır
function substr count $başlangıç	saymaya başlanacak konum
function substr count $iğne	aranacak dizge
function substr count $samanlık	araştırılacak dizge
function substr count $uzunluk	dizgenin ne kadarlık parçasında arama yapılacağı burada belirtilir
function int substr count	işlev bir tamsayı döndürür
function int substr count string $samanlık string $iğne int $başlangıç int $uzunluk	bir dizge i&ccedil;inde belli bir alt dizgeden ka&ccedil; tane bulunduğunu bulur
function substr replace $dizge	girdi dizgesi
function substr replace $yenisi	değiştirilecek kısma yerleştirilecek dizge
function substr replace $uzunluk	belirtilmiş ve pozitifse dizge dizgesinin değiştirilecek parçasının uzunluğudur; negatif ise dizge dizgesinin sonundan itibaren yerleştirmenin durdurulacağı karakter sayısıdır
function substr replace $başlangıç	eğer başlangıç pozitifse yer değiştirme işlemi dizge dizgesinin baştan başlangıç ıncı karakterinden başlar
function mixed substr replace	elde edilen dizge döner
function mixed substr replace mixed $dizge string $yenisi int $başlangıç int $uzunluk	bir dizgenin belli bir b&ouml;l&uuml;m&uuml;n&uuml; değiştirir
function substr $dizge	girilen dizge
function substr $uzunluk	eğer uzunluk değiştirgesi verildiyse ve pozitifse dönen dizge dizge nin uzunluğuna göre başlangıç tan itibaren uzunluk ta belirtilen karakter sayısı kadar karakter içerir
function substr $başlangıç	eğer başlangıç değiştirgesi negatif değilse geri dönen dizge değeri dizge nin 0dan itibaren başlangıç ıncı konumundan başlar
function string substr	başarı durumunda dizgenin çıkarılan kısmı başarısızlık durumunda false döner
function string substr string $dizge int $başlangıç integer $uzunluk	dizgenin bir kısmını d&ouml;nd&uuml;r&uuml;r
function symlink $hedef	bağın hedefi
function symlink $bağ	sembolik bağın ismi
function bool symlink	başarı durumunda true başarısızlık durumunda false döner
function bool symlink string $hedef string $bağ	bir sembolik bağ oluşturur
function syslog $öncelik	öncelik oluşum ve düzeyin birleşimidir
function syslog $ileti	gönderilecek ileti; mevcut errno değerine karşı düşen hata iletisi dizgesinin strerror yerleştirileceği %m karakterleri hariç
function bool syslog	başarı durumunda true başarısızlık durumunda false döner
function bool syslog int $öncelik string $ileti	bir sistem g&uuml;nl&uuml;ğ&uuml; iletisi &uuml;retir
function tcpwrap check $daemon	artalan uygulamasının adı
function tcpwrap check $adres	uzak istemcinin adresi
function tcpwrap check $kullanıcı	isteğe bağlı olarak kullanıcı adı
function tcpwrap check $dns_yok	adres olarak bir alan adı belirtilmişse ip adresini bulmak için dns çözümlemesi yapılır
function bool tcpwrap check	erişime izin verilmişse true yoksa false döner
function bool tcpwrap check string $süreç_adı string $adres string $kullanıcı bool $dns_yok	bir tcpwrap sınaması yapar
function textdomain $uygulama_adı	iletilerin ait olduğu uygulamanın adı; mevcut ayarların aynen kullanılması için null da belirtilebilir
function string textdomain	başarılı olduğu takdirde muhtemelen değiştirdiği uygulama veya paket ismiyle döner
function string textdomain string $uygulama_adı	&ouml;ntanımlı uygulama adını tanımlar
function tidy access count $nesne	tidy nesnesi
function int tidy access count	uyarı sayısı döner
function int tidy access count tidy $nesne	belgede saptanan tidy erişilebilirlik uyarılarının sayısını d&ouml;nd&uuml;r&uuml;r
function tidy config count $nesne	tidy nesnesi
function int tidy config count	hata sayısı döner
function int tidy config count tidy $object	belgede saptanan tidy yapılandırma hatalarının sayısını d&ouml;nd&uuml;r&uuml;r
function tidy get output $nesne	tidy nesnesi
function string tidy get output	çözümlenen tidy imlenimini içeren bir dizge döner
function string tidy get output tidy $object	&ccedil;&ouml;z&uuml;mlenen tidy imlenimini bir dizge olarak d&ouml;nd&uuml;r&uuml;r
function tidy load config $dosya	yapılandırma dosyasının yolu
function tidy load config $kodlama	belge girdi / çıktı kodlaması belirtilir
function void tidy load config string $dosya string $kodlama	bir tidy yapılandırma dosyasını belirtilen kodlama ile y&uuml;kler
function bool tidy reset config	başarı durumunda true başarısızlık durumunda false döner
function bool tidy reset config	tidy yapılandırmasını &ouml;ntanımlı değerlere ayarlar
function tidy save config $dosya	yapılandırma dosyasının yolu
function bool tidy save config	başarı durumunda true başarısızlık durumunda false döner
function bool tidy save config string $dosya	ge&ccedil;erli ayarları belirtilen dosyaya kaydeder
function tidy set encoding $kodlama	belge girdi / çıktı kodlaması belirtilir
function bool tidy set encoding	başarı durumunda true başarısızlık durumunda false döner
function bool tidy set encoding string $encoding	&ccedil;&ouml;z&uuml;mlenecek imlenim i&ccedil;in girdi / &ccedil;ıktı karakter kodlamasını belirler
function tidy warning count $nesne	tidy nesnesi
function int tidy warning count	uyarı sayısı
function int tidy warning count tidy $nesne	belgede saptanan tidy uyarılarının sayısını d&ouml;nd&uuml;r&uuml;r
function time nanosleep $süre	beklenecek saniye sayısını belirten bir pozitif tamsayı
function time nanosleep $nanosüre	saniyenin milyarda birlerini belirten bir pozitif tamsayı
function mixed time nanosleep	başarı durumunda true başarısızlık durumunda false döner
function mixed time nanosleep int $süre int $nanosüre	&ccedil;alışmayı saniye ve nanosaniye cinsinden geciktirir
function time sleep until $zaman_damgası	betiğin uyanacağı zaman
function bool time sleep until	başarı durumunda true başarısızlık durumunda false döner
function bool time sleep until float $zaman_damgası	belirtilen zamana kadar betiği uyutur
function resource tmpfile	başarısızlık durumunda false aksi takdirde fopen() işlevinin yaptığı gibi yeni dosya için bir dosya tanıtıcısı ile döner
function resource tmpfile	ge&ccedil;ici bir dosya oluşturur
function token get all $kaynak	çözümlenecek php kaynak kodu
function array token get all	dizgecik betimleyicilerinden oluşan bir dizi
function array token get all string $kaynak	belirtilen kaynağı php dizgeciklerine ayırır
function token name $dizgecik	dizgecik değeri
function string token name	belirtilen dizgecik değerinin simgesel ismini döndürür
function string token name int $dizgecik	belirtilen php dizgeciğinin simgesel ismini d&ouml;nd&uuml;r&uuml;r
function touch $zaman	değişiklik zamanı
function touch $ezamanı	belirtilmişse dosyanın erişim zamanı ezamanı değerine ayarlanır
function touch $dosyaismi	erişilecek dosyanın ismi
function bool touch	başarı durumunda true başarısızlık durumunda false döner
function bool touch string $dosyaismi int $zaman int $ezamanı	dosyanın erişim ve değişiklik zamanını ayarlar
function trigger error $ileti	tetiklenen hata için tasarlanmış hata iletisi
function trigger error $tür	tetiklenen hata için tasarlanmış hata türü
function bool trigger error	tür yanlış belirtilmişse false aksi takdirde true döner
function bool trigger error string $ileti int $tür	kullanıcı seviyesinde bir hata / uyarı / bilgi iletisi &uuml;retir
function trim $dizge	budanacak dizge
function trim $karakterler	seçimlik olarak karakterler değiştirgesi kullanılarak budanacak karakterler belirlenebilir
function string trim	budanmış dizge
function string trim string $dizge string $karakterler	dizgenin başındaki ve sonundaki boşlukları veya diğer karakterleri budar
function uasort $karş_işlevi	kullanıcı tanamlı karşılaştırma işlevi örnekleri için usort() ve uksort() işlevlerine bakınız
function uasort $dizi	sıralanacak dizi
function bool uasort	başarı durumunda true başarısızlık durumunda false döner
function bool uasort array $dizi callback $karş_işlevi	bir diziyi kullanıcı tanımlı bir işlev kullanarak indislerine g&ouml;re sıralarken anahtar / değer ilişkisini korur
function uksort $karş_işlevi	karşılaştırma için geriçağırım işlevi
function uksort $dizi	sıralanacak dizi
function bool uksort	başarı durumunda true başarısızlık durumunda false döner
function bool uksort array $dizi callback $karş_işlevi	bir diziyi kullanıcı tanımlı bir işlev kullanarak anahtarlarına g&ouml;re sıralar
function unlink $dosyaismi	dosya yolu
function unlink $bağlam	bilginize : bağlamsal destek php 5
function bool unlink	başarı durumunda true başarısızlık durumunda false döner
function bool unlink string $dosyaismi resource $bağlam	bir dosyayı siler
function urldecode $dizge	kodlaması kaldırılacak dizge
function string urldecode	kodlanmamış dizge döner
function string urldecode string $dizge	url kodlamalı dizgenin kodlamasını &ccedil;&ouml;zer
function urlencode $dizge	kodlanacak dizge
function string urlencode	belirtilen dizge içindeki karakterlerden -_
function string urlencode string $dizge	dizgeye url kodlaması uygular
function usleep $süre	işlemsiz geçecek mikrosaniye cinsinden süre
function void usleep int $süre	&ccedil;alışmayı mikrosaniye cinsinden geciktirir
function usort $karş_işlevi	karşılaştırma için geriçağırım işlevi
function usort $dizi	sıralanacak dizi
function bool usort	başarı durumunda true başarısızlık durumunda false döner
function bool usort array $array callback $karş_işlevi	bir diziyi kullanıcı tanımlı bir işlev kullanarak değerlerine g&ouml;re sıralar
function utf8 decode $veri	utf-8 ile kodlanmış bir dizge
function string utf8 decode	belirtilen veri dizgesinin iso-8859-1 gösterimini döndürür
function string utf8 decode string $veri	iso-8859-1 karakterlerinin utf-8 g&ouml;sterimlerini iso-8859-1 g&ouml;sterimlerine d&ouml;n&uuml;şt&uuml;r&uuml;r
function variant cmp $sag	sağ terim
function variant cmp $sol	sol terim
function variant cmp $yerel	dizgeleri karşılaştırırken kullanılacak geçerli bir yerel tanımlayıcı dizge karşılaştırmayı etkiler
function variant cmp $secenekler	secenekler aşağıdakilerden biri veya birkaçı olabilir or ile birleştirilir ve dizge karşılaştırmasını etkiler: varyant karşılaştırma seçenekleri deger anlamı norm_ignorecase büyüklük duyarsız karşılaştırma norm_ignorenonspace boşluksuz karakterleri dikkate alma norm_ignoresymbols sembolleri dikkate alma norm_ignorewidth dizge genişliğini dikkate alma norm_ignorekanatype kana tarzını dikkate alma norm_ignorekashida arap keşide karakterini dikkate alma
function int variant cmp	aşağıdakilerden biri geri döner: varyant karşılaştırma sonuçları değer anlamı varcmp_lt sol sag dan küçüktür varcmp_eq sol ile sag eşittir varcmp_gt sol sag dan büyüktür varcmp_null sol sag veya ikisi birden null dur
function int variant cmp mixed $sol mixed $sag int $yerel int $secenekler	iki varyant değerini karşılaştırır
function variant date from timestamp $zamandamgasi	unix zaman damgası
function variant variant date from timestamp	vt_date türünde varyant bir değer döndürür
function variant variant date from timestamp int $zamandamgasi	unix zaman damgasının varyant tarih g&ouml;sterimini d&ouml;nd&uuml;r&uuml;r
function variant date to timestamp $varyant	varyant değer
function int variant date to timestamp	unix zaman damgası geri döner
function int variant date to timestamp variant $varyant	varyant tarih / zaman değerini unix zaman damgasına &ccedil;evirir
function variant div $sag	sağ terim
function variant div $sol	sol terim
function mixed variant div mixed $sol mixed $sag	iki varyant değerin b&ouml;lme sonucunu d&ouml;nd&uuml;r&uuml;r
function variant fix $varyant	varyant
function mixed variant fix	varyant negatif ise varyanta eşit veya büyük olan ilk negatif tamsayı diğer durumda varyant değerinin tamsayı kısmı geri döner
function mixed variant fix mixed $varyant	varyantın tamsayı kısmını geri d&ouml;nd&uuml;r&uuml;r
function variant get type $varyant	varyant nesne
function int variant get type	işlev varyant nesnesinin com dotnet veya variant sınıfından hangisinden türediğini gösteren bir tamsayı döndürür geri dönüş değeri vt_xxx sabitlerinden biri ile karşılaştırılabilir
function int variant get type variant $varyant	varyant nesnenin t&uuml;r&uuml;n&uuml; geri d&ouml;nd&uuml;r&uuml;r
function variant idiv $sag	sağ terim
function variant idiv $sol	sol terim
function mixed variant idiv mixed $sol mixed $sag	varyant değerleri tamsayıya &ccedil;evirir ve b&ouml;lme yaparak sonucu d&ouml;nd&uuml;r&uuml;r
function variant imp $sag	sağ terim
function variant imp $sol	sol terim
function mixed variant imp	varyant çıkarım tablosu sol sag sonuç true true true true false true true null true false true true false false true false null true null true true null false null null null null
function mixed variant imp mixed $sol mixed $sag	iki varyant &uuml;zerinde ikilik &ccedil;ıkarım yapar
function variant int $varyant	varyant
function mixed variant int	varyant negatif ise varyanta eşit veya büyük olan ilk negatif tamsayı diğer durumda varyant değerinin tamsayı kısmı geri döner
function mixed variant int mixed $varyant	varyantın tamsayı kısmını d&ouml;nd&uuml;r&uuml;r
function variant mod $sag	sağ terim
function variant mod $sol	sol terim
function mixed variant mod	bölme işleminden kalanı geri döndürür
function mixed variant mod mixed $sol mixed $sag	iki varyantın b&ouml;lme işleminden kalanı geri d&ouml;nd&uuml;r&uuml;r
function variant mul $sag	sağ terim
function variant mul $sol	sol terim
function mixed variant mul	varyant çarpma kuralları durum işlem iki deyimde dizge tarih karakter mantıksal türlerinden biri çarpma bir deyim dizge diğeri karakter çarpma bir deyim sayısal diğeri dizge çarpma her iki deyim sayısal çarpma biri null null döner her iki deyim boş ise boş bir dizge döner
function mixed variant mul mixed $sol mixed $sag	iki varyant değerleri i&ccedil;in &ccedil;arpma işlemi yapar
function variant neg $varyant	varyant
function mixed variant neg	mantıksal değil sonucunu döndürür
function mixed variant neg mixed $varyant	bir varyant &uuml;zerinde mantıksal değil işlemi yapar
function variant not $varyant	varyant
function mixed variant not	ikilik değil sonucunu döndürür
function mixed variant not mixed $varyant	bir varyant &uuml;zerinde ikilik değil işlemi yapar
function variant or $sag	sağ terim
function variant or $sol	sol terim
function mixed variant or	varyant veya kuralları sol sag sonuç true true true true false true true null true false true true false false false false null null null true true null false null null null null
function mixed variant or mixed $sol mixed $sag	iki varyant &uuml;zerinde mantıksal ayırma işlemi yapar
function variant round $ondalik	ondalık basamak sayısı
function variant round $varyant	varyant
function mixed variant round	yuvarlanmış sonucu döndürür
function mixed variant round mixed $varyant int $ondalik	bir varyantı verilen ondalık basamağa yuvarlar
function variant sub $sag	sağ terim
function variant sub $sol	sol terim
function mixed variant sub	varyant çıkartma kuralları durum işlem iki deyimde dizge türünde ise çıkartma bir deyim dizge diğeri karakter ise çıkartma bir deyim sayısal diğeri dizge ise çıkartma iki deyimde sayısal ise çıkartma iki deyimden biri null ise null döner iki deyimde boş ise boş dizge geri döner
function mixed variant sub mixed $sol mixed $sag	sağ varyant değerini sol varyant değerinden &ccedil;ıkartır
function variant xor $sag	sağ terim
function variant xor $sol	sol terim
function mixed variant xor	varyant mantıksal çıkarma kuralları sol sag sonuç true true false true false true false true true false false false null null null
function mixed variant xor mixed $sol mixed $sag	iki varyant arasında mantıksal &ccedil;ıkarma yapar
function vfprintf $dt	dosya tanıtıcısı
function vfprintf $biçem	biçem ile ilgili açıklama için sprintf() işlevine bakınız
function vfprintf $değiştirgeler	biçem dizgesine göre değerlendirilecek değiştirgelerden oluşan dizi
function int vfprintf	çıktılanan dizgenin uzunluğu ile döner
function int vfprintf resource $dt string $biçem array $değiştirgeler	bi&ccedil;emli dizgeyi bir akıma yazar
function virtual $dosya_adı	apache virtual komutunun çalıştıracağı dosya
function bool virtual	başarı halinde virtual komutu çalıştırılır hata halinde false döndürür
function bool virtual string $dosya_adı	bir apache alt isteği ger&ccedil;ekleştirir
function vprintf $biçem	biçem ile ilgili açıklama için sprintf() işlevine bakınız
function vprintf $değiştirgeler	biçem dizgesine göre değerlendirilecek değiştirgelerden oluşan dizi
function int vprintf	çıktılanan dizgenin uzunluğu ile döner
function int vprintf string $biçem array $değiştirgeler	bi&ccedil;emli bir dizge &ccedil;ıktılar
function wddx add vars $pt	wddx_packet_start() tarafından döndürülmüş bir wddx paket tanıtıcısı
function wddx add vars $değişken	bir değişken ismi veya değişken isimlerini veya diğer dizileri ve benzerlerini içeren bir dizi olabilir
function bool wddx add vars	başarı durumunda true başarısızlık durumunda false döner
function bool wddx add vars resource $pt mixed $değişken	tanıtıcısı belirtilen wddx paketine değişken ekler
function wddx packet end $pt	wddx_packet_start() tarafından döndürülmüş bir wddx paket tanıtıcısı
function string wddx packet end	wddx paketini içeren bir dizge döner
function string wddx packet end resource $pt	tanıtıcısı belirtilen wddx paketini kapatır
function wddx packet start $açıklama	belirtilmesi isteğe bağlı bir açıklama dizgesi
function resource wddx packet start	bir hata oluşursa false yoksa daha sonra işlevlerde kullanılmak üzere bir paket tanıtıcısı döner
function resource wddx packet start string $azıklama	bir veri yapısı i&ccedil;eren yeni bir wddx paketi başlatır
function wddx serialize value $açıkama	paket başlığında görünmek üzere belirtilmesi isteğe bağlı açıklama dizgesi
function wddx serialize value $değer	dizgeleştirilecek değer
function string wddx serialize value	bir hata oluşursa false yoksa bir wddx paketi döner
function string wddx serialize value mixed $değer string $açıkama	tek bir değeri bir wddx paketi i&ccedil;inde dizgeleştirir
function wddx serialize vars $değişken	bir değişken ismi veya değişken isimlerini veya diğer dizileri ve benzerlerini içeren bir dizi olabilir
function string wddx serialize vars	bir hata oluşursa false yoksa bir wddx paketi döner
function string wddx serialize vars mixed $değişken	değişkenleri bir wddx paketi olara dizgeleştirir
function array win32 ps list procs	başarısızlık durumunda false aksi takdirde win32_ps_stat_proc() işlevinin bir süreç için döndürdüğü istatistikleri çalışan tüm süreçler için bir dizi olarak döndürür
function array win32 ps list procs	&ccedil;alışan s&uuml;re&ccedil;leri listeler
function win32 ps stat proc $pid	durumu döndürülecek sürecin süreç kimliği
function array win32 ps stat proc	başarısızlık durumunda false aksi takdirde aşağıdaki bilgileri içeren bir dizi döner:
function array win32 ps stat proc int $pid	belirtilen s&uuml;re&ccedil;le ilgili istatistikleri d&ouml;nd&uuml;r&uuml;r
function win32 query service status $hizmet	hizmetin kısa ismi
function win32 query service status $makine	isteğe bağlı olarak makine ismi
function mixed win32 query service status	başarısızlık durumunda false aksi takdirde aşağıdaki bilgileri içeren bir dizi döner:
function mixed win32 query service status string $hizmet string $makine	bir hizmetin durumunu sorgular
function win32 set service status $durum	hizmet durum kodu
function bool win32 set service status	başarı durumunda true başarısızlık durumunda false döner
function bool win32 set service status int $durum	hizmet durumunu g&uuml;nceller
function win32 start service ctrl dispatcher $isim	hizmetin win32_create_service() tarafından tanıtılan kısa ismi
function mixed win32 start service ctrl dispatcher	başarılı olursa true aksi takdirde bir win32 hata kodu döner
function mixed win32 start service ctrl dispatcher string $isim	hizmet y&ouml;neticisine ismi belirtilen hizmet gibi davranacak bir betik tanıtır
function win32 start service $hizmet	hizmetin kısa ismi
function win32 start service $makine	isteğe bağlı olarak makine ismi
function int win32 start service	başarı durumunda win32_no_error aksi takdirde bir win32 hata kodu döner
function int win32 start service string $hizmet string $makine	bir hizmeti başlatır
function win32 stop service $hizmet	hizmetin kısa ismi
function win32 stop service $makine	belirtilmesi isteğe bağlıdır
function int win32 stop service	başarı durumunda win32_no_error aksi takdirde bir win32 hata kodu döner
function int win32 stop service string $hizmet string $makine	bir hizmeti durdurur
function wordwrap $kes	kes true ise dizge belirtilen genişlikte veya daha önce satırdaki son sözcüğü kesme pahasına katlanır
function wordwrap $dizge	girdi dizgesi
function wordwrap $genişlik	sütun genişliği; 75 öntanımlıdır
function wordwrap $satırsonu	satırın sonuna eklenecek isteğe bağlı satırsonu karakteri
function string wordwrap	belirtilen sütunda katlanan dizgeyi döndürür
function string wordwrap string $dizge int $genişlik string $satırsonu bool $kes	bir dizgeyi belli bir uzunlukta katlar
function xattr get $isim	özniteliğin ismi
function xattr get $seçenekler	desteklenen xattr seçenekleri xattr_dontfollow sembolik bağlar izlenmez sembolik bağın kendisinde işlem yapar
function xattr get $dosya	özniteliği sorgulanacak dosyanın yolu
function string xattr get	öznitelik tanımlı değilse false tanımlıysa değeri bir dizge olarak döndürür
function string xattr get string $dosya string $isim int $seçenekler	bir &ouml;zniteliğin değerini d&ouml;nd&uuml;r&uuml;r
function xattr list $dosya	dosya yolu
function xattr list $seçenekler	desteklenen xattr seçenekleri xattr_dontfollow sembolik bağlar izlenmez sembolik bağın kendisinde işlem yapar
function array xattr list	ek özniteliklerin isimlerini içeren bir dizi döndürür
function array xattr list string $dosya int $seçenekler	ek &ouml;zniteliklerin listesini d&ouml;nd&uuml;r&uuml;r
function xattr remove $dosya	özniteliği silinecek dosyanın yolu
function xattr remove $isim	silinecek özniteliğin ismi
function xattr remove $seçenekler	desteklenen xattr seçenekleri xattr_dontfollow sembolik bağlar izlenmez sembolik bağın kendisinde işlem yapar
function bool xattr remove	başarı durumunda true başarısızlık durumunda false döner
function bool xattr remove string $dosya string $isim int $seçenekler	bir ek &ouml;zniteliği siler
function xattr set $seçenekler	desteklenen xattr seçenekleri xattr_create ek öznitelik zaten tanımlıysa işlev başarısız olur
function xattr set $değer	özniteliğin değeri
function xattr set $isim	ek özniteliğin ismi
function xattr set $dosya	özniteliği tanımlanacak dosyanın yolu
function bool xattr set	başarı durumunda true başarısızlık durumunda false döner
function bool xattr set string $dosya string $isim string $değer int $seçenekler	bir ek &ouml;zniteliği tanımlar
function xattr supported $dosya	sınanacak dosyanın yolu
function xattr supported $seçenekler	desteklenen xattr seçenekleri xattr_dontfollow sembolik bağlar izlenmez sembolik bağın kendisinde işlem yapar
function bool xattr supported	dosya sistemi ek öznitelikleri destekliyorsa true desteklemiyorsa false yanlış yol belirtimi veya okuma izninin yokluğu gibi sebeplerle destek saptanamazsa null döner
function bool xattr supported string $dosya int $seçenekler	dosya sistemi ek &ouml;znitelikleri destekliyor mu diye bakar
function xdiff file bpatch $hedef	sonucun kaydedileceği dosyanın yolu
function xdiff file bpatch $dosya	yamanın uygulanacağı dosyanın yolu
function xdiff file bpatch $yama	ikil yama dosyası
function bool xdiff file bpatch	başarı durumunda true başarısızlık durumunda false döner
function bool xdiff file bpatch string $dosya string $yama string $hedef	bir dosyaya bir ikil yama uygular
function xdiff file diff $bağlam	her değişikliğin altında ve üstünde kaç bağlam satırının bulunacağı belirtilir
function xdiff file diff $hedef	elde edilen yamanın kaydedileceği dosyanın yolu
function xdiff file diff $yeni_dosya	ikinci dosyanın yolu
function xdiff file diff $eski_dosya	ilk dosyanın yolu
function xdiff file diff $küçült	true atandığı takdirde mümkün olan en küçük yama dizgesi oluşturulmaya çalışılır işlem biraz uzun sürebilir
function bool xdiff file diff	başarı durumunda true başarısızlık durumunda false döner
function bool xdiff file diff string $eski_dosya string $yeni_dosya string $hedef int $bağlam bool $küçült	iki dosyanın tekil farkını alır
function xdiff file merge3 $hedef	sonucun kaydedileceği dosyanın yolu
function xdiff file merge3 $yeni_dosya1	ikinci dosyanın yolu
function xdiff file merge3 $eski_dosya	ilk dosyanın yolu
function xdiff file merge3 $yeni_dosya2	üçüncü dosyanın yolu
function mixed xdiff file merge3	dahili bir hata oluşmuşsa false katıştırma başarılıysa true reddedilen değişiklikler varsa reddedilen parçaları içeren bir dizge döner
function mixed xdiff file merge3 string $eski_dosya string $yeni_dosya1 string $yeni_dosya2 string $hedef	&uuml;&ccedil; dosyayı tek dosya haline getirir
function xdiff file patch binary $hedef	sonucun kaydedileceği dosyanın yolu
function xdiff file patch binary $dosya	yamanın uygulanacağı dosyanın yolu
function xdiff file patch binary $yama	ikil yama dosyası
function bool xdiff file patch binary	başarı durumunda true başarısızlık durumunda false döner
function bool xdiff file patch binary string $dosya string $yama string $hedef	xdiff_file_bpatch işlevinin takma adıdır
function xdiff file patch $yama	xdiff_string_diff() ve xdiff_file_diff() işlevleriyle veya uygun araçlarla üretilmiş tekil yama dizgesi
function xdiff file patch $dosya	yamanın uygulanacağı dosyanın yolu
function xdiff file patch $hedef	sonucun kaydedileceği dosyanın yolu
function xdiff file patch $seçenekler	xdiff_patch_normal öntanımlı kip normal yama veya xdiff_patch_reverse tersinir yama olabilir
function mixed xdiff file patch	dahili bir hata oluşmuşsa false yama başarıyla uygulanmışsa true reddedilen değişiklikler varsa reddedilen parçaları içeren bir dizge döner
function mixed xdiff file patch string $dosya string $yama string $hedef int $seçenekler	bir dosyaya bir tekil yama uygular
function xdiff file rabdiff $hedef	elde edilen yama dosyasının dosya yolu
function xdiff file rabdiff $eski_dosya	ilk ikil veri dosyası; eski dosya olarak ele alınır
function xdiff file rabdiff $yeni_dosya	ikinci ikil veri dosyası; yeni dosya olarak ele alınır
function bool xdiff file rabdiff	başarı durumunda true başarısızlık durumunda false döner
function bool xdiff file rabdiff string $eski_dosya string $yeni_dosya string $hedef	rabin'in &ccedil;ok terimli parmakizi algoritmasını kullanarak iki dizgenin ikil olarak farkını alır
function xdiff string bdiff size $yama	xdiff_string_bdiff() veya xdiff_string_rabdiff() tarafından oluşturulmuş bir ikil yama dizgesi
function int xdiff string bdiff size	oluşacak dosyanın boyutunu döndürür
function int xdiff string bdiff size string $yama	belirtilen ikil yama uygulanarak oluşturulacak dosyanın boyutunu d&ouml;nd&uuml;r&uuml;r
function xdiff string diff $küçült	true atandığı takdirde mümkün olan en küçük yama dizgesi oluşturulmaya çalışılır işlem biraz uzun sürebilir
function xdiff string diff $bağlam	her değişikliğin altında ve üstünde kaç bağlam satırının bulunacağı belirtilir
function xdiff string diff $eski_veri	ilk veri dizgesi
function xdiff string diff $yeni_veri	ikinci veri dizgesi
function string xdiff string diff	bir hata oluşmuşsa false yoksa elde edilen fark dizgesi döner
function string xdiff string diff string $eski_veri string $yeni_veri int $bağlam bool $küçült	iki dizgenin tekil farkını alır
function xdiff string merge3 $hatalar	katıştırma işlemi sırasında reddedilen parçalar belirtildiği takdirde bu değişkende saklanır
function xdiff string merge3 $yeni_veri1	ikinci veri dizgesi
function xdiff string merge3 $yeni_veri2	üçüncü veri dizgesi
function xdiff string merge3 $eski_veri	özgün veri
function mixed xdiff string merge3	dahili bir hata oluşmuşsa false elde edilen dizge boşsa true yoksa elde edilen dizge döner
function mixed xdiff string merge3 string $eski_veri string $yeni_veri1 string $yeni_veri2 string $hatalar	&uuml;&ccedil; dizgeyi tek bir dizge haline getirir
function xdiff string patch $yama	xdiff_string_diff() ve xdiff_file_diff() işlevleriyle veya uygun araçlarla üretilmiş tekil yama dizgesi
function xdiff string patch $hata	sağlandığı takdirde reddedilen yama parçaları bu değişkende döndürülür
function xdiff string patch $seçenekler	xdiff_patch_normal öntanımlı kip normal yama veya xdiff_patch_reverse tersinir yama olabilir
function xdiff string patch $dizge	yamanacak dizge
function string xdiff string patch	hata oluşursa false yoksa yamanmış dizgeyi döndürür
function string xdiff string patch string $dizge string $yama int $seçenekler string $hata	bir dizgeyi bir tekil fark dizgesi ile yamar
function xdiff string bdiff $eski_veri	ilk veri dizgesi
function xdiff string bdiff $yeni_veri	ikinci veri dizgesi
function string xdiff string bdiff	bir hata oluşmuşsa false yoksa elde edilen fark dizgesi döner
function string xdiff string bdiff string $eski_veri string $yeni_veri	iki dizgenin ikil farkını alır
function xml error string $hatanum	xml_get_error_code() işlevinden dönen hata kodu
function string xml error string	belirtilen hatanum ile ilgili bir açıklama yoksa false aksi takdirde açıklama dizgesini döndürür
function string xml error string int $hatanum	xml &ccedil;&ouml;z&uuml;mleyici hata iletisini d&ouml;nd&uuml;r&uuml;r
function xml get current byte index $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function int xml get current byte index	çözümleyici olarak geçerli bir çözümleyici belirtilmemişse false aksi takdirde çözümleyici veri tamponundaki geçerli baytın indisini döndürür ilk baytın indisi 0dır
function int xml get current byte index resource $çözümleyici	xml &ccedil;&ouml;z&uuml;mleyicinin ge&ccedil;erli bayt indisini d&ouml;nd&uuml;r&uuml;r
function xml get current column number $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function int xml get current column number	çözümleyici olarak geçerli bir çözümleyici belirtilmemişse false aksi takdirde çözümleyici veri tamponunda hatanın oluştuğu xml_get_current_line_number() ile döndürülen satırdaki hatalı yerin sütun numarasını döndürür
function int xml get current column number resource $parser	xml &ccedil;&ouml;z&uuml;mleyicide hatanın oluştuğu satırdaki s&uuml;tun numarasını d&ouml;nd&uuml;r&uuml;r
function xml get current line number $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function int xml get current line number	çözümleyici olarak geçerli bir çözümleyici belirtilmemişse false aksi takdirde çözümleyici veri tamponunda hatanın oluştuğu satırın numarasını döndürür
function int xml get current line number resource $parser	xml &ccedil;&ouml;z&uuml;mleyicide hatanın oluştuğu satırı d&ouml;nd&uuml;r&uuml;r
function xml get error code $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function int xml get error code	çözümleyici olarak geçerli bir çözümleyici belirtilmemişse false aksi takdirde hata kodları sayfasında listelenen hata kodlarından biri döner
function int xml get error code resource $çözümleyici	xml &ccedil;&ouml;z&uuml;mleyici hata kodunu d&ouml;nd&uuml;r&uuml;r
function xml parse into struct $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function int xml parse into struct	başarısızlık durumunda 0 başarı durumunda 1 döner
function int xml parse into struct resource $çözümleyici string $veri array $değerler array $indis	xml veriyi &ccedil;&ouml;z&uuml;mleyip sonucu bir dizi i&ccedil;inde d&ouml;nd&uuml;r&uuml;r
function xml parser free $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function bool xml parser free	belirtilen xml çözümleyici geçersizse false döndürür aksi takdirde çözümleyiciyi serbest bırakıp true döndürür
function bool xml parser free resource $çözümleyici	xml &ccedil;&ouml;z&uuml;mleyiciyi serbest bırakır
function xml parser get option $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml parser get option $seçenek	değeri öğrenilecek seçenek
function mixed xml parser get option	çözümleyici veya seçenek geçerli değilse false döner ve ayrıca bir e_warning çıktılanır aksi takdirde seçeneğin değeri döner
function mixed xml parser get option resource $çözümleyici int $seçenek	xml &ccedil;&ouml;z&uuml;mleyici se&ccedil;eneklerini d&ouml;nd&uuml;r&uuml;r
function xml parser set option $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml parser set option $seçenek	değer atanacak seçenek
function xml parser set option $değer	seçeneğin değeri
function bool xml parser set option	çözümleyici olarak geçerli bir çözümleyici belirtilmemişse veya seçenek atanamazsa false aksi takdirde true döner
function bool xml parser set option resource $çözümleyici int $seçenek mixed $değer	xml &ccedil;&ouml;z&uuml;mleyici se&ccedil;eneklerini belirler
function xml set character data handler $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml set character data handler $eylemci	xml_parse() işlevi çözümleyici için çağrıldığında mevcut olması gereken işlevin ismini içeren dizge
function xml set character data handler $data	ikinci değiştirge olan veri karakter verisini dizge olarak içerir
function xml set character data handler $çözümleyici	ilk değiştirge eylemci işlevi çağıran xml çözümleyicinin tanıtıcısıdır
function bool xml set character data handler	başarı durumunda true başarısızlık durumunda false döner
function bool xml set character data handler resource $çözümleyici callback $eylemci	karakter verisi eylemcisini belirler
function xml set default handler $veri	ikinci değiştirge olan veri karakter verisini içerir
function xml set default handler $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml set default handler $eylemci	xml_parse() işlevi çözümleyici için çağrıldığında mevcut olması gereken işlevin ismini içeren dizge
function xml set default handler $çözümleyici	ilk değiştirge eylemci işlevi çağıran xml çözümleyicinin tanıtıcısıdır
function bool xml set default handler	başarı durumunda true başarısızlık durumunda false döner
function bool xml set default handler resource $çözümleyici callback $eylemci	&ouml;ntanımlı eylemciyi belirler
function xml set end namespace decl handler $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml set end namespace decl handler $eylemci	xml_parse() işlevi çözümleyici için çağrıldığında mevcut olması gereken işlevin ismini içeren dizge
function xml set end namespace decl handler $çözümleyici	ilk değiştirge eylemci işlevi çağıran xml çözümleyicinin tanıtıcısıdır
function bool xml set end namespace decl handler	başarı durumunda true başarısızlık durumunda false döner
function bool xml set end namespace decl handler resource $çözümleyici callback $eylemci	isim alanı bildirimi sonlandırma eylemcisini belirler
function xml set notation decl handler $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml set notation decl handler $çözümleyici	ilk değiştirge eylemci işlevi çağıran xml çözümleyicinin tanıtıcısıdır
function xml set notation decl handler $public_id	harici öğenin genel betimleyicisi
function xml set notation decl handler $gösterim_adı	yukarıdaki gösterim bildirimi sözdiziminde isim değiştirgesinin değeri
function xml set notation decl handler $taban	harici öğenin sistem betimleyicisini sistem_id çözümlemek için kullanılacak dizge
function xml set notation decl handler $eylemci	xml_parse() işlevi çözümleyici için çağrıldığında mevcut olması gereken işlevin ismini içeren dizge
function xml set notation decl handler $system_id	harici gösterim bildiriminin sistem betimleyicisi
function bool xml set notation decl handler	başarı durumunda true başarısızlık durumunda false döner
function bool xml set notation decl handler resource $çözümleyici callback $eylemci	g&ouml;sterim bildirimi eylemcisini belirler
function xml set object $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml set object $nesne	eylemci yöntemleri içeren nesne
function bool xml set object	başarı durumunda true başarısızlık durumunda false döner
function bool xml set object resource $çözümleyici object $nesne	xml &ccedil;&ouml;z&uuml;mleyici nesne i&ccedil;inde kullanılır
function xml set unparsed entity decl handler $öğe_adı	tanımlanmaya hazırlanılan öğenin ismi
function xml set unparsed entity decl handler $çözümleyici	xml_parser_create() ve xml_parser_create_ns() işlevleri tarafından döndürülen bir xml özkaynağı
function xml set unparsed entity decl handler $sistem_id	harici öğenin sistem betimleyicisi
function xml set unparsed entity decl handler $çözümleyici	ilk değiştirge eylemci işlevi çağıran xml çözümleyicinin tanıtıcısıdır
function xml set unparsed entity decl handler $genel_id	harici öğenin genel betimleyicisi
function xml set unparsed entity decl handler $gösterim_adı	bu öğenin gösterim ismi xml_set_notation_decl_handler() işlevine bakınız)
function xml set unparsed entity decl handler $taban	harici öğenin sistem betimleyicisini sistem_id çözümlemek için kullanılacak dizge
function xml set unparsed entity decl handler $eylemci	xml_parse() işlevi çözümleyici için çağrıldığında mevcut olması gereken işlevin ismini içeren dizge
function bool xml set unparsed entity decl handler	başarı durumunda true başarısızlık durumunda false döner
function bool xml set unparsed entity decl handler resource $çözümleyici callback $eylemci	&ccedil;&ouml;z&uuml;mlenmeyen &ouml;ğe bildirimi eylemcisini belirler
function mixed flush bool $boş	&ccedil;ıktı tamponunu boşaltır
function yaz ccl conf $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz ccl conf $ayarlar	yapılandırma dizisi
function void yaz ccl conf resource $id array $ayarlar	ccl &ccedil;&ouml;z&uuml;mleyecisini yapılandırır
function yaz database $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz database $veritabanları	tek bir veritabanı veya + imleri ile ayrılmış çok sayıda veritabanı içeren bir dizge
function bool yaz database	başarı durumunda true başarısızlık durumunda false döner
function bool yaz database resource $id string $veritabanları	bir oturum i&ccedil;indeki veritabanlarını belirler
function yaz element $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz element $eleman_kümesi	çoğu sunucu kayıtların tamamı için f ve özet kayıtları için b yi destekler
function bool yaz element	başarı durumunda true başarısızlık durumunda false döner
function bool yaz element resource $id string $eleman_kümesi	alım i&ccedil;in eleman k&uuml;mesi ismi tanımlar
function yaz errno $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function int yaz errno	bir hata kodu döner
function int yaz errno resource $id	hata numarasını d&ouml;nd&uuml;r&uuml;r
function yaz error $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function string yaz error	id ile belirtilen son istek için sunucu hata iletisini döndürür
function string yaz error resource $id	hatanın a&ccedil;ıklaması d&ouml;ner
function yaz es result $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function array yaz es result	sunucu tarafından üretilip gönderilen targetreference elemanını içeren bir dizi döner
function array yaz es result resource $id	ek hizmetlerin sonucunu d&ouml;nd&uuml;r&uuml;r
function yaz es $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz es $değiştirgeler	ek hizmet seçenekleri ile pakete özgü seçeneklerden oluşan bir dizi
function yaz es $tür	ek hizmetin türünü belirten bir dizge:: itemorder item order create create database drop drop database commit commit operation update update record xmlupdate xml update
function void yaz es resource $id string $tür array $değiştirgeler	bir ek hizmet isteği extended service request d&uuml;zenler
function yaz get option $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz get option $isim	seçeneğin ismi
function string yaz get option	belirtilen seçenek tanımlı değilse boş bir dizge aksi takdirde seçeneğin değerini döndürür
function string yaz get option resource $id string $isim	bir bağlantı se&ccedil;eneğinin değerini d&ouml;nd&uuml;r&uuml;r
function yaz hits $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz hits $sonuçlar	arama sonuçlarının ayrıntılarını içeren dizi
function int yaz hits	arama yapılmamışsa 0 aksi takdirde arama ile eşleşenlerin sayısını döndürür
function int yaz hits resource $id array $sonuçlar	son arama ile eşleşenlerin sayısını d&ouml;nd&uuml;r&uuml;r
function yaz itemorder $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz itemorder $args	gönderilecek item order isteği hakkında bilgi içeren bir ilişkisel dizi olmalıdır
function void yaz itemorder resource $id array $değiştirgeler	bir ill-request paketli z39
function yaz present $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function bool yaz present	başarı durumunda true başarısızlık durumunda false döner
function bool yaz present resource $id	bir alım z39
function yaz range $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz range $sayı	edinilecek kayıt sayısı
function yaz range $başlangıç	edinilecek ilk kaydın konumu
function void yaz range resource $id int $başlangıç int $sayı	edinilecek kayıtlar i&ccedil;in bir aralık belirler
function yaz record $konum	kaydın konumu
function yaz record $raw	kayıt özgün biçemi korunarak bir dizge olarak döndürülür
function yaz record $syntax	kaydın sözdizimi ismi usmarc grs-1 xml gibi bir dizge olarak döndürülür
function yaz record $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz record $array	kayıt grs-1 yapısını yansıtan bir dizi olarak döndürülür
function yaz record $string	kayıt basit gösterim için bir dizge olarak döndürülür
function yaz record $tür	dönen kaydın biçimi belirtilir
function yaz record $xml	mümkünse kayıt bir xml dizge olarak döndürülür
function yaz record $database	kaydın ilişkili olduğu veritabanının ismi bir dizge olarak döndürülür
function string yaz record	belirtilen konumda kayıt yoksa boş bir dizge varsa kaydı döndürür
function string yaz record resource $id int $konum string $tür	bir kayıt d&ouml;nd&uuml;r&uuml;r
function yaz scan result $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz scan result $sonuç	belirtildiği takdirde tarama yanıtıyla alınan ek bilgiler bu diziye yerleştirilir
function array yaz scan result	n dönen terim sayısı olmak üzere 0
function array yaz scan result resource $id array $sonuç	tarama sonucunu d&ouml;nd&uuml;r&uuml;r
function yaz scan $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz scan $startterm	taramanın başlatılacağı terim
function yaz scan $tür	şimdilik sadece rpn türü desteklenmektedir
function yaz scan $seçenekler	belirtilmesi isteğe bağlı olan bu değiştirge ile tarama isteğinin davranışını belirleyen ek bilgiler belirtilir
function void yaz scan resource $id string $tür string $başlangıç array $seçenekler	bir tarama d&uuml;zenler
function yaz schema $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz schema $şema	ham noktalı gösterimle 1
function void yaz schema resource $id string $şema	alım i&ccedil;in şema belirtir
function yaz search $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz search $tür	sorgu türü - şimdilik sadece rpn desteklenmekte olup bu durumda üçüncü değiştirge önek sorgu gösteriminde bir type-1 sorgusu belirtir
function yaz search $sorgu	z39
function bool yaz search	başarı durumunda true başarısızlık durumunda false döner
function bool yaz search resource $id string $tür string $sorgu	bir arama d&uuml;zenler
function yaz sort $kural	alan1 seçenekler1 alan2 seçenekler2 biçeminde bir dizge olup alan1 ile sıralama için birincil öznitelikler alan2 ile saniye sayısını vb
function yaz sort $i	harf büyüklüğüne duyarsız sıralama
function yaz sort $id	yaz_connect() tarafından döndürülmüş bağlantı özkaynağı
function yaz sort $a	artan sıralama
function yaz sort $s	harf büyüklüğüne duyarlı sıralama
function yaz sort $d	azalan sıralama
function void yaz sort resource $id string $kural	sıralama kuralını belirler
function yaz wait $event	mantıksal bir değer
function yaz wait $seçenekler	şu seçenekleri içeren bir ilişkisel dizi: timeout saniye cinsinden zaman aşımı süresi
function yaz wait $timeout	saniye cinsinden zaman aşımı süresi
function mixed yaz wait	başarı durumunda true başarısızlık durumunda false döner
function mixed yaz wait array $seçenekler	z39
function string zend logo guid	phpe9568f35-d428-11d2-a769-00aa001acf42 dizgesini döndürür
function string zend logo guid	zend logo kimliğini d&ouml;nd&uuml;r&uuml;r
function int zend thread id	evre kimliğini bir tamsayı olarak döndürür
function int zend thread id	ge&ccedil;erli evre i&ccedil;in eşsiz bir betimleyici d&ouml;nd&uuml;r&uuml;r
function string zend version	zend motorunun sürüm numarasını bir dizge olarak döndürür
function string zend version	zend motorunun s&uuml;r&uuml;m&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
function zip close $zip	zip_open() ile açılmış bir zip dosyası
function void zip close resource $zip	bir zip dosya arşivini kapatır
function zip entry close $zip_girdisi	zip_entry_open() ile açılmış bir dizin girdisi
function bool zip entry close	başarı durumunda true başarısızlık durumunda false döner
function bool zip entry close resource $zip_girdisi	bir dizin girdisini kapatır
function zip entry filesize $zip_girdisi	zip_read() ile döndürülmüş bir dizin girdisi
function int zip entry filesize	dizin girdisinin uzunluğu
function int zip entry filesize resource $zip_girdisi	bir dizin girdisinin uzunluğunu d&ouml;nd&uuml;r&uuml;r
function zip entry read $zip_girdisi	zip_read() ile döndürülmüş bir dizin girdisi
function zip entry read $uzunluk	döndürülecek bayt sayısı
function string zip entry read	dosya sonuna gelinmişse false yoksa okunan veriyi bir dizge olarak döndürür
function string zip entry read resource $zip_girdisi int $uzunluk	bir a&ccedil;ık dizin girdisini okur
Imagick get Image Channel Distortions $channel	normalde kanal türü sabitleri nden biridir ancak bitsel işleçler kullanılarak birden fazla kanal belirtilebilir
Imagick get Image Channel Distortions $reference	imagick object containing the reference image
Imagick get Image Channel Distortions $metric	refer to this list of metric type constants
Imagick float get Image Channel Distortions	returns a double describing the channel distortion
Imagick float get Image Channel Distortions Imagick $reference int $metric int $channel	gets channel distortions
Iterator scalar key	başarı durumunda scalar türünde bir değer aksi takdirde null döner
Iterator scalar key	o anki elemanın anahtarını d&ouml;nd&uuml;r&uuml;r
Iterator void rewind	yineleyiciyi ilk elemana konumlandırır
Iterator boolean valid	dönüş değeri boolean türüne dönüştürüldükten sonra döndürülür
Iterator boolean valid	o anki konum ge&ccedil;erli mi diye bakar
PDO bool commit	başarı durumunda true başarısızlık durumunda false döner
PDO bool commit	bir toplu hareketi veritabanına g&ouml;nderir
PDO get Attribute $öznitelik	pdo::attr_* sabitlerinden biri
PDO mixed get Attribute	başarısızlık durumunda null yoksa istenen pdo özniteliğinin değerini döndürür
PDO mixed get Attribute int $öznitelik	bir veritabanı bağlantı &ouml;zniteliğinin değerini d&ouml;nd&uuml;r&uuml;r
PDO array get Available Drivers	pdo::getavailabledrivers() yöntemi pdo sürücü isimlerini içeren bir dizi döndürür
PDO array get Available Drivers	kullanılabilen pdo s&uuml;r&uuml;c&uuml;lerini i&ccedil;eren bir dizi d&ouml;nd&uuml;r&uuml;r
PDO last Insert Id $isim	kimliği döndürülecek sırama nesnesinin ismi
PDO string last Insert Id	isim değiştirgesinde bir sıralama nesnesi ismi belirtilmezse pdo::lastinsertid() veritabanına son yerleştirilen satırın satır kimliğini bir dizge olarak döndürür
PDO string last Insert Id string $isim	son yerleştirilen satırın veya sıradaki değerin kimliğini d&ouml;nd&uuml;r&uuml;r
PDO prepare $deyim	hedef veritabanı sunucusu için geçerli bir sql deyimi olmalıdır
PDO prepare $seçenekler	bu yöntemden döndürülen pdostatement nesnesi için atanacak öznitelik değerlerini isim= > değer çiftleri halinde içeren bir dizi
PDO PDOStatement prepare	veritabanı sunucusu deyimi başarıyla hazırlayabilmişse pdo::prepare() bir pdostatement nesnesi döndürür; aksi takdirde bir pdoexception istisnası oluşur
PDO PDOStatement prepare string $deyim array $seçenekler	&ccedil;alıştırılmak &uuml;zere bir deyimi hazırlar ve bir deyim nesnesi olarak d&ouml;nd&uuml;r&uuml;r
PDO quote $değiştirge_türü	ikincil bir önceleme tarzına sahip sürücüler için ipucu olarak bir veri türü belirtilir
PDO quote $dizge	öncelenecek dizge
PDO string quote	bir sql deyiminde aktarılmak üzere teorik olarak güvenli kabul edilen bir öncelenmiş dizge döndürür
PDO string quote string $dizge int $değiştirge_türü	bir sorguda kullanılmak &uuml;zere bir dizgeyi &ouml;nceler
PDO bool roll Back	başarı durumunda true başarısızlık durumunda false döner
PDO bool roll Back	bir toplu hareketi geri alır
PDO bool set Attribute	başarı durumunda true başarısızlık durumunda false döner
PDO bool set Attribute int $öznitelik mixed $değer	bir &ouml;znitelik tanımlar
PDOStatement bind Column $sütun	sütunun numarası veya ismi; sütun numaraları 1den başlar
PDOStatement bind Column $uzunluk	yer ayırmak için ipucu olarak kullanılır
PDOStatement bind Column $seçenekler	sürücü için isteğe bağlı değiştirgeler
PDOStatement bind Column $veri_türü	pdo::param_* sabitlerinden biri olarak veri türü
PDOStatement bind Column $değişken	sütun ile ilişkilendirilecek php değişkeninin ismi
PDOStatement bool bind Column	başarı durumunda true başarısızlık durumunda false döner
PDOStatement bool bind Column mixed $sütun mixed $değişken int $veri_türü int $uzunluk mixed $seçenekler	bir s&uuml;tunu bir php değişkeni ile ilişkilendirir
PDOStatement bind Value $değiştirge	değiştirge betimleyicisi
PDOStatement bind Value $veri_türü	pdo::param_* sabitlerinden biri olarak veri türü
PDOStatement bind Value $değer	değiştirge ile ilişkilendirilecek değer
PDOStatement bool bind Value	başarı durumunda true başarısızlık durumunda false döner
PDOStatement bool bind Value mixed $değiştirge mixed $değer int $veri_türü	bir değeri bir değiştirge ile ilişkilendirir
PDOStatement bool close Cursor	başarı durumunda true başarısızlık durumunda false döner
PDOStatement bool close Cursor	g&ouml;stericiyi kapatarak deyimin tekrar &ccedil;alıştırılabilmesini sağlar
PDOStatement execute $girdiler	çalıştırılacak sql deyimiyle ilişkilendirilmiş değiştirge sayısı kadar değer içeren bir dizi
PDOStatement bool execute	başarı durumunda true başarısızlık durumunda false döner
PDOStatement bool execute array $girdiler	bir hazır deyimi &ccedil;alıştırır
PDOStatement fetch $alım_tarzı	sonrakı satırın nasıl döndürüleceğini belirtmek için kullanılır
PDOStatement fetch $göst_yönü	kaydırılabilir göstericili bir pdostatement nesnesi için bu değer hangi satırın döndürüleceğini belirler
PDOStatement fetch $göst_başlangıcı	kaydırılabilir göstericili bir pdostatement nesnesi için göst_yönü değiştirgesinde pdo::fetch_ori_abs belirtilirse bu değer sonuç kümesinden alınacak mutlak satır numarasını belirler
PDOStatement mixed fetch	bu işlevin dönüş değeri alım türüne bağlıdır
PDOStatement mixed fetch int $alım_tarzı int $göst_yönü int $göst_başlangıcı	sonu&ccedil; k&uuml;mesindeki sonraki satırı d&ouml;nd&uuml;r&uuml;r
PDOStatement fetch Column $sütunnum	sütunun numarası
PDOStatement string fetch Column	sütun değerini bir dizge olarak döndürür
PDOStatement string fetch Column int $sütunnum	sonu&ccedil; k&uuml;mesindeki sonraki satırdan tek bir s&uuml;tun d&ouml;nd&uuml;r&uuml;r
PDOStatement fetch Object $sınıfadı	oluşturulan sınıfın ismi; stdclass öntanımlı değerdir
PDOStatement fetch Object $değiştirgeler	bu dizinin elemanları kurucuya değiştirge olarak aktarılır
PDOStatement mixed fetch Object	sütun isimlerinin özellik isimlerine denk düştüğü sınıfın bir örneğini döndürür
PDOStatement mixed fetch Object string $sınıfadı array $değiştirgeler	sonraki satırı bir nesne olarak d&ouml;nd&uuml;r&uuml;r
PDOStatement mixed get Attribute	özniteliğin değeri
PDOStatement mixed get Attribute int $öznitelik	bir deyim &ouml;zniteliğinin değerini d&ouml;nd&uuml;r&uuml;r
PDOStatement bool next Rowset	başarı durumunda true başarısızlık durumunda false döner
PDOStatement bool next Rowset	&ccedil;ok satır k&uuml;meli bir sonu&ccedil;taki sonraki satır k&uuml;mesini ge&ccedil;erli satır k&uuml;mesi yapar
PDOStatement bool set Attribute	başarı durumunda true başarısızlık durumunda false döner
PDOStatement bool set Attribute int $öznitelik mixed $değer	bir deyim &ouml;zniteliğini tanımlar
Reflection export $yansıtıcı	ihraç edilecek reflection nesnesi
Reflection export $ihracet	true belirtilirse yansıtmak yerine ihrac eder
Reflection void export Reflector $yansıtıcı string $ihracet	sınıfı ihra&ccedil; eder
ReflectionClass construct $değiştirge	yansıtılacak sınıf
ReflectionClass string construct string $değiştirge	bir reflectionclass nesnesi oluşturur
ReflectionClass mixed get Constant string $isim	tanımlı sabitleri d&ouml;nd&uuml;r&uuml;r
ReflectionClass array get Constants	sabitleri içeren bir dizi
ReflectionClass array get Constants	sabitleri d&ouml;nd&uuml;r&uuml;r
ReflectionClass object get Constructor	bir reflectionmethod nesnesi
ReflectionClass object get Constructor	kurucuyu d&ouml;nd&uuml;r&uuml;r
ReflectionClass array get Default Properties	öntanımlı özellikleri içeren bir dizi
ReflectionClass array get Default Properties	&ouml;ntanımlı &ouml;zellikleri d&ouml;nd&uuml;r&uuml;r
ReflectionClass string get Doc Comment	varsa belgelelndirici açıklamalar yoksa false döner
ReflectionClass string get Doc Comment	belgelendirici a&ccedil;ıklamaları d&ouml;nd&uuml;r&uuml;r
ReflectionClass int get End Line	bir kullanıcı tanımlı sınıfın son satırının numarasını döndürür
ReflectionClass int get End Line	son satırın numarasını d&ouml;nd&uuml;r&uuml;r
ReflectionClass ReflectionExtension get Extension	bir reflectionextension nesnesi
ReflectionClass ReflectionExtension get Extension	eklenti bilgilerini d&ouml;nd&uuml;r&uuml;r
ReflectionClass string get Extension Name	eklentinin ismi
ReflectionClass string get Extension Name	eklentinin ismini d&ouml;nd&uuml;r&uuml;r
ReflectionClass string get File Name	dosya adı
ReflectionClass string get File Name	bir dosya adı d&ouml;nd&uuml;r&uuml;r
ReflectionClass array get Interface Names	arayüz isimlerini bir sayısal indisli dizi olarak döndürür
ReflectionClass array get Interface Names	aray&uuml;z isimlerini d&ouml;nd&uuml;r&uuml;r
ReflectionClass array get Interfaces	anahtarların arayüz isimlerini değerlerin ise reflectionclass nesnelerini içerdiği bir dizi döner
ReflectionClass array get Interfaces	aray&uuml;zleri d&ouml;nd&uuml;r&uuml;r
ReflectionClass get Method $isim	bilgileri yansıtılacak yöntemin ismi
ReflectionClass object get Method	bir reflectionmethod nesnesi
ReflectionClass object get Method string $isim	bir y&ouml;ntemle ilgili bir reflectionmethod nesnesi d&ouml;nd&uuml;r&uuml;r
ReflectionClass string get Name	sınıf ismi
ReflectionClass string get Name	sınıf ismini d&ouml;nd&uuml;r&uuml;r
ReflectionClass object get Parent Class	bir reflectionclass nesnesi
ReflectionClass object get Parent Class	ebeveyn sınıfı d&ouml;nd&uuml;r&uuml;r
ReflectionClass get Properties $süzgeç	istenen özellik türlerini seçmek için seçimlik süzgeç
ReflectionClass array get Properties	reflectionproperty nesnelerini içeren bir dizi
ReflectionClass array get Properties int $süzgeç	&ouml;zellikleri d&ouml;nd&uuml;r&uuml;r
ReflectionClass get Property $isim	özelliğin ismi
ReflectionClass ReflectionProperty get Property	bir reflectionproperty nesnesi
ReflectionClass ReflectionProperty get Property string $isim	bir &ouml;zellik d&ouml;nd&uuml;r&uuml;r
ReflectionClass get Static Property Value $isim	duruk özelliğin ismi
ReflectionClass mixed get Static Property Value string $isim string $öntanımlı	duruk &ouml;zelliğin değerini d&ouml;nd&uuml;r&uuml;r
ReflectionClass has Constant $isim	bakılacak sabitin ismi
ReflectionClass bool has Constant	sabit tanımlıysa true değilse false
ReflectionClass bool has Constant string $isim	sabit tanımlı mı diye bakar
ReflectionClass has Property $isim	bakılacak özelliğin ismi
ReflectionClass bool has Property	özellik tanımlıysa true yoksa false döner
ReflectionClass bool has Property string $isim	&ouml;zellik tanımlı mı diye bakar
ReflectionClass implements Interface $arayüz	bakılacak arayüzün ismi
ReflectionClass bool implements Interface	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool implements Interface string $arayüz	aray&uuml;z ger&ccedil;eklenmiş mi diye bakar
ReflectionClass bool in Namespace	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool in Namespace	sınıf isim alanında mı diye bakar
ReflectionClass bool is Abstract	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool is Abstract	sınıf soyut mu diye bakar
ReflectionClass bool is Final	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool is Final	sınıf bir final sınıf mı diye bakar
ReflectionClass is Instance $nesne	bakılacak nesne
ReflectionClass bool is Instance	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool is Instance string $nesne	sınıf bir nesne &ouml;rneği mi diye bakar
ReflectionClass bool is Iterateable	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool is Iterateable	sınıf yinelenebilir mi diye bakar
ReflectionClass is Subclass Of $sınıf	olası ebeveyn sınıf
ReflectionClass bool is Subclass Of	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool is Subclass Of string $sınıf	sınıf bir alt sınıf mı diye bakar
ReflectionClass bool is User Defined	başarı durumunda true başarısızlık durumunda false döner
ReflectionClass bool is User Defined	sınıf bir kullanıcı tanımlı sınıf mı diye bakar
ReflectionClass new Instance $değiştirgeler	call_user_func() işlevindeki gibi işleve istenen sayıda değiştirge aktarılabilir
ReflectionClass object new Instance mixed $değiştirgeler	yeni &ouml;rnek
ReflectionClass object new Instance Args array $değiştirgeler	yeni &ouml;rnek değiştirgeleri
ReflectionClass set Static Property Value $isim	özellik adı
ReflectionClass set Static Property Value $değer	özelliğin yeni değeri
ReflectionClass void set Static Property Value string $isim string $değer	duruk &ouml;zelliğe değer atar
ReflectionClass string to String	bir dizge
ReflectionClass string to String	dizgesel tepkiyi g&ouml;rselleştirir
ReflectionExtension void clone	nesnenin bir kopyasını oluşturur
ReflectionExtension construct $isim	eklentini ismi
ReflectionExtension string construct	bir reflectionextension nesnesi
ReflectionExtension string construct string $isim	bir reflectionextension nesnesi oluşturur
ReflectionExtension export $isim	ihraç edilecek reflection nesnesi
ReflectionExtension export $ihracet	true belirtilirse yansıtmak yerine ihrac eder
ReflectionExtension string export	true belirtilirse bir dizge yoksa null döner
ReflectionExtension string export string $isim string $ihracet	sınıfı ihra&ccedil; eder
ReflectionExtension array get Classes	bir reflectionclass nesneleri dizisi
ReflectionExtension array get Classes	eklentinin sınıflarını d&ouml;nd&uuml;r&uuml;r
ReflectionExtension array get Dependencies	bağımlılık isimlerinin anahtar değerlerin ise ya required gerekli ya da conflicts çelişen olduğu bir ilişkisel dizi
ReflectionExtension array get Dependencies	bağımlılıkları d&ouml;nd&uuml;r&uuml;r
ReflectionExtension array get Functions	reflectionfunction nesnelerinden oluşan bir ilişkisel dizi
ReflectionExtension array get Functions	eklenti işlevlerini d&ouml;nd&uuml;r&uuml;r
ReflectionExtension array get INIEntries	yönerge isimlerinin anahtar değerlerinin değer olduğu bir ilişkisel dizi döner
ReflectionExtension array get INIEntries	eklentinin ini girdilerini d&ouml;nd&uuml;r&uuml;r
ReflectionExtension string to String	bir dizge
ReflectionExtension string to String	dizgesel tepkiyi g&ouml;rselleştirir
ReflectionFunction construct $name	yansıtılılacak işlevin ismi
ReflectionFunction string construct string $isim	bir reflectionfunction nesnesi oluşturur
ReflectionFunction invoke $değiştirgeler	işleve aktarılacak değiştirge listesi
ReflectionFunction mixed invoke string $değiştirgeler	işlevi &ccedil;ağırır
ReflectionFunction invoke Args $değiştirgeler	çağrılacak değiştirgeler
ReflectionFunction mixed invoke Args array $değiştirgeler	işlev değiştirgelerini &ccedil;ağırır
ReflectionFunction bool is Disabled	işlev iptal edilmişse true yoksa false döner
ReflectionFunction bool is Disabled	işlevin iptal edilip edilmediğine bakar
ReflectionFunction string to String	bir dizge
ReflectionFunction string to String	dizgesel tepkiyi g&ouml;rselleştirir
ReflectionFunctionAbstract string get Doc Comment	belgelendirici açıklamalar varsa olanlar yoksa false döner
ReflectionFunctionAbstract string get Doc Comment	belgelendirici a&ccedil;ıklamaları d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract ReflectionExtension get Extension	bir reflectionextension nesnesi döner
ReflectionFunctionAbstract ReflectionExtension get Extension	eklenti bilgilerini d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract string get Extension Name	eklenti ismi
ReflectionFunctionAbstract string get Extension Name	eklenti ismini d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract string get Name	işlev ismi
ReflectionFunctionAbstract string get Name	işlev ismini d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract string get Namespace Name	isim alanı adı
ReflectionFunctionAbstract string get Namespace Name	isim alanı adını d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract int get Number Of Parameters	değiştirge sayısı
ReflectionFunctionAbstract int get Number Of Parameters	değiştirge sayısını d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract int get Number Of Required Parameters	zorunlu değiştirge sayısı
ReflectionFunctionAbstract int get Number Of Required Parameters	zorunlu değiştirge sayısını d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract array get Parameters	bir reflectionparameter nesnesi döner
ReflectionFunctionAbstract array get Parameters	değiştirgeleri d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract string get Short Name	işlevin kısa ismi
ReflectionFunctionAbstract string get Short Name	işlevin kısa ismini d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract int get Start Line	başlangıç satır numarası
ReflectionFunctionAbstract int get Start Line	başlangı&ccedil; satır numarasını d&ouml;nd&uuml;r&uuml;r
ReflectionFunctionAbstract bool in Namespace	işlev isim alanında ise true değilse false döner
ReflectionFunctionAbstract bool in Namespace	işlev isim alanına ait mi diye bakar
ReflectionFunctionAbstract bool is Closure	bir anonim işlev ise true yoksa false döner
ReflectionFunctionAbstract bool is Closure	bir anonim işlev mi diye bakar
ReflectionFunctionAbstract bool is Deprecated	işlevin kullanımı önerilmiyorsa true yoksa false döner
ReflectionFunctionAbstract bool is Deprecated	kullanımı &ouml;nerilmiyor mu diye bakar
ReflectionFunctionAbstract bool returns Reference	işlev dönüş değeri gönderimli ise true yoksa false döner
ReflectionFunctionAbstract bool returns Reference	işlev d&ouml;n&uuml;ş değeri g&ouml;nderimli mi diye bakar
ReflectionFunctionAbstract void to String	dizgesel tepkiyi g&ouml;rselleştirir
ReflectionMethod string construct string $sınıf_veya_yöntem string $isim	yeni bir reflectionmethod nesnesi oluşturur
ReflectionMethod export $sınıf	sınıf ismi
ReflectionMethod export $isim	yöntem ismi
ReflectionMethod export $ihracet	true belirtilirse yansıtmak yerine ihrac eder
ReflectionMethod string export	true belirtilirse bir dizge yoksa null döner
ReflectionMethod string export string $sınıf string $isim bool $return	sınıfı ihra&ccedil; eder
ReflectionMethod ReflectionClass get Declaring Class	bir reflectionclass nesnesi
ReflectionMethod ReflectionClass get Declaring Class	bildiren sınıfı d&ouml;nd&uuml;r&uuml;r
ReflectionMethod int get Modifiers	değiştirici sayısı
ReflectionMethod int get Modifiers	değiştirici sayısını d&ouml;nd&uuml;r&uuml;r
ReflectionMethod void get Prototype	bildirimi d&ouml;nd&uuml;r&uuml;r
ReflectionMethod invoke $değiştirgeler	aktarılacak değiştirge listesi
ReflectionMethod invoke $nesne	çağrılacak nesne
ReflectionMethod mixed invoke object $nesne string $değiştirgeler	y&ouml;ntemi &ccedil;ağırır
ReflectionMethod bool is Abstract	yöntem soyut ise true yoksa false döner
ReflectionMethod bool is Abstract	y&ouml;ntem soyut mu diye bakar
ReflectionMethod bool is Constructor	yöntem bir kurucu yöntem ise true yoksa false
ReflectionMethod bool is Constructor	y&ouml;ntem bir kurucu mu diye bakar
ReflectionMethod bool is Final	yöntem final olarak bildirilmişse true yoksa false
ReflectionMethod bool is Final	y&ouml;ntem final olarak mı bildirilmiş diye bakar
ReflectionMethod bool is Private	yöntem private olarak bildirilmişse true yoksa false
ReflectionMethod bool is Private	y&ouml;ntem private olarak mı bildirilmiş diye bakar
ReflectionMethod bool is Protected	yöntem protected olarak bildirilmişse true yoksa false
ReflectionMethod bool is Protected	y&ouml;ntem protected olarak mı bildirilmiş diye bakar
ReflectionMethod bool is Public	yöntem public olarak bildirilmişse true yoksa false
ReflectionMethod bool is Public	y&ouml;ntem public olarak mı bildirilmiş diye bakar
ReflectionMethod bool is Static	yöntem bir durum yöntem ise true yoksa false
ReflectionMethod bool is Static	y&ouml;ntem bir duruk y&ouml;ntem mi diye bakar
ReflectionObject export $ihracet	true belirtilirse yansıtmak yerine ihrac eder
ReflectionObject export $değiştirge	ihraç edilecek reflection nesnesi
ReflectionObject string export	true belirtilirse bir dizge yoksa null döner
ReflectionObject string export string $değiştirge bool $ihracet	sınıfı ihra&ccedil; eder
ReflectionParameter bool allows Null	null değere izin veriliyorsa true yoksa false
ReflectionParameter bool allows Null	null değere izin veriliyor mu diye bakar
ReflectionParameter export $değiştirge	değiştirge ismi
ReflectionParameter export $işlev	işlev ismi
ReflectionParameter export $ihracet	true belirtilirse yansıtmak yerine ihrac eder
ReflectionParameter string export	bir dizge
ReflectionParameter string export string $işlev string $değiştirge bool $ihracet	sınıfı ihra&ccedil; eder
ReflectionParameter ReflectionClass get Declaring Class	bir reflectionclass nesnesi
ReflectionParameter ReflectionClass get Declaring Class	bildiren sınıfı d&ouml;nd&uuml;r&uuml;r
ReflectionParameter ReflectionFunction get Declaring Function	bir reflectionfunction nesnesi
ReflectionParameter ReflectionFunction get Declaring Function	bildiren işlevi d&ouml;nd&uuml;r&uuml;r
ReflectionParameter mixed get Default Value	değiştirgenin öntanımlı değeri
ReflectionParameter mixed get Default Value	değiştirgenin &ouml;ntanımlı değerini d&ouml;nd&uuml;r&uuml;r
ReflectionParameter string get Name	yansıtılan değiştirgenin ismi
ReflectionParameter string get Name	değiştirgenin ismini d&ouml;nd&uuml;r&uuml;r
ReflectionParameter int get Position	değiştirgenin konumu; soldan sağa sayılır ilk değiştirgenin konumu 0dır
ReflectionParameter int get Position	değiştirgenin konumunu d&ouml;nd&uuml;r&uuml;r
ReflectionParameter bool is Array	değiştirge değeri bir dizi olacaksa true yoksa false
ReflectionParameter bool is Array	değiştirge değeri bir dizi mi olacak diye bakar
ReflectionParameter bool is Default Value Available	öntanımlı değer kullanılabiliyorsa true yoksa false
ReflectionParameter bool is Default Value Available	&ouml;ntanımlı bir değerin kullanılabilir olup olmadığına bakar
ReflectionParameter bool is Optional	değiştirge seçimlikse true yoksa false
ReflectionParameter bool is Optional	değiştirge se&ccedil;imlik mi diye bakar
ReflectionParameter bool is Passed By Reference	değiştirge gönderimli aktarılabiliyorsa true yoksa false
ReflectionParameter bool is Passed By Reference	değiştirge g&ouml;nderimli aktarılabilir mi diye bakar
ReflectionParameter string to String	bir dizge
ReflectionParameter string to String	dizgesel tepkiyi g&ouml;rselleştirir
ReflectionProperty void clone	&ouml;zelliği kopyalar
ReflectionProperty export $isim	özelliğin ismi
ReflectionProperty export $sınıf	ihraç edilecek reflection nesnesi
ReflectionProperty export $ihracet	true belirtilirse yansıtmak yerine ihrac eder
ReflectionProperty string export mixed $sınıf string $isim bool $ihracet	&ouml;zelliği ihra&ccedil; eder
ReflectionProperty ReflectionClass get Declaring Class	bir reflectionclass nesnesi
ReflectionProperty ReflectionClass get Declaring Class	bildiren sınıfı d&ouml;nd&uuml;r&uuml;r
ReflectionProperty int get Modifiers	değiştirici sayısı
ReflectionProperty int get Modifiers	değiştirici sayısını d&ouml;nd&uuml;r&uuml;r
ReflectionProperty get Value $özellik	yansıtılan nesne
ReflectionProperty mixed get Value	özelliğin değeri
ReflectionProperty mixed get Value string $özellik	&ouml;zelliğin değerini d&ouml;nd&uuml;r&uuml;r
ReflectionProperty bool is Public	özellik public olarak bildirilmişse true yoksa false
ReflectionProperty bool is Public	&ouml;zellik public olarak mı bildirilmiş diye bakar
ReflectionProperty bool is Static	özellik duruk ise true yoksa false
ReflectionProperty bool is Static	&ouml;zellik duruk mu diye bakar
ReflectionProperty set Value $nesne	bir reflectionproperty nesnesi
ReflectionProperty set Value $değer	yeni değer
ReflectionProperty void set Value object $nesne mixed $değer	&ouml;zelliğe değer atar
Reflector string export	sınıfı ihra&ccedil; eder
Reflector string to String	bir dizge
Reflector string to String	dizgesel tepkiyi g&ouml;rselleştirir
Serializable unserialize $dizgeleşmiş	nesnenin dizgesel gösterimi
Serializable mixed unserialize	dizgeleşmiş nesnenin yeniden oluşturulan özgün halini döndürür
Serializable mixed unserialize string $dizgeleşmiş	dizgeleştirilmiş nesneyi yeniden oluşturur
SoapClient Soap Client $options	an array of options
SoapClient Soap Client $wsdl	uri of the wsdl file or null if working in non-wsdl mode
SoapClient mixed Soap Client mixed $wsdl array $options	soapclient constructor
SoapHeader string construct string $namespace string $name mixed $data bool $mustunderstand string $actor	soapheader constructor
SQLite3 int changes	işlem gören satır sayısını bir tamsayı olarak döndürür
SQLite3 int changes	veritabanında son sql deyimi ile işlem g&ouml;ren satır sayısını d&ouml;nd&uuml;r&uuml;r
SQLite3 construct $dosya	sqlite veritabanını içeren dosyanın yolu
SQLite3 construct $encryption_key	sqlite veritabanını şifrelemek / şifresini çözmek için kullanılan şifreleme anahtarı
SQLite3 construct $seçenekler	sqlite veritabanının nasıl açılacağını belirleyen seçimlik seçenekler
SQLite3 string construct	işlem başarılı olursa bir sqlite3 nesnesi döner
SQLite3 string construct string $dosya int $seçenekler string $anahtar	yeni bir sqlite3 nesnesini ilklendirdikten sonra bir sqlite veritabanını a&ccedil;ar
SQLite3 create Aggregate $sekme_işlevi	verinin toplanacağı öğelerin her biriyle çalıştırılacak php işlevinin veya kullanıcı tanımlı işlevin ismi
SQLite3 create Aggregate $isim	oluşturulacak veya yeniden tanımlanacak toparlayıcı sql işlevinin ismi
SQLite3 create Aggregate $değ_sayısı	sql işlevinin alacağı değiştirge sayısı
SQLite3 create Aggregate $son_işlev	veri toplama işlemi bittikten sonra çalıştırılacak php işlevinin veya kullanıcı tanımlı işlevin ismi
SQLite3 bool create Aggregate	işlev başarıyla oluşturulmuşsa true yoksa false döner
SQLite3 bool create Aggregate string $isim mixed $sekme_işlevi mixed $son_işlev int $değ_sayısı	toparlayıcı bir sql işlevi olarak kullanılmak &uuml;zere bir php işlevini kayda ge&ccedil;irir
SQLite3 escape String $veri	öncelenecek dizge
SQLite3 string escape String	bir sql deyiminde güvenle kullanılabilir hale getirilmiş dizgeyi döndürür
SQLite3 string escape String string $veri	gerektiği gibi &ouml;ncelenmiş bir dizge d&ouml;nd&uuml;r&uuml;r
SQLite3 string last Error Msg	başarısızlığın sebebini açıklayan iletiyi içeren bir dizge döner
SQLite3 string last Error Msg	başarısız olan son sqlite isteği ile ilgili ingilizce iletiyi d&ouml;nd&uuml;r&uuml;r
SQLite3 load Extension $kütüphane	yüklenecek paylaşımlı kütüphanenin ismi
SQLite3 bool load Extension	eklenti başarıyla yüklendiği takdirde true yoksa false döner
SQLite3 bool load Extension string $kütüphane	belirtilen sqlite eklenti k&uuml;t&uuml;phanesini y&uuml;klemeye &ccedil;alışır
SQLite3 open $dosya	sqlite veritabanını içeren dosyanın yolu
SQLite3 open $anahtar	sqlite veritabanını şifrelemek / şifresini çözmek için kullanılan şifreleme anahtarı
SQLite3 open $seçenekler	sqlite veritabanının nasıl açılacağını belirleyen seçimlik seçenekler
SQLite3 bool open	veritabanı açılabilirse true yoksa false döner
SQLite3 bool open string $dosya int $seçenekler string $anahtar	bir sqlite veritabanını a&ccedil;ar
SQLite3 query $sorgu	çalıştırılacak sql sorgusu
SQLite3 SQLite3Result query	sorgu sonuç döndürürse bir sqlite3result nesnesi başarılı olur ancak sonuç döndürmezse true aksi takdirde false döner
SQLite3 SQLite3Result query string $sorgu	bir sql sorgusu &ccedil;alıştırır
SQLite3 query Single $sorgu	çalıştırılacak sql sorgusu
SQLite3 query Single $tüm_satır	öntanımlı olarak sorgudan ilk sütunun değeri döner
SQLite3 mixed query Single	bir hata oluşmuşsa false tüm_satır değiştirgesinde true belirtilmişse ilk satırı içeren bir dizi yoksa ilk sütunun değeri bir dizge olarak döner
SQLite3 mixed query Single string $sorgu bool $tüm_satır	bir sorgu &ccedil;alıştırıp tek bir sonu&ccedil; d&ouml;nd&uuml;r&uuml;r
SQLite3 array version	versionstring ve versionnumber anahtarlarına sahip bir ilişkisel dizi döndürür
SQLite3 array version	sqlite3 k&uuml;t&uuml;phanesinin s&uuml;r&uuml;m numarasını dizge ve sayı olarak d&ouml;nd&uuml;r&uuml;r
SQLite3Result column Name $sütunnum	sütunun sıra numarası
SQLite3Result string column Name	belirtilen sütunun ismini bir dizge olarak döndürür
SQLite3Result string column Name int $sütunnum	numarası belirtilen s&uuml;tunun ismini d&ouml;nd&uuml;r&uuml;r
SQLite3Result column Type $sütunnum	sütunun sıra numarası
SQLite3Result int column Type	sütunun veri türü olarak şu sabitlerden biri döner: sqlite3_integer sqlite3_float sqlite3_text sqlite3_blob sqlite3_null
SQLite3Result int column Type int $sütunnum	numarası belirtilen s&uuml;tunun t&uuml;r&uuml;n&uuml; d&ouml;nd&uuml;r&uuml;r
SQLite3Result fetch Array $kip	döndürülecek dizinin nasıl düzenleneceğini belirler
SQLite3Result array fetch Array	satır isimleriyle veya satır numaraları ile ya da her ikisiyle de indislenmiş bir dizi döner
SQLite3Result array fetch Array int $kip	sonu&ccedil; satırını bir dizi olarak d&ouml;nd&uuml;r&uuml;r
SQLite3Result bool finalize	true döner
SQLite3Result bool finalize	sonu&ccedil; k&uuml;mesini kapatır
SQLite3Stmt bind Param $değişken	değiştirge ile ilişkilendirilecek değişkenin ismi
SQLite3Stmt bind Param $değiştirge	deyim değişkeni ile ilişkilendirilecek değiştirge
SQLite3Stmt bind Param $tür	ilişkilendirilecek değiştirgenin veri türü sqlite3_integer : işaretli tamsayı
SQLite3Stmt bool bind Param	değiştirge deyim değişkeni ile ilişkilendirilebilmişse true yoksa false döner
SQLite3Stmt bool bind Param string $değişken mixed $değiştirge int $tür	bir değiştirgeyi bir deyim değişkeni ile ilişkilendirir
SQLite3Stmt bind Value $değişken	değer ile ilişkilendirilecek deyim değişkeninin ismi
SQLite3Stmt bind Value $değer	deyim değişkeni ile ilişkilendirilecek değer
SQLite3Stmt bind Value $tür	ilişkilendirilecek değerin veri türü
SQLite3Stmt bool bind Value	değer deyim değişkeni ile ilişkilendirilebilmişse true yoksa false döner
SQLite3Stmt bool bind Value string $değişken mixed $değer int $tür	bir değiştirgenin değerini bir deyim değişkeni ile ilişkilendirir
SQLite3Stmt bool clear	tüm değiştirge ilişkilendirmelerini temizlenebilmişse true yoksa false döner
SQLite3Stmt bool clear	t&uuml;m değiştirge ilişkilendirmelerini temizler
SQLite3Stmt bool close	true döner
SQLite3Stmt bool close	hazır deyimi kapatır
SQLite3Stmt SQLite3Result execute	işlem başarılı olmuşsa bir sqlite3result nesnesi yoksa false döner
SQLite3Stmt SQLite3Result execute	hazır deyimi &ccedil;alıştırır ve sonu&ccedil; k&uuml;mesini bir nesne olarak d&ouml;nd&uuml;r&uuml;r
SQLite3Stmt int param Count	hazır deyimdeki değişken sayısını bir tamsayı olarak döndürür
SQLite3Stmt int param Count	hazır deyimdeki değişken sayısını d&ouml;nd&uuml;r&uuml;r
streamWrapper - construct	yeni bir akım sarmalayıcı oluşturur
streamWrapper bool dir closedir	başarı durumunda true başarısızlık durumunda false döner
streamWrapper bool dir closedir	dizin tanıtıcısını kapatır
streamWrapper dir opendir $seçenekler	safe_mode un etkin olup olmadığı 0x04
streamWrapper dir opendir $url	opendir() işlevine aktarılacak url
streamWrapper bool dir opendir	başarı durumunda true başarısızlık durumunda false döner
streamWrapper bool dir opendir string $url int $seçenekler	dizin tanıtıcısı a&ccedil;ar
streamWrapper string dir readdir	varsa sonraki dosya ismini yoksa false döndürmelidir
streamWrapper string dir readdir	dizinden bir girdi okur
streamWrapper bool dir rewinddir	başarı durumunda true başarısızlık durumunda false döner
streamWrapper bool dir rewinddir	dizin tanıtıcısını dizin başlangıcına konumlar
streamWrapper rename $yenisi	dosyanın yeni urlsi
streamWrapper rename $eskisi	mevcut dosyanın urlsi
streamWrapper bool rename	başarı durumunda true başarısızlık durumunda false döner
streamWrapper bool rename string $eskisi string $yenisi	bir dosya veya dizinin ismini değiştirir
streamWrapper rmdir $seçenekler	stream_mkdir_recursive gibi değerlerin bit maskesi
streamWrapper rmdir $url	silinecek dizinin urlsi
streamWrapper bool rmdir	başarı durumunda true başarısızlık durumunda false döner
streamWrapper bool rmdir string $url int $seçenekler	bir dizini siler
streamWrapper stream cast $cast_as	stream_cast() ı stream_select() çağırıyorsa stream_cast_for_select veya stream_cast() başka kullanımlar için çağrılıyorsa stream_cast_as_stream olabilir
streamWrapper resource stream cast	ya sarmalayıcı tarafından kullanılan temel akım özkaynağı ya da false dönmelidir
streamWrapper resource stream cast int $cast_as	temel &ouml;zkaynağı d&ouml;nd&uuml;r&uuml;r
streamWrapper bool stream eof	oku / yaz konumu akımın sonundaysa ve okunacak başka veri kalmamışsa true yoksa false dönmelidir
streamWrapper bool stream eof	dosya g&ouml;stericisinin dosya sonunda olup olmadığına bakar
streamWrapper bool stream flush	önbellekli veri başarıyla bir saklama alanına aktarılmışsa veya saklanacak bir veri yoksa true dönmesi gerekir
streamWrapper bool stream flush	&ccedil;ıktıyı boşaltır
streamWrapper stream open $açık_yol	seçenekler değiştirgesine stream_use_path atanmış ve url başarıyla açılmışsa açık_yol değiştirgesine açılan dosya veya özkaynağın tam yolunun yerleştirilmesi gerekir
streamWrapper stream open $seçenekler	akım arayüzü tarafından atanmış ek seçenekler aşağıdaki değerlerin birleşiminden oluşan bir bit maskesi olarak belirtilir: seçenek açıklama stream_use_path url göreli ise özkaynak include_path kullanılarak aranır
streamWrapper stream open $kip	dosyayı açma amacını belirten kip; ayrıntılar için fopen() işlevine bakınız
streamWrapper stream open $url	özgün işleve aktarılacak url belirtilir
streamWrapper bool stream open	başarı durumunda true başarısızlık durumunda false döner
streamWrapper bool stream open string $url string $kip int $seçenekler string $açık_yol	bir dosya veya url a&ccedil;ar
streamWrapper stream read $sayı	geçerli konumdan okunacak bayt sayısı
streamWrapper string stream read	akımda sayı bayttan daha az bayt varsa olan döndürülür
streamWrapper string stream read int $sayı	akımdan veri okur
streamWrapper stream seek $nereden	olası değerler: seek_set - konum başlangıç ıncı bayta ayarlanır
streamWrapper stream seek $başlangıç	gidilecek akım başlangıcı
streamWrapper bool stream seek	konuma gidilebilmişse true yoksa false dönmelidir
streamWrapper bool stream seek int $başlangıç int $nereden	akım &uuml;zerinde belli bir konuma gidilir
streamWrapper stream write $veri	sarmalayıcının akımına yazılacak veri
streamWrapper int stream write	akımda başarıyla saklanan bayt sayısı döner
streamWrapper int stream write string $veri	akıma yazar
streamWrapper unlink $dosya	silinecek dosyanın yolu urlsi
streamWrapper bool unlink	başarı durumunda true başarısızlık durumunda false döner
streamWrapper bool unlink string $dosya	bir dosyayı siler
tidy construct $ayarlar	bir dizge veya bir dizi olarak belirtilebilir
tidy construct $include_path_kullan	dosya include_path yönergesinde belirtilen yollarda aranır
tidy construct $dosya	bu değiştirge belirtilmişse işlev tidy::parsefile() işlevi gibi davranarak dosyayı okuyup nesneyi bu içerikten ilklendirir
tidy construct $kodlama	belge girdi çıktı kodlaması belirtilir
tidy tidy construct	yeni tidy nesnesi
tidy tidy construct string $dosya mixed $ayarlar string $kodlama bool $include_path_kullan	yeni bir tidy nesnesi oluşturur
tidyNode tidyNode get Parent	düğümün bir ebeveyni varsa bir tidynode nesnesi aksi takdirde null döner
tidyNode tidyNode get Parent	ge&ccedil;erli d&uuml;ğ&uuml;m&uuml;n ebeveynini d&ouml;nd&uuml;r&uuml;r
tidyNode bool has Children	düğümün çocukları varsa true yoksa false döner
tidyNode bool has Children	d&uuml;ğ&uuml;m&uuml;n &ccedil;ocukları olup olmadığına bakar
tidyNode bool has Siblings	düğümün kardeşleri varsa true yoksa false döner
tidyNode bool has Siblings	d&uuml;ğ&uuml;m&uuml;n kardeşleri olup olmadığına bakar
tidyNode bool is Asp	düğüm bir asp düğümü ise true değilse false döner
tidyNode bool is Asp	d&uuml;ğ&uuml;m&uuml;n bir asp d&uuml;ğ&uuml;m&uuml; olup olmadığına bakar
tidyNode bool is Comment	düğüm bir açıklama düğümü ise true değilse false döner
tidyNode bool is Comment	d&uuml;ğ&uuml;m bir a&ccedil;ıklama d&uuml;ğ&uuml;m&uuml; m&uuml; diye bakar
tidyNode bool is Html	düğüm bir html belge parçası ise true değilse false döner
tidyNode bool is Html	d&uuml;ğ&uuml;m&uuml;n bir html belge par&ccedil;ası olup olmadığına bakar
tidyNode bool is Jste	düğüm bir jste düğümü ise true değilse false döner
tidyNode bool is Jste	d&uuml;ğ&uuml;m&uuml;n bir jste d&uuml;ğ&uuml;m&uuml; olup olmadığına bakar
tidyNode bool is Php	düğüm bir php düğümü ise true değilse false döner
tidyNode bool is Php	d&uuml;ğ&uuml;m&uuml;n bir php d&uuml;ğ&uuml;m&uuml; olup olmadığına bakar
XMLReader DOMNode expand	hata durumunda false aksi takdirde elde edilen domnode nesnesi döner
XMLReader DOMNode expand	ge&ccedil;erli d&uuml;ğ&uuml;m&uuml;n bir kopyasını bir dom nesnesi olarak d&ouml;nd&uuml;r&uuml;r
XMLReader get Attribute $isim	özniteliğin ismi
XMLReader string get Attribute	ismi belirtilen özniteliğin değerini bir dizge olarak döndürür
XMLReader string get Attribute string $isim	ismi belirtilen &ouml;zniteliğin değerini d&ouml;nd&uuml;r&uuml;r
XMLReader get Attribute No $indis	özniteliğin konumu
XMLReader string get Attribute No	indisi belirtilen özniteliğin değerini bir dizge olarak döndürür
XMLReader string get Attribute No int $index	indisi belirtilen &ouml;zniteliğin değerini d&ouml;nd&uuml;r&uuml;r
XMLReader get Attribute Ns $isim	özniteliğin yerel ismi
XMLReader get Attribute Ns $isimalanı	isim alanını betimleyen adres
XMLReader string get Attribute Ns	ismi ve isim alanı belirtilen özniteliğin değerini bir dizge olarak döndürür
XMLReader string get Attribute Ns string $isim string $isimalanı	ismi ve isim alanı belirtilen &ouml;zniteliğin değerini d&ouml;nd&uuml;r&uuml;r
XMLReader get Parser Property $özellik	çözümleyici seçeneği sabitleri nden biri
XMLReader bool get Parser Property	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool get Parser Property int $özellik	belirtilen &ouml;zelliğin tanımlı olup olmadığına bakar
XMLReader lookup Namespace $önek	önek olarak kullanılan dizge
XMLReader bool lookup Namespace	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool lookup Namespace string $önek	bir &ouml;nek i&ccedil;in isim alanına bakar
XMLReader bool move To Element	imleç bir özniteliğin üzerinde değilse veya işlem başarısız olursa false yoksa true döner
XMLReader bool move To Element	imleci ge&ccedil;erli &ouml;zniteliğin ebeveyn elemanına konumlar
XMLReader bool move To First Attribute	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool move To First Attribute	imleci ilk &ouml;zniteliğe konumlar
XMLReader next $isim	gidilecek sonraki düğümün yerel ismi
XMLReader bool next	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool next string $isim	alt ağa&ccedil;ların t&uuml;m&uuml;n&uuml; atlayıp sonraki d&uuml;ğ&uuml;me gider
XMLReader open $URI	belgenin adresi
XMLReader open $seçenekler	libxml_* sabitlerinden oluşan bir bit maskesi
XMLReader open $kodlama	belgenin karakter kodlaması veya null
XMLReader bool open	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool open string $URI string $kodlama int $seçenekler	&ccedil;&ouml;zemlenecek xml belgeyi i&ccedil;eren adresi belirler
XMLReader bool read	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool read	belgedeki sonraki d&uuml;ğ&uuml;me gidilir
XMLReader string read Outer XML	geçerli düğümün içeriğini düğümün kendisiyle birlikte bir dizge olarak döndürür
XMLReader string read Outer XML	ge&ccedil;erli d&uuml;ğ&uuml;m&uuml;n i&ccedil;eriğini d&uuml;ğ&uuml;m&uuml;n kendisiyle birlikte okur
XMLReader string read String	geçerli düğümün içeriğini bir dizge olarak döndürür
XMLReader string read String	ge&ccedil;erli d&uuml;ğ&uuml;m&uuml;n i&ccedil;eriğini bir dizge olarak okur
XMLReader set Parser Property $seçenek	çözümleyici seçeneği sabitleri nden biri
XMLReader set Parser Property $etkin	true atanırsa seçenek etkin olur aksi takdirde seçenek etkisiz olur
XMLReader bool set Parser Property	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool set Parser Property int $seçenek bool $etkin	&ccedil;&ouml;z&uuml;mleyici se&ccedil;eneklerini tanımlar
XMLReader set Relax NGSchema Source $kaynak	relaxng şemasını içeren dizge
XMLReader bool set Relax NGSchema Source	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool set Relax NGSchema Source string $kaynak	belgeyi dizge olarak belirtilen relaxng şemasına g&ouml;re doğrular
XMLReader set Schema $dosya	xsd şemasının dosya yolu
XMLReader bool set Schema	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool set Schema string $dosya	belgeyi xsd şemasına g&ouml;re doğrular
XMLReader xml $kaynak	çözümlenecek xml belgeyi içeren dizge
XMLReader xml $seçenekler	libxml_* sabitlerinden oluşan bir bit maskesi
XMLReader xml $kodlama	belgenin karakter kodlaması veya null
XMLReader bool xml	başarı durumunda true başarısızlık durumunda false döner
XMLReader bool xml string $kaynak string $kodlama int $seçenekler	&ccedil;&ouml;z&uuml;mlenecek xml belge i&ccedil;eriği belirtilir
